{
  "metadata": {
    "timestamp": 1736709641854,
    "page": 15,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Caerind/AwesomeCppGameDev",
      "stars": 1753,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1650390625,
          "content": "# Set default behavior to automatically normalize line endings.\n* text=auto\n\n# Enable Markdown detection\n*.md linguist-detectable=true\n*.md linguist-documentation=false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.7490234375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Xx]64/\n[Xx]86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# TODO: Un-comment the next line if you do not want to checkin \n# your web deploy settings because they may include unencrypted\n# passwords\n#*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Microsoft Azure ApplicationInsights config file\nApplicationInsights.config\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# LightSwitch generated files\nGeneratedArtifacts/\nModelManifest.xml\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/\n\nVS/*"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 237.224609375,
          "content": "# Awesome list of C++ GameDev project\n\nA curated list of awesome C++ (mainly) things for Game Development. Inspired by awesome-... stuff. \n\n~2000 projects listed here!\n\nIf you want to add projects here, do a pull request or open an issue! \n\n(Maybe some new categories should be added to sort everything a bit better)\n(Maybe some repositories could be removed from the list too)\n\n<!-- START -->\n## Index\n- [C++](#C++)\n- [Libraries](#Libraries)\n- [Engines](#Engines)\n- [Maths](#Maths)\n- [Graphics](#Graphics)\n- [Multimedia](#Multimedia)\n- [Physics](#Physics)\n- [Networking](#Networking)\n- [AI](#AI)\n- [Scripting](#Scripting)\n- [GameProgramming](#GameProgramming)\n- [Rust](#Rust)\n- [Tools](#Tools)\n- [Awesome](#Awesome)\n- [GameProgrammerPath](#GameProgrammerPath)\n- [GameDesign](#GameDesign)\n- [Website](#Website)\n\n## C++\n[Back to top](#Index)\n- [rangeless](https://github.com/ast-al/rangeless) : c++ LINQ -like library of higher-order functions for data manipulation\n- [variant](https://github.com/mpark/variant) : C++17 `std::variant` for C++11/14/17\n- [tweeny](https://github.com/mobius3/tweeny) : A modern C++ tweening library\n- [arrow](https://github.com/apache/arrow) : Apache Arrow is a cross-language development platform for in-memory data. It specifies a standardized language-independent columnar memory format for flat and hierarchical data, organized for effic…\n- [EAMain](https://github.com/electronicarts/EAMain) : EAMain provides a multi-platform entry point used for platforms that don't support console output, return codes and command-line arguments.\n- [cxx14-graph](https://github.com/asutton/cxx14-graph) : A C++ 14 implementation of graph data structures\n- [lex](https://github.com/foonathan/lex) : C++14 fast and efficient tokenizer\n- [lager](https://github.com/arximboldi/lager) : C++ library for value-oriented design using the unidirectional data-flow architecture (Redux for C++)\n- [cpp-std-fwd](https://github.com/Philip-Trettner/cpp-std-fwd) : forward declarations for C++ std headers\n- [hedley](https://github.com/nemequ/hedley) : A C/C++ header to help move #ifdefs out of your code\n- [scnlib](https://github.com/eliaskosunen/scnlib) : scanf for modern C++\n- [pipet](https://github.com/kenavolic/pipet) : c++ library for building lightweight processing pipeline at compile-time\n- [scope_guard](https://github.com/Neargye/scope_guard) : Scope Guard & Defer C++\n- [pdbex](https://github.com/wbenny/pdbex) : pdbex is a utility for reconstructing structures and unions from the PDB into compilable C headers\n- [optional-lite](https://github.com/martinmoene/optional-lite) : optional lite - A C++17-like optional, a nullable object for C++98, C++11 and later in a single-file header-only library\n- [libinsanity](https://github.com/wm4/libinsanity) : libc functions (and related) without bugs mandated by standard C or common OSes\n- [kangaru](https://github.com/gracicot/kangaru) : A dependency injection container for C++11, C++14 and later\n- [CppCoreGuidelines](https://github.com/isocpp/CppCoreGuidelines) : The C++ Core Guidelines are a set of tried-and-true guidelines, rules, and best practices about coding in C++\n- [span-lite](https://github.com/martinmoene/span-lite) : span lite - A C++20-like span for C++98, C++11 and later in a single-file header-only library\n- [replxx](https://github.com/AmokHuginnsson/replxx) : A readline and libedit replacement that supports UTF-8, syntax highlighting, hints and Windows and is BSD licensed.\n- [stateful_pointer](https://github.com/HDembinski/stateful_pointer) : Use unused bits in your pointer\n- [type_erasure_and_dispatch](https://github.com/abwilson/type_erasure_and_dispatch) : Code related to ACCU meet up talk.\n- [modern-cpp-features](https://github.com/AnthonyCalandra/modern-cpp-features) : A cheatsheet of modern C++ language and library features.\n- [msgpack11](https://github.com/ar90n/msgpack11) : A tiny MessagePack library for C++11 (msgpack.org[C++11])\n- [trackable_ptr](https://github.com/tower120/trackable_ptr) : Smart pointer for any movable objects. When trackable object moved/destroyed, trackers updated with new object's pointer.\n- [reactive](https://github.com/tower120/reactive) : Simple, non intrusive reactive programming library for C++. (Events + Observable Properties + Reactive Properties)\n- [liberasure](https://github.com/atomgalaxy/liberasure) : A no-dependencies C++ extensible type erasure library\n- [any](https://github.com/pahowes/any) : A simple variant type for C++\n- [FastDynamicCast](https://github.com/tobspr/FastDynamicCast) : Fast dynamic cast in C++ for MSVC, outperforming the regular dynamic cast by up to 25 times\n- [0xABAD1DEA](https://github.com/graphitemaster/0xABAD1DEA) : Static global objects with constructors and destructors made useful in C++\n- [PubBus](https://github.com/eXpl0it3r/PubBus) : A simple implementation of a MessageBus.\n- [cppbestpractices](https://github.com/lefticus/cppbestpractices) : Collaborative Collection of C++ Best Practices\n- [emscripten](https://github.com/emscripten-core/emscripten) : Emscripten: An LLVM-to-Web Compiler\n- [gcpp](https://github.com/hsutter/gcpp) : Experimental deferred and unordered destruction library for C++\n- [patterns](https://github.com/mpark/patterns) : Pattern Matching in C++\n- [cmcstl2](https://github.com/CaseyCarter/cmcstl2) : An implementation of C++ Extensions for Ranges\n- [invoke.hpp](https://github.com/BlackMATov/invoke.hpp) : std::invoke/std::apply analogs for C++14\n- [cppbackport](https://github.com/PollardBanknote/cppbackport) : A backport of C++11/14/17 features to earlier versions\n- [libuv](https://github.com/libuv/libuv) : Cross-platform asynchronous I/O\n- [uvw](https://github.com/skypjack/uvw) : Header-only, event based, tiny and easy to use libuv wrapper in modern C++\n- [opt](https://github.com/mpusz/opt) : Class template designed to express optionality without having to sacrifice memory to store additional bool flag\n- [shared_ptr_2.0](https://github.com/mpusz/shared_ptr_2.0) : \n- [undo](https://github.com/dacap/undo) : C++ library to implement non-linear undo/redo functionality\n- [Configuru](https://github.com/emilk/Configuru) : Experimental config library for C++\n- [strong_typedef](https://github.com/anthonywilliams/strong_typedef) : A class template that creates a new type that is distinct from the underlying type, but convertible to and from it\n- [dry-comparisons](https://github.com/rollbear/dry-comparisons) : C++17 Utility classes for comparing multiple values in one simple expression\n- [determine_c_or_cpp](https://github.com/shafik/determine_c_or_cpp) : Determine programatically C from C++ as well as various versions\n- [optional](https://github.com/TartanLlama/optional) : C++11/14/17 std::optional with functional-style extensions and reference support\n- [promise-cpp](https://github.com/xhawk18/promise-cpp) : C++ promise/A+ library in Javascript style.\n- [mod](https://github.com/raysan5/mod) : MASTERS of DATA, a course about videogames data processing and optimization\n- [ring-span-lite](https://github.com/martinmoene/ring-span-lite) : ring-span lite - A C++yy-like ring_span type for C++98, C++11 and later in a single-file header-only library\n- [outcome](https://github.com/ned14/outcome) : Provides very lightweight outcome<T> and result<T> (non-Boost edition)\n- [semver](https://github.com/vector-of-bool/semver) : A C++ Library for Dealing with Semantic Versioning\n- [cpp-cheatsheet](https://github.com/mortennobel/cpp-cheatsheet) : Modern C++ Cheatsheet\n- [BareMetalLib](https://github.com/kuanweeloong/BareMetalLib) : A C++ support library for bare-metal programming\n- [Mastering-Cpp-Game-Development](https://github.com/PacktPublishing/Mastering-Cpp-Game-Development) : Code files for Mastering C++ Game Development, published by Packt\n- [std_function](https://github.com/skarupke/std_function) : \n- [ska_sort](https://github.com/skarupke/ska_sort) : \n- [strong_type](https://github.com/doom/strong_type) : C++ implementation of strong types\n- [type_safe](https://github.com/foonathan/type_safe) : Zero overhead utilities for preventing bugs at compile time\n- Bits\n  - [BigInt](https://github.com/DolaBMOon/BigInt) : BigInt in C++ using bitset\n  - [huge-long-number](https://github.com/daidodo/huge-long-number) : This is an implementation of arbitrary range of integers written in C++14\n  - [BigInteger](https://github.com/stevenBorisko/BigInteger) : Be limited not by the size of your register but by the bulk of your RAM.\n  - [bitmask](https://github.com/oliora/bitmask) : A generic implementation of the BitmaskType C++ concept\n  - [BigInteger](https://github.com/panks/BigInteger) : An Implementation of BigInteger library in C++\n  - [bigint](https://github.com/kasparsklavins/bigint) : A lightweight big integer library for c++\n  - [bitwise](https://github.com/pervognsen/bitwise) : Bitwise is an educational project where we create the software/hardware stack for a computer from scratch.\n  - [varint](https://github.com/stoklund/varint) : Variable-length integer encodings.\n  - [mppp](https://github.com/bluescarni/mppp) : Multiprecision for modern C++\n  - [enum-flags](https://github.com/grisumbras/enum-flags) : Bit flags for C++11 scoped enums\n- MultiThreading\n  - [marl](https://github.com/google/marl) : A hybrid thread / fiber task scheduler written in C++ 11\n  - [EAThread](https://github.com/electronicarts/EAThread) : EAThread implements a unified cross-platform interface for multithreaded programming.\n  - [arcana.cpp](https://github.com/microsoft/arcana.cpp) : Arcana.cpp is a collection of helpers and utility code for low overhead, cross platform C++ implementation of task-based asynchrony.\n  - [relacy](https://github.com/dvyukov/relacy) : Automatically exported from code.google.com/p/relacy\n  - [partr](https://github.com/kpamnany/partr) : Parallel Tasks Runtime\n  - [deadlockempire.github.io](https://github.com/deadlockempire/deadlockempire.github.io) : The Deadlock Empire: Slay dragons, learn concurrency!\n  - [MAN](https://github.com/qnope/MAN) : Man is Thread Pool in C++17\n  - [cpp-concurrency](https://github.com/revsic/cpp-concurrency) : cpp implementation of golang style concurrency\n  - [tbb](https://github.com/intel/tbb) : Official Threading Building Blocks (TBB) GitHub repository. For Commercial Intel® TBB distribution, please click here: https://software.intel.com/en-us/tbb\n  - [bikeshed](https://github.com/DanEngelbrecht/bikeshed) : Lock free hierarchical work scheduler\n  - [lucy_job_system](https://github.com/nem0/lucy_job_system) : Fiber-based job system with extremely simple API\n  - [libgo](https://github.com/yyzybb537/libgo) : Go-style concurrency in C++11\n  - [ThreadPool](https://github.com/Fdhvdu/ThreadPool) : A fastest, exception-safety and pure C++17 thread pool.\n  - [thread_pool](https://github.com/Tyler-Hardin/thread_pool) : Thread pool using std::* primitives from C++17, with optional priority queue/greenthreading for POSIX.\n  - [concurrentqueue](https://github.com/cameron314/concurrentqueue) : A fast multi-producer, multi-consumer lock-free concurrent queue for C++11\n  - [ck](https://github.com/concurrencykit/ck) : Concurrency primitives, safe memory reclamation mechanisms and non-blocking (including lock-free) data structures designed to aid in the research, design and implementation of high performance conc…\n  - [GTS-GamesTaskScheduler](https://github.com/GameTechDev/GTS-GamesTaskScheduler) : A task scheduling framework designed for the needs of game developers.\n  - [cpp-taskflow](https://github.com/clin99/cpp-taskflow) : Modern C++ Parallel Task Programming Library\n  - [cppcoro](https://github.com/lewissbaker/cppcoro) : A library of C++ coroutine abstractions for the coroutines TS\n  - [cpp-taskflow](https://github.com/cpp-taskflow/cpp-taskflow) : A Modern C++ Parallel Task Programming Library\n  - [mx](https://github.com/flipcoder/mx) : C++ coroutine await, yield, channels, i/o events (single header + link to boost)\n  - [px](https://github.com/pplux/px) : Single header C++ Libraries for Thread Scheduling, Rendering, and so on...\n  - [FiberTaskingLib](https://github.com/RichieSams/FiberTaskingLib) : A library for enabling task-based multi-threading. It allows execution of task graphs with arbitrary dependencies.\n  - [elle](https://github.com/infinit/elle) : The Elle coroutine-based asynchronous C++ development framework.\n  - [thread-pool](https://github.com/mtrebi/thread-pool) : Thread pool implementation using c++11 threads\n  - [thrust](https://github.com/thrust/thrust) : Thrust is a C++ parallel programming library which resembles the C++ Standard Library.\n  - [enkiTS](https://github.com/dougbinks/enkiTS) : C++ and C multithreading task scheduler\n  - [enkiTSExamples](https://github.com/dougbinks/enkiTSExamples) : Examples for enkiTS\n  - [fiber](https://github.com/paladin-t/fiber) : Header only cross platform wrapper of fiber API.\n  - [px_sched](https://github.com/pplux/px_sched) : Single Header C++11 Task Scheduler\n  - [termite-jobs](https://github.com/septag/termite-jobs) : Fast, multiplatform fiber based job dispatcher based on Naughty Dogs' GDC2015 talk.\n  - [jobxx](https://github.com/seanmiddleditch/jobxx) : Lightweight C++ task system\n  - [thread-pool-cpp](https://github.com/inkooboo/thread-pool-cpp) : High performance C++11 thread pool\n  - [ThreadPool](https://github.com/nbsdx/ThreadPool) : Lightweight, Generic, Pure C++11 ThreadPool\n  - [Scheduler](https://github.com/Bosma/Scheduler) : Modern C++ Scheduling Library\n  - [dwThreadPool](https://github.com/diharaw/dwThreadPool) : A simple, header-only, dependency-free, C++ 11 based ThreadPool library.\n  - [CTPL](https://github.com/vit-vit/CTPL) : Modern and efficient C++ Thread Pool Library\n  - [ThreadPool](https://github.com/progschj/ThreadPool) : A simple C++11 Thread Pool implementation\n  - [Awl](https://github.com/Yalir/Awl) : Awl (Asynchronous Work Library) is a C++ library that aims at making parallel programming as easy as possible.\n  - [asio](https://github.com/chriskohlhoff/asio) : Asio C++ Library\n  - [MPMCQueue](https://github.com/rigtorp/MPMCQueue) : A bounded multi-producer multi-consumer lock-free queue written in C++11\n  - [coroutine](https://github.com/tonbit/coroutine) : C++11 single .h asymmetric coroutine implementation via ucontext / fiber\n  - [coroutines](https://github.com/mpusz/coroutines) : \n  - [coro](https://github.com/Quuxplusone/coro) : Single-header library facilities for C++2a Coroutines\n  - [executors](https://github.com/chriskohlhoff/executors) : C++ library for executors\n  - [parallel-util](https://github.com/yuki-koyama/parallel-util) : Simple header-only implementation of \"parallel_for\" and \"parallel_map\" for C++11\n  - [parallel-hashmap](https://github.com/greg7mdp/parallel-hashmap) : A family of header-only, very fast and memory-friendly hashmap and btree containers.\n  - [concurrent-deque](https://github.com/ssbl/concurrent-deque) : Lock-free concurrent work stealing deque in C++\n  - [ParallelComputingPlayground](https://github.com/mortennobel/ParallelComputingPlayground) : Shows different programming techniques for parallel computing on CPU and GPU\n  - [awesome-lockfree](https://github.com/rigtorp/awesome-lockfree) : A collection of resources on wait-free and lock-free programming\n- Memory\n  - [dlmalloc](https://github.com/ARMmbed/dlmalloc) : Doug Lea's malloc\n  - [deluxe68](https://github.com/deplinenoise/deluxe68) : A simple register allocator frontend for 68k assembly\n  - [KernelReadWriteMemory](https://github.com/Zer0Mem0ry/KernelReadWriteMemory) : Simple code to manipulate the memory of a usermode process from kernel.\n  - [malloc_geiger](https://github.com/laserallan/malloc_geiger) : \n  - [mimalloc-bench](https://github.com/daanx/mimalloc-bench) : Suite for benchmarking malloc implementations.\n  - [allocator_bench](https://github.com/SamSaffron/allocator_bench) : bench of various memory allocators\n  - [mio](https://github.com/mandreyel/mio) : Cross-platform C++11 header-only library for memory mapped file IO\n  - [snmalloc](https://github.com/microsoft/snmalloc) : Message passing based allocator\n  - [mimalloc](https://github.com/microsoft/mimalloc) : mimalloc is a compact general purpose allocator with excellent performance.\n  - [hardened_malloc](https://github.com/GrapheneOS/hardened_malloc) : Hardened allocator designed for modern systems. It has integration into Android's Bionic libc and can be used externally with musl and glibc as a dynamic library for use on other Linux-based platfo…\n  - [objectpool](https://github.com/bitshifter/objectpool) : Object pool implementation in C++11\n  - [rampin](https://github.com/FRex/rampin) : Try to make Windows preload file into RAM by memory mapping it\n  - [tgc](https://github.com/orangeduck/tgc) : A Tiny Garbage Collector for C\n  - [Mesh](https://github.com/plasma-umass/Mesh) : A memory allocator that automatically reduces the memory footprint of C/C++ applications.\n  - [memory-dumper](https://github.com/alexandernst/memory-dumper) : A tool for dumping files from processes memory\n  - [alloc-test](https://github.com/node-dot-cpp/alloc-test) : Cross-platform benchmarking for memory allocators, aiming to be as close to real world as it is practical\n  - [memory-allocators](https://github.com/mtrebi/memory-allocators) : Custom memory allocators in C++ to improve the performance of dynamic memory allocation\n  - [drmemory](https://github.com/DynamoRIO/drmemory) : Memory Debugger for Windows, Linux, Mac, and Android\n  - [rpmalloc](https://github.com/mjansson/rpmalloc) : Public domain cross platform lock free thread caching 16-byte aligned memory allocator implemented in C\n  - [jemalloc](https://github.com/jemalloc/jemalloc) : \n  - [cpp-mempool](https://github.com/hardikp/cpp-mempool) : C++ header-only mempool library\n  - [incppect](https://github.com/ggerganov/incppect) : Inspect C++ memory in the browser\n  - [injection](https://github.com/odzhan/injection) : Windows process injection methods\n  - [tiny](https://github.com/foonathan/tiny) : low-level library for minimizing the size of your types\n  - [memory](https://github.com/foonathan/memory) : STL compatible C++ memory allocator library using a new RawAllocator concept that is similar to an Allocator but easier to use and write.\n- Strings\n  - [ryu](https://github.com/ulfjack/ryu) : Converts floating point numbers to decimal strings\n  - [MengRao/str](https://github.com/MengRao/str) : A SIMD optimized fixed-length string class along with an adaptive hash table for fast searching\n  - [inplace_string](https://github.com/mpusz/inplace_string) : `mp::inplace_string<CharT, MaxSize, Traits>` is a `std::string`-like class template that stores text content in-place inside the class\n  - [arabtype](https://github.com/eloraiby/arabtype) : a small and simple implementation that transform isolated arabic utf8 character strings into contextual forms.\n  - [unify](https://github.com/r-lyeh-archived/unify) : A C++11 function to normalize resource identificators\n  - [unicode](https://github.com/dabbertorres/unicode) : C++ UTF-8 Strings and Utilities\n  - [ocornut/str](https://github.com/ocornut/str) : Simple C++ string type with an optional local buffer\n  - [SuperString](https://github.com/btwael/SuperString) : A fast and memory-optimized string library for C++\n  - [stdstring.h](https://github.com/r-lyeh/stdstring.h) : C string utils library (STB style, header-only).\n  - [text_view](https://github.com/tahonermann/text_view) : A C++ concepts and range based character encoding and code point enumeration library\n  - [rapidstring](https://github.com/boyerjohn/rapidstring) : Maybe the fastest string library ever.\n  - [utfz](https://github.com/IMQS/utfz) : Tiny C++ UTF-8 library - safe, no exceptions\n  - [utf8.h](https://github.com/sheredom/utf8.h) : single header utf8 string functions for C and C++\n  - [tiny-utf8](https://github.com/DuffsDevice/tiny-utf8) : Unicode (UTF-8) capable std::string\n  - [str_view](https://github.com/sawickiap/str_view) : Null-termination-aware string-view class for C++\n  - [Obfuscate](https://github.com/adamyaxley/Obfuscate) : Guaranteed compile-time string literal obfuscation header-only library for C++14\n  - [stringencoders](https://github.com/client9/stringencoders) : Fast c-string transformations\n  - [string-view-lite](https://github.com/martinmoene/string-view-lite) : string_view lite - A C++17-like string_view for C++98, C++11 and later in a single-file header-only library\n  - [cutf](https://github.com/tapika/cutf) : utf-8 <> wchar_t conversion functions for C and C++\n  - [Apris](https://github.com/Hapaxia/Apris) : String processor using banks and alternatives\n  - [string_id](https://github.com/foonathan/string_id) : A small C++ library to handle hashed strings serving as identifiers.\n- Parsers\n  - [inih](https://github.com/benhoyt/inih) : Simple .INI file parser in C, good for embedded systems\n  - [simple-ini-reader](https://github.com/seb-jones/simple-ini-reader) : Fast, Simple, Public Domain INI Reader written in C\n  - [rapidjson](https://github.com/Tencent/rapidjson) : A fast JSON parser/generator for C++ with both SAX/DOM style API\n  - [json.h](https://github.com/sheredom/json.h) : json parser for C and C++\n  - [ezxml](https://github.com/lxfontes/ezxml) : ezxml - XML parser\n  - [jsmn](https://github.com/zserge/jsmn) : Jsmn is a world fastest JSON parser/tokenizer. This is the official repo replacing the old one at Bitbucket\n  - [fast_obj](https://github.com/thisistherk/fast_obj) : Fast C OBJ parser\n  - [cpptoml](https://github.com/skystrife/cpptoml) : cpptoml is a header-only library for parsing TOML\n  - [nanocsv](https://github.com/lighttransport/nanocsv) : Multithreaded header only C++11 CSV parser\n  - [picojson](https://github.com/kazuho/picojson) : a header-file-only, JSON parser serializer in C++\n  - [js0n](https://github.com/quartzjer/js0n) : Flexible Zero-Footprint JSON Parser in C\n  - [CppCmb](https://github.com/LPeter1997/CppCmb) : A generic C++17 parser-combinator library with a natural grammar notation.\n  - [obj_lib](https://github.com/rampantpixels/obj_lib) : OBJ reader and writer library\n  - [ffmpeg-cpp](https://github.com/Raveler/ffmpeg-cpp) : A clean, easy-to-use C++ wrapper around the ffmpeg libraries\n  - [Parser-Combinators](https://github.com/keean/Parser-Combinators) : C++ parser combinator library\n  - [tinyply](https://github.com/ddiakopoulos/tinyply) : C++11 ply 3d mesh format importer & exporter\n  - [json](https://github.com/mjansson/json) : Single file in-place JSON/SJSON parser\n  - [simdjson](https://github.com/lemire/simdjson) : Parsing gigabytes of JSON per second\n  - [sajson](https://github.com/chadaustin/sajson) : Lightweight, extremely high-performance JSON parser for C++11\n  - [tinyddsloader](https://github.com/benikabocha/tinyddsloader) : Tiny DDS file loader\n  - [sjson-cpp](https://github.com/nfrechette/sjson-cpp) : An Simplified JSON (SJSON) C++ reader and writer\n  - [xlnt](https://github.com/tfussell/xlnt) : Cross-platform user-friendly xlsx library for C++14\n  - [assfile](https://github.com/jtsiomb/assfile) : C library for accessing assets (read-only data) from many different sources, with an fopen/fread-like API.\n  - [sjson](https://github.com/septag/sjson) : Fast and portable single-header C file Json encoder/decoder\n  - [melo](https://github.com/jing-interactive/melo) : melo is mesh loader for OBJ, glTF2 and PLY\n  - [jo](https://github.com/jpmens/jo) : JSON output from a shell\n  - [huffandpuff](https://github.com/adamierymenko/huffandpuff) : Minimal Huffman coder/decoder\n  - [fbx](https://github.com/jskorepa/fbx) : C++ Library for reading and writing FBX files\n  - [csv-parser](https://github.com/vincentlaucsb/csv-parser) : A modern C++ library for reading, writing, and analyzing CSV (and similar) files.\n  - [enkiMI](https://github.com/dougbinks/enkiMI) : C and C++ Minecraft Importer library\n  - [sjson](https://github.com/dougbinks/sjson) : sjson: no {} needed around the whole file; \"=\" is allowed instead of \":\"; quotes around the key are optional; commas after values are optional; read access through compile time hashes much faster t…\n  - [OpenFBX](https://github.com/nem0/OpenFBX) : Lightweight open source FBX importer\n  - [fbx](https://github.com/origamicomet/fbx) : Single-file binary FBX importer.\n  - [tinyobjloader](https://github.com/syoyo/tinyobjloader) : Tiny but powerful single file wavefront obj loader\n  - [DevIL](https://github.com/DentonW/DevIL) : Developer's Image Library (DevIL) is a cross-platform image library utilizing a simple syntax to load, save, convert, manipulate, filter, and display a variety of images with ease. It is highly por…\n  - [json](https://github.com/taocpp/json) : C++ header-only JSON library\n  - [glw_json](https://github.com/yak32/glw_json) : Single-header fast and compact C++ library for JSON serialization, no memory allocation during parsing.\n  - [svgpp](https://github.com/svgpp/svgpp) : C++ SVG library\n  - [Vili](https://github.com/Sygmei/Vili) : A nice and readable data format !\n  - [SimpleJSON](https://github.com/nbsdx/SimpleJSON) : Simple C++ JSON library\n  - [ini](https://github.com/rxi/ini) : A tiny ANSI C library for loading .ini config files\n  - [cfgpath](https://github.com/Malvineous/cfgpath) : Cross platform C header for obtaining paths to user configuration files and directories\n  - [juson](https://github.com/wgtdkp/juson) : lightweight json parser in c\n  - [simpleini](https://github.com/brofield/simpleini) : Cross-platform C++ library providing a simple API to read and write INI-style configuration files\n  - [jsonpack](https://github.com/ymglez/jsonpack) : JsonPack is a high-performance and extremely easy-to-use JSON serialization library\n  - [yaml-cpp](https://github.com/jbeder/yaml-cpp) : A YAML parser and emitter in C++\n  - [json](https://github.com/nlohmann/json) : JSON for Modern C++\n  - [pugixml](https://github.com/zeux/pugixml) : Light-weight, simple and fast XML parser for C++ with XPath support\n  - [rapidcsv](https://github.com/d99kris/rapidcsv) : C++ CSV parser library\n  - [fast-cpp-csv-parser](https://github.com/ben-strasser/fast-cpp-csv-parser) : fast-cpp-csv-parser\n  - [csvstream](https://github.com/awdeorio/csvstream) : An easy-to-use CSV file parser for C++\n  - [Qxlnt](https://github.com/QtExcel/Qxlnt) : Use xlnt in Qt5. xlnt is cross-platform user-friendly xlsx library for C++14.\n  - [Qlibxlsxwriter](https://github.com/QtExcel/Qlibxlsxwriter) : Use libxlsxwriter in Qt5. libxlsxwriter is a C library for creating Excel XLSX files.\n  - [QSimpleXlsxWriter](https://github.com/QtExcel/QSimpleXlsxWriter) : Use SimpleXlsxWriter in Qt5. SimpleXlsxWriter is C++ library for creating XLSX files for MS Excel 2007 and above.\n  - [QXlsx](https://github.com/QtExcel/QXlsx) : Excel file(*.xlsx) reader/writer library using Qt5. Descendant of QtXlsx.\n  - [simdjson](https://github.com/simdjson/simdjson) : Parsing gigabytes of JSON per second\n  - [DuckX](https://github.com/amiremohamadi/DuckX) : C++ library for creating and updating Microsoft Word (.docx) files.\n  - [inih](https://github.com/flingengine/inih) : This is a header only C++ version of inih.\n- FileSystem\n  - [filesystem](https://github.com/gulrak/filesystem) : An implementation of C++17 std::filesystem for C++11 /C++14/C++17 on Windows, macOS and Linux.\n  - [littlefs](https://github.com/ARMmbed/littlefs) : A little fail-safe filesystem designed for microcontrollers\n  - [watchman](https://github.com/facebook/watchman) : Watches files and records, or triggers actions, when they change.\n  - [edwork](https://github.com/eduardsui/edwork) : Decentralized, distributed read-write filesystem\n  - [dr_fs](https://github.com/dr-soft/dr_fs) : Single file libraries for file system related stuff\n  - [apathy](https://github.com/dlecocq/apathy) : C++ Path Manipulation\n  - [filesystem](https://github.com/wjakob/filesystem) : A tiny self-contained path manipulation library for C++\n  - [tinydir](https://github.com/cxong/tinydir) : Lightweight, portable and easy to integrate C directory and file reader\n  - [dirent](https://github.com/tronkko/dirent) : C/C++ library for retrieving information on files and directories\n  - [whereami](https://github.com/gpakosz/whereami) : Locate the current executable and the current module/library on the file system\n  - [PhysFS](https://github.com/icculus/physfs) : Abstracts access to files distributed across separate archives.\n  - [vfspp](https://github.com/nextgeniuspro/vfspp) : Virtual File System C++\n- Reflection & Serialization\n  - [putils_reflection](https://github.com/phisko/reflection/) - A simple, stand-alone, header-only and easily pluggable `constexpr` reflection system.\n  - [Vzor](https://github.com/nikoladimitroff/Vzor) : Vzor is a reflection library for C++, with interface in Python and C++, macroless, intrusiveless, working on top modern C++ attributes\n  - [magic_enum](https://github.com/Neargye/magic_enum) : Static reflection for enums (to string, from string, iteration) for modern C++, work with any enum type without any macro or boilerplate code\n  - [ArticleEnumClass-v2](https://github.com/Dalzhim/ArticleEnumClass-v2) : \n  - [tinyrefl](https://github.com/Manu343726/tinyrefl) : A work in progress minimal C++ static reflection API and codegen tool.\n  - [datalibrary](https://github.com/wc-duck/datalibrary) : Open Source Data Library for data serialization.\n  - [enum_traits](https://github.com/willwray/enum_traits) : Type traits for properties of C / C++ enum types\n  - [enum_reflect](https://github.com/willwray/enum_reflect) : A demo repo for enum_traits\n  - [cpgf](https://github.com/cpgf/cpgf) : cpgf library\n  - [meta](https://github.com/skypjack/meta) : Header-only, non-intrusive and macro-free runtime reflection system in C++\n  - [metareflect](https://github.com/Leandros/metareflect) : Metareflect is a lightweight reflection system for C++, based on LLVM and Clangs libtooling.\n  - [zserio](https://github.com/ndsev/zserio) : zero sugar, zero fat, zero serialization overhead\n  - [rttr](https://github.com/rttrorg/rttr) : C++ Reflection Library\n  - [cista](https://github.com/felixguendling/cista) : Simple C++ Serialization\n  - [ponder](https://github.com/billyquith/ponder) : C++ reflection library\n  - [tekari](https://github.com/rgl-epfl/tekari) : A visualization and editing tool for reflectance data\n  - [bitsery](https://github.com/fraillt/bitsery) : Your binary serialization library\n  - [tstype](https://github.com/timkerchmar/tstype) : Lightweight C++ RTTI library\n  - [capnproto](https://github.com/capnproto/capnproto) : Cap'n Proto serialization/RPC system - core tools and C++ library\n  - [reflect](https://github.com/garettbass/reflect) : easy reflection and serialization for C++17\n  - [cpp-serializers](https://github.com/thekvs/cpp-serializers) : Benchmark comparing various data serialization libraries (thrift, protobuf etc.) for C++\n  - [cppexpose](https://github.com/cginternals/cppexpose) : C++ library for type introspection, reflection, and scripting interface\n  - [iguana](https://github.com/qicosmos/iguana) : universal serialization engine\n  - [Reflex](https://github.com/Cylix/Reflex) : C++14 Reflection Library\n  - [reflect](https://github.com/xyzdev/reflect) : Reflection and serialization in C++\n  - [cpp-generic-serialize](https://github.com/xdbr/cpp-generic-serialize) : C++11 Header-only generic binary-serialization for arbitrary types (and nested containers)\n  - [rpoco](https://github.com/whizzter/rpoco) : (R)eflect (P)lain (O)ld (C)++ (O)bjects, is a small header based reflection system that supports JSON serialization,etc\n  - [CPP-Reflection](https://github.com/AustinBrunkhorst/CPP-Reflection) : C++ Reflection Parser / Runtime Skeleton\n  - [cereal](https://github.com/USCiLab/cereal) : A C++11 library for serialization\n  - [cmake-reflection-template](https://github.com/onqtam/cmake-reflection-template) : A template for simple C++ reflection done with CMake and Python (no other external tools)\n  - [MetaStuff](https://github.com/eliasdaler/MetaStuff) : Code I use in my game for all serialization/deserialization/introspection stuff\n  - [type_name](https://github.com/willwray/type_name) : C++ type_name template utilities for pretty-printing type names\n  - [smartenum](https://github.com/therocode/smartenum) : Macros for declaring enums in C++ that include to_string conversion and looping through all enum values\n  - [better-enums](https://github.com/aantron/better-enums) : C++ compile-time enum to string, iteration, in a single header file\n  - [magic_get](https://github.com/apolukhin/magic_get) : std::tuple like methods for user defined types without any macro or boilerplate code\n  - [ctti](https://github.com/Manu343726/ctti) : Compile Time Type Information for C++\n  - [nameof](https://github.com/Neargye/nameof) : Nameof operator for modern C++, simply obtain the name of a variable, type, function, macro, and enum\n  - [flatbuffers](https://github.com/google/flatbuffers) : FlatBuffers: Memory Efficient Serialization Library\n  - [protobuf](https://github.com/protocolbuffers/protobuf) : Protocol Buffers - Google's data interchange format\n  - [archive](https://github.com/voidah/archive) : Simple, compact, endian-safe and header-only serialization/deserialization for C++\n  - [reflect](https://github.com/clarkok/reflect) : C++ reflect library in less than 200 lines\n  - [data_desk](https://github.com/ryanfleury/data_desk) : A data description language parser with introspection and custom code capabilities, intended for compile-time code generation in projects.\n  - [msgpack-c](https://github.com/msgpack/msgpack-c) : MessagePack implementation for C and C++ / msgpack.org[C/C++]\n  - [wise_enum](https://github.com/quicknir/wise_enum) : A reflective enum implementation for C++\n  - [enum.hpp](https://github.com/BlackMATov/enum.hpp) : C++17 compile-time enum reflection library\n  - [reflection](https://github.com/skarupke/reflection) : \n- Metaprogramming\n  - [putils_meta](https://github.com/phisko/meta/) - Phisko's metaprogramming utilities. Collection of type traits and compile-time helpers.\n  - [monster](https://github.com/deepgrace/monster) : The Art of Template MetaProgramming in Modern C++\n  - [STT-C-Compile-Time-Snake](https://github.com/mattbierner/STT-C-Compile-Time-Snake) : Snake/Nibbler implementation using C++ template metaprogamming\n  - [brigand](https://github.com/edouarda/brigand) : Instant compile time C++ 11 metaprogramming library\n  - [cxl](https://github.com/tacticalmelonfarmer/cxl) : A C++17 metaprogramming library. Strings, Parsing, Typelists, Aggregate to Tuple conversions and Constant integral literals\n  - [hana](https://github.com/boostorg/hana) : Your standard library for metaprogramming\n- Functional Programming\n  - [cpp_functional_programming](https://github.com/graninas/cpp_functional_programming) : List of materials about functional programming in C++\n  - [hof](https://github.com/boostorg/hof) : Higher-order functions for c++\n  - [easing-functions](https://github.com/nicolausYes/easing-functions) : Easing functions implemented in C++\n  - [luna-studio](https://github.com/luna/luna-studio) : An IDE for hybrid textual and visual functional programming.\n  - [ftl](https://github.com/beark/ftl) : C++ template library for fans of functional programming\n  - [Function](https://github.com/rigtorp/Function) : Heap allocation free version of C++11 std::function\n  - [fixed_size_function](https://github.com/pmed/fixed_size_function) : Fixed size function wrapper like std::function\n  - [FastDelegate](https://github.com/kaidokert/FastDelegate) : C++11 version of Don Clugston's FastDelegate library, by Ceniza.\n  - [any_function](https://github.com/sgorsten/any_function) : any_function is a functional counterpart to std::any\n  - [delegates](https://github.com/mamedev/delegates) : Fast delegates implementation\n  - [SLACC](https://github.com/RippeR37/SLACC) : Simple Lightweight Adaptable Command Console\n  - [function_ref](https://github.com/TartanLlama/function_ref) : A lightweight, non-owning reference to a callable.\n  - [expected](https://github.com/TartanLlama/expected) : C++11/14/17 std::expected with functional-style extensions\n  - [pluscallback](https://github.com/codeplea/pluscallback) : easy to use callback library for C++\n  - [asyncpp](https://github.com/paulrademacher/asyncpp) : C++ async operations\n  - [coro](https://github.com/mfichman/coro) : Modern coroutine library for C++\n  - [libco](https://github.com/Tencent/libco) : libco is a coroutine library which is widely used in wechat back-end service. It has been running on tens of thousands of machines since 2013.\n  - [eventpp](https://github.com/skypjack/eventpp) : Minimal C++ Event Bus\n  - [FunctionalPlus](https://github.com/Dobiasd/FunctionalPlus) : Functional Programming Library for C++. Write concise and readable C++ code.\n  - [function2](https://github.com/Naios/function2) : Improved and configurable drop-in replacement to std::function that supports move only types, multiple overloads and more\n  - [eventbus](https://github.com/DeveloperPaul123/eventbus) : A simple, header only event bus library written in modern C++17.\n- Containers\n  - [mlib](https://github.com/P-p-H-d/mlib) : Library of generic and type safe containers in pure C language (C99 or C11) for a wide collection of container (comparable to the C++ STL).\n  - [SmartIteratorCpp11](https://github.com/qnope/SmartIteratorCpp11) : Smart iterator like range-v3 in C++11\n  - [prio_queue](https://github.com/rollbear/prio_queue) : C++14 cache friendly B-heap priority queue\n  - [dep_sort](https://github.com/graphitemaster/dep_sort) : Generic topological sorting for sorting a list of dependencies in C++17\n  - [sort](https://github.com/swenson/sort) : Sorting routine implementations in \"template\" C\n  - [frozen](https://github.com/serge-sans-paille/frozen) : a header-only, constexpr alternative to gperf for C++14 users\n  - [scattered](https://github.com/gnzlbg/scattered) : C++ Scattered Containers\n  - [radixsort](https://github.com/bitshifter/radixsort) : Radix sort implementations in C and C++\n  - [judy](https://github.com/threatstack/judy) : A \"general purpose dynamic array library\" in C. Project page: http://sourceforge.net/projects/judy/\n  - [judy-template](https://github.com/mpictor/judy-template) : An implementation of the Judy array, wrapped in a c++ template. Uses Karl Malbrain's implementation, http://code.google.com/p/judyarray/ . Public domain.\n  - [EasyIterator](https://github.com/TheLartians/EasyIterator) : C++ iterators made easy! Zero cost abstractions for C++ iterators.\n  - [plf_colony](https://github.com/mattreecebentley/plf_colony) : An unordered C++ data container providing fast iteration/insertion/erasure while maintaining pointer/iterator validity to non-erased elements regardless of insertions/erasures. Provides higher-perf…\n  - [flat.hpp](https://github.com/BlackMATov/flat.hpp) : Library of flat vector-like based associative containers\n  - [skiplist.h](https://github.com/alpha123/skiplist.h) : Single-header-file, public domain, type-generic C89 skip list implemementation\n  - [avl_tree](https://github.com/ebiggers/avl_tree) : High performance C implementation of AVL trees\n  - [rsht](https://github.com/robstolarz/rsht) : really simple hash table\n  - [array](https://github.com/foonathan/array) : contiguous container library - arrays with customizable allocation, small buffer optimization and more\n  - [sparse-map](https://github.com/Tessil/sparse-map) : C++ implementation of a memory efficient hash map and hash set\n  - [hopscotch-map](https://github.com/Tessil/hopscotch-map) : C++ implementation of a fast hash map and hash set using hopscotch hashing\n  - [flat_hash_map](https://github.com/skarupke/flat_hash_map) : A very fast hashtable\n  - [devector](https://github.com/orlp/devector) : Resizable contiguous sequence container with fast appends on either end.\n  - [hashMap](https://github.com/kshk123/hashMap) : A concurrent thread-safe hash map implemented in C++\n  - [EASTL](https://github.com/electronicarts/EASTL) : EASTL stands for Electronic Arts Standard Template Library. It is an extensive and robust implementation that has an emphasis on high performance.\n  - [STL](https://github.com/microsoft/STL) : MSVC's implementation of the C++ Standard Library.\n  - [plf_list](https://github.com/mattreecebentley/plf_list) : A drop-in replacement for std::list with 293% faster insertion, 57% faster erasure, 17% faster iteration and 77% faster sorting on average. 20-24% speed increase in use-case testing.\n  - [rax](https://github.com/antirez/rax) : A radix tree implementation in ANSI C\n  - [ga](https://github.com/GlobalArrays/ga) : Partitioned Global Address Space (PGAS) library for distributed arrays\n  - [xenium](https://github.com/mpoeter/xenium) : A C++ library providing various concurrent data structures and reclamation schemes.\n  - [sparsehash-c11](https://github.com/sparsehash/sparsehash-c11) : Experimental C++11 version of sparsehash\n  - [Sprout](https://github.com/bolero-MURAKAMI/Sprout) : C++11/14 constexpr based Containers, Algorithms, Random numbers, Parsing, Ray tracing, Synthesizer, and others.\n  - [immutable-cpp](https://github.com/rsms/immutable-cpp) : Persistent immutable data structures for C++\n  - [HashMap](https://github.com/rigtorp/HashMap) : An open addressing linear probing hash table, tuned for delete heavy workloads\n  - [TinySTL](https://github.com/zouxiaohang/TinySTL) : TinySTL is a subset of STL(cut some containers and algorithms) and also a superset of STL(add some other containers and algorithms)\n  - [ch_stl](https://github.com/Colbeyyy/ch_stl) : Colby Hall's C++ Standard Library\n  - [pdqsort](https://github.com/orlp/pdqsort) : Pattern-defeating quicksort.\n  - [urde](https://github.com/AxioDL/urde) : Data interchange, editor suite, and runtime re-implementations for games by Retro Studios | Mirror\n- Logging\n  - [DebugViewPP](https://github.com/CobaltFusion/DebugViewPP) : DebugView++, collect, view and filter your application logs\n  - [NSLogger](https://github.com/fpillet/NSLogger) : A modern, flexible logging tool\n  - [pprint](https://github.com/p-ranav/pprint) : Pretty Printer for Modern C++\n  - [glog](https://github.com/google/glog) : C++ implementation of the Google logging module\n  - [spdlog](https://github.com/gabime/spdlog) : Fast C++ logging library.\n  - [Frlog](https://github.com/Cloaked9000/Frlog) : A tiny, fast, thread safe, easy to use logging class.\n  - [loguru](https://github.com/emilk/loguru) : A lightweight C++ logging library\n  - [static-print](https://github.com/saarraz/static-print) : A GCC 7.1 patch that adds a 'static_print' statement to C++.\n  - [nanoprintf](https://github.com/charlesnicholson/nanoprintf) : A tiny embeddable printf replacement written in C89/C99.\n  - [_._](https://github.com/vitaut/_._) : A simple streaming library\n  - [cpp-format](https://github.com/mutouyun/cpp-format) : C#/Rust/Python style formatting in C++.\n  - [tsf](https://github.com/IMQS/tsf) : Type safe printf-compatible C++ library\n  - [fmt](https://github.com/fmtlib/fmt) : A modern formatting library\n  - [tinyformat](https://github.com/c42f/tinyformat) : Minimal, type safe printf replacement library for C++\n  - [plog](https://github.com/SergiusTheBest/plog) : Portable, simple and extensible C++ logging library\n  - [reckless](https://github.com/mattiasflodin/reckless) : Reckless logging. Low-latency, high-throughput, asynchronous logging library for C++.\n  - [FASTER](https://github.com/microsoft/FASTER) : Fast persistent recoverable log and key-value store, in C# and C++, from Microsoft Research.\n  - [tabulate](https://github.com/p-ranav/tabulate) : Table Maker for Modern C++\n  - [leaf](https://github.com/zajo/leaf) : Lightweight Error Augmentation Framework\n  - [logwizard](https://github.com/jtorjo/logwizard) : Log Wizard - a Log Viewer that is easy and fun to use!\n  - [tinge](https://github.com/Jackojc/tinge) : a simple, fast, header-only library for C++ which enables pretty colours on the terminal.\n  - [spinnercpp](https://github.com/trumae/spinnercpp) : Simple header only library to add a spinner / progress indicator to any terminal application.\n  - [emojicpp](https://github.com/99xt/emojicpp) : Emoji\n  - [pprintpp](https://github.com/tfc/pprintpp) : Typesafe Python Style Printf Formatting for C++\n  - [elephant-logger](https://github.com/GeekyMoose/elephant-logger) : A flexible C++ logger with customisable categories, outputs, and filters\n- Signals and Slots\n  - [SISL](https://github.com/Asphox/SISL) : An other cross-platform/cross-compiler Signals and Slots library for C++11 and more...\n  - [SimpleSignal](https://github.com/victorsummer/SimpleSignal) : Simple signal using templates\n  - [SimpleSignals](https://github.com/skeller1982/SimpleSignals) : simple threadsafe C++ signal/slot implementation\n  - [SimpleSignal](https://github.com/larspensjo/SimpleSignal) : High performance C++11 signals\n  - [signal11](https://github.com/amc522/signal11) : C++11 signal slot implementation\n  - [nano-signal-slot](https://github.com/NoAvailableAlias/nano-signal-slot) : Pure C++17 Signals and Slots\n  - [observable](https://github.com/dacap/observable) : Observer pattern and signals/slots for C++11 projects\n- Profilers\n  - [microprofile](https://github.com/zeux/microprofile) : microprofile - embeddable CPU/GPU profiler\n  - [NVMLQuery-Windows](https://github.com/JeremyMain/NVMLQuery-Windows) : Windows sample code demonstrating how to query GPU metrics using the NVIDIA NVML API\n  - [GpuProf](https://github.com/vinjn/GpuProf) : Realtime profiler for AMD / NVIDIA / Intel GPUs\n  - [gperftools](https://github.com/gperftools/gperftools) : Main gperftools repository\n  - [monitoring](https://github.com/Krozark/monitoring) : a lib to determine CPU /memory consumption.\n  - [GPUProfiler](https://github.com/JeremyMain/GPUProfiler) : GPUProfiler - Understand your application and workflow resource requirements\n  - [amdmemorytweak](https://github.com/Eliovp/amdmemorytweak) : Read and modify memory timings on the fly\n  - [nonius](https://github.com/libnonius/nonius) : A C++ micro-benchmarking framework\n  - [CapFrameX](https://github.com/DevTechProfile/CapFrameX) : Frametime capture and analysis tool\n  - [minitrace](https://github.com/hrydgard/minitrace) : Simple C/C++ library for producing JSON traces suitable for Chrome's built-in trace viewer (about:tracing).\n  - [CompareIntegerMaps](https://github.com/preshing/CompareIntegerMaps) : Generates benchmark data for two different data structures, then renders some graphs.\n  - [netdata](https://github.com/netdata/netdata) : Real-time performance monitoring, done right! https://my-netdata.io/\n  - [gputop](https://github.com/rib/gputop) : A GPU profiling tool\n  - [libperflogger](https://github.com/Lurkki14/libperflogger) : Frametime logger for Linux Vulkan/OpenGL\n  - [perftest](https://github.com/sebbbi/perftest) : GPU texture/buffer performance tester\n  - [PocketTrace](https://github.com/PocketwatchGames/PocketTrace) : Intrusive Profiler for C++ (comes with viewer)\n  - [dmt](https://github.com/rxi/dmt) : Dynamic memory tracker for C\n  - [LPGPU2-CodeXL](https://github.com/codeplaysoftware/LPGPU2-CodeXL) : LPGPU2 CodeXL power performance analysis and feedback tool for GPUs\n  - [libProfiler](https://github.com/CedricGuillemet/libProfiler) : Profile your c++ code\n  - [verysleepy](https://github.com/VerySleepy/verysleepy) : Very Sleepy, a polling CPU profiler\n  - [renderdoc](https://github.com/baldurk/renderdoc) : RenderDoc is a stand-alone graphics debugging tool.\n  - [RenderDoc-Manager](https://github.com/oks2024/RenderDoc-Manager) : An exemple on how to use RenderDoc inside your engine.\n  - [c_nanoprofiler](https://github.com/procedural/c_nanoprofiler) : \n  - [apitrace](https://github.com/apitrace/apitrace) : Tools for tracing OpenGL, Direct3D, and other graphics APIs\n  - [processhacker](https://github.com/processhacker/processhacker) : A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware.\n  - [orbitprofiler](https://github.com/pierricgimmig/orbitprofiler) : C/C++ Performance Profiler\n  - [chobo-profiling](https://github.com/Chobolabs/chobo-profiling) : A multi-platform call-graph intrusive C++ performance profiling library\n  - [semile](https://github.com/r-kan/semile) : Profile what you care, monitor how it goes (support C/C++)\n  - [LiveMemTracer](https://github.com/cesarl/LiveMemTracer) : Live memory allocation tracing header only library using ImGui\n  - [Remotery](https://github.com/Celtoys/Remotery) : Single C file, Realtime CPU/GPU Profiler with Remote Web Viewer\n  - [Radeon-GPUProfiler](https://github.com/GPUOpen-Tools/Radeon-GPUProfiler) : Radeon GPU Profiler (RGP) is a tool from AMD that allows for deep inspection of GPU workloads.\n  - [RCP](https://github.com/GPUOpen-Tools/RCP) : The Radeon Compute Profiler (RCP) is a performance analysis tool that gathers data from the API run-time and GPU for OpenCL™ and ROCm/HSA applications. This information can be used by developers to…\n  - [Compressonator](https://github.com/GPUOpen-Tools/Compressonator) : Tool suite for Texture and 3D Model Compression, Optimization and Analysis using CPUs, GPUs and APUs\n  - [CodeXL](https://github.com/GPUOpen-Tools/CodeXL) : CodeXL is a comprehensive tool suite that enables developers to harness the benefits of CPUs, GPUs and APUs.\n  - [gapid](https://github.com/google/gapid) : Graphics API Debugger\n  - [glintercept](https://github.com/dtrebilco/glintercept) : GLIntercept is a OpenGL function call interceptor for Windows that will intercept and log all OpenGL calls\n  - [ThreadTracer](https://github.com/stolk/ThreadTracer) : Lightweight inline profiler that measures wall-time, cpu-time and premptive context switches for threads.\n  - [microprofile](https://github.com/jonasmr/microprofile) : microprofile is an embeddable profiler\n  - [gpuvis](https://github.com/mikesart/gpuvis) : GPU Trace Visualizer\n  - [MTuner](https://github.com/milostosic/MTuner) : MTuner is a C/C++ memory profiler and memory leak finder for Windows, PlayStation 4 and 3, Android and other platforms\n  - [yardstick](https://github.com/seanmiddleditch/yardstick) : C++ Instrumented Profiling\n  - [optick](https://github.com/bombomby/optick) : C++ Profiler For Games\n  - [benchmark](https://github.com/google/benchmark) : A microbenchmark support library\n  - [easy_profiler](https://github.com/yse/easy_profiler) : Lightweight profiler library for c++\n  - [profi](https://github.com/stoyannk/profi) : A light-weight C++ profiling library\n  - [SIMD-Visualiser](https://github.com/piotte13/SIMD-Visualiser) : A tool to graphically visualize SIMD code\n  - [Caliper](https://github.com/LLNL/Caliper) : Caliper is a flexible application introspection system\n  - [HWCPipe](https://github.com/ARM-software/HWCPipe) : Hardware counters interface\n  - [picobench](https://github.com/iboB/picobench) : A micro microbenchmarking library for C++11 in a single header file\n  - [tracy](https://github.com/Leandros/tracy) : Mirror of https://bitbucket.org/wolfpld/tracy\n  - [nanobench](https://github.com/martinus/nanobench) : Simple, fast, accurate single-header microbenchmarking functionality for C++11/14/17/20\n  - [coz](https://github.com/plasma-umass/coz) : Coz: Causal Profiling\n  - [access_profiler](https://github.com/arvidn/access_profiler) : a tool to count accesses to member variables in c++ programs\n  - [llvm-propeller](https://github.com/google/llvm-propeller) : PROPELLER: Profile Guided Optimizing Large Scale LLVM-based Relinker\n  - [cupti_profiler](https://github.com/srvm/cupti_profiler) : CUPTI GPU Profiler\n- Testing\n  - [doctest](https://github.com/onqtam/doctest) : The fastest feature-rich C++11/14/17/20 single-header testing framework for unit tests and TDD\n  - [EATest](https://github.com/electronicarts/EATest) : EATest is a C++ unit testing framework. It's goal is to have a scalable architecture, have minimal dependencies, and simple usage.\n  - [faker-cxx](https://github.com/cieslarmichal/faker-cxx) - C++20 Faker library for generating fake (but realistic) data for testing and development.\n  - [gtest-adapter](https://github.com/DavidSchuldenfrei/gtest-adapter) : \n  - [gtest-parallel](https://github.com/google/gtest-parallel) : Run Google Test suites in parallel.\n  - [gtest-tap-listener](https://github.com/kinow/gtest-tap-listener) : GoogleTest TAP Listener\n  - [gtest-gbar](https://github.com/ospector/gtest-gbar) : Automatically exported from code.google.com/p/gtest-gbar\n  - [gtest-runner](https://github.com/nholthaus/gtest-runner) : A cross-platform, Qt5 based Graphical User Interface for Google Test unit tests\n  - [googletest](https://github.com/google/googletest) : Googletest - Google Testing and Mocking Framework\n  - [mettle](https://github.com/jimporter/mettle) : A C++14 unit test framework\n  - [utest.h](https://github.com/sheredom/utest.h) : single header unit testing framework for C and C++\n  - [greatest](https://github.com/silentbicycle/greatest) : A C testing library in 1 file. No dependencies, no dynamic allocation. ISC licensed.\n  - [mettle](https://github.com/SuperV1234/mettle) : A C++14 unit test framework\n  - [Catch2](https://github.com/catchorg/Catch2) : A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch)\n  - [mutate_cpp](https://github.com/nlohmann/mutate_cpp) : C++ Mutation Test Environment\n  - [trompeloeil](https://github.com/rollbear/trompeloeil) : Header only C++14 mocking framework\n- Platforms\n  - [cpuinfo](https://github.com/pytorch/cpuinfo) : CPU INFOrmation library (x86/x86-64/ARM/ARM64, Linux/Windows/Android/macOS/iOS)\n  - [yue](https://github.com/yue/yue) : A library for creating native cross-platform GUI apps\n  - [cpp-ipc](https://github.com/mutouyun/cpp-ipc) : C++ IPC Library: A high-performance inter-process communication using shared memory on Linux/Windows.\n  - [portable-file-dialogs](https://github.com/samhocevar/portable-file-dialogs) : Portable GUI dialogs library, C++11, single-header\n  - [platform_bionic](https://github.com/GrapheneOS/platform_bionic) : Hardened Android standard C library. Some of the past hardening has not yet been ported from Marshmallow, Nougat and Oreo to this Android Pie repository. Most is available via archived tags in http…\n  - [wil](https://github.com/microsoft/wil) : Windows Implementation Library\n  - [ipc](https://github.com/jarikomppa/ipc) : Public domain single header inter process communication primitives\n  - [flow9](https://github.com/area9innovation/flow9) : Platform for safe, easy and productive programming of complex, multi-platform apps with a modern user interface\n  - [win-wallpaper](https://github.com/sindresorhus/win-wallpaper) : Manage the desktop wallpaper on Windows\n  - [cpu_features](https://github.com/google/cpu_features) : A cross platform C99 library to get cpu features at runtime.\n  - [switch-portlibs-examples](https://github.com/switchbrew/switch-portlibs-examples) : Switch portlibs examples using devkitA64 and libnx.\n  - [libnx](https://github.com/switchbrew/libnx) : Library for Switch Homebrew\n  - [Detours](https://github.com/microsoft/Detours) : Detours is a software package for monitoring and instrumenting API calls on Windows. It is distributed in source code form.\n  - [CrossWindow](https://github.com/alaingalvan/CrossWindow) : A cross platform system abstraction library written in C++ for managing windows and performing OS tasks.\n  - [WindowsHModular](https://github.com/Leandros/WindowsHModular) : A modular Windows.h Header. Licensed under Public Domain & MIT.\n  - [clip](https://github.com/dacap/clip) : Cross-platform C++ library to copy/paste clipboard content\n  - [osdialog](https://github.com/AndrewBelt/osdialog) : A cross platform wrapper for OS dialogs like file save, open, message boxes, inputs, color picking, etc.\n  - [nloader](https://github.com/sherpya/nloader) : Native win32 executables loader\n  - [libusb](https://github.com/libusb/libusb) : A cross-platform library to access USB devices\n  - [WinToast](https://github.com/mohabouje/WinToast) : WinToast is a lightly library written in C++ which brings a complete integration of the modern toast notifications of Windows 8 & Windows 10. Toast notifications allows your app to inform the users…\n  - [borderless-window](https://github.com/rossy/borderless-window) : A minimal borderless window with the Windows API\n  - [nativefiledialog](https://github.com/mlabbe/nativefiledialog) : A tiny, neat C library that portably invokes native file open and save dialogs.\n  - [process.h](https://github.com/sheredom/process.h) : A simple one header solution to launching processes and interacting with them for C and C++.\n  - [PlatformFolders](https://github.com/sago007/PlatformFolders) : A C++ library to look for special directories like \"My Documents\" and \"%APPDATA%\" so that you do not need to write Linux, Windows or Mac OS X specific code\n  - [Skeleton](https://github.com/dhg/Skeleton) : Skeleton: A Dead Simple, Responsive Boilerplate for Mobile-Friendly Development\n  - [sfd](https://github.com/rxi/sfd) : A small C library for opening a file dialog\n  - [Boxer](https://github.com/aaronmjacobs/Boxer) : Boxer is a simple library that allows for easy cross-platform creation of message boxes / alerts / what have you.\n  - [turf](https://github.com/preshing/turf) : Configurable C++ platform adapter\n  - [dynlib-loader](https://github.com/anthony-leclerc/dynlib-loader) : Cross-platform Runtime dynamic library loader (.dll / .so).\n  - [dynamicLinker](https://github.com/Marqin/dynamicLinker) : C++11 wrapper for Linux / OS X / Windows / BSD dynamic libraries ( .so .dylib .dll ).\n  - [systemd](https://github.com/systemd/systemd) : The systemd System and Service Manager\n  - [not-enough-standards](https://github.com/Alairion/not-enough-standards) : A modern header-only C++ library that provides platform-independent utilities.\n  - [EasyWindow](https://github.com/thennequin/EasyWindow) : Create window easily\n  - [gamemode](https://github.com/FeralInteractive/gamemode) : Optimise Linux system performance on demand\n  - [ArduinoJoystickLibrary](https://github.com/MHeironimus/ArduinoJoystickLibrary) : An Arduino library that adds one or more joysticks to the list of HID devices an Arduino Leonardo or Arduino Micro can support.\n  - [cppwinrt](https://github.com/microsoft/cppwinrt) : C++/WinRT is a standard C++ language projection for the Windows Runtime\n  - [libenjoy](https://github.com/Tasssadar/libenjoy) : Simple & small C joystick library for Linux and Windows. See README\n  - [nxquake2](https://github.com/fgsfdsfgs/nxquake2) : Nintendo Switch port of the Yamagi Quake II client\n  - [compiler-warnings](https://github.com/Barro/compiler-warnings) : A list of compiler warning flags for different GCC and clang versions\n- Command Line Arguments\n  - [getopt](https://github.com/mpusz/getopt) : C++ command line options parser for C++ Standard Library\n  - [args](https://github.com/Taywee/args) : A simple header-only C++ argument parser library. Supposed to be flexible and powerful, and attempts to be compatible with the functionality of the Python standard argparse library (though not nec…\n  - [argparse](https://github.com/p-ranav/argparse) : Argument Parser for Modern C++\n  - [cli](https://github.com/daniele77/cli) : A library for interactive command line interfaces in modern C++\n  - [radare2](https://github.com/radareorg/radare2) : unix-like reverse engineering framework and commandline tools\n  - [Clara](https://github.com/catchorg/Clara) : A simple to use, composable, command line parser for C++ 11 and beyond\n  - [CmdLine2](https://github.com/abolz/CmdLine2) : Command line argument parser (C++14)\n  - [clipp](https://github.com/muellan/clipp) : easy to use, powerful & expressive command line argument parsing for modern C++ / single header / usage & doc generation\n  - [argh](https://github.com/adishavit/argh) : Argh! A minimalist argument handler.\n  - [cxxopts](https://github.com/jarro2783/cxxopts) : Lightweight C++ command line option parser\n  - [Arguments](https://github.com/dabbertorres/Arguments) : Command line argument handling for C++\n  - [gflags](https://github.com/gflags/gflags) : The gflags package contains a C++ library that implements commandline flags processing. It includes built-in support for standard types such as string and the ability to define flags in the source file in which they are used. Online documentation available at: https://gflags.github.io/gflags/\n  - [args](https://github.com/pfultz2/args) : Simple and type-safe commandline argument parser for C++14\n- Regex\n  - [CppVerbalExpressions](https://github.com/VerbalExpressions/CppVerbalExpressions) : C++ regular expressions made easy\n  - [tiny-regex-mod](https://github.com/monolifed/tiny-regex-mod) : Single file modification of tiny-regex-c by Kokke\n  - [BlingFire](https://github.com/microsoft/BlingFire) : A lightning fast Finite State machine and REgular expression manipulation library.\n  - [cparse](https://github.com/cparse/cparse) : A C++ configurable Expression Parser. Useful as a Calculator or for helping you write your own Programming Language\n- Date\n  - [date](https://github.com/HowardHinnant/date) : A date and time library based on the C++11/14/17 <chrono> header\n  - [asap](https://github.com/mobius3/asap) : A C++ header-only library for creating, displaying, iterating and manipulating dates\n- Clang\n  - [clang](https://github.com/asutton/clang) : \n  - [clang-reflect](https://github.com/asutton/clang-reflect) : A clean implementation of reflection and related proposals.\n  - [cftf](https://github.com/neobrain/cftf) : Clang from the Future: A C++17 to C++11 source-to-source compiler\n  - [clang-power-tools](https://github.com/Caphyon/clang-power-tools) : Bringing clang-tidy magic to Visual Studio C++ developers.\n  - [clang-format-all](https://github.com/eklitzke/clang-format-all) : Run clang-format -i on all of the files in your C or C++ project\n  - [CppAst](https://github.com/xoofx/CppAst) : CppAst is a .NET library providing a C/C++ parser for header files powered by Clang/libclang with access to the full AST, comments and macros\n  - [autotidy](https://github.com/sasq64/autotidy) : Speedier handling of clang-tidy checking\n  - [cppinsights](https://github.com/andreasfertig/cppinsights) : C++ Insights - See your source code with the eyes of a compiler\n  - [cppast](https://github.com/foonathan/cppast) : Library to parse and work with the C++ AST\n  - [llvm-project](https://github.com/llvm/llvm-project) : The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. Note: the repository does not accept github pull requests at this moment. Please submit your patches at…\n- HotReload\n  - [car](https://github.com/nicholaschiasson/car) : Compile and Run! Execute source files directly without worrying at all about compiling.\n  - [PolyHook_2_0](https://github.com/stevemk14ebr/PolyHook_2_0) : C++17, x86/x64 Hooking Libary v2.0\n  - [Ratchet](https://github.com/themeldingwars/Ratchet) : A gameclient hooking framework to aid debuging\n  - [PolyHook](https://github.com/stevemk14ebr/PolyHook) : x86/x64 C++ Hooking Library\n  - [jet-live](https://github.com/ddovod/jet-live) : c++ hot code reload for linux and macos\n  - [blink](https://github.com/crosire/blink) : A tool which allows you to edit source code of any MSVC C++ project live at runtime\n  - [CToy](https://github.com/anael-seghezzi/CToy) : Interactive C coding environment\n  - [C-Hotloading](https://github.com/RandyGaul/C-Hotloading) : Example of MSVC makefile project for hotloading C with intellisense/debugger compatability\n  - [RuntimeCompiledCPlusPlus](https://github.com/RuntimeCompiledCPlusPlus/RuntimeCompiledCPlusPlus) : Change C++ code at runtime\n  - [live_reload_test](https://github.com/nlguillemot/live_reload_test) : demonstration of live reloading\n  - [cr](https://github.com/fungos/cr) : cr.h: A Simple C Hot Reload Header-only Library\n  - [live_edit](https://github.com/azmr/live_edit) : A collection of single-header libraries to help with reloading, debugging and profiling C(++) code.\n  - [RCCpp_DX11_Example](https://github.com/dougbinks/RCCpp_DX11_Example) : Runtime Compiled C++ example based on the Dear ImGui DirectX11 Example\n- UID\n  - [uuid_h](https://github.com/wc-duck/uuid_h) : Single file, STB-style, \"lib\" to generate uuid:s.\n  - [yauid](https://github.com/lexborisov/yauid) : A decentralized unique ID generator (int64)\n- Debug\n  - [PPK_ASSERT](https://github.com/gpakosz/PPK_ASSERT) : PPK_ASSERT is a cross platform drop-in & self-contained C++ assertion library\n  - [debugbreak](https://github.com/scottt/debugbreak) : break into the debugger programmatically\n  - [crashpad](https://github.com/chromium/crashpad) : A crash-reporting system\n  - [in_constexpr](https://github.com/SaadAhmad/in_constexpr) : An approach for runtime detection inside a constexpr function\n  - [backward-cpp](https://github.com/bombela/backward-cpp) : A beautiful stack trace pretty printer for C++\n  - [debug_assert](https://github.com/foonathan/debug_assert) : Simple, flexible and modular assertion macro.\n  - [EAAssert](https://github.com/electronicarts/EAAssert) : EAAssert is a simple and lightweight assert technology.\n  - [dbg-macro](https://github.com/sharkdp/dbg-macro) : A dbg(…) macro for C++\n  - [dbgtools](https://github.com/wc-duck/dbgtools) : Small collection of debug-related drop-in c/c++-utils\n  - [x64dbg](https://github.com/x64dbg/x64dbg) : An open-source x64/x32 debugger for windows.\n\n## Libraries\n[Back to top](#Index)\n- [putils](https://github.com/phisko/putils) - Phisko's C++ utilities. Large collection of helper classes and functions.\n- [HandyCpp](https://github.com/malamanteau/HandyCpp) : A large collection of header only utilities and convenience functions that make C++17 development happier.\n- [single_file_libs](https://github.com/prideout/single_file_libs) : List of single-file C/C++ libraries.\n- [bitsquid-foundation](https://github.com/niklas-ourmachinery/bitsquid-foundation) : A minimalistic foundation library with functions for memory allocation, basic collections, etc. The library has been written with a data-oriented philosophy: POD structures are preferred over class…\n- [EABase](https://github.com/electronicarts/EABase) : EABase is a small set of header files that define platform-independent data types and platform feature macros.\n- [EAStdC](https://github.com/electronicarts/EAStdC) : EAStdC is a package which implements basic library facilities that are similar to those in the standard C library.\n- [acd](https://github.com/acdemiralp/acd) : Single file utilities for C++.\n- [single-file-libs](https://github.com/machinamentum/single-file-libs) : super permissive, drop-in, single file stuff\n- [par](https://github.com/prideout/par) : single-file C libraries from Philip Allan Rideout\n- [paq](https://github.com/pennie-quinn/paq) : public domain single-file C/++ libraries for game devs\n- [Core](https://github.com/HeliumProject/Core) : Core libraries and utilities\n- [dr_libs](https://github.com/mackron/dr_libs) : A collection of public domain single-file libraries for C/C++.\n- [limbus](https://github.com/redien/limbus) : A cross-platform game library in the public domain\n- [RandomCode](https://github.com/Atrix256/RandomCode) : Random projects that are ok to be public, like blog stuff\n- [tinypile](https://github.com/fgenesis/tinypile) : Assorted small one-or-two-file libs. C/C++. Public domain. Cross-platform. No deps.\n- [dm](https://github.com/dariomanesku/dm) : Header-only base C++ library.\n- [sokol](https://github.com/floooh/sokol) : minimal cross-platform standalone C headers\n- [gamedev_libraries](https://github.com/raizam/gamedev_libraries) : A collection of open source c/c++ libraries for gamedev\n- [Flint](https://github.com/stevenlr/Flint) : Public domain single-file header-only C libraries\n- [sx](https://github.com/septag/sx) : Portable base library for C programmers, designed for performance and simplicity.\n- [cosmos](https://github.com/OpenGenus/cosmos) : Algorithms that run our universe | Your personal library of every algorithm and data structure code that you will ever encounter | Ask us anything at our forum\n- [mmx](https://github.com/vurtun/mmx) : single header libraries for C/C++\n- [final_game_tech](https://github.com/f1nalspace/final_game_tech) : Game related libraries written in C/C++\n- [bss-util](https://github.com/Black-Sphere-Studios/bss-util) : Black Sphere Studios utility library for C/C++\n- [kj](https://github.com/AfroDave/kj) : kj is a small collection of stb inspired libs.\n- [sac](https://github.com/peppsac/sac) : C/C++ helpers\n- [ZHeaders](https://github.com/Zguy/ZHeaders) : Public domain single-file libraries - stb style\n- [miscsrc](https://github.com/wernsey/miscsrc) : My collection of miscellaneous source code\n- [libs](https://github.com/mattiasgustavsson/libs) : Single-file public domain libraries for C/C++\n- [stb](https://github.com/nothings/stb) : stb single-file public domain libraries for C/C++\n- [tinybits](https://github.com/r-lyeh/tinybits) : Tiny bits and useful snippets that I keep using everywhere (C, C++)\n- [tacent](https://github.com/bluescan/tacent) : A collection of C++ modules implementing linear algebra, text and file IO, containers, image loading and saving, command-line parsing, etc. Useful for the foundation of a game engine or other inter…\n- [libdhcore](https://github.com/septag/libdhcore) : Lightweight, performance oriented, Core library for 'C' programmers\n- [slibs](https://github.com/yui0/slibs) : Single file libraries for C/C++\n- [foundation_lib](https://github.com/rampantpixels/foundation_lib) : Cross-platform public domain foundation library in C providing basic support data types and functions to write applications and games in a platform-independent fashion.\n- [cute_headers](https://github.com/RandyGaul/cute_headers) : Collection of cross-platform one-file C/C++ libraries with no dependencies, primarily used for games\n- [ZeroTolerance](https://github.com/jharler/ZeroTolerance) : Collection of single header file libraries for C/C++ development, with a focus on games.\n- [chobo-shl](https://github.com/Chobolabs/chobo-shl) : A collection of single-header C++11 libraries by Chobolabs\n- [single_file_libs](https://github.com/nothings/single_file_libs) : List of single-file C/C++ libraries.\n- [kit](https://github.com/flipcoder/kit) : C++11 libs: await, channels, reactive/signals, timelines, alarms, logging, args, etc.\n- [msh](https://github.com/mhalber/msh) : Maciej's Toolbox\n- [abseil-cpp](https://github.com/abseil/abseil-cpp) : Abseil Common Libraries (C++)\n- [Nimble](https://github.com/dmsovetov/Nimble) : Nimble is a header-only utility library.\n- [rsm](https://github.com/Rosme/rsm) : Utility Library\n- [bx](https://github.com/bkaradzic/bx) : Base library used across multiple projects\n- [utils](https://github.com/eigenbom/utils) : A collection of data structures and utilities (C++11)\n- [loki](https://github.com/dutor/loki) : A C++ Template library, developed by Andrei Alexandrescu, the author of the book Modern C++ Design.\n- [loki-lib](https://github.com/snaewe/loki-lib) : Loki is a C++ library of designs, containing flexible implementations of common design patterns and idioms.\n- [GSL](https://github.com/microsoft/GSL) : Guidelines Support Library\n- [vrm_core](https://github.com/SuperV1234/vrm_core) : Lightweight C++14 utility library. (Modernized, stripped and cleaned-up version of SSVUtils.)\n- [Aurora](https://github.com/Bromeon/Aurora) : Header-only library with unconventional C++ features, like deep-copy smart pointers, dynamic dispatch, type-erased ranges\n- [gsl-lite](https://github.com/martinmoene/gsl-lite) : gsl lite - A single-file header-only version of ISO C++ Guidelines Support Library (GSL) for C++98, C++11 and later\n- [cpp-utilities](https://github.com/eteran/cpp-utilities) : Miscellaneous C++11 utility classes and functions\n- [Snippets](https://github.com/DanielGibson/Snippets) : (Hopefully) useful code snippets and header-only libs\n- [sts](https://github.com/kieselsteini/sts) : My collection of public domain single file libraries\n- [gb](https://github.com/gingerBill/gb) : gb single-file public domain libraries for C & C++\n- [emilib](https://github.com/emilk/emilib) : Loose collection of misc C++ libs\n- [liboli](https://github.com/Francesco149/liboli) : personal single-header c89 library with misc utilities (I actually made this just so that I can add -loli to ldflags)\n- [commonItems](https://github.com/ParadoxGameConverters/commonItems) : Common utilities used by various converters\n- [zpl](https://github.com/zpl-c/zpl) : Your C11 Powerkit\n- [Plinth](https://github.com/Hapaxia/Plinth) : Foundation library of helpful classes/functions\n- [sftools](https://github.com/mantognini/sftools) : Bunch of tools for SFML application development\n- [MISC](https://github.com/sawickiap/MISC) : Miscellaneous small code snippets.\n\n## Engines\n[Back to top](#Index)\n- [kengine](https://github.com/phisko/kengine) - The Koala engine is a type-safe and self-documenting implementation of an Entity-Component-System (ECS), with a focus on runtime extensibility and compile-time type safety and clarity.\n- [game](https://github.com/onqtam/game) : The culmination of everything I'm passionate about\n- [Enjon](https://github.com/MrFrenik/Enjon) : Game engine created using OpenGL and C++\n- [Shadow-Functions-Engine](https://github.com/mmmuscus/Shadow-Functions-Engine) : A small ASCII graphical game engine for the windows console (and Linux since v2.0.2.) done in C++\n- [cheat-engine](https://github.com/cheat-engine/cheat-engine) : Cheat Engine. A development environment focused on modding\n- [CORE](https://github.com/r-lyeh/CORE) : Game engine core playground\n- [Cauldron](https://github.com/GPUOpen-LibrariesAndSDKs/Cauldron) : A simple framework for rapid prototyping on Vulkan or Direct3D 12\n- [bigg](https://github.com/JoshuaBrookover/bigg) : bgfx, imgui, glfw, glm\n- [goxel](https://github.com/guillaumechereau/goxel) : Goxel: Free and Open Source 3D Voxel Editor\n- [lumixengine_shader_editor](https://github.com/nem0/lumixengine_shader_editor) : Visual shader editor for Lumix Engine\n- [Open7Days](https://github.com/UglySwedishFish/Open7Days) : A fast engine based on the technology behind 7 days to die.\n- [NebulaRender](https://github.com/Trylz/NebulaRender) : A powerful physically based renderer with a fully featured editor.\n- [GameEngine](https://github.com/qnope/GameEngine) : Little Game Engine that aims to be Physically Based for the lighting part\n- [include-engine](https://github.com/sgorsten/include-engine) : #include <engine>\n- [MAGE](https://github.com/matt77hias/MAGE) : 🧙 MAGE - Matthias Advanced Game Engine\n- [TrinityCore](https://github.com/TrinityCore/TrinityCore) : TrinityCore Open Source MMO Framework (master = 8.2.0.31478, 3.3.5 = 3.3.5a.12340)\n- [boden](https://github.com/AshampooSystems/boden) : Purely native C++ cross-platform framework for Android and iOS development. https://www.boden.io\n- [AtomicGameEngine](https://github.com/AtomicGameEngine/AtomicGameEngine) : The Atomic Game Engine is a multi-platform 2D and 3D engine with a consistent API in C++, C#, JavaScript, and TypeScript\n- [NoahGameFrame](https://github.com/ketoo/NoahGameFrame) : A fast, scalable, distributed game server engine/framework for C++, include actor library, network library,can be used as a real time multiplayer game engine ( MMO RPG/MOBA ), which support C#/Lua …\n- [Viry3D](https://github.com/stackos/Viry3D) : Cross platform 2D and 3D game engine in C++.\n- [aether3d](https://github.com/bioglaze/aether3d) : Aether3D Game Engine\n- [kiyosGameEngine](https://github.com/kiyoMatsui/kiyosGameEngine) : KiyoGameEngine is a small header only C++17 library, that provides boilerplate code for a small to medium sized games\n- [Wolf.Engine](https://github.com/WolfEngine/Wolf.Engine) : The Wolf is a comprehensive set of C++ open source libraries for realtime rendering, realtime streaming and game developing\n- [OpenXRay](https://github.com/OpenXRay/xray-16) : Improved version of the X-Ray engine, used in world famous S.T.A.L.K.E.R. game series by GSC Game World.\n- [mintaro](https://github.com/dr-soft/mintaro) : A small framework for making simple games.\n- [DmitrysEngine](https://github.com/mrDIMAS/DmitrysEngine) : C99 cross-platform 3D game engine with absolute minimum of external dependencies\n- [libavg](https://github.com/libavg/libavg) : \n- [zdog](https://github.com/metafizzy/zdog) : Flat, round, designer-friendly pseudo-3D engine for canvas & SVG\n- [Xbox-ATG-Samples](https://github.com/microsoft/Xbox-ATG-Samples) : Game development samples published by the Xbox Advanced Technology Group.\n- [shiva](https://github.com/Milerius/shiva) : Modern Cross-Platform C++ Engine with modularity (MIT). Maintains here: https://github.com/KomodoPlatform/antara-gaming-sdk\n- [enduro2d](https://github.com/enduro2d/enduro2d) : Yet another 2d game engine of dreams (work in progress)\n- [FlexEngine](https://github.com/ajweeks/FlexEngine) : A personal game engine\n- [rbfx](https://github.com/rokups/rbfx) : Game engine with extensive C# support and WYSIWYG editor.\n- [qtbase](https://github.com/qt/qtbase) : Qt Base (Core, Gui, Widgets, Network, ...)\n- [Engine](https://github.com/HeliumProject/Engine) : C++ Game Engine (Under Construction!)\n- [Acid](https://github.com/EQMG/Acid) : A high speed C++17 Vulkan game engine\n- [quartz-engine](https://github.com/GentenStudios/quartz-engine) : A New Game Engine, specializing in ease of content creation through a scripting language\n- [Corange](https://github.com/orangeduck/Corange) : Pure C Game Engine\n- [Simpleton-Engine](https://github.com/Kerndog73/Simpleton-Engine) : What a stupid name for a library\n- [BabylonCpp](https://github.com/samdauwe/BabylonCpp) : A port of Babylon.js to C++\n- [igneous](https://github.com/MissingBitStudios/igneous) : Igneous is an open source game engine written in C++.\n- [godot](https://github.com/godotengine/godot) : Godot Engine – Multi-platform 2D and 3D game engine\n- [anki-3d-engine](https://github.com/godlikepanos/anki-3d-engine) : AnKi 3D Engine - Vulkan backend, modern renderer, scripting, physics and more\n- [raylib-cpp](https://github.com/RobLoach/raylib-cpp) : C++ Object Oriented Wrapper for raylib\n- [engine](https://github.com/mgerhardy/engine) : Home of a voxel game engine and its tools (like a voxel editor)\n- [PGE-Project](https://github.com/WohlSoft/PGE-Project) : Platform Game Engine Project by Wohlstand\n- [Daemon](https://github.com/DaemonEngine/Daemon) : The Dæmon game engine. With some bits of ioq3 and XreaL.\n- [thunder](https://github.com/eprikazchikov/thunder) : An open source game engine is written in C++ with a flexible architecture\n- [vxr](https://github.com/avilapa/vxr) : General purpose engine written in C++ with emphasis on materials rendering (PBR, clear coat, anisotropy, iridescence)\n- [rex](https://github.com/BuckeyeSoftware/rex) : rex engine and game\n- [OpenGraphic](https://github.com/Gforcex/OpenGraphic) : Graphic Engine & Game Engine lists\n- [WickedEngine](https://github.com/turanszkij/WickedEngine) : C++ game engine focusing on modern rendering techniques and performance.\n- [alimer](https://github.com/amerkoleci/alimer) : Cross-platform 2D and 3D game engine.\n- [ignifuga](https://github.com/gabomdq/ignifuga) : Ignifuga Game Engine\n- [Rak](https://github.com/UglySwedishFish/Rak) : Real-time hybrid engine written in C++\n- [CRYENGINE](https://github.com/CRYTEK/CRYENGINE) : CRYENGINE is a powerful real-time game development platform created by Crytek.\n- [engine](https://github.com/playcanvas/engine) : Fast and lightweight WebGL game engine\n- [fusion3d](https://github.com/AntRobWells35/fusion3d) : A next gen 3D engine fusing modern techniques and apis.\n- [Cinder](https://github.com/cinder/Cinder) : Cinder is a community-developed, free and open source library for professional-quality creative coding in C++.\n- [EtherealEngine](https://github.com/volcoma/EtherealEngine) : C++ Game Engine and Editor\n- [mos](https://github.com/morganbengtsson/mos) : Lightweight game engine.\n- [halley](https://github.com/amzeratul/halley) : A lightweight game engine written in modern C++\n- [eight](https://github.com/hodgman/eight) : Automatically exported from code.google.com/p/eight\n- [RaZ](https://github.com/Razakhel/RaZ) : Modern & multiplatform 3D engine in C++17\n- [unity-decompiled](https://github.com/jamesjlinden/unity-decompiled) : \n- [limonEngine](https://github.com/enginmanap/limonEngine) : 3D FPS game engine with full dynamic lighting and shadows\n- [DOOM](https://github.com/id-Software/DOOM) : DOOM Open Source Release\n- [OpenMiner](https://github.com/Unarelith/OpenMiner) : Scriptable Minecraft-like game engine written in C++14 using GameKit\n- [openFrameworks](https://github.com/openframeworks/openFrameworks) : openFrameworks is a community-developed cross platform toolkit for creative coding in C++.\n- [Arcane-Engine](https://github.com/Ershany/Arcane-Engine) : 3D C/C++ Game Engine - Created By Brady Jessup\n- [permafrost-engine](https://github.com/eduard-permyakov/permafrost-engine) : An OpenGL 3.3 RTS game engine written in C\n- [Cardinal-Engine](https://github.com/Aredhele/Cardinal-Engine) : 3D Cross-Platform Game Engine programmed in C++ with OpenGL 3\n- [eternity](https://github.com/team-eternity/eternity) : The Eternity Engine\n- [Quiver](https://github.com/rachelnertia/Quiver) : A cross-platform pseudo-3D game engine written in C++\n- [GibEngine](https://github.com/MattRyder/GibEngine) : Cross-platform OpenGL 3D game engine\n- [Inline-Engine](https://github.com/petiaccja/Inline-Engine) : Game engine written in C++ with ease of use and next-gen parallel computing in focus.\n- [DiligentEngine](https://github.com/DiligentGraphics/DiligentEngine) : A modern cross-platform low-level graphics library and rendering framework\n- [yeti](https://github.com/origamicomet/yeti) : A general-purpose data-driven game engine with tools. Attribution based licensing.\n- [GameEngineResources](https://github.com/cesarl/GameEngineResources) : \n- [openage](https://github.com/SFTtech/openage) : Free (as in freedom) open source clone of the Age of Empires II engine\n- [Zmey](https://github.com/nikoladimitroff/Zmey) : A game engine. That breathes fire and awesomeness\n- [Game-Engine-Architecture](https://github.com/nikoladimitroff/Game-Engine-Architecture) : A repo contaning the learning materials for the course 'Game Engine architecture'\n- [Worldstone](https://github.com/Lectem/Worldstone) : Diablo 2 tools and engine reimplementation in c++\n- [catgl](https://github.com/yui0/catgl) : a cross-platform 3D graphics engine\n- [SpartanEngine](https://github.com/PanosK92/SpartanEngine) : Game engine with an emphasis on architectual quality, targeting high end machines\n- [ETEngine](https://github.com/Illation/ETEngine) : A merge between my planet framework and open gl graphics framework that will develop into a space sim focused game engine\n- [Falcor](https://github.com/NVIDIAGameWorks/Falcor) : Real-Time Rendering Framework\n- [BlueshiftEngine](https://github.com/PolygonTek/BlueshiftEngine) : Blueshift is a cross-platform 3D game engine implemented in C++. it's free, open-source, and works on Windows, macOS, iOS, and Android. The project is currently in an early stage of development.\n- [crogine](https://github.com/fallahn/crogine) : SDL2 Based Game Framework for mobile devices\n- [lumberyard](https://github.com/aws/lumberyard) : Amazon Lumberyard is a free AAA game engine deeply integrated with AWS and Twitch – with full source.\n- [saiga](https://github.com/darglein/saiga) : \n- [gincu](https://github.com/wqking/gincu) : Gincu -- a simple match three game, game engine, and game framework written in C++\n- [AVA](https://github.com/r-lyeh/AVA) : A tiny unlicensed 3D game engine in C; with C++ and Lua interfaces. Written in 32 random ̷d̷a̷y̷s̷ m̷o̷n̷t̷h̷s̷ years.\n- [darkhammer](https://github.com/septag/darkhammer) : darkHAMMER is a lightweight, open-source, multiplatform game engine. written in C (C99) language, supports python and C# bindings and lua scripts. Runs on windows and linux\n- [FishEngine](https://github.com/yushroom/FishEngine) : Simple, Unity-like Game Engine.\n- [ogre](https://github.com/OGRECave/ogre) : Ogre1 - scene-oriented, flexible 3D engine written in C++\n- [NazaraEngine](https://github.com/DigitalPulseSoftware/NazaraEngine) : Nazara Engine is a fast, complete, cross-platform, object-oriented API which can help you in your daily developper life.\n- [LumixEngine](https://github.com/nem0/LumixEngine) : 3D Game Engine\n- [Serious-Engine](https://github.com/Croteam-official/Serious-Engine) : An open source version of a game engine developed by Croteam for the classic Serious Sam games.\n- [BansheeEngine](https://github.com/BearishSun/BansheeEngine) : Modern C++14 game engine with Vulkan support, fully featured editor and C# scripting\n- [polymer](https://github.com/ddiakopoulos/polymer) : graphics + interaction engine\n- [Urho3D](https://github.com/urho3d/Urho3D) : Cross-platform 2D and 3D game engine.\n- [gebbdoom](https://github.com/fabiensanglard/gebbdoom) : Game Engine Black Book: Doom\n- [ALX](https://github.com/axilmar/ALX) : C++11 Allegro 5 wrapper library.\n- [bsf](https://github.com/GameFoundry/bsf) : Modern C++14 library for the development of real-time graphical applications\n- [ClanLib](https://github.com/sphair/ClanLib) : ClanLib is a cross platform C++ toolkit library.\n- [raylib](https://github.com/raysan5/raylib) : A simple and easy-to-use library to enjoy videogames programming\n- [smkflow](https://github.com/ArthurSonzogni/smkflow) : A C++ dataflow node editor -- Compatible with WebAssembly.\n- [game-prototype](https://github.com/madureira/game-prototype) : A simple 2D top-down game framework.\n- [megaglest-source](https://github.com/MegaGlest/megaglest-source) : MegaGlest real-time strategy game engine (cross-platform, 3-d)\n- [freeaoe](https://github.com/sandsmark/freeaoe) : A free engine capable of running Age of Kings.\n- [Horde3D](https://github.com/horde3d/Horde3D) : Horde3D is a small 3D rendering and animation engine. It is written in an effort to create an engine being as lightweight and conceptually clean as possible.\n- [neoGFX](https://github.com/i42output/neoGFX) : Cross-platform GPU-oriented C++ application/game framework\n- [KickJS](https://github.com/mortennobel/KickJS) : A WebGL game engine for modern web-browsers.\n- [LittleOrionEngine](https://github.com/mariofv/LittleOrionEngine) : C++ 3D Engine developed during the Master's Degree in AAA Videogames Development.\n- [GDevelop](https://github.com/4ian/GDevelop) : GDevelop is an open-source, cross-platform game engine designed to be used by everyone.\n- [Lumos](https://github.com/jmorton06/Lumos) : Cross-Platform C++ 2D/3D game engine\n- [saddy-graphics-engine-2d](https://github.com/mamontov-cpp/saddy-graphics-engine-2d) : Saddy is an open-source crossplatform 2D graphic engine, based on OpenGL, which can be used for creating 2D games. like platformers or RPGs.\n- [WildMagic](https://github.com/bazhenovc/WildMagic) : A for of a well-known WildMagic engine v5.9\n- [khanat-opennel-code](https://github.com/deedounet/khanat-opennel-code) : \n- [pmtech](https://github.com/polymonster/pmtech) : Lightweight, multi-platform, data-oriented game engine.\n- [SimpleRenderEngineProject](https://github.com/mortennobel/SimpleRenderEngineProject) : Small C++14 render engine with dependencies\n- [SimpleRenderEngine](https://github.com/mortennobel/SimpleRenderEngine) : Small C++14 render engine\n- [ezEngine](https://github.com/ezEngine/ezEngine) : An open source game engine in active development\n- [engge](https://github.com/scemino/engge) : Experimental game engine for Thimbleweed park\n- [lovr](https://github.com/bjornbytes/lovr) : Virtual Reality Engine\n- [crown](https://github.com/dbartolini/crown) : The flexible game engine.\n- [OpenSiv3D](https://github.com/Siv3D/OpenSiv3D) : C++17/C++20 framework for creative coding\n- [LDK](https://github.com/marciovmf/ldk) : A game engine being developed from scratch for learning and practicing essential game development skills. Each and every single feature is written from scratch with absolutely no third party code or libraries.\n- [JNGL](https://github.com/jhasse/jngl) : Easy to use 2D engine for Linux, Windows, macOS, Android, iOS, Xbox and the Nintendo Switch\n- SFML based engines\n  - [SFML-Game-Development-Book](https://github.com/SFML/SFML-Game-Development-Book) : Full and up-to-date source code of the chapters of the \"SFML Game Development\" book\n  - [SFML-book](https://github.com/Krozark/SFML-book) : SFML Blueprint book, source code\n  - [nero-game-engine](https://github.com/sk-landry/nero-game-engine) : Advanced SFML Game Engine, Designed to be Simple and Intuitive\n  - [SFBL](https://github.com/Made4Dev/SFBL) : SFML Box2D Light\n  - [SchiffbruchEngine](https://github.com/Lirrec/SchiffbruchEngine) : SchiffbruchEngine\n  - [Swift2](https://github.com/dabbertorres/Swift2) : A SFML-backed game framework.\n  - [SFME](https://github.com/SlyrisOrg/SFME) : Simple and Fast Multimedia Engine\n  - [xygine](https://github.com/fallahn/xygine) : 2D engine / framework built around SFML\n  - [SFML-Game-Framework](https://github.com/Hopson97/SFML-Game-Framework) : Very, very simple and barebones framework for SFML games and that\n  - [SFML-DOOM](https://github.com/JonnyPtn/SFML-DOOM) : Original DOOM source code adapted to use c++ with SFML\n  - [Vigilante-Game-Framework](https://github.com/gamepopper/Vigilante-Game-Framework) : 2D/3D C++ game framework written for use with SFML.\n  - [ObEngine](https://github.com/Sygmei/ObEngine) : 2D Game Engine with Lua Scripting made on top of SFML !\n  - [QSFML](https://github.com/kamirr/QSFML) : SFML 2.x.x / Qt 5.x.x integration\n  - [is-Engine](https://github.com/Is-Daouda/is-Engine) : Game Engine developed with the SFML library to create games on Android and PC\n- Unity\n  - [NativeRenderingPlugin](https://github.com/Unity-Technologies/NativeRenderingPlugin) : C++ Rendering Plugin example for Unity\n  - [VectorFieldExamples](https://github.com/keijiro/VectorFieldExamples) : Unity VFX Graph examples with vector fields\n  - [UnityWaveEquation](https://github.com/AsehesL/UnityWaveEquation) : Wave Equations\n  - [UnityRenderStreaming](https://github.com/Unity-Technologies/UnityRenderStreaming) : Streaming server for Unity\n  - [KDTree](https://github.com/viliwonka/KDTree) : Fast KDTree for Unity, with thread-safe querying.\n  - [ShaderGraph-Custom-Lighting](https://github.com/Unity-Technologies/ShaderGraph-Custom-Lighting) : A sample project showcasing a simple method to calculate custom lighting inside of Shader Graph for the Lightweight Render Pipeline. Includes a sample toon shaded scene and example assets. Built fo…\n  - [UnitySpriteShaders](https://github.com/traggett/UnitySpriteShaders) : An Uber Shader for rendering Sprites in Unity.\n  - [GPU-GEMS-3D-Fluid-Simulation](https://github.com/Scrawk/GPU-GEMS-3D-Fluid-Simulation) : 3D fluid simulation on the in Unity\n  - [Unity-Reorderable-List](https://github.com/cfoulston/Unity-Reorderable-List) : Extended version of the Reorderable List in Unity\n  - [ShaderTutorials](https://github.com/ronja-tutorials/ShaderTutorials) : unity shader tutorials\n  - [SpriteGlow](https://github.com/Elringus/SpriteGlow) : A sprite glow effect for Unity game engine\n  - [TerrainToolSamples](https://github.com/Unity-Technologies/TerrainToolSamples) : \n  - [UnitySkidmarks](https://github.com/Nition/UnitySkidmarks) : A simple skidmark effect generator for Unity3D\n  - [Force-Field](https://github.com/Brackeys/Force-Field) : Project files for our tutorial on how to make a Force Field in Unity using Shader Graph.\n  - [AtmosphericScattering](https://github.com/SlightlyMad/AtmosphericScattering) : Atmospheric Scattering for Unity\n  - [Unity-Experimental-DXR](https://github.com/Unity-Technologies/Unity-Experimental-DXR) : The Experimental DXR project is a Unity custom version + HDRP custom version that support DXR and will let users play with DXR features. It is not representative of future integration of DXR in Unity.\n  - [Deform](https://github.com/keenanwoodall/Deform) : A fully-featured deformer system for Unity.\n  - [SplineMesh](https://github.com/benoit-dumas/SplineMesh) : A Unity plugin to create curved content in real-time with bézier curves\n  - [ZeroFormatter](https://github.com/neuecc/ZeroFormatter) : Fastest C# Serializer and Infinitely Fast Deserializer for .NET, .NET Core and Unity.\n  - [EntityComponentSystemSamples](https://github.com/Unity-Technologies/EntityComponentSystemSamples) : \n  - [UnityCursorControl](https://github.com/znebby/UnityCursorControl) : A mouse cursor control module for Unity3D\n  - [PostProcessing](https://github.com/Unity-Technologies/PostProcessing) : Post Processing Stack\n  - [HelpfulScripts](https://github.com/cjacobwade/HelpfulScripts) : A collection of random, useful scripts\n  - [UnityVisualizations](https://github.com/WorldOfZero/UnityVisualizations) : Collection of shaders and visual effects created for Unity 3D.\n  - [SEGI](https://github.com/sonicether/SEGI) : A fully-dynamic voxel-based global illumination system for Unity\n  - [Unity-Volumetric-Light](https://github.com/MaxwellGengYF/Unity-Volumetric-Light) : A powerful volumetric light plugin based on post-processing in Unity3D\n  - [Entitas-CSharp](https://github.com/sschmid/Entitas-CSharp) : Entitas is a super fast Entity Component System (ECS) Framework specifically made for C# and Unity\n  - [TestbedHDRP](https://github.com/keijiro/TestbedHDRP) : Testbed project for Unity HDRP (High Definition Render Pipeline)\n  - [command_terminal](https://github.com/stillwwater/command_terminal) : Unity Command Terminal: In-Game Console\n  - [Translucency-Shader](https://github.com/Flafla2/Translucency-Shader) : A deferred translucency (with Subsurface Scattering) shader for Unity3D that integrates with existing Deferred rendering and Standard shading PBR systems. Based on research by EA DICE presented at …\n  - [sss-unity](https://github.com/sebastianhein/sss-unity) : Sub Surface Scattering Approximation Shader for Unity 3D\n  - [msaa-shadow-fix](https://github.com/sebastianhein/msaa-shadow-fix) : A little fix for the directional shadows with msaa enabled in Unity3d.\n  - [Brunetons-Improved-Atmospheric-Scattering](https://github.com/Scrawk/Brunetons-Improved-Atmospheric-Scattering) : A Unity port of Brunetons improved atmospheric scattering\n  - [AI4Animation](https://github.com/sebastianstarke/AI4Animation) : Character Animation in Unity 3D using Deep Learning and Artificial Intelligence\n  - [Json.Net.Unity3D](https://github.com/SaladLab/Json.Net.Unity3D) : Forked Newtonsoft.Json to support Unity3D\n  - [DataBind](https://github.com/tinrab/DataBind) : Simple data binding for Unity\n  - [Simple-RPG-in-Unity](https://github.com/GameGrind/Simple-RPG-in-Unity) : Unity project for the Simple RPG series on GameGrind.\n  - [Binary-Save-For-Unity](https://github.com/GameGrind/Binary-Save-For-Unity) : A quick and simple way to save and load objects for Unity.\n  - [VFW](https://github.com/vexe/VFW) : \n  - [Unity_Shaders_Book](https://github.com/candycat1992/Unity_Shaders_Book) : 书籍《Unity Shader入门精要》源代码\n  - [Ocean_Community_Next_Gen](https://github.com/eliasts/Ocean_Community_Next_Gen) : Next gen iteration of the unity community ocean shader\n  - [MeshDecimator](https://github.com/Whinarn/MeshDecimator) : A mesh decimation library for .NET and Unity.\n  - [UnityMeshSimplifier](https://github.com/Whinarn/UnityMeshSimplifier) : Mesh simplification for Unity.\n  - [High-Speed-Priority-Queue-for-C-Sharp](https://github.com/BlueRaja/High-Speed-Priority-Queue-for-C-Sharp) : A C# priority queue optimized for pathfinding applications\n  - [UnityUtils](https://github.com/mortennobel/UnityUtils) : A library of C# utility classes for Unity\n  - [Shader-Graph-Tutorials](https://github.com/Brackeys/Shader-Graph-Tutorials) : Project files for our tutorials on using Shader Graph in Unity.\n  - [UniGLTF](https://github.com/ousttrue/UniGLTF) : glTF 2.0 importer and exporter for Unity 5.6 or later\n  - [CppScript](https://github.com/unity3d-jp/CppScript) : \n  - [ScriptableRenderPipeline](https://github.com/Unity-Technologies/ScriptableRenderPipeline) : Scriptable Render Pipeline\n  - [RPG-Tutorial](https://github.com/Brackeys/RPG-Tutorial) : The Unity Project for the RPG Tutorial Series!\n  - [UnityCsReference](https://github.com/Unity-Technologies/UnityCsReference) : Unity C# reference source code\n  - [NoiseShader](https://github.com/keijiro/NoiseShader) : Noise shader library for Unity\n  - [crest](https://github.com/crest-ocean/crest) : An advanced ocean system implemented in Unity3D\n  - [volsample](https://github.com/huwb/volsample) : Research on sampling methods for real-time volume rendering\n  - [AutoLOD](https://github.com/Unity-Technologies/AutoLOD) : Automatic LOD generation + scene optimization\n  - [AnimationImporter](https://github.com/talecrafter/AnimationImporter) : Aseprite Animation Importer for Unity\n  - [il2cpp](https://github.com/anydream/il2cpp) : A MSIL/C# to C++ converter. Faster than CoreCLR with low memory overhead.(已弃坑.C#是个好语言,然而.NET不是一个干净的平台)\n  - [Randomation-Vehicle-Physics](https://github.com/JustInvoke/Randomation-Vehicle-Physics) : Vehicle physics system for the Unity engine.\n  - [Ceto](https://github.com/Scrawk/Ceto) : Ceto: Ocean system for Unity\n  - [InputSystem](https://github.com/Unity-Technologies/InputSystem) : An efficient and versatile input system for Unity.\n  - [Extenject](https://github.com/svermeulen/Extenject) : Dependency Injection Framework for Unity3D\n- UnrealEngine\n  - [unrealcpp](https://github.com/Harrison1/unrealcpp) : Unreal Engine 4 C++ examples\n  - [RuntimeMeshComponent](https://github.com/Koderz/RuntimeMeshComponent) : Unreal Engine 4 plugin component for rendering runtime generated content.\n  - [ue4-docker](https://github.com/adamrehn/ue4-docker) : Windows and Linux containers for Unreal Engine 4\n  - [unreal.hx](https://github.com/proletariatgames/unreal.hx) : Unreal.hx: Haxe Integration for Unreal\n  - [HoudiniEngineForUnreal](https://github.com/sideeffects/HoudiniEngineForUnreal) : Houdini Engine Plugin for Unreal Engine 4\n  - [ImpostorBaker](https://github.com/ictusbrucks/ImpostorBaker) : UE4 Plugin for generating Impostors for static meshes\n  - [GA-SDK-UNREAL](https://github.com/GameAnalytics/GA-SDK-UNREAL) : A repository containing the GameAnalytics Unreal4 Plugin including documentation.\n  - [UE4-Cpp-Tutorials](https://github.com/orfeasel/UE4-Cpp-Tutorials) : This repository contains all the code I've written in my website tutorials regarding the implementation of Game Systems inside UE4\n  - [EpicSurvivalGameSeries](https://github.com/tomlooman/EpicSurvivalGameSeries) : Third-person Survival Game for Unreal Engine 4.\n  - [UnrealImGui](https://github.com/segross/UnrealImGui) : Unreal plug-in that integrates Dear ImGui framework into Unreal Engine 4.\n- Emulators\n  - [chips](https://github.com/floooh/chips) : 8-bit chip and system emulators in standalone C headers\n  - [RetroArch](https://github.com/libretro/RetroArch) : Cross-platform, sophisticated frontend for the libretro API. Licensed GPLv3.\n  - [agnes](https://github.com/kgabis/agnes) : Header-only NES emulation library with an easy to use API.\n  - [Gearboy](https://github.com/drhelius/Gearboy) : Game Boy / Gameboy Color emulator for iOS, Mac, Raspberry Pi, Windows, Linux and RetroArch.\n  - [ppsspp](https://github.com/hrydgard/ppsspp) : A PSP emulator for Android, Windows, Mac and Linux, written in C++. Want to contribute? Join us on Discord at https://discord.gg/5NJB6dD or in #ppsspp on freenode (IRC) or just send pull requests /…\n  - [pcsx2](https://github.com/PCSX2/pcsx2) : PCSX2 - The Playstation 2 Emulator\n  - [binjgb](https://github.com/binji/binjgb) : Gameboy emulator implemented in C\n  - [pcsx-redux](https://github.com/grumpycoders/pcsx-redux) : \n  - [gameboy-emulator](https://github.com/tutasmaster/gameboy-emulator) : A simple gameboy emulator made in C++.\n  - [rpcs3](https://github.com/RPCS3/rpcs3) : PS3 emulator/debugger\n  - [libgba-cpp](https://github.com/JPTIZ/libgba-cpp) : C++ Library for Game Boy Advance Development\n  - [3DNes_Engine](https://github.com/tructv/3DNes_Engine) : Engine to convert NES games into 3D\n\n## Maths\n[Back to top](#Index)\n- [enoki](https://github.com/mitsuba-renderer/enoki) : Enoki: structured vectorization and differentiation on modern processor architectures\n- [units](https://github.com/mpusz/units) : A Physical Units Library for C++ providing compile-time dimensional analysis and unit/quantity manipulation\n- [Compile-Time-Equations-Handler](https://github.com/Saswatm123/Compile-Time-Equations-Handler) : \n- [version2](https://github.com/vectorclass/version2) : Vector class library, latest version\n- [simde](https://github.com/nemequ/simde) : Implementations of SIMD instruction sets for systems which don't natively support them.\n- [kissfft](https://github.com/mborgerding/kissfft) : a Fast Fourier Transform (FFT) library that tries to Keep it Simple, Stupid\n- [MarkovNameGenerator](https://github.com/Tw1ddle/MarkovNameGenerator) : Markov process-based procedural name and word generator\n- [eigen-git-mirror](https://github.com/eigenteam/eigen-git-mirror) : Git mirror of the official Eigen's repository -- PULL REQUEST MUST BE SENT TO: https://bitbucket.org/eigen/eigen\n- [curves](https://github.com/ethz-asl/curves) : A library of curves for estimation.\n- [hexbvh](https://github.com/bryanmcnett/hexbvh) : A hexagonal prism BVH: more efficient than AABB.\n- [wavalyzer](https://github.com/geomaster/wavalyzer) : Small C++ utility for Fourier analysis and visualization of an audio signal\n- [dj_fft](https://github.com/jdupuy/dj_fft) : Header only FFT library\n- [essentialmath](https://github.com/jvanverth/essentialmath) : Example code and libraries for the book \"Essential Mathematics for Games and Interactive Applications.\"\n- [fieldgen](https://github.com/GeometryCollective/fieldgen) : Generates high-quality, optimally smooth tangent direction fields on triangle meshes.\n- [simd](https://github.com/WebAssembly/simd) : Branch of the spec repo scoped to discussion of SIMD in WebAssembly\n- [spherical-harmonics](https://github.com/google/spherical-harmonics) : Spherical harmonics library\n- [MathUtilities](https://github.com/zalo/MathUtilities) : A collection of some of the neat math and physics tricks that I've collected over the last few years.\n- [GLFFT](https://github.com/Themaister/GLFFT) : A C++11/OpenGL library for the Fast Fourier Transform\n- [aabo](https://github.com/bryanmcnett/aabo) : Axis Aligned Bounding Octahedron\n- [bhh](https://github.com/bryanmcnett/bhh) : Bounding Halfspace Hierarchy\n- [muFFT](https://github.com/Themaister/muFFT) : A library for computing the Fast Fourier Transform (FFT) in one or two dimensions.\n- [taichi_mpm](https://github.com/yuanming-hu/taichi_mpm) : High-performance material point method (MPM) solver. (ACM Transactions on Graphics, SIGGRAPH 2018)\n- [random](https://github.com/effolkronium/random) : Random for modern C++ with convenient API\n- [dlaf](https://github.com/fogleman/dlaf) : Diffusion-limited aggregation, fast.\n- [rtm](https://github.com/nfrechette/rtm) : Realtime Math\n- [pt_math](https://github.com/pmttavara/pt_math) : public domain fast scalar math routines\n- [splines-lib](https://github.com/andrewwillmott/splines-lib) : Library of cubic spline utilities\n- [ArcLengthParameterisation](https://github.com/dwilliamson/ArcLengthParameterisation) : Accurately control the speed at which parameters interpolate over curves\n- [SipHash](https://github.com/veorq/SipHash) : High-speed pseudorandom function (reference code)\n- [bfp](https://github.com/libcg/bfp) : Beyond Floating Point - Posit C/C++ implementation\n- [ezSIFT](https://github.com/robertwgh/ezSIFT) : ezSIFT: An easy-to-use standalone SIFT library written in C/C++\n- [fpot](https://github.com/graphitemaster/fpot) : Fast Point Overlap Test\n- [linedetector](https://github.com/slslam/linedetector) : Efficient and Effective Line Segment Detector\n- [matplotlib-cpp](https://github.com/lava/matplotlib-cpp) : Extremely simple yet powerful header-only C++ plotting library built on the popular matplotlib\n- [lolremez](https://github.com/samhocevar/lolremez) : Polynomial Approximations using the Remez Algorithm\n- [Flicks](https://github.com/OculusVR/Flicks) : A unit of time defined in C++.\n- [lunar](https://github.com/Bill-Gray/lunar) : Basic astronomical functions\n- [math-as-code](https://github.com/Jam3/math-as-code) : a cheat-sheet for mathematical notation in code form\n- [sr_graph](https://github.com/kosua20/sr_graph) : A simple, one-file, header-only, C++ utility for graphs, curves and histograms.\n- [xo-math](https://github.com/xoorath/xo-math) : Fast math for game developers. No headaches, no cruft.\n- [understanding_floatingpoint](https://github.com/Ushio/understanding_floatingpoint) : \n- [normals_revisited](https://github.com/graphitemaster/normals_revisited) : revisiting a known normal transformation in computer graphics\n- [Cullminator9000](https://github.com/Alan-FGR/Cullminator9000) : The fastest culler ever\n- [Simd](https://github.com/ermig1979/Simd) : C++ image processing library with using of SIMD: SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX-512, VMX(Altivec) and VSX(Power7), NEON for ARM.\n- [SSE-to-NEON](https://github.com/otim/SSE-to-NEON) : Header file to translate SSE instructions to ARM NEON instructions\n- [flatbush](https://github.com/IMQS/flatbush) : C++ port of https://github.com/mourner/flatbush\n- [libsimdpp](https://github.com/p12tic/libsimdpp) : Portable header-only zero-overhead C++ low level SIMD library\n- [seamoptimizer](https://github.com/ands/seamoptimizer) : A C/C++ single-file library that minimizes the hard transition errors of disjoint edges in lightmaps.\n- [tinyexpr](https://github.com/codeplea/tinyexpr) : tiny recursive descent expression parser, compiler, and evaluation engine for math expressions\n- [Summed-Area-Table](https://github.com/corporateshark/Summed-Area-Table) : Summed-Area Table in a single file header-only C++11 library\n- [fft](https://github.com/wareya/fft) : Public-domain single-header FFT library (power-of-2 size case only)\n- [mathtoolbox](https://github.com/yuki-koyama/mathtoolbox) : Mathematical tools (interpolation, dimensionality reduction, optimization, etc.) written in C++11 with Eigen\n- [blaze](https://github.com/parsa/blaze) : Mirror of Blaze library on Bitbucket\n- [blaze_tensor](https://github.com/STEllAR-GROUP/blaze_tensor) : 3D Tensors for Blaze (https://bitbucket.org/blaze-lib/blaze)\n- [controlled_random](https://github.com/skarupke/controlled_random) : \n- Cryptography and Hashing and Compression\n  - [openh264](https://github.com/cisco/openh264) : Open Source H.264 Codec\n  - [oldunzip](https://github.com/jsummers/oldunzip) : ZIP implode/explode and reduce/expand decompression libraries\n  - [lonesha256-ansi](https://github.com/ryancdotorg/lonesha256-ansi) : Portable, endian-proof, single-file, single-function sha256 implementation in ANSI C\n  - [lonesha256](https://github.com/BareRose/lonesha256) : Portable, endian-proof, single-file, single-function sha256 implementation in C\n  - [lzsa](https://github.com/emmanuel-marty/lzsa) : Byte-aligned, efficient lossless packer that is optimized for fast decompression on 8-bit micros\n  - [zultra](https://github.com/emmanuel-marty/zultra) : Fast deflate implementation with zopfli-like ratios and a streaming API\n  - [lz4ultra](https://github.com/emmanuel-marty/lz4ultra) : Optimal LZ4 compressor, that produces files that decompress faster while keeping the best compression ratio\n  - [em_inflate](https://github.com/emmanuel-marty/em_inflate) : Fast, small, in-memory inflate (zlib, deflate and gzip decompression)\n  - [FastLZ](https://github.com/ariya/FastLZ) : Byte-aligned LZ77 compression\n  - [NvPipe](https://github.com/NVIDIA/NvPipe) : NVIDIA-accelerated zero latency video compression library for interactive remoting applications\n  - [SymCrypt](https://github.com/microsoft/SymCrypt) : Cryptographic library\n  - [lz4](https://github.com/lz4/lz4) : Extremely Fast Compression algorithm\n  - [zip](https://github.com/kuba--/zip) : A portable, simple zip library written in C\n  - [zlib](https://github.com/madler/zlib) : A massively spiffy yet delicately unobtrusive compression library.\n  - [libpng](https://github.com/glennrp/libpng) : LIBPNG: Portable Network Graphics support, official libpng repository\n  - [meow_hash](https://github.com/cmuratori/meow_hash) : Official version of the Meow hash, an extremely fast non-cryptographic hash\n  - [ulz](https://github.com/encode84/ulz) : An ultra-fast LZ77 compressor/data compression library\n  - [csoinfo](https://github.com/FRex/csoinfo) : Small Windows specific C program to print compressed and original size of CSO/ZSO file (compressed ISO)\n  - [WjCryptLib](https://github.com/WaterJuice/WjCryptLib) : Public Domain C Library of Cryptographic functions. Including: MD5, SHA1, SHA256, SHA512, RC4, AES, AES-CTR, AES-OFB, AES-CBC\n  - [ooz](https://github.com/powzix/ooz) : Open source Kraken / Mermaid / Selkie / Leviathan / LZNA / Bitknit decompressor\n  - [xxHash](https://github.com/Cyan4973/xxHash) : Extremely fast non-cryptographic hash algorithm\n  - [robin-hood-hashing](https://github.com/martinus/robin-hood-hashing) : Fast & memory efficient hashtable based on robin hood hashing for C++11/14/17/20\n  - [minih264](https://github.com/lieff/minih264) : Minimalistic H264/SVC encoder single header library\n  - [density](https://github.com/centaurean/density) : Superfast compression library\n  - [hash-prospector](https://github.com/skeeto/hash-prospector) : Automated integer hash function discovery\n  - [snappy](https://github.com/google/snappy) : A fast compressor/decompressor\n  - [miniz-cpp](https://github.com/tfussell/miniz-cpp) : A cross-platform header-only C++14 library for reading and writing ZIP files\n  - [base-x](https://github.com/Kronuz/base-x) : BaseX encoder / decoder for C++\n  - [ed25519](https://github.com/orlp/ed25519) : Portable C implementation of Ed25519, a high-speed high-security public-key signature system.\n  - [smhasher](https://github.com/aappleby/smhasher) : Automatically exported from code.google.com/p/smhasher\n  - [mbedcrypto](https://github.com/azadkuh/mbedcrypto) : a portable, small, easy to use and fast c++14 library for cryptography.\n  - [hashcat](https://github.com/hashcat/hashcat) : World's fastest and most advanced password recovery utility\n  - [nozip](https://github.com/vivkin/nozip) : Tiny C library for reading ZIP files\n  - [hashlibpp](https://github.com/aksalj/hashlibpp) : Simple and very easy to use library to create a cryptographic checksum (hash) in plain C++\n  - [fast_zlib](https://github.com/gildor2/fast_zlib) : Heavily optimized zlib compression algorithm\n  - [luazen](https://github.com/philanc/luazen) : simple compression, encoding and cryptographic functions\n  - [lizard](https://github.com/inikep/lizard) : Lizard (formerly LZ5) is an efficient compressor with very fast decompression. It achieves compression ratio that is comparable to zip/zlib and zstd/brotli (at low and medium compression levels) at…\n  - [andyzip](https://github.com/andy-thomason/andyzip) : A fast and compact modern C++ (header only) zip, bzip2 and brotli library\n  - [miniz](https://github.com/richgel999/miniz) : miniz: Single C source file zlib-replacement library, originally from code.google.com/p/miniz\n  - [cryptopp](https://github.com/weidai11/cryptopp) : free C++ class library of cryptographic schemes\n  - [cocoa](https://github.com/r-lyeh-archived/cocoa) : Cocoa is an uniform hashing library with no dependencies that provides interface for CRC32, CRC64, GCRC, RS, JS, PJW, ELF, BKDR, SBDM, DJB, DJB2, BP, FNV, FNV1a, AP, BJ1, MH2, SHA1, SFH (C++11)\n  - [bundle](https://github.com/r-lyeh-archived/bundle) : Bundle, an embeddable compression library: DEFLATE, LZMA, LZIP, BZIP2, ZPAQ, LZ4, ZSTD, BROTLI, BSC, CSC, BCM, MCM, ZMOLLY, ZLING, TANGELO, SHRINKER, CRUSH, LZJB and SHOCO streams in a ZIP file (C++03)(C++11)\n  - [deutex](https://github.com/Doom-Utils/deutex) : WAD composer for Doom, Heretic, Hexen, and Strife\n  - [cxx14-hash](https://github.com/asutton/cxx14-hash) : An object hashing facility.\n  - [nibrans](https://github.com/BareRose/nibrans) : Simple, single-file, nibble-based, adaptive rANS library with SSE2-accelerated modeling\n  - [pithy](https://github.com/johnezang/pithy) : Fast compression / decompression library.\n  - [microtar](https://github.com/rxi/microtar) : A lightweight tar library written in ANSI C\n  - [dmc_unrar](https://github.com/DrMcCoy/dmc_unrar) : A dependency-free, single-file FLOSS unrar library\n  - [FastPFor](https://github.com/lemire/FastPFor) : The FastPFOR C++ library: Fast integer compression\n  - [MetroHash](https://github.com/jandrewrogers/MetroHash) : MetroHash v1: Exceptionally fast and statistically robust hash functions\n  - [Kuku](https://github.com/microsoft/Kuku) : Kuku is a compact and convenient cuckoo hashing library written in C++.\n  - [lzma_sh](https://github.com/Shelwien/lzma_sh) : compact lzma decoder\n  - [zstd](https://github.com/facebook/zstd) : Zstandard - Fast real-time compression algorithm\n- Linear Algebra\n  - [cglm](https://github.com/recp/cglm) : Highly Optimized Graphics Math (glm) for C\n  - [eigen](https://github.com/PX4/eigen) : Eigen is a C++ template library for linear algebra: matrices, vectors, numerical solvers, and related algorithms.\n  - [vml](https://github.com/valentingalea/vml) : C++17 GLSL-like vector and matrix math lib\n  - [hlml](https://github.com/fmutant/hlml) : vectorized high-level math library\n  - [mathfu](https://github.com/google/mathfu) : C++ math library developed primarily for games focused on simplicity and efficiency.\n  - [xsimd](https://github.com/QuantStack/xsimd) : Modern, portable C++ wrappers for SIMD intrinsics and parallelized, optimized math implementations (SSE, AVX, NEON, AVX512)\n  - [vectorial](https://github.com/scoopr/vectorial) : Vector math library with NEON/SSE support\n  - [dualquaternion](https://github.com/procedural/dualquaternion) : \n  - [AngryQuaternion](https://github.com/matejd/AngryQuaternion) : Dual Quaternion Skinning\n  - [MathGeoLib](https://github.com/juj/MathGeoLib) : A C++ library for linear algebra and geometry manipulation for computer graphics.\n  - [Handmade-Math](https://github.com/HandmadeMath/Handmade-Math) : A simple math library for games and computer graphics. Compatible with both C and C++.\n  - [glm](https://github.com/g-truc/glm) : OpenGL Mathematics (GLM)\n  - [MEPP](https://github.com/MEPP-team/MEPP) : Mepp - 3D MEsh Processing Platform\n  - [gemmlowp](https://github.com/google/gemmlowp) : Low-precision matrix multiplication\n  - [linalg](https://github.com/sgorsten/linalg) : linalg.h is a single header, public domain, short vector math library for C++\n  - [cmath3d](https://github.com/jpreiss/cmath3d) : 3d math library for C. Vectors, 3x3 matrices, quaternions.\n  - [linmath.h](https://github.com/datenwolf/linmath.h) : a lean linear math library, aimed at graphics programming. Supports vec3, vec4, mat4x4 and quaternions\n  - [xsimd](https://github.com/xtensor-stack/xsimd) : C++ wrappers for SIMD intrinsics and parallelized, optimized mathematical functions (SSE, AVX, NEON, AVX512)\n  - [ConeTightFitAABB](https://github.com/Ushio/ConeTightFitAABB) : \n  - [MIPP](https://github.com/aff3ct/MIPP) : MIPP is a portable wrapper for SIMD instructions written in C++11. It supports NEON, SSE, AVX and AVX-512.\n  - [geomc](https://github.com/trbabb/geomc) : A c++ linear algebra template library\n- Meshes & Polygons\n  - [shaper](https://github.com/paulknysh/shaper) : A C++ tool for 3D reconstruction from parallel 2D sections\n  - [libigl](https://github.com/libigl/libigl) : Simple C++ geometry processing library.\n  - [cinolib](https://github.com/mlivesu/cinolib) : A generic programming header only C++ library for processing polygonal and polyhedral meshes\n  - [assimp](https://github.com/assimp/assimp) : Official Open Asset Import Library Repository. Loads 40+ 3D file formats into one unified and clean data structure.\n  - [instant-meshes](https://github.com/wjakob/instant-meshes) : Interactive field-aligned mesh generator\n  - [trimesh2](https://github.com/Forceflow/trimesh2) : C++ library and set of utilities for input, output, and basic manipulation of 3D triangle meshes\n  - [SeamAwareDecimater](https://github.com/songrun/SeamAwareDecimater) : Mesh simplification with UV's boundary preserved\n  - [hole_fixer](https://github.com/Erkaman/hole_fixer) : Demo implementation of smoothly filling holes in 3D meshes using surface fairing\n  - [bounding-mesh](https://github.com/gaschler/bounding-mesh) : Implementation of the bounding mesh and bounding convex decomposition algorithms for single-sided mesh approximation\n  - [boundary-first-flattening](https://github.com/GeometryCollective/boundary-first-flattening) : \n  - [meshoptimizer](https://github.com/zeux/meshoptimizer) : Mesh optimization library that makes meshes smaller and faster to render\n  - [meshgeometry](https://github.com/r03ert0/meshgeometry) : mesh geometry tools\n  - [MeshLib](https://github.com/MeshInspector/MeshLib) : Mesh processing library\n  - [draco](https://github.com/google/draco) : Draco is a library for compressing and decompressing 3D geometric meshes and point clouds. It is intended to improve the storage and transmission of 3D graphics.\n  - [xatlas](https://github.com/prideout/xatlas) : Mesh parameterization library\n  - [PolyFit](https://github.com/LiangliangNan/PolyFit) : Polygonal Surface Reconstruction from Point Clouds\n  - [gDel3D](https://github.com/ashwin/gDel3D) : gDel3D is the fastest 3D Delaunay triangulation algorithm. It uses the GPU for massive parallelism.\n  - [quickhull](https://github.com/akuukka/quickhull) : C++ implementation of the 3D QuickHull algorithm\n  - [voxels](https://github.com/stoyannk/voxels) : Voxels Library - C++ library for voxel manipulation and polygonization\n  - [libmc](https://github.com/glines/libmc) : C/C++ Isosurface Extraction library\n  - [voxelizer](https://github.com/kctess5/voxelizer) : A simple mesh voxelizer, GPU accelerated with CUDA\n  - [Fast-Quadric-Mesh-Simplification](https://github.com/sp4cerat/Fast-Quadric-Mesh-Simplification) : Mesh triangle reduction using quadrics\n  - [earcut.hpp](https://github.com/mapbox/earcut.hpp) : Fast, header-only polygon triangulation\n  - [delabella](https://github.com/msokalski/delabella) : 2D Delaunay triangulation (dela) - super stable (bella!)\n  - [MEPP2](https://github.com/MEPP-team/MEPP2) : Mepp2 - 3D MEsh Processing Platform\n  - [xatlas](https://github.com/jpcy/xatlas) : Mesh parameterization / UV unwrapping library\n  - [QuadriFlow](https://github.com/hjwdzh/QuadriFlow) : QuadriFlow: A Scalable and Robust Method for Quadrangulation\n  - [quantized-mesh](https://github.com/AnalyticalGraphicsInc/quantized-mesh) : Specification for streaming massive terrain datasets for 3D visualization.\n  - [Easy3D](https://github.com/LiangliangNan/Easy3D) : A lightweight, easy-to-use, and efficient C++ library for processing and rendering 3D data (i.e., meshes, point clouds).\n  - [pmp-library](https://github.com/pmp-library/pmp-library) : The Polygon Mesh Processing Library\n  - [TriWild](https://github.com/wildmeshing/TriWild) : TriWild: Robust Triangulation with Curve Constraints\n  - [NuoModelViewer](https://github.com/middlefeng/NuoModelViewer) : A simple Wavefront OBJ viewer.\n  - [MagicaVoxel-VOX-importer](https://github.com/RichysHub/MagicaVoxel-VOX-importer) : Blender import script for MagicaVoxel .vox format as cube primitives.\n  - [polypartition](https://github.com/ivanfratric/polypartition) : Tiny Polygon Partitioning and Triangulation Library\n  - [CDT](https://github.com/artem-ogre/CDT) : C++ library for constrained Delaunay triangulation (CDT)\n  - [rect-packer](https://github.com/wsmind/rect-packer) : A simple yet efficient box packing algorithm\n- Noise\n  - [LowDiscBlueNoise](https://github.com/dcoeurjo/LowDiscBlueNoise) : \n  - [FastNoise](https://github.com/Auburns/FastNoise) : Fast C++ Noise Library\n  - [BlueNoiseDitherMaskTiles](https://github.com/jdupuy/BlueNoiseDitherMaskTiles) : Utility for producing blue-noise dither mask tiles on the GPU\n  - [BlueNoiseDitherPatternGeneration](https://github.com/Atrix256/BlueNoiseDitherPatternGeneration) : Comparing some methods of generating blue noise dither patterns, to go with a blog post\n  - [VirtualPlanetBuilder](https://github.com/openscenegraph/VirtualPlanetBuilder) : Tool for generateing paged databases from geospatial imagery and heightfields\n  - [TileableVolumeNoise](https://github.com/sebh/TileableVolumeNoise) : Collection of functions that can be used to generate tileable volume/3d noise. An exemple of volume noise functions that can be specifically used for clouds is also presented.\n  - [infnoise](https://github.com/13-37-org/infnoise) : The world's easiest TRNG to get right\n  - [oidn](https://github.com/OpenImageDenoise/oidn) : Intel(R) Open Image Denoise library\n  - [open-simplex-noise-in-c](https://github.com/smcameron/open-simplex-noise-in-c) : Port of Kurt Spencer's java implementation of open simplex noise to C -- Note: This is NOT Ken Perlin's Simplex noise algorithm.\n  - [heman](https://github.com/prideout/heman) : C99 heightmap utilities.\n  - [SimplexNoise](https://github.com/SRombauts/SimplexNoise) : A Perlin's Simplex Noise C++ Implementation (1D, 2D, 3D)\n  - [NoiseGenerator](https://github.com/Nomoresleep/NoiseGenerator) : Node-based Noise and Pattern Editing Software\n  - [SimplexNoise](https://github.com/devdad/SimplexNoise) : * This is a clean, fast, modern and free Perlin Simplex noise function.All Public Functions are BlueprintCallable so they can be used in every blueprint. From DevDad and Dedicated to you and Unreal…\n  - [VoronoiMapGen](https://github.com/phoenixzz/VoronoiMapGen) : Generation of random Island maps with Voronoi using C++\n  - [worley](https://github.com/bhickey/worley) : worley noise\n  - [SimplexNoise](https://github.com/PawelWorwa/SimplexNoise) : Cpp port for Simplex Noise library\n  - [FastNoiseSIMD](https://github.com/Auburns/FastNoiseSIMD) : C++ SIMD Noise Library\n  - [SimplexNoise](https://github.com/simongeilfus/SimplexNoise) : Collection of Simplex Noise functions\n  - [hmm](https://github.com/fogleman/hmm) : Heightmap meshing utility.\n  - [forvor](https://github.com/stolk/forvor) : Fortune's Voronoi Generator\n  - [perlin-noise](https://github.com/stegu/perlin-noise) : Various versions of Perlin noise (C and C++)\n  - [matchstick](https://github.com/Mischa-Alff/matchstick) : toying with markov stuff\n\n## Graphics\n[Back to top](#Index)\n- [fun-with-graphics](https://github.com/FancyVin/fun-with-graphics) : Fun with graphics\n- [abrash-black-book](https://github.com/jagregory/abrash-black-book) : Markdown source for Michael Abrash's Graphics Programming Black Book\n- [GraphicsGems](https://github.com/erich666/GraphicsGems) : Code for the \"Graphics Gems\" book series\n- [gpu-monitoring-tools](https://github.com/NVIDIA/gpu-monitoring-tools) : Tools for monitoring NVIDIA GPUs on Linux\n- [multi-gpu-programming-models](https://github.com/NVIDIA/multi-gpu-programming-models) : Examples demonstrating available options to program multiple GPUs in a single node or a cluster\n- [mesa](https://github.com/daniel-schuermann/mesa) : Mesa 3D graphics library (mirror; no pull requests here please)\n- [USD](https://github.com/PixarAnimationStudios/USD) : Universal Scene Description\n- [FidelityFX](https://github.com/GPUOpen-Effects/FidelityFX) : A set of AMD provided GPU effects with provided source and sample implementations\n- [Custom-Middleware](https://github.com/ConfettiFX/Custom-Middleware) : This repository holds custom and commercial middleware packages\n- [MDL-SDK](https://github.com/NVIDIA/MDL-SDK) : NVIDIA Material Definition Language SDK\n- [rendering-bib](https://github.com/wkjarosz/rendering-bib) : My master bibliography file with publications mostly in computer graphics, rendering, transport theory, and statistics.\n- [GPUZen2](https://github.com/wolfgangfengel/GPUZen2) : Example programs and source code for GPU Zen 2\n- [GDC2019_Public](https://github.com/TheRealMJP/GDC2019_Public) : Public repository for my GDC 2019 presentation \"Breaking Down Barriers\"\n- [azura](https://github.com/vasumahesh1/azura) : Repository for real time rendering engine and tools for C++\n- [sun-sky](https://github.com/andrewwillmott/sun-sky) : Various sun/sky models, convolution of theta/gamma-parameterised models\n- [SDL2](https://github.com/emscripten-ports/SDL2) : \n- [NVFC](https://github.com/graphitemaster/NVFC) : OpenSource tool for monitoring, configuring and overclocking NVIDIA GPUs\n- [libtess2](https://github.com/memononen/libtess2) : Game and tools oriented refactored version of GLU tesselator.\n- [GraphicsSamples](https://github.com/NVIDIAGameWorks/GraphicsSamples) : GameWorks cross-platform graphics API samples\n- [MetricsDiscoveryHelper](https://github.com/GameTechDev/MetricsDiscoveryHelper) : A wrapper for Intel(R) MetricsDiscovery API that simplifies some common tasks and provides a more unified interface across different graphics APIs.\n- [glTF-Tutorials](https://github.com/KhronosGroup/glTF-Tutorials) : glTF Tutorials\n- [amdgpu_ihv_info](https://github.com/procedural/amdgpu_ihv_info) : \n- [NonEuclidean](https://github.com/HackerPoet/NonEuclidean) : A Non-Euclidean Rendering Engine for 3D scenes.\n- [aobaker](https://github.com/karimnaaji/aobaker) : ambient occlusion baking tool\n- [mesa](https://github.com/mesa3d/mesa) : Mesa 3D graphics library (mirror; pull requests are ignored)\n- [piglit](https://github.com/mesa3d/piglit) : Piglit 3D library test suite\n- [DIWide](https://github.com/notnullnotvoid/DIWide) : A featureful realtime 3D software render\n- [yocto-gl](https://github.com/xelatihy/yocto-gl) : Yocto/GL: Tiny C++ Libraries for Data-Driven Physically-based Graphics\n- [libgltf](https://github.com/code4game/libgltf) : glTF 2.0 parser for C++11\n- [tinygltf](https://github.com/syoyo/tinygltf) : Header only C++11 tiny glTF 2.0 library\n- [AGS_SDK](https://github.com/GPUOpen-LibrariesAndSDKs/AGS_SDK) : AMD GPU Services (AGS) library and samples\n- [sse-avx-rasterization](https://github.com/Erkaman/sse-avx-rasterization) : Triangle rasterization routines accelerated by SSE and AVX\n- [RGA](https://github.com/GPUOpen-Tools/RGA) : The Radeon GPU Analyzer (RGA) is an offline compiler and code analysis tool for Vulkan, DirectX, OpenGL, and OpenCL.\n- [glTF](https://github.com/KhronosGroup/glTF) : glTF – Runtime 3D Asset Delivery\n- [forsyth](https://github.com/vivkin/forsyth) : Linear-Speed Vertex Cache Optimization\n- [GPA](https://github.com/GPUOpen-Tools/GPA) : GPU Performance API for AMD GPUs\n- [color-theory](https://github.com/tallys/color-theory) : \n- [moderngpu](https://github.com/moderngpu/moderngpu) : Patterns and behaviors for GPU computing\n- [water-resources](https://github.com/crest-ocean/water-resources) : Resources for water rendering\n- [cgltf](https://github.com/prideout/cgltf) : Single-file C glTF loader\n- [sts](https://github.com/Sigkill79/sts) : Single file library for vertex cache optimisation of triangles.\n- [stdgpu](https://github.com/stotko/stdgpu) : stdgpu: Efficient STL-like Data Structures on the GPU\n- [Scape](https://github.com/UglySwedishFish/Scape) : Highly realistic landspace rendering engine.\n- [bigger](https://github.com/yuki-koyama/bigger) : bigg (bgfx + imgui + glfw + glm) + utils\n- [tinycolormap](https://github.com/yuki-koyama/tinycolormap) : A header-only, single-file library for colormaps written in C++11\n- [vacancy](https://github.com/unclearness/vacancy) : Vacancy: A Voxel Carving implementation in C++\n- [Rendu](https://github.com/kosua20/Rendu) : A simple realtime graphics playground for experimentations.\n- [GPU-Gems-Book-Source-Code](https://github.com/QianMo/GPU-Gems-Book-Source-Code) : CD Content ( Source Code ) Collection of Book <GPU Gems > 1~ 3 | 《GPU精粹》 1~ 3 随书CD（源代码）珍藏\n- [tinyrenderer](https://github.com/ssloy/tinyrenderer) : A brief computer graphics / rendering course\n- [osre](https://github.com/kimkulling/osre) : An open source render engine\n- [SSAO](https://github.com/CptPotato/SSAO) : A screen space ambient occlusion (SSAO) algorithm\n- [Voxelator](https://github.com/Mischa-Alff/Voxelator) : Voxel stuff entirely on the GPU using lots of GPU stuff and very little CPU stuff. Requires GLFW, GLEW, OpenGL, and a computer with a fairly recent GPU.\n- [precomputed_atmospheric_scattering](https://github.com/ebruneton/precomputed_atmospheric_scattering) : This project provides a new implementation of our EGSR 2008 paper \"Precomputed Atmospheric Scattering\".\n- [OceanSurface](https://github.com/jiasli/OceanSurface) : A real-time ocean surface simulated using Tessendorf's algorithm and OpenGL.\n- [3D-Terrain-Generator](https://github.com/IonUreche/3D-Terrain-Generator) : \n- [fx-gltf](https://github.com/jessey-git/fx-gltf) : A C++14/C++17 header-only library for simple, efficient, and robust serialization/deserialization of glTF 2.0\n- [carbon](https://github.com/rivten/carbon) : Zig + Sokol + ImGui\n- API Abstractions\n  - [nicegraf](https://github.com/nicebyte/nicegraf) : An abstraction layer for low-level platform-specific graphics APIs.\n  - [swiftshader](https://github.com/google/swiftshader) : SwiftShader is a high-performance CPU-based implementation of the OpenGL ES and Direct3D 9 graphics APIs. Its goal is to provide hardware independence for advanced 3D graphics.\n  - [bgfx.cmake](https://github.com/JoshuaBrookover/bgfx.cmake) : Independently maintained CMake build scripts for bgfx. Released under public domain.\n  - [bgfx-header-extension-library](https://github.com/SnapperTT/bgfx-header-extension-library) : Header-only helper library for Bgfx to help you hit the ground running. Also includes a bunch of post processing filters to complete common graphical tasks\n  - [FlyCube](https://github.com/andrejnau/FlyCube) : Graphics API wrapper with support for Directx 11, Directx 12, OpenGL, Vulkan.\n  - [libSDL2pp](https://github.com/libSDL2pp/libSDL2pp) : C++11 bindings/wrapper for SDL2\n  - [vg-renderer](https://github.com/jdryg/vg-renderer) : A vector graphics renderer for bgfx, based on ideas from NanoVG and ImDrawList (Dear ImGUI)\n  - [particlasm](https://github.com/inequation/particlasm) : A modular, data-driven particle system with retargetable back-ends\n  - [Ashes](https://github.com/DragonJoker/Ashes) : Rendering library written in C++17, matching closely Vulkan interfaces.\n  - [bgfx](https://github.com/bkaradzic/bgfx) : Cross-platform, graphics API agnostic, \"Bring Your Own Engine/Framework\" style rendering library.\n  - [bfxr-api-example](https://github.com/increpare/bfxr-api-example) : An example program using the Bfxr API.\n  - [tinyrenderers](https://github.com/chaoticbob/tinyrenderers) : Single header implemenations of Vulkan and D3D12 renderers\n  - [LLGL](https://github.com/LukasBanana/LLGL) : Low Level Graphics Library (LLGL) is a thin abstraction layer for the modern graphics APIs OpenGL, Direct3D, Vulkan, and Metal\n  - [fg](https://github.com/acdemiralp/fg) : Rendering abstraction which describes a frame as a directed acyclic graph of render tasks and resources.\n  - [magnum-integration](https://github.com/mosra/magnum-integration) : Integration libraries for the Magnum C++11/C++14 graphics engine\n  - [magnum](https://github.com/mosra/magnum) : Lightweight and modular C++11/C++14 graphics middleware for games and data visualization\n- OpenGL\n  - [compute_rasterizer](https://github.com/m-schuetz/compute_rasterizer) : Rendering Point Clouds with Compute Shaders\n  - [gl_vk_meshlet_cadscene](https://github.com/nvpro-samples/gl_vk_meshlet_cadscene) : This OpenGL/Vulkan sample illustrates the use of \"mesh shaders\" for rendering CAD models.\n  - [Nimble](https://github.com/diharaw/Nimble) : An OpenGL renderer with a modern and extensible rendering pipeline.\n  - [glxw](https://github.com/rikusalminen/glxw) : OpenGL loader and dynamic linker\n  - [TerrainEngine-OpenGL](https://github.com/fede-vaccaro/TerrainEngine-OpenGL) : An OpenGL 4 and C++ program which renders a procedural scene.\n  - [GLOVE](https://github.com/Think-Silicon/GLOVE) : GLOVE (GL Over Vulkan) is a cross-platform software library that acts as an intermediate layer between an OpenGL application and Vulkan\n  - [opengles-book-samples](https://github.com/danginsburg/opengles-book-samples) : Automatically exported from code.google.com/p/opengles-book-samples\n  - [PhotonBox](https://github.com/Haeri/PhotonBox) : A portable modern OpenGL Game-Engine with focus on PBR\n  - [opengl-es-sdk-for-android](https://github.com/ARM-software/opengl-es-sdk-for-android) : OpenGL ES SDK for Android\n  - [Pangolin](https://github.com/stevenlovegrove/Pangolin) : Pangolin is a lightweight portable rapid development library for managing OpenGL display / interaction and abstracting video input.\n  - [3DWorld](https://github.com/fegennari/3DWorld) : 3D Procedural Game Engine Using OpenGL\n  - [AtmosphericScattering](https://github.com/diharaw/AtmosphericScattering) : An OpenGL implementation of Eric Bruneton's Precomputed Atmospheric Scattering paper.\n  - [HybridRenderingEngine](https://github.com/Angelo1211/HybridRenderingEngine) : Clustered Forward/Deferred renderer with Physically Based Shading, Image Based Lighting and a whole lot of OpenGL.\n  - [globjects](https://github.com/cginternals/globjects) : C++ library strictly wrapping OpenGL objects.\n  - [libepoxy](https://github.com/anholt/libepoxy) : Epoxy is a library for handling OpenGL function pointer management for you\n  - [vaserenderer](https://github.com/tyt2y3/vaserenderer) : VASE renderer is a polyline and curve renderer on OpenGL.\n  - [glXXw](https://github.com/paroj/glXXw) : OpenGL loader for GL3 Core and GLES2/3 - like gl3w, but written in CMake\n  - [gltut](https://github.com/paroj/gltut) : Learning Modern 3D Graphics Programming\n  - [piglit](https://github.com/Igalia/piglit) : (Unofficial mirror for development) An open-source test suite for OpenGL implementations\n  - [GfxSampleFramework](https://github.com/john-chapman/GfxSampleFramework) : OpenGL-based app framework for graphics samples/prototyping.\n  - [MentalGL](https://github.com/LukasBanana/MentalGL) : Single header OpenGL utility library in the public domain\n  - [OOGL](https://github.com/Overv/OOGL) : Object-oriented C++ wrapper for OpenGL.\n  - [glad](https://github.com/Dav1dde/glad) : Multi-Language Vulkan/GL/GLES/EGL/GLX/WGL Loader-Generator based on the official specs.\n  - [harfbuzz-example](https://github.com/tangrams/harfbuzz-example) : Harfbuzz text-shaping example with OpenGL using Freetype\n  - [sparkle](https://github.com/tcoppex/sparkle) : A modern particle engine running on GPU, using c++14 and OpenGL 4.4.\n  - [Cell](https://github.com/JoeyDeVries/Cell) : OpenGL C++ Graphics Engine\n  - [glfw](https://github.com/glfw/glfw) : A multi-platform library for OpenGL, OpenGL ES, Vulkan, window and input\n  - [Glitter](https://github.com/Polytonic/Glitter) : Dead Simple OpenGL\n  - [angle](https://github.com/google/angle) : A conformant OpenGL ES implementation for Windows, Mac and Linux.\n  - [gl-terrain-demo](https://github.com/itoral/gl-terrain-demo) : OpenGL terrain rendering demo\n  - [antons_opengl_tutorials_book](https://github.com/capnramses/antons_opengl_tutorials_book) : Anton's OpenGL 4 Tutorials book - Demo Code\n  - [freetype-gl](https://github.com/rougier/freetype-gl) : OpenGL text using one vertex buffer, one texture and FreeType\n  - [Guide-to-Modern-OpenGL-Functions](https://github.com/fendevel/Guide-to-Modern-OpenGL-Functions) : A guide to using modern OpenGL functions.\n  - [lightmapper](https://github.com/ands/lightmapper) : A C/C++ single-file library for drop-in lightmap baking. Just use your existing OpenGL renderer to bounce light!\n  - [AGE](https://github.com/Another-Game-Engine/AGE) : AGE - C++11 OpenGL4 Game Engine\n  - [GLS](https://github.com/binary1248/GLS) : GL Stuff - A library aimed at reducing the boilerplate OpenGL code you always have to write.\n  - [Header-Only-GL-Helpers](https://github.com/Flix01/Header-Only-GL-Helpers) : A collection of header files that can ease OpenGL programming\n  - [easy_font_gl45](https://github.com/vassvik/easy_font_gl45) : \n  - [gfw](https://github.com/felselva/gfw) : Pure C Minimal Graphics Framework (OpenGL)\n  - [opengl-skydome](https://github.com/kosua20/opengl-skydome) : A fragment-shader skydome implementation\n  - [examples](https://github.com/openglredbook/examples) : Examples for the OpenGL Red Book\n  - [PlanetRenderer](https://github.com/Illation/PlanetRenderer) : A repo for my research on planet rendering in c++ | opengl **Now runs on Linux**\n  - [vogl](https://github.com/ValveSoftware/vogl) : OpenGL capture / playback debugger.\n  - [gl](https://github.com/acdemiralp/gl) : C++11 wrapper for OpenGL 4.6 Core Profile.\n  - [minimal_opengl](https://github.com/vassvik/minimal_opengl) : \n  - [gl-engine](https://github.com/JoshuaSenouf/gl-engine) : Rendering Engine using C++ and OpenGL\n  - [oglplus](https://github.com/matus-chochlik/oglplus) : OGLplus is a collection of open-source, cross-platform libraries which implement an object-oriented facade over the OpenGL® (version 3 and higher) and also OpenAL® (version 1.1) and EGL (version 1.…\n  - [TinyWindow](https://github.com/ziacko/TinyWindow) : a cross platform (Linux and Windows) OpenGL window library in a single header\n  - [glgen](https://github.com/MetricPanda/glgen) : Minimal OpenGL extension loader\n  - [glbinding](https://github.com/cginternals/glbinding) : A C++ binding for the OpenGL API, generated using the gl.xml specification.\n  - [GLUL](https://github.com/RippeR37/GLUL) : OpenGL Utility Library.\n  - [ogl](https://github.com/opengl-tutorials/ogl) : http://www.opengl-tutorial.org\n  - [LearnOpenGL](https://github.com/JoeyDeVries/LearnOpenGL) : Code repository of all OpenGL tutorials found at https://learnopengl.com\n  - [styleblit](https://github.com/jamriska/styleblit) : StyleBlit is an efficient example-based style transfer algorithm that can deliver high-quality stylized renderings in real-time.\n  - [InstancedParticle](https://github.com/Ushio/InstancedParticle) : Instancing Basics\n  - [GIGL](https://github.com/zero-radiance/GIGL) : Tiny Global Illumination OpenGL Renderer\n  - [webgl-seed](https://github.com/alaingalvan/webgl-seed) : A starter repo for building WebGL applications.\n  - [VCTRenderer](https://github.com/jose-villegas/VCTRenderer) : A real time global illumination solution that achieves glossy surfaces, diffuse reflection, specular reflection, ambient occlusion, indirect shadows, soft shadows, emissive materials and 2-bounce G…\n  - [gl_ssao](https://github.com/nvpro-samples/gl_ssao) : optimized screen-space ambient occlusion, cache-aware hbao\n  - [deep-gbuffers](https://github.com/trevor-m/deep-gbuffers) : Implementation of \"Fast Global Illumination Approximations on Deep G-Buffers\" (Mara et. al, 2016) using C++, OpenGL, and GLSL\n  - [ogl-samples](https://github.com/g-truc/ogl-samples) : The OpenGL Samples Pack\n  - [InitializingOpenGL](https://github.com/tommai78101/InitializingOpenGL) : A book written in my own spare time, that has notes on how to begin an OpenGL project.\n  - [opengl_sky](https://github.com/shff/opengl_sky) : Pure-shader sky and cloud rendering in OpenGL\n  - [gl_commandlist_basic](https://github.com/nvpro-samples/gl_commandlist_basic) : OpenGL sample for NV_command_list\n  - SFML\n    - [SFMLight](https://github.com/dfranx/SFMLight) : Add lights to your SFML game\n    - [Thor](https://github.com/Bromeon/Thor) : SFML Extension with various game programming features, like particles, animations, vector operations\n    - [SFGUI](https://github.com/TankOs/SFGUI) : Simple and Fast Graphical User Interface\n    - [Swoosh](https://github.com/TheMaverickProgrammer/Swoosh) : SFML Activity and Segue Mini Library\n    - [SFML-Workshop](https://github.com/eXpl0it3r/SFML-Workshop) : Example code for the SFML Workshop\n    - [sfml-vscode-boilerplate](https://github.com/andrew-r-king/sfml-vscode-boilerplate) : A cross-platform SFML 2.5.1 & C++17 build environment for Visual Studio Code\n    - [ParticleEditor](https://github.com/Rikora/ParticleEditor) : Particle editor for SFML/Thor based applications\n    - [light_ungod](https://github.com/Ung0d/light_ungod) : A reimplementation of the LTBL2-framwork.\n    - [RichText](https://github.com/skyrpex/RichText) : Rich text class for SFML2. Allows the user to draw lines of text with different styles and colors.\n    - [SimplGUI](https://github.com/victorlevasseur/SimplGUI) : SimplGUI is simple GUI library for SFML. It provides simple widgets that can be used independently.\n    - [Motion](https://github.com/zsbzsb/Motion) : Complete video and audio player for SFML\n    - [LTBL2](https://github.com/222464/LTBL2) : A 2D dynamic lighting system with accurate soft shadows.\n    - [sfeMovie](https://github.com/Yalir/sfeMovie) : sfeMovie is a simple C++ library that lets you play movies in SFML based applications. It relies on FFmpeg to read medias and remains consistent with SFML's naming conventions. Forum at http://sfem…\n    - [imgui-sfml](https://github.com/eliasdaler/imgui-sfml) : ImGui binding for use with SFML\n    - [SFML](https://github.com/SFML/SFML) : Simple and Fast Multimedia Library\n    - [TGUI](https://github.com/texus/TGUI) : An easy to use cross-platform c++ GUI for SFML\n    - [STP](https://github.com/edoren/STP) : SFML TMX Parser -\n    - [Empire](https://github.com/Hopson97/Empire) : A cellular automaton I made up myself, written in C++/ SFML\n    - [SpriteAnimator](https://github.com/Rikora/SpriteAnimator) : Sprite animation editor for SFML/Thor based applications\n    - [SelbaWard](https://github.com/Hapaxia/SelbaWard) : A collection of SFML drawables\n    - [sfTheora](https://github.com/eXpl0it3r/sfTheora) : sfTheora is a static library for playing Theora videos on SFML.\n- Vulkan\n  - [VulkanSceneGraph](https://github.com/vsg-dev/VulkanSceneGraph) : Vulkan & C++17 based Scene Graph Project\n  - [vulkan-seed](https://github.com/alaingalvan/vulkan-seed) : A Vulkan starter repo that you could use to get the ball rolling.\n  - [Vulkan-Samples-Assets](https://github.com/KhronosGroup/Vulkan-Samples-Assets) : Vulkan Samples Assets\n  - [clspv](https://github.com/google/clspv) : Clspv is a prototype compiler for a subset of OpenCL C to Vulkan compute shaders\n  - [vulkan_wsi_layer](https://github.com/procedural/vulkan_wsi_layer) : \n  - [VulkanCapsViewerGenerator](https://github.com/SaschaWillems/VulkanCapsViewerGenerator) : Extension header generator based on the official Vulkan registry xml\n  - [spirv-tools-custom-opt-passes](https://github.com/inequation/spirv-tools-custom-opt-passes) : A few custom passes for the SPIRV-Tools optimizer.\n  - [FrameGraph](https://github.com/azhirnov/FrameGraph) : vulkan abstraction layer that represent frame as a task graph\n  - [shadertoy-utils](https://github.com/toomuchvoltage/shadertoy-utils) : One-click utilities that turn images/sounds into shadertoy code! :)\n  - [Vulkan-Example](https://github.com/qnope/Vulkan-Example) : Some example of Vulkan with C++\n  - [VulkanRTX](https://github.com/DsoTsin/VulkanRTX) : \n  - [vkbind](https://github.com/dr-soft/vkbind) : Single file Vulkan API loader.\n  - [vulkan-base](https://github.com/kennyalive/vulkan-base) : Simple Vulkan application\n  - [VkBindingBenchmark](https://github.com/khalladay/VkBindingBenchmark) : Sponza And Bistro tests to benchmark transform data handling in Vulkan\n  - [Yave](https://github.com/gan74/Yave) : Yet Another Vulkan Engine\n  - [vsgXchange](https://github.com/vsg-dev/vsgXchange) : Utility library for converting data+materials to/from VulkanSceneGraph\n  - [niagara](https://github.com/zeux/niagara) : A Vulkan renderer written from scratch on stream\n  - [vkhr](https://github.com/CaffeineViking/vkhr) : Real-Time Hybrid Hair Rendering using Vulkan™\n  - [vuda](https://github.com/jgbit/vuda) : VUDA is a header-only library based on Vulkan that provides a CUDA Runtime API interface for writing GPU-accelerated applications.\n  - [Pluto](https://github.com/n8vm/Pluto) : Pluto: an interactive Vulkan engine with Python bindings and Jupyter notebook support\n  - [Onyx](https://github.com/AcrylicShrimp/Onyx) : Rendering engine based on Vulkan and C++17.\n  - [vpp](https://github.com/nyorain/vpp) : Modern C++ vulkan utility library.\n  - [glsl_indexed_types_generator](https://github.com/nvpro-samples/glsl_indexed_types_generator) : GLSL code generator to aid use of Vulkan's descriptor set indexing\n  - [Fossilize](https://github.com/ValveSoftware/Fossilize) : A serialization format for various persistent Vulkan object types.\n  - [VkHLF](https://github.com/nvpro-pipeline/VkHLF) : Experimental High Level Framework for Vulkan\n  - [Vulkan-Portability](https://github.com/KhronosGroup/Vulkan-Portability) : \n  - [volk](https://github.com/zeux/volk) : Meta loader for Vulkan API\n  - [vulkan_best_practice_for_mobile_developers](https://github.com/ARM-software/vulkan_best_practice_for_mobile_developers) : Vulkan best practice for mobile developers\n  - [vk_callback_swapchain](https://github.com/google/vk_callback_swapchain) : \n  - [vulkan-cpp-library](https://github.com/google/vulkan-cpp-library) : \n  - [vulkan-sdk](https://github.com/ARM-software/vulkan-sdk) : Github repository for the Vulkan SDK\n  - [rostkatze](https://github.com/msiglreith/rostkatze) : C++ implementation of Vulkan sitting on D3D12\n  - [vulkan_ihv_promises](https://github.com/procedural/vulkan_ihv_promises) : \n  - [Quartz](https://github.com/Nadrin/Quartz) : Physically based Vulkan RTX path tracer with a declarative ES7-like scene description language.\n  - [Vookoo](https://github.com/andy-thomason/Vookoo) : A set of utilities for taking the pain out of Vulkan in header only modern C++\n  - [AMDVLK](https://github.com/GPUOpen-Drivers/AMDVLK) : AMD Open Source Driver For Vulkan\n  - [GodOfFireAndGrass](https://github.com/ACskyline/GodOfFireAndGrass) : A Vulkan Grass Renderer\n  - [VulkanTutorial](https://github.com/QuartzIsCheap/VulkanTutorial) : Tutorial for the Vulkan graphics and compute API\n  - [rvg](https://github.com/nyorain/rvg) : High level vulkan 2D vector-like graphics api (C++)\n  - [VKGL](https://github.com/kbiElude/VKGL) : Core OpenGL over Vulkan\n  - [simple_vulkan_synchronization](https://github.com/Tobski/simple_vulkan_synchronization) : A single-header library with a simplified interface for Vulkan synchronization\n  - [Vulkan-glTF-PBR](https://github.com/SaschaWillems/Vulkan-glTF-PBR) : Physical based rendering with Vulkan using glTF 2.0 models\n  - [Vulkan](https://github.com/SaschaWillems/Vulkan) : Examples and demos for the new Vulkan API\n  - [Vulkan-WSIWindow](https://github.com/renelindsay/Vulkan-WSIWindow) : A multi-platform library to create a Vulkan window, and handle input events.\n  - [Vulkan-Cookbook](https://github.com/PacktPublishing/Vulkan-Cookbook) : Code repository for Vulkan Cookbook by Packt\n  - [TLVulkanRenderer](https://github.com/trungtle/TLVulkanRenderer) : A simple Vulkan-based renderer for my master thesis on real-time transparency\n  - [Vulkan-Hpp](https://github.com/KhronosGroup/Vulkan-Hpp) : Open-Source Vulkan C++ API\n  - [Vulkan-ValidationLayers](https://github.com/KhronosGroup/Vulkan-ValidationLayers) : Vulkan Validation Layers\n  - [VulkanMemoryAllocator](https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator) : Easy to integrate Vulkan memory allocation library\n  - [PracticalVulkan](https://github.com/GameTechDev/PracticalVulkan) : Repository with code samples for \"API without Secrets: The Practical Approach to Vulkan\" series of articles.\n  - [vulkan_slim](https://github.com/SaschaWillems/vulkan_slim) : Trying to trim down the size of my Vulkan repo...\n  - [vulkan_ihv_info](https://github.com/procedural/vulkan_ihv_info) : \n  - [lava](https://github.com/prideout/lava) : toy C++ Vulkan library\n  - [VulkanMemoryAllocator](https://github.com/DustinHLand/VulkanMemoryAllocator) : Easy to integrate Vulkan memory allocation library\n  - [Vulkan](https://github.com/jherico/Vulkan) : Examples and demos for the Vulkan C++ API\n  - [brokkr](https://github.com/fsole/brokkr) : Vulkan framework for Windows\n  - [LearnVulkan](https://github.com/JoeyDeVries/LearnVulkan) : All code samples learnvulkan.com\n  - [vkvg](https://github.com/jpbruyere/vkvg) : Vulkan vector drawing, try to stay close to cairo api\n  - [MoltenVK](https://github.com/KhronosGroup/MoltenVK) : MoltenVK is an implementation of the high-performance, industry-standard Vulkan graphics and compute API, that runs on Apple's Metal graphics framework, bringing Vulkan to iOS and macOS.\n  - [V-EZ](https://github.com/GPUOpen-LibrariesAndSDKs/V-EZ) : \n  - [vkdf](https://github.com/itoral/vkdf) : A collection of Vulkan demos\n  - [Vulkan-Ecosystem](https://github.com/KhronosGroup/Vulkan-Ecosystem) : Public repository for Vulkan Ecosystem issues\n  - [Anvil](https://github.com/GPUOpen-LibrariesAndSDKs/Anvil) : Anvil is a cross-platform framework for Vulkan\n  - [IntroductionToVulkan](https://github.com/GameTechDev/IntroductionToVulkan) : Source code examples for \"API without Secrets: Introduction to Vulkan\" tutorial\n  - [VulkanTools](https://github.com/LunarG/VulkanTools) : Tools to aid in Vulkan development including useful layers, trace and replay, and tests\n  - [xgl](https://github.com/GPUOpen-Drivers/xgl) : Vulkan API Layer\n  - [pal](https://github.com/GPUOpen-Drivers/pal) : Platform Abstraction Library\n  - [vkDOOM3](https://github.com/DustinHLand/vkDOOM3) : Vulkan DOOM 3 port based on DOOM 3 BFG Edition\n  - [vulkan_minimal_compute](https://github.com/Erkaman/vulkan_minimal_compute) : Minimal Example of Using Vulkan for Compute Operations. Only ~400LOC.\n  - [VulkanSponza](https://github.com/SaschaWillems/VulkanSponza) : Deferred Vulkan rendering playground using Crytek's Sponza scene\n  - [laugh_engine](https://github.com/jian-ru/laugh_engine) : A Vulkan implementation of real-time PBR renderer\n  - [Intrinsic](https://github.com/begla/Intrinsic) : Intrinsic is a Vulkan based cross-platform game and rendering engine. The project is currently in an early stage of development.\n  - [Vulkan-Docs](https://github.com/KhronosGroup/Vulkan-Docs) : The Vulkan API Specification and related tools\n  - [VulkanResources](https://github.com/jcoder58/VulkanResources) : A list of resources for learning Vulkan\n  - [VulkanTutorial](https://github.com/Overv/VulkanTutorial) : Tutorial for the Vulkan graphics and compute API\n  - [VK-GL-CTS](https://github.com/KhronosGroup/VK-GL-CTS) : Khronos Vulkan, OpenGL, and OpenGL ES Conformance Tests\n  - [cpp-host-metal](https://github.com/k-ye/cpp-host-metal) : Test if we can use Metal runtime in C++\n  - [VulkanWicked](https://github.com/SaschaWillems/VulkanWicked) : \n  - [ScrapEngine](https://github.com/ScrappyCocco/ScrapEngine) : A very simple real-time Vulkan 3D game engine\n  - [VulkanLearn](https://github.com/enjiushi/VulkanLearn) : Render lab built on top of vulkan\n  - [vk_denoise](https://github.com/nvpro-samples/vk_denoise) : Denoising a Vulkan ray traced image using OptiX denoiser\n  - [clouds](https://github.com/rikardolajos/clouds) : \n  - [VulkanCapsViewer](https://github.com/SaschaWillems/VulkanCapsViewer) : Vulkan hardware capability viewer\n  - [VulkanDemos](https://github.com/BobLChen/VulkanDemos) : Vulkan Demos\n  - [MageFramework](https://github.com/AmanSachan1/MageFramework) : Vulkan Framework for testing out and demoing shader techniques I've been intrigued by\n  - [Meteoros](https://github.com/AmanSachan1/Meteoros) : Real-time Cloudscape Rendering in Vulkan based on the implementation of clouds in the Decima Engine.\n  - [perfdoc](https://github.com/ARM-software/perfdoc) : A cross-platform Vulkan layer which checks Vulkan applications for best practices on Arm Mali devices.\n  - [perfdoc](https://github.com/powervr-graphics/perfdoc) : A cross-platform Vulkan layer which checks Vulkan applications for best practices on PowerVR devices.\n  - [VulkanApp](https://github.com/IonUreche/VulkanApp) : \n  - [onyx](https://github.com/AcrylicShrimp/onyx) : Rendering engine based on Vulkan and C++2x.\n  - [VulkanMemoryAllocator-Hpp](https://github.com/malte-v/VulkanMemoryAllocator-Hpp) : C++ bindings for VulkanMemoryAllocator\n  - [FlingEngine](https://github.com/flingengine/FlingEngine) : A Vulkan game engine with a focus on data oriented design\n- DirectX\n  - [directx12-seed](https://github.com/alaingalvan/directx12-seed) : A DirectX 12 starter repo that you could use to get the ball rolling\n  - [D3D12MemoryAllocator](https://github.com/GPUOpen-LibrariesAndSDKs/D3D12MemoryAllocator) : Easy to integrate memory allocation library for Direct3D 12\n  - [d3d12book](https://github.com/d3dcoder/d3d12book) : Sample code for the book \"Introduction to 3D Game Programming with DirectX 12\"\n  - [DirectXTex](https://github.com/microsoft/DirectXTex) : DirectXTex texture processing library\n  - [D3d12info](https://github.com/sawickiap/D3d12info) : Simple console tool to get all the information from DXGI and Direct3D 12 on current system\n  - [DirectXShaderCompiler](https://github.com/microsoft/DirectXShaderCompiler) : This repo hosts the source for the DirectX Shader Compiler which is based on LLVM/Clang.\n  - [DirectX-Graphics-Samples](https://github.com/microsoft/DirectX-Graphics-Samples) : This repo contains the DirectX Graphics samples that demonstrate how to build graphics intensive applications on Windows.\n  - [reed-framework](https://github.com/Reedbeta/reed-framework) : Basic framework for D3D11 init, model/texture loading, shader compilation and camera movement.\n  - [dxwrapper](https://github.com/elishacloud/dxwrapper) : Fixes compatibility issues with older games running on Windows 10 by wrapping DirectX dlls. Also allows loading custom libraries with the file extension .asi into game processes.\n  - [Sophia](https://github.com/BentleyBlanks/Sophia) : A real-time DirectX 11 renderer. The renderer is named by my girlfriend's english name.\n  - [DeferredTexturing](https://github.com/TheRealMJP/DeferredTexturing) : A rendering sample that demonstrates bindless deferred texturing using D3D12\n  - [Wave-Particles-with-Interactive-Vortices](https://github.com/ACskyline/Wave-Particles-with-Interactive-Vortices) : A dx12 river renderer using wave particles with interactive vortices.\n  - [dxup](https://github.com/Joshua-Ashton/dxup) : A d3d9 and d3d10 to d3d11 translation layer.\n  - [VK9](https://github.com/disks86/VK9) : Direct3D 9 compatibility layer using Vulkan.\n  - [D3D12RaytracingFallback](https://github.com/philcn/D3D12RaytracingFallback) : A fork of Microsoft's D3D12 Raytracing Fallback Layer\n  - [d9vk](https://github.com/Joshua-Ashton/d9vk) : A d3d9 to vk layer based off DXVK's codebase.\n  - [D3DSamples](https://github.com/NVIDIAGameWorks/D3DSamples) : Direct3D feature samples\n  - [ShadowFX](https://github.com/GPUOpen-Effects/ShadowFX) : DirectX 11 and 12 library that provides a scalable and GCN-optimized solution for deferred shadow filtering\n  - [smaa](https://github.com/iryoku/smaa) : SMAA is a very efficient GPU-based MLAA implementation (DX9, DX10, DX11 and OpenGL), capable of handling subpixel features seamlessly, and featuring an improved and advanced pattern detection & han…\n  - [vkd3d](https://github.com/d3d12/vkd3d) : \n  - [D3D12QuickRef](https://github.com/alessiot89/D3D12QuickRef) : Direct3D 12.0 quick reference guide\n  - [d3d12_ihv_info](https://github.com/procedural/d3d12_ihv_info) : \n  - [Dx11Base](https://github.com/sebh/Dx11Base) : A small dx11 base program I use to test shaders and techniques\n  - [GeometryFX](https://github.com/GPUOpen-Effects/GeometryFX) : DirectX 11 library that provides convenient access to compute-based triangle filtering (CTF)\n  - [ToGL](https://github.com/ValveSoftware/ToGL) : Direct3D to OpenGL abstraction layer\n  - [Shadows](https://github.com/TheRealMJP/Shadows) : A sample app that demonstrates several techniques for rendering real-time shadow maps\n  - [graphicsdemoskeleton](https://github.com/wolfgangfengel/graphicsdemoskeleton) : Playground for DirectX 11 / 12 simple graphics demo examples ...\n  - [Dxbc2Dxil](https://github.com/Nukem9/Dxbc2Dxil) : DXBC to DXIL (HLSL Bytecode to LLVM IR) using internal APIs.\n  - [separable-sss](https://github.com/iryoku/separable-sss) : Separable Subsurface Scattering is a technique that allows to efficiently perform subsurface scattering calculations in screen space in just two passes.\n  - [DXRNvTutorial](https://github.com/philcn/DXRNvTutorial) : Implementing Nvidia DXR tutorial with Microsoft DXR Fallback Layer\n  - [crunch](https://github.com/Unity-Technologies/crunch) : Advanced DXTc texture compression and transcoding library\n- Shaders\n  - [glslCanvas4AE](https://github.com/baku89/glslCanvas4AE) : After Effects Plug-in to write GLSL with a format of glslCanvas\n  - [HLSLcc](https://github.com/Unity-Technologies/HLSLcc) : DirectX shader bytecode cross compiler\n  - [SPIRV-Reflect](https://github.com/chaoticbob/SPIRV-Reflect) : SPIRV-Reflect is a lightweight library that provides a C/C++ reflection API for SPIR-V shader bytecode in Vulkan applications.\n  - [deshade](https://github.com/graphitemaster/deshade) : dump and replace shaders of any OpenGL or Vulkan application\n  - [smol-v](https://github.com/aras-p/smol-v) : SMOL-V: like Vulkan/Khronos SPIR-V, but smaller.\n  - [ShaderFastLibs](https://github.com/michaldrobot/ShaderFastLibs) : \n  - [slang](https://github.com/shader-slang/slang) : Making it easier to work with shaders\n  - [glsl-grapher](https://github.com/fordhurley/glsl-grapher) : Visualize GLSL shader functions\n  - [thebookofshaders](https://github.com/patriciogonzalezvivo/thebookofshaders) : Step-by-step guide through the abstract and complex universe of Fragment Shaders.\n  - [glsl-optimizer](https://github.com/aras-p/glsl-optimizer) : GLSL optimizer based on Mesa's GLSL compiler. Used in Unity for mobile shader optimization.\n  - [glslang](https://github.com/KhronosGroup/glslang) : Khronos-reference front end for GLSL/ESSL, partial front end for HLSL, and a SPIR-V generator.\n  - [glsl-atmosphere](https://github.com/wwwtyro/glsl-atmosphere) : Renders sky colors with Rayleigh and Mie scattering.\n  - [glslSmartDeNoise](https://github.com/BrutPitt/glslSmartDeNoise) : glsl deNoise filter\n  - [GLSL](https://github.com/KhronosGroup/GLSL) : GLSL Shading Language Issue Tracker\n  - [glsl_kappa](https://github.com/rre36/glsl_kappa) : A shaderpack that aims towards a realistic, but also authentic look.\n  - [gpuc](https://github.com/garettbass/gpuc) : A header-only C-like shading language compiler that writes Metal, HLSL, GLSL\n  - [SHADERed](https://github.com/dfranx/SHADERed) : Lightweight, cross-platform & full-featured desktop tool for creating and testing HLSL and GLSL shaders\n  - [Wombat](https://github.com/BrianSharpe/Wombat) : An efficient texture-free GLSL procedural noise library\n  - [GPU-Noise-Lib](https://github.com/BrianSharpe/GPU-Noise-Lib) : Optimized GPU noise functions and utilities\n  - [osl-shaders](https://github.com/varkenvarken/osl-shaders) : a repository of osl shaders for Blender\n  - [osl-shaders](https://github.com/sambler/osl-shaders) : A collection of osl shaders\n  - [Pyramid](https://github.com/jbarczak/Pyramid) : Pyramid Shader Analyzer\n  - [reshade-shaders](https://github.com/crosire/reshade-shaders) : A collection of post-processing shaders written for ReShade.\n  - [yari-v](https://github.com/sheredom/yari-v) : Single header SPIR-V compressor for C and C++\n  - [XShaderCompiler](https://github.com/LukasBanana/XShaderCompiler) : Shader cross compiler to translate HLSL (Shader Model 4 and 5) to GLSL\n  - [reshade](https://github.com/crosire/reshade) : A generic post-processing injector for games and video software.\n  - [CrossShader](https://github.com/alaingalvan/CrossShader) : A tool for cross compiling shaders. Convert between GLSL, HLSL, Metal Shader Language, or older versions of GLSL.\n  - [3d-game-shaders-for-beginners](https://github.com/lettier/3d-game-shaders-for-beginners) : A step-by-step guide on how to implement SSAO, depth of field, lighting, normal mapping, and more for your 3D game.\n  - [glslViewer](https://github.com/patriciogonzalezvivo/glslViewer) : Live GLSL coding render for MacOS and Linux\n  - [Shader_Minifier](https://github.com/laurentlb/Shader_Minifier) : Minify and obfuscate GLSL or HLSL code\n  - [ShaderConductor](https://github.com/microsoft/ShaderConductor) : ShaderConductor is a tool designed for cross-compiling HLSL to other shading languages\n  - [SPIRV-Headers](https://github.com/KhronosGroup/SPIRV-Headers) : SPIRV-Headers\n  - [LunarGLASS](https://github.com/LunarG/LunarGLASS) : LLVM IR and optimizer for shaders, including front-end adapters for GLSL and SPIR-V and back-end adapter for GLSL\n  - [shader-printf](https://github.com/msqrt/shader-printf) : Simple printf functionality for GLSL.\n  - [SPIRV-Cross](https://github.com/KhronosGroup/SPIRV-Cross) : SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.\n  - [standard-surface](https://github.com/Autodesk/standard-surface) : White paper describing the Autodesk Standard Surface shader.\n  - [nicegraf-shaderc](https://github.com/nicebyte/nicegraf-shaderc) : A wrapper for shaderc and spriv-cross\n  - [glslcc](https://github.com/septag/glslcc) : GLSL cross-compiler tool (GLSL->HLSL, MSL, GLES2, GLES3, GLSLv3), using SPIRV-cross and glslang\n  - [graphicsfuzz](https://github.com/google/graphicsfuzz) : A testing framework for automatically finding and simplifying bugs in graphics shader compilers.\n  - [colourblind](https://github.com/azmr/colourblind) : A C header file & shader for simulating colourblindness and checking contrast.\n  - [hsluv](https://github.com/hsluv/hsluv) : Human-friendly HSL, reference implementation (revision 4)\n  - [hlslparser](https://github.com/Thekla/hlslparser) : HLSL Parser and Translator for HLSL, GLSL, and MSL.\n  - [hlsl2glslfork](https://github.com/aras-p/hlsl2glslfork) : HLSL to GLSL language translator based on ATI's HLSL2GLSL. Used in Unity.\n  - [shader-playground](https://github.com/tgjones/shader-playground) : Shader playground website for exploring HLSL, GLSL, SPIR-V compilers\n  - [hlslparser](https://github.com/Nomoresleep/hlslparser) : HLSL Parser and Translator for HLSL, GLSL, and MSL.\n  - [hqx-shader](https://github.com/CrossVR/hqx-shader) : GPU shader version of HQx filter\n  - [pmfx-shader](https://github.com/polymonster/pmfx-shader) : Cross platform shader system targetting HLSL, GLSL, Metal and SPIR-V. Offline compilation, reflection, metadata +so much more.\n  - [ShaderDebugger](https://github.com/dfranx/ShaderDebugger) : [DEPRECATED] C++ library for debugging HLSL & GLSL shaders\n- GUI\n  - [elements](https://github.com/cycfi/elements) : Elements C++ GUI library\n  - [qt3d](https://github.com/qt/qt3d) : Qt3D\n  - [LCUI](https://github.com/lc-soft/LCUI) : A small C library for building user interfaces with C, XML and CSS.\n  - [flatui](https://github.com/google/flatui) : Efficient Immediate Mode UI for Games\n  - [turbobadger](https://github.com/tesch1/turbobadger) : Small footprint UI library for games & apps (branch)\n  - [horus_ui](https://github.com/7thFACTOR/horus_ui) : HorusUI Immediate Mode Graphical User Interface\n  - [zep](https://github.com/cmaughan/zep) : Zep - An embeddable editor, with optional support for using vim keystrokes.\n  - [Ultralight](https://github.com/ultralight-ux/Ultralight) : Ultralight— a lightweight, pure-GPU, HTML UI renderer for native apps.\n  - [skui](https://github.com/skui-org/skui) : Skia-based C++ UI framework\n  - [raygui](https://github.com/raysan5/raygui) : A simple and easy-to-use immediate-mode gui library\n  - [ImHotKey](https://github.com/CedricGuillemet/ImHotKey) : Single Header Hotkey editor for dear imgui\n  - [libui](https://github.com/andlabs/libui) : Simple and portable (but not inflexible) GUI library in C that uses the native GUI technologies of each platform it supports.\n  - [IconFontCppHeaders](https://github.com/juliettef/IconFontCppHeaders) : C, C++ headers and C# classes for icon fonts: Font Awesome, Fork Awesome, Material Design, Material Design icons, Kenney game icons and Ionicons\n  - [lvgl](https://github.com/littlevgl/lvgl) : Powerful and easy-to-use embedded GUI with many widgets, advanced visual effects (opacity, antialiasing, animations) and low memory requirements (16K RAM, 64K Flash).\n  - [GuiLite](https://github.com/idea4good/GuiLite) : Small-Fast-Injectable GUI library(5 KLOC) for all platforms\n  - [microui](https://github.com/rxi/microui) : Tiny immediate-mode UI library\n  - [GWork](https://github.com/billyquith/GWork) : Skinnable GUI with useful widget collection. Fork of GWEN.\n  - [layout](https://github.com/randrew/layout) : Single-file library for calculating 2D UI layouts using stacking boxes. Compiles as C99 or C++.\n  - [nanovg](https://github.com/memononen/nanovg) : Antialiased 2D vector drawing library on top of OpenGL for UI and visualizations.\n  - [fastuidraw](https://github.com/intel/fastuidraw) : \n  - [nanogui](https://github.com/wjakob/nanogui) : Minimalistic GUI library for OpenGL\n  - [CEGUI](https://github.com/OpenTechEngine/CEGUI) : mirror of upstream hg repo so we can use it as a git submodule\n  - [glw_imgui](https://github.com/yak32/glw_imgui) : Code-driven, simple and bloat-free GUI system.\n  - [nuklear](https://github.com/vurtun/nuklear) : A single-header ANSI C gui library\n  - [webview](https://github.com/zserge/webview) : Tiny cross-platform webview library for C/C++/Golang. Uses WebKit (Gtk/Cocoa) and MSHTML (Windows)\n  - [laf](https://github.com/aseprite/laf) : A C++ library to create desktop applications\n  - [Nuklear](https://github.com/Immediate-Mode-UI/Nuklear) : A single-header ANSI C immediate mode cross-platform GUI library\n  - [RapidGUI](https://github.com/fuqunaga/RapidGUI) : Unity OnGUI(IMGUI) extensions for Rapid prototyping/development\n  - [imtui](https://github.com/ggerganov/imtui) : ImTui: Immediate Mode Text-based User Interface\n  - [nanogui](https://github.com/dalerank/nanogui) : Minimalistic C++/Python UI library for OpenGL/GLES/DX11/DX12/Vulkan\n  - [nana](https://github.com/cnjinhao/nana) : a modern C++ GUI library\n  - [nodegui](https://github.com/nodegui/nodegui) : A library for building cross-platform native desktop applications with Node.js and CSS\n  - imgui\n    - [imgui](https://github.com/ocornut/imgui) : Dear ImGui: Bloat-free Immediate Mode Graphical User interface for C++ with minimal dependencies\n    - [imgui_markdown](https://github.com/juliettef/imgui_markdown) : Markdown for Dear ImGui\n    - [imgui_tabs](https://github.com/scottmudge/imgui_tabs) : Tab module for imgui. Should be relatively forwardly compatible.\n    - [ImWindow](https://github.com/thennequin/ImWindow) : Window and GUI system based on Dear ImGui from OCornut\n    - [imgui_club](https://github.com/ocornut/imgui_club) : Nice things to use along dear imgui\n    - [cimgui](https://github.com/sonoro1234/cimgui) : c-api for imgui and implementations programmatically generated (https://github.com/ocornut/imgui)\n    - [ImGuizmo](https://github.com/CedricGuillemet/ImGuizmo) : Immediate mode 3D gizmo for scene editing and other controls based on Dear Imgui\n    - [imguiDock](https://github.com/BentleyBlanks/imguiDock) : An addon of imgui for supporting docks in the imgui's window\n    - [imgui-node-editor](https://github.com/thedmd/imgui-node-editor) : Node Editor using ImGui\n    - [ImGuiColorTextEdit](https://github.com/BalazsJako/ImGuiColorTextEdit) : Colorizing text editor for ImGui\n    - [imgui-goodies](https://github.com/aoterodelaroza/imgui-goodies) : Widgets and utilities for ImGui\n    - [imgui-ws](https://github.com/ggerganov/imgui-ws) : Dear ImGui over WebSockets\n    - [imgui-plot](https://github.com/soulthreads/imgui-plot) : An improved plot widget for Dear ImGui, aimed at displaying audio data\n    - [imnodes](https://github.com/Nelarius/imnodes) : A small, dependency-free node editor for dear imgui\n    - [ImNodes](https://github.com/rokups/ImNodes) : Node graph implementation for Dear ImGui. Used in https://github.com/rokups/rbfx\n    - [imgInspect](https://github.com/CedricGuillemet/imgInspect) : imgui control to inspect image pixels\n    - [imgui_software_renderer](https://github.com/emilk/imgui_software_renderer) : A Software Renderer for Dear ImGui\n    - [ImFastRast](https://github.com/malamanteau/ImFastRast) : Fast(er) Software Rasterizer for Dear ImGui\n    - [ImGuiAl](https://github.com/leiradel/ImGuiAl) : Widgets for imgui\n    - [imgui](https://github.com/Flix01/imgui) : Dear ImGui Addons Branch = plain unmodified dear imgui plus some extra addon.\n    - [imgui](https://github.com/ubisoftinc/imgui) : Dear ImGui: Bloat-free Immediate Mode Graphical User interface for C++ with minimal dependencies\n    - [imgui](https://github.com/dmccloskey/imgui) : Dear ImGui: Bloat-free Immediate Mode Graphical User interface for C++ with minimal dependencies\n    - [imGuIZMO.quat](https://github.com/BrutPitt/imGuIZMO.quat) : GIZMO 3D object manipulator/orienteering widget for ImGui\n    - [bsfImgui](https://github.com/pgruenbacher/bsfImgui) : bsf imgui plugin\n    - [ImGui-Addons](https://github.com/gallickgunner/ImGui-Addons) : Cross Platform File Dialog for Dear-ImGui\n    - [sequentity](https://github.com/alanjfs/sequentity) : A single-file, immediate-mode sequencer widget for C++17, Dear ImGui and EnTT\n    - [ImGuiFileDialog](https://github.com/aiekick/ImGuiFileDialog) : File Dialog for ImGui : https://github.com/aiekick/ImGuiFileDialog\n    - [imgui-filebrowser](https://github.com/AirGuanZ/imgui-filebrowser) : File browser implementation for dear-imgui. C++17 is required.\n    - [imgui_entt_entity_editor](https://github.com/Green-Sky/imgui_entt_entity_editor) : A drop-in entity editor for EnTT with ImGui\n    - [LegitProfiler](https://github.com/Raikiri/LegitProfiler) : A simple ImGui component for rendering profiling data\n  - DebugDraw\n    - [polyscope](https://github.com/nmwsharp/polyscope) : A prototyping-oriented UI for geometric algorithms\n    - [im3d](https://github.com/john-chapman/im3d) : Immediate mode rendering and 3d gizmos.\n    - [tinygizmo](https://github.com/ddiakopoulos/tinygizmo) : An immediate mode 3D gimzo (translation, rotation, scale for scene editing) in ~1200 LoC\n    - [debug-draw](https://github.com/glampert/debug-draw) : Immediate-mode, renderer agnostic, lightweight debug drawing API.\n    - [arcball_camera](https://github.com/nlguillemot/arcball_camera) : Single-header single-function C/C++ immediate-mode camera for your graphics demos\n    - [flythrough_camera](https://github.com/nlguillemot/flythrough_camera) : Single-header single-function C/C++ immediate-mode camera for your graphics demos\n    - [LibGizmo](https://github.com/CedricGuillemet/LibGizmo) : Gizmo control library for 3D object manipulation (4x4 matrix)\n- Animation\n  - [appleseed](https://github.com/appleseedhq/appleseed) : A modern open source rendering engine for animation and visual effects\n  - [aer-engine](https://github.com/tcoppex/aer-engine) : An OpenGL 4.3 / C++ 11 rendering engine oriented towards animation.\n  - [skellington](https://github.com/damian0815/skellington) : Implementation of Le, Hodgins 2016 paper \"Real-time Skeletal Skinning with Optimized Centers of Rotation\"\n  - [acl](https://github.com/nfrechette/acl) : Animation Compression Library\n  - [ozz-animation](https://github.com/guillaumeblanc/ozz-animation) : Open source c++ skeletal animation library and toolset\n  - [aseprite_parser](https://github.com/fanick1/aseprite_parser) : parser of Aseprite files, used in duel6r\n  - [aseprite-rgba-converter](https://github.com/iamPHEN/aseprite-rgba-converter) : Tiny project to convert a .ase to a RGBA Byte array\n  - [aseprite](https://github.com/aseprite/aseprite) : Animated sprite editor & pixel art tool (Windows, macOS, Linux)\n  - [aseprite](https://github.com/ggez/aseprite) : A parser for the aseprite sprite editor files\n  - [bvh11](https://github.com/yuki-koyama/bvh11) : A tiny C++11 library for reading BVH motion capture data\n  - [HybridPose](https://github.com/chensong1995/HybridPose) : HybridPose: 6D Object Pose Estimation under Hybrid Representation (CVPR 2020)\n  - [Choreograph](https://github.com/sansumbrella/Choreograph) : A simple, modern C++ animation and timing library.\n- Fonts & Texts\n  - [pathfinder](https://github.com/servo/pathfinder) : A fast, practical GPU rasterizer for fonts and vector graphics\n  - [breaking_the_physical_limits_of_fonts](https://github.com/graphitemaster/breaking_the_physical_limits_of_fonts) : Breaking the physical limits of fonts\n  - [BitmapFont](https://github.com/Beeblerox/BitmapFont) : cross-platform bitmap font implementation\n  - [mv_easy_font](https://github.com/vassvik/mv_easy_font) : \n  - [blit-fonts](https://github.com/azmr/blit-fonts) : A family of small, fast, and simple bitmap fonts in single-file C headers\n- Images & Textures\n  - [astc_dec](https://github.com/richgel999/astc_dec) : Single source file ASTC texture decompression in C++ (derived from Google's open source Android project)\n  - [blurhash](https://github.com/woltapp/blurhash) : A very compact representation of a placeholder for an image.\n  - [image-resampler](https://github.com/ramenhut/image-resampler) : A flexible image resampling library\n  - [basis_universal](https://github.com/BinomialLLC/basis_universal) : Basis Universal GPU Texture Codec\n  - [sproutline](https://github.com/ands/sproutline) : A small single-file library for sprite outline extraction and simplification for C/C++\n  - [atlasc](https://github.com/septag/atlasc) : Builds atlas texture from a bunch of input images.\n  - [squeezer](https://github.com/huxingyi/squeezer) : Texture Packer for Game Development Using MaxRects Algorithm\n  - [Imogen](https://github.com/CedricGuillemet/Imogen) : GPU Texture Generator\n  - [Fornos](https://github.com/caosdoar/Fornos) : GPU Texture Baking Tool\n  - [crabby](https://github.com/mainroach/crabby) : A texture compression algorithm for sprite sheets that allows decompression on the GPU during rendering.\n  - [GPUImage](https://github.com/BradLarson/GPUImage) : An open source iOS framework for GPU-based image and video processing\n  - [image_lib](https://github.com/rampantpixels/image_lib) : Image loading library\n  - [knusperli](https://github.com/google/knusperli) : A deblocking JPEG decoder\n  - [bc7enc16](https://github.com/richgel999/bc7enc16) : Fast single source file BC7/BPTC texture encoder with perceptual metric support\n  - [img2ktx](https://github.com/cdwfs/img2ktx) : Converts common image formats (PNG, JPG, etc.) to GPU-native compressed (BCn, ETC, ASTC) in KTX containers.\n  - [Zpng](https://github.com/catid/Zpng) : Better lossless compression than PNG with a simpler algorithm\n  - [lodepng](https://github.com/lvandeve/lodepng) : PNG encoder and decoder in C and C++.\n  - [bimg](https://github.com/bkaradzic/bimg) : Image library.\n  - [topng](https://github.com/FRex/topng) : Convert image to png using stb_image and stb_image_write\n  - [gif_load](https://github.com/hidefromkgb/gif_load) : A slim, fast and header-only GIF loader written in C\n  - [mozjpeg](https://github.com/mozilla/mozjpeg) : Improved JPEG encoder.\n  - [nanosvg](https://github.com/memononen/nanosvg) : Simple stupid SVG parser\n  - [gif-h](https://github.com/charlietangora/gif-h) : Simple C++ one-header library for the creation of animated GIFs from image data.\n  - [TinyJPEG](https://github.com/serge-rgb/TinyJPEG) : Single header lib for JPEG encoding. Public domain. C99. stb style.\n  - [compressonator](https://github.com/GPUOpen-Tools/compressonator) : Tool suite for Texture and 3D Model Compression, Optimization and Analysis using CPUs, GPUs and APUs\n  - [unity-texture-packer](https://github.com/andydbc/unity-texture-packer) : Utility to combine color channels from different textures into a single output.\n  - [dds-ktx](https://github.com/septag/dds-ktx) : Single header KTX/DDS reader\n  - [tacit-texview](https://github.com/bluescan/tacit-texview) : A texture viewer for tga, png, exr, dds, gif, hdr, jpg, tif, ico, and bmp files. Uses Dear ImGui, OpenGL, and Tacent. Useful for game devs as it displays information like the presence of an alpha c…\n  - [tinyexr](https://github.com/syoyo/tinyexr) : Tiny OpenEXR image loader/saver library\n  - [crunch](https://github.com/BinomialLLC/crunch) : Advanced DXTc texture compression and transcoding library\n- PBR & RT & PT\n  - [raytracer-gpupro4](https://github.com/elfrank/raytracer-gpupro4) : \n  - [VisRTX](https://github.com/NVIDIA/VisRTX) : Visualization framework powered by NVIDIA RTX technology\n  - [rdb](https://github.com/qatnonoil/rdb) : Ray-tracing visual debugger\n  - [nanort](https://github.com/lighttransport/nanort) : NanoRT, single header only modern ray tracing kernel.\n  - [pbrt-v3](https://github.com/mmp/pbrt-v3) : Source code for pbrt, the renderer described in the third edition of \"Physically Based Rendering: From Theory To Implementation\", by Matt Pharr, Wenzel Jakob, and Greg Humphreys.\n  - [BRDFGenerator](https://github.com/HectorMF/BRDFGenerator) : BRDF LUT generation for PBR Pipelines\n  - [pbrt-parser](https://github.com/ingowald/pbrt-parser) : A simple parser for the PBRT file format\n  - [GettingStartedWithRTXRayTracing](https://github.com/NVIDIAGameWorks/GettingStartedWithRTXRayTracing) : Getting Started with RTX Ray Tracing\n  - [Fox2](https://github.com/FRex/Fox2) : FoxRaycaster, optimized, fixed and with a CUDA option\n  - [mitsuba-im](https://github.com/tszirr/mitsuba-im) : Immediate-mode fork of the mitsuba renderer\n  - [mitsuba](https://github.com/mitsuba-renderer/mitsuba) : Mitsuba renderer main repository\n  - [LGHDemo](https://github.com/DQLin/LGHDemo) : Real-Time Rendering with Lighting Grid Hierarchy I3D 2019 Demo\n  - [gpu-pathtracer](https://github.com/brickray/gpu-pathtracer) : physically based path tracer on gpu\n  - [sparse-voxel-octrees](https://github.com/tunabrain/sparse-voxel-octrees) : CPU Sparse Voxel Octree Implementation\n  - [tungsten](https://github.com/tunabrain/tungsten) : High performance physically based renderer in C++11\n  - [MiyukiRenderer](https://github.com/shiinamiyuki/MiyukiRenderer) : High performance pbrt-style renderer\n  - [ray-tracing-gems](https://github.com/Apress/ray-tracing-gems) : Source Code for \"Ray Tracing Gems: High-Quality and Real-Time Rendering with DXR and Other APIs\" by Eric Haines and Tomas Akenine-Möller\n  - [RayTracingInVulkan](https://github.com/GPSnoopy/RayTracingInVulkan) : Implementation of Peter Shirley's Ray Tracing In One Weekend book using Vulkan and NVIDIA's RTX extension.\n  - [RayTracingInVulkan](https://github.com/xindzju/RayTracingInVulkan) : Implementation of Peter Shirley's Ray Tracing In One Weekend book using Vulkan and NVIDIA's RTX extension.\n  - [RadeonRays_SDK](https://github.com/GPUOpen-LibrariesAndSDKs/RadeonRays_SDK) : Radeon Rays is ray intersection acceleration library for hardware and software multiplatforms using CPU and GPU\n  - [filament](https://github.com/google/filament) : Filament is a real-time physically based rendering engine for Android, iOS, Windows, Linux, macOS and WASM/WebGL\n  - [ToyPathTracer](https://github.com/aras-p/ToyPathTracer) : Toy path tracer for my own learning purposes (CPU/GPU, C++/C#, Win/Mac/Wasm, DX11/Metal, also Unity)\n  - [PBR](https://github.com/Nadrin/PBR) : An implementation of physically based shading model & image based lighting in various graphics APIs.\n  - [IBLBaker](https://github.com/derkreature/IBLBaker) : Light probe generation and BRDF authoring for physically based shading.\n  - [The-Forge](https://github.com/ConfettiFX/The-Forge) : The Forge Cross-Platform Rendering Framework PC, Linux, Ray Tracing, macOS / iOS, Android, XBOX, PS4\n  - [simple-spectral](https://github.com/imallett/simple-spectral) : A Simple Spectral Renderer\n  - [MaskedOcclusionCulling](https://github.com/GameTechDev/MaskedOcclusionCulling) : Example code for the research paper \"Masked Software Occlusion Culling\"; implements an efficient alternative to the hierarchical depth buffer algorithm.\n\n## Multimedia\n[Back to top](#Index)\n- Audio\n  - [Amplitude Audio SDK](https://github.com/SparkyStudios/AmplitudeAudioSDK) : Free, cross-platform, open-source, data-driven audio engine designed with the needs of games in mind.\n  - [soloud](https://github.com/jarikomppa/soloud) : Free, easy, portable audio engine for games\n  - [openal-soft](https://github.com/kcat/openal-soft) : OpenAL Soft is a software implementation of the OpenAL 3D audio API.\n  - [libsnd](https://github.com/everdrone/libsnd) : Digital Signal Processing Library and Audio Toolbox for the Modern Synthesist.\n  - [HISE](https://github.com/christophhart/HISE) : The open source framework for sample based instruments\n  - [miniaudio](https://github.com/dr-soft/miniaudio) : Single file audio playback and capture library written in C.\n  - [helm](https://github.com/mtytel/helm) : Helm - a free polyphonic synth with lots of modulation\n  - [sfMidi](https://github.com/JonnyPtn/sfMidi) : Library for playing midi files with SFML\n  - [Cadence](https://github.com/falkTX/Cadence) : Collection of tools useful for audio production\n  - [Carla](https://github.com/falkTX/Carla) : Audio plugin host\n  - [RenderMan](https://github.com/fedden/RenderMan) : Command line C++ and Python VSTi Host library with MFCC, FFT, RMS and audio extraction and .wav writing.\n  - [PLEBTracker](https://github.com/danfrz/PLEBTracker) : Ncurses based audio tracker program inspired by goattracker and milkytracker\n  - [LabSound](https://github.com/LabSound/LabSound) : modern C++ graph-based audio engine\n  - [MIDI_controller](https://github.com/tttapa/MIDI_controller) : This is a library for creating a MIDI controller using an Arduino or Teensy board.\n  - [oboe](https://github.com/google/oboe) : Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\n  - [Twist](https://github.com/DCubix/Twist) : Twist - node-based audio synthesizer\n  - [blastmidi](https://github.com/blastbay/blastmidi) : A C library to read standard MIDI files.\n  - [ass](https://github.com/fungos/ass) : ASS: Audio Stupidly Simple\n  - [FAudio](https://github.com/FNA-XNA/FAudio) : FAudio - Accuracy-focused XAudio reimplementation for open platforms\n  - [libxm](https://github.com/Artefact2/libxm) : A small XM (FastTracker II Extended Module) player library.\n  - [minimp3](https://github.com/lieff/minimp3) : Minimalistic MP3 decoder single header library\n  - [libnyquist](https://github.com/ddiakopoulos/libnyquist) : Cross platform C++11 library for decoding audio (mp3, wav, ogg, opus, flac, etc)\n  - [cute_dsp](https://github.com/themattrosen/cute_dsp) : Utility library for cute_sound.\n  - [DSP-Cpp-filters](https://github.com/dimtass/DSP-Cpp-filters) : DSP C++ audio filters\n  - [DSPFIR](https://github.com/Atrix256/DSPFIR) : C++ to go with blog post https://blog.demofox.org/2020/01/05/fir-audio-data-filters/\n  - [iPlug2](https://github.com/iPlug2/iPlug2) : C++ Audio Plug-in Framework for desktop, mobile and web [PRE-RELEASE]\n  - [rfxgen](https://github.com/raysan5/rfxgen) : A simple and easy-to-use fx sounds generator\n  - [raudio](https://github.com/raysan5/raudio) : A simple and easy-to-use audio library based on miniaudio\n  - Audio Synthesis and Speech recognition\n    - [flite](https://github.com/festvox/flite) : A small fast portable speech synthesis system\n    - [codespeak](https://github.com/sethwilsonUS/codespeak) : A web-based speech-to-code editor for humans.\n    - [subsync](https://github.com/sc0ty/subsync) : Subtitle Speech Synchronizer\n    - [GranularSynth](https://github.com/Atrix256/GranularSynth) : \n    - [speech_synth_series](https://github.com/bisqwit/speech_synth_series) : Let’s Create a Speech Synthesizer\n    - [synthv1](https://github.com/rncbc/synthv1) : synthv1 - an old-school polyphonic synthesizer\n    - [DeepSpeech](https://github.com/mozilla/DeepSpeech) : A TensorFlow implementation of Baidu's DeepSpeech architecture\n    - [pocketsphinx](https://github.com/cmusphinx/pocketsphinx) : PocketSphinx is a lightweight speech recognition engine, specifically tuned for handheld and mobile devices, though it works equally well on the desktop\n    - [Tonic](https://github.com/TonicAudio/Tonic) : Easy and efficient audio synthesis in C++\n    - [stk](https://github.com/thestk/stk) : The Synthesis ToolKit in C++ (STK) is a set of open source audio signal processing and algorithmic synthesis classes written in the C++ programming language.\n- Video\n  - [videoInput](https://github.com/ofTheo/videoInput) : A video capture library for windows.\n  - [FFmpeg](https://github.com/FFmpeg/FFmpeg) : Mirror of git://source.ffmpeg.org/ffmpeg.git\n  - [MiniVideo](https://github.com/emericg/MiniVideo) : A multimedia framework developed from scratch in C/C++, bundled with test programs and a neat media analyzer.\n  - [mpv](https://github.com/mpv-player/mpv) : Video player based on MPlayer/mplayer2\n  - [minimp4](https://github.com/lieff/minimp4) : Minimalistic MP4 mux/demux single header library\n  - [pl_mpeg](https://github.com/phoboslab/pl_mpeg) : Single file C library for decoding MPEG1 Video and MP2 Audio\n  - [FFMpeg-decode-example](https://github.com/UnickSoft/FFMpeg-decode-example) : Example how to use ffmpeg to decode video file.\n\n## Physics\n[Back to top](#Index)\n- [GamePhysicsCookbook](https://github.com/gszauer/GamePhysicsCookbook) : Source code for Game Physics Cookbook\n- 2D Physics\n  - [Box2D](https://github.com/erincatto/Box2D) : Box2D is a 2D physics engine for games\n  - [b2dJson](https://github.com/iforce2d/b2dJson) : Utilities to load scenes created by the R.U.B.E Box2D editor\n  - [phyxed-2d](https://github.com/Srekel/phyxed-2d) : A 2d physics engine with fixed-point support.\n  - [Physac](https://github.com/victorfisac/Physac) : 2D physics header-only library for videogames developed in C using raylib library.\n  - [box2d-lite](https://github.com/erincatto/box2d-lite) : A small 2D physics engine\n  - [PlayRho](https://github.com/louis-langholtz/PlayRho) : Real-time oriented physics engine and library that's currently best suited for 2D games.\n  - [liquidfun](https://github.com/google/liquidfun) : 2D physics engine for games\n- 3D Physics\n  - [bullet3](https://github.com/bulletphysics/bullet3) : Bullet Physics SDK: real-time collision detection and multi-physics simulation for VR, games, visual effects, robotics, machine learning etc.\n  - [PhysX-3.4](https://github.com/NVIDIAGameWorks/PhysX-3.4) : NVIDIA PhysX SDK 3.4\n  - [ragdoll_simulator](https://github.com/SaladJack/ragdoll_simulator) : ragdoll simulator based on PhysX-3.3\n  - [physics_playground](https://github.com/avoroshilov/physics_playground) : Improved version of real-time physics engine that couples FEM-based deformables and rigid body dynamics\n  - [reactphysics3d](https://github.com/DanielChappuis/reactphysics3d) : Open source C++ physics engine library in 3D\n  - [BVH-based-Collision-Detection-Scheme](https://github.com/littlemine/BVH-based-Collision-Detection-Scheme) : General broad-phase collision detection framework using BVH and BVTT front tracking.\n  - [cyclone-physics](https://github.com/idmillington/cyclone-physics) : The Physics engine that accompanies the book \"Game Physics Engine Design\"\n  - [glChAoS.P](https://github.com/BrutPitt/glChAoS.P) : Real time 3D strange attractors scout and hypercomplex fractals\n  - [bounce](https://github.com/irlanrobson/bounce) : Bounce is a 3D physics engine for games.\n  - [newton-dynamics](https://github.com/MADEAPPS/newton-dynamics) : Newton Dynamics is an integrated solution for real time simulation of physics environments.\n  - [nudge](https://github.com/rasmusbarr/nudge) : A small data-oriented and SIMD-optimized 3D rigid body physics library.\n  - [JoltPhysics](https://github.com/jrouwe/JoltPhysics) : A multi core friendly rigid body physics and collision detection library.\n- Water & Fluids\n  - [waves](https://github.com/dli/waves) : Ocean Wave Simulation - http://david.li/waves\n  - [wfc](https://github.com/emilk/wfc) : A C++ port of Wave Function Collapse Tiling\n  - [fluid-engine-dev](https://github.com/doyubkim/fluid-engine-dev) : Fluid simulation engine for computer graphics applications\n  - [fluids](https://github.com/aiwl/fluids) : Simple \"Stable Fluids\" Implementation\n  - [water-wave-packets](https://github.com/jeschke/water-wave-packets) : Sandbox binary and source code for the Siggraph 2017 paper \"Water Wave Packets\" by Stefan Jeschke (NVIDIA) and Chris Wojtan (IST Austria)\n  - [GridFluidSim3D](https://github.com/rlguy/GridFluidSim3D) : A PIC/FLIP fluid simulation based on the methods found in Robert Bridson's \"Fluid Simulation for Computer Graphics\"\n  - [RealtimeWater](https://github.com/hpatjens/RealtimeWater) : \n  - [FluidEngine](https://github.com/ZeusYang/FluidEngine) : Offline fluid simulation solver adopted from https://github.com/doyubkim/fluid-engine-dev.\n  - [Blender-FLIP-Fluids](https://github.com/rlguy/Blender-FLIP-Fluids) : FLIP Fluids is a powerful liquid simulation plugin that gives you the ability to create high quality fluid effects all within Blender, the free and open source 3D creation suite.\n  - [incremental-fluids](https://github.com/tunabrain/incremental-fluids) : Simple, single-file fluid solvers for learning purposes\n  - [Fluid-Simulation](https://github.com/983/Fluid-Simulation) : Fluid Simulation on CPU and GPU in C++ with OpenGL\n  - [WaterSurfaceWavelets](https://github.com/lecopivo/WaterSurfaceWavelets) : \n  - [Bimocq](https://github.com/ziyinq/Bimocq) : Efficient and Conservative Fluids Using Bidirectional Mapping\n- IK\n  - [invk](https://github.com/ramakarl/invk) : Invk - Inverse Kinematics Library with Quaternions\n  - [gear](https://github.com/junggon/gear) : A C++ library for kinematics and dynamics of articulated rigid body systems.\n  - [softIkSolver](https://github.com/Toolchefs/softIkSolver) : Maya Soft IK Solver\n- Cloth\n  - [Yarn-cloth-sim](https://github.com/wkindling/Yarn-cloth-sim) : Implementation of ‘Yarn-Level Simulation of Woven Cloth’ on Siggraph Asia 2014.\n  - [libwetcloth](https://github.com/nepluno/libwetcloth) : A Multi-Scale Model for Simulating Liquid-Fabric Interactions\n  - [GPU_cloth](https://github.com/likangning93/GPU_cloth) : \n  - [FastMassSpring](https://github.com/sam007961/FastMassSpring) : Interactive cloth simulator using the method described in the SIGGRAPH paper \"Fast Simulation of Mass-Spring Systems\" by Liu, T., Bargteil, A. W., Obrien, J. F., & Kavan, L.\n  - [ThunderLoom](https://github.com/Thunderloom/ThunderLoom) : A physically based shader for woven cloth\n\n## Networking\n[Back to top](#Index)\n- [LUrlParser](https://github.com/corporateshark/LUrlParser) : Lightweight URL & URI parser (RFC 1738, RFC 3986)\n- [wangle](https://github.com/facebook/wangle) : Wangle is a framework providing a set of common client/server abstractions for building services in a consistent, modular, and composable way.\n- TCP/UDP/HTTP\n  - [netcode.io](https://github.com/networkprotocol/netcode.io) : A protocol for secure client/server connections over UDP\n  - [enet](https://github.com/lsalzman/enet) : ENet reliable UDP networking library\n  - [minihttp](https://github.com/fgenesis/minihttp) : A minimal 2-file (cpp+h) TCP & HTTP client implementation. Supports GET & simple POST. Optional SSL via PolarSSL/mbedTLS. Cross-platform, uses POSIX or Win32 API.\n  - [SFNUL](https://github.com/binary1248/SFNUL) : Simple and Fast Network Utility Library\n  - [uWebSockets](https://github.com/uNetworking/uWebSockets) : Simple, secure & standards compliant web I/O for the most demanding of applications\n  - [net11](https://github.com/whizzter/net11) : Simple embeddable C++11 async tcp,http and websocket serving.\n  - [libclub](https://github.com/inetic/libclub) : Lightweight Peer-to-Peer networking engine for real time applications\n  - [cxxhttp](https://github.com/ef-gy/cxxhttp) : Asynchronous, Header-only C++ HTTP-over-(TCP|UNIX Socket|STDIO) Library\n  - [librg](https://github.com/librg/librg) : Build simple and fast cross-platform multiplayer\n  - [utp-native](https://github.com/mafintosh/utp-native) : Native bindings for libutp\n  - [czspas](https://github.com/ruifig/czspas) : Minimalistic socket library inspired by Asio/Boost Asio, implemented in 1 single header file\n  - [netlibrary](https://github.com/matt-attack/netlibrary) : A simple networking library for C++. Designed with games in mind, but can be used for other things. Tested to work on Android and Windows.\n  - [RakNet](https://github.com/facebookarchive/RakNet) : RakNet is a cross platform, open source, C++ networking engine for game programmers.\n  - [frnetlib](https://github.com/Cloaked9000/frnetlib) : Small and fast cross-platform networking library, with support for messaging, IPv6, HTTP, SSL and WebSocket.\n  - [GameNetworkingSockets](https://github.com/ValveSoftware/GameNetworkingSockets) : Reliable & unreliable messages over UDP. Robust message fragmentation & reassembly. Encryption.\n  - [QuantumGate](https://github.com/kareldonk/QuantumGate) : QuantumGate is a peer-to-peer (P2P) communications protocol, library and API written in C++.\n  - [rttp](https://github.com/rtttech/rttp) : RTTP - A Reliable Realtime Transport Protocol\n  - [clsocket](https://github.com/DFHack/clsocket) : SimpleSockets is a lightweight set of classes that allow developers to implement IP based network programs.\n  - [https_client](https://github.com/HISONA/https_client) : HTTP/HTTPS REST Client C Library\n  - [libquicknet](https://github.com/Dahrkael/libquicknet) : Simple and small reliable UDP networking library for games\n  - [NetDynamics](https://github.com/nxrighthere/NetDynamics) : Data-oriented networking playground for the reliable UDP transports\n  - [cpp-Socket](https://github.com/Krozark/cpp-Socket) : Some class to help to construct client/server with soket and serilized datas.\n  - [cpp-ORM](https://github.com/Krozark/cpp-ORM) : A project to create a simple ORM.\n  - [mbedtls](https://github.com/ARMmbed/mbedtls) : An open source, portable, easy to use, readable and flexible SSL library\n  - [cpp-httplib](https://github.com/yhirose/cpp-httplib) : A C++ header-only HTTP/HTTPS server and client library\n  - [rinetd](https://github.com/samhocevar/rinetd) : TCP/UDP port redirector\n  - [swrap](https://github.com/BareRose/swrap) : Portable, single-file, protocol-agnostic TCP and UDP socket wrapper, primarily for game networking\n  - [librg-cpp](https://github.com/markatk/librg-cpp) : C++ wrapper for librg network library\n  - [zed_net](https://github.com/Smilex/zed_net) : Single file public domain networking library\n  - [http-parser](https://github.com/nodejs/http-parser) : http request/response parser for c\n  - [botan](https://github.com/randombit/botan) : Cryptography Toolkit\n  - [reliable.io](https://github.com/networkprotocol/reliable.io) : A packet acknowledgement system for UDP protocols\n  - [PcapPlusPlus](https://github.com/seladb/PcapPlusPlus) : PcapPlusPlus is a multiplatform C++ library for capturing, parsing and crafting of network packets. It is designed to be efficient, powerful and easy to use. It provides C++ wrappers for the most p…\n- SQL\n  - [scylla](https://github.com/scylladb/scylla) : NoSQL data store using the seastar framework, compatible with Apache Cassandra\n  - [NLDatabase](https://github.com/raven-ie/NLDatabase) : Lightweight C++ wrapper for SQLite\n  - [ndb](https://github.com/ads00/ndb) : Neuroshok DataBase\n  - [unqlite](https://github.com/symisc/unqlite) : An Embedded NoSQL, Transactional Database Engine\n  - [sqlpp11](https://github.com/rbock/sqlpp11) : A type safe SQL template library for C++\n  - [SQLiteCpp](https://github.com/SRombauts/SQLiteCpp) : SQLiteC++ (SQLiteCpp) is a smart and easy to use C++ SQLite3 wrapper.\n  - [hiberlite](https://github.com/paulftw/hiberlite) : C++ ORM for SQLite\n  - [sqlite_orm](https://github.com/fnc12/sqlite_orm) : SQLite ORM light header only library for modern C++\n- RPC\n  - [rpclib](https://github.com/rpclib/rpclib) : rpclib is a modern C++ msgpack-RPC server and client library\n  - [libjson-rpc-cpp](https://github.com/cinemast/libjson-rpc-cpp) : C++ framework for json-rpc (json remote procedure call)\n  - [Game-NET](https://github.com/sp4cerat/Game-NET) : RPC Network Library for Multiplayer Games\n  - [grpc](https://github.com/grpc/grpc) : The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)\n- Server\n  - [nakama](https://github.com/heroiclabs/nakama) : Distributed server for social and realtime games and apps.\n  - [webby](https://github.com/deplinenoise/webby) : A tiny webserver for game development\n  - [yojimbo](https://github.com/networkprotocol/yojimbo) : A network library for client/server games with dedicated servers\n  - [seasocks](https://github.com/mattgodbolt/seasocks) : Simple, small, C++ embeddable webserver with WebSockets support\n  - [libhttpserver](https://github.com/etr/libhttpserver) : C++ library for creating an embedded Rest HTTP server (and more)\n  - [open-match](https://github.com/googleforgames/open-match) : Flexible, extensible, and scalable video game matchmaking.\n  - [hifi](https://github.com/highfidelity/hifi) : Open source client/server software for creating shared VR environments. Docs at http://docs.highfidelity.com We are hiring: http://highfidelity.com/jobs Also, PT work available at http://worklist.net\n  - [crow](https://github.com/ipkn/crow) : Crow is very fast and easy to use C++ micro web framework (inspired by Python Flask)\n  - [agones](https://github.com/googleforgames/agones) : Dedicated Game Server Hosting and Scaling for Multiplayer Games on Kubernetes\n  - [civetweb](https://github.com/civetweb/civetweb) : Embedded C/C++ web server\n  - [EmbeddableWebServer](https://github.com/hellerf/EmbeddableWebServer) : Cross-platform, single .h file HTTP server (Windows, Linux, Mac OS X)\n  - [libcluon](https://github.com/chrberger/libcluon) : libcluon is a small and efficient, single-file and header-only library written in modern C++ to power microservices.\n  - [mongoose](https://github.com/cesanta/mongoose) : Mongoose Embedded Web Server Library - Mongoose is more than an embedded webserver. It is a multi-protocol embedded networking library with functions including TCP, HTTP client and server, WebSocke…\n  - [yhs](https://github.com/tom-seddon/yhs) : Embeddable HTTP server.\n  - [Server_Information_Panel](https://github.com/LaGTeK/Server_Information_Panel) : Information Panel for DayZ SA\n  - [moon](https://github.com/sniper00/moon) : A cross-platform,lightweight,scalable game server framework written in C++, and support Lua Script\n  - [Game-Server-Configs](https://github.com/GameServerManagers/Game-Server-Configs) : A repo of game server configuration files used by LinuxGSM\n\n## AI\n[Back to top](#Index)\n- [CppCompetitor](https://github.com/nikoladimitroff/CppCompetitor) : A program for dueling code bots.\n- [Samodiva](https://github.com/nikoladimitroff/Samodiva) : A C++ library for AI stuff. Hopefully it won't be as unfinished as the majority of my other repos.\n- Neural Network & Deep Learning\n  - [neural](https://github.com/achpile/neural) : Some plays with neural network\n  - [CppDNN](https://github.com/kmc7468/CppDNN) : Machine Learning for C++11\n  - [CubbyDNN](https://github.com/utilForever/CubbyDNN) : Deep learning framework using C++17 in a single header file\n  - [TinNet](https://github.com/AcrylicShrimp/TinNet) : A C++14 based deep learning library.\n  - [onnxruntime](https://github.com/microsoft/onnxruntime) : ONNX Runtime: cross-platform, high performance scoring engine for ML models\n  - [RobotChess](https://github.com/utilForever/RobotChess) : Auto Chess simulator using C++ with some reinforcement learning\n  - [tesseract](https://github.com/tesseract-ocr/tesseract) : Tesseract Open Source OCR Engine (main repository)\n  - [genann](https://github.com/codeplea/genann) : simple neural network library in ANSI C\n  - [plaidml](https://github.com/plaidml/plaidml) : PlaidML is a framework for making deep learning work everywhere.\n  - [ncnn](https://github.com/Tencent/ncnn) : ncnn is a high-performance neural network inference framework optimized for the mobile platform\n  - [EOgmaNeo](https://github.com/ogmacorp/EOgmaNeo) : Ogma - EOgmaNeo https://ogma.ai/\n  - [Dataset_Synthesizer](https://github.com/NVIDIA/Dataset_Synthesizer) : NVIDIA Deep learning Dataset Synthesizer (NDDS)\n  - [mace](https://github.com/XiaoMi/mace) : MACE is a deep learning inference framework optimized for mobile heterogeneous computing platforms.\n  - [pose-tensorflow](https://github.com/eldar/pose-tensorflow) : Human Pose estimation with TensorFlow framework\n  - [nvvl](https://github.com/NVIDIA/nvvl) : A library that uses hardware acceleration to load sequences of video frames to facilitate machine learning training\n  - [codi](https://github.com/whackashoe/codi) : CoDi is a cellular automaton model for spiking neural networks\n  - [Cranium](https://github.com/100/Cranium) : A portable, header-only, artificial neural network library written in C99\n  - [darknet](https://github.com/pjreddie/darknet) : Convolutional Neural Networks\n  - [tiny-dnn](https://github.com/tiny-dnn/tiny-dnn) : header only, dependency-free deep learning framework in C++14\n  - [TensorRT](https://github.com/NVIDIA/TensorRT) : TensorRT is a C++ library for high performance inference on NVIDIA GPUs and deep learning accelerators.\n  - [kann](https://github.com/attractivechaos/kann) : A lightweight C library for artificial neural networks\n  - [cONNXr](https://github.com/alrevuelta/cONNXr) : Pure C ONNX runtime with zero dependancies for embedded devices\n- Path\n  - [recastnavigation](https://github.com/recastnavigation/recastnavigation) : Navigation-mesh Toolset for Games\n  - [NavMeshComponents](https://github.com/Unity-Technologies/NavMeshComponents) : High Level API Components for Runtime NavMesh Building\n  - [MicroPather](https://github.com/leethomason/MicroPather) : MicroPather is a path finder and A* solver (astar or a-star) written in platform independent C++ that can be easily integrated into existing code. MicroPather focuses on being a path finding engine…\n  - [rsmotion](https://github.com/BasGeertsema/rsmotion) : RSMotion - C++ Library for Reeds-Shepp Cars\n  - [invariant-ekf](https://github.com/RossHartley/invariant-ekf) : C++ library to implement invariant extended Kalman filtering for aided inertial navigation.\n  - [lib_2d](https://github.com/I3ck/lib_2d) : A c++ library for paths defined by points within the 2d space\n  - [cartographer](https://github.com/googlecartographer/cartographer) : Cartographer is a system that provides real-time simultaneous localization and mapping (SLAM) in 2D and 3D across multiple platforms and sensor configurations.\n  - [Swarmz](https://github.com/Cultrarius/Swarmz) : A free, header-only C++ swarming (flocking) library for real-time applications\n  - [Dubins-Curves](https://github.com/AndrewWalker/Dubins-Curves) : Path generation for the Dubin's car\n\n## Scripting\n[Back to top](#Index)\n- [scriptorium](https://github.com/r-lyeh-archived/scriptorium) : Game Scripting Languages benchmarked\n- [craftinginterpreters](https://github.com/munificent/craftinginterpreters) : Repository for the book \"Crafting Interpreters\"\n- [ChaiScript](https://github.com/ChaiScript/ChaiScript) : Embedded Scripting Language Designed for C++\n- [CppSharp](https://github.com/mono/CppSharp) : Tools and libraries to glue C/C++ APIs to high-level languages\n- [Ark](https://github.com/SuperFola/Ark) : Ark is a small, fast, functionnal and scripting language for video games\n- [hhvm](https://github.com/facebook/hhvm) : A virtual machine for executing programs written in Hack.\n- [cpp-embedding-mono](https://github.com/hschlichter/cpp-embedding-mono) : Small sample on how to embed the mono runtime into a C++ program.\n- [wren](https://github.com/wren-lang/wren) : The Wren Programming Language\n- [v](https://github.com/vlang/v) : Simple, fast, safe, compiled language for developing maintainable software. Compiles itself in <1s. 1.0 release in December 2019. https://vlang.io\n- [NativeJIT](https://github.com/BitFunnel/NativeJIT) : A C++ expression -> x64 JIT\n- [kit](https://github.com/kitlang/kit) : Kit: a magical, high performance programming language, designed for game development. Pre-alpha!\n- [pure-bash-bible](https://github.com/dylanaraps/pure-bash-bible) : A collection of pure bash alternatives to external processes.\n- [swig](https://github.com/swig/swig) : SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages.\n- [smoll-vm](https://github.com/SuperFola/smoll-vm) : just a smoll vm in c++14\n- [haxe](https://github.com/HaxeFoundation/haxe) : Haxe - The Cross-Platform Toolkit\n- [c4](https://github.com/rswier/c4) : C in four functions\n- [oc](https://github.com/garettbass/oc) : Macro magic for declaring/calling Objective-C APIs from C11 or C++. Preloads selectors, chooses the correct objc_msgSend to call per method/platform.\n- [breadboard](https://github.com/google/breadboard) : C++ graph based event system\n- [Cello](https://github.com/orangeduck/Cello) : Higher level programming in C\n- [HCode](https://github.com/Hammurabi/HCode) : A scripting language created mainly for game engines\n- Lua\n  - [luazdf](https://github.com/aiq/luazdf) : LuaZDF - Lua Zero Dependency Functions\n  - [luavela](https://github.com/eliasdaler/luavela) : Implementation of Lua 5.1, originally a fork of LuaJIT 2.0\n  - [raylib-lua-sol](https://github.com/RobLoach/raylib-lua-sol) : A simple and easy-to-use Lua library to enjoy videogames programming\n  - [LuaTalk](https://github.com/Sygmei/LuaTalk) : Code examples used in my Lua talk\n  - [debugger.lua](https://github.com/slembcke/debugger.lua) : A simple, embedabble CLI debugger for Lua.\n  - [lua-vec](https://github.com/graphitemaster/lua-vec) : highly efficent, caching, copy-on-write lua vector math library\n  - [lunatic](https://github.com/shiinamiyuki/lunatic) : lunatic: a toy lua interpreter\n  - [kaun](https://github.com/pfirsich/kaun) : Lua module for 3D graphics to be used with löve (http://love2d.org)\n  - [lua](https://github.com/lua/lua) : The Lua repo, as seen by the Lua team. Mirrored irregularly. Please DO NOT send pull requests. Send issues/patches to the Lua mailing list https://www.lua.org/lua-l.html\n  - [LuaPlusPlus](https://github.com/Rseding91/LuaPlusPlus) : Lua 5.3.4 re-written in C++ 17\n  - [kaguya](https://github.com/satoren/kaguya) : C++ binding to Lua\n  - [hsluv-lua](https://github.com/hsluv/hsluv-lua) : Lua implementation of HSLuv (revision 4)\n  - [Luna](https://github.com/XyronLabs/Luna) : Create simple visual sketches in Lua using SFML\n  - [lutok2](https://github.com/soulik/lutok2) : Advanced version of lutok C++/Lua binding\n  - [sol2](https://github.com/ThePhD/sol2) : Sol3 (sol2 v3.0) - a C++ <-> Lua API wrapper with advanced features and top notch performance - is here, and it's great! Documentation:\n  - [lualite](https://github.com/user1095108/lualite) : a one header library for creating Lua bindings to C++\n  - [lua-intf](https://github.com/SteveKChiu/lua-intf) : A binding between C++11 and Lua language\n  - [Selene](https://github.com/jeremyong/Selene) : Simple C++11 friendly header-only bindings to Lua\n  - [TypeScriptToLua](https://github.com/TypeScriptToLua/TypeScriptToLua) : Typescript to lua transpiler. https://typescripttolua.github.io/\n  - [Lua-Low-Level](https://github.com/gligneul/Lua-Low-Level) : Per function, Lua JIT using LLVM C++ toolchain\n  - [lua-languages](https://github.com/hengestone/lua-languages) : Languages that compile to Lua\n  - [luvit](https://github.com/luvit/luvit) : Lua + libUV + jIT = pure awesomesauce\n  - [luamod](https://github.com/DontBelieveMe/luamod) : C++11 API for binding Lua and C++, targeted at scripting for games\n- Python\n  - [zippypy](https://github.com/shooshx/zippypy) : A simple, lightweight Python 2.7 interpreter, with predictable memory management and without global locks.\n  - [pybind11](https://github.com/pybind/pybind11) : Seamless operability between C++11 and Python\n  - [pystring](https://github.com/imageworks/pystring) : C++ functions matching the interface and behavior of python string methods with std::string\n  - [python-cheatsheet](https://github.com/gto76/python-cheatsheet) : Comprehensive Python Cheatsheet\n  - [zippypy](https://github.com/intigua/zippypy) : A simple, lightweight Python 2.7 interpreter, with predictable memory management and without global locks.\n- Javascript\n  - [jerryscript](https://github.com/ARMmbed/jerryscript) : Ultra-lightweight JavaScript engine for the Internet of Things. http://samsung.github.io/jerryscript\n  - [em-dosbox](https://github.com/dreamlayers/em-dosbox) : An Emscripten port of DOSBox\n  - [duktape](https://github.com/svaarala/duktape) : Duktape - embeddable Javascript engine with a focus on portability and compact footprint\n  - [mjs](https://github.com/cesanta/mjs) : Embedded JavaScript engine for C/C++\n  - [v8](https://github.com/v8/v8) : The official mirror of the V8 Git repository\n\n## GameProgramming\n[Back to top](#Index)\n- [Nodable](https://github.com/berdal84/Nodable) : a node-able bidirectionnal expression editor.\n- [nodeeditor](https://github.com/paceholder/nodeeditor) : Qt Node Editor. Dataflow programming framework\n- [FSM](https://github.com/entt-dev/FSM) : finite-state-machine demo\n- [lasso](https://github.com/ggabriel96/lasso) : A generic game loop implementation in C++\n- [aabbcc](https://github.com/lohedges/aabbcc) : Dynamic AABB trees in C++ with support for periodic systems.\n- [distance-occlusion](https://github.com/andrewwillmott/distance-occlusion) : A library of distance and occlusion generation routines\n- [cppfsm](https://github.com/eglimi/cppfsm) : A simple, generic, header-only state machine implementation for C++.\n- [Behavior-Tree](https://github.com/miccol/Behavior-Tree) : A lightweight library of Behavior Trees Library in C++.\n- [Achieve](https://github.com/Dovyski/Achieve) : Library to manage and implement achievements in a game.\n- [Discregrid](https://github.com/InteractiveComputerGraphics/Discregrid) : A static C++ library for the generation of discrete functions on a box-shaped domain. This is especially suited for the generation of signed distance fields.\n- [DesignPattern](https://github.com/wxjeacen/DesignPattern) : \n- [game-programming-patterns](https://github.com/munificent/game-programming-patterns) : Source repo for the book\n- [fsm-variant](https://github.com/mpusz/fsm-variant) : Finite State Machine implementation using std::variant\n- [camera_demo](https://github.com/prideout/camera_demo) : demo for par_camera_control.h\n- [godot_entt_net_example](https://github.com/portaloffreedom/godot_entt_net_example) : A simple example on how to use entt (https://github.com/skypjack/entt) and GameNetworkingSockets (https://github.com/ValveSoftware/GameNetworkingSockets) within godot\n- EntityComponentSystem\n  - [ecs-example](https://github.com/eigenbom/ecs-example) : An example of an ECS architecture in C++\n  - [Diana](https://github.com/discoloda/Diana) : Entity Component system like Artemis implemented in C\n  - [entt-reactive](https://github.com/saltpowered/entt-reactive) : An experimental sprite rendering setup utilizing SSBO's, Threading, EnTT reactive systems, and array-textures based sprite caching.\n  - [minECS](https://github.com/Alan-FGR/minECS) : Minimal hackable C# ECS\n  - [lent](https://github.com/nem0/lent) : the Donald Trump of the ECS libraries\n  - [anax](https://github.com/miguelmartin75/anax) : An open source C++ entity system.\n  - [ecs](https://github.com/SergeyMakeev/ecs) : Thoughts about entity-component-system\n  - [flecs](https://github.com/SanderMertens/flecs) : A Multithreaded Entity Component System written for C89 & C99\n  - [entt](https://github.com/skypjack/entt) : Gaming meets modern C++ - a fast and reliable entity-component system (ECS) and much more\n  - [corgi](https://github.com/google/corgi) : C++ entity-component system\n  - [ECS](https://github.com/redxdev/ECS) : C++ single-header entity component system library\n  - [EntityPlus](https://github.com/Yelnats321/EntityPlus) : A C++14 Entity Component System\n  - [ecst](https://github.com/SuperV1234/ecst) : [WIP] Experimental C++14 multithreaded compile-time entity-component-system library.\n  - [entityx](https://github.com/alecthomas/entityx) : EntityX - A fast, type-safe C++ Entity-Component system\n  - [dynamix](https://github.com/iboB/dynamix) : A new take on polymorphism in C++\n  - [met-ecs](https://github.com/guillaume-haerinck/met-ecs) : A simple ECS library made for learning purposes (header-only)\n- Inputs\n  - [XJoy](https://github.com/sam0x17/XJoy) : Use Nintendo Switch JoyCons as a virtual Xbox 360 controller in Windows\n  - [drishti](https://github.com/elucideye/drishti) : Real time eye tracking for embedded and mobile devices.\n  - [openpose](https://github.com/CMU-Perceptual-Computing-Lab/openpose) : OpenPose: Real-time multi-person keypoint detection library for body, face, hands, and foot estimation\n  - [libgamepad](https://github.com/mtwilliams/libgamepad) : Cross-platform library for gamepad input. MIT licensed.\n  - [gainput](https://github.com/jkuhlmann/gainput) : Cross-platform C++ input library supporting gamepads, keyboard, mouse, touch http://gainput.johanneskuhlmann.de/\n  - [gesture_recognition](https://github.com/bautolp/gesture_recognition) : UVIC ECE 499 Real-Time Gesture Recognition Project\n  - [OpenHMD](https://github.com/OpenHMD/OpenHMD) : Free and Open Source API and drivers for immersive technology.\n  - [EasyTab](https://github.com/ApoorvaJ/EasyTab) : Single-header multi-platform tablet library\n  - [libue](https://github.com/houqp/libue) : A self-contained minimal library for interacting with Linux hot-plug events\n- Maps\n  - [tiled](https://github.com/bjorn/tiled) : A flexible level editor\n  - [tmxlite](https://github.com/fallahn/tmxlite) : lightweight C++14 parser for Tiled tmx files\n- Procedural\n  - [SpaceshipGenerator](https://github.com/a1studmuffin/SpaceshipGenerator) : A Blender script to procedurally generate 3D spaceships\n  - [Procedural-Cities](https://github.com/magnificus/Procedural-Cities) : master thesis\n  - [termProject](https://github.com/jcbecker/termProject) : Terrain generator with 5 visually distinct biomes, spread them in regions and smooth their borders\n  - [libseed](https://github.com/GrimshawA/libseed) : Procedural Content Generation Library for C++\n  - [proctree](https://github.com/jarikomppa/proctree) : Procedural tree mesh generator (and editor)\n  - [World-Generator](https://github.com/Moneyl/World-Generator) : Procedural world generator. Generates a height map and then applies temperature, rainfall, and river simulations to it to form a world map.\n  - [FantasyMapGenerator](https://github.com/rlguy/FantasyMapGenerator) : A fantasy map generator based on Martin O'Leary's \"Generating fantasy map\" notes\n  - [procgen](https://github.com/Epholys/procgen) : Procedural Generation Experiments\n  - [rant](https://github.com/TheBerkin/rant) : Rant – The all-purpose procedural text library\n  - [SDS](https://github.com/eigenbom/SDS) : Procedural generation of organic 3D geometry\n  - [fugu](https://github.com/eigenbom/fugu) : Fugu/fg is a system for procedurally generating animated geometric forms in real-time. Fugu can be downloaded from http://bp.io/fugu, an online reference and gallery is also located there.\n  - [generator](https://github.com/ilmola/generator) : A procedural geometry generation library for C++11\n  - [Procedural-Terrain-Estimator](https://github.com/Snowapril/Procedural-Terrain-Estimator) : Generate Height map with Generator (OpenGL and imgui) and Construct Splat Map with generated height map using Algorithm(DPS, BFS, Gradient Descent ... etc) . At Renderer, with height map and blend …\n- Integration\n  - [Playnite](https://github.com/JosefNemec/Playnite) : Open source video game library manager with support for 3rd party libraries like Steam, GOG, Origin, Battle.net and Uplay. Including game emulation support, providing one unified interface for your…\n  - [game-jolt-api-cpp-library](https://github.com/MausGames/game-jolt-api-cpp-library) : C++ Library to connect games with Game Jolt (https://gamejolt.com)\n  - [CSteamworks](https://github.com/rlabrecque/CSteamworks) : C bindings for Steamworks\n  - [enkiWS](https://github.com/juliettef/enkiWS) : Web Services for game developers on Google App Engine\n  - [steam-audio](https://github.com/ValveSoftware/steam-audio) : Steam Audio\n  - [tiniest-analytics](https://github.com/Pintea/tiniest-analytics) : VERY simple cross-platform C++ analytics for games (using Google Analytics)\n  - [BRINDIE-FREE](https://github.com/sarienn/BRINDIE-FREE) : BRINDIE FREE - an .ai sourcefile with sizes for art assets needed to create Facebook page, Twitter profile, Steam Store page and Steam Developer page\n  - [Proton](https://github.com/ValveSoftware/Proton) : Compatibility tool for Steam Play based on Wine and additional components\n  - [steam-runtime-helpers](https://github.com/jorgenpt/steam-runtime-helpers) : \n- Games\n  - [endless-sky](https://github.com/endless-sky/endless-sky) : Space exploration, trading, and combat game.\n  - [Cytopia](https://github.com/CytopiaTeam/Cytopia) : A city building simulation game\n  - [mudpp](https://github.com/jfalcou/mudpp) : C++17 exploration of a classic MUD like game\n  - [magarena](https://github.com/magarena/magarena) : Magarena is a single-player fantasy card game played against a computer opponent.\n  - [robotligan](https://github.com/Trisslotten/robotligan) : Multiplayer football game\n  - [VVVVVV](https://github.com/TerryCavanagh/VVVVVV) : The source code to VVVVVV! http://thelettervsixtim.es/\n  - [DTL_RogueLike](https://github.com/Kasugaccho/DTL_RogueLike) : : RogueLike (Dungeon Template Library)\n  - [UniformDieCast](https://github.com/TheMaverickProgrammer/UniformDieCast) : C++11 provides chainable and iterable object for uniform die casts. Useful for statistics or table top RPG simulations.\n\n## Rust\n[Back to top](#Index)\n- [iced](https://github.com/hecrj/iced) : A renderer-agnostic GUI library for Rust, inspired by Elm\n- [tetra](https://github.com/17cupsofcoffee/tetra) : A simple 2D game framework written in Rust\n- [arewegameyet](https://github.com/doppioslash/arewegameyet) : The repository for arewegameyet.rs\n- [rust-ecosystem](https://github.com/EmbarkStudios/rust-ecosystem) : Rust wants & tracking for Embark\n- [treeflection](https://github.com/rukai/treeflection) : A rust library that provides pseudo-reflection for structs and enums\n- [wg](https://github.com/rust-gamedev/wg) : Coordination repository of the Game Development Working Group\n- [reference](https://github.com/rust-lang-nursery/reference) : The Rust Reference\n- [shipyard](https://github.com/leudz/shipyard) : Entity Component System written in Rust\n- [physx-rs](https://github.com/EmbarkStudios/physx-rs) : Rust binding and wrapper over NVIDIA PhysX\n- [ndarray](https://github.com/rust-ndarray/ndarray) : ndarray: an N-dimensional array with array views, multidimensional slicing, and efficient operations\n- [amethyst](https://github.com/amethyst/amethyst) : Data-oriented and data-driven game engine written in Rust\n- [cheats.rs](https://github.com/ralfbiedert/cheats.rs) : Rust Language Cheat Sheet - https://cheats.rs\n- [mathbench-rs](https://github.com/bitshifter/mathbench-rs) : Comparing performance of Rust math libraries for common 3D game and graphics tasks\n- [vulkano](https://github.com/vulkano-rs/vulkano) : Safe and rich Rust wrapper around the Vulkan API\n- [imgui-rs](https://github.com/Gekkio/imgui-rs) : Rust bindings for dear imgui\n- [chip8](https://github.com/DrLynix/chip8) : Yet another chip8 interpreter in rust\n- [gfx](https://github.com/gfx-rs/gfx) : A low-overhead Vulkan-like GPU API for Rust.\n- [rustcxx](https://github.com/google/rustcxx) : rustcxx: Using C++ from Rust made easy\n- [ngx-rust](https://github.com/nginxinc/ngx-rust) : Rust binding for NGINX\n- [diesel](https://github.com/diesel-rs/diesel) : A safe, extensible ORM and Query Builder for Rust\n- [dynstack](https://github.com/archshift/dynstack) : A stack for rust trait objects that minimizes allocations\n- [cc-rs](https://github.com/alexcrichton/cc-rs) : Rust library for build scripts to compile C/C++ code into a Rust library\n- [rust](https://github.com/rust-lang/rust) : Empowering everyone to build reliable and efficient software.\n- [unosolo](https://github.com/SuperV1234/unosolo) : Work-in-progress Rust application that converts C++ header-only libraries to single self-contained headers.\n- [r4cppp](https://github.com/nrc/r4cppp) : Rust for C++ programmers\n- [game-of-life](https://github.com/DrLynix/game-of-life) : \n- [rendy](https://github.com/amethyst/rendy) : State of the art \"build your own engine\" kit powered by gfx-hal\n- [u2N](https://github.com/archshift/u2N) : Fixed-size, zero-allocation arithmetic suitable for embedded systems\n- [glam-rs](https://github.com/bitshifter/glam-rs) : A simple and fast linear algebra library for games and graphics\n- [wgpu](https://github.com/gfx-rs/wgpu) : Native WebGPU implementation based on gfx-hal\n- [rs-tiled](https://github.com/mattyhall/rs-tiled) : Reads files from the Tiled editor into Rust\n- [awesome-rust](https://github.com/rust-unofficial/awesome-rust) : A curated list of Rust code and resources.\n- [Nazarust](https://github.com/NazaraEngine/Nazarust) : An experiment to rewrite NazaraEngine using Rust\n- [ggez](https://github.com/ggez/ggez) : Rust library to create a Good Game Easily\n- [render-rs](https://github.com/gwihlidal/render-rs) : Collection of rust crates providing rendering abstractions.\n\n## Tools\n[Back to top](#Index)\n- [build2](https://github.com/build2/build2) : build2 build system\n- [rcrl](https://github.com/onqtam/rcrl) : Read-Compile-Run-Loop: tiny and powerful interactive C++ compiler (REPL)\n- [LibreSprite](https://github.com/LibreSprite/LibreSprite) : Animated sprite editor & pixel art tool -- Fork of the last GPLv2 commit of Aseprite\n- [smldbg](https://github.com/progbits/smldbg) : A small, dependency free debugger.\n- [training-kit](https://github.com/github/training-kit) : Open source cheat sheets for Git and GitHub\n- [SZZUnleashed](https://github.com/wogscpar/SZZUnleashed) : An implementation of the SZZ algorithm, i.e., an approach to identify bug-introducing commits.\n- [ClangBuildAnalyzer](https://github.com/aras-p/ClangBuildAnalyzer) : Clang build analysis tool using -ftime-trace\n- [tev](https://github.com/Tom94/tev) : High dynamic range (HDR) image comparison tool for graphics people with an emphasis on OpenEXR images.\n- [exception_reporter](https://github.com/nlohmann/exception_reporter) : A tool to collect the exceptions that can reach a C++ function\n- [ScreenToGif](https://github.com/NickeManarin/ScreenToGif) : ScreenToGif allows you to record a selected area of your screen, edit and save it as a gif or video.\n- [dxil-signing](https://github.com/gwihlidal/dxil-signing) : Utility to sign DXIL code after compilation\n- [nvtop](https://github.com/Syllo/nvtop) : NVIDIA GPUs htop like monitoring tool\n- [3dtiles](https://github.com/fanvanzh/3dtiles) : The fastest tools for 3dtiles convert in the world!\n- [greenshot](https://github.com/greenshot/greenshot) : Greenshot for Windows - Report bugs & features go here: https://greenshot.atlassian.net or look for information on:\n- [Dependencies](https://github.com/lucasg/Dependencies) : A rewrite of the old legacy software \"depends.exe\" in C# for Windows devs to troubleshoot dll load dependencies issues.\n- [butler](https://github.com/itchio/butler) : Command-line itch.io helper\n- [gh-card](https://github.com/nwtgck/gh-card) : \n- [FNode](https://github.com/victorfisac/FNode) : Tool based in nodes to build GLSL shaders without any programming knowledge written in C using OpenGL and GLFW.\n- [NormalmapGenerator](https://github.com/Theverat/NormalmapGenerator) : A simple program that converts images into normal maps\n- [Laigter](https://github.com/azagaya/laigter) : A simple tool for automatic generation of normal/specular/parallax/occlussion maps for dynamic lights in games. Mainly focused for 2D sprites.\n- [cppclean](https://github.com/myint/cppclean) : Finds problems in C++ source that slow development of large code bases\n- [veles](https://github.com/codilime/veles) : Binary data analysis and visualization tool\n- [sanitizers](https://github.com/google/sanitizers) : AddressSanitizer, ThreadSanitizer, MemorySanitizer\n- [sprite-sheet-packer](https://github.com/amakaseev/sprite-sheet-packer) : Sprite sheet packer\n- [CryLivePlusPlus](https://github.com/sunnlok/CryLivePlusPlus) : \n- [HlslTools](https://github.com/tgjones/HlslTools) : A Visual Studio extension that provides enhanced support for editing High Level Shading Language (HLSL) files\n- [include-what-you-use](https://github.com/include-what-you-use/include-what-you-use) : A tool for use with clang to analyze #includes in C and C++ source files\n- [dust3d](https://github.com/huxingyi/dust3d) : Dust3D is a cross-platform open-source 3D modeling software. Auto UV unwrapping, auto rigging with PBR Material support, pose and motion authoring all in one.\n- [shaderc](https://github.com/google/shaderc) : A collection of tools, libraries, and tests for Vulkan shader compilation.\n- [SPIRV-Tools](https://github.com/KhronosGroup/SPIRV-Tools) : \n- [opentoonz](https://github.com/opentoonz/opentoonz) : OpenToonz - An open-source full-featured 2D animation creation software\n- [waifu2x-ncnn-vulkan](https://github.com/nihui/waifu2x-ncnn-vulkan) : waifu2x converter ncnn version, runs fast on intel / amd / nvidia GPU with vulkan\n- [IntelShaderAnalyzer](https://github.com/GameTechDev/IntelShaderAnalyzer) : Command line tool for offline shader ISA inspection.\n- [polyedit](https://github.com/vkvd/polyedit) : 2d lowpoly editor based on http://raincomplex.net/lowpolyeditor/\n- [PlotJuggler](https://github.com/facontidavide/PlotJuggler) : The timeseries visualization tool that you deserve\n- [incbin](https://github.com/graphitemaster/incbin) : Include binary files in C/C++\n- [ToolsOfTheTrade](https://github.com/cjbarber/ToolsOfTheTrade) : Tools of The Trade, from Hacker News.\n- [hexembed](https://github.com/codeplea/hexembed) : A small utility to embed files into C or C++ programs.\n- [NMS-Tools](https://github.com/HugoPeters/NMS-Tools) : Set of tools for No Man's Sky\n- [fontforge](https://github.com/fontforge/fontforge) : Free (libre) font editor for Windows, Mac OS X and GNU+Linux\n- [TextureGenerator-Online](https://github.com/cpetry/TextureGenerator-Online) : Procedural texture creator Online\n- [NormalMap-Online](https://github.com/cpetry/NormalMap-Online) : NormalMap Generator Online\n- [travis_cpp_tutorial](https://github.com/richelbilderbeek/travis_cpp_tutorial) : Tutorial how to use Travis CI with C++\n- [android-ndk](https://github.com/googlesamples/android-ndk) : Android NDK samples with Android Studio\n- [fips](https://github.com/floooh/fips) : High-level build system for distributed, multi-platform C/C++ projects.\n- [reopt](https://github.com/GaloisInc/reopt) : A tool for analyzing x86-64 binaries.\n- [cppcheck](https://github.com/danmar/cppcheck) : static analysis of C/C++ code\n- [cpp-forensics](https://github.com/IMQS/cpp-forensics) : C++ crash dump server\n- [cpack](https://github.com/OnyxFlames/cpack) : File-to-sourcecode packer.\n- [templight](https://github.com/mikael-s-persson/templight) : Templight is a Clang-based tool to profile the time and memory consumption of template instantiations and to perform interactive debugging sessions to gain introspection into the template instantia…\n- [stack-on-a-budget](https://github.com/255kb/stack-on-a-budget) : A collection of services with great free tiers for developers on a budget\n- [mkvfx](https://github.com/meshula/mkvfx) : Build scripts for libraries commonly used in games, film and vfx\n- [masterplan](https://github.com/SolarLune/masterplan) : MasterPlan is a project management software / visual idea board software. It attempts to be easy to use, lightweight, and fun.\n- [public-apis](https://github.com/public-apis/public-apis) : A collective list of free APIs for use in software and web development.\n- [docker](https://github.com/foonathan/docker) : Lightweight containers for building C++\n- [grafana](https://github.com/grafana/grafana) : The tool for beautiful monitoring and metric analytics & dashboards for Graphite, InfluxDB & Prometheus & More\n- [opengametools](https://github.com/jpaver/opengametools) : A set of open c++ game development tools that are lightweight, easy-to-integrate and free to use. Currently hosting a magicavoxel .vox full scene loader.\n- [cpp-dependencies](https://github.com/tomtom-international/cpp-dependencies) : Tool to check C++ #include dependencies (dependency graphs created in .dot format)\n- [pubgrub](https://github.com/vector-of-bool/pubgrub) : Pubgrub dependency resolution algorithm for C++\n- [pacm](https://github.com/sourcey/pacm) : C++ front-end package manager for embedding and redistributing with native applications\n- [Arbiter](https://github.com/ArbiterLib/Arbiter) : Dependency manager library that supports decentralization\n- [oss-fuzz](https://github.com/google/oss-fuzz) : OSS-Fuzz - continuous fuzzing of open source software.\n- Visual Studio Extensions\n  - [SPIRV-VSExtension](https://github.com/SaschaWillems/SPIRV-VSExtension) : SPIR-V extension for Visual Studio\n  - [asm-dude](https://github.com/HJLebbink/asm-dude) : Visual Studio extension for assembly syntax highlighting and code completion in assembly files and the disassembly window\n  - [fastbuild](https://github.com/fastbuild/fastbuild) : High performance build system for Windows, OSX and Linux. Supporting caching, network distribution and more.\n  - [LivePP](https://github.com/kitelightning/LivePP) : A UE4 plugin wrapper for Molecular Matter's Live++ Hot-Reloading Library\n  - [ue4-vs-extensions](https://github.com/hackalyze/ue4-vs-extensions) : Useful UE4 Visual Studio extensions.\n  - [GLSL](https://github.com/danielscherzer/GLSL) : VSIX Project that provides GLSL language integration.\n  - [UnityMixedCallstack](https://github.com/Unity-Technologies/UnityMixedCallstack) : Visual Studio native debugger extension to help debug native applications using Mono.\n  - [vs-chromium](https://github.com/chromium/vs-chromium) : A Visual Studio extension containing a collection of tools to help contributing code to the Chromium project.\n  - [VSDebugPro](https://github.com/ovidiuvio/VSDebugPro) : Enhanced debugging for C/C++. Dump blocks of data, load data in memory and more.\n  - [CompileTimer](https://github.com/janwilmans/CompileTimer) : Set of tests to benchmark the compile time of c++ constructs\n  - [TestAdapter_Catch2](https://github.com/JohnnyHendriks/TestAdapter_Catch2) : Visual Studio Test Adapter for Catch2\n  - [vscode-shader](https://github.com/stef-levesque/vscode-shader) : Shader languages support for VS Code\n  - [VS-ColorThemes](https://github.com/microsoft/VS-ColorThemes) : Visual Studio Extension that installs additional color themes\n- Git\n  - [git-flight-rules](https://github.com/k88hudson/git-flight-rules) : Flight rules for git\n  - [gitsuggest](https://github.com/csurfer/gitsuggest) : A tool to suggest github repositories based on the repositories you have shown interest in.\n- Projects\n  - [bscxx](https://github.com/Elkantor/bscxx) : BSCXX (for BootStrap CXX project) is a C++ package manager.\n  - [Sharpmake](https://github.com/ubisoftinc/Sharpmake) : Sharpmake is an open-source C#-based solution for generating project definition files, such as Visual Studio projects and solutions, GNU makefiles, Xcode projects, etc.\n  - [poac](https://github.com/poacpm/poac) : Package manager for C++\n  - [ninja](https://github.com/ninja-build/ninja) : a small build system with a focus on speed\n  - [conan-google-benchmark](https://github.com/mpusz/conan-google-benchmark) : Conan recipe for Google Benchmark library\n  - [conan-irrlicht](https://github.com/mpusz/conan-irrlicht) : Conan recipe for Irrlicht library\n  - [cmake-scripts](https://github.com/mpusz/cmake-scripts) : CMake scripts shared among other repositories\n  - [conan](https://github.com/conan-io/conan) : Conan - The open-source C/C++ package manager\n  - [premake-cmake](https://github.com/TurkeyMan/premake-cmake) : cmake output for premake5\n  - [vcpkg](https://github.com/microsoft/vcpkg) : C++ Library Manager for Windows, Linux, and MacOS\n  - [ucm](https://github.com/onqtam/ucm) : Useful cmake macros that help with: compiler/linker flags, collecting sources, PCHs, Unity builds and other stuff.\n  - [cotire](https://github.com/sakra/cotire) : CMake module to speed up builds.\n  - [cmakepp](https://github.com/toeb/cmakepp) : An Enhancement Suite for the CMake Build System\n  - [cmake_format](https://github.com/cheshirekow/cmake_format) : Source code formatter for cmake listfiles.\n  - [learning-cmake](https://github.com/Akagi201/learning-cmake) : learning cmake\n  - [cpp-project](https://github.com/bsamseth/cpp-project) : Boiler plate template for C++ projects, with CMake, Doctest, Travis CI, Appveyor, Github Actions and coverage reports.\n  - [conan-center-index](https://github.com/conan-io/conan-center-index) : Recipes for the ConanCenter repository\n  - [ios-cmake](https://github.com/leetal/ios-cmake) : A CMake toolchain file for iOS, watchOS and tvOS C/C++/Obj-C++ development\n  - [Box2D-cmake](https://github.com/tobanteGaming/Box2D-cmake) : CMake wrapper for Box2D, since it uses premake5\n  - [cpp-oss-template](https://github.com/utilForever/cpp-oss-template) : C++ Open Source Software Template\n  - [cmake](https://github.com/CLIUtils/cmake) : A set of cmake modules to assist in building code\n  - [travis-gtest-cmake-example](https://github.com/gujans/travis-gtest-cmake-example) : Example of a gtest and cmake set up for C++ on Travis-CI.\n  - [gtest-cmake-example](https://github.com/dmonopoly/gtest-cmake-example) : Helpful example of a gtest and cmake set up for C++.\n  - [travis_gcc_cpp17](https://github.com/richelbilderbeek/travis_gcc_cpp17) : Minimal C++17 project using the GCC compiler and is checked by Travis CI\n\n## Awesome\n[Back to top](#Index)\n- [awesome-cmake](https://github.com/onqtam/awesome-cmake) : A curated list of awesome CMake resources, scripts, modules, examples and others.\n- [bookmarks](https://github.com/CodepediaOrg/bookmarks) : Collection of public dev bookmarks, shared with\n- [cpp_youtube_channels](https://github.com/shafik/cpp_youtube_channels) : Listing of C++ Youtube channels for conferences and user groups\n- [programming-talks](https://github.com/hellerve/programming-talks) : Awesome & interesting talks about programming\n- [awesome-modern-cpp](https://github.com/rigtorp/awesome-modern-cpp) : A collection of resources on modern C++\n- [Awesome-Game-Networking](https://github.com/MFatihMAR/Awesome-Game-Networking) : A Curated List of Game Network Programming Resources\n- [awesome-behavior-trees](https://github.com/BehaviorTree/awesome-behavior-trees) : A list of awesome Behavior Trees resources\n- [GameDevelopmentLinks](https://github.com/UnterrainerInformatik/GameDevelopmentLinks) : This is a collection of useful game-development links including, but not restricted to, development with MonoGame.\n- [awesome-entity-component-system](https://github.com/jslee02/awesome-entity-component-system) : A curated list of Entity-Component-System (ECS) libraries and resources\n- [awesome-casestudy](https://github.com/luruke/awesome-casestudy) : Curated list of technical case studies on WebGL and creative development\n- [awesome-cg-vfx-pipeline](https://github.com/cgwire/awesome-cg-vfx-pipeline) : List of open-source technologies that help in the process of building a pipeline for CG and VFX productions\n- [awesome-glsl](https://github.com/radixzz/awesome-glsl) : Compilation of the best resources to learn programming OpenGL Shaders\n- [cpp_blogs](https://github.com/shafik/cpp_blogs) : C++ Blogs (plus other stuff we should care about like undefined behavior)\n- [awesome-rtx](https://github.com/vinjn/awesome-rtx) : Curated collection of projects leveraging NVIDIA RTX technology (OptiX, DXR, VKR)\n- [zalo.github.io](https://github.com/zalo/zalo.github.io) : A home for knowledge that is hard to find elsewhere\n- [awesome-gamedev](https://github.com/mbrukman/awesome-gamedev) : A list of Game Development resources to make magic happen.\n- [gamedev-resources](https://github.com/Ibuprogames/gamedev-resources) : An updated collection of useful resources to resources to design, develop and market games.\n- [build-your-own-x](https://github.com/danistefanovic/build-your-own-x) : Build your own (insert technology here)\n- [awesome-ray-tracing](https://github.com/dannyfritz/awesome-ray-tracing) : Curated list of ray tracing resources\n- [awesome-vulkan](https://github.com/vinjn/awesome-vulkan) : Awesome Vulkan ecosystem\n- [awesome-opengl](https://github.com/eug/awesome-opengl) : A curated list of awesome OpenGL libraries, debuggers and resources.\n- [hall-of-fame](https://github.com/sourcerer-io/hall-of-fame) : Show some love to your contributors! A widget for your repo README. Visual and clean. Refreshes every hour.\n- [awesome-collision-detection](https://github.com/jslee02/awesome-collision-detection) : A curated list of awesome collision detection libraries and resources\n- [AwesomePerfCpp](https://github.com/fenbf/AwesomePerfCpp) : A curated list of awesome C/C++ performance optimization resources: talks, articles, books, libraries, tools, sites, blogs. Inspired by awesome.\n- [awesome-d3d12](https://github.com/vinjn/awesome-d3d12) : Awesome D3D12 ecosystem\n- [awesome-cpp](https://github.com/fffaraz/awesome-cpp) : A curated list of awesome C++ (or C) frameworks, libraries, resources, and shiny things. Inspired by awesome-... stuff.\n- [awesome-bits](https://github.com/keon/awesome-bits) : A curated list of awesome bitwise operations and tricks\n- [cpplinks](https://github.com/MattPD/cpplinks) : A categorized list of C++ resources.\n- [awesome-gametalks](https://github.com/ellisonleao/awesome-gametalks) : A curated list of gaming talks (development, design, etc)\n- [awesome-design](https://github.com/Calinou/awesome-design) : Best UI/UX Design Sources For Developer & Designer Ever :)\n- [awesome-gamedev](https://github.com/Calinou/awesome-gamedev) : A collection of free software and free culture resources for making amazing games. (mirror)\n- [magictools](https://github.com/ellisonleao/magictools) : A list of Game Development resources to make magic happen.\n- [awesome](https://github.com/sindresorhus/awesome) : Awesome lists about all kinds of interesting topics\n- [awesome-c](https://github.com/uhub/awesome-c) : A curated list of awesome C frameworks, libraries and software.\n- [awesome-mental-health](https://github.com/dreamingechoes/awesome-mental-health) : A curated list of awesome articles, websites and resources about mental health in the software industry.\n- [modern-cpp-tutorial](https://github.com/utilForever/modern-cpp-tutorial) : A curated list of Modern C++ articles, examples, tutorials, frameworks, libraries, and shiny things.\n- [awesome-wgpu](https://github.com/rofrol/awesome-wgpu) : A curated list of wgpu code and resources.\n- [awesome-gametalks](https://github.com/hzoo/awesome-gametalks) : A curated list of gaming talks (development, design, etc)\n- [data-oriented-design](https://github.com/dbartolini/data-oriented-design) : A curated list of data oriented design resources.\n- [awesome-actions](https://github.com/sdras/awesome-actions) : A curated list of awesome actions to use on GitHub\n- [awesome-raylib](https://github.com/Rabios/awesome-raylib) : A curated list of awesome stuff for raylib; the simple and easy-to-use library to enjoy videogames programming.\n\n## GameProgrammerPath\n[Back to top](#Index)\n- [uLicense](https://github.com/r-lyeh/uLicense) : Tiny and free software license in 299 bytes.\n- [game-programmer](https://github.com/miloyip/game-programmer) : A Study Path for Game Programmer\n- [every-programmer-should-know](https://github.com/mtdvio/every-programmer-should-know) : A collection of (mostly) technical things every software developer should know\n- [coding-interview-university](https://github.com/jwasham/coding-interview-university) : A complete computer science study plan to become a software engineer.\n- [interviews](https://github.com/kdn251/interviews) : Everything you need to know to get the job.\n- [interview](https://github.com/andreis/interview) : Everything you need to prepare for your technical interview\n- [reverse-interview](https://github.com/viraptor/reverse-interview) : Questions to ask the company during your interview\n- [SoftwareArchitect](https://github.com/justinamiller/SoftwareArchitect) : Path to a Software Architect\n\n## GameDesign\n[Back to top](#Index)\n- [gamebook](https://github.com/r-lyeh-archived/gamebook) : An unified game design document convention (CC0, Markdown)\n- [trust](https://github.com/ncase/trust) : An interactive guide to the game theory of cooperation\n\n## Website\n[Back to top](#Index)\n- [minimal-mistakes](https://github.com/mmistakes/minimal-mistakes) : Jekyll theme for building a personal site, blog, project documentation, or portfolio.\n- [water.css](https://github.com/kognise/water.css) : A just-add-css collection of styles to make simple websites just a little nicer\n- [coder](https://github.com/googlecreativelab/coder) : A simple way to make web stuff on Raspberry Pi\n- [Freelander](https://github.com/umpirsky/Freelander) : Simple landing page that just works.\n- [animate.css](https://github.com/daneden/animate.css) : A cross-browser library of CSS animations. As easy to use as an easy thing. http://daneden.github.io/animate.css\n- [electron](https://github.com/electron/electron) : \n\n\n<!-- END -->\n"
        }
      ]
    }
  ]
}