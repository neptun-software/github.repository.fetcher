{
  "metadata": {
    "timestamp": 1736709644853,
    "page": 23,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjI2",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nsriram/lambda-the-terraform-way",
      "stars": 1257,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3134765625,
          "content": "*.md linguist-detectable=true\n*.md linguist-documentation=false\nsamples/**/*.js linguist-detectable=true\nsamples/**/*.js linguist-documentation=false\nsamples/**/*.json linguist-detectable=true\nsamples/**/*.json linguist-documentation=false\nsamples/**/*.tf linguist-detectable=true\nsamples/**/*.sh linguist-detectable=true"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.173828125,
          "content": ".DS_Store\n.idea\n.terraform\nterraform.tfstate\nterraform.tfstate.backup\n.terraform.lock.hcl\nnode_modules\npackage-lock.json\noutputfile.txt\nhelloworld.txt\nhelloworld.txt-metadata.txt"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.439453125,
          "content": "# Contributing to 'Lambda the Terraform Way'\nAlways looking for suggestions, improvements to improve code base and to add new features.\n\n### Tools required\n- Your favorite text editor\n- AWS CLI, Terraform, AWS SDK, NodeJS runtime, KeybaseApp\n\n### Steps/Suggestions for contributing\n1. Clone the repo\n2. Make your edits, following the same format as other sections\n3. Provide (tested) samples if required\n4. Make your commit messages in present tense\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "MIT License\n\nCopyright (c) 2020 Sriram Narasimhan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 2.3232421875,
          "content": "# AWS Lambda the Terraform Way\n\nThe objective of this tutorial is to understand AWS Lambda in-depth, beyond executing functions, using Terraform. \nThis tutorial walks through setting up Terraform, dependencies for AWS Lambda, getting your first Lambda function running, \nmany of its important features & finally integrating with other AWS services. \n\n### Terraform\n[Terraform](https://www.terraform.io/) will be the primary medium of demonstrating all these examples. \nTerraform is an infrastructure as code software that helps in managing resources in cloud, by various providers like \nAWS, GCP, Azure etc., Terraform enables creation of infrastructure by writing code in a declarative form.\n\n### Target Audience\nTarget audience for this tutorial series are developers with basic knowledge of Terraform. \nA little background on understanding of serverless technologies, infrastructure as code will help. \n> Note : The tutorial will not discuss examples using the AWS website UI (or) with AWS SDK.     \n\n## Tutorials\n\n1. [Serverless Introduction](docs/01-serverless-introduction.md)\n2. [Prerequisites and Setup](docs/02-terraform-and-aws-cli-installation.md)\n3. [Terraform Overview](docs/03-terraform-overview.md)\n4. [IAM Account For Tutorial](docs/04-iam-account-setup.md)\n5. [Hello World - Your First Lambda](docs/05-hello-world-your-first-lambda.md)\n6. [Packaging With Dependencies](docs/06-packaging-lambda-with-dependencies.md)\n7. [Lambda Layers](docs/07-lambda-layers.md)\n8. [Integrate with S3](docs/08-integrate-with-s3.md)\n9. [Integrate with Kinesis](docs/09-integrate-with-kinesis.md)\n10. [Integrate with DynamoDB](docs/10-integrate-with-dynamodb.md)\n11. [Integrate with SQS](docs/11-integrate-with-sqs.md)\n12. [Integrate with APIGateway](docs/12-integrate-with-api-gateway.md)\n13. [Tear down](docs/13-teardown.md)\n\n**Let's Get Started**: [Serverless Introduction](docs/01-serverless-introduction.md)\n\n## References (external)\n- [Terraform](https://www.terraform.io/)\n- [AWS Lambda](https://aws.amazon.com/lambda/)\n- [Google Cloud Functions](https://cloud.google.com/functions/)\n- [Azure Functions](https://azure.microsoft.com/en-gb/services/functions/)\n- [Apache OpenWhisk](https://openwhisk.apache.org/)\n- [KNative](https://cloud.google.com/knative/)\n- [Kubeless](https://kubeless.io/)\n- [Serverless](https://serverless.com/)  \n- [OpenFaaS](https://www.openfaas.com/)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}