{
  "metadata": {
    "timestamp": 1736557348610,
    "page": 305,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "square/okhttp",
      "stars": 46044,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.18,
          "content": "root = true\n\n[*]\nindent_size = 2\nij_continuation_indent_size = 2\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{kt, kts}]\nij_kotlin_imports_layout = *\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.05,
          "content": "* text=auto eol=lf\n\n*.bat text eol=crlf\n*.jar binary"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.33,
          "content": ".classpath\n.project\n.settings\n.gradle\neclipsebin\n\nbin\ngen\nbuild\nout\nlib\ngenerated\n\ntarget\npom.xml.*\nrelease.properties\nlocal.properties\n\n.idea\n*.iml\n*.ipr\n*.iws\n*.log\nclasses\n\nobj\n\n.DS_Store\n\n# Special Mkdocs files\ndocs/4.x\ndocs/changelog.md\ndocs/contributing.md\ndocs/index.md\n\n# jenv\n/.java-version\n/site/\n/docs/changelogs/changelog.md\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.18,
          "content": "[submodule \"okhttp-hpacktests/src/test/resources/hpack-test-case\"]\n\tpath = okhttp-hpacktests/src/test/resources/hpack-test-case\n\turl = https://github.com/http2jp/hpack-test-case.git\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".junit.run",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUG-BOUNTY.md",
          "type": "blob",
          "size": 0.35,
          "content": "Serious about security\n======================\n\nSquare recognizes the important contributions the security research community\ncan make. We therefore encourage reporting security issues with the code\ncontained in this repository.\n\nIf you believe you have discovered a security vulnerability, please follow the\nguidelines at https://bugcrowd.com/squareopensource\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 21.43,
          "content": "Change Log\n==========\n\n## Version 4.x\n\nSee [4.x Change log](https://square.github.io/okhttp/changelogs/changelog_4x/) for the stable version changelogs.\n\n## Version 5.0.0-alpha.14\n\n_2024-04-17_\n\n *  Breaking: Move coroutines extensions to okhttp3.coroutines. Previously this artifact shared the\n    `okhttp3` package name with our core module, which is incompatible with the Java Platform Module\n    System.\n\n *  Fix in okhttp-coroutines: Publish a valid artifact. The coroutines JAR file in 5.0.0-alpha.13\n    was corrupt and should not be used.\n\n\n## Version 5.0.0-alpha.13\n\n_2024-04-16_\n\n *  Breaking: Tag unstable new APIs as `@ExperimentalOkHttpApi`. We intend to release OkHttp 5.0\n    without stabilizing these new APIs first.\n\n    Do not use these experimental APIs in modules that may be executed using a version of OkHttp\n    different from the version that the module was compiled with. Do not use them in published\n    libraries. Do not use them if you aren't willing to track changes to them.\n\n *  Breaking: Drop support for Kotlin Multiplatform.\n\n    We planned to support multiplatform in OkHttp 5.0, but after building it, we weren't happy with\n    the implementation trade-offs. We can't use our HTTP client engine on Kotlin/JS, and we weren't\n    prepared to build a TLS API for Kotlin/Native.\n\n    We'd prefer a multiplatform HTTP client API that's backed by OkHttp on Android and JVM, and\n    other engines on other platforms. [Ktor] does this pretty well today!\n\n *  Breaking: Use `kotlin.time.Duration` in APIs like `OkHttpClient.Builder.callTimeout()`. This\n    update also drops support for the `DurationUnit` functions introduced in earlier alpha releases\n    of OkHttp 5.\n\n *  Breaking: Reorder the parameters in the Cache constructor that was introduced in 5.0.0-alpha.3.\n\n *  New: `Request.Builder.cacheUrlOverride()` customizes the cache key used for a request. This can\n    be used to make canonical URLs for the cache that omit insignificant query parameters or other\n    irrelevant data.\n\n    This feature may be used with `POST` requests to cache their responses. In such cases the\n    request body is not used to determine the cache key, so you must manually add cache-relevant\n    data to the override URL. For example, you could add a `request-body-sha256` query parameter so\n    requests with the same POST data get the same cache entry.\n\n *  New: `HttpLoggingInterceptor.redactQueryParams()` configures the query parameters to redact\n    in logs. For best security, don't put sensitive information in query parameters.\n\n *  New: `ConnectionPool.setPolicy()` configures a minimum connection pool size for a target\n    address. Use this to proactively open HTTP connections.\n\n    Connections opened to fulfill this policy are subject to the connection pool's\n    `keepAliveDuration` but do not count against the pool-wide `maxIdleConnections` limit.\n\n    This feature increases the client's traffic and the load on the server. Talking to your server's\n    operators before adopting it.\n\n *  New in okhttp-android: `HttpLoggingInterceptor.androidLogging()` and\n    `LoggingEventListener.androidLogging()` write HTTP calls or events to Logcat.\n\n *  New: `OkHttpClient.webSocketCloseTimeout` configures how long a web socket connection will wait\n    for a graceful shutdown before it performs an abrupt shutdown.\n\n *  Fix: Honor `RequestBody.isOneShot()` in `MultipartBody`\n\n *  Fix in `okhttp-coroutines`: Don't leak response bodies in `executeAsync()`. We had a bug where\n    we didn't call `Response.close()` if the coroutine was canceled before its response was\n    returned.\n\n *  Upgrade: [Okio 3.9.0][okio_3_9_0].\n\n *  Upgrade: [Kotlin 1.9.23][kotlin_1_9_23].\n\n *  Upgrade: [Unicode® IDNA 15.1.0][idna_15_1_0]\n\n\n## Version 5.0.0-alpha.12\n\n_2023-12-17_\n\nWe took too long to cut this release and there's a lot of changes in it. We've been busy.\n\nAlthough this release is labeled _alpha_, the only unstable thing in it is our new APIs. This\nrelease has many critical bug fixes and is safe to run in production. We're eager to stabilize our\nnew APIs so we can get out of alpha.\n\n *  New: Support Java 21's virtual threads (‘OpenJDK Project Loom’). We changed OkHttp's internals\n    to use `Lock` and `Condition` instead of `synchronized` for best resource utilization.\n\n *  New: Switch our Internationalized Domain Name (IDN) implementation to [UTS #46 Nontransitional\n    Processing][uts46]. With this fix, the `ß` code point no longer maps to `ss`. OkHttp now embeds\n    its own IDN mapping table in the library.\n\n *  New: Prefer the client's configured precedence order for TLS cipher suites. (OkHttp used to\n    prefer the JDK’s precedence order.) This change may cause your HTTP calls to negotiate a\n    different cipher suite than before! OkHttp's defaults cipher suites are selected for good\n    security and performance.\n\n *  New: `ConnectionListener` publishes events for connects, disconnects, and use of pooled\n    connections.\n\n *  Fix: Immediately update the connection's flow control window instead of waiting for the\n    receiving stream to process it.\n\n    This change may increase OkHttp's memory use for applications that make many concurrent HTTP\n    calls and that can receive data faster than they can process it. Previously, OkHttp limited\n    HTTP/2 to 16 MiB of unacknowledged data per connection. With this fix there is a limit of 16 MiB\n    of unacknowledged data per stream and no per-connection limit.\n\n *  Fix: Don't close a `Deflater` while we're still using it to compress a web socket message. We\n    had a severe bug where web sockets were closed on the wrong thread, which caused\n    `NullPointerException` crashes in `Deflater`.\n\n *  Fix: Don't crash after a web socket fails its connection upgrade. We incorrectly released\n    the web socket's connections back to the pool before their resources were cleaned up.\n\n *  Fix: Don't infinite loop when a received web socket message has self-terminating compressed\n    data.\n\n *  Fix: Don't fail the call when the response code is ‘HTTP 102 Processing’ or ‘HTTP 103 Early\n    Hints’.\n\n *  Fix: Honor interceptors' changes to connect and read timeouts.\n\n *  Fix: Recover gracefully when a cached response is corrupted on disk.\n\n *  Fix: Don't leak file handles when a cache disk write fails.\n\n *  Fix: Don't hang when the public suffix database cannot be loaded. We had a bug where a failure\n    reading the public suffix database would cause subsequent reads to hang when they should have\n    crashed.\n\n *  Fix: Avoid `InetAddress.getCanonicalHostName()` in MockWebServer. This avoids problems if the\n    host machine's IP address has additional DNS registrations.\n\n *  New: Create a JPMS-compatible artifact for `JavaNetCookieJar`. Previously, multiple OkHttp\n    artifacts defined classes in the `okhttp3` package, but this is forbidden by the Java module\n    system. We've fixed this with a new package (`okhttp3.java.net.cookiejar`) and a new artifact,\n    `com.squareup.okhttp3:okhttp-java-net-cookiehandler`. (The original artifact now delegates to\n    this new one.)\n\n    ```kotlin\n    implementation(\"com.squareup.okhttp3:okhttp-java-net-cookiehandler:5.0.0-alpha.12\")\n    ```\n\n *  New: `Cookie.sameSite` determines whether cookies should be sent on cross-site requests. This\n    is used by servers to defend against Cross-Site Request Forgery (CSRF) attacks.\n\n *  New: Log the total time of the HTTP call in `HttpLoggingInterceptor`.\n\n *  New: `OkHttpClient.Builder` now has APIs that use `kotlin.time.Duration`.\n\n *  New: `mockwebserver3.SocketPolicy` is now a sealed interface. This is one of several\n    backwards-incompatible API changes that may impact early adopters of this alpha API.\n\n *  New: `mockwebserver3.Stream` for duplex streams.\n\n *  New: `mockwebserver3.MockResponseBody` for streamed response bodies.\n\n *  New: `mockwebserver3.MockResponse` is now immutable, with a `Builder`.\n\n *  New: `mockwebserver3.RecordedRequest.handshakeServerNames` returns the SNI (Server Name\n    Indication) attribute from the TLS handshake.\n\n *  Upgrade: [Kotlin 1.9.21][kotlin_1_9_21].\n\n *  Upgrade: [Okio 3.7.0][okio_3_7_0].\n\n\n## Version 5.0.0-alpha.11\n\n_2022-12-24_\n\n *  New: Enable fast fallback by default. It's our implementation of Happy Eyeballs,\n    [RFC 8305][rfc_8305]. Disable with `OkHttpClient.Builder.fastFallback(false)`.\n *  Fix: Don't log response bodies for server-sent events.\n *  Fix: Skip early hints (status code 103) responses.\n *  Fix: Don't log sensitive headers in `Request.toString()`.\n *  Fix: Don't crash when the dispatcher's `ExecutorService` is shutdown with many\n    calls still enqueued.\n *  Upgrade: [GraalVM 22][graalvm_22].\n *  Upgrade: [Kotlin 1.7.10][kotlin_1_7_10].\n\n\n## Version 5.0.0-alpha.10\n\n_2022-06-26_\n\n *  Fix: Configure the multiplatform artifact (`com.squareup.okhttp3:okhttp:3.x.x`) to depend on the\n    JVM artifact (`com.squareup.okhttp3:okhttp-jvm:3.x.x`) for Maven builds. This should work-around\n    an issue where Maven doesn't interpret Gradle metadata.\n *  Fix: Make another attempt at supporting Kotlin 1.5.31 at runtime. We were crashing on\n    `DurationUnit` which was a typealias in 1.5.x.\n *  Upgrade: [Okio 3.2.0][okio_3_2_0].\n\n\n## Version 5.0.0-alpha.9\n\n_2022-06-16_\n\n *  New: Enforce label length limits in URLs. `HttpUrl` now rejects URLs whose domains aren't valid.\n    This includes overly-long domain names (longer than 253 characters), overly-long labels (more\n    than 63 characters between dots), and empty labels.\n *  New: Don't include the `Content-Length` header in multipart bodies. Servers must delimit\n    OkHttp's request bodies using the boundary only. (This change makes OkHttp more consistent with\n    browsers and other HTTP clients.)\n *  New: Drop the `tunnelProxy` argument in `MockWebServer.useHttps()`. This change only impacts\n    the OkHttp 5.x API which uses the `mockwebserver3` package.\n *  Fix: Don't call `toDuration()` which isn't available in kotlin-stdlib 1.4.\n\n\n## Version 5.0.0-alpha.8\n\n_2022-06-08_\n\n *  Fix: Change how `H2_PRIOR_KNOWLEDGE` works with HTTP proxies. Previously OkHttp assumed the\n    proxy itself was a prior knowledge HTTP/2 server. With this update, OkHttp attempts a `CONNECT`\n    tunnel just as it would with HTTPS. For prior knowledge with proxies OkHttp's is now consistent\n    with these curl arguments:\n\n    ```\n    curl \\\n      --http2-prior-knowledge \\\n      --proxy localhost:8888 \\\n      --proxytunnel \\\n      http://squareup.com/robots.txt\n    ```\n\n *  Fix: Support executing OkHttp on kotlin-stdlib versions as old as 1.4. The library still builds\n    on up-to-date Kotlin releases (1.6.21) but no longer needs that version as a runtime dependency.\n    This should make it easier to use OkHttp in Gradle plugins.\n\n *  Fix: Don't start the clock on response timeouts until the request body is fully transmitted.\n    This is only relevant for duplex request bodies, because they are written concurrently when\n    reading the response body.\n\n *  New: `MockResponse.inTunnel()` is a new `mockwebserver3` API to configure responses that are\n    served while creating a proxy tunnel. This obsoletes both the `tunnelProxy` argument on\n    `MockWebServer` and the `UPGRADE_TO_SSL_AT_END` socket option. (Only APIs on `mockwebserver3`\n    are changed; the old `okhttp3.mockwebserver` APIs remain as they always have been.\n\n\n## Version 5.0.0-alpha.7\n\n_2022-04-26_\n\n**This release introduces new Kotlin-friendly APIs.** When we migrated OkHttp from Java to Kotlin in\nOkHttp 4.0, we kept our Java-first APIs. With 5.0 we're continuing to support Java and adding\nadditional improvements for Kotlin users. In this alpha we're excited to skip-the-builder for\nrequests and remove a common source of non-null assertions (`!!`) on the response body.\n\nThe alpha releases in the 5.0.0 series have production-quality code and an unstable API. We expect\nto make changes to the APIs introduced in 5.0.0-alpha.X. These releases are safe for production use\nand 'alpha' strictly signals that we're still experimenting with some new APIs. If you're eager for\nthe fixes or features below, please upgrade.\n\n *  New: Named and default parameters constructor for `Request`:\n\n    ```\n    val request = Request(\n      url = \"https://cash.app/\".toHttpUrl(),\n    )\n    ```\n\n *  New: `Response.body` is now non-null. This was generally the case in OkHttp 4.x, but the Kotlin\n    type declaration was nullable to support rare cases like the body on `Response.cacheResponse`,\n    `Response.networkResponse`, and `Response.priorResponse`. In such cases the body is now\n    non-null, but attempts to read its content will fail.\n *  New: Kotlin-specific APIs for request tags. Kotlin language users can lookup tags with a type\n    parameter only, like `request.tag<MyTagClass>()`.\n *  New: MockWebServer has improved support for HTTP/1xx responses. Once you've migrated to the new\n    `mockwebserver3` package, there's a new field, `MockResponse.informationalResponses`.\n *  Fix: Don't interpret trailers as headers after an HTTP/100 response. This was a bug only when\n    the HTTP response body itself is empty.\n *  Fix: Don't crash when a fast fallback call has both a deferred connection and a held connection.\n *  Fix: `OkHttpClient` no longer implements `Cloneable`. It never should have; the class is\n    immutable. This is left over from OkHttp 2.x (!) when that class was mutable. We're using the\n    5.x upgrade as an opportunity to remove very obsolete APIs.\n *  Fix: Recover gracefully when Android's `NativeCrypto` crashes with `\"ssl == null\"`. This occurs\n    when OkHttp retrieves ALPN state on a closed connection.\n *  Upgrade: [Kotlin 1.6.21][kotlin_1_6_21].\n *  Upgrade: [Okio 3.1.0][okio_3_1_0].\n\n\n## Version 5.0.0-alpha.6\n\n_2022-03-14_\n\n *  Fix: Don't attempt to close pooled connections. We saw occasional fast fallback calls crash in\n    the previous alpha due to an unexpected race.\n\n\n## Version 5.0.0-alpha.5\n\n_2022-02-21_\n\n *  Fix: Don't include [Assertk][assertk] in OkHttp's production dependencies. This regression was\n    introduced in the 5.0.0-alpha.4 release.\n *  Fix: Don't ask `Dns` implementations to resolve strings that are already IP addresses.\n *  Fix: Change fast fallback to race TCP handshakes only. To avoid wasted work, OkHttp will not\n    attempt multiple TLS handshakes for the same call concurrently.\n *  Fix: Don't crash loading the public suffix database in GraalVM native images. The function\n    `HttpUrl.topPrivateDomain()` uses a resource file to identify private domains, but we didn't\n    include this file on GraalVM.\n\n\n## Version 5.0.0-alpha.4\n\n_2022-02-01_\n\n**This release introduces fast fallback to better support mixed IPv4+IPv6 networks.** Fast fallback\nis what we're calling our implementation of Happy Eyeballs, [RFC 8305][rfc_8305]. With this\nfeature OkHttp will attempt both IPv6 and IPv4 connections concurrently, keeping whichever connects\nfirst. Fast fallback gives IPv6 connections a 250 ms head start so IPv6 is preferred on networks\nwhere it's available.\n\nTo opt-in, configure your `OkHttpClient.Builder`:\n\n\n```\nOkHttpClient client = new OkHttpClient.Builder()\n    .fastFallback(true)\n    .build();\n```\n\n *  New: Change the build from Kotlin-JVM to Kotlin-multiplatform (which includes JVM). Both\n    native and JavaScript platforms are unstable preview releases and subject to\n    backwards-incompatible changes in forthcoming releases.\n *  Fix: Don't crash loading the public suffix database resource in obfuscated builds.\n *  Fix: Don't silently ignore calls to `EventSource.cancel()` made from\n    `EventSourceListener.onOpen()`.\n *  Fix: Enforce the max intermediates constraint when using pinned certificates with Conscrypt.\n    This impacts Conscrypt when the server's presented certificates form both a trusted-but-unpinned\n    chain and an untrusted-but-pinned chain.\n *  Upgrade: [Kotlin 1.6.10][kotlin_1_6_10].\n\n\n## Version 5.0.0-alpha.3\n\n_2021-11-22_\n\n *  Fix: Change `Headers.toString()` to redact authorization and cookie headers.\n *  Fix: Don't do DNS to get the hostname for `RecordedRequest.requestUrl`. This was doing a DNS\n    lookup for the local hostname, but we really just wanted the `Host` header.\n *  Fix: Don't crash with a `InaccessibleObjectException` when detecting the platform trust manager\n    on Java 17+.\n *  Fix: Don't crash if a cookie's value is a lone double quote character.\n *  Fix: Don't crash when canceling an event source created by `EventSources.processResponse()`.\n *  New: `Cache` now has a public constructor that takes an [okio.FileSystem]. This should make it\n    possible to implement decorators for cache encryption or compression.\n *  New: `Cookie.newBuilder()` to build upon an existing cookie.\n *  New: Use TLSv1.3 when running on JDK 8u261 or newer.\n *  New: `QueueDispatcher.clear()` may be used to reset a MockWebServer instance.\n *  New: `FileDescriptor.toRequestBody()` may be particularly useful for users of Android's Storage\n    Access Framework.\n *  Upgrade: [Kotlin 1.5.31][kotlin_1_5_31].\n *  Upgrade: [Okio 3.0.0][okio_3_0_0].\n\n\n## Version 5.0.0-alpha.2\n\n_2021-01-30_\n\n**In this release MockWebServer has a new Maven coordinate and package name.** A longstanding\nproblem with MockWebServer has been its API dependency on JUnit 4. We've reorganized things to\nremove that dependency while preserving backwards compatibility.\n\n| Maven Coordinate                                         | Package Name          | Description                       |\n| :------------------------------------------------------- | :-------------------- | :-------------------------------- |\n| com.squareup.okhttp3:mockwebserver3:5.0.0-alpha.2        | mockwebserver3        | Core module. No JUnit dependency! |\n| com.squareup.okhttp3:mockwebserver3-junit4:5.0.0-alpha.2 | mockwebserver3.junit4 | Optional JUnit 4 integration.     |\n| com.squareup.okhttp3:mockwebserver3-junit5:5.0.0-alpha.2 | mockwebserver3.junit5 | Optional JUnit 5 integration.     |\n| com.squareup.okhttp3:mockwebserver:5.0.0-alpha.2         | okhttp3.mockwebserver | Obsolete. Depends on JUnit 4.     |\n\nThe new APIs use `mockwebserver3` in both the Maven coordinate and package name. This new API is\n**not stable** and will likely change before the final 5.0.0 release.\n\nIf you have code that subclasses `okhttp3.mockwebserver.QueueDispatcher`, this update is not source\nor binary compatible. Migrating to the new `mockwebserver3` package will fix this problem.\n\n *  New: DNS over HTTPS is now a stable feature of OkHttp. We introduced this as an experimental\n    module in 2018. We are confident in its stable API and solid implementation.\n *  Fix: Work around a crash in Android 10 and 11 that may be triggered when two threads\n    concurrently close an SSL socket. This would have appeared in crash logs as\n    `NullPointerException: bio == null`.\n *  Fix: Use plus `+` instead of `%20` to encode space characters in `FormBody`. This was a\n    longstanding bug in OkHttp. The fix makes OkHttp consistent with major web browsers.\n *  Fix: Don't crash if Conscrypt returns a null version.\n *  Fix: Include the public suffix data as a resource in GraalVM native images.\n *  Fix: Fail fast when the cache is corrupted.\n *  Fix: Fail fast when a private key cannot be encoded.\n *  Fix: Fail fast when attempting to verify a non-ASCII hostname.\n *  Upgrade: [GraalVM 21][graalvm_21].\n *  Upgrade: [Kotlin 1.4.20][kotlin_1_4_20].\n\n\n## Version 5.0.0-alpha.1\n\n_2021-01-30_\n\n**This release adds initial support for [GraalVM][graalvm].**\n\nGraalVM is an exciting new platform and we're eager to adopt it. The startup time improvements over\nthe JVM are particularly impressive. Try it with okcurl:\n\n```\n$ ./gradlew okcurl:nativeImage\n$ ./okcurl/build/graal/okcurl https://cash.app/robots.txt\n```\n\nThis is our first release that supports GraalVM. Our code on this platform is less mature than JVM\nand Android! Please report any issues you encounter: we'll fix them urgently.\n\n *  Fix: Attempt to read the response body even if the server canceled the request. This will cause\n    some calls to return nice error codes like `HTTP/1.1 429 Too Many Requests` instead of transport\n    errors like `SocketException: Connection reset` and `StreamResetException: stream was reset:\n    CANCEL`.\n *  New: Support OSGi metadata.\n *  Upgrade: [Okio 2.9.0][okio_2_9_0].\n\n    ```kotlin\n    implementation(\"com.squareup.okio:okio:2.9.0\")\n    ```\n\nNote that this was originally released on 2020-10-06 as 4.10.0-RC1. The only change from that\nrelease is the version name.\n\n\n[Ktor]: https://ktor.io/\n[assertk]: https://github.com/willowtreeapps/assertk\n[graalvm]: https://www.graalvm.org/\n[graalvm_21]: https://www.graalvm.org/release-notes/21_0/\n[graalvm_22]: https://www.graalvm.org/release-notes/22_2/\n[idna_15_1_0]: https://www.unicode.org/reports/tr46/#Modifications\n[kotlin_1_4_20]: https://github.com/JetBrains/kotlin/releases/tag/v1.4.20\n[kotlin_1_5_31]: https://github.com/JetBrains/kotlin/releases/tag/v1.5.31\n[kotlin_1_6_10]: https://github.com/JetBrains/kotlin/releases/tag/v1.6.10\n[kotlin_1_6_21]: https://github.com/JetBrains/kotlin/releases/tag/v1.6.21\n[kotlin_1_7_10]: https://github.com/JetBrains/kotlin/releases/tag/v1.7.10\n[kotlin_1_9_21]: https://github.com/JetBrains/kotlin/releases/tag/v1.9.21\n[kotlin_1_9_23]: https://github.com/JetBrains/kotlin/releases/tag/v1.9.23\n[loom]: https://docs.oracle.com/en/java/javase/21/core/virtual-threads.html\n[okio_2_9_0]: https://square.github.io/okio/changelog/#version-290\n[okio_3_0_0]: https://square.github.io/okio/changelog/#version-300\n[okio_3_1_0]: https://square.github.io/okio/changelog/#version-310\n[okio_3_2_0]: https://square.github.io/okio/changelog/#version-320\n[okio_3_7_0]: https://square.github.io/okio/changelog/#version-370\n[okio_3_9_0]: https://square.github.io/okio/changelog/#version-390\n[rfc_8305]: https://tools.ietf.org/html/rfc8305\n[uts46]: https://www.unicode.org/reports/tr46\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2,
          "content": "Contributing\n============\n\nKeeping the project small and stable limits our ability to accept new contributors. We are not\nseeking new committers at this time, but some small contributions are welcome.\n\nIf you've found a security problem, please follow our [bug bounty][security] program.\n\nIf you've found a bug, please contribute a failing test case so we can study and fix it.\n\nIf you have a new feature idea, please build it in an external library. There are\n[many libraries][works_with_okhttp] that sit on top or hook in via existing APIs. If you build\nsomething that integrates with OkHttp, tell us so that we can link it!\n\nBefore code can be accepted all contributors must complete our\n[Individual Contributor License Agreement (CLA)][cla].\n\n\nCode Contributions\n------------------\n\nGet working code on a personal branch with tests passing before you submit a PR:\n\n```\n./gradlew clean check\n```\n\nPlease make every effort to follow existing conventions and style in order to keep the code as\nreadable as possible.\n\nContribute code changes through GitHub by forking the repository and sending a pull request. We\nsquash all pull requests on merge.\n\n\nGradle Setup\n------------\n\n```\n$ cat local.properties\nsdk.dir=PATH_TO_ANDROID_HOME/sdk\norg.gradle.caching=true\n```\n\nRunning Android Tests\n---------------------\n\n$ ANDROID_SDK_ROOT=PATH_TO_ANDROID_HOME/sdk ./gradlew :android-test:connectedCheck -PandroidBuild=true\n\nCommitter's Guides\n------------------\n\n * [Concurrency][concurrency]\n * [Debug Logging][debug_logging]\n * [Releasing][releasing]\n\n [cla]: https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1\n [concurrency]: https://square.github.io/okhttp/concurrency/\n [debug_logging]: https://square.github.io/okhttp/debug_logging/\n [releasing]: https://square.github.io/okhttp/releasing/\n [security]: https://square.github.io/okhttp/security/\n [works_with_okhttp]: https://square.github.io/okhttp/works_with_okhttp/\n [okhttp_build]: https://github.com/square/okhttp/blob/master/okhttp/build.gradle\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.09,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.52,
          "content": "OkHttp\n======\n\nSee the [project website][okhttp] for documentation and APIs.\n\nHTTP is the way modern applications network. It’s how we exchange data & media. Doing HTTP\nefficiently makes your stuff load faster and saves bandwidth.\n\nOkHttp is an HTTP client that’s efficient by default:\n\n * HTTP/2 support allows all requests to the same host to share a socket.\n * Connection pooling reduces request latency (if HTTP/2 isn’t available).\n * Transparent GZIP shrinks download sizes.\n * Response caching avoids the network completely for repeat requests.\n\nOkHttp perseveres when the network is troublesome: it will silently recover from common connection\nproblems. If your service has multiple IP addresses, OkHttp will attempt alternate addresses if the\nfirst connect fails. This is necessary for IPv4+IPv6 and services hosted in redundant data\ncenters. OkHttp supports modern TLS features (TLS 1.3, ALPN, certificate pinning). It can be\nconfigured to fall back for broad connectivity.\n\nUsing OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It\nsupports both synchronous blocking calls and async calls with callbacks.\n\nA well behaved user agent\n-------------------------\n\nOkHttp follows modern HTTP specifications such as\n\n* HTTP/1.1 - [RFC 7231](https://datatracker.ietf.org/doc/html/rfc7231)\n* HTTP/2 - [RFC 9113](https://datatracker.ietf.org/doc/html/rfc9113)\n* Websockets - [RFC 6455](https://datatracker.ietf.org/doc/html/rfc6455)\n* SSE - [Server-sent events](https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events)\n\nWhere the spec is ambiguous, OkHttp follows modern user agents such as popular Browsers or common HTTP Libraries.\n\nOkHttp is principled and avoids being overly configurable, especially when such configuration is\nto workaround a buggy server, test invalid scenarios or that contradict the relevant RFC. \nOther HTTP libraries exist that fill that gap allowing extensive customisation including potentially\ninvalid requests.\n\nExample Limitations\n\n* Does not allow GET with a body.\n* Cache is not an interface with alternative implementations.\n\nGet a URL\n---------\n\nThis program downloads a URL and prints its contents as a string. [Full source][get_example].\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nString run(String url) throws IOException {\n  Request request = new Request.Builder()\n      .url(url)\n      .build();\n\n  try (Response response = client.newCall(request).execute()) {\n    return response.body().string();\n  }\n}\n```\n\n\nPost to a Server\n----------------\n\nThis program posts data to a service. [Full source][post_example].\n\n```java\npublic static final MediaType JSON = MediaType.get(\"application/json\");\n\nOkHttpClient client = new OkHttpClient();\n\nString post(String url, String json) throws IOException {\n  RequestBody body = RequestBody.create(json, JSON);\n  Request request = new Request.Builder()\n      .url(url)\n      .post(body)\n      .build();\n  try (Response response = client.newCall(request).execute()) {\n    return response.body().string();\n  }\n}\n```\n\nFurther examples are on the [OkHttp Recipes page][recipes].\n\n\nRequirements\n------------\n\nOkHttp works on Android 5.0+ (API level 21+) and Java 8+.\n\nOkHttp depends on [Okio][okio] for high-performance I/O and the [Kotlin standard library][kotlin]. Both are small libraries with strong backward-compatibility.\n\nWe highly recommend you keep OkHttp up-to-date. As with auto-updating web browsers, staying current\nwith HTTPS clients is an important defense against potential security problems. [We\ntrack][tls_history] the dynamic TLS ecosystem and adjust OkHttp to improve connectivity and\nsecurity.\n\nOkHttp uses your platform's built-in TLS implementation. On Java platforms OkHttp also supports\n[Conscrypt][conscrypt], which integrates [BoringSSL](https://github.com/google/boringssl) with Java. OkHttp will use Conscrypt if it is\nthe first security provider:\n\n```java\nSecurity.insertProviderAt(Conscrypt.newProvider(), 1);\n```\n\nThe OkHttp `3.12.x` branch supports Android 2.3+ (API level 9+) and Java 7+. These platforms lack\nsupport for TLS 1.2 and should not be used.\n\n\nReleases\n--------\n\nOur [change log][changelog] has release history.\n\nThe latest release is available on [Maven Central](https://search.maven.org/artifact/com.squareup.okhttp3/okhttp/4.12.0/jar).\n\n```kotlin\nimplementation(\"com.squareup.okhttp3:okhttp:4.12.0\")\n```\n\nSnapshot builds are [available][snap]. [R8 and ProGuard][r8_proguard] rules are available.\n\nAlso, we have a [bill of materials (BOM)][bom] available to help you keep OkHttp artifacts up to date and be sure about version compatibility.\n\n```kotlin\n    dependencies {\n       // define a BOM and its version\n       implementation(platform(\"com.squareup.okhttp3:okhttp-bom:4.12.0\"))\n\n       // define any required OkHttp artifacts without version\n       implementation(\"com.squareup.okhttp3:okhttp\")\n       implementation(\"com.squareup.okhttp3:logging-interceptor\")\n    }\n```\n\nMockWebServer\n-------------\n\nOkHttp includes a library for testing HTTP, HTTPS, and HTTP/2 clients.\n\nThe latest release is available on [Maven Central](https://search.maven.org/artifact/com.squareup.okhttp3/mockwebserver/4.12.0/jar).\n\n```kotlin\ntestImplementation(\"com.squareup.okhttp3:mockwebserver:4.12.0\")\n```\n\nMockWebServer is used for firstly for internal testing, and for basic testing of apps using OkHttp client. \nIt is not a full featured HTTP testing library that is developed standalone. It is not being actively developed\nfor new features. As such you might find your needs outgrow MockWebServer and you may which to use a \nmore full featured testing library such as [MockServer](https://www.mock-server.com/).\n\nGraalVM Native Image\n--------------------\n\nBuilding your native images with Graal https://www.graalvm.org/ should work automatically.\nThis is not currently in a final released version, so `5.0.0-alpha.2` should be used.\nPlease report any bugs or workarounds you find.\n\nSee the okcurl module for an example build.\n\n```shell\n$ ./gradlew okcurl:nativeImage\n$ ./okcurl/build/graal/okcurl https://httpbin.org/get\n```\n\nLicense\n-------\n\n```\nCopyright 2019 Square, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n [bom]: https://docs.gradle.org/6.2/userguide/platforms.html#sub:bom_import\n [changelog]: https://square.github.io/okhttp/changelog/\n [conscrypt]: https://github.com/google/conscrypt/\n [get_example]: https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/GetExample.java\n [kotlin]: https://kotlinlang.org/\n [okhttp3_pro]: https://raw.githubusercontent.com/square/okhttp/master/okhttp/src/main/resources/META-INF/proguard/okhttp3.pro\n [okhttp_312x]: https://github.com/square/okhttp/tree/okhttp_3.12.x\n [okhttp]: https://square.github.io/okhttp/\n [okio]: https://github.com/square/okio\n [post_example]: https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/PostExample.java\n [r8_proguard]: https://square.github.io/okhttp/features/r8_proguard/\n [recipes]: https://square.github.io/okhttp/recipes/\n [snap]: https://s01.oss.sonatype.org/content/repositories/snapshots/\n [tls_history]: https://square.github.io/okhttp/tls_configuration_history/\n"
        },
        {
          "name": "android-test-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "android-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 10.82,
          "content": "@file:Suppress(\"UnstableApiUsage\")\n\nimport com.diffplug.gradle.spotless.SpotlessExtension\nimport com.vanniktech.maven.publish.MavenPublishBaseExtension\nimport com.vanniktech.maven.publish.SonatypeHost\nimport kotlinx.validation.ApiValidationExtension\nimport org.gradle.api.tasks.testing.logging.TestExceptionFormat\nimport org.jetbrains.dokka.gradle.DokkaTaskPartial\nimport org.jetbrains.kotlin.gradle.dsl.JvmTarget\nimport org.jetbrains.kotlin.gradle.dsl.kotlinExtension\nimport org.jetbrains.kotlin.gradle.targets.jvm.tasks.KotlinJvmTest\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\nimport ru.vyarus.gradle.plugin.animalsniffer.AnimalSnifferExtension\nimport java.net.URI\n\nbuildscript {\n  dependencies {\n    classpath(libs.gradlePlugin.dokka)\n    classpath(libs.gradlePlugin.kotlin)\n    classpath(libs.gradlePlugin.kotlinSerialization)\n    classpath(libs.gradlePlugin.androidJunit5)\n    classpath(libs.gradlePlugin.android)\n    classpath(libs.gradlePlugin.bnd)\n    classpath(libs.gradlePlugin.shadow)\n    classpath(libs.gradlePlugin.animalsniffer)\n    classpath(libs.gradlePlugin.errorprone)\n    classpath(libs.gradlePlugin.spotless)\n    classpath(libs.gradlePlugin.mavenPublish)\n    classpath(libs.gradlePlugin.binaryCompatibilityValidator)\n    classpath(libs.gradlePlugin.mavenSympathy)\n    classpath(libs.gradlePlugin.graalvmBuildTools)\n  }\n\n  repositories {\n    mavenCentral()\n    gradlePluginPortal()\n    google()\n  }\n}\n\napply(plugin = \"org.jetbrains.dokka\")\napply(plugin = \"com.diffplug.spotless\")\n\nconfigure<SpotlessExtension> {\n  kotlin {\n    target(\"**/*.kt\")\n    targetExclude(\"**/kotlinTemplates/**/*.kt\")\n    ktlint()\n  }\n}\n\nallprojects {\n  group = \"com.squareup.okhttp3\"\n  version = \"5.0.0-SNAPSHOT\"\n\n  repositories {\n    mavenCentral()\n    google()\n  }\n\n  tasks.register(\"downloadDependencies\") {\n    description = \"Download all dependencies to the Gradle cache\"\n    doLast {\n      for (configuration in configurations) {\n        if (configuration.isCanBeResolved) {\n          configuration.files\n        }\n      }\n    }\n  }\n\n  normalization {\n    runtimeClasspath {\n      metaInf {\n        ignoreAttribute(\"Bnd-LastModified\")\n      }\n    }\n  }\n}\n\nval platform = System.getProperty(\"okhttp.platform\", \"jdk9\")\nval testJavaVersion = System.getProperty(\"test.java.version\", \"21\").toInt()\n\n/** Configure building for Java+Kotlin projects. */\nsubprojects {\n  val project = this@subprojects\n  if (project.name == \"okhttp-bom\") return@subprojects\n\n  if (project.name == \"okhttp-android\") return@subprojects\n  if (project.name == \"android-test\") return@subprojects\n  if (project.name == \"regression-test\") return@subprojects\n  if (project.name == \"android-test-app\") return@subprojects\n  if (project.name == \"container-tests\") return@subprojects\n\n  apply(plugin = \"checkstyle\")\n  apply(plugin = \"ru.vyarus.animalsniffer\")\n\n  // The 'java' plugin has been applied, but it is not compatible with the Android plugins.\n  // These are applied inside the okhttp module for that case specifically\n  if (project.name != \"okhttp\") {\n    apply(plugin = \"biz.aQute.bnd.builder\")\n    apply(plugin = \"io.github.usefulness.maven-sympathy\")\n  }\n\n  // Skip samples parent\n  if (project.buildFile.exists() && project.name != \"okhttp\") {\n    apply(plugin = \"com.android.lint\")\n\n    dependencies {\n      \"lintChecks\"(rootProject.libs.androidx.lint.gradle)\n    }\n  }\n\n  tasks.withType<JavaCompile> {\n    options.encoding = Charsets.UTF_8.toString()\n  }\n\n  if (plugins.hasPlugin(JavaBasePlugin::class.java)) {\n    extensions.configure<JavaPluginExtension> {\n      toolchain {\n        languageVersion.set(JavaLanguageVersion.of(17))\n      }\n    }\n  }\n\n  tasks.withType<Checkstyle>().configureEach {\n    exclude(\"**/CipherSuite.java\")\n  }\n\n  val checkstyleConfig: Configuration by configurations.creating\n  dependencies {\n    checkstyleConfig(rootProject.libs.checkStyle) {\n      isTransitive = false\n    }\n  }\n\n  // Handled in :okhttp directly\n  if (project.name != \"okhttp\") {\n    configure<CheckstyleExtension> {\n      config = resources.text.fromArchiveEntry(checkstyleConfig, \"google_checks.xml\")\n      toolVersion = rootProject.libs.versions.checkStyle.get()\n      sourceSets = listOf(project.sourceSets[\"main\"])\n    }\n\n    // Animal Sniffer confirms we generally don't use APIs not on Java 8.\n    configure<AnimalSnifferExtension> {\n      annotation = \"okhttp3.internal.SuppressSignatureCheck\"\n      sourceSets = listOf(project.sourceSets[\"main\"])\n    }\n  }\n\n  dependencies {\n    // No dependency requirements for testing-support.\n    if (project.name == \"okhttp-testing-support\") return@dependencies\n\n    // okhttp configured specifically.\n    if (project.name == \"okhttp\") return@dependencies\n\n    if (project.name == \"mockwebserver3-junit5\") {\n      // JUnit 5's APIs need java.util.function.Function and java.util.Optional from API 24.\n      \"signature\"(rootProject.libs.signature.android.apilevel24) { artifact { type = \"signature\" } }\n    } else {\n      // Everything else requires Android API 21+.\n      \"signature\"(rootProject.libs.signature.android.apilevel21) { artifact { type = \"signature\" } }\n    }\n\n    // OkHttp requires Java 8+.\n    \"signature\"(rootProject.libs.codehaus.signature.java18) { artifact { type = \"signature\" } }\n  }\n\n  val javaVersionSetting =\n    if (testJavaVersion > 8 && (project.name == \"okcurl\" || project.name == \"native-image-tests\")) {\n      // Depends on native-image-tools which is 11+, but avoids on Java 8 tests\n      \"11\"\n    } else {\n      \"1.8\"\n    }\n\n  val projectJvmTarget = JvmTarget.fromTarget(javaVersionSetting)\n  val projectJavaVersion = JavaVersion.toVersion(javaVersionSetting)\n\n  tasks.withType<KotlinCompile> {\n    compilerOptions {\n      jvmTarget.set(projectJvmTarget)\n      freeCompilerArgs = listOf(\n        \"-Xjvm-default=all\",\n      )\n    }\n  }\n\n  val platform = System.getProperty(\"okhttp.platform\", \"jdk9\")\n  val testJavaVersion = System.getProperty(\"test.java.version\", \"21\").toInt()\n\n  if (project.name != \"okhttp\") {\n    val testRuntimeOnly: Configuration by configurations.getting\n    dependencies {\n      testRuntimeOnly(rootProject.libs.junit.jupiter.engine)\n      testRuntimeOnly(rootProject.libs.junit.vintage.engine)\n    }\n  }\n\n  tasks.withType<Test> {\n    useJUnitPlatform()\n    jvmArgs(\n      \"-Dokhttp.platform=$platform\",\n    )\n\n    if (platform == \"loom\") {\n      jvmArgs(\n        \"-Djdk.tracePinnedThreads=short\",\n      )\n    }\n\n    val javaToolchains = project.extensions.getByType<JavaToolchainService>()\n    javaLauncher.set(javaToolchains.launcherFor {\n      languageVersion.set(JavaLanguageVersion.of(testJavaVersion))\n    })\n\n    maxParallelForks = Runtime.getRuntime().availableProcessors() * 2\n    testLogging {\n      exceptionFormat = TestExceptionFormat.FULL\n    }\n\n    systemProperty(\"okhttp.platform\", platform)\n    systemProperty(\"junit.jupiter.extensions.autodetection.enabled\", \"true\")\n  }\n\n  // https://publicobject.com/2023/04/16/read-a-project-file-in-a-kotlin-multiplatform-test/\n  tasks.withType<Test>().configureEach {\n    environment(\"OKHTTP_ROOT\", rootDir)\n  }\n  tasks.withType<KotlinJvmTest>().configureEach {\n    environment(\"OKHTTP_ROOT\", rootDir)\n  }\n\n  if (project.name != \"okhttp\") {\n    if (platform == \"jdk8alpn\") {\n      // Add alpn-boot on Java 8 so we can use HTTP/2 without a stable API.\n      val alpnBootVersion = alpnBootVersion()\n      if (alpnBootVersion != null) {\n        val alpnBootJar = configurations.detachedConfiguration(\n          dependencies.create(\"org.mortbay.jetty.alpn:alpn-boot:$alpnBootVersion\")\n        ).singleFile\n        tasks.withType<Test> {\n          jvmArgs(\"-Xbootclasspath/p:${alpnBootJar}\")\n        }\n      }\n    } else if (platform == \"conscrypt\") {\n      dependencies {\n//      testRuntimeOnly(rootProject.libs.conscrypt.openjdk)\n      }\n    } else if (platform == \"openjsse\") {\n      dependencies {\n//      testRuntimeOnly(rootProject.libs.openjsse)\n      }\n    }\n  }\n\n  tasks.withType<JavaCompile> {\n    sourceCompatibility = projectJavaVersion.toString()\n    targetCompatibility = projectJavaVersion.toString()\n  }\n}\n\n// Opt-in to @ExperimentalOkHttpApi everywhere.\nsubprojects {\n  plugins.withId(\"org.jetbrains.kotlin.jvm\") {\n    kotlinExtension.sourceSets.configureEach {\n      languageSettings.optIn(\"okhttp3.ExperimentalOkHttpApi\")\n    }\n  }\n  plugins.withId(\"org.jetbrains.kotlin.multiplatform\") {\n    kotlinExtension.sourceSets.configureEach {\n      languageSettings.optIn(\"okhttp3.ExperimentalOkHttpApi\")\n    }\n  }\n  plugins.withId(\"org.jetbrains.kotlin.android\") {\n    kotlinExtension.sourceSets.configureEach {\n      languageSettings.optIn(\"okhttp3.ExperimentalOkHttpApi\")\n    }\n  }\n}\n\n/** Configure publishing and signing for published Java and JavaPlatform subprojects. */\nsubprojects {\n  tasks.withType<DokkaTaskPartial>().configureEach {\n    dokkaSourceSets.configureEach {\n      reportUndocumented.set(false)\n      skipDeprecated.set(true)\n      jdkVersion.set(8)\n      perPackageOption {\n        matchingRegex.set(\".*\\\\.internal.*\")\n        suppress.set(true)\n      }\n      if (project.file(\"Module.md\").exists()) {\n        includes.from(project.file(\"Module.md\"))\n      }\n      externalDocumentationLink {\n        url.set(URI.create(\"https://square.github.io/okio/3.x/okio/\").toURL())\n        packageListUrl.set(URI.create(\"https://square.github.io/okio/3.x/okio/okio/package-list\").toURL())\n      }\n    }\n  }\n\n  plugins.withId(\"com.vanniktech.maven.publish.base\") {\n    configure<MavenPublishBaseExtension> {\n      publishToMavenCentral(SonatypeHost.S01, automaticRelease = true)\n      signAllPublications()\n      pom {\n        name.set(project.name)\n        description.set(\"Square’s meticulous HTTP client for Java and Kotlin.\")\n        url.set(\"https://square.github.io/okhttp/\")\n        licenses {\n          license {\n            name.set(\"The Apache Software License, Version 2.0\")\n            url.set(\"https://www.apache.org/licenses/LICENSE-2.0.txt\")\n            distribution.set(\"repo\")\n          }\n        }\n        scm {\n          connection.set(\"scm:git:https://github.com/square/okhttp.git\")\n          developerConnection.set(\"scm:git:ssh://git@github.com/square/okhttp.git\")\n          url.set(\"https://github.com/square/okhttp\")\n        }\n        developers {\n          developer {\n            name.set(\"Square, Inc.\")\n          }\n        }\n      }\n    }\n  }\n\n  plugins.withId(\"binary-compatibility-validator\") {\n    configure<ApiValidationExtension> {\n      ignoredPackages += \"okhttp3.logging.internal\"\n      ignoredPackages += \"mockwebserver3.internal\"\n      ignoredPackages += \"okhttp3.internal\"\n      ignoredPackages += \"mockwebserver3.junit5.internal\"\n      ignoredPackages += \"okhttp3.brotli.internal\"\n      ignoredPackages += \"okhttp3.sse.internal\"\n      ignoredPackages += \"okhttp3.tls.internal\"\n    }\n  }\n}\n\nplugins.withId(\"org.jetbrains.kotlin.jvm\") {\n  val test = tasks.named(\"test\")\n  tasks.register(\"jvmTest\") {\n    description = \"Get 'gradlew jvmTest' to run the tests of JVM-only modules\"\n    dependsOn(test)\n  }\n}\n\ntasks.wrapper {\n  distributionType = Wrapper.DistributionType.ALL\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy_website.sh",
          "type": "blob",
          "size": 1.24,
          "content": "#!/bin/bash\n\n# The website is built using MkDocs with the Material theme.\n# https://squidfunk.github.io/mkdocs-material/\n# It requires python3 to run.\n\nset -ex\n\nREPO=\"git@github.com:square/okhttp.git\"\nDIR=temp-clone\n\n# Delete any existing temporary website clone\nrm -rf $DIR\n\n# Clone the current repo into temp folder\ngit clone $REPO $DIR\n# Replace `git clone` with these lines to hack on the website locally\n# cp -a . \"../okhttp-website\"\n# mv \"../okhttp-website\" \"$DIR\"\n\n# Move working directory into temp folder\ncd $DIR\n\n# Generate the API docs\n./gradlew dokkaHtmlMultiModule\n\nmv ./build/dokka/htmlMultiModule docs/5.x\n\n# Copy in special files that GitHub wants in the project root.\ncat README.md | grep -v 'project website' > docs/index.md\ncp CHANGELOG.md docs/changelogs/changelog.md\ncp CONTRIBUTING.md docs/contribute/contributing.md\n\n# Build the site and push the new files up to GitHub\npython3 -m venv venv\nsource venv/bin/activate\npip install mkdocs-material mkdocs-redirects\nmkdocs gh-deploy\n\n# Restore Javadocs from 1.x, 2.x, and 3.x.\ngit checkout gh-pages\ngit cherry-pick bb229b9dcc9a21a73edbf8d936bea88f52e0a3ff\ngit cherry-pick c695732f1d4aea103b826876c077fbfea630e244\ngit push --set-upstream origin gh-pages\n\n# Delete our temp folder\ncd ..\nrm -rf $DIR\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzing",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.23,
          "content": "org.gradle.caching=true\norg.gradle.parallel=true\n\nandroid.useAndroidX=true\nkotlin.mpp.applyDefaultHierarchyTemplate=false\n\nandroidBuild=false\ngraalBuild=false\nloomBuild=false\ncontainerTests=false\n\norg.gradle.jvmargs='-Dfile.encoding=UTF-8'\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.56,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "kotlin-js-store",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 3.86,
          "content": "site_name: OkHttp\nsite_url: https://square.github.io/okhttp/\nrepo_name: OkHttp\nrepo_url: https://github.com/square/okhttp\nsite_description: \"Square’s meticulous HTTP client for the JVM, Android, and GraalVM\"\nsite_author: Square, Inc.\nremote_branch: gh-pages\nedit_uri: \"\"\n\ncopyright: 'Copyright &copy; 2022 Block, Inc.'\n\ntheme:\n  name: 'material'\n  favicon: assets/images/icon-square.png\n  logo: assets/images/icon-square.png\n  palette:\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: teal\n      accent: blue\n      toggle:\n        icon: octicons/sun-24\n        name: \"Switch to Dark Mode\"\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: teal\n      accent: blue\n      toggle:\n        icon: octicons/moon-24\n        name: \"Switch to Light Mode\"\n  features:\n  - navigation.tabs\n\nextra_css:\n  - 'assets/css/app.css'\n\nmarkdown_extensions:\n  - smarty\n  - footnotes\n  - meta\n  - toc:\n      permalink: true\n  - attr_list\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.inlinehilite\n  - pymdownx.magiclink\n  - pymdownx.smartsymbols\n  - pymdownx.superfences\n  - pymdownx.tilde\n  - pymdownx.tabbed:\n      alternate_style: true\n  - tables\n\nplugins:\n  - search\n  - redirects:\n      redirect_maps:\n        # Redirect all feature pages to features/*\n        'caching.md': 'features/caching.md'\n        'calls.md': 'features/calls.md'\n        'connections.md': 'features/connections.md'\n        'events.md': 'features/events.md'\n        'https.md': 'features/events.md'\n        'interceptors.md': 'features/interceptors.md'\n        'r8_proguard.md': 'features/r8_proguard.md'\n        # Redirect all Security pages to security/*\n        'security.md': 'security/security.md'\n        'security_providers.md': 'security/security_providers.md'\n        'tls_configuration_history.md': 'security/tls_configuration_history.md'\n        # Redirect all changelog pages to changelog/*\n        'changelog.md': 'changelogs/changelog.md'\n        'upgrading_to_okhttp_4.md': 'changelogs/upgrading_to_okhttp_4.md'\n        'changelog_3x.md': 'changelogs/changelog_3x.md'\n        'changelog_2x.md': 'changelogs/changelog_2x.md'\n        'changelog_1x.md': 'changelogs/changelog_1x.md'\n        # Redirect all contributing pages to contribute/*\n        'contributing.md': 'contribute/contributing.md'\n        'code_of_conduct.md': 'contribute/code_of_conduct.md'\n        'concurrency.md': 'contribute/concurrency.md'\n        'debug_logging.md': 'contribute/debug_logging.md'\n\nnav:\n  - 'Overview':\n    - 'Overview': index.md\n    - 'Stack Overflow': https://stackoverflow.com/questions/tagged/okhttp?sort=active\n  - 'Features':\n    - 'Calls': features/calls.md\n    - 'Caching': features/caching.md\n    - 'Connections': features/connections.md\n    - 'Events': features/events.md\n    - 'HTTPS': features/https.md\n    - 'Interceptors': features/interceptors.md\n    - 'R8/Proguard': features/r8_proguard.md\n  - 'Recipes': recipes.md\n  - 'Security':\n    - 'Security': security/security.md\n    - 'Providers': security/security_providers.md\n    - 'Configuration History': security/tls_configuration_history.md\n  - 'Works with OkHttp': works_with_okhttp.md\n  - 'API': 5.x/okhttp/okhttp3/\n  - 'Change Logs':\n    - 'Change Log': changelogs/changelog.md\n    - '4.x Change Log': changelogs/changelog_4x.md\n    - 'Upgrading to OkHttp 4': changelogs/upgrading_to_okhttp_4.md\n    - '3.x Change Log': changelogs/changelog_3x.md\n    - '2.x Change Log': changelogs/changelog_2x.md\n    - '1.x Change Log': changelogs/changelog_1x.md\n  - 'Contributing':\n    - 'Contributing': contribute/contributing.md\n    - 'Code of Conduct': contribute/code_of_conduct.md\n    - 'Concurrency': contribute/concurrency.md\n    - 'Debug Logging': contribute/debug_logging.md\n"
        },
        {
          "name": "mockwebserver-deprecated",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockwebserver-junit4",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockwebserver-junit5",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockwebserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "native-image-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "okcurl",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-brotli",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-coroutines",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-dnsoverhttps",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-hpacktests",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-idna-mapping-table",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-java-net-cookiejar",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-logging-interceptor",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-osgi-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-sse",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-testing-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-tls",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp-urlconnection",
          "type": "tree",
          "content": null
        },
        {
          "name": "okhttp",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 1.89,
          "content": "import java.util.Properties\n\nrootProject.name = \"okhttp-parent\"\n\nplugins {\n  id(\"org.gradle.toolchains.foojay-resolver-convention\") version(\"0.9.0\")\n}\n\ninclude(\":mockwebserver\")\nproject(\":mockwebserver\").name = \"mockwebserver3\"\ninclude(\":mockwebserver-deprecated\")\nproject(\":mockwebserver-deprecated\").name = \"mockwebserver\"\ninclude(\":mockwebserver-junit4\")\nproject(\":mockwebserver-junit4\").name = \"mockwebserver3-junit4\"\ninclude(\":mockwebserver-junit5\")\nproject(\":mockwebserver-junit5\").name = \"mockwebserver3-junit5\"\n\nval androidBuild: String by settings\nval graalBuild: String by settings\nval loomBuild: String by settings\n\nif (androidBuild.toBoolean()) {\n  include(\":regression-test\")\n}\n\nif (graalBuild.toBoolean()) {\n  include(\":native-image-tests\")\n}\n\ninclude(\":okcurl\")\ninclude(\":okhttp\")\ninclude(\":okhttp-bom\")\ninclude(\":okhttp-brotli\")\ninclude(\":okhttp-coroutines\")\ninclude(\":okhttp-dnsoverhttps\")\ninclude(\":okhttp-hpacktests\")\ninclude(\":okhttp-idna-mapping-table\")\ninclude(\":okhttp-java-net-cookiejar\")\ninclude(\":okhttp-logging-interceptor\")\ninclude(\":okhttp-osgi-tests\")\ninclude(\":okhttp-sse\")\ninclude(\":okhttp-testing-support\")\ninclude(\":okhttp-tls\")\ninclude(\":okhttp-urlconnection\")\ninclude(\":samples:compare\")\ninclude(\":samples:crawler\")\ninclude(\":samples:guide\")\ninclude(\":samples:simple-client\")\ninclude(\":samples:slack\")\ninclude(\":samples:static-server\")\ninclude(\":samples:tlssurvey\")\ninclude(\":samples:unixdomainsockets\")\ninclude(\":container-tests\")\n\nproject(\":okhttp-logging-interceptor\").name = \"logging-interceptor\"\n\nval androidHome = System.getenv(\"ANDROID_HOME\")\nval localProperties = Properties().apply {\n  val file = File(\"local.properties\")\n  if (file.exists()) {\n    load(file.inputStream())\n  }\n}\nval sdkDir = localProperties.getProperty(\"sdk.dir\")\nif (androidHome != null || sdkDir != null) {\n  include(\":android-test\")\n  include(\":android-test-app\")\n}\n\nenableFeaturePreview(\"TYPESAFE_PROJECT_ACCESSORS\")\n"
        },
        {
          "name": "test_docs.sh",
          "type": "blob",
          "size": 0.7,
          "content": "#!/bin/bash\n\n# The website is built using MkDocs with the Material theme.\n# https://squidfunk.github.io/mkdocs-material/\n# It requires Python to run.\n# Install the packages with the following command:\n# pip install mkdocs mkdocs-material mkdocs-redirects\n\nset -ex\n\n# Test generating the javadoc jars\n./gradlew publishToMavenLocal -DRELEASE_SIGNING_ENABLED=false\n\n# Generate the API docs\n./gradlew dokkaHtmlMultiModule\n\nmv ./build/dokka/htmlMultiModule docs/4.x\n\n# Copy in special files that GitHub wants in the project root.\ncat README.md | grep -v 'project website' > docs/index.md\ncp CHANGELOG.md docs/changelogs/changelog.md\ncp CONTRIBUTING.md docs/contribute/contributing.md\n\n# Build the site locally\nmkdocs build\n"
        }
      ]
    }
  ]
}