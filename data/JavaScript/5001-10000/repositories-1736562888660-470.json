{
  "metadata": {
    "timestamp": 1736562888660,
    "page": 470,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "slap-editor/slap",
      "stars": 6147,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5224609375,
          "content": "# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directory\n# Deployed apps should consider commenting this line out:\n# see https://npmjs.org/doc/faq.html#Should-I-check-my-node_modules-folder-into-git\nnode_modules\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0048828125,
          "content": "misc\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.173828125,
          "content": "language: node_js\nnode_js:\n  - 6\n  - 4\nenv:\n  - CXX=g++-4.8\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - gcc-4.8\n      - g++-4.8\nsudo: false\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1552734375,
          "content": "Contributing\n============\n\nContributors can get involved by filing PRs and demonstrating sufficient interest in maintaining the code base and its corollaries.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Dan Kaplun\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.40234375,
          "content": "![Screenshot](https://raw.githubusercontent.com/slap-editor/slap/master/screenshot.png)\n\nslap :wave: [![Build Status](https://img.shields.io/travis/slap-editor/slap.svg)](https://travis-ci.org/slap-editor/slap) [![Donate](https://img.shields.io/gratipay/slap.svg)](https://gratipay.com/slap/)\n====\n\nslap is a Sublime-like terminal-based text editor that strives to make editing\nfrom the terminal easier. It has:\n\n* first-class mouse support (even over an SSH connection)\n* a Sublime-like file sidebar\n* double-click to select word, highlight other occurrences\n* configurable Sublime-like [keybindings](#default-keybindings)[*](#some-keys-dont-work) (<kbd>Ctrl+S</kbd> save, <kbd>Ctrl+Z</kbd> undo, etc.)\n* copying/pasting with OS clipboard support\n* infinite undo/redo\n* syntax highlighting for [100+ languages](https://github.com/isagalaev/highlight.js/tree/master/src/languages)\n* bracket matching\n* autoindentation\n* heavily customizeable via [plugins](#plugins)\n* ... many other features that will make you leave nano, vim, and emacs behind\n\nInstallation\n------------\n\n    $ curl -sL https://raw.githubusercontent.com/slap-editor/slap/master/install.sh | sh\n\nIf you already have [NodeJS](http://nodejs.org/download/) installed:\n\n    $ sudo npm install -g slap@latest\n\nUsage\n-----\n\n    $ slap fish.c\n    $ slap fish1.c fish2.c\n    $ slap redfish/ # open dir\n    $ slap # new file\n\n### Default keybindings\n\n* **Quit**: <kbd>Ctrl+Q</kbd>\n* **Movement**: mouse or arrow keys and <kbd>PageUp/Down</kbd>/<kbd>Home</kbd>/<kbd>End</kbd>\n  * <kbd>Shift</kbd> or click+drag to select, <kbd>Ctrl</kbd>/<kbd>Alt</kbd> to move faster\n* **Save**: <kbd>Ctrl+S</kbd>\n* **Undo**: <kbd>Ctrl+Z</kbd>, **redo**: <kbd>Ctrl+Y</kbd>\n* **List open tabs**: <kbd>Ctrl+L</kbd>\n* **Next/previous tab**: <kbd>Ctrl+Alt+PageUp/Down</kbd>\n* **Close tab**: <kbd>Ctrl+W</kbd>\n* **Find**: <kbd>Ctrl+F</kbd>\n* **Go to line**: <kbd>Ctrl+G</kbd>\n* **Go to matching bracket**: <kbd>Ctrl+]</kbd>\n* **Open**: <kbd>Ctrl+O</kbd> (or click the filebrowser)\n* **New file**: <kbd>Ctrl+N</kbd>\n\n### Configuration\n\nslap supports INI or JSON config files. You can put configuration [wherever rc can find it](https://github.com/dominictarr/rc#standards).\nA mostly empty configuration file with some useful comments is created in [`~/.slap/config`](default-config.ini)\nif an existing file isn't found.\n\nPass configuration via command line:\n\n    $ slap --header.style.bg red file.c\n\n### Plugins\n\nSlap is fully customizeable and supports plugins written in JS. You can place\nsingle JS files, or NodeJS packages, into `~/.slap/plugins/`.\n\nTo write your own plugin, a good starting point is\n[slap-clipboard-plugin](https://github.com/slap-editor/slap-clipboard-plugin).\nPlease note that plugin packages must have `\"keywords\": [\"slap-plugin\"]` in\n`package.json`.\n\nOS support\n----------\n\n### OSX\n\niTerm2 supports the mouse and most keybindings out of the box. For optimal\nTerminal.app usage, see [slap-Terminal.app-profile](https://github.com/slap-editor/slap-Terminal.app-profile).\n\n### Linux\n\nIf you are using X.Org, ensure xclip is installed for OS clipboard support.\n\n### Windows\n\nMost terminal emulators in Windows do not support mouse events, PuTTY being a\nnotable exception. In Cygwin, slap crashes on startup due to\n[joyent/node#6459](https://github.com/joyent/node/issues/6459).\n\n[Issues](../../issues/new)\n--------\n\nJoin us in [#slap on Freenode](http://webchat.freenode.net/?channels=slap) for\ntroubleshooting, theme/plugin/core development, or palm strike discussion of any\nnature.\n\n### Some keys don't work!\n\n*NOTE: if you are using Terminal.app, see [slap-Terminal.app-profile](https://github.com/slap-editor/slap-Terminal.app-profile).*\n\nUnfortunately most terminal emulators do not support certain keystrokes and as\nsuch there is no way to handle them. These include `C-backspace`, `S-home/end`,\nand `S-pageup/down`. Most of these actions have alternate keybindings, inspired\nby emacs and other editors, but if you find one that doesn't work, please\n[submit an issue](../../issues/new)!\n\n### Slow on single cores, Raspberry Pi\n\nslap is based on Github's [atom/text-buffer](https://github.com/atom/text-buffer),\nand as such should be very performant, even with very large files.\n\nTry `--editor.highlight false` or adding the following to `~/.slap/config`:\n\n    [editor]\n    highlight = false\n\nIf that doesn't improve performance, please run with `--perf.profile true` and\n[submit an issue](../../issues/new) with the newly-created `v8.log` file.\n"
        },
        {
          "name": "default-config.ini",
          "type": "blob",
          "size": 0.392578125,
          "content": "; This is your customizable slap configuration. Defaults are located here:\n; https://github.com/slap-editor/slap/blob/master/slap.ini\n; https://github.com/slap-editor/editor-widget/blob/master/editor-widget.ini\n; https://github.com/slap-editor/base-widget/blob/master/base-widget.ini\n; https://github.com/slap-editor/slap-clipboard-plugin/blob/master/slap-clipboard-plugin.ini\n\n[logger]\nlevel = \"info\"\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 1.4765625,
          "content": "#!/bin/sh\n\nset -e\n\nis_executable () {\n  command -v \"$1\" >/dev/null 2>&1\n}\n\nerrcho () {\n  >&2 echo \"$@\"\n}\n\necho \"# Installing slap...\"\n\nif ! (is_executable npm && is_executable node && is_executable git); then\n  if is_executable brew; then\n    brew install node git\n  elif is_executable port; then\n    port install nodejs git\n  elif is_executable apt-get; then\n    if ! is_executable wget; then\n      errcho \"wget not available. Please install wget first, then run this script again.\"\n      exit 1\n    fi\n    wget -qO- https://deb.nodesource.com/setup_6.x | sudo bash - # Adds NodeSource repository to dpkg\n    sudo apt-get install -y nodejs git build-essential\n  elif is_executable yum; then\n    if ! is_executable curl; then\n      errcho \"curl not available. Please install curl first, then run this script again.\"\n      exit 1\n    fi\n    curl -sL https://rpm.nodesource.com/setup_6.x | bash - # Adds NodeSource repository to yum\n    sudo yum install -y nodejs git\n  elif is_executable emerge; then\n    emerge nodejs git\n  elif is_executable pacman; then\n    pacman -S nodejs npm git\n  else\n    errcho \"Couldn't determine OS. Please install NodeJS manually, then run this script again.\"\n    errcho \"Visit https://github.com/joyent/node/wiki/installing-node.js-via-package-manager for instructions on how to install NodeJS on your OS.\"\n    exit 1\n  fi\nfi\n\nis_executable python2 && PYTHON='python2'\nmaybe_sudo=\"$([ -w \"$(npm get prefix)/lib/node_modules\" ] || echo 'sudo')\"\n$maybe_sudo npm install -g slap@latest\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.9521484375,
          "content": "{\n  \"name\": \"slap\",\n  \"version\": \"0.1.61\",\n  \"description\": \"Sublime-like terminal-based text editor\",\n  \"preferGlobal\": true,\n  \"main\": \"lib/cli.js\",\n  \"bin\": {\n    \"slap\": \"./slap.js\"\n  },\n  \"scripts\": {\n    \"start\": \"./slap.js\",\n    \"debug\": \"node-debug ./slap.js\",\n    \"test\": \"spec/index.js\",\n    \"cover\": \"istanbul cover spec/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/slap-editor/slap.git\"\n  },\n  \"bugs\": \"https://github.com/slap-editor/slap/issues\",\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"base-widget\": \"1.1.0\",\n    \"blessed\": \"0.1.81\",\n    \"bluebird\": \"3.4.1\",\n    \"editor-widget\": \"1.1.1\",\n    \"lodash\": \"4.14.1\",\n    \"mkdirp\": \"0.5.1\",\n    \"node-clap\": \"0.0.5\",\n    \"rc\": \"1.1.6\",\n    \"slap-util\": \"1.0.7\",\n    \"ttys\": \"0.0.3\",\n    \"update-notifier\": \"1.0.3\"\n  },\n  \"devDependencies\": {\n    \"get-random-port\": \"0.0.1\",\n    \"istanbul\": \"0.4.4\",\n    \"node-inspector\": \"0.12.8\",\n    \"tape\": \"4.6.3\"\n  }\n}\n"
        },
        {
          "name": "screenshot.png",
          "type": "blob",
          "size": 62.2392578125,
          "content": null
        },
        {
          "name": "slap.ini",
          "type": "blob",
          "size": 2.1484375,
          "content": "; This is the default slap configuration. You can override these settings in\n; ~/.slap/config.\n\n;;;;;;;;;;;;\n; Settings ;\n;;;;;;;;;;;;\n[header]\nmessageDuration = 5000\nblinkRate = 500\nheaderPosition = \"top\"\n\n[fileBrowser]\nwidth = 12\n\n[logger]\nlevel = \"info\"\n\n;;;;;;;;;;;;\n; Bindings ;\n;;;;;;;;;;;;\n[bindings]\nnew = \"C-n\"\nopen = \"C-o\"\nnextPane = \"C-M-pagedown\"\nprevPane = \"C-M-pageup\"\ntogglePaneList = \"C-l\"\ntoggleFileBrowser = \"f10\"\nquit = \"C-q\"\nhelp = \"f2\"\n\n[pane.bindings]\nclose = \"C-w\"\n\n[paneList.bindings]\ncancel = \"escape\"\n\n[editorPane.bindings]\nsaveAs = \"C-s\"\n; Unfortunately, \"C-S-s\" is picked up as \"C-s\", and \"C-M-s\" isn't picked up at\n; all, so a user-friendly binding for promptless save is impossible. Uncomment\n; the following lines for an alternative binding for promptless save:\n;save = \"C-s\"\n;saveAs = \"M-S-s\"\nfind = \"C-f\"\ngoLine = \"C-g\"\n\n[form.bindings]\ncancel = \"escape\"\n\n[form.baseFind.bindings]\nnext[] = \"enter\"\nnext[] = \"down\"\nprev[] = \"up\"\n; These don't work in most terminal emulators\nprev[] = \"S-enter\"\nprev[] = \"M-enter\"\nprev[] = \"C-enter\"\n\n[dialog.bindings]\nhide = \"escape\"\n\n;;;;;;;;;;\n; Styles ;\n;;;;;;;;;;\n\n; Available styles:\n; bold, underline, blink, inverse, invisible, (light)black, (light)red,\n; (light)green, (light)yellow, (light)blue, (light)magenta, (light)cyan,\n; (light)white\n\n[header.style]\nbg = \"blue\"\ninfo = \"{blue-bg}{white-fg}\"\nsuccess = \"{green-bg}{white-fg}\"\nwarning = \"{yellow-bg}{black-fg}\"\nerror = \"{red-bg}{white-fg}\"\nblinkStyle = \"{inverse}\"\noverwrite = \"{red-bg}{white-fg}\"\n\n[header.messageContent.style]\nblink = true\n\n[form.style]\nbg = \"lightblue\"\nbold = true\n\n[fileBrowser]\nselectedBg = \"cyan\"\n\n[pane.style]\nchanged = \"{yellow-fg}{bold}\"\n\n[paneList.style]\nbg = \"blue\"\npaneList = \"{light-blue-bg}\"\n\n[paneList.list]\nselectedBg = \"cyan\"\n\n[button.style]\nbg = \"white\"\nfg = \"black\"\nbold = true\n\n[button.style.hover]\nbg = \"lightblue\"\nfg = \"white\"\n\n[button.success.style.hover]\nbg = \"green\"\n\n[button.warning.style.hover]\nbg = \"yellow\"\n\n[button.danger.style.hover]\nbg = \"red\"\n\n;;;;;;;;;;;;;;;;;;;;;;\n; Performance tweaks ;\n;;;;;;;;;;;;;;;;;;;;;;\n[perf]\nprofile = false\n\n[form.find.perf]\nfindThrottle = 150\n\n[screenOpts]\nsmartCSR = true\nfullUnicode = false\n"
        },
        {
          "name": "slap.js",
          "type": "blob",
          "size": 0.0673828125,
          "content": "#!/usr/bin/env node\n\nmodule.exports = require('./lib/cli')().done();\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}