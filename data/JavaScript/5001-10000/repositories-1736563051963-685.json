{
  "metadata": {
    "timestamp": 1736563051963,
    "page": 685,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openchatai/OpenChat",
      "stars": 5216,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 2.021484375,
          "content": "{\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": false,\n  \"commitType\": \"docs\",\n  \"commitConvention\": \"angular\",\n  \"contributors\": [\n    {\n      \"login\": \"eltociear\",\n      \"name\": \"Ikko Eltociear Ashimine\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/22633385?v=4\",\n      \"profile\": \"https://github.com/eltociear\",\n      \"contributions\": [\n        \"ideas\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"jsindy\",\n      \"name\": \"Joshua Sindy\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4966007?v=4\",\n      \"profile\": \"https://github.com/jsindy\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"erjanmx\",\n      \"name\": \"Erjan Kalybek\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4899432?v=4\",\n      \"profile\": \"https://github.com/erjanmx\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"Woahai321\",\n      \"name\": \"WoahAI\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/115117306?v=4\",\n      \"profile\": \"https://woahai.com/\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"TommyZihao\",\n      \"name\": \"Tommy in Tongji\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/36354458?v=4\",\n      \"profile\": \"https://space.bilibili.com/1900783\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"codebanesr\",\n      \"name\": \"codebane\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/17947802?v=4\",\n      \"profile\": \"https://resume.applesauce.co.in\",\n      \"contributions\": [\n        \"code\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"lvalics\",\n      \"name\": \"lvalics\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/27447535?v=4\",\n      \"profile\": \"https://gloobus.it\",\n      \"contributions\": [\n        \"code\",\n        \"doc\"\n      ]\n    }\n  ],\n  \"contributorsPerLine\": 7,\n  \"skipCi\": true,\n  \"repoType\": \"github\",\n  \"repoHost\": \"https://github.com\",\n  \"projectName\": \"OpenChat\",\n  \"projectOwner\": \"openchatai\"\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2900390625,
          "content": ".DS_Store\n.aider.*\n.aider.conf.yml\ndj_backend_server/nginx/ssl/privkey.pem\ndj_backend_server/nginx/ssl/cert.pem\ndj_backend_server/nginx/nginx.conf\n.vscode\ndj_backend_server.code-workspace\n.aider*\n.aiderignore\ndj_backend_server/.vscode/settings.json\n\ndj_backend_server/a.py\ndj_backend_server/1.pdf\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.0361328125,
          "content": "# Code of Conduct\n\n## Introduction\n\nWe are committed to providing a welcoming and inclusive environment for all participants, regardless of gender, sexual orientation, disability, ethnicity, religion, or any other personal characteristic. We value open and respectful communication and expect all contributors, maintainers, and users of this repository to abide by this Code of Conduct.\n\n## Expected Behavior\n\nWhen participating in this repository, we expect everyone to:\n\n- Be respectful and considerate of others' perspectives and experiences.\n- Use inclusive language and avoid derogatory or discriminatory comments or behavior.\n- Be open to constructive feedback and engage in healthy discussions.\n- Exercise empathy and understanding towards fellow contributors.\n- Be mindful of the impact of your words and actions on others.\n\n## Unacceptable Behavior\n\nThe following behaviors are considered unacceptable and will not be tolerated:\n\n- Harassment, discrimination, or intimidation in any form.\n- Offensive, derogatory, or inappropriate comments or content.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2023 OpenChat\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.35546875,
          "content": "# Variables\nDOCKER_COMPOSE = docker-compose\n\n# Colors\nCOLOR_RESET = \\033[0m\nCOLOR_BOLD = \\033[1m\nCOLOR_GREEN = \\033[32m\nCOLOR_YELLOW = \\033[33m\n\n# Check if Docker is installed\nDOCKER_INSTALLED := $(shell command -v docker-compose 2> /dev/null)\n\n# Targets\ninstall:\n    ifndef DOCKER_INSTALLED\n\t    $(error Docker is not installed. Please visit https://www.docker.com/get-started to download and install Docker.)\n    endif\n\n\t@echo \"$(COLOR_BOLD)=== Putting the services down (if already running) ===$(COLOR_RESET)\"\n\t$(DOCKER_COMPOSE) down --remove-orphans\n\n\t@echo \"$(COLOR_BOLD)=== Setting up Docker environment ===$(COLOR_RESET)\"\n    # Copy .env.example to .env for backend-server\n    # Show warning before continue, and wait for 10 seconds\n\t@echo \"$(COLOR_BOLD)=== This will overwrite your .env files, you still have some time to abort ===$(COLOR_RESET)\"\n\t@sleep 5\n\t@echo \"$(COLOR_BOLD)=== Copying .env files ===$(COLOR_RESET)\"\n\tcp -n backend-server/.env.example backend-server/.env 2>/dev/null || true\n\tcp common.env llm-server/.env 2>/dev/null || true\n\t$(DOCKER_COMPOSE) build #--no-cache\n\t$(DOCKER_COMPOSE) up -d #--force-recreate\n\t@echo \"$(COLOR_BOLD)=== Waiting for services to start (~20 seconds) ===$(COLOR_RESET)\"\n\t@sleep 20\n\n\t@echo \"$(COLOR_BOLD)=== Clearing backend server config cache ===$(COLOR_RESET)\"\n\t$(DOCKER_COMPOSE) exec backend-server php artisan cache:clear\n\t$(DOCKER_COMPOSE) exec backend-server php artisan config:cache\n\n\t@echo \"$(COLOR_BOLD)=== Run backend server migrations ===$(COLOR_RESET)\"\n\t$(DOCKER_COMPOSE) exec backend-server php artisan migrate --seed\n\t$(DOCKER_COMPOSE) exec backend-server php artisan storage:link\n\n\t@echo \"$(COLOR_BOLD)=== Running backward compatibility scripts ===$(COLOR_RESET)\"\n\t$(DOCKER_COMPOSE) exec backend-server php artisan prompt:fill\n\n\t$(DOCKER_COMPOSE) run -d backend-server php artisan queue:work --timeout=200\n\n\t@echo \"$(COLOR_BOLD)=== Installation completed ===$(COLOR_RESET)\"\n\t@echo \"$(COLOR_BOLD)=== 🔥🔥 You can now access the dashboard at -> http://localhost:8000 ===$(COLOR_RESET)\"\n\t@echo \"$(COLOR_BOLD)=== Enjoy! ===$(COLOR_RESET)\"\n\nrun-worker:\n\t$(DOCKER_COMPOSE) exec backend-server php artisan queue:work --timeout=200\n\ndb-setup:\n\t$(DOCKER_COMPOSE) exec backend-server php artisan migrate:fresh --seed\n\ndown:\n\t$(DOCKER_COMPOSE) down --remove-orphans\n\nexec-backend-server:\n\t$(DOCKER_COMPOSE) exec backend-server bash\n.PHONY: install down"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.7880859375,
          "content": "\n\n\n<p>\n<img alt=\"GitHub Contributors\" src=\"https://img.shields.io/github/contributors/openchatai/openchat\" />\n<img alt=\"GitHub Last Commit\" src=\"https://img.shields.io/github/last-commit/openchatai/openchat\" />\n<img alt=\"\" src=\"https://img.shields.io/github/repo-size/openchatai/openchat\" />\n<img alt=\"GitHub Issues\" src=\"https://img.shields.io/github/issues/openchatai/openchat\" />\n<img alt=\"GitHub Pull Requests\" src=\"https://img.shields.io/github/issues-pr/openchatai/openchat\" />\n<img alt=\"Github License\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" />\n<img alt=\"Discord\" src=\"https://img.shields.io/discord/1110910277110743103?label=Discord&logo=discord&logoColor=white&style=plastic&color=d7b023)](https://discord.gg/Q8hHfdav\" />\n</p>\n\n![](https://gcdnb.pbrd.co/images/gjX4atjx9uKT.png?o=1)\n\n------\n# 🔥 OpenChat\n\n---- \nOpenChat is an everyday user chatbot console that simplifies the utilization of large language models. With the advancements in AI, the installation and usage of these models have become overwhelming. OpenChat aims to address this challenge by providing a two-step setup process to create a comprehensive chatbot console. It serves as a central hub for managing multiple customized chatbots.\n\n> Currently, OpenChat supports GPT models, and we are actively working on incorporating various open-source drivers that can be activated with a single click.\n\n\n\n\n## Try it out:\n**You can try it out on [openchat.so](http://openchat.so/)**\n\nhttps://github.com/openchatai/OpenChat/assets/32633162/112a72a7-4314-474b-b7b5-91228558370c\n\nChinese Video Tutorial:https://www.bilibili.com/video/BV1YX4y1H7oN\n\n## 🏁 Current Features\n\n- Create unlimited local chatbots based on GPT-3 (and GPT-4 if available).\n- Customize your chatbots by providing PDF files, websites, and soon, integrations with platforms like Notion, Confluence, and Office 365.\n- Each chatbot has unlimited memory capacity, enabling seamless interaction with large files such as a 400-page PDF.\n- Embed chatbots as widgets on your website or internal company tools.\n- Use your entire codebase as a data source for your chatbots (pair programming mode).\n- And much more!\n\n## 🛣️ Roadmap:\n- [x] Create unlimited chatbots\n- [x] Share chatbots via URL\n- [x] Integrate chatbots on any website using JS (as a widget on the bottom right corner)\n- [x] Support GPT-3 models\n- [x] Support vector database to provide chatbots with larger memory\n- [x] Accept websites as a data source\n- [x] Accept PDF files as a data source\n- [x] Support multiple data sources per chatbot\n- [x] Support ingesting an entire codebase using GitHub API and use it as a data source with pair programming mode\n- [x] Support pre-defined messages with a single click\n- [X] Support offline vector DB\n- [X] Re write the backend in Python Django\n- [ ] **In progress: re-write the frontend in Next.js & TS**\n- [ ] Support Slack integration (allow users to connect chatbots with their Slack workspaces)\n- [ ] Support Intercom integration (enable users to sync chat conversations with Intercom)\n- [ ] Support offline open-source models (e.g., Alpaca, LLM drivers)\n- [ ] Support Vertex AI and Palm as LLMs\n- [ ] Support Confluence, Notion, Office 365, and Google Workspace\n- [ ] Refactor the codebase to be API ready\n- [ ] Create a new UI designer for website-embedded chatbots\n- [ ] Support custom input fields for chatbots\n- [ ] Support offline usage: this is a major feature, OpenChat will operate fully offline with no internet connection at this stage (offline LLMs, offline Vector DBs)\n\nWe love hearing from you! Got any cool ideas or requests? We're all ears! So, if you have something in mind, give us a shout! \n\n\n## 🚀 Getting Started\n\n- Make sure you have docker installed. \n\n- To begin, clone this Git repository:\n\n```bash\ngit clone git@github.com:openchatai/OpenChat.git\n```\n\n---\n### Setting Up Your Environment\n\n**Note**: Starting July, Qdrant is our Preferred Open-Source Vector Store 🚀 No initial Pinecone registration required. To begin, delve into the comprehensive guide: [**Using Qdrant**](#using-qdrant), provided in the following section.\n\n#### Before you begin, make sure to update the `common.env` file with the necessary keys:\n\n```sh\nOPENAI_API_KEY=# Retrieve from your [openai.com](https://www.openai.com) account\nPINECONE_API_KEY=# Obtain from the \"API Keys\" tab in [pinecone](https://www.pinecone.io)\nPINECONE_ENVIRONMENT=# Obtain after creating your index in [pinecone](https://www.pinecone.io)\nVECTOR_STORE_INDEX_NAME=# Obtain after creating your index in [pinecone](https://www.pinecone.io)\nSTORE=pinecone\n```\n\n\n####  Using Azure OpenAI\n\n- `USE_AZURE_OPENAI=true`: Whether to use the Azure OpenAI API.\n- `AZURE_OPENAI_API_KEY`: Your Azure OpenAI API key.\n- `AZURE_OPENAI_API_INSTANCE_NAME`: The name of your Azure OpenAI API instance.\n- `AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME`: The name of the Azure OpenAI API deployment for completions.\n- `AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME`: The name of the Azure OpenAI API deployment for embeddings.\n\n#### Using Qdrant\nIf you want to switch from Pinecone to Qdrant, you can set the following environment variables:\n- `OPENAI_API_KEY`= Your open ai key\n- `QDRANT_URL`: The URL of the Qdrant server.\n- `STORE`: The store to use to store embeddings. Can be `qdrant` or `pinecone`.\n\n\n#### Optional [To modify the chat behaviour]\n\n`CHAIN_TYPE` = The type of chain to use: `conversation_retrieval` | `retrieval_qa`\n\n- `retrieval_qa` -> [Learn more](https://python.langchain.com/docs/use_cases/question_answering/how_to/vector_db_qa)\n- `conversation_retrieval` -> [Learn more](https://python.langchain.com/docs/use_cases/question_answering/how_to/chat_vector_db)\n\n#### Using Prebuilt Images\n\nIf you're experiencing slow internet speeds or if Docker builds are taking a long time, consider using the prebuilt images for your respective architecture. Simply comment out the unnecessary image line in the `docker-compose.yml` file and uncomment the appropriate prebuilt image line.\n\nExample:\n\n```yaml\n# Mac environment\nimage: codebanesr/openchat_llm_server:edge_amd64\n\n# Or, for Linux environment\nimage: codebanesr/openchat_llm_server:edge\n```\n\n\n> Note: for pincone db, make sure that the dimension is equal to 1536 \n\n- Navigate to the repository folder and run the following command (for MacOS or Linux):\n```\nmake install\n```\n\n\n**or in case you are using Windows**\n```\nmake.bat\n```\n\nSure, here's the modified text with the additional line you requested:\n# Getting Started with the Openchat Django App\n\nStart your adventure of contributing to and using OpenChat, now remade using the Python programming language. You can begin by following the instructions in the guide available here: [OpenChat Python Guide](docs/django_release.md).\n\n**Kindly be aware that the transition to the Python backend includes a significant alteration related to the Qdrant vector store, constituting a breaking change.**\n\nOnce the installation is complete, you can access the OpenChat console at: http://localhost:8000\n\n## 🚀 Unleash the Power of Native LLM\nDiscover the latest addition: llama2 support. [Dive into this Guide to Harness LLAMA2 by Meta](docs/aug_26/readme.md) 📖🔮\n***\n### Full documentation [available here](https://docs.openchat.so/introduction)\n\n## 🚀 Upgrade guide:\n\nWe do our best to not introduce breaking changes, so far, you only need to git pull and run `make install` whenever there is a new update.\n\n## ❤️ Thanks:\n- To [@mayooear](https://github.com/mayooear) for his work and tutorial on chatting with PDF files, we utilized a lot of his code in the LLM server.\n\n\n## License\nThis project is licensed under the MIT License.\n\n\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/eltociear\"><img src=\"https://avatars.githubusercontent.com/u/22633385?v=4?s=100\" width=\"100px;\" alt=\"Ikko Eltociear Ashimine\"/><br /><sub><b>Ikko Eltociear Ashimine</b></sub></a><br /><a href=\"#ideas-eltociear\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/openchatai/OpenChat/commits?author=eltociear\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jsindy\"><img src=\"https://avatars.githubusercontent.com/u/4966007?v=4?s=100\" width=\"100px;\" alt=\"Joshua Sindy\"/><br /><sub><b>Joshua Sindy</b></sub></a><br /><a href=\"https://github.com/openchatai/OpenChat/issues?q=author%3Ajsindy\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/erjanmx\"><img src=\"https://avatars.githubusercontent.com/u/4899432?v=4?s=100\" width=\"100px;\" alt=\"Erjan Kalybek\"/><br /><sub><b>Erjan Kalybek</b></sub></a><br /><a href=\"https://github.com/openchatai/OpenChat/commits?author=erjanmx\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://woahai.com/\"><img src=\"https://avatars.githubusercontent.com/u/115117306?v=4?s=100\" width=\"100px;\" alt=\"WoahAI\"/><br /><sub><b>WoahAI</b></sub></a><br /><a href=\"https://github.com/openchatai/OpenChat/issues?q=author%3AWoahai321\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/openchatai/OpenChat/commits?author=Woahai321\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://space.bilibili.com/1900783\"><img src=\"https://avatars.githubusercontent.com/u/36354458?v=4?s=100\" width=\"100px;\" alt=\"Tommy in Tongji\"/><br /><sub><b>Tommy in Tongji</b></sub></a><br /><a href=\"https://github.com/openchatai/OpenChat/commits?author=TommyZihao\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://resume.applesauce.co.in\"><img src=\"https://avatars.githubusercontent.com/u/17947802?v=4?s=100\" width=\"100px;\" alt=\"codebane\"/><br /><sub><b>codebane</b></sub></a><br /><a href=\"https://github.com/openchatai/OpenChat/commits?author=codebanesr\" title=\"Code\">💻</a> <a href=\"https://github.com/openchatai/OpenChat/commits?author=codebanesr\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://gloobus.it\"><img src=\"https://avatars.githubusercontent.com/u/27447535?v=4?s=100\" width=\"100px;\" alt=\"lvalics\"/><br /><sub><b>lvalics</b></sub></a><br /><a href=\"https://github.com/openchatai/OpenChat/commits?author=lvalics\" title=\"Code\">💻</a> <a href=\"https://github.com/openchatai/OpenChat/commits?author=lvalics\" title=\"Documentation\">📖</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 4.2939453125,
          "content": "# Security Policy\n\nThis document outlines the security policy for the OpenChat GitHub repository. It aims to establish guidelines and best practices to ensure the security and integrity of the project.\n\n## Reporting Security Issues\n\nIf you discover any security vulnerabilities or issues within the repository, we appreciate your cooperation in responsibly disclosing them. Please follow these steps:\n\n1. Submit a detailed report of the vulnerability or issue through our issue tracker or email [hey@openchat.so](mailto:hey@openchat.so).\n2. Include a description of the vulnerability or issue, along with any relevant details or steps to reproduce it.\n3. We will acknowledge receipt of your report and provide an estimated timeline for a response.\n4. We will investigate and validate the issue promptly, and if necessary, we will work towards resolving it.\n5. Once the vulnerability or issue is resolved, we will credit you for your contribution, unless you prefer to remain anonymous.\n\nPlease note that we appreciate your efforts to maintain responsible disclosure. We kindly request that you do not publicly disclose any vulnerabilities or issues until we have addressed them.\n\n## Supported Versions\n\nThe security policy applies to the latest stable version of the project. It is your responsibility to ensure that you are using an up-to-date version to benefit from security enhancements and bug fixes. Older versions might not receive immediate attention or support for reported vulnerabilities.\n\n## Vulnerability Response\n\nWe are committed to addressing security vulnerabilities promptly and efficiently. Once we receive a security report, we will follow these steps:\n\n1. Acknowledge receipt of the report within 1 business days.\n2. Investigate and validate the reported vulnerability or issue.\n3. Develop a plan to resolve the vulnerability or issue.\n4. Implement the necessary fixes and improvements.\n5. Release a patch or update that addresses the vulnerability or issue.\n6. Provide the reporter with feedback and credit (if requested) after the vulnerability is resolved.\n\nThe timeframe for the above steps may vary depending on the complexity of the issue and other factors. We will strive to keep you informed about the progress and any necessary actions.\n\n## Code of Conduct\n\nWe expect all contributors, maintainers, and users of this repository to adhere to our Code of Conduct. This ensures a respectful and inclusive environment for everyone involved. The Code of Conduct can be found in the [CODE_OF_CONDUCT.md](./CODE_OF_CONDUCT.md) file.\n\n## Dependencies\n\nThis repository may utilize third-party libraries and dependencies. While we strive to keep them updated, it is essential to be aware of potential vulnerabilities in these dependencies. We encourage contributors and users to regularly review and update dependencies to incorporate security patches and improvements.\n\n## Security Best Practices\n\nTo ensure the security and integrity of the repository, we recommend following these best practices:\n\n1. **Strong Authentication**: Enable two-factor authentication (2FA) for your GitHub account to add an extra layer of security.\n2. **Secure Credentials**: Avoid committing sensitive information, such as passwords, access tokens, or API keys, to the repository. Utilize environment variables or secure storage solutions for handling sensitive data.\n3. **Secure Coding**: Follow secure coding practices to prevent common vulnerabilities like SQL injection, cross-site scripting (XSS), and cross-site request forgery (CSRF).\n4. **Regular Updates**: Keep your local repository up to date by pulling the latest changes frequently.\n5. **Code Review**: Encourage peer code reviews to identify security vulnerabilities, logic flaws, or potential issues.\n6. **Secure Communications**: Use encrypted connections (HTTPS) when communicating with the repository and avoid using insecure or public networks.\n7. **Access Control**: Ensure appropriate access controls and permissions are set for collaborators or contributors.\n8. **Testing**: Implement a robust testing strategy to identify and fix security issues in the early stages of development.\n9. **Security Monitoring**: Continuously monitor the repository for any suspicious activity or unauthorized access attempts.\n\nThese practices aim to mitigate common security risks and maintain the overall security posture of the repository.\n"
        },
        {
          "name": "backend-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "common.env",
          "type": "blob",
          "size": 0.595703125,
          "content": "OPENAI_API_KEY=\n\n# pinecone | qdrant\nSTORE=qdrant\nQDRANT_URL=http://qdrant:6333\n\n\n\n# --- if using pinecone ---\n# PINECONE_API_KEY=\n# PINECONE_ENV=\n# VECTOR_STORE_INDEX_NAME=\n# --- end pinecone ---\n\n# Required for openai azure ------------------------------------------------------------------\n# USE_AZURE_OPENAI=true\n# AZURE_OPENAI_API_KEY=\n# AZURE_OPENAI_API_INSTANCE_NAME=\n# AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME=\n# AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME=\n# AZURE_OPENAI_API_VERSION=2023-03-15-preview\n# --------------------------------------------------------------------------------------------"
        },
        {
          "name": "dj_backend_server",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.9697265625,
          "content": "version: '3'\nservices:\n  backend-server:\n    restart: unless-stopped\n    build:\n      context: ./backend-server\n      dockerfile: Dockerfile\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - llm-server\n      - mysql\n      - redis\n    environment:\n      - REDIS_HOST=redis\n      - DB_HOST=mysql\n      - DB_PORT=3306\n      - DB_DATABASE=openchat\n      - DB_USERNAME=dbuser\n      - DB_PASSWORD=dbpass\n    env_file:\n      - ./common.env\n    volumes:\n      - shared_data:/app/shared_data\n    networks:\n      - openchat_network\n\n  # adminer:\n  #   image: adminer\n  #   ports:\n  #     - \"8080:8080\"\n  #   environment:\n  #     ADMINER_DEFAULT_SERVER: db  # Change this to match your database server name\n  #   depends_on:\n  #     - mysql\n  #   networks:\n  #     - openchat_network\n\n  llm-server:\n    restart: unless-stopped\n    # prebuilt image for linux\n    # image: codebanesr/openchat_llm_server:edge\n\n    # prebuilt image for mac\n    # image: codebanesr/openchat_llm_server:edge_amd64\n\n    # or build from source\n    build:\n      context: ./llm-server\n      dockerfile: Dockerfile\n\n    volumes:\n      - shared_data:/app/shared_data\n    env_file:\n      - ./common.env\n    networks:\n      - openchat_network\n\n  mysql:\n    restart: unless-stopped\n    platform: linux/x86_64\n    image: \"mysql:5.7\"\n    ports:\n      - \"3307:3306\"\n    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci\n    environment:\n      MYSQL_ROOT_PASSWORD: root\n      MYSQL_DATABASE: openchat\n      MYSQL_USER: dbuser\n      MYSQL_PASSWORD: dbpass\n    volumes:\n      - database:/var/lib/mysql\n    networks:\n      - openchat_network\n\n  qdrant:\n    image: qdrant/qdrant\n    ports:\n      - 6333:6333\n      - 6334:6334\n    volumes:\n      - qdrant_storage:/qdrant/storage\n    networks:\n      - openchat_network\n\n  redis:\n    restart: unless-stopped\n    image: \"redis:3.2\"\n    ports:\n      - \"6379:6379\"\n    networks:\n      - openchat_network\n\n\nnetworks:\n  openchat_network:\n\nvolumes:\n  shared_data:\n  database:\n  qdrant_storage:"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "llm-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "make.bat",
          "type": "blob",
          "size": 1.6083984375,
          "content": "DOCKER_COMPOSE = docker-compose\nBUILD_OPTS =\n\n\ninstall:\n\t@echo \"=== Putting the services down (if already running) ===\"\n\t${DOCKER_COMPOSE} down --remove-orphans\n\n\t@echo \"=== Setting up Docker environment ===\"\n\t@echo \"=== This will overwrite your .env files, you still have some time to abort ===\"\n\t@echo \"=== Copying .env files ===\"\n\tcopy /Y backend-server\\.env.example backend-server\\.env\n\tcopy /Y common.env llm-server\\.env\n\t${DOCKER_COMPOSE} build ${BUILD_OPTS}\n\t${DOCKER_COMPOSE} up -d\n\t@echo \"=== Waiting for services to start (~20 seconds) ===\"\n\n\t@echo \"=== Clearing backend server config cache ===\"\n\t${DOCKER_COMPOSE} exec backend-server php artisan config:cache\n    ${DOCKER_COMPOSE} exec backend-server php artisan cache:clear\n    ${DOCKER_COMPOSE} exec backend-server php artisan config:cache\n\n\t@echo \"=== Run backend server server migrations ===\"\n\t${DOCKER_COMPOSE} exec backend-server php artisan migrate --seed\n\n\t@echo \"=== Running backward compatibility scripts ===\"\n\t${DOCKER_COMPOSE} exec backend-server php artisan storage:link\n\t${DOCKER_COMPOSE} exec backend-server php artisan prompt:fill\n\n\n\n\t${DOCKER_COMPOSE} run -d backend-server php artisan queue:work --timeout=200\n\n\t@echo \"=== Installation completed ===\"\n\t@echo \"=== 🔥🔥 You can now access the dashboard at -> http://localhost:8000 ===\"\n\t@echo \"=== Enjoy! ===\"\n\nrun-worker:\n\t${DOCKER_COMPOSE} exec backend-server php artisan queue:work --timeout=200\n\ndb-setup:\n\t${DOCKER_COMPOSE} exec backend-server php artisan migrate:fresh --seed\n\ndown:\n\t${DOCKER_COMPOSE} down --remove-orphans\n\nexec-backend-server:\n\t${DOCKER_COMPOSE} exec backend-server bash\n.PHONY: install down"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.0849609375,
          "content": "{\n  \"name\": \"OpenChat\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {}\n}\n"
        },
        {
          "name": "update_repo.sh",
          "type": "blob",
          "size": 0.6259765625,
          "content": "#!/bin/bash\n\n# This script will keep your local modifications in chat.js and search.js, \n# while also updating your branch with the latest changes from the remote repository. \n# Remember to resolve any merge conflicts that might arise when you apply the stashed changes.\n\n# Stage the modified files\ngit add dj_backend_server/web/static/chat.js\ngit add dj_backend_server/web/static/search.js\n\n# Fetch the latest updates from the remote repository\ngit fetch\n\n# Stash the staged changes\ngit stash\n\n# Pull the latest changes from the remote branch\ngit pull origin lvalics/OpenChat.git\n\n# Apply the stashed changes\ngit stash pop\n\n# End of script\n"
        },
        {
          "name": "widgets",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}