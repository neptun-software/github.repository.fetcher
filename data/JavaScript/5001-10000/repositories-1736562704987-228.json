{
  "metadata": {
    "timestamp": 1736562704987,
    "page": 228,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "elasticsearch-dump/elasticsearch-dump",
      "stars": 7618,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.6513671875,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Node template\n# Logs\nlogs\n*.log\nnpm-debug.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\n# Coverage directory used by tools like istanbul\ncoverage\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\njspm_packages\n\n# Optional npm cache directory\n.npm\n\n# Optional REPL history\n.node_repl_history\n\n### Yeoman template\nbower_components/\nbuild/\ndist/\ntest/\n.github\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.087890625,
          "content": ".DS_Store\nnode_modules/*\n/nbproject/private/\npackage-lock.json\n\n# Intellij\n.idea/\n.fleet/\n"
        },
        {
          "name": ".ncurc.json",
          "type": "blob",
          "size": 0.09765625,
          "content": "{\n  \"reject\": [\n    \"async\",\n    \"ini\",\n    \"big.js\",\n    \"mocha\",\n    \"p-queue\",\n    \"should\"\n  ]\n}"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 1.9638671875,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Yeoman template\nnode_modules/\nbower_components/\n*.log\n\nbuild/\ndist/\n### Node template\n# Logs\nlogs\nnpm-debug.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\njspm_packages\n\n# Optional npm cache directory\n.npm\n\n# Optional REPL history\n.node_repl_history\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff:\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/dictionaries\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n\n# Sensitive or high-churn files:\n.idea/dataSources.ids\n.idea/dataSources.xml\n.idea/dataSources.local.xml\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n# Gradle:\n.idea/gradle.xml\n.idea/libraries\n\n# Mongo Explorer plugin:\n.idea/mongoSettings.xml\n\n## File-based project format:\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\napi/\nconfigs/\ninit.d/\ntest/\nutils/\ndata/\n.github\nrunlocal\n.idea\n\nGruntfile.js\nprocesses.yml\nDockerfile\nsupervisord.conf\napp.js\n.dockerignore\n.travis.yml\n.ncurc.json\n.editorconfig\n.eslintrc.json\ndocker-compose*\nelasticdump.jpg\nrunlocal*\ndocker-entrypoint.sh\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test/*\n\n### VisualStudioCode ###\n.vscode/*\n\n.fleet/\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6943359375,
          "content": "FROM node:20-bookworm-slim\nLABEL maintainer=\"ferronrsmith@gmail.com\"\nARG ES_DUMP_VER\nARG TARGETPLATFORM\nENV ES_DUMP_VER=${ES_DUMP_VER:-latest}\nENV NODE_ENV production\n\nRUN apt-get -y update && \\\n    apt-get -y install wget &&  \\\n    if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then ARCHITECTURE=amd64; elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then ARCHITECTURE=arm64; else ARCHITECTURE=amd64; fi && \\\n    wget \"https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_${ARCHITECTURE}.deb\" && \\\n    dpkg -i dumb-init_*.deb\n\nRUN npm install elasticdump@${ES_DUMP_VER} -g\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/dumb-init\", \"elasticdump\"]\n"
        },
        {
          "name": "Dockerfile_local",
          "type": "blob",
          "size": 0.4501953125,
          "content": "FROM node:20-bookworm-slim\nLABEL maintainer=\"ferronrsmith@gmail.com\"\nENV NODE_ENV production\nWORKDIR /app\n\nCOPY . .\n\nRUN apt-get -y update && \\\n    apt-get -y install wget &&  \\\n    wget https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_amd64.deb && \\\n    dpkg -i dumb-init_*.deb\n\nRUN npm install --production -g\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/dumb-init\", \"elasticdump\"]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 40.525390625,
          "content": "elasticdump\n==================\n\nTools for moving and saving indices from Elasticsearch and OpenSearch\n\n![picture](https://raw.github.com/elasticsearch-dump/elasticsearch-dump/master/elasticdump.jpg)\n\n---\n[![Build Status](https://github.com/elasticsearch-dump/elasticsearch-dump/actions/workflows/elasticdump.yaml/badge.svg)](https://github.com/elasticsearch-dump/elasticsearch-dump)\n[![npm version](https://badge.fury.io/js/elasticdump.svg)](https://npmjs.org/package/elasticdump)\n[![NPM Weekly stats](https://img.shields.io/npm/dw/elasticdump.svg)](https://npmjs.org/package/elasticdump)\n[![NPM Monthly stats](https://img.shields.io/npm/dm/elasticdump.svg)](https://npmjs.org/package/elasticdump)\n[![DockerHub Badge](https://img.shields.io/docker/pulls/elasticdump/elasticsearch-dump.svg)](https://hub.docker.com/r/elasticdump/elasticsearch-dump/)\n[![DockerHub Badge](https://img.shields.io/docker/pulls/taskrabbit/elasticsearch-dump.svg)](https://hub.docker.com/r/taskrabbit/elasticsearch-dump/)\n\n\n\n## Version Warnings!\n\n- Version `1.0.0` of Elasticdump changes the format of the files created by the dump.  Files created with version `0.x.x` of this tool are likely not to work with versions going forward.  To learn more about the breaking changes, vist the release notes for version [`1.0.0`](https://github.com/elasticsearch-dump/elasticsearch-dump/releases/tag/v1.0.0).  If you recive an \"out of memory\" error, this is probably or most likely the cause.\n- Version `2.0.0` of Elasticdump removes the `bulk` options.  These options were buggy, and differ between versions of Elasticsearch.  If you need to export multiple indexes, look for the `multielasticdump` section of the tool.\n- Version `2.1.0` of Elasticdump moves from using `scan/scroll` (ES 1.x) to just `scroll` (ES 2.x).  This is a backwards-compatible change within Elasticsearch, but performance may suffer on Elasticsearch versions prior to 2.x.\n- Version `3.0.0` of Elasticdump has the default queries updated to only work for ElasticSearch version 5+.  The tool *may* be compatible with earlier versions of Elasticsearch, but our version detection method may not work for all ES cluster topologies\n- Version `5.0.0` of Elasticdump contains a breaking change for the s3 transport. _s3Bucket_ and _s3RecordKey_ params are no longer supported please use s3urls instead\n- Version `6.1.0` and higher of Elasticdump contains a change to the upload/dump process. This change allows for overlapping promise processing. The benefit of which is improved performance due increased parallel processing, but a side-effect exists where-by records (data-set) aren't processed in a sequential order (the ordering is no longer guaranteed)\n- Version `6.67.0` and higher of Elasticdump will quit if the node.js version does not match the minimum requirement needed (v10.0.0)\n- Version `6.76.0` and higher of Elasticdump added support for OpenSearch (forked from Elasticsearch 7.10.2)\n\n## Installing\n\n(local)\n```bash\nnpm install elasticdump\n./bin/elasticdump\n```\n\n(global)\n```bash\nnpm install elasticdump -g\nelasticdump\n```\n\n## Use\n\n### Standard Install\n\nElasticdump works by sending an `input` to an `output`. Both can be either an elasticsearch URL or a File.\n\nElasticsearch/OpenSearch:\n- format:  `{protocol}://{host}:{port}/{index}`\n- example: `http://127.0.0.1:9200/my_index`\n\nFile:\n- format:  `{FilePath}`\n- example: `/Users/evantahler/Desktop/dump.json`\n\nStdio:\n- format: stdin / stdout\n- format: `$`\n\nYou can then do things like:\n\n```bash\n# Copy an index from production to staging with analyzer and mapping:\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=analyzer\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=mapping\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=data\n\n# Backup index data to a file:\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/data/my_index_mapping.json \\\n  --type=mapping\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/data/my_index.json \\\n  --type=data\n\n# Backup and index to a gzip using stdout:\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=$ \\\n  | gzip > /data/my_index.json.gz\n\n# Backup the results of a query to a file\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=query.json \\\n  --searchBody=\"{\\\"query\\\":{\\\"term\\\":{\\\"username\\\": \\\"admin\\\"}}}\"\n  \n# Specify searchBody from a file\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=query.json \\\n  --searchBody=@/data/searchbody.json  \n\n# Copy a single shard data:\nelasticdump \\\n  --input=http://es.com:9200/api \\\n  --output=http://es.com:9200/api2 \\\n  --input-params=\"{\\\"preference\\\":\\\"_shards:0\\\"}\"\n\n# Backup aliases to a file\nelasticdump \\\n  --input=http://es.com:9200/index-name/alias-filter \\\n  --output=alias.json \\\n  --type=alias\n\n# Import aliases into ES\nelasticdump \\\n  --input=./alias.json \\\n  --output=http://es.com:9200 \\\n  --type=alias\n\n# Backup templates to a file\nelasticdump \\\n  --input=http://es.com:9200/template-filter \\\n  --output=templates.json \\\n  --type=template\n\n# Import templates into ES\nelasticdump \\\n  --input=./templates.json \\\n  --output=http://es.com:9200 \\\n  --type=template\n\n# Split files into multiple parts\nelasticdump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/data/my_index.json \\\n  --fileSize=10mb\n\n# Import data from S3 into ES (using s3urls)\nelasticdump \\\n  --s3AccessKeyId \"${access_key_id}\" \\\n  --s3SecretAccessKey \"${access_key_secret}\" \\\n  --input \"s3://${bucket_name}/${file_name}.json\" \\\n  --output=http://production.es.com:9200/my_index\n\n# Export ES data to S3 (using s3urls)\nelasticdump \\\n  --s3AccessKeyId \"${access_key_id}\" \\\n  --s3SecretAccessKey \"${access_key_secret}\" \\\n  --input=http://production.es.com:9200/my_index \\\n  --output \"s3://${bucket_name}/${file_name}.json\"\n\n# Import data from MINIO (s3 compatible) into ES (using s3urls)\nelasticdump \\\n  --s3AccessKeyId \"${access_key_id}\" \\\n  --s3SecretAccessKey \"${access_key_secret}\" \\\n  --input \"s3://${bucket_name}/${file_name}.json\" \\\n  --output=http://production.es.com:9200/my_index\n  --s3ForcePathStyle true\n  --s3Endpoint https://production.minio.co\n\n# Export ES data to MINIO (s3 compatible) (using s3urls)\nelasticdump \\\n  --s3AccessKeyId \"${access_key_id}\" \\\n  --s3SecretAccessKey \"${access_key_secret}\" \\\n  --input=http://production.es.com:9200/my_index \\\n  --output \"s3://${bucket_name}/${file_name}.json\"\n  --s3ForcePathStyle true\n  --s3Endpoint https://production.minio.co\n\n# Import data from CSV file into ES (using csvurls)\nelasticdump \\\n  # csv:// prefix must be included to allow parsing of csv files\n  # --input \"csv://${file_path}.csv\" \\\n  --input \"csv:///data/cars.csv\"\n  --output=http://production.es.com:9200/my_index \\\n  --csvSkipRows 1    # used to skip parsed rows (this does not include the headers row)\n  --csvDelimiter \";\" # default csvDelimiter is ','\n```\n\n### Non-Standard Install\n\nIf Elasticsearch/OpenSearch is not being served from the root directory the `--input-index` and\n`--output-index` are required. If they are not provided, the additional sub-directories will\nbe parsed for index and type.\n\nElasticsearch/OpenSearch:\n- format:  `{protocol}://{host}:{port}/{sub}/{directory...}`\n- example: `http://127.0.0.1:9200/api/search`\n\n```bash\n# Copy a single index from a elasticsearch:\nelasticdump \\\n  --input=http://es.com:9200/api/search \\\n  --input-index=my_index \\\n  --output=http://es.com:9200/api/search \\\n  --output-index=my_index \\\n  --type=mapping\n\n# Copy a single type:\nelasticdump \\\n  --input=http://es.com:9200/api/search \\\n  --input-index=my_index/my_type \\\n  --output=http://es.com:9200/api/search \\\n  --output-index=my_index \\\n  --type=mapping\n\n```\n\n### Docker install\nIf you prefer using docker to use elasticdump, you can download this project from docker hub:\n```bash\ndocker pull elasticdump/elasticsearch-dump\n```\nThen you can use it just by :\n- using `docker run --rm -ti elasticdump/elasticsearch-dump`\n- you'll need to mount your file storage dir `-v <your dumps dir>:<your mount point>` to your docker container\n\nExample:\n```bash\n# Copy an index from production to staging with mappings:\ndocker run --rm -ti elasticdump/elasticsearch-dump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=mapping\ndocker run --rm -ti elasticdump/elasticsearch-dump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=http://staging.es.com:9200/my_index \\\n  --type=data\n\n# Backup index data to a file:\ndocker run --rm -ti -v /data:/tmp elasticdump/elasticsearch-dump \\\n  --input=http://production.es.com:9200/my_index \\\n  --output=/tmp/my_index_mapping.json \\\n  --type=data\n```\n\nIf you need to run using `localhost` as your ES host:\n```bash\ndocker run --net=host --rm -ti elasticdump/elasticsearch-dump \\\n  --input=http://staging.es.com:9200/my_index \\\n  --output=http://localhost:9200/my_index \\\n  --type=data\n```\n\n## Dump Format\n\nThe file format generated by this tool is line-delimited JSON files.  The dump file itself is not valid JSON, but each line is.  We do this so that dumpfiles can be streamed and appended without worrying about whole-file parser integrity.\n\nFor example, if you wanted to parse every line, you could do:\n```\nwhile read LINE; do jsonlint-py \"${LINE}\" ; done < dump.data.json\n```\n\n## Options\n\n```\nelasticdump: Import and export tools for elasticsearch\nversion: %%version%%\n\nUsage: elasticdump --input SOURCE --output DESTINATION [OPTIONS]\n\nCore options\n--------------------\n--input\n                    Source location (required)\n\n--input-index\n                    Source index and type\n                    (default: all, example: index/type)\n\n--output\n                    Destination location (required)\n\n--output-index\n                    Destination index and type\n                    (default: all, example: index/type)\n\n\nOptions\n--------------------\n--big-int-fields\n                    Specifies a comma-seperated list of fields that should be checked for big-int support\n                    (default '')\n\n--bulkAction\n                    Sets the operation type to be used when preparing the request body to be sent to elastic search.\n                    For more info - https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html\n                    (default: index, options: [index, update, delete, create)\n\n--ca, --input-ca, --output-ca\n                    CA certificate. Use --ca if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n\n--cert, --input-cert, --output-cert\n                    Client certificate file. Use --cert if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n\n--csvConfigs\n                    Set all fast-csv configurations\n                    A escaped JSON string or file can be supplied. File location must be prefixed with the @ symbol\n                    (default: null)\n\n--csvCustomHeaders  A comma-seperated listed of values that will be used as headers for your data. This param must\n                    be used in conjunction with `csvRenameHeaders`\n                    (default : null)\n\n--csvDelimiter\n                    The delimiter that will separate columns.\n                    (default : ',')\n\n--csvFirstRowAsHeaders\n                    If set to true the first row will be treated as the headers.\n                    (default : true)\n\n--csvHandleNestedData\n                    Set to true to handle nested JSON/CSV data.\n                    NB : This is a very opinionated implementaton !\n                    (default : false)\n\n--csvIdColumn\n                    Name of the column to extract the record identifier (id) from\n                    When exporting to CSV this column can be used to override the default id (@id) column name\n                    (default : null)\n\n--csvIgnoreAutoColumns\n                    Set to true to prevent the following columns @id, @index, @type from being written to the output file\n                    (default : false)\n\n--csvIgnoreEmpty\n                    Set to true to ignore empty rows.\n                    (default : false)\n\n--csvIncludeEndRowDelimiter\n                    Set to true to include a row delimiter at the end of the csv\n                    (default : false)\n\n--csvIndexColumn\n                    Name of the column to extract the record index from\n                    When exporting to CSV this column can be used to override the default index (@index) column name\n                    (default : null)\n\n--csvLTrim\n                    Set to true to left trim all columns.\n                    (default : false)\n\n--csvMaxRows\n                    If number is > 0 then only the specified number of rows will be parsed.(e.g. 100 would return the first 100 rows of data)\n                    (default : 0)\n\n--csvRTrim\n                    Set to true to right trim all columns.\n                    (default : false)\n\n--csvRenameHeaders\n                    If you want the first line of the file to be removed and replaced by the one provided in the `csvCustomHeaders` option\n                    (default : true)\n\n--csvSkipLines\n                    If number is > 0 the specified number of lines will be skipped.\n                    (default : 0)\n\n--csvSkipRows\n                    If number is > 0 then the specified number of parsed rows will be skipped\n                    NB:  (If the first row is treated as headers, they aren't a part of the count)\n                    (default : 0)\n\n--csvTrim\n                    Set to true to trim all white space from columns.\n                    (default : false)\n\n--csvTypeColumn\n                    Name of the column to extract the record type from\n                    When exporting to CSV this column can be used to override the default type (@type) column name\n                    (default : null)\n\n--csvWriteHeaders   Determines if headers should be written to the csv file.\n                    (default : true)\n\n--customBackoff\n                    Activate custom customBackoff function. (s3)\n\n--debug\n                    Display the elasticsearch commands being used\n                    (default: false)\n\n--delete\n                    Delete documents one-by-one from the input as they are\n                    moved.  Will not delete the source index\n                    (default: false)\n\n--delete-with-routing\n                    Passes the routing query-param to the delete function\n                    used to route operations to a specific shard.\n                    (default: false)\n\n--esCompress\n                    if true, add an Accept-Encoding header to request compressed content encodings from the server (if not already present)\n                    and decode supported content encodings in the response.\n                    Note: Automatic decoding of the response content is performed on the body data returned through request\n                    (both through the request stream and passed to the callback function) but is not performed on the response stream\n                    (available from the response event) which is the unmodified http.IncomingMessage object which may contain compressed data.\n                    See example below.\n\n--fileSize\n                    supports file splitting.  This value must be a string supported by the **bytes** module.\n                    The following abbreviations must be used to signify size in terms of units\n                    b for bytes\n                    kb for kilobytes\n                    mb for megabytes\n                    gb for gigabytes\n                    tb for terabytes\n                    e.g. 10mb / 1gb / 1tb\n                    Partitioning helps to alleviate overflow/out of memory exceptions by efficiently segmenting files\n                    into smaller chunks that then can be merged if needs be.\n\n--filterSystemTemplates\n                    Whether to remove metrics-*-* and logs-*-* system templates\n                    (default: true])\n\n--force-os-version\n                    Forces the OpenSearch version used by elasticsearch-dump.\n                    (default: 7.10.2)\n\n--fsCompress\n                    gzip data before sending output to file.\n                    On import the command is used to inflate a gzipped file\n                    \n--compressionLevel\n                    The level of zlib compression to apply to responses.\n                    defaults to zlib.Z_DEFAULT_COMPRESSION\n\n--handleVersion\n                    Tells elastisearch transport to handle the `_version` field if present in the dataset\n                    (default : false)\n\n--headers\n                    Add custom headers to Elastisearch requests (helpful when\n                    your Elasticsearch instance sits behind a proxy)\n                    (default: '{\"User-Agent\": \"elasticdump\"}')\n                    Type/direction based headers are supported .i.e. input-headers/output-headers\n                    (these will only be added based on the current flow type input/output)\n\n--help\n                    This page\n\n--ignore-errors\n                    Will continue the read/write loop on write error\n                    (default: false)\n\n--ignore-es-write-errors\n                    Will continue the read/write loop on a write error from elasticsearch\n                    (default: true)\n\n--inputSocksPort, --outputSocksPort\n                    Socks5 host port\n\n--inputSocksProxy, --outputSocksProxy\n                    Socks5 host address\n\n--inputTransport\n                    Provide a custom js file to use as the input transport\n\n--key, --input-key, --output-key\n                    Private key file. Use --key if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n\n--limit\n                    How many objects to move in batch per operation\n                    limit is approximate for file streams\n                    (default: 100)\n\n--maxRows\n                    supports file splitting.  Files are split by the number of rows specified\n\n--maxSockets\n                    How many simultaneous HTTP requests can the process make?\n                    (default:\n                      5 [node <= v0.10.x] /\n                      Infinity [node >= v0.11.x] )\n\n--noRefresh\n                    Disable input index refresh.\n                    Positive:\n                      1. Much increased index speed\n                      2. Much less hardware requirements\n                    Negative:\n                      1. Recently added data may not be indexed\n                    Recommended using with big data indexing,\n                    where speed and system health is a higher priority\n                    than recently added data.\n\n--offset\n                    Integer containing the number of rows you wish to skip\n                    ahead from the input transport.  When importing a large\n                    index, things can go wrong, be it connectivity, crashes,\n                    someone forgets to `screen`, etc.  This allows you\n                    to start the dump again from the last known line written\n                    (as logged by the `offset` in the output).  Please be\n                    advised that since no sorting is specified when the\n                    dump is initially created, there's no real way to\n                    guarantee that the skipped rows have already been\n                    written/parsed.  This is more of an option for when\n                    you want to get as much data as possible in the index\n                    without concern for losing some rows in the process,\n                    similar to the `timeout` option.\n                    (default: 0)\n\n--outputTransport\n                    Provide a custom js file to use as the output transport\n\n--overwrite\n                    Overwrite output file if it exists\n                    (default: false)\n\n--params\n                    Add custom parameters to Elastisearch requests uri. Helpful when you for example\n                    want to use elasticsearch preference\n                    --input-params is a specific params extension that can be used when fetching data with the scroll api\n                    --output-params is a specific params extension that can be used when indexing data with the bulk index api\n                    NB : These were added to avoid param pollution problems which occur when an input param is used in an output source\n                    (default: null)\n\n--parseExtraFields\n                    Comma-separated list of meta-fields to be parsed\n\n--pass, --input-pass, --output-pass\n                    Pass phrase for the private key. Use --pass if source and destination are identical.\n                    Otherwise, use the one prefixed with --input or --output as needed.\n\n--quiet\n                    Suppress all messages except for errors\n                    (default: false)\n\n--retryAttempts\n                    Integer indicating the number of times a request should be automatically re-attempted before failing\n                    when a connection fails with one of the following errors `ECONNRESET`, `ENOTFOUND`, `ESOCKETTIMEDOUT`,\n                    ETIMEDOUT`, `ECONNREFUSED`, `EHOSTUNREACH`, `EPIPE`, `EAI_AGAIN`\n                    (default: 0)\n\n--retryDelay\n                    Integer indicating the back-off/break period between retry attempts (milliseconds)\n                    (default : 5000)\n\n--retryDelayBase\n                    The base number of milliseconds to use in the exponential backoff for operation retries. (s3)\n\n--scroll-with-post\n                    Use a HTTP POST method to perform scrolling instead of the default GET\n                    (default: false)\n\n--scrollId\n                    The last scroll Id returned from elasticsearch.\n                    This will allow dumps to be resumed used the last scroll Id &\n                    `scrollTime` has not expired.\n\n--scrollTime\n                    Time the nodes will hold the requested search in order.\n                    (default: 10m)\n\n--searchBody\n                    Preform a partial extract based on search results\n                    when ES is the input, default values are\n                      if ES > 5\n                        `'{\"query\": { \"match_all\": {} }, \"stored_fields\": [\"*\"], \"_source\": true }'`\n                      else\n                        `'{\"query\": { \"match_all\": {} }, \"fields\": [\"*\"], \"_source\": true }'`\n                    [As of 6.68.0] If the searchBody is preceded by a @ symbol, elasticdump will perform a file lookup\n                    in the location specified. NB: File must contain valid JSON\n\n--searchBodyTemplate\n                    A method/function which can be called to the searchBody\n                        doc.searchBody = { query: { match_all: {} }, stored_fields: [], _source: true };\n                    May be used multiple times.\n                    Additionally, searchBodyTemplate may be performed by a module. See [searchBody Template](#search-template) below.\n\n--searchWithTemplate\n                    Enable to use Search Template when using --searchBody\n                    If using Search Template then searchBody has to consist of \"id\" field and \"params\" objects\n                    If \"size\" field is defined within Search Template, it will be overridden by --size parameter\n                    See https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html for\n                    further information\n                    (default: false)\n\n--size\n                    How many objects to retrieve\n                    (default: -1 -> no limit)\n\n--skip-existing\n                    Skips resource_already_exists_exception when enabled and exit with success\n                    (default: false)\n\n--sourceOnly\n                    Output only the json contained within the document _source\n                    Normal: {\"_index\":\"\",\"_type\":\"\",\"_id\":\"\", \"_source\":{SOURCE}}\n                    sourceOnly: {SOURCE}\n                    (default: false)\n\n--support-big-int\n                    Support big integer numbers\n\n--templateRegex\n                    Regex used to filter templates before passing to the output transport\n                    (default: ((metrics|logs|\\..+)(-.+)?)\n\n--timeout\n                    Integer containing the number of milliseconds to wait for\n                    a request to respond before aborting the request. Passed\n                    directly to the request library. Mostly used when you don't\n                    care too much if you lose some data when importing\n                    but would rather have speed.\n\n--tlsAuth\n                    Enable TLS X509 client authentication\n\n--toLog\n                    When using a custom outputTransport, should log lines\n                    be appended to the output stream?\n                    (default: true, except for `$`)\n\n--transform\n                    A method/function which can be called to modify documents\n                    before writing to a destination. A global variable 'doc'\n                    is available.\n                    Example script for computing a new field 'f2' as doubled\n                    value of field 'f1':\n                        doc._source[\"f2\"] = doc._source.f1 * 2;\n                    May be used multiple times.\n                    Additionally, transform may be performed by a module. See [Module Transform](#module-transform) below.\n\n--type\n                    What are we exporting?\n                    (default: data, options: [index, settings, analyzer, data, mapping, policy, alias, template, component_template, index_template])\n\n--versionType\n                    Elasticsearch versioning types. Should be `internal`, `external`, `external_gte`, `force`.\n                    NB : Type validation is handled by the bulk endpoint and not by elasticsearch-dump\n\n--openSearchServerless\n                    Set to true to run dump from AWS OpenSearch serverless collection.\n                    (default : false)\n\nAWS specific options\n--------------------\n--awsAccessKeyId and --awsSecretAccessKey\n                    When using Amazon Elasticsearch Service protected by\n                    AWS Identity and Access Management (IAM), provide\n                    your Access Key ID and Secret Access Key.\n                    --sessionToken can also be optionally provided if using temporary credentials\n\n--awsChain\n                    Use [standard](https://aws.amazon.com/blogs/security/a-new-and-standardized-way-to-manage-credentials-in-the-aws-sdks/)\n                    location and ordering for resolving credentials including environment variables,\n                    config files, EC2 and ECS metadata locations _Recommended option for use with AWS_\n\n--awsIniFileName\n                    Override the default aws ini file name when using --awsIniFileProfile\n                    Filename is relative to ~/.aws/\n                    (default: config)\n\n--awsIniFileProfile\n                    Alternative to --awsAccessKeyId and --awsSecretAccessKey,\n                    loads credentials from a specified profile in aws ini file.\n                    For greater flexibility, consider using --awsChain\n                    and setting AWS_PROFILE and AWS_CONFIG_FILE\n                    environment variables to override defaults if needed\n\n--awsRegion\n                    Sets the AWS region that the signature will be generated for\n                    (default: calculated from hostname or host)\n\n--awsService\n                    Sets the AWS service that the signature will be generated for\n                    (default: calculated from hostname or host)\n\n--awsUrlRegex\n                    Overrides the default regular expression that is used to validate AWS urls that should be signed\n                    (default: ^https?:\\/\\/.*\\.amazonaws\\.com.*$)\n\n--s3ACL\n                    S3 ACL: private | public-read | public-read-write | authenticated-read | aws-exec-read |\n                    bucket-owner-read | bucket-owner-full-control [default private]\n\n--s3AccessKeyId\n                    AWS access key ID\n\n--s3SessionToken\n                    AWS session token in case of using temporary credentials\n\n--s3Compress\n                    gzip data before sending to s3\n\n--s3Configs\n                    Set all s3 constructor configurations\n                    A escaped JSON string or file can be supplied. File location must be prefixed with the @ symbol\n                    (default: null)\n\n--s3Endpoint\n                    AWS endpoint that can be used for AWS compatible backends such as\n                    OpenStack Swift and OpenStack Ceph\n\n--s3ForcePathStyle\n                    Force path style URLs for S3 objects [default false]\n\n--s3Options\n                    Set all s3 parameters shown here https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#createMultipartUpload-property\n                    A escaped JSON string or file can be supplied. File location must be prefixed with the @ symbol\n                    (default: null)\n\n--s3Region\n                    AWS region\n\n--s3SSEKMSKeyId\n                    KMS Id to be used with aws:kms uploads\n\n--s3SSLEnabled\n                    Use SSL to connect to AWS [default true]\n\n--s3SecretAccessKey\n                    AWS secret access key\n\n--s3ServerSideEncryption\n                    Enables encrypted uploads\n\n--s3StorageClass\n                    Set the Storage Class used for s3\n                    (default: STANDARD)\n```\n\n## Elasticsearch's Scroll API\nElasticsearch provides a [scroll](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html) API to fetch all documents of an index starting from (and keeping) a consistent snapshot in time, which we use under the hood.  This method is safe to use for large exports since it will maintain the result set in cache for the given period of time.\n\nNOTE: only works for `--output`\n\n## Bypassing self-sign certificate errors\n\nSet the environment `NODE_TLS_REJECT_UNAUTHORIZED=0` before running elasticdump\n\n```bash\n# An alternative method of passing environment variables before execution\n# NB : This only works with linux shells\nNODE_TLS_REJECT_UNAUTHORIZED=0 elasticdump --input=\"https://localhost:9200\" --output myfile\n```\n\n## MultiElasticDump\n\nThis package also ships with a second binary, `multielasticdump`.  This is a wrapper for the normal elasticdump binary, which provides a limited option set, but will run elasticdump in parallel across many indexes at once. It runs a process which forks into `n` (default your running host's # of CPUs) subprocesses running elasticdump.\n\nThe limited option set includes:\n\n- `parallel`:   `os.cpus()`,\n- `match`:      `'^.*$'`,\n- `matchType`:      `alias`,\n- `order`:      `'asc'`,\n- `input`:      `null`,\n- `output`:     `null`,\n- `scrollTime`: `'10m'`,\n- `timeout`: `null`,\n- `limit`:      `100`,\n- `offset`:     `0`,\n- `size`:       `-1`,\n- `direction`:   `dump`,\n- `ignoreType`:   ``\n- `includeType`:   ``\n- `prefix`:   `'''`\n- `suffix`:   `''`\n- `interval`:     `1000`\n- `searchBody`: `null`\n- `transform`: `null`\n- `support-big-int`: `false`\n- `big-int-fields`: ``\n- `ignoreChildError`: `false`\n\n\nIf the `--direction` is `dump`, which is the default, `--input` MUST be a URL for the base location of an ElasticSearch server (i.e. `http://localhost:9200`) and `--output` MUST be a directory. Each index that does match will have a data, mapping, and analyzer file created.\n\nFor loading files that you have dumped from multi-elasticsearch, `--direction` should be set to `load`, `--input` MUST be a directory of a multielasticsearch dump and `--output` MUST be a Elasticsearch server URL.\n\n`--parallel` is how many forks should be run simultaneously and `--match` is used to filter which indexes should be dumped/loaded (regex).\n\n`--ignoreType` allows a type to be ignored from the dump/load. Six options are supported. `data,mapping,analyzer,alias,settings,template`. Multi-type support is available, when used each type must be comma(,)-separated\nand `interval` allows control over the interval for spawning a dump/load for a new index. For small indices this can be set to `0` to reduce delays and optimize performance\ni.e analyzer,alias types are ignored by default\n\n`--includeType` allows a type to be included in the dump/load. Six options are supported - `data,mapping,analyzer,alias,settings,template`. \n\n`--ignoreChildError` allows multi-elasticdump to continue if a child throws an error.\n\n`--matchType`  allows multi-elasticdump to fetch indices from the specified elasticsearch endpoint. Two options are supported - `alias,datastream`\n\n\nNew options, `--suffix` allows you to add a suffix to the index name being created e.g. `es6-${index}` and\n`--prefix` allows you to add a prefix to the index name e.g. `${index}-backup-2018-03-13`.\n`--order` accepts `asc` or `desc` and allows the indexes/aliases to be sorted before processing is performed\n\n## Usage Examples\n\n```bash\n# backup ES indices & all their type to the es_backup folder\nmultielasticdump \\\n  --direction=dump \\\n  --match='^.*$' \\\n  --input=http://production.es.com:9200 \\\n  --output=/tmp/es_backup\n\n# Only backup ES indices ending with a prefix of `-index` (match regex). \n# Only the indices data will be backed up. All other types are ignored.\n# NB: analyzer & alias types are ignored by default\nmultielasticdump \\\n  --direction=dump \\\n  --match='^.*-index$'\\\n  --input=http://production.es.com:9200 \\\n  --ignoreType='mapping,settings,template' \\\n  --output=/tmp/es_backup\n```\n\n## Custom Matcher - MultiElasticDump\n\nThe default matcher for `multielasticdump` is regex based and won't handle complex conditions or business rules.\nSupport was added for defining custom matchers.\n\nWhen specifying the `customMatcher` option, prefix the value with `@` (a curl convention) to load matcher file\n\n\n ```bash\n multielasticdump \\\n  --direction=dump \\\n  --customMatcher='@./customMatcher/backup.js'\\\n  --input=http://production.es.com:9200 \\\n  --ignoreType='mapping,settings,template' \\\n  --output=/tmp/es_backup\n```\n\nThe only requirement for this module is that it must define a test function.\n\n```javascript\nmodule.exports = {\n  test: function (indexName) {\n    // determine if the index should be loaded/dumped.\n    // must return a boolen(true/false)\n  }\n};\n```\n\n\n## Module Transform\n\nWhen specifying the `transform` option, prefix the value with `@` (a curl convention) to load the top-level function which is called with the document and the parsed arguments to the module.\n\nUses a pseudo-URL format to specify arguments to the module as follows. Given:\n\n```bash\nelasticdump --transform='@./transforms/my-transform?param1=value&param2=another-value'\n```\n\nwith a module at `./transforms/my-transform.js` with the following:\n\n```javascript\nmodule.exports = function(doc, options) {\n  // do something to doc\n};\n```\n\nwill load module `./transforms/my-transform.js`, and execute the function with `doc` and `options` = `{\"param1\": \"value\", \"param2\": \"another-value\"}`.\n\nAn example transform for anonymizing data on-the-fly can be found in the `transforms` folder.\n\n## searchBody Template\n\nWhen specifying the `searchBodyTemplate` option, prefix the value with `@` (a curl convention) to load the top-level function which is called with the document and the parsed arguments to the module.\n\nUses a pseudo-URL format to specify arguments to the module as follows. Given:\n\n```bash\nelasticdump --searchBodyTemplate='@./templates/my-template?param1=value&param2=another-value'\n```\n\nwith a module at `./transforms/my-transform.js` with the following:\n\n```javascript\nmodule.exports = function(doc, options) {\n  // result must be added to doc.searchBody\n  doc.searchBody = {}\n};\n```\n\nwill load module `./templates/my-template.js', and execute the function with `doc` and `options` = `{\"param1\": \"value\", \"param2\": \"another-value\"}`.\n\nAn example template for modifying dates using a simple templating engine is available in the `templates` folder.\n\n## How Elasticdump handles Nested Data in CSV\n\nElasticdump is capable of reading/writing nested data, but in an *_opinionated way*. This is to reduce complexity while parsing/saving CSVs\nThe format flattens all nesting to a single level (an example of this is shown below)\n\n```json\n{\n   \"elasticdump\":{\n      \"version\":\"6.51.0\",\n      \"formats\":[\n         \"json\",\n         \"csv\"\n      ]\n   },\n   \"contributors\":[\n      {\n         \"name\":\"ferron\",\n         \"id\":3\n      }\n   ],\n   \"year\":112\n}\n```\n\n\n\nOutput format\n\n```json\n{\n  \"elasticdump\":\"{\\\"version\\\":\\\"6.51.0\\\",\\\"formats\\\":[\\\"json\\\",\\\"csv\\\"]}\",\n  \"contributors\":\"{\\\"contributors\\\":[{\\\"name\\\":\\\"ferron\\\",\\\"id\\\":3}]}\",\n  \"year\":2020\n}\n```\n\n**Notice that the data is flattened to 1 level**. Object keys are used for headers and values as row data.\nThis might not work with existing nested data formats, but that's the format that was chosen for `elasticdump`\nbecause of its simplicity. This detection is disabled by default, to enable use the `--csvHandleNestedData` flag\n\n\n## Notes\n\n- This tool is likely to require Elasticsearch version 1.0.0 or higher\n- Elasticdump (and Elasticsearch in general) will create indices if they don't exist upon import\n- When exporting from elasticsearch, you can export an entire index (`--input=\"http://localhost:9200/index\"`) or a type of object from that index (`--input=\"http://localhost:9200/index/type\"`). This requires ElasticSearch 1.2.0 or higher\n- If the path to our elasticsearch installation is in a sub-directory, the index and type must be provided with a separate argument (`--input=\"http://localhost:9200/sub/directory --input-index=index/type\"`).Using `--input-index=/` will include all indices and types.\n- We can use the `put` method to write objects.  This means new objects will be created and old objects with the same ID be updated\n- The `file` transport will not overwrite any existing files by default, it will throw an exception if the file already exists. You can make use of `--overwrite` instead.\n- If you need basic http auth, you can use it like this: `--input=http://name:password@production.es.com:9200/my_index`\n- If you choose a stdio output (`--output=$`), you can also request a more human-readable output with `--format=human`\n- If you choose a stdio output (`--output=$`), all logging output will be suppressed\n- If you are using Elasticsearch version 6.0.0 or higher the `offset` parameter is no longer allowed in the scrollContext\n- ES 6.x.x & higher no longer support the `template` property for `_template`. All templates prior to ES 6.0 has to be upgraded to use `index_patterns`\n- ES 7.x.x & higher no longer supports `type` property. All templates prior to ES 6.0 has to be upgraded to remove the type property\n- ES 5.x.x ignores offset (from) parameter in the search body. All records will be returned\n- ES 6.x.x [from](https://www.elastic.co/guide/en/elasticsearch/reference/6.8/breaking-changes-6.0.html#_scroll) parameter can no longer be used in the search request body when initiating a scroll\n-  Index templates has been deprecated and will be replaced by the composable templates introduced in Elasticsearch 7.8.\n- Ensure JSON in the searchBody properly escaped to avoid parsing issues : https://www.freeformatter.com/json-escape.html\n- Dropped support for Node.JS 8 in Elasticdump v6.32.0. Node.JS 10+ is now required.\n- Elasticdump v6.42.0 added support for CSV import/export using the [fast-csv](https://c2fo.io/fast-csv/) library \n- Elasticdump v6.68.0 added support for specifying a file containing the searchBody\n- Elasticdump v6.85.0 added support for ignoring auto columns in CSV\n- Elasticdump v6.86.0 added support for searchBodyTemplate which allows the searchBody to be transformed\n- Elasticdump v6.110.1 added support for AWS OpenSearch serverless collection. Note: by default, [AWS OpenSearch serverless does not support `/_search?scroll` API and PUT `_bulk`](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-genref.html#serverless-operations). As a workaround, the dump is implemented using `_search` and POST `_bulk` API only. This may affect the performance of the dump. \n  \n\n## Articles on Elasticdump\n- [A practical Guide to working with Elasticdump](https://blog.logrocket.com/a-practical-guide-to-working-with-elasticdump/)\n- [Elasticdump to Backup & Restore Indexes](https://fitdevops.in/elasticdump-to-backup-restore-indexes/)\n- [Moving Elasticsearch Indexes with Elasticdump](https://apassionatechie.wordpress.com/2019/07/03/moving-elasticsearch-indexes-with-elasticdump/)\n- [Elasticsearch backup and restore](https://www.netvizura.com/blog/elasticsearch-backup-and-restore)\n- [Guide to Elasticdump - Moving and Saving Elasticsearch Indices](https://stackabuse.com/guide-to-elasticdump-moving-and-saving-elasticsearch-indices/)\n- [Use elasticsearch-dump to migrate data](https://www.alibabacloud.com/help/en/elasticsearch/latest/elasticsearch-dump-use)\n\n\nInspired by https://github.com/crate/elasticsearch-inout-plugin and https://github.com/jprante/elasticsearch-knapsack\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "customMatcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-test-helper.yml",
          "type": "blob",
          "size": 0.53125,
          "content": "# To aid in running tests locally. NOT for using elasicdump as a Docker container\nversion: '2.1'\nservices:\n  elasticsearch:\n    ports:\n      - \"9200:9200\"\n    image: 'docker.elastic.co/elasticsearch/elasticsearch:5.3.0'\n    environment:\n      http.host: '0.0.0.0'\n      transport.host: '127.0.0.1'\n      xpack.security.enabled: 'false' # ES5 ships with security on by default which isn't configured in unit tests \n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9200\"]\n      interval: 2s\n      timeout: 2s\n      retries: 5\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.5283203125,
          "content": "version: \"2\"\n\nservices:\n\n  es_2:\n    image: elasticsearch:2.4\n    ports:\n    - 9200:9200\n\n  es_5:\n    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.4\n    ports:\n    - 9200:9200\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n      - xpack.monitoring.enabled=false\n      - xpack.watcher.enabled=false\n      - ES_JAVA_OPTS=-Xms1g -Xmx1g\n\n  es_6:\n    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0\n    ports:\n    - 9200:9200\n    environment:\n      - discovery.type=single-node"
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 0.1416015625,
          "content": "#!/usr/bin/dumb-init /bin/sh\n\nset -e\n\n# first arg is `-f` or `--some-option`\nif [ \"${1#-}\" != \"$1\" ]; then\n\tset -- elasticdump \"$@\"\nfi\n\nexec \"$@\""
        },
        {
          "name": "elasticdump.jpg",
          "type": "blob",
          "size": 31.8046875,
          "content": null
        },
        {
          "name": "elasticdump.js",
          "type": "blob",
          "size": 2.7041015625,
          "content": "const http = require('http')\nconst https = require('https')\nconst TransportProcessor = require('./lib/processor')\nconst { promisify } = require('util')\nconst ioHelper = require('./lib/ioHelper')\nconst _ = require('lodash')\n\nclass ElasticDump extends TransportProcessor {\n  constructor (input, output, options) {\n    super()\n    if (arguments.length === 1 && _.isPlainObject(arguments[0])) {\n      options = input\n      output = options.output\n      input = options.input\n    }\n    this.input = input\n    this.output = output\n    this.options = options\n    this.modifiers = []\n    this.sModififiers = []\n\n    if (output !== '$' && (this.options.toLog === null || this.options.toLog === undefined)) {\n      this.options.toLog = true\n    }\n\n    this.validationErrors = this.validateOptions()\n\n    if (this.options.searchBodyTemplate) {\n      this.sModififiers = this.generateModifiers(this.options.searchBodyTemplate)\n      const state = {}\n      this.applyModifiers([state], this.sModififiers)\n      this.options.searchBody = state.searchBody\n    }\n\n    if (options.maxSockets) {\n      this.log(`globally setting maxSockets=${options.maxSockets}`)\n      http.globalAgent.maxSockets = options.maxSockets\n      https.globalAgent.maxSockets = options.maxSockets\n    }\n\n    ioHelper(this, 'input')\n    ioHelper(this, 'output')\n\n    if (this.options.type === 'data' && this.options.transform) {\n      this.modifiers = this.generateModifiers(this.options.transform)\n    }\n  }\n\n  dump (callback, continuing, limit, offset, totalWrites) {\n    if (this.validationErrors.length > 0) {\n      this.emit('error', { errors: this.validationErrors })\n      callback(new Error('There was an error starting this dump'))\n      return\n    }\n\n    // promisify helpers\n    this.get = promisify(this.output.get).bind(this.input)\n    this.set = promisify(this.output.set).bind(this.output)\n\n    if (!limit) { limit = this.options.limit }\n    if (!offset) { offset = this.options.offset }\n    if (!totalWrites) { totalWrites = 0 }\n\n    if (continuing !== true) {\n      this.log('starting dump')\n\n      if (this.options.offset) {\n        this.log(`Warning: offsetting ${this.options.offset} rows.`)\n        this.log('  * Using an offset doesn\\'t guarantee that the offset rows have already been written, please refer to the HELP text.')\n      }\n      if (this.modifiers.length) {\n        this.log(`Will modify documents using these scripts: ${this.options.transform}`)\n      }\n    }\n\n    this._loop(limit, offset, totalWrites)\n      .then((totalWrites) => {\n        if (typeof callback === 'function') { return callback(null, totalWrites) }\n      }, (error) => {\n        if (typeof callback === 'function') { return callback(error/*, totalWrites */) }\n      })\n  }\n}\n\nmodule.exports = ElasticDump\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.6865234375,
          "content": "{\n  \"author\": \"Evan Tahler <evantahler@gmail.com>\",\n  \"name\": \"elasticdump\",\n  \"description\": \"import and export tools for elasticsearch\",\n  \"version\": \"6.115.0\",\n  \"license\": \"Apache-2.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/elasticsearch-dump/elasticsearch-dump.git\"\n  },\n  \"main\": \"elasticdump.js\",\n  \"keywords\": [\n    \"elasticsearch\",\n    \"dump\",\n    \"elasticdump\",\n    \"import\",\n    \"export\",\n    \"transfer\",\n    \"migrate\",\n    \"migration\",\n    \"elasitic\",\n    \"cluster\",\n    \"elastic-dump\",\n    \"elastic dump\"\n  ],\n  \"engines\": {\n    \"node\": \">=10.0.0\"\n  },\n  \"dependencies\": {\n    \"async\": \"^2.6.4\",\n    \"aws-sdk\": \"2.1472.0\",\n    \"aws4\": \"^1.12.0\",\n    \"big.js\": \"^5.2.2\",\n    \"bytes\": \"^3.1.2\",\n    \"delay\": \"^5.0.0\",\n    \"extends-classes\": \"1.0.5\",\n    \"fast-csv\": \"4.3.6\",\n    \"http-status\": \"^1.5.1\",\n    \"ini\": \"^2.0.0\",\n    \"JSONStream\": \"npm:@search-dump/jsonstream@^1.4.0\",\n    \"lodash\": \"^4.17.21\",\n    \"lossless-json\": \"^1.0.5\",\n    \"minimist\": \"^1.2.8\",\n    \"p-queue\": \"^6.6.2\",\n    \"request\": \"npm:@cypress/request@>=3.0.1 <3.0.6\",\n    \"requestretry\": \"^7.1.0\",\n    \"s3-stream-upload\": \"2.0.2\",\n    \"s3urls\": \"^1.5.2\",\n    \"semver\": \"7.5.4\",\n    \"socks5-http-client\": \"^1.0.4\",\n    \"socks5-https-client\": \"^1.2.1\"\n  },\n  \"devDependencies\": {\n    \"jsonpath\": \"^1.1.1\",\n    \"mocha\": \"^6.2.2\",\n    \"should\": \"^13.2.3\",\n    \"standard\": \"^17.1.0\"\n  },\n  \"standard\": {\n    \"globals\": [\n      \"describe\",\n      \"it\",\n      \"describe\",\n      \"before\",\n      \"beforeEach\",\n      \"after\",\n      \"afterEach\"\n    ]\n  },\n  \"bin\": {\n    \"elasticdump\": \"bin/elasticdump\",\n    \"multielasticdump\": \"bin/multielasticdump\"\n  },\n  \"scripts\": {\n    \"pretest\": \"standard\",\n    \"test\": \"mocha\"\n  }\n}\n"
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "transforms",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}