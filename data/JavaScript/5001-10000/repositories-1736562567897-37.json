{
  "metadata": {
    "timestamp": 1736562567897,
    "page": 37,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Laverna/laverna",
      "stars": 9202,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bowerrc",
          "type": "blob",
          "size": 0.04296875,
          "content": "{\n    \"directory\": \"app/bower_components\"\n}\n"
        },
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.25390625,
          "content": "engines:\n    eslint:\n        enabled: true\n    duplication:\n        enabled: true\n        config :\n            languages:\n                - javascript\n\nlanguages:\n    JavaScript: true\n\nratings:\n    paths:\n        - app/scripts/**\n\nexclude_paths:\n    - test/**\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4052734375,
          "content": "# EditorConfig helps developers define and maintain consistent\n# coding styles between different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n\n[*]\n\n# Change these settings to your own preference\nindent_style = space\nindent_size = 4\n\n# We recommend you to keep these unchanged\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0107421875,
          "content": "* text=auto"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.154296875,
          "content": "\n# Cordova build configs and keys\nbuild.json\n**/*.keystore\n\n# Compiled files\napp/styles/**/*.css\ndist/\ncordova/\nrelease/\n.tmp/\n\n# Bower\napp/bower_components\ntest/bower_components\n.bower-cache\n.bower-registry\n.bower-tmp\n\n# Test reports (Nightwatch)\n.reports\ntest/visual/screenshots\n\n# Old files that should not appear again if someone pushes them\napp/scripts/libs/remotestorage.js\napp/scripts/apps/settings/show/encryptView.js\napp/scripts/apps/settings/show/encryptTemplate.html\napp/scripts/helpers/syncStatus.js\n\n# Intellij\n.idea\n\n# Created by https://www.gitignore.io/api/node,vim,osx,linux,windows\n\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\njspm_packages\n\n# Optional npm cache directory\n.npm\n\n# Optional REPL history\n.node_repl_history\n\n\n### Vim ###\n# swap\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n# session\nSession.vim\n# temporary\n.netrwhist\n*~\n# auto-generated tag files\ntags\n\n\n### OSX ###\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\r\r\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n\n### Windows ###\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.4912109375,
          "content": "{\n    \"node\": true,\n    \"browser\": true,\n    \"esnext\": true,\n    \"bitwise\": true,\n    \"camelcase\": true,\n    \"curly\": true,\n    \"eqeqeq\": true,\n    \"immed\": true,\n    \"indent\": 4,\n    \"latedef\": true,\n    \"newcap\": true,\n    \"noarg\": true,\n    \"quotmark\": \"single\",\n    \"regexp\": true,\n    \"undef\": true,\n    \"unused\": true,\n    \"strict\": true,\n    \"trailing\": true,\n    \"smarttabs\": true,\n    \"jquery\": true,\n    \"mocha\": true,\n    \"globals\": {\n        \"expect\": false,\n        \"define\": false\n    }\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.8837890625,
          "content": "language: node_js\nnode_js:\n    - 6\n    - 'stable'\nbefore_install:\n    - npm install -g gulp bower jshint\ninstall:\n    - npm install\n    - bower install\n    - cd test && bower install && cd ../\nscript:\n    - gulp build\n    - gulp --root dist &\n    - set -e\n    - '[ \"${TRAVIS_PULL_REQUEST}\" = \"false\" ] && gulp nightwatch --env ci; echo $? || false'\n    - sleep 1\n    - killall gulp\nafter_failure:\n    - killall gulp\naddons:\n    sauce_connect:\n        username:\n            secure: \"F2waNLSycvKfroVB0wIExO9dimxFCrdoKdhj3k8NzcB8a1OFfmu9JqGf+NIHUOXqW3r6LEOmtH522II3AsEAz2a5En+rzl83CVBYiYylYzvnnGZHgTMttemYWRqbH8pEYGA+o/m47NDJo4AbAJ3A5lQvHPKylbPVuuHMGgHwrdXgGAktw2mq15mo65LEhSVKRm08b6tB+AD1OesaZ//dzf/uhhmB6ukvXVI5CaGCJV13OVXHf1vIkutTqx3JrDwi2ErGhwTg/wc1ZKnWG7+EAKxsf0lfgNFCkAL3xS8309LyvrFDIoDCY0T3VeR0WDQtr+ryRDIcOROoo3Q2LUqqERD1W4a1Tsn3yxeEbyHzOPMo2o14AK04y3Alel+5en4V0hNEhDbSgV/pyzkrzZ1KVHNyNkZA5i1aCWG5rfO6oeVhPtUI/oAwom1Xa8FwvK96osbUmv5TDeax/dtMxYLtOZDJo6AZx6aVN7wqjDtLuYg0oZ7/+JAIaHfngxYgKE400sied6v2VNxYdqP+Duf2ZaiuOXfnnQB74/zy29uQtbztmAKuLF36/Wi1PWTBnezIo9vRLTzB8JVZ2echeJYbOpk5dqfnjAE2xwOiHzbqRfRvd699C+x9WCXgNZmySog7MEY5SJ31JqVfUzrhhSgo7xbpWfig9vNdExAcaDJpHSo=\"\n        access_key:\n            secure: \"yDTvc3TpWhwDLtF6LnVduEtfdi1lmA265XAAiirV2Hn/2NonOS4M5eW7j5RB9JY/psLpd9/l5SZZTIYxCxURrMBlxnHyOYlrNnA4aTXGVPulDECPmQFdXuMHJclnCx4GL/YOg5EXhsjD8EFB/ihavDaFr2740tuYet8KNqqB0RI5pkmp7RP8G3x3AiTu2zv72e5C0TukKBdCUpIhSX34ofsmvQ8KQ/DOAUK1MjNYxb55Mhf7MCgskC+bypzWZDuuOvM0w48OzwDuF6LBnHQCxvUmcUwuxRTuJNJZUFoOIEEP44r546fi0vzt9/1gLI2Qsc/YtuvSsPKquMb+iV1Rn8F77vGUN0woiYlcAAtrCIe+fk2Kl6FVNPY9KlldQZPwogLLwGpPN6h+kGVOgNBl0WSmiekDVbFDqo0TcNhlwkkpR8Iuy+WfWZI5l+pmZrBCnQIIFNd+SlLXlftp1aiaghBs6654tp+jULfUzjeL8yxBJpcsosi8+erpx4u7ldbtWi94z1LCstbU65nSPlEaKEmjGPWppFOL0nzORTT2trSil0WrQoAkBmsFkzxI7KOhFPoVuk26E4bY/o7Jz1Y2OGPYKdsZppB3pDDH6BxUYW/u5YLveEU64Kz6ixgDkOi3rHFrDiq81v7OKAINytqik6FV4N1zpsurQ2JUV9aPmf8=\"\n        tunnel_domains: localhost\n"
        },
        {
          "name": "CONTRIBUTE.md",
          "type": "blob",
          "size": 0.2978515625,
          "content": "Contribution\n================\nNote, all contributions should be done on `dev` branch.\n\n\n### Localizations\n----------------\n1. Copy ./app/locales/en and rename it to locale name - ./app/locales/[localeName]\n2. Open ./app/locales/[localeName]/translation.json\n3. Replace the values\n4. Make a *pull request*\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.333984375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1962890625,
          "content": "# Laverna - note taking web app\n\n[![Join the chat at https://gitter.im/Laverna/laverna](https://badges.gitter.im/Laverna/laverna.svg)](https://gitter.im/Laverna/laverna?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://travis-ci.org/Laverna/laverna.svg?branch=dev)](https://travis-ci.org/Laverna/laverna) [![devDependency Status](https://david-dm.org/Laverna/laverna/dev-status.svg)](https://david-dm.org/Laverna/laverna#info=devDependencies) [![Code Climate](https://codeclimate.com/github/Laverna/laverna/badges/gpa.svg)](https://codeclimate.com/github/Laverna/laverna)\n\nLaverna is a JavaScript note-taking web application with a Markdown editor and encryption support.  It's built to be an open source alternative to Evernote.\n\nThe application stores all your notes in your browser databases such as indexedDB or localStorage, which is good for security reasons, because only you have access to them.\n\n**Demo**: https://laverna.cc/ OR http://laverna.github.io/static-laverna\n\n## Features\n-----------\n\n* Markdown editor based on Pagedown\n* Manage your notes, even when you're offline\n* Secure client-side encryption\n* Synchronizes with cloud storage services (currently only with Dropbox and RemoteStorage)\n* Three editing modes: distraction free, preview, and normal mode\n* WYSIWYG control buttons\n* MathJax support\n* Syntax highlighting\n* No registration required\n* Web based\n* Keybindings\n\n## Tools\n\nOn the front-end this project uses JavaScript and the [Marionette JS](http://marionettejs.com/) framework while [Node JS](https://nodejs.org/en/), [Bower](https://bower.io/), and [Gulp.js](http://gulpjs.com/) are used on the back-end.  The test runner used is [karma](https://karma-runner.github.io/1.0/index.html) however,\ncontributors are free to utilize whatever testing tools they desire.\n\n\n## Installation\n---------------\nThere are several ways to start using Laverna:\n\n1. Open [laverna.cc][10] and start using it. No extra steps are needed.\n2. Use a desktop app.\n3. Use a prebuilt version from [Laverna/static-laverna][9] repository.\n4. Build it from the source code.\n\n### Desktop app installation\n---------------\nDownload the latest [Laverna release][13] for your operating system. After downloading the archive, you need to unpack it. Then, in the unpacked folder you need to run an executable (laverna.exe for Windows, laverna for Linux and Mac).\n\n#### Arch Linux (or derived distributions)\n\nThe package can be found [here](https://aur.archlinux.org/packages/laverna/). \n\nFor installation please use :\n\n```bash\n$ pacaur -S laverna\n```\n\nFor issue about installation please report [here](https://github.com/funilrys/PKGBUILD/issues/new) or contact [@funilrys](https://github.com/funilrys) on gitter [here](https://gitter.im/funilrys_/PKGBUILD)\n\n\n### Installation of a prebuilt version\n------------\n#### 1. Download\n\n```bash\n$ wget https://github.com/Laverna/static-laverna/archive/gh-pages.zip -O laverna.zip\n```\n\n#### 2. Unpack the downloaded archive\n\n```bash\n$ unzip laverna.zip\n```\n\n#### 3. Open index.html in a browser\nOpen in your favorite browser the index.html file which is located inside *laverna* directory.\n\n\n## Installation from source\n---------------\nTo install, do the following:\n\n#### 1. Install Git\n\nThis project requires that you have the latest version of git installed. To do so, see [Installing Git][14] (first-time users of git might want to check out the next section for configuring git).\n\n**Note:** Windows users will have to set the PATH variable for git after installing it.\n\n\n\n#### 2. Clone repository:\n\nFor those who plan on contributing to the project's development , hit the fork button at the top of the page first (others can go on to the next step). Open a terminal, or command line, and navigate to the desired location of where you want to download the repository. Then enter the following commands to clone the repo:\n\n```bash\n# clone the repository\n$ git clone git@github.com:Laverna/laverna.git\n# navigate to the project directory\ncd laverna\n```\n\n**3. Ensure you have the node.js platform installed.** (See OS-specific instructions on their [website][8]).\n\n**4. Ensure you have the bower and gulp packages installed** (locally and globally):\n\n```bash\n$ npm install bower\n$ npm install -g bower\n$ npm install gulp\n$ npm install -g gulp\n```\n\n#### 5. Install Laverna's dependencies:\n\n```bash\n$ npm install\n$ bower install\n$ cd test\n$ bower install\n$ cd ..\n```\n\n#### 6. Build minified version of Laverna:\n\n```bash\n$ gulp build\n```\n\n#### 7. Start Laverna:\n\n```bash\n$ gulp\n```\n\n## MacOS notes on accepting incoming connections\nBecause currently Laverna does not sign it's Mac packages, if you want to avoid the \"Accept incoming connections\" warning message everytime the application is launched, you can run the following commands. Assuming your current direction contains the laverna application:\n\n```bash\ncodesign -s - -f ./laverna.app/Contents/Frameworks/Electron\\ Framework.framework\ncodesign -s - -f ./laverna.app/Contents/Frameworks/Electron\\ Helper\\ EH.app \ncodesign -s - -f ./laverna.app/Contents/Frameworks/Electron\\ Helper\\ NP.app\ncodesign -s - -f ./laverna.app/Contents/Frameworks/Electron\\ Helper.app \ncodesign -s - -f ./laverna.app/Contents/Frameworks/Mantle.framework \ncodesign -s - -f ./laverna.app/Contents/Frameworks/ReactiveCocoa.framework \ncodesign -s - -f ./laverna.app/Contents/Frameworks/Squirrel.framework \ncodesign --verify -vv ./laverna.app\n```\n\n## Do you have questions?\n---------------\nPlease have a look in our [wiki][15].\n\n## Support\n---------------\n\n* Hit star button on [github][6]\n* Like us on [alternativeto.net][5]\n* [Contribute][7]\n\n### Coding Style Guidelines\n\nFor those wanting to contribute code, we ask that you use either plain JavaScript or the Marionette.js framework. (For more details on the preferred coding style see [.editorconfig](https://github.com/Laverna/laverna/blob/master/.editorconfig)). Also, all experimental changes are being pushed on the **dev** branch, so any feature changes are preferred to be done on either this branch or a branch that uses the dev branch as its parent.  \n\n\n## Donation:\n-----------\n\n* [Bitcoin][3]\n* [BountySource][12]\n\n## Security\n--------------\nLaverna uses the [SJCL] [1] library implementing the AES algorithm. You can review the code at:\n\n* https://github.com/Laverna/laverna/blob/master/app/scripts/classes/encryption.js\n* https://github.com/Laverna/laverna/blob/master/app/scripts/apps/encryption/\n\n## License\n--------------\nPublished under [MPL-2.0 License][11].\n\nLaverna uses a lot of other libraries and each of these [libraries use different licenses][2].\n\n[1]: http://bitwiseshiftleft.github.io/sjcl/\n[2]: https://github.com/Laverna/laverna/blob/master/bower.json\n[3]: http://blockchain.info/address/1Q68HfLjNvWbLFr3KGK6nfXg7vc3hpDr11\n[4]: https://www.gittip.com/Laverna/\n[5]: http://alternativeto.net/software/laverna/\n[6]: https://github.com/Laverna/laverna\n[7]: https://github.com/Laverna/laverna/blob/master/CONTRIBUTE.md\n[8]: http://nodejs.org\n[9]: https://github.com/Laverna/static-laverna/archive/gh-pages.zip\n[10]: https://laverna.cc/index.html\n[11]: https://www.mozilla.org/en-US/MPL/2.0/\n[12]: https://www.bountysource.com/teams/laverna\n[13]: https://github.com/Laverna/laverna/releases\n[14]: https://git-scm.com/book/en/v2\n[15]: https://github.com/Laverna/laverna/wiki\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 1.5673828125,
          "content": "{\n  \"name\": \"laverna\",\n  \"version\": \"0.7.51\",\n  \"license\": \"MPL-2.0\",\n  \"dependencies\": {\n    \"backbone\": \"~1.3.3\",\n    \"backbone.babysitter\": \"~0.1.12\",\n    \"backbone.marionette\": \"marionette#~2.4.3\",\n    \"backbone.radio\": \"~1.0.5\",\n    \"Blob\": \"git://github.com/eligrey/Blob.js\",\n    \"bluebird\": \"~3.4.0\",\n    \"blueimp-canvas-to-blob\": \"git://github.com/blueimp/JavaScript-Canvas-to-Blob#~2.1.1\",\n    \"bootstrap\": \"~3.3.6\",\n    \"device.js\": \"git://github.com/matthewhudson/device.js#0.2.7\",\n    \"dropzone\": \"~4.3.0\",\n    \"enquire\": \"~2.1.2\",\n    \"FileSaver\": \"*\",\n    \"fuse\": \"~2.3.0\",\n    \"hammerjs\": \"~2.0.8\",\n    \"i18next\": \"~3.4.1\",\n    \"jquery\": \"~3.1.0\",\n    \"localforage\": \"~1.4.2\",\n    \"MathJax\": \"components/MathJax#~2.6.0\",\n    \"modernizr\": \"~2.8.3\",\n    \"mousetrap\": \"~1.6.0\",\n    \"q\": \"v1.4.1\",\n    \"remotestorage.js\": \"git://github.com/remotestorage/remotestorage.js#0.12.1\",\n    \"requirejs\": \"~2.2.0\",\n    \"requirejs-text\": \"~2.0.15\",\n    \"sjcl\": \"~1.0.3\",\n    \"to-markdown\": \"#jquery\",\n    \"tv4\": \"~1.2.7\",\n    \"underscore\": \"~1.8.3\",\n    \"xregexp\": \"~3.1.1\",\n    \"jszip\": \"Stuk/jszip#~2.5.0\",\n    \"markdown-it-imsize\": \"~2.0.1\",\n    \"markdown-it-math\": \"~4.0.0\",\n    \"markdown-it\": \"~7.0.0\",\n    \"codemirror\": \"~5.17.0\",\n    \"prism\": \"~1.5.1\",\n    \"markdown-it-sanitizer\": \"~0.4.1\",\n    \"markdown-it-hashtag\": \"~0.4.0\",\n    \"xss\": \"^0.2.13\",\n    \"i18next-xhr-backend\": \"^1.0.1\",\n    \"fastclick\": \"^1.0.6\",\n    \"jquery-hammerjs\": \"jquery.hammer.js#^2.0.0\"\n  },\n  \"devDependencies\": {},\n  \"resolutions\": {\n    \"backbone\": \"~1.3.3\",\n    \"underscore\": \"~1.8.3\",\n    \"jquery\": \"~3.1.0\"\n  }\n}\n"
        },
        {
          "name": "config.xml",
          "type": "blob",
          "size": 1.3369140625,
          "content": "<?xml version='1.0' encoding='utf-8'?>\n<widget id=\"<%= id %>\" version=\"<%= version %>\" xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\">\n    <name>Laverna</name>\n    <description>\n        Open source note taking application\n    </description>\n    <author email=\"lavernaproject@gmail.com\" href=\"https://github.com/Laverna/laverna\">\n        Laverna project\n    </author>\n    <feature name=\"http://api.phonegap.com/1.0/device\" />\n    <preference name=\"permissions\" value=\"none\" />\n    <preference name=\"orientation\" value=\"default\" />\n    <preference name=\"target-device\" value=\"universal\" />\n    <preference name=\"fullscreen\" value=\"true\" />\n    <preference name=\"webviewbounce\" value=\"true\" />\n    <preference name=\"prerendered-icon\" value=\"true\" />\n    <preference name=\"stay-in-webview\" value=\"false\" />\n    <preference name=\"ios-statusbarstyle\" value=\"black-opaque\" />\n    <preference name=\"detect-data-types\" value=\"true\" />\n    <preference name=\"exit-on-suspend\" value=\"false\" />\n    <preference name=\"show-splash-screen-spinner\" value=\"true\" />\n    <preference name=\"auto-hide-splash-screen\" value=\"true\" />\n    <preference name=\"disable-cursor\" value=\"false\" />\n    <preference name=\"android-minSdkVersion\" value=\"14\" />\n    <preference name=\"android-installLocation\" value=\"auto\" />\n    <access origin=\"http://127.0.0.1*\" />\n</widget>\n"
        },
        {
          "name": "electron.js",
          "type": "blob",
          "size": 9.400390625,
          "content": "'use strict';\n\nconst electron        = require('electron'),\n    windowStateKeeper = require('electron-window-state'),\n    path              = require('path'),\n    openUrl           = require('open');\n\nconst {app, BrowserWindow, Menu, Tray, protocol} = electron;\n\nlet argv        = require('minimist')(process.argv.slice(1)),\n    contextMenu = require('electron-context-menu')({}),\n    win         = null,\n    appHelper;\n\n// Show command line help\nif (argv.help || argv.h) {\n    console.log('Usage: laverna [options]\\r\\n');\n    console.log('--help', 'Show this help');\n    console.log('--dev ', 'Show developer tools automatically on start');\n    console.log('--tray', 'Hide to tray on start');\n    console.log(\n        '--data-dir',\n        'Directory where data is stored.',\n        'Example: laverna --data-dir=../data'\n    );\n\n    return app.quit();\n}\n\n// Allow to change the directory where the data is stored\nif (argv['data-dir'] && argv['data-dir'].trim()) {\n    let dataDir = argv['data-dir'].trim();\n\n    // The same or parent directory\n    if (dataDir.search(/^\\./) > - 1) {\n\n        // Always store data in a separate directory\n        dataDir += (dataDir.search(/^\\.{1,2}$/) > -1 ? '/laverna-data' : '');\n\n        dataDir = path.join(__dirname, dataDir);\n    }\n\n    app.setPath('userData', path.normalize(dataDir));\n}\n\nappHelper = {\n\n    // The page which will be loaded in the window\n    page: 'http://localhost:9000/',\n\n    // Icon of the app\n    icon: path.join(__dirname, '/dist/images/icon/',\n      process.platform === 'darwin' ? 'IconMenubarTemplate.png' : 'icon-120x120.png'\n    ),\n\n    // The main menu\n    menu: [\n        {\n            label   : '&File',\n            submenu : [\n                {\n                    label       : 'Quit',\n                    accelerator : 'CmdOrCtrl+Q',\n                    click       : function() {\n                        app.quit();\n                    }\n                }\n            ]\n        },\n        {\n            label: '&Edit',\n            submenu: [\n                {\n                    label       : 'Undo',\n                    accelerator : 'CmdOrCtrl+Z',\n                    role        : 'undo'\n                },\n                {\n                    label       : 'Redo',\n                    accelerator : 'Shift+CmdOrCtrl+Z',\n                    role        : 'redo'\n                },\n                {type: 'separator'},\n                {\n                    label       : 'Cut',\n                    accelerator : 'CmdOrCtrl+X',\n                    role        : 'cut'\n                },\n                {\n                    label       : 'Copy',\n                    accelerator : 'CmdOrCtrl+C',\n                    role        : 'copy'\n                },\n                {\n                    label       : 'Paste',\n                    accelerator : 'CmdOrCtrl+V',\n                    role        : 'paste'\n                },\n                {type: 'separator'},\n                {\n                    label       : 'Select All',\n                    accelerator : 'CmdOrCtrl+A',\n                    role        : 'selectall'\n                },\n            ]\n        },\n        {\n            label: '&View',\n            submenu: [\n                {\n                    label       : 'Reload',\n                    accelerator : 'CmdOrCtrl+R',\n                    click       : function(item, focusedWindow) {\n                        if (focusedWindow) { focusedWindow.reload(); }\n                    }\n                },\n                {\n                    label       : 'Toggle Developer Tools',\n                    accelerator : process.platform === 'darwin' ? 'Alt+Command+I' : 'Ctrl+Shift+I',\n                    click       : function(item, focusedWindow) {\n                        if (focusedWindow) {\n                            focusedWindow.webContents.toggleDevTools();\n                        }\n                    }\n                }\n            ]\n        },\n    ],\n\n    // Tray menu (shown on right click)\n    menuTray: [\n        {\n            label: 'Quit',\n            click: function() {\n                app.quit();\n            }\n        }\n    ],\n\n    /**\n     * Electron is ready.\n     */\n    onReady: function() {\n        this\n        .startServer()\n        // .interceptProtocol()\n        .createWindow()\n        .createMenu()\n        .createTray()\n        .registerEvents();\n    },\n\n    startServer() {\n        require('./server')(9000);\n        return this;\n    },\n\n    /**\n     * Override HTTP protocol. The reason:\n     * In order to make oAuth authentifications to Dropbox/RemoteStorage,\n     * we need to serve the app from https? protocol and have relative paths.\n     */\n    interceptProtocol: function() {\n        protocol.interceptHttpProtocol('http', function(req, callback) {\n\n            if (req.url.search(appHelper.page) > - 1) {\n\n                // Remove the domain, path, and hash location\n                req.url = req.url.replace(appHelper.page, '');\n                req.url = req.url.split('#')[0] || 'index.html';\n\n                // Serve the resource from the file system\n                req.url = 'file:///' + path.normalize(__dirname + '/dist/' + req.url);\n            }\n\n            callback(req);\n\n        });\n\n        return this;\n    },\n\n    /**\n     * Create the main window.\n     */\n    createWindow: function() {\n\n        // Recover window state (width, height, and x&y position)\n        this.state = windowStateKeeper('main', {\n            width  : 1000,\n            height : 600\n        });\n\n        // Create new browser window\n        win = new BrowserWindow({\n            width  : this.state.width,\n            height : this.state.height,\n            x      : this.state.x,\n            y      : this.state.y,\n\n            title           : 'Laverna',\n            icon            : this.icon,\n            autoHideMenuBar : true,\n            backgroundColor : '#00a693',\n\n            webPreferences      : {\n                nodeIntegration : true,\n                preload         : path.resolve(path.join(__dirname, 'preload.js')),\n            },\n        });\n\n        if (this.state.isMaximized) {\n            win.maximize();\n        }\n\n        // Load the app\n        win.loadURL(this.page);\n\n        // Show development tools\n        if (process.env.NODE_ENV === 'dev' || argv.dev) {\n            win.webContents.openDevTools();\n        }\n\n        return this;\n    },\n\n    /**\n     * Create the main menu.\n     */\n    createMenu: function() {\n\n        // Slightly different menu on OS X\n        if (process.platform === 'darwin') {\n            this.menu[0] = {\n                label   : 'Laverna',\n                submenu : this.menu[0].submenu\n            };\n        }\n\n        let menu = Menu.buildFromTemplate(this.menu);\n        Menu.setApplicationMenu(menu);\n\n        return this;\n    },\n\n    /**\n     * Create tray icon.\n     */\n    createTray: function() {\n        let icon = new Tray(this.icon),\n            menu = Menu.buildFromTemplate(this.menuTray);\n\n        icon.setToolTip('Laverna');\n        icon.setContextMenu(menu);\n\n        // Auto hide to tray on start\n        if (argv.tray) {\n            win.hide();\n        }\n\n        // Hide the window into tray on click\n        icon.on('click', function() {\n            if (win.isVisible()) {\n                return win.hide();\n            }\n            win.show();\n        });\n\n        return this;\n    },\n\n    /**\n     * Listen to window events.\n     */\n    registerEvents: function() {\n\n        // Save window state (width, height, and x&y position)\n        win.on('close', function() {\n            this.state.saveState(win);\n        }.bind(appHelper));\n\n        win.on('closed', function() {\n            win = null;\n        });\n\n        win.webContents.on('will-navigate', appHelper.onNavigate.bind(appHelper));\n        win.webContents.on('new-window', appHelper.onNavigate.bind(appHelper));\n\n        // Disable nodeIntegration\n        // win.webContents.on('new-window', appHelper.onNewWindow.bind(appHelper));\n    },\n\n    /**\n     * Open URLs in an external browser.\n     */\n    onNavigate: function(e, url) {\n        if (url.search(this.page) === -1 &&\n            url.search(/(oauth|sign_in)/) === -1 &&\n            url.search(/^blob:/) === -1) {\n\n            e.preventDefault();\n            return openUrl(url);\n        }\n    },\n\n    /**\n     * Disable nodeIntegration on all pages except for app's.\n     */\n    onNewWindow: function(e, url) {\n        if (url.search(this.page) === -1 &&\n            url.search(/^blob:/) === -1) {\n\n            e.preventDefault();\n\n            let extWin = new BrowserWindow({\n                width  : 600,\n                height : 600,\n                autoHideMenuBar     : true,\n                webPreferences      : {\n                    nodeIntegration : false,\n                },\n            });\n\n            // Load the app\n            extWin.loadURL(url);\n            extWin.on('closed', function() { extWin = null; });\n        }\n    },\n\n};\n\n// Create browser window when Electron is ready\napp.on('ready', appHelper.onReady.bind(appHelper));\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function() {\n    /*\n     * On OS X it is common for applications and their menu bar\n     * to stay active until the user quits explicitly with Cmd + Q\n     */\n    if (process.platform !== 'darwin') {\n        app.quit();\n    }\n});\n\napp.on('activate', function() {\n    /*\n     * On OS X it's common to re-create a window in the app when the\n     * dock icon is clicked and there are no other windows open.\n     */\n    if (win === null) {\n        appHelper.onReady();\n    }\n});\n"
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 1.60546875,
          "content": "'use strict';\nvar gulp    = require('gulp'),\n    pkg     = require('./package.json'),\n    plugins = require('gulp-load-plugins')();\n\nplugins.del         = require('del');\nplugins.browserSync = require('browser-sync').create();\n\nfunction getTask(task) {\n    return require('./gulps/' + task)(gulp, plugins, pkg);\n}\n\n// Add Gulp tasks\n[\n    'jshint' , 'jsonlint'   , 'mocha'       , 'nightwatch',\n    'less'   , 'prism'      , 'require'     , 'electron'  ,\n    'htmlmin', 'cssmin'     , 'htmlManifest', 'mobile'    ,\n    'copy'   , 'copyRelease', 'copyDist'    ,\n    'serve'  , 'clean'      , 'npm'\n]\n.forEach(function(task) {\n    var taskFun = getTask(task);\n\n    // It has several tasks\n    if (typeof taskFun === 'function') {\n        gulp.task(task, taskFun);\n    }\n});\n\ngulp.task('release:after', function() {\n    return gulp.src('./release')\n    .pipe(plugins.shell([\n        'cd ./release && zip -r ../release/webapp.zip ./laverna',\n    ]));\n});\n\n/**\n * Unit tests.\n */\ngulp.task('test', ['jsonlint', 'jshint', 'mocha']);\n\n/**\n * Build the app.\n * ``gulp build --dev`` to build without minifying.\n */\ngulp.task('build', plugins.sequence(\n    // 'test',\n    'clean:dist',\n    ['prism', 'less'],\n    ['copy', 'require', 'htmlmin', 'cssmin'],\n    'htmlManifest'\n));\n\n/**\n * Prepare the release files.\n */\ngulp.task('release', plugins.sequence(\n    'build',\n    'clean:release',\n    ['copyDist', 'copyRelease'],\n    'npm:install',\n    'electron',\n    'release:after'\n));\n\n/**\n * Gulp server.\n * ``gulp --root dist`` to serve dist folder.\n */\ngulp.task('default', plugins.sequence(\n    ['less', 'prism'],\n    ['serve:start', 'serve:watch']\n));\n"
        },
        {
          "name": "gulps",
          "type": "tree",
          "content": null
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 2.4189453125,
          "content": "// Karma configuration\n// Generated on Fri May 23 2016 17:23:01 GMT+0600 (+06)\n\nmodule.exports = function(config) {\n    'use strict';\n\n    config.set({\n\n        // base path that will be used to resolve all patterns (eg. files, exclude)\n        basePath: './',\n\n\n        // frameworks to use\n        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n        frameworks: ['mocha', 'requirejs'],\n\n\n        // list of files / patterns to load in the browser\n        files: [\n            'test/spec/test.js',\n            {pattern: 'app/**/*.js', included: false, served: true},\n            {pattern: 'app/scripts/modules/modules.json', included: false, served: true},\n            {pattern: 'app/locales/**/*.json', included: false, served: true},\n            {pattern: 'test/spec/**/*.js', included: false, served: true},\n            {pattern: 'test/bower_components/**/*.js', included: false, served: true}\n        ],\n\n\n        // list of files to exclude\n        exclude: [\n        ],\n\n\n        // preprocess matching files before serving them to the browser\n        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n        preprocessors: {\n            'app/scripts/**/*.js': ['coverage']\n        },\n\n        coverageReporter: {\n            reporters: [\n                {type: 'lcov', dir: 'coverage/', subdir: '.'},\n            ]\n        },\n\n\n        // test results reporter to use\n        // possible values: 'dots', 'progress'\n        // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n        reporters: ['progress', 'coverage'],\n\n\n        // web server port\n        port: 9876,\n\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: true,\n\n\n        // start these browsers\n        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n        browsers: ['PhantomJS'],\n\n\n        // Continuous Integration mode\n        // if true, Karma captures browsers, runs the tests and exits\n        singleRun: false,\n\n        // Concurrency level\n        // how many browser should be started simultaneous\n        concurrency: Infinity\n    });\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.84375,
          "content": "{\n  \"name\": \"laverna\",\n  \"version\": \"0.7.51\",\n  \"license\": \"MPL-2.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Laverna/laverna\"\n  },\n  \"scripts\": {\n    \"start\": \"node ./server.js\",\n    \"electron\": \"NODE_ENV=dev electron .\",\n    \"karma\": \"./node_modules/.bin/karma start\",\n    \"test:karma\": \"./node_modules/.bin/karma start --single-run\"\n  },\n  \"main\": \"electron.js\",\n  \"dependencies\": {\n    \"chokidar\": \"^1.6.0\",\n    \"electron-context-menu\": \"^0.6.0\",\n    \"electron-window-state\": \"^3.0.3\",\n    \"finalhandler\": \"^0.5.0\",\n    \"glob\": \"^7.0.5\",\n    \"graceful-fs\": \"^4.1.5\",\n    \"minimist\": \"^1.2.0\",\n    \"open\": \"0.0.5\",\n    \"serve-static\": \"^1.11.1\"\n  },\n  \"devDependencies\": {\n    \"browser-sync\": \"^2.14.0\",\n    \"chai\": \"^3.5.0\",\n    \"cordova-lib\": \"^6.3.0\",\n    \"del\": \"^2.2.1\",\n    \"dev-ip\": \"^1.0.1\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-autoprefixer\": \"^3.1.0\",\n    \"gulp-clean-css\": \"^2.0.12\",\n    \"gulp-concat\": \"^2.6.0\",\n    \"gulp-electron\": \"0.1.3\",\n    \"gulp-htmlmin\": \"^2.0.0\",\n    \"gulp-jshint\": \"^2.0.1\",\n    \"gulp-jsonlint\": \"^1.1.2\",\n    \"gulp-less\": \"^3.1.0\",\n    \"gulp-load-plugins\": \"^1.2.4\",\n    \"gulp-manifest\": \"^0.1.1\",\n    \"gulp-mocha-phantomjs\": \"^0.11.0\",\n    \"gulp-mocha-selenium\": \"^1.0.0\",\n    \"gulp-nightwatch\": \"^0.3.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-replace\": \"^0.5.4\",\n    \"gulp-requirejs-optimize\": \"^1.2.0\",\n    \"gulp-sequence\": \"^0.4.5\",\n    \"gulp-shell\": \"^0.5.2\",\n    \"gulp-uglify\": \"^1.5.4\",\n    \"gulp-util\": \"^3.0.7\",\n    \"jshint\": \"^2.9.2\",\n    \"jshint-stylish\": \"^2.2.0\",\n    \"karma\": \"^1.1.2\",\n    \"karma-coverage\": \"^1.1.1\",\n    \"karma-mocha\": \"^1.1.1\",\n    \"karma-phantomjs-launcher\": \"^1.0.1\",\n    \"karma-requirejs\": \"^1.0.0\",\n    \"merge-stream\": \"^1.0.0\",\n    \"nightwatch\": \"^0.9.6\"\n  },\n  \"engines\": {\n    \"node\": \">=0.8.0\"\n  },\n  \"optionalDependencies\": {},\n  \"resolutions\": {\n    \"underscore\": \"~1.7.0\"\n  }\n}\n"
        },
        {
          "name": "preload.js",
          "type": "blob",
          "size": 0.3251953125,
          "content": "// Requirejs compatibility in Electron app\nconsole.log('Preloading...');\nif (window.require) {\n    window.requireNode = window.require;\n    window.moduleNode  = window.module;\n\n    window.currentDir = __dirname;\n    window.nodeDir    = __dirname + '/node_modules/';\n\n    window.require = undefined;\n    window.module  = undefined;\n}\n"
        },
        {
          "name": "server.js",
          "type": "blob",
          "size": 0.4638671875,
          "content": "'use strict';\n\nvar finalhandler = require('finalhandler'),\n    http         = require('http'),\n    serveStatic  = require('serve-static'),\n    serve,\n    server;\n\nserve  = serveStatic(__dirname + '/dist', {index: ['index.html']});\n\nserver = http.createServer(function(req, res) {\n    var done = finalhandler(req, res);\n    serve(req, res, done);\n});\n\nmodule.exports = function(port) {\n    console.log('Server is running on port: ' + port);\n    return server.listen(port);\n};\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}