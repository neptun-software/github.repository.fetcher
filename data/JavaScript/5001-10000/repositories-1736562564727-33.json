{
  "metadata": {
    "timestamp": 1736562564727,
    "page": 33,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "typekit/webfontloader",
      "stars": 9249,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03125,
          "content": ".bundle\n*~\ntarget\ntmp\n_site\npkg\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3046875,
          "content": "before_install:\n  - wget https://s3.amazonaws.com/travis-phantomjs/phantomjs-2.0.0-ubuntu-12.04.tar.bz2\n  - tar -xjf phantomjs-2.0.0-ubuntu-12.04.tar.bz2\n  - sudo mv /usr/local/phantomjs/bin/phantomjs /usr/local/phantomjs/bin/phantomjs1\n  - sudo mv phantomjs /usr/local/phantomjs/bin/phantomjs\nlanguage: node_js\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 15.5224609375,
          "content": "v1.6.28 (March 27, 2017)\n\n* Clear timer timeout when promise resolves.\n\nv1.6.27 (November 29, 2016)\n\n* Disable native font loading for Safari 10\n\nv1.6.26 (July 8, 2016)\n\n* Add support for latin extended in the Google Fonts module.\n\nv1.6.25 (July 7, 2016)\n\n* Add \"loadAllFonts\" option to Monotype module.\n* Add documentation on how to use Web Font Loader with Edge Web Fonts.\n\nv1.6.24 (March 20, 2016)\n\n* Fix type annotation in DomHelper.\n\nv1.6.23 (March 20, 2016)\n\n* Add bower.json\n* Small code rewrite in order to workaround a bad type cast (Closure Compiler\nis correct, but reality doesn't always match).\n\nv1.6.22 (February 29, 2016)\n\n* Fix bug that caused long loading fonts to get stuck on wf-loading because\nthe timeout never fired (or took a really long time).\n\nv1.6.21 (February 2, 2016)\n\n* Fix bug in Google module that caused non-latin to fail on browsers that\nsupport the native font loading API.\n* Fix bug in IE8 where font events sometimes failed due to a timing issue.\n\nv1.6.20 (January 4, 2016)\n\n* Add all source files to the npm package.\n\nv1.6.19 (January 4, 2016)\n\n* Add src/core files to npm package.\n\nv1.6.18 (January 4, 2016)\n\n* Version bump.\n\nv1.6.17 (January 4, 2016)\n\n* Upgrade closure compiler and base.js to latest version (no code changes).\n\nv1.6.16 (December 8, 2015)\n\n* Add support for detecting font loads even if the font isn't in the CSSOM yet (workaround for a Chrome bug).\n\nv1.6.15 (November 26, 2015)\n\n* Temporarily disable the native font loading API in Firefox 42 and below due to a bug.\n\nv1.6.14 (November 24, 2015)\n\n* Change media type check to be more reliable on old IE.\n\nv1.6.13 (November 24, 2015)\n\n* Fix media type check in IE/Edge.\n\nv1.6.12 (November 23, 2015)\n\n* Fix bug that sometimes caused wf-inactive to show when asynchronously loading CSS.\n\nv1.6.11 (November 17, 2015)\n\n* Only include production build in npm package\n* Fix bug that caused duplicate font loads to fail (using the native font loading code)\n\nv1.6.10 (October 9, 2015)\n\n* Fix compile warning\n\nv1.6.9 (October 9, 2015)\n\n* Fix native font load detection when combined with asynchronous CSS loading\n* Fix support for font family names starting with a number\n\nv1.6.8 (October 1, 2015)\n\n* Add support for the native font loading API.\n\nv1.6.7 (September 24, 2015)\n\n* Update Monotype module\n\nv1.6.6 (August 7, 2015)\n\n* Fix weird check in insertInto that disallowed adding a link to an empty head element.\n* Load fonts asynchronously for the Typekit module.\n* Remove font rulers and trigger callback asynchronously to avoid unnecessary reflows.\n\nv1.6.5 (July 25, 2015)\n* Optimise layout calculations\n* Fix Rubygems source\n* Simplify internal Google module code\n\nv1.6.4 (July 9, 2015)\n* Optimise reflows when setting up test spans.\n\nv1.6.3 (June 1, 2015)\n* Fix invalid references to global this (window).\n\nv1.6.2 (May 29, 2015)\n* No changes.\n\nv1.6.1 (May 29, 2015)\n* Automatically update npm version.\n\nv1.6.0 (May 28, 2015)\n* Remove user agent string sniffing. From now on the Web Font Loader will always try to load fonts.\n\nv1.5.21 (May 26, 2015)\n* No changes.\n\nv1.5.20 (May 26, 2015)\n* Use setTimeout instead of window.setTimeout\n\nv1.5.19 (May 24, 2015)\n* Add UMD wrapper\n\nv1.5.18 (April 15, 2015)\n* Add configuration option to enable asynchronous CSS (internal API)\n\nv1.5.17 (April 14, 2015)\n* Load CSS files asynchronously\n\nv1.5.16 (March 30, 2015)\n* Optimise DOM performance in the font watcher.\n\nv1.5.15 (March 25, 2015)\n* Increase offset position for ruler so scrollbars are less likely to be triggered by large test strings\n\nv1.5.14 (January 23, 2015)\n* Refactor EventDispatcher\n\nv1.5.13 (January 20, 2015)\n* Remove unused exports\n* Move definition of FontTestStrings to where it is first used\n\nv1.5.12 (January 19, 2015)\n* Revert using visibility hidden (caused strange artifacts on some sites on iOS browsers)\n* Fix compiler warnings\n\nv1.5.11 (January 7, 2015)\n* Add support for explicitly setting the protocol\n\nv1.5.10 (December 18, 2014)\n* Fix parameters passed to Typekit KitJS\n\nv1.5.9 (December 18, 2014)\n* Use visibility hidden instead of off-screen positioning\n* Decouple Typekit internal API\n* Disable native font loading (see comment)\n\nv1.5.8 (November 17, 2014)\n* Add prebuilt library to repository\n\nv1.5.7 (November 17, 2014)\n* Decrease default timeout to 3 seconds\n* Add support for native font loading\n\nv1.5.6 (September 3, 2014)\n* Fix double inactive event when all modules fail to load\n\nv1.5.5 (June 5, 2014)\n* Add support for the Chromecast browser\n\nv1.5.4 (May 2, 2014)\n* Add support for the PlayStation 4 browser\n\nv1.5.3 (April 8, 2014)\n* Prevent a potential FOUT when setting the font event classes.\n* Add \"display:block\" to test rulers so \"* { display: none; }\" doesn't override it\n\nv1.5.2 (January 3, 2014)\n* Add Copyright, License and Version to the compiled output file(s)\n* Fix small bug in Google Font module that rejected font variations with dashes\n\nv1.5.1 (October 15, 2013)\n* Dispatch wf-loading event synchronously instead of waiting for asynchronous modules\n* Update README explaining how to use custom fonts without a stylesheet\n* Add license information to gemspec\n\nv1.5.0 (September 9, 2013)\n* Correctly categorize Internet Explorer 11 as an Internet Explorer version.\n* Add support for custom test strings in the custom module.\n* Various small bug fixes to the test suite so it runs on all browsers automatically.\n\nv1.4.12 (August 21, 2013)\n* Cleared up initialization code and made all modules optional and configurable at compile time\n\nv1.4.11 (August 8, 2013)\n* Remove Ascender module (according to Monotype the service has now been shutdown completely.)\n* Switch Monotype module to use fast.fonts.net instead of fast.fonts.com\n* Update license\n\nv1.4.10 (July 31, 2013)\n* Add loadStylesheet method with optional callback that replaces createCssLink\n* Remove supportForStyle check because it breaks XHTML/SVG and is no longer necessary\n* Fix inactive never called when script loading times out\n* Move test assets into fixtures directory\n\nv1.4.9 (July 24, 2013)\n* Disable terminal spec report when not using PhantomJS\n* Remove obsolete namespace declaration\n\nv1.4.8 (June 24, 2013)\n* Add support for the Chromium based Opera browser\n* Change the debug task to do a Closure Compiler debug build\n* Fix a global variable leak in the compiled output\n* Add support for the PhantomJS user agent string\n\nv1.4.7 (June 6, 2013)\n* Fix backwards compatibility with version strings for Chrome\n* Restore specs that test against version strings for backwards compatibility with the old UserAgent API.\n\nv1.4.6 (May 29, 2013)\n* Merge font watching strategies from core and the Google module\n* Add support for the Samsung Galaxy S4 user agent string\n\nv1.4.5 (May 23, 2013)\n* Move modules into their own namespace\n* Add new methods into DomHelper and add specs for all DomHelper methods\n* Rename watch method so as not to conflict with Firefox Object.prototype.watch\n\nv1.4.4 (May 22, 2013)\n* Change the UserAgent API so that it is backwards compatible with older Typekit kits.\n\nv1.4.3 (May 16, 2013)\n* UserAgent now maintains version numbers as instances of the Version class.\n\nv1.4.2 (April 11, 2013)\n* Namespace is now configurable at compile time\n* BrowserInfo and UserAgent are exported so Typekit KitJS and the standalone webfontloader can share data\n* Add \"aria-hidden=true\" to test spans so screen readers do not read test spans\n* Fix passing the test strings from the modules to core.\n\nv1.4.1 (April 8, 2013)\n* Internal rewrite of font and variations\n* Fix for the configurable timeout on the Google module\n\nv1.4.0 (March 28, 2013)\n* Stop exporting the `addModule` API to dynamically add modules (it didn't work anyway.)\n* Stop checking the height when monitoring for font load. This turned out to be inconsistent across platforms.\n\nv1.3.2 (March 27, 2013)\n* Add support for the Amazon 1 and 2+ browsers.\n\nv1.3.1 (March 14, 2013)\n* Change code to use explicit dependencies\n* Fix unit tests in older browsers\n* Fix google/FontApiParser.js to work in IE <= 8\n\nv1.3.0 (February 28, 2013)\n* New optional configuration parameter `timeout` which lets you customize the default timeout.\n* Change the Typekit module to use `use.typekit.net` instead of `use.typekit.com`.\n* Disable height check on OSX and iOS WebKit based browsers which suffer from a metrics bug when loading web fonts.\n\nv1.2.1 (February 26, 2013)\n* Fix the possibility of test strings wrapping to a new line and thereby breaking font watching.\n* Change the FontWatchRunner to not create DOM elements until it is started.\n* Fix the possibility of extraneous whitespace in class names.\n* Add a cache buster parameter to the Monotype/Fonts.com module.\n* Fix the case where there are no fonts to load. Webfontloader will now fire the inactive event correctly.\n* Test suite now uses the active browser to test font watching in addition to the mocked font watching tests.\n* Test suite is now using Jasmine instead of JSTestDriver.\n\nv1.2.0 (January 30, 2013)\n* Improved font watching for browsers with the WebKit web font fallback bug\n* Improved font watching in general by comparing both width and height\n* UserAgent user interface has changed with the introduction of a BrowserInfo object that contains information derived from the user agent string\n* The custom module now supports loading font variations\n\nv1.1.2 (January 21, 2013)\n* Added parameter to Google module to do character based subsetting.\n* Made WebKit useragent check less strict about capitalization for LG L160 phones that apparently use 'AppleWebkit' instead of 'AppleWebKit' in their useragent strings.\n\nv1.1.1 (December 12, 2012)\n* Added the ability to recognize BlackBerry devices, which have web font support (WOFF) in platform version 10+\n* Added a new browser name \"BuiltinBrowser\" to recognize built-in browsers on mobile platforms which we previously called \"Safari\" (applies to Android's \"Browser\" app and BlackBerry's built-in browser)\n* Fixed a bug in the Monotype module which caused a double active event in IE9 and no active event in IE8 (reported in issue #64)\n* Fixed some typos in the demo pages\n\nv1.1.0 (December 5, 2012)\n* Adds the ability to load fonts into a same-origin child window or iframe using the new optional `context` configuration option (thanks to @ryanwolf of Google).\n* Updates the demos to fix broken stuff and demonstrate the new context option in action.\n* DomHelper interface changed to take the main window and an optional separate window for loading.\n* Methods added to retrieve both windows and get the correct protocol for assets from the location's protocol.\n\nv1.0.31 (September 11, 2012)\n* Improvements to Google's module to recognize more variation descriptor formats (such as 100italic and 200n).\n\nv1.0.30 (August 17, 2012)\n* Added support for detecting the Windows Phone platform in UserAgentParser, which supports web fonts at version 8 and above.\n* Changes to make the global namespace of the library easier to configure when used in 3rd-party projects. (Thanks cbosco!)\n\nv1.0.29 (July 26, 2012)\n* Added test to ensure Firefox for Android is properly detected as \"Firefox\" by UserAgentParser.\n* Added test to ensure Opera Mobile for Android is properly detected as \"Opera\" by UserAgentParser.\n* Changed detection so that Chrome for iOS is detected as \"Chrome\" instead of \"Safari\".\n* Changed detection so that Opera Mini is correctly detected as \"OperaMini\" (without font support) instead of \"Opera\" (with font support).\n* Fixed a bug in Google Web Fonts module when requesting a font family with character sets and no variations.\n* Scaled back the number of fall back fonts used in the Google Web Fonts font watching code.\n\nv1.0.28 (June 4, 2012)\n* Added support for detecting the Chrome OS platform (\"CrOS\") in the UserAgentParser.\n\nv1.0.27 (April 20, 2012)\n* Updated DomHelper to not require a UserAgent instance. Feature-detection is not used instead of UA detection for switching DOM methods.\n\nv1.0.26 (February 8, 2012)\n* Updated the included version of the Closure JS compiler jar to 1741, to handle newer annotation styles.\n* Added a missing param annotation for the new FontWatcher.watch argument.\n* Added param annotations for Google's custom FontWatchRunner implementation.\n* Updated the Google Web Fonts API parser to accept family names with a plus sign.\n\nv1.0.25 (February 7, 2012)\n* Updated the user agent parser to recognize Chrome for Android properly as a Chrome browser.\n\nv1.0.24 (January 9, 2012)\n* Updated the standard test string from \"BESs\" to \"BESbswy\" for more width variability.\n* Improved Google's custom FontWatchRunner implementation for Webkit to work around an issue where the browser reports the 400 weight's width when it is already loaded.\n\nv1.0.23 (November 29, 2011)\n* Made the FontWatchRunner implementation configurable on a module-by-module basis.\n* Added a new .start() method to FontWatchRunner to actually kick off font loading detection.\n* Added a different FontWatchRunner implementation that Google's module uses to work around a Webkit browser bug. This implementation won't trigger active early, but may trigger active much later, so it's not the default for all modules.\n* Updated the implementation of Fontdeck's module to defer loading responsibility to their JS.\n\nv1.0.22 (July 1, 2011)\n* Fixed a bug in Webkit-based browsers with font detection where active would trigger without the font actually being active yet.\n* Increased the frequency of checking the widths of the font watcher spans.\n\nv1.0.21 (June 17, 2011)\n* Added a protocol detect for the Typekit module so JS is loaded securely on secure pages. Thanks to bee525 for the pull request.\n\nv1.0.20 (March 30, 2011)\n* Changed CSS style for hidden span so it's not affected by inline or floated elements at the end of the body\n\nv1.0.19 (March 3, 2011)\n* Add a module for Monotype.\n\nv1.0.18 (January 24, 2011)\n* Improve behavior of CSS classes over multiple loads on a single page. (Documented in docs/EVENTS.md)\n* Add support for international subsets in the Google module.\n* Add a module for Fontdeck.\n\nv1.0.17 (December 1, 2010)\n* Changed CSS style for hidden span in order to be less affected by environment\n* Removed restriction on iPhone/iPad/iPod in the google modules\n\nv1.0.16 (November 18, 2010)\n* Fix a bug where we fail to detect that fonts have loaded if they have the same width as the fallback font.\n\nv1.0.15 (October 14, 2010)\n* Fix an error parsing platform version in IE, when it has no items following the platform in the UA string.\n\nv1.0.14 (October 14, 2010)\n* Bugfix: fixed IE issue in google module.\n\nv1.0.13 (September 30, 2010)\n* Added support for detecting Adobe Air.\n\nv1.0.12 (September 30, 2010)\n* Bugfix: google module, change the url builder to handle integrations.\n\nv1.0.10 (September 24, 2010)\n* Bugfix: extra alert\n\nv1.0.10 (September 22, 2010)\n* Add support for customizable FontWatcher test string, for international\n  fonts.\n\nv1.0.9 (September 10, 2010)\n* Bugfix: of the bug fix\n\nv1.0.8 (September 10, 2010)\n* Bugfix: fix type definitions\n\nv1.0.7 (August 31, 2010)\n* Fix that wf-loading was not removed in the case of wf-inactive because of\n  a timeout.\n* Add UserAgent#getDocumentMode to aid in determining font support in IE.\n\nv1.0.6 (July 20, 2010)\n* Add JsDoc comments and type annotations for the Closure compiler. Fixes\n  several small bugs caught by the compiler in doing so.\n\nv1.0.5 (July 12, 2010)\n* webfont.UserAgent now provides getPlatformVersion. WebFont Loader is now\n  packaged as a ruby gem.\n\nv1.0.4 (June 14, 2010)\n* Add a module for Ascender's Fonts Live.\n\nv1.0.3 (June 6, 2010)\n* IE fixes.\n\nv1.0.2 (June 1, 2010)\n* Added a way of loading the WebFont Loader script asynchronously.\n\nv1.0.1 (May 20, 2010)\n* Fix namespace pollution by wrapping all of the code in a closure.\n\nv1.0.0 (May 19, 2010)\n* Initial release!\n* Modules: google, typekit, custom\n* Events: loading, active, inactive, fontloading, fontactive, fontintactive\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.978515625,
          "content": "# Contributing\n\nPlease open [an issue](https://github.com/typekit/webfontloader/issues) if you find or suspect any problems. Sample pages and test cases are greatly appreciated.\n\n## Development requirements\n\nYou'll need a few rubygems to run the tests, demo server, and other rake tasks, which should be installed with [Bundler](http://gembundler.com/).\n\n    $ gem install bundler\n    $ bundle install\n\nTo run the tests in a headless WebKit you will also need to have [PhantomJS](http://www.phantomjs.org) installed. You can install PhantomJS by downloading a binary or using HomeBrew.\n\n    $ brew install phantomjs\n\n## Building\n\nTo build a JS file from source, just run rake:\n\n    $ rake\n\nIf you want to build a JS file with only specific modules you can specify them on the command line:\n\n    $ rake compile['custom google typekit']\n\nThis will compile a JS file with only the `custom`, `google` and `typekit` modules. The available modules are: `custom`, `google`, `typekit`, `ascender`, `monotype`, `fontdeck`. By default all modules are included.\n\n## Demos\n\nA full suite of demo pages is included in this source. Here you can find some\nlive examples using the JS and CSS events. Run the demo server with:\n\n    $ rake demo\n\nYou can also run the demos with uncompressed, debuggable code to aid in\ndevelopment. Just start the server in dev mode:\n\n    $ rake demodev\n\nBrowse the demos [source code](http://github.com/typekit/webfontloader/blob/master/lib/webfontloader/demo/public).\n\n## Testing\n\nWeb Font Loader has an extensive test suite that runs via Jasmine. The test suite\nshould be passing before submitting a pull request, and new tests should be added for any new functionality.\n\nTo run tests, open up `spec/index.html` in a browser and check the results. The\ntest suite will run automatically. Again, before submitting a pull request\nplease run the test suite in multiple browsers and list them in the pull request.\n\nTo run tests in a headless WebKit using [PhantomJS](http://www.phantomjs.org) run:\n\n    $ rake test\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.0380859375,
          "content": "source 'https://rubygems.org'\n\ngemspec\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.9345703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.6826171875,
          "content": "# Web Font Loader\n\nWeb Font Loader gives you added control when using linked fonts via `@font-face`. It provides a common interface to loading fonts regardless of the source, then adds a standard set of events you may use to control the loading experience. The Web Font Loader is able to load fonts from [Google Fonts](http://www.google.com/fonts/), [Typekit](http://www.typekit.com/),  [Fonts.com](http://www.fonts.com/), and [Fontdeck](http://fontdeck.com/), as well as self-hosted web fonts. It is co-developed by [Google](http://www.google.com/) and [Typekit](http://www.typekit.com).\n\n[![Build Status](https://travis-ci.org/typekit/webfontloader.svg?branch=master)](https://travis-ci.org/typekit/webfontloader)\n\n## Contents\n\n* [Get started](#get-started)\n* [Configuration](#configuration)\n    * [Events](#events)\n    * [Timeout](#timeouts)\n    * [Iframes](#iframes)\n* [Modules](#modules)\n    * [Adobe Edge Web Fonts](#adobe-edge-web-fonts)\n    * [Custom](#custom)\n    * [Fontdeck](#fontdeck)\n    * [Fonts.com](#fontscom)\n    * [Google](#google)\n    * [Typekit](#typekit)\n* [Browser support](#browser-support)\n* [License](#copyright-and-license)\n\n## Get Started\n\nTo use the Web Font Loader library, just include it in your page and tell it which fonts to load. For example, you could load fonts from [Google Fonts](http://www.google.com/fonts/) using the Web Font Loader hosted on [Google Hosted Libraries](https://developers.google.com/speed/libraries/) using the following code.\n\n```html\n<script src=\"https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js\"></script>\n<script>\n  WebFont.load({\n    google: {\n      families: ['Droid Sans', 'Droid Serif']\n    }\n  });\n</script>\n```\n\nAlternatively, you can link to the latest `1.x` version of the Web Font Loader by using `https://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js` as the `script` source. Note that the version in this url is less specific. It will always load the latest `1.x` version, but it also has a shorter cache time to ensure that your page gets updates in a timely manner. For performance reasons, we recommend using an explicit version number (such as `1.6.26`) in urls when using the Web Font Loader in production. You can manually update the Web Font Loader version number in the url when you want to adopt a new version.\n\nWeb Font Loader is also available on the [jsDelivr](http://www.jsdelivr.com/projects/webfontloader) & [CDNJS](https://cdnjs.com/libraries/webfont) CDNs.\n\nIt is also possible to use the Web Font Loader asynchronously. For example, to load [Typekit](http://www.typekit.com) fonts asynchronously, you could use the following code.\n\n```html\n<script>\n   WebFontConfig = {\n      typekit: { id: 'xxxxxx' }\n   };\n\n   (function(d) {\n      var wf = d.createElement('script'), s = d.scripts[0];\n      wf.src = 'https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js';\n      wf.async = true;\n      s.parentNode.insertBefore(wf, s);\n   })(document);\n</script>\n```\n\nUsing the Web Font Loader asynchronously avoids blocking your page while loading the JavaScript. Be aware that if the script is used asynchronously, the rest of the page might render before the Web Font Loader is loaded and executed, which can cause a [Flash of Unstyled Text (FOUT)](http://help.typekit.com/customer/portal/articles/6852).\n\nThe FOUT can be more easily avoided when loading the Web Font Loader synchronously, as it will automatically set the `wf-loading` class on the HTML element as soon as `Webfont.load` has been called. The browser will wait for the script to load before continuing to load the rest of the content, FOUT is avoided.\n\nWeb Font Loader is also available on npm as a CommonJS module. Just `npm install webfontloader` and then require it in your code.\n\n```js\n  var WebFont = require('webfontloader');\n\n  WebFont.load({\n    google: {\n      families: ['Droid Sans', 'Droid Serif']\n    }\n  });\n```\n\n## Configuration\n\nThe Web Font Loader configuration is defined by a global variable named `WebFontConfig`, or passed directly to the `WebFont.load` method. It defines which fonts to load from each web font provider and gives you the option to specify callbacks for certain events. When using the asynchronous approach, you must define the global variable `WebFontConfig` before the code that loads the Web Font Loader (as in the example above).\n\n### Events\n\nWeb Font Loader provides an event system that developers can hook into. It gives you notifications of the font loading sequence in both CSS and JavaScript.\n\n  * `loading` - This event is triggered when all fonts have been requested.\n  * `active` - This event is triggered when the fonts have rendered.\n  * `inactive` - This event is triggered when the browser does not support linked fonts *or* if none of the fonts could be loaded.\n  * `fontloading` - This event is triggered once for each font that's loaded.\n  * `fontactive` - This event is triggered once for each font that renders.\n  * `fontinactive` - This event is triggered if the font can't be loaded.\n\nCSS events are implemented as classes on the `html` element. The following classes are set on the `html` element:\n\n```css\n.wf-loading\n.wf-active\n.wf-inactive\n.wf-<familyname>-<fvd>-loading\n.wf-<familyname>-<fvd>-active\n.wf-<familyname>-<fvd>-inactive\n```\n\nThe `<familyname>` placeholder will be replaced by a sanitized version of the name of each font family. Spaces and underscores are removed from the name, and all characters are converted to lower case. For example, `Droid Sans` becomes `droidsans`. The `<fvd>` placeholder is a [Font Variation Description](https://github.com/typekit/fvd). Put simply, it's a shorthand for describing the style and weight of a particular font. Here are a few examples:\n\n```css\n/* n4 */\n@font-face { font-style: normal; font-weight: normal; }\n\n/* i7 */\n@font-face { font-style: italic; font-weight: bold; }\n```\n\nKeep in mind that `font-weight: normal` maps to `font-weight: 400` and `font-weight: bold` maps to `font-weight: 700`. If no style/weight is specified, the default `n4` (`font-style: normal; font-weight: normal;`) will be used.\n\nIf fonts are loaded multiple times on a single page, the CSS classes continue to update to reflect the current state of the page. The global `wf-loading` class is applied whenever fonts are being requested (even if other fonts are already active or inactive). The `wf-inactive` class is applied only if none of the fonts on the page have rendered. Otherwise, the `wf-active` class is applied (even if some fonts are inactive).\n\nJavaScript events are implemented as callback functions on the `WebFontConfig` configuration object.\n\n```javascript\nWebFontConfig = {\n  loading: function() {},\n  active: function() {},\n  inactive: function() {},\n  fontloading: function(familyName, fvd) {},\n  fontactive: function(familyName, fvd) {},\n  fontinactive: function(familyName, fvd) {}\n};\n```\n\nThe `fontloading`, `fontactive` and `fontinactive` callbacks are passed the family name and font variation description of the font that concerns the event.\n\nIt is possible to disable setting classes on the HTML element by setting the `classes` configuration parameter to `false` (defaults to `true`).\n\n```javascript\nWebFontConfig = {\n  classes: false\n};\n```\n\nYou can also disable font events (callbacks) by setting the `events` parameter to `false` (defaults to `true`).\n\n```javascript\nWebFontConfig = {\n  events: false\n};\n```\n\nIf both events and classes are disabled, the Web Font Loader does not perform font watching and only acts as a way to insert @font-face rules in the document.\n\n### Timeouts\n\nSince the Internet is not 100% reliable, it's possible that a font will fail to load. The `fontinactive` event will be triggered after 5 seconds if the font fails to render. If *at least* one font successfully renders, the `active` event will be triggered, else the `inactive` event will be triggered.\n\nYou can change the default timeout by using the `timeout` option on the `WebFontConfig` object.\n\n```javascript\nWebFontConfig = {\n  google: {\n    families: ['Droid Sans']\n  },\n  timeout: 2000 // Set the timeout to two seconds\n};\n```\n\nThe timeout value should be in milliseconds, and defaults to 3000 milliseconds (3 seconds) if not supplied.\n\n### Iframes\n\nUsually, it's easiest to include a copy of Web Font Loader in every window where fonts are needed, so that each window manages its own fonts. However, if you need to have a single window manage fonts for multiple same-origin child windows or iframes that are built up using JavaScript, Web Font Loader supports that as well. Just use the optional `context` configuration option and give it a reference to the target window for loading:\n\n```javascript\nWebFontConfig = {\n  google: {\n    families: ['Droid Sans']\n  },\n  context: frames['my-child']\n};\n```\n\nThis is an advanced configuration option that isn't needed for most use cases.\n\n## Modules\n\nWeb Font Loader provides a module system so that any web font provider can contribute code that allows their fonts to be loaded. This makes it possible to use multiple web font providers at the same time. The specifics of each provider currently supported by the library are documented here.\n\n### Adobe Edge Web Fonts\n\nWhen using [Adobe Edge Web Fonts](https://edgewebfonts.adobe.com/), you can use the `typekit` module by passing in a catenated list of fonts in the `id` parameter and set the `api` parameter to point to the Edge Web Fonts URL.\n\n```javascript\nWebFontConfig = {\n  typekit: {\n    id: 'adamina;advent-pro',\n    api: '//use.edgefonts.net'\n  }\n};\n```\n\n### Custom\n\nTo load fonts from any external stylesheet, use the `custom` module. Here you'll\nneed to specify the font family names you're trying to load, and optionally the url of the stylesheet that provides the `@font-face` declarations for those fonts.\n\nYou can specify a specific font variation or set of variations to load and watch\nby appending the variations separated by commas to the family name separated by\na colon. Variations are specified using [FVD notation](https://github.com/typekit/fvd).\n\n```javascript\nWebFontConfig = {\n  custom: {\n    families: ['My Font', 'My Other Font:n4,i4,n7'],\n    urls: ['/fonts.css']\n  }\n};\n```\n\nIn this example, the `fonts.css` file might look something like this:\n\n```css\n@font-face {\n  font-family: 'My Font';\n  src: ...;\n}\n@font-face {\n  font-family: 'My Other Font';\n  font-style: normal;\n  font-weight: normal; /* or 400 */\n  src: ...;\n}\n@font-face {\n  font-family: 'My Other Font';\n  font-style: italic;\n  font-weight: normal; /* or 400 */\n  src: ...;\n}\n@font-face {\n  font-family: 'My Other Font';\n  font-style: normal;\n  font-weight: bold; /* or 700 */\n  src: ...;\n}\n```\n\nIf your fonts are already included in another stylesheet you can also leave out the `urls` array and just specify font family names to start font loading. As long as the names match those that are declared in the `families` array, the proper loading classes will be applied to the html element.\n\n```html\n<script src=\"https://ajax.googleapis.com/ajax/libs/webfont/1.5.10/webfont.js\"></script>\n<script>\n  WebFont.load({\n    custom: {\n      families: ['My Font']\n    }\n  });\n</script>\n\n<style type=\"text/css\">\n  @font-face {\n    font-family:\"My Font\";\n    src:url(\"assets/fonts/my_font.woff\") format(\"woff\");\n  }\n</style>\n```\n\nThe custom module also supports customizing the test strings that are used to determine whether or not a font has loaded. This can be used to load fonts with custom subsets or glyphs in the private use unicode area.\n\n```javascript\nWebFontConfig = {\n  custom: {\n    families: ['My Font'],\n    testStrings: {\n      'My Font': '\\uE003\\uE005'\n    }\n  }\n};\n```\n\nTests strings should be specified on a per font basis and contain at least one character. If not specified the default test string (`BESbswy`) is used.\n\n### Fontdeck\n\nTo use the [Fontdeck](http://fontdeck.com/) module, specify the ID of your website. You can find this ID on the website page within your account settings.\n\n```javascript\nWebFontConfig = {\n  fontdeck: {\n    id: 'xxxxx'\n  }\n};\n```\n\n### Fonts.com\n\nWhen using [Fonts.com web fonts](http://www.fonts.com/web-fonts/) specify your Project ID.\n\n```javascript\nWebFontConfig = {\n  monotype: {\n    projectId: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\n    version: 12345, // (optional, flushes the CDN cache)\n    loadAllFonts: true //(optional, loads all project fonts)\n  }\n};\n```\n\nThe Fonts.com module has an optional `version` option which acts as a cache-buster, optional `loadAllFonts` loads all project fonts. By default, Fonts.com module loads only fonts used on the page.\n\n### Google\n\nUsing [Google's Font API](https://code.google.com/apis/webfonts/docs/getting_started.html), name the font families you'd like to load. You can use the same [syntax](https://developers.google.com/fonts/docs/getting_started#Syntax) as in the Font API to specify styles. Please note that the Google module does not support the FVD syntax that is used in the custom module. \n\n```javascript\nWebFontConfig = {\n  google: {\n    families: ['Droid Sans', 'Droid Serif:bold']\n  }\n};\n```\n\nSometimes the font you requested doesn't come in the default weight (e.g. 400) and you need to explicitly request the variation you want for font events to work (e.g. `300`, `700`, etc.):\n\n```javascript\nWebFontConfig = {\n  google: {\n    families: ['Open Sans Condensed:300,700']\n  }\n};\n```\n\nIf you need to specify character subsets other than the default (e.g.: greek script in addition to latin), you must append the subset string to the requested family string after a colon. The subset string should follow the [Google documentation](https://developers.google.com/fonts/docs/getting_started#Subsets) (subset names separated by commas):\n\n```javascript\nWebFontConfig = {\n  google: {\n    families: ['Open Sans Condensed:300,700:latin,greek']\n  }\n};\n```\n\nYou can also supply the `text` parameter to perform character subsetting:\n\n```javascript\nWebFontConfig = {\n  google: {\n    families: ['Droid Sans', 'Droid Serif'],\n    text: 'abcdefghijklmnopqrstuvwxyz!'\n  }\n};\n```\n\nThe `text` subsetting functionality is only available for the Google module.\n\n### Typekit\n\nWhen using [Typekit](http://www.typekit.com), specify the Kit to retrieve by its ID. You can find the Kit ID within Typekit's Kit Editor interface.\n\n```javascript\nWebFontConfig = {\n  typekit: {\n    id: 'xxxxxx'\n  }\n};\n```\n\n**FYI:** Typekit's own JavaScript is built using the Web Font Loader library and already provides all of the same font event functionality. If you're using Typekit, you should use their embed codes directly unless you also need to load web fonts from other providers on the same page.\n\n## Browser Support\n\nEvery web browser has varying levels of support for fonts linked via `@font-face`. Web Font Loader determines support for web fonts is using the browser's user agent string. The user agent string may claim to support a web font format when it in fact does not. This is especially noticeable on mobile browsers with a \"Desktop\" mode, which usually identify as Chrome on Linux. In this case a web font provider may decide to send WOFF fonts to the device because the real desktop Chrome supports it, while the mobile browser does not. The Web Font Loader is not designed to handle these cases and it defaults to believing what's in the user agent string. Web font providers can build on top of the basic Web Font Loader functionality to handle these special cases individually.\n\nIf Web Font Loader determines that the current browser does not support `@font-face`, the `inactive` event will be triggered.\n\nWhen loading fonts from multiple providers, each provider may or may not support a given browser. If Web Font Loader determines that the current browser can support `@font-face`, and *at least* one provider is able to serve fonts, the fonts from that provider will be loaded. When finished, the `active` event will be triggered.\n\nFor fonts loaded from supported providers, the `fontactive` event will be triggered. For fonts loaded from a provider that *does not* support the current browser, the `fontinactive` event will be triggered.\n\nFor example:\n\n```javascript\nWebFontConfig = {\n  providerA: 'Family1',\n  providerB: 'Family2'\n};\n```\n\nIf `providerA` can serve fonts to a browser, but `providerB` cannot, The `fontinactive` event will be triggered for `Family2`. The `fontactive` event will be triggered for `Family1` once it loads, as will the `active` event.\n\n## Copyright and License\n\nWeb Font Loader Copyright (c) 2010-2017 Adobe Systems Incorporated, Google Incorporated.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"
        },
        {
          "name": "Rakefile",
          "type": "blob",
          "size": 6.822265625,
          "content": "require 'rubygems'\nrequire 'rake'\nrequire 'date'\n\n#############################################################################\n#\n# Helper functions\n#\n#############################################################################\n\ndef name\n  @name ||= Dir['*.gemspec'].first.split('.').first\nend\n\ndef version\n  line = File.read(\"lib/#{name}.rb\")[/^\\s*VERSION\\s*=\\s*.*/]\n  line.match(/.*VERSION\\s*=\\s*['\"](.*)['\"]/)[1]\nend\n\ndef date\n  Date.today.to_s\nend\n\ndef gemspec_file\n  \"#{name}.gemspec\"\nend\n\ndef gem_file\n  \"#{name}-#{version}.gem\"\nend\n\ndef replace_header(head, header_name)\n  head.sub!(/(\\.#{header_name}\\s*= ').*'/) { \"#{$1}#{send(header_name)}'\"}\nend\n\n#############################################################################\n#\n# Standard tasks\n#\n#############################################################################\n\ndesc \"Open an irb session preloaded with this library\"\ntask :console do\n  sh \"irb -rubygems -r ./lib/#{name}.rb\"\nend\n\n#############################################################################\n#\n# Custom tasks (add your own tasks here)\n#\n#############################################################################\n\nrequire 'rake/clean'\n\n$LOAD_PATH.unshift File.dirname(__FILE__) + \"/lib\"\nrequire 'webfontloader'\n\n#\n# Setup\n#\n\n# Build targets (remove with `rake clean`)\nCLEAN.include(\"target\")\nCLEAN.include(\"tmp\")\n\n# JsCompiler\nJsCompilerJar = \"tools/compiler/compiler.jar\"\n\n# JS Source dependencies\nAllJs = FileList[\"{src,src-test}/**/*\"]\nSourceJs  = FileList[\"src/**/*\"]\n\n# JS Source loader\n@modules = WebFontLoader::Modules.new\n\n#\n# Build\n#\n\ndirectory \"target\"\ndirectory \"tmp\"\n\ndesc \"Compile the JavaScript into target/webfont.js\"\ntask :compile, [:modules] => \"target/webfont.js\"\n\nfile \"webfontloader.js\" => \"target/webfont.js\" do\n  cp \"target/webfont.js\", \"webfontloader.js\"\nend\n\nfile \"target/webfont.js\", [:modules] => SourceJs + [\"target\"] do |t, args|\n  args.with_defaults(:modules => 'custom google typekit monotype fontdeck')\n\n  modules = args[:modules].split ' '\n\n  output_marker = \"%output%\"\n  output_wrapper = @modules.js_output_wrapper(output_marker, version)\n\n  args = [\n    [\"-jar\", JsCompilerJar],\n    [\"--compilation_level\", \"ADVANCED_OPTIMIZATIONS\"],\n    [\"--js_output_file\", t.name],\n    [\"--output_wrapper\", %(\"#{output_wrapper}\")],\n    [\"--warning_level\", \"VERBOSE\"],\n    [\"--summary_detail_level\", \"3\"],\n    [\"--externs\", \"externs.js\"],\n    \"--define goog.DEBUG=false\"\n  ]\n\n  args.concat modules.map { |m| \"--define INCLUDE_\" + m.upcase + \"_MODULE\" }\n\n  # Extra args to add warnings.\n  args.concat([\n    [\"--warning_level\", \"VERBOSE\"],\n    [\"--summary_detail_level\", \"1\"]\n  ])\n\n  source = @modules.all_source_files\n  args.concat source.map { |f| [\"--js\", f] }\n\n  output = `java #{args.flatten.join(' ')} 2>&1`\n  $?.success? ? (puts output) : (fail output)\nend\n\ndesc \"Creates debug version into target/webfont.js\"\ntask :debug, [:modules] => \"target/webfont_debug.js\"\n\nfile \"target/webfont_debug.js\", [:modules] => SourceJs + [\"target\"] do |t, args|\n  args.with_defaults(:modules => 'custom google typekit monotype fontdeck')\n\n  modules = args[:modules].split ' '\n\n  output_marker = \"%output%\"\n  output_wrapper = @modules.js_output_wrapper(output_marker, version)\n\n  args = [\n    [\"-jar\", JsCompilerJar],\n    [\"--compilation_level\", \"ADVANCED_OPTIMIZATIONS\"],\n    [\"--js_output_file\", t.name],\n    [\"--output_wrapper\", %(\"#{output_wrapper}\")],\n    [\"--warning_level\", \"VERBOSE\"],\n    [\"--summary_detail_level\", \"3\"],\n    [\"--externs\", \"externs.js\"],\n    \"--debug=true\",\n    \"--formatting=PRETTY_PRINT\",\n    \"--formatting=PRINT_INPUT_DELIMITER\"\n  ]\n\n  args.concat modules.map { |m| \"--define INCLUDE_\" + m.upcase + \"_MODULE\" }\n\n  # Extra args to add warnings.\n  args.concat([\n    [\"--warning_level\", \"VERBOSE\"],\n    [\"--summary_detail_level\", \"1\"]\n  ])\n\n  source = @modules.all_source_files\n  args.concat source.map { |f| [\"--js\", f] }\n\n  output = `java #{args.flatten.join(' ')} 2>&1`\n  $?.success? ? (puts output) : (fail output)\nend\n\n#\n# Run\n#\ndesc \"BrowserStack tests\"\ntask :bstest do |t|\n  exec \"browserstack-test -u $BROWSERSTACK_USERNAME -p $BROWSERSTACK_PASSWORD -k $BROWSERSTACK_KEY -b browsers.json -t 300 http://localhost:9999/spec/index.html\"\nend\n\ndesc \"Test everything\"\ntask :default => [:clean, :gzipbytes, :test]\n\ndesc \"Run all tests\"\ntask :test do |t|\n  exec \"phantomjs tools/jasmine-phantomjs/jasmine-phantomjs.js spec/index.html\"\nend\n\ndesc \"Start the demo server\"\ntask :demo => \"target/webfont.js\" do |t|\n  js = t.prerequisites.first\n  exec \"bin/webfontloader-demos -F --compiled_js #{js}\"\nend\n\ndesc \"Start the demo server for development\"\ntask :demodev do\n  exec \"bin/webfontloader-demos -F -L --modules\"\nend\n\ndesc \"Find out how many bytes the source is\"\ntask :bytes => [:clean, \"target/webfont.js\"] do |t|\n  js = t.prerequisites.last\n  bytes = File.read(js).size\n  puts \"#{bytes} bytes uncompressed\"\nend\n\ndesc \"Find out how many bytes the source is when gzipped\"\ntask :gzipbytes => [:clean, \"target/webfont.js\"] do |t|\n  require 'zlib'\n  js = t.prerequisites.last\n  bytes = Zlib::Deflate.deflate(File.read(js)).size\n  puts \"#{bytes} bytes gzipped\"\nend\n\n\n#############################################################################\n#\n# Packaging tasks\n#\n#############################################################################\n\ntask :release => [:build] do\n  unless `git branch` =~ /^\\* master$/\n    puts \"You must be on the master branch to release!\"\n    exit!\n  end\n  sh \"git add webfontloader.js\"\n  sh \"git commit --allow-empty -a -m 'Release #{version}'\"\n  sh \"npm version #{version}\"\n  sh \"git push --tags origin master\"\n  sh \"gem push pkg/#{name}-#{version}.gem\"\n  sh \"npm publish\"\nend\n\ntask :build => :gemspec do\n  Rake::Task[\"target/webfont.js\"].execute\n  Rake::Task[\"webfontloader.js\"].execute\n  sh \"mkdir -p pkg\"\n  sh \"gem build #{gemspec_file}\"\n  sh \"mv #{gem_file} pkg\"\nend\n\ntask :gemspec => :validate do\n  # read spec file and split out manifest section\n  spec = File.read(gemspec_file)\n  head, manifest, tail = spec.split(\"  # = MANIFEST =\\n\")\n\n  # replace name version and date\n  replace_header(head, :name)\n  replace_header(head, :version)\n  replace_header(head, :date)\n\n  # determine file list from git ls-files\n  files = `git ls-files`.\n    split(\"\\n\").\n    sort.\n    reject { |file| file =~ /^\\./ }.\n    reject { |file| file =~ /^(rdoc|pkg)/ }.\n    map { |file| \"    #{file.gsub(/\\s/, '\\ ')}\" }.\n    join(\"\\n\")\n\n  # piece file back together and write\n  manifest = \"  s.files = %w[\\n#{files}\\n  ]\\n\"\n  spec = [head, manifest, tail].join(\"  # = MANIFEST =\\n\")\n  File.open(gemspec_file, 'w') { |io| io.write(spec) }\n  puts \"Updated #{gemspec_file}\"\nend\n\ntask :validate do\n  libfiles = Dir['lib/*'] - [\"lib/#{name}.rb\", \"lib/#{name}\"]\n  unless libfiles.empty?\n    puts \"Directory `lib` should only contain a `#{name}.rb` file and `#{name}` dir.\"\n    exit!\n  end\n  unless Dir['VERSION*'].empty?\n    puts \"A `VERSION` file at root level violates Gem best practices.\"\n    exit!\n  end\nend\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.412109375,
          "content": "{\n  \"name\": \"webfontloader\",\n  \"main\": \"webfontloader.js\",\n  \"description\": \"Web Font Loader gives you added control when using linked fonts via @font-face.\",\n  \"moduleType\": [\"amd\", \"node\"],\n  \"license\": \"Apache-2.0\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"spec\",\n    \"tools\",\n    \"lib\",\n    \"bin\"\n  ],\n  \"keywords\": [\n    \"web\",\n    \"fonts\",\n    \"webfonts\",\n    \"font\",\n    \"loader\",\n    \"@font-face\"\n  ]\n}\n"
        },
        {
          "name": "browsers.json",
          "type": "blob",
          "size": 2.4404296875,
          "content": "[\n  {\n    \"os_version\": \"XP\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"12.16\",\n    \"browser\": \"opera\"\n  },\n  {\n    \"os_version\": \"XP\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"3.6\",\n    \"browser\": \"firefox\"\n  },\n  {\n    \"os_version\": \"XP\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"20.0\",\n    \"browser\": \"firefox\"\n  },\n  {\n    \"os_version\": \"XP\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"6.0\",\n    \"browser\": \"ie\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"XP\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"7.0\",\n    \"browser\": \"ie\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"XP\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"8.0\",\n    \"browser\": \"ie\"\n  },\n  {\n    \"os_version\": \"8\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"10.0 Desktop\",\n    \"browser\": \"ie\"\n  },\n  {\n    \"os_version\": \"7\",\n    \"os\": \"Windows\",\n    \"browser_version\": \"9.0\",\n    \"browser\": \"ie\"\n  },\n  {\n    \"os_version\": \"Mountain Lion\",\n    \"os\": \"OS X\",\n    \"browser_version\": \"6.0\",\n    \"browser\": \"safari\"\n  },\n  {\n    \"os_version\": \"Mountain Lion\",\n    \"os\": \"OS X\",\n    \"browser_version\": \"25.0\",\n    \"browser\": \"chrome\"\n  },\n  {\n    \"os_version\": \"Snow Leopard\",\n    \"os\": \"OS X\",\n    \"browser_version\": \"5.0\",\n    \"browser\": \"safari\"\n  },\n  {\n    \"os_version\": \"5.0\",\n    \"device\": \"iPad 2 (5.0)\",\n    \"os\": \"ios\",\n    \"browser\": \"Mobile Safari\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"5.1\",\n    \"device\": \"iPad 3rd\",\n    \"os\": \"ios\",\n    \"browser\": \"Mobile Safari\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"6.0\",\n    \"device\": \"iPhone 5\",\n    \"os\": \"ios\",\n    \"browser\": \"Mobile Safari\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"4.3.2\",\n    \"device\": \"iPad 2\",\n    \"os\": \"ios\",\n    \"browser\": \"Mobile Safari\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"2.3\",\n    \"device\": \"Samsung Galaxy S II\",\n    \"os\": \"android\",\n    \"browser\": \"Android Browser\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"2.2\",\n    \"device\": \"Samsung Galaxy S\",\n    \"os\": \"android\",\n    \"browser\": \"Android Browser\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"4.2\",\n    \"device\": \"LG Nexus 4\",\n    \"os\": \"android\",\n    \"browser\": \"Android Browser\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"4.0\",\n    \"device\": \"Samsung Galaxy Nexus\",\n    \"os\": \"android\",\n    \"browser\": \"Android Browser\",\n    \"timeout\": \"300\"\n  },\n  {\n    \"os_version\": \"4.1\",\n    \"device\": \"Samsung Galaxy S III\",\n    \"os\": \"android\",\n    \"browser\": \"Android Browser\",\n    \"timeout\": \"300\"\n  }\n]\n"
        },
        {
          "name": "externs.js",
          "type": "blob",
          "size": 0.173828125,
          "content": "/**\n * @type {function(function():*)}\n */\nvar define;\n\n/**\n * @type {boolean?}\n */\ndefine.amd;\n\n/**\n * @type {Object}\n */\nvar module;\n\n/**\n * @type {Object?}\n */\nmodule.exports;\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.91015625,
          "content": "{\n  \"name\": \"webfontloader\",\n  \"version\": \"1.6.28\",\n  \"description\": \"Web Font Loader gives you added control when using linked fonts via @font-face.\",\n  \"main\": \"webfontloader.js\",\n  \"scripts\": {\n    \"test\": \"phantomjs tools/jasmine-phantomjs/jasmine-phantomjs.js spec/index.html\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/typekit/webfontloader.git\"\n  },\n  \"keywords\": [\n    \"web\",\n    \"fonts\",\n    \"webfonts\",\n    \"font\",\n    \"loader\",\n    \"@font-face\"\n  ],\n  \"files\": [\n    \"webfontloader.js\",\n    \"src/**/*.js\"\n  ],\n  \"contributors\": [\n    \"Ryan Carver <ryan@typekit.com>\",\n    \"Jeremie Lenfant-engelmann <jeremiele@google.com>\",\n    \"Sean McBride <sean@typekit.com>\",\n    \"Bram Stein <bram@typekit.com>\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/typekit/webfontloader/issues\"\n  },\n  \"homepage\": \"https://github.com/typekit/webfontloader\",\n  \"devDependencies\": {}\n}\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "webfontloader.gemspec",
          "type": "blob",
          "size": 7.4716796875,
          "content": "## This is the rakegem gemspec template. Make sure you read and understand\n## all of the comments. Some sections require modification, and others can\n## be deleted if you don't need them. Once you understand the contents of\n## this file, feel free to delete any comments that begin with two hash marks.\n## You can find comprehensive Gem::Specification documentation, at\n## http://docs.rubygems.org/read/chapter/20\nGem::Specification.new do |s|\n  s.specification_version = 2 if s.respond_to? :specification_version=\n  s.required_rubygems_version = Gem::Requirement.new(\">= 0\") if s.respond_to? :required_rubygems_version=\n  s.rubygems_version = '1.3.5'\n\n  ## Leave these as is they will be modified for you by the rake gemspec task.\n  ## If your rubyforge_project name is different, then edit it and comment out\n  ## the sub! line in the Rakefile\n  s.name              = 'webfontloader'\n  s.version           = '1.6.28'\n  s.date              = '2017-05-27'\n\n  ## Make sure your summary is short. The description may be as long\n  ## as you like.\n  s.summary     = \"WebFont Loader gives you added control when using linked fonts via @font-face.\"\n  s.description = <<-DESC\nWebFont Loader gives you added control when using linked fonts via\n`@font-face`. It provides a common interface to loading fonts regardless of\nthe source, then adds a standard set of events you may use to control the\nloading experience.\nDESC\n\n  ## List the primary authors. If there are a bunch of authors, it's probably\n  ## better to set the email to an email list or something. If you don't have\n  ## a custom homepage, consider using your GitHub URL or the like.\n  s.authors  = [\"Ryan Carver\", \"Jeremie Lenfant-engelmann\"]\n  s.email    = 'ryan@typekit.com'\n  s.homepage = 'http://github.com/typekit/webfontloader'\n\n  ## License\n  s.license = \"Apache-2.0\"\n\n  ## This gets added to the $LOAD_PATH so that 'lib/NAME.rb' can be required as\n  ## require 'NAME.rb' or'/lib/NAME/file.rb' can be as require 'NAME/file.rb'\n  s.require_paths = %w[lib]\n\n  ## This sections is only necessary if you have C extensions.\n  # s.require_paths << 'ext'\n  # s.extensions = %w[ext/extconf.rb]\n\n  ## If your gem includes any executables, list them here.\n  # s.executables = []\n  # s.default_executable = 'name'\n\n  ## Specify any RDoc options here. You'll want to add your README and\n  ## LICENSE files to the extra_rdoc_files list.\n  s.rdoc_options = [\"--charset=UTF-8\"]\n  s.extra_rdoc_files = %w[README.md] + Dir[\"docs/*.md\"]\n\n  ## List your runtime dependencies here. Runtime dependencies are those\n  ## that are needed for an end user to actually USE your code.\n  # s.add_dependency('DEPNAME', [\">= 1.1.0\", \"< 2.0.0\"])\n\n  ## List your development dependencies here. Development dependencies are\n  ## those that are only needed during development\n  s.add_development_dependency('rake', '~>0')\n  s.add_development_dependency('rack', '~>1.5', '>=1.5.1')\n  s.add_development_dependency('sinatra', '~>1.3', '>=1.3.4')\n  s.add_development_dependency('vegas', '~>0.1.11')\n\n  ## Leave this section as-is. It will be automatically generated from the\n  ## contents of your Git repository via the gemspec task. DO NOT REMOVE\n  ## THE MANIFEST COMMENTS, they are used as delimiters by the task.\n  # = MANIFEST =\n  s.files = %w[\n    CHANGELOG\n    CONTRIBUTING.md\n    Gemfile\n    LICENSE\n    README.md\n    Rakefile\n    bin/webfontloader-demos\n    bower.json\n    browsers.json\n    externs.js\n    lib/webfontloader.rb\n    lib/webfontloader/demo/public/basic.css\n    lib/webfontloader/demo/public/blank.html\n    lib/webfontloader/demo/public/custom-iframe.html\n    lib/webfontloader/demo/public/custom.html\n    lib/webfontloader/demo/public/event-css-active-multiple.html\n    lib/webfontloader/demo/public/event-css-active.html\n    lib/webfontloader/demo/public/event-css-inactive.html\n    lib/webfontloader/demo/public/event-css-loading.html\n    lib/webfontloader/demo/public/event-js-active.html\n    lib/webfontloader/demo/public/event-js-font-active.html\n    lib/webfontloader/demo/public/event-js-loading.html\n    lib/webfontloader/demo/public/events-variations.html\n    lib/webfontloader/demo/public/events.html\n    lib/webfontloader/demo/public/fontdeck.html\n    lib/webfontloader/demo/public/fontwatchrunner-default-fonts.html\n    lib/webfontloader/demo/public/google-css.html\n    lib/webfontloader/demo/public/google-iframe.html\n    lib/webfontloader/demo/public/google.html\n    lib/webfontloader/demo/public/ie-fast-js.html\n    lib/webfontloader/demo/public/ie-slow-js.html\n    lib/webfontloader/demo/public/ie-slow-link.html\n    lib/webfontloader/demo/public/index.html\n    lib/webfontloader/demo/public/jquery.min.js\n    lib/webfontloader/demo/public/monotype-iframe.html\n    lib/webfontloader/demo/public/monotype.html\n    lib/webfontloader/demo/public/typekit-iframe.html\n    lib/webfontloader/demo/public/typekit-variations.html\n    lib/webfontloader/demo/public/typekit.html\n    lib/webfontloader/demo/server.rb\n    lib/webfontloader/modules.rb\n    package.json\n    spec/core/cssclassname_spec.js\n    spec/core/domhelper_spec.js\n    spec/core/eventdispatcher_spec.js\n    spec/core/font_spec.js\n    spec/core/fontmoduleloader_spec.js\n    spec/core/fontruler_spec.js\n    spec/core/fontwatcher_spec.js\n    spec/core/fontwatchrunner_spec.js\n    spec/core/nativefontwatchrunner_spec.js\n    spec/core/size_spec.js\n    spec/core/webfont_spec.js\n    spec/deps.js\n    spec/fixtures/external_script.js\n    spec/fixtures/external_stylesheet.css\n    spec/fixtures/fonts/LICENSE.txt\n    spec/fixtures/fonts/nullfont.css\n    spec/fixtures/fonts/nullfont1.css\n    spec/fixtures/fonts/nullfont2.css\n    spec/fixtures/fonts/nullfont3.css\n    spec/fixtures/fonts/sourcesans.eot\n    spec/fixtures/fonts/sourcesans.otf\n    spec/fixtures/fonts/sourcesans.svg\n    spec/fixtures/fonts/sourcesans.ttf\n    spec/fixtures/fonts/sourcesans.woff\n    spec/fixtures/fonts/sourcesansa.css\n    spec/fixtures/fonts/sourcesansb.css\n    spec/fixtures/fonts/sourcesansc.css\n    spec/fixtures/fonts/sourcesansd.css\n    spec/fixtures/fonts/sourcesansdup1.css\n    spec/fixtures/fonts/sourcesansdup2.css\n    spec/index.html\n    spec/modules/custom_spec.js\n    spec/modules/fontdeck_spec.js\n    spec/modules/google/fontapiparser_spec.js\n    spec/modules/google/fontapiurlbuilder_spec.js\n    spec/modules/google/googlefontapi_spec.js\n    spec/modules/monotype_spec.js\n    spec/modules/typekit_spec.js\n    src/closure.js\n    src/core/cssclassname.js\n    src/core/domhelper.js\n    src/core/eventdispatcher.js\n    src/core/font.js\n    src/core/fontmodule.js\n    src/core/fontmoduleloader.js\n    src/core/fontruler.js\n    src/core/fontwatcher.js\n    src/core/fontwatchrunner.js\n    src/core/initialize.js\n    src/core/nativefontwatchrunner.js\n    src/core/stylesheetwaiter.js\n    src/core/webfont.js\n    src/modules.yml\n    src/modules/custom.js\n    src/modules/fontdeck.js\n    src/modules/google/fontapiparser.js\n    src/modules/google/fontapiurlbuilder.js\n    src/modules/google/googlefontapi.js\n    src/modules/monotype.js\n    src/modules/typekit.js\n    tools/compiler/base.js\n    tools/compiler/compiler.jar\n    tools/jasmine-browserstack/jasmine-browserstack.js\n    tools/jasmine-phantomjs/jasmine-phantomjs.js\n    tools/jasmine-phantomjs/terminal-reporter.js\n    tools/jasmine/MIT.LICENSE\n    tools/jasmine/jasmine-html.js\n    tools/jasmine/jasmine.css\n    tools/jasmine/jasmine.js\n    webfontloader.gemspec\n    webfontloader.js\n  ]\n  # = MANIFEST =\n\n  ## Test files will be grabbed from the file list. Make sure the path glob\n  ## matches what you actually use.\n  s.test_files = s.files.select { |path| path =~ /^spec\\/.*_spec\\.rb/ }\nend\n"
        },
        {
          "name": "webfontloader.js",
          "type": "blob",
          "size": 12.2119140625,
          "content": "/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n"
        }
      ]
    }
  ]
}