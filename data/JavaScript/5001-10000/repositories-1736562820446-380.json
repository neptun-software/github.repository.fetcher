{
  "metadata": {
    "timestamp": 1736562820446,
    "page": 380,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zeroclipboard/zeroclipboard",
      "stars": 6608,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08984375,
          "content": "# Node.js\n/node_modules/\n/npm-debug.log\n\n# Istanbul\n/coverage/\n/tmp/\n\n# ComponentJS\n/build/\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 1.185546875,
          "content": "{\n  /* Enforcing options */\n  \"bitwise\": true,\n  \"camelcase\": true,\n  \"curly\": true,\n  \"eqeqeq\": true,\n  \"es3\": true,\n  \"es5\": false,\n  \"forin\": true,\n  \"freeze\": true,\n  \"immed\": true,\n  \"indent\": 2,\n  \"latedef\": false,   /* IDEAL: `true` */\n  \"newcap\": true,\n  \"noarg\": true,\n  \"noempty\": true,\n  \"nonbsp\": true,\n  \"nonew\": true,\n  \"plusplus\": false,\n  \"quotmark\": \"double\",\n  \"undef\": false,     /* IDEAL: `true` */\n  \"unused\": false,    /* IDEAL: `true` */\n  \"strict\": false,    /* IDEAL: `true` */\n  \"trailing\": true,\n  \"maxparams\": 4,\n  \"maxdepth\": 5,\n  \"maxstatements\": 25,\n  \"maxlen\": false,    /* IDEAL: 120? */\n\n\n  /* Relaxing options */\n  \"asi\": false,\n  \"boss\": false,\n  \"debug\": false,\n  \"eqnull\": true,\n  \"esnext\": false,\n  \"evil\": false,\n  \"expr\": false,\n  \"funcscope\": false,\n  \"gcl\": false,\n  \"globalstrict\": false,\n  \"iterator\": false,\n  \"lastsemic\": false,\n  \"laxbreak\": false,\n  \"laxcomma\": false,\n  \"loopfunc\": false,\n  \"maxerr\": 50,\n  \"moz\": false,\n  \"multistr\": false,\n  \"notypeof\": false,\n  \"proto\": false,\n  \"scripturl\": false,\n  \"smarttabs\": false,\n  \"shadow\": false,\n  \"sub\": false,\n  \"supernew\": false,\n  \"validthis\": false,\n  \"noyield\": false,\n\n  /* Environments */\n  \"browser\": true\n}"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0205078125,
          "content": "docs/\ntest/\n.DS_Store"
        },
        {
          "name": ".spmignore",
          "type": "blob",
          "size": 0.013671875,
          "content": "docs\nsrc\ntest\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.115234375,
          "content": "language: node_js\nnode_js:\n  - \"0.10\"\nbefore_install:\n  - npm update -g npm\n  - npm install -g grunt-cli\n\nsudo: false\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.87109375,
          "content": "## Contributing\n\n[issues]: https://github.com/zeroclipboard/zeroclipboard/issues\n\nHi there! We're thrilled that you'd like to contribute to this project. Your help is essential for keeping it great.\n\n## Using the issue tracker\n\nThe [issue tracker](issues) is the preferred channel for [bug reports](#bug-reports), [features requests](#feature-requests) and [submitting pull requests](#pull-requests), but please respect the following restrictions:\n\n* Please **do not** use the issue tracker for personal support requests.\n* Please **do not** derail or troll issues. Keep the discussion on topic and respect the opinions of others.\n\n## Bug reports\n\nA bug is a _demonstrable problem_ that is caused by the code in the repository. Good bug reports are extremely helpful, so thanks!\n\nGuidelines for bug reports:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been reported.\n\n2. **Check if the issue has been fixed** &mdash; try to reproduce it using the latest `master` or development branch in the repository.\n\nA good bug report shouldn't leave others needing to chase you up for more information. Please try to be as detailed as possible in your report. What is your environment? What steps will reproduce the issue? What browser(s) and OS experience the problem? Do other browsers show the bug differently? What would you expect to be the outcome? All these details will help people to fix any potential bugs.\n\nExample:\n\n> Short and descriptive example bug report title\n>\n> A summary of the issue and the browser/OS environment in which it occurs. If\n> suitable, include the steps required to reproduce the bug.\n>\n> 1. This is the first step\n> 2. This is the second step\n> 3. Further steps, etc.\n>\n> Any other information you want to share that is relevant to the issue being reported. This might include the lines of code that you have identified as causing the bug, and potential solutions (and your opinions on their merits).\n\n## Feature requests\n\nFeature requests are welcome. But take a moment to find out whether your idea fits with the scope and aims of the project. It's up to *you* to make a strong case to convince the project's developers of the merits of this feature. Please provide as much detail and context as possible.\n\n we have a [roadmap.md](docs/roadmap.md) of features we want. You can add features you want there, or just code the feature and send a pull request.\n\n\n## Pull requests\n\nGood pull requests—patches, improvements, new features—are a fantastic help. They should remain focused in scope and avoid containing unrelated commits.\n\n**Please ask first** before embarking on any significant pull request (e.g. implementing features, refactoring code, porting to a different language), otherwise you risk spending a lot of time working on something that the project's developers might not want to merge into the project.\n\nAdhering to the following process is the best way to get your work included in the project:\n\n1. Fork and clone the repository\n2. Create a new branch: `git checkout -b my-branch-name`\n3. Make your change, add tests, and make sure the tests still pass\n4. Push to your fork and [submit a pull request](https://help.github.com/articles/creating-a-pull-request/)\n5. Pat your self on the back and wait for your pull request to be reviewed and merged.\n\nHere are a few things you can do that will increase the likelihood of your pull request being accepted:\n\n- Keep your change as focused as possible. If there are multiple changes you would like to make that are not dependent upon each other, consider submitting them as separate pull requests.\n- Write a [good commit message](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).\n\n## Resources\n\n- [Contributing to Open Source on GitHub](https://guides.github.com/activities/contributing-to-open-source/)\n- [Using Pull Requests](https://help.github.com/articles/using-pull-requests/)\n- [GitHub Help](https://help.github.com)\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 10.001953125,
          "content": "/*jshint -W106 */\n/*jshint node:true, maxstatements: false, maxlen: false */\n\nvar os = require(\"os\");\nvar path = require(\"path\");\nvar loadGruntTasks = require(\"load-grunt-tasks\");\n\nmodule.exports = function(grunt) {\n  \"use strict\";\n\n  // Load necessary tasks\n  loadGruntTasks(grunt);\n\n\n  // Metadata\n  var pkg = grunt.file.readJSON(\"package.json\");\n\n  // Make a temp dir for Flash compilation\n  var tmpDir = os.tmpdir ? os.tmpdir() : os.tmpDir();\n  var flashTmpDir = path.join(tmpDir, \"zcflash\");\n\n  // Shared configuration\n  var localPort = 7320;  // \"ZERO\"\n\n  // Project configuration.\n  var config = {\n    // Task configuration\n    jshint: {\n      options: {\n        jshintrc: true\n      },\n      gruntfile: [\"Gruntfile.js\"],\n      js: [\"src/js/**/*.js\", \"!src/js/start.js\", \"!src/js/end.js\"],\n      test: [\"test/**/*.js\"],\n      dist: [\"dist/*.js\", \"!dist/*.min.js\"]\n    },\n    flexpmd: {\n      flash: {\n        src: [flashTmpDir]\n      }\n    },\n    clean: {\n      jsDist: [\"ZeroClipboard.*\", \"dist/ZeroClipboard.*\", \"!ZeroClipboard.swf\", \"!dist/ZeroClipboard.swf\"],\n      flashDist: [\"ZeroClipboard.swf\", \"dist/ZeroClipboard.swf\"],\n      flashTemp: {\n        options: {\n          // Force is required when trying to clean outside of the project dir\n          force: true\n        },\n        src: [flashTmpDir]\n      },\n      meta: [\"bower.json\", \"component.json\", \"composer.json\", \"LICENSE\"],\n      coveralls: [\"tmp/\", \"coverage/\"]\n    },\n    concat: {\n      options: {\n        stripBanners: false,\n        process: {\n          data: pkg\n        }\n      },\n      core: {\n        src: [\n          \"src/meta/source-banner.tmpl\",\n          \"src/js/start.js\",\n          \"src/js/shared/state.js\",\n          \"src/js/shared/private.js\",\n          \"src/js/core/state.js\",\n          \"src/js/core/private.js\",\n          \"src/js/core/api.js\",\n          \"src/js/end.js\"\n        ],\n        dest: \"dist/ZeroClipboard.Core.js\"\n      },\n      client: {\n        src: [\n          \"src/meta/source-banner.tmpl\",\n          \"src/js/start.js\",\n          \"src/js/shared/state.js\",\n          \"src/js/shared/private.js\",\n          \"src/js/core/state.js\",\n          \"src/js/core/private.js\",\n          \"src/js/core/api.js\",\n          \"src/js/client/state.js\",\n          \"src/js/client/private.js\",\n          \"src/js/client/api.js\",\n          \"src/js/end.js\"\n        ],\n        dest: \"dist/ZeroClipboard.js\"\n      },\n      flash: {\n        files: [\n          {\n            src: [\n              \"src/meta/source-banner.tmpl\",\n              \"src/flash/ZeroClipboard.as\"\n            ],\n            dest: path.join(flashTmpDir, \"ZeroClipboard.as\")\n          },\n          {\n            src: [\n              \"src/meta/source-banner.tmpl\",\n              \"src/flash/ClipboardInjector.as\"\n            ],\n            dest: path.join(flashTmpDir, \"ClipboardInjector.as\")\n          },\n          {\n            src: [\n              \"src/meta/source-banner.tmpl\",\n              \"src/flash/JsProxy.as\"\n            ],\n            dest: path.join(flashTmpDir, \"JsProxy.as\")\n          },\n          {\n            src: [\n              \"src/meta/source-banner.tmpl\",\n              \"src/flash/XssUtils.as\"\n            ],\n            dest: path.join(flashTmpDir, \"XssUtils.as\")\n          }\n        ]\n      }\n    },\n    uglify: {\n      options: {\n        report: \"min\"\n      },\n      js: {\n        options: {\n          preserveComments: function(node, comment) {\n            return comment &&\n              comment.type === \"comment2\" &&\n              /^(!|\\*|\\*!)\\r?\\n/.test(comment.value);\n          },\n          beautify: {\n            beautify: true,\n            // `indent_level` requires jshint -W106\n            indent_level: 2\n          },\n          mangle: false,\n          compress: false\n        },\n        files: [\n          {\n            src: [\"<%= concat.core.dest %>\"],\n            dest: \"<%= concat.core.dest %>\"\n          },\n          {\n            src: [\"<%= concat.client.dest %>\"],\n            dest: \"<%= concat.client.dest %>\"\n          }\n        ]\n      },\n      minjs: {\n        options: {\n          preserveComments: function(node, comment) {\n            return comment &&\n              comment.type === \"comment2\" &&\n              /^(!|\\*!)\\r?\\n/.test(comment.value);\n          },\n          sourceMap: true,\n          sourceMapName: function(dest) {\n            return dest.replace(\".min.js\", \".min.map\");\n          },\n          // Bundles the contents of \"`src`\" into the \"`dest`.map\" source map file. This way,\n          // consumers only need to host the \"*.min.js\" and \"*.min.map\" files rather than\n          // needing to host all three files: \"*.js\", \"*.min.js\", and \"*.min.map\".\n          sourceMapIncludeSources: true\n        },\n        files: [\n          {\n            src: [\"<%= concat.core.dest %>\"],\n            dest: \"dist/ZeroClipboard.Core.min.js\"\n          },\n          {\n            src: [\"<%= concat.client.dest %>\"],\n            dest: \"dist/ZeroClipboard.min.js\"\n          }\n        ]\n      }\n    },\n    mxmlc: {\n      options: {\n        rawConfig: \"-target-player=11.0.0 -static-link-runtime-shared-libraries=true -actionscript-file-encoding=UTF-8\"\n      },\n      swf: {\n        files: {\n          \"dist/ZeroClipboard.swf\": [\"<%= concat.flash.files[0].dest %>\"]\n        }\n      }\n    },\n    template: {\n      options: {\n        data: pkg\n      },\n      bower: {\n        files: {\n          \"bower.json\": [\"src/meta/bower.json.tmpl\"]\n        }\n      },\n      component: {\n        files: {\n          \"component.json\": [\"src/meta/component.json.tmpl\"]\n        }\n      },\n      composer: {\n        files: {\n          \"composer.json\": [\"src/meta/composer.json.tmpl\"]\n        }\n      },\n      LICENSE: {\n        files: {\n          \"LICENSE\": [\"src/meta/LICENSE.tmpl\"]\n        }\n      }\n    },\n    \"json-format\": {\n      options: {\n        indent: 2\n      },\n      meta: {\n        files: [\n          {\n            expand: true,\n            cwd: \"./\",\n            src: [\"./*.json\"],\n            dest: \"./\"\n          }\n        ]\n      }\n    },\n    chmod: {\n      options: {\n        mode: \"444\"\n      },\n      dist: [\"dist/ZeroClipboard.*\"],\n      meta: [\"bower.json\", \"component.json\", \"composer.json\", \"LICENSE\"]\n    },\n    connect: {\n      server: {\n        options: {\n          port: localPort\n        }\n      }\n    },\n    qunit: {\n      file: [\n        \"test/shared/private.tests.js.html\",\n        \"test/core/private.tests.js.html\",\n        \"test/core/api.tests.js.html\",\n        \"test/client/private.tests.js.html\",\n        \"test/client/api.tests.js.html\",\n        \"test/built/ZeroClipboard.Core.tests.js.html\",\n        \"test/built/ZeroClipboard.tests.js.html\"\n        //\"test/**/*.tests.js.html\"\n      ],\n      http: {\n        options: {\n          urls:\n            grunt.file.expand([\n              \"test/shared/private.tests.js.html\",\n              \"test/core/private.tests.js.html\",\n              \"test/core/api.tests.js.html\",\n              \"test/client/private.tests.js.html\",\n              \"test/client/api.tests.js.html\",\n              \"test/built/ZeroClipboard.Core.tests.js.html\",\n              \"test/built/ZeroClipboard.tests.js.html\"\n              //\"test/**/*.tests.js.html\"\n            ]).map(function(testPage) {\n              return \"http://localhost:\" + localPort + \"/\" + testPage + \"?noglobals=true\";\n            })\n        }\n      },\n      coveralls: {\n        options: {\n          \"--web-security\": false,\n          timeout: 10000,\n          coverage: {\n            baseUrl: \".\",\n            src: [\n              \"src/js/**/*.js\",\n              \"!src/js/start.js\",\n              \"!src/js/end.js\",\n              \"dist/*.js\",\n              \"!dist/*.min.js\"\n            ],\n            instrumentedFiles: \"tmp\",\n            htmlReport: \"coverage/html\",\n            lcovReport: \"coverage/lcov\",\n            statementsThresholdPct: 60.0,\n            disposeCollector: true\n          },\n          urls:\n            grunt.file.expand([\n              \"test/shared/private.tests.js.html\",\n              \"test/core/private.tests.js.html\",\n              \"test/core/api.tests.js.html\",\n              \"test/client/private.tests.js.html\",\n              \"test/client/api.tests.js.html\",\n              \"test/built/ZeroClipboard.Core.tests.js.html\",\n              \"test/built/ZeroClipboard.tests.js.html\"\n              //\"test/**/*.tests.js.html\"\n            ]).map(function(testPage) {\n              return \"http://localhost:\" + localPort + \"/\" + testPage + \"?noglobals=true\";\n            })\n        }\n      }\n    },\n    coveralls: {\n      options: {\n        force: true\n      },\n      all: {\n        src: \"<%= qunit.coveralls.options.coverage.lcovReport %>/lcov.info\"\n      }\n    },\n    watch: {\n      options: {\n        spawn: false\n      },\n      gruntfile: {\n        files: \"<%= jshint.Gruntfile %>\",\n        tasks: [\"jshint:Gruntfile\"]\n      },\n      js: {\n        files: \"<%= jshint.js %>\",\n        tasks: [\"jshint:js\", \"unittest\"]\n      },\n      test: {\n        files: \"<%= jshint.test %>\",\n        tasks: [\"jshint:test\", \"unittest\"]\n      }\n    }\n  };\n  grunt.initConfig(config);\n\n\n  // Task aliases and chains\n  grunt.registerTask(\"jshint-prebuild\", [\"jshint:gruntfile\", \"jshint:js\", \"jshint:test\"]);\n  grunt.registerTask(\"prep-flash\",      [\"clean:flashTemp\", \"concat:flash\"]);\n  grunt.registerTask(\"validate\",        [\"jshint-prebuild\", \"prep-flash\", \"flexpmd\"]);\n  grunt.registerTask(\"build\",           [\"clean\", \"concat\", \"jshint:dist\", \"uglify\", \"mxmlc\", \"template\", \"json-format\", \"chmod\"]);\n  grunt.registerTask(\"build-travis\",    [\"clean\", \"concat\", \"jshint:dist\", \"mxmlc\", \"chmod:dist\"]);\n  grunt.registerTask(\"test\",            [\"connect\", \"qunit:file\", \"qunit:http\"]);\n\n  // Default task //grunt concat\n  grunt.registerTask(\"default\", [\"validate\", \"build\", \"test\"]);\n\n  // Travis CI task\n  grunt.registerTask(\"travis\",  [\"validate\", \"build-travis\", \"test\", \"qunit:coveralls\", \"coveralls\"]);\n\n  // Local development tasks\n  grunt.registerTask(\"jsdev-build\", [\"jshint-prebuild\", \"clean:jsDist\", \"concat:core\", \"concat:client\", \"jshint:dist\", \"uglify:js\"]);\n  grunt.registerTask(\"jsdev\",       [\"jsdev-build\", \"test\"]);\n  grunt.registerTask(\"swfdev\",      [\"prep-flash\", \"flexpmd\", \"clean:flashDist\", \"mxmlc\", \"chmod:dist\"]);\n\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0712890625,
          "content": "The MIT License (MIT)\nCopyright (c) 2009-2017 Jon Rohan, James M. Greene\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.9423828125,
          "content": "### :warning: WARNING!\nThis library is no longer maintained as it is no longer necessary for modern web development. If you want your frontend JavaScript to manipulate the clipboard, please look into the new HTML Clipboard API (various docs available on MDN) or a small convenience wrapper around it like [clipboard.js](https://github.com/zenorocha/clipboard.js). Thanks for all your support, this project was a labor of love for many years. :heart:\n\n---\n\n#### Note:\n**This `master` branch contains the `v2.x` codebase for ZeroClipboard! For the `v1.x` codebase, see the [`1.x-master`](https://github.com/zeroclipboard/zeroclipboard/tree/1.x-master) branch instead.**\n\n\n# ZeroClipboard\n[![GitHub Latest Release](https://badge.fury.io/gh/zeroclipboard%2Fzeroclipboard.svg)](https://github.com/zeroclipboard/zeroclipboard) [![Build Status](https://secure.travis-ci.org/zeroclipboard/zeroclipboard.svg?branch=master)](https://travis-ci.org/zeroclipboard/zeroclipboard) ![GZip Size](https://badge-size.herokuapp.com/zeroclipboard/zeroclipboard/master/dist/ZeroClipboard.min.js?compression=gzip) [![Coverage Status](https://coveralls.io/repos/zeroclipboard/zeroclipboard/badge.svg?branch=master)](https://coveralls.io/r/zeroclipboard/zeroclipboard?branch=master) [![Dependency Status](https://david-dm.org/zeroclipboard/zeroclipboard.svg?theme=shields.io)](https://david-dm.org/zeroclipboard/zeroclipboard) [![Dev Dependency Status](https://david-dm.org/zeroclipboard/zeroclipboard/dev-status.svg?theme=shields.io)](https://david-dm.org/zeroclipboard/zeroclipboard#info=devDependencies)\n\nThe ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible [Adobe Flash](http://en.wikipedia.org/wiki/Adobe_Flash) movie and a [JavaScript](http://en.wikipedia.org/wiki/JavaScript) interface. The \"Zero\" signifies that the library is invisible and the user interface is left entirely up to you.\n\nThis is achieved by automatically floating the invisible movie on top of a [DOM](http://en.wikipedia.org/wiki/Document_Object_Model) element of your choice. Standard mouse events are even propagated out to your DOM element, so you can still have rollover and mousedown effects.\n\nSuggestions welcome read over the [contributing](/CONTRIBUTING.md) guidelines.\n\n## Setup\n\nTo setup the project for local development start with these commands in your terminal.\n\n```sh\n$ git clone https://github.com/zeroclipboard/zeroclipboard.git\n$ cd zeroclipboard/\n$ npm install -g grunt-cli\n$ npm install\n$ grunt\n```\n\n## Development\n\nBefore submitting a pull request you'll need to validate, build, and test your code. Run the default grunt task in your terminal.\n\n```sh\n$ grunt\n```\n\n## Testing\n\nIf you just want to run the tests, run grunt test.\n\n```sh\n$ grunt test\n```\n\n## Limitations\n\n### User Interaction Required\n\nDue to browser and Flash security restrictions, this clipboard injection can _**ONLY**_ occur when\nthe user clicks on the invisible Flash movie. A simulated `click` event from JavaScript will not\nsuffice as this would enable [clipboard poisoning](http://www.computerworld.com/s/article/9117268/Adobe_patches_Flash_clickjacking_and_clipboard_poisoning_bugs).\n\n### Other Limitations\n\nFor a complete list of limitations, see [docs/instructions.md#limitations](docs/instructions.md#limitations).\n\nOn that page, you will also find an [explanation of why ZeroClipboard will _NOT_ work by default on code playground sites](docs/instructions.md#starter-snippets-for-playground-sites) like JSFiddle, JSBin, and CodePen, as well as the appropriate \"View\" URLs to use on those sites in order to allow ZeroClipboard to work.\n\n\n## Simple Example\n\n```html\n<html>\n  <body>\n    <button id=\"copy-button\" data-clipboard-text=\"Copy Me!\" title=\"Click to copy me.\">Copy to Clipboard</button>\n    <script src=\"ZeroClipboard.js\"></script>\n    <script src=\"main.js\"></script>\n  </body>\n</html>\n```\n\n```js\n// main.js\nvar client = new ZeroClipboard( document.getElementById(\"copy-button\") );\n\nclient.on( \"ready\", function( readyEvent ) {\n  // alert( \"ZeroClipboard SWF is ready!\" );\n\n  client.on( \"aftercopy\", function( event ) {\n    // `this` === `client`\n    // `event.target` === the element that was clicked\n    event.target.style.display = \"none\";\n    alert(\"Copied text to clipboard: \" + event.data[\"text/plain\"] );\n  } );\n} );\n```\n\nSee [docs/instructions.md](docs/instructions.md) for more advanced options in using the library on your site.\nSee [docs/api/ZeroClipboard.md](docs/api/ZeroClipboard.md) for the complete API documentation.\n\nHere is a working [test page](http://zeroclipboard.github.io/#demo) where you can try out ZeroClipboard in your browser.\n\n\n## Testing ZeroClipboard Locally\n\nTo test the page [demo page](http://zeroclipboard.github.io/#demo) locally, clone the [website repo](https://github.com/zeroclipboard/zeroclipboard.github.io).\n\n## Support\n\nThis library is fully compatible with Flash Player 11.0.0 and above, which requires\nthat the clipboard copy operation be initiated by a user click event inside the\nFlash movie. This is achieved by automatically floating the invisible movie on top\nof a [DOM](http://en.wikipedia.org/wiki/Document_Object_Model) element of your\nchoice. Standard mouse events are even propagated out to your DOM element, so you\ncan still have rollover and mousedown effects with just a _little_ extra effort.\n\nZeroClipboard `v2.x` is expected to work in IE9+ and all of the evergreen browsers.\nAlthough support for IE7 & IE8 was officially dropped in `v2.0.0`, it was actually\nstill _technically_ supported through `v2.0.2`.\n\n## Releases\n\nStarting with version [1.1.7](https://github.com/zeroclipboard/zeroclipboard/releases/tag/v1.1.7), ZeroClipboard uses [semantic versioning](http://semver.org/).\n\nsee [releases](https://github.com/zeroclipboard/zeroclipboard/releases)\n\n## Related\n\n* [jquery.zeroclipboard](https://github.com/zeroclipboard/jquery.zeroclipboard)\n* [zeroclipboard-rails](https://github.com/zeroclipboard/zeroclipboard-rails)\n\n## License\n\nMIT &copy; [James M. Greene](http://greene.io/) [Jon Rohan](http://jonrohan.codes)\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.9765625,
          "content": "{\n  \"name\": \"zeroclipboard\",\n  \"description\": \"The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface\",\n  \"version\": \"2.4.0-beta.1\",\n  \"main\": [\n    \"dist/ZeroClipboard.js\",\n    \"dist/ZeroClipboard.swf\"\n  ],\n  \"keywords\": [\n    \"flash\",\n    \"clipboard\",\n    \"copy\",\n    \"cut\",\n    \"paste\",\n    \"zclip\",\n    \"clip\",\n    \"clippy\"\n  ],\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"Jon Rohan\",\n      \"email\": \"yes@jonrohan.codes\",\n      \"url\": \"http://jonrohan.me/\"\n    },\n    {\n      \"name\": \"James M. Greene\",\n      \"email\": \"james.m.greene@gmail.com\",\n      \"url\": \"http://greene.io/\"\n    }\n  ],\n  \"homepage\": \"http://zeroclipboard.github.io/\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/zeroclipboard/zeroclipboard.git\"\n  },\n  \"location\": \"git://github.com/zeroclipboard/zeroclipboard.git\",\n  \"ignore\": [\n    \"*\",\n    \"/dist/.jshintrc\",\n    \"!/bower.json\",\n    \"!/dist/**\"\n  ]\n}"
        },
        {
          "name": "component.json",
          "type": "blob",
          "size": 0.78515625,
          "content": "{\n  \"name\": \"zeroclipboard\",\n  \"repository\": \"zeroclipboard/zeroclipboard\",\n  \"description\": \"The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface\",\n  \"version\": \"2.4.0-beta.1\",\n  \"keywords\": [\n    \"flash\",\n    \"clipboard\",\n    \"copy\",\n    \"cut\",\n    \"paste\",\n    \"zclip\",\n    \"clip\",\n    \"clippy\"\n  ],\n  \"main\": [\n    \"dist/ZeroClipboard.js\"\n  ],\n  \"scripts\": [\n    \"dist/ZeroClipboard.js\"\n  ],\n  \"files\": [\n    \"dist/ZeroClipboard.swf\"\n  ],\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"Jon Rohan\",\n      \"email\": \"yes@jonrohan.codes\",\n      \"url\": \"http://jonrohan.me/\"\n    },\n    {\n      \"name\": \"James M. Greene\",\n      \"email\": \"james.m.greene@gmail.com\",\n      \"url\": \"http://greene.io/\"\n    }\n  ]\n}"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 1.2255859375,
          "content": "{\n  \"name\": \"zeroclipboard/zeroclipboard\",\n  \"description\": \"The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface\",\n  \"type\": \"component\",\n  \"keywords\": [\n    \"flash\",\n    \"clipboard\",\n    \"copy\",\n    \"cut\",\n    \"paste\",\n    \"zclip\",\n    \"clip\",\n    \"clippy\"\n  ],\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"Jon Rohan\",\n      \"email\": \"yes@jonrohan.codes\",\n      \"homepage\": \"http://jonrohan.me/\",\n      \"role\": \"Developer\"\n    },\n    {\n      \"name\": \"James M. Greene\",\n      \"email\": \"james.m.greene@gmail.com\",\n      \"homepage\": \"http://greene.io/\",\n      \"role\": \"Developer\"\n    }\n  ],\n  \"homepage\": \"http://zeroclipboard.github.io/\",\n  \"support\": {\n    \"source\": \"https://github.com/zeroclipboard/zeroclipboard.git\",\n    \"issues\": \"https://github.com/zeroclipboard/zeroclipboard/issues\"\n  },\n  \"extra\": {\n    \"component\": {\n      \"scripts\": [\n        \"dist/ZeroClipboard.js\"\n      ],\n      \"files\": [\n        \"dist/ZeroClipboard.swf\",\n        \"dist/ZeroClipboard.min.js\",\n        \"dist/ZeroClipboard.min.map\",\n        \"dist/ZeroClipboard.Core.js\",\n        \"dist/ZeroClipboard.Core.min.js\",\n        \"dist/ZeroClipboard.Core.min.map\"\n      ]\n    }\n  }\n}"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.9130859375,
          "content": "{\n  \"name\": \"zeroclipboard\",\n  \"title\": \"ZeroClipboard\",\n  \"version\": \"2.4.0-beta.1\",\n  \"description\": \"The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface\",\n  \"keywords\": [\n    \"flash\",\n    \"clipboard\",\n    \"copy\",\n    \"cut\",\n    \"paste\",\n    \"zclip\",\n    \"clip\",\n    \"clippy\"\n  ],\n  \"homepage\": \"http://zeroclipboard.github.io/\",\n  \"license\": \"MIT\",\n  \"contributors\": [\n    {\n      \"name\": \"Jon Rohan\",\n      \"email\": \"yes@jonrohan.codes\",\n      \"url\": \"http://jonrohan.me/\"\n    },\n    {\n      \"name\": \"James M. Greene\",\n      \"email\": \"james.m.greene@gmail.com\",\n      \"url\": \"http://greene.io/\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/zeroclipboard/zeroclipboard.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/zeroclipboard/zeroclipboard/issues\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"flex-sdk\": \"~4.6.0-0\",\n    \"flexpmd\": \"^1.3.0-1\",\n    \"grunt\": \"^0.4.5\",\n    \"grunt-chmod\": \"^1.0.3\",\n    \"grunt-contrib-clean\": \"^0.6.0\",\n    \"grunt-contrib-concat\": \"^0.5.1\",\n    \"grunt-contrib-connect\": \"^0.11.2\",\n    \"grunt-contrib-jshint\": \"^0.11.2\",\n    \"grunt-contrib-uglify\": \"^0.9.2\",\n    \"grunt-contrib-watch\": \"^0.6.1\",\n    \"grunt-coveralls\": \"^1.0.0\",\n    \"grunt-flexpmd\": \"^0.1.3\",\n    \"grunt-json-format\": \"^1.0.1\",\n    \"grunt-mxmlc\": \"^0.5.2\",\n    \"grunt-qunit-istanbul\": \"^0.5.0\",\n    \"grunt-template\": \"^0.2.3\",\n    \"jquery\": \"^2.1.4\",\n    \"load-grunt-tasks\": \"^3.2.0\",\n    \"qunit-composite\": \"^1.1.0\",\n    \"qunitjs\": \"^1.18.0\",\n    \"spm\": \"^3.6.11\"\n  },\n  \"main\": \"dist/ZeroClipboard.js\",\n  \"files\": [\n    \"dist/ZeroClipboard.*\",\n    \"package.json\",\n    \"LICENSE\"\n  ],\n  \"spm\": {\n    \"main\": \"dist/ZeroClipboard.js\",\n    \"output\": [\n      \"dist/ZeroClipboard.swf\",\n      \"dist/ZeroClipboard.Core.js\"\n    ]\n  },\n  \"scripts\": {\n    \"test\": \"grunt travis --verbose\",\n    \"postpublish\": \"spm publish\"\n  }\n}"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}