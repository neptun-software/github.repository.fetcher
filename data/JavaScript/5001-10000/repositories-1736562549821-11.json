{
  "metadata": {
    "timestamp": 1736562549821,
    "page": 11,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jprichardson/node-fs-extra",
      "stars": 9501,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0625,
          "content": ".nyc_output/\ncoverage/\nnode_modules/\n\n.idea\n*.iml\nnpm-debug.log\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "package-lock=false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 69.060546875,
          "content": "11.2.0 / 2023-11-27\n-------------------\n\n- Copy directory contents in parallel for better performance ([#1026](https://github.com/jprichardson/node-fs-extra/pull/1026))\n- Refactor internal code to use `async`/`await` ([#1020](https://github.com/jprichardson/node-fs-extra/issues/1020))\n\n11.1.1 / 2023-03-20\n-------------------\n\n- Preserve timestamps when moving files across devices ([#992](https://github.com/jprichardson/node-fs-extra/issues/992), [#994](https://github.com/jprichardson/node-fs-extra/pull/994))\n\n11.1.0 / 2022-11-29\n-------------------\n\n- Re-add `main` field to `package.json` for better TypeScript compatibility ([#979](https://github.com/jprichardson/node-fs-extra/issues/979), [#981](https://github.com/jprichardson/node-fs-extra/pull/981))\n\n11.0.0 / 2022-11-28\n-------------------\n\n### Breaking Changes\n\n- Don't allow requiring `fs-extra/lib/SOMETHING` (switched to `exports`) ([#974](https://github.com/jprichardson/node-fs-extra/pull/974))\n- Require Node v14.14+ ([#968](https://github.com/jprichardson/node-fs-extra/issues/968), [#969](https://github.com/jprichardson/node-fs-extra/pull/969))\n\n### New Features\n\n- Add `fs-extra/esm` for ESM named export support; see [docs](https://github.com/jprichardson/node-fs-extra#esm) for details ([#746](https://github.com/jprichardson/node-fs-extra/issues/746), [#974](https://github.com/jprichardson/node-fs-extra/pull/974))\n- Add promise support for `fs.readv()` ([#970](https://github.com/jprichardson/node-fs-extra/pull/970))\n\n### Bugfixes\n\n- Don't `stat` filtered items in `copy*` ([#965](https://github.com/jprichardson/node-fs-extra/issues/965), [#971](https://github.com/jprichardson/node-fs-extra/pull/971))\n- Remove buggy stats check in `copy` ([#918](https://github.com/jprichardson/node-fs-extra/issues/918), [#976](https://github.com/jprichardson/node-fs-extra/pull/976))\n\n10.1.0 / 2022-04-16\n-------------------\n\n- Warn if `fs.realpath.native` does not exist, instead of erroring ([#953](https://github.com/jprichardson/node-fs-extra/pull/953))\n- Allow explicitly passing `undefined` options to `move()` ([#947](https://github.com/jprichardson/node-fs-extra/issues/947), [#955](https://github.com/jprichardson/node-fs-extra/pull/955))\n- Use `process.emitWarning` instead of `console.warn` ([#954](https://github.com/jprichardson/node-fs-extra/pull/954))\n\n10.0.1 / 2022-02-22\n-------------------\n\n- Add `sideEffects: false` to `package.json` ([#941](https://github.com/jprichardson/node-fs-extra/pull/941))\n\n10.0.0 / 2021-05-03\n-------------------\n\n### Breaking changes\n\n- Require Node.js v12+ ([#886](https://github.com/jprichardson/node-fs-extra/issues/886), [#893](https://github.com/jprichardson/node-fs-extra/pull/893), [#890](https://github.com/jprichardson/node-fs-extra/pull/890), [#894](https://github.com/jprichardson/node-fs-extra/pull/894), [#895]( https://github.com/jprichardson/node-fs-extra/pull/895))\n- Allow copying broken symlinks ([#779](https://github.com/jprichardson/node-fs-extra/pull/779), [#765](https://github.com/jprichardson/node-fs-extra/issues/765), [#638](https://github.com/jprichardson/node-fs-extra/issues/638), [#761](https://github.com/jprichardson/node-fs-extra/issues/761))\n\n**The following changes, although technically semver-major, will not affect the vast majority of users:**\n\n- Ensure correct type when destination exists for `ensureLink*()`/`ensureSymlink*()` ([#826](https://github.com/jprichardson/node-fs-extra/pull/826), [#786](https://github.com/jprichardson/node-fs-extra/issues/786), [#870](https://github.com/jprichardson/node-fs-extra/issues/870))\n- Error when attempting to `copy*()` unknown file type ([#880](https://github.com/jprichardson/node-fs-extra/pull/880))\n- Remove undocumented options for `remove*()` ([#882](https://github.com/jprichardson/node-fs-extra/pull/882))\n\n### Improvements\n\n- Allow changing case of filenames with `move*()`, even on technically case-insensitive filesystems ([#759](https://github.com/jprichardson/node-fs-extra/issues/759), [#801](https://github.com/jprichardson/node-fs-extra/pull/801))\n- Use native `fs.rm*()` for `remove*()` in environments that support it ([#882](https://github.com/jprichardson/node-fs-extra/pull/882), [#806](https://github.com/jprichardson/node-fs-extra/issues/806))\n- Improve `emptyDir()` performance ([#885](https://github.com/jprichardson/node-fs-extra/pull/885))\n\n### Bugfixes\n\n- Ensure `copy*()`'s `filter` function is not called more than necessary ([#883](https://github.com/jprichardson/node-fs-extra/pull/883), [#809](https://github.com/jprichardson/node-fs-extra/issues/809))\n- Fix `move*()` raising `EPERM` error when moving a file to the root of a drive on Windows ([#897](https://github.com/jprichardson/node-fs-extra/pull/897), [#819](https://github.com/jprichardson/node-fs-extra/issues/819))\n\n### Miscellaneous changes\n\n- Do not use `at-least-node` as a dependency ([#896](https://github.com/jprichardson/node-fs-extra/pull/896))\n- Improve documentation ([#888](https://github.com/jprichardson/node-fs-extra/pull/888), [#830](https://github.com/jprichardson/node-fs-extra/issues/830), [#884](https://github.com/jprichardson/node-fs-extra/pull/884), [#843](https://github.com/jprichardson/node-fs-extra/issues/843))\n\n9.1.0 / 2021-01-19\n------------------\n\n- Add promise support for `fs.rm()` ([#841](https://github.com/jprichardson/node-fs-extra/issues/841), [#860](https://github.com/jprichardson/node-fs-extra/pull/860))\n- Upgrade universalify for performance improvments ([#825](https://github.com/jprichardson/node-fs-extra/pull/825))\n\n9.0.1 / 2020-06-03\n------------------\n\n- Fix issue with `ensureFile()` when used with Jest on Windows ([#804](https://github.com/jprichardson/node-fs-extra/issues/804), [#805](https://github.com/jprichardson/node-fs-extra/pull/805))\n- Remove unneeded `process.umask()` call ([#791](https://github.com/jprichardson/node-fs-extra/pull/791))\n- Docs improvements ([#753](https://github.com/jprichardson/node-fs-extra/pull/753), [#795](https://github.com/jprichardson/node-fs-extra/pull/795), [#797](https://github.com/jprichardson/node-fs-extra/pull/797))\n\n9.0.0 / 2020-03-19\n------------------\n\n### Breaking changes\n\n- Requires Node.js version 10 or greater ([#725](https://github.com/jprichardson/node-fs-extra/issues/725), [#751](https://github.com/jprichardson/node-fs-extra/pull/751))\n- Switched `ensureDir*` to use a fork of https://github.com/sindresorhus/make-dir to make use of native recursive `fs.mkdir` where possible ([#619](https://github.com/jprichardson/node-fs-extra/issues/619), [#756](https://github.com/jprichardson/node-fs-extra/pull/756))\n- Properly preserve `atime` for `copy*` with `preserveTimestamps` option ([#633](https://github.com/jprichardson/node-fs-extra/pull/633))\n\n**The following changes, allthough technically breaking, will not affect the vast majority of users:**\n\n- `outputJson` now outputs objects as they were when the function was called, even if they are mutated later ([#702](https://github.com/jprichardson/node-fs-extra/issues/702), [#768](https://github.com/jprichardson/node-fs-extra/pull/768))\n- Cannot pass `null` as an options parameter to `*Json*` methods ([#745](https://github.com/jprichardson/node-fs-extra/issues/745), [#768](https://github.com/jprichardson/node-fs-extra/pull/768))\n\n### Improvements\n\n- Add promise shims for `fs.writev` & `fs.opendir` ([#747](https://github.com/jprichardson/node-fs-extra/pull/747))\n- Better errors for `ensureFile` ([#696](https://github.com/jprichardson/node-fs-extra/issues/696), [#744](https://github.com/jprichardson/node-fs-extra/pull/744))\n- Better file comparison for older Node versions ([#694](https://github.com/jprichardson/node-fs-extra/pull/694))\n\n### Miscellaneous changes\n- Peformance optimizations ([#762](https://github.com/jprichardson/node-fs-extra/issues/762), [#764](https://github.com/jprichardson/node-fs-extra/pull/764))\n- Add missing documentation for aliases ([#758](https://github.com/jprichardson/node-fs-extra/issues/758), [#766](https://github.com/jprichardson/node-fs-extra/pull/766))\n- Update `universalify` dependency ([#767](https://github.com/jprichardson/node-fs-extra/pull/767))\n\n8.1.0 / 2019-06-28\n------------------\n\n- Add support for promisified `fs.realpath.native` in Node v9.2+ ([#650](https://github.com/jprichardson/node-fs-extra/issues/650), [#682](https://github.com/jprichardson/node-fs-extra/pull/682))\n- Update `graceful-fs` dependency ([#700](https://github.com/jprichardson/node-fs-extra/pull/700))\n- Use `graceful-fs` everywhere ([#700](https://github.com/jprichardson/node-fs-extra/pull/700))\n\n8.0.1 / 2019-05-13\n------------------\n\n- Fix bug `Maximum call stack size exceeded` error in `util/stat` ([#679](https://github.com/jprichardson/node-fs-extra/pull/679))\n\n8.0.0 / 2019-05-11\n------------------\n\n**NOTE:** Node.js v6 support is deprecated, and will be dropped in the next major release.\n\n- Use `renameSync()` under the hood in `moveSync()`\n- Fix bug with bind-mounted directories in `copy*()` ([#613](https://github.com/jprichardson/node-fs-extra/issues/613), [#618](https://github.com/jprichardson/node-fs-extra/pull/618))\n- Fix bug in `move()` with case-insensitive file systems\n- Use `fs.stat()`'s `bigint` option in `copy*()` & `move*()` where possible ([#657](https://github.com/jprichardson/node-fs-extra/issues/657))\n\n7.0.1 / 2018-11-07\n------------------\n\n- Fix `removeSync()` on Windows, in some cases, it would error out with `ENOTEMPTY` ([#646](https://github.com/jprichardson/node-fs-extra/pull/646))\n- Document `mode` option for `ensureDir*()` ([#587](https://github.com/jprichardson/node-fs-extra/pull/587))\n- Don't include documentation files in npm package tarball ([#642](https://github.com/jprichardson/node-fs-extra/issues/642), [#643](https://github.com/jprichardson/node-fs-extra/pull/643))\n\n7.0.0 / 2018-07-16\n------------------\n\n- **BREAKING:** Refine `copy*()` handling of symlinks to properly detect symlinks that point to the same file. ([#582](https://github.com/jprichardson/node-fs-extra/pull/582))\n- Fix bug with copying write-protected directories ([#600](https://github.com/jprichardson/node-fs-extra/pull/600))\n- Universalify `fs.lchmod()` ([#596](https://github.com/jprichardson/node-fs-extra/pull/596))\n- Add `engines` field to `package.json` ([#580](https://github.com/jprichardson/node-fs-extra/pull/580))\n\n6.0.1 / 2018-05-09\n------------------\n\n- Fix `fs.promises` `ExperimentalWarning` on Node v10.1.0 ([#578](https://github.com/jprichardson/node-fs-extra/pull/578))\n\n6.0.0 / 2018-05-01\n------------------\n\n- Drop support for Node.js versions 4, 5, & 7 ([#564](https://github.com/jprichardson/node-fs-extra/pull/564))\n- Rewrite `move` to use `fs.rename` where possible ([#549](https://github.com/jprichardson/node-fs-extra/pull/549))\n- Don't convert relative paths to absolute paths for `filter` ([#554](https://github.com/jprichardson/node-fs-extra/pull/554))\n- `copy*`'s behavior when `preserveTimestamps` is `false` has been OS-dependent since 5.0.0, but that's now explicitly noted in the docs ([#563](https://github.com/jprichardson/node-fs-extra/pull/563))\n- Fix subdirectory detection for `copy*` & `move*` ([#541](https://github.com/jprichardson/node-fs-extra/pull/541))\n- Handle case-insensitive paths correctly in `copy*` ([#568](https://github.com/jprichardson/node-fs-extra/pull/568))\n\n5.0.0 / 2017-12-11\n------------------\n\nSignificant refactor of `copy()` & `copySync()`, including breaking changes. No changes to other functions in this release.\n\nHuge thanks to **[@manidlou](https://github.com/manidlou)** for doing most of the work on this release.\n\n- The `filter` option can no longer be a RegExp (must be a function). This was deprecated since fs-extra v1.0.0. [#512](https://github.com/jprichardson/node-fs-extra/pull/512)\n- `copy()`'s `filter` option can now be a function that returns a Promise. [#518](https://github.com/jprichardson/node-fs-extra/pull/518)\n- `copy()` & `copySync()` now use `fs.copyFile()`/`fs.copyFileSync()` in environments that support it (currently Node 8.5.0+). Older Node versions still get the old implementation. [#505](https://github.com/jprichardson/node-fs-extra/pull/505)\n- Don't allow copying a directory into itself. [#83](https://github.com/jprichardson/node-fs-extra/issues/83)\n- Handle copying between identical files. [#198](https://github.com/jprichardson/node-fs-extra/issues/198)\n- Error out when copying an empty folder to a path that already exists. [#464](https://github.com/jprichardson/node-fs-extra/issues/464)\n- Don't create `dest`'s parent if the `filter` function aborts the `copy()` operation. [#517](https://github.com/jprichardson/node-fs-extra/pull/517)\n- Fix `writeStream` not being closed if there was an error in `copy()`. [#516](https://github.com/jprichardson/node-fs-extra/pull/516)\n\n4.0.3 / 2017-12-05\n------------------\n\n- Fix wrong `chmod` values in `fs.remove()` [#501](https://github.com/jprichardson/node-fs-extra/pull/501)\n- Fix `TypeError` on systems that don't have some `fs` operations like `lchown` [#520](https://github.com/jprichardson/node-fs-extra/pull/520)\n\n4.0.2 / 2017-09-12\n------------------\n\n- Added `EOL` option to `writeJson*` & `outputJson*` (via upgrade to jsonfile v4)\n- Added promise support to [`fs.copyFile()`](https://nodejs.org/api/fs.html#fs_fs_copyfile_src_dest_flags_callback) in Node 8.5+\n- Added `.js` extension to `main` field in `package.json` for better tooling compatibility. [#485](https://github.com/jprichardson/node-fs-extra/pull/485)\n\n4.0.1 / 2017-07-31\n------------------\n\n### Fixed\n\n- Previously, `ensureFile()` & `ensureFileSync()` would do nothing if the path was a directory. Now, they error out for consistency with `ensureDir()`. [#465](https://github.com/jprichardson/node-fs-extra/issues/465), [#466](https://github.com/jprichardson/node-fs-extra/pull/466), [#470](https://github.com/jprichardson/node-fs-extra/issues/470)\n\n4.0.0 / 2017-07-14\n------------------\n\n### Changed\n\n- **BREAKING:** The promisified versions of `fs.read()` & `fs.write()` now return objects. See [the docs](docs/fs-read-write.md) for details. [#436](https://github.com/jprichardson/node-fs-extra/issues/436), [#449](https://github.com/jprichardson/node-fs-extra/pull/449)\n- `fs.move()` now errors out when destination is a subdirectory of source. [#458](https://github.com/jprichardson/node-fs-extra/pull/458)\n- Applied upstream fixes from `rimraf` to `fs.remove()` & `fs.removeSync()`. [#459](https://github.com/jprichardson/node-fs-extra/pull/459)\n\n### Fixed\n\n- Got `fs.outputJSONSync()` working again; it was broken due to refactoring. [#428](https://github.com/jprichardson/node-fs-extra/pull/428)\n\nAlso clarified the docs in a few places.\n\n3.0.1 / 2017-05-04\n------------------\n\n- Fix bug in `move()` & `moveSync()` when source and destination are the same, and source does not exist. [#415](https://github.com/jprichardson/node-fs-extra/pull/415)\n\n3.0.0 / 2017-04-27\n------------------\n\n### Added\n\n- **BREAKING:** Added Promise support. All asynchronous native fs methods and fs-extra methods now return a promise if the callback is not passed. [#403](https://github.com/jprichardson/node-fs-extra/pull/403)\n- `pathExists()`, a replacement for the deprecated `fs.exists`. `pathExists` has a normal error-first callback signature. Also added `pathExistsSync`, an alias to `fs.existsSync`, for completeness. [#406](https://github.com/jprichardson/node-fs-extra/pull/406)\n\n### Removed\n\n- **BREAKING:** Removed support for setting the default spaces for `writeJson()`, `writeJsonSync()`, `outputJson()`, & `outputJsonSync()`. This was undocumented. [#402](https://github.com/jprichardson/node-fs-extra/pull/402)\n\n### Changed\n\n- Upgraded jsonfile dependency to v3.0.0:\n  - **BREAKING:** Changed behavior of `throws` option for `readJsonSync()`; now does not throw filesystem errors when `throws` is `false`.\n- **BREAKING:** `writeJson()`, `writeJsonSync()`, `outputJson()`, & `outputJsonSync()` now output minified JSON by default for consistency with `JSON.stringify()`; set the `spaces` option to `2` to override this new behavior. [#402](https://github.com/jprichardson/node-fs-extra/pull/402)\n- Use `Buffer.allocUnsafe()` instead of `new Buffer()` in environments that support it. [#394](https://github.com/jprichardson/node-fs-extra/pull/394)\n\n### Fixed\n\n- `removeSync()` silently failed on Windows in some cases. Now throws an `EBUSY` error. [#408](https://github.com/jprichardson/node-fs-extra/pull/408)\n\n2.1.2 / 2017-03-16\n------------------\n\n### Fixed\n\n- Weird windows bug that resulted in `ensureDir()`'s callback being called twice in some cases. This bug may have also affected `remove()`. See [#392](https://github.com/jprichardson/node-fs-extra/issues/392), [#393](https://github.com/jprichardson/node-fs-extra/pull/393)\n\n2.1.1 / 2017-03-15\n------------------\n\n### Fixed\n\n- Reverted [`5597bd`](https://github.com/jprichardson/node-fs-extra/commit/5597bd5b67f7d060f5f5bf26e9635be48330f5d7), this broke compatibility with Node.js versions v4+ but less than `v4.5.0`.\n- Remove `Buffer.alloc()` usage in `moveSync()`.\n\n2.1.0 / 2017-03-15\n------------------\n\nThanks to [Mani Maghsoudlou (@manidlou)](https://github.com/manidlou) & [Jan Peer Stöcklmair (@JPeer264)](https://github.com/JPeer264) for their extraordinary help with this release!\n\n### Added\n- `moveSync()` See [#309], [#381](https://github.com/jprichardson/node-fs-extra/pull/381). ([@manidlou](https://github.com/manidlou))\n- `copy()` and `copySync()`'s `filter` option now gets the destination path passed as the second parameter. [#366](https://github.com/jprichardson/node-fs-extra/pull/366) ([@manidlou](https://github.com/manidlou))\n\n### Changed\n- Use `Buffer.alloc()` instead of deprecated `new Buffer()` in `copySync()`. [#380](https://github.com/jprichardson/node-fs-extra/pull/380) ([@manidlou](https://github.com/manidlou))\n- Refactored entire codebase to use ES6 features supported by Node.js v4+ [#355](https://github.com/jprichardson/node-fs-extra/issues/355). [(@JPeer264)](https://github.com/JPeer264)\n- Refactored docs. ([@manidlou](https://github.com/manidlou))\n\n### Fixed\n\n- `move()` shouldn't error out when source and dest are the same. [#377](https://github.com/jprichardson/node-fs-extra/issues/377), [#378](https://github.com/jprichardson/node-fs-extra/pull/378) ([@jdalton](https://github.com/jdalton))\n\n2.0.0 / 2017-01-16\n------------------\n\n### Removed\n- **BREAKING:** Removed support for Node `v0.12`. The Node foundation stopped officially supporting it\non Jan 1st, 2017.\n- **BREAKING:** Remove `walk()` and `walkSync()`. `walkSync()` was only part of `fs-extra` for a little\nover two months. Use [klaw](https://github.com/jprichardson/node-klaw) instead of `walk()`, in fact, `walk()` was just\nan alias to klaw. For `walkSync()` use [klaw-sync](https://github.com/mawni/node-klaw-sync). See: [#338], [#339]\n\n### Changed\n- **BREAKING:** Renamed `clobber` to `overwrite`. This affects `copy()`, `copySync()`, and `move()`. [#330], [#333]\n- Moved docs, to `docs/`. [#340]\n\n### Fixed\n- Apply filters to directories in `copySync()` like in `copy()`. [#324]\n- A specific condition when disk is under heavy use, `copy()` can fail. [#326]\n\n\n1.0.0 / 2016-11-01\n------------------\n\nAfter five years of development, we finally have reach the 1.0.0 milestone! Big thanks goes\nto [Ryan Zim](https://github.com/RyanZim) for leading the charge on this release!\n\n### Added\n- `walkSync()`\n\n### Changed\n- **BREAKING**: dropped Node v0.10 support.\n- disabled `rimaf` globbing, wasn't used. [#280]\n- deprecate `copy()/copySync()` option `filter` if it's a `RegExp`. `filter` should now be a function.\n- inline `rimraf`. This is temporary and was done because `rimraf` depended upon the beefy `glob` which `fs-extra` does not use. [#300]\n\n### Fixed\n- bug fix proper closing of file handle on `utimesMillis()` [#271]\n- proper escaping of files with dollar signs [#291]\n- `copySync()` failed if user didn't own file. [#199], [#301]\n\n\n0.30.0 / 2016-04-28\n-------------------\n- Brought back Node v0.10 support. I didn't realize there was still demand. Official support will end **2016-10-01**.\n\n0.29.0 / 2016-04-27\n-------------------\n- **BREAKING**: removed support for Node v0.10. If you still want to use Node v0.10, everything should work except for `ensureLink()/ensureSymlink()`. Node v0.12 is still supported but will be dropped in the near future as well.\n\n0.28.0 / 2016-04-17\n-------------------\n- **BREAKING**: removed `createOutputStream()`. Use https://www.npmjs.com/package/create-output-stream. See: [#192][#192]\n- `mkdirs()/mkdirsSync()` check for invalid win32 path chars. See: [#209][#209], [#237][#237]\n- `mkdirs()/mkdirsSync()` if drive not mounted, error. See: [#93][#93]\n\n0.27.0 / 2016-04-15\n-------------------\n- add `dereference` option to `copySync()`. [#235][#235]\n\n0.26.7 / 2016-03-16\n-------------------\n- fixed `copy()` if source and dest are the same. [#230][#230]\n\n0.26.6 / 2016-03-15\n-------------------\n- fixed if `emptyDir()` does not have a callback: [#229][#229]\n\n0.26.5 / 2016-01-27\n-------------------\n- `copy()` with two arguments (w/o callback) was broken. See: [#215][#215]\n\n0.26.4 / 2016-01-05\n-------------------\n- `copySync()` made `preserveTimestamps` default consistent with `copy()` which is `false`. See: [#208][#208]\n\n0.26.3 / 2015-12-17\n-------------------\n- fixed `copy()` hangup in copying blockDevice / characterDevice / `/dev/null`. See: [#193][#193]\n\n0.26.2 / 2015-11-02\n-------------------\n- fixed `outputJson{Sync}()` spacing adherence to `fs.spaces`\n\n0.26.1 / 2015-11-02\n-------------------\n- fixed `copySync()` when `clogger=true` and the destination is read only. See: [#190][#190]\n\n0.26.0 / 2015-10-25\n-------------------\n- extracted the `walk()` function into its own module [`klaw`](https://github.com/jprichardson/node-klaw).\n\n0.25.0 / 2015-10-24\n-------------------\n- now has a file walker `walk()`\n\n0.24.0 / 2015-08-28\n-------------------\n- removed alias `delete()` and `deleteSync()`. See: [#171][#171]\n\n0.23.1 / 2015-08-07\n-------------------\n- Better handling of errors for `move()` when moving across devices. [#170][#170]\n- `ensureSymlink()` and `ensureLink()` should not throw errors if link exists. [#169][#169]\n\n0.23.0 / 2015-08-06\n-------------------\n- added `ensureLink{Sync}()` and `ensureSymlink{Sync}()`. See: [#165][#165]\n\n0.22.1 / 2015-07-09\n-------------------\n- Prevent calling `hasMillisResSync()` on module load. See: [#149][#149].\nFixes regression that was introduced in `0.21.0`.\n\n0.22.0 / 2015-07-09\n-------------------\n- preserve permissions / ownership in `copy()`. See: [#54][#54]\n\n0.21.0 / 2015-07-04\n-------------------\n- add option to preserve timestamps in `copy()` and `copySync()`. See: [#141][#141]\n- updated `graceful-fs@3.x` to `4.x`. This brings in features from `amazing-graceful-fs` (much cleaner code / less hacks)\n\n0.20.1 / 2015-06-23\n-------------------\n- fixed regression caused by latest jsonfile update: See: https://github.com/jprichardson/node-jsonfile/issues/26\n\n0.20.0 / 2015-06-19\n-------------------\n- removed `jsonfile` aliases with `File` in the name, they weren't documented and probably weren't in use e.g.\nthis package had both `fs.readJsonFile` and `fs.readJson` that were aliases to each other, now use `fs.readJson`.\n- preliminary walker created. Intentionally not documented. If you use it, it will almost certainly change and break your code.\n- started moving tests inline\n- upgraded to `jsonfile@2.1.0`, can now pass JSON revivers/replacers to `readJson()`, `writeJson()`, `outputJson()`\n\n0.19.0 / 2015-06-08\n-------------------\n- `fs.copy()` had support for Node v0.8, dropped support\n\n0.18.4 / 2015-05-22\n-------------------\n- fixed license field according to this: [#136][#136] and https://github.com/npm/npm/releases/tag/v2.10.0\n\n0.18.3 / 2015-05-08\n-------------------\n- bugfix: handle `EEXIST` when clobbering on some Linux systems. [#134][#134]\n\n0.18.2 / 2015-04-17\n-------------------\n- bugfix: allow `F_OK` ([#120][#120])\n\n0.18.1 / 2015-04-15\n-------------------\n- improved windows support for `move()` a bit. https://github.com/jprichardson/node-fs-extra/commit/92838980f25dc2ee4ec46b43ee14d3c4a1d30c1b\n- fixed a lot of tests for Windows (appveyor)\n\n0.18.0 / 2015-03-31\n-------------------\n- added `emptyDir()` and `emptyDirSync()`\n\n0.17.0 / 2015-03-28\n-------------------\n- `copySync` added `clobber` option (before always would clobber, now if `clobber` is `false` it throws an error if the destination exists).\n**Only works with files at the moment.**\n- `createOutputStream()` added. See: [#118][#118]\n\n0.16.5 / 2015-03-08\n-------------------\n- fixed `fs.move` when `clobber` is `true` and destination is a directory, it should clobber. [#114][#114]\n\n0.16.4 / 2015-03-01\n-------------------\n- `fs.mkdirs` fix infinite loop on Windows. See: See https://github.com/substack/node-mkdirp/pull/74 and https://github.com/substack/node-mkdirp/issues/66\n\n0.16.3 / 2015-01-28\n-------------------\n- reverted https://github.com/jprichardson/node-fs-extra/commit/1ee77c8a805eba5b99382a2591ff99667847c9c9\n\n\n0.16.2 / 2015-01-28\n-------------------\n- fixed `fs.copy` for Node v0.8 (support is temporary and will be removed in the near future)\n\n0.16.1 / 2015-01-28\n-------------------\n- if `setImmediate` is not available, fall back to `process.nextTick`\n\n0.16.0 / 2015-01-28\n-------------------\n- bugfix `fs.move()` into itself. Closes [#104]\n- bugfix `fs.move()` moving directory across device. Closes [#108]\n- added coveralls support\n- bugfix: nasty multiple callback `fs.copy()` bug. Closes [#98]\n- misc fs.copy code cleanups\n\n0.15.0 / 2015-01-21\n-------------------\n- dropped `ncp`, imported code in\n- because of previous, now supports `io.js`\n- `graceful-fs` is now a dependency\n\n0.14.0 / 2015-01-05\n-------------------\n- changed `copy`/`copySync` from `fs.copy(src, dest, [filters], callback)` to `fs.copy(src, dest, [options], callback)` [#100][#100]\n- removed mockfs tests for mkdirp (this may be temporary, but was getting in the way of other tests)\n\n0.13.0 / 2014-12-10\n-------------------\n- removed `touch` and `touchSync` methods (they didn't handle permissions like UNIX touch)\n- updated `\"ncp\": \"^0.6.0\"` to `\"ncp\": \"^1.0.1\"`\n- imported `mkdirp` => `minimist` and `mkdirp` are no longer dependences, should now appease people who wanted `mkdirp` to be `--use_strict` safe. See [#59]([#59][#59])\n\n0.12.0 / 2014-09-22\n-------------------\n- copy symlinks in `copySync()` [#85][#85]\n\n0.11.1 / 2014-09-02\n-------------------\n- bugfix `copySync()` preserve file permissions [#80][#80]\n\n0.11.0 / 2014-08-11\n-------------------\n- upgraded `\"ncp\": \"^0.5.1\"` to `\"ncp\": \"^0.6.0\"`\n- upgrade `jsonfile\": \"^1.2.0\"` to `jsonfile\": \"^2.0.0\"` => on write, json files now have `\\n` at end. Also adds `options.throws` to `readJsonSync()`\nsee https://github.com/jprichardson/node-jsonfile#readfilesyncfilename-options for more details.\n\n0.10.0 / 2014-06-29\n------------------\n* bugfix: upgaded `\"jsonfile\": \"~1.1.0\"` to `\"jsonfile\": \"^1.2.0\"`, bumped minor because of `jsonfile` dep change\nfrom `~` to `^`. [#67]\n\n0.9.1 / 2014-05-22\n------------------\n* removed Node.js `0.8.x` support, `0.9.0` was published moments ago and should have been done there\n\n0.9.0 / 2014-05-22\n------------------\n* upgraded `ncp` from `~0.4.2` to `^0.5.1`, [#58]\n* upgraded `rimraf` from `~2.2.6` to `^2.2.8`\n* upgraded `mkdirp` from `0.3.x` to `^0.5.0`\n* added methods `ensureFile()`, `ensureFileSync()`\n* added methods `ensureDir()`, `ensureDirSync()` [#31]\n* added `move()` method. From: https://github.com/andrewrk/node-mv\n\n\n0.8.1 / 2013-10-24\n------------------\n* copy failed to return an error to the callback if a file doesn't exist (ulikoehler [#38], [#39])\n\n0.8.0 / 2013-10-14\n------------------\n* `filter` implemented on `copy()` and `copySync()`. (Srirangan / [#36])\n\n0.7.1 / 2013-10-12\n------------------\n* `copySync()` implemented (Srirangan / [#33])\n* updated to the latest `jsonfile` version `1.1.0` which gives `options` params for the JSON methods. Closes [#32]\n\n0.7.0 / 2013-10-07\n------------------\n* update readme conventions\n* `copy()` now works if destination directory does not exist. Closes [#29]\n\n0.6.4 / 2013-09-05\n------------------\n* changed `homepage` field in package.json to remove NPM warning\n\n0.6.3 / 2013-06-28\n------------------\n* changed JSON spacing default from `4` to `2` to follow Node conventions\n* updated `jsonfile` dep\n* updated `rimraf` dep\n\n0.6.2 / 2013-06-28\n------------------\n* added .npmignore, [#25]\n\n0.6.1 / 2013-05-14\n------------------\n* modified for `strict` mode, closes [#24]\n* added `outputJson()/outputJsonSync()`, closes [#23]\n\n0.6.0 / 2013-03-18\n------------------\n* removed node 0.6 support\n* added node 0.10 support\n* upgraded to latest `ncp` and `rimraf`.\n* optional `graceful-fs` support. Closes [#17]\n\n\n0.5.0 / 2013-02-03\n------------------\n* Removed `readTextFile`.\n* Renamed `readJSONFile` to `readJSON` and `readJson`, same with write.\n* Restructured documentation a bit. Added roadmap.\n\n0.4.0 / 2013-01-28\n------------------\n* Set default spaces in `jsonfile` from 4 to 2.\n* Updated `testutil` deps for tests.\n* Renamed `touch()` to `createFile()`\n* Added `outputFile()` and `outputFileSync()`\n* Changed creation of testing diretories so the /tmp dir is not littered.\n* Added `readTextFile()` and `readTextFileSync()`.\n\n0.3.2 / 2012-11-01\n------------------\n* Added `touch()` and `touchSync()` methods.\n\n0.3.1 / 2012-10-11\n------------------\n* Fixed some stray globals.\n\n0.3.0 / 2012-10-09\n------------------\n* Removed all CoffeeScript from tests.\n* Renamed `mkdir` to `mkdirs`/`mkdirp`.\n\n0.2.1 / 2012-09-11\n------------------\n* Updated `rimraf` dep.\n\n0.2.0 / 2012-09-10\n------------------\n* Rewrote module into JavaScript. (Must still rewrite tests into JavaScript)\n* Added all methods of [jsonfile](https://github.com/jprichardson/node-jsonfile)\n* Added Travis-CI.\n\n0.1.3 / 2012-08-13\n------------------\n* Added method `readJSONFile`.\n\n0.1.2 / 2012-06-15\n------------------\n* Bug fix: `deleteSync()` didn't exist.\n* Verified Node v0.8 compatibility.\n\n0.1.1 / 2012-06-15\n------------------\n* Fixed bug in `remove()`/`delete()` that wouldn't execute the function if a callback wasn't passed.\n\n0.1.0 / 2012-05-31\n------------------\n* Renamed `copyFile()` to `copy()`. `copy()` can now copy directories (recursively) too.\n* Renamed `rmrf()` to `remove()`.\n* `remove()` aliased with `delete()`.\n* Added `mkdirp` capabilities. Named: `mkdir()`. Hides Node.js native `mkdir()`.\n* Instead of exporting the native `fs` module with new functions, I now copy over the native methods to a new object and export that instead.\n\n0.0.4 / 2012-03-14\n------------------\n* Removed CoffeeScript dependency\n\n0.0.3 / 2012-01-11\n------------------\n* Added methods rmrf and rmrfSync\n* Moved tests from Jasmine to Mocha\n\n\n[#344]: https://github.com/jprichardson/node-fs-extra/issues/344    \"Licence Year\"\n[#343]: https://github.com/jprichardson/node-fs-extra/pull/343      \"Add klaw-sync link to readme\"\n[#342]: https://github.com/jprichardson/node-fs-extra/pull/342      \"allow preserveTimestamps when use move\"\n[#341]: https://github.com/jprichardson/node-fs-extra/issues/341    \"mkdirp(path.dirname(dest) in move() logic needs cleaning up [question]\"\n[#340]: https://github.com/jprichardson/node-fs-extra/pull/340      \"Move docs to seperate docs folder [documentation]\"\n[#339]: https://github.com/jprichardson/node-fs-extra/pull/339      \"Remove walk() & walkSync() [feature-walk]\"\n[#338]: https://github.com/jprichardson/node-fs-extra/issues/338    \"Remove walk() and walkSync() [feature-walk]\"\n[#337]: https://github.com/jprichardson/node-fs-extra/issues/337    \"copy doesn't return a yieldable value\"\n[#336]: https://github.com/jprichardson/node-fs-extra/pull/336      \"Docs enhanced walk sync [documentation, feature-walk]\"\n[#335]: https://github.com/jprichardson/node-fs-extra/pull/335      \"Refactor move() tests [feature-move]\"\n[#334]: https://github.com/jprichardson/node-fs-extra/pull/334      \"Cleanup lib/move/index.js [feature-move]\"\n[#333]: https://github.com/jprichardson/node-fs-extra/pull/333      \"Rename clobber to overwrite [feature-copy, feature-move]\"\n[#332]: https://github.com/jprichardson/node-fs-extra/pull/332      \"BREAKING: Drop Node v0.12 & io.js support\"\n[#331]: https://github.com/jprichardson/node-fs-extra/issues/331    \"Add support for chmodr [enhancement, future]\"\n[#330]: https://github.com/jprichardson/node-fs-extra/pull/330      \"BREAKING: Do not error when copy destination exists & clobber: false [feature-copy]\"\n[#329]: https://github.com/jprichardson/node-fs-extra/issues/329    \"Does .walk() scale to large directories? [question]\"\n[#328]: https://github.com/jprichardson/node-fs-extra/issues/328    \"Copying files corrupts [feature-copy, needs-confirmed]\"\n[#327]: https://github.com/jprichardson/node-fs-extra/pull/327      \"Use writeStream 'finish' event instead of 'close' [bug, feature-copy]\"\n[#326]: https://github.com/jprichardson/node-fs-extra/issues/326    \"fs.copy fails with chmod error when disk under heavy use [bug, feature-copy]\"\n[#325]: https://github.com/jprichardson/node-fs-extra/issues/325    \"ensureDir is difficult to promisify [enhancement]\"\n[#324]: https://github.com/jprichardson/node-fs-extra/pull/324      \"copySync() should apply filter to directories like copy() [bug, feature-copy]\"\n[#323]: https://github.com/jprichardson/node-fs-extra/issues/323    \"Support for `dest` being a directory when using `copy*()`?\"\n[#322]: https://github.com/jprichardson/node-fs-extra/pull/322      \"Add fs-promise as fs-extra-promise alternative\"\n[#321]: https://github.com/jprichardson/node-fs-extra/issues/321    \"fs.copy() with clobber set to false return EEXIST error [feature-copy]\"\n[#320]: https://github.com/jprichardson/node-fs-extra/issues/320    \"fs.copySync: Error: EPERM: operation not permitted, unlink \"\n[#319]: https://github.com/jprichardson/node-fs-extra/issues/319    \"Create directory if not exists\"\n[#318]: https://github.com/jprichardson/node-fs-extra/issues/318    \"Support glob patterns [enhancement, future]\"\n[#317]: https://github.com/jprichardson/node-fs-extra/pull/317      \"Adding copy sync test for src file without write perms\"\n[#316]: https://github.com/jprichardson/node-fs-extra/pull/316      \"Remove move()'s broken limit option [feature-move]\"\n[#315]: https://github.com/jprichardson/node-fs-extra/pull/315      \"Fix move clobber tests to work around graceful-fs bug.\"\n[#314]: https://github.com/jprichardson/node-fs-extra/issues/314    \"move() limit option [documentation, enhancement, feature-move]\"\n[#313]: https://github.com/jprichardson/node-fs-extra/pull/313      \"Test that remove() ignores glob characters.\"\n[#312]: https://github.com/jprichardson/node-fs-extra/pull/312      \"Enhance walkSync() to return items with path and stats [feature-walk]\"\n[#311]: https://github.com/jprichardson/node-fs-extra/issues/311    \"move() not work when dest name not provided [feature-move]\"\n[#310]: https://github.com/jprichardson/node-fs-extra/issues/310    \"Edit walkSync to return items like what walk emits [documentation, enhancement, feature-walk]\"\n[#309]: https://github.com/jprichardson/node-fs-extra/issues/309    \"moveSync support [enhancement, feature-move]\"\n[#308]: https://github.com/jprichardson/node-fs-extra/pull/308      \"Fix incorrect anchor link\"\n[#307]: https://github.com/jprichardson/node-fs-extra/pull/307      \"Fix coverage\"\n[#306]: https://github.com/jprichardson/node-fs-extra/pull/306      \"Update devDeps, fix lint error\"\n[#305]: https://github.com/jprichardson/node-fs-extra/pull/305      \"Re-add Coveralls\"\n[#304]: https://github.com/jprichardson/node-fs-extra/pull/304      \"Remove path-is-absolute [enhancement]\"\n[#303]: https://github.com/jprichardson/node-fs-extra/pull/303      \"Document copySync filter inconsistency [documentation, feature-copy]\"\n[#302]: https://github.com/jprichardson/node-fs-extra/pull/302      \"fix(console): depreciated -> deprecated\"\n[#301]: https://github.com/jprichardson/node-fs-extra/pull/301      \"Remove chmod call from copySync [feature-copy]\"\n[#300]: https://github.com/jprichardson/node-fs-extra/pull/300      \"Inline Rimraf [enhancement, feature-move, feature-remove]\"\n[#299]: https://github.com/jprichardson/node-fs-extra/pull/299      \"Warn when filter is a RegExp [feature-copy]\"\n[#298]: https://github.com/jprichardson/node-fs-extra/issues/298    \"API Docs [documentation]\"\n[#297]: https://github.com/jprichardson/node-fs-extra/pull/297      \"Warn about using preserveTimestamps on 32-bit node\"\n[#296]: https://github.com/jprichardson/node-fs-extra/pull/296      \"Improve EEXIST error message for copySync [enhancement]\"\n[#295]: https://github.com/jprichardson/node-fs-extra/pull/295      \"Depreciate using regular expressions for copy's filter option [documentation]\"\n[#294]: https://github.com/jprichardson/node-fs-extra/pull/294      \"BREAKING: Refactor lib/copy/ncp.js [feature-copy]\"\n[#293]: https://github.com/jprichardson/node-fs-extra/pull/293      \"Update CI configs\"\n[#292]: https://github.com/jprichardson/node-fs-extra/issues/292    \"Rewrite lib/copy/ncp.js [enhancement, feature-copy]\"\n[#291]: https://github.com/jprichardson/node-fs-extra/pull/291      \"Escape '$' in replacement string for async file copying\"\n[#290]: https://github.com/jprichardson/node-fs-extra/issues/290    \"Exclude files pattern while copying using copy.config.js [question]\"\n[#289]: https://github.com/jprichardson/node-fs-extra/pull/289      \"(Closes #271) lib/util/utimes: properly close file descriptors in the event of an error\"\n[#288]: https://github.com/jprichardson/node-fs-extra/pull/288      \"(Closes #271) lib/util/utimes: properly close file descriptors in the event of an error\"\n[#287]: https://github.com/jprichardson/node-fs-extra/issues/287    \"emptyDir() callback arguments are inconsistent [enhancement, feature-remove]\"\n[#286]: https://github.com/jprichardson/node-fs-extra/pull/286      \"Added walkSync function\"\n[#285]: https://github.com/jprichardson/node-fs-extra/issues/285    \"CITGM test failing on s390\"\n[#284]: https://github.com/jprichardson/node-fs-extra/issues/284    \"outputFile method is missing a check to determine if existing item is a folder or not\"\n[#283]: https://github.com/jprichardson/node-fs-extra/pull/283      \"Apply filter also on directories and symlinks for copySync()\"\n[#282]: https://github.com/jprichardson/node-fs-extra/pull/282      \"Apply filter also on directories and symlinks for copySync()\"\n[#281]: https://github.com/jprichardson/node-fs-extra/issues/281    \"remove function executes 'successfully' but doesn't do anything?\"\n[#280]: https://github.com/jprichardson/node-fs-extra/pull/280      \"Disable rimraf globbing\"\n[#279]: https://github.com/jprichardson/node-fs-extra/issues/279    \"Some code is vendored instead of included [awaiting-reply]\"\n[#278]: https://github.com/jprichardson/node-fs-extra/issues/278    \"copy() does not preserve file/directory ownership\"\n[#277]: https://github.com/jprichardson/node-fs-extra/pull/277      \"Mention defaults for clobber and dereference options\"\n[#276]: https://github.com/jprichardson/node-fs-extra/issues/276    \"Cannot connect to Shared Folder [awaiting-reply]\"\n[#275]: https://github.com/jprichardson/node-fs-extra/issues/275    \"EMFILE, too many open files on Mac OS with JSON API\"\n[#274]: https://github.com/jprichardson/node-fs-extra/issues/274    \"Use with memory-fs? [enhancement, future]\"\n[#273]: https://github.com/jprichardson/node-fs-extra/pull/273      \"tests: rename `remote.test.js` to `remove.test.js`\"\n[#272]: https://github.com/jprichardson/node-fs-extra/issues/272    \"Copy clobber flag never err even when true [bug, feature-copy]\"\n[#271]: https://github.com/jprichardson/node-fs-extra/issues/271    \"Unclosed file handle on futimes error\"\n[#270]: https://github.com/jprichardson/node-fs-extra/issues/270    \"copy not working as desired on Windows [feature-copy, platform-windows]\"\n[#269]: https://github.com/jprichardson/node-fs-extra/issues/269    \"Copying with preserveTimeStamps: true is inaccurate using 32bit node [feature-copy]\"\n[#268]: https://github.com/jprichardson/node-fs-extra/pull/268      \"port fix for mkdirp issue #111\"\n[#267]: https://github.com/jprichardson/node-fs-extra/issues/267    \"WARN deprecated wrench@1.5.9: wrench.js is deprecated!\"\n[#266]: https://github.com/jprichardson/node-fs-extra/issues/266    \"fs-extra\"\n[#265]: https://github.com/jprichardson/node-fs-extra/issues/265    \"Link the `fs.stat fs.exists` etc. methods for replace the `fs` module forever?\"\n[#264]: https://github.com/jprichardson/node-fs-extra/issues/264    \"Renaming a file using move fails when a file inside is open (at least on windows) [wont-fix]\"\n[#263]: https://github.com/jprichardson/node-fs-extra/issues/263    \"ENOSYS: function not implemented, link [needs-confirmed]\"\n[#262]: https://github.com/jprichardson/node-fs-extra/issues/262    \"Add .exists() and .existsSync()\"\n[#261]: https://github.com/jprichardson/node-fs-extra/issues/261    \"Cannot read property 'prototype' of undefined\"\n[#260]: https://github.com/jprichardson/node-fs-extra/pull/260      \"use more specific path for method require\"\n[#259]: https://github.com/jprichardson/node-fs-extra/issues/259    \"Feature Request: isEmpty\"\n[#258]: https://github.com/jprichardson/node-fs-extra/issues/258    \"copy files does not preserve file timestamp\"\n[#257]: https://github.com/jprichardson/node-fs-extra/issues/257    \"Copying a file on windows fails\"\n[#256]: https://github.com/jprichardson/node-fs-extra/pull/256      \"Updated Readme \"\n[#255]: https://github.com/jprichardson/node-fs-extra/issues/255    \"Update rimraf required version\"\n[#254]: https://github.com/jprichardson/node-fs-extra/issues/254    \"request for readTree, readTreeSync, walkSync method\"\n[#253]: https://github.com/jprichardson/node-fs-extra/issues/253    \"outputFile does not touch mtime when file exists\"\n[#252]: https://github.com/jprichardson/node-fs-extra/pull/252      \"Fixing problem when copying file with no write permission\"\n[#251]: https://github.com/jprichardson/node-fs-extra/issues/251    \"Just wanted to say thank you\"\n[#250]: https://github.com/jprichardson/node-fs-extra/issues/250    \"`fs.remove()` not removing files (works with `rm -rf`)\"\n[#249]: https://github.com/jprichardson/node-fs-extra/issues/249    \"Just a Question ... Remove Servers\"\n[#248]: https://github.com/jprichardson/node-fs-extra/issues/248    \"Allow option to not preserve permissions for copy\"\n[#247]: https://github.com/jprichardson/node-fs-extra/issues/247    \"Add TypeScript typing directly in the fs-extra package\"\n[#246]: https://github.com/jprichardson/node-fs-extra/issues/246    \"fse.remove() && fse.removeSync() don't throw error on ENOENT file\"\n[#245]: https://github.com/jprichardson/node-fs-extra/issues/245    \"filter for empty dir [enhancement]\"\n[#244]: https://github.com/jprichardson/node-fs-extra/issues/244    \"copySync doesn't apply the filter to directories\"\n[#243]: https://github.com/jprichardson/node-fs-extra/issues/243    \"Can I request fs.walk() to be synchronous?\"\n[#242]: https://github.com/jprichardson/node-fs-extra/issues/242    \"Accidentally truncates file names ending with $$ [bug, feature-copy]\"\n[#241]: https://github.com/jprichardson/node-fs-extra/pull/241      \"Remove link to createOutputStream\"\n[#240]: https://github.com/jprichardson/node-fs-extra/issues/240    \"walkSync request\"\n[#239]: https://github.com/jprichardson/node-fs-extra/issues/239    \"Depreciate regular expressions for copy's filter [documentation, feature-copy]\"\n[#238]: https://github.com/jprichardson/node-fs-extra/issues/238    \"Can't write to files while in a worker thread.\"\n[#237]: https://github.com/jprichardson/node-fs-extra/issues/237    \".ensureDir(..) fails silently when passed an invalid path...\"\n[#236]: https://github.com/jprichardson/node-fs-extra/issues/236    \"[Removed] Filed under wrong repo\"\n[#235]: https://github.com/jprichardson/node-fs-extra/pull/235      \"Adds symlink dereference option to `fse.copySync` (#191)\"\n[#234]: https://github.com/jprichardson/node-fs-extra/issues/234    \"ensureDirSync fails silent when EACCES: permission denied on travis-ci\"\n[#233]: https://github.com/jprichardson/node-fs-extra/issues/233    \"please make sure the first argument in callback is error object [feature-copy]\"\n[#232]: https://github.com/jprichardson/node-fs-extra/issues/232    \"Copy a folder content  to its child folder.  \"\n[#231]: https://github.com/jprichardson/node-fs-extra/issues/231    \"Adding read/write/output functions for YAML\"\n[#230]: https://github.com/jprichardson/node-fs-extra/pull/230      \"throw error if src and dest are the same to avoid zeroing out + test\"\n[#229]: https://github.com/jprichardson/node-fs-extra/pull/229      \"fix 'TypeError: callback is not a function' in emptyDir\"\n[#228]: https://github.com/jprichardson/node-fs-extra/pull/228      \"Throw error when target is empty so file is not accidentally zeroed out\"\n[#227]: https://github.com/jprichardson/node-fs-extra/issues/227    \"Uncatchable errors when there are invalid arguments [feature-move]\"\n[#226]: https://github.com/jprichardson/node-fs-extra/issues/226    \"Moving to the current directory\"\n[#225]: https://github.com/jprichardson/node-fs-extra/issues/225    \"EBUSY: resource busy or locked, unlink\"\n[#224]: https://github.com/jprichardson/node-fs-extra/issues/224    \"fse.copy ENOENT error\"\n[#223]: https://github.com/jprichardson/node-fs-extra/issues/223    \"Suspicious behavior of fs.existsSync\"\n[#222]: https://github.com/jprichardson/node-fs-extra/pull/222      \"A clearer description of emtpyDir function\"\n[#221]: https://github.com/jprichardson/node-fs-extra/pull/221      \"Update README.md\"\n[#220]: https://github.com/jprichardson/node-fs-extra/pull/220      \"Non-breaking feature: add option 'passStats' to copy methods.\"\n[#219]: https://github.com/jprichardson/node-fs-extra/pull/219      \"Add closing parenthesis in copySync example\"\n[#218]: https://github.com/jprichardson/node-fs-extra/pull/218      \"fix #187 #70 options.filter bug\"\n[#217]: https://github.com/jprichardson/node-fs-extra/pull/217      \"fix #187 #70 options.filter bug\"\n[#216]: https://github.com/jprichardson/node-fs-extra/pull/216      \"fix #187 #70 options.filter bug\"\n[#215]: https://github.com/jprichardson/node-fs-extra/pull/215      \"fse.copy throws error when only src and dest provided [bug, documentation, feature-copy]\"\n[#214]: https://github.com/jprichardson/node-fs-extra/pull/214      \"Fixing copySync anchor tag\"\n[#213]: https://github.com/jprichardson/node-fs-extra/issues/213    \"Merge extfs with this repo\"\n[#212]: https://github.com/jprichardson/node-fs-extra/pull/212      \"Update year to 2016 in README.md and LICENSE\"\n[#211]: https://github.com/jprichardson/node-fs-extra/issues/211    \"Not copying all files\"\n[#210]: https://github.com/jprichardson/node-fs-extra/issues/210    \"copy/copySync behave differently when copying a symbolic file [bug, documentation, feature-copy]\"\n[#209]: https://github.com/jprichardson/node-fs-extra/issues/209    \"In Windows invalid directory name causes infinite loop in ensureDir(). [bug]\"\n[#208]: https://github.com/jprichardson/node-fs-extra/pull/208      \"fix options.preserveTimestamps to false in copy-sync by default [feature-copy]\"\n[#207]: https://github.com/jprichardson/node-fs-extra/issues/207    \"Add `compare` suite of functions\"\n[#206]: https://github.com/jprichardson/node-fs-extra/issues/206    \"outputFileSync\"\n[#205]: https://github.com/jprichardson/node-fs-extra/issues/205    \"fix documents about copy/copySync [documentation, feature-copy]\"\n[#204]: https://github.com/jprichardson/node-fs-extra/pull/204      \"allow copy of block and character device files\"\n[#203]: https://github.com/jprichardson/node-fs-extra/issues/203    \"copy method's argument options couldn't be undefined [bug, feature-copy]\"\n[#202]: https://github.com/jprichardson/node-fs-extra/issues/202    \"why there is not a walkSync method?\"\n[#201]: https://github.com/jprichardson/node-fs-extra/issues/201    \"clobber for directories [feature-copy, future]\"\n[#200]: https://github.com/jprichardson/node-fs-extra/issues/200    \"'copySync' doesn't work in sync\"\n[#199]: https://github.com/jprichardson/node-fs-extra/issues/199    \"fs.copySync fails if user does not own file [bug, feature-copy]\"\n[#198]: https://github.com/jprichardson/node-fs-extra/issues/198    \"handle copying between identical files [feature-copy]\"\n[#197]: https://github.com/jprichardson/node-fs-extra/issues/197    \"Missing documentation for `outputFile` `options` 3rd parameter [documentation]\"\n[#196]: https://github.com/jprichardson/node-fs-extra/issues/196    \"copy filter: async function and/or function called with `fs.stat` result [future]\"\n[#195]: https://github.com/jprichardson/node-fs-extra/issues/195    \"How to override with outputFile?\"\n[#194]: https://github.com/jprichardson/node-fs-extra/pull/194      \"allow ensureFile(Sync) to provide data to be written to created file\"\n[#193]: https://github.com/jprichardson/node-fs-extra/issues/193    \"`fs.copy` fails silently if source file is /dev/null [bug, feature-copy]\"\n[#192]: https://github.com/jprichardson/node-fs-extra/issues/192    \"Remove fs.createOutputStream()\"\n[#191]: https://github.com/jprichardson/node-fs-extra/issues/191    \"How to copy symlinks to target as normal folders [feature-copy]\"\n[#190]: https://github.com/jprichardson/node-fs-extra/pull/190      \"copySync to overwrite destination file if readonly and clobber true\"\n[#189]: https://github.com/jprichardson/node-fs-extra/pull/189      \"move.test fix to support CRLF on Windows\"\n[#188]: https://github.com/jprichardson/node-fs-extra/issues/188    \"move.test failing on windows platform\"\n[#187]: https://github.com/jprichardson/node-fs-extra/issues/187    \"Not filter each file, stops on first false [feature-copy]\"\n[#186]: https://github.com/jprichardson/node-fs-extra/issues/186    \"Do you need a .size() function in this module? [future]\"\n[#185]: https://github.com/jprichardson/node-fs-extra/issues/185    \"Doesn't work on NodeJS v4.x\"\n[#184]: https://github.com/jprichardson/node-fs-extra/issues/184    \"CLI equivalent for fs-extra\"\n[#183]: https://github.com/jprichardson/node-fs-extra/issues/183    \"with clobber true, copy and copySync behave differently if destination file is read only [bug, feature-copy]\"\n[#182]: https://github.com/jprichardson/node-fs-extra/issues/182    \"ensureDir(dir, callback) second callback parameter not specified\"\n[#181]: https://github.com/jprichardson/node-fs-extra/issues/181    \"Add ability to remove file securely [enhancement, wont-fix]\"\n[#180]: https://github.com/jprichardson/node-fs-extra/issues/180    \"Filter option doesn't work the same way in copy and copySync [bug, feature-copy]\"\n[#179]: https://github.com/jprichardson/node-fs-extra/issues/179    \"Include opendir\"\n[#178]: https://github.com/jprichardson/node-fs-extra/issues/178    \"ENOTEMPTY is thrown on removeSync \"\n[#177]: https://github.com/jprichardson/node-fs-extra/issues/177    \"fix `remove()` wildcards (introduced by rimraf) [feature-remove]\"\n[#176]: https://github.com/jprichardson/node-fs-extra/issues/176    \"createOutputStream doesn't emit 'end' event\"\n[#175]: https://github.com/jprichardson/node-fs-extra/issues/175    \"[Feature Request].moveSync support [feature-move, future]\"\n[#174]: https://github.com/jprichardson/node-fs-extra/pull/174      \"Fix copy formatting and document options.filter\"\n[#173]: https://github.com/jprichardson/node-fs-extra/issues/173    \"Feature Request: writeJson should mkdirs\"\n[#172]: https://github.com/jprichardson/node-fs-extra/issues/172    \"rename `clobber` flags to `overwrite`\"\n[#171]: https://github.com/jprichardson/node-fs-extra/issues/171    \"remove unnecessary aliases\"\n[#170]: https://github.com/jprichardson/node-fs-extra/pull/170      \"More robust handling of errors moving across virtual drives\"\n[#169]: https://github.com/jprichardson/node-fs-extra/pull/169      \"suppress ensureLink & ensureSymlink dest exists error\"\n[#168]: https://github.com/jprichardson/node-fs-extra/pull/168      \"suppress ensurelink dest exists error\"\n[#167]: https://github.com/jprichardson/node-fs-extra/pull/167      \"Adds basic (string, buffer) support for ensureFile content [future]\"\n[#166]: https://github.com/jprichardson/node-fs-extra/pull/166      \"Adds basic (string, buffer) support for ensureFile content\"\n[#165]: https://github.com/jprichardson/node-fs-extra/pull/165      \"ensure for link & symlink\"\n[#164]: https://github.com/jprichardson/node-fs-extra/issues/164    \"Feature Request: ensureFile to take optional argument for file content\"\n[#163]: https://github.com/jprichardson/node-fs-extra/issues/163    \"ouputJson not formatted out of the box [bug]\"\n[#162]: https://github.com/jprichardson/node-fs-extra/pull/162      \"ensure symlink & link\"\n[#161]: https://github.com/jprichardson/node-fs-extra/pull/161      \"ensure symlink & link\"\n[#160]: https://github.com/jprichardson/node-fs-extra/pull/160      \"ensure symlink & link\"\n[#159]: https://github.com/jprichardson/node-fs-extra/pull/159      \"ensure symlink & link\"\n[#158]: https://github.com/jprichardson/node-fs-extra/issues/158    \"Feature Request: ensureLink and ensureSymlink methods\"\n[#157]: https://github.com/jprichardson/node-fs-extra/issues/157    \"writeJson isn't formatted\"\n[#156]: https://github.com/jprichardson/node-fs-extra/issues/156    \"Promise.promisifyAll doesn't work for some methods\"\n[#155]: https://github.com/jprichardson/node-fs-extra/issues/155    \"Readme\"\n[#154]: https://github.com/jprichardson/node-fs-extra/issues/154    \"/tmp/millis-test-sync\"\n[#153]: https://github.com/jprichardson/node-fs-extra/pull/153      \"Make preserveTimes also work on read-only files. Closes #152\"\n[#152]: https://github.com/jprichardson/node-fs-extra/issues/152    \"fs.copy fails for read-only files with preserveTimestamp=true [feature-copy]\"\n[#151]: https://github.com/jprichardson/node-fs-extra/issues/151    \"TOC does not work correctly on npm [documentation]\"\n[#150]: https://github.com/jprichardson/node-fs-extra/issues/150    \"Remove test file fixtures, create with code.\"\n[#149]: https://github.com/jprichardson/node-fs-extra/issues/149    \"/tmp/millis-test-sync\"\n[#148]: https://github.com/jprichardson/node-fs-extra/issues/148    \"split out `Sync` methods in documentation\"\n[#147]: https://github.com/jprichardson/node-fs-extra/issues/147    \"Adding rmdirIfEmpty\"\n[#146]: https://github.com/jprichardson/node-fs-extra/pull/146      \"ensure test.js works\"\n[#145]: https://github.com/jprichardson/node-fs-extra/issues/145    \"Add `fs.exists` and `fs.existsSync` if it doesn't exist.\"\n[#144]: https://github.com/jprichardson/node-fs-extra/issues/144    \"tests failing\"\n[#143]: https://github.com/jprichardson/node-fs-extra/issues/143    \"update graceful-fs\"\n[#142]: https://github.com/jprichardson/node-fs-extra/issues/142    \"PrependFile Feature\"\n[#141]: https://github.com/jprichardson/node-fs-extra/pull/141      \"Add option to preserve timestamps\"\n[#140]: https://github.com/jprichardson/node-fs-extra/issues/140    \"Json file reading fails with 'utf8'\"\n[#139]: https://github.com/jprichardson/node-fs-extra/pull/139      \"Preserve file timestamp on copy. Closes #138\"\n[#138]: https://github.com/jprichardson/node-fs-extra/issues/138    \"Preserve timestamps on copying files\"\n[#137]: https://github.com/jprichardson/node-fs-extra/issues/137    \"outputFile/outputJson: Unexpected end of input\"\n[#136]: https://github.com/jprichardson/node-fs-extra/pull/136      \"Update license attribute\"\n[#135]: https://github.com/jprichardson/node-fs-extra/issues/135    \"emptyDir throws Error if no callback is provided\"\n[#134]: https://github.com/jprichardson/node-fs-extra/pull/134      \"Handle EEXIST error when clobbering dir\"\n[#133]: https://github.com/jprichardson/node-fs-extra/pull/133      \"Travis runs with `sudo: false`\"\n[#132]: https://github.com/jprichardson/node-fs-extra/pull/132      \"isDirectory method\"\n[#131]: https://github.com/jprichardson/node-fs-extra/issues/131    \"copySync is not working iojs 1.8.4 on linux [feature-copy]\"\n[#130]: https://github.com/jprichardson/node-fs-extra/pull/130      \"Please review additional features.\"\n[#129]: https://github.com/jprichardson/node-fs-extra/pull/129      \"can you review this feature?\"\n[#128]: https://github.com/jprichardson/node-fs-extra/issues/128    \"fsExtra.move(filepath, newPath) broken;\"\n[#127]: https://github.com/jprichardson/node-fs-extra/issues/127    \"consider using fs.access to remove deprecated warnings for fs.exists\"\n[#126]: https://github.com/jprichardson/node-fs-extra/issues/126    \" TypeError: Object #<Object> has no method 'access'\"\n[#125]: https://github.com/jprichardson/node-fs-extra/issues/125    \"Question: What do the *Sync function do different from non-sync\"\n[#124]: https://github.com/jprichardson/node-fs-extra/issues/124    \"move with clobber option 'ENOTEMPTY'\"\n[#123]: https://github.com/jprichardson/node-fs-extra/issues/123    \"Only copy the content of a directory\"\n[#122]: https://github.com/jprichardson/node-fs-extra/pull/122      \"Update section links in README to match current section ids.\"\n[#121]: https://github.com/jprichardson/node-fs-extra/issues/121    \"emptyDir is undefined\"\n[#120]: https://github.com/jprichardson/node-fs-extra/issues/120    \"usage bug caused by shallow cloning methods of 'graceful-fs'\"\n[#119]: https://github.com/jprichardson/node-fs-extra/issues/119    \"mkdirs and ensureDir never invoke callback and consume CPU indefinitely if provided a path with invalid characters on Windows\"\n[#118]: https://github.com/jprichardson/node-fs-extra/pull/118      \"createOutputStream\"\n[#117]: https://github.com/jprichardson/node-fs-extra/pull/117      \"Fixed issue with slash separated paths on windows\"\n[#116]: https://github.com/jprichardson/node-fs-extra/issues/116    \"copySync can only copy directories not files [documentation, feature-copy]\"\n[#115]: https://github.com/jprichardson/node-fs-extra/issues/115    \".Copy & .CopySync [feature-copy]\"\n[#114]: https://github.com/jprichardson/node-fs-extra/issues/114    \"Fails to move (rename) directory to non-empty directory even with clobber: true\"\n[#113]: https://github.com/jprichardson/node-fs-extra/issues/113    \"fs.copy seems to callback early if the destination file already exists\"\n[#112]: https://github.com/jprichardson/node-fs-extra/pull/112      \"Copying a file into an existing directory\"\n[#111]: https://github.com/jprichardson/node-fs-extra/pull/111      \"Moving a file into an existing directory \"\n[#110]: https://github.com/jprichardson/node-fs-extra/pull/110      \"Moving a file into an existing directory\"\n[#109]: https://github.com/jprichardson/node-fs-extra/issues/109    \"fs.move across windows drives fails\"\n[#108]: https://github.com/jprichardson/node-fs-extra/issues/108    \"fse.move directories across multiple devices doesn't work\"\n[#107]: https://github.com/jprichardson/node-fs-extra/pull/107      \"Check if dest path is an existing dir and copy or move source in it\"\n[#106]: https://github.com/jprichardson/node-fs-extra/issues/106    \"fse.copySync crashes while copying across devices D: [feature-copy]\"\n[#105]: https://github.com/jprichardson/node-fs-extra/issues/105    \"fs.copy hangs on iojs\"\n[#104]: https://github.com/jprichardson/node-fs-extra/issues/104    \"fse.move deletes folders [bug]\"\n[#103]: https://github.com/jprichardson/node-fs-extra/issues/103    \"Error: EMFILE with copy\"\n[#102]: https://github.com/jprichardson/node-fs-extra/issues/102    \"touch / touchSync was removed ?\"\n[#101]: https://github.com/jprichardson/node-fs-extra/issues/101    \"fs-extra promisified\"\n[#100]: https://github.com/jprichardson/node-fs-extra/pull/100      \"copy: options object or filter to pass to ncp\"\n[#99]: https://github.com/jprichardson/node-fs-extra/issues/99      \"ensureDir() modes [future]\"\n[#98]: https://github.com/jprichardson/node-fs-extra/issues/98      \"fs.copy() incorrect async behavior [bug]\"\n[#97]: https://github.com/jprichardson/node-fs-extra/pull/97        \"use path.join; fix copySync bug\"\n[#96]: https://github.com/jprichardson/node-fs-extra/issues/96      \"destFolderExists in copySync is always undefined.\"\n[#95]: https://github.com/jprichardson/node-fs-extra/pull/95        \"Using graceful-ncp instead of ncp\"\n[#94]: https://github.com/jprichardson/node-fs-extra/issues/94      \"Error: EEXIST, file already exists '../mkdirp/bin/cmd.js' on fs.copySync() [enhancement, feature-copy]\"\n[#93]: https://github.com/jprichardson/node-fs-extra/issues/93      \"Confusing error if drive not mounted [enhancement]\"\n[#92]: https://github.com/jprichardson/node-fs-extra/issues/92      \"Problems with Bluebird\"\n[#91]: https://github.com/jprichardson/node-fs-extra/issues/91      \"fs.copySync('/test', '/haha') is different with 'cp -r /test /haha' [enhancement]\"\n[#90]: https://github.com/jprichardson/node-fs-extra/issues/90      \"Folder creation and file copy is Happening in 64 bit machine but not in 32 bit machine\"\n[#89]: https://github.com/jprichardson/node-fs-extra/issues/89      \"Error: EEXIST using fs-extra's fs.copy to copy a directory on Windows\"\n[#88]: https://github.com/jprichardson/node-fs-extra/issues/88      \"Stacking those libraries\"\n[#87]: https://github.com/jprichardson/node-fs-extra/issues/87      \"createWriteStream + outputFile = ?\"\n[#86]: https://github.com/jprichardson/node-fs-extra/issues/86      \"no moveSync?\"\n[#85]: https://github.com/jprichardson/node-fs-extra/pull/85        \"Copy symlinks in copySync\"\n[#84]: https://github.com/jprichardson/node-fs-extra/issues/84      \"Push latest version to npm ?\"\n[#83]: https://github.com/jprichardson/node-fs-extra/issues/83      \"Prevent copying a directory into itself [feature-copy]\"\n[#82]: https://github.com/jprichardson/node-fs-extra/pull/82        \"README updates for move\"\n[#81]: https://github.com/jprichardson/node-fs-extra/issues/81      \"fd leak after fs.move\"\n[#80]: https://github.com/jprichardson/node-fs-extra/pull/80        \"Preserve file mode in copySync\"\n[#79]: https://github.com/jprichardson/node-fs-extra/issues/79      \"fs.copy only .html file empty\"\n[#78]: https://github.com/jprichardson/node-fs-extra/pull/78        \"copySync was not applying filters to directories\"\n[#77]: https://github.com/jprichardson/node-fs-extra/issues/77      \"Create README reference to bluebird\"\n[#76]: https://github.com/jprichardson/node-fs-extra/issues/76      \"Create README reference to typescript\"\n[#75]: https://github.com/jprichardson/node-fs-extra/issues/75      \"add glob as a dep? [question]\"\n[#74]: https://github.com/jprichardson/node-fs-extra/pull/74        \"including new emptydir module\"\n[#73]: https://github.com/jprichardson/node-fs-extra/pull/73        \"add dependency status in readme\"\n[#72]: https://github.com/jprichardson/node-fs-extra/pull/72        \"Use svg instead of png to get better image quality\"\n[#71]: https://github.com/jprichardson/node-fs-extra/issues/71      \"fse.copy not working on Windows 7 x64 OS, but, copySync does work\"\n[#70]: https://github.com/jprichardson/node-fs-extra/issues/70      \"Not filter each file, stops on first false [bug]\"\n[#69]: https://github.com/jprichardson/node-fs-extra/issues/69      \"How to check if folder exist and read the folder name\"\n[#68]: https://github.com/jprichardson/node-fs-extra/issues/68      \"consider flag to readJsonSync (throw false) [enhancement]\"\n[#67]: https://github.com/jprichardson/node-fs-extra/issues/67      \"docs for readJson incorrectly states that is accepts options\"\n[#66]: https://github.com/jprichardson/node-fs-extra/issues/66      \"ENAMETOOLONG\"\n[#65]: https://github.com/jprichardson/node-fs-extra/issues/65      \"exclude filter in fs.copy\"\n[#64]: https://github.com/jprichardson/node-fs-extra/issues/64      \"Announce: mfs - monitor your fs-extra calls\"\n[#63]: https://github.com/jprichardson/node-fs-extra/issues/63      \"Walk\"\n[#62]: https://github.com/jprichardson/node-fs-extra/issues/62      \"npm install fs-extra doesn't work\"\n[#61]: https://github.com/jprichardson/node-fs-extra/issues/61      \"No longer supports node 0.8 due to use of `^` in package.json dependencies\"\n[#60]: https://github.com/jprichardson/node-fs-extra/issues/60      \"chmod & chown for mkdirs\"\n[#59]: https://github.com/jprichardson/node-fs-extra/issues/59      \"Consider including mkdirp and making fs-extra '--use_strict' safe [question]\"\n[#58]: https://github.com/jprichardson/node-fs-extra/issues/58      \"Stack trace not included in fs.copy error\"\n[#57]: https://github.com/jprichardson/node-fs-extra/issues/57      \"Possible to include wildcards in delete?\"\n[#56]: https://github.com/jprichardson/node-fs-extra/issues/56      \"Crash when have no access to write to destination file in copy \"\n[#55]: https://github.com/jprichardson/node-fs-extra/issues/55      \"Is it possible to have any console output similar to Grunt copy module?\"\n[#54]: https://github.com/jprichardson/node-fs-extra/issues/54      \"`copy` does not preserve file ownership and permissons\"\n[#53]: https://github.com/jprichardson/node-fs-extra/issues/53      \"outputFile() - ability to write data in appending mode\"\n[#52]: https://github.com/jprichardson/node-fs-extra/pull/52        \"This fixes (what I think) is a bug in copySync\"\n[#51]: https://github.com/jprichardson/node-fs-extra/pull/51        \"Add a Bitdeli Badge to README\"\n[#50]: https://github.com/jprichardson/node-fs-extra/issues/50      \"Replace mechanism in createFile\"\n[#49]: https://github.com/jprichardson/node-fs-extra/pull/49        \"update rimraf to v2.2.6\"\n[#48]: https://github.com/jprichardson/node-fs-extra/issues/48      \"fs.copy issue [bug]\"\n[#47]: https://github.com/jprichardson/node-fs-extra/issues/47      \"Bug in copy - callback called on readStream 'close' - Fixed in ncp 0.5.0\"\n[#46]: https://github.com/jprichardson/node-fs-extra/pull/46        \"update copyright year\"\n[#45]: https://github.com/jprichardson/node-fs-extra/pull/45        \"Added note about fse.outputFile() being the one that overwrites\"\n[#44]: https://github.com/jprichardson/node-fs-extra/pull/44        \"Proposal: Stream support\"\n[#43]: https://github.com/jprichardson/node-fs-extra/issues/43      \"Better error reporting \"\n[#42]: https://github.com/jprichardson/node-fs-extra/issues/42      \"Performance issue?\"\n[#41]: https://github.com/jprichardson/node-fs-extra/pull/41        \"There does seem to be a synchronous version now\"\n[#40]: https://github.com/jprichardson/node-fs-extra/issues/40      \"fs.copy throw unexplained error ENOENT, utime \"\n[#39]: https://github.com/jprichardson/node-fs-extra/pull/39        \"Added regression test for copy() return callback on error\"\n[#38]: https://github.com/jprichardson/node-fs-extra/pull/38        \"Return err in copy() fstat cb, because stat could be undefined or null\"\n[#37]: https://github.com/jprichardson/node-fs-extra/issues/37      \"Maybe include a line reader? [enhancement, question]\"\n[#36]: https://github.com/jprichardson/node-fs-extra/pull/36        \"`filter` parameter `fs.copy` and `fs.copySync`\"\n[#35]: https://github.com/jprichardson/node-fs-extra/pull/35        \"`filter` parameter `fs.copy` and `fs.copySync` \"\n[#34]: https://github.com/jprichardson/node-fs-extra/issues/34      \"update docs to include options for JSON methods [enhancement]\"\n[#33]: https://github.com/jprichardson/node-fs-extra/pull/33        \"fs_extra.copySync\"\n[#32]: https://github.com/jprichardson/node-fs-extra/issues/32      \"update to latest jsonfile [enhancement]\"\n[#31]: https://github.com/jprichardson/node-fs-extra/issues/31      \"Add ensure methods [enhancement]\"\n[#30]: https://github.com/jprichardson/node-fs-extra/issues/30      \"update package.json optional dep `graceful-fs`\"\n[#29]: https://github.com/jprichardson/node-fs-extra/issues/29      \"Copy failing if dest directory doesn't exist. Is this intended?\"\n[#28]: https://github.com/jprichardson/node-fs-extra/issues/28      \"homepage field must be a string url. Deleted.\"\n[#27]: https://github.com/jprichardson/node-fs-extra/issues/27      \"Update Readme\"\n[#26]: https://github.com/jprichardson/node-fs-extra/issues/26      \"Add readdir recursive method. [enhancement]\"\n[#25]: https://github.com/jprichardson/node-fs-extra/pull/25        \"adding an `.npmignore` file\"\n[#24]: https://github.com/jprichardson/node-fs-extra/issues/24      \"[bug] cannot run in strict mode [bug]\"\n[#23]: https://github.com/jprichardson/node-fs-extra/issues/23      \"`writeJSON()` should create parent directories\"\n[#22]: https://github.com/jprichardson/node-fs-extra/pull/22        \"Add a limit option to mkdirs()\"\n[#21]: https://github.com/jprichardson/node-fs-extra/issues/21      \"touch() in 0.10.0\"\n[#20]: https://github.com/jprichardson/node-fs-extra/issues/20      \"fs.remove yields callback before directory is really deleted\"\n[#19]: https://github.com/jprichardson/node-fs-extra/issues/19      \"fs.copy err is empty array\"\n[#18]: https://github.com/jprichardson/node-fs-extra/pull/18        \"Exposed copyFile Function\"\n[#17]: https://github.com/jprichardson/node-fs-extra/issues/17      \"Use `require('graceful-fs')` if found instead of `require('fs')`\"\n[#16]: https://github.com/jprichardson/node-fs-extra/pull/16        \"Update README.md\"\n[#15]: https://github.com/jprichardson/node-fs-extra/issues/15      \"Implement cp -r but sync aka copySync. [enhancement]\"\n[#14]: https://github.com/jprichardson/node-fs-extra/issues/14      \"fs.mkdirSync is broken in 0.3.1\"\n[#13]: https://github.com/jprichardson/node-fs-extra/issues/13      \"Thoughts on including a directory tree / file watcher? [enhancement, question]\"\n[#12]: https://github.com/jprichardson/node-fs-extra/issues/12      \"copyFile & copyFileSync are global\"\n[#11]: https://github.com/jprichardson/node-fs-extra/issues/11      \"Thoughts on including a file walker? [enhancement, question]\"\n[#10]: https://github.com/jprichardson/node-fs-extra/issues/10      \"move / moveFile API [enhancement]\"\n[#9]: https://github.com/jprichardson/node-fs-extra/issues/9        \"don't import normal fs stuff into fs-extra\"\n[#8]: https://github.com/jprichardson/node-fs-extra/pull/8          \"Update rimraf to latest version\"\n[#6]: https://github.com/jprichardson/node-fs-extra/issues/6        \"Remove CoffeeScript development dependency\"\n[#5]: https://github.com/jprichardson/node-fs-extra/issues/5        \"comments on naming\"\n[#4]: https://github.com/jprichardson/node-fs-extra/issues/4        \"version bump to 0.2\"\n[#3]: https://github.com/jprichardson/node-fs-extra/pull/3          \"Hi! I fixed some code for you!\"\n[#2]: https://github.com/jprichardson/node-fs-extra/issues/2        \"Merge with fs.extra and mkdirp\"\n[#1]: https://github.com/jprichardson/node-fs-extra/issues/1        \"file-extra npm !exist\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "(The MIT License)\n\nCopyright (c) 2011-2024 JP Richardson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files\n(the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify,\n merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.359375,
          "content": "Node.js: fs-extra\n=================\n\n`fs-extra` adds file system methods that aren't included in the native `fs` module and adds promise support to the `fs` methods. It also uses [`graceful-fs`](https://github.com/isaacs/node-graceful-fs) to prevent `EMFILE` errors. It should be a drop in replacement for `fs`.\n\n[![npm Package](https://img.shields.io/npm/v/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![License](https://img.shields.io/npm/l/fs-extra.svg)](https://github.com/jprichardson/node-fs-extra/blob/master/LICENSE)\n[![build status](https://img.shields.io/github/actions/workflow/status/jprichardson/node-fs-extra/ci.yml?branch=master)](https://github.com/jprichardson/node-fs-extra/actions/workflows/ci.yml?query=branch%3Amaster)\n[![downloads per month](http://img.shields.io/npm/dm/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\nWhy?\n----\n\nI got tired of including `mkdirp`, `rimraf`, and `ncp` in most of my projects.\n\n\n\n\nInstallation\n------------\n\n    npm install fs-extra\n\n\n\nUsage\n-----\n\n### CommonJS\n\n`fs-extra` is a drop in replacement for native `fs`. All methods in `fs` are attached to `fs-extra`. All `fs` methods return promises if the callback isn't passed.\n\nYou don't ever need to include the original `fs` module again:\n\n```js\nconst fs = require('fs') // this is no longer necessary\n```\n\nyou can now do this:\n\n```js\nconst fs = require('fs-extra')\n```\n\nor if you prefer to make it clear that you're using `fs-extra` and not `fs`, you may want\nto name your `fs` variable `fse` like so:\n\n```js\nconst fse = require('fs-extra')\n```\n\nyou can also keep both, but it's redundant:\n\n```js\nconst fs = require('fs')\nconst fse = require('fs-extra')\n```\n\n### ESM\n\nThere is also an `fs-extra/esm` import, that supports both default and named exports. However, note that `fs` methods are not included in `fs-extra/esm`; you still need to import `fs` and/or `fs/promises` seperately:\n\n```js\nimport { readFileSync } from 'fs'\nimport { readFile } from 'fs/promises'\nimport { outputFile, outputFileSync } from 'fs-extra/esm'\n```\n\nDefault exports are supported:\n\n```js\nimport fs from 'fs'\nimport fse from 'fs-extra/esm'\n// fse.readFileSync is not a function; must use fs.readFileSync\n```\n\nbut you probably want to just use regular `fs-extra` instead of `fs-extra/esm` for default exports:\n\n```js\nimport fs from 'fs-extra'\n// both fs and fs-extra methods are defined\n```\n\nSync vs Async vs Async/Await\n-------------\nMost methods are async by default. All async methods will return a promise if the callback isn't passed.\n\nSync methods on the other hand will throw if an error occurs.\n\nAlso Async/Await will throw an error if one occurs.\n\nExample:\n\n```js\nconst fs = require('fs-extra')\n\n// Async with promises:\nfs.copy('/tmp/myfile', '/tmp/mynewfile')\n  .then(() => console.log('success!'))\n  .catch(err => console.error(err))\n\n// Async with callbacks:\nfs.copy('/tmp/myfile', '/tmp/mynewfile', err => {\n  if (err) return console.error(err)\n  console.log('success!')\n})\n\n// Sync:\ntry {\n  fs.copySync('/tmp/myfile', '/tmp/mynewfile')\n  console.log('success!')\n} catch (err) {\n  console.error(err)\n}\n\n// Async/Await:\nasync function copyFiles () {\n  try {\n    await fs.copy('/tmp/myfile', '/tmp/mynewfile')\n    console.log('success!')\n  } catch (err) {\n    console.error(err)\n  }\n}\n\ncopyFiles()\n```\n\n\nMethods\n-------\n\n### Async\n\n- [copy](docs/copy.md)\n- [emptyDir](docs/emptyDir.md)\n- [ensureFile](docs/ensureFile.md)\n- [ensureDir](docs/ensureDir.md)\n- [ensureLink](docs/ensureLink.md)\n- [ensureSymlink](docs/ensureSymlink.md)\n- [mkdirp](docs/ensureDir.md)\n- [mkdirs](docs/ensureDir.md)\n- [move](docs/move.md)\n- [outputFile](docs/outputFile.md)\n- [outputJson](docs/outputJson.md)\n- [pathExists](docs/pathExists.md)\n- [readJson](docs/readJson.md)\n- [remove](docs/remove.md)\n- [writeJson](docs/writeJson.md)\n\n### Sync\n\n- [copySync](docs/copy-sync.md)\n- [emptyDirSync](docs/emptyDir-sync.md)\n- [ensureFileSync](docs/ensureFile-sync.md)\n- [ensureDirSync](docs/ensureDir-sync.md)\n- [ensureLinkSync](docs/ensureLink-sync.md)\n- [ensureSymlinkSync](docs/ensureSymlink-sync.md)\n- [mkdirpSync](docs/ensureDir-sync.md)\n- [mkdirsSync](docs/ensureDir-sync.md)\n- [moveSync](docs/move-sync.md)\n- [outputFileSync](docs/outputFile-sync.md)\n- [outputJsonSync](docs/outputJson-sync.md)\n- [pathExistsSync](docs/pathExists-sync.md)\n- [readJsonSync](docs/readJson-sync.md)\n- [removeSync](docs/remove-sync.md)\n- [writeJsonSync](docs/writeJson-sync.md)\n\n\n**NOTE:** You can still use the native Node.js methods. They are promisified and copied over to `fs-extra`. See [notes on `fs.read()`, `fs.write()`, & `fs.writev()`](docs/fs-read-write-writev.md)\n\n### What happened to `walk()` and `walkSync()`?\n\nThey were removed from `fs-extra` in v2.0.0. If you need the functionality, `walk` and `walkSync` are available as separate packages, [`klaw`](https://github.com/jprichardson/node-klaw) and [`klaw-sync`](https://github.com/manidlou/node-klaw-sync).\n\n\nThird Party\n-----------\n\n### CLI\n\n[fse-cli](https://www.npmjs.com/package/@atao60/fse-cli) allows you to run `fs-extra` from a console or from [npm](https://www.npmjs.com) scripts.\n\n### TypeScript\n\nIf you like TypeScript, you can use `fs-extra` with it: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/fs-extra\n\n\n### File / Directory Watching\n\nIf you want to watch for changes to files or directories, then you should use [chokidar](https://github.com/paulmillr/chokidar).\n\n### Obtain Filesystem (Devices, Partitions) Information\n\n[fs-filesystem](https://github.com/arthurintelligence/node-fs-filesystem) allows you to read the state of the filesystem of the host on which it is run. It returns information about both the devices and the partitions (volumes) of the system.\n\n### Misc.\n\n- [fs-extra-debug](https://github.com/jdxcode/fs-extra-debug) - Send your fs-extra calls to [debug](https://npmjs.org/package/debug).\n- [mfs](https://github.com/cadorn/mfs) - Monitor your fs-extra calls.\n\n\n\nHacking on fs-extra\n-------------------\n\nWanna hack on `fs-extra`? Great! Your help is needed! [fs-extra is one of the most depended upon Node.js packages](http://nodei.co/npm/fs-extra.png?downloads=true&downloadRank=true&stars=true). This project\nuses [JavaScript Standard Style](https://github.com/feross/standard) - if the name or style choices bother you,\nyou're gonna have to get over it :) If `standard` is good enough for `npm`, it's good enough for `fs-extra`.\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nWhat's needed?\n- First, take a look at existing issues. Those are probably going to be where the priority lies.\n- More tests for edge cases. Specifically on different platforms. There can never be enough tests.\n- Improve test coverage.\n\nNote: If you make any big changes, **you should definitely file an issue for discussion first.**\n\n### Running the Test Suite\n\nfs-extra contains hundreds of tests.\n\n- `npm run lint`: runs the linter ([standard](http://standardjs.com/))\n- `npm run unit`: runs the unit tests\n- `npm run unit-esm`: runs tests for `fs-extra/esm` exports\n- `npm test`: runs the linter and all tests\n\nWhen running unit tests, set the environment variable `CROSS_DEVICE_PATH` to the absolute path of an empty directory on another device (like a thumb drive) to enable cross-device move tests.\n\n\n### Windows\n\nIf you run the tests on the Windows and receive a lot of symbolic link `EPERM` permission errors, it's\nbecause on Windows you need elevated privilege to create symbolic links. You can add this to your Windows's\naccount by following the instructions here: http://superuser.com/questions/104845/permission-to-make-symbolic-links-in-windows-7\nHowever, I didn't have much luck doing this.\n\nSince I develop on Mac OS X, I use VMWare Fusion for Windows testing. I create a shared folder that I map to a drive on Windows.\nI open the `Node.js command prompt` and run as `Administrator`. I then map the network drive running the following command:\n\n    net use z: \"\\\\vmware-host\\Shared Folders\"\n\nI can then navigate to my `fs-extra` directory and run the tests.\n\n\nNaming\n------\n\nI put a lot of thought into the naming of these functions. Inspired by @coolaj86's request. So he deserves much of the credit for raising the issue. See discussion(s) here:\n\n* https://github.com/jprichardson/node-fs-extra/issues/2\n* https://github.com/flatiron/utile/issues/11\n* https://github.com/ryanmcgrath/wrench-js/issues/29\n* https://github.com/substack/node-mkdirp/issues/17\n\nFirst, I believe that in as many cases as possible, the [Node.js naming schemes](http://nodejs.org/api/fs.html) should be chosen. However, there are problems with the Node.js own naming schemes.\n\nFor example, `fs.readFile()` and `fs.readdir()`: the **F** is capitalized in *File* and the **d** is not capitalized in *dir*. Perhaps a bit pedantic, but they should still be consistent. Also, Node.js has chosen a lot of POSIX naming schemes, which I believe is great. See: `fs.mkdir()`, `fs.rmdir()`, `fs.chown()`, etc.\n\nWe have a dilemma though. How do you consistently name methods that perform the following POSIX commands: `cp`, `cp -r`, `mkdir -p`, and `rm -rf`?\n\nMy perspective: when in doubt, err on the side of simplicity. A directory is just a hierarchical grouping of directories and files. Consider that for a moment. So when you want to copy it or remove it, in most cases you'll want to copy or remove all of its contents. When you want to create a directory, if the directory that it's suppose to be contained in does not exist, then in most cases you'll want to create that too.\n\nSo, if you want to remove a file or a directory regardless of whether it has contents, just call `fs.remove(path)`. If you want to copy a file or a directory whether it has contents, just call `fs.copy(source, destination)`. If you want to create a directory regardless of whether its parent directories exist, just call `fs.mkdirs(path)` or `fs.mkdirp(path)`.\n\n\nCredit\n------\n\n`fs-extra` wouldn't be possible without using the modules from the following authors:\n\n- [Isaac Shlueter](https://github.com/isaacs)\n- [Charlie McConnel](https://github.com/avianflu)\n- [James Halliday](https://github.com/substack)\n- [Andrew Kelley](https://github.com/andrewrk)\n\n\n\n\nLicense\n-------\n\nLicensed under MIT\n\nCopyright (c) 2011-2024 [JP Richardson](https://github.com/jprichardson)\n\n[1]: http://nodejs.org/docs/latest/api/fs.html\n\n\n[jsonfile]: https://github.com/jprichardson/node-jsonfile\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.5283203125,
          "content": "{\n  \"name\": \"fs-extra\",\n  \"version\": \"11.2.0\",\n  \"description\": \"fs-extra contains methods that aren't included in the vanilla Node.js fs package. Such as recursive mkdir, copy, and remove.\",\n  \"engines\": {\n    \"node\": \">=14.14\"\n  },\n  \"homepage\": \"https://github.com/jprichardson/node-fs-extra\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/jprichardson/node-fs-extra\"\n  },\n  \"keywords\": [\n    \"fs\",\n    \"file\",\n    \"file system\",\n    \"copy\",\n    \"directory\",\n    \"extra\",\n    \"mkdirp\",\n    \"mkdir\",\n    \"mkdirs\",\n    \"recursive\",\n    \"json\",\n    \"read\",\n    \"write\",\n    \"extra\",\n    \"delete\",\n    \"remove\",\n    \"touch\",\n    \"create\",\n    \"text\",\n    \"output\",\n    \"move\",\n    \"promise\"\n  ],\n  \"author\": \"JP Richardson <jprichardson@gmail.com>\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"graceful-fs\": \"^4.2.0\",\n    \"jsonfile\": \"^6.0.1\",\n    \"universalify\": \"^2.0.0\"\n  },\n  \"devDependencies\": {\n    \"klaw\": \"^2.1.1\",\n    \"klaw-sync\": \"^3.0.2\",\n    \"minimist\": \"^1.1.1\",\n    \"mocha\": \"^10.1.0\",\n    \"nyc\": \"^15.0.0\",\n    \"proxyquire\": \"^2.0.1\",\n    \"read-dir-files\": \"^0.1.1\",\n    \"standard\": \"^17.0.0\"\n  },\n  \"main\": \"./lib/index.js\",\n  \"exports\": {\n    \".\": \"./lib/index.js\",\n    \"./esm\": \"./lib/esm.mjs\"\n  },\n  \"files\": [\n    \"lib/\",\n    \"!lib/**/__tests__/\"\n  ],\n  \"scripts\": {\n    \"lint\": \"standard\",\n    \"test-find\": \"find ./lib/**/__tests__ -name *.test.js | xargs mocha\",\n    \"test\": \"npm run lint && npm run unit && npm run unit-esm\",\n    \"unit\": \"nyc node test.js\",\n    \"unit-esm\": \"node test.mjs\"\n  },\n  \"sideEffects\": false\n}\n"
        },
        {
          "name": "test.js",
          "type": "blob",
          "size": 0.7080078125,
          "content": "'use strict'\n\nconst os = require('os')\nconst path = require('path')\nconst klaw = require('klaw')\nconst Mocha = require('mocha')\n\nconst argv = require('minimist')(process.argv.slice(2))\n\nconst mochaOpts = {\n  ui: 'bdd',\n  reporter: 'dot',\n  timeout: 30000,\n  ...argv\n}\n\nconst mocha = new Mocha(mochaOpts)\nconst testExt = '.test.js'\n\nklaw('./lib').on('readable', function () {\n  let item\n  while ((item = this.read())) {\n    if (!item.stats.isFile()) return\n    if (item.path.lastIndexOf(testExt) !== (item.path.length - testExt.length)) return\n    mocha.addFile(item.path)\n  }\n}).on('end', () => {\n  mocha.run(failures => {\n    require('./lib').remove(path.join(os.tmpdir(), 'fs-extra'), () => process.exit(failures))\n  })\n})\n"
        },
        {
          "name": "test.mjs",
          "type": "blob",
          "size": 2.291015625,
          "content": "import assert from 'assert'\nimport fsLegacy from './lib/index.js'\n// NOTE: eslint comments needed because we're importing the same file multiple times\nimport fsDefault from './lib/esm.mjs' // eslint-disable-line\nimport * as fsStar from './lib/esm.mjs'\nimport {\n  copy,\n  copySync,\n  emptyDirSync,\n  emptydirSync,\n  emptyDir,\n  emptydir,\n  createFile,\n  createFileSync,\n  ensureFile,\n  ensureFileSync,\n  createLink,\n  createLinkSync,\n  ensureLink,\n  ensureLinkSync,\n  createSymlink,\n  createSymlinkSync,\n  ensureSymlink,\n  ensureSymlinkSync,\n  readJson,\n  readJsonSync,\n  writeJson,\n  writeJsonSync,\n  outputJson,\n  outputJsonSync,\n  outputJSON,\n  outputJSONSync,\n  writeJSON,\n  writeJSONSync,\n  readJSON,\n  readJSONSync,\n  mkdirs,\n  mkdirsSync,\n  mkdirp,\n  mkdirpSync,\n  ensureDir,\n  ensureDirSync,\n  move,\n  moveSync,\n  outputFile,\n  outputFileSync,\n  pathExists,\n  pathExistsSync,\n  remove,\n  removeSync\n} from './lib/esm.mjs' // eslint-disable-line\nconst fsNamed = [\n  copy,\n  copySync,\n  emptyDirSync,\n  emptydirSync,\n  emptyDir,\n  emptydir,\n  createFile,\n  createFileSync,\n  ensureFile,\n  ensureFileSync,\n  createLink,\n  createLinkSync,\n  ensureLink,\n  ensureLinkSync,\n  createSymlink,\n  createSymlinkSync,\n  ensureSymlink,\n  ensureSymlinkSync,\n  readJson,\n  readJsonSync,\n  writeJson,\n  writeJsonSync,\n  outputJson,\n  outputJsonSync,\n  outputJSON,\n  outputJSONSync,\n  writeJSON,\n  writeJSONSync,\n  readJSON,\n  readJSONSync,\n  mkdirs,\n  mkdirsSync,\n  mkdirp,\n  mkdirpSync,\n  ensureDir,\n  ensureDirSync,\n  move,\n  moveSync,\n  outputFile,\n  outputFileSync,\n  pathExists,\n  pathExistsSync,\n  remove,\n  removeSync\n]\n\nconst keys = Object.keys(fsDefault)\n\nassert.deepStrictEqual(Object.values(fsDefault), fsNamed, 'named and default exports should match')\nassert.deepStrictEqual(\n  Object.entries(fsStar)\n    .filter(([name]) => name !== 'default') // remove \"default\" property here\n    .sort(([nameA], [nameB]) => keys.indexOf(nameA) - keys.indexOf(nameB)) // sort for exact match\n    .map(([name, fn]) => fn),\n  Object.values(fsDefault),\n  'star and default exports should match'\n)\n\n// default exports a subset of the legacy implementation, but functions are the same\nObject.entries(fsDefault).forEach(([name, fn]) => {\n  assert.strictEqual(fn, fsLegacy[name], `${name}() should match legacy implementation`)\n})\n\nconsole.warn('ESM tests pass!')\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}