{
  "metadata": {
    "timestamp": 1736562856491,
    "page": 429,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nodeca/js-yaml",
      "stars": 6338,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.224609375,
          "content": "# Cross-editor coding style settings.\n# See http://editorconfig.org/ for details.\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\nend_of_line = lf\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".eslintrc.yml",
          "type": "blob",
          "size": 4.2265625,
          "content": "env:\n  node:     true\n  browser:  true\n  es6:      false\n\nglobals:\n  Uint8Array: false\n\nignorePatterns:\n  - coverage/\n  - demo/\n  - dist/\n  - node_modules\n  - benchmark/implementations\n  - rollup.config.js\n\nrules:\n  accessor-pairs:         2\n  array-bracket-spacing:  [ 2, \"always\", { \"singleValue\": true, \"objectsInArrays\": true, \"arraysInArrays\": true } ]\n  block-scoped-var:       2\n  block-spacing:          2\n  brace-style:            [ 2, '1tbs', { \"allowSingleLine\": true } ]\n  #callback-return:        2\n  comma-dangle:           2\n  comma-spacing:          2\n  comma-style:            2\n  computed-property-spacing: [ 2, never ]\n  #consistent-return:      2\n  consistent-this:        [ 2, self ]\n  curly:                  [ 2, 'multi-line' ]\n  # dot-notation:           [ 2, { allowKeywords: true } ]\n  dot-location:           [ 2, 'property' ]\n  eol-last:               2\n  eqeqeq:                 2\n  func-style:             [ 2, declaration ]\n  guard-for-in:           2\n  handle-callback-err:    2\n  indent:                 [ 2, 2, { VariableDeclarator: { var: 2, let: 2, const: 3 }, SwitchCase: 1 } ]\n  # key-spacing:            [ 2, { \"align\": \"value\" } ]\n  keyword-spacing:        2\n  linebreak-style:        2\n  max-depth:              [ 1, 5 ]\n  max-nested-callbacks:   [ 1, 7 ]\n  # string can exceed 80 chars, but should not overflow github website :)\n  max-len:                [ 2, 120, 1000 ]\n  new-cap:                2\n  new-parens:             2\n  no-alert:               2\n  no-array-constructor:   2\n  no-bitwise:             2\n  no-caller:              2\n  no-case-declarations:   2\n  no-catch-shadow:        2\n  no-cond-assign:         2\n  no-console:             1\n  no-constant-condition:  2\n  # no-control-regex:       2\n  no-debugger:            1\n  no-delete-var:          2\n  no-div-regex:           2\n  no-dupe-args:           2\n  no-dupe-keys:           2\n  no-duplicate-case:      2\n  no-else-return:         2\n  # no-empty:               1\n  no-empty-character-class: 2\n  no-empty-pattern:       2\n  no-eq-null:             2\n  no-eval:                2\n  no-ex-assign:           2\n  no-extend-native:       2\n  no-extra-bind:          2\n  no-extra-boolean-cast:  2\n  no-extra-semi:          2\n  no-fallthrough:         2\n  no-floating-decimal:    2\n  no-func-assign:         2\n  no-implied-eval:        2\n  no-inner-declarations:  2\n  no-invalid-regexp:      2\n  no-irregular-whitespace: 2\n  no-iterator:            2\n  no-labels:              2\n  no-label-var:           2\n  no-lone-blocks:         1\n  no-lonely-if:           2\n  no-loop-func:           2\n  no-mixed-requires:      [ 1, { \"grouping\": true } ]\n  no-mixed-spaces-and-tabs: 2\n  no-native-reassign:     2\n  no-negated-in-lhs:      2\n  no-new:                 2\n  no-new-func:            2\n  no-new-object:          2\n  no-new-require:         2\n  no-new-wrappers:        2\n  no-obj-calls:           2\n  no-octal:               2\n  no-octal-escape:        2\n  no-path-concat:         2\n  no-proto:               2\n  no-redeclare:           2\n  # no-regex-spaces:        2\n  no-return-assign:       2\n  no-self-compare:        2\n  no-sequences:           2\n  # no-shadow:              2\n  no-shadow-restricted-names: 2\n  no-sparse-arrays:       2\n  no-throw-literal:       2\n  no-trailing-spaces:     2\n  no-undef:               2\n  no-undef-init:          2\n  no-undefined:           2\n  no-unexpected-multiline: 2\n  no-unreachable:         2\n  no-unused-expressions:  2\n  no-unused-vars:         2\n  no-use-before-define:   2\n  no-void:                2\n  no-with:                2\n  object-curly-spacing:   [ 2, always, { \"objectsInObjects\": true, \"arraysInObjects\": true } ]\n  operator-assignment:    1\n  semi:                   2\n  semi-spacing:           2\n  space-before-blocks:    2\n  space-before-function-paren: [ 2, { \"anonymous\": \"always\", \"named\": \"never\" } ]\n  space-in-parens:        [ 2, never ]\n  space-infix-ops:        2\n  space-unary-ops:        2\n  #spaced-comment:         [ 1, always, { exceptions: [ '/', '=' ] } ]\n  strict:                 [ 2, global ]\n  quotes:                 [ 2, single, avoid-escape ]\n  quote-props:            [ 1, 'as-needed' ]\n  radix:                  2\n  use-isnan:              2\n  valid-typeof:           2\n  yoda:                   [ 2, never, { \"exceptRange\": true } ]\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.10546875,
          "content": ".nyc_output\ncoverage\ndemo\nnode_modules\ndoc\nbenchmark/implementations/*\n!/benchmark/implementations/current/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 18.779296875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n\n## [4.1.0] - 2021-04-15\n### Added\n- Types are now exported as `yaml.types.XXX`.\n- Every type now has `options` property with original arguments kept as they were\n  (see `yaml.types.int.options` as an example).\n\n### Changed\n- `Schema.extend()` now keeps old type order in case of conflicts\n  (e.g. Schema.extend([ a, b, c ]).extend([ b, a, d ]) is now ordered as `abcd` instead of `cbad`).\n\n\n## [4.0.0] - 2021-01-03\n### Changed\n- Check [migration guide](migrate_v3_to_v4.md) to see details for all breaking changes.\n- Breaking: \"unsafe\" tags `!!js/function`, `!!js/regexp`, `!!js/undefined` are\n  moved to [js-yaml-js-types](https://github.com/nodeca/js-yaml-js-types) package.\n- Breaking: removed `safe*` functions. Use `load`, `loadAll`, `dump`\n  instead which are all now safe by default.\n- `yaml.DEFAULT_SAFE_SCHEMA` and `yaml.DEFAULT_FULL_SCHEMA` are removed, use\n  `yaml.DEFAULT_SCHEMA` instead.\n- `yaml.Schema.create(schema, tags)` is removed, use `schema.extend(tags)` instead.\n- `!!binary` now always mapped to `Uint8Array` on load.\n- Reduced nesting of `/lib` folder.\n- Parse numbers according to YAML 1.2 instead of YAML 1.1 (`01234` is now decimal,\n  `0o1234` is octal, `1:23` is parsed as string instead of base60).\n- `dump()` no longer quotes `:`, `[`, `]`, `(`, `)` except when necessary, #470, #557.\n- Line and column in exceptions are now formatted as `(X:Y)` instead of\n  `at line X, column Y` (also present in compact format), #332.\n- Code snippet created in exceptions now contains multiple lines with line numbers.\n- `dump()` now serializes `undefined` as `null` in collections and removes keys with\n  `undefined` in mappings, #571.\n- `dump()` with `skipInvalid=true` now serializes invalid items in collections as null.\n- Custom tags starting with `!` are now dumped as `!tag` instead of `!<!tag>`, #576.\n- Custom tags starting with `tag:yaml.org,2002:` are now shorthanded using `!!`, #258.\n\n### Added\n- Added `.mjs` (es modules) support.\n- Added `quotingType` and `forceQuotes` options for dumper to configure\n  string literal style, #290, #529.\n- Added `styles: { '!!null': 'empty' }` option for dumper\n  (serializes `{ foo: null }` as \"`foo: `\"), #570.\n- Added `replacer` option (similar to option in JSON.stringify), #339.\n- Custom `Tag` can now handle all tags or multiple tags with the same prefix, #385.\n\n### Fixed\n- Astral characters are no longer encoded by `dump()`, #587.\n- \"duplicate mapping key\" exception now points at the correct column, #452.\n- Extra commas in flow collections (e.g. `[foo,,bar]`) now throw an exception\n  instead of producing null, #321.\n- `__proto__` key no longer overrides object prototype, #164.\n- Removed `bower.json`.\n- Tags are now url-decoded in `load()` and url-encoded in `dump()`\n  (previously usage of custom non-ascii tags may have led to invalid YAML that can't be parsed).\n- Anchors now work correctly with empty nodes, #301.\n- Fix incorrect parsing of invalid block mapping syntax, #418.\n- Throw an error if block sequence/mapping indent contains a tab, #80.\n\n\n## [3.14.1] - 2020-12-07\n### Security\n- Fix possible code execution in (already unsafe) `.load()` (in &anchor).\n\n\n## [3.14.0] - 2020-05-22\n### Changed\n- Support `safe/loadAll(input, options)` variant of call.\n- CI: drop outdated nodejs versions.\n- Dev deps bump.\n\n### Fixed\n- Quote `=` in plain scalars #519.\n- Check the node type for `!<?>` tag in case user manually specifies it.\n- Verify that there are no null-bytes in input.\n- Fix wrong quote position when writing condensed flow, #526.\n\n\n## [3.13.1] - 2019-04-05\n### Security\n- Fix possible code execution in (already unsafe) `.load()`, #480.\n\n\n## [3.13.0] - 2019-03-20\n### Security\n- Security fix: `safeLoad()` can hang when arrays with nested refs\n  used as key. Now throws exception for nested arrays. #475.\n\n\n## [3.12.2] - 2019-02-26\n### Fixed\n- Fix `noArrayIndent` option for root level, #468.\n\n\n## [3.12.1] - 2019-01-05\n### Added\n- Added `noArrayIndent` option, #432.\n\n\n## [3.12.0] - 2018-06-02\n### Changed\n- Support arrow functions without a block statement, #421.\n\n\n## [3.11.0] - 2018-03-05\n### Added\n- Add arrow functions suport for `!!js/function`.\n\n### Fixed\n- Fix dump in bin/octal/hex formats for negative integers, #399.\n\n\n## [3.10.0] - 2017-09-10\n### Fixed\n- Fix `condenseFlow` output (quote keys for sure, instead of spaces), #371, #370.\n- Dump astrals as codepoints instead of surrogate pair, #368.\n\n\n## [3.9.1] - 2017-07-08\n### Fixed\n- Ensure stack is present for custom errors in node 7.+, #351.\n\n\n## [3.9.0] - 2017-07-08\n### Added\n- Add `condenseFlow` option (to create pretty URL query params), #346.\n\n### Fixed\n- Support array return from safeLoadAll/loadAll, #350.\n\n\n## [3.8.4] - 2017-05-08\n### Fixed\n- Dumper: prevent space after dash for arrays that wrap, #343.\n\n\n## [3.8.3] - 2017-04-05\n### Fixed\n- Should not allow numbers to begin and end with underscore, #335.\n\n\n## [3.8.2] - 2017-03-02\n### Fixed\n- Fix `!!float 123` (integers) parse, #333.\n- Don't allow leading zeros in floats (except 0, 0.xxx).\n- Allow positive exponent without sign in floats.\n\n\n## [3.8.1] - 2017-02-07\n### Changed\n- Maintenance: update browserified build.\n\n\n## [3.8.0] - 2017-02-07\n### Fixed\n- Fix reported position for `duplicated mapping key` errors.\n  Now points to block start instead of block end.\n  (#243, thanks to @shockey).\n\n\n## [3.7.0] - 2016-11-12\n### Added\n- Support polymorphism for tags (#300, thanks to @monken).\n\n### Fixed\n- Fix parsing of quotes followed by newlines (#304, thanks to @dplepage).\n\n\n## [3.6.1] - 2016-05-11\n### Fixed\n- Fix output cut on a pipe, #286.\n\n\n## [3.6.0] - 2016-04-16\n### Fixed\n- Dumper rewrite, fix multiple bugs with trailing `\\n`.\n  Big thanks to @aepsilon!\n- Loader: fix leading/trailing newlines in block scalars, @aepsilon.\n\n\n## [3.5.5] - 2016-03-17\n### Fixed\n- Date parse fix: don't allow dates with on digit in month and day, #268.\n\n\n## [3.5.4] - 2016-03-09\n### Added\n- `noCompatMode` for dumper, to disable quoting YAML 1.1 values.\n\n\n## [3.5.3] - 2016-02-11\n### Changed\n- Maintenance release.\n\n\n## [3.5.2] - 2016-01-11\n### Changed\n- Maintenance: missed comma in bower config.\n\n\n## [3.5.1] - 2016-01-11\n### Changed\n- Removed `inherit` dependency, #239.\n- Better browserify workaround for esprima load.\n- Demo rewrite.\n\n\n## [3.5.0] - 2016-01-10\n### Fixed\n- Dumper. Fold strings only, #217.\n- Dumper. `norefs` option, to clone linked objects, #229.\n- Loader. Throw a warning for duplicate keys, #166.\n- Improved browserify support (mark `esprima` & `Buffer` excluded).\n\n\n## [3.4.6] - 2015-11-26\n### Changed\n- Use standalone `inherit` to keep browserified files clear.\n\n\n## [3.4.5] - 2015-11-23\n### Added\n- Added `lineWidth` option to dumper.\n\n\n## [3.4.4] - 2015-11-21\n### Fixed\n- Fixed floats dump (missed dot for scientific format), #220.\n- Allow non-printable characters inside quoted scalars, #192.\n\n\n## [3.4.3] - 2015-10-10\n### Changed\n- Maintenance release - deps bump (esprima, argparse).\n\n\n## [3.4.2] - 2015-09-09\n### Fixed\n- Fixed serialization of duplicated entries in sequences, #205.\n  Thanks to @vogelsgesang.\n\n\n## [3.4.1] - 2015-09-05\n### Fixed\n- Fixed stacktrace handling in generated errors, for browsers (FF/IE).\n\n\n## [3.4.0] - 2015-08-23\n### Changed\n- Don't throw on warnings anymore. Use `onWarning` option to catch.\n- Throw error on unknown tags (was warning before).\n- Reworked internals of error class.\n\n### Fixed\n- Fixed multiline keys dump, #197. Thanks to @tcr.\n- Fixed heading line breaks in some scalars (regression).\n\n\n## [3.3.1] - 2015-05-13\n### Added\n- Added `.sortKeys` dumper option, thanks to @rjmunro.\n\n### Fixed\n- Fixed astral characters support, #191.\n\n\n## [3.3.0] - 2015-04-26\n### Changed\n- Significantly improved long strings formatting in dumper, thanks to @isaacs.\n- Strip BOM if exists.\n\n\n## [3.2.7] - 2015-02-19\n### Changed\n- Maintenance release.\n- Updated dependencies.\n- HISTORY.md -> CHANGELOG.md\n\n\n## [3.2.6] - 2015-02-07\n### Fixed\n- Fixed encoding of UTF-16 surrogate pairs. (e.g. \"\\U0001F431\" CAT FACE).\n- Fixed demo dates dump (#113, thanks to @Hypercubed).\n\n\n## [3.2.5] - 2014-12-28\n### Fixed\n- Fixed resolving of all built-in types on empty nodes.\n- Fixed invalid warning on empty lines within quoted scalars and flow collections.\n- Fixed bug: Tag on an empty node didn't resolve in some cases.\n\n\n## [3.2.4] - 2014-12-19\n### Fixed\n- Fixed resolving of !!null tag on an empty node.\n\n\n## [3.2.3] - 2014-11-08\n### Fixed\n- Implemented dumping of objects with circular and cross references.\n- Partially fixed aliasing of constructed objects. (see issue #141 for details)\n\n\n## [3.2.2] - 2014-09-07\n### Fixed\n- Fixed infinite loop on unindented block scalars.\n- Rewritten base64 encode/decode in binary type, to keep code licence clear.\n\n\n## [3.2.1] - 2014-08-24\n### Fixed\n- Nothig new. Just fix npm publish error.\n\n\n## [3.2.0] - 2014-08-24\n### Added\n- Added input piping support to CLI.\n\n### Fixed\n- Fixed typo, that could cause hand on initial indent (#139).\n\n\n## [3.1.0] - 2014-07-07\n### Changed\n- 1.5x-2x speed boost.\n- Removed deprecated `require('xxx.yml')` support.\n- Significant code cleanup and refactoring.\n- Internal API changed. If you used custom types - see updated examples.\n  Others are not affected.\n- Even if the input string has no trailing line break character,\n  it will be parsed as if it has one.\n- Added benchmark scripts.\n- Moved bower files to /dist folder\n- Bugfixes.\n\n\n## [3.0.2] - 2014-02-27\n### Fixed\n- Fixed bug: \"constructor\" string parsed as `null`.\n\n\n## [3.0.1] - 2013-12-22\n### Fixed\n- Fixed parsing of literal scalars. (issue #108)\n- Prevented adding unnecessary spaces in object dumps. (issue #68)\n- Fixed dumping of objects with very long (> 1024 in length) keys.\n\n\n## [3.0.0] - 2013-12-16\n### Changed\n- Refactored code. Changed API for custom types.\n- Removed output colors in CLI, dump json by default.\n- Removed big dependencies from browser version (esprima, buffer). Load `esprima` manually, if `!!js/function` needed. `!!bin` now returns Array in browser\n- AMD support.\n- Don't quote dumped strings because of `-` & `?` (if not first char).\n- __Deprecated__ loading yaml files via `require()`, as not recommended\n  behaviour for node.\n\n\n## [2.1.3] - 2013-10-16\n### Fixed\n- Fix wrong loading of empty block scalars.\n\n\n## [2.1.2] - 2013-10-07\n### Fixed\n- Fix unwanted line breaks in folded scalars.\n\n\n## [2.1.1] - 2013-10-02\n### Fixed\n- Dumper now respects deprecated booleans syntax from YAML 1.0/1.1\n- Fixed reader bug in JSON-like sequences/mappings.\n\n\n## [2.1.0] - 2013-06-05\n### Added\n- Add standard YAML schemas: Failsafe (`FAILSAFE_SCHEMA`),\n  JSON (`JSON_SCHEMA`) and Core (`CORE_SCHEMA`).\n- Add `skipInvalid` dumper option.\n\n### Changed\n- Rename `DEFAULT_SCHEMA` to `DEFAULT_FULL_SCHEMA`\n  and `SAFE_SCHEMA` to `DEFAULT_SAFE_SCHEMA`.\n- Use `safeLoad` for `require` extension.\n\n### Fixed\n- Bug fix: export `NIL` constant from the public interface.\n\n\n## [2.0.5] - 2013-04-26\n### Security\n- Close security issue in !!js/function constructor.\n  Big thanks to @nealpoole for security audit.\n\n\n## [2.0.4] - 2013-04-08\n### Changed\n- Updated .npmignore to reduce package size\n\n\n## [2.0.3] - 2013-02-26\n### Fixed\n- Fixed dumping of empty arrays ans objects. ([] and {} instead of null)\n\n\n## [2.0.2] - 2013-02-15\n### Fixed\n- Fixed input validation: tabs are printable characters.\n\n\n## [2.0.1] - 2013-02-09\n### Fixed\n- Fixed error, when options not passed to function cass\n\n\n## [2.0.0] - 2013-02-09\n### Changed\n- Full rewrite. New architecture. Fast one-stage parsing.\n- Changed custom types API.\n- Added YAML dumper.\n\n\n## [1.0.3] - 2012-11-05\n### Fixed\n- Fixed utf-8 files loading.\n\n\n## [1.0.2] - 2012-08-02\n### Fixed\n- Pull out hand-written shims. Use ES5-Shims for old browsers support. See #44.\n- Fix timstamps incorectly parsed in local time when no time part specified.\n\n\n## [1.0.1] - 2012-07-07\n### Fixed\n- Fixes `TypeError: 'undefined' is not an object` under Safari. Thanks Phuong.\n- Fix timestamps incorrectly parsed in local time. Thanks @caolan. Closes #46.\n\n\n## [1.0.0] - 2012-07-01\n### Changed\n- `y`, `yes`, `n`, `no`, `on`, `off` are not converted to Booleans anymore.\n  Fixes #42.\n- `require(filename)` now returns a single document and throws an Error if\n  file contains more than one document.\n- CLI was merged back from js-yaml.bin\n\n\n## [0.3.7] - 2012-02-28\n### Fixed\n- Fix export of `addConstructor()`. Closes #39.\n\n\n## [0.3.6] - 2012-02-22\n### Changed\n- Removed AMD parts - too buggy to use. Need help to rewrite from scratch\n\n### Fixed\n- Removed YUI compressor warning (renamed `double` variable). Closes #40.\n\n\n## [0.3.5] - 2012-01-10\n### Fixed\n- Workagound for .npmignore fuckup under windows. Thanks to airportyh.\n\n\n## [0.3.4] - 2011-12-24\n### Fixed\n- Fixes str[] for oldIEs support.\n- Adds better has change support for browserified demo.\n- improves compact output of Error. Closes #33.\n\n\n## [0.3.3] - 2011-12-20\n### Added\n- adds `compact` stringification of Errors.\n\n### Changed\n- jsyaml executable moved to separate module.\n\n\n## [0.3.2] - 2011-12-16\n### Added\n- Added jsyaml executable.\n- Added !!js/function support. Closes #12.\n\n### Fixed\n- Fixes ug with block style scalars. Closes #26.\n- All sources are passing JSLint now.\n- Fixes bug in Safari. Closes #28.\n- Fixes bug in Opers. Closes #29.\n- Improves browser support. Closes #20.\n\n\n## [0.3.1] - 2011-11-18\n### Added\n- Added AMD support for browserified version.\n- Added permalinks for online demo YAML snippets. Now we have YPaste service, lol.\n- Added !!js/regexp and !!js/undefined types. Partially solves #12.\n\n### Changed\n- Wrapped browserified js-yaml into closure.\n\n### Fixed\n- Fixed the resolvement of non-specific tags. Closes #17.\n- Fixed !!set mapping.\n- Fixed month parse in dates. Closes #19.\n\n\n## [0.3.0] - 2011-11-09\n### Added\n- Added browserified version. Closes #13.\n- Added live demo of browserified version.\n- Ported some of the PyYAML tests. See #14.\n\n### Fixed\n- Removed JS.Class dependency. Closes #3.\n- Fixed timestamp bug when fraction was given.\n\n\n## [0.2.2] - 2011-11-06\n### Fixed\n- Fixed crash on docs without ---. Closes #8.\n- Fixed multiline string parse\n- Fixed tests/comments for using array as key\n\n\n## [0.2.1] - 2011-11-02\n### Fixed\n- Fixed short file read (<4k). Closes #9.\n\n\n## [0.2.0] - 2011-11-02\n### Changed\n- First public release\n\n\n[4.1.0]: https://github.com/nodeca/js-yaml/compare/4.0.0...4.1.0\n[4.0.0]: https://github.com/nodeca/js-yaml/compare/3.14.0...4.0.0\n[3.14.0]: https://github.com/nodeca/js-yaml/compare/3.13.1...3.14.0\n[3.13.1]: https://github.com/nodeca/js-yaml/compare/3.13.0...3.13.1\n[3.13.0]: https://github.com/nodeca/js-yaml/compare/3.12.2...3.13.0\n[3.12.2]: https://github.com/nodeca/js-yaml/compare/3.12.1...3.12.2\n[3.12.1]: https://github.com/nodeca/js-yaml/compare/3.12.0...3.12.1\n[3.12.0]: https://github.com/nodeca/js-yaml/compare/3.11.0...3.12.0\n[3.11.0]: https://github.com/nodeca/js-yaml/compare/3.10.0...3.11.0\n[3.10.0]: https://github.com/nodeca/js-yaml/compare/3.9.1...3.10.0\n[3.9.1]: https://github.com/nodeca/js-yaml/compare/3.9.0...3.9.1\n[3.9.0]: https://github.com/nodeca/js-yaml/compare/3.8.4...3.9.0\n[3.8.4]: https://github.com/nodeca/js-yaml/compare/3.8.3...3.8.4\n[3.8.3]: https://github.com/nodeca/js-yaml/compare/3.8.2...3.8.3\n[3.8.2]: https://github.com/nodeca/js-yaml/compare/3.8.1...3.8.2\n[3.8.1]: https://github.com/nodeca/js-yaml/compare/3.8.0...3.8.1\n[3.8.0]: https://github.com/nodeca/js-yaml/compare/3.7.0...3.8.0\n[3.7.0]: https://github.com/nodeca/js-yaml/compare/3.6.1...3.7.0\n[3.6.1]: https://github.com/nodeca/js-yaml/compare/3.6.0...3.6.1\n[3.6.0]: https://github.com/nodeca/js-yaml/compare/3.5.5...3.6.0\n[3.5.5]: https://github.com/nodeca/js-yaml/compare/3.5.4...3.5.5\n[3.5.4]: https://github.com/nodeca/js-yaml/compare/3.5.3...3.5.4\n[3.5.3]: https://github.com/nodeca/js-yaml/compare/3.5.2...3.5.3\n[3.5.2]: https://github.com/nodeca/js-yaml/compare/3.5.1...3.5.2\n[3.5.1]: https://github.com/nodeca/js-yaml/compare/3.5.0...3.5.1\n[3.5.0]: https://github.com/nodeca/js-yaml/compare/3.4.6...3.5.0\n[3.4.6]: https://github.com/nodeca/js-yaml/compare/3.4.5...3.4.6\n[3.4.5]: https://github.com/nodeca/js-yaml/compare/3.4.4...3.4.5\n[3.4.4]: https://github.com/nodeca/js-yaml/compare/3.4.3...3.4.4\n[3.4.3]: https://github.com/nodeca/js-yaml/compare/3.4.2...3.4.3\n[3.4.2]: https://github.com/nodeca/js-yaml/compare/3.4.1...3.4.2\n[3.4.1]: https://github.com/nodeca/js-yaml/compare/3.4.0...3.4.1\n[3.4.0]: https://github.com/nodeca/js-yaml/compare/3.3.1...3.4.0\n[3.3.1]: https://github.com/nodeca/js-yaml/compare/3.3.0...3.3.1\n[3.3.0]: https://github.com/nodeca/js-yaml/compare/3.2.7...3.3.0\n[3.2.7]: https://github.com/nodeca/js-yaml/compare/3.2.6...3.2.7\n[3.2.6]: https://github.com/nodeca/js-yaml/compare/3.2.5...3.2.6\n[3.2.5]: https://github.com/nodeca/js-yaml/compare/3.2.4...3.2.5\n[3.2.4]: https://github.com/nodeca/js-yaml/compare/3.2.3...3.2.4\n[3.2.3]: https://github.com/nodeca/js-yaml/compare/3.2.2...3.2.3\n[3.2.2]: https://github.com/nodeca/js-yaml/compare/3.2.1...3.2.2\n[3.2.1]: https://github.com/nodeca/js-yaml/compare/3.2.0...3.2.1\n[3.2.0]: https://github.com/nodeca/js-yaml/compare/3.1.0...3.2.0\n[3.1.0]: https://github.com/nodeca/js-yaml/compare/3.0.2...3.1.0\n[3.0.2]: https://github.com/nodeca/js-yaml/compare/3.0.1...3.0.2\n[3.0.1]: https://github.com/nodeca/js-yaml/compare/3.0.0...3.0.1\n[3.0.0]: https://github.com/nodeca/js-yaml/compare/2.1.3...3.0.0\n[2.1.3]: https://github.com/nodeca/js-yaml/compare/2.1.2...2.1.3\n[2.1.2]: https://github.com/nodeca/js-yaml/compare/2.1.1...2.1.2\n[2.1.1]: https://github.com/nodeca/js-yaml/compare/2.1.0...2.1.1\n[2.1.0]: https://github.com/nodeca/js-yaml/compare/2.0.5...2.1.0\n[2.0.5]: https://github.com/nodeca/js-yaml/compare/2.0.4...2.0.5\n[2.0.4]: https://github.com/nodeca/js-yaml/compare/2.0.3...2.0.4\n[2.0.3]: https://github.com/nodeca/js-yaml/compare/2.0.2...2.0.3\n[2.0.2]: https://github.com/nodeca/js-yaml/compare/2.0.1...2.0.2\n[2.0.1]: https://github.com/nodeca/js-yaml/compare/2.0.0...2.0.1\n[2.0.0]: https://github.com/nodeca/js-yaml/compare/1.0.3...2.0.0\n[1.0.3]: https://github.com/nodeca/js-yaml/compare/1.0.2...1.0.3\n[1.0.2]: https://github.com/nodeca/js-yaml/compare/1.0.1...1.0.2\n[1.0.1]: https://github.com/nodeca/js-yaml/compare/1.0.0...1.0.1\n[1.0.0]: https://github.com/nodeca/js-yaml/compare/0.3.7...1.0.0\n[0.3.7]: https://github.com/nodeca/js-yaml/compare/0.3.6...0.3.7\n[0.3.6]: https://github.com/nodeca/js-yaml/compare/0.3.5...0.3.6\n[0.3.5]: https://github.com/nodeca/js-yaml/compare/0.3.4...0.3.5\n[0.3.4]: https://github.com/nodeca/js-yaml/compare/0.3.3...0.3.4\n[0.3.3]: https://github.com/nodeca/js-yaml/compare/0.3.2...0.3.3\n[0.3.2]: https://github.com/nodeca/js-yaml/compare/0.3.1...0.3.2\n[0.3.1]: https://github.com/nodeca/js-yaml/compare/0.3.0...0.3.1\n[0.3.0]: https://github.com/nodeca/js-yaml/compare/0.2.2...0.3.0\n[0.2.2]: https://github.com/nodeca/js-yaml/compare/0.2.1...0.2.2\n[0.2.1]: https://github.com/nodeca/js-yaml/compare/0.2.0...0.2.1\n[0.2.0]: https://github.com/nodeca/js-yaml/releases/tag/0.2.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "(The MIT License)\n\nCopyright (C) 2011-2015 by Vitaly Puzrin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.3017578125,
          "content": "JS-YAML - YAML 1.2 parser / writer for JavaScript\n=================================================\n\n[![CI](https://github.com/nodeca/js-yaml/workflows/CI/badge.svg?branch=master)](https://github.com/nodeca/js-yaml/actions)\n[![NPM version](https://img.shields.io/npm/v/js-yaml.svg)](https://www.npmjs.org/package/js-yaml)\n\n__[Online Demo](https://nodeca.github.io/js-yaml/)__\n\n\nThis is an implementation of [YAML](https://yaml.org/), a human-friendly data\nserialization language. Started as [PyYAML](https://pyyaml.org/) port, it was\ncompletely rewritten from scratch. Now it's very fast, and supports 1.2 spec.\n\n\nInstallation\n------------\n\n### YAML module for node.js\n\n```\nnpm install js-yaml\n```\n\n\n### CLI executable\n\nIf you want to inspect your YAML files from CLI, install js-yaml globally:\n\n```\nnpm install -g js-yaml\n```\n\n#### Usage\n\n```\nusage: js-yaml [-h] [-v] [-c] [-t] file\n\nPositional arguments:\n  file           File with YAML document(s)\n\nOptional arguments:\n  -h, --help     Show this help message and exit.\n  -v, --version  Show program's version number and exit.\n  -c, --compact  Display errors in compact mode\n  -t, --trace    Show stack trace on error\n```\n\n\nAPI\n---\n\nHere we cover the most 'useful' methods. If you need advanced details (creating\nyour own tags), see [examples](https://github.com/nodeca/js-yaml/tree/master/examples)\nfor more info.\n\n``` javascript\nconst yaml = require('js-yaml');\nconst fs   = require('fs');\n\n// Get document, or throw exception on error\ntry {\n  const doc = yaml.load(fs.readFileSync('/home/ixti/example.yml', 'utf8'));\n  console.log(doc);\n} catch (e) {\n  console.log(e);\n}\n```\n\n\n### load (string [ , options ])\n\nParses `string` as single YAML document. Returns either a\nplain object, a string, a number, `null` or `undefined`, or throws `YAMLException` on error. By default, does\nnot support regexps, functions and undefined.\n\noptions:\n\n- `filename` _(default: null)_ - string to be used as a file path in\n  error/warning messages.\n- `onWarning` _(default: null)_ - function to call on warning messages.\n  Loader will call this function with an instance of `YAMLException` for each warning.\n- `schema` _(default: `DEFAULT_SCHEMA`)_ - specifies a schema to use.\n  - `FAILSAFE_SCHEMA` - only strings, arrays and plain objects:\n    https://www.yaml.org/spec/1.2/spec.html#id2802346\n  - `JSON_SCHEMA` - all JSON-supported types:\n    https://www.yaml.org/spec/1.2/spec.html#id2803231\n  - `CORE_SCHEMA` - same as `JSON_SCHEMA`:\n    https://www.yaml.org/spec/1.2/spec.html#id2804923\n  - `DEFAULT_SCHEMA` - all supported YAML types.\n- `json` _(default: false)_ - compatibility with JSON.parse behaviour. If true, then duplicate keys in a mapping will override values rather than throwing an error.\n\nNOTE: This function **does not** understand multi-document sources, it throws\nexception on those.\n\nNOTE: JS-YAML **does not** support schema-specific tag resolution restrictions.\nSo, the JSON schema is not as strictly defined in the YAML specification.\nIt allows numbers in any notation, use `Null` and `NULL` as `null`, etc.\nThe core schema also has no such restrictions. It allows binary notation for integers.\n\n\n### loadAll (string [, iterator] [, options ])\n\nSame as `load()`, but understands multi-document sources. Applies\n`iterator` to each document if specified, or returns array of documents.\n\n``` javascript\nconst yaml = require('js-yaml');\n\nyaml.loadAll(data, function (doc) {\n  console.log(doc);\n});\n```\n\n\n### dump (object [ , options ])\n\nSerializes `object` as a YAML document. Uses `DEFAULT_SCHEMA`, so it will\nthrow an exception if you try to dump regexps or functions. However, you can\ndisable exceptions by setting the `skipInvalid` option to `true`.\n\noptions:\n\n- `indent` _(default: 2)_ - indentation width to use (in spaces).\n- `noArrayIndent` _(default: false)_ - when true, will not add an indentation level to array elements\n- `skipInvalid` _(default: false)_ - do not throw on invalid types (like function\n  in the safe schema) and skip pairs and single values with such types.\n- `flowLevel` _(default: -1)_ - specifies level of nesting, when to switch from\n  block to flow style for collections. -1 means block style everwhere\n- `styles` - \"tag\" => \"style\" map. Each tag may have own set of styles.\n- `schema` _(default: `DEFAULT_SCHEMA`)_ specifies a schema to use.\n- `sortKeys` _(default: `false`)_ - if `true`, sort keys when dumping YAML. If a\n  function, use the function to sort the keys.\n- `lineWidth` _(default: `80`)_ - set max line width. Set `-1` for unlimited width.\n- `noRefs` _(default: `false`)_ - if `true`, don't convert duplicate objects into references\n- `noCompatMode` _(default: `false`)_ - if `true` don't try to be compatible with older\n  yaml versions. Currently: don't quote \"yes\", \"no\" and so on, as required for YAML 1.1\n- `condenseFlow` _(default: `false`)_ - if `true` flow sequences will be condensed, omitting the space between `a, b`. Eg. `'[a,b]'`, and omitting the space between `key: value` and quoting the key. Eg. `'{\"a\":b}'` Can be useful when using yaml for pretty URL query params as spaces are %-encoded.\n- `quotingType` _(`'` or `\"`, default: `'`)_ - strings will be quoted using this quoting style. If you specify single quotes, double quotes will still be used for non-printable characters.\n- `forceQuotes` _(default: `false`)_ - if `true`, all non-key strings will be quoted even if they normally don't need to.\n- `replacer` - callback `function (key, value)` called recursively on each key/value in source object (see `replacer` docs for `JSON.stringify`).\n\nThe following table show availlable styles (e.g. \"canonical\",\n\"binary\"...) available for each tag (.e.g. !!null, !!int ...). Yaml\noutput is shown on the right side after `=>` (default setting) or `->`:\n\n``` none\n!!null\n  \"canonical\"   -> \"~\"\n  \"lowercase\"   => \"null\"\n  \"uppercase\"   -> \"NULL\"\n  \"camelcase\"   -> \"Null\"\n  \"empty\"       -> \"\"\n\n!!int\n  \"binary\"      -> \"0b1\", \"0b101010\", \"0b1110001111010\"\n  \"octal\"       -> \"0o1\", \"0o52\", \"0o16172\"\n  \"decimal\"     => \"1\", \"42\", \"7290\"\n  \"hexadecimal\" -> \"0x1\", \"0x2A\", \"0x1C7A\"\n\n!!bool\n  \"lowercase\"   => \"true\", \"false\"\n  \"uppercase\"   -> \"TRUE\", \"FALSE\"\n  \"camelcase\"   -> \"True\", \"False\"\n\n!!float\n  \"lowercase\"   => \".nan\", '.inf'\n  \"uppercase\"   -> \".NAN\", '.INF'\n  \"camelcase\"   -> \".NaN\", '.Inf'\n```\n\nExample:\n\n``` javascript\ndump(object, {\n  'styles': {\n    '!!null': 'canonical' // dump null as ~\n  },\n  'sortKeys': true        // sort object keys\n});\n```\n\nSupported YAML types\n--------------------\n\nThe list of standard YAML tags and corresponding JavaScript types. See also\n[YAML tag discussion](https://pyyaml.org/wiki/YAMLTagDiscussion) and\n[YAML types repository](https://yaml.org/type/).\n\n```\n!!null ''                   # null\n!!bool 'yes'                # bool\n!!int '3...'                # number\n!!float '3.14...'           # number\n!!binary '...base64...'     # buffer\n!!timestamp 'YYYY-...'      # date\n!!omap [ ... ]              # array of key-value pairs\n!!pairs [ ... ]             # array or array pairs\n!!set { ... }               # array of objects with given keys and null values\n!!str '...'                 # string\n!!seq [ ... ]               # array\n!!map { ... }               # object\n```\n\n**JavaScript-specific tags**\n\nSee [js-yaml-js-types](https://github.com/nodeca/js-yaml-js-types) for\nextra types.\n\n\nCaveats\n-------\n\nNote, that you use arrays or objects as key in JS-YAML. JS does not allow objects\nor arrays as keys, and stringifies (by calling `toString()` method) them at the\nmoment of adding them.\n\n``` yaml\n---\n? [ foo, bar ]\n: - baz\n? { foo: bar }\n: - baz\n  - baz\n```\n\n``` javascript\n{ \"foo,bar\": [\"baz\"], \"[object Object]\": [\"baz\", \"baz\"] }\n```\n\nAlso, reading of properties on implicit block mapping keys is not supported yet.\nSo, the following YAML document cannot be loaded.\n\n``` yaml\n&anchor foo:\n  foo: bar\n  *anchor: duplicate key\n  baz: bat\n  *anchor: duplicate key\n```\n\n\njs-yaml for enterprise\n----------------------\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of js-yaml and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-js-yaml?utm_source=npm-js-yaml&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 1.7509765625,
          "content": "'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "migrate_v3_to_v4.md",
          "type": "blob",
          "size": 2.8466796875,
          "content": "# Migration guide from `js-yaml@3` to `js-yaml@4`.\n\n### safeLoad(), safeLoadAll(), safeDump() => load(), loadAll(), dump()\n\nOlder `safe*` functions were renamed.\n\njs-yaml v3:\n\n```js\nyaml.safeLoad(str)\nyaml.safeLoadAll(str)\nyaml.safeDump(obj)\n```\n\njs-yaml v4:\n\n```js\nyaml.load(str)\nyaml.loadAll(str)\nyaml.dump(obj)\n```\n\n\n### Old load(), loadAll(), dump() were replaced by safe methods\n\n`!!js/function`, `!!js/regexp`, `!!js/undefined` type definitions are moved to external package [js-yaml-js-types](https://github.com/nodeca/js-yaml-js-types). To restore previous (unsafe) behaviour, use a custom extended schema.\n\njs-yaml v3:\n\n```js\nyaml.load(str)\nyaml.loadAll(str)\nyaml.dump(obj)\n```\n\njs-yaml v4:\n\n```js\nlet schema = yaml.DEFAULT_SCHEMA.extend(require('js-yaml-js-types').all)\n\nyaml.load(str, { schema })\nyaml.loadAll(str, { schema })\nyaml.dump(obj, { schema })\n```\n\n\n### `Schema.create`, `DEFAULT_SAFE_SCHEMA` and `DEFAULT_FULL_SCHEMA` are removed\n\n\njs-yaml v3:\n\n```js\nlet schema1 = yaml.DEFAULT_SAFE_SCHEMA\nlet schema2 = yaml.DEFAULT_FULL_SCHEMA\nlet schema3 = yaml.Schema.create(yaml.DEFAULT_SAFE_SCHEMA, [ customTags ])\n```\n\njs-yaml v4:\n\n```js\nlet schema1 = yaml.DEFAULT_SCHEMA\nlet schema2 = yaml.DEFAULT_SCHEMA.extend(require('js-yaml-js-types').all)\nlet schema3 = yaml.DEFAULT_SCHEMA.extend([ customTags ])\n```\n\n\n### Loading in v4 documents previously dumped in v3\n\njs-yaml v3 may dump some strings starting with 0 without quotes. They will load as numbers in v4.\n\nAffected data (if you have these **unquoted strings**, they may get converted to numbers):\n\n - integers starting with `0` that contain `8` or `9` digits\n   - `\"0128\"` dumped by v3 as `0128` then parsed by v4 into number `128`\n   - `\"0127\"` is not affected, because it's dumped by v3 as `\"0127\"` (it looks like old-style octal, so v3 quotes it)\n - floats starting with `0` (except for `0.`)\n   - `\"012.34\"` dumped by v3 as `012.34` then parsed by v4 into number `12.34`\n   - `\"012e+4\"` dumped by v3 as `012e+4` then parsed by v4 into number `120000`\n   - `\"0.0123\"` is not affected (it looks like a normal float, so v3 quotes it)\n\nThis is what happens:\n\n```js\nlet data = '0123456789'\n// typeof data === 'string'\n\nstr  = require('js-yaml@3').dump('0123456789')\ndata = require('js-yaml@4').load(str)\n\n// data will be 123456789\n// typeof data === 'number'\n```\n\nYou can check for these patterns in your data using regexp like this:\n\n```yaml\ngrep '\\(^\\|:\\s\\s*\\)0[0-9][.0-9]*\\s*$' *.yml\n```\n\nIf you have these in your yaml files anywhere, you should quote them (e.g. `0123456789` => `\"0123456789\"`).\n\n\n### Reduced nesting in `/lib` folder\n\nIf you reference anything inside js-yaml/lib folder, i.e. `require('js-yaml/lib/XXX')`, you'll need to change paths.\n\njs-yaml v3:\n\n```js\nrequire('js-yaml/lib/js-yaml/common');\nrequire('js-yaml/lib/js-yaml/type/int');\n```\n\njs-yaml v4:\n\n```js\nrequire('js-yaml/lib/common');\nrequire('js-yaml/lib/type/int');\n```\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.7265625,
          "content": "{\n  \"name\": \"js-yaml\",\n  \"version\": \"4.1.0\",\n  \"description\": \"YAML 1.2 parser and serializer\",\n  \"keywords\": [\n    \"yaml\",\n    \"parser\",\n    \"serializer\",\n    \"pyyaml\"\n  ],\n  \"author\": \"Vladimir Zapparov <dervus.grim@gmail.com>\",\n  \"contributors\": [\n    \"Aleksey V Zapparov <ixti@member.fsf.org> (http://www.ixti.net/)\",\n    \"Vitaly Puzrin <vitaly@rcdesign.ru> (https://github.com/puzrin)\",\n    \"Martin Grenfell <martin.grenfell@gmail.com> (http://got-ravings.blogspot.com)\"\n  ],\n  \"license\": \"MIT\",\n  \"repository\": \"nodeca/js-yaml\",\n  \"files\": [\n    \"index.js\",\n    \"lib/\",\n    \"bin/\",\n    \"dist/\"\n  ],\n  \"bin\": {\n    \"js-yaml\": \"bin/js-yaml.js\"\n  },\n  \"module\": \"./dist/js-yaml.mjs\",\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/js-yaml.mjs\",\n      \"require\": \"./index.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"test\": \"npm run lint && mocha\",\n    \"coverage\": \"npm run lint && nyc mocha && nyc report --reporter html\",\n    \"demo\": \"npm run lint && node support/build_demo.js\",\n    \"gh-demo\": \"npm run demo && gh-pages -d demo -f\",\n    \"browserify\": \"rollup -c support/rollup.config.js\",\n    \"prepublishOnly\": \"npm run gh-demo\"\n  },\n  \"unpkg\": \"dist/js-yaml.min.js\",\n  \"jsdelivr\": \"dist/js-yaml.min.js\",\n  \"dependencies\": {\n    \"argparse\": \"^2.0.1\"\n  },\n  \"devDependencies\": {\n    \"@rollup/plugin-commonjs\": \"^17.0.0\",\n    \"@rollup/plugin-node-resolve\": \"^11.0.0\",\n    \"ansi\": \"^0.3.1\",\n    \"benchmark\": \"^2.1.4\",\n    \"codemirror\": \"^5.13.4\",\n    \"eslint\": \"^7.0.0\",\n    \"fast-check\": \"^2.8.0\",\n    \"gh-pages\": \"^3.1.0\",\n    \"mocha\": \"^8.2.1\",\n    \"nyc\": \"^15.1.0\",\n    \"rollup\": \"^2.34.1\",\n    \"rollup-plugin-node-polyfills\": \"^0.2.1\",\n    \"rollup-plugin-terser\": \"^7.0.2\",\n    \"shelljs\": \"^0.8.4\"\n  }\n}\n"
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}