{
  "metadata": {
    "timestamp": 1736562761902,
    "page": 305,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fontello/fontello",
      "stars": 7022,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc.yml",
          "type": "blob",
          "size": 5.4501953125,
          "content": "env:\n  node:     true\n  browser:  false\n  # Postponed: enable partially (less on server, more on client)\n  es6: true\n\nparserOptions:\n  ecmaVersion: '2020'\n\nignorePatterns:\n  - 'assets/**'\n  - '**/node_modules'\n  - '**/_vendor/**'\n  - '**/modernizr.custom.js'\n  - '**/jquery.numeric.js'\n  - '**/jquery.xselectable.js'\n  - '**/lib/embedded_fonts/**'\n  \nrules:\n  accessor-pairs:         2\n  array-bracket-spacing:  [ 2, \"always\", { \"singleValue\": true, \"objectsInArrays\": true, \"arraysInArrays\": true } ]\n  block-scoped-var:       2\n  block-spacing:          2\n  brace-style:            [ 2, '1tbs', { \"allowSingleLine\": true } ]\n  # Postponed\n  #callback-return:        2\n  comma-dangle:           2\n  comma-spacing:          2\n  comma-style:            2\n  computed-property-spacing: [ 2, never ]\n  # Postponed\n  #consistent-return:      2\n  consistent-this:        [ 2, self ]\n  # ? change to multi\n  curly:                  [ 2, 'multi-line' ]\n  # Postponed\n  # dot-notation:           [ 2, { allowKeywords: true } ]\n  dot-location:           [ 2, 'property' ]\n  eol-last:               2\n  eqeqeq:                 2\n  func-style:             [ 2, declaration ]\n  # Postponed\n  #global-require:         2\n  guard-for-in:           2\n  handle-callback-err:    2\n\n  # Postponed\n  indent-legacy:          [ 2, 2, { VariableDeclarator: { var: 2, let: 2, const: 3 }, SwitchCase: 1 } ]\n\n  # key-spacing:            [ 2, { \"align\": \"value\" } ]\n  keyword-spacing:        2\n  linebreak-style:        2\n  max-depth:              [ 1, 3 ]\n  max-nested-callbacks:   [ 1, 5 ]\n  # string can exceed 80 chars, but should not overflow github website :)\n  max-len:                [ 2, 120, 1000 ]\n  new-cap:                2\n  new-parens:             2\n  # Postponed\n  #newline-after-var:      2\n  no-alert:               2\n  no-array-constructor:   2\n  no-bitwise:             2\n  no-caller:              2\n  #no-case-declarations:   2\n  no-catch-shadow:        2\n  no-cond-assign:         2\n  no-console:             1\n  no-constant-condition:  2\n  no-control-regex:       2\n  no-debugger:            1\n  no-delete-var:          2\n  no-div-regex:           2\n  no-dupe-args:           2\n  no-dupe-keys:           2\n  no-duplicate-case:      2\n  no-else-return:         2\n  # Tend to drop\n  # no-empty:               1\n  no-empty-character-class: 2\n  no-empty-pattern:       2\n  no-eq-null:             2\n  no-eval:                2\n  no-ex-assign:           2\n  no-extend-native:       2\n  no-extra-bind:          2\n  no-extra-boolean-cast:  2\n  no-extra-semi:          2\n  no-fallthrough:         2\n  no-floating-decimal:    2\n  no-func-assign:         2\n  # Postponed\n  #no-implicit-coercion:   [2, { \"boolean\": true, \"number\": true, \"string\": true } ]\n  no-implied-eval:        2\n  no-inner-declarations:  2\n  no-invalid-regexp:      2\n  no-irregular-whitespace: 2\n  no-iterator:            2\n  no-label-var:           2\n  no-labels:              2\n  no-lone-blocks:         1\n  no-lonely-if:           2\n  no-loop-func:           2\n  no-mixed-requires:      [ 1, { \"grouping\": true } ]\n  no-mixed-spaces-and-tabs: 2\n  # Postponed\n  #no-native-reassign:     2\n  no-negated-in-lhs:      2\n  # Postponed\n  #no-nested-ternary:      2\n  no-new:                 2\n  no-new-func:            2\n  no-new-object:          2\n  no-new-require:         2\n  no-new-wrappers:        2\n  no-obj-calls:           2\n  no-octal:               2\n  no-octal-escape:        2\n  no-path-concat:         2\n  no-proto:               2\n  no-redeclare:           2\n  # Postponed\n  #no-regex-spaces:        2\n  no-return-assign:       2\n  no-self-compare:        2\n  no-sequences:           2\n  # Postponed\n  #no-shadow:              2\n  no-shadow-restricted-names: 2\n  no-sparse-arrays:       2\n  # Postponed\n  #no-sync:                2\n  no-trailing-spaces:     2\n  no-undef:               2\n  no-undef-init:          2\n  no-undefined:           2\n  no-unexpected-multiline: 2\n  no-unreachable:         2\n  no-unused-expressions:  2\n  no-unused-vars:         2\n  no-use-before-define:   2\n  no-void:                2\n  no-with:                2\n  object-curly-spacing:   [ 2, always, { \"objectsInObjects\": true, \"arraysInObjects\": true } ]\n  operator-assignment:    1\n  # Postponed\n  #operator-linebreak:     [ 2, after ]\n  semi:                   2\n  semi-spacing:           2\n  space-before-function-paren: [ 2, { \"anonymous\": \"always\", \"named\": \"never\" } ]\n  space-in-parens:        [ 2, never ]\n  space-infix-ops:        2\n  space-unary-ops:        2\n  # Postponed\n  #spaced-comment:         [ 1, always, { exceptions: [ '/', '=' ] } ]\n  strict:                 [ 2, global ]\n  quotes:                 [ 2, single, avoid-escape ]\n  quote-props:            [ 1, 'as-needed' ]\n  radix:                  2\n  use-isnan:              2\n  valid-typeof:           2\n  yoda:                   [ 2, never, { \"exceptRange\": true } ]\n\n  #\n  # es6\n  #\n  arrow-body-style:       [ 1, \"as-needed\" ]\n  arrow-parens:           [ 1, \"as-needed\" ]\n  arrow-spacing:          2\n  constructor-super:      2\n  generator-star-spacing: [ 2, {\"before\": false, \"after\": true } ]\n  no-class-assign:        2\n  no-confusing-arrow:     [ 1, { allowParens: true } ]\n  no-const-assign:        2\n  #no-constant-condition:  2\n  no-dupe-class-members:  2\n  no-this-before-super:   2\n  # Postponed\n  #no-var:                 2\n  object-shorthand:       1\n  # Postponed\n  #prefer-arrow-callback:  1\n  # Postponed\n  #prefer-const:           1\n  #prefer-reflect\n  #prefer-spread\n  # Postponed\n  #prefer-template:        1\n  require-yield:          1\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.12890625,
          "content": "node_modules/\nlog/\nassets/\n\n*.log\n*.swp\n*.sublime-project\n*.sublime-workspace\n\ndownload/\ndb/\n\n.fontello\n.fontello.zip\n.fontello.src\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.490234375,
          "content": "[submodule \"src/iconic-uni.font\"]\n\tpath = src/iconic-uni.font\n\turl = git://github.com/fontello/iconic-uni.font.git\n[submodule \"src/awesome-uni.font\"]\n\tpath = src/awesome-uni.font\n\turl = git://github.com/fontello/awesome-uni.font.git\n[submodule \"src/websymbols-uni.font\"]\n\tpath = src/websymbols-uni.font\n\turl = git://github.com/fontello/websymbols-uni.font.git\n[submodule \"src/entypo\"]\n\tpath = src/entypo\n\turl = git://github.com/fontello/entypo.git\n[submodule \"src/brandico.font\"]\n\tpath = src/brandico.font\n\turl = git://github.com/fontello/brandico.font.git\n[submodule \"src/modernpics.font\"]\n\tpath = src/modernpics.font\n\turl = git://github.com/fontello/modernpics.font.git\n[submodule \"src/typicons.font\"]\n\tpath = src/typicons.font\n\turl = git://github.com/fontello/typicons.font.git\n[submodule \"src/meteocons.font\"]\n\tpath = src/meteocons.font\n\turl = git://github.com/fontello/meteocons.font.git\n[submodule \"src/zocial.font\"]\n\tpath = src/zocial.font\n\turl = git://github.com/fontello/zocial.font.git\n[submodule \"src/maki.font\"]\n\tpath = src/maki.font\n\turl = git://github.com/fontello/maki.font.git\n[submodule \"src/fontelico.font\"]\n\tpath = src/fontelico.font\n\turl = git://github.com/fontello/fontelico.font.git\n[submodule \"src/mfglabs.font\"]\n\tpath = src/mfglabs.font\n\turl = git://github.com/fontello/mfglabs.font.git\n[submodule \"src/elusive.font\"]\n\tpath = src/elusive.font\n\turl = git://github.com/fontello/elusive.font.git\n[submodule \"src/linecons.font\"]\n\tpath = src/linecons.font\n\turl = git://github.com/fontello/linecons.font.git\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.9482421875,
          "content": "9.0.0 / WIP\n------------------\n\n- (!) Switched to SSL. If you use API - update request links from\n  `http://...` to `https://...` in your scripts.\n- Bump `svg2ttf` to v5+. `USE_TYPO_METRICS` bit of `OS/2.fsSelection` is now\n  set. Should fix Windows line spacing issues.\n- CSS `speak: none` => `speak: never`, #702.\n- Allow garbage params in query string, #692.\n- Fix slow select on big custom collections, #583.\n- Fix waiting on `level-ttl` write (caused races in tests).\n- Switch to `ko` deferred updates.\n- Gzip client requests to server (when config been sent).\n- Fix deferred updates issues, #714.\n- Fix `os.tmpDir` => `os.tmpdir`, #712.\n- Fix antialiasing properies in CSS wih embedded fonts, #652.\n- Fix ttfautohint options (drop '--windows-compatibility'), #713.\n- New deploy process via docker.\n- Use node.js 14 for CI & deploy.\n- Deps bump.\n- Nodeca core resync.\n\n\n8.0.0 / 2018-08-22\n------------------\n\n- Requires node.js 8+ now (with webassembly support).\n- Nodeca core resync.\n- ttf2woff2 -> wawoff2.\n\n\n7.1.0 / 2017-05-27\n------------------\n\n- svg2ttf bump, #607.\n- fontello.js -> server.js.\n- Resync nodeca core (new loader.js + minor changes).\n- FontAwesome update to 4.7.\n- formidable -> built-in multipart POST data parser.\n- jade -> pug.\n- Fix CSS 3-ditits codes, #521.\n- relax api tests - remove copyright year before svg compare.\n- Various code cleanups.\n\n\n7.0.0 / 2016-10-20\n------------------\n\n- Reduce requirements - replaced MondoDB with local leveldb.\n- Use leveldb to stoge generated files.\n- Autoclear old data (generated results & sessions).\n- Do not support forking (it was not used anyway).\n- Replace jquery-ui `selectable` with `xselectable`, drop jquery-ui.\n- Use only woff/woff2 for site icons.\n- Resync nodeca core.\n\n\n6.0.0 / 2016-08-04\n------------------\n\n- Resync core with fresh nodeca sources + deps bump. Now use\n  node.js 6.+.\n- Added WOFF2 support, #388.\n- Added glyphs reorder support, #283, #240.\n- Assorted `svg2ttf` (TTF generator) updates: lineGap -> 0, fsType -> 0.\n- Accessibility improve, #468.\n- Fixed zip import, #426.\n- Fixed icon custom codes load from localstore, #500\n- Fixed custom glyph unselect on edit call, #497\n- Font Awesome update to 4.6.3\n- Reorganized configs & folders.\n\n\n5.3.0 / 2015-11-20\n------------------\n\n- Added font smoothing as in TWBS\n- Make demo icons \"copypasteable\".\n- Fixed custom icons size in UI if adfanced settings changed.\n- FA update to 4.3.0.\n- Improved SVG import - transforms & paths merge are applyed automatically.\n- Fixed import of empty glyphs (space).\n- Use ttfautohint v1.1.\n\n\n5.2.0 / 2014-06-22\n------------------\n\n- FontAwesome update to 4.1.0\n- Added font version display if exists\n- Other minor fonts updates\n- Nodeca core sync\n- Dependencies update\n- Removed security headers due cross issues\n\n\n5.1.0 / 2014-02-18\n------------------\n\n- Fixed generated CSS with base64 encoded fonts for big files\n- Fixed UI inconsistency after config import (improved locks logic)\n- Improved drag & drop handling\n- Fonts refresh\n- Better message on attempt to import TTF/WOFF/OTF\n- DB config format change - now use single URI\n- Different internal engine & dependencies updates\n\n\n5.0.1 / 2013-11-02\n------------------\n\n- Removed almost all interface animation effects, to make it more responsive\n- Fixed config defaults, that caused API problems with old config formats\n- Rewritten selected glyphs tracker, now keep glyphs order by selection time\n- Updated FontAwesome to 4.0.1\n- Glyph options dialog for custom icons\n- Added `Help` link\n- Changed way to track selection - keep order now\n- Increased input width for char codes\n- Spelling fixes\n- regressions fixes\n\n\n5.0.0 / 2013-10-07\n------------------\n\n- (!) Added custom SVG import support\n- Reorganized settings, font metrics can be changed now\n- Don't use `fontforge` anymore (build fonts with node js packages)\n- Woff fix for uncompressed tables\n- Improved restart time (use new `mincer` with better cache)\n- Moved client models to separate block\n- Migrated to Twitter Bootstrap 3.0\n- Code refactoring/cleanup\n\n\n4.0.1 / 2013-06-26\n------------------\n\n- Updated FontAwesome to 3.2.1\n- Updated MFG Labs font\n- Updated Typicons font to 2.0\n- Switched to node v0.10\n- Added styles cache (improved restart time)\n\n\n4.0.0 / 2013-06-02\n------------------\n\n- Added easy encoding switch (private use area / text / unicode)\n- Added developers API to do scripting for config upload and font download\n- Added configurable prefixes fir icon names\n- Added persistanse for glyphs size\n- Permalinks for search results\n- Focus on search field after load\n- Added count of selected/searched glyphs for each font\n- Added message, when nothing found in search\n- Search field now can be cleared by escape\n- Better file name filtering (replace invalid chars inplace)\n- Improved persistance for all app/font settings\n- You can now import config.json without unzipping first\n- Import can be done by dropping file to fontello page\n- IE8 regressions fixes\n- Updated to new (wire-based) nodeca architectire\n\n\n3.0.0 / 2013-04-01\n------------------\n\n- Updated Entypo to 2.0\n- Updated Font Awesome to 3.0\n- Added Meteocons font\n- Added Fontelico font\n- Added Elusive font\n- Tuned fonts baseline\n- Added glyphs tooltips on selector panel\n- Added delete buttons on codes editor and names editor\n- Improved generated demo (show glyph codes now)\n- Added css with base64 woff & ttf fonts, to workaround CORS issues in FF & IE9,\n  when you don't wish to set `Access-Control-Allow-Origin` server headers.\n- Removed default opacity\n- Rearranged toolbar controls, to show `search` better\n- Added random number to generated CSS font paths, to avoid cache issues (#127)\n- Font collapse state now remembered\n- Added `font-variant` & `text-transforms` styles reset (#135)\n- New modularized architecture (all as `blocks` + knockout.js on client side)\n\n\n2.0.4 / 2012-11-06\n------------------\n\n- Moved font info from popup to main page, to better credit authors\n- Updated brandico with couple of icons\n- Minor fixes\n\n\n2.0.3 / 2012-09-07\n------------------\n\n- Preview tab content now resizeable too\n- You can edit glyph names\n- Codes edit improved\n- Fixed EOT fonts generation for customised font names\n- Added switchable '3D' shadow effect for icons\n- Fixed work with Opera 12\n- Tweaked styles again :)\n- Improved work with proxies (switched back data exchange from realtime to ajax)\n- Optimized page loading speed - merged all embedded fonts into single file\n- Synked libraries codebase with nodeca mainstream\n\n\n2.0.2 / 2012-06-27\n------------------\n\n- Added configuration import/export\n- Improved CSS generation\n  - use escaped chars when possible (for codes <= 0xFFFF)\n  - add encoding (first line) only when needed\n  - ie7 support\n  - plains css with codes only, for automated asset build systems\n- Added README & LICENSE files to generated webfonts\n- Demo data bundled to single file now\n- Minor UI tweaks (inputs, buttons)\n- Fixed server stability issues (increased open file descriptors limit)\n- Migrated to node.js v0.8\n\n\n2.0.1 / 2012-06-03\n------------------\n\n- Reworked interface logic & look\n- Added search\n- Added multiselect (click+drag)\n- Added field to select file name\n- Autosave for all changes\n- Number of small fixes\n- Internal refactoring (continue switching to new nodeca libraries)\n- Returned back WebSymbols font\n- Added Modern Pictograms font\n- Added Typicons font\n\n\n2.0.0 / 2012-05-08\n------------------\n\n- Uses new [Font Builder](https://github.com/fontello/font-builder) system\n  - All your files in single archive - no needs to use fontsquirrel generator.\n  - Better glyphs mapping: follow Unicode 6.1 standard where possible.\n  - Embedded fonts realligned to middleline of small letters.\n  - Integrated ttfautohint, to significantly improve hinting.\n- Added `Font Awesome`\n- Added `Brandico`\n- Removed `WebSymbols`\n- Editable glyph codes.\n- Auto-generated CSS for bootstrap.\n- Nice preview tab & auto-generated demo-page.\n- Using @fonf-face instead of cufon to display glyths - mush better quality.\n- Removed external font loading, until we do something better.\n\n\n0.0.1 / 2012-02-23\n------------------\n\n- First release\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.5126953125,
          "content": "1. Prior to create new issue, make sure that your question is not answered in [Help](https://github.com/fontello/fontello/wiki/Help).\n2. When you report a bug, check that you provided full info how to reproduce:\n   - browser, os\n   - step-by-step instruction\n   - data files (`config.json` and so on) if needed\n   - screenshot if needed\n3. We don't accept requests like \"add this super font\". Read [How to suggest font to fontello](https://github.com/fontello/fontello/wiki/How-to-suggest-font-to-fontello) for instructions.\n"
        },
        {
          "name": "DEVELOPMENT.md",
          "type": "blob",
          "size": 1.0185546875,
          "content": "Fontello installation instruction <!-- omit in toc -->\n=================================\n\nThis description is for development only. For quick deploy use docker, see\n[deploy info](support/deploy/README.md).\n\nFonello runs on Ubuntu 18.04 LTS, but it can probably work on other OS-es.\nHowever, it's not tested anywhere else and support is not provided. If you wish,\nyou can send patches to improve compatibility.\n\n\n## Requirements\n\n- node.js v12.x.\n- ttfautohint v1.8.3.\n\nttfautohint is optional. Fontello will work without it, just don't enable\nhinting option in font settings (it's off by default).\n\n\n## Install\n\nInstall fontello sources & dependencies:\n\n```sh\ngit clone git://github.com/fontello/fontello.git\ncd fontello\nnpm install\n```\n\nIf you plan to rebuild fonts:\n\n```sh\ngit submodule init\ngit submodule update\n```\n\n## Run\n\nStart server:\n\n```sh\n./server.js\n```\n\nThen you can point your browser to the page http://localhost:3000\n\n## Rebuild embedded fonts\n\nAfter you update font sources in `./support` folder, run\n\n```bash\nmake rebuild\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "(The MIT License)\n\nCopyright (C) 2011 by Vitaly Puzrin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.642578125,
          "content": "FONTS         += fontelico.font\nFONTS         += awesome-uni.font\nFONTS         += entypo\nFONTS         += typicons.font\nFONTS         += iconic-uni.font\nFONTS         += modernpics.font\nFONTS         += meteocons.font\nFONTS         += mfglabs.font\nFONTS         += maki.font\nFONTS         += zocial.font\nFONTS         += brandico.font\nFONTS         += elusive.font\nFONTS         += linecons.font\nFONTS         += websymbols-uni.font\nFONT_CONFIGS   = $(foreach f,$(FONTS),src/${f}/config.yml)\n\nFONT_DIR \t\t\t= ./client/lib/embedded_fonts/font\n\nhelp:\n\techo \"make help           - Print this help\"\n\techo \"make dev-server     - Run dev server with autoreleat on files change\"\n\techo \"make rebuild        - Rebuild embedded fonts\"\n\techo \"make lint           - Lint sources with JSHint\"\n\techo \"make gh-pages       - Build and push the project into gh-pages branch\"\n\n\nrebuild:\n\trm -rf $(FONT_DIR)\n\tmkdir -p $(FONT_DIR)\n\t# build single font\n\t./build_embedded_fonts.js \\\n\t\t-i $(foreach f,$(FONTS), ./src/${f}) \\\n\t\t-o $(FONT_DIR)/fontello.svg \\\n\t\t-c lib/embedded_fonts/client_config.js \\\n\t\t-s lib/embedded_fonts/server_config.js\n\n\t# convert to other formats\n\t./node_modules/.bin/svg2ttf \"$(FONT_DIR)/fontello.svg\" \"$(FONT_DIR)/fontello.ttf\"\n\t./node_modules/.bin/ttf2woff \"$(FONT_DIR)/fontello.ttf\" \"$(FONT_DIR)/fontello.woff\"\n\t./node_modules/wawoff/bin/woff2_compress.js \"$(FONT_DIR)/fontello.ttf\" \"$(FONT_DIR)/fontello.woff2\"\n\trm \"$(FONT_DIR)/fontello.ttf\"\n\trm \"$(FONT_DIR)/fontello.svg\"\n\n\nrepl:\n\trlwrap socat ./repl.sock stdin\n\n\nlint:\n\t./node_modules/.bin/eslint .\n\n\ntest: lint\n\t@NODECA_ENV=test NODECA_NOMINIFY=1 ./server.js test\n\n\ntodo:\n\tgrep 'TODO' -n -r ./lib 2>/dev/null || test true\n\n\n\n\n#FONTELLO_HOST ?= https://fontello.com\nFONTELLO_HOST ?= http://localhost:3000\nFONTELLO_DIR  ?= ./client/lib/icons/src\n\n\nfontopen:\n\t@if test ! `which curl` ; then \\\n\t\techo 'Install curl first.' >&2 ; \\\n\t\texit 128 ; \\\n\t\tfi\n\tcurl --silent --show-error --fail --output .fontello \\\n\t\t--form \"config=@${FONTELLO_DIR}/config.json\" \\\n\t\t${FONTELLO_HOST}\n\tx-www-browser ${FONTELLO_HOST}/`cat .fontello`\n\n\nfontsave:\n\t@if test ! `which unzip` ; then \\\n\t\techo 'Install unzip first.' >&2 ; \\\n\t\texit 128 ; \\\n\t\tfi\n\t@if test ! -e .fontello ; then \\\n\t\techo 'Run `make fontopen` first.' >&2 ; \\\n\t\texit 128 ; \\\n\t\tfi\n\trm -rf .fontello.src .fontello.zip\n\tcurl --silent --show-error --fail --output .fontello.zip \\\n\t\t${FONTELLO_HOST}/`cat .fontello`/get\n\tunzip .fontello.zip -d .fontello.src\n\trm -rf ${FONTELLO_DIR}\n\tmv `find ./.fontello.src -maxdepth 1 -name 'fontello-*'` ${FONTELLO_DIR}\n\trm -rf .fontello.src .fontello.zip\n\n\n\n.PHONY: help rebuild dev-setup lint gh-pages todo dev-server repl fontopen\n.SILENT: help rebuild dev-setup lint todo\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7548828125,
          "content": "Fontello - icon font scissors\n=============================\n\n[![CI](https://github.com/fontello/fontello/workflows/CI/badge.svg?branch=master)](https://github.com/fontello/fontello/actions)\n[![Gitter](https://badges.gitter.im/fontello/fontello.svg)](https://gitter.im/fontello/fontello)\n\nwebsite: [fontello.com](https://fontello.com/), help: [wiki](https://github.com/fontello/fontello/wiki/Help)\n\n[![](https://opencollective.com/puzrin/tiers/baker.svg?width=770)](https://opencollective.com/puzrin#category-CONTRIBUTE)\n\nThis tool lets you combine icon webfonts for your own project. With fontello you can:\n\n1. shrink glyph collections, minimizing font size\n2. merge symbols from several fonts into a single file\n3. access large sets of professional-grade open source icons\n\n\n## Developers API\n\nFontello allows easy scripting, to implement different convenient features:\n\n1. Open site from command line, with your configuration, and import edited project\n    - [Makefile example](https://gist.github.com/puzrin/5537065). That's a live working code, used\n      for development of fontello itself.\n2. Writing website plugins, to import/export icons via admin panel.\n\nWhen more examples available, those will be added here.\n\n\n### API methods\n\n1. `POST https://fontello.com/` creates a session with your config and\n   return you `session_id`. You can use it later to open fontello with your configuration\n   and to automatically download your font. Session is stored for 24h. POST params\n   (form-encoded):\n    - `config` - (Required) content of `config.json` for your font\n    - `url` - (Optional) if used, download button will link to your admin panel, where you can\n      run importing script.\n2. `https://fontello.com/[session_id]` - opening fontello with your config preloaded.\n   When you edit font, your config is automatically sent to server\n3. `https://fontello.com/[session_id]/get` - download your font.\n\nNote. When you open site via API url, `download` button will have another text.\n\n\n### Examples\n\n* [Makefile](https://gist.github.com/puzrin/5537065) - quick load iconic font\n  from your project via CLI & save result back.\n* [fontello-cli](https://github.com/paulyoung/fontello-cli) - the same, as above,\n  but written in `node.js`. If you don't like `make` utility, then\n  `fontello-cli` is for you :)\n* [fontello_rails_converter](https://github.com/railslove/fontello_rails_converter) - Ruby CLI gem for interacting with the API.  Additional features (Sass conversion) for Rails integration, but should work for every project.\n* [grunt-fontello](https://github.com/jubalm/grunt-fontello) - lightweight integration with grunt\n\n## Authors\n\n- Roman Shmelev ([shmelev](https://github.com/shmelev)).\n- Vitaly Puzrin ([puzrin](https://github.com/puzrin)).\n- Aleksey Zapparov ([ixti](https://github.com/ixti)).\n- Evgeny Shkuropat ([shkuropat](https://github.com/shkuropat)).\n- Vladimir Zapparov ([dervus](https://github.com/dervus)).\n- Alex Kocharin ([rlidwka](https://github.com/rlidwka)).\n\nThanks to:\n\n- [Werner Lemberg](https://github.com/lemzwerg) for help with ttfautohint.\n- [Hermanto Lim](https://github.com/nackle2k10) for the image.\n\n\n## License\n\nFontello's code (all files, except fonts) is distributed under MIT license. See\n[LICENSE](https://github.com/fontello/fontello/blob/master/LICENSE) file for details.\n\nEmbedded fonts are distributed under their primary licenses (SIL OFL / CC BY / CC BY-SA).\nSee fonts info on fontello website for credits & links to homepages. This info is also\nincluded in generated font archives for your convenience (see LICENSE.txt file).\n\nGenerated fonts are intended for web usage, and should not be\nconsidered/distributed as independent artwork. Consider fontello a\n\"font archiver\" and credit original font creators according to their respective license.\n\nCrediting fontello is not required :)\n"
        },
        {
          "name": "build_embedded_fonts.js",
          "type": "blob",
          "size": 6.28515625,
          "content": "#!/usr/bin/env node\n\n\n'use strict';\n\nvar fs        = require('fs');\nvar path      = require('path');\nvar _         = require('lodash');\nvar yaml      = require('js-yaml');\nvar Domparser      = require('xmldom').DOMParser;\nvar ArgumentParser = require('argparse').ArgumentParser;\nvar SvgPath   = require('svgpath');\n\n\nvar svgFontTemplate = _.template(\n    '<?xml version=\"1.0\" standalone=\"no\"?>\\n' +\n    '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n    '<svg xmlns=\"http://www.w3.org/2000/svg\">\\n' +\n    '<metadata><%= metadata %></metadata>\\n' +\n    '<defs>\\n' +\n    '<font id=\"<%= font.fontname %>\" horiz-adv-x=\"<%= fontHeight %>\" >\\n' +\n\n    '<font-face' +\n      ' font-family=\"font.familyname\"' +\n      ' font-weight=\"400\"' +\n      ' font-stretch=\"normal\"' +\n      ' units-per-em=\"<%= fontHeight %>\"' +\n      //panose-1=\"2 0 5 3 0 0 0 0 0 0\"\n      ' ascent=\"<%= font.ascent %>\"' +\n      ' descent=\"<%= font.descent %>\"' +\n      //bbox=\"-1.33333 -150.333 1296 850\"\n      //underline-thickness=\"50\"\n      //underline-position=\"-100\"\n      //unicode-range=\"U+002B-1F6AB\"\n    ' />\\n' +\n\n    '<missing-glyph horiz-adv-x=\"<%= fontHeight %>\" />\\n' +\n\n    '<% _.forEach(glyphs, function(glyph) { %>' +\n      '<glyph' +\n        ' glyph-name=\"<%= glyph.css %>\"' +\n        ' unicode=\"<%= glyph.unicode %>\"' +\n        ' d=\"<%= glyph.d %>\"' +\n        ' horiz-adv-x=\"<%= glyph.width %>\"' +\n      ' />\\n' +\n    '<% }); %>' +\n\n    '</font>\\n' +\n    '</defs>\\n' +\n    '</svg>'\n  );\n\n\nfunction parseSvgImage(data, filename) {\n\n  var doc = (new Domparser()).parseFromString(data, 'application/xml');\n  var svg = doc.getElementsByTagName('svg')[0];\n\n  if (!svg.hasAttribute('height')) {\n    throw filename ? 'Missed height attribute in ' + filename : 'Missed height attribute';\n  }\n  if (!svg.hasAttribute('width')) {\n    throw filename ? 'Missed width attribute in ' + filename : 'Missed width attribute';\n  }\n\n  var height = svg.getAttribute('height');\n  var width  = svg.getAttribute('width');\n\n  // Silly strip 'px' at the end, if exists\n  height = parseFloat(height);\n  width  = parseFloat(width);\n\n  var path = svg.getElementsByTagName('path');\n\n  if (path.length > 1) {\n    throw 'Multiple paths not supported' + (filename ? ' (' + filename + ' ' : '');\n  }\n  if (path.length === 0) {\n    throw 'No path data fount' + (filename ? ' (' + filename + ' ' : '');\n  }\n\n  path = path[0];\n\n  var d = path.getAttribute('d');\n\n  var transform = '';\n\n  if (path.hasAttribute('transform')) {\n    transform = path.getAttribute('transform');\n  }\n\n  return { height, width, d, transform };\n}\n\n\nvar parser = new ArgumentParser({\n  addHelp: true,\n  description: 'Fontello internal tool. Join multiple fonts to single one and create JS configs for processing'\n});\nparser.addArgument([ '-i', '--input_fonts' ], { help: 'Input fonts paths', required: true, nargs : '+' });\nparser.addArgument([ '-o', '--output' ], { help: 'Output font file path', required: true });\nparser.addArgument([ '-c', '--output_client' ], { help: 'Output client config path' });\nparser.addArgument([ '-s', '--output_server' ], { help: 'Output server config path' });\n\nvar args = parser.parseArgs();\n\n\n// server config, to build svg fonts\n// contains uid hash + svg paths, to generate font quickly\nvar configServer = {\n  uids  : {},\n  fonts : {},\n  metas : {}\n};\n\n// client config\n// - glyphs, splitted by font\n// - font info\nvar configClient = [];\n\n// Counter\nvar internalCode = 0xF000;\n\n////////////////////////////////////////////////////////////////////////////////\n\n//\n// Scan sources\n//\n\n_.forEach(args.input_fonts, function (fontDir) {\n  // Iterate each font\n  var cfg = yaml.load(fs.readFileSync(path.resolve(fontDir, 'config.yml'), 'utf8'));\n\n  // push font info to server config\n  configServer.fonts[cfg.font.fontname] = _.clone(cfg.font, true);\n  configServer.metas[cfg.font.fontname] = _.clone(cfg.meta, true);\n\n  // push font info to client item config\n  var client_font_info = {\n    glyphs  : [],\n    font    : _.clone(cfg.font, true),\n    meta    : _.clone(cfg.meta, true)\n  };\n\n  // iterate glyphs\n  _.forEach(cfg.glyphs, function (glyph) {\n\n    if (configServer.uids[glyph.uid]) {\n      /*eslint-disable no-console*/\n      console.log('Duplicated uid \"' + glyph.uid + '\"in ' + fontDir);\n      process.exit(1);\n    }\n\n    // Cleanup fields list\n    var glyph_data = _.pick(glyph, [ 'css', 'code', 'uid', 'search', 'css-ext' ]);\n\n    // Add char code in joined (embedded) font\n    glyph_data.charRef = internalCode;\n    internalCode++;\n\n    // Push cloned copy to client config\n    client_font_info.glyphs.push(_.clone(glyph_data, true));\n\n    // Add more data for server config\n    glyph_data.fontname = cfg.font.fontname;\n\n    glyph_data.svg = {};\n\n    // load file & translate coordinates\n    var file_name = path.join(fontDir, 'src', 'svg', glyph_data.css + '.svg');\n    var svg = parseSvgImage(fs.readFileSync(file_name, 'utf8'), file_name);\n\n    // FIXME: Apply transform from svg file. Now we understand\n    // pure paths only.\n    var scale = 1000 / svg.height;\n\n    glyph_data.svg.width = +(svg.width * scale).toFixed(1);\n    glyph_data.svg.d = new SvgPath(svg.d)\n                            .scale(scale)\n                            .abs().round(1).rel()\n                            .toString();\n\n    configServer.uids[glyph.uid] = _.clone(glyph_data, true);\n  });\n\n  configClient.push(client_font_info);\n});\n\n//\n// Write out configs\n//\n\nfs.writeFileSync(args.output_client, 'module.exports = ' + JSON.stringify(configClient, null, 2), 'utf8');\nfs.writeFileSync(args.output_server, 'module.exports = ' + JSON.stringify(configServer, null, 2), 'utf8');\n\n//\n// Prepare SVG structures & write font file\n//\n\nvar font = {\n  fontname: 'fontello',\n  familyname: 'fontello',\n  ascent: 850,\n  descent: -150\n};\n\nvar glyphs = [];\n\n_.forEach(configServer.uids, function (glyph) {\n  glyphs.push({\n    heigh : glyph.svg.height,\n    width : glyph.svg.width,\n    d     : new SvgPath(glyph.svg.d)\n                  .scale(1, -1)\n                  .translate(0, 850)\n                  .abs().round(0).rel()\n                  .toString(),\n    css   : glyph.uid,\n    unicode : '&#x' + glyph.charRef.toString(16) + ';'\n  });\n});\n\nvar svgOut = svgFontTemplate({\n  font,\n  glyphs,\n  metadata: 'internal font for fontello.com website',\n  fontHeight : font.ascent - font.descent\n});\n\nfs.writeFileSync(args.output, svgOut, 'utf8');\n"
        },
        {
          "name": "bundle.yml",
          "type": "blob",
          "size": 0.41015625,
          "content": "bundles:\n  fontello:\n    - fontello\n\n  lib:\n    - lib\n\npackages:\n  fontello:\n    depends:\n      - lib\n\n    entries:\n      - client/fontello\n      - server/fontello\n\n  lib:\n    entries:\n      client/lib\n\n    vendor:\n      - lodash\n      - jquery\n      - event-wire\n      - babelfish\n      - knockout\n      # template helpers\n      - pug-runtime\n      # reuse global bug.js from the loader\n      - bagjs: ./lib/app/bag.js\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "embed.svgo.yml",
          "type": "blob",
          "size": 1.0498046875,
          "content": "#\n# Temporary solution, until SVGO api finished\n#\n# Transform image coordinates to font coordinates\n#\n\n\n# replace default config\nfull: true\n\nplugins:\n\n  - removeDoctype\n  - removeXMLProcInst\n  - removeComments\n  - removeMetadata\n  - removeEditorsNSData\n  - cleanupAttrs\n  - convertStyleToAttrs\n  - removeRasterImages\n  - cleanupNumericValues\n  - convertColors\n  - removeUnknownsAndDefaults\n  - removeNonInheritableGroupAttrs\n  - removeUselessStrokeAndFill\n  - removeViewBox\n  - cleanupEnableBackground\n  - removeHiddenElems\n  - removeEmptyText\n  - moveElemsAttrsToGroup\n  - collapseGroups\n  - moveGroupAttrsToElems\n  - convertTransform\n  - convertPathData:\n\n      applyTransforms: true\n      curveSmoothShorthands: true\n      removeUseless: true\n      collapseRepeated: true\n      leadingZero: true\n      negativeExtraSpace: true\n\n      # override defaults            \n      floatPrecision: 0\n      straightCurves: false\n      lineShorthands: false\n\n  - removeEmptyAttrs\n  - removeEmptyContainers\n  - mergePaths\n  - cleanupIDs\n  - removeUnusedNS\n  #- transformsWithOnePath:\n\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.2333984375,
          "content": "{\n  \"name\": \"fontello\",\n  \"version\": \"6.0.0\",\n  \"description\": \"Iconic fonts scissors\",\n  \"keywords\": [\n    \"icon\",\n    \"font\",\n    \"editor\"\n  ],\n  \"homepage\": \"https://fontello.com/\",\n  \"contributors\": [\n    \"Roman I Shmelev (https://github.com/shmelev)\",\n    \"Aleksey Zapparov (https://github.com/ixti)\",\n    \"Vitaly Puzrin (https://github.com/puzrin)\",\n    \"Vladimir Zapparov (https://github.com/dervus)\"\n  ],\n  \"license\": \"MIT\",\n  \"repository\": \"fontello/fontello\",\n  \"scripts\": {\n    \"test\": \"make test\"\n  },\n  \"dependencies\": {\n    \"@babel/core\": \"^7.14.6\",\n    \"@babel/preset-env\": \"^7.14.5\",\n    \"@popperjs/core\": \"^2.9.2\",\n    \"argparse\": \"^2.0.1\",\n    \"autoprefixer\": \"^10.2.6\",\n    \"babelfish\": \"^2.0.0\",\n    \"babelify\": \"^10.0.0\",\n    \"bagjs\": \"^3.0.0\",\n    \"base64-js\": \"^1.5.1\",\n    \"bluebird\": \"^3.7.2\",\n    \"bootstrap\": \"~5.1.3\",\n    \"browser-pack\": \"^6.1.0\",\n    \"browserify\": \"^17.0.0\",\n    \"cacheify\": \"^0.4.2\",\n    \"clean-css\": \"^5.1.2\",\n    \"compression\": \"^1.7.4\",\n    \"cookie\": \"^0.4.1\",\n    \"corejs-typeahead\": \"^1.3.1\",\n    \"ejs\": \"^3.1.6\",\n    \"email-regex\": \"^4.0.0\",\n    \"event-wire\": \"^4.0.0\",\n    \"glob\": \"^7.1.6\",\n    \"is-my-json-valid\": \"^2.20.5\",\n    \"javascript-state-machine\": \"^2.4.0\",\n    \"jquery\": \"^3.6.0\",\n    \"js-yaml\": \"^4.1.0\",\n    \"jstransformer-stylus\": \"^1.5.0\",\n    \"jszip\": \"^3.6.0\",\n    \"knockout\": \"~ 3.5.1\",\n    \"level\": \"^7.0.0\",\n    \"level-exists\": \"^3.0.0\",\n    \"level-ttl\": \"^3.1.1\",\n    \"lodash\": \"^4.17.21\",\n    \"log4js\": \"^6.3.0\",\n    \"mdurl\": \"^1.0.1\",\n    \"mkdirp\": \"^1.0.4\",\n    \"multiparty\": \"^4.2.2\",\n    \"negotiator\": \"^0.6.2\",\n    \"node-sass\": \"^7.0.1\",\n    \"pako\": \"^2.0.3\",\n    \"pointer\": \"^1.0.2\",\n    \"postcss\": \"^8.3.5\",\n    \"pug\": \"^3.0.2\",\n    \"pug-runtime\": \"^3.0.1\",\n    \"puncher\": \"^1.1.1\",\n    \"raw-body\": \"^2.4.1\",\n    \"resolve\": \"^1.20.0\",\n    \"rimraf\": \"^3.0.2\",\n    \"send\": \"^0.17.1\",\n    \"serialize-error\": \"^8.1.0\",\n    \"stylus\": \"^0.56.0\",\n    \"svg2ttf\": \"^6.0.2\",\n    \"svgpath\": \"^2.3.1\",\n    \"terser\": \"^5.7.0\",\n    \"ttf2eot\": \"^3.0.0\",\n    \"ttf2woff\": \"^3.0.0\",\n    \"wawoff2\": \"^2.0.0\",\n    \"write-file-atomic\": \"^4.0.1\",\n    \"@xmldom/xmldom\": \"^0.8.0\"\n  },\n  \"devDependencies\": {\n    \"eslint\": \"^8.8.0\",\n    \"mocha\": \"^9.0.1\",\n    \"supertest\": \"^6.1.3\"\n  },\n  \"browserslist\": \"defaults, not ie 11\"\n}\n"
        },
        {
          "name": "root",
          "type": "tree",
          "content": null
        },
        {
          "name": "server.js",
          "type": "blob",
          "size": 0.2041015625,
          "content": "#!/usr/bin/env node\n\n\n'use strict';\n\n\nexports.root = __dirname;\nexports.init = function (N) { require('./lib/autoload.js')(N); };\n\n\nif (!module.parent) {\n  require('./lib/system/runner').bootstrap(exports);\n}\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}