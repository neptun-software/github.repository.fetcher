{
  "metadata": {
    "timestamp": 1736562797926,
    "page": 351,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sandstorm-io/sandstorm",
      "stars": 6787,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.5517578125,
          "content": "bin\ntmp\nnode_modules\nshell/sandstorm-shell.config\nshell/sandstorm-shell.creator\nshell/sandstorm-shell.creator.user\nshell/sandstorm-shell.files\nshell/sandstorm-shell.includes\nshell/public/edit.png\nshell/public/trash.png\nshell/public/wrench.png\nshell/public/download.png\nshell/public/restart.png\nwebsite/sandstorm.io.config\nwebsite/sandstorm.io.creator\nwebsite/sandstorm.io.creator.user\nwebsite/sandstorm.io.files\nwebsite/sandstorm.io.includes\nshell-build\nshell-bundle\nbundle\n.docker\n.shell-env\n.vagrant\nshell/packages/*/.build\ntests/node_modules\nshell/.meteor/local\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8994140625,
          "content": "bin\ntmp\nnode_modules\nmeteor-spk-*\n.meteor-spk\nshell/imports/client/changelog.html\nshell/client/styles/_icons.scss\nshell/sandstorm-shell.config\nshell/sandstorm-shell.creator\nshell/sandstorm-shell.creator.user\nshell/sandstorm-shell.files\nshell/sandstorm-shell.includes\nshell/public/appmarket.svg\nshell/public/apps.svg\nshell/public/battery.svg\nshell/public/bug.svg\nshell/public/close.svg\nshell/public/close-FFFFFF.svg\nshell/public/debug.svg\nshell/public/download.svg\nshell/public/down.svg\nshell/public/install.svg\nshell/public/install-*.svg\nshell/public/key.svg\nshell/public/ldap.svg\nshell/public/menu.svg\nshell/public/notification.svg\nshell/public/open-grain.svg\nshell/public/openid-color.svg\nshell/public/openid.svg\nshell/public/plus-*.svg\nshell/public/question-*.svg\nshell/public/restart.svg\nshell/public/restore.svg\nshell/public/restore-*.svg\nshell/public/settings.svg\nshell/public/share.svg\nshell/public/source.svg\nshell/public/trash.svg\nshell/public/upload.svg\nshell/public/upload-*.svg\nshell/public/up.svg\nshell/public/web.svg\nshell/public/copy.svg\nshell/public/email.svg\nshell/public/link.svg\nshell/public/people.svg\nshell/public/search.svg\nshell/public/github-color.svg\nshell/public/github.svg\nshell/public/google-color.svg\nshell/public/google.svg\nshell/public/troubleshoot.svg\nshell/public/email-494949.svg\nshell/public/*-m.svg\nshell/public/sandstorm-icons\nshell/public/icons/icons-*.eot\nshell/public/icons/icons-*.ttf\nshell/public/icons/icons-*.svg\nshell/public/icons/icons-*.woff\nshell-build\nsandstorm-*.tar.xz\nsandstorm-*.tar.xz.sig\nsandstorm-*.tar.xz.update-sig\ninstall.sh.sig\nbundle/\n.docker\n.shell-env\n.vagrant/\nselenium-debug.log\ntests/downloads\ntests/assets/*\ntests/nightwatch.tmp.json\ntests/screenshots/\ntests/sandstorm-tests.config\ntests/sandstorm-tests.creator\ntests/sandstorm-tests.creator.user\ntests/sandstorm-tests.files\ntests/sandstorm-tests.includes\ntests/tmp-sandstorm\napp-index.spk\ntest-app.spk\ndeps/llvm-build\n\n.vscode\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.7021484375,
          "content": "[submodule \"deps/capnproto\"]\n\tpath = deps/capnproto\n\turl = https://github.com/capnproto/capnproto.git\n[submodule \"deps/ekam\"]\n\tpath = deps/ekam\n\turl = https://github.com/sandstorm-io/ekam.git\n[submodule \"deps/libseccomp\"]\n\tpath = deps/libseccomp\n\turl = https://github.com/seccomp/libseccomp.git\n[submodule \"deps/libsodium\"]\n\tpath = deps/libsodium\n\turl = https://github.com/jedisct1/libsodium.git\n[submodule \"deps/node-capnp\"]\n\tpath = deps/node-capnp\n\turl = https://github.com/capnproto/node-capnp.git\n[submodule \"deps/boringssl\"]\n\tpath = deps/boringssl\n\turl = https://boringssl.googlesource.com/boringssl\n[submodule \"deps/clang\"]\n\tpath = deps/clang\n\turl = https://chromium.googlesource.com/chromium/src/tools/clang.git\n"
        },
        {
          "name": ".well-known",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 92.3076171875,
          "content": "### v0.308 (2023-08-06)\n- Added Russian-language localization. (Thanks @troyjfarrell.)\n- Fixed broken links to the app market. (Thanks @zenhack. RIP.)\n\n### v0.307 (2023-02-05)\n- The signing key for the Wordpress app has been rolled to transfer maintainership to @ocdtrekkie, since the previous maintainers had not updated it in many years. @ocdtrekkie has been a core Sandstorm project member for several years and plans to push an update to this app.\n- install.sh has been updated to no longer fail if there hasn't been a new release in the last 30 days. Future releases will be on an as-needed basis instead of monthly.\n\n### v0.306 (2023-01-11)\n- Fixed bug where app updates could not be turned off in the admin panel. (Thanks @zenhack.)\n- Clarified error log message when receiving email to an unknown address. (Thanks @jdougan.)\n\n### v0.305 (2022-12-12)\n- Rolled back Cap'n Proto update due to some reports of broken apps.\n\n### v0.304 (2022-12-10)\n- Cap'n Proto has had several internal optimizations. We don't expect a significant impact on Sandstorm but let us know if there's any fishy behavior changes.\n\n### v0.303 (2022-11-12) [bugfixes]\n- The experimental new (not on by default) seccomp filter has been updated to support many more apps. (Thanks @zenhack.)\n\n### v0.302 (2022-10-12) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.301 (2022-09-10) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.300 (2022-08-14)\n- Package downloads will no longer buffer in memory as they are being unpacked. (Thanks @zenhack.)\n- Updated outdated \"G Suite\" and \"Google Apps for Work\" to Google's latest rebrand, \"Google Workspace\". No doubt these will all be outdated again in another month. (Thanks @ocdtrekkie.)\n- Offer token iframes can now specify the foreground color. (Thanks @zenhack.)\n- In `ALLOW_LEGACY_RELAXED_CSP=false` mode, we now ask the browser to block WebRTC, using a new CSP standard that browsers don't support yet. (Thanks @zenhack.)\n\n### v0.299 (2022-07-09) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.298 (2022-06-11)\n- Removed old team photos and Indiegogo contributors from /about page. It's been 8 years since the campaign and 5 years since the team disbanded so this page was feeling pretty awkward. (Thanks @ocdtrekkie.)\n\n### v0.297 (2022-05-13) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.296 (2022-04-10) [bugfixes]\n- Fixed \"Operation not permitted\" error when running without root privileges on newer kernels. Most people install Sandstorm as root, but for those that don't, a \"security fix\" in kernel 5.12 which was backported to some older kernels broke Sandstorm. (Thanks @zenhack.)\n\n### v0.295 (2022-03-13) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.294 (2022-02-12) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.293 (2022-01-16) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.292 (2021-12-19)\n- Increased size of close-grain button on mobile. (Thanks @zenhack.)\n\n### v0.291 (2021-11-21)\n- Added a backup button to the grain list, so you don't have to open the grain before downloading a backup. (Thanks @zenhack.)\n- Updated icon font generator to modern code (it had been stuck on an old version for a while). Please report if any icons look wrong. (Thanks @griff.)\n\n### v0.290 (2021-10-23)\n- The installer now supports many more options in non-interactive mode. [More info in the docs.](https://docs.sandstorm.io/en/latest/administering/install-script/) (Thanks @garrison.)\n- Some places which had hard-coded apps.sandstorm.io as the app market URL have now been fixed to use the app market configured by the server administrator. (Thanks @gischer.)\n- Sandstorm now sets the header `Referrer-Policy: same-origin` when serving app UIs, so that clicking on a link from an app does not leak the app's randomly-generated hostname to the destination server. (Thanks @garrison.)\n\n### v0.289 (2021-10-02)\n- Reverted Meteor to 2.3.5. Meteor 2.4 crashes on startup when used on older Sandstorm installations, due to a conflict in the way Meteor used to create Mongo indexes long ago vs. the way it does in Meteor 2.4. https://github.com/meteor/meteor/issues/11666\n\n### v0.288 (2021-10-02)\n- Meteor updated to 2.4, a major release.\n\n### v0.287 (2021-09-04)\n- Meteor updated to 2.3, a major release. This also means Node.js was updated from 12 to 14.\n- Added support for more owncloud/nextcloud client headers. (Thanks @mnutt.)\n\n### v0.286 (2021-08-07) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.285 (2021-07-10)\n- Added support for passing Let's Encrypt challenges using PowerDNS, using the `acme-dns-01-powerdns` npm module. (Thanks @ocdtrekkie.)\n- Set security headers to prevent apps from using service workers. Unfortunately, service workers could be used by a malicious app to remove other security headers that make up part of the Sandstorm sandbox. We are not aware of any app using service workers today, and it seems like they would not work well under Sandstorm anyawy. (Thanks @zenhack.)\n\n### v0.284 (2021-06-12)\n- Added new \"grain settings\" UI. (Thanks @zenhack.)\n- Sandstorm now automatically sends headers to opt out of Google's FLoC. (Thanks @zenhack.)\n\n### v0.283 (2021-05-15) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.282 (2021-04-17)\n- A new, tighter seccomp filter can optionally be enabled. If all goes well, we will probably make it the default in the future. (Thanks @zenhack.)\n- Meteor updated to 2.2, a major release.\n\n### v0.281 (2021-03-20)\n- Extended seccomp filter to block some newer system calls. (Thanks @zenhack.)\n- Meteor updated to 2.1, a major release.\n\n### v0.280 (2021-02-21) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.279 (2021-01-23)\n- Extended `startSharing` `postMessage` API to allow a path (within the grain) to be appended to the sharing URL, so that users of the URL land on that path. (Thanks @troyjfarrell.)\n- Improved error behavior when given an invalid API token. (Thanks @zenhack.)\n- Meteor updated to 2.0, a major release.\n\n### v0.278 (2020-12-26)\n- Fix broken setup wizard.\n\n### v0.277 (2020-12-19)\n- Added OpenID Connect login provider. (Thanks @rs22.)\n- Fixed an re-landed static publishing change from 0.275 that had been reverted in 0.276. (Thanks @zenhack.)\n- Sandstorm now serves source maps (for its main UI) to make client-side debugging easier. (Thanks @zenhack.)\n- Meteor updated to 1.12, a major release.\n\n### v0.276 (2020-11-23)\n- Reverted broken static publishing change.\n\n### v0.275 (2020-11-22)\n- When an app uses static publishing, symlinks placed in the publish directory are no longer allowed to point outside that directory. This could hypothetically have been a security issue if an app allowed a non-trusted user to instruct it to publish symlinks, but we're not aware of any current apps that do this. Only the app's own data was at risk, not the system. (Thanks @zenhack.)\n- Removed implementation of `httpGet()` method of `HackSessionContext`. This has been disabled for some time, with the ability to re-enable it through a hidden setting, but no one has asked us for the hidden setting, so we believe this feature is no longer in use. Apps must now use powerbox requests to get permission to make HTTP requests. (Thanks @zenhack.)\n- Updated Dutch translation. (Thanks @m-burg.)\n\n### v0.274 (2020-10-26)\n- Fixed regression that broke downloading backups for some Linux kernel versions. Unfortunately, these versions do not support cgroup freezing and so will not get atomic backups.\n\n### v0.273 (2020-10-24)\n- Extended Let's Encrypt automatic certificate renewal to support deSEC DNS. (Thanks @rs22.)\n- Grains will now be temporarily paused while creating backups, to ensure the backup is atomic. (Thanks @zenhack.)\n- Updated Simplified Chinese translation. (Thanks @misaka00251.)\n- Fixed bug in sandstorm-http-bridge when responding to HEAD requests. Apps will need to be re-packaged to get the update. (Thanks @zenhack.)\n- Fixed \"Unhandled exception in Promise:  TypeError: Cannot read property 'catch' of undefined\" when using scheduled tasks. (Thanks @zenhack.)\n\n### v0.272 (2020-09-26)\n- Regular dependency updates.\n- To make porting apps a little easier, the headers `X-CSRFToken` and `X-CSRF-Token` are now automatically passed through to the app. Thanks @zenhack.\n\n### v0.271 (2020-08-31)\n- We have reverted the change preventing apps from talking to third-party servers in client-side code. This caused more breakage than was expected. We will work to fix and/or grandfather the affected apps before trying to roll this out again.\n\n### v0.270 (2020-08-29)\n- Apps can no longer talk to third-party servers in client-side code, except for embedding images and video. This has long been a goal of Sandstorm, but we did not want to begin enforcing it until apps could explicitly request access to third-party servers via the Powerbox. We have tested all apps on the app market and found only minor breakage (e.g. wrong fonts), but it is possible that we missed bigger breakages or that some private apps are broken. Please contact [sandstorm-dev](https://groups.google.com/group/sandstorm-dev) to report any issues. Thanks @zenhack for pushing this change through.\n- Apps can no longer make server-side HTTP requests without requsting permission through the Powerbox. We believe the only app that ever did so was Tiny Tiny RSS, but it was recently updated to use the powerbox. If you experience other app breakages, please let [sandstorm-dev](https://groups.google.com/group/sandstorm-dev) know. Thanks again to @zenhack.\n- Updated Finnish translation. Thanks @xet7.\n- Updated dependencies, including Meteor to 1.11.\n\n### v0.269 (2020-08-01)\n- You can now clone a grain via a button in the top bar. Thanks @zenhack.\n- Grains now run inside cgroups, if the kernel supports cgroup namespaces and cgroups v2. Thanks @zenhack.\n- Code implementing old Sandcats TLS issuance has been deleted. Sandcats now supports only Let's Encrypt.\n\n### v0.268 (2020-07-04)\n- Added CLI commands for configuring ACME (Let's Encrypt), so that this can be done before HTTPS is working.\n- New installs using Sandcats will now use Let's Encrypt immediately.\n- Improved error page when accessing Sandstorm using an unrecognized hostname. Thanks @zenhack.\n- Added Google Cloud Platform DNS provider for ACME challenges (not to be confused with Google Domains). Thanks @abliss.\n- Updated Sandstorm RPC APIs to use Cap'n Proto streaming flow control where applicable.\n- The box showing the changelog is now taller. Thanks @ocdtrekkie.\n- Made navigation menu scrollable on mobile. Thanks @spollard.\n\n### v0.267 (2020-06-06)\n- Fix possible problem where Let's Encrypt auto-migration would not actually renew the certificate until Sandstorm was restarted.\n\n### v0.266 (2020-06-06)\n- Sandcats domains using SSL will automatically migrate to Let's Encrypt over the next two weeks.\n- Dependency updates, refactorings, and minor bugfixes.\n\n### v0.265 (2020-05-09)\n- Fixed regression preventing first-time LDAP logins.\n- Dependency updates, refactorings, and minor bugfixes.\n\n### v0.264 (2020-05-05)\n- Fixed breakage in login providers admin panel and setup wizard caused by recent refactoring.\n\n### v0.263 (2020-05-02)\n- Added support for built-in TLS (aka SSL) certificate management through Let's Encrypt! This works with any domain, as long as you use one of the supported DNS providers (Sandcats.io, Cloudflare, Digital Ocean, DNSimple, Duck DNS, GoDaddy, Gandi, Namecheap, Name.com, AWS Route 53, or Vultr). Support for Let's Encrypt and all these providers was made possible via [the ACME.js library](https://git.rootprojects.org/root/acme.js) by AJ ONeal / Root.\n- Added a UI to manage TLS certificates, including the ability to manually upload them.\n- Dependency updates, refactorings, and minor bugfixes.\n\n### v0.262 (2020-04-11)\n- Updated dependencies, including Meteor to 1.10.1.\n- `shm_open()` and friends can now be used in Sandstorm app sandboxes (because `/dev/shm` is now created as a temporary directory). Thanks @zenhack.\n- `spk dev` now displays the server's URL for convenience. Thanks @zenhack.\n- Sandstorm now publishes a `robots.txt` blocking all robots. Thanks @zenhack.\n- Lots of internal refactoring by @zenhack and @zarvox.\n- A new postMessage-based endpoint allows a grain to get its own title. Thanks @zenhack.\n\n### v0.261 (2020-03-15)\n- Updated dependencies, including Meteor to 1.9.3 and Node.js to 12.16.1 (both major updates).\n- New \"AppHooks\" feature in sandstorm-http-bridge allows bridge-based apps to get access to more low-level Cap'n Proto APIs. Contributed by Ian \"@zenhack\" Denhardt.\n- Fixed a bug in `spk dev` that often made Go-based servers crash when accessing disk files. (This problem only occurred in dev mode.)\n- Updated Dutch (thanks @FreekDankelman) and Simplied Chinese translation (thanks @misaka00251).\n- Significant internal refactoring.\n\n### v0.260 (2020-02-15)\n- Updated dependencies.\n- Internationalized \"mass transfers\" page, and translated to Finnish. Thanks to Laurie \"xet7\" Ojansivu for this change.\n- Tweaked systemd unit file (only affects new installs).\n- Typo fixes.\n- Many documentation improvements (on [docs.sandstorm.io](https://docs.sandstorm.io)).\n\n### v0.259 (2020-02-01)\n- Disabled ability to upgrade demo accounts to full accounts on private servers, so that we can change the Sandstorm demo over to run on Alpha.\n- This version will be skipped by auto-update since this update is only needed on Sandstorm Alpha.\n\n### v0.258 (2020-02-01)\n- Updated demo sidebar language to reflect Oasis shutdown.\n- This version will be skipped by auto-update since this update is only needed on Sandstorm Alpha.\n\n### v0.257 (2020-01-19)\n- New feature: Apps can now schedule background tasks. Thanks to Ian \"zenhack\" Denhardt for completing this feature (originally started by David Renshaw).\n- Improved code that matches HTTP API powerbox requests against known OAuth APIs, especially GitHub (credit again to Ian Denhardt).\n\n### v0.256 (2019-12-25) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.255 (2019-11-23) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.254 (2019-10-27) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.253 (2019-09-28)\n- Oasis: Added warnings to the UI and invoice e-mails regarding the upcoming shutdown of Oasis.\n- Updated dependencies.\n\n### v0.252 (2019-09-08)\n- Fixed bug introduced in 0.251 causing development apps registered via `spk dev` to report \"This grain's app package is not installed\".\n\n### v0.251 (2019-09-02)\n- Added functionality to allow mass transferring of grains between servers. Click the \"Mass transfer...\" button above the grains list to initiate a transfer.\n- Updated dependencies.\n\n### v0.250 (2019-08-10)\n- Fixed multiple problems where a user who has access to a grain might unexpectedly be assigned an all-new identity within the grain, especially after backup/restore. This should make it more practical to move shared grains between servers using backup/restore. [See the pull request for a complete explanation.](https://github.com/sandstorm-io/sandstorm/pull/3148)\n- Updated dependencies.\n\n### v0.249 (2019-07-10) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.248 (2019-06-09) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.247 (2019-05-11) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.246 (2019-04-13) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.245 (2019-03-16) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.244 (2019-02-09) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.243 (2019-01-12) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.242 (2018-12-20) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.241 (2018-11-19) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.240 (2018-10-20) [bugfixes]\n- Updated dependencies.\n- Added some clarification messages to Oasis UI regarding the [recent discontinuation of the free plan](https://sandstorm.io/news/2018-08-27-discontinuing-free-plan).\n\n### v0.239 (2018-09-22)\n- Updated dependencies.\n- Prepared Oasis payments code for [upcoming change to discontinue free plan](https://sandstorm.io/news/2018-08-27-discontinuing-free-plan). (Does not affect self-hosted servers.)\n\n### v0.238 (2018-08-25) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.237 (2018-07-28) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.236 (2018-06-30) [bugfixes]\n- Updated dependencies.\n- Fixed static web hosting redirects when the URL is a directory. The redirect is supposed to add '/', but previously it would sometimes redirect to a completely wrong path for directories more than one level deep.\n- Fixed language detection no longer working, due to Meteor 1.7 randomly removing a function call.\n\n### v0.235 (2018-06-09) [bugfixes]\n- Updated dependencies.\n- Due to Meteor 1.7 update, Sandstorm shell now serves different JavaScript to modern vs. \"legacy\" browsers, with the modern JS being leaner and faster.\n\n### v0.234 (2018-05-12) [bugfixes]\n- Updated dependencies. (No other changes.)\n\n### v0.233 (2018-04-17) [bugfixes]\n- Fixed gateway crash affecting some heavy users of static publishing.\n\n### v0.232 (2018-04-15) [bugfixes]\n- Applied Node patch to fix upstream problem causing segfaults for Meteor apps.\n- Fixed crash in Gateway due to accidentally destroying a running promise.\n- Removed accidental debug logging code introduced in 0.231 that printed \"hi\" and \"ho\" to the logs.\n\n### v0.231 (2018-04-07) [bugfixes]\n- Fixed grain last-used time sometimes not updating. (Specifically, it would only update after being open for a full minute.)\n- Fixed old, deprecated shared-host API endpoint not returning a 401 status to initiate basic auth. It has been years since Sandstorm generated API tokens using this endpoint, though.\n- Updated dependencies.\n\n### v0.230 (2018-03-10) [bugfixes]\n- Fixed language detection no longer working.\n- Fixed bug preventing Thunderbird from syncing from Radicale, and prevented older versions of the Mercurial client from pushing to Mercurial.\n- Fixed bug where large downloads from a grain (including streaming audio from Groove Basin) would get cut off after 90-180 seconds if the user wasn't otherwise interacting with the grain.\n- Updated Meteor to 1.6.1.\n\n### v0.229 (2018-03-05) [bugfixes]\n- Fixed Rocket.Chat mobile app, which relies on the ability to authenticate WebSockets on the API endpoint by placing the authorization token in the URL.\n- Fixed broken server when `BASE_URL` overlaps with `WILDCARD_HOST`.\n\n### v0.228 (2018-03-04) [bugfixes]\n- Fixed Tiny Tiny RSS mobile app no longer being able to connect to servers.\n- Fixed problem where in mobile app configuration for various apps, after one minute the URL and password would be replaced with an error message.\n- Fixed some error log spam.\n\n### v0.227 (2018-03-03) [bugfixes]\n- Fixed obscure crash.\n- Fixed bogus error message when opening a revoked API token.\n\n### v0.226 (2018-03-03)\n- The new HTTP Gateway is now on by default. This is a major change to the lower levels of Sandstorm which should improve CPU and memory usage considerably. Learn more here: https://sandstorm.io/news/2018-02-19-http-rewrite-and-more\n- Tweaked language selection heuristic.\n\n### v0.225 (2018-02-03)\n- The front-end HTTP proxy has been rewritten from JavaScript (in Node.js) to C++. The new code path should be faster and more memory-efficient. In this release, it is only enabled if you add `EXPERIMENTAL_GATEWAY=true` to your `/opt/sandstorm/sandstorm.conf`. In a future release, this will become the default and the old implementation will be removed. The new implementation is turned on for Sandstorm Oasis by default.\n- Improved Finnish and French translations.\n- Various i18n templating bugfixes.\n\n### v0.224 (2018-01-06)\n- Added Finnish translation contributed by Lauri Ojansivu.\n- Added French translation contributed by Benoit Renault and Thierry Pasquier.\n- Fixed a memory leak in node-capnp (affecting Sandstorm's shell process).\n- Oasis: Updated production servers to Debian Stretch in order to get mitigation for Meltdown attack.\n\n### v0.223 (2017-12-22) [bugfixes]\n- Fixed \"finish\" button at end of setup wizard not working.\n\n### v0.222 (2017-12-22) [bugfixes]\n- Updated dependencies.\n- Added \"ui-\" prefix to UI (in-iframe) hostnames, so that they can be reliably distinguished from static publishing hosts. This is in preparation for a networking overhaul in the next release.\n\n### v0.221 (2017-11-20) [bugfixes]\n- Fixed bug that broke TinyTinyRSS.\n\n### v0.220 (2017-11-19) [bugfixes]\n- Worked around Node 8 getting much stricter about exception handling and aborting the process all the time.\n- Fixed error on some large file uploads: `ReferenceError: destructor is not defined`\n\n### v0.219 (2017-11-18)\n- Updated Meteor to version 1.6, a new major release.\n- Updated Node.js to version 8 (from 4).\n\n### v0.218 (2017-10-28)\n- Added Dutch translation by Michel van der Burg.\n- Improved language selection to consider the user's whole prioritized list of languages rather than just the top language. This also makes language selection through the Chrome browser settings work, instead of using the system UI language.\n- Fixed memory leak in Cap'n Proto which could cause Sandstorm backend process memory usage to grow gradually until the system runs out of memory. We believe the memory leak has been present since either v0.214 or v0.215.\n\n### v0.217 (2017-10-22) [bugfixes]\n- Fixed Sandcats servers not starting up correctly with an error about PORT being invalid.\n\n### v0.216 (2017-10-21)\n- The Sandstorm UI has been internationalized. Currently, most of the UI has been translated to Traditional Chinese, and some parts also have Simplified Chinese translations. Other languages will come in the future. ([Want to help?](https://github.com/sandstorm-io/sandstorm/blob/master/CONTRIBUTING.md#internationalization-i18n)) You can change your language in your browser settings (Sandstorm will pick up the preference from your browser).\n\n### v0.215 (2017-09-30) [bugfixes]\n- Updated dependencies to latest versions (as for every release). No other changes.\n\n### v0.214 (2017-09-03) [bugfixes]\n- Fixed setup wizard no longer working after identity changes.\n- Fixed \"login providers\" button in admin panel not working.\n\n### v0.213 (2017-09-02)\n- Major revision of Sandstorm's identity model. Users now have only one profile, rather than one for each linked credential. Although most people won't notice the difference, a huge amount of code has changed. Learn more in the blog post: [https://sandstorm.io/news/2017-05-08-refactoring-identities](https://sandstorm.io/news/2017-05-08-refactoring-identities)\n\n### v0.212 (2017-08-12) [bugfixes]\n- Updated dependencies to latest versions (as for every release). No other changes.\n\n### v0.211 (2017-07-15) [bugfixes]\n- Removed long-obsolete code in sandbox setup which attempted to enable transparent network proxying. The code never really worked and no app ever used it, but it recently started failing for one of our users.\n\n### v0.210 (2017-06-17) [bugfixes]\n- Powerbox HTTP APIs can now use the `ETag`, `If-Match`, and `If-None-Match` headers, as well as HTTP response codes 304 (not modified) and 412 (precondition failed).\n\n### v0.209 (2017-06-10) [bugfixes]\n- Powerbox HTTP APIs can now send and receive headers prefixed with `X-Sandstorm-App-` and other \"whitelisted\" headers.\n- sandstorm-http-bridge now sets the environment variable `no_proxy=localhost,127.0.01` in order to avoid breaking apps that make localhost/loopback requests. Such apps may have been broken by the earlier introduction of `http_proxy` in version 0.200 (but would only be affected if the package was rebuilt since then).\n- Updated Meteor to 1.5.\n\n### v0.208 (2017-05-20) [bugfixes]\n- Sent a one-time bell menu notification and added a note on the account settings page notifying affected users of [our upcoming changes to the identity system](https://sandstorm.io/news/2017-05-08-refactoring-identities).\n\n### v0.207 (2017-04-29) [bugfixes]\n- Improved handling of powerbox HTTP APIs, including correctly returning HTTP error bodies.\n- The contact chooser powerbox (e.g. as used by Wekan when adding people to a board or a card) now respects the \"Make all organization users visible to each other\" setting.\n- Fixed some server-side memory leaks, which might fix the occasional-100%-CPU bug.\n- Fixed bug where trashed grains could be started by trying to use capabilities they serve.\n\n### v0.206 (2017-04-09) [bugfixes]\n- Worked around MacOS Safari bug breaking WebSockets.\n- Oasis: Removed experiment that caused 50% of users to see a plan-chooser prompt immediately upon creating their account. All users will now default to the free plan without having to choose it explicitly. (Showing the plan chooser did not appear to make any more people choose a paid plan.)\n\n### v0.205 (2017-03-18) [bugfixes]\n- Fixed grain backups not working under \"privileged\" sandbox (which is the default for most newer self-hosted Sandstorm installs).\n- Fixed SAML integration with Azure Active Directory when users are not Microsoft accounts.\n\n### v0.204 (2017-03-05) [bugfixes]\n- Removed stray console logging on e-mail send.\n\n### v0.203 (2017-03-02)\n- Fixed security issues discovered during security review by [DevCore Inc.](http://devco.re/), commissioned by Department of Cyber Security of Taiwan. See blog post coming soon.\n- Apps may now request access via the Powerbox to HTTP resources external to Sandstorm, in the same way that they request access to HTTP resources hosted by other apps. Credentials -- including basic auth passwords and OAuth tokens -- are stored and protected by Sandstorm, not the app.\n- An e-mail organization can now be defined by multiple domains, including wildcard subdomains.\n\n### v0.202 (2017-02-04)\n- Removed Sandstorm for Work paywall. All Sandstorm for Work features are now available on all servers for free. Feature keys are no longer needed and all code related to them has been removed.\n- `sandstorm-http-bridge-internal.capnp` is no longer included with the other, public `.capnp` files in the package. This file was not intended to be used by third parties, and indeed did not parse correctly after installation since it references other files that are not installed. This caused some dev tools to report spurious errors.\n\n### v0.201 (2017-02-03) [bugfixes]\n- Sandcats: Fixed bug where if `BIND_IP` was set to 127.0.0.1 (which it often is for servers that sit behind sniproxy), Sandcats requests would fail, eventually leading to certificate expiration.\n\n### v0.200 (2017-01-28)\n- Added the ability for http-bridge-based apps to publish and request HTTP APIs via the Powerbox without the application needing to understand Cap'n Proto. On the publishing side, an app can declare a list of APIs that it implements in its bridge config. On the requesting side, sandstorm-http-bridge now automatically sets up an HTTP proxy through which the app can redeem powerbox request tokens and make HTTP requests to the remote APIs. Later, this proxy will be extended to support communicating via HTTP to the outside world (with proper permissions checks) and utilizing Sandstorm Cap'n Proto APIs without Cap'n Proto (using JSON instead).\n- Apps can now request IP networking interfaces with TLS encryption support handled by Sandstorm (relying on Sandstorm's certificate bundle, so that the app doesn't need its own).\n- Fixed bug where, when \"Disallow collaboration with users outside the organization.\" is enabled and a user visits a sharing link without logging in, the page doesn't render correctly, leaving the user confused.\n- SAML login now works with non-password-based authentication in ADFS (e.g. Kerberos / Windows login). Apparently, the SAML code was unnecessarily demanding password login previously. We're not sure why the protocol even lets it do that.\n- sandstorm-http-bridge apps can now utilize Cap'n Proto APIs before they begin accepting HTTP connections. Previously, sandstorm-http-bridge would not start accepting connections on its Cap'n Proto API until the app started accepting connections via HTTP.\n- Sandcats: On machines with multiple IP addresses, Sandcats now makes sure that dynamic DNS ends up pointing to the address specified by `BIND_IP`.\n\n### v0.199 (2017-01-07)\n- App-to-app powerbox is now implemented. A grain can advertise that it is able to serve powerbox requests of a certain type. Powerbox queries for that type will show the grain. When selected, the grain will be able to display a picker / configuring UI embedded directly inside the Powerbox. Currently, only raw-Cap'n-Proto-API apps can take advantage of this, but we'll be adding HTTP bridge support soon.\n- Implemented log rotation: When grain debug logs or the system log grow large, older logs will now be automatically discarded. This should fix long-running grains which \"mysteriously\" appear much larger than they should be.\n- Fixed URL-encoding of `Location` header in HTTP responses.\n- Increased e-mail token timeout and admin token timeout to 1 hour.\n\n### v0.198 (2016-12-17) [bugfixes]\n- Fixed obscure bug where an auto-downloaded app update could be uninstalled before the user gets around to accepting the update.\n- Oasis: Redesigned demo intro.\n\n### v0.197 (2016-12-03) [bugfixes]\n- Self-hosting: Fixed grain backup/restore on non-root installs (unusual configuration).\n- Self-hosting: Fixed spurious \"rootUrl is not valid\" when using Internet Explorer.\n- Self-hosting: Improved setup wizard intro page to show feature comparison between standard version and Sandstorm for Work.\n- Sandstorm for Work: Fix LDAP-based quota display.\n\n### v0.196 (2016-11-19) [bugfixes]\n- Fixed web publishing for URLs containing %-escaped characters, e.g. spaces.\n- Fixed problem where notifications were available but opening the notifications menu reported \"no notifications\".\n- Fixed problem where overly large Cap'n Proto messages could cause the front-end to become disconnected from the back-end.\n- Fixed problems in IE11.\n- Oasis: You will no longer be blocked from installing apps because you are over-quota. You will still be prevented from creating grains. This is to avoid giving users the impression that uninstalling apps will make it possible to install more apps -- you actually have to delete some grains.\n\n### v0.195 (2016-11-12)\n- Fixed that published web sites would incorrectly handle a query string when the path ended with '/'.\n- Self-hosting: Improved messaging around changes to BASE_URL causing OAuth login providers to be de-configured.\n- Sandstorm for Work: SAML now supports configuring a logout endpoint. If configured, SAML users who log out of Sandstorm will also be logged out of the IdP, and vice versa.\n- Oasis: The user's total quota is now displayed along-side their current usage above the grain list.\n- Oasis: When canceling a paid subscription (i.e. switching to \"free\"), you will now retain the benefits of the paid plan until the end of the current pay period. (This is in preparation for ending the beta discount, which makes all paid plans effectively free.)\n\n### v0.194 (2016-11-05)\n- Sandstorm for Work: You can now disable the \"about sandstorm\" menu item as a whitelabeling setting.\n- Fixed bug where grains that are actively handling API requests but which weren't open in any browser windows would shut down every couple minutes, only to start back up on the next request. These grains will now stay running.\n- Fixed that apps were always being told \"Accept-Encoding: gzip\" whether or not the client actually sent this header. (Apps must be rebuilt with the latest sandstorm-http-bridge to receive this change.)\n- Increased directory nesting limit in SPK files from 64 to 128 to work around long npm dependency chains.\n\n### v0.193 (2016-10-29)\n- Installer should now work on RHEL, CentOS, Arch, and other distros where user namespaces are unavailable and/or kernel version 3.10 is in use.\n- Fixed that trashed grains were not being shut down immediately.\n- Fixed that non-root installs (an unusual configuration) were crashing on updates since v0.190. Unfortunately they will crash again on 0.193 but future updates should succeed.\n- Fixed various bugs with standalone domains.\n- Fixed that app-requested sign-in overlay appeared off-center on IE.\n- The \"Who has access?\" dialog now shows a spinner while loading, since it can take several seconds.\n- Made danger buttons less loud.\n- Oasis: Fixed bug where storage could be temporarily miscalculated while a collaborator has one of your grains open.\n\n### v0.192 (2016-10-22)\n- Apps can now request via postMessage that Sandstorm display a large sign-in prompt.\n- On (experimental) standalone domains, the app can now request that the user be logged out.\n- When running an app in dev mode, the perceived UID and GID inside the sandbox are now randomized. This is to help catch app bugs in which the app incorrectly assumes that these numbers will always be the same. When using the new \"privileged\" sandbox mode (which supports older Linux kernels), the UID depends on the host system, whereas in the past it has always been 1000.\n- Fixed that if e-mail was not configured in Sandstorm, but the local machine had an MTA listening on port 25, sometimes Sandstorm would unexpectedly use it.\n- Oasis: Restyled demo sidebar.\n- Oasis: Restyled plan pricing table.\n\n### v0.191 (2016-10-16) [bugfixes]\n- Fix bug that broke Ethercalc.\n\n### v0.190 (2016-10-15)\n- Sandstorm can now run on systems where user namespaces are not available, including on kernel version 3.10 (previously, 3.13 was required). This means RHEL 7, CentOS 7, and Arch should now be supported. However, we plan to spend some time testing this new mode before updating the installer script to accept these platforms. If you'd like to test it now -- with the caveat that there may be bugs -- try the updated installer script from [this pull request](https://github.com/sandstorm-io/sandstorm/pull/2656). Or, copy an existing Sandstorm install to a new server -- the new sandboxing mode is used automatically when user namespaces are unavailable.\n- Changed LDAP config to mask the search password.\n- Moved login errors to the top of the login dialog / menu, from the bottom.\n- Fixed more admin settings inputs to automatically trim whitespace.\n- Added internal support for \"standalone grains\", where a grain runs on a separate domain with Sandstorm UI hidden. This is experimental and currently requires poking the database to enable.\n\n### v0.189 (2016-10-08) [bugfixes]\n- During an e-mail verification powerbox request, there is now an \"add new e-mail\" option which links a new e-mail identity to your account on-the-fly.\n- Fixed issues with the Cap'n Proto API where passing a Sandstorm-provided capability back to Sandstorm in the presence of promise pipelining could sometimes fail.\n- Self-hosting: Improved the display of the system log during setup.\n- Sandstorm for Work: Links to the billing dashboard are now more direct.\n\n### v0.188 (2016-10-01) [bugfixes]\n- We now use a version of Node.js patched to fix [V8 issue 5338](https://bugs.chromium.org/p/v8/issues/detail?id=5338). We hope that V8 will eventually fix the bug upstream.\n- When the app initiates the sharing dialog, powerbox, or other dialogs (as opposed to the user initiating them by clicking on the top bar), the dialog will now appear centered rather than hanging from the topbar.\n- `spk pack` will no longer segfault when the package's root path does not map to any source path.\n- Fixed bug where if a grain's title contained non-ASCII characters, downloading a backup might fail.\n- Fixed that powerbox identity picker didn't work if you'd ever shared with a demo user or a user that was later deleted.\n- Fixed that unopened shares would always appear at the top of the powerbox grain picker, rather than being sorted by date.\n- Self-hosting: You can now access the system log during setup, before logging in. This is useful for debugging login problems.\n- Self-hosting: Identity provider configuration will now strip leading and trailing whitespace from configured values. A bug in Firefox's \"copy\" operation often adds such whitespace when copy/pasting keys e.g. from the Google OAuth config.\n- Sandstorm for Work: You can now specify a private CA cert for LDAP TLS negotiation.\n- Sandstorm for Work: When a response from the SAML IdP is not understood, it is written to the system log, to help debug.\n- Oasis: Trashed (but not yet deleted) grains will no longer count against the 5-grain limit for free users.\n- Oasis: Fixed that bonus storage for subscribing to the mailing list was not being updated if you subscribed or unsubscribed from outside of the Oasis UI (e.g. subscribing from the form on our web site, or unsubscribing by clicking the link on the page).\n\n### v0.187 (2016-09-24)\n- Apps can now make a powerbox request for an identity. The user will choose from among their contacts. This can be used e.g. to assign a task in Wekan to a user who hasn't yet visited the board.\n- Improved usability of setup wizard based on user testing.\n- Improved installer usability.\n- Activity events generated by anonymous users should now work correctly.\n- Fixed that if a user on a server manually updated a preinstalled app via the app market before the update notification had gone out, then new users would continue to receive the old version of the app.\n- Fixed bug where timing issues in template rendering could lead to a blank screen, for instance when a demo account expires.\n\n### v0.186 (2016-09-17)\n- Self-hosted Sandstorm updates will now have \"zero\" downtime, whereas previously users would experience connection failures for several seconds. This is accomplished by keeping the listen sockets open, so instead of errors, users only perceive a delay.\n- Fixed that pronoun selection was always showing up as \"they\" in account settings.\n- Alphabetical sorting of grains is now locale-aware.\n- Changed various text to call Sandstorm a \"productivity suite\".\n- Fixed that the collections app was not being automatically selected for pre-installation on self-hosted instances.\n- Added a way for users to leave feedback when deleting their account.\n- Fixed display of user limit for feature keys with unlimited users.\n- Whitelisted `X-Requested-With` and `X-Phabricator-*` headers in HTTP requests.\n\n### v0.185 (2016-09-12) [bugfixes]\n- Fixed a problem preventing some LDAP users from receiving notification e-mails.\n\n### v0.184 (2016-09-12) [bugfixes]\n- Fixed that refactoring in 0.181 could cause SAML login to fail.\n\n### v0.183 (2016-09-11) [bugfixes]\n- The security hardening in 0.181 broke Gogs, for a different reason. This release rolls back the hardening temporarily while we resolve the issue.\n\n### v0.182 (2016-09-11) [bugfixes]\n- The security hardening in 0.181 broke Ethercalc. This release fixes it.\n\n### v0.181 (2016-09-10)\n- Sandstorm for Work: Feature keys now automatically renew when they expire. If automatic renewal isn't possible, the administrators will receive notifications by bell menu and (if possible) e-mail.\n- Added hardening against clickjacking and CSRF attacks on apps. On Chrome and Safari, CSRF attacks should now be totally blocked, even if the app fails to implement proper protections.\n- Fixed that newly-received shares were appearing at the bottom of the grain list using the default sort order (by last-opened date). Never-opened grains will now sort according to the share date, and will show \"Unopened\" in the last-opened column.\n- Fixed bug in Meteor that could cause the server to suddenly spawn tens of thousands of fibers, which in turn due to a bug in V8 would make the server permanently consume excessive CPU, even after the fibers exited.\n- Fixed that the \"stay anonymous\" button on the sign-in hint didn't work (but closing the hint dialog worked and had the same effect).\n- Fixed that after manually updating an app, the button to upgrade existing grains did not appear. (When auto-updating an app via the notifications menu, grains are updated automatically.)\n- Fixed grain tab close buttons sometimes being the wrong size on new builds of Chrome.\n- Fixed some console log spam.\n- Various refactoring.\n- Updated all dependencies.\n\n### v0.180 (2016-09-03)\n- The \"Who has access\" dialog now shows collections of which the grain is a part, and (more generally) other grains through which this grain has been shared.\n- The \"Delete Account\" button now makes you type a phrase to confirm. (It still doesn't actually delete your account for 7 days.)\n- When a user deletes their own account, they will now receive an e-mail notification, in case of hijacking.\n- The \"Sandstorm for Work\" section of the admin panel now contains a direct link to manage your feature key's billing preferences.\n- Added `spk dev --proc` flag which requests that `/proc` be mounted in the sandbox for debugging purposes. This may decrease security of the sandbox, so is only allowed in dev mode.\n- The account settings page now looks reasonable on mobile.\n- Fixed grains in trash sometimes missing icon and other app details.\n- Setting a BASE_URL with a trailing slash will no longer subtly break things.\n- Dropping a SturdyRef not owned by the calling grain will now act as if the SturdyRef doesn't exist rather than throwing an exception. This particularly affects grains that have been backup/restored and so have someone else's tokens in their storage.\n- HTTP API requests will no longer throw an exception if the user-agent header is missing.\n- sandstorm-http-bridge will now log a note if the app doesn't seem to be coming up on the expected port.\n- Oasis: Added self-monitoring and auto-restart for the [\"fiber bomb\" problem](https://github.com/meteor/meteor/issues/7747). Also added instrumentation to track down root cause.\n\n### v0.179 (2016-08-26)\n- A user can now request deletion of their own account, unless they are a member of a Sandstorm for Work organization. Deletion has a 7-day cooldown during whith the user can change their mind.\n- Admins can now suspend and delete accounts from the admin panel.\n- Apps can now request that an offer template be a link with a special protocol scheme that can trigger a mobile intent, allowing one-click setup of mobile apps. Apps will need to be updated to take advantage of this.\n- Identity capabilities now have a getProfile() method, allowing a grain to discover when a user's profile information has changed without requiring the user to return to the grain.\n- Fixed that admins were unable to un-configure SMTP after it had been configured.\n- Fixed problems in sandstorm-http-bridge that could make notifications unreliable. Affected apps will need to rebuild.\n- Increased expiration time for uploading a backup from 15 minutes to 2 hours, to accommodate large backup files on slow connections.\n- Fixed email attachments from apps having incorrect filenames.\n- Fixed various styling issues.\n- Various ongoing refactoring.\n\n### v0.178 (2016-08-20)\n- The grain list can now be sorted by clicking on the column headers.\n- Many improvements to mobile UI. (Still more to do.)\n- Your current identity's profile picture now appears next to your name in the upper-right.\n- Fixed desktop notifications displaying grain titles incorrectly.\n- Fixed `spk publish` throwing an exception due to a bug in email handling.\n- Improved accessibility of \"Sandstorm has been updated - click to reload\" bar.\n- When an app returns an invalid `ETag` header, sandstorm-http-bridge will now log an error and drop it rather than throw an exception.\n- Updated to Meteor 1.4.1.\n- Oasis: Fixed appdemo not working for Davros.\n\n### v0.177 (2016-08-15) [bugfixes]\n- Changes to SMTP handling in v0.175 caused Sandstorm to begin verifying TLS certificates strictly. Unfortunately, the prevailing norm in SMTP is loose enforcement and many actual users found Sandstorm no longer worked with their SMTP providers. This update therefore relaxes the rules again, but in the near future we will add configuration options to control this.\n\n### v0.176 (2016-08-13) [bugfixes]\n- Fix web publishing to alternate hosts, broken by an API change in Node.\n\n### v0.175 (2016-08-13)\n- Grain sizes now appear on the grain list.\n- Added `sandstorm uninstall` shell command.\n- Upgraded to Meteor 1.4 and Node 4.\n- Sandcats: HTTPS connections now support ECDHE forward secrecy (as a result of the Node upgrade). Qualys grade increased from A- to A.\n- Bell-menu notifications now also trigger desktop notifications.\n- The collections app has been added to the default preinstall list for new servers. (We highly recommend existing servers add it in the admin settings, too.)\n- No apps will be automatically installed on dev/testing servers (e.g. vagrant-spk).\n- Switched to newer, better mail-handling libraries.\n- Fixed the \"close\" button on the email self-test dialog.\n- Fixed the \"dismiss\" button on notifications behaving like you'd clicked the notification body.\n- Errors during a powerbox request will now be shown on-screen rather than just printed to the console.\n- Fixed that uploading a backup left a bogus history entry, breaking the browser's back button.\n- Fixed powerbox search box, which was apparently completely broken.\n\n### v0.174 (2016-08-05)\n- Admins can now choose to pre-install certain apps into new user accounts. For all new servers and Oasis, our four most-popular apps will be pre-installed by default: Etherpad, Wekan, Rocket.Chat, and Davros. Admins can disable this if they prefer, and servers predating this change will not pre-install any apps by default (but the admin can change this).\n- offer()ing a grain capability now works for anonymous users, which means anonymous users can use the collections app. This app will be officially released shortly.\n- Identicons are now rendered as SVGs rather than PNGs, which makes them much more efficient to generate. This in particular fixes the noticeable pause when the sharing contact auto-complete first appears for users who have many contacts.\n- Updated to Meteor 1.3.5.1 (1.4 / Node 4 coming soon!).\n- Fixed that Sandstorm sometimes temporarily incorrectly flashed \"(incognito)\" in place of the user name when starting.\n- Sandstorm for Work: Non-square whitelabel icons now do something reasonable.\n- Various refactoring.\n- Somewhat improved styling of bell-menu notifications. (More work to be done.)\n\n### v0.173 (2016-07-23)\n- Sandstorm for Work: Added server whitelabeling features. Find under \"Personalization\" in the admin panel.\n- Apps now receive profile pictures for all users. Users who have no picture get an identicon. Previously, apps were expected to generate identicons themselves.\n- HTTP requests to / responses from apps now pass through any header prefixed with `X-Sandstorm-App-`. Also, `X-OC-Mtime` is whitelisted in responses, to improve Davros' compatibility with ownCloud clients.\n- Attempting to download a backup of a collection will show a warning explaining that this doesn't do what you expect.\n- Prevented guests from uploading grain backups. These uploads weren't creating actual grains, but could use up server-side disk space.\n- Fix bug in grainlist deduplification on app details page.\n- Fixed that the admin page for managing a specific user only showed their login identities, not non-login identities. The main list showed both, but the non-login identities would disappear when clicking through to a specific user.\n- The favicon is now transparent instead of white-background.\n- The guided tour highlight of the \"share access\" button no longer blacks out the button on Firefox.\n- The admin UI's \"Personalization\" page no longer fails to save if you haven't entered a Terms of Service or Privacy Policy URL.\n- \"204 No Content\" responses from apps now preserve the ETag.\n- Refactored powerbox client-side code to make it more pluggable.\n\n### v0.172 (2016-07-15) [bugfixes]\n- Fixed a regression that caused accepting an app update notification to have no effect. Sandstorm will re-notify about missed updates within 24 hours.\n- Fixed bugs preventing Sandstorm from working on IE10.\n- Tweaked new activity event API.\n- Major refactor of powerbox-related code.\n- Bugfixes related to upcoming collections app.\n\n### v0.171 (2016-07-09)\n- **Activity/Notifications API:** Apps can now inform Sandstorm when a grain has been modified. Sandstorm will then highlight the grain in the user interface to show that it has new content, and in some cases deliver notifications to interested users. Apps need to be updated to use the API, but an update to Etherpad will ship on Sunday with updates to Rocket.Chat and Wekan soon thereafter.\n- Fixed regression where grain UIs would not refresh when the grain's package was updated.\n- Fixed bug where it was possible to have a \"shared with me\" copy of a grain you own show up in your grain list, which in turn caused other bugs.\n- Fixed spurrious deprecation warning in server logs and reduced the size of the Sandstorm bundle by 10% by eliminating redundant copies of the Connect framework which were being included due to npm dependency semantics.\n- Fixed some modal dialogs stretching off the screen on mobile.\n- Various code refactoring.\n- Oasis: Fixed that save()ing a capability was producing a SturdyRef that could not be restored due to bookkeeping errors.\n- Sandstorm for Work: The SAML XML blob is now available even if the SAML identity provider has not yet been enabled. This should make setup easier.\n\n### v0.170 (2016-07-02) [bugfixes]\n- Meteor-based apps will no longer go into redirect loops when WebSockets are not working.\n- Sandstorm for Work: Fixed SAML login failing when a user's name contained non-ASCII characters.\n- The Powerbox API has changed slightly to involve a server-side exchange after the client-side selection operation. This improve security. Existing powerbox-using apps will need to be updated -- but no major apps are using it yet.\n- When using email login and clicking the link (rather than copy/pasting the token), you will now be redirected back to the URL from which you initiated login.\n- Improved design of profile editor UI.\n- The user table in the admin panel can now be sorted by clicking column headers.\n- Fixed \"guided tour\" hint bubble for installing apps showing for users who aren't allowed to install apps.\n\n### v0.169 (2016-06-26) [bugfixes]\n- Fixed regression in static web publishing that caused requests that should have returned 404s or redirect-to-add-trailing-slash to instead return a 500 status with a blank page.\n- Added ability for admin to request a heapdump (to debug memory leaks).\n\n### v0.168 (2016-06-24) [bugfixes]\n- Sandstorm for Work: SAML connector should now work with Active Directory.\n- Fixed various subtle resource leaks in Sandstorm front-end and sandstorm-http-bridge.\n- Fixed random crash/hang bug introduced in sandstorm-http-bridge v0.166. Apps build since that time will need to be rebuilt.\n- The old admin interface has been completely removed (the new admin interface has been the default since v0.164).\n- The email configuration test dialog now shows more informative error messages.\n- The \"most-used\" apps row is now only shown if you have more than 6 apps, without which it isn't helping.\n- Added \"guided tour\" hint highlighting the \"share access\" button.\n- Added explanatory text to admin user invite page.\n- Fixed search bar autofocus on app list page.\n- The question mark info button on Grains page was supposed to have a circle around it.\n\n### v0.167 (2016-06-18) [bugfixes]\n- Updated to Meteor 1.3.3.1.\n- Implemented hard flow control at the Cap'n Proto layer so that an errant (or malicious) app cannot cause excessive memory use elsewhere in the system by making excessive simultaneous calls. This should improve the stability of Oasis.\n- Implemented flow control for uploads to an app (though it rarely comes into play unless running Sandstorm locally).\n- Fixed that after losing internet connectivity for a while (or suspending your laptop) and then coming back, grains would refresh.\n- Fixed some memory leaks in shell server.\n- Added more \"guided tour\" points to help new users learn Sandstorm.\n- Sandstorm for Work: SAML connector now exports XML auto-configuration blob.\n- Sandstorm for Work: Improved UI around feature keys.\n\n### v0.166 (2016-06-11) [bugfixes]\n- Implemented flow control for large file downloads from apps so that they don't buffer in the front-end consuming excessive RAM. Apps that handle large files will need to re-pack using the latest sandstorm-http-bridge and push an update.\n- Sandstorm for Work: Made SAML entity ID configurable; added more setup instructions.\n- Updated Google login setup instructions to match latest gratuitous UI changes.\n\n### v0.165 (2016-06-04) [bugfixes]\n- Re-enabled websocket self-check under new admin UI.\n\n### v0.164 (2016-05-20)\n- Self-hosting: The admin settings UI has been completely revamped.\n- Fixed grain debug log auto-scrolling.\n- Sandcats: Fixed obscure ASN.1 type issue in CSRs that was causing Globalsign API to complain.\n- Fixed bug where logging in via Google or Github while viewing a sharing link which you had already redeemed previously would lead to an error.\n\n### v0.163 (2016-05-15) [bugfixes]\n- Fixed subtle bug introduced in 0.162 which caused shared grains to refresh every minute.\n\n### v0.162 (2016-05-14)\n- Implemented \"trash\". Deleted grains go to the trash where they can be recovered for up to 30 days.\n- Grains can now be deleted from the grain list, without opening them first. Multiple grains can be selected for deletion at once.\n- An app can now request that the \"who has access\" dialog be displayed.\n- Fixed bug where after an upload failed, future uploads would show the same error despite not having failed.\n- Tweaked the \"logout other sessions\" button to give better feedback that the request is in-progress.\n- When visiting a Sandstorm server that hasn't been set up yet, you'll now be redirected to the setup wizard.\n- The API endpoint now allows the authorization token to be specified as part of the path, for cases where setting the `Authorization` header is not possible (especially cross-origin WebSocket).\n\n### v0.161 (2016-04-29) [bugfixes]\n- API requests can now include Mercurial headers, potentially allowing a Mercurial server app.\n- You can now configure Sandstorm to accept SMTP connections on low-numbered ports, such as 25.\n- Apps that send email can now omit the \"from\" address and have it filled in automatically to the grain's auto-generated address. (Previously, the app had to explicitly call another method to find out this address.)\n- Rewrote permissions algorithm to support upcoming features. Should have no visible changes currently.\n- Fixed some bugs around grain renaming when a grain was received through multiple sharing links.\n- Sharing emails are now included in the per-user email send limit of 50 per day.\n- Oasis: Demo users can no longer send sharing invite emails, due to abuse.\n- Sandstorm for Work: The SAML configuration now clearly displays the entity ID used by Sandstorm.\n\n### v0.160 (2016-04-23) [bugfixes]\n- When the owner renames a grain, the change will now be visible by people with whom the grain has already been shared.\n- Sandstorm for Work: Enforce various rarely-used SAML constraints. (The important ones were already enforced.)\n- Increased timeout for wildcard host self-check to try to prevent error from displaying spurriously.\n- Hid \"share access\" button in cases where it doesn't work -- e.g. when the user doesn't have access or the grain doesn't exist.\n- Fixed regression causing powerbox offers of UiViews to fail (not yet used by any real app).\n- Oasis: Fixed first-grain tutorial overlay.\n\n### v0.159 (2016-04-16)\n- Sandstorm for Work: The sharing dialog auto-complete will now automatically be populated with all known members of your organization. (This can be turned off in the admin settings if the membership of your organization should be kept secret from its own members.)\n- Error messages informing the user that they need to log in as a different identity now allow the identity cards to be clicked to immediately initiate login as that identity, rather than requiring the user to use the sign-in menu manually.\n- Improved login provider first-time setup UI.\n- Updated to Meteor 1.3.x, a major Meteor update. No changes to Sandstorm, but many dependencies have changed, possibly introducing new bugs.\n- Fixed redirect loop that could happen when following a sharing link after the sharer has unlinked from their account the identity that they had used when sharing.\n- Fixed that paths marked hidden in a package's `sandstorm-pkgdef.capnp` would still appear under `spk dev` when listing the parent directory (though the paths were not actually accessible).\n- Sandstorm for Work: Fixed some cases where LDAP and SAML users were being handled incorrectly, such as when trying to auto-complete such users in the sharing dialog.\n- Oasis: Fixed subtle storage-related bug causing a small number of grains to get stuck in an unbootable state.\n- Oasis: Fixed related bug that caused grains created in the last few weeks to consume many more megabytes in a user's total storage quota than the actual size of the grain as reported in the top bar. If you feel that your total storage usage is being misreported, please try opening each of your grains created in the last three weeks to trigger a recount.\n\n### v0.158 (2016-04-08) [bugfixes]\n- Massively improved performance of `spk dev` filesystem tracing.\n- Fixed that an app's SandstormCore capability could get disconnected if the frontend restarted without restarting the app, leaving the app in a state where certain features (especially powerbox-related) did not work.\n- Fixed that clicking the clipboard button to copy an offer template would include extra whitespace on Firefox, which was especially bad when copying passwords e.g. from Davros.\n- Stop printing spurrious warning about missing iptables module that just confused everyone.\n- Sandstorm for Work: LDAP and SAML users ID cards will now show LDAP/SAML icon.\n- Oasis: Increased file descriptor limits to improve reliability.\n\n### v0.157 (2016-04-05)\n- Self-hosting: New, beautiful first-time setup wizard. (Sadly, if you already have a server, you'll never see it. But a redesign of the full admin UI is coming soon.)\n- Sandstorm for Work: Added ability to disallow sharing outside the organization, which also disallows guest accounts (since they only exist for external sharing purposes).\n\n### v0.156 (2016-04-02)\n- Sandstorm for Work: Added support for SAML login.\n- Sandstorm for Work: LDAP identities now have email addresses.\n- Sandstorm for Work: Removed the option to specify an LDAP DN pattern in favor of the search query approach. DN patterns were going to create problems for future planned features and none of our users so far used the feature to our knowledge.\n- Sharing emails are now sent under the name of the sharer, with their email address specified in reply-to.\n- Fixed several display bugs in Internet Explorer.\n- Fixed that opening your own sharing link would sometimes prompt you to choose incognito mode.\n- Fixed regression causing some popup windows to display partially-off-screen on mobile.\n- Fixed minor display bugs with first-time usage tips on IE and Firefox.\n\n### v0.155 (2016-03-27) [bugfixes]\n- Remove chatty console.log() recently added for debugging. Oops.\n\n### v0.154 (2016-03-27)\n- Apps can now verify a user's email address via a Powerbox interaction.\n- Apps can now more easily tell when multiple sessions originate from the same grain tab (e.g. because the user closed their laptop and then opened it later and continued using the tab). Previously the app had to save a cookie to do this, but now Sandstorm will give it a `tabId`.\n- Sandstorm will now warn you in the admin panel if Websockets aren't working, which tends to break many apps.\n- The Picker Powerbox's query format has changed. Queries are now specified as base64-packed-capnp rather than JSON. This is necessary since the Sandstorm system does not necessarily know the schema of these descriptors and so won't be able to perform a JSON->capnp translation itself.\n- Fixed a refresh loop that could occur when visiting a sharing link that had been revoked.\n- Fixed some email deliverability issues. (Envelope sender was not always being set correctly.)\n- Self-hosting: Fixed possible (but obscure) exception during startup migrations introduced in 0.151.\n- Sandstorm for Work: Fixed \"LDAP Search Username Field\" not saving.\n\n### v0.153 (2016-03-22) [bugfixes]\n- Fix blank screen when clicking through a share-by-identity email.\n\n### v0.152 (2016-03-21) [bugfixes]\n- Self-hosting: Fixed sending server invites by email (from the \"send invites\" tabh in the admin settings).\n- Improved error message seen when static publishing TXT records are misconfigured.\n- Improved error message when trying to send a sharing invite to an invalid email address.\n\n### v0.151 (2016-03-20) [bugfixes]\n- Expanded LDAP config for search-query-based user matching to support authenticating the search and adding a search filter. LDAP is nuts.\n- Worked around bug in Chrome 50 which was causing app installs to sometimes fail complaining that no URL was provided.\n- Worked around an unexplained bug observed in the wild causing Sandstorm to fail to load in a browser claiming \"no such route\", apparently when accessed from behind certain proxies.\n- Worked around bug in libseccomp which could cause Sandstorm binaries built using older kernel headers to fail to filter newer syscalls, possibly making systems insecure. All of our releases have been built against up-to-date headers, so we don't believe our release builds have been affected.\n- Fixed a case where \"who has access\" dialog could show users named \"null\".\n- Self-hosting: STMP config has been broken out into components rather than using a \"URL\" format.\n- Development: Restarting `spk dev` will now reload all grains of the app without the need to manually refresh.\n- Internal refactoring of grain tab management.\n\n### v0.150 (2016-03-13)\n- **Sandstorm for Work:** For self-hosters in a business setting. Initial release supports LDAP and basic organization managament. Requires a feature key to enable. See the \"For Work\" section of the admin settings.\n- Your set of open grains will now be preserved through refreshes and closing/reopening the browser.\n- The \"home\" button is now aligned with the sidebar and collapses with it, which maybe makes it clearer that the rest of the top bar is attached to the content.\n- The file-open dialogs when uploading an SPK or a grain backup now filter for the desired file type.\n- Offer templates can now substitute a sluggified grain title into the template body.\n- Browser's autocomplete will no longer draw over sharing autocomplete.\n\n### v0.149 (2016-02-27) [bugfixes]\n- Fix non-token-specific API host, i.e. all API tokens created before 0.146.\n\n### v0.148 (2016-02-27) [bugfixes]\n- Fix new offer template unauthenticated host properties feature to support mapping resource paths containing periods. This was failing because periods are not permitted in Mongo keys.\n\n### v0.147 (2016-02-27)\n- Offer templates can now define some static properties of the API host to be served statically in response to unauthenticated requests, such as the DAV header for OPTIONS requests as well as simple resources. This should allow DAV apps like Davros and Radicale to fix incompatibilities with certain client apps.\n- Offer templates can now include a clipboard button which copies the text to the clipboard.\n- Sharing emails to/from Github identities will now use the Github account's primary email address, rather than the first-listed address.\n- Setting BIND_IP to an ipv6 address should now work.\n- Improved styling of \"shrink sidebar\" button.\n- Fixed that if you visited a grain URL when not logged in, saw the \"request access\" screen, then logged in as an identity that already has access, the \"request access\" screen would continue to display until refresh.\n- Fixed that \"request access\" would display for non-existent grain IDs.\n- Fixed several icons displaying incorrectly on IE, especially in the sharing UI.\n- Fixed that the API endpoint URL in the (obscure) webkey dialog was showing up as `undefined`.\n\n### v0.146 (2016-02-21)\n- If you open a grain URL to which you do not have access -- presumably becaues the owner forgot to share it with you, and thought that just copy/pasting the URL would work -- you will now be presented with the ability to send an access request email.\n- Client apps accessing Sandstorm grains via HTTP APIs no longer need to be whitelisted for use of HTTP Basic Auth. As part of this, Sandstorm now allocates a new random hostname for every API key. This change was made so that an upcoming CalDAV apps can be used with any standard CalDAV client. We still prefer new apps use bearer token authorization rather than basic auth.\n- IP network capabilities can now be granted through the powerbox, opening the door to apps that need to operate at the raw TCP or UDP level -- however, only the server admin is able to grant such capabilities, since it could be a security problem for large shared servers.\n- Shrinking the sidebar is now sticky (remembered by your browser, not by the server).\n- It is now possible for developers to recover from losing their app signing key by submitting a pull request against `src/sandstorm/appid-replacements.capnp` in the Sandstorm repository.\n- More large internal refactoring to switch to ES6 with JSCS-enforced style checking.\n- Fixed another issue that could cause spurious errors when returning to grains after losing internet connectivity for a bit.\n- Fixed problem that caused Groove Basin streams to disconnect.\n- Oasis: Fixed another problem preventing adding an identity to your account which was already attached to some other empty account.\n- Oasis: Fixed problem preventing signup keys from being consumed (applies to preorders and Indiegogo customers who hadn't claimed their invites yet).\n\n### v0.145 (2016-02-16) [bugfixes]\n- Updated glibc for CVE-2015-7547.\n- Oasis: Fixed a bug that prevented adding an identity that is already attached to an empty account.\n\n### v0.144 (2016-02-13)\n- Initial version of Picker Powerbox implemented. A grain can now prompt the user to choose one of their other grains to share, and then the requesting grain can present that grain to other users. This could be used e.g. to share securely through a chat room or message board. Look for apps to start using this soon.\n- When app search gives no results, we now suggest the user try the app market.\n- HTTP headers `If-Match: *` and `If-None-Match: *` are now correctly passed through to the app.\n- Added tooltips to all topbar items.\n- The \"share access\" button now works in incognito mode (and suggests copy/pasting the link).\n- Significant internal refactoring: Now using more ES6 features, and using `box-sizing: border-box` everywhere.\n- Self-hosting: We now show an explanatory error message in the admin panel if `WILDCARD_HOST` is misconfigured, which we've found is a common mistake.\n- Oasis: Fixed bug where grains could get stuck at \"loading\" spinner forever.\n\n### v0.143 (2016-02-07) [bugfixes]\n- Added support for HTTP PATCH method.\n- Fixed inability to revoke some types of shares in the \"who has access\" dialog.\n- Removed obsolete and confusing `sandstorm reset-oauth` shell command.\n\n### v0.142 (2016-02-03) [bugfixes]\n- Page titles (as in document.title) now use the server's title as specified in the admin settings rather than just \"Sandstorm\".\n- Dev apps now appear first in the app list.\n- Fixed apps with multiple \"new\" actions always using the last action when launched in dev mode.\n- Fixed icon in sidebar for shared grains.\n- Fixed computation of sharing stats (part of admin stats).\n- Oasis: Fixed bug where free users were not getting infinite grains as promised after referring someone. :(\n- Oasis: Users subscribed to our announcement mailing list will now receive 1GB bonus storage.\n\n### v0.141 (2016-01-25) [bugfixes]\n- Fix blank screen when trying to log in as an identity that is connected to one or more accounts as a non-login identity.\n- Oasis: Fix regression that prevented linking an identity to your account which had already been logged into in the past but never created any grains. In this case, the old empty account is supposed to be deleted so that the identity can be added to the current account, however the recent referral program notification that was sent to everyone caused these accounts to be considered non-empty and thus not elligible for auto-deletion.\n\n### v0.140 (2016-01-22)\n- When you opeon a sharing invitation sent to you by user identity, and you are not currently logged in as that identity, you'll now get an informative message rather than \"403 Unauthorized\".\n- Restoring a grain backup is now accomplished through a button on the grain list rather than the app list.\n- The button to upload (aka sideload) an app spk has been moved to the side, since it tended to confuse people who didn't need it.\n- When installing a new version of an app for which the appVersion hasn't changed, offer the option to upgrade existing grains. (Previously, the option was only provided if the appVersion was newer than existing grains. This primarily affects developers.)\n- Accessibility improvements in sign-in menu.\n- Consistently use the term \"grain\", not \"file\".\n- Self-hosting: Give more helpful messaging when OAuth login configuration is auto-reset due to BASE_URL change.\n- Self-hosting: Add ability to configure the server title and return address as used in, for example, login emails.\n- Oasis: Notify everyone about the existence of the referral program.\n\n### v0.139 (2016-01-11)\n- Refactored authentication framework. No visible changes.\n- Improved UX for logging in as a dev user.\n- On installing first app, highlight the \"create grain\" UI and explain how it works.\n- Up/down now work for selecting chips in sharing UI.\n- Sidebar tabs now have tooltips with titles (for when sidebar is shrunk).\n- Fix `setPath` postMessage API when passed an empty string.\n\n### v0.138 (2015-12-18) [bugfixes]\n- Fix bug in new sharing interface where if you typed an email address but did not press \"enter\" to turn it into a chip, then tried to send the invite, nothing was sent.\n- Oasis: Referral program page is now designed.\n\n### v0.137 (2015-12-15) [bugfixes]\n- Tweak wording of app update notification.\n- Bug fixes for servers running demo mode (probably only Oasis).\n\n### v0.136 (2015-12-14)\n- You can now share with other users \"by identity\" without ever creating a secret link (and thus you can avoid any chance of that link leaking). The sharing dialog implements an auto-complete interface for selecting such contacts. Only users who have previously revealed their identities to you will be shown. Note that e-mail invites to other users still generate secret URLs.\n- When trying to link an additional identity to your account, if the identity already has an account, but that account is empty (no grains, no payment plan, etc.), Sandstorm will now automatically delete the other account so that the identity can be linked to yours. Previously, this situation reported an error saying that the identity couldn't be linked because it was already the login identity for another account. This was problematic because many users have logged in with various other \"identities\" in the past, causing those identities to have empty accounts attached.\n- You can now set a custom splash page which people will see when they visit your server's home page while not logged in. Look under \"advanced\" in the admin settings.\n- Icons for shared grains should now appear correctly in the sidebar (for new shares, at least).\n- Oasis: Experimenting with showing payment plan selector on initial account creation. (You can still choose \"free\".)\n\n### v0.135 (2015-12-08) [bugfixes]\n- When visiting a share link anonymously, we now gently encourage the user to log in, since most apps work better when users are logged in.\n- Fixed various problems that could cause blank gray screens (no error message) when visiting sharing links.\n- Fixed double-counting of users in server stats, introduced in 0.133.\n- Fixed recent regression in first-time setup flow which forced the admin to create two or even three admin tokens in order to complete setup. Only one should be required (which the install script auto-generates).\n\n### v0.134 (2015-12-07) [bugfixes]\n- Fix signup key consumption.\n- Fix bug where sharing links didn't work after the owner unlinked the identity under which the grain was created.\n- Sandcats: Fix bug that sometimes caused certificate rotation not to happen on time.\n- Oasis: Implement referral program.\n\n### v0.133 (2015-12-06)\n- It is now possible to link multiple login identities to an account. For example, you can connect both your Google and your Github identity to the same account, so that you can log in with either. This was added for a few reasons, including:\n    * To make it safer for us to expand the set of login providers, which might otherwise lead to confusion as people forget which provider they used to log in previously.\n    * To allow sharing based on social identities rather than secret links. E.g. you may want to share a document with a particular Github user without knowing if they have a Sandstorm account.\n    * To allow you to verify multiple email addresses, so that you can choose which one should receive Sandstorm service notifications independently of your login provider.\n- Github login now receives your email address even if it isn't public on your Github account. This is necessary as Sandstorm needs a verified email address for notifications. You can control where notifications are sent by changing your primary address in the account settings.\n- The sidebar can now be shrunk for more space, using a highly-visible slider button. This replaces the old functionality in which clicking the \"sandstorm\" button in the upper-left would toggle the sidebar entirely; few people realized that that was there, and those who did click the button expected it to go \"home\", which it now does.\n- Demo mode now features a prominent timer in the sidebar. We found that people did not notice the timer in its previous upper-right location.\n- `spk verify` now defaults to printing extended details, previously gated by the `--detail` flag.\n\n### v0.132 (2015-11-11) [bugfixes]\n- Fixed regression where app detail page showed \"last updated\" as \"unknown\" for all apps.\n- Fixed SMTP escaping issue that was otherwise causing errors when sending from Roundcube through Mailgun.\n\n### v0.131 (2015-11-10)\n- App details are now displayed at install time, giving you a chance to review the app's signature and other metadata before completing installation.\n- Apps can now directly request (via postMessage) that Sandstorm display the sharing dialog.\n- Work around bug where web publishing could stop working on a particular grain saying that the capability had been closed. (Proper fix requires some refactoring, but at least now it will reconnect.)\n- Started to transition icons to a font rather than lots of separate SVGs.\n\n### v0.130 (2015-11-03) [bugfixes]\n- Fix regression in v0.129 preventing the first user to log in from using Google or Github as the login service.\n\n### v0.129 (2015-11-03)\n- Changes to /etc/resolv.conf (DNS client configuration) will now be seen by Sandstorm without a restart. This should fix a number of outgoing name lookup problems seen on machines where the network configuration changes frequently, especilaly laptops that change Wifi networks often.\n- Fix app icons not showing when using `spk dev`.\n- Fix weird rendering of the \"most-used\" row of the app list immediately after updating an app that wasn't in the top row.\n- Fixed regressions in app search.\n- Attempt to fix \"session was never opened\" error.\n- Fix regression where \"first user becomes admin\" could apply to dev accounts.\n\n### v0.128 (2015-10-28) [bugfixes]\n- Internal bugfixes.\n\n### v0.127 (2015-10-26) [bugfixes]\n- Fix bug in app details page causing pages to be blank in the presence of very old sharing tokens that lacked certain expected metadata.\n\n### v0.126 (2015-10-26)\n- Added app details page. Clicking on an app in the app grid now brings you to the details page rather than creating a new grain. From there, you can see your existing grains of that app and create new ones.\n- Fixed problem where some apps would refresh to a 404 page when resuming a laptop from suspend.\n- Sandstorm will now automatically repair its Mongo database after a dirty shutdown (e.g. power outage), rather than go into an infinite loop of Mongo failing to start.\n\n### v0.125 (2015-10-21) [bugfixes]\n- Fix bug causing Sandcats servers not to update their IP dynamically.\n\n### v0.124 (2015-10-19) [bugfixes]\n- Harden back-end code against possible front-end bugs that could inadvertently delete data. We do not believe any such bugs exist, but we like having extra layers of protection.\n\n### v0.123 (2015-10-18) [bugfixes]\n- Fixed regression introduced in v0.119 where `X-Sandstorm-User-Id` (as reported to apps) was computed incorrectly for email login users, causing apps to think the user was a different person than they were before the change. E.g. Etherpad would assign the user a different color from before. For some apps, this problem triggered app bugs of varying severity, such as Wekan making the board read-only and Laverna refusing to save changes. (Unfortunately, fixing this bug means that any grains created during the time when the bug was present will now show the same problems.)\n\n### v0.122 (2015-10-16) [bugfixes]\n- Fix formatting of app update notification.\n- Add temporary debug logging aimed at diagnosing the rare event loop stalling bug which is apparently still not fixed.\n\n### v0.121 (2015-10-15) [bugfixes]\n- Fix regression where `spk dev` might fail to override normally-installed versions of the app. (Only affects development servers.)\n\n### v0.120 (2015-10-15) [bugfixes]\n- Fix bug causing intermittent timeouts in web publishing.\n\n### v0.119 (2015-10-15)\n- Sandstorm now notifies you when app updates are available.\n- A few days after installing Sandstorm, it will ask you for permission to send anonymous usage stats back to us. The stats sent are a subset of what appears at /admin/stats, so you can inspect them for yourself.\n- Apps can now expose WebDAV APIs. This will soon be used to support Dropbox-like file sync.\n- Large under-the-hood changes have been made towards the goal of supporting multiple login methods for the same account, but these changes should not yet be user-visible unless there are bugs.\n- Fix bug where file upload dialogs (e.g. profile picture, spk upload, etc.) would sometimes randomly do nothing after a file was chosen.\n- Page title is now correctly updated when browsing to a non-grain route.\n- HTTP proxy now passes through ETags and ETag preconditions, probably improving performance for some apps.\n- Attempt again to fix rare bug where front-end stops talking to back-end, apparently not fixed by 0.116 as we thought. Most likely still not fixed, but new logging has been added to try to debug.\n\n### v0.118 (2015-10-07) [bugfixes]\n- Fixed problem where Sandcats-HTTPS-enabled servers would request new certificates too often.\n- This is a cherry-pick release -- no other changes merged in the last week are included.\n\n### v0.117 (2015-09-30)\n- Self-hosters using Sandcats now get automatic free HTTPS certificates. This is normally set up automatically during install. If you first installed before this release, [see the docs to find out how to enable HTTPS](https://docs.sandstorm.io/en/latest/administering/ssl/).\n\n### v0.116 (2015-09-29)\n- (Probably) fix very rare bug in which front-end stops talking to back-end causing grains to fail to load until the next front-end restart. The bug was in node-capnp's use of libuv. [EDIT: Did not fix problem. :(]\n- Check PGP signatures on packages on install and store them in the database (not yet surfaced in UI).\n\n### v0.115 (2015-09-24) [bugfixes]\n- Attempt to work around very rare problem where front-end inexplicably stops talking to back-end by monitoring and recreating the connection.\n- Oasis: Fix \"download backup\", which broke due to unexpected interaction between security hardening to the sandbox in which zip/unzip runs and security settings on Oasis.\n\n### v0.114 (2015-09-23) [bugfixes]\n- No-op release just to test end-to-end that the new signed update mechanism works. (We did lots of tests in advance, but touching the updater code always makes me nervous, so test again!)\n\n### v0.113 (2015-09-23)\n- The installer script is now PGP-signed such that it can be verified by third parties without relying on the integrity of HTTPS.\n- The installer now verifies downloads using GPG (in addition to using HTTPS as it always has).\n- Updates are now verified using libsodium ed25519 signatures (in addition to being downloaded over HTTPS as they always have).\n- Oasis: Fixed storage bug that was causing random app restarts (but no data loss).\n- Various small UI usability tweaks.\n\n### v0.112 (2015-09-16) [bugfixes]\n- Fix another stats bug causing stats recording to sometimes be interrupted by an exception.\n\n### v0.111 (2015-09-16) [bugfixes]\n- Fix bug preventing \"who has access\" table from displaying properly.\n\n### v0.110 (2015-09-16) [bugfixes]\n- Fix problem with display of app stats (in admin panel) in presence of broken package uploads.\n\n### v0.109 (2015-09-15)\n- You can now uninstall apps again.\n- Suspending your machine for a few minutes or more and then resuming will no longer cause all your open Sandstorm grains to stop working until you reload them.\n- Fixed brief display of \"Reveal your identity?\" prompt when loading your own grains (where this prompt makes no sense).\n- Clicking on an app in the app list will now immediately show the loading spinner without waiting for the server to respond. (Previously, when the server was overloaded, there could be a delay with no feedback. People would often click the app repeatedly, causing multiple grains to be created.)\n- Worked around bogus Adblock Plus rule that blocked parts of the sharing \"who has access?\" UI.\n- Better accessibility for non-visual users.\n- Readability improvements.\n- You can now close popups by pressing \"escape\".\n- In the grain list, you can now type an app title to filter for grains of that app.\n- More detailed stats gathering, particularly app-specific stats (see \"stats\" in the admin UI).\n- Refactored permissions code into a package with better tests.\n- Oasis: Fixed problem where a particular app package might occasionally become broken on a particular worker machine, especially popular apps. The most common symptom was Etherpad or Wekan sporatically failing to load even in new grains, often fixed by restarting the grain (but not by simply reloading the page), since this pushed it to a different worker. No user data was damaged by this problem.\n\n### v0.108 (2015-09-03)\n- Oasis: Allow front-ends to be parallelized so that they can scale to arbitrary load.\n- Eliminated redundant subscriptions and added caching to reduce front-end load.\n- Placed grain title first in title bar, rather than app title.\n- Updated wording of app install prompt.\n\n### v0.107 (2015-08-31) [bugfixes]\n- Fix sign-out button.\n\n### v0.106 (2015-08-30)\n- Complete UI overhaul!\n  - \"New\" and \"Open\" flows.\n  - Ability to have multiple grains open at once and fast-switch between them.\n  - Icons.\n  - Better design all around.\n- App market launch!\n- Sandstorm Oasis is now in Open Beta with self-serve signup. (Self-hosted servers still use invite system.)\n- Demo server is now Oasis, and demo accounts can upgrade to full accounts. (Demo mode remains off by default for self-hosters.)\n\n### v0.105 (2015-08-14)\n- The sharing UI can now directly send email with a sharing link, and has been reorganized. (More updates are coming in the next release.)\n- The new app metadata format has been improved (in backwards-incompatible ways, but it wasn't being used yet).\n- New `spk publish` command can publish apps to the upcoming app market.\n- `spk verify --details` will now check the package's PGP signature if present and display the key ID.\n- Fixed bug preventing first-time login through Github using a Github account that had no display name set.\n- Fixed bug where logging in while viewing a sharing link did not correctly update the app to notify it that the user was now logged in.\n- Lots of code refactoring in preparation for big changes coming soon.\n\n### v0.104 (2015-08-03) [bugfixes]\n- Fix sudden increase in log spam in 0.102 -- unnecessarily large full-HTML DNS TXT lookup error messages were being logged to the console; no more. In fact, now these are properly 404 errors as they should be.\n\n### v0.103 (2015-08-03) [bugfixes]\n- Emergency fix for bug that can cause startup failure in the presence of users that apparently have a `services` entry but no `profile`. The alpha server seems to have these but none of the test servers did.\n\n### v0.102 (2015-08-03)\n- New icons designed by Nena!\n- New account settings page allows setting display name, profile picture, preferred handle, and preferred pronouns, all of which are passed on to apps. These are auto-populated from the login provider as much as possible.\n- App packages may now include metadata like icons, license information, description, screenshots, and more, for use in the Sandstorm UI and upcoming app market. Large blobs embedded this way (e.g. images) will be extracted and served via a new static asset serving subsystem with high cacheability (also used for profile pictures).\n- You may now configure Sandstorm to run on port 80. The socket is bound before dropping privileges and passed into the front-end via parent->child file descriptor inheritance.\n\n### v0.101 (2015-07-25)\n- Refactored CSS styling and accounts drop-down code. Please be on the lookout for bugs.\n- Fixed bug where the admin settings page would simply say \"Loading...\" forever if the user was not authorized.\n\n### v0.100 (2015-07-22) [bugfixes]\n- Fix inability to configure Google/Github login accidentally introduced in v0.97 during security tightening.\n- Add missing changelog for 0.99.\n\n### v0.99 (2015-07-21) [bugfixes]\n- Fix app scrolling on iOS.\n- Fix popups being onclosable on iOS.\n- Fix app selection on mobile.\n\n### v0.98 (2015-07-19) [bugfixes]\n- Fix grain title misalignment on Firefox.\n\n### v0.97 (2015-07-19)\n- Revamped design of menus hanging off top bar. Now much less ugly! Plus the login menu is consistent with everything else!\n- Major internal refactoring of topbar UI. Please be on the lookout for bugs.\n- Mobile UI hamburger menu contents are now more complete and contextually correct (due to topbar UI refactoring).\n- Fixed loading spinner in case where grain fails to start.\n- Fixed bugs where transitive shares wouldn't grant access.\n- Finally added \"new\" code devs to \"about\" page.\n\n### v0.96 (2015-07-14)\n- Loading spinner is back, hopefully non-buggy this time.\n- Fixed regression in web publishing that caused sites to be cached for 30000 seconds instead of the intended 30 seconds.\n- Refactored sharing permissions computation.\n- Introduced admin UI for creating raw IP networking capabilities, which can be passed into apps.\n- Offer templates can now specify that the offered token is meant to be used by users other than the creating user, like sharing tokens.\n\n### v0.95 (2015-07-11) [bugfixes]\n- Reverted \"loading\" spinner because it interacted badly with the \"reveal your identity?\" interstitial.\n\n### v0.94 (2015-07-11)\n- Oasis: Storage usage and quota is now tracked and enforced.\n- We now display a spinner when apps are slow to start up. (But we are working on making apps start faster!)\n- Offer templates now work for anonymous users, and the tokens do not expire as long as the template is still displayed.\n- Long admin alerts should now avoid covering the top bar controls.\n- When copy/pasting a token for email login, whitespace is now ignored.\n- When restoring a backup fails, we now delete the just-unpacked data rather than leak the story.\n- Fixes and improvements to sharing implementation details.\n\n### v0.93 (2015-07-06)\n- Grain logs can now be viewed even when the grain has died.\n- The RoleAssignments table was merged into the ApiTokens table. This should have no visible effect but is a major implementation change in sharing.\n- Webkeys (for connecting external client apps to a grain) now default to granting all of your access (to that grain), rather than a specific role (e.g. read/write). You can still select a specific role if you wish.\n- Bug: In 0.92, web publishing regressed by no longer specifying a charset in the `Content-Type` header, causing browsers to default to LATIN-1 (eww). It now specifies UTF-8 as it did originally. Web sites that set the charset in a &lt;meta> tag (as most do) were not affected.\n\n### v0.92 (2015-06-28)\n- First pass of powerbox UI: Apps can now offer and request capabilities, resulting in direct Cap'n Proto RPC connections between apps, including the ability to save and restore these capabilities for later use. Currently, the user must copy/paste a token from the offering app to the requesting app, but this will eventually be replaced with a picker UI.\n- Web publishing (as in, the feature used by Wordpress, Ghost, and HackerCMS apps) should now work on Sandstorm Oasis (managed hosting).\n- Added support for APIs to opt-in (from the client side) to revealing their public IP to the server app. Needed for Piwik.\n- Improved display of admin alerts on mobile.\n- Admin alerts can now include the current app name in their text and link; useful for clickthrough metrics.\n\n### v0.91 (2015-06-20) [bugfixes]\n- Bug: The first bug in v0.90 was not fully fixed: query parameters and fragments were still being dropped. This is blocking a thing, so we're pushing another fix. Sorry.\n\n### v0.90 (2015-06-20) [bugfixes]\n- Bug: Share links with paths would lose the path if the user was logged in and consumed the link (redirecting them to /grain/whatever). The path is now preserved in this redirect.\n- Bug: The API by which apps set paths did the wrong thing when viewing anonymously via a share link: it would overwrite the URL with a /grain URL, which would lead to an unauthorized error if the user refreshed.\n- Bug: On server restart/upgrade, logged in users viewing grains not owned by them had their view force-reloaded. Buggy code perceived the user's permissions to be changing.\n- Bug: On server restart/upgrade, anonymous users viewing share links would not be force-reloaded, but would find that the iframed app stopped working and started giving 404s instead. This is because session hosts were not restored correctly for anonymous users.\n\n### v0.89 (2015-06-20)\n- \"Incognito\" sharing: Sandstorm will now ask you whether you want to reveal your identity when visiting a share link from someone you haven't interacted with before.\n- When you have no grains, a big green arrow will now suggest that you install an app or create a grain. (Helps users get through the demo.)\n- Apps can now receive callbacks from Github webhooks via the API endpoint.\n- Share links can now include paths (e.g. to make them go to a specific page on MediaWiki).\n- Fixed unexpected page refreshes when using apps that support paths (like MediaWiki).\n- \"Admin alert\" feature lets you define a banner to show to all users, possibly including a time and countdown, e.g. to announce scheduled downtime.\n- Various Admin panel usability improvements.\n\n### v0.88 (2015-06-18) [bugfixes]\n- Fix real-time activity stats not being displayed (in admin settings).\n- Fix issue on Oasis where worker could get into a bad state and refuse to start grains.\n\n### v0.87 (2015-06-13) [bugfixes]\n- Emergency fix to race condition which caused the login control to claim no login services were configured when communicating with a server far-away on the network. This wasn't caught in testing because we usually test against localhost servers. The fix is to make the list of enabled services reactive, where it wasn't before. This update should entirely resolve the problem.\n\n### v0.86 (2015-06-13)\n- New API allows apps to stay running in the background. The user is notified and can cancel the background processing to avoid expending resources. A notifications box has been added to the UI; eventually, other notifications will arrive here too, but for now it's just for background processing.\n- New API allows apps to render an \"offer template\", which is a chunk of instructional text containing an embedded API token suitable for copy/pasting e.g. into a shell. This will be used, for example, to improve the UX for Gitweb and Gitlab so that you can set up your git client by copy/pasting sample commands. The app can display such a template without ever getting direct access to the API token text, which would otherwise be a violation of confinement.\n- Backup/restore functions now go through the backend API rather than having the front-end directly operate on the filesystem. The zip and unzip processes are additionally more tightly sandboxed than before.\n- Admin panel now includes usage stats and a view of the server log file.\n- `spk pack` now avoids creating excessive numbers of mmap()s (which vbox shared folders don't like).\n- Admin user list now shows the email address or invite notes under which the user was invited.\n- Various installer UX improvements, especially in failure cases.\n\n### v0.85 (2015-06-01)\n- Added this change log, and made it appear on the \"about\" page.\n- Updated to latest Meteor.\n- Improved `spk pack` performance by using multiple compression threads.\n- Bugfix: Sending invides in admin settings now works with emergency admin token login.\n- Bugfix: Don't display irrelevant webkey button to users who can't use it.\n- Bugfix: When testing SMTP, use the newly-input configuration rather than the saved configuration.\n- Bugfix: Fix permissions on various disk directories so that the `sandstorm` group can access them.\n\n### v0.84 (2015-05-24)\n- Fix admin-token ownership; when created as root\n- Support standalone spk binary\n\n### v0.1-v0.83\n- Change logs were not kept, but you can inspect the release tags in git.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 12.0947265625,
          "content": "# Contributing to Sandstorm\n\nSo you want to contribute to Sandstorm. Awesome! This document will help you get started.\n\n## Talk to us!\n\nBefore you start making changes to Sandstorm, you should join [the sandstorm-dev mailing list](https://groups.google.com/group/sandstorm-dev) and tell us what you're up to. We might be able to give you tips or warn you if someone is already working on the same thing.\n\nYou can also [chat with us on IRC](https://kiwiirc.com/client/irc.libera.chat/?channel=#sandstorm) at #sandstorm on libera.chat -- but don't be discouraged if no one answers; sometimes we're busy. :)\n\n## Non-code contributions\n\nThere are many ways to contribute without writing code. Check out the [Sandstorm community page](https://sandstorm.io/community) for some ideas. The rest of this document focuses on code, since this is the code repository.\n\n## How to hack on the code\n\nTo learn how to set up a dev environment and hack on the code, check out the documentation on [installing Sandstorm from source](https://docs.sandstorm.io/en/latest/install/#option-4-installing-from-source).\n\n## What to work on\n\nHere are a list of projects and smaller tasks that YOU can do to help Sandstorm!\n\nIf you'd like to work on one of these tasks, [join the sandstorm-dev mailing list](https://groups.google.com/group/sandstorm-dev) and let us know! We'll let you know if anyone else is already working on the task and help you figure out what to do.\n\n### Apps!\n\nThe easiest way to help Sandstorm is to write and/or package apps! See [the developer hub in the Sandstorm documentation](https://docs.sandstorm.io/en/latest/developing/) for how to get started.\n\nIf you want to package *something* but don't know what, look for [issues labeled \"app-requests\"](https://github.com/sandstorm-io/sandstorm/issues?q=is%3Aissue+is%3Aopen+label%3Aapp-requests)\non the issue tracker.\n\n### Internationalization (i18n)\n\nWe need help translating the Sandstorm interface into multiple languages.\n\nThe easiest way to help is to write translation tables for your language. Check out the [shell/i18n](https://github.com/sandstorm-io/sandstorm/tree/master/shell/i18n) directory to see existing tables. To add support for your language, start by copying en.i18n.json, then go through and change each piece of text to your own language. Check out the [Dutch translation](https://github.com/sandstorm-io/sandstorm/pull/2999) for an example. Don't forget to check with [the sandstorm-dev mailing list](https://groups.google.com/group/sandstorm-dev) before you start, to see if anyone else is already working on the same language.\n\nAs a more advanced project, we also need help improving our i18n framework.\n\n* Our codebase still contains some inlined text in various places that needs to be hooked for translation.\n* We want to add UI to the account settings page through which users can set their language. If the user sets a language, it should override the `Accept-Language` HTTP header both for the Sandstorm interface and for apps.\n* As a longer-term project, we would like to create a localization framework for apps. Apps can already localize themselves based on the `Accept-Language` header, and some have done so. However, there are some issues we'd like to improve on:\n    * In many places, apps communicate strings to Sandstorm, using the `LocalizedText` Cap'n Proto struct defined in `util.capnp`. This struct is possibly not as well-designed as it should be. Currently, the vast majority of apps use only the `defaultText` field, specifying English-language text. We should extend this struct to support some sort of message code framework and make Sandstorm support it.\n    * We should consider creating a framework by which apps can be translated by volunteers without coordinating with the app developer. One way this could work is that each app could define a set of message codes and could define English-language text for those message codes, but translation tables could be distributed separately from the app itself. Sandstorm could maintain a service which allows people to contribute translations for any app and then redistributes those translations automatically to all Sandstorm servers, without the app author needing to be involved.\n\n### Better Tests\n\n_If you volunteer for this, you will be a hero!_\n\nLet's face it: no one really likes writing tests. But automated tests are absolutely essential for high-quality products, and especially open source projects. Automated tests allow us to be sure that changes to Sandstorm don't introduce new bugs. This is useful even for seasoned developers, but is absolutely essential for new contributors trying to help out. New volunteers won't know what their changes might break, and it is much better that they find out by running an automated test, rather than waiting for an experienced developer to review their code.\n\nSandstorm uses a test framework based on Selenium and Nightwatch. This framework runs a real web browser and simulates real clicks on UI elements in order to verify that they do what they are supposed to do. It's fairly easy to write these tests, because you're simply writing a script that does the things _you_ would do -- click buttons and links, type text, etc.\n\nCheck out [`/tests`](https://github.com/sandstorm-io/sandstorm/tree/master/tests) in the Sandstorm source tree to learn about tests.\n\nHere is an incomplete list of things we need to test better:\n\n- SAML and LDAP login. (Requires running a SAML and an LDAP server in the background to test against!)\n- Account settings page / profile editing.\n- Backwards-compatibility (test various old app packages and make sure they still work).\n- Quota enforcement.\n- Subscriptions and payments.\n- The admin UI.\n- The sharing UI.\n- Demo mode (seen primarily on Oasis).\n- Dev tools (`spk`, etc.).\n- Testing across all browsers (currently the tests run with Firefox only).\n\n### New Authentication Mechanisms\n\nCurrently, Sandstorm supports authentication through E-mail, Google, Github, LDAP, and SAML. We'd also like to support things like PGP, Twitter, Facebook, OpenID, Indie Auth, etc.\n\nSandstorm has a framework for authentication which is relatively easy to extend with new types. But, you will want to consider the following:\n\n- As more types are added, the potential for user confusion grows. You may want to implement [de-duplification of credentials](https://github.com/sandstorm-io/sandstorm/tree/master/roadmap/platform/accounts#todofeature-de-duplicating-logins) before adding too many login mechanisms.\n- Perhaps the authentication system should be extensible by apps! You may want to implement an API by which a Sandstorm app can offer a new way of authenticating.\n\n### Improve Notifications\n\nSandstorm contains an [activity event API](https://github.com/sandstorm-io/sandstorm/tree/master/roadmap/platform/activity) which generates notifications. Currently, those notifications are delivered via the \"bell menu\" inside the Sandstorm UI. We'd like to send e-mail notifications as well, but we need to make sure that users are able to exercise tight control over this to prevent spam.\n\nMore generally, we would like to create a user interface allowing users to subscribe to (or mute) specific notification types and specific threads within specific apps or grains.\n\n### Activity / Audit Logs\n\nRelated to notifications, we'd like to use the data that apps submit via the [activity event API](https://github.com/sandstorm-io/sandstorm/tree/master/roadmap/platform/activity) to generate an actual activity feed -- where users can see what's going on in their grains -- and a organization-wide audit logs -- where admins can find out what's going on globally.\n\n### The App Market\n\nThe Sandstorm App Market needs some love.\n\n[The code is here.](https://github.com/sandstorm-io/sandstorm-app-market)\n\nThe app market currently has no owner. We'd like someone to take over this code and make it better. You would have essentially free reign to make whatever improvements you deem fit. Sandstorm's designer, Nena, will be able to help design pretty graphics, so you only need to know how to code.\n\nLonger-term, we think the app market should be rewritten entirely. Here's why:\n\nThe app market is a Meteor app, which generates all HTML dynamically on the client side in Javascript. This probably was not the right design for a web site that is mostly composed of static content. Among other problems, it is not search-engine-friendly.\n\nAlso, the app market currently isn't a Sandstorm app -- although it sources metadata from the \"app index\", which *is* a Sandstorm app, but exports only JSON, raw package files, and image files.\n\nWe'd like to re-design the app market to solve these problems. Perhaps the app index (whose code currently lives inside the main Sandstorm repository) should be extended to generate and serve static HTML content. However, we'll need to decide how to handle reviews. Ideally, reviews would live in an entirely separate database (grain) from the app index, for security reasons: it's very bad if someone compromises the app index, but less bad if someone compromises reviews.\n\n### Sandstorm Distro\n\nWe'd like to develop a full Linux distro designed solely to run Sandstorm, so that people can install Sandstorm without setting up Linux first.\n\nSandstorm auto-updates without user intervention. The Sandstorm distro should do the same, all the way down to the kernel. When reboots are necessary, the administrator should be able to specify the best time for them to occur via the Sandstorm UI. Everything should be manageable via the Sandstorm web UI; no shells or config files necessary.\n\nThe Sandstorm distro should support secure boot, like ChromeOS and CoreOS.\n\nOnce we have a Sandstorm distro, we can use it to create VM images for easy deploy on OpenStack, AWS, Digital Ocean, Google Cloud, etc.\n\n### Better Development Tools\n\nCurrently, Sandstorm's `spk` and `vagrant-spk` tools are designed to be very general, such that they can work for any tech stack. The down side of this is that they are not very easy to use for any particular stack.\n\nIn contrast, the [`meteor-spk`](https://github.com/sandstorm-io/meteor-spk) tool has made it very easy to package Meteor apps for Sandstorm, by taking advantage of specific knowledge of the way Meteor apps are organized. `meteor-spk` understands the Meteor package manager and thus can build a precise Meteor app package given a Meteor project tree.\n\nWe'd like to develop similar tools -- or maybe one combined tool -- which understand other common tech stacks and package managers. We imagine tools that understand package definitions and dependency lists for npm, rubygems, Pip (Python), Maven (Java), Cabal (Haskell), Nix (general), etc., and can use them to generate a package file in a precise, reproducible way.\n\n### Documentation\n\nSandstorm maintains detailed documentation at [docs.sandstorm.io](https://docs.sandstorm.io), which is generated from [a directory in the source tree](https://github.com/sandstorm-io/sandstorm/tree/master/docs).\n\nIn theory, whenever someone adds a new feature to Sandstorm, they should add documentation.\n\nIn practice, the people writing code may not be very good at writing docs. Or they may just be lazy.\n\nYou can help Sandstorm by documenting things that aren't documented. Look especially for recent pull requests introducing new features which didn't add docs.\n\nYou can also help by simply prodding people to write docs for their changes. If someone submits an undocumented new feature, ask them to document it!\n\n### Bite-sized issues\n\nThe [Sandstorm issue tracker](https://github.com/sandstorm-io/sandstorm/issues) features a label called [\"bite-sized\"](https://github.com/sandstorm-io/sandstorm/issues?q=is%3Aopen+is%3Aissue+label%3Abite-size). These are issues which should be relatively easy to fix, but which no one has gotten around to. Try fixing one! Be sure to post to the issue that you're working on it before you start, to make sure that no one else takes the same issue while you're working on it.\n\n### Check the roadmap\n\nThe tasks listed above are the things we feel are most important right now. But, [the Sandstorm roadmap](https://github.com/sandstorm-io/sandstorm/tree/master/roadmap) is full of things we'd like to implement. Browse around and look for \"TODO\" indicators. If you find something interesting, consider taking it up!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 15.4697265625,
          "content": "Sandstorm is licensed under the Apache License, version 2.0.\n\nThe Sandstorm name and logo are trademarks. See below.\n\nThis package/repository contains code from the Sandstorm project as well as\nsome open-source works.\n\nFile Copyrights\n===============\n\nAll files not explicitly mentioned below\n    What: Sandstorm\n    Source URL: https://sandstorm.io\n    Copyright: Sandstorm Development Group, Inc.\n    License: Apache 2.0\n    License text: See below\n\nshell/public/spinner_96.gif\n    What: GIF spinner\n    Source URL: https://github.com/sjhcockrell/spinners\n    License: MIT\n    License URL: https://github.com/sjhcockrell/spinners/blob/master/README.md\n\nshell/public/clipboard.js\n    What: clipboard.js\n    Copyright: Zeno Rocha\n    Source URL: https://github.com/zenorocha/clipboard.js/\n    License: MIT\n    License URL: https://github.com/zenorocha/clipboard.js/blob/master/readme.md\n                 (at bottom)\n\nshell/public/fonts/WOFF/OTF/SourceSansPro-Regular.otf.woff\nshell/public/fonts/WOFF/OTF/SourceSansPro-It.otf.woff\nshell/public/fonts/WOFF/OTF/SourceSansPro-Semibold.otf.woff\nshell/public/fonts/WOFF/OTF/SourceSansPro-SemiboldIt.otf.woff\nshell/public/fonts/WOFF/OTF/SourceSansPro-Bold.otf.woff\nshell/public/fonts/WOFF/OTF/SourceSansPro-BoldIt.otf.woff\n    What: Source Sans Pro font\n    Source URL: https://github.com/adobe-fonts/source-sans-pro\n    Copyright: Adobe Systems Incorporated\n    License: SIL Open Font License, Version 1.1\n    License URL: https://github.com/adobe-fonts/source-sans-pro/blob/master/LICENSE.txt\n\nshell/imports/client/accounts/login-buttons.html\nshell/imports/client/accounts/login-buttons.js\nshell/imports/client/accounts/login-buttons-session.js\n    What: forked from accounts-ui/accounts-ui-unstyled\n    Source URL: https://github.com/meteor/meteor\n    Copyright: Meteor Development Group\n    License: MIT\n    License URL: https://github.com/meteor/meteor/blob/devel/LICENSE.txt\n\nshell/imports/client/vendor/ansi-up.js\n    What: ansi_up library (converts ANSI escape codes to HTML)\n    Source URL: http://github.com/drudru/ansi_up\n    Copyright: Dru Nelson\n    License: MIT\n    License URL: https://github.com/drudru/ansi_up/blob/master/Readme.md\n                 (at bottom)\n\nshell/imports/sandstorm-identicons/identicon.ts\n    What: identicon.js\n    Source URL: https://github.com/stewartlord/identicon.js\n    Copyright: Stewart Lord\n    License: BSD 2-clause\n    License URL: http://opensource.org/licenses/bsd-license.php\n\nshell/imports/client/accounts/ldap/ldap-client.js\nshell/imports/server/accounts/ldap/ldap-server.js\n    What: forked from Meteor accounts-ldap package\n    Source URL: https://github.com/typ90/meteor-accounts-ldap\n    Copyright: Eric Typaldos\n    License: MIT\n    License URL: https://github.com/typ90/meteor-accounts-ldap/blob/master/LICENSE\n\nshell/imports/client/accounts/saml/saml-client.js\nshell/imports/server/accounts/saml-utils.js\nshell/imports/server/accounts/saml/saml-server.js\n    What: forked from Meteor accounts-saml package\n    Source URL: https://github.com/nate-strauser/meteor-accounts-saml\n    Copyright: Nathan Strauser\n    License: MIT\n    License URL: https://github.com/nate-strauser/meteor-accounts-saml/blob/master/LICENSE\n\nsrc/joyent-http/*\n    What: Node.js HTTP parsing library\n    Source URL: https://github.com/joyent/http-parser\n    Copyright: Joyent, Inc.; Nginx, Inc.; Igor Sysoev; others.\n    License: MIT\n    License text: See comments at top of source files.\n\nbase64 handling in src/sandstorm/sandstorm-http-bridge.c++\n    What: Code copied from libb64\n    Source URL: http://libb64.sourceforge.net/\n    Copyright: Public Domain (authored by Chris Venter)\n    License: Public Domain\n    License text: http://creativecommons.org/licenses/publicdomain/\n\nlocaledata-C\n    What: A C locale supporting UTF-8, based on Debian and Fedora's C.UTF-8 locales\n    Source URLs:\n      http://sources.debian.net/data/main/g/glibc/2.19-22/localedata/locales/C\n      https://lists.stg.fedoraproject.org/archives/list/glibc%40lists.fedoraproject.org/message/RAIVZBJH55SKKLPSR6AX7RJOIUG3BF57/attachment/2/0001-Add-a-C.UTF-8-locale.patch\n    Copyright: Aurelien Jarno (Debian), Mike Fabian (Fedora)\n    License: LGPL Version 2.1 or later\n    License text: http://opensource.org/licenses/LGPL-2.1\n\nTrademarks\n==========\n\nThe Sandstorm name and logo are trademarks of Sandstorm Development Group, Inc.\nand may only be used in reference to the original Sandstorm code, project, or\nproduct as distributed by Sandstorm Development Group, Inc. You may not use\nthese trademarks to describe or promote a derivative work, nor may you use\nthese trademarks in conjuction with any commercial service, without prior\nwritten consent of Sandstorm Development Group, Inc.\n\nEventually, a more detailed trademark policy will be developed. For now,\nif in doubt, just ask us first. We are likely to be reasonable. :)\n\nWe intend our trademark policy to be similar to that of Mozilla's Firefox or\nGoogle's Android.\n\n===============================================================================\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2015 Sandstorm Development Group, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 17.9013671875,
          "content": "# Sandstorm - Personal Cloud Sandbox\n# Copyright (c) 2014 Sandstorm Development Group, Inc. and contributors\n# All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# You may override the following vars on the command line to suit\n# your config.\nCC=$(shell pwd)/deps/llvm-build/Release+Asserts/bin/clang\nCXX=$(shell pwd)/deps/llvm-build/Release+Asserts/bin/clang++\nCFLAGS=-O2 -Wall -g\nCXXFLAGS=$(CFLAGS)\nBUILD=0\nPARALLEL=$(shell nproc)\nLIBS=\nEKAM=ekam\n\n# You generally should not modify this.\n# TODO(cleanup): -fPIC is unfortunate since most of our code is static binaries\n#   but we also need to build a .node module which is a shared library, and it\n#   needs to include all the Cap'n Proto code. Do we double-compile or do we\n#   just accept it? Perhaps it's for the best since we probably should build\n#   position-independent executables for security reasons?\n# NOTE: Emperically -DKJ_STD_COMPAT appears to be necessary on recent ditros\n#   (as of Jan 2020), notably Debian Sid, Fedora 30 and Archlinux. We're not\n#   entirely sure what changed, but this seems like a backwards incompatibility\n#   in libstdc++. See also issue #3171.\nMETEOR_DEV_BUNDLE=$(shell ./find-meteor-dev-bundle.sh)\nMETEOR_SPK_VERSION=0.6.0\nMETEOR_SPK=$(PWD)/meteor-spk-$(METEOR_SPK_VERSION)/meteor-spk\nNODEJS=$(METEOR_DEV_BUNDLE)/bin/node\nNODE_HEADERS=$(METEOR_DEV_BUNDLE)/include/node\nWARNINGS=-Wall -Wextra -Wglobal-constructors -Wno-sign-compare -Wno-unused-parameter\nCXXFLAGS2=-std=c++1z $(WARNINGS) $(CXXFLAGS) -DSANDSTORM_BUILD=$(BUILD) -DKJ_HAS_OPENSSL -DKJ_HAS_ZLIB -DKJ_HAS_LIBDL -pthread -fPIC -I$(NODE_HEADERS) -DKJ_STD_COMPAT\nCFLAGS2=$(CFLAGS) -pthread -fPIC -DKJ_STD_COMPAT\n# -lrt is not used by sandstorm itself, but the test app uses it. It would be\n#  nice if we could not link everything against it.\nLIBS2=$(LIBS) deps/libsodium/build/src/libsodium/.libs/libsodium.a deps/boringssl/build/ssl/libssl.a deps/boringssl/build/crypto/libcrypto.a -lz -ldl -pthread -lrt\n\ndefine color\n  printf '\\033[0;34m==== $1 ====\\033[0m\\n'\nendef\n\n\nIMAGES= \\\n    shell/public/apps.svg \\\n    shell/public/appmarket.svg \\\n    shell/public/battery.svg \\\n    shell/public/bug.svg \\\n    shell/public/close.svg \\\n    shell/public/copy.svg \\\n    shell/public/debug.svg \\\n    shell/public/download.svg \\\n    shell/public/down.svg \\\n    shell/public/email.svg \\\n    shell/public/github.svg \\\n    shell/public/google.svg \\\n    shell/public/key.svg \\\n    shell/public/ldap.svg \\\n    shell/public/link.svg \\\n    shell/public/menu.svg \\\n    shell/public/notification.svg \\\n    shell/public/open-grain.svg \\\n    shell/public/openid.svg \\\n    shell/public/people.svg \\\n    shell/public/question-727272.svg \\\n    shell/public/question-a9a9a9.svg \\\n    shell/public/restart.svg \\\n    shell/public/restore.svg \\\n    shell/public/settings.svg \\\n    shell/public/source.svg \\\n    shell/public/share.svg \\\n    shell/public/search.svg \\\n    shell/public/trash.svg \\\n    shell/public/troubleshoot.svg \\\n    shell/public/upload.svg \\\n    shell/public/up.svg \\\n    shell/public/web.svg \\\n                             \\\n    shell/public/add-credit-m.svg \\\n    shell/public/add-email-m.svg \\\n    shell/public/apps-m.svg \\\n    shell/public/appmarket-m.svg \\\n    shell/public/bug-m.svg \\\n    shell/public/clipboard-m.svg \\\n    shell/public/close-m.svg \\\n    shell/public/copy-m.svg \\\n    shell/public/credit-m.svg \\\n    shell/public/down-m.svg \\\n    shell/public/debug-m.svg \\\n    shell/public/download-m.svg \\\n    shell/public/email-m.svg \\\n    shell/public/github-m.svg \\\n    shell/public/key-m.svg \\\n    shell/public/ldap-m.svg \\\n    shell/public/keybase-m.svg \\\n    shell/public/link-m.svg \\\n    shell/public/notification-m.svg \\\n    shell/public/open-grain-m.svg \\\n    shell/public/people-m.svg \\\n    shell/public/pronoun-m.svg \\\n    shell/public/restart-m.svg \\\n    shell/public/settings-m.svg \\\n    shell/public/share-m.svg \\\n    shell/public/source-m.svg \\\n    shell/public/trash-m.svg \\\n    shell/public/troubleshoot-m.svg \\\n    shell/public/twitter-m.svg \\\n    shell/public/up-m.svg \\\n    shell/public/unlink-m.svg \\\n    shell/public/web-m.svg \\\n                                  \\\n    shell/public/github-color.svg \\\n    shell/public/google-color.svg \\\n    shell/public/openid-color.svg \\\n    shell/public/email-494949.svg \\\n    shell/public/close-FFFFFF.svg \\\n                                  \\\n    shell/public/install-714DAA.svg \\\n    shell/public/install-896AC6.svg \\\n    shell/public/plus-6A237C.svg \\\n    shell/public/plus-9E40B5.svg \\\n    shell/public/upload-B7B7B7.svg \\\n    shell/public/upload-5D5D5D.svg \\\n    shell/public/restore-B7B7B7.svg \\\n    shell/public/restore-5D5D5D.svg\n\n# ====================================================================\n# Meta rules\n\n.SUFFIXES:\n.PHONY: all install clean clean-deps ci-clean continuous shell-env fast deps bootstrap-ekam update-deps test installer-test app-index-dev lint\n\nall: sandstorm-$(BUILD).tar.xz\n\nclean: ci-clean\n\trm -rf shell/node_modules shell/.meteor/local $(IMAGES) shell/imports/client/changelog.html *.sig *.update-sig icons/node_modules shell/public/icons/icons-*.eot shell/public/icons/icons-*.ttf shell/public/icons/icons-*.svg shell/public/icons/icons-*.woff icons/package-lock.json tests/package-lock.json deps/llvm-build meteor-testapp/node_modules meteor-testapp/package-lock.json\n\t@# Note: capnproto, libseccomp, and node-capnp are integrated into the common build.\n\tcd deps/ekam && make clean\n\trm -rf deps/libsodium/build\n\trm -rf deps/boringssl/build\n\nci-clean:\n\t@# Clean only the stuff that we want to clean between CI builds.\n\trm -rf bin tmp node_modules bundle shell-build sandstorm-*.tar.xz\n\trm -rf test-app.spk\n\trm -rf tests/assets/meteor-testapp.spk meteor-testapp/.meteor-spk\n\ninstall: sandstorm-$(BUILD)-fast.tar.xz install.sh\n\t@$(call color,install)\n\t@./install.sh $<\n\nupdate: sandstorm-$(BUILD)-fast.tar.xz\n\t@$(call color,update local server)\n\t@sudo sandstorm update $<\n\nfast: sandstorm-$(BUILD)-fast.tar.xz\n\ntest: sandstorm-$(BUILD)-fast.tar.xz test-app.spk tests/assets/meteor-testapp.spk\n\ttests/run-local.sh sandstorm-$(BUILD)-fast.tar.xz test-app.spk\nlint: shell-env\n\tcd shell && meteor npm run lint\ntypecheck-ts:\n\tcd shell && meteor npm run typecheck\n\ninstaller-test:\n\t(cd installer-tests && bash prepare-for-tests.sh && PYTHONUNBUFFERED=yes TERM=xterm SLOW_TEXT_TIMEOUT=120 ~/.local/bin/stodgy-tester --plugin stodgy_tester.plugins.sandstorm_installer_tests --on-vm-start=uninstall_sandstorm --rsync)\n\nstylecheck:\n\t@which jscs > /dev/null 2>&1 || ( echo \"You need jscs installed. Consider installing with e.g.\"; echo ; echo \"npm -g install jscs\"; echo ; exit 1)\n\tcd shell && jscs .\n\n# ====================================================================\n# Dependencies\n\nDEPS=capnproto ekam libsodium node-capnp boringssl clang\n\n# We list remotes so that if projects move hosts, we can pull from their new\n# canonical location.\nREMOTE_capnproto=https://github.com/sandstorm-io/capnproto.git master\nREMOTE_ekam=https://github.com/sandstorm-io/ekam.git master\nREMOTE_libseccomp=https://github.com/seccomp/libseccomp master\nREMOTE_libsodium=https://github.com/jedisct1/libsodium.git stable\nREMOTE_node-capnp=https://github.com/kentonv/node-capnp.git node10\nREMOTE_boringssl=https://boringssl.googlesource.com/boringssl master\nREMOTE_clang=https://chromium.googlesource.com/chromium/src/tools/clang.git main\n\ndeps/capnproto/.git:\n\t@# Probably user forgot to checkout submodules. Do it for them.\n\t@$(call color,\"fetching submodules\")\n\tgit submodule update --init --recursive\n\ndeps: tmp/.deps\n\ntmp/.deps: | deps/capnproto/.git\n\t@mkdir -p tmp\n\t@touch tmp/.deps\n\nupdate-deps:\n\t@$(call color,updating all dependencies)\n\t@$(foreach DEP,$(DEPS), \\\n\t    cd deps/$(DEP) && \\\n\t    echo \"pulling $(DEP)...\" && \\\n\t    git fetch $(REMOTE_$(DEP)) && \\\n\t    git rebase FETCH_HEAD && \\\n\t    cd ../..;)\n\n# ====================================================================\n# Get Clang\n#\n# We use the prebuilt Clang binaries from the Chromium project. We do this because I've observed\n# Sandstorm contributors have a very hard time installing up-to-date versions of Clang on typcial\n# Linux distros. Ubuntu and Debian ship with outdated versions of Clang, which means people have\n# to install Clang from the LLVM apt repo. However, people struggle to set that up, and the repo\n# has been known to randomly break from time to time. OTOH, the Chromium project maintains a very\n# up-to-date version of Clang which is used to build Chrome, conveniently maintained as a git repo\n# (which we can pin to a commit) containing a nice script that will download precompiled binaries.\n\ndeps/llvm-build: | tmp/.deps\n\t@$(call color,downloading Clang binaries from Chromium project)\n\t@deps/clang/scripts/update.py\n\t@mv third_party/llvm-build deps\n\t@rmdir third_party\n\n# ====================================================================\n# build BoringSSL\n\ndeps/boringssl/build/Makefile: | tmp/.deps deps/llvm-build\n\t@$(call color,configuring BoringSSL)\n\t@mkdir -p deps/boringssl/build\n\tcd deps/boringssl/build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=\"$(CC)\" -DCMAKE_CXX_COMPILER=\"$(CXX)\" -DCMAKE_C_FLAGS=\"-fPIE\" -DCMAKE_CXX_FLAGS=\"-fPIE\" ..\n\ndeps/boringssl/build/ssl/libssl.a: deps/boringssl/build/Makefile\n\t@$(call color,building BoringSSL)\n\tcd deps/boringssl/build && make -j$(PARALLEL)\n\n# ====================================================================\n# build libsodium\n\ndeps/libsodium/build/Makefile: | tmp/.deps deps/llvm-build\n\t@$(call color,configuring libsodium)\n\t@mkdir -p deps/libsodium/build\n\tcd deps/libsodium/build && ../configure --disable-shared CC=\"$(CC)\"\n\ndeps/libsodium/build/src/libsodium/.libs/libsodium.a: deps/libsodium/build/Makefile\n\t@$(call color,building libsodium)\n\tcd deps/libsodium/build && make -j$(PARALLEL)\n\n# ====================================================================\n# Ekam bootstrap and C++ binaries\n\ntmp/ekam-bin: tmp/.deps\n\t@mkdir -p tmp\n\t@rm -f tmp/ekam-bin\n\t@which ekam >/dev/null && ln -s \"`which ekam`\" tmp/ekam-bin || \\\n\t    (cd deps/ekam && $(MAKE) bin/ekam-bootstrap && \\\n\t     cd ../.. && ln -s ../deps/ekam/bin/ekam-bootstrap tmp/ekam-bin)\n\ntmp/.ekam-run: tmp/ekam-bin src/sandstorm/* tmp/.deps deps/boringssl/build/ssl/libssl.a deps/libsodium/build/src/libsodium/.libs/libsodium.a | deps/llvm-build\n\t@$(call color,building sandstorm with ekam)\n\t@CC=\"$(CC)\" CXX=\"$(CXX)\" CFLAGS=\"$(CFLAGS2)\" CXXFLAGS=\"$(CXXFLAGS2)\" \\\n\t    LIBS=\"$(LIBS2)\" NODEJS=$(NODEJS) tmp/ekam-bin -j$(PARALLEL)\n\t@touch tmp/.ekam-run\n\ncontinuous: tmp/.deps deps/boringssl/build/ssl/libssl.a deps/libsodium/build/src/libsodium/.libs/libsodium.a | deps/llvm-build\n\t@CC=\"$(CC)\" CXX=\"$(CXX)\" CFLAGS=\"$(CFLAGS2)\" CXXFLAGS=\"$(CXXFLAGS2)\" \\\n\t    LIBS=\"$(LIBS2)\" NODEJS=$(NODEJS) $(EKAM) -j$(PARALLEL) -c -n :41315 || \\\n\t    ($(call color,You probably need to install ekam and put it on your path; see github.com/sandstorm-io/ekam) && false)\n\n# ====================================================================\n# Front-end shell\n\nshell-env: tmp/.shell-env\n\n# Note that we need Ekam to build node_modules before we can run Meteor, hence\n# the dependency on tmp/.ekam-run.\ntmp/.shell-env: tmp/.ekam-run $(IMAGES) shell/imports/client/changelog.html shell/client/styles/_icons.scss shell/package.json shell/npm-shrinkwrap.json\n\t@$(call color,configuring meteor frontend)\n\t@mkdir -p tmp\n\t@mkdir -p node_modules/capnp\n\t@bash -O extglob -c 'cp src/capnp/!(*test*).capnp node_modules/capnp'\n\t@cd shell/ && PATH=$(METEOR_DEV_BUNDLE)/bin:$$PATH $(METEOR_DEV_BUNDLE)/bin/npm install\n\t@touch tmp/.shell-env\n\nicons/node_modules: icons/package.json\n\tcd icons && PATH=$(METEOR_DEV_BUNDLE)/bin:$$PATH $(METEOR_DEV_BUNDLE)/bin/npm install\n\nshell/client/styles/_icons.scss: icons/node_modules icons/*svg icons/Gruntfile.js\n\tcd icons && PATH=$(METEOR_DEV_BUNDLE)/bin:$$PATH ./node_modules/.bin/grunt\n\nshell/imports/client/changelog.html: CHANGELOG.md\n\t@mkdir -p tmp\n\t@echo '<template name=\"changelog\">' > tmp/changelog.html\n\t@markdown CHANGELOG.md >> tmp/changelog.html\n\t@echo '</template>' >> tmp/changelog.html\n\t@cp tmp/changelog.html shell/imports/client/changelog.html\n\nshell/public/close-FFFFFF.svg: icons/close.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#FFFFFF/g' < $< > $@\n\nshell/public/install-714DAA.svg: icons/install.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#714DAA/g' < $< > $@\n\nshell/public/install-896AC6.svg: icons/install.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#896AC6/g' < $< > $@\n\nshell/public/plus-6A237C.svg: icons/plus.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#6A237C/g' < $< > $@\n\nshell/public/plus-9E40B5.svg: icons/plus.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#9E40B5/g' < $< > $@\n\nshell/public/upload-B7B7B7.svg: icons/upload.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#B7B7B7/g' < $< > $@\n\nshell/public/upload-5D5D5D.svg: icons/upload.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#5D5D5D/g' < $< > $@\n\nshell/public/restore-B7B7B7.svg: icons/restore.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#B7B7B7/g' < $< > $@\n\nshell/public/restore-5D5D5D.svg: icons/restore.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#5D5D5D/g' < $< > $@\n\nshell/public/%.svg: icons/%.svg\n\t@$(call color,color for dark background $<)\n\t@sed -e 's/#111111/#CCCCCC/g' < $< > $@\n\nshell/public/google-color.svg: icons/google.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#a53232/g' < $< > $@\nshell/public/github-color.svg: icons/github.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#191919/g' < $< > $@\n\nshell/public/email-494949.svg: icons/email.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#494949/g' < $< > $@\n\nshell/public/question-a9a9a9.svg: icons/question.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#A9A9A9/g' < $< > $@\n\nshell/public/question-727272.svg: icons/question.svg\n\t@$(call color,custom color $<)\n\t@sed -e 's/#111111/#727272/g' < $< > $@\n\nshell/public/%-m.svg: icons/%.svg\n\t@$(call color,color for light background $<)\n\t@# Make completely black.\n\t@sed -e 's/#111111/#000000/g' < $< > $@\n\nshell-build: shell/imports/* shell/imports/*/* shell/imports/*/*/* shell/imports/*/*/*/* shell/client/main.ts shell/server/main.ts shell/public/* shell/i18n/* shell/.meteor/packages shell/.meteor/release shell/.meteor/versions tmp/.shell-env\n\t@$(call color,building meteor frontend)\n\t@test -z \"$$(find -L shell/* -type l)\" || (echo \"error: broken symlinks in shell: $$(find -L shell/* -type l)\" >&2 && exit 1)\n\t@OLD=`pwd` && cd shell && meteor build --directory \"$$OLD/shell-build\"\n\n# ====================================================================\n# Bundle\n\nbundle: tmp/.ekam-run shell-build make-bundle.sh localedata-C meteor-bundle-main.js\n\t@$(call color,bundle)\n\t@CC=$(CC) ./make-bundle.sh\n\nsandstorm-$(BUILD).tar.xz: bundle\n\t@$(call color,compress release bundle)\n\t@tar c --transform=\"s,^bundle,sandstorm-$(BUILD),\" bundle | xz -c -9e > sandstorm-$(BUILD).tar.xz\n\nsandstorm-$(BUILD)-fast.tar.xz: bundle\n\t@$(call color,compress fast bundle)\n\t@tar c --transform=\"s,^bundle,sandstorm-$(BUILD),\" bundle | xz -c -0 --threads=0 > sandstorm-$(BUILD)-fast.tar.xz\n\n# ====================================================================\n# app-index.spk\n\n# This is currently really really hacky because spk is not good at using a package definition file\n# that is not located at the root of the source tree. In particular it is hard for the package\n# definition file (living in the src tree) to refer to the `app-index` binary (living in the\n# tmp tree).\n#\n# TODO(cleanup): Make spk better so that it can handle this.\n\napp-index.spk: tmp/.ekam-run\n\t@cp src/sandstorm/app-index/app-index.capnp tmp/sandstorm/app-index/app-index.capnp\n\t@cp src/sandstorm/app-index/review.html tmp/sandstorm/app-index/review.html\n\tspk pack -Isrc -Itmp -ptmp/sandstorm/app-index/app-index.capnp:pkgdef app-index.spk\n\napp-index-dev: tmp/.ekam-run\n\t@cp src/sandstorm/app-index/app-index.capnp tmp/sandstorm/app-index/app-index.capnp\n\t@cp src/sandstorm/app-index/review.html tmp/sandstorm/app-index/review.html\n\tspk dev -Isrc -Itmp -ptmp/sandstorm/app-index/app-index.capnp:pkgdef\n\n# ====================================================================\n# test-app.spk\n\n# This is currently really really hacky because spk is not good at using a package definition file\n# that is not located at the root of the source tree. In particular it is hard for the package\n# definition file (living in the src tree) to refer to the `test-app` binary (living in the\n# tmp tree).\n#\n# TODO(cleanup): Make spk better so that it can handle this.\n\ntest-app.spk: tmp/.ekam-run\n\t@cp src/sandstorm/test-app/test-app.capnp tmp/sandstorm/test-app/test-app.capnp\n\t@cp src/sandstorm/test-app/*.html tmp/sandstorm/test-app\n\tbin/spk pack -ksrc/sandstorm/test-app/test-app.key -Isrc -Itmp -ptmp/sandstorm/test-app/test-app.capnp:pkgdef test-app.spk\n\ntest-app-dev: tmp/.ekam-run\n\t@cp src/sandstorm/test-app/test-app.capnp tmp/sandstorm/test-app/test-app.capnp\n\t@cp src/sandstorm/test-app/*.html tmp/sandstorm/test-app\n\tspk dev -Isrc -Itmp -ptmp/sandstorm/test-app/test-app.capnp:pkgdef\n\n# ====================================================================\n# meteor-testapp.spk\n\n$(METEOR_SPK):\n\t@$(call color,downloading meteor-spk)\n\t@curl https://dl.sandstorm.io/meteor-spk-$(METEOR_SPK_VERSION).tar.xz | tar Jxf -\n\nmeteor-testapp-dev: $(METEOR_SPK)\n\tcd meteor-testapp && PATH=\"$(PWD)/bin:$(PATH)\" \\\n\t\t$(METEOR_SPK) dev -I../src -I../tmp -s /opt/sandstorm\n\ntests/assets/meteor-testapp.spk: \\\n\t\tmeteor-testapp \\\n\t\t$(METEOR_SPK) \\\n\t\tmeteor-testapp/client/* \\\n\t\tmeteor-testapp/server/* \\\n\t\tmeteor-testapp/.meteor/*\n\t@cd meteor-testapp && PATH=\"$(PWD)/bin:$(PATH)\" \\\n\t\t$(METEOR_SPK) pack -kmeteor-testapp.key -I../src -I../tmp ../tests/assets/meteor-testapp.spk\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.814453125,
          "content": "# Sandstorm\n\nSandstorm is a self-hostable web productivity suite. It's implemented as a security-hardened web app package manager. Sandstorm makes it easy to run your own server.\n\nUse Sandstorm to install apps to create [documents](https://apps.sandstorm.io/app/h37dm17aa89yrd8zuqpdn36p6zntumtv08fjpu8a8zrte7q1cn60),\n[spreadsheets](https://apps.sandstorm.io/app/a0n6hwm32zjsrzes8gnjg734dh6jwt7x83xdgytspe761pe2asw0), [blogs](https://apps.sandstorm.io/app/aax9j672p6z8n7nyupzvj2nmumeqd4upa0f7mgu8gprwmy53x04h),\n[git repos](https://apps.sandstorm.io/app/zx9d3pt0fjh4uqrprjftgpqfwgzp6y2ena6098ug3ctv37uv6kfh), [task lists](https://apps.sandstorm.io/app/m86q05rdvj14yvn78ghaxynqz7u2svw6rnttptxx49g1785cdv1h), and\n[more](https://apps.sandstorm.io/) as easily as you'd install apps on your\nphone.\n\nSandstorm is open source and can be installed on any x86-64 Linux\nsystem.\n\n* Read more at: https://sandstorm.io/\n* Try the demo: https://demo.sandstorm.io/\n* Documentation available at: https://docs.sandstorm.io/\n\n## Installing\n\nSee [installation instructions in the Sandstorm documentation](https://docs.sandstorm.io/en/latest/install/).\n\n## Using Sandstorm\n\nSee [the overview in the Sandstorm documentation](https://docs.sandstorm.io/en/latest/using/).\n\n## How It Works\n\nSee [how it works](https://sandstorm.io/how-it-works) and [security practices](https://docs.sandstorm.io/en/latest/using/security-practices/) in the Sandstorm documentation.\n\n## How to Package Apps\n\nSee [the developer hub in the Sandstorm documentation](https://docs.sandstorm.io/en/latest/developing/).\n\n## Contribute\n\nWant to help? Check out [CONTRIBUTING.md](https://github.com/sandstorm-io/sandstorm/blob/master/CONTRIBUTING.md). Also see our [community page](https://sandstorm.io/community) or get on our [discussion group](https://groups.google.com/group/sandstorm-dev) and let us know!\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.443359375,
          "content": "# Security Policy\n\n## Supported Versions\n\nSandstorm operates on an evergreen release model. Only the latest release is considered supported.\n\n## Reporting a Vulnerability\n\nPlease report security vulnerabilities to security@sandstorm.io for responsible disclosure. We ask that you withhold public disclosure for at least 90 days after reporting the vulnerability or 48 hours after the release of fixed code which corrects the issue, whichever is shorter.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 5.1748046875,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  # We base ourselves off an official Debian base box.\n  config.vm.box = \"debian/bullseye64\"\n\n  # We forward port 6080, the Sandstorm web port, so that developers can\n  # visit their sandstorm app from their browser as local.sandstorm.io:6080\n  # (aka 127.0.0.1:6080).\n  config.vm.network :forwarded_port, guest: 6080, host: 6080, host_ip: \"127.0.0.1\"\n\n  # Create a link-local private address, so that the host can\n  # use NFS with the Virtualbox guest. Virtualbox/Vagrant handles\n  # network address translation so outbound network requests still\n  # work.\n  config.vm.provider :virtualbox do |vb, override|\n    override.vm.network :private_network, ip: \"192.254.254.2\"\n  end\n\n  # Use a shell script to \"provision\" the box. This installs Sandstorm using\n  # the bundled installer.\n  config.vm.provision \"shell\", inline: <<-EOF\n    set -e\n    cd /vagrant\n    echo localhost > /etc/hostname\n    hostname localhost\n    sudo apt-get update\n    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y curl gpg\n    sudo OVERRIDE_DEFAULT_SERVER_USER=vagrant ./install.sh -d -e > /dev/null\n    sudo usermod -a -G sandstorm vagrant\n    sudo sed --in-place='' --expression='s/^BIND_IP=.*/BIND_IP=0.0.0.0/' /opt/sandstorm/sandstorm.conf\n    sudo service sandstorm restart\n    printf '\\nYour server is online. It has the dev accounts feature enabled, so anyone can log in.'\n    printf '\\nDetails and customization instructions are available here:'\n    printf '\\n- https://github.com/sandstorm-io/sandstorm/wiki/Using-the-Vagrantfile'\n    printf '\\n'\n    printf '\\nVisit it at:'\n    printf '\\n  http://local.sandstorm.io:6080/'\n    printf '\\n'\nEOF\n\n  # Use NFS for the /vagrant shared directory, for performance and\n  # compatibility.\n  config.vm.synced_folder \".\", \"/vagrant\", type: \"nfs\", nfs_udp: false\n\n  # Calculate the number of CPUs and the amount of RAM the system has,\n  # in a platform-dependent way; further logic below.\n  cpus = nil\n  total_kB_ram = nil\n\n  host = RbConfig::CONFIG['host_os']\n  if host =~ /darwin/\n    cpus = `sysctl -n hw.ncpu`.to_i\n    total_kB_ram =  `sysctl -n hw.memsize`.to_i / 1024\n  elsif host =~ /linux/\n    cpus = `nproc`.to_i\n    total_kB_ram = `grep MemTotal /proc/meminfo | awk '{print $2}'`.to_i\n  elsif host =~ /mingw/\n    cpus = `powershell -Command \"(Get-WmiObject Win32_Processor -Property NumberOfLogicalProcessors | Select-Object -Property NumberOfLogicalProcessors | Measure-Object NumberOfLogicalProcessors -Sum).Sum\"`.to_i\n    total_kB_ram = `powershell -Command \"[math]::Round((Get-WmiObject -Class Win32_ComputerSystem).TotalPhysicalMemory)\"`.to_i / 1024\n  end\n\n  # Use the same number of CPUs within Vagrant as the system, with 1\n  # as a default.\n  #\n  # If we are unable to determine how much RAM the system has, use\n  # 1GB. Otherwise, we aim to use 1/4 of the system RAM, with a\n  # lower bound of 512MB and upper bound of 3GB. This is a compromise\n  # between having the Vagrant guest operating system not run out of\n  # RAM entirely (which it basically would if we went much lower than\n  # 512MB) and also allowing it to use up a healthily large amount of\n  # RAM so it can run faster on systems that can afford it.\n  assign_cpus = nil\n  assign_ram_mb = nil\n  if cpus.nil? or cpus.zero?\n    assign_cpus = 1\n  else\n    assign_cpus = cpus\n  end\n  if total_kB_ram.nil?\n    assign_ram_mb = 1024\n  else\n    assign_ram_mb = (total_kB_ram / 1024 / 4)\n    assign_ram_mb = [ 512, assign_ram_mb].max  # enforce lower bound\n    assign_ram_mb = [3072, assign_ram_mb].min  # enforce upper bound\n  end\n\n  # Actually provide the computed CPUs/memory to the backing provider.\n  config.vm.provider :virtualbox do |vb|\n    vb.cpus = assign_cpus\n    vb.memory = assign_ram_mb\n  end\n  config.vm.provider :libvirt do |libvirt|\n    libvirt.cpus = assign_cpus\n    libvirt.memory = assign_ram_mb\n  end\nend\n\n### If you're on Windows, and you want to SMB share the\n### /home/vagrant directory in the guest with your Windows\n### machines, run \"vagrant ssh\" then do the following:\n###\n### sudo apt-get install samba pwgen\n###\n### Then sudo nano -w /etc/samba/smb.conf and make it contain the\n### following, only remove the ### from the beginning of every line.\n###\n### [global]\n### workgroup = WORKGROUP\n### dns proxy = no\n### bind interfaces only = no\n### syslog only = yes\n### syslog = 1\n### server role = standalone server\n### passdb backend = tdbsam\n### obey pam restrictions = yes\n### unix password sync = no\n### pam password change = no\n### map to guest = bad user\n### usershare allow guests = no\n###\n### [vagranthome]\n### comment = Vagrant home\n### browseable = yes\n### create mask = 0750\n### directory mask = 0700\n### read only = no\n### valid users = vagrant\n### path = /home/vagrant\n###\n### Then set a password for the vagrant user on Linux and enable it for\n### samba use by running:\n###\n### pwgen -1  # generate a password\n###\n### sudo passwd vagrant\n### sudo smbpasswd -a vagrant\n###\n### Then restart the VM via \"vagrant reload\" and visit\n###\n### \\\\169.254.254.2\\vagranthome\n###\n### and log in with username vagrant (and password whatever\n### you set above).\n"
        },
        {
          "name": "acme-dns-01-sandcats",
          "type": "tree",
          "content": null
        },
        {
          "name": "app-index-sandstorm-files.list",
          "type": "blob",
          "size": 1.8359375,
          "content": "# *** WARNING: GENERATED FILE ***\n# This file is automatically updated and rewritten in sorted order every time\n# the app runs in dev mode. You may manually add or remove files, but don't\n# expect comments or ordering to be retained.\napp-index\nbin\netc/ld.so.cache\netc/localtime\netc/nsswitch.conf\netc/passwd\nlib\nlib64\nproc/cpuinfo\nrun/systemd/userdb\nsandstorm-manifest\nusr/bin/gpg\nusr/bin/xz\nusr/lib/x86_64-linux-gnu/ld-2.31.so\nusr/lib/x86_64-linux-gnu/libassuan.so.0\nusr/lib/x86_64-linux-gnu/libassuan.so.0.8.3\nusr/lib/x86_64-linux-gnu/libbz2.so.1.0\nusr/lib/x86_64-linux-gnu/libbz2.so.1.0.4\nusr/lib/x86_64-linux-gnu/libc-2.31.so\nusr/lib/x86_64-linux-gnu/libc.so.6\nusr/lib/x86_64-linux-gnu/libdl-2.31.so\nusr/lib/x86_64-linux-gnu/libdl.so.2\nusr/lib/x86_64-linux-gnu/libgcc_s.so.1\nusr/lib/x86_64-linux-gnu/libgcrypt.so.20\nusr/lib/x86_64-linux-gnu/libgcrypt.so.20.2.8\nusr/lib/x86_64-linux-gnu/libgpg-error.so.0\nusr/lib/x86_64-linux-gnu/libgpg-error.so.0.29.0\nusr/lib/x86_64-linux-gnu/liblzma.so.5\nusr/lib/x86_64-linux-gnu/liblzma.so.5.2.5\nusr/lib/x86_64-linux-gnu/libm-2.31.so\nusr/lib/x86_64-linux-gnu/libm.so.6\nusr/lib/x86_64-linux-gnu/libnss_files-2.31.so\nusr/lib/x86_64-linux-gnu/libnss_files.so.2\nusr/lib/x86_64-linux-gnu/libnss_systemd.so.2\nusr/lib/x86_64-linux-gnu/libpthread-2.31.so\nusr/lib/x86_64-linux-gnu/libpthread.so.0\nusr/lib/x86_64-linux-gnu/libreadline.so.8\nusr/lib/x86_64-linux-gnu/libreadline.so.8.1\nusr/lib/x86_64-linux-gnu/librt-2.31.so\nusr/lib/x86_64-linux-gnu/librt.so.1\nusr/lib/x86_64-linux-gnu/libsqlite3.so.0\nusr/lib/x86_64-linux-gnu/libsqlite3.so.0.8.6\nusr/lib/x86_64-linux-gnu/libstdc++.so.6\nusr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28\nusr/lib/x86_64-linux-gnu/libtinfo.so.6\nusr/lib/x86_64-linux-gnu/libtinfo.so.6.2\nusr/lib/x86_64-linux-gnu/libz.so.1\nusr/lib/x86_64-linux-gnu/libz.so.1.2.11\nusr/lib64/ld-linux-x86-64.so.2\nusr/share/zoneinfo/America/Chicago\n"
        },
        {
          "name": "branch.conf",
          "type": "blob",
          "size": 1.150390625,
          "content": "# We use trunk-based-development. Development happens in the master branch and\n# we create a side branch for each stable track.\n#\n# We actually build releases both from master and stable branches. Each release\n# gets a unique build number.\n#\n# The \"channels\" (dev, beta, stable) are pointers to particular build numbers.\n# Generally, \"dev\" points to a release made directly from trunk. When a new\n# branch is created, its first few releases go into the \"beta\" channel. Once it\n# is considered stable, the releases start going into the \"stable\" channel. Old\n# branches are discarded as soon as a newer branch is considered stable.\n\nBRANCH_NUMBER=0\n# Each time we create a new release branch, it inherits BRANCH_NUMBER and then\n# we increment the number in the master branch. Hence, the master branch's\n# number is always larger than that of any existing stable branch.\n#\n# Build numbers for each new branch start and BRANCH_NUMBER*1000. Thus,\n# higher-numbered builds are strictly more-featureful than lower-numbered ones\n# (since we only down-integrate bugfixes).\n\nIS_STABLE=false\n# Set true when a branch is considered stable. This should never be true in the\n# master branch.\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "find-meteor-dev-bundle.sh",
          "type": "blob",
          "size": 2.40625,
          "content": "#! /bin/bash\n#\n# Sandstorm - Personal Cloud Sandbox\n# Copyright (c) 2014 Sandstorm Development Group, Inc. and contributors\n# All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This script attempts to find Meteor's \"dev bundle\", which contains the node\n# and mongo binaries and headers, so that we can borrow them rather than making\n# users install them separately.\n#\n# Currently this script is not quite right. It tries to find the most-recent\n# bundle, but we should probably take the bundle matching the Meteor version\n# that Sandstorm is currently using. Moreover, it appears that this script's\n# technique sometimes ends up with an *older* bundle than the most-recent, I\n# guess because Meteor is sometimes lazy about updating the main `meteor`\n# command's symlink. I have not yet deciphered enough about the Meteor\n# warehouse's layout to figure out how to map directly from a version to a\n# dev bundle.\n\nset -euo pipefail\n\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\n\nMETEOR_WAREHOUSE_DIR=\"${METEOR_WAREHOUSE_DIR:-$HOME/.meteor}\"\n\n# If we run the meteor tool outside of `shell`, it might try to update itself. Inside `shell`, it\n# sees the meteor version we're using and sticks to that.\ncd \"$SCRIPT_DIR/shell\"\n\nMETEOR_RELEASE=${1:-$(<.meteor/release)}\nCACHE_FILE=\"../tmp/$METEOR_RELEASE.location\"\n\nmkdir -p ../tmp\nif [ -s \"$CACHE_FILE\" ]; then\n  cat \"$CACHE_FILE\"\n  exit\nfi\n\necho -n \"Finding meteor-tool installation (can take a few seconds)...\" >&2\n\n# TODO(cleanup): It would be nice to use a real JSON parser here, but I don't particularly want\n#   to depend on one, nor do I want to depend on Node being installed.\nTOOL_VERSION=$(meteor show --ejson $METEOR_RELEASE | grep '^ *\"tool\":' |\n    sed -re 's/^.*\"(meteor-tool@[^\"]*)\".*$/\\1/g')\n\nTOOLDIR=$(echo $TOOL_VERSION | tr @ /)\n\necho \" $TOOL_VERSION\" >&2\n\nreadlink -f $METEOR_WAREHOUSE_DIR/packages/$TOOLDIR/mt-os.linux.x86_64/dev_bundle > \"$CACHE_FILE\"\ncat \"$CACHE_FILE\"\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 76.7412109375,
          "content": "#! /bin/bash\n\n# This script installs the Sandstorm Personal Cloud Server on your Linux\n# machine. You can run the latest installer directly from the web by doing:\n#\n#     curl https://install.sandstorm.io | bash\n#\n# If `curl|bash` makes you uncomfortable, see other options here:\n#\n#     https://docs.sandstorm.io/en/latest/install/\n#\n# This script only modifies your system in the following ways:\n# - Install Sandstorm into the directory you choose, typically /opt/sandstorm.\n# - Optionally add an initscript or systemd service:\n#     /etc/init.d/sandstorm\n#     /etc/systemd/system/sandstorm.service\n# - Add commands \"sandstorm\" and \"spk\" to /usr/local/bin.\n#\n# Once installed, you may uninstall with the command: sandstorm uninstall\n#\n# The script will ask you whether you're OK with giving it root privileges.\n# If you refuse, the script can still install Sandstorm (to a directory you\n# own), but will not be able to install the initscript or shortcut commands,\n# and the dev tools will not work (due to limitations with using FUSE in a\n# sandbox).\n#\n# This script downloads and installs binaries. This means that to use this\n# script, you need to trust that the authors are not evil, or you must use\n# an isolated machine or VM. Of course, since the Sandstorm authors'\n# identities are widely known, if they did try to do anything evil, you\n# could easily get them arrested. That said, if you'd rather install from\n# 100% auditable source code, please check out the Github repository instead.\n#\n# All downloads occur over HTTPS from Sandstorm's servers and are further\n# verified using PGP.\n\nif test -z \"$BASH_VERSION\"; then\n  echo \"Please run this script using bash, not sh or any other shell.\" >&2\n  exit 1\nfi\n\n# We wrap the entire script in a big function which we only call at the very end, in order to\n# protect against the possibility of the connection dying mid-script. This protects us against\n# the problem described in this blog post:\n#   http://blog.existentialize.com/dont-pipe-to-your-shell.html\n_() {\n\nset -euo pipefail\n\n# Declare an array so that we can capture the original arguments.\ndeclare -a ORIGINAL_ARGS\n\n# Allow the environment to override curl's User-Agent parameter. We\n# use this to distinguish probably-actual-users installing Sandstorm\n# from the automated test suite, which invokes the install script with\n# this environment variable set.\nCURL_USER_AGENT=\"${CURL_USER_AGENT:-sandstorm-install-script}\"\n\n# Define I/O helper functions.\nerror() {\n  if [ $# != 0 ]; then\n    echo -en '\\e[0;31m' >&2\n    echo \"$@\" | (fold -s || cat) >&2\n    echo -en '\\e[0m' >&2\n  fi\n}\n\nfail() {\n  local error_code=\"$1\"\n  shift\n  if [ \"${SHOW_FAILURE_MSG:-yes}\" = \"yes\" ] ; then\n    echo \"*** INSTALLATION FAILED ***\" >&2\n    echo \"\"\n  fi\n  error \"$@\"\n  echo \"\" >&2\n\n  if [ \"$error_code\" = E_CURL_MISSING ] ; then\n    # There's no point in asking the user if they want to report an issue, since\n    # (1) there isn't one, they just need to install curl, and (2) doing so will\n    # fail anyway, since we use curl to send the report. We've already displayed\n    # the error, so just exit now.\n    exit 1\n  fi\n\n  # Users can export REPORT=no to avoid the error-reporting behavior, if they need to.\n  if [ \"${REPORT:-yes}\" = \"yes\" ] ; then\n    if USE_DEFAULTS=no prompt-yesno \"Hmm, installation failed. Would it be OK to send an anonymous error report to the sandstorm.io team so we know something is wrong?\nIt would only contain this error code: $error_code\" \"yes\" ; then\n      echo \"Sending problem report...\" >&2\n      local BEARER_TOKEN=\"4-Og3Ty2SPmpkZGnVc_8hnBGXK0JBBXDeBn_55FWixJ\"\n      local API_ENDPOINT=\"https://alpha-api-df09d5faefd551337b59659de8ae7207.sandstorm.io\"\n      local HTTP_STATUS=$(\n        dotdotdot_curl \\\n          --silent \\\n          --max-time 20 \\\n          --data-binary \"{\\\"error_code\\\":\\\"$error_code\\\",\\\"user-agent\\\":\\\"$CURL_USER_AGENT\\\"}\" \\\n          -H \"Authorization: Bearer $BEARER_TOKEN\" \\\n          -X POST \\\n          --output \"/dev/null\" \\\n          -w '%{http_code}' \\\n          \"$API_ENDPOINT\")\n      if [ \"200\" == \"$HTTP_STATUS\" ] ; then\n        echo \"... problem reported successfully. Your installation did not succeed.\" >&2\n      elif [ \"000\" == \"$HTTP_STATUS\" ] ; then\n        error \"Submitting error report failed. Maybe there is a connectivity problem.\"\n      else\n        error \"Submitting error report resulted in strange HTTP status: $HTTP_STATUS\"\n      fi\n    else\n      echo \"Not sending report.\" >&2\n    fi\n    echo \"\"\n  fi\n  echo \"You can report bugs at: http://github.com/sandstorm-io/sandstorm\" >&2\n  exit 1\n}\n\nretryable_curl() {\n  # This function calls curl to download a file. If the file download fails, it asks the user if it\n  # is OK to retry.\n  local CURL_FAILED=\"no\"\n  curl -A \"${CURL_USER_AGENT}\" -f \"$1\" > \"$2\" || CURL_FAILED=\"yes\"\n  if [ \"yes\" = \"${CURL_FAILED}\" ] ; then\n    if prompt-yesno \"Downloading $1 failed. OK to retry?\" \"yes\" ; then\n      echo \"\" >&2\n      echo \"Download failed. Waiting one second before retrying...\" >&2\n      sleep 1\n      retryable_curl \"$1\" \"$2\"\n    fi\n  fi\n}\n\ndotdotdot_curl() {\n  # This function calls curl, but first prints \"...\" to the screen, in\n  # an attempt to indicate to the user that the script is waiting on\n  # something.\n  #\n  # It then moves the cursor to the start of the line, so that future\n  # echo-ing will overwrite those dots.\n  #\n  # Since the script is -e, and in general we don't have a reliable\n  # thing that we do in the case that curl exits with a non-zero\n  # status code, we don't capture the status code; we allow the script\n  # to abort if curl exits with a non-zero status.\n\n  # Functions calling dotdotdot_curl expect to capture curl's own\n  # stdout. Therefore we do our echo-ing to stderr.\n\n  echo -n '...' >&2\n\n  curl \"$@\"\n\n  echo -ne '\\r' >&2\n}\n\nis_port_bound() {\n  local SCAN_HOST=\"$1\"\n  local SCAN_PORT=\"$2\"\n\n  if [ \"${DEV_TCP_USABLE}\" = \"unchecked\" ] ; then\n    REPORT=no fail \"E_DEV_TCP_UNCHECKED\" \"Programmer error. The author of install.sh used an uninitialized variable.\"\n  fi\n\n  # We also use timeout(1) from coreutils to avoid this process taking a very long\n  # time in the case of e.g. weird network rules or something.\n  if [ \"${DEV_TCP_USABLE}\" = \"yes\" ] ; then\n    if timeout 1 bash -c \": < /dev/tcp/${SCAN_HOST}/${SCAN_PORT}\" 2>/dev/null; then\n      return 0\n    else\n      return 1\n    fi\n  fi\n\n  # If we are using a traditional netcat, then -z (zero i/o mode)\n  # works for scanning-type uses. (Debian defaults to this.)\n  #\n  # If we are using the netcat from the nmap package, then we can use\n  # --recv-only --send-only to get the same behavior. (Fedora defaults\n  # to this.)\n  #\n  # nc will either:\n  #\n  # - return true (exit 0) if it connected to the port, or\n  #\n  # - return false (exit 1) if it failed to connect to the port, or\n  #\n  # - return false (exit 1) if we are passing it the wrong flags.\n  #\n  # So if either if these invocations returns true, then we know the\n  # port is bound.\n  local DEBIAN_STYLE_INDICATED_BOUND=\"no\"\n  ${NC_PATH} -z \"$SCAN_HOST\" \"$SCAN_PORT\" >/dev/null 2>/dev/null && DEBIAN_STYLE_INDICATED_BOUND=yes\n\n  if [ \"$DEBIAN_STYLE_INDICATED_BOUND\" == \"yes\" ] ; then\n      return 0\n  fi\n\n  # Not sure yet. Let's try the nmap-style way.\n  local NMAP_STYLE_INDICATED_BOUND=\"no\"\n  ${NC_PATH} --wait 1 --recv-only --send-only \"$SCAN_HOST\" \"$SCAN_PORT\" >/dev/null 2>/dev/null && \\\n      NMAP_STYLE_INDICATED_BOUND=yes\n\n  if [ \"$NMAP_STYLE_INDICATED_BOUND\" == \"yes\" ] ; then\n      return 0\n  fi\n\n  # As far as we can tell, nmap can't connect to the port, so return 1\n  # to indicate it is not bound.\n  return 1\n}\n\n# writeConfig takes a list of shell variable names and saves them, and\n# their contents, to stdout. Therefore, the caller should redirect its\n# output to a config file.\nwriteConfig() {\n  while [ $# -gt 0 ]; do\n    eval echo \"$1=\\$$1\"\n    shift\n  done\n}\n\nprompt() {\n  local VALUE\n\n  # Hack: We read from FD 3 because when reading the script from a pipe, FD 0 is the script, not\n  #   the terminal. We checked above that FD 1 (stdout) is in fact a terminal and then dup it to\n  #   FD 3, thus we can input from FD 3 here.\n  if [ \"yes\" = \"$USE_DEFAULTS\" ] ; then\n    # Print the default.\n    echo \"$2\"\n    return\n  fi\n\n  # We use \"bold\", rather than any particular color, to maximize readability. See #2037.\n  echo -en '\\e[1m' >&3\n  echo -n \"$1 [$2]\" >&3\n  echo -en '\\e[0m ' >&3\n  read -u 3 VALUE\n  if [ -z \"$VALUE\" ]; then\n    VALUE=$2\n  fi\n  echo \"$VALUE\"\n}\n\nprompt-numeric() {\n  local NUMERIC_REGEX=\"^[0-9]+$\"\n  while true; do\n    local VALUE=$(prompt \"$@\")\n\n    if ! [[ \"$VALUE\" =~ $NUMERIC_REGEX ]] ; then\n      echo \"You entered '$VALUE'. Please enter a number.\" >&3\n    else\n      echo \"$VALUE\"\n      return\n    fi\n  done\n}\n\nprompt-yesno() {\n  while true; do\n    local VALUE=$(prompt \"$@\")\n\n    case $VALUE in\n      y | Y | yes | YES | Yes )\n        return 0\n        ;;\n      n | N | no | NO | No )\n        return 1\n        ;;\n    esac\n\n    echo \"*** Please answer \\\"yes\\\" or \\\"no\\\".\"\n  done\n}\n\n# Define global variables that the install script will use to mark its\n# own progress.\n\nUSE_DEFAULTS=\"no\"\nUSE_EXTERNAL_INTERFACE=\"no\"\nUSE_SANDCATS=\"no\"\nSANDCATS_SUCCESSFUL=\"no\"\nUSE_HTTPS=\"no\"\nCURRENTLY_UID_ZERO=\"no\"\nPREFER_ROOT=\"yes\"\nSHOW_MESSAGE_ABOUT_NEEDING_PORTS_OPEN=\"no\"\nSTARTED_SANDSTORM=\"no\"\n\n# Allow the test suite to override the path to netcat in order to\n# reproduce a compatibility issue between different nc versions.\nNC_PATH=\"${OVERRIDE_NC_PATH:-nc}\"\n\n# Allow install.sh to store if bash /dev/tcp works.\nDEV_TCP_USABLE=\"unchecked\"\n\n# Defaults for some config options, so that if the user requests no\n# prompting, they get these values.\nDEFAULT_DIR_FOR_ROOT=\"${OVERRIDE_SANDSTORM_DEFAULT_DIR:-/opt/sandstorm}\"\nDEFAULT_DIR_FOR_NON_ROOT=\"${OVERRIDE_SANDSTORM_DEFAULT_DIR:-${HOME:-opt}/sandstorm}\"\nDEFAULT_SMTP_PORT=\"30025\"\nDEFAULT_UPDATE_CHANNEL=\"dev\"\nDEFAULT_SERVER_USER=\"${OVERRIDE_SANDSTORM_DEFAULT_SERVER_USER:-sandstorm}\"\nSANDCATS_BASE_DOMAIN=\"${OVERRIDE_SANDCATS_BASE_DOMAIN:-sandcats.io}\"\nALLOW_DEV_ACCOUNTS=\"false\"\n\n# Define functions for each stage of the install process.\n\nusage() {\n  echo \"usage: $SCRIPT_NAME [-d] [-e] [-p PORT_NUMBER] [-u] [<bundle>]\" >&2\n  echo \"If <bundle> is provided, it must be the name of a Sandstorm bundle file,\" >&2\n  echo \"like 'sandstorm-123.tar.xz', which will be installed. Otherwise, the script\" >&2\n  echo \"downloads a bundle from the internet via HTTPS.\" >&2\n  echo '' >&2\n  echo 'If -d is specified, the auto-installs with defaults suitable for app development.' >&2\n  echo 'If -e is specified, default to listening on an external interface, not merely loopback.' >&2\n  echo 'If -i is specified, default to (i)nsecure mode where we do not request a HTTPS certificate.' >&2\n  echo 'If -p is specified, use its argument (PORT_NUMBER) as the default port for HTTP. Otherwise, use 6080. Note that if the install script enables HTTPS, it will use 443 instead!'\n  echo 'If -u is specified, default to avoiding root priviliges. Note that the dev tools only work if the server has root privileges.' >&2\n  exit 1\n}\n\ndetect_current_uid() {\n  if [ $(id -u) = 0 ]; then\n    CURRENTLY_UID_ZERO=\"yes\"\n  fi\n}\n\ndisable_smtp_port_25_if_port_unavailable() {\n  PORT_25_AVAILABLE=\"no\"\n  if is_port_bound 0.0.0.0 25; then\n    return\n  fi\n  if is_port_bound 127.0.0.1 25; then\n    return\n  fi\n  PORT_25_AVAILABLE=\"yes\"\n}\n\ncheck_if_ports_unavailable() {\n  local PORT_80_AVAILABLE=\"no\"\n  is_port_bound 0.0.0.0 80 || PORT_80_AVAILABLE=\"yes\"\n\n  local PORT_443_AVAILABLE=\"no\"\n  is_port_bound 0.0.0.0 443 || PORT_443_AVAILABLE=\"yes\"\n\n  if [ \"$PORT_443_AVAILABLE\" == \"no\" -o \"$PORT_80_AVAILABLE\" == \"no\" ] ; then\n    SHOW_MESSAGE_ABOUT_NEEDING_PORTS_OPEN=\"yes\"\n  fi\n}\n\n\nhandle_args() {\n  SCRIPT_NAME=$1\n  shift\n\n  while getopts \":deiup:\" opt; do\n    case $opt in\n      d)\n        USE_DEFAULTS=\"yes\"\n        ;;\n      e)\n        USE_EXTERNAL_INTERFACE=\"yes\"\n        ;;\n      i)\n        # TODO(soon): Fix or remove this option, which currently does nothing\n        ;;\n      u)\n        PREFER_ROOT=no\n        ;;\n      p)\n        DEFAULT_PORT=\"${OPTARG}\"\n        ;;\n      *)\n        usage\n        ;;\n    esac\n  done\n\n  # If DEFAULT_PORT didn't get set above, set it to 6080 here.\n  DEFAULT_PORT=\"${DEFAULT_PORT:-6080}\"\n\n  # Keep a copy of the ORIGINAL_ARGS so that, when re-execing ourself,\n  # we can pass them in.\n  ORIGINAL_ARGS=(\"$@\")\n\n  # Pass positional parameters through\n  shift \"$((OPTIND - 1))\"\n\n  if [ $# = 1 ] && [[ ! $1 =~ ^- ]]; then\n    BUNDLE_FILE=\"$1\"\n  elif [ $# != 0 ]; then\n    usage\n  fi\n}\n\nrerun_script_as_root() {\n  # Note: This function assumes that the caller has requested\n  # permission to use sudo!\n\n  # Pass $@ here to enable the caller to provide environment\n  # variables to bash, which will affect the execution plan of\n  # the resulting install script run.\n\n  # Remove newlines in $@, otherwise when we try to use $@ in a string passed\n  # to 'bash -c' the command gets cut off at the newline. ($@ contains newlines\n  # because at the call site we used escaped newlines for readability.)\n  local ENVVARS=$(echo $@)\n\n  # Add CURL_USER_AGENT to ENVVARS, since we always need to pass this\n  # through.\n  ENVVARS=\"$ENVVARS CURL_USER_AGENT=$CURL_USER_AGENT\"\n\n  if [ \"$(basename $SCRIPT_NAME)\" == bash ]; then\n    # Probably ran like \"curl https://sandstorm.io/install.sh | bash\"\n    echo \"Re-running script as root...\"\n\n    exec sudo bash -euo pipefail -c \"curl -fs -A $CURL_USER_AGENT https://install.sandstorm.io | $ENVVARS bash\"\n  elif [ \"$(basename $SCRIPT_NAME)\" == install.sh ] && [ -e \"$0\" ]; then\n    # Probably ran like \"bash install.sh\" or \"./install.sh\".\n    echo \"Re-running script as root...\"\n    if [ ${#ORIGINAL_ARGS[@]} = 0 ]; then\n      exec sudo $ENVVARS bash \"$SCRIPT_NAME\"\n    else\n      exec sudo $ENVVARS bash \"$SCRIPT_NAME\" \"${ORIGINAL_ARGS[@]}\"\n    fi\n  fi\n\n  # Don't know how to run the script. Let the user figure it out.\n  REPORT=no fail \"E_CANT_SWITCH_TO_ROOT\" \"ERROR: This script could not detect its own filename, so could not switch to root. \\\nPlease download a copy and name it 'install.sh' and run that as root, perhaps using sudo. \\\nTry this command:\n\ncurl https://install.sandstorm.io/ > install.sh && sudo bash install.sh\"\n}\n\nset_umask() {\n  # Use umask 0022, to minimize how much 'mkdir -m' we have to do, etc. See #2300.\n  umask 0022\n}\n\nassert_on_terminal() {\n  if [ \"no\" = \"$USE_DEFAULTS\" ] && [ ! -t 1 ]; then\n    REPORT=no fail \"E_NO_TTY\" \"This script is interactive. Please run it on a terminal.\"\n  fi\n\n  # Hack: If the script is being read in from a pipe, then FD 0 is not the terminal input. But we\n  #   need input from the user! We just verified that FD 1 is a terminal, therefore we expect that\n  #   we can actually read from it instead. However, \"read -u 1\" in a script results in\n  #   \"Bad file descriptor\", even though it clearly isn't bad (weirdly, in an interactive shell,\n  #   \"read -u 1\" works fine). So, we clone FD 1 to FD 3 and then use that -- bash seems OK with\n  #   this.\n  exec 3<&1\n}\n\nassert_linux_x86_64() {\n  if [ \"$(uname)\" != Linux ]; then\n    fail \"E_NON_LINUX\" \"Sandstorm requires Linux. If you want to run Sandstorm on a Windows or\nMac system, you can use Vagrant or another virtualization tool. See our install documentation:\n\n- https://docs.sandstorm.io/en/latest/install/\"\n  fi\n\n  if [ \"$(uname -m)\" != x86_64 ]; then\n    fail \"E_NON_X86_64\" \"Sorry, the Sandstorm server currently only runs on x86_64 machines.\"\n  fi\n}\n\nassert_usable_kernel() {\n  KVERSION=( $(uname -r | grep -o '^[0-9.]*' | tr . ' ') )\n\n  if (( KVERSION[0] < 3 || (KVERSION[0] == 3 && KVERSION[1] < 10) )); then\n    error \"Detected Linux kernel version: $(uname -r)\"\n    fail \"E_KERNEL_OLDER_THAN_310\" \"Sorry, your kernel is too old to run Sandstorm. We require kernel\" \\\n         \"version 3.10 or newer.\"\n  fi\n}\n\nmaybe_enable_userns_sysctl() {\n  # This function enables the Debian/Ubuntu-specific unprivileged\n  # userns sysctl, if the system has it and we want it.\n\n  if [ \"$USE_DEFAULTS\" != \"yes\" ] ; then\n    # Only do this when -d is passed. -d means \"use defaults suitable for app development\", and\n    # we want userns enabled for app development if possible since it enables UID randomization\n    # which helps catch app bugs. For the rest of the world, we're fine using the privileged\n    # sandbox instead.\n    return\n  fi\n\n  if [ \"no\" = \"$CURRENTLY_UID_ZERO\" ] ; then\n    # Not root. Can't do anything about it.\n    return\n  fi\n\n  if [ ! -e /proc/sys/kernel/unprivileged_userns_clone ]; then\n    # No such sysctl on this system.\n    return\n  fi\n\n  local OLD_VALUE=\"$(< /proc/sys/kernel/unprivileged_userns_clone)\"\n\n  if [ \"$OLD_VALUE\" = \"1\" ]; then\n    # Already enabled.\n    return\n  fi\n\n  # Enable it.\n  if sysctl -wq kernel.unprivileged_userns_clone=1 2>/dev/null; then\n    echo \"NOTE: Enabled unprivileged user namespaces because you passed -d.\"\n  else\n    # Apparently we can't. Maybe we're in a Docker container. Give up and use privileged sandbox.\n    return\n  fi\n\n  # Also make sure it is re-enabled on boot. If sysctl.d exists, we drop our own config in there.\n  # Otherwise we edit sysctl.conf, but that's less polite.\n  local SYSCTL_FILENAME=\"/etc/sysctl.conf\"\n  if [ -d /etc/sysctl.d ] ; then\n    SYSCTL_FILENAME=\"/etc/sysctl.d/50-sandstorm.conf\"\n  fi\n\n  if ! cat >> \"$SYSCTL_FILENAME\" << __EOF__\n\n# Enable non-root users to create sandboxes (needed by Sandstorm).\nkernel.unprivileged_userns_clone = 1\n__EOF__\n  then\n    # We couldn't make the change permanent, so undo the change. Probably everything will work\n    # fine with the privileged sandbox. But if it doesn't, it's better that things fail now rather\n    # than wait for a reboot.\n    echo \"NOTE: Never mind, not enabling userns because can't write /etc/sysctl.d.\"\n    sysctl -wq \"kernel.unprivileged_userns_clone=$OLD_VALUE\" || true\n    return\n  fi\n}\n\ntest_if_dev_tcp_works() {\n  # In is_port_bound(), we prefer to use bash /dev/tcp to check if the port is bound. This is\n  # available on most Linux distributions, but it is a compile-time flag for bash and at least\n  # Debian historically disabled it.\n  #\n  # To test availability, we connect to localhost port 0, which is never available, hoping for a\n  # TCP-related error message from bash. We use a subshell here because we don't care that timeout\n  # will return false; we care if the grep returns false.\n  if (timeout 1 bash -c ': < /dev/tcp/localhost/0' 2>&1 || true) | grep -q 'connect:' ; then\n    # Good! bash should get \"Connection refused\" on this, and this message is prefixed\n    # by the syscall it was trying to do, so therefore it tried to connect!\n    DEV_TCP_USABLE=\"yes\"\n  else\n    DEV_TCP_USABLE=\"no\"\n  fi\n}\n\nassert_dependencies() {\n  if [ -z \"${BUNDLE_FILE:-}\" ]; then\n    which curl > /dev/null|| fail \"E_CURL_MISSING\" \"Please install curl(1). Sandstorm uses it to download updates.\"\n  fi\n\n  # To find out if port 80 and 443 are available, we need a working bash /dev/net or `nc` on\n  # the path.\n  if [ \"${DEV_TCP_USABLE}\" = \"unchecked\" ] ; then\n    test_if_dev_tcp_works\n  fi\n  if [ \"${DEV_TCP_USABLE}\" = \"no\" ] ; then\n    which nc > /dev/null || fail \"E_NC_MISSING\" \"Please install nc(1). (Package may be called 'netcat-traditional' or 'netcat-openbsd'.)\"\n  fi\n\n  which tar > /dev/null || fail \"E_TAR_MISSING\" \"Please install tar(1).\"\n  which xz > /dev/null || fail \"E_XZ_MISSING\" \"Please install xz(1). (Package may be called 'xz-utils'.)\"\n}\n\nassert_valid_bundle_file() {\n  # ========================================================================================\n  # Validate bundle file, if provided\n\n  if [ -n \"${BUNDLE_FILE:-}\" ]; then\n    # Read the first filename out of the bundle, which should be the root directory name.\n    # We use \"|| true\" here because tar is going to SIGPIPE when `head` exits.\n    BUNDLE_DIR=$( (tar Jtf \"$BUNDLE_FILE\" || true) | head -n 1)\n    if [[ ! \"$BUNDLE_DIR\" =~ sandstorm-([0-9]+)/ ]]; then\n      fail \"E_INVALID_BUNDLE\" \"$BUNDLE_FILE: Not a valid Sandstorm bundle\"\n    fi\n\n    BUILD=${BASH_REMATCH[1]}\n\n    # We're going to change directory, so note the bundle's full name.\n    BUNDLE_FILE=$(readlink -f \"$BUNDLE_FILE\")\n  fi\n}\n\ndetect_init_system() {\n  # We start out by not knowing which init system is in use.\n  INIT_SYSTEM=\"unknown\"\n\n  # We look for systemd, since we have a nice way to generate a unit file.\n  if grep -q systemd /proc/1/comm; then\n    INIT_SYSTEM=\"systemd\"\n    return\n  fi\n\n  # We look for sysvinit, as a convenient fallback. Note that this\n  # should work fine with Upstart (on e.g. Ubuntu 14.04), too.\n  if [ -e /etc/init.d ]; then\n    INIT_SYSTEM=\"sysvinit\"\n    return\n  fi\n\n  # If we got this far, and we couldn't figure out the init system\n  # in use, that's life.\n}\n\nchoose_install_mode() {\n  echo -n 'Sandstorm makes it easy to run web apps on your own server. '\n\n  if [ \"yes\" = \"$USE_DEFAULTS\" ] ; then\n    CHOSEN_INSTALL_MODE=\"${CHOSEN_INSTALL_MODE:-development}\"  # dev server mode by default\n  fi\n\n  if [ \"no\" = \"${PREFER_ROOT:-}\" ] ; then\n    echo \"\"\n    echo \"NOTE: Showing you all options, including development options, but omitting \"\n    echo \"      init script automation, because you chose to install without using root.\"\n    CHOSEN_INSTALL_MODE=\"${CHOSEN_INSTALL_MODE:-development}\"  # dev server mode by default\n  fi\n\n  if [ -z \"${CHOSEN_INSTALL_MODE:-}\" ]; then\n    echo \"You can have:\"\n    echo \"\"\n    echo \"1. A typical install, to use Sandstorm (press enter to accept this default)\"\n    echo \"2. A development server, for working on Sandstorm itself or localhost-based app development\"\n    echo \"\"\n    CHOSEN_INSTALL_MODE=$(prompt-numeric \"How are you going to use this Sandstorm install?\" \"1\")\n  fi\n\n  if [ \"$CHOSEN_INSTALL_MODE\" = \"production\" ] || [ \"$CHOSEN_INSTALL_MODE\" = \"1\" ] ; then\n    assert_full_server_dependencies\n    full_server_install\n  else\n    dev_server_install\n  fi\n}\n\nassert_full_server_dependencies() {\n  # To set up sandcats, we need `openssl` on the path. Check for that,\n  # and if it is missing, bail out and tell the user they have to\n  # install it.\n  which openssl > /dev/null|| fail \"E_OPENSSL_MISSING\" \"Please install openssl(1). Sandstorm uses it for the Sandcats.io dynamic DNS service.\"\n}\n\ndev_server_install() {\n  # Use these settings for a dev-server-oriented install.\n  #\n  # Users will find themselves going through this flow if they\n  # manually choose a dev-server-related flow, but also if they pass\n  # -d on the command line. (The Vagrantfile and the test suite both\n  # use -d. The test suite runs install.sh with -d -u.)\n  #\n  # A \"dev server install\" must be run as root, unless you pass\n  # -u. That's because app development (aka spk dev) requires running\n  # as root, at the moment.\n\n  if [ \"yes\" = \"$PREFER_ROOT\" ] && [ \"no\" = \"$CURRENTLY_UID_ZERO\" ] ; then\n    # We are not root, but we would like to be root.\n    echo \"If you want app developer mode for a Sandstorm install, you need root\"\n    echo \"due to limitations in the Linux kernel.\"\n    echo \"\"\n\n    echo \"To set up Sandstorm, we will use sudo to switch to root, then\"\n    echo \"provide further information before doing the install.\"\n    echo \"Sandstorm's database and web interface won't run as root.\"\n\n    # If we are running in USE_DEFAULTS mode, then it is not OK to ask\n    # for permission to use sudo.\n    if [ \"yes\" = \"$USE_DEFAULTS\" ] ; then\n      ACCEPTED_SUDO_FOR_DEV_SERVER=\"no\"\n    else\n      if prompt-yesno \"OK to continue?\" \"yes\" ; then\n        ACCEPTED_SUDO_FOR_DEV_SERVER=\"yes\"\n      else\n        ACCEPTED_SUDO_FOR_DEV_SERVER=\"no\"\n      fi\n    fi\n\n    if [ \"yes\" = \"$ACCEPTED_SUDO_FOR_DEV_SERVER\" ] ; then\n      rerun_script_as_root CHOSEN_INSTALL_MODE=development\n    else\n      # Print a message that allows people to make an informed decision.\n      SHOW_FAILURE_MSG=no REPORT=no fail \"E_NEED_ROOT\" \"\nOne development feature does require root. To install anyway, run:\n\ninstall.sh -u\n\nto install without using root access. In that case, Sandstorm will operate OK but package tracing ('spk dev') will not work.\"\n    fi\n  fi\n\n  # If they did not pass -d, then let them opt into that, but only if\n  # PREFER_ROOT is still enabled.\n  #\n  # If they pass -u without -d, then they can answer the questions one\n  # by one.\n  if [ \"yes\" != \"$USE_DEFAULTS\" ] && [ \"yes\" = \"$PREFER_ROOT\" ] ; then\n    echo \"We're going to:\"\n    echo \"\"\n    echo \"* Install Sandstorm in ${DEFAULT_DIR_FOR_ROOT}.\"\n    echo \"* Automatically keep Sandstorm up-to-date (with signed updates).\"\n    echo \"* Create a service user ($DEFAULT_SERVER_USER) that owns Sandstorm's files.\"\n    if [ -n \"${SUDO_USER:-}\" ]; then\n      echo \"* Add you ($SUDO_USER) to the $DEFAULT_SERVER_USER group so you can read/write app data.\"\n    fi\n    echo \"* Expose the service only on localhost aka local.sandstorm.io, not the public Internet.\"\n    echo \"* Enable 'dev accounts', for easy developer login.\"\n    if [ \"unknown\" == \"$INIT_SYSTEM\" ]; then\n      echo \"*** WARNING: Could not detect how to run Sandstorm at startup on your system. ***\"\n    else\n        echo \"* Configure Sandstorm to start on system boot (with $INIT_SYSTEM).\"\n    fi\n    echo \"* Listen for inbound email on port ${DEFAULT_SMTP_PORT}.\"\n    echo \"\"\n\n    if prompt-yesno \"Press enter to accept defaults. Type 'no' to customize.\" \"yes\" ; then\n      USE_DEFAULTS=\"yes\"\n    else\n      echo \"\"\n      echo \"OK. We will prompt you with every question.\"\n      echo \"\"\n    fi\n\n  fi\n\n  if [ \"yes\" = \"$USE_DEFAULTS\" ] ; then\n    # Use the default UPDATE_CHANNEL for auto-updates.\n    UPDATE_CHANNEL=\"$DEFAULT_UPDATE_CHANNEL\"\n\n    # Bind to localhost, unless -e specified in argv.\n    USE_EXTERNAL_INTERFACE=\"${USE_EXTERNAL_INTERFACE:-no}\"\n\n    # Use local.sandstorm.io as hostname unless environment variable declared otherwise. This\n    # short-circuits the code elsewhere that uses the system hostname if USE_EXTERNAL_INTERFACE is\n    # \"yes\".\n    SS_HOSTNAME=\"${SS_HOSTNAME:-local.sandstorm.io}\"\n\n    # Use 30025 as the default SMTP_LISTEN_PORT.\n    SMTP_LISTEN_PORT=\"${DEFAULT_SMTP_PORT}\"\n\n    # Start the service at boot, if we can.\n    START_AT_BOOT=\"yes\"\n\n    # Do not ask questions about our dynamic DNS service.\n    USE_SANDCATS=\"no\"\n\n    # Reasonable default ports.\n    PORT=\"${DEFAULT_PORT}\"\n\n    # Allow the mongo prompting part to determine a reasonable MONGO_PORT.\n\n    # Use the ALLOW_DEV_ACCOUNTS feature, which allows people to log\n    # into a Sandstorm instance without setting up any accounts.\n    ALLOW_DEV_ACCOUNTS=\"yes\"\n\n    # Do not bother setting a DESIRED_SERVER_USER. This way, the\n    # existing prompting will pick if this should be \"sandstorm\" (which\n    # it should be if we're running the install script as root) or the\n    # currently-logged-in user (which it should be if we're not root).\n\n    # Do not bother setting a DIR. This way, the existing prompting will\n    # pick between /opt/sandstorm and $HOME/sandstorm, depending on if\n    # the install is being done as root or not. It will use /opt/sandstorm\n    # in all cases if the script is run without the HOME environment variable.\n  fi\n}\n\nfull_server_install() {\n  # The full server install assumes you are OK with using root. If\n  # you're not, you should choose the development server and customize\n  # it to your heart's content.\n  if [ \"yes\" != \"${PREFER_ROOT}\" ] ; then\n    REPORT=no fail \"E_AUTO_NEEDS_SUDO\" \"The automatic setup process requires sudo. Try again with option 2, development server, to customize.\"\n  fi\n\n  if [ \"yes\" = \"$USE_DEFAULTS\" ] ; then\n    if [ -z \"${DESIRED_SANDCATS_NAME-}\" ] ; then\n      local MSG=\"For now, USE_DEFAULTS for full server installs requires a DESIRED_SANDCATS_NAME variable.\"\n      MSG=\"$MSG If you need support for non-sandcats full-server unattended installs, please file a bug.\"\n      fail \"E_USE_DEFAULTS_NEEDS_DESIRED_SANDCATS_NAME\" \"$MSG\"\n    else\n      if [ -z \"${SANDCATS_DOMAIN_RESERVATION_TOKEN:-}\" ] ; then\n        local MSG=\"When operating in USE_DEFAULTS mode, if you want a sandcats.io domain,\"\n        MSG=\"$MSG you must pre-reserve it before running this script. Specify it via the\"\n        MSG=\"$MSG SANDCATS_DOMAIN_RESERVATION_TOKEN environment variable.\"\n        fail \"E_USE_DEFAULTS_NEEDS_DESIRED_SANDCATS_NAME\" \"$MSG\"\n      fi\n    fi\n\n    # If they said USE_DEFAULTS then they don't need to be prompted.\n    ACCEPTED_FULL_SERVER_INSTALL=\"yes\"\n  fi\n\n  # Use port 25 for email, if we can. This logic only gets executed for \"full servers.\"\n  disable_smtp_port_25_if_port_unavailable\n  local PLANNED_SMTP_PORT=\"30025\"\n  if [ \"yes\" = \"$PORT_25_AVAILABLE\" ] ; then\n    PLANNED_SMTP_PORT=\"25\"\n  fi\n\n  if [ \"yes\" != \"${RERUNNING_AS_ROOT:-}\" ]; then\n    # Determine whether to show the ports unavailable warning\n    check_if_ports_unavailable\n\n    echo \"We're going to:\"\n    echo \"\"\n    echo \"* Install Sandstorm in $DEFAULT_DIR_FOR_ROOT\"\n    echo \"* Automatically keep Sandstorm up-to-date\"\n    echo \"* Configure auto-renewing HTTPS if you use a subdomain of sandcats.io\"\n    echo \"* Create a service user ($DEFAULT_SERVER_USER) that owns Sandstorm's files\"\n    if [ \"unknown\" == \"$INIT_SYSTEM\" ]; then\n      echo \"*** WARNING: Could not detect how to run Sandstorm at startup on your system. ***\"\n    else\n      echo \"* Configure Sandstorm to start on system boot (with $INIT_SYSTEM)\"\n    fi\n    echo \"* Listen for inbound email on port ${PLANNED_SMTP_PORT}.\"\n    echo \"\"\n\n    # If we're not root, we will ask if it's OK to use sudo.\n    if [ \"yes\" != \"$CURRENTLY_UID_ZERO\" ]; then\n      echo \"To set up Sandstorm, we will need to use sudo.\"\n    else\n      echo \"Rest assured that Sandstorm itself won't run as root.\"\n    fi\n\n    if [ -z \"${ACCEPTED_FULL_SERVER_INSTALL:-}\" ]; then\n      if prompt-yesno \"OK to continue?\" \"yes\"; then\n        ACCEPTED_FULL_SERVER_INSTALL=yes\n      else\n        ACCEPTED_FULL_SERVER_INSTALL=no\n      fi\n    fi\n\n    if [ \"yes\" = \"$ACCEPTED_FULL_SERVER_INSTALL\" ] &&\n      [ \"yes\" = \"$SHOW_MESSAGE_ABOUT_NEEDING_PORTS_OPEN\" ] ; then\n      echo \"\"\n      echo \"NOTE: It looks like your system already has some other web server installed\"\n      echo \"      (port 80 and/or 443 are taken), so Sandstorm cannot act as your main\"\n      echo \"      web server.\"\n      echo \"\"\n      echo \"      This script can set up Sandstorm to run on port $DEFAULT_PORT instead,\"\n      echo \"      without HTTPS. This makes sense if you're OK with typing the port number\"\n      echo \"      into your browser whenever you access Sandstorm and you don't need\"\n      echo \"      security. This also makes sense if you are going to set up a reverse proxy;\"\n      echo \"      if so, see https://docs.sandstorm.io/en/latest/administering/reverse-proxy/\"\n      echo \"\"\n      echo \"      If you want, you can quit this script with Ctrl-C now, and go uninstall\"\n      echo \"      your other web server, and then run this script again. It is also OK to\"\n      echo \"      proceed if you want.\"\n      echo \"\"\n      if ! prompt-yesno \"OK to skip automatic HTTPS setup & bind to port $DEFAULT_PORT instead?\" \"yes\" ; then\n        fail \"E_USER_REFUSED_DEFAULT_PORT\" \"Exiting now. You can re-run the installer whenever you are ready.\"\n      fi\n    fi\n\n    # If they are OK continuing, and the script is not running as root\n    # at the moment, then re-run ourselves as root.\n    #\n    # Pass along enough information so that the script will keep\n    # executing smoothly, so the user doesn't have to re-answer\n    # questions.\n    if [ \"yes\" != \"$CURRENTLY_UID_ZERO\" ] ; then\n      if [ \"yes\" = \"$ACCEPTED_FULL_SERVER_INSTALL\" ] ; then\n        rerun_script_as_root CHOSEN_INSTALL_MODE=production \\\n                             ACCEPTED_FULL_SERVER_INSTALL=yes \\\n                             RERUNNING_AS_ROOT=yes \\\n                             DESIRED_SANDCATS_NAME=\"${DESIRED_SANDCATS_NAME:-}\" \\\n                             SANDCATS_REGISTRATION_EMAIL=\"${SANDCATS_REGISTRATION_EMAIL:-}\" \\\n                             ACME_EMAIL=\"${ACME_EMAIL:-}\" \\\n                             OVERRIDE_SANDCATS_BASE_DOMAIN=\"${OVERRIDE_SANDCATS_BASE_DOMAIN:-}\" \\\n                             OVERRIDE_SANDCATS_API_BASE=\"${OVERRIDE_SANDCATS_API_BASE:-}\" \\\n                             OVERRIDE_NC_PATH=\"${OVERRIDE_NC_PATH:-}\" \\\n                             OVERRIDE_SANDCATS_CURL_PARAMS=\"${OVERRIDE_SANDCATS_CURL_PARAMS:-}\"\n      fi\n\n      # If we're still around, it means they declined to run us as root.\n      echo \"\"\n      echo \"The automatic setup script needs root in order to:\"\n      echo \"* Create a separate user to run Sandstorm as, and\"\n      echo \"* Set up Sandstorm to start on system boot.\"\n      echo \"\"\n      fail \"E_DECLINED_AUTO_SETUP_DETAILS\" \"For a customized install, please re-run install.sh, and choose option (2) \"\\\n           \"to do a development install.\"\n    fi\n  fi\n\n  # Accepting this indicates a few things.\n  if [ \"yes\" = \"${ACCEPTED_FULL_SERVER_INSTALL}\" ]; then\n    UPDATE_CHANNEL=\"$DEFAULT_UPDATE_CHANNEL\"\n    DIR=\"$DEFAULT_DIR_FOR_ROOT\"\n    USE_EXTERNAL_INTERFACE=\"yes\"\n    USE_SANDCATS=\"yes\"\n    START_AT_BOOT=\"yes\"\n    DESIRED_SERVER_USER=\"$DEFAULT_SERVER_USER\"\n    PORT=\"${DEFAULT_PORT}\"\n    MONGO_PORT=\"6081\"\n    SMTP_LISTEN_PORT=\"${PLANNED_SMTP_PORT}\"\n  else\n    REPORT=no fail \"E_USER_WANTS_CUSTOM_SETTINGS\" \"If you prefer a more manual setup experience, try installing in development mode.\"\n  fi\n}\n\nsandcats_configure() {\n  # We generate the public key before prompting for a desired hostname\n  # so that when the user presses enter, we can try to register the\n  # hostname, and if that succeeds, we are totally done. This avoids a\n  # possible time-of-check-time-of-use race.\n  echo -n \"As a Sandstorm user, you are invited to use a free Internet hostname \"\n  echo \"as a subdomain of sandcats.io,\"\n  echo \"a service operated by the Sandstorm development team.\"\n\n  sandcats_generate_keys\n\n  echo \"\"\n  echo \"Sandcats.io protects your privacy and is subject to terms of use. By using it,\"\n  echo \"you agree to the terms of service & privacy policy available here:\"\n  echo \"https://sandcats.io/terms https://sandcats.io/privacy\"\n  echo \"\"\n\n  # Having set up the keys, we run the function to register a name\n  # with Sandcats. This function handles tail-recursing itself until\n  # it succeeds and/or returning when the user expresses a desire to\n  # cancel the process.\n  sandcats_register_name\n}\n\nconfigure_hostnames() {\n  if [ \"yes\" = \"$USE_SANDCATS\" ] ; then\n    # If we're lucky, the user will be happy with the Sandcats\n    # hostname configuration. If not, then we'll have to actually\n    # prompt them.\n    sandcats_configure\n  fi\n\n  # Ask the user for port number information. (These functions\n  # optionally skip the questions if the details have already been\n  # filled in.)\n  choose_port\n  choose_mongo_port\n\n  # If we are supposed to use the external network interface, then\n  # configure the hostname and IP address accordingly.\n  if [ \"yes\" = \"$USE_EXTERNAL_INTERFACE\" ]; then\n    BIND_IP=0.0.0.0\n    SS_HOSTNAME=\"${SS_HOSTNAME:-$(hostname -f 2>/dev/null || hostname)}\"\n  else\n    BIND_IP=127.0.0.1\n    SS_HOSTNAME=local.sandstorm.io\n    if [ \"yes\" != \"$USE_DEFAULTS\" ] ; then\n      echo \"Note: local.sandstorm.io maps to 127.0.0.1, i.e. your local machine.\"\n      echo \"For reasons that will become clear in the next step, you should use this\"\n      echo \"instead of 'localhost'.\"\n    fi\n  fi\n\n  # A typical server's DEFAULT_BASE_URL is its hostname plus port over HTTP. If the port is 80, then\n  # don't add it to BASE_URL to avoid triggering this bug:\n  # https://github.com/sandstorm-io/sandstorm/issues/2252\n  local PORT_SUFFIX=\"\"\n  if [ \"$PORT\" = \"80\" ] ; then\n    PORT_SUFFIX=\"\"\n  else\n    PORT_SUFFIX=\":${PORT}\"\n  fi\n\n  DEFAULT_BASE_URL=\"http://${SS_HOSTNAME}${PORT_SUFFIX}\"\n\n  if [ \"$USE_HTTPS\" = \"yes\" ]; then\n    DEFAULT_BASE_URL=\"https://$SS_HOSTNAME\"\n    HTTPS_PORT=443\n    PORT=80\n  fi\n\n  if [ \"yes\" = \"$SANDCATS_SUCCESSFUL\" ] ; then\n    # Do not prompt for BASE_URL configuration if Sandcats bringup\n    # succeeded.\n    BASE_URL=\"$DEFAULT_BASE_URL\"\n  else\n    BASE_URL=$(prompt \"URL users will enter in browser:\" \"$DEFAULT_BASE_URL\")\n    if ! [[ \"$BASE_URL\" =~ ^http(s?):// ]] ; then\n      local PROPOSED_BASE_URL=\"http://${BASE_URL}\"\n      echo \"** You entered ${BASE_URL}, which needs http:// at the front. I can use:\" >&2\n      echo \"        ${PROPOSED_BASE_URL}\" >&2\n      if prompt-yesno \"Is this OK?\" yes; then\n        BASE_URL=\"${PROPOSED_BASE_URL}\"\n      else\n        configure_hostnames\n      fi\n    fi\n  fi\n\n  # If the BASE_URL looks like localhost, then we had better use a\n  # DEFAULT_WILDCARD of local.sandstorm.io so that wildcard DNS works.\n  if [[ \"$BASE_URL\" =~ ^http://localhost(|:[0-9]*)(/.*)?$ ]]; then\n    DEFAULT_WILDCARD=*.local.sandstorm.io${BASH_REMATCH[1]}\n  elif [[ \"$BASE_URL\" =~ ^[^:/]*://([^/]*)/?$ ]]; then\n    DEFAULT_WILDCARD=\"${DEFAULT_WILDCARD:-*.${BASH_REMATCH[1]}}\"\n  else\n    DEFAULT_WILDCARD=\n  fi\n\n  # If we did the sandcats configuration, then we trust it to provide\n  # a working WILDCARD_HOST.\n  if [ \"yes\" = \"$SANDCATS_SUCCESSFUL\" ] ; then\n    WILDCARD_HOST=\"$DEFAULT_WILDCARD\"\n  else\n    if [ \"yes\" != \"$USE_DEFAULTS\" ] ; then\n      echo \"Sandstorm requires you to set up a wildcard DNS entry pointing at the server.\"\n      echo \"This allows Sandstorm to allocate new hosts on-the-fly for sandboxing purposes.\"\n      echo \"Please enter a DNS hostname containing a '*' which maps to your server. For \"\n      echo \"example, if you have mapped *.foo.example.com to your server, you could enter\"\n      echo \"\\\"*.foo.example.com\\\". You can also specify that hosts should have a special\"\n      echo \"prefix, like \\\"ss-*.foo.example.com\\\". Note that if your server's main page\"\n      echo \"is served over SSL, the wildcard address must support SSL as well, which\"\n      echo \"implies that you must have a wildcard certificate. For local-machine servers,\"\n      echo \"we have mapped *.local.sandstorm.io to 127.0.0.1 for your convenience, so you\"\n      echo \"can use \\\"*.local.sandstorm.io\\\" here. If you are serving off a non-standard\"\n      echo \"port, you must include it here as well.\"\n    fi\n    WILDCARD_HOST=$(prompt \"Wildcard host:\" \"$DEFAULT_WILDCARD\")\n\n    while ! [[ \"$WILDCARD_HOST\" =~ ^[^*]*[*][^*]*$ ]]; do\n      error \"Invalid wildcard host. It must contain exactly one asterisk.\"\n      WILDCARD_HOST=$(prompt \"Wildcard host:\" \"$DEFAULT_WILDCARD\")\n    done\n  fi\n}\n\nchoose_install_dir() {\n  if [ -z \"${DIR:-}\" ] ; then\n    local DEFAULT_DIR=\"$DEFAULT_DIR_FOR_ROOT\"\n    if [ \"yes\" != \"$CURRENTLY_UID_ZERO\" ] ; then\n      DEFAULT_DIR=\"$DEFAULT_DIR_FOR_NON_ROOT\"\n    fi\n\n    DIR=$(prompt \"Where would you like to put Sandstorm?\" \"$DEFAULT_DIR\")\n  fi\n\n  # Check for the existence of any partial Sandstorm installation. Note that by default, the\n  # Sandstorm uninstall process will retain $DIR/sandstorm.conf and $DIR/var. Since the install\n  # script can't reliably use those to preseed a new Sandstorm install, we still bail out in that\n  # situation.\n  if [ -e \"$DIR/sandstorm.conf\" ] || [ -e \"$DIR/var\" ] || [ -e \"$DIR/sandstorm\" ] ; then\n    # Clear the previous line, since in many cases, it's a \"echo -n\".\n    error \"\"\n    error \"This script is trying to install to ${DIR}.\"\n    error \"\"\n    error \"You seem to already have a ${DIR} directory with a Sandstorm installation inside. You should either:\"\n    error \"\"\n    error \"1. Reconfigure that Sandstorm install using its configuration file -- ${DIR}/sandstorm.conf -- or the admin interface. See docs at:\"\n    error \"https://docs.sandstorm.io/en/latest/administering/\"\n    error \"\"\n    error \"2. Uninstall Sandstorm before attempting to perform a new install. Even if you created a sandcats.io hostname, it is safe to uninstall so long as you do not need the data in your Sandstorm install. When you re-install Sandstorm, you can follow a process to use the old hostname with the new install. See uninstall docs at:\"\n    error \"https://docs.sandstorm.io/en/latest/install/#uninstall\"\n    error \"\"\n    error \"3. Use a different target directory for the new Sandstorm install. Try running install.sh with the -d option.\"\n    error \"\"\n    error \"4. Retain your data, but restore your Sandstorm code and configuration to a fresh copy. To do that, keep a backup  of ${DIR}/var and then do a fresh install; stop the Sandstorm service, and restore your backup of ${DIR}/var. You may need to adjust permissions after doing that.\"\n    REPORT=no fail \"E_DIR_ALREADY_EXISTS\" \"Please try one of the above. Contact https://groups.google.com/d/forum/sandstorm-dev for further help.\"\n  fi\n\n  mkdir -p \"$DIR\"\n  cd \"$DIR\"\n}\n\nchoose_smtp_port() {\n  # If SMTP_LISTEN_PORT is already decided, then don't bother asking.\n  if [ ! -z \"${SMTP_LISTEN_PORT:-}\" ] ; then\n    return\n  fi\n\n  local REQUESTED_SMTP_PORT=$(prompt-numeric \"Sandstorm grains can receive email. What port should Sandstorm listen on, for inbound SMTP?\" \"${DEFAULT_SMTP_PORT}\")\n  if [ -z \"${REQUESTED_SMTP_PORT}\" ] ; then\n    choose_smtp_port\n  else\n    SMTP_LISTEN_PORT=\"${REQUESTED_SMTP_PORT}\"\n  fi\n}\n\nload_existing_settings() {\n  # If there is no settings file to load, then we can skip the\n  # rest of this function.\n  if [ ! -e sandstorm.conf ]; then\n    return\n  fi\n\n  echo \"Found existing sandstorm.conf. Using it.\"\n  . sandstorm.conf\n  if [ \"${SERVER_USER:+set}\" != set ]; then\n    fail \"E_CONF_DOES_NOT_SET_SERVER_USER\" \"Existing config does not set SERVER_USER. Please fix or delete it.\"\n  fi\n\n  # If sandstorm.conf specifies an UPDATE_CHANNEL, then make that be\n  # the default. Additionally, because UPDATE_CHANNEL is already\n  # set, the part of the code that prompts the user about what\n  # UPDATE_CHANNEL they want should skip itself.\n  if [ \"${UPDATE_CHANNEL:-none}\" != none ]; then\n    DEFAULT_UPDATE_CHANNEL=$UPDATE_CHANNEL\n  fi\n}\n\nchoose_server_user_if_needed() {\n  # If there is already a sandstorm.conf, we assume that it has a\n  # SERVER_USER set and that the user exists. This is a\n  # basically-reasonable assumption, given that\n  # load_existing_settings() verifies that there is a SERVER_USER set.\n  if [ -e sandstorm.conf ] ; then\n    return\n  fi\n\n  # If we are not root, then life is easy; we run Sandstorm as the current\n  # user.\n  if [ \"yes\" != \"$CURRENTLY_UID_ZERO\" ]; then\n    SERVER_USER=$(id -un)\n    return\n  fi\n\n  # If previous configuration (e.g. easy-configuration, option 1) requested a\n  # specific SERVER_USER, then let's go with that.\n  if [ ! -z \"${DESIRED_SERVER_USER:-}\" ] ; then\n    SERVER_USER=\"$DESIRED_SERVER_USER\"\n    CREATE_SERVER_USER=\"yes\"\n    ADD_SUDO_USER_TO_SERVER_GROUP=\"no\"\n    return\n  fi\n\n  # If we got this far, then we need to ask.\n  SERVER_USER=$(prompt \"Local user account to run server under:\" sandstorm)\n\n  while [ \"$SERVER_USER\" = root ]; do\n    echo \"Sandstorm cannot run as root!\"\n    SERVER_USER=$(prompt \"Local user account to run server under:\" sandstorm)\n  done\n}\n\ncreate_server_user_if_needed() {\n  # Find out if the user exists. If so, then we're done!\n  if id \"$SERVER_USER\" > /dev/null 2>&1; then\n    return\n  fi\n\n  # Since the server user does not exist, we create it (asking for\n  # permission if necessary).\n  if [ \"yes\" != \"${CREATE_SERVER_USER:-}\" ] ; then\n    if prompt-yesno \"User account '$SERVER_USER' doesn't exist. Create it?\" yes ; then\n      CREATE_SERVER_USER=yes\n    fi\n  fi\n\n  # If people don't want us to create it, then let's bail now.\n  if [ \"yes\" != \"${CREATE_SERVER_USER:-}\" ] ; then\n    return\n  fi\n\n  # OK! Let's proceed.\n  #\n  # To create the server user, we first try `useradd`, which is widely available on most\n  # distros. If that isn't available, it's likely we're running on a busybox based system.\n  # busybox provides an `adduser` applet, so if that command links to the busybox binary\n  # we it instead.\n  #\n  # Note that debian provides an `adduser` command as well, but its usage is different.\n  # useradd is available on debian anyway, so we'll end up using that.\n  if which useradd >/dev/null; then\n    # Per the man page for useradd, USERGROUPS_ENAB in /etc/login.defs controls if useradd\n    # will automatically create a group for this user (the new group would have the same\n    # name as the new user). On systems such as OpenSuSE where that flag is set to false\n    # by default, or on systems where the administrator has personally tuned that flag,\n    # we need to provide --user-group to useradd so that it creates the group.\n    useradd --system --user-group \"$SERVER_USER\"\n  elif [ \"$(basename $(readlink $(which adduser)))\" = busybox ]; then\n    # With busybox we need to separately create the user's group.\n    addgroup -S \"$SERVER_USER\"\n    adduser -S -G \"$SERVER_USER\" \"$SERVER_USER\"\n  else\n    fail \"E_NO_USERADD\" \\\n      \"Couldn't find a command with which to add a user (either useradd or busybox).\"\n  fi\n\n  echo \"Note: Sandstorm's storage will only be accessible to the group '$SERVER_USER'.\"\n\n  # If SUDO_USER is non-empty, we let the user opt in to adding\n  # themselves to the storage group.\n\n  # The easy-install opts out of this flow by setting\n  # ADD_SUDO_USER_TO_SERVER_GROUP=no.\n  if [ \"no\" = \"${ADD_SUDO_USER_TO_SERVER_GROUP:-}\" ] ; then\n    return\n  fi\n\n  if [ -n \"${SUDO_USER:-}\" ]; then\n    if prompt-yesno \"Add user '$SUDO_USER' to group '$SERVER_USER'?\" no ; then\n      usermod -a -G \"$SERVER_USER\" \"$SUDO_USER\"\n      echo \"Added. Don't forget that group changes only apply at next login.\"\n    fi\n  fi\n}\n\nchoose_port() {\n  # If there already is a PORT chosen, then don't bother asking.\n  if [ ! -z \"${PORT:-}\" ] ; then\n    return\n  fi\n\n  PORT=$(prompt-numeric \"Server main HTTP port:\" $DEFAULT_PORT)\n\n  while [ \"$PORT\" -lt 1024 ]; do\n    echo \"Ports below 1024 require root privileges. Sandstorm does not run as root.\"\n    echo \"To use port $PORT, you'll need to set up a reverse proxy like nginx that \"\n    echo \"forwards to the internal higher-numbered port. The Sandstorm git repo \"\n    echo \"contains an example nginx config for this.\"\n    PORT=$(prompt-numeric \"Server main HTTP port:\" $DEFAULT_PORT)\n  done\n}\n\nchoose_mongo_port() {\n  # If there is already a MONGO_PORT chosen, then don't bother asking.\n  if [ ! -z \"${MONGO_PORT:-}\" ] ; then\n    return\n  fi\n\n  # If the port we'll bind is less than 1024, then default to MONGO_PORT of 6081 because\n  # mongo can't listen on root-owned ports in our configuration.\n  local DEFAULT_MONGO_PORT=\"$((PORT + 1))\"\n  if [ \"$PORT\" -lt 1024 ] ; then\n    DEFAULT_MONGO_PORT=\"6081\"\n  fi\n\n  MONGO_PORT=$(prompt-numeric \"Database port (choose any unused port):\" \"${DEFAULT_MONGO_PORT}\")\n}\n\nchoose_external_or_internal() {\n  # Figure out if we want to listen on internal vs. external interfaces.\n  if [ \"yes\" != \"$USE_EXTERNAL_INTERFACE\" ]; then\n    if prompt-yesno \"Expose to localhost only?\" yes ; then\n      USE_EXTERNAL_INTERFACE=\"no\"\n    else\n      USE_EXTERNAL_INTERFACE=\"yes\"\n    fi\n  fi\n}\n\nconfigure_auto_updates() {\n  # If UPDATE_CHANNEL is non-empty, then skip this.\n  if [ -n \"${UPDATE_CHANNEL:-}\" ]; then\n    return\n  fi\n\n  # Otherwise, ask!\n  if prompt-yesno \"Automatically keep Sandstorm updated?\" yes; then\n    UPDATE_CHANNEL=$DEFAULT_UPDATE_CHANNEL\n  else\n    UPDATE_CHANNEL=none\n  fi\n}\n\nconfigure_dev_accounts() {\n  # If ALLOW_DEV_ACCOUNTS is set to yes already, then skip this.\n  if [ \"yes\" = \"${ALLOW_DEV_ACCOUNTS}\" ]; then\n    return\n  fi\n\n  # If USE_EXTERNAL_INTERFACE is set to yes, then skip this, because\n  # dev accounts on the Internet would be crazy.\n  if [ \"yes\" = \"${USE_EXTERNAL_INTERFACE}\" ] ; then\n    return\n  fi\n\n  echo \"Sandstorm supports 'dev accounts', a feature that lets anyone log in\"\n  echo \"as admin and other sample users to a Sandstorm server. We recommend\"\n  echo \"it for app development, and absolutely do not recommend it for\"\n  echo \"a server on the public Internet.\"\n\n  if prompt-yesno \"Enable dev accounts?\" \"yes\" ; then\n    ALLOW_DEV_ACCOUNTS=yes\n  fi\n}\n\nsave_config() {\n  writeConfig SERVER_USER PORT MONGO_PORT BIND_IP BASE_URL WILDCARD_HOST UPDATE_CHANNEL ALLOW_DEV_ACCOUNTS SMTP_LISTEN_PORT > sandstorm.conf\n  if [ \"yes\" = \"$SANDCATS_SUCCESSFUL\" ] ; then\n    writeConfig SANDCATS_BASE_DOMAIN >> sandstorm.conf\n  fi\n  if [ \"yes\" = \"$USE_HTTPS\" ] ; then\n    writeConfig HTTPS_PORT >> sandstorm.conf\n  fi\n\n  echo\n  echo \"Config written to $PWD/sandstorm.conf.\"\n}\n\ndownload_latest_bundle_and_extract_if_needed() {\n  # If BUNDLE_FILE is non-empty, we were provided a bundle file, so we\n  # can skip downloading one.\n  if [ -n \"${BUNDLE_FILE:-}\" ]; then\n    return\n  fi\n\n  echo \"Finding latest build for $DEFAULT_UPDATE_CHANNEL channel...\"\n  # NOTE: The type is install_v2. We use the \"type\" value when calculating how many people attempted\n  # to do a Sandstorm install. We had to stop using \"install\" because vagrant-spk happens to use\n  # &type=install during situations that we do not want to categorize as an attempt by a human to\n  # install Sandstorm.\n  BUILD=\"$(curl -A \"$CURL_USER_AGENT\" -fs \"https://install.sandstorm.io/$DEFAULT_UPDATE_CHANNEL?from=0&type=install_v2\")\"\n  BUILD_DIR=\"sandstorm-${BUILD}\"\n\n  if [[ ! \"$BUILD\" =~ ^[0-9]+$ ]]; then\n    fail \"E_INVALID_BUILD_NUM\" \"Server returned invalid build number: $BUILD\"\n  fi\n\n  do-download() {\n    rm -rf \"${BUILD_DIR}\"\n    WORK_DIR=\"$(mktemp -d ./sandstorm-installer.XXXXXXXXXX)\"\n    local URL=\"https://dl.sandstorm.io/sandstorm-$BUILD.tar.xz\"\n    echo \"Downloading: $URL\"\n    retryable_curl \"$URL\" \"$WORK_DIR/sandstorm-$BUILD.tar.xz\"\n    retryable_curl \"$URL.sig\" \"$WORK_DIR/sandstorm-$BUILD.tar.xz.sig\"\n\n    if which gpg > /dev/null; then\n      export GNUPGHOME=\"$WORK_DIR/.gnupg\"\n      mkdir -m 0700 -p \"$GNUPGHOME\"\n\n      # Regenerate with: gpg --armor --export 160D2D577518B58D94C9800B63F227499DA8CCBD\n      gpg --dearmor > \"$WORK_DIR/sandstorm-keyring.gpg\" << __EOF__\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQENBFX8ypkBCAC8sjX5yZqKdW8nY7aE/GpVeS+qSCbpYSJwixYNFXbz3MQihR3S\nsuvg5uw1KyuQb23c0LwirfxazVf7txKhQNaNU3ek62LG3wcGeBrvQGsIUMbkatay\n/163CLeVWfSK1Z4pFc4dhdjXYSOz0oZxd7Mp78crBbGKmyn7PtzdAqt+XfEXNuee\ncDbx++P57n5s5xc5fQWznt333IMgmgTREGUROfh4kL376rFAS208XIywJlUVkoKM\nkIzgcjevFGwYKdsLigHXCDp9toQHl8oPjFV+RE8Br8ciJlMp9CqCfHGwj0Orxasc\ne9moLqqUc+iKdg9bQfuAbJ/jFNhGmV/CVv9tABEBAAG0LlNhbmRzdG9ybS5pbyAo\ncmVsZWFzZXMpIDxzdXBwb3J0QHNhbmRzdG9ybS5pbz6JATgEEwECACIFAlX8ypkC\nGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEGPyJ0mdqMy91bYH/iTg9qbw\nG3th57Yf70NtyMJE3UBFDYDNAgT45UBEHoHhQM5cdFu/EIHggOKl/A2zL19Nh555\n5F5o3jiJChQ0cvpoVnDdA5lRKD9iK6hzAba9fCVAx/od1PULQP7KV+uHTQuclSFO\nDBvpgT8bMY9LmlpTl+l2lvYd+c50w3jZMFwh8JrJYAc3X0kBfVEywVZkjH8Nw5nD\nv/j5Of3XXfEg84tNyWSYUMrYVORJyfHtA9e3JXNv5BMxH73AVLnyCJhCaodQsC6Z\nhFkHUvvRb58ZqKXMtLYTd/8XLIvpkgRNX6EHWDslJh3BaBwHSuqDNssh1TW5xPjA\n9vkPDzeZfLkuxpy5AQ0EVfzKmQEIANyi22M/3KhkghsPA6Rpha1lx6JJCb4p7E21\ny82OGFUwcMpZkSgh1lARgp/Mvc2CHhAXi6NkGbgYc1q5rgARSvim2EMZNQOEqRb9\nteEeI3w7Nz8Q/WoWck9WaXg8EdELtBOXYgVEirVddUl6ftUvCeBh3hE2Y/CLQSXL\nCYXdQ2/MN6xV8tepuWOu0aPxxPUNea9ceDNZ8/CXEL32pzv9SUX/3KgSnFTzmxNP\nthzXGuaAQGMZRu3cdTSeK9UUX4L3lxv7p0nE/2K18MU3FayTJqspfUCc4BgHZRMN\nsh+2/YNfJgi0uWex1WnU94ZIp4A0uic54bU1ZECSwxg81KHaEEkAEQEAAYkBHwQY\nAQIACQUCVfzKmQIbDAAKCRBj8idJnajMvZgPB/0THpTPnfsYNkwQrBsrTq413ZTF\nJmVyeZ9xnGDImOdyHhGLlnLC1YEnaNUVEyMKifya4TF2utrLrsMT9TC/dWvFsYlJ\noMcUpaSlrFoAoPp3pdOGCIRYNhWGHoxy0Ti1WAa/6A+GoHJpUEz85/jD4vjgYlCX\nZFW1Pji9PbdIZFZQR4FyYBkkZOUq6yyTNR0syQPVy3EsPVvXzszm2zV/1YjGymgj\nMKeYR9+VU+PlFAY9wwLWLTFeSzxTyVjbPwF5bWHV32GM8g0/NgA6a1JLL40v7pqf\nuYvFk2KJpo3gZNGJ72gLkSzie7Eu1/V67JIG9TwfrJUEj8Uwd5zPv1MOqfWl\n=OiS5\n-----END PGP PUBLIC KEY BLOCK-----\n__EOF__\n\n      if gpg --no-default-keyring --keyring $WORK_DIR/sandstorm-keyring.gpg --status-fd 1 \\\n             --verify $WORK_DIR/sandstorm-$BUILD.tar.xz{.sig,} 2>/dev/null | \\\n          grep -q '^\\[GNUPG:\\] VALIDSIG 160D2D577518B58D94C9800B63F227499DA8CCBD '; then\n        echo \"GPG signature is valid.\"\n      else\n        rm -rf sandstorm-$BUILD\n        fail \"E_INVALID_GPG_SIG\" \"GPG signature is NOT valid! Please report to security@sandstorm.io immediately!\"\n      fi\n\n      unset GNUPGHOME\n    else\n      echo \"WARNING: gpg not installed; not verifying signatures (but it's HTTPS so you're probably fine)\" >&2\n    fi\n\n    tar Jxof \"$WORK_DIR/sandstorm-$BUILD.tar.xz\"\n    rm -rf \"$WORK_DIR\"\n\n    if [ ! -e \"$BUILD_DIR\" ]; then\n      fail \"E_BAD_PACKAGE\" \"Bad package -- did not contain $BUILD_DIR directory.\"\n    fi\n\n    # We used to reject packages older than 30 days on the assumption the package would definitely\n    # be updated more often than that. For about six years the existence of this check was the main\n    # thing that drove me (Kenton) to do a release every month, although I occasionally forgot which\n    # would temporarily block new installs. Surprisingly (to me, at least), whenever this happend,\n    # people would actually notice and complain within a day or two -- people were apparently\n    # still installing Sandstorm regularly.\n    #\n    # As of Feb 2023, though, I think it's time to retire this check and end the monthly update\n    # schedule, for several reasons:\n    # - In 2022, the majority of months saw no actual changes at all.\n    # - Ian, who had been the most active maintainer, is now focusing his efforts on a new\n    #   implementation called Tempest. So 2023 is likely to see even fewer changes.\n    # - It's no longer possible to update the Meteor dependency, because newer versions of Meteor\n    #   no longer support the ancient version of Mongo we're stuck on (2.6), and writing automation\n    #   to update everyone's Mongo instances automatically without breaking anyone is too large\n    #   a project for anyone to volunteer for. Since almost all of Sandstorm's dependencies stem\n    #   from Meteor, trying to update dependencies on a monthly basis has become futile, as the\n    #   pinned Meteor version holds everything else back.\n    # - I just have too much to do, and although releases are not a whole lot of work, it feels\n    #   like one more thing on the pile.\n    #\n    # I'm still happy to push releases when there are interesting changes.\n#    if [ ! -e \"$BUILD_DIR/buildstamp\" ] || \\\n#       [ $(stat -c %Y \"$BUILD_DIR/buildstamp\") -lt $(( $(date +%s) - 30*24*60*60 )) ]; then\n#      rm -rf \"$BUILD_DIR\"\n#      fail \"E_PKG_STALE\" \"The downloaded package seems to be more than a month old. Please verify that your\" \\\n#           \"computer's clock is correct and try again. It could also be that an attacker is\" \\\n#           \"trying to trick you into installing an old version. Please contact\" \\\n#           \"security@sandstorm.io if the problem persists.\"\n#    fi\n  }\n\n  if [ -e $BUILD_DIR ]; then\n    echo \"$BUILD_DIR is already present. Should I use it or re-download?\"\n    if ! prompt-yesno \"Use existing copy?\" yes; then\n      do-download\n    fi\n  else\n    do-download\n  fi\n}\n\nextract_bundle_if_provided() {\n  # If BUNDLE_FILE is empty, it means that we have no bundle file to extract,\n  # so we can skip downloading it.\n  if [ -z \"${BUNDLE_FILE:-}\" ]; then\n    return\n  fi\n\n  # Use the specified local bundle, which we already validated earlier.\n\n  if [ $BUILD = 0 ]; then\n    BUILD_DIR=sandstorm-custom.$(date +'%Y-%m-%d_%H-%M-%S')\n  else\n    BUILD_DIR=sandstorm-$BUILD\n  fi\n\n  rm -rf \"$BUILD_DIR\"\n  mkdir \"$BUILD_DIR\"\n  (cd \"$BUILD_DIR\" && tar Jxof \"$BUNDLE_FILE\" --strip=1)\n}\n\nmake_runtime_directories() {\n  GROUP=$(id -g $SERVER_USER)\n\n  # Make var directories.\n  mkdir -p var/{log,pid,mongo} var/sandstorm/{apps,grains,downloads}\n\n  # Create useful symlinks.\n  ln -sfT $BUILD_DIR latest\n  ln -sfT latest/sandstorm sandstorm\n}\n\nset_permissions() {\n  # If not running the installer as root, we can't do all the\n  # permissions stuff we want to.\n  if [ \"yes\" != \"$CURRENTLY_UID_ZERO\" ]; then\n    return\n  fi\n\n  local ADMIN_TOKEN_PATH=\n  if [ -e \"${ADMIN_TOKEN_PATH}\" ] ; then\n    ADMIN_TOKEN_PATH=\"var/sandstorm/adminToken\"\n  fi\n\n  # Set ownership of files.  We want the dirs to be root:sandstorm but the contents to be\n  # sandstorm:sandstorm.\n  chown -R $SERVER_USER:$GROUP var/{log,pid,mongo} var/sandstorm/{apps,grains,downloads} $ADMIN_TOKEN_PATH\n  chown root:$GROUP var/{log,pid,mongo,sandstorm} var/sandstorm/{apps,grains,downloads} $ADMIN_TOKEN_PATH\n  chmod -R g=rwX,o= var/{log,pid,mongo,sandstorm} var/sandstorm/{apps,grains,downloads} $ADMIN_TOKEN_PATH\n}\n\ninstall_sandstorm_symlinks() {\n  # If not running the installer as root, we can't modify\n  # /usr/local/bin, so we have to skip this.\n  if [ \"yes\" != \"$CURRENTLY_UID_ZERO\" ]; then\n    return\n  fi\n\n  local FAILED_TO_WRITE_SYMLINK=\"no\"\n\n  # Install tools.\n  ln -sfT $PWD/sandstorm /usr/local/bin/sandstorm || FAILED_TO_WRITE_SYMLINK=yes\n  ln -sfT $PWD/sandstorm /usr/local/bin/spk || FAILED_TO_WRITE_SYMLINK=yes\n\n  # If /usr/local/bin is not actually writeable, even though we are root, then bail on this for now.\n  # That can happen on e.g. CoreOS; see https://github.com/sandstorm-io/sandstorm/issues/1660\n  # the bash \"-w\" does not detect read-only mounts, so we use a behavior check above.\n  if [ \"${FAILED_TO_WRITE_SYMLINK}\" = \"yes\" ] ; then\n    echo \"\"\n    echo \"*** WARNING: /usr/local/bin was not writeable. To run sandstorm or spk manually, use:\"\n    echo \" - $PWD/sandstorm\"\n    echo \" - $PWD/sandstorm spk\"\n    echo \"\"\n    return\n  fi\n\n}\n\nask_about_starting_at_boot() {\n  # Starting Sandstorm at boot cannot work if we are not root by this point.\n  if [ \"$CURRENTLY_UID_ZERO\" != \"yes\" ] ; then\n    START_AT_BOOT=\"no\"\n  fi\n\n  # If we already know if we want to start the thing at boot, we can skip asking.\n  if [ ! -z \"${START_AT_BOOT:-}\" ] ; then\n    return\n  fi\n\n  if prompt-yesno \"Start sandstorm at system boot (using $INIT_SYSTEM)?\" yes; then\n    START_AT_BOOT=yes\n  fi\n}\n\nconfigure_start_at_boot_if_desired() {\n  SANDSTORM_NEEDS_TO_BE_STARTED=\"yes\"\n\n  # If the user doesn't want us to start Sandstorm at boot, then we\n  # don't run anything in this function.\n  if [ \"yes\" != \"${START_AT_BOOT:-}\" ] ; then\n    return\n  fi\n\n  if [ \"systemd\" = \"${INIT_SYSTEM}\" ] ; then\n    configure_systemd_init_system\n    SANDSTORM_NEEDS_TO_BE_STARTED=no\n  elif [ \"sysvinit\" = \"${INIT_SYSTEM}\" ] ; then\n    configure_sysvinit_init_system\n    SANDSTORM_NEEDS_TO_BE_STARTED=no\n  else\n    echo \"Note: I don't know how to set up sandstorm to auto-run at startup on\"\n    echo \"  your system. :(\"\n    echo\n  fi\n}\n\nconfigure_systemd_init_system() {\n  # WARNING: This function should only be run if we already know\n  # systemd is the current init system. It relies on its caller to\n  # verify that.\n\n  local SYSTEMD_UNIT=\"sandstorm.service\"\n\n  # Stop Sandstorm if it is currently running.\n  if systemctl list-unit-files | grep -q $SYSTEMD_UNIT; then\n    systemctl stop sandstorm || true\n  fi\n\n  # the init.d logic simply overwrites the init script if it exists, adopt that here\n  for SYSTEMD_UNIT_PATH in /etc/systemd/system /run/systemd/system /usr/lib/systemd/system; do\n    if [ -e $SYSTEMD_UNIT_PATH/$SYSTEMD_UNIT ] ; then\n      rm $SYSTEMD_UNIT_PATH/$SYSTEMD_UNIT\n    fi\n  done\n\n  cat > /etc/systemd/system/$SYSTEMD_UNIT << __EOF__\n[Unit]\nDescription=Sandstorm server\nAfter=local-fs.target remote-fs.target network-online.target\nRequires=local-fs.target remote-fs.target\nWants=network-online.target\n\n[Service]\nType=forking\nExecStart=$PWD/sandstorm start\nExecStop=$PWD/sandstorm stop\n\n[Install]\nWantedBy=multi-user.target\n__EOF__\n  systemctl enable sandstorm\n  systemctl start sandstorm\n  STARTED_SANDSTORM=\"yes\"\n}\n\nconfigure_sysvinit_init_system() {\n  # WARNING: This function should only be run if we already know\n  # sysvinit is the current init system. It relies on its caller to\n  # verify that.\n\n  # Stop Sandstorm, since we don't know what its configuration is.\n  if [ -e /etc/init.d/sandstorm ] ; then\n    service sandstorm stop || true\n  fi\n\n  # Replace the init script with something that should definitely\n  # work.\n\n  cat > /etc/init.d/sandstorm << __EOF__\n#! /bin/bash\n### BEGIN INIT INFO\n# Provides:          sandstorm\n# Required-Start:    \\$local_fs \\$remote_fs \\$networking \\$syslog\n# Required-Stop:     \\$local_fs \\$remote_fs \\$networking \\$syslog\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: starts Sandstorm personal cloud server\n### END INIT INFO\n\nDESC=\"Sandstorm server\"\nDAEMON=$PWD/sandstorm\n\n# The Sandstorm runner supports all the common init commands directly.\n# We use -a to set the program name to make help text look nicer.\n# This requires bash, though.\nexec -a \"service sandstorm\" \\$DAEMON \"\\$@\"\n__EOF__\n\n  # Mark as executable, and enable on boot.\n  chmod +x /etc/init.d/sandstorm\n  if [ \"$(which update-rc.d)\" != \"\" ]; then\n    update-rc.d sandstorm defaults\n  elif [ \"$(which rc-update)\" != \"\" ]; then\n    rc-update add sandstorm\n  else\n    echo \"WARNING: I couldn't figure out how to make the Sandstorm init script active on\" >&2\n    echo \"  your system; neither update-rc.d nor rc-update commands seem to exist. Sandstorm\" >&2\n    echo \"  will not start automatically at boot until you mark its init script active.\" >&2\n  fi\n\n  # Start it right now.\n  service sandstorm start\n  STARTED_SANDSTORM=\"yes\"\n}\n\ngenerate_admin_token() {\n  # If dev accounts are enabled, the user does not need an admin token.\n  if [ \"yes\" = \"${ALLOW_DEV_ACCOUNTS}\" ] ; then\n    return\n  fi\n\n  # Allow the person running the install.sh script to pre-generate an admin token, specified as an\n  # environment variable, so that they can ignore the output text of install.sh.\n  if [ ! -z \"${ADMIN_TOKEN:-}\" ] ; then\n    local TMPFILENAME=\"$(mktemp ./var/sandstorm/adminTokenTmp.XXXXXXXXXX)\"\n    echo -n \"$ADMIN_TOKEN\" > \"$TMPFILENAME\"\n    local FILENAME=\"./var/sandstorm/adminToken\"\n    mv \"$TMPFILENAME\" \"$FILENAME\"\n    chmod 0640 \"$FILENAME\"\n    chgrp \"$SERVER_USER\" \"$FILENAME\"\n    return\n  fi\n\n  ADMIN_TOKEN=$(./sandstorm admin-token --quiet)\n}\n\nprint_success() {\n  echo \"\"\n  if [ \"yes\" = \"$SANDSTORM_NEEDS_TO_BE_STARTED\" ] ; then\n    echo \"Installation complete. To start your server now, run:\"\n    echo \"  $DIR/sandstorm start\"\n    echo \"Once that's done, visit this link to start using it:\"\n  else\n    echo -n \"Your server is now online! \"\n    echo \"Visit this link to start using it:\"\n  fi\n\n  echo \"\"\n\n  # If there is an admin token at this point, print an admin token URL.  Otherwise, don't. Note that\n  # when dev accounts are enabled, it is advantageous to not print an admin token URL.\n  if [ ! -z \"${ADMIN_TOKEN:-}\" ] ; then\n    echo \"  ${BASE_URL:-(unknown; bad config)}/setup/token/$ADMIN_TOKEN\"\n    echo \"\"\n    echo \"NOTE: This URL expires in 15 minutes. You can generate a new setup URL by running\"\n    echo \"'sudo sandstorm admin-token' from the command line.\"\n  else\n    echo \"  ${BASE_URL:-(unknown; bad config)}/\"\n  fi\n  if [ \"yes\" = \"${ALLOW_DEV_ACCOUNTS}\" ] ; then\n   echo \"\"\n   echo \"NOTE: Use the passwordless admin account called Alice for convenient dev login (since you have 'dev accounts' enabled).\"\n  fi\n  echo \"\"\n\n  echo\n  echo \"To learn how to control the server, run:\"\n  if [ \"yes\" = \"$CURRENTLY_UID_ZERO\" ] ; then\n    echo \"  sandstorm help\"\n  else\n    echo \"  $DIR/sandstorm help\"\n  fi\n}\n\nsandcats_provide_help() {\n  echo \"Sandcats.io is a free dynamic DNS service run by the Sandstorm development team.\"\n  echo \"\"\n  echo \"You can:\"\n  echo \"\"\n  echo \"* Read more about it at:\"\n  echo \"  https://docs.sandstorm.io/en/latest/administering/sandcats/\"\n  echo \"\"\n  echo \"* Recover access to a domain you once registered with sandcats\"\n  echo \"\"\n  echo \"* Just press enter to go to the previous question.\"\n  sandcats_recover_domain\n}\n\nsandcats_recover_domain() {\n  DESIRED_SANDCATS_NAME=$(prompt \"What Sandcats subdomain do you want to recover?\" \"none\")\n\n  # If the user wants none of our help, then go back to registration.\n  if [ \"none\" = \"$DESIRED_SANDCATS_NAME\" ] ; then\n    unset DESIRED_SANDCATS_NAME\n    sandcats_register_name\n    return\n  fi\n\n  # If the user gave us a hostname that contains a dot, tell them they need to re-enter it.\n  if [[ $DESIRED_SANDCATS_NAME =~ [.] ]] ; then\n    echo \"\"\n    echo \"You entered: $DESIRED_SANDCATS_NAME\"\n    echo \"\"\n    echo \"but this function just wants the name of your subdomain, not including any dot characters.\"\n    echo \"Please try again.\"\n    echo \"\"\n    sandcats_recover_domain\n    return\n  fi\n\n  echo \"OK. We will send a recovery token to the email address on file. Type no to abort.\"\n  OK_TO_CONTINUE=$(prompt \"OK to continue?\" \"yes\")\n  if [ \"no\" = \"$OK_TO_CONTINUE\" ] ; then\n    unset DESIRED_SANDCATS_NAME\n    sandcats_register_name\n    return\n  fi\n\n  # First, we attempt to send the user a domain recovery token.\n  local LOG_PATH=\"var/sandcats/sendrecoverytoken-log\"\n  touch \"$LOG_PATH\"\n  chmod 0640 \"$LOG_PATH\"\n  HTTP_STATUS=$(\n    dotdotdot_curl \\\n      --silent \\\n      --max-time 20 \\\n      $SANDCATS_CURL_PARAMS \\\n      -A \"$CURL_USER_AGENT\" \\\n      -X POST \\\n      --data-urlencode \"rawHostname=$DESIRED_SANDCATS_NAME\" \\\n      --output \"$LOG_PATH\" \\\n      -w '%{http_code}' \\\n      -H 'X-Sand: cats' \\\n      -H \"Accept: text/plain\" \\\n      \"${SANDCATS_API_BASE}/sendrecoverytoken\")\n\n  if [ \"200\" != \"$HTTP_STATUS\" ] ; then\n    error \"$(cat $LOG_PATH)\"\n    sandcats_recover_domain\n    return\n  fi\n\n  # Show the server's output, which presumably is some happy\n  # message.\n  cat \"$LOG_PATH\"\n  # Make sure that is on a line of its own.\n  echo ''\n  TOKEN=$(prompt \"Please enter the token that we sent to you by email.\" '')\n\n  # If the token is empty, then they just hit enter; take them to the start of help.\n  if [ -z \"$TOKEN\" ] ; then\n    error \"Empty tokens are not valid.\"\n    sandcats_recover_domain\n    return\n  fi\n\n  # Let's submit that token to the server's \"recover\" endpoint.\n  #\n  # This action registers the new key as the authoritative key for\n  # this hostname. It also sends an email to the user telling them\n  # that we changed the key they have on file.\n  local LOG_PATH=\"var/sandcats/recover-log\"\n  touch \"$LOG_PATH\"\n  chmod 0640 \"$LOG_PATH\"\n  HTTP_STATUS=$(\n      dotdotdot_curl \\\n      --silent \\\n      --max-time 20 \\\n      $SANDCATS_CURL_PARAMS \\\n      -A \"$CURL_USER_AGENT\" \\\n      -X POST \\\n      --data-urlencode \"rawHostname=$DESIRED_SANDCATS_NAME\" \\\n      --data-urlencode \"recoveryToken=$TOKEN\" \\\n      --output \"$LOG_PATH\" \\\n      -w '%{http_code}' \\\n      -H 'X-Sand: cats' \\\n      -H \"Accept: text/plain\" \\\n      --cert var/sandcats/id_rsa.private_combined \\\n      \"${SANDCATS_API_BASE}/recover\")\n\n  if [ \"200\" != \"$HTTP_STATUS\" ] ; then\n    error \"$(cat $LOG_PATH)\"\n    sandcats_recover_domain\n    return\n  fi\n\n  # Show the server's output, which presumably is some happy\n  # message.\n  cat \"$LOG_PATH\"\n  # Make sure that is on a line of its own.\n  echo ''\n\n  # Now we can do a call to /update, which we will do silently on the\n  # user's behalf. This uses the new key we registered (via /recover)\n  # and sets the IP address for this host in the sandcats.io DNS\n  # service.\n  local LOG_PATH=\"var/sandcats/update-log\"\n  touch \"$LOG_PATH\"\n  chmod 0640 \"$LOG_PATH\"\n  HTTP_STATUS=$(\n    dotdotdot_curl \\\n      --silent \\\n      --max-time 20 \\\n      $SANDCATS_CURL_PARAMS \\\n      -A \"$CURL_USER_AGENT\" \\\n      -X POST \\\n      --data-urlencode \"rawHostname=$DESIRED_SANDCATS_NAME\" \\\n      --output \"$LOG_PATH\" \\\n      -w '%{http_code}' \\\n      -H 'X-Sand: cats' \\\n      -H \"Accept: text/plain\" \\\n      --cert var/sandcats/id_rsa.private_combined \\\n      \"${SANDCATS_API_BASE}/update\")\n\n  if [ \"200\" != \"$HTTP_STATUS\" ] ; then\n    error \"$(cat $LOG_PATH)\"\n    sandcats_recover_domain\n    return\n  fi\n\n  # Show the server's happy message.\n  cat \"$LOG_PATH\"\n  # Make sure that is on a line of its own.\n  echo ''\n\n  SANDCATS_SUCCESSFUL=\"yes\"\n  SS_HOSTNAME=\"${DESIRED_SANDCATS_NAME}.${SANDCATS_BASE_DOMAIN}\"\n  USE_EXTERNAL_INTERFACE=\"yes\"\n  USE_HTTPS=\"yes\"\n  echo \"Congratulations! You're all configured to use ${DESIRED_SANDCATS_NAME}.${SANDCATS_BASE_DOMAIN}.\"\n  echo \"Your credentials to use it are in $(readlink -f var/sandcats); consider making a backup.\"\n}\n\nsandcats_registerreserved() {\n  echo \"Registering your pre-reserved domain.\"\n  local LOG_PATH\n  LOG_PATH=\"var/sandcats/registerreserved-log\"\n  touch \"$LOG_PATH\"\n  chmod 0640 \"$LOG_PATH\"\n  HTTP_STATUS=$(\n    dotdotdot_curl \\\n      --silent \\\n      --max-time 20 \\\n      $SANDCATS_CURL_PARAMS \\\n      -A \"$CURL_USER_AGENT\" \\\n      -X POST \\\n      --data-urlencode \"domainReservationToken=$SANDCATS_DOMAIN_RESERVATION_TOKEN\" \\\n      --data-urlencode \"rawHostname=$DESIRED_SANDCATS_NAME\" \\\n      --output \"$LOG_PATH\" \\\n      -w '%{http_code}' \\\n      -H 'X-Sand: cats' \\\n      -H \"Accept: text/plain\" \\\n      --cert var/sandcats/id_rsa.private_combined \\\n      \"${SANDCATS_API_BASE}/registerreserved\")\n\n  if [ \"200\" = \"$HTTP_STATUS\" ]\n  then\n    # Show the server's output, which presumably is some happy\n    # message.\n    cat \"$LOG_PATH\"\n    # Make sure that is on a line of its own.\n    echo ''\n    # Set these global variables to inform the installer down the\n    # road.\n    SS_HOSTNAME=\"${DESIRED_SANDCATS_NAME}.${SANDCATS_BASE_DOMAIN}\"\n    USE_EXTERNAL_INTERFACE=\"yes\"\n    USE_HTTPS=\"yes\"\n    SANDCATS_SUCCESSFUL=\"yes\"\n    echo \"Congratulations! We have registered your ${DESIRED_SANDCATS_NAME}.${SANDCATS_BASE_DOMAIN} name.\"\n    echo \"Your credentials to use it are in $(readlink -f var/sandcats); consider making a backup.\"\n  else\n    # Show the server's output, and bail out.\n    #\n    # TODO(soon): Wait 1 minute in case the sandcats.io service had a brief hiccup, and retry (let's\n    # say) 5 times.\n    fail \"E_SANDCATS_REGISTER_RESERVED_SRV_FAIL\" \"$(cat \"$LOG_PATH\")\"\n  fi\n}\n\nsandcats_register_name() {\n  # We allow environment variables to override some details of the\n  # Sandcats service, so that during development, we can test against\n  # a non-production Sandcats service.\n  SANDCATS_API_BASE=\"${OVERRIDE_SANDCATS_API_BASE:-https://sandcats.io}\"\n  SANDCATS_CURL_PARAMS=\"${OVERRIDE_SANDCATS_CURL_PARAMS:-}\"\n\n  # If there is a SANDCATS_DOMAIN_RESERVATION_TOKEN provided, then we call a different function to\n  # do the work.\n  if [ ! -z \"${SANDCATS_DOMAIN_RESERVATION_TOKEN:-}\" ] ; then\n    sandcats_registerreserved\n    return\n  fi\n\n  if [ -z \"${DESIRED_SANDCATS_NAME:-}\" ] ; then\n    echo \"Choose your desired Sandcats subdomain (alphanumeric, max 20 characters).\"\n    echo \"Type the word none to skip this step, or help for help.\"\n    DESIRED_SANDCATS_NAME=$(prompt \"What *.${SANDCATS_BASE_DOMAIN} subdomain would you like?\" '')\n  fi\n\n  # If they just press enter, insist that they type either the word\n  # \"none\" or provide a name they want to register.\n  if [ -z \"$DESIRED_SANDCATS_NAME\" ] ; then\n    sandcats_register_name\n    return\n  fi\n\n  # If the user really wants none of our sandcats help, then bail out.\n  if [ \"none\" = \"$DESIRED_SANDCATS_NAME\" ] ; then\n    return\n  fi\n\n  # If the user wants help, offer help.\n  if [ \"help\" = \"$DESIRED_SANDCATS_NAME\" ] ; then\n    sandcats_provide_help\n    return\n  fi\n\n  # Validate the client-side, to avoid problems, against a slightly\n  # less rigorous regex than the server is using.\n  if ! [[ $DESIRED_SANDCATS_NAME =~ ^[0-9a-zA-Z-]{1,20}$ ]] ; then\n    unset DESIRED_SANDCATS_NAME\n    sandcats_register_name\n    return\n  fi\n\n  # Ask them for their email address, since we use that as part of Sandcats\n  # registration.\n  if [ -z \"${SANDCATS_REGISTRATION_EMAIL:-}\" ]; then\n    echo \"We need your email on file so we can help you recover your domain if you lose access. No spam.\"\n    SANDCATS_REGISTRATION_EMAIL=$(prompt \"Enter your email address:\" \"\")\n\n    # If the user fails to enter an email address, bail out.\n    while [ \"\" = \"$SANDCATS_REGISTRATION_EMAIL\" ] ; do\n      echo \"For the DNS service, we really do need an email address. To cancel, type: Ctrl-C.\"\n      SANDCATS_REGISTRATION_EMAIL=$(prompt \"Enter your email address:\" \"\")\n    done\n  fi\n\n  echo \"Registering your domain.\"\n  local LOG_PATH\n  LOG_PATH=\"var/sandcats/register-log\"\n  touch \"$LOG_PATH\"\n  chmod 0640 \"$LOG_PATH\"\n  HTTP_STATUS=$(\n    dotdotdot_curl \\\n      --silent \\\n      --max-time 20 \\\n      $SANDCATS_CURL_PARAMS \\\n      -A \"$CURL_USER_AGENT\" \\\n      -X POST \\\n      --data-urlencode \"rawHostname=$DESIRED_SANDCATS_NAME\" \\\n      --data-urlencode \"email=$SANDCATS_REGISTRATION_EMAIL\" \\\n      --output \"$LOG_PATH\" \\\n      -w '%{http_code}' \\\n      -H 'X-Sand: cats' \\\n      -H \"Accept: text/plain\" \\\n      --cert var/sandcats/id_rsa.private_combined \\\n      \"${SANDCATS_API_BASE}/register\")\n\n  if [ \"200\" = \"$HTTP_STATUS\" ]\n  then\n    # Show the server's output, which presumably is some happy\n    # message.\n    cat \"$LOG_PATH\"\n    # Make sure that is on a line of its own.\n    echo ''\n    # Set these global variables to inform the installer down the\n    # road.\n    SS_HOSTNAME=\"${DESIRED_SANDCATS_NAME}.${SANDCATS_BASE_DOMAIN}\"\n    USE_EXTERNAL_INTERFACE=\"yes\"\n    USE_HTTPS=\"yes\"\n    SANDCATS_SUCCESSFUL=\"yes\"\n    echo \"Congratulations! We have registered your ${DESIRED_SANDCATS_NAME}.${SANDCATS_BASE_DOMAIN} name.\"\n    echo \"Your credentials to use it are in $(readlink -f var/sandcats); consider making a backup.\"\n  else\n    # Show the server's output, and re-run this function.\n    error \"$(cat \"$LOG_PATH\")\"\n    unset DESIRED_SANDCATS_NAME\n    unset SANDCATS_REGISTRATION_EMAIL\n    sandcats_register_name\n    return\n  fi\n}\n\nwait_for_server_bind_to_its_port() {\n  # If we haven't started Sandstorm ourselves, it's not sensible to expect it to be listening.\n  if [ \"yes\" != \"${STARTED_SANDSTORM}\" ] ; then\n    return\n  fi\n\n  # For sandcats HTTPS, we have to generate the initial non-SNI key before Sandstorm binds to port\n  # 443. So we let the user know it could be slow. For all users, using the admin token requires\n  # that the server has started.\n  local PORT_TO_CHECK=\"${HTTPS_PORT:-$PORT}\"\n  echo -n \"Your server is coming online. Waiting up to 90 seconds...\"\n  local ONLINE_YET=\"no\"\n  for waited_n_seconds in $(seq 0 89); do\n    is_port_bound \"${BIND_IP}\" \"${PORT_TO_CHECK}\" && ONLINE_YET=\"yes\"\n    if [ \"$ONLINE_YET\" == \"yes\" ] ; then\n      echo ''\n      break\n    fi\n    echo -n \".\"\n    sleep 1\n  done\n\n  # One last check before we bail out.\n  is_port_bound \"${BIND_IP}\" \"${PORT_TO_CHECK}\" && ONLINE_YET=\"yes\"\n\n  if [ \"$ONLINE_YET\" == \"yes\" ]; then\n    return\n  else\n    fail \"E_NEVER_LISTENED\" \"Your server never started listening.\"\n  fi\n}\n\nsandcats_generate_keys() {\n    # The Sandcats service places its authentication files in $DIR/var/sandcats.\n    if [ -f var/sandcats/id_rsa.private_combined ] ; then\n        return\n    fi\n\n    # The openssl key generation process can take a few seconds, so we\n    # print a ... while that happens.\n    echo -n '...'\n\n    # We are already in $DIR. It's important to make it mode 0700\n    # because we store TLS client authentication keys here.\n    mkdir -p -m 0700 var/sandcats\n    chmod 0700 var/sandcats\n\n    # If we are root, we must chown the Sandcats configuration\n    # directory to the user that will be running Sandstorm.\n    if [ \"yes\" = \"$CURRENTLY_UID_ZERO\" ] ; then\n        chown \"$SERVER_USER\":\"$SERVER_USER\" var/sandcats\n    fi\n\n    # Generate key for client certificate. OpenSSL will read from\n    # /dev/urandom by default, so this won't block. We abuse the ``\n    # operator so we can have inline comments in a multi-line command.\n    openssl \\\n        req `# Invoke OpenSSL's PKCS#10 X.509 bits.` \\\n        -new `# Create a new certificate/request.` \\\n        -newkey rsa:4096 `# Create a new RSA key of length 4096 bits.` \\\n        -days 3650 `# Make the self-signed cert valid for 10 years.` \\\n        -nodes `# no DES -- that is, do not encrypt the key at rest.` \\\n        -x509 `# Output a certificate, rather than a signing request.` \\\n        `# Sandcats ignores the subject in the certificate; use` \\\n        `# OpenSSL defaults.` \\\n        -subj \"/C=AU/ST=Some-State/O=Internet Widgits Pty Ltd\" \\\n        -keyout var/sandcats/id_rsa `# Store the resulting RSA private key in id_rsa` \\\n        -out var/sandcats/id_rsa.pub `# Store the resulting certificate in id_rsa.pub` \\\n        2>/dev/null `# Silence the progress output.`\n\n    # We combine these two things into one glorious all-inclusive file\n    # for the `curl` command. It is just as private as id_rsa.\n    cat var/sandcats/id_rsa var/sandcats/id_rsa.pub > var/sandcats/id_rsa.private_combined\n\n    # Set filesystem permissions, in case the files get copied\n    # into the wrong place later.\n    chmod 0640 var/sandcats/id_rsa var/sandcats/id_rsa.pub var/sandcats/id_rsa.private_combined\n\n    # If we are root, make sure the files are owned by the\n    # $SERVER_USER. This way, Sandstorm can actually read them.\n    if [ \"yes\" = \"$CURRENTLY_UID_ZERO\" ] ; then\n        chown \"$SERVER_USER\":\"$SERVER_USER\" var/sandcats/id_rsa{,.pub,.private_combined}\n    fi\n\n    # Go to the start of the line, before the \"...\" that we\n    # left on the screen, allowing future echo statements to\n    # overwrite it.\n    echo -ne '\\r'\n}\n\nconfigure_https() {\n  if [ \"yes\" != \"${USE_HTTPS}\" ] ; then\n    return\n  fi\n\n  echo\n  echo \"Now we're going to fetch a TLS certificate using Let's Encrypt. This is a free\"\n  echo \"service provided by the nonprofit Electronic Frontier Foundation. By using this\"\n  echo \"service, you agree to be bound by the subscriber agreement, found here:\"\n  echo \"  https://letsencrypt.org/repository/#let-s-encrypt-subscriber-agreement\"\n  echo \"If you do not agree, please press ctrl+C now to cancel installation.\"\n  echo\n\n  if [ -z \"${ACME_EMAIL:-}\" ]; then\n    echo \"You must provide an email address, which will be shared with Let's Encrypt.\"\n    ACME_EMAIL=\"$(prompt \"Your email address for Let's Encrypt:\" \"${SANDCATS_REGISTRATION_EMAIL:-}\")\"\n  fi\n\n  $DIR/sandstorm create-acme-account \"$ACME_EMAIL\" --accept-terms ||\n      fail \"E_CREATE_ACME_ACCOUNT\" \"Failed to create Let's Encrypt account.\"\n\n  echo \"Your Let's Encrypt account has been created. Now we'll fetch a certificate!\"\n  $DIR/sandstorm renew-certificate ||\n      fail \"E_FETCH_CERTIFICATE\" \"Failed to fetch certificate.\"\n}\n\n# Now that the steps exist as functions, run them in an order that\n# would result in a working install.\nhandle_args \"$@\"\nset_umask\nassert_on_terminal\nassert_linux_x86_64\nassert_usable_kernel\ndetect_current_uid\nassert_dependencies\nassert_valid_bundle_file\ndetect_init_system\nchoose_install_mode\nmaybe_enable_userns_sysctl\nchoose_external_or_internal\nchoose_install_dir\nchoose_smtp_port\nload_existing_settings\nchoose_server_user_if_needed\ncreate_server_user_if_needed\nconfigure_auto_updates\nconfigure_dev_accounts\nconfigure_hostnames\nsave_config\ndownload_latest_bundle_and_extract_if_needed\nextract_bundle_if_provided\nmake_runtime_directories\ngenerate_admin_token\nset_permissions\ninstall_sandstorm_symlinks\nask_about_starting_at_boot\nconfigure_start_at_boot_if_desired\nwait_for_server_bind_to_its_port\nconfigure_https\nprint_success\n}\n\n# Now that we know the whole script has downloaded, run it.\n_ \"$0\" \"$@\"\n"
        },
        {
          "name": "installer-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "keys",
          "type": "tree",
          "content": null
        },
        {
          "name": "localedata-C",
          "type": "blob",
          "size": 7.2939453125,
          "content": "escape_char /\ncomment_char %\n% Locale for C locale in UTF-8\n\nLC_IDENTIFICATION\ntitle      \"C locale\"\nsource     \"\"\naddress    \"\"\ncontact    \"\"\nemail      \"drew@sandstorm.io\"\ntel        \"\"\nfax        \"\"\nlanguage   \"C\"\nterritory  \"\"\nrevision   \"1.0\"\ndate       \"2015-11-30\"\n%\ncategory  \"i18n:2012\";LC_IDENTIFICATION\ncategory  \"i18n:2012\";LC_CTYPE\ncategory  \"i18n:2012\";LC_COLLATE\ncategory  \"i18n:2012\";LC_TIME\ncategory  \"i18n:2012\";LC_NUMERIC\ncategory  \"i18n:2012\";LC_MONETARY\ncategory  \"i18n:2012\";LC_MESSAGES\ncategory  \"i18n:2012\";LC_PAPER\ncategory  \"i18n:2012\";LC_NAME\ncategory  \"i18n:2012\";LC_ADDRESS\ncategory  \"i18n:2012\";LC_TELEPHONE\ncategory  \"i18n:2012\";LC_MEASUREMENT\nEND LC_IDENTIFICATION\n\nLC_CTYPE\ncopy \"i18n\"\n\ntranslit_start\ninclude \"translit_combining\";\"\"\ntranslit_end\n\nEND LC_CTYPE\n\nLC_COLLATE\n% Using Fedora's technique for reducing this from 1114111 literals to a tiny handful.\norder_start forward\n<U0000>\n..\n<UFFFF>\n<U10000>\n..\n<UFFFFF>\n<U100000>\n..\n<U10FFFF>\nUNDEFINED\norder_end\nEND LC_COLLATE\n\nLC_MONETARY\n% This is the 14652 i18n fdcc-set definition for\n% the LC_MONETARY category\n% (except for the int_curr_symbol and currency_symbol, they are empty in\n% the 14652 i18n fdcc-set definition and also empty in\n% glibc/locale/C-monetary.c. But localedef complains in that case).\n%\n% Using \"USD\" for int_curr_symbol. But maybe \"XXX\" would be better?\n% XXX is \"No currency\" (https://en.wikipedia.org/wiki/ISO_4217)\nint_curr_symbol     \"<U0055><U0053><U0044><U0020>\"\n% Using \"$\" for currency_symbol. But maybe <U00A4> would be better?\n% U+00A4 is the \"generic currency symbol\"\n% (https://en.wikipedia.org/wiki/Currency_sign_%28typography%29)\ncurrency_symbol     \"<U0024>\"\nmon_decimal_point   \"<U002E>\"\nmon_thousands_sep   \"\"\nmon_grouping        -1\npositive_sign       \"\"\nnegative_sign       \"<U002D>\"\nint_frac_digits     -1\nfrac_digits         -1\np_cs_precedes       -1\nint_p_sep_by_space  -1\np_sep_by_space      -1\nn_cs_precedes       -1\nint_n_sep_by_space  -1\nn_sep_by_space      -1\np_sign_posn         -1\nn_sign_posn         -1\n%\nEND LC_MONETARY\n\nLC_NUMERIC\n% This is the POSIX Locale definition for\n% the LC_NUMERIC category.\n%\ndecimal_point   \"<U002E>\"\nthousands_sep   \"\"\ngrouping        -1\nEND LC_NUMERIC\n\nLC_TIME\n% This is the POSIX Locale definition for\n% the LC_TIME category.\n%\n% Abbreviated weekday names (%a)\nabday       \"<U0053><U0075><U006E>\";\"<U004D><U006F><U006E>\";/\n            \"<U0054><U0075><U0065>\";\"<U0057><U0065><U0064>\";/\n            \"<U0054><U0068><U0075>\";\"<U0046><U0072><U0069>\";/\n            \"<U0053><U0061><U0074>\"\n\n% Full weekday names (%A)\nday         \"<U0053><U0075><U006E><U0064><U0061><U0079>\";/\n            \"<U004D><U006F><U006E><U0064><U0061><U0079>\";/\n            \"<U0054><U0075><U0065><U0073><U0064><U0061><U0079>\";/\n            \"<U0057><U0065><U0064><U006E><U0065><U0073><U0064><U0061><U0079>\";/\n            \"<U0054><U0068><U0075><U0072><U0073><U0064><U0061><U0079>\";/\n            \"<U0046><U0072><U0069><U0064><U0061><U0079>\";/\n            \"<U0053><U0061><U0074><U0075><U0072><U0064><U0061><U0079>\"\n\n% Abbreviated month names (%b)\nabmon       \"<U004A><U0061><U006E>\";\"<U0046><U0065><U0062>\";/\n            \"<U004D><U0061><U0072>\";\"<U0041><U0070><U0072>\";/\n            \"<U004D><U0061><U0079>\";\"<U004A><U0075><U006E>\";/\n            \"<U004A><U0075><U006C>\";\"<U0041><U0075><U0067>\";/\n            \"<U0053><U0065><U0070>\";\"<U004F><U0063><U0074>\";/\n            \"<U004E><U006F><U0076>\";\"<U0044><U0065><U0063>\"\n\n% Full month names (%B)\nmon         \"<U004A><U0061><U006E><U0075><U0061><U0072><U0079>\";/\n            \"<U0046><U0065><U0062><U0072><U0075><U0061><U0072><U0079>\";/\n            \"<U004D><U0061><U0072><U0063><U0068>\";/\n            \"<U0041><U0070><U0072><U0069><U006C>\";/\n            \"<U004D><U0061><U0079>\";/\n            \"<U004A><U0075><U006E><U0065>\";/\n            \"<U004A><U0075><U006C><U0079>\";/\n            \"<U0041><U0075><U0067><U0075><U0073><U0074>\";/\n            \"<U0053><U0065><U0070><U0074><U0065><U006D><U0062><U0065><U0072>\";/\n            \"<U004F><U0063><U0074><U006F><U0062><U0065><U0072>\";/\n            \"<U004E><U006F><U0076><U0065><U006D><U0062><U0065><U0072>\";/\n            \"<U0044><U0065><U0063><U0065><U006D><U0062><U0065><U0072>\"\n\n% Week description, consists of three fields:\n% 1. Number of days in a week.\n% 2. Gregorian date that is a first weekday (19971130 for Sunday, 19971201 for Monday).\n% 3. The weekday number to be contained in the first week of the year.\n%\n% ISO 8601 conforming applications should use the values 7, 19971201 (a\n% Monday), and 4 (Thursday), respectively.\n% We mimic Debian here, with the US-centric Sunday-through-Saturday week\nweek    7;19971130;7\nfirst_weekday\t1\nfirst_workday\t2\n\n% Appropriate date and time representation (%c)\n%\t\"%a %b %e %H:%M:%S %Y\"\nd_t_fmt \"<U0025><U0061><U0020><U0025><U0062><U0020><U0025><U0065><U0020><U0025><U0048><U003A><U0025><U004D><U003A><U0025><U0053><U0020><U0025><U0059>\"\n\n% Appropriate date representation (%x)\n%\t\"%m/%d/%y\"\nd_fmt   \"<U0025><U006D><U002F><U0025><U0064><U002F><U0025><U0079>\"\n\n% Appropriate time representation (%X)\n%\t\"%H:%M:%S\"\nt_fmt   \"<U0025><U0048><U003A><U0025><U004D><U003A><U0025><U0053>\"\n\n% Appropriate AM/PM time representation (%r)\n%\t\"%I:%M:%S %p\"\nt_fmt_ampm \"<U0025><U0049><U003A><U0025><U004D><U003A><U0025><U0053><U0020><U0025><U0070>\"\n\n% Equivalent of AM/PM (%p)      \"AM\"/\"PM\"\nam_pm\t\"<U0041><U004D>\";\"<U0050><U004D>\"\n\n% Appropriate date representation (date(1))   \"%a %b %e %H:%M:%S %Z %Y\"\ndate_fmt\t\"<U0025><U0061><U0020><U0025><U0062><U0020><U0025><U0065><U0020><U0025><U0048><U003A><U0025><U004D><U003A><U0025><U0053><U0020><U0025><U005A><U0020><U0025><U0059>\"\nEND LC_TIME\n\nLC_MESSAGES\n% This is the POSIX Locale definition for\n% the LC_NUMERIC category.\n%\nyesexpr \"<U005E><U005B><U0079><U0059><U005D>\"\nnoexpr  \"<U005E><U005B><U006E><U004E><U005D>\"\nyesstr  \"<U0059><U0065><U0073>\"\nnostr   \"<U004E><U006F>\"\nEND LC_MESSAGES\n\nLC_PAPER\n% This is the ISO/IEC 14652 \"i18n\" definition for\n% the LC_PAPER category.\n% (A4 paper, this is also used in the built in C/POSIX\n% locale in glibc/locale/C-paper.c)\nheight   297\nwidth    210\nEND LC_PAPER\n\nLC_NAME\n% This is the ISO/IEC 14652 \"i18n\" definition for\n% the LC_NAME category.\n% \"%p%t%g%t%m%t%f\"\n% (this value matches the built in C/POSIX locale in glibc/locale/C-name.c)\nname_fmt    \"<U0025><U0070><U0025><U0074><U0025><U0067><U0025><U0074>/\n<U0025><U006D><U0025><U0074><U0025><U0066>\"\nEND LC_NAME\n\nLC_ADDRESS\n% This is the ISO/IEC 14652 \"i18n\" definition for the LC_ADDRESS category.\n% \"%a%N%f%N%d%N%b%N%s %h %e %r%N%C-%z %T%N%c%N\"\n% (this value matches the built in C/POSIX locale in glibc/locale/C-address.c)\npostal_fmt    \"<U0025><U0061><U0025><U004E><U0025><U0066><U0025><U004E>/\n<U0025><U0064><U0025><U004E><U0025><U0062><U0025><U004E><U0025><U0073>/\n<U0020><U0025><U0068><U0020><U0025><U0065><U0020><U0025><U0072><U0025>/\n<U004E><U0025><U0043><U002D><U0025><U007A><U0020><U0025><U0054><U0025>/\n<U004E><U0025><U0063><U0025><U004E>\"\nEND LC_ADDRESS\n\nLC_TELEPHONE\n% This is the ISO/IEC 14652 \"i18n\" definition for the LC_TELEPHONE category.\n% \"+%c %a %l\"\ntel_int_fmt    \"<U002B><U0025><U0063><U0020><U0025><U0061><U0020><U0025>/\n<U006C>\"\n% (this value matches the built in C/POSIX locale in glibc/locale/C-telephone.c)\nEND LC_TELEPHONE\n\nLC_MEASUREMENT\n% This is the ISO/IEC 14652 \"i18n\" definition for the LC_MEASUREMENT category.\n% (this value matches the built in C/POSIX locale in glibc/locale/C-measurement.c)\n%metric\nmeasurement    1\nEND LC_MEASUREMENT\n\n"
        },
        {
          "name": "make-bundle.sh",
          "type": "blob",
          "size": 8.177734375,
          "content": "#! /bin/bash\n#\n# Sandstorm - Personal Cloud Sandbox\n# Copyright (c) 2014 Sandstorm Development Group, Inc. and contributors\n# All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -euo pipefail\nshopt -s extglob\n\nrm -rf bundle\n\nfail() {\n  echo \"make-bundle.sh: FAILED at line $1\" >&2\n  rm -rf bundle\n  exit 1\n}\n\ntrap 'fail ${LINENO}' ERR\n\ncopyDep() {\n  # Copies a file from the system into the chroot.\n\n  local FILE=$1\n  local DST=bundle\"${FILE/#\\/usr\\/local/\\/usr}\"\n\n  if [ -e \"$DST\" ]; then\n    # already copied\n    :\n  elif [[ \"$FILE\" == /etc/* ]]; then\n    # We'll want to copy configuration (e.g. for DNS) from the host at runtime.\n    if [ -f \"$FILE\" ]; then\n      echo \"$FILE\" >> tmp/host.list\n    fi\n  elif [ -h \"$FILE\" ]; then\n    # Symbolic link.\n    # We copy over the target, and recreate the link.\n    # Currently we denormalize the link because I'm not sure how to follow\n    # one link at a time in bash (since readlink without -f gives a relative\n    # path and I'm not sure how to interpret that against the link's path).\n    # I'm sure there's a way, but whatever...\n    mkdir -p $(dirname \"$DST\")\n    local LINK=$(readlink -f \"$FILE\")\n    ln -sf \"${LINK/#\\/usr\\/local/\\/usr}\" \"$DST\"\n    copyDep \"$LINK\"\n  elif [ -d \"$FILE\" ]; then\n    # Directory.  Make it, but don't copy contents; we'll do that later.\n    mkdir -p \"$DST\"\n  elif [ -f \"$FILE\" ]; then\n    # Regular file.  Copy it over.\n    mkdir -p $(dirname \"$DST\")\n    cp \"$FILE\" \"$DST\"\n  fi\n}\n\ncopyDeps() {\n  # Reads filenames on stdin and copies them into the chroot.\n\n  while read FILE; do\n    copyDep \"$FILE\"\n  done\n}\n\n# Check for requiremnets.\nfor CMD in zip unzip xz gpg; do\n  if ! which \"$CMD\" > /dev/null; then\n    echo \"Please install $CMD\" >&2\n    fail ${LINENO}\n  fi\ndone\n\nMETEOR_DEV_BUNDLE=$(./find-meteor-dev-bundle.sh)\n\n# Start with the meteor bundle.\ncp -r shell-build/bundle bundle\nrm -f bundle/README\ncp meteor-bundle-main.js bundle/sandstorm-main.js\n\n# Meteor wants us to do `npm install` in the bundle to prepare it.\n# The fibers package builds native extensions, choosing the target v8 version based on\n# the version of `/usr/bin/env node`. We need to make it does not pick up the wrong binary,\n# so we place Meteor's node first on `PATH`.  Additional native extensions require node-pre-gyp,\n# which lives in the .bin folder of the dev bundle's node_modules.\n(cd bundle/programs/server && \\\n PATH=$METEOR_DEV_BUNDLE/lib/node_modules/.bin:$METEOR_DEV_BUNDLE/bin:$PATH \"$METEOR_DEV_BUNDLE/bin/npm\" install)\n\n# Copy over key binaries.\nmkdir -p bundle/bin\ncp bin/sandstorm-http-bridge bundle/bin/sandstorm-http-bridge\ncp bin/sandstorm bundle/sandstorm\ncp $METEOR_DEV_BUNDLE/bin/node bundle/bin\n\n# We used to pull mongodb out of the meteor dev bundle, but we need to figure out how to safely\n# upgrade some databases created with very old mongo versions, so we're shipping mongo 2.6 for\n# now.\n#cp $METEOR_DEV_BUNDLE/mongodb/bin/{mongo,mongod} bundle/bin\n\n# Pull mongo v2.6 out of a previous Sandstorm package.\nOLD_BUNDLE_BASE=sandstorm-171\nOLD_BUNDLE_FILENAME=$OLD_BUNDLE_BASE.tar.xz\nOLD_BUNDLE_PATH=hack/$OLD_BUNDLE_FILENAME\nOLD_BUNDLE_SHA256=ebffd643dffeba349f139bee34e4ce33fd9b1298fafc1d6a31eb35a191059a99\nOLD_MONGO_FILES=\"$OLD_BUNDLE_BASE/bin/mongo $OLD_BUNDLE_BASE/bin/mongod\"\nif [ ! -e \"$OLD_BUNDLE_PATH\" ] ; then\n  echo \"Fetching $OLD_BUNDLE_FILENAME to extract a mongo 2.6...\"\n  curl --output \"$OLD_BUNDLE_PATH\" https://dl.sandstorm.io/$OLD_BUNDLE_FILENAME\nfi\n\n# Always check the checksum to guard against corrupted downloads.\nsha256sum --check <<EOF\n$OLD_BUNDLE_SHA256  $OLD_BUNDLE_PATH\nEOF\n# set -e should ensure we don't continue past here, but let's be doubly sure\nrc=$?\nif [ $rc -ne 0 ]; then\n  echo \"Old bundle did not match expected checksum.  Aborting.\"\n  exit 1\nfi\n\n# Extract bin/mongo and bin/mongod from the old sandstorm bundle, and place them in bundle/.\ntar xf $OLD_BUNDLE_PATH --transform=s/^${OLD_BUNDLE_BASE}/bundle/ $OLD_MONGO_FILES\n\ncp $(which zip unzip xz gpg) bundle/bin\n\n# 'node-fibers' depends on a package (detect-libc) that uses various heuristics\n# to work out what libc implementation & version it was linked against. The more\n# reliable ones use these commands, so we include them to increase the chances\n# of success. Notably, without these detecting the correct libc fails if the\n# bundle was built on current Archlinux (as of Jan. 2020).\ncp $(which ldd getconf) bundle/bin\n\n# Older installs might be symlinking /usr/local/bin/spk to\n# /opt/sandstorm/latest/bin/spk, while newer installs link it to\n# /opt/sandstorm/sandstorm. We should keep creating the old symlink to avoid\n# breakages.\nln -s ../sandstorm bundle/bin/spk\n\n# Binaries copied from Meteor aren't writable by default.\nchmod u+w bundle/bin/*\n\n# Copy over capnp schemas.\nmkdir -p bundle/usr/include/{capnp,sandstorm}\ncp src/capnp/!(*test*).capnp bundle/usr/include/capnp\ncp src/sandstorm/!(*-internal).capnp bundle/usr/include/sandstorm\n\n# Copy over node_modules.\ncp -r node_modules bundle\n\n# Copy over all necessary shared libraries.\n(ldd bundle/bin/* $(find bundle -name '*.node') || true) | grep -o '[[:space:]]/[^ ]*' | copyDeps\n\n# Determine dependencies needed to run getaddrinfo() and copy them over.  glibc loads the\n# DNS library dynamically, so `ldd` alone won't tell us this.  Also we want to find out\n# what config files are needed from /etc, though we don't copy them over until runtime.\ncat > tmp/dnstest.c << '__EOF__'\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netdb.h>\n#include <stdlib.h>\n\nint main() {\n  struct addrinfo* result;\n  getaddrinfo(\"example.com\", \"http\", NULL, &result);\n  return 0;\n}\n__EOF__\n\n$CC tmp/dnstest.c -o tmp/dnstest\nstrace tmp/dnstest 2>&1 | grep -o '\"/[^\"]*\"' | tr -d '\"' | copyDeps\n\n# Add some whitelisted entries to host.list that we always want to include,\n# even if the build machine doesn't necessarily use them.  This helps handle\n# systems that use resolvconf to manage /etc/resolv.conf.\n# We skip copyDeps because it only adds files that exist on this system; we\n# wish to make things work for systems configured differently from the build host.\ncat >> tmp/host.list << '__EOF__'\n/etc/gai.conf\n/etc/host.conf\n/etc/hosts\n/etc/nsswitch.conf\n/etc/resolvconf\n/etc/resolv.conf\n/etc/services\n/run/resolvconf\n/run/systemd/resolve/resolv.conf\n__EOF__\n\n# Dedup the host.list and copy over.  Don't copy the ld.so.x files, though.\ncat tmp/host.list | grep -v '/ld[.]so[.]' | sort | uniq > bundle/host.list\n\n# Make mount points.\nmkdir -p bundle/{dev,proc,tmp,etc,etc.host,run,run.host,var}\ntouch bundle/dev/{null,zero,random,urandom,fuse}\n\n# Generate a suitable C.UTF-8 locale that we and Mongo can rely on\nmkdir -p bundle/usr/lib/locale\nlocaledef --no-archive --inputfile=./localedata-C --charmap=UTF-8 bundle/usr/lib/locale/C.UTF-8\n\n# Don't strip binaries.  Having symbols is very useful for debugging and profiling.  Debug symbols\n# usually compress well, add basically no runtime perf impact when not being used by other tools,\n# and the debug sections probably won't even get mapped until used let alone faulted in.\n\nif [ -e .git ]; then\n  git rev-parse HEAD > bundle/git-revision\nelse\n  echo \"unknown\" > bundle/git-revision\nfi\necho \"$USER@$HOSTNAME $(date)\" > bundle/buildstamp\n\ncat > bundle/README.md << '__EOF__'\n# Sandstorm Bundle\n\nSee: http://sandstorm.io\n\nThis is a self-contained, batteries-included Sandstorm server. It should\nwork on any Linux kernel whose version is 3.13 or newer. The rest of your\nfilesystem is not touched and may as well be empty; everything will run in\na chroot.\n\nThis bundle is intended to be installed using the Sandstorm installer or\nupdater. To install Sandstorm, please run:\n\n    curl https://install.sandstorm.io | bash\n\nIf you have already installed Sandstorm, you can update your installation to\nthis version by running:\n\n    service sandstorm update <filename>.tar.xz\n__EOF__\n"
        },
        {
          "name": "meteor-bundle-main.js",
          "type": "blob",
          "size": 3.181640625,
          "content": "// Typically, Meteor binds to one port and speaks HTTP.\n//\n// For Sandstorm, `run-bundle` has already bound a number of TCP ports\n// for us and passed them in as file descriptors starting at #3. So\n// this file runs before Meteor starts, monkey-patching the node world\n// so that, along with pre-meteor.js, we create the the right\n// HTTP+HTTPS services.\n\nvar http = require('http');\nvar net = require('net');\n\nvar isDevShellMode = process.argv.length > 2;\n\nvar firstInheritedFd = isDevShellMode ? 65 : 3;\n\nfunction sandstormMain() {\n  process.env.SANDSTORM_SMTP_LISTEN_HANDLE = (firstInheritedFd + 2).toString();\n  process.env.SANDSTORM_BACKEND_HANDLE = (firstInheritedFd + 1).toString();\n  monkeypatchHttpForGateway();\n\n  if (isDevShellMode) {\n    // Cut ourselves out of argv.\n    process.argv = [process.argv[0]].concat(process.argv.slice(2));\n\n    // Change to the shell directory, which Meteor expects.\n    process.chdir(\"shell\");\n\n    // Delegate to Meteor dev tool.\n    require(process.argv[1]);\n  } else {\n    // Delegate to Meteor runtime.\n    require(\"./main.js\");\n  }\n}\n\nfunction monkeypatchHttpForGateway() {\n  // Monkey-patch the HTTP server module to receive connections over a unix socket on FD 3 instead\n  // of listening the usual way.\n\n  if (process.env.HTTP_GATEWAY === \"local\") {\n    // Node.js has no public API for receiving file descriptors via SCM_RIGHTS on a unix pipe.\n    // However, it does have a *private* API for this, which it uses to implement child_process.\n    // We use the private API here. This could break when we update Node. If so, that's our fault.\n    // But we pin our Node version, so this should be easy to control. Also, this interface hasn't\n    // changed in forever.\n    const { Pipe, constants: PipeConstants } = process.binding('pipe_wrap');\n\n    global.sandstormListenCapabilityStream = function (fd, cb) {\n      var pipe = new Pipe(PipeConstants.IPC);\n      pipe.open(fd);\n      pipe.onread = function (buf) {\n        let handle = pipe.pendingHandle;\n        if (handle) {\n          pipe.pendingHandle = null;\n          cb(new net.Socket({ handle: handle, readable: true, writable: true }));\n        }\n      };\n      pipe.readStart();\n    }\n  }\n\n  var oldListen = http.Server.prototype.listen;\n  var alreadyListened = false;\n  http.Server.prototype.listen = function (port, host, cb) {\n    if (port.toString() === process.env.PORT ||\n        (typeof port === \"object\" && port.port && port.port.toString() === process.env.PORT)) {\n      // Attempt to listen on the HTTP port. Override.\n      if (alreadyListened) {\n        throw new Error(\"can only listen on primary HTTP port once\");\n      }\n      alreadyListened = true;\n\n      if (process.env.HTTP_GATEWAY === \"local\") {\n        // Gateway running locally, connecting over unix socketpair via SCM_RIGHTS transfer.\n        global.sandstormListenCapabilityStream(firstInheritedFd, socket => {\n          this.emit(\"connection\", socket);\n        });\n        (cb || host)();\n      } else {\n        // Gateway running remotely, connecting over a regular socket.\n        oldListen.call(this, { fd: firstInheritedFd }, cb || host);\n      }\n    } else {\n      // Don't override.\n      return oldListen.call(this, port, host, cb);\n    }\n  }\n}\n\nsandstormMain();\n"
        },
        {
          "name": "meteor-testapp",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 3.494140625,
          "content": "site_name: Docs\n\ntheme:\n    name: 'readthedocs'\n    custom_dir: 'docs/sandstorm_readthedocs_modified_theme'\n    navigation_depth: 4\nrepo_url: https://github.com/sandstorm-io/sandstorm\nedit_uri: edit/master/docs/\nmarkdown_extensions:\n    - admonition\nextra_css:\n    - \"extra.css\"\nnav:\n- \"Home\": \"index.md\"\n- Using:\n    - \"Overview\": \"using.md\"\n    - \"Guided tour\": \"guided-tour.md\"\n    - \"Top bar\": \"using/top-bar.md\"\n    - \"How it works\": \"using/how-it-works.md\"\n    - \"Security practices\": \"using/security-practices.md\"\n    - \"Security non-events\": \"using/security-non-events.md\"\n- Developing apps:\n    - \"Developer hub\": \"developing.md\"\n    - \"What makes a good Sandstorm App?\": \"developing/handbook.md\"\n    - Packaging apps with vagrant-spk:\n        - \"Installing vagrant-spk for package dev\": \"vagrant-spk/installation.md\"\n        - \"Packaging tutorial\": \"vagrant-spk/packaging-tutorial.md\"\n        - \"Packaging tutorial (Meteor)\": \"vagrant-spk/packaging-tutorial-meteor.md\"\n        - \"Understanding & customizing vagrant-spk\": \"vagrant-spk/customizing.md\"\n        - \"Platform stacks\": \"vagrant-spk/platform-stacks.md\"\n        - \"Code dependencies\": \"vagrant-spk/code-dependencies.md\"\n        - \"Service dependencies\": \"vagrant-spk/services.md\"\n        - \"Troubleshooting\": \"developing/troubleshooting.md\"\n        - \"Debugging a running grain\": \"developing/debugging.md\"\n    - Other packaging approaches:\n        - \"Raw packaging guide\": \"developing/raw-packaging-guide.md\"\n        - \"Raw integration of Python\": \"developing/raw-python.md\"\n        - \"Raw integration of Ruby on Rails\": \"developing/raw-ruby-on-rails.md\"\n        - \"Raw integration of pure client apps\": \"developing/raw-pure-client-apps.md\"\n    - Integrating your app with Sandstorm:\n        - \"User authentication & permissions\": \"developing/auth.md\"\n        - \"URLs, domain names, page titles\": \"developing/path.md\"\n        - \"Exporting HTTP APIs\": \"developing/http-apis.md\"\n        - \"Web publishing\": \"developing/web-publishing.md\"\n        - \"Connecting grains to each other & Sandstorm via the powerbox\": \"developing/powerbox.md\"\n        - \"Email from apps\": \"developing/email-from-apps.md\"\n    - \"App market publishing guide\": \"developing/publishing-apps.md\"\n- Administering:\n    - \"Overview\": \"administering.md\"\n    - \"Administrator's guide\": \"administering/guide.md\"\n    - \"Frequently asked questions\": \"administering/faq.md\"\n    - Installation:\n        - \"Installing & uninstalling\": \"install.md\"\n        - \"Troubleshooting a new install\": \"administering/install-troubleshooting.md\"\n        - \"Reference docs for install.sh\": \"administering/install-script.md\"\n    - \"Demo mode\": \"administering/demo.md\"\n    - \"Backups\": \"administering/backups.md\"\n    - Networking configurations:\n        - \"Wildcard hosts\": \"administering/wildcard.md\"\n        - \"Sandcats dynamic DNS\": \"administering/sandcats.md\"\n        - \"HTTPS & SSL\": \"administering/ssl.md\"\n        - \"Free sandcats.io HTTPS\": \"administering/sandcats-https.md\"\n        - \"Self-signed SSL\": \"administering/self-signed.md\"\n        - \"Reverse Proxy\": \"administering/reverse-proxy.md\"\n        - \"Sharing the HTTPS Port\": \"administering/sniproxy.md\"\n        - \"Email\": \"administering/email.md\"\n        - \"Running Sandstorm offline\": \"administering/offline.md\"\n    - \"Reference docs for sandstorm.conf\": \"administering/config-file.md\"\n    - \"Organizational Features\": \"administering/for-work.md\"\n    - \"Active Directory integration\": \"administering/active-directory.md\"\n    - \"Running a Sandstorm hosting provider\": \"administering/hosting-provider.md\""
        },
        {
          "name": "release-process.md",
          "type": "blob",
          "size": 1.703125,
          "content": "How to push a Sandstorm release\n===============================\n\nYou will need:\n* The release signing key.\n* SSH access to the Sandstorm release server.\n\nSteps:\n\n1. Make sure relevant pull requests have been merged.\n\n2. `git pull` the master branch.\n\n3. Update dependencies. After each step, commit the changes using the command you ran as the commit message.\n    * Submodules: `make update-deps`\n    * Meteor: `cd shell && meteor update --all-packages`\n        * If Meteor can't be updated for some reason (e.g. a new release will break Sandstorm and\n          we can't fix it yet), use `meteor update --packages-only --all-packages`\n    * NPM modules: `cd shell && meteor npm update --depth 9999 --save`\n\n4. Test it:\n    * `make test` to run automated tests.\n    * `make update` to update your local install, then manually test anything that seems worth sanity-checking, such as things that changed since last release.\n\n5. Update `CHANGELOG.md` summarizing new changes.\n\n6. Release it:\n    * Run: `./release.sh`\n\n7. Check alpha.sandstorm.io (which the release script will have directly updated) to verify it's not broken.\n\n8. `git push`\n\nEmergency Rollback\n==================\n\nIf you discover after `release.sh` completes that the release is fatally broken, do this:\n\n1. SSH into updates server and edit `/var/www/install.sandstorm.io/dev`. This file contains the current release number. Change it back to the previous release. This stops anyone else from updating.\n\n2. Fix or revert the breakage and do a new release as soon as possible, so that the people who did update to the broken release can update again to fix it. Sandstorm does not allow rolling back a release once it has been installed, so a new release is the only way forward.\n\n"
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 3.3603515625,
          "content": "#! /bin/bash\n\nset -euo pipefail\n\nif (grep -r KJ_DBG src/* | egrep -v '/(debug(-test)?|exception)[.]'); then\n  echo '*** Error:  There are instances of KJ_DBG in the code.' >&2\n  exit 1\nfi\n\nmake clean\n\n# TODO(soon): Once we have a way to start a beta branch, refuse to do so if there are TODO(soon)s.\n# if (egrep -r 'TODO\\(soon\\)'); then\n#   echo '*** Error:  There are release-blocking TODOs in the code.' >&2\n#   exit 1\n# fi\n\n. branch.conf\n\nif [ $(git rev-parse --abbrev-ref HEAD) = master ]; then\n  CHANNEL=dev\nelif [ $IS_STABLE = true ]; then\n  CHANNEL=stable\nelse\n  CHANNEL=beta\nfi\n\necho \"**** Determining next build number for $CHANNEL channel ****\"\n\nLAST_BUILD=$(curl -fs https://install.sandstorm.io/$CHANNEL)\n\nif (( LAST_BUILD / 1000 > BRANCH_NUMBER )); then\n  echo \"ERROR: $CHANNEL has already moved past this branch!\" >&2\n  echo \"  I refuse to replace it with an older branch.\" >&2\n  exit 1\nfi\n\nBASE_BUILD=$(( BRANCH_NUMBER * 1000 ))\nBUILD=$(( BASE_BUILD > LAST_BUILD ? BASE_BUILD : LAST_BUILD + 1 ))\nBUILD_MINOR=\"$(( $BUILD % 1000 ))\"\nDISPLAY_VERSION=\"${BRANCH_NUMBER}.${BUILD_MINOR}\"\nTAG_NAME=\"v${DISPLAY_VERSION}\"\nSIGNING_KEY_ID=160D2D577518B58D94C9800B63F227499DA8CCBD\n\n# Verify that the changelog has been updated.\nEXPECTED_CHANGELOG=\"### $TAG_NAME ($(date '+%Y-%m-%d'))\"\nif [[ \"$(head -n 1 CHANGELOG.md)\" != \"$EXPECTED_CHANGELOG\"* ]]; then\n  echo \"Changelog not updated. First line should be:\" >&2\n  echo \"$EXPECTED_CHANGELOG\" >&2\n  exit 1\nfi\n\n# The tarball stores the version number as an integer, e.g. 75 for\n# build 75 within branch 0, or 2121 for build 121 within branch 2, so\n# that the Sandstorm auto-updater can avoid having complicated\n# version-comparison logic.\nTARBALL=sandstorm-$BUILD.tar.xz\n\necho \"**** Building build $BUILD ****\"\n\nmake BUILD=$BUILD\n\necho \"**** Tagging this commit ****\"\n\n# The git tag stores the version number as a normal-looking version\n# number, like 0.75 for build 75 within branch 0, or 2.121 for build\n# 121 within branch 2.\n\nGIT_REVISION=\"$(<bundle/git-revision)\"\ngit tag -u $SIGNING_KEY_ID \"$TAG_NAME\" \"$GIT_REVISION\" -m \"Release Sandstorm ${DISPLAY_VERSION}\"\ngit push origin \"$TAG_NAME\"\n\n# Remember to push it to master too...\ngit push origin master\n\necho \"**** Pushing build $BUILD ****\"\n\nrm -f $TARBALL.sig $TARBALL.update-sig install.sh.sig\n\n# Sign the tarball and the install script. Note that we don't sign the channel build number because\n# it wouldn't accomplish anything: If an attacker wanted to provide an old number, they could\n# provide the old signature to match. If an attacker provided a number that hasn't been used\n# before, they would not be able to provide a matching package because no such signed package\n# exists.\ngpg -u $SIGNING_KEY_ID --digest-algo SHA512 --detach-sig $TARBALL\ngpg -u $SIGNING_KEY_ID --digest-algo SHA512 --detach-sig install.sh\n\n# Create signature used to verify updates.\ntmp/sandstorm/update-tool sign ~/.sandstorm-update-keyring $TARBALL > $TARBALL.update-sig\n\necho $BUILD > tmp/$CHANNEL\ngce-ss copy-files $TARBALL alpha2:/var/www/dl.sandstorm.io\ngce-ss copy-files $TARBALL.sig alpha2:/var/www/dl.sandstorm.io\ngce-ss copy-files $TARBALL.update-sig alpha2:/var/www/dl.sandstorm.io\ngce-ss copy-files tmp/$CHANNEL alpha2:/var/www/install.sandstorm.io\ngce-ss copy-files install.sh alpha2:/var/www/install.sandstorm.io\ngce-ss copy-files install.sh.sig alpha2:/var/www/install.sandstorm.io\n\ngce-ss ssh alpha2 --command 'sudo sandstorm update dev'\n"
        },
        {
          "name": "roadmap",
          "type": "tree",
          "content": null
        },
        {
          "name": "sandstorm-qr.png",
          "type": "blob",
          "size": 1.4267578125,
          "content": null
        },
        {
          "name": "shell",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}