{
  "metadata": {
    "timestamp": 1736562567340,
    "page": 36,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sindresorhus/ora",
      "stars": 9213,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1708984375,
          "content": "root = true\n\n[*]\nindent_style = tab\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0185546875,
          "content": "* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0224609375,
          "content": "node_modules\nyarn.lock\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "package-lock=false\n"
        },
        {
          "name": "example.js",
          "type": "blob",
          "size": 1.5771484375,
          "content": "import process from 'node:process';\nimport chalk from 'chalk';\nimport logSymbols from 'log-symbols';\nimport ora from './index.js';\n\nconst spinner = ora({\n\tdiscardStdin: false,\n\ttext: 'Loading unicorns, not discarding stdin',\n\tspinner: process.argv[2],\n});\n\nconst spinnerDiscardingStdin = ora({\n\ttext: 'Loading unicorns',\n\tspinner: process.argv[2],\n});\n\nspinnerDiscardingStdin.start();\n\nsetTimeout(() => {\n\tspinnerDiscardingStdin.succeed();\n}, 1000);\n\nsetTimeout(() => {\n\tspinnerDiscardingStdin.start();\n}, 2000);\n\nsetTimeout(() => {\n\tspinnerDiscardingStdin.succeed();\n\tspinner.start();\n}, 3000);\n\nsetTimeout(() => {\n\tspinner.color = 'yellow';\n\tspinner.text = `Loading ${chalk.red('rainbows')}`;\n}, 4000);\n\nsetTimeout(() => {\n\tspinner.color = 'green';\n\tspinner.indent = 2;\n\tspinner.text = 'Loading with indent';\n}, 5000);\n\nsetTimeout(() => {\n\tspinner.indent = 0;\n\tspinner.spinner = 'moon';\n\tspinner.text = 'Loading with different spinners';\n}, 6000);\n\nsetTimeout(() => {\n\tspinner.prefixText = chalk.dim('[info]');\n\tspinner.spinner = 'dots';\n\tspinner.text = 'Loading with prefix text';\n}, 8000);\n\nsetTimeout(() => {\n\tspinner.prefixText = '';\n\tspinner.suffixText = chalk.dim('[info]');\n\tspinner.text = 'Loading with suffix text';\n}, 10_000);\n\nsetTimeout(() => {\n\tspinner.prefixText = chalk.dim('[info]');\n\tspinner.suffixText = chalk.dim('[info]');\n\tspinner.text = 'Loading with prefix and suffix text';\n}, 12_000);\n\nsetTimeout(() => {\n\tspinner.stopAndPersist({\n\t\tprefixText: '',\n\t\tsuffixText: '',\n\t\tsymbol: logSymbols.info,\n\t\ttext: 'Stopping with different text!',\n\t});\n}, 14_000);\n\n// $ node example.js nameOfSpinner\n"
        },
        {
          "name": "index.d.ts",
          "type": "blob",
          "size": 7.3095703125,
          "content": "import {type SpinnerName} from 'cli-spinners';\n\nexport type Spinner = {\n\treadonly interval?: number;\n\treadonly frames: string[];\n};\n\nexport type Color =\n\t| 'black'\n\t| 'red'\n\t| 'green'\n\t| 'yellow'\n\t| 'blue'\n\t| 'magenta'\n\t| 'cyan'\n\t| 'white'\n\t| 'gray';\n\nexport type PrefixTextGenerator = () => string;\n\nexport type SuffixTextGenerator = () => string;\n\nexport type Options = {\n\t/**\n\tThe text to display next to the spinner.\n\t*/\n\treadonly text?: string;\n\n\t/**\n\tText or a function that returns text to display before the spinner. No prefix text will be displayed if set to an empty string.\n\t*/\n\treadonly prefixText?: string | PrefixTextGenerator;\n\n\t/**\n\tText or a function that returns text to display after the spinner text. No suffix text will be displayed if set to an empty string.\n\t*/\n\treadonly suffixText?: string | SuffixTextGenerator;\n\n\t/**\n\tThe name of one of the provided spinners. See [`example.js`](https://github.com/BendingBender/ora/blob/main/example.js) in this repo if you want to test out different spinners. On Windows (expect for Windows Terminal), it will always use the line spinner as the Windows command-line doesn't have proper Unicode support.\n\n\t@default 'dots'\n\n\tOr an object like:\n\n\t@example\n\t```\n\t{\n\t\tframes: ['-', '+', '-'],\n\t\tinterval: 80 // Optional\n\t}\n\t```\n\t*/\n\treadonly spinner?: SpinnerName | Spinner;\n\n\t/**\n\tThe color of the spinner.\n\n\t@default 'cyan'\n\t*/\n\treadonly color?: Color;\n\n\t/**\n\tSet to `false` to stop Ora from hiding the cursor.\n\n\t@default true\n\t*/\n\treadonly hideCursor?: boolean;\n\n\t/**\n\tIndent the spinner with the given number of spaces.\n\n\t@default 0\n\t*/\n\treadonly indent?: number;\n\n\t/**\n\tInterval between each frame.\n\n\tSpinners provide their own recommended interval, so you don't really need to specify this.\n\n\tDefault: Provided by the spinner or `100`.\n\t*/\n\treadonly interval?: number;\n\n\t/**\n\tStream to write the output.\n\n\tYou could for example set this to `process.stdout` instead.\n\n\t@default process.stderr\n\t*/\n\treadonly stream?: NodeJS.WritableStream;\n\n\t/**\n\tForce enable/disable the spinner. If not specified, the spinner will be enabled if the `stream` is being run inside a TTY context (not spawned or piped) and/or not in a CI environment.\n\n\tNote that `{isEnabled: false}` doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text.\n\t*/\n\treadonly isEnabled?: boolean;\n\n\t/**\n\tDisable the spinner and all log text. All output is suppressed and `isEnabled` will be considered `false`.\n\n\t@default false\n\t*/\n\treadonly isSilent?: boolean;\n\n\t/**\n\tDiscard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on `Enter` key presses, and prevents buffering of input while the spinner is running.\n\n\tThis has no effect on Windows as there's no good way to implement discarding stdin properly there.\n\n\t@default true\n\t*/\n\treadonly discardStdin?: boolean;\n};\n\nexport type PersistOptions = {\n\t/**\n\tSymbol to replace the spinner with.\n\n\t@default ' '\n\t*/\n\treadonly symbol?: string;\n\n\t/**\n\tText to be persisted after the symbol.\n\n\tDefault: Current `text`.\n\t*/\n\treadonly text?: string;\n\n\t/**\n\tText or a function that returns text to be persisted before the symbol. No prefix text will be displayed if set to an empty string.\n\n\tDefault: Current `prefixText`.\n\t*/\n\treadonly prefixText?: string | PrefixTextGenerator;\n\n\t/**\n\tText or a function that returns text to be persisted after the text after the symbol. No suffix text will be displayed if set to an empty string.\n\n\tDefault: Current `suffixText`.\n\t*/\n\treadonly suffixText?: string | SuffixTextGenerator;\n};\n\nexport type PromiseOptions<T> = {\n\t/**\n\tThe new text of the spinner when the promise is resolved.\n\n\tKeeps the existing text if `undefined`.\n\t*/\n\tsuccessText?: string | ((result: T) => string) | undefined;\n\n\t/**\n\tThe new text of the spinner when the promise is rejected.\n\n\tKeeps the existing text if `undefined`.\n\t*/\n\tfailText?: string | ((error: Error) => string) | undefined;\n} & Options;\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport interface Ora {\n\t/**\n\tChange the text after the spinner.\n\t*/\n\ttext: string;\n\n\t/**\n\tChange the text or function that returns text before the spinner.\n\n\tNo prefix text will be displayed if set to an empty string.\n\t*/\n\tprefixText: string;\n\n\t/**\n\tChange the text or function that returns text after the spinner text.\n\n\tNo suffix text will be displayed if set to an empty string.\n\t*/\n\tsuffixText: string;\n\n\t/**\n\tChange the spinner color.\n\t*/\n\tcolor: Color;\n\n\t/**\n\tChange the spinner indent.\n\t*/\n\tindent: number;\n\n\t/**\n\tGet the spinner.\n\t*/\n\tget spinner(): Spinner;\n\n\t/**\n\tSet the spinner.\n\t*/\n\tset spinner(spinner: SpinnerName | Spinner);\n\n\t/**\n\tA boolean indicating whether the instance is currently spinning.\n\t*/\n\tget isSpinning(): boolean;\n\n\t/**\n\tThe interval between each frame.\n\n\tThe interval is decided by the chosen spinner.\n\t*/\n\tget interval(): number;\n\n\t/**\n\tStart the spinner.\n\n\t@param text - Set the current text.\n\t@returns The spinner instance.\n\t*/\n\tstart(text?: string): this;\n\n\t/**\n\tStop and clear the spinner.\n\n\t@returns The spinner instance.\n\t*/\n\tstop(): this;\n\n\t/**\n\tStop the spinner, change it to a green `✔` and persist the current text, or `text` if provided.\n\n\t@param text - Will persist text if provided.\n\t@returns The spinner instance.\n\t*/\n\tsucceed(text?: string): this;\n\n\t/**\n\tStop the spinner, change it to a red `✖` and persist the current text, or `text` if provided.\n\n\t@param text - Will persist text if provided.\n\t@returns The spinner instance.\n\t*/\n\tfail(text?: string): this;\n\n\t/**\n\tStop the spinner, change it to a yellow `⚠` and persist the current text, or `text` if provided.\n\n\t@param text - Will persist text if provided.\n\t@returns The spinner instance.\n\t*/\n\twarn(text?: string): this;\n\n\t/**\n\tStop the spinner, change it to a blue `ℹ` and persist the current text, or `text` if provided.\n\n\t@param text - Will persist text if provided.\n\t@returns The spinner instance.\n\t*/\n\tinfo(text?: string): this;\n\n\t/**\n\tStop the spinner and change the symbol or text.\n\n\t@returns The spinner instance.\n\t*/\n\tstopAndPersist(options?: PersistOptions): this;\n\n\t/**\n\tClear the spinner.\n\n\t@returns The spinner instance.\n\t*/\n\tclear(): this;\n\n\t/**\n\tManually render a new frame.\n\n\t@returns The spinner instance.\n\t*/\n\trender(): this;\n\n\t/**\n\tGet a new frame.\n\n\t@returns The spinner instance text.\n\t*/\n\tframe(): string;\n}\n\n/**\nElegant terminal spinner.\n\n@param options - If a string is provided, it is treated as a shortcut for `options.text`.\n\n@example\n```\nimport ora from 'ora';\n\nconst spinner = ora('Loading unicorns').start();\n\nsetTimeout(() => {\n\tspinner.color = 'yellow';\n\tspinner.text = 'Loading rainbows';\n}, 1000);\n```\n*/\nexport default function ora(options?: string | Options): Ora;\n\n/**\nStarts a spinner for a promise or promise-returning function. The spinner is stopped with `.succeed()` if the promise fulfills or with `.fail()` if it rejects.\n\n@param action - The promise to start the spinner for or a promise-returning function.\n@param options - If a string is provided, it is treated as a shortcut for `options.text`.\n@returns The given promise.\n\n@example\n```\nimport {oraPromise} from 'ora';\n\nawait oraPromise(somePromise);\n```\n*/\nexport function oraPromise<T>(\n\taction: PromiseLike<T> | ((spinner: Ora) => PromiseLike<T>),\n\toptions?: string | PromiseOptions<T>\n): Promise<T>;\n\nexport {default as spinners} from 'cli-spinners';\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 9.4453125,
          "content": "import process from 'node:process';\nimport chalk from 'chalk';\nimport cliCursor from 'cli-cursor';\nimport cliSpinners from 'cli-spinners';\nimport logSymbols from 'log-symbols';\nimport stripAnsi from 'strip-ansi';\nimport stringWidth from 'string-width';\nimport isInteractive from 'is-interactive';\nimport isUnicodeSupported from 'is-unicode-supported';\nimport stdinDiscarder from 'stdin-discarder';\n\nclass Ora {\n\t#linesToClear = 0;\n\t#isDiscardingStdin = false;\n\t#lineCount = 0;\n\t#frameIndex = -1;\n\t#lastSpinnerFrameTime = 0;\n\t#options;\n\t#spinner;\n\t#stream;\n\t#id;\n\t#initialInterval;\n\t#isEnabled;\n\t#isSilent;\n\t#indent;\n\t#text;\n\t#prefixText;\n\t#suffixText;\n\tcolor;\n\n\tconstructor(options) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\ttext: options,\n\t\t\t};\n\t\t}\n\n\t\tthis.#options = {\n\t\t\tcolor: 'cyan',\n\t\t\tstream: process.stderr,\n\t\t\tdiscardStdin: true,\n\t\t\thideCursor: true,\n\t\t\t...options,\n\t\t};\n\n\t\t// Public\n\t\tthis.color = this.#options.color;\n\n\t\t// It's important that these use the public setters.\n\t\tthis.spinner = this.#options.spinner;\n\n\t\tthis.#initialInterval = this.#options.interval;\n\t\tthis.#stream = this.#options.stream;\n\t\tthis.#isEnabled = typeof this.#options.isEnabled === 'boolean' ? this.#options.isEnabled : isInteractive({stream: this.#stream});\n\t\tthis.#isSilent = typeof this.#options.isSilent === 'boolean' ? this.#options.isSilent : false;\n\n\t\t// Set *after* `this.#stream`.\n\t\t// It's important that these use the public setters.\n\t\tthis.text = this.#options.text;\n\t\tthis.prefixText = this.#options.prefixText;\n\t\tthis.suffixText = this.#options.suffixText;\n\t\tthis.indent = this.#options.indent;\n\n\t\tif (process.env.NODE_ENV === 'test') {\n\t\t\tthis._stream = this.#stream;\n\t\t\tthis._isEnabled = this.#isEnabled;\n\n\t\t\tObject.defineProperty(this, '_linesToClear', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#linesToClear;\n\t\t\t\t},\n\t\t\t\tset(newValue) {\n\t\t\t\t\tthis.#linesToClear = newValue;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tObject.defineProperty(this, '_frameIndex', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#frameIndex;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tObject.defineProperty(this, '_lineCount', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#lineCount;\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tget indent() {\n\t\treturn this.#indent;\n\t}\n\n\tset indent(indent = 0) {\n\t\tif (!(indent >= 0 && Number.isInteger(indent))) {\n\t\t\tthrow new Error('The `indent` option must be an integer from 0 and up');\n\t\t}\n\n\t\tthis.#indent = indent;\n\t\tthis.#updateLineCount();\n\t}\n\n\tget interval() {\n\t\treturn this.#initialInterval ?? this.#spinner.interval ?? 100;\n\t}\n\n\tget spinner() {\n\t\treturn this.#spinner;\n\t}\n\n\tset spinner(spinner) {\n\t\tthis.#frameIndex = -1;\n\t\tthis.#initialInterval = undefined;\n\n\t\tif (typeof spinner === 'object') {\n\t\t\tif (spinner.frames === undefined) {\n\t\t\t\tthrow new Error('The given spinner must have a `frames` property');\n\t\t\t}\n\n\t\t\tthis.#spinner = spinner;\n\t\t} else if (!isUnicodeSupported()) {\n\t\t\tthis.#spinner = cliSpinners.line;\n\t\t} else if (spinner === undefined) {\n\t\t\t// Set default spinner\n\t\t\tthis.#spinner = cliSpinners.dots;\n\t\t} else if (spinner !== 'default' && cliSpinners[spinner]) {\n\t\t\tthis.#spinner = cliSpinners[spinner];\n\t\t} else {\n\t\t\tthrow new Error(`There is no built-in spinner named '${spinner}'. See https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json for a full list.`);\n\t\t}\n\t}\n\n\tget text() {\n\t\treturn this.#text;\n\t}\n\n\tset text(value = '') {\n\t\tthis.#text = value;\n\t\tthis.#updateLineCount();\n\t}\n\n\tget prefixText() {\n\t\treturn this.#prefixText;\n\t}\n\n\tset prefixText(value = '') {\n\t\tthis.#prefixText = value;\n\t\tthis.#updateLineCount();\n\t}\n\n\tget suffixText() {\n\t\treturn this.#suffixText;\n\t}\n\n\tset suffixText(value = '') {\n\t\tthis.#suffixText = value;\n\t\tthis.#updateLineCount();\n\t}\n\n\tget isSpinning() {\n\t\treturn this.#id !== undefined;\n\t}\n\n\t#getFullPrefixText(prefixText = this.#prefixText, postfix = ' ') {\n\t\tif (typeof prefixText === 'string' && prefixText !== '') {\n\t\t\treturn prefixText + postfix;\n\t\t}\n\n\t\tif (typeof prefixText === 'function') {\n\t\t\treturn prefixText() + postfix;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t#getFullSuffixText(suffixText = this.#suffixText, prefix = ' ') {\n\t\tif (typeof suffixText === 'string' && suffixText !== '') {\n\t\t\treturn prefix + suffixText;\n\t\t}\n\n\t\tif (typeof suffixText === 'function') {\n\t\t\treturn prefix + suffixText();\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t#updateLineCount() {\n\t\tconst columns = this.#stream.columns ?? 80;\n\t\tconst fullPrefixText = this.#getFullPrefixText(this.#prefixText, '-');\n\t\tconst fullSuffixText = this.#getFullSuffixText(this.#suffixText, '-');\n\t\tconst fullText = ' '.repeat(this.#indent) + fullPrefixText + '--' + this.#text + '--' + fullSuffixText;\n\n\t\tthis.#lineCount = 0;\n\t\tfor (const line of stripAnsi(fullText).split('\\n')) {\n\t\t\tthis.#lineCount += Math.max(1, Math.ceil(stringWidth(line, {countAnsiEscapeCodes: true}) / columns));\n\t\t}\n\t}\n\n\tget isEnabled() {\n\t\treturn this.#isEnabled && !this.#isSilent;\n\t}\n\n\tset isEnabled(value) {\n\t\tif (typeof value !== 'boolean') {\n\t\t\tthrow new TypeError('The `isEnabled` option must be a boolean');\n\t\t}\n\n\t\tthis.#isEnabled = value;\n\t}\n\n\tget isSilent() {\n\t\treturn this.#isSilent;\n\t}\n\n\tset isSilent(value) {\n\t\tif (typeof value !== 'boolean') {\n\t\t\tthrow new TypeError('The `isSilent` option must be a boolean');\n\t\t}\n\n\t\tthis.#isSilent = value;\n\t}\n\n\tframe() {\n\t\t// Ensure we only update the spinner frame at the wanted interval,\n\t\t// even if the render method is called more often.\n\t\tconst now = Date.now();\n\t\tif (this.#frameIndex === -1 || now - this.#lastSpinnerFrameTime >= this.interval) {\n\t\t\tthis.#frameIndex = ++this.#frameIndex % this.#spinner.frames.length;\n\t\t\tthis.#lastSpinnerFrameTime = now;\n\t\t}\n\n\t\tconst {frames} = this.#spinner;\n\t\tlet frame = frames[this.#frameIndex];\n\n\t\tif (this.color) {\n\t\t\tframe = chalk[this.color](frame);\n\t\t}\n\n\t\tconst fullPrefixText = (typeof this.#prefixText === 'string' && this.#prefixText !== '') ? this.#prefixText + ' ' : '';\n\t\tconst fullText = typeof this.text === 'string' ? ' ' + this.text : '';\n\t\tconst fullSuffixText = (typeof this.#suffixText === 'string' && this.#suffixText !== '') ? ' ' + this.#suffixText : '';\n\n\t\treturn fullPrefixText + frame + fullText + fullSuffixText;\n\t}\n\n\tclear() {\n\t\tif (!this.#isEnabled || !this.#stream.isTTY) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.#stream.cursorTo(0);\n\n\t\tfor (let index = 0; index < this.#linesToClear; index++) {\n\t\t\tif (index > 0) {\n\t\t\t\tthis.#stream.moveCursor(0, -1);\n\t\t\t}\n\n\t\t\tthis.#stream.clearLine(1);\n\t\t}\n\n\t\tif (this.#indent || this.lastIndent !== this.#indent) {\n\t\t\tthis.#stream.cursorTo(this.#indent);\n\t\t}\n\n\t\tthis.lastIndent = this.#indent;\n\t\tthis.#linesToClear = 0;\n\n\t\treturn this;\n\t}\n\n\trender() {\n\t\tif (this.#isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.clear();\n\t\tthis.#stream.write(this.frame());\n\t\tthis.#linesToClear = this.#lineCount;\n\n\t\treturn this;\n\t}\n\n\tstart(text) {\n\t\tif (text) {\n\t\t\tthis.text = text;\n\t\t}\n\n\t\tif (this.#isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!this.#isEnabled) {\n\t\t\tif (this.text) {\n\t\t\t\tthis.#stream.write(`- ${this.text}\\n`);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.isSpinning) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.#options.hideCursor) {\n\t\t\tcliCursor.hide(this.#stream);\n\t\t}\n\n\t\tif (this.#options.discardStdin && process.stdin.isTTY) {\n\t\t\tthis.#isDiscardingStdin = true;\n\t\t\tstdinDiscarder.start();\n\t\t}\n\n\t\tthis.render();\n\t\tthis.#id = setInterval(this.render.bind(this), this.interval);\n\n\t\treturn this;\n\t}\n\n\tstop() {\n\t\tif (!this.#isEnabled) {\n\t\t\treturn this;\n\t\t}\n\n\t\tclearInterval(this.#id);\n\t\tthis.#id = undefined;\n\t\tthis.#frameIndex = 0;\n\t\tthis.clear();\n\t\tif (this.#options.hideCursor) {\n\t\t\tcliCursor.show(this.#stream);\n\t\t}\n\n\t\tif (this.#options.discardStdin && process.stdin.isTTY && this.#isDiscardingStdin) {\n\t\t\tstdinDiscarder.stop();\n\t\t\tthis.#isDiscardingStdin = false;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tsucceed(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.success, text});\n\t}\n\n\tfail(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.error, text});\n\t}\n\n\twarn(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.warning, text});\n\t}\n\n\tinfo(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.info, text});\n\t}\n\n\tstopAndPersist(options = {}) {\n\t\tif (this.#isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst prefixText = options.prefixText ?? this.#prefixText;\n\t\tconst fullPrefixText = this.#getFullPrefixText(prefixText, ' ');\n\n\t\tconst symbolText = options.symbol ?? ' ';\n\n\t\tconst text = options.text ?? this.text;\n\t\tconst separatorText = symbolText ? ' ' : '';\n\t\tconst fullText = (typeof text === 'string') ? separatorText + text : '';\n\n\t\tconst suffixText = options.suffixText ?? this.#suffixText;\n\t\tconst fullSuffixText = this.#getFullSuffixText(suffixText, ' ');\n\n\t\tconst textToWrite = fullPrefixText + symbolText + fullText + fullSuffixText + '\\n';\n\n\t\tthis.stop();\n\t\tthis.#stream.write(textToWrite);\n\n\t\treturn this;\n\t}\n}\n\nexport default function ora(options) {\n\treturn new Ora(options);\n}\n\nexport async function oraPromise(action, options) {\n\tconst actionIsFunction = typeof action === 'function';\n\tconst actionIsPromise = typeof action.then === 'function';\n\n\tif (!actionIsFunction && !actionIsPromise) {\n\t\tthrow new TypeError('Parameter `action` must be a Function or a Promise');\n\t}\n\n\tconst {successText, failText} = typeof options === 'object'\n\t\t? options\n\t\t: {successText: undefined, failText: undefined};\n\n\tconst spinner = ora(options).start();\n\n\ttry {\n\t\tconst promise = actionIsFunction ? action(spinner) : action;\n\t\tconst result = await promise;\n\n\t\tspinner.succeed(\n\t\t\tsuccessText === undefined\n\t\t\t\t? undefined\n\t\t\t\t: (typeof successText === 'string' ? successText : successText(result)),\n\t\t);\n\n\t\treturn result;\n\t} catch (error) {\n\t\tspinner.fail(\n\t\t\tfailText === undefined\n\t\t\t\t? undefined\n\t\t\t\t: (typeof failText === 'string' ? failText : failText(error)),\n\t\t);\n\n\t\tthrow error;\n\t}\n}\n\nexport {default as spinners} from 'cli-spinners';\n"
        },
        {
          "name": "index.test-d.ts",
          "type": "blob",
          "size": 2.021484375,
          "content": "import {PassThrough as PassThroughStream} from 'node:stream';\nimport {expectType} from 'tsd';\nimport type cliSpinners from 'cli-spinners';\nimport ora, {oraPromise, spinners} from './index.js';\n\nconst spinner = ora('Loading unicorns');\nora({text: 'Loading unicorns'});\nora({prefixText: 'Loading unicorns'});\nora({prefixText: () => 'Loading unicorns dynamically'});\nora({suffixText: 'Loading unicorns'});\nora({suffixText: () => 'Loading unicorns dynamically'});\nora({spinner: 'squish'});\nora({spinner: {frames: ['-', '+', '-']}});\nora({spinner: {interval: 80, frames: ['-', '+', '-']}});\nora({color: 'cyan'});\nora({hideCursor: true});\nora({indent: 1});\nora({interval: 80});\nora({stream: new PassThroughStream()});\nora({isEnabled: true});\nora({isSilent: false});\nora({discardStdin: true});\n\nspinner.color = 'yellow';\nspinner.text = 'Loading rainbows';\nexpectType<boolean>(spinner.isSpinning);\nspinner.spinner = 'dots';\nspinner.indent = 5;\n\nspinner.start();\nspinner.start('Test text');\nspinner.stop();\nspinner.succeed();\nspinner.succeed('fooed');\nspinner.fail();\nspinner.fail('failed to foo');\nspinner.warn();\nspinner.warn('warn foo');\nspinner.info();\nspinner.info('info foo');\nspinner.stopAndPersist();\nspinner.stopAndPersist({text: 'all done'});\nspinner.stopAndPersist({symbol: '@', text: 'all done'});\nspinner.stopAndPersist({prefixText: 'all done'});\nspinner.stopAndPersist({suffixText: 'all done'});\nspinner.clear();\nspinner.render();\nspinner.frame();\n\nconst resolves = Promise.resolve(1);\nvoid oraPromise(resolves, 'foo');\nvoid oraPromise(resolves, {\n\tstream: new PassThroughStream(),\n\ttext: 'foo',\n\tcolor: 'blue',\n\tisEnabled: true,\n\tisSilent: false,\n});\nvoid oraPromise(async () => {\n\tawait resolves;\n}, 'foo');\nvoid oraPromise(async spinner => {\n\tspinner.prefixText = 'foo';\n\tspinner.suffixText = '[loading]';\n\tawait resolves;\n\treturn 7;\n}, {\n\tstream: new PassThroughStream(),\n\ttext: 'foo',\n\tcolor: 'blue',\n\tisEnabled: true,\n\tisSilent: false,\n\tsuccessText: result => `Resolved with number ${result}`,\n\tfailText: 'bar',\n});\n\nexpectType<typeof cliSpinners>(spinners);\n"
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.0908203125,
          "content": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.15234375,
          "content": "{\n\t\"name\": \"ora\",\n\t\"version\": \"8.1.1\",\n\t\"description\": \"Elegant terminal spinner\",\n\t\"license\": \"MIT\",\n\t\"repository\": \"sindresorhus/ora\",\n\t\"funding\": \"https://github.com/sponsors/sindresorhus\",\n\t\"author\": {\n\t\t\"name\": \"Sindre Sorhus\",\n\t\t\"email\": \"sindresorhus@gmail.com\",\n\t\t\"url\": \"https://sindresorhus.com\"\n\t},\n\t\"type\": \"module\",\n\t\"exports\": {\n\t\t\"types\": \"./index.d.ts\",\n\t\t\"default\": \"./index.js\"\n\t},\n\t\"sideEffects\": false,\n\t\"engines\": {\n\t\t\"node\": \">=18\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"xo && ava && tsd\"\n\t},\n\t\"files\": [\n\t\t\"index.js\",\n\t\t\"index.d.ts\"\n\t],\n\t\"keywords\": [\n\t\t\"cli\",\n\t\t\"spinner\",\n\t\t\"spinners\",\n\t\t\"terminal\",\n\t\t\"term\",\n\t\t\"console\",\n\t\t\"ascii\",\n\t\t\"unicode\",\n\t\t\"loading\",\n\t\t\"indicator\",\n\t\t\"progress\",\n\t\t\"busy\",\n\t\t\"wait\",\n\t\t\"idle\"\n\t],\n\t\"dependencies\": {\n\t\t\"chalk\": \"^5.3.0\",\n\t\t\"cli-cursor\": \"^5.0.0\",\n\t\t\"cli-spinners\": \"^2.9.2\",\n\t\t\"is-interactive\": \"^2.0.0\",\n\t\t\"is-unicode-supported\": \"^2.0.0\",\n\t\t\"log-symbols\": \"^6.0.0\",\n\t\t\"stdin-discarder\": \"^0.2.2\",\n\t\t\"string-width\": \"^7.2.0\",\n\t\t\"strip-ansi\": \"^7.1.0\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@types/node\": \"^22.5.0\",\n\t\t\"ava\": \"^5.3.1\",\n\t\t\"get-stream\": \"^9.0.1\",\n\t\t\"transform-tty\": \"^1.0.11\",\n\t\t\"tsd\": \"^0.31.1\",\n\t\t\"xo\": \"^0.59.3\"\n\t}\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 7.83203125,
          "content": "# ora\n\n> Elegant terminal spinner\n\n<p align=\"center\">\n\t<br>\n\t<img src=\"screenshot.svg\" width=\"500\">\n\t<br>\n</p>\n\n## Install\n\n```sh\nnpm install ora\n```\n\n*Check out [`yocto-spinner`](https://github.com/sindresorhus/yocto-spinner) for a smaller alternative.*\n\n## Usage\n\n```js\nimport ora from 'ora';\n\nconst spinner = ora('Loading unicorns').start();\n\nsetTimeout(() => {\n\tspinner.color = 'yellow';\n\tspinner.text = 'Loading rainbows';\n}, 1000);\n```\n\n## API\n\n### ora(text)\n### ora(options)\n\nIf a string is provided, it is treated as a shortcut for [`options.text`](#text).\n\n#### options\n\nType: `object`\n\n##### text\n\nType: `string`\n\nThe text to display next to the spinner.\n\n##### prefixText\n\nType: `string | () => string`\n\nText or a function that returns text to display before the spinner. No prefix text will be displayed if set to an empty string.\n\n##### suffixText\n\nType: `string | () => string`\n\nText or a function that returns text to display after the spinner text. No suffix text will be displayed if set to an empty string.\n\n##### spinner\n\nType: `string | object`\\\nDefault: `'dots'` <img src=\"screenshot-spinner.gif\" width=\"14\">\n\nThe name of one of the [provided spinners](#spinners). See `example.js` in this repo if you want to test out different spinners. On Windows (except for Windows Terminal), it will always use the `line` spinner as the Windows command-line doesn't have proper Unicode support.\n\nOr an object like:\n\n```js\n{\n\tframes: ['-', '+', '-'],\n\tinterval: 80 // Optional\n}\n```\n\n##### color\n\nType: `string`\\\nDefault: `'cyan'`\\\nValues: `'black' | 'red' | 'green' | 'yellow' | 'blue' | 'magenta' | 'cyan' | 'white' | 'gray'`\n\nThe color of the spinner.\n\n##### hideCursor\n\nType: `boolean`\\\nDefault: `true`\n\nSet to `false` to stop Ora from hiding the cursor.\n\n##### indent\n\nType: `number`\\\nDefault: `0`\n\nIndent the spinner with the given number of spaces.\n\n##### interval\n\nType: `number`\\\nDefault: Provided by the spinner or `100`\n\nInterval between each frame.\n\nSpinners provide their own recommended interval, so you don't really need to specify this.\n\n##### stream\n\nType: `stream.Writable`\\\nDefault: `process.stderr`\n\nStream to write the output.\n\nYou could for example set this to `process.stdout` instead.\n\n##### isEnabled\n\nType: `boolean`\n\nForce enable/disable the spinner. If not specified, the spinner will be enabled if the `stream` is being run inside a TTY context (not spawned or piped) and/or not in a CI environment.\n\nNote that `{isEnabled: false}` doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text.\n\n##### isSilent\n\nType: `boolean`\\\nDefault: `false`\n\nDisable the spinner and all log text. All output is suppressed and `isEnabled` will be considered `false`.\n\n##### discardStdin\n\nType: `boolean`\\\nDefault: `true`\n\nDiscard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on <kbd>Enter</kbd> key presses, and prevents buffering of input while the spinner is running.\n\nThis has no effect on Windows as there is no good way to implement discarding stdin properly there.\n\n### Instance\n\n#### .text <sup>get/set</sup>\n\nChange the text displayed after the spinner.\n\n#### .prefixText <sup>get/set</sup>\n\nChange the text before the spinner.\n\nNo prefix text will be displayed if set to an empty string.\n\n#### .suffixText <sup>get/set</sup>\n\nChange the text after the spinner text.\n\nNo suffix text will be displayed if set to an empty string.\n\n#### .color <sup>get/set</sup>\n\nChange the spinner color.\n\n#### .spinner <sup>get/set</sup>\n\nChange the spinner.\n\n#### .indent <sup>get/set</sup>\n\nChange the spinner indent.\n\n#### .isSpinning <sup>get</sup>\n\nA boolean indicating whether the instance is currently spinning.\n\n#### .interval <sup>get</sup>\n\nThe interval between each frame.\n\nThe interval is decided by the chosen spinner.\n\n#### .start(text?)\n\nStart the spinner. Returns the instance. Set the current text if `text` is provided.\n\n#### .stop()\n\nStop and clear the spinner. Returns the instance.\n\n#### .succeed(text?)\n\nStop the spinner, change it to a green `✔` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .fail(text?)\n\nStop the spinner, change it to a red `✖` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .warn(text?)\n\nStop the spinner, change it to a yellow `⚠` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .info(text?)\n\nStop the spinner, change it to a blue `ℹ` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .stopAndPersist(options?)\n\nStop the spinner and change the symbol or text. Returns the instance. See the GIF below.\n\n##### options\n\nType: `object`\n\n###### symbol\n\nType: `string`\\\nDefault: `' '`\n\nSymbol to replace the spinner with.\n\n###### text\n\nType: `string`\\\nDefault: Current `'text'`\n\nText to be persisted after the symbol.\n\n###### prefixText\n\nType: `string | () => string`\\\nDefault: Current `prefixText`\n\nText or a function that returns text to be persisted before the symbol. No prefix text will be displayed if set to an empty string.\n\n###### suffixText\n\nType: `string | () => string`\\\nDefault: Current `suffixText`\n\nText or a function that returns text to be persisted after the text after the symbol. No suffix text will be displayed if set to an empty string.\n\n<img src=\"screenshot-2.gif\" width=\"480\">\n\n#### .clear()\n\nClear the spinner. Returns the instance.\n\n#### .render()\n\nManually render a new frame. Returns the instance.\n\n#### .frame()\n\nGet a new frame.\n\n### oraPromise(action, text)\n### oraPromise(action, options)\n\nStarts a spinner for a promise or promise-returning function. The spinner is stopped with `.succeed()` if the promise fulfills or with `.fail()` if it rejects. Returns the promise.\n\n```js\nimport {oraPromise} from 'ora';\n\nawait oraPromise(somePromise);\n```\n\n#### action\n\nType: `Promise | ((spinner: ora.Ora) => Promise)`\n\n#### options\n\nType: `object`\n\nAll of the [options](#options) plus the following:\n\n##### successText\n\nType: `string | ((result: T) => string) | undefined`\n\nThe new text of the spinner when the promise is resolved.\n\nKeeps the existing text if `undefined`.\n\n##### failText\n\nType: `string | ((error: Error) => string) | undefined`\n\nThe new text of the spinner when the promise is rejected.\n\nKeeps the existing text if `undefined`.\n\n### spinners\n\nType: `Record<string, Spinner>`\n\nAll [provided spinners](https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json).\n\n## FAQ\n\n### How do I change the color of the text?\n\nUse [`chalk`](https://github.com/chalk/chalk) or [`yoctocolors`](https://github.com/sindresorhus/yoctocolors):\n\n```js\nimport ora from 'ora';\nimport chalk from 'chalk';\n\nconst spinner = ora(`Loading ${chalk.red('unicorns')}`).start();\n```\n\n### Why does the spinner freeze?\n\nJavaScript is single-threaded, so any synchronous operations will block the spinner's animation. To avoid this, prefer using asynchronous operations.\n\n## Related\n\n- [yocto-spinner](https://github.com/sindresorhus/yocto-spinner) - Tiny terminal spinner\n- [cli-spinners](https://github.com/sindresorhus/cli-spinners) - Spinners for use in the terminal\n\n**Ports**\n\n- [CLISpinner](https://github.com/kiliankoe/CLISpinner) - Terminal spinner library for Swift\n- [halo](https://github.com/ManrajGrover/halo) - Python port\n- [spinners](https://github.com/FGRibreau/spinners) - Terminal spinners for Rust\n- [marquee-ora](https://github.com/joeycozza/marquee-ora) - Scrolling marquee spinner for Ora\n- [briandowns/spinner](https://github.com/briandowns/spinner) - Terminal spinner/progress indicator for Go\n- [tj/go-spin](https://github.com/tj/go-spin) - Terminal spinner package for Go\n- [observablehq.com/@victordidenko/ora](https://observablehq.com/@victordidenko/ora) - Ora port to Observable notebooks\n- [kia](https://github.com/HarryPeach/kia) - Simple terminal spinners for Deno 🦕\n"
        },
        {
          "name": "screenshot-2.gif",
          "type": "blob",
          "size": 385.568359375,
          "content": null
        },
        {
          "name": "screenshot-spinner.gif",
          "type": "blob",
          "size": 5.4609375,
          "content": null
        },
        {
          "name": "screenshot.json",
          "type": "blob",
          "size": 28.65625,
          "content": "{\n  \"version\": 1,\n  \"width\": 32,\n  \"height\": 5,\n  \"duration\": 18.816945,\n  \"command\": null,\n  \"title\": null,\n  \"env\": {\n    \"TERM\": \"xterm-256color\",\n    \"SHELL\": \"/usr/local/bin/fish\"\n  },\n  \"stdout\": [\n    [\n      0.001904,\n      \"\\u001b[38;2;85;85;85mode example.js \\u001b[15D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.116914,\n      \"\\u001b[1mo\\u001b(B\\u001b[m\\u001b[38;2;85;85;85mde example.js \\u001b[14D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.000171,\n      \"\\b\\b\\u001b[91mno\\u001b[38;2;85;85;85mde example.js \\u001b[14D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.067673,\n      \"\\u001b[91md\\u001b[38;2;85;85;85me example.js \\u001b[13D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.203036,\n      \"\\u001b[91me\\u001b[38;2;85;85;85m example.js \\u001b[12D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.000326,\n      \"\\b\\b\\b\\b\\u001b[1mnode\\u001b(B\\u001b[m\\u001b[38;2;85;85;85m example.js \\u001b[12D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.085694,\n      \"\\u001b[1m \\u001b(B\\u001b[m\\u001b[38;2;85;85;85mexample.js \\u001b[11D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.000111,\n      \"\\b \\u001b[38;2;85;85;85mexample.js \\u001b[11D\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.382488,\n      \"example.js \"\n    ],\n    [\n      0.000165,\n      \"\\u001b[11D\\u001b[36mexample.js\\u001b[30m\\u001b(B\\u001b[m \"\n    ],\n    [\n      0.314997,\n      \"\\r\\n\\u001b[30m\\u001b(B\\u001b[m\"\n    ],\n    [\n      0.00013,\n      \"\\u001b[?2004l\"\n    ],\n    [\n      0.011313,\n      \"\\u001b]0;ora: node example.js  — node\\u0007\\u001b[30m\\u001b(B\\u001b[m\\r\"\n    ],\n    [\n      0.1158,\n      \"\\u001b[?25l\"\n    ],\n    [\n      0.002061,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000114,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000158,\n      \"\\u001b[36m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083103,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000377,\n      \"\\u001b[36m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.086286,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.00012,\n      \"\\u001b[36m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081743,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000111,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000128,\n      \"\\u001b[36m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085696,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000299,\n      \"\\u001b[36m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083688,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000148,\n      \"\\u001b[36m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080913,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000267,\n      \"\\u001b[36m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.086336,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000169,\n      \"\\u001b[36m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083412,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.4e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000298,\n      \"\\u001b[36m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.086227,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000161,\n      \"\\u001b[36m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082719,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000398,\n      \"\\u001b[36m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084857,\n      \"\\u001b[2K\"\n    ],\n    [\n      5.1e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000383,\n      \"\\u001b[36m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082811,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000121,\n      \"\\u001b[36m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080951,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000181,\n      \"\\u001b[36m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084463,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000107,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000122,\n      \"\\u001b[36m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083375,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000127,\n      \"\\u001b[36m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080903,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000341,\n      \"\\u001b[1G\"\n    ],\n    [\n      6.5e-05,\n      \"\\u001b[36m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085916,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.00024,\n      \"\\u001b[36m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081289,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000605,\n      \"\\u001b[36m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080957,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.00037,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00053,\n      \"\\u001b[36m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084219,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000328,\n      \"\\u001b[36m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082526,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000244,\n      \"\\u001b[36m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082079,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.4e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000816,\n      \"\\u001b[36m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084362,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.1e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000167,\n      \"\\u001b[36m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08224,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.1e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000347,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.0813,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000104,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081323,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000131,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080502,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000104,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081233,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000224,\n      \"\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084122,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      9.7e-05,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084086,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000214,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085431,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000178,\n      \"\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082205,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000167,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.08663,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000173,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084956,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.4e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000228,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083064,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000233,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084532,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000205,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082335,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000293,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083895,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000357,\n      \"\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084621,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000116,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000195,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084423,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000528,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084666,\n      \"\\u001b[2K\"\n    ],\n    [\n      5.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00021,\n      \"\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.08529,\n      \"\\u001b[2K\"\n    ],\n    [\n      9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000166,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.08098,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.001673,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.001369,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084824,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000209,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084048,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000167,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.08298,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000435,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080783,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000382,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081044,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000247,\n      \"\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08066,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000111,\n      \"\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083301,\n      \"\\u001b[2K\"\n    ],\n    [\n      6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000177,\n      \"\\u001b[32m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08367,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000256,\n      \"\\u001b[32m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083109,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000356,\n      \"\\u001b[32m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08574,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000325,\n      \"\\u001b[32m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084085,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000224,\n      \"\\u001b[32m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085112,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080702,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000142,\n      \"\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08402,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000618,\n      \"\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082493,\n      \"\\u001b[2K\"\n    ],\n    [\n      8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000213,\n      \"\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081267,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000126,\n      \"\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080987,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000802,\n      \"\\u001b[32m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083891,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      7.1e-05,\n      \"\\u001b[32m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081677,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000109,\n      \"\\u001b[32m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081978,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000105,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000475,\n      \"\\u001b[32m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085732,\n      \"\\u001b[2K\"\n    ],\n    [\n      7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000111,\n      \"\\u001b[32m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081498,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000357,\n      \"\\u001b[32m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081684,\n      \"\\u001b[2K\"\n    ],\n    [\n      7.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000603,\n      \"\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081071,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000262,\n      \"\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084355,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084846,\n      \"\\u001b[2K\"\n    ],\n    [\n      5.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000232,\n      \"\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084847,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000235,\n      \"\\u001b[32m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082068,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000619,\n      \"\\u001b[32m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081252,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000124,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083929,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000121,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083262,\n      \"\\u001b[2K\"\n    ],\n    [\n      5.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.0002,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082963,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000453,\n      \"\\u001b[1G\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084622,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.1e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000386,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082358,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000205,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082973,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000114,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00045,\n      \"\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081773,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.00026,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081145,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000218,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083303,\n      \"\\u001b[2K\"\n    ],\n    [\n      7.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000555,\n      \"\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082269,\n      \"\\u001b[2K\"\n    ],\n    [\n      9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000251,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.086135,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000383,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081856,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.4e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000216,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.0838,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000204,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083278,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000154,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084661,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000425,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085872,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000338,\n      \"\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.08196,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000576,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082757,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000226,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084301,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000283,\n      \"\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081155,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000105,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000217,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084793,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000125,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000247,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083009,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000225,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081915,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000149,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080718,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000198,\n      \"\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082405,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.1e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000459,\n      \"\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084385,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000196,\n      \"\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085676,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000104,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000613,\n      \"\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082713,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000962,\n      \"\\u001b[32m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085432,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.2e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00041,\n      \"\\u001b[32m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082907,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000262,\n      \"\\u001b[32m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082884,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000193,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000735,\n      \"\\u001b[32m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08535,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000116,\n      \"\\u001b[32m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083234,\n      \"\\u001b[2K\"\n    ],\n    [\n      5.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000258,\n      \"\\u001b[32m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.086415,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000148,\n      \"\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081705,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000146,\n      \"\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080807,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000249,\n      \"\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.079687,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.4e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000183,\n      \"\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081712,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000254,\n      \"\\u001b[32m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080168,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000822,\n      \"\\u001b[32m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084237,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000488,\n      \"\\u001b[32m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084152,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000279,\n      \"\\u001b[32m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081638,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000138,\n      \"\\u001b[32m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083315,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.4e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000148,\n      \"\\u001b[32m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081786,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000268,\n      \"\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08429,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000137,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000295,\n      \"\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081238,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000109,\n      \"\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.086071,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081903,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000388,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083037,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000101,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000473,\n      \"\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082119,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000351,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085497,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.001197,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.082871,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000109,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.086538,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000281,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085626,\n      \"^D\\b\\b\"\n    ],\n    [\n      0.001457,\n      \"\\u001b[2K\"\n    ],\n    [\n      6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000189,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085264,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000265,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085663,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000108,\n      \"\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084885,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000113,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000455,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083256,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.001423,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.089174,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.001635,\n      \"\\u001b[1G\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.092049,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000206,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080988,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00034,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081192,\n      \"\\u001b[2K\"\n    ],\n    [\n      8.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000165,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085462,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000381,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084879,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000182,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081392,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000104,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000187,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081924,\n      \"\\u001b[2K\\u001b[1G\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084352,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.7e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00037,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080816,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000417,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084295,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000202,\n      \"\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084905,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000103,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080886,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000102,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000188,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.085382,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081915,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000274,\n      \"\\u001b[32m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084892,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000169,\n      \"\\u001b[1G\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083987,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000211,\n      \"\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084345,\n      \"\\u001b[2K\"\n    ],\n    [\n      7.6e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      9.7e-05,\n      \"\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083658,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000109,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000244,\n      \"\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083053,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084848,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000153,\n      \"\\u001b[32m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083902,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000767,\n      \"\\u001b[32m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080861,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081879,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000182,\n      \"\\u001b[32m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083858,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000341,\n      \"\\u001b[32m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085888,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000112,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000229,\n      \"\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083217,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.00012,\n      \"\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080302,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000323,\n      \"\\u001b[32m⠇\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.08551,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠏\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.054202,\n      \"^D\\b\\b\"\n    ],\n    [\n      0.026417,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000484,\n      \"\\u001b[32m⠋\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082857,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000422,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00016,\n      \"\\u001b[32m⠙\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084827,\n      \"\\u001b[2K\"\n    ],\n    [\n      7.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000136,\n      \"\\u001b[32m⠹\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.081255,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000107,\n      \"\\u001b[32m⠸\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.082968,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000135,\n      \"\\u001b[1G\"\n    ],\n    [\n      9e-05,\n      \"\\u001b[32m⠼\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.083101,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.0001,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000121,\n      \"\\u001b[32m⠴\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.080704,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000382,\n      \"\\u001b[1G\"\n    ],\n    [\n      5.8e-05,\n      \"\\u001b[32m⠦\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.085362,\n      \"\\u001b[2K\\u001b[1G\\u001b[32m⠧\\u001b[39m Loading unicorns\"\n    ],\n    [\n      0.084439,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000109,\n      \"\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081339,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.5e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00027,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.047113,\n      \"^D\\b\\b\"\n    ],\n    [\n      0.03416,\n      \"\\u001b[2K\"\n    ],\n    [\n      7.8e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000146,\n      \"\\u001b[33m⠋\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080609,\n      \"\\u001b[2K\"\n    ],\n    [\n      0.000104,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000287,\n      \"\\u001b[33m⠙\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080932,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000134,\n      \"\\u001b[33m⠹\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.081025,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.00022,\n      \"\\u001b[33m⠸\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.086437,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.00027,\n      \"\\u001b[33m⠼\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.084962,\n      \"\\u001b[2K\"\n    ],\n    [\n      6.3e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.00021,\n      \"\\u001b[33m⠴\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.083325,\n      \"\\u001b[2K\\u001b[1G\"\n    ],\n    [\n      0.000283,\n      \"\\u001b[33m⠦\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080876,\n      \"\\u001b[2K\"\n    ],\n    [\n      9.1e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000228,\n      \"\\u001b[33m⠧\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.080961,\n      \"\\u001b[2K\"\n    ],\n    [\n      9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.000267,\n      \"\\u001b[33m⠇\\u001b[39m Loading rainbows\"\n    ],\n    [\n      0.086332,\n      \"\\u001b[2K\"\n    ],\n    [\n      7.9e-05,\n      \"\\u001b[1G\"\n    ],\n    [\n      0.001762,\n      \"\\u001b[33m⠏\\u001b[39m Loading rainbows\"\n    ]\n  ]\n}\n"
        },
        {
          "name": "screenshot.svg",
          "type": "blob",
          "size": 15.0654296875,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"350\" height=\"195.26\"><rect width=\"350\" height=\"195.26\" class=\"a\" rx=\"5\" ry=\"5\"/><circle cx=\"20\" cy=\"20\" r=\"7.5\" fill=\"#ff5f58\"/><circle cx=\"45\" cy=\"20\" r=\"7.5\" fill=\"#ffbd2e\"/><circle cx=\"70\" cy=\"20\" r=\"7.5\" fill=\"#18c132\"/><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"320\" height=\"130.26\" x=\"15\" y=\"50\" viewBox=\"0 0 32 13.03\"><style>@keyframes l{0%{transform:translateX(-32px)}2.2%{transform:translateX(-64px)}2.3%{transform:translateX(-96px)}4.4%{transform:translateX(-192px)}6.6%{transform:translateX(-256px)}8.8%{transform:translateX(-352px)}10.9%{transform:translateX(-448px)}13.1%{transform:translateX(-512px)}15.3%{transform:translateX(-608px)}17.6%{transform:translateX(-704px)}19.7%{transform:translateX(-800px)}21.9%{transform:translateX(-896px)}24.1%{transform:translateX(-960px)}26.2%{transform:translateX(-1056px)}28.4%{transform:translateX(-1152px)}30.6%{transform:translateX(-1216px)}32.7%{transform:translateX(-1312px)}34.9%{transform:translateX(-1376px)}37%{transform:translateX(-1472px)}39.1%{transform:translateX(-1536px)}39.2%{transform:translateX(-1568px)}41.3%{transform:translateX(-1664px)}43.5%{transform:translateX(-1760px)}45.6%{transform:translateX(-1856px)}47.8%{transform:translateX(-1952px)}50%{transform:translateX(-2048px)}52.1%{transform:translateX(-2112px)}54.2%{transform:translateX(-2176px)}56.3%{transform:translateX(-2240px)}58.4%{transform:translateX(-2336px)}60.6%{transform:translateX(-2432px)}62.8%{transform:translateX(-2496px)}65%{transform:translateX(-2560px)}67.2%{transform:translateX(-2656px)}69.4%{transform:translateX(-2752px)}71.6%{transform:translateX(-2848px)}73.8%{transform:translateX(-2912px)}76%{transform:translateX(-3008px)}78.1%{transform:translateX(-3072px)}80.3%{transform:translateX(-3136px)}82.5%{transform:translateX(-3232px)}84.7%{transform:translateX(-3296px)}86.9%{transform:translateX(-3392px)}89.1%{transform:translateX(-3488px)}91.3%{transform:translateX(-3584px)}93.5%{transform:translateX(-3680px)}95.7%{transform:translateX(-3776px)}97.9%{transform:translateX(-3872px)}}.a{fill:#282d35}.g{fill:#66c2cd}.g,.h,.i{font-weight:400;text-decoration:none}.h{fill:#b9c0cb}.i{fill:#dbab79}</style><g font-family=\"Monaco,Consolas,Menlo,'Bitstream Vera Sans Mono','Powerline Symbols',monospace\" font-size=\"1.67\"><defs><symbol id=\"1\"><text y=\"1.67\" fill=\"#b9c0cb\" font-weight=\"700\">node</text><text x=\"5.01\" y=\"1.67\" class=\"g\">example.js</text></symbol><symbol id=\"2\"><text y=\"1.67\" class=\"g\">⠙</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"3\"><text y=\"1.67\" class=\"g\">⠹</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"4\"><text y=\"1.67\" class=\"g\">⠸</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"5\"><text y=\"1.67\" class=\"g\">⠼</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"6\"><text y=\"1.67\" class=\"g\">⠴</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"7\"><text y=\"1.67\" class=\"g\">⠦</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"8\"><text y=\"1.67\" class=\"g\">⠧</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"9\"><text y=\"1.67\" class=\"g\">⠇</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"10\"><text y=\"1.67\" class=\"g\">⠏</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"11\"><text y=\"1.67\" class=\"g\">⠋</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">unicorns</text></symbol><symbol id=\"12\"><text y=\"1.67\" class=\"i\">⠼</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"13\"><text y=\"1.67\" class=\"i\">⠴</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"14\"><text y=\"1.67\" class=\"i\">⠦</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"15\"><text y=\"1.67\" class=\"i\">⠧</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"16\"><text y=\"1.67\" class=\"i\">⠇</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"17\"><text y=\"1.67\" class=\"i\">⠏</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"18\"><text y=\"1.67\" class=\"i\">⠋</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"19\"><text y=\"1.67\" class=\"i\">⠙</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"20\"><text y=\"1.67\" class=\"i\">⠹</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"21\"><text y=\"1.67\" class=\"i\">⠸</text><text x=\"2\" y=\"1.67\" class=\"h\">Loading</text><text x=\"10.02\" y=\"1.67\" class=\"h\">rainbows</text></symbol><symbol id=\"a\"><path fill=\"transparent\" d=\"M0 0h32v5H0z\"/></symbol><symbol id=\"b\"><rect fill=\"#6f7683\"/></symbol></defs><path d=\"M0 0h32v13.03H0z\" class=\"a\"/><g style=\"animation-duration:3.8539230000000035s;animation-iteration-count:infinite;animation-name:l;animation-timing-function:steps(1,end)\"><svg width=\"4000\"><svg><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"32\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#2\"/></svg><svg x=\"64\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"96\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#3\"/></svg><svg x=\"128\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"160\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"192\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#4\"/></svg><svg x=\"224\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"256\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#5\"/></svg><svg x=\"288\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"320\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"352\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#6\"/></svg><svg x=\"384\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"416\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"448\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#7\"/></svg><svg x=\"480\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"512\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#8\"/></svg><svg x=\"544\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"576\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"608\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#9\"/></svg><svg x=\"640\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"672\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"704\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#10\"/></svg><svg x=\"736\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"768\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"800\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#11\"/></svg><svg x=\"832\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"864\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"896\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#2\"/></svg><svg x=\"928\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"960\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#3\"/></svg><svg x=\"992\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1024\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1056\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#4\"/></svg><svg x=\"1088\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1120\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1152\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#5\"/></svg><svg x=\"1184\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1216\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#6\"/></svg><svg x=\"1248\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1280\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1312\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#7\"/></svg><svg x=\"1344\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1376\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#8\"/></svg><svg x=\"1408\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1440\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1472\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#9\"/></svg><svg x=\"1504\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1536\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1568\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#10\"/></svg><svg x=\"1600\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1632\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1664\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#11\"/></svg><svg x=\"1696\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1728\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1760\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#2\"/></svg><svg x=\"1792\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1824\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1856\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#3\"/></svg><svg x=\"1888\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1920\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"1952\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#4\"/></svg><svg x=\"1984\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2016\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2048\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#12\"/></svg><svg x=\"2080\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2112\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#13\"/></svg><svg x=\"2144\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2176\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#14\"/></svg><svg x=\"2208\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2240\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#15\"/></svg><svg x=\"2272\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2304\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2336\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#16\"/></svg><svg x=\"2368\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2400\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2432\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#17\"/></svg><svg x=\"2464\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2496\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#18\"/></svg><svg x=\"2528\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2560\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#19\"/></svg><svg x=\"2592\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2624\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2656\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#20\"/></svg><svg x=\"2688\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2720\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2752\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#21\"/></svg><svg x=\"2784\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2816\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2848\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#12\"/></svg><svg x=\"2880\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2912\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#13\"/></svg><svg x=\"2944\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"2976\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3008\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#14\"/></svg><svg x=\"3040\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3072\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#15\"/></svg><svg x=\"3104\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3136\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#16\"/></svg><svg x=\"3168\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3200\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3232\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#17\"/></svg><svg x=\"3264\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3296\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#18\"/></svg><svg x=\"3328\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3360\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3392\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#19\"/></svg><svg x=\"3424\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3456\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3488\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#20\"/></svg><svg x=\"3520\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3552\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3584\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#21\"/></svg><svg x=\"3616\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3648\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3680\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#12\"/></svg><svg x=\"3712\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3744\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3776\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#13\"/></svg><svg x=\"3808\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3840\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3872\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#14\"/></svg><svg x=\"3904\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3936\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/></svg><svg x=\"3968\"><use xlink:href=\"#a\"/><use xlink:href=\"#1\"/><use y=\"2.17\" xlink:href=\"#15\"/></svg></svg></g></g></svg></svg>"
        },
        {
          "name": "test.js",
          "type": "blob",
          "size": 25.6787109375,
          "content": "import process from 'node:process';\nimport {PassThrough as PassThroughStream} from 'node:stream';\nimport getStream from 'get-stream';\nimport test from 'ava';\nimport stripAnsi from 'strip-ansi';\nimport TransformTTY from 'transform-tty';\nimport ora, {oraPromise, spinners} from './index.js';\n\nconst spinnerCharacter = process.platform === 'win32' ? '-' : '⠋';\nconst noop = () => {};\n\nconst getPassThroughStream = () => {\n\tconst stream = new PassThroughStream();\n\tstream.clearLine = noop;\n\tstream.cursorTo = noop;\n\tstream.moveCursor = noop;\n\treturn stream;\n};\n\nconst doSpinner = async (function_, extraOptions = {}) => {\n\tconst stream = getPassThroughStream();\n\tconst output = getStream(stream);\n\n\tconst spinner = ora({\n\t\tstream,\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t\tisSilent: false,\n\t\t...extraOptions,\n\t});\n\n\tspinner.start();\n\tfunction_(spinner);\n\tstream.end();\n\n\treturn stripAnsi(await output);\n};\n\nconst macro = async (t, function_, expected, extraOptions = {}) => {\n\tt.regex(await doSpinner(function_, extraOptions), expected);\n};\n\ntest('main', macro, spinner => {\n\tspinner.stop();\n}, new RegExp(`${spinnerCharacter} foo`));\n\ntest('`.id` is not set when created', t => {\n\tconst spinner = ora('foo');\n\tt.false(spinner.isSpinning);\n});\n\ntest('ignore consecutive calls to `.start()`', t => {\n\tconst spinner = ora('foo');\n\tspinner.start();\n\tconst {id} = spinner;\n\tspinner.start();\n\tt.is(id, spinner.id);\n});\n\ntest('chain call to `.start()` with constructor', t => {\n\tconst spinner = ora({\n\t\tstream: getPassThroughStream(),\n\t\ttext: 'foo',\n\t\tisEnabled: true,\n\t}).start();\n\n\tt.truthy(spinner.isSpinning);\n\tt.true(spinner._isEnabled);\n});\n\ntest('.succeed()', macro, spinner => {\n\tspinner.succeed();\n}, /[√✔] foo\\n$/);\n\ntest('.succeed() - with new text', macro, spinner => {\n\tspinner.succeed('fooed');\n}, /[√✔] fooed\\n$/);\n\ntest('.fail()', macro, spinner => {\n\tspinner.fail();\n}, /[×✖] foo\\n$/);\n\ntest('.fail() - with new text', macro, spinner => {\n\tspinner.fail('failed to foo');\n}, /[×✖] failed to foo\\n$/);\n\ntest('.warn()', macro, spinner => {\n\tspinner.warn();\n}, /[‼⚠] foo\\n$/);\n\ntest('.info()', macro, spinner => {\n\tspinner.info();\n}, /[iℹ] foo\\n$/);\n\ntest('.stopAndPersist() - with new text', macro, spinner => {\n\tspinner.stopAndPersist({text: 'all done'});\n}, /\\s all done\\n$/);\n\ntest('.stopAndPersist() - with new symbol and text', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'all done'});\n}, /@ all done\\n$/);\n\ntest('.start(text)', macro, spinner => {\n\tspinner.start('Test text');\n\tspinner.stopAndPersist();\n}, /Test text\\n$/);\n\ntest('.start() - isEnabled:false outputs text', macro, spinner => {\n\tspinner.stop();\n}, /- foo\\n$/, {isEnabled: false});\n\ntest('.stopAndPersist() - isEnabled:false outputs text', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'all done'});\n}, /- foo\\n@ all done\\n$/, {isEnabled: false});\n\ntest('.start() - isSilent:true no output', macro, spinner => {\n\tspinner.stop();\n}, /^(?![\\s\\S])/, {isSilent: true});\n\ntest('.stopAndPersist() - isSilent:true no output', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'all done'});\n}, /^(?![\\s\\S])/, {isSilent: true});\n\ntest('.stopAndPersist() - isSilent:true can be disabled', macro, spinner => {\n\tspinner.isSilent = false;\n\tspinner.stopAndPersist({symbol: '@', text: 'all done'});\n}, /@ all done\\n$/, {isSilent: true});\n\ntest('oraPromise() - resolves', async t => {\n\tconst stream = getPassThroughStream();\n\tconst output = getStream(stream);\n\tconst resolves = Promise.resolve(1);\n\n\toraPromise(resolves, {\n\t\tstream,\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t});\n\n\tawait resolves;\n\tstream.end();\n\n\tt.regex(stripAnsi(await output), /[√✔] foo\\n$/);\n});\n\ntest('oraPromise() - rejects', async t => {\n\tconst stream = getPassThroughStream();\n\tconst output = getStream(stream);\n\tconst rejects = Promise.reject(new Error()); // eslint-disable-line unicorn/error-message\n\n\ttry {\n\t\tawait oraPromise(rejects, {\n\t\t\tstream,\n\t\t\ttext: 'foo',\n\t\t\tcolor: false,\n\t\t\tisEnabled: true,\n\t\t});\n\t} catch {}\n\n\tstream.end();\n\n\tt.regex(stripAnsi(await output), /[×✖] foo\\n$/);\n});\n\ntest('erases wrapped lines', t => {\n\tconst stream = getPassThroughStream();\n\tstream.isTTY = true;\n\tstream.columns = 40;\n\tlet clearedLines = 0;\n\tlet cursorAtRow = 0;\n\tstream.clearLine = () => {\n\t\tclearedLines++;\n\t};\n\n\tstream.moveCursor = (dx, dy) => {\n\t\tcursorAtRow += dy;\n\t};\n\n\tconst reset = () => {\n\t\tclearedLines = 0;\n\t\tcursorAtRow = 0;\n\t};\n\n\tconst spinner = ora({\n\t\tstream,\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t});\n\n\tspinner.render();\n\tt.is(clearedLines, 0);\n\tt.is(cursorAtRow, 0);\n\n\tspinner.text = 'foo\\n\\nbar';\n\tspinner.render();\n\tt.is(clearedLines, 1); // Cleared 'foo'\n\tt.is(cursorAtRow, 0);\n\n\tspinner.render();\n\tt.is(clearedLines, 4); // Cleared 'foo\\n\\nbar'\n\tt.is(cursorAtRow, -2);\n\n\tspinner.clear();\n\treset();\n\tspinner.text = '0'.repeat(stream.columns + 10);\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines, 2);\n\tt.is(cursorAtRow, -1);\n\n\tspinner.clear();\n\treset();\n\t// Unicorns take up two cells, so this creates 3 rows of text not two\n\tspinner.text = '🦄'.repeat(stream.columns + 10);\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines, 3);\n\tt.is(cursorAtRow, -2);\n\n\tspinner.clear();\n\treset();\n\t// Unicorns take up two cells. Remove the spinner and space and fill two rows,\n\t// then force a linebreak and write the third row.\n\tspinner.text = '🦄'.repeat(stream.columns - 2) + '\\nfoo';\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines, 3);\n\tt.is(cursorAtRow, -2);\n\n\tspinner.clear();\n\treset();\n\tspinner.prefixText = 'foo\\n';\n\tspinner.text = '\\nbar';\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines, 3); // Cleared 'foo\\n\\nbar'\n\tt.is(cursorAtRow, -2);\n\n\tspinner.clear();\n\treset();\n\tspinner.prefixText = 'foo\\n';\n\tspinner.text = '\\nbar';\n\tspinner.suffixText = '\\nbaz';\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines, 4); // Cleared 'foo\\n\\nbar \\nbaz'\n\tt.is(cursorAtRow, -3);\n\n\tspinner.stop();\n});\n\ntest('reset frameIndex when setting new spinner', async t => {\n\tconst stream = getPassThroughStream();\n\tconst output = getStream(stream);\n\n\tconst spinner = ora({\n\t\tstream,\n\t\tisEnabled: true,\n\t\tspinner: {\n\t\t\tframes: [\n\t\t\t\t'foo',\n\t\t\t\t'fooo',\n\t\t\t],\n\t\t},\n\t});\n\n\tt.is(spinner._frameIndex, -1);\n\n\tspinner.render();\n\tt.is(spinner._frameIndex, 0);\n\n\tspinner.spinner = {frames: ['baz']};\n\tspinner.render();\n\n\tstream.end();\n\n\tt.is(spinner._frameIndex, 0);\n\tt.regex(stripAnsi(await output), /foo baz/);\n});\n\ntest('set the correct interval when changing spinner (object case)', t => {\n\tconst spinner = ora({\n\t\tisEnabled: false,\n\t\tspinner: {frames: ['foo', 'bar']},\n\t\tinterval: 300,\n\t});\n\n\tt.is(spinner.interval, 300);\n\n\tspinner.spinner = {frames: ['baz'], interval: 200};\n\n\tt.is(spinner.interval, 200);\n});\n\ntest('set the correct interval when changing spinner (string case)', t => {\n\tconst spinner = ora({\n\t\tisEnabled: false,\n\t\tspinner: 'dots',\n\t\tinterval: 100,\n\t});\n\n\tt.is(spinner.interval, 100);\n\n\tspinner.spinner = 'layer';\n\n\tconst expectedInterval = process.platform === 'win32' ? 130 : 150;\n\tt.is(spinner.interval, expectedInterval);\n});\n\nif (process.platform !== 'win32') {\n\ttest('throw when incorrect spinner', t => {\n\t\tconst spinner = ora();\n\n\t\tt.throws(() => {\n\t\t\tspinner.spinner = 'random-string-12345';\n\t\t}, {\n\t\t\tmessage: /no built-in spinner/,\n\t\t});\n\t});\n}\n\ntest('throw when spinner is set to `default`', t => {\n\tt.throws(() => {\n\t\tora({spinner: 'default'});\n\t}, {\n\t\tmessage: /no built-in spinner/,\n\t});\n});\n\ntest('indent option', t => {\n\tconst stream = getPassThroughStream();\n\tstream.isTTY = true;\n\tlet cursorAtRow = 0;\n\tstream.cursorTo = indent => {\n\t\tcursorAtRow = indent;\n\t};\n\n\tconst spinner = ora({\n\t\tstream,\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t\tindent: 7,\n\t});\n\n\tspinner.render();\n\tspinner.clear();\n\tt.is(cursorAtRow, 7);\n\tspinner.stop();\n});\n\ntest('indent option throws', t => {\n\tconst stream = getPassThroughStream();\n\n\tconst spinner = ora({\n\t\tstream,\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t});\n\n\tt.throws(() => {\n\t\tspinner.indent = -1;\n\t}, {\n\t\tmessage: 'The `indent` option must be an integer from 0 and up',\n\t});\n});\n\ntest('handles wrapped lines when length of indent + text is greater than columns', t => {\n\tconst stream = getPassThroughStream();\n\tstream.isTTY = true;\n\tstream.columns = 20;\n\n\tconst spinner = ora({\n\t\tstream,\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t});\n\n\tspinner.render();\n\n\tspinner.text = '0'.repeat(spinner._stream.columns - 5);\n\tspinner.indent = 15;\n\tspinner.render();\n\n\tt.is(spinner._lineCount, 2);\n});\n\ntest('.stopAndPersist() with prefixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'foo'});\n}, /bar @ foo\\n$/, {prefixText: 'bar'});\n\ntest('.stopAndPersist() with empty prefixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'foo'});\n}, /@ foo\\n$/, {prefixText: ''});\n\ntest('.stopAndPersist() with manual prefixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', prefixText: 'baz', text: 'foo'});\n}, /baz @ foo\\n$/, {prefixText: 'bar'});\n\ntest('.stopAndPersist() with manual empty prefixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', prefixText: '', text: 'foo'});\n}, /@ foo\\n$/, {prefixText: 'bar'});\n\ntest('.stopAndPersist() with dynamic prefixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '&', prefixText: () => 'babeee', text: 'yorkie'});\n}, /babeee & yorkie\\n$/, {prefixText: () => 'babeee'});\n\ntest('.stopAndPersist() with suffixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'foo'});\n}, /@ foo bar\\n$/, {suffixText: 'bar'});\n\ntest('.stopAndPersist() with empty suffixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'foo'});\n}, /@ foo\\n$/, {suffixText: ''});\n\ntest('.stopAndPersist() with manual suffixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', suffixText: 'baz', text: 'foo'});\n}, /@ foo baz\\n$/, {suffixText: 'bar'});\n\ntest('.stopAndPersist() with manual empty suffixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', suffixText: '', text: 'foo'});\n}, /@ foo\\n$/, {suffixText: 'bar'});\n\ntest('.stopAndPersist() with dynamic suffixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '&', suffixText: () => 'babeee', text: 'yorkie'});\n}, /& yorkie babeee\\n$/, {suffixText: () => 'babeee'});\n\ntest('.stopAndPersist() with prefixText and suffixText', macro, spinner => {\n\tspinner.stopAndPersist({symbol: '@', text: 'foo'});\n}, /bar @ foo baz\\n$/, {prefixText: 'bar', suffixText: 'baz'});\n\n// New clear method tests\n\nconst currentClearMethod = transFormTTY => {\n\tconst spinner = ora({\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t\tstream: transFormTTY,\n\t\tspinner: {\n\t\t\tframes: [\n\t\t\t\t'-',\n\t\t\t],\n\t\t},\n\t});\n\n\tlet firstIndent = true;\n\n\tspinner.clear = function () {\n\t\tif (!this._isEnabled || !this._stream.isTTY) {\n\t\t\treturn this;\n\t\t}\n\n\t\tfor (let index = 0; index < this._linesToClear; index++) {\n\t\t\tif (index > 0) {\n\t\t\t\tthis._stream.moveCursor(0, -1);\n\t\t\t}\n\n\t\t\tthis._stream.clearLine();\n\t\t\tthis._stream.cursorTo(this.indent);\n\t\t}\n\n\t\t// It's too quick to be noticeable, but indent does not get applied\n\t\t// for the first render if `linesToClear === 0`. The new clear method\n\t\t// doesn't have this issue, since it's called outside of the loop.\n\t\tif (this._linesToClear === 0 && firstIndent && this.indent) {\n\t\t\tthis._stream.cursorTo(this.indent);\n\t\t\tfirstIndent = false;\n\t\t}\n\n\t\tthis._linesToClear = 0;\n\n\t\treturn this;\n\t}.bind(spinner);\n\n\treturn spinner;\n};\n\ntest.serial('new clear method test, basic', t => {\n\tconst transformTTY = new TransformTTY({crlf: true});\n\ttransformTTY.addSequencer();\n\ttransformTTY.addSequencer(null, true);\n\n\t/*\n\tIf the frames from this sequence differ from the previous sequence,\n\tit means the `spinner.clear()` method has failed to fully clear output between calls to render.\n\t*/\n\n\tconst currentClearTTY = new TransformTTY({crlf: true});\n\tcurrentClearTTY.addSequencer();\n\n\tconst currentOra = currentClearMethod(currentClearTTY);\n\n\tconst spinner = ora({\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t\tstream: transformTTY,\n\t\tspinner: {\n\t\t\tframes: [\n\t\t\t\t'-',\n\t\t\t],\n\t\t},\n\t});\n\n\tcurrentOra.render();\n\tspinner.render();\n\n\tcurrentOra.text = 'bar';\n\tcurrentOra.indent = 5;\n\tcurrentOra.render();\n\n\tspinner.text = 'bar';\n\tspinner.indent = 5;\n\tspinner.render();\n\n\tcurrentOra.text = 'baz';\n\tcurrentOra.indent = 10;\n\tcurrentOra.render();\n\n\tspinner.text = 'baz';\n\tspinner.indent = 10;\n\tspinner.render();\n\n\tcurrentOra.succeed('boz?');\n\n\tspinner.succeed('boz?');\n\n\tconst [sequenceString, clearedSequenceString] = transformTTY.getSequenceStrings();\n\tconst [frames, clearedFrames] = transformTTY.getFrames();\n\n\tt.is(sequenceString, '          ✔ boz?\\n');\n\tt.is(sequenceString, clearedSequenceString);\n\n\tt.deepEqual(clearedFrames, ['- foo', '     - bar', '          - baz', '          ✔ boz?\\n']);\n\tt.deepEqual(frames, clearedFrames);\n\n\tconst currentString = currentClearTTY.getSequenceStrings();\n\n\tt.is(currentString, '          ✔ boz?\\n');\n\n\tconst currentFrames = currentClearTTY.getFrames();\n\n\tt.deepEqual(frames, currentFrames);\n\t// Frames created using new clear method are deep equal to frames created using current clear method\n});\n\ntest('new clear method test, erases wrapped lines', t => {\n\tconst transformTTY = new TransformTTY({crlf: true, columns: 40});\n\ttransformTTY.addSequencer();\n\ttransformTTY.addSequencer(null, true);\n\n\tconst currentClearTTY = new TransformTTY({crlf: true, columns: 40});\n\tcurrentClearTTY.addSequencer();\n\n\tconst currentOra = currentClearMethod(currentClearTTY);\n\n\tconst cursorAtRow = () => {\n\t\tconst cursor = transformTTY.getCursorPos();\n\t\treturn cursor.y === 0 ? 0 : cursor.y * -1;\n\t};\n\n\tconst clearedLines = () => transformTTY.toString().split('\\n').length;\n\n\tconst spinner = ora({\n\t\ttext: 'foo',\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t\tstream: transformTTY,\n\t\tspinner: {\n\t\t\tframes: [\n\t\t\t\t'-',\n\t\t\t],\n\t\t},\n\t});\n\n\tcurrentOra.render();\n\n\tspinner.render();\n\tt.is(clearedLines(), 1); // Cleared 'foo'\n\tt.is(cursorAtRow(), 0);\n\n\tcurrentOra.text = 'foo\\n\\nbar';\n\tcurrentOra.render();\n\n\tspinner.text = 'foo\\n\\nbar';\n\tspinner.render();\n\tt.is(clearedLines(), 3); // Cleared 'foo\\n\\nbar'\n\tt.is(cursorAtRow(), -2);\n\n\tcurrentOra.clear();\n\tcurrentOra.text = '0'.repeat(currentOra._stream.columns + 10);\n\tcurrentOra.render();\n\tcurrentOra.render();\n\n\tspinner.clear();\n\tspinner.text = '0'.repeat(spinner._stream.columns + 10);\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines(), 2);\n\tt.is(cursorAtRow(), -1);\n\n\tcurrentOra.clear();\n\tcurrentOra.text = '🦄'.repeat(currentOra._stream.columns + 10);\n\tcurrentOra.render();\n\tcurrentOra.render();\n\n\tspinner.clear();\n\tspinner.text = '🦄'.repeat(spinner._stream.columns + 10);\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines(), 3);\n\tt.is(cursorAtRow(), -2);\n\n\tcurrentOra.clear();\n\tcurrentOra.text = '🦄'.repeat(currentOra._stream.columns - 2) + '\\nfoo';\n\tcurrentOra.render();\n\tcurrentOra.render();\n\n\tspinner.clear();\n\tspinner.text = '🦄'.repeat(spinner._stream.columns - 2) + '\\nfoo';\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines(), 3);\n\tt.is(cursorAtRow(), -2);\n\n\tcurrentOra.clear();\n\tcurrentOra.prefixText = 'foo\\n';\n\tcurrentOra.text = '\\nbar';\n\tcurrentOra.suffixText = '\\nbaz';\n\tcurrentOra.render();\n\tcurrentOra.render();\n\n\tspinner.clear();\n\tspinner.prefixText = 'foo\\n';\n\tspinner.text = '\\nbar';\n\tspinner.suffixText = '\\nbaz';\n\tspinner.render();\n\tspinner.render();\n\tt.is(clearedLines(), 4); // Cleared 'foo\\n\\nbar \\nbaz'\n\tt.is(cursorAtRow(), -3);\n\n\tconst [sequenceString, clearedSequenceString] = transformTTY.getSequenceStrings();\n\tconst [frames, clearedFrames] = transformTTY.getFrames();\n\n\tt.is(sequenceString, 'foo\\n - \\nbar \\nbaz');\n\tt.is(sequenceString, clearedSequenceString);\n\n\tt.deepEqual(clearedFrames, [\n\t\t'- foo',\n\t\t'- foo\\n\\nbar',\n\t\t'- 00000000000000000000000000000000000000\\n000000000000',\n\t\t'- 00000000000000000000000000000000000000\\n000000000000',\n\t\t'- 🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ '🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ '🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄',\n\t\t'- 🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ '🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ '🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄',\n\t\t'- 🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ '🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ 'foo',\n\t\t'- 🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ '🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄\\n'\n\t\t\t+ 'foo',\n\t\t'foo\\n - \\nbar \\nbaz',\n\t\t'foo\\n - \\nbar \\nbaz',\n\t]);\n\n\tt.deepEqual(frames, clearedFrames);\n\n\tconst currentClearString = currentClearTTY.toString();\n\tt.is(currentClearString, 'foo\\n - \\nbar \\nbaz');\n\n\tconst currentFrames = currentClearTTY.getFrames();\n\tt.deepEqual(frames, currentFrames);\n});\n\ntest('new clear method, stress test', t => {\n\tconst rando = (min, max) => {\n\t\tmin = Math.ceil(min);\n\t\tmax = Math.floor(max);\n\t\treturn Math.floor(Math.random() * ((max - min) + min));\n\t};\n\n\tconst rAnDoMaNiMaLs = (min, max) => {\n\t\tconst length = rando(min, max);\n\t\tlet result = '';\n\t\tconst THEAMINALS = ['🐯', '🦁', '🐮', '🐷', '🐽', '🐸', '🐙', '🐵', '🐦', '🐧', '🐔', '🐒', '🙉', '🙈', '🐣', '🐥', '🐺', '🐗', '🐴', '🦄', '🐝', '🐛', ...Array.from({length: 5}).fill('\\n')];\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult += THEAMINALS[Math.floor(Math.random() * THEAMINALS.length)];\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconst randos = () => rAnDoMaNiMaLs(rando(5, 15), rando(25, 50));\n\n\tconst randomize = (s1, s2) => {\n\t\tconst spnr = spinners.random;\n\t\tconst txt = randos();\n\t\tconst indent = rando(0, 15);\n\n\t\ts1.spinner = spnr;\n\t\ts2.spinner = spnr;\n\t\ts1.text = txt;\n\t\ts2.text = txt;\n\t\ts1.indent = indent;\n\t\ts2.indent = indent;\n\t};\n\n\tconst transformTTY = new TransformTTY({crlf: true});\n\ttransformTTY.addSequencer();\n\ttransformTTY.addSequencer(null, true);\n\n\tconst currentClearTTY = new TransformTTY({crlf: true});\n\tcurrentClearTTY.addSequencer();\n\n\tconst currentOra = currentClearMethod(currentClearTTY);\n\n\tconst spinner = ora({\n\t\tcolor: false,\n\t\tisEnabled: true,\n\t\tstream: transformTTY,\n\t});\n\n\trandomize(spinner, currentOra);\n\n\tfor (let x = 0; x < 100; x++) {\n\t\tif (x % 10 === 0) {\n\t\t\trandomize(spinner, currentOra);\n\t\t}\n\n\t\tif (x % 5 === 0) {\n\t\t\tconst indent = rando(0, 25);\n\t\t\tspinner.indent = indent;\n\t\t\tcurrentOra.indent = indent;\n\t\t}\n\n\t\tif (x % 15 === 0) {\n\t\t\tlet {text} = spinner;\n\t\t\tconst loops = rando(1, 10);\n\n\t\t\tfor (let x = 0; x < loops; x++) {\n\t\t\t\tconst pos = Math.floor(Math.random() * text.length);\n\t\t\t\ttext = text.slice(0, pos) + '\\n' + text.slice(pos + 1);\n\t\t\t}\n\n\t\t\tspinner.text = text;\n\t\t\tcurrentOra.text = text;\n\t\t}\n\n\t\tspinner.render();\n\t\tcurrentOra.render();\n\t}\n\n\tspinner.succeed('🙉');\n\tcurrentOra.succeed('🙉');\n\n\tconst currentFrames = currentClearTTY.getFrames();\n\tconst [frames, clearedFrames] = transformTTY.getFrames();\n\n\tt.deepEqual(frames, clearedFrames);\n\n\tt.deepEqual(frames.slice(0, currentFrames.length), currentFrames);\n\n\t// Console.log(frames);\n\t// console.log(clearFrames);\n});\n/*\nExample output:\n\n[\n  '               ▏ \\n',\n  '               ▎ \\n',\n  '               ▍ \\n',\n  '               ▌ \\n',\n  '               ▋ \\n',\n  '               ▊ \\n',\n  '               ▉ \\n',\n  '               ▊ \\n',\n  '               ▋ \\n',\n  '               ▌ \\n',\n  '   d ',\n  '   q ',\n  '   p ',\n  '   b ',\n  '   d ',\n  '                 q \\n',\n  '                 p \\n',\n  '                 b \\n',\n  '                 d \\n',\n  '                 q \\n',\n  '                ◢ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◣ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◤ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◥ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◢ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◣ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◤ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◥ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◢ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◣ 🐗🐧🐥🐺🐵\\n\\n',\n  '      ⠋ \\n�🐮�\\n\\n�\\n',\n  '      ⠙ \\n�🐮�\\n\\n�\\n',\n  '      ⠹ \\n�🐮�\\n\\n�\\n',\n  '      ⠸ \\n�🐮�\\n\\n�\\n',\n  '      ⠼ \\n�🐮�\\n\\n�\\n',\n  '                 ⠴ \\n�🐮�\\n\\n�\\n',\n  '                 ⠦ \\n�🐮�\\n\\n�\\n',\n  '                 ⠧ \\n�🐮�\\n\\n�\\n',\n  '                 ⠇ \\n�🐮�\\n\\n�\\n',\n  '                 ⠏ \\n�🐮�\\n\\n�\\n',\n  '       □ ',\n  '       ■ ',\n  '       □ ',\n  '       ■ ',\n  '       □ ',\n  '           ■ \\n',\n  '           □ \\n',\n  '           ■ \\n',\n  '           □ \\n',\n  '           ■ \\n',\n  '  .   🐗',\n  '  ..  🐗',\n  '  ... 🐗',\n  '      🐗',\n  '  .   🐗',\n  '               ..  🐗',\n  '               ... 🐗',\n  '                   🐗',\n  '               .   🐗',\n  '               ..  🐗',\n  ' ▖ 🐔\\n🐸\\n',\n  ' ▘ 🐔\\n🐸\\n',\n  ' ▝ 🐔\\n🐸\\n',\n  ' ▗ 🐔\\n🐸\\n',\n  ' ▖ 🐔\\n🐸\\n',\n  '  ▘ 🐔\\n🐸\\n',\n  '  ▝ 🐔\\n🐸\\n',\n  '  ▗ 🐔\\n🐸\\n',\n  '  ▖ 🐔\\n🐸\\n',\n  '  ▘ 🐔\\n🐸\\n',\n  '          ( ●    ) 🐔🐗',\n  '          (  ●   ) 🐔🐗',\n  '          (   ●  ) 🐔🐗',\n  '          (    ● ) 🐔🐗',\n  '          (     ●) 🐔🐗',\n  '(    ● ) �\\n\\n�',\n  '(   ●  ) �\\n\\n�',\n  '(  ●   ) �\\n\\n�',\n  '( ●    ) �\\n\\n�',\n  '(●     ) �\\n\\n�',\n  '     ⧇ 🐷🐛🐔🦁🐷🙉',\n  '     ⧆ 🐷🐛🐔🦁🐷🙉',\n  '     ⧇ 🐷🐛🐔🦁🐷🙉',\n  '     ⧆ 🐷🐛🐔🦁🐷🙉',\n  '     ⧇ 🐷🐛🐔🦁🐷🙉',\n  '       ⧆ 🐷🐛🐔🦁🐷🙉',\n  '       ⧇ 🐷🐛🐔🦁🐷🙉',\n  '       ⧆ 🐷🐛🐔🦁🐷🙉',\n  '       ⧇ 🐷🐛🐔🦁🐷🙉',\n  '       ⧆ 🐷🐛🐔🦁🐷🙉',\n  '                        _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        - 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        ` 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                  ` 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  \"                  ' 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n\",\n  '                  ´ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                  - 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                  _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  ... 1 more item\n]\n[\n  '               ▏ \\n',\n  '               ▎ \\n',\n  '               ▍ \\n',\n  '               ▌ \\n',\n  '               ▋ \\n',\n  '               ▊ \\n',\n  '               ▉ \\n',\n  '               ▊ \\n',\n  '               ▋ \\n',\n  '               ▌ \\n',\n  '   d ',\n  '   q ',\n  '   p ',\n  '   b ',\n  '   d ',\n  '                 q \\n',\n  '                 p \\n',\n  '                 b \\n',\n  '                 d \\n',\n  '                 q \\n',\n  '                ◢ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◣ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◤ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◥ 🐗🐧🐥🐺🐵\\n\\n',\n  '                ◢ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◣ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◤ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◥ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◢ 🐗🐧🐥🐺🐵\\n\\n',\n  '                     ◣ 🐗🐧🐥🐺🐵\\n\\n',\n  '      ⠋ \\n�🐮�\\n\\n�\\n',\n  '      ⠙ \\n�🐮�\\n\\n�\\n',\n  '      ⠹ \\n�🐮�\\n\\n�\\n',\n  '      ⠸ \\n�🐮�\\n\\n�\\n',\n  '      ⠼ \\n�🐮�\\n\\n�\\n',\n  '                 ⠴ \\n�🐮�\\n\\n�\\n',\n  '                 ⠦ \\n�🐮�\\n\\n�\\n',\n  '                 ⠧ \\n�🐮�\\n\\n�\\n',\n  '                 ⠇ \\n�🐮�\\n\\n�\\n',\n  '                 ⠏ \\n�🐮�\\n\\n�\\n',\n  '       □ ',\n  '       ■ ',\n  '       □ ',\n  '       ■ ',\n  '       □ ',\n  '           ■ \\n',\n  '           □ \\n',\n  '           ■ \\n',\n  '           □ \\n',\n  '           ■ \\n',\n  '  .   🐗',\n  '  ..  🐗',\n  '  ... 🐗',\n  '      🐗',\n  '  .   🐗',\n  '               ..  🐗',\n  '               ... 🐗',\n  '                   🐗',\n  '               .   🐗',\n  '               ..  🐗',\n  ' ▖ 🐔\\n🐸\\n',\n  ' ▘ 🐔\\n🐸\\n',\n  ' ▝ 🐔\\n🐸\\n',\n  ' ▗ 🐔\\n🐸\\n',\n  ' ▖ 🐔\\n🐸\\n',\n  '  ▘ 🐔\\n🐸\\n',\n  '  ▝ 🐔\\n🐸\\n',\n  '  ▗ 🐔\\n🐸\\n',\n  '  ▖ 🐔\\n🐸\\n',\n  '  ▘ 🐔\\n🐸\\n',\n  '          ( ●    ) 🐔🐗',\n  '          (  ●   ) 🐔🐗',\n  '          (   ●  ) 🐔🐗',\n  '          (    ● ) 🐔🐗',\n  '          (     ●) 🐔🐗',\n  '(    ● ) �\\n\\n�',\n  '(   ●  ) �\\n\\n�',\n  '(  ●   ) �\\n\\n�',\n  '( ●    ) �\\n\\n�',\n  '(●     ) �\\n\\n�',\n  '     ⧇ 🐷🐛🐔🦁🐷🙉',\n  '     ⧆ 🐷🐛🐔🦁🐷🙉',\n  '     ⧇ 🐷🐛🐔🦁🐷🙉',\n  '     ⧆ 🐷🐛🐔🦁🐷🙉',\n  '     ⧇ 🐷🐛🐔🦁🐷🙉',\n  '       ⧆ 🐷🐛🐔🦁🐷🙉',\n  '       ⧇ 🐷🐛🐔🦁🐷🙉',\n  '       ⧆ 🐷🐛🐔🦁🐷🙉',\n  '       ⧇ 🐷🐛🐔🦁🐷🙉',\n  '       ⧆ 🐷🐛🐔🦁🐷🙉',\n  '                        _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        - 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                        ` 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                  ` 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  \"                  ' 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n\",\n  '                  ´ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                  - 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  '                  _ 🐽🦄🐣\\n🐣🐧🐔🦁🐦�\\n',\n  ... 1 more item\n]\n*/\n"
        }
      ]
    }
  ]
}