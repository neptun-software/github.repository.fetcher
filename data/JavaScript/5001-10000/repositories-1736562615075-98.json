{
  "metadata": {
    "timestamp": 1736562615075,
    "page": 98,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mozilla/nunjucks",
      "stars": 8617,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.353515625,
          "content": "{\n  \"presets\": [\n    [\"@babel/env\", {\n      \"loose\": true,\n      \"targets\": {\n        \"browsers\": [\"last 2 versions\", \"safari >= 7\", \"ie 9\"],\n        \"node\": \"6\"\n      }\n    }]\n  ],\n  \"env\": {\n    \"test\": {\n      \"plugins\": [\"./scripts/lib/arrow-function-coverage-fix\", \"istanbul\"]\n    }\n  },\n  \"ignore\": [\n    \"scripts/lib/arrow-function-coverage-fix.js\"\n  ]\n}\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.119140625,
          "content": "node_modules\nspm_modules\ncoverage\ndist\nbrowser\ndocs\ntests/express-sample\ntests/express\ntests/browser\nbench\nsrc/loaders.js\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 1.6376953125,
          "content": "module.exports = {\n  'extends': [\n    'airbnb-base/legacy',\n  ],\n  'parserOptions': {\n    'sourceType': 'module',\n    'ecmaVersion': 2017,\n  },\n  'env': {\n    'node': true,\n    'es6': true,\n  },\n  \"rules\": {\n    // The one assertion of personal preference: no spaces before parentheses\n    // of anonymous functions\n    'space-before-function-paren': ['error', {\n      anonymous: 'never',\n      named: 'never',\n      asyncArrow: 'always',\n    }],\n    // Temporarily disabled rules\n    //\n    // no-use-before-define is a good rule, but it would make the diff for\n    // linting the code even more inscrutible than it already is.\n    'no-use-before-define': 'off',\n    // Relax some rules\n    'no-cond-assign': ['error', 'except-parens'],\n    'no-unused-vars': ['error', {\n      'args': 'none',\n    }],\n    // Disable some overly-strict airbnb style rules\n    'no-underscore-dangle': 'off',\n    'no-param-reassign': 'off',\n    'class-methods-use-this': 'off',\n    'function-paren-newline': 'off',\n    'no-plusplus': 'off',\n    'object-curly-spacing': 'off',\n    'no-multi-assign': 'off',\n    'no-else-return': 'off',\n    // While technically useless from the point of view of the regex parser,\n    // escaping characters inside character classes is more consistent. I\n    // would say that they make the regular expression more readable, if the\n    // idea of readable regular expressions wasn't absurd on its face.\n    'no-useless-escape': 'off',\n    // I'm inclined to reverse this rule to be ['error', 'always'], but not just yet\n    // IE 8 is a thing of the past and trailing commas are useful.\n    'comma-dangle': 'off',\n  },\n  'globals': {\n    'nunjucks': false,\n  },\n};\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1923828125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# Checkout example and test fixtures with linux line ending\n# to guarantee test successes\ntests/** text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2236328125,
          "content": "node_modules\ncoverage\n.#*\ndocs/_site\ndocs/files\n/src/\n/index.js\n/index.js.map\n/tests/browser/nunjucks*\n.nyc_output\n/browser\n/tests/browser/precompiled-templates.js\n/samples/express/js/nunjucks.js\n/samples/express/js/templates.js\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.06640625,
          "content": "node_modules\ncoverage\n.nyc_output\ndocs\ntests\nbench\nnunjucks\nscripts\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 29.267578125,
          "content": "Changelog\n=========\n\n3.2.4 (Apr 13 2023)\n------------------\n\n* HTML encode backslashes when expressions are passed through the escape\n  filter (including when this is done automatically with autoescape). Merge\n  of [#1437](https://github.com/mozilla/nunjucks/pull/1437).\n\n3.2.3 (Feb 15 2021)\n-------------------\n\n* Add support for nested attributes on\n  [`sort` filter](https://mozilla.github.io/nunjucks/templating.html#sort-arr-reverse-casesens-attr);\n  respect `throwOnUndefined` if sort attribute is undefined.\n* Add `base` arg to\n  [`int` filter](https://mozilla.github.io/nunjucks/templating.html#int).\n* Move `chokidar` to `peerDependencies` and mark it `optional` in `peerDependenciesMeta`.\n* Fix prototype pollution issue for template variables. Merge of\n  [#1330](https://github.com/mozilla/nunjucks/pull/1330); fixes\n  [#1331](https://github.com/mozilla/nunjucks/issues/1331). Thanks\n  [ChenKS12138](https://github.com/ChenKS12138)!\n\n3.2.2 (Jul 20 2020)\n-------------------\n\n* Add [`select`](https://mozilla.github.io/nunjucks/templating.html#select) and\n  [`reject`](https://mozilla.github.io/nunjucks/templating.html#reject) filters.\n  Merge of [#1278](https://github.com/mozilla/nunjucks/pull/1278) and\n  [#1279](https://github.com/mozilla/nunjucks/pull/1279); fixes\n  [#282](https://github.com/mozilla/nunjucks/issues/282). Thanks\n  [ogonkov](https://github.com/ogonkovv)!\n* Fix precompile binary script `TypeError: name.replace is not a function`.\n  Fixes [#1295](https://github.com/mozilla/nunjucks/issues/1295).\n* Add support for nested attributes on\n  [`groupby` filter](https://mozilla.github.io/nunjucks/templating.html#groupby);\n  respect `throwOnUndefined` option, if the groupby attribute is undefined.\n  Merge of [#1276](https://github.com/mozilla/nunjucks/pull/1276); fixes\n  [#1198](https://github.com/mozilla/nunjucks/issues/1198). Thanks\n  [ogonkov](https://github.com/ogonkovv)!\n* Fix bug that prevented errors in included templates from being raised when\n  rendering templates synchronously. Fixes\n  [#1272](https://github.com/mozilla/nunjucks/issues/1272).\n* The `indent` filter no longer appends an additional newline. Fixes\n  [#1231](https://github.com/mozilla/nunjucks/issues/1231).\n\n3.2.1 (Mar 17 2020)\n-------------------\n* Replace yargs with commander to reduce number of dependencies. Merge of\n  [#1253](https://github.com/mozilla/nunjucks/pull/1253). Thanks\n  [AlynxZhou](@AlynxZhou).\n* Update optional dependency chokidar from `^2.0.0` to `^3.3.0`. Merge of\n  [#1254](https://github.com/mozilla/nunjucks/pull/1254). Thanks\n  [eklingen](@eklingen).\n* Prevent optional dependency Chokidar from loading when not watching. Merge\n  of [#1250](https://github.com/mozilla/nunjucks/pull/1250). Thanks\n  [eklingen](@eklingen).\n\n3.2.0 (Mar 5 2019)\n------------------\n\n* Adds [`NodeResolveLoader`](http://mozilla.github.io/nunjucks/api.html#noderesolveloader),\n  a Loader that loads templates using node's\n  [`require.resolve`](https://nodejs.org/api/modules.html#modules_all_together).\n  Fixes [#1175](https://github.com/mozilla/nunjucks/issues/1175).\n* Emit 'load' events on `Environment` instances, to allow runtime dependency\n  tracking. Fixes [#1153](https://github.com/mozilla/nunjucks/issues/1153).\n\n3.1.7 (Jan 12 2019)\n------------------\n\n* Fix bug where exceptions were silently swallowed with synchronous render.\n  Fixes [#678](https://github.com/mozilla/nunjucks/issues/678),\n  [#1116](https://github.com/mozilla/nunjucks/issues/1116),\n  [#1127](https://github.com/mozilla/nunjucks/issues/1127), and\n  [#1164](https://github.com/mozilla/nunjucks/issues/1164)\n* Removes deprecated postinstall-build package in favor of\n  [npm prepare](https://docs.npmjs.com/misc/scripts#prepublish-and-prepare).\n  Merge of [#1172](https://github.com/mozilla/nunjucks/pull/1172).\n  Fixes [#1167](https://github.com/mozilla/nunjucks/issues/1167).\n\n    - Note: this means that npm@5 or later is required to install nunjucks\n      directly from github.\n\n3.1.6 (Dec 13 2018)\n-------------------\n\nNo code changes; fixed npm packaging issue.\n\n3.1.5 (Dec 13 2018)\n-------------------\n\n* Fix engine dependency version for Node versions > 11.1.0;\n  Fixes [#1168](https://github.com/mozilla/nunjucks/issues/1168).\n\n3.1.4 (Nov 9 2018)\n------------------\n\n* Fix engine version for Node v11.1.0\n* Fix \"Unexpected token\" error for U+2028 unicode newline. Fixes [#126](https://github.com/mozilla/nunjucks/issues/126) and [#736](https://github.com/mozilla/nunjucks/issues/736)\n\n3.1.3 (May 19 2018)\n-------------------\n\n* Add `forceescape` filter. Fixes [#782](https://github.com/mozilla/nunjucks/issues/782)\n\n* Fix regression that prevented template errors from reporting line and column number.\n  Fixes [#1087](https://github.com/mozilla/nunjucks/issues/1087) and\n  [#1095](https://github.com/mozilla/nunjucks/issues/1095).\n\n* Fix \"Invalid type: Is\" error for `{% if value is defined %}`. Fixes\n  [#1110](https://github.com/mozilla/nunjucks/issues/1110)\n\n* Formally drop support for node v4 (the upgrade to babel 7 in 3.1.0 made the\n  build process incompatible with node < 6.9.0).\n\n3.1.2 (Feb 23 2018)\n-------------------\n\n* Fix regression to make `chokidar` an optional dependency again. Fixes\n  [#1073](https://github.com/mozilla/nunjucks/issues/1073)\n* Fix issue when running `npm install nunjucks` with the `--no-bin-links` flag\n* Fix regression that broke template caching. Fixes\n  [#1074](https://github.com/mozilla/nunjucks/issues/1074)\n\n3.1.0 (Feb 19 2018)\n-------------------\n\n* Support nunjucks.installJinjaCompat() with slim build. Fixes\n  [#1019](https://github.com/mozilla/nunjucks/issues/1019)\n\n* Fix calling render callback twice when a conditional import throws an error.\n  Solves [#1029](https://github.com/mozilla/nunjucks/issues/1029)\n\n* Support objects created with Object.create(null). fixes [#468](https://github.com/mozilla/nunjucks/issues/468)\n\n* Support ESNext iterators, using Array.from. Merge of\n  [#1058](https://github.com/mozilla/nunjucks/pull/1058)\n\n3.0.1 (May 24 2017)\n-------------------\n\n* Fix handling methods and attributes of static arrays, objects and primitives.\n  Solves the issue [#937](https://github.com/mozilla/nunjucks/issues/937)\n\n* Add support for python-style array slices with Jinja compat enabled.\n  Fixes [#188](https://github.com/mozilla/nunjucks/issues/188); merge of\n  [#976](https://github.com/mozilla/nunjucks/pull/976).\n\n* Fix call blocks having access to their parent scope. Fixes\n  [#906](https://github.com/mozilla/nunjucks/issues/906); merge of\n  [#994](https://github.com/mozilla/nunjucks/pull/994).\n\n* Fix a bug that caused capturing block tags (e.g. set/endset,\n  filter/endfilter) to write to the global buffer rather than capturing\n  their contents. Fixes\n  [#914](https://github.com/mozilla/nunjucks/issues/914) and\n  [#972](https://github.com/mozilla/nunjucks/issues/972); merge of\n  [#990](https://github.com/mozilla/nunjucks/pull/990). Thanks [Noah\n  Lange](@noahlange).\n\n\n3.0.0 (Nov 5 2016)\n----------------\n\n* Allow including many templates without reaching recursion limits. Merge of\n  [#787](https://github.com/mozilla/nunjucks/pull/787). Thanks Gleb Khudyakov.\n\n* Allow explicitly setting `null` (aka `none`) as the value of a variable;\n  don't ignore that value and look on up the frame stack or context. Fixes\n  [#478](https://github.com/mozilla/nunjucks/issues/478). Thanks Jonny Gerig\n  Meyer for the report.\n\n* Execute blocks in a child frame that can't write to its parent. This means\n  that vars set inside blocks will not leak outside of the block, base\n  templates can no longer see vars set in templates that inherit them, and\n  `super()` can no longer set vars in its calling scope. Fixes the inheritance\n  portion of [#561](https://github.com/mozilla/nunjucks/issues/561), which\n  fully closes that issue. Thanks legutierr for the report.\n\n* Prevent macros from seeing or affecting their calling scope. Merge of\n  [#667](https://github.com/mozilla/nunjucks/pull/667).\n\n* Fix handling of macro arg with default value which shares a name with another\n  macro. Merge of [#791](https://github.com/mozilla/nunjucks/pull/791).\n\n* Add support for the spaces parameter in the dump template filter.\n  Merge of [#868](https://github.com/mozilla/nunjucks/pull/868).\n  Thanks Jesse Eikema\n\n* Add `verbatim` as an alias of `raw` for compatibility with Twig.\n  Merge of [#874](https://github.com/mozilla/nunjucks/pull/874).\n\n* Add new `nl2br` filter. Thanks Marc-Aurèle Darche\n\n* Add support for python's `list.append` with Jinja compat enabled. Thanks\n  Conor Flannigan.\n\n* Add variables whitespace control.\n\n\n2.5.2 (Sep 14 2016)\n----------------\n\n* Call `.toString` in safe filter.\n  Merge of [#849](https://github.com/mozilla/nunjucks/pull/849).\n\n\n2.5.1 (Sep 13 2016)\n----------------\n\n* Fix `undefined` and `null` behavior in escape and safe filter.\n  Merge of [#843](https://github.com/mozilla/nunjucks/pull/843).\n\n\n2.5.0 (Sep 7 2016)\n----------------\n\n* Add `elseif` as an alias of `elif` for parity with Twig. Thanks kswedberg.\n  Merge of [#826](https://github.com/mozilla/nunjucks/pull/826).\n\n* Add nunjucks env to express app settings as `nunjucksEnv`.\n  Merge of [#829](https://github.com/mozilla/nunjucks/pull/829).\n\n* Add support for finding an object's \"length\" in length filter.\n  Merge of [#813](https://github.com/mozilla/nunjucks/pull/813).\n\n* Ensure that precompiling on Windows still outputs POSIX-style path\n  separators. Merge of [#761](https://github.com/mozilla/nunjucks/pull/761).\n\n* Add support for strict type check comparisons (=== and !==). Thanks\n  oughter. Merge of [#746](https://github.com/mozilla/nunjucks/pull/746).\n\n* Allow full expressions (incl. filters) in import and from tags. Thanks legutierr.\n  Merge of [#710](https://github.com/mozilla/nunjucks/pull/710).\n\n* OS agnostic file paths in precompile. Merge of [#825](https://github.com/mozilla/nunjucks/pull/825).\n\n\n2.4.3 (Sep 7 2016)\n----------------\n\n* Fix potential cast-related XSS vulnerability in autoescape mode, and with `escape` filter.\n  Thanks Matt Austin for the report and Thomas Hunkapiller for the fix.\n  [#836](https://github.com/mozilla/nunjucks/pull/836)\n\n\n2.4.2 (Apr 15 2016)\n-------------------\n\n* Fix use of `in` operator with strings. Fixes\n  [#714](https://github.com/mozilla/nunjucks/issues/714). Thanks Zubrik for the\n  report.\n\n* Support ES2015 Map and Set in `length` filter. Merge of\n  [#705](https://github.com/mozilla/nunjucks/pull/705). Thanks ricordisamoa.\n\n* Remove truncation of long function names in error messages. Thanks Daniel\n  Bendavid. Merge of [#702](https://github.com/mozilla/nunjucks/pull/702).\n\n\n2.4.1 (Mar 17 2016)\n-------------------\n\n* Don't double-escape. Thanks legutierr. Merge of\n  [#701](https://github.com/mozilla/nunjucks/pull/701).\n\n* Prevent filter.escape from escaping SafeString. Thanks atian25. Merge of\n  [#623](https://github.com/mozilla/nunjucks/pull/623).\n\n* Throw an error if a block is defined multiple times. Refs\n  [#696](https://github.com/mozilla/nunjucks/issues/696).\n\n* Officially recommend the `.njk` extension. Thanks David Kebler. Merge of\n  [#691](https://github.com/mozilla/nunjucks/pull/691).\n\n* Allow block-set to wrap an inheritance block. Unreported; fixed as a side\n  effect of the fix for [#576](https://github.com/mozilla/nunjucks/issues/576).\n\n* Fix `filter` tag with non-trivial contents. Thanks Stefan Cruz and Fabien\n  Franzen for report and investigation, Jan Oopkaup for failing tests. Fixes\n  [#576](https://github.com/mozilla/nunjucks/issues/576).\n\n\n2.4.0 (Mar 10 2016)\n-------------------\n\n* Allow retrieving boolean-false as a global. Thanks Marius Büscher. Merge of\n  [#694](https://github.com/mozilla/nunjucks/pull/694).\n\n* Don't automatically convert any for-loop that has an include statement into\n  an async loop. Reverts\n  [7d4716f4fd](https://github.com/mozilla/nunjucks/commit/7d4716f4fd), re-opens\n  [#372](https://github.com/mozilla/nunjucks/issues/372), fixes\n  [#527](https://github.com/mozilla/nunjucks/issues/527). Thanks Tom Delmas for\n  the report.\n\n* Switch from Optimist to Yargs for argument-parsing. Thanks Bogdan\n  Chadkin. Merge of [#672](https://github.com/mozilla/nunjucks/pull/672).\n\n* Prevent includes from writing to their including scope. Merge of\n  [#667](https://github.com/mozilla/nunjucks/pull/667) (only partially\n  backported to 2.x; macro var visibility not backported).\n\n* Fix handling of `dev` environment option, to get full tracebacks on errors\n  (including nunjucks internals). Thanks Tobias Petry and Chandrasekhar Ambula\n  V for the report, Aleksandr Motsjonov for draft patch.\n\n* Support using `in` operator to search in both arrays and objects,\n  and it will throw an error for other data types.\n  Fix [#659](https://github.com/mozilla/nunjucks/pull/659).\n  Thanks Alex Mayfield for report and test, Ouyang Yadong for fix.\n  Merge of [#661](https://github.com/mozilla/nunjucks/pull/661).\n\n* Add support for `{% set %}` block assignments as in jinja2. Thanks Daniele\n  Rapagnani. Merge of [#656](https://github.com/mozilla/nunjucks/pull/656)\n\n* Fix `{% set %}` scoping within macros.\n  Fixes [#577](https://github.com/mozilla/nunjucks/issues/577) and\n  the macro portion of [#561](https://github.com/mozilla/nunjucks/issues/561).\n  Thanks Ouyang Yadong. Merge of [#653](https://github.com/mozilla/nunjucks/pull/653).\n\n* Add support for named `endblock` (e.g. `{% endblock foo %}`). Thanks\n  ricordisamoa. Merge of [#641](https://github.com/mozilla/nunjucks/pull/641).\n\n* Fix `range` global with zero as stop-value. Thanks Thomas Hunkapiller. Merge\n  of [#638](https://github.com/mozilla/nunjucks/pull/638).\n\n* Fix a bug in urlize that collapsed whitespace. Thanks Paulo Bu. Merge of\n  [#637](https://github.com/mozilla/nunjucks/pull/637).\n\n* Add `sum` filter. Thanks Pablo Matías Lazo. Merge of\n  [#629](https://github.com/mozilla/nunjucks/pull/629).\n\n* Don't suppress errors inside {% if %} tags. Thanks Artemy Tregubenko for\n  report and test, Ouyang Yadong for fix. Merge of\n  [#634](https://github.com/mozilla/nunjucks/pull/634).\n\n* Allow whitespace control on comment blocks, too. Thanks Ouyang Yadong. Merge\n  of [#632](https://github.com/mozilla/nunjucks/pull/632).\n\n* Fix whitespace control around nested tags/variables/comments. Thanks Ouyang\n  Yadong. Merge of [#631](https://github.com/mozilla/nunjucks/pull/631).\n\n\nv2.3.0 (Jan 6 2016)\n-------------------\n\n* Return `null` from `WebLoader` on missing template instead of throwing an\n  error, for consistency with other loaders. This allows `WebLoader` to support\n  the new `ignore missing` flag on the `include` tag. If `ignore missing` is\n  not set, a generic \"template not found\" error will still be thrown, just like\n  for any other loader. Ajax errors other than 404 will still cause `WebLoader`\n  to throw an error directly.\n\n* Add preserve-linebreaks option to `striptags` filter. Thanks Ivan\n  Kleshnin. Merge of [#619](https://github.com/mozilla/nunjucks/pull/619).\n\n\nv2.2.0 (Nov 23 2015)\n--------------------\n\n* Add `striptags` filter. Thanks Anthony Giniers. Merge of\n  [#589](https://github.com/mozilla/nunjucks/pull/589).\n* Allow compiled templates to be imported, included and extended. Thanks Luis\n  Gutierrez-Sheris. Merge of\n  [#581](https://github.com/mozilla/nunjucks/pull/581).\n* Fix issue with different nunjucks environments sharing same globals. Each\n  environment is now independent.  Thanks Paul Pechin. Merge of\n  [#574](https://github.com/mozilla/nunjucks/pull/574).\n* Add negative steps support for range function. Thanks Nikita Mostovoy. Merge\n  of [#575](https://github.com/mozilla/nunjucks/pull/575).\n* Remove deprecation warning when using the `default` filter without specifying\n  a third argument. Merge of\n  [#567](https://github.com/mozilla/nunjucks/pull/567).\n* Add support for chaining of addGlobal, addFilter, etc. Thanks Rob Graeber. Merge of\n  [#537](https://github.com/mozilla/nunjucks/pull/537)\n* Fix error propagation. Thanks Tom Delmas. Merge of\n  [#534](https://github.com/mozilla/nunjucks/pull/534).\n* trimBlocks now also trims windows style line endings. Thanks Magnus Tovslid. Merge of\n  [#548](https://github.com/mozilla/nunjucks/pull/548)\n* `include` now supports an option to suppress errors if the template does not\n  exist. Thanks Mathias Nestler. Merge of\n  [#559](https://github.com/mozilla/nunjucks/pull/559)\n\n\nv2.1.0 (Sep 21 2015)\n--------------------\n\n* Fix creating `WebLoader` without `opts`. Merge of\n  [#524](https://github.com/mozilla/nunjucks/pull/524).\n* Add `hasExtension` and `removeExtension` methods to `Environment`. Merge of\n  [#512](https://github.com/mozilla/nunjucks/pull/512).\n* Add support for kwargs in `sort` filter. Merge of\n  [#510](https://github.com/mozilla/nunjucks/pull/510).\n* Add `none` as a lexed constant evaluating to `null`. Merge of\n  [#480](https://github.com/mozilla/nunjucks/pull/480).\n* Fix rendering of multiple `raw` blocks. Thanks Aaron O'Mullan. Merge of\n  [#503](https://github.com/mozilla/nunjucks/pull/503).\n* Avoid crashing on async loader error. Thanks Samy Pessé. Merge of\n  [#504](https://github.com/mozilla/nunjucks/pull/504).\n* Add support for keyword arguments for sort filter. Thanks Andres Pardini. Merge of\n  [#510](https://github.com/mozilla/nunjucks/pull/510)\n\n\nv2.0.0 (Aug 30 2015)\n--------------------\n\nMost of the changes can be summed up in the\n[issues tagged 2.0](https://github.com/mozilla/nunjucks/issues?q=is%3Aissue+milestone%3A2.0+is%3Aclosed).\n\nOr you can\n[see all commits](https://github.com/mozilla/nunjucks/compare/v1.3.4...f8aabccefc31a9ffaccdc6797938b5187e07ea87).\n\nMost important changes:\n\n* **autoescape is now on by default.** You need to explicitly pass `{\n  autoescape: false }` in the options to turn it off.\n* **watch is off by default.** You need to explicitly pass `{ watch: true }` to\n  start the watcher.\n* The `default` filter has changed. It will show the default value only if the\n  argument is **undefined**. Any other value, even false-y values like `false`\n  and `null`, will be returned. You can get back the old behavior by passing\n  `true` as a 3rd argument to activate the loose-y behavior: `foo |\n  default(\"bar\", true)`. In 2.0 if you don't pass the 3rd argument, a warning\n  will be displayed about this change in behavior. In 2.1 this warning will be\n  removed.\n* [New filter tag](http://mozilla.github.io/nunjucks/templating.html#filter)\n* Lots of other bug fixes and small features, view the above issue list!\n\n\nv1.3.4 (Apr 27 2015)\n--------------------\n\nThis is an extremely minor release that only adds an .npmignore so that the\nbench, tests, and docs folders do not get published to npm. Nunjucks should\ndownload a lot faster now.\n\n\nv1.3.3 (Apr 3 2015)\n-------------------\n\nThis is exactly the same as v1.3.1, just fixing a typo in the git version tag.\n\n\nv1.3.2 (Apr 3 2015)\n-------------------\n\n(no notes)\n\n\nv1.3.1 (Apr 3 2015)\n-------------------\n\nWe added strict mode to all the files, but that broke running nunjucks in the\nbrowser. Should work now with this small fix.\n\n\nv1.3.0 (Apr 3 2015)\n-------------------\n\n* Relative templates: you can now load a template relatively by starting the\n  path with ., like ./foo.html\n* FileSystemLoader now takes a noCache option, if true will disable caching\n  entirely\n* Additional lstripBlocks and trimBlocks available to clean output\n  automatically\n* New selectattr and rejectattr filters\n* Small fixes to the watcher\n* Several bug fixes\n\n\nv1.2.0 (Feb 4 2015)\n-------------------\n\n* The special non-line-breaking space is considered whitespace now\n* The in operator has a lower precedence now. This is potentially a breaking\n  change, thus the minor version bump. See\n  [#336](https://github.com/mozilla/nunjucks/pull/336)\n* import with context now implemented:\n  [#319](https://github.com/mozilla/nunjucks/pull/319)\n* async rendering doesn't throw compile errors\n\n\nv1.1.0 (Sep 30 2014)\n--------------------\n\nUser visible changes:\n\n* Fix a bug in urlize that would remove periods\n* custom tag syntax (like {% and %}) was made Environment-specific\n  internally. Previously they were global even though you set them through the\n  Environment.\n* Remove aggressive optimization that only emitted loop variables when uses. It\n  introduced several bugs and didn't really improve perf.\n* Support the regular expression syntax like /foo/g.\n* The replace filter can take a regex as the first argument\n* The call tag was implemented\n* for tags can now take an else clause\n* The cycler object now exposes the current item as the current property\n* The chokidar library was updated and should fix various issues\n\nDev changes:\n\n* Test coverage now available via istanbul. Will automatically display after\n  running tests.\n\n\nv1.0.7 (Aug 15 2014)\n--------------------\n\nMixed up a few things in the 1.0.6 release, so another small bump. This merges\nin one thing:\n\n* The length filter will not throw an error is used on an undefined\n  variable. It will return 0 if the variable is undefined.\n\n\nv1.0.6 (Aug 15 2014)\n--------------------\n\n* Added the addGlobal method to the Environment object\n* import/extends/include now can take an arbitrary expression\n* fix bugs in set\n* improve express integration (allows rendering templates without an extension)\n\n\nv1.0.5 (May 1 2014)\n-------------------\n\n* Added support for browserify\n* Added option to specify template output path when precompiling templates\n* Keep version comment in browser minified files\n* Speed up SafeString implementation\n* Handle null and non-matching cases for word count filter\n* Added support for node-webkit\n* Other various minor bugfixes\n\n\nchokidar repo fix - v1.0.4 (Apr 4 2014)\n---------------------------------------\n\n* The chokidar dependency moved repos, and though the git URL should have been\n  forwarded some people were having issues. This fixed the repo and\n  version.\n\n(v1.0.3 is skipped because it was published with a bad URL, quickly fixed with\nanother version bump)\n\n\nBug fixes - v1.0.2 (Mar 25 2014)\n--------------------------------\n\n* Use chokidar for watching file changes. This should fix a lot of problems on\n  OS X machines.\n* Always use / in paths when precompiling templates\n* Fix bug where async filters hang indefinitely inside if statements\n* Extensions now can override autoescaping with an autoescape property\n* Other various minor bugfixes\n\n\nv1.0.1 (Dec 16, 2013)\n---------------------\n\n(no notes)\n\n\nWe've reached 1.0! Better APIs, asynchronous control, and more (Oct 24, 2013)\n-----------------------------------------------------------------------------\n\n* An asynchronous API is now available, and async filters, extensions, and\n  loaders is supported. The async API is optional and if you don't do anything\n  async (the default), nothing changes for you. You can read more about this\n  [here](http://jlongster.github.io/nunjucks/api.html#asynchronous-support). (fixes\n  [#41](https://github.com/mozilla/nunjucks/issues/41))\n* Much simpler higher-level API for initiating/configuring nunjucks is\n  available. Read more\n  [here](http://jlongster.github.io/nunjucks/api.html#simple-api).\n* An official grunt plugin is available for precompiling templates:\n  [grunt-nunjucks](https://github.com/jlongster/grunt-nunjucks)\n* **The browser files have been renamed.** nunjucks.js is now the full library\n  with compiler, and nunjucks-slim.js is the small version that only works with\n  precompiled templates\n* urlencode filter has been added\n* The express integration has been refactored and isn't a kludge\n  anymore. Should avoid some bugs and be more future-proof;\n* The order in which variables are lookup up in the context and frame lookup\n  has been reversed. It will now look in the frame first, and then the\n  context. This means that if a for loop introduces a new var, like {% for name\n  in names %}, and if you have name in the context as well, it will properly\n  reference name from the for loop inside the loop. (fixes\n  [#122](https://github.com/mozilla/nunjucks/pull/122) and\n  [#119](https://github.com/mozilla/nunjucks/issues/119))\n\n\nv0.1.10 (Aug 9 2013)\n--------------------\n\n(no notes)\n\n\nv0.1.9 (May 30 2013)\n--------------------\n\n(no notes)\n\n\nv0.1.8 - whitespace controls, unpacking, better errors, and more! (Feb 6 2013)\n------------------------------------------------------------------------------\n\nThere are lots of cool new features in this release, as well as many critical\nbug fixes.\n\nFull list of changes:\n\n* Whitespace control is implemented. Use {%- and -%} to strip whitespace before/after the block.\n* `for` loops implement Python-style array unpacking. This is a really nice\n  feature which lets you do this:\n\n    {% for x, y, z in [[2, 2, 2], [3, 3, 3]] %}\n      --{{ x }} {{ y }} {{ z }}--\n    {% endfor %}\n\n  The above would output: --2 2 2----3 3 3--\n\n  You can pass any number of variable names to for and it will destructure each\n  array in the list to the variables.\n\n  This makes the syntax between arrays and objects more\n  consistent. Additionally, it allows us to implement the `dictsort` filter\n  which sorts an object by keys or values. Technically, it returns an array of\n  2-value arrays and the unpacking takes care of it. Example:\n\n    {% for k, v in { b: 2, a: 1 } %}\n      --{{ k }}: {{ v }}--\n    {% endfor %}\n\n  Output: `--b: 2----a: 1--` (note: the order could actually be anything\n  because it uses javascript’s `for k in obj` syntax to iterate, and ordering\n  depends on the js implementation)\n\n    {% for k, v in { b: 2, a: 1} | dictsort %}\n      --{{ k }}: {{ v }}--\n    {% endfor %}\n\n  Output: `--a: 1----b: 2--`\n\n  The above output will always be ordered that way. See the documentation for\n  more details.\n\n  Thanks to novocaine for this!\n\n* Much better error handling with at runtime (shows template/line/col information for attempting to call undefined values, etc)\n* Fixed a regression which broke the {% raw %} block\n* Fix some edge cases with variable lookups\n* Fix a regression with loading precompiled templates\n* Tweaks to allow usage with YUICompressor\n* Use the same error handling as normal when precompiling (shows proper errors)\n* Fix template loading on Windows machines\n* Fix int/float filters\n* Fix regression with super()\n\n\nv0.1.7 - helpful errors, many bug fixes (Dec 12 2012)\n-----------------------------------------------------\n\nThe biggest change in v0.1.7 comes from devoidfury (thanks!) which implements\nconsistent and helpful error messages. The errors are still simply raw text,\nand not pretty HTML, but they at least contain all the necessary information to\ntrack down an error, such as template names, line and column numbers, and the\ninheritance stack. So if an error happens in a child template, it will print\nout all the templates that it inherits. In the future, we will most likely\ndisplay the actual line causing an error.\n\nFull list of changes:\n\n* Consistent and helpful error messages\n* Expressions are more consistent now. Previously, there were several places\n  that wouldn’t accept an arbitrary expression that should. For example, you\n  can now do {% include templateNames['foo'] %}, whereas previously you could\n  only give it a simply variable name.\n* app.locals is fixed with express 2.5\n* Method calls on objects now have correct scope for this. Version 0.1.6 broke\n  this and this was referencing the global scope.\n* A check was added to enforce loading of templates within the correct\n  path. Previously you could load a file outside of the template with something\n  like ../../crazyPrivateFile.txt\n\nYou can\n[view all the code changes here](https://github.com/jlongster/nunjucks/compare/v0.1.6...v0.1.7). Please\n[file an issue](https://github.com/jlongster/nunjucks/issues?page=1&state=open)\nif something breaks!\n\n\nv0.1.6 - undefined handling, bugfixes (Nov 13, 2012)\n----------------------------------------------------\n\nThis is mostly a bugfix release, but there are a few small tweaks based on\nfeedback:\n\n* In some cases, backslashes in the template would not appear in the\n  output. This has been fixed.\n* An error is thrown if a filter is not found\n* Old versions of express are now supported (2.5.11 was tested)\n* References on undefined objects are now suppressed. For example, {{ foo }},\n  {{ foo.bar }}, {{ foo.bar.baz }} all output nothing if foo is\n  undefined. Previously only the first form would be suppressed, and a cryptic\n  error thrown for the latter 2 references. Note: I believe this is a departure\n  from jinja, which throws errors when referencing undefined objects. I feel\n  that this is a good and non-breaking addition though. (thanks to devoidfury)\n* A bug in set where you couldn’t not reference other variables is fixed\n  (thanks chriso and panta)\n* Other various small bugfixes\n\nYou can view\n[all the code changes here](https://github.com/jlongster/nunjucks/compare/v0.1.5...v0.1.6). As\nalways, [file an issue](https://github.com/jlongster/nunjucks/issues) if\nsomething breaks!\n\n\n\nv0.1.5 - macros, keyword arguments, bugfixes (Oct 11 2012)\n----------------------------------------------------------\n\nv0.1.5 has been pushed to npm, and it’s a big one. Please file any issues you\nfind, and I’ll fix them as soon as possible!\n\n* The node data structure has been completely refactored to reduce redundancy\n  and make it easier to add more types in the future.\n* Thanks to Brent Hagany, macros now have been implemented. They should act\n  exactly the way jinja2 macros do.\n* A calling convention which implements keyword arguments now exists. All\n    keyword args are converted into a hash and passed as the last\n    argument. Macros needed this to implement keyword/default arguments.\n* Function and filter calls apply the new keyword argument calling convention\n* The “set” block now appropriately only sets a variable for the current scope.\n* Many other bugfixes.\n\nI’m watching this release carefully because of the large amount of code that\nhas changed, so please\n[file an issue](https://github.com/jlongster/nunjucks/issues) if you have a\nproblem with it.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.6748046875,
          "content": "# Community Participation Guidelines\n\nThis repository is governed by Mozilla's code of conduct and etiquette guidelines. \nFor more details, please read the\n[Mozilla Community Participation Guidelines](https://www.mozilla.org/about/governance/policies/participation/). \n\n## How to Report\nFor more information on how to report violations of the Community Participation Guidelines, please read our '[How to Report](https://www.mozilla.org/about/governance/policies/participation/reporting/)' page.\n\n<!--\n## Project Specific Etiquette\n\nIn some cases, there will be additional project etiquette i.e.: (https://bugzilla.mozilla.org/page.cgi?id=etiquette.html).\nPlease update for your project.\n-->\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.1044921875,
          "content": "# Contributing\n\nThanks for your interest in contributing! The advice below will help you get your issue fixed / pull request merged.\n\n\n## Purpose\n\nNunjucks has the following purpose:\n\n* Aim for templating feature parity with Jinja2.\n* Aim for templating feature parity with Twig, but only when not conflicting with Jinja2 parity.\n* Works in all node releases that are\n  [actively maintained by the Node Foundation](https://github.com/nodejs/Release#release-schedule)\n* Works in all modern browsers (with [ES5 support](http://kangax.github.io/compat-table/es5/)).\n* Works in IE8 with [es5-shim](https://github.com/es-shims/es5-shim).\n* Keep footprint browser files as small as possible (save on bandwidth, download time).\n* Keep performance as fast as possible (see benchmarks).\n* Keep maintenance as easy as possible (avoid complexity, automate what we can).\n\nNotes:\n\n* We don't aim for parity of all language specific syntax.\n* We don't aim for parity of language specific filters like [Twig's PHP date format](http://twig.sensiolabs.org/doc/functions/date.html).\n\nIssues and pull requests contributing to this purpose have the best chance to make it into Nunjucks.\n\n\n## Questions?\n\nPlease DO NOT ask \"how do I?\" or usage questions via GitHub issues. Instead,\nuse the [mailing list](https://groups.google.com/forum/#!forum/nunjucks).\n\n\n## Submitting Issues\n\nIssues are easier to reproduce/resolve when they have:\n\n- A pull request with a failing test demonstrating the issue\n- A code example that produces the issue consistently\n- A traceback (when applicable)\n\n\n## Pull Requests\n\nWhen creating a pull request:\n\n- Write tests (see below).\n- Note user-facing changes in the [`CHANGELOG.md`](CHANGELOG.md) file.\n- Update the documentation (in [`docs/`](docs/)) as needed.\n\n\n## Testing\n\nPlease add tests for any changes you submit. The tests should fail before your\ncode changes, and pass with your changes. Existing tests should not break. Test\ncoverage (output at the end of every test run) should never decrease after your\nchanges.\n\nTo install all the requirements for running the tests:\n\n```bash\nnpm install\n```\n\nTo run the tests:\n\n```bash\nnpm test\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2802734375,
          "content": "Copyright (c) 2012-2015, James Long\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n    Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "MAINTENANCE.md",
          "type": "blob",
          "size": 2.3203125,
          "content": "\n# Pushing a New Version\n\nNunjucks attempts to adhere to semantic versioning. The API is very stable, so\nfrom here on out it will most likely be point releases.\n\n1. Do a `pull` from github to make sure you have all the latest updates.\n\n2. View all the changes since the last version:\n\n   ```\n   $ git log --oneline v1.2.3..master\n   ```\n\nReplace `v1.2.3` with whatever the last version was, and you'll see all the\nchanges going out in this version. Ensure that all significant user-facing\nchanges (new features and bugfixes) are mentioned in `CHANGELOG.md`. Change the\n\"master (unreleased)\" heading in `CHANGELOG.md` to the new version number and\ndate.\n\n3. Update the version in `package.json`.\n\n3. Run the command to update the ready-made files for the browser.\n\n   ```\n   $ npm run browserfiles\n   ```\n\n5. Commit above changes and push to `master` (or a release branch, if using one).\n\n6. Draft a new release on GitHub and copy the changelog to the description. The\n   tag and title should both be the version, in the form `v2.3.0`. Publish the\n   release.\n\n7. Publish to npm:\n\n   ```\n   npm publish\n   ```\n\n8. Make sure docs are up-to-date. You need to copy all the `nunjucks*.js` files\n   in `browser/` to the docs. This is where the \"download\" link points to in\n   the docs. You also need to copy the tests into the docs, for the online\n   browser tests. ``make prod`` in the ``docs/`` dir will handle these tasks\n   for you. Push (force push if necessary) the build out _site folder onto the\n   `gh-pages` branch of the `nunjucks` repo to get it live. One way to do that\n   is the following commands. These commands presume that you have another\n   nunjucks git clone inside the (git-ignored) `docs/_site` directory, checked\n   out to the `gh-pages` branch (and tracking `origin/gh-pages`). (To set that\n   up the first time, `cd docs/_site`, `rm -rf *`, `git clone\n   git@github.com:mozilla/nunjucks.git .`, and `git checkout gh-pages`).\n\n   ```\n   cd docs && make prod\n   cd files\n   python -m SimpleHTTPServer\n   # load http://localhost:8000/tests/browser/ and verify tests pass in browser\n   cd ../_site && git add -A && git commit && git push\n   ```\n\n9. Add a new \"master (unreleased)\" section at the top of `CHANGELOG.md`.\n\n10. Bump the version number in `package.json` to a development pre-release of\n    the next anticipated release number (e.g. \"2.2.0-dev.1\").\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0771484375,
          "content": "# Nunjucks\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Linux Build][github-actions-image]][github-actions-url]\n[![Windows Build][appveyor-image]][appveyor-url]\n[![Test Codecov][codecov-image]][codecov-url]\n\n[Nunjucks](https://mozilla.github.io/nunjucks/) is a full featured\ntemplating engine for javascript. It is heavily inspired by\n[jinja2](http://jinja.pocoo.org/). View the docs\n[here](https://mozilla.github.io/nunjucks/).\n\n## Installation\n\n`npm install nunjucks`\n\nTo use the file watcher built-in to Nunjucks, Chokidar must be installed separately.\n\n`npm install nunjucks chokidar`\n\n(View the [CHANGELOG](https://github.com/mozilla/nunjucks/releases))\n\n## Documentation\n\nSee [here](https://mozilla.github.io/nunjucks/).\n\n## Browser Support\n\nSupported in all modern browsers. For IE8 support, use [es5-shim](https://github.com/es-shims/es5-shim).\n\n## Tests\n\nRun the tests with `npm test`.\n\nWatch `master` branch's [tests running in the browser](https://mozilla.github.io/nunjucks/files/tests/browser/).\n\n## Mailing List\n\nJoin our mailing list and get help with and issues you have:\nhttps://groups.google.com/forum/?fromgroups#!forum/nunjucks\n\n## Want to help?\n\nContributions are always welcome! Before you submit an issue or pull request, please read our [contribution guidelines](CONTRIBUTING.md).\n\n[Contributors](https://github.com/mozilla/nunjucks/graphs/contributors)\n\n[npm-image]: https://img.shields.io/npm/v/nunjucks.svg\n[npm-url]: https://npmjs.org/package/nunjucks\n[downloads-image]: https://img.shields.io/npm/dm/nunjucks.svg\n[downloads-url]: https://npmjs.org/package/nunjucks\n[github-actions-image]: https://img.shields.io/github/workflow/status/mozilla/nunjucks/Tests/master.svg?label=linux\n[github-actions-url]: https://github.com/mozilla/nunjucks/actions\n[appveyor-image]: https://img.shields.io/appveyor/ci/fdintino/nunjucks/master.svg?label=windows\n[appveyor-url]: https://ci.appveyor.com/project/fdintino/nunjucks\n[codecov-image]: https://img.shields.io/codecov/c/gh/mozilla/nunjucks.svg\n[codecov-url]: https://codecov.io/gh/mozilla/nunjucks/branch/master\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.6572265625,
          "content": "# Fix line endings in Windows. (runs before repo cloning)\ninit:\n  - git config --global core.autocrlf input\n\n# Test against these versions of Node.js.\nenvironment:\n  matrix:\n    - nodejs_version: \"11\"\n    - nodejs_version: \"10\"\n    - nodejs_version: \"8\"\n\n# Install scripts. (runs after repo cloning)\ninstall:\n  # Get the latest stable version of Node.js or io.js\n  - ps: Install-Product node $env:nodejs_version\n  # install modules\n  - npm install\n  - npm install codecov\n\n# Post-install test scripts.\ntest_script:\n  # Output useful info for debugging.\n  - node --version\n  - npm --version\n  # run tests\n  - npm test\n  - npm run codecov\n\n# Don't actually build.\nbuild: off\n"
        },
        {
          "name": "bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.26171875,
          "content": "{\n  \"name\": \"nunjucks\",\n  \"main\": \"browser/nunjucks.js\",\n  \"ignore\": [\n    \"Makefile\",\n    \"package.json\",\n    \"tests\",\n    \"docs\",\n    \"index.js\",\n    \"nunjucks\"\n  ],\n  \"keywords\": [\n    \"jinja\",\n    \"template\",\n    \"templates\",\n    \"templating\",\n    \"browser\"\n  ]\n}\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.03125,
          "content": "comment:\n  require_changes: yes\n"
        },
        {
          "name": "contribute.json",
          "type": "blob",
          "size": 0.671875,
          "content": "{\n    \"name\": \"Nunjucks\",\n    \"description\": \"Nunjucks is a full featured templating engine for javascript. It is heavily inspired by jinja2.\",\n    \"repository\": {\n        \"url\": \"https://github.com/mozilla/nunjucks\",\n        \"license\": \"BSD 2-Clause\",\n        \"tests\": \"https://travis-ci.org/mozilla/nunjucks\"\n    },\n    \"participate\": {\n        \"home\": \"https://github.com/mozilla/nunjucks\",\n        \"docs\": \"https://github.com/mozilla/nunjucks\"\n    },\n    \"bugs\": {\n        \"list\": \"https://github.com/mozilla/nunjucks/issues\",\n        \"report\": \"https://github.com/mozilla/nunjucks/issues/new\"\n    },\n    \"keywords\": [\n        \"javascript\",\n        \"node.js\",\n        \"jinja\"\n    ]\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "nunjucks",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.064453125,
          "content": "{\n  \"name\": \"nunjucks\",\n  \"description\": \"A powerful templating engine with inheritance, asynchronous control, and more (jinja2 inspired)\",\n  \"version\": \"3.2.4\",\n  \"author\": \"James Long <longster@gmail.com>\",\n  \"dependencies\": {\n    \"a-sync-waterfall\": \"^1.0.0\",\n    \"asap\": \"^2.0.3\",\n    \"commander\": \"^5.1.0\"\n  },\n  \"browser\": \"./browser/nunjucks.js\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.0.0-beta.38\",\n    \"@babel/core\": \"^7.0.0-beta.38\",\n    \"@babel/preset-env\": \"^7.0.0-beta.38\",\n    \"@babel/register\": \"^7.0.0-beta.38\",\n    \"babel-loader\": \"^8.0.0-beta.0\",\n    \"babel-plugin-istanbul\": \"^4.1.5\",\n    \"babel-plugin-module-resolver\": \"3.0.0-beta.5\",\n    \"connect\": \"^3.6.5\",\n    \"core-js\": \"^2.5.3\",\n    \"cross-env\": \"^5.1.3\",\n    \"eslint\": \"^4.13.0\",\n    \"eslint-config-airbnb-base\": \"^12.1.0\",\n    \"eslint-plugin-import\": \"^2.8.0\",\n    \"expect.js\": \"*\",\n    \"express\": \"4.x\",\n    \"fs-extra\": \"^5.0.0\",\n    \"get-port\": \"^3.2.0\",\n    \"mocha\": \"< 8.x\",\n    \"mocha-phantomjs-core\": \"^2.1.2\",\n    \"mocha-phantomjs-istanbul\": \"0.0.2\",\n    \"module-alias\": \"^2.0.3\",\n    \"node-libs-browser\": \"^0.7.0\",\n    \"nyc\": \"^11.4.1\",\n    \"phantomjs-prebuilt\": \"^2.1.16\",\n    \"serve-static\": \"^1.13.1\",\n    \"supertest\": \"*\",\n    \"uglify-js\": \"^2.8.29\",\n    \"uglifyjs-webpack-plugin\": \"^1.1.6\",\n    \"webpack\": \"^3.10.0\"\n  },\n  \"buildDependencies\": {\n    \"@babel/cli\": \"^7.0.0-beta.38\",\n    \"@babel/core\": \"^7.0.0-beta.38\",\n    \"@babel/preset-env\": \"^7.0.0-beta.38\",\n    \"@babel/register\": \"^7.0.0-beta.38\",\n    \"babel-loader\": \"^8.0.0-beta.0\",\n    \"babel-plugin-istanbul\": \"^4.1.5\",\n    \"babel-plugin-module-resolver\": \"3.0.0-beta.5\",\n    \"core-js\": \"^2.5.3\",\n    \"module-alias\": \"^2.0.3\",\n    \"node-libs-browser\": \"^0.7.0\",\n    \"uglify-js\": \"^2.8.29\",\n    \"uglifyjs-webpack-plugin\": \"^1.1.6\",\n    \"webpack\": \"^3.10.0\"\n  },\n  \"peerDependencies\": {\n    \"chokidar\": \"^3.3.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"chokidar\": {\n      \"optional\": true\n    }\n  },\n  \"_moduleAliases\": {\n    \"babel-register\": \"@babel/register\"\n  },\n  \"engines\": {\n    \"node\": \">= 6.9.0\"\n  },\n  \"scripts\": {\n    \"build:transpile\": \"babel nunjucks --out-dir .\",\n    \"build:bundle\": \"node scripts/bundle.js\",\n    \"build\": \"npm run build:transpile && npm run build:bundle\",\n    \"codecov\": \"codecov\",\n    \"mocha\": \"mocha -R spec tests\",\n    \"lint\": \"eslint nunjucks scripts tests\",\n    \"prepare\": \"npm run build\",\n    \"test:instrument\": \"cross-env NODE_ENV=test scripts/bundle.js\",\n    \"test:runner\": \"cross-env NODE_ENV=test NODE_PATH=tests/test-node-pkgs scripts/testrunner.js\",\n    \"test\": \"npm run lint && npm run test:instrument && npm run test:runner\"\n  },\n  \"bin\": {\n    \"nunjucks-precompile\": \"./bin/precompile\"\n  },\n  \"main\": \"index.js\",\n  \"files\": [\n    \"bin/**\",\n    \"browser/**\",\n    \"src/**\"\n  ],\n  \"nyc\": {\n    \"require\": [\n      \"babel-register\"\n    ],\n    \"sourceMap\": false,\n    \"instrument\": false\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/mozilla/nunjucks.git\"\n  },\n  \"keywords\": [\n    \"template\",\n    \"templating\"\n  ],\n  \"license\": \"BSD-2-Clause\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mozilla/nunjucks/issues\"\n  }\n}\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}