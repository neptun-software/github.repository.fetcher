{
  "metadata": {
    "timestamp": 1736562669871,
    "page": 175,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Mango/slideout",
      "stars": 7931,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0478515625,
          "content": ".DS_Store\nnode_modules\nbower_components\ncoverage\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.3681640625,
          "content": "{\n  \"bitwise\": false,\n  \"curly\": true,\n  \"eqeqeq\": true,\n  \"expr\": true,\n  \"forin\": true,\n  \"freeze\": true,\n  \"funcscope\": true,\n  \"globalstrict\": true,\n  \"nonbsp\": true,\n  \"unused\": true,\n  \"debug\": true,\n  \"evil\": true,\n  \"lastsemic\": true,\n  \"loopfunc\": true,\n  \"proto\": true,\n  \"scripturl\": true,\n  \"strict\": true,\n  \"browser\": true,\n  \"browserify\": true,\n  \"node\": true\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.15234375,
          "content": "language: node_js\nnode_js:\n  - 6.9.1\n# Send coverage data to Coveralls\nafter_script: \"cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\"\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.96484375,
          "content": "# Contributing\n\n## Code style\nRegarding code style like indentation and whitespace, **follow the conventions you see used in the source already.**\n\n## Modifying the code\n\nPlease don't edit `/dist/slideout.js` and `/dist/slideout.min.js` files. You'll find source code in the `index.js` file.\n\n1. Fork and clone the repo.\n2. Run `npm install` to install all dependencies.\n3. Create a new branch, please don't work in your `master` branch directly.\n4. Open the file `/test/index.html`.\n5. Code!\n\n### Running the tests\n\n- Run `npm test` from your command line and check the console\n- Open the `/test/index.html` file to run test in your browser.\n\n## Pull requests\n\n1. Create a new branch, **please don't work in your `master` branch directly**.\n2. Code!\n3. Update the tests and run `npm test` to see the tests.\n4. Run `npm run hint`.\n5. Run `npm run dist` to build a new version.\n6. Update the documentation and package to reflect any changes.\n7. Push to your fork and submit a pull request."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Mango\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8779296875,
          "content": "# Slideout.js\n\n[![NPM version][npm-image]][npm-link] [![License][lic-image]][npm-link] [![Build status][travis-image]][travis-link] [![Coverage Status][coverage-image]][coverage-link] [![Dependency status][deps-image]][deps-link] [![devDependency status][devdeps-image]][devdeps-link] [![downloads][dt-image]][npm-link]\n\n> A touch slideout navigation menu for your mobile web apps.\n\n## Features\n\n- Dependency-free.\n- Simple markup.\n- Native scrolling.\n- Easy customization.\n- CSS transforms & transitions.\n- Just 2 Kb! (min & gzip)\n\n## Demo\n\n[Check out the demo](https://mango.github.io/slideout/) to see it in action (on your mobile or emulate touches on your browser).\n\n<img src=\"https://i.imgur.com/AWgwlVW.gif\" alt=\"Slideout.js demo\">\n\n## Installation\n\nSlideout is available on cdnjs\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/slideout/1.0.1/slideout.min.js\"></script>\n```\n\nAlso you can use one of many package managers\n\n    $ npm install slideout\n\n    $ spm install slideout\n\n    $ bower install slideout.js\n\n    $ component install mango/slideout\n\n## Usage\n\nImplementing Slideout.js into your project is easy.\n\nFirst of all, you'll need to create your markup. You should have a menu (`#menu`) and a main content (`#panel`) into your body.\n\n```html\n<nav id=\"menu\">\n  <header>\n    <h2>Menu</h2>\n  </header>\n</nav>\n\n<main id=\"panel\">\n  <header>\n    <h2>Panel</h2>\n  </header>\n</main>\n```\n\nAdd the Slideout.js styles (index.css) in your web application.\n\n```css\nbody {\n  width: 100%;\n  height: 100%;\n}\n\n.slideout-menu {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: 256px;\n  min-height: 100vh;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  z-index: 0;\n  display: none;\n}\n\n.slideout-menu-left {\n  left: 0;\n}\n\n.slideout-menu-right {\n  right: 0;\n}\n\n.slideout-panel {\n  position: relative;\n  z-index: 1;\n  will-change: transform;\n  background-color: #FFF; /* A background-color is required */\n  min-height: 100vh;\n}\n\n.slideout-open,\n.slideout-open body,\n.slideout-open .slideout-panel {\n  overflow: hidden;\n}\n\n.slideout-open .slideout-menu {\n  display: block;\n}\n```\n\nThen you just include Slideout.js, create a new instance with some options and call the toggle method:\n\n```html\n<script src=\"dist/slideout.min.js\"></script>\n<script>\n  var slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    'padding': 256,\n    'tolerance': 70\n  });\n\n  // Toggle button\n  document.querySelector('.toggle-button').addEventListener('click', function() {\n    slideout.toggle();\n  });\n</script>\n```\n\n#### Full example\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Slideout Demo</title>\n    <meta http-equiv=\"cleartype\" content=\"on\">\n    <meta name=\"MobileOptimized\" content=\"320\">\n    <meta name=\"HandheldFriendly\" content=\"True\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n    <style>\n      body {\n        width: 100%;\n        height: 100%;\n      }\n\n      .slideout-menu {\n        position: fixed;\n        left: 0;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        z-index: 0;\n        width: 256px;\n        overflow-y: scroll;\n        -webkit-overflow-scrolling: touch;\n        display: none;\n      }\n\n      .slideout-panel {\n        position: relative;\n        z-index: 1;\n        will-change: transform;\n      }\n\n      .slideout-open,\n      .slideout-open body,\n      .slideout-open .slideout-panel {\n        overflow: hidden;\n      }\n\n      .slideout-open .slideout-menu {\n        display: block;\n      }\n    </style>\n  </head>\n  <body>\n\n    <nav id=\"menu\">\n      <h2>Menu</h2>\n    </nav>\n\n    <main id=\"panel\">\n      <header>\n        <button class=\"toggle-button\">â˜°</button>\n        <h2>Panel</h2>\n      </header>\n    </main>\n\n    <script src=\"dist/slideout.min.js\"></script>\n    <script>\n      var slideout = new Slideout({\n        'panel': document.getElementById('panel'),\n        'menu': document.getElementById('menu'),\n        'padding': 256,\n        'tolerance': 70\n      });\n\n      // Toggle button\n      document.querySelector('.toggle-button').addEventListener('click', function() {\n        slideout.toggle();\n      });\n    </script>\n\n  </body>\n</html>\n```\n\n## Browser Support\n\n- Chrome (IOS, Android, desktop)\n- Firefox (Android, desktop)\n- Safari (IOS, Android, desktop)\n- Opera (desktop)\n- IE 10+ (desktop and mobile)\n\n## API\n\n### Slideout(options)\nCreate a new instance of `Slideout`.\n\n- `options` (Object) - Options to customize a new instance of Slideout.\n- `options.panel` (HTMLElement) - The DOM element that contains all your application content (`.slideout-panel`).\n- `options.menu` (HTMLElement) - The DOM element that contains your menu application (`.slideout-menu`).\n- `[options.duration]` (Number) - The time (milliseconds) to open/close the slideout. Default: `300`.\n- `[options.easing]` (String) - The CSS effect to use when animating the opening and closing of the slideout. Default: `ease`. Possible values:\n    - `ease`\n    - `linear`\n    - `ease-in`\n    - `ease-out`\n    - `ease-in-out`\n    - `step-start`\n    - `step-end`\n    - [`cubic-bezier`](http://cubic-bezier.com/)\n- `[options.padding]` (Number) - Default: `256`.\n- `[options.tolerance]` (Number) - The number of `px` needed for the menu can be opened completely, otherwise it closes. Default: `70`.\n- `[options.touch]` (Boolean) - Set this option to false to disable Slideout touch events. Default: `true`.\n- `[options.side]` (String) - The side to open the slideout (`left` or `right`). Default: `left`.\n\n```js\nvar slideout = new Slideout({\n  'panel': document.getElementById('main'),\n  'menu': document.getElementById('menu'),\n  'padding': 256,\n  'tolerance': 70,\n  'easing': 'cubic-bezier(.32,2,.55,.27)'\n});\n```\n\n### Slideout.open();\nOpens the slideout menu. It emits `beforeopen` and `open` events.\n\n```js\nslideout.open();\n```\n\n### Slideout.close();\nCloses the slideout menu. It emits `beforeclose` and `close` events.\n\n```js\nslideout.close();\n```\n\n### Slideout.toggle();\nToggles (open/close) the slideout menu.\n\n```js\nslideout.toggle();\n```\n\n### Slideout.isOpen();\nReturns `true` if the slideout is currently open, and `false` if it is closed.\n\n```js\nslideout.isOpen(); // true or false\n```\n\n### Slideout.destroy();\nCleans up the instance so another slideout can be created on the same area.\n\n```js\nslideout.destroy();\n```\n\n### Slideout.enableTouch();\nEnables opening the slideout via touch events.\n\n```js\nslideout.enableTouch();\n```\n\n### Slideout.disableTouch();\nDisables opening the slideout via touch events.\n\n```js\nslideout.disableTouch();\n```\n\n### Slideout.on(event, listener);\n```js\nslideout.on('open', function() { ... });\n```\n\n### Slideout.once(event, listener);\n```js\nslideout.once('open', function() { ... });\n```\n\n### Slideout.off(event, listener);\n```js\nslideout.off('open', listener);\n```\n\n### Slideout.emit(event, ...data);\n```js\nslideout.emit('open');\n```\n\n## Events\n\nAn instance of Slideout emits the following events:\n\n- `beforeclose`\n- `close`\n- `beforeopen`\n- `open`\n- `translatestart`\n- `translate`\n- `translateend`\n\nThe slideout emits `translatestart`, `translate` and `translateend` events only when it is opening/closing via touch events.\n\n```js\nslideout.on('translatestart', function() {\n  console.log('Start');\n});\n\nslideout.on('translate', function(translated) {\n  console.log('Translate: ' + translated); // 120 in px\n});\n\nslideout.on('translateend', function() {\n  console.log('End');\n});\n\n// 'Start'\n// 'Translate 120'\n// 'End'\n```\n\n## `data-slideout-ignore` attribute\nYou can use the special HTML attribute `data-slideout-ignore` to disable dragging on some elements. For example, if you have to prevent `slideout` will open when touch on carousels, maps, iframes, etc.\n\n```html\n<main id=\"panel\">\n  <header>\n    <h2>Panel</h2>\n  </header>\n  <div id=\"carousel\" data-slideout-ignore>\n    <h2>Carousel</h2>\n    ...\n  </div>\n</main>\n```\n\n## npm-scripts\n```\n$ npm run build\n```\n\n```\n$ npm run dist\n```\n\n```\n$ npm test\n```\n\n```\n$ npm run hint\n```\n\n## FAQ\n\n### How to add a toggle button.\n\n```js\n// vanilla js\ndocument.querySelector('.toggle-button').addEventListener('click', function() {\n  slideout.toggle();\n});\n\n// jQuery\n$('.toggle-button').on('click', function() {\n    slideout.toggle();\n});\n```\n\n### How to open slideout from right side.\n\nYou should use the `side` option with the value `right`.\n```js\nvar slideout = new Slideout({\n  'panel': document.getElementById('content'),\n  'menu': document.getElementById('menu'),\n  'side': 'right'\n});\n```\n\n### How to enable slideout only on mobile devices.\n\nYou should use `mediaqueries`:\n```css\n@media screen and (min-width: 780px) {\n  .slideout-panel {\n    margin-left: 256px;\n  }\n\n  .slideout-menu {\n    display: block;\n  }\n\n  .btn-hamburger {\n    display: none;\n  }\n}\n```\nDemo: http://codepen.io/pazguille/pen/mEdQvX\n\n### How to use slideout with a fixed header.\n\nFirst, you should define the styles for your fixed header:\n```css\n.fixed-header {\n  position: fixed;\n  width: 100%;\n  height: 50px;\n  backface-visibility: hidden;\n  z-index: 2;\n  background-color: red;\n}\n```\n\nThen, using slideout's events you should translate the fixed header:\n```js\nvar fixed = document.querySelector('.fixed-header');\n\nslideout.on('translate', function(translated) {\n  fixed.style.transform = 'translateX(' + translated + 'px)';\n});\n\nslideout.on('beforeopen', function () {\n  fixed.style.transition = 'transform 300ms ease';\n  fixed.style.transform = 'translateX(256px)';\n});\n\nslideout.on('beforeclose', function () {\n  fixed.style.transition = 'transform 300ms ease';\n  fixed.style.transform = 'translateX(0px)';\n});\n\nslideout.on('open', function () {\n  fixed.style.transition = '';\n});\n\nslideout.on('close', function () {\n  fixed.style.transition = '';\n});\n```\n\nDemo: http://codepen.io/pazguille/pen/ZBxdgw\n\n\n### How to disable dragging on some elements.\nYou can use the attribute `data-slideout-ignore` to disable dragging on some elements:\n\n```html\n<nav id=\"menu\">\n  <header>\n    <h2>Menu</h2>\n  </header>\n</nav>\n\n<main id=\"panel\">\n  <header>\n    <h2>Panel</h2>\n  </header>\n  <div id=\"carousel\" data-slideout-ignore>\n    <h2>Carousel</h2>\n    ...\n  </div>\n</main>\n```\n\n### How to add an overlay to close the menu on click.\nYou can do that using the powerful `slideout` API and a little extra CSS:\n\n```css\n.panel:before {\n  content: '';\n  display: block;\n  background-color: rgba(0,0,0,0);\n  transition: background-color 0.5s ease-in-out;\n}\n\n.panel-open:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  background-color: rgba(0,0,0,.5);\n  z-index: 99;\n}\n```\n\n```js\nfunction close(eve) {\n  eve.preventDefault();\n  slideout.close();\n}\n\nslideout\n  .on('beforeopen', function() {\n    this.panel.classList.add('panel-open');\n  })\n  .on('open', function() {\n    this.panel.addEventListener('click', close);\n  })\n  .on('beforeclose', function() {\n    this.panel.classList.remove('panel-open');\n    this.panel.removeEventListener('click', close);\n  });\n```\n\nDemo: http://codepen.io/pazguille/pen/BQYRYK\n\n## With :heart: by\n- Guille Paz (Front-end developer | Web standards lover)\n- E-mail: [guille87paz@gmail.com](mailto:guille87paz@gmail.com)\n- Twitter: [@pazguille](http://twitter.com/pazguille)\n- Web: [http://pazguille.me](http://pazguille.me)\n\n## License\nMIT license. Copyright Â© 2015 [Mango](http://getmango.com).\n\n[npm-image]: https://img.shields.io/npm/v/slideout.svg\n[lic-image]: https://img.shields.io/npm/l/slideout.svg\n[npm-link]: https://npmjs.org/package/slideout\n[travis-image]: https://img.shields.io/travis/Mango/slideout.svg\n[travis-link]: https://travis-ci.org/Mango/slideout\n[deps-image]: https://img.shields.io/david/mango/slideout.svg\n[deps-link]: https://david-dm.org/mango/slideout\n[devdeps-image]: https://img.shields.io/david/dev/mango/slideout.svg\n[devdeps-link]: https://david-dm.org/mango/slideout#info=devDependencies\n[dt-image]: https://img.shields.io/npm/dt/slideout.svg\n[coverage-image]: https://img.shields.io/coveralls/Mango/slideout.svg\n[coverage-link]: https://coveralls.io/github/Mango/slideout\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.689453125,
          "content": "{\n  \"name\": \"slideout.js\",\n  \"repository\": \"https://github.com/Mango/slideout\",\n  \"description\": \"A touch slideout navigation menu for your mobile web apps.\",\n  \"author\": \"Guille Paz <guille87paz@gmail.com>\",\n  \"dependencies\": {\n    \"decouple\": \"0.0.2\",\n    \"emitter-es6\": \"0.0.7\"\n  },\n  \"ignore\": [\n    \".*\",\n    \"package.json\",\n    \"component.json\",\n    \"node_modules\",\n    \"browserify.js\",\n    \"**/.*\",\n    \"bower_components\",\n    \"test\",\n    \"demo\"\n  ],\n  \"homepage\": \"https://github.com/mango/slideout\",\n  \"moduleType\": [\n    \"adecouplemd\",\n    \"globals\",\n    \"node\"\n  ],\n  \"keywords\": [\n    \"slideout\",\n    \"offcanvas\",\n    \"menu\",\n    \"touch\"\n  ],\n  \"main\": \"dist/slideout.js\",\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "browserify.js",
          "type": "blob",
          "size": 0.36328125,
          "content": "'use strict';\n\nvar fs = require('fs');\nvar browserify = require('browserify');\n\nif (!fs.existsSync('./dist')) {\n  fs.mkdirSync('./dist');\n}\n\nbrowserify({'debug': true, 'standalone': 'Slideout'})\n  .require('./index.js', {'entry': true})\n  .bundle()\n  .on('error', function(err) { console.log('Error : ' + err.message); })\n  .pipe(fs.createWriteStream('dist/slideout.js'));"
        },
        {
          "name": "component.json",
          "type": "blob",
          "size": 0.458984375,
          "content": "{\n  \"name\": \"slideout\",\n  \"repo\": \"mango/slideout\",\n  \"description\": \"A touch slideout navigation menu for your mobile web apps.\",\n  \"author\": \"Guille Paz <guille87paz@gmail.com>\",\n  \"version\": \"1.0.1\",\n  \"twitter\": \"@mango\",\n  \"keywords\": [\n    \"slideout\",\n    \"offcanvas\",\n    \"menu\",\n    \"touch\"\n  ],\n  \"dependencies\": {\n    \"pazguille/decouple\": \"0.0.2\",\n    \"Mango/emitter\": \"0.0.7\"\n  },\n  \"development\": {},\n  \"license\": \"MIT\",\n  \"scripts\": [\n    \"index.js\"\n  ]\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.css",
          "type": "blob",
          "size": 0.6015625,
          "content": "body {\n  width: 100%;\n  height: 100%;\n}\n\n.slideout-menu {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: 256px;\n  min-height: 100vh;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  z-index: 0;\n  display: none;\n}\n\n.slideout-menu-left {\n  left: 0;\n}\n\n.slideout-menu-right {\n  right: 0;\n}\n\n.slideout-panel {\n  position: relative;\n  z-index: 1;\n  will-change: transform;\n  background-color: #FFF; /* A background-color is required */\n  min-height: 100vh;\n}\n\n.slideout-open,\n.slideout-open body,\n.slideout-open .slideout-panel {\n  overflow: hidden;\n}\n\n.slideout-open .slideout-menu {\n  display: block;\n}\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 8.623046875,
          "content": "'use strict';\n\n/**\n * Module dependencies\n */\nvar decouple = require('decouple');\nvar Emitter = require('emitter');\n\n/**\n * Privates\n */\nvar scrollTimeout;\nvar scrolling = false;\nvar doc = window.document;\nvar html = doc.documentElement;\nvar msPointerSupported = window.navigator.msPointerEnabled;\nvar touch = {\n  'start': msPointerSupported ? 'MSPointerDown' : 'touchstart',\n  'move': msPointerSupported ? 'MSPointerMove' : 'touchmove',\n  'end': msPointerSupported ? 'MSPointerUp' : 'touchend'\n};\nvar prefix = (function prefix() {\n  var regex = /^(Webkit|Khtml|Moz|ms|O)(?=[A-Z])/;\n  var styleDeclaration = doc.getElementsByTagName('script')[0].style;\n  for (var prop in styleDeclaration) {\n    if (regex.test(prop)) {\n      return '-' + prop.match(regex)[0].toLowerCase() + '-';\n    }\n  }\n  // Nothing found so far? Webkit does not enumerate over the CSS properties of the style object.\n  // However (prop in style) returns the correct value, so we'll have to test for\n  // the precence of a specific property\n  if ('WebkitOpacity' in styleDeclaration) { return '-webkit-'; }\n  if ('KhtmlOpacity' in styleDeclaration) { return '-khtml-'; }\n  return '';\n}());\nfunction extend(destination, from) {\n  for (var prop in from) {\n    if (from[prop]) {\n      destination[prop] = from[prop];\n    }\n  }\n  return destination;\n}\nfunction inherits(child, uber) {\n  child.prototype = extend(child.prototype || {}, uber.prototype);\n}\nfunction hasIgnoredElements(el) {\n  while (el.parentNode) {\n    if (el.getAttribute('data-slideout-ignore') !== null) {\n      return el;\n    }\n    el = el.parentNode;\n  }\n  return null;\n}\n\n/**\n * Slideout constructor\n */\nfunction Slideout(options) {\n  options = options || {};\n\n  // Sets default values\n  this._startOffsetX = 0;\n  this._currentOffsetX = 0;\n  this._opening = false;\n  this._moved = false;\n  this._opened = false;\n  this._preventOpen = false;\n\n  // Sets panel\n  this.panel = options.panel;\n  this.menu = options.menu;\n\n  // Sets options\n  this._touch = options.touch === undefined ? true : options.touch && true;\n  this._side = options.side || 'left';\n  this._easing = options.fx ||Â options.easing || 'ease';\n  this._duration = parseInt(options.duration, 10) || 300;\n  this._tolerance = parseInt(options.tolerance, 10) || 70;\n  this._padding = this._translateTo = parseInt(options.padding, 10) || 256;\n  this._orientation = this._side === 'right' ? -1 : 1;\n  this._translateTo *= this._orientation;\n\n  // Sets  classnames\n  if (!this.panel.classList.contains('slideout-panel')) {\n    this.panel.classList.add('slideout-panel');\n  }\n  if (!this.panel.classList.contains('slideout-panel-' + this._side)) {\n    this.panel.classList.add('slideout-panel-' + this._side);\n  }\n  if (!this.menu.classList.contains('slideout-menu')) {\n    this.menu.classList.add('slideout-menu');\n  }\n  if (!this.menu.classList.contains('slideout-menu-' + this._side)) {\n    this.menu.classList.add('slideout-menu-' + this._side);\n  }\n\n  // Init touch events\n  if (this._touch) {\n    this._initTouchEvents();\n  }\n}\n\n/**\n * Inherits from Emitter\n */\ninherits(Slideout, Emitter);\n\n/**\n * Opens the slideout menu.\n */\nSlideout.prototype.open = function() {\n  var self = this;\n  this.emit('beforeopen');\n  if (!html.classList.contains('slideout-open')) {\n    html.classList.add('slideout-open');\n  }\n  this._setTransition();\n  this._translateXTo(this._translateTo);\n  this._opened = true;\n  setTimeout(function() {\n    self.panel.style.transition = self.panel.style['-webkit-transition'] = '';\n    self.emit('open');\n  }, this._duration + 50);\n  return this;\n};\n\n/**\n * Closes slideout menu.\n */\nSlideout.prototype.close = function() {\n  var self = this;\n  if (!this.isOpen() && !this._opening) {\n    return this;\n  }\n  this.emit('beforeclose');\n  this._setTransition();\n  this._translateXTo(0);\n  this._opened = false;\n  setTimeout(function() {\n    html.classList.remove('slideout-open');\n    self.panel.style.transition = self.panel.style['-webkit-transition'] = self.panel.style[prefix + 'transform'] = self.panel.style.transform = '';\n    self.emit('close');\n  }, this._duration + 50);\n  return this;\n};\n\n/**\n * Toggles (open/close) slideout menu.\n */\nSlideout.prototype.toggle = function() {\n  return this.isOpen() ? this.close() : this.open();\n};\n\n/**\n * Returns true if the slideout is currently open, and false if it is closed.\n */\nSlideout.prototype.isOpen = function() {\n  return this._opened;\n};\n\n/**\n * Translates panel and updates currentOffset with a given X point\n */\nSlideout.prototype._translateXTo = function(translateX) {\n  this._currentOffsetX = translateX;\n  this.panel.style[prefix + 'transform'] = this.panel.style.transform = 'translateX(' + translateX + 'px)';\n  return this;\n};\n\n/**\n * Set transition properties\n */\nSlideout.prototype._setTransition = function() {\n  this.panel.style[prefix + 'transition'] = this.panel.style.transition = prefix + 'transform ' + this._duration + 'ms ' + this._easing;\n  return this;\n};\n\n/**\n * Initializes touch event\n */\nSlideout.prototype._initTouchEvents = function() {\n  var self = this;\n\n  /**\n   * Decouple scroll event\n   */\n  this._onScrollFn = decouple(doc, 'scroll', function() {\n    if (!self._moved) {\n      clearTimeout(scrollTimeout);\n      scrolling = true;\n      scrollTimeout = setTimeout(function() {\n        scrolling = false;\n      }, 250);\n    }\n  });\n\n  /**\n   * Prevents touchmove event if slideout is moving\n   */\n  this._preventMove = function(eve) {\n    if (self._moved) {\n      eve.preventDefault();\n    }\n  };\n\n  doc.addEventListener(touch.move, this._preventMove);\n\n  /**\n   * Resets values on touchstart\n   */\n  this._resetTouchFn = function(eve) {\n    if (typeof eve.touches === 'undefined') {\n      return;\n    }\n\n    self._moved = false;\n    self._opening = false;\n    self._startOffsetX = eve.touches[0].pageX;\n    self._preventOpen = (!self._touch || (!self.isOpen() && self.menu.clientWidth !== 0));\n  };\n\n  this.panel.addEventListener(touch.start, this._resetTouchFn);\n\n  /**\n   * Resets values on touchcancel\n   */\n  this._onTouchCancelFn = function() {\n    self._moved = false;\n    self._opening = false;\n  };\n\n  this.panel.addEventListener('touchcancel', this._onTouchCancelFn);\n\n  /**\n   * Toggles slideout on touchend\n   */\n  this._onTouchEndFn = function() {\n    if (self._moved) {\n      self.emit('translateend');\n      (self._opening && Math.abs(self._currentOffsetX) > self._tolerance) ? self.open() : self.close();\n    }\n    self._moved = false;\n  };\n\n  this.panel.addEventListener(touch.end, this._onTouchEndFn);\n\n  /**\n   * Translates panel on touchmove\n   */\n  this._onTouchMoveFn = function(eve) {\n    if (\n      scrolling ||\n      self._preventOpen ||\n      typeof eve.touches === 'undefined' ||\n      hasIgnoredElements(eve.target)\n    ) {\n      return;\n    }\n\n    var dif_x = eve.touches[0].clientX - self._startOffsetX;\n    var translateX = self._currentOffsetX = dif_x;\n\n    if (Math.abs(translateX) > self._padding) {\n      return;\n    }\n\n    if (Math.abs(dif_x) > 20) {\n\n      self._opening = true;\n\n      var oriented_dif_x = dif_x * self._orientation;\n\n      if (self._opened && oriented_dif_x > 0 || !self._opened && oriented_dif_x < 0) {\n        return;\n      }\n\n      if (!self._moved) {\n        self.emit('translatestart');\n      }\n\n      if (oriented_dif_x <= 0) {\n        translateX = dif_x + self._padding * self._orientation;\n        self._opening = false;\n      }\n\n      if (!(self._moved && html.classList.contains('slideout-open'))) {\n        html.classList.add('slideout-open');\n      }\n\n      self.panel.style[prefix + 'transform'] = self.panel.style.transform = 'translateX(' + translateX + 'px)';\n      self.emit('translate', translateX);\n      self._moved = true;\n    }\n\n  };\n\n  this.panel.addEventListener(touch.move, this._onTouchMoveFn);\n\n  return this;\n};\n\n/**\n * Enable opening the slideout via touch events.\n */\nSlideout.prototype.enableTouch = function() {\n  this._touch = true;\n  return this;\n};\n\n/**\n * Disable opening the slideout via touch events.\n */\nSlideout.prototype.disableTouch = function() {\n  this._touch = false;\n  return this;\n};\n\n/**\n * Destroy an instance of slideout.\n */\nSlideout.prototype.destroy = function() {\n  // Close before clean\n  this.close();\n\n  // Remove event listeners\n  doc.removeEventListener(touch.move, this._preventMove);\n  this.panel.removeEventListener(touch.start, this._resetTouchFn);\n  this.panel.removeEventListener('touchcancel', this._onTouchCancelFn);\n  this.panel.removeEventListener(touch.end, this._onTouchEndFn);\n  this.panel.removeEventListener(touch.move, this._onTouchMoveFn);\n  doc.removeEventListener('scroll', this._onScrollFn);\n\n  // Remove methods\n  this.open = this.close = function() {};\n\n  // Return the instance so it can be easily dereferenced\n  return this;\n};\n\n/**\n * Expose Slideout\n */\nmodule.exports = Slideout;\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.24609375,
          "content": "{\n  \"name\": \"slideout\",\n  \"repository\": \"git@github.com:mango/slideout.git\",\n  \"description\": \"A touch slideout navigation menu for your mobile web apps.\",\n  \"author\": \"Guille Paz <guille87paz@gmail.com>\",\n  \"version\": \"1.0.1\",\n  \"scripts\": {\n    \"build\": \"node browserify.js\",\n    \"test\": \"npm run build && istanbul cover _mocha\",\n    \"dist\": \"node browserify.js && uglifyjs ./dist/slideout.js -m -o ./dist/slideout.min.js\",\n    \"hint\": \"jshint index.js\"\n  },\n  \"dependencies\": {\n    \"decouple\": \"0.0.2\",\n    \"emitter\": \"git+https://github.com/Mango/emitter.git#0.0.7\"\n  },\n  \"devDependencies\": {\n    \"better-assert\": \"1.0.2\",\n    \"browserify\": \"13.1.1\",\n    \"coveralls\": \"2.11.15\",\n    \"istanbul\": \"0.4.5\",\n    \"jsdom\": \"9.8.3\",\n    \"jshint\": \"2.9.4\",\n    \"mocha\": \"3.1.2\",\n    \"uglify-js\": \"2.7.4\"\n  },\n  \"main\": \"index.js\",\n  \"keywords\": [\n    \"slideout\",\n    \"offcanvas\",\n    \"menu\",\n    \"touch\"\n  ],\n  \"license\": \"MIT\",\n  \"spm\": {\n    \"dependencies\": {\n      \"decouple\": \"0.0.2\",\n      \"emitter\": \"git+https://github.com/Mango/emitter.git#0.0.7\"\n    },\n    \"main\": \"index.js\"\n  },\n  \"filename\": \"slideout.min.js\",\n  \"autoupdate\": {\n    \"source\": \"git\",\n    \"target\": \"git://github.com/Mango/slideout.git\",\n    \"basePath\": \"dist\",\n    \"files\": [\n      \"*.js\"\n    ]\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}