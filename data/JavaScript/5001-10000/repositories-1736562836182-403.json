{
  "metadata": {
    "timestamp": 1736562836182,
    "page": 403,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rauchg/slackin",
      "stars": 6505,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bluemix",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.048828125,
          "content": "# dependencies\nnode_modules\n\n# logs\nnpm-debug.log\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.037109375,
          "content": "language: node_js\nnode_js:\n  - stable\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2626953125,
          "content": "FROM node:slim\n\nENV PORT 3000\n\nADD . /srv/www\n\nWORKDIR /srv/www\n\nRUN npm install --unsafe-perm\n\nEXPOSE 3000\n\nCMD ./bin/slackin --coc \"$SLACK_COC\" --channels \"$SLACK_CHANNELS\" --port $PORT $SLACK_SUBDOMAIN $SLACK_API_TOKEN $GOOGLE_CAPTCHA_SECRET $GOOGLE_CAPTCHA_SITEKEY\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 5.3349609375,
          "content": "\n0.13.0 / 2016-07-20\n===================\n\n  * index: add `/data` endpoint to get data through a JSON API\n\n0.12.0 / 2016-07-20\n===================\n\n  * add options cors support\n  * slack: improve error handling\n\n0.11.3 / 2016-07-19\n===================\n\n  * package: don't forget about assets\n\n0.11.2 / 2016-07-19\n===================\n\n  * package: fix broken `main`\n\n0.11.1 / 2016-07-19\n===================\n\n  * package: fix usecase of `require('slackin')`\n\n0.11.0 / 2016-07-19\n===================\n\n  * index: expose express app as `app` on the returned value of `slackin`\n\n0.10.3 / 2016-07-19\n===================\n\n  * package: only publish `bin` and `dist`\n\n0.10.2 / 2016-07-19\n===================\n\n  * package: remove postinstall\n\n0.10.1 / 2016-07-19\n===================\n\n  * moving babel and gulp into dev deps [@rauchg]\n  * package: remove `start` as it requires ENV stuff [@rauchg]\n\n0.10.0 / 2016-07-19\n===================\n\n  * package: bump `socket.io` for security fixes\n\n0.9.0 / 2016-07-19\n==================\n\n  * Important bug fixes (#208) [@leo]\n  * Switch to args, lint code and clean up (#200) [@leo]\n  * Update docs with more clear token generation info\n  * Change heroku deploy to master\n  * Update Dockerfile to match Procfile\n  * issue #169, add turnary assignment for client sdk channels\n  * Change case on the \"already invited\" message\n  * Update Readme.md\n  * Fix TypeError when submitting w/o SLACK_CHANNELS config\n\n0.8.3 / 2016-03-08\n==================\n\n  * fix postMessage({}, '*') causes slackin to throw [@laughinghan]\n  * add IBM Bluemix Deploy badge [@kevinSuttle]\n  * add `?large` to `/iframe` and `/iframe/dialog` [@laughinghan]\n  * convert dialog dimensions to em/rem for adjustability #prepwork [@laughinghan]\n  * fix redirecting already-registered users from iframe dialog [@laughinghan]\n  * add \"or sign in\" link to iframe too [@laughinghan]\n  * render a hidden form field for a single channel [@nickstenning]\n  * add .travis.yml [@jszwedko]\n  * fix test for successful invite [@jszwedko]\n  * update `babel-register` module name in mocha opts [@jszwedko]\n  * update readme for babel 6 change [@danreeves]\n  * shorten already-invited message [@MaxWofford]\n  * add success message for already signed up users [@MaxWofford]\n  * fix max listeners warnings [Hardeep Shoker]\n\n0.8.2 / 2016-01-13\n==================\n\n  * use better supported anonymous function syntax [WouterSioen]\n  * bump socket.io\n\n0.8.1 / 2016-01-06\n==================\n\n  * index: fix `import` order issue\n\n0.8.0 / 2016-01-06\n==================\n\n  * bump socket.io to 1.4.0 for sec advisory\n  * add deploy to Azure Button\n  * build: Update builds to use gulp and babel6 (Fixes #122)\n  * adds instructions for deploying to Cloud Foundry\n  * redirect signed up users to Slack\n  * fix --path option parsing\n\n0.7.3 / 2015-11-29\n==================\n\n  * package: bump `socket.io` to fix build issue\n\n0.7.2 / 2015-11-29\n==================\n\n  * fix rendering of badge in non-chrome\n\n0.7.1 / 2015-11-19\n==================\n\n  * fix inline badge styles\n\n0.7.0 / 2015-11-19\n==================\n\n  * badge: make badge work for users with lots of users\n  * splash: fix hover color â€“ thank goodness\n  * relative path hosting support\n  * fix tests\n  * add support for codes of conduct\n\n0.6.0 / 2015-10-05\n==================\n\n  * use faster API methods: users.list to get presence\n  * fix polling interval increase\n  * allow hosting slackin under a path (eg: /slack)\n  * fix for deployment instructions\n  * add already registered link\n  * use SLACK_CHANNELS instead of SLACK_CHANNEL on Heroku\n  * standardize use of example host\n  * allow hosting at a subfolder\n\n0.5.1 / 2015-06-23\n==================\n\n  * added safety check for channels.\n  * fix counting deleted users\n\n0.5.0 / 2015-05-07\n==================\n\n  * allow for multiple guest channels [afeld]\n  * add important notes to README\n  * better error handling and tests [afeld]\n  * add Slack favicon and better title [frabrunelle]\n  * error when the token account is not an admin [martypenner]\n  * added Dockerfile [darron]\n\n0.4.0 / 2015-04-10\n==================\n\n * use SVG Heroku button\n * fixed svg dimensions issues\n * exclude bots (and slackbot) from users count\n * improve mobile zoom\n * use `<input type=\"email\">`\n * fix for single-channel guests invitation parameter name\n\n0.3.1 / 2015-03-16\n==================\n\n * fix meta tags for mobile support\n\n0.3.0 / 2015-03-06\n==================\n\n * update `babel`, fix all scenarios\n\n0.2.9 / 2015-03-03\n==================\n\n * package: bump `socket.io`\n\n0.2.8 / 2015-02-03\n==================\n\n * bump socket.io\n\n0.2.7 / 2015-02-02\n==================\n\n * support for custom css\n\n0.2.6 / 2015-02-01\n==================\n\n * fix issue with 6to5 and `-g install`\n\n0.2.5 / 2015-02-01\n==================\n\n * fix single channel invites to be ultra restricted\n\n0.2.4 / 2015-02-01\n==================\n\n * bump 6to5\n\n0.2.3 / 2015-02-01\n==================\n\n * fixed heroku button\n\n0.2.2 / 2015-01-30\n==================\n\n * fixed ability to `require('slackin')`\n\n0.2.1 / 2015-01-30\n==================\n\n * improved startup speed by leveraging pre-compilation\n\n0.2.0 / 2015-01-30\n==================\n\n * improved CLI interface [buildkite]\n * support for ENV vars [buildkite]\n * deploy to heroku button [buildkite]\n\n0.1.2 / 2015-01-28\n==================\n\n * fix bin name [brianloweswords]\n\n0.1.1 / 2015-01-26\n==================\n\n * fix typo\n\n0.1.0 / 2015-01-26\n==================\n\n * initial release\n"
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.1552734375,
          "content": "web: bin/slackin --coc \"$SLACK_COC\" --channels \"$SLACK_CHANNELS\" --port $PORT $SLACK_SUBDOMAIN $SLACK_API_TOKEN $GOOGLE_CAPTCHA_SECRET $GOOGLE_CAPTCHA_SITEKEY\n"
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 1.162109375,
          "content": "{\n  \"name\": \"Slackin\",\n  \"description\": \"Let people invite themselves to your Slack\",\n  \"logo\": \"https://i.imgur.com/odDO1Fx.png\",\n  \"repository\": \"https://github.com/rauchg/slackin\",\n  \"keywords\": [\"node\", \"slack\"],\n  \"env\": {\n    \"SLACK_SUBDOMAIN\": {\n      \"description\": \"Your Slack's subdomain (**this**.slack.com)\",\n      \"required\": true\n    },\n    \"SLACK_API_TOKEN\": {\n      \"description\": \"A Slack API token (find it on https://api.slack.com/web)\",\n      \"required\": true\n    },\n    \"GOOGLE_CAPTCHA_SECRET\": {\n      \"description\": \"Google captcha secret key\",\n      \"required\": true\n    },\n    \"GOOGLE_CAPTCHA_SITEKEY\": {\n      \"description\": \"Google captcha site key\",\n      \"required\": true\n    },\n    \"SLACK_COC\": {\n      \"description\": \"A URL to a Code of Conduct people must agree on before joining.\",\n      \"required\": false\n    },\n    \"SLACK_CHANNELS\": {\n      \"description\": \"Comma-separated list of single guest channels to invite them to (leave blank for a normal, all-channel invite). In order to make this work, you have to have a paid account. You'll only be able to invite as many people as your number of paying members times 5.\",\n      \"required\": false\n    }\n  }\n}\n"
        },
        {
          "name": "azuredeploy.json",
          "type": "blob",
          "size": 3.6572265625,
          "content": "{\n  \"$schema\": \"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"siteName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The name of the web app that you wish to create.\"\n      }\n    },\n    \"hostingPlanName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"The name of the App Service plan to use for hosting the web app.\"\n      }\n    },\n    \"siteLocation\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"West US\",\n      \"metadata\": {\n        \"description\": \"The location to use for creating the web app and hosting plan. It must be one of the Azure locations that support web apps.\"\n      }\n    },\n    \"repoURL\": {\n      \"type\": \"string\"\n    },\n    \"branch\": {\n      \"type\": \"string\"\n    },\n    \"slackTeamId\" : {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Slack Team ID. (e.g. https://{this}.slack.com)\"\n      }\n    },\n    \"slackApiToken\" : {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Slack API token (find it on https://api.slack.com/web)\"\n      }\n    },\n    \"slackinRelease\" : {\n      \"type\": \"string\",\n      \"allowedValues\": [\n        \"stable\",\n        \"latest\"\n      ],\n      \"defaultValue\": \"stable\",\n      \"metadata\": {\n        \"description\": \"Slackin Release to Deploy (stable/latest)\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"apiVersion\": \"2015-08-01\",\n      \"name\": \"[parameters('hostingPlanName')]\",\n      \"type\": \"Microsoft.Web/serverfarms\",\n      \"location\": \"[parameters('siteLocation')]\",\n      \"properties\": {\n      },\n      \"sku\": {\n        \"name\": \"F1\"\n      }\n    },\n    {\n      \"apiVersion\": \"2015-08-01\",\n      \"name\": \"[parameters('siteName')]\",\n      \"type\": \"Microsoft.Web/sites\",\n      \"location\": \"[parameters('siteLocation')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]\"\n      ],\n      \"properties\": {\n        \"serverFarmId\": \"[parameters('hostingPlanName')]\"\n      },\n      \"resources\": [\n        {\n          \"apiVersion\": \"2015-08-01\",\n          \"name\": \"web\",\n          \"type\": \"config\",\n          \"dependsOn\": [\n            \"[resourceId('Microsoft.Web/Sites', parameters('siteName'))]\"\n          ],\n          \"properties\": {\n            \"siteProperties\": {\n              \"webSocketsEnabled\": true\n            }\n          }\n        },\n        {\n          \"apiVersion\": \"2015-08-01\",\n          \"name\": \"appsettings\",\n          \"type\": \"config\",\n          \"dependsOn\": [\n            \"[resourceId('Microsoft.Web/Sites', parameters('siteName'))]\"\n          ],\n          \"properties\": {\n            \"SLACK_SUBDOMAIN\": \"[parameters('slackTeamId')]\",\n            \"SLACK_API_TOKEN\": \"[parameters('slackApiToken')]\",\n            \"SLACKIN_RELEASE\": \"[parameters('slackinRelease')]\",\n            \"WEBSITE_NPM_DEFAULT_VERSION\": \"3.3.12\",\n            \"WEBSITE_NODE_DEFAULT_VERSION\": \"5.1.1\",\n            \"command\": \"bash scripts/azuredeploy.sh\"\n          }\n        },\n        {\n          \"apiVersion\": \"2015-08-01\",\n          \"name\": \"web\",\n          \"type\": \"sourcecontrols\",\n          \"dependsOn\": [\n            \"[resourceId('Microsoft.Web/Sites', parameters('siteName'))]\",\n            \"[concat('Microsoft.Web/Sites/', parameters('siteName'), '/config/web')]\"\n          ],\n          \"properties\": {\n            \"RepoUrl\": \"[parameters('repoURL')]\",\n            \"branch\": \"[parameters('branch')]\",\n            \"IsManualIntegration\": true\n          }\n        }\n      ]\n    }\n  ],\n  \"outputs\": {\n     \"siteUri\": {\n       \"type\": \"string\",\n       \"value\": \"[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0])]\"\n     }\n  }\n}\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.babel.js",
          "type": "blob",
          "size": 0.5791015625,
          "content": "import gulp from 'gulp'\nimport babel from 'gulp-babel'\nimport rimraf from 'gulp-rimraf'\n\nconst paths = {\n  in: {\n    js: 'lib/*.js',\n    assets: 'lib/assets/*'\n  },\n  out: {\n    js: 'dist',\n    assets: 'dist/assets'\n  }\n}\n\ngulp.task('transpile', () => {\n  return gulp.src(paths.in.js)\n  .pipe(babel())\n  .pipe(gulp.dest(paths.out.js))\n})\n\ngulp.task('assets', () => {\n  return gulp.src(paths.in.assets)\n  .pipe(gulp.dest(paths.out.assets))\n})\n\ngulp.task('clean', () => {\n  return gulp.src(paths.out.js, {\n    read: false\n  })\n  .pipe(rimraf())\n})\n\ngulp.task('default', ['transpile', 'assets'])\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.md",
          "type": "blob",
          "size": 1.056640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Guillermo Rauch\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.802734375,
          "content": "{\n    \"name\": \"slackin\",\n    \"version\": \"0.14.0\",\n    \"description\": \"Public Slack organizations made easy\",\n    \"repository\": \"rauchg/slackin\",\n    \"main\": \"dist/index\",\n    \"files\": [\n        \"dist\",\n        \"bin\"\n    ],\n    \"babel\": {\n        \"presets\": [\n            \"es2015\"\n        ]\n    },\n    \"dependencies\": {\n        \"args\": \"1.3.0\",\n        \"babel-core\": \"6.3.26\",\n        \"babel-eslint\": \"6.0.4\",\n        \"babel-polyfill\": \"6.3.14\",\n        \"babel-preset-es2015\": \"6.3.13\",\n        \"babel-register\": \"6.9.0\",\n        \"body-parser\": \"1.10.2\",\n        \"cors\": \"2.7.1\",\n        \"debug\": \"3.0.1\",\n        \"email-regex\": \"1.0.0\",\n        \"express\": \"4.15.4\",\n        \"gulp-babel\": \"6.1.1\",\n        \"gulp-rimraf\": \"0.2.0\",\n        \"gulp\": \"3.9.0\",\n        \"hostenv\": \"1.0.1\",\n        \"opentype.js\": \"0.4.4\",\n        \"socket.io\": \"2.0.3\",\n        \"superagent\": \"3.6.0\",\n        \"vd\": \"0.1.0\"\n    },\n    \"license\": \"MIT\",\n    \"devDependencies\": {\n        \"eslint\": \"2.12.0\",\n        \"eslint-config-default\": \"0.2.0\",\n        \"mocha\": \"2.2.4\",\n        \"nock\": \"2.17.0\",\n        \"supertest\": \"0.15.0\"\n    },\n    \"engines\": {\n        \"node\": \"6.11.1\"\n    },\n    \"bin\": {\n        \"slackin\": \"./bin/slackin\"\n    },\n    \"eslintConfig\": {\n        \"extends\": \"default\",\n        \"parser\": \"babel-eslint\",\n        \"rules\": {\n            \"no-var\": 0\n        }\n    },\n    \"scripts\": {\n        \"test\": \"mocha && eslint lib/**\",\n        \"postinstall\": \"gulp\",\n        \"build\": \"gulp\",\n        \"start\": \"chmod +x bin/slackin && ./bin/slackin\"\n    },\n    \"now\": {\n        \"type\": \"npm\",\n        \"files\": [\n            \"bin\",\n            \"lib\",\n            \"gulpfile.babel.js\"\n        ],\n        \"env\": [\n            \"SLACK_API_TOKEN\",\n            \"SLACK_SUBDOMAIN\",\n            \"GOOGLE_CAPTCHA_SECRET\",\n            \"GOOGLE_CAPTCHA_SITEKEY\"\n        ]\n    }\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 2.08984375,
          "content": "![](https://github.com/zeit/art/blob/e081cf46e6609b51ac485dcc337ac6644c0da5e7/slackin/repo-banner.png)\n\n## Features\n\n- A landing page you can point users to fill in their emails and receive an invite (`https://slack.yourdomain.com`)\n- An `<iframe>` badge to embed on any website that shows connected users in *realtime* with socket.io.\n- A SVG badge that works well from static mediums (like GitHub README pages)\n- Abuse prevention via [Google reCAPTCHA](https://www.google.com/recaptcha/intro/)\n\n## Usage\n\n### Badges\n\n#### Realtime ([demo](https://cldup.com/IaiPnDEAA6.gif))\n\n```html\n<script async defer src=\"https://slack.yourdomain.com/slackin.js\"></script>\n<!-- append \"?large\" to the URL for the large version -->\n```\n\n#### SVG ([demo](https://cldup.com/jWUT4QFLnq.png))\n\n```html\n<img src=\"https://slack.yourdomain.com/badge.svg\">\n```\n\n## API\n\nLoading `slackin` will return a `Function` that creates a `HTTP.Server` instance:\n\n```js\nconst slackin = require('slackin')\n\nslackin.default({\n  token: 'yourtoken',                             // required\n  interval: 1000,\n  org: 'your-slack-subdomain',                    // required\n  path: '/some/path/you/host/slackin/under/',     // defaults to '/'\n  channels: 'channel,channel,...',                // for single channel mode\n  silent: false                                   // suppresses warnings\n}).listen(3000)\n```\n\nThis will show response times from Slack and how many online users you have on the console. The returned `http.Server` has an `app` property that is the `express` application that you can define or override routes on.\n\nAll the metadata for your organization can be fetched via a JSON HTTP request to `/data`.\n\n## Caught a Bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Uninstall slackin if it's already installed: `npm uninstall -g slack`\n3. Link it to the global module directory: `npm link`\n4. Transpile the source code and watch for changes: `npm start`\n\nYey! Now can use the `slack` command everywhere.\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "web.config",
          "type": "blob",
          "size": 2.794921875,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\n     This configuration file is required if iisnode is used to run node processes behind\n     IIS or IIS Express.  For more information, visit:\n\n     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config\n-->\n\n<configuration>\n  <system.webServer>\n    <!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support -->\n    <webSocket enabled=\"false\" />\n    <handlers>\n      <!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module -->\n      <add name=\"iisnode\" path=\"bin/slackin\" verb=\"*\" modules=\"iisnode\"/>\n    </handlers>\n    <rewrite>\n      <rules>\n        <rule name=\"RedirectToHTTPS\" stopProcessing=\"true\">\n            <match url=\"(.*)\" />\n            <conditions>\n                <add input=\"{HTTPS}\" pattern=\"off\" ignoreCase=\"true\" />\n            </conditions>\n            <action type=\"Redirect\" url=\"https://{SERVER_NAME}/{R:1}\" redirectType=\"Permanent\" />\n        </rule>\n                  \n        <!-- Do not interfere with requests for node-inspector debugging -->\n        <rule name=\"NodeInspector\" patternSyntax=\"ECMAScript\" stopProcessing=\"true\">\n          <match url=\"^bin/slackin\\/debug[\\/]?\" />\n        </rule>\n\n        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->\n        <rule name=\"StaticContent\">\n          <action type=\"Rewrite\" url=\"public{REQUEST_URI}\"/>\n        </rule>\n\n        <!-- All other URLs are mapped to the node.js site entry point -->\n        <rule name=\"DynamicContent\">\n          <conditions>\n            <add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"True\"/>\n          </conditions>\n          <action type=\"Rewrite\" url=\"bin/slackin\"/>\n        </rule>\n      </rules>\n    </rewrite>\n    \n    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->\n    <security>\n      <requestFiltering>\n        <hiddenSegments>\n          <remove segment=\"bin\"/>\n        </hiddenSegments>\n      </requestFiltering>\n    </security>\n\n    <!-- Make sure error responses are left untouched -->\n    <httpErrors existingResponse=\"PassThrough\" />\n\n    <!--\n      You can control how Node is hosted within IIS using the following options:\n        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server\n        * node_env: will be propagated to node as NODE_ENV environment variable\n        * debuggingEnabled - controls whether the built-in debugger is enabled\n\n      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options\n    -->\n    <!--<iisnode watchedFiles=\"web.config;*.js\"/>-->\n  </system.webServer>\n</configuration>"
        }
      ]
    }
  ]
}