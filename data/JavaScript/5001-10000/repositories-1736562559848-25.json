{
  "metadata": {
    "timestamp": 1736562559848,
    "page": 25,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cnodejs/nodeclub",
      "stars": 9336,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3271484375,
          "content": "config.js\n.cov\ncoverage\nnode_modules\n.naeindex\ncoverage.html\n.monitor\n\n*.min.*.js\n*.min.*.css\nassets.json\n\n# Ignore Mac OS desktop services store\n.DS_Store\n\n# Ignore Windows desktop setting file\ndesktop.ini\n\n# Ignore Redis snapshot\ndump.rdb\n\n*.log\n\n.idea\npublic/upload/*\n\n*.sublime-project\n*.sublime-workspace\n*.swp\n\npackage-lock.json\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.666015625,
          "content": "{\n  \"predef\": [\n    \"phantom\",\n    \"module\",\n    \"require\",\n    \"__dirname\",\n    \"process\",\n    \"console\",\n    \"it\",\n    \"describe\",\n    \"before\",\n    \"beforeEach\",\n    \"after\",\n    \"afterEach\",\n    \"ace\",\n    \"$\"\n  ],\n\n  \"browser\": true,\n  \"node\": true,\n  \"es5\": true,\n  \"bitwise\": true,\n  \"curly\": true,\n  \"eqeqeq\": true,\n  \"forin\": false,\n  \"immed\": true,\n  \"latedef\": true,\n  \"newcap\": true,\n  \"noarg\": true,\n  \"noempty\": true,\n  \"nonew\": true,\n  \"plusplus\": false,\n  \"undef\": true,\n  \"strict\": false,\n  \"trailing\": false,\n  \"globalstrict\": true,\n  \"nonstandard\": true,\n  \"white\": true,\n  \"indent\": 2,\n  \"expr\": true,\n  \"multistr\": true,\n  \"onevar\": false,\n  \"unused\": \"vars\"\n}\n"
        },
        {
          "name": ".mention-bot",
          "type": "blob",
          "size": 0.03515625,
          "content": "{\n  \"userBlacklist\": [\"huacnlee\"]\n}\n"
        },
        {
          "name": ".snyk",
          "type": "blob",
          "size": 0.29296875,
          "content": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.12.0\nignore: {}\n# patches apply the minimum changes required to fix a vulnerability\npatch:\n  'npm:tunnel-agent:20170305':\n    - jpush-sdk > request > tunnel-agent:\n        patched: '2018-07-01T04:07:14.342Z'\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.287109375,
          "content": "sudo: false\n\nlanguage: node_js\n\nenv:\n  - CXX=g++-4.8\n\nnode_js:\n  - stable\n\naddons:\n  apt:\n    sources:\n    - ubuntu-toolchain-r-test\n    packages:\n    - g++-4.8\n\nservices:\n  - mongodb\n  - redis\n\nbefore_install:\n  - $CXX --version\n\nscript: make test-cov\n\nafter_success: npm i codecov && codecov\n"
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 7.4873046875,
          "content": "2.1.0 / 2015-09-15\n==================\n\n* 使用 oneapm 代替 newrelic\n\n2.0.1 / 2015-08-07\n==================\n\n* 去掉【收藏功能】\n\n0.3.6 / 2013-11-22\n==================\n\n  * fix #237 if topic not exists, do not modified it.\n  * Merge pull request #230 from JacksonTian/fix_null\n  * 修复给空值设置属性的错误\n  * Merge pull request #224 from JacksonTian/config_ga\n  * 将Google tracker可配置化\n  * Merge pull request #223 from jiyinyiyong/ga\n  * add Google Analytics\n  * Merge pull request #217 from leizongmin/master\n  * 编辑器进入全屏模式时，调整一下样式\n  * hotfix sendAtMail\n  * fixed \"TypeError: Cannot read property author_id of null\"\n  * 使用七牛 gravatar.qiniudn.com 镜像\n  * Merge pull request #212 from tjwudi/master\n  * Fix 'title' textarea layout problem.\n  * Merge pull request #211 from tjwudi/master\n  * Add OS regular files to .gitignore\n  * Merge pull request #209 from leizongmin/master\n  * 解决打开Topic时自动跳到输入框问题\n  * Merge pull request #205 from jiyinyiyong/master\n  * Merge pull request #208 from leizongmin/master\n  * 帖子内容页面，增加表格样式\n  * 发布帖子使用 EpicEditor 编辑器\n  * xss白名单 增加thead标签\n  * Merge pull request #204 from JacksonTian/assets_issue\n  * limit the length of message to 20\n  * 兼容未启用压缩功能的情况\n  * Merge pull request #193 from dead-horse/fix-block-count\n  * fix block count\n  * Merge pull request #190 from leizongmin/master\n  * 修正用户收藏的话题页面，页码链接不正确问题\n  * Merge pull request #186 from phoenixlzx/master\n  * Fixed mongoose version\n  * Merge pull request #182 from JacksonTian/assets_mini\n  * 替换debug为mini\n  * Merge pull request #181 from JacksonTian/assets\n  * 用config.debug判断是否线上状态\n  * Merge pull request #180 from JacksonTian/assets\n  * 升级data2xml\n  * 静态资源重构\n  * Merge pull request #178 from JacksonTian/typo\n  * Node.JS => Node.js\n  * Merge pull request #177 from JacksonTian/style\n  * 文章页面的样式\n  * Fix几个样式问题\n  * fixed #175 stars max size\n  * fixed require package.json nae not support bug\n  * Merge pull request #174 from JacksonTian/style\n  * 去除用标签来制造空格的行为\n  * 更新样式\n  * Merge pull request #171 from jiyinyiyong/markdown-p\n  * limit image height\n  * limit pre-wrap inside p\n  * Merge pull request #165 from VitoLau/master\n  * 更新about faq页面结构\n  * 调整about和faq页面 padding大小\n  * Merge pull request #164 from jiyinyiyong/master\n  * fix: markdown-text use pre-wrap\n  * format indentations to 2\n  * limit the with of message links to prevent line breaks\n  * 修复文字过长没有换行的问题\n\n0.3.5 / 2013-05-30\n==================\n\n  * Update logo based on the new official one (@finian)\n  * UI more flatter; use \"white-space:pre\" to show spaces (@jiyinyiyong)\n  * fixed #161 xss process after markdown transfer\n  * 修复reply2的逻辑；暂时屏蔽标签功能\n  * use fixed-width font in reply\n  * a text align and a padding\n  * add padding to the read messages\n  * 点击回复数直接跳到最后一个回复\n  * 支持html\n  * fixed #154 消息跳转没有直接跳转到回复\n  * fixed #146 修复tag编辑bug\n  * 增加nae config\n  * 增加邮件提示内容\n  * read file sync package.json\n\n0.3.4 / 2013-05-27\n==================\n\n  * user markd instead showdown, use ace (@fengmk2)\n  * 使用加粗的边缘线; 过滤粉红色的边缘线; 加深 panel header 颜色; 去掉 scrollbar 定制 (@jiyinyiyong)\n  * 指定xss模块的配置信息，禁止HTML标签的style和class属性 (@lezongmin)\n  * shanzhai'd Github T3T (@jiyinyiyong)\n  * @jiyinyiyong 修改界面布局 fixed #139\n  * 添加话题详情主要内容的行高 (@kerngven)\n  * 增加POST提交时间间隔限制 (@leizongmin)\n  * 中英文间用空格\n  * 发帖页面优化\n  * 文本框高度不要闪烁\n  * use bootstrap 2; hide tags\n  * see the demo of new UI\n  * 搜索页面，如果回复时间过长，会产生断行的情况\n  * unit test cases\n  * #132 Add https:// validate on user.js cnodejs/nodeclub#132 (@meteormatt)\n  * Add 0.10 for travis\n  * fixed #107 update user links\n\n0.3.3 / 2013-03-11\n==================\n\n  * Merge pull request #126 from cnodejs/updateSignFlow\n  * 修复topic更新bug；修复@某人 bug\n  * reply2也可以定位到\n  * 修复node 0.6 test cases\n  * 修复删除评论异常\n  * 修复 exports.updateLastReply 没有callback的bug\n  * 管理员可以帮忙激活账号\n  * Merge pull request #125 from JacksonTian/refine\n  * Fix http to https\n  * 重构注册和发帖以及发邮件的部分\n  * Merge pull request #117 from JacksonTian/get_post\n  * 去除掉req.method的判断，分拆方法\n  * Merge pull request #122 from JacksonTian/proxy\n  * 分离controller和数据操作业务逻辑\n  * 改完下划线驼峰为小驼峰式风格\n  * Merge pull request #116 from JacksonTian/codingstyle\n  * Coding style refine.\n  * Merge pull request #113 from JacksonTian/master\n  * 添加依赖服务状态图标\n  * Merge pull request #112 from JacksonTian/refine\n  * 修正rewire.reset()导致的单元测试异常\n  * Refine coding style\n  * Merge pull request #111 from JacksonTian/master\n  * Merge pull request #110 from JacksonTian/reset_history\n  * Update Authors\n  * 恢复History.md文件\n  * Merge pull request #104 from ccding/master\n  * fix issue #27: lower case email address for gravatar\n  * Merge pull request #103 from ccding/master\n  * fix issue #92: email address with gmail label (\"+\" encode)\n  * fixed topic delete not post method security problem.\n  * empty author\n  * fixed author empty bug\n  * Merge pull request #99 from leizongmin/master\n  * 将Markdown中的H标题解析放到代码块解析后面\n  * Merge pull request #96 from leizongmin/master\n  * 修正无法正确解析http://127.0.0.1这样的IP地址链接\n  * fixed font\n  * fixed color style\n  * Merge pull request #87 from jiyinyiyong/rebased\n  * Merge pull request #91 from leizongmin/master\n  * 使用xss模块来过滤主题及回复内容\n  * update to 0.3.2\n  * Merge remote branch 'cnode/master'\n  * fix escape\n  * Merge pull request #89 from dead-horse/master\n  * fix test\n  * use  in node-validator\n  * Merge remote branch 'cnode/master'\n  * support block code\n  * Merge pull request #88 from dead-horse/master\n  * fix\n  * change @me to markdown\n  * fix @ bug in topic content\n  * Merge pull request #86 from dead-horse/master\n  * not escape html in\n  * add preview\n  * remove tags in topics of home page\n  * some css\n  * 合并通知按钮\n  * use escape replace of xss()\n  * fixed test cases\n  * Merge pull request #85 from dead-horse/master\n  * 过滤url允许绝对路径\n\n0.3.2 / 2012-03-04\n==================\n\n  * ensure IncomingForm.UPLOAD_DIR\n  * ensure upload image dir exists\n  * fixed csrf bug in mark message read\n  * remove customHost\n  * add .naeignore files\n  * * merge cnodeclub to nodeclub; * add more settings for custom site; * fixed upload.js not worked bug;\n  * Merge pull request #4 from dead-horse/master\n  * Merge pull request #11 from thebrecht/master\n  * 话题回复数纳入二级回复，样式调整\n  * 支持table,邮件提醒\n  * 加入亂數產生新密碼\n  * fix style\n  * bugs fixed\n  * Merge pull request #3 from LeToNode/master\n  * Merge pull request #6 from ericzhang-cn/master\n  * markdown语法粗体应为两个星号，原描述有误\n  * Merge pull request #2 from roymax/master\n  * change to async\n  * change to async\n  * Update README.md\n  * 修复`abc+label@gmail.com`格式的注册邮箱不能成功激活的问题\n  * commit\n  * project init\n  * first commit\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.017578125,
          "content": "(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.298828125,
          "content": "TESTS = $(shell find test -type f -name \"*.test.js\")\nTEST_TIMEOUT = 10000\nMOCHA_REPORTER = spec\n# NPM_REGISTRY = \"--registry=http://registry.npm.taobao.org\"\nNPM_REGISTRY = \"\"\n\n\nall: test\n\ninstall:\n\t@npm install $(NPM_REGISTRY)\n\npretest:\n\t@if ! test -f config.js; then \\\n\t\tcp config.default.js config.js; \\\n\tfi\n\t@if ! test -d public/upload; then \\\n\t\tmkdir public/upload; \\\n\tfi\n\ntest: install pretest\n\t@NODE_ENV=test ./node_modules/mocha/bin/mocha \\\n\t\t--reporter $(MOCHA_REPORTER) \\\n\t\t-r should \\\n\t\t-r test/env \\\n\t\t--timeout $(TEST_TIMEOUT) \\\n\t\t$(TESTS)\n\ntestfile:\n\t@NODE_ENV=test ./node_modules/mocha/bin/mocha \\\n\t\t--reporter $(MOCHA_REPORTER) \\\n\t\t-r should \\\n\t\t-r test/env \\\n\t\t--timeout $(TEST_TIMEOUT) \\\n\t\t$(FILE)\n\ntest-cov cov: install pretest\n\t@NODE_ENV=test node \\\n\t\tnode_modules/.bin/istanbul cover --preserve-comments \\\n\t\t./node_modules/.bin/_mocha \\\n\t\t-- \\\n\t\t-r should \\\n\t\t-r test/env \\\n\t\t--reporter $(MOCHA_REPORTER) \\\n\t\t--timeout $(TEST_TIMEOUT) \\\n\t\t$(TESTS)\n\n\nbuild:\n\t@./node_modules/loader-builder/bin/builder views .\n\nrun:\n\t@node app.js\n\nstart: install build\n\t@NODE_ENV=production ./node_modules/.bin/pm2 start app.js -i 0 --name \"cnode\" --max-memory-restart 400M\n\nrestart: install build\n\t@NODE_ENV=production ./node_modules/.bin/pm2 restart \"cnode\"\n\n.PHONY: install test testfile cov test-cov build run start restart\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.75,
          "content": "Nodeclub\n=\n\n[![build status][travis-image]][travis-url]\n[![codecov.io][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![node version][node-image]][node-url]\n\n[travis-image]: https://img.shields.io/travis/cnodejs/nodeclub/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/cnodejs/nodeclub\n[codecov-image]: https://img.shields.io/codecov/c/github/cnodejs/nodeclub/master.svg?style=flat-square\n[codecov-url]: https://codecov.io/github/cnodejs/nodeclub?branch=master\n[david-image]: https://img.shields.io/david/cnodejs/nodeclub.svg?style=flat-square\n[david-url]: https://david-dm.org/cnodejs/nodeclub\n[node-image]: https://img.shields.io/badge/node.js-%3E=_4.2-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n\n## 介绍\n\nNodeclub 是使用 **Node.js** 和 **MongoDB** 开发的社区系统，界面优雅，功能丰富，小巧迅速，\n已在Node.js 中文技术社区 [CNode(http://cnodejs.org)](http://cnodejs.org) 得到应用，但你完全可以用它搭建自己的社区。\n\n## 安装部署\n\n*不保证 Windows 系统的兼容性*\n\n线上跑的是 [Node.js](https://nodejs.org) v8.12.0，[MongoDB](https://www.mongodb.org) 是 v4.0.3，[Redis](http://redis.io) 是 v4.0.9。\n\n```\n1. 安装 `Node.js[必须]` `MongoDB[必须]` `Redis[必须]`\n2. 启动 MongoDB 和 Redis\n3. `$ make install` 安装 Nodeclub 的依赖包\n4. `cp config.default.js config.js` 请根据需要修改配置文件\n5. `$ make test` 确保各项服务都正常\n6. `$ node app.js`\n7. visit `http://localhost:3000`\n8. done!\n```\n\n## 测试\n\n跑测试\n\n```bash\n$ make test\n```\n\n跑覆盖率测试\n\n```bash\n$ make test-cov\n```\n\n## 贡献\n\n有任何意见或建议都欢迎提 issue，或者直接提给 [@alsotang](https://github.com/alsotang)\n\n## License\n\nMIT\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "api_router_v1.js",
          "type": "blob",
          "size": 1.935546875,
          "content": "var express           = require('express');\nvar topicController   = require('./api/v1/topic');\nvar topicCollectController   = require('./api/v1/topic_collect');\nvar userController    = require('./api/v1/user');\nvar toolsController   = require('./api/v1/tools');\nvar replyController   = require('./api/v1/reply');\nvar messageController = require('./api/v1/message');\nvar middleware        = require('./api/v1/middleware');\nvar limit             = require('./middlewares/limit');\nvar config            = require('./config');\n\nvar router            = express.Router();\n\n\n// 主题\nrouter.get('/topics', topicController.index);\nrouter.get('/topic/:id', middleware.tryAuth, topicController.show);\nrouter.post('/topics', middleware.auth, limit.peruserperday('create_topic', config.create_post_per_day, {showJson: true}), topicController.create);\nrouter.post('/topics/update', middleware.auth, topicController.update);\n\n\n// 主题收藏\nrouter.post('/topic_collect/collect', middleware.auth, topicCollectController.collect); // 关注某话题\nrouter.post('/topic_collect/de_collect', middleware.auth, topicCollectController.de_collect); // 取消关注某话题\nrouter.get('/topic_collect/:loginname', topicCollectController.list);\n\n// 用户\nrouter.get('/user/:loginname', userController.show);\n\n\n\n// accessToken 测试\nrouter.post('/accesstoken', middleware.auth, toolsController.accesstoken);\n\n// 评论\nrouter.post('/topic/:topic_id/replies', middleware.auth, limit.peruserperday('create_reply', config.create_reply_per_day, {showJson: true}), replyController.create);\nrouter.post('/reply/:reply_id/ups', middleware.auth, replyController.ups);\n\n// 通知\nrouter.get('/messages', middleware.auth, messageController.index);\nrouter.get('/message/count', middleware.auth, messageController.count);\nrouter.post('/message/mark_all', middleware.auth, messageController.markAll);\nrouter.post('/message/mark_one/:msg_id', middleware.auth, messageController.markOne);\n\nmodule.exports = router;\n"
        },
        {
          "name": "app.js",
          "type": "blob",
          "size": 4.509765625,
          "content": "/*!\n * nodeclub - app.js\n */\n\n/**\n * Module dependencies.\n */\n\nvar config = require('./config');\n\nif (!config.debug && config.oneapm_key) {\n  require('oneapm');\n}\n\nrequire('colors');\nvar path = require('path');\nvar Loader = require('loader');\nvar LoaderConnect = require('loader-connect')\nvar express = require('express');\nvar session = require('express-session');\nvar passport = require('passport');\nrequire('./middlewares/mongoose_log'); // 打印 mongodb 查询日志\nrequire('./models');\nvar GitHubStrategy = require('passport-github').Strategy;\nvar githubStrategyMiddleware = require('./middlewares/github_strategy');\nvar webRouter = require('./web_router');\nvar apiRouterV1 = require('./api_router_v1');\nvar auth = require('./middlewares/auth');\nvar errorPageMiddleware = require('./middlewares/error_page');\nvar proxyMiddleware = require('./middlewares/proxy');\nvar RedisStore = require('connect-redis')(session);\nvar _ = require('lodash');\nvar csurf = require('csurf');\nvar compress = require('compression');\nvar bodyParser = require('body-parser');\nvar busboy = require('connect-busboy');\nvar errorhandler = require('errorhandler');\nvar cors = require('cors');\nvar requestLog = require('./middlewares/request_log');\nvar renderMiddleware = require('./middlewares/render');\nvar logger = require('./common/logger');\nvar helmet = require('helmet');\nvar bytes = require('bytes')\n\n\n// 静态文件目录\nvar staticDir = path.join(__dirname, 'public');\n// assets\nvar assets = {};\n\nif (config.mini_assets) {\n  try {\n    assets = require('./assets.json');\n  } catch (e) {\n    logger.error('You must execute `make build` before start app when mini_assets is true.');\n    throw e;\n  }\n}\n\nvar urlinfo = require('url').parse(config.host);\nconfig.hostname = urlinfo.hostname || config.host;\n\nvar app = express();\n\n// configuration in all env\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'html');\napp.engine('html', require('ejs-mate'));\napp.locals._layoutFile = 'layout.html';\napp.enable('trust proxy');\n\n// Request logger。请求时间\napp.use(requestLog);\n\nif (config.debug) {\n  // 渲染时间\n  app.use(renderMiddleware.render);\n}\n\n// 静态资源\nif (config.debug) {\n  app.use(LoaderConnect.less(__dirname)); // 测试环境用，编译 .less on the fly\n}\napp.use('/public', express.static(staticDir));\napp.use('/agent', proxyMiddleware.proxy);\n\n// 通用的中间件\napp.use(require('response-time')());\napp.use(helmet.frameguard('sameorigin'));\napp.use(bodyParser.json({limit: '1mb'}));\napp.use(bodyParser.urlencoded({ extended: true, limit: '1mb' }));\napp.use(require('method-override')());\napp.use(require('cookie-parser')(config.session_secret));\napp.use(compress());\napp.use(session({\n  secret: config.session_secret,\n  store: new RedisStore({\n    port: config.redis_port,\n    host: config.redis_host,\n    db: config.redis_db,\n    pass: config.redis_password,\n  }),\n  resave: false,\n  saveUninitialized: false,\n}));\n\n// oauth 中间件\napp.use(passport.initialize());\n\n// github oauth\npassport.serializeUser(function (user, done) {\n  done(null, user);\n});\npassport.deserializeUser(function (user, done) {\n  done(null, user);\n});\npassport.use(new GitHubStrategy(config.GITHUB_OAUTH, githubStrategyMiddleware));\n\n// custom middleware\napp.use(auth.authUser);\napp.use(auth.blockUser());\n\nif (!config.debug) {\n  app.use(function (req, res, next) {\n    if (req.path === '/api' || req.path.indexOf('/api') === -1) {\n      csurf()(req, res, next);\n      return;\n    }\n    next();\n  });\n  app.set('view cache', true);\n}\n\n// for debug\n// app.get('/err', function (req, res, next) {\n//   next(new Error('haha'))\n// });\n\n// set static, dynamic helpers\n_.extend(app.locals, {\n  config: config,\n  Loader: Loader,\n  assets: assets\n});\n\napp.use(errorPageMiddleware.errorPage);\n_.extend(app.locals, require('./common/render_helper'));\napp.use(function (req, res, next) {\n  res.locals.csrf = req.csrfToken ? req.csrfToken() : '';\n  next();\n});\n\napp.use(busboy({\n  limits: {\n    fileSize: bytes(config.file_limit)\n  }\n}));\n\n// routes\napp.use('/api/v1', cors(), apiRouterV1);\napp.use('/', webRouter);\n\n// error handler\nif (config.debug) {\n  app.use(errorhandler());\n} else {\n  app.use(function (err, req, res, next) {\n    logger.error(err);\n    return res.status(500).send('500 status');\n  });\n}\n\nif (!module.parent) {\n  app.listen(config.port, function () {\n    logger.info('NodeClub listening on port', config.port);\n    logger.info('God bless love....');\n    logger.info('You can debug your app with http://' + config.hostname + ':' + config.port);\n    logger.info('');\n  });\n}\n\nmodule.exports = app;\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.default.js",
          "type": "blob",
          "size": 3.7314453125,
          "content": "/**\n * config\n */\n\nvar path = require('path');\n\nvar config = {\n  // debug 为 true 时，用于本地调试\n  debug: true,\n\n  get mini_assets() { return !this.debug; }, // 是否启用静态文件的合并压缩，详见视图中的Loader\n\n  name: 'Nodeclub', // 社区名字\n  description: 'CNode：Node.js专业中文社区', // 社区的描述\n  keywords: 'nodejs, node, express, connect, socket.io',\n\n  // 添加到 html head 中的信息\n  site_headers: [\n    '<meta name=\"author\" content=\"EDP@TAOBAO\" />'\n  ],\n  site_logo: '/public/images/cnodejs_light.svg', // default is `name`\n  site_icon: '/public/images/cnode_icon_32.png', // 默认没有 favicon, 这里填写网址\n  // 右上角的导航区\n  site_navs: [\n    // 格式 [ path, title, [target=''] ]\n    [ '/about', '关于' ]\n  ],\n  // cdn host，如 http://cnodejs.qiniudn.com\n  site_static_host: '', // 静态文件存储域名\n  // 社区的域名\n  host: 'localhost',\n  // 默认的Google tracker ID，自有站点请修改，申请地址：http://www.google.com/analytics/\n  google_tracker_id: '',\n  // 默认的cnzz tracker ID，自有站点请修改\n  cnzz_tracker_id: '',\n\n  // mongodb 配置\n  db: 'mongodb://127.0.0.1/node_club_dev',\n\n  // redis 配置，默认是本地\n  redis_host: '127.0.0.1',\n  redis_port: 6379,\n  redis_db: 0,\n  redis_password: '',\n\n  session_secret: 'node_club_secret', // 务必修改\n  auth_cookie_name: 'node_club',\n\n  // 程序运行的端口\n  port: 3000,\n\n  // 话题列表显示的话题数量\n  list_topic_count: 20,\n\n  // RSS配置\n  rss: {\n    title: 'CNode：Node.js专业中文社区',\n    link: 'http://cnodejs.org',\n    language: 'zh-cn',\n    description: 'CNode：Node.js专业中文社区',\n    //最多获取的RSS Item数量\n    max_rss_items: 50\n  },\n\n  log_dir: path.join(__dirname, 'logs'),\n\n  // 邮箱配置\n  mail_opts: {\n    host: 'smtp.126.com',\n    port: 25,\n    auth: {\n      user: 'club@126.com',\n      pass: 'club'\n    },\n    ignoreTLS: true,\n  },\n\n  //weibo app key\n  weibo_key: 10000000,\n  weibo_id: 'your_weibo_id',\n\n  // admin 可删除话题，编辑标签。把 user_login_name 换成你的登录名\n  admins: { user_login_name: true },\n\n  // github 登陆的配置\n  GITHUB_OAUTH: {\n    clientID: 'your GITHUB_CLIENT_ID',\n    clientSecret: 'your GITHUB_CLIENT_SECRET',\n    callbackURL: 'http://cnodejs.org/auth/github/callback'\n  },\n  // 是否允许直接注册（否则只能走 github 的方式）\n  allow_sign_up: true,\n\n  // oneapm 是个用来监控网站性能的服务\n  oneapm_key: '',\n\n  // 下面两个配置都是文件上传的配置\n\n  // 7牛的access信息，用于文件上传\n  qn_access: {\n    accessKey: 'your access key',\n    secretKey: 'your secret key',\n    bucket: 'your bucket name',\n    origin: 'http://your qiniu domain',\n    // 如果vps在国外，请使用 http://up.qiniug.com/ ，这是七牛的国际节点\n    // 如果在国内，此项请留空\n    uploadURL: 'http://xxxxxxxx',\n  },\n\n  // 文件上传配置\n  // 注：如果填写 qn_access，则会上传到 7牛，以下配置无效\n  upload: {\n    path: path.join(__dirname, 'public/upload/'),\n    url: '/public/upload/'\n  },\n\n  file_limit: '1MB',\n\n  // 版块\n  tabs: [\n    ['share', '分享'],\n    ['ask', '问答'],\n    ['job', '招聘'],\n  ],\n\n  // 极光推送\n  jpush: {\n    appKey: 'YourAccessKeyyyyyyyyyyyy',\n    masterSecret: 'YourSecretKeyyyyyyyyyyyyy',\n    isDebug: false,\n  },\n\n  create_post_per_day: 1000, // 每个用户一天可以发的主题数\n  create_reply_per_day: 1000, // 每个用户一天可以发的评论数\n  create_user_per_ip: 1000, // 每个 ip 每天可以注册账号的次数\n  visit_per_day: 1000, // 每个 ip 每天能访问的次数\n};\n\nif (process.env.NODE_ENV === 'test') {\n  config.db = 'mongodb://127.0.0.1/node_club_test';\n}\n\nmodule.exports = config;\n"
        },
        {
          "name": "controllers",
          "type": "tree",
          "content": null
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "middlewares",
          "type": "tree",
          "content": null
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "oneapm.js",
          "type": "blob",
          "size": 0.6767578125,
          "content": "/**\n * OneAPM agent configuration.\n *\n * See lib/config.defaults.js in the agent distribution for a more complete\n * description of configuration variables and their potential values.\n */\n\nvar config = require('./config');\n\nexports.config = {\n  /**\n   * Array of application names.\n   */\n  app_name : [config.name],\n  /**\n   * Your OneAPM license key.\n   */\n  license_key : config.oneapm_key,\n  logging : {\n    /**\n     * Level at which to log. 'trace' is most useful to OneAPM when diagnosing\n     * issues with the agent, 'info' and higher will impose the least overhead on\n     * production applications.\n     */\n    level : 'info'\n  },\n  transaction_events: {\n        enabled: true\n  }\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.7490234375,
          "content": "{\n  \"name\": \"nodeclub\",\n  \"version\": \"2.1.1\",\n  \"private\": true,\n  \"main\": \"app.js\",\n  \"description\": \"A Node.js bbs using MongoDB\",\n  \"repository\": \"https://github.com/cnodejs/nodeclub\",\n  \"dependencies\": {\n    \"async\": \"1.5.2\",\n    \"bcryptjs\": \"2.3.0\",\n    \"body-parser\": \"1.17.1\",\n    \"bytes\": \"^2.2.0\",\n    \"colors\": \"1.1.2\",\n    \"compression\": \"1.7.0\",\n    \"connect-busboy\": \"0.0.2\",\n    \"connect-redis\": \"3.0.2\",\n    \"cookie-parser\": \"1.4.1\",\n    \"cors\": \"2.7.1\",\n    \"csurf\": \"1.8.3\",\n    \"data2xml\": \"1.2.4\",\n    \"ejs-mate\": \"2.3.0\",\n    \"eventproxy\": \"1.0.0\",\n    \"express\": \"4.16.0\",\n    \"express-session\": \"1.12.1\",\n    \"helmet\": \"1.3.0\",\n    \"ioredis\": \"2.0.0\",\n    \"jpush-sdk\": \"3.3.2\",\n    \"loader-builder\": \"2.4.1\",\n    \"loader\": \"2.1.1\",\n    \"lodash\": \"4.17.21\",\n    \"log4js\": \"^0.6.29\",\n    \"markdown-it\": \"6.0.0\",\n    \"memory-cache\": \"0.1.4\",\n    \"method-override\": \"2.3.5\",\n    \"moment\": \"2.15.2\",\n    \"mongoose\": \"5.3.9\",\n    \"multiline\": \"1.0.2\",\n    \"node-uuid\": \"1.4.7\",\n    \"nodemailer\": \"2.3.0\",\n    \"nodemailer-smtp-transport\": \"2.4.0\",\n    \"oneapm\": \"1.2.20\",\n    \"passport\": \"0.3.2\",\n    \"passport-github\": \"1.1.0\",\n    \"pm2\": \"*\",\n    \"qn\": \"1.3.0\",\n    \"ready\": \"0.1.1\",\n    \"request\": \"2.81.0\",\n    \"response-time\": \"2.3.1\",\n    \"superagent\": \"2.0.0\",\n    \"utility\": \"1.6.0\",\n    \"validator\": \"5.1.0\",\n    \"xmlbuilder\": \"7.0.0\",\n    \"xss\": \"0.2.10\",\n    \"snyk\": \"^1.88.0\"\n  },\n  \"devDependencies\": {\n    \"errorhandler\": \"1.4.3\",\n    \"istanbul\": \"0.4.2\",\n    \"loader-connect\": \"1.0.1\",\n    \"mm\": \"1.3.5\",\n    \"mocha\": \"2.4.5\",\n    \"nock\": \"7.5.0\",\n    \"pedding\": \"1.0.0\",\n    \"should\": \"8.3.0\",\n    \"supertest\": \"1.2.0\"\n  },\n  \"scripts\": {\n    \"test\": \"make test\",\n    \"snyk-protect\": \"snyk protect\",\n    \"prepare\": \"npm run snyk-protect\"\n  },\n  \"snyk\": true\n}\n"
        },
        {
          "name": "proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "views",
          "type": "tree",
          "content": null
        },
        {
          "name": "web_router.js",
          "type": "blob",
          "size": 5.5322265625,
          "content": "/*!\n * nodeclub - route.js\n * Copyright(c) 2012 fengmk2 <fengmk2@gmail.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar express = require('express');\nvar sign = require('./controllers/sign');\nvar site = require('./controllers/site');\nvar user = require('./controllers/user');\nvar message = require('./controllers/message');\nvar topic = require('./controllers/topic');\nvar reply = require('./controllers/reply');\nvar rss = require('./controllers/rss');\nvar staticController = require('./controllers/static');\nvar auth = require('./middlewares/auth');\nvar limit = require('./middlewares/limit');\nvar github = require('./controllers/github');\nvar search = require('./controllers/search');\nvar passport = require('passport');\nvar configMiddleware = require('./middlewares/conf');\nvar config = require('./config');\n\nvar router = express.Router();\n\n// home page\nrouter.get('/', site.index);\n// sitemap\nrouter.get('/sitemap.xml', site.sitemap);\n// mobile app download\nrouter.get('/app/download', site.appDownload);\n\n// sign controller\nif (config.allow_sign_up) {\n  router.get('/signup', sign.showSignup);  // 跳转到注册页面\n  router.post('/signup', sign.signup);  // 提交注册信息\n} else {\n  // 进行github验证\n  router.get('/signup', function (req, res, next) {\n    return res.redirect('/auth/github')\n  });\n}\nrouter.post('/signout', sign.signout);  // 登出\nrouter.get('/signin', sign.showLogin);  // 进入登录页面\nrouter.post('/signin', sign.login);  // 登录校验\nrouter.get('/active_account', sign.activeAccount);  //帐号激活\n\nrouter.get('/search_pass', sign.showSearchPass);  // 找回密码页面\nrouter.post('/search_pass', sign.updateSearchPass);  // 更新密码\nrouter.get('/reset_pass', sign.resetPass);  // 进入重置密码页面\nrouter.post('/reset_pass', sign.updatePass);  // 更新密码\n\n// user controller\nrouter.get('/user/:name', user.index); // 用户个人主页\nrouter.get('/setting', auth.userRequired, user.showSetting); // 用户个人设置页\nrouter.post('/setting', auth.userRequired, user.setting); // 提交个人信息设置\nrouter.get('/stars', user.listStars); // 显示所有达人列表页\nrouter.get('/users/top100', user.top100);  // 显示积分前一百用户页\nrouter.get('/user/:name/collections', user.listCollectedTopics);  // 用户收藏的所有话题页\nrouter.get('/user/:name/topics', user.listTopics);  // 用户发布的所有话题页\nrouter.get('/user/:name/replies', user.listReplies);  // 用户参与的所有回复页\nrouter.post('/user/set_star', auth.adminRequired, user.toggleStar); // 把某用户设为达人\nrouter.post('/user/cancel_star', auth.adminRequired, user.toggleStar);  // 取消某用户的达人身份\nrouter.post('/user/:name/block', auth.adminRequired, user.block);  // 禁言某用户\nrouter.post('/user/:name/delete_all', auth.adminRequired, user.deleteAll);  // 删除某用户所有发言\nrouter.post('/user/refresh_token', auth.userRequired, user.refreshToken);  // 刷新用户token\n\n// message controler\nrouter.get('/my/messages', auth.userRequired, message.index); // 用户个人的所有消息页\n\n// topic\n\n// 新建文章界面\nrouter.get('/topic/create', auth.userRequired, topic.create);\n\nrouter.get('/topic/:tid', topic.index);  // 显示某个话题\nrouter.post('/topic/:tid/top', auth.adminRequired, topic.top);  // 将某话题置顶\nrouter.post('/topic/:tid/good', auth.adminRequired, topic.good); // 将某话题加精\nrouter.get('/topic/:tid/edit', auth.userRequired, topic.showEdit);  // 编辑某话题\nrouter.post('/topic/:tid/lock', auth.adminRequired, topic.lock); // 锁定主题，不能再回复\n\nrouter.post('/topic/:tid/delete', auth.userRequired, topic.delete);\n\n// 保存新建的文章\nrouter.post('/topic/create', auth.userRequired, limit.peruserperday('create_topic', config.create_post_per_day, {showJson: false}), topic.put);\n\nrouter.post('/topic/:tid/edit', auth.userRequired, topic.update);\nrouter.post('/topic/collect', auth.userRequired, topic.collect); // 关注某话题\nrouter.post('/topic/de_collect', auth.userRequired, topic.de_collect); // 取消关注某话题\n\n// reply controller\nrouter.post('/:topic_id/reply', auth.userRequired, limit.peruserperday('create_reply', config.create_reply_per_day, {showJson: false}), reply.add); // 提交一级回复\nrouter.get('/reply/:reply_id/edit', auth.userRequired, reply.showEdit); // 修改自己的评论页\nrouter.post('/reply/:reply_id/edit', auth.userRequired, reply.update); // 修改某评论\nrouter.post('/reply/:reply_id/delete', auth.userRequired, reply.delete); // 删除某评论\nrouter.post('/reply/:reply_id/up', auth.userRequired, reply.up); // 为评论点赞\nrouter.post('/upload', auth.userRequired, topic.upload); //上传图片\n\n// static\nrouter.get('/about', staticController.about);\nrouter.get('/faq', staticController.faq);\nrouter.get('/getstart', staticController.getstart);\nrouter.get('/robots.txt', staticController.robots);\nrouter.get('/api', staticController.api);\n\n//rss\nrouter.get('/rss', rss.index);\n\n// github oauth\nrouter.get('/auth/github', configMiddleware.github, passport.authenticate('github'));\nrouter.get('/auth/github/callback',\n  passport.authenticate('github', { failureRedirect: '/signin' }),\n  github.callback);\nrouter.get('/auth/github/new', github.new);\nrouter.post('/auth/github/create', limit.peripperday('create_user_per_ip', config.create_user_per_ip, {showJson: false}), github.create);\n\nrouter.get('/search', search.index);\n\nif (!config.debug) { // 这个兼容破坏了不少测试\n\trouter.get('/:name', function (req, res) {\n\t  res.redirect('/user/' + req.params.name)\n\t})\n}\n\n\nmodule.exports = router;\n"
        }
      ]
    }
  ]
}