{
  "metadata": {
    "timestamp": 1736562616010,
    "page": 100,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "adrai/flowchart.js",
      "stars": 8589,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": "**/node_modules/\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.1533203125,
          "content": "{\n  \"extends\": \"defaults\",\n\n  \"env\": {\n    \"browser\": true,\n    \"node\": true\n  },\n\n  \"globals\": {\n    \"$\": true\n  },\n\n  \"rules\": {\n    \"no-console\": 0\n  }\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2490234375,
          "content": "$ cat .gitignore\n\n# Can ignore specific files\n.settings.xml\n.monitor\n.DS_Store\n.idea\n\n# Use wildcards as well\n*~\n#*.swp\n\n# Can also ignore all directories and files in a directory.\nnode_modules\nnode_modules/**/*\nbin\nreports\nreports/**/*\npackage-lock.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0751953125,
          "content": "[submodule \"site\"]\n\tpath = site\n\turl = git@github.com:adrai/flowchart.js.git\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.130859375,
          "content": "example\nimgs\nsite\nrelease\nbin\nreleasenotes.md\nwebpack.config.js\nindex.html\ndevserver.js\nbower.json\n.eslintignore\n.eslintrc\n.gitmodules"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2548828125,
          "content": "[![JS.ORG](https://img.shields.io/badge/js.org-flowchart-ffb400.svg?style=flat-square)](http://js.org)\n\n# [flowchart.js](http://flowchart.js.org)\n\nflowchart.js is a flowchart DSL and SVG render that runs in the browser and [terminal](https://github.com/francoislaberge/diagrams/#flowchart).\n\nNodes and connections are defined separately so that nodes can be reused and connections can be quickly changed.\nFine grain changes to node and connection style can also be made right in the DSL.\n\n## Example\n\n```flowchart\nst=>start: Start:>http://www.google.com[blank]\ne=>end:>http://www.google.com\ngetInfo=>input: Input Info\nop1=>operation: My Operation\nsub1=>subroutine: My Subroutine\ncond=>condition: Yes\nor No?:>http://www.google.com\nio=>inputoutput: catch something...\nprintInfo=>output: Print info\npara=>parallel: parallel tasks\n\nst->getInfo->op1->cond\ncond(yes)->io->printInfo->e\ncond(no)->para\npara(path1, bottom)->sub1(right)->op1\npara(path2, top)->op1\n```\n\n![Example Flowchart](/imgs/example.svg)\n\n## CLI\nSee [francoislaberge/diagrams](https://github.com/francoislaberge/diagrams/#flowchart) on how to flowchart.js in the terminal.\n\n## Browser Usage\n\nflowchart.js is on [CDNJS](https://cdnjs.com/libraries/flowchart), feel free to use it.\n\nYou will also need [RaphaÃ«l](http://www.raphaeljs.com/), which is also on [CDNJS](https://cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js).\n\nThe demo html page is at [example/index.html](example/index.html).\n\n## Node Syntax\n`nodeName=>nodeType: nodeText[|flowstate][:>urlLink]`\n\nItems in `[]` are optional.\n\n_nodeName_ defines the nodes variable name within the flowchart document.\n\n_nodeType_ defines what type the node is. See **Node Types** for more information.\n\n_nodeText_ is the text that will be inserted into the node. Newlines are allowed and will be reflected in the rendered node text.\n\n_flowstate_ is optional and uses the `|` operator that specifies extra styling for the node.\n\n_urlLink_ is optional and uses the `:>` operator to specify the url to link to.\n\n## Node Types\nDefines the shape that the node will take.\n\n### start\nUsed as the first node where flows start from.\nDefault text is `Start`.\n\n![start image](imgs/start.png \"start image\")\n\n```flowchart\nst=>start: start\n```\n\n### end\nUsed as the last node where a flow ends.\nDefault text is `End`.\n\n![end image](imgs/end.png \"end image\")\n\n```flowchart\ne=>end: end\n```\n\n### operation\nIndicates that an operation needs to happen in the flow.\n\n![operation image](imgs/operation.png \"operation image\")\n\n```flowchart\nop1=>operation: operation\n```\n\n### inputoutput\nIndicates that IO happens in a flow.\n\n![inputoutput image](imgs/inputoutput.png \"inputoutput image\")\n\n```flowchart\nio=>inputoutput: inputoutput\n```\n\n### input\nIndicates that Input happens in a flow.\n\n![input image](imgs/input.png \"input image\")\n\n```flowchart\ngetInfo=>input: Input info\n```\n\n### output\nIndicates that Output happens in a flow.\n\n![output image](imgs/output.png \"output image\")\n\n```flowchart\nprintInfo=>output: Print info\n```\n\n### subroutine\nIndicates that a subroutine happens in the flow and that there should be another flowchart that documents this subroutine.\n\n![subroutine image](imgs/subroutine.png \"subroutine image\")\n\n```flowchart\nsub1=>subroutine: subroutine\n```\n\n### condition\nAllows for a conditional or logical statement to direct the flow into one of two paths.\n\n![condition image](imgs/condition.png \"condition image\")\n\n```flowchart\ncond=>condition: condition\nYes or No?\n```\n\n### parallel\nAllows for multiple flows to happen simultaneously.\n\n![parallel image](imgs/parallel.png \"parallel image\")\n\n```flowchart\npara=>parallel: parallel\n```\n\n## Connections\nConnections are defined in their own section below the node definitions.\nThe `->` operator specifies a connection from one node to another like `nodeVar1->nodeVar2->nodeVar3`.\n\nNot all nodes need to be specified in one string and can be separaged like so\n\n```flowchart\nnodeVar1->nodeVar2\nnodeVar2->nodeVar3\n```\n\nConnection syntax is as follows:\n\n`<node variable name>[(<specification1>[, <specification2])]-><node variable name>[[(<specification1>[, <specification2])]-><node variable name>]`\n\nItems in `[]` are optional.\n\n### Directions\nThe following directions are available and define the direction the connection will leave the node from. If there are more than one specifiers, it is always the last. All nodes have a default direction making this an optional specification. `<direction>` will be used to indicate that one of the following should be used in its place.\n\n* left\n* right\n* top\n* bottom\n\n### Node Specific Specifiers by Type\nEach node variables has optional specifiers, like direction, and some have special specifiers depending on the node type that are defined below. Specifiers are added after the variable name in `()` and separated with `,` like `nodeVar(spec1, spec2)`.\n\n### start\nOptional direction\n\n`startVar(<direction>)->nextNode`\n\n### end\nNo specifications because connections only go to the end node and do not leave from it.\n\n`previousNode->endVar`\n\n### operation\nOptional direction\n\n`operationVar(<direction>)->nextNode`\n\n### inputoutput\nOptional direction\n\n`inputoutputVar(<direction>)->nextNode`\n\n### subroutine\nOptional direction\n\n`subroutineVar(<direction>)->nextNode`\n\n### condition\nRequired logical specification of `yes` or `no`\n\nOptional direction\n\n```flowchart\nconditionalVar(yes, <direction>)->nextNode1\nconditionalVar(no,  <direction>)->nextNode2\n```\n\n### parallel\nRequired path specification of `path1`, `path2`, or `path3`\n\nOptional direction\n\n```flowchart\nparallelVar(path1, <direction>)->nextNode1\nparallelVar(path2, <direction>)->nextNode2\nparallelVar(path3, <direction>)->nextNode3\n```\n\n## Links\nA external link can be added to a node with the `:>` operator.\n\nThe `st` node is linked to `http://www.google.com` and will open a new tab because `[blank]` is at the end of the URL.\n\nThe `e` node is linked to `http://www.yahoo.com` and will cause the page to navigate to that page instead of opening a new tab.\n\n```flowchart\nst=>start: Start:>http://www.google.com[blank]\ne=>end: End:>http://www.yahoo.com\n```\n\n## Advice\nSymbols that should possibly not be used in the text: `=>` and `->` and `:>` and `|` and `@>` and `:$`\n\nIf you want to emphasize a specific path in your flowchart, you can additionally define it like this:\n\n```\nst@>op1({\"stroke\":\"Red\"})@>cond({\"stroke\":\"Red\",\"stroke-width\":6,\"arrow-end\":\"classic-wide-long\"})@>c2({\"stroke\":\"Red\"})@>op2({\"stroke\":\"Red\"})@>e({\"stroke\":\"Red\"})\n```\n\n## Custom names for branches\n\n```\nst=>start: Start:>http://www.google.com[blank]\ne=>end:>http://www.google.com\nop1=>operation: My Operation\nsub1=>subroutine: My Subroutine\ncond=>condition: linear or polynomial :>http://www.google.com\nio=>inputoutput: catch something...\npara=>parallel: 3 possibilities\n\nst->op1->cond\ncond(true@linear)->io->e\ncond(false@polynomial)->sub1(right)\nsub1(right)->para\npara(path1@an1, top)->cond\npara(path2@an2, right)->op1\npara(path3@an3, bottom)->e\n```\n<details>\n  \n  <summary>Demonstration</summary>\n  \n ![img](https://user-images.githubusercontent.com/1086194/137810516-0d7d7307-fc55-466f-b06d-a6ca9f6b8785.png)\n \n</details>\n\n## Contributors\n\nvia [GitHub](https://github.com/adrai/flowchart.js/graphs/contributors)\n\n## Thanks\n\nMany thanks to [js-sequence-diagrams](http://bramp.github.io/js-sequence-diagrams/) which greatly inspired this project, and forms the basis for the syntax.\n"
        },
        {
          "name": "devserver.js",
          "type": "blob",
          "size": 0.6435546875,
          "content": "var path = require('path');\nvar express = require('express');\nvar webpack = require('webpack');\nvar config = require('./webpack.config');\n\nvar port = 8000;\nvar app = express();\nvar compiler = webpack(config);\n\napp.use(express.static(process.cwd()));\n\napp.use(require('webpack-dev-middleware')(compiler, {\n\tnoInfo: true,\n\tpublicPath: config.output.publicPath\n}));\n\napp.use(require('webpack-hot-middleware')(compiler));\n\napp.get('/', function (req, res) {\n\tres.sendFile(path.join(__dirname, 'index.html'));\n});\n\napp.listen(port, '0.0.0.0', function (err) {\n\tif (err) {\n\t\tconsole.log(err);\n\t\treturn;\n\t}\n\n\tconsole.log('Listening at http://0.0.0.0:%s', port);\n});\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "imgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 1.3369140625,
          "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <title>Demo page</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n  </head>\n  <body>\n    <div id=\"chart\">\n      st=>start: Start|past:>http://www.google.com[blank]\n      e=>end: End:>http://www.google.com\n      op1=>operation: My Operation|past:$myFunction\n      op2=>operation: Stuff|current\n      sub1=>subroutine: My Subroutine|invalid\n      cond=>condition: Yes\n      or No?|approved:>http://www.google.com\n      c2=>condition: Good idea|rejected\n      io=>inputoutput: catch something...|request\n      para=>parallel: parallel tasks\n      in=>input: some in\n      out=>output: some out\n\n      st->op1(right)->cond\n      cond(yes, right)->c2\n      cond(no)->para\n      c2(true)->io->e\n      c2(false)->e\n\n      para(path1, left)->sub1(top)->op1\n      para(path2, right)->op2->e\n      para(path3, bottom)->in->out->e\n    </div>\n    <script>\n      function myFunction(event, node) {\n        console.log(\"You just clicked this node:\", node);\n      }\n    </script>\n\t\t<script src=\"/node_modules/jquery/dist/jquery.js\"></script>\n    <script src=\"/node_modules/raphael/raphael.js\"></script>\n    <script src=\"/release/flowchart.js\"></script>\n\t\t<script>\n\t\t$('#chart').flowChart();\n\t\t</script>\n  </body>\n</html>\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.2412109375,
          "content": "require('./src/flowchart.shim');\nvar parse = require('./src/flowchart.parse');\nrequire('./src/jquery-plugin');\n\nvar FlowChart = {\n\tparse: parse\n};\n\nif (typeof window !== 'undefined') {\n\twindow.flowchart = FlowChart;\n}\n\nmodule.exports = FlowChart;\n"
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2023 Adriano Raiano\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.220703125,
          "content": "{\n  \"author\": \"adrai\",\n  \"name\": \"flowchart.js\",\n  \"version\": \"1.18.0\",\n  \"main\": \"./index\",\n  \"private\": false,\n  \"engines\": {\n    \"node\": \">=4.0.0\"\n  },\n  \"dependencies\": {\n    \"raphael\": \"2.3.0\"\n  },\n  \"types\": \"types/index.d.ts\",\n  \"devDependencies\": {\n    \"eslint\": \"^4.18.2\",\n    \"eslint-config-defaults\": \"^8.0.2\",\n    \"express\": \">= 0.0.1\",\n    \"jquery\": \"^3.4.0\",\n    \"lodash\": \">=0.2.1\",\n    \"moment\": \"^2.11.1\",\n    \"webpack\": \"^1.12.11\",\n    \"webpack-dev-middleware\": \"^1.4.0\",\n    \"webpack-hot-middleware\": \"^2.6.0\"\n  },\n  \"scripts\": {\n    \"init\": \"git submodule init && git submodule update && git submodule status\",\n    \"start\": \"node devserver.js\",\n    \"lint\": \"eslint src\",\n    \"build:unminified\": \"NODE_ENV=production webpack -d --config webpack.config.js\",\n    \"build:minified\": \"NODE_ENV=production MINIFIED=1 webpack -d --config webpack.config.js\",\n    \"build\": \"npm run build:unminified && npm run build:minified && cp ./release/flowchart.js ./site/flowchart-latest.js\",\n    \"test\": \"npm run lint\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/adrai/flowchart.js.git\"\n  },\n  \"keywords\": [\n    \"flowchart\",\n    \"client\",\n    \"script\"\n  ],\n  \"homepage\": \"http://flowchart.js.org/\",\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "releasenotes.md",
          "type": "blob",
          "size": 6.2255859375,
          "content": "### v1.18.0\n\n- introduce input and output [#251](https://github.com/adrai/flowchart.js/pull/251)\n\n### v1.17.1\n\n- fix start and end roundness introduced in [#227](https://github.com/adrai/flowchart.js/pull/227)\n\n### v1.17.0\n\n- Styling to allow rounded corners [#227](https://github.com/adrai/flowchart.js/pull/227)\n\n### v1.16.0\n\n- Custom annotations for parallel [#225](https://github.com/adrai/flowchart.js/issues/225)\n\n### v1.15.0\n\n- Introduce types [#214](https://github.com/adrai/flowchart.js/pull/214) thanks to [Mister-Hope](https://github.com/Mister-Hope)\n\n### v1.14.3\n\n- Removed types introduced in [#212](https://github.com/adrai/flowchart.js/pull/212) again\n\n### v1.14.2\n\n- Basic types [#212](https://github.com/adrai/flowchart.js/pull/212) thanks to [DerMolly](https://github.com/DerMolly)\n\n### v1.14.1\n\n- Corrected condition behavior and fixed layout [#211](https://github.com/adrai/flowchart.js/pull/211) thanks to [AlexanderMisel](https://github.com/AlexanderMisel)\n\n### v1.14.0\n\n- Custom annotations [#209](https://github.com/adrai/flowchart.js/pull/209) thanks to [serpent-charmer](https://github.com/serpent-charmer)\n\n\n### v1.13.0\n\n- Provide low cost means of lines not colliding until they converge [#191](https://github.com/adrai/flowchart.js/pull/191) thanks to [robertleeplummerjr](https://github.com/robertleeplummerjr)\n- update raphael dependency\n\n\n### v1.12.3\n\n- Cleaning error fix, Linestyle parsing cycle fix, Dynamic flowState update [#188](https://github.com/adrai/flowchart.js/pull/188) thanks to [murich](https://github.com/murich)\n\n\n### v1.12.2\n\n- shrink npm package\n\n\n### v1.12.1\n\n- Fix params bug [#173](https://github.com/adrai/flowchart.js/pull/173) thanks to [leo108](https://github.com/leo108)\n\n\n### v1.12.0\n\n- onclick function binding to chart nodes [#172](https://github.com/adrai/flowchart.js/pull/172) thanks to [ndrqu](https://github.com/ndrqu)\n\n\n### v1.11.3\n\n- try to optimize horizontal rendering for end symbols [#155](https://github.com/adrai/flowchart.js/issues/155)\n\n### v1.11.2\n\n- try to optimize left handling [#152](https://github.com/adrai/flowchart.js/issues/152)\n\n### v1.11.1\n\n- fix direction issue for condition [#151](https://github.com/adrai/flowchart.js/issues/151)\n\n### v1.11.0\n\n- Add parallel component [#145](https://github.com/adrai/flowchart.js/pull/145) thanks to [sudhakar-sekar](https://github.com/sudhakar-sekar)\n\n### v1.9.0\n\n- Add arrow-text attribute to symbols [#141](https://github.com/adrai/flowchart.js/pull/141) thanks to [josephtocci](https://github.com/josephtocci)\n\n### v1.8.0\n\n- Allow Conditional to support 'true' or 'false' along with 'yes' and 'no' [#128](https://github.com/adrai/flowchart.js/pull/128) thanks to [bhedge](https://github.com/bhedge)\n\n### v1.7.0\n\n- add parameter to disable vertical alignment of condition symbol [#115](https://github.com/adrai/flowchart.js/pull/115) thanks to [bertrandmartel](https://github.com/bertrandmartel)\n- add line style flow support [#113](https://github.com/adrai/flowchart.js/pull/115) thanks to [bertrandmartel](https://github.com/bertrandmartel)\n\n### v1.6.6\n\n- Fix disruptive space char when parsing [#105](https://github.com/adrai/flowchart.js/pull/105)\n\n### v1.6.5\n\n- set proper engine version in package.json\n\n### v1.6.4\n\n- raphael now is an npm dependency (not the git reference anymore)\n\n### v1.6.3\n\n- Allow going to same symbol thanks to [nonylene](https://github.com/nonylene) [#83](https://github.com/adrai/flowchart.js/pull/83)\n\n### v1.6.2\n\n- Fixed not calculate viewBox and size properly thanks to [jackycute](https://github.com/jackycute) [#74](https://github.com/adrai/flowchart.js/issues/#74)\n\n### v1.6.1\n\n- Fixed lines are not included in the calculation of viewBox and size thanks to [jackycute](https://github.com/jackycute) [#72](https://github.com/adrai/flowchart.js/issues/#72) [#67](https://github.com/adrai/flowchart.js/issues/#67)\n\n### v1.6.0\n\n- changed build to use only webpack thanks to [sergeyt](https://github.com/sergeyt) [#70](https://github.com/adrai/flowchart.js/issues/70)\n\n### v1.4.2\n\n- optimized handling of special characters thanks to the advice of [Badhumvee](https://github.com/Badhumvee)\n\n### v1.4.0\n\n- Support scale option [#52](https://github.com/adrai/flowchart.js/pull/52) thanks to [hikarock](https://github.com/hikarock)\n\n### v1.3.4\n\n- make text better readable [#31](https://github.com/adrai/flowchart.js/issues/31)\n- sorry\n\n### v1.3.3\n\n- make text better readable [#31](https://github.com/adrai/flowchart.js/issues/31)\n\n### v1.3.2\n\n- optimized a bit for left support [#26](https://github.com/adrai/flowchart.js/issues/26)\n\n### v1.3.1\n\n- added support for css class [#24](https://github.com/adrai/flowchart.js/pull/24)\n\n### v1.3.0\n\n- added support for color coding (flowstate) [#23](https://github.com/adrai/flowchart.js/pull/23) thanks to [Stwissel](https://github.com/Stwissel)\n\n### v1.2.12\n\n- optimized start from right [#22](https://github.com/adrai/flowchart.js/issues/22)\n\n### v1.2.11\n\n- Added node id to objects [#18](https://github.com/adrai/flowchart.js/pull/18) thanks to [billcavalieri](https://github.com/billcavalieri)\n\n### v1.2.10\n\n- fix direction changes [#15](https://github.com/adrai/flowchart.js/issues/15)\n\n### v1.2.9\n\n- try to optimize handle directions on other symbols too [#15](https://github.com/adrai/flowchart.js/issues/15)\n- added more font options (font, font-family, font-weight)\n\n### v1.2.8\n\n- try to handle directions on other symbols too [#15](https://github.com/adrai/flowchart.js/issues/15)\n\n### v1.2.7\n\n- merge [#12](https://github.com/adrai/flowchart.js/pull/12)\n- fixed subroutine\n\n### v1.2.6\n\n- added a maxWidth option for the chart [#10](https://github.com/adrai/flowchart.js/pull/10)\n\n### v1.2.5\n\n- different styles for different symbol types [#9](https://github.com/adrai/flowchart.js/issues/9)\n\n### v1.2.4\n\n- fixed condition jump to an other symbol on same column\n\n### v1.2.3\n\n- added \"arrow-end\" option [#6](https://github.com/adrai/flowchart.js/pull/6)\n\n### v1.2.2\n\n- fix flowchart parsing\n\n### v1.2.1\n\n- fix condition direction\n\n### v1.2.0\n\n- ability to specify directionality of condition branches [#3](https://github.com/adrai/flowchart.js/issues/3)\n\n### v1.1.3\n\n- fix for old browsers\n\n### v1.1.2\n\n- let lines jump\n\n### v1.1.1\n\n- set yes or no text to source start instead of middle\n\n### v1.1.0\n\n- optional link for symbols\n\n\n### v1.0.0\n\n- first release\n"
        },
        {
          "name": "site",
          "type": "commit",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 2.04296875,
          "content": "var path = require('path');\nvar webpack = require('webpack');\nvar moment = require('moment');\n\nvar component = require('./package.json');\nvar banner =\n\t'// ' + component.name + ', v' + component.version + '\\n' +\n\t'// Copyright (c)' + moment().format('YYYY') + ' Adriano Raiano (adrai).\\n' +\n\t'// Distributed under MIT license\\n' +\n\t'// http://adrai.github.io/flowchart.js\\n';\n\nvar NODE_ENV = process.env.NODE_ENV || 'development';\nvar defines = new webpack.DefinePlugin({\n\t'process.env': {\n\t\t'NODE_ENV': JSON.stringify(NODE_ENV)\n\t}\n});\n\nvar config = {\n\tdevtool: 'source-map', // always build source map\n\tentry: [\n\t\t'webpack-hot-middleware/client',\n\t\t'./index'\n\t],\n\toutput: {\n\t\tpath: path.join(__dirname, 'release'),\n\t\tfilename: component.name + '.js',\n\t\tpublicPath: '/release/'\n\t},\n\tplugins: [\n\t\tnew webpack.HotModuleReplacementPlugin(),\n\t\tnew webpack.NoErrorsPlugin(),\n\t\tdefines\n\t],\n\tresolve: {\n\t\textensions: ['', '.js'],\n\t\tmodulesDirectories: ['src', 'node_modules'],\n\t\talias: {\n\t\t\t'dev/raphael.core.js': './dev/raphael.core.js',\n\t\t\t'raphael.core': './raphael.core.js',\n\t\t\t'raphael.svg': './dev/raphael.svg.js',\n\t\t\t'raphael.vml': './dev/raphael.vml.js'\n\t\t}\n\t}\n};\n\nif (NODE_ENV === 'production') {\n\tvar minified = process.env.MINIFIED == '1';\n\tvar withoutJs = component.name;\n\twithoutJs = withoutJs.replace('.js', '');\n\tvar filename = minified ? withoutJs + '.min.js' : withoutJs + '.js';\n\tvar uglifyOptions = {\n\t\tsourceMap: true,\n\t\tcompressor: {\n\t\t\twarnings: false,\n\t\t\tdead_code: true\n\t\t},\n\t\toutput: {\n\t\t\tpreamble: banner,\n\t\t\tcomments: false\n\t\t}\n\t};\n\tif (!minified) {\n\t\tuglifyOptions.beautify = true;\n\t\tuglifyOptions.mangle = false;\n\t\tuglifyOptions.output.comments = 'all';\n\t}\n\tconfig.entry = './index';\n\tconfig.externals = {\n\t\traphael: 'Raphael'\n\t};\n\tconfig.output = {\n\t\tdevtoolLineToLine: true,\n\t\tsourceMapFilename: filename + '.map',\n\t\tpath: path.join(__dirname, 'release'),\n\t\tfilename: filename,\n\t\tlibraryTarget: 'umd'\n\t};\n\tconfig.plugins = [\n\t\tnew webpack.optimize.OccurenceOrderPlugin(),\n\t\tdefines,\n\t\tnew webpack.optimize.UglifyJsPlugin(uglifyOptions)\n\t];\n}\n\nmodule.exports = config;\n"
        }
      ]
    }
  ]
}