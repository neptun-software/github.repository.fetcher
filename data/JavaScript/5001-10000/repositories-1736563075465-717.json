{
  "metadata": {
    "timestamp": 1736563075465,
    "page": 717,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "node-webot/wechat",
      "stars": 5108,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "node_modules\nexample\n.DS_Store\ncoverage\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.6396484375,
          "content": "{\n  \"predef\": [\n    \"document\",\n    \"module\",\n    \"require\",\n    \"__dirname\",\n    \"process\",\n    \"console\",\n    \"it\",\n    \"xit\",\n    \"describe\",\n    \"xdescribe\",\n    \"before\",\n    \"beforeEach\",\n    \"after\",\n    \"afterEach\"\n  ],\n\n  \"node\": true,\n  \"es5\": true,\n  \"bitwise\": true,\n  \"curly\": true,\n  \"eqeqeq\": true,\n  \"forin\": false,\n  \"immed\": true,\n  \"latedef\": true,\n  \"noarg\": true,\n  \"noempty\": true,\n  \"nonew\": true,\n  \"plusplus\": false,\n  \"undef\": true,\n  \"strict\": false,\n  \"trailing\": false,\n  \"globalstrict\": true,\n  \"nonstandard\": true,\n  \"white\": false,\n  \"indent\": 2,\n  \"expr\": true,\n  \"multistr\": true,\n  \"onevar\": false,\n  \"unused\": \"vars\"\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.08984375,
          "content": "sudo: false\nlanguage: node_js\nnode_js:\n  - \"6\"\n  - \"8\"\n  - \"10\"\nscript: make test-coveralls\n"
        },
        {
          "name": "MIT-License",
          "type": "blob",
          "size": 1.0693359375,
          "content": "Copyright (c) 2013 Jackson Tian\nhttp://weibo.com/shyvo\n\nThe MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.59375,
          "content": "TESTS = test/*.js\nREPORTER = spec\nTIMEOUT = 20000\nISTANBUL = ./node_modules/.bin/istanbul\nMOCHA = ./node_modules/mocha/bin/_mocha\nCOVERALLS = ./node_modules/coveralls/bin/coveralls.js\n\ntest:\n\t@NODE_ENV=test $(MOCHA) -R $(REPORTER) -t $(TIMEOUT) \\\n\t\t$(MOCHA_OPTS) \\\n\t\t$(TESTS)\n\ntest-cov:\n\t@$(ISTANBUL) cover --report html $(MOCHA) -- -t $(TIMEOUT) -R spec $(TESTS)\n\ntest-coveralls:\n\t@$(ISTANBUL) cover --report lcovonly $(MOCHA) -- -t $(TIMEOUT) -R spec $(TESTS)\n\t@echo TRAVIS_JOB_ID $(TRAVIS_JOB_ID)\n\t@cat ./coverage/lcov.info | $(COVERALLS) && rm -rf ./coverage\n\ntest-all: test test-coveralls\n\n.PHONY: test\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 12.607421875,
          "content": "wechat [![NPM version](https://badge.fury.io/js/wechat.png)](http://badge.fury.io/js/wechat) [![Build Status](https://travis-ci.org/node-webot/wechat.png?branch=master)](https://travis-ci.org/node-webot/wechat) [![Dependencies Status](https://david-dm.org/node-webot/wechat.png)](https://david-dm.org/node-webot/wechat) [![Coverage Status](https://coveralls.io/repos/node-webot/wechat/badge.png)](https://coveralls.io/r/node-webot/wechat)\n======\n\nWechat is a middleware and SDK of Wechat Official Account Admin Platform (mp.weixin.qq.com).\n\nThis wechat document is translated by [Guo Yu](https://github.com/turingou/), if you have some understanding problems, please feel free open an issue [here](https://github.com/turingou/wechat/issues).\n\n## Features\n\n- Auto reply (text, image, videos, music, thumbnails posts are supported)\n- CRM message (text, image, videos, music, thumbnails posts are supported)\n- Menu settings (CRD are supported)\n- QR codes (CR are supported, both temporary and permanent)\n- Group settings (CRUD are supported)\n- Followers infomation (fetching user's info or followers list)\n- Media (upload or download)\n- Reply Waiter (good for surveys)\n- Sessions\n- OAuth API\n- Payment (deliver notify and order query)\n\nAPI details located [here](http://node-webot.github.io/wechat/api.html)\n\n## Installation\n\n```\nnpm install wechat\n```\n\n## Use with Connect/Express\n\n```\nvar wechat = require('wechat');\n\napp.use(connect.query()); // Or app.use(express.query());\napp.use('/wechat', wechat('some token', function (req, res, next) {\n  // message is located in req.weixin\n  var message = req.weixin;\n  if (message.FromUserName === 'diaosi') {\n    // reply with text\n    res.reply('hehe');\n  } else if (message.FromUserName === 'text') {\n    // another way to reply with text\n    res.reply({\n      content: 'text object',\n      type: 'text'\n    });\n  } else if (message.FromUserName === 'hehe') {\n    // reply with music\n    res.reply({\n      type: \"music\",\n      content: {\n        title: \"Just some music\",\n        description: \"I have nothing to lose\",\n        musicUrl: \"http://mp3.com/xx.mp3\",\n        hqMusicUrl: \"http://mp3.com/xx.mp3\"\n      }\n    });\n  } else {\n    // reply with thumbnails posts\n    res.reply([\n      {\n        title: 'Come to fetch me',\n        description: 'or you want to play in another way ?',\n        picurl: 'http://nodeapi.cloudfoundry.com/qrcode.jpg',\n        url: 'http://nodeapi.cloudfoundry.com/'\n      }\n    ]);\n  }\n}));\n```\n\n*Tips*: you'll have to apply `token` at [Wechat platform (this page is in Chinese)](http://mp.weixin.qq.com/cgi-bin/callbackprofile?type=info&t=wxm-developer-ahead&lang=zh_CN)\n\n### Reply Messages\n\nauto reply a message when your followers send a message to you. also text, image, videos, music, thumbnails posts are supported. details API goes [here (official documents)](http://mp.weixin.qq.com/wiki/index.php?title=发送被动响应消息)\n\n#### Reply with text\n```\nres.reply('Hello world!');\n// or\nres.reply({type: \"text\", content: 'Hello world!'});\n```\n#### Reply with Image\n```\nres.reply({\n  type: \"image\",\n  content: {\n    mediaId: 'mediaId'\n  }\n});\n```\n#### Reply with voice\n```\nres.reply({\n  type: \"voice\",\n  content: {\n    mediaId: 'mediaId'\n  }\n});\n```\n#### Reply with Video\n```\nres.reply({\n  type: \"video\",\n  content: {\n    mediaId: 'mediaId',\n    thumbMediaId: 'thumbMediaId'\n  }\n});\n```\n#### Reply with Music\n```\nres.reply({\n  title: \"Just some music\",\n  description: \"I have nothing to lose\",\n  musicUrl: \"http://mp3.com/xx.mp3\",\n  hqMusicUrl: \"http://mp3.com/xx.mp3\"\n});\n```\n#### Reply with Thumbnails posts\n```\nres.reply([\n  {\n    title: 'Come to fetch me',\n    description: 'or you want to play in another way ?',\n    picurl: 'http://nodeapi.cloudfoundry.com/qrcode.jpg',\n    url: 'http://nodeapi.cloudfoundry.com/'\n  }\n]);\n```\n#### Reply with social function messages\n```js\nres.reply({\n    type: 'hardware',\n    HardWare:{\n      MessageView: 'myrank',\n      MessageAction: 'ranklist'\n    }\n});\n```\n### transfer user message to wechat customer service\ntransfer the message sent from wechat users to the Wechat Multi Customer Service\n```js\nres.transfer2CustomerService();\n```\n\n### Reply with device messages\nSpecific responses will be made as the message type is device_text or device_event.\n```js\nvar wechat = require('wechat');\nvar config = {\n  token: 'token',\n  appid: 'appid',\n  encodingAESKey: 'encodinAESKey',\n  checkSignature: true // optional, default value is true. Because WeChat open platform debug tool does not send signature in plaintext mode, if you want to use this debug tool, please set to false\n};\n\napp.use(express.query());\napp.use('/wechat', wechat(config, function (req, res, next) {\n  // message is located in req.weixin\n  var message = req.weixin;\n  if (message.MsgType === 'device_text') {\n    // device text\n    res.reply('This message will be pushed onto the device.');\n  } else if (message.MsgType === 'device_event') {\n    if (message.Event === 'subscribe_status' ||\n      message.Event === 'unsubscribe_status') {\n    //subscribe or unsubscribe the WIFI device status,the reply should be 1 or 0\n      res.reply(1);\n    } else {\n      res.reply('This message will be pushed onto the device.')\n    }\n  }\n}));\n```\n### WXSession\n\nWechat messages are not communicate like traditional C/S model, therefore nothing Cookies will be store in Wechat client. this WXSession is designed to support access user's infomation via `req.wxsession`, with `connect.session` backed.\n\nIt's a simple demo:\n\n```\napp.use(connect.cookieParser());\napp.use(connect.session({secret: 'keyboard cat', cookie: {maxAge: 60000}}));\napp.use('/wechat', wechat('some token', wechat.text(function (info, req, res, next) {\n  if (info.Content === '=') {\n    var exp = req.wxsession.text.join('');\n    req.wxsession.text = '';\n    res.reply(exp);\n  } else {\n    req.wxsession.text = req.wxsession.text || [];\n    req.wxsession.text.push(info.Content);\n    res.reply('Message got ' + info.Content);\n  }\n})));\n```\n\n`req.wxsession` and `req.session` shares same store. width `redis` as persistence database, across processes sharing are supportd.\n\n### Reply Waiter\n\na reply waiter is seems like a telephone menu system. it must be setup before activation. this function is supported upon WXSession.\n\n```\nvar List = require('wechat').List;\nList.add('view', [\n  ['reply {a}', function (info, req, res) {\n    res.reply('Im Answer A');\n  }],\n  ['reply {b}', function (info, req, res) {\n    res.reply('Im Answer B');\n  }],\n  ['reply {c}', 'Im Answer C (the shorthand method)']\n]);\n```\n\nactive the reply waiter we setuped before:\n\n```\nvar app = connect();\napp.use(connect.query());\napp.use(connect.cookieParser());\napp.use(connect.session({secret: 'keyboard cat', cookie: {maxAge: 60000}}));\napp.use('/wechat', wechat('some token', wechat.text(function (info, req, res, next) {\n  if (info.Content === 'list') {\n    res.wait('view'); // view is the very waiter we setuped before.\n  } else {\n    res.reply('hehe');\n    // or stop the waiter and quit.\n    // res.nowait('hehe');\n  }\n})));\n```\n\nif waiter `view` actived, user will receive messages below:\n\n```\nreply a\nreply b\nreply c\n```\n\nreply waiter acquires both function and text as a `callback` action\n\n```\nList.add('view', [\n  ['reply {a}', function (info, req, res, next) {\n    // we callback as a function\n    res.reply('Answer A');\n  }],\n  // or text as shorthand\n  ['reply {c}', 'Answer C']\n]);\n```\n\nif user's message is not in waiter's trigger texts. this message will be processd in the `else` way and can be stoped by `res.nowait()`, `res.nowait` method actions like `reply` method.\n\n## Show cases\n### Auto-reply robot based on Node.js\n\n![Node.js API Auto-reply robot](http://nodeapi.diveintonode.org/assets/qrcode.jpg)\n\nCodes here <https://github.com/JacksonTian/api-doc-service>\n\nrobots can be setup in PAASs like [CloudFoundry](http://www.cloudfoundry.com/), [appfog](https://www.appfog.com/) or [BAE](http://developer.baidu.com/wiki/index.php?title=docs/cplat/rt/node.js).\n\n## API details\nofficial document locates here [Messages API Guide (in Chinese)](http://mp.weixin.qq.com/wiki/index.php?title=消息接口指南)。\n\nwachat 0.6.x supports shorthand methods below:\n\n```\napp.use('/wechat', wechat('some token', wechat.text(function (message, req, res, next) {\n  // reply with text\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125035',\n  // MsgType: 'text',\n  // Content: 'http',\n  // MsgId: '5837397576500011341' }\n}).image(function (message, req, res, next) {\n  // message为图片内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359124971',\n  // MsgType: 'image',\n  // PicUrl: 'http://mmsns.qpic.cn/mmsns/bfc815ygvIWcaaZlEXJV7NzhmA3Y2fc4eBOxLjpPI60Q1Q6ibYicwg/0',\n  // MediaId: 'media_id',\n  // MsgId: '5837397301622104395' }\n}).voice(function (message, req, res, next) {\n  // Reply with Voice\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'voice',\n  // MediaId: 'OMYnpghh8fRfzHL8obuboDN9rmLig4s0xdpoNT6a5BoFZWufbE6srbCKc_bxduzS',\n  // Format: 'amr',\n  // MsgId: '5837397520665436492' }\n}).video(function (message, req, res, next) {\n  // Reply with Video\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'video',\n  // MediaId: 'OMYnpghh8fRfzHL8obuboDN9rmLig4s0xdpoNT6a5BoFZWufbE6srbCKc_bxduzS',\n  // ThumbMediaId: 'media_id',\n  // MsgId: '5837397520665436492' }\n}).location(function (message, req, res, next) {\n  // Reply with Location (geo)\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125311',\n  // MsgType: 'location',\n  // Location_X: '30.283950',\n  // Location_Y: '120.063139',\n  // Scale: '15',\n  // Label: {},\n  // MsgId: '5837398761910985062' }\n}).link(function (message, req, res, next) {\n  // Reply with Link\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'link',\n  // Title: 'A link',\n  // Description: 'A link has its desc',\n  // Url: 'http://1024.com/',\n  // MsgId: '5837397520665436492' }\n}).event(function (message, req, res, next) {\n  // Reply with Event\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'event',\n  // Event: 'LOCATION',\n  // Latitude: '23.137466',\n  // Longitude: '113.352425',\n  // Precision: '119.385040',\n  // MsgId: '5837397520665436492' }\n}).device_text(function (message, req, res, next) {\n  // Reply with device text.\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'device_text',\n  // DeviceType: 'gh_d3e07d51b513'\n  // DeviceID: 'dev1234abcd',\n  // Content: 'd2hvc3lvdXJkYWRkeQ==',\n  // SessionID: '9394',\n  // MsgId: '5837397520665436492',\n  // OpenID: 'oPKu7jgOibOA-De4u8J2RuNKpZRw' }\n}).device_event(function (message, req, res, next) {\n  // Reply with device event.\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'device_event',\n  // Event: 'bind'\n  // DeviceType: 'gh_d3e07d51b513'\n  // DeviceID: 'dev1234abcd',\n  // OpType : 0, //Available as Event is subscribe_status or unsubscribe_status.\n  // Content: 'd2hvc3lvdXJkYWRkeQ==', //Available as Event is not subscribe_status and unsubscribe_status.\n  // SessionID: '9394',\n  // MsgId: '5837397520665436492',\n  // OpenID: 'oPKu7jgOibOA-De4u8J2RuNKpZRw' }\n})));\n```\n\n*Tips*: `text`, `image`, `voice`, `video`, `location`, `link`, `event`, `device_text`, `device_event` must be set at least one.\n\n### More simple APIs\n\nSupported in 0.3.x and above.\n\n```\napp.use('/wechat', wechat('some token').text(function (message, req, res, next) {\n  // TODO\n}).image(function (message, req, res, next) {\n  // TODO\n}).voice(function (message, req, res, next) {\n  // TODO\n}).video(function (message, req, res, next) {\n  // TODO\n}).location(function (message, req, res, next) {\n  // TODO\n}).link(function (message, req, res, next) {\n  // TODO\n}).event(function (message, req, res, next) {\n  // TODO\n}).device_text(function (message, req, res, next) {\n  // TODO\n}).device_event(function (message, req, res, next) {\n  // TODO\n}).middlewarify());\n```\n\n### Functions Graph\n![graph](https://raw.github.com/node-webot/wechat/master/figures/wechat.png)\n\n*Tips*: Business logic in blue lines.\n\n## License\nThe MIT license.\n\n## Donation\nbuy me a cup of coffee please.\n\n[![donate wechat](https://img.alipay.com/sys/personalprod/style/mc/btn-index.png)](https://me.alipay.com/jacksontian)\n\n\nOr:\n\n[![](http://img.shields.io/gratipay/JacksonTian.svg)](https://www.gittip.com/JacksonTian/)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.099609375,
          "content": "wechat\n======\n\n微信公共平台自动回复消息接口服务中间件\n\n[Wechat document in English](./README.en.md)\n\n## 模块状态\n- [![NPM version](https://badge.fury.io/js/wechat.png)](http://badge.fury.io/js/wechat)\n- [![Build Status](https://travis-ci.org/node-webot/wechat.png?branch=master)](https://travis-ci.org/node-webot/wechat)\n- [![Dependencies Status](https://david-dm.org/node-webot/wechat.png)](https://david-dm.org/node-webot/wechat)\n- [![Coverage Status](https://coveralls.io/repos/node-webot/wechat/badge.png)](https://coveralls.io/r/node-webot/wechat)\n\n## 功能列表\n- 自动回复（文本、图片、语音、视频、音乐、图文）\n- 等待回复（用于调查问卷、问答等场景）\n- 会话支持（创新功能）\n\n详细参见[API文档](http://doxmate.cool/node-webot/wechat/api.html)\n\n- 自动回复部分的Koa/Co版本：<https://github.com/node-webot/co-wechat>\n- 更多功能请前往：<https://github.com/node-webot/wechat-api>，Koa/Co版本：<https://github.com/node-webot/co-wechat-api>\n- 企业功能请前往：<https://github.com/node-webot/wechat-enterprise>\n- OAuth功能请前往：<https://github.com/node-webot/wechat-oauth>\n- 微信支付功能请前往：<https://github.com/supersheep/wechat-pay>\n\n## Installation\n\n```sh\n$ npm install wechat\n```\n\n## Use with Connect/Express\n\n```js\nvar wechat = require('wechat');\nvar config = {\n  token: 'token',\n  appid: 'appid',\n  encodingAESKey: 'encodinAESKey',\n  checkSignature: true // 可选，默认为true。由于微信公众平台接口调试工具在明文模式下不发送签名，所以如要使用该测试工具，请将其设置为false\n};\n\napp.use(express.query());\napp.use('/wechat', wechat(config, function (req, res, next) {\n  // 微信输入信息都在req.weixin上\n  var message = req.weixin;\n  if (message.FromUserName === 'diaosi') {\n    // 回复屌丝(普通回复)\n    res.reply('hehe');\n  } else if (message.FromUserName === 'text') {\n    //你也可以这样回复text类型的信息\n    res.reply({\n      content: 'text object',\n      type: 'text'\n    });\n  } else if (message.FromUserName === 'hehe') {\n    // 回复一段音乐\n    res.reply({\n      type: \"music\",\n      content: {\n        title: \"来段音乐吧\",\n        description: \"一无所有\",\n        musicUrl: \"http://mp3.com/xx.mp3\",\n        hqMusicUrl: \"http://mp3.com/xx.mp3\",\n        thumbMediaId: \"thisThumbMediaId\"\n      }\n    });\n  } else {\n    // 回复高富帅(图文回复)\n    res.reply([\n      {\n        title: '你来我家接我吧',\n        description: '这是女神与高富帅之间的对话',\n        picurl: 'http://nodeapi.cloudfoundry.com/qrcode.jpg',\n        url: 'http://nodeapi.cloudfoundry.com/'\n      }\n    ]);\n  }\n}));\n```\n备注：token在微信平台的开发者中心申请\n\n### 回复消息\n当用户发送消息到微信公众账号，自动回复一条消息。这条消息可以是文本、图片、语音、视频、音乐、图文。详见：[官方文档](http://mp.weixin.qq.com/wiki/index.php?title=发送被动响应消息)\n\n#### 回复文本\n```js\nres.reply('Hello world!');\n// 或者\nres.reply({type: \"text\", content: 'Hello world!'});\n```\n#### 回复图片\n```js\nres.reply({\n  type: \"image\",\n  content: {\n    mediaId: 'mediaId'\n  }\n});\n```\n#### 回复语音\n```js\nres.reply({\n  type: \"voice\",\n  content: {\n    mediaId: 'mediaId'\n  }\n});\n```\n#### 回复视频\n```js\nres.reply({\n  type: \"video\",\n  content: {\n    title: '来段视频吧',\n    description: '女神与高富帅',\n    mediaId: 'mediaId'\n  }\n});\n```\n#### 回复音乐\n```js\nres.reply({\n  title: \"来段音乐吧\",\n  description: \"一无所有\",\n  musicUrl: \"http://mp3.com/xx.mp3\",\n  hqMusicUrl: \"http://mp3.com/xx.mp3\",\n  thumbMediaId: \"thisThumbMediaId\"\n});\n```\n#### 回复图文\n```js\nres.reply([\n  {\n    title: '你来我家接我吧',\n    description: '这是女神与高富帅之间的对话',\n    picurl: 'http://nodeapi.cloudfoundry.com/qrcode.jpg',\n    url: 'http://nodeapi.cloudfoundry.com/'\n  }\n]);\n```\n#### 回复设备社交功能消息\n```js\nres.reply({\n    type: 'hardware',\n    HardWare:{\n      MessageView: 'myrank',\n      MessageAction: 'ranklist'\n    }\n});\n\n```\n### 将用户消息转发到多客服\n将普通微信用户向公众号发的消息，转发到多客服系统\n```js\nres.transfer2CustomerService();\n```\n\n### 回复设备消息\n模块可以对类型为device_text或device_event的消息作出特定格式的响应.\n```js\nvar wechat = require('wechat');\nvar config = {\n  token: 'token',\n  appid: 'appid',\n  encodingAESKey: 'encodinAESKey',\n  checkSignature: true // 可选，默认为true。由于微信公众平台接口调试工具在明文模式下不发送签名，所以如要使用该测试工具，请将其设置为false\n};\n\napp.use(express.query());\napp.use('/wechat', wechat(config, function (req, res, next) {\n  // 微信输入信息都在req.weixin上\n  var message = req.weixin;\n  if (message.MsgType === 'device_text') {\n    // 设备文本消息\n    res.reply('这条回复会推到设备里去.');\n  } else if (message.MsgType === 'device_event') {\n    if (message.Event === 'subscribe_status' ||\n      message.Event === 'unsubscribe_status') {\n    //WIFI设备状态订阅,回复设备状态(1或0)\n      res.reply(1);\n    } else {\n      res.reply('这条回复会推到设备里去.')\n    }\n  }\n}));\n```\n\n### OAuth\nOAuth功能请前往：<https://github.com/node-webot/wechat-oauth>\n\n### WXSession支持\n由于公共平台应用的客户端实际上是微信，所以采用传统的Cookie来实现会话并不现实，为此中间件模块在openid的基础上添加了Session支持。一旦服务端启用了`connect.session`中间件，在业务中就可以访问`req.wxsession`属性。这个属性与`req.session`行为类似。\n\n```js\napp.use(connect.cookieParser());\napp.use(connect.session({secret: 'keyboard cat', cookie: {maxAge: 60000}}));\napp.use('/wechat', wechat('some token', wechat.text(function (info, req, res, next) {\n  if (info.Content === '=') {\n    var exp = req.wxsession.text.join('');\n    req.wxsession.text = '';\n    res.reply(exp);\n  } else {\n    req.wxsession.text = req.wxsession.text || [];\n    req.wxsession.text.push(info.Content);\n    res.reply('收到' + info.Content);\n  }\n})));\n```\n\n`req.wxsession`与`req.session`采用相同的存储引擎，这意味着如果采用redis作为存储，这样`wxsession`可以实现跨进程共享。\n\n### 等待回复\n等待回复，类似于电话拨号业务。该功能在WXSession的基础上提供。需要为等待回复预置操作，中间件将其抽象为`List`对象，在提供服务前需要添加服务。\n\n```js\nvar List = require('wechat').List;\nList.add('view', [\n  ['回复{a}查看我的性别', function (info, req, res) {\n    res.reply('我是个妹纸哟');\n  }],\n  ['回复{b}查看我的年龄', function (info, req, res) {\n    res.reply('我今年18岁');\n  }],\n  ['回复{c}查看我的性取向', '这样的事情怎么好意思告诉你啦- -']\n]);\n```\n\n然后在业务中触发等待回复事务，如下示例，当收到用户发送`list`后，调用`res.wait('view')`进入事务`view`中。\n\n```js\nvar app = connect();\napp.use(connect.query());\napp.use(connect.cookieParser());\napp.use(connect.session({secret: 'keyboard cat', cookie: {maxAge: 60000}}));\napp.use('/wechat', wechat('some token', wechat.text(function (info, req, res, next) {\n  if (info.Content === 'list') {\n    res.wait('view');\n  } else {\n    res.reply('hehe');\n    // 或者中断等待回复事务\n    // res.nowait('hehe');\n  }\n})));\n```\n用户将收到如下回复：\n\n```\n回复a查看我的性别\n回复b查看我的年龄\n回复c查看我的性取向\n```\n\n用户回复其中的`a`、`b`、`c`将会由注册的方法接管回复。回复可以是一个函数，也可以是一个字符串：\n\n```js\nList.add('view', [\n  ['回复{a}查看我的性别', function (info, req, res, next) {\n    res.reply('我是个妹纸哟');\n  }],\n  // 或者字符串\n  ['回复{c}查看我的性取向', '这样的事情怎么好意思告诉你啦- -']\n]);\n```\n\n如果用户触发等待回复事务后，没有按照`{}`中的进行回复，那么将会由原有的默认函数进行处理。在原有函数中，可以选择调用`res.nowait()`中断事务。`nowait()`除了能中断事务外，与`reply`的行为一致。\n\n## Show cases\n### Node.js API自动回复\n\n![Node.js API自动回复机器人](http://nodeapi.diveintonode.org/assets/qrcode.jpg)\n\n欢迎关注。\n\n代码：<https://github.com/JacksonTian/api-doc-service>\n\n你可以在[CloudFoundry](http://www.cloudfoundry.com/)、[appfog](https://www.appfog.com/)、[BAE](http://developer.baidu.com/wiki/index.php?title=docs/cplat/rt/node.js)等搭建自己的机器人。\n\n## 详细API\n原始API文档请参见：[消息接口指南](http://mp.weixin.qq.com/wiki/index.php?title=消息接口指南)。\n\n目前微信公共平台能接收到7种内容：文字、图片、音频、视频、位置、链接、事件。支持6种回复：纯文本、图文、音乐、音频、图片、视频。\n针对目前的业务形态，发布了0.6.x版本，该版本支持六种内容分别处理，以保持业务逻辑的简洁性。\n\n```js\napp.use('/wechat', wechat('some token', wechat.text(function (message, req, res, next) {\n  // message为文本内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125035',\n  // MsgType: 'text',\n  // Content: 'http',\n  // MsgId: '5837397576500011341' }\n}).image(function (message, req, res, next) {\n  // message为图片内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359124971',\n  // MsgType: 'image',\n  // PicUrl: 'http://mmsns.qpic.cn/mmsns/bfc815ygvIWcaaZlEXJV7NzhmA3Y2fc4eBOxLjpPI60Q1Q6ibYicwg/0',\n  // MediaId: 'media_id',\n  // MsgId: '5837397301622104395' }\n}).voice(function (message, req, res, next) {\n  // message为音频内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'voice',\n  // MediaId: 'OMYnpghh8fRfzHL8obuboDN9rmLig4s0xdpoNT6a5BoFZWufbE6srbCKc_bxduzS',\n  // Format: 'amr',\n  // MsgId: '5837397520665436492' }\n}).video(function (message, req, res, next) {\n  // message为视频内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'video',\n  // MediaId: 'OMYnpghh8fRfzHL8obuboDN9rmLig4s0xdpoNT6a5BoFZWufbE6srbCKc_bxduzS',\n  // ThumbMediaId: 'media_id',\n  // MsgId: '5837397520665436492' }\n}).shortvideo(function (message, req, res, next) {\n  // message为短视频内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'shortvideo',\n  // MediaId: 'OMYnpghh8fRfzHL8obuboDN9rmLig4s0xdpoNT6a5BoFZWufbE6srbCKc_bxduzS',\n  // ThumbMediaId: 'media_id',\n  // MsgId: '5837397520665436492' }\n}).location(function (message, req, res, next) {\n  // message为位置内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125311',\n  // MsgType: 'location',\n  // Location_X: '30.283950',\n  // Location_Y: '120.063139',\n  // Scale: '15',\n  // Label: {},\n  // MsgId: '5837398761910985062' }\n}).link(function (message, req, res, next) {\n  // message为链接内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'link',\n  // Title: '公众平台官网链接',\n  // Description: '公众平台官网链接',\n  // Url: 'http://1024.com/',\n  // MsgId: '5837397520665436492' }\n}).event(function (message, req, res, next) {\n  // message为事件内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'event',\n  // Event: 'LOCATION',\n  // Latitude: '23.137466',\n  // Longitude: '113.352425',\n  // Precision: '119.385040',\n  // MsgId: '5837397520665436492' }\n}).device_text(function (message, req, res, next) {\n  // message为设备文本消息内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'device_text',\n  // DeviceType: 'gh_d3e07d51b513'\n  // DeviceID: 'dev1234abcd',\n  // Content: 'd2hvc3lvdXJkYWRkeQ==',\n  // SessionID: '9394',\n  // MsgId: '5837397520665436492',\n  // OpenID: 'oPKu7jgOibOA-De4u8J2RuNKpZRw' }\n}).device_event(function (message, req, res, next) {\n  // message为设备事件内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'device_event',\n  // Event: 'bind'\n  // DeviceType: 'gh_d3e07d51b513'\n  // DeviceID: 'dev1234abcd',\n  // OpType : 0, //Event为subscribe_status/unsubscribe_status时存在\n  // Content: 'd2hvc3lvdXJkYWRkeQ==', //Event不为subscribe_status/unsubscribe_status时存在\n  // SessionID: '9394',\n  // MsgId: '5837397520665436492',\n  // OpenID: 'oPKu7jgOibOA-De4u8J2RuNKpZRw' }\n})));\n```\n\n注意： `text`, `image`, `voice`, `video`, `location`, `link`, `event`, `device_text`, `device_event`方法请至少指定一个。\n这六个方法的设计适用于按内容类型区分处理的场景。如果需要更复杂的场景，请使用第一个例子中的API。\n\n### 更简化的API设计\n示例如下：\n\n```js\napp.use('/wechat', wechat('some token').text(function (message, req, res, next) {\n  // TODO\n}).image(function (message, req, res, next) {\n  // TODO\n}).voice(function (message, req, res, next) {\n  // TODO\n}).video(function (message, req, res, next) {\n  // TODO\n}).location(function (message, req, res, next) {\n  // TODO\n}).link(function (message, req, res, next) {\n  // TODO\n}).event(function (message, req, res, next) {\n  // TODO\n}).device_text(function (message, req, res, next) {\n  // TODO\n}).device_event(function (message, req, res, next) {\n  // TODO\n}).middlewarify());\n```\n该接口从0.3.x提供。\n\n### 流程图\n![graph](https://raw.github.com/node-webot/wechat/master/figures/wechat.png)\n\n诸多细节由wechat中间件提供，用户只要关注蓝色部分的业务逻辑即可。\n\n## 交流群\nQQ群：157964097，使用疑问，开发，贡献代码请加群。\n\n## 感谢\n感谢以下贡献者：\n\n```\n$ git summary\n\n project  : wechat\n repo age : 2 years, 5 months\n active   : 136 days\n commits  : 318\n files    : 32\n authors  :\n   265  Jackson Tian  83.3%\n    10  ifeiteng      3.1%\n    10  yelo          3.1%\n     4  realdog       1.3%\n     4  Bruce Lee     1.3%\n     3  Guo Yu        0.9%\n     2  zhongao       0.6%\n     2  Jesse Yang    0.6%\n     2  Lu Jun        0.6%\n     2  dan           0.6%\n     2  wxhuang       0.6%\n     1  Rogerz Zhang  0.3%\n     1  Foghost       0.3%\n     1  feichang.wyl  0.3%\n     1  feit          0.3%\n     1  feitian124    0.3%\n     1  LiSheep       0.3%\n     1  p13766        0.3%\n     1  Lance Li      0.3%\n     1  Chen Wei      0.3%\n     1  xianda        0.3%\n     1  Qun Lin       0.3%\n     1  TooBug        0.3%\n\n```\n\n## 捐赠\n如果您觉得Wechat对您有帮助，欢迎请作者一杯咖啡\n\n![捐赠wechat](https://cloud.githubusercontent.com/assets/327019/2941591/2b9e5e58-d9a7-11e3-9e80-c25aba0a48a1.png)\n\n或者[![](http://img.shields.io/gratipay/JacksonTian.svg)](https://www.gittip.com/JacksonTian/)\n\n## License\nThe MIT license.\n"
        },
        {
          "name": "figures",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.1630859375,
          "content": "var wechat = require('./lib/wechat');\n// 等待回复\nwechat.List = require('./lib/list');\n// 事件\nwechat.Event = require('./lib/events');\n\nmodule.exports = wechat;\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.814453125,
          "content": "{\n  \"name\": \"wechat\",\n  \"version\": \"2.1.0\",\n  \"description\": \"微信公共平台Node库\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"make test-all\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/node-webot/wechat.git\"\n  },\n  \"keywords\": [\n    \"weixin\",\n    \"wechat\"\n  ],\n  \"dependencies\": {\n    \"xml2js\": \"0.4.17\",\n    \"ejs\": \">=1.0.0\",\n    \"wechat-crypto\": \"0.0.2\"\n  },\n  \"devDependencies\": {\n    \"supertest\": \"*\",\n    \"mocha\": \"*\",\n    \"should\": \"^3\",\n    \"expect.js\": \"*\",\n    \"connect\": \"^2\",\n    \"travis-cov\": \"*\",\n    \"coveralls\": \"*\",\n    \"mocha-lcov-reporter\": \"*\",\n    \"muk\": \"*\",\n    \"rewire\": \"*\",\n    \"istanbul\": \"*\"\n  },\n  \"author\": \"Jackson Tian\",\n  \"license\": \"MIT\",\n  \"readmeFilename\": \"README.md\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"files\": [\n    \"lib\",\n    \"index.js\"\n  ]\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}