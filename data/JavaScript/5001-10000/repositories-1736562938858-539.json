{
  "metadata": {
    "timestamp": 1736562938858,
    "page": 539,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xiangyuecn/AreaCity-JsSpider-StatsGov",
      "stars": 5781,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2019 xiangyuecn\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 33.7529296875,
          "content": "**【[源GitHub仓库](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov)】 | 【[Gitee镜像库](https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov)】本文档中默认使用[github.io部署的链接](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/)，如果无法访问，请直接下载仓库源码到本地然后双击打开html文件访问。**\n\n# :open_book:省市区数据采集并标注拼音、坐标和边界范围\n\n- [【在线测试和预览】省市区乡镇四级行政区划数据](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/)：支持在线生成JSON、多级联动js；\n- [【在线测试和预览】ECharts Map四级下钻在线测试和预览+代码生成](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/geo-echarts.html)：坐标边界范围在线测试和预览；\n- [【转换工具】AreaCity-Geo格式转换工具软件](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/AreaCity-Geo-Transform-Tools.html)：csv文件导入数据库，坐标、边界范围转换（支持转成`sql`、`shp`、`geojson`）；\n- [【查询工具】AreaCity-Query-Geometry](https://github.com/xiangyuecn/AreaCity-Query-Geometry)：高性能的坐标数据、边界数据查询工具，Java开源程序、带http查询接口，内存占用低（1秒可查1万个以上坐标对应的城市信息）。\n\n\n## 数据下载\n\n当前最新版本：**2023.240319.240616版**，更新于2024-06-16，整合了 `统计局2023-09-11`、`民政部2023-04-23`、`腾讯地图行政区划2024-03-19`、`高德地图行政区划采集当天` 数据。\n\n文件名|大小|描述|下载地址\n:--:|:--:|--|:-:\n**ok_data_level3.csv** <br> **ok_data_level4.csv** <br> <sub>（在一个7z压缩包内）</sub> <br>​ |230KB <br> 3MB <br>​ <br>​ |【**区划三级**】省市区 三级行政区划 数据 <br> 【**区划四级**】省市区乡镇 四级行政区划 数据 <br> <sub>- 支持在线预览，在线生成JSON、多级联动js代码</sub> <br> <sub>- 可用转换工具导入数据库、转成sql</sub>|[线路一](https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases/download/2023.240319.240616/ok_data_level3-4.csv.7z) / [线路二](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases/download/2023.240319.240616/ok_data_level3-4.csv.7z)\n**ok_geo.csv.7z**|13MB|【**边界三级**】省市区 坐标和边界 数据，解压后130M+ <br> <sub>- 支持在线预览，可用转换工具转成shp、geojson、sql格式、转换坐标系</sub> <br> <sub>- 使用本库开源的高性能查询工具，1秒可查1万个以上坐标对应的城市信息</sub>|[线路一](https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases/download/2023.240319.240616/ok_geo.csv.7z) / [线路二](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases/download/2023.240319.240616/ok_geo.csv.7z)\n**ok_geo4_*.csv** [AD]|109MB|【**边界四级**】乡镇级 坐标和边界 数据，导出后300M+ <br> <sub>- 付费数据、广告、闭源，支持在线预览，提供了部分免费数据供测试</sub>|[线路一](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/geo-level4.html#xz)\n\n\n\n\n> 如果上面线路一和线路二都无法下载：可以到 [Gitee Releases](https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases) 下载，或到 [GitHub Releases](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases) 下载最新发布数据文件。\n\n> csv纯文本文件可以非常方便解析成其他格式；如果在使用csv文件过程中出现乱码、错乱等情况，需自行调对utf-8（带BOM）编码，文本限定符为`\"`。\n> \n> 通过本库提供的 [AreaCity-Geo格式转换工具](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/AreaCity-Geo-Transform-Tools.html) 可快速方便的将行政区划、坐标、边界范围csv文件导入数据库，并且提供格式转换功能（shp、geojson、sql），欢迎下载使用。边界导出成geojson后可通过 [AreaCity-Query-Geometry](https://github.com/xiangyuecn/AreaCity-Query-Geometry) Java开源程序进行高性能的坐标数据、边界数据查询。\n\n\n[​](?)\n\n**如需数据、功能定制，网站、App、小程序、前端后端开发等需求；矢量专题地图绘制、修改，前端地图、大屏、ECharts数据展示开发，后端数据处理、接口开发；请加本文档下面的QQ群，联系群主（即作者），谢谢~**\n\n\n\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n\n<p align=\"center\"><a href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov\"><img width=\"100\" src=\"https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov/raw/master/assets/icon.png\" alt=\"AreaCity logo\"></a></p>\n\n<p align=\"center\">\n  <a title=\"Stars\" href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov\"><img src=\"https://img.shields.io/github/stars/xiangyuecn/AreaCity-JsSpider-StatsGov?color=15822e&logo=github\" alt=\"Stars\"></a>\n  <a title=\"Forks\" href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov\"><img src=\"https://img.shields.io/github/forks/xiangyuecn/AreaCity-JsSpider-StatsGov?color=15822e&logo=github\" alt=\"Forks\"></a>\n  <a title=\"Releases Downloads\" href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases\"><img src=\"https://img.shields.io/github/downloads/xiangyuecn/AreaCity-JsSpider-StatsGov/total?color=15822e&logo=github\" alt=\"Releases Downloads\"></a>\n  <a title=\"Version\" href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/releases\"><img src=\"https://img.shields.io/github/v/release/xiangyuecn/AreaCity-JsSpider-StatsGov?color=f60&label=version&logo=github\" alt=\"Version\"></a>\n  <a title=\"License\" href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/xiangyuecn/AreaCity-JsSpider-StatsGov?color=f60&logo=github\" alt=\"License\"></a>\n</p>\n\n\n[​](?)\n\n[​](?)\n\n\n## Git仓库和存档\n由于仓库内的历史记录数据可能会很大，可以加上`--depth 1`提取最新版的数据即可。\n``` java\n//Gitee镜像仓库: 速度快\ngit clone --depth 1 https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov.git\n\n//源GitHub仓库: 可能比较慢或无法访问\ngit clone --depth 1 https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov.git\n```\n\n每当仓库增长到一定大小后，本仓库将会进行存档处理，同时将历史记录中的大文件进行清理，这将导致一些文件之前的历史丢失，请到存档仓库查阅更早的历史记录；\n2023年05月28日前历史存档：[GitHub](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov-bak-20230528) | [Gitee](https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov-bak-20230528) 。\n\n\n\n## 【QQ群】交流与支持\n\n欢迎加QQ群：①群 `484560085(满)`、②群 `626141661(满)`、③群 `346847528(满)`、④群 `514420754`，纯小写口令：`areacity`\n\n<img src=\"https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov/raw/master/assets/qq_group_484560085.png\" width=\"220px\">\n\n\n\n[​](?)\n\n[​](?)\n\n\n## 数据源\n\n- [国家统计局](http://www.stats.gov.cn/sj/tjbz/qhdm/) ：统计用区划和城乡划分代码，此数据比较齐全但是比较杂，并且数据是一年一更可能会存在滞后，需额外移除和处理开发区、经济区、高新区、国家级新区等区域；此数据源为省市区三级数据的主要数据源，乡镇级辅助数据源。\n\n- [民政部](https://www.mca.gov.cn/n156/n186/index.html) ：行政区划代码，提供省市区三级数据，以前一月一更，2022年大半年没更新；为辅助数据源。\n\n- [腾讯地图行政区划](https://lbs.qq.com/webservice_v1/guide-region.html)：提供省市区镇四级数据，更新比较频繁；为乡镇级主要数据源，省市区三级辅助数据源。\n\n- [高德地图行政区域](https://lbs.amap.com/api/webservice/guide/api/district)：提供省市区镇数据，实际采用前三级，更新比较频繁但具体时间未知；为辅助数据源。\n\n- [高德地图坐标和行政区域边界范围](https://lbs.amap.com/api/javascript-api/example/district-search/draw-district-boundaries)：当城市数据有变化时，主动从高德查询坐标和边界信息。\n\n\n\n\n## 【字段】ok_data_level*.csv - 行政区划数据表\n此表为省市区镇三级、四级行政区划数据表，可[在线测试预览](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/)（支持转成json、生成多级联动js代码），可使用 [AreaCity-Geo格式转换工具软件](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/AreaCity-Geo-Transform-Tools.html) 直接导入数据库。\n\n字段|类型|描述\n:--:|:--:|--\nid|int|城市编号；省市区三级为统计局的编号经过去除后缀的`0{3,6,8}`得到的短编号，港澳台编号为民政部的编号；如果是添加的数据（国外），此编号为自定义编号；乡镇级主要为腾讯地图行政区划的编号，大部分和统计局的数据一致，约7.5%（约3000个）的乡镇级不一致；如果某级缺失(如：省直辖县级市、新增城市)，会用上级数据进行补齐，编号为上级结尾添加0{2,3}，*注意如果要恢复长编号时（简单的补上00）已有的ID会和添加的ID产生冲突，比如4位恢复到6位将导致部分上下级ID冲突，恢复时这些新加的数据要进行特殊处理*。\npid|int|上级ID\ndeep|int|层级深度；0：省，1：市，2：区，3：镇\nname|string|`如：武汉`，为数据源原始名称精简过后的短名称，和ext_name字段值的前半部分完全相同，如需完整名称请使用ext_name字段\npinyin_prefix|string|`如：w、~1`，为`name`的拼音前缀，取的是`pinyin`第一个字母`a-z`，或港澳台、国外自定义前缀`~1、~4`；用来排序时应当先根据拼音前缀的首字母来排序，相同的再根据前缀+名称进行排序\npinyin|string|`如：wu han`，为`name`的完整拼音\next_id|long|数据源原始的编号；如果是添加的数据，此编号为0；此编号并非唯一，不可代替id使用，比如填充的数据将会和上级使用相同的编号\next_name|string|`如：武汉市`，为数据源原始的完整名称，name字段值就是本字段删掉省市等后缀精简来的，如需完整名称请使用本字段\n\n## 【字段】ok_geo.csv - 坐标边界表\n此表为坐标和行政区域边界范围数据表，可[在线测试预览](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/geo-echarts.html)；此表含省市区三级不含第四级，如需乡镇级坐标边界数据[请到此下载](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/geo-level4.html)；因为数据文件过大（130M+），所以分开存储。\n\n由于边界数据的解析比较复杂，请参考[src/map_geo_格式化.js](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/blob/master/src/%E5%9D%90%E6%A0%87%E5%92%8C%E8%BE%B9%E7%95%8C/map_geo_%E6%A0%BC%E5%BC%8F%E5%8C%96.js)内的SQL Server的解析语句，或者使用 [AreaCity-Geo格式转换工具软件](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/AreaCity-Geo-Transform-Tools.html) 直接导入数据库，或者转换成`shp`、`geojson`、`sql`格式。\n\n如果需要查询坐标对应的城市、查询城市或下级的边界数据，可下载 [AreaCity-Query-Geometry](https://github.com/xiangyuecn/AreaCity-Query-Geometry) Java开源程序进行高性能的查询，内存占用低（1秒可查1万个以上坐标对应的城市信息）。\n\n字段|类型|描述\n:--:|:--:|--\nid|int|和`ok_data_level*.csv`表中的`ID`相同，通过这个`ID`关联到省市区具体数据，`map_geo_格式化.js`中有数据合并SQL语句\npid|int|上级ID\ndeep|int|层级深度；0：省，1：市，2：区\nname|string|`如：罗湖区`，城市完整名称\next_path|string|`如：广东省 深圳市 罗湖区`，为省市区三级完整名称，中间用空格分隔\ngeo|string|城市中心坐标，高德地图`GCJ-02`火星坐标系。格式：\"lng lat\" or \"EMPTY\"，少量的EMPTY（仅台湾的城市、国外）代表此城市没有抓取到坐标信息\npolygon|string|行政区域边界，高德地图`GCJ-02`火星坐标系。格式：\"lng lat,...;lng lat,...\" or \"EMPTY\"，少量的EMPTY（仅台湾的城市、国外）代表此城市没有抓取到边界信息；存在多个地块(如海岛、飞地)时用`;`分隔，每个地块的坐标点用`,`分隔（如果某个地块中需要抠除一个孔洞小地块会存在`~`分隔符，目前暂无），特别要注意：多个地块组合在一起可能是[MULTIPOLYGON](https://docs.microsoft.com/zh-cn/sql/relational-databases/spatial/multipolygon?view=sql-server-2014)或者[POLYGON](https://docs.microsoft.com/zh-cn/sql/relational-databases/spatial/polygon?view=sql-server-2014)，需用工具进行计算和对数据进行验证\n\n\n\n\n[​](?)\n\n[​](?)\n\n## 数据有效性和完整性\n本库会尽量和民政部的更新频率保持一致，但由于最为主要的两个数据源`国家统计局`、`腾讯地图行政区划`更新频度并没有民政部高；因此省市区三级准确度和民政部准确度是一量级，并且要更完整些；第四级乡镇级主要由`腾讯地图行政区划`提供，腾讯数据源并不经常更新，因此会导致小部分新增、调整的城市第四级没有数据（会用上级数据补齐），使用前应该考虑此缺陷。\n\n数据通过使用上级数据补齐的形式（具体细节请参考后面的数据规则），使得任何一个数据都能满足省市区镇4级结构，没有孤立的（ID全局唯一），因此不管从哪级进行下级选择，都能进行有效操作。可以通过ID结构来识别这种补齐填充的数据，只要ID为上级的ID+多个0，就代表此数据为补齐填充数据，比如：东莞（4419）-东莞（441900），很容易鉴别出441900为补齐用的填充数据。\n\n会发生补齐行为的数据很少，约50来个（不含台湾），主要为：直筒子市（东莞、儋州等）、省直辖县级市（济源、潜江等），他们的下一级仅有补齐的这条数据。另外直辖市（北京、天津等）下级也仅有一条数据，ID结尾为01（不包括重庆，重庆下级分成了市、县两个）。\n\n直筒子等这种为什么不直接把下级往上提一级来做区级，采用补齐填充的方式来对齐数据的原因，请参考[issue#9](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/issues/9)。\n\n数据中不包含大部分[行政管理区](https://baike.baidu.com/item/%E8%A1%8C%E6%94%BF%E7%AE%A1%E7%90%86%E5%8C%BA/17184852)，比如：雄安新区、天府新区、苏州工业园区等，请自行查阅和[行政区划](https://baike.baidu.com/item/%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92/4655526)的区别。\n\n\n\n## 数据更新日志\n\n- 2023.240319.240616版(更新时间: 2024-06-16)采集了4层，省、市、区、镇，来源：[统计局2023版数据](https://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2023/index.html)；省市区3级合并了[民政部2023-04-23数据](https://www.mca.gov.cn/n156/n186/index.html)、[高德地图行政区域](https://lbs.amap.com/api/webservice/guide/api/district)、[腾讯地图行政区划v20240319](https://lbs.qq.com/webservice_v1/guide-region.html)数据；乡镇级采用腾讯地图行政区划作为主要数据，综合高德和统计局的乡镇级。采集高德省市区三级坐标和行政区域边界范围。\n- 2022.230704.230813版(更新时间: 2023-08-13)采集了4层，省、市、区、镇，来源：[统计局2022版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2022/index.html)；省市区3级合并了[民政部2023-04-23数据](https://www.mca.gov.cn/n156/n186/index.html)、[高德地图行政区域](https://lbs.amap.com/api/webservice/guide/api/district)、[腾讯地图行政区划v20230302](https://lbs.qq.com/webservice_v1/guide-region.html)数据；乡镇级采用腾讯地图行政区划作为主要数据，综合高德和统计局的乡镇级。采集高德省市区三级坐标和行政区域边界范围。\n- 2021.221019.221128版(更新时间: 2022-11-28)采集了4层，省、市、区、镇，来源：[统计局2021版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2021/index.html)；省市区3级合并了[民政部2022-03-21数据](http://www.mca.gov.cn/article/sj/xzqh/1980/202203/20220300040708.shtml)、[高德地图行政区域](https://lbs.amap.com/api/webservice/guide/api/district)、[腾讯地图行政区划v20221019](https://lbs.qq.com/webservice_v1/guide-region.html)数据；乡镇级采用腾讯地图行政区划作为主要数据，综合高德和统计局的乡镇级。采集高德省市区三级坐标和行政区域边界范围。\n- 2020.210510.1103版(2021)采集了4层，省、市、区、镇，来源：[统计局2020版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2020/index.html)；省市区3级合并了[民政部2021-05-10数据](http://www.mca.gov.cn/article/sj/xzqh/1980/202105/20210500033655.shtml)、[高德地图行政区域](https://lbs.amap.com/api/webservice/guide/api/district)、[腾讯地图行政区划v20211103](https://lbs.qq.com/webservice_v1/guide-region.html)数据；乡镇级采用腾讯地图行政区划作为主要数据，综合高德和统计局的乡镇级。采集高德省市区三级坐标和行政区域边界范围。\n- 2020.201120.0814版(2020)采集了4层，省、市、区、镇，来源：[统计局2020版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2020/index.html)；省市区3级合并了[民政部2020-11-20数据](http://www.mca.gov.cn/article/sj/xzqh/2020/202011/20201100030582.shtml)、[高德地图行政区域](https://lbs.amap.com/api/webservice/guide/api/district)、[腾讯地图行政区划v20200814](https://lbs.qq.com/webservice_v1/guide-region.html)数据；乡镇级采用腾讯地图行政区划作为主要数据，综合高德和统计局的乡镇级。采集高德省市区三级坐标和行政区域边界范围。\n- 2019.200925.0814版(2020)采集了4层，省、市、区、镇，来源：[统计局2019版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2019/index.html)；省市区3级合并了[民政部2020-09-25数据](http://www.mca.gov.cn/article/sj/xzqh/2020/2020/2020092500801.html)、[高德地图行政区域](https://lbs.amap.com/api/webservice/guide/api/district)、[腾讯地图行政区划v20200814](https://lbs.qq.com/webservice_v1/guide-region.html)数据；乡镇级采用腾讯地图行政区划作为主要数据，综合高德和统计局的乡镇级。采集高德省市区三级坐标和行政区域边界范围。\n- 2018版(2019)采集了4层，省、市、区、镇，来源：[统计局2018版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2018/index.html)；省市区3级额外合并了[民政部2019-08-27数据](http://www.mca.gov.cn/article/sj/xzqh/2019/201908/201908271607.html)。采集高德省市区三级坐标和行政区域边界范围。\n- 2017版(2018)采集了3层，省、市、区，来源：[统计局2017版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2017/index.html)。\n- 2016版(2017)采集了3层，省、市、区，来源：[统计局2016版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2016/index.html)。\n- 2013版(2013)采集了4层，省、市、区、镇，来源：[统计局2013版数据](http://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2013/index.html)。\n\n\n\n\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n\n\n# :open_book:在线测试工具\n\n在线测试工具地址：[https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/)\n\n此工具主要用于将`ok_data_level*.csv`四级行政区划数据文件转换成别的格式，另外提供省市区多级联动测试，并且可生成js源码（含数据）下载，3级联动生成的文件紧凑版68kb，4级联动紧凑版1mb大小。\n\n## 工具支持：\n1. 省市区镇四级行政区划数据预览和测试。\n2. 将csv数据导出成压缩后的紧凑版js格式纯数据文件，省市区3级数据65kb大小。\n3. 将csv数据导出成JSON对象、JSON数组纯数据文件，省市区3级数据120kb+。\n4. 网页版省市区镇多级联动测试。\n5. 网页版省市区镇多级联动js代码生成（含数据）。\n\n## 相关截图\n\n行政区划数据在线转换+多级联动：\n\n![](assets/tools.png)\n\nECharts + 高德地图四级下钻：\n\n![](assets/tools_map.png)\n\n\n\n\n\n\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n\n# :open_book:格式转换工具-PC版软件\n\n[AreaCity-Geo格式转换工具软件](https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/assets/AreaCity-Geo-Transform-Tools.html) 用于将采集到的 `ok_geo.csv` 省市区乡镇坐标和边界范围文件转成其他格式，也支持将 `ok_data_level*.csv` 省市区镇行政区划数据导入数据库。\n\n此软件可免费使用，但有些功能会受到限制，比如省市区边界数据：每次转换操作最多导出全国所有省级、或一个城市和它的下一级数据，可付费升级为完整版。\n\n## 工具支持：\n1. 将 ok_geo.csv坐标边界 转成 ESRI Shapefile (.shp) 文件。\n2. 将 ok_geo.csv坐标边界 转成 GeoJSON (.json) 文件，支持按层级拆分成多级json文件。\n3. 将 ok_geo.csv坐标边界 转成 SQL (.sql) 文件，支持多种数据库格式。\n4. 将 ok_geo.csv坐标边界 导入 MySQL 5.0+、SQL Server 2008+、PostgreSQL 数据库。\n5. 将 ok_data_level*.csv省市区镇行政区划 转成 SQL 文件、导入 数据库；可同时将坐标、边界范围附加到同一表中。\n6. 支持坐标系转换，ok_geo默认为GCJ-02火星坐标系，支持转换成：BD-09、WGS-84 GPS、CGCS2000。\n7. 可执行自定义 JavaScript 脚本，可扩展出丰富功能。\n8. 转换精度高，速度快，内存占用小，3-5分钟左右可转换完所有数据。\n9. 支持Win10、Win8、Win7，32位、64位系统使用（其他系统装虚拟机可用）。\n\n\n## 相关截图\n\n工具软件界面：\n\n![](assets/AGT-Images/a0.png)\n\n导入MySQL查询效果：\n\n![](assets/AGT-Images/sy-4.png)\n\n导入SQL Server查询效果：\n\n![](assets/AGT-Images/sy-5.png)\n\n省市区三级边界（ArcMap Asia_Lambert_Conformal_Conic投影）：\n\n![](assets/AGT-Images/sy-2.png)\n\n乡镇边界-湖北省（QGIS Asia_Lambert_Conformal_Conic投影）：\n\n![](assets/geo-level4/preview-qgis-wuhan.png)\n\n\n\n\n\n\n\n\n\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n\n# :open_book:坐标边界查询工具 - AreaCity-Query-Geometry\n[AreaCity-Query-Geometry](https://github.com/xiangyuecn/AreaCity-Query-Geometry) （[Gitee镜像库](https://gitee.com/xiangyuecn/AreaCity-Query-Geometry)）是一个高性能的坐标数据、边界数据查询工具，Java开源程序、带http查询接口，内存占用低（1秒可查1万个以上坐标对应的城市信息）；先用上面的格式转换工具将ok_geo.csv转成geojson格式，然后运行此工具即可测试使用。\n\n## 工具支持：\n- 查询一个坐标点对应的城市信息；\n- 查询一条路径经过的所有城市；\n- 查询一个矢量范围覆盖的所有城市；\n- 查询一个城市或下一级所有边界数据（WKT格式）；\n- 支持通过HTTP API服务进行查询调用；\n- 支持通过Java代码进行查询调用；\n- 源码简单，包括测试bat脚本共5个文件，无需IDE即可修改和运行，copy即用。\n\n## 测试截图\n\n![](assets/use_aqg-console.png)\n\n\n\n\n\n\n\n\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n\n# :open_book:数据规则和相关问题\n\n1. id编号和国家统计局的编号基本一致，方便以后更新，有很多网站接口数据中城市编号是和这个基本是一致的，包括民政部、腾讯地图和高德地图的城市数据这套编号都是大部分通用的。\n\n2. `东莞`、`中山`、`儋州`等不设区的直筒子市没有第三级区级，自动添加同名的一级作为区级，以保证整个数据结构的一致性，添加的城区编号以上级的ID结尾加两个0作为新ID，此结构ID兼容性还不错，比如：东莞（4419）下级只有一个区 东莞（441900），*但结尾加00后会导致精简过的ID如果要恢复成指定的位数时需要将这些添加的区域进行特殊处理，否则`4419`扩充到6位后会变成`441900`和下级产生冲突*。\n\n3. 省直辖县级市（河南济源、湖北潜江、海南五指山、新[​](?FixGitee_Block)疆昆玉等）根据编号来看本来只能放到区级，但为了便于用户选择，所有直辖市自动添加一个同名的市级，比如：`湖北-直辖市-仙桃-*镇` 调整后为 `湖北-仙桃-仙桃-*镇`，新添加数据的编号规则和第二条规则相同。\n\n4. 如果市、区没有下级，自动添加同名的一个城镇作为下级，编号规则和上一条规则相同，以保证数据层次的一致性（任何一个数据都能满足省市区镇4级结构，没有孤立的）；比如：`福建-泉州-金门`没有镇，调整后为`福建-泉州-金门-金门`；另外从民政部等数据源中补全的新增城市也会缺失下级，照此规则自动补齐。\n\n5. 台湾数据只有省市区三级没有乡镇级，因此乡镇级通过前面几条规则自动补齐；香港、澳门数据源有两级，当做直筒子市来处理，比如把香港当做东莞，从面积和人口来看还算合理，因此港澳数据中省市区三级是完全相同的，第四级乡镇级才有城市数据，如：香港-香港-香港-湾仔区。\n\n6. 地区名字是直接去掉常见的后缀进行精简的，如直接清除结尾的`市|区|县|街道办事处|XX族自治X`，数量较少并且移除会导致部分名字产生歧义的后缀并未精简。\n\n7. 省市区前三级数据的合并：统计局采集过来的数据会先和民政部的数据交叉对比后进行合并；由于统计局的数据明显的滞后，民政部内新添加的市、区将不会有乡镇级（自动补齐同名乡镇级）；如果民政部数据存在明文撤销的市、区，那么合并的时候会删除统计局对应的数据；如果统计局中的数据在民政部数据内不存在，将原样保留。高德地图行政区域会和腾讯地图行政区划数据进行交叉对比，然后择优选取需要的数据。最后(统计局+民政部)和(高德+腾讯的数据)的前三级数据进行交叉融合，得到的【省市区】 ≈ 【统计局的数据】 - 【160来个开发区、经济区、高新区、国家级新区】 - 【撤销城市】 + 【新设城市】 + 【港澳台】。\n\n8. 第四级乡镇级主要采用腾讯地图行政区划数据，综合高德和统计局的数据，和统计局的数据差异在3000个左右，占比7.5%(3000/40000)，得到的【乡镇级】 ≈ 【腾讯地图行政区划数据】。\n\n9. 省市区三级的坐标和行政区域边界范围数据从高德采集，省市区总计3300+条数据，少部分城市未采集到数据（仅台湾的城市、国外）。关于未获取到坐标或边界的城市，本采集方案采取不处理策略，空着就空着，覆盖主要城市和主要人群，未覆盖区域实际使用过程中应该进行降级等处理。比如：尽最大可能的根据用户坐标来确定用户所在城市，因为存在没有边界信息的区域，未匹配到的应使用ip等城市识别方法。得到的【坐标和边界】 = 【高德地图数据】。\n\n10. 数据中不包含大部分[行政管理区](https://baike.baidu.com/item/%E8%A1%8C%E6%94%BF%E7%AE%A1%E7%90%86%E5%8C%BA/17184852)，比如：雄安新区、天府新区、苏州工业园区等。\n\n11. 参考链接：[行政区划](https://baike.baidu.com/item/%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92/4655526)，[统计用区划代码和城乡划分代码编制规则](http://www.stats.gov.cn/xxgk/tjbz/gjtjbz/201310/t20131031_1758902.html)，[民政部发布的行政区划代码](https://www.mca.gov.cn/n156/n186/index.html)。\n\n\n## 为什么不直接用统计局的数据\n\n1. 存在滞后，更新没有民政部和其他数据源频繁，新采集却是老数据，并且明知道存在新数据，强迫症又要犯了。\n2. 统计局的数据比较齐全但是比较杂，靠一个人来分开整理几乎不可能；比如：统计局数据包含了160多个经济区、开发区，这种区划应该算专门的区域（[行政管理区](https://baike.baidu.com/item/%E8%A1%8C%E6%94%BF%E7%AE%A1%E7%90%86%E5%8C%BA/17184852)），一般由多个城市的区域组成，在区级内算是重复的区域，因此需要剔除，但剔除后这些区域下面的乡镇级需要划分到实际的归属城市下面，这就很困难了，因为量太大了，一个个去查归属地几乎不可能。\n3. 统计局的数据也存在缺失数据，如：港澳台、昆玉市、双河市。\n4. 其他平台的数据在感官上显得都[不够完美](https://v2ex.com/t/607306)，综合一下舒畅多了。\n\n\n## 拼音标注和排序\n\n### 拼音源\n省市区这三级采用在线拼音工具转换，据说依据《新华字典》、《现代汉语词典》等规范性辞书校对，多音字地名大部分能正确拼音，`重庆:chong qing`，`朝阳:chao yang`，`郫都:pi du`，`闵行:min hang`，`康巴什:kang ba shi`、`六安市:lu an shi`；转换完成后会和腾讯地图行政区划存在的拼音进行对比校正。\n\n乡镇级以下地名采用本地拼音库（`assets/pinyin-python-server`）转换，准确度没有省市区的高。\n\n### 拼音前缀\n目前采用的是截取第一个字拼音的首字母，和港澳台、国外特殊指定前缀。\n\n### 排序方案：\n\n方案一(2016版废弃)：取每个字的拼音首字母排序，比如：`河北:hb` `湖北:hb` `黑龙江:hlj` `河南:hn` `湖南:hn`\n\n方案二(2018版废弃)：取的是第一个字前两个字母和后两个字首字母排序：`河北:heb` `黑龙江:helj` `河南:hen` `湖北:hub` `湖南:hun`\n\n方案三(返璞归真)：取第拼音前缀首字母进行排序，如果两个字母相同，再使用(首字母前缀或自定义前缀)+(名称)进行排序：`河北:h.河北` `河南:h.河南` `黑龙江:h.黑龙江` `湖北:h.湖北` `湖南:h.湖南` `香港:~1.香港` `澳门:~2.澳门`\n\n排序方案三看起来好些；为什么不直接用名称文本进行排序，我怕不同环境下对多音字不友好，最差情况下也不会比方案一差，并且排序可透过前缀实施自定义控制。\n\n\n### 修[​](?FixGitee_Block)正数据\n\n- [issues/2](https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov/issues/2) `乐亭县` 的 `乐`读`lào` ，此县下面的`乐亭`读音均已修[​](?FixGitee_Block)正。\n- [2020-8-23] QQ:85005150反馈 `宕昌县` 的 `宕` 读 `tàn`。\n- [2021-2-21] QQ:85005150反馈 `洪洞县` 的 `洞` 读 `tong`，`lve` 改成 `lue`，和其他一些已知读音问题。\n- [2022-12-14] QQ:85005150反馈 `丹棱县` 的 `棱` 读 `leng`。\n- [2024-5-20] QQ:1258339370反馈 `㵲水街道` 第一个字变成了 `_` 问题，已改成 `舞` 字；研究后通过拼音会对标点符号等特殊字符做标记的特性，处理代码中使用此办法来识别乱码，找出了另外一处乱码。\n\n\n\n\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n\n# :open_book:使用js自行采集\n\n在低版本chrome控制台内运行1、2、3打头的文件即可完成采集，这些文件按文件名顺序执行。环境配置好的情况下完成一次采集大概30分钟内。\n\n最新采集代码内对拼音转换的接口变化蛮大，由于优秀的那个公网接口采取了IP限制措施，就算使用了全自动的切换代理，全量转换还是极为缓慢，因此采用了本地转换接口和公网转换接口结合的办法，省市区三级采用公网接口，其他的采用本地接口。公网接口转换的正确度极高，本地的略差那么一点。\n\n统计局官网也会对请求进行限制，超过一定量的请求后会要求输入验证码。只要没有禁用浏览器缓存，一个统计局url请求过一次就不再次发起网络请求（会走缓存），最多会产生4000个有效网络请求，发现要输入验证码时，重新开始采集即可，有缓存的非常快速。\n\n\n## 采集环境参考\n\nchrome 控制台，当前数据采集使用的chrome版本：`Chrome 97` + `Chrome 80`，chrome越来越难用（[简单制作chrome便携版实现多版本共存](https://github.com/xiangyuecn/Docs/blob/master/Other/%E8%87%AA%E5%B7%B1%E5%88%B6%E4%BD%9Cchrome%E4%BE%BF%E6%90%BA%E7%89%88%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%89%88%E6%9C%AC%E5%85%B1%E5%AD%98.md)）。\n\n2022年以前统计局数据乱码的根本原因在于统计局服务器响应的内容编码为`gb2312`（2022已采用utf-8编码无此问题），但服务器响应头只给了`Content-Type: text/html`，因此可用Fiddler篡改`Content-Type`响应头为`Content-Type: text/html; charset=gb2312`也可解决新版Chrome乱码问题。\n\n\n## 行政区划数据采集\n\n1. 按顺序用文本编辑器打开1-3打头的js文件，阅读源码开头的注释，用浏览器打开注释内相应的目标页面。\n2. 在浏览器页面内打开控制台，控制台中导入需要的数据。\n3. 复制js文件内的源码到控制台内执行。\n4. 数据采集或转换完成会自动弹出下载，保存好文件，然后处理下一个1-3打头的js文件。\n\n\n## 坐标和行政区域边界采集\n\n使用`坐标和边界`目录内的`map_geo.js`、`map_geo_格式化.js`在[高德地图测试页面](https://lbs.amap.com/api/javascript-api/example/district-search/draw-district-boundaries)，根据文件内的说明即可完成采集。\n\n\n\n\n\n[​](?)\n\n[​](?)\n\n[​](?)\n\n\n# :open_book:其他资源\n- 行政区划吧：[百度贴吧链接](https://tieba.baidu.com/f?kw=%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92)，一个指点江山有味道的吧，区划变更先知道\n- 全国基础地理数据库：[http://www.webmap.cn](http://www.webmap.cn)\n- OpenStreetMap：[https://www.openstreetmap.org](https://www.openstreetmap.org)\n- 含街道居委会（五级）数据：[https://github.com/modood/Administrative-divisions-of-China](https://github.com/modood/Administrative-divisions-of-China)\n\n\n\n[​](?)\n\n[​](?)\n\n\n# :star:捐赠\n如果这个库有帮助到您，请 Star 一下。\n\n您也可以使用支付宝或微信打赏作者：\n\n![](https://gitee.com/xiangyuecn/Recorder/raw/master/assets/donate-alipay.png)  ![](https://gitee.com/xiangyuecn/Recorder/raw/master/assets/donate-weixin.png)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 5.294921875,
          "content": "<!doctype html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<link rel=\"shortcut icon\" type=\"image/png\" href=\"assets/icon.png\">\r\n\r\n<title>最新2024年省市区县乡镇街道行政区划数据可导入mysql sql server数据库可三级四级多级联动，坐标边界范围矢量数据支持shp geojson arcgis arcmap qgis mapinfo gis地理围栏 - AreaCity-JsSpider-StatsGov</title>\r\n<script>var PageIsRootIndex=true;</script>\r\n</head>\r\n\r\n<body>\r\n<style>\r\nbody{\r\n\tword-wrap: break-word;\r\n\tbackground:#f5f5f5 center top no-repeat;\r\n\tbackground-size: auto 680px;\r\n\t\r\n\tfont-size:16px;\r\n}\r\n.main{\r\n\tmargin:0 auto;\r\n\tpadding:0 50px 80px;\r\n}\r\npre{\r\n\twhite-space:pre-wrap;\r\n}\r\n\r\n.main .AreaFormat {\r\n\tposition: relative;\r\n\ttop:0;left:0;width:100%;\r\n\tmargin-top:20px;\r\n}\r\n\r\n\r\na{\r\n\ttext-decoration: none;\r\n\tcolor:#06c;\r\n}\r\na:hover{\r\n\tcolor:#f00;\r\n}\r\np{\r\n\ttext-indent: 32px;\r\n}\r\nimg{\r\n\tmax-width:90%;\r\n}\r\n\r\n.Center{\r\n\ttext-align: center;\r\n}\r\n\r\n\r\n.mainBox{\r\n\tmargin-top:12px;\r\n\tpadding: 12px;\r\n\tborder-radius: 6px;\r\n\tbackground: #fff;\r\n\t--border: 1px solid #f60;\r\n\tbox-shadow: 2px 2px 3px #aaa;\r\n}\r\n\r\n.lb{\r\n\tdisplay:inline-block;\r\n\tvertical-align: middle;\r\n\tbackground:#00940e;\r\n\tcolor:#fff;\r\n\tfont-size:14px;\r\n\tpadding:2px 8px;\r\n\tborder-radius: 99px;\r\n}\r\n\r\n.pd{\r\n\tpadding:0 0 6px 0;\r\n}\r\n.del{\r\n\ttext-decoration: line-through;\r\n}\r\n.b{\r\n\tfont-weight: bold;\r\n\tfont-style: normal;\r\n}\r\n.i{\r\n\tpadding: 2px 4px;\r\n\tbackground-color: #f6f6f6;\r\n\tvertical-align: middle;\r\n\tcolor: #c7254e;\r\n\tfont-size: 12px;\r\n\twhite-space: pre-wrap;\r\n\tborder-radius: 3px;\r\n\tfont-style: normal;\r\n}\r\n</style>\r\n\r\n\r\n<div class=\"main\">\r\n\t<div class=\"mainBox\">\r\n\t\t<span style=\"font-size:32px;color:#0B0;\">AreaCity 省市区县乡镇街道行政区划数据 + 坐标边界范围矢量数据</span>\r\n\t\t首页 |\r\n\t\t<a href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov\">GitHub >></a> |\r\n\t\t<a href=\"https://gitee.com/xiangyuecn/AreaCity-JsSpider-StatsGov\">Gitee >></a>\r\n\t</div>\r\n\r\n\t<div class=\"mainBox\">\r\n\t\t<div style=\"font-size: 24px;font-weight: bold;padding-bottom:10px\">数据版本</div>\r\n\t\t<div class=\"geoVerDateView\"></div>\r\n\t\t<script src=\"assets/csv-ver-date.js\"></script>\r\n\t\t<script>\r\n\t\t\tdocument.querySelector(\".geoVerDateView\").innerHTML=CsvPubDate.TableHTML({level4:true,geo:true,geo4:true});\r\n\t\t\tdocument.querySelector(\".GeoPubDate_Level4_Row1\").innerHTML='<div style=\"color:#0b0\">在本页面底下可以进行三级、四级联动测试，往下拖拖看</div>';\r\n\t\t\tdocument.querySelector(\".GeoPubDate_Geo_Row1\").innerHTML='<div style=\"color:#0b0\">右下角可直接体验，单击地图进入下一级(可到乡镇)</div>';\r\n\t\t</script>\r\n\t</div>\r\n\r\n\t\r\n\t\r\n\t<div class=\"lowB\" style=\"font-size: 50px;text-align: center;color: #f60;\">本工具未支持low b浏览器，换个吧&#x1f644;</div><script>document.querySelector(\".lowB\").innerHTML=``;</script>\r\n\t<a name=\"tools\"></a>\r\n\t<script>var AreaFormatBoxElem=document.querySelector(\".main\")</script>\r\n\t<script src=\"测试和WEB数据格式转换工具.js\"></script>\r\n\t<script>\r\n\t\tvar elem=document.querySelector(\".AreaFormat\");\r\n\t\telem.className=\"AreaFormat mainBox\";\r\n\t\telem.style.padding=\"0\";\r\n\t</script>\r\n\t\r\n\t<div class=\"mainBox DonateLogs\"></div>\r\n</div>\r\n\r\n<script>\r\nfunction el(cls){\r\n\treturn document.querySelector(cls);\r\n};\r\n\r\nif(/^file:/.test(location.href)){\r\n\tFormatLog(\"浏览器直接打开的html文件，不加载演示数据，请手动操作\",1);\r\n}else{\r\n\tvar html=['<select class=\"AreaFormatFromSelect\" onchange=\"swapFrom()\">'];\r\n\tfor(var i=0;i<AllowAccessFiles.length;i++){\r\n\t\thtml.push('<option value=\"'+(i+1)+'\">'+AllowAccessFolder+'/'+AllowAccessFiles[i]+'</option>');\r\n\t}\r\n\thtml.push('<\\/select>');\r\n\tel(\".AreaFormatFrom\").innerHTML=html.join(\"\\n\");\r\n\tvar swapFrom=function(){\r\n\t\tvar from=+el(\".AreaFormatFromSelect\").value-1;\r\n\t\tvar path=AllowAccessFolder+\"/\"+AllowAccessFiles[from];\r\n\t\tFormatLog(\"【\"+path+\"】数据加载中...请稍后\");\r\n\t\tvar ajax=new XMLHttpRequest();\r\n\t\tajax.open(\"GET\",path.replace(/\\(.+\\)/,\"\"));\r\n\t\tajax.onreadystatechange=function(){\r\n\t\t\tif(ajax.readyState==4){\r\n\t\t\t\tif(ajax.status==200){\r\n\t\t\t\t\tvar input=el(\".AreaFormatInput\");\r\n\t\t\t\t\tinput.value=ajax.responseText;\r\n\t\t\t\t\t\r\n\t\t\t\t\tTestReView(\"成功加载【\"+path+\"】数据\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tFormatLog(\"【\"+path+\"】数据加载失败\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tajax.send();\r\n\t};\r\n\tswapFrom();\r\n};\r\n</script>\r\n\r\n\r\n<div style=\"width:0;height:0;overflow:hidden;\">\r\n\t<img src=\"https://ia.51.la/go1?id=20807127&pvFlag=1\">\r\n</div>\r\n\r\n<!-- 加载echarts map测试挂件 -->\r\n<script src=\"assets/geo-echarts.js\"></script>\r\n<div class=\"GeoEChartsView\"></div>\r\n<script>\r\nGeoECharts.CreateWidget({\r\n\tmobElem:document.querySelector(\".GeoEChartsView\")\r\n});\r\n</script>\r\n\r\n<!-- 加载打赏挂件 -->\r\n<div class=\"DonateView\"></div>\r\n<script>\r\n(function(){\r\nvar BaseUrl=\"https://xiangyuecn.github.io/Recorder/\";\r\nif(/gitee\\.io/.test(location.host)){ //2024-05-01 pages无通知下线\r\n\tBaseUrl=\"https://xiangyuecn.gitee.io/recorder/\";\r\n};\r\nvar elem=document.createElement(\"script\");\r\nelem.setAttribute(\"type\",\"text/javascript\");\r\nelem.setAttribute(\"src\",BaseUrl+\"assets/zdemo.widget.donate.js\");\r\ndocument.body.appendChild(elem);\r\nelem.onload=function(){\r\n\tDonateWidget({\r\n\t\tlog:function(msg){var div=document.createElement(\"div\");div.innerHTML=msg;document.querySelector(\".DonateLogs\").appendChild(div)}\r\n\t\t,mobElem:document.querySelector(\".DonateView\")\r\n\t});\r\n};\r\n})();\r\n</script>\r\n\r\n</body>\r\n</html>\r\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "测试和WEB数据格式转换工具.js",
          "type": "blob",
          "size": 22.349609375,
          "content": "/*\r\nGitHub: https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov\r\n【WEB数据格式转换工具】\r\n用来将csv数据转换成js或者json，当然改造一下转成任意格式都是可以的。\r\n\r\n在任意网页控制台执行本代码。另外：index.html已经包含了此代码，双击就能运行，使用http访问更佳。\r\n*/\r\n\"use strict\";\r\nvar AllowAccessFolder=\"src/采集到的数据\";\r\nvar AllowAccessFiles=[\"ok_data_level3.csv(3级省市区)\",\"ok_data_level4.csv(4级省市区镇)\"];\r\n\r\n\r\n/******************************\r\n** 具体格式化实现函数\r\n*****************************/\r\nfunction UserFormat(list,mapping){\r\n/***********************\r\n\t修改此方法实现自定义格式（剪切本代码到你的编辑器中修改），可参考JsonArrayFormat的实现\r\n\t参数list：为所有城市平铺列表，[{id,pid,deep,name,pinyin_prefix,pinyin,ext_id,ext_name,child:[]},...]\r\n\t参数mapping：为id城市映射，0索引的是省级0:{child:[]}，其他为id：{id,pid,deep,name,pinyin_prefix,pinyin,ext_id,ext_name,child:[]}\r\n*************************/\r\n\r\n/**导出的json key配置**/\r\nvar Settings={\r\n\tID:\"id\"\r\n\t,IDMinLen:2 //id最少要这么长，取值2，4，6，尽量不要超过2，因为部分城市没有下级，数据中添加了00结尾的ID作为下级，因此恢复6位时就会冲突。如过调整，生成的数据需要自行处理冲突ID\r\n\t\r\n\t//如果设为空，会将所有城市展开到数组内，不进行上下级嵌套\r\n\t,Childs:\"childs\"\r\n\t\r\n\t//以下字段如果设为空，对应字段就不添加到结果中\r\n\t,pid:\"pid\"\r\n\t,deep:\"deep\"\r\n\t,name:\"name\"\r\n\t,pinyin:\"pinyin\"\r\n\t,pinyin_prefix:\"pinyin_prefix\"\r\n\t,ext_id:\"ext_id\"\r\n\t,ext_name:\"ext_name\"\r\n};\r\n\r\nvar exec=function(obj,dist){//写个函数，递归处理数据\r\n\tif(!obj.childs.length){\r\n\t\treturn;\r\n\t};\r\n\tfor(var i=0;i<obj.childs.length;i++){\r\n\t\tvar itm=obj.childs[i];\r\n\t\tvar o={};\r\n\t\tdist.push(o);\r\n\t\t\r\n\t\tvar id=(itm.id+\"\");\r\n\t\to[Settings.ID]=id.length<Settings.IDMinLen?(id+\"000000000000\").substr(0,Settings.IDMinLen):id;\r\n\t\t\r\n\t\tvar add=function(key){\r\n\t\t\tvar setKey=Settings[key];\r\n\t\t\tif(setKey){\r\n\t\t\t\to[setKey]=itm[key];\r\n\t\t\t};\r\n\t\t};\r\n\t\tadd(\"pid\");\r\n\t\tadd(\"deep\");\r\n\t\tadd(\"name\");\r\n\t\tadd(\"pinyin\");\r\n\t\tadd(\"pinyin_prefix\");\r\n\t\tadd(\"ext_id\");\r\n\t\tadd(\"ext_name\");\r\n\t\t\r\n\t\tif(Settings.Childs){\r\n\t\t\tvar c=exec(itm,[]);\r\n\t\t\tif(c){\r\n\t\t\t\to[Settings.Childs]=c;\r\n\t\t\t};\r\n\t\t}else{\r\n\t\t\texec(itm,dist);\r\n\t\t};\r\n\t};\r\n\treturn dist;\r\n};\r\n\tvar data=exec(mapping[0],[]);\r\n\r\n\tvar code=JSON.stringify(data,null,\"\\t\");\r\n\tvar codeLen=new Blob([code],{\"type\":\"text/plain\"}).size+3;\r\n\r\n\treturn Result(\"\",code,\"area_format_user.json\",codeLen+\"字节\");\r\n};\r\n\r\n\r\nfunction JsonArrayFormat(list,mapping){\r\n\tvar data=[];\r\n\tfor(var i=0;i<list.length;i++){\r\n\t\tvar itm=list[i];\r\n\t\t//json 键名称在此修改\r\n\t\tdata.push({\r\n\t\t\tn:itm.name\r\n\t\t\t,i:itm.id\r\n\t\t\t,p:itm.pid\r\n\t\t\t,y:itm.pinyin_prefix\r\n\t\t});\r\n\t}\r\n\tvar code=JSON.stringify(data);\r\n\tvar codeLen=new Blob([code],{\"type\":\"text/plain\"}).size+3;\r\n\t\r\n\treturn Result(\"\",code,\"area_format_array.json\",`${codeLen}字节`);\r\n};\r\nfunction JsonObjectFormat(list,mapping){\r\n\tvar x=function(obj){\r\n\t\tif(!obj.childs.length){\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tvar p={};\r\n\t\tfor(var i=0;i<obj.childs.length;i++){\r\n\t\t\tvar itm=obj.childs[i];\r\n\t\t\tp[itm.id]={\r\n\t\t\t\tn:itm.name\r\n\t\t\t\t,y:itm.pinyin_prefix\r\n\t\t\t};\r\n\t\t\tvar c=x(itm);\r\n\t\t\tif(c){\r\n\t\t\t\tp[itm.id].c=c;\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn p;\r\n\t};\r\n\tvar data=x(mapping[0]);\r\n\t\r\n\tvar code=JSON.stringify(data);\r\n\tvar codeLen=new Blob([code],{\"type\":\"text/plain\"}).size+3;\r\n\t\r\n\treturn Result(\"\",code,\"area_format_object.json\",`${codeLen}字节`);\r\n};\r\nfunction JsFormat(list,mapping){\r\n\tvar data=[]\r\n\tvar x=function(obj){\r\n\t\tif(!obj.childs.length){\r\n\t\t\treturn;//没有子集的 []都精简掉\r\n\t\t};\r\n\t\tdata.push(\"[\");\r\n\t\tfor(var i=0;i<obj.childs.length;i++){\r\n\t\t\tvar itm=obj.childs[i];\r\n\t\t\tif(i>0){\r\n\t\t\t\tdata.push(\";\");\r\n\t\t\t};\r\n\t\t\tdata.push(itm.id);\r\n\t\t\tdata.push(\",\");\r\n\t\t\tdata.push(itm.name);\r\n\t\t\tdata.push(\",\");\r\n\t\t\tdata.push(itm.pinyin_prefix);\r\n\t\t\tx(itm);\r\n\t\t};\r\n\t\tdata.push(\"]\")\r\n\t};\r\n\tx(mapping[0]);\r\n\t\r\n/* 自定义紧凑格式解压算法\r\n[1,a,b;2,a,b[3,a,b[4,a,b]];5,a,b]\r\n\r\n[\t\t\",\"c\":{\" 开头去掉\r\n\r\n]+;\t]+\t},\"\r\n;\t\t\"},\"\r\n\r\n\r\n]+\t]\t}}\r\n\t\t]\t\"}}\r\n*/\r\n\tvar raw=data.join(\"\");\r\n\t//var raw=\"[1,a,b;2,a,b[3,a,b[4,a,b]];5,a,b]\";\r\n\t\r\n\t//js的键名称在下面代码中修改\r\n\tvar fn=function(r){\r\n\t\tvar x=function(a){\r\n\t\t\treturn '\"}}'+Array(a.length).join('}}')\r\n\t\t}\r\n\t\t,i=0;\r\n\t\treturn JSON.parse(r\r\n\t\t\t.replace(/\\[/g,'\"!\"c\":{\"')\r\n\t\t\t.replace(/(\\]+);/g,function(a,b){\r\n\t\t\t\treturn x(b)+'}!\"';\r\n\t\t\t})\r\n\t\t\t.replace(/;/g,'\"}!\"')\r\n\t\t\t.replace(/\\]+/g,x)\r\n\t\t\t.replace(/,/g,function(){\r\n\t\t\t\treturn ++i%2==1?'\":{\"n\":\"':'\",\"y\":\"'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.replace(/!/g,',')\r\n\t\t\t\r\n\t\t\t.substr(6))\r\n\t};\r\n\tvar code=('var AreaCityData=('+fn.toString()+')(\"'+raw+'\");').replace(/\\r|\\n|\\t|\\s\\s+/g,\"\");\r\n\t\r\n\tvar orgLen=new Blob([JSON.stringify(fn(raw))],{\"type\":\"text/plain\"}).size+3;\r\n\tvar codeLen=new Blob([code],{\"type\":\"text/plain\"}).size+3;\r\n\tvar info=`${codeLen}字节 解压${orgLen}字节 压缩率`+(codeLen/orgLen*100).toFixed(2)+\"%\"\r\n\t\r\n\treturn Result(\"\",code,\"area_format_js.js\",info);\r\n};\r\n\r\n\r\nfunction Result(errMsg,str,fileName,ext_info){\r\n\treturn {m:errMsg,v:str,f:fileName,i:ext_info};\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(function(){\r\n\r\n/******************************\r\n** 点击格式化导出处理\r\n*****************************/\r\nwindow.FormatClick=function(type){\r\n\tvar res=Format(type);\r\n\tif(res.m){\r\n\t\tlog(res.m,1);\r\n\t\treturn;\r\n\t};\r\n\t\r\n\tvar info=res.findMaxLevel+\"级\"+(res.findMaxLevel<res.maxLevel?\"(数据源没有\"+res.maxLevel+\"级)\":\"\")+\"转换完成，共\"+res.list.length+\"条数据，\"+res.i+\" <span class='FormatDownA'></span>\"\r\n\t\t+'<div style=\"padding-top:10px\">'\r\n\t\t+'<textarea style=\"width:570px;height:160px\">'\r\n\t\t+'//文件内容预览'+(res.v.length>1024*1024?\"（内容过大已截断）\":\"（内容已全部显示）\")+'：\\n'\r\n\t\t+res.v.substr(0,1024*1024).replace(/\\t/g,\"    \")\r\n\t\t+'</textarea></div>';\r\n\tlog(info);\r\n\t\r\n\tvar url=URL.createObjectURL(\r\n\t\tnew Blob([\r\n\t\t\tnew Uint8Array([0xEF,0xBB,0xBF])\r\n\t\t\t,res.v\r\n\t\t]\r\n\t\t,{\"type\":\"text/plain\"})\r\n\t);\r\n\tvar downA=document.createElement(\"A\");\r\n\tdownA.innerHTML=\"下载\"+res.f;\r\n\tdownA.href=url;\r\n\tdownA.download=res.f;\r\n\tel(\".FormatDownA\").appendChild(downA);\r\n\tdownA.click();\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/******************************\r\n** 点击测试和联动代码生成处理\r\n*****************************/\r\nwindow.TestClick=function(type,_log,selectID){\r\n\tvar res=Format(type);\r\n\tvar logElem=el(_log||\".AreaFormatResult\");\r\n\tif(res.m){\r\n\t\tlogElem.innerHTML=res.m;\r\n\t\treturn;\r\n\t};\r\n\t\r\n\tvar idx=TestClick.idx=(TestClick.idx||0)+1;\r\n\tvar info=res.findMaxLevel+\"级\"+(res.findMaxLevel<res.maxLevel?\"(数据源没有\"+res.maxLevel+\"级)\":\"\")+\" \"+type+\"转换完成，共\"+res.list.length+\"条数据，\"+res.i+\" <div class='TestBox\"+idx+\"'><div class='_select'></div><div class='_selectInfo'></div><div class='_code'></div></div>\";\r\n\tlogElem.innerHTML=info;\r\n\t\r\n\tvar select=el(\".TestBox\"+idx+\" ._select\");\r\n\tvar data;\r\n\tif(type==\"js\"){\r\n\t\ttry{\r\n\t\t\tdata=eval(res.v+\"AreaCityData\");\r\n\t\t}catch(e){\r\n\t\t\tselect.innerHTML=\"类型\"+type+\"生成代码出错\"+(e.message.indexOf(\"unsafe-eval\")!=-1?\"，此网页不允许调用eval方法，请换一个网页\":\"\")+\"：\"+e.message;\r\n\t\t\treturn;\r\n\t\t};\r\n\t}else if(type==\"jsonObject\"){\r\n\t\tdata=JSON.parse(res.v);\r\n\t}else if(type==\"jsonArray\"){\r\n\t\tdata=JSON.parse(res.v);\r\n\t}else{\r\n\t\tselect.innerHTML=\"类型\"+type+\"无法生成联动代码\";\r\n\t\treturn;\r\n\t};\r\n\t\r\n\tvar RXOrgCityData=data;\r\n\tvar buildDataFn=type==\"jsonArray\"?function(){\r\n\t\tvar data=RXOrgCityData;\r\n\t\tvar obj={};\r\n\t\tfor(var i=0;i<data.length;i++){\r\n\t\t\tvar o=data[i];\r\n\t\t\tobj[o.i]={\r\n\t\t\t\tid:o.i\r\n\t\t\t\t,pid:o.p\r\n\t\t\t\t,name:o.n\r\n\t\t\t\t,y:o.y\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn obj;\r\n\t}:function(){\r\n\t\tvar data=RXOrgCityData;\r\n\t\tvar obj={};\r\n\t\tvar x=function(arr,p){\r\n\t\t\tfor(var k in arr){\r\n\t\t\t\tvar o=arr[k];\r\n\t\t\t\tobj[k]={\r\n\t\t\t\t\tid:+k\r\n\t\t\t\t\t,pid:p\r\n\t\t\t\t\t,name:o.n\r\n\t\t\t\t\t,y:o.y\r\n\t\t\t\t};\r\n\t\t\t\tx(o.c||{},+k);\r\n\t\t\t};\r\n\t\t};\r\n\t\tx(data,0);\r\n\t\treturn obj;\r\n\t};\r\n\tAreaCityData=buildDataFn();\r\n\tBuildCitySelect(el(\".TestBox\"+idx+\" ._select\"),selectID,function(id,hasChild,data){\r\n\t\tvar infos=[];\r\n\t\tvar p=data[id];\r\n\t\twhile(p){\r\n\t\t\tinfos.push(\"(\"+p.id+\")\"+p.name);\r\n\t\t\tp=data[p.pid];\r\n\t\t};\r\n\t\tinfos.reverse();\r\n\t\tel(\".TestBox\"+idx+\" ._selectInfo\").innerHTML=infos.join(\" - \")+\" 状态：\"+(hasChild?\"还可以选择\":\"选择到了最后一层\");\r\n\t});\r\n\t\r\n\tvar code=`/* GitHub: https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov\r\n【${res.findMaxLevel}级联动】\r\n本代码由WEB数据格式转换工具于${new Date().toLocaleString()}生成\r\n\r\n使用文档：\r\n【1】在需要的地方引入本js文件\r\n\r\n【2】在需要显示选择城市的地方调用下面方法\r\nBuildCitySelect(element,defaultSelectID,changeCall)\r\n\telement: 必填，城市选择下拉框显示位置，可以是css选择器、dom节点、jQuery选择的节点\r\n\tdefaultSelectID：可留空值，默认为0，任意级别的城市ID，创建时自动按路径选择到这个城市 \r\n\tchangeCall：fn(id,hasChild,cityData) 必填，下拉框值改变时回调，用来接收结果数据\r\n\t\t\t\t\tid：当前选择的城市\r\n\t\t\t\t\thasChild：是否还有下一级未选，如果未选，也许可以在表单最后确认时给提示\r\n\t\t\t\t\tcityData：城市数据列表，结构为{\"11\":{id:11,pid:0,name:\"北京\"},...}\r\n\r\n调用这个方法后会立即创建相应的下拉框，用户选择城市后会调用changeCall回调，需要及时保存id信息当做结果。\r\n*/\r\n\r\n/***测试代码开始，使用时应该将此段注释掉***/\r\n//将本文件内容全部复制到浏览器任意页面控制台中就能运行\r\nsetTimeout(function(){\r\n\tdocument.body.innerHTML='<div class=\"test1\"></div><div class=\"test2\"></div><div class=\"test3\"></div>';\r\n\t\r\n\tBuildCitySelect(\".test1\");\r\n\tBuildCitySelect(\".test2\",460204);//选中 三亚 天涯\r\n\tBuildCitySelect(\".test3\",11);//选中 北京\r\n});\r\n/***测试代码结束***/\r\n\r\n\r\n`+(\"var BuildCitySelect=(\"\r\n\t\t+buildCitySelectFn.toString()\r\n\t\t+\")();\")\r\n\t\t\t.replace(/buildCitySelectFn;/\r\n\t\t\t\t,(\"var AreaCityData=(\"\r\n\t\t\t\t+buildDataFn.toString()\r\n\t\t\t\t+\")();\")\r\n\t\t\t\t\t.replace(/var data=RXOrgCityData;/,type==\"js\"?res.v+\"var data=AreaCityData;\":\"var data=\"+res.v+\";\"));\r\n\t\r\n\tvar url=URL.createObjectURL(\r\n\t\tnew Blob([\r\n\t\t\tnew Uint8Array([0xEF,0xBB,0xBF])\r\n\t\t\t,code\r\n\t\t]\r\n\t\t,{\"type\":\"text/plain\"})\r\n\t);\r\n\tvar file=res.f.replace(/\\.[^.]+$/,\"\")+\".level\"+res.findMaxLevel+\".js\";\r\n\tvar downA=document.createElement(\"A\");\r\n\tdownA.innerHTML=\"点此下载\"+res.findMaxLevel+\"级联动源码（含数据） \"+file;\r\n\tdownA.href=url;\r\n\tdownA.download=file;\r\n\tel(\".TestBox\"+idx+\" ._code\").appendChild(downA);\r\n};\r\n\r\nvar AreaCityData;\r\nvar buildCitySelectFn=function(){\r\n\tbuildCitySelectFn;\r\n\tvar BuildSelect=function(elem,set,changeFn){\r\n\t\tvar data=AreaCityData;\r\n\t\tif(typeof(elem)==\"string\"){\r\n\t\t\telem=document.querySelector(elem);\r\n\t\t}else if(elem.length){\r\n\t\t\telem=elem[0];\r\n\t\t};\r\n\t\t\r\n\t\tvar build=function(pid,id,ids){\r\n\t\t\tvar has=false;\r\n\t\t\tvar arr=[];\r\n\t\t\tfor(var k in data){\r\n\t\t\t\tvar o=data[k];\r\n\t\t\t\tif(o.pid==pid){\r\n\t\t\t\t\thas=true;\r\n\t\t\t\t\tarr.push(o);\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\tif(set.sort){\r\n\t\t\t\tarr=set.sort(arr);\r\n\t\t\t};\r\n\t\t\tvar defName=set.defName||\"--请选择--\";\r\n\t\t\tif(pid==0&&!arr.length){\r\n\t\t\t\tdefName=set.emptyName||defName;\r\n\t\t\t};\r\n\t\t\tvar html=['<select pid=\"'+pid+'\"><option value=\"0\">'+defName+'</option>'];\r\n\t\t\tvar idsFind=ids?\" \"+ids.join(\" \")+\" \":\"\";\r\n\t\t\tfor(var i=0,o;i<arr.length;i++){\r\n\t\t\t\to=arr[i];\r\n\t\t\t\tvar slc=false;\r\n\t\t\t\tif(ids){\r\n\t\t\t\t\tslc=idsFind.indexOf(\" \"+o.id+\" \")!=-1;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tslc=o.id==id;\r\n\t\t\t\t};\r\n\t\t\t\thtml.push('<option value=\"'+o.id+'\" '+(slc?'selected':'')+'>'+o.name+'</option>');\r\n\t\t\t};\r\n\t\t\thtml.push('</select>');\r\n\t\t\treturn pid==0||has?html.join(\"\\n\"):\"\";\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tvar loopid=set.id,pid=-1,html=[],hasChild=false,childSelect;\r\n\t\twhile(pid!=0){\r\n\t\t\tpid=data[loopid]&&data[loopid].pid||0;\r\n\t\t\thtml.push(build(pid,loopid,null));\r\n\t\t\tloopid=pid;\r\n\t\t};\r\n\t\thtml.reverse();\r\n\t\tif(set.id){\r\n\t\t\tchildSelect=build(set.id,0);\r\n\t\t\tif(childSelect){\r\n\t\t\t\thasChild=true;\r\n\t\t\t\thtml.push(childSelect);\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tvar onChange=function(tg,id,pid){\r\n\t\t\tvar values=[];\r\n\t\t\tif(!id){\r\n\t\t\t\tid=pid;\r\n\t\t\t};\r\n\t\t\tset.id=id;\r\n\t\t\tset.values=values;\r\n\t\t\tchildSelect=BuildSelect(elem,set,changeFn);\r\n\t\t\tchangeFn&&changeFn(id,childSelect,data);\r\n\t\t};\r\n\t\telem.innerHTML=html.join(\"\\n\");\r\n\t\tvar arr=elem.querySelectorAll(\"select\");\r\n\t\tfor(var i=0;i<arr.length;i++){\r\n\t\t\tarr[i].addEventListener(\"change\",function(e){\r\n\t\t\t\tvar tg=e.target;\r\n\t\t\t\tonChange(tg,+tg.value,+tg.getAttribute(\"pid\"));\r\n\t\t\t});\r\n\t\t};\r\n\t\treturn hasChild;\r\n\t};\r\n\tfunction sort(arr,buildFn){\r\n\t\tvar rtv=[];\r\n\t\tarr.sort(function(a,b){\r\n\t\t\tvar y=a.y.charCodeAt(0)-b.y.charCodeAt(0);\r\n\t\t\tif(y){\r\n\t\t\t\treturn y;\r\n\t\t\t}else{\r\n\t\t\t\treturn (a.y+a.name).localeCompare(b.y+b.name);\r\n\t\t\t};\r\n\t\t});\r\n\t\tfor(var i=0,o,name;i<arr.length;i++){\r\n\t\t\to=arr[i];\r\n\t\t\tname=o.y.substr(0,1).toUpperCase()+\" \"+o.name;\r\n\t\t\tif(buildFn){\r\n\t\t\t\trtv.push(buildFn(o,name));\r\n\t\t\t}else{\r\n\t\t\t\trtv.push({id:o.id,name:name});\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn rtv;\r\n\t};\r\n\t\r\n\treturn function(elem,id,changeFn){\r\n\t\treturn BuildSelect(elem,{id:id,sort:sort},changeFn);\r\n\t};\r\n};\r\nwindow.BuildCitySelect=buildCitySelectFn();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************\r\n** 格式化逻辑\r\n*****************************/\r\nfunction Format(type){\r\n\tvar maxLevel=+el(\".AreaFormatLevel\").value;\r\n\tvar fullName=+el(\"input[name=AreaFormatFullName]:checked\").value;\r\n\tvar txt=el(\".AreaFormatInput\").value;\r\n\tif(!txt){\r\n\t\treturn Result(\"请在数据源内粘贴csv数据\");\r\n\t};\r\n\t\r\n\t//解析csv数据\r\n\tvar lines=txt.split(\"\\n\");\r\n\tvar list=[];\r\n\tvar mapping={\"0\":{level:0,childs:[]}};\r\n\tvar arr=lines[0].split(\",\");\r\n\tif(arr.length!=8 || arr[0]!=\"id\"){\r\n\t\treturn Result(\"粘贴csv数据不合法\");\r\n\t};\r\n\tfor(var i=1;i<lines.length;i++){\r\n\t\tvar line=lines[i];\r\n\t\tif(line){\r\n\t\t\tvar arr=line.split(\",\");\r\n\t\t\tif(arr.length!=8){\r\n\t\t\t\treturn Result(\"粘贴csv数据第\"+(i+1)+\"行不合法\");\r\n\t\t\t};\r\n\t\t\tvar itm={\r\n\t\t\t\tid:+arr[0]\r\n\t\t\t\t,pid:+arr[1]\r\n\t\t\t\t,deep:+arr[2]\r\n\t\t\t\t,name:arr[3].replace(/\"\"/g,'\"').replace(/^\"|\"$/g,'')\r\n\t\t\t\t,pinyin_prefix:arr[4].replace(/\"\"/g,\"\").replace(/^\"|\"$/g,'')\r\n\t\t\t\t,pinyin:arr[5].replace(/\"\"/g,\"\").replace(/^\"|\"$/g,'')\r\n\t\t\t\t,ext_id:arr[6].replace(/\"\"/g,\"\").replace(/^\"|\"$/g,'')\r\n\t\t\t\t,ext_name:arr[7].replace(/\"\"/g,\"\").replace(/^\"|\"$/g,'')\r\n\t\t\t\t\r\n\t\t\t\t,level:-1\r\n\t\t\t\t,childs:[]\r\n\t\t\t};\r\n\t\t\tif(fullName && type!=\"user\"){\r\n\t\t\t\titm.name=itm.ext_name;\r\n\t\t\t}\r\n\t\t\tlist.push(itm);\r\n\t\t\tmapping[itm.id]=itm;\r\n\t\t};\r\n\t};\r\n\t\r\n\t//添加childs关系\r\n\tvar xChild=function(){\r\n\t\tfor(var i=0;i<list.length;i++){\r\n\t\t\tvar itm=list[i];\r\n\t\t\tif(!mapping[itm.pid]){\r\n\t\t\t\treturn Result(\"粘贴csv数据中【\"+itm.id+\"】数据无效\");\r\n\t\t\t};\r\n\t\t\tmapping[itm.pid].childs.push(itm);\r\n\t\t};\r\n\t};\r\n\t//计算level值\r\n\tvar xLevel=function(obj){\r\n\t\tfor(var i=0;i<obj.childs.length;i++){\r\n\t\t\tvar o=obj.childs[i];\r\n\t\t\to.level=obj.level+1;\r\n\t\t\tif(o.level!=o.deep+1){\r\n\t\t\t\tvar msg=\"数据存在错误，级别不对，请看控制台输出\";\r\n\t\t\t\talert(msg);\r\n\t\t\t\tconsole.error(msg,obj,o);\r\n\t\t\t\tthrow new Error();\r\n\t\t\t};\r\n\t\t\txLevel(o);\r\n\t\t};\r\n\t};\r\n\txChild();\r\n\txLevel(mapping[0]);\r\n\t\r\n\t//移除不符合level的数据，并重建映射\r\n\tvar findMaxLevel=0;\r\n\tmapping={\"0\":{level:0,childs:[]}};\r\n\tfor(var i=0;i<list.length;i++){\r\n\t\tvar itm=list[i];\r\n\t\tif(itm.level>maxLevel){\r\n\t\t\tlist.splice(i,1);\r\n\t\t\ti--;\r\n\t\t\tcontinue;\r\n\t\t};\r\n\t\tfindMaxLevel=Math.max(findMaxLevel,itm.level);\r\n\t\titm.childs=[];\r\n\t\tmapping[itm.id]=itm;\r\n\t};\r\n\txChild();\r\n\t\r\n\t\r\n\t//实际格式化\r\n\tvar rtv;\r\n\tif(type==\"user\"){\r\n\t\twindow.UserFormat=null;\r\n\t\ttry{\r\n\t\t\teval.call(window,el(\".AreaFormatUserFormatIn\").value);\r\n\t\t\tif(!UserFormat){\r\n\t\t\t\tthrow new Error(\"需在代码内实现UserFormat方法\");\r\n\t\t\t}\r\n\t\t\trtv=UserFormat(list,mapping);\r\n\t\t}catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\treturn Result(\"自定义UserFormat代码执行异常：\"+e.message);\r\n\t\t}\r\n\t}else if(type==\"js\"){\r\n\t\trtv=JsFormat(list,mapping);\r\n\t}else if(type==\"jsonObject\"){\r\n\t\trtv=JsonObjectFormat(list,mapping);\r\n\t}else if(type==\"jsonArray\"){\r\n\t\trtv=JsonArrayFormat(list,mapping);\r\n\t}else{\r\n\t\treturn Result(\"未知类型：\"+type);\r\n\t};\r\n\t\r\n\trtv.maxLevel=maxLevel;\r\n\trtv.findMaxLevel=findMaxLevel;\r\n\trtv.list=list;\r\n\trtv.mapping=mapping;\r\n\t\r\n\twindow.FormatResult=rtv;\r\n\tconsole.log(\"结果已存入变量 FormatResult ：\", FormatResult);\r\n\tconsole.log(\"可以 eval('('+FormatResult.v+')')\");\r\n\treturn rtv;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************\r\n** 界面操作\r\n*****************************/\r\n\r\nfunction el(cls){\r\n\treturn document.querySelector(cls);\r\n};\r\nfunction log(html,err){\r\n\tif(err){\r\n\t\tconsole.error(html);\r\n\t};\r\n\tel(\".AreaFormatResult\").innerHTML=`<div style=\"${err?'color:red':''}\">`+html+'</div>';\r\n};\r\nwindow.FormatLog=log;\r\nvar isIndex=window.PageIsRootIndex;\r\n\r\nvar bodyHtml=`\r\n<style>\r\nbody{\r\n\tmin-height:1500px;\r\n}\r\n.AreaFormat{\r\n\tposition: absolute;\r\n\tz-index:99999999;\r\n\twidth:90%;\r\n\tleft:5%;\r\n\ttop:20px;\r\n\tbackground:#15822e;\r\n\tcolor: #fff;\r\n\tfont-size:14px;\r\n}\r\n.AreaFormat select {\r\n\theight: 30px;\r\n\tmargin:8px 0;\r\n}\r\na{text-decoration: none;}\r\n.AreaFormatA a{color:#fb0}\r\n.AreaFormatA a:hover{color:#f00}\r\n\r\n.AreaFormat_Title{\r\n\tpadding: 40px 0 10px;\r\n\tfont-size: 40px;\r\n\ttext-align: center;\r\n}\r\n.AreaFormat_Btn{\r\n\tpadding: 10px 20px;\r\n}\r\n\r\n.F2{\r\n\tfont-size:18px;\r\n}\r\n</style>\r\n<div class=\"AreaFormat ${isIndex?'mainBox\" style=\"padding:0':''}\">\r\n\t<div class=\"AreaFormat_Title\">\r\n\t\t四级行政区划数据预览 + Web数据格式在线转换工具\r\n\t</div>\r\n\t<div class=\"AreaFormatA\" style=\"width:1030px;margin:0 auto;padding-bottom:30px\">\r\n\t\t小提示 : \r\n\t\t本工具是用来转换省市区镇四级行政区划数据为js支持的格式的，不支持导入数据库，也不支持处理坐标和城市边界范围数据，如果你要导入数据库、或转换坐标和城市边界范围数据（如shp、geojson、sql），<a href=\"${isIndex?'':'https://xiangyuecn.github.io/AreaCity-JsSpider-StatsGov/'}assets/AreaCity-Geo-Transform-Tools.html\" target=\"_blank\">请点此处</a>下载《AreaCity-Geo格式转换工具软件》轻松处理。\r\n\t</div>\r\n\t<div style=\"display: flex;\">\r\n\t\t<div style=\"flex: 1;\"></div>\r\n\t\t<div style=\"width:600px\">\r\n\t\t\t<div>\r\n\t\t\t\t<span class=\"F2\">【数据源】</span>\r\n\t\t\t\t<span class=\"AreaFormatFrom\"></span>\r\n\t\t\t</div>\r\n\t\t\t<textarea class=\"AreaFormatInput\" style=\"width:600px;height:160px\"\r\n\t\t\t\tplaceholder=\"请先粘贴《${AllowAccessFolder}》目录下的《${AllowAccessFiles.join('》或者《')}》文件内容，数据量大可能粘贴会很慢。\r\n\r\n然后再点击右侧需要的格式按钮进行转换。\"></textarea>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<span class=\"F2\">【导出数据级别】</span>\r\n\t\t\t\t选择的级别需要数据源内包含此级的数据，比如level3不包含镇级，就算选了镇，也不会导出此级数据\r\n\t\t\t</div>\r\n\t\t\t<select class=\"AreaFormatLevel\">\r\n\t\t\t\t<option value=\"1\">(1级)省</option>\r\n\t\t\t\t<option value=\"2\">(2级)省市</option>\r\n\t\t\t\t<option value=\"3\">(3级)省市区</option>\r\n\t\t\t\t<option value=\"4\" selected>(4级)省市区镇</option>\r\n\t\t\t</select>\r\n\t\t\t<label><input type=\"radio\" name=\"AreaFormatFullName\" value=\"0\" checked>使用精简名称(name)</label>\r\n\t\t\t<label><input type=\"radio\" name=\"AreaFormatFullName\" value=\"1\">使用完整名称(ext_name)</label>\r\n\t\t\t\r\n\t\t\t<hr>\r\n\t\t\t<div>\r\n\t\t\t\t<span class=\"F2\">【运行结果】</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"AreaFormatResult\" style=\"background: #fff;color: #000;padding: 10px;\"></div>\r\n\t\t</div>\r\n\t\t<div style=\"padding-left:30px; width:400px\">\r\n\t\t\t<input class=\"AreaFormat_Btn\" type=\"button\" value=\"(小)导出为紧凑JS\" exec=\"FormatClick,js\">\r\n\t\t\t<input type=\"button\" value=\"多级联动测试和生成代码\" exec=\"TestClick,js\">\r\n\t\t\t<div>\r\n\t\t\t\tjs格式会对数据进行压缩成紧凑格式，大幅减少冗余数据，格式如: var AreaCityData=(function(r){})(\"[20,省名,shm[2001,市名,shm;];]\"); 在js运行时自动解压，还原后的格式和下面的JSON对象格式一致，如果对键名称不满意，可以自行修改JsFormat方法\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<hr/>\r\n\t\t\t<input class=\"AreaFormat_Btn\" type=\"button\" value=\"(中)导出为JSON对象\" exec=\"FormatClick,jsonObject\">\r\n\t\t\t<input type=\"button\" value=\"多级联动测试和生成代码\" exec=\"TestClick,jsonObject\">\r\n\t\t\t<div>\r\n\t\t\t\t格式如：{\"20\":{\"n\":\"省名\",\"y\":\"shm\",\"c\":{\"2001\":{\"n\":\"市名\",\"y\":\"shm\"}}}} ，数字key为id，n为名称，y为拼音前缀，c为子集，如果对键名称不满意，可以自行修改JsonObjectFormat方法\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<hr/>\r\n\t\t\t<input class=\"AreaFormat_Btn\" type=\"button\" value=\"(大)导出为JSON数组\" exec=\"FormatClick,jsonArray\">\r\n\t\t\t<input type=\"button\" value=\"多级联动测试和生成代码\" exec=\"TestClick,jsonArray\">\r\n\t\t\t<div>\r\n\t\t\t\t格式如：[{\"n\":\"省名\",\"i\":20,\"p\":0,\"y\":\"shm\"},{\"n\":\"市名\",\"i\":2001,\"p\":20,\"y\":\"shm\"}]，n为名称，i为id，p为pid，y为拼音前缀，如果对键名称不满意，可以自行修改JsonArrayFormat方法\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<hr/>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea class=\"AreaFormatUserFormatIn\" style=\"width:390px;height:160px\"\r\n\t\t\t\tplaceholder=\"\">${UserFormat.toString().replace(/\\t/g,'    ')}</textarea>\r\n\t\t\t</div>\r\n\t\t\t<input class=\"AreaFormat_Btn\" type=\"button\" value=\"导出为自定义\" exec=\"FormatClick,user\">\r\n\t\t\t<div>自行修改源码实现UserFormat方法，导出自己想要的格式</div>\r\n\t\t\t<div>代码框内默认已实现的导出格式为：[{id:123,name:\"省名\",所有字段...,childs:[ 所有子级... ]}]</div>\r\n\t\t</div>\r\n\t\t<div style=\"flex: 1;\"></div>\r\n\t</div>\r\n\t\r\n\t<div style=\"padding:30px\"></div>\r\n</div>\r\n`;\r\n\r\nwhile(true){\r\n\tvar elem=el(\".AreaFormat\");\r\n\tif(!elem){\r\n\t\tbreak;\r\n\t};\r\n\telem.parentNode.removeChild(elem);\r\n};\r\nvar elem=document.createElement(\"div\");\r\nelem.innerHTML=bodyHtml;\r\n(window.AreaFormatBoxElem||document.body).appendChild(elem);\r\ndocument.body.scrollTop=0;\r\ndocument.documentElement.scrollTop=0;\r\n\r\nelem.addEventListener(\"click\",function(e){\r\n\tvar exec=e.target.getAttribute(\"exec\");\r\n\tif(exec){\r\n\t\tvar arr=exec.split(\",\");\r\n\t\twindow[arr[0]](arr[1]);\r\n\t};\r\n});\r\n\r\nel(\".AreaFormatLevel\").onchange=function(){\r\n\tTestReView(\"已切换数据级别\");\r\n};\r\nvar arr=document.querySelectorAll(\"input[name=AreaFormatFullName]\");\r\nfor(var i=0;i<arr.length;i++){\r\n\tarr[i].onclick=function(){ TestReView(\"已切精简/完整名称\"); }\r\n};\r\nwindow.TestReView=function(topHtml){\r\n\tvar input=el(\".AreaFormatInput\");\r\n\tFormatLog((topHtml||\"\")+`\r\n\t\t<hr><div>输入框中本来的提示信息：</div>\r\n\t\t<pre>${input.placeholder}</pre>\r\n\t\t\r\n\t\t<hr><div class='initTest1'></div>\r\n\t\t<hr><div class='initTest2'></div>\r\n\t\t<hr><div class='initTest3'></div>\r\n\t`);\r\n\t\r\n\tTestClick(\"js\",\".initTest1\");\r\n\tTestClick(\"jsonObject\",\".initTest2\",460204);//选中 三亚 天涯\r\n\tTestClick(\"jsonArray\",\".initTest3\",11);//选中 北京\r\n};\r\n\r\n})();"
        }
      ]
    }
  ]
}