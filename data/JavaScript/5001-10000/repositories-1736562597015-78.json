{
  "metadata": {
    "timestamp": 1736562597015,
    "page": 78,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "developit/htm",
      "stars": 8762,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.072265625,
          "content": "node_modules\npackage-lock.json\n/preact\n/react\ndist\nmini\nyarn.lock\nhtm.tgz\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.271484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at jason@developit.ca. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.07421875,
          "content": "# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows [Google's Open Source Community\nGuidelines](https://opensource.google.com/conduct/)."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0751953125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2018 Google Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.4345703125,
          "content": "\n<h1 align=\"center\">\n  HTM (Hyperscript Tagged Markup)\n  <a href=\"https://www.npmjs.org/package/htm\"><img src=\"https://img.shields.io/npm/v/htm.svg?style=flat\" alt=\"npm\"></a>\n</h1>\n<p align=\"center\">\n  <img src=\"https://i.imgur.com/0ph8dbS.png\" width=\"572\" alt=\"hyperscript tagged markup demo\">\n</p>\n\n`htm` is **JSX-like syntax in plain JavaScript** - no transpiler necessary.\n\nDevelop with React/Preact directly in the browser, then compile `htm` away for production.\n\nIt uses standard JavaScript [Tagged Templates] and works in [all modern browsers].\n\n## `htm` by the numbers:\n\n🐣 **< 600 bytes** when used directly in the browser\n\n⚛️ **< 500 bytes** when used with Preact _(thanks gzip 🌈)_\n\n🥚 **< 450 byte** `htm/mini` version\n\n🏅 **0 bytes** if compiled using [babel-plugin-htm]\n\n\n## Syntax: like JSX but also lit\n\nThe syntax you write when using HTM is as close as possible to JSX:\n\n- Spread props: `<div ...${props}>` instead of `<div {...props}>`\n- Self-closing tags: `<div />`\n- Components: `<${Foo}>` instead of `<Foo>` _(where `Foo` is a component reference)_\n- Boolean attributes: `<div draggable />`\n\n\n## Improvements over JSX\n\n`htm` actually takes the JSX-style syntax a couple steps further!\n\nHere's some ergonomic features you get for free that aren't present in JSX:\n\n- **No transpiler necessary**\n- HTML's optional quotes: `<div class=foo>`\n- Component end-tags: `<${Footer}>footer content<//>`\n- Syntax highlighting and language support via the [lit-html VSCode extension] and [vim-jsx-pretty plugin].\n- Multiple root element (fragments): `<div /><div />`\n- Support for HTML-style comments: `<div><!-- comment --></div>`\n\n## Installation\n\n`htm` is published to npm, and accessible via the unpkg.com CDN:\n\n**via npm:**\n\n```js\nnpm i htm\n```\n\n**hotlinking from unpkg:** _(no build tool needed!)_\n\n```js\nimport htm from 'https://unpkg.com/htm?module'\nconst html = htm.bind(React.createElement);\n```\n\n```js\n// just want htm + preact in a single file? there's a highly-optimized version of that:\nimport { html, render } from 'https://unpkg.com/htm/preact/standalone.module.js'\n```\n\n## Usage\n\nIf you're using Preact or React, we've included off-the-shelf bindings to make your life easier.\nThey also have the added benefit of sharing a template cache across all modules.\n\n```js\nimport { render } from 'preact';\nimport { html } from 'htm/preact';\nrender(html`<a href=\"/\">Hello!</a>`, document.body);\n```\n\nSimilarly, for React:\n\n```js\nimport ReactDOM from 'react-dom';\nimport { html } from 'htm/react';\nReactDOM.render(html`<a href=\"/\">Hello!</a>`, document.body);\n```\n\n### Advanced Usage\n\nSince `htm` is a generic library, we need to tell it what to \"compile\" our templates to.\nYou can bind `htm` to any function of the form `h(type, props, ...children)` _([hyperscript])_.\nThis function can return anything - `htm` never looks at the return value.\n\nHere's an example `h()` function that returns tree nodes:\n\n```js\nfunction h(type, props, ...children) {\n  return { type, props, children };\n}\n```\n\nTo use our custom `h()` function, we need to create our own `html` tag function by binding `htm` to our `h()` function:\n\n```js\nimport htm from 'htm';\n\nconst html = htm.bind(h);\n```\n\nNow we have an `html()` template tag that can be used to produce objects in the format we created above.\n\nHere's the whole thing for clarity:\n\n```js\nimport htm from 'htm';\n\nfunction h(type, props, ...children) {\n  return { type, props, children };\n}\n\nconst html = htm.bind(h);\n\nconsole.log( html`<h1 id=hello>Hello world!</h1>` );\n// {\n//   type: 'h1',\n//   props: { id: 'hello' },\n//   children: ['Hello world!']\n// }\n```\n\nIf the template has multiple element at the root level\nthe output is an array of `h` results:\n\n```js\nconsole.log(html`\n  <h1 id=hello>Hello</h1>\n  <div class=world>World!</div>\n`);\n// [\n//   {\n//     type: 'h1',\n//     props: { id: 'hello' },\n//     children: ['Hello']\n//   },\n//   {\n//     type: 'div',\n//     props: { class: 'world' },\n//     children: ['world!']\n//   }\n// ]\n```\n\n### Caching\n\nThe default build of `htm` caches template strings, which means that it can return the same Javascript object at multiple points in the tree. If you don't want this behaviour, you have three options:\n\n* Change your `h` function to copy nodes when needed.\n* Add the code `this[0] = 3;` at the beginning of your `h` function, which disables caching of created elements.\n* Use `htm/mini`, which disables caching by default.\n\n## Example\n\nCurious to see what it all looks like? Here's a working app!\n\nIt's a single HTML file, and there's no build or tooling. You can edit it with nano.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <title>htm Demo</title>\n  <script type=\"module\">\n    import { html, Component, render } from 'https://unpkg.com/htm/preact/standalone.module.js';\n\n    class App extends Component {\n      addTodo() {\n        const { todos = [] } = this.state;\n        this.setState({ todos: todos.concat(`Item ${todos.length}`) });\n      }\n      render({ page }, { todos = [] }) {\n        return html`\n          <div class=\"app\">\n            <${Header} name=\"ToDo's (${page})\" />\n            <ul>\n              ${todos.map(todo => html`\n                <li key=${todo}>${todo}</li>\n              `)}\n            </ul>\n            <button onClick=${() => this.addTodo()}>Add Todo</button>\n            <${Footer}>footer content here<//>\n          </div>\n        `;\n      }\n    }\n\n    const Header = ({ name }) => html`<h1>${name} List</h1>`\n\n    const Footer = props => html`<footer ...${props} />`\n\n    render(html`<${App} page=\"All\" />`, document.body);\n  </script>\n</html>\n```\n\n[⚡️ **See live version** ▶](https://htm-demo-preact.glitch.me/)\n\n[⚡️ **Try this on CodeSandbox** ▶](https://codesandbox.io/s/x7pmq32j6q)\n\nHow nifty is that?\n\nNotice there's only one import - here we're using the prebuilt Preact integration since it's easier to import and a bit smaller.\n\nThe same example works fine without the prebuilt version, just using two imports:\n\n```js\nimport { h, Component, render } from 'preact';\nimport htm from 'htm';\n\nconst html = htm.bind(h);\n\nrender(html`<${App} page=\"All\" />`, document.body);\n```\n\n## Other Uses\n\nSince `htm` is designed to meet the same need as JSX, you can use it anywhere you'd use JSX.\n\n**Generate HTML using [vhtml]:**\n\n```js\nimport htm from 'htm';\nimport vhtml from 'vhtml';\n\nconst html = htm.bind(vhtml);\n\nconsole.log( html`<h1 id=hello>Hello world!</h1>` );\n// '<h1 id=\"hello\">Hello world!</h1>'\n```\n\n**Webpack configuration via [jsxobj]:** ([details here](https://webpack.js.org/configuration/configuration-languages/#babel-and-jsx)) _(never do this)_\n\n```js\nimport htm from 'htm';\nimport jsxobj from 'jsxobj';\n\nconst html = htm.bind(jsxobj);\n\nconsole.log(html`\n  <webpack watch mode=production>\n    <entry path=\"src/index.js\" />\n  </webpack>\n`);\n// {\n//   watch: true,\n//   mode: 'production',\n//   entry: {\n//     path: 'src/index.js'\n//   }\n// }\n```\n\n## Demos & Examples\n\n- [Canadian Holidays](https://github.com/pcraig3/hols): A full app using HTM and Server-Side Rendering\n- [HTM SSR Example](https://github.com/timarney/htm-ssr-demo): Shows how to do SSR with HTM\n- [HTM + Preact SSR Demo](https://gist.github.com/developit/699c8d8f180a1e4eed58167f9c6711be)\n- [HTM + vhtml SSR Demo](https://gist.github.com/developit/ff925c3995b4a129b6b977bf7cd12ebd)\n\n## Project Status\n\nThe original goal for `htm` was to create a wrapper around Preact that felt natural for use untranspiled in the browser. I wanted to use Virtual DOM, but I wanted to eschew build tooling and use ES Modules directly.\n\n This meant giving up JSX, and the closest alternative was [Tagged Templates]. So, I wrote this library to patch up the differences between the two as much as possible. The technique turns out to be framework-agnostic, so it should work great with any library or renderer that works with JSX.\n\n`htm` is stable, fast, well-tested and ready for production use.\n\n[Tagged Templates]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates\n[lit-html]: https://github.com/Polymer/lit-html\n[babel-plugin-htm]: https://github.com/developit/htm/tree/master/packages/babel-plugin-htm\n[lit-html VSCode extension]: https://marketplace.visualstudio.com/items?itemName=bierner.lit-html\n[vim-jsx-pretty plugin]: https://github.com/MaxMEllon/vim-jsx-pretty\n[vhtml]: https://github.com/developit/vhtml\n[jsxobj]: https://github.com/developit/jsxobj\n[hyperscript]: https://github.com/hyperhype/hyperscript\n[all modern browsers]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Browser_compatibility\n"
        },
        {
          "name": "babel.config.js",
          "type": "blob",
          "size": 0.1181640625,
          "content": "module.exports = {\n\tpresets: [\n\t\t[\n\t\t\t'@babel/preset-env',\n\t\t\t{\n\t\t\t\ttargets: {\n\t\t\t\t\tnode: 'current'\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t]\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.5,
          "content": "{\n  \"name\": \"htm\",\n  \"version\": \"3.1.1\",\n  \"description\": \"The Tagged Template syntax for Virtual DOM. Only browser-compatible syntax.\",\n  \"main\": \"dist/htm.js\",\n  \"umd:main\": \"dist/htm.umd.js\",\n  \"module\": \"dist/htm.module.js\",\n  \"types\": \"dist/htm.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/htm.d.ts\",\n      \"browser\": \"./dist/htm.module.js\",\n      \"umd\": \"./dist/htm.umd.js\",\n      \"import\": \"./dist/htm.mjs\",\n      \"require\": \"./dist/htm.js\"\n    },\n    \"./\": \"./\",\n    \"./preact\": {\n      \"types\": \"./preact/index.d.ts\",\n      \"browser\": \"./preact/index.module.js\",\n      \"umd\": \"./preact/index.umd.js\",\n      \"import\": \"./preact/index.mjs\",\n      \"require\": \"./preact/index.js\"\n    },\n    \"./preact/standalone\": {\n      \"types\": \"./preact/index.d.ts\",\n      \"browser\": \"./preact/standalone.module.js\",\n      \"umd\": \"./preact/standalone.umd.js\",\n      \"import\": \"./preact/standalone.mjs\",\n      \"require\": \"./preact/standalone.js\"\n    },\n    \"./react\": {\n      \"types\": \"./react/index.d.ts\",\n      \"browser\": \"./react/index.module.js\",\n      \"umd\": \"./react/index.umd.js\",\n      \"import\": \"./react/index.mjs\",\n      \"require\": \"./react/index.js\"\n    },\n    \"./mini\": {\n      \"types\": \"./mini/index.d.ts\",\n      \"browser\": \"./mini/index.module.js\",\n      \"umd\": \"./mini/index.umd.js\",\n      \"import\": \"./mini/index.mjs\",\n      \"require\": \"./mini/index.js\"\n    }\n  },\n  \"scripts\": {\n    \"build\": \"npm run -s build:main && npm run -s build:mini && npm run -s build:preact && npm run -s build:react && npm run -s build:babel && npm run -s build:babel-transform-jsx && npm run -s build:mjsalias\",\n    \"build:main\": \"microbundle src/index.mjs -f es,umd --no-sourcemap --target web && microbundle src/cjs.mjs -f iife --no-sourcemap --target web && cp src/index.d.ts dist/htm.d.ts\",\n    \"build:mini\": \"microbundle src/index.mjs -o ./mini/index.js -f es,umd --no-sourcemap --target web --alias ./constants.mjs=./constants-mini.mjs && microbundle src/cjs.mjs -o ./mini/index.js -f iife --no-sourcemap --target web --alias ./constants.mjs=./constants-mini.mjs && cp src/index.d.ts mini\",\n    \"build:preact\": \"cd src/integrations/preact && npm run build\",\n    \"build:react\": \"cd src/integrations/react && npm run build\",\n    \"build:babel\": \"cd packages/babel-plugin-htm && npm run build\",\n    \"build:babel-transform-jsx\": \"cd packages/babel-plugin-transform-jsx-to-htm && npm run build\",\n    \"build:mjsalias\": \"cp dist/htm.module.js dist/htm.mjs && cp mini/index.module.js mini/index.mjs && cp preact/index.module.js preact/index.mjs && cp preact/standalone.module.js preact/standalone.mjs && cp react/index.module.js react/index.mjs\",\n    \"test\": \"eslint src/**/*.mjs test/**/*.mjs --ignore-path .gitignore && npm run build && jest test\",\n    \"test:perf\": \"v8 test/__perftest.mjs\",\n    \"test:dist\": \"npm pack && mv htm*.tgz test/fixtures/esm/htm.tgz && cd test/fixtures/esm && npm install && node index.js\",\n    \"release\": \"npm t && git commit -am \\\"$npm_package_version\\\" && git tag $npm_package_version && git push && git push --tags && npm publish\"\n  },\n  \"files\": [\n    \"dist\",\n    \"mini\",\n    \"preact\",\n    \"react\",\n    \"src\"\n  ],\n  \"eslintConfig\": {\n    \"extends\": \"developit\",\n    \"rules\": {\n      \"prefer-const\": 0,\n      \"prefer-spread\": 0,\n      \"prefer-rest-params\": 0,\n      \"func-style\": 0\n    }\n  },\n  \"jest\": {\n    \"testURL\": \"http://localhost\",\n    \"testMatch\": [\n      \"**/__tests__/**/*.?(m)js?(x)\",\n      \"**/?(*.)(spec|test).?(m)js?(x)\"\n    ],\n    \"transform\": {\n      \"\\\\.m?js$\": \"babel-jest\"\n    },\n    \"moduleFileExtensions\": [\n      \"mjs\",\n      \"js\"\n    ],\n    \"moduleNameMapper\": {\n      \"^babel-plugin-transform-jsx-to-htm$\": \"<rootDir>/packages/babel-plugin-transform-jsx-to-htm/index.mjs\",\n      \"^babel-plugin-htm$\": \"<rootDir>/packages/babel-plugin-htm/index.mjs\",\n      \"^htm$\": \"<rootDir>/src/index.mjs\",\n      \"^htm/preact$\": \"<rootDir>/src/integrations/preact/index.mjs\"\n    }\n  },\n  \"repository\": \"developit/htm\",\n  \"keywords\": [\n    \"Hyperscript Tagged Markup\",\n    \"tagged template\",\n    \"template literals\",\n    \"html\",\n    \"htm\",\n    \"jsx\",\n    \"virtual dom\",\n    \"hyperscript\"\n  ],\n  \"author\": \"Jason Miller <jason@developit.ca>\",\n  \"license\": \"Apache-2.0\",\n  \"homepage\": \"https://github.com/developit/htm\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.2.2\",\n    \"@babel/preset-env\": \"^7.1.6\",\n    \"@types/jest\": \"^26.0.24\",\n    \"babel-jest\": \"^24.1.0\",\n    \"babel-preset-env\": \"^1.7.0\",\n    \"eslint\": \"^5.2.0\",\n    \"eslint-config-developit\": \"^1.1.1\",\n    \"jest\": \"^24.1.0\",\n    \"microbundle\": \"^0.10.1\",\n    \"preact\": \"^10.2.0\",\n    \"react\": \"^16.8.3\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}