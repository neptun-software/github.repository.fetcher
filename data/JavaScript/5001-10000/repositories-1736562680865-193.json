{
  "metadata": {
    "timestamp": 1736562680865,
    "page": 193,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ProseMirror/prosemirror",
      "stars": 7833,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2939453125,
          "content": ".tern-port\n/node_modules\n/model\n/transform\n/state\n/view\n/history\n/collab\n/commands\n/inputrules\n/keymap\n/search\n/schema-basic\n/schema-list\n/schema-table\n/menu\n/markdown\n/dropcursor\n/test-builder\n/gapcursor\n/changeset\n/website\n/example-setup\n/tables\n/notes.txt\n/yarn.lock\n/bin/.pm-dev.pid\n/demo/demo.js\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.4658203125,
          "content": "# How to contribute\n\n- [Getting help](#getting-help)\n- [Submitting bug reports](#submitting-bug-reports)\n- [Contributing code](#contributing-code)\n\n## Getting help\n\nCommunity discussion, questions, and informal bug reporting is done on the\n[discuss.ProseMirror forum](http://discuss.prosemirror.net).\n\n## Submitting bug reports\n\nReport bugs on the\n[GitHub issue tracker](http://github.com/prosemirror/prosemirror/issues).\nBefore reporting a bug, please read these pointers.\n\n- The issue tracker is for *bugs*, not requests for help. Questions\n  should be asked on the [forum](http://discuss.prosemirror.net).\n\n- Include information about the version of the code that exhibits the\n  problem. For browser-related issues, include the browser and browser\n  version on which the problem occurred.\n\n- Mention very precisely what went wrong. \"X is broken\" is not a good\n  bug report. What did you expect to happen? What happened instead?\n  Describe the exact steps a maintainer has to take to make the\n  problem occur. A screencast can be useful, but is no substitute for\n  a textual description.\n\n- A great way to make it easy to reproduce your problem, if it can not\n  be trivially reproduced on the website demos, is to submit a script\n  that triggers the issue.\n\n## Contributing code\n\n- Make sure you have a [GitHub Account](https://github.com/signup/free)\n\n- Fork the relevant repository\n  ([how to fork a repo](https://help.github.com/articles/fork-a-repo))\n\n- Create a local checkout of the code. You can use the\n  [main repository](https://github.com/prosemirror/prosemirror) to\n  easily check out all core modules.\n\n- Make your changes, and commit them\n\n- Follow the code style of the rest of the project (see below). Run\n  `npm run lint` (in the main repository checkout) to make sure that\n  the linter is happy.\n\n- If your changes are easy to test or likely to regress, add tests in\n  the relevant `test/` directory. Either put them in an existing\n  `test-*.js` file, if they fit there, or add a new file.\n\n- Make sure all tests pass. Run `npm run test` to verify tests pass\n  (you will need Node.js v6+).\n\n- Submit a pull request ([how to create a pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork)).\n  Don't put more than one feature/fix in a single pull request.\n\nBy contributing code to ProseMirror you\n\n - Agree to license the contributed code under the project's [MIT\n   license](https://github.com/ProseMirror/prosemirror/blob/master/LICENSE).\n\n - Confirm that you have the right to contribute and license the code\n   in question. (Either you hold all rights on the code, or the rights\n   holder has explicitly granted the right to use it like this,\n   through a compatible open source license or through a direct\n   agreement with you.)\n\n### Coding standards\n\n- TypeScript, targeting an ES5 runtime (i.e. don't use library\n  elements added by ES6, don't use ES7/ES.next syntax).\n\n- 2 spaces per indentation level, no tabs.\n\n- No semicolons except when necessary.\n\n- Follow the surrounding code when it comes to spacing, brace\n  placement, etc.\n\n- Brace-less single-statement bodies are encouraged (whenever they\n  don't impact readability).\n\n- [getdocs](https://github.com/marijnh/getdocs-ts)-style doc comments\n  above items that are part of the public API.\n\n- ProseMirror does *not* follow JSHint or JSLint prescribed style.\n  Patches that try to 'fix' code to pass one of these linters will not\n  be accepted.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0791015625,
          "content": "Copyright (C) 2015-2017 by Marijn Haverbeke <marijn@haverbeke.berlin> and others\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9326171875,
          "content": "# prosemirror\n\n[ [**WEBSITE**](https://prosemirror.net) | [**ISSUES**](https://github.com/prosemirror/prosemirror/issues) | [**FORUM**](https://discuss.prosemirror.net) ]\n\nProseMirror is a well-behaved rich semantic content editor based on\ncontentEditable, with support for collaborative editing and custom\ndocument schemas.\n\nThe ProseMirror library consists of a number of separate\n[modules](https://github.com/prosemirror/). This repository just\nserves as a central issue tracker, and holds a script to help easily\ncheck out all the core modules for development.\n\nThe [project page](https://prosemirror.net) has more information, a\nnumber of [examples](https://prosemirror.net/examples/) and the\n[documentation](https://prosemirror.net/docs/).\n\nThis code is released under an\n[MIT license](https://github.com/prosemirror/prosemirror/tree/master/LICENSE).\nThere's a [forum](http://discuss.prosemirror.net) for general\ndiscussion and support requests, and the\n[Github bug tracker](https://github.com/prosemirror/prosemirror/issues)\nis the place to report issues.\n\n**STOP READING HERE IF YOU'RE SIMPLY _USING_ PROSEMIRROR. YOU CAN\nINSTALL THE SEPARATE [NPM\nMODULES](https://www.npmjs.com/search?q=prosemirror-) FOR THAT. THE\nINSTRUCTIONS BELOW ONLY APPLY WHEN _DEVELOPING_ PROSEMIRROR!**\n\n## Setting up a dev environment\n\nClone this repository, and make sure you have\n[node](https://nodejs.org/en/) and [yarn](https://yarnpkg.com/) (due\nto a string of issues with NPM 5, NPM is not currently supported)\ninstalled. Next, from the cloned directory run:\n\n    bin/pm install\n\nThis will fetch the submodules, install their dependencies, and build\nthem.\n\nThe `bin/pm` script in this repository provides functionality for\nworking with the repositories:\n\n * `bin/pm build` rebuilds all the modules\n\n * `bin/pm watch` sets up a process that automatically rebuilds the\n   modules when they change\n\n * `bin/pm status` prints the git status of all submodules\n\n * `bin/pm commit <args>` runs `git commit` with the given arguments\n   in all submodules that have pending changes\n\n * `bin/pm test` runs the (non-browser) tests in all modules\n\n * `bin/pm push` runs `git push` in all modules\n\n * `bin/pm grep <pattern>` greps through the source code for the\n   modules for the given pattern\n\n * `bin/pm dev-start` starts a server that rebuilds the packages\n   whenever their sources change, and exposes the demo (`demo/*`)\n   under a webserver on port 8080\n\n(Functionality for managing releases will be added in the future.)\n\n## Community\n\nDevelopment of ProseMirror happens in the various repositories exposed\nunder the [ProseMirror](https://github.com/ProseMirror) organization\non GitHub. Bugs for core packages are tracked in the [bug\ntracker](https://github.com/prosemirror/prosemirror/issues) for the\nmeta repository.\n\nWe aim to be an inclusive, welcoming community. To make that explicit,\nwe have a [code of\nconduct](http://contributor-covenant.org/version/1/1/0/) that applies\nto communication around the project.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6279296875,
          "content": "{\n  \"name\": \"prosemirror\",\n  \"version\": \"0.0.0\",\n  \"description\": \"Structured WYSIWYM editor\",\n  \"license\": \"MIT\",\n  \"maintainers\": [\n    {\n      \"name\": \"Marijn Haverbeke\",\n      \"email\": \"marijn@haverbeke.berlin\",\n      \"web\": \"http://marijnhaverbeke.nl\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/prosemirror/prosemirror.git\"\n  },\n  \"dependencies\": {\n    \"glob\": \"^10.3.0\",\n    \"esmoduleserve\": \"^0.2.0\",\n    \"serve-static\": \"^1.14.1\",\n    \"@marijn/buildtool\": \"^1.0.0\",\n    \"@marijn/testtool\": \"^0.1.0\"\n  },\n  \"scripts\": {\n    \"test\": \"bin/pm test\"\n  },\n  \"workspaces\": [\n    \"*\"\n  ],\n  \"private\": true\n}\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 1.537109375,
          "content": "{\n  \"compilerOptions\": {\n    \"lib\": [\"es2015\", \"dom\", \"scripthost\"],\n    \"types\": [\"mocha\"],\n    \"stripInternal\": true,\n    \"typeRoots\": [\"./node_modules/@types\"],\n    \"noUnusedLocals\": true,\n    \"strict\": true,\n    \"target\": \"es6\",\n    \"module\": \"es2020\",\n    \"newLine\": \"lf\",\n    \"moduleResolution\": \"node\",\n    \"noEmit\": true,\n    \"paths\": {\n      \"prosemirror-model\": [\"./model/src/index.ts\"],\n      \"prosemirror-schema-basic\": [\"./schema-basic/src/schema-basic.ts\"],\n      \"prosemirror-schema-list\": [\"./schema-list/src/schema-list.ts\"],\n      \"prosemirror-test-builder\": [\"./test-builder/src/index.ts\"],\n      \"prosemirror-transform\": [\"./transform/src/index.ts\"],\n      \"prosemirror-view\": [\"./view/src/index.ts\"],\n      \"prosemirror-state\": [\"./state/src/index.ts\"],\n      \"prosemirror-commands\": [\"./commands/src/commands.ts\"],\n      \"prosemirror-history\": [\"./history/src/history.ts\"],\n      \"prosemirror-dropcursor\": [\"./dropcursor/src/dropcursor.ts\"],\n      \"prosemirror-inputrules\": [\"./inputrules/src/index.ts\"],\n      \"prosemirror-keymap\": [\"./keymap/src/keymap.ts\"],\n      \"prosemirror-search\": [\"./search/src/search.ts\"],\n      \"prosemirror-changeset\": [\"./changeset/src/changeset.ts\"],\n      \"prosemirror-markdown\": [\"./markdown/src/markdown.ts\"],\n      \"prosemirror-collab\": [\"./collab/src/collab.ts\"],\n      \"prosemirror-menu\": [\"./menu/src/index.ts\"],\n      \"prosemirror-gapcursor\": [\"./gapcursor/src/index.ts\"],\n      \"prosemirror-example-setup\": [\"./example-setup/src/index.ts\"]\n    }\n  },\n  \"include\": [\"*/src/*.ts\", \"*/test/*.ts\", \"demo/demo.ts\"]\n}\n"
        }
      ]
    }
  ]
}