{
  "metadata": {
    "timestamp": 1736562873843,
    "page": 449,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nextapps-de/winbox",
      "stars": 6256,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.126953125,
          "content": "src/css/winbox.css -linguist-detectable\nindex.html -linguist-detectable\ndemo/** -linguist-detectable\ndist/** -linguist-detectable\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1171875,
          "content": ".DS_Store\nnode_modules\n/log\n/tmp\n.idea\n.nyc_output\n.db\ncoverage\nperf\nserver\n!*.keep\npackage-lock.json\nmisc\nvorlage\ntest\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.7666015625,
          "content": "## v0.2.7\n\n- support option \"overflow\" to allow the window moving outside the viewports border\n- add static function `WinBox.stack()` which returns an Array containing every window instance ordered by focus history\n- support drag move from maximized state\n- automatically focus previous focused window on minimize window\n\n## v0.2.5\n\n- support custom toolbar icon\n- support custom toolbar controls\n- support custom toolbar height\n- support custom window index\n- support window autosize\n- support new callbacks\n- improve drag pointer calculation when outside the viewport\n- improve toolbar template\n- improve window states\n- improve performance\n\n#### Migrations:\n\n- the classname `wb-icon` was renamed to `wb-control`\n- instead the new window heading toolbar icon was named as `wb-icon`\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 45.97265625,
          "content": "<h1>\n    <img src=\"https://cdn.jsdelivr.net/gh/nextapps-de/winbox@master/demo/winbox-gradient.svg\" alt=\"WinBox.js: A modern HTML5 window manager for the web.\" width=\"100%\">\n</h1>\n<h3>Modern window manager for the web: lightweight, outstanding performance, no dependencies, fully customizable, open source!</h3>\n\n<a target=\"_blank\" href=\"https://www.npmjs.com/package/winbox\"><img src=\"https://img.shields.io/npm/v/winbox.svg\"></a><!--<a target=\"_blank\" href=\"https://github.com/nextapps-de/winbox/issues\"><img src=\"https://img.shields.io/github/issues/nextapps-de/winbox.svg\"></a>-->\n<a target=\"_blank\" href=\"https://github.com/nextapps-de/winbox/blob/master/LICENSE.md\"><img src=\"https://img.shields.io/npm/l/winbox.svg\"></a>\n\n<a href=\"https://nextapps-de.github.io/winbox/\">Demo</a> &ensp;&bull;&ensp; <a href=\"#started\">Getting Started</a> &ensp;&bull;&ensp; <a href=\"#options\">Options</a> &ensp;&bull;&ensp; <a href=\"#api\">API</a> &ensp;&bull;&ensp; <a href=\"#themes\">Themes</a> &ensp;&bull;&ensp; <a href=\"#customize\">Customize</a> &ensp;&bull;&ensp; <a href=\"CHANGELOG.md\">Changelog</a>\n\n<a name=\"demo\"></a>\n### Live Demo and Code Examples\n\n<a href=\"https://nextapps-de.github.io/winbox/\">https://nextapps-de.github.io/winbox/ </a>\n\n## Support this Project\n\nHello my name is Thomas, also known as ts-thomas. This is a personal project which I fully made in my free time. It is hosted by the Github account from the company Nextapps where I work to give it more exposure.\nI have never received any financial support for this project from the company Nextapps as some of you might have guessed, since it is a free and open source project.\nI'm really happy that WinBox.js is getting so much positive feedback and also feature requests. Please feel free to support me by making a personal donation which helps me a lot to keep this project alive and also to providing all the contribution to keep WinBox.js on a professional top-end level.\n\n<a href=\"https://opencollective.com/winboxjs/donate\" target=\"_blank\" style=\"margin-right: 10px\">\n    <img src=\"https://opencollective.com/webpack/donate/button@2x.png?color=blue\" height=\"32\" alt=\"Donate using Open Collective\">\n</a>\n<a href=\"https://github.com/sponsors/ts-thomas/\" target=\"_blank\" style=\"margin-right: 10px\">\n    <img src=\"https://camo.githubusercontent.com/b932f45963b659dfeb86b77ff29a9eaebe25a734d63a17a176aa82bf34845cf2/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d53706f6e736f72266d6573736167653d254532253944254134266c6f676f3d47697448756226636f6c6f723d253233666538653836\" height=\"32\" alt=\"Donate using Github Sponsors\">\n</a>\n<a href=\"https://liberapay.com/ts-thomas/donate\" target=\"_blank\" style=\"margin-right: 10px\">\n    <img src=\"https://liberapay.com/assets/widgets/donate.svg\" height=\"32\" alt=\"Donate using Liberapay\">\n</a>\n<a href=\"https://www.patreon.com/user?u=96245532\" target=\"_blank\" style=\"margin-right: 10px\">\n    <img src=\"https://s3-us-west-1.amazonaws.com/widget-images/become-patron-widget-medium%402x.png\" height=\"32\" alt=\"Donate using Patreon\">\n</a>\n<a href=\"https://salt.bountysource.com/teams/ts-thomas\" target=\"_blank\" style=\"margin-right: 10px\">\n    <img src=\"https://d2bbtvgnhux6eq.cloudfront.net/assets/logos/alternate-7868987b01474c95f47678727f6657882f6565a36396eb4b637ea53cc5944ff8.svg\" height=\"32\" alt=\"Donate using Bountysource\">\n</a>\n<a href=\"https://www.paypal.com/donate/?hosted_button_id=GEVR88FC9BWRW\" target=\"_blank\">\n    <img src=\"https://www.paypalobjects.com/webstatic/de_DE/i/de-pp-logo-200px.png\" height=\"32\" alt=\"Donate using PayPal\">\n</a>\n<!-- [![](https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86)](https://github.com/sponsors/ts-thomas/) -->\n<br><br>\nThanks a lot,\nThomas (ts-thomas)\n\n<a name=\"addon\"></a>\n### Plugins / Add-ons / Extensions\nVue 2 and 3 (a wrapper component that adds the ability to mount Vue components in WinBox.js):<br>\n<a href=\"https://github.com/wobsoriano/vue-winbox\">https://github.com/wobsoriano/vue-winbox</a>\n\nA React controlled component for WinBox.js, with full Reactful props and state.:<br>\n<a href=\"https://github.com/rickonono3/react-winbox\">https://github.com/rickonono3/react-winbox</a>\n\n<a name=\"started\"></a>\n## Getting Started\n\n__Get Latest Stable Build (Recommended):__\n\n<table>\n    <tr>\n        <td colspan=3\">\n            <b><u>Bundle:</u></b> (all assets bundled into one single file: js + css + html + icons)\n        </td>\n    </tr>\n    <tr>\n        <td>winbox.bundle.min.js</td>\n        <td><a href=\"https://github.com/nextapps-de/winbox/raw/0.2.82/dist/winbox.bundle.min.js\" target=\"_blank\">Download</a></td>\n        <td><a href=\"https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/dist/winbox.bundle.min.js\" target=\"_blank\">https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/dist/winbox.bundle.min.js</a></td>\n    </tr>\n    <tr>\n        <td colspan=3\">\n            <br><b><u>Non-Bundled:</u></b> (js and css are separated, css includes icons as base64)\n        </td>\n    </tr>\n    <tr>\n        <td>winbox.min.js</td>\n        <td><a href=\"https://github.com/nextapps-de/winbox/raw/0.2.82/dist/js/winbox.min.js\" target=\"_blank\">Download</a></td>\n        <td><a href=\"https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/dist/js/winbox.min.js\" target=\"_blank\">https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/dist/js/winbox.min.js</a></td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>winbox.min.css</td>\n        <td><a href=\"https://github.com/nextapps-de/winbox/raw/0.2.82/dist/css/winbox.min.css\" target=\"_blank\">Download</a></td>\n        <td><a href=\"https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/dist/css/winbox.min.css\" target=\"_blank\">https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/dist/css/winbox.min.css</a></td>\n    </tr>\n    <tr>\n        <td colspan=3\">\n            <br><b><u>Sources:</u></b> (not bundled at all, images as url to original resources)\n        </td>\n    </tr>\n    <tr>\n        <td>ES6 Modules</td>\n        <td><a href=\"https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/nextapps-de/winbox/tree/0.2.82/src/js\" target=\"_blank\">Download</a></td>\n        <td>The <i>/src/js</i> folder of this Github repository</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>LESS Files (source)</td>\n        <td><a href=\"https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/nextapps-de/winbox/tree/0.2.82/src/css\" target=\"_blank\">Download</a></td>\n        <td>The <i>/src/css</i> folder of this Github repository</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>winbox.css (compiled)</td>\n        <td><a href=\"https://github.com/nextapps-de/winbox/raw/0.2.82/src/css/winbox.css\" target=\"_blank\">Download</a></td>\n        <td><a href=\"https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/src/css/winbox.css\" target=\"_blank\">https://rawcdn.githack.com/nextapps-de/winbox/0.2.82/src/css/winbox.css</a></td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>src.zip</td>\n        <td><a href=\"https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/nextapps-de/winbox/tree/0.2.82/dist\" target=\"_blank\">Download</a></td>\n        <td>Download all source files including image original resources.</td>\n    </tr>\n</table>\n\n__Get Latest (NPM):__\n\n```cmd\nnpm install winbox\n```\n\n### Use Bundled Version (Recommended)\n\n> The bundled version includes all assets like js, css, html and icon images as base64.\n\nA best practice is to load the library as async and use some modern preloading mechanism:\n\n```html\n<html>\n<head>\n    <link rel=\"preload\" href=\"winbox.bundle.min.js\" as=\"script\">\n</head>\n<body>\n    <!--\n    \n    HTML CONTENT\n    \n    -->\n    <!-- BOTTOM OF BODY -->\n    <script src=\"winbox.bundle.min.js\" async></script>\n    <!-- YOUR SCRIPT -->\n    <script src=\"my-script.js\" defer></script>\n</body>\n</html>\n```\n\nWhen you get troubles with unavailable references then remove the `async` or `defer` from this example and invest some minutes later to find out how you can properly load js assets asynchronously today.\n\n### Use Non-Bundled Version\n\nThe non-bundled version needs to load js and css separately (css already includes icons as base64).\n\n```html\n<html>\n<head>\n    <link rel=\"stylesheet\" href=\"winbox.min.css\">\n    <script src=\"winbox.min.js\"></script>\n</head>\n<body></body>\n</html>\n```\n\nYou can also load the non-bundled version in the same way.\n\n### ES6 Modules\n\nThe ES6 modules are located in `src/js/`. But you need to load the stylesheet file explicitly since this is just automatically loaded by the bundled version.\n\n```html\n<head>\n    <link rel=\"stylesheet\" href=\"dist/css/winbox.min.css\">\n</head>\n```\n\n```html\n<script type=\"module\">\n  import WinBox from \"./src/js/winbox.js\";\n</script>\n```\n\nYou can also load modules via CDN, e.g.:\n\n```html\n<script type=\"module\">\n  import WinBox from \"https://unpkg.com/winbox@0.2.82/src/js/winbox.js\";\n</script>\n```\n\nThe ES6 modules are not minified. Please use your favored bundler or build tool for this purpose.\n\n<a name=\"api\"></a>\n## Overview\n\nConstructor:\n\n- new <a href=\"#winbox.new\">**WinBox**(title, options\\<key: value\\>)</a> : winbox\n\nGlobal methods:\n\n- <a href=\"#winbox.new\">WinBox.**new**(title, options\\<key: value\\>)</a> : winbox\n- <a href=\"#winbox.stack\">WinBox.**stack**()</a> : Array\\<winbox\\>\n\nInstance member methods:\n\n- <a href=\"#winbox.mount\">winbox.**mount**(src)</a>\n- <a href=\"#winbox.unmount\">winbox.**unmount**(dest)</a>\n- <a href=\"#winbox.setUrl\">winbox.**setUrl**(string)</a>\n- <a href=\"#winbox.setTitle\">winbox.**setTitle**(string)</a>\n- <a href=\"#winbox.setIcon\">winbox.**setIcon**(url)</a>\n- <a href=\"#winbox.move\">winbox.**move**(x, y)</a>\n- <a href=\"#winbox.resize\">winbox.**resize**(width, height)</a>\n- <a href=\"#winbox.close\">winbox.**close**(boolean)</a>\n- <a href=\"#winbox.focus\">winbox.**focus**(state)</a>\n- <a href=\"#winbox.blur\">winbox.**blur**(state)</a>\n- <a href=\"#winbox.hide\">winbox.**hide**(state)</a>\n- <a href=\"#winbox.show\">winbox.**show**(state)</a>\n- <a href=\"#winbox.minimize\">winbox.**minimize**(state)</a>\n- <a href=\"#winbox.maximize\">winbox.**maximize**(state)</a>\n- <a href=\"#winbox.fullscreen\">winbox.**fullscreen**(state)</a>\n- <a href=\"#winbox.restore\">winbox.**restore**(state)</a>\n- <a href=\"#winbox.setBackground\">winbox.**setBackground**(string)</a>\n- <a href=\"#winbox.addClass\">winbox.**addClass**(name)</a>\n- <a href=\"#winbox.removeClass\">winbox.**removeClass**(name)</a>\n- <a href=\"#winbox.hasClass\">winbox.**hasClass**(name)</a>\n- <a href=\"#winbox.toggleClass\">winbox.**toggleClass**(name)</a>\n- <a href=\"#winbox.addControl\">winbox.**addControl**(options)</a>\n- <a href=\"#winbox.removeControl\">winbox.**removeControl**(name)</a>\n\nInstance properties (readonly):\n\n- <a href=\"#winbox.id\">winbox.**id**</a>\n- <a href=\"#winbox.index\">winbox.**index**</a>\n- <a href=\"#winbox.window\">winbox.**window**</a>\n- <a href=\"#winbox.body\">winbox.**body**</a>\n\nInstance properties (writable):\n\n- <a href=\"#winbox.x\">winbox.**x**</a>\n- <a href=\"#winbox.y\">winbox.**y**</a>\n- <a href=\"#winbox.width\">winbox.**width**</a>\n- <a href=\"#winbox.height\">winbox.**height**</a>\n- <a href=\"#winbox.top\">winbox.**top**</a>\n- <a href=\"#winbox.right\">winbox.**right**</a>\n- <a href=\"#winbox.bottom\">winbox.**bottom**</a>\n- <a href=\"#winbox.left\">winbox.**left**</a>\n- <a href=\"#winbox.minwidth\">winbox.**minwidth**</a>\n- <a href=\"#winbox.minheight\">winbox.**minheight**</a>\n- <a href=\"#winbox.maxwidth\">winbox.**maxwidth**</a>\n- <a href=\"#winbox.maxheight\">winbox.**maxheight**</a>\n\nInstance state boolean properties (readonly):\n\n- <a href=\"#winbox.min\">winbox.**min**</a>\n- <a href=\"#winbox.max\">winbox.**max**</a>\n- <a href=\"#winbox.full\">winbox.**full**</a>\n- <a href=\"#winbox.hidden\">winbox.**hidden**</a>\n- <a href=\"#winbox.focused\">winbox.**focused**</a>\n\nCallback methods:\n\n- <a href=\"#winbox.oncreate\">winbox.**oncreate**</a>\n- <a href=\"#winbox.onshow\">winbox.**onshow**</a>\n- <a href=\"#winbox.onhide\">winbox.**onhide**</a>\n- <a href=\"#winbox.onclose\">winbox.**onclose**</a>\n- <a href=\"#winbox.onfocus\">winbox.**onfocus**</a>\n- <a href=\"#winbox.onblur\">winbox.**onblur**</a>\n- <a href=\"#winbox.onmove\">winbox.**onmove**</a>\n- <a href=\"#winbox.onresize\">winbox.**onresize**</a>\n- <a href=\"#winbox.onfullscreen\">winbox.**onfullscreen**</a>\n- <a href=\"#winbox.onmaximize\">winbox.**onmaximize**</a>\n- <a href=\"#winbox.onminimize\">winbox.**onminimize**</a>\n- <a href=\"#winbox.onrestore\">winbox.**onrestore**</a>\n\n<a name=\"options\" id=\"options\"></a>\n## Options\n\n<table>\n    <tr></tr>\n    <tr>\n        <td>Option</td>\n        <td>Values</td>\n        <td>Description</td>\n    </tr>\n    <tr>\n        <td>id</td>\n        <td>number | string</td>\n        <td>Set a unique id to the window. Used to define custom styles in css, query elements by context or just to identify the corresponding window instance. If no ID was set it will automatically create one for you.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>index</td>\n        <td>number</td>\n        <td>Set the initial <code>z-index</code> of the window to this value (will be increased automatically when unfocused/focused).</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>title</td>\n        <td>string</td>\n        <td>The window title.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>mount</td>\n        <td>HTMLElement</td>\n        <td>Mount an element (widget, template, etc.) to the window body.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>html</td>\n        <td>string</td>\n        <td>Set the <code>innerHTML</code> of the window body.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>url</td>\n        <td>string</td>\n        <td>Open URL inside the window (loaded via iframe).</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>width<br>height</td>\n        <td>number | string</td>\n        <td>Set the initial width/height of the window (supports units \"px\" and \"%\").</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>minwidth<br>minheight</td>\n        <td>number | string</td>\n        <td>Set the minimal width/height of the window (supports units \"px\" and \"%\"). Should be at least the height of the window header title bar.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>maxwidth<br>maxheight</td>\n        <td>number | string</td>\n        <td>Set the maximum width/height of the window (supports units \"px\" and \"%\").</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>autosize</td>\n        <td>boolean</td>\n        <td>Automatically size the window to fit the window contents.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>overflow</td>\n        <td>boolean</td>\n        <td>Allow the window to move outside the viewport.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>x<br>y</td>\n        <td>number | string</td>\n        <td>Set the initial position of the window (supports: \"right\" for x-axis, \"bottom\" for y-axis, \"center\" for both, units \"px\" and \"%\" for both).</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>max</td>\n        <td>boolean</td>\n        <td>Automatically toggles the window into maximized state when created.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>min</td>\n        <td>boolean</td>\n        <td>Automatically toggles the window into minimized state when created.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>hidden</td>\n        <td>boolean</td>\n        <td>Automatically toggles the window into hidden state when created.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>modal</td>\n        <td>boolean</td>\n        <td>Shows the window as modal.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>top<br>right<br>bottom<br>left</td>\n        <td>number | string</td>\n        <td>Set or limit the viewport of the window's available area (supports units \"px\" and \"%\"). Also used for custom splitscreen configurations.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>background</td>\n        <td>string</td>\n        <td>Set the background of the window (supports all CSS styles which are also supported by the style-attribute \"background\", e.g. colors, transparent colors, hsl, gradients, background images)</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>border</td>\n        <td>number</td>\n        <td>Set the border width of the window (supports all the browsers css units).</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>icon</td>\n        <td>string</td>\n        <td>Make the titlebar icon visible and set the image source to this url.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>class</td>\n        <td>string</td>\n        <td>Add one or more classnames to the window (multiple classnames as array or separated with whitespaces e.g. \"class-a class-b\"). Used to define custom styles in css, query elements by context (also within CSS) or just to tag the corresponding window instance.<br><br>WinBox provides you some useful <a href=\"#control-classes\">Built-in Control Classes</a> to easily setup a custom configuration.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>oncreate</td>\n        <td>function(options)</td>\n        <td>Callback triggered when the winbox element is being created. You can modify all these winbox options from this table passed as first parameter.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onmove</td>\n        <td>function(x, y)</td>\n        <td>Callback triggered when the window moves.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onresize</td>\n        <td>function(width,&nbsp;height)</td>\n        <td>Callback triggered when the window resizes.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onfullscreen</td>\n        <td>function()</td>\n        <td>Callback triggered when the window enters fullscreen.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onminimize</td>\n        <td>function()</td>\n        <td>Callback triggered when the window enters minimized mode.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onmaximize</td>\n        <td>function()</td>\n        <td>Callback triggered when the window enters maximize mode.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onrestore</td>\n        <td>function()</td>\n        <td>Callback triggered when the window returns to a windowed state from a Fullscreen, Minimized or Maximized state.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onhide</td>\n        <td>function()</td>\n        <td>Callback triggered when the window is hidden with win.hide()</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onshow</td>\n        <td>function()</td>\n        <td>Callback triggered when the window is shown with win.show()</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onclose</td>\n        <td>function(force)</td>\n        <td>Callbacks triggered when the window is closing. The keyword <code>this</code> inside the callback function refers to the corresponding WinBox instance. Note: the event 'onclose' will be triggered right before closing and stops closing when a callback was applied and returns a truthy value.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onfocus</td>\n        <td>function()</td>\n        <td>Callback triggered when a window goes into focused state.</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>onblur</td>\n        <td>function()</td>\n        <td>Callback triggered when a window lost the focused state.</td>\n    </tr>\n</table>\n\n## Create and Setup Window\n\n<a name=\"winbox.new\"></a>\n#### Basic Window\n\n> When no `root` was specified the window will append to the `document.body`.\n\n```js\nnew WinBox(\"Window Title\");\n```\n\nAlternatively:\n```js\nWinBox.new(\"Window Title\");\n```\n\nAlternatively:\n```js\nnew WinBox({ title: \"Window Title\" });\n```\n\nAlternatively:\n<a name=\"winbox.setTitle\"></a>\n```js\nvar winbox = WinBox();\nwinbox.setTitle(\"Window Title\");\n```\n\n#### Custom Root\n\n> The root is the unique element in a document where the window will append to. In most cases that is usually the `document.body` which is the default root. Multiple roots at the same time are just partially supported (they share the same viewport actually).\n\n```js\nnew WinBox(\"Window Title\", {\n    root: document.body\n});\n```\n\n#### Custom Color\n\n> Supports all CSS styles which are also supported by the style-attribute \"background\", e.g. colors, rgba, hsl, gradients, background images.\n\n```js\nnew WinBox(\"Custom Color\", {\n    background: \"#ff005d\"\n});\n```\n\nAlternatively:\n<a name=\"winbox.setBackground\"></a>\n```js\nvar winbox = new WinBox(\"Custom Color\");\nwinbox.setBackground(\"#ff005d\");\n```\n\n#### Custom Border\n\n> Supports all units.\n\n```js\nnew WinBox({\n    title: \"Custom Border\",\n    border: \"1em\"\n});\n```\n\nYou can also define multiple border values (the order is: top, right, bottom, left):\n```js\nnew WinBox({\n    title: \"Custom Border\",\n    border: \"0 1em 15px 1em\"\n});\n```\n\n#### Custom Titlebar Icon\n\n> Supports all datatypes which are also supported by the style-attribute \"background-image\", e.g. URL, base64 encoded data. The default icon size is 20 x 20 pixels.\n\n```js\nnew WinBox({\n    title: \"Custom Icon\",\n    icon: \"img/icon.svg\"\n});\n```\n\nAlternatively:\n<a name=\"winbox.setIcon\"></a>\n```js\nvar winbox = new WinBox(\"Custom Icon\");\nwinbox.setIcon(\"img/icon.svg\");\n```\n\nSee below in the style section to find out how to easily customize the titlebar icon style via css.\n\n####  Custom Viewport\n\n> Define the available area (relative to the document) in which the window can move or could be resized (supports units \"px\" and \"%\").\n\n```js\nnew WinBox(\"Custom Viewport\", {\n    top: \"50px\",\n    right: \"5%\",\n    bottom: 50,\n    left: \"5%\"\n});\n```\n\nAlternatively (but just support numbers!):\n```js\nvar winbox = new WinBox(\"Custom Viewport\");\n\nwinbox.top = 50;\nwinbox.right = 200;\nwinbox.bottom = 0;\nwinbox.left = 200\n```\n\n<a name=\"winbox.move\"></a><a name=\"winbox.resize\"></a>\n#### Custom Position / Size\n\n> Supports keywords `\"right\"` for x-axis, `\"bottom\"` for y-axis, `\"center\"` for both, units `px` and `%` also for both.\n\n```js\nnew WinBox(\"Custom Viewport\", {\n    x: \"center\",\n    y: \"center\",\n    width: \"50%\",\n    height: \"50%\"\n});\n```\n\n```js\nnew WinBox(\"Custom Viewport\", {\n    x: \"right\",\n    y: \"bottom\",\n    width: \"200px\",\n    height: \"200px\"\n});\n```\n\nAlternatively (also supports same units and keywords as above):\n```js\nvar winbox = new WinBox(\"Custom Viewport\");\n\nwinbox.resize(\"50%\", \"50%\")\n      .move(\"center\", \"center\");\n```\n\nAlternatively (just support numeric values as `px` when directly assigned!):\n```js\nvar winbox = new WinBox(\"Custom Viewport\");\n\nwinbox.width = 200;\nwinbox.height = 200;\nwinbox.resize();\n\nwinbox.x = 100;\nwinbox.y = 100;\nwinbox.move();\n```\n\n> In some cases you need to execute `.resize()` before `.move()` to properly apply relative positions which is taking the windows size into account.\n\n<a name=\"winbox.overflow\"></a>\n#### Overflow Window\n\nAllow the window to move outside the viewport borders on left, right and bottom (default is \"false\").\n\n```js\nnew WinBox({\n    title: \"Overflow Window\",\n    overflow: true\n});\n```\n\n<a name=\"winbox.modal\"></a>\n#### Modal Window\n\n```js\nnew WinBox({\n    title: \"Modal Window\",\n    modal: true\n});\n```\n\n<a name=\"winbox.stack\"></a>\n#### Window Stack\n\nThe window stack gets you an ordered list of every created window which wasn't already closed. The last focused windows is placed as last entry in the Array.\n\n```js\nconst a = new WinBox(\"A\"); // window A gets focused\nconst b = new WinBox(\"B\"); // window B gets focused\nconst c = new WinBox(\"C\"); // window C gets focused\na.focus(); // window A gets focused\n\n// get window stack ordered by focus history\nconst stack = WinBox.stack(); // [B, C, A]\n```\n\n<a name=\"themes\"></a>\n#### Themes\n\n> Feel free to create your own themes and share them with us.\n\nYou will find all themes <a href=\"https://github.com/nextapps-de/winbox/tree/master/dist/css/themes\">here</a>.\n\nLoad the corresponding css files (or use a bundler), e.g.:\n\n```html\n<head>\n    <link rel=\"stylesheet\" href=\"dist/css/winbox.min.css\">\n    <link rel=\"stylesheet\" href=\"dist/css/themes/modern.min.css\">\n    <script src=\"dist/js/winbox.min.js\"></script>\n</head>\n```\n\nJust add the name of the theme via `class`:\n\n```js\nvar winbox = new WinBox({\n    title: \"Theme: Modern\",\n    class: \"modern\"\n});\n```\n\nAlternatively:\n\n```js\nvar winbox = new WinBox(\"Theme: Modern\");\nwinbox.addClass(\"modern\");\n```\n\nYou can change themes during the lifetime of the window.\n\n## Manage Window Content\n\n#### Set innerHTML\n\n> Do not forget to sanitize any user inputs which is part of the __html__ as this can lead to unintended XSS!\n\n```js\nnew WinBox(\"Set innerHTML\", {\n    html: \"<h1>Lorem Ipsum</h1>\"\n});\n```\n\nAlternatively:\n```js\nvar winbox = new WinBox(\"Set innerHTML\");\nwinbox.body.innerHTML = \"<h1>Lorem Ipsum</h1>\";\n```\n\n<a name=\"winbox.mount\"></a>\n#### Mount DOM (Cloned)\n\n> When cloning you can easily create multiple window instances of the same content in parallel.\n\n```html\n<div id=\"content\">\n    <h1>Lorem Ipsum</h1>\n    <p>Lorem ipsum [...]</p>\n</div>\n```\n\n```js\nvar node = document.getElementById(\"content\");\n\nnew WinBox(\"Mount DOM\", {\n    mount: node.cloneNode(true)\n});\n```\n\nAlternatively:\n```js\nvar node = document.getElementById(\"content\");\nvar winbox = new WinBox(\"Mount DOM\");\n\nwinbox.mount(node.cloneNode(true));\n```\n\n#### Mount DOM (Singleton) + Auto-Unmount\n\n> A singleton is a unique fragment which can move inside the document. When creating multiple windows and mounting the same fragment to it, the fragment will leave the old window (see the method above for cloning).\n\n> This workaround is also compatible if you are using server-side rendering.\n\nYou can simply use a hidden backstore to hold contents, as well you can use any other strategy like a templating engine etc.\n\n```html\n<div id=\"backstore\" style=\"display: none\">\n    <div id=\"content\">\n        <h1>Lorem Ipsum</h1>\n        <p>Lorem ipsum [...]</p>\n    </div>\n</div>\n```\n\n```js\nvar node = document.getElementById(\"content\");\n\nnew WinBox(\"Mount DOM\", {\n    mount: node\n});\n```\n\n> Auto-Unmount is a helpful feature which automatically moves back the fragment to the backstore source when closing the window.\n\nAlternatively:\n```js\nvar node = document.getElementById(\"content\");\nvar winbox = new WinBox(\"Mount DOM\");\n\nwinbox.mount(node);\n```\n\n<a name=\"winbox.unmount\"></a>\n#### Explicit Unmount\n\n```html\n<div id=\"backstore\" style=\"display: none\">\n    <div id=\"content\">\n        <h1>Lorem Ipsum</h1>\n        <p>Lorem ipsum [...]</p>\n    </div>\n</div>\n<div id=\"backstore-2\" style=\"display: none\"></div>\n```\n\n```js\nvar node = document.getElementById(\"content\");\nvar winbox = new WinBox(\"Mount DOM\");\n```\n\nMove fragment from hidden backstore to the window body:\n\n```js\nwinbox.mount(node);\n```\n\nMove fragment back to the hidden backstore source:\n\n```js\nwinbox.unmount();\n```\n\nOr move fragment to another destination:\n\n```js\nwinbox.unmount(document.getElementById(\"backstore-2\"));\n```\n\nOr just auto-unmount as default when closing:\n\n```js\nwinbox.close();\n```\n\nOverride default auto-unmount behavior when closing the window:\n\n```js\nnew WinBox(\"Mount DOM\", {\n    mount: node,\n    onclose: function(){\n        this.unmount(document.getElementById(\"backstore-2\"));\n    }\n});\n```\n\n#### Manual Mount Contents\n\nFeel free to use the `winbox.body` directly:\n```js\nvar node = document.getElementById(\"content\");\nvar winbox = new WinBox(\"Mount DOM\");\n\nwinbox.body.appendChild(node);\n```\n\nOr delegate it as a root to your templating engine, e.g.:\n```js\nMikado(template).mount(winbox.body).render(data);\n```\n\n#### Open URI / URL\n\n> Do not forget to sanitize any user inputs when it is part of the __url__ as this can lead to unintended XSS!\n\nThe onload callback is optionally.\n```js\nnew WinBox(\"Open URL\", {\n    url: \"https://wikipedia.com\",\n    onload: function(){ /* extern page loaded */}\n});\n```\n\n> You can use every URI scheme which is supported by `src` attribute, e.g. URL, image or video, base64 encoded data.\n\nAlternatively:\n<a name=\"winbox.setUrl\"></a>\n```js\nvar winbox = new WinBox(\"Open URL\");\nwinbox.setUrl(\"https://wikipedia.com\", function(){ \n    /* extern page loaded */\n});\n```\n\n## The WinBox Window Instance\n\n<a name=\"winbox.id\"></a><a name=\"winbox.max\"></a><a name=\"winbox.min\"></a><a name=\"winbox.full\"></a><a name=\"winbox.hidden\"></a><a name=\"winbox.focused\"></a>\nWindow States / Information:\n```js\nvar winbox = new WinBox();\n\nconsole.log(\"Window ID:\", winbox.id);\nconsole.log(\"Window Index:\", winbox.index);\nconsole.log(\"Current Maximize State:\", winbox.max);\nconsole.log(\"Current Minimize State:\", winbox.min);\nconsole.log(\"Current Fullscreen State:\", winbox.full);\nconsole.log(\"Current Hidden State:\", winbox.hidden);\nconsole.log(\"Current Focused State:\", winbox.focused);\n```\n\n<a name=\"winbox.width\"></a><a name=\"winbox.height\"></a><a name=\"winbox.resize\"></a>\nWindow Size:\n```js\nvar winbox = new WinBox();\n\nwinbox.width = 200;\nwinbox.height = 200;\nwinbox.resize();\n\nconsole.log(\"Current Width:\", winbox.width);\nconsole.log(\"Current Height:\", winbox.height);\n```\n\n<a name=\"winbox.x\"></a><a name=\"winbox.y\"></a><a name=\"winbox.move\"></a>\nWindow Position:\n```js\nvar winbox = new WinBox();\n\nwinbox.x = 100;\nwinbox.y = 100;\nwinbox.move();\n\nconsole.log(\"Current Position X:\", winbox.x);\nconsole.log(\"Current Position Y:\", winbox.y);\n```\n\n<a name=\"winbox.top\"></a><a name=\"winbox.right\"></a><a name=\"winbox.bottom\"></a><a name=\"winbox.left\"></a>\nWindow Viewport:\n```js\nvar winbox = new WinBox();\n\nwinbox.top = 50;\nwinbox.right = 50;\nwinbox.bottom = 50;\nwinbox.left = 50;\n\n// update window if needed:\nwinbox.resize().move();\n\nconsole.log(\"Current Viewport Top:\", winbox.top);\nconsole.log(\"Current Viewport Right:\", winbox.right);\nconsole.log(\"Current Viewport Bottom:\", winbox.bottom);\nconsole.log(\"Current Viewport Left:\", winbox.left);\n```\n\n<a name=\"winbox.body\"></a>\nThe window body acts like the `document.body` and has a scroll pane:\n```js\nvar winbox = new WinBox();\nwinbox.body.innerHTML = \"<h1>Lorem Ipsum</h1>\";\n```\n\n<a name=\"winbox.window\"></a>\nGet the DOM element from the window outer frame:\n```js\nvar winbox = new WinBox();\nvar root = winbox.window;\n```\n\nYou also can get the window element by DOM id:\n```js\nvar winbox = new WinBox();\nvar root = document.getElementById(winbox.id);\n```\n\n> The window element points to the window most outer root element which also holds the window control and state classes:\n\nYou can access and modify the window DOM element directly:\n\n```js\nconst root = winbox.window;\nconst hidden = root.classList.contains(\"hide\");\nconst focused = root.classList.contains(\"focus\");\nroot.classList.remove(\"modal\");\nroot.classList.add(\"my-theme\");\nroot.classList.toggle(\"my-toggle\");\n```\n\nOr as an equivalent to the example above by using the WinBox built-in methods respectively:\n\n```js\nconst hidden = winbox.hasClass(\"hide\");\nconst focused = winbox.hasClass(\"focus\");\nwinbox.removeClass(\"modal\");\nwinbox.addClass(\"my-theme\");\nwinbox.toggleClass(\"my-toggle\");\n```\n\nYou can grab the `winbox` instance from the window outer frame DOM element:\n```js\nvar winbox = new WinBox();\n// assume you have a DOM reference to the winbox window:\nvar window_element = document.getElementById(winbox.id);\n// grab corresponding instance from window element:\nwinbox = window_element.winbox;\n```\n\n#### Controls\n\n```js\nvar winbox = new WinBox();\n```\n\n<a name=\"winbox.focus\"></a>\nFocus a window (bring up to front):\n```js\nwinbox.focus();\nwinbox.focus(true);\nwinbox.blur(false);\n```\n\n<a name=\"winbox.blur\"></a>\nBlur a focused window:\n```js\nwinbox.blur();\nwinbox.blur(true);\nwinbox.focus(false);\n```\n\n<a name=\"winbox.minimize\"></a>\nSet the minimized state of a window:\n```js\nwinbox.minimize();\nwinbox.minimize(true);\nwinbox.minimize(false);\n```\n\n<a name=\"winbox.maximize\"></a>\nSet the maximized state of a window:\n```js\nwinbox.maximize();\nwinbox.maximize(true);\nwinbox.maximize(false);\n```\n\n<a name=\"winbox.fullscreen\"></a>\nSet the fullscreen state of a window:\n```js\nwinbox.fullscreen();\nwinbox.fullscreen(true);\nwinbox.fullscreen(false);\n```\n\n<a name=\"winbox.restore\"></a>\nRestore the state of a window:\n```js\nwinbox.restore();\n```\n\n<a name=\"winbox.hide\"></a>\nHide a specific window:\n```js\nwinbox.hide();\nwinbox.hide(true);\nwinbox.show(false);\n```\n\n<a name=\"winbox.show\"></a>\nShow a specific hidden window:\n```js\nwinbox.show();\nwinbox.show(true);\nwinbox.hide(false);\n```\n\n<a name=\"winbox.close\"></a>\nClose and destroy a window:\n```js\nwinbox.close();\n```\n\n<a name=\"winbox.close\"></a>\nClose and destroy a window depending on custom conditional (e.g. by a confirmation status):\n```js\nwinbox.close(false || true);\n```\n\n#### Chaining Methods\n\n```js\nvar winbox = WinBox();\n\nwinbox.setTitle(\"Title\")\n      .setBackground(\"#fff\")\n      .resize(\"50%\", \"50%\")\n      .move(\"center\", \"center\")\n      .mount(document.getElementById(\"content\"));\n```\n\n> When using \"center\" as position you need to call `.resize()` before `.move()`.\n\n#### Callbacks\n\nYou can assign callbacks via the option payload when creating a window.\n\n> The keyword `this` in your callback function refers to the corresponding WinBox Instance.\n\n```js\nvar winbox = WinBox({\n    oncreate: function(options){\n        options.autosize = true;\n    },\n    onfocus: function(){\n        this.setBackground(\"#fff\");\n    },\n    onblur: function(){\n        this.setBackground(\"#999\");\n    },\n    onresize: function(width, height){\n        console.log(\"width:\", width, \"height:\", height);\n    },\n    onfullscreen: function(){\n        this.setBackground(\"#666\");\n    },\n    onminimize: function(){\n        this.setBackground(\"#999\");\n    },\n    onmaximize: function(){\n        this.setBackground(\"#AAA\");\n    },\n    onrestore: function(){\n        this.setBackground(\"#DDD\");\n    },    \n    onmove: function(x, y){\n        console.log(\"x:\", x, \"y:\", y);\n    },\n    onclose: function(force){\n        // return \"true\" to skip the closing\n        // return \"false\" to allow closing\n        // use delegated force parameter optionally\n        return !confirm(\"Close window?\");\n    }\n});\n```\n\n#### The \"onclose\" callback\n\n> The event `onclose` will be triggered right before closing and __stops__ closing when a callback was applied and returns a __truthy value__.\n\nWithin your callback function just return `true` to stops the closing or return `false` to perform closing as default.\n```js\nnew WinBox({ \n    onclose: function(){\n        // return \"true\" to skip the closing\n        // return \"false\" to allow closing\n        if(do_some_checks()){\n            return true;\n        }\n    } \n});\n```\n\nThe `force` parameter from the `winbox.close(boolean)` will be delegated to your callback function as the first parameter. You need to handle the \"force\" state in your callback function.\n\n```js\nvar winbox = WinBox({ \n    onclose: function onclose(force){\n        // use delegated force parameter optionally\n        return !force && !confirm(\"Close window?\");\n    } \n});\n```\n\nClose the window and execute callback as default (will show the prompt from example above):\n```js\nwinbox.close();\n```\n\nForce closing the window (does not show the prompt from example above):\n```js\nwinbox.close(true);\n```\n\n<a name=\"control-classes\" id=\"control-classes\"></a>\n#### Use Control Classes\n\nWinBox provides you some built-in control classes you can pass when creating a window instance. \n\n> All control classes from this list could be added or removed during lifetime of the window (after creation). State classes like `max`, `min`, `full`, `hidden` and `focus` could not be changed manually! For this purpose use the WinBox member methods accordingly e.g. `maximize()`, `minimize()`, `hide()`.\n\n<table>\n    <tr></tr>\n    <tr>\n        <th>Classname&nbsp;&nbsp;&nbsp;&nbsp;</th>\n        <th align=\"left\">Description</th>\n    </tr>\n    <tr>\n        <td>no-animation</td>\n        <td>Disables the windows transition animation</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-shadow</td>\n        <td>Disables the windows drop shadow</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-header</td>\n        <td>Hide the window header incl. title and toolbar</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-min</td>\n        <td>Hide the minimize icon</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-max</td>\n        <td>Hide the maximize icon</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-full</td>\n        <td>Hide the fullscreen icon</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-close</td>\n        <td>Hide the close icon</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-resize</td>\n        <td>Disables the window resizing capability</td>\n    </tr>\n    <tr></tr>\n    <tr>\n        <td>no-move</td>\n        <td>Disables the window moving capability</td>\n    </tr>\n</table>\n\n> Without the header the user isn't able to move the window frame. It may be useful for creating fixed popups.\n\nPass in classnames when creating the window to apply behaviour:\n```js\nconst winbox = WinBox({\n    class: [ \"no-min\", \"no-max\", \"no-full\", \"no-resize\", \"no-move\" ]\n});\n```\n\n> The example above is a good start to create classical popups.\n\nAlternatively you can use a whitespace separated string:\n```js\nconst winbox = WinBox({\n    class: \"no-min no-max no-full no-resize no-move\"\n});\n```\n\n<a name=\"winbox.addClass\"></a><a name=\"winbox.removeClass\"></a>\nYou can add or remove all control classes from above along the window's lifetime:\n\n```js\nconst winbox = WinBox();\n\nwinbox.addClass(\"no-resize\")\n      .addClass(\"no-move\");\n```\n```js\nwinbox.removeClass(\"no-resize\")\n      .removeClass(\"no-move\");\n```\n```js\nwinbox.toggleClass(\"no-resize\")\n      .toggleClass(\"no-move\");\n```\n```js\nconst state = winbox.hasClass(\"no-resize\") &&\n              winbox.hasClass(\"no-move\");\n```\n\n## Custom Splitscreen\n\nUse the viewport limit to define your own splitscreen areas, e.g. for a simple vertical split:\n\n```js\nnew WinBox(\"Split Left\", {\n    right: \"50%\"\n});\n\nnew WinBox(\"Split Right\", {\n    left: \"50%\"\n});\n```\n\nSame way you can also define custom sizes and positions for each split as well as complex grids, e.g.:\n\n```js\nnew WinBox(\"Split Top-Left\", { right: \"66%\", bottom: \"50%\", max: true });\nnew WinBox(\"Split Bottom-Left\", { right: \"66%\", top: \"50%\", max: true });\n\nnew WinBox(\"Split Middle\", { left: \"34%\", right: \"34%\", max: true });\n\nnew WinBox(\"Split Top-Right\", { left: \"66%\", bottom: \"50%\", max: true });\nnew WinBox(\"Split Bottom-Right\", { left: \"66%\", top: \"50%\", max: true });\n```\n\nThe splitscreen from above will look like this grid:\n\n```\n---------------------------------------------\n|             |              |              |\n|             |              |              |\n|  Top Left   |              |  Top Right   |\n|             |              |              |\n|             |              |              |\n---------------    Middle    ----------------\n|             |              |              |\n|             |              |              |\n| Bottom Left |              | Bottom Right |\n|             |              |              |\n|             |              |              |\n---------------------------------------------\n```\n\nYou can set the values for the viewport dynamically, doing this makes it possible to size the grid dynamically and also change the grid schema.\n\n<a name=\"winbox.addControl\"></a>\n## Custom Controls\n\nThis example will add a custom control button `.wb-like` to the window heading toolbar along some CSS for icon styling:\n```css\n.wb-like {\n    background-size: 20px auto;\n}\n.wb-like.active {\n    background-image: url(demo/heart-filled.svg) !important;\n}\n```\n\nAttach a control to the window toolbar:\n```js\nwinbox.addControl({\n    // the position index\n    index: 1,\n    // classname to apply styling\n    class: \"wb-like\",\n    // icon url when not specified via classname\n    image: \"demo/heart.svg\",\n    // click listener\n    click: function(event, winbox){\n        // the winbox instance will be passed as 2nd parameter\n        console.log(winbox.id);\n        // \"this\" refers to the button which was clicked:\n        this.classList.toggle(\"active\");\n    }\n});\n```\n\n<a name=\"winbox.removeControl\"></a>\nRemove a control from the window toolbar:\n```js\nwinbox.removeControl(\"wb-like\")\n      .removeControl(\"wb-min\");\n```\n\n<a name=\"template\"></a>\n## Custom Template (Layout)\n\nYou can fully customize the WinBox window layout by providing a custom `template` via the config during creation. This way you can add new elements to the window or re-arrange them.\n\nThis example will add a control button `.wb-custom` to the window toolbar by using a custom template along some CSS:\n```css\n.wb-custom {\n    background-image: url(demo/icon-github.svg);\n    background-size: 17px auto;\n}\n```\n\nCreate by using a custom template:\n```js\nconst template = document.createElement(\"div\");\ntemplate.innerHTML = `\n    <div class=wb-header>\n        <div class=wb-control>\n            <span class=wb-custom></span>\n            <span class=wb-close></span>\n        </div>\n        <div class=wb-drag></div>\n    </div>\n    <div class=wb-body></div>\n`;\n\nnew WinBox(\"Custom Template\", { template });\n```\n\n> The `.wb-drag` element needs to be existing when the user should be able to move the window by dragging the heading toolbar.\n\n<a name=\"customize\"></a>\n## Customize Window\n\n> Additionally, take a look into the <a href=\"https://github.com/nextapps-de/winbox/tree/master/src/css/themes\">themes folder</a> to get some ideas how to customize the window.\n\nThe window boilerplate:\n\n<img src=\"https://cdn.jsdelivr.net/gh/nextapps-de/winbox@master/demo/boilerplate.svg?v=4\" width=\"100%\" alt=\"WinBox Boilerplate\">\n\nHide or disable specific icons:\n```css\n.wb-min   { display: none }\n.wb-full  { display: none }\n.wb-max   { display: none }\n.wb-close { display: none }\n```\n\nModify a specific icon:\n```css\n.wb-max {\n    background-image: url(src/img/max.png);\n    background-position: center;\n    background-size: 15px auto;\n}\n```\n\nUse black standard icons (useful for bright backgrounds):\n```css\n.wb-control { filter: invert(1) }\n```\n\nModify or disable resizing areas on the window borders:\n```css\n/* north */\n.wb-n  { display: none }\n\n/* east */\n.wb-e  { display: none }\n\n/* south */\n.wb-s  { display: none }\n\n/* west */\n.wb-w  { display: none }\n\n/* north-west */\n.wb-nw { display: none }\n\n/* north-east */\n.wb-ne { display: none }\n\n/* south-west */\n.wb-sw { display: none }\n\n/* south-east */\n.wb-se { display: none }\n```\n\nModify or disable the window drop shadow:\n```css\n.winbox { box-shadow: none }\n```\n\nStyle the header title:\n```css\n.wb-title { font-size: 12px }\n```\n\nStyle the titlebar icon:\n```css\n.wb-icon {\n    width: 35px;\n    background-size: 35px 35px;\n}\n```\n\nStyle the window background (frame):\n```css\n.winbox {\n    background: linear-gradient(90deg, #ff00f0, #0050ff);\n    border-radius: 12px 12px 0 0;\n}\n```\n\nStyle the body of a window element and set the frame border:\n```css\n.wb-body {\n    /* the width of window frame border: */\n    margin: 4px;\n    color: #fff;\n    background: #131820;\n}\n```\n\n> The margin of `.wb-body` corresponds to the width of the window border.\n\nApply styles when window is in \"minimized\" state:\n```css\n.winbox {\n    border-radius: 10px;\n}\n.winbox.min {\n    border-radius: 0;\n}\n.winbox.min .windbox-title {\n    font-size: 12px;\n}\n```\n\nApply styles when window is NOT in \"minimized\" state:\n```css\n.winbox:not(.min) {\n    /* apply styles */\n}\n```\n\nApply styles when window is in \"maximized\" state:\n```css\n.winbox {\n    border-radius: 10px;\n}\n.winbox.max {\n    border-radius: 0;\n}\n.winbox.max .wb-max {\n    opacity: 0.5;\n}\n```\n\nApply styles when window is NOT in \"maximized\" state:\n```css\n.winbox:not(.max) {\n    /* apply styles */\n}\n```\n\nApply styles when window is in \"fullscreen\" state:\n```css\n.wb-body:fullscreen {\n    /* apply styles */\n}\n```\n\nApply styles when window is in \"focus\" state:\n```css\n.winbox {\n    background: #999;\n}\n.winbox.focus {\n    background: #0050ff; \n}\n.winbox .wb-control {\n    display: none;\n}\n.winbox.focus .wb-control {\n    display: block;\n}\n```\n\nApply styles when window is NOT in \"focus\" state (the same logic from example above, but shorter):\n```css\n.winbox:not(.focus) {\n    background: #999;\n}\n.winbox:not(.focus) .wb-control {\n    display: none;\n}\n```\n\nApply styles when window is in \"modal\" state:\n```css\n.winbox.modal .wb-close { display: none }\n```\n\nCustomize the modal background overlay:\n```css\n.winbox.modal:after {\n    background: #0d1117;\n    opacity: 0.5;\n    animation: none;\n}\n```\n\n#### Style Scrollbars\n\n```css\n.wb-body::-webkit-scrollbar {\n    width: 12px;\n}\n.wb-body::-webkit-scrollbar-track {\n    background: transparent;\n}\n.wb-body::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: #263040;\n}\n.wb-body::-webkit-scrollbar-thumb:window-inactive {\n    background: #181f2a;\n}\n.wb-body::-webkit-scrollbar-corner {\n    background: transparent;\n}\n```\n\n## Useful Hints\n\nOften you need to hide specific content parts when it was mounted to a window or hiding when NOT inside a window:\n\nNow you can add the two classes `\"wb-hide\"` and `\"wb-show\"` to any element to control visibility between the two states \"inside\" and \"outside\" a window:\n\n```html\n<body>\n    <main id=\"content\">\n        <header class=\"wb-hide\">Hide this header when in windowed mode</header>\n        <section>\n            <!-- page contents -->\n        </section>\n        <footer class=\"wb-show\">Hide this footer when NOT in windowed mode</footer>\n    </main>\n</body>\n```\n\nThe `display` property when using `\"wb-show\"` might not fit your needs. Please change this css class definition to your desired display-state accordingly.\n\n```js\nnew WinBox({\n    mount: document.getElementById(\"content\")\n});\n```\n\n#### Best Practices\n\n- Use a non-scrolling body element to get the best user experience on mobile devices.\n- Or provide an alternative view strategy for mobile devices, e.g. when the device is a touch device then open a classical app view. If a mouse pointer is available, then mount this view to the WinBox window. Also, you can place a switch button in your application where the user can also toggle between these two modes.\n\n## WinBox on Angular application\n\nStep 1: Install WinBox library\n\n```\nnpm i winbox\n```\n\nStep 2: Install WinBox types\n\n```\nnpm i @types/winbox --save-dev\n```\n\nStep 3: Import WinBox in a component\n\n```ts\nimport { Component } from '@angular/core';\nimport 'winbox';\ndeclare const WinBox: WinBox.WinBoxConstructor;\n\n@Component({\n  selector: 'my-app',\n  template: '<button (click)=\"openWindow()\">Open Window</button>'\n})\nexport class AppComponent {\n  openWindow() {\n    WinBox.new();\n  }\n}\n```\n\n## WinBox on Vue application\n\nhttps://github.com/wobsoriano/vue-winbox\n\nIt uses the native [teleport](https://v3.vuejs.org/api/built-in-components.html#teleport) component in Vue 3 and recommends https://github.com/LinusBorg/vue-simple-portal for Vue 2 users.\n\n\n## WinBox on React application\n\nhttps://github.com/rickonono3/react-winbox\n\nA React controlled component for WinBox.js, with full Reactful props and state. Includes all configurations of WinBox.js by using React component props.\n\n## Custom Builds\n\nGo to the root directory of WinBox and run:\n```cmd\nnpm install\n```\n\nPerform a build:\n```cmd\nnpm run build\n```\n\nThe final build is located in the `dist/` folder.\n\n---\n\nCopyright 2021-2023 Thomas Wilkerling, Hosted by Nextapps GmbH<br>\nReleased under the <a href=\"http://www.apache.org/licenses/LICENSE-2.0.html\" target=\"_blank\">Apache 2.0 License</a><br>\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 35.55078125,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, height=device-height, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover, shrink-to-fit=no\">\n    <meta name=\"robots\" content=\"index, follow\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/railscasts.min.css\">\n    <title>WinBox.js &ndash; Modern HTML5 Window Manager</title>\n\n    <!-- Import as bundled (All-in-one): -->\n    <!-- <script src=\"dist/winbox.bundle.min.js\"></script> -->\n\n    <!-- Or import JS + CSS separately: -->\n    <link rel=\"stylesheet\" href=\"dist/css/winbox.min.css\">\n    <script src=\"dist/js/winbox.min.js\"></script>\n\n    <!-- Optional standard themes: -->\n    <link rel=\"stylesheet\" href=\"dist/css/themes/modern.min.css\">\n    <link rel=\"stylesheet\" href=\"dist/css/themes/white.min.css\">\n\n    <!-- Development only: -->\n    <!--\n    <link type=\"text/css\" rel=\"stylesheet/less\" href=\"src/css/winbox.less\">\n    <link type=\"text/css\" rel=\"stylesheet/less\" href=\"src/css/themes/modern.less\">\n    <link type=\"text/css\" rel=\"stylesheet/less\" href=\"src/css/themes/white.less\">\n    <script src=\"node_modules/less/dist/less.min.js\"></script>\n    -->\n\n    <!-- Custom Themes Demo: -->\n    <style>\n\n        /* WinBox Theme: \"custom\" */\n\n        .winbox.custom {\n            background: linear-gradient(90deg, #ff00f0, #0050ff);\n            box-shadow: none;\n            border-radius: 12px 12px 0 0;\n        }\n        .winbox.custom.max,\n        .winbox.custom.min {\n            border-radius: 0;\n        }\n        .winbox.custom .wb-body {\n            /* margin represents the width of window border: */\n            margin: 4px;\n            color: #fff;\n            background: #131820;\n        }\n        .winbox.custom .wb-title {\n            font-size: 13px;\n            text-transform: uppercase;\n            font-weight: 600;\n        }\n        .winbox.custom .wb-control * {\n            opacity: 0.65;\n        }\n        .winbox.custom .wb-control *:hover {\n            opacity: 1;\n        }\n        .winbox.custom .wb-max {\n            background-image: url(src/img/max.svg);\n            background-size: 17px auto;\n        }\n        .winbox.custom .wb-min {\n            background-image: url(src/img/min.svg);\n        }\n        .winbox.custom .wb-close {\n            background-image: url(src/img/close.svg);\n        }\n        .winbox.custom .wb-full {\n            display: none;\n        }\n        .winbox.custom .wb-body::-webkit-scrollbar {\n            width: 12px;\n        }\n        .winbox.custom .wb-body::-webkit-scrollbar-track {\n            background: transparent;\n        }\n        .winbox.custom .wb-body::-webkit-scrollbar-thumb {\n            border-radius: 10px;\n            background: #263040;\n        }\n        .winbox.custom .wb-body::-webkit-scrollbar-thumb:window-inactive {\n            background: #181f2a;\n        }\n        .winbox.custom .wb-body::-webkit-scrollbar-corner {\n            background: transparent;\n        }\n\n        /* WinBox Theme: \"my-theme\" */\n\n        .winbox.my-theme{\n            background: #fff;\n        }\n        .winbox.my-theme .wb-body {\n            color: #fff;\n            background: #131820;\n        }\n        .winbox.my-theme .wb-title {\n            color: #000;\n        }\n        .winbox.my-theme .wb-control {\n            filter: invert(1);\n        }\n\n        /* WinBox Custom Control */\n\n        .wb-custom {\n            background-image: url(demo/icon-github.svg);\n            background-size: 17px auto;\n        }\n\n        .wb-like {\n            background-size: 20px auto;\n        }\n        .wb-like.active {\n            background-image: url(demo/heart-filled.svg) !important;\n        }\n\n    </style>\n    <link rel=\"stylesheet\" href=\"demo/style.css\">\n    <meta name=\"format-detection\" content=\"telephone=no\">\n    <meta name=\"description\" content=\"WinBox is a modern HTML5 window manager for the web. Lightweight, outstanding performance, no dependencies, fully customizable, free and open source!\">\n    <meta name=\"keywords\" content=\"window manager, web window, html5 popup, javascript window, web desktop, html5 windows, web frame, web box\">\n    <meta name=\"thumbnail\" content=\"https://nextapps-de.github.io/winbox/demo/favicon.png\">\n    <meta name=\"background-color\" content=\"#0d1116\">\n    <meta name=\"theme-color\" content=\"#0d1116\">\n    <meta property=\"og:url\" content=\"https://nextapps-de.github.io/winbox/\">\n    <meta property=\"og:site_name\" content=\"WinBox - HTML5 window manager\">\n    <meta property=\"og:image\" content=\"https://nextapps-de.github.io/winbox/demo/og-image.png\">\n    <meta property=\"og:title\" content=\"WinBox - HTML5 window manager\">\n    <meta property=\"og:description\" content=\"WinBox is a modern HTML5 window manager for the web. Lightweight, outstanding performance, no dependencies, fully customizable, free and open source!\">\n    <meta property=\"og:type\" content=\"Software\">\n    <meta property=\"og:url\" content=\"https://nextapps-de.github.io/winbox/\">\n    <link rel=\"icon\" sizes=\"16x16 32x32 48x48 64x64\" type=\"image/png\" href=\"https://nextapps-de.github.io/winbox/demo/favicon.png\">\n    <link rel=\"icon\" sizes=\"512x512 1024x1024\" type=\"image/png\" href=\"https://nextapps-de.github.io/winbox/demo/og-image.png\">\n</head>\n<body>\n<main>\n    <header>\n        <a href=\"https://github.com/nextapps-de/winbox\">Goto Github</a>\n    </header>\n    <div class=\"wrapper\">\n        <h1 style=\"margin-bottom: 0\"><img src=\"demo/winbox-gradient.svg\" alt=\"WinBox.js: HTML5 Window Manager for the Web.\" width=\"2400\" height=\"811\"></h1>\n        <h2>WinBox is a modern HTML5 window manager for the web. Lightweight, outstanding performance, no dependencies, fully customizable, free and open source!</h2>\n        <br>\n        <div class=\"button\" onclick=\"window.examples['theme-modern']()\" style=\"background-color: #ca00b4\">Show Example</div>\n        <br>\n\n        <hr>\n        <p style=\"font-size: 15px; line-height: 20px;\">\n            Please feel free to support me by making a personal donation which helps me a lot to keep this project alive and also to providing all the contribution to keep WinBox.js on a professional top-end level.\n            <br><br>\n            <a href=\"https://opencollective.com/winboxjs/donate\" target=\"_blank\" style=\"margin: 0 10px 10px 0\">\n                <img src=\"https://opencollective.com/webpack/donate/button@2x.png?color=blue\" height=\"32\" alt=\"Donate using Open Collective\">\n            </a>\n            <a href=\"https://github.com/sponsors/ts-thomas/\" target=\"_blank\" style=\"margin: 0 10px 10px 0\">\n                <img src=\"https://camo.githubusercontent.com/b932f45963b659dfeb86b77ff29a9eaebe25a734d63a17a176aa82bf34845cf2/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d53706f6e736f72266d6573736167653d254532253944254134266c6f676f3d47697448756226636f6c6f723d253233666538653836\" height=\"32\" alt=\"Donate using Github Sponsors\">\n            </a>\n            <a href=\"https://liberapay.com/ts-thomas/donate\" target=\"_blank\" style=\"margin: 0 10px 10px 0\">\n                <img src=\"https://liberapay.com/assets/widgets/donate.svg\" height=\"32\" alt=\"Donate using Liberapay\">\n            </a>\n            <a href=\"https://www.patreon.com/user?u=96245532\" target=\"_blank\" style=\"margin: 0 10px 10px 0\">\n                <img src=\"https://s3-us-west-1.amazonaws.com/widget-images/become-patron-widget-medium%402x.png\" height=\"32\" alt=\"Donate using Patreon\">\n            </a>\n            <a href=\"https://www.paypal.com/donate/?hosted_button_id=GEVR88FC9BWRW\" target=\"_blank\" style=\"margin: 0 10px 10px 0\">\n                <img src=\"https://www.paypalobjects.com/webstatic/de_DE/i/de-pp-logo-200px.png\" height=\"32\" alt=\"Donate using PayPal\">\n            </a>\n            <a href=\"https://salt.bountysource.com/teams/ts-thomas\" target=\"_blank\">\n                <img src=\"https://d2bbtvgnhux6eq.cloudfront.net/assets/logos/alternate-7868987b01474c95f47678727f6657882f6565a36396eb4b637ea53cc5944ff8.svg\" height=\"32\" alt=\"Donate using Bountysource\">\n            </a>\n            <br><br>\n            Thanks a lot,\n            Thomas (ts-thomas)\n        </p>\n\n        <hr>\n        <br>\n        Load Library (Bundle)\n        <br><br>\n    <pre><code class=\"language-html\">&lt;head>\n    &lt;script src=\"dist/winbox.bundle.min.js\">&lt;/script>\n&lt;/head></code></pre>\n        <div class=\"break\"></div>\n        <br>\n        Load Library (Non-Bundle)\n        <br><br>\n        <pre><code class=\"language-html\">&lt;head>\n    &lt;link rel=\"stylesheet\" href=\"dist/css/winbox.min.css\">\n    &lt;script src=\"dist/js/winbox.min.js\">&lt;/script>\n&lt;/head></code></pre>\n        <div class=\"break\"></div>\n\n        <hr>\n        <br>\n        Class Constructor\n        <br><br>\n        <pre><code class=\"language-js\">WinBox(title, options&lt;key: value>)</code></pre>\n        <br>\n\n        <hr>\n        <br>\n        <div style=\"color: #79c0ff; line-height: 22px;\">You can open the browser dev tools and copy and paste the js-code blocks into the console and play with them.</div>\n\n        <hr>\n        <br>\n        Basic Window\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"Basic Window\");</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['basic']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Root\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"Custom Root\", {\n    root: document.querySelector(\"main\")\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['root']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Border\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"Custom Border\", {\n    border: \"0.3em\"\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['border']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Color\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox({\n    title: \"Custom Color\",\n    background: \"#ff005d\",\n    border: 4\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['color']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Icon (Titlebar)\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox({\n    title: \"Custom Icon\",\n    icon: \"demo/wikipedia.svg\",\n    background: \"#252b4e\"\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['icon']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Limit Viewport\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"Limit Viewport\", {\n    top: 50,\n    right: 50,\n    bottom: 0,\n    left: 50\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['viewport']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Splitscreen\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"Splitscreen (Left)\", {\n    right: \"50%\",\n    max: true\n});\n\nnew WinBox(\"Splitscreen (Right)\", {\n    left: \"50%\",\n    max: true\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['splitscreen']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Position / Size\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox({\n    title: \"Custom Position / Size\",\n    x: \"center\",\n    y: \"center\",\n    width: \"50%\",\n    height: \"50%\"\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['position']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Modal Window\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"Modal Window\", {\n    modal: true\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['modal']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Set innerHTML\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox({\n    title: \"Set innerHTML\",\n    html: \"&lt;h1>Lorem Ipsum&lt;/h1>\"\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['innerhtml']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Mount DOM (Cloned)\n        <br><br>\n\n        <pre><code class=\"language-html\">&lt;div id=\"backstore\" style=\"display: none\">\n    &lt;div id=\"content\">\n        &lt;h1>Lorem Ipsum&lt;/h1>\n        &lt;p>Lorem ipsum [...]&lt;/p>\n        &lt;p>Duis autem vel [...]&lt;/p>\n        &lt;p>Ut wisi enim [...]&lt;/p>\n    &lt;/div>\n&lt;/div></code></pre>\n        <div class=\"break\"></div>\n        <pre><code class=\"language-js\">new WinBox(\"Mount DOM\", {\n    mount: document.getElementById(\"content\")\n                   .cloneNode(true)\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['mount-clone']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Mount DOM (Singleton) + Auto-Unmount\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"Mount DOM\", {\n    mount: document.getElementById(\"content\")\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['mount-auto']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Open URI / URL\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox(\"WinBox.js\", {\n    url: \"https://nextapps-de.github.io/winbox/\"\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['iframe']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        All Options\n        <br><br>\n        <pre><code class=\"language-js\">new WinBox({\n    // configuration:\n    index: 1,\n    id: \"my-window\",\n    root: document.body,\n    class: [\"no-full\", \"no-max\", \"my-theme\"],\n\n    // appearance:\n    title: \"All Options\",\n    background: \"#fff\",\n    border: 4,\n    header: 45,\n    icon: false,\n\n    // initial state:\n    modal: false,\n    max: false,\n    min: false,\n    hidden: false,\n\n    // dimension:\n    width: 250,\n    height: 200,\n    minheight: 55,\n    minwidth: 100,\n    maxheight: 300,\n    maxwidth: 500,\n    autosize: true,\n\n    // position:\n    x: \"center\",\n    y: \"center\",\n\n    // viewport boundaries:\n    top: 50,\n    right: 50,\n    bottom: 0,\n    left: 50,\n\n    // contents (choose from):\n    url: false,\n    mount: false,\n    html: \"width: 250, height: 200\",\n\n    // callbacks:\n    oncreate: function(options){\n        options.icon = \"demo/wikipedia.svg\"\n    },\n    onshow: function(){\n        console.log(\"Show:\", this.id);\n    },\n    onhide: function(){\n        console.log(\"Hide:\", this.id);\n    },\n    onfocus: function(){\n        this.setBackground(\"#fff\");\n    },\n    onblur: function(){\n        this.setBackground(\"#999\");\n    },\n    onresize: function(w, h){\n        this.body.textContent =\n            `width: ${w}, height: ${h}`;\n    },\n    onmove: function(x, y){\n        this.body.textContent =\n            `x: ${x}, y: ${y}`;\n    },\n    onclose: function(force){\n        return !confirm(\"Close window?\");\n    },\n    onfullscreen: function(){\n        console.log(\"Fullscreen:\", this.id);\n    },\n    onmaximize: function(){\n        console.log(\"Maximize:\", this.id);\n    },\n    onminimize: function(){\n        console.log(\"Minimize:\", this.id);\n    },\n    onrestore: function(){\n        console.log(\"Restore:\", this.id);\n    }\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['all-options']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Control Programmatically\n        <br><br>\n        <pre><code class=\"language-html\">&lt;div id=\"controls\">\n    &lt;button onclick=\"buttons.minimize()\">Minimize (Toggle)&lt;/button>\n    &lt;button onclick=\"buttons.maximize()\">Maximize (Toggle)&lt;/button>\n    &lt;button onclick=\"buttons.fullscreen()\">Fullscreen (Toggle)&lt;/button>\n    &lt;button onclick=\"buttons.move()\">Move (Center, Center)&lt;/button>\n    &lt;button onclick=\"buttons.resize()\">Resize (50%, 50%)&lt;/button>\n    &lt;button onclick=\"buttons.title()\">Set Title&lt;/button>\n    &lt;button onclick=\"buttons.color()\">Set Color&lt;/button>\n    &lt;button onclick=\"buttons.close()\">Close&lt;/button>\n&lt;/div></code></pre>\n    <div class=\"break\"></div>\n    <pre><code class=\"language-js\">var winbox = new WinBox(\"Controls\", {\n    mount: document.getElementById(\"controls\"),\n    border: 4,\n    onclose: function(force){\n        return !force && !confirm(\"Close window?\");\n    }\n});</code></pre>\n        <div class=\"break\"></div>\n        <pre><code class=\"language-js\">window.buttons = {\n    minimize: function(){\n\n        winbox.minimize(!this.min);\n    },\n    maximize: function(){\n\n        winbox.maximize(!this.max);\n    },\n    fullscreen: function(){\n\n        winbox.fullscreen(!this.full);\n    },\n    move: function(){\n\n        winbox.move(\"center\", \"center\");\n    },\n    resize: function(){\n\n        winbox.resize(\"50%\", \"50%\");\n    },\n    title: function(){\n\n        winbox.setTitle(\"Title-\" + Math.random());\n    },\n    color: function(){\n\n        winbox.setBackground(\n            \"rgb(\" + (Math.random() * 255 | 0) + \",\" +\n                     (Math.random() * 255 | 0) + \",\" +\n                     (Math.random() * 255 | 0) + \")\"\n        );\n    },\n    modal: function(){\n\n        winbox.toggleClass(\"modal\");\n    },\n    close: function(){\n\n        winbox.close();\n    },\n    force_close: function(){\n\n        winbox.close(true);\n    }\n};</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['controls']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Window Boilerplate\n        <br><br>\n        <img src=\"demo/boilerplate.svg\" width=\"100%\" alt=\"WinBox Boilerplate\">\n\n        <hr>\n        <br>\n        Custom Styles (Global)\n        <br><br>\n        <pre><code class=\"language-css\">.winbox {\n    background: linear-gradient(90deg, #ff00f0, #0050ff);\n    border-radius: 12px 12px 0 0;\n    box-shadow: none;\n}\n\n.winbox.min {\n    border-radius: 0;\n}\n\n.wb-body {\n    /* set the width of window border via margin: */\n    margin: 4px;\n    color: #fff;\n    background: #131820;\n}\n\n.wb-title {\n    font-size: 13px;\n    text-transform: uppercase;\n    font-weight: 600;\n}</code></pre>\n        <div class=\"break\"></div>\n\n        Customize Control Icons\n        <br><br>\n        <pre><code class=\"language-css\">.wb-control * {\n    opacity: 0.65;\n}\n\n.wb-control *:hover {\n    opacity: 1;\n}\n\n.wb-min {\n    background-image: url(src/img/min.svg);\n    background-size: 15px center;\n}\n\n.wb-max {\n    background-image: url(src/img/max.svg);\n}\n\n.wb-close {\n    background-image: url(src/img/close.svg);\n}\n\n.wb-full {\n    display: none;\n}</code></pre>\n        <div class=\"break\"></div>\n\n        Custom Scrollbars\n        <br><br>\n        <pre><code class=\"language-css\">.wb-body::-webkit-scrollbar {\n    width: 12px;\n}\n.wb-body::-webkit-scrollbar-track {\n    background: transparent;\n}\n.wb-body::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: #263040;\n}\n.wb-body::-webkit-scrollbar-thumb:window-inactive {\n    background: #181f2a;\n}\n.wb-body::-webkit-scrollbar-corner {\n    background: transparent;\n}</code></pre>\n        <div class=\"break\"></div>\n        <pre><code class=\"language-js\">new WinBox(\"Custom CSS\", {\n    mount: document.getElementById(\"content\")\n                   .cloneNode(true)\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['custom-css']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Styles By Classname\n        <br><br>\n        <pre><code class=\"language-css\">.winbox.my-theme{\n    background: #fff;\n}\n.winbox.my-theme .wb-body {\n    color: #fff;\n    background: #131820;\n}\n.winbox.my-theme .wb-title {\n    color: #000;\n}\n.winbox.my-theme .wb-control {\n    filter: invert(1);\n}</code></pre>\n        <div class=\"break\"></div>\n        <pre><code class=\"language-js\">new WinBox(\"Custom CSS (Class)\", {\n    class: \"my-theme\",\n    mount: document.getElementById(\"content\")\n                   .cloneNode(true)\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['custom-class']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Use Theme\n        <br><br>\n        <pre><code class=\"language-html\">&lt;head>\n&lt;link rel=\"stylesheet\" href=\"dist/css/winbox.min.css\">\n&lt;link rel=\"stylesheet\" href=\"dist/css/themes/modern.min.css\">\n&lt;script src=\"dist/js/winbox.min.js\">&lt;/script>\n&lt;/head></code></pre>\n        <div class=\"break\"></div>\n        <pre><code class=\"language-js\">new WinBox(\"Theme\", {\n    class: \"modern\",\n    mount: document.getElementById(\"content\")\n                   .cloneNode(true)\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['theme-modern']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Controls\n        <br><br>\n        <pre><code class=\"language-css\">.wb-like {\n    background-size: 20px auto;\n}\n.wb-like.active {\n    background-image: url(demo/heart-filled.svg) !important;\n}</code></pre>\n        <div class=\"break\"></div>\n        <pre><code class=\"language-js\">const winbox = new WinBox(\"Custom Controls\");\nwinbox.removeControl(\"wb-max\").removeControl(\"wb-min\");\nwinbox.addControl({\n    index: 0,\n    class: \"wb-like\",\n    image: \"demo/heart.svg\",\n    click: function(event, winbox){\n        // the winbox instance will be passed as 2nd parameter\n        console.log(winbox.id);\n        // \"this\" refers to the button which was clicked:\n        this.classList.toggle(\"active\");\n    }\n});</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['custom-control']()\">Run Code</div>\n        <br><br>\n\n        <hr>\n        <br>\n        Custom Template (Layout)\n        <br><br>\n        <pre><code class=\"language-css\">.wb-custom {\n    background-image: url(demo/icon-github.svg);\n    background-size: 17px auto;\n}</code></pre>\n        <div class=\"break\"></div>\n        <pre><code class=\"language-js\">const template = document.createElement(\"div\");\ntemplate.innerHTML = `\n    &lt;div class=wb-header>\n        &lt;div class=wb-control>\n            &lt;span class=wb-custom>&lt;/span>\n            &lt;span class=wb-close>&lt;/span>\n        &lt;/div>\n        &lt;div class=wb-drag>\n            &lt;div class=wb-title>&lt;/div>\n        &lt;/div>\n    &lt;/div>\n    &lt;div class=wb-body>&lt;/div>\n`;\n\nnew WinBox(\"Custom Template\", { template });</code></pre>\n        <div class=\"break\"></div>\n        <div class=\"button\" onclick=\"window.examples['custom-template']()\">Run Code</div>\n        <br><br>\n\n    </div>\n</main>\n<div id=\"backstore\" style=\"display: none\">\n    <div id=\"content\">\n        <h1>Lorem Ipsum</h1>\n        <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n        <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>\n        <p>Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</p>\n    </div>\n    <div id=\"controls\">\n        <button onclick=\"window.buttons['minimize']()\">Minimize (Toggle)</button>\n        <button onclick=\"window.buttons['maximize']()\">Maximize (Toggle)</button>\n        <button onclick=\"window.buttons['fullscreen']()\">Fullscreen (Toggle)</button>\n        <button onclick=\"window.buttons['modal']()\">Modal (Toggle)</button>\n        <button onclick=\"window.buttons['center']()\">Move (Center, Center)</button>\n        <button onclick=\"window.buttons['move']()\">Move (Right, Bottom)</button>\n        <button onclick=\"window.buttons['resize']()\">Resize (50%, 50%)</button>\n        <button onclick=\"window.buttons['title']()\">Set Title</button>\n        <button onclick=\"window.buttons['color']()\">Set Color</button>\n        <button onclick=\"window.buttons['add']()\">Add Class (my-theme)</button>\n        <button onclick=\"window.buttons['remove']()\">Remove Class (my-theme)</button>\n        <button onclick=\"window.buttons['close']()\">Close</button>\n        <button onclick=\"window.buttons['force_close']()\">Force Close</button>\n    </div>\n</div>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js\"></script>\n<script type=\"module\">\n\n    //import WinBox from \"./src/js/winbox.js\";\n    //window.WinBox = WinBox;\n\n    (function(){\n\n        let winbox;\n\n        window.examples = {\n\n            \"basic\": function(){\n\n                new WinBox(\"Basic Window\");\n            },\n            \"root\": function(){\n\n                new WinBox(\"Custom Root\", {\n\n                    root: document.querySelector(\"main\")\n                });\n            },\n            \"border\": function(){\n\n                new WinBox(\"Custom Border\", {\n\n                    border: \"0.3em\"\n                });\n            },\n            \"color\": function(){\n\n                new WinBox({\n\n                    title: \"Custom Color\",\n                    background: \"#ff005d\",\n                    border: 4\n                });\n            },\n\n            \"icon\": function(){\n\n                new WinBox({\n\n                    title: \"Custom Icon\",\n                    icon: \"demo/wikipedia.svg\",\n                    background: \"#252b4e\"\n                });\n            },\n\n            \"viewport\": function(){\n\n                new WinBox(\"Limit Viewport\", {\n\n                    top: 50,\n                    right: 50,\n                    bottom: 0,\n                    left: 50\n                });\n            },\n            \"splitscreen\": function(){\n\n                new WinBox(\"Splitscreen (Left)\", {\n\n                    right: \"50%\",\n                    max: true\n                });\n\n                new WinBox(\"Splitscreen (Right)\", {\n\n                    left: \"50%\",\n                    max: true\n                });\n            },\n            \"position\": function(){\n\n                new WinBox({\n\n                    title: \"Custom Position / Size\",\n                    x: \"center\",\n                    y: \"center\",\n                    width: \"50%\",\n                    height: \"50%\"\n                });\n            },\n            \"modal\": function(){\n\n                new WinBox(\"Modal Window\", {\n\n                    modal: true\n                });\n            },\n            \"innerhtml\": function(){\n\n                new WinBox({\n\n                    title: \"Set innerHTML\",\n                    html: \"<h1>Lorem Ipsum</h1>\"\n                });\n            },\n            \"mount-clone\": function(){\n\n                new WinBox(\"Mount DOM\", {\n\n                    mount: document.getElementById(\"content\")\n                                   .cloneNode(true)\n                });\n            },\n            \"mount-auto\": function(){\n\n                new WinBox(\"Mount DOM\", {\n\n                    mount: document.getElementById(\"content\")\n                });\n            },\n            \"iframe\": function(){\n\n                new WinBox(\"WinBox.js\", {\n\n                    url: \"https://nextapps-de.github.io/winbox/\",\n                    class: \"iframe\"\n                });\n            },\n            \"all-options\": function(){\n\n                new WinBox({\n\n                    // configuration:\n                    index: 1,\n                    id: \"my-window\",\n                    root: document.body,\n                    class: [\"no-full\", \"no-max\", \"my-theme\"],\n\n                    // appearance:\n                    title: \"All Options\",\n                    background: \"#fff\",\n                    border: 4,\n                    header: 45,\n                    icon: false,\n\n                    // initial state:\n                    modal: false,\n                    max: false,\n                    min: false,\n                    hidden: false,\n\n                    // dimension:\n                    width: 250,\n                    height: 200,\n                    minheight: 55,\n                    minwidth: 100,\n                    maxheight: 300,\n                    maxwidth: 500,\n                    autosize: true,\n\n                    // position:\n                    x: \"center\",\n                    y: \"center\",\n\n                    // viewport boundaries:\n                    top: 50,\n                    right: 50,\n                    bottom: 0,\n                    left: 50,\n\n                    // contents (choose from):\n                    url: false,\n                    mount: false,\n                    html: \"width: 250, height: 200\",\n\n                    // callbacks:\n                    oncreate: function(options){\n                        options.icon = \"demo/wikipedia.svg\"\n                    },\n                    onshow: function(){\n                        console.log(\"Show:\", this.id);\n                    },\n                    onhide: function(){\n                        console.log(\"Hide:\", this.id);\n                    },\n                    onfocus: function(){\n                        this.setBackground(\"#fff\");\n                    },\n                    onblur: function(){\n                        this.setBackground(\"#999\");\n                    },\n                    onresize: function(w, h){\n                        this.body.textContent =\n                            `width: ${w}, height: ${h}`;\n                    },\n                    onmove: function(x, y){\n                        this.body.textContent =\n                            `x: ${x}, y: ${y}`;\n                    },\n                    onclose: function(force){\n                        return !confirm(\"Close window?\");\n                    },\n                    onfullscreen: function(){\n                        console.log(\"Fullscreen:\", this.id);\n                    },\n                    onmaximize: function(){\n                        console.log(\"Maximize:\", this.id);\n                    },\n                    onminimize: function(){\n                        console.log(\"Minimize:\", this.id);\n                    },\n                    onrestore: function(){\n                        console.log(\"Restore:\", this.id);\n                    }\n                });\n            },\n            \"custom-css\": function(){\n\n                new WinBox(\"Custom CSS\", {\n\n                    width: 350,\n                    height: 250,\n                    class: \"custom\",\n                    mount: document.getElementById(\"content\")\n                                   .cloneNode(true)\n                });\n            },\n            \"custom-class\": function(){\n\n                new WinBox(\"Custom CSS (Class)\", {\n\n                    class: \"my-theme\",\n                    mount: document.getElementById(\"content\")\n                                   .cloneNode(true)\n                });\n            },\n            \"custom-control\": function(){\n\n                const winbox = new WinBox(\"Custom Controls\", { class: \"no-full\", background: \"#313646\" });\n                winbox.removeControl(\"wb-max\").removeControl(\"wb-min\");\n                winbox.addControl({\n                    // the position index\n                    index: 0,\n                    // classname to apply styling\n                    class: \"wb-like\",\n                    // icon url when not specified via classname\n                    image: \"demo/heart.svg\",\n                    // click listener\n                    click: function(event, winbox){\n                        // the winbox instance will be passed as 2nd parameter\n                        console.log(winbox.id);\n                        // \"this\" refers to the button which was clicked:\n                        this.classList.toggle(\"active\");\n                    }\n                });\n            },\n            \"custom-template\": function(){\n\n                const template = document.createElement(\"div\");\n                template.innerHTML = `\n                    <div class=wb-header>\n                        <div class=wb-control>\n                            <span class=wb-custom></span>\n                            <span class=wb-close></span>\n                        </div>\n                        <div class=wb-drag>\n                            <div class=wb-title></div>\n                        </div>\n                    </div>\n                    <div class=wb-body></div>\n                `;\n\n                new WinBox(\"Custom Template\", { template, background: \"#313646\" });\n            },\n            \"theme-modern\": function(){\n\n                new WinBox(\"Theme: Modern\", {\n\n                    class: \"modern\",\n                    mount: document.getElementById(\"content\")\n                                   .cloneNode(true)\n                });\n            },\n            \"controls\": function(){\n\n                winbox = new WinBox(\"Controls\", {\n\n                    mount: document.getElementById(\"controls\"),\n                    border: 4,\n                    onclose: function(force){\n                        return !force && !confirm(\"Close window?\");\n                    }\n                });\n            }\n        };\n\n        window.buttons = {\n\n            minimize: function(){\n\n                winbox.minimize(!winbox.min);\n            },\n            maximize: function(){\n\n                winbox.maximize(!winbox.max);\n            },\n            fullscreen: function(){\n\n                winbox.fullscreen(!winbox.full);\n            },\n            center: function(){\n\n                winbox.move(\"center\", \"center\");\n            },\n            move: function(){\n\n                winbox.move(\"right\", \"bottom\");\n            },\n            resize: function(){\n\n                winbox.resize(\"50%\", \"50%\");\n            },\n            title: function(){\n\n                winbox.setTitle(\"Title-\" + Math.random());\n            },\n            color: function(){\n\n                winbox.setBackground(\n                    \"rgb(\" + (Math.random() * 255 | 0) + \",\" +\n                             (Math.random() * 255 | 0) + \",\" +\n                             (Math.random() * 255 | 0) + \")\"\n                );\n            },\n            modal: function(){\n\n                winbox.toggleClass(\"modal\");\n            },\n            add: function(){\n\n                winbox.addClass(\"my-theme\");\n            },\n            remove: function(){\n\n                winbox.removeClass(\"my-theme\");\n            },\n            close: function(){\n\n                winbox.close();\n            },\n            force_close: function () {\n\n                winbox.close(true);\n            }\n        };\n\n    }());\n\n    hljs.highlightAll();\n\n</script>\n</body>\n</html>\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.4443359375,
          "content": "{\n  \"name\": \"winbox\",\n  \"version\": \"0.2.82\",\n  \"description\": \"Modern HTML5 window manager for the web.\",\n  \"homepage\": \"https://nextapps-de.github.io/winbox/\",\n  \"author\": \"Thomas Wilkerling\",\n  \"copyright\": \"Nextapps GmbH\",\n  \"license\": \"Apache-2.0\",\n  \"keywords\": [\n    \"windowmanager\",\n    \"windows\",\n    \"popup\",\n    \"window-manager\",\n    \"desktop\",\n    \"window\",\n    \"frame\",\n    \"box\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/nextapps-de/winbox/issues\",\n    \"email\": \"info@nextapps.de\"\n  },\n  \"main\": \"src/js/winbox.js\",\n  \"type\": \"module\",\n  \"browser\": \"dist/winbox.bundle.min.js\",\n  \"preferGlobal\": false,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/nextapps-de/winbox.git\"\n  },\n  \"scripts\": {\n    \"copy\": \"cpx \\\"src/img/*.*\\\" dist/img/\",\n    \"clean\": \"node task/clean\",\n    \"build:css\": \"lessc src/css/winbox.less src/css/winbox.css\",\n    \"build:css:bundle\": \"node task/bundle --image && lessc --autoprefix=\\\">=1%\\\" --clean-css=\\\"--s1 --advanced --rebase\\\" tmp/bundle.less dist/css/winbox.min.css && csso dist/css/winbox.min.css --output dist/css/winbox.min.css\",\n    \"build:css:theme-modern\": \"lessc --autoprefix=\\\">=1%\\\" --clean-css=\\\"--s1 --advanced --rebase\\\" src/css/themes/modern.less dist/css/themes/modern.min.css && csso dist/css/themes/modern.min.css --output dist/css/themes/modern.min.css\",\n    \"build:css:theme-white\": \"lessc --autoprefix=\\\">=1%\\\" --clean-css=\\\"--s1 --advanced --rebase\\\" src/css/themes/white.less dist/css/themes/white.min.css && csso dist/css/themes/white.min.css --output dist/css/themes/white.min.css\",\n    \"build:js\": \"node task/build\",\n    \"build:bundle\": \"node task/build --bundle\",\n    \"build:svg\": \"node task/svgo\",\n    \"build\": \"npm run clean && npm run copy && npm run build:svg && npm run build:css && npm run build:css:bundle && npm run build:css:theme-modern && npm run build:css:theme-white && node task/bundle --style && npm run build:js && npm run build:bundle && echo Build Complete. && exit 0\",\n    \"server\": \"node task/server.js\"\n  },\n  \"files\": [\n    \"dist/\",\n    \"src/\",\n    \"task/\",\n    \"README.md\",\n    \"CHANGELOG.md\",\n    \"LICENSE\"\n  ],\n  \"readme\": \"README.md\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"base64-img\": \"^1.0.4\",\n    \"cpx\": \"^1.5.0\",\n    \"csso\": \"^5.0.4\",\n    \"csso-cli\": \"^4.0.1\",\n    \"google-closure-compiler\": \"^20220719.0.0\",\n    \"less\": \"^4.1.3\",\n    \"less-plugin-autoprefix\": \"^2.0.0\",\n    \"less-plugin-clean-css\": \"^1.5.1\",\n    \"svgo\": \"^2.8.0\",\n    \"web-servo\": \"^0.5.1\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "task",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}