{
  "metadata": {
    "timestamp": 1736562734515,
    "page": 268,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rstacruz/jquery.transit",
      "stars": 7288,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": "node_modules\nsite\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.6923828125,
          "content": "# Contributing to Transit\n\nWant to get involved? Thanks! There are plenty of ways to help!\n\n## Reporting issues\n\nA bug is a _demonstrable problem_ that is caused by the code in the\nrepository.\n\nPlease read the following guidelines before you [report an issue][issues]:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been\n   reported. If it has been, please comment on the existing issue.\n\n2. **Check if the issue has been fixed** &mdash; the latest `master` or\n   development branch may already contain a fix.\n\n3. **Isolate the demonstrable problem** &mdash; make sure that the code in the\n   project's repository is _definitely_ responsible for the issue. Create a\n   [reduced test case](http://css-tricks.com/6263-reduced-test-cases/) - an\n   extremely simple and immediately viewable example of the issue.\n\n4. **Include a live example** &mdash; provide a link to your reduced test case\n   when appropriate (e.g. if the issue is related to (front-end technologies).\n   Please use [jsFiddle](http://jsfiddle.net) to host examples.\n\nPlease try to be as detailed as possible in your report too. What is your\nenvironment? What steps will reproduce the issue? What browser(s) and OS\nexperience the problem? What would you expect to be the outcome? All these\ndetails will help people to assess and fix any potential bugs.\n\n### Example of a good bug report:\n\n> Short and descriptive title\n>\n> A summary of the issue and the browser/OS environment in which it occurs. If\n> suitable, include the steps required to reproduce the bug.\n>\n> 1. This is the first step\n> 2. This is the second step\n> 3. Further steps, etc.\n>\n> `<url>` (a link to the reduced test case)\n>\n> Any other information you want to share that is relevant to the issue being\n> reported. This might include the lines of code that you have identified as\n> causing the bug, and potential solutions (and your opinions on their\n> merits).\n\nA good bug report shouldn't leave people needing to chase you up to get further\ninformation that is required to assess or fix the bug.\n\n**[File a bug report][issues]**\n\n## Responding to issues\n\nFeel free to respond to other people's issues! Some people may be reporting \nissues that can easily be solved even without modification to the project's \ncode.\n\nYou can also help by verifying issues reported.\n\n**[View issues][issues]**\n\n## The 'help wanted' tag\n\nSome [issues] are tagged with the 'help wanted' tag. These issues often:\n\n - are missing an actual implementation, or\n - need people's help in verifying and replicating the issue, or\n - need test cases.\n\nIf you would like to contribute code and don't have any specific issue you want \nto fix, this would be a good place to start looking at!\n\n**[View issues][issues]**\n\n## Pull requests\n\nGood pull requests — patches, improvements, new features — are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n\nIf your contribution involves a significant amount of work or substantial\nchanges to any part of the project, please open an issue to discuss it first.\n\nPlease follow this process; it's the best way to get your work included in the\nproject:\n\n1. [Fork](http://help.github.com/fork-a-repo/) the project.\n\n2. Clone your fork (`git clone\n   https://github.com/<your-username>/html5-boilerplate.git`).\n\n3. Add an `upstream` remote (`git remote add upstream\n   https://github.com/rstacruz/jquery.transit.git`).\n\n4. Get the latest changes from upstream (e.g. `git pull upstream\n   <dev-branch>`).\n\n5. Create a new topic branch to contain your feature, change, or fix (`git\n   checkout -b <topic-branch-name>`).\n\n6. Make sure that your changes adhere to the current coding conventions used\n   throughout the project - indentation, accurate comments, etc. Please update\n   any documentation that is relevant to the change you are making.\n\n7. Commit your changes in logical chunks; use git's [interactive\n   rebase](https://help.github.com/articles/interactive-rebase) feature to tidy\n   up your commits before making them public. Please adhere to these [git commit\n   message\n   guidelines](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n   or your pull request is unlikely be merged into the main project.\n\n8. Locally merge (or rebase) the upstream branch into your topic branch.\n\n9. Push your topic branch up to your fork (`git push origin\n   <topic-branch-name>`).\n\n10. [Open a Pull Request](http://help.github.com/send-pull-requests/) with a\n    clear title and description. Please mention which browsers you tested in.\n\n## Acknowledgements\n\nThis contributing guide has been adapted from [HTML5 boilerplate's guide][g].\n\n[g]: https://github.com/h5bp/html5-boilerplate/blob/master/CONTRIBUTING.md\n[issues]: https://github.com/rstacruz/jquery.transit/issues/\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 6.4912109375,
          "content": "## v0.9.12 - July 17, 2014\n\n * Fix browserify builds by using the correct jQuery. ([@dminkovsky], [#201])\n * Fix properties resetting after a transition. ([#204], [#205])\n\n## v0.9.11 - June 23, 2014\n\n * Add support for `scaleX` and `scaleY`. ([@YousefED], [#192])\n * Add support for npm.\n * Add support for RequireJS and CommonJS.\n * Fix transitionend support for IE10, Chrome, and many others. ([@wambotron], [#103])\n\nAlso:\n\n * Fix `.transition({...}, {queue: false})` not being honored. ([@YousefED], [#192])\n * Remove some redundant code. ([@Bongo], [#165])\n * Docs: Update to support the new docco. ([@francismakes], [#175])\n * Add `easeInCubic` easing. ([@emagnier], [@willblackmore], [#161], [#142])\n * Add test cases for jQuery 2.0+. ([@hankhero], [#155])\n\nThe version `0.9.10` was not officially released as it was published prematurely\nto npm.\n\n## v0.9.9 - Dec 14, 2012\n\nMany, many thanks to the many [contributors] who made this release happen! This \nis a pre-release of 1.0.\n\n### Fixes and additions:\n\n  * Fix support for jQuery 1.8, IE 10, Firefox 16, Android Jellybean.\n  ([#48], [#62], [#63], [#69], [#70], [#71], [#72], [#76], [#77], [#80], [#81], [#82], [#85], [#86], [#90], [#92], [#93])\n  * Compatibility with Twitter Bootstrap has been fixed. ([#67])\n  * Unprefixed CSS properties are now used if your browser supports them.\n  * Account for prefix-free transition end for Mozilla. ([#97])\n  * Callbacks should now be called even if duration is `0`. ([#37])\n  * Doing `.css('transition', 'transform 1s')` should now properly vendor-prefix 'transform'. ([#84])\n  * Added Penner easing splines. ([#44])\n\n### Internal fixes:\n\n  * New test suite.\n  * In building the website, use `fl-rocco` instead of `docco`. This removes the dependency. ([#50])\n\n## v0.1.3 - Feb 14, 2012\n\n### Fixed:\n  * Fix JS error with undefined `next` function. ([#21])\n  * Using `delay: 0` now works. Closes ([#20])\n  * More robust checking of 3D transition support. ([#19])\n  * Stop rotateX/rotateY/etc from stopping other transitions when it's not\n    supported.  ([#15])\n\n### Added:\n  * Support Firefox 10 3D transitions. ([#19])\n\n### Changed:\n  * Allow disabling using the transitionEnd property.\n  (`$.transit.useTransitionEnd = true`)\n  * Use the more reliable timers by default. (`useTransitionEnd` now defaults to\n      `false`)\n\n## v0.1.2 - Jan 24, 2012\n\nThanks to code contributors [@ppcano], [@jeduan], [@steckel], [@weotch], and everyone \nwho reported issues.\n\n### Fixed:\n  * IE8 error about .indexOf. ([#12], [#8])\n  * Fix z-layer scaling in Safari. ([#9], [#10])\n  * Fix scale elements being unclickable in WebKits. ([#9], [#10])\n  * Fix support for `queue: false`. ([#13])\n  * Clean up transitions when done. ([#14])\n  * Fix disappearing scaled elements in Chrome. ([#11])\n  * Fix a bug where the default duration and easing can sometimes not be used.\n\n### Changed:\n  * Make code compatible with jsHint. ([#6])\n\n## v0.1.1 - Nov 18, 2011\n\n### Fixed:\n  * Only animate what is needed (ie, don't use 'transition-property: all').\n\n## v0.1.0 - Nov 14, 2011\n\nInitial official release.\n\n[contributors]: https://github.com/rstacruz/jquery.transit/contributors\n\n[#201]: https://github.com/rstarcuz/jquery.transit/issues/201\n[@dminkovsky]: https://github.com/dminkovsky\n\n[#204]: https://github.com/rstacruz/jquery.transit/issues/204\n[#205]: https://github.com/rstacruz/jquery.transit/issues/205\n[#192]: https://github.com/rstacruz/jquery.transit/issues/192\n[#103]: https://github.com/rstacruz/jquery.transit/issues/103\n[#192]: https://github.com/rstacruz/jquery.transit/issues/192\n[#165]: https://github.com/rstacruz/jquery.transit/issues/165\n[#175]: https://github.com/rstacruz/jquery.transit/issues/175\n[#161]: https://github.com/rstacruz/jquery.transit/issues/161\n[#142]: https://github.com/rstacruz/jquery.transit/issues/142\n[#155]: https://github.com/rstacruz/jquery.transit/issues/155\n[#48]: https://github.com/rstacruz/jquery.transit/issues/48\n[#62]: https://github.com/rstacruz/jquery.transit/issues/62\n[#63]: https://github.com/rstacruz/jquery.transit/issues/63\n[#69]: https://github.com/rstacruz/jquery.transit/issues/69\n[#70]: https://github.com/rstacruz/jquery.transit/issues/70\n[#71]: https://github.com/rstacruz/jquery.transit/issues/71\n[#72]: https://github.com/rstacruz/jquery.transit/issues/72\n[#76]: https://github.com/rstacruz/jquery.transit/issues/76\n[#77]: https://github.com/rstacruz/jquery.transit/issues/77\n[#80]: https://github.com/rstacruz/jquery.transit/issues/80\n[#81]: https://github.com/rstacruz/jquery.transit/issues/81\n[#82]: https://github.com/rstacruz/jquery.transit/issues/82\n[#85]: https://github.com/rstacruz/jquery.transit/issues/85\n[#86]: https://github.com/rstacruz/jquery.transit/issues/86\n[#90]: https://github.com/rstacruz/jquery.transit/issues/90\n[#92]: https://github.com/rstacruz/jquery.transit/issues/92\n[#93]: https://github.com/rstacruz/jquery.transit/issues/93\n[#67]: https://github.com/rstacruz/jquery.transit/issues/67\n[#97]: https://github.com/rstacruz/jquery.transit/issues/97\n[#37]: https://github.com/rstacruz/jquery.transit/issues/37\n[#84]: https://github.com/rstacruz/jquery.transit/issues/84\n[#44]: https://github.com/rstacruz/jquery.transit/issues/44\n[#50]: https://github.com/rstacruz/jquery.transit/issues/50\n[#21]: https://github.com/rstacruz/jquery.transit/issues/21\n[#20]: https://github.com/rstacruz/jquery.transit/issues/20\n[#19]: https://github.com/rstacruz/jquery.transit/issues/19\n[#15]: https://github.com/rstacruz/jquery.transit/issues/15\n[#19]: https://github.com/rstacruz/jquery.transit/issues/19\n[#12]: https://github.com/rstacruz/jquery.transit/issues/12\n[#8]: https://github.com/rstacruz/jquery.transit/issues/8\n[#9]: https://github.com/rstacruz/jquery.transit/issues/9\n[#10]: https://github.com/rstacruz/jquery.transit/issues/10\n[#9]: https://github.com/rstacruz/jquery.transit/issues/9\n[#10]: https://github.com/rstacruz/jquery.transit/issues/10\n[#13]: https://github.com/rstacruz/jquery.transit/issues/13\n[#14]: https://github.com/rstacruz/jquery.transit/issues/14\n[#11]: https://github.com/rstacruz/jquery.transit/issues/11\n[#6]: https://github.com/rstacruz/jquery.transit/issues/6\n[@YousefED]: https://github.com/YousefED\n[@wambotron]: https://github.com/wambotron\n[@YousefED]: https://github.com/YousefED\n[@Bongo]: https://github.com/Bongo\n[@francismakes]: https://github.com/francismakes\n[@emagnier]: https://github.com/emagnier\n[@willblackmore]: https://github.com/willblackmore\n[@hankhero]: https://github.com/hankhero\n[@ppcano]: https://github.com/ppcano\n[@jeduan]: https://github.com/jeduan\n[@steckel]: https://github.com/steckel\n[@weotch]: https://github.com/weotch\n"
        },
        {
          "name": "NOTES.md",
          "type": "blob",
          "size": 0.7470703125,
          "content": "Developer notes\n===============\n\nTesting:\n\n    open test/index.html\n\nMaking a new release:\n\n    vim HISTORY.md       # update changelog\n    bump *.json *.js     # update version number\n    npm publish          # release to npm\n    git release v1.0.0   # release to github/bower\n    cd site && make      # update the site\n\nManaging the site\n-----------------\n\nMake `site/`:\n\n    git clone git@github.com:rstacruz/jquery.transit.git -b gh-pages ./site\n\nUpdate:\n\n    cd site\n    make update   # update from files\n    make          # update the site\n    make dist     # make dist/ files (uh, should be deprecated)\n\nv1.0.0 to do\n------------\n\n * .transitionStop()\n * use transitionend by default (#184)\n * Update bootstrap compatibility (#143, #67)\n * Redesign the site\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6787109375,
          "content": "# [jQuery Transit](http://ricostacruz.com/jquery.transit)\n#### Super-smooth CSS3 transformations and transitions for jQuery\n\njQuery Transit is a plugin for to help you do CSS transformations and \ntransitions in jQuery.\n\nRefer to the [jQuery Transit website](http://ricostacruz.com/jquery.transit) for \nexamples.\n\nUsage\n-----\n\nJust include [jquery.transit.js] after jQuery. Requires jQuery 1.4+.\n\n``` html\n<script src='jquery.js'></script>\n<script src='jquery.transit.js'></script>\n```\n\nIt is also available via [bower] and [npm].\n\n    $ bower install --save jquery.transit\n    $ npm install --save jquery.transit\n\n[bower]: http://bower.io/search/?q=jquery.transit\n[npm]: http://npmjs.org/package/jquery.transit\n[jquery.transit.js]: https://github.com/rstacruz/jquery.transit/blob/master/jquery.transit.js\n\nTransformations\n---------------\n\nYou can set transformations as you would any CSS property in jQuery.\n(Note that you cannot `$.fn.animate()` them, only set them.)\n\n``` javascript\n$(\"#box\").css({ x: '30px' });               // Move right\n$(\"#box\").css({ y: '60px' });               // Move down\n$(\"#box\").css({ translate: [60,30] });      // Move right and down\n$(\"#box\").css({ rotate: '30deg' });         // Rotate clockwise\n$(\"#box\").css({ scale: 2 });                // Scale up 2x (200%)\n$(\"#box\").css({ scale: [2, 1.5] });         // Scale horiz and vertical\n$(\"#box\").css({ skewX: '30deg' });          // Skew horizontally\n$(\"#box\").css({ skewY: '30deg' });          // Skew vertical\n$(\"#box\").css({ perspective: 100, rotateX: 30 }); // Webkit 3d rotation\n$(\"#box\").css({ rotateY: 30 });\n$(\"#box\").css({ rotate3d: [1, 1, 0, 45] });\n```\n\nRelative values are supported.\n\n``` javascript\n$(\"#box\").css({ rotate: '+=30' });          // 30 degrees more\n$(\"#box\").css({ rotate: '-=30' });          // 30 degrees less\n```\n\nAll units are optional.\n\n``` javascript\n$(\"#box\").css({ x: '30px' });\n$(\"#box\").css({ x: 30 });\n```\n\nMultiple arguments can be commas or an array.\n\n``` javascript\n$(\"#box\").css({ translate: [60,30] });\n$(\"#box\").css({ translate: ['60px','30px'] });\n$(\"#box\").css({ translate: '60px,30px' });\n```\n\nGetters are supported. (Getting properties with multiple arguments returns\narrays.)\n\n``` javascript\n$(\"#box\").css('rotate');     //=> \"30deg\"\n$(\"#box\").css('translate');  //=> ['60px', '30px']\n```\n\nAnimating - `$.fn.transition`\n-----------------------------\n\n    $('...').transition(options, [duration], [easing], [complete])\n\nYou can animate with CSS3 transitions using `$.fn.transition()`. It works \nexactly like `$.fn.animate()`, except it uses CSS3 transitions.\n\n``` javascript\n$(\"#box\").transition({ opacity: 0.1, scale: 0.3 });\n$(\"#box\").transition({ opacity: 0.1, scale: 0.3 }, 500);                         // duration\n$(\"#box\").transition({ opacity: 0.1, scale: 0.3 }, 'fast');                      // easing\n$(\"#box\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in');                   // duration+easing\n$(\"#box\").transition({ opacity: 0.1, scale: 0.3 }, function() {..});             // callback\n$(\"#box\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in', function() {..});  // everything\n```\n\nYou can also pass *duration* and *easing* and *complete* as values in `options`, just like in `$.fn.animate()`.\n\n``` javascript\n$(\"#box\").transition({\n  opacity: 0.1, scale: 0.3,\n  duration: 500,\n  easing: 'in',\n  complete: function() { /* ... */ }\n});\n```\n\nTests\n-----\n\nTransit has a unique test suite. Open `test/index.html` to see it. When \ncontibuting fixes, be sure to test this out with different jQuery versions and \ndifferent browsers.\n\nAlternatives\n------------\n\n__[Velocity.js](https://velocityjs.org)__ (recommended!)\n\n * Pros: optimized for situations with hundreds of simultaneous transitions. Lots of extra features.\n\n__[Move.js](https://github.com/visionmedia/move.js)__\n\n * Pros: no jQuery dependency, great syntax.\n * Cons (at time of writing): no iOS support (doesn't use `translate3d`), some\n   IE bugs, no 3D transforms, no animation queue.\n\n__[jQuery animate \nenhanced](https://github.com/benbarnett/jQuery-Animate-Enhanced)__\n\n* Pros: transparently overrides `$.fn.animate()` to provide CSS transitions \n  support.\n* Cons: transparently overrides `$.fn.animate()`. No transformations support.\n\n__[jQuery 2D transformations](https://github.com/heygrady/transform/)__\n\n* Pros: Tons of transformations.\n* Cons: No CSS transition support; animates via `fx.step`.\n\n__[jQuery CSS3 rotate](http://plugins.jquery.com/project/Rotate)__\n\n* Pros: simply provides rotation.\n* Cons: simply provides rotation. No transitions support.\n\nSupport\n-------\n\n__Bugs and requests__: submit them through the project's issues tracker.<br>\n[![Issues](http://img.shields.io/github/issues/rstacruz/jquery.transit.svg)]( https://github.com/rstacruz/jquery.transit/issues )\n\n__Questions__: ask them at StackOverflow with the tag *jquery-transit*.<br>\n[![StackOverflow](http://img.shields.io/badge/stackoverflow-jquery--transit-brightgreen.svg)]( http://stackoverflow.com/questions/tagged/jquery-transit )\n\n__Chat__: join us at gitter.im.<br>\n[![Chat](http://img.shields.io/badge/gitter-rstacruz / jquery.transit-brightgreen.svg)]( https://gitter.im/rstacruz/jquery.transit )\n\nThanks\n------\n\n**jQuery Transit** © 2011-2014+, Rico Sta. Cruz. Released under the [MIT License].<br>\nAuthored and maintained by Rico Sta. Cruz with help from [contributors].\n\n> [ricostacruz.com](http://ricostacruz.com) &nbsp;&middot;&nbsp;\n> GitHub [@rstacruz](https://github.com/rstacruz) &nbsp;&middot;&nbsp;\n> Twitter [@rstacruz](https://twitter.com/rstacruz)\n\n[MIT License]: http://mit-license.org/\n[contributors]: http://github.com/rstacruz/jquery.transit/contributors\n\n[![npm version](https://img.shields.io/npm/v/jquery.transit.png)](https://npmjs.org/package/jquery.transit \"View this project on npm\")\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.3408203125,
          "content": "{\n  \"name\": \"jquery.transit\",\n  \"repo\": \"rstacruz/jquery.transit\",\n  \"description\": \"Smooth CSS3 transitions and transformations for jQuery.\",\n  \"version\": \"0.9.12\",\n  \"keywords\": [\n    \"css3\",\n    \"animation\",\n    \"transition\"\n  ],\n  \"dependencies\": {\n    \"jquery\": \"*\"\n  },\n  \"development\": {},\n  \"license\": \"MIT\",\n  \"main\": \"jquery.transit.js\"\n}\n"
        },
        {
          "name": "component.json",
          "type": "blob",
          "size": 0.36328125,
          "content": "{\n  \"name\": \"jquery.transit\",\n  \"repo\": \"rstacruz/jquery.transit\",\n  \"description\": \"Smooth CSS3 transitions and transformations for jQuery.\",\n  \"version\": \"0.9.12\",\n  \"keywords\": [\n    \"css3\",\n    \"animation\",\n    \"transition\"\n  ],\n  \"dependencies\": {\n    \"component/jquery\": \"*\"\n  },\n  \"development\": {},\n  \"license\": \"MIT\",\n  \"scripts\": [\n    \"jquery.transit.js\"\n  ]\n}\n"
        },
        {
          "name": "jquery.transit.js",
          "type": "blob",
          "size": 21.8017578125,
          "content": "/*!\n * jQuery Transit - CSS3 transitions and transformations\n * (c) 2011-2014 Rico Sta. Cruz\n * MIT Licensed.\n *\n * http://ricostacruz.com/jquery.transit\n * http://github.com/rstacruz/jquery.transit\n */\n\n/* jshint expr: true */\n\n;(function (root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n\n}(this, function($) {\n\n  $.transit = {\n    version: \"0.9.12\",\n\n    // Map of $.css() keys to values for 'transitionProperty'.\n    // See https://developer.mozilla.org/en/CSS/CSS_transitions#Properties_that_can_be_animated\n    propertyMap: {\n      marginLeft    : 'margin',\n      marginRight   : 'margin',\n      marginBottom  : 'margin',\n      marginTop     : 'margin',\n      paddingLeft   : 'padding',\n      paddingRight  : 'padding',\n      paddingBottom : 'padding',\n      paddingTop    : 'padding'\n    },\n\n    // Will simply transition \"instantly\" if false\n    enabled: true,\n\n    // Set this to false if you don't want to use the transition end property.\n    useTransitionEnd: false\n  };\n\n  var div = document.createElement('div');\n  var support = {};\n\n  // Helper function to get the proper vendor property name.\n  // (`transition` => `WebkitTransition`)\n  function getVendorPropertyName(prop) {\n    // Handle unprefixed versions (FF16+, for example)\n    if (prop in div.style) return prop;\n\n    var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n    var prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (var i=0; i<prefixes.length; ++i) {\n      var vendorProp = prefixes[i] + prop_;\n      if (vendorProp in div.style) { return vendorProp; }\n    }\n  }\n\n  // Helper function to check if transform3D is supported.\n  // Should return true for Webkits and Firefox 10+.\n  function checkTransform3dSupport() {\n    div.style[support.transform] = '';\n    div.style[support.transform] = 'rotateY(90deg)';\n    return div.style[support.transform] !== '';\n  }\n\n  var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  // Check for the browser's transitions support.\n  support.transition      = getVendorPropertyName('transition');\n  support.transitionDelay = getVendorPropertyName('transitionDelay');\n  support.transform       = getVendorPropertyName('transform');\n  support.transformOrigin = getVendorPropertyName('transformOrigin');\n  support.filter          = getVendorPropertyName('Filter');\n  support.transform3d     = checkTransform3dSupport();\n\n  var eventNames = {\n    'transition':       'transitionend',\n    'MozTransition':    'transitionend',\n    'OTransition':      'oTransitionEnd',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'msTransition':     'MSTransitionEnd'\n  };\n\n  // Detect the 'transitionend' event needed.\n  var transitionEnd = support.transitionEnd = eventNames[support.transition] || null;\n\n  // Populate jQuery's `$.support` with the vendor prefixes we know.\n  // As per [jQuery's cssHooks documentation](http://api.jquery.com/jQuery.cssHooks/),\n  // we set $.support.transition to a string of the actual property name used.\n  for (var key in support) {\n    if (support.hasOwnProperty(key) && typeof $.support[key] === 'undefined') {\n      $.support[key] = support[key];\n    }\n  }\n\n  // Avoid memory leak in IE.\n  div = null;\n\n  // ## $.cssEase\n  // List of easing aliases that you can use with `$.fn.transition`.\n  $.cssEase = {\n    '_default':       'ease',\n    'in':             'ease-in',\n    'out':            'ease-out',\n    'in-out':         'ease-in-out',\n    'snap':           'cubic-bezier(0,1,.5,1)',\n    // Penner equations\n    'easeInCubic':    'cubic-bezier(.550,.055,.675,.190)',\n    'easeOutCubic':   'cubic-bezier(.215,.61,.355,1)',\n    'easeInOutCubic': 'cubic-bezier(.645,.045,.355,1)',\n    'easeInCirc':     'cubic-bezier(.6,.04,.98,.335)',\n    'easeOutCirc':    'cubic-bezier(.075,.82,.165,1)',\n    'easeInOutCirc':  'cubic-bezier(.785,.135,.15,.86)',\n    'easeInExpo':     'cubic-bezier(.95,.05,.795,.035)',\n    'easeOutExpo':    'cubic-bezier(.19,1,.22,1)',\n    'easeInOutExpo':  'cubic-bezier(1,0,0,1)',\n    'easeInQuad':     'cubic-bezier(.55,.085,.68,.53)',\n    'easeOutQuad':    'cubic-bezier(.25,.46,.45,.94)',\n    'easeInOutQuad':  'cubic-bezier(.455,.03,.515,.955)',\n    'easeInQuart':    'cubic-bezier(.895,.03,.685,.22)',\n    'easeOutQuart':   'cubic-bezier(.165,.84,.44,1)',\n    'easeInOutQuart': 'cubic-bezier(.77,0,.175,1)',\n    'easeInQuint':    'cubic-bezier(.755,.05,.855,.06)',\n    'easeOutQuint':   'cubic-bezier(.23,1,.32,1)',\n    'easeInOutQuint': 'cubic-bezier(.86,0,.07,1)',\n    'easeInSine':     'cubic-bezier(.47,0,.745,.715)',\n    'easeOutSine':    'cubic-bezier(.39,.575,.565,1)',\n    'easeInOutSine':  'cubic-bezier(.445,.05,.55,.95)',\n    'easeInBack':     'cubic-bezier(.6,-.28,.735,.045)',\n    'easeOutBack':    'cubic-bezier(.175, .885,.32,1.275)',\n    'easeInOutBack':  'cubic-bezier(.68,-.55,.265,1.55)'\n  };\n\n  // ## 'transform' CSS hook\n  // Allows you to use the `transform` property in CSS.\n  //\n  //     $(\"#hello\").css({ transform: \"rotate(90deg)\" });\n  //\n  //     $(\"#hello\").css('transform');\n  //     //=> { rotate: '90deg' }\n  //\n  $.cssHooks['transit:transform'] = {\n    // The getter returns a `Transform` object.\n    get: function(elem) {\n      return $(elem).data('transform') || new Transform();\n    },\n\n    // The setter accepts a `Transform` object or a string.\n    set: function(elem, v) {\n      var value = v;\n\n      if (!(value instanceof Transform)) {\n        value = new Transform(value);\n      }\n\n      // We've seen the 3D version of Scale() not work in Chrome when the\n      // element being scaled extends outside of the viewport.  Thus, we're\n      // forcing Chrome to not use the 3d transforms as well.  Not sure if\n      // translate is affectede, but not risking it.  Detection code from\n      // http://davidwalsh.name/detecting-google-chrome-javascript\n      if (support.transform === 'WebkitTransform' && !isChrome) {\n        elem.style[support.transform] = value.toString(true);\n      } else {\n        elem.style[support.transform] = value.toString();\n      }\n\n      $(elem).data('transform', value);\n    }\n  };\n\n  // Add a CSS hook for `.css({ transform: '...' })`.\n  // In jQuery 1.8+, this will intentionally override the default `transform`\n  // CSS hook so it'll play well with Transit. (see issue #62)\n  $.cssHooks.transform = {\n    set: $.cssHooks['transit:transform'].set\n  };\n\n  // ## 'filter' CSS hook\n  // Allows you to use the `filter` property in CSS.\n  //\n  //     $(\"#hello\").css({ filter: 'blur(10px)' });\n  //\n  $.cssHooks.filter = {\n    get: function(elem) {\n      return elem.style[support.filter];\n    },\n    set: function(elem, value) {\n      elem.style[support.filter] = value;\n    }\n  };\n\n  // jQuery 1.8+ supports prefix-free transitions, so these polyfills will not\n  // be necessary.\n  if ($.fn.jquery < \"1.8\") {\n    // ## 'transformOrigin' CSS hook\n    // Allows the use for `transformOrigin` to define where scaling and rotation\n    // is pivoted.\n    //\n    //     $(\"#hello\").css({ transformOrigin: '0 0' });\n    //\n    $.cssHooks.transformOrigin = {\n      get: function(elem) {\n        return elem.style[support.transformOrigin];\n      },\n      set: function(elem, value) {\n        elem.style[support.transformOrigin] = value;\n      }\n    };\n\n    // ## 'transition' CSS hook\n    // Allows you to use the `transition` property in CSS.\n    //\n    //     $(\"#hello\").css({ transition: 'all 0 ease 0' });\n    //\n    $.cssHooks.transition = {\n      get: function(elem) {\n        return elem.style[support.transition];\n      },\n      set: function(elem, value) {\n        elem.style[support.transition] = value;\n      }\n    };\n  }\n\n  // ## Other CSS hooks\n  // Allows you to rotate, scale and translate.\n  registerCssHook('scale');\n  registerCssHook('scaleX');\n  registerCssHook('scaleY');\n  registerCssHook('translate');\n  registerCssHook('rotate');\n  registerCssHook('rotateX');\n  registerCssHook('rotateY');\n  registerCssHook('rotate3d');\n  registerCssHook('perspective');\n  registerCssHook('skewX');\n  registerCssHook('skewY');\n  registerCssHook('x', true);\n  registerCssHook('y', true);\n\n  // ## Transform class\n  // This is the main class of a transformation property that powers\n  // `$.fn.css({ transform: '...' })`.\n  //\n  // This is, in essence, a dictionary object with key/values as `-transform`\n  // properties.\n  //\n  //     var t = new Transform(\"rotate(90) scale(4)\");\n  //\n  //     t.rotate             //=> \"90deg\"\n  //     t.scale              //=> \"4,4\"\n  //\n  // Setters are accounted for.\n  //\n  //     t.set('rotate', 4)\n  //     t.rotate             //=> \"4deg\"\n  //\n  // Convert it to a CSS string using the `toString()` and `toString(true)` (for WebKit)\n  // functions.\n  //\n  //     t.toString()         //=> \"rotate(90deg) scale(4,4)\"\n  //     t.toString(true)     //=> \"rotate(90deg) scale3d(4,4,0)\" (WebKit version)\n  //\n  function Transform(str) {\n    if (typeof str === 'string') { this.parse(str); }\n    return this;\n  }\n\n  Transform.prototype = {\n    // ### setFromString()\n    // Sets a property from a string.\n    //\n    //     t.setFromString('scale', '2,4');\n    //     // Same as set('scale', '2', '4');\n    //\n    setFromString: function(prop, val) {\n      var args =\n        (typeof val === 'string')  ? val.split(',') :\n        (val.constructor === Array) ? val :\n        [ val ];\n\n      args.unshift(prop);\n\n      Transform.prototype.set.apply(this, args);\n    },\n\n    // ### set()\n    // Sets a property.\n    //\n    //     t.set('scale', 2, 4);\n    //\n    set: function(prop) {\n      var args = Array.prototype.slice.apply(arguments, [1]);\n      if (this.setter[prop]) {\n        this.setter[prop].apply(this, args);\n      } else {\n        this[prop] = args.join(',');\n      }\n    },\n\n    get: function(prop) {\n      if (this.getter[prop]) {\n        return this.getter[prop].apply(this);\n      } else {\n        return this[prop] || 0;\n      }\n    },\n\n    setter: {\n      // ### rotate\n      //\n      //     .css({ rotate: 30 })\n      //     .css({ rotate: \"30\" })\n      //     .css({ rotate: \"30deg\" })\n      //     .css({ rotate: \"30deg\" })\n      //\n      rotate: function(theta) {\n        this.rotate = unit(theta, 'deg');\n      },\n\n      rotateX: function(theta) {\n        this.rotateX = unit(theta, 'deg');\n      },\n\n      rotateY: function(theta) {\n        this.rotateY = unit(theta, 'deg');\n      },\n\n      // ### scale\n      //\n      //     .css({ scale: 9 })      //=> \"scale(9,9)\"\n      //     .css({ scale: '3,2' })  //=> \"scale(3,2)\"\n      //\n      scale: function(x, y) {\n        if (y === undefined) { y = x; }\n        this.scale = x + \",\" + y;\n      },\n\n      // ### skewX + skewY\n      skewX: function(x) {\n        this.skewX = unit(x, 'deg');\n      },\n\n      skewY: function(y) {\n        this.skewY = unit(y, 'deg');\n      },\n\n      // ### perspectvie\n      perspective: function(dist) {\n        this.perspective = unit(dist, 'px');\n      },\n\n      // ### x / y\n      // Translations. Notice how this keeps the other value.\n      //\n      //     .css({ x: 4 })       //=> \"translate(4px, 0)\"\n      //     .css({ y: 10 })      //=> \"translate(4px, 10px)\"\n      //\n      x: function(x) {\n        this.set('translate', x, null);\n      },\n\n      y: function(y) {\n        this.set('translate', null, y);\n      },\n\n      // ### translate\n      // Notice how this keeps the other value.\n      //\n      //     .css({ translate: '2, 5' })    //=> \"translate(2px, 5px)\"\n      //\n      translate: function(x, y) {\n        if (this._translateX === undefined) { this._translateX = 0; }\n        if (this._translateY === undefined) { this._translateY = 0; }\n\n        if (x !== null && x !== undefined) { this._translateX = unit(x, 'px'); }\n        if (y !== null && y !== undefined) { this._translateY = unit(y, 'px'); }\n\n        this.translate = this._translateX + \",\" + this._translateY;\n      }\n    },\n\n    getter: {\n      x: function() {\n        return this._translateX || 0;\n      },\n\n      y: function() {\n        return this._translateY || 0;\n      },\n\n      scale: function() {\n        var s = (this.scale || \"1,1\").split(',');\n        if (s[0]) { s[0] = parseFloat(s[0]); }\n        if (s[1]) { s[1] = parseFloat(s[1]); }\n\n        // \"2.5,2.5\" => 2.5\n        // \"2.5,1\" => [2.5,1]\n        return (s[0] === s[1]) ? s[0] : s;\n      },\n\n      rotate3d: function() {\n        var s = (this.rotate3d || \"0,0,0,0deg\").split(',');\n        for (var i=0; i<=3; ++i) {\n          if (s[i]) { s[i] = parseFloat(s[i]); }\n        }\n        if (s[3]) { s[3] = unit(s[3], 'deg'); }\n\n        return s;\n      }\n    },\n\n    // ### parse()\n    // Parses from a string. Called on constructor.\n    parse: function(str) {\n      var self = this;\n      str.replace(/([a-zA-Z0-9]+)\\((.*?)\\)/g, function(x, prop, val) {\n        self.setFromString(prop, val);\n      });\n    },\n\n    // ### toString()\n    // Converts to a `transition` CSS property string. If `use3d` is given,\n    // it converts to a `-webkit-transition` CSS property string instead.\n    toString: function(use3d) {\n      var re = [];\n\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          // Don't use 3D transformations if the browser can't support it.\n          if ((!support.transform3d) && (\n            (i === 'rotateX') ||\n            (i === 'rotateY') ||\n            (i === 'perspective') ||\n            (i === 'transformOrigin'))) { continue; }\n\n          if (i[0] !== '_') {\n            if (use3d && (i === 'scale')) {\n              re.push(i + \"3d(\" + this[i] + \",1)\");\n            } else if (use3d && (i === 'translate')) {\n              re.push(i + \"3d(\" + this[i] + \",0)\");\n            } else {\n              re.push(i + \"(\" + this[i] + \")\");\n            }\n          }\n        }\n      }\n\n      return re.join(\" \");\n    }\n  };\n\n  function callOrQueue(self, queue, fn) {\n    if (queue === true) {\n      self.queue(fn);\n    } else if (queue) {\n      self.queue(queue, fn);\n    } else {\n      self.each(function () {\n                fn.call(this);\n            });\n    }\n  }\n\n  // ### getProperties(dict)\n  // Returns properties (for `transition-property`) for dictionary `props`. The\n  // value of `props` is what you would expect in `$.css(...)`.\n  function getProperties(props) {\n    var re = [];\n\n    $.each(props, function(key) {\n      key = $.camelCase(key); // Convert \"text-align\" => \"textAlign\"\n      key = $.transit.propertyMap[key] || $.cssProps[key] || key;\n      key = uncamel(key); // Convert back to dasherized\n\n      // Get vendor specify propertie\n      if (support[key])\n        key = uncamel(support[key]);\n\n      if ($.inArray(key, re) === -1) { re.push(key); }\n    });\n\n    return re;\n  }\n\n  // ### getTransition()\n  // Returns the transition string to be used for the `transition` CSS property.\n  //\n  // Example:\n  //\n  //     getTransition({ opacity: 1, rotate: 30 }, 500, 'ease');\n  //     //=> 'opacity 500ms ease, -webkit-transform 500ms ease'\n  //\n  function getTransition(properties, duration, easing, delay) {\n    // Get the CSS properties needed.\n    var props = getProperties(properties);\n\n    // Account for aliases (`in` => `ease-in`).\n    if ($.cssEase[easing]) { easing = $.cssEase[easing]; }\n\n    // Build the duration/easing/delay attributes for it.\n    var attribs = '' + toMS(duration) + ' ' + easing;\n    if (parseInt(delay, 10) > 0) { attribs += ' ' + toMS(delay); }\n\n    // For more properties, add them this way:\n    // \"margin 200ms ease, padding 200ms ease, ...\"\n    var transitions = [];\n    $.each(props, function(i, name) {\n      transitions.push(name + ' ' + attribs);\n    });\n\n    return transitions.join(', ');\n  }\n\n  // ## $.fn.transition\n  // Works like $.fn.animate(), but uses CSS transitions.\n  //\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 });\n  //\n  //     // Specific duration\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500);\n  //\n  //     // With duration and easing\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in');\n  //\n  //     // With callback\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, function() { ... });\n  //\n  //     // With everything\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in', function() { ... });\n  //\n  //     // Alternate syntax\n  //     $(\"...\").transition({\n  //       opacity: 0.1,\n  //       duration: 200,\n  //       delay: 40,\n  //       easing: 'in',\n  //       complete: function() { /* ... */ }\n  //      });\n  //\n  $.fn.transition = $.fn.transit = function(properties, duration, easing, callback) {\n    var self  = this;\n    var delay = 0;\n    var queue = true;\n\n    var theseProperties = $.extend(true, {}, properties);\n\n    // Account for `.transition(properties, callback)`.\n    if (typeof duration === 'function') {\n      callback = duration;\n      duration = undefined;\n    }\n\n    // Account for `.transition(properties, options)`.\n    if (typeof duration === 'object') {\n      easing = duration.easing;\n      delay = duration.delay || 0;\n      queue = typeof duration.queue === \"undefined\" ? true : duration.queue;\n      callback = duration.complete;\n      duration = duration.duration;\n    }\n\n    // Account for `.transition(properties, duration, callback)`.\n    if (typeof easing === 'function') {\n      callback = easing;\n      easing = undefined;\n    }\n\n    // Alternate syntax.\n    if (typeof theseProperties.easing !== 'undefined') {\n      easing = theseProperties.easing;\n      delete theseProperties.easing;\n    }\n\n    if (typeof theseProperties.duration !== 'undefined') {\n      duration = theseProperties.duration;\n      delete theseProperties.duration;\n    }\n\n    if (typeof theseProperties.complete !== 'undefined') {\n      callback = theseProperties.complete;\n      delete theseProperties.complete;\n    }\n\n    if (typeof theseProperties.queue !== 'undefined') {\n      queue = theseProperties.queue;\n      delete theseProperties.queue;\n    }\n\n    if (typeof theseProperties.delay !== 'undefined') {\n      delay = theseProperties.delay;\n      delete theseProperties.delay;\n    }\n\n    // Set defaults. (`400` duration, `ease` easing)\n    if (typeof duration === 'undefined') { duration = $.fx.speeds._default; }\n    if (typeof easing === 'undefined')   { easing = $.cssEase._default; }\n\n    duration = toMS(duration);\n\n    // Build the `transition` property.\n    var transitionValue = getTransition(theseProperties, duration, easing, delay);\n\n    // Compute delay until callback.\n    // If this becomes 0, don't bother setting the transition property.\n    var work = $.transit.enabled && support.transition;\n    var i = work ? (parseInt(duration, 10) + parseInt(delay, 10)) : 0;\n\n    // If there's nothing to do...\n    if (i === 0) {\n      var fn = function(next) {\n        self.css(theseProperties);\n        if (callback) { callback.apply(self); }\n        if (next) { next(); }\n      };\n\n      callOrQueue(self, queue, fn);\n      return self;\n    }\n\n    // Save the old transitions of each element so we can restore it later.\n    var oldTransitions = {};\n\n    var run = function(nextCall) {\n      var bound = false;\n\n      // Prepare the callback.\n      var cb = function() {\n        if (bound) { self.unbind(transitionEnd, cb); }\n\n        if (i > 0) {\n          self.each(function() {\n            this.style[support.transition] = (oldTransitions[this] || null);\n          });\n        }\n\n        if (typeof callback === 'function') { callback.apply(self); }\n        if (typeof nextCall === 'function') { nextCall(); }\n      };\n\n      if ((i > 0) && (transitionEnd) && ($.transit.useTransitionEnd)) {\n        // Use the 'transitionend' event if it's available.\n        bound = true;\n        self.bind(transitionEnd, cb);\n      } else {\n        // Fallback to timers if the 'transitionend' event isn't supported.\n        window.setTimeout(cb, i);\n      }\n\n      // Apply transitions.\n      self.each(function() {\n        if (i > 0) {\n          this.style[support.transition] = transitionValue;\n        }\n        $(this).css(theseProperties);\n      });\n    };\n\n    // Defer running. This allows the browser to paint any pending CSS it hasn't\n    // painted yet before doing the transitions.\n    var deferredRun = function(next) {\n        this.offsetWidth = this.offsetWidth; // force a repaint\n        run(next);\n    };\n\n    // Use jQuery's fx queue.\n    callOrQueue(self, queue, deferredRun);\n\n    // Chainability.\n    return this;\n  };\n\n  function registerCssHook(prop, isPixels) {\n    // For certain properties, the 'px' should not be implied.\n    if (!isPixels) { $.cssNumber[prop] = true; }\n\n    $.transit.propertyMap[prop] = support.transform;\n\n    $.cssHooks[prop] = {\n      get: function(elem) {\n        var t = $(elem).css('transit:transform');\n        return t.get(prop);\n      },\n\n      set: function(elem, value) {\n        var t = $(elem).css('transit:transform');\n        t.setFromString(prop, value);\n\n        $(elem).css({ 'transit:transform': t });\n      }\n    };\n\n  }\n\n  // ### uncamel(str)\n  // Converts a camelcase string to a dasherized string.\n  // (`marginLeft` => `margin-left`)\n  function uncamel(str) {\n    return str.replace(/([A-Z])/g, function(letter) { return '-' + letter.toLowerCase(); });\n  }\n\n  // ### unit(number, unit)\n  // Ensures that number `number` has a unit. If no unit is found, assume the\n  // default is `unit`.\n  //\n  //     unit(2, 'px')          //=> \"2px\"\n  //     unit(\"30deg\", 'rad')   //=> \"30deg\"\n  //\n  function unit(i, units) {\n    if ((typeof i === \"string\") && (!i.match(/^[\\-0-9\\.]+$/))) {\n      return i;\n    } else {\n      return \"\" + i + units;\n    }\n  }\n\n  // ### toMS(duration)\n  // Converts given `duration` to a millisecond string.\n  //\n  // toMS('fast') => $.fx.speeds[i] => \"200ms\"\n  // toMS('normal') //=> $.fx.speeds._default => \"400ms\"\n  // toMS(10) //=> '10ms'\n  // toMS('100ms') //=> '100ms'  \n  //\n  function toMS(duration) {\n    var i = duration;\n\n    // Allow string durations like 'fast' and 'slow', without overriding numeric values.\n    if (typeof i === 'string' && (!i.match(/^[\\-0-9\\.]+/))) { i = $.fx.speeds[i] || $.fx.speeds._default; }\n\n    return unit(i, 'ms');\n  }\n\n  // Export some functions for testable-ness.\n  $.transit.getTransitionValue = getTransition;\n\n  return $;\n}));\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.76953125,
          "content": "{\n  \"name\": \"jquery.transit\",\n  \"version\": \"0.9.12\",\n  \"description\": \"Smooth CSS3 transitions and transformations for jQuery.\",\n  \"main\": \"jquery.transit.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/rstacruz/jquery.transit.git\"\n  },\n  \"keywords\": [\n    \"css3\",\n    \"animation\",\n    \"transition\"\n  ],\n  \"author\": \"Rico Sta. Cruz <hi@ricostacruz.com>\",\n  \"license\": \"MIT\",\n  \"peerDependencies\": {\n    \"jquery\": \"*\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"1.9.1\",\n    \"sinon\": \"1.10.2\",\n    \"jsdom\": \"0.11.0\",\n    \"coffee-script\": \"1.7.1\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/rstacruz/jquery.transit/issues\"\n  },\n  \"homepage\": \"http://ricostacruz.com/jquery.transit\"\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}