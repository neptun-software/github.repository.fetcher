{
  "metadata": {
    "timestamp": 1736562943519,
    "page": 546,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "robinvdvleuten/vuex-persistedstate",
      "stars": 5755,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 9.1103515625,
          "content": "{\n  \"projectName\": \"vuex-persistedstate\",\n  \"projectOwner\": \"robinvdvleuten\",\n  \"repoType\": \"github\",\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": true,\n  \"contributors\": [\n    {\n      \"login\": \"robinvdvleuten\",\n      \"name\": \"Robin van der Vleuten\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/238295?v=4\",\n      \"profile\": \"https://robinvdvleuten.nl\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"infra\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"zweizeichen\",\n      \"name\": \"Sebastian\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/654071?v=4\",\n      \"profile\": \"https://github.com/zweizeichen\",\n      \"contributions\": [\n        \"code\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"boris-graeff\",\n      \"name\": \"Boris Graeff\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/3204379?v=4\",\n      \"profile\": \"https://github.com/boris-graeff\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ciceropablo\",\n      \"name\": \"Cícero Pablo\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/174275?v=4\",\n      \"profile\": \"http://ciceropablo.github.io\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"gurpreetatwal\",\n      \"name\": \"Gurpreet Atwal\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/7547554?v=4\",\n      \"profile\": \"https://gatwal.com\",\n      \"contributions\": [\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"JakubKoralewski\",\n      \"name\": \"Jakub Koralewski\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/43069023?v=4\",\n      \"profile\": \"https://jcubed.me\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"jankeesvw\",\n      \"name\": \"Jankees van Woezik\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/167882?v=4\",\n      \"profile\": \"http://jankeesvw.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"jofftiquez\",\n      \"name\": \"Jofferson Ramirez Tiquez\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/8638243?v=4\",\n      \"profile\": \"https://randomcodetips.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"DevoidCoding\",\n      \"name\": \"Jordan Deprez\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/21159634?v=4\",\n      \"profile\": \"https://github.com/DevoidCoding\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"juanvillegas\",\n      \"name\": \"Juan Villegas\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/773149?v=4\",\n      \"profile\": \"https://github.com/juanvillegas\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"jrast\",\n      \"name\": \"Jürg Rast\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/146369?v=4\",\n      \"profile\": \"http://jrast.ch\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"antixrist\",\n      \"name\": \"Kartashov Alexey\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/2387592?v=4\",\n      \"profile\": \"https://github.com/antixrist\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"leonardpauli\",\n      \"name\": \"Leonard Pauli\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/1329834?v=4\",\n      \"profile\": \"http://twitter.com/LeonardPauli\",\n      \"contributions\": [\n        \"code\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"nelsliu9121\",\n      \"name\": \"Nelson Liu\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/1268682?v=4\",\n      \"profile\": \"https://github.com/nelsliu9121\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"NLNicoo\",\n      \"name\": \"Nico\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/6526666?v=4\",\n      \"profile\": \"https://github.com/NLNicoo\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"qkdreyer\",\n      \"name\": \"Quentin Dreyer\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/717869?v=4\",\n      \"profile\": \"https://www.qkdreyer.dev\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"raphaelsaunier\",\n      \"name\": \"Raphael Saunier\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/170256?v=4\",\n      \"profile\": \"http://raphaelsaunier.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"rodneyrehm\",\n      \"name\": \"Rodney Rehm\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/186837?v=4\",\n      \"profile\": \"http://rodneyrehm.de\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"wongyouth\",\n      \"name\": \"Ryan Wang\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/944583?v=4\",\n      \"profile\": \"http://wongyouth.github.io\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"Atinux\",\n      \"name\": \"Sébastien Chopin\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/904724?v=4\",\n      \"profile\": \"https://atinux.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"zgayjjf\",\n      \"name\": \"jeffjing\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/24718872?v=4\",\n      \"profile\": \"https://github.com/zgayjjf\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"macarthuror\",\n      \"name\": \"macarthuror\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/24395219?v=4\",\n      \"profile\": \"https://github.com/macarthuror\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"gangsthub\",\n      \"name\": \"Paul Melero\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/6775220?s=460&v=4\",\n      \"profile\": \"https://github.com/gangsthub\",\n      \"contributions\": [\n        \"doc\",\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"WTDuck\",\n      \"name\": \"Guillaume da Silva\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/16686729?v=4\",\n      \"profile\": \"https://github.com/WTDuck\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"SanterreJo\",\n      \"name\": \"Jonathan Santerre\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/6465769?v=4\",\n      \"profile\": \"https://github.com/SanterreJo\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"fabiofdsantos\",\n      \"name\": \"Fábio Santos\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/8303937?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/fabiofdsantos/\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"robertgr991\",\n      \"name\": \"robertgr991\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/36689800?v=4\",\n      \"profile\": \"https://github.com/robertgr991\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"YuraKolesnikov\",\n      \"name\": \"JurijsKolesnikovs\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/28485518?v=4\",\n      \"profile\": \"https://github.com/YuraKolesnikov\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"davidsbond\",\n      \"name\": \"David Bond\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/6227720?v=4\",\n      \"profile\": \"https://davidsbond.github.io\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"FreekVR\",\n      \"name\": \"Freek van Rijt\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/417416?v=4\",\n      \"profile\": \"http://www.freekvanrijt.nl\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"yachaka\",\n      \"name\": \"Ilyes Hermellin\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/8074336?v=4\",\n      \"profile\": \"https://github.com/yachaka\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"peschee\",\n      \"name\": \"Peter Siska\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/63866?v=4\",\n      \"profile\": \"http://www.inventage.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"adm1t\",\n      \"name\": \"Dmitry Filippov\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/26100455?v=4\",\n      \"profile\": \"http://adm1t.github.io\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"retailify\",\n      \"name\": \"Thomas Meitz\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/5236353?v=4\",\n      \"profile\": \"https://retailify.de\",\n      \"contributions\": [\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"NeuronButter\",\n      \"name\": \"Neeron Bhatta\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/33238007?v=4\",\n      \"profile\": \"http://neeron.me\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"joaoaraujo-hotmart\",\n      \"name\": \"joaoaraujo-hotmart\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/15874735?v=4\",\n      \"profile\": \"https://github.com/joaoaraujo-hotmart\",\n      \"contributions\": [\n        \"code\"\n      ]\n    }\n  ],\n  \"contributorsPerLine\": 7,\n  \"commitConvention\": \"none\",\n  \"repoHost\": \"https://github.com\",\n  \"skipCi\": true\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1396484375,
          "content": "/*.log\n/.rts2_cache_*/\n/dist/\n/node_modules/\n\n# these cause more harm than good\n# when working with contributors\n/package-lock.json\n/yarn.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.2001953125,
          "content": "# Changelog\n\nThis project adheres to [Semantic Versioning](http://semver.org/).  \nEvery release is documented on the Github [Releases](https://github.com/robinvdvleuten/vuex-persistedstate/releases) page.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4580078125,
          "content": "# Contributing\n\nThanks for being willing to contribute!\n\n**Working on your first Pull Request?** You can learn how from this _free_\nseries [How to Contribute to an Open Source Project on GitHub][egghead]\n\n## Project setup\n\n1. Fork and clone the repo\n2. Run `npm install` to install dependencies.\n3. Create a branch for your PR with `git checkout -b your-branch-name`\n\n> Tip: Keep your `master` branch pointing at the original repository and make\n> pull requests from branches on your fork. To do this, run:\n>\n> ```\n> git remote add upstream https://github.com/robinvdvleuten/vuex-persistedstate.git\n> git fetch upstream\n> git branch --set-upstream-to=upstream/master master\n> ```\n>\n> This will add the original repository as a \"remote\" called \"upstream,\" Then\n> fetch the git information from that remote, then set your local `master`\n> branch to use the upstream master branch whenever you run `git pull`. Then you\n> can make all of your pull request branches based on this `master` branch.\n> Whenever you want to update your version of `master`, do a regular `git pull`.\n\n## Committing and Pushing changes\n\nPlease make sure to run the tests before you commit your changes.\n\n## Help needed\n\nPlease checkout the [the open issues][issues]\n\nAlso, please watch the repo and respond to questions/bug reports/feature\nrequests! Thanks!\n\n[egghead]: https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github\n[issues]: https://github.com/robinvdvleuten/vuex-persistedstate/issues\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0712890625,
          "content": "MIT License\n\nCopyright (c) Robin van der Vleuten <robin@webstronauts.co>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.1591796875,
          "content": "# vuex-persistedstate\n\nPersist and rehydrate your [Vuex](http://vuex.vuejs.org/) state between page reloads.\n\n<hr />\n\n> 🚨 Not maintained anymore! As I don't use Vue in my day to day work, it becomes very hard to stay up to date with any changes with things like Vuex, Nuxt.js and other tools used by the community. That's why I decided to stop spending my spare time to this repository. Feel free to reach out if you would like to take over ownership of the package on NPM. Thank you for any contribution any of you had made to this project 🙏.\n\n<hr />\n\n[![Build Status](https://img.shields.io/github/workflow/status/robinvdvleuten/vuex-persistedstate/test.svg)](https://github.com/robinvdvleuten/vuex-persistedstate/actions?query=workflow%3Atest)\n[![NPM version](https://img.shields.io/npm/v/vuex-persistedstate.svg)](https://www.npmjs.com/package/vuex-persistedstate)\n[![NPM downloads](https://img.shields.io/npm/dm/vuex-persistedstate.svg)](https://www.npmjs.com/package/vuex-persistedstate)\n[![Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/robinvdvleuten/vuex-persistedstate.svg)](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/LICENSE)\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n[![Code Of Conduct](https://img.shields.io/badge/code%20of-conduct-ff69b4.svg)](https://github.com/robinvdvleuten/vuex-persistedstate/blob/master/.github/CODE_OF_CONDUCT.md)\n\n<a href=\"https://webstronauts.com/\">\n    <img src=\"https://webstronauts.com/badges/sponsored-by-webstronauts.svg\" alt=\"Sponsored by The Webstronauts\" width=\"200\" height=\"65\">\n</a>\n\n## Install\n\n```bash\nnpm install --save vuex-persistedstate\n```\n\nThe [UMD](https://github.com/umdjs/umd) build is also available on [unpkg](https://unpkg.com):\n\n```html\n<script src=\"https://unpkg.com/vuex-persistedstate/dist/vuex-persistedstate.umd.js\"></script>\n```\n\nYou can find the library on `window.createPersistedState`.\n\n## Usage\n\n```js\nimport { createStore } from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\n\nconst store = createStore({\n  // ...\n  plugins: [createPersistedState()],\n});\n```\n\nFor usage with for Vuex 3 and Vue 2, please see [3.x.x branch](https://github.com/robinvdvleuten/vuex-persistedstate/tree/3.x.x).\n\n## Examples\n\nCheck out a basic example on [CodeSandbox](https://codesandbox.io).\n\n[![Edit vuex-persistedstate](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/80k4m2598)\n\nOr configured to use with [js-cookie](https://github.com/js-cookie/js-cookie).\n\n[![Edit vuex-persistedstate with js-cookie](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/xl356qvvkz)\n\nOr configured to use with [secure-ls](https://github.com/softvar/secure-ls)\n\n[![Edit vuex-persistedstate with secure-ls (encrypted data)](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/vuex-persistedstate-with-secure-ls-encrypted-data-7l9wb?fontsize=14)\n\n### Example with Vuex modules\n\nNew plugin instances can be created in separate files, but must be imported and added to plugins object in the main Vuex file.\n\n```js\n/* module.js */\nexport const dataStore = {\n  state: {\n    data: []\n  }\n}\n\n/* store.js */\nimport { dataStore } from './module'\n\nconst dataState = createPersistedState({\n  paths: ['data']\n})\n\nexport new Vuex.Store({\n  modules: {\n    dataStore\n  },\n  plugins: [dataState]\n})\n```\n\n### Example with Nuxt.js\n\nIt is possible to use vuex-persistedstate with Nuxt.js. It must be included as a NuxtJS plugin:\n\n#### With local storage (client-side only)\n\n```javascript\n// nuxt.config.js\n\n...\n/*\n * Naming your plugin 'xxx.client.js' will make it execute only on the client-side.\n * https://nuxtjs.org/guide/plugins/#name-conventional-plugin\n */\nplugins: [{ src: '~/plugins/persistedState.client.js' }]\n...\n```\n\n```javascript\n// ~/plugins/persistedState.client.js\n\nimport createPersistedState from 'vuex-persistedstate'\n\nexport default ({store}) => {\n  createPersistedState({\n    key: 'yourkey',\n    paths: [...]\n    ...\n  })(store)\n}\n```\n\n#### Using cookies (universal client + server-side)\n\nAdd `cookie` and `js-cookie`:\n\n`npm install --save cookie js-cookie`\nor `yarn add cookie js-cookie`\n\n```javascript\n// nuxt.config.js\n...\nplugins: [{ src: '~/plugins/persistedState.js'}]\n...\n```\n\n```javascript\n// ~/plugins/persistedState.js\n\nimport createPersistedState from 'vuex-persistedstate';\nimport * as Cookies from 'js-cookie';\nimport cookie from 'cookie';\n\nexport default ({ store, req }) => {\n    createPersistedState({\n        paths: [...],\n        storage: {\n            getItem: (key) => {\n                // See https://nuxtjs.org/guide/plugins/#using-process-flags\n                if (process.server) {\n                    const parsedCookies = cookie.parse(req.headers.cookie);\n                    return parsedCookies[key];\n                } else {\n                    return Cookies.get(key);\n                }\n            },\n            // Please see https://github.com/js-cookie/js-cookie#json, on how to handle JSON.\n            setItem: (key, value) =>\n                Cookies.set(key, value, { expires: 365, secure: false }),\n            removeItem: key => Cookies.remove(key)\n        }\n    })(store);\n};\n```\n\n## API\n\n### `createPersistedState([options])`\n\nCreates a new instance of the plugin with the given options. The following options\ncan be provided to configure the plugin for your specific needs:\n\n- `key <String>`: The key to store the persisted state under. Defaults to `vuex`.\n- `paths <Array>`: An array of any paths to partially persist the state. If no paths are given, the complete state is persisted. If an empty array is given, no state is persisted. Paths must be specified using dot notation. If using modules, include the module name. eg: \"auth.user\" Defaults to `undefined`.\n- `reducer <Function>`: A function that will be called to reduce the state to persist based on the given paths. Defaults to include the values.\n- `subscriber <Function>`: A function called to setup mutation subscription. Defaults to `store => handler => store.subscribe(handler)`.\n\n- `storage <Object>`: Instead of (or in combination with) `getState` and `setState`. Defaults to localStorage.\n- `getState <Function>`: A function that will be called to rehydrate a previously persisted state. Defaults to using `storage`.\n- `setState <Function>`: A function that will be called to persist the given state. Defaults to using `storage`.\n- `filter <Function>`: A function that will be called to filter any mutations which will trigger `setState` on storage eventually. Defaults to `() => true`.\n- `overwrite <Boolean>`: When rehydrating, whether to overwrite the existing state with the output from `getState` directly, instead of merging the two objects with `deepmerge`. Defaults to `false`.\n- `arrayMerger <Function>`: A function for merging arrays when rehydrating state. Defaults to `function (store, saved) { return saved }` (saved state replaces supplied state).\n- `rehydrated <Function>`: A function that will be called when the rehydration is finished. Useful when you are using Nuxt.js, which the rehydration of the persisted state happens asynchronously. Defaults to `store => {}`\n- `fetchBeforeUse <Boolean>`: A boolean indicating if the state should be fetched from storage before the plugin is used. Defaults to `false`.\n- `assertStorage <Function>`: An overridable function to ensure storage is available, fired on plugins's initialization. Default one is performing a Write-Delete operation on the given Storage instance. Note, default behaviour could throw an error (like `DOMException: QuotaExceededError`).\n\n## Customize Storage\n\nIf it's not ideal to have the state of the Vuex store inside localstorage. One can easily implement the functionality to use [cookies](https://github.com/js-cookie/js-cookie) for that (or any other you can think of);\n\n[![Edit vuex-persistedstate with js-cookie](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/xl356qvvkz?autoresize=1)\n\n```js\nimport { Store } from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport * as Cookies from \"js-cookie\";\n\nconst store = new Store({\n  // ...\n  plugins: [\n    createPersistedState({\n      storage: {\n        getItem: (key) => Cookies.get(key),\n        // Please see https://github.com/js-cookie/js-cookie#json, on how to handle JSON.\n        setItem: (key, value) =>\n          Cookies.set(key, value, { expires: 3, secure: true }),\n        removeItem: (key) => Cookies.remove(key),\n      },\n    }),\n  ],\n});\n```\n\nIn fact, any object following the Storage protocol (getItem, setItem, removeItem, etc) could be passed:\n\n```js\ncreatePersistedState({ storage: window.sessionStorage });\n```\n\nThis is especially useful when you are using this plugin in combination with server-side rendering, where one could pass an instance of [dom-storage](https://www.npmjs.com/package/dom-storage).\n\n### 🔐Obfuscate Local Storage\n\nIf you need to use **Local Storage** (or you want to) but want to prevent attackers from easily inspecting the stored data, you can [obfuscate it]('https://github.com/softvar/secure-ls').\n\n**Important ⚠️** Obfuscating the Vuex store means to prevent attackers from easily gaining access to the data. This is not a secure way of storing sensitive data (like passwords, personal information, etc.), and always needs to be used in conjunction with some other authentication method of keeping the data (such as Firebase or your own server).\n\n[![Edit vuex-persistedstate with secure-ls (obfuscated data)](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/vuex-persistedstate-with-secure-ls-encrypted-data-7l9wb?fontsize=14)\n\n```js\nimport { Store } from \"vuex\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport SecureLS from \"secure-ls\";\nvar ls = new SecureLS({ isCompression: false });\n\n// https://github.com/softvar/secure-ls\n\nconst store = new Store({\n  // ...\n  plugins: [\n    createPersistedState({\n      storage: {\n        getItem: (key) => ls.get(key),\n        setItem: (key, value) => ls.set(key, value),\n        removeItem: (key) => ls.remove(key),\n      },\n    }),\n  ],\n});\n```\n\n### ⚠️ LocalForage ⚠️\n\nAs it maybe seems at first sight, it's not possible to pass a [LocalForage](https://github.com/localForage/localForage) instance as `storage` property. This is due the fact that all getters and setters must be synchronous and [LocalForage's methods](https://github.com/localForage/localForage#callbacks-vs-promises) are asynchronous.\n\n## Changelog\n\nPlease see [CHANGELOG](CHANGELOG.md) for more information on what has changed recently.\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://robinvdvleuten.nl\"><img src=\"https://avatars3.githubusercontent.com/u/238295?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Robin van der Vleuten</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=robinvdvleuten\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=robinvdvleuten\" title=\"Documentation\">📖</a> <a href=\"#infra-robinvdvleuten\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=robinvdvleuten\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/zweizeichen\"><img src=\"https://avatars1.githubusercontent.com/u/654071?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sebastian</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=zweizeichen\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=zweizeichen\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/boris-graeff\"><img src=\"https://avatars1.githubusercontent.com/u/3204379?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Boris Graeff</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=boris-graeff\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://ciceropablo.github.io\"><img src=\"https://avatars3.githubusercontent.com/u/174275?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Cícero Pablo</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=ciceropablo\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://gatwal.com\"><img src=\"https://avatars1.githubusercontent.com/u/7547554?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gurpreet Atwal</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=gurpreetatwal\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://jcubed.me\"><img src=\"https://avatars0.githubusercontent.com/u/43069023?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jakub Koralewski</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=JakubKoralewski\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://jankeesvw.com\"><img src=\"https://avatars0.githubusercontent.com/u/167882?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jankees van Woezik</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=jankeesvw\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://randomcodetips.com\"><img src=\"https://avatars2.githubusercontent.com/u/8638243?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jofferson Ramirez Tiquez</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=jofftiquez\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/DevoidCoding\"><img src=\"https://avatars1.githubusercontent.com/u/21159634?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jordan Deprez</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=DevoidCoding\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/juanvillegas\"><img src=\"https://avatars3.githubusercontent.com/u/773149?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Juan Villegas</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=juanvillegas\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://jrast.ch\"><img src=\"https://avatars3.githubusercontent.com/u/146369?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jürg Rast</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=jrast\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/antixrist\"><img src=\"https://avatars3.githubusercontent.com/u/2387592?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kartashov Alexey</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=antixrist\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://twitter.com/LeonardPauli\"><img src=\"https://avatars0.githubusercontent.com/u/1329834?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Leonard Pauli</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=leonardpauli\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=leonardpauli\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nelsliu9121\"><img src=\"https://avatars2.githubusercontent.com/u/1268682?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nelson Liu</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=nelsliu9121\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=nelsliu9121\" title=\"Documentation\">📖</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=nelsliu9121\" title=\"Tests\">⚠️</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/NLNicoo\"><img src=\"https://avatars2.githubusercontent.com/u/6526666?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nico</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=NLNicoo\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=NLNicoo\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://www.qkdreyer.dev\"><img src=\"https://avatars3.githubusercontent.com/u/717869?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Quentin Dreyer</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=qkdreyer\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://raphaelsaunier.com\"><img src=\"https://avatars2.githubusercontent.com/u/170256?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Raphael Saunier</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=raphaelsaunier\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://rodneyrehm.de\"><img src=\"https://avatars3.githubusercontent.com/u/186837?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rodney Rehm</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=rodneyrehm\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=rodneyrehm\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"http://wongyouth.github.io\"><img src=\"https://avatars1.githubusercontent.com/u/944583?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ryan Wang</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=wongyouth\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=wongyouth\" title=\"Documentation\">📖</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=wongyouth\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://atinux.com\"><img src=\"https://avatars2.githubusercontent.com/u/904724?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sébastien Chopin</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=Atinux\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/zgayjjf\"><img src=\"https://avatars1.githubusercontent.com/u/24718872?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>jeffjing</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=zgayjjf\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/macarthuror\"><img src=\"https://avatars0.githubusercontent.com/u/24395219?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>macarthuror</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=macarthuror\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/gangsthub\"><img src=\"https://avatars2.githubusercontent.com/u/6775220?s=460&v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Paul Melero</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=gangsthub\" title=\"Documentation\">📖</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=gangsthub\" title=\"Code\">💻</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=gangsthub\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/WTDuck\"><img src=\"https://avatars0.githubusercontent.com/u/16686729?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Guillaume da Silva</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=WTDuck\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/SanterreJo\"><img src=\"https://avatars2.githubusercontent.com/u/6465769?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jonathan Santerre</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=SanterreJo\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/fabiofdsantos/\"><img src=\"https://avatars3.githubusercontent.com/u/8303937?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Fábio Santos</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=fabiofdsantos\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/robertgr991\"><img src=\"https://avatars0.githubusercontent.com/u/36689800?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>robertgr991</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=robertgr991\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/YuraKolesnikov\"><img src=\"https://avatars3.githubusercontent.com/u/28485518?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>JurijsKolesnikovs</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=YuraKolesnikov\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://davidsbond.github.io\"><img src=\"https://avatars3.githubusercontent.com/u/6227720?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>David Bond</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=davidsbond\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://www.freekvanrijt.nl\"><img src=\"https://avatars1.githubusercontent.com/u/417416?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Freek van Rijt</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=FreekVR\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/yachaka\"><img src=\"https://avatars2.githubusercontent.com/u/8074336?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ilyes Hermellin</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=yachaka\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"http://www.inventage.com\"><img src=\"https://avatars1.githubusercontent.com/u/63866?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Peter Siska</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=peschee\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://adm1t.github.io\"><img src=\"https://avatars2.githubusercontent.com/u/26100455?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dmitry Filippov</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=adm1t\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://retailify.de\"><img src=\"https://avatars0.githubusercontent.com/u/5236353?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Thomas Meitz</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=retailify\" title=\"Documentation\">📖</a> <a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=retailify\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"http://neeron.me\"><img src=\"https://avatars.githubusercontent.com/u/33238007?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Neeron Bhatta</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=NeuronButter\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/joaoaraujo-hotmart\"><img src=\"https://avatars.githubusercontent.com/u/15874735?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>joaoaraujo-hotmart</b></sub></a><br /><a href=\"https://github.com/robinvdvleuten/vuex-persistedstate/commits?author=joaoaraujo-hotmart\" title=\"Code\">💻</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n## License\n\nThe MIT License (MIT). Please see [License File](LICENSE) for more information.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.900390625,
          "content": "{\n  \"name\": \"vuex-persistedstate\",\n  \"description\": \"Persist and rehydrate your Vuex state between page reloads.\",\n  \"version\": \"4.1.0\",\n  \"license\": \"MIT\",\n  \"author\": \"Robin van der Vleuten <robin@webstronauts.co> (robinvdvleuten.nl)\",\n  \"keywords\": [\n    \"vue\",\n    \"vuex\",\n    \"plugin\"\n  ],\n  \"homepage\": \"https://github.com/robinvdvleuten/vuex-persistedstate#readme\",\n  \"repository\": \"robinvdvleuten/vuex-persistedstate\",\n  \"bugs\": {\n    \"url\": \"https://github.com/robinvdvleuten/vuex-persistedstate/issues\"\n  },\n  \"source\": \"src/index.ts\",\n  \"main\": \"dist/vuex-persistedstate.js\",\n  \"module\": \"dist/vuex-persistedstate.es.js\",\n  \"unpkg\": \"dist/vuex-persistedstate.umd.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"files\": [\n    \"dist\",\n    \"src\"\n  ],\n  \"scripts\": {\n    \"build\": \"rimraf dist && microbundle --external all --name createPersistedState\",\n    \"prepare\": \"npm run build\",\n    \"test\": \"npm-run-all test:**\",\n    \"test:jest\": \"jest --env=jsdom\",\n    \"test:size\": \"bundlesize\"\n  },\n  \"babel\": {\n    \"presets\": [\n      \"@babel/preset-env\"\n    ]\n  },\n  \"bundlesize\": [\n    {\n      \"path\": \"./dist/*.js\",\n      \"threshold\": \"800b\"\n    }\n  ],\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run build && pretty-quick --staged\"\n    }\n  },\n  \"jest\": {\n    \"testURL\": \"http://localhost/\"\n  },\n  \"dependencies\": {\n    \"deepmerge\": \"^4.2.2\",\n    \"shvl\": \"^2.0.3\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.12.10\",\n    \"@babel/preset-env\": \"^7.12.11\",\n    \"all-contributors-cli\": \"^6.19.0\",\n    \"babel-core\": \"^7.0.0-bridge.0\",\n    \"babel-jest\": \"^27.0.2\",\n    \"bundlesize\": \"^0.18.1\",\n    \"dom-storage\": \"^2.0.2\",\n    \"eslint\": \"^8.0.0\",\n    \"husky\": \"^7.0.0\",\n    \"jest\": \"^27.0.6\",\n    \"microbundle\": \"^0.14.0\",\n    \"npm-run-all\": \"^4.1.2\",\n    \"prettier\": \"^2.2.1\",\n    \"pretty-quick\": \"^3.1.0\",\n    \"rimraf\": \"^3.0.0\",\n    \"vue\": \"^3.0.0\",\n    \"vuex\": \"^4.0.0-rc\"\n  },\n  \"peerDependencies\": {\n    \"vuex\": \"^3.0 || ^4.0.0-rc\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.js",
          "type": "blob",
          "size": 10.6474609375,
          "content": "import { createStore } from \"vuex\";\nimport Storage from \"dom-storage\";\nimport createPersistedState from \"./\";\n\nit(\"can be created with the default options\", () => {\n  window.localStorage = new Storage();\n  expect(() => createPersistedState()).not.toThrow();\n});\n\nit(\"replaces store's state and subscribes to changes when initializing with JSON\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"json\" }));\n\n  const store = createStore({ state: { original: \"state\" } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({ storage });\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    original: \"state\",\n    persisted: \"json\",\n  });\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"replaces store's state and subscribes to changes when initializing with object\", () => {\n  const storage = { getItem: () => ({ persisted: \"object\" }) }\n\n  const store = createStore({ state: { original: \"state\" } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({ storage, assertStorage: () => true });\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    original: \"state\",\n    persisted: \"object\",\n  });\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"does not replaces store's state when receiving invalid JSON\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", \"<invalid JSON>\");\n\n  const store = createStore({ state: { nested: { original: \"state\" } } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({ storage });\n  plugin(store);\n\n  expect(store.replaceState).not.toBeCalled();\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"does not replaces store's state when receiving null\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify(null));\n\n  const store = createStore({ state: { nested: { original: \"state\" } } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({ storage });\n  plugin(store);\n\n  expect(store.replaceState).not.toBeCalled();\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"respects nested values when it replaces store's state on initializing\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"json\" }));\n\n  const store = createStore({ state: { original: \"state\" } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({ storage });\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    original: \"state\",\n    persisted: \"json\",\n  });\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"should persist the changed partial state back to serialized JSON\", () => {\n  const storage = new Storage();\n  const store = createStore({ state: {} });\n\n  const plugin = createPersistedState({ storage, paths: [\"changed\"] });\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { changed: \"state\" });\n\n  expect(storage.getItem(\"vuex\")).toBe(JSON.stringify({ changed: \"state\" }));\n});\n\nit(\"persist the changed partial state back to serialized JSON under a configured key\", () => {\n  const storage = new Storage();\n  const store = createStore({ state: {} });\n\n  const plugin = createPersistedState({\n    storage,\n    key: \"custom\",\n    paths: [\"changed\"],\n  });\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { changed: \"state\" });\n\n  expect(storage.getItem(\"custom\")).toBe(JSON.stringify({ changed: \"state\" }));\n});\n\nit(\"persist the changed full state back to serialized JSON when no paths are given\", () => {\n  const storage = new Storage();\n  const store = createStore({ state: {} });\n\n  const plugin = createPersistedState({ storage });\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { changed: \"state\" });\n\n  expect(storage.getItem(\"vuex\")).toBe(JSON.stringify({ changed: \"state\" }));\n});\n\nit(\"persist the changed partial state back to serialized JSON under a nested path\", () => {\n  const storage = new Storage();\n  const store = createStore({ state: {} });\n\n  const plugin = createPersistedState({\n    storage,\n    paths: [\"foo.bar\", \"bar\"],\n  });\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { foo: { bar: \"baz\" }, bar: \"baz\" });\n\n  expect(storage.getItem(\"vuex\")).toBe(\n    JSON.stringify({ foo: { bar: \"baz\" }, bar: \"baz\" })\n  );\n});\n\nit(\"should not persist whole store if paths array is empty\", () => {\n  const storage = new Storage();\n  const store = createStore({\n    state: { original: \"state\" },\n  });\n\n  const plugin = createPersistedState({ storage, paths: [] });\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { changed: \"state\" });\n\n  expect(storage.getItem(\"vuex\")).toBe(JSON.stringify({}));\n});\n\nit(\"should not persist null values\", () => {\n  const storage = new Storage();\n  const store = createStore({\n    state: { alpha: { name: null, bravo: { name: null } } },\n  });\n\n  const plugin = createPersistedState({\n    storage,\n    paths: [\"alpha.name\", \"alpha.bravo.name\"],\n  });\n\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { charlie: { name: \"charlie\" } });\n\n  expect(storage.getItem(\"vuex\")).toBe(\n    JSON.stringify({ alpha: { bravo: {} } })\n  );\n});\n\nit(\"should not merge array values when rehydrating by default\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: [\"json\"] }));\n\n  const store = createStore({ state: { persisted: [\"state\"] } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({ storage });\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    persisted: [\"json\"],\n  });\n\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"should not clone circular objects when rehydrating\", () => {\n  const circular = { foo: \"bar\" };\n  circular.foo = circular;\n\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"baz\" }));\n\n  const store = createStore({ state: { circular } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({ storage });\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    circular,\n    persisted: \"baz\",\n  });\n\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"should apply a custom arrayMerger function\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: [1, 2] }));\n\n  const store = createStore({ state: { persisted: [1, 2, 3] } });\n  store.replaceState = jest.fn();\n  store.subscribe = jest.fn();\n\n  const plugin = createPersistedState({\n    storage,\n    arrayMerger: function (store, saved) {\n      return [\"hello!\"];\n    },\n  });\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    persisted: [\"hello!\"],\n  });\n\n  expect(store.subscribe).toBeCalled();\n});\n\nit(\"rehydrates store's state through the configured getter\", () => {\n  const storage = new Storage();\n\n  const store = createStore({ state: {} });\n  store.replaceState = jest.fn();\n\n  const plugin = createPersistedState({\n    storage,\n    getState: () => ({ getter: \"item\" }),\n  });\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({ getter: \"item\" });\n});\n\nit(\"persist the changed state back through the configured setter\", () => {\n  expect.assertions(1);\n\n  const storage = new Storage();\n  const store = createStore({ state: {} });\n\n  const plugin = createPersistedState({\n    storage,\n    setState: (key, state) => {\n      expect(state).toEqual({ setter: \"item\" });\n    },\n  });\n\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { setter: \"item\" });\n});\n\nit(\"uses the configured reducer when persisting the state\", () => {\n  const storage = new Storage();\n  const store = createStore({ state: {} });\n\n  const customReducer = jest.fn();\n\n  const plugin = createPersistedState({\n    storage,\n    paths: [\"custom\"],\n    reducer: customReducer,\n  });\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { custom: \"value\" });\n\n  expect(customReducer).toBeCalledWith({ custom: \"value\" }, [\"custom\"]);\n});\n\nit(\"filters to specific mutations\", () => {\n  const storage = new Storage();\n  const store = createStore({ state: {} });\n\n  const plugin = createPersistedState({\n    storage,\n    filter: (mutation) => [\"filter\"].indexOf(mutation) !== -1,\n  });\n  plugin(store);\n\n  store._subscribers[0](\"mutation\", { changed: \"state\" });\n\n  expect(storage.getItem(\"vuex\")).toBeNull();\n\n  store._subscribers[0](\"filter\", { changed: \"state\" });\n\n  expect(storage.getItem(\"vuex\")).toBe(JSON.stringify({ changed: \"state\" }));\n});\n\nit(\"should call rehydrated callback once the state is replaced\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"json\" }));\n\n  const store = createStore({ state: { original: \"state\" } });\n  const rehydrated = jest.fn();\n\n  const plugin = createPersistedState({ storage, rehydrated });\n  plugin(store);\n\n  expect(rehydrated).toBeCalledWith(store);\n});\n\nit(\"should call rehydrated if the replacement executed asynchronously\", () => {\n  jest.useFakeTimers();\n\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"json\" }));\n\n  setTimeout(() => {\n    createPersistedState({ storage, rehydrated })(store);\n  }, 600);\n  const store = createStore({ state: { original: \"state\" } });\n  const rehydrated = jest.fn();\n\n  jest.runAllTimers();\n  const plugin = createPersistedState({ storage, rehydrated });\n  plugin(store);\n\n  expect(rehydrated).toBeCalled();\n  const rehydratedStore = rehydrated.mock.calls[0][0];\n  expect(rehydratedStore.state.persisted).toBe(\"json\");\n});\n\nit(\"fetches state from storage when the plugin is used by default\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"before\" }));\n\n  const plugin = createPersistedState({ storage });\n\n  const store = createStore();\n  store.replaceState = jest.fn();\n\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"after\" }));\n\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    persisted: \"after\",\n  });\n});\n\nit(\"fetches state from storage before the plugin is used\", () => {\n  const storage = new Storage();\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"before\" }));\n\n  const plugin = createPersistedState({ storage, fetchBeforeUse: true });\n\n  const store = createStore();\n  store.replaceState = jest.fn();\n\n  storage.setItem(\"vuex\", JSON.stringify({ persisted: \"after\" }));\n\n  plugin(store);\n\n  expect(store.replaceState).toBeCalledWith({\n    persisted: \"before\",\n  });\n});\n\nit(\"throws specific error if assertion throws error on initializing plugin\", () => {\n  const errorMessage = \"no storage space left\";\n  const assertStorage = () => {\n    throw new Error(errorMessage);\n  };\n  expect(() => createPersistedState({ assertStorage })).toThrow(errorMessage);\n});\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.0703125,
          "content": "{\n  \"compilerOptions\": {\n    \"allowSyntheticDefaultImports\": true\n  }\n}\n"
        }
      ]
    }
  ]
}