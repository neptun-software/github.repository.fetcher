{
  "metadata": {
    "timestamp": 1736562744717,
    "page": 282,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "trentm/node-bunyan",
      "stars": 7193,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0751953125,
          "content": "/tmp\n/node_modules\n*.log\n!/test/corpus/*.log\n/*.tgz\n/test/log.test.rot.log.*\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0537109375,
          "content": "/tmp\n/node_modules\n*.log\n/examples\n/test\n/*.tgz\n/tools\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.78515625,
          "content": "Trent Mick (http://trentm.com)\nMark Cavage (https://github.com/mcavage)\nDave Pacheco (https://github.com/davepacheco)\nMichael Hart (https://github.com/mhart)\nIsaac Schlueter (https://github.com/isaacs)\nRob Gulewich (https://github.com/rgulewich)\nBryan Cantrill (https://github.com/bcantrill)\nMichael Hart (https://github.com/mhart)\nSimon Wade (https://github.com/aexmachina)\nhttps://github.com/glenn-murray-bse\nChakrit Wichian (https://github.com/chakrit)\nPatrick Mooney (https://github.com/pfmooney)\nJohan Nordberg (https://github.com/jnordberg)\nhttps://github.com/timborodin\nRyan Graham (https://github.com/rmg)\nAlex Kocharin (https://github.com/rlidwka)\nAndrei Neculau (https://github.com/andreineculau)\nMihai Tomescu (https://github.com/matomesc)\nDaniel Juhl (https://github.com/danieljuhl)\nChris Barber (https://github.com/cb1kenobi)\nManuel Schneider (https://github.com/manuelschneider)\nMartin Gausby (https://github.com/gausby)\nSt√©phan Kochen (https://github.com/stephank)\nShakeel Mohamed (https://github.com/shakeelmohamed)\nDenis Izmaylov (https://github.com/DenisIzmaylov)\nGuillermo Grau Panea (https://github.com/guigrpa)\nMark LeMerise (https://github.com/MarkLeMerise)\nhttps://github.com/sometimesalready\nCharly Koza (https://github.com/Cactusbone)\nThomas Heymann (https://github.com/cyberthom)\nDavid M. Lee (https://github.com/leedm777)\nMarc Udoff (https://github.com/mlucool)\nMark Stosberg (https://github.com/markstos)\nAlexander Ray (https://github.com/aray12)\nAdam Lynch (https://github.com/adam-lynch)\nMichael Nisi (https://github.com/michaelnisi)\nMartijn Schrage (https://github.com/Oblosys)\nPaul Milham (https://github.com/domrein)\nFrankie O'Rourke (https://github.com/psfrankie)\nCody Mello (https://github.com/melloc)\nTodd Whiteman (https://github.com/twhiteman)\nZach Bjornson (https://github.com/zbjornson)\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 46.0947265625,
          "content": "# bunyan Changelog\n\nSee [the bunyan@1.x changelog](https://github.com/trentm/node-bunyan/blob/1.x/CHANGES.md)\nfor details on recent 1.x releases.\n\nKnown issues:\n\n- [issue #58] Can't install to a dir with spaces. This is [this node-gyp\n  bug](https://github.com/TooTallNate/node-gyp/issues/65).\n\n\n## not yet released\n\n(nothing yet)\n\n## 2.0.5 (beta)\n\n- [pull #575, #278] Change the default \"req\" serializer to accept expressjs's\n  `req.originalUrl` for the \"url\" field per\n  <https://expressjs.com/en/api.html#req.originalUrl>. (By @twelve17 and\n  @kingcody.)\n- Development change: Switch to node-tap for testing (from nodeunit, which is\n  now obsolete). Currently just tap v9 because that is the last major version\n  of node-tap that supports back to node v0.10.\n\n## 2.0.4 (beta)\n\n- [pull #558] Update minimum \"moment\" version to 2.19.3 for CVE-2017-18214.\n- [issue #589] Use `os.EOL` for newlines in bunyan output, which helps with\n  some Unix-EOL-naive apps like notepad. (By @bwknight877.)\n- Development change: Switched to GitHub Actions for CI.\n\n## 2.0.3 (beta)\n\n- Fix a vulnerability from a crafted argument to 'bunyan -p ARG'\n\n  This was reported privately as:\n      https://hackerone.com/reports/902739\n      bunyan - RCE via insecure command formatting\n\n  Previous to this version the 'bunyan' CLI was not escaping a given argument\n  to the '-p' option before executing `ps -A -o pid,command | grep '$ARG'`\n  which could lead to unintended execution.\n\n  (This same change is also in bunyan@1.8.13.)\n\n## 2.0.2 (beta)\n\n- [issue #444] Fix the `bunyan` CLI to not duplicate the \"HTTP/1.1 ...\" status\n  line when serializing a \"res\" field.\n\n\n## 2.0.1 (beta)\n\n- [issue #504] **Backward incompatible change to the `bunyan` CLI:**\n  The `bunyan` CLI no longer adds a `Host` header when rendering a `client_req`\n  field in a log record. In 1.x it used to do this (using `client_req.address`\n  and `client_req.port`), on the *guess* that Node.js' `http.ClientRequest`\n  handling would add it.  However, the guess can be wrong and misleading. It is\n  better not to guess.\n\n\n## 2.0.0 (beta)\n\n- [issue #499] Fix some `bunyan` CLI exit handling problems.\n\n\n## 1.8.10\n\n- Ensure that `bunyan` errors out if attempting to use `-p PID` and\n  file args at the same time.\n\n\n## 1.8.9\n\n- [pull #409, issue #246] Revert a change added to the `bunyan` CLI version\n  1.0.1 where `SIGINT` was ignored, such that Ctrl+C could not be used to\n  terminate bunyan. (By @zbjornson and @davepacheco.)\n- [pull #469] Fix a strict mode (`\"use strict;\"`) error in some versions of\n  Safari.\n\n\n## 1.8.8\n\n- Fix breakage due to a silly last minute \"fix 'make check'\".\n\n\n## 1.8.7\n\nNote: *Bad release.* Use 1.8.8 or later.\n\n- [issue #484] Fix breakage due to #474 in previous release.\n\n\n## 1.8.6\n\nNote: *Bad release.* Use 1.8.7 or later.\n\n- [issue #474] Bunyan's `safeCycles` is too slow when logging large objects.\n\n\n## 1.8.5\n\n- [issue #401] Improved performance when using disabled log levels.\n\n\n## 1.8.4\n\n- [issue #454] Fix `src` usage with node v7.\n\n\n## 1.8.3\n\n- [issue #450] Fix `log.info(null)` crash that resulted from #426 in v1.8.2.\n\n\n## 1.8.2\n\n- [issue #449] Bump dtrace-provider dep to 0.7.0 to help avoid deprecation\n  warnings with node v6 in some cases.\n- [issue #426] Ensure `log.info({err: err})` results in a \"msg\" value, just\n  like `log.info(err)`.\n\n\n## 1.8.1\n\n- [pull #386] Fix bad bug in rotation that could cause a crash with\n  error message \"cannot start a rotation when already rotating\"\n  (by Frankie O'Rourke). The bug was introduced in 1.8.0.\n\n\n## 1.8.0\n\nNote: *Bad release.* An addition in this release broke 'rotating-file' usage.\nUse 1.8.1 or later.\n\n- [issue #370] Fix `bunyan -p ...` (i.e. DTrace integration) on node\n  4.x and 5.x.\n- [issue #329, pull #330] Update the 'rotating-file' stream to do a file\n  rotation on initialization if the mtime on the file path indicates the\n  last rotation time was missed -- i.e. if the app wasn't running at the\n  time. (by Paul Milham.)\n\n\n## 1.7.1\n\n- [issue #332, pull #355] Ensure stream for type='stream' stream is a writable\n  stream. (By Michael Nisi.)\n\n- [issue #344] Fix \"rotating-file\" Bunyan streams to not miss rotations when configured\n  for a period greater than approximately 25 days. Before this there was an issue\n  where periods greater than node.js's maximum `setTimeout` length would fail to rotate.\n  (By Martijn Schrage.)\n\n- [issue #234, pull #345] Improve `bunyan` CLI rendering of \"res\" field\n  HTTP responses to not show two blank lines for an empty body.\n  (By Michael Nisi.)\n\n\n## 1.7.0\n\n- [pull #311, #302, #310] Improve the runtime environment detection to fix\n  running under [NW.js](http://nwjs.io/). Contributions by Adam Lynch, Jeremy\n  Ruppel, and Aleksey Timchenko.\n\n- [pull #318] Add `reemitErrorEvents` optional boolean for streams added to a\n  Bunyan logger to control whether an \"error\" event on the stream will be\n  re-emitted on the `Logger` instance.\n\n        var log = bunyan.createLogger({\n            name: 'foo',\n            streams: [\n                {\n                    type: 'raw',\n                    stream: new MyCustomStream(),\n                    reemitErrorEvents: true\n                }\n            ]\n        });\n\n  Before this change, \"error\" events were re-emitted on [`file`\n  streams](https://github.com/trentm/node-bunyan#stream-type-file) only. The new\n  behaviour is as follows:\n\n    - `reemitErrorEvents` not specified: `file` streams will re-emit error events\n      on the Logger instance.\n    - `reemitErrorEvents: true`: error events will be re-emitted on the Logger\n      for any stream with a `.on()` function -- which includes file streams,\n      process.stdout/stderr, and any object that inherits from EventEmitter.\n    - `reemitErrorEvents: false`: error events will not be re-emitted for any\n      streams.\n\n  Dev Note: Bunyan `Logger` objects don't currently have a `.close()` method\n  in which registered error event handlers can be *un*registered. That means\n  that a (presumably rare) situation where code adds dozens of Bunyan Logger\n  streams to, e.g. process.stdout, and with `reemitErrorEvents: true`, could\n  result in leaking Logger objects.\n\n  Original work for allowing \"error\" re-emitting on non-file streams is\n  by Marc Udoff in pull #318.\n\n\n## 1.6.0\n\n- [pull #304, issue #245] Use [Moment.js][momentjs.com] library to handle\n  `bunyan` CLI time formatting in some cases, especially to fix display of\n  local time. It is now required for local time formatting (i.e. `bunyan -L`\n  or `bunyan --time local`). (By David M. Lee.)\n\n- [pull #252] Fix errant `client_res={}` in `bunyan` CLI rendering, and avoid\n  extra newlines in `client_req` rendering in some cases. (By Thomas Heymann.)\n\n- [pull #291, issue #303] Fix `LOG.child(...)` to *not* override the \"hostname\"\n  field of the parent. A use case is when one manually sets \"hostname\" to\n  something other than `os.hostname()`. (By github.com/Cactusbone.)\n\n- [issue #325] Allow one to set `level: 0` in `createLogger` to turn on\n  logging for all levels. (Adapted from #336 by github.com/sometimesalready.)\n\n- Add guards (to `resolveLevel`) so that all \"level\" values are validated.\n  Before this, a bogus level like \"foo\" or -12 or `['some', 'array']` would\n  silently be accepted -- with undefined results.\n\n- Doc updates for #340 and #305.\n\n- Update `make test` to test against node 5, 4, 0.12 and 0.10.\n\n\n## 1.5.1\n\n- [issue #296] Fix `src: true`, which was broken in v1.5.0.\n\n\n## 1.5.0\n\nNote: *Bad release.* The addition of `'use strict';` broke Bunyan's `src: true`\nfeature. Use 1.5.1 instead.\n\n- [pull #236, issue #231, issue #223] Fix strict mode in the browser.\n- [pull #282, issue #213] Fixes bunyan to work with webpack. By Denis Izmaylov.\n- [pull #294] Update to dtrace-provider 0.6 to fix with node 4.0 and io.js 3.0.\n- Dropped support for 0.8 (can't install deps easily anymore for running\n  test suite). Bump to a recent iojs version for testing.\n\n\n## 1.4.0\n\n(Bumping minor ver b/c I'm wary of dtrace-provider changes. :)\n\n- [issue #258, pull #259] Update to dtrace-provider 0.5 to fix\n  install and tests on recent io.js versions.\n- safe-json-stringify@1.0.3 changed output, breaking some tests. Fix those.\n\n\n## 1.3.6\n\n- [issue #244] Make `bunyan` defensive on `res.header=null`.\n\n\n## 1.3.5\n\n- [issue #233] Make `bunyan` defensive on res.header as a boolean.\n- [issue #242] Make `bunyan` defensive on err.stack not being a string.\n\n\n## 1.3.4\n\n- Allow `log.child(...)` to work even if the logger is a *sub-class*\n  of Bunyan's Logger class.\n- [issue #219] Hide 'source-map-support' require from browserify.\n- [issue #218] Reset `haveNonRawStreams` on `<logger>.addStream`.\n\n\n## 1.3.3\n\n- [pull #127] Update to dtrace-provider 0.4.0, which gives io.js 1.x support\n  for dtrace-y parts of Bunyan.\n\n\n## 1.3.2\n\n- [pull #182] Fallback to using the optional 'safe-json-stringify' module\n  if `JSON.stringify` throws -- possibly with an enumerable property\n  getter than throws. By Martin Gausby.\n\n\n## 1.3.1\n\n- Export `bunyan.RotatingFileStream` which is needed if one wants to\n  customize it. E.g. see issue #194.\n\n- [pull #122] Source Map support for caller line position for [the \"src\"\n  field](https://github.com/trentm/node-bunyan#src). This could be interesting\n  for [CoffeeScript](http://coffeescript.org/documentation/docs/sourcemap.html)\n  users of Bunyan. By Manuel Schneider.\n\n- [issue #164] Ensure a top-level `level` given in `bunyan.createLogger`\n  is *used* for given `streams`. For example, ensure that the following\n  results in the stream having a DEBUG level:\n\n        var log = bunyan.createLogger({\n            name: 'foo',\n            level: 'debug',\n            streams: [\n                {\n                    path: '/var/tmp/foo.log'\n                }\n            ]\n        });\n\n  This was broken in the 1.0.1 release. Between that release and 1.3.0\n  the \"/var/tmp/foo.log\" stream would be at the INFO level (Bunyan's\n  default level).\n\n\n## 1.3.0\n\n- [issue #103] `bunyan -L` (or `bunyan --time local`) to show local time.\n  Bunyan log records store `time` in UTC time. Sometimes it is convenient\n  to display in local time.\n\n- [issue #205] Fix the \"The Bunyan CLI crashed!\" checking to properly warn of\n  the common failure case when `-c CONDITION` is being used.\n\n\n## 1.2.4\n\n- [issue #210] Export `bunyan.nameFromLevel` and `bunyan.levelFromName`. It can\n  be a pain for custom streams to have to reproduce that.\n\n- [issue #100] Gracefully handle the case of an unbound\n  `Logger.{info,debug,...}` being used for logging, e.g.:\n\n        myEmittingThing.on('data', log.info)\n\n  Before this change, bunyan would throw. Now it emits a warning to stderr\n  *once*, and then silently ignores those log attempts, e.g.:\n\n        bunyan usage error: /Users/trentm/tm/node-bunyan/foo.js:12: attempt to log with an unbound log method: `this` is: { _events: { data: [Function] } }\n\n\n## 1.2.3\n\n- [issue #184] Fix log rotation for rotation periods > ~25 days. Before this\n  change, a rotation period longer than this could hit [the maximum setTimeout\n  delay in node.js](https://github.com/joyent/node/issues/8656). By Daniel Juhl.\n\n\n## 1.2.2\n\n- Drop the guard that a bunyan Logger level must be between TRACE (10)\n  and FATAL (60), inclusive. This allows a trick of setting the level\n  to `FATAL + 1` to turn logging off. While the standard named log levels are\n  the golden path, then intention was not to get in the way of using\n  other level numbers.\n\n\n## 1.2.1\n\n- [issue #178, #181] Get at least dtrace-provider 0.3.1 for\n  optionalDependencies to get a fix for install with decoupled npm (e.g. with\n  homebrew's node and npm).\n\n\n## 1.2.0\n\n- [issue #157] Restore dtrace-provider as a dependency (in\n  \"optionalDependencies\").\n\n  Dtrace-provider version 0.3.0 add build sugar that should eliminate the\n  problems from older versions:\n  The build is not attempted on Linux and Windows. The build spew is\n  *not* emitted by default (use `V=1 npm install` to see it); instead a\n  short warning is emitted if the build fails.\n\n  Also, importantly, the new dtrace-provider fixes working with node\n  v0.11/0.12.\n\n\n## 1.1.3\n\n- [issue #165] Include extra `err` fields in `bunyan` CLI output. Before\n  this change only the fields part of the typical node.js error stack\n  (err.stack, err.message, err.name) would be emitted, even though\n  the Bunyan *library* would typically include err.code and err.signal\n  in the raw JSON log record.\n\n\n## 1.1.2\n\n- Fix a breakage in `log.info(err)` on a logger with no serializers.\n\n\n## 1.1.1\n\nNote: *Bad release.* It breaks `log.info(err)` on a logger with no serializers.\nUse version 1.1.2.\n\n- [pull #168] Fix handling of `log.info(err)` to use the `log` Logger's `err`\n  serializer if it has one, instead of always using the core Bunyan err\n  serializer. (By Mihai Tomescu.)\n\n\n## 1.1.0\n\n- [issue #162] Preliminary support for [browserify](http://browserify.org/).\n  See [the section in the README](../README.md#browserify).\n\n\n## 1.0.1\n\n- [issues #105, #138, #151] Export `<Logger>.addStream(...)` and\n  `<Logger>.addSerializers(...)` to be able to add them after Logger creation.\n  Thanks @andreineculau!\n\n- [issue #159] Fix bad handling in construtor guard intending to allow\n  creation without \"new\": `var log = Logger(...)`. Thanks @rmg!\n\n- [issue #156] Smaller install size via .npmignore file.\n\n- [issue #126, #161] Ignore SIGINT (Ctrl+C) when processing stdin. `...| bunyan`\n  should expect the preceding process in the pipeline to handle SIGINT. While\n  it is doing so, `bunyan` should continue to process any remaining output.\n  Thanks @timborodin and @jnordberg!\n\n- [issue #160] Stop using ANSI 'grey' in `bunyan` CLI output, because of the\n  problems that causes with Solarized Dark themes (see\n  <https://github.com/altercation/solarized/issues/220>).\n\n\n## 1.0.0\n\n- [issue #87] **Backward incompatible change to `-c CODE`** improving\n  performance by over 10x (good!), with a backward incompatible change to\n  semantics (unfortunate), and adding some sugar (good!).\n\n  The `-c CODE` implementation was changed to use a JS function for processing\n  rather than `vm.runInNewContext`. The latter was specatularly slow, so\n  won't be missed. Unfortunately this does mean a few semantic differences in\n  the `CODE`, the most noticeable of which is that **`this` is required to\n  access the object fields:**\n\n        # Bad. Works with bunyan 0.x but not 1.x.\n        $ bunyan -c 'pid === 123' foo.log\n        ...\n\n        # Good. Works with all versions of bunyan\n        $ bunyan -c 'this.pid === 123' foo.log\n        ...\n\n  The old behaviour of `-c` can be restored with the `BUNYAN_EXEC=vm`\n  environment variable:\n\n        $ BUNYAN_EXEC=vm bunyan -c 'pid === 123' foo.log\n        ...\n\n  Some sugar was also added: the TRACE, DEBUG, ... constants are defined, so\n  one can:\n\n        $ bunyan -c 'this.level >= ERROR && this.component === \"http\"' foo.log\n        ...\n\n  And example of the speed improvement on a 10 MiB log example:\n\n        $ time BUNYAN_EXEC=vm bunyan -c 'this.level === ERROR' big.log | cat >slow\n\n        real    0m6.349s\n        user    0m6.292s\n        sys    0m0.110s\n\n        $ time bunyan -c 'this.level === ERROR' big.log | cat >fast\n\n        real    0m0.333s\n        user    0m0.303s\n        sys    0m0.028s\n\n  The change was courtesy Patrick Mooney (https://github.com/pfmooney). Thanks!\n\n- Add `bunyan -0 ...` shortcut for `bunyan -o bunyan ...`.\n\n- [issue #135] **Backward incompatible.** Drop dtrace-provider even from\n  `optionalDependencies`. Dtrace-provider has proven a consistent barrier to\n  installing bunyan, because it is a binary dep. Even as an *optional* dep it\n  still caused confusion and install noise.\n\n  Users of Bunyan on dtrace-y platforms (SmartOS, Mac, Illumos, Solaris) will\n  need to manually `npm install dtrace-provider` themselves to get [Bunyan's\n  dtrace support](https://github.com/trentm/node-bunyan#runtime-log-snooping-via-dtrace)\n  to work. If not installed, bunyan should stub it out properly.\n\n\n\n## 0.23.1\n\n- [pull #125, pull #97, issue #73] Unref rotating-file timeout which was\n  preventing processes from exiting (by https://github.com/chakrit and\n  https://github.com/glenn-murray-bse). Note: this only fixes the issue\n  for node 0.10 and above.\n\n\n## 0.23.0\n\n- [issue #139] Fix `bunyan` crash on a log record with `res.header` that is an\n  object. A side effect of this improvement is that a record with `res.statusCode`\n  but no header info will render a response block, for example:\n\n        [2012-08-08T10:25:47.637Z]  INFO: my-service/12859 on my-host: some message (...)\n            ...\n            --\n            HTTP/1.1 200 OK\n            --\n            ...\n\n- [pull #42] Fix `bunyan` crash on a log record with `req.headers` that is a *string*\n  (by https://github.com/aexmachina).\n\n- Drop node 0.6 support. I can't effectively `npm install` with a node 0.6\n  anymore.\n\n- [issue #85] Ensure logging a non-object/non-string doesn't throw (by\n  https://github.com/mhart). This changes fixes:\n\n        log.info(<bool>)     # TypeError: Object.keys called on non-object\n        log.info(<function>) # \"msg\":\"\" (instead of wanted \"msg\":\"[Function]\")\n        log.info(<array>)    # \"msg\":\"\" (instead of wanted \"msg\":util.format(<array>))\n\n\n## 0.22.3\n\n- Republish the same code to npm.\n\n\n## 0.22.2\n\nNote: Bad release. The published package in the npm registry got corrupted. Use 0.22.3 or later.\n\n- [issue #131] Allow `log.info(<number>)` and, most importantly, don't crash on that.\n\n- Update 'mv' optional dep to latest.\n\n\n## 0.22.1\n\n- [issue #111] Fix a crash when attempting to use `bunyan -p` on a platform without\n  dtrace.\n\n- [issue #101] Fix a crash in `bunyan` rendering a record with unexpected \"res.headers\".\n\n\n## 0.22.0\n\n- [issue #104] `log.reopenFileStreams()` convenience method to be used with external log\n  rotation.\n\n\n## 0.21.4\n\n- [issue #96] Fix `bunyan` to default to paging (with `less`) by default in node 0.10.0.\n  The intention has always been to default to paging for node >=0.8.\n\n\n## 0.21.3\n\n- [issue #90] Fix `bunyan -p '*'` breakage in version 0.21.2.\n\n\n## 0.21.2\n\n**Note: Bad release. The switchrate change below broke `bunyan -p '*'` usage\n(see issue #90). Use 0.21.3 or later.**\n\n- [issue #88] Should be able to efficiently combine \"-l\" with \"-p *\".\n\n- Avoid DTrace buffer filling up, e.g. like this:\n\n        $ bunyan -p 42241 > /tmp/all.log\n        dtrace: error on enabled probe ID 3 (ID 75795: bunyan42241:mod-87ea640:log-trace:log-trace): out of scratch space in action #1 at DIF offset 12\n        dtrace: error on enabled probe ID 3 (ID 75795: bunyan42241:mod-87ea640:log-trace:log-trace): out of scratch space in action #1 at DIF offset 12\n        dtrace: 138 drops on CPU 4\n        ...\n\n  From Bryan: \"the DTrace buffer is filling up because the string size is so\n  large... by increasing the switchrate, you're increasing the rate at\n  which that buffer is emptied.\"\n\n\n## 0.21.1\n\n- [pull #83] Support rendering 'client_res' key in bunyan CLI (by\n  github.com/mcavage).\n\n\n## 0.21.0\n\n- 'make check' clean, 4-space indenting. No functional change here, just\n  lots of code change.\n- [issue #80, #82] Drop assert that broke using 'rotating-file' with\n  a default `period` (by github.com/ricardograca).\n\n\n## 0.20.0\n\n- [Slight backward incompatibility] Fix serializer bug introduced in 0.18.3\n  (see below) to only apply serializers to log records when appropriate.\n\n  This also makes a semantic change to custom serializers. Before this change\n  a serializer function was called for a log record key when that value was\n  truth-y. The semantic change is to call the serializer function as long\n  as the value is not `undefined`. That means that a serializer function\n  should handle falsey values such as `false` and `null`.\n\n- Update to latest 'mv' dep (required for rotating-file support) to support\n  node v0.10.0.\n\n\n## 0.19.0\n\n**WARNING**: This release includes a bug introduced in bunyan 0.18.3 (see\nbelow). Please upgrade to bunyan 0.20.0.\n\n- [Slight backward incompatibility] Change the default error serialization\n  (a.k.a. `bunyan.stdSerializers.err`) to *not* serialize all additional\n  attributes of the given error object. This is an open door to unsafe logging\n  and logging should always be safe. With this change, error serialization\n  will log these attributes: message, name, stack, code, signal. The latter\n  two are added because some core node APIs include those fields (e.g.\n  `child_process.exec`).\n\n  Concrete examples where this has hurt have been the \"domain\" change\n  necessitating 0.18.3 and a case where\n  [node-restify](https://github.com/mcavage/node-restify) uses an error object\n  as the response object. When logging the `err` and `res` in the same log\n  statement (common for restify audit logging), the `res.body` would be JSON\n  stringified as '[Circular]' as it had already been emitted for the `err` key.\n  This results in a WTF with the bunyan CLI because the `err.body` is not\n  rendered.\n\n  If you need the old behaviour back you will need to do this:\n\n        var bunyan = require('bunyan');\n        var errSkips = {\n            // Skip domain keys. `domain` especially can have huge objects that can\n            // OOM your app when trying to JSON.stringify.\n            domain: true,\n            domain_emitter: true,\n            domain_bound: true,\n            domain_thrown: true\n        };\n        bunyan.stdSerializers.err = function err(err) {\n           if (!err || !err.stack)\n               return err;\n           var obj = {\n               message: err.message,\n               name: err.name,\n               stack: getFullErrorStack(err)\n           }\n           Object.keys(err).forEach(function (k) {\n               if (err[k] !== undefined && !errSkips[k]) {\n                   obj[k] = err[k];\n               }\n           });\n           return obj;\n         };\n\n- \"long\" and \"bunyan\" output formats for the CLI. `bunyan -o long` is the default\n  format, the same as before, just called \"long\" now instead of the cheesy \"paul\"\n  name. The \"bunyan\" output format is the same as \"json-0\", just with a more\n  convenient name.\n\n\n## 0.18.3\n\n**WARNING**: This release introduced a bug such that all serializers are\napplied to all log records even if the log record did not contain the key\nfor that serializer. If a logger serializer function does not handle\nbeing given `undefined`, then you'll get warnings like this on stderr:\n\n    bunyan: ERROR: This should never happen. This is a bug in <https://github.com/trentm/node-bunyan> or in this application. Exception from \"foo\" Logger serializer: Error: ...\n        at Object.bunyan.createLogger.serializers.foo (.../myapp.js:20:15)\n        at Logger._applySerializers (.../lib/bunyan.js:644:46)\n        at Array.forEach (native)\n        at Logger._applySerializers (.../lib/bunyan.js:640:33)\n        ...\n\nand the following junk in written log records:\n\n    \"foo\":\"(Error in Bunyan log \"foo\" serializer broke field. See stderr for details.)\"\n\nPlease upgrade to bunyan 0.20.0.\n\n\n- Change the `bunyan.stdSerializers.err` serializer for errors to *exclude*\n  [the \"domain*\" keys](http://nodejs.org/docs/latest/api/all.html#all_additions_to_error_objects).\n  `err.domain` will include its assigned members which can arbitrarily large\n  objects that are not intended for logging.\n\n- Make the \"dtrace-provider\" dependency optional. I hate to do this, but\n  installing bunyan on Windows is made very difficult with this as a required\n  dep.  Even though \"dtrace-provider\" stubs out for non-dtrace-y platforms,\n  without a compiler and Python around, node-gyp just falls over.\n\n\n## 0.18.2\n\n- [pull #67] Remove debugging prints in rotating-file support.\n  (by github.com/chad3814).\n- Update to dtrace-provider@0.2.7.\n\n\n## 0.18.1\n\n- Get the `bunyan` CLI to **not** automatically page (i.e. pipe to `less`)\n  if stdin isn't a TTY, or if following dtrace probe output (via `-p PID`),\n  or if not given log file arguments.\n\n\n## 0.18.0\n\n- Automatic paging support in the `bunyan` CLI (similar to `git log` et al).\n  IOW, `bunyan` will open your pager (by default `less`) and pipe rendered\n  log output through it. A main benefit of this is getting colored logs with\n  a pager without the pain. Before you had to explicit use `--color` to tell\n  bunyan to color output when the output was not a TTY:\n\n        bunyan foo.log --color | less -R        # before\n        bunyan foo.log                          # now\n\n  Disable with the `--no-pager` option or the `BUNYAN_NO_PAGER=1` environment\n  variable.\n\n  Limitations: Only supported for node >=0.8. Windows is not supported (at\n  least not yet).\n\n- Switch test suite to nodeunit (still using a node-tap'ish API via\n  a helper).\n\n\n## 0.17.0\n\n- [issue #33] Log rotation support:\n\n        var bunyan = require('bunyan');\n        var log = bunyan.createLogger({\n            name: 'myapp',\n            streams: [{\n                type: 'rotating-file',\n                path: '/var/log/myapp.log',\n                count: 7,\n                period: 'daily'\n            }]\n        });\n\n\n- Tweak to CLI default pretty output: don't special case \"latency\" field.\n  The special casing was perhaps nice, but less self-explanatory.\n  Before:\n\n        [2012-12-27T21:17:38.218Z]  INFO: audit/45769 on myserver: handled: 200 (15ms, audit=true, bar=baz)\n          GET /foo\n          ...\n\n  After:\n\n        [2012-12-27T21:17:38.218Z]  INFO: audit/45769 on myserver: handled: 200 (audit=true, bar=baz, latency=15)\n          GET /foo\n          ...\n\n- *Exit* CLI on EPIPE, otherwise we sit there useless processing a huge log\n  file with, e.g.  `bunyan huge.log | head`.\n\n\n## 0.16.8\n\n- Guards on `-c CONDITION` usage to attempt to be more user friendly.\n  Bogus JS code will result in this:\n\n        $ bunyan portal.log -c 'this.req.username==boo@foo'\n        bunyan: error: illegal CONDITION code: SyntaxError: Unexpected token ILLEGAL\n          CONDITION script:\n            Object.prototype.TRACE = 10;\n            Object.prototype.DEBUG = 20;\n            Object.prototype.INFO = 30;\n            Object.prototype.WARN = 40;\n            Object.prototype.ERROR = 50;\n            Object.prototype.FATAL = 60;\n            this.req.username==boo@foo\n          Error:\n            SyntaxError: Unexpected token ILLEGAL\n                at new Script (vm.js:32:12)\n                at Function.Script.createScript (vm.js:48:10)\n                at parseArgv (/Users/trentm/tm/node-bunyan-0.x/bin/bunyan:465:27)\n                at main (/Users/trentm/tm/node-bunyan-0.x/bin/bunyan:1252:16)\n                at Object.<anonymous> (/Users/trentm/tm/node-bunyan-0.x/bin/bunyan:1330:3)\n                at Module._compile (module.js:449:26)\n                at Object.Module._extensions..js (module.js:467:10)\n                at Module.load (module.js:356:32)\n                at Function.Module._load (module.js:312:12)\n                at Module.runMain (module.js:492:10)\n\n  And all CONDITION scripts will be run against a minimal valid Bunyan\n  log record to ensure they properly guard against undefined values\n  (at least as much as can reasonably be checked). For example:\n\n        $ bunyan portal.log -c 'this.req.username==\"bob\"'\n        bunyan: error: CONDITION code cannot safely filter a minimal Bunyan log record\n          CONDITION script:\n            Object.prototype.TRACE = 10;\n            Object.prototype.DEBUG = 20;\n            Object.prototype.INFO = 30;\n            Object.prototype.WARN = 40;\n            Object.prototype.ERROR = 50;\n            Object.prototype.FATAL = 60;\n            this.req.username==\"bob\"\n          Minimal Bunyan log record:\n            {\n              \"v\": 0,\n              \"level\": 30,\n              \"name\": \"name\",\n              \"hostname\": \"hostname\",\n              \"pid\": 123,\n              \"time\": 1355514346206,\n              \"msg\": \"msg\"\n            }\n          Filter error:\n            TypeError: Cannot read property 'username' of undefined\n                at bunyan-condition-0:7:9\n                at Script.Object.keys.forEach.(anonymous function) [as runInNewContext] (vm.js:41:22)\n                at parseArgv (/Users/trentm/tm/node-bunyan-0.x/bin/bunyan:477:18)\n                at main (/Users/trentm/tm/node-bunyan-0.x/bin/bunyan:1252:16)\n                at Object.<anonymous> (/Users/trentm/tm/node-bunyan-0.x/bin/bunyan:1330:3)\n                at Module._compile (module.js:449:26)\n                at Object.Module._extensions..js (module.js:467:10)\n                at Module.load (module.js:356:32)\n                at Function.Module._load (module.js:312:12)\n                at Module.runMain (module.js:492:10)\n\n  A proper way to do that condition would be:\n\n        $ bunyan portal.log -c 'this.req && this.req.username==\"bob\"'\n\n\n\n## 0.16.7\n\n- [issue #59] Clear a possibly interrupted ANSI color code on signal\n  termination.\n\n\n## 0.16.6\n\n- [issue #56] Support `bunyan -p NAME` to dtrace all PIDs matching 'NAME' in\n  their command and args (using `ps -A -o pid,command | grep NAME` or, on SunOS\n  `pgrep -lf NAME`). E.g.:\n\n        bunyan -p myappname\n\n  This is useful for usage of node's [cluster\n  module](http://nodejs.org/docs/latest/api/all.html#all_cluster) where you'll\n  have multiple worker processes.\n\n\n## 0.16.5\n\n- Allow `bunyan -p '*'` to capture bunyan dtrace probes from **all** processes.\n- issue #55: Add support for `BUNYAN_NO_COLOR` environment variable to\n  turn off all output coloring. This is still overridden by the `--color`\n  and `--no-color` options.\n\n\n## 0.16.4\n\n- issue #54: Ensure (again, see 0.16.2) that stderr from the dtrace child\n  process (when using `bunyan -p PID`) gets through. There had been a race\n  between exiting bunyan and the flushing of the dtrace process' stderr.\n\n\n## 0.16.3\n\n- Drop 'trentm-dtrace-provider' fork dep now that\n  <https://github.com/chrisa/node-dtrace-provider/pull/24> has been resolved.\n  Back to dtrace-provider.\n\n\n## 0.16.2\n\n- Ensure that stderr from the dtrace child process (when using `bunyan -p PID`)\n  gets through. The `pipe` usage wasn't working on SmartOS. This is important\n  to show the user if they need to 'sudo'.\n\n\n## 0.16.1\n\n- Ensure that a possible dtrace child process (with using `bunyan -p PID`) is\n  terminated on signal termination of the bunyan CLI (at least for SIGINT,\n  SIGQUIT, SIGTERM, SIGHUP).\n\n\n## 0.16.0\n\n- Add `bunyan -p PID` support. This is a convenience wrapper that effectively\n  calls:\n\n        dtrace -x strsize=4k -qn 'bunyan$PID:::log-*{printf(\"%s\", copyinstr(arg0))}' | bunyan\n\n\n## 0.15.0\n\n- issue #48: Dtrace support! The elevator pitch is you can watch all logging\n  from all Bunyan-using process with something like this:\n\n        dtrace -x strsize=4k -qn 'bunyan*:::log-*{printf(\"%d: %s: %s\", pid, probefunc, copyinstr(arg0))}'\n\n  And this can include log levels *below* what the service is actually configured\n  to log. E.g. if the service is only logging at INFO level and you need to see\n  DEBUG log messages, with this you can. Obviously this only works on dtrace-y\n  platforms: Illumos derivatives of SunOS (e.g. SmartOS, OmniOS), Mac, FreeBSD.\n\n  Or get the bunyan CLI to render logs nicely:\n\n        dtrace -x strsize=4k -qn 'bunyan*:::log-*{printf(\"%s\", copyinstr(arg0))}' | bunyan\n\n  See <https://github.com/trentm/node-bunyan#dtrace-support> for details. By\n  Bryan Cantrill.\n\n\n## 0.14.6\n\n- Export `bunyan.safeCycles()`. This may be useful for custom `type == \"raw\"`\n  streams that may do JSON stringification of log records themselves. Usage:\n\n        var str = JSON.stringify(rec, bunyan.safeCycles());\n\n- [issue #49] Allow a `log.child()` to specify the level of inherited streams.\n  For example:\n\n        # Before\n        var childLog = log.child({...});\n        childLog.level('debug');\n\n        # After\n        var childLog = log.child({..., level: 'debug'});\n\n- Improve the Bunyan CLI crash message to make it easier to provide relevant\n  details in a bug report.\n\n\n## 0.14.5\n\n- Fix a bug in the long-stack-trace error serialization added in 0.14.4. The\n  symptom:\n\n        bunyan@0.14.4: .../node_modules/bunyan/lib/bunyan.js:1002\n          var ret = ex.stack || ex.toString();\n                      ^\n        TypeError: Cannot read property 'stack' of undefined\n            at getFullErrorStack (.../node_modules/bunyan/lib/bunyan.js:1002:15)\n            ...\n\n\n## 0.14.4\n\n- **Bad release. Use 0.14.5 instead.**\n- Improve error serialization to walk the chain of `.cause()` errors\n  from the likes of `WError` or `VError` error classes from\n  [verror](https://github.com/davepacheco/node-verror) and\n  [restify v2.0](https://github.com/mcavage/node-restify). Example:\n\n        [2012-10-11T00:30:21.871Z] ERROR: imgapi/99612 on 0525989e-2086-4270-b960-41dd661ebd7d: my-message\n            ValidationFailedError: my-message; caused by TypeError: cause-error-message\n                at Server.apiPing (/opt/smartdc/imgapi/lib/app.js:45:23)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server.setupReq (/opt/smartdc/imgapi/lib/app.js:178:9)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server.parseBody (/opt/smartdc/imgapi/node_modules/restify/lib/plugins/body_parser.js:15:33)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server.parseQueryString (/opt/smartdc/imgapi/node_modules/restify/lib/plugins/query.js:40:25)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server._run (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:579:17)\n                at Server._handle.log.trace.req (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:480:38)\n            Caused by: TypeError: cause-error-message\n                at Server.apiPing (/opt/smartdc/imgapi/lib/app.js:40:25)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server.setupReq (/opt/smartdc/imgapi/lib/app.js:178:9)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server.parseBody (/opt/smartdc/imgapi/node_modules/restify/lib/plugins/body_parser.js:15:33)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server.parseQueryString (/opt/smartdc/imgapi/node_modules/restify/lib/plugins/query.js:40:25)\n                at next (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:550:50)\n                at Server._run (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:579:17)\n                at Server._handle.log.trace.req (/opt/smartdc/imgapi/node_modules/restify/lib/server.js:480:38)\n\n\n## 0.14.2\n\n- [issue #45] Fix bunyan CLI (default output mode) to not crash on a 'res'\n  field that isn't a response object, but a string.\n\n\n## 0.14.1\n\n- [issue #44] Fix the default `bunyan` CLI output of a `res.body` that is an\n  object instead of a string. See issue#38 for the same with `req.body`.\n\n\n## 0.14.0\n\n- [pull #41] Safe `JSON.stringify`ing of emitted log records to avoid blowing\n  up on circular objects (by Isaac Schlueter).\n\n\n## 0.13.5\n\n- [issue #39] Fix a bug with `client_req` handling in the default output\n  of the `bunyan` CLI.\n\n\n## 0.13.4\n\n- [issue #38] Fix the default `bunyan` CLI output of a `req.body` that is an\n  object instead of a string.\n\n\n## 0.13.3\n\n- Export `bunyan.resolveLevel(NAME-OR-NUM)` to resolve a level name or number\n  to its log level number value:\n\n        > bunyan.resolveLevel('INFO')\n        30\n        > bunyan.resolveLevel('debug')\n        20\n\n  A side-effect of this change is that the uppercase level name is now allowed\n  in the logger constructor.\n\n\n## 0.13.2\n\n- [issue #35] Ensure that an accidental `log.info(BUFFER)`, where BUFFER is\n  a node.js Buffer object, doesn't blow up.\n\n\n## 0.13.1\n\n- [issue #34] Ensure `req.body`, `res.body` and other request/response fields\n  are emitted by the `bunyan` CLI (mostly by Rob Gulewich).\n\n\n\n## 0.13.0\n\n- [issue #31] Re-instate defines for the (uppercase) log level names (TRACE,\n  DEBUG, etc.) in `bunyan -c \"...\"` filtering condition code. E.g.:\n\n        $ ... | bunyan -c 'level >= ERROR'\n\n\n## 0.12.0\n\n- [pull #32] `bunyan -o short` for more concise output (by Dave Pacheco). E.g.:\n\n        22:56:52.856Z  INFO myservice: My message\n\n  instead of:\n\n        [2012-02-08T22:56:52.856Z]  INFO: myservice/123 on example.com: My message\n\n\n## 0.11.3\n\n- Add '--strict' option to `bunyan` CLI to suppress all but legal Bunyan JSON\n  log lines. By default non-JSON, and non-Bunyan lines are passed through.\n\n\n## 0.11.2\n\n- [issue #30] Robust handling of 'req' field without a 'headers' subfield\n  in `bunyan` CLI.\n- [issue #31] Pull the TRACE, DEBUG, et al defines from `bunyan -c \"...\"`\n  filtering code. This was added in v0.11.1, but has a significant adverse\n  affect.\n\n\n## 0.11.1\n\n- **Bad release. The TRACE et al names are bleeding into the log records\n  when using '-c'.**\n- Add defines for the (uppercase) log level names (TRACE, DEBUG, etc.) in\n  `bunyan -c \"...\"` filtering condition code. E.g.:\n\n        $ ... | bunyan -c 'level >= ERROR'\n\n\n## 0.11.0\n\n- [pull #29] Add -l/--level for level filtering, and -c/--condition for\n  arbitrary conditional filtering (by github.com/isaacs):\n\n        $ ... | bunyan -l error   # filter out log records below error\n        $ ... | bunyan -l 50      # numeric value works too\n        $ ... | bunyan -c 'level===50'              # equiv with -c filtering\n        $ ... | bunyan -c 'pid===123'               # filter on any field\n        $ ... | bunyan -c 'pid===123' -c '_audit'   # multiple filters\n\n\n## 0.10.0\n\n- [pull #24] Support for gzip'ed log files in the bunyan CLI (by\n  github.com/mhart):\n\n        $ bunyan foo.log.gz\n        ...\n\n\n## 0.9.0\n\n- [pull #16] Bullet proof the `bunyan.stdSerializers` (by github.com/rlidwka).\n\n- [pull #15] The `bunyan` CLI will now chronologically merge multiple log\n  streams when it is given multiple file arguments. (by github.com/davepacheco)\n\n        $ bunyan foo.log bar.log\n        ... merged log records ...\n\n- [pull #15] A new `bunyan.RingBuffer` stream class that is useful for\n  keeping the last N log messages in memory. This can be a fast way to keep\n  recent, and thus hopefully relevant, log messages. (by @dapsays,\n  github.com/davepacheco)\n\n  Potential uses: Live debugging if a running process could inspect those\n  messages. One could dump recent log messages at a finer log level than is\n  typically logged on\n  [`uncaughtException`](http://nodejs.org/docs/latest/api/all.html#all_event_uncaughtexception).\n\n        var ringbuffer = new bunyan.RingBuffer({ limit: 100 });\n        var log = new bunyan({\n            name: 'foo',\n            streams: [{\n                type: 'raw',\n                stream: ringbuffer,\n                level: 'debug'\n            }]\n        });\n\n        log.info('hello world');\n        console.log(ringbuffer.records);\n\n- Add support for \"raw\" streams. This is a logging stream that is given\n  raw log record objects instead of a JSON-stringified string.\n\n        function Collector() {\n            this.records = [];\n        }\n        Collector.prototype.write = function (rec) {\n            this.records.push(rec);\n        }\n        var log = new Logger({\n            name: 'mylog',\n            streams: [{\n                type: 'raw',\n                stream: new Collector()\n            }]\n        });\n\n  See \"examples/raw-stream.js\". I expect raw streams to be useful for\n  piping Bunyan logging to separate services (e.g. <http://www.loggly.com/>,\n  <https://github.com/etsy/statsd>) or to separate in-process handling.\n\n- Add test/corpus/*.log files (accidentally excluded) so the test suite\n  actually works(!).\n\n\n## 0.8.0\n\n- [pull #21] Bunyan loggers now re-emit `fs.createWriteStream` error events.\n  By github.com/EvanOxfeld. See \"examples/handle-fs-error.js\" and\n  \"test/error-event.js\" for details.\n\n        var log = new Logger({name: 'mylog', streams: [{path: FILENAME}]});\n        log.on('error', function (err, stream) {\n            // Handle error writing to or creating FILENAME.\n        });\n\n- jsstyle'ing (via `make check`)\n\n\n## 0.7.0\n\n- [issue #12] Add `bunyan.createLogger(OPTIONS)` form, as is more typical in\n  node.js APIs.  This'll eventually become the preferred form.\n\n\n## 0.6.9\n\n- Change `bunyan` CLI default output to color \"src\" info red. Before the \"src\"\n  information was uncolored. The \"src\" info is the filename, line number and\n  function name resulting from using `src: true` in `Logger` creation. I.e.,\n  the `(/Users/trentm/tm/node-bunyan/examples/hi.js:10)` in:\n\n        [2012-04-10T22:28:58.237Z]  INFO: myapp/39339 on banana.local (/Users/trentm/tm/node-bunyan/examples/hi.js:10): hi\n\n- Tweak `bunyan` CLI default output to still show an \"err\" field if it doesn't\n  have a \"stack\" attribute.\n\n\n## 0.6.8\n\n- Fix bad bug in `log.child({...}, true);` where the added child fields **would\n  be added to the parent's fields**. This bug only existed for the \"fast child\"\n  path (that second `true` argument). A side-effect of fixing this is that\n  the \"fast child\" path is only 5 times as fast as the regular `log.child`,\n  instead of 10 times faster.\n\n\n## 0.6.7\n\n- [issue #6] Fix bleeding 'type' var to global namespace. (Thanks Mike!)\n\n\n## 0.6.6\n\n- Add support to the `bunyan` CLI taking log file path args, `bunyan foo.log`,\n  in addition to the usual `cat foo.log | bunyan`.\n- Improve reliability of the default output formatting of the `bunyan` CLI.\n  Before it could blow up processing log records missing some expected\n  fields.\n\n\n## 0.6.5\n\n- ANSI coloring output from `bunyan` CLI tool (for the default output mode/style).\n  Also add the '--color' option to force coloring if the output stream is not\n  a TTY, e.g. `cat my.log | bunyan --color | less -R`. Use `--no-color` to\n  disable coloring, e.g. if your terminal doesn't support ANSI codes.\n- Add 'level' field to log record before custom fields for that record. This\n  just means that the raw record JSON will show the 'level' field earlier,\n  which is a bit nicer for raw reading.\n\n\n## 0.6.4\n\n- [issue #5] Fix `log.info() -> boolean` to work properly. Previous all were\n  returning false. Ditto all trace/debug/.../fatal methods.\n\n\n## 0.6.3\n\n- Allow an optional `msg` and arguments to the `log.info(<Error> err)` logging\n  form. For example, before:\n\n        log.debug(my_error_instance)            // good\n        log.debug(my_error_instance, \"boom!\")   // wasn't allowed\n\n  Now the latter is allowed if you want to expliciting set the log msg. Of course\n  this applies to all the `log.{trace|debug|info...}()` methods.\n\n- `bunyan` cli output: clarify extra fields with quoting if empty or have\n  spaces. E.g. 'cmd' and 'stderr' in the following:\n\n        [2012-02-12T00:30:43.736Z] INFO: mo-docs/43194 on banana.local: buildDocs results (req_id=185edca2-2886-43dc-911c-fe41c09ec0f5, route=PutDocset, error=null, stderr=\"\", cmd=\"make docs\")\n\n\n## 0.6.2\n\n- Fix/guard against unintended inclusion of some files in npm published package\n  due to <https://github.com/isaacs/npm/issues/2144>\n\n\n## 0.6.1\n\n- Internal: starting jsstyle usage.\n- Internal: add .npmignore. Previous packages had reams of bunyan crud in them.\n\n\n## 0.6.0\n\n- Add 'pid' automatic log record field.\n\n\n## 0.5.3\n\n- Add 'client_req' (HTTP client request) standard formatting in `bunyan` CLI\n  default output.\n- Improve `bunyan` CLI default output to include *all* log record keys. Unknown keys\n  are either included in the first line parenthetical (if short) or in the indented\n  subsequent block (if long or multiline).\n\n\n## 0.5.2\n\n- [issue #3] More type checking of `new Logger(...)` and `log.child(...)`\n  options.\n- Start a test suite.\n\n\n## 0.5.1\n\n- [issue #2] Add guard on `JSON.stringify`ing of log records before emission.\n  This will prevent `log.info` et al throwing on record fields that cannot be\n  represented as JSON. An error will be printed on stderr and a clipped log\n  record emitted with a 'bunyanMsg' key including error details. E.g.:\n\n        bunyan: ERROR: could not stringify log record from /Users/trentm/tm/node-bunyan/examples/unstringifyable.js:12: TypeError: Converting circular structure to JSON\n        {\n          \"name\": \"foo\",\n          \"hostname\": \"banana.local\",\n          \"bunyanMsg\": \"bunyan: ERROR: could not stringify log record from /Users/trentm/tm/node-bunyan/examples/unstringifyable.js:12: TypeError: Converting circular structure to JSON\",\n        ...\n\n  Some timing shows this does effect log speed:\n\n        $ node tools/timeguard.js     # before\n        Time try/catch-guard on JSON.stringify:\n         - log.info:  0.07365ms per iteration\n        $ node tools/timeguard.js     # after\n        Time try/catch-guard on JSON.stringify:\n         - log.info:  0.07368ms per iteration\n\n\n## 0.5.0\n\n- Use 10/20/... instead of 1/2/... for level constant values. Ostensibly this\n  allows for intermediary levels from the defined \"trace/debug/...\" set.\n  However, that is discouraged. I'd need a strong user argument to add\n  support for easily using alternative levels. Consider using a separate\n  JSON field instead.\n- s/service/name/ for Logger name field. \"service\" is unnecessarily tied\n  to usage for a service. No need to differ from log4j Logger \"name\".\n- Add `log.level(...)` and `log.levels(...)` API for changing logger stream\n  levels.\n- Add `TRACE|DEBUG|INFO|WARN|ERROR|FATAL` level constants to exports.\n- Add `log.info(err)` special case for logging an `Error` instance. For\n  example `log.info(new TypeError(\"boom\")` will produce:\n\n        ...\n        \"err\": {\n          \"message\": \"boom\",\n          \"name\": \"TypeError\",\n          \"stack\": \"TypeError: boom\\n    at Object.<anonymous> ...\"\n        },\n        \"msg\": \"boom\",\n        ...\n\n\n## 0.4.0\n\n- Add `new Logger({src: true})` config option to have a 'src' attribute be\n  automatically added to log records with the log call source info. Example:\n\n        \"src\": {\n          \"file\": \"/Users/trentm/tm/node-bunyan/examples/src.js\",\n          \"line\": 20,\n          \"func\": \"Wuzzle.woos\"\n        },\n\n\n## 0.3.0\n\n- `log.child(options[, simple])` Added `simple` boolean arg. Set `true` to\n  assert that options only add fields (no config changes). Results in a 10x\n  speed increase in child creation. See \"tools/timechild.js\". On my Mac,\n  \"fast child\" creation takes about 0.001ms. IOW, if your app is dishing\n  10,000 req/s, then creating a log child for each request will take\n  about 1% of the request time.\n- `log.clone` -> `log.child` to better reflect the relationship: streams and\n  serializers are inherited. Streams can't be removed as part of the child\n  creation. The child doesn't own the parent's streams (so can't close them).\n- Clean up Logger creation. The goal here was to ensure `log.child` usage\n  is fast. TODO: measure that.\n- Add `Logger.stdSerializers.err` serializer which is necessary to get good\n  Error object logging with node 0.6 (where core Error object properties\n  are non-enumerable).\n\n\n## 0.2.0\n\n- Spec'ing core/recommended log record fields.\n- Add `LOG_VERSION` to exports.\n- Improvements to request/response serializations.\n\n\n## 0.1.0\n\nFirst release.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.740234375,
          "content": "# Contributing to node-bunyan\n\nThanks for using node-bunyan and for considering contributing to it! Or perhaps\nyou are just here to get a sniff for what is going on with node-bunyan\ndevelopment.\n\n\n## How you can help\n\nIf you want to help me here, great! Thank you! Some ideas:\n\n- Do you have experience with and/or recommendations for a good automated\n  testing service? Ideally I'd like support for Mac, Linux, SmartOS, and maybe\n  Windows. Also, support for node.js versions 0.10 up to whatever the current\n  latest is. Are those too tall an order? What's more, Bunyan is meant to work\n  (at least partially) in the browser. Is there a good service for that?\n  Please discuss on [issue #342](https://github.com/trentm/node-bunyan/issues/342).\n\n- Fielding issues labelled with \"[Type-Question][Type-Question]\", if you are familiar\n  with Bunyan and know how to answer them, would be great.\n\n- If you want to dive into code, but aren't *that* familiar with node-bunyan,\n  then [issues labelled with Experience-Easy][Experience-Easy] are a good\n  place to start.\n\n- [Once I've made a once over\n  triaging](https://github.com/trentm/node-bunyan/issues/335) and consolidating\n  issues and PRs, volunteering for issues in a particular\n  [component](#component) with which you have familiarity would be great.\n\n[Type-Question]: https://github.com/trentm/node-bunyan/issues?q=is%3Aopen+is%3Aissue+label%3AType-Question\n\n\n## Trent's Biased Rules for Code\n\nIn the hope that it makes it easier to get PRs into Bunyan, here is my biased\nlist of what I typically want. Submitting a PR without all of these is\n*totally fine*! The only side-effect is that it may take longer for me to\nprovide feedback on it and merge it. I'll politely request missing pieces.\n\n\n- Please follow existing code style. Contributed code must pass `make check`.\n  (Note: I intended to [change to eslint\n  soon](https://github.com/trentm/node-bunyan/issues/341), so currently `make\n  check` might be a moving target.)\n\n- Any user visible change in behaviour should almost certainly include an\n  update to the docs. Currently the \"docs\" is the README.md.\n\n- Adding a test case for code changes is **stronly recommended**, else I\n  can't easily promise to not break your fix/feature later. If you don't\n  grok the test suite, please ask. We can use it to form the basis for a\n  \"test/README.md\".\n\n- Typically a code change should have an associated issue or PR. This allows\n  addition of follow-up issues, discussion, test data, etc. to be associated\n  with the commit. Just using GitHub pull requests makes this easy.\n\n- All but the most trivial code changes should have an addition to the\n  [changelog](./CHANGES.md). The audience for the changelog is *Bunyan users*.\n  However, because rebasing longer-lived PRs against master is a pain\n  with a change to CHANGES.md, please **do not include a CHANGES.md change\n  in your PR. Instead suggest a CHANGES.md addition in a comment on the\n  PR.**\n\n- Good commit messages, please:\n    - The first line should be a succinct summary of the issue or fix. A\n      good candidate is to just cut 'n paste the issue title, if there is one.\n    - If the commit is for a particular issue/PR (see previous rule), please\n      list the issue number in the commit message. E.g. \"Fixes #123\" or \"Related\n      to #234\".\n    - The audience for commit messages is *Bunyan developers*.\n\n\n## Pull Request Lifecycle\n\n(Language adapted from\n[terraform](https://github.com/hashicorp/terraform/blob/master/CONTRIBUTING.md).)\n\n- You are welcome to submit your pull request for commentary or review before it\n  is fully completed. Please prefix the title of your pull request with \"[WIP]\"\n  to indicate this. It's also a good idea to include specific questions or items\n  you'd like feedback on.\n\n- Once you believe your pull request is ready to be merged, you can remove any\n  \"[WIP]\" prefix from the title and a core team member will review. See\n  Trent's Biased Rules above to help ensure that your contribution will be\n  merged quickly.\n\n- Trent or, if things go well, a node-bunyan maintainer will look over your\n  contribution and either provide comments letting you know if there is anything\n  left to do. Please be patient. Unfortunately, I'm not able to carve out\n  a *lot* of time for Bunyan development and maintenance.\n\n- Once all outstanding comments and checklist items have been addressed, your\n  contribution will be merged. Merged PRs will be included in the next\n  node-bunyan release.\n\n- In some cases, we might decide that a PR should be closed. We'll make sure to\n  provide clear reasoning when this happens.\n\n\n## Issue labels\n\nThe point of issue labeling for node-bunyan is to help answer \"what should be\nworked on now? what can be left for later?\" I don't want issue labelling to\nbecome a burden for anyone, so (a) don't feel obliged to add them yourself and\n(b) I'm happy to reevaluate their usage.\n\nBunyan shall have categories of [issue\nlabels](https://github.com/trentm/node-bunyan/labels) named \"$category-$value\".\nAn issue should have max *one* label from each set. Users of Google Code's\ndearly departed issue tracker may remember this kind of thing. This is a\npoorman's version of structured issue tracker metadata.\n\nI'm inclined to *not* do priorities right now. *Possibly* we'll use GitHub\nmilestones to basically set targets for upcoming releases. But otherwise my\nsense is that for smaller OSS projects, assigning prios will get in the way.\nIf people would think it helpful, I'd consider \"Difficulty-\" or \"Experience-\"\ncategories (a la Rust's \"E-\" labels) to mark easier and intermediate tasks\nthat someone interested but maybe not very familiar with Bunyan might want\nto tackle.\n\nFor now, here are the various labels and their purpose:\n\n### Meta\n\n- needstriage: Temporary label to help me do a single triage pass through all\n  current open issues and PRs.\n  See [#335](https://github.com/trentm/node-bunyan/issues/335)\n  where I'm working through this.\n\n### Type\n\nColor: green\n\n- Type-Unknown: If it is still unclear or undecided if an issue is an intended\n  feature (perhaps arguing for better docs or examples to avoid confusion) or a\n  bug, I will use this category.\n- Type-Question: Asking a question on Bunyan usage, about the project, etc.\n- Type-Bug: A bug in Bunyan's behaviour.\n- Type-Improvement: A new feature or other improvement.\n- Type-Doc: Issues with Bunyan's documentation.\n- Type-Task: A project task to be done.\n\nTODO: consider Type-Unknown for the \"unclear if bug or feature\" tickets.\n\n### Component\n\nColor: blue\n\n- Component-Project: Project meta stuff like testing, linting, build, install,\n  etc.\n- Component-CLI: The `bunyan` command-line tool.\n- Component-Lib: catch-all for other library stuff\n    - Component-LibRotation: The bunyan library's log rotation support.\n    - Component-LibBrowser: Bunyan's handling/support for running in the browser.\n    - Component-LibFlush: A separate component for collecting the tickets related\n      to closing/flushing bunyan streams on process shutdown.\n\nThe point of components is to find like issues to help with reference, search\nand resolving them. If no component fits an issue/PR, then don't add a label.\n\n### Resolution\n\nColor: red\n\n- Resolution-WontFix\n- Resolution-Duplicate\n- Resolution-Fixed: Also used to indicate \"doc written\", \"question answered\",\n  \"feature implemented\".\n- Resolution-CannotRepro: After some reasonable attempt by maintainers to\n  reproduce a bug report, I want it to be non-controversial to close it\n  and mark it with this. If given more info by someone able to repro, we\n  can happy re-open issues.\n\n### Experience\n\nColor: yellow\n\n- Experience-Easy: Relatively little experience with node-bunyan should be\n  required to complete this issue.\n- Experience-NeedsTest: Typically added to an issue or PR that needs a test\n  case. Someone familiar enough with node-bunyan's test suite could tackle this.\n- Experience-Hard: At a guess, this is a thorny issue that requires known\n  node-bunyan well, knowing node.js well, requires design review or all of\n  these.\n\nOne of the \"Experience-\\*\" labels can optionally be put on an issue or PR to\nindicate what kind of experience a contributor would need with node-bunyan\n(and/or node.js) to complete it. For example, if you're looking for somewhere to\nstart, check out the [Experience-Easy][Experience-Easy] tag. This category idea\nis borrowed from [rust's E-\\* labels][rust-issue-triage].\n\n[Experience-Easy]: https://github.com/trentm/node-bunyan/issues?q=is%3Aopen+is%3Aissue+label%3AExperience-Easy\n[rust-issue-triage]: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#issue-triage\n\n\n## Acknowledgements\n\nAnything good about this document is thanks to inspiration from\n[rust](https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md) and, more\nrecently\n[terraform](https://github.com/hashicorp/terraform/blob/master/CONTRIBUTING.md).\nAnything bad about it, is my fault.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0791015625,
          "content": "# This is the MIT license\n\nCopyright 2016 Trent Mick\nCopyright 2016 Joyent Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.8876953125,
          "content": "\nSHELL := bash\n\n#---- Tools\n\nTAP_EXEC := ./node_modules/.bin/tap\nSUDO := sudo\nifeq ($(shell uname -s),SunOS)\n\t# On SunOS (e.g. SmartOS) we expect to run the test suite as the\n\t# root user -- necessary to run dtrace. Therefore `pfexec` isn't\n\t# necessary.\n\tSUDO :=\nendif\nDTRACE_UP_IN_HERE=\nifeq ($(shell uname -s),SunOS)\n    DTRACE_UP_IN_HERE=1\nendif\nifeq ($(shell uname -s),Darwin)\n    DTRACE_UP_IN_HERE=1\nendif\n\n\n#---- Files\n\nJSSTYLE_FILES := $(shell find lib test tools examples -name \"*.js\") bin/bunyan\n\n\n#---- Targets\n\nall $(TAP_EXEC):\n\tnpm install $(NPM_INSTALL_FLAGS)\n\n# Ensure all version-carrying files have the same version.\n.PHONY: versioncheck\nversioncheck:\n\t@echo version is: $(shell node -e 'console.log(require(\"./package.json\").version)')\n\t[[ `node -e 'console.log(require(\"./package.json\").version)'` == `grep '^## ' CHANGES.md | head -2 | tail -1 | awk '{print $$2}'` ]]\n\t@echo Version check ok.\n\n.PHONY: cutarelease\ncutarelease: check\n\t[[ -z `git status --short` ]]  # If this fails, the working dir is dirty.\n\t@which json 2>/dev/null 1>/dev/null && \\\n\t    ver=$(shell json -f package.json version) && \\\n\t    name=$(shell json -f package.json name) && \\\n\t    publishedVer=$(shell npm view -j $(shell json -f package.json name)@$(shell json -f package.json version) version 2>/dev/null) && \\\n\t    if [[ -n \"$$publishedVer\" ]]; then \\\n\t\techo \"error: $$name@$$ver is already published to npm\"; \\\n\t\texit 1; \\\n\t    fi && \\\n\t    echo \"** Are you sure you want to tag and publish $$name@$$ver to npm?\" && \\\n\t    echo \"** Enter to continue, Ctrl+C to abort.\" && \\\n\t    read\n\tver=$(shell cat package.json | json version) && \\\n\t    date=$(shell date -u \"+%Y-%m-%d\") && \\\n\t    git tag -a \"$$ver\" -m \"version $$ver ($$date) beta\" && \\\n\t    git push --tags origin && \\\n\t    npm publish --tag beta\n\n.PHONY: docs\ndocs: toc\n\t@[[ `which ronn` ]] || (echo \"No 'ronn' on your PATH. Install with 'gem install ronn'\" && exit 2)\n\tmkdir -p man/man1\n\tronn --style=toc --manual=\"bunyan manual\" --date=$(shell git log -1 --pretty=format:%cd --date=short) --roff --html docs/bunyan.1.ronn\n\tpython -c 'import sys; h = open(\"docs/bunyan.1.html\").read(); h = h.replace(\".mp dt.flush {float:left;width:8ex}\", \"\"); open(\"docs/bunyan.1.html\", \"w\").write(h)'\n\tpython -c 'import sys; h = open(\"docs/bunyan.1.html\").read(); h = h.replace(\"</body>\", \"\"\"<a href=\"https://github.com/trentm/node-bunyan\"><img style=\"position: absolute; top: 0; right: 0; border: 0;\" src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\" alt=\"Fork me on GitHub\"></a></body>\"\"\"); open(\"docs/bunyan.1.html\", \"w\").write(h)'\n\t@echo \"# test with 'man ./docs/bunyan.1' and 'open ./docs/bunyan.1.html'\"\n\n# Re-generate the README.md table of contents.\ntoc:\n\t./node_modules/.bin/markdown-toc -i README.md\n\n\n.PHONY: publish\npublish:\n\tmkdir -p tmp\n\t[[ -d tmp/bunyan-gh-pages ]] || git clone git@github.com:trentm/node-bunyan.git tmp/bunyan-gh-pages\n\tcd tmp/bunyan-gh-pages && git checkout gh-pages && git pull --rebase origin gh-pages\n\tcp docs/index.html tmp/bunyan-gh-pages/index.html\n\tcp docs/bunyan.1.html tmp/bunyan-gh-pages/bunyan.1.html\n\t(cd tmp/bunyan-gh-pages \\\n\t\t&& git commit -a -m \"publish latest docs\" \\\n\t\t&& git push origin gh-pages || true)\n\n.PHONY: distclean\ndistclean:\n\trm -rf node_modules\n\n\n#---- test\n\n.PHONY: test\ntest: $(TAP_EXEC)\n\ttest -z \"$(DTRACE_UP_IN_HERE)\" || test -n \"$(SKIP_DTRACE)\" || \\\n\t\t(node -e 'require(\"dtrace-provider\").createDTraceProvider(\"isthisthingon\")' && \\\n\t\techo \"\\nNote: Use 'SKIP_DTRACE=1 make test' to skip parts of the test suite that require root.\" && \\\n\t\t$(SUDO) $(TAP_EXEC) test/dtrace/*.test.js)\n\t$(TAP_EXEC) test/*.test.js\n\n\n#---- check\n\n.PHONY: check-jsstyle\ncheck-jsstyle: $(JSSTYLE_FILES)\n\t./tools/jsstyle -o indent=4,doxygen,unparenthesized-return=0,blank-after-start-comment=0,leading-right-paren-ok=1 $(JSSTYLE_FILES)\n\n.PHONY: check\ncheck: check-jsstyle versioncheck\n\t@echo \"Check ok.\"\n\n.PHONY: prepush\nprepush: check testall\n\t@echo \"Okay to push.\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 45.5126953125,
          "content": "[![npm version](https://img.shields.io/npm/v/bunyan.svg?style=flat)](https://www.npmjs.com/package/bunyan)\n[![Build Status](https://travis-ci.org/trentm/node-bunyan.svg?branch=master)](https://travis-ci.org/trentm/node-bunyan)\n\nBunyan is **a simple and fast JSON logging library** for node.js services:\n\n```js\nvar bunyan = require('bunyan');\nvar log = bunyan.createLogger({name: \"myapp\"});\nlog.info(\"hi\");\n```\n\nand **a `bunyan` CLI tool** for nicely viewing those logs:\n\n![bunyan CLI screenshot](https://raw.github.com/trentm/node-bunyan/master/tools/screenshot1.png)\n\nManifesto: Server logs should be structured. JSON's a good format. Let's do\nthat. A log record is one line of `JSON.stringify`'d output. Let's also\nspecify some common names for the requisite and common fields for a log\nrecord (see below).\n\n\n## Table of Contents\n\n<!-- toc -->\n\n- [Current Status](#current-status)\n- [Installation](#installation)\n- [Features](#features)\n- [Introduction](#introduction)\n  * [Constructor API](#constructor-api)\n  * [Log Method API](#log-method-api)\n  * [CLI Usage](#cli-usage)\n  * [Streams Introduction](#streams-introduction)\n  * [log.child](#logchild)\n  * [Serializers](#serializers)\n    + [Requirements for serializers functions](#requirements-for-serializers-functions)\n    + [Standard Serializers](#standard-serializers)\n  * [src](#src)\n- [Levels](#levels)\n  * [Level suggestions](#level-suggestions)\n- [Log Record Fields](#log-record-fields)\n  * [Core fields](#core-fields)\n  * [Recommended/Best Practice Fields](#recommendedbest-practice-fields)\n  * [Other fields to consider](#other-fields-to-consider)\n- [Streams](#streams)\n  * [Adding a Stream](#adding-a-stream)\n  * [stream errors](#stream-errors)\n  * [stream type: `stream`](#stream-type-stream)\n  * [stream type: `file`](#stream-type-file)\n  * [stream type: `rotating-file`](#stream-type-rotating-file)\n  * [stream type: `raw`](#stream-type-raw)\n  * [`raw` + RingBuffer Stream](#raw--ringbuffer-stream)\n  * [third-party streams](#third-party-streams)\n- [Runtime log snooping via DTrace](#runtime-log-snooping-via-dtrace)\n  * [DTrace examples](#dtrace-examples)\n- [Runtime environments](#runtime-environments)\n  * [Browserify](#browserify)\n  * [Webpack](#webpack)\n- [Versioning](#versioning)\n- [License](#license)\n- [See Also](#see-also)\n\n<!-- tocstop -->\n\n# Current Status\n\nStable. I do my best to follow semver: i.e. you should only need to worry\nabout code breaking for a *major* version bump.  Bunyan currently supports node\n0.10 and greater. Follow <a href=\"https://twitter.com/intent/user?screen_name=trentmick\"\ntarget=\"_blank\">@trentmick</a> for updates to Bunyan.\n\nThere is an email discussion list\n[bunyan-logging@googlegroups.com](mailto:bunyan-logging@googlegroups.com),\nalso [as a forum in the\nbrowser](https://groups.google.com/forum/?fromgroups#!forum/bunyan-logging).\n\nActive branches:\n- \"1.x\" is for 1.x maintenance work, if any. 1.x releases are still \"latest\" in\n  npm.\n- \"master\" is currently for coming Bunyan 2.x work. For now, 2.x releases are\n  published to npm with the \"beta\" tag, meaning that `npm install bunyan` is\n  still 1.x for now. To install 2.x use `npm install bunyan@2` or\n  `npm install bunyan@beta`.\n\n\n# Installation\n\n```sh\nnpm install bunyan\n```\n\n**Tip**: The `bunyan` CLI tool is written to be compatible (within reason) with\nall versions of Bunyan logs. Therefore you might want to `npm install -g bunyan`\nto get the bunyan CLI on your PATH, then use local bunyan installs for\nnode.js library usage of bunyan in your apps.\n\n**Tip**: Installing without optional dependencies can dramatically reduce\nbunyan's install size. **dtrace-provider** is used for dtrace features,\n**mv** is used for RotatingFileStream, and **moment** is used for local time.\nIf you don't need these features, consider installing with the\n`--no-optional` flag.\n\n\n# Features\n\n- elegant [log method API](#log-method-api)\n- extensible [streams](#streams) system for controlling where log records\n  go (to a stream, to a file, [log file rotation](#stream-type-rotating-file),\n  etc.)\n- [`bunyan` CLI](#cli-usage) for pretty-printing and filtering of Bunyan logs\n- simple include of log call source location (file, line, function) with\n  [`src: true`](#src)\n- lightweight specialization of Logger instances with [`log.child`](#logchild)\n- custom rendering of logged objects with [\"serializers\"](#serializers)\n- [Runtime log snooping via DTrace support](#runtime-log-snooping-via-dtrace)\n- Support for a few [runtime environments](#runtime-environments): Node.js,\n  [Browserify](http://browserify.org/), [Webpack](https://webpack.github.io/), [NW.js](http://nwjs.io/).\n\n\n# Introduction\n\nLike most logging libraries you create a Logger instance and call methods\nnamed after the logging levels:\n\n```js\n// hi.js\nvar bunyan = require('bunyan');\nvar log = bunyan.createLogger({name: 'myapp'});\nlog.info('hi');\nlog.warn({lang: 'fr'}, 'au revoir');\n```\n\nAll loggers must provide a \"name\". This is somewhat akin to the log4j logger\n\"name\", but Bunyan doesn't do hierarchical logger names.\n\n**Bunyan log records are JSON.** A few fields are added automatically:\n\"pid\", \"hostname\", \"time\" and \"v\".\n\n```sh\n$ node hi.js\n{\"name\":\"myapp\",\"hostname\":\"banana.local\",\"pid\":40161,\"level\":30,\"msg\":\"hi\",\"time\":\"2013-01-04T18:46:23.851Z\",\"v\":0}\n{\"name\":\"myapp\",\"hostname\":\"banana.local\",\"pid\":40161,\"level\":40,\"lang\":\"fr\",\"msg\":\"au revoir\",\"time\":\"2013-01-04T18:46:23.853Z\",\"v\":0}\n```\n\n\n## Constructor API\n\n```js\nvar bunyan = require('bunyan');\nvar log = bunyan.createLogger({\n    name: <string>,                     // Required\n    level: <level name or number>,      // Optional, see \"Levels\" section\n    stream: <node.js stream>,           // Optional, see \"Streams\" section\n    streams: [<bunyan streams>, ...],   // Optional, see \"Streams\" section\n    serializers: <serializers mapping>, // Optional, see \"Serializers\" section\n    src: <boolean>,                     // Optional, see \"src\" section\n\n    // Any other fields are added to all log records as is.\n    foo: 'bar',\n    ...\n});\n```\n\n\n## Log Method API\n\nThe example above shows two different ways to call `log.info(...)`. The\nfull API is:\n\n```js\nlog.info();     // Returns a boolean: is the \"info\" level enabled?\n                // This is equivalent to `log.isInfoEnabled()` or\n                // `log.isEnabledFor(INFO)` in log4j.\n\nlog.info('hi');                     // Log a simple string message (or number).\nlog.info('hi %s', bob, anotherVar); // Uses `util.format` for msg formatting.\n\nlog.info({foo: 'bar'}, 'hi');\n                // The first field can optionally be a \"fields\" object, which\n                // is merged into the log record.\n\nlog.info(err);  // Special case to log an `Error` instance to the record.\n                // This adds an \"err\" field with exception details\n                // (including the stack) and sets \"msg\" to the exception\n                // message.\nlog.info(err, 'more on this: %s', more);\n                // ... or you can specify the \"msg\".\n\nlog.info({foo: 'bar', err: err}, 'some msg about this error');\n                // To pass in an Error *and* other fields, use the `err`\n                // field name for the Error instance **and ensure your logger\n                // has a `err` serializer.** One way to ensure the latter is:\n                //      var log = bunyan.createLogger({\n                //          ...,\n                //          serializers: bunyan.stdSerializers\n                //      });\n                // See the \"Serializers\" section below for details.\n```\n\nNote that this implies **you cannot blindly pass any object as the first\nargument to log it** because that object might include fields that collide with\nBunyan's [core record fields](#core-fields). In other words,\n`log.info(mywidget)` may not yield what you expect. Instead of a string\nrepresentation of `mywidget` that other logging libraries may give you, Bunyan\nwill try to JSON-ify your object. It is a Bunyan best practice to always give a\nfield name to included objects, e.g.:\n\n```js\nlog.info({widget: mywidget}, ...)\n```\n\nThis will dove-tail with [Bunyan serializer support](#serializers), discussed\nlater.\n\nThe same goes for all of Bunyan's log levels: `log.trace`, `log.debug`,\n`log.info`, `log.warn`, `log.error`, and `log.fatal`. See the [levels\nsection](#levels) below for details and suggestions.\n\n\n## CLI Usage\n\nBunyan log output is a stream of JSON objects. This is great for processing,\nbut not for reading directly. A **`bunyan` tool** is provided **for\npretty-printing bunyan logs** and for **filtering** (e.g.\n`| bunyan -c 'this.foo == \"bar\"'`). Using our example above:\n\n```sh\n$ node hi.js | ./node_modules/.bin/bunyan\n[2013-01-04T19:01:18.241Z]  INFO: myapp/40208 on banana.local: hi\n[2013-01-04T19:01:18.242Z]  WARN: myapp/40208 on banana.local: au revoir (lang=fr)\n```\n\nSee the screenshot above for an example of the default coloring of rendered\nlog output. That example also shows the nice formatting automatically done for\nsome well-known log record fields (e.g. `req` is formatted like an HTTP request,\n`res` like an HTTP response, `err` like an error stack trace).\n\nOne interesting feature is **filtering** of log content, which can be useful\nfor digging through large log files or for analysis. We can filter only\nrecords above a certain level:\n\n```sh\n$ node hi.js | bunyan -l warn\n[2013-01-04T19:08:37.182Z]  WARN: myapp/40353 on banana.local: au revoir (lang=fr)\n```\n\nOr filter on the JSON fields in the records (e.g. only showing the French\nrecords in our contrived example):\n\n```sh\n$ node hi.js | bunyan -c 'this.lang == \"fr\"'\n[2013-01-04T19:08:26.411Z]  WARN: myapp/40342 on banana.local: au revoir (lang=fr)\n```\n\nSee `bunyan --help` for other facilities.\n\n\n## Streams Introduction\n\nBy default, log output is to stdout and at the \"info\" level. Explicitly that\nlooks like:\n\n```js\nvar log = bunyan.createLogger({\n    name: 'myapp',\n    stream: process.stdout,\n    level: 'info'\n});\n```\n\nThat is an abbreviated form for a single stream. **You can define multiple\nstreams at different levels**.\n\n```js\nvar log = bunyan.createLogger({\n  name: 'myapp',\n  streams: [\n    {\n      level: 'info',\n      stream: process.stdout            // log INFO and above to stdout\n    },\n    {\n      level: 'error',\n      path: '/var/tmp/myapp-error.log'  // log ERROR and above to a file\n    }\n  ]\n});\n```\n\nMore on streams in the [Streams section](#streams) below.\n\n## log.child\n\nBunyan has a concept of a child logger to **specialize a logger for a\nsub-component of your application**, i.e. to create a new logger with\nadditional bound fields that will be included in its log records. A child\nlogger is created with `log.child(...)`.\n\nIn the following example, logging on a \"Wuzzle\" instance's `this.log` will\nbe exactly as on the parent logger with the addition of the `widget_type`\nfield:\n\n```js\nvar bunyan = require('bunyan');\nvar log = bunyan.createLogger({name: 'myapp'});\n\nfunction Wuzzle(options) {\n    this.log = options.log.child({widget_type: 'wuzzle'});\n    this.log.info('creating a wuzzle')\n}\nWuzzle.prototype.woos = function () {\n    this.log.warn('This wuzzle is woosey.')\n}\n\nlog.info('start');\nvar wuzzle = new Wuzzle({log: log});\nwuzzle.woos();\nlog.info('done');\n```\n\nRunning that looks like (raw):\n\n```sh\n$ node myapp.js\n{\"name\":\"myapp\",\"hostname\":\"myhost\",\"pid\":34572,\"level\":30,\"msg\":\"start\",\"time\":\"2013-01-04T07:47:25.814Z\",\"v\":0}\n{\"name\":\"myapp\",\"hostname\":\"myhost\",\"pid\":34572,\"widget_type\":\"wuzzle\",\"level\":30,\"msg\":\"creating a wuzzle\",\"time\":\"2013-01-04T07:47:25.815Z\",\"v\":0}\n{\"name\":\"myapp\",\"hostname\":\"myhost\",\"pid\":34572,\"widget_type\":\"wuzzle\",\"level\":40,\"msg\":\"This wuzzle is woosey.\",\"time\":\"2013-01-04T07:47:25.815Z\",\"v\":0}\n{\"name\":\"myapp\",\"hostname\":\"myhost\",\"pid\":34572,\"level\":30,\"msg\":\"done\",\"time\":\"2013-01-04T07:47:25.816Z\",\"v\":0}\n```\n\nAnd with the `bunyan` CLI (using the \"short\" output mode):\n\n```sh\n$ node myapp.js  | bunyan -o short\n07:46:42.707Z  INFO myapp: start\n07:46:42.709Z  INFO myapp: creating a wuzzle (widget_type=wuzzle)\n07:46:42.709Z  WARN myapp: This wuzzle is woosey. (widget_type=wuzzle)\n07:46:42.709Z  INFO myapp: done\n```\n\nA more practical example is in the\n[node-restify](https://github.com/mcavage/node-restify) web framework.\nRestify uses Bunyan for its logging. One feature of its integration, is that\nif `server.use(restify.requestLogger())` is used, each restify request handler\nincludes a `req.log` logger that is:\n\n```js\nlog.child({req_id: <unique request id>}, true)\n```\n\nApps using restify can then use `req.log` and have all such log records\ninclude the unique request id (as \"req\\_id\"). Handy.\n\n\n## Serializers\n\nBunyan has a concept of **\"serializer\" functions to produce a JSON-able object\nfrom a JavaScript object**, so you can easily do the following:\n\n```js\nlog.info({req: <request object>}, 'something about handling this request');\n```\n\nand have the `req` entry in the log record be just a reasonable subset of\n`<request object>` fields (or computed data about those fields).\n\n\nA logger instance can have a `serializers` mapping of log record field name\n(\"req\" in this example) to a serializer function. When creating the log record,\nBunyan will call the serializer function for *top-level* fields of that name. An\nexample:\n\n```js\nfunction reqSerializer(req) {\n    return {\n        method: req.method,\n        url: req.url,\n        headers: req.headers\n    };\n}\nvar log = bunyan.createLogger({\n    name: 'myapp',\n    serializers: {\n        req: reqSerializer\n    }\n});\n```\n\n\nTypically serializers are added to a logger at creation time via:\n\n```js\nvar log = bunyan.createLogger({\n    name: 'myapp',\n    serializers: {\n        foo: function fooSerializer(foo) { ... },\n        ...\n    }\n});\n\n// or\nvar log = bunyan.createLogger({\n    name: 'myapp',\n    serializers: bunyan.stdSerializers\n});\n```\n\nSerializers can also be added after creation via `<logger>.addSerializers(...)`,\ne.g.:\n\n```js\nvar log = bunyan.createLogger({name: 'myapp'});\nlog.addSerializers({req: reqSerializer});\n```\n\n### Requirements for serializers functions\n\nA serializer function is passed unprotected objects that are passed to the\n`log.info`, `log.debug`, etc. call. This means a poorly written serializer\nfunction can cause side-effects. Logging shouldn't do that. Here are a few\nrules and best practices for serializer functions:\n\n- A serializer function *should never throw*. The bunyan library *does*\n  protect somewhat from this: if the serializer throws an error, then\n  bunyan will (a) write an ugly message on stderr (along with the traceback),\n  and (b) the field in the log record will be replaced with a short error message.\n  For example:\n\n    ```\n    bunyan: ERROR: Exception thrown from the \"foo\" Bunyan serializer. This should never happen. This is a bug in that serializer function.\n    TypeError: Cannot read property 'not' of undefined\n        at Object.fooSerializer [as foo] (/Users/trentm/tm/node-bunyan/bar.js:8:26)\n        at /Users/trentm/tm/node-bunyan/lib/bunyan.js:873:50\n        at Array.forEach (native)\n        at Logger._applySerializers (/Users/trentm/tm/node-bunyan/lib/bunyan.js:865:35)\n        at mkRecord (/Users/trentm/tm/node-bunyan/lib/bunyan.js:978:17)\n        at Logger.info (/Users/trentm/tm/node-bunyan/lib/bunyan.js:1044:19)\n        at Object.<anonymous> (/Users/trentm/tm/node-bunyan/bar.js:13:5)\n        at Module._compile (module.js:409:26)\n        at Object.Module._extensions..js (module.js:416:10)\n        at Module.load (module.js:343:32)\n    {\"name\":\"bar\",\"hostname\":\"danger0.local\",\"pid\":47411,\"level\":30,\"foo\":\"(Error in Bunyan log \\\"foo\\\" serializer broke field. See stderr for details.)\",\"msg\":\"one\",\"time\":\"2017-03-08T02:53:51.173Z\",\"v\":0}\n    ```\n\n- A serializer function *should never mutate the given object*. Doing so will\n  change the object in your application.\n\n- A serializer function *should be defensive*. In my experience, it is common to\n  set a serializer in an app, say for field name \"foo\", and then accidentally\n  have a log line that passes a \"foo\" that is undefined, or null, or of some\n  unexpected type. A good start at defensiveness is to start with this:\n\n    ```javascript\n    function fooSerializer(foo) {\n        // Guard against foo be null/undefined. Check that expected fields\n        // are defined.\n        if (!foo || !foo.bar)\n            return foo;\n        var obj = {\n            // Create the object to be logged.\n            bar: foo.bar\n        }\n        return obj;\n    };\n    ```\n\n\n### Standard Serializers\n\nBunyan includes a small set of \"standard serializers\", exported as\n`bunyan.stdSerializers`. Their use is completely optional. An example using\nall of them:\n\n```js\nvar log = bunyan.createLogger({\n    name: 'myapp',\n    serializers: bunyan.stdSerializers\n});\n```\n\nor particular ones:\n\n```js\nvar log = bunyan.createLogger({\n    name: 'myapp',\n    serializers: {err: bunyan.stdSerializers.err}\n});\n```\n\nStandard serializers are:\n\n| Field | Description |\n| ----- | ----------- |\n| err   | Used for serializing JavaScript error objects, including traversing an error's cause chain for error objects with a `.cause()` -- e.g. as from [verror](https://github.com/joyent/node-verror). |\n| req   | Common fields from a node.js HTTP request object. |\n| res   | Common fields from a node.js HTTP response object. |\n\nNote that the `req` and `res` serializers intentionally do not include the\nrequest/response *body*, as that can be prohibitively large. If helpful, the\n[restify framework's audit logger plugin](https://github.com/restify/node-restify/blob/ac13902ad9716dcb20aaa62295403983075b1841/lib/plugins/audit.js#L38-L87)\nhas its own req/res serializers that include more information (optionally\nincluding the body).\n\n\n## src\n\nThe **source file, line and function of the log call site** can be added to\nlog records by using the `src: true` config option:\n\n```js\nvar log = bunyan.createLogger({src: true, ...});\n```\n\nThis adds the call source info with the 'src' field, like this:\n\n```js\n{\n  \"name\": \"src-example\",\n  \"hostname\": \"banana.local\",\n  \"pid\": 123,\n  \"component\": \"wuzzle\",\n  \"level\": 4,\n  \"msg\": \"This wuzzle is woosey.\",\n  \"time\": \"2012-02-06T04:19:35.605Z\",\n  \"src\": {\n    \"file\": \"/Users/trentm/tm/node-bunyan/examples/src.js\",\n    \"line\": 20,\n    \"func\": \"Wuzzle.woos\"\n  },\n  \"v\": 0\n}\n```\n\n**WARNING: Determining the call source info is slow. Never use this option\nin production.**\n\n\n# Levels\n\nThe log levels in bunyan are as follows. The level descriptions are best\npractice *opinions* of the author.\n\n- \"fatal\" (60): The service/app is going to stop or become unusable now.\n  An operator should definitely look into this soon.\n- \"error\" (50): Fatal for a particular request, but the service/app continues\n  servicing other requests. An operator should look at this soon(ish).\n- \"warn\" (40): A note on something that should probably be looked at by an\n  operator eventually.\n- \"info\" (30): Detail on regular operation.\n- \"debug\" (20): Anything else, i.e. too verbose to be included in \"info\" level.\n- \"trace\" (10): Logging from external libraries used by your app or *very*\n  detailed application logging.\n\nSetting a logger instance (or one of its streams) to a particular level implies\nthat all log records *at that level and above* are logged. E.g. a logger set to\nlevel \"info\" will log records at level info and above (warn, error, fatal).\n\nWhile using log level *names* is preferred, the actual level values are integers\ninternally (10 for \"trace\", ..., 60 for \"fatal\"). Constants are defined for\nthe levels: `bunyan.TRACE` ... `bunyan.FATAL`. The lowercase level names are\naliases supported in the API, e.g. `log.level(\"info\")`. There is one exception:\nDTrace integration uses the level names. The fired DTrace probes are named\n'bunyan-$levelName'.\n\nHere is the API for querying and changing levels on an existing logger.\nRecall that a logger instance has an array of output \"streams\":\n\n```js\nlog.level() -> INFO   // gets current level (lowest level of all streams)\n\nlog.level(INFO)       // set all streams to level INFO\nlog.level(\"info\")     // set all streams to level INFO\n\nlog.levels() -> [DEBUG, INFO]   // get array of levels of all streams\nlog.levels(0) -> DEBUG          // get level of stream at index 0\nlog.levels(\"foo\")               // get level of stream with name \"foo\"\n\nlog.levels(0, INFO)             // set level of stream 0 to INFO\nlog.levels(0, \"info\")           // can use \"info\" et al aliases\nlog.levels(\"foo\", WARN)         // set stream named \"foo\" to WARN\n```\n\n\n## Level suggestions\n\nTrent's biased suggestions for server apps: Use \"debug\" sparingly. Information\nthat will be useful to debug errors *post mortem* should usually be included in\n\"info\" messages if it's generally relevant or else with the corresponding\n\"error\" event. Don't rely on spewing mostly irrelevant debug messages all the\ntime and sifting through them when an error occurs.\n\nTrent's biased suggestions for node.js libraries: IMHO, libraries should only\never log at `trace`-level. Fine control over log output should be up to the\napp using a library. Having a library that spews log output at higher levels\ngets in the way of a clear story in the *app* logs.\n\n\n# Log Record Fields\n\nThis section will describe *rules* for the Bunyan log format: field names,\nfield meanings, required fields, etc. However, a Bunyan library doesn't\nstrictly enforce all these rules while records are being emitted. For example,\nBunyan will add a `time` field with the correct format to your log records,\nbut you can specify your own. It is the caller's responsibility to specify\nthe appropriate format.\n\nThe reason for the above leniency is because IMO logging a message should\nnever break your app. This leads to this rule of logging: **a thrown\nexception from `log.info(...)` or equivalent (other than for calling with the\nincorrect signature) is always a bug in Bunyan.**\n\n\nA typical Bunyan log record looks like this:\n\n```js\n{\"name\":\"myserver\",\"hostname\":\"banana.local\",\"pid\":123,\"req\":{\"method\":\"GET\",\"url\":\"/path?q=1#anchor\",\"headers\":{\"x-hi\":\"Mom\",\"connection\":\"close\"}},\"level\":3,\"msg\":\"start request\",\"time\":\"2012-02-03T19:02:46.178Z\",\"v\":0}\n```\n\nPretty-printed:\n\n```js\n{\n  \"name\": \"myserver\",\n  \"hostname\": \"banana.local\",\n  \"pid\": 123,\n  \"req\": {\n    \"method\": \"GET\",\n    \"url\": \"/path?q=1#anchor\",\n    \"headers\": {\n      \"x-hi\": \"Mom\",\n      \"connection\": \"close\"\n    },\n    \"remoteAddress\": \"120.0.0.1\",\n    \"remotePort\": 51244\n  },\n  \"level\": 3,\n  \"msg\": \"start request\",\n  \"time\": \"2012-02-03T19:02:57.534Z\",\n  \"v\": 0\n}\n```\n\n## Core fields\n\n- `v`: Required. Integer. Added by Bunyan. Cannot be overridden.\n  This is the Bunyan log format version (`require('bunyan').LOG_VERSION`).\n  The log version is a single integer. `0` is until I release a version\n  \"1.0.0\" of node-bunyan. Thereafter, starting with `1`, this will be\n  incremented if there is any backward incompatible change to the log record\n  format. Details will be in \"CHANGES.md\" (the change log).\n- `level`: Required. Integer. Added by Bunyan. Cannot be overridden.\n  See the \"Levels\" section.\n- `name`: Required. String. Provided at Logger creation.\n  You must specify a name for your logger when creating it. Typically this\n  is the name of the service/app using Bunyan for logging.\n- `hostname`: Required. String. Provided or determined at Logger creation.\n  You can specify your hostname at Logger creation or it will be retrieved\n  via `os.hostname()`.\n- `pid`: Required. Integer. Filled in automatically at Logger creation.\n- `time`: Required. String. Added by Bunyan. Can be overridden.\n  The date and time of the event in [ISO 8601\n  Extended Format](http://en.wikipedia.org/wiki/ISO_8601) format and in UTC,\n  as from\n  [`Date.toISOString()`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/toISOString).\n- `msg`: Required. String.\n  Every `log.debug(...)` et al call must provide a log message.\n- `src`: Optional. Object giving log call source info. This is added\n  automatically by Bunyan if the \"src: true\" config option is given to the\n  Logger. Never use in production as this is really slow.\n\n\nGo ahead and add more fields, and nested ones are fine (and recommended) as\nwell. This is why we're using JSON. Some suggestions and best practices\nfollow (feedback from actual users welcome).\n\n\n## Recommended/Best Practice Fields\n\n- `err`: Object. A caught JS exception. Log that thing with `log.info(err)`\n    to get:\n\n    ```js\n    ...\n    \"err\": {\n      \"message\": \"boom\",\n      \"name\": \"TypeError\",\n      \"stack\": \"TypeError: boom\\n    at Object.<anonymous> ...\"\n    },\n    \"msg\": \"boom\",\n    ...\n    ```\n\n    Or use the `bunyan.stdSerializers.err` serializer in your Logger and\n    do this `log.error({err: err}, \"oops\")`. See \"examples/err.js\".\n\n- `req_id`: String. A request identifier. Including this field in all logging\n  tied to handling a particular request to your server is strongly suggested.\n  This allows post analysis of logs to easily collate all related logging\n  for a request. This really shines when you have a SOA with multiple services\n  and you carry a single request ID from the top API down through all APIs\n  (as [node-restify](https://github.com/mcavage/node-restify) facilitates\n  with its 'Request-Id' header).\n\n- `req`: An HTTP server request. Bunyan provides `bunyan.stdSerializers.req`\n  to serialize a request with a suggested set of keys. Example:\n\n    ```js\n    {\n      \"method\": \"GET\",\n      \"url\": \"/path?q=1#anchor\",\n      \"headers\": {\n        \"x-hi\": \"Mom\",\n        \"connection\": \"close\"\n      },\n      \"remoteAddress\": \"120.0.0.1\",\n      \"remotePort\": 51244\n    }\n    ```\n\n- `res`: An HTTP server response. Bunyan provides `bunyan.stdSerializers.res`\n  to serialize a response with a suggested set of keys. Example:\n\n    ```js\n    {\n      \"statusCode\": 200,\n      \"header\": \"HTTP/1.1 200 OK\\r\\nContent-Type: text/plain\\r\\nConnection: keep-alive\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n\"\n    }\n    ```\n\n## Other fields to consider\n\n- `req.username`: Authenticated user (or for a 401, the user attempting to\n  auth).\n- Some mechanism to calculate response latency. \"restify\" users will have\n  an \"X-Response-Time\" header. A `latency` custom field would be fine.\n- `req.body`: If you know that request bodies are small (common in APIs,\n  for example), then logging the request body is good.\n\n\n# Streams\n\nA \"stream\" is Bunyan's name for where it outputs log messages (the equivalent\nto a log4j Appender). Ultimately Bunyan uses a\n[Writable Stream](https://nodejs.org/docs/latest/api/all.html#writable_Stream)\ninterface, but there are some additional attributes used to create and\nmanage the stream. A Bunyan Logger instance has one or more streams.\nIn general streams are specified with the \"streams\" option:\n\n```js\nvar bunyan = require('bunyan');\nvar log = bunyan.createLogger({\n    name: \"foo\",\n    streams: [\n        {\n            stream: process.stderr,\n            level: \"debug\"\n        },\n        ...\n    ]\n});\n```\n\nFor convenience, if there is only one stream, it can be specified with the\n\"stream\" and \"level\" options (internally converted to a `Logger.streams`).\n\n```js\nvar log = bunyan.createLogger({\n    name: \"foo\",\n    stream: process.stderr,\n    level: \"debug\"\n});\n```\n\nNote that \"file\" streams do not support this shortcut (partly for historical\nreasons and partly to not make it difficult to add a literal \"path\" field\non log records).\n\nIf neither \"streams\" nor \"stream\" are specified, the default is a stream of\ntype \"stream\" emitting to `process.stdout` at the \"info\" level.\n\n## Adding a Stream\n\nAfter a bunyan instance has been initialized, you may add additional streams by\ncalling the `addStream` function.\n\n```js\nvar bunyan = require('bunyan');\nvar log = bunyan.createLogger('myLogger');\nlog.addStream({\n  name: \"myNewStream\",\n  stream: process.stderr,\n  level: \"debug\"\n});\n```\n\n## stream errors\n\nA Bunyan logger instance can be made to re-emit \"error\" events from its\nstreams. Bunyan does so by default for [`type === \"file\"`\nstreams](#stream-type-file), so you can do this:\n\n```js\nvar log = bunyan.createLogger({name: 'mylog', streams: [{path: LOG_PATH}]});\nlog.on('error', function (err, stream) {\n    // Handle stream write or create error here.\n});\n```\n\nAs of bunyan@1.7.0, the `reemitErrorEvents` field can be used when adding a\nstream to control whether \"error\" events are re-emitted on the Logger. For\nexample:\n\n    var EventEmitter = require('events').EventEmitter;\n    var util = require('util');\n\n    function MyFlakyStream() {}\n    util.inherits(MyFlakyStream, EventEmitter);\n\n    MyFlakyStream.prototype.write = function (rec) {\n        this.emit('error', new Error('boom'));\n    }\n\n    var log = bunyan.createLogger({\n        name: 'this-is-flaky',\n        streams: [\n            {\n                type: 'raw',\n                stream: new MyFlakyStream(),\n                reemitErrorEvents: true\n            }\n        ]\n    });\n    log.info('hi there');\n\nThe behaviour is as follows:\n\n- `reemitErrorEvents` not specified: `file` streams will re-emit error events\n  on the Logger instance.\n- `reemitErrorEvents: true`: error events will be re-emitted on the Logger\n  for any stream with a `.on()` function -- which includes file streams,\n  process.stdout/stderr, and any object that inherits from EventEmitter.\n- `reemitErrorEvents: false`: error events will not be re-emitted for any\n  streams.\n\nNote: \"error\" events are **not** related to log records at the \"error\" level\nas produced by `log.error(...)`. See [the node.js docs on error\nevents](https://nodejs.org/api/events.html#events_error_events) for details.\n\n\n## stream type: `stream`\n\nA `type === 'stream'` is a plain ol' node.js [Writable\nStream](http://nodejs.org/docs/latest/api/all.html#writable_Stream). A\n\"stream\" (the writable stream) field is required. E.g.: `process.stdout`,\n`process.stderr`.\n\n```js\nvar log = bunyan.createLogger({\n    name: 'foo',\n    streams: [{\n        stream: process.stderr\n        // `type: 'stream'` is implied\n    }]\n});\n```\n\n<table>\n<tr>\n<th>Field</th>\n<th>Required?</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>stream</td>\n<td>Yes</td>\n<td>-</td>\n<td>A \"Writable Stream\", e.g. a std handle or an open file write stream.</td>\n</tr>\n<tr>\n<td>type</td>\n<td>No</td>\n<td>n/a</td>\n<td>`type == 'stream'` is implied if the `stream` field is given.</td>\n</tr>\n<tr>\n<td>level</td>\n<td>No</td>\n<td>info</td>\n<td>The level to which logging to this stream is enabled. If not\nspecified it defaults to \"info\". If specified this can be one of the\nlevel strings (\"trace\", \"debug\", ...) or constants (`bunyan.TRACE`,\n`bunyan.DEBUG`, ...). This serves as a severity threshold for that stream\nso logs of greater severity will also pass through (i.e. If level=\"warn\",\nerror and fatal will also pass through this stream).</td>\n</tr>\n<tr>\n<td>name</td>\n<td>No</td>\n<td>-</td>\n<td>A name for this stream. This may be useful for usage of `log.level(NAME,\nLEVEL)`. See the [Levels section](#levels) for details. A stream \"name\" isn't\nused for anything else.</td>\n</tr>\n</table>\n\n\n## stream type: `file`\n\nA `type === 'file'` stream requires a \"path\" field. Bunyan will open this\nfile for appending. E.g.:\n\n```js\nvar log = bunyan.createLogger({\n    name: 'foo',\n    streams: [{\n        path: '/var/log/foo.log',\n        // `type: 'file'` is implied\n    }]\n});\n```\n\n<table>\n<tr>\n<th>Field</th>\n<th>Required?</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>path</td>\n<td>Yes</td>\n<td>-</td>\n<td>A file path to which to log.</td>\n</tr>\n<tr>\n<td>type</td>\n<td>No</td>\n<td>n/a</td>\n<td>`type == 'file'` is implied if the `path` field is given.</td>\n</tr>\n<tr>\n<td>level</td>\n<td>No</td>\n<td>info</td>\n<td>The level to which logging to this stream is enabled. If not\nspecified it defaults to \"info\". If specified this can be one of the\nlevel strings (\"trace\", \"debug\", ...) or constants (`bunyan.TRACE`,\n`bunyan.DEBUG`, ...). This serves as a severity threshold for that\nstream so logs of greater severity will also pass through (i.e. If\nlevel=\"warn\", error and fatal will also pass through this stream).</td>\n</tr>\n<tr>\n<td>name</td>\n<td>No</td>\n<td>-</td>\n<td>A name for this stream. This may be useful for usage of `log.level(NAME,\nLEVEL)`. See the [Levels section](#levels) for details. A stream \"name\" isn't\nused for anything else.</td>\n</tr>\n</table>\n\n\n## stream type: `rotating-file`\n\n**WARNING on node 0.8 usage:** Users of Bunyan's `rotating-file` should (a) be\nusing at least bunyan 0.23.1 (with the fix for [this\nissue](https://github.com/trentm/node-bunyan/pull/97)), and (b) should use at\nleast node 0.10 (node 0.8 does not support the `unref()` method on\n`setTimeout(...)` needed for the mentioned fix). The symptom is that process\ntermination will hang for up to a full rotation period.\n\n**WARNING on [cluster](http://nodejs.org/docs/latest/api/all.html#all_cluster)\nusage:** Using Bunyan's `rotating-file` stream with node.js's \"cluster\" module\ncan result in unexpected file rotation. You must not have multiple processes\nin the cluster logging to the same file path. In other words, you must have\na separate log file path for the master and each worker in the cluster.\nAlternatively, consider using a system file rotation facility such as\n`logrotate` on Linux or `logadm` on SmartOS/Illumos. See\n[this comment on issue #117](https://github.com/trentm/node-bunyan/issues/117#issuecomment-44804938)\nfor details.\n\nA `type === 'rotating-file'` is a file stream that handles file automatic\nrotation.\n\n```js\nvar log = bunyan.createLogger({\n    name: 'foo',\n    streams: [{\n        type: 'rotating-file',\n        path: '/var/log/foo.log',\n        period: '1d',   // daily rotation\n        count: 3        // keep 3 back copies\n    }]\n});\n```\n\nThis will rotate '/var/log/foo.log' every day (at midnight) to:\n\n```sh\n/var/log/foo.log.0     # yesterday\n/var/log/foo.log.1     # 1 day ago\n/var/log/foo.log.2     # 2 days ago\n```\n\n*Currently*, there is no support for providing a template for the rotated\nfiles, or for rotating when the log reaches a threshold size.\n\n<table>\n<tr>\n<th>Field</th>\n<th>Required?</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>type</td>\n<td>Yes</td>\n<td>-</td>\n<td>\"rotating-file\"</td>\n</tr>\n<tr>\n<td>path</td>\n<td>Yes</td>\n<td>-</td>\n<td>A file path to which to log. Rotated files will be \"$path.0\",\n\"$path.1\", ...</td>\n</tr>\n<tr>\n<td>period</td>\n<td>No</td>\n<td>1d</td>\n<td>The period at which to rotate. This is a string of the format\n\"$number$scope\" where \"$scope\" is one of \"ms\" (milliseconds -- only useful for\ntesting), \"h\" (hours), \"d\" (days), \"w\" (weeks), \"m\" (months), \"y\" (years). Or\none of the following names can be used \"hourly\" (means 1h), \"daily\" (1d),\n\"weekly\" (1w), \"monthly\" (1m), \"yearly\" (1y). Rotation is done at the start of\nthe scope: top of the hour (h), midnight (d), start of Sunday (w), start of the\n1st of the month (m), start of Jan 1st (y).</td>\n</tr>\n<tr>\n<td>count</td>\n<td>No</td>\n<td>10</td>\n<td>The number of rotated files to keep.</td>\n</tr>\n<tr>\n<td>level</td>\n<td>No</td>\n<td>info</td>\n<td>The level at which logging to this stream is enabled. If not\nspecified it defaults to \"info\". If specified this can be one of the\nlevel strings (\"trace\", \"debug\", ...) or constants (`bunyan.TRACE`,\n`bunyan.DEBUG`, ...).</td>\n</tr>\n<tr>\n<td>name</td>\n<td>No</td>\n<td>-</td>\n<td>A name for this stream. This may be useful for usage of `log.level(NAME,\nLEVEL)`. See the [Levels section](#levels) for details. A stream \"name\" isn't\nused for anything else.</td>\n</tr>\n</table>\n\n\n**Note on log rotation**: Often you may be using external log rotation utilities\nlike `logrotate` on Linux or `logadm` on SmartOS/Illumos. In those cases, unless\nyou are ensuring \"copy and truncate\" semantics (via `copytruncate` with\nlogrotate or `-c` with logadm) then the fd for your 'file' stream will change.\nYou can tell bunyan to reopen the file stream with code like this in your\napp:\n\n```js\nvar log = bunyan.createLogger(...);\n...\nprocess.on('SIGUSR2', function () {\n    log.reopenFileStreams();\n});\n```\n\nwhere you'd configure your log rotation to send SIGUSR2 (or some other signal)\nto your process. Any other mechanism to signal your app to run\n`log.reopenFileStreams()` would work as well.\n\n\n## stream type: `raw`\n\n- `raw`: Similar to a \"stream\" writable stream, except that the write method\n  is given raw log record *Object*s instead of a JSON-stringified string.\n  This can be useful for hooking on further processing to all Bunyan logging:\n  pushing to an external service, a RingBuffer (see below), etc.\n\n\n\n## `raw` + RingBuffer Stream\n\nBunyan comes with a special stream called a RingBuffer which keeps the last N\nrecords in memory and does *not* write the data anywhere else.  One common\nstrategy is to log 'info' and higher to a normal log file but log all records\n(including 'trace') to a ringbuffer that you can access via a debugger, or your\nown HTTP interface, or a post-mortem facility like MDB or node-panic.\n\nTo use a RingBuffer:\n\n```js\n/* Create a ring buffer that stores the last 100 records. */\nvar bunyan = require('bunyan');\nvar ringbuffer = new bunyan.RingBuffer({ limit: 100 });\nvar log = bunyan.createLogger({\n    name: 'foo',\n    streams: [\n        {\n            level: 'info',\n            stream: process.stdout\n        },\n        {\n            level: 'trace',\n            type: 'raw',    // use 'raw' to get raw log record objects\n            stream: ringbuffer\n        }\n    ]\n});\n\nlog.info('hello world');\nconsole.log(ringbuffer.records);\n```\n\nThis example emits:\n\n```js\n[ { name: 'foo',\n    hostname: '912d2b29',\n    pid: 50346,\n    level: 30,\n    msg: 'hello world',\n    time: '2012-06-19T21:34:19.906Z',\n    v: 0 } ]\n```\n\n## third-party streams\n\nSee the [user-maintained list in the Bunyan\nwiki](https://github.com/trentm/node-bunyan/wiki/Awesome-Bunyan).\n\n\n# Runtime log snooping via DTrace\n\nOn systems that support DTrace (e.g., illumos derivatives like SmartOS and\nOmniOS, FreeBSD, Mac), Bunyan will create a DTrace provider (`bunyan`) that\nmakes available the following probes:\n\n```sh\nlog-trace\nlog-debug\nlog-info\nlog-warn\nlog-error\nlog-fatal\n```\n\nEach of these probes has a single argument: the string that would be\nwritten to the log.  Note that when a probe is enabled, it will\nfire whenever the corresponding function is called, even if the level of\nthe log message is less than that of any stream.\n\n\n## DTrace examples\n\nTrace all log messages coming from any Bunyan module on the system.\n(The `-x strsize=4k` is to raise dtrace's default 256 byte buffer size\nbecause log messages are longer than typical dtrace probes.)\n\n```sh\ndtrace -x strsize=4k -qn 'bunyan*:::log-*{printf(\"%d: %s: %s\", pid, probefunc, copyinstr(arg0))}'\n```\n\nTrace all log messages coming from the \"wuzzle\" component:\n\n```sh\ndtrace -x strsize=4k -qn 'bunyan*:::log-*/strstr(this->str = copyinstr(arg0), \"\\\"component\\\":\\\"wuzzle\\\"\") != NULL/{printf(\"%s\", this->str)}'\n```\n\nAggregate debug messages from process 1234, by message:\n\n```sh\ndtrace -x strsize=4k -n 'bunyan1234:::log-debug{@[copyinstr(arg0)] = count()}'\n```\n\nHave the bunyan CLI pretty-print the traced logs:\n\n```sh\ndtrace -x strsize=4k -qn 'bunyan1234:::log-*{printf(\"%s\", copyinstr(arg0))}' | bunyan\n```\n\nA convenience handle has been made for this:\n\n```sh\nbunyan -p 1234\n```\n\nOn systems that support the\n[`jstack`](http://dtrace.org/blogs/dap/2012/04/25/profiling-node-js/) action\nvia a node.js helper, get a stack backtrace for any debug message that\nincludes the string \"danger!\":\n\n```sh\ndtrace -x strsize=4k -qn 'log-debug/strstr(copyinstr(arg0), \"danger!\") != NULL/{printf(\"\\n%s\", copyinstr(arg0)); jstack()}'\n```\n\nOutput of the above might be:\n\n```\n{\"name\":\"foo\",\"hostname\":\"763bf293-d65c-42d5-872b-4abe25d5c4c7.local\",\"pid\":12747,\"level\":20,\"msg\":\"danger!\",\"time\":\"2012-10-30T18:28:57.115Z\",\"v\":0}\n\n          node`0x87e2010\n          DTraceProviderBindings.node`usdt_fire_probe+0x32\n          DTraceProviderBindings.node`_ZN4node11DTraceProbe5_fireEN2v85LocalINS1_5ValueEEE+0x32d\n          DTraceProviderBindings.node`_ZN4node11DTraceProbe4FireERKN2v89ArgumentsE+0x77\n          << internal code >>\n          (anon) as (anon) at /root/node-bunyan/lib/bunyan.js position 40484\n          << adaptor >>\n          (anon) as doit at /root/my-prog.js position 360\n          (anon) as list.ontimeout at timers.js position 4960\n          << adaptor >>\n          << internal >>\n          << entry >>\n          node`_ZN2v88internalL6InvokeEbNS0_6HandleINS0_10JSFunctionEEENS1_INS0_6ObjectEEEiPS5_Pb+0x101\n          node`_ZN2v88internal9Execution4CallENS0_6HandleINS0_6ObjectEEES4_iPS4_Pbb+0xcb\n          node`_ZN2v88Function4CallENS_6HandleINS_6ObjectEEEiPNS1_INS_5ValueEEE+0xf0\n          node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_8FunctionEEEiPNS1_INS0_5ValueEEE+0x11f\n          node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_6StringEEEiPNS1_INS0_5ValueEEE+0x66\n          node`_ZN4node9TimerWrap9OnTimeoutEP10uv_timer_si+0x63\n          node`uv__run_timers+0x66\n          node`uv__run+0x1b\n          node`uv_run+0x17\n          node`_ZN4node5StartEiPPc+0x1d0\n          node`main+0x1b\n          node`_start+0x83\n\n          node`0x87e2010\n          DTraceProviderBindings.node`usdt_fire_probe+0x32\n          DTraceProviderBindings.node`_ZN4node11DTraceProbe5_fireEN2v85LocalINS1_5ValueEEE+0x32d\n          DTraceProviderBindings.node`_ZN4node11DTraceProbe4FireERKN2v89ArgumentsE+0x77\n          << internal code >>\n          (anon) as (anon) at /root/node-bunyan/lib/bunyan.js position 40484\n          << adaptor >>\n          (anon) as doit at /root/my-prog.js position 360\n          (anon) as list.ontimeout at timers.js position 4960\n          << adaptor >>\n          << internal >>\n          << entry >>\n          node`_ZN2v88internalL6InvokeEbNS0_6HandleINS0_10JSFunctionEEENS1_INS0_6ObjectEEEiPS5_Pb+0x101\n          node`_ZN2v88internal9Execution4CallENS0_6HandleINS0_6ObjectEEES4_iPS4_Pbb+0xcb\n          node`_ZN2v88Function4CallENS_6HandleINS_6ObjectEEEiPNS1_INS_5ValueEEE+0xf0\n          node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_8FunctionEEEiPNS1_INS0_5ValueEEE+0x11f\n          node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_6StringEEEiPNS1_INS0_5ValueEEE+0x66\n          node`_ZN4node9TimerWrap9OnTimeoutEP10uv_timer_si+0x63\n          node`uv__run_timers+0x66\n          node`uv__run+0x1b\n          node`uv_run+0x17\n          node`_ZN4node5StartEiPPc+0x1d0\n          node`main+0x1b\n          node`_start+0x83\n```\n\n\n# Runtime environments\n\nNode-bunyan supports running in a few runtime environments:\n\n- [Node.js](https://nodejs.org/)\n- [Browserify](http://browserify.org/): See the\n  [Browserify section](#browserify) below.\n- [Webpack](https://webpack.github.io/): See the [Webpack section](#webpack) below.\n- [NW.js](http://nwjs.io/)\n\nSupport for other runtime environments is welcome. If you have suggestions,\nfixes, or mentions that node-bunyan already works in some other JavaScript\nruntime, please open an [issue](https://github.com/trentm/node-bunyan/issues/new)\nor a pull request.\n\nThe primary target is Node.js. It is the only environment in which I\nregularly test. If you have suggestions for how to automate testing for other\nenvironments, I'd appreciate feedback on [this automated testing\nissue](https://github.com/trentm/node-bunyan/issues/342).\n\n## Browserify\n\nAs the [Browserify](http://browserify.org/) site says it \"lets you\n`require('modules')` in the browser by bundling up all of your dependencies.\"\nIt is a build tool to run on your node.js script to bundle up your script and\nall its node.js dependencies into a single file that is runnable in the\nbrowser via:\n\n```html\n<script src=\"play.browser.js\"></script>\n```\n\nAs of version 1.1.0, node-bunyan supports being run via Browserify. The\ndefault [stream](#streams) when running in the browser is one that emits\nraw log records to `console.log/info/warn/error`.\n\nHere is a quick example showing you how you can get this working for your\nscript.\n\n1. Get browserify and bunyan installed in your module:\n\n    ```sh\n    $ npm install browserify bunyan\n    ```\n\n2. An example script using Bunyan, \"play.js\":\n\n    ```js\n    var bunyan = require('bunyan');\n    var log = bunyan.createLogger({name: 'play', level: 'debug'});\n    log.trace('this one does not emit');\n    log.debug('hi on debug');   // console.log\n    log.info('hi on info');     // console.info\n    log.warn('hi on warn');     // console.warn\n    log.error('hi on error');   // console.error\n    ```\n\n3. Build this into a bundle to run in the browser, \"play.browser.js\":\n\n    ```sh\n    $ ./node_modules/.bin/browserify play.js -o play.browser.js\n    ```\n\n4. Put that into an HTML file, \"play.html\":\n\n    ```html\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <script src=\"play.browser.js\"></script>\n    </head>\n    <body>\n      <div>hi</div>\n    </body>\n    </html>\n    ```\n\n5. Open that in your browser and open your browser console:\n\n    ```sh\n    $ open play.html\n    ```\n\nHere is what it looks like in Firefox's console: ![Bunyan + Browserify in the\nFirefox console](./docs/img/bunyan.browserify.png)\n\nFor some, the raw log records might not be desired. To have a rendered log line\nyou'll want to add your own stream, starting with something like this:\n\n```js\nvar bunyan = require('./lib/bunyan');\n\nfunction MyRawStream() {}\nMyRawStream.prototype.write = function (rec) {\n    console.log('[%s] %s: %s',\n        rec.time.toISOString(),\n        bunyan.nameFromLevel[rec.level],\n        rec.msg);\n}\n\nvar log = bunyan.createLogger({\n    name: 'play',\n    streams: [\n        {\n            level: 'info',\n            stream: new MyRawStream(),\n            type: 'raw'\n        }\n    ]\n});\n\nlog.info('hi on info');\n```\n\n## webpack\nTo include bunyan in your webpack bundle you need to tell webpack to\nignore the optional dependencies that are unavailable in browser environments.\n\nMark the following dependencies as\n[externals](https://webpack.js.org/configuration/externals/) in your webpack\nconfiguration file to exclude them from the bundle:\n\n```\nmodule: {\n    externals: ['dtrace-provider', 'fs', 'mv', 'os', 'source-map-support']\n}\n```\n\n# Versioning\n\nAll versions are `<major>.<minor>.<patch>` which will be incremented for\nbreaking backward compat and major reworks, new features without breaking\nchange, and bug fixes, respectively. tl;dr: [Semantic\nversioning](http://semver.org/).\n\n# License\n\n[MIT](./LICENSE.txt).\n\n# See Also\n\nSee the [user-maintained list of Bunyan-related software in the Bunyan\nwiki](https://github.com/trentm/node-bunyan/wiki/Awesome-Bunyan).\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 5.5546875,
          "content": "# v2\n\n- `createLogger(<config-and-fields>, <fields>)` changes (#460)\n    - see section below\n- the dtrace-provider thing (#487)\n    TODO: answer Cody email\n- use package.json version for VERSION\n- use deps\n    - dashdash\n    - assert-plus?\n    - verror?\n- break out to multiple files\n    - want to work through PRs before that, so don't just break them all\n- TODO: a quick pass through tickets and pulls for other things to include\n- get ticket refs for the above, if any\n- formatters: read up again on `glp master..1.x`\n- support for customer formatters\n    - for the CLI as well? How? ~/.bunyanrc?\n- if doing ~/.bunyanrc, then consider color schemes\n\n\n\n# changes to ctor and log.child to separate fields from config\n\n<https://github.com/trentm/node-bunyan/issues/460>\n\nCurrent:\n\n    createLogger(<config-and-fields>)\n    log.child(<config-and-fields>, <just-fields-bool>)\n\nCould be:\n\n    createLogger(<config-and-fields>, <fields>)\n    log.child(<config-and-fields>, <fields>)\n        # Still support: log.child(<config-and-fields>, <just-fields-bool>)\n\nPros: Compat issues are minimal: a change is only required if there is a\ncollision with used field and a new config var name.\nCons: A *slight* con is that my guess is the common usage of child is\n`log.child(<fields>)`, so the more future-proof common usage becomes:\n\n    log.child(null, <fields>)\n\nThat's not too bad. It is clearer at least than:\n\n    log.child(<fields>, true)\n\nTODO:\n\n- is there a ticket for this work already?  #460\n- make the change\n- do a migration guide? i.e. provide the grep commands to find all\n  possible calls to inspect. E.g. if don't have `rg logUndefined` in your\n  code, then you are fine. And one time future-proofing via changing\n  to fields in the *second* arg.\n- list of issues/pulls that wanted to add new config fields\n\n\n# higher prio\n\n- published organized advice for\n  https://github.com/trentm/node-bunyan/issues/37 so can close that out.\n  Perhaps a wiki page with examples and strategies.\n- man page for the bunyan CLI (refer to it in the readme)\n    - perhaps wait for a bunyan new version with deps, and use dashdash\n      with a (vapour) man page generator\n\n\n# docs\n\n- document log.addStream() and log.addSerializers()\n\n\n# someday/maybe\n\n- 2.0 (?) with `v: 1` in log records. Fwd/bwd compat in `bunyan` CLI\n- `tail -f`-like support\n- full-on docs\n- better examples/\n- better coloring\n- look at pino (bunyan style, perf benefits), also logpp (https://github.com/mrkmarron/logpp)\n- would be exciting to have bunyan support in http://lnav.org/ if that\n  made sense\n- \"template\" support for 'rotating-file' stream to get dated rolled files\n- \"all\" or \"off\" levels? log4j? logging.py?\n  logging.py has NOTSET === 0. I think that is only needed/used for\n  multi-level hierarchical effective level.\n- buffered writes to increase speed:\n    - I'd start with a tools/timeoutput.js for some numbers to compare\n      before/after. Sustained high output to a file.\n    - perhaps this would be a \"buffered: true\" option on the stream object\n    - then wrap the \"stream\" with a local class that handles the buffering\n    - to finish this, need the 'log.close' and `process.on('exit', ...)`\n      work that Trent has started.\n- \"canWrite\" handling for full streams. Need to buffer a la log4js\n- test file log with logadm rotation: does it handle that?\n- test suite:\n    - test for a cloned logger double-`stream.end()` causing problems.\n      Perhaps the \"closeOnExit\" for existing streams should be false for\n      clones.\n    - test that a `log.clone(...)` adding a new field matching a serializer\n      works *and* that an existing field in the parent is not *re-serialized*.\n- split out `bunyan` cli to a \"bunyan\" or \"bunyan-reader\" or \"node-bunyan-reader\"\n  as the basis for tools to consume bunyan logs. It can grow indep of node-bunyan\n  for generating the logs.\n  It would take a Bunyan log record object and be expected to emit it.\n\n        node-bunyan-reader\n            .createReadStream(path, [options]) ?\n\n- coloring bug: in less the indented extra info lines only have the first\n  line colored. Do we need the ANSI char on *each* line? That'll be\n  slower.\n- document \"well-known\" keys from bunyan CLI p.o.v.. Add \"client_req\".\n- More `bunyan` output formats and filtering features.\n- Think about a bunyan dashboard that supports organizing and viewing logs\n  from multiple hosts and services.\n- doc the restify RequestCaptureStream usage of RingBuffer. Great example.\n- A vim plugin (a la http://vim.cybermirror.org/runtime/autoload/zip.vim ?) to\n  allow browsing (read-only) a bunyan log in rendered form.\n- Some speed comparisons with others to get a feel for Bunyan's speed.\n- what about promoting 'latency' field and making that easier?\n- `log.close` to close streams and shutdown and `this.closed`\n  process.on('exit', log.close)\n  -> 'end' for the name\n- bunyan cli: more layouts (http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/EnhancedPatternLayout.html)\n  Custom log formats (in config file? in '-f' arg) using printf or hogan.js\n  or whatever. Dap wants field width control for lining up. Hogan.js is\n  probably overkill for this.\n- loggly example using raw streams, hook.io?, whatever.\n- serializer support:\n    - restify-server.js example -> restifyReq ? or have `req` detect that.\n      That is nicer for the \"use all standard ones\". *Does* restify req\n      have anything special?\n    - differential HTTP *client* req/res with *server* req/res.\n- statsd stream? http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/\n  Think about it.\n- web ui. Ideas: http://googlecloudplatform.blogspot.ca/2014/04/a-new-logs-viewer-for-google-cloud.html\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 107.935546875,
          "content": "{\n  \"name\": \"bunyan\",\n  \"version\": \"2.0.5\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"ansi-red\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-red/-/ansi-red-0.1.1.tgz\",\n      \"integrity\": \"sha1-jGOPnRCAgAo1PJwoyKgcpHBdlGw=\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-wrap\": \"0.1.0\"\n      }\n    },\n    \"ansi-regex\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",\n      \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",\n      \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",\n      \"dev\": true\n    },\n    \"ansi-wrap\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-wrap/-/ansi-wrap-0.1.0.tgz\",\n      \"integrity\": \"sha1-qCJQ3bABXponyoLoLqYDu/pF768=\",\n      \"dev\": true\n    },\n    \"argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"asn1\": {\n      \"version\": \"0.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz\",\n      \"integrity\": \"sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safer-buffer\": \"~2.1.0\"\n      }\n    },\n    \"assert-plus\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-0.2.0.tgz\",\n      \"integrity\": \"sha1-104bh+ev/A24qttwIfP+SBAasjQ=\",\n      \"dev\": true\n    },\n    \"asynckit\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n      \"integrity\": \"sha1-x57Zf380y48robyXkLzDZkdLS3k=\",\n      \"dev\": true\n    },\n    \"autolinker\": {\n      \"version\": \"0.28.1\",\n      \"resolved\": \"https://registry.npmjs.org/autolinker/-/autolinker-0.28.1.tgz\",\n      \"integrity\": \"sha1-BlK0kYgYefB3XazgzcoyM5QqTkc=\",\n      \"dev\": true,\n      \"requires\": {\n        \"gulp-header\": \"^1.7.1\"\n      }\n    },\n    \"aws-sign2\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.6.0.tgz\",\n      \"integrity\": \"sha1-FDQt0428yU0OW4fXY81jYSwOeU8=\",\n      \"dev\": true\n    },\n    \"aws4\": {\n      \"version\": \"1.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.10.0.tgz\",\n      \"integrity\": \"sha512-3YDiu347mtVtjpyV3u5kVqQLP242c06zwDOgpeRnybmXlYYsLbtTrUBUm8i8srONt+FWobl5aibnU1030PeeuA==\",\n      \"dev\": true\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz\",\n      \"integrity\": \"sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\"\n    },\n    \"bcrypt-pbkdf\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz\",\n      \"integrity\": \"sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=\",\n      \"dev\": true,\n      \"requires\": {\n        \"tweetnacl\": \"^0.14.3\"\n      }\n    },\n    \"ben\": {\n      \"version\": \"0.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ben/-/ben-0.0.0.tgz\",\n      \"integrity\": \"sha1-xrX63l/7SuCeogQXDPEjTCWE5gQ=\",\n      \"dev\": true\n    },\n    \"bluebird\": {\n      \"version\": \"3.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz\",\n      \"integrity\": \"sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==\",\n      \"dev\": true\n    },\n    \"boom\": {\n      \"version\": \"2.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/boom/-/boom-2.10.1.tgz\",\n      \"integrity\": \"sha1-OciRjO/1eZ+D+UkqhI9iWt0Mdm8=\",\n      \"dev\": true,\n      \"requires\": {\n        \"hoek\": \"2.x.x\"\n      }\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"buffer-from\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz\",\n      \"integrity\": \"sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==\",\n      \"dev\": true\n    },\n    \"caseless\": {\n      \"version\": \"0.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.11.0.tgz\",\n      \"integrity\": \"sha1-cVuW6phBWTzDMGeSP17GDr2k99c=\",\n      \"dev\": true\n    },\n    \"chalk\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\n      \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^2.2.1\",\n        \"escape-string-regexp\": \"^1.0.2\",\n        \"has-ansi\": \"^2.0.0\",\n        \"strip-ansi\": \"^3.0.0\",\n        \"supports-color\": \"^2.0.0\"\n      }\n    },\n    \"clean-yaml-object\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz\",\n      \"integrity\": \"sha1-Y/sRDcLOGoTcIfbZM0h20BCui2g=\",\n      \"dev\": true\n    },\n    \"coffee-script\": {\n      \"version\": \"1.12.7\",\n      \"resolved\": \"https://registry.npmjs.org/coffee-script/-/coffee-script-1.12.7.tgz\",\n      \"integrity\": \"sha512-fLeEhqwymYat/MpTPUjSKHVYYl0ec2mOyALEMLmzr5i1isuG+6jfI2j2d5oBO3VIzgUXgBVIcOT9uH1TFxBckw==\",\n      \"dev\": true\n    },\n    \"color-support\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz\",\n      \"integrity\": \"sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==\",\n      \"dev\": true\n    },\n    \"combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"delayed-stream\": \"~1.0.0\"\n      }\n    },\n    \"commander\": {\n      \"version\": \"2.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\n      \"integrity\": \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\"\n    },\n    \"concat-stream\": {\n      \"version\": \"1.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz\",\n      \"integrity\": \"sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"inherits\": \"^2.0.3\",\n        \"readable-stream\": \"^2.2.2\",\n        \"typedarray\": \"^0.0.6\"\n      }\n    },\n    \"concat-with-sourcemaps\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/concat-with-sourcemaps/-/concat-with-sourcemaps-1.1.0.tgz\",\n      \"integrity\": \"sha512-4gEjHJFT9e+2W/77h/DS5SGUgwDaOwprX8L/gl5+3ixnzkVJJsZWDSelmN3Oilw3LNDZjZV0yqH1hLG3k6nghg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"source-map\": \"^0.6.1\"\n      }\n    },\n    \"core-util-is\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\",\n      \"integrity\": \"sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\",\n      \"dev\": true\n    },\n    \"coveralls\": {\n      \"version\": \"2.13.3\",\n      \"resolved\": \"https://registry.npmjs.org/coveralls/-/coveralls-2.13.3.tgz\",\n      \"integrity\": \"sha512-iiAmn+l1XqRwNLXhW8Rs5qHZRFMYp9ZIPjEOVRpC/c4so6Y/f4/lFi0FfR5B9cCqgyhkJ5cZmbvcVRfP8MHchw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"js-yaml\": \"3.6.1\",\n        \"lcov-parse\": \"0.0.10\",\n        \"log-driver\": \"1.2.5\",\n        \"minimist\": \"1.2.0\",\n        \"request\": \"2.79.0\"\n      },\n      \"dependencies\": {\n        \"esprima\": {\n          \"version\": \"2.7.3\",\n          \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-2.7.3.tgz\",\n          \"integrity\": \"sha1-luO3DVd59q1JzQMmc9HDEnZ7pYE=\",\n          \"dev\": true\n        },\n        \"js-yaml\": {\n          \"version\": \"3.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.6.1.tgz\",\n          \"integrity\": \"sha1-bl/mfYsgXOTSL60Ft3geja3MSzA=\",\n          \"dev\": true,\n          \"requires\": {\n            \"argparse\": \"^1.0.7\",\n            \"esprima\": \"^2.6.0\"\n          }\n        },\n        \"minimist\": {\n          \"version\": \"1.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",\n          \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"cross-spawn\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-4.0.2.tgz\",\n      \"integrity\": \"sha1-e5JHYhwjrf3ThWAEqCPL45dCTUE=\",\n      \"dev\": true,\n      \"requires\": {\n        \"lru-cache\": \"^4.0.1\",\n        \"which\": \"^1.2.9\"\n      }\n    },\n    \"cryptiles\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-2.0.5.tgz\",\n      \"integrity\": \"sha1-O9/s3GCBR8HGcgL6KR59ylnqo7g=\",\n      \"dev\": true,\n      \"requires\": {\n        \"boom\": \"2.x.x\"\n      }\n    },\n    \"dashdash\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",\n      \"integrity\": \"sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"assert-plus\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n          \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"deeper\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/deeper/-/deeper-2.1.0.tgz\",\n      \"integrity\": \"sha1-vFZOX3MXT98gHgiwADDooU2nQ2g=\",\n      \"dev\": true\n    },\n    \"delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n      \"integrity\": \"sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\",\n      \"dev\": true\n    },\n    \"diff\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-1.4.0.tgz\",\n      \"integrity\": \"sha1-fyjS657nsVqX79ic5j3P2qPMur8=\",\n      \"dev\": true\n    },\n    \"dtrace-provider\": {\n      \"version\": \"0.8.8\",\n      \"resolved\": \"https://registry.npmjs.org/dtrace-provider/-/dtrace-provider-0.8.8.tgz\",\n      \"integrity\": \"sha512-b7Z7cNtHPhH9EJhNNbbeqTcXB8LGFFZhq1PGgEvpeHlzd36bhbdTWoE/Ba/YguqpBSlAPKnARWhVlhunCMwfxg==\",\n      \"optional\": true,\n      \"requires\": {\n        \"nan\": \"^2.14.0\"\n      }\n    },\n    \"ecc-jsbn\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz\",\n      \"integrity\": \"sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"jsbn\": \"~0.1.0\",\n        \"safer-buffer\": \"^2.1.0\"\n      }\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n      \"dev\": true\n    },\n    \"esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true\n    },\n    \"events-to-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/events-to-array/-/events-to-array-1.1.2.tgz\",\n      \"integrity\": \"sha1-LUH1Y+H+QA7Uli/hpNXGp1Od9/Y=\",\n      \"dev\": true\n    },\n    \"exeunt\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/exeunt/-/exeunt-1.1.0.tgz\",\n      \"integrity\": \"sha1-r3Lbb5Szy3XpIa7jddUTBJhD0oQ=\"\n    },\n    \"expand-range\": {\n      \"version\": \"1.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz\",\n      \"integrity\": \"sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=\",\n      \"dev\": true,\n      \"requires\": {\n        \"fill-range\": \"^2.1.0\"\n      }\n    },\n    \"extend\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\",\n      \"dev\": true\n    },\n    \"extend-shallow\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz\",\n      \"integrity\": \"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-extendable\": \"^0.1.0\"\n      }\n    },\n    \"extsprintf\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",\n      \"integrity\": \"sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=\",\n      \"dev\": true\n    },\n    \"fill-range\": {\n      \"version\": \"2.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-2.2.4.tgz\",\n      \"integrity\": \"sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-number\": \"^2.1.0\",\n        \"isobject\": \"^2.0.0\",\n        \"randomatic\": \"^3.0.0\",\n        \"repeat-element\": \"^1.1.2\",\n        \"repeat-string\": \"^1.5.2\"\n      }\n    },\n    \"for-in\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz\",\n      \"integrity\": \"sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=\",\n      \"dev\": true\n    },\n    \"foreground-child\": {\n      \"version\": \"1.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-1.5.6.tgz\",\n      \"integrity\": \"sha1-T9ca0t/elnibmApcCilZN8svXOk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"cross-spawn\": \"^4\",\n        \"signal-exit\": \"^3.0.0\"\n      }\n    },\n    \"forever-agent\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",\n      \"integrity\": \"sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=\",\n      \"dev\": true\n    },\n    \"form-data\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.1.4.tgz\",\n      \"integrity\": \"sha1-M8GDrPGTJ27KqYFDpp6Uv+4XUNE=\",\n      \"dev\": true,\n      \"requires\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.5\",\n        \"mime-types\": \"^2.1.12\"\n      }\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",\n      \"dev\": true\n    },\n    \"generate-function\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/generate-function/-/generate-function-2.3.1.tgz\",\n      \"integrity\": \"sha512-eeB5GfMNeevm/GRYq20ShmsaGcmI81kIX2K9XQx5miC8KdHaC6Jm0qQ8ZNeGOi7wYB8OsdxKs+Y2oVuTFuVwKQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-property\": \"^1.0.2\"\n      }\n    },\n    \"generate-object-property\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/generate-object-property/-/generate-object-property-1.2.0.tgz\",\n      \"integrity\": \"sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-property\": \"^1.0.0\"\n      }\n    },\n    \"getpass\": {\n      \"version\": \"0.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",\n      \"integrity\": \"sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"assert-plus\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n          \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"glob\": {\n      \"version\": \"6.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-6.0.4.tgz\",\n      \"integrity\": \"sha1-DwiGD2oVUSey+t1PnOJLGqtuTSI=\",\n      \"optional\": true,\n      \"requires\": {\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"2 || 3\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"gray-matter\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/gray-matter/-/gray-matter-2.1.1.tgz\",\n      \"integrity\": \"sha1-MELZrewqHe1qdwep7SOA+KF6Qw4=\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-red\": \"^0.1.1\",\n        \"coffee-script\": \"^1.12.4\",\n        \"extend-shallow\": \"^2.0.1\",\n        \"js-yaml\": \"^3.8.1\",\n        \"toml\": \"^2.3.2\"\n      }\n    },\n    \"gulp-header\": {\n      \"version\": \"1.8.12\",\n      \"resolved\": \"https://registry.npmjs.org/gulp-header/-/gulp-header-1.8.12.tgz\",\n      \"integrity\": \"sha512-lh9HLdb53sC7XIZOYzTXM4lFuXElv3EVkSDhsd7DoJBj7hm+Ni7D3qYbb+Rr8DuM8nRanBvkVO9d7askreXGnQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"concat-with-sourcemaps\": \"*\",\n        \"lodash.template\": \"^4.4.0\",\n        \"through2\": \"^2.0.0\"\n      }\n    },\n    \"har-validator\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-2.0.6.tgz\",\n      \"integrity\": \"sha1-zcvAgYgmWtEZtqWnyKtw7s+10n0=\",\n      \"dev\": true,\n      \"requires\": {\n        \"chalk\": \"^1.1.1\",\n        \"commander\": \"^2.9.0\",\n        \"is-my-json-valid\": \"^2.12.4\",\n        \"pinkie-promise\": \"^2.0.0\"\n      }\n    },\n    \"has-ansi\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz\",\n      \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^2.0.0\"\n      }\n    },\n    \"hawk\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-3.1.3.tgz\",\n      \"integrity\": \"sha1-B4REvXwWQLD+VA0sm3PVlnjo4cQ=\",\n      \"dev\": true,\n      \"requires\": {\n        \"boom\": \"2.x.x\",\n        \"cryptiles\": \"2.x.x\",\n        \"hoek\": \"2.x.x\",\n        \"sntp\": \"1.x.x\"\n      }\n    },\n    \"hoek\": {\n      \"version\": \"2.16.3\",\n      \"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-2.16.3.tgz\",\n      \"integrity\": \"sha1-ILt0A9POo5jpHcRxCo/xuCdKJe0=\",\n      \"dev\": true\n    },\n    \"http-signature\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.1.1.tgz\",\n      \"integrity\": \"sha1-33LiZwZs0Kxn+3at+OE0qPvPkb8=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"^0.2.0\",\n        \"jsprim\": \"^1.2.2\",\n        \"sshpk\": \"^1.7.0\"\n      }\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n    },\n    \"is-buffer\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz\",\n      \"integrity\": \"sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==\",\n      \"dev\": true\n    },\n    \"is-extendable\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz\",\n      \"integrity\": \"sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=\",\n      \"dev\": true\n    },\n    \"is-my-ip-valid\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-my-ip-valid/-/is-my-ip-valid-1.0.0.tgz\",\n      \"integrity\": \"sha512-gmh/eWXROncUzRnIa1Ubrt5b8ep/MGSnfAUI3aRp+sqTCs1tv1Isl8d8F6JmkN3dXKc3ehZMrtiPN9eL03NuaQ==\",\n      \"dev\": true\n    },\n    \"is-my-json-valid\": {\n      \"version\": \"2.20.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-my-json-valid/-/is-my-json-valid-2.20.1.tgz\",\n      \"integrity\": \"sha512-KWo8x7CYK5goqyYFJM4ZmapN2DvIGKkx5C1WLHyo2Dcr4R9u4Y9ofpZxn5+LF/d0FHR3AeFcYxVlqIA2OOwuJA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"generate-function\": \"^2.0.0\",\n        \"generate-object-property\": \"^1.1.0\",\n        \"is-my-ip-valid\": \"^1.0.0\",\n        \"jsonpointer\": \"^4.0.0\",\n        \"xtend\": \"^4.0.0\"\n      }\n    },\n    \"is-number\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz\",\n      \"integrity\": \"sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=\",\n      \"dev\": true,\n      \"requires\": {\n        \"kind-of\": \"^3.0.2\"\n      }\n    },\n    \"is-plain-object\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz\",\n      \"integrity\": \"sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==\",\n      \"dev\": true,\n      \"requires\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"dependencies\": {\n        \"isobject\": {\n          \"version\": \"3.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz\",\n          \"integrity\": \"sha1-TkMekrEalzFjaqH5yNHMvP2reN8=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"is-property\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz\",\n      \"integrity\": \"sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=\",\n      \"dev\": true\n    },\n    \"is-typedarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\",\n      \"integrity\": \"sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\",\n      \"dev\": true\n    },\n    \"isarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\n      \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",\n      \"dev\": true\n    },\n    \"isexe\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-1.1.2.tgz\",\n      \"integrity\": \"sha1-NvPiLmB1CSD15yQaR2qMakInWtA=\",\n      \"dev\": true\n    },\n    \"isobject\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz\",\n      \"integrity\": \"sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"isarray\": \"1.0.0\"\n      }\n    },\n    \"isstream\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\",\n      \"integrity\": \"sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\",\n      \"dev\": true\n    },\n    \"js-yaml\": {\n      \"version\": \"3.14.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.0.tgz\",\n      \"integrity\": \"sha512-/4IbIeHcD9VMHFqDR/gQ7EdZdLimOvW2DdcxFjdyyZ9NsbS+ccrXqVWDtab/lRl5AlUqmpBx8EhPaWR+OtY17A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      }\n    },\n    \"jsbn\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\",\n      \"integrity\": \"sha1-peZUwuWi3rXyAdls77yoDA7y9RM=\",\n      \"dev\": true\n    },\n    \"json-schema\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",\n      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",\n      \"dev\": true\n    },\n    \"json-stringify-safe\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",\n      \"integrity\": \"sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\",\n      \"dev\": true\n    },\n    \"jsonpointer\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsonpointer/-/jsonpointer-4.0.1.tgz\",\n      \"integrity\": \"sha1-T9kss04OnbPInIYi7PUfm5eMbLk=\",\n      \"dev\": true\n    },\n    \"jsprim\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",\n      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"1.0.0\",\n        \"extsprintf\": \"1.3.0\",\n        \"json-schema\": \"0.2.3\",\n        \"verror\": \"1.10.0\"\n      },\n      \"dependencies\": {\n        \"assert-plus\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n          \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",\n          \"dev\": true\n        },\n        \"verror\": {\n          \"version\": \"1.10.0\",\n          \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\",\n          \"integrity\": \"sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\",\n          \"dev\": true,\n          \"requires\": {\n            \"assert-plus\": \"^1.0.0\",\n            \"core-util-is\": \"1.0.2\",\n            \"extsprintf\": \"^1.2.0\"\n          }\n        }\n      }\n    },\n    \"kind-of\": {\n      \"version\": \"3.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz\",\n      \"integrity\": \"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-buffer\": \"^1.1.5\"\n      }\n    },\n    \"lazy-cache\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/lazy-cache/-/lazy-cache-2.0.2.tgz\",\n      \"integrity\": \"sha1-uRkKT5EzVGlIQIWfio9whNiCImQ=\",\n      \"dev\": true,\n      \"requires\": {\n        \"set-getter\": \"^0.1.0\"\n      }\n    },\n    \"lcov-parse\": {\n      \"version\": \"0.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/lcov-parse/-/lcov-parse-0.0.10.tgz\",\n      \"integrity\": \"sha1-GwuP+ayceIklBYK3C3ExXZ2m2aM=\",\n      \"dev\": true\n    },\n    \"list-item\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/list-item/-/list-item-1.1.1.tgz\",\n      \"integrity\": \"sha1-DGXQDih8tmPMs8s4Sad+iewmilY=\",\n      \"dev\": true,\n      \"requires\": {\n        \"expand-range\": \"^1.8.1\",\n        \"extend-shallow\": \"^2.0.1\",\n        \"is-number\": \"^2.1.0\",\n        \"repeat-string\": \"^1.5.2\"\n      }\n    },\n    \"lodash._reinterpolate\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz\",\n      \"integrity\": \"sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0=\",\n      \"dev\": true\n    },\n    \"lodash.template\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.template/-/lodash.template-4.5.0.tgz\",\n      \"integrity\": \"sha512-84vYFxIkmidUiFxidA/KjjH9pAycqW+h980j7Fuz5qxRtO9pgB7MDFTdys1N7A5mcucRiDyEq4fusljItR1T/A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"lodash._reinterpolate\": \"^3.0.0\",\n        \"lodash.templatesettings\": \"^4.0.0\"\n      }\n    },\n    \"lodash.templatesettings\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-4.2.0.tgz\",\n      \"integrity\": \"sha512-stgLz+i3Aa9mZgnjr/O+v9ruKZsPsndy7qPZOchbqk2cnTU1ZaldKK+v7m54WoKIyxiuMZTKT2H81F8BeAc3ZQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"lodash._reinterpolate\": \"^3.0.0\"\n      }\n    },\n    \"log-driver\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/log-driver/-/log-driver-1.2.5.tgz\",\n      \"integrity\": \"sha1-euTsJXMC/XkNVXyxDJcQDYV7AFY=\",\n      \"dev\": true\n    },\n    \"lru-cache\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz\",\n      \"integrity\": \"sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"pseudomap\": \"^1.0.2\",\n        \"yallist\": \"^2.1.2\"\n      }\n    },\n    \"markdown-link\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/markdown-link/-/markdown-link-0.1.1.tgz\",\n      \"integrity\": \"sha1-MsXGUZmmRXMWMi0eQinRNAfIx88=\",\n      \"dev\": true\n    },\n    \"markdown-toc\": {\n      \"version\": \"0.12.16\",\n      \"resolved\": \"https://registry.npmjs.org/markdown-toc/-/markdown-toc-0.12.16.tgz\",\n      \"integrity\": \"sha1-jxT0uUswx4XzZAITzOoMMAH3n7M=\",\n      \"dev\": true,\n      \"requires\": {\n        \"concat-stream\": \"^1.5.1\",\n        \"gray-matter\": \"^2.0.2\",\n        \"lazy-cache\": \"^2.0.1\",\n        \"list-item\": \"^1.1.1\",\n        \"markdown-link\": \"^0.1.1\",\n        \"minimist\": \"^1.2.0\",\n        \"mixin-deep\": \"^1.1.3\",\n        \"object.pick\": \"^1.1.2\",\n        \"remarkable\": \"^1.6.2\",\n        \"repeat-string\": \"^1.5.4\",\n        \"strip-color\": \"^0.1.0\"\n      }\n    },\n    \"math-random\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/math-random/-/math-random-1.0.4.tgz\",\n      \"integrity\": \"sha512-rUxjysqif/BZQH2yhd5Aaq7vXMSx9NdEsQcyA07uEzIvxgI7zIr33gGsh+RU0/XjmQpCW7RsVof1vlkvQVCK5A==\",\n      \"dev\": true\n    },\n    \"mime-db\": {\n      \"version\": \"1.44.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.44.0.tgz\",\n      \"integrity\": \"sha512-/NOTfLrsPBVeH7YtFPgsVWveuL+4SjjYxaQ1xtM1KMFj7HdxlBlxeyNLzhyJVx7r4rZGJAZ/6lkKCitSc/Nmpg==\",\n      \"dev\": true\n    },\n    \"mime-types\": {\n      \"version\": \"2.1.27\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.27.tgz\",\n      \"integrity\": \"sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"mime-db\": \"1.44.0\"\n      }\n    },\n    \"minimatch\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",\n      \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",\n      \"requires\": {\n        \"brace-expansion\": \"^1.1.7\"\n      }\n    },\n    \"minimist\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz\",\n      \"integrity\": \"sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==\"\n    },\n    \"mixin-deep\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.2.tgz\",\n      \"integrity\": \"sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"for-in\": \"^1.0.2\",\n        \"is-extendable\": \"^1.0.1\"\n      },\n      \"dependencies\": {\n        \"is-extendable\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz\",\n          \"integrity\": \"sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-plain-object\": \"^2.0.4\"\n          }\n        }\n      }\n    },\n    \"mkdirp\": {\n      \"version\": \"0.5.5\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.5.tgz\",\n      \"integrity\": \"sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==\",\n      \"optional\": true,\n      \"requires\": {\n        \"minimist\": \"^1.2.5\"\n      }\n    },\n    \"moment\": {\n      \"version\": \"2.29.4\",\n      \"resolved\": \"https://registry.npmjs.org/moment/-/moment-2.29.4.tgz\",\n      \"integrity\": \"sha512-5LC9SOxjSc2HF6vO2CyuTDNivEdoz2IvyJJGj6X8DJ0eFyfszE0QiEd+iXmBvUP3WHxSjFH/vIsA0EN00cgr8w==\",\n      \"optional\": true\n    },\n    \"ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\",\n      \"dev\": true\n    },\n    \"mv\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/mv/-/mv-2.1.1.tgz\",\n      \"integrity\": \"sha1-rmzg1vbV4KT32JN5jQPB6pVZtqI=\",\n      \"optional\": true,\n      \"requires\": {\n        \"mkdirp\": \"~0.5.1\",\n        \"ncp\": \"~2.0.0\",\n        \"rimraf\": \"~2.4.0\"\n      }\n    },\n    \"nan\": {\n      \"version\": \"2.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/nan/-/nan-2.14.1.tgz\",\n      \"integrity\": \"sha512-isWHgVjnFjh2x2yuJ/tj3JbwoHu3UC2dX5G/88Cm24yB6YopVgxvBObDY7n5xW6ExmFhJpSEQqFPvq9zaXc8Jw==\",\n      \"optional\": true\n    },\n    \"ncp\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ncp/-/ncp-2.0.0.tgz\",\n      \"integrity\": \"sha1-GVoh1sRuNh0vsSgbo4uR6d9727M=\",\n      \"optional\": true\n    },\n    \"nyc\": {\n      \"version\": \"10.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/nyc/-/nyc-10.3.2.tgz\",\n      \"integrity\": \"sha1-8n9NkfKp2zbCT1dP9cbv/wIz3kY=\",\n      \"dev\": true,\n      \"requires\": {\n        \"archy\": \"^1.0.0\",\n        \"arrify\": \"^1.0.1\",\n        \"caching-transform\": \"^1.0.0\",\n        \"convert-source-map\": \"^1.3.0\",\n        \"debug-log\": \"^1.0.1\",\n        \"default-require-extensions\": \"^1.0.0\",\n        \"find-cache-dir\": \"^0.1.1\",\n        \"find-up\": \"^1.1.2\",\n        \"foreground-child\": \"^1.5.3\",\n        \"glob\": \"^7.0.6\",\n        \"istanbul-lib-coverage\": \"^1.1.0\",\n        \"istanbul-lib-hook\": \"^1.0.6\",\n        \"istanbul-lib-instrument\": \"^1.7.1\",\n        \"istanbul-lib-report\": \"^1.1.0\",\n        \"istanbul-lib-source-maps\": \"^1.2.0\",\n        \"istanbul-reports\": \"^1.1.0\",\n        \"md5-hex\": \"^1.2.0\",\n        \"merge-source-map\": \"^1.0.2\",\n        \"micromatch\": \"^2.3.11\",\n        \"mkdirp\": \"^0.5.0\",\n        \"resolve-from\": \"^2.0.0\",\n        \"rimraf\": \"^2.5.4\",\n        \"signal-exit\": \"^3.0.1\",\n        \"spawn-wrap\": \"1.2.4\",\n        \"test-exclude\": \"^4.1.0\",\n        \"yargs\": \"^7.1.0\",\n        \"yargs-parser\": \"^5.0.0\"\n      },\n      \"dependencies\": {\n        \"align-text\": {\n          \"version\": \"0.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz\",\n          \"integrity\": \"sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=\",\n          \"dev\": true,\n          \"optional\": true,\n          \"requires\": {\n            \"kind-of\": \"^3.0.2\",\n            \"longest\": \"^1.0.1\",\n            \"repeat-string\": \"^1.5.2\"\n          }\n        },\n        \"amdefine\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz\",\n          \"integrity\": \"sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU=\",\n          \"dev\": true\n        },\n        \"ansi-regex\": {\n          \"version\": \"2.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",\n          \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",\n          \"dev\": true\n        },\n        \"ansi-styles\": {\n          \"version\": \"2.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",\n          \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",\n          \"dev\": true\n        },\n        \"append-transform\": {\n          \"version\": \"0.4.0\",\n          \"resolved\": \"https://registry.npmjs.org/append-transform/-/append-transform-0.4.0.tgz\",\n          \"integrity\": \"sha1-126/jKlNJ24keja61EpLdKthGZE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"default-require-extensions\": \"^1.0.0\"\n          }\n        },\n        \"archy\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/archy/-/archy-1.0.0.tgz\",\n          \"integrity\": \"sha1-+cjBN1fMHde8N5rHeyxipcKGjEA=\",\n          \"dev\": true\n        },\n        \"arr-diff\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz\",\n          \"integrity\": \"sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"arr-flatten\": \"^1.0.1\"\n          }\n        },\n        \"arr-flatten\": {\n          \"version\": \"1.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.0.3.tgz\",\n          \"integrity\": \"sha1-onTthawIhJtr14R8RYB0XcUa37E=\",\n          \"dev\": true\n        },\n        \"array-unique\": {\n          \"version\": \"0.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz\",\n          \"integrity\": \"sha1-odl8yvy8JiXMcPrc6zalDFiwGlM=\",\n          \"dev\": true\n        },\n        \"arrify\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz\",\n          \"integrity\": \"sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=\",\n          \"dev\": true\n        },\n        \"async\": {\n          \"version\": \"1.5.2\",\n          \"resolved\": \"https://registry.npmjs.org/async/-/async-1.5.2.tgz\",\n          \"integrity\": \"sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=\",\n          \"dev\": true\n        },\n        \"babel-code-frame\": {\n          \"version\": \"6.22.0\",\n          \"resolved\": \"https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.22.0.tgz\",\n          \"integrity\": \"sha1-AnYgvuVnqIwyVhV05/0IAdMxGOQ=\",\n          \"dev\": true,\n          \"requires\": {\n            \"chalk\": \"^1.1.0\",\n            \"esutils\": \"^2.0.2\",\n            \"js-tokens\": \"^3.0.0\"\n          }\n        },\n        \"babel-generator\": {\n          \"version\": \"6.24.1\",\n          \"resolved\": \"https://registry.npmjs.org/babel-generator/-/babel-generator-6.24.1.tgz\",\n          \"integrity\": \"sha1-5xX0hsWN7SVknYiJRNUqoHxdlJc=\",\n          \"dev\": true,\n          \"requires\": {\n            \"babel-messages\": \"^6.23.0\",\n            \"babel-runtime\": \"^6.22.0\",\n            \"babel-types\": \"^6.24.1\",\n            \"detect-indent\": \"^4.0.0\",\n            \"jsesc\": \"^1.3.0\",\n            \"lodash\": \"^4.2.0\",\n            \"source-map\": \"^0.5.0\",\n            \"trim-right\": \"^1.0.1\"\n          }\n        },\n        \"babel-messages\": {\n          \"version\": \"6.23.0\",\n          \"resolved\": \"https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz\",\n          \"integrity\": \"sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=\",\n          \"dev\": true,\n          \"requires\": {\n            \"babel-runtime\": \"^6.22.0\"\n          }\n        },\n        \"babel-runtime\": {\n          \"version\": \"6.23.0\",\n          \"resolved\": \"https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz\",\n          \"integrity\": \"sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=\",\n          \"dev\": true,\n          \"requires\": {\n            \"core-js\": \"^2.4.0\",\n            \"regenerator-runtime\": \"^0.10.0\"\n          }\n        },\n        \"babel-template\": {\n          \"version\": \"6.24.1\",\n          \"resolved\": \"https://registry.npmjs.org/babel-template/-/babel-template-6.24.1.tgz\",\n          \"integrity\": \"sha1-BK5RTx+Ts6JTfyoPYKWkX7gwgzM=\",\n          \"dev\": true,\n          \"requires\": {\n            \"babel-runtime\": \"^6.22.0\",\n            \"babel-traverse\": \"^6.24.1\",\n            \"babel-types\": \"^6.24.1\",\n            \"babylon\": \"^6.11.0\",\n            \"lodash\": \"^4.2.0\"\n          }\n        },\n        \"babel-traverse\": {\n          \"version\": \"6.24.1\",\n          \"resolved\": \"https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.24.1.tgz\",\n          \"integrity\": \"sha1-qzZnP9NW+aCUhlnnszjV/q2zFpU=\",\n          \"dev\": true,\n          \"requires\": {\n            \"babel-code-frame\": \"^6.22.0\",\n            \"babel-messages\": \"^6.23.0\",\n            \"babel-runtime\": \"^6.22.0\",\n            \"babel-types\": \"^6.24.1\",\n            \"babylon\": \"^6.15.0\",\n            \"debug\": \"^2.2.0\",\n            \"globals\": \"^9.0.0\",\n            \"invariant\": \"^2.2.0\",\n            \"lodash\": \"^4.2.0\"\n          }\n        },\n        \"babel-types\": {\n          \"version\": \"6.24.1\",\n          \"resolved\": \"https://registry.npmjs.org/babel-types/-/babel-types-6.24.1.tgz\",\n          \"integrity\": \"sha1-oTaHncFbNga9oNkMH8dDBML/CXU=\",\n          \"dev\": true,\n          \"requires\": {\n            \"babel-runtime\": \"^6.22.0\",\n            \"esutils\": \"^2.0.2\",\n            \"lodash\": \"^4.2.0\",\n            \"to-fast-properties\": \"^1.0.1\"\n          }\n        },\n        \"babylon\": {\n          \"version\": \"6.17.0\",\n          \"resolved\": \"https://registry.npmjs.org/babylon/-/babylon-6.17.0.tgz\",\n          \"integrity\": \"sha1-N9qUiHhIi5xOPEA4iT+jMUs/yTI=\",\n          \"dev\": true\n        },\n        \"balanced-match\": {\n          \"version\": \"0.4.2\",\n          \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-0.4.2.tgz\",\n          \"integrity\": \"sha1-yz8+PHMtwPAe5wtAPzAuYddwmDg=\",\n          \"dev\": true\n        },\n        \"brace-expansion\": {\n          \"version\": \"1.1.7\",\n          \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.7.tgz\",\n          \"integrity\": \"sha1-Pv/DxQ4ABTH7cg6v+A8K6O8jz1k=\",\n          \"dev\": true,\n          \"requires\": {\n            \"balanced-match\": \"^0.4.1\",\n            \"concat-map\": \"0.0.1\"\n          }\n        },\n        \"braces\": {\n          \"version\": \"1.8.5\",\n          \"resolved\": \"https://registry.npmjs.org/braces/-/braces-1.8.5.tgz\",\n          \"integrity\": \"sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=\",\n          \"dev\": true,\n          \"requires\": {\n            \"expand-range\": \"^1.8.1\",\n            \"preserve\": \"^0.2.0\",\n            \"repeat-element\": \"^1.1.2\"\n          }\n        },\n        \"builtin-modules\": {\n          \"version\": \"1.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz\",\n          \"integrity\": \"sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=\",\n          \"dev\": true\n        },\n        \"caching-transform\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/caching-transform/-/caching-transform-1.0.1.tgz\",\n          \"integrity\": \"sha1-bb2y8g+Nj7znnz6U6dF0Lc31wKE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"md5-hex\": \"^1.2.0\",\n            \"mkdirp\": \"^0.5.1\",\n            \"write-file-atomic\": \"^1.1.4\"\n          }\n        },\n        \"camelcase\": {\n          \"version\": \"1.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz\",\n          \"integrity\": \"sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=\",\n          \"dev\": true,\n          \"optional\": true\n        },\n        \"center-align\": {\n          \"version\": \"0.1.3\",\n          \"resolved\": \"https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz\",\n          \"integrity\": \"sha1-qg0yYptu6XIgBBHL1EYckHvCt60=\",\n          \"dev\": true,\n          \"optional\": true,\n          \"requires\": {\n            \"align-text\": \"^0.1.3\",\n            \"lazy-cache\": \"^1.0.3\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"1.1.3\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\n          \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^2.2.1\",\n            \"escape-string-regexp\": \"^1.0.2\",\n            \"has-ansi\": \"^2.0.0\",\n            \"strip-ansi\": \"^3.0.0\",\n            \"supports-color\": \"^2.0.0\"\n          }\n        },\n        \"cliui\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz\",\n          \"integrity\": \"sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=\",\n          \"dev\": true,\n          \"optional\": true,\n          \"requires\": {\n            \"center-align\": \"^0.1.1\",\n            \"right-align\": \"^0.1.1\",\n            \"wordwrap\": \"0.0.2\"\n          },\n          \"dependencies\": {\n            \"wordwrap\": {\n              \"version\": \"0.0.2\",\n              \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz\",\n              \"integrity\": \"sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=\",\n              \"dev\": true,\n              \"optional\": true\n            }\n          }\n        },\n        \"code-point-at\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz\",\n          \"integrity\": \"sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=\",\n          \"dev\": true\n        },\n        \"commondir\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n          \"integrity\": \"sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=\",\n          \"dev\": true\n        },\n        \"concat-map\": {\n          \"version\": \"0.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n          \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",\n          \"dev\": true\n        },\n        \"convert-source-map\": {\n          \"version\": \"1.5.0\",\n          \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.5.0.tgz\",\n          \"integrity\": \"sha1-ms1whRxtXf3ZPZKC5e35SgP/RrU=\",\n          \"dev\": true\n        },\n        \"core-js\": {\n          \"version\": \"2.4.1\",\n          \"resolved\": \"https://registry.npmjs.org/core-js/-/core-js-2.4.1.tgz\",\n          \"integrity\": \"sha1-TekR5mew6ukSTjQlS1OupvxhjT4=\",\n          \"dev\": true\n        },\n        \"cross-spawn\": {\n          \"version\": \"4.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-4.0.2.tgz\",\n          \"integrity\": \"sha1-e5JHYhwjrf3ThWAEqCPL45dCTUE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"lru-cache\": \"^4.0.1\",\n            \"which\": \"^1.2.9\"\n          }\n        },\n        \"debug\": {\n          \"version\": \"2.6.6\",\n          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.6.tgz\",\n          \"integrity\": \"sha1-qfpvvpykPPHnn3O3XAGJy7fW21o=\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"0.7.3\"\n          }\n        },\n        \"debug-log\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/debug-log/-/debug-log-1.0.1.tgz\",\n          \"integrity\": \"sha1-IwdjLUwEOCuN+KMvcLiVBG1SdF8=\",\n          \"dev\": true\n        },\n        \"decamelize\": {\n          \"version\": \"1.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\n          \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",\n          \"dev\": true\n        },\n        \"default-require-extensions\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-1.0.0.tgz\",\n          \"integrity\": \"sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"strip-bom\": \"^2.0.0\"\n          }\n        },\n        \"detect-indent\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/detect-indent/-/detect-indent-4.0.0.tgz\",\n          \"integrity\": \"sha1-920GQ1LN9Docts5hnE7jqUdd4gg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"repeating\": \"^2.0.0\"\n          }\n        },\n        \"error-ex\": {\n          \"version\": \"1.3.1\",\n          \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.1.tgz\",\n          \"integrity\": \"sha1-+FWobOYa3E6GIcPNoh56dhLDqNw=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-arrayish\": \"^0.2.1\"\n          }\n        },\n        \"escape-string-regexp\": {\n          \"version\": \"1.0.5\",\n          \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n          \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n          \"dev\": true\n        },\n        \"esutils\": {\n          \"version\": \"2.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz\",\n          \"integrity\": \"sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=\",\n          \"dev\": true\n        },\n        \"expand-brackets\": {\n          \"version\": \"0.1.5\",\n          \"resolved\": \"https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz\",\n          \"integrity\": \"sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-posix-bracket\": \"^0.1.0\"\n          }\n        },\n        \"expand-range\": {\n          \"version\": \"1.8.2\",\n          \"resolved\": \"https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz\",\n          \"integrity\": \"sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=\",\n          \"dev\": true,\n          \"requires\": {\n            \"fill-range\": \"^2.1.0\"\n          }\n        },\n        \"extglob\": {\n          \"version\": \"0.3.2\",\n          \"resolved\": \"https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz\",\n          \"integrity\": \"sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-extglob\": \"^1.0.0\"\n          }\n        },\n        \"filename-regex\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.1.tgz\",\n          \"integrity\": \"sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY=\",\n          \"dev\": true\n        },\n        \"fill-range\": {\n          \"version\": \"2.2.3\",\n          \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-2.2.3.tgz\",\n          \"integrity\": \"sha1-ULd9/X5Gm8dJJHCWNpn+eoSFpyM=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-number\": \"^2.1.0\",\n            \"isobject\": \"^2.0.0\",\n            \"randomatic\": \"^1.1.3\",\n            \"repeat-element\": \"^1.1.2\",\n            \"repeat-string\": \"^1.5.2\"\n          }\n        },\n        \"find-cache-dir\": {\n          \"version\": \"0.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-0.1.1.tgz\",\n          \"integrity\": \"sha1-yN765XyKUqinhPnjHFfHQumToLk=\",\n          \"dev\": true,\n          \"requires\": {\n            \"commondir\": \"^1.0.1\",\n            \"mkdirp\": \"^0.5.1\",\n            \"pkg-dir\": \"^1.0.0\"\n          }\n        },\n        \"find-up\": {\n          \"version\": \"1.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz\",\n          \"integrity\": \"sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"path-exists\": \"^2.0.0\",\n            \"pinkie-promise\": \"^2.0.0\"\n          }\n        },\n        \"for-in\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz\",\n          \"integrity\": \"sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=\",\n          \"dev\": true\n        },\n        \"for-own\": {\n          \"version\": \"0.1.5\",\n          \"resolved\": \"https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz\",\n          \"integrity\": \"sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=\",\n          \"dev\": true,\n          \"requires\": {\n            \"for-in\": \"^1.0.1\"\n          }\n        },\n        \"foreground-child\": {\n          \"version\": \"1.5.6\",\n          \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-1.5.6.tgz\",\n          \"integrity\": \"sha1-T9ca0t/elnibmApcCilZN8svXOk=\",\n          \"dev\": true,\n          \"requires\": {\n            \"cross-spawn\": \"^4\",\n            \"signal-exit\": \"^3.0.0\"\n          }\n        },\n        \"fs.realpath\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n          \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",\n          \"dev\": true\n        },\n        \"get-caller-file\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.2.tgz\",\n          \"integrity\": \"sha1-9wLmMSfn4jHBYKgMFVSstw1QR+U=\",\n          \"dev\": true\n        },\n        \"glob\": {\n          \"version\": \"7.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.1.tgz\",\n          \"integrity\": \"sha1-gFIR3wT6rxxjo2ADBs31reULLsg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"fs.realpath\": \"^1.0.0\",\n            \"inflight\": \"^1.0.4\",\n            \"inherits\": \"2\",\n            \"minimatch\": \"^3.0.2\",\n            \"once\": \"^1.3.0\",\n            \"path-is-absolute\": \"^1.0.0\"\n          }\n        },\n        \"glob-base\": {\n          \"version\": \"0.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz\",\n          \"integrity\": \"sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=\",\n          \"dev\": true,\n          \"requires\": {\n            \"glob-parent\": \"^2.0.0\",\n            \"is-glob\": \"^2.0.0\"\n          }\n        },\n        \"glob-parent\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz\",\n          \"integrity\": \"sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-glob\": \"^2.0.0\"\n          }\n        },\n        \"globals\": {\n          \"version\": \"9.17.0\",\n          \"resolved\": \"https://registry.npmjs.org/globals/-/globals-9.17.0.tgz\",\n          \"integrity\": \"sha1-DAymltm5u2lNLlRwvTd3fKrVAoY=\",\n          \"dev\": true\n        },\n        \"graceful-fs\": {\n          \"version\": \"4.1.11\",\n          \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz\",\n          \"integrity\": \"sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=\",\n          \"dev\": true\n        },\n        \"handlebars\": {\n          \"version\": \"4.0.8\",\n          \"resolved\": \"https://registry.npmjs.org/handlebars/-/handlebars-4.0.8.tgz\",\n          \"integrity\": \"sha1-Irh1zT8ObL6jAxTxROgrx6cv9CA=\",\n          \"dev\": true,\n          \"requires\": {\n            \"async\": \"^1.4.0\",\n            \"optimist\": \"^0.6.1\",\n            \"source-map\": \"^0.4.4\",\n            \"uglify-js\": \"^2.6\"\n          },\n          \"dependencies\": {\n            \"source-map\": {\n              \"version\": \"0.4.4\",\n              \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz\",\n              \"integrity\": \"sha1-66T12pwNyZneaAMti092FzZSA2s=\",\n              \"dev\": true,\n              \"requires\": {\n                \"amdefine\": \">=0.0.4\"\n              }\n            }\n          }\n        },\n        \"has-ansi\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz\",\n          \"integrity\": \"sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-regex\": \"^2.0.0\"\n          }\n        },\n        \"has-flag\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz\",\n          \"integrity\": \"sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=\",\n          \"dev\": true\n        },\n        \"hosted-git-info\": {\n          \"version\": \"2.4.2\",\n          \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.4.2.tgz\",\n          \"integrity\": \"sha1-AHa59GonBQbduq6lZJaJdGBhKmc=\",\n          \"dev\": true\n        },\n        \"imurmurhash\": {\n          \"version\": \"0.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n          \"integrity\": \"sha1-khi5srkoojixPcT7a21XbyMUU+o=\",\n          \"dev\": true\n        },\n        \"inflight\": {\n          \"version\": \"1.0.6\",\n          \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n          \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n          \"dev\": true,\n          \"requires\": {\n            \"once\": \"^1.3.0\",\n            \"wrappy\": \"1\"\n          }\n        },\n        \"inherits\": {\n          \"version\": \"2.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\n          \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\n          \"dev\": true\n        },\n        \"invariant\": {\n          \"version\": \"2.2.2\",\n          \"resolved\": \"https://registry.npmjs.org/invariant/-/invariant-2.2.2.tgz\",\n          \"integrity\": \"sha1-nh9WrArNtr8wMwbzOL47IErmA2A=\",\n          \"dev\": true,\n          \"requires\": {\n            \"loose-envify\": \"^1.0.0\"\n          }\n        },\n        \"invert-kv\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz\",\n          \"integrity\": \"sha1-EEqOSqym09jNFXqO+L+rLXo//bY=\",\n          \"dev\": true\n        },\n        \"is-arrayish\": {\n          \"version\": \"0.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n          \"integrity\": \"sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=\",\n          \"dev\": true\n        },\n        \"is-buffer\": {\n          \"version\": \"1.1.5\",\n          \"resolved\": \"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz\",\n          \"integrity\": \"sha1-Hzsm72E7IUuIy8ojzGwB2Hlh7sw=\",\n          \"dev\": true\n        },\n        \"is-builtin-module\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-1.0.0.tgz\",\n          \"integrity\": \"sha1-VAVy0096wxGfj3bDDLwbHgN6/74=\",\n          \"dev\": true,\n          \"requires\": {\n            \"builtin-modules\": \"^1.0.0\"\n          }\n        },\n        \"is-dotfile\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.2.tgz\",\n          \"integrity\": \"sha1-LBMjg/ORmfjtwmjKAbmwB9IFzE0=\",\n          \"dev\": true\n        },\n        \"is-equal-shallow\": {\n          \"version\": \"0.1.3\",\n          \"resolved\": \"https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz\",\n          \"integrity\": \"sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-primitive\": \"^2.0.0\"\n          }\n        },\n        \"is-extendable\": {\n          \"version\": \"0.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz\",\n          \"integrity\": \"sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=\",\n          \"dev\": true\n        },\n        \"is-extglob\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz\",\n          \"integrity\": \"sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=\",\n          \"dev\": true\n        },\n        \"is-finite\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/is-finite/-/is-finite-1.0.2.tgz\",\n          \"integrity\": \"sha1-zGZ3aVYCvlUO8R6LSqYwU0K20Ko=\",\n          \"dev\": true,\n          \"requires\": {\n            \"number-is-nan\": \"^1.0.0\"\n          }\n        },\n        \"is-fullwidth-code-point\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz\",\n          \"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",\n          \"dev\": true,\n          \"requires\": {\n            \"number-is-nan\": \"^1.0.0\"\n          }\n        },\n        \"is-glob\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz\",\n          \"integrity\": \"sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-extglob\": \"^1.0.0\"\n          }\n        },\n        \"is-number\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz\",\n          \"integrity\": \"sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"kind-of\": \"^3.0.2\"\n          }\n        },\n        \"is-posix-bracket\": {\n          \"version\": \"0.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz\",\n          \"integrity\": \"sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q=\",\n          \"dev\": true\n        },\n        \"is-primitive\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz\",\n          \"integrity\": \"sha1-IHurkWOEmcB7Kt8kCkGochADRXU=\",\n          \"dev\": true\n        },\n        \"is-utf8\": {\n          \"version\": \"0.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz\",\n          \"integrity\": \"sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI=\",\n          \"dev\": true\n        },\n        \"isarray\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\n          \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",\n          \"dev\": true\n        },\n        \"isexe\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n          \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",\n          \"dev\": true\n        },\n        \"isobject\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz\",\n          \"integrity\": \"sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=\",\n          \"dev\": true,\n          \"requires\": {\n            \"isarray\": \"1.0.0\"\n          }\n        },\n        \"istanbul-lib-coverage\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-1.1.0.tgz\",\n          \"integrity\": \"sha1-ysoZ3srvNSW11jMdcB8/O3rUhSg=\",\n          \"dev\": true\n        },\n        \"istanbul-lib-hook\": {\n          \"version\": \"1.0.6\",\n          \"resolved\": \"https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-1.0.6.tgz\",\n          \"integrity\": \"sha1-wIZtHoHPLVMZJJUQEx/Bbe5JIx8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"append-transform\": \"^0.4.0\"\n          }\n        },\n        \"istanbul-lib-instrument\": {\n          \"version\": \"1.7.1\",\n          \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-1.7.1.tgz\",\n          \"integrity\": \"sha1-Fp4xvGLHeIUamUOd2Zw8wSGE02A=\",\n          \"dev\": true,\n          \"requires\": {\n            \"babel-generator\": \"^6.18.0\",\n            \"babel-template\": \"^6.16.0\",\n            \"babel-traverse\": \"^6.18.0\",\n            \"babel-types\": \"^6.18.0\",\n            \"babylon\": \"^6.13.0\",\n            \"istanbul-lib-coverage\": \"^1.1.0\",\n            \"semver\": \"^5.3.0\"\n          }\n        },\n        \"istanbul-lib-report\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-1.1.0.tgz\",\n          \"integrity\": \"sha1-RExOzKmvqTz1hPVrEPGVv3aMB3A=\",\n          \"dev\": true,\n          \"requires\": {\n            \"istanbul-lib-coverage\": \"^1.1.0\",\n            \"mkdirp\": \"^0.5.1\",\n            \"path-parse\": \"^1.0.5\",\n            \"supports-color\": \"^3.1.2\"\n          },\n          \"dependencies\": {\n            \"supports-color\": {\n              \"version\": \"3.2.3\",\n              \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz\",\n              \"integrity\": \"sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=\",\n              \"dev\": true,\n              \"requires\": {\n                \"has-flag\": \"^1.0.0\"\n              }\n            }\n          }\n        },\n        \"istanbul-lib-source-maps\": {\n          \"version\": \"1.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-1.2.0.tgz\",\n          \"integrity\": \"sha1-jHcG1Jfib+62rz4MKP1bBmlZjQ4=\",\n          \"dev\": true,\n          \"requires\": {\n            \"debug\": \"^2.6.3\",\n            \"istanbul-lib-coverage\": \"^1.1.0\",\n            \"mkdirp\": \"^0.5.1\",\n            \"rimraf\": \"^2.6.1\",\n            \"source-map\": \"^0.5.3\"\n          }\n        },\n        \"istanbul-reports\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-1.1.0.tgz\",\n          \"integrity\": \"sha1-HvO3lYiSGc+1+tFjZfbOEI1fjGY=\",\n          \"dev\": true,\n          \"requires\": {\n            \"handlebars\": \"^4.0.3\"\n          }\n        },\n        \"js-tokens\": {\n          \"version\": \"3.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.1.tgz\",\n          \"integrity\": \"sha1-COnxMkhKLEWjCQfp3E1VZ7fxFNc=\",\n          \"dev\": true\n        },\n        \"jsesc\": {\n          \"version\": \"1.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-1.3.0.tgz\",\n          \"integrity\": \"sha1-RsP+yMGJKxKwgz25vHYiF226s0s=\",\n          \"dev\": true\n        },\n        \"kind-of\": {\n          \"version\": \"3.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/kind-of/-/kind-of-3.2.0.tgz\",\n          \"integrity\": \"sha1-tYq+TVwEStM3JqjBUltIz4kb/wc=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-buffer\": \"^1.1.5\"\n          }\n        },\n        \"lazy-cache\": {\n          \"version\": \"1.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz\",\n          \"integrity\": \"sha1-odePw6UEdMuAhF07O24dpJpEbo4=\",\n          \"dev\": true,\n          \"optional\": true\n        },\n        \"lcid\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz\",\n          \"integrity\": \"sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=\",\n          \"dev\": true,\n          \"requires\": {\n            \"invert-kv\": \"^1.0.0\"\n          }\n        },\n        \"load-json-file\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz\",\n          \"integrity\": \"sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=\",\n          \"dev\": true,\n          \"requires\": {\n            \"graceful-fs\": \"^4.1.2\",\n            \"parse-json\": \"^2.2.0\",\n            \"pify\": \"^2.0.0\",\n            \"pinkie-promise\": \"^2.0.0\",\n            \"strip-bom\": \"^2.0.0\"\n          }\n        },\n        \"lodash\": {\n          \"version\": \"4.17.4\",\n          \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz\",\n          \"integrity\": \"sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=\",\n          \"dev\": true\n        },\n        \"longest\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/longest/-/longest-1.0.1.tgz\",\n          \"integrity\": \"sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc=\",\n          \"dev\": true,\n          \"optional\": true\n        },\n        \"loose-envify\": {\n          \"version\": \"1.3.1\",\n          \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.3.1.tgz\",\n          \"integrity\": \"sha1-0aitM/qc4OcT1l/dCsi3SNR4yEg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"js-tokens\": \"^3.0.0\"\n          }\n        },\n        \"lru-cache\": {\n          \"version\": \"4.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-4.0.2.tgz\",\n          \"integrity\": \"sha1-HRdnnAac2l0ECZGgnbwsDbN35V4=\",\n          \"dev\": true,\n          \"requires\": {\n            \"pseudomap\": \"^1.0.1\",\n            \"yallist\": \"^2.0.0\"\n          }\n        },\n        \"md5-hex\": {\n          \"version\": \"1.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/md5-hex/-/md5-hex-1.3.0.tgz\",\n          \"integrity\": \"sha1-0sSv6YPENwZiF5uMrRRSGRNQRsQ=\",\n          \"dev\": true,\n          \"requires\": {\n            \"md5-o-matic\": \"^0.1.1\"\n          }\n        },\n        \"md5-o-matic\": {\n          \"version\": \"0.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/md5-o-matic/-/md5-o-matic-0.1.1.tgz\",\n          \"integrity\": \"sha1-givM1l4RfFFPqxdrJZRdVBAKA8M=\",\n          \"dev\": true\n        },\n        \"merge-source-map\": {\n          \"version\": \"1.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.0.3.tgz\",\n          \"integrity\": \"sha1-2hQV8nIqURnbB7FMT5c0EIY6Kr8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"source-map\": \"^0.5.3\"\n          }\n        },\n        \"micromatch\": {\n          \"version\": \"2.3.11\",\n          \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz\",\n          \"integrity\": \"sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=\",\n          \"dev\": true,\n          \"requires\": {\n            \"arr-diff\": \"^2.0.0\",\n            \"array-unique\": \"^0.2.1\",\n            \"braces\": \"^1.8.2\",\n            \"expand-brackets\": \"^0.1.4\",\n            \"extglob\": \"^0.3.1\",\n            \"filename-regex\": \"^2.0.0\",\n            \"is-extglob\": \"^1.0.0\",\n            \"is-glob\": \"^2.0.1\",\n            \"kind-of\": \"^3.0.2\",\n            \"normalize-path\": \"^2.0.1\",\n            \"object.omit\": \"^2.0.0\",\n            \"parse-glob\": \"^3.0.4\",\n            \"regex-cache\": \"^0.4.2\"\n          }\n        },\n        \"minimatch\": {\n          \"version\": \"3.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.3.tgz\",\n          \"integrity\": \"sha1-Kk5AkLlrLbBqnX3wEFWmKnfJt3Q=\",\n          \"dev\": true,\n          \"requires\": {\n            \"brace-expansion\": \"^1.0.0\"\n          }\n        },\n        \"minimist\": {\n          \"version\": \"0.0.8\",\n          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n          \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",\n          \"dev\": true\n        },\n        \"mkdirp\": {\n          \"version\": \"0.5.1\",\n          \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n          \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",\n          \"dev\": true,\n          \"requires\": {\n            \"minimist\": \"0.0.8\"\n          }\n        },\n        \"ms\": {\n          \"version\": \"0.7.3\",\n          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-0.7.3.tgz\",\n          \"integrity\": \"sha1-cIFVpeROM/X9D8U+gdDUCpG+H/8=\",\n          \"dev\": true\n        },\n        \"normalize-package-data\": {\n          \"version\": \"2.3.8\",\n          \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.3.8.tgz\",\n          \"integrity\": \"sha1-2Bntoqne29H/pWPqQHHZNngilbs=\",\n          \"dev\": true,\n          \"requires\": {\n            \"hosted-git-info\": \"^2.1.4\",\n            \"is-builtin-module\": \"^1.0.0\",\n            \"semver\": \"2 || 3 || 4 || 5\",\n            \"validate-npm-package-license\": \"^3.0.1\"\n          }\n        },\n        \"normalize-path\": {\n          \"version\": \"2.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz\",\n          \"integrity\": \"sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=\",\n          \"dev\": true,\n          \"requires\": {\n            \"remove-trailing-separator\": \"^1.0.1\"\n          }\n        },\n        \"number-is-nan\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz\",\n          \"integrity\": \"sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=\",\n          \"dev\": true\n        },\n        \"object-assign\": {\n          \"version\": \"4.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n          \"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\",\n          \"dev\": true\n        },\n        \"object.omit\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz\",\n          \"integrity\": \"sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=\",\n          \"dev\": true,\n          \"requires\": {\n            \"for-own\": \"^0.1.4\",\n            \"is-extendable\": \"^0.1.1\"\n          }\n        },\n        \"once\": {\n          \"version\": \"1.4.0\",\n          \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n          \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n          \"dev\": true,\n          \"requires\": {\n            \"wrappy\": \"1\"\n          }\n        },\n        \"optimist\": {\n          \"version\": \"0.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz\",\n          \"integrity\": \"sha1-2j6nRob6IaGaERwybpDrFaAZZoY=\",\n          \"dev\": true,\n          \"requires\": {\n            \"minimist\": \"~0.0.1\",\n            \"wordwrap\": \"~0.0.2\"\n          }\n        },\n        \"os-homedir\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n          \"integrity\": \"sha1-/7xJiDNuDoM94MFox+8VISGqf7M=\",\n          \"dev\": true\n        },\n        \"os-locale\": {\n          \"version\": \"1.4.0\",\n          \"resolved\": \"https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz\",\n          \"integrity\": \"sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=\",\n          \"dev\": true,\n          \"requires\": {\n            \"lcid\": \"^1.0.0\"\n          }\n        },\n        \"parse-glob\": {\n          \"version\": \"3.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz\",\n          \"integrity\": \"sha1-ssN2z7EfNVE7rdFz7wu246OIORw=\",\n          \"dev\": true,\n          \"requires\": {\n            \"glob-base\": \"^0.3.0\",\n            \"is-dotfile\": \"^1.0.0\",\n            \"is-extglob\": \"^1.0.0\",\n            \"is-glob\": \"^2.0.0\"\n          }\n        },\n        \"parse-json\": {\n          \"version\": \"2.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz\",\n          \"integrity\": \"sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=\",\n          \"dev\": true,\n          \"requires\": {\n            \"error-ex\": \"^1.2.0\"\n          }\n        },\n        \"path-exists\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz\",\n          \"integrity\": \"sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=\",\n          \"dev\": true,\n          \"requires\": {\n            \"pinkie-promise\": \"^2.0.0\"\n          }\n        },\n        \"path-is-absolute\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n          \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n          \"dev\": true\n        },\n        \"path-parse\": {\n          \"version\": \"1.0.5\",\n          \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.5.tgz\",\n          \"integrity\": \"sha1-PBrfhx6pzWyUMbbqK9dKD/BVxME=\",\n          \"dev\": true\n        },\n        \"path-type\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz\",\n          \"integrity\": \"sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"graceful-fs\": \"^4.1.2\",\n            \"pify\": \"^2.0.0\",\n            \"pinkie-promise\": \"^2.0.0\"\n          }\n        },\n        \"pify\": {\n          \"version\": \"2.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",\n          \"integrity\": \"sha1-7RQaasBDqEnqWISY59yosVMw6Qw=\",\n          \"dev\": true\n        },\n        \"pinkie\": {\n          \"version\": \"2.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz\",\n          \"integrity\": \"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=\",\n          \"dev\": true\n        },\n        \"pinkie-promise\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz\",\n          \"integrity\": \"sha1-ITXW36ejWMBprJsXh3YogihFD/o=\",\n          \"dev\": true,\n          \"requires\": {\n            \"pinkie\": \"^2.0.0\"\n          }\n        },\n        \"pkg-dir\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/pkg-dir/-/pkg-dir-1.0.0.tgz\",\n          \"integrity\": \"sha1-ektQio1bstYp1EcFb/TpyTFM89Q=\",\n          \"dev\": true,\n          \"requires\": {\n            \"find-up\": \"^1.0.0\"\n          }\n        },\n        \"preserve\": {\n          \"version\": \"0.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz\",\n          \"integrity\": \"sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks=\",\n          \"dev\": true\n        },\n        \"pseudomap\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz\",\n          \"integrity\": \"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=\",\n          \"dev\": true\n        },\n        \"randomatic\": {\n          \"version\": \"1.1.6\",\n          \"resolved\": \"https://registry.npmjs.org/randomatic/-/randomatic-1.1.6.tgz\",\n          \"integrity\": \"sha1-EQ3Kv/OX6dz/fAeJzMCkmt8exbs=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-number\": \"^2.0.2\",\n            \"kind-of\": \"^3.0.2\"\n          }\n        },\n        \"read-pkg\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz\",\n          \"integrity\": \"sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"load-json-file\": \"^1.0.0\",\n            \"normalize-package-data\": \"^2.3.2\",\n            \"path-type\": \"^1.0.0\"\n          }\n        },\n        \"read-pkg-up\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz\",\n          \"integrity\": \"sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=\",\n          \"dev\": true,\n          \"requires\": {\n            \"find-up\": \"^1.0.0\",\n            \"read-pkg\": \"^1.0.0\"\n          }\n        },\n        \"regenerator-runtime\": {\n          \"version\": \"0.10.5\",\n          \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.10.5.tgz\",\n          \"integrity\": \"sha1-M2w+/BIgrc7dosn6tntaeVWjNlg=\",\n          \"dev\": true\n        },\n        \"regex-cache\": {\n          \"version\": \"0.4.3\",\n          \"resolved\": \"https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.3.tgz\",\n          \"integrity\": \"sha1-mxpsNdTQ3871cRrmUejp09cRQUU=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-equal-shallow\": \"^0.1.3\",\n            \"is-primitive\": \"^2.0.0\"\n          }\n        },\n        \"remove-trailing-separator\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.0.1.tgz\",\n          \"integrity\": \"sha1-YV67lq9VlVLUv0BXyENtSGq2PMQ=\",\n          \"dev\": true\n        },\n        \"repeat-element\": {\n          \"version\": \"1.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.2.tgz\",\n          \"integrity\": \"sha1-7wiaF40Ug7quTZPrmLT55OEdmQo=\",\n          \"dev\": true\n        },\n        \"repeat-string\": {\n          \"version\": \"1.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz\",\n          \"integrity\": \"sha1-jcrkcOHIirwtYA//Sndihtp15jc=\",\n          \"dev\": true\n        },\n        \"repeating\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz\",\n          \"integrity\": \"sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-finite\": \"^1.0.0\"\n          }\n        },\n        \"require-directory\": {\n          \"version\": \"2.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n          \"integrity\": \"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\",\n          \"dev\": true\n        },\n        \"require-main-filename\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz\",\n          \"integrity\": \"sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=\",\n          \"dev\": true\n        },\n        \"resolve-from\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-2.0.0.tgz\",\n          \"integrity\": \"sha1-lICrIOlP+h2egKgEx+oUdhGWa1c=\",\n          \"dev\": true\n        },\n        \"right-align\": {\n          \"version\": \"0.1.3\",\n          \"resolved\": \"https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz\",\n          \"integrity\": \"sha1-YTObci/mo1FWiSENJOFMlhSGE+8=\",\n          \"dev\": true,\n          \"optional\": true,\n          \"requires\": {\n            \"align-text\": \"^0.1.1\"\n          }\n        },\n        \"rimraf\": {\n          \"version\": \"2.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.1.tgz\",\n          \"integrity\": \"sha1-wjOOxkPfeht/5cVPqG9XQopV8z0=\",\n          \"dev\": true,\n          \"requires\": {\n            \"glob\": \"^7.0.5\"\n          }\n        },\n        \"semver\": {\n          \"version\": \"5.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.3.0.tgz\",\n          \"integrity\": \"sha1-myzl094C0XxgEq0yaqa00M9U+U8=\",\n          \"dev\": true\n        },\n        \"set-blocking\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",\n          \"integrity\": \"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\",\n          \"dev\": true\n        },\n        \"signal-exit\": {\n          \"version\": \"3.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz\",\n          \"integrity\": \"sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=\",\n          \"dev\": true\n        },\n        \"slide\": {\n          \"version\": \"1.1.6\",\n          \"resolved\": \"https://registry.npmjs.org/slide/-/slide-1.1.6.tgz\",\n          \"integrity\": \"sha1-VusCfWW00tzmyy4tMsTUr8nh1wc=\",\n          \"dev\": true\n        },\n        \"source-map\": {\n          \"version\": \"0.5.6\",\n          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.5.6.tgz\",\n          \"integrity\": \"sha1-dc449SvwczxafwwRjYEzSiu19BI=\",\n          \"dev\": true\n        },\n        \"spawn-wrap\": {\n          \"version\": \"1.2.4\",\n          \"resolved\": \"https://registry.npmjs.org/spawn-wrap/-/spawn-wrap-1.2.4.tgz\",\n          \"integrity\": \"sha1-kg6yEadpwJPuv71bDnpdLmirLkA=\",\n          \"dev\": true,\n          \"requires\": {\n            \"foreground-child\": \"^1.3.3\",\n            \"mkdirp\": \"^0.5.0\",\n            \"os-homedir\": \"^1.0.1\",\n            \"rimraf\": \"^2.3.3\",\n            \"signal-exit\": \"^2.0.0\",\n            \"which\": \"^1.2.4\"\n          },\n          \"dependencies\": {\n            \"signal-exit\": {\n              \"version\": \"2.1.2\",\n              \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-2.1.2.tgz\",\n              \"integrity\": \"sha1-N1h5sfkuvDszRIDQONxUam1VhWQ=\",\n              \"dev\": true\n            }\n          }\n        },\n        \"spdx-correct\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-1.0.2.tgz\",\n          \"integrity\": \"sha1-SzBz2TP/UfORLwOsVRlJikFQ20A=\",\n          \"dev\": true,\n          \"requires\": {\n            \"spdx-license-ids\": \"^1.0.2\"\n          }\n        },\n        \"spdx-expression-parse\": {\n          \"version\": \"1.0.4\",\n          \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-1.0.4.tgz\",\n          \"integrity\": \"sha1-m98vIOH0DtRH++JzJmGR/O1RYmw=\",\n          \"dev\": true\n        },\n        \"spdx-license-ids\": {\n          \"version\": \"1.2.2\",\n          \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-1.2.2.tgz\",\n          \"integrity\": \"sha1-yd96NCRZSt5r0RkA1ZZpbcBrrFc=\",\n          \"dev\": true\n        },\n        \"string-width\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz\",\n          \"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",\n          \"dev\": true,\n          \"requires\": {\n            \"code-point-at\": \"^1.0.0\",\n            \"is-fullwidth-code-point\": \"^1.0.0\",\n            \"strip-ansi\": \"^3.0.0\"\n          }\n        },\n        \"strip-ansi\": {\n          \"version\": \"3.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\n          \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-regex\": \"^2.0.0\"\n          }\n        },\n        \"strip-bom\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz\",\n          \"integrity\": \"sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-utf8\": \"^0.2.0\"\n          }\n        },\n        \"supports-color\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\n          \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n          \"dev\": true\n        },\n        \"test-exclude\": {\n          \"version\": \"4.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-4.1.0.tgz\",\n          \"integrity\": \"sha1-BMpwtzkN04yY1KADoXOAbKeZHJE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"arrify\": \"^1.0.1\",\n            \"micromatch\": \"^2.3.11\",\n            \"object-assign\": \"^4.1.0\",\n            \"read-pkg-up\": \"^1.0.1\",\n            \"require-main-filename\": \"^1.0.1\"\n          }\n        },\n        \"to-fast-properties\": {\n          \"version\": \"1.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz\",\n          \"integrity\": \"sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=\",\n          \"dev\": true\n        },\n        \"trim-right\": {\n          \"version\": \"1.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz\",\n          \"integrity\": \"sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=\",\n          \"dev\": true\n        },\n        \"uglify-js\": {\n          \"version\": \"2.8.22\",\n          \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.22.tgz\",\n          \"integrity\": \"sha1-1Uk0d4qNoUkD+imjJvskwKtRoaA=\",\n          \"dev\": true,\n          \"optional\": true,\n          \"requires\": {\n            \"source-map\": \"~0.5.1\",\n            \"uglify-to-browserify\": \"~1.0.0\",\n            \"yargs\": \"~3.10.0\"\n          },\n          \"dependencies\": {\n            \"yargs\": {\n              \"version\": \"3.10.0\",\n              \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz\",\n              \"integrity\": \"sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=\",\n              \"dev\": true,\n              \"optional\": true,\n              \"requires\": {\n                \"camelcase\": \"^1.0.2\",\n                \"cliui\": \"^2.1.0\",\n                \"decamelize\": \"^1.0.0\",\n                \"window-size\": \"0.1.0\"\n              }\n            }\n          }\n        },\n        \"uglify-to-browserify\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz\",\n          \"integrity\": \"sha1-bgkk1r2mta/jSeOabWMoUKD4grc=\",\n          \"dev\": true,\n          \"optional\": true\n        },\n        \"validate-npm-package-license\": {\n          \"version\": \"3.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.1.tgz\",\n          \"integrity\": \"sha1-KAS6vnEq0zeUWaz74kdGqywwP7w=\",\n          \"dev\": true,\n          \"requires\": {\n            \"spdx-correct\": \"~1.0.0\",\n            \"spdx-expression-parse\": \"~1.0.0\"\n          }\n        },\n        \"which\": {\n          \"version\": \"1.2.14\",\n          \"resolved\": \"https://registry.npmjs.org/which/-/which-1.2.14.tgz\",\n          \"integrity\": \"sha1-mofEN48D6CfOyvGs31bHNsAcFOU=\",\n          \"dev\": true,\n          \"requires\": {\n            \"isexe\": \"^2.0.0\"\n          }\n        },\n        \"which-module\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz\",\n          \"integrity\": \"sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8=\",\n          \"dev\": true\n        },\n        \"window-size\": {\n          \"version\": \"0.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz\",\n          \"integrity\": \"sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0=\",\n          \"dev\": true,\n          \"optional\": true\n        },\n        \"wordwrap\": {\n          \"version\": \"0.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",\n          \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",\n          \"dev\": true\n        },\n        \"wrap-ansi\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz\",\n          \"integrity\": \"sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=\",\n          \"dev\": true,\n          \"requires\": {\n            \"string-width\": \"^1.0.1\",\n            \"strip-ansi\": \"^3.0.1\"\n          }\n        },\n        \"wrappy\": {\n          \"version\": \"1.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n          \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\",\n          \"dev\": true\n        },\n        \"write-file-atomic\": {\n          \"version\": \"1.3.4\",\n          \"resolved\": \"https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-1.3.4.tgz\",\n          \"integrity\": \"sha1-+Aek8LHZ6ROuekgRLmzDrxmRtF8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"graceful-fs\": \"^4.1.11\",\n            \"imurmurhash\": \"^0.1.4\",\n            \"slide\": \"^1.1.5\"\n          }\n        },\n        \"y18n\": {\n          \"version\": \"3.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz\",\n          \"integrity\": \"sha1-bRX7qITAhnnA136I53WegR4H+kE=\",\n          \"dev\": true\n        },\n        \"yallist\": {\n          \"version\": \"2.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz\",\n          \"integrity\": \"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=\",\n          \"dev\": true\n        },\n        \"yargs\": {\n          \"version\": \"7.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-7.1.0.tgz\",\n          \"integrity\": \"sha1-a6MY6xaWFyf10oT46gA+jWFU0Mg=\",\n          \"dev\": true,\n          \"requires\": {\n            \"camelcase\": \"^3.0.0\",\n            \"cliui\": \"^3.2.0\",\n            \"decamelize\": \"^1.1.1\",\n            \"get-caller-file\": \"^1.0.1\",\n            \"os-locale\": \"^1.4.0\",\n            \"read-pkg-up\": \"^1.0.1\",\n            \"require-directory\": \"^2.1.1\",\n            \"require-main-filename\": \"^1.0.1\",\n            \"set-blocking\": \"^2.0.0\",\n            \"string-width\": \"^1.0.2\",\n            \"which-module\": \"^1.0.0\",\n            \"y18n\": \"^3.2.1\",\n            \"yargs-parser\": \"^5.0.0\"\n          },\n          \"dependencies\": {\n            \"camelcase\": {\n              \"version\": \"3.0.0\",\n              \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz\",\n              \"integrity\": \"sha1-MvxLn82vhF/N9+c7uXysImHwqwo=\",\n              \"dev\": true\n            },\n            \"cliui\": {\n              \"version\": \"3.2.0\",\n              \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz\",\n              \"integrity\": \"sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=\",\n              \"dev\": true,\n              \"requires\": {\n                \"string-width\": \"^1.0.1\",\n                \"strip-ansi\": \"^3.0.1\",\n                \"wrap-ansi\": \"^2.0.0\"\n              }\n            }\n          }\n        },\n        \"yargs-parser\": {\n          \"version\": \"5.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-5.0.0.tgz\",\n          \"integrity\": \"sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=\",\n          \"dev\": true,\n          \"requires\": {\n            \"camelcase\": \"^3.0.0\"\n          },\n          \"dependencies\": {\n            \"camelcase\": {\n              \"version\": \"3.0.0\",\n              \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz\",\n              \"integrity\": \"sha1-MvxLn82vhF/N9+c7uXysImHwqwo=\",\n              \"dev\": true\n            }\n          }\n        }\n      }\n    },\n    \"oauth-sign\": {\n      \"version\": \"0.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz\",\n      \"integrity\": \"sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=\",\n      \"dev\": true\n    },\n    \"object.pick\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz\",\n      \"integrity\": \"sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=\",\n      \"dev\": true,\n      \"requires\": {\n        \"isobject\": \"^3.0.1\"\n      },\n      \"dependencies\": {\n        \"isobject\": {\n          \"version\": \"3.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz\",\n          \"integrity\": \"sha1-TkMekrEalzFjaqH5yNHMvP2reN8=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"only-shallow\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/only-shallow/-/only-shallow-1.2.0.tgz\",\n      \"integrity\": \"sha1-cc7O26kyS8BRiu8Q7AgNMkncJGU=\",\n      \"dev\": true\n    },\n    \"opener\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/opener/-/opener-1.5.1.tgz\",\n      \"integrity\": \"sha512-goYSy5c2UXE4Ra1xixabeVh1guIX/ZV/YokJksb6q2lubWu6UbvPQ20p542/sFIll1nl8JnCyK9oBaOcCWXwvA==\",\n      \"dev\": true\n    },\n    \"os-homedir\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.1.tgz\",\n      \"integrity\": \"sha1-DWK99EuRb9O73PLKsZGUj7CU8Ac=\",\n      \"dev\": true\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\"\n    },\n    \"pinkie\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz\",\n      \"integrity\": \"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=\",\n      \"dev\": true\n    },\n    \"pinkie-promise\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz\",\n      \"integrity\": \"sha1-ITXW36ejWMBprJsXh3YogihFD/o=\",\n      \"dev\": true,\n      \"requires\": {\n        \"pinkie\": \"^2.0.0\"\n      }\n    },\n    \"process-nextick-args\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\",\n      \"dev\": true\n    },\n    \"pseudomap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz\",\n      \"integrity\": \"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=\",\n      \"dev\": true\n    },\n    \"punycode\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",\n      \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",\n      \"dev\": true\n    },\n    \"qs\": {\n      \"version\": \"6.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.3.2.tgz\",\n      \"integrity\": \"sha1-51vV9uJoEioqDgvaYwslUMFmUCw=\",\n      \"dev\": true\n    },\n    \"randomatic\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/randomatic/-/randomatic-3.1.1.tgz\",\n      \"integrity\": \"sha512-TuDE5KxZ0J461RVjrJZCJc+J+zCkTb1MbH9AQUq68sMhOMcy9jLcb3BrZKgp9q9Ncltdg4QVqWrH02W2EFFVYw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-number\": \"^4.0.0\",\n        \"kind-of\": \"^6.0.0\",\n        \"math-random\": \"^1.0.1\"\n      },\n      \"dependencies\": {\n        \"is-number\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz\",\n          \"integrity\": \"sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ==\",\n          \"dev\": true\n        },\n        \"kind-of\": {\n          \"version\": \"6.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz\",\n          \"integrity\": \"sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"readable-stream\": {\n      \"version\": \"2.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\n      \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"remarkable\": {\n      \"version\": \"1.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/remarkable/-/remarkable-1.7.4.tgz\",\n      \"integrity\": \"sha512-e6NKUXgX95whv7IgddywbeN/ItCkWbISmc2DiqHJb0wTrqZIexqdco5b8Z3XZoo/48IdNVKM9ZCvTPJ4F5uvhg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"argparse\": \"^1.0.10\",\n        \"autolinker\": \"~0.28.0\"\n      }\n    },\n    \"repeat-element\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz\",\n      \"integrity\": \"sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g==\",\n      \"dev\": true\n    },\n    \"repeat-string\": {\n      \"version\": \"1.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz\",\n      \"integrity\": \"sha1-jcrkcOHIirwtYA//Sndihtp15jc=\",\n      \"dev\": true\n    },\n    \"request\": {\n      \"version\": \"2.79.0\",\n      \"resolved\": \"https://registry.npmjs.org/request/-/request-2.79.0.tgz\",\n      \"integrity\": \"sha1-Tf5b9r6LjNw3/Pk+BLZVd3InEN4=\",\n      \"dev\": true,\n      \"requires\": {\n        \"aws-sign2\": \"~0.6.0\",\n        \"aws4\": \"^1.2.1\",\n        \"caseless\": \"~0.11.0\",\n        \"combined-stream\": \"~1.0.5\",\n        \"extend\": \"~3.0.0\",\n        \"forever-agent\": \"~0.6.1\",\n        \"form-data\": \"~2.1.1\",\n        \"har-validator\": \"~2.0.6\",\n        \"hawk\": \"~3.1.3\",\n        \"http-signature\": \"~1.1.0\",\n        \"is-typedarray\": \"~1.0.0\",\n        \"isstream\": \"~0.1.2\",\n        \"json-stringify-safe\": \"~5.0.1\",\n        \"mime-types\": \"~2.1.7\",\n        \"oauth-sign\": \"~0.8.1\",\n        \"qs\": \"~6.3.0\",\n        \"stringstream\": \"~0.0.4\",\n        \"tough-cookie\": \"~2.3.0\",\n        \"tunnel-agent\": \"~0.4.1\",\n        \"uuid\": \"^3.0.0\"\n      }\n    },\n    \"rimraf\": {\n      \"version\": \"2.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.4.5.tgz\",\n      \"integrity\": \"sha1-7nEM5dk6j9uFb7Xqj/Di11k0sto=\",\n      \"optional\": true,\n      \"requires\": {\n        \"glob\": \"^6.0.1\"\n      }\n    },\n    \"safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"safe-json-stringify\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/safe-json-stringify/-/safe-json-stringify-1.2.0.tgz\",\n      \"integrity\": \"sha512-gH8eh2nZudPQO6TytOvbxnuhYBOvDBBLW52tz5q6X58lJcd/tkmqFR+5Z9adS8aJtURSXWThWy/xJtJwixErvg==\",\n      \"optional\": true\n    },\n    \"safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"set-getter\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/set-getter/-/set-getter-0.1.0.tgz\",\n      \"integrity\": \"sha1-12nBgsnVpR9AkUXy+6guXoboA3Y=\",\n      \"dev\": true,\n      \"requires\": {\n        \"to-object-path\": \"^0.3.0\"\n      }\n    },\n    \"signal-exit\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz\",\n      \"integrity\": \"sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA==\",\n      \"dev\": true\n    },\n    \"sntp\": {\n      \"version\": \"1.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-1.0.9.tgz\",\n      \"integrity\": \"sha1-ZUEYTMkK7qbG57NeJlkIJEPGYZg=\",\n      \"dev\": true,\n      \"requires\": {\n        \"hoek\": \"2.x.x\"\n      }\n    },\n    \"source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true\n    },\n    \"sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n      \"integrity\": \"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\",\n      \"dev\": true\n    },\n    \"sshpk\": {\n      \"version\": \"1.16.1\",\n      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz\",\n      \"integrity\": \"sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"asn1\": \"~0.2.3\",\n        \"assert-plus\": \"^1.0.0\",\n        \"bcrypt-pbkdf\": \"^1.0.0\",\n        \"dashdash\": \"^1.12.0\",\n        \"ecc-jsbn\": \"~0.1.1\",\n        \"getpass\": \"^0.1.1\",\n        \"jsbn\": \"~0.1.0\",\n        \"safer-buffer\": \"^2.0.2\",\n        \"tweetnacl\": \"~0.14.0\"\n      },\n      \"dependencies\": {\n        \"assert-plus\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n          \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"stack-utils\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/stack-utils/-/stack-utils-0.4.0.tgz\",\n      \"integrity\": \"sha1-lAy4L8z6hOj/Lz/fKT/ngBa+zNE=\",\n      \"dev\": true\n    },\n    \"string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"stringstream\": {\n      \"version\": \"0.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/stringstream/-/stringstream-0.0.6.tgz\",\n      \"integrity\": \"sha512-87GEBAkegbBcweToUrdzf3eLhWNg06FJTebl4BVJz/JgWy8CvEr9dRtX5qWphiynMSQlxxi+QqN0z5T32SLlhA==\",\n      \"dev\": true\n    },\n    \"strip-ansi\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\n      \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^2.0.0\"\n      }\n    },\n    \"strip-color\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-color/-/strip-color-0.1.0.tgz\",\n      \"integrity\": \"sha1-EG9l09PmotlAHKwOsM6LinArT3s=\",\n      \"dev\": true\n    },\n    \"supports-color\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\n      \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n      \"dev\": true\n    },\n    \"tap\": {\n      \"version\": \"9.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/tap/-/tap-9.0.3.tgz\",\n      \"integrity\": \"sha1-vT3uy1B/TjaEhu66jxDNePQvcoM=\",\n      \"dev\": true,\n      \"requires\": {\n        \"bluebird\": \"^3.3.1\",\n        \"clean-yaml-object\": \"^0.1.0\",\n        \"color-support\": \"^1.1.0\",\n        \"coveralls\": \"^2.11.2\",\n        \"deeper\": \"^2.1.0\",\n        \"foreground-child\": \"^1.3.3\",\n        \"glob\": \"^7.0.0\",\n        \"isexe\": \"^1.0.0\",\n        \"js-yaml\": \"^3.3.1\",\n        \"nyc\": \"^10.0.0\",\n        \"only-shallow\": \"^1.0.2\",\n        \"opener\": \"^1.4.1\",\n        \"os-homedir\": \"1.0.1\",\n        \"readable-stream\": \"^2.0.2\",\n        \"signal-exit\": \"^3.0.0\",\n        \"stack-utils\": \"^0.4.0\",\n        \"tap-mocha-reporter\": \"^3.0.1\",\n        \"tap-parser\": \"^4.2.2\",\n        \"tmatch\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"glob\": {\n          \"version\": \"7.1.6\",\n          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.6.tgz\",\n          \"integrity\": \"sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"fs.realpath\": \"^1.0.0\",\n            \"inflight\": \"^1.0.4\",\n            \"inherits\": \"2\",\n            \"minimatch\": \"^3.0.4\",\n            \"once\": \"^1.3.0\",\n            \"path-is-absolute\": \"^1.0.0\"\n          }\n        }\n      }\n    },\n    \"tap-mocha-reporter\": {\n      \"version\": \"3.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/tap-mocha-reporter/-/tap-mocha-reporter-3.0.9.tgz\",\n      \"integrity\": \"sha512-VO07vhC9EG27EZdOe7bWBj1ldbK+DL9TnRadOgdQmiQOVZjFpUEQuuqO7+rNSO2kfmkq5hWeluYXDWNG/ytXTQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-support\": \"^1.1.0\",\n        \"debug\": \"^2.1.3\",\n        \"diff\": \"^1.3.2\",\n        \"escape-string-regexp\": \"^1.0.3\",\n        \"glob\": \"^7.0.5\",\n        \"js-yaml\": \"^3.3.1\",\n        \"readable-stream\": \"^2.1.5\",\n        \"tap-parser\": \"^5.1.0\",\n        \"unicode-length\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"glob\": {\n          \"version\": \"7.1.6\",\n          \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.6.tgz\",\n          \"integrity\": \"sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"fs.realpath\": \"^1.0.0\",\n            \"inflight\": \"^1.0.4\",\n            \"inherits\": \"2\",\n            \"minimatch\": \"^3.0.4\",\n            \"once\": \"^1.3.0\",\n            \"path-is-absolute\": \"^1.0.0\"\n          }\n        },\n        \"tap-parser\": {\n          \"version\": \"5.4.0\",\n          \"resolved\": \"https://registry.npmjs.org/tap-parser/-/tap-parser-5.4.0.tgz\",\n          \"integrity\": \"sha512-BIsIaGqv7uTQgTW1KLTMNPSEQf4zDDPgYOBRdgOfuB+JFOLRBfEu6cLa/KvMvmqggu1FKXDfitjLwsq4827RvA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"events-to-array\": \"^1.0.1\",\n            \"js-yaml\": \"^3.2.7\",\n            \"readable-stream\": \"^2\"\n          }\n        }\n      }\n    },\n    \"tap-parser\": {\n      \"version\": \"4.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/tap-parser/-/tap-parser-4.2.4.tgz\",\n      \"integrity\": \"sha1-ZaKmAuSeF9uD+h8pX1P60DAlzE0=\",\n      \"dev\": true,\n      \"requires\": {\n        \"events-to-array\": \"^1.0.1\",\n        \"js-yaml\": \"^3.2.7\",\n        \"readable-stream\": \"^2\"\n      }\n    },\n    \"through2\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/through2/-/through2-2.0.5.tgz\",\n      \"integrity\": \"sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"readable-stream\": \"~2.3.6\",\n        \"xtend\": \"~4.0.1\"\n      }\n    },\n    \"tmatch\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/tmatch/-/tmatch-3.1.0.tgz\",\n      \"integrity\": \"sha512-W3MSATOCN4pVu2qFxmJLIArSifeSOFqnfx9hiUaVgOmeRoI2NbU7RNga+6G+L8ojlFeQge+ZPCclWyUpQ8UeNQ==\",\n      \"dev\": true\n    },\n    \"to-object-path\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz\",\n      \"integrity\": \"sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=\",\n      \"dev\": true,\n      \"requires\": {\n        \"kind-of\": \"^3.0.2\"\n      }\n    },\n    \"toml\": {\n      \"version\": \"2.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/toml/-/toml-2.3.6.tgz\",\n      \"integrity\": \"sha512-gVweAectJU3ebq//Ferr2JUY4WKSDe5N+z0FvjDncLGyHmIDoxgY/2Ie4qfEIDm4IS7OA6Rmdm7pdEEdMcV/xQ==\",\n      \"dev\": true\n    },\n    \"tough-cookie\": {\n      \"version\": \"2.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz\",\n      \"integrity\": \"sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"punycode\": \"^1.4.1\"\n      }\n    },\n    \"tunnel-agent\": {\n      \"version\": \"0.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.4.3.tgz\",\n      \"integrity\": \"sha1-Y3PbdpCf5XDgjXNYM2Xtgop07us=\",\n      \"dev\": true\n    },\n    \"tweetnacl\": {\n      \"version\": \"0.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\",\n      \"integrity\": \"sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=\",\n      \"dev\": true\n    },\n    \"typedarray\": {\n      \"version\": \"0.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz\",\n      \"integrity\": \"sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=\",\n      \"dev\": true\n    },\n    \"unicode-length\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-length/-/unicode-length-1.0.3.tgz\",\n      \"integrity\": \"sha1-Wtp6f+1RhBpBijKM8UlHisg1irs=\",\n      \"dev\": true,\n      \"requires\": {\n        \"punycode\": \"^1.3.2\",\n        \"strip-ansi\": \"^3.0.1\"\n      }\n    },\n    \"util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\",\n      \"dev\": true\n    },\n    \"uuid\": {\n      \"version\": \"3.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz\",\n      \"integrity\": \"sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==\",\n      \"dev\": true\n    },\n    \"vasync\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/vasync/-/vasync-1.4.3.tgz\",\n      \"integrity\": \"sha1-yG1S4rcWE9Ke7fFZ8xNdvnSc7jc=\",\n      \"dev\": true,\n      \"requires\": {\n        \"jsprim\": \"0.3.0\",\n        \"verror\": \"1.1.0\"\n      },\n      \"dependencies\": {\n        \"extsprintf\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.0.0.tgz\",\n          \"integrity\": \"sha1-TVi4Fazlvr/E6/A8+YsKdgSpm4Y=\",\n          \"dev\": true\n        },\n        \"json-schema\": {\n          \"version\": \"0.2.2\",\n          \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.2.tgz\",\n          \"integrity\": \"sha1-UDVPGfYDkXxpX3C4Wvp3w7DyNQY=\",\n          \"dev\": true\n        },\n        \"jsprim\": {\n          \"version\": \"0.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-0.3.0.tgz\",\n          \"integrity\": \"sha1-zRNGbqJIDb2DlqVw1H0x3aR2+LE=\",\n          \"dev\": true,\n          \"requires\": {\n            \"extsprintf\": \"1.0.0\",\n            \"json-schema\": \"0.2.2\",\n            \"verror\": \"1.3.3\"\n          },\n          \"dependencies\": {\n            \"verror\": {\n              \"version\": \"1.3.3\",\n              \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.3.3.tgz\",\n              \"integrity\": \"sha1-impKw6jHdLb2h/7OSb3/14VS4s0=\",\n              \"dev\": true,\n              \"requires\": {\n                \"extsprintf\": \"1.0.0\"\n              }\n            }\n          }\n        },\n        \"verror\": {\n          \"version\": \"1.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.1.0.tgz\",\n          \"integrity\": \"sha1-KktOsUogcFHnWm+U7lExW/FzobA=\",\n          \"dev\": true,\n          \"requires\": {\n            \"extsprintf\": \"1.0.0\"\n          }\n        }\n      }\n    },\n    \"verror\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.3.3.tgz\",\n      \"integrity\": \"sha1-impKw6jHdLb2h/7OSb3/14VS4s0=\",\n      \"dev\": true,\n      \"requires\": {\n        \"extsprintf\": \"1.0.0\"\n      },\n      \"dependencies\": {\n        \"extsprintf\": {\n          \"version\": \"1.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.0.0.tgz\",\n          \"integrity\": \"sha1-TVi4Fazlvr/E6/A8+YsKdgSpm4Y=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"which\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.1.tgz\",\n      \"integrity\": \"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"dependencies\": {\n        \"isexe\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n          \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\"\n    },\n    \"xtend\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\n      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\",\n      \"dev\": true\n    },\n    \"yallist\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz\",\n      \"integrity\": \"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0830078125,
          "content": "{\n  \"name\": \"bunyan\",\n  \"version\": \"2.0.5\",\n  \"description\": \"a JSON logging library for node.js services\",\n  \"author\": \"Trent Mick <trentm@gmail.com> (http://trentm.com)\",\n  \"main\": \"./lib/bunyan.js\",\n  \"bin\": {\n    \"bunyan\": \"./bin/bunyan\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/trentm/node-bunyan.git\"\n  },\n  \"engines\": [\n    \"node >=0.10.0\"\n  ],\n  \"keywords\": [\n    \"log\",\n    \"logging\",\n    \"log4j\",\n    \"json\",\n    \"bunyan\"\n  ],\n  \"license\": \"MIT\",\n  \"files\": [\n    \"bin\",\n    \"lib\"\n  ],\n  \"dependencies\": {\n    \"exeunt\": \"1.1.0\"\n  },\n  \"// dtrace-provider\": \"required for dtrace features\",\n  \"// mv\": \"required for RotatingFileStream\",\n  \"// moment\": \"required for local time with CLI\",\n  \"optionalDependencies\": {\n    \"dtrace-provider\": \"~0.8\",\n    \"mv\": \"~2\",\n    \"safe-json-stringify\": \"~1\",\n    \"moment\": \"^2.19.3\"\n  },\n  \"devDependencies\": {\n    \"ben\": \"0.0.0\",\n    \"markdown-toc\": \"0.12.x\",\n    \"tap\": \"^9.0.3\",\n    \"vasync\": \"1.4.3\",\n    \"verror\": \"1.3.3\"\n  },\n  \"scripts\": {\n    \"check\": \"make check\",\n    \"test\": \"tap test/*.test.js  # skip dtrace tests\"\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}