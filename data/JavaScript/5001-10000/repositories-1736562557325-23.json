{
  "metadata": {
    "timestamp": 1736562557325,
    "page": 23,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mailcow/mailcow-dockerized",
      "stars": 9381,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.404296875,
          "content": "# EditorConfig helps developers define and maintain consistent\n# coding styles between different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n[*]\n\n# Change these settings to your own preference\nindent_style = space\nindent_size = 2\n\n# We recommend you to keep these unchanged\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".env",
          "type": "blob",
          "size": 0.01171875,
          "content": "mailcow.conf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.861328125,
          "content": "!data/conf/nginx/dynmaps.conf\n!data/conf/nginx/meta_exporter.conf\n!data/conf/nginx/site.conf\n!/**/.gitkeep\n*.iml\n.idea\n.vscode/*\ndata/assets/ssl-example/*\ndata/assets/ssl/*\ndata/conf/borgmatic/\ndata/conf/clamav/whitelist.ign2\ndata/conf/dovecot/acl_anyone\ndata/conf/dovecot/dovecot-master.passwd\ndata/conf/dovecot/dovecot-master.userdb\ndata/conf/dovecot/extra.conf\ndata/conf/dovecot/mail_replica.conf\ndata/conf/dovecot/global_sieve_*\ndata/conf/dovecot/last_login\ndata/conf/dovecot/lua\ndata/conf/dovecot/mail_plugins*\ndata/conf/dovecot/shared_namespace.conf\ndata/conf/dovecot/sni.conf\ndata/conf/dovecot/sogo-sso.conf\ndata/conf/dovecot/sogo_trusted_ip.conf\ndata/conf/dovecot/sql\ndata/conf/nextcloud-*.bak\ndata/conf/nginx/*.active\ndata/conf/nginx/*.bak\ndata/conf/nginx/*.conf\ndata/conf/nginx/*.custom\ndata/conf/phpfpm/sogo-sso/sogo-sso.pass\ndata/conf/portainer/\ndata/conf/postfix/allow_mailcow_local.regexp\ndata/conf/postfix/custom_postscreen_whitelist.cidr\ndata/conf/postfix/custom_transport.pcre\ndata/conf/postfix/extra.cf\ndata/conf/postfix/sni.map\ndata/conf/postfix/sni.map.db\ndata/conf/postfix/sql\ndata/conf/postfix/dns_blocklists.cf\ndata/conf/postfix/dnsbl_reply.map\ndata/conf/rspamd/custom/*\ndata/conf/rspamd/local.d/*\ndata/conf/rspamd/override.d/*\ndata/conf/sogo/custom-theme.js\ndata/conf/sogo/plist_ldap\ndata/conf/sogo/sieve.creds\ndata/conf/sogo/cron.creds\ndata/conf/sogo/sogo-full.svg\ndata/gitea/\ndata/gogs/\ndata/hooks/dovecot/*\ndata/hooks/phpfpm/*\ndata/hooks/postfix/*\ndata/hooks/rspamd/*\ndata/hooks/sogo/*\ndata/hooks/unbound/*\ndata/web/templates/cache/*\n!data/web/templates/cache/.gitkeep\ndata/web/.well-known/acme-challenge\ndata/web/css/build/0081-custom-mailcow.css\ndata/web/inc/vars.local.inc.php\ndata/web/inc/app_info.inc.php\ndata/web/nextcloud*/\ndata/web/rc*/\ndocker-compose.override.yml\nmailcow.conf\nmailcow.conf_backup\nrebuild-images.sh\nrefresh_images.sh\nupdate_diffs/\ncreate_cold_standby.sh\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1474609375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, documentation edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at info@servercow.de. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.4775390625,
          "content": "# Contribution Guidelines\n**_Last modified on 15th August 2024_**\n\nFirst of all, thank you for wanting to provide a bugfix or a new feature for the mailcow community, it's because of your help that the project can continue to grow!\n\nAs we want to keep mailcow's development structured we setup these Guidelines which helps you to create your issue/pull request accordingly.\n\n**PLEASE NOTE, THAT WE MIGHT CLOSE ISSUES/PULL REQUESTS IF THEY DON'T FULLFIL OUR WRITTEN GUIDELINES WRITTEN INSIDE THIS DOCUMENT**. So please check this guidelines before you propose a Issue/Pull Request.\n\n## Topics\n\n- [Pull Requests](#pull-requests)\n- [Issue Reporting](#issue-reporting)\n    - [Guidelines](#issue-reporting-guidelines)\n    - [Issue Report Guide](#issue-report-guide)\n\n## Pull Requests\n**_Last modified on 15th August 2024_**\n\nHowever, please note the following regarding pull requests:\n\n1. **ALWAYS** create your PR using the staging branch of your locally cloned mailcow instance, as the pull request will end up in said staging branch of mailcow once approved. Ideally, you should simply create a new branch for your pull request that is named after the type of your PR (e.g. `feat/` for function updates or `fix/` for bug fixes) and the actual content (e.g. `sogo-6.0.0` for an update from SOGo to version 6 or `html-escape` for a fix that includes escaping HTML in mailcow).\n2. **ALWAYS** report/request issues/features in the english language, even though mailcow is a german based company. This is done to allow other GitHub users to reply to your issues/requests too which did not speak german or other languages besides english.\n3. Please **keep** this pull request branch **clean** and free of commits that have nothing to do with the changes you have made (e.g. commits from other users from other branches). *If you make changes to the `update.sh` script or other scripts that trigger a commit, there is usually a developer mode for clean working in this case.*\n4. **Test your changes before you commit them as a pull request.** <ins>If possible</ins>, write a small **test log** or demonstrate the functionality with a **screenshot or GIF**. *We will of course also test your pull request ourselves, but proof from you will save us the question of whether you have tested your own changes yourself.*\n5. **Please use** the pull request template we provide once creating a pull request. *HINT: During editing you encounter comments which looks like: `<!-- CONTENT -->`. These can be removed or kept, as they will not rendered later on GitHub! Please only create actual content without the said comments.* \n6. Please **ALWAYS** create the actual pull request against the staging branch and **NEVER** directly against the master branch. *If you forget to do this, our moobot will remind you to switch the branch to staging.*\n7. Wait for a merge commit: It may happen that we do not accept your pull request immediately or sometimes not at all for various reasons. Please do not be disappointed if this is the case. We always endeavor to incorporate any meaningful changes from the community into the mailcow project.\n8. If you are planning larger and therefore more complex pull requests, it would be advisable to first announce this in a separate issue and then start implementing it after the idea has been accepted in order to avoid unnecessary frustration and effort!\n\n---\n\n## Issue Reporting\n**_Last modified on 15th August 2024_**\n\nIf you plan to report a issue within mailcow please read and understand the following rules:\n\n### Issue Reporting Guidelines\n\n1. **ONLY** use the issue tracker for bug reports or improvement requests and NOT for support questions. For support questions you can either contact the [mailcow community on Telegram](https://docs.mailcow.email/#community-support-and-chat) or the mailcow team directly in exchange for a [support fee](https://docs.mailcow.email/#commercial-support).\n2. **ONLY** report an error if you have the **necessary know-how (at least the basics)** for the administration of an e-mail server and the usage of Docker. mailcow is a complex and fully-fledged e-mail server including groupware components on a Docker basement and it requires a bit of technical know-how for debugging and operating.\n3. **ALWAYS** report/request issues/features in the english language, even though mailcow is a german based company. This is done to allow other GitHub users to reply to your issues/requests too which did not speak german or other languages besides english.\n4. **ONLY** report bugs that are contained in the latest mailcow release series. *The definition of the latest release series includes the last major patch (e.g. 2023-12) and all minor patches (revisions) below it (e.g. 2023-12a, b, c etc.).* New issue reports published starting from January 1, 2024 must meet this criterion, as versions below the latest releases are no longer supported by us.\n5. When reporting a problem, please be as detailed as possible and include even the smallest changes to your mailcow installation. Simply fill out the corresponding bug report form in detail and accurately to minimize possible questions.\n6. **Before you open an issue/feature request**, please first check whether a similar request already exists in the mailcow tracker on GitHub. If so, please include yourself in this request.\n7. When you create a issue/feature request: Please note that the creation does <ins>**not guarantee an instant implementation or fix by the mailcow team or the community**</ins>.\n8. Please **ALWAYS** anonymize any sensitive information in your bug report or feature request before submitting it.\n\n### Issue Report Guide\n1. Read your logs; follow them to see what the reason for your problem is.\n2. Follow the leads given to you in your logfiles and start investigating.\n3. Restarting the troubled service or the whole stack to see if the problem persists.\n4. Read the [documentation](https://docs.mailcow.email/) of the troubled service and search its bugtracker for your problem.\n5. Search our [issues](https://github.com/mailcow/mailcow-dockerized/issues) for your problem.\n6. [Create an issue](https://github.com/mailcow/mailcow-dockerized/issues/new/choose) over at our GitHub repository if you think your problem might be a bug or a missing feature you badly need. But please make sure, that you include **all the logs** and a full description to your problem.\n7. Ask your questions in our community-driven [support channels](https://docs.mailcow.email/#community-support-and-chat).\n\n## When creating an issue/feature request or a pull request, you will be asked to confirm these guidelines.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3173828125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.1064453125,
          "content": "# mailcow: dockerized - 🐮 + 🐋 = 💕\n\n[![Translation status](https://translate.mailcow.email/widgets/mailcow-dockerized/-/translation/svg-badge.svg)](https://translate.mailcow.email/engage/mailcow-dockerized/)\n[![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/mailcow_email.svg?style=social&label=Follow%20%40mailcow_email)](https://twitter.com/mailcow_email)\n![Mastodon Follow](https://img.shields.io/mastodon/follow/109388212176073348?domain=https%3A%2F%2Fmailcow.social&label=Follow%20%40doncow%40mailcow.social&link=https%3A%2F%2Fmailcow.social%2F%40doncow)\n\n\n## Want to support mailcow?\n\nPlease [consider a support contract with Servercow](https://www.servercow.de/mailcow?lang=en#support) to support further development. _We_ support _you_ while _you_ support _us_. :)\n\nYou can also [get a SAL](https://www.servercow.de/mailcow?lang=en#sal) which is a one-time payment with no liabilities or returning fees.\n\nOr just spread the word: moo.\n\n## Info, documentation and support\n\nPlease see [the official documentation](https://docs.mailcow.email/) for installation and support instructions. 🐄\n\n🐛 **If you found a critical security issue, please mail us to [info at servercow.de](mailto:info@servercow.de).**\n\n## Cowmunity\n\n[mailcow community](https://community.mailcow.email)\n\n[Telegram mailcow channel](https://telegram.me/mailcow)\n\n[Telegram mailcow Off-Topic channel](https://t.me/mailcowOfftopic)\n\n[Official 𝕏 (Twitter) Account](https://twitter.com/mailcow_email)\n\n[Official Mastodon Account](https://mailcow.social/@doncow)\n\nTelegram desktop clients are available for [multiple platforms](https://desktop.telegram.org). You can search the groups history for keywords.\n\n## Misc\n\n**Important**: mailcow makes use of various open-source software. Please assure you agree with their license before using mailcow.\nAny part of mailcow itself is released under **GNU General Public License, Version 3**.\n\nmailcow is a registered word mark of The Infrastructure Company GmbH, Parkstr. 42, 47877 Willich, Germany.\n\nThe project is managed and maintained by The Infrastructure Company GmbH.\n\nOriginated from @andryyy (André)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.6962890625,
          "content": "# Security Policies and Procedures\n\nThis document outlines security procedures and general policies for the _mailcow: dockerized_ project as found on [mailcow-dockerized](https://github.com/mailcow/mailcow-dockerized).\n\n  * [Reporting a Vulnerability](#reporting-a-vulnerability)\n  * [Disclosure Policy](#disclosure-policy)\n  * [Comments on this Policy](#comments-on-this-policy)\n\n## Reporting a Vulnerability \n\nThe mailcow team and community take all security vulnerabilities\nseriously. Thank you for improving the security of our open source \nsoftware. We appreciate your efforts and responsible disclosure and will\nmake every effort to acknowledge your contributions.\n\nReport security vulnerabilities by emailing the mailcow team at:\n    \n    info at servercow.de\n\nmailcow team will acknowledge your email as soon as possible, and will\nsend a more detailed response afterwards indicating the next steps in \nhandling your report. After the initial reply to your report, the mailcow\nteam will endeavor to keep you informed of the progress towards a fix and\nfull announcement, and may ask for additional information or guidance.\n\nReport security vulnerabilities in third-party modules to the person or \nteam maintaining the module.\n\n## Disclosure Policy\n\nWhen the mailcow team receives a security bug report, they will assign it\nto a primary handler. This person will coordinate the fix and release\nprocess, involving the following steps:\n\n  * Confirm the problem and determine the affected versions.\n  * Audit code to find any potential similar problems.\n  * Prepare fixes for all releases still under maintenance.\n\n## Comments on this Policy\n\nIf you have suggestions on how this process could be improved please submit a\npull request.\n"
        },
        {
          "name": "create_cold_standby.sh",
          "type": "blob",
          "size": 0.169921875,
          "content": "#!/bin/bash\n\nexport REMOTE_SSH_KEY=/root/.ssh/id_rsa\nexport REMOTE_SSH_PORT=22\nexport REMOTE_SSH_HOST=my.remote.host\n\n/opt/mailcow-dockerized/helper-scripts/_cold-standby.sh\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 24.1875,
          "content": "services:\n\n    unbound-mailcow:\n      image: mailcow/unbound:1.23\n      environment:\n        - TZ=${TZ}\n        - SKIP_UNBOUND_HEALTHCHECK=${SKIP_UNBOUND_HEALTHCHECK:-n}\n      volumes:\n        - ./data/hooks/unbound:/hooks:Z\n        - ./data/conf/unbound/unbound.conf:/etc/unbound/unbound.conf:ro,Z\n      restart: always\n      tty: true\n      networks:\n        mailcow-network:\n          ipv4_address: ${IPV4_NETWORK:-172.22.1}.254\n          aliases:\n            - unbound\n\n    mysql-mailcow:\n      image: mariadb:10.5\n      depends_on:\n        - unbound-mailcow\n        - netfilter-mailcow\n      stop_grace_period: 45s\n      volumes:\n        - mysql-vol-1:/var/lib/mysql/\n        - mysql-socket-vol-1:/var/run/mysqld/\n        - ./data/conf/mysql/:/etc/mysql/conf.d/:ro,Z\n      environment:\n        - TZ=${TZ}\n        - MYSQL_ROOT_PASSWORD=${DBROOT}\n        - MYSQL_DATABASE=${DBNAME}\n        - MYSQL_USER=${DBUSER}\n        - MYSQL_PASSWORD=${DBPASS}\n        - MYSQL_INITDB_SKIP_TZINFO=1\n      restart: always\n      ports:\n        - \"${SQL_PORT:-127.0.0.1:13306}:3306\"\n      networks:\n        mailcow-network:\n          aliases:\n            - mysql\n\n    redis-mailcow:\n      image: redis:7-alpine\n      volumes:\n        - redis-vol-1:/data/\n      restart: always\n      depends_on:\n        - netfilter-mailcow\n      ports:\n        - \"${REDIS_PORT:-127.0.0.1:7654}:6379\"\n      environment:\n        - TZ=${TZ}\n      sysctls:\n        - net.core.somaxconn=4096\n      networks:\n        mailcow-network:\n          ipv4_address: ${IPV4_NETWORK:-172.22.1}.249\n          aliases:\n            - redis\n\n    clamd-mailcow:\n      image: mailcow/clamd:1.66\n      restart: always\n      depends_on:\n        unbound-mailcow:\n          condition: service_healthy\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      environment:\n        - TZ=${TZ}\n        - SKIP_CLAMD=${SKIP_CLAMD:-n}\n      volumes:\n        - ./data/conf/clamav/:/etc/clamav/:Z\n        - clamd-db-vol-1:/var/lib/clamav\n      networks:\n        mailcow-network:\n          aliases:\n            - clamd\n\n    rspamd-mailcow:\n      image: mailcow/rspamd:1.98\n      stop_grace_period: 30s\n      depends_on:\n        - dovecot-mailcow\n        - clamd-mailcow\n      environment:\n        - TZ=${TZ}\n        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}\n        - IPV6_NETWORK=${IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n        - SPAMHAUS_DQS_KEY=${SPAMHAUS_DQS_KEY:-}\n      volumes:\n        - ./data/hooks/rspamd:/hooks:Z\n        - ./data/conf/rspamd/custom/:/etc/rspamd/custom:z\n        - ./data/conf/rspamd/override.d/:/etc/rspamd/override.d:Z\n        - ./data/conf/rspamd/local.d/:/etc/rspamd/local.d:Z\n        - ./data/conf/rspamd/plugins.d/:/etc/rspamd/plugins.d:Z\n        - ./data/conf/rspamd/lua/:/etc/rspamd/lua/:ro,Z\n        - ./data/conf/rspamd/rspamd.conf.local:/etc/rspamd/rspamd.conf.local:Z\n        - ./data/conf/rspamd/rspamd.conf.override:/etc/rspamd/rspamd.conf.override:Z\n        - rspamd-vol-1:/var/lib/rspamd\n      restart: always\n      hostname: rspamd\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      networks:\n        mailcow-network:\n          aliases:\n            - rspamd\n\n    php-fpm-mailcow:\n      image: mailcow/phpfpm:1.91.1\n      command: \"php-fpm -d date.timezone=${TZ} -d expose_php=0\"\n      depends_on:\n        - redis-mailcow\n      volumes:\n        - ./data/hooks/phpfpm:/hooks:Z\n        - ./data/web:/web:z\n        - ./data/conf/rspamd/dynmaps:/dynmaps:ro,z\n        - ./data/conf/rspamd/custom/:/rspamd_custom_maps:z\n        - rspamd-vol-1:/var/lib/rspamd\n        - mysql-socket-vol-1:/var/run/mysqld/\n        - ./data/conf/sogo/:/etc/sogo/:z\n        - ./data/conf/rspamd/meta_exporter:/meta_exporter:ro,z\n        - ./data/conf/phpfpm/sogo-sso/:/etc/sogo-sso/:z\n        - ./data/conf/phpfpm/php-fpm.d/pools.conf:/usr/local/etc/php-fpm.d/z-pools.conf:Z\n        - ./data/conf/phpfpm/php-conf.d/opcache-recommended.ini:/usr/local/etc/php/conf.d/opcache-recommended.ini:Z\n        - ./data/conf/phpfpm/php-conf.d/upload.ini:/usr/local/etc/php/conf.d/upload.ini:Z\n        - ./data/conf/phpfpm/php-conf.d/other.ini:/usr/local/etc/php/conf.d/zzz-other.ini:Z\n        - ./data/conf/dovecot/global_sieve_before:/global_sieve/before:z\n        - ./data/conf/dovecot/global_sieve_after:/global_sieve/after:z\n        - ./data/assets/templates:/tpls:z\n        - ./data/conf/nginx/:/etc/nginx/conf.d/:z\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      environment:\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n        - LOG_LINES=${LOG_LINES:-9999}\n        - TZ=${TZ}\n        - DBNAME=${DBNAME}\n        - DBUSER=${DBUSER}\n        - DBPASS=${DBPASS}\n        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n        - MAILCOW_PASS_SCHEME=${MAILCOW_PASS_SCHEME:-BLF-CRYPT}\n        - IMAP_PORT=${IMAP_PORT:-143}\n        - IMAPS_PORT=${IMAPS_PORT:-993}\n        - POP_PORT=${POP_PORT:-110}\n        - POPS_PORT=${POPS_PORT:-995}\n        - SIEVE_PORT=${SIEVE_PORT:-4190}\n        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}\n        - IPV6_NETWORK=${IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}\n        - SUBMISSION_PORT=${SUBMISSION_PORT:-587}\n        - SMTPS_PORT=${SMTPS_PORT:-465}\n        - SMTP_PORT=${SMTP_PORT:-25}\n        - API_KEY=${API_KEY:-invalid}\n        - API_KEY_READ_ONLY=${API_KEY_READ_ONLY:-invalid}\n        - API_ALLOW_FROM=${API_ALLOW_FROM:-invalid}\n        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-mailcow-dockerized}\n        - SKIP_SOLR=${SKIP_SOLR:-y}\n        - SKIP_CLAMD=${SKIP_CLAMD:-n}\n        - SKIP_SOGO=${SKIP_SOGO:-n}\n        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}\n        - MASTER=${MASTER:-y}\n        - DEV_MODE=${DEV_MODE:-n}\n        - DEMO_MODE=${DEMO_MODE:-n}\n        - WEBAUTHN_ONLY_TRUSTED_VENDORS=${WEBAUTHN_ONLY_TRUSTED_VENDORS:-n}\n        - CLUSTERMODE=${CLUSTERMODE:-}\n        - FLATCURVE_EXPERIMENTAL=${FLATCURVE_EXPERIMENTAL:-}\n      restart: always\n      networks:\n        mailcow-network:\n          aliases:\n            - phpfpm\n\n    sogo-mailcow:\n      image: mailcow/sogo:1.127.1\n      environment:\n        - DBNAME=${DBNAME}\n        - DBUSER=${DBUSER}\n        - DBPASS=${DBPASS}\n        - TZ=${TZ}\n        - LOG_LINES=${LOG_LINES:-9999}\n        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n        - MAILCOW_PASS_SCHEME=${MAILCOW_PASS_SCHEME:-BLF-CRYPT}\n        - ACL_ANYONE=${ACL_ANYONE:-disallow}\n        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}\n        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}\n        - SOGO_EXPIRE_SESSION=${SOGO_EXPIRE_SESSION:-480}\n        - SKIP_SOGO=${SKIP_SOGO:-n}\n        - MASTER=${MASTER:-y}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      volumes:\n        - ./data/hooks/sogo:/hooks:Z\n        - ./data/conf/sogo/:/etc/sogo/:z\n        - ./data/web/inc/init_db.inc.php:/init_db.inc.php:z\n        - ./data/conf/sogo/custom-favicon.ico:/usr/lib/GNUstep/SOGo/WebServerResources/img/sogo.ico:z\n        - ./data/conf/sogo/custom-theme.js:/usr/lib/GNUstep/SOGo/WebServerResources/js/theme.js:z\n        - ./data/conf/sogo/custom-sogo.js:/usr/lib/GNUstep/SOGo/WebServerResources/js/custom-sogo.js:z\n        - mysql-socket-vol-1:/var/run/mysqld/\n        - sogo-web-vol-1:/sogo_web\n        - sogo-userdata-backup-vol-1:/sogo_backup\n      labels:\n        ofelia.enabled: \"true\"\n        ofelia.job-exec.sogo_sessions.schedule: \"@every 1m\"\n        ofelia.job-exec.sogo_sessions.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-tool -v expire-sessions $${SOGO_EXPIRE_SESSION} || exit 0\\\"\"\n        ofelia.job-exec.sogo_ealarms.schedule: \"@every 1m\"\n        ofelia.job-exec.sogo_ealarms.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-ealarms-notify -p /etc/sogo/cron.creds || exit 0\\\"\"\n        ofelia.job-exec.sogo_eautoreply.schedule: \"@every 5m\"\n        ofelia.job-exec.sogo_eautoreply.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-tool update-autoreply -p /etc/sogo/cron.creds || exit 0\\\"\"\n        ofelia.job-exec.sogo_backup.schedule: \"@every 24h\"\n        ofelia.job-exec.sogo_backup.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-tool backup /sogo_backup ALL || exit 0\\\"\"\n      restart: always\n      networks:\n        mailcow-network:\n          ipv4_address: ${IPV4_NETWORK:-172.22.1}.248\n          aliases:\n            - sogo\n\n    dovecot-mailcow:\n      image: mailcow/dovecot:2.2\n      depends_on:\n        - mysql-mailcow\n        - netfilter-mailcow\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      cap_add:\n        - NET_BIND_SERVICE\n      volumes:\n        - ./data/hooks/dovecot:/hooks:Z\n        - ./data/conf/dovecot:/etc/dovecot:z\n        - ./data/assets/ssl:/etc/ssl/mail/:ro,z\n        - ./data/conf/sogo/:/etc/sogo/:z\n        - ./data/conf/phpfpm/sogo-sso/:/etc/phpfpm/:z\n        - vmail-vol-1:/var/vmail\n        - vmail-index-vol-1:/var/vmail_index\n        - crypt-vol-1:/mail_crypt/\n        - ./data/conf/rspamd/custom/:/etc/rspamd/custom:z\n        - ./data/assets/templates:/templates:z\n        - rspamd-vol-1:/var/lib/rspamd\n        - mysql-socket-vol-1:/var/run/mysqld/\n      environment:\n        - DOVECOT_MASTER_USER=${DOVECOT_MASTER_USER:-}\n        - DOVECOT_MASTER_PASS=${DOVECOT_MASTER_PASS:-}\n        - MAILCOW_REPLICA_IP=${MAILCOW_REPLICA_IP:-}\n        - DOVEADM_REPLICA_PORT=${DOVEADM_REPLICA_PORT:-}\n        - LOG_LINES=${LOG_LINES:-9999}\n        - DBNAME=${DBNAME}\n        - DBUSER=${DBUSER}\n        - DBPASS=${DBPASS}\n        - TZ=${TZ}\n        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n        - MAILCOW_PASS_SCHEME=${MAILCOW_PASS_SCHEME:-BLF-CRYPT}\n        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}\n        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}\n        - MAILDIR_GC_TIME=${MAILDIR_GC_TIME:-7200}\n        - ACL_ANYONE=${ACL_ANYONE:-disallow}\n        - SKIP_SOLR=${SKIP_SOLR:-y}\n        - MAILDIR_SUB=${MAILDIR_SUB:-}\n        - MASTER=${MASTER:-y}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-mailcow-dockerized}\n        - FLATCURVE_EXPERIMENTAL=${FLATCURVE_EXPERIMENTAL:-n}\n      ports:\n        - \"${DOVEADM_PORT:-127.0.0.1:19991}:12345\"\n        - \"${IMAP_PORT:-143}:143\"\n        - \"${IMAPS_PORT:-993}:993\"\n        - \"${POP_PORT:-110}:110\"\n        - \"${POPS_PORT:-995}:995\"\n        - \"${SIEVE_PORT:-4190}:4190\"\n      restart: always\n      tty: true\n      labels:\n        ofelia.enabled: \"true\"\n        ofelia.job-exec.dovecot_imapsync_runner.schedule: \"@every 1m\"\n        ofelia.job-exec.dovecot_imapsync_runner.no-overlap: \"true\"\n        ofelia.job-exec.dovecot_imapsync_runner.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu nobody /usr/local/bin/imapsync_runner.pl || exit 0\\\"\"\n        ofelia.job-exec.dovecot_trim_logs.schedule: \"@every 1m\"\n        ofelia.job-exec.dovecot_trim_logs.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu vmail /usr/local/bin/trim_logs.sh || exit 0\\\"\"\n        ofelia.job-exec.dovecot_quarantine.schedule: \"@every 20m\"\n        ofelia.job-exec.dovecot_quarantine.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu vmail /usr/local/bin/quarantine_notify.py || exit 0\\\"\"\n        ofelia.job-exec.dovecot_clean_q_aged.schedule: \"@every 24h\"\n        ofelia.job-exec.dovecot_clean_q_aged.command: \"/bin/bash -c \\\"[[ $${MASTER} == y ]] && /usr/local/bin/gosu vmail /usr/local/bin/clean_q_aged.sh || exit 0\\\"\"\n        ofelia.job-exec.dovecot_maildir_gc.schedule: \"@every 30m\"\n        ofelia.job-exec.dovecot_maildir_gc.command: \"/bin/bash -c \\\"source /source_env.sh ; /usr/local/bin/gosu vmail /usr/local/bin/maildir_gc.sh\\\"\"\n        ofelia.job-exec.dovecot_sarules.schedule: \"@every 24h\"\n        ofelia.job-exec.dovecot_sarules.command: \"/bin/bash -c \\\"/usr/local/bin/sa-rules.sh\\\"\"\n        ofelia.job-exec.dovecot_fts.schedule: \"@every 24h\"\n        ofelia.job-exec.dovecot_fts.command: \"/bin/bash -c \\\"/usr/local/bin/gosu vmail /usr/local/bin/optimize-fts.sh\\\"\"\n        ofelia.job-exec.dovecot_repl_health.schedule: \"@every 5m\"\n        ofelia.job-exec.dovecot_repl_health.command: \"/bin/bash -c \\\"/usr/local/bin/gosu vmail /usr/local/bin/repl_health.sh\\\"\"\n      ulimits:\n        nproc: 65535\n        nofile:\n          soft: 20000\n          hard: 40000\n      networks:\n        mailcow-network:\n          ipv4_address: ${IPV4_NETWORK:-172.22.1}.250\n          aliases:\n            - dovecot\n\n    postfix-mailcow:\n      image: mailcow/postfix:1.77\n      depends_on:\n        mysql-mailcow:\n          condition: service_started\n        unbound-mailcow:\n          condition: service_healthy\n      volumes:\n        - ./data/hooks/postfix:/hooks:Z\n        - ./data/conf/postfix:/opt/postfix/conf:z\n        - ./data/assets/ssl:/etc/ssl/mail/:ro,z\n        - postfix-vol-1:/var/spool/postfix\n        - crypt-vol-1:/var/lib/zeyple\n        - rspamd-vol-1:/var/lib/rspamd\n        - mysql-socket-vol-1:/var/run/mysqld/\n      environment:\n        - LOG_LINES=${LOG_LINES:-9999}\n        - TZ=${TZ}\n        - DBNAME=${DBNAME}\n        - DBUSER=${DBUSER}\n        - DBPASS=${DBPASS}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n        - SPAMHAUS_DQS_KEY=${SPAMHAUS_DQS_KEY:-}\n      cap_add:\n        - NET_BIND_SERVICE\n      ports:\n        - \"${SMTP_PORT:-25}:25\"\n        - \"${SMTPS_PORT:-465}:465\"\n        - \"${SUBMISSION_PORT:-587}:587\"\n      restart: always\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      networks:\n        mailcow-network:\n          ipv4_address: ${IPV4_NETWORK:-172.22.1}.253\n          aliases:\n            - postfix\n\n    memcached-mailcow:\n      image: memcached:alpine\n      restart: always\n      environment:\n        - TZ=${TZ}\n      networks:\n        mailcow-network:\n          aliases:\n            - memcached\n\n    nginx-mailcow:\n      depends_on:\n        - sogo-mailcow\n        - php-fpm-mailcow\n        - redis-mailcow\n      image: nginx:mainline-alpine\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      command: /bin/sh -c \"envsubst < /etc/nginx/conf.d/templates/listen_plain.template > /etc/nginx/conf.d/listen_plain.active &&\n        envsubst < /etc/nginx/conf.d/templates/listen_ssl.template > /etc/nginx/conf.d/listen_ssl.active &&\n        envsubst < /etc/nginx/conf.d/templates/sogo.template > /etc/nginx/conf.d/sogo.active &&\n        . /etc/nginx/conf.d/templates/server_name.template.sh > /etc/nginx/conf.d/server_name.active &&\n        . /etc/nginx/conf.d/templates/sites.template.sh > /etc/nginx/conf.d/sites.active &&\n        . /etc/nginx/conf.d/templates/sogo_eas.template.sh > /etc/nginx/conf.d/sogo_eas.active &&\n        nginx -qt &&\n        until ping phpfpm -c1 > /dev/null; do sleep 1; done &&\n        until ping sogo -c1 > /dev/null; do sleep 1; done &&\n        until ping redis -c1 > /dev/null; do sleep 1; done &&\n        until ping rspamd -c1 > /dev/null; do sleep 1; done &&\n        exec nginx -g 'daemon off;'\"\n      environment:\n        - HTTPS_PORT=${HTTPS_PORT:-443}\n        - HTTP_PORT=${HTTP_PORT:-80}\n        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}\n        - TZ=${TZ}\n        - SKIP_SOGO=${SKIP_SOGO:-n}\n        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}\n        - ADDITIONAL_SERVER_NAMES=${ADDITIONAL_SERVER_NAMES:-}\n      volumes:\n        - ./data/web:/web:ro,z\n        - ./data/conf/rspamd/dynmaps:/dynmaps:ro,z\n        - ./data/assets/ssl/:/etc/ssl/mail/:ro,z\n        - ./data/conf/nginx/:/etc/nginx/conf.d/:z\n        - ./data/conf/rspamd/meta_exporter:/meta_exporter:ro,z\n        - sogo-web-vol-1:/usr/lib/GNUstep/SOGo/\n      ports:\n        - \"${HTTPS_BIND:-}:${HTTPS_PORT:-443}:${HTTPS_PORT:-443}\"\n        - \"${HTTP_BIND:-}:${HTTP_PORT:-80}:${HTTP_PORT:-80}\"\n      restart: always\n      networks:\n        mailcow-network:\n          aliases:\n            - nginx\n\n    acme-mailcow:\n      depends_on:\n        nginx-mailcow:\n          condition: service_started\n        unbound-mailcow:\n          condition: service_healthy\n      image: mailcow/acme:1.90\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      environment:\n        - LOG_LINES=${LOG_LINES:-9999}\n        - ACME_CONTACT=${ACME_CONTACT:-}\n        - ADDITIONAL_SAN=${ADDITIONAL_SAN}\n        - AUTODISCOVER_SAN=${AUTODISCOVER_SAN:-y}\n        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n        - DBNAME=${DBNAME}\n        - DBUSER=${DBUSER}\n        - DBPASS=${DBPASS}\n        - SKIP_LETS_ENCRYPT=${SKIP_LETS_ENCRYPT:-n}\n        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-mailcow-dockerized}\n        - DIRECTORY_URL=${DIRECTORY_URL:-}\n        - ENABLE_SSL_SNI=${ENABLE_SSL_SNI:-n}\n        - SKIP_IP_CHECK=${SKIP_IP_CHECK:-n}\n        - SKIP_HTTP_VERIFICATION=${SKIP_HTTP_VERIFICATION:-n}\n        - ONLY_MAILCOW_HOSTNAME=${ONLY_MAILCOW_HOSTNAME:-n}\n        - LE_STAGING=${LE_STAGING:-n}\n        - TZ=${TZ}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n        - SNAT_TO_SOURCE=${SNAT_TO_SOURCE:-n}\n        - SNAT6_TO_SOURCE=${SNAT6_TO_SOURCE:-n}\n      volumes:\n        - ./data/web/.well-known/acme-challenge:/var/www/acme:z\n        - ./data/assets/ssl:/var/lib/acme/:z\n        - ./data/assets/ssl-example:/var/lib/ssl-example/:ro,Z\n        - mysql-socket-vol-1:/var/run/mysqld/\n      restart: always\n      networks:\n        mailcow-network:\n          aliases:\n            - acme\n\n    netfilter-mailcow:\n      image: mailcow/netfilter:1.59\n      stop_grace_period: 30s\n      restart: always\n      privileged: true\n      environment:\n        - TZ=${TZ}\n        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}\n        - IPV6_NETWORK=${IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}\n        - SNAT_TO_SOURCE=${SNAT_TO_SOURCE:-n}\n        - SNAT6_TO_SOURCE=${SNAT6_TO_SOURCE:-n}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n        - MAILCOW_REPLICA_IP=${MAILCOW_REPLICA_IP:-}\n        - DISABLE_NETFILTER_ISOLATION_RULE=${DISABLE_NETFILTER_ISOLATION_RULE:-n}\n      network_mode: \"host\"\n      volumes:\n        - /lib/modules:/lib/modules:ro\n\n    watchdog-mailcow:\n      image: mailcow/watchdog:2.05\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      tmpfs:\n        - /tmp\n      volumes:\n        - rspamd-vol-1:/var/lib/rspamd\n        - mysql-socket-vol-1:/var/run/mysqld/\n        - postfix-vol-1:/var/spool/postfix\n        - ./data/assets/ssl:/etc/ssl/mail/:ro,z\n      restart: always\n      depends_on:\n        - postfix-mailcow\n        - dovecot-mailcow\n        - mysql-mailcow\n        - acme-mailcow\n        - redis-mailcow\n      environment:\n        - IPV6_NETWORK=${IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}\n        - LOG_LINES=${LOG_LINES:-9999}\n        - TZ=${TZ}\n        - DBNAME=${DBNAME}\n        - DBUSER=${DBUSER}\n        - DBPASS=${DBPASS}\n        - DBROOT=${DBROOT}\n        - USE_WATCHDOG=${USE_WATCHDOG:-n}\n        - WATCHDOG_NOTIFY_EMAIL=${WATCHDOG_NOTIFY_EMAIL:-}\n        - WATCHDOG_NOTIFY_BAN=${WATCHDOG_NOTIFY_BAN:-y}\n        - WATCHDOG_NOTIFY_START=${WATCHDOG_NOTIFY_START:-y}\n        - WATCHDOG_SUBJECT=${WATCHDOG_SUBJECT:-Watchdog ALERT}\n        - WATCHDOG_NOTIFY_WEBHOOK=${WATCHDOG_NOTIFY_WEBHOOK:-}\n        - WATCHDOG_NOTIFY_WEBHOOK_BODY=${WATCHDOG_NOTIFY_WEBHOOK_BODY:-}\n        - WATCHDOG_EXTERNAL_CHECKS=${WATCHDOG_EXTERNAL_CHECKS:-n}\n        - WATCHDOG_MYSQL_REPLICATION_CHECKS=${WATCHDOG_MYSQL_REPLICATION_CHECKS:-n}\n        - WATCHDOG_VERBOSE=${WATCHDOG_VERBOSE:-n}\n        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-mailcow-dockerized}\n        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}\n        - IP_BY_DOCKER_API=${IP_BY_DOCKER_API:-0}\n        - CHECK_UNBOUND=${CHECK_UNBOUND:-1}\n        - SKIP_CLAMD=${SKIP_CLAMD:-n}\n        - SKIP_LETS_ENCRYPT=${SKIP_LETS_ENCRYPT:-n}\n        - SKIP_SOGO=${SKIP_SOGO:-n}\n        - HTTPS_PORT=${HTTPS_PORT:-443}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n        - EXTERNAL_CHECKS_THRESHOLD=${EXTERNAL_CHECKS_THRESHOLD:-1}\n        - NGINX_THRESHOLD=${NGINX_THRESHOLD:-5}\n        - UNBOUND_THRESHOLD=${UNBOUND_THRESHOLD:-5}\n        - REDIS_THRESHOLD=${REDIS_THRESHOLD:-5}\n        - MYSQL_THRESHOLD=${MYSQL_THRESHOLD:-5}\n        - MYSQL_REPLICATION_THRESHOLD=${MYSQL_REPLICATION_THRESHOLD:-1}\n        - SOGO_THRESHOLD=${SOGO_THRESHOLD:-3}\n        - POSTFIX_THRESHOLD=${POSTFIX_THRESHOLD:-8}\n        - CLAMD_THRESHOLD=${CLAMD_THRESHOLD:-15}\n        - DOVECOT_THRESHOLD=${DOVECOT_THRESHOLD:-12}\n        - DOVECOT_REPL_THRESHOLD=${DOVECOT_REPL_THRESHOLD:-20}\n        - PHPFPM_THRESHOLD=${PHPFPM_THRESHOLD:-5}\n        - RATELIMIT_THRESHOLD=${RATELIMIT_THRESHOLD:-1}\n        - FAIL2BAN_THRESHOLD=${FAIL2BAN_THRESHOLD:-1}\n        - ACME_THRESHOLD=${ACME_THRESHOLD:-1}\n        - RSPAMD_THRESHOLD=${RSPAMD_THRESHOLD:-5}\n        - OLEFY_THRESHOLD=${OLEFY_THRESHOLD:-5}\n        - MAILQ_THRESHOLD=${MAILQ_THRESHOLD:-20}\n        - MAILQ_CRIT=${MAILQ_CRIT:-30}\n      networks:\n        mailcow-network:\n          aliases:\n            - watchdog\n\n    dockerapi-mailcow:\n      image: mailcow/dockerapi:2.09\n      security_opt:\n        - label=disable\n      restart: always\n      dns:\n        - ${IPV4_NETWORK:-172.22.1}.254\n      environment:\n        - DBROOT=${DBROOT}\n        - TZ=${TZ}\n        - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}\n        - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}\n      volumes:\n        - /var/run/docker.sock:/var/run/docker.sock:ro\n      networks:\n        mailcow-network:\n          aliases:\n            - dockerapi\n\n\n    ##### Will be removed soon #####\n    solr-mailcow:\n      image: mailcow/solr:1.8.3\n      restart: always\n      depends_on:\n        - netfilter-mailcow\n      volumes:\n        - solr-vol-1:/opt/solr/server/solr/dovecot-fts/data\n      ports:\n        - \"${SOLR_PORT:-127.0.0.1:18983}:8983\"\n      environment:\n        - TZ=${TZ}\n        - SOLR_HEAP=${SOLR_HEAP:-1024}\n        - SKIP_SOLR=${SKIP_SOLR:-y}\n        - FLATCURVE_EXPERIMENTAL=${FLATCURVE_EXPERIMENTAL:-n}\n      networks:\n        mailcow-network:\n          aliases:\n            - solr\n    ################################\n\n    olefy-mailcow:\n      image: mailcow/olefy:1.13\n      restart: always\n      environment:\n        - TZ=${TZ}\n        - OLEFY_BINDADDRESS=0.0.0.0\n        - OLEFY_BINDPORT=10055\n        - OLEFY_TMPDIR=/tmp\n        - OLEFY_PYTHON_PATH=/usr/bin/python3\n        - OLEFY_OLEVBA_PATH=/usr/bin/olevba\n        - OLEFY_LOGLVL=20\n        - OLEFY_MINLENGTH=500\n        - OLEFY_DEL_TMP=1\n      networks:\n        mailcow-network:\n          aliases:\n            - olefy\n\n    ofelia-mailcow:\n      image: mcuadros/ofelia:latest\n      restart: always\n      command: daemon --docker -f label=com.docker.compose.project=${COMPOSE_PROJECT_NAME}\n      environment:\n        - TZ=${TZ}\n        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}\n      depends_on:\n        - sogo-mailcow\n        - dovecot-mailcow\n      labels:\n        ofelia.enabled: \"true\"\n      security_opt:\n        - label=disable\n      volumes:\n        - /var/run/docker.sock:/var/run/docker.sock:ro\n      networks:\n        mailcow-network:\n          aliases:\n            - ofelia\n\n    ipv6nat-mailcow:\n      depends_on:\n        - unbound-mailcow\n        - mysql-mailcow\n        - redis-mailcow\n        - clamd-mailcow\n        - rspamd-mailcow\n        - php-fpm-mailcow\n        - sogo-mailcow\n        - dovecot-mailcow\n        - postfix-mailcow\n        - memcached-mailcow\n        - nginx-mailcow\n        - acme-mailcow\n        - netfilter-mailcow\n        - watchdog-mailcow\n        - dockerapi-mailcow\n        - solr-mailcow\n      environment:\n        - TZ=${TZ}\n      image: robbertkl/ipv6nat\n      security_opt:\n        - label=disable\n      restart: always\n      privileged: true\n      network_mode: \"host\"\n      volumes:\n        - /var/run/docker.sock:/var/run/docker.sock:ro\n        - /lib/modules:/lib/modules:ro\n\nnetworks:\n  mailcow-network:\n    driver: bridge\n    driver_opts:\n      com.docker.network.bridge.name: br-mailcow\n    enable_ipv6: true\n    ipam:\n      driver: default\n      config:\n        - subnet: ${IPV4_NETWORK:-172.22.1}.0/24\n        - subnet: ${IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}\n\nvolumes:\n  vmail-vol-1:\n  vmail-index-vol-1:\n  mysql-vol-1:\n  mysql-socket-vol-1:\n  redis-vol-1:\n  rspamd-vol-1:\n  solr-vol-1:\n  postfix-vol-1:\n  crypt-vol-1:\n  sogo-web-vol-1:\n  sogo-userdata-backup-vol-1:\n  clamd-db-vol-1:\n"
        },
        {
          "name": "generate_config.sh",
          "type": "blob",
          "size": 22.6484375,
          "content": "#!/usr/bin/env bash\n\nset -o pipefail\n\nif [[ \"$(uname -r)\" =~ ^4\\.15\\.0-60 ]]; then\n  echo \"DO NOT RUN mailcow ON THIS UBUNTU KERNEL!\";\n  echo \"Please update to 5.x or use another distribution.\"\n  exit 1\nfi\n\nif [[ \"$(uname -r)\" =~ ^4\\.4\\. ]]; then\n  if grep -q Ubuntu <<< \"$(uname -a)\"; then\n    echo \"DO NOT RUN mailcow ON THIS UBUNTU KERNEL!\";\n    echo \"Please update to linux-generic-hwe-16.04 by running \\\"apt-get install --install-recommends linux-generic-hwe-16.04\\\"\"\n    exit 1\n  fi\nfi\n\nif grep --help 2>&1 | head -n 1 | grep -q -i \"busybox\"; then echo \"BusyBox grep detected, please install gnu grep, \\\"apk add --no-cache --upgrade grep\\\"\"; exit 1; fi\n# This will also cover sort\nif cp --help 2>&1 | head -n 1 | grep -q -i \"busybox\"; then echo \"BusyBox cp detected, please install coreutils, \\\"apk add --no-cache --upgrade coreutils\\\"\"; exit 1; fi\nif sed --help 2>&1 | head -n 1 | grep -q -i \"busybox\"; then echo \"BusyBox sed detected, please install gnu sed, \\\"apk add --no-cache --upgrade sed\\\"\"; exit 1; fi\n\nfor bin in openssl curl docker git awk sha1sum grep cut; do\n  if [[ -z $(which ${bin}) ]]; then echo \"Cannot find ${bin}, exiting...\"; exit 1; fi\ndone\n\n# Check Docker Version (need at least 24.X)\ndocker_version=$(docker -v | grep -oP '\\d+\\.\\d+\\.\\d+' | cut -d '.' -f 1)\n\nif [[ $docker_version -lt 24 ]]; then\n  echo -e \"\\e[31mCannot find Docker with a Version higher or equals 24.0.0\\e[0m\"\n  echo -e \"\\e[33mmailcow needs a newer Docker version to work properly...\\e[0m\"\n  echo -e \"\\e[31mPlease update your Docker installation... exiting\\e[0m\"\n  exit 1\nfi\n\nif docker compose > /dev/null 2>&1; then\n    if docker compose version --short | grep -e \"^2.\" -e \"^v2.\" > /dev/null 2>&1; then\n      COMPOSE_VERSION=native\n      echo -e \"\\e[33mFound Docker Compose Plugin (native).\\e[0m\"\n      echo -e \"\\e[33mSetting the DOCKER_COMPOSE_VERSION Variable to native\\e[0m\"\n      sleep 2\n      echo -e \"\\e[33mNotice: You'll have to update this Compose Version via your Package Manager manually!\\e[0m\"\n    else\n      echo -e \"\\e[31mCannot find Docker Compose with a Version Higher than 2.X.X.\\e[0m\" \n      echo -e \"\\e[31mPlease update/install it manually regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n      exit 1\n    fi\nelif docker-compose > /dev/null 2>&1; then\n  if ! [[ $(alias docker-compose 2> /dev/null) ]] ; then\n    if docker-compose version --short | grep \"^2.\" > /dev/null 2>&1; then\n      COMPOSE_VERSION=standalone\n      echo -e \"\\e[33mFound Docker Compose Standalone.\\e[0m\"\n      echo -e \"\\e[33mSetting the DOCKER_COMPOSE_VERSION Variable to standalone\\e[0m\"\n      sleep 2\n      echo -e \"\\e[33mNotice: For an automatic update of docker-compose please use the update_compose.sh scripts located at the helper-scripts folder.\\e[0m\"\n    else\n      echo -e \"\\e[31mCannot find Docker Compose with a Version Higher than 2.X.X.\\e[0m\" \n      echo -e \"\\e[31mPlease update/install manually regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n      exit 1\n    fi\n  fi\n\nelse\n  echo -e \"\\e[31mCannot find Docker Compose.\\e[0m\" \n  echo -e \"\\e[31mPlease install it regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n  exit 1\nfi\n\ndetect_bad_asn() {\n  echo -e \"\\e[33mDetecting if your IP is listed on Spamhaus Bad ASN List...\\e[0m\"\n  response=$(curl --connect-timeout 15 --max-time 30 -s -o /dev/null -w \"%{http_code}\" \"https://asn-check.mailcow.email\")\n  if [ \"$response\" -eq 503 ]; then\n    if [ -z \"$SPAMHAUS_DQS_KEY\" ]; then\n      echo -e \"\\e[33mYour server's public IP uses an AS that is blocked by Spamhaus to use their DNS public blocklists for Postfix.\\e[0m\"\n      echo -e \"\\e[33mmailcow did not detected a value for the variable SPAMHAUS_DQS_KEY inside mailcow.conf!\\e[0m\"\n      sleep 2\n      echo \"\"\n      echo -e \"\\e[33mTo use the Spamhaus DNS Blocklists again, you will need to create a FREE account for their Data Query Service (DQS) at: https://www.spamhaus.com/free-trial/sign-up-for-a-free-data-query-service-account\\e[0m\"\n      echo -e \"\\e[33mOnce done, enter your DQS API key in mailcow.conf and mailcow will do the rest for you!\\e[0m\"\n      echo \"\"\n      sleep 2\n\n    else\n      echo -e \"\\e[33mYour server's public IP uses an AS that is blocked by Spamhaus to use their DNS public blocklists for Postfix.\\e[0m\"\n      echo -e \"\\e[32mmailcow detected a Value for the variable SPAMHAUS_DQS_KEY inside mailcow.conf. Postfix will use DQS with the given API key...\\e[0m\"\n    fi\n  elif [ \"$response\" -eq 200 ]; then\n    echo -e \"\\e[33mCheck completed! Your IP is \\e[32mclean\\e[0m\"\n  elif [ \"$response\" -eq 429 ]; then\n    echo -e \"\\e[33mCheck completed! \\e[31mYour IP seems to be rate limited on the ASN Check service... please try again later!\\e[0m\"\n  else\n    echo -e \"\\e[31mCheck failed! \\e[0mMaybe a DNS or Network problem?\\e[0m\"\n  fi\n}\n\n### If generate_config.sh is started with --dev or -d it will not check out nightly or master branch and will keep on the current branch\nif [[ ${1} == \"--dev\" || ${1} == \"-d\" ]]; then\n  SKIP_BRANCH=y\nelse\n  SKIP_BRANCH=n\nfi\n\nif [ -f mailcow.conf ]; then\n  read -r -p \"A config file exists and will be overwritten, are you sure you want to continue? [y/N] \" response\n  case $response in\n    [yY][eE][sS]|[yY])\n      mv mailcow.conf mailcow.conf_backup\n      chmod 600 mailcow.conf_backup\n      ;;\n    *)\n      exit 1\n    ;;\n  esac\nfi\n\necho \"Press enter to confirm the detected value '[value]' where applicable or enter a custom value.\"\nwhile [ -z \"${MAILCOW_HOSTNAME}\" ]; do\n  read -p \"Mail server hostname (FQDN) - this is not your mail domain, but your mail servers hostname: \" -e MAILCOW_HOSTNAME\n  DOTS=${MAILCOW_HOSTNAME//[^.]};\n  if [ ${#DOTS} -lt 1 ]; then\n    echo -e \"\\e[31mMAILCOW_HOSTNAME (${MAILCOW_HOSTNAME}) is not a FQDN!\\e[0m\"\n    sleep 1\n    echo \"Please change it to a FQDN and redeploy the stack with docker(-)compose up -d\"\n    exit 1\n  elif [[ \"${MAILCOW_HOSTNAME: -1}\" == \".\" ]]; then\n    echo \"MAILCOW_HOSTNAME (${MAILCOW_HOSTNAME}) is ending with a dot. This is not a valid FQDN!\"\n    exit 1\n  elif [ ${#DOTS} -eq 1 ]; then\n    echo -e \"\\e[33mMAILCOW_HOSTNAME (${MAILCOW_HOSTNAME}) does not contain a Subdomain. This is not fully tested and may cause issues.\\e[0m\"\n    echo \"Find more information about why this message exists here: https://github.com/mailcow/mailcow-dockerized/issues/1572\"\n    read -r -p \"Do you want to proceed anyway? [y/N] \" response\n    if [[ \"$response\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n      echo \"OK. Procceding.\"\n    else\n      echo \"OK. Exiting.\"\n      exit 1\n    fi\n  fi\ndone\n\nif [ -a /etc/timezone ]; then\n  DETECTED_TZ=$(cat /etc/timezone)\nelif [ -a /etc/localtime ]; then\n  DETECTED_TZ=$(readlink /etc/localtime|sed -n 's|^.*zoneinfo/||p')\nfi\n\nwhile [ -z \"${MAILCOW_TZ}\" ]; do\n  if [ -z \"${DETECTED_TZ}\" ]; then\n    read -p \"Timezone: \" -e MAILCOW_TZ\n  else\n    read -p \"Timezone [${DETECTED_TZ}]: \" -e MAILCOW_TZ\n    [ -z \"${MAILCOW_TZ}\" ] && MAILCOW_TZ=${DETECTED_TZ}\n  fi\ndone\n\nMEM_TOTAL=$(awk '/MemTotal/ {print $2}' /proc/meminfo)\n\nif [ -z \"${SKIP_CLAMD}\" ]; then\n  if [ \"${MEM_TOTAL}\" -le \"2621440\" ]; then\n    echo \"Installed memory is <= 2.5 GiB. It is recommended to disable ClamAV to prevent out-of-memory situations.\"\n    echo \"ClamAV can be re-enabled by setting SKIP_CLAMD=n in mailcow.conf.\"\n    read -r -p  \"Do you want to disable ClamAV now? [Y/n] \" response\n    case $response in\n      [nN][oO]|[nN])\n        SKIP_CLAMD=n\n        ;;\n      *)\n        SKIP_CLAMD=y\n      ;;\n    esac\n  else\n    SKIP_CLAMD=n\n  fi\nfi\n\nif [ -z \"${SKIP_SOLR}\" ]; then\n  if [ \"${MEM_TOTAL}\" -le \"2097152\" ]; then\n    echo \"Disabling Solr on low-memory system.\"\n    SKIP_SOLR=y\n  elif [ \"${MEM_TOTAL}\" -le \"3670016\" ]; then\n    echo \"Installed memory is <= 3.5 GiB. It is recommended to disable Solr to prevent out-of-memory situations.\"\n    echo \"Solr is a prone to run OOM and should be monitored. The default Solr heap size is 1024 MiB and should be set in mailcow.conf according to your expected load.\"\n    echo \"Solr can be re-enabled by setting SKIP_SOLR=n in mailcow.conf but will refuse to start with less than 2 GB total memory.\"\n    read -r -p  \"Do you want to disable Solr now? [Y/n] \" response\n    case $response in\n      [nN][oO]|[nN])\n        SKIP_SOLR=n\n        ;;\n      *)\n        SKIP_SOLR=y\n      ;;\n    esac\n  else\n    SKIP_SOLR=n\n  fi\nfi\n\nif [[ ${SKIP_BRANCH} != y ]]; then\n  echo \"Which branch of mailcow do you want to use?\"\n  echo \"\"\n  echo \"Available Branches:\"\n  echo \"- master branch (stable updates) | default, recommended [1]\"\n  echo \"- nightly branch (unstable updates, testing) | not-production ready [2]\"\n  sleep 1\n\n  while [ -z \"${MAILCOW_BRANCH}\" ]; do\n    read -r -p  \"Choose the Branch with it's number [1/2] \" branch\n    case $branch in\n      [2])\n        MAILCOW_BRANCH=\"nightly\"\n        ;;\n      *)\n        MAILCOW_BRANCH=\"master\"\n      ;;\n    esac\n  done\n\n  git fetch --all\n  git checkout -f \"$MAILCOW_BRANCH\"\n\nelif [[ ${SKIP_BRANCH} == y ]]; then\n  echo -e \"\\033[33mEnabled Dev Mode.\\033[0m\"\n  echo -e \"\\033[33mNot checking out a different branch!\\033[0m\"\n  MAILCOW_BRANCH=$(git rev-parse --short $(git rev-parse @{upstream}))\n\nelse\n  echo -e \"\\033[31mCould not determine branch input...\"\n  echo -e \"\\033[31mExiting.\"\n  exit 1\nfi  \n\nif [ ! -z \"${MAILCOW_BRANCH}\" ]; then\n  git_branch=${MAILCOW_BRANCH}\nfi\n\n[ ! -f ./data/conf/rspamd/override.d/worker-controller-password.inc ] && echo '# Placeholder' > ./data/conf/rspamd/override.d/worker-controller-password.inc\n\ncat << EOF > mailcow.conf\n# ------------------------------\n# mailcow web ui configuration\n# ------------------------------\n# example.org is _not_ a valid hostname, use a fqdn here.\n# Default admin user is \"admin\"\n# Default password is \"moohoo\"\n\nMAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}\n\n# Password hash algorithm\n# Only certain password hash algorithm are supported. For a fully list of supported schemes,\n# see https://docs.mailcow.email/models/model-passwd/\nMAILCOW_PASS_SCHEME=BLF-CRYPT\n\n# ------------------------------\n# SQL database configuration\n# ------------------------------\n\nDBNAME=mailcow\nDBUSER=mailcow\n\n# Please use long, random alphanumeric strings (A-Za-z0-9)\n\nDBPASS=$(LC_ALL=C </dev/urandom tr -dc A-Za-z0-9 2> /dev/null | head -c 28)\nDBROOT=$(LC_ALL=C </dev/urandom tr -dc A-Za-z0-9 2> /dev/null | head -c 28)\n\n# ------------------------------\n# HTTP/S Bindings\n# ------------------------------\n\n# You should use HTTPS, but in case of SSL offloaded reverse proxies:\n# Might be important: This will also change the binding within the container.\n# If you use a proxy within Docker, point it to the ports you set below.\n# Do _not_ use IP:PORT in HTTP(S)_BIND or HTTP(S)_PORT\n# IMPORTANT: Do not use port 8081, 9081 or 65510!\n# Example: HTTP_BIND=1.2.3.4\n# For IPv4 leave it as it is: HTTP_BIND= & HTTPS_PORT=\n# For IPv6 see https://docs.mailcow.email/post_installation/firststeps-ip_bindings/\n\nHTTP_PORT=80\nHTTP_BIND=\n\nHTTPS_PORT=443\nHTTPS_BIND=\n\n# ------------------------------\n# Other bindings\n# ------------------------------\n# You should leave that alone\n# Format: 11.22.33.44:25 or 12.34.56.78:465 etc.\n\nSMTP_PORT=25\nSMTPS_PORT=465\nSUBMISSION_PORT=587\nIMAP_PORT=143\nIMAPS_PORT=993\nPOP_PORT=110\nPOPS_PORT=995\nSIEVE_PORT=4190\nDOVEADM_PORT=127.0.0.1:19991\nSQL_PORT=127.0.0.1:13306\nSOLR_PORT=127.0.0.1:18983\nREDIS_PORT=127.0.0.1:7654\n\n# Your timezone\n# See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for a list of timezones\n# Use the column named 'TZ identifier' + pay attention for the column named 'Notes'\n\nTZ=${MAILCOW_TZ}\n\n# Fixed project name\n# Please use lowercase letters only\n\nCOMPOSE_PROJECT_NAME=mailcowdockerized\n\n# Used Docker Compose version\n# Switch here between native (compose plugin) and standalone\n# For more informations take a look at the mailcow docs regarding the configuration options.\n# Normally this should be untouched but if you decided to use either of those you can switch it manually here.\n# Please be aware that at least one of those variants should be installed on your machine or mailcow will fail.\n\nDOCKER_COMPOSE_VERSION=${COMPOSE_VERSION}\n\n# Set this to \"allow\" to enable the anyone pseudo user. Disabled by default.\n# When enabled, ACL can be created, that apply to \"All authenticated users\"\n# This should probably only be activated on mail hosts, that are used exclusivly by one organisation.\n# Otherwise a user might share data with too many other users.\nACL_ANYONE=disallow\n\n# Garbage collector cleanup\n# Deleted domains and mailboxes are moved to /var/vmail/_garbage/timestamp_sanitizedstring\n# How long should objects remain in the garbage until they are being deleted? (value in minutes)\n# Check interval is hourly\n\nMAILDIR_GC_TIME=7200\n\n# Additional SAN for the certificate\n#\n# You can use wildcard records to create specific names for every domain you add to mailcow.\n# Example: Add domains \"example.com\" and \"example.net\" to mailcow, change ADDITIONAL_SAN to a value like:\n#ADDITIONAL_SAN=imap.*,smtp.*\n# This will expand the certificate to \"imap.example.com\", \"smtp.example.com\", \"imap.example.net\", \"smtp.example.net\"\n# plus every domain you add in the future.\n#\n# You can also just add static names...\n#ADDITIONAL_SAN=srv1.example.net\n# ...or combine wildcard and static names:\n#ADDITIONAL_SAN=imap.*,srv1.example.com\n#\n\nADDITIONAL_SAN=\n\n# Obtain certificates for autodiscover.* and autoconfig.* domains.\n# This can be useful to switch off in case you are in a scenario where a reverse proxy already handles those.\n# There are mixed scenarios where ports 80,443 are occupied and you do not want to share certs\n# between services. So acme-mailcow obtains for maildomains and all web-things get handled\n# in the reverse proxy.\nAUTODISCOVER_SAN=y\n\n# Additional server names for mailcow UI\n#\n# Specify alternative addresses for the mailcow UI to respond to\n# This is useful when you set mail.* as ADDITIONAL_SAN and want to make sure mail.maildomain.com will always point to the mailcow UI.\n# If the server name does not match a known site, Nginx decides by best-guess and may redirect users to the wrong web root.\n# You can understand this as server_name directive in Nginx.\n# Comma separated list without spaces! Example: ADDITIONAL_SERVER_NAMES=a.b.c,d.e.f\n\nADDITIONAL_SERVER_NAMES=\n\n# Skip running ACME (acme-mailcow, Let's Encrypt certs) - y/n\n\nSKIP_LETS_ENCRYPT=n\n\n# Create seperate certificates for all domains - y/n\n# this will allow adding more than 100 domains, but some email clients will not be able to connect with alternative hostnames\n# see https://doc.dovecot.org/admin_manual/ssl/sni_support\nENABLE_SSL_SNI=n\n\n# Skip IPv4 check in ACME container - y/n\n\nSKIP_IP_CHECK=n\n\n# Skip HTTP verification in ACME container - y/n\n\nSKIP_HTTP_VERIFICATION=n\n\n# Skip Unbound (DNS Resolver) Healthchecks (NOT Recommended!) - y/n\n\nSKIP_UNBOUND_HEALTHCHECK=n\n\n# Skip ClamAV (clamd-mailcow) anti-virus (Rspamd will auto-detect a missing ClamAV container) - y/n\n\nSKIP_CLAMD=${SKIP_CLAMD}\n\n# Skip SOGo: Will disable SOGo integration and therefore webmail, DAV protocols and ActiveSync support (experimental, unsupported, not fully implemented) - y/n\n\nSKIP_SOGO=n\n\n# Skip Solr on low-memory systems or if you do not want to store a readable index of your mails in solr-vol-1.\n\nSKIP_SOLR=${SKIP_SOLR}\n\n# Solr heap size in MB, there is no recommendation, please see Solr docs.\n# Solr is a prone to run OOM and should be monitored. Unmonitored Solr setups are not recommended.\n\nSOLR_HEAP=1024\n\n# Allow admins to log into SOGo as email user (without any password)\n\nALLOW_ADMIN_EMAIL_LOGIN=n\n\n# Enable watchdog (watchdog-mailcow) to restart unhealthy containers\n\nUSE_WATCHDOG=y\n\n# Send watchdog notifications by mail (sent from watchdog@MAILCOW_HOSTNAME)\n# CAUTION:\n# 1. You should use external recipients\n# 2. Mails are sent unsigned (no DKIM)\n# 3. If you use DMARC, create a separate DMARC policy (\"v=DMARC1; p=none;\" in _dmarc.MAILCOW_HOSTNAME)\n# Multiple rcpts allowed, NO quotation marks, NO spaces\n\n#WATCHDOG_NOTIFY_EMAIL=a@example.com,b@example.com,c@example.com\n#WATCHDOG_NOTIFY_EMAIL=\n\n# Send notifications to a webhook URL that receives a POST request with the content type \"application/json\".\n# You can use this to send notifications to services like Discord, Slack and others.\n#WATCHDOG_NOTIFY_WEBHOOK=https://discord.com/api/webhooks/XXXXXXXXXXXXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n# JSON body included in the webhook POST request. Needs to be in single quotes.\n# Following variables are available: SUBJECT, BODY\n#WATCHDOG_NOTIFY_WEBHOOK_BODY='{\"username\": \"mailcow Watchdog\", \"content\": \"**${SUBJECT}**\\n${BODY}\"}'\n\n# Notify about banned IP (includes whois lookup)\nWATCHDOG_NOTIFY_BAN=n\n\n# Send a notification when the watchdog is started.\nWATCHDOG_NOTIFY_START=y\n\n# Subject for watchdog mails. Defaults to \"Watchdog ALERT\" followed by the error message.\n#WATCHDOG_SUBJECT=\n\n# Checks if mailcow is an open relay. Requires a SAL. More checks will follow.\n# https://www.servercow.de/mailcow?lang=en\n# https://www.servercow.de/mailcow?lang=de\n# No data is collected. Opt-in and anonymous.\n# Will only work with unmodified mailcow setups.\nWATCHDOG_EXTERNAL_CHECKS=n\n\n# Enable watchdog verbose logging\nWATCHDOG_VERBOSE=n\n\n# Max log lines per service to keep in Redis logs\n\nLOG_LINES=9999\n\n# Internal IPv4 /24 subnet, format n.n.n (expands to n.n.n.0/24)\n# Use private IPv4 addresses only, see https://en.wikipedia.org/wiki/Private_network#Private_IPv4_addresses\n\nIPV4_NETWORK=172.22.1\n\n# Internal IPv6 subnet in fc00::/7\n# Use private IPv6 addresses only, see https://en.wikipedia.org/wiki/Private_network#Private_IPv6_addresses\n\nIPV6_NETWORK=fd4d:6169:6c63:6f77::/64\n\n# Use this IPv4 for outgoing connections (SNAT)\n\n#SNAT_TO_SOURCE=\n\n# Use this IPv6 for outgoing connections (SNAT)\n\n#SNAT6_TO_SOURCE=\n\n# Create or override an API key for the web UI\n# You _must_ define API_ALLOW_FROM, which is a comma separated list of IPs\n# An API key defined as API_KEY has read-write access\n# An API key defined as API_KEY_READ_ONLY has read-only access\n# Allowed chars for API_KEY and API_KEY_READ_ONLY: a-z, A-Z, 0-9, -\n# You can define API_KEY and/or API_KEY_READ_ONLY\n\n#API_KEY=\n#API_KEY_READ_ONLY=\n#API_ALLOW_FROM=172.22.1.1,127.0.0.1\n\n# mail_home is ~/Maildir\nMAILDIR_SUB=Maildir\n\n# SOGo session timeout in minutes\nSOGO_EXPIRE_SESSION=480\n\n# DOVECOT_MASTER_USER and DOVECOT_MASTER_PASS must both be provided. No special chars.\n# Empty by default to auto-generate master user and password on start.\n# User expands to DOVECOT_MASTER_USER@mailcow.local\n# LEAVE EMPTY IF UNSURE\nDOVECOT_MASTER_USER=\n# LEAVE EMPTY IF UNSURE\nDOVECOT_MASTER_PASS=\n\n# Let's Encrypt registration contact information\n# Optional: Leave empty for none\n# This value is only used on first order!\n# Setting it at a later point will require the following steps:\n# https://docs.mailcow.email/troubleshooting/debug-reset_tls/\nACME_CONTACT=\n\n# WebAuthn device manufacturer verification\n# After setting WEBAUTHN_ONLY_TRUSTED_VENDORS=y only devices from trusted manufacturers are allowed\n# root certificates can be placed for validation under mailcow-dockerized/data/web/inc/lib/WebAuthn/rootCertificates\nWEBAUTHN_ONLY_TRUSTED_VENDORS=n\n\n# Spamhaus Data Query Service Key\n# Optional: Leave empty for none\n# Enter your key here if you are using a blocked ASN (OVH, AWS, Cloudflare e.g) for the unregistered Spamhaus Blocklist. \n# If empty, it will completely disable Spamhaus blocklists if it detects that you are running on a server using a blocked AS.\n# Otherwise it will work normally.\nSPAMHAUS_DQS_KEY=\n\n# Prevent netfilter from setting an iptables/nftables rule to isolate the mailcow docker network - y/n\n# CAUTION: Disabling this may expose container ports to other neighbors on the same subnet, even if the ports are bound to localhost\nDISABLE_NETFILTER_ISOLATION_RULE=n\nEOF\n\nmkdir -p data/assets/ssl\n\nchmod 600 mailcow.conf\n\n# copy but don't overwrite existing certificate\necho \"Generating snake-oil certificate...\"\n# Making Willich more popular\nopenssl req -x509 -newkey rsa:4096 -keyout data/assets/ssl-example/key.pem -out data/assets/ssl-example/cert.pem -days 365 -subj \"/C=DE/ST=NRW/L=Willich/O=mailcow/OU=mailcow/CN=${MAILCOW_HOSTNAME}\" -sha256 -nodes\necho \"Copying snake-oil certificate...\"\ncp -n -d data/assets/ssl-example/*.pem data/assets/ssl/\n\n# Set app_info.inc.php\ncase ${git_branch} in\n  master)\n    mailcow_git_version=$(git describe --tags `git rev-list --tags --max-count=1`)\n    ;;\n  nightly)\n    mailcow_git_version=$(git rev-parse --short $(git rev-parse @{upstream}))\n    mailcow_last_git_version=\"\"\n    ;;\n  *)\n    mailcow_git_version=$(git rev-parse --short HEAD)\n    mailcow_last_git_version=\"\"\n    ;;\nesac\n# if [ ${git_branch} == \"master\" ]; then\n#   mailcow_git_version=$(git describe --tags `git rev-list --tags --max-count=1`)\n# elif [ ${git_branch} == \"nightly\" ]; then\n#   mailcow_git_version=$(git rev-parse --short $(git rev-parse @{upstream}))\n#   mailcow_last_git_version=\"\"\n# else\n#   mailcow_git_version=$(git rev-parse --short HEAD)\n#   mailcow_last_git_version=\"\"\n# fi\n\nif [[ $SKIP_BRANCH != \"y\" ]]; then\nmailcow_git_commit=$(git rev-parse origin/${git_branch})\nmailcow_git_commit_date=$(git log -1 --format=%ci @{upstream} )\nelse\nmailcow_git_commit=$(git rev-parse ${git_branch})\nmailcow_git_commit_date=$(git log -1 --format=%ci @{upstream} )\ngit_branch=$(git rev-parse --abbrev-ref HEAD)\nfi\n\nif [ $? -eq 0 ]; then\n  echo '<?php' > data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_VERSION=\"'$mailcow_git_version'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_LAST_GIT_VERSION=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_OWNER=\"mailcow\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_REPO=\"mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_URL=\"https://github.com/mailcow/mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT=\"'$mailcow_git_commit'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT_DATE=\"'$mailcow_git_commit_date'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_BRANCH=\"'$git_branch'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_UPDATEDAT='$(date +%s)';' >> data/web/inc/app_info.inc.php\n  echo '?>' >> data/web/inc/app_info.inc.php\nelse\n  echo '<?php' > data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_VERSION=\"'$mailcow_git_version'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_LAST_GIT_VERSION=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_OWNER=\"mailcow\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_REPO=\"mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_URL=\"https://github.com/mailcow/mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT_DATE=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_BRANCH=\"'$git_branch'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_UPDATEDAT='$(date +%s)';' >> data/web/inc/app_info.inc.php\n  echo '?>' >> data/web/inc/app_info.inc.php\n  echo -e \"\\e[33mCannot determine current git repository version...\\e[0m\"\nfi\n\ndetect_bad_asn\n"
        },
        {
          "name": "helper-scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "update.sh",
          "type": "blob",
          "size": 52.6484375,
          "content": "#!/usr/bin/env bash\n\n############## Begin Function Section ##############\n\ncheck_online_status() {\n  CHECK_ONLINE_DOMAINS=('https://github.com' 'https://hub.docker.com')\n  for domain in \"${CHECK_ONLINE_DOMAINS[@]}\"; do\n    if timeout 6 curl --head --silent --output /dev/null ${domain}; then\n      return 0\n    fi\n  done\n  return 1\n}\n\nprefetch_images() {\n  [[ -z ${BRANCH} ]] && { echo -e \"\\e[33m\\nUnknown branch...\\e[0m\"; exit 1; }\n  git fetch origin #${BRANCH}\n  while read image; do\n    if [[ \"${image}\" == \"robbertkl/ipv6nat\" ]]; then\n      if ! grep -qi \"ipv6nat-mailcow\" docker-compose.yml || grep -qi \"enable_ipv6: false\" docker-compose.yml; then\n        continue\n      fi\n    fi\n    RET_C=0\n    until docker pull \"${image}\"; do\n      RET_C=$((RET_C + 1))\n      echo -e \"\\e[33m\\nError pulling $image, retrying...\\e[0m\"\n      [ ${RET_C} -gt 3 ] && { echo -e \"\\e[31m\\nToo many failed retries, exiting\\e[0m\"; exit 1; }\n      sleep 1\n    done\n  done < <(git show \"origin/${BRANCH}:docker-compose.yml\" | grep \"image:\" | awk '{ gsub(\"image:\",\"\", $3); print $2 }')\n}\n\ndocker_garbage() {\n  SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n  IMGS_TO_DELETE=()\n\n  declare -A IMAGES_INFO\n  COMPOSE_IMAGES=($(grep -oP \"image: \\Kmailcow.+\" \"${SCRIPT_DIR}/docker-compose.yml\"))\n\n  for existing_image in $(docker images --format \"{{.ID}}:{{.Repository}}:{{.Tag}}\" | grep 'mailcow/'); do\n      ID=$(echo \"$existing_image\" | cut -d ':' -f 1)\n      REPOSITORY=$(echo \"$existing_image\" | cut -d ':' -f 2)\n      TAG=$(echo \"$existing_image\" | cut -d ':' -f 3)\n\n      if [[ \" ${COMPOSE_IMAGES[@]} \" =~ \" ${REPOSITORY}:${TAG} \" ]]; then\n          continue\n      else\n          IMGS_TO_DELETE+=(\"$ID\")\n          IMAGES_INFO[\"$ID\"]=\"$REPOSITORY:$TAG\"\n      fi\n  done\n\n  if [[ ! -z ${IMGS_TO_DELETE[*]} ]]; then\n      echo \"The following unused mailcow images were found:\"\n      for id in \"${IMGS_TO_DELETE[@]}\"; do\n          echo \"    ${IMAGES_INFO[$id]} ($id)\"\n      done\n\n      if [ ! $FORCE ]; then\n          read -r -p \"Do you want to delete them to free up some space? [y/N] \" response\n          if [[ \"$response\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n              docker rmi ${IMGS_TO_DELETE[*]}\n          else\n              echo \"OK, skipped.\"\n          fi\n      else\n          echo \"Running in forced mode! Force removing old mailcow images...\"\n          docker rmi ${IMGS_TO_DELETE[*]}\n      fi\n      echo -e \"\\e[32mFurther cleanup...\\e[0m\"\n      echo \"If you want to cleanup further garbage collected by Docker, please make sure all containers are up and running before cleaning your system by executing \\\"docker system prune\\\"\"\n  fi\n}\n\nin_array() {\n  local e match=\"$1\"\n  shift\n  for e; do [[ \"$e\" == \"$match\" ]] && return 0; done\n  return 1\n}\n\nmigrate_docker_nat() {\n  NAT_CONFIG='{\"ipv6\":true,\"fixed-cidr-v6\":\"fd00:dead:beef:c0::/80\",\"experimental\":true,\"ip6tables\":true}'\n  # Min Docker version\n  DOCKERV_REQ=20.10.2\n  # Current Docker version\n  DOCKERV_CUR=$(docker version -f '{{.Server.Version}}')\n  if grep -qi \"ipv6nat-mailcow\" docker-compose.yml && grep -qi \"enable_ipv6: true\" docker-compose.yml; then\n    echo -e \"\\e[32mNative IPv6 implementation available.\\e[0m\"\n    echo \"This will enable experimental features in the Docker daemon and configure Docker to do the IPv6 NATing instead of ipv6nat-mailcow.\"\n    echo '!!! This step is recommended !!!'\n    echo \"mailcow will try to roll back the changes if starting Docker fails after modifying the daemon.json configuration file.\"\n    read -r -p \"Should we try to enable the native IPv6 implementation in Docker now (recommended)? [y/N] \" dockernatresponse\n    if [[ ! \"${dockernatresponse}\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n      echo \"OK, skipping this step.\"\n      return 0\n    fi\n  fi\n  # Sort versions and check if we are running a newer or equal version to req\n  if [ $(printf \"${DOCKERV_REQ}\\n${DOCKERV_CUR}\" | sort -V | tail -n1) == \"${DOCKERV_CUR}\" ]; then\n    # If Dockerd daemon json exists\n    if [ -s /etc/docker/daemon.json ]; then\n      IFS=',' read -r -a dockerconfig <<< $(cat /etc/docker/daemon.json | tr -cd '[:alnum:],')\n      if ! in_array ipv6true \"${dockerconfig[@]}\" || \\\n        ! in_array experimentaltrue \"${dockerconfig[@]}\" || \\\n        ! in_array ip6tablestrue \"${dockerconfig[@]}\" || \\\n        ! grep -qi \"fixed-cidr-v6\" /etc/docker/daemon.json; then\n          echo -e \"\\e[33mWarning:\\e[0m You seem to have modified the /etc/docker/daemon.json configuration by yourself and not fully/correctly activated the native IPv6 NAT implementation.\"\n          echo \"You will need to merge your existing configuration manually or fix/delete the existing daemon.json configuration before trying the update process again.\"\n          echo -e \"Please merge the following content and restart the Docker daemon:\\n\"\n          echo \"${NAT_CONFIG}\"\n          return 1\n      fi\n    else\n      echo \"Working on IPv6 NAT, please wait...\"\n      echo \"${NAT_CONFIG}\" > /etc/docker/daemon.json\n      ip6tables -F -t nat\n      [[ -e /etc/rc.conf ]] && rc-service docker restart || systemctl restart docker.service\n      if [[ $? -ne 0 ]]; then\n        echo -e \"\\e[31mError:\\e[0m Failed to activate IPv6 NAT! Reverting and exiting.\"\n        rm /etc/docker/daemon.json\n        if [[ -e /etc/rc.conf ]]; then\n          rc-service docker restart\n        else\n          systemctl reset-failed docker.service\n          systemctl restart docker.service\n        fi\n        return 1\n      fi\n    fi\n    # Removing legacy container\n    sed -i '/ipv6nat-mailcow:$/,/^$/d' docker-compose.yml\n    if [ -s docker-compose.override.yml ]; then\n        sed -i '/ipv6nat-mailcow:$/,/^$/d' docker-compose.override.yml\n        if [[ \"$(cat docker-compose.override.yml | sed '/^\\s*$/d' | wc -l)\" == \"2\" ]]; then\n            mv docker-compose.override.yml docker-compose.override.yml_backup\n        fi\n    fi\n    echo -e \"\\e[32mGreat! \\e[0mNative IPv6 NAT is active.\\e[0m\"\n  else\n    echo -e \"\\e[31mPlease upgrade Docker to version ${DOCKERV_REQ} or above.\\e[0m\"\n    return 0\n  fi\n}\n\nremove_obsolete_nginx_ports() {\n    # Removing obsolete docker-compose.override.yml\n    for override in docker-compose.override.yml docker-compose.override.yaml; do\n    if [ -s $override ] ; then\n        if cat $override | grep nginx-mailcow > /dev/null 2>&1; then\n          if cat $override | grep -E '(\\[::])' > /dev/null 2>&1; then\n            if cat $override | grep -w 80:80 > /dev/null 2>&1 && cat $override | grep -w 443:443 > /dev/null 2>&1 ; then\n              echo -e \"\\e[33mBacking up ${override} to preserve custom changes...\\e[0m\"\n              echo -e \"\\e[33m!!! Manual Merge needed (if other overrides are set) !!!\\e[0m\"\n              sleep 3\n              cp $override ${override}_backup\n              sed -i '/nginx-mailcow:$/,/^$/d' $override\n              echo -e \"\\e[33mRemoved obsolete NGINX IPv6 Bind from original override File.\\e[0m\"\n                if [[ \"$(cat $override | sed '/^\\s*$/d' | wc -l)\" == \"2\" ]]; then\n                  mv $override ${override}_empty\n                  echo -e \"\\e[31m${override} is empty. Renamed it to ensure mailcow is startable.\\e[0m\"\n                fi\n            fi\n          fi\n        fi\n    fi\n    done\n}\n\ndetect_docker_compose_command(){\nif ! [[ \"${DOCKER_COMPOSE_VERSION}\" =~ ^(native|standalone)$ ]]; then\n  if docker compose > /dev/null 2>&1; then\n      if docker compose version --short | grep -e \"^2.\" -e \"^v2.\" > /dev/null 2>&1; then\n        DOCKER_COMPOSE_VERSION=native\n        COMPOSE_COMMAND=\"docker compose\"\n        echo -e \"\\e[33mFound Docker Compose Plugin (native).\\e[0m\"\n        echo -e \"\\e[33mSetting the DOCKER_COMPOSE_VERSION Variable to native\\e[0m\"\n        sed -i 's/^DOCKER_COMPOSE_VERSION=.*/DOCKER_COMPOSE_VERSION=native/' \"$SCRIPT_DIR/mailcow.conf\"\n        sleep 2\n        echo -e \"\\e[33mNotice: You'll have to update this Compose Version via your Package Manager manually!\\e[0m\"\n      else\n        echo -e \"\\e[31mCannot find Docker Compose with a Version Higher than 2.X.X.\\e[0m\"\n        echo -e \"\\e[31mPlease update/install it manually regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n        exit 1\n      fi\n  elif docker-compose > /dev/null 2>&1; then\n    if ! [[ $(alias docker-compose 2> /dev/null) ]] ; then\n      if docker-compose version --short | grep \"^2.\" > /dev/null 2>&1; then\n        DOCKER_COMPOSE_VERSION=standalone\n        COMPOSE_COMMAND=\"docker-compose\"\n        echo -e \"\\e[33mFound Docker Compose Standalone.\\e[0m\"\n        echo -e \"\\e[33mSetting the DOCKER_COMPOSE_VERSION Variable to standalone\\e[0m\"\n        sed -i 's/^DOCKER_COMPOSE_VERSION=.*/DOCKER_COMPOSE_VERSION=standalone/' \"$SCRIPT_DIR/mailcow.conf\"\n        sleep 2\n        echo -e \"\\e[33mNotice: For an automatic update of docker-compose please use the update_compose.sh scripts located at the helper-scripts folder.\\e[0m\"\n      else\n        echo -e \"\\e[31mCannot find Docker Compose with a Version Higher than 2.X.X.\\e[0m\"\n        echo -e \"\\e[31mPlease update/install regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n        exit 1\n      fi\n    fi\n\n  else\n    echo -e \"\\e[31mCannot find Docker Compose.\\e[0m\"\n    echo -e \"\\e[31mPlease install it regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n    exit 1\n  fi\n\nelif [ \"${DOCKER_COMPOSE_VERSION}\" == \"native\" ]; then\n  COMPOSE_COMMAND=\"docker compose\"\n  # Check if Native Compose works and has not been deleted\n  if ! $COMPOSE_COMMAND > /dev/null 2>&1; then\n    # IF it not exists/work anymore try the other command\n    COMPOSE_COMMAND=\"docker-compose\"\n    if ! $COMPOSE_COMMAND > /dev/null 2>&1 || ! $COMPOSE_COMMAND --version | grep \"^2.\" > /dev/null 2>&1; then\n      # IF it cannot find Standalone in > 2.X, then script stops\n      echo -e \"\\e[31mCannot find Docker Compose or the Version is lower then 2.X.X.\\e[0m\"\n      echo -e \"\\e[31mPlease install it regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n      exit 1\n    fi\n      # If it finds the standalone Plugin it will use this instead and change the mailcow.conf Variable accordingly\n      echo -e \"\\e[31mFound different Docker Compose Version then declared in mailcow.conf!\\e[0m\"\n      echo -e \"\\e[31mSetting the DOCKER_COMPOSE_VERSION Variable from native to standalone\\e[0m\"\n      sed -i 's/^DOCKER_COMPOSE_VERSION=.*/DOCKER_COMPOSE_VERSION=standalone/' \"$SCRIPT_DIR/mailcow.conf\"\n      sleep 2\n  fi\n\n\nelif [ \"${DOCKER_COMPOSE_VERSION}\" == \"standalone\" ]; then\n  COMPOSE_COMMAND=\"docker-compose\"\n  # Check if Standalone Compose works and has not been deleted\n  if ! $COMPOSE_COMMAND > /dev/null 2>&1 && ! $COMPOSE_COMMAND --version > /dev/null 2>&1 | grep \"^2.\" > /dev/null 2>&1; then\n    # IF it not exists/work anymore try the other command\n    COMPOSE_COMMAND=\"docker compose\"\n    if ! $COMPOSE_COMMAND > /dev/null 2>&1; then\n      # IF it cannot find Native in > 2.X, then script stops\n      echo -e \"\\e[31mCannot find Docker Compose.\\e[0m\"\n      echo -e \"\\e[31mPlease install it regarding to this doc site: https://docs.mailcow.email/install/\\e[0m\"\n      exit 1\n    fi\n      # If it finds the native Plugin it will use this instead and change the mailcow.conf Variable accordingly\n      echo -e \"\\e[31mFound different Docker Compose Version then declared in mailcow.conf!\\e[0m\"\n      echo -e \"\\e[31mSetting the DOCKER_COMPOSE_VERSION Variable from standalone to native\\e[0m\"\n      sed -i 's/^DOCKER_COMPOSE_VERSION=.*/DOCKER_COMPOSE_VERSION=native/' \"$SCRIPT_DIR/mailcow.conf\"\n      sleep 2\n  fi\nfi\n}\n\ndetect_bad_asn() {\n  echo -e \"\\e[33mDetecting if your IP is listed on Spamhaus Bad ASN List...\\e[0m\"\n  response=$(curl --connect-timeout 15 --max-time 30 -s -o /dev/null -w \"%{http_code}\" \"https://asn-check.mailcow.email\")\n  if [ \"$response\" -eq 503 ]; then\n    if [ -z \"$SPAMHAUS_DQS_KEY\" ]; then\n      echo -e \"\\e[33mYour server's public IP uses an AS that is blocked by Spamhaus to use their DNS public blocklists for Postfix.\\e[0m\"\n      echo -e \"\\e[33mmailcow did not detected a value for the variable SPAMHAUS_DQS_KEY inside mailcow.conf!\\e[0m\"\n      sleep 2\n      echo \"\"\n      echo -e \"\\e[33mTo use the Spamhaus DNS Blocklists again, you will need to create a FREE account for their Data Query Service (DQS) at: https://www.spamhaus.com/free-trial/sign-up-for-a-free-data-query-service-account\\e[0m\"\n      echo -e \"\\e[33mOnce done, enter your DQS API key in mailcow.conf and mailcow will do the rest for you!\\e[0m\"\n      echo \"\"\n      sleep 2\n\n    else\n      echo -e \"\\e[33mYour server's public IP uses an AS that is blocked by Spamhaus to use their DNS public blocklists for Postfix.\\e[0m\"\n      echo -e \"\\e[32mmailcow detected a Value for the variable SPAMHAUS_DQS_KEY inside mailcow.conf. Postfix will use DQS with the given API key...\\e[0m\"\n    fi\n  elif [ \"$response\" -eq 200 ]; then\n    echo -e \"\\e[33mCheck completed! Your IP is \\e[32mclean\\e[0m\"\n  elif [ \"$response\" -eq 429 ]; then\n    echo -e \"\\e[33mCheck completed! \\e[31mYour IP seems to be rate limited on the ASN Check service... please try again later!\\e[0m\"\n  else\n    echo -e \"\\e[31mCheck failed! \\e[0mMaybe a DNS or Network problem?\\e[0m\"\n  fi\n}\n\nfix_broken_dnslist_conf() {\n\n# Fixing issue: #6143. To be removed in a later patch\n\n  local file=\"${SCRIPT_DIR}/data/conf/postfix/dns_blocklists.cf\"\n    # Check if the file exists\n  if [[ ! -f \"$file\" ]]; then\n      return 1\n  fi\n\n  # Check if the file contains the autogenerated comment\n  if grep -q \"# Autogenerated by mailcow\" \"$file\"; then\n      # Ask the user if custom changes were made\n      echo -e \"\\e[91mWARNING!!! \\e[31mAn old version of dns_blocklists.cnf has been detected which may cause a broken postfix upon startup (see: https://github.com/mailcow/mailcow-dockerized/issues/6143)...\\e[0m\"\n      echo -e \"\\e[31mIf you have any custom settings in there you might copy it away and adapt the changes after the file is regenerated...\\e[0m\"\n      read -p \"Do you want to delete the file now and let mailcow regenerate it properly? \" response\n      if [[ \"${response}\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n        rm \"$file\"\n        echo -e \"\\e[32mdns_blocklists.cf has been deleted and will be properly regenerated\"\n        return 0\n      else\n        echo -e \"\\e[35mOk, not deleting it! Please make sure you take a look at postfix upon start then...\"\n        return 2\n      fi\n  fi  \n\n}\n\n############## End Function Section ##############\n\n# Check permissions\nif [ \"$(id -u)\" -ne \"0\" ]; then\n  echo \"You need to be root\"\n  exit 1\nfi\n\nSCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\n# Run pre-update-hook\nif [ -f \"${SCRIPT_DIR}/pre_update_hook.sh\" ]; then\n  bash \"${SCRIPT_DIR}/pre_update_hook.sh\"\nfi\n\nif [[ \"$(uname -r)\" =~ ^4\\.15\\.0-60 ]]; then\n  echo \"DO NOT RUN mailcow ON THIS UBUNTU KERNEL!\";\n  echo \"Please update to 5.x or use another distribution.\"\n  exit 1\nfi\n\nif [[ \"$(uname -r)\" =~ ^4\\.4\\. ]]; then\n  if grep -q Ubuntu <<< \"$(uname -a)\"; then\n    echo \"DO NOT RUN mailcow ON THIS UBUNTU KERNEL!\"\n    echo \"Please update to linux-generic-hwe-16.04 by running \\\"apt-get install --install-recommends linux-generic-hwe-16.04\\\"\"\n    exit 1\n  fi\n  echo \"mailcow on a 4.4.x kernel is not supported. It may or may not work, please upgrade your kernel or continue at your own risk.\"\n  read -p \"Press any key to continue...\" < /dev/tty\nfi\n\n# Exit on error and pipefail\nset -o pipefail\n\n# Setting high dc timeout\nexport COMPOSE_HTTP_TIMEOUT=600\n\n# Add /opt/bin to PATH\nPATH=$PATH:/opt/bin\n\numask 0022\n\n# Unset COMPOSE_COMMAND and DOCKER_COMPOSE_VERSION Variable to be on the newest state.\nunset COMPOSE_COMMAND\nunset DOCKER_COMPOSE_VERSION\n\nfor bin in curl docker git awk sha1sum grep cut; do\n  if [[ -z $(command -v ${bin}) ]]; then\n  echo \"Cannot find ${bin}, exiting...\"\n  exit 1;\n  fi\ndone\n\n# Check Docker Version (need at least 24.X)\ndocker_version=$(docker -v | grep -oP '\\d+\\.\\d+\\.\\d+' | cut -d '.' -f 1 | head -1)\n\nif [[ $docker_version -lt 24 ]]; then\n  echo -e \"\\e[31mCannot find Docker with a Version higher or equals 24.0.0\\e[0m\"\n  echo -e \"\\e[33mmailcow needs a newer Docker version to work properly... continuing on your own risk!\\e[0m\"\n  echo -e \"\\e[31mPlease update your Docker installation... sleeping 10s\\e[0m\"\n  sleep 10\nfi\n\nexport LC_ALL=C\nDATE=$(date +%Y-%m-%d_%H_%M_%S)\nBRANCH=\"$(cd \"${SCRIPT_DIR}\"; git rev-parse --abbrev-ref HEAD)\"\n\nwhile (($#)); do\n  case \"${1}\" in\n    --check|-c)\n      echo \"Checking remote code for updates...\"\n      LATEST_REV=$(git ls-remote --exit-code --refs --quiet https://github.com/mailcow/mailcow-dockerized \"${BRANCH}\" | cut -f1)\n      if [ \"$?\" -ne 0 ]; then\n        echo \"A problem occurred while trying to fetch the latest revision from github.\"\n        exit 99\n      fi\n      if [[ -z $(git log HEAD --pretty=format:\"%H\" | grep \"${LATEST_REV}\") ]]; then\n        echo -e \"Updated code is available.\\nThe changes can be found here: https://github.com/mailcow/mailcow-dockerized/commits/master\"\n        git log --date=short --pretty=format:\"%ad - %s\" \"$(git rev-parse --short HEAD)\"..origin/master\n        exit 0\n      else\n        echo \"No updates available.\"\n        exit 3\n      fi\n    ;;\n    --check-tags)\n      echo \"Checking remote tags for updates...\"\n      LATEST_TAG_REV=$(git ls-remote --exit-code --quiet --tags origin | tail -1 | cut -f1)\n      if [ \"$?\" -ne 0 ]; then\n        echo \"A problem occurred while trying to fetch the latest tag from github.\"\n        exit 99\n      fi\n      if [[ -z $(git log HEAD --pretty=format:\"%H\" | grep \"${LATEST_TAG_REV}\") ]]; then\n        echo -e \"New tag is available.\\nThe changes can be found here: https://github.com/mailcow/mailcow-dockerized/releases/latest\"\n        exit 0\n      else\n        echo \"No updates available.\"\n        exit 3\n      fi\n    ;;\n    --ours)\n      MERGE_STRATEGY=ours\n    ;;\n    --skip-start)\n      SKIP_START=y\n    ;;\n    --skip-ping-check)\n      SKIP_PING_CHECK=y\n    ;;\n    --stable)\n      CURRENT_BRANCH=\"$(cd \"${SCRIPT_DIR}\"; git rev-parse --abbrev-ref HEAD)\"\n      NEW_BRANCH=\"master\"\n    ;;\n    --gc)\n      echo -e \"\\e[32mCollecting garbage...\\e[0m\"\n      docker_garbage\n      exit 0\n    ;;\n    --nightly)\n      CURRENT_BRANCH=\"$(cd \"${SCRIPT_DIR}\"; git rev-parse --abbrev-ref HEAD)\"\n      NEW_BRANCH=\"nightly\"\n    ;;\n    --prefetch)\n      echo -e \"\\e[32mPrefetching images...\\e[0m\"\n      prefetch_images\n      exit 0\n    ;;\n    -f|--force)\n      echo -e \"\\e[32mRunning in forced mode...\\e[0m\"\n      FORCE=y\n    ;;\n    -d|--dev)\n      echo -e \"\\e[32mRunning in Developer mode...\\e[0m\"\n      DEV=y\n    ;;\n    --help|-h)\n    echo './update.sh [-c|--check, --check-tags, --ours, --gc, --nightly, --prefetch, --skip-start, --skip-ping-check, --stable, -f|--force, -d|--dev, -h|--help]\n\n  -c|--check           -   Check for updates and exit (exit codes => 0: update available, 3: no updates)\n  --check-tags         -   Check for newer tags and exit (exit codes => 0: newer tag available, 3: no newer tag)\n  --ours               -   Use merge strategy option \"ours\" to solve conflicts in favor of non-mailcow code (local changes over remote changes), not recommended!\n  --gc                 -   Run garbage collector to delete old image tags\n  --nightly            -   Switch your mailcow updates to the unstable (nightly) branch. FOR TESTING PURPOSES ONLY!!!!\n  --prefetch           -   Only prefetch new images and exit (useful to prepare updates)\n  --skip-start         -   Do not start mailcow after update\n  --skip-ping-check    -   Skip ICMP Check to public DNS resolvers (Use it only if you'\\''ve blocked any ICMP Connections to your mailcow machine)\n  --stable             -   Switch your mailcow updates to the stable (master) branch. Default unless you changed it with --nightly.\n  -f|--force           -   Force update, do not ask questions\n  -d|--dev             -   Enables Developer Mode (No Checkout of update.sh for tests)\n'\n    exit 0\n  esac\n  shift\ndone\n\n[[ ! -f mailcow.conf ]] && { echo -e \"\\e[31mmailcow.conf is missing! Is mailcow installed?\\e[0m\"; exit 1;}\n\nchmod 600 mailcow.conf\nsource mailcow.conf\n\ndetect_docker_compose_command\n\nfix_broken_dnslist_conf\n\nDOTS=${MAILCOW_HOSTNAME//[^.]};\nif [ ${#DOTS} -lt 1 ]; then\n  echo -e \"\\e[31mMAILCOW_HOSTNAME (${MAILCOW_HOSTNAME}) is not a FQDN!\\e[0m\"\n  sleep 1\n  echo \"Please change it to a FQDN and redeploy the stack with $COMPOSE_COMMAND up -d\"\n  exit 1\nelif [[ \"${MAILCOW_HOSTNAME: -1}\" == \".\" ]]; then\n  echo \"MAILCOW_HOSTNAME (${MAILCOW_HOSTNAME}) is ending with a dot. This is not a valid FQDN!\"\n  exit 1\nelif [ ${#DOTS} -eq 1 ]; then\n  echo -e \"\\e[33mMAILCOW_HOSTNAME (${MAILCOW_HOSTNAME}) does not contain a Subdomain. This is not fully tested and may cause issues.\\e[0m\"\n  echo \"Find more information about why this message exists here: https://github.com/mailcow/mailcow-dockerized/issues/1572\"\n  read -r -p \"Do you want to proceed anyway? [y/N] \" response\n  if [[ \"$response\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n    echo \"OK. Proceeding.\"\n  else\n    echo \"OK. Exiting.\"\n    exit 1\n  fi\nfi\n\nif grep --help 2>&1 | head -n 1 | grep -q -i \"busybox\"; then echo \"BusyBox grep detected, please install gnu grep, \\\"apk add --no-cache --upgrade grep\\\"\"; exit 1; fi\n# This will also cover sort\nif cp --help 2>&1 | head -n 1 | grep -q -i \"busybox\"; then echo \"BusyBox cp detected, please install coreutils, \\\"apk add --no-cache --upgrade coreutils\\\"\"; exit 1; fi\nif sed --help 2>&1 | head -n 1 | grep -q -i \"busybox\"; then echo \"BusyBox sed detected, please install gnu sed, \\\"apk add --no-cache --upgrade sed\\\"\"; exit 1; fi\n\nCONFIG_ARRAY=(\n  \"SKIP_LETS_ENCRYPT\"\n  \"SKIP_SOGO\"\n  \"USE_WATCHDOG\"\n  \"WATCHDOG_NOTIFY_EMAIL\"\n  \"WATCHDOG_NOTIFY_WEBHOOK\"\n  \"WATCHDOG_NOTIFY_WEBHOOK_BODY\"\n  \"WATCHDOG_NOTIFY_BAN\"\n  \"WATCHDOG_NOTIFY_START\"\n  \"WATCHDOG_EXTERNAL_CHECKS\"\n  \"WATCHDOG_SUBJECT\"\n  \"SKIP_CLAMD\"\n  \"SKIP_IP_CHECK\"\n  \"ADDITIONAL_SAN\"\n  \"AUTODISCOVER_SAN\"\n  \"DOVEADM_PORT\"\n  \"IPV4_NETWORK\"\n  \"IPV6_NETWORK\"\n  \"LOG_LINES\"\n  \"SNAT_TO_SOURCE\"\n  \"SNAT6_TO_SOURCE\"\n  \"COMPOSE_PROJECT_NAME\"\n  \"DOCKER_COMPOSE_VERSION\"\n  \"SQL_PORT\"\n  \"API_KEY\"\n  \"API_KEY_READ_ONLY\"\n  \"API_ALLOW_FROM\"\n  \"MAILDIR_GC_TIME\"\n  \"MAILDIR_SUB\"\n  \"ACL_ANYONE\"\n  \"SOLR_HEAP\"\n  \"SKIP_SOLR\"\n  \"ENABLE_SSL_SNI\"\n  \"ALLOW_ADMIN_EMAIL_LOGIN\"\n  \"SKIP_HTTP_VERIFICATION\"\n  \"SOGO_EXPIRE_SESSION\"\n  \"REDIS_PORT\"\n  \"DOVECOT_MASTER_USER\"\n  \"DOVECOT_MASTER_PASS\"\n  \"MAILCOW_PASS_SCHEME\"\n  \"ADDITIONAL_SERVER_NAMES\"\n  \"ACME_CONTACT\"\n  \"WATCHDOG_VERBOSE\"\n  \"WEBAUTHN_ONLY_TRUSTED_VENDORS\"\n  \"SPAMHAUS_DQS_KEY\"\n  \"SKIP_UNBOUND_HEALTHCHECK\"\n  \"DISABLE_NETFILTER_ISOLATION_RULE\"\n)\n\ndetect_bad_asn\n\nsed -i --follow-symlinks '$a\\' mailcow.conf\nfor option in \"${CONFIG_ARRAY[@]}\"; do\n  if [[ ${option} == \"ADDITIONAL_SAN\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"${option}=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"COMPOSE_PROJECT_NAME\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"COMPOSE_PROJECT_NAME=mailcowdockerized\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"DOCKER_COMPOSE_VERSION\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"# Used Docker Compose version\" >> mailcow.conf\n      echo \"# Switch here between native (compose plugin) and standalone\" >> mailcow.conf\n      echo \"# For more informations take a look at the mailcow docs regarding the configuration options.\" >> mailcow.conf\n      echo \"# Normally this should be untouched but if you decided to use either of those you can switch it manually here.\" >> mailcow.conf\n      echo \"# Please be aware that at least one of those variants should be installed on your maschine or mailcow will fail.\" >> mailcow.conf\n      echo \"\" >> mailcow.conf\n      echo \"DOCKER_COMPOSE_VERSION=${DOCKER_COMPOSE_VERSION}\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"DOVEADM_PORT\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"DOVEADM_PORT=127.0.0.1:19991\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_NOTIFY_EMAIL\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"WATCHDOG_NOTIFY_EMAIL=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"LOG_LINES\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Max log lines per service to keep in Redis logs' >> mailcow.conf\n      echo \"LOG_LINES=9999\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"IPV4_NETWORK\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Internal IPv4 /24 subnet, format n.n.n. (expands to n.n.n.0/24)' >> mailcow.conf\n      echo \"IPV4_NETWORK=172.22.1\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"IPV6_NETWORK\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Internal IPv6 subnet in fc00::/7' >> mailcow.conf\n      echo \"IPV6_NETWORK=fd4d:6169:6c63:6f77::/64\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SQL_PORT\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Bind SQL to 127.0.0.1 on port 13306' >> mailcow.conf\n      echo \"SQL_PORT=127.0.0.1:13306\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"API_KEY\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Create or override API key for web UI' >> mailcow.conf\n      echo \"#API_KEY=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"API_KEY_READ_ONLY\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Create or override read-only API key for web UI' >> mailcow.conf\n      echo \"#API_KEY_READ_ONLY=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"API_ALLOW_FROM\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Must be set for API_KEY to be active' >> mailcow.conf\n      echo '# IPs only, no networks (networks can be set via UI)' >> mailcow.conf\n      echo \"#API_ALLOW_FROM=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SNAT_TO_SOURCE\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Use this IPv4 for outgoing connections (SNAT)' >> mailcow.conf\n      echo \"#SNAT_TO_SOURCE=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SNAT6_TO_SOURCE\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Use this IPv6 for outgoing connections (SNAT)' >> mailcow.conf\n      echo \"#SNAT6_TO_SOURCE=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"MAILDIR_GC_TIME\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Garbage collector cleanup' >> mailcow.conf\n      echo '# Deleted domains and mailboxes are moved to /var/vmail/_garbage/timestamp_sanitizedstring' >> mailcow.conf\n      echo '# How long should objects remain in the garbage until they are being deleted? (value in minutes)' >> mailcow.conf\n      echo '# Check interval is hourly' >> mailcow.conf\n      echo 'MAILDIR_GC_TIME=1440' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"ACL_ANYONE\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Set this to \"allow\" to enable the anyone pseudo user. Disabled by default.' >> mailcow.conf\n      echo '# When enabled, ACL can be created, that apply to \"All authenticated users\"' >> mailcow.conf\n      echo '# This should probably only be activated on mail hosts, that are used exclusivly by one organisation.' >> mailcow.conf\n      echo '# Otherwise a user might share data with too many other users.' >> mailcow.conf\n      echo 'ACL_ANYONE=disallow' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SOLR_HEAP\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Solr heap size, there is no recommendation, please see Solr docs.' >> mailcow.conf\n      echo '# Solr is a prone to run OOM on large systems and should be monitored. Unmonitored Solr setups are not recommended.' >> mailcow.conf\n      echo '# Solr will refuse to start with total system memory below or equal to 2 GB.' >> mailcow.conf\n      echo \"SOLR_HEAP=1024\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SKIP_SOLR\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Solr is disabled by default after upgrading from non-Solr to Solr-enabled mailcows.' >> mailcow.conf\n      echo '# Disable Solr or if you do not want to store a readable index of your mails in solr-vol-1.' >> mailcow.conf\n      echo \"SKIP_SOLR=y\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"ENABLE_SSL_SNI\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Create seperate certificates for all domains - y/n' >> mailcow.conf\n      echo '# this will allow adding more than 100 domains, but some email clients will not be able to connect with alternative hostnames' >> mailcow.conf\n      echo '# see https://wiki.dovecot.org/SSL/SNIClientSupport' >> mailcow.conf\n      echo \"ENABLE_SSL_SNI=n\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SKIP_SOGO\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Skip SOGo: Will disable SOGo integration and therefore webmail, DAV protocols and ActiveSync support (experimental, unsupported, not fully implemented) - y/n' >> mailcow.conf\n      echo \"SKIP_SOGO=n\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"MAILDIR_SUB\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# MAILDIR_SUB defines a path in a users virtual home to keep the maildir in. Leave empty for updated setups.' >> mailcow.conf\n      echo \"#MAILDIR_SUB=Maildir\" >> mailcow.conf\n      echo \"MAILDIR_SUB=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_NOTIFY_WEBHOOK\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Send notifications to a webhook URL that receives a POST request with the content type \"application/json\".' >> mailcow.conf\n      echo '# You can use this to send notifications to services like Discord, Slack and others.' >> mailcow.conf\n      echo '#WATCHDOG_NOTIFY_WEBHOOK=https://discord.com/api/webhooks/XXXXXXXXXXXXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_NOTIFY_WEBHOOK_BODY\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# JSON body included in the webhook POST request. Needs to be in single quotes.' >> mailcow.conf\n      echo '# Following variables are available: SUBJECT, BODY' >> mailcow.conf\n      WEBHOOK_BODY='{\"username\": \"mailcow Watchdog\", \"content\": \"**${SUBJECT}**\\n${BODY}\"}'\n      echo \"#WATCHDOG_NOTIFY_WEBHOOK_BODY='${WEBHOOK_BODY}'\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_NOTIFY_BAN\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Notify about banned IP. Includes whois lookup.' >> mailcow.conf\n      echo \"WATCHDOG_NOTIFY_BAN=y\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_NOTIFY_START\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Send a notification when the watchdog is started.' >> mailcow.conf\n      echo \"WATCHDOG_NOTIFY_START=y\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_SUBJECT\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Subject for watchdog mails. Defaults to \"Watchdog ALERT\" followed by the error message.' >> mailcow.conf\n      echo \"#WATCHDOG_SUBJECT=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_EXTERNAL_CHECKS\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Checks if mailcow is an open relay. Requires a SAL. More checks will follow.' >> mailcow.conf\n      echo '# No data is collected. Opt-in and anonymous.' >> mailcow.conf\n      echo '# Will only work with unmodified mailcow setups.' >> mailcow.conf\n      echo \"WATCHDOG_EXTERNAL_CHECKS=n\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SOGO_EXPIRE_SESSION\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# SOGo session timeout in minutes' >> mailcow.conf\n      echo \"SOGO_EXPIRE_SESSION=480\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"REDIS_PORT\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"REDIS_PORT=127.0.0.1:7654\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"DOVECOT_MASTER_USER\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# DOVECOT_MASTER_USER and _PASS must _both_ be provided. No special chars.' >> mailcow.conf\n      echo '# Empty by default to auto-generate master user and password on start.' >> mailcow.conf\n      echo '# User expands to DOVECOT_MASTER_USER@mailcow.local' >> mailcow.conf\n      echo '# LEAVE EMPTY IF UNSURE' >> mailcow.conf\n      echo \"DOVECOT_MASTER_USER=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"DOVECOT_MASTER_PASS\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# LEAVE EMPTY IF UNSURE' >> mailcow.conf\n      echo \"DOVECOT_MASTER_PASS=\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"MAILCOW_PASS_SCHEME\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Password hash algorithm' >> mailcow.conf\n      echo '# Only certain password hash algorithm are supported. For a fully list of supported schemes,' >> mailcow.conf\n      echo '# see https://docs.mailcow.email/models/model-passwd/' >> mailcow.conf\n      echo \"MAILCOW_PASS_SCHEME=BLF-CRYPT\" >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"ADDITIONAL_SERVER_NAMES\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Additional server names for mailcow UI' >> mailcow.conf\n      echo '#' >> mailcow.conf\n      echo '# Specify alternative addresses for the mailcow UI to respond to' >> mailcow.conf\n      echo '# This is useful when you set mail.* as ADDITIONAL_SAN and want to make sure mail.maildomain.com will always point to the mailcow UI.' >> mailcow.conf\n      echo '# If the server name does not match a known site, Nginx decides by best-guess and may redirect users to the wrong web root.' >> mailcow.conf\n      echo '# You can understand this as server_name directive in Nginx.' >> mailcow.conf\n      echo '# Comma separated list without spaces! Example: ADDITIONAL_SERVER_NAMES=a.b.c,d.e.f' >> mailcow.conf\n      echo 'ADDITIONAL_SERVER_NAMES=' >> mailcow.conf\n    fi\n\n  elif [[ \"${option}\" == \"AUTODISCOVER_SAN\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Obtain certificates for autodiscover.* and autoconfig.* domains.' >> mailcow.conf\n      echo '# This can be useful to switch off in case you are in a scenario where a reverse proxy already handles those.' >> mailcow.conf\n      echo '# There are mixed scenarios where ports 80,443 are occupied and you do not want to share certs' >> mailcow.conf\n      echo '# between services. So acme-mailcow obtains for maildomains and all web-things get handled' >> mailcow.conf\n      echo '# in the reverse proxy.' >> mailcow.conf\n      echo 'AUTODISCOVER_SAN=y' >> mailcow.conf\n    fi\n\n  elif [[ \"${option}\" == \"ACME_CONTACT\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Lets Encrypt registration contact information' >> mailcow.conf\n      echo '# Optional: Leave empty for none' >> mailcow.conf\n      echo '# This value is only used on first order!' >> mailcow.conf\n      echo '# Setting it at a later point will require the following steps:' >> mailcow.conf\n      echo '# https://docs.mailcow.email/troubleshooting/debug-reset_tls/' >> mailcow.conf\n      echo 'ACME_CONTACT=' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WEBAUTHN_ONLY_TRUSTED_VENDORS\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"# WebAuthn device manufacturer verification\" >> mailcow.conf\n      echo '# After setting WEBAUTHN_ONLY_TRUSTED_VENDORS=y only devices from trusted manufacturers are allowed' >> mailcow.conf\n      echo '# root certificates can be placed for validation under mailcow-dockerized/data/web/inc/lib/WebAuthn/rootCertificates' >> mailcow.conf\n      echo 'WEBAUTHN_ONLY_TRUSTED_VENDORS=n' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SPAMHAUS_DQS_KEY\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo \"# Spamhaus Data Query Service Key\" >> mailcow.conf\n      echo '# Optional: Leave empty for none' >> mailcow.conf\n      echo '# Enter your key here if you are using a blocked ASN (OVH, AWS, Cloudflare e.g) for the unregistered Spamhaus Blocklist.' >> mailcow.conf\n      echo '# If empty, it will completely disable Spamhaus blocklists if it detects that you are running on a server using a blocked AS.' >> mailcow.conf\n      echo '# Otherwise it will work as usual.' >> mailcow.conf\n      echo 'SPAMHAUS_DQS_KEY=' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"WATCHDOG_VERBOSE\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Enable watchdog verbose logging' >> mailcow.conf\n      echo 'WATCHDOG_VERBOSE=n' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"SKIP_UNBOUND_HEALTHCHECK\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Skip Unbound (DNS Resolver) Healthchecks (NOT Recommended!) - y/n' >> mailcow.conf\n      echo 'SKIP_UNBOUND_HEALTHCHECK=n' >> mailcow.conf\n    fi\n  elif [[ \"${option}\" == \"DISABLE_NETFILTER_ISOLATION_RULE\" ]]; then\n    if ! grep -q \"${option}\" mailcow.conf; then\n      echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n      echo '# Prevent netfilter from setting an iptables/nftables rule to isolate the mailcow docker network - y/n' >> mailcow.conf\n      echo '# CAUTION: Disabling this may expose container ports to other neighbors on the same subnet, even if the ports are bound to localhost' >> mailcow.conf\n      echo 'DISABLE_NETFILTER_ISOLATION_RULE=n' >> mailcow.conf\n    fi\n  elif ! grep -q \"${option}\" mailcow.conf; then\n    echo \"Adding new option \\\"${option}\\\" to mailcow.conf\"\n    echo \"${option}=n\" >> mailcow.conf\n  fi\ndone\n\nif [[ (\"${SKIP_PING_CHECK}\" == \"y\") ]]; then\necho -e \"\\e[32mSkipping Ping Check...\\e[0m\"\n\nelse\n   echo -en \"Checking internet connection... \"\n   if ! check_online_status; then\n      echo -e \"\\e[31mfailed\\e[0m\"\n      exit 1\n   else\n      echo -e \"\\e[32mOK\\e[0m\"\n   fi\nfi\n\nif ! [ \"$NEW_BRANCH\" ]; then\n  echo -e \"\\e[33mDetecting which build your mailcow runs on...\\e[0m\"\n  sleep 1\n  if [ \"${BRANCH}\" == \"master\" ]; then\n    echo -e \"\\e[32mYou are receiving stable updates (master).\\e[0m\"\n    echo -e \"\\e[33mTo change that run the update.sh Script one time with the --nightly parameter to switch to nightly builds.\\e[0m\"\n\n  elif [ \"${BRANCH}\" == \"nightly\" ]; then\n    echo -e \"\\e[31mYou are receiving unstable updates (nightly). These are for testing purposes only!!!\\e[0m\"\n    sleep 1\n    echo -e \"\\e[33mTo change that run the update.sh Script one time with the --stable parameter to switch to stable builds.\\e[0m\"\n\n  else\n    echo -e \"\\e[33mYou are receiving updates from an unsupported branch.\\e[0m\"\n    sleep 1\n    echo -e \"\\e[33mThe mailcow stack might still work but it is recommended to switch to the master branch (stable builds).\\e[0m\"\n    echo -e \"\\e[33mTo change that run the update.sh Script one time with the --stable parameter to switch to stable builds.\\e[0m\"\n  fi\nelif [ \"$FORCE\" ]; then\n  echo -e \"\\e[31mYou are running in forced mode!\\e[0m\"\n  echo -e \"\\e[31mA Branch Switch can only be performed manually (monitored).\\e[0m\"\n  echo -e \"\\e[31mPlease rerun the update.sh Script without the --force/-f parameter.\\e[0m\"\n  sleep 1\nelif [ \"$NEW_BRANCH\" == \"master\" ] && [ \"$CURRENT_BRANCH\" != \"master\" ]; then\n  echo -e \"\\e[33mYou are about to switch your mailcow updates to the stable (master) branch.\\e[0m\"\n  sleep 1\n  echo -e \"\\e[33mBefore you do: Please take a backup of all components to ensure that no data is lost...\\e[0m\"\n  sleep 1\n  echo -e \"\\e[31mWARNING: Please see on GitHub or ask in the community if a switch to master is stable or not.\n  In some rear cases an update back to master can destroy your mailcow configuration such as database upgrade, etc.\n  Normally an upgrade back to master should be safe during each full release.\n  Check GitHub for Database changes and update only if there similar to the full release!\\e[0m\"\n  read -r -p \"Are you sure you that want to continue upgrading to the stable (master) branch? [y/N] \" response\n  if [[ ! \"${response}\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n    echo \"OK. If you prepared yourself for that please run the update.sh Script with the --stable parameter again to trigger this process here.\"\n    exit 0\n  fi\n  BRANCH=\"$NEW_BRANCH\"\n  DIFF_DIRECTORY=update_diffs\n  DIFF_FILE=\"${DIFF_DIRECTORY}/diff_before_upgrade_to_master_$(date +\"%Y-%m-%d-%H-%M-%S\")\"\n  mv diff_before_upgrade* \"${DIFF_DIRECTORY}/\" 2> /dev/null\n  if ! git diff-index --quiet HEAD; then\n    echo -e \"\\e[32mSaving diff to ${DIFF_FILE}...\\e[0m\"\n    mkdir -p \"${DIFF_DIRECTORY}\"\n    git diff \"${BRANCH}\" --stat > \"${DIFF_FILE}\"\n    git diff \"${BRANCH}\" >> \"${DIFF_FILE}\"\n  fi\n  echo -e \"\\e[32mSwitching Branch to ${BRANCH}...\\e[0m\"\n  git fetch origin\n  git checkout -f \"${BRANCH}\"\n\nelif [ \"$NEW_BRANCH\" == \"nightly\" ] && [ \"$CURRENT_BRANCH\" != \"nightly\" ]; then\n  echo -e \"\\e[33mYou are about to switch your mailcow Updates to the unstable (nightly) branch.\\e[0m\"\n  sleep 1\n  echo -e \"\\e[33mBefore you do: Please take a backup of all components to ensure that no Data is lost...\\e[0m\"\n  sleep 1\n  echo -e \"\\e[31mWARNING: A switch to nightly is possible any time. But a switch back (to master) isn't.\\e[0m\"\n  read -r -p \"Are you sure you that want to continue upgrading to the unstable (nightly) branch? [y/N] \" response\n  if [[ ! \"${response}\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n    echo \"OK. If you prepared yourself for that please run the update.sh Script with the --nightly parameter again to trigger this process here.\"\n    exit 0\n  fi\n  BRANCH=$NEW_BRANCH\n  DIFF_DIRECTORY=update_diffs\n  DIFF_FILE=${DIFF_DIRECTORY}/diff_before_upgrade_to_nightly_$(date +\"%Y-%m-%d-%H-%M-%S\")\n  mv diff_before_upgrade* ${DIFF_DIRECTORY}/ 2> /dev/null\n  if ! git diff-index --quiet HEAD; then\n    echo -e \"\\e[32mSaving diff to ${DIFF_FILE}...\\e[0m\"\n    mkdir -p ${DIFF_DIRECTORY}\n    git diff \"${BRANCH}\" --stat > \"${DIFF_FILE}\"\n    git diff \"${BRANCH}\" >> \"${DIFF_FILE}\"\n  fi\n  git fetch origin\n  git checkout -f \"${BRANCH}\"\nfi\n\nif [ ! \"$DEV\" ]; then\n  echo -e \"\\e[32mChecking for newer update script...\\e[0m\"\n  SHA1_1=\"$(sha1sum update.sh)\"\n  git fetch origin #${BRANCH}\n  git checkout \"origin/${BRANCH}\" update.sh\n  SHA1_2=$(sha1sum update.sh)\n  if [[ \"${SHA1_1}\" != \"${SHA1_2}\" ]]; then\n    echo \"update.sh changed, please run this script again, exiting.\"\n    chmod +x update.sh\n    exit 2\n  fi\nfi\n\nif [ ! \"$FORCE\" ]; then\n  read -r -p \"Are you sure you want to update mailcow: dockerized? All containers will be stopped. [y/N] \" response\n  if [[ ! \"${response}\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n    echo \"OK, exiting.\"\n    exit 0\n  fi\n  migrate_docker_nat\nfi\n\nremove_obsolete_nginx_ports\n\necho -e \"\\e[32mValidating docker-compose stack configuration...\\e[0m\"\nsed -i 's/HTTPS_BIND:-:/HTTPS_BIND:-/g' docker-compose.yml\nsed -i 's/HTTP_BIND:-:/HTTP_BIND:-/g' docker-compose.yml\nif ! $COMPOSE_COMMAND config -q; then\n  echo -e \"\\e[31m\\nOh no, something went wrong. Please check the error message above.\\e[0m\"\n  exit 1\nfi\n\necho -e \"\\e[32mChecking for conflicting bridges...\\e[0m\"\nMAILCOW_BRIDGE=$($COMPOSE_COMMAND config | grep -i com.docker.network.bridge.name | cut -d':' -f2)\nwhile read NAT_ID; do\n  iptables -t nat -D POSTROUTING \"$NAT_ID\"\ndone < <(iptables -L -vn -t nat --line-numbers | grep \"$IPV4_NETWORK\" | grep -E 'MASQUERADE.*all' | grep -v \"${MAILCOW_BRIDGE}\" | cut -d' ' -f1)\n\nDIFF_DIRECTORY=update_diffs\nDIFF_FILE=${DIFF_DIRECTORY}/diff_before_update_$(date +\"%Y-%m-%d-%H-%M-%S\")\nmv diff_before_update* ${DIFF_DIRECTORY}/ 2> /dev/null\nif ! git diff-index --quiet HEAD; then\n  echo -e \"\\e[32mSaving diff to ${DIFF_FILE}...\\e[0m\"\n  mkdir -p ${DIFF_DIRECTORY}\n  git diff --stat > \"${DIFF_FILE}\"\n  git diff >> \"${DIFF_FILE}\"\nfi\n\necho -e \"\\e[32mPrefetching images...\\e[0m\"\nprefetch_images\n\necho -e \"\\e[32mStopping mailcow...\\e[0m\"\nsleep 2\nMAILCOW_CONTAINERS=($($COMPOSE_COMMAND ps -q))\n$COMPOSE_COMMAND down\necho -e \"\\e[32mChecking for remaining containers...\\e[0m\"\nsleep 2\nfor container in \"${MAILCOW_CONTAINERS[@]}\"; do\n  docker rm -f \"$container\" 2> /dev/null\ndone\n\n[[ -f data/conf/nginx/ZZZ-ejabberd.conf ]] && rm data/conf/nginx/ZZZ-ejabberd.conf\n\n\n# Silently fixing remote url from andryyy to mailcow\n# git remote set-url origin https://github.com/mailcow/mailcow-dockerized\n\nDEFAULT_REPO=\"https://github.com/mailcow/mailcow-dockerized\"\nCURRENT_REPO=$(git config --get remote.origin.url)\nif [ \"$CURRENT_REPO\" != \"$DEFAULT_REPO\" ]; then\n  echo \"The Repository currently used is not the default Mailcow Repository.\"\n  echo \"Currently Repository: $CURRENT_REPO\"\n  echo \"Default Repository:   $DEFAULT_REPO\"\n  if [ ! \"$FORCE\" ]; then\n    read -r -p \"Should it be changed back to default? [y/N] \" repo_response\n    if [[ \"$repo_response\" =~ ^([yY][eE][sS]|[yY])+$ ]]; then\n      git remote set-url origin $DEFAULT_REPO\n    fi\n  else\n      echo \"Running in forced mode... setting Repo to default!\"\n      git remote set-url origin $DEFAULT_REPO\n  fi\nfi\n\nif [ ! \"$DEV\" ]; then\n  echo -e \"\\e[32mCommitting current status...\\e[0m\"\n  [[ -z \"$(git config user.name)\" ]] && git config user.name moo\n  [[ -z \"$(git config user.email)\" ]] && git config user.email moo@cow.moo\n  [[ ! -z $(git ls-files data/conf/rspamd/override.d/worker-controller-password.inc) ]] && git rm data/conf/rspamd/override.d/worker-controller-password.inc\n  git add -u\n  git commit -am \"Before update on ${DATE}\" > /dev/null\n  echo -e \"\\e[32mFetching updated code from remote...\\e[0m\"\n  git fetch origin #${BRANCH}\n  echo -e \"\\e[32mMerging local with remote code (recursive, strategy: \\\"${MERGE_STRATEGY:-theirs}\\\", options: \\\"patience\\\"...\\e[0m\"\n  git config merge.defaultToUpstream true\n  git merge -X\"${MERGE_STRATEGY:-theirs}\" -Xpatience -m \"After update on ${DATE}\"\n  # Need to use a variable to not pass return codes of if checks\n  MERGE_RETURN=$?\n  if [[ ${MERGE_RETURN} == 128 ]]; then\n    echo -e \"\\e[31m\\nOh no, what happened?\\n=> You most likely added files to your local mailcow instance that were now added to the official mailcow repository. Please move them to another location before updating mailcow.\\e[0m\"\n    exit 1\n  elif [[ ${MERGE_RETURN} == 1 ]]; then\n    echo -e \"\\e[93mPotential conflict, trying to fix...\\e[0m\"\n    git status --porcelain | grep -E \"UD|DU\" | awk '{print $2}' | xargs rm -v\n    git add -A\n    git commit -m \"After update on ${DATE}\" > /dev/null\n    git checkout .\n    echo -e \"\\e[32mRemoved and recreated files if necessary.\\e[0m\"\n  elif [[ ${MERGE_RETURN} != 0 ]]; then\n    echo -e \"\\e[31m\\nOh no, something went wrong. Please check the error message above.\\e[0m\"\n    echo\n    echo \"Run $COMPOSE_COMMAND up -d to restart your stack without updates or try again after fixing the mentioned errors.\"\n    exit 1\n  fi\nelif [ \"$DEV\" ]; then\n  echo -e \"\\e[33mDEVELOPER MODE: Not creating a git diff and commiting it to prevent development stuff within a backup diff...\\e[0m\"\nfi\n\necho -e \"\\e[32mFetching new images, if any...\\e[0m\"\nsleep 2\n$COMPOSE_COMMAND pull\n\n# Fix missing SSL, does not overwrite existing files\n[[ ! -d data/assets/ssl ]] && mkdir -p data/assets/ssl\ncp -n -d data/assets/ssl-example/*.pem data/assets/ssl/\n\necho -e \"Checking IPv6 settings... \"\nif grep -q 'SYSCTL_IPV6_DISABLED=1' mailcow.conf; then\n  echo\n  echo '!! IMPORTANT !!'\n  echo\n  echo 'SYSCTL_IPV6_DISABLED was removed due to complications. IPv6 can be disabled by editing \"docker-compose.yml\" and setting \"enable_ipv6: true\" to \"enable_ipv6: false\".'\n  echo \"This setting will only be active after a complete shutdown of mailcow by running $COMPOSE_COMMAND down followed by $COMPOSE_COMMAND up -d.\"\n  echo\n  echo '!! IMPORTANT !!'\n  echo\n  read -p \"Press any key to continue...\" < /dev/tty\nfi\n\n# Checking for old project name bug\nsed -i --follow-symlinks 's#COMPOSEPROJECT_NAME#COMPOSE_PROJECT_NAME#g' mailcow.conf\n\n# Fix Rspamd maps\nif [ -f data/conf/rspamd/custom/global_from_blacklist.map ]; then\n  mv data/conf/rspamd/custom/global_from_blacklist.map data/conf/rspamd/custom/global_smtp_from_blacklist.map\nfi\nif [ -f data/conf/rspamd/custom/global_from_whitelist.map ]; then\n  mv data/conf/rspamd/custom/global_from_whitelist.map data/conf/rspamd/custom/global_smtp_from_whitelist.map\nfi\n\n# Fix deprecated metrics.conf\nif [ -f \"data/conf/rspamd/local.d/metrics.conf\" ]; then\n  if [ ! -z \"$(git diff --name-only origin/master data/conf/rspamd/local.d/metrics.conf)\" ]; then\n    echo -e \"\\e[33mWARNING\\e[0m - Please migrate your customizations of data/conf/rspamd/local.d/metrics.conf to actions.conf and groups.conf after this update.\"\n    echo \"The deprecated configuration file metrics.conf will be moved to metrics.conf_deprecated after updating mailcow.\"\n  fi\n  mv data/conf/rspamd/local.d/metrics.conf data/conf/rspamd/local.d/metrics.conf_deprecated\nfi\n\n# Set app_info.inc.php\nif [ ${BRANCH} == \"master\" ]; then\n  mailcow_git_version=$(git describe --tags $(git rev-list --tags --max-count=1))\nelif [ ${BRANCH} == \"nightly\" ]; then\n  mailcow_git_version=$(git rev-parse --short $(git rev-parse @{upstream}))\n  mailcow_last_git_version=\"\"\nelse\n  mailcow_git_version=$(git rev-parse --short HEAD)\n  mailcow_last_git_version=\"\"\nfi\n\nmailcow_git_commit=$(git rev-parse \"origin/${BRANCH}\")\nmailcow_git_commit_date=$(git log -1 --format=%ci @{upstream} )\n\nif [ $? -eq 0 ]; then\n  echo '<?php' > data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_VERSION=\"'$mailcow_git_version'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_LAST_GIT_VERSION=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_OWNER=\"mailcow\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_REPO=\"mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_URL=\"https://github.com/mailcow/mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT=\"'$mailcow_git_commit'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT_DATE=\"'$mailcow_git_commit_date'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_BRANCH=\"'$BRANCH'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_UPDATEDAT='$(date +%s)';' >> data/web/inc/app_info.inc.php\n  echo '?>' >> data/web/inc/app_info.inc.php\nelse\n  echo '<?php' > data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_VERSION=\"'$mailcow_git_version'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_LAST_GIT_VERSION=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_OWNER=\"mailcow\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_REPO=\"mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_URL=\"https://github.com/mailcow/mailcow-dockerized\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_GIT_COMMIT_DATE=\"\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_BRANCH=\"'$BRANCH'\";' >> data/web/inc/app_info.inc.php\n  echo '  $MAILCOW_UPDATEDAT='$(date +%s)';' >> data/web/inc/app_info.inc.php\n  echo '?>' >> data/web/inc/app_info.inc.php\n  echo -e \"\\e[33mCannot determine current git repository version...\\e[0m\"\nfi\n\nif [[ ${SKIP_START} == \"y\" ]]; then\n  echo -e \"\\e[33mNot starting mailcow, please run \\\"$COMPOSE_COMMAND up -d --remove-orphans\\\" to start mailcow.\\e[0m\"\nelse\n  echo -e \"\\e[32mStarting mailcow...\\e[0m\"\n  sleep 2\n  $COMPOSE_COMMAND up -d --remove-orphans\nfi\n\necho -e \"\\e[32mCollecting garbage...\\e[0m\"\ndocker_garbage\n\n# Run post-update-hook\nif [ -f \"${SCRIPT_DIR}/post_update_hook.sh\" ]; then\n  bash \"${SCRIPT_DIR}/post_update_hook.sh\"\nfi\n\n# echo \"In case you encounter any problem, hard-reset to a state before updating mailcow:\"\n# echo\n# git reflog --color=always | grep \"Before update on \"\n# echo\n# echo \"Use \\\"git reset --hard hash-on-the-left\\\" and run $COMPOSE_COMMAND up -d afterwards.\"\n"
        }
      ]
    }
  ]
}