{
  "metadata": {
    "timestamp": 1736563048417,
    "page": 680,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jagenjo/webglstudio.js",
      "stars": 5251,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.98828125,
          "content": "# Custom ignore rules\nserverapps/fbxconv/temp\nserverapps/project_deployer/deploy\nserverapps/project_deployer/config.php\nnode_modules\nserverapps/mitsuba/node_modules\nserverapps/mitsuba/temp\n\n# Created by https://www.gitignore.io\n\n### OSX ###\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### Windows ###\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n\n### Linux ###\n*~\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n\n### Bower ###\nbower_components\n.bower-cache\n.bower-registry\n.bower-tmp\n\n\n### Node ###\n# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directory\n# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git\nnode_modules\n\n\n### grunt ###\n# Grunt usually compiles files inside this directory\ndist/\n\n# Grunt usually preprocesses files such as coffeescript, compass... inside the .tmp directory\n.tmp/\n\n### SublimeText ###\n# cache files for sublime text\n*.tmlanguage.cache\n*.tmPreferences.cache\n*.stTheme.cache\n\n# workspace files are user-specific\n*.sublime-workspace\n\n# project files should be checked into the repository, unless a significant\n# proportion of contributors will probably not be using SublimeText\n# *.sublime-project\n\n# sftp configuration file\nsftp-config.json\n\n\n### Intellij ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### Vim ###\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n*~\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 1.5029296875,
          "content": "# Install\n\nFirst remember that to use WebGLStudio you need to install it in a server that has a http server installed to host websites.\nAlso you will need to have shell access to that server to execute some scripts.\n\n## Requirements\n\nYou need to have installed an HTTP Server (Apache or nginx) with PHP support and MySQL.\n\n## Download\nYou need to download two projects from github:\n- LiteFileServer.js [ZIP](https://github.com/jagenjo/litefilesystem.js/archive/master.zip)\n- WebGLstudio.js [ZIP](https://github.com/jagenjo/webglstudio.js/archive/master.zip)\n\n## Unpack\nUpload the files to your server and unpack them following the next steps:\n\n- Unpack the webglstudio ```editor/``` folder in a folder inside a public folder in your server.\n- Create a folder called ```fileserver/``` inside that folder\n- Unpack the litefileserver inside the ```fileserver/``` folder created\n\n## Install LiteFileServer\n\nTo install litefileserver follow this guide: [Guide to install LiteFileSystem](https://github.com/jagenjo/litefilesystem.js/blob/master/INSTALL.md)\n\nCheck that your installation works by entering to the ```fileserver/``` folder from your browser.\n\n## Configure \n\nNow we need to configure WebGLStudio, edit the config.json to specify where is the fileserver located ( the ```fileserver/``` folder ) and where are the files ( the ```fileserver/files``` folder ).\nBy default they should have that name.\n\n## Ready\n\nIf everything was done propertly you should be able to enter to the webglstudio in your server and see everything working.\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "The MIT License (MIT)\n\nCopyright 2015 Javi Agenjo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.138671875,
          "content": "<p align=\"center\">\r\n    <img src=\"https://raw.githubusercontent.com/jagenjo/webglstudio.js/master/press/images/logo.png\" alt=\"WebGLStudio\">\r\n</p>\r\n\r\n# WEBGLSTUDIO IS IN A MIGRATION PROCESS TO A NEW REPO. STAY TUNNED\r\n\r\n# WebGLStudio.js\r\n\r\nWebGLStudio.js is an open-source, browser-based 3D graphics suite. You can edit scenes and materials, design effects and shaders, code behaviours, and share your work - all within a browser using standard web technologies.\r\n\r\nSome important WebGLStudio.js features:\r\n\r\n * A full 3D graphics engine ([LiteScene.js](https://github.com/jagenjo/litescene.js)) that supports multiple lights, shadowmaps, realtime reflections, custom materials, postFX, skinning, animation, and much more.\r\n * An easily extended, component-based system for controlling the rendering pipeline and interaction event hooks \r\n * An easy to use, what you see is what you get (WYSIWYG) editor that provides a single interface for all coding, graph compositing and timeline features.\r\n * A graph editor for controlling behaviours, shaders and post-processing effects, using [LiteGraph.js](https://github.com/jagenjo/litegraph.js).\r\n * Supports the [LiteFileSystem.js](https://github.com/jagenjo/litefilesystem.js), a virtual file system that allows drag-and-drop storage of resources on the web, with configurable quotas, users and shared folders.\r\n * Export and share your work by sending a single link.\r\n\r\nFor more information, visit http://webglstudio.org\r\n\r\n![Interface](press/images/interface.jpg \"Interface\")\r\n\r\nFeatures missing:\r\n* Mesh editing, you cannot select faces and move them\r\n* Support for FBX, it has some sort of support but not fully functional\r\n* Physics\r\n\r\n\r\nInstalling\r\n----------\r\n\r\nTo install WebGLStudio.js, copy the editor files to your server, then install [LiteFileSystem.js](https://github.com/jagenjo/litefilesystem.js) into a `fileserver/` folder within the `editor/` directory. \r\nLiteFileSystem is a library that handles remote file storage. For more information, see the `/INSTALL.md` file and the [LiteFileSystem.js](https://github.com/jagenjo/litefilesystem.js) documentation.\r\n\r\nFeedback\r\n--------\r\n\r\nSend all feedback to javi.agenjo@gmail.com\r\n"
        },
        {
          "name": "editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "guides",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "press",
          "type": "tree",
          "content": null
        },
        {
          "name": "serverapps",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}