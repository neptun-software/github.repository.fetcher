{
  "metadata": {
    "timestamp": 1736562767255,
    "page": 314,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aheckmann/gm",
      "stars": 6965,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3095703125,
          "content": ".DS_Store\nnode_modules\npackage-lock.json\nexamples/imgs/*\n!examples/imgs/original.jpg\n!examples/imgs/original.png\n!examples/imgs/original.gif\n!examples/imgs/originalSideways.jpg\n!examples/imgs/morpher.jpg\n!examples/imgs/photo.JPG\n!examples/imgs/orientation/*\\d.jpg\n!examples/imgs/orientation/*.correct.jpg\n*.sw*\n.idea\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.015625,
          "content": "test/\nexamples/\n"
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 16.62109375,
          "content": "1.25.0 / 2022-09-21\n\n* fixed: windows support #846, #774, #594, #524, #528, #559, #652, #682 [piotr-cz](https://github.com/piotr-cz)\n* docs; improvements from #821 [agokhale](https://github.com/agokhale)\n* docs; improvements #801 [aarongarciah](https://github.com/aarongarciah)\n\n1.24.0 / 2022-09-18\n\n* fixed: infering format of buffered or streamed ico files #429 freund17\n* fixed; preserve color info duing autoOrient() #714, #844 reco\n* tests; switch to Github Actions\n* docs; fix links #834 delesseps\n* docs; clarify install directions #689 PatrykMiszczak\n* refactor; clean up compare.js #788 LongTengDao\n\n1.23.1 / 2017-12-27\n\n * fixed: use debug > 2.6.9 because of security issue #685 danez\n * tests; add nsp check\n * tests; get tests passing on OSX\n\n1.23.0 / 2016-08-03\n\n * fixed; webpack support #547 sean-shirazi\n * fixed; windows support - use cross-spawn to spawn processes #537 bdukes\n * added; allow thumbnail to accept the same options as resize #527 Sebmaster\n * added; dispose support #487 dlwr\n * docs; add example of loading image from URL #544 wahengchang\n * docs; Fix a link in README.md #532 clbn\n * travis; update travis versions #551 amilajack\n\n1.22.0 / 2016-04-07\n\n * fixed; identity parser: support multi-value keys by creating an array #508 #509 [emaniacs](https://github.com/emaniacs)\n * fixed; error handling if gm is not installed #499 [aeo3](https://github.com/aeo3)\n * fixed; highlightColor typo in compare #504 [DanielHudson](https://github.com/DanielHudson)\n * docs; Fix typo #475 [rodrigoalviani](https://github.com/rodrigoalviani)\n\n1.21.1 / 2015-10-26\n\n* fixed: Fixed #465 hard coded gm binary, also fixed issues with compare and fixed tests so they will fail on subsequent runs when they should do [rwky](https://github.com/rwky)\n\n1.21.0 / 2015-10-26 **contains security fix**\n\n* fixed: gm.compare fails to escape arguments properly (Reported by Brendan Scarvell) [rwky](https://github.com/rwky)\n\n1.20.0 / 2015-09-23\n\n* changed: Reverted \"Add format inference from filename for buffers/streams\" due to errors #448\n\n1.19.0 / 2015-09-16\n\n* changed: Added error to notify about image magick not supporting minify [encima](https://github.com/encima)\n* changed: Refactored orientation getter to use faster identify call [lbeschastny](https://github.com/lbeschastny)\n* added: resizeExact function [DanMMX](https://github.com/DanMMX)\n* added: thumbExact function [DanMMX](https://github.com/DanMMX)\n* added: Add format inference from filename for buffers/streams [adurrive](https://github.com/adurrive)\n* fixed: Hex values when passed to compare aren't quoted automatically [DanMMX](https://github.com/DanMMX)\n* fixed: identify returning last frame size instead of the larges on animated gifs [preynal](https://github.com/preynal)\n* docs: Updated docs [laurilehmijoki](https://github.com/laurilehmijoki)\n\n1.18.1 / 2015-05-18\n\n* changed: Added io.js support [rwky](https://github.com/rwky)\n\n1.18.0 / 2015-05-18\n\n* changed: Removed support for node 0.8 and added support for 0.12 [rwky](https://github.com/rwky)\n* changed: Listen to stdin error event for spawn errors [kapouer](https://github.com/kapouer)\n* changed: Improved error handling when gm isn't installed [FreshXOpenSource](https://github.com/FreshXOpenSource)\n* changed: Allow append method to use an array of arguments [emohacker](https://github.com/emohacker)\n* changed: appPath option now specifies full path to gm binary John Borkowski\n* changed: Ignore warning messages for identify [asrail](https://github.com/asrail)\n* added: Montage method [donaldpcook](https://github.com/donaldpcook)\n* added: Progressive option to thumb [mohebifar](https://github.com/mohebifar)\n* added: Native gm auto-orient for use with gm >= 1.3.18 [bog](https://github.com/bog)\n* added: Timeout support by passing the timeout option in milliseconds [marcbachmann](https://github.com/marcbachmann)\n* fixed: density when using ImageMagick [syzer](https://github.com/syzer)\n* fixed: resize behaviour for falsy values [adius](https://github.com/adius)\n\n\n1.17.0 / 2014-10-28\n==================\n\n * changed: extended compare callback also returns the file names #297 [mastix](https://github.com/mastix)\n * changed: pass spawn crash to callback #306 [medikoo](https://github.com/medikoo)\n * changed: geometry supports arbitary string as first argument #330 [jdiez17](https://github.com/jdiez17)\n * added: support for repage+ option #275 [desigens](https://github.com/desigens)\n * added: added the dissolve command #300 [microadm](https://github.com/microadam)\n * added: composite method #332 [jdiez17](https://github.com/jdiez17)\n * fixed: cannot set tolerance to 0 #302 [rwky](https://github.com/rwky)\n * fixed: handle empty buffers #330 [alcidesv](https://github.com/alcidesv)\n\n1.16.0 / 2014-05-09\n==================\n\n * fixed; dropped \"+\" when 0 passed as vertical roll amt #267 [dwtkns](https://github.com/dwtkns)\n * added; highlight-style support #272 [fdecampredon](https://github.com/fdecampredon)\n\n1.15.0 / 2014-05-03\n===================\n\n * changed; gm.compare logic to always run the mse comparison as expected #258 [Vokkim](https://github.com/Vokkim)\n * added; `tolerance` to gm.compare options object #258 [Vokkim](https://github.com/Vokkim)\n * added; option to set ImageMagick application path explicitly #250 (akreitals)\n * fixed; gm.compare: support values like 9.51582e-05 #260 [normanrz](https://github.com/normanrz)\n * README: add call for maintainers\n\n1.14.2 / 2013-12-24\n===================\n\n* fixed; background is now a setting #246 (PEM--)\n\n1.14.1 / 2013-12-09\n===================\n\n* fixed; identify -verbose colon behavior #240 ludow\n\n1.14.0 / 2013-12-04\n===================\n\n* added; compare method for imagemagick (longlho)\n\n1.13.3 / 2013-10-22\n===================\n\n* fixed; escape diffOptions.file in compare (dwabyick)\n\n1.13.2 / 2013-10-18\n===================\n\n* fixed; density is a setting not an operator\n\n1.13.1 / 2013-09-15\n===================\n\n* added; boolean for % crop\n\n1.13.0 / 2013-09-07\n===================\n\n* added; morph more than two images (overra)\n\n1.12.2 / 2013-08-29\n===================\n\n* fixed; fallback to through in node 0.8\n\n1.12.1 / 2013-08-29 (unpublished)\n===================\n\n* refactor; replace through with stream.PassThrough\n\n1.12.0 / 2013-08-27\n===================\n\n* added; diff image output file (chenglou)\n\n1.11.1 / 2013-08-17\n===================\n\n* added; proto.selectFrame(#)\n* fixed; getters should not ignore frame selection\n\n1.11.0 / 2013-07-23\n===================\n\n* added; optional formatting string for gm().identify(format, callback) (tornillo)\n* removed; error messages when gm/im binary is not installed\n\n1.10.0 / 2013-06-27\n===================\n\n* refactor; use native `-auto-orient` for imagemagick\n\n1.9.2 / 2013-06-12\n==================\n\n  * refactor; move `streamToBuffer` to a separate module\n  * fixed; .stream(format) without a callback\n\n1.9.1 / 2013-05-07\n==================\n\n  * fixed; gm().resize(width) always only resizes width\n  * fixed; gm('img.gif').format() returns the format of the first frame\n\n1.9.0 / 2013-04-21\n==================\n\n  * added; node v0.10 support\n  * removed; node < v0.8 support - `Buffer.concat()`\n  * tests; all tests now run on Travis\n  * added; gm().stream() returns a stream when no callback is present\n  * added; gm().toBuffer(callback)\n  * fixed; gm().size() only returns the size of the first frame of a GIF\n\n1.8.2 / 2013-03-07\n==================\n\n  * include source path in identify data #126 [soupdiver](https://github.com/soupdiver)\n\n1.8.1 / 2012-12-21\n==================\n\n  * Avoid losing already set arguments on identify #105 #113 #109 [JNissi](https://github.com/JNissi)\n  * tests; add autoOrient + thumb() test\n  * tests; add test case for #113\n  * tests; added test for #109\n  * tests; add resize on buffer test\n\n1.8.0 / 2012-12-14\n==================\n\n  * added; geometry support to scale() #98\n  * removed; incorrect/broken dissolve() method (never worked)\n  * fixed; handle child_proc error when using Buffer input #109\n  * fixed; use of Buffers with identify() #109\n  * fixed; no longer include -size arg with resize() #98\n  * fixed; remove -size arg from extent() #103\n  * fixed; magnify support\n  * fixed; autoOrient to work with all types of exif orientations [dambalah](https://github.com/dambalah) #108\n  * tests; npm test runs unit only (now compatible with travis)\n  * tests; fix magnify test on imagemagick\n  * tests; added for cmd line args\n\n1.7.0 / 2012-12-06\n==================\n\n  * added; gm.compare support\n  * added; passing Buffers directly [danmilon](https://github.com/danmilon)\n\n1.6.1 / 2012-11-13\n==================\n\n  * fixed regression; only pass additional params on error #96\n\n1.6.0 / 2012-11-10\n==================\n\n  * changed; rename internal buffer to _buffer #88 [kof](https://github.com/kof)\n  * changed; optimized identify getters (format, depth, size, color, filesize). #83 please read this for details: https://github.com/aheckmann/gm/commit/8fcf3f8f84a02cc2001da874cbebb89bf7084409\n  * added; visionmedia/debug support\n  * added; `gm convert -thumbnail` support. _differs from thumb()._ [danmilon](https://github.com/danmilon)\n  * fixed; -rotate 0 support #90\n  * fixed; multi-execution of same gm instance arguments corruption\n  * fixed; gracefully handle parser errors #94 [eldilibra](https://github.com/eldilibra)\n\n1.5.1 / 2012-10-02\n==================\n\n  * fixed; passing multiple paths to append() #77\n\n1.5.0 / 2012-09-15\n==================\n\n  * fixed; callback scope\n  * fixed; append() usage #77\n\n1.4.2 / 2012-08-17\n==================\n\n  * fixed; identify parsing for ImageMagick exif data (#58)\n  * fixed; when in imageMagick mode, complain about missing imageMagick [bcherry](https://github.com/bcherry) (#73)\n  * added; tests\n\n1.4.1 / 2012-07-31\n==================\n\n  * fixed; scenes() args\n  * fixed; accept the left-to-right arg of append()\n  * added; _subCommand\n\n## v1.4 - 07/28/2012\n\n  * added; adjoin() [Math-]\n  * added; affine() [Math-]\n  * added; append() [Math-]\n  * added; authenticate() [Math-]\n  * added; average() [Math-]\n  * added; backdrop() [Math-]\n  * added; blackThreshold() [Math-]\n  * added; bluePrimary() [Math-]\n  * added; border() [Math-]\n  * added; borderColor() [Math-]\n  * added; box() [Math-]\n  * added; channel() [Math-]\n  * added; clip() [Math-]\n  * added; coalesce() [Math-]\n  * added; colorMap() [Math-]\n  * added; compose() [Math-]\n  * added; compress() [Math-]\n  * added; convolve() [Math-]\n  * added; createDirectories() [Math-]\n  * added; deconstruct() [Math-]\n  * added; delay() [Math-]\n  * added; define() [Math-]\n  * added; displace() [Math-]\n  * added; display() [Math-]\n  * added; dispose() [Math-]\n  * added; disolve() [Math-]\n  * added; encoding() [Math-]\n  * added; endian() [Math-]\n  * added; file() [Math-]\n  * added; flatten() [Math-]\n  * added; foreground() [Math-]\n  * added; frame() [Math-]\n  * added; fuzz() [Math-]\n  * added; gaussian() [Math-]\n  * added; geometry() [Math-]\n  * added; greenPrimary() [Math-]\n  * added; highlightColor() [Math-]\n  * added; highlightStyle() [Math-]\n  * added; iconGeometry() [Math-]\n  * added; intent() [Math-]\n  * added; lat() [Math-]\n  * added; level() [Math-]\n  * added; list() [Math-]\n  * added; log() [Math-]\n  * added; map() [Math-]\n  * added; matte() [Math-]\n  * added; matteColor() [Math-]\n  * added; mask() [Math-]\n  * added; maximumError() [Math-]\n  * added; mode() [Math-]\n  * added; monitor() [Math-]\n  * added; mosaic() [Math-]\n  * added; motionBlur() [Math-]\n  * added; name() [Math-]\n  * added; noop() [Math-]\n  * added; normalize() [Math-]\n  * added; opaque() [Math-]\n  * added; operator() [Math-]\n  * added; orderedDither() [Math-]\n  * added; outputDirectory() [Math-]\n  * added; page() [Math-]\n  * added; pause() [Math-]\n  * added; pen() [Math-]\n  * added; ping() [Math-]\n  * added; pointSize() [Math-]\n  * added; preview() [Math-]\n  * added; process() [Math-]\n  * added; profile() [Math-]\n  * added; progress() [Math-]\n  * added; rawSize() [Math-]\n  * added; randomThreshold() [Math-]\n  * added; recolor() [Math-]\n  * added; redPrimary() [Math-]\n  * added; remote() [Math-]\n  * added; render() [Math-]\n  * added; repage() [Math-]\n  * added; sample() [Math-]\n  * added; samplingFactor() [Math-]\n  * added; scene() [Math-]\n  * added; scenes() [Math-]\n  * added; screen() [Math-]\n  * added; segment() [Math-]\n  * added; set() [Math-]\n  * added; shade() [Math-]\n  * added; shadow() [Math-]\n  * added; sharedMemory() [Math-]\n  * added; shave() [Math-]\n  * added; shear() [Math-]\n  * added; silent() [Math-]\n  * added; snaps() [Math-]\n  * added; stagano() [Math-]\n  * added; stereo() [Math-]\n  * added; textFont() [Math-]\n  * added; texture() [Math-]\n  * added; threshold() [Math-]\n  * added; tile() [Math-]\n  * added; transform() [Math-]\n  * added; transparent() [Math-]\n  * added; treeDepth() [Math-]\n  * added; update() [Math-]\n  * added; units() [Math-]\n  * added; unsharp() [Math-]\n  * added; usePixmap() [Math-]\n  * added; view() [Math-]\n  * added; virtualPixel() [Math-]\n  * added; visual() [Math-]\n  * added; watermark() [Math-]\n  * added; wave() [Math-]\n  * added; whitePoint() [Math-]\n  * added; whiteThreshold() [Math-]\n  * added; window() [Math-]\n  * added; windowGroup() [Math-]\n\n## v1.3.2 - 06/22/2012\n\n  * added; node >= 0.7/0.8 compat\n\n## v1.3.1 - 06/06/2012\n\n  * fixed; thumb() alignment and cropping [thomaschaaf]\n  * added; hint when graphicsmagick is not installed (#62)\n  * fixed; minify() (#59)\n\n## v1.3.0 - 04/11/2012\n\n  * added; flatten support [jwarchol]\n  * added; background support [jwarchol]\n  * fixed; identify parser error [chriso]\n\n## v1.2.0 - 03/30/2012\n\n  * added; extent and gravity support [jwarchol]\n\n## v1.1.0 - 03/15/2012\n\n  * added; filter() support [travisbeck]\n  * added; density() [travisbeck]\n  * fixed; permit either width or height in resize [dambalah]\n  * updated; docs\n\n## v1.0.5 - 02/15/2012\n\n  * added; strip() support [Math-]\n  * added; interlace() support [Math-]\n  * added; setFormat() support [Math-]\n  * fixed; regexps for image types [Math-]\n\n## v1.0.4 - 02/09/2012\n\n  * expose utils\n\n## v1.0.3 - 01/27/2012\n\n  * removed; console.log\n\n## v1.0.2 - 01/24/2012\n\n  * added; debugging info on parser errors\n  * fixed; exports.version\n\n## v1.0.1 - 01/12/2012\n\n  * fixed; use of reserved keyword `super` for node v0.5+\n\n## v1.0.0 - 01/12/2012\n\n  * added; autoOrient support [kainosnoema] (#21)\n  * added; orientation support [kainosnoema] (#21)\n  * fixed; identify parser now properly JSON formats all data output by `gm identify` such as IPTC, GPS, Make, etc (#20)\n  * added; support for running as imagemagick (#23, #29)\n  * added; subclassing support; useful for setting default constructor options like one constructor for ImageMagick, the other for GM\n  * added; more tests\n  * changed; remove redundant `orientation`, `resolution`, and `filesize` from `this.data` in `indentify()`. Use their uppercase equivalents.\n\n## v0.6.0 - 12/14/2011\n\n  * added; stream support [kainosnoema] (#22)\n\n## v0.5.0 - 07/07/2011\n\n  * added; gm#trim() support [lepokle]\n  * added; gm#inputIs() support\n  * fixed; 'geometry does not contain image' error: gh-17\n\n## v0.4.3 - 05/17/2011\n\n  * added; bunch of tests\n  * fixed; polygon, polyline, bezier drawing bug\n\n## v0.4.2 - 05/10/2011\n\n  * added; resize options support\n\n## v0.4.1 - 04/28/2011\n\n  * shell args are now escaped (thanks @visionmedia)\n  * added; gm.in()\n  * added; gm.out()\n  * various refactoring\n\n## v0.4.0 - 9/21/2010\n\n  * removed deprecated `new` method\n  * added drawing docs\n\n## v0.3.2 - 9/06/2010\n\n  * new images are now created using same gm() constructor\n\n## v0.3.1 - 9/06/2010\n\n  * can now create images from scratch\n  * add type method\n\n## v0.3.0 - 8/26/2010\n\n  * add drawing api\n\n## v0.2.2 - 8/22/2010\n\n  * add quality option to thumb()\n  * add teropa to contributors\n  * added support for colorspace()\n\n## v0.2.1 - 7/31/2010\n\n  * fixed naming conflict. depth() manipulation method renamed bitdepth()\n  * added better docs\n\n## v0.2.0 - 7/29/2010\n\nnew methods\n\n  - swirl\n  - spread\n  - solarize\n  - sharpen\n  - roll\n  - sepia\n  - region\n  - raise\n  - lower\n  - paint\n  - noise\n  - negative\n  - morph\n  - median\n  - antialias\n  - limit\n  - label\n  - implode\n  - gamma\n  - enhance\n  - equalize\n  - emboss\n  - edge\n  - dither\n  - monochrome\n  - despeckle\n  - depth\n  - cycle\n  - contrast\n  - comment\n  - colors\n\nadded more default args to several methods\nadded more examples\n\n\n## v0.1.2 - 7/28/2010\n\n  * refactor project into separate modules\n\n\n## v0.1.1 - 7/27/2010\n\n  * add modulate method\n  * add colorize method\n  * add charcoal method\n  * add chop method\n  * bug fix in write without a callback\n\n\n## v0.1.0 - 6/27/2010\n\n  * no longer supporting mogrify\n  * add image data getter methods\n\n    * size\n    * format\n    * color\n    * res\n    * depth\n    * filesize\n    * identify\n\n  * add new convert methods\n\n    * scale\n    * resample\n    * rotate\n    * flip\n    * flop\n    * crop\n    * magnify\n    * minify\n    * quality\n    * blur\n    * thumb\n\n\n## v0.0.1 - 6/11/2010\nInitial release\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.796875,
          "content": "\n# gm [![Build Status](https://travis-ci.org/aheckmann/gm.png?branch=master)](https://travis-ci.org/aheckmann/gm)  [![NPM Version](https://img.shields.io/npm/v/gm.svg?style=flat)](https://www.npmjs.org/package/gm)\n\nGraphicsMagick and ImageMagick for node\n\n## Bug Reports\n\nWhen reporting bugs please include the version of graphicsmagick/imagemagick you're using (gm -version/convert -version) as well as the version of this module and copies of any images you're having problems with.\n\n## Getting started\nFirst download and install [GraphicsMagick](http://www.graphicsmagick.org/) or [ImageMagick](http://www.imagemagick.org/). In Mac OS X, you can simply use [Homebrew](http://mxcl.github.io/homebrew/) and do:\n\n    brew install imagemagick\n    brew install graphicsmagick\n\nthen either use npm:\n\n    npm install gm\n\nor clone the repo:\n\n    git clone git://github.com/aheckmann/gm.git\n\n\n## Use ImageMagick instead of gm\n\nSubclass `gm` to enable [ImageMagick 7+](https://imagemagick.org/script/porting.php)\n\n```js\nconst fs = require('fs')\nconst gm = require('gm').subClass({ imageMagick: '7+' });\n```\n\nOr, to enable ImageMagick legacy mode (for ImageMagick version < 7)\n\n```js\nconst fs = require('fs')\nconst gm = require('gm').subClass({ imageMagick: true });\n```\n\n## Specify the executable path\n\nOptionally specify the path to the executable.\n\n```js\nconst fs = require('fs')\nconst gm = require('gm').subClass({\n  appPath: String.raw`C:\\Program Files\\ImageMagick-7.1.0-Q16-HDRI\\magick.exe`\n});\n```\n\n## Basic Usage\n\n```js\nvar fs = require('fs')\n  , gm = require('gm');\n\n// resize and remove EXIF profile data\ngm('/path/to/my/img.jpg')\n.resize(240, 240)\n.noProfile()\n.write('/path/to/resize.png', function (err) {\n  if (!err) console.log('done');\n});\n\n// some files would not be resized appropriately\n// http://stackoverflow.com/questions/5870466/imagemagick-incorrect-dimensions\n// you have two options:\n// use the '!' flag to ignore aspect ratio\ngm('/path/to/my/img.jpg')\n.resize(240, 240, '!')\n.write('/path/to/resize.png', function (err) {\n  if (!err) console.log('done');\n});\n\n// use the .resizeExact with only width and/or height arguments\ngm('/path/to/my/img.jpg')\n.resizeExact(240, 240)\n.write('/path/to/resize.png', function (err) {\n  if (!err) console.log('done');\n});\n\n// obtain the size of an image\ngm('/path/to/my/img.jpg')\n.size(function (err, size) {\n  if (!err)\n    console.log(size.width > size.height ? 'wider' : 'taller than you');\n});\n\n// output all available image properties\ngm('/path/to/img.png')\n.identify(function (err, data) {\n  if (!err) console.log(data)\n});\n\n// pull out the first frame of an animated gif and save as png\ngm('/path/to/animated.gif[0]')\n.write('/path/to/firstframe.png', function (err) {\n  if (err) console.log('aaw, shucks');\n});\n\n// auto-orient an image\ngm('/path/to/img.jpg')\n.autoOrient()\n.write('/path/to/oriented.jpg', function (err) {\n  if (err) ...\n})\n\n// crazytown\ngm('/path/to/my/img.jpg')\n.flip()\n.magnify()\n.rotate('green', 45)\n.blur(7, 3)\n.crop(300, 300, 150, 130)\n.edge(3)\n.write('/path/to/crazy.jpg', function (err) {\n  if (!err) console.log('crazytown has arrived');\n})\n\n// annotate an image\ngm('/path/to/my/img.jpg')\n.stroke(\"#ffffff\")\n.drawCircle(10, 10, 20, 10)\n.font(\"Helvetica.ttf\", 12)\n.drawText(30, 20, \"GMagick!\")\n.write(\"/path/to/drawing.png\", function (err) {\n  if (!err) console.log('done');\n});\n\n// creating an image\ngm(200, 400, \"#ddff99f3\")\n.drawText(10, 50, \"from scratch\")\n.write(\"/path/to/brandNewImg.jpg\", function (err) {\n  // ...\n});\n```\n\n## Streams\n\n```js\n// passing a stream\nvar readStream = fs.createReadStream('/path/to/my/img.jpg');\ngm(readStream, 'img.jpg')\n.write('/path/to/reformat.png', function (err) {\n  if (!err) console.log('done');\n});\n\n\n// passing a downloadable image by url\n\nvar request = require('request');\nvar url = \"www.abc.com/pic.jpg\"\n\ngm(request(url))\n.write('/path/to/reformat.png', function (err) {\n  if (!err) console.log('done');\n});\n\n\n// can also stream output to a ReadableStream\n// (can be piped to a local file or remote server)\ngm('/path/to/my/img.jpg')\n.resize('200', '200')\n.stream(function (err, stdout, stderr) {\n  var writeStream = fs.createWriteStream('/path/to/my/resized.jpg');\n  stdout.pipe(writeStream);\n});\n\n// without a callback, .stream() returns a stream\n// this is just a convenience wrapper for above.\nvar writeStream = fs.createWriteStream('/path/to/my/resized.jpg');\ngm('/path/to/my/img.jpg')\n.resize('200', '200')\n.stream()\n.pipe(writeStream);\n\n// pass a format or filename to stream() and\n// gm will provide image data in that format\ngm('/path/to/my/img.jpg')\n.stream('png', function (err, stdout, stderr) {\n  var writeStream = fs.createWriteStream('/path/to/my/reformatted.png');\n  stdout.pipe(writeStream);\n});\n\n// or without the callback\nvar writeStream = fs.createWriteStream('/path/to/my/reformatted.png');\ngm('/path/to/my/img.jpg')\n.stream('png')\n.pipe(writeStream);\n\n// combine the two for true streaming image processing\nvar readStream = fs.createReadStream('/path/to/my/img.jpg');\ngm(readStream)\n.resize('200', '200')\n.stream(function (err, stdout, stderr) {\n  var writeStream = fs.createWriteStream('/path/to/my/resized.jpg');\n  stdout.pipe(writeStream);\n});\n\n// GOTCHA:\n// when working with input streams and any 'identify'\n// operation (size, format, etc), you must pass \"{bufferStream: true}\" if\n// you also need to convert (write() or stream()) the image afterwards\n// NOTE: this buffers the readStream in memory!\nvar readStream = fs.createReadStream('/path/to/my/img.jpg');\ngm(readStream)\n.size({bufferStream: true}, function(err, size) {\n  this.resize(size.width / 2, size.height / 2)\n  this.write('/path/to/resized.jpg', function (err) {\n    if (!err) console.log('done');\n  });\n});\n\n```\n\n## Buffers\n\n```js\n// A buffer can be passed instead of a filepath as well\nvar buf = require('fs').readFileSync('/path/to/image.jpg');\n\ngm(buf, 'image.jpg')\n.noise('laplacian')\n.write('/path/to/out.jpg', function (err) {\n  if (err) return handle(err);\n  console.log('Created an image from a Buffer!');\n});\n\n/*\nA buffer can also be returned instead of a stream\nThe first argument to toBuffer is optional, it specifies the image format\n*/\ngm('img.jpg')\n.resize(100, 100)\n.toBuffer('PNG',function (err, buffer) {\n  if (err) return handle(err);\n  console.log('done!');\n})\n```\n\n## Custom Arguments\n\nIf `gm` does not supply you with a method you need or does not work as you'd like, you can simply use `gm().in()` or `gm().out()` to set your own arguments.\n\n- `gm().command()` - Custom command such as `identify` or `convert`\n- `gm().in()` - Custom input arguments\n- `gm().out()` - Custom output arguments\n\nThe command will be formatted in the following order:\n\n1. `command` - ie `convert`\n2. `in` - the input arguments\n3. `source` - stdin or an image file\n4. `out` - the output arguments\n5. `output` - stdout or the image file to write to\n\nFor example, suppose you want the following command:\n\n```bash\ngm \"convert\" \"label:Offline\" \"PNG:-\"\n```\n\nHowever, using `gm().label()` may not work as intended for you:\n\n```js\ngm()\n.label('Offline')\n.stream();\n```\n\nwould yield:\n\n```bash\ngm \"convert\" \"-label\" \"\\\"Offline\\\"\" \"PNG:-\"\n```\n\nInstead, you can use `gm().out()`:\n\n```js\ngm()\n.out('label:Offline')\n.stream();\n```\n\nwhich correctly yields:\n\n```bash\ngm \"convert\" \"label:Offline\" \"PNG:-\"\n```\n\n### Custom Identify Format String\n\nWhen identifying an image, you may want to use a custom formatting string instead of using `-verbose`, which is quite slow.\nYou can use your own [formatting string](http://www.imagemagick.org/script/escape.php) when using `gm().identify(format, callback)`.\nFor example,\n\n```js\ngm('img.png').format(function (err, format) {\n\n})\n\n// is equivalent to\n\ngm('img.png').identify('%m', function (err, format) {\n\n})\n```\n\nsince `%m` is the format option for getting the image file format.\n\n## Platform differences\n\nPlease document and refer to any [platform or ImageMagick/GraphicsMagick issues/differences here](https://github.com/aheckmann/gm/wiki/GraphicsMagick-and-ImageMagick-versions).\n\n## Examples:\n\n  Check out the [examples](http://github.com/aheckmann/gm/tree/master/examples/) directory to play around.\n  Also take a look at the [extending gm](http://wiki.github.com/aheckmann/gm/extending-gm)\n  page to see how to customize gm to your own needs.\n\n## Constructor:\n\n  There are a few ways you can use the `gm` image constructor.\n\n  - 1) `gm(path)` When you pass a string as the first argument it is interpreted as the path to an image you intend to manipulate.\n  - 2) `gm(stream || buffer, [filename])` You may also pass a ReadableStream or Buffer as the first argument, with an optional file name for format inference.\n  - 3) `gm(width, height, [color])` When you pass two integer arguments, gm will create a new image on the fly with the provided dimensions and an optional background color. And you can still chain just like you do with pre-existing images too. See [here](http://github.com/aheckmann/gm/blob/master/examples/new.js) for an example.\n\nThe links below refer to an older version of gm but everything should still work, if anyone feels like updating them please make a PR\n\n## Methods\n\n  - getters\n    - [size](http://aheckmann.github.io/gm/docs.html#getters) - returns the size (WxH) of the image\n    - [orientation](http://aheckmann.github.io/gm/docs.html#getters) - returns the EXIF orientation of the image\n    - [format](http://aheckmann.github.io/gm/docs.html#getters) - returns the image format (gif, jpeg, png, etc)\n    - [depth](http://aheckmann.github.io/gm/docs.html#getters) - returns the image color depth\n    - [color](http://aheckmann.github.io/gm/docs.html#getters) - returns the number of colors\n    - [res](http://aheckmann.github.io/gm/docs.html#getters)   - returns the image resolution\n    - [filesize](http://aheckmann.github.io/gm/docs.html#getters) - returns image filesize\n    - [identify](http://aheckmann.github.io/gm/docs.html#getters) - returns all image data available. Takes an optional format string.\n\n  - manipulation\n    - [adjoin](http://aheckmann.github.io/gm/docs.html#adjoin)\n    - [affine](http://aheckmann.github.io/gm/docs.html#affine)\n    - [antialias](http://aheckmann.github.io/gm/docs.html#antialias)\n    - [append](http://aheckmann.github.io/gm/docs.html#append)\n    - [authenticate](http://aheckmann.github.io/gm/docs.html#authenticate)\n    - [autoOrient](http://aheckmann.github.io/gm/docs.html#autoOrient)\n    - [average](http://aheckmann.github.io/gm/docs.html#average)\n    - [backdrop](http://aheckmann.github.io/gm/docs.html#backdrop)\n    - [bitdepth](http://aheckmann.github.io/gm/docs.html#bitdepth)\n    - [blackThreshold](http://aheckmann.github.io/gm/docs.html#blackThreshold)\n    - [bluePrimary](http://aheckmann.github.io/gm/docs.html#bluePrimary)\n    - [blur](http://aheckmann.github.io/gm/docs.html#blur)\n    - [border](http://aheckmann.github.io/gm/docs.html#border)\n    - [borderColor](http://aheckmann.github.io/gm/docs.html#borderColor)\n    - [box](http://aheckmann.github.io/gm/docs.html#box)\n    - [channel](http://aheckmann.github.io/gm/docs.html#channel)\n    - [charcoal](http://aheckmann.github.io/gm/docs.html#charcoal)\n    - [chop](http://aheckmann.github.io/gm/docs.html#chop)\n    - [clip](http://aheckmann.github.io/gm/docs.html#clip)\n    - [coalesce](http://aheckmann.github.io/gm/docs.html#coalesce)\n    - [colors](http://aheckmann.github.io/gm/docs.html#colors)\n    - [colorize](http://aheckmann.github.io/gm/docs.html#colorize)\n    - [colorMap](http://aheckmann.github.io/gm/docs.html#colorMap)\n    - [colorspace](http://aheckmann.github.io/gm/docs.html#colorspace)\n    - [comment](http://aheckmann.github.io/gm/docs.html#comment)\n    - [compose](http://aheckmann.github.io/gm/docs.html#compose)\n    - [compress](http://aheckmann.github.io/gm/docs.html#compress)\n    - [contrast](http://aheckmann.github.io/gm/docs.html#contrast)\n    - [convolve](http://aheckmann.github.io/gm/docs.html#convolve)\n    - [createDirectories](http://aheckmann.github.io/gm/docs.html#createDirectories)\n    - [crop](http://aheckmann.github.io/gm/docs.html#crop)\n    - [cycle](http://aheckmann.github.io/gm/docs.html#cycle)\n    - [deconstruct](http://aheckmann.github.io/gm/docs.html#deconstruct)\n    - [delay](http://aheckmann.github.io/gm/docs.html#delay)\n    - [define](http://aheckmann.github.io/gm/docs.html#define)\n    - [density](http://aheckmann.github.io/gm/docs.html#density)\n    - [despeckle](http://aheckmann.github.io/gm/docs.html#despeckle)\n    - [dither](http://aheckmann.github.io/gm/docs.html#dither)\n    - [displace](http://aheckmann.github.io/gm/docs.html#dither)\n    - [display](http://aheckmann.github.io/gm/docs.html#display)\n    - [dispose](http://aheckmann.github.io/gm/docs.html#dispose)\n    - [dissolve](http://aheckmann.github.io/gm/docs.html#dissolve)\n    - [edge](http://aheckmann.github.io/gm/docs.html#edge)\n    - [emboss](http://aheckmann.github.io/gm/docs.html#emboss)\n    - [encoding](http://aheckmann.github.io/gm/docs.html#encoding)\n    - [enhance](http://aheckmann.github.io/gm/docs.html#enhance)\n    - [endian](http://aheckmann.github.io/gm/docs.html#endian)\n    - [equalize](http://aheckmann.github.io/gm/docs.html#equalize)\n    - [extent](http://aheckmann.github.io/gm/docs.html#extent)\n    - [file](http://aheckmann.github.io/gm/docs.html#file)\n    - [filter](http://aheckmann.github.io/gm/docs.html#filter)\n    - [flatten](http://aheckmann.github.io/gm/docs.html#flatten)\n    - [flip](http://aheckmann.github.io/gm/docs.html#flip)\n    - [flop](http://aheckmann.github.io/gm/docs.html#flop)\n    - [foreground](http://aheckmann.github.io/gm/docs.html#foreground)\n    - [frame](http://aheckmann.github.io/gm/docs.html#frame)\n    - [fuzz](http://aheckmann.github.io/gm/docs.html#fuzz)\n    - [gamma](http://aheckmann.github.io/gm/docs.html#gamma)\n    - [gaussian](http://aheckmann.github.io/gm/docs.html#gaussian)\n    - [geometry](http://aheckmann.github.io/gm/docs.html#geometry)\n    - [gravity](http://aheckmann.github.io/gm/docs.html#gravity)\n    - [greenPrimary](http://aheckmann.github.io/gm/docs.html#greenPrimary)\n    - [highlightColor](http://aheckmann.github.io/gm/docs.html#highlightColor)\n    - [highlightStyle](http://aheckmann.github.io/gm/docs.html#highlightStyle)\n    - [iconGeometry](http://aheckmann.github.io/gm/docs.html#iconGeometry)\n    - [implode](http://aheckmann.github.io/gm/docs.html#implode)\n    - [intent](http://aheckmann.github.io/gm/docs.html#intent)\n    - [interlace](http://aheckmann.github.io/gm/docs.html#interlace)\n    - [label](http://aheckmann.github.io/gm/docs.html#label)\n    - [lat](http://aheckmann.github.io/gm/docs.html#lat)\n    - [level](http://aheckmann.github.io/gm/docs.html#level)\n    - [list](http://aheckmann.github.io/gm/docs.html#list)\n    - [limit](http://aheckmann.github.io/gm/docs.html#limit)\n    - [log](http://aheckmann.github.io/gm/docs.html#log)\n    - [loop](http://aheckmann.github.io/gm/docs.html#loop)\n    - [lower](http://aheckmann.github.io/gm/docs.html#lower)\n    - [magnify](http://aheckmann.github.io/gm/docs.html#magnify)\n    - [map](http://aheckmann.github.io/gm/docs.html#map)\n    - [matte](http://aheckmann.github.io/gm/docs.html#matte)\n    - [matteColor](http://aheckmann.github.io/gm/docs.html#matteColor)\n    - [mask](http://aheckmann.github.io/gm/docs.html#mask)\n    - [maximumError](http://aheckmann.github.io/gm/docs.html#maximumError)\n    - [median](http://aheckmann.github.io/gm/docs.html#median)\n    - [minify](http://aheckmann.github.io/gm/docs.html#minify)\n    - [mode](http://aheckmann.github.io/gm/docs.html#mode)\n    - [modulate](http://aheckmann.github.io/gm/docs.html#modulate)\n    - [monitor](http://aheckmann.github.io/gm/docs.html#monitor)\n    - [monochrome](http://aheckmann.github.io/gm/docs.html#monochrome)\n    - [morph](http://aheckmann.github.io/gm/docs.html#morph)\n    - [mosaic](http://aheckmann.github.io/gm/docs.html#mosaic)\n    - [motionBlur](http://aheckmann.github.io/gm/docs.html#motionBlur)\n    - [name](http://aheckmann.github.io/gm/docs.html#name)\n    - [negative](http://aheckmann.github.io/gm/docs.html#negative)\n    - [noise](http://aheckmann.github.io/gm/docs.html#noise)\n    - [noop](http://aheckmann.github.io/gm/docs.html#noop)\n    - [normalize](http://aheckmann.github.io/gm/docs.html#normalize)\n    - [noProfile](http://aheckmann.github.io/gm/docs.html#profile)\n    - [opaque](http://aheckmann.github.io/gm/docs.html#opaque)\n    - [operator](http://aheckmann.github.io/gm/docs.html#operator)\n    - [orderedDither](http://aheckmann.github.io/gm/docs.html#orderedDither)\n    - [outputDirectory](http://aheckmann.github.io/gm/docs.html#outputDirectory)\n    - [paint](http://aheckmann.github.io/gm/docs.html#paint)\n    - [page](http://aheckmann.github.io/gm/docs.html#page)\n    - [pause](http://aheckmann.github.io/gm/docs.html#pause)\n    - [pen](http://aheckmann.github.io/gm/docs.html#pen)\n    - [ping](http://aheckmann.github.io/gm/docs.html#ping)\n    - [pointSize](http://aheckmann.github.io/gm/docs.html#pointSize)\n    - [preview](http://aheckmann.github.io/gm/docs.html#preview)\n    - [process](http://aheckmann.github.io/gm/docs.html#process)\n    - [profile](http://aheckmann.github.io/gm/docs.html#profile)\n    - [progress](http://aheckmann.github.io/gm/docs.html#progress)\n    - [quality](http://aheckmann.github.io/gm/docs.html#quality)\n    - [raise](http://aheckmann.github.io/gm/docs.html#raise)\n    - [rawSize](http://aheckmann.github.io/gm/docs.html#rawSize)\n    - [randomThreshold](http://aheckmann.github.io/gm/docs.html#randomThreshold)\n    - [recolor](http://aheckmann.github.io/gm/docs.html#recolor)\n    - [redPrimary](http://aheckmann.github.io/gm/docs.html#redPrimary)\n    - [region](http://aheckmann.github.io/gm/docs.html#region)\n    - [remote](http://aheckmann.github.io/gm/docs.html#remote)\n    - [render](http://aheckmann.github.io/gm/docs.html#render)\n    - [repage](http://aheckmann.github.io/gm/docs.html#repage)\n    - [resample](http://aheckmann.github.io/gm/docs.html#resample)\n    - [resize](http://aheckmann.github.io/gm/docs.html#resize)\n    - [roll](http://aheckmann.github.io/gm/docs.html#roll)\n    - [rotate](http://aheckmann.github.io/gm/docs.html#rotate)\n    - [sample](http://aheckmann.github.io/gm/docs.html#sample)\n    - [samplingFactor](http://aheckmann.github.io/gm/docs.html#samplingFactor)\n    - [scale](http://aheckmann.github.io/gm/docs.html#scale)\n    - [scene](http://aheckmann.github.io/gm/docs.html#scene)\n    - [scenes](http://aheckmann.github.io/gm/docs.html#scenes)\n    - [screen](http://aheckmann.github.io/gm/docs.html#screen)\n    - [segment](http://aheckmann.github.io/gm/docs.html#segment)\n    - [sepia](http://aheckmann.github.io/gm/docs.html#sepia)\n    - [set](http://aheckmann.github.io/gm/docs.html#set)\n    - [setFormat](http://aheckmann.github.io/gm/docs.html#setformat)\n    - [shade](http://aheckmann.github.io/gm/docs.html#shade)\n    - [shadow](http://aheckmann.github.io/gm/docs.html#shadow)\n    - [sharedMemory](http://aheckmann.github.io/gm/docs.html#sharedMemory)\n    - [sharpen](http://aheckmann.github.io/gm/docs.html#sharpen)\n    - [shave](http://aheckmann.github.io/gm/docs.html#shave)\n    - [shear](http://aheckmann.github.io/gm/docs.html#shear)\n    - [silent](http://aheckmann.github.io/gm/docs.html#silent)\n    - [solarize](http://aheckmann.github.io/gm/docs.html#solarize)\n    - [snaps](http://aheckmann.github.io/gm/docs.html#snaps)\n    - [stegano](http://aheckmann.github.io/gm/docs.html#stegano)\n    - [stereo](http://aheckmann.github.io/gm/docs.html#stereo)\n    - [strip](http://aheckmann.github.io/gm/docs.html#strip) _imagemagick only_\n    - [spread](http://aheckmann.github.io/gm/docs.html#spread)\n    - [swirl](http://aheckmann.github.io/gm/docs.html#swirl)\n    - [textFont](http://aheckmann.github.io/gm/docs.html#textFont)\n    - [texture](http://aheckmann.github.io/gm/docs.html#texture)\n    - [threshold](http://aheckmann.github.io/gm/docs.html#threshold)\n    - [thumb](http://aheckmann.github.io/gm/docs.html#thumb)\n    - [tile](http://aheckmann.github.io/gm/docs.html#tile)\n    - [transform](http://aheckmann.github.io/gm/docs.html#transform)\n    - [transparent](http://aheckmann.github.io/gm/docs.html#transparent)\n    - [treeDepth](http://aheckmann.github.io/gm/docs.html#treeDepth)\n    - [trim](http://aheckmann.github.io/gm/docs.html#trim)\n    - [type](http://aheckmann.github.io/gm/docs.html#type)\n    - [update](http://aheckmann.github.io/gm/docs.html#update)\n    - [units](http://aheckmann.github.io/gm/docs.html#units)\n    - [unsharp](http://aheckmann.github.io/gm/docs.html#unsharp)\n    - [usePixmap](http://aheckmann.github.io/gm/docs.html#usePixmap)\n    - [view](http://aheckmann.github.io/gm/docs.html#view)\n    - [virtualPixel](http://aheckmann.github.io/gm/docs.html#virtualPixel)\n    - [visual](http://aheckmann.github.io/gm/docs.html#visual)\n    - [watermark](http://aheckmann.github.io/gm/docs.html#watermark)\n    - [wave](http://aheckmann.github.io/gm/docs.html#wave)\n    - [whitePoint](http://aheckmann.github.io/gm/docs.html#whitePoint)\n    - [whiteThreshold](http://aheckmann.github.io/gm/docs.html#whiteThreshold)\n    - [window](http://aheckmann.github.io/gm/docs.html#window)\n    - [windowGroup](http://aheckmann.github.io/gm/docs.html#windowGroup)\n\n  - drawing primitives\n    - [draw](http://aheckmann.github.io/gm/docs.html#draw)\n    - [drawArc](http://aheckmann.github.io/gm/docs.html#drawArc)\n    - [drawBezier](http://aheckmann.github.io/gm/docs.html#drawBezier)\n    - [drawCircle](http://aheckmann.github.io/gm/docs.html#drawCircle)\n    - [drawEllipse](http://aheckmann.github.io/gm/docs.html#drawEllipse)\n    - [drawLine](http://aheckmann.github.io/gm/docs.html#drawLine)\n    - [drawPoint](http://aheckmann.github.io/gm/docs.html#drawPoint)\n    - [drawPolygon](http://aheckmann.github.io/gm/docs.html#drawPolygon)\n    - [drawPolyline](http://aheckmann.github.io/gm/docs.html#drawPolyline)\n    - [drawRectangle](http://aheckmann.github.io/gm/docs.html#drawRectangle)\n    - [drawText](http://aheckmann.github.io/gm/docs.html#drawText)\n    - [fill](http://aheckmann.github.io/gm/docs.html#fill)\n    - [font](http://aheckmann.github.io/gm/docs.html#font)\n    - [fontSize](http://aheckmann.github.io/gm/docs.html#fontSize)\n    - [stroke](http://aheckmann.github.io/gm/docs.html#stroke)\n    - [strokeWidth](http://aheckmann.github.io/gm/docs.html#strokeWidth)\n    - [setDraw](http://aheckmann.github.io/gm/docs.html#setDraw)\n\n  - image output\n    - **write** - writes the processed image data to the specified filename\n    - **stream** - provides a `ReadableStream` with the processed image data\n    - **toBuffer** - returns the image as a `Buffer` instead of a stream\n\n## compare\n\nGraphicsmagicks `compare` command is exposed through `gm.compare()`. This allows us to determine if two images can be considered \"equal\".\n\nCurrently `gm.compare` only accepts file paths.\n\n    gm.compare(path1, path2 [, options], callback)\n\n```js\ngm.compare('/path/to/image1.jpg', '/path/to/another.png', function (err, isEqual, equality, raw, path1, path2) {\n  if (err) return handle(err);\n\n  // if the images were considered equal, `isEqual` will be true, otherwise, false.\n  console.log('The images were equal: %s', isEqual);\n\n  // to see the total equality returned by graphicsmagick we can inspect the `equality` argument.\n  console.log('Actual equality: %d', equality);\n\n  // inspect the raw output\n  console.log(raw);\n\n  // print file paths\n  console.log(path1, path2);\n})\n```\n\nYou may wish to pass a custom tolerance threshold to increase or decrease the default level of `0.4`.\n\n\n```js\ngm.compare('/path/to/image1.jpg', '/path/to/another.png', 1.2, function (err, isEqual) {\n  ...\n})\n```\n\nTo output a diff image, pass a configuration object to define the diff options and tolerance.\n\n\n```js\nvar options = {\n  file: '/path/to/diff.png',\n  highlightColor: 'yellow',\n  tolerance: 0.02\n}\ngm.compare('/path/to/image1.jpg', '/path/to/another.png', options, function (err, isEqual, equality, raw) {\n  ...\n})\n```\n\n## composite\n\nGraphicsMagick supports compositing one image on top of another. This is exposed through `gm.composite()`. Its first argument is an image path with the changes to the base image, and an optional mask image.\n\nCurrently, `gm.composite()` only accepts file paths.\n\n    gm.composite(other [, mask])\n\n```js\ngm('/path/to/image.jpg')\n.composite('/path/to/second_image.jpg')\n.geometry('+100+150')\n.write('/path/to/composite.png', function(err) {\n    if(!err) console.log(\"Written composite image.\");\n});\n```\n\n## montage\n\nGraphicsMagick supports montage for combining images side by side. This is exposed through `gm.montage()`. Its only argument is an image path with the changes to the base image.\n\nCurrently, `gm.montage()` only accepts file paths.\n\n    gm.montage(other)\n\n```js\ngm('/path/to/image.jpg')\n.montage('/path/to/second_image.jpg')\n.geometry('+100+150')\n.write('/path/to/montage.png', function(err) {\n    if(!err) console.log(\"Written montage image.\");\n});\n```\n\n## Contributors\n[https://github.com/aheckmann/gm/contributors](https://github.com/aheckmann/gm/contributors)\n\n## Inspiration\nhttp://github.com/quiiver/magickal-node\n\n## Plugins\n[https://github.com/aheckmann/gm/wiki](https://github.com/aheckmann/gm/wiki)\n\n## Tests\n`npm test`\n\nTo run a single test:\n\n```\nnpm test -- alpha.js\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2010 [Aaron Heckmann](aaron.heckmann+github@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 3.1103515625,
          "content": "\n/**\n * Module dependencies.\n */\n\nvar Stream = require('stream').Stream;\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\nutil.inherits(gm, EventEmitter);\n\n/**\n * Constructor.\n *\n * @param {String|Number} path - path to img source or ReadableStream or width of img to create\n * @param {Number} [height] - optional filename of ReadableStream or height of img to create\n * @param {String} [color] - optional hex background color of created img\n */\n\nfunction gm (source, height, color) {\n  var width;\n\n  if (!(this instanceof gm)) {\n    return new gm(source, height, color);\n  }\n\n  EventEmitter.call(this);\n\n  this._options = {};\n  this.options(this.__proto__._options);\n\n  this.data = {};\n  this._in = [];\n  this._out = [];\n  this._outputFormat = null;\n  this._subCommand = 'convert';\n\n  if (source instanceof Stream) {\n    this.sourceStream = source;\n    source = height || 'unknown.jpg';\n  } else if (Buffer.isBuffer(source)) {\n    this.sourceBuffer = source;\n    source = height || 'unknown.jpg';\n  } else if (height) {\n    // new images\n    width = source;\n    source = \"\";\n\n    this.in(\"-size\", width + \"x\" + height);\n\n    if (color) {\n      this.in(\"xc:\"+ color);\n    }\n  }\n\n  if (typeof source === \"string\") {\n    // then source is a path\n\n    // parse out gif frame brackets from filename\n    // since stream doesn't use source path\n    // eg. \"filename.gif[0]\"\n    var frames = source.match(/(\\[.+\\])$/);\n    if (frames) {\n      this.sourceFrames = source.substr(frames.index, frames[0].length);\n      source = source.substr(0, frames.index);\n    }\n  }\n\n  this.source = source;\n\n  this.addSrcFormatter(function (src) {\n    // must be first source formatter\n\n    var inputFromStdin = this.sourceStream || this.sourceBuffer;\n    var ret = inputFromStdin ? '-' : this.source;\n\n    const fileNameProvied = typeof height === 'string';\n    if (inputFromStdin && fileNameProvied && /\\.ico$/i.test(this.source)) {\n      ret = `ico:-`;\n    }\n\n    if (ret && this.sourceFrames) ret += this.sourceFrames;\n\n    src.length = 0;\n    src[0] = ret;\n  });\n}\n\n/**\n * Subclasses the gm constructor with custom options.\n *\n * @param {options} options\n * @return {gm} the subclasses gm constructor\n */\n\nvar parent = gm;\ngm.subClass = function subClass (options) {\n  function gm (source, height, color) {\n    if (!(this instanceof parent)) {\n      return new gm(source, height, color);\n    }\n\n    parent.call(this, source, height, color);\n  }\n\n  gm.prototype.__proto__ = parent.prototype;\n  gm.prototype._options = {};\n  gm.prototype.options(options);\n\n  return gm;\n}\n\n/**\n * Augment the prototype.\n */\n\nrequire(\"./lib/options\")(gm.prototype);\nrequire(\"./lib/getters\")(gm);\nrequire(\"./lib/args\")(gm.prototype);\nrequire(\"./lib/drawing\")(gm.prototype);\nrequire(\"./lib/convenience\")(gm.prototype);\nrequire(\"./lib/command\")(gm.prototype);\nrequire(\"./lib/compare\")(gm.prototype);\nrequire(\"./lib/composite\")(gm.prototype);\nrequire(\"./lib/montage\")(gm.prototype);\n\n/**\n * Expose.\n */\n\nmodule.exports = exports = gm;\nmodule.exports.utils = require('./lib/utils');\nmodule.exports.compare = require('./lib/compare')();\nmodule.exports.version = require('./package.json').version;\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0419921875,
          "content": "{\n  \"name\": \"gm\",\n  \"description\": \"GraphicsMagick and ImageMagick for node.js\",\n  \"version\": \"1.25.0\",\n  \"author\": \"Aaron Heckmann <aaron.heckmann+github@gmail.com>\",\n  \"keywords\": [\n    \"graphics\",\n    \"magick\",\n    \"image\",\n    \"graphicsmagick\",\n    \"imagemagick\",\n    \"gm\",\n    \"convert\",\n    \"identify\",\n    \"compare\"\n  ],\n  \"engines\": {\n    \"node\": \">=14\"\n  },\n  \"bugs\": {\n    \"url\": \"http://github.com/aheckmann/gm/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://www.opensource.org/licenses/mit-license.php\"\n    }\n  ],\n  \"main\": \"./index\",\n  \"scripts\": {\n    \"security\": \"npm audit\",\n    \"test\": \"npm run security && npm run test-integration\",\n    \"test-integration\": \"node test/ --integration\",\n    \"test-unit\": \"node test/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aheckmann/gm.git\"\n  },\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"async\": \"~0.9.0\"\n  },\n  \"dependencies\": {\n    \"array-parallel\": \"~0.1.3\",\n    \"array-series\": \"~0.1.5\",\n    \"cross-spawn\": \"^4.0.0\",\n    \"debug\": \"^3.1.0\"\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}