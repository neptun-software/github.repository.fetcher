{
  "metadata": {
    "timestamp": 1736562830896,
    "page": 394,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shutterstock/rickshaw",
      "stars": 6535,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1259765625,
          "content": "root = true\n\n[*]\nindent_style = tab\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1552734375,
          "content": "*.log\n*swp\nyarn-error.log\nyarn.lock\npackage-lock.json\n\n# Dependency directories\nnode_modules\nvendor\n\n# Coverage directory used by tools like istanbul\ncoverage\n"
        },
        {
          "name": ".jshintignore",
          "type": "blob",
          "size": 0.1435546875,
          "content": "node_modules/\n**/vendor/\n**/*[.-]min.js\nsrc/js/Rickshaw.Class.js\nsrc/js/Rickshaw.Compat.ClassList.js\nsrc/helpers/endUMD.js\nsrc/helpers/startUMD.js\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.205078125,
          "content": "{\n  \"funcscope\": true,\n  \"lastsemic\": true,\n  \"loopfunc\": true,\n  \"eqnull\": true,\n  \"expr\": true,\n  \"undef\": true,\n  \"browser\": true,\n  \"node\": true,\n  \"predef\": [\"Rickshaw\", \"d3\", \"jQuery\", \"console\", \"io\"]\n}\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.3017578125,
          "content": "*.log\n*swp\nyarn-error.log\nyarn.lock\npackage-lock.json\n\n# Dependency directories\nnode_modules\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# Docs\nexamples\ntutorial\ntests\n\n# Development files\n.editorconfig\n.jshintignore\n.jshintrc\n.rock.yml\n.travis.yml\nMakefile\nCODE_OF_CONDUCT.md\nCONTRIBUTING.md\n"
        },
        {
          "name": ".rock.yml",
          "type": "blob",
          "size": 0.1279296875,
          "content": "runtime: node4\nbuild: npm install && make clean && make\nrun: rock --runtime=python27 run python -m SimpleHTTPServer\ntest: npm test\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1708984375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at \nopensource_moderation@shutterstock.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1865234375,
          "content": "# Contribute to Rickshaw\n\nThanks for contributing!\n\n## Issues\n\nWe're currently overhauling how we do issues. Before we have a template in place and relevant labels, it would be great if you made your issue concise, clear, and to the point. If you have labels that you would suggest we add, please add this line with suggested labels at the bottom of the issue:\n\n`Suggested labels: example, another-example-label`\n\nIf you'd like to weigh in on labels, check out [this issue](https://github.com/shutterstock/rickshaw/issues/588).\n\n## Pull requests are always welcome!\n\nPlease follow a few guidelines:\n\n- Please don't include updated versions of `rickshaw.js` and `rickshaw.min.js`. Just changes to the source files will suffice.\n- Add a unit test or two to cover the proposed changes\n- Please run the tests and make sure tests are all passing before submitting your pull request\n- Do as the Romans do and stick with existing whitespace and formatting conventions (i.e., tabs instead of spaces, etc)\n- Consider adding a simple example under examples/ that demonstrates any new functionality\n\n## Code of Conduct\n\nAll interactions with Shutterstock follow the [Contributor Covenant Code of Conduct](CODE_OF_CONDUCT.md).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "Copyright (C) 2011-2017 by Shutterstock Images, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.470703125,
          "content": "NODE_PREFIX=$(shell npm prefix)\nNODE_MODULES=$(NODE_PREFIX)/node_modules\n\nCSS_MIN=$(NODE_MODULES)/.bin/cleancss\nJS_MIN=$(NODE_MODULES)/.bin/uglifyjs\nJS_HINT=$(NODE_MODULES)/.bin/jshint\nD3=$(NODE_MODULES)/d3\nJSDOM=$(NODE_MODULES)/jsdom\nNODEUNIT=$(NODE_MODULES)/nodeunit\n\nCSS_FILES=\\\n\tsrc/css/detail.css\\\n\tsrc/css/graph.css\\\n\tsrc/css/legend.css\\\n\nJS_FILES=\\\n\tsrc/helpers/startUMD.js.prepend\\\n\tsrc/js/Rickshaw.js\\\n\tsrc/js/Rickshaw.Class.js\\\n\tsrc/js/Rickshaw.Compat.ClassList.js\\\n\tsrc/js/Rickshaw.Graph.js\\\n\tsrc/js/Rickshaw.Fixtures.Color.js\\\n\tsrc/js/Rickshaw.Fixtures.RandomData.js\\\n\tsrc/js/Rickshaw.Fixtures.Time.js\\\n\tsrc/js/Rickshaw.Fixtures.Time.Local.js\\\n\tsrc/js/Rickshaw.Fixtures.Number.js\\\n\tsrc/js/Rickshaw.Color.Palette.js\\\n\tsrc/js/Rickshaw.Graph.Ajax.js\\\n\tsrc/js/Rickshaw.Graph.Annotate.js\\\n\tsrc/js/Rickshaw.Graph.Axis.Time.js\\\n\tsrc/js/Rickshaw.Graph.Axis.X.js\\\n\tsrc/js/Rickshaw.Graph.Axis.Y.js\\\n\tsrc/js/Rickshaw.Graph.Axis.Y.Scaled.js\\\n\tsrc/js/Rickshaw.Graph.Behavior.Series.Highlight.js\\\n\tsrc/js/Rickshaw.Graph.Behavior.Series.Order.js\\\n\tsrc/js/Rickshaw.Graph.Behavior.Series.Toggle.js\\\n\tsrc/js/Rickshaw.Graph.DragZoom.js\\\n\tsrc/js/Rickshaw.Graph.HoverDetail.js\\\n\tsrc/js/Rickshaw.Graph.JSONP.js\\\n\tsrc/js/Rickshaw.Graph.Legend.js\\\n\tsrc/js/Rickshaw.Graph.RangeSlider.js\\\n\tsrc/js/Rickshaw.Graph.RangeSlider.Preview.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.Line.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.Stack.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.Bar.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.Area.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.ScatterPlot.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.Multi.js\\\n\tsrc/js/Rickshaw.Graph.Renderer.LinePlot.js\\\n\tsrc/js/Rickshaw.Graph.Smoother.js\\\n\tsrc/js/Rickshaw.Graph.Socketio.js\\\n\tsrc/js/Rickshaw.Series.js\\\n\tsrc/js/Rickshaw.Series.FixedDuration.js\\\n\tsrc/helpers/endUMD.js.append\\\n\n.PHONY: clean build\n\nbuild: rickshaw.min.css rickshaw.min.js\n\nclean:\n\trm -rf rickshaw.css rickshaw.js rickshaw.min.*\n\ntest: $(D3) $(JSDOM) $(NODEUNIT)\n\tnpm test\n\n$(JS_HINT):\n\tnpm install jshint\n\n$(CSS_MIN):\n\tnpm install clean-css\n\n$(JS_MIN):\n\tnpm install uglify-js\n\n$(D3):\n\tnpm install d3\n\n$(JSDOM):\n\tnpm install jsdom\n\n$(NODEUNIT):\n\tnpm install nodeunit\n\nrickshaw.css: $(CSS_FILES)\n\tcat $(CSS_FILES) > rickshaw.css\n\nrickshaw.js: $(JS_FILES) $(JS_HINT)\n\t$(JS_HINT) src/js\n\tcat $(JS_FILES) > rickshaw.js\n\nrickshaw.min.css: $(CSS_MIN) rickshaw.css\n\t$(CSS_MIN) rickshaw.css > rickshaw.min.css\n\nrickshaw.min.js: $(JS_MIN) rickshaw.js\n\t$(JS_MIN) --reserved-names \"\\$$super\" rickshaw.js > rickshaw.min.js\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.4521484375,
          "content": "[![NPM version][npm-image]][npm-url]\n[![Build Status][github-actions-image]][github-actions-url]\n[![Coverage Status][coverage-image]][coverage-url]\n\n# Rickshaw\n\nRickshaw is a JavaScript toolkit for creating interactive time series graphs, developed at [Shutterstock](http://www.shutterstock.com)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Install](#install)\n  - [Dependencies](#dependencies)\n- [Rickshaw.Graph](#rickshawgraph)\n      - [element](#element)\n      - [series](#series)\n      - [renderer](#renderer)\n      - [width](#width)\n      - [height](#height)\n      - [min](#min)\n      - [max](#max)\n      - [padding](#padding)\n      - [interpolation](#interpolation)\n      - [stack](#stack)\n  - [Methods](#methods)\n      - [render()](#render)\n      - [configure()](#configure)\n      - [onUpdate(f)](#onupdatef)\n- [Extensions](#extensions)\n- [Rickshaw.Color.Palette](#rickshawcolorpalette)\n    - [Color Schemes](#color-schemes)\n    - [Interpolation](#interpolation)\n- [Rickshaw and Cross-Browser Support](#rickshaw-and-cross-browser-support)\n- [Minification](#minification)\n- [Development](#development)\n- [Contributing](#contributing)\n- [Authors](#authors)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n\n## Getting Started\n\nGetting started with a simple graph is straightforward.  Here's the gist:\n\n```javascript\nvar graph = new Rickshaw.Graph( {\n  element: document.querySelector('#graph'),\n  series: [\n    {\n      color: 'steelblue',\n      data: [ { x: 0, y: 23}, { x: 1, y: 15 }, { x: 2, y: 79 } ]\n    }, {\n      color: 'lightblue',\n      data: [ { x: 0, y: 30}, { x: 1, y: 20 }, { x: 2, y: 64 } ]\n    }\n  ]\n} );\n\ngraph.render();\n```\nSee the [overview](https://shutterstock.github.io/rickshaw/), [tutorial](http://shutterstock.github.com/rickshaw/tutorial/introduction.html), and [examples](http://shutterstock.github.com/rickshaw/examples/) for more.\n\n## Install\n\nIn the browser, manually add `rickshaw.min.js` and `rickshaw.min.css` in the document head.\n\nAlternatively, you can install Rickshaw using [Bower](https://bower.io/) or [npm](https://npmjs.com).\n\n```sh\n# With bower\nbower install rickshaw\n# With npm\nnpm install --save rickshaw\n```\n\n### Dependencies\n\nRickshaw relies on the fantastic [D3 visualization library](http://mbostock.github.com/d3/) to do lots of the heavy lifting for stacking and rendering to SVG.\n\nSome extensions require [jQuery](http://jquery.com) and [jQuery UI](http://jqueryui.com), but for drawing some basic graphs you'll be okay without.\n\nRickshaw uses [jsdom](https://github.com/tmpvar/jsdom) to run unit tests in Node to be able to do SVG manipulation. As of the jsdom 7.0.0 release, jsdom requires Node.js 4 or newer [jsdom changelog](https://github.com/tmpvar/jsdom/blob/master/Changelog.md#700). If you want to run the tests on your machine, and you don't have access to a version of node >= 4.0, you can `npm install jsdom@3`  so that you can run the tests using the [3.x branch of jsdom](https://github.com/tmpvar/jsdom/tree/3.x).\n\n## Rickshaw.Graph\n\nA Rickshaw graph.  Send an `element` reference, `series` data, and optionally other properties to the constructor before calling `render()` to point the graph.  A listing of properties follows.  Send these as arguments to the constructor, and optionally set them later on already-instantiated graphs with a call to `configure()`\n\n##### element\n\nA reference to an HTML element that should hold the graph.\n\n##### series\n\nArray of objects containing series data to plot.  Each object should contain `data` at a minimum, a sorted array of objects each with x and y properties.  Optionally send a `name` and `color` as well.  Some renderers and extensions may also support additional keys.\n\n##### renderer\n\nA string containing the name of the renderer to be used.  Options include `area`, `stack`, `bar`, `line`, and `scatterplot`.  Defaults to `line`. Also see the `multi` meta renderer in order to support different renderers per series.\n\n##### width\n\nWidth of the graph in pixels.  Falls back to the width of the `element`, or defaults to 400 if the element has no width.\n\n##### height\n\nHeight of the graph in pixels.  Falls back to the height of the `element`, or defaults to 250 if the element has no height.\n\n##### min\n\nLower value on the Y-axis, or `auto` for the lowest value in the series.  Defaults to 0.\n\n##### max\n\nHighest value on the Y-axis.  Defaults to the highest value in the series.\n\n##### padding\n\nAn object containing any of `top`, `right`, `bottom`, and `left` properties specifying a padding percentage around the extrema of the data in the graph.  Defaults to 0.01 on top for 1% padding, and 0 on other sides. Padding on the bottom only applies when the `yMin` is either negative or `auto`.\n\n##### interpolation\n\nLine smoothing / interpolation method (see [D3 docs](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-line_interpolate)); notable options:\n\n  * `linear`: straight lines between points\n  * `step-after`: square steps from point to point\n  * `cardinal`: smooth curves via cardinal splines (default)\n  * `basis`: smooth curves via B-splines\n\n##### stack\n\nAllows you to specify whether series should be stacked while in the context of stacking renderers (area, bar, etc).  Defaults to `stack: 'true'`. To unstack, `unstack: 'true'`.\n\n### Methods\n\nOnce you have instantiated a graph, call methods below to get pixels on the screen, change configuration, and set callbacks.\n\n##### render()\n\nDraw or redraw the graph.\n\n##### configure()\n\nSet properties on an instantiated graph.  Specify any properties the constructor accepts, including `width` and `height` and `renderer`.  Call `render()` to redraw the graph and reflect newly-configured properties.\n\n##### onUpdate(f)\n\nAdd a callback to run when the graph is rendered\n\n\n## Extensions\n\nOnce you have a basic graph, extensions let you add functionality.  See the [overview](https://shutterstock.github.io/rickshaw/) and [examples](http://shutterstock.github.com/rickshaw/examples/) listing for more.\n\n* __Rickshaw.Graph.Legend__ - add a basic legend\n\n* __Rickshaw.Graph.HoverDetail__ - show details on hover\n\n* __Rickshaw.Graph.JSONP__ - get data via a JSONP request\n\n* __Rickshaw.Graph.Annotate__ - add x-axis annotations\n\n* __Rickshaw.Graph.RangeSlider__ - dynamically zoom on the x-axis with a slider\n\n* __Rickshaw.Graph.RangeSlider.Preview__ - pan and zoom via graphical preview of entire data set\n\n* __Rickshaw.Graph.Axis.Time__ - add an x-axis and grid lines with time labels\n\n* __Rickshaw.Graph.Axis.X__ - add an x-axis and grid lines with arbitrary labels\n\n* __Rickshaw.Graph.Axis.Y__ - add a y-axis and grid lines\n\n* __Rickshaw.Graph.Axis.Y.Scaled__ - add a y-axis with an alternate scale\n\n* __Rickshaw.Graph.Behavior.Series.Highlight__ - highlight series on legend hover\n\n* __Rickshaw.Graph.Behavior.Series.Order__ - reorder series in the stack with drag-and-drop\n\n* __Rickshaw.Graph.Behavior.Series.Toggle__ - toggle series on and off through the legend\n\n\n## Rickshaw.Color.Palette\n\nRickshaw comes with a few color schemes. Instantiate a palette and specify a scheme name, and then call color() on the palette to get each next color.\n\n```javascript\nvar palette = new Rickshaw.Color.Palette( { scheme: 'spectrum2001' } );\n\npalette.color() // => first color in the palette\npalette.color() // => next color in the palette...\n```\n\nOptionally, to palette.color() can take a numeric argument to specify which color from the palette should be used (zero-indexed).  This can be helpful when assigning a color to series of a plot with particular meaning:\n\n```javascript\nvar palette = new Rickshaw.Color.Palette( { scheme: 'colorwheel' } );\n\npalette.color(0) // => first color in the palette - red in this example\npalette.color(2) // => third color in the palette - light blue\n```\n\n#### Color Schemes\n\n  * classic9\n  * colorwheel\n  * cool\n  * munin\n  * spectrum14\n  * spectrum2000\n  * spectrum2001\n\n#### Interpolation\n\nFor graphs with more series than palettes have colors, specify an `interpolatedStopCount` to the palette constructor.\n\n## Rickshaw and Cross-Browser Support\n\nThis library works in modern browsers and Internet Explorer 9+.\n\nRickshaw relies on the HTMLElement#classList API, which isn't natively supported in Internet Explorer 9.  Rickshaw adds support by including a shim which implements the classList API by extending the HTMLElement prototype.  You can disable this behavior if you like, by setting `RICKSHAW_NO_COMPAT` to a true value before including the library.\n\n## Minification\n\nIf your project uses minification, you will need to give a hint to the minifier to leave variables named `$super` named `$super`.  For example, with uglify on the command line:\n\n```\n$ uglify-js --reserved-names \"$super\" rickshaw.js > rickshaw.min.js\n```\n\nOr a sample configuration with `grunt-contrib-uglify`:\n\n```javascript\nuglify: {\n  options: {\n    mangle: { except: [\"$super\"] }\n  }\n}\n```\n\n## Development\n\nFor building, we use [Node](http://nodejs.org) and [npm](http://npmjs.org). Running `npm run build` or `make` should get you going with any luck.\n\nAfter doing a build you can run the tests with the command: `npm test`\n\nFor more available options see the [package.json](package.json) scripts section.\n\n\n## Contributing\n\nPull requests are always welcome!  Please follow a few guidelines:\n\n- Please don't include updated versions of `rickshaw.js` and `rickshaw.min.js`.  Just changes to the source files will suffice.\n- Add a unit test or two to cover the proposed changes\n- Do as the Romans do and stick with existing whitespace and formatting conventions (i.e., tabs instead of spaces, etc)\n- Consider adding a simple example under `examples/` that demonstrates any new functionality\n\nPlease note that all interactions with Shutterstock follow the [Contributor Covenant Code of Conduct](CODE_OF_CONDUCT.md).\n\n## Authors\n\nThis library was developed by David Chester, Douglas Hunter, and Silas Sewell at [Shutterstock](http://www.shutterstock.com)\n\n\n## License\n\nCopyright (C) 2011-2024 by Shutterstock Images, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[npm-image]: https://img.shields.io/npm/v/rickshaw.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/rickshaw\n[github-actions-image]: https://github.com/shutterstock/rickshaw/actions/workflows/ci.yaml/badge.svg\n[github-actions-url]: https://github.com/shutterstock/rickshaw/actions/workflows/ci.yaml\n[coverage-image]: https://coveralls.io/repos/github/shutterstock/rickshaw/badge.svg?branch=main\n[coverage-url]: https://coveralls.io/github/shutterstock/rickshaw\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.537109375,
          "content": "{\n  \"name\": \"rickshaw\",\n  \"version\": \"1.7.1\",\n  \"description\": \"Rickshaw is a JavaScript toolkit for creating interactive time series graphs.\",\n  \"main\": [\n    \"./rickshaw.js\",\n    \"./rickshaw.css\"\n  ],\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"d3\",\n    \"charts\",\n    \"rickshaw\",\n    \"svg\",\n    \"graph\"\n  ],\n  \"homepage\": \"https://github.com/shutterstock/rickshaw\",\n  \"moduleType\": [],\n  \"ignore\": [\n    \"**/.*\",\n    \"bower_components\",\n    \"examples\",\n    \"node_modules\",\n    \"tests\",\n    \"tutorial\"\n  ],\n  \"dependencies\": {\n    \"d3\": \"~3.5.5\"\n  }\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 5.6103515625,
          "content": "{\n  \"name\": \"rickshaw\",\n  \"version\": \"1.7.1\",\n  \"homepage\": \"https://shutterstock.github.io/rickshaw/\",\n  \"dependencies\": {\n    \"d3\": \"^3.5.16\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/shutterstock/rickshaw.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/shutterstock/rickshaw/issues\"\n  },\n  \"keywords\": [\n    \"charts\",\n    \"d3\",\n    \"graph\",\n    \"rickshaw\",\n    \"svg\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"./rickshaw\",\n  \"engines\": {\n    \"node\": \">= 4.0.0\"\n  },\n  \"devDependencies\": {\n    \"clean-css-cli\": \"^4.3.0\",\n    \"coveralls\": \"^2.11.9\",\n    \"istanbul\": \"^0.4.3\",\n    \"jquery\": \"^3.2.1\",\n    \"jsdom\": \"^8.1.0\",\n    \"jshint\": \"^2.9.5\",\n    \"nodemon\": \"^1.11.0\",\n    \"nodeunit\": \"^0.9.1\",\n    \"sinon\": \"^2.3.8\",\n    \"uglify-js\": \"^2.8.29\"\n  },\n  \"scripts\": {\n    \"build\": \"make clean && make\",\n    \"examples\": \"open examples/index.html\",\n    \"lint\": \"jshint src/js/*\",\n    \"test\": \"make && nodeunit tests\",\n    \"watch\": \"nodemon --watch src --exec make rickshaw.js\",\n    \"coverage\": \"istanbul cover nodeunit tests --reporter=lcov\",\n    \"coveralls\": \"cat ./coverage/lcov.info | coveralls\",\n    \"preversion:src\": \"sed \\\"s/version: '[^,]*'/version: '$npm_package_version'/\\\" src/js/Rickshaw.js  > output &&  mv output src/js/Rickshaw.js\",\n    \"preversion:bower\": \"sed 's/\\\"version\\\": \\\"[^,]*\\\"/\\\"version\\\": \\\"'$npm_package_version'\\\"/' bower.json  > output &&  mv output bower.json\",\n    \"version\": \"npm run preversion:src && npm run preversion:bower && make clean && make && npm test && git add -A src bower.json rickshaw.js rickshaw.min.js rickshaw.css rickshaw.min.css\",\n    \"doctoc\": \"doctoc --title='## Table of Contents' --github README.md\"\n  },\n  \"description\": \" JavaScript toolkit for creating interactive real-time graphs\",\n  \"contributors\": [\n    \"David Chester <david@shutterstock.com>\",\n    \"cesine <cesine@yahoo.com>\",\n    \"Richard Littauer <richard.littauer@gmail.com>\",\n    \"Robert Buchholz <rbu@goodpoint.de>\",\n    \"Thomas Yip <thomasleaf@gmail.com>\",\n    \"Silas Sewell <silas@shutterstock.com>\",\n    \"Martin Häcker <spamfaenger@gmx.de>\",\n    \"Wil Moore III <wil.moore@wilmoore.com>\",\n    \"Travis Beck <travis@shutterstock.com>\",\n    \"JJ <jj.knitis@gmail.com>\",\n    \"Thomas Deatherage <tdeatherage@shutterstock.com>\",\n    \"Sam Graham <sgrahamuk@deviantart.com>\",\n    \"Christopher Chambers <chris@peanutcode.com>\",\n    \"Di Wu <dwu@palantir.com>\",\n    \"Trygve Vea <trygve.vea@gmail.com>\",\n    \"Chris Chua <chris@thousandeyes.com>\",\n    \"Mike Atlas <mike@weft.io>\",\n    \"Alex Williams <awilliams@alexwilliams.ca>\",\n    \"Bradford Folkens <bfolkens@gmail.com>\",\n    \"Callum Jones <callum@callumj.com>\",\n    \"Doa Jafri <doajafri@gmail.com>\",\n    \"Douglas Hunter <douglashunter@gmail.com>\",\n    \"Eleanor <elle.beal@gmail.com>\",\n    \"Greg Bacchus <greg+git@bacchus.co.nz>\",\n    \"Jay <jay3686@gmail.com>\",\n    \"Katie McLaughlin <katie@anchor.net.au>\",\n    \"Luke Mawbey <lbm@lbm.net.au>\",\n    \"Michael Phan-Ba <michael@mikepb.com>\",\n    \"Romain Delamare <romain.delamare@tocea.com>\",\n    \"Rowan Chakoumakos <rowanc@stanford.edu>\",\n    \"Thomas Lackemann <tommylackemann@gmail.com>\",\n    \"bhashit parikh <bhashit.parikh@gmail.com>\",\n    \"msand <msand@abo.fi>\",\n    \"rojotek <robert@rojotek.com>\",\n    \"funvit <funvit@gmail.com>\",\n    \"Marcos Prieto <marcospri@gmail.com>\",\n    \"Mark Derbecker <mark.derbecker@seeq.com>\",\n    \"Fernando Jorge Mota <f.j.mota13@gmail.com>\",\n    \"Martin Olsson <martin@minimum.se>\",\n    \"Mathias Rangel Wulff <m@rawu.dk>\",\n    \"Mathieu Chataigner <mathieu.chataigner@gmail.com>\",\n    \"Matthew Ginnard <matthew@runscope.com>\",\n    \"Maury Quijada <maury.quijada@gmail.com>\",\n    \"Max Rabin <rabin.max@gmail.com>\",\n    \"Michael Meisel <michael@thousandeyes.com>\",\n    \"hamx0r <jason.haury@gmail.com>\",\n    \"Michal Ostruszka <michal.ostruszka@gmail.com>\",\n    \"Michelle Bu <michelle@stripe.com>\",\n    \"Emilio Lopez <mr.emiliolopez@gmail.com>\",\n    \"Mokeponi <mokeponi@gmail.com>\",\n    \"Nicolas Racine <nic335@users.noreply.github.com>\",\n    \"Noah Gibbs <noah.gibbs@onlive.com>\",\n    \"Pablo Reyes <reyesoft@gmail.com>\",\n    \"Philip Wills <philip.wills@guardian.co.uk>\",\n    \"Eirik S. Morland <eirik@morland.no>\",\n    \"Rob Dawson <robert.dawson@lmax.com>\",\n    \"Conan Tzou <conan@asperasoft.com>\",\n    \"Robert Tod <roberttod@gmail.com>\",\n    \"mcandre <andrew.pennebaker@gmail.com>\",\n    \"tajjyarden <tim@golen.net>\",\n    \"Carlos Eduardo Rodrigues Diógenes <cerdiogenes@gmail.com>\",\n    \"Sebastian Wallin <sebastian.wallin@gmail.com>\",\n    \"Shane Reustle <me@shanereustle.com>\",\n    \"Brian Norton <brian.nort@gmail.com>\",\n    \"Stuart Nelson <stuartnelson3@gmail.com>\",\n    \"Tamas Goga <tamasgoga94@gmail.com>\",\n    \"Brian K. Smith <thisisbrians@gmail.com>\",\n    \"muddydixon <muddydixon@gmail.com>\",\n    \"Brennan Ashton <bashton@brennanashton.com>\",\n    \"Boris Kozorovitzky <majorzbzzn@gmail.com>\",\n    \"Benjamin J DeLong <howaboutben+github@gmail.com>\",\n    \"Vivek Kushwaha <vivek.kushwaha@hindustantimes.com>\",\n    \"Ben Kovacevich <bkovacevich@shutterstock.com>\",\n    \"Yoav <yoav@gingerlime.com>\",\n    \"arunv <me@arunv.com>\",\n    \"unSinn <fabian.maechler@gmail.com>\",\n    \"bnormoyle <bnormoyle@gmail.com>\",\n    \"Arun C. Murthy <acmurthy@apache.org>\",\n    \"André Tavares <mail@andretavares.com>\",\n    \"GermanBluefox <dogafox@gmail.com>\",\n    \"cjthompson <chris@thompson-web.org>\",\n    \"Hamed Zaghaghi <hamed.zaghaghi@gmail.com>\",\n    \"Gagan Awhad <gagan.a.awhad@gmail.com>\",\n    \"JJ Bunnyman <jj+git@shuttercorp.net>\",\n    \"davidhc <davidhcohen@gmail.com>\",\n    \"Jay Patel <jpatel@shutterstock.com>\",\n    \"Joshua Goldberg <jsgoldberg90@gmail.com>\",\n    \"deldrid1 <deldrid1@utk.edu>\",\n    \"Kyle <kyle.j.conroy@gmail.com>\",\n    \"Maciej Winnicki <maciej.winnicki@gmail.com>\"\n  ]\n}\n"
        },
        {
          "name": "rickshaw.css",
          "type": "blob",
          "size": 7.166015625,
          "content": ".rickshaw_graph .detail {\n\tpointer-events: none;\n\tposition: absolute;\n\ttop: 0;\n\tz-index: 2;\n\tbackground: rgba(0, 0, 0, 0.1);\n\tbottom: 0;\n\twidth: 1px;\n\ttransition: opacity 0.25s linear;\n\t-moz-transition: opacity 0.25s linear;\n\t-o-transition: opacity 0.25s linear;\n\t-webkit-transition: opacity 0.25s linear;\n}\n.rickshaw_graph .detail.inactive {\n\topacity: 0;\n}\n.rickshaw_graph .detail .item.active {\n\topacity: 1;\n\twidth: auto;\n\theight: auto;\n}\n.rickshaw_graph .detail .x_label {\n\tfont-family: Arial, sans-serif;\n\tborder-radius: 3px;\n\tpadding: 6px;\n\topacity: 0.5;\n\tborder: 1px solid #e0e0e0;\n\tfont-size: 12px;\n\tposition: absolute;\n\tbackground: white;\n\twhite-space: nowrap;\n}\n.rickshaw_graph .detail .x_label.left {\n\tleft: 0;\n}\n.rickshaw_graph .detail .x_label.right {\n\tright: 0;\n}\n.rickshaw_graph .detail .item {\n\tposition: absolute;\n\tz-index: 2;\n\tborder-radius: 3px;\n\tpadding: 0.25em;\n\tfont-size: 12px;\n\tfont-family: Arial, sans-serif;\n\topacity: 0;\n\tbackground: rgba(0, 0, 0, 0.4);\n\tcolor: white;\n\tborder: 1px solid rgba(0, 0, 0, 0.4);\n\tmargin-left: 1em;\n\tmargin-right: 1em;\n\tmargin-top: -1em;\n\twhite-space: nowrap;\n}\n.rickshaw_graph .detail .item.left {\n\tleft: 0;\n}\n.rickshaw_graph .detail .item.right {\n\tright: 0;\n}\n.rickshaw_graph .detail .item.active {\n\topacity: 1;\n\tbackground: rgba(0, 0, 0, 0.8);\n}\n.rickshaw_graph .detail .item:after {\n\tposition: absolute;\n\tdisplay: block;\n\twidth: 0;\n\theight: 0;\n\n\tcontent: \"\";\n\n\tborder: 5px solid transparent;\n}\n.rickshaw_graph .detail .item.left:after {\n\ttop: 1em;\n\tleft: -5px;\n\tmargin-top: -5px;\n\tborder-right-color: rgba(0, 0, 0, 0.8);\n\tborder-left-width: 0;\n}\n.rickshaw_graph .detail .item.right:after {\n\ttop: 1em;\n\tright: -5px;\n\tmargin-top: -5px;\n\tborder-left-color: rgba(0, 0, 0, 0.8);\n\tborder-right-width: 0;\n}\n.rickshaw_graph .detail .dot {\n\twidth: 4px;\n\theight: 4px;\n\tmargin-left: -3px;\n\tmargin-top: -3.5px;\n\tborder-radius: 5px;\n\tposition: absolute;\n\tbox-shadow: 0 0 2px rgba(0, 0, 0, 0.6);\n\tbox-sizing: content-box;\n\t-moz-box-sizing: content-box;\n\tbackground: white;\n\tborder-width: 2px;\n\tborder-style: solid;\n\tdisplay: none;\n\tbackground-clip: padding-box;\n}\n.rickshaw_graph .detail .dot.active {\n\tdisplay: block;\n}\n/* graph */\n\n.rickshaw_graph {\n\tposition: relative;\n}\n.rickshaw_graph svg {\n\tdisplay: block;\t\n\toverflow: hidden;\n}\n\n/* ticks */\n\n.rickshaw_graph .x_tick {\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\twidth: 0px;\n\tborder-left: 1px dotted rgba(0, 0, 0, 0.2);\n\tpointer-events: none;\n}\n.rickshaw_graph .x_tick .title {\n\tposition: absolute;\n\tfont-size: 12px;\n\tfont-family: Arial, sans-serif;\n\topacity: 0.5;\n\twhite-space: nowrap;\n\tmargin-left: 3px;\n\tbottom: 1px;\n}\n\n/* annotations */\n\n.rickshaw_annotation_timeline {\n\theight: 1px;\n\tborder-top: 1px solid #e0e0e0;\n\tmargin-top: 10px;\n\tposition: relative;\n}\n.rickshaw_annotation_timeline .annotation {\n\tposition: absolute;\n\theight: 6px;\n\twidth: 6px;\n\tmargin-left: -2px;\n\ttop: -3px;\n\tborder-radius: 5px;\n\tbackground-color: rgba(0, 0, 0, 0.25);\n}\n.rickshaw_graph .annotation_line {\n\tposition: absolute;\n\ttop: 0;\n\tbottom: -6px;\n\twidth: 0px;\n\tborder-left: 2px solid rgba(0, 0, 0, 0.3);\n\tdisplay: none;\n}\n.rickshaw_graph .annotation_line.active {\n\tdisplay: block;\n}\n\n.rickshaw_graph .annotation_range {\n        background: rgba(0, 0, 0, 0.1);\n        display: none;\n        position: absolute;\n        top: 0;\n        bottom: -6px;\n}\n.rickshaw_graph .annotation_range.active {\n        display: block;\n}\n.rickshaw_graph .annotation_range.active.offscreen {\n        display: none;\n}\n\n.rickshaw_annotation_timeline .annotation .content {\n\tbackground: white;\n\tcolor: black;\n\topacity: 0.9;\n\tpadding: 5px 5px;\n\tbox-shadow: 0 0 2px rgba(0, 0, 0, 0.8);\n\tborder-radius: 3px;\n\tposition: relative;\n\tz-index: 20;\n\tfont-size: 12px;\n\tpadding: 6px 8px 8px;\n\ttop: 18px;\n\tleft: -11px;\n\twidth: 160px;\n\tdisplay: none;\n\tcursor: pointer;\n}\n.rickshaw_annotation_timeline .annotation .content:before {\n\tcontent: \"\\25b2\";\n\tposition: absolute;\n\ttop: -11px;\n\tcolor: white;\n\ttext-shadow: 0 -1px 1px rgba(0, 0, 0, 0.8);\n}\n.rickshaw_annotation_timeline .annotation.active,\n.rickshaw_annotation_timeline .annotation:hover {\n\tbackground-color: rgba(0, 0, 0, 0.8);\n\tcursor: none;\n}\n.rickshaw_annotation_timeline .annotation .content:hover {\n\tz-index: 50;\n}\n.rickshaw_annotation_timeline .annotation.active .content {\n\tdisplay: block;\n}\n.rickshaw_annotation_timeline .annotation:hover .content {\n\tdisplay: block;\n\tz-index: 50;\n}\n.rickshaw_graph .y_axis,\n.rickshaw_graph  .x_axis_d3 {\n\tfill: none;\n}\n.rickshaw_graph .y_ticks .tick line,\n.rickshaw_graph .x_ticks_d3 .tick {\n\tstroke: rgba(0, 0, 0, 0.16);\n\tstroke-width: 2px;\n\tshape-rendering: crisp-edges;\n\tpointer-events: none;\n}\n.rickshaw_graph .y_grid .tick,\n.rickshaw_graph .x_grid_d3 .tick {\n\tz-index: -1;\n\tstroke: rgba(0, 0, 0, 0.20);\n\tstroke-width: 1px;\n\tstroke-dasharray: 1 1;\n}\n.rickshaw_graph .y_grid .tick[data-y-value=\"0\"] {\n\tstroke-dasharray: 1 0;\n}\n.rickshaw_graph .y_grid path,\n.rickshaw_graph .x_grid_d3 path  {\n\tfill: none;\n\tstroke: none;\n}\n.rickshaw_graph .y_ticks path,\n.rickshaw_graph .x_ticks_d3 path {\n\tfill: none;\n\tstroke: #808080;\n}\n.rickshaw_graph .y_ticks text,\n.rickshaw_graph .x_ticks_d3 text {\n\topacity: 0.5;\n\tfont-size: 12px;\n\tpointer-events: none;\n}\n.rickshaw_graph .x_tick.glow .title,\n.rickshaw_graph .y_ticks.glow text {\n\tfill: black;\n\tcolor: black;\n\ttext-shadow: \n\t\t-1px 1px 0 rgba(255, 255, 255, 0.1),\n\t\t1px -1px 0 rgba(255, 255, 255, 0.1),\n\t\t1px 1px 0 rgba(255, 255, 255, 0.1),\n\t\t0px 1px 0 rgba(255, 255, 255, 0.1),\n\t\t0px -1px 0 rgba(255, 255, 255, 0.1),\n\t\t1px 0px 0 rgba(255, 255, 255, 0.1),\n\t\t-1px 0px 0 rgba(255, 255, 255, 0.1),\n\t\t-1px -1px 0 rgba(255, 255, 255, 0.1);\n}\n.rickshaw_graph .x_tick.inverse .title,\n.rickshaw_graph .y_ticks.inverse text {\n\tfill: white;\n\tcolor: white;\n\ttext-shadow: \n\t\t-1px 1px 0 rgba(0, 0, 0, 0.8),\n\t\t1px -1px 0 rgba(0, 0, 0, 0.8),\n\t\t1px 1px 0 rgba(0, 0, 0, 0.8),\n\t\t0px 1px 0 rgba(0, 0, 0, 0.8),\n\t\t0px -1px 0 rgba(0, 0, 0, 0.8),\n\t\t1px 0px 0 rgba(0, 0, 0, 0.8),\n\t\t-1px 0px 0 rgba(0, 0, 0, 0.8),\n\t\t-1px -1px 0 rgba(0, 0, 0, 0.8);\n}\n.rickshaw_legend {\n\tfont-family: Arial;\n\tfont-size: 12px;\n\tcolor: white;\n\tbackground: #404040;\n\tdisplay: inline-block;\n\tpadding: 12px 5px; \n\tborder-radius: 2px;\n\tposition: relative;\n}\n.rickshaw_legend:hover {\n\tz-index: 10;\n}\n.rickshaw_legend .swatch {\n\twidth: 10px;\n\theight: 10px;\n\tborder: 1px solid rgba(0, 0, 0, 0.2);\n}\n.rickshaw_legend .line {\n\tclear: both;\n\tline-height: 140%;\n\tpadding-right: 15px;\n}\n.rickshaw_legend .line .swatch {\n\tdisplay: inline-block;\n\tmargin-right: 3px;\n\tborder-radius: 2px;\n}\n.rickshaw_legend .label {\n\tmargin: 0;\n\twhite-space: nowrap;\n\tdisplay: inline;\n\tfont-size: inherit;\n\tbackground-color: transparent;\n\tcolor: inherit;\n\tfont-weight: normal;\n\tline-height: normal;\n\tpadding: 0px;\n\ttext-shadow: none;\n}\n.rickshaw_legend .action:hover {\n\topacity: 0.6;\n}\n.rickshaw_legend .action {\n\tmargin-right: 0.2em;\n\tfont-size: 10px;\n\topacity: 0.2;\n\tcursor: pointer;\n\tfont-size: 14px;\n}\n.rickshaw_legend .line.disabled {\n\topacity: 0.4;\n}\n.rickshaw_legend ul {\n\tlist-style-type: none;\n\tmargin: 0;\n\tpadding: 0;\n\tmargin: 2px;\n\tcursor: pointer;\n}\n.rickshaw_legend li {\n\tpadding: 0 0 0 2px;\n\tmin-width: 80px;\n\twhite-space: nowrap;\n}\n.rickshaw_legend li:hover {\n\tbackground: rgba(255, 255, 255, 0.08);\n\tborder-radius: 3px;\n}\n.rickshaw_legend li:active {\n\tbackground: rgba(255, 255, 255, 0.2);\n\tborder-radius: 3px;\n}\n"
        },
        {
          "name": "rickshaw.js",
          "type": "blob",
          "size": 105.48046875,
          "content": "(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['d3'], function (d3) {\n            return (root.Rickshaw = factory(d3));\n        });\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('d3'));\n    } else {\n        root.Rickshaw = factory(d3);\n    }\n}(this, function (d3) {\n/* jshint -W079 */\n\nvar Rickshaw = {\n\tversion: '1.7.1',\n\n\tnamespace: function(namespace, obj) {\n\n\t\tvar parts = namespace.split('.');\n\n\t\tvar parent = Rickshaw;\n\n\t\tfor(var i = 1, length = parts.length; i < length; i++) {\n\t\t\tvar currentPart = parts[i];\n\t\t\tparent[currentPart] = parent[currentPart] || {};\n\t\t\tparent = parent[currentPart];\n\t\t}\n\t\treturn parent;\n\t},\n\n\tkeys: function(obj) {\n\t\tvar keys = [];\n\t\tfor (var key in obj) keys.push(key);\n\t\treturn keys;\n\t},\n\n\textend: function(destination, source) {\n\n\t\tfor (var property in source) {\n\t\t\tdestination[property] = source[property];\n\t\t}\n\t\treturn destination;\n\t},\n\n\tclone: function(obj) {\n\t\treturn JSON.parse(JSON.stringify(obj));\n\t}\n};\n/* Adapted from https://github.com/Jakobo/PTClass */\n\n/*\nCopyright (c) 2005-2010 Sam Stephenson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n/* Based on Alex Arnell's inheritance implementation. */\n/** section: Language\n * class Class\n *\n *  Manages Prototype's class-based OOP system.\n *\n *  Refer to Prototype's web site for a [tutorial on classes and\n *  inheritance](http://prototypejs.org/learn/class-inheritance).\n**/\n(function(globalContext) {\n/* ------------------------------------ */\n/* Import from object.js                */\n/* ------------------------------------ */\nvar _toString = Object.prototype.toString,\n    NULL_TYPE = 'Null',\n    UNDEFINED_TYPE = 'Undefined',\n    BOOLEAN_TYPE = 'Boolean',\n    NUMBER_TYPE = 'Number',\n    STRING_TYPE = 'String',\n    OBJECT_TYPE = 'Object',\n    FUNCTION_CLASS = '[object Function]';\nfunction isFunction(object) {\n  return _toString.call(object) === FUNCTION_CLASS;\n}\nfunction extend(destination, source) {\n  for (var property in source) if (source.hasOwnProperty(property)) // modify protect primitive slaughter\n    destination[property] = source[property];\n  return destination;\n}\nfunction keys(object) {\n  if (Type(object) !== OBJECT_TYPE) { throw new TypeError(); }\n  var results = [];\n  for (var property in object) {\n    if (object.hasOwnProperty(property)) {\n      results.push(property);\n    }\n  }\n  return results;\n}\nfunction Type(o) {\n  switch(o) {\n    case null: return NULL_TYPE;\n    case (void 0): return UNDEFINED_TYPE;\n  }\n  var type = typeof o;\n  switch(type) {\n    case 'boolean': return BOOLEAN_TYPE;\n    case 'number':  return NUMBER_TYPE;\n    case 'string':  return STRING_TYPE;\n  }\n  return OBJECT_TYPE;\n}\nfunction isUndefined(object) {\n  return typeof object === \"undefined\";\n}\n/* ------------------------------------ */\n/* Import from Function.js              */\n/* ------------------------------------ */\nvar slice = Array.prototype.slice;\nfunction argumentNames(fn) {\n  var names = fn.toString().match(/^[\\s\\(]*function[^(]*\\(([^)]*)\\)/)[1]\n    .replace(/\\/\\/.*?[\\r\\n]|\\/\\*(?:.|[\\r\\n])*?\\*\\//g, '')\n    .replace(/\\s+/g, '').split(',');\n  return names.length == 1 && !names[0] ? [] : names;\n}\nfunction wrap(fn, wrapper) {\n  var __method = fn;\n  return function() {\n    var a = update([bind(__method, this)], arguments);\n    return wrapper.apply(this, a);\n  }\n}\nfunction update(array, args) {\n  var arrayLength = array.length, length = args.length;\n  while (length--) array[arrayLength + length] = args[length];\n  return array;\n}\nfunction merge(array, args) {\n  array = slice.call(array, 0);\n  return update(array, args);\n}\nfunction bind(fn, context) {\n  if (arguments.length < 2 && isUndefined(arguments[0])) return this;\n  var __method = fn, args = slice.call(arguments, 2);\n  return function() {\n    var a = merge(args, arguments);\n    return __method.apply(context, a);\n  }\n}\n\n/* ------------------------------------ */\n/* Import from Prototype.js             */\n/* ------------------------------------ */\nvar emptyFunction = function(){};\n\nvar Class = (function() {\n  \n  // Some versions of JScript fail to enumerate over properties, names of which \n  // correspond to non-enumerable properties in the prototype chain\n  var IS_DONTENUM_BUGGY = (function(){\n    for (var p in { toString: 1 }) {\n      // check actual property name, so that it works with augmented Object.prototype\n      if (p === 'toString') return false;\n    }\n    return true;\n  })();\n  \n  function subclass() {};\n  function create() {\n    var parent = null, properties = [].slice.apply(arguments);\n    if (isFunction(properties[0]))\n      parent = properties.shift();\n\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    extend(klass, Class.Methods);\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      subclass.prototype = parent.prototype;\n      klass.prototype = new subclass;\n      try { parent.subclasses.push(klass) } catch(e) {}\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++)\n      klass.addMethods(properties[i]);\n\n    if (!klass.prototype.initialize)\n      klass.prototype.initialize = emptyFunction;\n\n    klass.prototype.constructor = klass;\n    return klass;\n  }\n\n  function addMethods(source) {\n    var ancestor   = this.superclass && this.superclass.prototype,\n        properties = keys(source);\n\n    // IE6 doesn't enumerate `toString` and `valueOf` (among other built-in `Object.prototype`) properties,\n    // Force copy if they're not Object.prototype ones.\n    // Do not copy other Object.prototype.* for performance reasons\n    if (IS_DONTENUM_BUGGY) {\n      if (source.toString != Object.prototype.toString)\n        properties.push(\"toString\");\n      if (source.valueOf != Object.prototype.valueOf)\n        properties.push(\"valueOf\");\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++) {\n      var property = properties[i], value = source[property];\n      if (ancestor && isFunction(value) &&\n          argumentNames(value)[0] == \"$super\") {\n        var method = value;\n        value = wrap((function(m) {\n          return function() { return ancestor[m].apply(this, arguments); };\n        })(property), method);\n\n        value.valueOf = bind(method.valueOf, method);\n        value.toString = bind(method.toString, method);\n      }\n      this.prototype[property] = value;\n    }\n\n    return this;\n  }\n\n  return {\n    create: create,\n    Methods: {\n      addMethods: addMethods\n    }\n  };\n})();\n\nif (globalContext.exports) {\n  globalContext.exports.Class = Class;\n}\nelse {\n  globalContext.Class = Class;\n}\n})(Rickshaw);\nRickshaw.namespace('Rickshaw.Compat.ClassList');\n\nRickshaw.Compat.ClassList = function() {\n\n\t/* adapted from http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\n\tif (typeof document !== \"undefined\" && !(\"classList\" in document.createElement(\"a\"))) {\n\n\t(function (view) {\n\n\t\"use strict\";\n\n\tvar\n\t\t  classListProp = \"classList\"\n\t\t, protoProp = \"prototype\"\n\t\t, elemCtrProto = (view.HTMLElement || view.Element)[protoProp]\n\t\t, objCtr = Object\n\t\t, strTrim = String[protoProp].trim || function () {\n\t\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t\t}\n\t\t, arrIndexOf = Array[protoProp].indexOf || function (item) {\n\t\t\tvar\n\t\t\t\t  i = 0\n\t\t\t\t, len = this.length\n\t\t\t;\n\t\t\tfor (; i < len; i++) {\n\t\t\t\tif (i in this && this[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t\t// Vendors: please allow content code to instantiate DOMExceptions\n\t\t, DOMEx = function (type, message) {\n\t\t\tthis.name = type;\n\t\t\tthis.code = DOMException[type];\n\t\t\tthis.message = message;\n\t\t}\n\t\t, checkTokenAndGetIndex = function (classList, token) {\n\t\t\tif (token === \"\") {\n\t\t\t\tthrow new DOMEx(\n\t\t\t\t\t  \"SYNTAX_ERR\"\n\t\t\t\t\t, \"An invalid or illegal string was specified\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (/\\s/.test(token)) {\n\t\t\t\tthrow new DOMEx(\n\t\t\t\t\t  \"INVALID_CHARACTER_ERR\"\n\t\t\t\t\t, \"String contains an invalid character\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn arrIndexOf.call(classList, token);\n\t\t}\n\t\t, ClassList = function (elem) {\n\t\t\tvar\n\t\t\t\t  trimmedClasses = strTrim.call(elem.className)\n\t\t\t\t, classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n\t\t\t\t, i = 0\n\t\t\t\t, len = classes.length\n\t\t\t;\n\t\t\tfor (; i < len; i++) {\n\t\t\t\tthis.push(classes[i]);\n\t\t\t}\n\t\t\tthis._updateClassName = function () {\n\t\t\t\telem.className = this.toString();\n\t\t\t};\n\t\t}\n\t\t, classListProto = ClassList[protoProp] = []\n\t\t, classListGetter = function () {\n\t\t\treturn new ClassList(this);\n\t\t}\n\t;\n\t// Most DOMException implementations don't allow calling DOMException's toString()\n\t// on non-DOMExceptions. Error's toString() is sufficient here.\n\tDOMEx[protoProp] = Error[protoProp];\n\tclassListProto.item = function (i) {\n\t\treturn this[i] || null;\n\t};\n\tclassListProto.contains = function (token) {\n\t\ttoken += \"\";\n\t\treturn checkTokenAndGetIndex(this, token) !== -1;\n\t};\n\tclassListProto.add = function (token) {\n\t\ttoken += \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.push(token);\n\t\t\tthis._updateClassName();\n\t\t}\n\t};\n\tclassListProto.remove = function (token) {\n\t\ttoken += \"\";\n\t\tvar index = checkTokenAndGetIndex(this, token);\n\t\tif (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tthis._updateClassName();\n\t\t}\n\t};\n\tclassListProto.toggle = function (token) {\n\t\ttoken += \"\";\n\t\tif (checkTokenAndGetIndex(this, token) === -1) {\n\t\t\tthis.add(token);\n\t\t} else {\n\t\t\tthis.remove(token);\n\t\t}\n\t};\n\tclassListProto.toString = function () {\n\t\treturn this.join(\" \");\n\t};\n\n\tif (objCtr.defineProperty) {\n\t\tvar classListPropDesc = {\n\t\t\t  get: classListGetter\n\t\t\t, enumerable: true\n\t\t\t, configurable: true\n\t\t};\n\t\ttry {\n\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t} catch (ex) { // IE 8 doesn't support enumerable:true\n\t\t\tif (ex.number === -0x7FF5EC54) {\n\t\t\t\tclassListPropDesc.enumerable = false;\n\t\t\t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n\t\t\t}\n\t\t}\n\t} else if (objCtr[protoProp].__defineGetter__) {\n\t\telemCtrProto.__defineGetter__(classListProp, classListGetter);\n\t}\n\n\t}(window));\n\n\t}\n};\n\nif ( (typeof RICKSHAW_NO_COMPAT !== \"undefined\" && !RICKSHAW_NO_COMPAT) || typeof RICKSHAW_NO_COMPAT === \"undefined\") {\n\tnew Rickshaw.Compat.ClassList();\n}\nRickshaw.namespace('Rickshaw.Graph');\n\nRickshaw.Graph = function(args) {\n\n\tvar self = this;\n\n\tthis.initialize = function(args) {\n\n\t\tif (!args.element) throw \"Rickshaw.Graph needs a reference to an element\";\n\t\tif (args.element.nodeType !== 1) throw \"Rickshaw.Graph element was defined but not an HTML element\";\n\n\t\tthis.element = args.element;\n\t\tthis.series = args.series;\n\t\tthis.window = {};\n\n\t\tthis.updateCallbacks = [];\n\t\tthis.configureCallbacks = [];\n\n\t\tthis.defaults = {\n\t\t\tinterpolation: 'cardinal',\n\t\t\toffset: 'zero',\n\t\t\tmin: undefined,\n\t\t\tmax: undefined,\n\t\t\tpreserve: false,\n\t\t\txScale: undefined,\n\t\t\tyScale: undefined,\n\t\t\tstack: true\n\t\t};\n\n\t\tthis._loadRenderers();\n\t\tthis.configure(args);\n\t\tthis.setSeries(args.series);\n\n\t\tthis.setSize({ width: args.width, height: args.height });\n\t\tthis.element.classList.add('rickshaw_graph');\n\n\t\tthis.vis = d3.select(this.element)\n\t\t\t.append(\"svg:svg\")\n\t\t\t.attr('width', this.width)\n\t\t\t.attr('height', this.height);\n\n\t\tthis.discoverRange();\n\t};\n\n\tthis._loadRenderers = function() {\n\n\t\tfor (var name in Rickshaw.Graph.Renderer) {\n\t\t\tif (!name || !Rickshaw.Graph.Renderer.hasOwnProperty(name)) continue;\n\t\t\tvar r = Rickshaw.Graph.Renderer[name];\n\t\t\tif (!r || !r.prototype || !r.prototype.render) continue;\n\t\t\tself.registerRenderer(new r( { graph: self } ));\n\t\t}\n\t};\n\n\tthis.validateSeries = function(series) {\n\n\t\tif (!Array.isArray(series) && !(series instanceof Rickshaw.Series)) {\n\t\t\tvar seriesSignature = Object.prototype.toString.apply(series);\n\t\t\tthrow \"series is not an array: \" + seriesSignature;\n\t\t}\n\n\t\tvar pointsCount;\n\n\t\tseries.forEach( function(s) {\n\n\t\t\tif (!(s instanceof Object)) {\n\t\t\t\tthrow \"series element is not an object: \" + s;\n\t\t\t}\n\t\t\tif (!(s.data)) {\n\t\t\t\tthrow \"series has no data: \" + JSON.stringify(s);\n\t\t\t}\n\t\t\tif (!Array.isArray(s.data)) {\n\t\t\t\tthrow \"series data is not an array: \" + JSON.stringify(s.data);\n\t\t\t}\n\n\t\t\tif (s.data.length > 0) {\n\t\t\t\tvar x = s.data[0].x;\n\t\t\t\tvar y = s.data[0].y;\n\n\t\t\t\tif (typeof x != 'number' || ( typeof y != 'number' && y !== null ) ) {\n\t\t\t\t\tthrow \"x and y properties of points should be numbers instead of \" +\n\t\t\t\t\t\t(typeof x) + \" and \" + (typeof y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (s.data.length >= 3) {\n\t\t\t\t// probe to sanity check sort order\n\t\t\t\tif (s.data[2].x < s.data[1].x || s.data[1].x < s.data[0].x || s.data[s.data.length - 1].x < s.data[0].x) {\n\t\t\t\t\tthrow \"series data needs to be sorted on x values for series name: \" + s.name;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}, this );\n\t};\n\n\tthis.setSeries = function(series) {\n\t\tthis.validateSeries(series);\n\t\tthis.series = series;\n\t\tthis.series.active = function() { return self.series.filter( function(s) { return !s.disabled } ) };\n\t};\n\n\tthis.dataDomain = function() {\n\n\t\tvar data = this.series.map( function(s) { return s.data } );\n\n\t\tvar min = d3.min( data.map( function(d) { return d[0].x } ) );\n\t\tvar max = d3.max( data.map( function(d) { return d[d.length - 1].x } ) );\n\n\t\treturn [min, max];\n\t};\n\n\tthis.discoverRange = function() {\n\n\t\tvar domain = this.renderer.domain();\n\n\t\t// this.*Scale is coming from the configuration dictionary\n\t\t// which may be referenced by the Graph creator, or shared\n\t\t// with other Graphs. We need to ensure we copy the scale\n\t\t// so that our mutations do not change the object given to us.\n\t\t// Hence the .copy()\n\t\tthis.x = (this.xScale || d3.scale.linear()).copy().domain(domain.x).range([0, this.width]);\n\t\tthis.y = (this.yScale || d3.scale.linear()).copy().domain(domain.y).range([this.height, 0]);\n\n\t\tthis.x.magnitude = d3.scale.linear()\n\t\t\t.domain([domain.x[0] - domain.x[0], domain.x[1] - domain.x[0]])\n\t\t\t.range([0, this.width]);\n\n\t\tthis.y.magnitude = d3.scale.linear()\n\t\t\t.domain([domain.y[0] - domain.y[0], domain.y[1] - domain.y[0]])\n\t\t\t.range([0, this.height]);\n\t};\n\n\tthis.render = function() {\n\n\t\tvar stackedData = this.stackData();\n\t\tthis.discoverRange();\n\n\t\tthis.renderer.render();\n\n\t\tthis.updateCallbacks.forEach( function(callback) {\n\t\t\tcallback();\n\t\t} );\n\n\t};\n\n\tthis.update = this.render;\n\n\tthis.stackData = function() {\n\n\t\tvar data = this.series.active()\n\t\t\t.map( function(d) { return d.data } )\n\t\t\t.map( function(d) { return d.filter( function(d) { return this._slice(d) }, this ) }, this);\n\n\t\tvar preserve = this.preserve;\n\t\tif (!preserve) {\n\t\t\tthis.series.forEach( function(series) {\n\t\t\t\tif (series.scale) {\n\t\t\t\t\t// data must be preserved when a scale is used\n\t\t\t\t\tpreserve = true;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tdata = preserve ? Rickshaw.clone(data) : data;\n\n\t\tthis.series.active().forEach( function(series, index) {\n\t\t\tif (series.scale) {\n\t\t\t\t// apply scale to each series\n\t\t\t\tvar seriesData = data[index];\n\t\t\t\tif(seriesData) {\n\t\t\t\t\tseriesData.forEach( function(d) {\n\t\t\t\t\t\td.y = series.scale(d.y);\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.stackData.hooks.data.forEach( function(entry) {\n\t\t\tdata = entry.f.apply(self, [data]);\n\t\t} );\n\n\t\tvar stackedData;\n\n\t\tif (!this.renderer.unstack) {\n\n\t\t\tthis._validateStackable();\n\n\t\t\tvar layout = d3.layout.stack();\n\t\t\tlayout.offset( self.offset );\n\t\t\tstackedData = layout(data);\n\t\t}\n\n\t\tstackedData = stackedData || data;\n\n\t\tif (this.renderer.unstack) {\n\t\t\tstackedData.forEach( function(seriesData) {\n\t\t\t\tseriesData.forEach( function(d) {\n\t\t\t\t\td.y0 = d.y0 === undefined ? 0 : d.y0;\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\tthis.stackData.hooks.after.forEach( function(entry) {\n\t\t\tstackedData = entry.f.apply(self, [data]);\n\t\t} );\n\n\t\tvar i = 0;\n\t\tthis.series.forEach( function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.stack = stackedData[i++];\n\t\t} );\n\n\t\tthis.stackedData = stackedData;\n\t\treturn stackedData;\n\t};\n\n\tthis._validateStackable = function() {\n\n\t\tvar series = this.series;\n\t\tvar pointsCount;\n\n\t\tseries.forEach( function(s) {\n\n\t\t\tpointsCount = pointsCount || s.data.length;\n\n\t\t\tif (pointsCount && s.data.length != pointsCount) {\n\t\t\t\tthrow \"stacked series cannot have differing numbers of points: \" +\n\t\t\t\t\tpointsCount + \" vs \" + s.data.length + \"; see Rickshaw.Series.fill()\";\n\t\t\t}\n\n\t\t}, this );\n\t};\n\n\tthis.stackData.hooks = { data: [], after: [] };\n\n\tthis._slice = function(d) {\n\n\t\tif (this.window.xMin || this.window.xMax) {\n\n\t\t\tvar isInRange = true;\n\n\t\t\tif (this.window.xMin && d.x < this.window.xMin) isInRange = false;\n\t\t\tif (this.window.xMax && d.x > this.window.xMax) isInRange = false;\n\n\t\t\treturn isInRange;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tthis.onUpdate = function(callback) {\n\t\tthis.updateCallbacks.push(callback);\n\t};\n\n\tthis.onConfigure = function(callback) {\n\t\tthis.configureCallbacks.push(callback);\n\t};\n\n\tthis.registerRenderer = function(renderer) {\n\t\tthis._renderers = this._renderers || {};\n\t\tthis._renderers[renderer.name] = renderer;\n\t};\n\n\tthis.configure = function(args) {\n\n\t\tthis.config = this.config || {};\n\n\t\tif (args.width || args.height) {\n\t\t\tthis.setSize(args);\n\t\t}\n\n\t\tRickshaw.keys(this.defaults).forEach( function(k) {\n\t\t\tthis.config[k] = k in args ? args[k]\n\t\t\t\t: k in this ? this[k]\n\t\t\t\t: this.defaults[k];\n\t\t}, this );\n\n\t\tRickshaw.keys(this.config).forEach( function(k) {\n\t\t\tthis[k] = this.config[k];\n\t\t}, this );\n\n\t\tif ('stack' in args) args.unstack = !args.stack;\n\n\t\tvar renderer = args.renderer || (this.renderer && this.renderer.name) || 'stack';\n\t\tthis.setRenderer(renderer, args);\n\n\t\tthis.configureCallbacks.forEach( function(callback) {\n\t\t\tcallback(args);\n\t\t} );\n\t};\n\n\tthis.setRenderer = function(r, args) {\n\t\tif (typeof r == 'function') {\n\t\t\tthis.renderer = new r( { graph: self } );\n\t\t\tthis.registerRenderer(this.renderer);\n\t\t} else {\n\t\t\tif (!this._renderers[r]) {\n\t\t\t\tthrow \"couldn't find renderer \" + r;\n\t\t\t}\n\t\t\tthis.renderer = this._renderers[r];\n\t\t}\n\n\t\tif (typeof args == 'object') {\n\t\t\tthis.renderer.configure(args);\n\t\t}\n\t};\n\n\tthis.setSize = function(args) {\n\n\t\targs = args || {};\n\n\t\tif (args.width && args.height) {\n\t\t\t// use explicitly specified size\n\t\t\tthis.width = args.width;\n\t\t\tthis.height = args.height;\n\t\t} else {\n\t\t\t// calc size (will cause layout reflow)\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tvar style = window.getComputedStyle(this.element, null);\n\t\t\t\tvar elementWidth = parseInt(style.getPropertyValue('width'), 10);\n\t\t\t\tvar elementHeight = parseInt(style.getPropertyValue('height'), 10);\n\t\t\t}\n\n\t\t\tthis.width = args.width || elementWidth || 400;\n\t\t\tthis.height = args.height || elementHeight || 250;\n\t\t}\n\n\t\tthis.vis && this.vis\n\t\t\t.attr('width', this.width)\n\t\t\t.attr('height', this.height);\n\t};\n\n\tthis.initialize(args);\n};\nRickshaw.namespace('Rickshaw.Fixtures.Color');\n\nRickshaw.Fixtures.Color = function() {\n\n\tthis.schemes = {};\n\n\tthis.schemes.spectrum14 = [\n\t\t'#ecb796',\n\t\t'#dc8f70',\n\t\t'#b2a470',\n\t\t'#92875a',\n\t\t'#716c49',\n\t\t'#d2ed82',\n\t\t'#bbe468',\n\t\t'#a1d05d',\n\t\t'#e7cbe6',\n\t\t'#d8aad6',\n\t\t'#a888c2',\n\t\t'#9dc2d3',\n\t\t'#649eb9',\n\t\t'#387aa3'\n\t].reverse();\n\n\tthis.schemes.spectrum2000 = [\n\t\t'#57306f',\n\t\t'#514c76',\n\t\t'#646583',\n\t\t'#738394',\n\t\t'#6b9c7d',\n\t\t'#84b665',\n\t\t'#a7ca50',\n\t\t'#bfe746',\n\t\t'#e2f528',\n\t\t'#fff726',\n\t\t'#ecdd00',\n\t\t'#d4b11d',\n\t\t'#de8800',\n\t\t'#de4800',\n\t\t'#c91515',\n\t\t'#9a0000',\n\t\t'#7b0429',\n\t\t'#580839',\n\t\t'#31082b'\n\t];\n\n\tthis.schemes.spectrum2001 = [\n\t\t'#2f243f',\n\t\t'#3c2c55',\n\t\t'#4a3768',\n\t\t'#565270',\n\t\t'#6b6b7c',\n\t\t'#72957f',\n\t\t'#86ad6e',\n\t\t'#a1bc5e',\n\t\t'#b8d954',\n\t\t'#d3e04e',\n\t\t'#ccad2a',\n\t\t'#cc8412',\n\t\t'#c1521d',\n\t\t'#ad3821',\n\t\t'#8a1010',\n\t\t'#681717',\n\t\t'#531e1e',\n\t\t'#3d1818',\n\t\t'#320a1b'\n\t];\n\n\tthis.schemes.classic9 = [\n\t\t'#423d4f',\n\t\t'#4a6860',\n\t\t'#848f39',\n\t\t'#a2b73c',\n\t\t'#ddcb53',\n\t\t'#c5a32f',\n\t\t'#7d5836',\n\t\t'#963b20',\n\t\t'#7c2626',\n\t\t'#491d37',\n\t\t'#2f254a'\n\t].reverse();\n\n\tthis.schemes.httpStatus = {\n\t\t503: '#ea5029',\n\t\t502: '#d23f14',\n\t\t500: '#bf3613',\n\t\t410: '#efacea',\n\t\t409: '#e291dc',\n\t\t403: '#f457e8',\n\t\t408: '#e121d2',\n\t\t401: '#b92dae',\n\t\t405: '#f47ceb',\n\t\t404: '#a82a9f',\n\t\t400: '#b263c6',\n\t\t301: '#6fa024',\n\t\t302: '#87c32b',\n\t\t307: '#a0d84c',\n\t\t304: '#28b55c',\n\t\t200: '#1a4f74',\n\t\t206: '#27839f',\n\t\t201: '#52adc9',\n\t\t202: '#7c979f',\n\t\t203: '#a5b8bd',\n\t\t204: '#c1cdd1'\n\t};\n\n\tthis.schemes.colorwheel = [\n\t\t'#b5b6a9',\n\t\t'#858772',\n\t\t'#785f43',\n\t\t'#96557e',\n\t\t'#4682b4',\n\t\t'#65b9ac',\n\t\t'#73c03a',\n\t\t'#cb513a'\n\t].reverse();\n\n\tthis.schemes.cool = [\n\t\t'#5e9d2f',\n\t\t'#73c03a',\n\t\t'#4682b4',\n\t\t'#7bc3b8',\n\t\t'#a9884e',\n\t\t'#c1b266',\n\t\t'#a47493',\n\t\t'#c09fb5'\n\t];\n\n\tthis.schemes.munin = [\n\t\t'#00cc00',\n\t\t'#0066b3',\n\t\t'#ff8000',\n\t\t'#ffcc00',\n\t\t'#330099',\n\t\t'#990099',\n\t\t'#ccff00',\n\t\t'#ff0000',\n\t\t'#808080',\n\t\t'#008f00',\n\t\t'#00487d',\n\t\t'#b35a00',\n\t\t'#b38f00',\n\t\t'#6b006b',\n\t\t'#8fb300',\n\t\t'#b30000',\n\t\t'#bebebe',\n\t\t'#80ff80',\n\t\t'#80c9ff',\n\t\t'#ffc080',\n\t\t'#ffe680',\n\t\t'#aa80ff',\n\t\t'#ee00cc',\n\t\t'#ff8080',\n\t\t'#666600',\n\t\t'#ffbfff',\n\t\t'#00ffcc',\n\t\t'#cc6699',\n\t\t'#999900'\n\t];\n};\nRickshaw.namespace('Rickshaw.Fixtures.RandomData');\n\nRickshaw.Fixtures.RandomData = function(timeInterval) {\n\n\tvar addData;\n\ttimeInterval = timeInterval || 1;\n\n\tvar lastRandomValue = 200;\n\n\tvar timeBase = Math.floor(new Date().getTime() / 1000);\n\n\tthis.addData = function(data) {\n\n\t\tvar randomValue = Math.random() * 100 + 15 + lastRandomValue;\n\t\tvar index = data[0].length;\n\n\t\tvar counter = 1;\n\n\t\tdata.forEach( function(series) {\n\t\t\tvar randomVariance = Math.random() * 20;\n\t\t\tvar v = randomValue / 25  + counter++ +\n\t\t\t\t(Math.cos((index * counter * 11) / 960) + 2) * 15 +\n\t\t\t\t(Math.cos(index / 7) + 2) * 7 +\n\t\t\t\t(Math.cos(index / 17) + 2) * 1;\n\n\t\t\tseries.push( { x: (index * timeInterval) + timeBase, y: v + randomVariance } );\n\t\t} );\n\n\t\tlastRandomValue = randomValue * 0.85;\n\t};\n\n\tthis.removeData = function(data) {\n\t\tdata.forEach( function(series) {\n\t\t\tseries.shift();\n\t\t} );\n\t\ttimeBase += timeInterval;\n\t};\n};\n\nRickshaw.namespace('Rickshaw.Fixtures.Time');\n\nRickshaw.Fixtures.Time = function() {\n\n\tvar self = this;\n\n\tthis.months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n\tthis.units = [\n\t\t{\n\t\t\tname: 'decade',\n\t\t\tseconds: 86400 * 365.25 * 10,\n\t\t\tformatter: function(d) { return (parseInt(d.getUTCFullYear() / 10, 10) * 10) }\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tseconds: 86400 * 365.25,\n\t\t\tformatter: function(d) { return d.getUTCFullYear() }\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tseconds: 86400 * 30.5,\n\t\t\tformatter: function(d) { return self.months[d.getUTCMonth()] }\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tseconds: 86400 * 7,\n\t\t\tformatter: function(d) { return self.formatDate(d) }\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tseconds: 86400,\n\t\t\tformatter: function(d) { return d.getUTCDate() }\n\t\t}, {\n\t\t\tname: '6 hour',\n\t\t\tseconds: 3600 * 6,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tseconds: 3600,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: '15 minute',\n\t\t\tseconds: 60 * 15,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tseconds: 60,\n\t\t\tformatter: function(d) { return d.getUTCMinutes() + 'm' }\n\t\t}, {\n\t\t\tname: '15 second',\n\t\t\tseconds: 15,\n\t\t\tformatter: function(d) { return d.getUTCSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tseconds: 1,\n\t\t\tformatter: function(d) { return d.getUTCSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'decisecond',\n\t\t\tseconds: 1/10,\n\t\t\tformatter: function(d) { return d.getUTCMilliseconds() + 'ms' }\n\t\t}, {\n\t\t\tname: 'centisecond',\n\t\t\tseconds: 1/100,\n\t\t\tformatter: function(d) { return d.getUTCMilliseconds() + 'ms' }\n\t\t}\n\t];\n\n\tthis.unit = function(unitName) {\n\t\treturn this.units.filter( function(unit) { return unitName == unit.name } ).shift();\n\t};\n\n\tthis.formatDate = function(d) {\n\t\treturn d3.time.format('%b %e')(d);\n\t};\n\n\tthis.formatTime = function(d) {\n\t\treturn d.toUTCString().match(/(\\d+:\\d+):/)[1];\n\t};\n\n\tthis.ceil = function(time, unit) {\n\n\t\tvar date, floor, year;\n\n\t\tif (unit.name == 'month') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = Date.UTC(date.getUTCFullYear(), date.getUTCMonth()) / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getUTCFullYear();\n\t\t\tvar month = date.getUTCMonth();\n\n\t\t\tif (month == 11) {\n\t\t\t\tmonth = 0;\n\t\t\t\tyear = year + 1;\n\t\t\t} else {\n\t\t\t\tmonth += 1;\n\t\t\t}\n\n\t\t\treturn Date.UTC(year, month) / 1000;\n\t\t}\n\n\t\tif (unit.name == 'year') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = Date.UTC(date.getUTCFullYear(), 0) / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getUTCFullYear() + 1;\n\n\t\t\treturn Date.UTC(year, 0) / 1000;\n\t\t}\n\n\t\treturn Math.ceil(time / unit.seconds) * unit.seconds;\n\t};\n};\nRickshaw.namespace('Rickshaw.Fixtures.Time.Local');\n\nRickshaw.Fixtures.Time.Local = function() {\n\n\tvar self = this;\n\n\tthis.months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n\tthis.units = [\n\t\t{\n\t\t\tname: 'decade',\n\t\t\tseconds: 86400 * 365.25 * 10,\n\t\t\tformatter: function(d) { return (parseInt(d.getFullYear() / 10, 10) * 10) }\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tseconds: 86400 * 365.25,\n\t\t\tformatter: function(d) { return d.getFullYear() }\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tseconds: 86400 * 30.5,\n\t\t\tformatter: function(d) { return self.months[d.getMonth()] }\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tseconds: 86400 * 7,\n\t\t\tformatter: function(d) { return self.formatDate(d) }\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tseconds: 86400,\n\t\t\tformatter: function(d) { return d.getDate() }\n\t\t}, {\n\t\t\tname: '6 hour',\n\t\t\tseconds: 3600 * 6,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tseconds: 3600,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: '15 minute',\n\t\t\tseconds: 60 * 15,\n\t\t\tformatter: function(d) { return self.formatTime(d) }\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tseconds: 60,\n\t\t\tformatter: function(d) { return d.getMinutes() }\n\t\t}, {\n\t\t\tname: '15 second',\n\t\t\tseconds: 15,\n\t\t\tformatter: function(d) { return d.getSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tseconds: 1,\n\t\t\tformatter: function(d) { return d.getSeconds() + 's' }\n\t\t}, {\n\t\t\tname: 'decisecond',\n\t\t\tseconds: 1/10,\n\t\t\tformatter: function(d) { return d.getMilliseconds() + 'ms' }\n\t\t}, {\n\t\t\tname: 'centisecond',\n\t\t\tseconds: 1/100,\n\t\t\tformatter: function(d) { return d.getMilliseconds() + 'ms' }\n\t\t}\n\t];\n\n\tthis.unit = function(unitName) {\n\t\treturn this.units.filter( function(unit) { return unitName == unit.name } ).shift();\n\t};\n\n\tthis.formatDate = function(d) {\n\t\treturn d3.time.format('%b %e')(d);\n\t};\n\n\tthis.formatTime = function(d) {\n\t\treturn d.toString().match(/(\\d+:\\d+):/)[1];\n\t};\n\n\tthis.ceil = function(time, unit) {\n\n\t\tvar date, floor, year, offset;\n\n\t\tif (unit.name == 'day') {\n\n\t\t\tvar nearFuture = new Date((time + unit.seconds - 1) * 1000);\n\n\t\t\tvar rounded = new Date(0);\n\t\t\trounded.setFullYear(nearFuture.getFullYear());\n\t\t\trounded.setMonth(nearFuture.getMonth());\n\t\t\trounded.setDate(nearFuture.getDate());\n\t\t\trounded.setMilliseconds(0);\n\t\t\trounded.setSeconds(0);\n\t\t\trounded.setMinutes(0);\n\t\t\trounded.setHours(0);\n\n\t\t\treturn rounded.getTime() / 1000;\n\t\t}\n\n\t\tif (unit.name == 'month') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = new Date(date.getFullYear(), date.getMonth()).getTime() / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getFullYear();\n\t\t\tvar month = date.getMonth();\n\n\t\t\tif (month == 11) {\n\t\t\t\tmonth = 0;\n\t\t\t\tyear = year + 1;\n\t\t\t} else {\n\t\t\t\tmonth += 1;\n\t\t\t}\n\n\t\t\treturn new Date(year, month).getTime() / 1000;\n\t\t}\n\n\t\tif (unit.name == 'year') {\n\n\t\t\tdate = new Date(time * 1000);\n\n\t\t\tfloor = new Date(date.getUTCFullYear(), 0).getTime() / 1000;\n\t\t\tif (floor == time) return time;\n\n\t\t\tyear = date.getFullYear() + 1;\n\n\t\t\treturn new Date(year, 0).getTime() / 1000;\n\t\t}\n\t\toffset = new Date(time * 1000).getTimezoneOffset() * 60;\n\t\treturn Math.ceil((time - offset) / unit.seconds) * unit.seconds + offset;\n\t};\n};\nRickshaw.namespace('Rickshaw.Fixtures.Number');\n\nRickshaw.Fixtures.Number.formatKMBT = function(y) {\n\tvar abs_y = Math.abs(y);\n\tif (abs_y >= 1000000000000)      { return (y / 1000000000000).toFixed(2) + \"T\" }\n\telse if (abs_y >= 1000000000)    { return (y / 1000000000).toFixed(2) + \"B\" }\n\telse if (abs_y >= 1000000)       { return (y / 1000000).toFixed(2) + \"M\" }\n\telse if (abs_y >= 1000)          { return (y / 1000).toFixed(2) + \"K\" }\n\telse if (abs_y < 1 && abs_y > 0) { return y.toFixed(2) }\n\telse if (abs_y === 0)            { return '0' }\n\telse                             { return y }\n};\n\nRickshaw.Fixtures.Number.formatBase1024KMGTP = function(y) {\n\tvar abs_y = Math.abs(y);\n\tif (abs_y >= 1125899906842624)   { return (y / 1125899906842624).toFixed(2) + \"P\" }\n\telse if (abs_y >= 1099511627776) { return (y / 1099511627776).toFixed(2) + \"T\" }\n\telse if (abs_y >= 1073741824)    { return (y / 1073741824).toFixed(2) + \"G\" }\n\telse if (abs_y >= 1048576)       { return (y / 1048576).toFixed(2) + \"M\" }\n\telse if (abs_y >= 1024)          { return (y / 1024).toFixed(2) + \"K\" }\n\telse if (abs_y < 1 && abs_y > 0) { return y.toFixed(2) }\n\telse if (abs_y === 0)            { return '0' }\n\telse                             { return y }\n};\nRickshaw.namespace(\"Rickshaw.Color.Palette\");\n\nRickshaw.Color.Palette = function(args) {\n\n\tvar color = new Rickshaw.Fixtures.Color();\n\n\targs = args || {};\n\tthis.schemes = {};\n\n\tthis.scheme = color.schemes[args.scheme] || args.scheme || color.schemes.colorwheel;\n\tthis.runningIndex = 0;\n\tthis.generatorIndex = 0;\n\n\tif (args.interpolatedStopCount) {\n\t\tvar schemeCount = this.scheme.length - 1;\n\t\tvar i, j, scheme = [];\n\t\tfor (i = 0; i < schemeCount; i++) {\n\t\t\tscheme.push(this.scheme[i]);\n\t\t\tvar generator = d3.interpolateHsl(this.scheme[i], this.scheme[i + 1]);\n\t\t\tfor (j = 1; j < args.interpolatedStopCount; j++) {\n\t\t\t\tscheme.push(generator((1 / args.interpolatedStopCount) * j));\n\t\t\t}\n\t\t}\n\t\tscheme.push(this.scheme[this.scheme.length - 1]);\n\t\tthis.scheme = scheme;\n\t}\n\tthis.rotateCount = this.scheme.length;\n\n\tthis.color = function(key) {\n\t\treturn this.scheme[key] || this.scheme[this.runningIndex++] || this.interpolateColor() || '#808080';\n\t};\n\n\tthis.interpolateColor = function() {\n\t\tif (!Array.isArray(this.scheme)) return;\n\t\tvar color;\n\t\tif (this.generatorIndex == this.rotateCount * 2 - 1) {\n\t\t\tcolor = d3.interpolateHsl(this.scheme[this.generatorIndex], this.scheme[0])(0.5);\n\t\t\tthis.generatorIndex = 0;\n\t\t\tthis.rotateCount *= 2;\n\t\t} else {\n\t\t\tcolor = d3.interpolateHsl(this.scheme[this.generatorIndex], this.scheme[this.generatorIndex + 1])(0.5);\n\t\t\tthis.generatorIndex++;\n\t\t}\n\t\tthis.scheme.push(color);\n\t\treturn color;\n\t};\n\n};\nRickshaw.namespace('Rickshaw.Graph.Ajax');\n\nRickshaw.Graph.Ajax = Rickshaw.Class.create( {\n\n\tinitialize: function(args) {\n\n\t\tthis.dataURL = args.dataURL;\n\n\t\tthis.onData = args.onData || function(d) { return d };\n\t\tthis.onComplete = args.onComplete || function() {};\n\t\tthis.onError = args.onError || function() {};\n\n\t\tthis.args = args; // pass through to Rickshaw.Graph\n\n\t\tthis.request();\n\t},\n\n\trequest: function() {\n\n\t\tjQuery.ajax( {\n\t\t\turl: this.dataURL,\n\t\t\tdataType: 'json',\n\t\t\tsuccess: this.success.bind(this),\n\t\t\terror: this.error.bind(this)\n\t\t} );\n\t},\n\n\terror: function() {\n\n\t\tconsole.log(\"error loading dataURL: \" + this.dataURL);\n\t\tthis.onError(this);\n\t},\n\n\tsuccess: function(data, status) {\n\n\t\tdata = this.onData(data);\n\t\tthis.args.series = this._splice({ data: data, series: this.args.series });\n\n\t\tthis.graph = this.graph || new Rickshaw.Graph(this.args);\n\t\tthis.graph.render();\n\n\t\tthis.onComplete(this);\n\t},\n\n\t_splice: function(args) {\n\n\t\tvar data = args.data;\n\t\tvar series = args.series;\n\n\t\tif (!args.series) return data;\n\n\t\tseries.forEach( function(s) {\n\n\t\t\tvar seriesKey = s.key || s.name;\n\t\t\tif (!seriesKey) throw \"series needs a key or a name\";\n\n\t\t\tdata.forEach( function(d) {\n\n\t\t\t\tvar dataKey = d.key || d.name;\n\t\t\t\tif (!dataKey) throw \"data needs a key or a name\";\n\n\t\t\t\tif (seriesKey == dataKey) {\n\t\t\t\t\tvar properties = ['color', 'name', 'data'];\n\t\t\t\t\tproperties.forEach( function(p) {\n\t\t\t\t\t\tif (d[p]) s[p] = d[p];\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn series;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Annotate');\n\nRickshaw.Graph.Annotate = function(args) {\n\n\tvar graph = this.graph = args.graph;\n\tthis.elements = { timeline: args.element };\n\t\n\tvar self = this;\n\n\tthis.data = {};\n\n\tthis.elements.timeline.classList.add('rickshaw_annotation_timeline');\n\n\tthis.add = function(time, content, end_time) {\n\t\tself.data[time] = self.data[time] || {'boxes': []};\n\t\tself.data[time].boxes.push({content: content, end: end_time});\n\t};\n\n\tthis.update = function() {\n\n\t\tRickshaw.keys(self.data).forEach( function(time) {\n\n\t\t\tvar annotation = self.data[time];\n\t\t\tvar left = self.graph.x(time);\n\n\t\t\tif (left < 0 || left > self.graph.x.range()[1]) {\n\t\t\t\tif (annotation.element) {\n\t\t\t\t\tannotation.line.classList.add('offscreen');\n\t\t\t\t\tannotation.element.style.display = 'none';\n\t\t\t\t}\n\n\t\t\t\tannotation.boxes.forEach( function(box) {\n\t\t\t\t\tif ( box.rangeElement ) box.rangeElement.classList.add('offscreen');\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!annotation.element) {\n\t\t\t\tvar element = annotation.element = document.createElement('div');\n\t\t\t\telement.classList.add('annotation');\n\t\t\t\tthis.elements.timeline.appendChild(element);\n\t\t\t\telement.addEventListener('click', function(e) {\n\t\t\t\t\telement.classList.toggle('active');\n\t\t\t\t\tannotation.line.classList.toggle('active');\n\t\t\t\t\tannotation.boxes.forEach( function(box) {\n\t\t\t\t\t\tif ( box.rangeElement ) box.rangeElement.classList.toggle('active');\n\t\t\t\t\t});\n\t\t\t\t}, false);\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tannotation.element.style.left = left + 'px';\n\t\t\tannotation.element.style.display = 'block';\n\n\t\t\tannotation.boxes.forEach( function(box) {\n\n\n\t\t\t\tvar element = box.element;\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = box.element = document.createElement('div');\n\t\t\t\t\telement.classList.add('content');\n\t\t\t\t\telement.innerHTML = box.content;\n\t\t\t\t\tannotation.element.appendChild(element);\n\n\t\t\t\t\tannotation.line = document.createElement('div');\n\t\t\t\t\tannotation.line.classList.add('annotation_line');\n\t\t\t\t\tself.graph.element.appendChild(annotation.line);\n\n\t\t\t\t\tif ( box.end ) {\n\t\t\t\t\t\tbox.rangeElement = document.createElement('div');\n\t\t\t\t\t\tbox.rangeElement.classList.add('annotation_range');\n\t\t\t\t\t\tself.graph.element.appendChild(box.rangeElement);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( box.end ) {\n\n\t\t\t\t\tvar annotationRangeStart = left;\n\t\t\t\t\tvar annotationRangeEnd   = Math.min( self.graph.x(box.end), self.graph.x.range()[1] );\n\n\t\t\t\t\t// annotation makes more sense at end\n\t\t\t\t\tif ( annotationRangeStart > annotationRangeEnd ) {\n\t\t\t\t\t\tannotationRangeEnd   = left;\n\t\t\t\t\t\tannotationRangeStart = Math.max( self.graph.x(box.end), self.graph.x.range()[0] );\n\t\t\t\t\t}\n\n\t\t\t\t\tvar annotationRangeWidth = annotationRangeEnd - annotationRangeStart;\n\n\t\t\t\t\tbox.rangeElement.style.left  = annotationRangeStart + 'px';\n\t\t\t\t\tbox.rangeElement.style.width = annotationRangeWidth + 'px';\n\n\t\t\t\t\tbox.rangeElement.classList.remove('offscreen');\n\t\t\t\t}\n\n\t\t\t\tannotation.line.classList.remove('offscreen');\n\t\t\t\tannotation.line.style.left = left + 'px';\n\t\t\t} );\n\t\t}, this );\n\t};\n\n\tthis.graph.onUpdate( function() { self.update() } );\n};\nRickshaw.namespace('Rickshaw.Graph.Axis.Time');\n\nRickshaw.Graph.Axis.Time = function(args) {\n\n\tvar self = this;\n\n\tthis.graph = args.graph;\n\tthis.elements = [];\n\tthis.ticksTreatment = args.ticksTreatment || 'plain';\n\tthis.fixedTimeUnit = args.timeUnit;\n\n\tvar time = args.timeFixture || new Rickshaw.Fixtures.Time();\n\n\tthis.appropriateTimeUnit = function() {\n\n\t\tvar unit;\n\t\tvar units = time.units;\n\n\t\tvar domain = this.graph.x.domain();\n\t\tvar rangeSeconds = domain[1] - domain[0];\n\n\t\tunits.forEach( function(u) {\n\t\t\tif (Math.floor(rangeSeconds / u.seconds) >= 2) {\n\t\t\t\tunit = unit || u;\n\t\t\t}\n\t\t} );\n\n\t\treturn (unit || time.units[time.units.length - 1]);\n\t};\n\n\tthis.tickOffsets = function() {\n\n\t\tvar domain = this.graph.x.domain();\n\n\t\tvar unit = this.fixedTimeUnit || this.appropriateTimeUnit();\n\t\tvar count = Math.ceil((domain[1] - domain[0]) / unit.seconds);\n\n\t\tvar runningTick = domain[0];\n\n\t\tvar offsets = [];\n\n\t\tfor (var i = 0; i < count; i++) {\n\n\t\t\tvar tickValue = time.ceil(runningTick, unit);\n\t\t\trunningTick = tickValue + unit.seconds / 2;\n\n\t\t\toffsets.push( { value: tickValue, unit: unit } );\n\t\t}\n\n\t\treturn offsets;\n\t};\n\n\tthis.render = function() {\n\n\t\tthis.elements.forEach( function(e) {\n\t\t\te.parentNode.removeChild(e);\n\t\t} );\n\n\t\tthis.elements = [];\n\n\t\tvar offsets = this.tickOffsets();\n\n\t\toffsets.forEach( function(o) {\n\t\t\t\n\t\t\tif (self.graph.x(o.value) > self.graph.x.range()[1]) return;\n\t\n\t\t\tvar element = document.createElement('div');\n\t\t\telement.style.left = self.graph.x(o.value) + 'px';\n\t\t\telement.classList.add('x_tick');\n\t\t\telement.classList.add(self.ticksTreatment);\n\n\t\t\tvar title = document.createElement('div');\n\t\t\ttitle.classList.add('title');\n\t\t\ttitle.innerHTML = o.unit.formatter(new Date(o.value * 1000));\n\t\t\telement.appendChild(title);\n\n\t\t\tself.graph.element.appendChild(element);\n\t\t\tself.elements.push(element);\n\n\t\t} );\n\t};\n\n\tthis.graph.onUpdate( function() { self.render() } );\n};\n\nRickshaw.namespace('Rickshaw.Graph.Axis.X');\n\nRickshaw.Graph.Axis.X = function(args) {\n\n\tvar self = this;\n\tvar berthRate = 0.10;\n\n\tthis.initialize = function(args) {\n\n\t\tthis.graph = args.graph;\n\t\tthis.orientation = args.orientation || 'top';\n\t\tthis.color = args.color || \"#000000\";\n\n\t\tthis.pixelsPerTick = args.pixelsPerTick || 75;\n\t\tif (args.ticks) this.staticTicks = args.ticks;\n\t\tif (args.tickValues) this.tickValues = args.tickValues;\n\n\t\tthis.tickSize = args.tickSize || 4;\n\t\tthis.ticksTreatment = args.ticksTreatment || 'plain';\n\n\t\tif (args.element) {\n\n\t\t\tthis.element = args.element;\n\t\t\tthis._discoverSize(args.element, args);\n\n\t\t\tthis.vis = d3.select(args.element)\n\t\t\t\t.append(\"svg:svg\")\n\t\t\t\t.attr('height', this.height)\n\t\t\t\t.attr('width', this.width)\n\t\t\t\t.attr('stroke', this.color)\n\t\t\t\t.attr('class', 'rickshaw_graph x_axis_d3');\n\n\t\t\tthis.element = this.vis[0][0];\n\t\t\tthis.element.style.position = 'relative';\n\n\t\t\tthis.setSize({ width: args.width, height: args.height });\n\n\t\t} else {\n\t\t\tthis.vis = this.graph.vis;\n\t\t}\n\n\t\tthis.graph.onUpdate( function() { self.render() } );\n\t};\n\n\tthis.setSize = function(args) {\n\n\t\targs = args || {};\n\t\tif (!this.element) return;\n\n\t\tthis._discoverSize(this.element.parentNode, args);\n\n\t\tthis.vis\n\t\t\t.attr('height', this.height)\n\t\t\t.attr('width', this.width * (1 + berthRate));\n\n\t\tvar berth = Math.floor(this.width * berthRate / 2);\n\t\tthis.element.style.left = -1 * berth + 'px';\n\t};\n\n\tthis.render = function() {\n\n\t\tif (this._renderWidth !== undefined && this.graph.width !== this._renderWidth) this.setSize({ auto: true });\n\n\t\tvar axis = d3.svg.axis().scale(this.graph.x).orient(this.orientation);\n\t\taxis.tickFormat( args.tickFormat || function(x) { return x } );\n\t\tif (this.tickValues) axis.tickValues(this.tickValues);\n\n\t\tthis.ticks = this.staticTicks || Math.floor(this.graph.width / this.pixelsPerTick);\n\n\t\tvar berth = Math.floor(this.width * berthRate / 2) || 0;\n\t\tvar bar_offset = this.graph.renderer.name == \"bar\" && Math.ceil(this.graph.width * 0.95 / this.graph.series[0].data.length / 2) || 0;\n\n\t\tvar transform;\n\n\t\tif (this.orientation == 'top') {\n\t\t\tvar yOffset = this.height || this.graph.height;\n\t\t\ttransform = 'translate(' + (berth + bar_offset) + ',' + yOffset + ')';\n\t\t} else {\n\t\t\ttransform = 'translate(' + (berth + bar_offset) + ', 0)';\n\t\t}\n\n\t\tif (this.element) {\n\t\t\tthis.vis.selectAll('*').remove();\n\t\t}\n\n\t\tthis.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", [\"x_ticks_d3\", this.ticksTreatment].join(\" \"))\n\t\t\t.attr(\"transform\", transform)\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));\n\n\t\tvar gridSize = (this.orientation == 'bottom' ? 1 : -1) * this.graph.height;\n\n\t\tthis.graph.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", \"x_grid_d3\")\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize))\n\t\t\t.selectAll('text')\n\t\t\t.each(function() { this.parentNode.setAttribute('data-x-value', this.textContent) });\n\n\t\tthis._renderHeight = this.graph.height;\n\t};\n\n\tthis._discoverSize = function(element, args) {\n\n\t\tif (typeof window !== 'undefined') {\n\n\t\t\tvar style = window.getComputedStyle(element, null);\n\t\t\tvar elementHeight = parseInt(style.getPropertyValue('height'), 10);\n\n\t\t\tif (!args.auto) {\n\t\t\t\tvar elementWidth = parseInt(style.getPropertyValue('width'), 10);\n\t\t\t}\n\t\t}\n\n\t\tthis.width = (args.width || elementWidth || this.graph.width) * (1 + berthRate);\n\t\tthis.height = args.height || elementHeight || 40;\n\t};\n\n\tthis.initialize(args);\n};\n\nRickshaw.namespace('Rickshaw.Graph.Axis.Y');\n\nRickshaw.Graph.Axis.Y = Rickshaw.Class.create( {\n\n\tinitialize: function(args) {\n\n\t\tthis.graph = args.graph;\n\t\tthis.orientation = args.orientation || 'right';\n\t\tthis.color = args.color || \"#000000\";\n\n\t\tthis.pixelsPerTick = args.pixelsPerTick || 75;\n\t\tif (args.ticks) this.staticTicks = args.ticks;\n\t\tif (args.tickValues) this.tickValues = args.tickValues;\n\n\t\tthis.tickSize = args.tickSize || 4;\n\t\tthis.ticksTreatment = args.ticksTreatment || 'plain';\n\n\t\tthis.tickFormat = args.tickFormat || function(y) { return y };\n\n\t\tthis.berthRate = 0.10;\n\n\t\tif (args.element) {\n\n\t\t\tthis.element = args.element;\n\t\t\tthis.vis = d3.select(args.element)\n\t\t\t\t.append(\"svg:svg\")\n\t\t\t\t.attr('stroke', this.color)\n\t\t\t\t.attr('class', 'rickshaw_graph y_axis');\n\n\t\t\tthis.element = this.vis[0][0];\n\t\t\tthis.element.style.position = 'relative';\n\n\t\t\tthis.setSize({ width: args.width, height: args.height });\n\n\t\t} else {\n\t\t\tthis.vis = this.graph.vis;\n\t\t}\n\n\t\tvar self = this;\n\t\tthis.graph.onUpdate( function() { self.render() } );\n\t},\n\n\tsetSize: function(args) {\n\n\t\targs = args || {};\n\n\t\tif (!this.element) return;\n\n\t\tif (typeof window !== 'undefined') {\n\n\t\t\tvar style = window.getComputedStyle(this.element.parentNode, null);\n\t\t\tvar elementWidth = parseInt(style.getPropertyValue('width'), 10);\n\n\t\t\tif (!args.auto) {\n\t\t\t\tvar elementHeight = parseInt(style.getPropertyValue('height'), 10);\n\t\t\t}\n\t\t}\n\n\t\tthis.width = args.width || elementWidth || this.graph.width * this.berthRate;\n\t\tthis.height = args.height || elementHeight || this.graph.height;\n\n\t\tthis.vis\n\t\t\t.attr('width', this.width)\n\t\t\t.attr('height', this.height * (1 + this.berthRate));\n\n\t\tvar berth = this.height * this.berthRate;\n\n\t\tif (this.orientation == 'left') {\n\t\t\tthis.element.style.top = -1 * berth + 'px';\n\t\t}\n\t},\n\n\trender: function() {\n\n\t\tif (this._renderHeight !== undefined && this.graph.height !== this._renderHeight) this.setSize({ auto: true });\n\n\t\tthis.ticks = this.staticTicks || Math.floor(this.graph.height / this.pixelsPerTick);\n\n\t\tvar axis = this._drawAxis(this.graph.y);\n\n\t\tthis._drawGrid(axis);\n\n\t\tthis._renderHeight = this.graph.height;\n\t},\n\n\t_drawAxis: function(scale) {\n\t\tvar axis = d3.svg.axis().scale(scale).orient(this.orientation);\n\t\taxis.tickFormat(this.tickFormat);\n\t\tif (this.tickValues) axis.tickValues(this.tickValues);\n\n\t\tif (this.orientation == 'left') {\n\t\t\tvar berth = this.height * this.berthRate;\n\t\t\tvar transform = 'translate(' + this.width + ', ' + berth + ')';\n\t\t}\n\n\t\tif (this.element) {\n\t\t\tthis.vis.selectAll('*').remove();\n\t\t}\n\n\t\tthis.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", [\"y_ticks\", this.ticksTreatment].join(\" \"))\n\t\t\t.attr(\"transform\", transform)\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));\n\n\t\treturn axis;\n\t},\n\n\t_drawGrid: function(axis) {\n\t\tvar gridSize = (this.orientation == 'right' ? 1 : -1) * this.graph.width;\n\n\t\tthis.graph.vis\n\t\t\t.append(\"svg:g\")\n\t\t\t.attr(\"class\", \"y_grid\")\n\t\t\t.call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize))\n\t\t\t.selectAll('text')\n\t\t\t.each(function() { this.parentNode.setAttribute('data-y-value', this.textContent) });\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.Axis.Y.Scaled');\n\nRickshaw.Graph.Axis.Y.Scaled = Rickshaw.Class.create( Rickshaw.Graph.Axis.Y, {\n\n  initialize: function($super, args) {\n\n    if (typeof(args.scale) === 'undefined') {\n      throw new Error('Scaled requires scale');\n    }\n\n    this.scale = args.scale;\n\n    if (typeof(args.grid) === 'undefined') {\n      this.grid = true;\n    } else {\n      this.grid = args.grid;\n    }\n\n    $super(args);\n\n  },\n\n  _drawAxis: function($super, scale) {\n    // Adjust scale's domain to compensate for adjustments to the\n    // renderer's domain (e.g. padding).\n    var domain = this.scale.domain();\n    var renderDomain = this.graph.renderer.domain().y;\n\n    var extents = [\n      Math.min.apply(Math, domain),\n      Math.max.apply(Math, domain)];\n\n    // A mapping from the ideal render domain [0, 1] to the extent\n    // of the original scale's domain.  This is used to calculate\n    // the extents of the adjusted domain.\n    var extentMap = d3.scale.linear().domain([0, 1]).range(extents);\n\n    var adjExtents = [\n      extentMap(renderDomain[0]),\n      extentMap(renderDomain[1])];\n\n    // A mapping from the original domain to the adjusted domain.\n    var adjustment = d3.scale.linear().domain(extents).range(adjExtents);\n\n    // Make a copy of the custom scale, apply the adjusted domain, and\n    // copy the range to match the graph's scale.\n    var adjustedScale = this.scale.copy()\n      .domain(domain.map(adjustment))\n      .range(scale.range());\n\n    return $super(adjustedScale);\n  },\n\n  _drawGrid: function($super, axis) {\n    if (this.grid) {\n      // only draw the axis if the grid option is true\n      $super(axis);\n    }\n  }\n} );\nRickshaw.namespace('Rickshaw.Graph.Behavior.Series.Highlight');\n\nRickshaw.Graph.Behavior.Series.Highlight = function(args) {\n\n\tthis.graph = args.graph;\n\tthis.legend = args.legend;\n\n\tvar self = this;\n\n\tvar propertiesSafe = {};\n\tvar activeLine = null;\n\n\tvar disabledColor = args.disabledColor || function(seriesColor) {\n\t\treturn d3.interpolateRgb(seriesColor, d3.rgb('#d8d8d8'))(0.8).toString();\n\t};\n\n\tvar transformFn = args.transform || function(isActive, series) {\n\t\tvar newProperties = {};\n\t\tif (!isActive) {\n\t\t\t// backwards compatibility\n\t\t\tnewProperties.color = disabledColor(series.color);\n\t\t}\n\t\treturn newProperties;\n\t};\n\n\n\tthis.addHighlightEvents = function (l) {\n\n\t\tl.element.addEventListener( 'mouseover', function(e) {\n\n\t\t\tif (activeLine) return;\n\t\t\telse activeLine = l;\n\n\t\t\tself.legend.lines.forEach( function(line) {\n\t\t\t\tvar newProperties;\n\t\t\t\tvar isActive = false;\n\n\t\t\t\tif (l === line) {\n\t\t\t\t\tisActive = true;\n\n\t\t\t\t\t// if we're not in a stacked renderer bring active line to the top\n\t\t\t\t\tif (self.graph.renderer.unstack && (line.series.renderer ? line.series.renderer.unstack : true)) {\n\n\t\t\t\t\t\tvar seriesIndex = self.graph.series.indexOf(line.series);\n\t\t\t\t\t\tline.originalIndex = seriesIndex;\n\n\t\t\t\t\t\tvar series = self.graph.series.splice(seriesIndex, 1)[0];\n\t\t\t\t\t\tself.graph.series.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewProperties = transformFn(isActive, line.series);\n\n\t\t\t\tpropertiesSafe[line.series.name] = propertiesSafe[line.series.name] || {\n\t\t\t\t\tcolor   : line.series.color,\n\t\t\t\t\tstroke  : line.series.stroke\n\t\t\t\t};\n\n\t\t\t\tif (newProperties.color) {\n\t\t\t\t\tline.series.color = newProperties.color;\n\t\t\t\t}\n\t\t\t\tif (newProperties.stroke) {\n\t\t\t\t\tline.series.stroke = newProperties.stroke;\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tself.graph.update();\n\n\t\t}, false );\n\n\t\tl.element.addEventListener( 'mouseout', function(e) {\n\n\t\t\tif (!activeLine) return;\n\t\t\telse activeLine = null;\n\n\t\t\tself.legend.lines.forEach( function(line) {\n\n\t\t\t\t// return reordered series to its original place\n\t\t\t\tif (l === line && line.hasOwnProperty('originalIndex')) {\n\n\t\t\t\t\tvar series = self.graph.series.pop();\n\t\t\t\t\tself.graph.series.splice(line.originalIndex, 0, series);\n\t\t\t\t\tdelete line.originalIndex;\n\t\t\t\t}\n\n\t\t\t\tvar lineProperties = propertiesSafe[line.series.name];\n\t\t\t\tif (lineProperties) {\n\t\t\t\t\tline.series.color  = lineProperties.color;\n\t\t\t\t\tline.series.stroke = lineProperties.stroke;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tself.graph.update();\n\n\t\t}, false );\n\t};\n\n\tif (this.legend) {\n\t\tthis.legend.lines.forEach( function(l) {\n\t\t\tself.addHighlightEvents(l);\n\t\t} );\n\t}\n\n};\nRickshaw.namespace('Rickshaw.Graph.Behavior.Series.Order');\n\nRickshaw.Graph.Behavior.Series.Order = function(args) {\n\n\tthis.graph = args.graph;\n\tthis.legend = args.legend;\n\n\tvar self = this;\n\n\tif (typeof window.jQuery == 'undefined') {\n\t\tthrow \"couldn't find jQuery at window.jQuery\";\n\t}\n\n\tif (typeof window.jQuery.ui == 'undefined') {\n\t\tthrow \"couldn't find jQuery UI at window.jQuery.ui\";\n\t}\n\n\tjQuery(function() {\n\t\tjQuery(self.legend.list).sortable( {\n\t\t\tcontainment: 'parent',\n\t\t\ttolerance: 'pointer',\n\t\t\tupdate: function( event, ui ) {\n\t\t\t\tvar series = [];\n\t\t\t\tjQuery(self.legend.list).find('li').each( function(index, item) {\n\t\t\t\t\tif (!item.series) return;\n\t\t\t\t\tseries.push(item.series);\n\t\t\t\t} );\n\n\t\t\t\tfor (var i = self.graph.series.length - 1; i >= 0; i--) {\n\t\t\t\t\tself.graph.series[i] = series.shift();\n\t\t\t\t}\n\n\t\t\t\tself.graph.update();\n\t\t\t}\n\t\t} );\n\t\tjQuery(self.legend.list).disableSelection();\n\t});\n\n\t//hack to make jquery-ui sortable behave\n\tthis.graph.onUpdate( function() { \n\t\tvar h = window.getComputedStyle(self.legend.element).height;\n\t\tself.legend.element.style.height = h;\n\t} );\n};\nRickshaw.namespace('Rickshaw.Graph.Behavior.Series.Toggle');\n\nRickshaw.Graph.Behavior.Series.Toggle = function(args) {\n\n\tthis.graph = args.graph;\n\tthis.legend = args.legend;\n\n\tvar self = this;\n\n\tthis.addAnchor = function(line) {\n\n\t\tvar anchor = document.createElement('a');\n\t\tanchor.innerHTML = '&#10004;';\n\t\tanchor.classList.add('action');\n\t\tline.element.insertBefore(anchor, line.element.firstChild);\n\n\t\tanchor.onclick = function(e) {\n\t\t\tif (line.series.disabled) {\n\t\t\t\tline.series.enable();\n\t\t\t\tline.element.classList.remove('disabled');\n\t\t\t} else { \n\t\t\t\tif (this.graph.series.filter(function(s) { return !s.disabled }).length <= 1) return;\n\t\t\t\tline.series.disable();\n\t\t\t\tline.element.classList.add('disabled');\n\t\t\t}\n\n\t\t\tself.graph.update();\n\n\t\t}.bind(this);\n\t\t\n                var label = line.element.getElementsByTagName('span')[0];\n                label.onclick = function(e){\n\n                        var disableAllOtherLines = line.series.disabled;\n                        if ( ! disableAllOtherLines ) {\n                                for ( var i = 0; i < self.legend.lines.length; i++ ) {\n                                        var l = self.legend.lines[i];\n                                        if ( line.series === l.series ) {\n                                                // noop\n                                        } else if ( l.series.disabled ) {\n                                                // noop\n                                        } else {\n                                                disableAllOtherLines = true;\n                                                break;\n                                        }\n                                }\n                        }\n\n                        // show all or none\n                        if ( disableAllOtherLines ) {\n\n                                // these must happen first or else we try ( and probably fail ) to make a no line graph\n                                line.series.enable();\n                                line.element.classList.remove('disabled');\n\n                                self.legend.lines.forEach(function(l){\n                                        if ( line.series === l.series ) {\n                                                // noop\n                                        } else {\n                                                l.series.disable();\n                                                l.element.classList.add('disabled');\n                                        }\n                                });\n\n                        } else {\n\n                                self.legend.lines.forEach(function(l){\n                                        l.series.enable();\n                                        l.element.classList.remove('disabled');\n                                });\n\n                        }\n\n                        self.graph.update();\n\n                };\n\n\t};\n\n\tif (this.legend) {\n\n\t\tif (typeof jQuery != 'undefined' && jQuery(this.legend.list).sortable) {\n\t\t\tjQuery(this.legend.list).sortable( {\n\t\t\t\tstart: function(event, ui) {\n\t\t\t\t\tui.item.bind('no.onclick',\n\t\t\t\t\t\tfunction(event) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstop: function(event, ui) {\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tui.item.unbind('no.onclick');\n\t\t\t\t\t}, 250);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.legend.lines.forEach( function(l) {\n\t\t\tself.addAnchor(l);\n\t\t} );\n\t}\n\n\tthis._addBehavior = function() {\n\n\t\tthis.graph.series.forEach( function(s) {\n\t\t\t\n\t\t\ts.disable = function() {\n\n\t\t\t\tif (self.graph.series.length <= 1) {\n\t\t\t\t\tthrow('only one series left');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ts.disabled = true;\n\t\t\t};\n\n\t\t\ts.enable = function() {\n\t\t\t\ts.disabled = false;\n\t\t\t};\n\t\t} );\n\t};\n\tthis._addBehavior();\n\n\tthis.updateBehaviour = function () { this._addBehavior() };\n\n};\nRickshaw.namespace('Rickshaw.Graph.DragZoom');\n\nRickshaw.Graph.DragZoom = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\t\tif (!args || !args.graph) {\n\t\t\tthrow new Error(\"Rickshaw.Graph.DragZoom needs a reference to a graph\");\n\t\t}\n\t\tvar defaults = {\n\t\t\topacity: 0.5,\n\t\t\tfill: 'steelblue',\n\t\t\tminimumTimeSelection: 60,\n\t\t\tcallback: function() {}\n\t\t};\n\n\t\tthis.graph = args.graph;\n\t\tthis.svg = d3.select(this.graph.element).select(\"svg\");\n\t\tthis.svgWidth = parseInt(this.svg.attr(\"width\"), 10);\n\t\tthis.opacity = args.opacity || defaults.opacity;\n\t\tthis.fill = args.fill || defaults.fill;\n\t\tthis.minimumTimeSelection = args.minimumTimeSelection || defaults.minimumTimeSelection;\n\t\tthis.callback = args.callback || defaults.callback;\n\n\t\tthis.registerMouseEvents();\n\t},\n\n\tregisterMouseEvents: function() {\n\t\tvar self = this;\n\t\tvar ESCAPE_KEYCODE = 27;\n\t\tvar rectangle;\n\n\t\tvar drag = {\n\t\t\tstartDt: null,\n\t\t\tstopDt: null,\n\t\t\tstartPX: null,\n\t\t\tstopPX: null\n\t\t};\n\n\t\tthis.svg.on(\"mousedown\", onMousedown);\n\n\t\tfunction onMouseup(datum, index) {\n\t\t\tdrag.stopDt = pointAsDate(d3.event);\n\t\t\tvar windowAfterDrag = [\n\t\t\t\tdrag.startDt,\n\t\t\t\tdrag.stopDt\n\t\t\t].sort(compareNumbers);\n\n\t\t\tself.graph.window.xMin = windowAfterDrag[0];\n\t\t\tself.graph.window.xMax = windowAfterDrag[1];\n\n\t\t\tvar endTime = self.graph.window.xMax;\n\t\t\tvar range = self.graph.window.xMax - self.graph.window.xMin;\n\n\t\t\treset(this);\n\n\t\t\tif (range < self.minimumTimeSelection || isNaN(range)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.graph.update();\n\t\t\tself.callback({range: range, endTime: endTime});\n\t\t}\n\n\t\tfunction onMousemove() {\n\t\t\tvar offset = drag.stopPX = (d3.event.offsetX || d3.event.layerX);\n\t\t\tif (offset > (self.svgWidth - 1) || offset < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar limits = [drag.startPX, offset].sort(compareNumbers);\n\t\t\tvar selectionWidth = limits[1]-limits[0];\n\t\t\tif (isNaN(selectionWidth)) {\n\t\t\t\treturn reset(this);\n\t\t\t}\n\t\t\trectangle.attr(\"fill\", self.fill)\n\t\t\t.attr(\"x\", limits[0])\n\t\t\t.attr(\"width\", selectionWidth);\n\t\t}\n\n\t\tfunction onMousedown() {\n\t\t\tvar el = d3.select(this);\n\t\t\trectangle = el.append(\"rect\")\n\t\t\t.style(\"opacity\", self.opacity)\n\t\t\t.attr(\"y\", 0)\n\t\t\t.attr(\"height\", \"100%\");\n\n\t\t\tif(d3.event.preventDefault) {\n\t\t\t\td3.event.preventDefault();\n\t\t\t} else {\n\t\t\t\td3.event.returnValue = false;\n\t\t\t}\n\t\t\tdrag.target = d3.event.target;\n\t\t\tdrag.startDt = pointAsDate(d3.event);\n\t\t\tdrag.startPX = d3.event.offsetX || d3.event.layerX;\n\t\t\tel.on(\"mousemove\", onMousemove);\n\t\t\td3.select(document).on(\"mouseup\", onMouseup);\n\t\t\td3.select(document).on(\"keyup\", function() {\n\t\t\t\tif (d3.event.keyCode === ESCAPE_KEYCODE) {\n\t\t\t\t\treset(this);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction reset(el) {\n\t\t\tvar s = d3.select(el);\n\t\t\ts.on(\"mousemove\", null);\n\t\t\td3.select(document).on(\"mouseup\", null);\n\t\t\tdrag = {};\n\t\t\trectangle.remove();\n\t\t}\n\n\t\tfunction compareNumbers(a, b) {\n\t\t\treturn a - b;\n\t\t}\n\n\t\tfunction pointAsDate(e) {\n\t\t\treturn Math.floor(self.graph.x.invert(e.offsetX || e.layerX));\n\t\t}\n\t}\n});\nRickshaw.namespace('Rickshaw.Graph.HoverDetail');\n\nRickshaw.Graph.HoverDetail = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tvar graph = this.graph = args.graph;\n\n\t\tthis.xFormatter = args.xFormatter || function(x) {\n\t\t\treturn new Date( x * 1000 ).toUTCString();\n\t\t};\n\n\t\tthis.yFormatter = args.yFormatter || function(y) {\n\t\t\treturn y === null ? y : y.toFixed(2);\n\t\t};\n\n\t\tvar element = this.element = document.createElement('div');\n\t\telement.className = 'detail inactive';\n\n\t\tthis.visible = true;\n\t\tgraph.element.appendChild(element);\n\n\t\tthis.lastEvent = null;\n\t\tthis._addListeners();\n\n\t\tthis.onShow = args.onShow;\n\t\tthis.onHide = args.onHide;\n\t\tthis.onRender = args.onRender;\n\n\t\tthis.formatter = args.formatter || this.formatter;\n\n\t},\n\n\tformatter: function(series, x, y, formattedX, formattedY, d) {\n\t\treturn series.name + ':&nbsp;' + formattedY;\n\t},\n\n\tupdate: function(e) {\n\n\t\te = e || this.lastEvent;\n\t\tif (!e) return;\n\t\tthis.lastEvent = e;\n\n\t\tif (!e.target.nodeName.match(/^(path|svg|rect|circle)$/)) return;\n\n\t\tvar graph = this.graph;\n\n\t\tvar rect = graph.element.getBoundingClientRect();\n\t\tvar eventX = e.clientX - rect.left;\n\t\tvar eventY = e.clientY - rect.top;\n\n\t\tvar j = 0;\n\t\tvar points = [];\n\t\tvar nearestPoint;\n\n\t\tthis.graph.series.active().forEach( function(series) {\n\n\t\t\tvar data = this.graph.stackedData[j++];\n\n\t\t\tif (!data.length)\n\t\t\t\treturn;\n\n\t\t\tvar domainX = graph.x.invert(eventX);\n\n\t\t\tvar domainIndexScale = d3.scale.linear()\n\t\t\t\t.domain([data[0].x, data.slice(-1)[0].x])\n\t\t\t\t.range([0, data.length - 1]);\n\n\t\t\tvar approximateIndex = Math.round(domainIndexScale(domainX));\n\t\t\tif (approximateIndex == data.length - 1) approximateIndex--;\n\n\t\t\tvar dataIndex = Math.min(approximateIndex || 0, data.length - 1);\n\n\t\t\tfor (var i = approximateIndex; i < data.length - 1;) {\n\n\t\t\t\tif (!data[i] || !data[i + 1]) break;\n\n\t\t\t\tif (data[i].x <= domainX && data[i + 1].x > domainX) {\n\t\t\t\t\tdataIndex = Math.abs(domainX - data[i].x) < Math.abs(domainX - data[i + 1].x) ? i : i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (data[i + 1].x <= domainX) { i++ } else { i-- }\n\t\t\t}\n\n\t\t\tif (dataIndex < 0) dataIndex = 0;\n\t\t\tvar value = data[dataIndex];\n\n\t\t\tvar distance = Math.sqrt(\n\t\t\t\tMath.pow(Math.abs(graph.x(value.x) - eventX), 2) +\n\t\t\t\tMath.pow(Math.abs(graph.y(value.y + value.y0) - eventY), 2)\n\t\t\t);\n\n\t\t\tvar xFormatter = series.xFormatter || this.xFormatter;\n\t\t\tvar yFormatter = series.yFormatter || this.yFormatter;\n\n\t\t\tvar point = {\n\t\t\t\tformattedXValue: xFormatter(value.x),\n\t\t\t\tformattedYValue: yFormatter(series.scale ? series.scale.invert(value.y) : value.y),\n\t\t\t\tseries: series,\n\t\t\t\tvalue: value,\n\t\t\t\tdistance: distance,\n\t\t\t\torder: j,\n\t\t\t\tname: series.name\n\t\t\t};\n\n\t\t\tif (!nearestPoint || distance < nearestPoint.distance) {\n\t\t\t\tnearestPoint = point;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\n\t\t}, this );\n\n\t\tif (!nearestPoint)\n\t\t\treturn;\n\n\t\tnearestPoint.active = true;\n\n\t\tvar domainX = nearestPoint.value.x;\n\t\tvar formattedXValue = nearestPoint.formattedXValue;\n\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.style.left = graph.x(domainX) + 'px';\n\n\t\tthis.visible && this.render( {\n\t\t\tpoints: points,\n\t\t\tdetail: points, // for backwards compatibility\n\t\t\tmouseX: eventX,\n\t\t\tmouseY: eventY,\n\t\t\tformattedXValue: formattedXValue,\n\t\t\tdomainX: domainX\n\t\t} );\n\t},\n\n\thide: function() {\n\t\tthis.visible = false;\n\t\tthis.element.classList.add('inactive');\n\n\t\tif (typeof this.onHide == 'function') {\n\t\t\tthis.onHide();\n\t\t}\n\t},\n\n\tshow: function() {\n\t\tthis.visible = true;\n\t\tthis.element.classList.remove('inactive');\n\n\t\tif (typeof this.onShow == 'function') {\n\t\t\tthis.onShow();\n\t\t}\n\t},\n\n\trender: function(args) {\n\n\t\tvar graph = this.graph;\n\t\tvar points = args.points;\n\t\tvar point = points.filter( function(p) { return p.active } ).shift();\n\n\t\tif (point.value.y === null) return;\n\n\t\tvar formattedXValue = point.formattedXValue;\n\t\tvar formattedYValue = point.formattedYValue;\n\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.style.left = graph.x(point.value.x) + 'px';\n\n\t\tvar xLabel = document.createElement('div');\n\n\t\txLabel.className = 'x_label';\n\t\txLabel.innerHTML = formattedXValue;\n\t\tthis.element.appendChild(xLabel);\n\n\t\tvar item = document.createElement('div');\n\n\t\titem.className = 'item';\n\n\t\t// invert the scale if this series displays using a scale\n\t\tvar series = point.series;\n\t\tvar actualY = series.scale ? series.scale.invert(point.value.y) : point.value.y;\n\n\t\titem.innerHTML = this.formatter(series, point.value.x, actualY, formattedXValue, formattedYValue, point);\n\t\titem.style.top = this.graph.y(point.value.y0 + point.value.y) + 'px';\n\n\t\tthis.element.appendChild(item);\n\n\t\tvar dot = document.createElement('div');\n\n\t\tdot.className = 'dot';\n\t\tdot.style.top = item.style.top;\n\t\tdot.style.borderColor = series.color;\n\n\t\tthis.element.appendChild(dot);\n\n\t\tif (point.active) {\n\t\t\titem.classList.add('active');\n\t\t\tdot.classList.add('active');\n\t\t}\n\n\t\t// Assume left alignment until the element has been displayed and\n\t\t// bounding box calculations are possible.\n\t\tvar alignables = [xLabel, item];\n\t\talignables.forEach(function(el) {\n\t\t\tel.classList.add('left');\n\t\t});\n\n\t\tthis.show();\n\n\t\t// If left-alignment results in any error, try right-alignment.\n\t\tvar leftAlignError = this._calcLayoutError(alignables);\n\t\tif (leftAlignError > 0) {\n\t\t\talignables.forEach(function(el) {\n\t\t\t\tel.classList.remove('left');\n\t\t\t\tel.classList.add('right');\n\t\t\t});\n\n\t\t\t// If right-alignment is worse than left alignment, switch back.\n\t\t\tvar rightAlignError = this._calcLayoutError(alignables);\n\t\t\tif (rightAlignError > leftAlignError) {\n\t\t\t\talignables.forEach(function(el) {\n\t\t\t\t\tel.classList.remove('right');\n\t\t\t\t\tel.classList.add('left');\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (typeof this.onRender == 'function') {\n\t\t\tthis.onRender(args);\n\t\t}\n\t},\n\n\t_calcLayoutError: function(alignables) {\n\t\t// Layout error is calculated as the number of linear pixels by which\n\t\t// an alignable extends past the left or right edge of the parent.\n\t\tvar parentRect = this.element.parentNode.getBoundingClientRect();\n\n\t\tvar error = 0;\n\t\tvar alignRight = alignables.forEach(function(el) {\n\t\t\tvar rect = el.getBoundingClientRect();\n\t\t\tif (!rect.width) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (rect.right > parentRect.right) {\n\t\t\t\terror += rect.right - parentRect.right;\n\t\t\t}\n\n\t\t\tif (rect.left < parentRect.left) {\n\t\t\t\terror += parentRect.left - rect.left;\n\t\t\t}\n\t\t});\n\t\treturn error;\n\t},\n\n\t_addListeners: function() {\n\n\t\t// Keep reference for later removal.\n\t\tthis.mousemoveListener = function(e) {\n\t\t\tthis.visible = true;\n\t\t\tthis.update(e);\n\t\t}.bind(this);\n\n\t\t// Add listener.\n\t\tthis.graph.element.addEventListener(\n\t\t\t'mousemove',\n\t\t\tthis.mousemoveListener,\n\t\t\tfalse\n\t\t);\n\n\t\tthis.graph.onUpdate( function() { this.update() }.bind(this) );\n\n\t\t// Keep reference for later removal.\n\t\tthis.mouseoutListener = function(e) {\n\t\t\tif (e.relatedTarget && !(e.relatedTarget.compareDocumentPosition(this.graph.element) & Node.DOCUMENT_POSITION_CONTAINS)) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}.bind(this);\n\n\t\t// Add listener.\n\t\tthis.graph.element.addEventListener(\n\t\t\t'mouseout',\n\t\t\tthis.mouseoutListener,\n\t\t\tfalse\n\t\t);\n\t},\n\n\t_removeListeners: function() {\n\t\tif (this.mousemoveListener) {\n\t\t\tthis.graph.element.removeEventListener('mousemove', this.mousemoveListener, false);\n\t\t}\n\t\tif (this.mouseoutListener) {\n\t\t\tthis.graph.element.removeEventListener('mouseout', this.mouseoutListener, false);\n\t\t}\n\t}\n});\nRickshaw.namespace('Rickshaw.Graph.JSONP');\n\nRickshaw.Graph.JSONP = Rickshaw.Class.create( Rickshaw.Graph.Ajax, {\n\n\trequest: function() {\n\n\t\tjQuery.ajax( {\n\t\t\turl: this.dataURL,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: this.success.bind(this),\n\t\t\terror: this.error.bind(this)\n\t\t} );\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.Legend');\n\nRickshaw.Graph.Legend = Rickshaw.Class.create( {\n\n\tclassName: 'rickshaw_legend',\n\n\tinitialize: function(args) {\n\t\tthis.element = args.element;\n\t\tthis.graph = args.graph;\n\t\tthis.naturalOrder = args.naturalOrder;\n\t\tthis.colorKey = args.colorKey || 'color';\n\n\t\tthis.element.classList.add(this.className);\n\n\t\tthis.list = document.createElement('ul');\n\t\tthis.element.appendChild(this.list);\n\n\t\tthis.render();\n\n\t\t// we could bind this.render.bind(this) here\n\t\t// but triggering the re-render would lose the added\n\t\t// behavior of the series toggle\n\t\tthis.graph.onUpdate( function() {} );\n\t},\n\n\trender: function() {\n\t\tvar self = this;\n\n\t\twhile ( this.list.firstChild ) {\n\t\t\tthis.list.removeChild( this.list.firstChild );\n\t\t}\n\t\tthis.lines = [];\n\n\t\tvar series = this.graph.series\n\t\t\t.map( function(s) { return s } );\n\n\t\tif (!this.naturalOrder) {\n\t\t\tseries = series.reverse();\n\t\t}\n\n\t\tseries.forEach( function(s) {\n\t\t\tself.addLine(s);\n\t\t} );\n\n\n\t},\n\n\taddLine: function (series) {\n\t\tvar line = document.createElement('li');\n\t\tline.className = 'line';\n\t\tif (series.disabled) {\n\t\t\tline.className += ' disabled';\n\t\t}\n\t\tif (series.className) {\n\t\t\td3.select(line).classed(series.className, true);\n\t\t}\n\t\tvar swatch = document.createElement('div');\n\t\tswatch.className = 'swatch';\n\t\tswatch.style.backgroundColor = series[this.colorKey];\n\n\t\tline.appendChild(swatch);\n\n\t\tvar label = document.createElement('span');\n\t\tlabel.className = 'label';\n\t\tlabel.innerHTML = series.name;\n\n\t\tline.appendChild(label);\n\t\tthis.list.appendChild(line);\n\n\t\tline.series = series;\n\n\t\tif (series.noLegend) {\n\t\t\tline.style.display = 'none';\n\t\t}\n\n\t\tvar _line = { element: line, series: series };\n\t\tif (this.shelving) {\n\t\t\tthis.shelving.addAnchor(_line);\n\t\t\tthis.shelving.updateBehaviour();\n\t\t}\n\t\tif (this.highlighter) {\n\t\t\tthis.highlighter.addHighlightEvents(_line);\n\t\t}\n\t\tthis.lines.push(_line);\n\t\treturn line;\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.RangeSlider');\n\nRickshaw.Graph.RangeSlider = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tvar $ = jQuery;\n\t\tvar self = this;\n\t\tvar element = this.element = args.element;\n\t\tvar graphs = this.graphs = args.graphs;\n\t\tif (!graphs) {\n\t\t\tgraphs = this.graph = args.graph;\n\t\t}\n\t\tif (graphs.constructor !== Array) {\n\t\t\tgraphs = [graphs];\n\t\t}\n\t\tthis.graph = graphs[0];\n\n\t\tthis.slideCallbacks = [];\n\n\t\tthis.build();\n\n\t\tfor (var i = 0; i < graphs.length; i++) {\n\t\t\tgraphs[i].onUpdate(function() {\n\t\t\t\tself.update();\n\t\t\t}.bind(self));\n\n\t\t\t(function(idx){\n\t\t\t\tgraphs[idx].onConfigure(function() {\n\t\t\t\t\t$(this.element)[0].style.width = graphs[idx].width + 'px';\n\t\t\t\t}.bind(self));\n\t\t\t})(i);\n\t\t}\n\n\t},\n\n\tbuild: function() {\n\n\t\tvar domain;\n\t\tvar element = this.element;\n\t\tvar $ = jQuery;\n\t\tvar self = this;\n\t\tvar graphs = this.graphs || this.graph;\n\n\t\tif (graphs.constructor !== Array) {\n\t\t\tgraphs = [graphs];\n\t\t}\n\n\t\t// base the slider's min/max on the first graph\n\t\tthis.graph = graphs[0];\n\t\tdomain = graphs[0].dataDomain();\n\n\t\t$(function() {\n\t\t\t$(element).slider({\n\t\t\t\trange: true,\n\t\t\t\tmin: domain[0],\n\t\t\t\tmax: domain[1],\n\t\t\t\tvalues: [\n\t\t\t\t\tdomain[0],\n\t\t\t\t\tdomain[1]\n\t\t\t\t],\n\t\t\t\tstart: function(event, ui) {\n\t\t\t\t\tself.slideStarted({ event: event, ui: ui });\n\t\t\t\t},\n\t\t\t\tstop: function(event, ui) {\n\t\t\t\t\tself.slideFinished({ event: event, ui: ui });\n\t\t\t\t},\n\t\t\t\tslide: function(event, ui) {\n\t\t\t\t\tif (!self.slideShouldUpdate(event, ui))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tif (ui.values[1] <= ui.values[0]) return;\n\n\t\t\t\t\tfor (var i = 0; i < graphs.length; i++) {\n\t\t\t\t\t\tself.processSlideChange({\n\t\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\t\tui: ui,\n\t\t\t\t\t\t\tgraph: graphs[i]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\tgraphs[0].onConfigure(function() {\n\t\t\t$(this.element)[0].style.width = graphs[0].width + 'px';\n\t\t}.bind(this));\n\n\t},\n\n\tupdate: function() {\n\n\t\tvar element = this.element;\n\t\tvar graph = this.graph;\n\t\tvar $ = jQuery;\n\n\t\tvar values = $(element).slider('option', 'values');\n\n\t\tvar domain = graph.dataDomain();\n\n\t\t$(element).slider('option', 'min', domain[0]);\n\t\t$(element).slider('option', 'max', domain[1]);\n\n\t\tif (graph.window.xMin == null) {\n\t\t\tvalues[0] = domain[0];\n\t\t}\n\t\tif (graph.window.xMax == null) {\n\t\t\tvalues[1] = domain[1];\n\t\t}\n\n\t\t$(element).slider('option', 'values', values);\n\t},\n\n\tonSlide: function(callback) {\n\t\tthis.slideCallbacks.push(callback);\n\t},\n\n\tprocessSlideChange: function(args) {\n\t\tvar event = args.event;\n\t\tvar ui = args.ui;\n\t\tvar graph = args.graph;\n\n\t\tgraph.window.xMin = ui.values[0];\n\t\tgraph.window.xMax = ui.values[1];\n\t\tgraph.update();\n\n\t\tvar domain = graph.dataDomain();\n\n\t\t// if we're at an extreme, stick there\n\t\tif (domain[0] == ui.values[0]) {\n\t\t\tgraph.window.xMin = undefined;\n\t\t}\n\n\t\tif (domain[1] == ui.values[1]) {\n\t\t\tgraph.window.xMax = undefined;\n\t\t}\n\n\t\tthis.slideCallbacks.forEach(function(callback) {\n\t\t\tcallback(graph, graph.window.xMin, graph.window.xMax);\n\t\t});\n\n\t},\n\n\t// allows the slide updates to bail out if sliding is not permitted\n\tslideShouldUpdate: function() {\n\t\treturn true;\n\t},\n\n\tslideStarted: function() {\n\t\treturn;\n\t},\n\n\tslideFinished: function() {\n\t\treturn;\n\t}\n});\n\nRickshaw.namespace('Rickshaw.Graph.RangeSlider.Preview');\n\nRickshaw.Graph.RangeSlider.Preview = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tif (!args.element) throw \"Rickshaw.Graph.RangeSlider.Preview needs a reference to an element\";\n\t\tif (!args.graph && !args.graphs) throw \"Rickshaw.Graph.RangeSlider.Preview needs a reference to an graph or an array of graphs\";\n\n\t\tthis.element = args.element;\n\t\tthis.element.style.position = 'relative';\n\n\t\tthis.graphs = args.graph ? [ args.graph ] : args.graphs;\n\n\t\tthis.defaults = {\n\t\t\theight: 75,\n\t\t\twidth: 400,\n\t\t\tgripperColor: undefined,\n\t\t\tframeTopThickness: 3,\n\t\t\tframeHandleThickness: 10,\n\t\t\tframeColor: \"#d4d4d4\",\n\t\t\tframeOpacity: 1,\n\t\t\tminimumFrameWidth: 0,\n\t\t\theightRatio: 0.2\n\t\t};\n\n\t\tthis.heightRatio = args.heightRatio || this.defaults.heightRatio;\n\t\tthis.defaults.gripperColor = d3.rgb(this.defaults.frameColor).darker().toString(); \n\n\t\tthis.configureCallbacks = [];\n\t\tthis.slideCallbacks = [];\n\n\t\tthis.previews = [];\n\n\t\tif (!args.width) this.widthFromGraph = true;\n\t\tif (!args.height) this.heightFromGraph = true;\n\n\t\tif (this.widthFromGraph || this.heightFromGraph) {\n\t\t\tthis.graphs[0].onConfigure(function () {\n\t\t\t\tthis.configure(args); this.render();\n\t\t\t}.bind(this));\n\t\t}\n\n\t\targs.width = args.width || this.graphs[0].width || this.defaults.width;\n\t\targs.height = args.height || this.graphs[0].height * this.heightRatio || this.defaults.height;\n\n\t\tthis.configure(args);\n\t\tthis.render();\n\t},\n\n\tonSlide: function(callback) {\n\t\tthis.slideCallbacks.push(callback);\n\t},\n\n\tonConfigure: function(callback) {\n\t\tthis.configureCallbacks.push(callback);\n\t},\n\n\tconfigure: function(args) {\n\n\t\tthis.config = this.config || {};\n\n\t\tthis.configureCallbacks.forEach(function(callback) {\n\t\t\tcallback(args);\n\t\t});\n\n\t\tRickshaw.keys(this.defaults).forEach(function(k) {\n\t\t\tthis.config[k] = k in args ? args[k]\n\t\t\t\t: k in this.config ? this.config[k]\n\t\t\t\t: this.defaults[k];\n\t\t}, this);\n\n\t\tif ('width' in args || 'height' in args) {\n\n\t\t\tif (this.widthFromGraph) {\n\t\t\t\tthis.config.width = this.graphs[0].width;\n\t\t\t}\n\n\t\t\tif (this.heightFromGraph) {\n\t\t\t\tthis.config.height = this.graphs[0].height * this.heightRatio;\n\t\t\t\tthis.previewHeight = this.config.height;\n\t\t\t}\n\n\t\t\tthis.previews.forEach(function(preview) {\n\n\t\t\t\tvar height = this.previewHeight / this.graphs.length - this.config.frameTopThickness * 2;\n\t\t\t\tvar width = this.config.width - this.config.frameHandleThickness * 2;\n\t\t\t\tpreview.setSize({ width: width, height: height });\n\n\t\t\t\tif (this.svg) {\n\t\t\t\t\tvar svgHeight = height + this.config.frameHandleThickness * 2;\n\t\t\t\t\tvar svgWidth = width + this.config.frameHandleThickness * 2;\n\t\t\t\t\tthis.svg.style(\"width\", svgWidth + \"px\");\n\t\t\t\t\tthis.svg.style(\"height\", svgHeight + \"px\");\n\t\t\t\t}\n\t\t\t}, this);\n\t\t}\n\t},\n\n\trender: function() {\n\n\t\tvar self = this;\n\n\t\tthis.svg = d3.select(this.element)\n\t\t\t.selectAll(\"svg.rickshaw_range_slider_preview\")\n\t\t\t.data([null]);\n\n\t\tthis.previewHeight = this.config.height - (this.config.frameTopThickness * 2);\n\t\tthis.previewWidth = this.config.width - (this.config.frameHandleThickness * 2);\n\n\t\tthis.currentFrame = [0, this.previewWidth];\n\n\t\tvar buildGraph = function(parent, index) {\n\n\t\t\tvar graphArgs = Rickshaw.extend({}, parent.config);\n\t\t\tvar height = self.previewHeight / self.graphs.length;\n\t\t\tvar renderer = parent.renderer.name;\n\n\t\t\tRickshaw.extend(graphArgs, {\n\t\t\t\telement: this.appendChild(document.createElement(\"div\")),\n\t\t\t\theight: height,\n\t\t\t\twidth: self.previewWidth,\n\t\t\t\tseries: parent.series,\n\t\t\t\trenderer: renderer\n\t\t\t});\n\n\t\t\tvar graph = new Rickshaw.Graph(graphArgs);\n\t\t\tself.previews.push(graph);\n\n\t\t\tparent.onUpdate(function() { graph.render(); self.render() });\n\n\t\t\tparent.onConfigure(function(args) { \n\t\t\t\t// don't propagate height\n\t\t\t\tdelete args.height;\n\t\t\t\targs.width = args.width - self.config.frameHandleThickness * 2;\n\t\t\t\tgraph.configure(args);\n\t\t\t\tgraph.render();\n\t\t\t});\n\n\t\t\tgraph.render();\n\t\t};\n\n\t\tvar graphContainer = d3.select(this.element)\n\t\t\t.selectAll(\"div.rickshaw_range_slider_preview_container\")\n\t\t\t.data(this.graphs);\n\n\t\tvar translateCommand = \"translate(\" +\n\t\t\tthis.config.frameHandleThickness + \"px, \" +\n\t\t\tthis.config.frameTopThickness + \"px)\";\n\n\t\tgraphContainer.enter()\n\t\t\t.append(\"div\")\n\t\t\t.classed(\"rickshaw_range_slider_preview_container\", true)\n\t\t\t.style(\"-webkit-transform\", translateCommand)\n\t\t\t.style(\"-moz-transform\", translateCommand)\n\t\t\t.style(\"-ms-transform\", translateCommand)\n\t\t\t.style(\"transform\", translateCommand)\n\t\t\t.each(buildGraph);\n\n\t\tgraphContainer.exit()\n\t\t\t.remove();\n\n\t\t// Use the first graph as the \"master\" for the frame state\n\t\tvar masterGraph = this.graphs[0];\n\n\t\tvar domainScale = d3.scale.linear()\n\t\t\t.domain([0, this.previewWidth])\n\t\t\t.range(masterGraph.dataDomain());\n\n\t\tvar currentWindow = [masterGraph.window.xMin, masterGraph.window.xMax];\n\n\t\tthis.currentFrame[0] = currentWindow[0] === undefined ? \n\t\t\t0 : Math.round(domainScale.invert(currentWindow[0]));\n\n\t\tif (this.currentFrame[0] < 0) this.currentFrame[0] = 0;\n\n\t\tthis.currentFrame[1] = currentWindow[1] === undefined ?\n\t\t\tthis.previewWidth : domainScale.invert(currentWindow[1]);\n\n\t\tif (this.currentFrame[1] - this.currentFrame[0] < self.config.minimumFrameWidth) {\n\t\t\tthis.currentFrame[1] = (this.currentFrame[0] || 0) + self.config.minimumFrameWidth;\n\t\t}\n\n\t\tthis.svg.enter()\n\t\t\t.append(\"svg\")\n\t\t\t.classed(\"rickshaw_range_slider_preview\", true)\n\t\t\t.style(\"height\", this.config.height + \"px\")\n\t\t\t.style(\"width\", this.config.width + \"px\")\n\t\t\t.style(\"position\", \"absolute\")\n\t\t\t.style(\"top\", 0);\n\n\t\tthis._renderDimming();\n\t\tthis._renderFrame();\n\t\tthis._renderGrippers();\n\t\tthis._renderHandles();\n\t\tthis._renderMiddle();\n\n\t\tthis._registerMouseEvents();\n\t},\n\n\t_renderDimming: function() {\n\n\t\tvar element = this.svg\n\t\t\t.selectAll(\"path.dimming\")\n\t\t\t.data([null]);\n\n\t\telement.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"fill\", \"white\")\n\t\t\t.attr(\"fill-opacity\", \"0.7\")\n\t\t\t.attr(\"fill-rule\", \"evenodd\")\n\t\t\t.classed(\"dimming\", true);\n\n\t\tvar path = \"\";\n\t\tpath += \" M \" + this.config.frameHandleThickness + \" \" + this.config.frameTopThickness;\n\t\tpath += \" h \" + this.previewWidth;\n\t\tpath += \" v \" + this.previewHeight;\n\t\tpath += \" h \" + -this.previewWidth;\n\t\tpath += \" z \";\n\t\tpath += \" M \" + Math.max(this.currentFrame[0], this.config.frameHandleThickness) + \" \" + this.config.frameTopThickness;\n\t\tpath += \" H \" + Math.min(this.currentFrame[1] + this.config.frameHandleThickness * 2, this.previewWidth + this.config.frameHandleThickness);\n\t\tpath += \" v \" + this.previewHeight;\n\t\tpath += \" H \" + Math.max(this.currentFrame[0], this.config.frameHandleThickness);\n\t\tpath += \" z\";\n\n\t\telement.attr(\"d\", path);\n\t},\n\n\t_renderFrame: function() {\n\n\t\tvar element = this.svg\n\t\t\t.selectAll(\"path.frame\")\n\t\t\t.data([null]);\n\n\t\telement.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"stroke\", \"white\")\n\t\t\t.attr(\"stroke-width\", \"1px\")\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"fill\", this.config.frameColor)\n\t\t\t.attr(\"fill-opacity\", this.config.frameOpacity)\n\t\t\t.attr(\"fill-rule\", \"evenodd\")\n\t\t\t.classed(\"frame\", true);\n\n\t\tvar path = \"\";\n\t\tpath += \" M \" + this.currentFrame[0] + \" 0\";\n\t\tpath += \" H \" + (this.currentFrame[1] + (this.config.frameHandleThickness * 2));\n\t\tpath += \" V \" + this.config.height;\n\t\tpath += \" H \" + (this.currentFrame[0]);\n\t\tpath += \" z\";\n\t\tpath += \" M \" + (this.currentFrame[0] + this.config.frameHandleThickness) + \" \" + this.config.frameTopThickness;\n\t\tpath += \" H \" + (this.currentFrame[1] + this.config.frameHandleThickness);\n\t\tpath += \" v \" + this.previewHeight;\n\t\tpath += \" H \" + (this.currentFrame[0] + this.config.frameHandleThickness);\n\t\tpath += \" z\";\n\n\t\telement.attr(\"d\", path);\n\t},\n\n\t_renderGrippers: function() {\n\n\t\tvar gripper = this.svg.selectAll(\"path.gripper\")\n\t\t\t.data([null]);\n\n\t\tgripper.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"stroke\", this.config.gripperColor)\n\t\t\t.classed(\"gripper\", true);\n\n\t\tvar path = \"\";\n\n\t\t[0.4, 0.6].forEach(function(spacing) {\n\t\t\tpath += \" M \" + Math.round((this.currentFrame[0] + (this.config.frameHandleThickness * spacing))) + \" \" + Math.round(this.config.height * 0.3);\n\t\t\tpath += \" V \" + Math.round(this.config.height * 0.7);\n\t\t\tpath += \" M \" + Math.round((this.currentFrame[1] + (this.config.frameHandleThickness * (1 + spacing)))) + \" \" + Math.round(this.config.height * 0.3);\n\t\t\tpath += \" V \" + Math.round(this.config.height * 0.7);\n\t\t}.bind(this));\n\n\t\tgripper.attr(\"d\", path);\n\t},\n\n\t_renderHandles: function() {\n\n\t\tvar leftHandle = this.svg.selectAll(\"rect.left_handle\")\n\t\t\t.data([null]);\n\n\t\tleftHandle.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr('width', this.config.frameHandleThickness)\n\t\t\t.style(\"cursor\", \"ew-resize\")\n\t\t\t.style(\"fill-opacity\", \"0\")\n\t\t\t.classed(\"left_handle\", true);\n\n\t\tleftHandle\n\t\t\t.attr('x', this.currentFrame[0])\n\t\t\t.attr('height', this.config.height);\n\n\t\tvar rightHandle = this.svg.selectAll(\"rect.right_handle\")\n\t\t\t.data([null]);\n\n\t\trightHandle.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr('width', this.config.frameHandleThickness)\n\t\t\t.style(\"cursor\", \"ew-resize\")\n\t\t\t.style(\"fill-opacity\", \"0\")\n\t\t\t.classed(\"right_handle\", true);\n\n\t\trightHandle\n\t\t\t.attr('x', this.currentFrame[1] + this.config.frameHandleThickness)\n\t\t\t.attr('height', this.config.height);\n\t},\n\n\t_renderMiddle: function() {\n\n\t\tvar middleHandle = this.svg.selectAll(\"rect.middle_handle\")\n\t\t\t.data([null]);\n\n\t\tmiddleHandle.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.style(\"cursor\", \"move\")\n\t\t\t.style(\"fill-opacity\", \"0\")\n\t\t\t.classed(\"middle_handle\", true);\n\n\t\tmiddleHandle\n\t\t\t.attr('width', Math.max(0, this.currentFrame[1] - this.currentFrame[0]))\n\t\t\t.attr('x', this.currentFrame[0] + this.config.frameHandleThickness)\n\t\t\t.attr('height', this.config.height);\n\t},\n\n\t_registerMouseEvents: function() {\n\n\t\tvar element = d3.select(this.element);\n\n\t\tvar drag = {\n\t\t\ttarget: null,\n\t\t\tstart: null,\n\t\t\tstop: null,\n\t\t\tleft: false,\n\t\t\tright: false,\n\t\t\trigid: false\n\t\t};\n\n\t\tvar self = this;\n\n\t\tfunction onMousemove(datum, index) {\n\n\t\t\tdrag.stop = self._getClientXFromEvent(d3.event, drag);\n\t\t\tvar distanceTraveled = drag.stop - drag.start;\n\t\t\tvar frameAfterDrag = self.frameBeforeDrag.slice(0);\n\t\t\tvar minimumFrameWidth = self.config.minimumFrameWidth;\n\n\t\t\tif (drag.rigid) {\n\t\t\t\tminimumFrameWidth = self.frameBeforeDrag[1] - self.frameBeforeDrag[0];\n\t\t\t}\n\t\t\tif (drag.left) {\n\t\t\t\tframeAfterDrag[0] = Math.max(frameAfterDrag[0] + distanceTraveled, 0);\n\t\t\t}\n\t\t\tif (drag.right) {\n\t\t\t\tframeAfterDrag[1] = Math.min(frameAfterDrag[1] + distanceTraveled, self.previewWidth);\n\t\t\t}\n\n\t\t\tvar currentFrameWidth = frameAfterDrag[1] - frameAfterDrag[0];\n\n\t\t\tif (currentFrameWidth <= minimumFrameWidth) {\n\n\t\t\t\tif (drag.left) {\n\t\t\t\t\tframeAfterDrag[0] = frameAfterDrag[1] - minimumFrameWidth;\n\t\t\t\t}\n\t\t\t\tif (drag.right) {\n\t\t\t\t\tframeAfterDrag[1] = frameAfterDrag[0] + minimumFrameWidth;\n\t\t\t\t}\n\t\t\t\tif (frameAfterDrag[0] <= 0) {\n\t\t\t\t\tframeAfterDrag[1] -= frameAfterDrag[0];\n\t\t\t\t\tframeAfterDrag[0] = 0;\n\t\t\t\t}\n\t\t\t\tif (frameAfterDrag[1] >= self.previewWidth) {\n\t\t\t\t\tframeAfterDrag[0] -= (frameAfterDrag[1] - self.previewWidth);\n\t\t\t\t\tframeAfterDrag[1] = self.previewWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.graphs.forEach(function(graph) {\n\n\t\t\t\tvar domainScale = d3.scale.linear()\n\t\t\t\t\t.interpolate(d3.interpolateNumber)\n\t\t\t\t\t.domain([0, self.previewWidth])\n\t\t\t\t\t.range(graph.dataDomain());\n\n\t\t\t\tvar windowAfterDrag = [\n\t\t\t\t\tdomainScale(frameAfterDrag[0]),\n\t\t\t\t\tdomainScale(frameAfterDrag[1])\n\t\t\t\t];\n\n\t\t\t\tself.slideCallbacks.forEach(function(callback) {\n\t\t\t\t\tcallback(graph, windowAfterDrag[0], windowAfterDrag[1]);\n\t\t\t\t});\n\n\t\t\t\tif (frameAfterDrag[0] === 0) {\n\t\t\t\t\twindowAfterDrag[0] = undefined;\n\t\t\t\t}\n\t\t\t\tif (frameAfterDrag[1] === self.previewWidth) {\n\t\t\t\t\twindowAfterDrag[1] = undefined;\n\t\t\t\t}\n\t\t\t\tgraph.window.xMin = windowAfterDrag[0];\n\t\t\t\tgraph.window.xMax = windowAfterDrag[1];\n\n\t\t\t\tgraph.update();\n\t\t\t});\n\t\t}\n\n\t\tfunction onMousedown() {\n\t\t\tdrag.target = d3.event.target;\n\t\t\tdrag.start = self._getClientXFromEvent(d3.event, drag);\n\t\t\tself.frameBeforeDrag = self.currentFrame.slice();\n\t\t\td3.event.preventDefault ? d3.event.preventDefault() : d3.event.returnValue = false;\n\t\t\td3.select(document).on(\"mousemove.rickshaw_range_slider_preview\", onMousemove);\n\t\t\td3.select(document).on(\"mouseup.rickshaw_range_slider_preview\", onMouseup);\n\t\t\td3.select(document).on(\"touchmove.rickshaw_range_slider_preview\", onMousemove);\n\t\t\td3.select(document).on(\"touchend.rickshaw_range_slider_preview\", onMouseup);\n\t\t\td3.select(document).on(\"touchcancel.rickshaw_range_slider_preview\", onMouseup);\n\t\t}\n\n\t\tfunction onMousedownLeftHandle(datum, index) {\n\t\t\tdrag.left = true;\n\t\t\tonMousedown();\n\t\t}\n\n\t\tfunction onMousedownRightHandle(datum, index) {\n\t\t\tdrag.right = true;\n\t\t\tonMousedown();\n\t\t}\n\n\t\tfunction onMousedownMiddleHandle(datum, index) {\n\t\t\tdrag.left = true;\n\t\t\tdrag.right = true;\n\t\t\tdrag.rigid = true;\n\t\t\tonMousedown();\n\t\t}\n\n\t\tfunction onMouseup(datum, index) {\n\t\t\td3.select(document).on(\"mousemove.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"mouseup.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"touchmove.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"touchend.rickshaw_range_slider_preview\", null);\n\t\t\td3.select(document).on(\"touchcancel.rickshaw_range_slider_preview\", null);\n\t\t\tdelete self.frameBeforeDrag;\n\t\t\tdrag.left = false;\n\t\t\tdrag.right = false;\n\t\t\tdrag.rigid = false;\n\t\t}\n\n\t\telement.select(\"rect.left_handle\").on(\"mousedown\", onMousedownLeftHandle);\n\t\telement.select(\"rect.right_handle\").on(\"mousedown\", onMousedownRightHandle);\n\t\telement.select(\"rect.middle_handle\").on(\"mousedown\", onMousedownMiddleHandle);\n\t\telement.select(\"rect.left_handle\").on(\"touchstart\", onMousedownLeftHandle);\n\t\telement.select(\"rect.right_handle\").on(\"touchstart\", onMousedownRightHandle);\n\t\telement.select(\"rect.middle_handle\").on(\"touchstart\", onMousedownMiddleHandle);\n\t},\n\n\t_getClientXFromEvent: function(event, drag) {\n\n\t\tswitch (event.type) {\n\t\t\tcase 'touchstart':\n\t\t\tcase 'touchmove':\n\t\t\t\tvar touchList = event.changedTouches;\n\t\t\t\tvar touch = null;\n\t\t\t\tfor (var touchIndex = 0; touchIndex < touchList.length; touchIndex++) {\n\t\t\t\t\tif (touchList[touchIndex].target === drag.target) {\n\t\t\t\t\t\ttouch = touchList[touchIndex];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn touch !== null ? touch.clientX : undefined;\n\n\t\t\tdefault:\n\t\t\t\treturn event.clientX;\n\t\t}\n\t}\n});\n\nRickshaw.namespace(\"Rickshaw.Graph.Renderer\");\n\nRickshaw.Graph.Renderer = Rickshaw.Class.create( {\n\n\tinitialize: function(args) {\n\t\tthis.graph = args.graph;\n\t\tthis.tension = args.tension || this.tension;\n\t\tthis.configure(args);\n\t},\n\n\tseriesPathFactory: function() {\n\t\t//implement in subclass\n\t},\n\n\tseriesStrokeFactory: function() {\n\t\t// implement in subclass\n\t},\n\n\tdefaults: function() {\n\t\treturn {\n\t\t\ttension: 0.8,\n\t\t\tstrokeWidth: 2,\n\t\t\tunstack: true,\n\t\t\tpadding: { top: 0.01, right: 0, bottom: 0.01, left: 0 },\n\t\t\tstroke: false,\n\t\t\tfill: false,\n\t\t\topacity: 1\n\t\t};\n\t},\n\n\tdomain: function(data) {\n\t\t// Requires that at least one series contains some data\n\t\tvar stackedData = data || this.graph.stackedData || this.graph.stackData();\n\n\t\t// filter out any series that may be empty in the current x-domain\n\t\tstackedData = stackedData.filter(function (a) { return a && a.length !== 0; });\n\n\t\tvar xMin = +Infinity;\n\t\tvar xMax = -Infinity;\n\n\t\tvar yMin = +Infinity;\n\t\tvar yMax = -Infinity;\n\n\t\tstackedData.forEach( function(series) {\n\n\t\t\tseries.forEach( function(d) {\n\n\t\t\t\tif (d.y == null) return;\n\n\t\t\t\tvar y = d.y + d.y0;\n\n\t\t\t\tif (y < yMin) yMin = y;\n\t\t\t\tif (y > yMax) yMax = y;\n\t\t\t} );\n\n\t\t\tif (!series.length) return;\n\n\t\t\tif (series[0].x < xMin) xMin = series[0].x;\n\t\t\tif (series[series.length - 1].x > xMax) xMax = series[series.length - 1].x;\n\t\t} );\n\n\t\txMin -= (xMax - xMin) * this.padding.left;\n\t\txMax += (xMax - xMin) * this.padding.right;\n\n\t\tyMin = this.graph.min === 'auto' ? yMin : this.graph.min || 0;\n\t\tyMax = this.graph.max === undefined ? yMax : this.graph.max;\n\n\t\tif (this.graph.min === 'auto' || yMin < 0) {\n\t\t\tyMin -= (yMax - yMin) * this.padding.bottom;\n\t\t}\n\n\t\tif (this.graph.max === undefined) {\n\t\t\tyMax += (yMax - yMin) * this.padding.top;\n\t\t}\n\n\t\treturn { x: [xMin, xMax], y: [yMin, yMax] };\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\t\tvar series = args.series || graph.series;\n\n\t\tvar vis = args.vis || graph.vis;\n\t\tvis.selectAll('*').remove();\n\n\t\tvar data = series\n\t\t\t.filter(function(s) { return !s.disabled })\n\t\t\t.map(function(s) { return s.stack });\n\n\t\tvar pathNodes = vis.selectAll(\"path.path\")\n\t\t\t.data(data)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.classed('path', true)\n\t\t\t.attr(\"d\", this.seriesPathFactory());\n\n\t\tif (this.stroke) {\n                        var strokeNodes = vis.selectAll('path.stroke')\n                                .data(data)\n                                .enter().append(\"svg:path\")\n\t\t\t\t.classed('stroke', true)\n\t\t\t\t.attr(\"d\", this.seriesStrokeFactory());\n\t\t}\n\n\t\tvar i = 0;\n\t\tseries.forEach( function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.path = pathNodes[0][i];\n\t\t\tif (this.stroke) series.stroke = strokeNodes[0][i];\n\t\t\tthis._styleSeries(series);\n\t\t\ti++;\n\t\t}, this );\n\n\t},\n\n\t_styleSeries: function(series) {\n\n\t\tvar fill = this.fill ? series.color : 'none';\n\t\tvar stroke = this.stroke ? series.color : 'none';\n\t\tvar strokeWidth = series.strokeWidth ? series.strokeWidth : this.strokeWidth;\n\t\tvar opacity = series.opacity === undefined ? this.opacity : series.opacity;\n\n\t\tseries.path.setAttribute('fill', fill);\n\t\tseries.path.setAttribute('stroke', stroke);\n\t\tseries.path.setAttribute('stroke-width', strokeWidth);\n\t\tseries.path.setAttribute('opacity', opacity);\n\n\t\tif (series.className) {\n\t\t\td3.select(series.path).classed(series.className, true);\n\t\t}\n\t\tif (series.className && this.stroke) {\n\t\t\td3.select(series.stroke).classed(series.className, true);\n\t\t}\n\t},\n\n\tconfigure: function(args) {\n\n\t\targs = args || {};\n\n\t\tRickshaw.keys(this.defaults()).forEach( function(key) {\n\n\t\t\tif (!args.hasOwnProperty(key)) {\n\t\t\t\tthis[key] = this[key] || this.graph[key] || this.defaults()[key];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof this.defaults()[key] == 'object') {\n\n\t\t\t\tRickshaw.keys(this.defaults()[key]).forEach( function(k) {\n\n\t\t\t\t\tthis[key][k] =\n\t\t\t\t\t\targs[key][k] !== undefined ? args[key][k] :\n\t\t\t\t\t\tthis[key][k] !== undefined ? this[key][k] :\n\t\t\t\t\t\tthis.defaults()[key][k];\n\t\t\t\t}, this );\n\n\t\t\t} else {\n\t\t\t\tthis[key] =\n\t\t\t\t\targs[key] !== undefined ? args[key] :\n\t\t\t\t\tthis[key] !== undefined ? this[key] :\n\t\t\t\t\tthis.graph[key] !== undefined ? this.graph[key] :\n\t\t\t\t\tthis.defaults()[key];\n\t\t\t}\n\n\t\t}, this );\n\t},\n\n\tsetStrokeWidth: function(strokeWidth) {\n\t\tif (strokeWidth !== undefined) {\n\t\t\tthis.strokeWidth = strokeWidth;\n\t\t}\n\t},\n\n\tsetTension: function(tension) {\n\t\tif (tension !== undefined) {\n\t\t\tthis.tension = tension;\n\t\t}\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.Renderer.Line');\n\nRickshaw.Graph.Renderer.Line = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'line',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: false,\n\t\t\tstroke: true\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.line()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y( function(d) { return graph.y(d.y) } )\n\t\t\t.interpolate(this.graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.Stack');\n\nRickshaw.Graph.Renderer.Stack = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'stack',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tfill: true,\n\t\t\tstroke: false,\n\t\t\tunstack: false\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.area()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y0( function(d) { return graph.y(d.y0) } )\n\t\t\t.y1( function(d) { return graph.y(d.y + d.y0) } )\n\t\t\t.interpolate(this.graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.Bar');\n\nRickshaw.Graph.Renderer.Bar = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'bar',\n\n\tdefaults: function($super) {\n\n\t\tvar defaults = Rickshaw.extend( $super(), {\n\t\t\tgapSize: 0.05,\n\t\t\tunstack: false,\n\t\t\topacity: 1.0\n\t\t} );\n\n\t\tdelete defaults.tension;\n\t\treturn defaults;\n\t},\n\n\tinitialize: function($super, args) {\n\t\targs = args || {};\n\t\tthis.gapSize = args.gapSize || this.gapSize;\n\t\t$super(args);\n\t},\n\n\tdomain: function($super) {\n\n\t\tvar domain = $super();\n\n\t\tvar frequentInterval = this._frequentInterval(this.graph.stackedData.slice(-1).shift());\n\t\tdomain.x[1] += Number(frequentInterval.magnitude);\n\n\t\treturn domain;\n\t},\n\n\tbarWidth: function(series) {\n\n\t\tvar frequentInterval = this._frequentInterval(series.stack);\n\t\tvar barWidth = this.graph.x.magnitude(frequentInterval.magnitude) * (1 - this.gapSize);\n\n\t\treturn barWidth;\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\t\tvar series = args.series || graph.series;\n\n\t\tvar vis = args.vis || graph.vis;\n\t\tvis.selectAll('*').remove();\n\n\t\tvar barWidth = this.barWidth(series.active()[0]);\n\t\tvar barXOffset = 0;\n\n\t\tvar activeSeriesCount = series.filter( function(s) { return !s.disabled; } ).length;\n\t\tvar seriesBarWidth = this.unstack ? barWidth / activeSeriesCount : barWidth;\n\n\t\tvar transform = function(d) {\n\t\t\t// add a matrix transform for negative values\n\t\t\tvar matrix = [ 1, 0, 0, (d.y < 0 ? -1 : 1), 0, (d.y < 0 ? graph.y.magnitude(Math.abs(d.y)) * 2 : 0) ];\n\t\t\treturn \"matrix(\" + matrix.join(',') + \")\";\n\t\t};\n\n\t\tseries.forEach( function(series) {\n\n\t\t\tif (series.disabled) return;\n\n\t\t\tvar barWidth = this.barWidth(series);\n\n\t\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t\t.data(series.stack.filter( function(d) { return d.y !== null } ))\n\t\t\t\t.enter().append(\"svg:rect\")\n\t\t\t\t.attr(\"x\", function(d) { return graph.x(d.x) + barXOffset })\n\t\t\t\t.attr(\"y\", function(d) { return (graph.y(d.y0 + Math.abs(d.y))) * (d.y < 0 ? -1 : 1 ) })\n\t\t\t\t.attr(\"width\", seriesBarWidth)\n\t\t\t\t.attr(\"height\", function(d) { return graph.y.magnitude(Math.abs(d.y)) })\n\t\t\t\t.attr(\"opacity\", series.opacity)\n\t\t\t\t.attr(\"transform\", transform);\n\n\t\t\tArray.prototype.forEach.call(nodes[0], function(n) {\n\t\t\t\tn.setAttribute('fill', series.color);\n\t\t\t} );\n\n\t\t\tif (this.unstack) barXOffset += seriesBarWidth;\n\n\t\t}, this );\n\t},\n\n\t_frequentInterval: function(data) {\n\n\t\tvar intervalCounts = {};\n\n\t\tfor (var i = 0; i < data.length - 1; i++) {\n\t\t\tvar interval = data[i + 1].x - data[i].x;\n\t\t\tintervalCounts[interval] = intervalCounts[interval] || 0;\n\t\t\tintervalCounts[interval]++;\n\t\t}\n\n\t\tvar frequentInterval = { count: 0, magnitude: 1 };\n\t\t\n\t\t// Sorting object's keys returned to guarantee consistency when iterating over\n\t\t// Keys order in `for .. in` loop is not specified and browsers behave differently here\n\t\t// This results with different interval value being calculated for different browsers\n\t\t// See last but one section here: http://www.ecma-international.org/ecma-262/5.1/#sec-12.6.4\n\t\tvar keysSorted = Rickshaw.keys(intervalCounts).sort(function asc(a, b) { return Number(a) - Number(b); });\n\t\tkeysSorted.forEach( function(i) {\n\t\t\tif (frequentInterval.count < intervalCounts[i]) {\n\t\t\t\tfrequentInterval = {\n\t\t\t\t\tcount: intervalCounts[i],\n\t\t\t\t\tmagnitude: i\n\t\t\t\t};\n\t\t\t}\n\t\t} );\n\n\t\treturn frequentInterval;\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.Area');\n\nRickshaw.Graph.Renderer.Area = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'area',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: false,\n\t\t\tfill: false,\n\t\t\tstroke: false\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.area()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y0( function(d) { return graph.y(d.y0) } )\n\t\t\t.y1( function(d) { return graph.y(d.y + d.y0) } )\n\t\t\t.interpolate(graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t},\n\n\tseriesStrokeFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.line()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y( function(d) { return graph.y(d.y + d.y0) } )\n\t\t\t.interpolate(graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\t\tvar series = args.series || graph.series;\n\n\t\tvar vis = args.vis || graph.vis;\n\t\tvis.selectAll('*').remove();\n\n\t\t// insert or stacked areas so strokes lay on top of areas\n\t\tvar method = this.unstack ? 'append' : 'insert';\n\n\t\tvar data = series\n\t\t\t.filter(function(s) { return !s.disabled })\n\t\t\t.map(function(s) { return s.stack });\n\n\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t.data(data)\n\t\t\t.enter()[method](\"svg:g\", 'g');\n\n\t\tnodes.append(\"svg:path\")\n\t\t\t.attr(\"d\", this.seriesPathFactory())\n\t\t\t.attr(\"class\", 'area');\n\n\t\tif (this.stroke) {\n\t\t\tnodes.append(\"svg:path\")\n\t\t\t\t.attr(\"d\", this.seriesStrokeFactory())\n\t\t\t\t.attr(\"class\", 'line');\n\t\t}\n\n\t\tvar i = 0;\n\t\tseries.forEach( function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.path = nodes[0][i++];\n\t\t\tthis._styleSeries(series);\n\t\t}, this );\n\t},\n\n\t_styleSeries: function(series) {\n\n\t\tif (!series.path) return;\n\n\t\td3.select(series.path).select('.area')\n\t\t\t.attr('fill', series.color);\n\n\t\tif (this.stroke) {\n\t\t\td3.select(series.path).select('.line')\n\t\t\t\t.attr('fill', 'none')\n\t\t\t\t.attr('stroke', series.stroke || d3.interpolateRgb(series.color, 'black')(0.125))\n\t\t\t\t.attr('stroke-width', this.strokeWidth);\n\t\t}\n\n\t\tif (series.className) {\n\t\t\tseries.path.setAttribute('class', series.className);\n\t\t}\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Renderer.ScatterPlot');\n\nRickshaw.Graph.Renderer.ScatterPlot = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'scatterplot',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: true,\n\t\t\tstroke: false,\n\t\t\tpadding:{ top: 0.01, right: 0.01, bottom: 0.01, left: 0.01 },\n\t\t\tdotSize: 4\n\t\t} );\n\t},\n\n\tinitialize: function($super, args) {\n\t\t$super(args);\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\n\t\tvar series = args.series || graph.series;\n\t\tvar vis = args.vis || graph.vis;\n\n\t\tvar dotSize = this.dotSize;\n\n\t\tvis.selectAll('*').remove();\n\n\t\tseries.forEach( function(series) {\n\n\t\t\tif (series.disabled) return;\n\t\t\tvar opacity = series.opacity === undefined ? 1 : series.opacity;\n\n\t\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t\t.data(series.stack.filter( function(d) { return d.y !== null } ))\n\t\t\t\t.enter().append(\"svg:circle\")\n\t\t\t\t\t.attr(\"cx\", function(d) { return graph.x(d.x) })\n\t\t\t\t\t.attr(\"cy\", function(d) { return graph.y(d.y) })\n\t\t\t\t\t.attr(\"r\", function(d) { return (\"r\" in d) ? d.r : dotSize})\n\t\t\t\t\t.attr(\"opacity\", function(d) { return (\"opacity\" in d) ? d.opacity : opacity});\n\t\t\tif (series.className) {\n\t\t\t\tnodes.classed(series.className, true);\n\t\t\t}\n\n\t\t\tArray.prototype.forEach.call(nodes[0], function(n) {\n\t\t\t\tn.setAttribute('fill', series.color);\n\t\t\t} );\n\n\t\t}, this );\n\t}\n} );\nRickshaw.namespace('Rickshaw.Graph.Renderer.Multi');\n\nRickshaw.Graph.Renderer.Multi = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'multi',\n\n\tinitialize: function($super, args) {\n\n\t\t$super(args);\n\t},\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: false,\n\t\t\tstroke: true \n\t\t} );\n\t},\n\n\tconfigure: function($super, args) {\n\n\t\targs = args || {};\n\t\tthis.config = args;\n\t\t$super(args);\n\t},\n\n\tdomain: function($super) {\n\n\t\tthis.graph.stackData();\n\n\t\tvar domains = [];\n\n\t\tvar groups = this._groups();\n\t\tthis._stack(groups);\n\n\t\tgroups.forEach( function(group) {\n\n\t\t\tvar data = group.series\n\t\t\t\t.filter( function(s) { return !s.disabled } )\n\t\t\t\t.map( function(s) { return s.stack });\n\n\t\t\tif (!data.length) return;\n\t\t\t\n\t\t\tvar domain = null;\n\t\t\tif (group.renderer && group.renderer.domain) {\n\t\t\t\tdomain = group.renderer.domain(data);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdomain = $super(data);\n\t\t\t}\n\t\t\tdomains.push(domain);\n\t\t});\n\n\t\tvar xMin = d3.min(domains.map( function(d) { return d.x[0] } ));\n\t\tvar xMax = d3.max(domains.map( function(d) { return d.x[1] } ));\n\t\tvar yMin = d3.min(domains.map( function(d) { return d.y[0] } ));\n\t\tvar yMax = d3.max(domains.map( function(d) { return d.y[1] } ));\n\n\t\treturn { x: [xMin, xMax], y: [yMin, yMax] };\n\t},\n\n\t_groups: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar renderGroups = {};\n\n\t\tgraph.series.forEach( function(series) {\n\n\t\t\tif (series.disabled) return;\n\n\t\t\tif (!renderGroups[series.renderer]) {\n\n\t\t\t\tvar ns = \"http://www.w3.org/2000/svg\";\n\t\t\t\tvar vis = document.createElementNS(ns, 'g');\n\n\t\t\t\tgraph.vis[0][0].appendChild(vis);\n\n\t\t\t\tvar renderer = graph._renderers[series.renderer];\n\n\t\t\t\tvar config = {};\n\n\t\t\t\tvar defaults = [ this.defaults(), renderer.defaults(), this.config, this.graph ];\n\t\t\t\tdefaults.forEach(function(d) { Rickshaw.extend(config, d) });\n\n\t\t\t\trenderer.configure(config);\n\n\t\t\t\trenderGroups[series.renderer] = {\n\t\t\t\t\trenderer: renderer,\n\t\t\t\t\tseries: [],\n\t\t\t\t\tvis: d3.select(vis)\n\t\t\t\t};\n\t\t\t}\n\t\t\t\t\n\t\t\trenderGroups[series.renderer].series.push(series);\n\n\t\t}, this);\n\n\t\tvar groups = [];\n\n\t\tObject.keys(renderGroups).forEach( function(key) {\n\t\t\tvar group = renderGroups[key];\n\t\t\tgroups.push(group);\n\t\t});\n\n\t\treturn groups;\n\t},\n\n\t_stack: function(groups) {\n\n\t\tgroups.forEach( function(group) {\n\n\t\t\tvar series = group.series\n\t\t\t\t.filter( function(series) { return !series.disabled } );\n\n\t\t\tvar data = series\n\t\t\t\t.map( function(series) { return series.stack } );\n\n\t\t\tif (!group.renderer.unstack) {\n\n\t\t\t\tvar layout = d3.layout.stack();\n\t\t\t\tvar stackedData = Rickshaw.clone(layout(data));\n\n\t\t\t\tseries.forEach( function(series, index) {\n\t\t\t\t\tseries._stack = Rickshaw.clone(stackedData[index]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn groups;\n\n\t},\n\n\trender: function() {\n\n\t\tthis.graph.series.forEach( function(series) {\n\t\t\tif (!series.renderer) {\n\t\t\t\tthrow new Error(\"Each series needs a renderer for graph 'multi' renderer\");\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.vis.selectAll('*').remove();\n\n\t\tvar groups = this._groups();\n\t\tgroups = this._stack(groups);\n\n\t\tgroups.forEach( function(group) {\n\n\t\t\tvar series = group.series\n\t\t\t\t.filter( function(series) { return !series.disabled } );\n\n\t\t\tseries.active = function() { return series };\n\n\t\t\tgroup.renderer.render({ series: series, vis: group.vis });\n\t\t\tseries.forEach(function(s) { s.stack = s._stack || s.stack || s.data; });\n\t\t});\n\t}\n\n} );\nRickshaw.namespace('Rickshaw.Graph.Renderer.LinePlot');\n\nRickshaw.Graph.Renderer.LinePlot = Rickshaw.Class.create( Rickshaw.Graph.Renderer, {\n\n\tname: 'lineplot',\n\n\tdefaults: function($super) {\n\n\t\treturn Rickshaw.extend( $super(), {\n\t\t\tunstack: true,\n\t\t\tfill: false,\n\t\t\tstroke: true,\n\t\t\tpadding:{ top: 0.01, right: 0.01, bottom: 0.01, left: 0.01 },\n\t\t\tdotSize: 3,\n\t\t\tstrokeWidth: 2\n\t\t} );\n\t},\n\n\tseriesPathFactory: function() {\n\n\t\tvar graph = this.graph;\n\n\t\tvar factory = d3.svg.line()\n\t\t\t.x( function(d) { return graph.x(d.x) } )\n\t\t\t.y( function(d) { return graph.y(d.y) } )\n\t\t\t.interpolate(this.graph.interpolation).tension(this.tension);\n\n\t\tfactory.defined && factory.defined( function(d) { return d.y !== null } );\n\t\treturn factory;\n\t},\n\n\trender: function(args) {\n\n\t\targs = args || {};\n\n\t\tvar graph = this.graph;\n\n\t\tvar series = args.series || graph.series;\n\t\tvar vis = args.vis || graph.vis;\n\n\t\tvar dotSize = this.dotSize;\n\n\t\tvis.selectAll('*').remove();\n\n\t\tvar data = series\n\t\t\t.filter(function(s) { return !s.disabled })\n\t\t\t.map(function(s) { return s.stack });\n\n\t\tvar nodes = vis.selectAll(\"path\")\n\t\t\t.data(data)\n\t\t\t.enter().append(\"svg:path\")\n\t\t\t.attr(\"d\", this.seriesPathFactory());\n\n\t\tvar i = 0;\n\t\tseries.forEach(function(series) {\n\t\t\tif (series.disabled) return;\n\t\t\tseries.path = nodes[0][i++];\n\t\t\tthis._styleSeries(series);\n\t\t}, this);\n\n\t\tseries.forEach(function(series) {\n\n\t\t\tif (series.disabled) return;\n\n\t\t\tvar nodes = vis.selectAll(\"x\")\n\t\t\t\t.data(series.stack.filter( function(d) { return d.y !== null } ))\n\t\t\t\t.enter().append(\"svg:circle\")\n\t\t\t\t.attr(\"cx\", function(d) { return graph.x(d.x) })\n\t\t\t\t.attr(\"cy\", function(d) { return graph.y(d.y) })\n\t\t\t\t.attr(\"r\", function(d) { return (\"r\" in d) ? d.r : dotSize});\n\n\t\t\tArray.prototype.forEach.call(nodes[0], function(n) {\n\t\t\t\tif (!n) return;\n\t\t\t\tn.setAttribute('data-color', series.color);\n\t\t\t\tn.setAttribute('fill', 'white');\n\t\t\t\tn.setAttribute('stroke', series.color);\n\t\t\t\tn.setAttribute('stroke-width', this.strokeWidth);\n\n\t\t\t}.bind(this));\n\n\t\t}, this);\n\t}\n} );\n\nRickshaw.namespace('Rickshaw.Graph.Smoother');\n\nRickshaw.Graph.Smoother = Rickshaw.Class.create({\n\n\tinitialize: function(args) {\n\n\t\tthis.graph = args.graph;\n\t\tthis.element = args.element;\n\t\tthis.aggregationScale = 1;\n\n\t\tthis.build();\n\n\t\tthis.graph.stackData.hooks.data.push( {\n\t\t\tname: 'smoother',\n\t\t\torderPosition: 50,\n\t\t\tf: this.transformer.bind(this)\n\t\t} );\n\t},\n\n\tbuild: function() {\n\n\t\tvar self = this;\n\t\tvar $ = jQuery;\n\n\t\tif (this.element) {\n\t\t\t$( function() {\n\t\t\t\t$(self.element).slider( {\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 100,\n\t\t\t\t\tslide: function( event, ui ) {\n\t\t\t\t\t\tself.setScale(ui.value);\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t},\n\n\tsetScale: function(scale) {\n\n\t\tif (scale < 1) {\n\t\t\tthrow \"scale out of range: \" + scale;\n\t\t}\n\n\t\tthis.aggregationScale = scale;\n\t\tthis.graph.update();\n\t},\n\n\ttransformer: function(data) {\n\n\t\tif (this.aggregationScale == 1) return data;\n\n\t\tvar aggregatedData = [];\n\n\t\tdata.forEach( function(seriesData) {\n\n\t\t\tvar aggregatedSeriesData = [];\n\n\t\t\twhile (seriesData.length) {\n\n\t\t\t\tvar avgX = 0, avgY = 0;\n\t\t\t\tvar slice = seriesData.splice(0, this.aggregationScale);\n\n\t\t\t\tslice.forEach( function(d) {\n\t\t\t\t\tavgX += d.x / slice.length;\n\t\t\t\t\tavgY += d.y / slice.length;\n\t\t\t\t} );\n\n\t\t\t\taggregatedSeriesData.push( { x: avgX, y: avgY } );\n\t\t\t}\n\n\t\t\taggregatedData.push(aggregatedSeriesData);\n\n\t\t}.bind(this) );\n\n\t\treturn aggregatedData;\n\t}\n});\n\nRickshaw.namespace('Rickshaw.Graph.Socketio');\n\nRickshaw.Graph.Socketio = Rickshaw.Class.create( Rickshaw.Graph.Ajax, {\n\trequest: function() {\n\t\tvar socket = io.connect(this.dataURL);\n\t\tvar self = this;\n\t\tsocket.on('rickshaw', function (data) {\n\t\t\tself.success(data);\n\t\t});\n\t}\n} );\nRickshaw.namespace('Rickshaw.Series');\n\nRickshaw.Series = Rickshaw.Class.create( Array, {\n\n\tinitialize: function (data, palette, options) {\n\n\t\toptions = options || {};\n\n\t\tthis.palette = new Rickshaw.Color.Palette(palette);\n\n\t\tthis.timeBase = typeof(options.timeBase) === 'undefined' ? \n\t\t\tMath.floor(new Date().getTime() / 1000) : \n\t\t\toptions.timeBase;\n\n\t\tvar timeInterval = typeof(options.timeInterval) == 'undefined' ?\n\t\t\t1000 :\n\t\t\toptions.timeInterval;\n\n\t\tthis.setTimeInterval(timeInterval);\n\n\t\tif (data && (typeof(data) == \"object\") && Array.isArray(data)) {\n\t\t\tdata.forEach( function(item) { this.addItem(item) }, this );\n\t\t}\n\t},\n\n\taddItem: function(item) {\n\n\t\tif (typeof(item.name) === 'undefined') {\n\t\t\tthrow('addItem() needs a name');\n\t\t}\n\n\t\titem.color = (item.color || this.palette.color(item.name));\n\t\titem.data = (item.data || []);\n\n\t\t// backfill, if necessary\n\t\tif ((item.data.length === 0) && this.length && (this.getIndex() > 0)) {\n\t\t\tthis[0].data.forEach( function(plot) {\n\t\t\t\titem.data.push({ x: plot.x, y: 0 });\n\t\t\t} );\n\t\t} else if (item.data.length === 0) {\n\t\t\titem.data.push({ x: this.timeBase - (this.timeInterval || 0), y: 0 });\n\t\t} \n\n\t\tthis.push(item);\n\n\t\tif (this.legend) {\n\t\t\tthis.legend.addLine(this.itemByName(item.name));\n\t\t}\n\t},\n\n\taddData: function(data, x) {\n\n\t\tvar index = this.getIndex();\n\n\t\tRickshaw.keys(data).forEach( function(name) {\n\t\t\tif (! this.itemByName(name)) {\n\t\t\t\tthis.addItem({ name: name });\n\t\t\t}\n\t\t}, this );\n\n\t\tthis.forEach( function(item) {\n\t\t\titem.data.push({ \n\t\t\t\tx: x || (index * this.timeInterval || 1) + this.timeBase, \n\t\t\t\ty: (data[item.name] || 0) \n\t\t\t});\n\t\t}, this );\n\t},\n\n\tgetIndex: function () {\n\t\treturn (this[0] && this[0].data && this[0].data.length) ? this[0].data.length : 0;\n\t},\n\n\titemByName: function(name) {\n\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tif (this[i].name == name)\n\t\t\t\treturn this[i];\n\t\t}\n\t},\n\n\tsetTimeInterval: function(iv) {\n\t\tthis.timeInterval = iv / 1000;\n\t},\n\n\tsetTimeBase: function (t) {\n\t\tthis.timeBase = t;\n\t},\n\n\tdump: function() {\n\n\t\tvar data = {\n\t\t\ttimeBase: this.timeBase,\n\t\t\ttimeInterval: this.timeInterval,\n\t\t\titems: []\n\t\t};\n\n\t\tthis.forEach( function(item) {\n\n\t\t\tvar newItem = {\n\t\t\t\tcolor: item.color,\n\t\t\t\tname: item.name,\n\t\t\t\tdata: []\n\t\t\t};\n\n\t\t\titem.data.forEach( function(plot) {\n\t\t\t\tnewItem.data.push({ x: plot.x, y: plot.y });\n\t\t\t} );\n\n\t\t\tdata.items.push(newItem);\n\t\t} );\n\n\t\treturn data;\n\t},\n\n\tload: function(data) {\n\n\t\tif (data.timeInterval) {\n\t\t\tthis.timeInterval = data.timeInterval;\n\t\t}\n\n\t\tif (data.timeBase) {\n\t\t\tthis.timeBase = data.timeBase;\n\t\t}\n\n\t\tif (data.items) {\n\t\t\tdata.items.forEach( function(item) {\n\t\t\t\tthis.push(item);\n\t\t\t\tif (this.legend) {\n\t\t\t\t\tthis.legend.addLine(this.itemByName(item.name));\n\t\t\t\t}\n\n\t\t\t}, this );\n\t\t}\n\t}\n} );\n\nRickshaw.Series.zeroFill = function(series) {\n\tRickshaw.Series.fill(series, 0);\n};\n\nRickshaw.Series.fill = function(series, fill) {\n\n\tvar x;\n\tvar i = 0;\n\n\tvar data = series.map( function(s) { return s.data } );\n\n\twhile ( i < Math.max.apply(null, data.map( function(d) { return d.length } )) ) {\n\n\t\tx = Math.min.apply( null, \n\t\t\tdata\n\t\t\t\t.filter(function(d) { return d[i] })\n\t\t\t\t.map(function(d) { return d[i].x })\n\t\t);\n\n\t\tdata.forEach( function(d) {\n\t\t\tif (!d[i] || d[i].x != x) {\n\t\t\t\td.splice(i, 0, { x: x, y: fill });\n\t\t\t}\n\t\t} );\n\n\t\ti++;\n\t}\n};\n\nRickshaw.namespace('Rickshaw.Series.FixedDuration');\n\nRickshaw.Series.FixedDuration = Rickshaw.Class.create(Rickshaw.Series, {\n\n\tinitialize: function (data, palette, options) {\n\n\t\toptions = options || {};\n\n\t\tif (typeof(options.timeInterval) === 'undefined') {\n\t\t\tthrow new Error('FixedDuration series requires timeInterval');\n\t\t}\n\n\t\tif (typeof(options.maxDataPoints) === 'undefined') {\n\t\t\tthrow new Error('FixedDuration series requires maxDataPoints');\n\t\t}\n\n\t\tthis.palette = new Rickshaw.Color.Palette(palette);\n\t\tthis.timeBase = typeof(options.timeBase) === 'undefined' ? Math.floor(new Date().getTime() / 1000) : options.timeBase;\n\t\tthis.setTimeInterval(options.timeInterval);\n\n\t\tif (this[0] && this[0].data && this[0].data.length) {\n\t\t\tthis.currentSize = this[0].data.length;\n\t\t\tthis.currentIndex = this[0].data.length;\n\t\t} else {\n\t\t\tthis.currentSize  = 0;\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tthis.maxDataPoints = options.maxDataPoints;\n\n\n\t\tif (data && (typeof(data) == \"object\") && Array.isArray(data)) {\n\t\t\tdata.forEach( function (item) { this.addItem(item) }, this );\n\t\t\tthis.currentSize  += 1;\n\t\t\tthis.currentIndex += 1;\n\t\t}\n\n\t\t// reset timeBase for zero-filled values if needed\n\t\tthis.timeBase -= (this.maxDataPoints - this.currentSize) * this.timeInterval;\n\n\t\t// zero-fill up to maxDataPoints size if we don't have that much data yet\n\t\tif ((typeof(this.maxDataPoints) !== 'undefined') && (this.currentSize < this.maxDataPoints)) {\n\t\t\tfor (var i = this.maxDataPoints - this.currentSize - 1; i > 1; i--) {\n\t\t\t\tthis.currentSize  += 1;\n\t\t\t\tthis.currentIndex += 1;\n\t\t\t\tthis.forEach( function (item) {\n\t\t\t\t\titem.data.unshift({ x: ((i-1) * this.timeInterval || 1) + this.timeBase, y: 0, i: i });\n\t\t\t\t}, this );\n\t\t\t}\n\t\t}\n\t},\n\n\taddData: function($super, data, x) {\n\n\t\t$super(data, x);\n\n\t\tthis.currentSize += 1;\n\t\tthis.currentIndex += 1;\n\n\t\tif (this.maxDataPoints !== undefined) {\n\t\t\twhile (this.currentSize > this.maxDataPoints) {\n\t\t\t\tthis.dropData();\n\t\t\t}\n\t\t}\n\t},\n\n\tdropData: function() {\n\n\t\tthis.forEach(function(item) {\n\t\t\titem.data.splice(0, 1);\n\t\t} );\n\n\t\tthis.currentSize -= 1;\n\t},\n\n\tgetIndex: function () {\n\t\treturn this.currentIndex;\n\t}\n} );\n\n\treturn Rickshaw;\n}));\n"
        },
        {
          "name": "rickshaw.min.css",
          "type": "blob",
          "size": 5.9853515625,
          "content": ".rickshaw_graph .detail{pointer-events:none;position:absolute;top:0;z-index:2;background:rgba(0,0,0,.1);bottom:0;width:1px;transition:opacity .25s linear;-moz-transition:opacity .25s linear;-o-transition:opacity .25s linear;-webkit-transition:opacity .25s linear}.rickshaw_graph .detail.inactive{opacity:0}.rickshaw_graph .detail .item.active{opacity:1;width:auto;height:auto}.rickshaw_graph .detail .x_label{font-family:Arial,sans-serif;border-radius:3px;padding:6px;opacity:.5;border:1px solid #e0e0e0;font-size:12px;position:absolute;background:#fff;white-space:nowrap}.rickshaw_graph .detail .x_label.left{left:0}.rickshaw_graph .detail .x_label.right{right:0}.rickshaw_graph .detail .item{position:absolute;z-index:2;border-radius:3px;padding:.25em;font-size:12px;font-family:Arial,sans-serif;opacity:0;background:rgba(0,0,0,.4);color:#fff;border:1px solid rgba(0,0,0,.4);margin-left:1em;margin-right:1em;margin-top:-1em;white-space:nowrap}.rickshaw_graph .detail .item.left{left:0}.rickshaw_graph .detail .item.right{right:0}.rickshaw_graph .detail .item.active{opacity:1;background:rgba(0,0,0,.8)}.rickshaw_graph .detail .item:after{position:absolute;display:block;width:0;height:0;content:\"\";border:5px solid transparent}.rickshaw_graph .detail .item.left:after{top:1em;left:-5px;margin-top:-5px;border-right-color:rgba(0,0,0,.8);border-left-width:0}.rickshaw_graph .detail .item.right:after{top:1em;right:-5px;margin-top:-5px;border-left-color:rgba(0,0,0,.8);border-right-width:0}.rickshaw_graph .detail .dot{width:4px;height:4px;margin-left:-3px;margin-top:-3.5px;border-radius:5px;position:absolute;box-shadow:0 0 2px rgba(0,0,0,.6);box-sizing:content-box;-moz-box-sizing:content-box;background:#fff;border-width:2px;border-style:solid;display:none;background-clip:padding-box}.rickshaw_graph .detail .dot.active{display:block}.rickshaw_graph{position:relative}.rickshaw_graph svg{display:block;overflow:hidden}.rickshaw_graph .x_tick{position:absolute;top:0;bottom:0;width:0;border-left:1px dotted rgba(0,0,0,.2);pointer-events:none}.rickshaw_graph .x_tick .title{position:absolute;font-size:12px;font-family:Arial,sans-serif;opacity:.5;white-space:nowrap;margin-left:3px;bottom:1px}.rickshaw_annotation_timeline{height:1px;border-top:1px solid #e0e0e0;margin-top:10px;position:relative}.rickshaw_annotation_timeline .annotation{position:absolute;height:6px;width:6px;margin-left:-2px;top:-3px;border-radius:5px;background-color:rgba(0,0,0,.25)}.rickshaw_graph .annotation_line{position:absolute;top:0;bottom:-6px;width:0;border-left:2px solid rgba(0,0,0,.3);display:none}.rickshaw_graph .annotation_line.active{display:block}.rickshaw_graph .annotation_range{background:rgba(0,0,0,.1);display:none;position:absolute;top:0;bottom:-6px}.rickshaw_graph .annotation_range.active{display:block}.rickshaw_graph .annotation_range.active.offscreen{display:none}.rickshaw_annotation_timeline .annotation .content{background:#fff;color:#000;opacity:.9;padding:5px 5px;box-shadow:0 0 2px rgba(0,0,0,.8);border-radius:3px;position:relative;z-index:20;font-size:12px;padding:6px 8px 8px;top:18px;left:-11px;width:160px;display:none;cursor:pointer}.rickshaw_annotation_timeline .annotation .content:before{content:\"\\25b2\";position:absolute;top:-11px;color:#fff;text-shadow:0 -1px 1px rgba(0,0,0,.8)}.rickshaw_annotation_timeline .annotation.active,.rickshaw_annotation_timeline .annotation:hover{background-color:rgba(0,0,0,.8);cursor:none}.rickshaw_annotation_timeline .annotation .content:hover{z-index:50}.rickshaw_annotation_timeline .annotation.active .content{display:block}.rickshaw_annotation_timeline .annotation:hover .content{display:block;z-index:50}.rickshaw_graph .x_axis_d3,.rickshaw_graph .y_axis{fill:none}.rickshaw_graph .x_ticks_d3 .tick,.rickshaw_graph .y_ticks .tick line{stroke:rgba(0,0,0,.16);stroke-width:2px;shape-rendering:crisp-edges;pointer-events:none}.rickshaw_graph .x_grid_d3 .tick,.rickshaw_graph .y_grid .tick{z-index:-1;stroke:rgba(0,0,0,.2);stroke-width:1px;stroke-dasharray:1 1}.rickshaw_graph .y_grid .tick[data-y-value=\"0\"]{stroke-dasharray:1 0}.rickshaw_graph .x_grid_d3 path,.rickshaw_graph .y_grid path{fill:none;stroke:none}.rickshaw_graph .x_ticks_d3 path,.rickshaw_graph .y_ticks path{fill:none;stroke:grey}.rickshaw_graph .x_ticks_d3 text,.rickshaw_graph .y_ticks text{opacity:.5;font-size:12px;pointer-events:none}.rickshaw_graph .x_tick.glow .title,.rickshaw_graph .y_ticks.glow text{fill:#000;color:#000;text-shadow:-1px 1px 0 rgba(255,255,255,.1),1px -1px 0 rgba(255,255,255,.1),1px 1px 0 rgba(255,255,255,.1),0 1px 0 rgba(255,255,255,.1),0 -1px 0 rgba(255,255,255,.1),1px 0 0 rgba(255,255,255,.1),-1px 0 0 rgba(255,255,255,.1),-1px -1px 0 rgba(255,255,255,.1)}.rickshaw_graph .x_tick.inverse .title,.rickshaw_graph .y_ticks.inverse text{fill:#fff;color:#fff;text-shadow:-1px 1px 0 rgba(0,0,0,.8),1px -1px 0 rgba(0,0,0,.8),1px 1px 0 rgba(0,0,0,.8),0 1px 0 rgba(0,0,0,.8),0 -1px 0 rgba(0,0,0,.8),1px 0 0 rgba(0,0,0,.8),-1px 0 0 rgba(0,0,0,.8),-1px -1px 0 rgba(0,0,0,.8)}.rickshaw_legend{font-family:Arial;font-size:12px;color:#fff;background:#404040;display:inline-block;padding:12px 5px;border-radius:2px;position:relative}.rickshaw_legend:hover{z-index:10}.rickshaw_legend .swatch{width:10px;height:10px;border:1px solid rgba(0,0,0,.2)}.rickshaw_legend .line{clear:both;line-height:140%;padding-right:15px}.rickshaw_legend .line .swatch{display:inline-block;margin-right:3px;border-radius:2px}.rickshaw_legend .label{margin:0;white-space:nowrap;display:inline;font-size:inherit;background-color:transparent;color:inherit;font-weight:400;line-height:normal;padding:0;text-shadow:none}.rickshaw_legend .action:hover{opacity:.6}.rickshaw_legend .action{margin-right:.2em;font-size:10px;opacity:.2;cursor:pointer;font-size:14px}.rickshaw_legend .line.disabled{opacity:.4}.rickshaw_legend ul{list-style-type:none;margin:0;padding:0;margin:2px;cursor:pointer}.rickshaw_legend li{padding:0 0 0 2px;min-width:80px;white-space:nowrap}.rickshaw_legend li:hover{background:rgba(255,255,255,.08);border-radius:3px}.rickshaw_legend li:active{background:rgba(255,255,255,.2);border-radius:3px}"
        },
        {
          "name": "rickshaw.min.js",
          "type": "blob",
          "size": 79.73046875,
          "content": "(function(root,factory){if(typeof define===\"function\"&&define.amd){define([\"d3\"],function(d3){return root.Rickshaw=factory(d3)})}else if(typeof exports===\"object\"){module.exports=factory(require(\"d3\"))}else{root.Rickshaw=factory(d3)}})(this,function(d3){var Rickshaw={version:\"1.7.1\",namespace:function(namespace,obj){var parts=namespace.split(\".\");var parent=Rickshaw;for(var i=1,length=parts.length;i<length;i++){var currentPart=parts[i];parent[currentPart]=parent[currentPart]||{};parent=parent[currentPart]}return parent},keys:function(obj){var keys=[];for(var key in obj)keys.push(key);return keys},extend:function(destination,source){for(var property in source){destination[property]=source[property]}return destination},clone:function(obj){return JSON.parse(JSON.stringify(obj))}};(function(globalContext){var _toString=Object.prototype.toString,NULL_TYPE=\"Null\",UNDEFINED_TYPE=\"Undefined\",BOOLEAN_TYPE=\"Boolean\",NUMBER_TYPE=\"Number\",STRING_TYPE=\"String\",OBJECT_TYPE=\"Object\",FUNCTION_CLASS=\"[object Function]\";function isFunction(object){return _toString.call(object)===FUNCTION_CLASS}function extend(destination,source){for(var property in source)if(source.hasOwnProperty(property))destination[property]=source[property];return destination}function keys(object){if(Type(object)!==OBJECT_TYPE){throw new TypeError}var results=[];for(var property in object){if(object.hasOwnProperty(property)){results.push(property)}}return results}function Type(o){switch(o){case null:return NULL_TYPE;case void 0:return UNDEFINED_TYPE}var type=typeof o;switch(type){case\"boolean\":return BOOLEAN_TYPE;case\"number\":return NUMBER_TYPE;case\"string\":return STRING_TYPE}return OBJECT_TYPE}function isUndefined(object){return typeof object===\"undefined\"}var slice=Array.prototype.slice;function argumentNames(fn){var names=fn.toString().match(/^[\\s\\(]*function[^(]*\\(([^)]*)\\)/)[1].replace(/\\/\\/.*?[\\r\\n]|\\/\\*(?:.|[\\r\\n])*?\\*\\//g,\"\").replace(/\\s+/g,\"\").split(\",\");return names.length==1&&!names[0]?[]:names}function wrap(fn,wrapper){var __method=fn;return function(){var a=update([bind(__method,this)],arguments);return wrapper.apply(this,a)}}function update(array,args){var arrayLength=array.length,length=args.length;while(length--)array[arrayLength+length]=args[length];return array}function merge(array,args){array=slice.call(array,0);return update(array,args)}function bind(fn,context){if(arguments.length<2&&isUndefined(arguments[0]))return this;var __method=fn,args=slice.call(arguments,2);return function(){var a=merge(args,arguments);return __method.apply(context,a)}}var emptyFunction=function(){};var Class=function(){var IS_DONTENUM_BUGGY=function(){for(var p in{toString:1}){if(p===\"toString\")return false}return true}();function subclass(){}function create(){var parent=null,properties=[].slice.apply(arguments);if(isFunction(properties[0]))parent=properties.shift();function klass(){this.initialize.apply(this,arguments)}extend(klass,Class.Methods);klass.superclass=parent;klass.subclasses=[];if(parent){subclass.prototype=parent.prototype;klass.prototype=new subclass;try{parent.subclasses.push(klass)}catch(e){}}for(var i=0,length=properties.length;i<length;i++)klass.addMethods(properties[i]);if(!klass.prototype.initialize)klass.prototype.initialize=emptyFunction;klass.prototype.constructor=klass;return klass}function addMethods(source){var ancestor=this.superclass&&this.superclass.prototype,properties=keys(source);if(IS_DONTENUM_BUGGY){if(source.toString!=Object.prototype.toString)properties.push(\"toString\");if(source.valueOf!=Object.prototype.valueOf)properties.push(\"valueOf\")}for(var i=0,length=properties.length;i<length;i++){var property=properties[i],value=source[property];if(ancestor&&isFunction(value)&&argumentNames(value)[0]==\"$super\"){var method=value;value=wrap(function(m){return function(){return ancestor[m].apply(this,arguments)}}(property),method);value.valueOf=bind(method.valueOf,method);value.toString=bind(method.toString,method)}this.prototype[property]=value}return this}return{create:create,Methods:{addMethods:addMethods}}}();if(globalContext.exports){globalContext.exports.Class=Class}else{globalContext.Class=Class}})(Rickshaw);Rickshaw.namespace(\"Rickshaw.Compat.ClassList\");Rickshaw.Compat.ClassList=function(){if(typeof document!==\"undefined\"&&!(\"classList\"in document.createElement(\"a\"))){(function(view){\"use strict\";var classListProp=\"classList\",protoProp=\"prototype\",elemCtrProto=(view.HTMLElement||view.Element)[protoProp],objCtr=Object,strTrim=String[protoProp].trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")},arrIndexOf=Array[protoProp].indexOf||function(item){var i=0,len=this.length;for(;i<len;i++){if(i in this&&this[i]===item){return i}}return-1},DOMEx=function(type,message){this.name=type;this.code=DOMException[type];this.message=message},checkTokenAndGetIndex=function(classList,token){if(token===\"\"){throw new DOMEx(\"SYNTAX_ERR\",\"An invalid or illegal string was specified\")}if(/\\s/.test(token)){throw new DOMEx(\"INVALID_CHARACTER_ERR\",\"String contains an invalid character\")}return arrIndexOf.call(classList,token)},ClassList=function(elem){var trimmedClasses=strTrim.call(elem.className),classes=trimmedClasses?trimmedClasses.split(/\\s+/):[],i=0,len=classes.length;for(;i<len;i++){this.push(classes[i])}this._updateClassName=function(){elem.className=this.toString()}},classListProto=ClassList[protoProp]=[],classListGetter=function(){return new ClassList(this)};DOMEx[protoProp]=Error[protoProp];classListProto.item=function(i){return this[i]||null};classListProto.contains=function(token){token+=\"\";return checkTokenAndGetIndex(this,token)!==-1};classListProto.add=function(token){token+=\"\";if(checkTokenAndGetIndex(this,token)===-1){this.push(token);this._updateClassName()}};classListProto.remove=function(token){token+=\"\";var index=checkTokenAndGetIndex(this,token);if(index!==-1){this.splice(index,1);this._updateClassName()}};classListProto.toggle=function(token){token+=\"\";if(checkTokenAndGetIndex(this,token)===-1){this.add(token)}else{this.remove(token)}};classListProto.toString=function(){return this.join(\" \")};if(objCtr.defineProperty){var classListPropDesc={get:classListGetter,enumerable:true,configurable:true};try{objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc)}catch(ex){if(ex.number===-2146823252){classListPropDesc.enumerable=false;objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc)}}}else if(objCtr[protoProp].__defineGetter__){elemCtrProto.__defineGetter__(classListProp,classListGetter)}})(window)}};if(typeof RICKSHAW_NO_COMPAT!==\"undefined\"&&!RICKSHAW_NO_COMPAT||typeof RICKSHAW_NO_COMPAT===\"undefined\"){new Rickshaw.Compat.ClassList}Rickshaw.namespace(\"Rickshaw.Graph\");Rickshaw.Graph=function(args){var self=this;this.initialize=function(args){if(!args.element)throw\"Rickshaw.Graph needs a reference to an element\";if(args.element.nodeType!==1)throw\"Rickshaw.Graph element was defined but not an HTML element\";this.element=args.element;this.series=args.series;this.window={};this.updateCallbacks=[];this.configureCallbacks=[];this.defaults={interpolation:\"cardinal\",offset:\"zero\",min:undefined,max:undefined,preserve:false,xScale:undefined,yScale:undefined,stack:true};this._loadRenderers();this.configure(args);this.setSeries(args.series);this.setSize({width:args.width,height:args.height});this.element.classList.add(\"rickshaw_graph\");this.vis=d3.select(this.element).append(\"svg:svg\").attr(\"width\",this.width).attr(\"height\",this.height);this.discoverRange()};this._loadRenderers=function(){for(var name in Rickshaw.Graph.Renderer){if(!name||!Rickshaw.Graph.Renderer.hasOwnProperty(name))continue;var r=Rickshaw.Graph.Renderer[name];if(!r||!r.prototype||!r.prototype.render)continue;self.registerRenderer(new r({graph:self}))}};this.validateSeries=function(series){if(!Array.isArray(series)&&!(series instanceof Rickshaw.Series)){var seriesSignature=Object.prototype.toString.apply(series);throw\"series is not an array: \"+seriesSignature}var pointsCount;series.forEach(function(s){if(!(s instanceof Object)){throw\"series element is not an object: \"+s}if(!s.data){throw\"series has no data: \"+JSON.stringify(s)}if(!Array.isArray(s.data)){throw\"series data is not an array: \"+JSON.stringify(s.data)}if(s.data.length>0){var x=s.data[0].x;var y=s.data[0].y;if(typeof x!=\"number\"||typeof y!=\"number\"&&y!==null){throw\"x and y properties of points should be numbers instead of \"+typeof x+\" and \"+typeof y}}if(s.data.length>=3){if(s.data[2].x<s.data[1].x||s.data[1].x<s.data[0].x||s.data[s.data.length-1].x<s.data[0].x){throw\"series data needs to be sorted on x values for series name: \"+s.name}}},this)};this.setSeries=function(series){this.validateSeries(series);this.series=series;this.series.active=function(){return self.series.filter(function(s){return!s.disabled})}};this.dataDomain=function(){var data=this.series.map(function(s){return s.data});var min=d3.min(data.map(function(d){return d[0].x}));var max=d3.max(data.map(function(d){return d[d.length-1].x}));return[min,max]};this.discoverRange=function(){var domain=this.renderer.domain();this.x=(this.xScale||d3.scale.linear()).copy().domain(domain.x).range([0,this.width]);this.y=(this.yScale||d3.scale.linear()).copy().domain(domain.y).range([this.height,0]);this.x.magnitude=d3.scale.linear().domain([domain.x[0]-domain.x[0],domain.x[1]-domain.x[0]]).range([0,this.width]);this.y.magnitude=d3.scale.linear().domain([domain.y[0]-domain.y[0],domain.y[1]-domain.y[0]]).range([0,this.height])};this.render=function(){var stackedData=this.stackData();this.discoverRange();this.renderer.render();this.updateCallbacks.forEach(function(callback){callback()})};this.update=this.render;this.stackData=function(){var data=this.series.active().map(function(d){return d.data}).map(function(d){return d.filter(function(d){return this._slice(d)},this)},this);var preserve=this.preserve;if(!preserve){this.series.forEach(function(series){if(series.scale){preserve=true}})}data=preserve?Rickshaw.clone(data):data;this.series.active().forEach(function(series,index){if(series.scale){var seriesData=data[index];if(seriesData){seriesData.forEach(function(d){d.y=series.scale(d.y)})}}});this.stackData.hooks.data.forEach(function(entry){data=entry.f.apply(self,[data])});var stackedData;if(!this.renderer.unstack){this._validateStackable();var layout=d3.layout.stack();layout.offset(self.offset);stackedData=layout(data)}stackedData=stackedData||data;if(this.renderer.unstack){stackedData.forEach(function(seriesData){seriesData.forEach(function(d){d.y0=d.y0===undefined?0:d.y0})})}this.stackData.hooks.after.forEach(function(entry){stackedData=entry.f.apply(self,[data])});var i=0;this.series.forEach(function(series){if(series.disabled)return;series.stack=stackedData[i++]});this.stackedData=stackedData;return stackedData};this._validateStackable=function(){var series=this.series;var pointsCount;series.forEach(function(s){pointsCount=pointsCount||s.data.length;if(pointsCount&&s.data.length!=pointsCount){throw\"stacked series cannot have differing numbers of points: \"+pointsCount+\" vs \"+s.data.length+\"; see Rickshaw.Series.fill()\"}},this)};this.stackData.hooks={data:[],after:[]};this._slice=function(d){if(this.window.xMin||this.window.xMax){var isInRange=true;if(this.window.xMin&&d.x<this.window.xMin)isInRange=false;if(this.window.xMax&&d.x>this.window.xMax)isInRange=false;return isInRange}return true};this.onUpdate=function(callback){this.updateCallbacks.push(callback)};this.onConfigure=function(callback){this.configureCallbacks.push(callback)};this.registerRenderer=function(renderer){this._renderers=this._renderers||{};this._renderers[renderer.name]=renderer};this.configure=function(args){this.config=this.config||{};if(args.width||args.height){this.setSize(args)}Rickshaw.keys(this.defaults).forEach(function(k){this.config[k]=k in args?args[k]:k in this?this[k]:this.defaults[k]},this);Rickshaw.keys(this.config).forEach(function(k){this[k]=this.config[k]},this);if(\"stack\"in args)args.unstack=!args.stack;var renderer=args.renderer||this.renderer&&this.renderer.name||\"stack\";this.setRenderer(renderer,args);this.configureCallbacks.forEach(function(callback){callback(args)})};this.setRenderer=function(r,args){if(typeof r==\"function\"){this.renderer=new r({graph:self});this.registerRenderer(this.renderer)}else{if(!this._renderers[r]){throw\"couldn't find renderer \"+r}this.renderer=this._renderers[r]}if(typeof args==\"object\"){this.renderer.configure(args)}};this.setSize=function(args){args=args||{};if(args.width&&args.height){this.width=args.width;this.height=args.height}else{if(typeof window!==\"undefined\"){var style=window.getComputedStyle(this.element,null);var elementWidth=parseInt(style.getPropertyValue(\"width\"),10);var elementHeight=parseInt(style.getPropertyValue(\"height\"),10)}this.width=args.width||elementWidth||400;this.height=args.height||elementHeight||250}this.vis&&this.vis.attr(\"width\",this.width).attr(\"height\",this.height)};this.initialize(args)};Rickshaw.namespace(\"Rickshaw.Fixtures.Color\");Rickshaw.Fixtures.Color=function(){this.schemes={};this.schemes.spectrum14=[\"#ecb796\",\"#dc8f70\",\"#b2a470\",\"#92875a\",\"#716c49\",\"#d2ed82\",\"#bbe468\",\"#a1d05d\",\"#e7cbe6\",\"#d8aad6\",\"#a888c2\",\"#9dc2d3\",\"#649eb9\",\"#387aa3\"].reverse();this.schemes.spectrum2000=[\"#57306f\",\"#514c76\",\"#646583\",\"#738394\",\"#6b9c7d\",\"#84b665\",\"#a7ca50\",\"#bfe746\",\"#e2f528\",\"#fff726\",\"#ecdd00\",\"#d4b11d\",\"#de8800\",\"#de4800\",\"#c91515\",\"#9a0000\",\"#7b0429\",\"#580839\",\"#31082b\"];this.schemes.spectrum2001=[\"#2f243f\",\"#3c2c55\",\"#4a3768\",\"#565270\",\"#6b6b7c\",\"#72957f\",\"#86ad6e\",\"#a1bc5e\",\"#b8d954\",\"#d3e04e\",\"#ccad2a\",\"#cc8412\",\"#c1521d\",\"#ad3821\",\"#8a1010\",\"#681717\",\"#531e1e\",\"#3d1818\",\"#320a1b\"];this.schemes.classic9=[\"#423d4f\",\"#4a6860\",\"#848f39\",\"#a2b73c\",\"#ddcb53\",\"#c5a32f\",\"#7d5836\",\"#963b20\",\"#7c2626\",\"#491d37\",\"#2f254a\"].reverse();this.schemes.httpStatus={503:\"#ea5029\",502:\"#d23f14\",500:\"#bf3613\",410:\"#efacea\",409:\"#e291dc\",403:\"#f457e8\",408:\"#e121d2\",401:\"#b92dae\",405:\"#f47ceb\",404:\"#a82a9f\",400:\"#b263c6\",301:\"#6fa024\",302:\"#87c32b\",307:\"#a0d84c\",304:\"#28b55c\",200:\"#1a4f74\",206:\"#27839f\",201:\"#52adc9\",202:\"#7c979f\",203:\"#a5b8bd\",204:\"#c1cdd1\"};this.schemes.colorwheel=[\"#b5b6a9\",\"#858772\",\"#785f43\",\"#96557e\",\"#4682b4\",\"#65b9ac\",\"#73c03a\",\"#cb513a\"].reverse();this.schemes.cool=[\"#5e9d2f\",\"#73c03a\",\"#4682b4\",\"#7bc3b8\",\"#a9884e\",\"#c1b266\",\"#a47493\",\"#c09fb5\"];this.schemes.munin=[\"#00cc00\",\"#0066b3\",\"#ff8000\",\"#ffcc00\",\"#330099\",\"#990099\",\"#ccff00\",\"#ff0000\",\"#808080\",\"#008f00\",\"#00487d\",\"#b35a00\",\"#b38f00\",\"#6b006b\",\"#8fb300\",\"#b30000\",\"#bebebe\",\"#80ff80\",\"#80c9ff\",\"#ffc080\",\"#ffe680\",\"#aa80ff\",\"#ee00cc\",\"#ff8080\",\"#666600\",\"#ffbfff\",\"#00ffcc\",\"#cc6699\",\"#999900\"]};Rickshaw.namespace(\"Rickshaw.Fixtures.RandomData\");Rickshaw.Fixtures.RandomData=function(timeInterval){var addData;timeInterval=timeInterval||1;var lastRandomValue=200;var timeBase=Math.floor((new Date).getTime()/1e3);this.addData=function(data){var randomValue=Math.random()*100+15+lastRandomValue;var index=data[0].length;var counter=1;data.forEach(function(series){var randomVariance=Math.random()*20;var v=randomValue/25+counter+++(Math.cos(index*counter*11/960)+2)*15+(Math.cos(index/7)+2)*7+(Math.cos(index/17)+2)*1;series.push({x:index*timeInterval+timeBase,y:v+randomVariance})});lastRandomValue=randomValue*.85};this.removeData=function(data){data.forEach(function(series){series.shift()});timeBase+=timeInterval}};Rickshaw.namespace(\"Rickshaw.Fixtures.Time\");Rickshaw.Fixtures.Time=function(){var self=this;this.months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];this.units=[{name:\"decade\",seconds:86400*365.25*10,formatter:function(d){return parseInt(d.getUTCFullYear()/10,10)*10}},{name:\"year\",seconds:86400*365.25,formatter:function(d){return d.getUTCFullYear()}},{name:\"month\",seconds:86400*30.5,formatter:function(d){return self.months[d.getUTCMonth()]}},{name:\"week\",seconds:86400*7,formatter:function(d){return self.formatDate(d)}},{name:\"day\",seconds:86400,formatter:function(d){return d.getUTCDate()}},{name:\"6 hour\",seconds:3600*6,formatter:function(d){return self.formatTime(d)}},{name:\"hour\",seconds:3600,formatter:function(d){return self.formatTime(d)}},{name:\"15 minute\",seconds:60*15,formatter:function(d){return self.formatTime(d)}},{name:\"minute\",seconds:60,formatter:function(d){return d.getUTCMinutes()+\"m\"}},{name:\"15 second\",seconds:15,formatter:function(d){return d.getUTCSeconds()+\"s\"}},{name:\"second\",seconds:1,formatter:function(d){return d.getUTCSeconds()+\"s\"}},{name:\"decisecond\",seconds:1/10,formatter:function(d){return d.getUTCMilliseconds()+\"ms\"}},{name:\"centisecond\",seconds:1/100,formatter:function(d){return d.getUTCMilliseconds()+\"ms\"}}];this.unit=function(unitName){return this.units.filter(function(unit){return unitName==unit.name}).shift()};this.formatDate=function(d){return d3.time.format(\"%b %e\")(d)};this.formatTime=function(d){return d.toUTCString().match(/(\\d+:\\d+):/)[1]};this.ceil=function(time,unit){var date,floor,year;if(unit.name==\"month\"){date=new Date(time*1e3);floor=Date.UTC(date.getUTCFullYear(),date.getUTCMonth())/1e3;if(floor==time)return time;year=date.getUTCFullYear();var month=date.getUTCMonth();if(month==11){month=0;year=year+1}else{month+=1}return Date.UTC(year,month)/1e3}if(unit.name==\"year\"){date=new Date(time*1e3);floor=Date.UTC(date.getUTCFullYear(),0)/1e3;if(floor==time)return time;year=date.getUTCFullYear()+1;return Date.UTC(year,0)/1e3}return Math.ceil(time/unit.seconds)*unit.seconds}};Rickshaw.namespace(\"Rickshaw.Fixtures.Time.Local\");Rickshaw.Fixtures.Time.Local=function(){var self=this;this.months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];this.units=[{name:\"decade\",seconds:86400*365.25*10,formatter:function(d){return parseInt(d.getFullYear()/10,10)*10}},{name:\"year\",seconds:86400*365.25,formatter:function(d){return d.getFullYear()}},{name:\"month\",seconds:86400*30.5,formatter:function(d){return self.months[d.getMonth()]}},{name:\"week\",seconds:86400*7,formatter:function(d){return self.formatDate(d)}},{name:\"day\",seconds:86400,formatter:function(d){return d.getDate()}},{name:\"6 hour\",seconds:3600*6,formatter:function(d){return self.formatTime(d)}},{name:\"hour\",seconds:3600,formatter:function(d){return self.formatTime(d)}},{name:\"15 minute\",seconds:60*15,formatter:function(d){return self.formatTime(d)}},{name:\"minute\",seconds:60,formatter:function(d){return d.getMinutes()}},{name:\"15 second\",seconds:15,formatter:function(d){return d.getSeconds()+\"s\"}},{name:\"second\",seconds:1,formatter:function(d){return d.getSeconds()+\"s\"}},{name:\"decisecond\",seconds:1/10,formatter:function(d){return d.getMilliseconds()+\"ms\"}},{name:\"centisecond\",seconds:1/100,formatter:function(d){return d.getMilliseconds()+\"ms\"}}];this.unit=function(unitName){return this.units.filter(function(unit){return unitName==unit.name}).shift()};this.formatDate=function(d){return d3.time.format(\"%b %e\")(d)};this.formatTime=function(d){return d.toString().match(/(\\d+:\\d+):/)[1]};this.ceil=function(time,unit){var date,floor,year,offset;if(unit.name==\"day\"){var nearFuture=new Date((time+unit.seconds-1)*1e3);var rounded=new Date(0);rounded.setFullYear(nearFuture.getFullYear());rounded.setMonth(nearFuture.getMonth());rounded.setDate(nearFuture.getDate());rounded.setMilliseconds(0);rounded.setSeconds(0);rounded.setMinutes(0);rounded.setHours(0);return rounded.getTime()/1e3}if(unit.name==\"month\"){date=new Date(time*1e3);floor=new Date(date.getFullYear(),date.getMonth()).getTime()/1e3;if(floor==time)return time;year=date.getFullYear();var month=date.getMonth();if(month==11){month=0;year=year+1}else{month+=1}return new Date(year,month).getTime()/1e3}if(unit.name==\"year\"){date=new Date(time*1e3);floor=new Date(date.getUTCFullYear(),0).getTime()/1e3;if(floor==time)return time;year=date.getFullYear()+1;return new Date(year,0).getTime()/1e3}offset=new Date(time*1e3).getTimezoneOffset()*60;return Math.ceil((time-offset)/unit.seconds)*unit.seconds+offset}};Rickshaw.namespace(\"Rickshaw.Fixtures.Number\");Rickshaw.Fixtures.Number.formatKMBT=function(y){var abs_y=Math.abs(y);if(abs_y>=1e12){return(y/1e12).toFixed(2)+\"T\"}else if(abs_y>=1e9){return(y/1e9).toFixed(2)+\"B\"}else if(abs_y>=1e6){return(y/1e6).toFixed(2)+\"M\"}else if(abs_y>=1e3){return(y/1e3).toFixed(2)+\"K\"}else if(abs_y<1&&abs_y>0){return y.toFixed(2)}else if(abs_y===0){return\"0\"}else{return y}};Rickshaw.Fixtures.Number.formatBase1024KMGTP=function(y){var abs_y=Math.abs(y);if(abs_y>=0x4000000000000){return(y/0x4000000000000).toFixed(2)+\"P\"}else if(abs_y>=1099511627776){return(y/1099511627776).toFixed(2)+\"T\"}else if(abs_y>=1073741824){return(y/1073741824).toFixed(2)+\"G\"}else if(abs_y>=1048576){return(y/1048576).toFixed(2)+\"M\"}else if(abs_y>=1024){return(y/1024).toFixed(2)+\"K\"}else if(abs_y<1&&abs_y>0){return y.toFixed(2)}else if(abs_y===0){return\"0\"}else{return y}};Rickshaw.namespace(\"Rickshaw.Color.Palette\");Rickshaw.Color.Palette=function(args){var color=new Rickshaw.Fixtures.Color;args=args||{};this.schemes={};this.scheme=color.schemes[args.scheme]||args.scheme||color.schemes.colorwheel;this.runningIndex=0;this.generatorIndex=0;if(args.interpolatedStopCount){var schemeCount=this.scheme.length-1;var i,j,scheme=[];for(i=0;i<schemeCount;i++){scheme.push(this.scheme[i]);var generator=d3.interpolateHsl(this.scheme[i],this.scheme[i+1]);for(j=1;j<args.interpolatedStopCount;j++){scheme.push(generator(1/args.interpolatedStopCount*j))}}scheme.push(this.scheme[this.scheme.length-1]);this.scheme=scheme}this.rotateCount=this.scheme.length;this.color=function(key){return this.scheme[key]||this.scheme[this.runningIndex++]||this.interpolateColor()||\"#808080\"};this.interpolateColor=function(){if(!Array.isArray(this.scheme))return;var color;if(this.generatorIndex==this.rotateCount*2-1){color=d3.interpolateHsl(this.scheme[this.generatorIndex],this.scheme[0])(.5);this.generatorIndex=0;this.rotateCount*=2}else{color=d3.interpolateHsl(this.scheme[this.generatorIndex],this.scheme[this.generatorIndex+1])(.5);this.generatorIndex++}this.scheme.push(color);return color}};Rickshaw.namespace(\"Rickshaw.Graph.Ajax\");Rickshaw.Graph.Ajax=Rickshaw.Class.create({initialize:function(args){this.dataURL=args.dataURL;this.onData=args.onData||function(d){return d};this.onComplete=args.onComplete||function(){};this.onError=args.onError||function(){};this.args=args;this.request()},request:function(){jQuery.ajax({url:this.dataURL,dataType:\"json\",success:this.success.bind(this),error:this.error.bind(this)})},error:function(){console.log(\"error loading dataURL: \"+this.dataURL);this.onError(this)},success:function(data,status){data=this.onData(data);this.args.series=this._splice({data:data,series:this.args.series});this.graph=this.graph||new Rickshaw.Graph(this.args);this.graph.render();this.onComplete(this)},_splice:function(args){var data=args.data;var series=args.series;if(!args.series)return data;series.forEach(function(s){var seriesKey=s.key||s.name;if(!seriesKey)throw\"series needs a key or a name\";data.forEach(function(d){var dataKey=d.key||d.name;if(!dataKey)throw\"data needs a key or a name\";if(seriesKey==dataKey){var properties=[\"color\",\"name\",\"data\"];properties.forEach(function(p){if(d[p])s[p]=d[p]})}})});return series}});Rickshaw.namespace(\"Rickshaw.Graph.Annotate\");Rickshaw.Graph.Annotate=function(args){var graph=this.graph=args.graph;this.elements={timeline:args.element};var self=this;this.data={};this.elements.timeline.classList.add(\"rickshaw_annotation_timeline\");this.add=function(time,content,end_time){self.data[time]=self.data[time]||{boxes:[]};self.data[time].boxes.push({content:content,end:end_time})};this.update=function(){Rickshaw.keys(self.data).forEach(function(time){var annotation=self.data[time];var left=self.graph.x(time);if(left<0||left>self.graph.x.range()[1]){if(annotation.element){annotation.line.classList.add(\"offscreen\");annotation.element.style.display=\"none\"}annotation.boxes.forEach(function(box){if(box.rangeElement)box.rangeElement.classList.add(\"offscreen\")});return}if(!annotation.element){var element=annotation.element=document.createElement(\"div\");element.classList.add(\"annotation\");this.elements.timeline.appendChild(element);element.addEventListener(\"click\",function(e){element.classList.toggle(\"active\");annotation.line.classList.toggle(\"active\");annotation.boxes.forEach(function(box){if(box.rangeElement)box.rangeElement.classList.toggle(\"active\")})},false)}annotation.element.style.left=left+\"px\";annotation.element.style.display=\"block\";annotation.boxes.forEach(function(box){var element=box.element;if(!element){element=box.element=document.createElement(\"div\");element.classList.add(\"content\");element.innerHTML=box.content;annotation.element.appendChild(element);annotation.line=document.createElement(\"div\");annotation.line.classList.add(\"annotation_line\");self.graph.element.appendChild(annotation.line);if(box.end){box.rangeElement=document.createElement(\"div\");box.rangeElement.classList.add(\"annotation_range\");self.graph.element.appendChild(box.rangeElement)}}if(box.end){var annotationRangeStart=left;var annotationRangeEnd=Math.min(self.graph.x(box.end),self.graph.x.range()[1]);if(annotationRangeStart>annotationRangeEnd){annotationRangeEnd=left;annotationRangeStart=Math.max(self.graph.x(box.end),self.graph.x.range()[0])}var annotationRangeWidth=annotationRangeEnd-annotationRangeStart;box.rangeElement.style.left=annotationRangeStart+\"px\";box.rangeElement.style.width=annotationRangeWidth+\"px\";box.rangeElement.classList.remove(\"offscreen\")}annotation.line.classList.remove(\"offscreen\");annotation.line.style.left=left+\"px\"})},this)};this.graph.onUpdate(function(){self.update()})};Rickshaw.namespace(\"Rickshaw.Graph.Axis.Time\");Rickshaw.Graph.Axis.Time=function(args){var self=this;this.graph=args.graph;this.elements=[];this.ticksTreatment=args.ticksTreatment||\"plain\";this.fixedTimeUnit=args.timeUnit;var time=args.timeFixture||new Rickshaw.Fixtures.Time;this.appropriateTimeUnit=function(){var unit;var units=time.units;var domain=this.graph.x.domain();var rangeSeconds=domain[1]-domain[0];units.forEach(function(u){if(Math.floor(rangeSeconds/u.seconds)>=2){unit=unit||u}});return unit||time.units[time.units.length-1]};this.tickOffsets=function(){var domain=this.graph.x.domain();var unit=this.fixedTimeUnit||this.appropriateTimeUnit();var count=Math.ceil((domain[1]-domain[0])/unit.seconds);var runningTick=domain[0];var offsets=[];for(var i=0;i<count;i++){var tickValue=time.ceil(runningTick,unit);runningTick=tickValue+unit.seconds/2;offsets.push({value:tickValue,unit:unit})}return offsets};this.render=function(){this.elements.forEach(function(e){e.parentNode.removeChild(e)});this.elements=[];var offsets=this.tickOffsets();offsets.forEach(function(o){if(self.graph.x(o.value)>self.graph.x.range()[1])return;var element=document.createElement(\"div\");element.style.left=self.graph.x(o.value)+\"px\";element.classList.add(\"x_tick\");element.classList.add(self.ticksTreatment);var title=document.createElement(\"div\");title.classList.add(\"title\");title.innerHTML=o.unit.formatter(new Date(o.value*1e3));element.appendChild(title);self.graph.element.appendChild(element);self.elements.push(element)})};this.graph.onUpdate(function(){self.render()})};Rickshaw.namespace(\"Rickshaw.Graph.Axis.X\");Rickshaw.Graph.Axis.X=function(args){var self=this;var berthRate=.1;this.initialize=function(args){this.graph=args.graph;this.orientation=args.orientation||\"top\";this.color=args.color||\"#000000\";this.pixelsPerTick=args.pixelsPerTick||75;if(args.ticks)this.staticTicks=args.ticks;if(args.tickValues)this.tickValues=args.tickValues;this.tickSize=args.tickSize||4;this.ticksTreatment=args.ticksTreatment||\"plain\";if(args.element){this.element=args.element;this._discoverSize(args.element,args);this.vis=d3.select(args.element).append(\"svg:svg\").attr(\"height\",this.height).attr(\"width\",this.width).attr(\"stroke\",this.color).attr(\"class\",\"rickshaw_graph x_axis_d3\");this.element=this.vis[0][0];this.element.style.position=\"relative\";this.setSize({width:args.width,height:args.height})}else{this.vis=this.graph.vis}this.graph.onUpdate(function(){self.render()})};this.setSize=function(args){args=args||{};if(!this.element)return;this._discoverSize(this.element.parentNode,args);this.vis.attr(\"height\",this.height).attr(\"width\",this.width*(1+berthRate));var berth=Math.floor(this.width*berthRate/2);this.element.style.left=-1*berth+\"px\"};this.render=function(){if(this._renderWidth!==undefined&&this.graph.width!==this._renderWidth)this.setSize({auto:true});var axis=d3.svg.axis().scale(this.graph.x).orient(this.orientation);axis.tickFormat(args.tickFormat||function(x){return x});if(this.tickValues)axis.tickValues(this.tickValues);this.ticks=this.staticTicks||Math.floor(this.graph.width/this.pixelsPerTick);var berth=Math.floor(this.width*berthRate/2)||0;var bar_offset=this.graph.renderer.name==\"bar\"&&Math.ceil(this.graph.width*.95/this.graph.series[0].data.length/2)||0;var transform;if(this.orientation==\"top\"){var yOffset=this.height||this.graph.height;transform=\"translate(\"+(berth+bar_offset)+\",\"+yOffset+\")\"}else{transform=\"translate(\"+(berth+bar_offset)+\", 0)\"}if(this.element){this.vis.selectAll(\"*\").remove()}this.vis.append(\"svg:g\").attr(\"class\",[\"x_ticks_d3\",this.ticksTreatment].join(\" \")).attr(\"transform\",transform).call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));var gridSize=(this.orientation==\"bottom\"?1:-1)*this.graph.height;this.graph.vis.append(\"svg:g\").attr(\"class\",\"x_grid_d3\").call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize)).selectAll(\"text\").each(function(){this.parentNode.setAttribute(\"data-x-value\",this.textContent)});this._renderHeight=this.graph.height};this._discoverSize=function(element,args){if(typeof window!==\"undefined\"){var style=window.getComputedStyle(element,null);var elementHeight=parseInt(style.getPropertyValue(\"height\"),10);if(!args.auto){var elementWidth=parseInt(style.getPropertyValue(\"width\"),10)}}this.width=(args.width||elementWidth||this.graph.width)*(1+berthRate);this.height=args.height||elementHeight||40};this.initialize(args)};Rickshaw.namespace(\"Rickshaw.Graph.Axis.Y\");Rickshaw.Graph.Axis.Y=Rickshaw.Class.create({initialize:function(args){this.graph=args.graph;this.orientation=args.orientation||\"right\";this.color=args.color||\"#000000\";this.pixelsPerTick=args.pixelsPerTick||75;if(args.ticks)this.staticTicks=args.ticks;if(args.tickValues)this.tickValues=args.tickValues;this.tickSize=args.tickSize||4;this.ticksTreatment=args.ticksTreatment||\"plain\";this.tickFormat=args.tickFormat||function(y){return y};this.berthRate=.1;if(args.element){this.element=args.element;this.vis=d3.select(args.element).append(\"svg:svg\").attr(\"stroke\",this.color).attr(\"class\",\"rickshaw_graph y_axis\");this.element=this.vis[0][0];this.element.style.position=\"relative\";this.setSize({width:args.width,height:args.height})}else{this.vis=this.graph.vis}var self=this;this.graph.onUpdate(function(){self.render()})},setSize:function(args){args=args||{};if(!this.element)return;if(typeof window!==\"undefined\"){var style=window.getComputedStyle(this.element.parentNode,null);var elementWidth=parseInt(style.getPropertyValue(\"width\"),10);if(!args.auto){var elementHeight=parseInt(style.getPropertyValue(\"height\"),10)}}this.width=args.width||elementWidth||this.graph.width*this.berthRate;this.height=args.height||elementHeight||this.graph.height;this.vis.attr(\"width\",this.width).attr(\"height\",this.height*(1+this.berthRate));var berth=this.height*this.berthRate;if(this.orientation==\"left\"){this.element.style.top=-1*berth+\"px\"}},render:function(){if(this._renderHeight!==undefined&&this.graph.height!==this._renderHeight)this.setSize({auto:true});this.ticks=this.staticTicks||Math.floor(this.graph.height/this.pixelsPerTick);var axis=this._drawAxis(this.graph.y);this._drawGrid(axis);this._renderHeight=this.graph.height},_drawAxis:function(scale){var axis=d3.svg.axis().scale(scale).orient(this.orientation);axis.tickFormat(this.tickFormat)\n;if(this.tickValues)axis.tickValues(this.tickValues);if(this.orientation==\"left\"){var berth=this.height*this.berthRate;var transform=\"translate(\"+this.width+\", \"+berth+\")\"}if(this.element){this.vis.selectAll(\"*\").remove()}this.vis.append(\"svg:g\").attr(\"class\",[\"y_ticks\",this.ticksTreatment].join(\" \")).attr(\"transform\",transform).call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));return axis},_drawGrid:function(axis){var gridSize=(this.orientation==\"right\"?1:-1)*this.graph.width;this.graph.vis.append(\"svg:g\").attr(\"class\",\"y_grid\").call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize)).selectAll(\"text\").each(function(){this.parentNode.setAttribute(\"data-y-value\",this.textContent)})}});Rickshaw.namespace(\"Rickshaw.Graph.Axis.Y.Scaled\");Rickshaw.Graph.Axis.Y.Scaled=Rickshaw.Class.create(Rickshaw.Graph.Axis.Y,{initialize:function($super,args){if(typeof args.scale===\"undefined\"){throw new Error(\"Scaled requires scale\")}this.scale=args.scale;if(typeof args.grid===\"undefined\"){this.grid=true}else{this.grid=args.grid}$super(args)},_drawAxis:function($super,scale){var domain=this.scale.domain();var renderDomain=this.graph.renderer.domain().y;var extents=[Math.min.apply(Math,domain),Math.max.apply(Math,domain)];var extentMap=d3.scale.linear().domain([0,1]).range(extents);var adjExtents=[extentMap(renderDomain[0]),extentMap(renderDomain[1])];var adjustment=d3.scale.linear().domain(extents).range(adjExtents);var adjustedScale=this.scale.copy().domain(domain.map(adjustment)).range(scale.range());return $super(adjustedScale)},_drawGrid:function($super,axis){if(this.grid){$super(axis)}}});Rickshaw.namespace(\"Rickshaw.Graph.Behavior.Series.Highlight\");Rickshaw.Graph.Behavior.Series.Highlight=function(args){this.graph=args.graph;this.legend=args.legend;var self=this;var propertiesSafe={};var activeLine=null;var disabledColor=args.disabledColor||function(seriesColor){return d3.interpolateRgb(seriesColor,d3.rgb(\"#d8d8d8\"))(.8).toString()};var transformFn=args.transform||function(isActive,series){var newProperties={};if(!isActive){newProperties.color=disabledColor(series.color)}return newProperties};this.addHighlightEvents=function(l){l.element.addEventListener(\"mouseover\",function(e){if(activeLine)return;else activeLine=l;self.legend.lines.forEach(function(line){var newProperties;var isActive=false;if(l===line){isActive=true;if(self.graph.renderer.unstack&&(line.series.renderer?line.series.renderer.unstack:true)){var seriesIndex=self.graph.series.indexOf(line.series);line.originalIndex=seriesIndex;var series=self.graph.series.splice(seriesIndex,1)[0];self.graph.series.push(series)}}newProperties=transformFn(isActive,line.series);propertiesSafe[line.series.name]=propertiesSafe[line.series.name]||{color:line.series.color,stroke:line.series.stroke};if(newProperties.color){line.series.color=newProperties.color}if(newProperties.stroke){line.series.stroke=newProperties.stroke}});self.graph.update()},false);l.element.addEventListener(\"mouseout\",function(e){if(!activeLine)return;else activeLine=null;self.legend.lines.forEach(function(line){if(l===line&&line.hasOwnProperty(\"originalIndex\")){var series=self.graph.series.pop();self.graph.series.splice(line.originalIndex,0,series);delete line.originalIndex}var lineProperties=propertiesSafe[line.series.name];if(lineProperties){line.series.color=lineProperties.color;line.series.stroke=lineProperties.stroke}});self.graph.update()},false)};if(this.legend){this.legend.lines.forEach(function(l){self.addHighlightEvents(l)})}};Rickshaw.namespace(\"Rickshaw.Graph.Behavior.Series.Order\");Rickshaw.Graph.Behavior.Series.Order=function(args){this.graph=args.graph;this.legend=args.legend;var self=this;if(typeof window.jQuery==\"undefined\"){throw\"couldn't find jQuery at window.jQuery\"}if(typeof window.jQuery.ui==\"undefined\"){throw\"couldn't find jQuery UI at window.jQuery.ui\"}jQuery(function(){jQuery(self.legend.list).sortable({containment:\"parent\",tolerance:\"pointer\",update:function(event,ui){var series=[];jQuery(self.legend.list).find(\"li\").each(function(index,item){if(!item.series)return;series.push(item.series)});for(var i=self.graph.series.length-1;i>=0;i--){self.graph.series[i]=series.shift()}self.graph.update()}});jQuery(self.legend.list).disableSelection()});this.graph.onUpdate(function(){var h=window.getComputedStyle(self.legend.element).height;self.legend.element.style.height=h})};Rickshaw.namespace(\"Rickshaw.Graph.Behavior.Series.Toggle\");Rickshaw.Graph.Behavior.Series.Toggle=function(args){this.graph=args.graph;this.legend=args.legend;var self=this;this.addAnchor=function(line){var anchor=document.createElement(\"a\");anchor.innerHTML=\"&#10004;\";anchor.classList.add(\"action\");line.element.insertBefore(anchor,line.element.firstChild);anchor.onclick=function(e){if(line.series.disabled){line.series.enable();line.element.classList.remove(\"disabled\")}else{if(this.graph.series.filter(function(s){return!s.disabled}).length<=1)return;line.series.disable();line.element.classList.add(\"disabled\")}self.graph.update()}.bind(this);var label=line.element.getElementsByTagName(\"span\")[0];label.onclick=function(e){var disableAllOtherLines=line.series.disabled;if(!disableAllOtherLines){for(var i=0;i<self.legend.lines.length;i++){var l=self.legend.lines[i];if(line.series===l.series){}else if(l.series.disabled){}else{disableAllOtherLines=true;break}}}if(disableAllOtherLines){line.series.enable();line.element.classList.remove(\"disabled\");self.legend.lines.forEach(function(l){if(line.series===l.series){}else{l.series.disable();l.element.classList.add(\"disabled\")}})}else{self.legend.lines.forEach(function(l){l.series.enable();l.element.classList.remove(\"disabled\")})}self.graph.update()}};if(this.legend){if(typeof jQuery!=\"undefined\"&&jQuery(this.legend.list).sortable){jQuery(this.legend.list).sortable({start:function(event,ui){ui.item.bind(\"no.onclick\",function(event){event.preventDefault()})},stop:function(event,ui){setTimeout(function(){ui.item.unbind(\"no.onclick\")},250)}})}this.legend.lines.forEach(function(l){self.addAnchor(l)})}this._addBehavior=function(){this.graph.series.forEach(function(s){s.disable=function(){if(self.graph.series.length<=1){throw\"only one series left\"}s.disabled=true};s.enable=function(){s.disabled=false}})};this._addBehavior();this.updateBehaviour=function(){this._addBehavior()}};Rickshaw.namespace(\"Rickshaw.Graph.DragZoom\");Rickshaw.Graph.DragZoom=Rickshaw.Class.create({initialize:function(args){if(!args||!args.graph){throw new Error(\"Rickshaw.Graph.DragZoom needs a reference to a graph\")}var defaults={opacity:.5,fill:\"steelblue\",minimumTimeSelection:60,callback:function(){}};this.graph=args.graph;this.svg=d3.select(this.graph.element).select(\"svg\");this.svgWidth=parseInt(this.svg.attr(\"width\"),10);this.opacity=args.opacity||defaults.opacity;this.fill=args.fill||defaults.fill;this.minimumTimeSelection=args.minimumTimeSelection||defaults.minimumTimeSelection;this.callback=args.callback||defaults.callback;this.registerMouseEvents()},registerMouseEvents:function(){var self=this;var ESCAPE_KEYCODE=27;var rectangle;var drag={startDt:null,stopDt:null,startPX:null,stopPX:null};this.svg.on(\"mousedown\",onMousedown);function onMouseup(datum,index){drag.stopDt=pointAsDate(d3.event);var windowAfterDrag=[drag.startDt,drag.stopDt].sort(compareNumbers);self.graph.window.xMin=windowAfterDrag[0];self.graph.window.xMax=windowAfterDrag[1];var endTime=self.graph.window.xMax;var range=self.graph.window.xMax-self.graph.window.xMin;reset(this);if(range<self.minimumTimeSelection||isNaN(range)){return}self.graph.update();self.callback({range:range,endTime:endTime})}function onMousemove(){var offset=drag.stopPX=d3.event.offsetX||d3.event.layerX;if(offset>self.svgWidth-1||offset<1){return}var limits=[drag.startPX,offset].sort(compareNumbers);var selectionWidth=limits[1]-limits[0];if(isNaN(selectionWidth)){return reset(this)}rectangle.attr(\"fill\",self.fill).attr(\"x\",limits[0]).attr(\"width\",selectionWidth)}function onMousedown(){var el=d3.select(this);rectangle=el.append(\"rect\").style(\"opacity\",self.opacity).attr(\"y\",0).attr(\"height\",\"100%\");if(d3.event.preventDefault){d3.event.preventDefault()}else{d3.event.returnValue=false}drag.target=d3.event.target;drag.startDt=pointAsDate(d3.event);drag.startPX=d3.event.offsetX||d3.event.layerX;el.on(\"mousemove\",onMousemove);d3.select(document).on(\"mouseup\",onMouseup);d3.select(document).on(\"keyup\",function(){if(d3.event.keyCode===ESCAPE_KEYCODE){reset(this)}})}function reset(el){var s=d3.select(el);s.on(\"mousemove\",null);d3.select(document).on(\"mouseup\",null);drag={};rectangle.remove()}function compareNumbers(a,b){return a-b}function pointAsDate(e){return Math.floor(self.graph.x.invert(e.offsetX||e.layerX))}}});Rickshaw.namespace(\"Rickshaw.Graph.HoverDetail\");Rickshaw.Graph.HoverDetail=Rickshaw.Class.create({initialize:function(args){var graph=this.graph=args.graph;this.xFormatter=args.xFormatter||function(x){return new Date(x*1e3).toUTCString()};this.yFormatter=args.yFormatter||function(y){return y===null?y:y.toFixed(2)};var element=this.element=document.createElement(\"div\");element.className=\"detail inactive\";this.visible=true;graph.element.appendChild(element);this.lastEvent=null;this._addListeners();this.onShow=args.onShow;this.onHide=args.onHide;this.onRender=args.onRender;this.formatter=args.formatter||this.formatter},formatter:function(series,x,y,formattedX,formattedY,d){return series.name+\":&nbsp;\"+formattedY},update:function(e){e=e||this.lastEvent;if(!e)return;this.lastEvent=e;if(!e.target.nodeName.match(/^(path|svg|rect|circle)$/))return;var graph=this.graph;var rect=graph.element.getBoundingClientRect();var eventX=e.clientX-rect.left;var eventY=e.clientY-rect.top;var j=0;var points=[];var nearestPoint;this.graph.series.active().forEach(function(series){var data=this.graph.stackedData[j++];if(!data.length)return;var domainX=graph.x.invert(eventX);var domainIndexScale=d3.scale.linear().domain([data[0].x,data.slice(-1)[0].x]).range([0,data.length-1]);var approximateIndex=Math.round(domainIndexScale(domainX));if(approximateIndex==data.length-1)approximateIndex--;var dataIndex=Math.min(approximateIndex||0,data.length-1);for(var i=approximateIndex;i<data.length-1;){if(!data[i]||!data[i+1])break;if(data[i].x<=domainX&&data[i+1].x>domainX){dataIndex=Math.abs(domainX-data[i].x)<Math.abs(domainX-data[i+1].x)?i:i+1;break}if(data[i+1].x<=domainX){i++}else{i--}}if(dataIndex<0)dataIndex=0;var value=data[dataIndex];var distance=Math.sqrt(Math.pow(Math.abs(graph.x(value.x)-eventX),2)+Math.pow(Math.abs(graph.y(value.y+value.y0)-eventY),2));var xFormatter=series.xFormatter||this.xFormatter;var yFormatter=series.yFormatter||this.yFormatter;var point={formattedXValue:xFormatter(value.x),formattedYValue:yFormatter(series.scale?series.scale.invert(value.y):value.y),series:series,value:value,distance:distance,order:j,name:series.name};if(!nearestPoint||distance<nearestPoint.distance){nearestPoint=point}points.push(point)},this);if(!nearestPoint)return;nearestPoint.active=true;var domainX=nearestPoint.value.x;var formattedXValue=nearestPoint.formattedXValue;this.element.innerHTML=\"\";this.element.style.left=graph.x(domainX)+\"px\";this.visible&&this.render({points:points,detail:points,mouseX:eventX,mouseY:eventY,formattedXValue:formattedXValue,domainX:domainX})},hide:function(){this.visible=false;this.element.classList.add(\"inactive\");if(typeof this.onHide==\"function\"){this.onHide()}},show:function(){this.visible=true;this.element.classList.remove(\"inactive\");if(typeof this.onShow==\"function\"){this.onShow()}},render:function(args){var graph=this.graph;var points=args.points;var point=points.filter(function(p){return p.active}).shift();if(point.value.y===null)return;var formattedXValue=point.formattedXValue;var formattedYValue=point.formattedYValue;this.element.innerHTML=\"\";this.element.style.left=graph.x(point.value.x)+\"px\";var xLabel=document.createElement(\"div\");xLabel.className=\"x_label\";xLabel.innerHTML=formattedXValue;this.element.appendChild(xLabel);var item=document.createElement(\"div\");item.className=\"item\";var series=point.series;var actualY=series.scale?series.scale.invert(point.value.y):point.value.y;item.innerHTML=this.formatter(series,point.value.x,actualY,formattedXValue,formattedYValue,point);item.style.top=this.graph.y(point.value.y0+point.value.y)+\"px\";this.element.appendChild(item);var dot=document.createElement(\"div\");dot.className=\"dot\";dot.style.top=item.style.top;dot.style.borderColor=series.color;this.element.appendChild(dot);if(point.active){item.classList.add(\"active\");dot.classList.add(\"active\")}var alignables=[xLabel,item];alignables.forEach(function(el){el.classList.add(\"left\")});this.show();var leftAlignError=this._calcLayoutError(alignables);if(leftAlignError>0){alignables.forEach(function(el){el.classList.remove(\"left\");el.classList.add(\"right\")});var rightAlignError=this._calcLayoutError(alignables);if(rightAlignError>leftAlignError){alignables.forEach(function(el){el.classList.remove(\"right\");el.classList.add(\"left\")})}}if(typeof this.onRender==\"function\"){this.onRender(args)}},_calcLayoutError:function(alignables){var parentRect=this.element.parentNode.getBoundingClientRect();var error=0;var alignRight=alignables.forEach(function(el){var rect=el.getBoundingClientRect();if(!rect.width){return}if(rect.right>parentRect.right){error+=rect.right-parentRect.right}if(rect.left<parentRect.left){error+=parentRect.left-rect.left}});return error},_addListeners:function(){this.mousemoveListener=function(e){this.visible=true;this.update(e)}.bind(this);this.graph.element.addEventListener(\"mousemove\",this.mousemoveListener,false);this.graph.onUpdate(function(){this.update()}.bind(this));this.mouseoutListener=function(e){if(e.relatedTarget&&!(e.relatedTarget.compareDocumentPosition(this.graph.element)&Node.DOCUMENT_POSITION_CONTAINS)){this.hide()}}.bind(this);this.graph.element.addEventListener(\"mouseout\",this.mouseoutListener,false)},_removeListeners:function(){if(this.mousemoveListener){this.graph.element.removeEventListener(\"mousemove\",this.mousemoveListener,false)}if(this.mouseoutListener){this.graph.element.removeEventListener(\"mouseout\",this.mouseoutListener,false)}}});Rickshaw.namespace(\"Rickshaw.Graph.JSONP\");Rickshaw.Graph.JSONP=Rickshaw.Class.create(Rickshaw.Graph.Ajax,{request:function(){jQuery.ajax({url:this.dataURL,dataType:\"jsonp\",success:this.success.bind(this),error:this.error.bind(this)})}});Rickshaw.namespace(\"Rickshaw.Graph.Legend\");Rickshaw.Graph.Legend=Rickshaw.Class.create({className:\"rickshaw_legend\",initialize:function(args){this.element=args.element;this.graph=args.graph;this.naturalOrder=args.naturalOrder;this.colorKey=args.colorKey||\"color\";this.element.classList.add(this.className);this.list=document.createElement(\"ul\");this.element.appendChild(this.list);this.render();this.graph.onUpdate(function(){})},render:function(){var self=this;while(this.list.firstChild){this.list.removeChild(this.list.firstChild)}this.lines=[];var series=this.graph.series.map(function(s){return s});if(!this.naturalOrder){series=series.reverse()}series.forEach(function(s){self.addLine(s)})},addLine:function(series){var line=document.createElement(\"li\");line.className=\"line\";if(series.disabled){line.className+=\" disabled\"}if(series.className){d3.select(line).classed(series.className,true)}var swatch=document.createElement(\"div\");swatch.className=\"swatch\";swatch.style.backgroundColor=series[this.colorKey];line.appendChild(swatch);var label=document.createElement(\"span\");label.className=\"label\";label.innerHTML=series.name;line.appendChild(label);this.list.appendChild(line);line.series=series;if(series.noLegend){line.style.display=\"none\"}var _line={element:line,series:series};if(this.shelving){this.shelving.addAnchor(_line);this.shelving.updateBehaviour()}if(this.highlighter){this.highlighter.addHighlightEvents(_line)}this.lines.push(_line);return line}});Rickshaw.namespace(\"Rickshaw.Graph.RangeSlider\");Rickshaw.Graph.RangeSlider=Rickshaw.Class.create({initialize:function(args){var $=jQuery;var self=this;var element=this.element=args.element;var graphs=this.graphs=args.graphs;if(!graphs){graphs=this.graph=args.graph}if(graphs.constructor!==Array){graphs=[graphs]}this.graph=graphs[0];this.slideCallbacks=[];this.build();for(var i=0;i<graphs.length;i++){graphs[i].onUpdate(function(){self.update()}.bind(self));(function(idx){graphs[idx].onConfigure(function(){$(this.element)[0].style.width=graphs[idx].width+\"px\"}.bind(self))})(i)}},build:function(){var domain;var element=this.element;var $=jQuery;var self=this;var graphs=this.graphs||this.graph;if(graphs.constructor!==Array){graphs=[graphs]}this.graph=graphs[0];domain=graphs[0].dataDomain();$(function(){$(element).slider({range:true,min:domain[0],max:domain[1],values:[domain[0],domain[1]],start:function(event,ui){self.slideStarted({event:event,ui:ui})},stop:function(event,ui){self.slideFinished({event:event,ui:ui})},slide:function(event,ui){if(!self.slideShouldUpdate(event,ui))return;if(ui.values[1]<=ui.values[0])return;for(var i=0;i<graphs.length;i++){self.processSlideChange({event:event,ui:ui,graph:graphs[i]})}}})});graphs[0].onConfigure(function(){$(this.element)[0].style.width=graphs[0].width+\"px\"}.bind(this))},update:function(){var element=this.element;var graph=this.graph;var $=jQuery;var values=$(element).slider(\"option\",\"values\");var domain=graph.dataDomain();$(element).slider(\"option\",\"min\",domain[0]);$(element).slider(\"option\",\"max\",domain[1]);if(graph.window.xMin==null){values[0]=domain[0]}if(graph.window.xMax==null){values[1]=domain[1]}$(element).slider(\"option\",\"values\",values)},onSlide:function(callback){this.slideCallbacks.push(callback)},processSlideChange:function(args){var event=args.event;var ui=args.ui;var graph=args.graph;graph.window.xMin=ui.values[0];graph.window.xMax=ui.values[1];graph.update();var domain=graph.dataDomain();if(domain[0]==ui.values[0]){graph.window.xMin=undefined}if(domain[1]==ui.values[1]){graph.window.xMax=undefined}this.slideCallbacks.forEach(function(callback){callback(graph,graph.window.xMin,graph.window.xMax)})},slideShouldUpdate:function(){return true},slideStarted:function(){return},slideFinished:function(){return}});Rickshaw.namespace(\"Rickshaw.Graph.RangeSlider.Preview\");Rickshaw.Graph.RangeSlider.Preview=Rickshaw.Class.create({initialize:function(args){if(!args.element)throw\"Rickshaw.Graph.RangeSlider.Preview needs a reference to an element\";if(!args.graph&&!args.graphs)throw\"Rickshaw.Graph.RangeSlider.Preview needs a reference to an graph or an array of graphs\";this.element=args.element;this.element.style.position=\"relative\";this.graphs=args.graph?[args.graph]:args.graphs;this.defaults={height:75,width:400,gripperColor:undefined,frameTopThickness:3,frameHandleThickness:10,frameColor:\"#d4d4d4\",frameOpacity:1,minimumFrameWidth:0,heightRatio:.2};this.heightRatio=args.heightRatio||this.defaults.heightRatio;this.defaults.gripperColor=d3.rgb(this.defaults.frameColor).darker().toString();this.configureCallbacks=[];this.slideCallbacks=[];this.previews=[];if(!args.width)this.widthFromGraph=true;if(!args.height)this.heightFromGraph=true;if(this.widthFromGraph||this.heightFromGraph){this.graphs[0].onConfigure(function(){this.configure(args);this.render()}.bind(this))}args.width=args.width||this.graphs[0].width||this.defaults.width;args.height=args.height||this.graphs[0].height*this.heightRatio||this.defaults.height;this.configure(args);this.render()},onSlide:function(callback){this.slideCallbacks.push(callback)},onConfigure:function(callback){this.configureCallbacks.push(callback)},configure:function(args){this.config=this.config||{};this.configureCallbacks.forEach(function(callback){callback(args)});Rickshaw.keys(this.defaults).forEach(function(k){this.config[k]=k in args?args[k]:k in this.config?this.config[k]:this.defaults[k]},this);if(\"width\"in args||\"height\"in args){if(this.widthFromGraph){this.config.width=this.graphs[0].width}if(this.heightFromGraph){this.config.height=this.graphs[0].height*this.heightRatio;this.previewHeight=this.config.height}this.previews.forEach(function(preview){var height=this.previewHeight/this.graphs.length-this.config.frameTopThickness*2;var width=this.config.width-this.config.frameHandleThickness*2;preview.setSize({width:width,height:height});if(this.svg){var svgHeight=height+this.config.frameHandleThickness*2;var svgWidth=width+this.config.frameHandleThickness*2;this.svg.style(\"width\",svgWidth+\"px\");this.svg.style(\"height\",svgHeight+\"px\")}},this)}},render:function(){var self=this;this.svg=d3.select(this.element).selectAll(\"svg.rickshaw_range_slider_preview\").data([null]);this.previewHeight=this.config.height-this.config.frameTopThickness*2;this.previewWidth=this.config.width-this.config.frameHandleThickness*2;this.currentFrame=[0,this.previewWidth];var buildGraph=function(parent,index){var graphArgs=Rickshaw.extend({},parent.config);var height=self.previewHeight/self.graphs.length;var renderer=parent.renderer.name;Rickshaw.extend(graphArgs,{element:this.appendChild(document.createElement(\"div\")),height:height,width:self.previewWidth,series:parent.series,renderer:renderer});var graph=new Rickshaw.Graph(graphArgs);self.previews.push(graph);parent.onUpdate(function(){graph.render();self.render()});parent.onConfigure(function(args){delete args.height;args.width=args.width-self.config.frameHandleThickness*2;graph.configure(args);graph.render()});graph.render()};var graphContainer=d3.select(this.element).selectAll(\"div.rickshaw_range_slider_preview_container\").data(this.graphs);var translateCommand=\"translate(\"+this.config.frameHandleThickness+\"px, \"+this.config.frameTopThickness+\"px)\";graphContainer.enter().append(\"div\").classed(\"rickshaw_range_slider_preview_container\",true).style(\"-webkit-transform\",translateCommand).style(\"-moz-transform\",translateCommand).style(\"-ms-transform\",translateCommand).style(\"transform\",translateCommand).each(buildGraph);graphContainer.exit().remove();var masterGraph=this.graphs[0];var domainScale=d3.scale.linear().domain([0,this.previewWidth]).range(masterGraph.dataDomain());var currentWindow=[masterGraph.window.xMin,masterGraph.window.xMax];this.currentFrame[0]=currentWindow[0]===undefined?0:Math.round(domainScale.invert(currentWindow[0]));if(this.currentFrame[0]<0)this.currentFrame[0]=0;this.currentFrame[1]=currentWindow[1]===undefined?this.previewWidth:domainScale.invert(currentWindow[1]);if(this.currentFrame[1]-this.currentFrame[0]<self.config.minimumFrameWidth){this.currentFrame[1]=(this.currentFrame[0]||0)+self.config.minimumFrameWidth}this.svg.enter().append(\"svg\").classed(\"rickshaw_range_slider_preview\",true).style(\"height\",this.config.height+\"px\").style(\"width\",this.config.width+\"px\").style(\"position\",\"absolute\").style(\"top\",0);this._renderDimming();this._renderFrame();this._renderGrippers();this._renderHandles();this._renderMiddle();this._registerMouseEvents()},_renderDimming:function(){var element=this.svg.selectAll(\"path.dimming\").data([null]);element.enter().append(\"path\").attr(\"fill\",\"white\").attr(\"fill-opacity\",\"0.7\").attr(\"fill-rule\",\"evenodd\").classed(\"dimming\",true);var path=\"\";path+=\" M \"+this.config.frameHandleThickness+\" \"+this.config.frameTopThickness;path+=\" h \"+this.previewWidth;path+=\" v \"+this.previewHeight;path+=\" h \"+-this.previewWidth;path+=\" z \";path+=\" M \"+Math.max(this.currentFrame[0],this.config.frameHandleThickness)+\" \"+this.config.frameTopThickness;path+=\" H \"+Math.min(this.currentFrame[1]+this.config.frameHandleThickness*2,this.previewWidth+this.config.frameHandleThickness);path+=\" v \"+this.previewHeight;path+=\" H \"+Math.max(this.currentFrame[0],this.config.frameHandleThickness);path+=\" z\";element.attr(\"d\",path)},_renderFrame:function(){var element=this.svg.selectAll(\"path.frame\").data([null]);element.enter().append(\"path\").attr(\"stroke\",\"white\").attr(\"stroke-width\",\"1px\").attr(\"stroke-linejoin\",\"round\").attr(\"fill\",this.config.frameColor).attr(\"fill-opacity\",this.config.frameOpacity).attr(\"fill-rule\",\"evenodd\").classed(\"frame\",true);var path=\"\";path+=\" M \"+this.currentFrame[0]+\" 0\";path+=\" H \"+(this.currentFrame[1]+this.config.frameHandleThickness*2);path+=\" V \"+this.config.height;path+=\" H \"+this.currentFrame[0];path+=\" z\";path+=\" M \"+(this.currentFrame[0]+this.config.frameHandleThickness)+\" \"+this.config.frameTopThickness;path+=\" H \"+(this.currentFrame[1]+this.config.frameHandleThickness);path+=\" v \"+this.previewHeight;path+=\" H \"+(this.currentFrame[0]+this.config.frameHandleThickness);path+=\" z\";element.attr(\"d\",path)},_renderGrippers:function(){var gripper=this.svg.selectAll(\"path.gripper\").data([null]);gripper.enter().append(\"path\").attr(\"stroke\",this.config.gripperColor).classed(\"gripper\",true);var path=\"\";[.4,.6].forEach(function(spacing){path+=\" M \"+Math.round(this.currentFrame[0]+this.config.frameHandleThickness*spacing)+\" \"+Math.round(this.config.height*.3);path+=\" V \"+Math.round(this.config.height*.7);path+=\" M \"+Math.round(this.currentFrame[1]+this.config.frameHandleThickness*(1+spacing))+\" \"+Math.round(this.config.height*.3);path+=\" V \"+Math.round(this.config.height*.7)}.bind(this));gripper.attr(\"d\",path)},_renderHandles:function(){var leftHandle=this.svg.selectAll(\"rect.left_handle\").data([null]);leftHandle.enter().append(\"rect\").attr(\"width\",this.config.frameHandleThickness).style(\"cursor\",\"ew-resize\").style(\"fill-opacity\",\"0\").classed(\"left_handle\",true);leftHandle.attr(\"x\",this.currentFrame[0]).attr(\"height\",this.config.height);var rightHandle=this.svg.selectAll(\"rect.right_handle\").data([null]);rightHandle.enter().append(\"rect\").attr(\"width\",this.config.frameHandleThickness).style(\"cursor\",\"ew-resize\").style(\"fill-opacity\",\"0\").classed(\"right_handle\",true);rightHandle.attr(\"x\",this.currentFrame[1]+this.config.frameHandleThickness).attr(\"height\",this.config.height)},_renderMiddle:function(){var middleHandle=this.svg.selectAll(\"rect.middle_handle\").data([null]);middleHandle.enter().append(\"rect\").style(\"cursor\",\"move\").style(\"fill-opacity\",\"0\").classed(\"middle_handle\",true);middleHandle.attr(\"width\",Math.max(0,this.currentFrame[1]-this.currentFrame[0])).attr(\"x\",this.currentFrame[0]+this.config.frameHandleThickness).attr(\"height\",this.config.height)},_registerMouseEvents:function(){var element=d3.select(this.element);var drag={target:null,start:null,stop:null,left:false,right:false,rigid:false};var self=this;function onMousemove(datum,index){drag.stop=self._getClientXFromEvent(d3.event,drag);var distanceTraveled=drag.stop-drag.start;var frameAfterDrag=self.frameBeforeDrag.slice(0);var minimumFrameWidth=self.config.minimumFrameWidth;if(drag.rigid){minimumFrameWidth=self.frameBeforeDrag[1]-self.frameBeforeDrag[0]}if(drag.left){frameAfterDrag[0]=Math.max(frameAfterDrag[0]+distanceTraveled,0)}if(drag.right){frameAfterDrag[1]=Math.min(frameAfterDrag[1]+distanceTraveled,self.previewWidth)}var currentFrameWidth=frameAfterDrag[1]-frameAfterDrag[0];if(currentFrameWidth<=minimumFrameWidth){if(drag.left){frameAfterDrag[0]=frameAfterDrag[1]-minimumFrameWidth}if(drag.right){frameAfterDrag[1]=frameAfterDrag[0]+minimumFrameWidth}if(frameAfterDrag[0]<=0){frameAfterDrag[1]-=frameAfterDrag[0];frameAfterDrag[0]=0}if(frameAfterDrag[1]>=self.previewWidth){frameAfterDrag[0]-=frameAfterDrag[1]-self.previewWidth;frameAfterDrag[1]=self.previewWidth}}self.graphs.forEach(function(graph){var domainScale=d3.scale.linear().interpolate(d3.interpolateNumber).domain([0,self.previewWidth]).range(graph.dataDomain());var windowAfterDrag=[domainScale(frameAfterDrag[0]),domainScale(frameAfterDrag[1])];self.slideCallbacks.forEach(function(callback){callback(graph,windowAfterDrag[0],windowAfterDrag[1])});if(frameAfterDrag[0]===0){windowAfterDrag[0]=undefined}if(frameAfterDrag[1]===self.previewWidth){windowAfterDrag[1]=undefined}graph.window.xMin=windowAfterDrag[0];graph.window.xMax=windowAfterDrag[1];graph.update()})}function onMousedown(){drag.target=d3.event.target;drag.start=self._getClientXFromEvent(d3.event,drag);self.frameBeforeDrag=self.currentFrame.slice();d3.event.preventDefault?d3.event.preventDefault():d3.event.returnValue=false;d3.select(document).on(\"mousemove.rickshaw_range_slider_preview\",onMousemove);d3.select(document).on(\"mouseup.rickshaw_range_slider_preview\",onMouseup);d3.select(document).on(\"touchmove.rickshaw_range_slider_preview\",onMousemove);d3.select(document).on(\"touchend.rickshaw_range_slider_preview\",onMouseup);d3.select(document).on(\"touchcancel.rickshaw_range_slider_preview\",onMouseup)}function onMousedownLeftHandle(datum,index){drag.left=true;onMousedown()}function onMousedownRightHandle(datum,index){drag.right=true;onMousedown()}function onMousedownMiddleHandle(datum,index){drag.left=true;drag.right=true;drag.rigid=true;onMousedown()}function onMouseup(datum,index){d3.select(document).on(\"mousemove.rickshaw_range_slider_preview\",null);d3.select(document).on(\"mouseup.rickshaw_range_slider_preview\",null);d3.select(document).on(\"touchmove.rickshaw_range_slider_preview\",null);d3.select(document).on(\"touchend.rickshaw_range_slider_preview\",null);d3.select(document).on(\"touchcancel.rickshaw_range_slider_preview\",null);delete self.frameBeforeDrag;drag.left=false;drag.right=false;drag.rigid=false}element.select(\"rect.left_handle\").on(\"mousedown\",onMousedownLeftHandle);element.select(\"rect.right_handle\").on(\"mousedown\",onMousedownRightHandle);element.select(\"rect.middle_handle\").on(\"mousedown\",onMousedownMiddleHandle);element.select(\"rect.left_handle\").on(\"touchstart\",onMousedownLeftHandle);element.select(\"rect.right_handle\").on(\"touchstart\",onMousedownRightHandle);element.select(\"rect.middle_handle\").on(\"touchstart\",onMousedownMiddleHandle)},_getClientXFromEvent:function(event,drag){switch(event.type){case\"touchstart\":case\"touchmove\":var touchList=event.changedTouches;var touch=null;for(var touchIndex=0;touchIndex<touchList.length;touchIndex++){if(touchList[touchIndex].target===drag.target){touch=touchList[touchIndex];break}}return touch!==null?touch.clientX:undefined;default:return event.clientX}}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer\");Rickshaw.Graph.Renderer=Rickshaw.Class.create({initialize:function(args){this.graph=args.graph;this.tension=args.tension||this.tension;this.configure(args)},seriesPathFactory:function(){},seriesStrokeFactory:function(){},defaults:function(){return{tension:.8,strokeWidth:2,unstack:true,padding:{top:.01,right:0,bottom:.01,left:0},stroke:false,fill:false,opacity:1}},domain:function(data){var stackedData=data||this.graph.stackedData||this.graph.stackData();stackedData=stackedData.filter(function(a){return a&&a.length!==0});var xMin=+Infinity;var xMax=-Infinity;var yMin=+Infinity;var yMax=-Infinity;stackedData.forEach(function(series){series.forEach(function(d){if(d.y==null)return;var y=d.y+d.y0;if(y<yMin)yMin=y;if(y>yMax)yMax=y});if(!series.length)return;if(series[0].x<xMin)xMin=series[0].x;if(series[series.length-1].x>xMax)xMax=series[series.length-1].x});xMin-=(xMax-xMin)*this.padding.left;xMax+=(xMax-xMin)*this.padding.right;yMin=this.graph.min===\"auto\"?yMin:this.graph.min||0;yMax=this.graph.max===undefined?yMax:this.graph.max;if(this.graph.min===\"auto\"||yMin<0){yMin-=(yMax-yMin)*this.padding.bottom}if(this.graph.max===undefined){yMax+=(yMax-yMin)*this.padding.top}return{x:[xMin,xMax],y:[yMin,yMax]}},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;vis.selectAll(\"*\").remove();var data=series.filter(function(s){return!s.disabled}).map(function(s){return s.stack});var pathNodes=vis.selectAll(\"path.path\").data(data).enter().append(\"svg:path\").classed(\"path\",true).attr(\"d\",this.seriesPathFactory());if(this.stroke){var strokeNodes=vis.selectAll(\"path.stroke\").data(data).enter().append(\"svg:path\").classed(\"stroke\",true).attr(\"d\",this.seriesStrokeFactory())}var i=0;series.forEach(function(series){if(series.disabled)return;series.path=pathNodes[0][i];if(this.stroke)series.stroke=strokeNodes[0][i];this._styleSeries(series);i++},this)},\n_styleSeries:function(series){var fill=this.fill?series.color:\"none\";var stroke=this.stroke?series.color:\"none\";var strokeWidth=series.strokeWidth?series.strokeWidth:this.strokeWidth;var opacity=series.opacity===undefined?this.opacity:series.opacity;series.path.setAttribute(\"fill\",fill);series.path.setAttribute(\"stroke\",stroke);series.path.setAttribute(\"stroke-width\",strokeWidth);series.path.setAttribute(\"opacity\",opacity);if(series.className){d3.select(series.path).classed(series.className,true)}if(series.className&&this.stroke){d3.select(series.stroke).classed(series.className,true)}},configure:function(args){args=args||{};Rickshaw.keys(this.defaults()).forEach(function(key){if(!args.hasOwnProperty(key)){this[key]=this[key]||this.graph[key]||this.defaults()[key];return}if(typeof this.defaults()[key]==\"object\"){Rickshaw.keys(this.defaults()[key]).forEach(function(k){this[key][k]=args[key][k]!==undefined?args[key][k]:this[key][k]!==undefined?this[key][k]:this.defaults()[key][k]},this)}else{this[key]=args[key]!==undefined?args[key]:this[key]!==undefined?this[key]:this.graph[key]!==undefined?this.graph[key]:this.defaults()[key]}},this)},setStrokeWidth:function(strokeWidth){if(strokeWidth!==undefined){this.strokeWidth=strokeWidth}},setTension:function(tension){if(tension!==undefined){this.tension=tension}}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer.Line\");Rickshaw.Graph.Renderer.Line=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:\"line\",defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:false,stroke:true})},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.line().x(function(d){return graph.x(d.x)}).y(function(d){return graph.y(d.y)}).interpolate(this.graph.interpolation).tension(this.tension);factory.defined&&factory.defined(function(d){return d.y!==null});return factory}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer.Stack\");Rickshaw.Graph.Renderer.Stack=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:\"stack\",defaults:function($super){return Rickshaw.extend($super(),{fill:true,stroke:false,unstack:false})},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.area().x(function(d){return graph.x(d.x)}).y0(function(d){return graph.y(d.y0)}).y1(function(d){return graph.y(d.y+d.y0)}).interpolate(this.graph.interpolation).tension(this.tension);factory.defined&&factory.defined(function(d){return d.y!==null});return factory}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer.Bar\");Rickshaw.Graph.Renderer.Bar=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:\"bar\",defaults:function($super){var defaults=Rickshaw.extend($super(),{gapSize:.05,unstack:false,opacity:1});delete defaults.tension;return defaults},initialize:function($super,args){args=args||{};this.gapSize=args.gapSize||this.gapSize;$super(args)},domain:function($super){var domain=$super();var frequentInterval=this._frequentInterval(this.graph.stackedData.slice(-1).shift());domain.x[1]+=Number(frequentInterval.magnitude);return domain},barWidth:function(series){var frequentInterval=this._frequentInterval(series.stack);var barWidth=this.graph.x.magnitude(frequentInterval.magnitude)*(1-this.gapSize);return barWidth},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;vis.selectAll(\"*\").remove();var barWidth=this.barWidth(series.active()[0]);var barXOffset=0;var activeSeriesCount=series.filter(function(s){return!s.disabled}).length;var seriesBarWidth=this.unstack?barWidth/activeSeriesCount:barWidth;var transform=function(d){var matrix=[1,0,0,d.y<0?-1:1,0,d.y<0?graph.y.magnitude(Math.abs(d.y))*2:0];return\"matrix(\"+matrix.join(\",\")+\")\"};series.forEach(function(series){if(series.disabled)return;var barWidth=this.barWidth(series);var nodes=vis.selectAll(\"path\").data(series.stack.filter(function(d){return d.y!==null})).enter().append(\"svg:rect\").attr(\"x\",function(d){return graph.x(d.x)+barXOffset}).attr(\"y\",function(d){return graph.y(d.y0+Math.abs(d.y))*(d.y<0?-1:1)}).attr(\"width\",seriesBarWidth).attr(\"height\",function(d){return graph.y.magnitude(Math.abs(d.y))}).attr(\"opacity\",series.opacity).attr(\"transform\",transform);Array.prototype.forEach.call(nodes[0],function(n){n.setAttribute(\"fill\",series.color)});if(this.unstack)barXOffset+=seriesBarWidth},this)},_frequentInterval:function(data){var intervalCounts={};for(var i=0;i<data.length-1;i++){var interval=data[i+1].x-data[i].x;intervalCounts[interval]=intervalCounts[interval]||0;intervalCounts[interval]++}var frequentInterval={count:0,magnitude:1};var keysSorted=Rickshaw.keys(intervalCounts).sort(function asc(a,b){return Number(a)-Number(b)});keysSorted.forEach(function(i){if(frequentInterval.count<intervalCounts[i]){frequentInterval={count:intervalCounts[i],magnitude:i}}});return frequentInterval}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer.Area\");Rickshaw.Graph.Renderer.Area=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:\"area\",defaults:function($super){return Rickshaw.extend($super(),{unstack:false,fill:false,stroke:false})},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.area().x(function(d){return graph.x(d.x)}).y0(function(d){return graph.y(d.y0)}).y1(function(d){return graph.y(d.y+d.y0)}).interpolate(graph.interpolation).tension(this.tension);factory.defined&&factory.defined(function(d){return d.y!==null});return factory},seriesStrokeFactory:function(){var graph=this.graph;var factory=d3.svg.line().x(function(d){return graph.x(d.x)}).y(function(d){return graph.y(d.y+d.y0)}).interpolate(graph.interpolation).tension(this.tension);factory.defined&&factory.defined(function(d){return d.y!==null});return factory},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;vis.selectAll(\"*\").remove();var method=this.unstack?\"append\":\"insert\";var data=series.filter(function(s){return!s.disabled}).map(function(s){return s.stack});var nodes=vis.selectAll(\"path\").data(data).enter()[method](\"svg:g\",\"g\");nodes.append(\"svg:path\").attr(\"d\",this.seriesPathFactory()).attr(\"class\",\"area\");if(this.stroke){nodes.append(\"svg:path\").attr(\"d\",this.seriesStrokeFactory()).attr(\"class\",\"line\")}var i=0;series.forEach(function(series){if(series.disabled)return;series.path=nodes[0][i++];this._styleSeries(series)},this)},_styleSeries:function(series){if(!series.path)return;d3.select(series.path).select(\".area\").attr(\"fill\",series.color);if(this.stroke){d3.select(series.path).select(\".line\").attr(\"fill\",\"none\").attr(\"stroke\",series.stroke||d3.interpolateRgb(series.color,\"black\")(.125)).attr(\"stroke-width\",this.strokeWidth)}if(series.className){series.path.setAttribute(\"class\",series.className)}}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer.ScatterPlot\");Rickshaw.Graph.Renderer.ScatterPlot=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:\"scatterplot\",defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:true,stroke:false,padding:{top:.01,right:.01,bottom:.01,left:.01},dotSize:4})},initialize:function($super,args){$super(args)},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;var dotSize=this.dotSize;vis.selectAll(\"*\").remove();series.forEach(function(series){if(series.disabled)return;var opacity=series.opacity===undefined?1:series.opacity;var nodes=vis.selectAll(\"path\").data(series.stack.filter(function(d){return d.y!==null})).enter().append(\"svg:circle\").attr(\"cx\",function(d){return graph.x(d.x)}).attr(\"cy\",function(d){return graph.y(d.y)}).attr(\"r\",function(d){return\"r\"in d?d.r:dotSize}).attr(\"opacity\",function(d){return\"opacity\"in d?d.opacity:opacity});if(series.className){nodes.classed(series.className,true)}Array.prototype.forEach.call(nodes[0],function(n){n.setAttribute(\"fill\",series.color)})},this)}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer.Multi\");Rickshaw.Graph.Renderer.Multi=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:\"multi\",initialize:function($super,args){$super(args)},defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:false,stroke:true})},configure:function($super,args){args=args||{};this.config=args;$super(args)},domain:function($super){this.graph.stackData();var domains=[];var groups=this._groups();this._stack(groups);groups.forEach(function(group){var data=group.series.filter(function(s){return!s.disabled}).map(function(s){return s.stack});if(!data.length)return;var domain=null;if(group.renderer&&group.renderer.domain){domain=group.renderer.domain(data)}else{domain=$super(data)}domains.push(domain)});var xMin=d3.min(domains.map(function(d){return d.x[0]}));var xMax=d3.max(domains.map(function(d){return d.x[1]}));var yMin=d3.min(domains.map(function(d){return d.y[0]}));var yMax=d3.max(domains.map(function(d){return d.y[1]}));return{x:[xMin,xMax],y:[yMin,yMax]}},_groups:function(){var graph=this.graph;var renderGroups={};graph.series.forEach(function(series){if(series.disabled)return;if(!renderGroups[series.renderer]){var ns=\"http://www.w3.org/2000/svg\";var vis=document.createElementNS(ns,\"g\");graph.vis[0][0].appendChild(vis);var renderer=graph._renderers[series.renderer];var config={};var defaults=[this.defaults(),renderer.defaults(),this.config,this.graph];defaults.forEach(function(d){Rickshaw.extend(config,d)});renderer.configure(config);renderGroups[series.renderer]={renderer:renderer,series:[],vis:d3.select(vis)}}renderGroups[series.renderer].series.push(series)},this);var groups=[];Object.keys(renderGroups).forEach(function(key){var group=renderGroups[key];groups.push(group)});return groups},_stack:function(groups){groups.forEach(function(group){var series=group.series.filter(function(series){return!series.disabled});var data=series.map(function(series){return series.stack});if(!group.renderer.unstack){var layout=d3.layout.stack();var stackedData=Rickshaw.clone(layout(data));series.forEach(function(series,index){series._stack=Rickshaw.clone(stackedData[index])})}},this);return groups},render:function(){this.graph.series.forEach(function(series){if(!series.renderer){throw new Error(\"Each series needs a renderer for graph 'multi' renderer\")}});this.graph.vis.selectAll(\"*\").remove();var groups=this._groups();groups=this._stack(groups);groups.forEach(function(group){var series=group.series.filter(function(series){return!series.disabled});series.active=function(){return series};group.renderer.render({series:series,vis:group.vis});series.forEach(function(s){s.stack=s._stack||s.stack||s.data})})}});Rickshaw.namespace(\"Rickshaw.Graph.Renderer.LinePlot\");Rickshaw.Graph.Renderer.LinePlot=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:\"lineplot\",defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:false,stroke:true,padding:{top:.01,right:.01,bottom:.01,left:.01},dotSize:3,strokeWidth:2})},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.line().x(function(d){return graph.x(d.x)}).y(function(d){return graph.y(d.y)}).interpolate(this.graph.interpolation).tension(this.tension);factory.defined&&factory.defined(function(d){return d.y!==null});return factory},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;var dotSize=this.dotSize;vis.selectAll(\"*\").remove();var data=series.filter(function(s){return!s.disabled}).map(function(s){return s.stack});var nodes=vis.selectAll(\"path\").data(data).enter().append(\"svg:path\").attr(\"d\",this.seriesPathFactory());var i=0;series.forEach(function(series){if(series.disabled)return;series.path=nodes[0][i++];this._styleSeries(series)},this);series.forEach(function(series){if(series.disabled)return;var nodes=vis.selectAll(\"x\").data(series.stack.filter(function(d){return d.y!==null})).enter().append(\"svg:circle\").attr(\"cx\",function(d){return graph.x(d.x)}).attr(\"cy\",function(d){return graph.y(d.y)}).attr(\"r\",function(d){return\"r\"in d?d.r:dotSize});Array.prototype.forEach.call(nodes[0],function(n){if(!n)return;n.setAttribute(\"data-color\",series.color);n.setAttribute(\"fill\",\"white\");n.setAttribute(\"stroke\",series.color);n.setAttribute(\"stroke-width\",this.strokeWidth)}.bind(this))},this)}});Rickshaw.namespace(\"Rickshaw.Graph.Smoother\");Rickshaw.Graph.Smoother=Rickshaw.Class.create({initialize:function(args){this.graph=args.graph;this.element=args.element;this.aggregationScale=1;this.build();this.graph.stackData.hooks.data.push({name:\"smoother\",orderPosition:50,f:this.transformer.bind(this)})},build:function(){var self=this;var $=jQuery;if(this.element){$(function(){$(self.element).slider({min:1,max:100,slide:function(event,ui){self.setScale(ui.value)}})})}},setScale:function(scale){if(scale<1){throw\"scale out of range: \"+scale}this.aggregationScale=scale;this.graph.update()},transformer:function(data){if(this.aggregationScale==1)return data;var aggregatedData=[];data.forEach(function(seriesData){var aggregatedSeriesData=[];while(seriesData.length){var avgX=0,avgY=0;var slice=seriesData.splice(0,this.aggregationScale);slice.forEach(function(d){avgX+=d.x/slice.length;avgY+=d.y/slice.length});aggregatedSeriesData.push({x:avgX,y:avgY})}aggregatedData.push(aggregatedSeriesData)}.bind(this));return aggregatedData}});Rickshaw.namespace(\"Rickshaw.Graph.Socketio\");Rickshaw.Graph.Socketio=Rickshaw.Class.create(Rickshaw.Graph.Ajax,{request:function(){var socket=io.connect(this.dataURL);var self=this;socket.on(\"rickshaw\",function(data){self.success(data)})}});Rickshaw.namespace(\"Rickshaw.Series\");Rickshaw.Series=Rickshaw.Class.create(Array,{initialize:function(data,palette,options){options=options||{};this.palette=new Rickshaw.Color.Palette(palette);this.timeBase=typeof options.timeBase===\"undefined\"?Math.floor((new Date).getTime()/1e3):options.timeBase;var timeInterval=typeof options.timeInterval==\"undefined\"?1e3:options.timeInterval;this.setTimeInterval(timeInterval);if(data&&typeof data==\"object\"&&Array.isArray(data)){data.forEach(function(item){this.addItem(item)},this)}},addItem:function(item){if(typeof item.name===\"undefined\"){throw\"addItem() needs a name\"}item.color=item.color||this.palette.color(item.name);item.data=item.data||[];if(item.data.length===0&&this.length&&this.getIndex()>0){this[0].data.forEach(function(plot){item.data.push({x:plot.x,y:0})})}else if(item.data.length===0){item.data.push({x:this.timeBase-(this.timeInterval||0),y:0})}this.push(item);if(this.legend){this.legend.addLine(this.itemByName(item.name))}},addData:function(data,x){var index=this.getIndex();Rickshaw.keys(data).forEach(function(name){if(!this.itemByName(name)){this.addItem({name:name})}},this);this.forEach(function(item){item.data.push({x:x||(index*this.timeInterval||1)+this.timeBase,y:data[item.name]||0})},this)},getIndex:function(){return this[0]&&this[0].data&&this[0].data.length?this[0].data.length:0},itemByName:function(name){for(var i=0;i<this.length;i++){if(this[i].name==name)return this[i]}},setTimeInterval:function(iv){this.timeInterval=iv/1e3},setTimeBase:function(t){this.timeBase=t},dump:function(){var data={timeBase:this.timeBase,timeInterval:this.timeInterval,items:[]};this.forEach(function(item){var newItem={color:item.color,name:item.name,data:[]};item.data.forEach(function(plot){newItem.data.push({x:plot.x,y:plot.y})});data.items.push(newItem)});return data},load:function(data){if(data.timeInterval){this.timeInterval=data.timeInterval}if(data.timeBase){this.timeBase=data.timeBase}if(data.items){data.items.forEach(function(item){this.push(item);if(this.legend){this.legend.addLine(this.itemByName(item.name))}},this)}}});Rickshaw.Series.zeroFill=function(series){Rickshaw.Series.fill(series,0)};Rickshaw.Series.fill=function(series,fill){var x;var i=0;var data=series.map(function(s){return s.data});while(i<Math.max.apply(null,data.map(function(d){return d.length}))){x=Math.min.apply(null,data.filter(function(d){return d[i]}).map(function(d){return d[i].x}));data.forEach(function(d){if(!d[i]||d[i].x!=x){d.splice(i,0,{x:x,y:fill})}});i++}};Rickshaw.namespace(\"Rickshaw.Series.FixedDuration\");Rickshaw.Series.FixedDuration=Rickshaw.Class.create(Rickshaw.Series,{initialize:function(data,palette,options){options=options||{};if(typeof options.timeInterval===\"undefined\"){throw new Error(\"FixedDuration series requires timeInterval\")}if(typeof options.maxDataPoints===\"undefined\"){throw new Error(\"FixedDuration series requires maxDataPoints\")}this.palette=new Rickshaw.Color.Palette(palette);this.timeBase=typeof options.timeBase===\"undefined\"?Math.floor((new Date).getTime()/1e3):options.timeBase;this.setTimeInterval(options.timeInterval);if(this[0]&&this[0].data&&this[0].data.length){this.currentSize=this[0].data.length;this.currentIndex=this[0].data.length}else{this.currentSize=0;this.currentIndex=0}this.maxDataPoints=options.maxDataPoints;if(data&&typeof data==\"object\"&&Array.isArray(data)){data.forEach(function(item){this.addItem(item)},this);this.currentSize+=1;this.currentIndex+=1}this.timeBase-=(this.maxDataPoints-this.currentSize)*this.timeInterval;if(typeof this.maxDataPoints!==\"undefined\"&&this.currentSize<this.maxDataPoints){for(var i=this.maxDataPoints-this.currentSize-1;i>1;i--){this.currentSize+=1;this.currentIndex+=1;this.forEach(function(item){item.data.unshift({x:((i-1)*this.timeInterval||1)+this.timeBase,y:0,i:i})},this)}}},addData:function($super,data,x){$super(data,x);this.currentSize+=1;this.currentIndex+=1;if(this.maxDataPoints!==undefined){while(this.currentSize>this.maxDataPoints){this.dropData()}}},dropData:function(){this.forEach(function(item){item.data.splice(0,1)});this.currentSize-=1},getIndex:function(){return this.currentIndex}});return Rickshaw});\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorial",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}