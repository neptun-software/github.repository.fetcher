{
  "metadata": {
    "timestamp": 1736563091715,
    "page": 743,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "olado/doT",
      "stars": 5020,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc.yml",
          "type": "blob",
          "size": 0.5107421875,
          "content": "env:\n  node: true\nextends: 'eslint:recommended'\nglobals:\n  define: false\nparserOptions:\n  ecmaVersion: 5\nrules:\n  no-trailing-spaces: 2\n  linebreak-style: [ 2, unix ]\n  semi: [ 2, always ]\n  valid-jsdoc: [ 2, { requireReturn: false } ]\n  no-unused-vars: [ 2, { args: none } ]\n  no-console: 0\n  block-scoped-var: 2\n  dot-location: [ 2, property ]\n  dot-notation: 2\n  no-else-return: 2\n  no-eq-null: 2\n  no-fallthrough: 2\n  no-return-assign: 2\n  no-use-before-define: [ 2, nofunc ]\n  no-path-concat: 2\n  no-useless-escape: 0\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5830078125,
          "content": "# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directory\n# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git\nnode_modules\n\n# MacOS directory info files\n.DS_Store\n\npackage-lock.json\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1083984375,
          "content": "language: node_js\nnode_js:\n  - \"8\"\n  - \"10\"\n  - \"12\"\n  - \"13\"\nafter_script:\n  - coveralls < coverage/lcov.info\n"
        },
        {
          "name": "LICENSE-DOT.txt",
          "type": "blob",
          "size": 1.1484375,
          "content": "\nCopyright (c) 2011 Laura Doktorova\n\nSoftware includes portions from jQote2 Copyright (c) 2010 aefxx,\nhttp://aefxx.com/ licensed under the MIT license.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.333984375,
          "content": "# doT\n\nCreated in search of the fastest and concise JavaScript templating function with emphasis on performance under V8 and nodejs. It shows great performance for both nodejs and browsers.\n\ndoT.js is fast, small and has no dependencies.\n\n[![Build Status](https://travis-ci.org/olado/doT.svg?branch=v2)](https://travis-ci.org/olado/doT)\n[![npm version](https://img.shields.io/npm/v/dot/beta.svg)](https://www.npmjs.com/package/dot)\n[![Coverage Status](http://coveralls.io/repos/github/olado/doT/badge.svg?branch=v2)](https://coveralls.io/github/olado/doT?branch=v2)\n\n## v2 !!!\n\n[v2.0.0-beta.1](https://github.com/olado/doT/tree/v2) is released - switching recommended!\n\nSee [release notes](https://github.com/olado/doT/releases/tag/v2.0.0-beta.1).\n\nTo install:\n\n```bash\nnpm install dot@beta\n```\n\n## Note from the maintainer\n\ndoT is a really solid piece of software engineering (I didn’t create it) that is rarely updated exactly for this reason.\n\nIt took me years to grasp how it works even though it’s only 140 lines of code - it looks like magic.\n\nI used it in my other projects (e.g. [ajv](https://github.com/epoberezkin/ajv)) as the smallest, the fastest and the most functional (all three!) templating engine ever made, that is particularly useful in all code generation scenarios where manipulating AST is an overkill.\n\nIt’s a race car of templating engines - doT lacks bells and whistles that other templating engines have, but it allows to achive more than any other, if you use it right (YMMV).\n\n\n## Features\n    custom delimiters\n    runtime evaluation\n    runtime interpolation\n    compile-time evaluation\n    partials support\n    conditionals support\n    array iterators\n    encoding\n    control whitespace - strip or preserve\n    streaming friendly\n    use it as logic-less or with logic, it is up to you\n\n## Docs, live playground and samples\n\nhttp://olado.github.com/doT (todo: update docs with new features added in version 1.0.0)\n\n## New in version 1.0.0\n\n#### Added parameters support in partials\n\n```html\n{{##def.macro:param:\n\t<div>{{=param.foo}}</div>\n#}}\n\n{{#def.macro:myvariable}}\n```\n\n#### Node module now supports auto-compilation of dot templates from specified path\n\n```js\nvar dots = require(\"dot\").process({ path: \"./views\"});\n```\n\nThis will compile .def, .dot, .jst files found under the specified path.\nDetails\n   * It ignores sub-directories.\n   * Template files can have multiple extensions at the same time.\n   * Files with .def extension can be included in other files via {{#def.name}}\n   * Files with .dot extension are compiled into functions with the same name and\n   can be accessed as renderer.filename\n   * Files with .jst extension are compiled into .js files. Produced .js file can be\n   loaded as a commonJS, AMD module, or just installed into a global variable (default is set to window.render)\n   * All inline defines defined in the .jst file are\n   compiled into separate functions and are available via _render.filename.definename\n \n   Basic usage:\n ```js\n        var dots = require(\"dot\").process({path: \"./views\"});\n        dots.mytemplate({foo:\"hello world\"});\n ```\nThe above snippet will:\n* Compile all templates in views folder (.dot, .def, .jst)\n* Place .js files compiled from .jst templates into the same folder\n   These files can be used with require, i.e. require(\"./views/mytemplate\")\n* Return an object with functions compiled from .dot templates as its properties\n* Render mytemplate template\n \n#### CLI tool to compile dot templates into js files\n\n\t./bin/dot-packer -s examples/views -d out/views\n\n## Example for express\n\tMany people are using doT with express. I added an example of the best way of doing it examples/express:\n\n[doT with express](examples/express)\n\n## Notes\n    doU.js is here only so that legacy external tests do not break. Use doT.js.\n    doT.js with doT.templateSettings.append=false provides the same performance as doU.js.\n\n## Security considerations\n\ndoT allows arbitrary JavaScript code in templates, making it one of the most flexible and powerful templating engines. It means that doT security model assumes that you only use trusted templates and you don't use any  user input as any part of the template, as otherwise it can lead to code injection.\n\nIt is strongly recommended to compile all templates to JS code as early as possible. Possible options:\n\n- using doT as dev-dependency only and compiling templates to JS files, for example, as described above or using a custom script, during the build. This is the most performant and secure approach and it is strongly recommended.\n- if the above approach is not possible for some reason (e.g. templates are dynamically generated using some run-time data), it is recommended to compile templates to in-memory functions during application start phase, before any external input is processed.\n- compiling templates lazily, on demand, is less safe. Even though the possibility of the code injection via prototype pollution was patched (#291), there may be some other unknown vulnerabilities that could lead to code injection.\n\nPlease report any found vulnerabilities to npm, not via issue tracker.\n\n## Author\nLaura Doktorova [@olado](http://twitter.com/olado)\n\n## License\ndoT is licensed under the MIT License. (See LICENSE-DOT)\n\n<p align=\"center\">\n  <img src=\"http://olado.github.io/doT/doT-js-100@2x.png\" alt=\"logo by Kevin Kirchner\"/>\n</p>\n\nThank you [@KevinKirchner](https://twitter.com/kevinkirchner) for the logo.\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.4306640625,
          "content": "{\n  \"name\": \"dot\",\n  \"description\": \"Concise and fast javascript templating compatible with nodejs and other javascript environments\",\n  \"main\": \"doT.js\",\n  \"authors\": [\n    \"Laura Doktorova <ldoktorova@gmail.com>\"\n  ],\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"template\",\n    \"fast\",\n    \"simple\",\n    \"templating\"\n  ],\n  \"homepage\": \"https://github.com/olado/doT\",\n  \"ignore\": [\n    \"node_modules\",\n    \"bower_components\",\n    \"test\"\n  ]\n}\n"
        },
        {
          "name": "doT.js",
          "type": "blob",
          "size": 5.1259765625,
          "content": "// doT.js\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function () {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tname: \"doT\",\n\t\tversion: \"1.1.1\",\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t\"it\",\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false,\n\t\t\tdoNotSkipEncoded: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined, //fn, for express\n\t\tlog: true\n\t}, _globals;\n\n\tdoT.encodeHTMLSource = function(doNotSkipEncoded) {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\n\t\t\tmatchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function(code) {\n\t\t\treturn code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : \"\";\n\t\t};\n\t};\n\n\t_globals = (function(){ return this || (0,eval)(\"this\"); }());\n\n\t/* istanbul ignore else */\n\tif (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t_globals.doT = doT;\n\t}\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      startencode: \"'+encodeHTML(\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === \"string\") ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf(\"def.\") === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === \":\") {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, \"_\");\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \")\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"): str)\n\t\t\t.replace(/'|\\\\/g, \"\\\\$&\")\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.startencode + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\n\t\t\t//.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode) {\n\t\t\tif (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n\t\t\tstr = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\n\t\t\t\t+ doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\n\t\t\t\t+ str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n"
        },
        {
          "name": "doT.min.js",
          "type": "blob",
          "size": 3.283203125,
          "content": "!function(){\"use strict\";var u,d={name:\"doT\",version:\"1.1.1\",templateSettings:{evaluate:/\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,interpolate:/\\{\\{=([\\s\\S]+?)\\}\\}/g,encode:/\\{\\{!([\\s\\S]+?)\\}\\}/g,use:/\\{\\{#([\\s\\S]+?)\\}\\}/g,useParams:/(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,define:/\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,defineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,conditional:/\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,iterate:/\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,varname:\"it\",strip:!0,append:!0,selfcontained:!1,doNotSkipEncoded:!1},template:void 0,compile:void 0,log:!0};d.encodeHTMLSource=function(e){var n={\"&\":\"&#38;\",\"<\":\"&#60;\",\">\":\"&#62;\",'\"':\"&#34;\",\"'\":\"&#39;\",\"/\":\"&#47;\"},t=e?/[&<>\"'\\/]/g:/&(?!#?\\w+;)|<|>|\"|'|\\//g;return function(e){return e?e.toString().replace(t,function(e){return n[e]||e}):\"\"}},u=function(){return this||(0,eval)(\"this\")}(),\"undefined\"!=typeof module&&module.exports?module.exports=d:\"function\"==typeof define&&define.amd?define(function(){return d}):u.doT=d;var s={append:{start:\"'+(\",end:\")+'\",startencode:\"'+encodeHTML(\"},split:{start:\"';out+=(\",end:\");out+='\",startencode:\"';out+=encodeHTML(\"}},p=/$^/;function l(e){return e.replace(/\\\\('|\\\\)/g,\"$1\").replace(/[\\r\\t\\n]/g,\" \")}d.template=function(e,n,t){var r,o,a=(n=n||d.templateSettings).append?s.append:s.split,c=0,i=n.use||n.define?function r(o,e,a){return(\"string\"==typeof e?e:e.toString()).replace(o.define||p,function(e,r,n,t){return 0===r.indexOf(\"def.\")&&(r=r.substring(4)),r in a||(\":\"===n?(o.defineParams&&t.replace(o.defineParams,function(e,n,t){a[r]={arg:n,text:t}}),r in a||(a[r]=t)):new Function(\"def\",\"def['\"+r+\"']=\"+t)(a)),\"\"}).replace(o.use||p,function(e,n){o.useParams&&(n=n.replace(o.useParams,function(e,n,t,r){if(a[t]&&a[t].arg&&r){var o=(t+\":\"+r).replace(/'|\\\\/g,\"_\");return a.__exp=a.__exp||{},a.__exp[o]=a[t].text.replace(new RegExp(\"(^|[^\\\\w$])\"+a[t].arg+\"([^\\\\w$])\",\"g\"),\"$1\"+r+\"$2\"),n+\"def.__exp['\"+o+\"']\"}}));var t=new Function(\"def\",\"return \"+n)(a);return t?r(o,t,a):t})}(n,e,t||{}):e;i=(\"var out='\"+(n.strip?i.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,\" \").replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,\"\"):i).replace(/'|\\\\/g,\"\\\\$&\").replace(n.interpolate||p,function(e,n){return a.start+l(n)+a.end}).replace(n.encode||p,function(e,n){return r=!0,a.startencode+l(n)+a.end}).replace(n.conditional||p,function(e,n,t){return n?t?\"';}else if(\"+l(t)+\"){out+='\":\"';}else{out+='\":t?\"';if(\"+l(t)+\"){out+='\":\"';}out+='\"}).replace(n.iterate||p,function(e,n,t,r){return n?(c+=1,o=r||\"i\"+c,n=l(n),\"';var arr\"+c+\"=\"+n+\";if(arr\"+c+\"){var \"+t+\",\"+o+\"=-1,l\"+c+\"=arr\"+c+\".length-1;while(\"+o+\"<l\"+c+\"){\"+t+\"=arr\"+c+\"[\"+o+\"+=1];out+='\"):\"';} } out+='\"}).replace(n.evaluate||p,function(e,n){return\"';\"+l(n)+\"out+='\"})+\"';return out;\").replace(/\\n/g,\"\\\\n\").replace(/\\t/g,\"\\\\t\").replace(/\\r/g,\"\\\\r\").replace(/(\\s|;|\\}|^|\\{)out\\+='';/g,\"$1\").replace(/\\+''/g,\"\"),r&&(n.selfcontained||!u||u._encodeHTML||(u._encodeHTML=d.encodeHTMLSource(n.doNotSkipEncoded)),i=\"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"+d.encodeHTMLSource.toString()+\"(\"+(n.doNotSkipEncoded||\"\")+\"));\"+i);try{return new Function(n.varname,i)}catch(e){throw\"undefined\"!=typeof console&&console.log(\"Could not create a template function: \"+i),e}},d.compile=function(e,n){return d.template(e,null,n)}}();"
        },
        {
          "name": "doU.js",
          "type": "blob",
          "size": 1.716796875,
          "content": "// doU.js\n// (c) 2011, Laura Doktorova\n// https://github.com/olado/doT\n//\n// doU is an extraction and slight modification of an excellent\n// templating function from jQote2.js (jQuery plugin) by aefxx\n// (http://aefxx.com/jquery-plugins/jqote2/).\n//\n// Modifications:\n// 1. nodejs support\n// 2. allow for custom template markers\n// 3. only allow direct invocation of the compiled function\n//\n// Licensed under the MIT license.\n\n(function() {\n\tvar doU = { version : '0.1.2' };\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = doU;\n\t} else {\n\t\tthis.doU = doU;\n\t}\n\n\tdoU.templateSettings = {\n\t\tbegin : '{{',\n\t\tend : '}}',\n\t\tvarname : 'it'\n\t};\n\n\tdoU.template = function(tmpl, conf) {\n\t\tconf = conf || doU.templateSettings;\n\t\tvar str = '', tb = conf.begin, te = conf.end, m, l,\n\t\t\tarr = tmpl.replace(/\\s*<!\\[CDATA\\[\\s*|\\s*\\]\\]>\\s*|[\\r\\n\\t]|(\\/\\*[\\s\\S]*?\\*\\/)/g, '')\n\t\t\t\t.split(tb).join(te +'\\x1b')\n\t\t\t\t.split(te);\n\n\t\tfor (m=0,l=arr.length; m < l; m++) {\n\t\t\tstr += arr[m].charAt(0) !== '\\x1b' ?\n\t\t\t\"out+='\" + arr[m].replace(/(\\\\|[\"'])/g, '\\\\$1') + \"'\" : (arr[m].charAt(1) === '=' ?\n\t\t\t';out+=(' + arr[m].substr(2) + ');' : (arr[m].charAt(1) === '!' ?\n\t\t\t';out+=(' + arr[m].substr(2) + \").toString().replace(/&(?!\\\\w+;)/g, '&#38;').split('<').join('&#60;').split('>').join('&#62;').split('\" + '\"' + \"').join('&#34;').split(\" + '\"' + \"'\" + '\"' + \").join('&#39;').split('/').join('&#x2F;');\" : ';' + arr[m].substr(1)));\n\t\t}\n\n\t\tstr = ('var out=\"\";'+str+';return out;')\n\t\t\t.split(\"out+='';\").join('')\n\t\t\t.split('var out=\"\";out+=').join('var out=');\n\n\t\ttry {\n\t\t\treturn new Function(conf.varname, str);\n\t\t} catch (e) {\n\t\t\tif (typeof console !== 'undefined') console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n}());\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 5.5078125,
          "content": "/* doT + auto-compilation of doT templates\n *\n * 2012, Laura Doktorova, https://github.com/olado/doT\n * Licensed under the MIT license\n *\n * Compiles .def, .dot, .jst files found under the specified path.\n * It ignores sub-directories.\n * Template files can have multiple extensions at the same time.\n * Files with .def extension can be included in other files via {{#def.name}}\n * Files with .dot extension are compiled into functions with the same name and\n * can be accessed as renderer.filename\n * Files with .jst extension are compiled into .js files. Produced .js file can be\n * loaded as a commonJS, AMD module, or just installed into a global variable\n * (default is set to window.render).\n * All inline defines defined in the .jst file are\n * compiled into separate functions and are available via _render.filename.definename\n *\n * Basic usage:\n * var dots = require(\"dot\").process({path: \"./views\"});\n * dots.mytemplate({foo:\"hello world\"});\n *\n * The above snippet will:\n * 1. Compile all templates in views folder (.dot, .def, .jst)\n * 2. Place .js files compiled from .jst templates into the same folder.\n *    These files can be used with require, i.e. require(\"./views/mytemplate\").\n * 3. Return an object with functions compiled from .dot templates as its properties.\n * 4. Render mytemplate template.\n */\n\nvar fs = require(\"fs\"),\n\tdoT = module.exports = require(\"./doT\");\n\ndoT.process = function(options) {\n\t//path, destination, global, rendermodule, templateSettings\n\treturn new InstallDots(options).compileAll();\n};\n\nfunction InstallDots(o) {\n\tthis.__path \t\t= o.path || \"./\";\n\tif (this.__path[this.__path.length-1] !== '/') this.__path += '/';\n\tthis.__destination\t= o.destination || this.__path;\n\tif (this.__destination[this.__destination.length-1] !== '/') this.__destination += '/';\n\tthis.__global\t\t= o.global || \"window.render\";\n\tthis.__rendermodule\t= o.rendermodule || {};\n\tthis.__settings \t= Object.prototype.hasOwnProperty.call(o,\"templateSettings\") ? copy(o.templateSettings, copy(doT.templateSettings)) : undefined;\n\tthis.__includes\t\t= {};\n}\n\nInstallDots.prototype.compileToFile = function(path, template, def) {\n\tdef = def || {};\n\tvar modulename = path.substring(path.lastIndexOf(\"/\")+1, path.lastIndexOf(\".\"))\n\t\t, defs = copy(this.__includes, copy(def))\n\t\t, settings = this.__settings || doT.templateSettings\n\t\t, compileoptions = copy(settings)\n\t\t, defaultcompiled = doT.template(template, settings, defs)\n\t\t, exports = []\n\t\t, compiled = \"\"\n\t\t, fn;\n\n\tfor (var property in defs) {\n\t\t// It looks like the code block inside \"if\" below can never be executed,\n\t\t// because InstallDots constructor is private, compileToFile is only called from compileAll method\n\t\t// and def parameter is never passed to it, so the condition in if will always fail.\n\t\t// This code will be removed from the next major version.\n\t\t// For now it is only excluded from coverage report\n\t\t/* istanbul ignore if */\n\t\tif (defs[property] !== def[property] && defs[property] !== this.__includes[property]) {\n\t\t\tfn = undefined;\n\t\t\tif (typeof defs[property] === 'string') {\n\t\t\t\tfn = doT.template(defs[property], settings, defs);\n\t\t\t} else if (typeof defs[property] === 'function') {\n\t\t\t\tfn = defs[property];\n\t\t\t} else if (defs[property].arg) {\n\t\t\t\tcompileoptions.varname = defs[property].arg;\n\t\t\t\tfn = doT.template(defs[property].text, compileoptions, defs);\n\t\t\t}\n\t\t\tif (fn) {\n\t\t\t\tcompiled += fn.toString().replace('anonymous', property);\n\t\t\t\texports.push(property);\n\t\t\t}\n\t\t}\n\t}\n\tcompiled += defaultcompiled.toString().replace('anonymous', modulename);\n\tfs.writeFileSync(path, \"(function(){\" + compiled\n\t\t+ \"var itself=\" + modulename + \", _encodeHTML=(\" + doT.encodeHTMLSource.toString() + \"(\" + (settings.doNotSkipEncoded || '') + \"));\"\n\t\t+ addexports(exports)\n\t\t+ \"if(typeof module!=='undefined' && module.exports) module.exports=itself;else if(typeof define==='function')define(function(){return itself;});else {\"\n\t\t+ this.__global + \"=\" + this.__global + \"||{};\" + this.__global + \"['\" + modulename + \"']=itself;}}());\");\n};\n\nfunction addexports(exports) {\n\tvar ret = '';\n\tfor (var i=0; i< exports.length; i++) {\n\t\tret += \"itself.\" + exports[i]+ \"=\" + exports[i]+\";\";\n\t}\n\treturn ret;\n}\n\nfunction copy(o, to) {\n\tto = to || {};\n\tfor (var property in o) {\n\t\tto[property] = o[property];\n\t}\n\treturn to;\n}\n\nfunction readdata(path) {\n\tvar data = fs.readFileSync(path);\n\tif (data) return data.toString();\n\tconsole.log(\"problems with \" + path);\n}\n\nInstallDots.prototype.compilePath = function(path) {\n\tvar data = readdata(path);\n\tif (data) {\n\t\treturn doT.template(data,\n\t\t\t\t\tthis.__settings || doT.templateSettings,\n\t\t\t\t\tcopy(this.__includes));\n\t}\n};\n\nInstallDots.prototype.compileAll = function() {\n\tif (doT.log) console.log(\"Compiling all doT templates...\");\n\n\tvar defFolder = this.__path,\n\t\tsources = fs.readdirSync(defFolder),\n\t\tk, l, name;\n\n\tfor( k = 0, l = sources.length; k < l; k++) {\n\t\tname = sources[k];\n\t\tif (/\\.def(\\.dot|\\.jst)?$/.test(name)) {\n\t\t\tif (doT.log) console.log(\"Loaded def \" + name);\n\t\t\tthis.__includes[name.substring(0, name.indexOf('.'))] = readdata(defFolder + name);\n\t\t}\n\t}\n\n\tfor( k = 0, l = sources.length; k < l; k++) {\n\t\tname = sources[k];\n\t\tif (/\\.dot(\\.def|\\.jst)?$/.test(name)) {\n\t\t\tif (doT.log) console.log(\"Compiling \" + name + \" to function\");\n\t\t\tthis.__rendermodule[name.substring(0, name.indexOf('.'))] = this.compilePath(defFolder + name);\n\t\t}\n\t\tif (/\\.jst(\\.dot|\\.def)?$/.test(name)) {\n\t\t\tif (doT.log) console.log(\"Compiling \" + name + \" to file\");\n\t\t\tthis.compileToFile(this.__destination + name.substring(0, name.indexOf('.')) + '.js',\n\t\t\t\t\treaddata(defFolder + name));\n\t\t}\n\t}\n\treturn this.__rendermodule;\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.3076171875,
          "content": "{\n  \"name\": \"dot\",\n  \"description\": \"Concise and fast javascript templating compatible with nodejs and other javascript environments\",\n  \"keywords\": [\n    \"template\",\n    \"fast\",\n    \"simple\",\n    \"templating\"\n  ],\n  \"version\": \"1.1.3\",\n  \"main\": \"index.js\",\n  \"browser\": \"doT.js\",\n  \"bin\": {\n    \"dottojs\": \"./bin/dot-packer\"\n  },\n  \"homepage\": \"http://github.com/olado/doT\",\n  \"repository\": \"git://github.com/olado/doT.git\",\n  \"author\": \"Laura Doktorova <ldoktorova@gmail.com>\",\n  \"engines\": [\n    \"node >=0.2.6\"\n  ],\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"eslint\": \"if-node-version '>=4' eslint *.js --ignore-pattern *.min.js\",\n    \"test-spec\": \"mocha test/*.test.js\",\n    \"test-cov\": \"nyc npm run test-spec\",\n    \"test\": \"npm run eslint && npm run test-cov\",\n    \"bundle\": \"uglifyjs doT.js -o doT.min.js -c -m --preamble '/* Laura Doktorova https://github.com/olado/doT */'\",\n    \"prepublish\": \"npm run bundle\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"commander\": \"*\",\n    \"coveralls\": \"^3.0.9\",\n    \"eslint\": \"^6.7.2\",\n    \"if-node-version\": \"^1.1.1\",\n    \"jshint\": \"*\",\n    \"mkdirp\": \"*\",\n    \"mocha\": \"*\",\n    \"nyc\": \"^14.1.1\",\n    \"pre-commit\": \"^1.1.3\",\n    \"uglify-js\": \"*\"\n  },\n  \"nyc\": {\n    \"exclude\": [\n      \"test\",\n      \"node_modules\"\n    ],\n    \"reporter\": [\n      \"lcov\",\n      \"text-summary\"\n    ]\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}