{
  "metadata": {
    "timestamp": 1736563016084,
    "page": 643,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "agentejo/cockpit",
      "stars": 5401,
      "defaultBranch": "next",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4404296875,
          "content": "*~\n*.diff\n*.patch\n.DS_Store\n.project\n.settings\n.idea\n.vscode\n.env\ncomposer.lock\npackage-lock.json\n/lib/**/doc/*\n/lib/**/docs/*\n/lib/**/example/*\n/lib/**/phpunit*\n/lib/**/tests/*\n/lib/**/test/*\n/lib/**/\\.github/*\n/lib/**/\\.travis/*\n/lib/**/\\.travis.yml\n/storage/*.*\n/storage/*/*\n/config/*\n/tests/*\n/node_modules\naddons/\n!.gitignore\n!.gitkeep\n!/storage/*/index.html\n!/storage/*/.htaccess\ndefines.php\n# Sublime Text\n*.sublime-workspace\n*.sublime-project\n"
        },
        {
          "name": ".htaccess",
          "type": "blob",
          "size": 5.9443359375,
          "content": "# Deny access to database + config files\n<Files ~ \"\\.(sqlite|sdb|s3db|db|yaml|yml)$\">\n    <IfVersion >= 2.4>\n       Require all denied\n    </IfVersion>\n    <IfVersion < 2.4>\n       Deny from all\n    </IfVersion>\n</Files>\n\n<Files \".*\">\n    <IfVersion >= 2.4>\n       Require all denied\n    </IfVersion>\n    <IfVersion < 2.4>\n       Deny from all\n    </IfVersion>\n</Files>\n\n<Files \"cp\">\n    <IfVersion >= 2.4>\n       Require all denied\n    </IfVersion>\n    <IfVersion < 2.4>\n       Deny from all\n    </IfVersion>\n</Files>\n\n# Don't show directory listings\nOptions -Indexes\n\n# URL rewrites\n<IfModule mod_rewrite.c>\n\n    Options -MultiViews\n\n    RewriteEngine On\n    # RewriteBase /\n\n    # Protect some contents\n    RewriteRule ^.*/?\\.git+ - [F,L]\n\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteRule .* index.php [L]\n\n</IfModule>\n\nAddDefaultCharset utf-8\n\nAddType application/javascript          js jsonp tag\nAddType application/json                json\n\n# Audio\nAddType audio/ogg                       oga ogg\nAddType audio/mp4                       m4a f4a f4b\n\n# Video\nAddType video/ogg                       ogv\nAddType video/mp4                       mp4 m4v f4v f4p\nAddType video/webm                      webm\nAddType video/x-flv                     flv\n\n# SVG\n#   Required for svg webfonts on iPad\n#   twitter.com/FontSquirrel/status/14855840545\nAddType     image/svg+xml               svg svgz\nAddEncoding gzip                        svgz\n\n# Webfonts\nAddType application/vnd.ms-fontobject   eot\nAddType application/x-font-ttf          ttf ttc\nAddType font/opentype                   otf\nAddType application/x-font-woff         woff\n\n# Assorted types\nAddType image/x-icon                    ico\nAddType image/webp                      webp\nAddType text/cache-manifest             appcache manifest\nAddType text/x-component                htc\nAddType application/xml                 rss atom xml rdf\nAddType text/x-vcard                    vcf\nAddType application/x-shockwave-flash   swf\n\n<IfModule mod_expires.c>\n    ExpiresActive On\n\n    ExpiresByType application/pdf               \"access plus 1 year\"\n    ExpiresByType application/x-shockwave-flash \"access plus 1 year\"\n    ExpiresByType image/bmp                     \"access plus 1 year\"\n    ExpiresByType image/gif                     \"access plus 1 year\"\n    ExpiresByType image/jpeg                    \"access plus 1 year\"\n    ExpiresByType image/png                     \"access plus 1 year\"\n    ExpiresByType image/svg+xml                 \"access plus 1 year\"\n    ExpiresByType image/tiff                    \"access plus 1 year\"\n    ExpiresByType image/vnd.microsoft.icon      \"access plus 1 year\"\n    ExpiresByType image/x-icon                  \"access plus 1 year\"\n    ExpiresByType text/css                      \"access plus 1 year\"\n    ExpiresByType video/x-flv                   \"access plus 1 year\"\n    ExpiresByType application/vnd.bw-fontobject \"access plus 1 year\"\n    ExpiresByType application/x-font-ttf        \"access plus 1 year\"\n    ExpiresByType application/x-font-woff       \"access plus 1 year\"\n    ExpiresByType application/font-woff         \"access plus 1 year\"\n    ExpiresByType font/opentype                 \"access plus 1 year\"\n    ExpiresByType image/webp                    \"access plus 1 year\"\n\n    # The following MIME types are in the process of registration\n    ExpiresByType application/xslt+xml          \"access plus 1 year\"\n    ExpiresByType image/svg+xml                 \"access plus 1 year\"\n\n    # The following MIME types are NOT registered\n    ExpiresByType application/mathml+xml        \"access plus 1 year\"\n    ExpiresByType application/rss+xml           \"access plus 1 year\"\n\n    # JavaScript has various MIME types\n    ExpiresByType application/x-javascript      \"access plus 1 year\"\n    ExpiresByType application/javascript        \"access plus 1 year\"\n    ExpiresByType text/ecmascript               \"access plus 1 year\"\n    ExpiresByType text/javascript               \"access plus 1 year\"\n</IfModule>\n\n# -------------------------------------------------------------------------\n# Disabling ETags as they are most likely misconfigured and\n# do not add functionalit beyond Last-Modified\n# -------------------------------------------------------------------------\n<IfModule mod_headers.c>\n    # Try removing etag headers (if it's coming from proxy for example)\n    Header unset ETag\n</IfModule>\n\n<IfModule mod_deflate.c>\n\n  # Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/\n  <IfModule mod_setenvif.c>\n    <IfModule mod_headers.c>\n      SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\\s*,?\\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding\n      RequestHeader append Accept-Encoding \"gzip,deflate\" env=HAVE_Accept-Encoding\n    </IfModule>\n  </IfModule>\n\n  # Compress all output labeled with one of the following MIME-types\n  # (for Apache versions below 2.3.7, you don't need to enable `mod_filter`\n  # and can remove the `<IfModule mod_filter.c>` and `</IfModule>` lines as\n  # `AddOutputFilterByType` is still in the core directives)\n  <IfModule mod_filter.c>\n    AddOutputFilterByType DEFLATE application/atom+xml \\\n                                  application/javascript \\\n                                  application/json \\\n                                  application/rss+xml \\\n                                  application/vnd.ms-fontobject \\\n                                  application/x-font-ttf \\\n                                  application/xhtml+xml \\\n                                  application/xml \\\n                                  font/opentype \\\n                                  image/svg+xml \\\n                                  image/x-icon \\\n                                  text/css \\\n                                  text/html \\\n                                  text/plain \\\n                                  text/x-component \\\n                                  text/xml\n  </IfModule>\n\n</IfModule>\n\n# Remove ETags\nFileETag None\n"
        },
        {
          "name": ".php_cs.dist",
          "type": "blob",
          "size": 0.6650390625,
          "content": "<?php\n\n$finder = PhpCsFixer\\Finder::create()\n    ->in(__DIR__)\n    ->notPath('lib/Spyc.php')\n    ->notPath('lib/Parsedown.php')\n    ->notPath('lib/ParsedownExtra.php')\n    ->notPath('lib/Lime/App.php')\n;\n\n$header = <<<EOF\nThis file is part of the Cockpit project.\n\n(c) Artur Heinze - 🅰🅶🅴🅽🆃🅴🅹🅾, http://agentejo.com\n\nFor the full copyright and license information, please view the LICENSE\nfile that was distributed with this source code.\nEOF;\n\nreturn PhpCsFixer\\Config::create()\n    ->setUsingCache(false)\n    ->setRules([\n        'header_comment' => ['header' => $header, 'separate' => 'bottom', 'commentType' => 'PHPDoc'],\n    ])\n    ->setFinder($finder)\n;\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.408203125,
          "content": "# Contribute\n\n## Introduction\n\nFirst, thank you for considering contributing to cockpit! It's people like you that make the open source community such a great community! 😊\n\nWe welcome any type of contribution, not only code. You can help with \n- **QA**: file bug reports, the more details you can give the better (e.g. screenshots with the console open)\n- **Marketing**: writing blog posts, howto's, printing stickers, ...\n- **Community**: presenting the project at meetups, organizing a dedicated meetup for the local community, ...\n- **Code**: take a look at the [open issues](https://github.com/agentejo/cockpit/issues). Even if you can't write code, commenting on them, showing that you care about a given issue matters. It helps us triage them.\n- **Money**: we welcome financial contributions in full transparency on our [open collective](https://opencollective.com/cockpit).\n\n## Your First Contribution\n\nWorking on your first Pull Request? You can learn how from this *free* series, [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github).\n\n## Submitting code\n\nAny code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.\n\n## Code review process\n\nThe bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge.\nIt is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?\n\n## Financial contributions\n\nWe also welcome financial contributions in full transparency on our [open collective](https://opencollective.com/cockpit).\nAnyone can file an expense. If the expense makes sense for the development of the community, it will be \"merged\" in the ledger of our open collective by the core contributors and the person who filed the expense will be reimbursed.\n\n## Questions\n\nIf you have any questions, create an [issue](issue) (protip: do a quick search first to see if someone else didn't ask the same question before!).\nYou can also reach us at hello@cockpit.opencollective.com.\n\n## Credits\n\n### Contributors\n\nThank you to all the people who have already contributed to cockpit!\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/cockpit/contributors.svg?width=890\" /></a>\n\n\n### Backers\n\nThank you to all our backers! [[Become a backer](https://opencollective.com/cockpit#backer)]\n\n<a href=\"https://opencollective.com/cockpit#backers\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/backers.svg?width=890\"></a>\n\n\n### Sponsors\n\nThank you to all our sponsors! (please ask your company to also support this open source project by [becoming a sponsor](https://opencollective.com/cockpit#sponsor))\n\n<a href=\"https://opencollective.com/cockpit/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/cockpit/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/cockpit/sponsor/9/avatar.svg\"></a>\n\n<!-- This `CONTRIBUTING.md` is based on @nayafia's template https://github.com/nayafia/contributing-template -->\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.73046875,
          "content": "FROM php:7.3-apache\n\nRUN apt-get update \\\n    && apt-get install -y \\\n\t\twget zip unzip \\\n        libzip-dev \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libpng-dev \\\n        sqlite3 libsqlite3-dev \\\n        libssl-dev \\\n    && pecl install mongodb \\\n    && pecl install redis \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) iconv gd pdo zip opcache pdo_sqlite \\\n    && a2enmod rewrite expires\n\nRUN echo \"extension=mongodb.so\" > /usr/local/etc/php/conf.d/mongodb.ini\nRUN echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n\nRUN chown -R www-data:www-data /var/www/html\n\nVOLUME /var/www/html\n\nCMD [\"apache2-foreground\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1064453125,
          "content": "MIT License\n\nCopyright (c) 2015 🅰🅶🅴🅽🆃🅴🅹🅾, [http://agentejo.com](http://agentejo.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.47265625,
          "content": "# 🚨 Cockpits next iteration development moved 🚨\n\nCockpit's next iteration moved to a dedicated Cockpit organization on Github.\nPlease visit [https://github.com/Cockpit-HQ/Cockpit](https://github.com/Cockpit-HQ/Cockpit) to follow the latest development.\n\n☝️☝️☝️\n---\n\n# Cockpit Next\n\n* Homepage: [http://getcockpit.com](https://getcockpit.com)\n* Twitter: [@getcockpit](http://twitter.com/getcockpit)\n* Support Forum: [https://discourse.getcockpit.com](https://discourse.getcockpit.com)\n\n\n### Requirements\n\n* PHP >= 7.3\n* PDO + SQLite (or MongoDB)\n* GD extension\n* mod_rewrite, mod_versions enabled (on apache)\n\nmake also sure that <code>$_SERVER['DOCUMENT_ROOT']</code> exists and is set correctly.\n\n\n### Installation\n\n1. Download Cockpit and put the cockpit folder in the root of your web project\n2. Make sure that the __/cockpit/storage__ folder and all its subfolders are writable\n3. Go to __/cockpit/install__ via Browser\n4. You're ready to use Cockpit :-)\n\n\n### Build (Only if you modify JS components)\n\nYou need [nodejs](https://nodejs.org/) installed on your system.\n\nFirst run `npm install` to install development dependencies\n\n1. Run `npm run build` - For one-time build of styles and components\n2. Run `npm run watch` - For continuous build every time styles or components change\n\n\n### Dockerized Development\n\nYou need docker installed on your system: https://www.docker.com.\n\n1. Run `npm run docker-init` to build the initial image.\n2. Run `npm run docker` to start an Apache environment suited for Cockpit on port 8080 (this folder mapped to /var/www/html).\n\n\n## 💐 Partners\n\n[![ginetta](https://user-images.githubusercontent.com/321047/62825759-0fc9ce00-bbb1-11e9-866a-3148260e1548.png)](https://www.ginetta.net)<br>\nWe create websites and apps that click with users.\n\n\n[![BrowserStack](https://user-images.githubusercontent.com/355427/27389060-9f716c82-569d-11e7-923c-bd5fe7f1c55a.png)](https://www.browserstack.com)<br>\nLive, Web-Based Browser Testing\n\n\n## 💐 Sponsors\n\n[![Backers on Open Collective](https://opencollective.com/cockpit/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/cockpit/sponsors/badge.svg)](#sponsors)\n\nBecome a backer or sponsor through:\n\n- [Patreon](https://www.patreon.com/aheinze)\n- [OpenCollective](https://opencollective.com/cockpit#backer)\n\nThank you to all our backers! 🙏\n\n\n## Copyright and license\n\nCopyright since 2015 [Agentejo](https://agentejo.com) under the MIT license.\n\nSee [LICENSE](LICENSE) for more information.\n"
        },
        {
          "name": "addons",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap.php",
          "type": "blob",
          "size": 11.1259765625,
          "content": "<?php\n/**\n * This file is part of the Cockpit project.\n *\n * (c) Artur Heinze - 🅰🅶🅴🅽🆃🅴🅹🅾, http://agentejo.com\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Cockpit start time\n */\ndefine('COCKPIT_START_TIME', microtime(true));\n\nif (!defined('COCKPIT_CLI')) {\n    define('COCKPIT_CLI', PHP_SAPI == 'cli');\n}\n\n// Autoload vendor libs\ninclude(__DIR__.'/lib/vendor/autoload.php');\n\n// include core classes for better performance\nif (!class_exists('Lime\\\\App')) {\n    include(__DIR__.'/lib/Lime/App.php');\n    include(__DIR__.'/lib/LimeExtra/App.php');\n    include(__DIR__.'/lib/LimeExtra/Controller.php');\n}\n\n/*\n * Autoload from lib folder (PSR-0)\n */\n\nspl_autoload_register(function($class){\n    $class_path = __DIR__.'/lib/'.str_replace('\\\\', '/', $class).'.php';\n    if(file_exists($class_path)) include_once($class_path);\n});\n\n// load .env file if exists\nDotEnv::load(__DIR__);\n\n// check for custom defines\nif (file_exists(__DIR__.'/defines.php')) {\n    include(__DIR__.'/defines.php');\n}\n\n/*\n * Collect needed paths\n */\n\n$COCKPIT_DIR         = str_replace(DIRECTORY_SEPARATOR, '/', __DIR__);\n$COCKPIT_DOCS_ROOT   = str_replace(DIRECTORY_SEPARATOR, '/', isset($_SERVER['DOCUMENT_ROOT']) ? realpath($_SERVER['DOCUMENT_ROOT']) : dirname(__DIR__));\n\n# make sure that $_SERVER['DOCUMENT_ROOT'] is set correctly\nif (strpos($COCKPIT_DIR, $COCKPIT_DOCS_ROOT)!==0 && isset($_SERVER['SCRIPT_NAME'])) {\n    $COCKPIT_DOCS_ROOT = str_replace(dirname(str_replace(DIRECTORY_SEPARATOR, '/', $_SERVER['SCRIPT_NAME'])), '', $COCKPIT_DIR);\n}\n\n$COCKPIT_BASE        = trim(str_replace($COCKPIT_DOCS_ROOT, '', $COCKPIT_DIR), \"/\");\n$COCKPIT_BASE_URL    = strlen($COCKPIT_BASE) ? \"/{$COCKPIT_BASE}\": $COCKPIT_BASE;\n$COCKPIT_BASE_ROUTE  = $COCKPIT_BASE_URL;\n\n/*\n * SYSTEM DEFINES\n */\nif (!defined('COCKPIT_DIR'))                    define('COCKPIT_DIR'            , $COCKPIT_DIR);\nif (!defined('COCKPIT_ADMIN'))                  define('COCKPIT_ADMIN'          , 0);\nif (!defined('COCKPIT_DOCS_ROOT'))              define('COCKPIT_DOCS_ROOT'      , $COCKPIT_DOCS_ROOT);\nif (!defined('COCKPIT_ENV_ROOT'))               define('COCKPIT_ENV_ROOT'       , COCKPIT_DIR);\nif (!defined('COCKPIT_BASE_URL'))               define('COCKPIT_BASE_URL'       , $COCKPIT_BASE_URL);\nif (!defined('COCKPIT_API_REQUEST'))            define('COCKPIT_API_REQUEST'    , COCKPIT_ADMIN && strpos($_SERVER['REQUEST_URI'], COCKPIT_BASE_URL.'/api/')!==false ? 1:0);\nif (!defined('COCKPIT_SITE_DIR'))               define('COCKPIT_SITE_DIR'       , COCKPIT_ENV_ROOT == COCKPIT_DIR ?  ($COCKPIT_DIR == COCKPIT_DOCS_ROOT ? COCKPIT_DIR : dirname(COCKPIT_DIR)) :  COCKPIT_ENV_ROOT);\nif (!defined('COCKPIT_CONFIG_DIR'))             define('COCKPIT_CONFIG_DIR'     , COCKPIT_ENV_ROOT.'/config');\nif (!defined('COCKPIT_BASE_ROUTE'))             define('COCKPIT_BASE_ROUTE'     , $COCKPIT_BASE_ROUTE);\nif (!defined('COCKPIT_STORAGE_FOLDER'))         define('COCKPIT_STORAGE_FOLDER' , COCKPIT_ENV_ROOT.'/storage');\nif (!defined('COCKPIT_ADMIN_CP'))               define('COCKPIT_ADMIN_CP'       , COCKPIT_ADMIN && !COCKPIT_API_REQUEST ? 1 : 0);\nif (!defined('COCKPIT_PUBLIC_STORAGE_FOLDER'))  define('COCKPIT_PUBLIC_STORAGE_FOLDER' , COCKPIT_ENV_ROOT.'/storage');\n\nif (!defined('COCKPIT_CONFIG_PATH')) {\n    $_configpath = COCKPIT_CONFIG_DIR.'/config.'.(file_exists(COCKPIT_CONFIG_DIR.'/config.php') ? 'php':'yaml');\n    define('COCKPIT_CONFIG_PATH', $_configpath);\n}\n\n\nfunction cockpit($module = null) {\n\n    static $app;\n\n    if (!$app) {\n\n        $customConfig = [];\n\n        // load custom config\n        if (file_exists(COCKPIT_CONFIG_PATH)) {\n            $customConfig = preg_match('/\\.yaml$/', COCKPIT_CONFIG_PATH) ? Spyc::YAMLLoad(COCKPIT_CONFIG_PATH) : include(COCKPIT_CONFIG_PATH);\n        }\n\n        // load config\n        $config = array_replace_recursive([\n\n            'debug'        => preg_match('/(localhost|::1|\\.local)$/', @$_SERVER['SERVER_NAME']),\n            'app.name'     => 'Cockpit',\n            'base_url'     => COCKPIT_BASE_URL,\n            'base_route'   => COCKPIT_BASE_ROUTE,\n            'docs_root'    => COCKPIT_DOCS_ROOT,\n            'session.name' => md5(COCKPIT_ENV_ROOT),\n            'session.init' => (COCKPIT_ADMIN && !COCKPIT_API_REQUEST) ? true : false,\n            'sec-key'      => 'c3b40c4c-db44-s5h7-a814-b4931a15e5e1',\n            'i18n'         => 'en',\n            'database'     => ['server' => 'mongolite://'.(COCKPIT_STORAGE_FOLDER.'/data'), 'options' => ['db' => 'cockpitdb'], 'driverOptions' => [] ],\n            'memory'       => ['server' => 'redislite://'.(COCKPIT_STORAGE_FOLDER.'/data/cockpit.memory.sqlite'), 'options' => [] ],\n\n            'paths'         => [\n                '#root'     => COCKPIT_DIR,\n                '#storage'  => COCKPIT_STORAGE_FOLDER,\n                '#pstorage' => COCKPIT_PUBLIC_STORAGE_FOLDER,\n                '#data'     => COCKPIT_STORAGE_FOLDER.'/data',\n                '#cache'    => COCKPIT_STORAGE_FOLDER.'/cache',\n                '#tmp'      => COCKPIT_STORAGE_FOLDER.'/tmp',\n                '#thumbs'   => COCKPIT_PUBLIC_STORAGE_FOLDER.'/thumbs',\n                '#uploads'  => COCKPIT_PUBLIC_STORAGE_FOLDER.'/uploads',\n                '#modules'  => COCKPIT_DIR.'/modules',\n                '#addons'   => COCKPIT_ENV_ROOT.'/addons',\n                '#config'   => COCKPIT_CONFIG_DIR,\n                'assets'    => COCKPIT_DIR.'/assets',\n                'site'      => COCKPIT_SITE_DIR\n            ],\n\n            'filestorage' => [],\n\n        ], is_array($customConfig) ? $customConfig : []);\n\n        // make sure Cockpit module is not disabled\n        if (isset($config['modules.disabled']) && in_array('Cockpit', $config['modules.disabled'])) {\n            array_splice($config['modules.disabled'], array_search('Cockpit', $config['modules.disabled']), 1);\n        }\n\n        $app = new LimeExtra\\App($config);\n\n        $app['config'] = $config;\n\n        // register paths\n        foreach ($config['paths'] as $key => $path) {\n            $app->path($key, $path);\n        }\n\n        // nosql storage\n        $app->service('storage', function() use($config) {\n            $client = new MongoHybrid\\Client($config['database']['server'], $config['database']['options'], $config['database']['driverOptions']);\n            return $client;\n        });\n\n        // file storage\n        $app->service('filestorage', function() use($config, $app) {\n\n            $storages = array_replace_recursive([\n\n                'root' => [\n                    'adapter' => 'League\\Flysystem\\Adapter\\Local',\n                    'args' => [$app->path('#root:')],\n                    'mount' => true,\n                    'url' => $app->pathToUrl('#root:', true)\n                ],\n\n                'site' => [\n                    'adapter' => 'League\\Flysystem\\Adapter\\Local',\n                    'args' => [$app->path('site:')],\n                    'mount' => true,\n                    'url' => $app->pathToUrl('site:', true)\n                ],\n\n                'tmp' => [\n                    'adapter' => 'League\\Flysystem\\Adapter\\Local',\n                    'args' => [$app->path('#tmp:')],\n                    'mount' => true,\n                    'url' => $app->pathToUrl('#tmp:', true)\n                ],\n\n                'thumbs' => [\n                    'adapter' => 'League\\Flysystem\\Adapter\\Local',\n                    'args' => [$app->path('#thumbs:')],\n                    'mount' => true,\n                    'url' => $app->pathToUrl('#thumbs:', true)\n                ],\n\n                'uploads' => [\n                    'adapter' => 'League\\Flysystem\\Adapter\\Local',\n                    'args' => [$app->path('#uploads:')],\n                    'mount' => true,\n                    'url' => $app->pathToUrl('#uploads:', true)\n                ],\n\n                'assets' => [\n                    'adapter' => 'League\\Flysystem\\Adapter\\Local',\n                    'args' => [$app->path('#uploads:')],\n                    'mount' => true,\n                    'url' => $app->pathToUrl('#uploads:', true)\n                ]\n\n            ], $config['filestorage']);\n\n            $app->trigger('cockpit.filestorages.init', [&$storages]);\n\n            $filestorage = new FileStorage($storages);\n\n            return $filestorage;\n        });\n\n        // key-value storage\n        $app->service('memory', function() use($config) {\n            $client = new SimpleStorage\\Client($config['memory']['server'], $config['memory']['options']);\n            return $client;\n        });\n\n        // mailer service\n        $app->service('mailer', function() use($app, $config){\n            \n            $options = isset($config['mailer']) ? $config['mailer']:[];\n\n            if (is_string($options)) {\n                parse_str($options, $options);\n            }\n\n            $mailer    = new \\Mailer($options['transport'] ?? 'mail', $options);\n            return $mailer;\n        });\n\n        // set cache path\n        $tmppath = $app->path('#tmp:');\n\n        $app('cache')->setCachePath($tmppath);\n        $app->renderer->setCachePath($tmppath);\n\n        // i18n\n        $app('i18n')->locale = $config['i18n'] ?? 'en';\n\n        // handle exceptions\n        if (COCKPIT_ADMIN) {\n\n            set_exception_handler(function($exception) use($app) {\n\n                $error = [\n                    'message' => $exception->getMessage(),\n                    'file' => $exception->getFile(),\n                    'line' => $exception->getLine(),\n                ];\n\n                if ($app['debug']) {\n                    $body = $app->request->is('ajax') || COCKPIT_API_REQUEST ? json_encode(['error' => $error['message'], 'file' => $error['file'], 'line' => $error['line']]) : $app->render('cockpit:views/errors/500-debug.php', ['error' => $error]);\n                } else {\n                    $body = $app->request->is('ajax') || COCKPIT_API_REQUEST ? '{\"error\": \"500\", \"message\": \"system error\"}' : $app->view('cockpit:views/errors/500.php');\n                }\n\n                $app->trigger('error', [$error, $exception]);\n\n                header('HTTP/1.0 500 Internal Server Error');\n                echo $body;\n\n                if (function_exists('cockpit_error_handler')) {\n                    cockpit_error_handler($error);\n                }\n            });\n        }\n\n        $modulesPaths = array_merge([\n            COCKPIT_DIR.'/modules',  # core\n            COCKPIT_DIR.'/addons' # addons\n        ], $config['loadmodules'] ?? []);\n\n        if (COCKPIT_ENV_ROOT !== COCKPIT_DIR) {\n            $modulesPaths[] = COCKPIT_ENV_ROOT.'/addons';\n        }\n\n        // load modules\n        $app->loadModules($modulesPaths);\n\n        // load config global bootstrap file\n        if ($custombootfile = $app->path('#config:bootstrap.php')) {\n            include($custombootfile);\n        }\n\n        $app->trigger('cockpit.bootstrap');\n    }\n\n    // shorthand modules method call e.g. cockpit('regions:render', 'test');\n    if (func_num_args() > 1) {\n\n        $arguments = func_get_args();\n\n        list($module, $method) = explode(':', $arguments[0]);\n        array_splice($arguments, 0, 1);\n        return call_user_func_array([$app->module($module), $method], $arguments);\n    }\n\n    return $module ? $app->module($module) : $app;\n}\n\n$cockpit = cockpit();\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.962890625,
          "content": "{\n\n    \"name\": \"agentejo/cockpit\",\n    \"type\": \"project\",\n    \"description\": \"Cockpit Headless CMS\",\n    \"keywords\": [\"cms\", \"headles\", \"api\", \"cockpit\"],\n    \"homepage\": \"https://getcockpit.com/\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Artur Heinze\",\n            \"email\": \"artur@agentejo.com\"\n        }\n    ],\n\n    \"require\": {\n        \"php\": \"^7.3.0\",\n        \"ext-json\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"phpmailer/phpmailer\": \"^6.0\",\n        \"claviska/simpleimage\": \"^3.6\",\n        \"ksubileau/color-thief-php\": \"^1.3\",\n        \"league/flysystem\": \"^1.0\",\n        \"firebase/php-jwt\": \"^5.0\",\n        \"mongodb/mongodb\": \"^1.3\",\n        \"erusev/parsedown\": \"^1.7\",\n        \"erusev/parsedown-extra\": \"^0.7.1\",\n        \"maennchen/zipstream-php\": \"^0.5.2\",\n        \"colinodell/json5\": \"^2.1\"\n    },\n\n    \"config\": {\n        \"vendor-dir\": \"lib/vendor\",\n        \"optimize-autoloader\": true,\n        \"prefer-dist\": true,\n        \"lock\": false\n    }\n}\n"
        },
        {
          "name": "cp",
          "type": "blob",
          "size": 1.64453125,
          "content": "#!/usr/bin/env php\n<?php\n\nif (PHP_SAPI !== 'cli') {\n    exit('Script needs to be run from Command Line Interface (cli)');\n}\n\ndefine('COCKPIT_CLI', true);\n\n// set default timezone\ndate_default_timezone_set('UTC');\n\ninclude_once(__DIR__.'/bootstrap.php');\n\n$_REQUEST = CLI::opts(); // make option available via $app->param()\n$app = cockpit();\n\n$request = new \\Lime\\Request([\n    'request'    => $_REQUEST,\n    'server'     => $_SERVER,\n    'site_url'   => $app['site_url'],\n    'base_url'   => $app['base_url'],\n    'base_route' => $app['base_route']\n]);\n\n$app->request = $request;\n\nregister_shutdown_function(function() use($app){\n    $app->trigger('shutdown');\n});\n\nset_exception_handler(function($exception) use($app) {\n\n    $error = [\n        'message' => $exception->getMessage(),\n        'file' => $exception->getFile(),\n        'line' => $exception->getLine(),\n    ];\n\n    $app->trigger('error', [$error, $exception]);\n\n    if (function_exists('cockpit_error_handler')) {\n        cockpit_error_handler($error);\n    }\n\n    CLI::writeln('COCKPIT CLI ERROR:', false);\n    CLI::writeln('-> in '.$error['file'].':'.$error['line'].\"\\n\");\n    CLI::writeln($error['message'].\"\\n\");\n});\n\nif (isset($argv[1])) {\n\n    $cmd = str_replace('../', '', $argv[1]);\n    $script = $app->path(\"#config:cli/{$cmd}.php\");\n\n    if (!$script) {\n        $script = $app->path(\"#cli:{$cmd}.php\");\n    }\n\n    switch ($cmd) {\n\n        case 'test':\n            CLI::writeln('Yepp!', true);\n            break;\n\n        default:\n\n            if ($script) {\n                include($script);\n            } else {\n                CLI::writeln(\"Error: Command \\\"{$cmd}\\\" not found!\", false);\n            }\n    }\n}\n"
        },
        {
          "name": "favicon.png",
          "type": "blob",
          "size": 3.6337890625,
          "content": null
        },
        {
          "name": "index.php",
          "type": "blob",
          "size": 1.7607421875,
          "content": "<?php\n/**\n * This file is part of the Cockpit project.\n *\n * (c) Artur Heinze - 🅰🅶🅴🅽🆃🅴🅹🅾, http://agentejo.com\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\ndefine('COCKPIT_ADMIN', 1);\n\n// set default timezone\ndate_default_timezone_set('UTC');\n\n// handle php webserver\nif (PHP_SAPI == 'cli-server' && is_file(__DIR__.parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH))) {\n    return false;\n}\n\n// bootstrap cockpit\nrequire(__DIR__.'/bootstrap.php');\n\n# admin route\nif (COCKPIT_ADMIN && !defined('COCKPIT_ADMIN_ROUTE')) {\n\n    $route = preg_replace('#'.preg_quote(COCKPIT_BASE_URL, '#').'#', '', parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH), 1);\n\n    if ($route == '') {\n        $route = '/';\n    }\n\n    define('COCKPIT_ADMIN_ROUTE', $route);\n}\n\nif (COCKPIT_API_REQUEST) {\n\n    $_cors = $cockpit->retrieve('config/cors', []);\n\n    header('Access-Control-Allow-Origin: '      .($_cors['allowedOrigins'] ?? '*'));\n    header('Access-Control-Allow-Credentials: ' .($_cors['allowCredentials'] ?? 'true'));\n    header('Access-Control-Max-Age: '           .($_cors['maxAge'] ?? '1000'));\n    header('Access-Control-Allow-Headers: '     .($_cors['allowedHeaders'] ?? 'X-Requested-With, Content-Type, Origin, Cache-Control, Pragma, Authorization, Accept, Accept-Encoding, Cockpit-Token'));\n    header('Access-Control-Allow-Methods: '     .($_cors['allowedMethods'] ?? 'PUT, POST, GET, OPTIONS, DELETE'));\n    header('Access-Control-Expose-Headers: '    .($_cors['exposedHeaders'] ?? 'true'));\n\n    if (isset($_SERVER['REQUEST_METHOD']) && $_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n        exit(0);\n    }\n}\n\n\n// run backend\n$cockpit->set('route', COCKPIT_ADMIN_ROUTE)->trigger('admin.init')->run();\n"
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1416015625,
          "content": "{\n    \"name\": \"cockpit-next\",\n    \"version\": \"0.12.2\",\n    \"license\": \"MIT\",\n    \"scripts\": {\n        \"build\": \"npm run build-style && npm run build-components\",\n        \"build-style\": \"lessc assets/app/css/style.less > assets/app/css/style.css -x\",\n        \"build-components\": \"riot modules/Cockpit/assets/components modules/Cockpit/assets/components.js\",\n        \"watch\": \"npm run watch-style & npm run watch-components\",\n        \"watch-style\": \"watch-run -i -p 'assets/app/css/**/*.less' npm run build-style\",\n        \"watch-components\": \"watch-run -i -p 'modules/Cockpit/assets/components/*.tag' npm run build-components\",\n        \"docker-init\": \"docker build -t cockpit/dev .\",\n        \"docker\": \"docker run -p 8080:80 -v $PWD:/var/www/html cockpit/dev & open http://localhost:8080/install\"\n    },\n    \"devDependencies\": {\n        \"less\": \"^2.6.0\",\n        \"riot-cli\": \"^3.0.0\",\n        \"watch-run\": \"^1.2.4\"\n    },\n    \"dependencies\": {\n        \"opencollective\": \"^1.0.3\"\n    },\n    \"collective\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/cockpit\",\n        \"logo\": \"https://opencollective.com/opencollective/logo.txt\"\n    }\n}\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}