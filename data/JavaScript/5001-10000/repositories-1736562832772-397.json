{
  "metadata": {
    "timestamp": 1736562832772,
    "page": 397,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "flightjs/flight",
      "stars": 6522,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0380859375,
          "content": "bower_components/\nbuild/\nnode_modules/\n"
        },
        {
          "name": ".jscs.json",
          "type": "blob",
          "size": 0.716796875,
          "content": "{\n  \"requireCurlyBraces\": [\n    \"if\",\n    \"else\",\n    \"for\",\n    \"while\",\n    \"do\",\n    \"try\",\n    \"catch\"\n  ],\n  \"disallowTrailingWhitespace\": true,\n  \"disallowTrailingComma\": true,\n  \"requireCapitalizedConstructors\": true,    \n  \"requireSpaceAfterKeywords\": [\n    \"if\",\n    \"else\",\n    \"for\",\n    \"while\",\n    \"do\",\n    \"switch\",\n    \"return\",\n    \"try\",\n    \"catch\"\n  ],\n  \"requireSpaceBeforeBinaryOperators\": [\n    \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"<<=\", \">>=\", \">>>=\",\n    \"&=\", \"|=\", \"^=\", \"+=\",\n\n    \"+\", \"-\", \"*\", \"/\", \"%\", \"<<\", \">>\", \">>>\", \"&\",\n    \"|\", \"^\", \"&&\", \"||\", \"===\", \"==\", \">=\",\n    \"<=\", \"<\", \">\", \"!=\", \"!==\"\n  ],\n  \"requireSpacesInConditionalExpression\": true,\n  \"requireSpaceBeforeBlockStatements\": true\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.169921875,
          "content": "language: node_js\nnode_js:\n  - \"0.10\"\nbefore_script:\n  - npm install -g bower\n  - bower install\n  - export DISPLAY=:99.0\n  - sh -e /etc/init.d/xvfb start\nscript: \"make test\"\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 1.283203125,
          "content": "Twitter isn't the only company using Flight. We're sure the following list isn't complete, so please let us know if your company should be included, or if you'd like us to feature a link to a blog post or article about how you're using Flight. Or even better, add the links yourself and submit a pull request.\n\n* [zipcar](http://www.zipcar.com)\n* [airbnb](http://nerds.airbnb.com/redesigning-search)\n* [beats music](http://www.beatsmusic.com/)\n* [RetailMeNot](http://www.retailmenot.com/corp/eng/posts/2014/08/28/how-flight-plays-well-with-non-flight-js/)\n* [gumroad](http://blog.gumroad.com/post/47471270406/gumroad-meets-flight)\n* [mixam.uk](https://mixam.co.uk)\n* [yinzcam (for Baltimore Ravens)](http://www.yinzcam.com/apps/nfl/bal)\n* [the martin agency](http://www.martinagency.com)\n* [99 designs](http://99designs.com/)\n* [crashlytics](http://try.crashlytics.com/)\n* [tweetdeck](https://blog.twitter.com/2013/flight-at-tweetdeck)\n* [twitter](https://blog.twitter.com/2013/introducing-flight-a-web-application-framework)\n* [goodvidio](http://www.goodvid.io)\n* [Drip](https://www.getdrip.com)\n* [Codetree](https://codetree.com)\n* [Movebubble](https://www.movebubble.com)\n* [Codevelop](http://codevelop.github.io)\n* [Telemach](https://moj.telemach.si)\n* [Dailymotion Player](https://www.dailymotion.com/player)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.826171875,
          "content": "## v1.5.1 (10/6/2015)\n\n* debug.warn like console.log https://github.com/flightjs/flight/commit/70dd4a3\n* Fix component logging in debug mode. https://github.com/flightjs/flight/commit/c741a6a\n* Punctuation fix https://github.com/flightjs/flight/commit/7bb5310\n* Rename define to defineComponent https://github.com/flightjs/flight/commit/65d5b0e\n* Warn on use of defaultAttrs in debug mode https://github.com/flightjs/flight/commit/04fb2eb\n\n## v1.5.0 (1/23/2015)\n\n* Shows warning for reference types in attributes https://github.com/flightjs/flight/commit/66164d95e72d26dee1ab39e9edd4f8c26147972c\n* Add Gitter room button https://github.com/flightjs/flight/commit/66164d95e72d26dee1ab39e9edd4f8c26147972c\n* Remove debug-mode serializable event data restrction https://github.com/flightjs/flight/commit/66164d95e72d26dee1ab39e9edd4f8c26147972c\n* Update Advice API doc for event and data params, multiple advice https://github.com/flightjs/flight/pull/330\n* Document function-in-attributes behaviour https://github.com/flightjs/flight/commit/82a45623f3954e5831503317b0e716b9fe5b8bb1\n\n## v1.4.0 (1/14/2015)\n\n### Features\n\n* New `event.currentTarget` in delegated event handlers https://github.com/flightjs/flight/pull/329\n* npm support â€” `npm install flightjs`\n* Multi-function advice https://github.com/flightjs/flight/pull/299\n\n### Bug fixes and tweaks\n\n* IE9 debug fix https://github.com/flightjs/flight/pull/318\n* Allow mixing into a null-based object https://github.com/flightjs/flight/pull/323\n* Various documentation & smaller bug fixes\n\n## v1.3.0 (9/22/2014)\n\n###features\n\n* Auto-eval function attributes https://github.com/flightjs/flight/pull/306\n* Enforce JSCS style checker compliance https://github.com/flightjs/flight/pull/291\n* Use webpack to build the standalone library https://github.com/flightjs/flight/pull/272\n* Expose registry on DEBUG global https://github.com/flightjs/flight/pull/298\n* Allow for optional undefined attributes https://github.com/flightjs/flight/pull/310\n* getEnumerableProperty util https://github.com/flightjs/flight/pull/311\n\n###bug fixes and tweaks\n\n* Array optimization in hot code https://github.com/flightjs/flight/pull/276\n* New attributes override works in debug mode https://github.com/flightjs/flight/pull/279\n* Per instance callback unbinding https://github.com/flightjs/flight/pull/282\n* Move index.js to project root https://github.com/flightjs/flight/pull/294\n* Avoid unnecessary clearTimeouts in debounce() https://github.com/flightjs/flight/pull/304\n\n## v1.2.0 (6/20/2014)\n\n###features\n* New `this.attributes()` API for setting attributes\n* Allows override by other mixins\n* Ignores attributes passed by attachedTo unless declared in component\n* Requires null attributes to be overriden\n* Old `this.defaultAttrs` API still works but deprecated\nhttps://github.com/flightjs/flight/pull/150\nhttps://github.com/flightjs/flight/pull/270\n\n\n\n###bug fixes and tweaks\n* Optimize Arguments to Array util\nhttps://github.com/flightjs/flight/pull/268\n* Add Component.mixin docs\nhttps://github.com/flightjs/flight/pull/246\n* Fix attribute behavior when using Component.mixin\nhttps://github.com/flightjs/flight/pull/253\nhttps://github.com/flightjs/flight/pull/270\n\n\n## v1.1.4 (4/18/2014)\n\n###features\n* Existing Components can now be extended with `mixin`\nhttps://github.com/flightjs/flight/pull/238\nhttps://github.com/flightjs/flight/pull/242\n\n* Nested event logging\nhttps://github.com/flightjs/flight/pull/244\n\n###bug fixes and tweaks\n\n* No fatal CSP error for accessing storage when cookies are off\nhttps://github.com/flightjs/flight/pull/233\n\n## v1.1.3 (2/18/2014)\n\n###features\n* `on` now optionally accepts an event to trigger instead of a callback\nhttps://github.com/flightjs/flight/pull/217\n\n* logger now shows trigger payload\nhttps://github.com/flightjs/flight/pull/213\n\n* `getBoundRequests` added to registry as a convenience\nhttps://github.com/flightjs/flight/pull/214\n\n###bug fixes and tweaks\n\n* correct clean-up when 'off' callback is a bound function\nhttps://github.com/flightjs/flight/pull/222\n\n## v1.1.2 (1/14/2014)\n\n###features\n* new `once` util can be used to mimick jQuery's $node.once behavior (PR 186)\n* delegate method now interruptible by calling stopPropagation on the event (PR 202)\n\n###bug fixes and tweaks\n* prevent component.off from closing all event bindings for a given event and node (PR 192)\n* clean up debugger and logger code (PR 193)\n* ensure nested teardown support (PR 194)\n* documentation improvements\n\n## v1.1.1 (10/15/2013)\n\n###features\n* better docs\n\n###bug fixes and tweaks\n* new Function -> function declaration to avoid CSP issues\n* more tests\n* normalize all references to the utils module\n\n## v1.1.0 (07/26/2013)\n\n##api changes\n* new \\<Component\\> (not recommended) no longer auto-calls initialize\n(use \\<Component\\>.attachTo)\n\n###features\n* core component behavior now in base.js mixin/module\n* using karma for tests\n* refactored documentation now includes api docs\n\n###bug fixes and tweaks\n* update bower resources to match current bower naming scheme\n* tools/debug.js -> lib/debug.js\n\n## v1.0.11 (07/26/2013)\n\n* rollback 1.0.10 due to API changes\n\n## v1.0.10 (07/24/2013)\n\n* becomes v1.1.0 due to API changes\n\n## v1.0.9 (05/13/2013)\n\n###features\n* Event logger now works out-of-the-box\n\n###bug fixes and tweaks\n* Fix logger output\n\n## v1.0.8 (04/23/2013)\n\n###features\n* bower ignores non-useful resources\n\n###bug fixes and tweaks\n* fix purging of event registry when unbinding\n* fix empty componentInfo check in registry\n\n## v1.0.7 (04/02/2013)\n\n###features\n* logging options are now persisted\n\n###bug fixes and tweaks\n* event logging fixed\n\n## v1.0.6 (03/26/2013)\n\n###features\n* access registry component info more efficiently\n* detect existing instance on attachTo and return without error\n\n###bug fixes and tweaks\n* fix Component.describe\n\n## v1.0.5 (03/19/2013)\n\n###features\n* even faster component initialization\n\n###bug fixes and tweaks\n* add id to component and for fast registry lookup\n* remove array creation for argument munging, for speed and less gc\n* remove unused trigger advice\n* various refactors for performance\n* remove component lifecycle events\n\n## v1.0.4 (03/12/2013)\n\n###features\n* more efficient options->attr merging\n* faster component initialization\n\n###bug fixes and tweaks\n* tighter debug-mode checking\n* remove obsolete component::bind\n\n## v1.0.3 (03/05/2013)\n\n###features\n* tests use require.js\n* remove $.browser dependency (in prep for jQuery.next)\n\n###bug fixes and tweaks\n* return {} if utils.merge has no arguments\n* event logging off by default\n\n## v1.0.2 (02/15/2013)\n\n###features\n* events can define default behaviour\n\n###bug fixes and tweaks\n* fix null pointer issues with callback exception\n\n## v1.0.1 (02/06/2013)\n\n###bug fixes and tweaks\n* revert to es5-shim 2.0.0 (cross domain issue with IE<9 Object.create shim)\n* fix Travis build script\n* fix unbinding where multiple bindings have same evet and callback\n\n## v1.0.0 (01/30/2013)\n\n* Initial public release.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.8740234375,
          "content": "# Contributing to Flight\n\nLooking to contribute something to Flight? Here's how you can help.\n\n\n## Bugs reports\n\nA bug is a _demonstrable problem_ that is caused by the code in the\nrepository. Good bug reports are extremely helpful â€“ thank you!\n\nGuidelines for bug reports:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been\n   reported.\n\n2. **Check if the issue has been fixed** &mdash; try to reproduce it using the\n   latest `master` or development branch in the repository.\n\n3. **Isolate the problem** &mdash; ideally create a reduced test\n   case and a live example.\n\n4. Please try to be as detailed as possible in your report. Include specific\n   information about the environment â€“ operating system and version, browser\n   and version, version of Flight â€“ and steps required to reproduce the issue.\n\n\n## Feature requests & contribution enquiries\n\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to *you* to make a strong\ncase for the inclusion of your feature. Please provide as much detail and\ncontext as possible.\n\nContribution enquiries should take place before any significant pull request,\notherwise you risk spending a lot of time working on something that we might\nhave good reasons for rejecting.\n\n\n## Pull requests\n\nGood pull requests&mdash;patches, improvements, new features&mdash;are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n\nMake sure to adhere to the coding conventions used throughout the codebase\n(indentation, accurate comments, etc.). Please run `npm test` before you push:\nthis will run the jasmine test suite (using karma runner) and check your syntax\nstyle is consistent with master (using JSCS)\n\nPlease follow this process; it's the best way to get your work included in the\nproject:\n\n1. [Fork](http://help.github.com/fork-a-repo/) the project, clone your fork,\n   and configure the remotes:\n\n   ```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/<your-username>/flight\n   # Navigate to the newly cloned directory\n   cd <repo-name>\n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream git://github.com/twitter/flight\n   ```\n\n2. If you cloned a while ago, get the latest changes from upstream:\n\n   ```bash\n   git checkout master\n   git pull upstream master\n   ```\n\n3. Install the dependencies (you must have Node.js and [Bower](http://bower.io)\n   installed), and create a new topic branch (off the main project development\n   branch) to contain your feature, change, or fix:\n\n   ```bash\n   npm install\n   bower install\n   git checkout -b <topic-branch-name>\n   ```\n\n4. Make sure to update, or add to the tests when appropriate. Patches and\n   features will not be accepted without tests. Run `make test` to check that\n   all tests pass after you've made changes.\n\n5. Commit your changes in logical chunks. Provide clear and explanatory commit\n   messages. Use Git's [interactive rebase](https://help.github.com/articles/interactive-rebase) feature to tidy up\n   your commits before making them public.\n\n6. Locally merge (or rebase) the upstream development branch into your topic branch:\n\n   ```bash\n   git pull [--rebase] upstream master\n   ```\n\n7. Push your topic branch up to your fork:\n\n   ```bash\n   git push origin <topic-branch-name>\n   ```\n\n8. [Open a Pull Request](https://help.github.com/articles/using-pull-requests/)\n    with a clear title and description.\n\n9. If you are asked to amend your changes before they can be merged in, please\n   use `git commit --amend` (or rebasing for multi-commit Pull Requests) and\n   force push to your remote feature branch. You may also be asked to squash\n   commits.\n\n## License\n\nBy contributing your code,\n\nYou agree to license your contribution under the terms of the MIT License\nhttps://github.com/twitter/flight/blob/master/LICENSE\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "Copyright (c) 2013-2014 Twitter, Inc and others\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.8779296875,
          "content": "SITE_REPO = git@github.com:flightjs/flightjs.github.io.git\nBUILD_DIR := build\nSITE_MASTER = $(BUILD_DIR)/site\nVERSION = `node -pe \"require('./package.json').version\"`\n\nclean:\n\t@ rm -rf $(BUILD_DIR)\n\nsetup:\n\t@ npm install\n\nstandalone: setup clean\n\t@ mkdir -p $(BUILD_DIR)\n\t@ npm run build\n\ntest: standalone\n\t@ npm test\n\n# clones the Flight project page into the 'build' directory\n# creates new directory for latest version\n# copies flight.js and flight.min.js\n# commits and pushes\nrelease: standalone\n\tgit clone $(SITE_REPO) $(SITE_MASTER)\n\t@ rm -rf $(SITE_MASTER)/release/latest\n\t@ mkdir -p $(SITE_MASTER)/release/latest\n\t@ mkdir $(SITE_MASTER)/release/$(VERSION)\n\t@ cp $(BUILD_DIR)/*.js $(SITE_MASTER)/release/latest\n\t@ cp $(BUILD_DIR)/*.js $(SITE_MASTER)/release/$(VERSION)\n\t@ cd $(SITE_MASTER); \\\n\t  git add release; \\\n\t  git commit -m \"Add latest release of Flight\"; \\\n\t  git push origin master\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4951171875,
          "content": "# Please note\n\nFlight is **not under active development**. New pull requests will not be accepted unless they fix core bugs or security issues.\n\n---\n\n# Flight\n\n[![Build Status](https://travis-ci.org/flightjs/flight.png?branch=master)](http://travis-ci.org/flightjs/flight) [![Gitter](https://badges.gitter.im/Join%20chat.svg)](https://gitter.im/flightjs/flight?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[Flight](http://flightjs.github.io/) is a lightweight, component-based,\nevent-driven JavaScript framework that maps behavior to DOM nodes. It was\ncreated at Twitter, and is used by the [twitter.com](https://twitter.com/) and\n[TweetDeck](https://tweetdeck.twitter.com/) web applications.\n\n* [Website](http://flightjs.github.io/)\n* [API documentation](doc/README.md)\n* [Flight example app](http://flightjs.github.io/example-app/) ([Source](https://github.com/flightjs/example-app))\n* [Flight's Google Group](https://groups.google.com/forum/?fromgroups#!forum/twitter-flight)\n* [Flight on Twitter](https://twitter.com/flightjs)\n* [Flight on Freenode IRC](http://webchat.freenode.net/?channels=flightjs) (#flightjs)\n\n## Example\n\nA simple example of a Flight component.\n\n```js\n/* Component definition */\n\nvar Inbox = flight.component(inbox);\n\nfunction inbox() {\n  this.doSomething = function() { /* ... */ }\n  this.doSomethingElse = function() { /* ... */ }\n\n  // after initializing the component\n  this.after('initialize', function() {\n    this.on('click', this.doSomething);\n    this.on('mouseover', this.doSomethingElse);\n  });\n}\n\n/* Attach the component to a DOM node */\n\nInbox.attachTo('#inbox');\n```\n\n## Installation\n\nQuick start using the [pre-built\nlibrary](http://flightjs.github.io/release/latest/flight.min.js) (a\n[UMD](https://github.com/umdjs/umd) bundle). It exposes all of its modules as\nproperties of a global variable, `flight`.\n\n```html\n<!-- jQuery -->\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n<!-- Flight release -->\n<script src=\"http://flightjs.github.io/release/latest/flight.min.js\"></script>\n```\n\nUsing [npm](https://www.npmjs.org/):\n\n```\nnpm install --save flightjs\n```\n\nUsing [Bower](http://bower.io/):\n\n```\nbower install --save flight\n```\n\nYou will have to load [jQuery](http://jquery.com) in your application.\n\n## Why Flight?\n\nFlight is only ~5K minified and gzipped. It's built upon jQuery.\n\nFlight components are highly portable and easily testable. This is because a\nFlight component (and its API) is entirely decoupled from other components.\nFlight components communicate only by triggering and subscribing to events.\n\nFlight also includes a simple and safe\n[mixin](https://javascriptweblog.wordpress.com/2011/05/31/a-fresh-look-at-javascript-mixins/)\ninfrastructure, allowing components to be easily extended with minimal\nboilerplate.\n\n## Development tools\n\nFlight has supporting projects that provide everything you need to setup,\nwrite, and test your application.\n\n* [Flight generator](https://github.com/flightjs/generator-flight/)\n  Recommended. One-step to setup a Flight-based web app.\n\n* [Flight package generator](https://github.com/flightjs/generator-flight-package/)\n  Recommended. One-step to setup everything you need to write and test a\n  standalone Flight component.\n\n* [Jasmine Flight](https://github.com/flightjs/jasmine-flight/)\n  Extensions for the Jasmine test framework.\n\n* [Mocha Flight](https://github.com/flightjs/mocha-flight/)\n  Extensions for the Mocha test framework.\n\n## Finding and writing components\n\nYou can browse all the [Flight components](http://flight-components.jit.su)\navailable at this time. They can also be found by searching the Bower registry:\n\n```\nbower search flight\n```\n\nThe easiest way to write a new Flight component is to use the [Flight\npackage generator](https://github.com/flightjs/generator-flight-package/):\n\n```\nyo flight-package foo\n```\n\n## Browser Support\n\nChrome, Firefox, Safari, Opera, IE 7+ (requires [ES5-shim](https://github.com/kriskowal/es5-shim)).\n\n## Quick Overview\n\nHere's a brief introduction to Flight's key concepts and syntax. Read the [API\ndocumentation](doc) for a comprehensive overview.\n\n### Components ([API](doc/component_api.md))\n\n- A Component is nothing more than a constructor with properties mixed into its prototype.\n- Every Component comes with a set of basic functionality such as event handling and component registration.\n(see [Base API](doc/base_api.md))\n- Additionally, each Component definition mixes in a set of custom properties which describe its behavior.\n- When a component is attached to a DOM node, a new instance of that component is created. Each component\ninstance references the DOM node via its `node` property.\n- Component instances cannot be referenced directly; they communicate with other components via events.\n\n### Interacting with the DOM\n\nOnce attached, component instances have direct access to their node object via the `node` property. (There's\nalso a jQuery version of the node available via the `$node` property.)\n\n### Events in Flight\n\nEvents are how Flight components interact. The Component prototype supplies methods for triggering events as\nwell as for subscribing to and unsubscribing from events. These Component event methods are actually just convenient\nwrappers around regular event methods on DOM nodes.\n\n### Mixins ([API](doc/mixin_api.md))\n\n- In Flight, a mixin is a function which assigns properties to a target object (represented by the `this`\nkeyword).\n- A typical mixin defines a set of functionality that will be useful to more than one component.\n- One mixin can be applied to any number of [Component](#components) definitions.\n- One Component definition can have any number of mixins applied to it.\n- Each Component defines a [*core*](#core_mixin) mixin within its own module.\n- A mixin can itself have mixins applied to it.\n\n### Advice ([API](doc/advice_api.md))\n\nIn Flight, advice is a mixin (`'lib/advice.js'`) that defines `before`, `after` and `around` methods.\n\nThese can be used to modify existing functions by adding custom code. All Components have advice mixed in to\ntheir prototype so that mixins can augment existing functions without requiring knowledge\nof the original implementation. Moreover, since Components are seeded with an empty `initialize` method,\nComponent definitions will typically use `after` to define custom `initialize` behavior.\n\n### Debugging ([API](doc/debug_api.md))\n\nFlight ships with a debug module which can help you trace the sequence of event triggering and binding. By default\nconsole logging is turned off, but you can log `trigger`, `on` and `off` events by means of the following console\ncommands.\n\n## Authors\n\n+ [@angus-c](http://github.com/angus-c)\n+ [@danwrong](http://github.com/danwrong)\n+ [@kpk](http://github.com/kennethkufluk)\n\nThanks for assistance and contributions:\n[@sayrer](https://github.com/sayrer),\n[@shinypb](https://github.com/shinypb),\n[@kloots](https://github.com/kloots),\n[@marcelduran](https://github.com/marcelduran),\n[@tbrd](https://github.com/tbrd),\n[@necolas](https://github.com/necolas),\n[@fat](https://github.com/fat),\n[@mkuklis](https://github.com/mkuklis),\n[@jrburke](https://github.com/jrburke),\n[@garann](https://github.com/garann),\n[@WebReflection](https://github.com/WebReflection),\n[@coldhead](https://github.com/coldhead),\n[@paulirish](https://github.com/paulirish),\n[@nimbupani](https://github.com/nimbupani),\n[@mootcycle](https://github.com/mootcycle).\n\nSpecial thanks to the rest of the Twitter web team for their abundant\ncontributions and feedback.\n\n## License\n\nCopyright 2013 Twitter, Inc and other contributors.\n\nLicensed under the MIT License\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.337890625,
          "content": "{\n  \"name\": \"flight\",\n  \"description\": \"Clientside component infrastructure\",\n  \"main\": \"index.js\",\n  \"version\": \"1.5.1\",\n  \"ignore\": [\n    \".*\",\n    \"doc\",\n    \"test\",\n    \"CHANGELOG.md\",\n    \"CONTRIBUTING.md\",\n    \"Makefile\",\n    \"karma.conf.js\",\n    \"package.json\",\n    \"webpack.conf.js\"\n  ],\n  \"dependencies\": {\n    \"jquery\": \">=1.8.0\"\n  }\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.533203125,
          "content": "/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [\n    './lib/advice',\n    './lib/component',\n    './lib/compose',\n    './lib/debug',\n    './lib/logger',\n    './lib/registry',\n    './lib/utils'\n  ],\n\n  function(advice, component, compose, debug, logger, registry, utils) {\n    'use strict';\n\n    return {\n      advice: advice,\n      component: component,\n      compose: compose,\n      debug: debug,\n      logger: logger,\n      registry: registry,\n      utils: utils\n    };\n\n  }\n);\n"
        },
        {
          "name": "jscs-pre-commit",
          "type": "blob",
          "size": 2.1357421875,
          "content": "#!/bin/bash\n\n# Runs JSCS style checker using definitions in `.jscs.json` \n# See https://github.com/mdevils/node-jscs for explanation of tests \n#\n# to style check your JS\n# 1) ln -s ../../jscs-pre-commit .git/hooks/pre-commit\n# 2) npm install jscs -g\n\n# Adapted from an original script by TimothÃ©e Boucher\n# http://tech.adroll.com/blog/web/2014/03/05/adding-jscs-to-your-commit-hook.html  \n\nexport JSCS_PATH=`which jscs`\n\n# Extract staged files to a temp directory\nTMPDIR=\nTMPFILE=\nif [ \"$IS_LINUX\" == \"true\" ]; then\n    TMPFILE=`mktemp jscs_tmp_XXXXXX`\n    TMPDIR=`mktemp -d jscs_tmp_XXXXXX`\nelse\n    TMPFILE=`mktemp -t tmp/jscs_tmp_XXXXXX`\n    TMPDIR=`mktemp -t tmp/jscs_tmp -d`\nfi\ngit diff --cached --name-only --diff-filter=ACMR | xargs git checkout-index --prefix=$TMPDIR/ --\n \n# Check JavaScript code style\nRUN_JSCS=1\nTOTAL_ERRORS=0\nPLURAL_SUFFIX= \n \nJSFILES=$(git diff-index --name-status --cached HEAD | grep -v ^D | egrep '.js$' | cut -c3-)\nif [ -z \"$JSFILES\" ]; then\n    # No JavaScript file changed for this commit\n    RUN_JSCS=0\nelif [ -z \"$JSCS_PATH\" ]; then\n    echo -e \"\\033[0;31mIf you \\033[1;34mnpm install jscs -g\\033[0;31m I'll check your JS style\\033[0;0m\"\n    RUN_JSCS=0\nfi\n \n# Run JSCS\nif [ $RUN_JSCS -ne 0 ]; then\n    echo -e \"\\033[0;34mChecking JS style...\\033[0;0m\"\n    OUT=`$JSCS_PATH -r text $TMPDIR`\n    CODE=$?\n    # Erase last output line\n    # echo -ne '\\r\\033[K'\n    if [ $CODE -ne 0 ]; then\n        # Remove temp dir from output and color the filename\n        OUT=`echo \"$OUT\" | sed \"s,$TMPDIR/\\([^ ]*\\),\\`echo -e \\\"\\033[0;34m\\1\\033[0m\\\"\\`,\"`\n        TOTAL_ERRORS=`echo -e \"$OUT\" | sed 's/[^0-9]//g' | tail -1`\n        # echo output minus last line\n        echo \"$OUT\" | sed '$ d'\n        if [ $TOTAL_ERRORS -ne 1 ]; then\n          PLURAL_SUFFIX=\"s\"\n        fi \n        echo -e \"\\033[0;31m$TOTAL_ERRORS code style error$PLURAL_SUFFIX found.\\033[0;0m\"\n        echo \"Please fix and re-commit.\"\n        echo -e \"Need to commit right away? commit with the \\033[0;34m-n\\033[0m flag\"\n        rm -Rf $TMPDIR $TMPFILE\n        exit $CODE\n    else\n        echo -e \"\\033[0;32mNo JS code style errors found.\\033[0;0m\"\n    fi\nfi\n \n# Clean up\nrm -Rf $TMPDIR $TMPFILE\n\n"
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 1.673828125,
          "content": "// Karma configuration file\n//\n// For all available config options and default values, see:\n// https://github.com/karma-runner/karma/blob/stable/lib/config.js#L54\n\nmodule.exports = function (config) {\n  'use strict';\n\n  config.set({\n    // base path, that will be used to resolve files and exclude\n    basePath: '',\n\n    frameworks: [\n      'jasmine'\n    ],\n\n    // list of files / patterns to load in the browser\n    files: [\n      // loaded without require\n      'bower_components/jquery/dist/jquery.js',\n      'build/flight.js',\n\n      // hack to load RequireJS after the built lib\n      'node_modules/requirejs/require.js',\n      'node_modules/karma-requirejs/lib/adapter.js',\n\n      // loaded with require\n      {pattern: 'index.js', included: false},\n      {pattern: 'lib/**/*.js', included: false},\n      {pattern: 'test/spec/**/*_spec.js', included: false},\n\n      'test/test-main.js'\n    ],\n\n    // enable / disable watching file and executing tests whenever any file changes\n    // CLI --auto-watch --no-auto-watch\n    autoWatch: true,\n\n    // Start these browsers\n    // CLI --browsers Chrome, Firefox, Safari\n    browsers: [process.env.TRAVIS ? 'Firefox' : 'Chrome'],\n\n    // If browser does not capture in given timeout [ms], kill it\n    // CLI --capture-timeout 5000\n    captureTimeout: 20000,\n\n    // list of files to exclude\n    exclude: [],\n\n    // use dots reporter, as travis terminal does not support escaping sequences\n    // possible values: 'dots', 'progress'\n    // CLI --reporters progress\n    reporters: [process.env.TRAVIS ? 'dots' : 'progress'],\n\n    // Auto run tests on start (when browsers are captured) and exit\n    // CLI --single-run --no-single-run\n    singleRun: false\n  });\n};\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1357421875,
          "content": "{\n  \"name\": \"flightjs\",\n  \"version\": \"1.5.2\",\n  \"main\": \"build/flight.js\",\n  \"files\": [\n    \"build/flight.js\",\n    \"index.js\",\n    \"lib\"\n  ],\n  \"devDependencies\": {\n    \"jscs\" : \"^1.5.8\",\n    \"karma\": \"~0.12.6\",\n    \"karma-cli\": \"0.0.4\",\n    \"karma-jasmine\": \"~0.1.0\",\n    \"karma-requirejs\": \"~0.2.0\",\n    \"karma-chrome-launcher\": \"~0.1.0\",\n    \"karma-ie-launcher\": \"~0.1.1\",\n    \"karma-firefox-launcher\": \"~0.1.0\",\n    \"karma-safari-launcher\": \"~0.1.1\",\n    \"webpack\": \"^1.11\"\n  },\n  \"scripts\": {\n    \"build\": \"npm run webpack & npm run webpack-minified\",\n    \"checkStyle\": \"jscs lib test\",\n    \"prepublish\": \"npm run build\",\n    \"test\": \"npm run unit && npm run checkStyle\",\n    \"unit\": \"karma start --single-run\",\n    \"watch\": \"karma start\",\n    \"webpack\": \"webpack --progress --colors\",\n    \"webpack-minified\": \"webpack --progress --colors --optimize-minimize --output-file flight.min.js\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://www.opensource.org/licenses/mit-license.php\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"http://github.com/flightjs/flight.git\"\n  },\n  \"homepage\": \"http://github.com/flightjs/flight\"\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 0.3837890625,
          "content": "var BannerPlugin = require('webpack/lib/BannerPlugin');\nvar version = require('./package.json').version;\n\nmodule.exports = {\n  entry: './index',\n  output: {\n    path: __dirname + '/build',\n    filename: 'flight.js',\n    library: 'flight',\n    libraryTarget: 'umd',\n    sourcePrefix: ''\n  },\n  plugins: [\n    new BannerPlugin('Flight v' + version + ' | (c) Twitter, Inc. | MIT License')\n  ]\n};\n"
        }
      ]
    }
  ]
}