{
  "metadata": {
    "timestamp": 1736562711803,
    "page": 237,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/botframework-sdk",
      "stars": 7532,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1376953125,
          "content": "root = true\n\n[*]\ninsert_final_newline = true\n\n[*.json]\nindent_style = space\nindent_size = 4\n\n[*.schema]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.5205078125,
          "content": "###############################################################################\r\n# Set default behavior to automatically normalize line endings.\r\n###############################################################################\r\n* text=crlf\r\n\r\n###############################################################################\r\n# Set default behavior for command prompt diff.\r\n#\r\n# This is need for earlier builds of msysgit that does not have it on by\r\n# default for csharp files.\r\n# Note: This is only used by command line\r\n###############################################################################\r\n#*.cs     diff=csharp\r\n\r\n###############################################################################\r\n# Set the merge driver for project and solution files\r\n#\r\n# Merging from the command prompt will add diff markers to the files if there\r\n# are conflicts (Merging from VS is not affected by the settings below, in VS\r\n# the diff markers are never inserted). Diff markers may cause the following \r\n# file extensions to fail to load in VS. An alternative would be to treat\r\n# these files as binary and thus will always conflict and require user\r\n# intervention with every merge. To do so, just uncomment the entries below\r\n###############################################################################\r\n#*.sln       merge=binary\r\n#*.csproj    merge=binary\r\n#*.vbproj    merge=binary\r\n#*.vcxproj   merge=binary\r\n#*.vcproj    merge=binary\r\n#*.dbproj    merge=binary\r\n#*.fsproj    merge=binary\r\n#*.lsproj    merge=binary\r\n#*.wixproj   merge=binary\r\n#*.modelproj merge=binary\r\n#*.sqlproj   merge=binary\r\n#*.wwaproj   merge=binary\r\n\r\n###############################################################################\r\n# behavior for image files\r\n#\r\n# image files are treated as binary by default.\r\n###############################################################################\r\n#*.jpg   binary\r\n#*.png   binary\r\n#*.gif   binary\r\n\r\n###############################################################################\r\n# diff behavior for common document formats\r\n# \r\n# Convert binary document formats to text before diffing them. This feature\r\n# is only available from the command line. Turn it on by uncommenting the \r\n# entries below.\r\n###############################################################################\r\n#*.doc   diff=astextplain\r\n#*.DOC   diff=astextplain\r\n#*.docx  diff=astextplain\r\n#*.DOCX  diff=astextplain\r\n#*.dot   diff=astextplain\r\n#*.DOT   diff=astextplain\r\n#*.pdf   diff=astextplain\r\n#*.PDF   diff=astextplain\r\n#*.rtf   diff=astextplain\r\n#*.RTF   diff=astextplain\r\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4140625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\necf/\nrcf/\n\nbones/\n.vs/\n.vscode/\n.config/\n\n# Python virtual environments\n**/*env/\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "Contributing.md",
          "type": "blob",
          "size": 1.4365234375,
          "content": "# Instructions for Contributing Code\r\n\r\n## Contributing bug fixes and features\r\n\r\nThe Bot Framework team is currently accepting contributions in the form of bug fixes and new \r\nfeatures. Any submission must have an issue tracking it in the issue tracker that has\r\n been approved by the Bot Framework team. Your pull request should include a link to \r\n the bug that you are fixing. If you've submitted a PR for a bug, please post a \r\n comment in the bug to avoid duplication of effort.\r\n\r\n## Legal\r\n\r\nIf your contribution is more than 15 lines of code, you will need to complete a Contributor \r\nLicense Agreement (CLA). Briefly, this agreement testifies that you are granting us permission\r\n to use the submitted change according to the terms of the project's license, and that the work\r\n  being submitted is under appropriate copyright.\r\n\r\nPlease submit a Contributor License Agreement (CLA) before submitting a pull request. \r\nYou may visit https://cla.azure.com to sign digitally. Alternatively, download the \r\nagreement ([Microsoft Contribution License Agreement.docx](https://www.codeplex.com/Download?ProjectName=typescript&DownloadId=822190) or\r\n [Microsoft Contribution License Agreement.pdf](https://www.codeplex.com/Download?ProjectName=typescript&DownloadId=921298)), sign, scan, \r\n and email it back to <cla@microsoft.com>. Be sure to include your github user name along with the agreement. Once we have received the \r\n signed CLA, we'll review the request. \r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Orchestrator",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.7099609375,
          "content": "# ![Bot Framework](./docs/media/BotFrameworkSDK.png)\n\n### [What's new with Bot Framework?](https://docs.microsoft.com/en-us/azure/bot-service/what-is-new?view=azure-bot-service-4.0)\n\nBot Framework provides the most comprehensive experience for building conversation applications.\n\nWith the [Bot Framework SDK](#bot-framework-sdk-v4), developers can build bots that converse free-form or with guided interactions including using simple text or rich cards that contain text, images, and action buttons.\n\nDevelopers can model and build sophisticated conversation using their favorite programming languages including C#, JS, and Python for developers and multi-disciplinary teams to design and build conversational experiences.\n\nCheckout theâ€¯[Bot Framework ecosystem](#bot-framework-ecosystem) section to learn more about other tooling and services related to the Bot Framework SDK.\n\n## Quicklinks\n| [C# Repo](https://github.com/Microsoft/botbuilder-dotnet)  | [JS Repo](https://github.com/Microsoft/botbuilder-js)  | [Python Repo](https://github.com/Microsoft/botbuilder-python) | [BF CLI](https://github.com/Microsoft/botframework-cli) |\n\n## Bot Framework SDK v4\nThe Bot Framework SDK v4 is an [open source SDK][1a] that enable developers to model and build sophisticated conversation using their favorite programming language.\n\n|   | C#  | JS  | Python |\n|---|:---:|:---:|:------:|\n|Stable Release |[packages][1] | [packages][2] | [packages][3] |\n|Docs | [docs][5] |[docs][5] |[docs][5]  |\n|Samples |[.NET Core][6], [WebAPI][10] |[Node.js][7] , [TypeScript][8], [es6][9]  | [Python][111] |\n\n[1a]:https://github.com/microsoft/botframework-sdk/#readme\n[1]:https://github.com/Microsoft/botbuilder-dotnet/#packages\n[2]:https://github.com/Microsoft/botbuilder-js#packages\n[3]:https://github.com/microsoft/botbuilder-python/#packages\n[5]:https://docs.microsoft.com/en-us/azure/bot-service/?view=azure-bot-service-4.0\n[6]:https://github.com/Microsoft/BotBuilder-Samples/tree/main/samples/csharp_dotnetcore\n[7]:https://github.com/Microsoft/BotBuilder-Samples/tree/main/samples/javascript_nodejs\n[8]:https://github.com/Microsoft/BotBuilder-Samples/tree/main/samples/typescript_nodejs\n[9]:https://github.com/Microsoft/BotBuilder-Samples/tree/main/samples/javascript_es6\n[10]:https://github.com/Microsoft/BotBuilder-Samples/tree/main/samples/csharp_webapi\n[111]:https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python\n\n## Channels and Adapters\nThere are two ways to connect your bot to a client experience:\n* **Azure Bot Service Channel** - Language and SDK independent support via Azure Bot Service\n* **Bot Framework SDK Adapter** -  A per language Adapter component\n\n| Client          | Azure Channel  | C# Adapter           | JS Adapter        |\n|-----------------|:--------------:|:--------------------:|:-----------------:|\n| Microsoft Teams | [Azure][55abs] |                      |                   |\n| Direct Line     | [Azure][55abs] |                      |                   |\n| Web Chat        | [Azure][55abs] |                      | [Botkit][55bk]    |\n| Skype           | [Azure][55abs] |                      |                   |\n| Email           | [Azure][55abs] |                      |                   |\n| Facebook        | [Azure][55abs] |  [Community][55sdkcsfb]    | [Botkit][55bk]    |\n| Slack           | [Azure][55abs] |  [Community][55sdkcsslack] | [Botkit][55bk]    |\n| Kik             | [Azure][55abs] |                      |                   |\n| Telegram        | [Azure][55abs] |                      |                   |\n| Line            | [Azure][55abs] |                      |                   |\n| GroupMe         | [Azure][55abs] |                      |                   |\n| Twilio (SMS)    | [Azure][55abs] | [Community][55sdkcstwilio] | [Botkit][55bk]    |\n| Alexa Skills    |                | [Community][55cs]    | [Community][55js] |\n| Google Actions  |                | [Community][55cs]    | [Community][55js] |\n| Google Hangouts |                |                      | [Botkit][55bk]    |\n| WebEx           |                | [Community][55sdkcswebex]    | [Botkit][55bk]    |\n| WhatsApp (Infobip)  |            | [Community][55cs]    |                   |\n| Zoom            |                | [Community][55cs]    |                   |\n| RingCentral     |                | [Community][55cs]    |                   |\n| Cortana         | [Azure][55abs] |                      |                   |\n| Console         |                |                      | [Community][55js] |\n\n[55abs]:https://docs.microsoft.com/en-us/azure/bot-service/bot-service-manage-channels?view=azure-bot-service-4.0\n[55cs]:https://github.com/BotBuilderCommunity/botbuilder-community-dotnet#adapters\n[55js]:https://github.com/BotBuilderCommunity/botbuilder-community-js#adapters\n[55bk]:https://github.com/howdyai/botkit#readme\n[55sdkcsfb]:https://github.com/BotBuilderCommunity/botbuilder-community-dotnet/tree/develop/libraries/Bot.Builder.Community.Adapters.Facebook\n[55sdkcsslack]:https://github.com/BotBuilderCommunity/botbuilder-community-dotnet/tree/develop/libraries/Bot.Builder.Community.Adapters.Slack\n[55sdkcstwilio]:https://github.com/BotBuilderCommunity/botbuilder-community-dotnet/tree/develop/libraries/Bot.Builder.Community.Adapters.Twilio\n[55sdkcswebex]:https://github.com/BotBuilderCommunity/botbuilder-community-dotnet/tree/develop/libraries/Bot.Builder.Community.Adapters.Webex\n[55sdkpyslack]:https://github.com/microsoft/botbuilder-python/tree/main/libraries/botbuilder-adapters-slack\n\n## Community Open Source Projects\nThe following open source communities make various components available to extend your bot application, including adapters, recognizers, dialogs and middleware.\n\n|                            |       C#       | JavaScript |    Python      |\n|----------------------------|:--------------:|:----------:|:--------------:|\n| [Bot Framework Community][56] | [C#][56dotnet] | [JavaScript][56js] | [Python][56py] |\n| [Botkit][56bk]             |                | [JavaScript][56bk] |                |\n\n[56]:https://github.com/botbuildercommunity#readme\n[56dotnet]:https://github.com/botbuildercommunity/botbuilder-community-dotnet#readme\n[56js]:https://github.com/botbuildercommunity/botbuilder-community-js#readme\n[56py]:https://github.com/botbuildercommunity/botbuilder-community-python#readme\n[56bk]:https://github.com/howdyai/botkit#readme\n\n## Questions and Help\nIf you have questions about Bot Framework SDK or using Azure Bot Service, we encourage you to reach out to the community and Azure Bot Service dev team for help.\n- For questions which fit the Stack Overflow format (\"how does this work?\"), we monitor the both [Azure Bot Service](https://stackoverflow.com/questions/tagged/azure-bot-service) and [Bot Framework](https://stackoverflow.com/questions/tagged/botframework) tags (search [both](https://stackoverflow.com/questions/tagged/azure-bot-service+or+botframework))\n- You can also tweet/follow [@msbotframework](https://twitter.com/msbotframework)\n- Join the conversation on **[Gitter](https://gitter.im/Microsoft/BotBuilder)**.\n\nSee all of the available support options **[here](https://docs.microsoft.com/en-us/bot-framework/resources-support)**.\n\n\n## Issues and feature requests\nWe track functional issues and features asks for the Bot Framework SDK, tools and Azure Bot Service in a variety of locations. If you have found an issue or have a feature request, please submit an issue to the below repositories.\n\n| Item                        | Description                                                                                        | Link                              |\n|-----------------------------|----------------------------------------------------------------------------------------------------|-----------------------------------|\n| SDK v4 .NET                 | core bot runtime for .NET, connectors, middleware, dialogs, prompts, LUIS and QnA                  | [File an issue][70csissues]       |\n| SDK v4 JavaScript           | core bot runtime for Typescript/Javascript, connectors, middleware, dialogs, prompts, LUIS and QnA | [File an issue][70jsissues]       |\n| SDK v4 Python               | core bot runtime for Python, connectors, middleware, dialogs, prompts, LUIS and QnA                | [File an issue][70pyissues]       |\n| Bot Framework CLI           | bot framework cli tools                                                                            | [File an issue][70cliissues]  |\n| Webchat                     | bot framework web chat tool                                                                        | [File an issue][70webchatissues]  |\n\n[70csissues]:https://github.com/Microsoft/botbuilder-dotnet/issues\n[70jsissues]:https://github.com/Microsoft/botbuilder-js/issues\n[70pyissues]:https://github.com/Microsoft/botbuilder-python/issues\n[70cliissues]:https://github.com/Microsoft/botframework-cli/issues\n[70webchatissues]:https://github.com/Microsoft/botframework-webchat/issues\n\n## Prior releases\n\n- Bot Builder v3 SDK has been migrated to the [Bot Framework SDK V3](https://github.com/microsoft/botbuilder-v3) repository. The V3 SDK is retired with final long-term support ending on December 31st, 2019\n\n## Bot Framework ecosystem\n\n- [Azure Bot Service](#Azure-Bot-Service)\n- [Bot Framework Emulator](#Bot-Framework-Emulator)\n- [Bot Framework Web Chat](#Bot-Framework-Web-Chat)\n- [Bot Framework CLI](#Bot-Framework-CLI)\n- [Language Understanding](#Language-Understanding)\n- [QnA Maker](#QnA-Maker)\n- [Dispatch](#Dispatch)\n- [Speech Services](#Speech-Services)\n- [Adaptive cards](#Adaptive-Cards)\n- [Analytics](#Analytics)\n- [Bot Framework Composer](#Bot-Framework-Composer)\n- [Botkit](#Botkit)\n\n### Azure Bot Service\nAzure Bot Service enables you to host intelligent, enterprise-grade bots with complete ownership and control of your data. Developers can register and connect their bots to users on Skype, Microsoft Teams, Cortana, Web Chat, and more. [[Docs][28]]\n\n* **Direct Line JS Client**: If you want to use the Direct Line channel in Azure Bot Service and are not using the WebChat client, the Direct Line JS client can be used in your custom application. [[Readme][30]]\n\n<a name=\"ABS-whats-new\"></a>\n\n* **Direct Line Speech Channel**: We are bringing together the Bot Framework and Microsoft's Speech Services to provide a channel that enables streamed speech and text bi-directionally from the client to the bot application.  To sign up, add the 'Direct Line Speech' channel to your Azure Bot Service.\n\n[27]:https://azure.microsoft.com/en-us/services/bot-service/\n[28]:https://docs.microsoft.com/en-us/azure/bot-service/bot-service-overview-introduction?view=azure-bot-service-4.0\n[29]:https://docs.microsoft.com/en-us/azure/bot-service/bot-service-manage-channels?view=azure-bot-service-4.0\n[30]:https://github.com/Microsoft/BotFramework-DirectLineJS/blob/main/README.md\n\n* **Better isolation for your Bot - Direct Line App Service Extension** : The Direct Line App Service Extension can be deployed as part of a VNET, allowing IT administrators to have more control over conversation traffic and improved latency in conversations due to reduction in the number of hops. Get started with Direct Line App Service Extension here. A VNET lets you create your own private space in Azure and is crucial to your cloud network as it offers isolation, segmentation, and other key benefits.\n\n### Bot Framework Emulator\nThe [Bot Framework Emulator][60] is a  cross-platform desktop application that allows bot developers to test and debug bots built using the Bot Framework SDK. You can use the Bot Framework Emulator to test bots running locally on your machine or to connect to bots running remotely. [[Download latest][61] | [Docs][62]]\n\n[60]:https://github.com/Microsoft/BotFramework-Emulator#readme\n[61]:https://github.com/Microsoft/BotFramework-Emulator/releases/latest\n[62]:https://docs.microsoft.com/en-us/azure/bot-service/bot-service-debug-emulator?view=azure-bot-service-4.0\n\n### Bot Framework Web Chat\nThe Bot Framework [Web Chat][23] is a highly customizable web-based client chat control for Azure Bot Service that provides the ability for users to interact with your bot directly in a web page. [[Stable release][24] | [Docs][25]  | [Samples][26]]\n\n[23]:https://github.com/Microsoft/BotFramework-WebChat#readme\n[24]:https://www.npmjs.com/package/botframework-webchat\n[25]:https://github.com/Microsoft/BotFramework-WebChat/tree/main/docs\n[26]:https://github.com/Microsoft/BotFramework-WebChat/tree/main/samples\n\n### Bot Framework CLI\nThe Bot Framework CLI Tools hosts the [open source](https://github.com/microsoft/botframework-cli) cross-platform Bot Framework CLI tool, designed to support building robust end-to-end development workflows. The Bot Framework CLI tool replaced the [legacy standalone tools](https://github.com/Microsoft/BotBuilder-Tools) used to manage bots and related services. BF CLI aggregates the collection of cross-platform tools into one cohesive and consistent interface.\n\n### Bot Framework Composer\n[Bot Framework Composer](https://github.com/microsoft/BotFramework-Composer/blob/main/README.md) is an integrated development tool for developers and multi-disciplinary teams to build bots and conversational experiences with the Microsoft Bot Framework. Within this tool, you'll find everything you need to build a sophisticated conversational experience.\n\n### Botkit\n[Botkit][100] is a developer tool and SDK for building chat bots, apps and custom integrations for major messaging platforms. Botkit bots `hear()` triggers, `ask()` questions and `say()` replies. Developers can use this syntax to build dialogs - now cross compatible with the latest version of Bot Framework SDK.\n\nIn addition, Botkit brings with it 6 platform adapters allowing Javascript bot applications to communicate directly with messaging platforms: [Slack][102], [Webex Teams][103], [Google Hangouts][104], [Facebook Messenger][105], [Twilio][106], and [Web chat][107].\n\nBotkit is part of Microsoft Bot Framework and is released under the [MIT Open Source license][101]\n\n[100]:https://github.com/howdyai/botkit#readme\n[101]:https://github.com/howdyai/botkit/blob/main/LICENSE.md\n[102]:https://github.com/howdyai/botkit/tree/main/packages/botbuilder-adapter-slack#readme\n[103]:https://github.com/howdyai/botkit/tree/main/packages/botbuilder-adapter-webex#readme\n[104]:https://github.com/howdyai/botkit/tree/main/packages/botbuilder-adapter-hangouts#readme\n[105]:https://github.com/howdyai/botkit/tree/main/packages/botbuilder-adapter-facebook#readme\n[106]:https://github.com/howdyai/botkit/tree/main/packages/botbuilder-adapter-twilio-sms#readme\n[107]:https://github.com/howdyai/botkit/tree/main/packages/botbuilder-adapter-web#readme\n\n## Related Services\n\n### Language Understanding\nA machine learning-based service to build natural language experiences. Quickly create enterprise-ready, custom models that continuously improve. Language Understanding Service(LUIS) allows your application to understand what a person wants in their own words. [[Docs][31] | [Add language understanding to your bot][32]]\n\n[18]:https://github.com/Microsoft/botbuilder-tools/tree/main/packages/LUIS#readme\n[19]:https://github.com/Microsoft/botbuilder-tools/tree/main/packages/QnAMaker#readme\n[30]:https://www.luis.ai\n[31]:https://docs.microsoft.com/en-us/azure/cognitive-services/LUIS/Home\n[32]:https://docs.microsoft.com/en-us/azure/bot-service/bot-builder-howto-v4-luis?view=azure-bot-service-4.0&branch=pr-en-us-1325&tabs=csharp\n\n### QnA Maker\n[QnA Maker][33] is a cloud-based API service that creates a conversational, question-and-answer layer over your data. With QnA Maker, you can build, train and publish a simple question and answer bot based on FAQ URLs, structured documents, product manuals or editorial content in minutes. [[Docs][34]  | [Add qnamaker to your bot][35]]\n\n[33]:https://www.qnamaker.ai/\n[34]:https://aka.ms/qnamaker-docs-home\n[35]:https://docs.microsoft.com/en-us/azure/bot-service/bot-builder-howto-qna?view=azure-bot-service-4.0&branch=pr-en-us-1325&tabs=cs\n\n### Dispatch\nDispatch tool lets you build language models that allow you to dispatch between disparate components (such as QnA, LUIS and custom code). [[Readme](https://github.com/Microsoft/botbuilder-tools/blob/main/packages/Dispatch#readme)]\n\n### Speech Services\nSpeech Services convert audio to text, perform speech translation and text-to-speech with the unified Speech services. With the speech services, you can integrate speech into your bot, create custom wake words, and author in multiple languages. [[Docs](https://azure.microsoft.com/en-us/services/cognitive-services/speech-services/)]\n\n### Adaptive Cards\n[Adaptive Cards](https://adaptivecards.io) are an open standard for developers to exchange card content in a common and consistent way,\nand are used by Bot Framework developers to create great cross-channel conversatational experiences.\n\n* **Open framework, native performance** - A simple open card format enables an ecosystem of shared tooling, seamless integration between apps, and native cross-platform performance on any device.\n* **Speech enabled from day one** - We live in an exciting era where users can talk to their devices. Adaptive Cards embrace this new world and were designed from the ground up to support these new experiences.\n\n## Contributing\n\nSee our [contributing guidelines](https://github.com/microsoft/botframework-sdk/blob/main/Contributing.md).\n\n## Reporting Security Issues\nSecurity issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) at [secure@microsoft.com](mailto:secure@microsoft.com). You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the [MSRC PGP](https://technet.microsoft.com/en-us/security/dn606155) key, can be found in the [Security TechCenter](https://technet.microsoft.com/en-us/security/default).\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6923828125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.7 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "codeql3000.yml",
          "type": "blob",
          "size": 0.0322265625,
          "content": "variables:\n  Codeql.Enabled: true"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dri",
          "type": "tree",
          "content": null
        },
        {
          "name": "icon.png",
          "type": "blob",
          "size": 8.4033203125,
          "content": null
        },
        {
          "name": "parsers",
          "type": "tree",
          "content": null
        },
        {
          "name": "schemas",
          "type": "tree",
          "content": null
        },
        {
          "name": "specs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}