{
  "metadata": {
    "timestamp": 1736563088923,
    "page": 738,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aterrien/jQuery-Knob",
      "stars": 5033,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.009765625,
          "content": "nbproject/"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Anthony Terrien\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0263671875,
          "content": "jQuery Knob\n=============\n\n- canvas based ; no png or jpg sprites.\n- touch, mouse and mousewheel, keyboard events implemented.\n- downward compatible ; overloads an input element.\n\nExample\n-------\n\n```html\n<input type=\"text\" value=\"75\" class=\"dial\">\n\n<script>\n    $(function() {\n        $(\".dial\").knob();\n    });\n</script>\n```\n\nOptions\n-------\n\nOptions are provided as attributes 'data-option':\n\n```html\n<input type=\"text\" class=\"dial\" data-min=\"-50\" data-max=\"50\">\n```\n\n... or in the \"knob()\" call :\n\n```javascript\n$(\".dial\").knob({\n    'min':-50,\n    'max':50\n});\n```\n\nThe following options are supported :\n\nBehaviors :\n* min : min value | default=0.\n* max : max value | default=100.\n* step : step size | default=1.\n* angleOffset : starting angle in degrees | default=0.\n* angleArc : arc size in degrees | default=360.\n* stopper : stop at min & max on keydown/mousewheel | default=true.\n* readOnly : disable input and events | default=false.\n* rotation : direction of progression | default=clockwise.\n\nUI :\n* cursor : display mode \"cursor\", cursor size could be changed passing a numeric value to the option, default width is used when passing boolean value \"true\" | default=gauge.\n* thickness : gauge thickness.\n* lineCap : gauge stroke endings. | default=butt, round=rounded line endings\n* width : dial width.\n* height : dial height.\n* displayInput : default=true | false=hide input.\n* displayPrevious : default=false | true=displays the previous value with transparency.\n* fgColor : foreground color.\n* inputColor : input value (number) color.\n* font : font family.\n* fontWeight : font weight.\n* bgColor : background color.\n\nHooks\n-------\n\n```html\n<script>\n    $(\".dial\").knob({\n        'release' : function (v) { /*make something*/ }\n    });\n</script>\n```\n\n* 'release' : executed on release\n\n    Parameters :\n    + value : int, current value\n\n* 'change' : executed at each change of the value\n\n    Parameters :\n    + value : int, current value\n\n* 'draw' : when drawing the canvas\n\n    Context :\n    - this.g : canvas context 2D (see Canvas documentation)\n    - this.$ : jQuery wrapped element\n    - this.o : options\n    - this.i : input\n    - ... console.log(this);\n\n* 'cancel' : triggered on [esc] keydown\n\n* 'format' : allows to format output (add unit %, ms ...)\n\nThe scope (this) of each hook function is the current Knob instance (refer to the demo code).\n\nExample\n-------\n\n```html\n<input type=\"text\" value=\"75\" class=\"dial\">\n\n<script>\n    $(\".dial\").knob({\n        'change' : function (v) { console.log(v); }\n    });\n</script>\n```\n\nDynamically configure\n-------\n\n```html\n<script>\n    $('.dial').trigger(\n        'configure',\n        {\n            \"min\":10,\n            \"max\":40,\n            \"fgColor\":\"#FF0000\",\n            \"skin\":\"tron\",\n            \"cursor\":true\n        }\n    );\n</script>\n```\n\nSet the value\n-------\n\n```html\n<script>\n    $('.dial')\n        .val(27)\n        .trigger('change');\n</script>\n```\n\nSupported browser\n-------\n\nTested on Chrome, Safari, Firefox, IE>=8.0 (IE8.0 with excanvas).\n\n![secretplan](https://raw.github.com/aterrien/jQuery-Knob/master/secretplan.jpg)\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.2578125,
          "content": "{\n  \"name\": \"jquery-knob\",\n  \"version\": \"1.2.13\",\n  \"main\": \"js/jquery.knob.js\",\n  \"description\": \"Nice, downward compatible, touchable, jQuery dial.\",\n  \"license\": \"MIT\",\n  \"ignore\": [],\n  \"dependencies\": {\n    \"jquery\": \">=1.7.0\"\n  },\n  \"devDependencies\": {}\n}\n\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "excanvas.js",
          "type": "blob",
          "size": 26.4111328125,
          "content": "// Copyright 2006 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n// Known Issues:\n//\n// * Patterns are not implemented.\n// * Radial gradient are not implemented. The VML version of these look very\n//   different from the canvas one.\n// * Clipping paths are not implemented.\n// * Coordsize. The width and height attribute have higher priority than the\n//   width and height style values which isn't correct.\n// * Painting mode isn't implemented.\n// * Canvas width/height should is using content-box by default. IE in\n//   Quirks mode will draw the canvas using border-box. Either change your\n//   doctype to HTML5\n//   (http://www.whatwg.org/specs/web-apps/current-work/#the-doctype)\n//   or use Box Sizing Behavior from WebFX\n//   (http://webfx.eae.net/dhtml/boxsizing/boxsizing.html)\n// * Non uniform scaling does not correctly scale strokes.\n// * Optimize. There is always room for speed improvements.\n\n// Only add this code if we do not already have a canvas implementation\nif (!document.createElement('canvas').getContext) {\n\n(function() {\n\n  // alias some functions to make (compiled) code shorter\n  var m = Math;\n  var mr = m.round;\n  var ms = m.sin;\n  var mc = m.cos;\n  var abs = m.abs;\n  var sqrt = m.sqrt;\n\n  // this is used for sub pixel precision\n  var Z = 10;\n  var Z2 = Z / 2;\n\n  /**\n   * This funtion is assigned to the <canvas> elements as element.getContext().\n   * @this {HTMLElement}\n   * @return {CanvasRenderingContext2D_}\n   */\n  function getContext() {\n    return this.context_ ||\n        (this.context_ = new CanvasRenderingContext2D_(this));\n  }\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Binds a function to an object. The returned function will always use the\n   * passed in {@code obj} as {@code this}.\n   *\n   * Example:\n   *\n   *   g = bind(f, obj, a, b)\n   *   g(c, d) // will do f.call(obj, a, b, c, d)\n   *\n   * @param {Function} f The function to bind the object to\n   * @param {Object} obj The object that should act as this when the function\n   *     is called\n   * @param {*} var_args Rest arguments that will be used as the initial\n   *     arguments when the function is called\n   * @return {Function} A new function that has bound this\n   */\n  function bind(f, obj, var_args) {\n    var a = slice.call(arguments, 2);\n    return function() {\n      return f.apply(obj, a.concat(slice.call(arguments)));\n    };\n  }\n\n  var G_vmlCanvasManager_ = {\n    init: function(opt_doc) {\n      if (/MSIE/.test(navigator.userAgent) && !window.opera) {\n        var doc = opt_doc || document;\n        // Create a dummy element so that IE will allow canvas elements to be\n        // recognized.\n        doc.createElement('canvas');\n        doc.attachEvent('onreadystatechange', bind(this.init_, this, doc));\n      }\n    },\n\n    init_: function(doc) {\n      // create xmlns\n      if (!doc.namespaces['g_vml_']) {\n        doc.namespaces.add('g_vml_', 'urn:schemas-microsoft-com:vml',\n                           '#default#VML');\n\n      }\n      if (!doc.namespaces['g_o_']) {\n        doc.namespaces.add('g_o_', 'urn:schemas-microsoft-com:office:office',\n                           '#default#VML');\n      }\n\n      // Setup default CSS.  Only add one style sheet per document\n      if (!doc.styleSheets['ex_canvas_']) {\n        var ss = doc.createStyleSheet();\n        ss.owningElement.id = 'ex_canvas_';\n        ss.cssText = 'canvas{display:inline-block;overflow:hidden;' +\n            // default size is 300x150 in Gecko and Opera\n            'text-align:left;width:300px;height:150px}' +\n            'g_vml_\\\\:*{behavior:url(#default#VML)}' +\n            'g_o_\\\\:*{behavior:url(#default#VML)}';\n\n      }\n\n      // find all canvas elements\n      var els = doc.getElementsByTagName('canvas');\n      for (var i = 0; i < els.length; i++) {\n        this.initElement(els[i]);\n      }\n    },\n\n    /**\n     * Public initializes a canvas element so that it can be used as canvas\n     * element from now on. This is called automatically before the page is\n     * loaded but if you are creating elements using createElement you need to\n     * make sure this is called on the element.\n     * @param {HTMLElement} el The canvas element to initialize.\n     * @return {HTMLElement} the element that was created.\n     */\n    initElement: function(el) {\n      if (!el.getContext) {\n\n        el.getContext = getContext;\n\n        // Remove fallback content. There is no way to hide text nodes so we\n        // just remove all childNodes. We could hide all elements and remove\n        // text nodes but who really cares about the fallback content.\n        el.innerHTML = '';\n\n        // do not use inline function because that will leak memory\n        el.attachEvent('onpropertychange', onPropertyChange);\n        el.attachEvent('onresize', onResize);\n\n        var attrs = el.attributes;\n        if (attrs.width && attrs.width.specified) {\n          // TODO: use runtimeStyle and coordsize\n          // el.getContext().setWidth_(attrs.width.nodeValue);\n          el.style.width = attrs.width.nodeValue + 'px';\n        } else {\n          el.width = el.clientWidth;\n        }\n        if (attrs.height && attrs.height.specified) {\n          // TODO: use runtimeStyle and coordsize\n          // el.getContext().setHeight_(attrs.height.nodeValue);\n          el.style.height = attrs.height.nodeValue + 'px';\n        } else {\n          el.height = el.clientHeight;\n        }\n        //el.getContext().setCoordsize_()\n      }\n      return el;\n    }\n  };\n\n  function onPropertyChange(e) {\n    var el = e.srcElement;\n\n    switch (e.propertyName) {\n      case 'width':\n        el.style.width = el.attributes.width.nodeValue + 'px';\n        el.getContext().clearRect();\n        break;\n      case 'height':\n        el.style.height = el.attributes.height.nodeValue + 'px';\n        el.getContext().clearRect();\n        break;\n    }\n  }\n\n  function onResize(e) {\n    var el = e.srcElement;\n    if (el.firstChild) {\n      el.firstChild.style.width =  el.clientWidth + 'px';\n      el.firstChild.style.height = el.clientHeight + 'px';\n    }\n  }\n\n  G_vmlCanvasManager_.init();\n\n  // precompute \"00\" to \"FF\"\n  var dec2hex = [];\n  for (var i = 0; i < 16; i++) {\n    for (var j = 0; j < 16; j++) {\n      dec2hex[i * 16 + j] = i.toString(16) + j.toString(16);\n    }\n  }\n\n  function createMatrixIdentity() {\n    return [\n      [1, 0, 0],\n      [0, 1, 0],\n      [0, 0, 1]\n    ];\n  }\n\n  function matrixMultiply(m1, m2) {\n    var result = createMatrixIdentity();\n\n    for (var x = 0; x < 3; x++) {\n      for (var y = 0; y < 3; y++) {\n        var sum = 0;\n\n        for (var z = 0; z < 3; z++) {\n          sum += m1[x][z] * m2[z][y];\n        }\n\n        result[x][y] = sum;\n      }\n    }\n    return result;\n  }\n\n  function copyState(o1, o2) {\n    o2.fillStyle     = o1.fillStyle;\n    o2.lineCap       = o1.lineCap;\n    o2.lineJoin      = o1.lineJoin;\n    o2.lineWidth     = o1.lineWidth;\n    o2.miterLimit    = o1.miterLimit;\n    o2.shadowBlur    = o1.shadowBlur;\n    o2.shadowColor   = o1.shadowColor;\n    o2.shadowOffsetX = o1.shadowOffsetX;\n    o2.shadowOffsetY = o1.shadowOffsetY;\n    o2.strokeStyle   = o1.strokeStyle;\n    o2.globalAlpha   = o1.globalAlpha;\n    o2.arcScaleX_    = o1.arcScaleX_;\n    o2.arcScaleY_    = o1.arcScaleY_;\n    o2.lineScale_    = o1.lineScale_;\n  }\n\n  function processStyle(styleString) {\n    var str, alpha = 1;\n\n    styleString = String(styleString);\n    if (styleString.substring(0, 3) == 'rgb') {\n      var start = styleString.indexOf('(', 3);\n      var end = styleString.indexOf(')', start + 1);\n      var guts = styleString.substring(start + 1, end).split(',');\n\n      str = '#';\n      for (var i = 0; i < 3; i++) {\n        str += dec2hex[Number(guts[i])];\n      }\n\n      if (guts.length == 4 && styleString.substr(3, 1) == 'a') {\n        alpha = guts[3];\n      }\n    } else {\n      str = styleString;\n    }\n\n    return {color: str, alpha: alpha};\n  }\n\n  function processLineCap(lineCap) {\n    switch (lineCap) {\n      case 'butt':\n        return 'flat';\n      case 'round':\n        return 'round';\n      case 'square':\n      default:\n        return 'square';\n    }\n  }\n\n  /**\n   * This class implements CanvasRenderingContext2D interface as described by\n   * the WHATWG.\n   * @param {HTMLElement} surfaceElement The element that the 2D context should\n   * be associated with\n   */\n  function CanvasRenderingContext2D_(surfaceElement) {\n    this.m_ = createMatrixIdentity();\n\n    this.mStack_ = [];\n    this.aStack_ = [];\n    this.currentPath_ = [];\n\n    // Canvas context properties\n    this.strokeStyle = '#000';\n    this.fillStyle = '#000';\n\n    this.lineWidth = 1;\n    this.lineJoin = 'miter';\n    this.lineCap = 'butt';\n    this.miterLimit = Z * 1;\n    this.globalAlpha = 1;\n    this.canvas = surfaceElement;\n\n    var el = surfaceElement.ownerDocument.createElement('div');\n    el.style.width =  surfaceElement.clientWidth + 'px';\n    el.style.height = surfaceElement.clientHeight + 'px';\n    el.style.overflow = 'hidden';\n    el.style.position = 'absolute';\n    surfaceElement.appendChild(el);\n\n    this.element_ = el;\n    this.arcScaleX_ = 1;\n    this.arcScaleY_ = 1;\n    this.lineScale_ = 1;\n  }\n\n  var contextPrototype = CanvasRenderingContext2D_.prototype;\n  contextPrototype.clearRect = function() {\n    this.element_.innerHTML = '';\n  };\n\n  contextPrototype.beginPath = function() {\n    // TODO: Branch current matrix so that save/restore has no effect\n    //       as per safari docs.\n    this.currentPath_ = [];\n  };\n\n  contextPrototype.moveTo = function(aX, aY) {\n    var p = this.getCoords_(aX, aY);\n    this.currentPath_.push({type: 'moveTo', x: p.x, y: p.y});\n    this.currentX_ = p.x;\n    this.currentY_ = p.y;\n  };\n\n  contextPrototype.lineTo = function(aX, aY) {\n    var p = this.getCoords_(aX, aY);\n    this.currentPath_.push({type: 'lineTo', x: p.x, y: p.y});\n\n    this.currentX_ = p.x;\n    this.currentY_ = p.y;\n  };\n\n  contextPrototype.bezierCurveTo = function(aCP1x, aCP1y,\n                                            aCP2x, aCP2y,\n                                            aX, aY) {\n    var p = this.getCoords_(aX, aY);\n    var cp1 = this.getCoords_(aCP1x, aCP1y);\n    var cp2 = this.getCoords_(aCP2x, aCP2y);\n    bezierCurveTo(this, cp1, cp2, p);\n  };\n\n  // Helper function that takes the already fixed cordinates.\n  function bezierCurveTo(self, cp1, cp2, p) {\n    self.currentPath_.push({\n      type: 'bezierCurveTo',\n      cp1x: cp1.x,\n      cp1y: cp1.y,\n      cp2x: cp2.x,\n      cp2y: cp2.y,\n      x: p.x,\n      y: p.y\n    });\n    self.currentX_ = p.x;\n    self.currentY_ = p.y;\n  }\n\n  contextPrototype.quadraticCurveTo = function(aCPx, aCPy, aX, aY) {\n    // the following is lifted almost directly from\n    // http://developer.mozilla.org/en/docs/Canvas_tutorial:Drawing_shapes\n\n    var cp = this.getCoords_(aCPx, aCPy);\n    var p = this.getCoords_(aX, aY);\n\n    var cp1 = {\n      x: this.currentX_ + 2.0 / 3.0 * (cp.x - this.currentX_),\n      y: this.currentY_ + 2.0 / 3.0 * (cp.y - this.currentY_)\n    };\n    var cp2 = {\n      x: cp1.x + (p.x - this.currentX_) / 3.0,\n      y: cp1.y + (p.y - this.currentY_) / 3.0\n    };\n\n    bezierCurveTo(this, cp1, cp2, p);\n  };\n\n  contextPrototype.arc = function(aX, aY, aRadius,\n                                  aStartAngle, aEndAngle, aClockwise) {\n    aRadius *= Z;\n    var arcType = aClockwise ? 'at' : 'wa';\n\n    var xStart = aX + mc(aStartAngle) * aRadius - Z2;\n    var yStart = aY + ms(aStartAngle) * aRadius - Z2;\n\n    var xEnd = aX + mc(aEndAngle) * aRadius - Z2;\n    var yEnd = aY + ms(aEndAngle) * aRadius - Z2;\n\n    // IE won't render arches drawn counter clockwise if xStart == xEnd.\n    if (xStart == xEnd && !aClockwise) {\n      xStart += 0.125; // Offset xStart by 1/80 of a pixel. Use something\n                       // that can be represented in binary\n    }\n\n    var p = this.getCoords_(aX, aY);\n    var pStart = this.getCoords_(xStart, yStart);\n    var pEnd = this.getCoords_(xEnd, yEnd);\n\n    this.currentPath_.push({type: arcType,\n                           x: p.x,\n                           y: p.y,\n                           radius: aRadius,\n                           xStart: pStart.x,\n                           yStart: pStart.y,\n                           xEnd: pEnd.x,\n                           yEnd: pEnd.y});\n\n  };\n\n  contextPrototype.rect = function(aX, aY, aWidth, aHeight) {\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n  };\n\n  contextPrototype.strokeRect = function(aX, aY, aWidth, aHeight) {\n    var oldPath = this.currentPath_;\n    this.beginPath();\n\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n    this.stroke();\n\n    this.currentPath_ = oldPath;\n  };\n\n  contextPrototype.fillRect = function(aX, aY, aWidth, aHeight) {\n    var oldPath = this.currentPath_;\n    this.beginPath();\n\n    this.moveTo(aX, aY);\n    this.lineTo(aX + aWidth, aY);\n    this.lineTo(aX + aWidth, aY + aHeight);\n    this.lineTo(aX, aY + aHeight);\n    this.closePath();\n    this.fill();\n\n    this.currentPath_ = oldPath;\n  };\n\n  contextPrototype.createLinearGradient = function(aX0, aY0, aX1, aY1) {\n    var gradient = new CanvasGradient_('gradient');\n    gradient.x0_ = aX0;\n    gradient.y0_ = aY0;\n    gradient.x1_ = aX1;\n    gradient.y1_ = aY1;\n    return gradient;\n  };\n\n  contextPrototype.createRadialGradient = function(aX0, aY0, aR0,\n                                                   aX1, aY1, aR1) {\n    var gradient = new CanvasGradient_('gradientradial');\n    gradient.x0_ = aX0;\n    gradient.y0_ = aY0;\n    gradient.r0_ = aR0;\n    gradient.x1_ = aX1;\n    gradient.y1_ = aY1;\n    gradient.r1_ = aR1;\n    return gradient;\n  };\n\n  contextPrototype.drawImage = function(image, var_args) {\n    var dx, dy, dw, dh, sx, sy, sw, sh;\n\n    // to find the original width we overide the width and height\n    var oldRuntimeWidth = image.runtimeStyle.width;\n    var oldRuntimeHeight = image.runtimeStyle.height;\n    image.runtimeStyle.width = 'auto';\n    image.runtimeStyle.height = 'auto';\n\n    // get the original size\n    var w = image.width;\n    var h = image.height;\n\n    // and remove overides\n    image.runtimeStyle.width = oldRuntimeWidth;\n    image.runtimeStyle.height = oldRuntimeHeight;\n\n    if (arguments.length == 3) {\n      dx = arguments[1];\n      dy = arguments[2];\n      sx = sy = 0;\n      sw = dw = w;\n      sh = dh = h;\n    } else if (arguments.length == 5) {\n      dx = arguments[1];\n      dy = arguments[2];\n      dw = arguments[3];\n      dh = arguments[4];\n      sx = sy = 0;\n      sw = w;\n      sh = h;\n    } else if (arguments.length == 9) {\n      sx = arguments[1];\n      sy = arguments[2];\n      sw = arguments[3];\n      sh = arguments[4];\n      dx = arguments[5];\n      dy = arguments[6];\n      dw = arguments[7];\n      dh = arguments[8];\n    } else {\n      throw Error('Invalid number of arguments');\n    }\n\n    var d = this.getCoords_(dx, dy);\n\n    var w2 = sw / 2;\n    var h2 = sh / 2;\n\n    var vmlStr = [];\n\n    var W = 10;\n    var H = 10;\n\n    // For some reason that I've now forgotten, using divs didn't work\n    vmlStr.push(' <g_vml_:group',\n                ' coordsize=\"', Z * W, ',', Z * H, '\"',\n                ' coordorigin=\"0,0\"' ,\n                ' style=\"width:', W, 'px;height:', H, 'px;position:absolute;');\n\n    // If filters are necessary (rotation exists), create them\n    // filters are bog-slow, so only create them if abbsolutely necessary\n    // The following check doesn't account for skews (which don't exist\n    // in the canvas spec (yet) anyway.\n\n    if (this.m_[0][0] != 1 || this.m_[0][1]) {\n      var filter = [];\n\n      // Note the 12/21 reversal\n      filter.push('M11=', this.m_[0][0], ',',\n                  'M12=', this.m_[1][0], ',',\n                  'M21=', this.m_[0][1], ',',\n                  'M22=', this.m_[1][1], ',',\n                  'Dx=', mr(d.x / Z), ',',\n                  'Dy=', mr(d.y / Z), '');\n\n      // Bounding box calculation (need to minimize displayed area so that\n      // filters don't waste time on unused pixels.\n      var max = d;\n      var c2 = this.getCoords_(dx + dw, dy);\n      var c3 = this.getCoords_(dx, dy + dh);\n      var c4 = this.getCoords_(dx + dw, dy + dh);\n\n      max.x = m.max(max.x, c2.x, c3.x, c4.x);\n      max.y = m.max(max.y, c2.y, c3.y, c4.y);\n\n      vmlStr.push('padding:0 ', mr(max.x / Z), 'px ', mr(max.y / Z),\n                  'px 0;filter:progid:DXImageTransform.Microsoft.Matrix(',\n                  filter.join(''), \", sizingmethod='clip');\")\n    } else {\n      vmlStr.push('top:', mr(d.y / Z), 'px;left:', mr(d.x / Z), 'px;');\n    }\n\n    vmlStr.push(' \">' ,\n                '<g_vml_:image src=\"', image.src, '\"',\n                ' style=\"width:', Z * dw, 'px;',\n                ' height:', Z * dh, 'px;\"',\n                ' cropleft=\"', sx / w, '\"',\n                ' croptop=\"', sy / h, '\"',\n                ' cropright=\"', (w - sx - sw) / w, '\"',\n                ' cropbottom=\"', (h - sy - sh) / h, '\"',\n                ' />',\n                '</g_vml_:group>');\n\n    this.element_.insertAdjacentHTML('BeforeEnd',\n                                    vmlStr.join(''));\n  };\n\n  contextPrototype.stroke = function(aFill) {\n    var lineStr = [];\n    var lineOpen = false;\n    var a = processStyle(aFill ? this.fillStyle : this.strokeStyle);\n    var color = a.color;\n    var opacity = a.alpha * this.globalAlpha;\n\n    var W = 10;\n    var H = 10;\n\n    lineStr.push('<g_vml_:shape',\n                 ' filled=\"', !!aFill, '\"',\n                 ' style=\"position:absolute;width:', W, 'px;height:', H, 'px;\"',\n                 ' coordorigin=\"0 0\" coordsize=\"', Z * W, ' ', Z * H, '\"',\n                 ' stroked=\"', !aFill, '\"',\n                 ' path=\"');\n\n    var newSeq = false;\n    var min = {x: null, y: null};\n    var max = {x: null, y: null};\n\n    for (var i = 0; i < this.currentPath_.length; i++) {\n      var p = this.currentPath_[i];\n      var c;\n\n      switch (p.type) {\n        case 'moveTo':\n          c = p;\n          lineStr.push(' m ', mr(p.x), ',', mr(p.y));\n          break;\n        case 'lineTo':\n          lineStr.push(' l ', mr(p.x), ',', mr(p.y));\n          break;\n        case 'close':\n          lineStr.push(' x ');\n          p = null;\n          break;\n        case 'bezierCurveTo':\n          lineStr.push(' c ',\n                       mr(p.cp1x), ',', mr(p.cp1y), ',',\n                       mr(p.cp2x), ',', mr(p.cp2y), ',',\n                       mr(p.x), ',', mr(p.y));\n          break;\n        case 'at':\n        case 'wa':\n          lineStr.push(' ', p.type, ' ',\n                       mr(p.x - this.arcScaleX_ * p.radius), ',',\n                       mr(p.y - this.arcScaleY_ * p.radius), ' ',\n                       mr(p.x + this.arcScaleX_ * p.radius), ',',\n                       mr(p.y + this.arcScaleY_ * p.radius), ' ',\n                       mr(p.xStart), ',', mr(p.yStart), ' ',\n                       mr(p.xEnd), ',', mr(p.yEnd));\n          break;\n      }\n\n\n      // TODO: Following is broken for curves due to\n      //       move to proper paths.\n\n      // Figure out dimensions so we can do gradient fills\n      // properly\n      if (p) {\n        if (min.x == null || p.x < min.x) {\n          min.x = p.x;\n        }\n        if (max.x == null || p.x > max.x) {\n          max.x = p.x;\n        }\n        if (min.y == null || p.y < min.y) {\n          min.y = p.y;\n        }\n        if (max.y == null || p.y > max.y) {\n          max.y = p.y;\n        }\n      }\n    }\n    lineStr.push(' \">');\n\n    if (!aFill) {\n      var lineWidth = this.lineScale_ * this.lineWidth;\n\n      // VML cannot correctly render a line if the width is less than 1px.\n      // In that case, we dilute the color to make the line look thinner.\n      if (lineWidth < 1) {\n        opacity *= lineWidth;\n      }\n\n      lineStr.push(\n        '<g_vml_:stroke',\n        ' opacity=\"', opacity, '\"',\n        ' joinstyle=\"', this.lineJoin, '\"',\n        ' miterlimit=\"', this.miterLimit, '\"',\n        ' endcap=\"', processLineCap(this.lineCap), '\"',\n        ' weight=\"', lineWidth, 'px\"',\n        ' color=\"', color, '\" />'\n      );\n    } else if (typeof this.fillStyle == 'object') {\n      var fillStyle = this.fillStyle;\n      var angle = 0;\n      var focus = {x: 0, y: 0};\n\n      // additional offset\n      var shift = 0;\n      // scale factor for offset\n      var expansion = 1;\n\n      if (fillStyle.type_ == 'gradient') {\n        var x0 = fillStyle.x0_ / this.arcScaleX_;\n        var y0 = fillStyle.y0_ / this.arcScaleY_;\n        var x1 = fillStyle.x1_ / this.arcScaleX_;\n        var y1 = fillStyle.y1_ / this.arcScaleY_;\n        var p0 = this.getCoords_(x0, y0);\n        var p1 = this.getCoords_(x1, y1);\n        var dx = p1.x - p0.x;\n        var dy = p1.y - p0.y;\n        angle = Math.atan2(dx, dy) * 180 / Math.PI;\n\n        // The angle should be a non-negative number.\n        if (angle < 0) {\n          angle += 360;\n        }\n\n        // Very small angles produce an unexpected result because they are\n        // converted to a scientific notation string.\n        if (angle < 1e-6) {\n          angle = 0;\n        }\n      } else {\n        var p0 = this.getCoords_(fillStyle.x0_, fillStyle.y0_);\n        var width  = max.x - min.x;\n        var height = max.y - min.y;\n        focus = {\n          x: (p0.x - min.x) / width,\n          y: (p0.y - min.y) / height\n        };\n\n        width  /= this.arcScaleX_ * Z;\n        height /= this.arcScaleY_ * Z;\n        var dimension = m.max(width, height);\n        shift = 2 * fillStyle.r0_ / dimension;\n        expansion = 2 * fillStyle.r1_ / dimension - shift;\n      }\n\n      // We need to sort the color stops in ascending order by offset,\n      // otherwise IE won't interpret it correctly.\n      var stops = fillStyle.colors_;\n      stops.sort(function(cs1, cs2) {\n        return cs1.offset - cs2.offset;\n      });\n\n      var length = stops.length;\n      var color1 = stops[0].color;\n      var color2 = stops[length - 1].color;\n      var opacity1 = stops[0].alpha * this.globalAlpha;\n      var opacity2 = stops[length - 1].alpha * this.globalAlpha;\n\n      var colors = [];\n      for (var i = 0; i < length; i++) {\n        var stop = stops[i];\n        colors.push(stop.offset * expansion + shift + ' ' + stop.color);\n      }\n\n      // When colors attribute is used, the meanings of opacity and o:opacity2\n      // are reversed.\n      lineStr.push('<g_vml_:fill type=\"', fillStyle.type_, '\"',\n                   ' method=\"none\" focus=\"100%\"',\n                   ' color=\"', color1, '\"',\n                   ' color2=\"', color2, '\"',\n                   ' colors=\"', colors.join(','), '\"',\n                   ' opacity=\"', opacity2, '\"',\n                   ' g_o_:opacity2=\"', opacity1, '\"',\n                   ' angle=\"', angle, '\"',\n                   ' focusposition=\"', focus.x, ',', focus.y, '\" />');\n    } else {\n      lineStr.push('<g_vml_:fill color=\"', color, '\" opacity=\"', opacity,\n                   '\" />');\n    }\n\n    lineStr.push('</g_vml_:shape>');\n\n    this.element_.insertAdjacentHTML('beforeEnd', lineStr.join(''));\n  };\n\n  contextPrototype.fill = function() {\n    this.stroke(true);\n  }\n\n  contextPrototype.closePath = function() {\n    this.currentPath_.push({type: 'close'});\n  };\n\n  /**\n   * @private\n   */\n  contextPrototype.getCoords_ = function(aX, aY) {\n    var m = this.m_;\n    return {\n      x: Z * (aX * m[0][0] + aY * m[1][0] + m[2][0]) - Z2,\n      y: Z * (aX * m[0][1] + aY * m[1][1] + m[2][1]) - Z2\n    }\n  };\n\n  contextPrototype.save = function() {\n    var o = {};\n    copyState(this, o);\n    this.aStack_.push(o);\n    this.mStack_.push(this.m_);\n    this.m_ = matrixMultiply(createMatrixIdentity(), this.m_);\n  };\n\n  contextPrototype.restore = function() {\n    copyState(this.aStack_.pop(), this);\n    this.m_ = this.mStack_.pop();\n  };\n\n  function matrixIsFinite(m) {\n    for (var j = 0; j < 3; j++) {\n      for (var k = 0; k < 2; k++) {\n        if (!isFinite(m[j][k]) || isNaN(m[j][k])) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  function setM(ctx, m, updateLineScale) {\n    if (!matrixIsFinite(m)) {\n      return;\n    }\n    ctx.m_ = m;\n\n    if (updateLineScale) {\n      // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n      var det = m[0][0] * m[1][1] - m[0][1] * m[1][0];\n      ctx.lineScale_ = sqrt(abs(det));\n    }\n  }\n\n  contextPrototype.translate = function(aX, aY) {\n    var m1 = [\n      [1,  0,  0],\n      [0,  1,  0],\n      [aX, aY, 1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), false);\n  };\n\n  contextPrototype.rotate = function(aRot) {\n    var c = mc(aRot);\n    var s = ms(aRot);\n\n    var m1 = [\n      [c,  s, 0],\n      [-s, c, 0],\n      [0,  0, 1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), false);\n  };\n\n  contextPrototype.scale = function(aX, aY) {\n    this.arcScaleX_ *= aX;\n    this.arcScaleY_ *= aY;\n    var m1 = [\n      [aX, 0,  0],\n      [0,  aY, 0],\n      [0,  0,  1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), true);\n  };\n\n  contextPrototype.transform = function(m11, m12, m21, m22, dx, dy) {\n    var m1 = [\n      [m11, m12, 0],\n      [m21, m22, 0],\n      [dx,  dy,  1]\n    ];\n\n    setM(this, matrixMultiply(m1, this.m_), true);\n  };\n\n  contextPrototype.setTransform = function(m11, m12, m21, m22, dx, dy) {\n    var m = [\n      [m11, m12, 0],\n      [m21, m22, 0],\n      [dx,  dy,  1]\n    ];\n\n    setM(this, m, true);\n  };\n\n  /******** STUBS ********/\n  contextPrototype.clip = function() {\n    // TODO: Implement\n  };\n\n  contextPrototype.arcTo = function() {\n    // TODO: Implement\n  };\n\n  contextPrototype.createPattern = function() {\n    return new CanvasPattern_;\n  };\n\n  // Gradient / Pattern Stubs\n  function CanvasGradient_(aType) {\n    this.type_ = aType;\n    this.x0_ = 0;\n    this.y0_ = 0;\n    this.r0_ = 0;\n    this.x1_ = 0;\n    this.y1_ = 0;\n    this.r1_ = 0;\n    this.colors_ = [];\n  }\n\n  CanvasGradient_.prototype.addColorStop = function(aOffset, aColor) {\n    aColor = processStyle(aColor);\n    this.colors_.push({offset: aOffset,\n                       color: aColor.color,\n                       alpha: aColor.alpha});\n  };\n\n  function CanvasPattern_() {}\n\n  // set up externs\n  G_vmlCanvasManager = G_vmlCanvasManager_;\n  CanvasRenderingContext2D = CanvasRenderingContext2D_;\n  CanvasGradient = CanvasGradient_;\n  CanvasPattern = CanvasPattern_;\n\n})();\n\n} // if\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 12.708984375,
          "content": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>jQuery Knob demo</title>\n        <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\"></script>\n        <!--[if IE]><script type=\"text/javascript\" src=\"excanvas.js\"></script><![endif]-->\n        <script src=\"dist/jquery.knob.min.js\"></script>\n        <script>\n            $(function($) {\n\n                $(\".knob\").knob({\n                    change : function (value) {\n                        //console.log(\"change : \" + value);\n                    },\n                    release : function (value) {\n                        //console.log(this.$.attr('value'));\n                        console.log(\"release : \" + value);\n                    },\n                    cancel : function () {\n                        console.log(\"cancel : \", this);\n                    },\n                    /*format : function (value) {\n                        return value + '%';\n                    },*/\n                    draw : function () {\n\n                        // \"tron\" case\n                        if(this.$.data('skin') == 'tron') {\n\n                            this.cursorExt = 0.3;\n\n                            var a = this.arc(this.cv)  // Arc\n                                , pa                   // Previous arc\n                                , r = 1;\n\n                            this.g.lineWidth = this.lineWidth;\n\n                            if (this.o.displayPrevious) {\n                                pa = this.arc(this.v);\n                                this.g.beginPath();\n                                this.g.strokeStyle = this.pColor;\n                                this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, pa.s, pa.e, pa.d);\n                                this.g.stroke();\n                            }\n\n                            this.g.beginPath();\n                            this.g.strokeStyle = r ? this.o.fgColor : this.fgColor ;\n                            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, a.s, a.e, a.d);\n                            this.g.stroke();\n\n                            this.g.lineWidth = 2;\n                            this.g.beginPath();\n                            this.g.strokeStyle = this.o.fgColor;\n                            this.g.arc( this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);\n                            this.g.stroke();\n\n                            return false;\n                        }\n                    }\n                });\n\n                // Example of infinite knob, iPod click wheel\n                var v, up=0,down=0,i=0\n                    ,$idir = $(\"div.idir\")\n                    ,$ival = $(\"div.ival\")\n                    ,incr = function() { i++; $idir.show().html(\"+\").fadeOut(); $ival.html(i); }\n                    ,decr = function() { i--; $idir.show().html(\"-\").fadeOut(); $ival.html(i); };\n                $(\"input.infinite\").knob(\n                                    {\n                                    min : 0\n                                    , max : 20\n                                    , stopper : false\n                                    , change : function () {\n                                                    if(v > this.cv){\n                                                        if(up){\n                                                            decr();\n                                                            up=0;\n                                                        }else{up=1;down=0;}\n                                                    } else {\n                                                        if(v < this.cv){\n                                                            if(down){\n                                                                incr();\n                                                                down=0;\n                                                            }else{down=1;up=0;}\n                                                        }\n                                                    }\n                                                    v = this.cv;\n                                                }\n                                    });\n            });\n        </script>\n        <style>\n            body{\n              padding: 0;\n              margin: 0px 50px;\n              font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n              font-weight: 300;\n              text-rendering: optimizelegibility;\n            }\n            p{font-size: 30px; line-height: 30px}\n            div.demo{text-align: center; width: 280px; float: left}\n            div.demo > p{font-size: 20px}\n        </style>\n    </head>\n    <body>\n        <div style=\"width:100%;font-size:40px;letter-spacing:-8px;line-height:40px;\">\n            <h1>jQuery Knob</h1>\n        </div>\n        <div>\n            <p>Nice, downward compatible, touchable, jQuery dial. <a href=\"http://flattr.com/thing/674900/jQuery-Knob\" target=\"_blank\"><img src=\"http://api.flattr.com/button/flattr-badge-large.png\" alt=\"Flattr this\" title=\"Flattr this\" border=\"0\" /></a></p>\n            <p style=\"font-size: 20px\">* implemented interactions : mouse click and wheel mouse, keyboard (on focus) and fingers (touch events)</p>\n        </div>\n        <div class=\"demo\">\n            <p>&#215; Disable display input</p>\n            <pre>\ndata-width=\"100\"\ndata-displayInput=false\n            </pre>\n            <input class=\"knob\" data-width=\"100\" data-displayInput=false value=\"35\">\n        </div>\n        <div class=\"demo\">\n            <p>&#215; 'cursor' mode</p>\n            <pre>\ndata-width=\"150\"\ndata-cursor=true\ndata-thickness=.3\ndata-fgColor=\"#222222\"\n            </pre>\n            <input class=\"knob\" data-width=\"150\" data-cursor=true data-fgColor=\"#222222\" data-thickness=.3 value=\"29\">\n        </div>\n        <div class=\"demo\" >\n            <p>&#215; Display previous value</p>\n            <pre>\ndata-displayPrevious=true\ndata-min=\"-100\"\n            </pre>\n            <input class=\"knob\" data-width=\"200\" data-min=\"-100\" data-displayPrevious=true value=\"44\">\n        </div>\n        <div style=\"clear:both\"></div>\n        <div class=\"demo\">\n            <p>&#215; Angle offset</p>\n            <pre>\ndata-angleOffset=90\ndata-linecap=round\n            </pre>\n            <input class=\"knob\" data-angleOffset=90 data-linecap=round value=\"35\">\n        </div>\n        <div class=\"demo\">\n            <p>&#215; Angle offset and arc</p>\n            <pre>\ndata-fgColor=\"#66CC66\"\ndata-angleOffset=-125\ndata-angleArc=250\ndata-rotation=anticlockwise\n            </pre>\n            <input class=\"knob\" data-angleOffset=-125 data-angleArc=250 data-fgColor=\"#66EE66\" data-rotation=\"anticlockwise\" value=\"35\">\n        </div>\n        <div class=\"demo\" >\n            <p>&#215; 4-digit, step 0.1</p>\n            <pre>\ndata-step=\".1\"\ndata-min=\"-10000\"\ndata-max=\"10000\"\nvalue=\"0\"\ndata-displayPrevious=true\n            </pre>\n            <input class=\"knob\" data-min=\"-10000\" data-displayPrevious=true data-max=\"10000\" data-step=\".1\" value=\"0\">\n        </div>\n        <div style=\"clear:both\"></div>\n        <div style=\"text-align: center\">\n            <p style=\"font-size: 20px\">&#215; Overloaded 'draw' method</p>\n        </div>\n        <div style=\"background-color: #222; height: 340px\">\n            <div class=\"demo\" style=\"background-color:#222; color:#FFF;\">\n                <pre>\n    data-width=\"75\"\n    data-fgColor=\"#ffec03\"\n    data-skin=\"tron\"\n    data-thickness=\".2\"\n    data-displayPrevious=true\n                </pre>\n                <input class=\"knob\" data-width=\"75\" data-displayPrevious=true data-fgColor=\"#ffec03\" data-skin=\"tron\" data-cursor=true value=\"75\" data-thickness=\".2\">\n            </div>\n            <div class=\"demo\" style=\"background-color:#222; color:#FFF;\">\n                <pre>\n    data-width=\"150\"\n    data-fgColor=\"#ffec03\"\n    data-skin=\"tron\"\n    data-thickness=\".2\"\n    data-displayPrevious=true\n                </pre>\n                <input class=\"knob\" data-width=\"150\" data-displayPrevious=true data-fgColor=\"#ffec03\" data-skin=\"tron\" data-thickness=\".2\" value=\"75\">\n            </div>\n            <div class=\"demo\" style=\"background-color:#222; color:#FFF;\">\n                <pre>\n    data-width=\"150\"\n    data-fgColor=\"#C0ffff\"\n    data-skin=\"tron\"\n    data-thickness=\".1\"\n    data-angleOffset=\"180\"\n                </pre>\n                <input class=\"knob\" data-width=\"150\" data-angleOffset=\"180\" data-fgColor=\"#C0ffff\" data-skin=\"tron\" data-thickness=\".1\" value=\"35\">\n            </div>\n        </div>\n        <div style=\"clear:both\"></div>\n        <div class=\"demo\" style=\"width:100%\">\n            <p>&#215; Responsive</p>\n            <pre>\ndata-width=\"80%\"\n            </pre>\n            <div style=\"width: 30%; border: 3px dashed; margin-bottom: 20px\">\n                <i>\n                    Current div width is 30% of window width.<br>\n                    Knob width is 80% of current div.<br>\n                    Knob width is 80% of 30% of window width.<br>\n                    Test resizing window.\n                </i>\n                <br>\n                <br>\n                <input class=\"knob\" data-width=\"80%\" value=\"35\">\n            </div>\n        </div>\n        <div style=\"clear:both\"></div>\n        <script>\n        function clock() {\n            var $s = $(\".second\"),\n                $m = $(\".minute\"),\n                $h = $(\".hour\");\n                d = new Date(),\n                s = d.getSeconds(),\n                m = d.getMinutes(),\n                h = d.getHours();\n            $s.val(s).trigger(\"change\");\n            $m.val(m).trigger(\"change\");\n            $h.val(h).trigger(\"change\");\n            setTimeout(\"clock()\", 1000);\n        }\n        clock();\n        </script>\n        <div class=\"demo\" style=\"color:#EEE;background:#222;height:420px;width:100%\">\n            <p>&#215; Superpose (clock)</p>\n            <div style=\"position:relative;width:350px;margin:auto\">\n                <div style=\"position:absolute;left:10px;top:10px\">\n                    <input class=\"knob hour\" data-min=\"0\" data-max=\"24\" data-bgColor=\"#333\" data-fgColor=\"#ffec03\" data-displayInput=false data-width=\"300\" data-height=\"300\" data-thickness=\".3\">\n                </div>\n                <div style=\"position:absolute;left:60px;top:60px\">\n                    <input class=\"knob minute\" data-min=\"0\" data-max=\"60\" data-bgColor=\"#333\" data-displayInput=false data-width=\"200\" data-height=\"200\" data-thickness=\".45\">\n                </div>\n                <div style=\"position:absolute;left:110px;top:110px\">\n                    <input class=\"knob second\" data-min=\"0\" data-max=\"60\" data-bgColor=\"#333\" data-fgColor=\"rgb(127, 255, 0)\" data-displayInput=false data-width=\"100\" data-height=\"100\" data-thickness=\".3\">\n                </div>\n            </div>\n        </div>\n        <div style=\"clear:both\"></div>\n        <div class=\"demo\">\n            <p>&#215; Readonly</p>\n            <pre>\nreadonly (or data-readOnly=true)\ndata-thickness=\".4\"\ndata-fgColor=\"chartreuse\"\n            </pre>\n            <input class=\"knob\" data-fgColor=\"chartreuse\" data-thickness=\".4\" readonly value=\"22\">\n        </div>\n        <div class=\"demo\">\n            <p>&#215; Dynamic</p>\n            <pre>\ndata-width=\"200\"\n            </pre>\n            <input type=\"button\" onclick=\"$('.knob-dyn').knob();\" value=\"knobify!\">\n            <input type=\"text\" class=\"knob-dyn\" data-width=\"200\" data-cursor=true value=\"56\">\n            <pre>\ndata-width=\"50\"\ndata-cursor=true\n            </pre>\n            <input type=\"button\" onclick=\"$('.knob-dyn2').knob();\" value=\"knobify!\">\n            <input type=\"text\" class=\"knob-dyn2\" data-width=\"50\" data-thickness=\".4\" value=\"56\">\n        </div>\n        <div class=\"demo\" style=\"height:440px;width:300px\">\n            <p>&#215; Infinite || iPod click wheel</p>\n            <div style=\"float:left;width:180px;height:320px;padding:20px;background-color:#EEEEEE;text-align:center;\">\n                <pre>\ndata-width=\"150\"\ndata-cursor=true\ndata-thickness=\".5\"\ndata-fgColor=\"#AAAAAA\"\ndata-bgColor=\"#FFFFFF\"\ndata-displayInput=\"false\"\n+ some code\n                </pre>\n                <input class=\"infinite\" value=\"0\" data-width=\"150\" data-thickness=\".5\" data-fgColor=\"#AAAAAA\" data-bgColor=\"#FFFFFF\" data-displayInput=\"false\" data-cursor=true>\n            </div>\n            <div style=\"float:left;margin-top:200px;\">\n                <div class=\"ival\" style=\"width:80px;text-align:center;font-size:50px;color:#AAA\">0</div>\n                <div class=\"idir\" style=\"width:80px;text-align:center;font-size:50px;\"></div>\n            </div>\n        </div>\n        <div style=\"clear:both\"></div>\n        <div style=\"margin-top:30px;text-align:center\">\n            <img src=\"https://raw.github.com/aterrien/jQuery-Knob/master/secretplan.jpg\">\n            <p style=\"font-size:20px;\">jQuery Knob is &copy; 2012 Anthony Terrien - MIT License</p>\n        </div>\n    </body>\n</html>\n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "knob.jquery.json",
          "type": "blob",
          "size": 0.9609375,
          "content": "{\n    \"name\": \"knob\",\n    \"title\": \"jQuery Knob\",\n    \"description\": \"Nice, downward compatible, touchable, jQuery dial.\",\n    \"keywords\": [\n        \"dial\",\n        \"button\",\n        \"knob\",\n        \"ui\",\n        \"input\"\n    ],\n    \"version\": \"1.2.13\",\n    \"author\": {\n        \"name\": \"Anthony Terrien\",\n        \"url\": \"https://github.com/aterrien\"\n    },\n    \"maintainers\": [\n        {\n            \"name\": \"Anthony Terrien\",\n            \"email\": \"kontrol@anthonyterrien.com\",\n            \"url\": \"http://anthonyterrien.com/knob\"\n        }\n    ],\n    \"licenses\": [\n        {\n            \"type\": \"MIT\",\n            \"url\": \"http://opensource.org/licenses/mit-license.php\"\n        }\n    ],\n    \"bugs\": \"https://github.com/aterrien/jQuery-Knob/issues\",\n    \"homepage\": \"https://github.com/aterrien/jQuery-Knob\",\n    \"docs\": \"https://github.com/aterrien/jQuery-Knob\",\n    \"download\": \"https://github.com/aterrien/jQuery-Knob/tags\",\n    \"dependencies\": {\n        \"jquery\": \">=1.7.0\"\n    }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.5751953125,
          "content": "{\n  \"name\": \"jquery-knob\",\n  \"version\": \"1.2.13\",\n  \"description\": \"Nice, downward compatible, touchable, jQuery dial\",\n  \"main\": \"dist/jquery.knob.min.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/aterrien/jQuery-Knob.git\"\n  },\n  \"keywords\": [\n    \"jquery\",\n    \"knob\",\n    \"dial\"\n  ],\n  \"author\": \"Anthony Terrien\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/aterrien/jQuery-Knob/issues\"\n  },\n  \"homepage\": \"https://github.com/aterrien/jQuery-Knob#readme\"\n}\n"
        },
        {
          "name": "secretplan.jpg",
          "type": "blob",
          "size": 32.7021484375,
          "content": null
        }
      ]
    }
  ]
}