{
  "metadata": {
    "timestamp": 1736563024999,
    "page": 654,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebookarchive/Keyframes",
      "stars": 5331,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.015625,
          "content": "\n*.alloc\n\n*.jar\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.310546875,
          "content": "language: objective-c\nscript:\n  - xcodebuild build -project ios/keyframes/keyframes.xcodeproj -scheme Keyframes -sdk iphonesimulator -destination \"platform=iOS Simulator,name=iPhone 6s\" -derivedDataPath build -configuration Release ENABLE_TESTABILITY=YES GCC_GENERATE_DEBUGGING_SYMBOLS=NO RUN_CLANG_STATIC_ANALYZER=NO\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.23828125,
          "content": "# Code of Conduct\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the [full text](https://code.fb.com/codeofconduct/) so that you can understand what actions will and will not be tolerated.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.6162109375,
          "content": "# Contributing to Keyframes\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Our Development Process\nWe work directly in the github project and provide versioned releases\nappropriate for major milestones and minor bug fixes or improvements.  GitHub\nis used directly for issues and pull requests and the developers actively\nrespond to requests.\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `master`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## Coding Style  \n* 2 spaces for indentation rather than tabs\n* Line wrapping indents 4 spaces\n* 100 character line length\n* One parameter per line when line wrapping is required\n* Use the `m` member variable prefix for private fields\n* Opening braces to appear on the same line as code\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4931640625,
          "content": "BSD License\n\nFor Keyframes software\n\nCopyright (c) 2016-present, Facebook, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n * Neither the name Facebook nor the names of its contributors may be used to\n   endorse or promote products derived from this software without specific\n   prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "PATENTS",
          "type": "blob",
          "size": 1.9326171875,
          "content": "Additional Grant of Patent Rights Version 2\n\n\"Software\" means the Keyframes software contributed by Facebook, Inc.\n\nFacebook, Inc. (\"Facebook\") hereby grants to each recipient of the Software\n(\"you\") a perpetual, worldwide, royalty-free, non-exclusive, irrevocable\n(subject to the termination provision below) license under any Necessary\nClaims, to make, have made, use, sell, offer to sell, import, and otherwise\ntransfer the Software. For avoidance of doubt, no license is granted under\nFacebook’s rights in any patent claims that are infringed by (i) modifications\nto the Software made by you or any third party or (ii) the Software in\ncombination with any software or other technology.\n\nThe license granted hereunder will terminate, automatically and without notice,\nif you (or any of your subsidiaries, corporate affiliates or agents) initiate\ndirectly or indirectly, or take a direct financial interest in, any Patent\nAssertion: (i) against Facebook or any of its subsidiaries or corporate\naffiliates, (ii) against any party if such Patent Assertion arises in whole or\nin part from any software, technology, product or service of Facebook or any of\nits subsidiaries or corporate affiliates, or (iii) against any party relating\nto the Software. Notwithstanding the foregoing, if Facebook or any of its\nsubsidiaries or corporate affiliates files a lawsuit alleging patent\ninfringement against you in the first instance, and you respond by filing a\npatent infringement counterclaim in that lawsuit against that party that is\nunrelated to the Software, the license granted hereunder will not terminate\nunder section (i) of this paragraph due to such counterclaim.\n\nA \"Necessary Claim\" is a claim of a patent owned by Facebook that is\nnecessarily infringed by the Software standing alone.\n\nA \"Patent Assertion\" is any lawsuit or other action alleging direct, indirect,\nor contributory infringement or inducement to infringe any patent, including a\ncross-claim or counterclaim."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.2978515625,
          "content": "![Keyframes](/docs/images/doc-logo.png)\n\n[![Version](https://img.shields.io/cocoapods/v/keyframes.svg)](http://cocoapods.org/pods/keyframes)\n[![Version](https://img.shields.io/maven-central/v/com.facebook.keyframes/keyframes.svg)](http://search.maven.org/#artifactdetails%7Ccom.facebook.keyframes%7Ckeyframes%7C1.0%7Caar)\n[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-59C939.svg?style=flat)](https://github.com/Carthage/Carthage)\n[![License](https://img.shields.io/cocoapods/l/keyframes.svg)](https://github.com/facebookincubator/Keyframes/blob/master/LICENSE)\n\n# Keyframes\n\nKeyframes is a combination of (1) an ExtendScript script that extracts image animation data from an After Effects file and (2) a corresponding rendering library for Android and iOS.  Keyframes can be used to export and render high quality, vector based animations with complex shape and path curves, all with minimal file footprint.\n\n## Usage\n\n### Developing Animations in After Effects\n\nFor a detailed list of constraints for developing animations to use with the Keyframes library, please refer to the [Keyframes After Effects Guidelines](/docs/AfterEffectsGuideline.md).\n\n### Image Data Extraction\n\nUse of the extraction script requires an installation of **Adobe After Effects** as well as **Adobe ExtendScript Toolkit**.  If Keyframes JSON files are already available, only the corresponding iOS and Android libraries are needed.\n\nFor detailed steps on running the ExtendScript script on your AE comp, please refer to the instructions detailed [here](/scripts).\n\n### iOS Rendering\n#### Installation\n##### CocoaPods\nKeyframes is available on CocoaPods. Add the following to your Podfile:\n```\ntarget 'MyApp' do\n  pod \"keyframes\"\nend\n```\n\nQuit Xcode completely before running\n```\npod install\n```\nin the project directory in terminal.\n\n##### Carthage\nKeyframes is also available through [Carthage](https://github.com/Carthage/Carthage).\n\nAdd the following to your Cartfile to get the **latest release** branch:\n```\ngithub \"facebookincubator/Keyframes\"\n```\n\nOr, to get the **master** branch:\n```\ngithub \"facebookincubator/Keyframes\" \"master\"\n```\n\nRun\n```\n> carthage update\n```\n\nIn Xcode, on your application targets’ **\"General\"** settings tab, in the **\"Linked Frameworks and Libraries\"** section, drag and drop the framework from the `Carthage/Build` folder.\n\n#### Rendering Setup\n\nUse the provided deserializers on the generated JSON blob from the **Image Data Extraction** step to create a `KFVector` model object.  If your JSON blob lives in the assets directory, this might look like:\n\n```objc\nNSString *filePath = [[NSBundle bundleForClass:[self class]] pathForResource:@\"asset_name\" ofType:@\"json\" inDirectory:nil];\nNSData *data = [NSData dataWithContentsOfFile:filePath];\nNSDictionary *vectorDictionary = [NSJSONSerialization JSONObjectWithData:data options:kNilOptions error:nil];\nKFVector *vector = KFVectorFromDictionary(vectorDictionary);\n```\n\nThen a `KFVectorLayer` can be created using this `KFVector`, `KFVectorLayer` can be used as normal `CALayer`.\n\n```objc\nKFVectorLayer *layer = [KFVectorLayer layer];\n// Set a non-zero layer frame before setting the KFVector is required.\nlayer.frame = $AnyNonZeroCGRect$;\nlayer.faceModel = vector;\n```\n\nIf you don't want the control of animation and prefer a `UIView`, `KFVectorView` can also be created using `KFVector`.\n```objc\nKFVectorView *view = [[KFVectorView alloc] initWithFrame:$AnyNonZeroCGRect$ faceVector:vector];\n```\n\n#### Play!\nUse `startAnimation`, `pauseAnimation`, `resumeAnimation` and `seekToProgress` on `KFVectorLayer` to control the animation.\n\n```objc\n// Animation will start from beginning.\n[layer startAnimation];\n\n// Pause the animation at current progress.\n[layer pauseAnimation];\n\n// Resume the animation from where we paused last time.\n[layer resumeAnimation];\n\n// Seek to a given progress in range [0, 1]\n[layer seekToProgress:0.5]; // seek to the mid point of the animation\n```\n\n### Android Rendering\n\n### Download\nDownload [the latest JARs](https://github.com/facebookincubator/keyframes/releases/latest) or grab via Gradle:\n```groovy\ncompile 'com.facebook.keyframes:keyframes:1.0'\n```\nor Maven:\n```xml\n<dependency>\n  <groupId>com.facebook.keyframes</groupId>\n  <artifactId>keyframes</artifactId>\n  <version>1.0</version>\n</dependency>\n```\n\n#### Rendering setup\n\nUse the provided deserializers on the generated JSON blob from the **Image Data Extraction** step to create a `KFImage` model object.  If your JSON blob lives in the assets directory, this might look like:\n```java\nInputStream stream = getResources().getAssets().open(\"asset_name\");\nKFImage kfImage = KFImageDeserializer.deserialize(stream);\n```\nA KeyframesDrawable object can be created now using this `KFImage`, and this drawable can be used as a normal drawable.  It is highly recommended to use the software layer on any views displaying Keyframes animations.\n```java\nKeyframesDrawable kfDrawable = new KeyframesDrawableBuilder().withImage(kfImage).build();\n\nImageView imageView = (ImageView) findViewById(R.id.some_image_view);\nimageView.setLayerType(View.LAYER_TYPE_SOFTWARE, null);\nimageView.setImageDrawable(kfDrawable);\nimageView.setImageAlpha(0);\n```\n\n#### Play!\nUse the start and stop animations on the drawable when appropriate to begin playback of the animation or end it after the end of the current loop.\n```java\n// Starts a loop that progresses animation from the beginning and invalidates the drawable.\nkfDrawable.startAnimation();\n\n// Pause the animation at current progress.\nkfDrawable.pauseAnimation();\n\n// Resume the animation from where we paused last time.\nkfDrawable.resumeAnimation();\n\n// Stops the animation.\nkfDrawable.stopAnimation();\n\n// Stops the animation when the current animation ends.\nkfDrawable.stopAnimationAtLoopEnd();\n\n// Starts the animation and plays it once. Will stop at the end\nkfDrawable.playOnce();\n```\n\n### Mobile Frameworks\nExisting implementations for mobile frameworks:\n\n| Framework             | Platform    | Author          | Link                                                            |\n|-----------------------|-------------|-----------------|-----------------------------------------------------------------|\n| React Native (imperative api)          | Android/IOS | [Tomas Roos](https://github.com/ptomasroos)| https://github.com/ptomasroos/react-native-keyframes/\n| Appcelerator Titanium | iOS         | [Hans Knoechel](https://github.com/hansemannn/)   | https://github.com/hansemannn/ti.keyframes                      |\n| Appcelerator Titanium | Android     | [Michael Gangolf](https://github.com/m1ga/) | https://github.com/m1ga/ti.keyframes                            |\n| React Native          | Android/iOS | [Underscope](https://github.com/underscopeio/)      | https://github.com/underscopeio/react-native-facebook-keyframes |\n| NativeScript          | Android/IOS |  [Eddy Verbruggen](https://github.com/EddyVerbruggen/)| https://github.com/EddyVerbruggen/nativescript-keyframes\n## Understanding Keyframes Model Objects\n\n### **Image**\n\nAn `Image` in Keyframes consists of a number of important fields, which together, describe an animated and scalable image.  At the top level, an image contains information about how to scale (`canvas_size`) an image, as well as how to play back an animation at the correct speed (`frame_rate`, `frame_count`).  The animation itself is not bound to the discrete `frame_rate` that the image was extracted at, as the Keyframes rendering library supports fractional frames.  In addition to these global parameters of an `Image`, an `Image` also contains a number of `Feature`s, which describe different shapes to be drawn, as well as `Animation Group`s, which describe transforms that can be applied to multiple `Feature`s or even other `Animation Group`s at once.\n\nLet's break down this simple image of a star against a circle scaling up and down.  The animation was exported at 24FPS, and the frame number is shown in the top left corner as well as the scale of the star on the bottom.\n\n![Star, Real Time](/docs/images/doc-star-realtime.gif)\n\nLet's slow that down a bit, frame by frame.\n\n![Star, Slowwwww](/docs/images/doc-star-slow.gif)\n\n### **Features**\n\nA `Feature` is any independent visual object of the image.  Most important, it includes shape drawing commands, presented very similary to SVG type commands, which describe the `Feature`'s shape at any given time.  A `Feature` may belong to a larger `Animation Group`, as well as contain features specific animations of its own, including a specialized `STROKE_WIDTH` animation.  The shape of a `Feature` can also change over time, using the same `Keyframe` and `Interpolator` pattern described below.\n\n##### Shape\n\nA shape is any list of line drawing commands, which strung together, describe a continuous line or closed shape that can be filled or stroked.  The commands are given as a series of `Move`, `Line`, `Quadratic`, and `Cubic` commands, one after another.\n\nHere are the important shapes for the above image, along with vertices (squares) and control points (circles), if relevant.\n\n![Circle Shape](/docs/images/doc-circle-shape.png)\n![Star Shape](/docs/images/doc-star-shape.png)\n\n### **Animations**\n\n##### Transforms\n\nThe Keyframes rendering library includes support for the common matrix based transform operations, `SCALE`, `ROTATE`, and `TRANSLATE`.  For `Feature`s specifically, an additional non-matrix `STROKE_WIDTH` is available.  `Animation`s may belong to specific `Feature`s, or as part of a larger `Animation Group`.\n\n##### Animation Progression\n\nThe values of a transform of an animation and how they change during the playback of an animation are determined by two key fields, `Keyframe`s and `Timing Curves`.  Using the combination of the two fields, we can calculate back a value for a transform at any specified time in the animation.\n\n**Keyframes** are specific frames in the animation that have specific target values.  For example, in scaling a shape up and back down over 10 frames, we will want to start and end at 100% scale at the 0th and 10th frame, and hit our max scale of 150% on the 7th frame.  In this example, our key frames for the `SCALE` transform for this shape would be `[0, 7, 10]` with the values `[100%, 150%, 100%` respectively.\n\n**Timing Curves** describe the pace with which a transform changes between each keyframe.  Each timing curve is modeled as a cubic bezier curve from point `[0, 0]` to `[1, 1]`, where the X value is the progression in time from the origin keyframe to the destination keyframe, and the Y value describes the amount of change in the value at a given time: `origValue + (destValue - origValue) * Y`.\n\nFor our scaling star image, the graph of scale change over time looks like this, with vertices and timing curve in/out values shown.\n\n![Scale Animation Curve](/docs/images/doc-scale-curve.png)\n\n### **Tying it all together**\n\nWith these fields from an `Image` object, as well as a progress value, we can build back all of the shapes of the `Image` at a given time, as well as any transformations to apply to the shapes, and draw back the `Image` at that frame.  Because the animations are driven by flexible `timing_curves`, a Keyframes `Image` is not limited to discrete integer frames for playback, but it is important to note that all progress values are given in relation to the frame count.  This means a 10 frame animation accepts all values in the range `[0..10]`.\n\n## Contributing\n\nSee [`CONTRIBUTING.md`](/CONTRIBUTING.md) for how to help us by improving this library!\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "keyframes.podspec",
          "type": "blob",
          "size": 0.9404296875,
          "content": "Pod::Spec.new do |spec|\n  spec.name             = 'keyframes'\n  spec.version          = '1.1.0'\n  spec.license          = { :type => 'BSD', :file => 'LICENSE' }\n  spec.homepage         = 'https://github.com/facebookincubator/Keyframes'\n  spec.author           = { 'Sean Lee' => 'landasiastudio@gmail.com', 'Renyu Liu' => 'sd.qd.lry@gmail.com' }\n  spec.summary          = 'Vector+keyframe rendering framework for iOS'\n  spec.source           = { :git => 'https://github.com/facebookincubator/Keyframes.git', :tag => \"v#{spec.version}\" }\n  spec.source_files     = 'ios/keyframes/src/**/*.{h,m,mm,cpp}'\n  spec.public_header_files = 'ios/keyframes/src/{Keyframes,DataModel/KFVector,Layers/KFVectorLayer,ParsingHelpers/KFVectorParsingHelper,Views/KFVectorView,Helpers/KFUtilities,Compatibility/*}.h'\n  spec.requires_arc = true\n  spec.social_media_url = 'https://twitter.com/fbOpenSource'\n  spec.ios.deployment_target = '8.0'\n  spec.osx.deployment_target = '10.11'\nend\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}