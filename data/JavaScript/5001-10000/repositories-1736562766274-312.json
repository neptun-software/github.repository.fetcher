{
  "metadata": {
    "timestamp": 1736562766274,
    "page": 312,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sbstjn/timesheet.js",
      "stars": 6971,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4853515625,
          "content": "# See http://help.github.com/ignore-files/ for more about ignoring files.\n#\n# If you find yourself ignoring temporary files generated by your text editor\n# or operating system, you probably want to add a global ignore instead:\n# git config --global core.excludesfile ~/.gitignore_global\n\n# Ignore bundler config\n/.bundle\n\n# Ignore the build directory\n/build\n\n# Ignore cache\n/.sass-cache\n/.cache\n\n# Built gh-pages\n/gh-pages\n\n# Ignore .DS_store file\n.DS_Store\n\n# Ignore Node.js modules\nnode_modules\n"
        },
        {
          "name": ".jshintignore",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.7197265625,
          "content": "{\n  \"bitwise\": false,\n  \"boss\": true,\n  \"browser\": true,\n  \"camelcase\": true,\n  \"curly\": true,\n  \"devel\": true,\n  \"eqeqeq\": true,\n  \"es3\": true,\n  \"expr\": true,\n  \"forin\": true,\n  \"freeze\": true,\n  \"globalstrict\": false,\n  \"immed\": true,\n  \"indent\": 2,\n  \"jquery\": true,\n  \"latedef\": true,\n  \"laxcomma\": true,\n  \"multistr\": false,\n  \"newcap\": true,\n  \"noarg\": true,\n  \"noempty\": true,\n  \"nonew\": true,\n  \"notypeof\": false,\n  \"plusplus\": false,\n  \"quotmark\": \"single\",\n  \"regexp\": true,\n  \"strict\": true,\n  \"trailing\": true,\n  \"undef\": true,\n  \"unused\": true,\n  \"maxparams\": 5,\n  \"maxdepth\": 4,\n  \"maxstatements\": 20,\n  \"maxcomplexity\": 10,\n  \"globals\": {\"module\": true, \"require\": true, \"suite\": true, \"test\": true, \"__dirname\": true}\n}\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 3.09375,
          "content": "module.exports = function(grunt) {\n\t'use strict';\n\n\tvar fs = require('fs');\n\n\tgrunt.initConfig({\n\t\tuglify: {\n\t\t\toptions: {\n\t\t\t\tmangle: false\n\t\t\t},\n\t\t\tmy_target: {\n\t\t\t\tfiles: {\n\t\t\t\t\t'dist/timesheet.min.js': ['source/javascripts/timesheet.js']\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsass: {\n\t\t\tgh: {\n\t\t\t\toptions: {\n\t\t\t\t\tstyle: 'compressed'\n\t\t\t\t},\n\t\t\t\tfiles: {\n\t\t\t\t\t'gh-pages/styles/style.css': 'source/stylesheets/style.sass'\n\t\t\t\t}\n\t\t\t},\n\t\t\tdist: {\n\t\t\t\toptions: {\n\t\t\t\t\tstyle: 'compressed'\n\t\t\t\t},\n\t\t\t\tfiles: {\n\t\t\t\t\t'dist/timesheet.min.css': 'source/stylesheets/timesheet.sass',\n\t\t\t\t\t'dist/timesheet-white.min.css': 'source/stylesheets/timesheet-white.sass'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tjshint: {\n\t\t\tall: {\n\t\t\t\tsrc: [\n\t\t\t\t\t'source/javascripts/*.js'\n\t\t\t\t],\n\t\t\t\toptions: {\n\t\t\t\t\tjshintrc: '.jshintrc'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsimplemocha: {\n\t\t\toptions: {\n\t\t\t\tglobals: ['should'],\n\t\t\t\ttimeout: 3000,\n\t\t\t\tignoreLeaks: false,\n\t\t\t\tgrep: '',\n\t\t\t\tui: 'tdd',\n\t\t\t\treporter: 'spec'\n\t\t\t},\n\t\t\tall: { src: ['test/**/*.js'] }\n\t\t},\n\t\texpress: {\n\t\t\toptions: {\n\t\t\t\tport: 8080\n\t\t\t},\n\t\t\tdev: {\n\t\t\t\toptions: {\n\t\t\t\t\tscript: __dirname + '/serve.js'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\tscripts: {\n\t\t\t\tfiles: 'source/javascripts/*.js',\n\t\t\t\ttasks: ['simplemocha', 'jshint', 'uglify'],\n\t\t\t\toptions: {\n\t\t\t\t\tinterrupt: true,\n\t\t\t\t}\n\t\t\t},\n\t\t\tstyles: {\n\t\t\t\tfiles: 'source/stylesheets/*.sass',\n\t\t\t\ttasks: ['sass'],\n\t\t\t\toptions: {\n\t\t\t\t\tinterrupt: true,\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thaml: {\n\t\t\tgh: {\n\t\t\t\tfiles: {\n\t\t\t\t\t'gh-pages/index.html': 'source/index.haml'\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tcontext: {\n\t\t\t\t\t\tcode: fs.readFileSync(__dirname + '/source/snippets/example-date.js')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcopy: {\n\t\t\tgh: {\n\t\t\t\tfiles: [\n\t\t\t\t\t{expand: false, src: __dirname + '/source/javascripts/lib.js', \t\t\t\t dest: __dirname + '/gh-pages/script/lib.js'},\n\t\t\t\t\t{expand: false, src: __dirname + '/source/javascripts/main.js',\t\t\t\tdest: __dirname + '/gh-pages/script/main.js'},\n\t\t\t\t\t{expand: false, src: __dirname + '/dist/timesheet.min.js',\t\t\t      dest: __dirname + '/gh-pages/script/timesheet.min.js'},\n\t\t\t\t\t{expand: false, src: __dirname + '/dist/timesheet.min.css', \t\t\t\t\t dest: __dirname + '/gh-pages/styles/timesheet.css'},\n\t\t\t\t\t{expand: false, src: __dirname + '/dist/timesheet-white.min.css',\t\t\tdest: __dirname + '/gh-pages/styles/timesheet-white.css'},\n\t\t\t\t\t{expand: false, src: __dirname + '/dist/timesheet.min.css.map', \t\t\t dest: __dirname + '/gh-pages/styles/timesheet.css.map'},\n\t\t\t\t\t{expand: false, src: __dirname + '/dist/timesheet-white.min.css.map',\tdest: __dirname + '/gh-pages/styles/timesheet-white.css.map'}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t});\n\n\tgrunt.loadNpmTasks('grunt-contrib-jshint');\n\tgrunt.loadNpmTasks('grunt-contrib-watch');\n\tgrunt.loadNpmTasks('grunt-simple-mocha');\n\n\tgrunt.loadNpmTasks('grunt-contrib-copy');\n\n\tgrunt.loadNpmTasks('grunt-contrib-uglify');\n\tgrunt.loadNpmTasks('grunt-contrib-sass');\n\n\tgrunt.loadNpmTasks('grunt-express-server');\n\n\tgrunt.loadNpmTasks('grunt-haml');\n\n\t// Default task\n\tgrunt.registerTask('default', \t['build']);\n\tgrunt.registerTask('build', \t\t['simplemocha', 'jshint', 'uglify', 'sass']);\n\tgrunt.registerTask('server', \t\t['express:dev', 'watch' ])\n\tgrunt.registerTask('gh', \t\t\t\t['build', 'haml:gh', 'sass:gh', 'copy:gh']);\n\n};\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0654296875,
          "content": "# The MIT License (MIT)\n\nCopyright (c) 2014-2015 Sebastian Müller\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5830078125,
          "content": "# Timesheet.js\n\nSimple JavaScript library to create HTML time sheets. Wrapped in an example project using Middleman …\n\n![https://sbstjn.github.io/timesheet.js](https://raw.githubusercontent.com/sbstjn/timesheet.js/master/screen.png)\n\nYou only have to include `dist/timesheet.js` and `dist/timesheet.css` in your HTML and initialize Timesheet.js with:\n\n```HTML\n<div id=\"timesheet\"></div>\n```\n\n```javascript\nnew Timesheet('timesheet', 2002, 2013, [\n  ['2002', '09/2002', 'A freaking awesome time', 'lorem'],\n  ['06/2002', '09/2003', 'Some great memories', 'ipsum'],\n  ['2003', 'Had very bad luck'],\n  ['10/2003', '2006', 'At least had fun', 'dolor'],\n  ['02/2005', '05/2006', 'Enjoyed those times as well', 'ipsum'],\n  ['07/2005', '09/2005', 'Bad luck again', 'default'],\n  ['10/2005', '2008', 'For a long time nothing happened', 'dolor'],\n  ['01/2008', '05/2009', 'LOST Season #4', 'lorem'],\n  ['01/2009', '05/2009', 'LOST Season #4', 'lorem'],\n  ['02/2010', '05/2010', 'LOST Season #5', 'lorem'],\n  ['09/2008', '06/2010', 'FRINGE #1 & #2', 'ipsum']\n]);\n```\n\n### Bower\n\n`$ > bower install https://github.com/sbstjn/timesheet.js.git`\n\n## Grunt commands\n\nUse `grunt` to build all JavaScript and StyleSheet files located inside `dist/`. \n\nUse `grunt server` to start a local web server on [localhost:8080](http://localhost:8080) to customize Timesheet.js, afterwards run `grunt` to compile all needed files.\n\nUse `grunt gh` to generate the site and files available at [sbstjn.github.io/timesheet.js](http://sbstjn.github.io/timesheet.js) into the `gh-pages` folder.\n\n## License\n\nTimesheet.js is licensed under MIT License.\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.7080078125,
          "content": "{\n  \"name\": \"timesheet.js\",\n  \"homepage\": \"https://sbstjn.github.io/timesheet.js/\",\n  \"authors\": [\n    \"sbstjn <mail@sbstjn.com>\"\n  ],\n  \"description\": \"With Timesheet.js you can easily create simple time and data sheets or timelines using HTML5, JavaScript and CSS3. Yep, it's a Vanilla JS library!\",\n  \"main\": [\"dist/timesheet.min.js\", \"dist/timesheet.min.css\"],\n  \"moduleType\": [\n    \"amd\"\n  ],\n  \"keywords\": [\n    \"timeline\",\n    \"timesheet\",\n    \"timebar\",\n    \"line\",\n    \"bar\",\n    \"graph\",\n    \"visualize\",\n    \"chart\"\n  ],\n  \"license\": \"MIT\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\",\n    \"screen.png\",\n    \"source\",\n    \"Gruntfile.js\",\n    \"package.json\"\n  ]\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.763671875,
          "content": "{\n  \"name\": \"timesheet.js\",\n  \"version\": \"1.0.1\",\n  \"description\": \"With Timesheet.js you can easily create simple time and data sheets or timelines using HTML5, JavaScript and CSS3. Yep, it's a Vanilla JS library!\",\n  \"author\": \"sbstjn <mail@sbstjn.com>\",\n  \"devDependencies\": {\n    \"consolidate\": \"^0.13.1\",\n    \"express\": \"^4.12.4\",\n    \"grunt\": \"~0.4.1\",\n    \"grunt-cli\": \"~0.1.11\",\n    \"grunt-contrib-copy\": \"^0.8.0\",\n    \"grunt-contrib-jshint\": \"~0.7.2\",\n    \"grunt-contrib-sass\": \"^0.7.3\",\n    \"grunt-contrib-uglify\": \"^0.4.0\",\n    \"grunt-contrib-watch\": \"^0.6.1\",\n    \"grunt-express-server\": \"^0.5.1\",\n    \"grunt-haml\": \"^0.9.0\",\n    \"grunt-jslint\": \"~1.1.1\",\n    \"grunt-simple-mocha\": \"^0.4.0\",\n    \"haml\": \"^0.4.3\",\n    \"hamljs\": \"^0.6.2\",\n    \"node-sass\": \"^3.2.0\"\n  }\n}\n"
        },
        {
          "name": "screen.png",
          "type": "blob",
          "size": 189.318359375,
          "content": null
        },
        {
          "name": "serve.js",
          "type": "blob",
          "size": 1.4365234375,
          "content": "var express = require('express');\nvar sass = require('node-sass');\nvar fs = require('fs');\nvar app = express();\nvar engines = require('consolidate');\n\napp.engine('haml', engines.haml);\napp.set('views', __dirname + '/source');\n\napp.get('/script/lib.js', function(req, res) { \n  res.end(fs.readFileSync(__dirname + '/source/javascripts/lib.js'));\n});\n\napp.get('/script/main.js', function(req, res) { \n  res.end(fs.readFileSync(__dirname + '/source/javascripts/main.js'));\n});\n\napp.get('/script/timesheet.min.js', function(req, res) { \n  res.end(fs.readFileSync(__dirname + '/dist/timesheet.min.js'));\n});\n\napp.get('/styles/timesheet.css', function(req, res) {\n  res.end(fs.readFileSync(__dirname + '/dist/timesheet.min.css'));\n});\n\napp.get('/styles/timesheet-white.css', function(req, res) {\n  res.end(fs.readFileSync(__dirname + '/dist/timesheet-white.min.css'));\n});\n\napp.get('/styles/style.css', function(req, res) {\n  sass.render({\n    file: __dirname + '/source/stylesheets/style.sass',\n    outputStyle: req.query.style || \"\"\n  }, function(err, result) {\n    res.end(result.css.toString());\n  });\n});\n\napp.get('/', function (req, res) {\n  res.render('index.haml', {\n    code: fs.readFileSync(__dirname + '/source/snippets/example-date.js') + ''\n  });\n});\n\nvar server = app.listen(process.env.PORT || 3000, function () {\n  var host = server.address().address;\n  var port = server.address().port;\n\n  console.log('Example app listening at http://%s:%s', host, port);\n});\n"
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}