{
  "metadata": {
    "timestamp": 1736563054452,
    "page": 688,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "benoitvallon/react-native-nw-react-calculator",
      "stars": 5211,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.208984375,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.509765625,
          "content": "{\n  \"extends\": \"eslint:recommended\",\n  \"rules\": {\n    \"indent\": [2, 2, {\"SwitchCase\": 1}],\n    \"quotes\": [2, \"single\"],\n    \"linebreak-style\": [2, \"unix\"],\n    \"semi\": [2, \"always\"],\n    \"no-console\": 0,\n    \"react/jsx-uses-react\": 2\n  },\n  \"env\": {\n    \"es6\": true,\n    \"node\": true,\n    \"browser\": true,\n    \"jest\": true\n  },\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true,\n      \"experimentalObjectRestSpread\": true\n    },\n    \"sourceType\": \"module\"\n  },\n  \"plugins\": [\n    \"react\"\n  ],\n  \"globals\": {}\n}\n"
        },
        {
          "name": ".flowconfig",
          "type": "blob",
          "size": 1.87109375,
          "content": "[ignore]\n\n# We fork some components by platform.\n.*/*.web.js\n.*/*.android.js\n\n# Some modules have their own node_modules with overlap\n.*/node_modules/node-haste/.*\n\n# Ugh\n.*/node_modules/babel.*\n.*/node_modules/babylon.*\n.*/node_modules/invariant.*\n\n# Ignore react and fbjs where there are overlaps, but don't ignore\n# anything that react-native relies on\n.*/node_modules/fbjs/lib/Map.js\n.*/node_modules/fbjs/lib/Promise.js\n.*/node_modules/fbjs/lib/fetch.js\n.*/node_modules/fbjs/lib/ExecutionEnvironment.js\n.*/node_modules/fbjs/lib/isEmpty.js\n.*/node_modules/fbjs/lib/crc32.js\n.*/node_modules/fbjs/lib/ErrorUtils.js\n\n# Flow has a built-in definition for the 'react' module which we prefer to use\n# over the currently-untyped source\n.*/node_modules/react/react.js\n.*/node_modules/react/lib/React.js\n.*/node_modules/react/lib/ReactDOM.js\n\n# Ignore commoner tests\n.*/node_modules/commoner/test/.*\n\n# See https://github.com/facebook/flow/issues/442\n.*/react-tools/node_modules/commoner/lib/reader.js\n\n# Ignore jest\n.*/node_modules/jest-cli/.*\n\n# Ignore Website\n.*/website/.*\n\n[include]\n\n[libs]\nnode_modules/react-native/Libraries/react-native/react-native-interface.js\n\n[options]\nmodule.system=haste\n\nmunge_underscores=true\n\nmodule.name_mapper='^image![a-zA-Z0-9$_-]+$' -> 'GlobalImageStub'\nmodule.name_mapper='^[./a-zA-Z0-9$_-]+\\.\\(bmp\\|gif\\|jpg\\|jpeg\\|png\\|psd\\|svg\\|webp\\|m4v\\|mov\\|mp4\\|mpeg\\|mpg\\|webm\\|aac\\|aiff\\|caf\\|m4a\\|mp3\\|wav\\|html\\)$' -> 'RelativeImageStub'\n\nsuppress_type=$FlowIssue\nsuppress_type=$FlowFixMe\nsuppress_type=$FixMe\n\nsuppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe\\\\($\\\\|[^(]\\\\|(\\\\(>=0\\\\.\\\\(2[0-1]\\\\|1[0-9]\\\\|[0-9]\\\\).[0-9]\\\\)? *\\\\(site=[a-z,_]*react_native[a-z,_]*\\\\)?)\\\\)\nsuppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowIssue\\\\((\\\\(>=0\\\\.\\\\(2[0-1]\\\\|1[0-9]\\\\|[0-9]\\\\).[0-9]\\\\)? *\\\\(site=[a-z,_]*react_native[a-z,_]*\\\\)?)\\\\)?:? #[0-9]+\nsuppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixedInNextDeploy\n\n[version]\n0.21.0\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3876953125,
          "content": "# OSX\n#\n.DS_Store\n\n# Xcode\n#\nbuild/\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\nxcuserdata\n*.xccheckout\n*.moved-aside\nDerivedData\n*.hmap\n*.ipa\n*.xcuserstate\nproject.xcworkspace\n\n# Android/IJ\n#\n.idea\n.gradle\nlocal.properties\n\n# node.js\n#\nnode_modules/\nnpm-debug.log\n\n# App specific\n#\n.tmp\ndist\ncoverage/\nios/main.jsbundle\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.134765625,
          "content": "language: node_js\n\nnode_js:\n  - \"5.0\"\n  - \"5.1.1\"\n  - \"5.3\"\n  - \"5.4\"\n  - \"5.5\"\n  - \"5.6\"\n  - \"5.7.1\"\n  - \"5.8.0\"\n\nscript: npm run travis\n"
        },
        {
          "name": ".watchmanconfig",
          "type": "blob",
          "size": 0.001953125,
          "content": "{}"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 3.2177734375,
          "content": "'use strict';\n\nvar serveStatic = require('serve-static');\n\nvar mountFolder = function (dir) {\n  return serveStatic(require('path').resolve(dir));\n};\n\nvar webpackDistConfig = require('./webpack.dist.config.js');\nvar webpackDevConfig = require('./webpack.config.js');\n\nmodule.exports = function (grunt) {\n  // Let *load-grunt-tasks* require everything\n  require('load-grunt-tasks')(grunt);\n\n  // Read configuration from package.json\n  var pkgConfig = grunt.file.readJSON('package.json');\n\n  grunt.initConfig({\n    'pkg': pkgConfig,\n\n    'webpack': {\n      options: webpackDistConfig,\n      dist: {\n        cache: false\n      }\n    },\n\n    'webpack-dev-server': {\n      options: {\n        hot: true,\n        port: 8000,\n        webpack: webpackDevConfig,\n        publicPath: '/assets/',\n        contentBase: './<%= pkg.src %>/'\n      },\n\n      start: {\n        keepAlive: true\n      }\n    },\n\n    'connect': {\n      options: {\n        port: 8000\n      },\n\n      dist: {\n        options: {\n          keepalive: true,\n          middleware: function () {\n            return [\n              mountFolder(pkgConfig.dist)\n            ];\n          }\n        }\n      }\n    },\n\n    'open': {\n      options: {\n        delay: 500\n      },\n      dev: {\n        path: 'http://localhost:<%= connect.options.port %>/webpack-dev-server/index.web.html'\n      },\n      dist: {\n        path: 'http://localhost:<%= connect.options.port %>/index.html'\n      }\n    },\n\n    'karma': {\n      unit: {\n        configFile: 'karma.conf.js'\n      }\n    },\n\n    'copy': {\n      dist: {\n        files: [\n          {\n            flatten: true,\n            src: ['<%= pkg.src %>/index.web.html'],\n            dest: '<%= pkg.dist %>/index.html'\n          },\n          {\n            flatten: true,\n            src: ['<%= pkg.src %>/favicon.ico'],\n            dest: '<%= pkg.dist %>/favicon.ico'\n          }\n        ]\n      }\n    },\n\n    'clean': {\n      dist: {\n        options: {\n          force: true\n        },\n        files: [{\n          dot: true,\n          src: [\n            '<%= pkg.dist %>'\n          ]\n        }]\n      }\n    },\n\n    'watch': {\n      options: {\n        livereload: true\n      },\n      build: {\n        files: 'src/**/*.js',\n        tasks: ['webpack']\n      }\n    },\n\n    'exec': {\n      launch_nw: '/Applications/nwjs.app/Contents/MacOS/nwjs .',\n      launch_electron: 'electron electron.js'\n    },\n\n    'concurrent': {\n      nw: {\n        tasks: ['watch', 'exec:launch_nw'],\n        options: {\n          logConcurrentOutput: true\n        }\n      },\n      electron: {\n        tasks: ['watch', 'exec:launch_electron'],\n        options: {\n          logConcurrentOutput: true\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('serve-web', function (target) {\n    if (target === 'dist') {\n      return grunt.task.run(['build', 'open:dist', 'connect:dist']);\n    }\n\n    grunt.task.run([\n      'open:dev',\n      'webpack-dev-server'\n    ]);\n  });\n\n  grunt.registerTask('serve-nw', function () {\n    grunt.task.run([\n      'concurrent:nw'\n    ]);\n  });\n\n  grunt.registerTask('serve-electron', function () {\n    grunt.task.run([\n      'concurrent:electron'\n    ]);\n  });\n\n  grunt.registerTask('test', ['karma']);\n  grunt.registerTask('build', ['clean', 'copy', 'webpack']);\n  grunt.registerTask('default', []);\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Benoit VALLON\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.037109375,
          "content": "# Mobile, desktop and website Apps with the same code\n\n[![Build Status](https://travis-ci.org/benoitvallon/react-native-nw-react-calculator.svg?branch=master)](https://travis-ci.org/benoitvallon/react-native-nw-react-calculator) [![Dependency Status](https://david-dm.org/benoitvallon/react-native-nw-react-calculator.svg)](https://david-dm.org/benoitvallon/react-native-nw-react-calculator) [![devDependency Status](https://david-dm.org/benoitvallon/react-native-nw-react-calculator/dev-status.svg)](https://david-dm.org/benoitvallon/react-native-nw-react-calculator#info=devDependencies)\n\nThis project shows how the source code can be architectured to run on multiple devices. As of now, it is able to run as:\n\n- iOS & Android Apps (based on [react-native](https://facebook.github.io/react-native))\n- a Desktop App based on [NW](http://nwjs.io) or based on [Electron](http://electron.atom.io)\n- a Website App in any browser (based on [react](https://facebook.github.io/react))\n\nA demo for the Website App is available [here](http://benoitvallon.github.io/react-native-nw-react-calculator).\n\n## Screenshots\n\n### Mobile Apps (iOS & Android)\n\n![Mobile Apps](images/mobile-apps.png \"Mobile Apps\")\n\n### Desktop Apps (NW & Electron)\n\n![Desktop App](images/desktop-apps.png \"Desktop App\")\n\n### Website App\n\n![Website App](images/website-app.png \"Website App\")\n\n## Libraries/tools\n\nThis project uses libraries and tools like:\n- es6 syntax and [babel](https://babeljs.io)\n- [react](https://facebook.github.io/react) for the Website App and Desktop App,\n- [react-native](https://facebook.github.io/react-native) for the iOS & Android Apps\n- [NW](http://nwjs.io) to package the Desktop App\n- [Electron](http://electron.atom.io) to package the Desktop App\n- [flux](https://facebook.github.io/flux) to organize the data flow management\n- [css-loader](https://github.com/webpack/css-loader) to integrate the styles in the builds\n- [grunt](http://gruntjs.com) to create the builds\n- [webpack](https://webpack.github.io) to help during the development phase with hot reloading\n\n## Basic philosophy\n\nAll the code is contained in the `src` directory, especially the 3 main entry files that are used for the builds:\n- `index.ios.js` & `index.android.js` are the ones used to build the iOS & Android Apps\n- `index.js` is the one used to build the Website App and Desktop App as the code is strictly the same.\n\n### Flux architecture actions/stores\n\nAll the [flux](https://facebook.github.io/flux) architecture is share to 100% to all the different builds. This means that all the logic and data management code is done only once and reuse everywhere. This allows us to have an easy tests suite as well and to ensure that our code is working properly on all the devices.\n\n### Components\n\nThe real interest of the project is in how the components have been structured to shared most of their logic and only redefined what is specific to every device.\n\nBasically, every component has a main `Class` which inherits a base `Class` containing all the logic. Then, the main component import a different Render function which has been selected during the build. The file extension `.ios.js`, `.android.js` or `.js` is used by the build tool to import only the right file.\n\nThe `.native.js` files contain code that is shared between both mobile platforms (iOS & Android). Currently, the `.ios.js` and `.android.js` files compose this `.native.js` file since all code is shared right now. However, if a component needed to be different for platform specific reasons, that code would be included in the corresponding platform specific files.\n\nAt the end, every component is defined by 6 files. If we look at the screen component, here is its structure.\n\n```\nScreen.js\n├── ScreenBase.js\n├── ScreenRender.ios.js (specific to iOS build\n├── ScreenRender.android.js (specific to Android build)\n├── ScreenRender.native.js (shared mobile app code - iOS & Android)\n└── ScreenRender.js (used during Website and Desktop build)\n```\n\nAnd here is the main `Class` file which composes the files.\n\n```js\n'use strict';\n\nimport Base from './ScreenBase';\nimport Render from './ScreenRender';\n\nexport default class Screen extends Base {\n  constructor (props) {\n    super(props);\n  }\n\n  render () {\n    return Render.call(this, this.props, this.state);\n  }\n}\n```\n\n## What's next\n\nHere are some thoughts about what can come next:\n\n- Make the Website App Isomorphic/Universal\n\n## Thank you Robert for your awesome design\n\nI want to thank Robert O'Dowd who kindly authorized me the reuse his very beautiful design. The original design made by Robert was part of his project called \"Simplifycation\" visible [here](https://dribbble.com/shots/1973851-Simplifycation).\n\n# How to build/run the projects\n\n## General requirements before running any specific project\n\n- `npm install` to install all the dependencies, React and React Native among others.\n\n### With some versions of npm (>=v3.3.10 <=v3.6.0)\n\nSome builds from npm included bugs while `npm install`. So if you are using a npm version within the range form 3.3.10 to 3.6.0 included, you must run `npm install` twice. Those versions including npm v3.3.12 are the ones bundled by default with node from version v5.1.0 to v5.5.0.\n\n- `npm install npm`\n- `npm install npm` run it twice, because of the packages won't be installed after the first run [#10985](https://github.com/npm/npm/issues/10985)\n\n## The Mobile Apps (iOS & Android)\n\n### Requirements for React Native\n\n#### iOS\n\n- OS X\n- Xcode 6.3 or higher is recommended (Xcode only runs on Mac).\n- Homebrew is the recommended way to install node, watchman, and flow.\n- `brew install node`\n- `brew install watchman`. We recommend installing watchman, otherwise you might hit a node file watching bug.\n- `brew install flow`. If you want to use flow.\n\n#### Android\n\n- Follow the official documentation guide here: http://facebook.github.io/react-native/docs/getting-started.html#android-setup (includes experimental Windows & Linux support)\n\n### Running the Mobile Apps\n\n#### iOS\n\n- Open iosApp.xcodeproj and hit run in Xcode.\n- Hit cmd+R in your iOS simulator to reload the app and see your change!\n\n#### Android\n\n- Open an emulator. (Genymotion or run `android avd`)\n- Run the `react-native run-android` in the root of this project.\n- If trying to run on a device, read the following guide: http://facebook.github.io/react-native/docs/running-on-device-android.html#content\n\nCongratulations! You've just successfully run the project as an iOS or Android App.\n\n## The Website App\n\n### Requirements for React\n\nThere isn't any additional requirements since you already installed the deps with `npm install`.\n\n### Quick start\n\n- `npm run build` to build the project (at least the first time)\n- `npm run serve-web` to preview in the browser at http://localhost:8000/index.web.html or http://localhost:8000/webpack-dev-server/index.web.html with webpack-dev-server and hot reload enabled\n\nCongratulations! You've just successfully run the project as a Website App.\n\n## The Desktop App\n\nYou can either run the project with [NW](http://nwjs.io) or [electron](http://electron.atom.io).\n\n### Requirements for NW\n\nTo run the project, you are supposed to run something like:\n\n`/path/to/nw .`\n\nOn OSX, the executable binary is in a hidden directory within the .app file. The easier solution to install it is to download the app on http://nwjs.io/ then copying it to your application folder. You will now be able to run:\n\n`/Applications/nwjs.app/Contents/MacOS/nwjs .`\n\nYou can also setup an alias to call the binary.\n\n`alias nw=\"/Applications/nwjs.app/Contents/MacOS/nwjs\"`\n\n### Quick start with NW\n\n- `npm run build` to build the project (at least the first time)\n- `npm run serve-nw` to launch the desktop app and enable livereload\n\nCongratulations! You've just successfully run the project as a Desktop App.\n\n### Quick start with Electron\n\n- `npm run build` to build the project (at least the first time)\n- `npm run serve-electron` to launch the desktop app and enable livereload\n\nCongratulations! You've just successfully run the project as a Desktop App.\n\n# Run the tests\n\nTo run the tests, simply run:\n\n```\nnpm test\n```\n\n![Tests](images/tests.png \"Tests\")\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "electron.js",
          "type": "blob",
          "size": 1.642578125,
          "content": "'use strict';\n\nconst electron = require('electron');\n// Module to control application life.\nconst app = electron.app;\n// Module to create native browser window.\nconst BrowserWindow = electron.BrowserWindow;\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow;\n\nfunction createWindow () {\n  // Create the browser window.\n  mainWindow = new BrowserWindow({\n    minWidth: 300,\n    minHeight: 475,\n    maxWidth: 800,\n    maxHeight: 600\n  });\n\n  // and load the index.html of the app.\n  mainWindow.loadURL('file://' + __dirname + '/index.desktop.html');\n\n  // Open the DevTools.\n  mainWindow.webContents.openDevTools();\n\n  // Emitted when the window is closed.\n  mainWindow.on('closed', function() {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    mainWindow = null;\n  });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', function () {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (mainWindow === null) {\n    createWindow();\n  }\n});\n"
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 0.93359375,
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.desktop.html",
          "type": "blob",
          "size": 0.279296875,
          "content": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>Calculator Desktop App</title>\n</head>\n<body>\n  <div id=\"content\"></div>\n\n  <script type=\"text/javascript\" src=\"dist/assets/main.js\"></script>\n  <script src=\"http://localhost:35729/livereload.js\"></script>\n</body>\n</html>\n"
        },
        {
          "name": "index.web.html",
          "type": "blob",
          "size": 0.720703125,
          "content": "<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>Calculator Web App</title>\n  <meta name=\"description\" content=\"\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n</head>\n<body>\n  <!--[if lt IE 8]>\n    <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n  <![endif]-->\n  <div id=\"content\"></div>\n\n  <script>\n    __REACT_DEVTOOLS_GLOBAL_HOOK__ = parent.__REACT_DEVTOOLS_GLOBAL_HOOK__\n  </script>\n  <script type=\"text/javascript\" src=\"assets/main.js\"></script>\n</body>\n</html>\n"
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 1.625,
          "content": "'use strict';\n\nvar path = require('path');\n\nmodule.exports = function (config) {\n  config.set({\n    basePath: '',\n    frameworks: ['jasmine'],\n    files: [\n      'src/__test__/helpers/**/*.js',\n      'src/__test__/spec/components/**/*.js',\n      'src/__test__/spec/stores/**/*.js',\n      'src/__test__/spec/actions/**/*.js'\n    ],\n    preprocessors: {\n      'src/__test__/spec/components/**/*.js': ['webpack'],\n      'src/__test__/spec/stores/**/*.js': ['webpack'],\n      'src/__test__/spec/actions/**/*.js': ['webpack']\n    },\n    webpack: {\n      cache: true,\n      module: {\n        loaders: [{\n          test: /\\.gif/,\n          loader: 'url-loader?limit=10000&mimetype=image/gif'\n        }, {\n          test: /\\.jpg/,\n          loader: 'url-loader?limit=10000&mimetype=image/jpg'\n        }, {\n          test: /\\.png/,\n          loader: 'url-loader?limit=10000&mimetype=image/png'\n        }, {\n          test: /\\.js$/,\n          loader: 'babel-loader'\n        }, {\n          test: /\\.sass/,\n          loader: 'style-loader!css-loader!sass-loader?outputStyle=expanded'\n        }, {\n          test: /\\.css$/,\n          loader: 'style-loader!css-loader'\n        }]\n      }\n    },\n    webpackServer: {\n      stats: {\n        colors: true\n      }\n    },\n    exclude: [],\n    port: 8080,\n    logLevel: config.LOG_INFO,\n    colors: true,\n    autoWatch: false,\n    // Start these browsers, currently available:\n    // - Chrome\n    // - ChromeCanary\n    // - Firefox\n    // - Opera\n    // - Safari (only Mac)\n    // - PhantomJS\n    // - IE (only Windows)\n    browsers: ['PhantomJS'],\n    reporters: ['progress'],\n    captureTimeout: 60000,\n    singleRun: true\n  });\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.5859375,
          "content": "{\n  \"name\": \"ReactNativeNWReactCalculator\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A mobile, desktop and website App with the same code\",\n  \"author\": \"Benoit VALLON <benoitvallon@gmail.com> (http://github.com/benoitvallon)\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/benoitvallon/react-native-nw-react-calculator\"\n  },\n  \"homepage\": \"https://github.com/benoitvallon/react-native-nw-react-calculator\",\n  \"keywords\": [\n    \"react\",\n    \"react-native\",\n    \"nw\",\n    \"flux\",\n    \"babel\"\n  ],\n  \"src\": \"./\",\n  \"test\": \"./test\",\n  \"dist\": \"./dist\",\n  \"mainInput\": \"main\",\n  \"mainOutput\": \"main\",\n  \"main\": \"index.desktop.html\",\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n    \"build\": \"grunt build\",\n    \"deploy\": \"gh-pages -d dist\",\n    \"travis\": \"npm run build && npm run react-native:ios && npm run react-native:android && npm test\",\n    \"react-native:ios\": \"react-native bundle --entry-file src/index.ios.js --bundle-output ios/main.jsbundle --platform ios --dev false\",\n    \"react-native:android\": \"react-native bundle --entry-file src/index.android.js --bundle-output android/app/src/main/assets/index.android.bundle --platform android --dev false\",\n    \"serve-nw\": \"grunt serve-nw\",\n    \"serve-electron\": \"grunt serve-electron\",\n    \"serve-web\": \"grunt serve-web\",\n    \"serve-web:dist\": \"grunt serve-web:dist\",\n    \"test\": \"jest\",\n    \"postinstall\": \"npm install fbjs@0.6.0\"\n  },\n  \"window\": {\n    \"toolbar\": true,\n    \"min_width\": 300,\n    \"min_height\": 475,\n    \"max_width\": 800,\n    \"max_height\": 600\n  },\n  \"jest\": {\n    \"scriptPreprocessor\": \"<rootDir>/node_modules/babel-jest\",\n    \"testFileExtensions\": [\n      \"js\"\n    ],\n    \"testPathDirs\": [\n      \"src\"\n    ],\n    \"moduleFileExtensions\": [\n      \"js\"\n    ],\n    \"verbose\": true,\n    \"collectCoverage\": true\n  },\n  \"dependencies\": {\n    \"electron-prebuilt\": \"^0.37.2\",\n    \"es6-promise\": \"^3.1.2\",\n    \"events\": \"^1.1.0\",\n    \"flux\": \"^2.1.1\",\n    \"grunt\": \"^0.4.5\",\n    \"history\": \"^2.0.1\",\n    \"keymirror\": \"^0.1.1\",\n    \"normalize.css\": \"^3.0.3\",\n    \"object-assign\": \"^4.0.1\",\n    \"react-dom\": \"^0.14.7\",\n    \"react-native\": \"^0.21.0\",\n    \"react-native-cli\": \"^0.1.10\",\n    \"react-router\": \"^2.0.1\",\n    \"serve-static\": \"^1.10.2\",\n    \"uniqid\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"^6.7.2\",\n    \"babel-jest\": \"^9.0.3\",\n    \"babel-loader\": \"^6.2.4\",\n    \"babel-preset-es2015\": \"^6.6.0\",\n    \"babel-preset-react\": \"^6.5.0\",\n    \"babel-register\": \"^6.7.2\",\n    \"css-loader\": \"^0.23.1\",\n    \"eslint\": \"^2.4.0\",\n    \"eslint-plugin-react\": \"^4.2.3\",\n    \"file-loader\": \"^0.8.5\",\n    \"gh-pages\": \"^0.11.0\",\n    \"grunt-cli\": \"^0.1.13\",\n    \"grunt-concurrent\": \"^2.2.1\",\n    \"grunt-contrib-clean\": \"^1.0.0\",\n    \"grunt-contrib-connect\": \"^1.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-watch\": \"^1.0.0\",\n    \"grunt-exec\": \"^0.4.6\",\n    \"grunt-karma\": \"^0.12.2\",\n    \"grunt-open\": \"^0.2.3\",\n    \"grunt-webpack\": \"^1.0.11\",\n    \"jasmine-core\": \"^2.4.1\",\n    \"jest-cli\": \"^0.9.2\",\n    \"jshint\": \"^2.9.1\",\n    \"jshint-loader\": \"^0.8.3\",\n    \"karma\": \"^0.13.22\",\n    \"karma-chrome-launcher\": \"^0.2.2\",\n    \"karma-firefox-launcher\": \"^0.1.7\",\n    \"karma-jasmine\": \"^0.3.8\",\n    \"karma-phantomjs-launcher\": \"^1.0.0\",\n    \"karma-script-launcher\": \"^0.2.0\",\n    \"karma-webpack\": \"^1.7.0\",\n    \"load-grunt-tasks\": \"^3.4.1\",\n    \"node-sass\": \"^3.4.2\",\n    \"phantomjs-prebuilt\": \"^2.1.5\",\n    \"react-hot-loader\": \"^1.3.0\",\n    \"sass-loader\": \"^3.2.0\",\n    \"style-loader\": \"^0.13.0\",\n    \"url-loader\": \"^0.5.7\",\n    \"webpack\": \"^1.12.14\",\n    \"webpack-dev-server\": \"^1.14.1\"\n  }\n}\n"
        },
        {
          "name": "rn-cli.config.js",
          "type": "blob",
          "size": 0.2275390625,
          "content": "var blacklist = require('react-native/packager/blacklist');\nvar config = {\n  getBlacklistRE(platform) {\n    return blacklist(platform,[/react\\-native\\-nw\\-react\\-calculator.+\\/node_modules\\/fbjs.*/]);\n  }\n};\nmodule.exports = config;\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 0.8408203125,
          "content": "/*\n * Webpack development server configuration\n */\n\n'use strict';\n\nvar webpack = require('webpack');\n\nmodule.exports = {\n  output: {\n    filename: 'main.js',\n    publicPath: '/assets/'\n  },\n  cache: true,\n  debug: true,\n  devtool: false,\n  entry: [\n      'webpack/hot/only-dev-server',\n      './src/index.js'\n  ],\n  stats: {\n    colors: true,\n    reasons: true\n  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin()\n  ],\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      exclude: /node_modules/,\n      loader: 'react-hot!babel-loader'\n    }, {\n      test: /\\.sass/,\n      loader: 'style-loader!css-loader!sass-loader?outputStyle=expanded&indentedSyntax'\n    }, {\n      test: /\\.css$/,\n      loader: 'style-loader!css-loader'\n    }, {\n      test: /\\.(png|jpg)$/,\n      loader: 'url-loader?limit=8192'\n    }]\n  }\n};\n"
        },
        {
          "name": "webpack.dist.config.js",
          "type": "blob",
          "size": 0.994140625,
          "content": "/*\n * Webpack distribution configuration\n *\n * This file is set up for serving the distribution version. It will be compiled to dist/ by default\n */\n\n'use strict';\n\nvar webpack = require('webpack');\n\nmodule.exports = {\n  output: {\n    publicPath: '/assets/',\n    path: 'dist/assets/',\n    filename: 'main.js'\n  },\n  debug: false,\n  devtool: false,\n  entry: './src/index.js',\n  stats: {\n    colors: true,\n    reasons: false\n  },\n  plugins: [\n    new webpack.optimize.DedupePlugin(),\n    new webpack.optimize.UglifyJsPlugin(),\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.optimize.AggressiveMergingPlugin()\n  ],\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      exclude: /node_modules/,\n      loader: 'babel-loader'\n    }, {\n      test: /\\.css$/,\n      loader: 'style-loader!css-loader'\n    }, {\n      test: /\\.sass/,\n      loader: 'style-loader!css-loader!sass-loader?outputStyle=expanded&indentedSyntax'\n    }, {\n      test: /\\.(png|jpg)$/,\n      loader: 'url-loader?limit=8192'\n    }]\n  }\n};\n"
        }
      ]
    }
  ]
}