{
  "metadata": {
    "timestamp": 1736562747209,
    "page": 285,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WebGoat/WebGoat",
      "stars": 7173,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.029296875,
          "content": "**\n\n!/target\n!/config/desktop\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3330078125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\nmax_line_length = 120\ntab_width = 4\nij_continuation_indent_size = 8\nij_formatter_off_tag = @formatter:off\nij_formatter_on_tag = @formatter:on\nij_formatter_tags_enabled = false\nij_java_names_count_to_use_import_on_demand = 999\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.2958984375,
          "content": "/nb-configuration.xml\n/nbactions.xml\n/target/\n/.classpath\n/.project\n/.settings/.jsdtscope\n/.settings/org.eclipse.jdt.core.prefs\n/.settings/org.eclipse.m2e.core.prefs\n/.settings/org.eclipse.wst.common.component\n/.settings/org.eclipse.wst.common.project.facet.core.prefs.xml\n/.settings/org.eclipse.wst.common.project.facet.core.xml\n/.settings/org.eclipse.wst.jsdt.ui.superType.container\n/.settings/org.eclipse.wst.jsdt.ui.superType.name\n/.settings/org.eclipse.wst.validation.prefs\n/.externalToolBuilders/\n.project\n*/target/*\n*.pmd\nmongo-data/*\n.classpath\n.idea/\n.settings/\nsrc/main/main.iml\n*.BACKUP.*.jsp\n*.BASE.*.jsp\n*.LOCAL.*.jsp\n*.REMOTE.*.jsp\nsrc/main/webapp/plugin_extracted/*\nsrc/main/webapp/users/*.jar\nsrc/main/webapp/plugin_lessons/*.jar\nsrc/main/webapp/users/*.props\nclasses/*\n*.iml\npom.xml.versionsBackup\n\n/*.iml\n.extract/*\nUserDatabase.mv.db\nwebgoat-container/src/main/webapp/users/guest.org.owasp.webgoat.plugin.*.props\nwebgoat-container/src/main/webapp/plugin_lessons/dist-*.pom\nwebgoat-lessons/**/target\n**/*.jar\n**/.DS_Store\nwebgoat-server/mongo-data/*\nwebgoat-lessons/vulnerable-components/dependency-reduced-pom.xml\n**/.sts4-cache/*\n**/.vscode/*\n**/.factorypath\n/.sonatype\n**/bin/*\nwebgoat.lck\nwebgoat.log\nwebgoat.properties\nwebgoat.script\nTestClass.class\n**/*.flattened-pom.xml\n/.gitconfig\n\nwebgoat.gitconfig\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.8017578125,
          "content": "ci:\n  autofix_commit_msg: |\n    [pre-commit.ci] auto fixes from pre-commit.com hooks\n  autofix_prs: false # managed in the action step\n  autoupdate_branch: \"\"\n  autoupdate_commit_msg: \"[pre-commit.ci] pre-commit autoupdate\"\n  autoupdate_schedule: weekly\n  skip: []\n  submodules: false\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: check-yaml\n      - id: end-of-file-fixer\n        exclude: ^(README.md|CREATE_RELEASE.md)\n      - id: trailing-whitespace\n  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook\n    rev: v9.5.0\n    hooks:\n      - id: commitlint\n        stages: [commit-msg]\n  - repo: https://github.com/ejba/pre-commit-maven\n    rev: v0.3.4\n    hooks:\n      - id: maven\n        args: [ 'clean compile' ]\n      - id: maven-spotless-apply\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 4.3134765625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic address, without explicit permission\n- Misusing the context of the WebGoat project for commercial goals (e.g. adding sales pitches to the codebase or to communication channels used by the project, such as Slack).\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Disclaimer\n\nThe WebGoat project and its materials are conceived for educational and research purposes only.\n\nRefrain from violating the laws in your country by carefully consulting them before executing any tests against web applications or other assets utilizing the WebGoat (or Webwolf) materials.\n\nThe WebGoat project is also NOT supporting unethical activities in any way. If you come across such requests, please reach out to the project leaders and raise this to them.\n\nNeither OWASP, the WebGoat project leaders, authors or anyone else involved in this project is going to take responsibility for your actions.\n\nThe intention of the WebGoat is not to encourage hacking or malicious activities! Instead, the goal of the project is to learn different hacking techniques and offer ways to reduce or mitigate that risk.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community includes using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at nanne.baars@owasp.org.\n\nAll complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org \"Contributor Covenant homepage\"), [version 1.4](https://www.contributor-covenant.org/version/1/4/code-of-conduct.html \"Code of Conduct version 1.4\").\n\nFor answers to common questions about this code of conduct, see [the Contributor Covenant FAQ](https://www.contributor-covenant.org/faq)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.08203125,
          "content": "# Contributing\n\n[![GitHub contributors](https://img.shields.io/github/contributors/WebGoat/WebGoat.svg)](https://github.com/WebGoat/WebGoat/graphs/contributors)\n![GitHub issues by-label \"help wanted\"](https://img.shields.io/github/issues/WebGoat/WebGoat/help%20wanted.svg)\n![GitHub issues by-label \"good first issue\"](https://img.shields.io/github/issues/WebGoat/WebGoat/good%20first%20issue.svg)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&logoColor=white)](https://conventionalcommits.org)\n\nThis document describes how you can contribute to WebGoat. Please read it carefully.\n\n**Table of Contents**\n\n* [How to Contribute to the Project](#how-to-contribute-to-the-project)\n* [How to set up your Contributor Environment](#how-to-set-up-your-contributor-environment)\n* [How to get your PR Accepted](#how-to-get-your-pr-accepted)\n\n## How to Contribute to the project\n\nThere are a couple of ways on how you can contribute to the project:\n\n* **File [issues](https://github.com/WebGoat/WebGoat/issues \"Webgoat Issues\")** for missing content or errors. Explain what you think is missing and give a suggestion as to where it could be added.\n* **Create a [pull request (PR)](https://github.com/WebGoat/WebGoat/pulls \"Create a pull request\")**. This is a direct contribution to the project and may be merged after review. You should ideally [create an issue](https://github.com/WebGoat/WebGoat/issues \"WebGoat Issues\") for any PR you would like to submit, as we can first review the merit of the PR and avoid any unnecessary work. This is of course not needed for small modifications such as correcting typos.\n* **Help out financially** by donating via [OWASP donations](https://owasp.org/donate/?reponame=www-project-webgoat&title=OWASP+WebGoat).\n\n## How to get your PR accepted\n\nYour PR is valuable to us, and to make sure we can integrate it smoothly, we have a few items for you to consider. In short:\nThe minimum requirements for code contributions are:\n\n1. The code _must_ be compliant with the configured Java Google Formatter, Checkstyle and PMD rules.\n2. All new and changed code _should_ have a corresponding unit and/or integration test.\n3. New and changed lessons _must_ have a corresponding integration test.\n4. [Status checks](https://docs.github.com/en/github/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks) should pass for your last commit.\n\nAdditionally, the following guidelines can help:\n\n### Keep your pull requests limited to a single issue\n\nPull requests should be as small/atomic as possible. Large, wide-sweeping changes in a pull request will be **rejected**, with comments to isolate the specific code in your pull request. Some examples:\n\n* If you are making spelling corrections in the docs, don't modify other files.\n* If you are adding new functions don't '*cleanup*' unrelated functions. That cleanup belongs in another pull request.\n\n### Write a good commit message\n\n* We use [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) and use the following types:\n\n  - fix:\n  - feat:\n  - build:\n  - chore:\n  - ci:\n  - docs:\n  - refactor:\n  - test:\n\n  Using this style of commits makes it possible to create our release notes automatically.\n\n* Explain why you make the changes. [More infos about a good commit message.](https://betterprogramming.pub/stop-writing-bad-commit-messages-8df79517177d)\n\n* If you fix an issue with your commit, please close the issue by [adding one of the keywords and the issue number](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue) to your commit message.\n\nFor example: `Fix #545` or `Closes #10`\n\n## How to set up your Contributor Environment\n\n1. Create a GitHub account. Multiple different GitHub subscription plans are available, but you only need a free one. Follow [these steps](https://help.github.com/en/articles/signing-up-for-a-new-github-account \"Signing up for a new GitHub account\") to set up your account.\n2. Fork the repository. Creating a fork means creating a copy of the repository on your own account, which you can modify without any impact on this repository. GitHub has an [article that describes all the needed steps](https://help.github.com/en/articles/fork-a-repo \"Fork a repo\").\n3. Clone your own repository to your host computer so that you can make modifications. If you followed the GitHub tutorial from step 2, you have already done this.\n4. Go to the newly cloned directory \"WebGoat\" and add the remote upstream repository:\n\n   ```bash\n   \t$ git remote -v\n   \torigin git@github.com:<your Github handle>/WebGoat.git (fetch)\n   \torigin git@github.com:<your Github handle>/WebGoat.git (push)\n\n   \t$ git remote add upstream git@github.com:WebGoat/WebGoat.git\n\n   \t$ git remote -v\n   \torigin git@github.com:<your Github handle>/WebGoat.git (fetch)\n   \torigin git@github.com:<your Github handle>/WebGoat.git (push)\n   \tupstream git@github.com:OWASP/WebGoat.git (fetch)\n   \tupstream git@github.com:OWASP/WebGoat.git (push)\n   ```\n\n   See also the GitHub documentation on \"[Configuring a remote for a fork](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/configuring-a-remote-for-a-fork \"Configuring a remote for a fork\")\".\n\n5. Choose what to work on, based on any of the outstanding [issues](https://github.com/WebGoat/WebGoat/issues \"WebGoat Issues\").\n\n6. Create a branch so that you can cleanly work on the chosen issue: `git checkout -b FixingIssue66`\n\n7. Open your favorite editor and start making modifications. We recommend using the [IntelliJ Idea](https://www.jetbrains.com/idea/).\n\n8. After your modifications are done, push them to your forked repository. This can be done by executing the command `git add MYFILE` for every file you have modified, followed by `git commit -m 'your commit message here'` to commit the modifications and `git push` to push your modifications to GitHub.\n\n9. Create a Pull Request (PR) by going to your fork, <https://github.com/Your_Github_Handle/WebGoat> and click on the \"New Pull Request\" button. The target branch should typically be the Master branch. When submitting a PR, be sure to follow the checklist that is provided in the PR template. The checklist itself will be filled out by the reviewer.\n\n10. Your PR will be reviewed and comments may be given. In order to process a comment, simply make modifications to the same branch as before and push them to your repository. GitHub will automatically detect these changes and add them to your existing PR.\n\n11. When starting on a new PR in the future, make sure to always keep your local repo up to date:\n\n    ```bash\n    $ git fetch upstream\n    $ git merge upstream/main\n    ```\n\n    See also the following article for further explanation on \"[How to Keep a Downstream git Repository Current with Upstream Repository Changes](https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97 \"How to Keep a Downstream git Repository Current with Upstream Repository Changes\")\".\n\nIf at any time you want to work on a different issue, you can simply switch to a different branch, as explained in step 5.\n\n> Tip: Don't try to work on too many issues at once though, as it will be a lot more difficult to merge branches the longer they are open.\n\n## What not to do\n\nAlthough we greatly appreciate any and all contributions to the project, there are a few things that you should take into consideration:\n\n* The WebGoat project should not be used as a platform for advertisement for commercial tools, companies or individuals. Write-ups should be written with free and open-source tools in mind and commercial tools are typically not accepted, unless as a reference in the security tools section.\n* Unnecessary self-promotion of tools or blog posts is frowned upon. If you have a relation with on of the URLs or tools you are referencing, please state so in the PR so that we can verify that the reference is in line with the rest of the guide.\n\nPlease be sure to take a careful look at our [Code of Conduct](https://github.com/WebGoat/WebGoat/blob/master/CODE_OF_CONDUCT.md) for all the details.\n"
        },
        {
          "name": "COPYRIGHT.txt",
          "type": "blob",
          "size": 0.98046875,
          "content": "This file is part of WebGoat, an Open Web Application Security Project utility. For details, please see http://www.owasp.org/\n\nCopyright (c) 2002 - $today.year Bruce Mayhew\n\nThis program is free software; you can redistribute it and/or modify it under the terms of the\nGNU General Public License as published by the Free Software Foundation; either version 2 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without\neven the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program; if\nnot, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n02111-1307, USA.\n\nGetting Source ==============\n\nSource for this application is maintained at https://github.com/WebGoat/WebGoat, a repository for free software projects.\n"
        },
        {
          "name": "CREATE_RELEASE.md",
          "type": "blob",
          "size": 0.5556640625,
          "content": "## Release WebGoat\n\n### Version numbers\n\nFor WebGoat we use milestone releases first before we release the official version, we use `v2023.01` while tagging\nand 2023.01 in the `pom.xml`.\n\n### Release notes:\n\nUpdate the release notes with the correct version. Use `git shortlog -s -n --since \"JAN 06 2023\"` for the list of\ncommitters. In order to fetch the list of issues included use: `git log --graph --pretty='%C(auto)%d%Creset%s' v2023.4..origin/main`\n\n```\nmvn versions:set\n<< update release notes >>\nmvn verify\ngit commit ....\ngit tag v2023.01\ngit push --tags\n```\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.3583984375,
          "content": "# We need JDK as some of the lessons needs to be able to compile Java code\nFROM docker.io/eclipse-temurin:23-jdk-noble\n\nLABEL name=\"WebGoat: A deliberately insecure Web Application\"\nLABEL maintainer=\"WebGoat team\"\n\nRUN \\\n  useradd -ms /bin/bash webgoat && \\\n  chgrp -R 0 /home/webgoat && \\\n  chmod -R g=u /home/webgoat\n\nUSER webgoat\n\nCOPY --chown=webgoat target/webgoat-*.jar /home/webgoat/webgoat.jar\n\nEXPOSE 8080\nEXPOSE 9090\n\nENV TZ=Europe/Amsterdam\n\nWORKDIR /home/webgoat\nENTRYPOINT [ \"java\", \\\n   \"-Duser.home=/home/webgoat\", \\\n   \"-Dfile.encoding=UTF-8\", \\\n   \"--add-opens\", \"java.base/java.lang=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/java.util=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/java.lang.reflect=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/java.text=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.desktop/java.beans=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.desktop/java.awt.font=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/sun.nio.ch=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/java.io=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/java.util=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/sun.nio.ch=ALL-UNNAMED\", \\\n   \"--add-opens\", \"java.base/java.io=ALL-UNNAMED\", \\\n   \"-Drunning.in.docker=true\", \\\n   \"-jar\", \"webgoat.jar\", \"--server.address\", \"0.0.0.0\" ]\n\nHEALTHCHECK --interval=5s --timeout=3s \\\n  CMD curl --fail http://localhost:8080/WebGoat/actuator/health || exit 1\n"
        },
        {
          "name": "Dockerfile_desktop",
          "type": "blob",
          "size": 1.326171875,
          "content": "FROM lscr.io/linuxserver/webtop:ubuntu-xfce\nLABEL NAME = \"WebGoat: A deliberately insecure Web Application\"\nLABEL maintainer = \"WebGoat team\"\n\nWORKDIR /config\n\nCOPY target/webgoat-*.jar /config/webgoat.jar\nCOPY config/desktop/start_webgoat.sh /config/start_webgoat.sh\nCOPY config/desktop/start_zap.sh /config/start_zap.sh\nCOPY config/desktop/WebGoat.txt /config/Desktop/\n\nRUN \\\n apt-get update &&  \\\n apt-get --yes install vim nano gzip\n\nRUN \\\n case $(uname -m) in \\\n  x86_64) ARCH=x64;; \\\n  aarch64) ARCH=aarch64;; \\\n  *) ARCH=unknown;; \\\n esac && \\\n echo ${ARCH}\n\nRUN \\\n curl -LO https://github.com/zaproxy/zaproxy/releases/download/v2.15.0/ZAP_2.15.0_Linux.tar.gz && \\\n tar zfxv ZAP_2.15.0_Linux.tar.gz && \\\n rm -rf ZAP_2.15.0_Linux.tar.gz\n\nRUN \\\n case $(uname -m) in \\\n  x86_64) ARCH=x64;; \\\n  aarch64) ARCH=aarch64;; \\\n  *) ARCH=unknown;; \\\n esac && \\\n echo \"oeps == ${ARCH}==\" && \\\n curl -L https://github.com/adoptium/temurin23-binaries/releases/download/jdk-23.0.1%2B11/OpenJDK23U-jre_\"${ARCH}\"_linux_hotspot_23.0.1_11.tar.gz -o java.tar.gz && \\\n tar zfxv java.tar.gz && \\\n rm -rf java.tar.gz && \\\n chmod +x /config/start_webgoat.sh && \\\n chmod +x /config/start_zap.sh && \\\n echo \"JAVA_HOME=/config/jdk-23.0.1+11/\" >> .bash_aliases && \\\n echo \"PATH=$PATH:$JAVA_HOME/bin\" >> .bash_aliases\n\nENV JAVA_HOME=/config/jdk-23.0.1+11\n\nWORKDIR /config/Desktop\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 0.1806640625,
          "content": "# FAQ for development\n\n## Introduction\n\n### Integration tests fail\n\nTry to run the command in the console `java -jar ...` and remove `-Dlogging.pattern.console=` from the command line.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.9736328125,
          "content": "This file is part of WebGoat, an Open Web Application Security Project utility. For details, please see http://www.owasp.org/\n\nCopyright (c) 2002 - 2019 Bruce Mayhew\n\nThis program is free software; you can redistribute it and/or modify it under the terms of the\nGNU General Public License as published by the Free Software Foundation; either version 2 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without\neven the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program; if\nnot, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n02111-1307, USA.\n\nGetting Source ==============\n\nSource for this application is maintained at https://github.com/WebGoat/WebGoat, a repository for free software projects.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.0546875,
          "content": "Thank you for submitting a pull request to the WebGoat!\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.9228515625,
          "content": "# WebGoat: A deliberately insecure Web Application\n\n[![Build](https://github.com/WebGoat/WebGoat/actions/workflows/build.yml/badge.svg?branch=develop)](https://github.com/WebGoat/WebGoat/actions/workflows/build.yml)\n[![java-jdk](https://img.shields.io/badge/java%20jdk-23-green.svg)](https://jdk.java.net/)\n[![OWASP Labs](https://img.shields.io/badge/OWASP-Lab%20project-f7b73c.svg)](https://owasp.org/projects/)\n[![GitHub release](https://img.shields.io/github/release/WebGoat/WebGoat.svg)](https://github.com/WebGoat/WebGoat/releases/latest)\n[![Gitter](https://badges.gitter.im/OWASPWebGoat/community.svg)](https://gitter.im/OWASPWebGoat/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Discussions](https://img.shields.io/github/discussions/WebGoat/WebGoat)](https://github.com/WebGoat/WebGoat/discussions)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&logoColor=white)](https://conventionalcommits.org)\n\n# Introduction\n\nWebGoat is a deliberately insecure web application maintained by [OWASP](http://www.owasp.org/) designed to teach web\napplication security lessons.\n\nThis program is a demonstration of common server-side application flaws. The\nexercises are intended to be used by people to learn about application security and\npenetration testing techniques.\n\n**WARNING 1:** *While running this program your machine will be extremely\nvulnerable to attack. You should disconnect from the Internet while using\nthis program.*  WebGoat's default configuration binds to localhost to minimize\nthe exposure.\n\n**WARNING 2:** *This program is for educational purposes only. If you attempt\nthese techniques without authorization, you are very likely to get caught. If\nyou are caught engaging in unauthorized hacking, most companies will fire you.\nClaiming that you were doing security research will not work as that is the\nfirst thing that all hackers claim.*\n\n![WebGoat](docs/images/webgoat.png)\n\n# Installation instructions:\n\nFor more details check [the Contribution guide](/CONTRIBUTING.md)\n\n## 1. Run using Docker\n\nAlready have a browser and ZAP and/or Burp installed on your machine in this case you can run the WebGoat image directly using Docker.\n\nEvery release is also published on [DockerHub](https://hub.docker.com/r/webgoat/webgoat).\n\n```shell\ndocker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 webgoat/webgoat\n```\n\nFor some lessons you need the container run in the same timezone. For this you can set the TZ environment variable.\nE.g.\n\n```shell\ndocker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e TZ=America/Boise webgoat/webgoat\n```\n\nIf you want to use OWASP ZAP or another proxy, you can no longer use 127.0.0.1 or localhost. but\nyou can use custom host entries. For example:\n\n```shell\n127.0.0.1 www.webgoat.local www.webwolf.local\n```\n\nThen you can run the container with:\n\n```shell\ndocker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e WEBGOAT_HOST=www.webgoat.local -e WEBWOLF_HOST=www.webwolf.local -e TZ=America/Boise webgoat/webgoat\n```\n\nThen visit http://www.webgoat.local:8080/WebGoat/ and http://www.webwolf.local:9090/WebWolf/\n\n## 2. Run using Docker with complete Linux Desktop\n\nInstead of installing tools locally we have a complete Docker image based on running a desktop in your browser. This way you only have to run a Docker image which will give you the best user experience.\n\n```shell\ndocker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop\n```\n\n## 3. Standalone\n\nDownload the latest WebGoat release from [https://github.com/WebGoat/WebGoat/releases](https://github.com/WebGoat/WebGoat/releases)\n\n```shell\nexport TZ=Europe/Amsterdam # or your timezone\njava -Dfile.encoding=UTF-8 -jar webgoat-2023.8.jar\n```\n\nClick the link in the log to start WebGoat.\n\n### 3.1 Running on a different port\n\nIf for some reason you want to run WebGoat on a different port, you can do so by adding the following parameter:\n\n```shell\njava -jar webgoat-2023.8.jar --webgoat.port=8001 --webwolf.port=8002\n```\n\nFor a full overview of all the parameters you can use, please check the [WebGoat properties file](webgoat-container/src/main/resources/application-{webgoat, webwolf}.properties).\n\n## 4. Run from the sources\n\n### Prerequisites:\n\n* Java 17 or 21\n* Your favorite IDE\n* Git, or Git support in your IDE\n\nOpen a command shell/window:\n\n```Shell\ngit clone git@github.com:WebGoat/WebGoat.git\n```\n\nNow let's start by compiling the project.\n\n```Shell\ncd WebGoat\ngit checkout <<branch_name>>\n# On Linux/Mac:\n./mvnw clean install\n\n# On Windows:\n./mvnw.cmd clean install\n\n# Using docker or podman, you can than build the container locally\ndocker build -f Dockerfile . -t webgoat/webgoat\n```\n\nNow we are ready to run the project. WebGoat is using Spring Boot.\n\n```Shell\n# On Linux/Mac:\n./mvnw spring-boot:run\n# On Windows:\n./mvnw.cmd spring-boot:run\n\n```\n\n... you should be running WebGoat on http://localhost:8080/WebGoat momentarily.\n\nNote: The above link will redirect you to login page if you are not logged in. LogIn/Create account to proceed.\n\nTo change the IP address add the following variable to the `WebGoat/webgoat-container/src/main/resources/application.properties` file:\n\n```\nserver.address=x.x.x.x\n```\n\n## 4. Run with custom menu\n\nFor specialist only. There is a way to set up WebGoat with a personalized menu. You can leave out some menu categories or individual lessons by setting certain environment variables.\n\nFor instance running as a jar on a Linux/macOS it will look like this:\n\n```Shell\nexport TZ=Europe/Amsterdam # or your timezone\nexport EXCLUDE_CATEGORIES=\"CLIENT_SIDE,GENERAL,CHALLENGE\"\nexport EXCLUDE_LESSONS=\"SqlInjectionAdvanced,SqlInjectionMitigations\"\njava -jar target/webgoat-2023.8-SNAPSHOT.jar\n```\n\nOr in a docker run it would (once this version is pushed into docker hub) look like this:\n\n```Shell\ndocker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e EXCLUDE_CATEGORIES=\"CLIENT_SIDE,GENERAL,CHALLENGE\" -e EXCLUDE_LESSONS=\"SqlInjectionAdvanced,SqlInjectionMitigations\" webgoat/webgoat\n```\n\n"
        },
        {
          "name": "README_I18N.md",
          "type": "blob",
          "size": 1.806640625,
          "content": "# Multi language support in WebGoat\n\nWebGoat is mainly written in English, but it does support multiple languages.\n\n## Default language selection\n\n1. Current supported languages are: en, fr, de, nl\n2. The primary language is based on the language setting of the browser.\n3. If the language is not in the list of supported language, the language is English\n4. Once logged in, you can switch between the supported languages using a language dropdown menu on the main page\n   1. After switching a language you are back at the Introduction page\n\n## Adding a new language\n\nThe following steps are required when you want to add a new language\n\n1. Update [main_new.html](src/main/resources/webgoat/static/main_new.html)\n   1. Add the parts for showing the flag and providing the correct value for the flag= parameter\n      2.\n2. Add a flag image to src/main/resources/webgoat/static/css/img\n   1. See the main_new.html for a link to download flag resources\n3. Add a welcome page to the introduction lesson\n   1. Copy Introduction_.adoc to Introduction_es.adoc (if in this case you want to add Spanish)\n   2. Add a highlighted section that explains that most parts of WebGoat will still be in English and invite people to translate parts where it would be valuable\n4. Translate the main labels\n   1. Copy messages.properties to messages_es.properties (if in this case you want to add Spanish)\n   2. Translate the label values\n5. Optionally translate lessons by\n   1. Adding lang specifc adoc files in documentation folder of the lesson\n   2. Adding WebGoatLabels.properties of a specific language if you want to\n6. Run mvn clean to see if the LabelAndHintIntegration test passes\n7. Run WebGoat and verify that your own language and the other languages work as expected\n\nIf you only want to translate more for a certain language, you only need to do step 4-8\n"
        },
        {
          "name": "RELEASE_NOTES.md",
          "type": "blob",
          "size": 11.6162109375,
          "content": "# WebGoat release notes\n\n## Version 2023.8\n\n### 🚀 New functionality\n\n- Consistent environment values and url references (#1677)\n- Show directly requested file in requests overview\n- Show creating time in file upload overview\n\n### 🐞 Bug fixes\n\n- Fix startup message (#1687)\n- Fix/state of software supply chain links (#1683)\n- Fix WebWolf UI (#1686)\n\n### 🔄 Technical tasks\n\n- bump actions/setup-java from 3 to 4 (#1690)\n- bump commons-io:commons-io from 2.14.0 to 2.15.1 (#1689)\n- bump com.diffplug.spotless:spotless-maven-plugin (#1688)\n\n## Version 2023.5\n\n### New functionality\n\n- Implement JWT jku example (#1552)\n- Java 21 initial support (#1622)\n- improve MFAC lesson hint texts for a better user experience (#1424)\n- upgrade to Spring Boot version 3 (#1477)\n\n### Bug fixes\n\n- typo in WebGoad.txt (#1667)\n- search box moved and jwt encode/decode with little delay (#1664)\n- skip validation for JWT (#1663)\n- fixed issue in JWT test tool and added robot test (#1658)\n- Password reset link test condition more strict and move all WebWolf links to /WebWolf  (#1645)\n- fix servers id (#1619)\n- potential NPE in the stored XSS assignment\n- crypto basics broken links\n- fixes the default change in trailing slash matching and address the affected assignments\n- hint that was breaking the template, causing hints from different assignments to mix (#1424)\n- HijackSession lesson template deprecated Tymeleaf attribute\n- Fix NPE in IDOR lesson\n- Add new assignment IT tests\n- XSS mitigation\n- Stored Cross-Site Scripting Lesson\n- Add Assignment7 Tests\n- Fix IDOR lesson\n- remove steps from release script (#1509)\n- robotframework fails due to updated dependencies (#1508)\n- fix Java image inside Docker file The image now downloads the correct Java version based on the architecture.\n- Fix typo of HijackSession_content0.adoc\n- Restrict SSRF Regexes\n- update challenge code - Flags are now wired through a Spring config - Introduced Flag class - Removed Flags from the FlagController\n\n## Version 2023.4\n\n### New functionality\n\n- [#1422 Add Docker Linux Desktop variant with all tools installed](https://github.com/WebGoat/WebGoat/issues/1422). Thanks to the [OWASP WrongSecrets project](https://owasp.org/www-project-wrongsecrets/) we now have a Docker Linux desktop image with all the tools installed. No need to install any tools locally only run the new Docker image. See README.md for details on how to start it.\n- [#1411 JWT: looks that buy as Tom also works with alg:none](https://github.com/WebGoat/WebGoat/issues/1411).\n\n### Bug fixes\n\n- [#1410 WebWolf: JWT decode is broken](https://github.com/WebGoat/WebGoat/issues/1410).\n- [#1396 password_reset return 500 Error](https://github.com/WebGoat/WebGoat/issues/1396).\n- [#1379 Move XXE to A05:2021-Security Misconfiguration](https://github.com/WebGoat/WebGoat/issues/1379).\n\n## Version 2023.3\n\nWith great pleasure, we present you with a new release of WebGoat **2023.3**. Finally, it has been a while. This year starts with a new release of WebGoat. This year we will undoubtedly release more often. From this release on, we began to use a new versioning scheme (https://calver.org/#scheme).\n\nA big thanks to René Zubcevic and Àngel Ollé Blázquez for keeping the project alive this last year, and hopefully, we can make\nmany more releases this year.\n\n### New functionality\n\n- New year's resolution(2022): major refactoring of WebGoat to simplify the setup and improve building times.\n- Move away from multi-project setup:\n  * This has a huge performance benefit when building the application. Build time locally is now `Total time:  42.469 s` (depends on your local machine of course)\n  * No longer add Maven dependencies in several places\n  * H2 no longer needs to run as separate process, which solves the issue of WebWolf sharing and needing to configure the correct database connection.\n- More explicit paths in html files to reference `adoc` files, less magic.\n- Integrate WebWolf in WebGoat, the setup was way too complicated and needed configuration which could lead to mistakes and a not working application. This also simplifies the Docker configuration as there is only 1 Docker image.\n- Add WebWolf button in WebGoat\n- Move all lessons into `src/main/resources`\n- WebGoat selects a port dynamically when starting. It will still start of port 8080 it will try another port to ease the user experience.\n- WebGoat logs URL after startup: `Please browse to http://127.0.0.1:8080/WebGoat to get started...`\n- Simplify `Dockerfile` as we no longer need a script to start everything\n- Maven build now start WebGoat jar with Maven plugin to make sure we run against the latest build.\n- Added `Initializable` interface for a lesson, an assignment can implement this interface to set it up for a specific user and to reset the assignment back to its original state when a reset lesson occurs. See `BlindSendFileAssignment` for an example.\n- Integration tests now use the same user. This saves a lot of time as before every test used a different user which triggered the Flyway migration to set up the database schema for the user. This migration took a lot of time.\n- Updated introduction lesson to WebWolf.\n- Added language switch for support for multiple languages.\n- Removed logic to start WebGoat on a random port when port `8080` is taken. We would loop until we found a free port. We simplified this to just start on the specified port.\n- Add Google formatter for all our code, a PR now checks whether the code adheres to the standard.\n- Renaming of all packages and folders.\n- [#1039 New OWASP Top 10](https://github.com/WebGoat/WebGoat/issues/1093)\n- [#1065 New lesson about logging](https://github.com/WebGoat/WebGoat/issues/1065)\n\n### Bug fixes\n\n- [#1193 Vulnerable component lesson - java.desktop does not \"opens java.beans\" to unnamed module](https://github.com/WebGoat/WebGoat/issues/1193)\n- [#1176 Minor: XXE lesson 12 patch not reset by 'lesson reset' while it IS reset by leaving/returning to lesson](https://github.com/WebGoat/WebGoat/issues/1176)\n- [#1134 \"Exploiting XStream\" assignment does not work](https://github.com/WebGoat/WebGoat/issues/1134)\n- [#1130 Typo: Using Indrect References](https://github.com/WebGoat/WebGoat/issues/1130)\n- [#1101 SQL lesson not correct](https://github.com/WebGoat/WebGoat/issues/1101)\n- [#1079 startup.sh issues of WebWolf - cannot connect to the WebGoat DB](https://github.com/WebGoat/WebGoat/issues/1079)\n- [#1379 Move XXE to A05:2021-_Security_ Misconfiguration](https://github.com/WebGoat/WebGoat/issues/1379)\n- [#1298 SocketUtils is deprecated and will be removed in Spring Security 6](https://github.com/WebGoat/WebGoat/issues/1298)\n- [#1248 Rewrite the WebWolf Introduction Lesson with the new changes](https://github.com/WebGoat/WebGoat/issues/1248)\n- [#1200 Type cast error in sample code at JWT token section](https://github.com/WebGoat/WebGoat/issues/1200)\n- [#1173 --server.port=9000 is not respected on Windows (both cmd as Powershell)](https://github.com/WebGoat/WebGoat/issues/1173)\n- [#1103 (A1) path traversel lesson 7 seems broken](https://github.com/WebGoat/WebGoat/issues/1103)\n- [#986 - User registration not persistant](https://github.com/WebGoat/WebGoat/issues/986)\n\n## Version 8.2.2\n\n### New functionality\n\n- Docker image now supports nginx when browsing to http://localhost a landing page is shown.\n\n### Bug fixes\n\n- [#1039 jwt-7-Code review](https://github.com/WebGoat/WebGoat/issues/1039)\n- [#1031 SQL Injection (intro) 5: Data Control Language (DCL) the wiki's solution is not correct](https://github.com/WebGoat/WebGoat/issues/1031)\n- [#1027 Webgoat 8.2.1 Vulnerable_Components_12 Shows internal server error](https://github.com/WebGoat/WebGoat/issues/1027)\n\n## Version 8.2.1\n\n### New functionality\n\n- New Docker image for arm64 architecture is now available (for Apple M1)\n\n## Version 8.2.0\n\n### New functionality\n\n- Add new zip slip lesson (part of path traversal)\n- SQL lessons are now separate for each user, database are now per user and no longer shared across users\n- Moved to Java 15 & Spring Boot 2.4 & moved to JUnit 5\n\n### Bug fixes\n\n- [#974 SQL injection Intro 5 not solvable](https://github.com/WebGoat/WebGoat/issues/974)\n- [#962 SQL-Lesson 5 (Advanced) Solvable with wrong anwser](https://github.com/WebGoat/WebGoat/issues/962)\n- [#961 SQl-Injection lesson 4 not deleting created row](https://github.com/WebGoat/WebGoat/issues/961)\n- [#949 Challenge: Admin password reset always solvable](https://github.com/WebGoat/WebGoat/issues/949)\n- [#923 - Upgrade to Java 15](https://github.com/WebGoat/WebGoat/issues/923)\n- [#922 - Vulnerable components lesson](https://github.com/WebGoat/WebGoat/issues/922)\n- [#891 - Update the OWASP website with the new all-in-one Docker container](https://github.com/WebGoat/WebGoat/issues/891)\n- [#844 - Suggestion: Update navigation](https://github.com/WebGoat/WebGoat/issues/844)\n- [#843 - Bypass front-end restrictions: Field restrictions - confusing text in form](https://github.com/WebGoat/WebGoat/issues/843)\n- [#841 - XSS - Reflected XSS confusing instruction and success messages](https://github.com/WebGoat/WebGoat/issues/841)\n- [#839 - SQL Injection (mitigation) Order by clause confusing](https://github.com/WebGoat/WebGoat/issues/839)\n- [#838 - SQL mitigation (filtering) can only be passed by updating table](https://github.com/WebGoat/WebGoat/issues/838)\n\n## Contributors\n\nSpecial thanks to the following contributors providing us with a pull request:\n\n- nicholas-quirk\n- VijoPlays\n- aolle\n- trollingHeifer\n- maximmasiutin\n- toshihue\n- avivmu\n- KellyMarchewa\n- NatasG\n- gabe-sky\n\n## Version 8.1.0\n\n### New functionality\n\n- Added new lessons for cryptography and path-traversal\n- Extra content added to the XXE lesson\n- Explanation of the assignments will be part of WebGoat, in this release we added detailed descriptions on how to solve the XXE lesson. In the upcoming releases new explanations will be added. If you want to contribute please create a pull request on Github.\n- Docker improvements + docker stack for complete container with nginx\n- Included JWT token decoding and generation, since jwt.io does not support None anymore\n\n### Bug fixes\n\n- [#743 - Character encoding errors](https://github.com/WebGoat/WebGoat/issues/743)\n- [#811 -  Flag submission fails](https://github.com/WebGoat/WebGoat/issues/811)\n- [#810 - Scoreboard for challenges shows csrf users](https://github.com/WebGoat/WebGoat/issues/810)\n- [#788 - strange copy in constructor](https://github.com/WebGoat/WebGoat/issues/788)\n- [#760 - Execution of standalone jar fails (Flyway migration step](https://github.com/WebGoat/WebGoat/issues/760)\n- [#766 - Unclear objective of vulnerable components practical assignment](https://github.com/WebGoat/WebGoat/issues/766)\n- [#708 - Seems like the home directory of WebGoat always use @project.version@](https://github.com/WebGoat/WebGoat/issues/708)\n- [#719 - WebGoat: 'Contact Us' email link in header is not correctly set](https://github.com/WebGoat/WebGoat/issues/719)\n- [#715 - Reset lesson doesn't reset the \"HTML lesson\" => forms stay succesful](https://github.com/WebGoat/WebGoat/issues/715)\n- [#725 - Vulnerable Components lesson 12 broken due to too new dependency](https://github.com/WebGoat/WebGoat/issues/725)\n- [#716 -  On M26 @project.version@ is not \"interpreted\" #7](https://github.com/WebGoat/WebGoat/issues/716)\n- [#721 couldn't be able to run CSRF lesson 3: Receive Whitelabel Error Page](https://github.com/WebGoat/WebGoat/issues/721)\n- [#724 - Dead link in VulnerableComponents lesson 11](https://github.com/WebGoat/WebGoat/issues/724)\n\n## Contributors\n\nSpecial thanks to the following contributors providing us with a pull request:\n\n- Satoshi SAKAO\n- Philippe Lafoucrière\n- Cotonne\n- Tiago Mussi\n- thegoodcrumpets\n- Atharva Vaidya\n- torleif\n- August Detlefsen\n- Choe Hyeong Jin\n\nAnd everyone who provided feedback through Github.\n\nTeam WebGoat\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvn-debug",
          "type": "blob",
          "size": 0.1279296875,
          "content": "export MAVEN_OPTS=\"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\"\n./mvnw $@\n"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 9.833984375,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven2 Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`which java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.4541015625,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven2 Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\nif exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n\nFOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\nif exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n\nexit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 29.451171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>3.4.1</version>\n  </parent>\n\n  <groupId>org.owasp.webgoat</groupId>\n  <artifactId>webgoat</artifactId>\n  <version>2024.2-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>WebGoat</name>\n  <description>WebGoat, a deliberately insecure Web Application</description>\n  <url>https://github.com/WebGoat/WebGoat</url>\n  <inceptionYear>2006</inceptionYear>\n  <organization>\n    <name>OWASP</name>\n    <url>https://github.com/WebGoat/WebGoat/</url>\n  </organization>\n  <licenses>\n    <license>\n      <name>GNU General Public License, version 2</name>\n      <url>https://www.gnu.org/licenses/gpl-2.0.txt</url>\n    </license>\n  </licenses>\n\n  <developers>\n    <developer>\n      <id>nbaars</id>\n      <name>Nanne Baars</name>\n      <email>nanne.baars@owasp.org</email>\n      <organizationUrl>https://github.com/nbaars</organizationUrl>\n      <timezone>Europe/Amsterdam</timezone>\n    </developer>\n    <developer>\n      <id>zubcevic</id>\n      <name>René Zubcevic</name>\n      <email>rene.zubcevic@owasp.org</email>\n    </developer>\n    <developer>\n      <id>aolle</id>\n      <name>Àngel Ollé Blázquez</name>\n      <email>angel@olleb.com</email>\n    </developer>\n  </developers>\n\n  <scm>\n    <connection>scm:git:git@github.com:WebGoat/WebGoat.git</connection>\n    <developerConnection>scm:git:git@github.com:WebGoat/WebGoat.git</developerConnection>\n    <tag>HEAD</tag>\n    <url>https://github.com/WebGoat/WebGoat</url>\n  </scm>\n\n  <issueManagement>\n    <system>Github Issues</system>\n    <url>https://github.com/WebGoat/WebGoat/issues</url>\n  </issueManagement>\n\n  <properties>\n    <!-- Shared properties with plugins and version numbers across submodules-->\n    <asciidoctorj.version>3.0.0</asciidoctorj.version>\n    <bootstrap.version>5.3.3</bootstrap.version>\n    <cglib.version>3.3.0</cglib.version>\n    <!-- do not update necessary for lesson -->\n    <checkstyle.version>3.6.0</checkstyle.version>\n    <commons-collections.version>3.2.1</commons-collections.version>\n    <commons-compress.version>1.27.1</commons-compress.version>\n    <commons-io.version>2.18.0</commons-io.version>\n    <commons-lang3.version>3.14.0</commons-lang3.version>\n    <commons-text.version>1.13.0</commons-text.version>\n    <guava.version>33.4.0-jre</guava.version>\n    <jacoco.version>0.8.11</jacoco.version>\n    <java.version>23</java.version>\n    <jaxb.version>2.3.1</jaxb.version>\n    <jjwt.version>0.9.1</jjwt.version>\n    <jose4j.version>0.9.3</jose4j.version>\n    <jquery.version>3.7.1</jquery.version>\n    <jsoup.version>1.18.3</jsoup.version>\n    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>\n    <maven-failsafe-plugin.version>2.22.0</maven-failsafe-plugin.version>\n    <maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>\n    <maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>\n    <maven-source-plugin.version>3.1.0</maven-source-plugin.version>\n    <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>\n    <maven.compiler.proc>full</maven.compiler.proc>\n    <maven.compiler.source>23</maven.compiler.source>\n    <maven.compiler.target>23</maven.compiler.target>\n\n    <pmd.version>3.15.0</pmd.version>\n    <!-- Use UTF-8 Encoding -->\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <thymeleaf.version>3.1.2.RELEASE</thymeleaf.version>\n    <waittimeForServerStart>60</waittimeForServerStart>\n    <webdriver.version>5.9.2</webdriver.version>\n    <webgoat.context>/</webgoat.context>\n    <webgoat.sslenabled>false</webgoat.sslenabled>\n    <webjars-locator-core.version>0.59</webjars-locator-core.version>\n    <webwolf.context>/</webwolf.context>\n    <wiremock.version>3.10.0</wiremock.version>\n    <xml-resolver.version>1.2</xml-resolver.version>\n    <xstream.version>1.4.5</xstream.version>\n    <!-- do not update necessary for lesson -->\n    <zxcvbn.version>1.9.0</zxcvbn.version>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-exec</artifactId>\n        <version>1.4.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.asciidoctor</groupId>\n        <artifactId>asciidoctorj</artifactId>\n        <version>${asciidoctorj.version}</version>\n      </dependency>\n      <dependency>\n        <!-- jsoup HTML parser library @ https://jsoup.org/ -->\n        <groupId>org.jsoup</groupId>\n        <artifactId>jsoup</artifactId>\n        <version>${jsoup.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.nulab-inc</groupId>\n        <artifactId>zxcvbn</artifactId>\n        <version>${zxcvbn.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.thoughtworks.xstream</groupId>\n        <artifactId>xstream</artifactId>\n        <version>${xstream.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>cglib</groupId>\n        <artifactId>cglib-nodep</artifactId>\n        <version>${cglib.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>xml-resolver</groupId>\n        <artifactId>xml-resolver</artifactId>\n        <version>${xml-resolver.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.jsonwebtoken</groupId>\n        <artifactId>jjwt</artifactId>\n        <version>${jjwt.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.auth0</groupId>\n        <artifactId>jwks-rsa</artifactId>\n        <version>0.22.1</version>\n      </dependency>\n      <!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->\n      <dependency>\n        <groupId>com.auth0</groupId>\n        <artifactId>java-jwt</artifactId>\n        <version>4.4.0</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.guava</groupId>\n        <artifactId>guava</artifactId>\n        <version>${guava.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-io</groupId>\n        <artifactId>commons-io</artifactId>\n        <version>${commons-io.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-text</artifactId>\n        <version>${commons-text.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.bitbucket.b_c</groupId>\n        <artifactId>jose4j</artifactId>\n        <version>${jose4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.webjars</groupId>\n        <artifactId>bootstrap</artifactId>\n        <version>${bootstrap.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.webjars</groupId>\n        <artifactId>jquery</artifactId>\n        <version>${jquery.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.webjars</groupId>\n        <artifactId>webjars-locator-core</artifactId>\n        <version>${webjars-locator-core.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.wiremock</groupId>\n        <artifactId>wiremock-standalone</artifactId>\n        <version>${wiremock.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.github.bonigarcia</groupId>\n        <artifactId>webdrivermanager</artifactId>\n        <version>${webdriver.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-compress</artifactId>\n        <version>${commons-compress.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.jruby</groupId>\n        <artifactId>jruby</artifactId>\n        <version>9.4.9.0</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-exec</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-validation</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.projectlombok</groupId>\n      <artifactId>lombok</artifactId>\n      <version>1.18.36</version>\n      <scope>provided</scope>\n      <optional>true</optional>\n    </dependency>\n    <dependency>\n      <groupId>org.testcontainers</groupId>\n      <artifactId>testcontainers</artifactId>\n      <version>1.20.4</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.testcontainers</groupId>\n      <artifactId>junit-jupiter</artifactId>\n      <version>1.20.4</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>javax.xml.bind</groupId>\n      <artifactId>jaxb-api</artifactId>\n      <version>${jaxb.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.flywaydb</groupId>\n      <artifactId>flyway-core</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.flywaydb</groupId>\n      <artifactId>flyway-database-hsqldb</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.asciidoctor</groupId>\n      <artifactId>asciidoctorj</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-data-jpa</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-security</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-thymeleaf</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-oauth2-client</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.thymeleaf.extras</groupId>\n      <artifactId>thymeleaf-extras-springsecurity6</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>jakarta.servlet</groupId>\n      <artifactId>jakarta.servlet-api</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.hsqldb</groupId>\n      <artifactId>hsqldb</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.jsoup</groupId>\n      <artifactId>jsoup</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>com.nulab-inc</groupId>\n      <artifactId>zxcvbn</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>com.thoughtworks.xstream</groupId>\n      <artifactId>xstream</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>cglib</groupId>\n      <artifactId>cglib-nodep</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>xml-resolver</groupId>\n      <artifactId>xml-resolver</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>io.jsonwebtoken</groupId>\n      <artifactId>jjwt</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>com.auth0</groupId>\n      <artifactId>jwks-rsa</artifactId>\n    </dependency>\n    <!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->\n    <dependency>\n      <groupId>com.auth0</groupId>\n      <artifactId>java-jwt</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>com.google.guava</groupId>\n      <artifactId>guava</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>commons-io</groupId>\n      <artifactId>commons-io</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-lang3</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-text</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.bitbucket.b_c</groupId>\n      <artifactId>jose4j</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.webjars</groupId>\n      <artifactId>bootstrap</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.webjars</groupId>\n      <artifactId>jquery</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.webjars</groupId>\n      <artifactId>webjars-locator-core</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>jakarta.xml.bind</groupId>\n      <artifactId>jakarta.xml.bind-api</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>com.sun.xml.bind</groupId>\n      <artifactId>jaxb-impl</artifactId>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.github.terma</groupId>\n      <artifactId>javaniotcpproxy</artifactId>\n      <version>1.6</version>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.wiremock</groupId>\n      <artifactId>wiremock-standalone</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>io.rest-assured</groupId>\n      <artifactId>rest-assured</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-properties-migrator</artifactId>\n      <scope>runtime</scope>\n    </dependency>\n  </dependencies>\n\n  <repositories>\n    <repository>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n      <id>central</id>\n      <url>https://repo.maven.apache.org/maven2</url>\n    </repository>\n  </repositories>\n  <pluginRepositories>\n    <pluginRepository>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n      <id>central</id>\n      <url>https://repo.maven.apache.org/maven2</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n        <configuration>\n          <excludeDevtools>true</excludeDevtools>\n          <executable>true</executable>\n          <mainClass>org.owasp.webgoat.server.StartWebGoat</mainClass>\n          <!-- See http://docs.spring.io/spring-boot/docs/current/reference/html/howto-build.html#howto-extract-specific-libraries-when-an-executable-jar-runs -->\n          <requiresUnpack>\n            <dependency>\n              <groupId>org.asciidoctor</groupId>\n              <artifactId>asciidoctorj</artifactId>\n            </dependency>\n          </requiresUnpack>\n        </configuration>\n        <executions>\n          <execution>\n            <goals>\n              <goal>repackage</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>build-helper-maven-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>add-integration-test-source-as-test-sources</id>\n            <goals>\n              <goal>add-test-source</goal>\n            </goals>\n            <phase>generate-test-sources</phase>\n            <configuration>\n              <sources>\n                <source>src/it/java</source>\n              </sources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-failsafe-plugin</artifactId>\n        <configuration>\n          <environmentVariables>\n            <WEBGOAT_SSLENABLED>${webgoat.sslenabled}</WEBGOAT_SSLENABLED>\n            <WEBGOAT_HOST>127.0.0.1</WEBGOAT_HOST>\n            <WEBGOAT_PORT>${webgoat.port}</WEBGOAT_PORT>\n            <WEBGOAT_CONTEXT>${webgoat.context}</WEBGOAT_CONTEXT>\n            <WEBWOLF_HOST>127.0.0.1</WEBWOLF_HOST>\n            <WEBWOLF_PORT>${webwolf.port}</WEBWOLF_PORT>\n            <WEBWOLF_CONTEXT>${webwolf.context}</WEBWOLF_CONTEXT>\n          </environmentVariables>\n          <systemPropertyVariables>\n            <logback.configurationFile>${basedir}/src/test/resources/logback-test.xml</logback.configurationFile>\n          </systemPropertyVariables>\n          <argLine>-Xmx512m</argLine>\n          <includes>org/owasp/webgoat/*Test</includes>\n        </configuration>\n        <executions>\n          <execution>\n            <id>integration-test</id>\n            <goals>\n              <goal>integration-test</goal>\n            </goals>\n          </execution>\n          <execution>\n            <id>verify</id>\n            <goals>\n              <goal>verify</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <version>${maven-surefire-plugin.version}</version>\n        <configuration>\n          <forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds>\n          <!-- Necessary for vulnerable components lesson -->\n          <argLine>--add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED\n          --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED\n          --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED\n          --add-opens java.base/java.text=ALL-UNNAMED --add-opens java.desktop/java.awt.font=ALL-UNNAMED\n          --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED</argLine>\n          <excludes>\n            <exclude>**/*IntegrationTest.java</exclude>\n          </excludes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-checkstyle-plugin</artifactId>\n        <version>${checkstyle.version}</version>\n        <configuration>\n          <consoleOutput>true</consoleOutput>\n          <failsOnError>true</failsOnError>\n          <configLocation>config/checkstyle/checkstyle.xml</configLocation>\n          <suppressionsLocation>config/checkstyle/suppressions.xml</suppressionsLocation>\n          <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>com.diffplug.spotless</groupId>\n        <artifactId>spotless-maven-plugin</artifactId>\n        <version>2.41.1</version>\n        <configuration>\n          <formats>\n            <format>\n              <includes>\n                <include>.gitignore</include>\n              </includes>\n              <trimTrailingWhitespace></trimTrailingWhitespace>\n              <endWithNewline></endWithNewline>\n              <indent>\n                <tabs>true</tabs>\n                <spacesPerTab>4</spacesPerTab>\n              </indent>\n            </format>\n          </formats>\n          <markdown>\n            <includes>\n              <include>**/*.md</include>\n            </includes>\n            <flexmark></flexmark>\n          </markdown>\n          <java>\n            <includes>\n              <include>src/main/java/**/*.java</include>\n              <include>src/test/java/**/*.java</include>\n              <include>src/it/java/**/*.java</include>\n            </includes>\n            <removeUnusedImports></removeUnusedImports>\n            <googleJavaFormat>\n              <style>GOOGLE</style>\n              <reflowLongStrings>true</reflowLongStrings>\n            </googleJavaFormat>\n          </java>\n          <pom>\n            <sortPom>\n              <encoding>UTF-8</encoding>\n              <lineSeparator>${line.separator}</lineSeparator>\n              <expandEmptyElements>true</expandEmptyElements>\n              <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>\n              <keepBlankLines>true</keepBlankLines>\n              <nrOfIndentSpace>2</nrOfIndentSpace>\n              <indentBlankLines>false</indentBlankLines>\n              <indentSchemaLocation>false</indentSchemaLocation>\n              <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>\n              <sortProperties>true</sortProperties>\n              <sortModules>true</sortModules>\n              <sortExecutions>true</sortExecutions>\n            </sortPom>\n          </pom>\n        </configuration>\n        <executions>\n          <execution>\n            <goals>\n              <goal>check</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-enforcer-plugin</artifactId>\n        <version>3.5.0</version>\n        <executions>\n          <execution>\n            <id>restrict-log4j-versions</id>\n            <goals>\n              <goal>enforce</goal>\n            </goals>\n            <phase>validate</phase>\n            <configuration>\n              <rules>\n                <bannedDependencies>\n                  <excludes combine.children=\"append\">\n                    <exclude>org.apache.logging.log4j:log4j-core</exclude>\n                  </excludes>\n                </bannedDependencies>\n              </rules>\n              <fail>true</fail>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n\n  <profiles>\n    <profile>\n      <id>local-server</id>\n    </profile>\n    <profile>\n      <id>start-server</id>\n      <activation>\n        <activeByDefault>true</activeByDefault>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>build-helper-maven-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>reserve-container-port</id>\n                <goals>\n                  <goal>reserve-network-port</goal>\n                </goals>\n                <phase>process-resources</phase>\n                <configuration>\n                  <portNames>\n                    <portName>webgoat.port</portName>\n                    <portName>webwolf.port</portName>\n                  </portNames>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.honton.chas</groupId>\n            <artifactId>process-exec-maven-plugin</artifactId>\n            <version>0.9.2</version>\n            <executions>\n              <execution>\n                <id>start-jar</id>\n                <goals>\n                  <goal>start</goal>\n                </goals>\n                <phase>pre-integration-test</phase>\n\n                <configuration>\n                  <workingDir>${project.build.directory}</workingDir>\n                  <environment>\n                    <WEBGOAT_SSLENABLED>${webgoat.sslenabled}</WEBGOAT_SSLENABLED>\n                    <WEBGOAT_HOST>127.0.0.1</WEBGOAT_HOST>\n                    <WEBGOAT_PORT>${webgoat.port}</WEBGOAT_PORT>\n                    <WEBGOAT_CONTEXT>${webgoat.context}</WEBGOAT_CONTEXT>\n                    <WEBWOLF_HOST>127.0.0.1</WEBWOLF_HOST>\n                    <WEBWOLF_PORT>${webwolf.port}</WEBWOLF_PORT>\n                    <WEBWOLF_CONTEXT>${webwolf.context}</WEBWOLF_CONTEXT>\n                  </environment>\n                  <arguments>\n                    <argument>java</argument>\n                    <argument>-jar</argument>\n                    <argument>-Dlogging.pattern.console=</argument>\n                    <argument>-Dwebgoat.server.directory=${java.io.tmpdir}/webgoat_${webgoat.port}</argument>\n                    <argument>-Dwebgoat.user.directory=${java.io.tmpdir}/webgoat_${webgoat.port}</argument>\n                    <argument>-Dspring.main.banner-mode=off</argument>\n                    <argument>--add-opens</argument>\n                    <argument>java.base/java.lang=ALL-UNNAMED</argument>\n                    <argument>--add-opens</argument>\n                    <argument>java.base/java.util=ALL-UNNAMED</argument>\n                    <argument>--add-opens</argument>\n                    <argument>java.base/java.lang.reflect=ALL-UNNAMED</argument>\n                    <argument>--add-opens</argument>\n                    <argument>java.desktop/java.beans=ALL-UNNAMED</argument>\n                    <argument>--add-opens</argument>\n                    <argument>java.base/sun.nio.ch=ALL-UNNAMED</argument>\n                    <argument>--add-opens</argument>\n                    <argument>java.base/java.io=ALL-UNNAMED</argument>\n                    <argument>--add-opens</argument>\n                    <argument>java.base/java.util=ALL-UNNAMED</argument>\n                    <argument>${project.build.directory}/webgoat-${project.version}.jar</argument>\n                  </arguments>\n                  <waitForInterrupt>false</waitForInterrupt>\n                  <waitAfterLaunch>${waittimeForServerStart}</waitAfterLaunch>\n                  <healthCheckUrl>http://127.0.0.1:${webgoat.port}${webgoat.context}login</healthCheckUrl>\n                </configuration>\n              </execution>\n              <execution>\n                <id>stop-jar-process</id>\n                <goals>\n                  <goal>stop-all</goal>\n                </goals>\n                <phase>post-integration-test</phase>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>owasp</id>\n      <activation>\n        <activeByDefault>false</activeByDefault>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.owasp</groupId>\n            <artifactId>dependency-check-maven</artifactId>\n            <configuration>\n              <failBuildOnCVSS>7</failBuildOnCVSS>\n              <skipProvidedScope>false</skipProvidedScope>\n              <skipRuntimeScope>false</skipRuntimeScope>\n              <suppressionFiles>\n                <!--suppress UnresolvedMavenProperty -->\n                <suppressionFile>${maven.multiModuleProjectDirectory}/config/dependency-check/project-suppression.xml</suppressionFile>\n              </suppressionFiles>\n            </configuration>\n            <executions>\n              <execution>\n                <goals>\n                  <goal>check</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <!-- run with: mvn test -Pcoverage -->\n      <id>coverage</id>\n      <activation>\n        <activeByDefault>false</activeByDefault>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <version>${maven-surefire-plugin.version}</version>\n            <configuration>\n              <argLine>--add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED\n          --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED\n          --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED\n          --add-opens java.base/java.text=ALL-UNNAMED --add-opens java.desktop/java.awt.font=ALL-UNNAMED\n          ${surefire.jacoco.args}</argLine>\n              <excludes>\n                <exclude>**/*IntegrationTest.java</exclude>\n                <exclude>src/it/java</exclude>\n                <exclude>org/owasp/webgoat/*Test</exclude>\n              </excludes>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.jacoco</groupId>\n            <artifactId>jacoco-maven-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>before-unit-test</id>\n                <goals>\n                  <goal>prepare-agent</goal>\n                </goals>\n                <configuration>\n                  <destFile>${project.build.directory}/jacoco/jacoco-ut.exec</destFile>\n                  <propertyName>surefire.jacoco.args</propertyName>\n                </configuration>\n              </execution>\n              <execution>\n                <id>check</id>\n                <goals>\n                  <goal>check</goal>\n                </goals>\n                <configuration>\n                  <rules>\n                    <rule>\n                      <element>BUNDLE</element>\n                      <limits>\n                        <limit>\n                          <counter>CLASS</counter>\n                          <value>COVEREDCOUNT</value>\n                          <minimum>0.6</minimum>\n                        </limit>\n                      </limits>\n                    </rule>\n                  </rules>\n                  <dataFile>${project.build.directory}/jacoco/jacoco-ut.exec</dataFile>\n                </configuration>\n              </execution>\n              <execution>\n                <id>after-unit-test</id>\n                <goals>\n                  <goal>report</goal>\n                </goals>\n                <phase>test</phase>\n                <configuration>\n                  <dataFile>${project.build.directory}/jacoco/jacoco-ut.exec</dataFile>\n                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n  </profiles>\n</project>\n"
        },
        {
          "name": "robot",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}