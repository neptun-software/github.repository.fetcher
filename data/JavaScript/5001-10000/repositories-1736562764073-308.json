{
  "metadata": {
    "timestamp": 1736562764073,
    "page": 308,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "NopeCHALLC/nopecha-extension",
      "stars": 7019,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "/archive/\n/dist/\n/.idea/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2022 NopeCHA\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.990234375,
          "content": "# NopeCHA Chrome Extension & Firefox Add-on\n\n![PyPI - Version](https://img.shields.io/pypi/v/nopecha?label=PyPI&link=https%3A%2F%2Fnopecha.com&link=https%3A%2F%2Fnopecha.com%2Fpypi)\n![NPM Version](https://img.shields.io/npm/v/nopecha?label=NPM&link=https%3A%2F%2Fnopecha.com&link=https%3A%2F%2Fnopecha.com%2Fnpm)\n![GitHub Release](https://img.shields.io/github/v/release/NopeCHALLC/nopecha-extension?label=Extension%20Release&color=4a4&link=https%3A%2F%2Fnopecha.com&link=https%3A%2F%2Fnopecha.com%2Fgithub)\n![Chrome Web Store Version](https://img.shields.io/chrome-web-store/v/dknlfmjaanfblgfdfebhijalfmhmjjjo?label=Chrome%20Web%20Store&color=4a4&link=https%3A%2F%2Fnopecha.com&link=https%3A%2F%2Fnopecha.com%2Fchrome)\n![Mozilla Add-on Version](https://img.shields.io/amo/v/noptcha?label=Mozilla%20Add-on&color=4a4&link=https%3A%2F%2Fnopecha.com&link=https%3A%2F%2Fnopecha.com%2Ffirefox)\n\nNopeCHA is a **free-to-use** automated CAPTCHA solver, compatible with multiple CAPTCHA types, and powered by advanced deep learning models via the [NopeCHA API](https://developers.nopecha.com).\n\n### Why NopeCHA?\n\nStaying up-to-date with frequently changing CAPTCHA challenges can be tedious.\nThat's why we've developed browser extensions for both Chrome and Firefox.\nThese extensions receive regular updates to support the latest CAPTCHA challenges, ensuring uninterrupted service for your automation scripts.\nOnce installed, NopeCHA autonomously handles CAPTCHAs, allowing you to focus on more important tasks.\n\n### Getting Started\n\nFor developers interested in integrating NopeCHA into their projects, please consult our [API documentation](https://developers.nopecha.com/guides/extension_advanced).\n\nTo test the extension:\n- [Chrome Extension](https://www.nopecha.com/chrome)\n- [Firefox Add-on](https://www.nopecha.com/firefox)\n\n### Supported CAPTCHA Types\n\nHere's a sample of CAPTCHA types supported by NopeCHA, with more being added regularly:\n\n| All versions of reCAPTCHA | Most versions of FunCAPTCHA |\n:-:|:-:\n![reCAPTCHA](assets/recaptcha.gif?raw=true) | ![FunCAPTCHA](assets/funcaptcha.gif?raw=true)\n\n| 300+ Types of Text CAPTCHA | Cloudflare Turnstile |\n:-:|:-:|\n![Text-based CAPTCHA](assets/textcaptcha.gif?raw=true) | ![Cloudflare Turnstile](assets/turnstile.gif?raw=true)\n\n| AWS WAF CAPTCHA | And all other CAPTCHAs |\n:-:|:-:\n![AWS WAF CAPTCHA](assets/awscaptcha.gif?raw=true) | ![CAPTCHA](assets/collage.png?raw=true)\n\n- [View all supported CAPTCHAs](https://developers.nopecha.com/captcha/)\n\n<br>\n\n# What's Next in 2025\nWe're excited to announce **computer use** coming to the NopeCHA API. This new feature will empower developers to send commands and a screenshot of their computer to the API, enabling our model to analyze the input and respond with precise actions. From data scraping to task automation, the updated API will handle a diverse range of operations‚Äîgoing beyond CAPTCHA solving.\n\nWith a strong focus on efficiency and speed, this feature will launch in Q1 2025. Developers can leverage it seamlessly, with no concerns about added costs or delays. Stay tuned for more details and updates!\n\n![NopeCHA](assets/nopecha_1600x900.jpg?raw=true)\n\n<br>\n\n# Important Update: Transition to Closed-Source in 2023\n\n### What's New?\n\nStarting 2023, NopeCHA has transitioned to a closed-source model.\nDespite this, we will continue to publish the latest builds under [Releases](../../releases).\n\n### Technical Advancements\n\nBehind the scenes, NopeCHA is undergoing intense training and refinement.\nOur neural network architecture continuously adapts to new challenges.\nWhether it's decoding obscure characters or solving complex image-to-image tasks, NopeCHA is built for it.\n\n### The Road Ahead\n\nWe're committed to refining our algorithms and expanding our library of solved CAPTCHAs.\nWhile our advanced machine learning models give us a definitive edge, the story isn't over.\nWe will continue to push the boundaries of what's possible in CAPTCHA-solving technology.\n\nThanks for your support, and remember‚Äîin a world full of CAPTCHAs, be a NopeCHA. üòé‚úåÔ∏è\n\n<br>\n\n![NopeCHA Digital Gym](assets/nopecha_banner_0.webp?raw=true)\n\n<br>\n\n# Following sections are DEPRECATED\n> :warning: **Archival purposes only**\n\n## Usage Examples\n> :warning: **[Outdated examples due to Colab updates]**:\n\nWhile it's possible to use NopeCHA in Colab, we're not actively supporting it.\nIf you're interested in using NopeCHA in Colab, you will need to change the code to get it working again.\n\nNopeCHA Extension in Selenium\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1h9Q37yQqrLNhkqBCCWtHMPc09iOlLEQ5?usp=sharing)\n\nNopeCHA Extension in Undetected Chromedriver\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1IAIwMWxpK7j1zzWJ1RmajD0TjaW_ANz4?usp=sharing)\n\n\n## Development\n### Prerequisites\n\nHaving [Python 3.8](https://python.org) or above installed.\n\n### Building\n\nTo build debug copy for both Chrome and Firefox, simply run the following command:\n\n`python build.py`\n\nThis will create a `dist` directory in the project root directory, in which you will find `firefox` and `chrome` directories for debugging purposes. If you use the `-p` argument, each debugging directory will have an additional xpi/crc archive for production usage.\n\n### Actively listening for changes\nFor development convenience, `build.py` also supports listening to changes so files are quickly updated.\n\nFor that, you need to install python's `watchdog` in your machine:\n\n`python -m pip install watchdog`\n\nThen you can run `build.py` command with the `-w` option so your changes immediately apply:\n\n`python build.py -w`\nor\n`./build.py -w`\n\n\n## Building for production\n### Prerequisites\n\n`npm install uglify-js -g`\n\n### Build\n\n`python build.py -p`\n\nNote: The watchdog option `-w` is also supported here: (`python build.py -pw`)\n\nMinified code for production can be found in the `.zip` files in the corresponding browser directory. The zip files can be used for final testing/debugging before sending them to the webstores.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "awscaptcha.js",
          "type": "blob",
          "size": 4.787109375,
          "content": "(async () => {\n    function is_widget_frame() {\n        return document.querySelector('#captcha-container > #root #amzn-captcha-verify-button') !== null;\n    }\n\n\n    function is_image_frame() {\n        return document.querySelector('#captcha-container > #root #amzn-btn-audio-internal > img[title=\"Audio problem\"]') !== null;\n    }\n\n\n    function is_audio_frame() {\n        return document.querySelector('#captcha-container > #root #amzn-btn-audio-internal > img[title=\"Visual problem\"]') !== null;\n    }\n\n\n    async function on_widget_frame() {\n        try {\n            const $verify = document.querySelector('#captcha-container > #root #amzn-captcha-verify-button');\n            if ($verify) {\n                $verify.click();\n            }\n        } catch (e) {\n            console.log('error on_widget_frame', e);\n        }\n    }\n\n\n    async function on_image_frame() {\n        try {\n            const $e = document.querySelector('#captcha-container > #root #amzn-btn-audio-internal');\n            if ($e) {\n                $e.click();\n            }\n        } catch (e) {\n            console.log('error on_image_frame', e);\n        }\n    }\n\n\n    function get_audio_data() {\n        try {\n            const $audio = document.querySelector('audio');\n            const data = $audio.src.replace('data:audio/aac;base64,', '');\n            return data;\n        } catch (e) {\n            console.log('error get_audio_data', e);\n        }\n        return null;\n    }\n\n\n    let last_audio_data = null;\n    function on_task_ready(i=500) {\n        return new Promise(resolve => {\n            let checking = false;\n            const check_interval = setInterval(async () => {\n                if (checking) {\n                    return;\n                }\n                checking = true;\n\n                const settings = await BG.exec('Settings.get');\n                if (!settings.enabled || !settings.awscaptcha_auto_solve) {\n                    return;\n                }\n\n                const input = document.querySelector('input[placeholder=\"Answer\"]');\n                if (!input || input.value !== '') {\n                    checking = false;\n                    return;\n                }\n\n                const audio_data = get_audio_data();\n                if (!audio_data) {\n                    checking = false;\n                    return;\n                }\n\n                if (last_audio_data === audio_data) {\n                    checking = false;\n                    return;\n                }\n                last_audio_data = audio_data;\n\n                clearInterval(check_interval);\n                checking = false;\n                return resolve({input, audio_data});\n            }, i);\n        });\n    }\n\n\n    async function on_audio_frame() {\n        const {input, audio_data} = await on_task_ready();\n\n        if (input === null || audio_data === null) {\n            return;\n        }\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings.enabled || !settings.awscaptcha_auto_solve) {\n            return;\n        }\n\n        const solve_start = Time.time();\n\n        // Detect images\n        const {job_id, data} = await NopeCHA.post({\n            captcha_type: IS_DEVELOPMENT ? 'awscaptcha_dev' : 'awscaptcha',\n            audio_data: [audio_data],\n            key: settings.key,\n        });\n        if (!data || data.length === 0) {\n            document.querySelector('#amzn-btn-refresh-internal')?.click();\n            await Time.sleep(200);\n            last_audio_data = null;\n            return;\n        }\n\n        let delay = parseInt(settings.awscaptcha_solve_delay_time);\n        delay = delay ? delay : 1000;\n        const delta = settings.awscaptcha_solve_delay ? (delay - (Time.time() - solve_start)) : 0;\n        if (delta > 0) {\n            await Time.sleep(delta);\n        }\n\n        // Solve\n        if (data[0].length === 0) {\n            document.querySelector('#amzn-btn-refresh-internal')?.click();\n            await Time.sleep(200);\n            last_audio_data = null;\n        }\n        else {\n            input.value = data[0];\n            await Time.sleep(200);\n            document.querySelector('#amzn-btn-verify-internal')?.click();\n        }\n    }\n\n\n    while (true) {\n        await Time.sleep(1000);\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings || !settings.enabled) {\n            continue;\n        }\n\n        const hostname = await Location.hostname();\n        if (settings.disabled_hosts.includes(hostname)) {\n            continue;\n        }\n\n        if (settings.awscaptcha_auto_open && is_widget_frame()) {\n            await on_widget_frame();\n        }\n        else if (settings.hcaptcha_auto_solve && is_image_frame()) {\n            await on_image_frame();\n        }\n        else if (settings.hcaptcha_auto_solve && is_audio_frame()) {\n            await on_audio_frame();\n        }\n    }\n})();\n"
        },
        {
          "name": "background.js",
          "type": "blob",
          "size": 17.6669921875,
          "content": "import {deep_copy, SettingsManager, Time} from './utils.mjs'\nimport * as bapi from './api.js'\n\n\nconsole.clear();\nconsole.log('browser.runtime.id', bapi.browser.runtime.id, 'on', bapi.VERSION);\n\n\nclass API {\n    static endpoints = {};\n\n    static register(obj, fname) {\n        const endpoint = `${obj.name}.${fname}`;\n        const fn = obj[fname];\n        function wrapped() {\n            return fn.apply(obj, [{tab_id: arguments[0].tab_id, frame_id: arguments[0].frame_id, ...arguments[0].data}]);\n        }\n        this.endpoints[endpoint] = wrapped;\n    }\n}\n\n\nclass Cache {\n    // Runtime variables cache\n    static cache = {};\n\n    // Values, counts, and arrays\n    static async set({tab_id, name, value, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        Cache.cache[name] = value;\n        return Cache.cache[name];\n    }\n\n    // Values, counts, and arrays\n    static async get({tab_id, name, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        return Cache.cache[name];\n    }\n\n    // Values, counts, and arrays\n    static async remove({tab_id, name, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        const value = Cache.cache[name];\n        delete Cache.cache[name];\n        return value;\n    }\n\n    // Arrays\n    static async append({tab_id, name, value, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        if (!(name in Cache.cache)) {\n            Cache.cache[name] = [];\n        }\n        Cache.cache[name].push(value);\n        return Cache.cache[name];\n    }\n\n    // Arrays\n    static async empty({tab_id, name, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        const value = Cache.cache[name];\n        Cache.cache[name] = [];\n        return value;\n    }\n\n    // Counts\n    static async inc({tab_id, name, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        if (!(name in Cache.cache)) {\n            Cache.cache[name] = 0;\n        }\n        Cache.cache[name]++;\n        return Cache.cache[name];\n    }\n\n    // Counts\n    static async dec({tab_id, name, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        if (!(name in Cache.cache)) {\n            Cache.cache[name] = 0;\n        }\n        Cache.cache[name]--;\n        return Cache.cache[name];\n    }\n\n    // Counts\n    static async zero({tab_id, name, tab_specific}={tab_specific: false}) {\n        if (tab_specific) {\n            name = `${tab_id}_${name}`;\n        }\n        Cache.cache[name] = 0;\n        return Cache.cache[name];\n    }\n\n    static {\n        API.register(this, 'set');\n        API.register(this, 'get');\n        API.register(this, 'remove');\n        API.register(this, 'append');\n        API.register(this, 'empty');\n        API.register(this, 'inc');\n        API.register(this, 'dec');\n        API.register(this, 'zero');\n    }\n}\n\n\nclass Settings {\n    static data = {};\n\n    static _save() {\n        console.log('Settings.save', Settings.data);\n        return new Promise(resolve => {\n            bapi.browser.storage.sync.set({settings: Settings.data}, resolve);\n        });\n    }\n\n    // static load() {\n    //     return new Promise(resolve => {\n    //         const storage = bapi.browser.storage;\n    //         if (!storage) {\n    //             resolve();\n    //             return;\n    //         }\n    //         storage.sync.get(['settings'], async ({settings}) => {\n    //             if (!settings) {\n    //                 await Settings.reset();\n    //             }\n    //             else {\n    //                 Settings.data = settings;\n    //                 if (Settings.data.version !== SettingsManager.DEFAULT.version) {\n    //                     const key = Settings.data.key;\n    //                     console.log('mismatched version', key);\n    //                     await Settings.reset();\n    //                     Settings.data.key = key;\n    //                 }\n    //             }\n    //             resolve();\n    //         });\n    //     });\n    // }\n\n    static _get_settings() {\n        return new Promise(resolve => {\n            bapi.browser.storage.sync.get(['settings'], ({settings}) => {\n                console.log('Settings._get_settings', settings);\n                resolve(settings);\n            });\n        });\n    }\n\n    static async load() {\n        for (let i = 0; i < 4; i++) {\n            const settings = await Settings._get_settings();\n            if (!settings) {\n                // await Time.sleep(100);\n                continue;\n            }\n            Settings.data = settings;\n            if (Settings.data.version !== SettingsManager.DEFAULT.version) {\n                const key = Settings.data.key;\n                console.log('mismatched version', key);\n                await Settings.reset();\n                Settings.data.key = key;\n            }\n            return;\n        }\n        console.log('settings load retry exceeded');\n        await Settings.reset();\n    }\n\n    static async get() {\n        return Settings.data;\n    }\n\n    static async set({id, value}) {\n        Settings.data[id] = value;\n        await Settings._save();\n    }\n\n    static async update({settings}) {\n        for (const [k, v] of Object.entries(settings)) {\n            Settings.data[k] = v;\n        }\n        await Settings._save();\n    }\n\n    static async replace({settings}) {\n        Settings.data = settings;\n        await Settings._save();\n    }\n\n    static async reset() {\n        Settings.data = deep_copy(SettingsManager.DEFAULT);\n\n        // // Set key from manifest\n        // const manifest = bapi.browser.runtime.getManifest();\n        // if (manifest.nopecha_key) {\n        //     Settings.data.key = manifest.nopecha_key;\n        // }\n\n        await Settings._save();\n    }\n\n    static {\n        API.register(this, 'get');\n        API.register(this, 'set');\n        API.register(this, 'update');\n        API.register(this, 'replace');\n        API.register(this, 'reset');\n    }\n}\n\n\nclass Net {\n    static async fetch({url, options}={options: {}}) {\n        try {\n            const res = await fetch(url, options);\n            return await res.text();\n        } catch (e) {\n            console.error(\"failed to fetch\", url, e)\n            return null;\n        }\n    }\n\n    static {\n        API.register(this, 'fetch');\n    }\n}\n\n\nclass Tab {\n    static reloads = {};  // tab_id -> {delay, start, timer}\n\n    static _reload({tab_id}) {\n        return new Promise(resolve => bapi.browser.tabs.reload(tab_id, {bypassCache: true}, resolve));\n    }\n\n    static async reload({tab_id, delay, overwrite}={delay: 0, overwrite: true}) {\n        // Clear and start timer if overwrite is true or if delay <= remaining time of active timer\n        delay = parseInt(delay);\n        let remaining = Tab.reloads[tab_id]?.delay - (Date.now() - Tab.reloads[tab_id]?.start);\n        remaining = (isNaN(remaining) || remaining < 0) ? 0 : remaining;\n        // console.log('reload_after', tab_id, 'delay', delay, 'overwrite', overwrite, 'remaining', remaining);\n\n        if (overwrite || remaining == 0 || delay <= remaining) {\n            // console.log(`set reload timer tab=${tab_id} after=${delay/1000}s`);\n            clearTimeout(Tab.reloads[tab_id]?.timer);\n            Tab.reloads[tab_id] = {\n                delay: delay,\n                start: Date.now(),\n                timer: setTimeout(() => Tab._reload({tab_id}), delay),\n            };\n            return true;\n        }\n        return false;\n    }\n\n    static close({tab_id}) {\n        return new Promise(resolve => bapi.browser.tabs.remove(tab_id, resolve));\n    }\n\n    static open({url}={url: null}) {\n        return new Promise(resolve => bapi.browser.tabs.create({url}, resolve));\n    }\n\n    static navigate({tab_id, url}) {\n        return new Promise(resolve => bapi.browser.tabs.update(tab_id, {url}, resolve));\n    }\n\n    static info({tab_id}) {\n        return new Promise(resolve => {\n            try {\n                bapi.browser.tabs.get(tab_id, tab => resolve(tab));\n            } catch (e) {\n                console.log('error getting tab info', e);\n                resolve(false);\n            }\n        });\n    }\n\n    static active() {\n        // `tab` will either be a `tabs.Tab` instance or `undefined`\n        return new Promise(async resolve => {\n            if (bapi.VERSION === 'firefox') {\n                // MV2\n                bapi.browser.tabs.query({active: true, lastFocusedWindow: true}, ([tab]) => {\n                    if (bapi.browser.runtime.lastError) {\n                        console.error(bapi.browser.runtime.lastError);\n                    }\n                    resolve(tab);\n                });\n            }\n            else {\n                // MV3\n                const [tab] = await bapi.browser.tabs.query({active: true, lastFocusedWindow: true});\n                return resolve(tab);\n            }\n        });\n    }\n\n    static {\n        API.register(this, 'reload');\n        API.register(this, 'close');\n        API.register(this, 'open');\n        API.register(this, 'navigate');\n        API.register(this, 'info');\n        API.register(this, 'active');\n    }\n}\n\n\nclass Inject {\n    static async _inject(options) {\n        // Inject into active tab if target tabId is undefined\n        if (!options.target.tabId) {\n            const tab = await Tab.active();\n            options.target.tabId = tab.id;\n        }\n\n        // Convert callback to promise\n        console.log('inject', options);\n        const prom = new Promise(resolve => bapi.browser.scripting.executeScript(options, resolve));\n        return await prom;\n    }\n\n    static async func({tab_id, func, args}={args: []}) {\n        const options = {\n            target: {tabId: tab_id, allFrames: true},\n            world: 'MAIN',\n            injectImmediately: true,\n            func: func,\n            args: args,\n        };\n        // return new Promise(resolve => bapi.browser.scripting.executeScript(options, resolve));\n        return await Inject._inject(options);\n    }\n\n    static async files({tab_id, frame_id, files}) {\n        const options = {\n            target: {tabId: tab_id, frameIds: [frame_id]},\n            world: 'MAIN',\n            injectImmediately: true,\n            files: files,\n        };\n        if (bapi.VERSION === 'firefox') {\n            delete options.world;\n        }\n        return await Inject._inject(options);\n    }\n\n    static {\n        API.register(this, 'func');\n        API.register(this, 'files');\n    }\n}\n\n\nclass Recaptcha {\n    static async reset({tab_id}) {\n        await Inject.func({tab_id, data: {func: () => {try {window.grecaptcha?.reset();} catch {}}, args: []}});\n        return true;\n    }\n\n    static {\n        API.register(this, 'reset');\n    }\n}\n\n\nclass Server {\n    static ENDPOINT = `https://api.nopecha.com/status?v=${bapi.browser.runtime.getManifest().version}`;\n    static is_fetching_plan = false;\n\n    static async get_plan({key}) {\n        if (Server.is_fetching_plan) {\n            return false;\n        }\n        Server.is_fetching_plan = true;\n        let plan = {\n            plan: 'Unknown',\n            credit: 0,\n        };\n        try {\n            if (key === 'undefined') {\n                key = '';\n            }\n            const r = await fetch(`${Server.ENDPOINT}&key=${key}`);\n            plan = JSON.parse(await r.text());\n        } catch {}\n        Server.is_fetching_plan = false;\n        return plan;\n    }\n\n    static {\n        API.register(this, 'get_plan');\n    }\n}\n\n\nclass Image {\n    static encode({url}) {\n        return new Promise(resolve => {\n            fetch(url)\n                .then(response => response.blob())\n                .then(blob => {\n                    const reader = new FileReader();\n                    reader.onload = () => resolve(reader.result);\n                    reader.readAsDataURL(blob);\n                });\n        });\n    }\n\n    static {\n        API.register(this, 'encode');\n    }\n}\n\n\nclass Relay {\n    static async send({tab_id, data}) {\n        // Send to active tab if tab_id is undefined\n        if (!tab_id) {\n            const tab = await Tab.active();\n            tab_id = tab.id;\n        }\n        bapi.browser.tabs.sendMessage(tab_id, data);\n    }\n\n    static {\n        API.register(this, 'send');\n    }\n}\n\n\nclass Icon {\n    static set({status}) {\n        return new Promise(resolve => {\n            const ba = bapi.VERSION === 'firefox' ? bapi.browser.browserAction : bapi.browser.action;\n            if (status === 'on') {\n                ba.setIcon({\n                    path: {\n                        '16': '/icon/16.png',\n                        '32': '/icon/32.png',\n                        '48': '/icon/48.png',\n                        '128': '/icon/128.png',\n                    },\n                }, resolve);\n            }\n            else if (status === 'off') {\n                ba.setIcon({\n                    path: {\n                        '16': '/icon/16g.png',\n                        '32': '/icon/32g.png',\n                        '48': '/icon/48g.png',\n                        '128': '/icon/128g.png',\n                    },\n                }, resolve);\n            }\n            else {\n                console.error('unknown icon mode', status);\n                resolve(false);\n            }\n        });\n    }\n\n    static set_badge_text({tab_id, data}) {\n        return new Promise(resolve => {\n            const options = {text: data};\n            if (tab_id) {\n                options.tabId = tab_id;\n            }\n            bapi.browser.action.setBadgeText(options, resolve);\n        });\n    }\n\n    static set_badge_color({tab_id, data}) {\n        return new Promise(resolve => {\n            const options = {color: data};\n            if (tab_id) {\n                options.tabId = tab_id;\n            }\n            bapi.browser.action.setBadgeBackgroundColor(options, resolve);\n        });\n    }\n\n    static async set_badge({tab_id, data: {global, text, color}}) {\n        if (!tab_id && !global) {\n            const tab = await Tab.active();\n            tab_id = tab.id;\n        }\n\n        if (global) {\n            tab_id = null;\n        }\n\n        const proms = [Icon.set_badge_text({tab_id, data: text})];\n        if (color) {\n            proms.push(Icon.set_badge_color({tab_id, data: color}));\n        }\n        return await Promise.all(proms);\n    }\n\n    static {\n        API.register(this, 'set');\n    }\n}\n\n\nclass Browser {\n    static async version() {\n        return bapi.VERSION;\n    }\n\n    static async log() {\n        console.warn('Browser.log', ...arguments);\n    }\n\n    static {\n        API.register(this, 'version');\n        API.register(this, 'log');\n    }\n}\n\n\nclass ContextMenu {\n    static listen() {\n        function on_context_menu(info, tab) {\n            if (info.menuItemId === 'nopecha_disable_host') {\n                const url = info.pageUrl;\n                if (!url) {\n                    return;\n                }\n                const hostname = url.replace(/^(.*:)\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/, '$2');\n                let hosts = new Set();\n                for (const e of Settings.data.disabled_hosts) {\n                    hosts.add(e.trim());\n                }\n                hosts.add(hostname);\n                hosts = [...hosts];\n                Settings.set({id: 'disabled_hosts', value: hosts});\n            }\n        };\n        bapi.browser.contextMenus.onClicked.addListener(on_context_menu);\n    }\n\n    static create() {\n        bapi.browser.contextMenus.create({'title': 'Disable NopeCHA on this site', 'id': 'nopecha_disable_host'});\n        // bapi.browser.contextMenus.create({'title': 'NopeCHA: CAPTCHA Solver', 'id': 'parent'});\n        // bapi.browser.contextMenus.create({'title': 'Disable NopeCHA on this site', 'parentId': 'parent', 'id': 'child0'});\n        // bapi.browser.contextMenus.create({'title': 'Select Text CAPTCHA Image Element', 'parentId': 'parent', 'id': 'child1'});\n        // bapi.browser.contextMenus.create({'title': 'Select Text CAPTCHA Input Element', 'parentId': 'parent', 'id': 'child2'});\n    }\n\n    static {\n        bapi.browser.runtime.onInstalled.addListener(ContextMenu.create);\n        ContextMenu.listen();\n    }\n}\n\n\n(async () => {\n    // bapi.reconnect_scripts();\n\n    bapi.register_language();\n\n    await Settings.load();\n\n    await Icon.set({status: Settings.data.enabled ? 'on' : 'off'});\n\n    bapi.browser.runtime.onMessage.addListener((req, sender, send) => {\n        const method = req[0];\n        let data = null;\n        if (req.length > 1) {\n            if (req.length === 2) {\n                data = req[1];\n            }\n            else {\n                data = req.slice(1);\n            }\n        }\n        const tab_id = (data && 'tab_id' in data) ? data.tab_id : sender?.tab?.id;\n        const frame_id = sender?.frameId;\n        // console.log('method', method, data);\n\n        try {\n            API.endpoints[method]({tab_id, frame_id, data})\n                .then(r => {\n                    const verbose = !['Browser.log', 'Settings.get', 'Settings.set', 'Cache.get', 'Cache.set', 'Tab.info'].includes(method);\n\n                    if (verbose){\n                        console.log(method, r);\n                    }\n\n                    try {\n                        send(r);\n                    } catch (e) {\n                        console.error('error in send\\n', method, '\\n', data, e);\n                    }\n\n                })\n                .catch(e => {\n                    console.error('error in api method\\n', method, '\\n', data, e);\n                });\n        } catch (e) {\n            console.error('error in api call\\n', method, '\\n', data, e);\n        }\n\n        return true;\n    });\n\n})();\n"
        },
        {
          "name": "build.py",
          "type": "blob",
          "size": 8.6796875,
          "content": "#! /bin/python3\nimport argparse\nimport contextlib\nimport itertools\nimport json\nimport os\nimport re\nimport shutil\nimport subprocess\nimport sys\nimport time\nfrom functools import partial\nfrom glob import glob\nfrom pathlib import Path\nfrom zipfile import ZipFile, ZIP_DEFLATED\n\nprinte = partial(print, file=sys.stderr)\n\ntry:\n    import watchdog\nexcept ModuleNotFoundError:\n    watchdog = None  # Not mandatory\n\n# EXTENSION_SUFFIXES = {\n#     \"firefox\": \".xpi\",\n#     # \"chrome\": \".crc\",\n#     \"chrome\": \".zip\",\n# }\n# OUTPUT_ARCHIVE_NAME = Path(\"NopeCHA.zip\")\n\n# Chrome and Firefox stores accept zipfiles only\nOUTPUT_ARCHIVE_NAMES = {\n    'firefox': Path(\"firefox.zip\"),\n    'chrome': Path(\"chrome.zip\"),\n}\nBASE_MANIFEST = Path(\"manifest.base.json\")\nEXPORT_PATH = Path(\"dist\")\nVERSIONS_PATH = Path(\"version\")\n\n\nwatchdog_help = (\n    f\"\"\"\nKeeps the program running and makes use of the watchdog library to listen for changes.\nWhen changes exist, the corresponding file is updated in {EXPORT_PATH} for the extension to update itself and use.\n\"\"\"\n).strip()\n\nWATCHDOG_NOT_FOUND = f\"\"\"\n    watchdog was not found. Execute the command below if you want to use the -w/--watch feature:\n    python -m pip install watchdog\n\"\"\".strip()\n\nif watchdog is None:\n    watchdog_help += f\"\"\"\nWarning:\n{WATCHDOG_NOT_FOUND}\n\"\"\"\n\nparser = argparse.ArgumentParser(\n    description=\"Dev/deploy build extension for firefox and chrome\",\n    formatter_class=argparse.RawTextHelpFormatter,\n)\n\nparser.add_argument(\n    \"-p\",\n    \"--production\",\n    action=\"store_true\",\n    help=\"Compresses files and creates zip file to submit for evaluation or test in the browser\",\n)\nparser.add_argument(\n    \"-c\",\n    \"--clean\",\n    action=\"store_true\",\n    help=\"Clean gecko ID from Firefox manifest for submission to Mozilla\",\n)\nparser.add_argument(\"-w\", \"--watch\", action=\"store_true\", help=watchdog_help)\n\nprogram_args = parser.parse_args()\n\nif watchdog is None and program_args.watch:\n    parser.print_help()\n    printe(f\"\\nERROR: \\n {WATCHDOG_NOT_FOUND}\\n\")\n    exit(2)\n\n\n## Polyfill Python will remove link_to in python 3.12\nif not hasattr(Path, \"hardlink_to\"):\n\n    def hardlink_to_polyfill(self, target):\n        return target.link_to(self)\n\n    Path.hardlink_to = hardlink_to_polyfill\n\n\n@contextlib.contextmanager\ndef in_dir(new_path):\n    oldcwd = os.getcwd()\n    try:\n        os.chdir(new_path)\n        yield\n    finally:\n        os.chdir(oldcwd)\n\n\ndef uglify(file: Path):\n    return subprocess.check_output(\n        [\n            \"uglifyjs\",\n            \"--compress\",\n            \"--mangle\",\n            \"--no-annotations\",\n            \"-c\",\n            \"drop_console\",\n            \"--\",\n            os.fspath(file.absolute()),\n        ]\n    )\n\n\ndef process_file(source, dist_path, export_directory, zip):\n    target = export_directory / dist_path\n    target.parent.mkdir(parents=True, exist_ok=True)\n\n    try:\n        # hardlinks take a fraction of time related to copy&paste\n        # Unfortunately, some platforms don't implement or allow them for regular users (E.g. windows)\n        target.hardlink_to(source)\n        # Don't show the user a hard link is tried when the feature is not implemented\n        printe(\"debug: hardlinked\", source)\n    except NotImplementedError:  # Not implemented in windows\n        printe(\"debug: copy\", source)\n        shutil.copy(source, target)\n    except Exception:\n        # Pretends the hardlink was tried but an error happened\n        printe(\"debug: hardlink\", source)\n        raise\n\n    if zip:\n        if source.suffix == \".js\":\n            printe(\"release: uglify js\", source)\n            zip_content = uglify(source)\n        else:\n            printe(\"release: include file\", source)\n            zip_content = source.read_bytes()\n\n        zip.writestr(os.fspath(dist_path), zip_content)\n\n\ndir_path = Path(__file__).absolute().parent\n\nwith in_dir(dir_path):\n\n    def build():\n        here_path = Path(\".\")\n\n        # This is slow but there should be very few files, so it should be OK\n        files_to_include = [\n            f\n            for f in itertools.chain(\n                here_path.glob(\"*.html\"),\n                here_path.glob(\"*.css\"),\n                here_path.glob(\"*.js\"),\n                here_path.glob(\"*.mjs\"),\n                (here_path / \"icon\").iterdir(),\n                (here_path / \"font\").iterdir(),\n            )\n            if f.name != \"utils.js\"\n        ]\n\n        versions = filter(lambda p: p.is_dir(), VERSIONS_PATH.iterdir())\n        # This could be run just once per program run but it would bring unnecessary complexity to the code below\n        shutil.rmtree(EXPORT_PATH, True)\n\n        for version in versions:\n            export_directory = EXPORT_PATH / version.name\n            export_directory.mkdir(parents=True, exist_ok=True)\n\n            if program_args.production:\n                # Takes quite a while to make new zips. So better do it for final tests or when deploying\n                # extension_archive = EXPORT_PATH / OUTPUT_ARCHIVE_NAME.with_suffix(EXTENSION_SUFFIXES[version.name])\n                extension_archive = EXPORT_PATH / OUTPUT_ARCHIVE_NAMES[version.name]\n                zip_deploy = ZipFile(\n                    extension_archive, \"w\", ZIP_DEFLATED, compresslevel=9\n                )\n            else:\n                zip_deploy = contextlib.nullcontext()\n\n            with zip_deploy as zip:\n\n                printe(\"-\" * 80)\n                printe(\"packaging version\", version)\n\n                extension_manifest = json.loads(BASE_MANIFEST.read_text())\n\n                # utils.js is a variation of utils.mjs but without the `export`\n                version_files_to_include = filter(\n                    lambda f: f.is_file() and f.name != \"manifest.json\",\n                    version.iterdir(),\n                )\n\n                for file_to_include in files_to_include:\n                    process_file(\n                        file_to_include, file_to_include, export_directory, zip\n                    )\n\n                for version_file_to_include in version_files_to_include:\n                    target_path = version_file_to_include.relative_to(version)\n                    process_file(\n                        version_file_to_include, target_path, export_directory, zip\n                    )\n\n                # utils.js is generated from utils.mjs so they can stay synchronized for both usages\n                utils_module = Path(\"utils.mjs\").read_text()\n                printe(\"debug: generating utils from mutils\")\n\n                utils_js = re.sub(\n                    r\"^export (class|const|function)\",\n                    r\"\\1\",\n                    utils_module,\n                    flags=re.MULTILINE,\n                )\n                (export_directory / \"utils.js\").write_text(utils_js)\n\n                version_manifest = version / \"manifest.json\"\n\n                if zip:\n                    printe(\"debug: store utils\", version_manifest)\n                    zip.writestr(\"utils.js\", utils_js)\n\n                printe(\"debug: manifest\", version_manifest)\n\n                specific_manifest = json.loads(version_manifest.read_text())\n\n                specific_manifest[\"permissions\"].extend(\n                    extension_manifest[\"permissions\"]\n                )\n                extension_manifest.update(specific_manifest)\n\n                # Remove Firefox gecko ID for submission\n                if program_args.clean:\n                    with contextlib.suppress(KeyError):\n                        del extension_manifest['browser_specific_settings']['gecko']['id']\n\n                manifest_content = json.dumps(extension_manifest, indent=4)\n                (export_directory / \"manifest.json\").write_text(manifest_content)\n\n                if zip:\n                    printe(\"debug: store manifest\", version_manifest)\n                    zip.writestr(\n                        \"manifest.json\", json.dumps(extension_manifest).encode(\"UTF-8\")\n                    )\n\n    build()\n\n    if program_args.watch:\n        # All watchdog content here to \"encapsulate\" and only keep if wanted\n\n        from watchdog.observers import Observer\n        from watchdog.events import FileSystemEventHandler\n\n        class FileEventHandler(FileSystemEventHandler):\n            def on_modified(self, event):\n                if (\n                    not event.is_directory\n                    and not os.fspath(EXPORT_PATH) in event.src_path\n                ):\n                    build()\n                    printe(\"changes detected - rebuilt extension\")\n                    observer.event_queue.empty()\n\n            on_created = on_modified\n\n        observer = Observer()\n        observer.schedule(FileEventHandler(), \".\", recursive=True)\n        observer.start()\n        try:\n            while True:\n                time.sleep(1)\n        finally:\n            observer.stop()\n            observer.join()\n"
        },
        {
          "name": "content.js",
          "type": "blob",
          "size": 6.123046875,
          "content": "class BG {\n    static exec() {\n        return new Promise(resolve => {\n            try {\n                // console.log('exec', arguments);\n                chrome.runtime.sendMessage([...arguments], resolve);\n            } catch (e) {\n                console.log('exec failed', e);\n                resolve(null);\n            }\n        });\n    }\n}\n\n\nclass Net {\n    static async fetch(url, options) {\n        return await BG.exec('Net.fetch', {url, options});\n    }\n}\n\n\nclass Script {\n    static inject_file(file) {\n        return new Promise(resolve => {\n            const $script = document.createElement('script');\n            $script.src = chrome.runtime.getURL(file);\n            $script.onload = resolve;\n            (document.head || document.documentElement).appendChild($script);\n        });\n    }\n}\n\n\nclass Location {\n    static parse_hostname(url) {\n        return url.replace(/^(.*:)\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/, '$2');\n    }\n\n    static async hostname() {\n        const tab = await BG.exec('Tab.info');\n        const tab_url = tab.url ? tab.url : 'Unknown Host';\n        return Location.parse_hostname(tab_url);\n    }\n}\n\n\nclass Image {\n    static encode(url) {\n        return new Promise(resolve => {\n            if (url === null) {\n                return resolve(null);\n            }\n\n            const xhr = new XMLHttpRequest();\n            xhr.onload = () => {\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                    let res = reader.result;\n                    if (res.startsWith('data:text/html;base64,')) {\n                        return resolve(null);\n                    }\n                    res = res.replace('data:image/jpeg;base64,', '');\n                    resolve(res);\n                };\n                reader.readAsDataURL(xhr.response);\n            };\n            xhr.onerror = () => {\n                resolve(null);\n            };\n            xhr.onreadystatechange = () => {\n                if (this.readyState == 4 && this.status != 200) {\n                    resolve(null);\n                }\n            };\n            xhr.open('GET', url);\n            xhr.responseType = 'blob';\n            xhr.send();\n        });\n    }\n}\n\n\nclass NopeCHA {\n    static INFERENCE_URL = 'https://api.nopecha.com';\n\n    static MAX_WAIT_POST = 60;\n    static MAX_WAIT_GET = 60;\n\n    static ERRORS = {\n        UNKNOWN: 9,\n        INVALID_REQUEST: 10,\n        RATE_LIIMTED: 11,\n        BANNED_USER: 12,\n        NO_JOB: 13,\n        INCOMPLETE_JOB: 14,\n        INVALID_KEY: 15,\n        NO_CREDIT: 16,\n        UPDATE_REQUIRED: 17,\n    };\n\n    static async post({captcha_type, task, image_urls, image_data, grid, audio_data, key}) {\n        const start_time = Date.now();\n\n        const info = await BG.exec('Tab.info');\n\n        while (true) {\n            const now = Date.now();\n            if (now - start_time > NopeCHA.MAX_WAIT_POST * 1000) {\n                break;\n            }\n\n            const data = {\n                type: captcha_type,\n                task: task,\n                key: key,\n                v: chrome.runtime.getManifest().version,\n                url: info ? info.url : window.location.href,\n            };\n            if (image_urls) {\n                data.image_urls = image_urls;\n            }\n            if (image_data) {\n                data.image_data = image_data;\n            }\n            if (grid) {\n                data.grid = grid;\n            }\n            if (audio_data) {\n                data.audio_data = audio_data;\n            }\n\n            try {\n                const headers = {'Content-Type': 'application/json'};\n                if (key && key !== 'undefined') {\n                    headers.Authorization = `Bearer ${key}`;\n                }\n                const text = await Net.fetch(NopeCHA.INFERENCE_URL, {\n                    method: 'POST',\n                    headers: headers,\n                    body: JSON.stringify(data),\n                });\n\n                const r = JSON.parse(text);\n                if ('error' in r) {\n                    if (r.error === NopeCHA.ERRORS.RATE_LIMITED) {\n                        await Time.sleep(2000);\n                        continue;\n                    }\n                    else if (r.error === NopeCHA.ERRORS.INVALID_KEY) {\n                        console.log('solve error. invalid key');\n                        break;\n                    }\n                    else if (r.error === NopeCHA.ERRORS.NO_CREDIT) {\n                        console.log('solve error. out of credit');\n                        break;\n                    }\n                    else {\n                        console.log('unknown error', r.error);\n                        break\n                    }\n                }\n\n                const job_id = r.data;\n                return await NopeCHA.get({job_id, key});\n            } catch (e) {\n                console.log('failed to parse post response', e);\n                // break;\n            }\n        }\n\n        return {job_id: null, data: null};\n    }\n\n    static async get({job_id, key}) {\n        const start_time = Date.now();\n\n        while (true) {\n            const now = Date.now();\n            if (now - start_time > NopeCHA.MAX_WAIT_GET * 1000) {\n                break;\n            }\n\n            await Time.sleep(1000);\n            const headers = {};\n            if (key && key !== 'undefined') {\n                headers.Authorization = `Bearer ${key}`;\n            }\n            const text = await Net.fetch(`${NopeCHA.INFERENCE_URL}?id=${job_id}&key=${key}`, {\n                headers: headers,\n            });\n            try {\n                const r = JSON.parse(text);\n                if ('error' in r) {\n                    // TODO: handle errors\n                    if (r.error !== NopeCHA.ERRORS.INCOMPLETE_JOB) {\n                        return {job_id, data: null, metadata: null};\n                    }\n                    continue;\n                }\n                return {job_id, data: r.data, metadata: r.metadata};\n            } catch (e) {\n                console.log('failed to parse server response for solution', e);\n                // break;\n            }\n        }\n\n        return {job_id, data: null, metadata: null};\n    }\n}\n"
        },
        {
          "name": "font",
          "type": "tree",
          "content": null
        },
        {
          "name": "funcaptcha.js",
          "type": "blob",
          "size": 5.078125,
          "content": "(async () => {\n    function is_widget_frame() {\n        const $widget_elem = document.querySelector('button[aria-describedby=\"descriptionVerify\"]') ||\n            document.querySelector('#wrong_children_button') ||\n            document.querySelector('#wrongTimeout_children_button');\n        return $widget_elem !== null;\n    }\n\n\n    function is_image_frame() {\n        return get_task() !== null && get_image_data() !== null;\n    }\n\n\n    function on_widget_frame() {\n        try {\n            const $verify = document.querySelector('button[aria-describedby=\"descriptionVerify\"]');\n            if ($verify) {\n                window.parent.postMessage({nopecha: true, action: 'clear'}, '*');\n                $verify.click();\n            }\n\n            const $fail_incorrect = document.querySelector('#wrong_children_button');\n            if ($fail_incorrect) {\n                window.parent.postMessage({nopecha: true, action: 'clear'}, '*');\n                $fail_incorrect.click();\n            }\n\n            const $fail_timeout = document.querySelector('#wrongTimeout_children_button');\n            if ($fail_timeout) {\n                window.parent.postMessage({nopecha: true, action: 'clear'}, '*');\n                $fail_timeout.click();\n            }\n        } catch (e) {\n            console.log('error on_widget_frame', e);\n        }\n    }\n\n\n    function get_task() {\n        const $task = document.querySelector('#game_children_text > h2');\n        return $task?.innerText?.trim();\n    }\n\n\n    function get_image_data() {\n        const $image = document.querySelector('img#game_challengeItem_image');\n        return $image?.src?.split(';base64,')[1];\n    }\n\n\n    let last_image_data = null;\n    function on_task_ready(i=500) {\n        return new Promise(resolve => {\n            let checking = false;\n            const check_interval = setInterval(async () => {\n                if (checking) {\n                    return;\n                }\n                checking = true;\n\n                const settings = await BG.exec('Settings.get');\n                if (!settings.enabled || !settings.funcaptcha_auto_solve) {\n                    return;\n                }\n\n                if (settings.funcaptcha_auto_open && is_widget_frame()) {\n                    await on_widget_frame(settings);\n                }\n\n                let task = get_task();\n                if (!task) {\n                    checking = false;\n                    return;\n                }\n\n                const cells = document.querySelectorAll('#game_children_challenge ul > li > a');\n                if (cells.length !== 6) {\n                    checking = false;\n                    return;\n                }\n\n                const image_data = get_image_data();\n                if (!image_data) {\n                    checking = false;\n                    return;\n                }\n\n                if (last_image_data === image_data) {\n                    checking = false;\n                    return;\n                }\n                last_image_data = image_data;\n\n                clearInterval(check_interval);\n                checking = false;\n                return resolve({task, cells, image_data});\n            }, i);\n        });\n    }\n\n\n    async function on_image_frame() {\n        const {task, cells, image_data} = await on_task_ready();\n\n        if (task === null || cells === null || image_data === null) {\n            return;\n        }\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings.enabled || !settings.funcaptcha_auto_solve) {\n            return;\n        }\n\n        const solve_start = Time.time();\n\n        // Detect images\n        const {job_id, data} = await NopeCHA.post({\n            captcha_type: IS_DEVELOPMENT ? 'funcaptcha_dev' : 'funcaptcha',\n            task: task,\n            image_data: [image_data],\n            key: settings.key,\n        });\n        if (!data) {\n            last_image_data = null;\n            return;\n        }\n\n        let delay = parseInt(settings.funcaptcha_solve_delay_time);\n        delay = delay ? delay : 1000;\n        const delta = settings.funcaptcha_solve_delay ? (delay - (Time.time() - solve_start)) : 0;\n        if (delta > 0) {\n            await Time.sleep(delta);\n        }\n\n        // Solve\n        for (let i = 0; i < data.length; i++) {\n            if (data[i] === false) {\n                continue;\n            }\n            cells[i].click();\n        }\n\n        last_image_data = null;\n    }\n\n\n    if (window.location.pathname.startsWith('/fc/assets/tile-game-ui/')) {\n        while (true) {\n            await Time.sleep(1000);\n\n            const settings = await BG.exec('Settings.get');\n            if (!settings || !settings.enabled) {\n                continue;\n            }\n\n            const hostname = await Location.hostname();\n            if (settings.disabled_hosts.includes(hostname)) {\n                continue;\n            }\n\n            if (settings.funcaptcha_auto_open && is_widget_frame()) {\n                await on_widget_frame();\n            }\n            else if (settings.funcaptcha_auto_solve && is_image_frame()) {\n                await on_image_frame();\n            }\n        }\n    }\n})();\n"
        },
        {
          "name": "funcaptcha_demo.js",
          "type": "blob",
          "size": 12.6416015625,
          "content": "(async () => {\n    const KEYS = {\n        'linkedin': ['3117BF26-4762-4F5A-8ED9-A85E69209A46', false],  // Pick the image that is the correct way up\n        'rockstar': ['A5A70501-FCDE-4065-AF18-D9FAF06EF479', false],  // Pick the image that is the correct way up / Pick the dice pair whose top sides add up to 9\n        'github': ['20782B4C-05D0-45D7-97A0-41641055B6F6', false],  // Pick the spiral galaxy\n        'paypal': ['9409E63B-D2A5-9CBD-DBC0-5095707D0090', false],  // Pick one square that shows two identical objects.\n        'blizzard': ['E8A75615-1CBA-5DFF-8032-D16BCF234E10', false],  // Pick the mouse that can't reach the cheese\n        'twitch': ['E5554D43-23CC-1982-971D-6A2262A2CA24', false],  // Pick the dice pair whose top sides add up to 5/6/7/8\n        'demo1': ['804380F4-6844-FFA1-ED4E-5877CA1F1EA4', false],  // Pick the image that is the correct way up\n        'demo2': ['D39B0EE3-2973-4147-98EF-C92F93451E2D', false],  // Pick the clipart object\n        // 'octocaptcha': ['69A21A01-CC7B-B9C6-0F9A-E7FA06677FFC', false],  // Pick the clipart object\n        // 'outlook': ['B7D8911C-5CC8-A9A3-35B0-554ACEE604DA', false],\n        // 'roblox': ['A2A14B1D-1AF3-C791-9BBC-EE33CC7A0A6F', false],\n        // 'roblox': ['9F35E182-C93C-EBCC-A31D-CF8ED317B996', false],\n        // 'roblox': ['476068BF-9607-4799-B53D-966BE98E2B81', false],\n        'ea signup': ['73BEC076-3E53-30F5-B1EB-84F494D43DBA', false],  // Pick one square that shows two identical objects. / Pick the mouse that can reach all the cheese in the maze / Pick the matching cards\n        'ea signin': ['0F5FE186-B3CA-4EDB-A39B-9B9A3397D01D', false],\n        'myprepaidcenter': ['0F941BF0-7303-D94B-B76A-EAA2E2048124', false],  // Pick the image where all animals are walking in the same direction as the arrow\n        'twitter': ['2CB16598-CB82-4CF7-B332-5990DB66F3AB', true],  // Pick the shadow with a different object silhouette\n        'discoveryplus': ['FE296399-FDEA-2EA2-8CD5-50F6E3157ECA', false],\n        'minecraft': ['D39B0EE3-2973-4147-98EF-C92F93451E2D', false],\n        // 'rblxwild': ['476068BF-9607-4799-B53D-966BE98E2B81', false],\n        'imvu': ['0C2B415C-D772-47D4-A183-34934F786C7E', false],\n        'adobe': ['430FF2C3-1AB1-40B7-8BE7-44FC683FE02C', false],\n    };\n    const SRCS = {\n        'outlook': ['https://iframe.arkoselabs.com/B7D8911C-5CC8-A9A3-35B0-554ACEE604DA/index.html?mkt=en', false],  // Pick the penguin\n        'outlook auth': ['https://iframe-auth.arkoselabs.com/B7D8911C-5CC8-A9A3-35B0-554ACEE604DA/index.html?mkt=en', false],  // Pick one square that shows two identical objects.\n    };\n    const MAX_BTNS_PER_ROW = 9;\n\n    let nframes = 18;\n\n\n    reset();\n    // open_all();\n    // open_frame_token('ea signup', 0, nframes);\n    // open_frame_token('twitter', 0, nframes);\n    open_frame_token('imvu', 0, nframes);\n\n\n    function reset() {\n        document.body.innerHTML = '';\n\n        const STYLES = [\n            `body, html {\n                background-color: #212121;\n            }`,\n            `.input_row {\n                display: flex;\n                flex-direction: row;\n                flex-wrap: wrap;\n                justify-content: center;\n            }`,\n            `.input_row > * {\n                height: 20px;\n                line-height: 20px;\n                padding: 0;\n                border: 0;\n                font-size: 12px;\n            }`,\n            `.input_row > input[type=\"button\"] {\n                width: 100px;\n                cursor: pointer;\n                transition: 200ms all;\n            }`,\n            `.input_row > input[type=\"button\"]:hover {\n                opacity: 0.8;\n            }`,\n            `#nframes_label {\n                background-color: #fff;\n                color: #222;\n                width: 70px;\n                text-align: center;\n            }`,\n            `#nframes, #nframes:active {\n                width: 30px;\n                border: none;\n                outline: none;\n            }`,\n            `.name {\n                color: #fff;\n            }`,\n            `.iframe_row {\n                display: flex;\n                flex-direction: row;\n                flex-wrap: wrap;\n                justify-content: center;\n            }`,\n            // `.iframe_wrap {\n            //     background-color: #eee;\n            //     width: 350px;\n            //     height: 300px;\n            //     padding: 0;\n            //     overflow: hidden;\n            // }`,\n            // `iframe {\n            //     width: 350px;\n            //     height: 300px;\n            // }`,\n            `.iframe_wrap {\n                background-color: #eee;\n                width: 275px;\n                height: 275px;\n                padding: 0;\n                overflow: hidden;\n            }`,\n            `iframe {\n                border: none !important;\n                width: 400px !important;\n                height: 400px !important;\n                -ms-zoom: 0.75 !important;\n                -moz-transform: scale(0.75) !important;\n                -moz-transform-origin: 0 0 !important;\n                -o-transform: scale(0.75) !important;\n                -o-transform-origin: 0 0 !important;\n                -webkit-transform: scale(0.75) !important;\n                -webkit-transform-origin: 0 0 !important;\n            }`,\n            `iframe.small {\n                width: 550px !important;\n                height: 550px !important;\n                -ms-zoom: 0.5 !important;\n                -moz-transform: scale(0.5) !important;\n                -moz-transform-origin: 0 0 !important;\n                -o-transform: scale(0.5) !important;\n                -o-transform-origin: 0 0 !important;\n                -webkit-transform: scale(0.5) !important;\n                -webkit-transform-origin: 0 0 !important;\n            }`,\n        ];\n        const sheet = document.body.appendChild(document.createElement('style')).sheet;\n        for (const i in STYLES) {\n            sheet.insertRule(STYLES[i], i);\n        }\n\n        let i = 0;\n        let row = 1;\n        const $rows = {};\n\n        $rows[0] = document.createElement('div');\n        $rows[0].classList.add('input_row');\n        document.body.append($rows[0]);\n\n        const $nframes_label = document.createElement('div');\n        $nframes_label.id = 'nframes_label';\n        $nframes_label.innerText = '# iframes';\n        $rows[0].append($nframes_label);\n\n        const $nframes = document.createElement('input');\n        $nframes.id = 'nframes';\n        $nframes.placeholder = 'Number of iframes';\n        $nframes.value = nframes;\n        $nframes.addEventListener('input', () => {\n            nframes = parseInt($nframes.value);\n        });\n        $rows[0].append($nframes);\n\n        const BUTTONS = {\n            'reset': {row: 0, fn: reset, args: []},\n            'all': {row: 0, fn: open_all, args: []},\n        };\n        for (const k in KEYS) {\n            if (i++ % MAX_BTNS_PER_ROW === 0) {\n                row++;\n            }\n            BUTTONS[k] = {row: row, fn: open_frame_token, args: [k, 0]};\n        }\n        for (const k in SRCS) {\n            if (i++ % MAX_BTNS_PER_ROW === 0) {\n                row++;\n            }\n            BUTTONS[k] = {row: row, fn: open_frame_src, args: [k, 0]};\n        }\n\n        for (const [k, v] of Object.entries(BUTTONS)) {\n            const row = v.row;\n            if (!(v.row in $rows)) {\n                $rows[v.row] = document.createElement('div');\n                $rows[v.row].classList.add('input_row');\n                document.body.append($rows[v.row]);\n            }\n\n            const $btn = document.createElement('input');\n            $btn.type = 'button';\n            $btn.value = k;\n            $btn.addEventListener('click', () => {\n                reset();\n                v.fn(...v.args);\n            });\n\n            $rows[v.row].append($btn);\n        }\n    }\n\n    function open_all() {\n        open_frame_token('linkedin', 0, 1);\n        open_frame_token('rockstar', 0, 1);\n        open_frame_token('demo1', 0, 1);\n        open_frame_token('blizzard', 0, 1);\n        open_frame_token('twitch', 0, 1);\n        open_frame_token('paypal', 0, 1);\n        open_frame_src('outlook auth', 0, 1);\n        open_frame_token('github', 0, 1);\n        open_frame_token('demo2', 0, 1);\n        // open_frame_token('octocaptcha', 0, 1);\n        open_frame_src('outlook', 0, 1);\n        open_frame_token('ea signup', 0, 1);\n        open_frame_token('ea signin', 0, 1);\n        // open_frame_token('myprepaidcenter', 0, 1);\n        open_frame_token('twitter', 0, 1);\n        // open_frame_token('discoveryplus', 0, 1);\n        open_frame_token('minecraft', 0, 1);\n        // open_frame_token('rblxwild', 0, 1);\n        open_frame_token('imvu', 0, 1);\n        open_frame_token('adobe', 0, 1);\n    }\n\n    function open_frame_token(k, row, n) {\n        if (!n) {\n            n = nframes;\n        }\n        // console.log('open_frame_token', k, n);\n        for (let i = 0; i < n; i++) {\n            load_captcha(k, row);\n        }\n    }\n\n    function open_frame_src(k, row, n) {\n        if (!n) {\n            n = nframes;\n        }\n        // console.log('open_frame_src', k, n);\n        for (let i = 0; i < n; i++) {\n            create_frame(k, row, SRCS[k][0], SRCS[k][1]);\n        }\n    }\n\n    function create_frame(name, row, src, is_small=false) {\n        const $wrap = document.createElement('div');\n        $wrap.classList.add('iframe_wrap');\n\n        const $iframe = document.createElement('iframe');\n        if (is_small) {\n            $iframe.classList.add('small');\n        }\n        $wrap.append($iframe);\n        $iframe.frameborder = 0;\n        $iframe.scrolling = 'no';\n        $iframe.src = src;\n\n        let $row = document.querySelector(`#iframe_row_${row}`);\n        if (!$row) {\n            $row = document.createElement('div');\n            $row.classList.add('iframe_row');\n            $row.id = `iframe_row_${row}`;\n            document.body.append($row);\n        }\n        const $name = document.createElement('div');\n        $name.classList.add('name');\n        $name.innerHTML = name;\n        const $cell = document.createElement('div');\n        $cell.append($name);\n        $cell.append($wrap);\n        $row.append($cell);\n    }\n\n    async function load_captcha(name, row) {\n        const pk = KEYS[name][0];\n\n        const host = '';\n        const url = `https://api.funcaptcha.com/fc/gt2/public_key/${pk}`;\n        const r = await Net.fetch(url, {\n            \"headers\": {\n                \"accept\": \"*/*\",\n                \"accept-language\": \"en-US,en;q=0.9\",\n                \"cache-control\": \"no-cache\",\n                \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n                \"pragma\": \"no-cache\",\n                \"sec-ch-ua\": \"\\\"Google Chrome\\\";v=\\\"105\\\", \\\"Not)A;Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"105\\\"\",\n                \"sec-ch-ua-mobile\": \"?0\",\n                \"sec-ch-ua-platform\": \"\\\"Linux\\\"\",\n                \"sec-fetch-dest\": \"empty\",\n                \"sec-fetch-mode\": \"cors\",\n                \"sec-fetch-site\": \"cross-site\"\n            },\n            \"referrer\": host,\n            \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n            \"body\": `bda=&public_key=${pk}&site=${encodeURIComponent(host)}&language=en&userbrowser=Mozilla%2F5.0%20(X11%3B%20Linux%20x86_64)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F105.0.0.0%20Safari%2F537.36&rnd=${Math.random()}`,\n            \"method\": \"POST\",\n            \"mode\": \"cors\",\n            \"credentials\": \"omit\"\n        });\n\n        const data = JSON.parse(r);\n        // console.log('data', data);\n\n        const params = {};\n        for (const e of data.token.split('|')) {\n            const kv = e.split('=');\n            let k = kv[0];\n            let v = kv[1];\n            if (!kv[1]) {\n                k = 'token';\n                v = kv[0];\n            }\n            if (k.endsWith('url')) {\n                v = decodeURIComponent(v);\n            }\n            params[k] = v;\n        }\n        const url_params = (new URLSearchParams(params)).toString();\n        const src = `https://api.funcaptcha.com/fc/gc/?${url_params}`;\n        create_frame(name, row, src, KEYS[name][1]);\n    }\n\n\n    /**\n    Manually get the iframe src from roblox.com\n     */\n    // const TOKEN = '400635fb675f05f61.0554348501';\n    // const roblox_src = `https://roblox-api.arkoselabs.com/fc/gc/?token=${TOKEN}&r=us-east-1&metabgclr=transparent&guitextcolor=%23474747&maintxtclr=%23b8b8b8&metaiconclr=%23757575&meta=3&lang=en&pk=A2A14B1D-1AF3-C791-9BBC-EE33CC7A0A6F&at=40&ht=1&ag=101&cdn_url=https%3A%2F%2Froblox-api.arkoselabs.com%2Fcdn%2Ffc&lurl=https%3A%2F%2Faudio-us-east-1.arkoselabs.com&surl=https%3A%2F%2Froblox-api.arkoselabs.com&smurl=https%3A%2F%2Froblox-api.arkoselabs.com%2Fcdn%2Ffc%2Fassets%2Fstyle-manager`;\n    // for (let i = 0; i < nframes; i++) create_frame('roblox', 0, roblox_src);\n\n})();\n"
        },
        {
          "name": "funcaptcha_fast.js",
          "type": "blob",
          "size": 0.6279296875,
          "content": "/**\n * Faster animations for FunCAPTCHA.\n */\n\n(async () => {\n    window.addEventListener('load', () => {\n        const sheet = document.body.appendChild(document.createElement('style')).sheet;\n        sheet.insertRule('* {transition-duration: 0s !important}', 0);\n        sheet.insertRule('li > a::after {border: 8px solid rgba(0, 255, 0, 0.6) !important}', 1);\n        sheet.insertRule('#interstitial {backdrop-filter: none !important}', 2);\n        sheet.insertRule('#interstitial {background-color: transparent !important}', 3);\n        sheet.insertRule('#interstitial_wrapper {background-color: transparent !important}', 4);\n    });\n})();\n"
        },
        {
          "name": "funcaptcha_scrape.js",
          "type": "blob",
          "size": 3.65625,
          "content": "(async () => {\n    const RELOAD_ON_SOLVED = IS_DEVELOPMENT;  // If true, restart captcha to scrape more data\n    const SUBMISSION_STRATEGY = 'lazy';\n    window.nopecha = [];  // Lazy cache\n    const listeners = {};  // Click listeners\n\n\n    function get_task() {\n        const $task = document.querySelector('#game_children_text > h2') || document.querySelector('#game-header');\n        return $task?.innerText?.trim();\n    }\n\n\n    function get_image() {\n        const $image = document.querySelector('img#game_challengeItem_image') || document.querySelector('#challenge-image');\n        return $image?.src?.split(';base64,')[1];\n    }\n\n\n    async function on_click(index) {\n        const task = get_task();\n        const image = get_image();\n        if (task && image) {\n            const url = (await BG.exec('Tab.info'))?.url;\n            const data = {task, image, index, url};\n\n            if (SUBMISSION_STRATEGY.startsWith('l')) {\n                window.parent.postMessage({nopecha: true, action: 'append', data: data}, '*');\n            }\n            if (SUBMISSION_STRATEGY.startsWith('e')) {\n                await Net.fetch('https://api.nopecha.com/upload', {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify(data),\n                });\n            }\n        }\n    }\n\n\n    const event_method = window.addEventListener ? 'addEventListener' : 'attachEvent';\n    const message_event = event_method == 'attachEvent' ? 'onmessage' : 'message';\n    window[event_method](message_event, async e => {\n        const key = e.message ? 'message' : 'data';\n        const data = e[key];\n        if (data && data.nopecha === true) {\n            if (data.action === 'append') {\n                window.nopecha.push(data.data);\n            }\n            else if (data.action === 'clear') {\n                window.nopecha = [];\n            }\n            else if (data.action === 'reload') {\n                window.parent.postMessage({nopecha: true, action: 'reload'}, '*');\n                window.location.reload(true);\n            }\n        }\n    }, false);\n\n\n    while (true) {\n        await Time.sleep(1000);\n\n        try {\n            const $success = document.querySelector('body.victory');\n            if ($success) {\n                const proms = [];\n                for (const data of window.nopecha) {\n                    const prom = Net.fetch('https://api.nopecha.com/upload', {\n                        method: 'POST',\n                        headers: {'Content-Type': 'application/json'},\n                        body: JSON.stringify(data),\n                    });\n                    proms.push(prom);\n                }\n                await Promise.all(proms);\n                window.nopecha = [];\n\n                if (RELOAD_ON_SOLVED) {\n                    window.parent.postMessage({nopecha: true, action: 'reload'}, '*');\n                    window.location.reload(true);\n                }\n            }\n\n            const $timeout = document.querySelector('#timeout_widget');\n            if ($timeout?.style?.display === 'block') {\n                window.parent.postMessage({nopecha: true, action: 'reload'}, '*');\n                window.location.reload(true);\n            }\n\n            const $btns = document.querySelectorAll('#game_children_challenge ul > li > a');\n            for (const i in $btns) {\n                const $e = $btns[i];\n                if (i in listeners) {\n                    $e.removeEventListener('click', listeners[i]);\n                }\n                listeners[i] = on_click.bind(this, parseInt(i));\n                $e.addEventListener('click', listeners[i]);\n            }\n        } catch (e) {}\n    }\n})();\n"
        },
        {
          "name": "hcaptcha.js",
          "type": "blob",
          "size": 10.2373046875,
          "content": "(async () => {\n    function is_widget_frame() {\n        if (document.body.getBoundingClientRect()?.width === 0 || document.body.getBoundingClientRect()?.height === 0) {\n            return false;\n        }\n        return document.querySelector('div.check') !== null;\n    }\n\n\n    function is_image_frame() {\n        return document.querySelector('h2.prompt-text') !== null;\n    }\n\n\n    function open_image_frame() {\n        document.querySelector('#checkbox')?.click();\n    }\n\n\n    function is_solved() {\n        const is_widget_frame_solved = document.querySelector('div.check')?.style['display'] === 'block';\n        return is_widget_frame_solved;\n    }\n\n\n    function get_image_url($e) {\n        const matches = $e?.style['background']?.trim()?.match(/(?!^)\".*?\"/g);\n        if (!matches || matches.length === 0) {\n            return null;\n        }\n        return matches[0].replaceAll('\"', '');\n    }\n\n\n    async function get_task() {\n        let task = document.querySelector('h2.prompt-text')?.innerText?.replace(/\\s+/g, ' ')?.trim();\n        if (!task) {\n            return null;\n        }\n\n        const CODE = {\n            '0430': 'a',\n            '0441': 'c',\n            '0501': 'd',\n            '0065': 'e',\n            '0435': 'e',\n            '04bb': 'h',\n            '0069': 'i',\n            '0456': 'i',\n            '0458': 'j',\n            '03f3': 'j',\n            '04cf': 'l',\n            '03bf': 'o',\n            '043e': 'o',\n            '0440': 'p',\n            '0455': 's',\n            '0445': 'x',\n            '0443': 'y',\n            '0335': '-',\n        };\n\n        function pad_left(s, char, n) {\n            while (`${s}`.length < n) {\n                s = `${char}${s}`;\n            }\n            return s;\n        }\n\n        const new_task = [];\n        for (const e of task) {\n            const k = pad_left(e.charCodeAt(0).toString(16), '0', 4);\n            if (k in CODE) {\n                new_task.push(CODE[k]);\n            }\n            else {\n                new_task.push(e);\n            }\n        }\n        return new_task.join('');\n    }\n\n\n    let last_urls_hash = null;\n    function on_task_ready(i=500) {\n        return new Promise(resolve => {\n            let checking = false;\n            const check_interval = setInterval(async () => {\n                if (checking) {\n                    return;\n                }\n                checking = true;\n\n                let task = await get_task();\n                if (!task) {\n                    checking = false;\n                    return;\n                }\n\n                const $task_image = document.querySelector('.challenge-example > .image > .image');\n                const task_url = get_image_url($task_image);\n                if (!task_url || task_url === '') {\n                    checking = false;\n                    return;\n                }\n\n                const $cells = document.querySelectorAll('.task-image');\n                if ($cells.length !== 9) {\n                    checking = false;\n                    return;\n                }\n\n                const cells = [];\n                const urls = [];\n                for (const $e of $cells) {\n                    const $img = $e.querySelector('div.image');\n                    if (!$img) {\n                        checking = false;\n                        return;\n                    }\n\n                    const url = get_image_url($img);\n                    if (!url || url === '') {\n                        checking = false;\n                        return;\n                    }\n\n                    cells.push($e);\n                    urls.push(url);\n                }\n\n                const urls_hash = JSON.stringify(urls);\n                if (last_urls_hash === urls_hash) {\n                    checking = false;\n                    return;\n                }\n                last_urls_hash = urls_hash;\n\n                clearInterval(check_interval);\n                checking = false;\n                return resolve({task, task_url, cells, urls});\n            }, i);\n        });\n    }\n\n\n    function got_solve_incorrect() {\n        const $error = document.querySelector('.display-error');\n        return $error?.getAttribute('aria-hidden') !== 'true';\n    }\n\n\n    function submit() {\n        try {\n            document.querySelector('.button-submit').click();\n        } catch (e) {\n            console.error('error submitting', e);\n        }\n    }\n\n\n    function is_cell_selected($cell) {\n        return $cell.getAttribute('aria-pressed') === 'true';\n    }\n\n\n    async function on_widget_frame(settings) {\n        // Wait if already solved\n        if (is_solved()) {\n            if (!was_solved) {\n                was_solved = true;\n            }\n            return;\n        }\n        was_solved = false;\n        await Time.sleep(500);\n        open_image_frame();\n    }\n\n\n    async function on_image_frame() {\n        if (document.querySelector('.display-language .text').textContent !== 'EN') {\n            document.querySelector('.language-selector .option:nth-child(23)').click();\n            await Time.sleep(500);\n        }\n\n        const {task, task_url, cells, urls} = await on_task_ready();\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings.enabled || !settings.hcaptcha_auto_solve) {\n            return;\n        }\n\n        const solve_start = Time.time();\n\n        // Detect images\n        const {job_id, data, metadata} = await NopeCHA.post({\n            captcha_type: IS_DEVELOPMENT ? 'hcaptcha_dev' : 'hcaptcha',\n            task: task,\n            image_urls: urls,\n            key: settings.key,\n        });\n        if (!data) {\n            return;\n        }\n\n        if (hook) {\n            hook.postMessage({event: 'NopeCHA.metadata', metadata});\n        }\n\n        let delay = parseInt(settings.hcaptcha_solve_delay_time);\n        delay = delay ? delay : 3000;\n        const delta = settings.hcaptcha_solve_delay ? (delay - (Time.time() - solve_start)) : 0;\n        if (delta > 0) {\n            await Time.sleep(delta);\n        }\n\n        // Solve\n        for (let i = 0; i < data.length; i++) {\n            if (data[i] === false) {\n                continue;\n            }\n\n            // Click if not already selected\n            if (!is_cell_selected(cells[i])) {\n                cells[i].click();\n            }\n        }\n\n        await Time.sleep(200);\n        submit();\n    }\n\n\n    let was_solved = false;\n    let hooking = false;\n    let hook = null;\n\n\n    while (true) {\n        await Time.sleep(1000);\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings || !settings.enabled) {\n            continue;\n        }\n\n        const hostname = await Location.hostname();\n        if (settings.disabled_hosts.includes(hostname)) {\n            continue;\n        }\n\n        if (!hooking && hook === null) {\n            window.addEventListener('message', e => {\n                if (e.data.event === 'NopeCHA.hook') {\n                    hook = e.source;\n                }\n            });\n\n            if (window.location.hash.includes('frame=challenge')) {\n                hooking = true;\n                const browser_version = await BG.exec('Browser.version');\n                if (browser_version === 'firefox') {\n                    await Script.inject_file('hcaptcha_hook.js');\n                }\n                else {\n                    await BG.exec('Inject.files', {files: ['hcaptcha_hook.js']});\n                }\n            }\n        }\n\n        if (settings.hcaptcha_auto_open && is_widget_frame()) {\n            await on_widget_frame(settings);\n        }\n        else if (settings.hcaptcha_auto_solve && is_image_frame()) {\n            await on_image_frame();\n        }\n    }\n\n    // function show_progress() {\n    //     const sheet = document.body.appendChild(document.createElement('style')).sheet;\n    //     sheet.insertRule(`#nopecha_progress {\n    //         background: #222;\n    //         position: absolute;\n    //         top: 0;\n    //         right: 0;\n    //         min-width: 70px;\n    //         min-height: 70px;\n    //         z-index: 9999;\n    //     }`, 0);\n    //     sheet.insertRule(`.progressbar {\n    //         position: relative;\n    //         width: 70px;\n    //         height: 70px;\n    //         transform: rotate(-90deg);\n    //     }`, 1);\n    //     sheet.insertRule(`.progressbar > svg {\n    //         position: absolute;\n    //         width: 70px;\n    //         height: 70px;\n    //         top: 0;\n    //         bottom: 0;\n    //         left: 0;\n    //         right: 0;\n    //     }`, 2);\n    //     sheet.insertRule(`.progressbar > svg > circle {\n    //         position: relative;\n    //         width: 70px;\n    //         height: 70px;\n    //         fill: none;\n    //         stroke: #fff;\n    //         stroke-width: 2;\n    //         stroke-dasharray: 440;\n    //         stroke-dashoffset: 440;\n    //         stroke-linecap: round;\n    //         transform: translate(5px, 5px);\n    //         -webkit-animation: anim_circle 3s linear forwards;\n    //         animation: anim_circle 3s linear forwards;\n    //         filter: drop-shadow(0 0 5px #ff33ff);\n    //         z-index: 999;\n    //     }`, 3);\n    //     sheet.insertRule(`.progressbar__text {\n    //         color: #ff33ff;\n    //         position: absolute;\n    //         top: 50%;\n    //         left: 50%;\n    //         padding: 0.25em 0.5em;\n    //         border-radius: 0.25em;\n    //         font-size: 12px;\n    //         line-height: 12px;\n    //         text-align: center;\n    //         transform: translate(-50%, -50%) rotate(90deg);\n    //     }`, 4);\n    //     sheet.insertRule(`@-webkit-keyframes anim_circle {to {stroke-dashoffset: 0;}}`, 5);\n    //     sheet.insertRule(`@keyframes anim_circle {to {stroke-dashoffset: 0;}}`, 6);\n\n    //     const $svg = document.createElement('svg');\n    //     $svg.innerHTML = '<circle cx=\"30\" cy=\"30\" r=\"25\"> </circle>'\n    //     const $text = document.createElement('span');\n    //     $text.classList.add('progressbar__text');\n    //     $text.innerHTML = 'Solve';\n    //     const $p = document.createElement('div');\n    //     $p.classList.add('progressbar');\n    //     $p.append($svg);\n    //     $p.append($text);\n    //     const $nopecha_progress = document.createElement('div');\n    //     $nopecha_progress.id = 'nopecha_progress';\n    //     $nopecha_progress.append($p);\n    //     document.body.append($nopecha_progress);\n    // }\n})();\n"
        },
        {
          "name": "hcaptcha_fast.js",
          "type": "blob",
          "size": 1.6279296875,
          "content": "/**\n * Enables drag select for hCaptcha.\n */\n\n(async () => {\n    let $start = null;\n    let is_mousedown = false;\n    let is_selecting = false;\n    function toggle_img($e, enabled, include_start=false) {\n        if (!$e) {\n            return;\n        }\n\n        if (!include_start && $start === $e) {\n            return;\n        }\n\n        if (enabled === true && $e.getAttribute('aria-pressed') === 'false') {\n            $e.click();\n        }\n        else if (enabled === false && $e.getAttribute('aria-pressed') === 'true') {\n            $e.click();\n        }\n    }\n    document.addEventListener('mousedown', e => {\n        if (e?.target?.parentNode?.getAttribute('aria-pressed') === 'false') {\n            is_mousedown = true;\n            is_selecting = true;\n        }\n        else if (e?.target?.parentNode?.getAttribute('aria-pressed') === 'true') {\n            is_mousedown = true;\n            is_selecting = false;\n        }\n        $start = e?.target?.parentNode;\n    });\n    document.addEventListener('mouseup', e => {\n        is_mousedown = false;\n        $start = null;\n    });\n    document.addEventListener('mousemove', e => {\n        if (is_mousedown) {\n            if ($start !== e?.target?.parentNode && $start !== null) {\n                toggle_img($start, is_selecting, true);\n            }\n            toggle_img(e?.target?.parentNode, is_selecting);\n        }\n    });\n\n    window.addEventListener('load', () => {\n        const sheet = document.body.appendChild(document.createElement('style')).sheet;\n        sheet.insertRule('[aria-pressed=\"true\"] > .border-focus {background-color: #0f0 !important; opacity: 0.3 !important}', 0);\n    });\n})();\n"
        },
        {
          "name": "hcaptcha_hook.js",
          "type": "blob",
          "size": 25.1279296875,
          "content": "(() => {\n    const _xh = (function () {\n        'use strict';\n\n        if (!Array.prototype.indexOf) {\n            Array.prototype.indexOf = function(item) {\n                for (let i = 0; i < this.length; i++) {\n                    const x = this[i];\n                    if (x === item) {\n                        return i;\n                    }\n                }\n                return -1;\n            };\n        }\n        const slice = (o, n) => Array.prototype.slice.call(o, n);\n\n        let result = null;\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            result = self;\n        }\n        else if (typeof global !== 'undefined') {\n            result = global;\n        }\n        else if (window) {\n            result = window;\n        }\n        const window_ref = result;\n        const document_ref = result.document;\n\n        const useragent = typeof navigator !== 'undefined' && navigator['useragent'] ? navigator.userAgent : '';\n        let msie = null;\n        if (/msie (\\d+)/.test(useragent.toLowerCase()) || /trident\\/.*; rv:(\\d+)/.test(useragent.toLowerCase())) {\n            msie = parseInt(RegExp.$1, 10);\n        }\n\n        const UPLOAD_EVENTS = ['load', 'loadend', 'loadstart'];\n        const COMMON_EVENTS = ['progress', 'abort', 'error', 'timeout'];\n\n        const deprecated_prop = p => ['returnValue', 'totalSize', 'position'].includes(p);\n\n        const merge_objects = function(src, dst) {\n            for (let k in src) {\n                if (deprecated_prop(k)) {\n                    continue;\n                }\n                const v = src[k];\n                try {\n                    dst[k] = v;\n                } catch (error) {}\n            }\n            return dst;\n        };\n\n        const proxy_events = function(events, src, dst) {\n            const p = event => function(e) {\n                const clone = {};\n                for (let k in e) {\n                    if (deprecated_prop(k)) {\n                        continue;\n                    }\n                    const val = e[k];\n                    clone[k] = val === src ? dst : val;\n                }\n                return dst.dispatchEvent(event, clone);\n            };\n            for (let event of Array.from(events)) {\n                if (dst._has(event)) {\n                    src[`on${event}`] = p(event);\n                }\n            }\n        };\n\n        const fake_event = function(type) {\n            if (document_ref && document_ref.createEventObject != null) {\n                const msieEventObject = document_ref.createEventObject();\n                msieEventObject.type = type;\n                return msieEventObject;\n            }\n            try {\n                return new Event(type);\n            } catch (error) {\n                return { type };\n            }\n        };\n\n        const EventEmitter = function(node_style) {\n            let events = {};\n            const listeners = event => events[event] || [];\n            const emitter = {};\n            emitter.addEventListener = function(event, callback, i) {\n                events[event] = listeners(event);\n                if (events[event].indexOf(callback) >= 0) {\n                    return;\n                }\n                i = i === undefined ? events[event].length : i;\n                events[event].splice(i, 0, callback);\n            };\n            emitter.removeEventListener = function(event, callback) {\n                if (event === undefined) {\n                    events = {};\n                    return;\n                }\n                if (callback === undefined) {\n                    events[event] = [];\n                }\n                const i = listeners(event).indexOf(callback);\n                if (i === -1) {\n                    return;\n                }\n                listeners(event).splice(i, 1);\n            };\n            emitter.dispatchEvent = function() {\n                const args = slice(arguments);\n                const event = args.shift();\n                if (!node_style) {\n                    args[0] = merge_objects(args[0], fake_event(event));\n                }\n                const legacylistener = emitter[`on${event}`];\n                if (legacylistener) {\n                    legacylistener.apply(emitter, args);\n                }\n                const iterable = listeners(event).concat(listeners('*'));\n                for (let i = 0; i < iterable.length; i++) {\n                    const listener = iterable[i];\n                    listener.apply(emitter, args);\n                }\n            };\n            emitter._has = event => !!(events[event] || emitter[`on${event}`]);\n            if (node_style) {\n                emitter.listeners = event => slice(listeners(event));\n                emitter.on = emitter.addEventListener;\n                emitter.off = emitter.removeEventListener;\n                emitter.fire = emitter.dispatchEvent;\n                emitter.once = function(e, fn) {\n                    var fire = function() {\n                        emitter.off(e, fire);\n                        return fn.apply(null, arguments);\n                    };\n                    return emitter.on(e, fire);\n                };\n                emitter.destroy = () => (events = {});\n            }\n\n            return emitter;\n        };\n\n        const convert = function(h, dest) {\n            let name;\n            if (dest == null) {\n                dest = {};\n            }\n            switch (typeof h) {\n                case 'object':\n                    var headers = [];\n                    for (let k in h) {\n                        const v = h[k];\n                        name = k.toLowerCase();\n                        headers.push(`${name}:\\t${v}`);\n                    }\n                    return headers.join('\\n') + '\\n';\n                case 'string':\n                    headers = h.split('\\n');\n                    for (let header of Array.from(headers)) {\n                        if (/([^:]+):\\s*(.+)/.test(header)) {\n                            name = RegExp.$1 != null ? RegExp.$1.toLowerCase() : undefined;\n                            const value = RegExp.$2;\n                            if (dest[name] == null) {\n                                dest[name] = value;\n                            }\n                        }\n                    }\n                    return dest;\n            }\n            return [];\n        };\n\n        var headers = {convert};\n\n        const hooks = EventEmitter(true);\n\n        const nullify = res => (res === undefined ? null : res);\n\n        const Native$1 = window_ref.XMLHttpRequest;\n\n        const XH$1 = function() {\n            const ABORTED = -1;\n            const xhr = new Native$1();\n            const request = {};\n            let status = null;\n            let hasError = undefined;\n            let transiting = undefined;\n            let response = undefined;\n            var current_state = 0;\n\n            const read_head = function() {\n                response.status = status || xhr.status;\n                if (status !== ABORTED || !(msie < 10)) {\n                    response.statusText = xhr.statusText;\n                }\n                if (status !== ABORTED) {\n                    const object = headers.convert(xhr.getAllResponseHeaders());\n                    for (let key in object) {\n                        const val = object[key];\n                        if (!response.headers[key]) {\n                            const name = key.toLowerCase();\n                            response.headers[name] = val;\n                        }\n                    }\n                    return;\n                }\n            };\n\n            const read_body = function() {\n                if (!xhr.responseType || xhr.responseType === 'text') {\n                    response.text = xhr.responseText;\n                    response.data = xhr.responseText;\n                    try {\n                        response.xml = xhr.responseXML;\n                    } catch (error) {}\n                }\n                else if (xhr.responseType === 'document') {\n                    response.xml = xhr.responseXML;\n                    response.data = xhr.responseXML;\n                }\n                else {\n                    response.data = xhr.response;\n                }\n                if ('responseURL' in xhr) {\n                    response.finalUrl = xhr.responseURL;\n                }\n            };\n\n            const write_head = function() {\n                facade.status = response.status;\n                facade.statusText = response.statusText;\n            };\n\n            const write_body = function() {\n                if ('text' in response) {\n                    facade.responseText = response.text;\n                }\n                if ('xml' in response) {\n                    facade.responseXML = response.xml;\n                }\n                if ('data' in response) {\n                    facade.response = response.data;\n                }\n                if ('finalUrl' in response) {\n                    facade.responseURL = response.finalUrl;\n                }\n            };\n\n            const emit_final = function() {\n                if (!hasError) {\n                    facade.dispatchEvent('load', {});\n                }\n                facade.dispatchEvent('loadend', {});\n                if (hasError) {\n                    facade.readyState = 0;\n                }\n            };\n\n            const emit_ready_state = function(n) {\n                while (n > current_state && current_state < 4) {\n                    facade.readyState = ++current_state;\n                    if (current_state === 1) {\n                        facade.dispatchEvent('loadstart', {});\n                    }\n                    if (current_state === 2) {\n                        write_head();\n                    }\n                    if (current_state === 4) {\n                        write_head();\n                        write_body();\n                    }\n                    facade.dispatchEvent('readystatechange', {});\n                    if (current_state === 4) {\n                        if (request.async === false) {\n                            emit_final();\n                        }\n                        else {\n                            setTimeout(emit_final, 0);\n                        }\n                    }\n                }\n            };\n\n            const set_ready_state = function(n) {\n                if (n !== 4) {\n                    emit_ready_state(n);\n                    return;\n                }\n                const after_hooks = hooks.listeners('after');\n                var process = function() {\n                    if (after_hooks.length > 0) {\n                        const hook = after_hooks.shift();\n                        if (hook.length === 2) {\n                            hook(request, response);\n                            process();\n                        }\n                        else if (hook.length === 3 && request.async) {\n                            hook(request, response, process);\n                        }\n                        else {\n                            process();\n                        }\n                    }\n                    else {\n                        emit_ready_state(4);\n                    }\n                    return;\n                };\n                process();\n            };\n\n            var facade = EventEmitter();\n            request.xhr = facade;\n\n            xhr.onreadystatechange = function(event) {\n                try {\n                    if (xhr.readyState === 2) {\n                        read_head();\n                    }\n                } catch (error) {}\n                if (xhr.readyState === 4) {\n                    transiting = false;\n                    read_head();\n                    read_body();\n                }\n\n                set_ready_state(xhr.readyState);\n            };\n\n            const has_error_handler = function() {\n                hasError = true;\n            };\n            facade.addEventListener('error', has_error_handler);\n            facade.addEventListener('timeout', has_error_handler);\n            facade.addEventListener('abort', has_error_handler);\n            facade.addEventListener('progress', function(event) {\n                if (current_state < 3) {\n                    set_ready_state(3);\n                }\n                else if (xhr.readyState <= 3) {\n                    facade.dispatchEvent('readystatechange', {});\n                }\n            });\n\n            if ('withCredentials' in xhr) {\n                facade.withCredentials = false;\n            }\n            facade.status = 0;\n\n            for (let event of Array.from(COMMON_EVENTS.concat(UPLOAD_EVENTS))) {\n                facade[`on${event}`] = null;\n            }\n\n            facade.open = function(method, url, async, user, pass) {\n                current_state = 0;\n                hasError = false;\n                transiting = false;\n                request.headers = {};\n                request.headerNames = {};\n                request.status = 0;\n                request.method = method;\n                request.url = url;\n                request.async = async !== false;\n                request.user = user;\n                request.pass = pass;\n                response = {};\n                response.headers = {};\n                set_ready_state(1);\n            };\n\n            facade.send = function(body) {\n                let k, modk;\n                for (k of ['type', 'timeout', 'withCredentials']) {\n                    modk = k === 'type' ? 'responseType' : k;\n                    if (modk in facade) {\n                        request[k] = facade[modk];\n                    }\n                }\n\n                request.body = body;\n                const send = function() {\n                    proxy_events(COMMON_EVENTS, xhr, facade);\n                    if (facade.upload) {\n                        proxy_events(\n                            COMMON_EVENTS.concat(UPLOAD_EVENTS),\n                            xhr.upload,\n                            facade.upload\n                        );\n                    }\n\n                    transiting = true;\n                    xhr.open(\n                        request.method,\n                        request.url,\n                        request.async,\n                        request.user,\n                        request.pass\n                    );\n\n                    for (k of ['type', 'timeout', 'withCredentials']) {\n                        modk = k === 'type' ? 'responseType' : k;\n                        if (k in request) {\n                            xhr[modk] = request[k];\n                        }\n                    }\n\n                    for (let header in request.headers) {\n                        const value = request.headers[header];\n                        if (header) {\n                            xhr.setRequestHeader(header, value);\n                        }\n                    }\n                    xhr.send(request.body);\n                };\n\n                const before_hooks = hooks.listeners('before');\n                var process = function() {\n                    if (!before_hooks.length) {\n                        return send();\n                    }\n                    const done = function(userResponse) {\n                        if (typeof userResponse === 'object' && (typeof userResponse.status === 'number' || typeof response.status === 'number')) {\n                            merge_objects(userResponse, response);\n                            if (!('data' in userResponse)) {\n                                userResponse.data = userResponse.response || userResponse.text;\n                            }\n                            set_ready_state(4);\n                            return;\n                        }\n                        process();\n                    };\n                    done.head = function(userResponse) {\n                        merge_objects(userResponse, response);\n                        set_ready_state(2);\n                    };\n                    done.progress = function(userResponse) {\n                        merge_objects(userResponse, response);\n                        set_ready_state(3);\n                    };\n\n                    const hook = before_hooks.shift();\n                    if (hook.length === 1) {\n                        done(hook(request));\n                    }\n                    else if (hook.length === 2 && request.async) {\n                        hook(request, done);\n                    }\n                    else {\n                        done();\n                    }\n                    return;\n                };\n                process();\n            };\n\n            facade.abort = function() {\n                status = ABORTED;\n                if (transiting) {\n                    xhr.abort();\n                }\n                else {\n                    facade.dispatchEvent('abort', {});\n                }\n            };\n\n            facade.setRequestHeader = function(header, value) {\n                const lName = header != null ? header.toLowerCase() : undefined;\n                const name = (request.headerNames[lName] = request.headerNames[lName] || header);\n                if (request.headers[name]) {\n                    value = request.headers[name] + ', ' + value;\n                }\n                request.headers[name] = value;\n            };\n            facade.getResponseHeader = header => nullify(response.headers[header ? header.toLowerCase() : undefined]);\n            facade.getAllResponseHeaders = () => nullify(headers.convert(response.headers));\n\n            if (xhr.overrideMimeType) {\n                facade.overrideMimeType = function() {\n                    xhr.overrideMimeType.apply(xhr, arguments);\n                };\n            }\n\n            if (xhr.upload) {\n                let up = EventEmitter();\n                facade.upload = up;\n                request.upload = up;\n            }\n\n            facade.UNSENT = 0;\n            facade.OPENED = 1;\n            facade.HEADERS_RECEIVED = 2;\n            facade.LOADING = 3;\n            facade.DONE = 4;\n            facade.response = '';\n            facade.responseText = '';\n            facade.responseXML = null;\n            facade.readyState = 0;\n            facade.statusText = '';\n\n            return facade;\n        };\n\n        XH$1.UNSENT = 0;\n        XH$1.OPENED = 1;\n        XH$1.HEADERS_RECEIVED = 2;\n        XH$1.LOADING = 3;\n        XH$1.DONE = 4;\n\n        var XMLHttpRequest = {\n            patch() {\n                if (Native$1) {\n                    window_ref.XMLHttpRequest = XH$1;\n                }\n            },\n            unpatch() {\n                if (Native$1) {\n                    window_ref.XMLHttpRequest = Native$1;\n                }\n            },\n            Native: Native$1,\n            XH: XH$1\n        };\n\n        const Native = window_ref.fetch;\n\n        const XH = function(url, options) {\n            if (options == null) {\n                options = {headers: {}};\n            }\n\n            let request = null;\n\n            if (url instanceof Request) {\n                request = url;\n            }\n            else {\n                options.url = url;\n            }\n\n            const before_hooks = hooks.listeners('before');\n            const after_hooks = hooks.listeners('after');\n\n            return new Promise(function(resolve, reject) {\n                const get_request = function() {\n                    if (options.headers) {\n                        options.headers = new Headers(options.headers);\n                    }\n                    if (!request) {\n                        request = new Request(options.url, options);\n                    }\n                    return merge_objects(options, request);\n                };\n\n                const process_after = function(response) {\n                    if (!after_hooks.length) {\n                        return resolve(response);\n                    }\n                    const hook = after_hooks.shift();\n                    if (hook.length === 2) {\n                        hook(get_request(), response);\n                        return process_after(response);\n                    }\n                    else if (hook.length === 3) {\n                        return hook(get_request(), response, process_after);\n                    }\n                    else {\n                        return process_after(response);\n                    }\n                };\n\n                const done = function(userResponse) {\n                    if (userResponse !== undefined) {\n                        const response = new Response(userResponse.body || userResponse.text, userResponse);\n                        resolve(response);\n                        process_after(response);\n                        return;\n                    }\n                    process_before();\n                };\n\n                const process_before = function() {\n                    if (!before_hooks.length) {\n                        send();\n                        return;\n                    }\n\n                    const hook = before_hooks.shift();\n\n                    if (hook.length === 1) {\n                        return done(hook(options));\n                    } else if (hook.length === 2) {\n                        return hook(get_request(), done);\n                    }\n                };\n\n                var send = () => Native(get_request())\n                    .then(response => process_after(response))\n                    .catch(function(err) {\n                        resolve = reject;\n                        process_after(err);\n                        return reject(err);\n                    });\n\n                process_before();\n            });\n        };\n\n        var fetch = {\n            patch() {\n                if (Native) {\n                    window_ref.fetch = XH;\n                }\n            },\n            unpatch() {\n                if (Native) {\n                    window_ref.fetch = Native;\n                }\n            },\n            Native,\n            XH\n        };\n\n        const xh = hooks;\n        xh.EventEmitter = EventEmitter;\n        xh.before = function(handler, i) {\n            if (handler.length < 1 || handler.length > 2) {\n                throw 'invalid hook';\n            }\n            return xh.on('before', handler, i);\n        };\n        xh.after = function(handler, i) {\n            if (handler.length < 2 || handler.length > 3) {\n                throw 'invalid hook';\n            }\n            return xh.on('after', handler, i);\n        };\n        xh.enable = function() {\n            XMLHttpRequest.patch();\n            fetch.patch();\n        };\n        xh.disable = function() {\n            XMLHttpRequest.unpatch();\n            fetch.unpatch();\n        };\n        xh.XMLHttpRequest = XMLHttpRequest.Native;\n        xh.fetch = fetch.Native;\n        xh.headers = headers.convert;\n        xh.enable();\n        return xh;\n    })();\n\n\n    function is_hcaptcha(req) {\n        return req.method === 'POST' && req.url.startsWith('https://hcaptcha.com/checkcaptcha/');\n    }\n\n\n    function build_metadata(metadata) {\n        const r = {md: [], mm: [], mu: []};\n        for (const e of metadata) {\n            for (const k of Object.keys(r)) {\n                const t = r[k].length === 0 ? 0 : r[k][r[k].length-1][2];\n                const v = e[k].map(x => [\n                    Math.ceil(x[0]),\n                    Math.ceil(x[1]),\n                    Math.ceil(x[2] + t),\n                ]);\n                r[k].push(...v);\n            }\n        }\n        for (const k of Object.keys(r)) {\n            const delta = [];\n            let v = null;\n            for (const e of r[k]) {\n                if (v !== null) {\n                    delta.push(e[2] - v);\n                }\n                v = e[2];\n            }\n            let mp = 0;\n            if (delta.length > 0) {\n                mp = delta.reduce((a, b) => a + b) / delta.length;\n            }\n            r[`${k}-mp`] = mp;\n        }\n        return r;\n    }\n\n\n    function relative_ts(r, st, max=null) {\n        const _r = JSON.parse(JSON.stringify(r));\n        for (const k of Object.keys(_r)) {\n            if (k.endsWith('-mp')) {\n                continue;\n            }\n            const a = [];\n            for (let i = 0; i < _r[k].length; i++) {\n                const t = _r[k][i][2] + st;\n                if (max !== null && t >= max) {\n                    continue;\n                }\n                a.push([_r[k][i][0], _r[k][i][1], t]);\n            }\n            _r[k] = a;\n        }\n        return _r;\n    }\n\n\n    function merge(original, overwrite) {\n        for (const k of Object.keys(overwrite)) {\n            original[k] = overwrite[k];\n        }\n    }\n\n\n    let metadata = [];\n    window.addEventListener('message', e => {\n        if (e.data.event === 'NopeCHA.metadata') {\n            metadata.push(e.data.metadata);\n        }\n    });\n    window.postMessage({event: 'NopeCHA.hook'});\n\n\n    _xh.before(r => {\n        try {\n            if (is_hcaptcha(r)) {\n                const data = JSON.parse(r.body);\n                const md = JSON.parse(data.motionData);\n                const c = build_metadata(metadata);\n                merge(md, relative_ts(c, md.st));\n                merge(md.topLevel, relative_ts(c, md.topLevel.st, md.st));\n                data.motionData = JSON.stringify(md);\n                r.body = JSON.stringify(data);\n                metadata = [];\n            }\n        } catch (e) {\n            console.log('xh error', e);\n        }\n    });\n})();\n"
        },
        {
          "name": "hcaptcha_language.js",
          "type": "blob",
          "size": 0.98828125,
          "content": "/**\n * Sets the hCaptcha language to English.\n */\n\n(() => {\n    const TARGET_LANG = 'en';\n    let observer;\n\n    function scan_head() {\n        const current_language = navigator.language.split('-')[0];\n        for (const $e of document.querySelectorAll(`script[src*=\"hcaptcha.com/1/api.js\"]`)) {\n            // observer.disconnect();\n            const url = new URL($e.src);\n            const lang = url.searchParams.get('hl') || current_language;\n            if (lang === TARGET_LANG) {\n                continue;\n            }\n            url.searchParams.set('hl', TARGET_LANG);\n            $e.src = url.toString();\n        }\n    }\n\n    observer = new MutationObserver(scan_head);\n\n    // Wait for head\n    setTimeout(() => {\n        scan_head();\n        observer.observe(document.head, {childList: true});\n\n        // // Stop observer timeout\n        // setTimeout(() => {\n        //     observer.disconnect();\n        //     console.log('disconnected observer');\n        // }, 1000 * 60);\n    }, 0);\n\n})();\n"
        },
        {
          "name": "icon",
          "type": "tree",
          "content": null
        },
        {
          "name": "locate.js",
          "type": "blob",
          "size": 23.28125,
          "content": "(async () => {\n    !function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.CssSelectorGenerator=e():t.CssSelectorGenerator=e()}(self,(()=>(()=>{\"use strict\";var t,e,n={d:(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})}},o={};function r(t){return t&&t instanceof Element}function i(t=\"unknown problem\",...e){console.warn(`CssSelectorGenerator: ${t}`,...e)}n.r(o),n.d(o,{default:()=>z,getCssSelector:()=>U}),function(t){t.NONE=\"none\",t.DESCENDANT=\"descendant\",t.CHILD=\"child\"}(t||(t={})),function(t){t.id=\"id\",t.class=\"class\",t.tag=\"tag\",t.attribute=\"attribute\",t.nthchild=\"nthchild\",t.nthoftype=\"nthoftype\"}(e||(e={}));const c={selectors:[e.id,e.class,e.tag,e.attribute],includeTag:!1,whitelist:[],blacklist:[],combineWithinSelector:!0,combineBetweenSelectors:!0,root:null,maxCombinations:Number.POSITIVE_INFINITY,maxCandidates:Number.POSITIVE_INFINITY};function u(t){return t instanceof RegExp}function s(t){return[\"string\",\"function\"].includes(typeof t)||u(t)}function l(t){return Array.isArray(t)?t.filter(s):[]}function a(t){const e=[Node.DOCUMENT_NODE,Node.DOCUMENT_FRAGMENT_NODE,Node.ELEMENT_NODE];return function(t){return t instanceof Node}(t)&&e.includes(t.nodeType)}function f(t,e){if(a(t))return t.contains(e)||i(\"element root mismatch\",\"Provided root does not contain the element. This will most likely result in producing a fallback selector using element's real root node. If you plan to use the selector using provided root (e.g. `root.querySelector`), it will nto work as intended.\"),t;const n=e.getRootNode({composed:!1});return a(n)?(n!==document&&i(\"shadow root inferred\",\"You did not provide a root and the element is a child of Shadow DOM. This will produce a selector using ShadowRoot as a root. If you plan to use the selector using document as a root (e.g. `document.querySelector`), it will not work as intended.\"),n):e.ownerDocument.querySelector(\":root\")}function d(t){return\"number\"==typeof t?t:Number.POSITIVE_INFINITY}function m(t=[]){const[e=[],...n]=t;return 0===n.length?e:n.reduce(((t,e)=>t.filter((t=>e.includes(t)))),e)}function p(t){return[].concat(...t)}function h(t){const e=t.map((t=>{if(u(t))return e=>t.test(e);if(\"function\"==typeof t)return e=>{const n=t(e);return\"boolean\"!=typeof n?(i(\"pattern matcher function invalid\",\"Provided pattern matching function does not return boolean. It's result will be ignored.\",t),!1):n};if(\"string\"==typeof t){const e=new RegExp(\"^\"+t.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".+\")+\"$\");return t=>e.test(t)}return i(\"pattern matcher invalid\",\"Pattern matching only accepts strings, regular expressions and/or functions. This item is invalid and will be ignored.\",t),()=>!1}));return t=>e.some((e=>e(t)))}function g(t,e,n){const o=Array.from(f(n,t[0]).querySelectorAll(e));return o.length===t.length&&t.every((t=>o.includes(t)))}function y(t,e){e=null!=e?e:function(t){return t.ownerDocument.querySelector(\":root\")}(t);const n=[];let o=t;for(;r(o)&&o!==e;)n.push(o),o=o.parentElement;return n}function b(t,e){return m(t.map((t=>y(t,e))))}const N={[t.NONE]:{type:t.NONE,value:\"\"},[t.DESCENDANT]:{type:t.DESCENDANT,value:\" > \"},[t.CHILD]:{type:t.CHILD,value:\" \"}},S=new RegExp([\"^$\",\"\\\\s\"].join(\"|\")),E=new RegExp([\"^$\"].join(\"|\")),w=[e.nthoftype,e.tag,e.id,e.class,e.attribute,e.nthchild],v=h([\"class\",\"id\",\"ng-*\"]);function C({nodeName:t}){return`[${t}]`}function O({nodeName:t,nodeValue:e}){return`[${t}='${L(e)}']`}function T(t){const e=Array.from(t.attributes).filter((e=>function({nodeName:t},e){const n=e.tagName.toLowerCase();return!([\"input\",\"option\"].includes(n)&&\"value\"===t||v(t))}(e,t)));return[...e.map(C),...e.map(O)]}function I(t){return(t.getAttribute(\"class\")||\"\").trim().split(/\\s+/).filter((t=>!E.test(t))).map((t=>`.${L(t)}`))}function x(t){const e=t.getAttribute(\"id\")||\"\",n=`#${L(e)}`,o=t.getRootNode({composed:!1});return!S.test(e)&&g([t],n,o)?[n]:[]}function j(t){const e=t.parentNode;if(e){const n=Array.from(e.childNodes).filter(r).indexOf(t);if(n>-1)return[`:nth-child(${n+1})`]}return[]}function A(t){return[L(t.tagName.toLowerCase())]}function D(t){const e=[...new Set(p(t.map(A)))];return 0===e.length||e.length>1?[]:[e[0]]}function $(t){const e=D([t])[0],n=t.parentElement;if(n){const o=Array.from(n.children).filter((t=>t.tagName.toLowerCase()===e)),r=o.indexOf(t);if(r>-1)return[`${e}:nth-of-type(${r+1})`]}return[]}function R(t=[],{maxResults:e=Number.POSITIVE_INFINITY}={}){const n=[];let o=0,r=k(1);for(;r.length<=t.length&&o<e;)o+=1,n.push(r.map((e=>t[e]))),r=P(r,t.length-1);return n}function P(t=[],e=0){const n=t.length;if(0===n)return[];const o=[...t];o[n-1]+=1;for(let t=n-1;t>=0;t--)if(o[t]>e){if(0===t)return k(n+1);o[t-1]++,o[t]=o[t-1]+1}return o[n-1]>e?k(n+1):o}function k(t=1){return Array.from(Array(t).keys())}const _=\":\".charCodeAt(0).toString(16).toUpperCase(),M=/[ !\"#$%&'()\\[\\]{|}<>*+,./;=?@^`~\\\\]/;function L(t=\"\"){var e,n;return null!==(n=null===(e=null===CSS||void 0===CSS?void 0:CSS.escape)||void 0===e?void 0:e.call(CSS,t))&&void 0!==n?n:function(t=\"\"){return t.split(\"\").map((t=>\":\"===t?`\\\\${_} `:M.test(t)?`\\\\${t}`:escape(t).replace(/%/g,\"\\\\\"))).join(\"\")}(t)}const q={tag:D,id:function(t){return 0===t.length||t.length>1?[]:x(t[0])},class:function(t){return m(t.map(I))},attribute:function(t){return m(t.map(T))},nthchild:function(t){return m(t.map(j))},nthoftype:function(t){return m(t.map($))}},F={tag:A,id:x,class:I,attribute:T,nthchild:j,nthoftype:$};function V(t){return t.includes(e.tag)||t.includes(e.nthoftype)?[...t]:[...t,e.tag]}function Y(t={}){const n=[...w];return t[e.tag]&&t[e.nthoftype]&&n.splice(n.indexOf(e.tag),1),n.map((e=>{return(o=t)[n=e]?o[n].join(\"\"):\"\";var n,o})).join(\"\")}function B(t,e,n=\"\",o){const r=function(t,e){return\"\"===e?t:function(t,e){return[...t.map((t=>e+\" \"+t)),...t.map((t=>e+\" > \"+t))]}(t,e)}(function(t,e,n){const o=function(t,e){const{blacklist:n,whitelist:o,combineWithinSelector:r,maxCombinations:i}=e,c=h(n),u=h(o);return function(t){const{selectors:e,includeTag:n}=t,o=[].concat(e);return n&&!o.includes(\"tag\")&&o.push(\"tag\"),o}(e).reduce(((e,n)=>{const o=function(t,e){var n;return(null!==(n=q[e])&&void 0!==n?n:()=>[])(t)}(t,n),s=function(t=[],e,n){return t.filter((t=>n(t)||!e(t)))}(o,c,u),l=function(t=[],e){return t.sort(((t,n)=>{const o=e(t),r=e(n);return o&&!r?-1:!o&&r?1:0}))}(s,u);return e[n]=r?R(l,{maxResults:i}):l.map((t=>[t])),e}),{})}(t,n),r=function(t,e){return function(t){const{selectors:e,combineBetweenSelectors:n,includeTag:o,maxCandidates:r}=t,i=n?R(e,{maxResults:r}):e.map((t=>[t]));return o?i.map(V):i}(e).map((e=>function(t,e){const n={};return t.forEach((t=>{const o=e[t];o.length>0&&(n[t]=o)})),function(t={}){let e=[];return Object.entries(t).forEach((([t,n])=>{e=n.flatMap((n=>0===e.length?[{[t]:n}]:e.map((e=>Object.assign(Object.assign({},e),{[t]:n})))))})),e}(n).map(Y)}(e,t))).filter((t=>t.length>0))}(o,n),i=p(r);return[...new Set(i)]}(t,o.root,o),n);for(const e of r)if(g(t,e,o.root))return e;return null}function G(t){return{value:t,include:!1}}function W({selectors:t,operator:n}){let o=[...w];t[e.tag]&&t[e.nthoftype]&&(o=o.filter((t=>t!==e.tag)));let r=\"\";return o.forEach((e=>{(t[e]||[]).forEach((({value:t,include:e})=>{e&&(r+=t)}))})),n.value+r}function H(n){return[\":root\",...y(n).reverse().map((n=>{const o=function(e,n,o=t.NONE){const r={};return n.forEach((t=>{Reflect.set(r,t,function(t,e){return F[e](t)}(e,t).map(G))})),{element:e,operator:N[o],selectors:r}}(n,[e.nthchild],t.DESCENDANT);return o.selectors.nthchild.forEach((t=>{t.include=!0})),o})).map(W)].join(\"\")}function U(t,n={}){const o=function(t){const e=(Array.isArray(t)?t:[t]).filter(r);return[...new Set(e)]}(t),i=function(t,n={}){const o=Object.assign(Object.assign({},c),n);return{selectors:(r=o.selectors,Array.isArray(r)?r.filter((t=>{return n=e,o=t,Object.values(n).includes(o);var n,o})):[]),whitelist:l(o.whitelist),blacklist:l(o.blacklist),root:f(o.root,t),combineWithinSelector:!!o.combineWithinSelector,combineBetweenSelectors:!!o.combineBetweenSelectors,includeTag:!!o.includeTag,maxCombinations:d(o.maxCombinations),maxCandidates:d(o.maxCandidates)};var r}(o[0],n);let u=\"\",s=i.root;function a(){return function(t,e,n=\"\",o){if(0===t.length)return null;const r=[t.length>1?t:[],...b(t,e).map((t=>[t]))];for(const t of r){const e=B(t,0,n,o);if(e)return{foundElements:t,selector:e}}return null}(o,s,u,i)}let m=a();for(;m;){const{foundElements:t,selector:e}=m;if(g(o,e,i.root))return e;s=t[0],u=e,m=a()}return o.length>1?o.map((t=>U(t,i))).join(\", \"):function(t){return t.map(H).join(\", \")}(o)}const z=U;return o})()));\n\n\n    function is_iframe() {\n        try {\n            return window.self !== window.top;\n        } catch (e) {\n            return true;\n        }\n    }\n\n\n    class NopechaSelector {\n        constructor(locate, draw_mark=false) {\n            this.NAMESPACE = '__NOPECHA__';\n            this.MARK_RADIUS = 5;\n\n            this.window_id = Util.generate_id(8);\n            this.locate = locate;\n            this.draw_mark = draw_mark;\n            this.update_timer;\n            this.css_selector;\n            this.$last;\n\n            this.initialize_style();\n            this.initialize_elements();\n        }\n\n        initialize_style() {\n            const CSS = [\n                `#${this.NAMESPACE}_wrapper {\n                    position: fixed;\n                    top: 0;\n                    bottom: 0;\n                    left: 0;\n                    right: 0;\n                    background-color: transparent;\n                    pointer-events: none;\n                    z-index: 10000000;\n                }`,\n                // Header & footer\n                `.${this.NAMESPACE}_textbox {\n                    display: flex;\n                    flex-direction: row;\n                    flex-wrap: wrap;\n\n                    position: absolute;\n                    left: 0;\n                    right: 0;\n\n                    background-color: rgba(0, 0, 0, 1);\n                    color: #fff;\n                    font: normal 12px/12px Helvetica, sans-serif;\n                    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\n                    border: 1px solid #fff;\n                    overflow: hidden;\n                }`,\n                // Header\n                `.${this.NAMESPACE}_textbox.${this.NAMESPACE}_header {\n                    top: 0;\n                }`,\n                `.${this.NAMESPACE}_textbox.${this.NAMESPACE}_header > div {\n                    padding: 4px 8px;\n                }`,\n                `.${this.NAMESPACE}_textbox.${this.NAMESPACE}_header > div:first-child {\n                    flex-grow: 1;\n                }`,\n                // Footer\n                `.${this.NAMESPACE}_textbox.${this.NAMESPACE}_footer {\n                    bottom: 0;\n                }`,\n                `.${this.NAMESPACE}_textbox.${this.NAMESPACE}_footer > div {\n                    padding: 4px 8px;\n                }`,\n                `.${this.NAMESPACE}_textbox.${this.NAMESPACE}_footer > div:first-child {\n                    flex-grow: 1;\n                }`,\n                // Highlight\n                `.${this.NAMESPACE}_highlight {\n                    position: absolute;\n                    opacity: 0.4;\n                }`,\n                `.${this.NAMESPACE}_highlight.${this.NAMESPACE}_margin {\n                    background-color: rgb(230, 165, 18);\n                }`,\n                `.${this.NAMESPACE}_highlight.${this.NAMESPACE}_border {\n                    background-color: rgb(255, 204, 121);\n                }`,\n                `.${this.NAMESPACE}_highlight.${this.NAMESPACE}_padding {\n                    background-color: rgb(50, 255, 50);\n                }`,\n                `.${this.NAMESPACE}_highlight.${this.NAMESPACE}_content {\n                    background-color: rgb(0, 153, 201);\n                }`,\n                // Center mark\n                `.${this.NAMESPACE}_mark {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n\n                    width: ${parseInt(this.MARK_RADIUS*2)}px;\n                    height: ${parseInt(this.MARK_RADIUS*2)}px;\n                    background-color: #f44;\n                    border-radius: 50%;\n                    z-index: 2;\n                }`,\n            ];\n\n            if (!is_iframe()) {\n                CSS.push(`.${this.NAMESPACE}_shadow {\n                    position: fixed;\n                    top: 0;\n                    bottom: 0;\n                    left: 0;\n                    right: 0;\n                    background-color: rgba(0, 0, 0, 0.2);\n                    pointer-events: none;\n                    z-index: 1;\n                }`);\n            }\n\n            this.$style = document.createElement('style');\n            this.$style.type = 'text/css';\n            if (this.$style.styleSheet) {\n                this.$style.styleSheet.cssText = CSS.join('\\n');  // IE\n            }\n            else {\n                this.$style.innerHTML = CSS.join('\\n');\n            }\n            document.getElementsByTagName('head')[0].appendChild(this.$style);\n        }\n\n        initialize_elements() {\n            this.$wrapper = document.createElement('div');\n            this.$wrapper.id = `${this.NAMESPACE}_wrapper`;\n            document.body.append(this.$wrapper);\n\n            this.$shadow = document.createElement('div');\n            this.$shadow.classList.add(`${this.NAMESPACE}_shadow`);\n            this.$wrapper.append(this.$shadow);\n\n            this.$margin_box = document.createElement('div');\n            this.$margin_box.classList.add(`${this.NAMESPACE}_highlight`, `${this.NAMESPACE}_margin`);\n            this.$wrapper.append(this.$margin_box);\n\n            this.$border_box = document.createElement('div');\n            this.$border_box.classList.add(`${this.NAMESPACE}_highlight`, `${this.NAMESPACE}_border`);\n            this.$wrapper.append(this.$border_box);\n\n            this.$padding_box = document.createElement('div');\n            this.$padding_box.classList.add(`${this.NAMESPACE}_highlight`, `${this.NAMESPACE}_padding`);\n            this.$wrapper.append(this.$padding_box);\n\n            this.$content_box = document.createElement('div');\n            this.$content_box.classList.add(`${this.NAMESPACE}_highlight`, `${this.NAMESPACE}_content`);\n            this.$wrapper.append(this.$content_box);\n\n            if (!is_iframe()) {\n                this.$header = document.createElement('div');\n                this.$header.classList.add(`${this.NAMESPACE}_textbox`, `${this.NAMESPACE}_header`);\n                const etype = this.locate === 'textcaptcha_image_selector' ? '<b>Image</b>' : '<b>Input</b>';\n                this.$header.innerHTML = `\n                    <div>\n                        <div>Click on the CAPTCHA ${etype} element to generate a CSS selector.</div>\n                        <div>Press <b>ESC</b> to cancel.</div>\n                    </div>\n                    <div><b>NopeCHA</b></div>\n                `;\n                this.$wrapper.append(this.$header);\n\n                this.$footer = document.createElement('div');\n                this.$footer.classList.add(`${this.NAMESPACE}_textbox`, `${this.NAMESPACE}_footer`);\n                this.$wrapper.append(this.$footer);\n            }\n\n\n            if (this.draw_mark) {\n                this.$mark = document.createElement('div');\n                this.$mark.classList.add(`${this.NAMESPACE}_mark`);\n                this.$wrapper.append(this.$mark);\n            }\n        }\n\n        clip(pos) {\n            const clipped = {\n                top: Math.max(0, pos.top),\n                left: Math.max(0, pos.left),\n                width: (pos.width + pos.left > window.innerWidth) ? (window.innerWidth - pos.left) : pos.width,\n                height: (pos.height + pos.top > window.innerHeight) ? (window.innerHeight - pos.top) : pos.height,\n            };\n\n            if (pos.top < 0) {\n                clipped.height += pos.top;\n            }\n            if (pos.left < 0) {\n                clipped.width += pos.left;\n            }\n\n            if (clipped.width < 0) {\n                clipped.width = 0;\n            }\n            if (clipped.height < 0) {\n                clipped.height = 0;\n            }\n            return clipped;\n        }\n\n        computed_style($t, style) {\n            let dim = window.getComputedStyle($t).getPropertyValue(style);\n            dim = dim.match(/[\\-]?[\\d\\.]+px/g);\n            for (const i in dim) {\n                dim[i] = parseFloat(dim[i].replace('px', ''));\n            }\n            if (dim.length === 1) {\n                dim.push(dim[0], dim[0], dim[0]);\n            }\n            if (dim.length === 2) {\n                dim.push(dim[0], dim[1]);\n            }\n            if (dim.length === 3) {\n                dim.push(dim[1]);\n            }\n            return dim;\n        }\n\n        add_dim(dim, arrs) {\n            for (const arr of arrs) {\n                dim.top -= arr[0];\n                dim.left -= arr[3];\n                dim.width += (arr[1] + arr[3]);\n                dim.height += (arr[0] + arr[2]);\n            }\n            return dim;\n        }\n\n        sub_dim(dim, arrs) {\n            for (const arr of arrs) {\n                dim.top += arr[0];\n                dim.left += arr[3];\n                dim.width -= (arr[1] + arr[3]);\n                dim.height -= (arr[0] + arr[2]);\n            }\n            return dim;\n        }\n\n        set_dim($t, dim) {\n            const p = this.clip(dim);\n            $t.style.top = `${p.top}px`;\n            $t.style.left = `${p.left}px`;\n            $t.style.width = `${p.width}px`;\n            $t.style.height = `${p.height}px`;\n        }\n\n        get_center($t) {\n            const p = $t.getBoundingClientRect();\n            const center = {\n                x: p.left + p.width/2,\n                y: p.top + p.height/2,\n            };\n            return center;\n        }\n\n        get_css() {\n            return window.CssSelectorGenerator.getCssSelector(this.$t);\n        }\n\n        clear() {\n            this.$t = null;\n            const no_box = {\n                top: 0,\n                left: 0,\n                width: 0,\n                height: 0,\n            };\n            this.set_dim(this.$margin_box, no_box);\n            this.set_dim(this.$border_box, no_box);\n            this.set_dim(this.$padding_box, no_box);\n            this.set_dim(this.$content_box, no_box);\n\n            if (this.draw_mark) {\n                this.$mark.style.top = '0px';\n                this.$mark.style.left = '0px';\n            }\n        }\n\n        update($t, delay=0) {\n            const self = this;\n            if (self.$last && self.$last === $t) {\n                return;\n            }\n            if ($t) {\n                self.$t = $t;\n            }\n            if (!self.$t) {\n                return;\n            }\n\n            clearTimeout(self.update_timer);\n            self.update_timer = setTimeout(() => {\n                if (!self.$t?.getBoundingClientRect) {\n                    return;\n                }\n\n                const r = self.$t.getBoundingClientRect();\n\n                const margin = self.computed_style(self.$t, 'margin');\n                const border = self.computed_style(self.$t, 'border-width');\n                const padding = self.computed_style(self.$t, 'padding');\n\n                const box = {\n                    top: r.top,\n                    left: r.left,\n                    width: r.width,\n                    height: r.height,\n                };\n                const margin_box = JSON.parse(JSON.stringify(box));\n                const border_box = JSON.parse(JSON.stringify(box));\n                const padding_box = JSON.parse(JSON.stringify(box));\n                const content_box = JSON.parse(JSON.stringify(box));\n\n                self.add_dim(margin_box, [margin]);\n                self.sub_dim(padding_box, [border]);\n                self.sub_dim(content_box, [border, padding]);\n\n                self.set_dim(self.$margin_box, margin_box);\n                self.set_dim(self.$border_box, border_box);\n                self.set_dim(self.$padding_box, padding_box);\n                self.set_dim(self.$content_box, content_box);\n\n                const css_selector = self.get_css(self.$t);\n                self.update_css_selector(self.window_id, css_selector);\n                BG.exec('Relay.send', {data: {action: 'update_locate', window_id: self.window_id, css_selector}});\n\n                if (self.draw_mark) {\n                    const center = self.get_center($t);\n                    self.$mark.style.top = `${parseInt(center.y-self.MARK_RADIUS)}px`;\n                    self.$mark.style.left = `${parseInt(center.x-self.MARK_RADIUS)}px`;\n                }\n            }, delay);\n        }\n\n        update_css_selector(frame_id, css_selector) {\n            if (this.window_id !== frame_id) {\n                this.clear();\n            }\n            if (!is_iframe()) {\n                this.$footer.innerHTML = `<div>${css_selector}</div>`;\n            }\n        }\n\n        terminate() {\n            clearTimeout(this.update_timer);\n            this.$style.remove();\n            this.$wrapper.remove();\n        }\n    }\n\n\n    let nopecha_selector = null;\n\n\n    function on_click(event) {\n        // Save the selected element\n        const $e = event.target;\n        const selector = nopecha_selector.get_css($e);\n        BG.exec('Settings.set', {id: nopecha_selector.locate, value: selector});\n        stop(true);\n    }\n\n    function on_mousemove(event) {\n        // Update highlight overlay when new element is targeted\n        const $e = event.target;\n        nopecha_selector.update($e);\n    }\n\n    function on_mousewheel(event) {\n        // Update highlight overlay when page is scrolled\n        nopecha_selector.update();\n    }\n\n    function on_keydown(event) {\n        // Stop on escape\n        event = event || window.event;\n\n        let is_esc = false;\n        if ('key' in event) {\n            is_esc = (event.key === 'Escape' || event.key === 'Esc');\n        }\n        else {\n            is_esc = (event.keyCode === 27);\n        }\n\n        if (is_esc) {\n            stop(true);\n        }\n    }\n\n    function start(locate) {\n        nopecha_selector = new NopechaSelector(locate);\n        document.body.addEventListener('click', on_click);\n        document.body.addEventListener('mousemove', on_mousemove);\n        document.body.addEventListener('mousewheel', on_mousewheel);\n        document.body.addEventListener('keydown', on_keydown);\n    }\n\n    function stop(broadcast) {\n        try {\n            document.body.removeEventListener('click', on_click);\n            document.body.removeEventListener('mousemove', on_mousemove);\n            document.body.removeEventListener('mousewheel', on_mousewheel);\n            document.body.removeEventListener('keydown', on_keydown);\n            nopecha_selector.terminate();\n            nopecha_selector = null;\n        } catch (e) {}\n\n        if (broadcast) {\n            BG.exec('Relay.send', {data: {action: 'stop_locate'}});\n        }\n    }\n\n    chrome.runtime.onMessage.addListener((req, sender, send) => {\n        if (req.action === 'start_locate') {\n            start(req.locate);\n        }\n        else if (req.action === 'stop_locate') {\n            stop(false);\n        }\n        else if (req.action === 'update_locate') {\n            nopecha_selector.update_css_selector(req.window_id, req.css_selector);\n        }\n    });\n})();\n"
        },
        {
          "name": "manifest.base.json",
          "type": "blob",
          "size": 3.1728515625,
          "content": "{\n    \"name\": \"NopeCHA: CAPTCHA Solver\",\n    \"version\": \"0.3.3\",\n    \"description\": \"Automatically solve reCAPTCHA, hCaptcha, FunCAPTCHA, AWS WAF, and text CAPTCHA using AI.\",\n    \"permissions\": [\n        \"storage\",\n        \"scripting\",\n        \"contextMenus\"\n    ],\n    \"content_scripts\": [\n        {\n            \"matches\": [\"<all_urls>\"],\n            \"js\": [\"utils.js\", \"content.js\"],\n            \"run_at\": \"document_start\",\n            \"all_frames\": true,\n            \"match_about_blank\": true\n        },\n\n        {\n            \"matches\": [\"*://nopecha.com/setup\"],\n            \"js\": [\"setup.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": true,\n            \"match_about_blank\": false\n        },\n\n        {\n            \"matches\": [\"*://*.hcaptcha.com/captcha/*\"],\n            \"js\": [\"hcaptcha.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": true,\n            \"match_about_blank\": false\n        },\n        {\n            \"matches\": [\"*://*.hcaptcha.com/captcha/*\"],\n            \"js\": [\"hcaptcha_fast.js\"],\n            \"run_at\": \"document_start\",\n            \"all_frames\": true,\n            \"match_about_blank\": false\n        },\n        {\n            \"matches\": [\"<all_urls>\"],\n            \"js\": [\"hcaptcha_language.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": true,\n            \"match_about_blank\": false\n        },\n\n        {\n            \"matches\": [\"<all_urls>\"],\n            \"js\": [\"recaptcha.js\", \"recaptcha_speech.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": true,\n            \"match_about_blank\": false\n        },\n        {\n            \"matches\": [\"*://*.google.com/recaptcha/*\", \"*://*.recaptcha.net/recaptcha/*\", \"*://recaptcha.net/recaptcha/*\"],\n            \"js\": [\"recaptcha_fast.js\"],\n            \"run_at\": \"document_start\",\n            \"all_frames\": true,\n            \"match_about_blank\": false\n        },\n\n        {\n            \"matches\": [\"*://*.arkoselabs.com/fc/*\", \"*://*.funcaptcha.com/fc/*\"],\n            \"js\": [\"funcaptcha.js\", \"funcaptcha_scrape.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": true,\n            \"match_about_blank\": true\n        },\n        {\n            \"matches\": [\"*://*.arkoselabs.com/fc/*\", \"*://*.funcaptcha.com/fc/*\"],\n            \"js\": [\"funcaptcha_fast.js\"],\n            \"run_at\": \"document_start\",\n            \"all_frames\": true,\n            \"match_about_blank\": true\n        },\n        {\n            \"matches\": [\"*://nopecha.com/demo/funcaptcha\"],\n            \"js\": [\"funcaptcha_demo.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": false,\n            \"match_about_blank\": false\n        },\n\n        {\n            \"matches\": [\"<all_urls>\"],\n            \"js\": [\"awscaptcha.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": true,\n            \"match_about_blank\": false\n        },\n\n        {\n            \"matches\": [\"<all_urls>\"],\n            \"js\": [\"textcaptcha.js\", \"locate.js\"],\n            \"run_at\": \"document_end\",\n            \"all_frames\": true,\n            \"match_about_blank\": true\n        }\n    ],\n    \"icons\": {\n        \"16\": \"icon/16.png\",\n        \"32\": \"icon/32.png\",\n        \"48\": \"icon/48.png\",\n        \"128\": \"icon/128.png\"\n    }\n}\n"
        },
        {
          "name": "popup.css",
          "type": "blob",
          "size": 16.1943359375,
          "content": "@font-face {\n    font-family: 'plex-sans';\n    font-style: normal;\n    font-weight: 700;\n    src: url('font/plex-sans-bold.woff2') format('woff2'), url('font/plex-sans-bold.woff') format('woff');\n}\n\n@font-face {\n    font-family: 'plex-sans';\n    font-style: normal;\n    font-weight: 400;\n    src: url('font/plex-sans-regular.woff2') format('woff2'), url('font/plex-sans-regular.woff') format('woff');\n}\n\n* {\n    font-family: 'plex-sans';\n    box-sizing: border-box;\n    outline: none;\n}\nhtml {\n    width: 340px;\n}\nbody {\n    width: 324px;\n}\nhtml, body {\n    background: #1a2432;\n    color: #fff;\n    line-height: 1.15;\n    text-size-adjust: 100%;\n}\ndiv {\n    display: block;\n}\na {\n    text-decoration: none;\n}\nbutton, input, optgroup, select, textarea {\n    font-family: inherit;\n    font-size: 100%;\n    line-height: 1.15;\n    margin: 0px;\n}\nbutton, select {\n    text-transform: none;\n}\nbutton, input {\n    overflow: visible;\n}\ninput {\n    writing-mode: horizontal-tb !important;\n    font-style: ;\n    font-variant-ligatures: ;\n    font-variant-caps: ;\n    font-variant-numeric: ;\n    font-variant-east-asian: ;\n    font-weight: ;\n    font-stretch: ;\n    font-size: ;\n    font-family: ;\n    text-rendering: auto;\n    color: fieldtext;\n    letter-spacing: normal;\n    word-spacing: normal;\n    line-height: normal;\n    text-transform: none;\n    text-indent: 0px;\n    text-shadow: none;\n    display: inline-block;\n    text-align: start;\n    appearance: auto;\n    -webkit-rtl-ordering: logical;\n    cursor: text;\n    background-color: field;\n    margin: 0em;\n    padding: 1px 2px;\n    border-width: 2px;\n    border-style: inset;\n    border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\n    border-image: initial;\n}\n.text_input {\n    background-color: transparent;\n    padding: 8px 8px 8px 16px;\n    color: rgb(255, 255, 255);\n    outline: none;\n    border: none;\n    width: 100%;\n    font-size: 14px;\n}\n.text_input.small {\n    width: 30%;\n}\n.text_input.text_right {\n    text-align: right;\n}\n.hidden {\n    display: none !important;\n}\n.hiddenleft {\n    transform: translateX(-100%) translateZ(0px);\n}\n.red {\n    color: #ff6961 !important;\n}\n\n/* Remove arrows from number input */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\n/* SCROLLBAR */\n\n::-webkit-scrollbar {\n    width: 6px;\n    right: 2px;\n    bottom: 2px;\n    top: 2px;\n    border-radius: 3px;\n}\n::-webkit-scrollbar-track {\n    background: transparent;\n}\n::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.2);\n}\n\n/* LOADING OVERLAY */\n\n#loading_overlay {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: #222;\n    z-index: 10;\n}\n#loading_overlay .loading_text {\n    margin-top: 8px;\n    font-size: 14px;\n    text-align: center;\n}\n#loading_overlay .loading_text.timeout > div {\n    opacity: 0;\n    animation: fadein 10s linear forwards;\n}\n#loading_overlay .loading_text.timeout > div:nth-child(1) {\n    animation-delay: 2000ms;\n}\n#loading_overlay .loading_text.timeout > div:nth-child(2) {\n    animation-delay: 4000ms;\n}\n#loading_overlay .loading_text.timeout > div:nth-child(3) {\n    animation-delay: 6000ms;\n}\n@keyframes fadein {\n    0% {opacity: 0;}\n    50% {opacity: 0;}\n    100% {opacity: 1;}\n}\n\n/* MISC */\n.clickable {\n    cursor: pointer !important;\n}\n.clickable:hover {\n    opacity: 0.8 !important;\n}\n\n/* APP */\n\n#app_frame {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    transition: height ease 0.2s, min-height ease 0.2s;\n    min-height: 237px !important;\n}\n\n/* HEADER */\n\n.header {\n    box-sizing: border-box;\n    padding: 16px;\n    display: flex;\n    place-content: space-between;\n    font-weight: 400;\n}\n.header.spacedright {\n    margin-right: 32px;\n}\n.nav_icon {\n    border: none;\n    cursor: pointer;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n    background: rgba(2, 13, 28, 0.05);\n    border-radius: 50%;\n    width: 32px;\n    height: 32px;\n    position: relative;\n    transition: all 0.3s ease 0s;\n    fill: rgba(255, 255, 255, 1);\n    background: rgba(255, 255, 255, 0.1) !important;\n}\n.nav_icon:hover {\n    opacity: 0.9;\n}\n.nav_icon:disabled,\n.nav_icon:disabled:hover {\n    background: none !important;\n    cursor: unset;\n    opacity: 0.9;\n}\n.header_label_container {\n    box-sizing: border-box;\n    margin-right: 0px;\n    display: flex;\n    flex: 1 1 0%;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n}\n.header_label {\n    box-sizing: border-box;\n    font-size: 24px;\n    font-weight: bold;\n    display: flex;\n    color: rgb(255, 255, 255);\n}\n\n/* PLAN */\n\n.plan_info_box {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n.plan_info_container {\n    display: flex;\n    box-sizing: border-box;\n    position: relative;\n}\n.plan_info {\n    box-sizing: border-box;\n    width: 100%;\n    padding: 0px 16px 16px;\n    display: flex;\n}\n.plan_label {\n    box-sizing: border-box;\n    font-weight: bold;\n    font-size: 14px;\n    color: rgb(255, 255, 255);\n}\n.plan_value {\n    box-sizing: border-box;\n    margin-left: auto;\n    display: flex;\n}\n.plan_button {\n    display: flex;\n    background-color: transparent;\n    color: rgba(255, 255, 255, 0.9);\n    width: auto;\n    padding: 0px;\n    border: none;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n    transition: color 0.3s ease 0s, transform 0.1s ease-out 0s, opacity 0.3s ease 0s;\n}\n.plan_button.link {\n    color: #0a95ff;\n}\n.plan_button.link,\n.plan_button.link:hover,\n.plan_button_label {\n    box-sizing: border-box;\n    font-size: 14px;\n}\n\n/* WARNING */\n\n.warning_box {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: #1a2432;\n    position: absolute;\n    top: 0;\n    bottom: 8px;\n    left: 4px;\n    right: 4px;\n    border: 1px solid #FCD62E;\n    border-radius: 0.25rem;\n    padding: 0.5rem;\n    margin: 0 4px;\n    z-index: 1;\n}\n.warning_box * {\n    color: #fff;\n    font-size: 14px;\n    text-align: center;\n}\n\n/* KEY */\n\n.key_label {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    width: 100%;\n}\n.key_label > .instructions {\n    font-weight: normal;\n    line-height: 16px;\n    margin-left: 6px;\n    color: #fff;\n    font-size: 10px;\n}\n.settings_text[data-settings=\"key\"] {\n    background: #1a2432;\n    position: absolute;\n    width: calc(100% - 32px);\n    transition: all ease 0.1s;\n    z-index: 1;\n}\n/* .edit_key {\n    line-height: 16px;\n    margin-right: 6px;\n    color: #fff;\n    font-size: 10px;\n} */\n.edit_icon {\n    z-index: 2;\n}\n\n/* MENU */\n\n.menu {\n    box-sizing: border-box;\n    padding-left: 16px;\n}\n.menu_item_container {\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    border-image: initial;\n    cursor: pointer;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    background-color: transparent;\n    width: 100%;\n    padding: 16px;\n    margin-top: 2px;\n    border-bottom: 2px solid rgba(255, 255, 255, 0.05);\n    color: rgba(255, 255, 255, 0.5);\n    transition: color 0.5s ease 0s, border 0.5s ease 0s;\n    -webkit-box-pack: justify !important;\n    justify-content: space-between !important;\n}\n.menu_item_container:hover {\n    color: rgb(255, 255, 255);\n}\nbutton.menu_item_container {\n    padding-left: 0px !important;\n}\n.button_label_container {\n    box-sizing: border-box;\n    -webkit-box-align: center;\n    align-items: center;\n    display: flex;\n}\n.button_label_container svg {\n    fill: rgb(255, 255, 255);\n}\n.button_label {\n    box-sizing: border-box;\n    margin-left: 16px;\n    font-size: 14px;\n    font-weight: bold;\n}\n.menu_item_arrow {\n    fill: rgb(255, 255, 255);\n    height: 16px;\n    width: 16px;\n}\n\n/* #export {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 1.2em;\n    cursor: pointer;\n    transition: color 0.5s ease 0s, border 0.5s ease 0s;\n}\n#export:hover {\n    color: rgb(255, 255, 255);\n} */\n\n/* TAB */\n\n.bbflex {\n    box-sizing: border-box;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n}\n.scrolling_container {\n    box-sizing: border-box;\n    margin-top: 8px;\n    margin-left: 16px;\n    margin-right: 16px;\n    padding-bottom: 16px;\n}\n.settings_item_container {\n    box-sizing: border-box;\n    margin-bottom: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.08);\n    border-radius: 8px;\n    box-sizing: border-box;\n}\n.settings_item_container > a {\n    color: rgba(255, 255, 255, 0.5);\n    text-decoration: none;\n    transition: color 0.5s ease 0s, border 0.5s ease 0s;\n}\n.settings_item {\n    width: 100%;\n    background-color: rgba(255, 255, 255, 0.08);\n    min-height: 48px;\n    padding: 14px 16px 0px;\n    border-radius: 8px;\n}\n.settings_item > div {\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    -webkit-box-align: center;\n    align-items: center;\n}\n.settings_item_label {\n    font-size: 14px;\n    font-weight: 600;\n    color: rgb(255, 255, 255);\n    padding-left: 16px;\n    height: 20px;\n    -webkit-box-align: center;\n    align-items: center;\n}\n.settings_toggle {\n    height: 20px;\n    max-width: 36px;\n    min-width: 36px;\n    border-radius: 10px;\n    padding: 2px;\n    transition: background-color 0.3s ease 0s;\n    opacity: 1;\n    cursor: pointer;\n}\n.settings_toggle > div {\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    transform: translate(16px);\n    transition: transform 0.3s ease 0s, background-color 0.3s ease 0s;\n}\n.settings_toggle.on {\n    background-color: rgb(0, 106, 255);\n}\n.settings_toggle.off {\n    background-color: rgb(255, 255, 255);\n}\n.settings_toggle.on > div {\n    background-color: rgb(255, 255, 255);\n    transform: translate(16px);\n}\n.settings_toggle.off > div {\n    background-color: rgb(2, 13, 28);\n    transform: translate(0px);\n}\n.settings_description_container {\n    padding: 10px 16px 8px;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n}\n.settings_description {\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.5);\n}\n.settings_button {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 14px;\n    gap: 16px;\n}\n.settings_button > div {\n    cursor: pointer;\n    transition: all 0.3s ease 0s;\n}\n.settings_button > div:hover {\n    color: rgb(255, 255, 255);\n}\n.settings_dropdown_selected {\n    color: rgba(255, 255, 255, 0.5);\n    -webkit-box-align: center;\n    align-items: center;\n    font-size: 14px;\n    cursor: pointer;\n    white-space: nowrap;\n}\n.settings_dropdown_selected > div {\n    box-sizing: border-box;\n    margin-right: 8px;\n}\n.settings_dropdown_options {\n    position: relative;\n    transition: visibility 0.3s ease 0s, opacity 0.3s ease 0s;\n    opacity: 0;\n    visibility: hidden;\n}\n.settings_dropdown_options > div {\n    position: absolute;\n    background-color: rgb(255, 255, 255);\n    border-radius: 4px;\n    right: 0px;\n    top: 50%;\n    transform: translateY(-50%);\n    border: 1px solid rgba(0, 0, 0, 0.15);\n    width: auto;\n    min-width: 60px;\n    white-space: nowrap;\n    box-shadow: rgb(0 0 0 / 15%) 0px 2px 4px 0px;\n    box-sizing: border-box;\n    padding: 4px;\n}\n.settings_dropdown_selected:hover > .settings_dropdown_options {\n    opacity: 1;\n    visibility: visible;\n}\n.settings_dropdown_options > div > div {\n    color: rgba(0, 0, 0, 0.5);\n    font-weight: 700;\n    border-radius: 4px;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    line-height: normal;\n    font-size: 12px;\n    height: 23px;\n    cursor: pointer;\n    padding: 0px 4px;\n}\n.settings_dropdown_options > div > div:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n}\n.settings_dropdown_options > div > div.selected {\n    color: rgb(0, 106, 255);\n}\n\n/* FOOTER */\n\n.footer {\n    display: flex;\n    flex-direction: row;\n    padding: 8px;\n    margin-top: 8px;\n    font-size: 10px;\n}\n.footer * {\n    color: rgba(255, 255, 255, 0.8);\n}\n.footer > *:nth-child(1) {\n    flex-grow: 1;\n}\n\n/* LOADING ANIM */\n\n.loading {\n    display: inline-block;\n    position: relative;\n    width: 32px;\n    height: 16px;\n}\n.loading div {\n    position: absolute;\n    top: 5px;\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.8);\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n.loading div:nth-child(1) {\n    left: 4px;\n    animation: loading1 0.6s infinite;\n}\n.loading div:nth-child(2) {\n    left: 4px;\n    animation: loading2 0.6s infinite;\n}\n.loading div:nth-child(3) {\n    left: 16px;\n    animation: loading2 0.6s infinite;\n}\n.loading div:nth-child(4) {\n    left: 28px;\n    animation: loading3 0.6s infinite;\n}\n@keyframes loading1 {\n    0% {\n        transform: scale(0);\n    }\n    100% {\n        transform: scale(1);\n    }\n}\n@keyframes loading3 {\n    0% {\n        transform: scale(1);\n    }\n    100% {\n        transform: scale(0);\n    }\n}\n@keyframes loading2 {\n    0% {\n        transform: translate(0, 0);\n    }\n    100% {\n        transform: translate(12px, 0);\n    }\n}\n\n/* POWER ANIM */\n\n#power .btn {\n    width: 32px;\n    height: 32px;\n    transition: transform 0.3s ease 0s;\n}\n#power .btn.off {\n    transform: rotate(-180deg);\n}\n#power .btn_outline {\n    position: absolute;\n    z-index: 2;\n    height: 100%;\n}\n#power .btn_outline.spinning {\n    animation: 1s linear 0s infinite normal none running spinning;\n}\n@keyframes spinning {\n    0% {transform: rotate(0deg);}\n    100% {transform: rotate(360deg);}\n}\n\n/* GLOW ANIM */\n\n.hover_glow {\n    border: none;\n    outline: none;\n    cursor: pointer;\n    position: relative;\n    z-index: 0;\n    border-radius: 50%;\n}\n.hover_glow:before {\n    content: '';\n    background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);\n    position: absolute;\n    top: -2px;\n    left:-2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    animation: glowing 20s linear infinite;\n    opacity: 0;\n    transition: opacity .3s ease-in-out;\n    border-radius: 50%;\n}\n.hover_glow:active:after {\n    background: transparent;\n}\n.hover_glow:hover:before {\n    opacity: 1;\n}\n.hover_glow:after {\n    z-index: -1;\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    border-radius: 50%;\n}\n.hover_glow.static:before {\n    opacity: 1 !important;\n}\n@keyframes glowing {\n    0% {background-position: 0 0;}\n    50% {background-position: 400% 0;}\n    100% {background-position: 0 0;}\n}\n\n\n/* BLACKLIST */\n\n.settings_item_header {\n    box-sizing: border-box;\n    padding-top: 4px;\n    padding-bottom: 8px;\n    font-size: 12px;\n    background-color: rgb(26, 36, 50);\n    width: 100%;\n    letter-spacing: 2px;\n    font-weight: bold;\n    color: rgba(255, 255, 255, 0.5);\n    text-transform: uppercase;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    position: relative;\n    top: 12px;\n    z-index: 1;\n}\n.settings_item_container.list_item {\n    border-radius: 0;\n    border: none;\n    border-bottom: 2px solid rgba(255, 255, 255, 0.05);\n    padding-top: 16px;\n    padding-bottom: 16px;\n    margin-bottom: 0px;\n}\n.list_item_row {\n    box-sizing: border-box;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    width: 100%;\n    display: flex;\n}\n#current_page_host {\n    box-sizing: border-box;\n    font-size: 14px;\n    font-weight: bold;\n    color: rgb(255, 255, 255);\n    width: fit-content;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    max-width: 220px;\n}\n.settings_text.text_input.list_input {\n    flex-grow: 1;\n    padding-left: 0;\n}\n.list_item_button {\n    border: none;\n    cursor: pointer;\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    justify-content: center;\n    background-color: transparent;\n    padding: 0px;\n    transition: background-color 0.3s ease 0s, color 0.3s ease 0s, transform 0.1s ease-out 0s, opacity 0.3s ease 0s;\n    opacity: 0.5;\n    height: 32px;\n    width: 32px;\n    margin-right: -4px;\n}\n.list_item_button:hover {\n    opacity: 1.0;\n}\n.list_item_button:disabled,\n.list_item_button:disabled:hover {\n    opacity: 0.3;\n    cursor: unset;\n}\n\n"
        },
        {
          "name": "popup.html",
          "type": "blob",
          "size": 79.7119140625,
          "content": "<!DOCTYPE html>\n<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"popup.css\">\n    </head>\n\n    <body>\n        <div id=\"loading_overlay\">\n            <a href=\"https://nopecha.com/discord\" target=\"_blank\"></a>\n                <button class=\"nav_icon hover_glow static\">\n                    <img src=\"/icon/32.png\" alt=\"NopeCHA\">\n                </button>\n            </a>\n            <div class='loading_text'>Loading</div>\n            <div class='loading_text timeout'>\n                <div>This is taking longer than usual.</div>\n                <div>Please close this window and try again.</div>\n                <div>If the problem persists, contact us on <a style=\"color: #fff;\" href=\"https://nopecha.com/discord\" target=\"_blank\">Discord</a></div>\n            </div>\n        </div>\n\n        <div id=\"template\" class=\"hidden\">\n            <div id=\"disabled_hosts_item\" class=\"settings_item_container list_item\">\n                <div class=\"list_item_row\">\n                    <input type=\"text\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Enter hostname\" value=\"\" class=\"settings_text text_input list_input hostname\">\n                    <button class=\"list_item_button remove\">\n                        <svg width=\"16\" height=\"16\" fill=\"#ffffff\">\n                            <path d=\"M9 2H7v12h2V2zm2.75 0l-1.5 12h1.98l1.5-12h-1.98zm-7.5 0H2.27l1.5 12h1.98L4.25 2zM0 0h16l-2 16H2L0 0z\"></path>\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"app_frame\">\n\n            <!-- HCAPTCHA TAB -->\n            <div class=\"tab hidden\" data-tab=\"hcaptcha\">\n                <div class=\"header\">\n                    <button class=\"nav_icon back\" data-tabtarget=\"main\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 9 16\"><path d=\"M2.684 8l6.038-6.308c.37-.387.37-1.015 0-1.402a.92.92 0 00-1.342 0L0 8l7.38 7.71a.92.92 0 001.342 0c.37-.387.37-1.015 0-1.402L2.684 8z\"></path></svg>\n                    </button>\n\n                    <div class=\"header_label_container\">\n                        <div class=\"header_label\">hCaptcha</div>\n                    </div>\n\n                    <a href=\"https://nopecha.com/demo/hcaptcha\" target=\"_blank\">\n                        <button class=\"nav_icon\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"20 20 560 560\"><path d=\"m374.48 524.29h74.9v74.89h-74.9z\" fill=\"#0074bf\" opacity=\".502\"/><path d=\"m299.59 524.29h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#0074bf\" opacity=\".702\"/><path d=\"m149.8 524.29h74.9v74.89h-74.9z\" fill=\"#0074bf\" opacity=\".502\"/><g fill=\"#0082bf\"><path d=\"m449.39 449.39h74.9v74.9h-74.9z\" opacity=\".702\"/><path d=\"m374.48 449.39h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m299.59 449.39h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 449.39h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m74.89 449.39h74.9v74.9h-74.9z\" opacity=\".702\"/></g><g fill=\"#008fbf\"><path d=\"m524.29 374.48h74.89v74.9h-74.89z\" opacity=\".502\"/><path d=\"m449.39 374.48h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m374.48 374.48h74.9v74.9h-74.9zm-74.89 0h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 374.48h74.9v74.9h-74.9z\"/><path d=\"m74.89 374.48h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m0 374.48h74.89v74.9h-74.89z\" opacity=\".502\"/></g><path d=\"m524.29 299.59h74.89v74.89h-74.89z\" fill=\"#009dbf\" opacity=\".702\"/><path d=\"m449.39 299.59h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9zm-74.89 0h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#009dbf\"/><path d=\"m149.8 299.59h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9z\" fill=\"#009dbf\"/><path d=\"m0 299.59h74.89v74.89h-74.89z\" fill=\"#009dbf\" opacity=\".702\"/><path d=\"m524.29 224.7h74.89v74.89h-74.89z\" fill=\"#00abbf\" opacity=\".702\"/><path d=\"m449.39 224.7h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9zm-74.89 0h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#00abbf\"/><path d=\"m149.8 224.7h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9z\" fill=\"#00abbf\"/><path d=\"m0 224.7h74.89v74.89h-74.89z\" fill=\"#00abbf\" opacity=\".702\"/><g fill=\"#00b9bf\"><path d=\"m524.29 149.8h74.89v74.9h-74.89z\" opacity=\".502\"/><path d=\"m449.39 149.8h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m374.48 149.8h74.9v74.9h-74.9zm-74.89 0h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 149.8h74.9v74.9h-74.9z\"/><path d=\"m74.89 149.8h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m0 149.8h74.89v74.9h-74.89z\" opacity=\".502\"/></g><g fill=\"#00c6bf\"><path d=\"m449.39 74.89h74.9v74.9h-74.9z\" opacity=\".702\"/><path d=\"m374.48 74.89h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m299.59 74.89h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 74.89h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m74.89 74.89h74.9v74.9h-74.9z\" opacity=\".702\"/></g><path d=\"m374.48 0h74.9v74.89h-74.9z\" fill=\"#00d4bf\" opacity=\".502\"/><path d=\"m299.59 0h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#00d4bf\" opacity=\".702\"/><path d=\"m149.8 0h74.9v74.89h-74.9z\" fill=\"#00d4bf\" opacity=\".502\"/><path d=\"m197.2 275.96 20.87-46.71c7.61-11.97 6.6-26.64-1.72-34.96-.28-.28-.56-.55-.86-.81-.29-.26-.59-.52-.89-.76a21.043 21.043 0 0 0 -1.92-1.37 22.68 22.68 0 0 0 -4.51-2.13c-1.58-.55-3.21-.92-4.87-1.12-1.66-.19-3.34-.2-5-.03s-3.3.51-4.88 1.04c-1.79.55-3.53 1.27-5.19 2.13a32.32 32.32 0 0 0 -4.72 3.02 32.38 32.38 0 0 0 -4.12 3.82 32 32 0 0 0 -3.37 4.48c-.98 1.59-28.57 66.66-39.2 96.62s-6.39 84.91 34.61 125.99c43.48 43.48 106.43 53.41 146.58 23.28.42-.21.84-.44 1.24-.67.41-.23.81-.48 1.2-.74.4-.25.78-.52 1.16-.8.38-.27.75-.56 1.11-.86l123.73-103.32c6.01-4.97 14.9-15.2 6.92-26.88-7.79-11.39-22.55-3.64-28.57.21l-71.21 51.78c-.33.27-.72.48-1.13.6-.42.12-.85.16-1.28.11s-.85-.19-1.22-.4c-.38-.21-.71-.5-.97-.85-1.81-2.22-2.13-8.11.71-10.44l109.16-92.64c9.43-8.49 10.74-20.84 3.1-29.3-7.45-8.29-19.29-8.04-28.8.53l-98.28 76.83c-.46.38-.99.66-1.56.82s-1.17.21-1.76.13-1.15-.27-1.66-.58c-.51-.3-.96-.7-1.3-1.18-1.94-2.18-2.69-5.89-.5-8.07l111.3-108.01c2.09-1.95 3.78-4.29 4.96-6.88 1.18-2.6 1.85-5.41 1.95-8.26s-.36-5.7-1.36-8.37c-1-2.68-2.51-5.13-4.45-7.22-.97-1.03-2.05-1.95-3.2-2.75a21.14 21.14 0 0 0 -3.69-2.05c-1.3-.55-2.65-.97-4.03-1.26-1.38-.28-2.79-.42-4.2-.41-1.44-.02-2.88.1-4.29.37a21.906 21.906 0 0 0 -7.96 3.16c-1.21.78-2.34 1.68-3.38 2.68l-113.73 106.83c-2.72 2.72-8.04 0-8.69-3.18-.06-.28-.08-.57-.07-.86s.06-.58.15-.85c.08-.28.2-.55.35-.79.15-.25.33-.48.54-.68l87.05-99.12a21.38 21.38 0 0 0 6.82-15.3c.11-5.81-2.15-11.42-6.25-15.53-4.11-4.12-9.71-6.4-15.52-6.31s-11.34 2.53-15.32 6.77l-132.01 145.95c-4.73 4.73-11.7 4.97-15.02 2.22-.51-.4-.93-.9-1.24-1.46-.32-.56-.52-1.18-.6-1.82-.08-.65-.03-1.3.14-1.92s.46-1.21.85-1.72z\" fill=\"#fff\"/></svg>\n                        </button>\n                    </a>\n                </div>\n\n                <div style=\"position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0px; max-height: 402px;\">\n                    <div style=\"position: relative; overflow: auto; margin-bottom: -15px; min-height: 15px; max-height: 417px;\">\n                        <div class=\"scrolling_container\">\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M8 0A8 8 0 11.582 11.001h2.221a6 6 0 100-6L.582 4.999A8.003 8.003 0 018 0zM7 5l4 3-4 3-.001-2H0V7h6.999L7 5z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Open</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"hcaptcha_auto_open\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically opens captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M13.336 9.007l.044.085 2.58 6.193a.516.516 0 01-.91.48l-.043-.083-.728-1.747h-2.753l-.727 1.747a.516.516 0 01-.586.306l-.089-.028a.516.516 0 01-.306-.586l.028-.089 2.58-6.193a.517.517 0 01.91-.085zM4.128 1.728V4.13a5.161 5.161 0 004.13 9.187v2.095A7.226 7.226 0 014.128 1.73zm8.775 8.904l-.947 2.271h1.893l-.946-2.27zM8.258 0v8.258H6.193V0h2.065zm2.065 1.728a7.233 7.233 0 014.055 5.498h-2.094a5.162 5.162 0 00-1.962-3.097V1.728z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Solve</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"hcaptcha_auto_solve\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically solves captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M12.214 10l.964 3H14.5a1.5 1.5 0 010 3h-13a1.5 1.5 0 010-3h1.322l.964-3h8.428zm-1.607-5l.964 3H4.429l.964-3h5.214zM9 0l.964 3H6.036L7 0h2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay solving</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"hcaptcha_solve_delay\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Adds a delay to avoid detection.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M16 8a8 8 0 01-8 8v-1a7 7 0 007-7h1zm-4.667 3.536l.667.707C10.976 13.33 9.562 14 8 14c-1.562 0-2.976-.671-4-1.757l.667-.707C5.52 12.441 6.698 13 8 13s2.48-.56 3.333-1.464zM7 4.5a.5.5 0 01.492.41L7.5 5v3.5H10a.5.5 0 01.492.41L10.5 9a.5.5 0 01-.41.492L10 9.5H6.5V5a.5.5 0 01.5-.5zM8 0v1a7 7 0 00-7 7H0a8 8 0 018-8zm0 2c1.562 0 2.977.672 4 1.758l-.666.707C10.48 3.56 9.302 3 8 3s-2.48.56-3.334 1.465L4 3.758C5.023 2.672 6.438 2 8 2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay Timer</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Milliseconds to delay solving.</div>\n                                    <input type=\"number\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Delay\" value=\"\" class=\"settings_text text_input text_right small\" data-settings=\"hcaptcha_solve_delay_time\">\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <!-- RECAPTCHA TAB -->\n            <div class=\"tab hidden\" data-tab=\"recaptcha\">\n                <div class=\"header\">\n                    <button class=\"nav_icon back\" data-tabtarget=\"main\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 9 16\"><path d=\"M2.684 8l6.038-6.308c.37-.387.37-1.015 0-1.402a.92.92 0 00-1.342 0L0 8l7.38 7.71a.92.92 0 001.342 0c.37-.387.37-1.015 0-1.402L2.684 8z\"></path></svg>\n                    </button>\n\n                    <div class=\"header_label_container\">\n                        <div class=\"header_label\">reCAPTCHA</div>\n                    </div>\n\n                    <a href=\"https://nopecha.com/demo/recaptcha\" target=\"_blank\">\n                        <button class=\"nav_icon\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 64 64\"><path d=\"M64 31.955l-.033-1.37V4.687l-7.16 7.16C50.948 4.674 42.033.093 32.05.093c-10.4 0-19.622 4.96-25.458 12.64l11.736 11.86a15.55 15.55 0 0 1 4.754-5.334c2.05-1.6 4.952-2.906 8.968-2.906.485 0 .86.057 1.135.163 4.976.393 9.288 3.14 11.828 7.124l-8.307 8.307L64 31.953\" fill=\"#1c3aa9\"/><path d=\"M31.862.094l-1.37.033H4.594l7.16 7.16C4.58 13.147 0 22.06 0 32.046c0 10.4 4.96 19.622 12.64 25.458L24.5 45.768a15.55 15.55 0 0 1-5.334-4.754c-1.6-2.05-2.906-4.952-2.906-8.968 0-.485.057-.86.163-1.135.393-4.976 3.14-9.288 7.124-11.828l8.307 8.307L31.86.095\" fill=\"#4285f4\"/><path d=\"M.001 32.045l.033 1.37v25.898l7.16-7.16c5.86 7.173 14.774 11.754 24.76 11.754 10.4 0 19.622-4.96 25.458-12.64l-11.736-11.86a15.55 15.55 0 0 1-4.754 5.334c-2.05 1.6-4.952 2.906-8.968 2.906-.485 0-.86-.057-1.135-.163-4.976-.393-9.288-3.14-11.828-7.124l8.307-8.307c-10.522.04-22.4.066-27.295-.005\" fill=\"#ababab\"/></svg>\n                        </button>\n                    </a>\n                </div>\n\n                <div style=\"position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0px; max-height: 402px;\">\n                    <div style=\"position: relative; overflow: auto; margin-bottom: -15px; min-height: 15px; max-height: 417px;\">\n                        <div class=\"scrolling_container\">\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M8 0A8 8 0 11.582 11.001h2.221a6 6 0 100-6L.582 4.999A8.003 8.003 0 018 0zM7 5l4 3-4 3-.001-2H0V7h6.999L7 5z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Open</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"recaptcha_auto_open\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically opens captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M13.336 9.007l.044.085 2.58 6.193a.516.516 0 01-.91.48l-.043-.083-.728-1.747h-2.753l-.727 1.747a.516.516 0 01-.586.306l-.089-.028a.516.516 0 01-.306-.586l.028-.089 2.58-6.193a.517.517 0 01.91-.085zM4.128 1.728V4.13a5.161 5.161 0 004.13 9.187v2.095A7.226 7.226 0 014.128 1.73zm8.775 8.904l-.947 2.271h1.893l-.946-2.27zM8.258 0v8.258H6.193V0h2.065zm2.065 1.728a7.233 7.233 0 014.055 5.498h-2.094a5.162 5.162 0 00-1.962-3.097V1.728z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Solve</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"recaptcha_auto_solve\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically solves captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M12.214 10l.964 3H14.5a1.5 1.5 0 010 3h-13a1.5 1.5 0 010-3h1.322l.964-3h8.428zm-1.607-5l.964 3H4.429l.964-3h5.214zM9 0l.964 3H6.036L7 0h2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay solving</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"recaptcha_solve_delay\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Adds a delay to avoid detection.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M16 8a8 8 0 01-8 8v-1a7 7 0 007-7h1zm-4.667 3.536l.667.707C10.976 13.33 9.562 14 8 14c-1.562 0-2.976-.671-4-1.757l.667-.707C5.52 12.441 6.698 13 8 13s2.48-.56 3.333-1.464zM7 4.5a.5.5 0 01.492.41L7.5 5v3.5H10a.5.5 0 01.492.41L10.5 9a.5.5 0 01-.41.492L10 9.5H6.5V5a.5.5 0 01.5-.5zM8 0v1a7 7 0 00-7 7H0a8 8 0 018-8zm0 2c1.562 0 2.977.672 4 1.758l-.666.707C10.48 3.56 9.302 3 8 3s-2.48.56-3.334 1.465L4 3.758C5.023 2.672 6.438 2 8 2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay Timer</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Milliseconds to delay solving.</div>\n                                    <input type=\"number\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Delay\" value=\"\" class=\"settings_text text_input text_right small\" data-settings=\"recaptcha_solve_delay_time\">\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M10.833 0C12.03 0 13 .895 13 2v2h-2V2H2v12h2v2H2.167C.97 16 0 15.105 0 14V2C0 .895.97 0 2.167 0h8.666zM9.5 5a4.5 4.5 0 013.81 6.895l2.397 2.398a1 1 0 01-1.32 1.497l-.094-.083-2.398-2.396A4.5 4.5 0 119.5 5zm0 2a2.5 2.5 0 100 5 2.5 2.5 0 000-5z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Solve Method</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_dropdown_selected bbflex\">\n                                                <div id=\"recaptcha_solve_method\">Image</div>\n                                                <div class=\"settings_dropdown_options\" style=\"box-sizing: border-box;\">\n                                                    <div>\n                                                        <div data-displays=\"#recaptcha_solve_method\" data-value=\"Image\" class=\"settings_dropdown bbflex\" data-settings=\"recaptcha_solve_method\">Image</div>\n                                                        <div data-displays=\"#recaptcha_solve_method\" data-value=\"Speech\" class=\"settings_dropdown bbflex\" data-settings=\"recaptcha_solve_method\">Speech</div>\n                                                    </div>\n                                                </div>\n                                                <svg width=\"16\" height=\"16\" fill=\"rgba(255, 255, 255, 0.5)\"><path d=\"M5.302 9.225L8 11.878l2.7-2.653a.77.77 0 011.079 0 .744.744 0 010 1.06L8 14l-3.778-3.714a.744.744 0 010-1.061.77.77 0 011.08 0zM7.999 2l3.783 3.715.009.009a.744.744 0 01-.01 1.051.77.77 0 01-1.078 0L8.004 4.122 5.306 6.775a.77.77 0 01-1.088-.008.745.745 0 01.008-1.053L7.999 2z\" fill-rule=\"evenodd\"></path></svg>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Method used to solve the captcha.</div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <!-- FUNCAPTCHA TAB -->\n            <div class=\"tab hidden\" data-tab=\"funcaptcha\">\n                <div class=\"header\">\n                    <button class=\"nav_icon back\" data-tabtarget=\"main\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 9 16\"><path d=\"M2.684 8l6.038-6.308c.37-.387.37-1.015 0-1.402a.92.92 0 00-1.342 0L0 8l7.38 7.71a.92.92 0 001.342 0c.37-.387.37-1.015 0-1.402L2.684 8z\"></path></svg>\n                    </button>\n\n                    <div class=\"header_label_container\">\n                        <div class=\"header_label\">FunCAPTCHA</div>\n                    </div>\n\n                    <a href=\"https://nopecha.com/demo/funcaptcha\" target=\"_blank\">\n                        <button class=\"nav_icon\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"18 30 37 34\"><path d=\"M52.107,37.991,38.249,30a3.992,3.992,0,0,0-1.919-.533A3.606,3.606,0,0,0,34.412,30L20.555,37.991a3.829,3.829,0,0,0-1.919,3.3V57.338a3.9,3.9,0,0,0,1.919,3.3l.959.533,4.423,2.558V56.326l10.393-5.969,10.393,5.969v7.355l4.423-2.558.959-.586a3.829,3.829,0,0,0,1.919-3.3V41.243A3.857,3.857,0,0,0,52.107,37.991ZM46.617,47.9,38.2,43a3.99,3.99,0,0,0-1.918-.533A3.607,3.607,0,0,0,34.359,43l-8.474,4.9V43.268l8.688-5.01a3.425,3.425,0,0,1,3.358,0l8.688,5.01Z\" fill=\"#50b95d\"/></svg>\n                        </button>\n                    </a>\n                </div>\n\n                <div style=\"position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0px; max-height: 402px;\">\n                    <div style=\"position: relative; overflow: auto; margin-bottom: -15px; min-height: 15px; max-height: 417px;\">\n                        <div class=\"scrolling_container\">\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M8 0A8 8 0 11.582 11.001h2.221a6 6 0 100-6L.582 4.999A8.003 8.003 0 018 0zM7 5l4 3-4 3-.001-2H0V7h6.999L7 5z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Open</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"funcaptcha_auto_open\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically opens captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M13.336 9.007l.044.085 2.58 6.193a.516.516 0 01-.91.48l-.043-.083-.728-1.747h-2.753l-.727 1.747a.516.516 0 01-.586.306l-.089-.028a.516.516 0 01-.306-.586l.028-.089 2.58-6.193a.517.517 0 01.91-.085zM4.128 1.728V4.13a5.161 5.161 0 004.13 9.187v2.095A7.226 7.226 0 014.128 1.73zm8.775 8.904l-.947 2.271h1.893l-.946-2.27zM8.258 0v8.258H6.193V0h2.065zm2.065 1.728a7.233 7.233 0 014.055 5.498h-2.094a5.162 5.162 0 00-1.962-3.097V1.728z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Solve</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"funcaptcha_auto_solve\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically solves captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M12.214 10l.964 3H14.5a1.5 1.5 0 010 3h-13a1.5 1.5 0 010-3h1.322l.964-3h8.428zm-1.607-5l.964 3H4.429l.964-3h5.214zM9 0l.964 3H6.036L7 0h2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay solving</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"funcaptcha_solve_delay\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Adds a delay to avoid detection.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M16 8a8 8 0 01-8 8v-1a7 7 0 007-7h1zm-4.667 3.536l.667.707C10.976 13.33 9.562 14 8 14c-1.562 0-2.976-.671-4-1.757l.667-.707C5.52 12.441 6.698 13 8 13s2.48-.56 3.333-1.464zM7 4.5a.5.5 0 01.492.41L7.5 5v3.5H10a.5.5 0 01.492.41L10.5 9a.5.5 0 01-.41.492L10 9.5H6.5V5a.5.5 0 01.5-.5zM8 0v1a7 7 0 00-7 7H0a8 8 0 018-8zm0 2c1.562 0 2.977.672 4 1.758l-.666.707C10.48 3.56 9.302 3 8 3s-2.48.56-3.334 1.465L4 3.758C5.023 2.672 6.438 2 8 2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay Timer</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Milliseconds to delay solving.</div>\n                                    <input type=\"number\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Delay\" value=\"\" class=\"settings_text text_input text_right small\" data-settings=\"funcaptcha_solve_delay_time\">\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <!-- AWSCAPTCHA TAB -->\n            <div class=\"tab hidden\" data-tab=\"awscaptcha\">\n                <div class=\"header\">\n                    <button class=\"nav_icon back\" data-tabtarget=\"main\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 9 16\"><path d=\"M2.684 8l6.038-6.308c.37-.387.37-1.015 0-1.402a.92.92 0 00-1.342 0L0 8l7.38 7.71a.92.92 0 001.342 0c.37-.387.37-1.015 0-1.402L2.684 8z\"></path></svg>\n                    </button>\n\n                    <div class=\"header_label_container\">\n                        <div class=\"header_label\">AWS CAPTCHA</div>\n                    </div>\n\n                    <a href=\"https://nopecha.com/demo/awscaptcha\" target=\"_blank\">\n                        <button class=\"nav_icon\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 256 310\"><path d=\"M0 173.367l.985.52 15.49 1.762 19.455-1.082.856-.45-17.267-1.501-19.519.75z\" fill=\"#B6C99C\"/><path d=\"M128 .698L73.948 27.724V201.23L128 211.148l1.85-2.5V5.148L128 .699z\" fill=\"#4C612C\"/><path d=\"M128 .698v217.7l54.053-16.141V27.724L128 .698z\" fill=\"#769B3F\"/><path d=\"M219.214 174.117l.922.623 19.339 1.074 15.656-1.779.869-.669-19.52-.75-17.266 1.501z\" fill=\"#B6C99C\"/><path d=\"M219.214 210.153l20.27 2.627.543-.998v-35.397l-.543-1.141-20.27-1.126v36.035z\" fill=\"#4C612C\"/><path d=\"M36.786 210.153l-20.27 2.627-.342-.925v-36.001l.342-.61 20.27-1.126v36.035z\" fill=\"#769B3F\"/><path d=\"M125.748 208.651l-89.713-15.765-19.52 1.876.889.891 85.223 17.265.974-.513 22.147-3.754z\" fill=\"#B6C99C\"/><path d=\"M0 191.385v54.428L89.713 290.8v.055L128 310l1.6-3.002v-118.85l-1.6-3.746-38.287-3.753v28.888l-73.197-14.81v-19.483L0 173.367v18.018z\" fill=\"#4C612C\"/><path d=\"M128 209.026l21.771 3.754 2.804.118 85.285-17.129 1.624-1.007-19.144-1.877L128 209.026z\" fill=\"#B6C99C\"/><path d=\"M239.484 175.243v19.483l-73.196 14.811v-30.165L128 183.126V310l128-64.188v-72.446l-16.516 1.877z\" fill=\"#769B3F\"/><path d=\"M166.287 182.375L128 179.372l-38.288 3.003L128 186.13l38.287-3.754z\" fill=\"#B6C99C\"/></svg>\n                        </button>\n                    </a>\n                </div>\n\n                <div style=\"position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0px; max-height: 402px;\">\n                    <div style=\"position: relative; overflow: auto; margin-bottom: -15px; min-height: 15px; max-height: 417px;\">\n                        <div class=\"scrolling_container\">\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M8 0A8 8 0 11.582 11.001h2.221a6 6 0 100-6L.582 4.999A8.003 8.003 0 018 0zM7 5l4 3-4 3-.001-2H0V7h6.999L7 5z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Open</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"awscaptcha_auto_open\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically opens captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M13.336 9.007l.044.085 2.58 6.193a.516.516 0 01-.91.48l-.043-.083-.728-1.747h-2.753l-.727 1.747a.516.516 0 01-.586.306l-.089-.028a.516.516 0 01-.306-.586l.028-.089 2.58-6.193a.517.517 0 01.91-.085zM4.128 1.728V4.13a5.161 5.161 0 004.13 9.187v2.095A7.226 7.226 0 014.128 1.73zm8.775 8.904l-.947 2.271h1.893l-.946-2.27zM8.258 0v8.258H6.193V0h2.065zm2.065 1.728a7.233 7.233 0 014.055 5.498h-2.094a5.162 5.162 0 00-1.962-3.097V1.728z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Solve</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"awscaptcha_auto_solve\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically solves captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M12.214 10l.964 3H14.5a1.5 1.5 0 010 3h-13a1.5 1.5 0 010-3h1.322l.964-3h8.428zm-1.607-5l.964 3H4.429l.964-3h5.214zM9 0l.964 3H6.036L7 0h2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay solving</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"awscaptcha_solve_delay\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Adds a delay to avoid detection.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M16 8a8 8 0 01-8 8v-1a7 7 0 007-7h1zm-4.667 3.536l.667.707C10.976 13.33 9.562 14 8 14c-1.562 0-2.976-.671-4-1.757l.667-.707C5.52 12.441 6.698 13 8 13s2.48-.56 3.333-1.464zM7 4.5a.5.5 0 01.492.41L7.5 5v3.5H10a.5.5 0 01.492.41L10.5 9a.5.5 0 01-.41.492L10 9.5H6.5V5a.5.5 0 01.5-.5zM8 0v1a7 7 0 00-7 7H0a8 8 0 018-8zm0 2c1.562 0 2.977.672 4 1.758l-.666.707C10.48 3.56 9.302 3 8 3s-2.48.56-3.334 1.465L4 3.758C5.023 2.672 6.438 2 8 2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay Timer</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Milliseconds to delay solving.</div>\n                                    <input type=\"number\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Delay\" value=\"\" class=\"settings_text text_input text_right small\" data-settings=\"awscaptcha_solve_delay_time\">\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <!-- TEXTCAPTCHA TAB -->\n            <div class=\"tab hidden\" data-tab=\"textcaptcha\">\n                <div class=\"header\">\n                    <button class=\"nav_icon back\" data-tabtarget=\"main\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 9 16\"><path d=\"M2.684 8l6.038-6.308c.37-.387.37-1.015 0-1.402a.92.92 0 00-1.342 0L0 8l7.38 7.71a.92.92 0 001.342 0c.37-.387.37-1.015 0-1.402L2.684 8z\"></path></svg>\n                    </button>\n\n                    <div class=\"header_label_container\">\n                        <div class=\"header_label\">Text CAPTCHA</div>\n                    </div>\n\n                    <a href=\"https://nopecha.com/demo/textcaptcha\" target=\"_blank\">\n                        <button class=\"nav_icon\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 100 100\"><g transform=\"translate(0,51) scale(0.01,-0.01)\"><path fill=\"#ffffff\" d=\"M7287.1,5007c-697.7-46.8-1170-242.5-1467.8-608.4c-227.6-285.1-274.4-463.7-170.2-655.2c89.3-159.5,185.1-202.1,574.4-259.5c234-34,310.6-14.9,425.4,114.9c331.8,370.1,385,399.9,757.3,414.8c393.6,19.1,689.2-59.6,804.1-212.7c72.3-95.7,119.1-274.4,119.1-451v-151l-174.5-55.3c-251-80.8-461.6-131.9-989.2-240.4c-908.3-185.1-1240.2-321.2-1516.7-619c-231.9-251-340.4-551-340.4-933.9C5308.8,661,5713,148.3,6404.3-34.6c119.1-31.9,223.4-40.4,521.2-38.3c342.5,0,387.2,6.4,559.5,57.4c310.6,95.7,604.1,261.7,838.1,470.1l110.6,100l44.7-144.7c59.6-193.6,125.5-289.3,238.3-344.6c80.8-38.3,131.9-44.7,363.7-44.7c363.8,0,472.3,46.8,572.2,242.5c48.9,95.7,44.7,202.1-17,502c-34.1,161.7-38.3,321.2-40.4,1531.6c-2.1,1159.4-6.4,1378.5-38.3,1552.9c-57.4,338.2-112.7,459.5-287.2,642.4c-259.5,272.3-597.8,423.3-1089.2,482.9C7974.2,4998.5,7459.4,5017.6,7287.1,5007z M8325.2,1962.9c-10.6-346.7-17-416.9-59.6-523.3c-97.9-255.3-353.1-482.9-642.4-570.1c-202.1-61.7-489.3-51.1-644.5,23.4c-134,65.9-263.8,195.7-329.7,329.7c-76.6,159.5-74.5,389.3,6.4,525.4c117,200,302.1,282.9,950.9,429.7c240.4,55.3,493.5,117,563.7,138.3c70.2,23.4,136.2,42.5,146.8,42.5C8327.4,2360.7,8329.5,2186.3,8325.2,1962.9z\"/><path fill=\"#ffffff\" d=\"M2909.2,1996.9c-38.3-12.8-104.2-57.4-148.9-100c-72.3-72.3-187.2-359.5-1248.7-3097.3C869.2-2861.7,333.1-4252.9,322.5-4295.5c-40.4-161.7,68.1-378.7,229.7-451c74.5-34,140.4-40.4,448.9-40.4c410.6,0,491.4,21.3,591.4,153.2c34,44.7,148.9,342.5,299.9,772.2l242.5,702h1346.6h1348.7l217-585c119.1-321.2,236.1-640.3,261.6-706.2c55.3-153.2,131.9-244.6,244.7-295.7c117-53.2,776.4-59.6,899.8-8.5c157.4,65.9,259.5,217,259.5,380.8c0,76.6-244.6,708.4-1216.8,3144.1c-1327.4,3331.3-1257.2,3171.7-1452.9,3227C3938.8,2024.6,3009.2,2024.6,2909.2,1996.9z M3945.2-851.5l444.6-1201.9l-906.2-6.4c-497.8-2.1-908.3,0-912.6,4.3c-6.4,6.4,782.8,2216.6,878.6,2459.1C3466.6,446.2,3441.1,514.2,3945.2-851.5z\"/></g></svg>\n                        </button>\n                    </a>\n                </div>\n\n                <div style=\"position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0px; max-height: 402px;\">\n                    <div style=\"position: relative; overflow: auto; margin-bottom: -15px; min-height: 15px; max-height: 417px;\">\n                        <div class=\"scrolling_container\">\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M13.336 9.007l.044.085 2.58 6.193a.516.516 0 01-.91.48l-.043-.083-.728-1.747h-2.753l-.727 1.747a.516.516 0 01-.586.306l-.089-.028a.516.516 0 01-.306-.586l.028-.089 2.58-6.193a.517.517 0 01.91-.085zM4.128 1.728V4.13a5.161 5.161 0 004.13 9.187v2.095A7.226 7.226 0 014.128 1.73zm8.775 8.904l-.947 2.271h1.893l-.946-2.27zM8.258 0v8.258H6.193V0h2.065zm2.065 1.728a7.233 7.233 0 014.055 5.498h-2.094a5.162 5.162 0 00-1.962-3.097V1.728z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Auto-Solve</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"textcaptcha_auto_solve\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Automatically solves captcha challenges.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M12.214 10l.964 3H14.5a1.5 1.5 0 010 3h-13a1.5 1.5 0 010-3h1.322l.964-3h8.428zm-1.607-5l.964 3H4.429l.964-3h5.214zM9 0l.964 3H6.036L7 0h2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay solving</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_toggle off\" data-settings=\"textcaptcha_solve_delay\">\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Adds a delay to avoid detection.</div>\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M16 8a8 8 0 01-8 8v-1a7 7 0 007-7h1zm-4.667 3.536l.667.707C10.976 13.33 9.562 14 8 14c-1.562 0-2.976-.671-4-1.757l.667-.707C5.52 12.441 6.698 13 8 13s2.48-.56 3.333-1.464zM7 4.5a.5.5 0 01.492.41L7.5 5v3.5H10a.5.5 0 01.492.41L10.5 9a.5.5 0 01-.41.492L10 9.5H6.5V5a.5.5 0 01.5-.5zM8 0v1a7 7 0 00-7 7H0a8 8 0 018-8zm0 2c1.562 0 2.977.672 4 1.758l-.666.707C10.48 3.56 9.302 3 8 3s-2.48.56-3.334 1.465L4 3.758C5.023 2.672 6.438 2 8 2z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Delay Timer</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">Milliseconds to delay solving.</div>\n                                    <input type=\"number\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Delay\" value=\"\" class=\"settings_text text_input text_right small\" data-settings=\"textcaptcha_solve_delay_time\">\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M10.833 0C12.03 0 13 .895 13 2v2h-2V2H2v12h2v2H2.167C.97 16 0 15.105 0 14V2C0 .895.97 0 2.167 0h8.666zM9.5 5a4.5 4.5 0 013.81 6.895l2.397 2.398a1 1 0 01-1.32 1.497l-.094-.083-2.398-2.396A4.5 4.5 0 119.5 5zm0 2a2.5 2.5 0 100 5 2.5 2.5 0 000-5z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Image Element</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_button bbflex\">\n                                                <div class=\"locate\" data-key=\"textcaptcha_image_selector\">Locate</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">CSS selector for the captcha image.</div>\n                                    <input type=\"text\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Enter CSS selector\" value=\"\" class=\"settings_text text_input text_right\" data-settings=\"textcaptcha_image_selector\">\n                                </div>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <div class=\"settings_item\">\n                                    <div class=\"bbflex\">\n                                        <div class=\"bbflex\">\n                                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M10.833 0C12.03 0 13 .895 13 2v2h-2V2H2v12h2v2H2.167C.97 16 0 15.105 0 14V2C0 .895.97 0 2.167 0h8.666zM9.5 5a4.5 4.5 0 013.81 6.895l2.397 2.398a1 1 0 01-1.32 1.497l-.094-.083-2.398-2.396A4.5 4.5 0 119.5 5zm0 2a2.5 2.5 0 100 5 2.5 2.5 0 000-5z\"></path></svg>\n                                            <div class=\"settings_item_label bbflex\">Input Element</div>\n                                        </div>\n                                        <div class=\"bbflex\">\n                                            <div class=\"settings_button bbflex\">\n                                                <div class=\"locate\" data-key=\"textcaptcha_input_selector\">Locate</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"settings_description_container bbflex\">\n                                    <div class=\"settings_description\">CSS selector for the captcha input.</div>\n                                    <input type=\"text\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Enter CSS selector\" value=\"\" class=\"settings_text text_input text_right\" data-settings=\"textcaptcha_input_selector\">\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <!-- MAIN TAB -->\n            <div class=\"tab\" data-tab=\"main\">\n                <div class=\"header\">\n                    <!-- <a href=\"https://nopecha.com/discord\" target=\"_blank\">\n                        <button class=\"nav_icon hover_glow\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 71 55\"><path d=\"M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z\"/></svg>\n                        </button>\n                    </a> -->\n\n                    <div data-tabtarget=\"settings\">\n                        <button class=\"nav_icon\">\n                            <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M1 0h14a1 1 0 010 2H1a1 1 0 110-2zm0 6h14a1 1 0 010 2H1a1 1 0 110-2zm0 6h14a1 1 0 010 2H1a1 1 0 010-2z\" opacity=\"0.603\"></path></svg>\n                        </button>\n                    </div>\n\n                    <div class=\"header_label_container\">\n                        <a href=\"https://nopecha.com\" target=\"_blank\">\n                            <div class=\"header_label\">NopeCHA</div>\n                        </a>\n                    </div>\n\n                    <button id='power' class=\"nav_icon\">\n                        <div style=\"width: 32px; height: 32px;\">\n                            <div class=\"btn\">\n                                <svg width=\"32\" height=\"32\" viewBox=\"0 0 72 72\"><path d=\"M31.5 18.57a18 18 0 109-.01v3.13a15 15 0 11-9 0v-3.12zm3-5.07v22a1.5 1.5 0 003 0v-22a1.5 1.5 0 00-3 0zM36 66a30 30 0 110-60 30 30 0 010 60z\" fill=\"#ffffff\"></path></svg>\n                            </div>\n                        </div>\n                        <div class=\"btn_outline spinning hidden\">\n                            <svg width=\"32\" height=\"32\" viewBox=\"0 0 72 72\"><path fill=\"#A0FEDA\" fill-rule=\"evenodd\" d=\"M.055 38H3.06C4.093 55.294 18.446 69 36 69s31.907-13.706 32.94-31h3.005C70.908 56.952 55.211 72 36 72S1.092 56.952.055 38zm0-4C1.092 15.048 16.789 0 36 0s34.908 15.048 35.945 34H68.94C67.907 16.706 53.554 3 36 3S4.093 16.706 3.06 34H.055z\"></path></svg>\n                        </div>\n                        <div class=\"btn_outline static hidden\">\n                            <svg width=\"32\" height=\"32\" viewBox=\"0 0 72 72\" fill=\"#55ff8a\"><path d=\"M36 72C16.118 72 0 55.882 0 36S16.118 0 36 0s36 16.118 36 36-16.118 36-36 36zm0-3c18.225 0 33-14.775 33-33S54.225 3 36 3 3 17.775 3 36s14.775 33 33 33z\"></path></svg>\n                        </div>\n                    </button>\n                </div>\n\n                <div class=\"plan_info_container\" style=\"border-bottom: 1px solid rgba(255, 255, 255, 0.4);\">\n                    <input type=\"text\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Enter subscription key\" value=\"\" class=\"settings_text text_input plan_info hiddenleft\" data-settings=\"key\" style=\"padding: 2px 8px 2px 16px\">\n                    <div id=\"edit_key\" class=\"plan_info\">\n                        <div class=\"plan_label clickable key_label\">\n                            <div>Subscription Key</div>\n                            <div class=\"instructions\">(Click to enter)</div>\n                        </div>\n                        <div class=\"plan_value\">\n                            <button class=\"plan_button edit_icon hidden clickable\">\n                                <!-- <div class=\"edit_key\"></div> -->\n                                <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path fill-rule=\"evenodd\" d=\"M11 0l.217.005a5 5 0 014.778 4.772L16 5 5 16H0v-5L11 0zM2 11.828V14h2.172l9.737-9.737a3.009 3.009 0 00-1.983-2.125l-.184-.052L2 11.828z\"></path></svg>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <br>\n\n                <div class=\"plan_info_box\">\n                    <div id=\"ipbanned_warning\" class=\"warning_box hidden\">\n                        <div>Your IP is ineligible for free credits.</div>\n                        <div><a href=\"https://nopecha.com/pricing\" target=\"_blank\">Purchase a key</a> to use with VPN/proxy.</div>\n                    </div>\n\n                    <div class=\"plan_info_container\">\n                        <div class=\"plan_info\">\n                            <div id=\"plan\" class=\"plan_label\">Free Plan</div>\n                            <div class=\"plan_value\">\n                                <a href=\"https://nopecha.com/manage\" target=\"_blank\">\n                                    <button class=\"plan_button link\">\n                                        <div class=\"plan_button_label clickable\">Upgrade</div>\n                                    </button>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"plan_info_container\">\n                        <div class=\"plan_info\">\n                            <div class=\"plan_label\">Credits</div>\n                            <div class=\"plan_value\">\n                                <a href=\"https://nopecha.com/manage\" target=\"_blank\">\n                                    <button class=\"plan_button link\">\n                                        <div id=\"credit\" class=\"plan_button_label clickable\">0 / 0</div>\n                                    </button>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"plan_info_container\">\n                        <div class=\"plan_info\">\n                            <div class=\"plan_label\">Refills</div>\n                            <div class=\"plan_value\">\n                                <a href=\"https://nopecha.com/manage\" target=\"_blank\">\n                                    <button class=\"plan_button link\">\n                                        <div id=\"refills\" class=\"plan_button_label clickable\">00:00:00</div>\n                                    </button>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"menu\">\n                    <button class=\"menu_item_container\" data-tabtarget=\"hcaptcha\">\n                        <div class=\"button_label_container\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"20 20 560 560\"><path d=\"m374.48 524.29h74.9v74.89h-74.9z\" fill=\"#0074bf\" opacity=\".502\"/><path d=\"m299.59 524.29h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#0074bf\" opacity=\".702\"/><path d=\"m149.8 524.29h74.9v74.89h-74.9z\" fill=\"#0074bf\" opacity=\".502\"/><g fill=\"#0082bf\"><path d=\"m449.39 449.39h74.9v74.9h-74.9z\" opacity=\".702\"/><path d=\"m374.48 449.39h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m299.59 449.39h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 449.39h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m74.89 449.39h74.9v74.9h-74.9z\" opacity=\".702\"/></g><g fill=\"#008fbf\"><path d=\"m524.29 374.48h74.89v74.9h-74.89z\" opacity=\".502\"/><path d=\"m449.39 374.48h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m374.48 374.48h74.9v74.9h-74.9zm-74.89 0h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 374.48h74.9v74.9h-74.9z\"/><path d=\"m74.89 374.48h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m0 374.48h74.89v74.9h-74.89z\" opacity=\".502\"/></g><path d=\"m524.29 299.59h74.89v74.89h-74.89z\" fill=\"#009dbf\" opacity=\".702\"/><path d=\"m449.39 299.59h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9zm-74.89 0h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#009dbf\"/><path d=\"m149.8 299.59h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9z\" fill=\"#009dbf\"/><path d=\"m0 299.59h74.89v74.89h-74.89z\" fill=\"#009dbf\" opacity=\".702\"/><path d=\"m524.29 224.7h74.89v74.89h-74.89z\" fill=\"#00abbf\" opacity=\".702\"/><path d=\"m449.39 224.7h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9zm-74.89 0h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#00abbf\"/><path d=\"m149.8 224.7h74.9v74.89h-74.9zm-74.91 0h74.9v74.89h-74.9z\" fill=\"#00abbf\"/><path d=\"m0 224.7h74.89v74.89h-74.89z\" fill=\"#00abbf\" opacity=\".702\"/><g fill=\"#00b9bf\"><path d=\"m524.29 149.8h74.89v74.9h-74.89z\" opacity=\".502\"/><path d=\"m449.39 149.8h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m374.48 149.8h74.9v74.9h-74.9zm-74.89 0h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 149.8h74.9v74.9h-74.9z\"/><path d=\"m74.89 149.8h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m0 149.8h74.89v74.9h-74.89z\" opacity=\".502\"/></g><g fill=\"#00c6bf\"><path d=\"m449.39 74.89h74.9v74.9h-74.9z\" opacity=\".702\"/><path d=\"m374.48 74.89h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m299.59 74.89h74.89v74.9h-74.89zm-74.89 0h74.89v74.9h-74.89z\"/><path d=\"m149.8 74.89h74.9v74.9h-74.9z\" opacity=\".8\"/><path d=\"m74.89 74.89h74.9v74.9h-74.9z\" opacity=\".702\"/></g><path d=\"m374.48 0h74.9v74.89h-74.9z\" fill=\"#00d4bf\" opacity=\".502\"/><path d=\"m299.59 0h74.89v74.89h-74.89zm-74.89 0h74.89v74.89h-74.89z\" fill=\"#00d4bf\" opacity=\".702\"/><path d=\"m149.8 0h74.9v74.89h-74.9z\" fill=\"#00d4bf\" opacity=\".502\"/><path d=\"m197.2 275.96 20.87-46.71c7.61-11.97 6.6-26.64-1.72-34.96-.28-.28-.56-.55-.86-.81-.29-.26-.59-.52-.89-.76a21.043 21.043 0 0 0 -1.92-1.37 22.68 22.68 0 0 0 -4.51-2.13c-1.58-.55-3.21-.92-4.87-1.12-1.66-.19-3.34-.2-5-.03s-3.3.51-4.88 1.04c-1.79.55-3.53 1.27-5.19 2.13a32.32 32.32 0 0 0 -4.72 3.02 32.38 32.38 0 0 0 -4.12 3.82 32 32 0 0 0 -3.37 4.48c-.98 1.59-28.57 66.66-39.2 96.62s-6.39 84.91 34.61 125.99c43.48 43.48 106.43 53.41 146.58 23.28.42-.21.84-.44 1.24-.67.41-.23.81-.48 1.2-.74.4-.25.78-.52 1.16-.8.38-.27.75-.56 1.11-.86l123.73-103.32c6.01-4.97 14.9-15.2 6.92-26.88-7.79-11.39-22.55-3.64-28.57.21l-71.21 51.78c-.33.27-.72.48-1.13.6-.42.12-.85.16-1.28.11s-.85-.19-1.22-.4c-.38-.21-.71-.5-.97-.85-1.81-2.22-2.13-8.11.71-10.44l109.16-92.64c9.43-8.49 10.74-20.84 3.1-29.3-7.45-8.29-19.29-8.04-28.8.53l-98.28 76.83c-.46.38-.99.66-1.56.82s-1.17.21-1.76.13-1.15-.27-1.66-.58c-.51-.3-.96-.7-1.3-1.18-1.94-2.18-2.69-5.89-.5-8.07l111.3-108.01c2.09-1.95 3.78-4.29 4.96-6.88 1.18-2.6 1.85-5.41 1.95-8.26s-.36-5.7-1.36-8.37c-1-2.68-2.51-5.13-4.45-7.22-.97-1.03-2.05-1.95-3.2-2.75a21.14 21.14 0 0 0 -3.69-2.05c-1.3-.55-2.65-.97-4.03-1.26-1.38-.28-2.79-.42-4.2-.41-1.44-.02-2.88.1-4.29.37a21.906 21.906 0 0 0 -7.96 3.16c-1.21.78-2.34 1.68-3.38 2.68l-113.73 106.83c-2.72 2.72-8.04 0-8.69-3.18-.06-.28-.08-.57-.07-.86s.06-.58.15-.85c.08-.28.2-.55.35-.79.15-.25.33-.48.54-.68l87.05-99.12a21.38 21.38 0 0 0 6.82-15.3c.11-5.81-2.15-11.42-6.25-15.53-4.11-4.12-9.71-6.4-15.52-6.31s-11.34 2.53-15.32 6.77l-132.01 145.95c-4.73 4.73-11.7 4.97-15.02 2.22-.51-.4-.93-.9-1.24-1.46-.32-.56-.52-1.18-.6-1.82-.08-.65-.03-1.3.14-1.92s.46-1.21.85-1.72z\" fill=\"#fff\"/></svg>\n                            <div class=\"button_label\">hCaptcha</div>\n                        </div>\n                        <div class=\"icon-container\">\n                            <svg viewBox=\"0 0 16 16\" class=\"menu_item_arrow\"><path fill-rule=\"evenodd\" d=\"M10.3 8l-6-6.3a1 1 0 010-1.4 1 1 0 011.3 0L13 8l-7.4 7.7a1 1 0 01-1.3 0 1 1 0 010-1.4l6-6.3z\"></path></svg>\n                        </div>\n                    </button>\n\n                    <button class=\"menu_item_container\" data-tabtarget=\"recaptcha\">\n                        <div class=\"button_label_container\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 70 70\"><path d=\"M64 31.955l-.033-1.37V4.687l-7.16 7.16C50.948 4.674 42.033.093 32.05.093c-10.4 0-19.622 4.96-25.458 12.64l11.736 11.86a15.55 15.55 0 0 1 4.754-5.334c2.05-1.6 4.952-2.906 8.968-2.906.485 0 .86.057 1.135.163 4.976.393 9.288 3.14 11.828 7.124l-8.307 8.307L64 31.953\" fill=\"#1c3aa9\"/><path d=\"M31.862.094l-1.37.033H4.594l7.16 7.16C4.58 13.147 0 22.06 0 32.046c0 10.4 4.96 19.622 12.64 25.458L24.5 45.768a15.55 15.55 0 0 1-5.334-4.754c-1.6-2.05-2.906-4.952-2.906-8.968 0-.485.057-.86.163-1.135.393-4.976 3.14-9.288 7.124-11.828l8.307 8.307L31.86.095\" fill=\"#4285f4\"/><path d=\"M.001 32.045l.033 1.37v25.898l7.16-7.16c5.86 7.173 14.774 11.754 24.76 11.754 10.4 0 19.622-4.96 25.458-12.64l-11.736-11.86a15.55 15.55 0 0 1-4.754 5.334c-2.05 1.6-4.952 2.906-8.968 2.906-.485 0-.86-.057-1.135-.163-4.976-.393-9.288-3.14-11.828-7.124l8.307-8.307c-10.522.04-22.4.066-27.295-.005\" fill=\"#ababab\"/></svg>\n                            <div class=\"button_label\">reCAPTCHA</div>\n                        </div>\n                        <div class=\"icon-container\">\n                            <svg viewBox=\"0 0 16 16\" class=\"menu_item_arrow\"><path fill-rule=\"evenodd\" d=\"M10.3 8l-6-6.3a1 1 0 010-1.4 1 1 0 011.3 0L13 8l-7.4 7.7a1 1 0 01-1.3 0 1 1 0 010-1.4l6-6.3z\"></path></svg>\n                        </div>\n                    </button>\n\n                    <button class=\"menu_item_container\" data-tabtarget=\"funcaptcha\">\n                        <div class=\"button_label_container\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"18 30 37 34\"><path d=\"M52.107,37.991,38.249,30a3.992,3.992,0,0,0-1.919-.533A3.606,3.606,0,0,0,34.412,30L20.555,37.991a3.829,3.829,0,0,0-1.919,3.3V57.338a3.9,3.9,0,0,0,1.919,3.3l.959.533,4.423,2.558V56.326l10.393-5.969,10.393,5.969v7.355l4.423-2.558.959-.586a3.829,3.829,0,0,0,1.919-3.3V41.243A3.857,3.857,0,0,0,52.107,37.991ZM46.617,47.9,38.2,43a3.99,3.99,0,0,0-1.918-.533A3.607,3.607,0,0,0,34.359,43l-8.474,4.9V43.268l8.688-5.01a3.425,3.425,0,0,1,3.358,0l8.688,5.01Z\" fill=\"#50b95d\"/></svg>\n                            <div class=\"button_label\">FunCAPTCHA</div>\n                        </div>\n                        <div class=\"icon-container\">\n                            <svg viewBox=\"0 0 16 16\" class=\"menu_item_arrow\"><path fill-rule=\"evenodd\" d=\"M10.3 8l-6-6.3a1 1 0 010-1.4 1 1 0 011.3 0L13 8l-7.4 7.7a1 1 0 01-1.3 0 1 1 0 010-1.4l6-6.3z\"></path></svg>\n                        </div>\n                    </button>\n\n                    <button class=\"menu_item_container\" data-tabtarget=\"awscaptcha\">\n                        <div class=\"button_label_container\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 256 310\"><path d=\"M0 173.367l.985.52 15.49 1.762 19.455-1.082.856-.45-17.267-1.501-19.519.75z\" fill=\"#B6C99C\"/><path d=\"M128 .698L73.948 27.724V201.23L128 211.148l1.85-2.5V5.148L128 .699z\" fill=\"#4C612C\"/><path d=\"M128 .698v217.7l54.053-16.141V27.724L128 .698z\" fill=\"#769B3F\"/><path d=\"M219.214 174.117l.922.623 19.339 1.074 15.656-1.779.869-.669-19.52-.75-17.266 1.501z\" fill=\"#B6C99C\"/><path d=\"M219.214 210.153l20.27 2.627.543-.998v-35.397l-.543-1.141-20.27-1.126v36.035z\" fill=\"#4C612C\"/><path d=\"M36.786 210.153l-20.27 2.627-.342-.925v-36.001l.342-.61 20.27-1.126v36.035z\" fill=\"#769B3F\"/><path d=\"M125.748 208.651l-89.713-15.765-19.52 1.876.889.891 85.223 17.265.974-.513 22.147-3.754z\" fill=\"#B6C99C\"/><path d=\"M0 191.385v54.428L89.713 290.8v.055L128 310l1.6-3.002v-118.85l-1.6-3.746-38.287-3.753v28.888l-73.197-14.81v-19.483L0 173.367v18.018z\" fill=\"#4C612C\"/><path d=\"M128 209.026l21.771 3.754 2.804.118 85.285-17.129 1.624-1.007-19.144-1.877L128 209.026z\" fill=\"#B6C99C\"/><path d=\"M239.484 175.243v19.483l-73.196 14.811v-30.165L128 183.126V310l128-64.188v-72.446l-16.516 1.877z\" fill=\"#769B3F\"/><path d=\"M166.287 182.375L128 179.372l-38.288 3.003L128 186.13l38.287-3.754z\" fill=\"#B6C99C\"/></svg>\n                            <div class=\"button_label\">AWS CAPTCHA</div>\n                        </div>\n                        <div class=\"icon-container\">\n                            <svg viewBox=\"0 0 16 16\" class=\"menu_item_arrow\"><path fill-rule=\"evenodd\" d=\"M10.3 8l-6-6.3a1 1 0 010-1.4 1 1 0 011.3 0L13 8l-7.4 7.7a1 1 0 01-1.3 0 1 1 0 010-1.4l6-6.3z\"></path></svg>\n                        </div>\n                    </button>\n\n                    <button class=\"menu_item_container\" data-tabtarget=\"textcaptcha\">\n                        <div class=\"button_label_container\">\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 100 100\"><g transform=\"translate(0,51) scale(0.01,-0.01)\"><path fill=\"#ffffff\" d=\"M7287.1,5007c-697.7-46.8-1170-242.5-1467.8-608.4c-227.6-285.1-274.4-463.7-170.2-655.2c89.3-159.5,185.1-202.1,574.4-259.5c234-34,310.6-14.9,425.4,114.9c331.8,370.1,385,399.9,757.3,414.8c393.6,19.1,689.2-59.6,804.1-212.7c72.3-95.7,119.1-274.4,119.1-451v-151l-174.5-55.3c-251-80.8-461.6-131.9-989.2-240.4c-908.3-185.1-1240.2-321.2-1516.7-619c-231.9-251-340.4-551-340.4-933.9C5308.8,661,5713,148.3,6404.3-34.6c119.1-31.9,223.4-40.4,521.2-38.3c342.5,0,387.2,6.4,559.5,57.4c310.6,95.7,604.1,261.7,838.1,470.1l110.6,100l44.7-144.7c59.6-193.6,125.5-289.3,238.3-344.6c80.8-38.3,131.9-44.7,363.7-44.7c363.8,0,472.3,46.8,572.2,242.5c48.9,95.7,44.7,202.1-17,502c-34.1,161.7-38.3,321.2-40.4,1531.6c-2.1,1159.4-6.4,1378.5-38.3,1552.9c-57.4,338.2-112.7,459.5-287.2,642.4c-259.5,272.3-597.8,423.3-1089.2,482.9C7974.2,4998.5,7459.4,5017.6,7287.1,5007z M8325.2,1962.9c-10.6-346.7-17-416.9-59.6-523.3c-97.9-255.3-353.1-482.9-642.4-570.1c-202.1-61.7-489.3-51.1-644.5,23.4c-134,65.9-263.8,195.7-329.7,329.7c-76.6,159.5-74.5,389.3,6.4,525.4c117,200,302.1,282.9,950.9,429.7c240.4,55.3,493.5,117,563.7,138.3c70.2,23.4,136.2,42.5,146.8,42.5C8327.4,2360.7,8329.5,2186.3,8325.2,1962.9z\"/><path fill=\"#ffffff\" d=\"M2909.2,1996.9c-38.3-12.8-104.2-57.4-148.9-100c-72.3-72.3-187.2-359.5-1248.7-3097.3C869.2-2861.7,333.1-4252.9,322.5-4295.5c-40.4-161.7,68.1-378.7,229.7-451c74.5-34,140.4-40.4,448.9-40.4c410.6,0,491.4,21.3,591.4,153.2c34,44.7,148.9,342.5,299.9,772.2l242.5,702h1346.6h1348.7l217-585c119.1-321.2,236.1-640.3,261.6-706.2c55.3-153.2,131.9-244.6,244.7-295.7c117-53.2,776.4-59.6,899.8-8.5c157.4,65.9,259.5,217,259.5,380.8c0,76.6-244.6,708.4-1216.8,3144.1c-1327.4,3331.3-1257.2,3171.7-1452.9,3227C3938.8,2024.6,3009.2,2024.6,2909.2,1996.9z M3945.2-851.5l444.6-1201.9l-906.2-6.4c-497.8-2.1-908.3,0-912.6,4.3c-6.4,6.4,782.8,2216.6,878.6,2459.1C3466.6,446.2,3441.1,514.2,3945.2-851.5z\"/></g></svg>\n                            <div class=\"button_label\">Text CAPTCHA</div>\n                        </div>\n                        <div class=\"icon-container\">\n                            <svg viewBox=\"0 0 16 16\" class=\"menu_item_arrow\"><path fill-rule=\"evenodd\" d=\"M10.3 8l-6-6.3a1 1 0 010-1.4 1 1 0 011.3 0L13 8l-7.4 7.7a1 1 0 01-1.3 0 1 1 0 010-1.4l6-6.3z\"></path></svg>\n                        </div>\n                    </button>\n                </div>\n\n                <div class='footer'>\n                    <!-- <div>Join us on <a href=\"https://nopecha.com/discord\">Discord</a> for more credits!</div>\n                    <div id=\"export\" class=\"hidden\">Export Settings</div> -->\n                </div>\n            </div>\n\n            <!-- SETTINGS TAB -->\n            <div class=\"tab hidden\" data-tab=\"settings\">\n                <div class=\"header\">\n                    <button class=\"nav_icon back\" data-tabtarget=\"main\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 9 16\"><path d=\"M2.684 8l6.038-6.308c.37-.387.37-1.015 0-1.402a.92.92 0 00-1.342 0L0 8l7.38 7.71a.92.92 0 001.342 0c.37-.387.37-1.015 0-1.402L2.684 8z\"></path></svg>\n                    </button>\n\n                    <div class=\"header_label_container\">\n                        <div class=\"header_label\">Settings</div>\n                    </div>\n\n                    <button class=\"nav_icon\" disabled></button>\n                </div>\n\n                <div class=\"menu\">\n                    <button class=\"menu_item_container\" data-tabtarget=\"disabled_hosts\">\n                        <div class=\"button_label_container\">\n                            <svg width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M3 2v12h10V2H3zm0-2h10a2 2 0 012 2v12a2 2 0 01-2 2H3a2 2 0 01-2-2V2a2 2 0 012-2zm2 4h6v2H5V4zm0 4h3v2H5V8z\"></path></svg>\n                            <div class=\"button_label\">Disabled Hosts</div>\n                        </div>\n                        <div class=\"icon-container\">\n                            <svg viewBox=\"0 0 16 16\" class=\"menu_item_arrow\"><path fill-rule=\"evenodd\" d=\"M10.3 8l-6-6.3a1 1 0 010-1.4 1 1 0 011.3 0L13 8l-7.4 7.7a1 1 0 01-1.3 0 1 1 0 010-1.4l6-6.3z\"></path></svg>\n                        </div>\n                    </button>\n\n                    <button id=\"export\" class=\"menu_item_container hidden\">\n                        <div class=\"button_label_container\">\n                            <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M8 0A8 8 0 11.582 11.001h2.221a6 6 0 100-6L.582 4.999A8.003 8.003 0 018 0zM7 5l4 3-4 3-.001-2H0V7h6.999L7 5z\"></path></svg>\n                            <div class=\"button_label\">Export Settings</div>\n                        </div>\n                        <div class=\"icon-container\">\n                            <svg viewBox=\"0 0 16 16\" class=\"menu_item_arrow\"><path fill-rule=\"evenodd\" d=\"M10.3 8l-6-6.3a1 1 0 010-1.4 1 1 0 011.3 0L13 8l-7.4 7.7a1 1 0 01-1.3 0 1 1 0 010-1.4l6-6.3z\"></path></svg>\n                        </div>\n                    </button>\n                </div>\n\n                <!-- LINKS -->\n                <div style=\"position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0px; max-height: 402px;\">\n                    <div style=\"position: relative; overflow: auto; margin-bottom: -15px; min-height: 15px; max-height: 417px;\">\n                        <div class=\"scrolling_container\">\n                            <div style=\"margin-top: 16px; margin-bottom: 8px; padding-bottom: 4px; font-size: 14px; font-weight: bold; border-bottom: 1px solid rgba(255, 255, 255, 0.5);\">\n                                Links\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <a href=\"https://developers.nopecha.com\" target=\"_blank\">\n                                    <div class=\"settings_description_container bbflex\">\n                                        <svg width=\"16\" height=\"16\" fill=\"#ffffff\"><path d=\"M14 2.894a3.898 3.898 0 00-4.808-.126L8 3.653l-1.192-.885A3.898 3.898 0 002 2.894v9.716a7.676 7.676 0 016.006.864A7.705 7.705 0 0114 12.621V2.894zm2 10.584v1.687l-.66.275a5.652 5.652 0 00-1.34-.72V12.62c.695.187 1.37.472 2 .857zM0 2.027l.403-.387A5.898 5.898 0 018 1.162a5.898 5.898 0 017.597.478l.403.387V16a5.692 5.692 0 00-8 0 5.663 5.663 0 00-8 0V2.027zm7-.019h2v12H7v-12z\"></path></svg>\n                                        <div class=\"settings_description\">Documentation</div>\n                                    </div>\n                                </a>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <a href=\"https://nopecha.com\" target=\"_blank\">\n                                    <div class=\"settings_description_container bbflex\">\n                                        <svg width=\"16\" height=\"16\" viewBox=\"2 2 22 22\" fill=\"#ffffff\"><path d=\"M 12 2.0996094 L 1 12 L 4 12 L 4 21 L 11 21 L 11 15 L 13 15 L 13 21 L 20 21 L 20 12 L 23 12 L 12 2.0996094 z M 12 4.7910156 L 18 10.191406 L 18 11 L 18 19 L 15 19 L 15 13 L 9 13 L 9 19 L 6 19 L 6 10.191406 L 12 4.7910156 z\"/></svg>\n                                        <div class=\"settings_description\">Homepage</div>\n                                    </div>\n                                </a>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <a href=\"https://nopecha.com/discord\" target=\"_blank\">\n                                    <div class=\"settings_description_container bbflex\">\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 71 55\" fill=\"#ffffff\"><path d=\"M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z\"/></svg>\n                                        <div class=\"settings_description\">Discord</div>\n                                    </div>\n                                </a>\n                            </div>\n\n                            <div class=\"settings_item_container\">\n                                <a href=\"https://nopecha.com/github\" target=\"_blank\">\n                                    <div class=\"settings_description_container bbflex\">\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"#ffffff\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg>\n                                        <div class=\"settings_description\">GitHub</div>\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class='footer'></div>\n            </div>\n\n            <!-- DISABLED HOSTS TAB -->\n            <div class=\"tab hidden\" data-tab=\"disabled_hosts\">\n                <div class=\"header\">\n                    <button class=\"nav_icon back\" data-tabtarget=\"settings\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 9 16\"><path d=\"M2.684 8l6.038-6.308c.37-.387.37-1.015 0-1.402a.92.92 0 00-1.342 0L0 8l7.38 7.71a.92.92 0 001.342 0c.37-.387.37-1.015 0-1.402L2.684 8z\"></path></svg>\n                    </button>\n\n                    <div class=\"header_label_container\">\n                        <div class=\"header_label\">Disabled Hosts</div>\n                    </div>\n\n                    <button class=\"nav_icon\" disabled></button>\n                </div>\n\n                <div style=\"position: relative; overflow: hidden; width: 100%; height: auto; min-height: 0px; max-height: 402px;\">\n                    <div style=\"position: relative; overflow: auto; margin-bottom: -15px; min-height: 15px; max-height: 417px;\">\n                        <div class=\"scrolling_container\">\n                            <div class=\"css-rghnfo\">\n                                <div class=\"settings_item_header\">Current Page</div>\n                                <div class=\"settings_item_container list_item\">\n                                    <div class=\"list_item_row\">\n                                        <div id=\"current_page_host\">-</div>\n                                        <button id=\"add_current_page_host\" class=\"list_item_button\">\n                                            <svg width=\"16\" height=\"16\"><path fill=\"rgb(0, 106, 255)\" fill-rule=\"evenodd\" d=\"M9 7h6a1 1 0 110 2H9v6a1 1 0 11-2 0V9H1a1 1 0 110-2h6V1a1 1 0 112 0v6z\"></path></svg>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div class=\"settings_item_header\">Disabled Hosts</div>\n                                <div id=\"disabled_hosts\"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n\n        <script src=\"utils.js\"></script>\n        <script src=\"content.js\"></script>\n        <script src=\"popup.js\"></script>\n    </body>\n\n</html>\n"
        },
        {
          "name": "popup.js",
          "type": "blob",
          "size": 14.12109375,
          "content": "let plan = null;\nlet checking_server_plan = false;\nlet rendering_server_plan = false;\n\n\nfunction sleep(t) {\n    return new Promise(resolve => setTimeout(t));\n}\n\n\nfunction get_loading_html() {\n    return '<div class=\"loading\"><div></div><div></div><div></div><div></div></div>';\n}\n\n\nfunction number_with_comma(n) {\n    n = !n ? 0 : n;\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n\nasync function check_plan() {\n    const settings = await BG.exec('Settings.get');\n    if (!settings) {\n        return;\n    }\n\n    if (checking_server_plan) {\n        return;\n    }\n    checking_server_plan = true;\n\n    plan = await BG.exec('Server.get_plan', {key: settings.key});  // plan = {plan, credit, quota, duration, lastreset}\n\n    if (plan.error) {\n        plan = {\n            error: true,\n            plan: plan.message,\n            credit: 0,\n            quota: 0,\n            duration: null,\n            lastreset: null,\n            current_period_start: 1,\n            current_period_end: 1,\n        };\n    }\n\n    plan.subscription = ['Starter', 'Basic', 'Professional', 'Enterprise'].includes(plan.plan);\n    plan.invalid = false;\n    if (['Banned IP', 'Invalid key', 'Rate limit reached'].includes(plan.plan)) {\n        plan.invalid = true;\n    }\n    else {\n        plan.plan = `${plan.plan} Plan`;\n    }\n\n    plan.expired = false;\n    if (plan.subscription) {\n        const now = Date.now() / 1000;\n        const delta = plan.current_period_end - now;\n        if (delta < 0) {\n            plan.expired = true;\n            plan.credit = 0;\n            plan.quota = 0;\n        }\n    }\n\n    checking_server_plan = false;\n\n    const $loading_overlay = document.querySelector('#loading_overlay');\n    $loading_overlay.classList.add('hidden');\n}\n\n\nasync function render_plan() {\n    const settings = await BG.exec('Settings.get');\n    if (!settings) {\n        return;\n    }\n    if (!plan) {\n        return;\n    }\n    if (rendering_server_plan) {\n        return;\n    }\n    rendering_server_plan = true;\n\n    const $plan = document.querySelector('#plan');\n    const $credit = document.querySelector('#credit');\n    const $refills = document.querySelector('#refills');\n    const $ipbanned_warning = document.querySelector('#ipbanned_warning');\n\n    const now = Date.now() / 1000;\n    let secs_until_reset = null;\n    if (plan.lastreset && plan.duration) {\n        secs_until_reset = Math.floor(Math.max(0, plan.duration - (now - plan.lastreset)));\n    }\n\n    // Display plan name\n    $plan.innerHTML = plan.plan;\n    if (plan.invalid || plan.error) {\n        $plan.classList.add('red');\n    }\n    else {\n        $plan.classList.remove('red');\n    }\n\n    // Display banned message\n    if (plan.plan === 'Banned IP') {\n        $ipbanned_warning.classList.remove('hidden');\n    }\n    else {\n        $ipbanned_warning.classList.add('hidden');\n    }\n\n    // Display remaining credits\n    $credit.innerHTML = `${number_with_comma(plan.credit)} / ${number_with_comma(plan.quota)}`;\n    if (plan.credit === 0) {\n        $credit.classList.add('red');\n    }\n    else {\n        $credit.classList.remove('red');\n    }\n\n    // Display time until reset\n    if (plan.expired) {\n        $refills.innerHTML = 'Expired';\n        $refills.classList.add('red');\n    }\n    else {\n        if (plan.duration < 0) {\n            $refills.innerHTML = 'No refills';\n            $refills.classList.add('red');\n        }\n        else if (secs_until_reset) {\n            const hms = Time.seconds_as_hms(secs_until_reset);\n            $refills.innerHTML = `${hms}`;\n            $refills.classList.remove('red');\n        }\n        else {\n            $refills.innerHTML = get_loading_html();\n            $refills.classList.remove('red');\n        }\n\n        // Plan may have been reset. Fetch data from server\n        if (plan.lastreset === 1) {\n            $refills.innerHTML = 'Not activated';\n            $refills.classList.add('red');\n        }\n        else if (plan.duration > 0 && secs_until_reset === 0) {\n            await sleep(1000);\n            await check_plan();\n        }\n    }\n\n\n    rendering_server_plan = false;\n}\n\n\nasync function init_ui() {\n    const settings = await BG.exec('Settings.get');\n    console.log('settings', settings);\n\n\n    /**\n     * Power button\n     */\n\n    const $power_wrapper = document.querySelector('#power');\n    const $power_spinning = $power_wrapper.querySelector('.spinning');\n    const $power_static = $power_wrapper.querySelector('.static');\n    const $power_btn = $power_wrapper.querySelector('.btn');\n    if (settings.enabled) {\n        $power_static.classList.remove('hidden');\n        $power_btn.classList.remove('off');\n    }\n    else {\n        $power_btn.classList.add('off');\n    }\n    let last_anim = null;\n    $power_wrapper.addEventListener('click', async () => {\n        clearTimeout(last_anim);\n        $power_spinning.classList.add('hidden');\n        $power_static.classList.add('hidden');\n\n        if ($power_btn.classList.contains('off')) {\n            $power_btn.classList.remove('off');\n            $power_spinning.classList.remove('hidden');\n            await BG.exec('Settings.set', {id: 'enabled', value: true});\n            await BG.exec('Icon.set', {status: 'on'});\n            last_anim = setTimeout(() => {\n                $power_spinning.classList.add('hidden');\n                $power_static.classList.remove('hidden');\n            }, 1000);\n        }\n        else {\n            await BG.exec('Settings.set', {id: 'enabled', value: false});\n            await BG.exec('Icon.set', {status: 'off'});\n            $power_btn.classList.add('off');\n        }\n    });\n\n\n    /**\n     * Subscription key\n     */\n\n    const $key = document.querySelector('.settings_text[data-settings=\"key\"]');\n    const $edit_icon = document.querySelector('.edit_icon');\n    const $key_label = document.querySelector('.key_label');\n    function toggle_edit_key() {\n        if ($key.classList.contains('hiddenleft')) {\n            $key.classList.remove('hiddenleft');\n            $key.focus();\n            $edit_icon.classList.remove('hidden');\n            $key_label.classList.add('hidden');\n        }\n        else {\n            $key.classList.add('hiddenleft');\n            $edit_icon.classList.add('hidden');\n            $key_label.classList.remove('hidden');\n        }\n    }\n    document.querySelector('#edit_key').addEventListener('click', () => {\n        toggle_edit_key();\n        check_plan();\n    });\n    $key.addEventListener('keydown', e => {\n        e = e || window.event;\n        if (e.key === 'Enter') {\n            toggle_edit_key();\n            check_plan();\n            // Allow settings export when key is present\n            if ($key.value.length > 0) {\n                document.querySelector('#export').classList.remove('hidden');\n            }\n            else {\n                document.querySelector('#export').classList.add('hidden');\n            }\n        }\n    });\n    // Allow settings export when key is present\n    if (settings.key?.length > 0) {\n        document.querySelector('#export').classList.remove('hidden');\n    }\n    else {\n        document.querySelector('#export').classList.add('hidden');\n    }\n\n\n    /**\n     * Tab switching\n     */\n\n    for (const $e of document.querySelectorAll('[data-tabtarget]:not([data-tabtarget=\"\"])')) {\n        $e.addEventListener('click', () => {\n            for (const $t of document.querySelectorAll('.tab')) {\n                $t.classList.add('hidden');\n            }\n            const $tab = document.querySelector(`[data-tab=\"${$e.dataset.tabtarget}\"]`);\n            $tab.classList.remove('hidden');\n        });\n    }\n\n\n    /**\n     * Navigate backwards on mouse back or backspace\n     */\n\n    function back() {\n        const $active_tab = document.querySelector('.tab:not(.hidden)');\n        $active_tab.querySelector('.back')?.click();\n    }\n    document.addEventListener('mousedown', e => {\n        e = e || window.event;\n        if ((e.buttons & 8) > 0) {\n            back();\n        }\n    });\n    document.addEventListener('keydown', e => {\n        e = e || window.event;\n        if (e.key === 'Backspace' && !(e.target instanceof HTMLInputElement)) {\n            back();\n        }\n    });\n\n\n    /**\n     * Set UI from settings and attach listeners\n     */\n\n    for (const [k, v] of Object.entries(settings)) {\n        const $toggles = document.querySelectorAll(`.settings_toggle[data-settings=\"${k}\"]`);\n        for (const $toggle of $toggles) {\n            $toggle.classList.remove('on', 'off');\n            $toggle.classList.add(v ? 'on' : 'off');\n            // Listen\n            $toggle.addEventListener('click', async () => {\n                const value = $toggle.classList.contains('off');\n                await BG.exec('Settings.set', {id: k, value: value});\n                $toggle.classList.remove('on', 'off');\n                $toggle.classList.add(value ? 'on' : 'off');\n            });\n        }\n\n        const $options = document.querySelectorAll(`.settings_dropdown[data-settings=\"${k}\"]`);\n        for (const $option of $options) {\n            if ($option.dataset.value === v) {\n                $option.classList.add('selected');\n                document.querySelector($option.dataset.displays).innerHTML = $option.innerHTML;\n            }\n            // Listen\n            $option.addEventListener('click', async () => {\n                document.querySelector(`.settings_dropdown.selected[data-settings=\"${k}\"]`)?.classList?.remove('selected');\n                const value = $option.dataset.value;\n                await BG.exec('Settings.set', {id: k, value: value});\n                $option.classList.add('selected');\n                document.querySelector($option.dataset.displays).innerHTML = $option.innerHTML;\n            });\n        }\n\n        const $texts = document.querySelectorAll(`.settings_text[data-settings=\"${k}\"]`);\n        for (const $text of $texts) {\n            $text.value = v;\n            // Listen\n            $text.addEventListener('input', async () => {\n                const value = $text.value;\n                await BG.exec('Settings.set', {id: k, value: value});\n                // console.log(k, value);\n            });\n        }\n    }\n\n\n    /**\n     * Locate element\n     */\n\n    for (const $e of document.querySelectorAll('.locate')) {\n        $e.addEventListener('click', async () => {\n            const key = $e.dataset.key;\n            await BG.exec('Relay.send', {data: {action: 'start_locate', locate: key}});\n            // await BG.exec('Relay.send', {action: 'start_locate', locate: key});\n            window.close();\n        });\n    }\n\n\n    /**\n     * Disabled hosts\n     */\n\n    const $bl = document.querySelector('#disabled_hosts');\n    async function set_disabled_hosts(render=true) {\n        const hosts = new Set();\n        for (const e of settings.disabled_hosts) {\n            hosts.add(e.trim());\n        }\n        settings.disabled_hosts = [...hosts];\n        await BG.exec('Settings.set', {id: 'disabled_hosts', value: settings.disabled_hosts});\n        if (render) {\n            await render_disabled_hosts();\n        }\n    }\n    async function set_current_host() {\n        const active_tab = await BG.exec('Tab.active');\n        const active_url = active_tab.url ? active_tab.url : 'Unknown Host';\n        const current_host = active_url.replace(/^(.*:)\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/, '$2');\n        const $current_host = document.querySelector('#current_page_host');\n        $current_host.innerHTML = current_host;\n\n        let can_add = true;\n        if (!active_tab.url || settings.disabled_hosts.includes(settings.disabled_hosts)) {\n            can_add = false;\n        }\n\n        const $add_current_host = document.querySelector('#add_current_page_host');\n        if (can_add) {\n            $add_current_host.addEventListener('click', async () => {\n                settings.disabled_hosts.push(current_host);\n                await set_disabled_hosts();\n            });\n        }\n        else {\n            $add_current_host.disabled = true;\n        }\n    }\n    async function render_disabled_hosts() {\n        $bl.innerHTML = '';  // Clear disabled_hosts\n\n        const $bl_item_template = document.querySelector('#template > #disabled_hosts_item');\n        let change_delay_timer = null;\n\n        for (const i in settings.disabled_hosts) {\n            const e = settings.disabled_hosts[i]?.trim();\n            if (!e) {\n                continue;\n            }\n            const $e = $bl_item_template.cloneNode(true);\n            $e.id = null;\n            // Change hostname\n            const $input = $e.querySelector('input.hostname');\n            $input.value = e;\n            $input.addEventListener('input', () => {\n                clearTimeout(change_delay_timer);\n                console.log('$input.value', $input.value);\n                settings.disabled_hosts[i] = $input.value;\n                change_delay_timer = setTimeout(async () => {\n                    await set_disabled_hosts(false);\n                }, 200);\n            });\n            // Remove hostname\n            const $remove = $e.querySelector('.remove');\n            $remove.addEventListener('click', () => {\n                const index = settings.disabled_hosts.indexOf($input.value);\n                if (index !== -1) {\n                    settings.disabled_hosts.splice(index, 1);\n                    set_disabled_hosts(false);\n                }\n                $e.remove();\n            });\n            $bl.append($e);\n        }\n    }\n    set_current_host();\n    render_disabled_hosts();\n\n\n    /**\n     * Export settings\n     */\n\n    document.querySelector('#export').addEventListener('click', async () => {\n        const settings = await BG.exec('Settings.get');\n        const url = SettingsManager.export(settings);\n        window.open(url, '_blank');\n    });\n\n\n    /**\n     * Footer\n     */\n    const VERSION = `Version ${chrome.runtime.getManifest().version}`;\n    for (const $footer of document.querySelectorAll('.footer')) {\n        const $version = document.createElement('div');\n        $version.innerHTML = VERSION;\n        const $copyright = document.createElement('div');\n        $copyright.innerHTML = `2022 NopeCHA`;\n        $footer.append($version);\n        $footer.append($copyright);\n    }\n}\n\n\nasync function main() {\n    await init_ui();\n    await check_plan();\n    await render_plan();\n    setInterval(render_plan, 500);\n}\n\n\ndocument.addEventListener('DOMContentLoaded', main);\n"
        },
        {
          "name": "recaptcha.js",
          "type": "blob",
          "size": 12.7099609375,
          "content": "(async () => {\n    function is_widget_frame() {\n        return document.querySelector('.recaptcha-checkbox') !== null;\n    }\n\n\n    function is_image_frame() {\n        return document.querySelector('#rc-imageselect') !== null;\n    }\n\n\n    function open_image_frame() {\n        document.querySelector('#recaptcha-anchor')?.click();\n    }\n\n\n    function is_invalid_config() {\n        return document.querySelector('.rc-anchor-error-message') !== null;\n    }\n\n\n    function is_rate_limited() {\n        return document.querySelector('.rc-doscaptcha-header') !== null;\n    }\n\n\n    function is_solved() {\n        const is_widget_frame_solved = document.querySelector('.recaptcha-checkbox')?.getAttribute('aria-checked') === 'true';\n        // Note: verify button is disabled after clicking and during transition to the next image task\n        const is_image_frame_solved = document.querySelector('#recaptcha-verify-button')?.disabled;\n        return is_widget_frame_solved || is_image_frame_solved;\n    }\n\n\n    function on_images_ready(timeout=15000) {\n        return new Promise(async resolve => {\n            const start = Time.time();\n            while (true) {\n                const $tiles = document.querySelectorAll('.rc-imageselect-tile');\n                const $loading = document.querySelectorAll('.rc-imageselect-dynamic-selected');\n                const is_loaded = $tiles.length > 0 && $loading.length === 0;\n                if (is_loaded) {\n                    return resolve(true);\n                }\n                if ((Time.time() - start) > timeout) {\n                    return resolve(false);\n                }\n                await Time.sleep(100);\n            }\n        });\n    }\n\n\n    function get_image_url($e) {\n        return $e?.src?.trim();\n    }\n\n\n    async function get_task(task_lines) {\n        let task = null;\n        if (task_lines.length > 1) {\n            // task = task_lines[1];\n            task = task_lines.slice(0, 2).join(' ');\n            task = task.replace(/\\s+/g, ' ')?.trim();\n        }\n        else {\n            task = task.join('\\n');\n        }\n        if (!task) {\n            return null;\n        }\n        return task;\n    }\n\n\n    let last_urls_hash = null;\n    function on_task_ready(i=500) {\n        return new Promise(resolve => {\n            let checking = false;\n            const check_interval = setInterval(async () => {\n                if (checking) {\n                    return;\n                }\n                checking = true;\n\n                const task_lines = document.querySelector('.rc-imageselect-instructions')?.innerText?.split('\\n');\n                let task = await get_task(task_lines);\n                if (!task) {\n                    checking = false;\n                    return;\n                }\n\n                const is_hard = (task_lines.length === 3) ? true : false;\n\n                const $cells = document.querySelectorAll('table tr td');\n                if ($cells.length !== 9 && $cells.length !== 16) {\n                    checking = false;\n                    return;\n                }\n\n                const cells = [];\n                const urls = Array($cells.length).fill(null);\n                let background_url = null;\n                let has_secondary_images = false;\n                let i = 0;\n                for (const $e of $cells) {\n                    const $img = $e?.querySelector('img');\n                    if (!$img) {\n                        checking = false;\n                        return;\n                    }\n\n                    const url = get_image_url($img);\n                    if (!url || url === '') {\n                        checking = false;\n                        return;\n                    }\n\n                    if ($img.naturalWidth >= 300) {\n                        background_url = url;\n                    }\n                    else if ($img.naturalWidth == 100) {\n                        urls[i] = url;\n                        has_secondary_images = true;\n                    }\n\n                    cells.push($e);\n                    i++;\n                }\n                if (has_secondary_images) {\n                    background_url = null;\n                }\n\n                const urls_hash = JSON.stringify([background_url, urls]);\n                if (last_urls_hash === urls_hash) {\n                    checking = false;\n                    return;\n                }\n                last_urls_hash = urls_hash;\n\n                clearInterval(check_interval);\n                checking = false;\n                return resolve({task, is_hard, cells, background_url, urls});\n            }, i);\n        });\n    }\n\n\n    function submit() {\n        document.querySelector('#recaptcha-verify-button')?.click();\n    }\n\n\n    function got_solve_incorrect() {\n        const errors = [\n            '.rc-imageselect-incorrect-response',  // try again\n        ];\n        for (const e of errors) {\n            if (document.querySelector(e)?.style['display'] === '') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    function got_solve_error() {\n        // <div aria-live=\"polite\">\n        //     <div class=\"rc-imageselect-error-select-more\" style=\"\" tabindex=\"0\">Please select all matching images.</div>\n        //     <div class=\"rc-imageselect-error-dynamic-more\" style=\"display:none\">Please also check the new images.</div>\n        //     <div class=\"rc-imageselect-error-select-something\" style=\"display:none\">Please select around the object, or reload if there are none.</div>\n        // </div>\n\n        const errors = [\n            '.rc-imageselect-error-select-more',  // select all matching images\n            '.rc-imageselect-error-dynamic-more',  // please also check the new images\n            '.rc-imageselect-error-select-something',  // select around the object or reload\n        ];\n        for (const e of errors) {\n            const $e = document.querySelector(e);\n            if ($e?.style['display'] === '' || $e?.tabIndex === 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    function is_cell_selected($cell) {\n        try {\n            return $cell.classList.contains('rc-imageselect-tileselected');\n        } catch {}\n        return false;\n    }\n\n\n    async function on_widget_frame(settings) {\n        // Check if parent frame marked this frame as visible on screen\n        const is_visible = await BG.exec('Cache.get', {name: 'recaptcha_widget_visible', tab_specific: true});\n        if (is_visible !== true) {\n            return;\n        }\n\n        // Wait if already solved\n        if (is_solved()) {\n            if (!was_solved) {\n                was_solved = true;\n            }\n            return;\n        }\n        was_solved = false;\n        await Time.sleep(500);\n        open_image_frame();\n    }\n\n\n    async function on_image_frame() {\n        // Check if parent frame marked this frame as visible on screen\n        const is_visible = await BG.exec('Cache.get', {name: 'recaptcha_image_visible', tab_specific: true});\n        if (is_visible !== true) {\n            return;\n        }\n\n        if (is_rate_limited()) {\n            console.log('rate limited');\n            return;\n        }\n\n        // Wait if verify button is disabled\n        if (is_solved()) {\n            return;\n        }\n\n        // Incorrect solution\n        if (!was_incorrect && got_solve_incorrect()) {\n            solved_urls = [];\n            was_incorrect = true;\n        }\n        else {\n            was_incorrect = false;\n        }\n\n        // Select more images error\n        if (got_solve_error()) {\n            solved_urls = [];\n            // await BG.exec('reset_recaptcha');\n            return;\n        }\n\n        // Wait for images to load\n        const is_ready = await on_images_ready();\n        if (!is_ready) {\n            // await BG.exec('reset_recaptcha');\n            return;\n        }\n\n        // Wait for task to be available\n        const {task, is_hard, cells, background_url, urls} = await on_task_ready();\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings.enabled || !settings.recaptcha_auto_solve) {\n            return;\n        }\n\n        const n = cells.length == 9 ? 3 : 4;\n\n        const image_urls = [];\n        let grid;\n        let clickable_cells = [];  // Variable number of clickable cells if secondary images appear\n        if (background_url === null) {\n            grid = '1x1';  // Grid len (1x1 for secondary images)\n            for (let i = 0; i < urls.length; i++) {\n                const url = urls[i];\n                const cell = cells[i];\n                if (url && !solved_urls.includes(url)) {\n                    image_urls.push(url);\n                    clickable_cells.push(cell);\n                }\n            }\n        }\n        else {\n            image_urls.push(background_url);\n            grid = `${n}x${n}`;\n            clickable_cells = cells;\n        }\n\n        const solve_start = Time.time();\n\n        // Solve task\n        const {job_id, data} = await NopeCHA.post({\n            captcha_type: IS_DEVELOPMENT ? 'recaptcha_dev' : 'recaptcha',\n            task: task,\n            image_urls: image_urls,\n            grid: grid,\n            key: settings.key,\n        });\n        if (!data) {\n            return;\n        }\n\n        let delay = parseInt(settings.recaptcha_solve_delay_time);\n        delay = delay ? delay : 1000;\n        const delta = settings.recaptcha_solve_delay ? (delay - (Time.time() - solve_start)) : 0;\n        if (delta > 0) {\n            await Time.sleep(delta);\n        }\n\n        // Submit solution\n        let clicks = 0;\n        for (let i = 0; i < data.length; i++) {\n            if (data[i] === false) {\n                continue;\n            }\n            clicks++;\n\n            // Click if not already selected\n            if (!is_cell_selected(clickable_cells[i])) {\n                clickable_cells[i]?.click();\n            }\n        }\n\n        for (const url of urls) {\n            solved_urls.push(url);\n            if (solved_urls.length > 9) {\n                solved_urls.shift();\n            }\n        }\n\n        if ((n === 3 && is_hard && clicks === 0 && await on_images_ready()) || (n === 3 && !is_hard) || n === 4) {\n            await Time.sleep(200);\n            submit();\n        }\n    }\n\n\n    async function check_image_frame_visibility() {\n        const $image_frames = [\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/api2/bframe\"]'),\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/enterprise/bframe\"]'),\n        ];\n        if ($image_frames.length > 0) {\n            for (const $frame of $image_frames) {\n                if (window.getComputedStyle($frame).visibility === 'visible') {\n                    return await BG.exec('Cache.set', {name: 'recaptcha_image_visible', value: true, tab_specific: true});\n                }\n            }\n            await BG.exec('Cache.set', {name: 'recaptcha_image_visible', value: false, tab_specific: true});\n        }\n    }\n\n    async function check_widget_frame_visibility() {\n        const $widget_frames = [\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/api2/anchor\"]'),\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/enterprise/anchor\"]'),\n        ];\n        if ($widget_frames.length > 0) {\n            for (const $frame of $widget_frames) {\n                if (window.getComputedStyle($frame).visibility === 'visible') {\n                    return await BG.exec('Cache.set', {name: 'recaptcha_widget_visible', value: true, tab_specific: true});\n                }\n            }\n            await BG.exec('Cache.set', {name: 'recaptcha_widget_visible', value: false, tab_specific: true});\n        }\n        return false;\n    }\n\n\n    let was_solved = false;\n    let was_incorrect = false;\n    let solved_urls = [];\n\n\n    while (true) {\n        await Time.sleep(1000);\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings || !settings.enabled || settings.recaptcha_solve_method !== 'Image') {\n            continue;\n        }\n\n        const hostname = await Location.hostname();\n        if (settings.disabled_hosts.includes(hostname)) {\n            continue;\n        }\n\n        await check_image_frame_visibility();\n        await check_widget_frame_visibility();\n\n        if (settings.recaptcha_auto_open && is_widget_frame()) {\n            await on_widget_frame(settings);\n        }\n        else if (settings.recaptcha_auto_solve && is_image_frame()) {\n            await on_image_frame();\n        }\n\n        // if (is_invalid_config()) {\n        //     console.log('invalid config');\n        //     window.postMessage({event: 'NOPECHA', status: 'invalid_config'}, '*');\n        //     // return;\n        // }\n        // if (is_rate_limited()) {\n        //     console.log('rate limited');\n        //     window.postMessage({event: 'NOPECHA', status: 'rate_limited'}, '*');\n        //     // return;\n        // }\n    }\n})();\n"
        },
        {
          "name": "recaptcha_fast.js",
          "type": "blob",
          "size": 2.40234375,
          "content": "/**\n * Enables drag select for ReCAPTCHA and faster animations.\n */\n\n(async () => {\n    let $start = null;\n    let is_mousedown = false;\n    let is_selecting = false;\n    function get_parent($e) {\n        let $node = $e;\n        while ($node && !$node.classList?.contains('rc-imageselect-tile')) {\n            $node = $node.parentNode;\n        }\n        return $node;\n    }\n    function toggle_img($e, enabled, include_start=false) {\n        if (!$e) {\n            return;\n        }\n\n        if (!include_start && $start === $e) {\n            return;\n        }\n\n        if (enabled === true && $e.classList.contains('rc-imageselect-tileselected')) {\n            $e.click();\n        }\n        else if (enabled === false && !$e.classList.contains('rc-imageselect-tileselected')) {\n            $e.click();\n        }\n    }\n    document.addEventListener('mousedown', e => {\n        const $e = get_parent(e?.target);\n        if (!$e) {\n            return;\n        }\n        if ($e.classList.contains('rc-imageselect-tileselected')) {\n            is_mousedown = true;\n            is_selecting = true;\n        }\n        else {\n            is_mousedown = true;\n            is_selecting = false;\n        }\n        $start = $e;\n    });\n    document.addEventListener('mouseup', e => {\n        is_mousedown = false;\n        $start = null;\n    });\n    document.addEventListener('mousemove', e => {\n        const $e = get_parent(e?.target);\n        if (is_mousedown) {\n            if ($start !== $e && $start !== null) {\n                toggle_img($start, is_selecting, true);\n            }\n            toggle_img($e, is_selecting);\n        }\n    });\n\n    const SPEED = 2;\n\n    window.addEventListener('load', () => {\n        const sheet = document.body.appendChild(document.createElement('style')).sheet;\n        sheet.insertRule(`.rc-imageselect-table-33, .rc-imageselect-table-42, .rc-imageselect-table-44 {transition-duration: ${1/SPEED}s !important}`, 0);\n        sheet.insertRule(`.rc-imageselect-tile {transition-duration: ${4/SPEED}s !important}`, 1);\n        sheet.insertRule(`.rc-imageselect-dynamic-selected {transition-duration: ${2/SPEED}s !important}`, 2);\n        sheet.insertRule(`.rc-imageselect-progress {transition-duration: ${1/SPEED}s !important}`, 3);\n        sheet.insertRule(`.rc-image-tile-overlay {transition-duration: ${1/SPEED}s !important}`, 4);\n        sheet.insertRule(`#rc-imageselect img {pointer-events: none !important}`, 5);\n    });\n})();\n"
        },
        {
          "name": "recaptcha_speech.js",
          "type": "blob",
          "size": 6.04296875,
          "content": "(async () => {\n    function is_widget_frame() {\n        return document.querySelector('.recaptcha-checkbox') !== null;\n    }\n\n\n    function is_image_frame() {\n        return document.querySelector('.rc-imageselect-instructions') !== null;\n    }\n\n\n    function is_speech_frame() {\n        return document.querySelector('#audio-instructions') !== null || document.querySelector('.rc-doscaptcha-header') !== null;\n    }\n\n\n    function open_image_frame() {\n        document.querySelector('#recaptcha-anchor')?.click();\n    }\n\n\n    function is_solved() {\n        if (got_solve_error()) {\n            return false;\n        }\n        const is_widget_frame_solved = document.querySelector('.recaptcha-checkbox')?.getAttribute('aria-checked') === 'true';\n        const is_image_frame_solved = document.querySelector('#recaptcha-verify-button')?.disabled;\n        return is_widget_frame_solved || is_image_frame_solved;\n    }\n\n\n    function submit() {\n        document.querySelector('#recaptcha-verify-button')?.click();\n    }\n\n\n    function got_solve_error() {\n        return document.querySelector('.rc-doscaptcha-header')?.innerText === 'Try again later';\n    }\n\n\n    async function on_widget_frame(settings) {\n        // Check if parent frame marked this frame as visible on screen\n        const is_visible = await BG.exec('Cache.get', {name: 'recaptcha_widget_visible', tab_specific: true});\n        if (is_visible !== true) {\n            return;\n        }\n\n        // Wait if already solved\n        if (is_solved()) {\n            return;\n        }\n        await Time.sleep(500);\n        open_image_frame();\n    }\n\n\n    async function on_image_frame(settings) {\n        // Check if parent frame marked this frame as visible on screen\n        const is_visible = await BG.exec('Cache.get', {name: 'recaptcha_image_visible', tab_specific: true});\n        if (is_visible !== true) {\n            return;\n        }\n\n        // Wait if already solved\n        if (is_solved()) {\n            return;\n        }\n        // Switch to speech\n        await Time.sleep(500);\n        document.querySelector('#recaptcha-audio-button')?.click();\n    }\n\n\n    async function on_speech_frame(settings) {\n        // Check if parent frame marked this frame as visible on screen\n        const is_visible = await BG.exec('Cache.get', {name: 'recaptcha_image_visible', tab_specific: true});\n        if (is_visible !== true) {\n            return;\n        }\n\n        // Wait if verify button is disabled\n        if (is_solved()) {\n            return;\n        }\n\n        // Try again later error\n        if (got_solve_error()) {\n            // await BG.exec('set_settings', {id: 'solve_method', value: 'image'});\n            // await BG.exec('reset_recaptcha');\n            return;\n        }\n\n        const dl_url = document.querySelector('.rc-audiochallenge-tdownload-link')?.href;\n        const r = fetch(dl_url);\n\n        const src_url = document.querySelector('#audio-source')?.src?.replace('recaptcha.net', 'google.com');\n\n        let lang = document.querySelector('html')?.getAttribute('lang')?.trim();\n        if (!lang || lang.length === 0) {\n            lang = 'en';\n        }\n\n        const solve_start = Time.time();\n\n        const res = await Net.fetch('https://engageub.pythonanywhere.com', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n            body: 'input=' + encodeURIComponent(src_url) + '&lang=' + lang,\n        });\n        document.querySelector('#audio-response').value = res;\n\n        let delay = parseInt(settings.recaptcha_solve_delay_time);\n        delay = delay ? delay : 1000;\n        const delta = settings.recaptcha_solve_delay ? (delay - (Time.time() - solve_start)) : 0;\n        if (delta > 0) {\n            await Time.sleep(delta);\n        }\n\n        submit();\n    }\n\n\n    async function check_image_frame_visibility() {\n        const $image_frames = [\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/api2/bframe\"]'),\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/enterprise/bframe\"]'),\n        ];\n        if ($image_frames.length > 0) {\n            for (const $frame of $image_frames) {\n                if (window.getComputedStyle($frame).visibility === 'visible') {\n                    return await BG.exec('Cache.set', {name: 'recaptcha_image_visible', value: true, tab_specific: true});\n                }\n            }\n            await BG.exec('Cache.set', {name: 'recaptcha_image_visible', value: false, tab_specific: true});\n        }\n    }\n\n    async function check_widget_frame_visibility() {\n        const $widget_frames = [\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/api2/anchor\"]'),\n            ...document.querySelectorAll('iframe[src*=\"/recaptcha/enterprise/anchor\"]'),\n        ];\n        if ($widget_frames.length > 0) {\n            for (const $frame of $widget_frames) {\n                if (window.getComputedStyle($frame).visibility === 'visible') {\n                    return await BG.exec('Cache.set', {name: 'recaptcha_widget_visible', value: true, tab_specific: true});\n                }\n            }\n            await BG.exec('Cache.set', {name: 'recaptcha_widget_visible', value: false, tab_specific: true});\n        }\n        return false;\n    }\n\n\n    while (true) {\n        await Time.sleep(1000);\n\n        const settings = await BG.exec('Settings.get');\n\n        // Using another solve method\n        if (!settings || !settings.enabled || settings.recaptcha_solve_method !== 'Speech') {\n            continue;\n        }\n\n        const hostname = await Location.hostname();\n        if (settings.disabled_hosts.includes(hostname)) {\n            continue;\n        }\n\n        await check_image_frame_visibility();\n        await check_widget_frame_visibility();\n\n        if (settings.recaptcha_auto_open && is_widget_frame()) {\n            await on_widget_frame(settings);\n        }\n        else if (settings.recaptcha_auto_solve && is_image_frame()) {\n            await on_image_frame(settings);\n        }\n        else if (settings.recaptcha_auto_solve && is_speech_frame()) {\n            await on_speech_frame(settings);\n        }\n    }\n})();\n"
        },
        {
          "name": "setup.js",
          "type": "blob",
          "size": 1.529296875,
          "content": "(async () => {\n    function print_html() {\n        try {\n            function wrap(text) {\n                return `<p style='font-family: monospace; font-size: 12px; white-space: pre;'>${text}</p>`\n            }\n\n            const s = [];\n            for (const e of arguments) {\n                s.push(wrap(e));\n            }\n            s.push(wrap('Join us on <a href=\"https://nopecha.com/discord\" target=\"_blank\">Discord</a>'));\n            document.body.innerHTML = s.join('<hr>');\n        } catch (e) {\n            console.log('error print_html', e);\n        }\n    }\n\n    try {\n        if (document.location.hash) {\n            print_html('Importing settings...');\n\n            // Wait for Settings initialization\n            await BG.exec('Settings.get');\n\n            const settings = SettingsManager.import(document.location.hash);\n            console.log('settings', settings);\n            await BG.exec('Settings.update', {settings});\n\n            const url = window.location.href;\n            print_html(\n                `Visiting this URL will import your NopeCHA settings.\\n<a href=\"${url}\">${url}</a>`,\n                `Successfully imported settings.\\n${JSON.stringify(settings, null, 4)}`);\n        }\n        else {\n            print_html(\n                'Invalid URL.\\nPlease set the URL hash and reload the page.',\n                'Example: https://nopecha.com/setup#TESTKEY123');\n        }\n    } catch (e) {\n        console.error(e);\n        print_html('Failed to import settings.\\nPlease verify that your URL is formed properly.');\n    }\n})();\n"
        },
        {
          "name": "textcaptcha.js",
          "type": "blob",
          "size": 5.2578125,
          "content": "(async () => {\n    function is_present(settings) {\n        try {\n            if (settings?.textcaptcha_image_selector && settings?.textcaptcha_input_selector) {\n                const $image = document.querySelector(settings.textcaptcha_image_selector);\n                if (!$image) {\n                    return false;\n                }\n                const $input = document.querySelector(settings.textcaptcha_input_selector);\n                if (!$input || $input.value) {\n                    return false;\n                }\n                return true;\n            }\n        } catch (e) {}\n        return false;\n    }\n\n\n    async function get_image_data(selector) {\n        function get_style_image_url($e) {\n            let bg = $e.style.backgroundImage;\n            if (bg) {\n                const matches = bg.trim().match(/(?!^)\".*?\"/g);\n                if (!matches || matches.length === 0) {\n                    bg = null;\n                }\n                bg = matches[0].replaceAll('\"', '');\n            }\n            return bg;\n        }\n\n        function get_style_image_elem($e) {\n            return new Promise(resolve => {\n                const $img = new Image();\n                $img.onload = () => resolve($img);\n                $img.src = get_style_image_url($e);\n            });\n        }\n\n        async function get_canvas(selector) {\n            const $e = document.querySelector(selector);\n\n            // Canvas\n            if ($e instanceof HTMLCanvasElement) {\n                // console.log('found canvas element', $e);\n                return $e;\n            }\n\n            let $img;\n            if ($e instanceof HTMLImageElement) {\n                // console.log('found image element', $e);\n                $img = $e;\n            }\n            else {\n                // console.log('found background image', $e);\n                $img = await get_style_image_elem($e);\n            }\n\n            if (!$img) {\n                throw Error(`failed to get image element for ${selector}`);\n            }\n\n            const $canvas = document.createElement('canvas');\n            $canvas.width = $img.naturalWidth;\n            $canvas.height = $img.naturalHeight;\n            const ctx = $canvas.getContext('2d');\n            ctx.drawImage($img, 0, 0);\n\n            return $canvas;\n        }\n\n        try {\n            const $canvas = await get_canvas(selector);\n            return $canvas.toDataURL('image/jpeg').split(';base64,')[1];\n        } catch (e) {\n            // console.error('failed to encode image data', e);\n            return null;\n        }\n    }\n\n\n    let last_image_data = null;\n    function on_task_ready(i=500) {\n        return new Promise(resolve => {\n            let checking = false;\n            const check_interval = setInterval(async () => {\n                if (checking) {\n                    return;\n                }\n                checking = true;\n\n                const settings = await BG.exec('Settings.get');\n                if (!settings.textcaptcha_auto_solve) {\n                    checking = false;\n                    return;\n                }\n\n                const image_data = await get_image_data(settings.textcaptcha_image_selector);\n                console.log('image_data', image_data);\n                if (!image_data) {\n                    checking = false;\n                    return;\n                }\n\n                if (last_image_data === image_data) {\n                    checking = false;\n                    return;\n                }\n                last_image_data = image_data;\n\n                clearInterval(check_interval);\n                checking = false;\n                return resolve({image_data});\n            }, i);\n        });\n    }\n\n\n    async function on_present() {\n        const {image_data} = await on_task_ready();\n        // console.log('image_data', image_data);\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings.enabled || !settings.textcaptcha_auto_solve) {\n            return;\n        }\n\n        const solve_start = Time.time();\n\n        // Detect images\n        const {job_id, data} = await NopeCHA.post({\n            captcha_type: IS_DEVELOPMENT ? 'textcaptcha_dev' : 'textcaptcha',\n            image_data: [image_data],\n            key: settings.key,\n        });\n        if (!data) {\n            return;\n        }\n        console.log('data', data);\n\n        let delay = parseInt(settings.textcaptcha_solve_delay_time);\n        delay = delay ? delay : 100;\n        const delta = settings.textcaptcha_solve_delay ? (delay - (Time.time() - solve_start)) : 0;\n        if (delta > 0) {\n            await Time.sleep(delta);\n        }\n\n        // Fill input\n        if (data && data.length > 0) {\n            const $input = document.querySelector(settings.textcaptcha_input_selector);\n            if ($input && !$input.value) {\n                $input.value = data[0];\n            }\n        }\n    }\n\n\n    while (true) {\n        await Time.sleep(1000);\n\n        const settings = await BG.exec('Settings.get');\n        if (!settings || !settings.enabled) {\n            continue;\n        }\n\n        const hostname = await Location.hostname();\n        if (settings.disabled_hosts.includes(hostname)) {\n            continue;\n        }\n\n        if (settings.textcaptcha_auto_solve && is_present(settings)) {\n            await on_present();\n        }\n    }\n})();\n"
        },
        {
          "name": "utils.js",
          "type": "blob",
          "size": 0.466796875,
          "content": "/*******************************\n\nThis file is automatically generated by build.py based on utils.mjs\nIf you need something on utils.js, edit utils.mjs instead\n\n*********************************/\n\nconsole.error(`\nThis file is automatically generated by build.py based on utils.mjs\nIf you need something on utils.js, edit utils.mjs instead\n`)\nthrow `\nThis file is automatically generated by build.py based on utils.mjs\nIf you need something on utils.js, edit utils.mjs instead\n`\n"
        },
        {
          "name": "utils.mjs",
          "type": "blob",
          "size": 8.140625,
          "content": "'use strict';\n\n\n/**\n * Set to true for the following behavior:\n * - Request server to recognize using bleeding-edge models\n * - Reload FunCAPTCHA on verification\n */\nexport const IS_DEVELOPMENT = false;\n\n\n/**\n * Trying to be an Enum but javascript doesn't have enums\n */\nexport class RunningAs {\n    // Background script running on-demand\n    static BACKGROUND = 'BACKGROUND';\n    // Popup specified in manifest as \"action\"\n    static POPUP = 'POPUP';\n    // Content script running in page\n    static CONTENT = 'CONTENT';\n    // (somehow) Standalone run of script running in webpage\n    static WEB = 'WEB';\n}\nObject.freeze(RunningAs);\n\n\nexport const runningAt = (() => {\n    let getBackgroundPage = globalThis?.chrome?.extension?.getBackgroundPage;\n    if (getBackgroundPage){\n        return getBackgroundPage() === window ? RunningAs.BACKGROUND : RunningAs.POPUP;\n    }\n    return globalThis?.chrome?.runtime?.onMessage ? RunningAs.CONTENT : RunningAs.WEB;\n})();\n\n\nexport function deep_copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n\nexport class Util {\n    static CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    static pad_left(s, char, n) {\n        while (`${s}`.length < n) {\n            s = `${char}${s}`;\n        }\n        return s;\n    }\n\n    static capitalize(s) {\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n\n    static parse_int(s, fallback) {\n        if (!s) {\n            s = fallback;\n        }\n        return parseInt(s);\n    }\n\n    static parse_bool(s, fallback) {\n        if (s === 'true') {\n            s = true;\n        }\n        else if (s === 'false') {\n            s = false;\n        }\n        else {\n            s = fallback;\n        }\n        return s;\n    }\n\n    static parse_string(s, fallback) {\n        if (!s) {\n            s = fallback;\n        }\n        return s;\n    }\n\n    static parse_json(s, fallback) {\n        if (!s) {\n            s = fallback;\n        }\n        else {\n            s = JSON.parse(s);\n        }\n        return s;\n    }\n\n    static generate_id(n) {\n        let result = '';\n        for (let i = 0; i < n; i++) {\n            result += Util.CHARS.charAt(Math.floor(Math.random() * Util.CHARS.length));\n        }\n        return result;\n    }\n}\n\n\nexport class Time {\n    static time() {\n        if (!Date.now) {\n            Date.now = () => new Date().getTime();\n        }\n        return Date.now();\n    }\n\n    static date() {\n        return new Date();\n    }\n\n    static sleep(i=1000) {\n        return new Promise(resolve => setTimeout(resolve, i));\n    }\n\n    static async random_sleep(min, max) {\n        const duration = Math.floor(Math.random() * (max - min) + min);\n        return await Time.sleep(duration);\n    }\n\n    static seconds_as_hms(t) {\n        t = Math.max(0, t);\n        const hours = Util.pad_left(Math.floor(t / 3600), '0', 2);\n        t %= 3600;\n        const minutes = Util.pad_left(Math.floor(t / 60), '0', 2);\n        const seconds = Util.pad_left(Math.floor(t % 60), '0', 2);\n        return `${hours}:${minutes}:${seconds}`;\n    }\n\n    static string(d=null) {\n        if (!d) {\n            d = Time.date();\n        }\n        const month = Util.pad_left(d.getMonth() + 1, '0', 2);\n        const date = Util.pad_left(d.getDate(), '0', 2);\n        const year = d.getFullYear();\n        const hours = Util.pad_left(d.getHours() % 12, '0', 2);\n        const minutes = Util.pad_left(d.getMinutes(), '0', 2);\n        const seconds = Util.pad_left(d.getSeconds(), '0', 2);\n        const period = d.getHours() >= 12 ? 'PM' : 'AM';\n        return `${month}/${date}/${year} ${hours}:${minutes}:${seconds} ${period}`;\n    }\n}\n\n\nexport class SettingsManager {\n    static DEFAULT = {\n        version: 15,\n        key: '',\n\n        enabled: true,\n        disabled_hosts: [],\n\n        hcaptcha_auto_open: true,\n        hcaptcha_auto_solve: true,\n        hcaptcha_solve_delay: true,\n        hcaptcha_solve_delay_time: 3000,\n\n        recaptcha_auto_open: true,\n        recaptcha_auto_solve: true,\n        recaptcha_solve_delay: true,\n        recaptcha_solve_delay_time: 2000,\n        recaptcha_solve_method: 'Image',\n\n        funcaptcha_auto_open: true,\n        funcaptcha_auto_solve: true,\n        funcaptcha_solve_delay: true,\n        funcaptcha_solve_delay_time: 1000,\n\n        awscaptcha_auto_open: true,\n        awscaptcha_auto_solve: true,\n        awscaptcha_solve_delay: true,\n        awscaptcha_solve_delay_time: 1000,\n\n        textcaptcha_auto_solve: true,\n        textcaptcha_solve_delay: true,\n        textcaptcha_solve_delay_time: 100,\n        textcaptcha_image_selector: '',\n        textcaptcha_input_selector: '',\n    };\n\n    static ENCODE_FIELDS = {\n        enabled: {parse: Util.parse_bool, encode: encodeURIComponent},\n        disabled_hosts: {parse: Util.parse_json, encode: e => encodeURIComponent(JSON.stringify(e))},\n\n        hcaptcha_auto_open: {parse: Util.parse_bool, encode: encodeURIComponent},\n        hcaptcha_auto_solve: {parse: Util.parse_bool, encode: encodeURIComponent},\n        hcaptcha_solve_delay: {parse: Util.parse_bool, encode: encodeURIComponent},\n        hcaptcha_solve_delay_time: {parse: Util.parse_int, encode: encodeURIComponent},\n\n        recaptcha_auto_open: {parse: Util.parse_bool, encode: encodeURIComponent},\n        recaptcha_auto_solve: {parse: Util.parse_bool, encode: encodeURIComponent},\n        recaptcha_solve_delay: {parse: Util.parse_bool, encode: encodeURIComponent},\n        recaptcha_solve_delay_time: {parse: Util.parse_int, encode: encodeURIComponent},\n        recaptcha_solve_method: {parse: Util.parse_string, encode: encodeURIComponent},\n\n        funcaptcha_auto_open: {parse: Util.parse_bool, encode: encodeURIComponent},\n        funcaptcha_auto_solve: {parse: Util.parse_bool, encode: encodeURIComponent},\n        funcaptcha_solve_delay: {parse: Util.parse_bool, encode: encodeURIComponent},\n        funcaptcha_solve_delay_time: {parse: Util.parse_int, encode: encodeURIComponent},\n\n        awscaptcha_auto_open: {parse: Util.parse_bool, encode: encodeURIComponent},\n        awscaptcha_auto_solve: {parse: Util.parse_bool, encode: encodeURIComponent},\n        awscaptcha_solve_delay: {parse: Util.parse_bool, encode: encodeURIComponent},\n        awscaptcha_solve_delay_time: {parse: Util.parse_int, encode: encodeURIComponent},\n\n        textcaptcha_auto_solve: {parse: Util.parse_bool, encode: encodeURIComponent},\n        textcaptcha_solve_delay: {parse: Util.parse_bool, encode: encodeURIComponent},\n        textcaptcha_solve_delay_time: {parse: Util.parse_int, encode: encodeURIComponent},\n        textcaptcha_image_selector: {parse: Util.parse_string, encode: encodeURIComponent},\n        textcaptcha_input_selector: {parse: Util.parse_string, encode: encodeURIComponent},\n    };\n\n    static IMPORT_URL = 'https://nopecha.com/setup';\n    static DELIMITER = '|';\n\n    static export(settings) {\n        if (!settings.key) {\n            return false;\n        }\n\n        const fields = [settings.key];\n        for (const k in SettingsManager.ENCODE_FIELDS) {\n            fields.push(`${k}=${SettingsManager.ENCODE_FIELDS[k].encode(settings[k])}`);\n        }\n\n        const encoded_hash = `#${fields.join(SettingsManager.DELIMITER)}`;\n\n        return `${SettingsManager.IMPORT_URL}${encoded_hash}`;\n    }\n\n    static import(encoded_hash) {\n        const settings = {};\n\n        // Split by delimiter\n        const fields = encoded_hash.split(SettingsManager.DELIMITER);\n        if (fields.length === 0) {\n            return settings;\n        }\n\n        // Parse key\n        const key = fields.shift();\n        if (key.length <= 1) {\n            console.error('invalid key for settings', key);\n            return settings;\n        }\n        settings.key = key.substring(1);\n\n        // Parse additional fields\n        for (const field of fields) {\n            const kv = field.split('=');\n            const k = kv.shift();\n            const v_raw = kv.join('=');\n\n            if (!(k in SettingsManager.ENCODE_FIELDS)) {\n                console.error('invalid field for settings', field);\n                continue;\n            }\n\n            const v = decodeURIComponent(v_raw);\n            console.log('v', v);\n            settings[k] = SettingsManager.ENCODE_FIELDS[k].parse(v, SettingsManager.DEFAULT[k]);\n        }\n\n        return settings;\n    }\n}\n"
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}