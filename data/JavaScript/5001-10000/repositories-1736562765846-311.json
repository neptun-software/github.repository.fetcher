{
  "metadata": {
    "timestamp": 1736562765846,
    "page": 311,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fabiospampinato/cash",
      "stars": 6975,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.14453125,
          "content": "\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1357421875,
          "content": "*~\n*.err\n*.log\n._*\n.cache\n.fseventsd\n.DocumentRevisions*\n.DS_Store\n.TemporaryItems\n.Trashes\nThumbs.db\n\ndist\nnode_modules\npackage-lock.json\n"
        },
        {
          "name": "bump.json",
          "type": "blob",
          "size": 0.4677734375,
          "content": "{\n  \"changelog\": {\n    \"path\": \"changelog.md\",\n    \"version\": \"### [v[version]](https://github.com/fabiospampinato/cash/releases/tag/[version]) ([version_date])\"\n  },\n  \"tag\": {\n    \"enabled\": false,\n    \"name\": \"[version]\"\n  },\n  \"release\": {\n    \"github\": {\n      \"enabled\": true,\n      \"files\": [\n        \"**/dist/**\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"prebump\": \"npm run prepublishOnly\",\n    \"prerelease\": \"npm run prepublishOnly\",\n    \"postrelease\": \"npm publish\"\n  }\n}\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 32.9794921875,
          "content": "### [v8.1.5](https://github.com/fabiospampinato/cash/releases/tag/8.1.5) (2023-04-13)\n\n- Fixed support for using a selector as context\n- $.hide: ensuring calling it multiple times sequentially works too\n\n### [v8.1.4](https://github.com/fabiospampinato/cash/releases/tag/8.1.4) (2023-03-08)\n\n- Updatd contribution guide\n- Replaced Karma with Playwright, removing most dev dependencies, removing coverage reports, and adding support for Safari\n- Updated dependencies\n- Lowercased readme file\n- Lowercased changelog file\n- $.serialize: avoiding encoding \"%20\" as \"+\", for better alignment with jQuery\n\n### [v8.1.3](https://github.com/fabiospampinato/cash/releases/tag/8.1.3) (2023-01-31)\n\n- $.fn.text: ensuring it reads text from every node in the collection, not just the first one, for better alignment with jQuery\n\n### [v8.1.2](https://github.com/fabiospampinato/cash/releases/tag/8.1.2) (2022-11-18)\n\n- Migration guide: mentioning $.fn.css as a potential workaround for ignoring the effects of CSS transforms\n- $.fn.html: ensuring script elements are executed, to better align with jQuery\n- Switched to a new bundler, minipacco\n- Deleted most development dependencies\n- Simplified significantly partial compilation\n- Ensuring selectors contains escaped dots are handled correctly\n\n### [v8.1.1](https://github.com/fabiospampinato/cash/releases/tag/8.1.1) (2022-02-16)\n\n- Ensuring the proper types for iteration are provided\n- Ensuring $.fn.find works with document fragments too\n- Ensuring the \"delegateProperty\" is attached to events\n- More reliably using \"getElementById\", only if the context node actually supports it\n- Ensuring that before inserting a node before/after the html node the html node is removed from the DOM\n\n### [v8.1.0](https://github.com/fabiospampinato/cash/releases/tag/8.1.0) (2020-09-12)\n\n- Added `$.isPlainObject`\n- $.each: added support for iterating over objects\n- $.extend: added support for extending deeply\n- Readme: updated dimensions\n- Updated changelog template\n\n### [v8.0.0](https://github.com/fabiospampinato/cash/releases/tag/8.0.0) (2020-06-20)\n\n- Improved alignment with jQuery regarding handling of non-bubbling events significantly\n\n### [v7.0.4](https://github.com/fabiospampinato/cash/releases/tag/7.0.4) (2020-06-19)\n\n- Ensuring unusual but valid simple selectors are handled properly\n\n### [v7.0.3](https://github.com/fabiospampinato/cash/releases/tag/7.0.3) (2020-05-31)\n\n- Updated \"EleLoose\" type\n\n### v7.0.2 (2020-05-30)\n\n- Readme: updated npm installation command\n- Updated the \"EleLoose\" TypeScript type ensuring it isn't evaluated as \"never\"\n\n### [v7.0.1](https://github.com/fabiospampinato/cash/releases/tag/7.0.1) (2020-04-15)\n\n- $.fn.css: added support for retrieving properties of disconnected nodes\n\n### [v7.0.0](https://github.com/fabiospampinato/cash/releases/tag/7.0.0) (2020-03-31)\n\n- focus|blur|mouseenter|mouseleave: ensuring namespaces are handled properly\n- focus|blur|mouseenter|mouseleave: aligned behavior more with jQuery\n- focus|blur|mouseenter|mouseleave: ensuring natively triggered events are handled properly\n- Migration guide: mentioning native non-bubbling events\n\n### [v6.0.2](https://github.com/fabiospampinato/cash/releases/tag/6.0.2) (2020-02-15)\n\n- Readme: improved comparison with jQuery, fixing some wrong/unfair comparisons/statements\n- Migration guide: mentioning sort order\n- $.fn.ready: ensuring the callback is called asynchronously and errors are not silenced\n\n### [v6.0.1](https://github.com/fabiospampinato/cash/releases/tag/6.0.1) (2020-01-05)\n\n- Ensuring events work with Document and Window objects\n- Ensuring \"event.data\" is setted reliably\n\n### [v6.0.0](https://github.com/fabiospampinato/cash/releases/tag/6.0.0) (2020-01-05)\n\n##### Removed Features\n\n- $.camelCase|matches|isString|prefixedProp: no longer exposing these methods, aligning with jQuery\n\n##### New Features\n\n- $.fn.nextUntil|prevUntil|parentsUntil: implemented these methods\n- $.fn.detach|remove: added support for an optional \"selector\" argument\n- $.fn.on|one: added support for an optional \"data\" argument\n- Set-up test coverage (currently at ~99%) reporting to coveralls.io\n- Migration guide: major update\n\n##### Bug Fixes\n\n- $.extend: aligned more with jQuery when called with zero or one argument\n- $.fn.before|after|append|prepend|insertBefore|insertAfter|appendTo|prependTo: ensuring cloned scripts don't get executed\n- $.fn.contents: ensuring template elements are supported\n- $.fn.css: ensuring \"grid-*\" properties don't get the \"px\" suffix appended to their values when they are not supposed to\n- $.fn.data: doing nothing when trying to set values to undefined\n- $.fn.data: ensuring strings containing leading/trailing whitespace aren't parsed as JSON\n- $.fn.get|eq: ensuring string indexes are supported\n- $.fn.map: ensuring callbacks that return an array of elements are supported too\n- $.fn.offset|offsetParent|position: rewritten to much more closely match jQuery's implementation\n- $.fn.on|one|off: ensuring namespaces-only events are ignored\n- $.fn.on|one|off: ensuring they don't throw when receiving a falsy callback\n- $.fn.on|one: ensuring these methods are chainable even when receiving falsy callbacks\n- $.fn.prop|removeProp: mapping special HTML attributes into their equivalent DOM properties (e.g. \"for\" -> \"htmlFor\")\n- $.fn.ready: ensuring exceptions are always caught, so they can't crash the app\n- $.fn.serialize: normalizing newlines\n- $.fn.trigger: testing that non-nil falsy values are passed correctly\n- $.fn.unwrap: ensuring immediate children of the body don't get unwrapped\n- $.fn.val: ensuring checkboxes and radios can be set properly\n- $.fn.val: ensuring non-string values are supported\n- $.fn.val|html: more reliably detecting when being called with no arguments\n- $.fn.width|height|innerWidth|innerHeight|outerWidth|outerHeight: ensuring document objects are supported too\n- $.fn.width|height|innerWidth|innerHeight|outerWidth|outerHeight: ensuring they return the right value for the Window object\n- $.fn.wrapAll: ensuring elements aren't cloned unnecessarely\n- $.parseHTML: ensuring whitespace around a single HTML tag is preserved\n- Ensuring empty selectors don't throw an error\n- Collections containing non-element objects:\n  - $.fn.addClass|removeClass|toggleClass: ensuring it doesn't throw with collections containing non-elements\n  - $.fn.attr: ensuring a collection containing non-element objects doesn't cause an error to be thrown\n  - $.fn.before|after|append|prepend|insertBefore|insertAfter|appendTo|prependTo: ensuring non-element nodes are accounted for properly\n  - $.fn.hasClass: ensuring a collection containing non-element objects doesn't cause an error to be thrown\n  - $.fn.hide|show|toggle: ensuring a collection containing non-element objects doesn't cause an error to be thrown\n  - $.fn.html: ensuring collections containing non-element objects are supported\n  - $.fn.not: ensuring non-element nodes are excluded\n  - $.fn.on|off: ensuring non-element objects in the collection are ignored\n  - $.fn.removeAttr: ensuring a collection containing non-element objects doesn't cause an error to be thrown\n  - $.fn.text: improved support of collections containing non-elements objects\n\n### [v5.0.0](https://github.com/fabiospampinato/cash/releases/tag/5.0.0) (2019-12-17)\n\n- Dropped support for IE10\n- $.fn.hasClass: ensuring it always returns a boolean\n- $.fn.off: accepting also an events map as its only argument\n- $.fn.show|toggle: restoring custom display values\n- $.fn.before|after|append|prepend|insertBefore|insertAfter|appendTo|prependTo: ensuring multiple nodes are inserted in the correct order\n- Ensuring attached events never get forgotten\n- Ensuring script tags are executed even if they have a \"src\" attribute, and without using `eval`\n- Ensuring the order of event namespaces doesn't matter\n- Squeezed some more bytes out of the bundle (~4%) and improved code style consistency\n- Squeezed some more bytes out of the bundle (~1.5%), bringing back the minified and gzipped size below 5kb\n\n### [v4.1.5](https://github.com/fabiospampinato/cash/releases/tag/4.1.5) (2019-09-06)\n\n- $.fn.val: ensuring it works with \"input[type=file][multiple]\" elements\n- Migration guide: mentioning how $.fn.data stores values\n\n### [v4.1.4](https://github.com/fabiospampinato/cash/releases/tag/4.1.4) (2019-08-05)\n\n- $.fn.get: improved types\n- TypeScript: made types a little more forgiving\n- TypeScript: improved collections index signature\n- TypeScript: improved support for props/methods available only in specific HTML nodes\n- Added a guide for extending Cash\n\n### [v4.1.3](https://github.com/fabiospampinato/cash/releases/tag/4.1.3) (2019-07-13)\n\n- Ensuring Cash can be bundled correctly via webpack\n- $.fn.toggle: ensuring each element is toggled independently\n- TypeScript: ensuring some useful internal types are exported\n- TypeScript: made types a little more forgiving\n\n### [v4.1.2](https://github.com/fabiospampinato/cash/releases/tag/4.1.2) (2019-05-16)\n\n- Avoiding publishing unnecessary files to NPM\n\n### [v4.1.1](https://github.com/fabiospampinato/cash/releases/tag/4.1.1) (2019-05-13)\n\n- Raising bundle size limit to 5.5kB\n- Test: replaced iOS 9.3 with iOS 11.0\n- Test: using setAttribute instead of the dataset API\n- Migration guide: mentioning the `:scope` CSS pseudo-class\n- Migration guide: mentioning inserting plain text\n- TypeScript: typing events more loosely\n- TypeScript: typing collection elements more loosely\n\n### [v4.1.0](https://github.com/fabiospampinato/cash/releases/tag/4.1.0) (2019-05-12)\n\n- Added $.isWindow\n- Made the TypeScript type system stricter\n- $.guid: ensuring it's properly exported\n- $.fn.siblings: ensuring it supports multi-element collections\n- $.fn.empty: ensuring it supports multi-element collections\n- $.fn.attr: doing nothing when the value equals undefined\n\n### [v4.0.0](https://github.com/fabiospampinato/cash/releases/tag/4.0.0) (2019-05-08)\n\n- Removed `$.fn.removeData`\n- Removed `$.hasData`\n- `$.fn.data`: removed caching mechanism\n- `$.fn.data`: added a missing TypeScript method overload\n\n### [v3.2.0](https://github.com/fabiospampinato/cash/releases/tag/3.2.0) (2019-04-30)\n\n- Readme: updated sizes\n- $.fn.off: added support for removing delegated handlers\n\n### [v3.1.0](https://github.com/fabiospampinato/cash/releases/tag/3.1.0) (2019-03-22)\n\n- Improved support for running selectors inside documents\n- Ensuring Cash collections are iterable\n- Added an extra reference implementation for shorthand event methods\n- Added an extra reference implementation for `$.getScript`\n- Readme: mentioning the extra methods\n\n### [v3.0.0](https://github.com/fabiospampinato/cash/releases/tag/3.0.0) (2019-03-17)\n\n- Library rewritten in TypeScript\n- Bundle TypeScript typings (no need for @types/cash, which is now obsolete)\n- Added a changelog\n- Migration guide: mention the `zoom` property\n- Readme: improved description of the optional context argument\n- Ensure valid TypeScript types are generated\n- Ensure build files are updated when bumping the version\n\n### v3.0.0-beta.3 (2018-12-06)\n\n- Fixed export on the ESM build\n\n### v3.0.0-beta.2 (2018-11-21)\n\n- Renamed some \"private\" variables\n- Travis: avoiding caching `node_modules`\n- Test: improved tests regarding event delegating\n- Migration guide: added a section about events\n- Moved \"@types/*\" to \"dependencies\"\n- Replaced tabs with spaces\n- $.fn.trigger: triggering focus/blur natively\n- Event delegation: ensuring events that do not bubble (focus/blur/mouseenter/mouseleave) are still usable\n- Test: renamed some tests\n- Event delegation: ensuring `event.currentTarget` points to the right element\n- Migration guide: added a section about computing the dimensions of hidden elements\n- Fixed support for `event.currentTarget`\n- Migration guide: added a section about parsing script tags\n- Generalized `insertElement` to support a custom prepend target\n- Evaluating the content of `script` tags when attaching them to the DOM\n- Migration guide: added a `loadScript` function\n- find: improved resilience against text/comment/etc. nodes\n- $.fn.trigger: using `MouseEvents` when appropriate\n- evalScripts: improved browsers support\n- Improved support for `event.currentTarget`\n\n### v3.0.0-beta.1 (2018-10-27)\n\n- Merge branch 'master' of github.com:kenwheeler/cash\n- Updated Karma configuration\n- $.fn.hasClass: ensuring it supports falsy values\n- $.matches: added back support for vendor-prefixed methods\n- Updated test suite\n- $.fn.val: improved support for old-ish browsers\n- Karma: picking versions relative to `latest`, when possible\n- Readme: ensuring `Cash` is always title-cased\n- Added a `filtered` utility\n- $.fn.children: cleaner implementation\n- $.fn.closest: faster implementation\n- $.fn.next|parent|prev|siblings: added support for an optional selector\n- pluck: added an optional `deep` parameter\n- $.fn.parents: much cleaner implementation\n- Added `$.fn.prevAll`\n- Added `$.fn.nextAll`\n- Updated readme\n- Added a \"Migration Guide\"\n- Added `$.fn.hide|show|toggle`\n- Added `$.fn.unwrap|wrap|wrapAll|wrapInner`\n\n### v3.0.0-beta.0 (2018-10-26)\n\n- Test: added Firefox to Karma\n- Rewritten test suite\n- TypeScript: updated compiler options\n- $.fn.hasClass: aligned more with jQuery\n- $.camelCase: aligned more with jQuery\n- $.fn.extend: fixed support for defining plugins with it\n- computeStyle: check if a property is actually passed\n- computeStyle: returning `undefined` for unset CSS variables\n- Added `@types/node` as a dev dependency\n- camelCase: removed description\n- $.fn.each: improved performance\n- $.matches: removed support for older browsers\n- Travis: addded bundlesize\n- $.fn.prev|next: retrieving all previous/next elements\n- Test: ensuring `$.fn.replaceWith` and `$.fn.replaceAll` support multiple elements\n- Test: ensuring that `$.fn.data` supports more data types\n- $.fn.replaceWith: much cleaner implementation\n- $.fn.hasClass: much cleaner implementation\n- Added a `pluck` utility\n- $.fn.prev|next|parent: much cleaner implementation\n- $.fn.val: cleaner implementation\n- Simplified some events-related helpers\n- Creating one fewer div element\n- unique: improved performance\n- Updated logo\n- Readme: updated comparison tables\n- Added configuration for `bump`\n\n### [v2.3.9](https://github.com/fabiospampinato/cash/releases/tag/2.3.9) (2018-10-21)\n\n- Changed files extensions to `ts`\n- $.parseHTML: fixed a regression regarding non-browser environments\n\n### [v2.3.8](https://github.com/fabiospampinato/cash/releases/tag/2.3.8) (2018-10-20)\n\n- Updated some dependencies\n- Test: added `travis_retry` to tests with SauceLabs\n- Ignored package-lock.json\n- $.fn.val: ensuring when `null` is passed the value is cleared\n- Test: updated Travis CI configuration\n- Updated some dependencies\n- Test: updated `height` test to better support browsers returning floating values\n- Test: updated Karma configuration\n- $.fn.val: properly handling `null`\n- $.fn.append|prepend: ensuring it doesn't throw when passed `undefined`\n- $.parseHTML: added support for malformed single-tags\n- $.parseHTML: added support for parsing thead/tbody/tfoot/tr/td/th elements\n- Test: removed the \" Passed!\" suffix from messages\n- Test: fixed some malformed HTML\n\n### [v2.3.7](https://github.com/fabiospampinato/cash/releases/tag/2.3.7) (2018-10-14)\n\n- Added cross-platform tests with SauceLabs\n- Test only against node LTS\n- Test: use IE11 on Windows 8.1\n- Added a `test:karma:sauce` script\n- Added a `prepublish` script\n- Added some issue templates\n- Readme: added a \"Contributing\" section\n- Renamed `prepublish` script to `prepublishOnly`\n- Ensuring `$.parseHTML` always preserves the content of nodes\n\n### [v2.3.6](https://github.com/fabiospampinato/cash/releases/tag/2.3.6) (2018-10-03)\n\n- Merge pull request #201 from limonte/patch-1\n- chore(tests): bump qunit to latest\n- Merge pull request #202 from limonte/upgrade-qunit\n- CI: set up Karma test runner + Travis\n- Readme: removed travis-ci badge\n- Coding-style normalization\n- Added a `test:karma` script\n- Test: avoiding passing malformed html to `$.parseHTML`\n- Test: ensuring there are no syntax errors on IE11\n- Readme: added a \"License\" section\n- Readme: added a \"Thanks\" section\n- Optimize .empty(), use removeChild() instead of .innerHTML = ''\n- `$.fn.empty`: updated code style\n\n### [v2.3.5](https://github.com/fabiospampinato/cash/releases/tag/2.3.5) (2018-09-08)\n\n- Improved support for Node.js\n\n### v2.3.4 (2018-09-07)\n\n- Moved `pacco` to `devDependencies`\n\n### [v2.3.3](https://github.com/fabiospampinato/cash/releases/tag/2.3.3) (2018-07-09)\n\n- using the provided context when selecting by id\n- added support for using a cash object as the context\n- Improved readme\n\n### [v2.3.2](https://github.com/fabiospampinato/cash/releases/tag/2.3.2) (2018-07-09)\n\n- Added a logo\n- Ensuring `$.fn.replaceWith` and `$.fn.replaceAll` work with multiple targets\n- $.fn.val: ensuring setting multiple values on a `select[multiple]` works\n- Added some tests\n\n### [v2.3.1](https://github.com/fabiospampinato/cash/releases/tag/2.3.1) (2018-07-05)\n\n- Added support for `window` to dimensions-related methods\n\n### [v2.3.0](https://github.com/fabiospampinato/cash/releases/tag/2.3.0) (2018-07-05)\n\n- Added a `$.fn.contents` method\n\n### [v2.2.1](https://github.com/fabiospampinato/cash/releases/tag/2.2.1) (2018-06-16)\n\n- Ensuring a cash collection gets printed as array-like in Chrome\n\n### [v2.2.0](https://github.com/fabiospampinato/cash/releases/tag/2.2.0) (2018-06-10)\n\n- Improved `test:jquery` script\n- Added `$.hasData`\n- $.fn.serialize: ensuring elements have a name\n- $.fn.serialize: ensuring empty string values are included\n- getValueSelectMultiple: checking for disabled options and disabled parent optgroups\n- $.fn.width|height: ensuring only element nodes are considered\n- computeStyle: ensuring only element nodes are considered\n- $.fn.css: skipping setting unsupported properties\n- $.fn.css: ensuring only element nodes are considered\n- $.parseHTML: ensuring it doesn't throw when non-string values are passed to it\n- $.parseHTML: returning an array instead of a `NodeList`\n- $.fn.attr: returning `undefined` instead of `null` for missing attributes\n- $.fn.attr: removing the attribute when setting a value of `null`\n- $.fn.removeAttr: added support for passing a space-separated string of attributes\n- $.fn.css: added support for CSS variables\n- $.fn.detach: avoding throwing an error when the parent node is missing\n- getData: some minor changes\n- $.fn.data: added support for getting the entire data object\n- Test: added some tests for `$.fn.before` and `$.fn.after`\n- $.fn.before|prepend|append|after: added support for inserting multiple contents\n- $.fn.after|prependTo: fixed ordering\n- $.fn.serialize: skipping inputs of type `image`\n- $.fn.serialize: ensuring multiple forms can be serialized at once\n- $.fn.ready: passing `cash` as the first argument to the callback\n- getSuffixedValue: added back support for `animationIterationCount`\n- $.fn.after|prependTo: avoiding mutating passed objects\n\n### [v2.1.8](https://github.com/fabiospampinato/cash/releases/tag/2.1.8) (2018-06-10)\n\n- Updated some dependencies\n- $.fn.on: calling `preventDefault` and `stopPropagation` on the event if the handler returns `false`\n- Added a `test:jquery` script for running the jQuery test suite with cash\n\n### [v2.1.7](https://github.com/fabiospampinato/cash/releases/tag/2.1.7) (2018-05-28)\n\n- Added some more explicit `@require` statements\n- Added a script for rendering the dependencies graph\n- Added an ESM build\n\n### [v2.1.6](https://github.com/fabiospampinato/cash/releases/tag/2.1.6) (2018-05-19)\n\n- Events: passing the actual target element as `this` for delegated events\n\n### [v2.1.5](https://github.com/fabiospampinato/cash/releases/tag/2.1.5) (2018-05-16)\n\n- $.fn.removeClass: fixed attribute resetting\n\n### v2.1.4 (2018-05-14)\n\n- Updated jsDelivr URL\n- $.fn.trigger: events are now cancelable\n\n### [v2.1.3](https://github.com/fabiospampinato/cash/releases/tag/2.1.3) (2018-05-12)\n\n- Merge pull request #184 from fabiospampinato/master\n- $.fn.width|height: fixed a bug with Firefox\n- Dropped IE9 support\n- Assuming getAttribute/setAttribute/remoteAttribute APIs are available\n- Added a `test:watch` script\n- Explicitly compile for IE10+\n- Switching from UglifyJS to Google Closure Compiler\n- Events: removed jQuery-like methods: isDefaultPrevented/isPropagationStopped/isImmediatePropagationStopped\n- Events: avoiding using `get_data` for the cache\n- $.fn.filter: without a selector returns an empty collection\n- $.fn.index: optimized\n- getPrefixedProp: fixed caching logic\n- Major cleanup and bytes squeezing\n- Readme: updated `fn.has` documentation\n- Readme: fixed a typo\n- Readme: improved wording\n- Updated cash sizes\n- Updated partial builds\n\n### v2.1.2 (2018-05-11)\n\n- Added some alternative configurations for pacco\n- Aligned `$.fn.prop` with jQuery's\n- Aligned `$.fn.removeClass` with jQuery's\n- Event delegation: handling the removal of the target from the DOM\n\n### v2.1.1 (2018-05-03)\n\n- $.parseHTML: added a todo\n- $.fn.filter: optimized\n- $.fn.map: optimized\n- $.fn.find: optimized\n- Minor style changes\n- Aligned `$.fn.removeData` with jQuery's\n\n### v2.1.0 (2018-04-12)\n\n- Aligned `$.fn.each` with jQuery's\n- Aligned `$.fn.map` with jQuery's\n- Aligned `$.fn.filter` with jQuery's\n- $.fn.height|width: setting to each element in the collection\n- $.fn.on: renamed `delegate` to `selector`\n- Aligned `$.val` with jQuery's\n- Aligned `$.fn.data` with jQuery's\n- $.fn.css: automatically adding the `px` suffix when necessary\n- Readme: updated minified + gzip size\n- $.fn.height: fixed\n- Aligned `$.fn.width|height` with jQuery's\n- Added support for namespaced events\n- $.fn.trigger: ensuring all namespaces match\n- Adding some methods to events: isDefaultPrevented, isPropagationStopped, isImmediatePropagationStopped\n\n### v2.0.0 (2018-04-08)\n\n- Added a `guid`\n- $.fn.trigger: added support for triggering already-made events\n- $.fn.on|one|off: added support for multiple events\n- Readme: documented `$.guid`\n- Readme: updated `$.fn.trigger` documentation\n- Readme: updated `$.fn.on|one|off` documentation\n- Events: removing jQuery-like namespaces automatically\n- Added a `$.fn.slice` method\n- $.fn.height|width: added support for setting\n- Renamed `Init` to `Cash`\n- Readme: updated `$.fn.addClass|removeClass`\n- Readme: updated `$.fn.filter`\n- Readme: updated `$.fn.not`\n- Improved support for empty objects, without throwing errors\n- Ensuring eventCache is properly cleared\n- $.fn.off: added support for removing all handlers\n- $.fn.remove: removing also all events\n- Added a `$.fn.detach` method\n- Added a `$.contains` utility\n- Added a `$.fn.replaceWith` method\n- Added a `$.fn.replaceAll` method\n- Removed event un-namespacing\n- Added support for removing wrapped event handlers\n- Added support for removing handlers attached with `.one`\n- $.fn.one: ensuring `callback.guid` is set\n- Passing data as an argument\n- Readme: updated links\n- Renamed `Global Methods` to `Cash Methods`\n- hasClass: properly escaping regex special characters\n- $.fn.offsetParent: ensuring it doesn't throw with an empty collection\n- $.fn.removeData: fixed\n- removeData: fixed a variable name\n- initFragment: passing a string to `doc.implementation.createHTMLDocument`, as per spec\n- Added some tests\n- Requiring pacco@^1.1.0\n- Explicitly compiling for IE >= 9\n- Updated a todo\n\n### [v1.3.7](https://github.com/fabiospampinato/cash/releases/tag/1.3.7) (2018-01-17)\n\n### [v1.3.6](https://github.com/fabiospampinato/cash/releases/tag/1.3.6) (2018-01-11)\n\n- Test fixes\n- Argument required for `createHTMLDocument`\n- fix: attributes/addClass, the wrong checking on class-name inclusion\n- fix: remove `spacedName` from `addClass` interface\n- Added Travis CI support for modern node versions\n- Merge pull request #160 from amilajack/patch-1\n- Update jsDelivr links\n- Merge pull request #168 from LukasDrgon/patch-1\n- Merge pull request #173 from DanielRuf/patch-travis\n- Merge pull request #171 from DanielRuf/patch-readme\n- Merge pull request #157 from AugustMiller/am-createdocument-argument\n- Merge branch 'pr/153' (Async DOM Ready)\n- Merge branch 'pr/158'\n- Compiled className fix\n- Merge pull request #141 from vivekimsit/add-gitattribute\n\n### [v1.3.5](https://github.com/fabiospampinato/cash/releases/tag/1.3.5) (2016-10-12)\n\n- Normalize all text files in the repo\n- Serialize elements outside form as well\n- Fix for #143\n- fn in should always be called asynchronously\n- Merge PR #105 'parseHTML-fix' of https://github.com/softwarespot/cash into 1.3.5\n- Merge PR #116 \"Form Cleanup\"\n- Merge PR #140 \"Form Cleanup\"\n- Merge PR #123 \"Filter Fix\"\n- Merge PR #124 `isFunction` fix\n- Merge PR #133 \"Traversal Fixes\"\n- Merge PR #136 'semicolon-iife' of https://github.com/vivekimsit/cash into 1.3.5\n- Merge PR #138 'constructor-fix' into 1.3.5\n- Merge PR #145 \"event-off-fix\"\n\n### [v1.3.4](https://github.com/fabiospampinato/cash/releases/tag/1.3.4) (2016-06-28)\n\n### [v1.3.3](https://github.com/fabiospampinato/cash/releases/tag/1.3.3) (2016-05-20)\n\n- Filter fix\n\n### [v1.3.2](https://github.com/fabiospampinato/cash/releases/tag/1.3.2) (2016-05-18)\n\n### [v1.3.1](https://github.com/fabiospampinato/cash/releases/tag/1.3.1) (2016-05-16)\n\n- CDN version links\n\n### [v1.3.0](https://github.com/fabiospampinato/cash/releases/tag/1.3.0) (2016-05-04)\n\n- jQuery 3 comparison\n- Unified compare function for `$.fn.is` and `$.fn.not` to support looking for elements\n- Fixed `$.fn.siblings` to return a Collection instead of Array.\n- Fix for `$.fn.has` to return collection instead of Array and support for checking for an element instead of a string selector.\n- Use `$.fn.find` with an element instead of selector.\n- Merge branch 'master' of https://github.com/kenwheeler/cash\n- Fix for `$.fn.closest` to return correct results, `$.fn.filter` can now filter by Elements\n- Fix for #135: `$.fn.closest()` callstack exceeded\n- Use `Object.defineProperty` to attach the `constructor` property to the `cash.fn` prototype. #134\n- merge PR #110\n- merge PR #111\n\n### v1.2.3 (2016-??-??)\n\n- Saving bytes\n- [ remove class ] - add test for removing all classes\n- [ remove all classes ] - add an option for removing all classes - supply no arguments to .removeClass() - update readme\n\n### v1.2.2 (2016-??-??)\n\n- `$.fn.filter` fix\n- merge PR #96\n- [ add / remove / toggle / has class ] - add checks for integers and falsey values - closer to jQuery - was having script-killing errors when `.addClass(\"\")`\n\n### [v1.2.1](https://github.com/fabiospampinato/cash/releases/tag/1.2.1) (2016-04-25)\n\n- [ attr() ] - fix to return collection for multi-add\n- [ update ] - improve based on @shshaw comment https://github.com/kenwheeler/cash/pull/111#issuecomment-216283171\n- Cleanup and @rwwagner90 fix\n- CloudFlare CDN\n- Clarified intro paragraph\n- Updated parseHTML which fixes the base URL issue\n- Fix conflict\n- Merge branch 'kenwheeler-master'\n- Added NPM reference\n- Bower.json fix\n- Usage updates\n- Merge pull request #102 from kenwheeler/npm-bower-fixes\n- Update README.md\n- Fix example for $.isArray\n- Merge pull request #81 from shvelo/patch-1\n- Add data to trigger event\n- Increment test values\n- Update README to state approximate size\n- Merge pull request #84 from joezimjs/master\n- Browser Support Clarification\n- Size comparison\n- Latest CDN version\n- Heading comment\n- Set multiple attributes &amp; properties\n- Merge pull request #87 from kenwheeler/attr-obj\n- added index to docs\n- updated utilities &amp; type checking links\n- Merge pull request #89 from devinargenta/docs/index-added\n- Size alignment\n- Documentation for `$.fn.offet`, `$.fn.offetParent` and `$.fn.position`\n- Documentation for `$.fn.removeProp`\n- Documentation for setting properties\n- Utility alphabetical order\n- Clarifying $.fn prototype\n- Method index tables ( #88 )\n\n### [v1.2.0](https://github.com/fabiospampinato/cash/releases/tag/1.2.0) (2016-04-01)\n\n- Merge pull request #1 from shshaw/selector\n- Merge pull request #70 from shshaw/master\n- Size updates\n- Keep CDN files at last version until the CDNs have had a chance to update.\n- Simplified `on`\n- Updated README\n- Merge pull request #115 from kenwheeler/1.3.0\n\n### [v1.1.0](https://github.com/fabiospampinato/cash/releases/tag/1.1.0) (2016-04-12)\n\n- Fixed css() return value for object type input\n- Merge pull request #58 from kornalius/master\n- Update README.md\n- Fixing length to 0 when element doesn't exist\n- Merge pull request #64 from defrag/fix/empty-item-length\n- Merge pull request #65 from defrag/fix/suite-fix\n- Improve `fn.find`\n- `return false` breaks `.each`\n- `fn.children` and `fn.is` improvements\n- Smaller file size &amp; consistency\n- Improve `append`, `prepend`\n- Clone entire collections\n- Added `.map`\n- README fixes\n- Simplification of manipulations\n- Fixed chainability of `remove`\n- Traversal cleanup\n- Unified collection functions\n- Simplified class manipulation\n- Form fixes\n- Tiny utils added to `cash`\n- Trim down by using local `each`\n- `add`, `push` and `splice`\n- `toggleClass`\n- Trimming\n- Multi-parameter extend\n- Merge pull request #66 from shshaw/master\n- Merge remote-tracking branch 'kenwheeler/master'\n- Trimmed `index`\n- Direct `map`\n- Trimmed `outerWidth` &amp; `outerHeight`\n- Cleaned up events\n- Form serialize fix\n- Merge pull request #67 from shshaw/master\n- Merge remote-tracking branch 'kenwheeler/master'\n- `after`, `before` &amp; `insert...`\n- Updated hints\n- Simplified `outerWidth` &amp; `outerHeight`\n- Prefixed CSS Properties\n- Selector performance\n- Form test update\n- Merge pull request #69 from shshaw/better-selector\n- Merge remote-tracking branch 'kenwheeler/master' into selector\n- Even smaller `dimensions`\n- `event` fixes\n- `window` fixes\n- Clear `_eventCache` when all removed\n- Private `data` store\n- Replace `_eventCache`\n- `.one` support\n- `offset`\n\n### [v1.0.0](https://github.com/fabiospampinato/cash/releases/tag/1.0.0) (2015-02-06)\n\n- Available in npm as cash-dom now\n- Adding `is` documentation\n- Add UMD wrapper\n- Store references for better minifying\n- Fill out package.json\n- Clean up README\n- Merge pull request #40 from hackbone/umd\n- Conform to Airbnb JavaScript style guide\n- Arbitrary stylistic changes for readability\n- Minify dimensions better\n- Minify events better and cleanup\n- Alias slice and filter for minifying\n- fn reference for minifying\n- Clean up gulpfile and remove beautify\n- Build lib\n- Stop using arguments object when unnecessary for better minifying\n- Switch to ES6 with 6to5 and update linting\n- Return target in extend, improve minifying\n- Build lib\n- Remove \"use strict\" due to Safari HTMLCollection bug\n- Merge branch 'master' of https://github.com/thejameskyle/cash into thejameskyle-master\n- Removing strict from list\n- Merge branch 'thejameskyle-master'\n\n### [v0.0.3](https://github.com/fabiospampinato/cash/releases/tag/0.0.3) (2014-11-09)\n\n- Update README.md\n- Merge pull request #9 from richguan/patch-1\n- Merge pull request #7 from Fender123/master\n- Committing the `add` feature in response to #16\n- create tests for .add\n- allowing selector string input\n- fixing tests for selector string\n- Refactoring the $.fn.add method based on Ken's feedback, also update documentation and tests\n- Merge pull request #20 from simeydotme/master\n- add tests for parents, closest\n- updating documentation for closest and parents\n- change parents to closest and create new parents\n- Merge branch 'master' of https://github.com/simeydotme/cash\n- improve performance\n- test that HTML is last item in collection\n- Merge pull request #23 from simeydotme/master\n- Merge pull request #22 from vivekimsit/feature-closest-method\n- Remove deprecated JSHint options\n- `package.json` will always be 2 spaces\n- Merge pull request #26 from arthurvr/patch-2\n- Merge pull request #25 from arthurvr/patch-1\n- matches was throwing errors in IE9\n- fix up closest tests, and make the removeClass test more robust\n- fix merge error with .closest()\n- make .removeClass() more robust for IE9\n- dist files committed\n- improve the removeClass() function and performance slightly for IE9. removeClass will now accept space delimited class names for removal\n- Merge pull request #29 from simeydotme/fix-closest-and-removeclass\n- Making .each more performant via length caching. Fixing html() numeric input\n- Update README.md\n- Merge pull request #31 from simeydotme/patch-1\n- Fixing #32\n- Adds cash object support.\n- updating addClass function to allow multiple classes and to prevent duplicates in IE9\n- update tests for multiple classes and to detect duplicates\n- update dist files\n- Merge pull request #38 from simeydotme/patch-addclass-2\n- create a utility method to return a unique collection\n- update .parent(), .parents() and .add() to use $.unique()\n- update dist files and test cases\n- Merge pull request #37 from simeydotme/patch-parents-with-unique\n- Merge pull request #34 from vivekimsit/feature-add-is-support\n\n### [v0.0.2](https://github.com/fabiospampinato/cash/releases/tag/0.0.2) (2014-09-27)\n\n- Performance\n- Fixing readme\n- Fixing siblings, making qSA return array\n- Fixing `_` leak\n- Add bower.json\n- Merge pull request #3 from digitaljhelms/bower-json\n- First round of unit tests + bug fixes\n- Fixing README typo &amp; adding License\n- Fixes\n- Adding \"auto-off\" event registration and indexing\n- Bug Fixes\n- Updating delegate test and JSHint compat\n- delegate accuracy\n- updated outerWidth and innerWidth doc\n- Perf updates\n- Added a period(.) to the descriptions in README\n- Fixes #6 - Append and AppendTo can't chain\n- Merge pull request #10 from mienaikoe/master\n- Fixing html() &amp; append returns\n- Merge branch 'master' of https://github.com/kenwheeler/cash\n\n### [v0.0.1](https://github.com/fabiospampinato/cash/releases/tag/0.0.1) (2014-09-19)\n\n- Initial commit\n- README &amp; Homepage\n- Update README.md\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.087890625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2020 Ken Wheeler, 2020-present Fabio Spampinato\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.9638671875,
          "content": "{\n  \"name\": \"cash-dom\",\n  \"repository\": \"github:fabiospampinato/cash\",\n  \"description\": \"An absurdly small jQuery alternative for modern browsers.\",\n  \"version\": \"8.1.5\",\n  \"license\": \"MIT\",\n  \"browser\": \"./dist/cash.js\",\n  \"main\": \"./dist/cash.js\",\n  \"module\": \"./dist/cash.esm.js\",\n  \"jsnext:main\": \"./dist/cash.esm.js\",\n  \"types\": \"dist/cash.d.ts\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"build\": \"bash ./tasks/build.sh\",\n    \"watch\": \"monex --watch src --exec npm:build\",\n    \"dev\": \"npm run build && npm run watch\",\n    \"test\": \"open ./test/index.html\",\n    \"test:jquery:init\": \"( git -C ./test/jquery reset --hard HEAD && git -C ./test/jquery pull ) || git clone https://github.com/jquery/jquery.git ./test/jquery\",\n    \"test:jquery\": \"npm run test:jquery:init && npm run test:jquery:build && cd ./test/jquery && npm i && opn http://localhost:4444/test/index.html\\\\?module=css && php -S localhost:4444\",\n    \"test:jquery:build\": \"cat ./node_modules/jquery/dist/jquery.js ./dist/cash.js ./test/jquery_patch.js > ./test/jquery/dist/jquery.js && cp ./test/jquery/dist/jquery.js ./test/jquery/dist/jquery.min.js\",\n    \"test:jquery:build:watch\": \"while sleep 1; do npm run test:jquery:build; done\",\n    \"test:jquery:reverse\": \"npm run test:jquery:init && npm run test:jquery:reverse:build && npm run test:watch\",\n    \"test:jquery:reverse:build\": \"cat ./node_modules/jquery/dist/jquery.js ./dist/cash.min.js ./test/jquery_reverse_patch.js > ./dist/cash.js\",\n    \"test:jquery:reverse:build:watch\": \"while sleep 1; do npm run test:jquery:reverse:build; done\",\n    \"test:playwright\": \"node ./test/playwright.mjs\",\n    \"graph\": \"minipacco graph src/export_esm.ts\",\n    \"prepublishOnly\": \"npm run build && npm run test:playwright\"\n  },\n  \"devDependencies\": {\n    \"esbuild\": \"^0.17.10\",\n    \"jquery\": \"^3.6.3\",\n    \"minipacco\": \"^1.0.4\",\n    \"monex\": \"^2.0.0\",\n    \"playwright\": \"^1.30.0\",\n    \"qunit\": \"^2.19.4\",\n    \"qunit-ava-spec\": \"^2.0.0\",\n    \"tiny-colors\": \"^2.0.2\",\n    \"typescript\": \"^4.9.5\"\n  }\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 28.8974609375,
          "content": "\n<p align=\"center\">\n  <img src=\"./resources/logo/logo.png\" alt=\"Cash Logo\" width=\"400px\">\n</p>\n\n# Cash\n\nCash is an absurdly small jQuery alternative for modern browsers (IE11+) that provides jQuery-style syntax for manipulating the DOM. Utilizing modern browser features to minimize the codebase, developers can use the familiar chainable methods at a fraction of the file size. 100% feature parity with jQuery isn't a goal, but Cash comes helpfully close, covering most day to day use cases.\n\n## Comparison\n\n| Size               | Cash        | Zepto 1.2.0 | jQuery Slim 3.4.1 |\n| ------------------ | ----------- | ----------- | ----------------- |\n| Unminified         | **36.5 KB** | 58.7 KB     | 227 KB            |\n| Minified           | **16 KB**   | 26 KB       | 71 KB             |\n| Minified & Gzipped | **6 KB**    | 9.8 KB      | 24.4 KB           |\n\nA **76.6%** gain in size reduction compared to jQuery Slim. If you need a smaller bundle, we support [partial builds](https://github.com/fabiospampinato/cash/blob/master/docs/partial_builds.md) too.\n\n| Features                 | Cash                               | Zepto 1.2.0                    | jQuery Slim 3.4.1              |\n| ------------------------ | ---------------------------------- | ------------------------------ | ------------------------------ |\n| Supports Older Browsers  | ❌                                  | ️❌                             | ✔                              |\n| Supports Modern Browsers | ✔                                  | ️✔                             | ✔                              |\n| Actively Maintained      | ✔                                  | ❌                              | ✔                              |\n| Namespaced Events        | ✔                                  | ️❌                             | ✔                              |\n| Typed Codebase           | ✔ (TypeScript)                     | ️❌                             | ❌                              |\n| TypeScript Types         | ✔ (generated from code)            | ⚠️ (via DefinitelyTyped)       | ⚠️ (via DefinitelyTyped)       |\n| Partial Builds           | ✔ (can exclude individual methods) | ⚠️ (can exclude whole modules) | ⚠️ (can exclude whole modules) |\n\nIf you're migrating from jQuery be sure to read our [migration guide](https://github.com/fabiospampinato/cash/blob/master/docs/migration_guide.md).\n\n## Usage\n\nYou can get Cash from [jsDelivr](https://cdn.jsdelivr.net/npm/cash-dom/dist/cash.min.js) and use it like this:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/cash-dom/dist/cash.min.js\"></script>\n<script>\n  $(function () {\n    $('html').addClass ( 'dom-loaded' );\n    $('<footer>Appended with Cash</footer>').appendTo ( document.body );\n  });\n</script>\n```\n\nCash is also available through [npm](https://npmjs.com) as the [`cash-dom`](https://www.npmjs.com/package/cash-dom) package:\n\n```sh\nnpm install --save cash-dom\n```\n\nThat you can then use like this:\n\n```js\nimport $ from \"cash-dom\";\n\n$(function () {\n  $('html').addClass ( 'dom-loaded' );\n  $('<footer>Appended with Cash</footer>').appendTo ( document.body );\n});\n```\n\n## Documentation\n\nCash gives you a query selector, [collection methods](#collection-methods) and some [library methods](#cash-methods). If you need more details about our API just check out [jQuery's](https://api.jquery.com), while we don't implement everything that jQuery provides, pretty much everything that we do implement should be compatible with jQuery. Cash can be extended with custom methods, read how [here](https://github.com/fabiospampinato/cash/blob/master/docs/extending_cash.md).\n\n### $()\n\nThis is the main selector method for Cash. It returns an actionable collection of nodes.\n\nIf a function is provided, the function will be run once the DOM is ready.\n\n```js\n$( selector [, element] ) // => collection, using `element` as the context\n$( selector [, collection] ) // => collection, using `collection` as the context\n$(node) // => collection\n$(nodeList) // => collection\n$(htmlString) // => collection\n$(collection) // => self\n$(function () {}) // => document ready callback\n```\n\n### Collection Methods\n\nThese methods from the collection prototype ([$.fn](#fn)) are available once you create a collection with `$()` and are called like so:\n\n```js\n$(element).addClass ( className ) // => collection\n```\n\nSome [extra methods](https://github.com/fabiospampinato/cash/tree/master/src/extra) are available but disabled by default.\n\n| Attributes                           | Collection                 | CSS                  | Data                   | Dimensions                           | Effects                    |\n| ------------------------------------ | -------------------------- | -------------------- | ---------------------- | ------------------------------------ | -------------------------- |\n| [fn.addClass ()](#fnaddclass-)       | [fn.add ()](#fnadd-)       | [fn.css ()](#fncss-) | [fn.data ()](#fndata-) | [fn.height ()](#fnheight-)           | [fn.hide ()](#fnhide-)     |\n| [fn.attr ()](#fnattr-)               | [fn.each ()](#fneach-)     |                      |                        | [fn.innerHeight ()](#fninnerheight-) | [fn.show ()](#fnshow-)     |\n| [fn.hasClass ()](#fnhasclass-)       | [fn.eq ()](#fneq-)         |                      |                        | [fn.innerWidth ()](#fninnerwidth-)   | [fn.toggle ()](#fntoggle-) |\n| [fn.prop ()](#fnprop-)               | [fn.filter ()](#fnfilter-) |                      |                        | [fn.outerHeight ()](#fnouterheight-) |                            |\n| [fn.removeAttr ()](#fnremoveattr-)   | [fn.first ()](#fnfirst-)   |                      |                        | [fn.outerWidth ()](#fnouterwidth-)   |                            |\n| [fn.removeClass ()](#fnremoveclass-) | [fn.get ()](#fnget-)       |                      |                        | [fn.width ()](#fnwidth-)             |                            |\n| [fn.removeProp ()](#fnremoveprop-)   | [fn.index ()](#fnindex-)   |                      |                        |                                      |                            |\n| [fn.toggleClass ()](#fntoggleclass-) | [fn.last ()](#fnlast-)     |                      |                        |                                      |                            |\n|                                      | [fn.map ()](#fnmap-)       |                      |                        |                                      |                            |\n|                                      | [fn.slice ()](#fnslice-)   |                      |                        |                                      |                            |\n\n| Events                       | Forms                            | Manipulation                           | Offset                                 | Traversal                              |\n| ---------------------------- | -------------------------------- | -------------------------------------- | -------------------------------------- | -------------------------------------- |\n| [fn.off ()](#fnoff-)         | [fn.serialize ()](#fnserialize-) | [fn.after ()](#fnafter-)               | [fn.offset ()](#fnoffset-)             | [fn.children ()](#fnchildren-)         |\n| [fn.on ()](#fnon-)           | [fn.val ()](#fnval-)             | [fn.append ()](#fnappend-)             | [fn.offsetParent ()](#fnoffsetparent-) | [fn.closest ()](#fnclosest-)           |\n| [fn.one ()](#fnone-)         |                                  | [fn.appendTo ()](#fnappendto-)         | [fn.position ()](#fnposition-)         | [fn.contents ()](#fncontents-)         |\n| [fn.ready ()](#fnready-)     |                                  | [fn.before ()](#fnbefore-)             |                                        | [fn.find ()](#fnfind-)                 |\n| [fn.trigger ()](#fntrigger-) |                                  | [fn.clone ()](#fnclone-)               |                                        | [fn.has ()](#fnhas-)                   |\n|                              |                                  | [fn.detach ()](#fndetach-)             |                                        | [fn.is ()](#fnis-)                     |\n|                              |                                  | [fn.empty ()](#fnempty-)               |                                        | [fn.next ()](#fnnext-)                 |\n|                              |                                  | [fn.html ()](#fnhtml-)                 |                                        | [fn.nextAll ()](#fnnextall-)           |\n|                              |                                  | [fn.insertAfter ()](#fninsertafter-)   |                                        | [fn.nextUntil ()](#fnnextuntil-)       |\n|                              |                                  | [fn.insertBefore ()](#fninsertbefore-) |                                        | [fn.not ()](#fnnot-)                   |\n|                              |                                  | [fn.prepend ()](#fnprepend-)           |                                        | [fn.parent ()](#fnparent-)             |\n|                              |                                  | [fn.prependTo ()](#fnprependto-)       |                                        | [fn.parents ()](#fnparents-)           |\n|                              |                                  | [fn.remove ()](#fnremove-)             |                                        | [fn.parentsUntil ()](#fnparentsuntil-) |\n|                              |                                  | [fn.replaceAll ()](#fnreplaceall-)     |                                        | [fn.prev ()](#fnprev-)                 |\n|                              |                                  | [fn.replaceWith ()](#fnreplacewith-)   |                                        | [fn.prevAll ()](#fnprevall-)           |\n|                              |                                  | [fn.text ()](#fntext-)                 |                                        | [fn.prevUntil ()](#fnprevuntil-)       |\n|                              |                                  | [fn.unwrap ()](#fnunwrap-)             |                                        | [fn.siblings ()](#fnsiblings-)         |\n|                              |                                  | [fn.wrap ()](#fnwrap-)                 |                                        |                                        |\n|                              |                                  | [fn.wrapAll ()](#fnwrapall-)           |                                        |                                        |\n|                              |                                  | [fn.wrapInner ()](#fnwrapinner-)       |                                        |                                        |\n\n#### $.fn\n\nThe main prototype for collections, allowing you to extend Cash with plugins by adding methods to all collections.\n\n```js\n$.fn // => Cash.prototype\n$.fn.myMethod = function () {}; // Custom method added to all collections\n$.fn.extend ( object ); // Add multiple methods to the prototype\n```\n\n#### fn.add ()\n\nReturns a new collection with the element(s) added to the end.\n\n```js\n$(element).add ( element ) // => collection\n$(element).add ( selector ) // => collection\n$(element).add ( collection ) // => collection\n```\n\n#### fn.addClass ()\n\nAdds the `className` class to each element in the collection.\n\nAccepts space-separated `className` for adding multiple classes.\n\n```js\n$(element).addClass ( className ) // => collection\n```\n\n#### fn.after ()\n\nInserts content or elements after the collection.\n\n```js\n$(element).after ( element ) // => collection\n$(element).after ( htmlString ) // => collection\n$(element).after ( content [, content] ) // => collection\n```\n\n#### fn.append ()\n\nAppends content or elements to each element in the collection.\n\n```js\n$(element).append ( element ) // => collection\n$(element).append ( htmlString ) // => collection\n$(element).append ( content [, content] ) // => collection\n```\n\n#### fn.appendTo ()\n\nAdds the elements in the collection to the target element(s).\n\n```js\n$(element).appendTo ( element ) // => collection\n```\n\n#### fn.attr ()\n\nWithout `attrValue`, returns the attribute value of the first element in the collection.\n\nWith `attrValue`, sets the attribute value of each element of the collection.\n\n```js\n$(element).attr ( attrName ) // value\n$(element).attr ( attrName, attrValue ) // => collection\n$(element).attr ( object ) // => collection\n```\n\n#### fn.before ()\n\nInserts content or elements before the collection.\n\n```js\n$(element).before ( element ) // => collection\n$(element).before ( htmlString ) // => collection\n$(element).before ( content [, content] ) // => collection\n```\n\n#### fn.children ()\n\nWithout a selector specified, returns a collection of child elements.\n\nWith a selector, returns child elements that match the selector.\n\n```js\n$(element).children () // => collection\n$(element).children ( selector ) // => collection\n```\n\n#### fn.closest ()\n\nReturns the closest matching selector up the DOM tree.\n\n```js\n$(element).closest ( selector ) // => collection\n```\n\n#### fn.contents ()\n\nGet the children of each element in the set of matched elements, including text and comment nodes.\n\nUseful for selecting elements in friendly iframes.\n\n```js\n$('iframe').contents ().find ( '*' ) // => collection\n```\n\n#### fn.clone ()\n\nReturns a collection with cloned elements.\n\n```js\n$(element).clone () // => collection\n```\n\n#### fn.detach ()\n\nRemoves collection elements, optionally that match the selector, from the DOM.\n\n```js\n$(element).detach () // => collection\n$(element).detach ( selector ) // => collection\n```\n\n#### fn.css ()\n\nReturns a CSS property value when just property is supplied.\n\nSets a CSS property when property and value are supplied.\n\nSets multiple properties when an object is supplied.\n\nProperties will be autoprefixed if needed for the user's browser.\n\n```js\n$(element).css ( property ) // => value\n$(element).css ( property, value ) // => collection\n$(element).css ( object ) // => collection\n```\n\n#### fn.data ()\n\nWithout arguments, returns an object mapping all the `data-*` attributes to their values.\n\nWith a `key`, return the value of the corresponding `data-*` attribute.\n\nWith both a `key` and `value`, sets the value of the corresponding `data-*` attribute to `value`.\n\nMultiple data can be set when an object is supplied.\n\n```js\n$(element).data () // => object\n$(element).data ( key ) // => value\n$(element).data ( key, value ) // => collection\n$(element).data ( object ) // => collection\n```\n\n#### fn.each ()\n\nIterates over a collection with `callback ( index, element )`. The callback function may exit iteration early by returning `false`.\n\n```js\n$(element).each ( callback ) // => collection\n```\n\n#### fn.empty ()\n\nEmpties the elements interior markup.\n\n```js\n$(element).empty () // => collection\n```\n\n#### fn.eq ()\n\nReturns a collection with the element at index.\n\n```js\n$(element).eq ( index ) // => collection\n```\n\n#### fn.extend ()\n\nAdds properties to the Cash collection prototype.\n\n```js\n$.fn.extend ( object ) // => object\n```\n\n#### fn.filter ()\n\nReturns the collection that results from applying the filter selector/method.\n\n```js\n$(element).filter ( selector ) // => collection\n$(element).filter ( function ( index, element ) {} ) // => collection\n```\n\n#### fn.find ()\n\nReturns selector match descendants from the first element in the collection.\n\n```js\n$(element).find ( selector ) // => collection\n```\n\n#### fn.first ()\n\nReturns a collection containing only the first element.\n\n```js\n$(element).first () // => collection\n```\n\n#### fn.get ()\n\nReturns the element at the index, or returns all elements.\n\n```js\n$(element).get ( index ) // => domNode\n$(element).get () // => domNode[]\n```\n\n#### fn.has ()\n\nReduce the set of matched elements to those that have a descendant that matches the selector or DOM element.\n\n```js\n$(element).has ( selector ) // => collection\n$(element).has ( element ) // => collection\n```\n\n#### fn.hasClass ()\n\nReturns the boolean result of checking if any element in the collection has the `className` attribute.\n\n```js\n$(element).hasClass ( className ) // => boolean\n```\n\n#### fn.height ()\n\nReturns or sets the height of the element.\n\n```js\n$(element).height () // => Integer\n$(element).height ( number ) // => collection\n```\n\n#### fn.hide ()\n\nHide the elements.\n\n```js\n$(element).hide () // => collection\n```\n\n#### fn.html ()\n\nReturns the HTML text of the first element in the collection, sets the HTML if provided.\n\n```js\n$(element).html () // => HTML Text\n$(element).html ( htmlString ) // => HTML Text\n```\n\n#### fn.index ()\n\nReturns the index of the element in its parent if an element or selector isn't provided. Returns index within element or selector if it is.\n\n```js\n$(element).index () // => Integer\n$(element).index ( element ) // => Integer\n```\n\n#### fn.innerHeight ()\n\nReturns the height of the element + padding.\n\n```js\n$(element).innerHeight () // => Integer\n```\n\n#### fn.innerWidth ()\n\nReturns the width of the element + padding.\n\n```js\n$(element).innerWidth () // => Integer\n```\n\n#### fn.insertAfter ()\n\nInserts collection after specified element.\n\n```js\n$(element).insertAfter ( element ) // => collection\n```\n\n#### fn.insertBefore ()\n\nInserts collection before specified element.\n\n```js\n$(element).insertBefore ( element ) // => collection\n```\n\n#### fn.is ()\n\nReturns whether the provided selector, element or collection matches any element in the collection.\n\n```js\n$(element).is ( selector ) // => boolean\n```\n\n#### fn.last ()\n\nReturns a collection containing only the last element.\n\n```js\n$(element).last () // => collection\n```\n\n#### fn.map ()\n\nReturns a new collection, mapping each element with `callback ( index, element )`.\n\n```js\n$(selector).map ( callback ) // => collection\n```\n\n#### fn.next ()\n\nReturns the next adjacent elements.\n\n```js\n$(element).next () // => collection\n$(element).next ( selector ) // => collection\n```\n\n#### fn.nextAll ()\n\nReturns all the next elements.\n\n```js\n$(element).nextAll () // => collection\n$(element).nextAll ( selector ) // => collection\n```\n\n#### fn.nextUntil ()\n\nReturns all the next elements, until the provided selector matches.\n\n```js\n$(element).nextUntil ( selector ) // => collection\n$(element).nextUntil ( selector, filterSelector ) // => collection\n```\n\n#### fn.not ()\n\nFilters collection by false match on collection/selector.\n\n```js\n$(element).not ( selector ) // => collection\n$(element).not ( collection ) // => collection\n```\n\n#### fn.off ()\n\nRemoves event listener from collection elements.\n\nAccepts space-separated `eventName` for removing multiple events listeners.\n\nRemoves all event listeners if called without arguments.\n\n```js\n$(element).off ( eventName, eventHandler ) // => collection\n$(element).off ( eventName ) // => collection\n$(element).off ( eventsMap ) // => collection\n$(element).off () // => collection\n```\n\n#### fn.offset ()\n\nGet the coordinates of the first element in a collection relative to the document.\n\n```js\n$(element).offset () // => Object\n```\n\n#### fn.offsetParent ()\n\nGet the first element's ancestor that's positioned.\n\n```js\n$(element).offsetParent () // => collection\n```\n\n#### fn.on ()\n\nAdds event listener to collection elements.\n\nAccepts space-separated `eventName` for listening to multiple events.\n\nEvent is delegated if delegate is supplied.\n\n```js\n$(element).on ( eventsMap ) // => collection\n$(element).on ( eventName, eventHandler ) // => collection\n$(element).on ( eventName, delegate, eventHandler ) // => collection\n```\n\n#### fn.one ()\n\nAdds event listener to collection elements that only triggers once for each element.\n\nAccepts space-separated `eventName` for listening to multiple events.\n\nEvent is delegated if delegate is supplied.\n\n```js\n$(element).one ( eventName, eventHandler ) // => collection\n$(element).one ( eventName, delegate, eventHandler ) // => collection\n```\n\n#### fn.outerHeight ()\n\nReturns the outer height of the element. Includes margins if `includeMargings` is set to true.\n\n```js\n$(element).outerHeight () // => Integer\n$(element).outerHeight ( includeMargins ) // => Integer\n```\n\n#### fn.outerWidth ()\n\nReturns the outer width of the element. Includes margins if `includeMargings` is set to true.\n\n```js\n$(element).outerWidth () // => Integer\n$(element).outerWidth ( includeMargins ) // => Integer\n```\n\n#### fn.parent ()\n\nReturns collection of elements who are parent of elements.\n\n```js\n$(element).parent () // => collection\n$(element).parent ( selector ) // => collection\n```\n\n#### fn.parents ()\n\nReturns collection of elements who are parents of elements. Optionally filtering by selector.\n\n```js\n$(element).parents () // => collection\n$(element).parents ( selector ) // => collection\n```\n\n#### fn.parentsUntil ()\n\nReturns collection of elements who are parents of elements, until a provided selector matches. Optionally filtering by selector.\n\n```js\n$(element).parentsUntil ( selector ) // => collection\n$(element).parentsUntil ( selector, filterSelector ) // => collection\n```\n\n#### fn.position ()\n\nGet the coordinates of the first element in a collection relative to its `offsetParent`.\n\n```js\n$(element).position () // => object\n```\n\n#### fn.prepend ()\n\nPrepends content or elements to the each element in collection.\n\n```js\n$(element).prepend ( element ) // => collection\n$(element).prepend ( htmlString ) // => collection\n$(element).prepend ( content [, content] ) // => collection\n```\n\n#### fn.prependTo ()\n\nPrepends elements in a collection to the target element(s).\n\n```js\n$(element).prependTo ( element ) // => collection\n```\n\n#### fn.prev ()\n\nReturns the previous adjacent elements.\n\n```js\n$(element).prev () // => collection\n$(element).prev ( selector ) // => collection\n```\n\n#### fn.prevAll ()\n\nReturns all the previous elements.\n\n```js\n$(element).prevAll () // => collection\n$(element).prevAll ( selector ) // => collection\n```\n\n#### fn.prevUntil ()\n\nReturns all the previous elements, until the provided selector matches.\n\n```js\n$(element).prevUntil ( selector ) // => collection\n$(element).prevUntil ( selector, filterSelector ) // => collection\n```\n\n#### fn.prop ()\n\nReturns a property value when just property is supplied.\n\nSets a property when property and value are supplied, and sets multiple properties when an object is supplied.\n\n```js\n$(element).prop ( property ) // => property value\n$(element).prop ( property, value ) // => collection\n$(element).prop ( object ) // => collection\n```\n\n#### fn.ready ()\n\nCalls callback method on DOMContentLoaded.\n\n```js\n$(document).ready ( callback ) // => collection/span\n```\n\n#### fn.remove ()\n\nRemoves collection elements, optionally that match the selector, from the DOM and removes all their event listeners.\n\n```js\n$(element).remove () // => collection\n$(element).remove ( selector ) // => collection\n```\n\n#### fn.replaceAll ()\n\nThis is similar to [fn.replaceWith ()](#fnreplacewith-), but with the source and target reversed.\n\n```js\n$(element).replaceAll ( content ) // => collection\n```\n\n#### fn.replaceWith ()\n\nReplace collection elements with the provided new content.\n\n```js\n$(element).replaceWith ( content ) // => collection\n```\n\n#### fn.removeAttr ()\n\nRemoves attribute from collection elements.\n\nAccepts space-separated attrName for removing multiple attributes.\n\n```js\n$(element).removeAttr ( attrName ) // => collection\n```\n\n#### fn.removeClass ()\n\nRemoves className from collection elements.\n\nAccepts space-separated className for adding multiple classes.\n\nProviding no arguments will remove all classes.\n\n```js\n$(element).removeClass () // => collection\n$(element).removeClass ( className ) // => collection\n```\n\n#### fn.removeProp ()\n\nRemoves property from collection elements.\n\n```js\n$(element).removeProp ( propName ) // => collection\n```\n\n#### fn.serialize ()\n\nWhen called on a form, serializes and returns form data.\n\n```js\n$(form).serialize () // => String\n```\n\n#### fn.show ()\n\nShow the elements.\n\n```js\n$(element).show () // => collection\n```\n\n#### fn.siblings ()\n\nReturns a collection of sibling elements.\n\n```js\n$(element).siblings () // => collection\n$(element).siblings ( selector ) // => collection\n```\n\n#### fn.slice ()\n\nReturns a new collection with elements taken from start to end.\n\n```js\n$(selector).slice ( start, end ) // => collection\n```\n\n#### fn.text ()\n\nReturns the inner text of the first element in the collection, sets the text if textContent is provided.\n\n```js\n$(element).text () // => text\n$(element).text ( textContent ) // => collection\n```\n\n#### fn.toggle ()\n\nHide or show the elements.\n\n```js\n$(element).toggle () // => collection\n$(element).toggle ( force ) // => collection\n```\n\n#### fn.toggleClass ()\n\nAdds or removes className from collection elements based on if the element already has the class.\n\nAccepts space-separated classNames for toggling multiple classes, and an optional `force` boolean to ensure classes are added (`true`) or removed (`false`).\n\n```js\n$(element).toggleClass ( className ) // => collection\n$(element).toggleClass ( className, force ) // => collection\n```\n\n#### fn.trigger ()\n\nTriggers supplied event on elements in collection. Data can be passed along as the second parameter.\n\n```js\n$(element).trigger ( eventName ) // => collection\n$(element).trigger ( eventObj ) // => collection\n$(element).trigger ( eventName, data ) // => collection\n$(element).trigger ( eventObj, data ) // => collection\n```\n\n#### fn.unwrap ()\n\nRemoves the wrapper from all elements.\n\n```js\n$(element).unwrap () // => collection\n```\n\n#### fn.val ()\n\nReturns an inputs value. If value is supplied, sets all inputs in collection's value to the value argument.\n\n```js\n$(input).val () // => value\n$(input).val ( value ) // => collection\n```\n\n#### fn.width ()\n\nReturns or sets the width of the element.\n\n```js\n$(element).width () // => number\n$(element).width ( number ) // => collection\n```\n\n#### fn.wrap ()\n\nWraps a structure around each element.\n\n```js\n$(element).wrap ( structure ) // => collection\n```\n\n#### fn.wrapAll ()\n\nWraps a structure around all elements.\n\n```js\n$(element).wrapAll ( structure ) // => collection\n```\n\n#### fn.wrapInner ()\n\nWraps a structure around all children.\n\n```js\n$(element).wrapInner ( structure ) // => collection\n```\n\n### Cash Methods\n\nThese methods are exported from the global `$` object, and are called like so:\n\n```js\n$.isArray ( arr ) // => boolean\n```\n\nSome [extra methods](https://github.com/fabiospampinato/cash/tree/master/src/extra) are available but [disabled](https://github.com/fabiospampinato/cash/blob/master/pacco.json#L3) by default.\n\n| Type Checking                         | Utilities                     |\n| ------------------------------------- | ----------------------------- |\n| [$.isArray ()](#isarray-)             | [$.guid](#guid)               |\n| [$.isFunction ()](#isfunction-)       | [$.each ()](#each-)           |\n| [$.isNumeric ()](#isnumeric-)         | [$.extend ()](#extend-)       |\n| [$.isPlainObject ()](#isplainobject-) | [$.parseHTML ()](#parsehtml-) |\n| [$.isWindow ()](#iswindow-)           | [$.unique ()](#unique-)       |\n\n#### $.guid\n\nA unique number.\n\n```js\n$.guid++ // => number\n```\n\n#### $.each ()\n\nIterates through an array and calls the `callback ( index, element )` method on each element.\n\nIterates through an object and calls the `callback ( key, value )` method on each property.\n\nThe callback function may exit iteration early by returning `false`.\n\n```js\n$.each ( array, callback ) // => array\n$.each ( object, callback ) // => object\n```\n\n#### $.extend ()\n\nExtends target object with properties from the source object, potentially deeply too.\n\n```js\n$.extend ( target, source ) // => object\n$.extend ( true, target, source ) // => object\n```\n\n#### $.isArray ()\n\nCheck if the argument is an array.\n\n```js\n$.isArray ([ 1, 2, 3 ]) // => true\n```\n\n#### $.isFunction ()\n\nCheck if the argument is a function.\n\n```js\nfunction fn () {};\n$.isFunction ( fn ) // => true\n```\n\n#### $.isNumeric ()\n\nCheck if the argument is numeric.\n\n```js\n$.isNumeric ( 57 ) // => true\n```\n\n#### $.isPlainObject ()\n\nCheck if the argument is a plain object.\n\n```js\n$.isPlainObject ( {} ) // => true\n```\n\n#### $.isWindow ()\n\nCheck if the argument is a Window object.\n\n```js\n$.isWindow ( window ) // => true\n```\n\n#### $.parseHTML ()\n\nReturns a collection from an HTML string.\n\n```js\n$.parseHTML ( htmlString ) // => collection\n```\n\n#### $.unique ()\n\nReturns a new array with duplicates removed.\n\n```js\n$.unique ( array ) // => array\n```\n\n## Contributing\n\nIf you found a problem, or have a feature request, please open an [issue](https://github.com/fabiospampinato/cash/issues) about it.\n\nIf you want to make a pull request you should:\n\n1. Clone the repository: `git clone https://github.com/fabiospampinato/cash.git`.\n2. Enter the cloned repository: `cd cash`\n3. Install the dependencies: `npm install`.\n4. Automatically recompile Cash whenever a change is made: `npm run dev`.\n5. Open the test suite: `npm run test`.\n6. Remember to update the readme, if necessary.\n\n## Thanks\n\n- **[@kenwheeler](https://github.com/kenwheeler), [@shshaw](https://github.com/shshaw), [@jamiebuilds](https://github.com/jamiebuilds), [@simeydotme](https://github.com/simeydotme)** and all the contributors who helped making Cash.\n- **[@hisk](https://github.com/hisk)** - The \"design focused engineer\" behind our awesome logo.\n\n## License\n\nMIT © Fabio Spampinato\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.166015625,
          "content": "{\n  \"compilerOptions\": {\n    \"forceConsistentCasingInFileNames\": true,\n    \"noUnusedParameters\": false,\n    \"strictNullChecks\": false\n  },\n  \"include\": [\n    \"src\"\n  ]\n}\n"
        }
      ]
    }
  ]
}