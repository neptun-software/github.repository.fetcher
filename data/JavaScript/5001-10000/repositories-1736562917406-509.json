{
  "metadata": {
    "timestamp": 1736562917406,
    "page": 509,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "graphite-project/graphite-web",
      "stars": 5930,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".backportrc.json",
          "type": "blob",
          "size": 0.421875,
          "content": "{\n  \"upstream\": \"graphite-project/graphite-web\",\n\n  // You can pre-select branches you use often\n  \"branches\": [\n    { \"name\": \"1.1.x\", \"checked\": true },\n    { \"name\": \"1.0.x\", \"checked\": false },\n    { \"name\": \"0.9.x\", \"checked\": false }\n  ],\n\n  // Backport multiple commits\n  \"multipleCommits\": true,\n\n  // Backport to multiple branches\n  \"multipleBranches\": true,\n\n  // Labels will be added to the PR\n  \"labels\": [\"backport\"]\n}\n"
        },
        {
          "name": ".bzrignore",
          "type": "blob",
          "size": 0.0771484375,
          "content": "MANIFEST\n_trial_temp\nbuild\ndist\ngraphite.db\n.bzrignore\ndropin.cache\n*.egg-info\n"
        },
        {
          "name": ".deepsource.toml",
          "type": "blob",
          "size": 0.1337890625,
          "content": "version = 1\n\ntest_patterns = [\"*/test/**\"]\n\n[[analyzers]]\nname = \"python\"\nenabled = true\n\n  [analyzers.meta]\n  runtime_version = \"3.x.x\"\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.6806640625,
          "content": "module.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true,\n    },\n    \"parserOptions\": { \"ecmaVersion\": 8 },\n    \"extends\": \"eslint:recommended\",\n    \"rules\": {\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"always\"\n        ],\n        \"no-use-before-define\": [\n            \"error\",\n            { \"functions\": true, \"classes\": true }\n        ],\n        \"camelcase\": [\n            \"error\",\n            { \"properties\": \"always\" }\n        ],\n        \"eqeqeq\": [\n            \"error\",\n            \"always\"\n        ],\n    }\n};\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2197265625,
          "content": "MANIFEST\n.vagrant/\n.venv/\n_trial_temp\nbuild\ndist\ngraphite.db\ndropin.cache\n*.egg-info\ndocs/_build\n*.log\n*.pyc\n.tox\n*.swp\n.idea\n*.iml\nstorage\nwebapp/coverage.xml\nwebapp/.coverage\nwebapp/htmlcov\nwebapp/static\nwebapp/static/**/*\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.193359375,
          "content": "default_language_version:\n  python: python3.12\n\nrepos:\n- repo: https://github.com/adamchainz/django-upgrade\n  rev: \"1.20.0\"\n  hooks:\n    - id: django-upgrade\n      args: [ --target-version, \"4.2\" ]\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.2412109375,
          "content": "- id: django-upgrade\n  name: django-upgrade\n  description: Automatically upgrade your Django project code.\n  entry: django-upgrade\n  language: python\n  types: [python]\n  # for backward compatibility\n  files: ''\n  minimum_pre_commit_version: 0.15.0"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.55859375,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# We recommend specifying your dependencies to enable reproducible builds:\n# https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\npython:\n   install:\n   - requirements: docs/requirements.txt"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.8330078125,
          "content": "# http://travis-ci.org/#!/graphite-project/graphite-web\ndist: bionic\nlanguage: python\npython: 3.9\n\nmatrix:\n  include:\n    - python: pypy2\n      env:\n        - TOXENV=pypy-django111-pyparsing2\n    - python: 3.6\n      env:\n        - TOXENV=py36-django22-pyparsing2\n    - python: 3.7\n      env:\n        - TOXENV=py37-django22-pyparsing2\n    - python: 3.8\n      env:\n        - TOXENV=py38-django22-pyparsing2\n    - python: 3.9\n      env:\n        - TOXENV=py39-django30-pyparsing2\n    - python: 3.9\n      env:\n        - TOXENV=py39-django30-pyparsing2-msgpack\n    - python: 3.9\n      env:\n        - TOXENV=py39-django30-pyparsing2-pyhash\n    - python: 3.9\n      env:\n        - TOXENV=py39-django30-pyparsing2-mysql TEST_MYSQL_PASSWORD=graphite\n    - python: 3.9\n      env:\n        - TOXENV=py39-django30-pyparsing2-postgresql TEST_POSTGRESQL_PASSWORD=graphite\n    - python: 3.9\n      env:\n        - TOXENV=lint\n    - python: 3.9\n      env:\n        - TOXENV=docs\n\nenv:\n  - TOXENV=py27-django111-pyparsing2-msgpack\n  - TOXENV=py27-django111-pyparsing2-pyhash\n  - TOXENV=py27-django111-pyparsing2-mysql TEST_MYSQL_PASSWORD=graphite\n  - TOXENV=py27-django111-pyparsing2-postgresql TEST_POSTGRESQL_PASSWORD=graphite\n\naddons:\n  apt:\n    packages:\n      - libcairo2-dev\n      - librrd-dev\n      - libboost-python-dev  # for pyhash\n  postgresql: \"9.5\"\n\nservices:\n  - redis-server\n  - mysql\n  - postgresql\n\ninstall:\n  - if echo \"$TOXENV\" | grep -q 'mysql'      ; then mysql -e \"GRANT ALL ON test_graphite.* TO 'graphite'@'localhost' IDENTIFIED BY 'graphite';\"; fi\n  - if echo \"$TOXENV\" | grep -q 'postgresql' ; then psql -c \"CREATE USER graphite WITH CREATEDB PASSWORD 'graphite';\" -U postgres; fi\n  - if echo \"$TOXENV\" | grep -q '^py2'       ; then pip install --upgrade pip virtualenv; fi\n  - pip install tox\n\nscript:\n  - tox -e $TOXENV\n\nafter_success:\n  - pip install codecov\n  - codecov\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.9677734375,
          "content": "# 1.2.0 (master/unreleased)\n\n* Nothing yet\n# 1.1.10\n## graphite-web\n### Bug Fixes\n* Replace another missed instance of Infinity in JSON (#2737, @bobemoe) \n* Fix pyparsing > 3.0 compatibility issue. (#2727, @parrotpock) \n* Fix dependency issue for usage as Grafana data source (#2722, @henkf)\n* backporting \"html-encode text passed to Ext.Msg\" (#2719, @DanCech)\n* Depend on third-party scandir only for Python < 3.5 (#2706, @neirbowj)\n* fix shifting of moving* datapoints by one step into the future (#2682, @zivillian)\n\n### Features / Enhancements\n* maxStep in requestContext for Finder (#2724, @deniszh) \n* compressPeriodicGaps function (#2720, @deniszh)\n* Implement upper lower case functions (#2586, @replay)\n\n## carbon\n### Bug Fixes\n* Fixing git url in tests (#933, @deniszh)\n* Don't use git protocol for dependency (#929, @tomdcc)\n\n## whisper\n### Features / Enhancements\n* whisper-update takes values from stdin (#318, @rowlap)\n\n## carbonate\n### Bug Fixes\n* Refactor log lines to use native interpolation (#129, @drawks)\n* Resolves issue #127 - python3 safe stdout handling (#128, @drawks)\n* Changed mutable default argument in test_fill.py and test_sync.py (#126, @aastha12) \n\n# 1.1.8\n\n## graphite-web\n\n### Bug Fixes\n - ensure that all tag values are strings (#2572, @DanCech)\n - Attempt to convert parameter types in validator (#2574, @replay)\n - accept deprecated params for bc (#2579, @replay)\n - Remote render fixes (#2582, @piotr1212)\n - render: only encodeHeader() for svg output (#2584, @ploxiln)\n - fix composer saved graphs target escaping (#2587, @ploxiln) \n - fix dashboard metric completion on backspace in Firefox (#2589, @ploxiln)\n - seriesList type validation was too permissive (#2593, @replay)\n - asPercent may be used as an aggregator (#2594, @replay)\n - Make nodes in group by nodes optional (#2597, @replay)\n - privatize linearRegressionAnalysis so it will not show in documentation (#2602, @piotr1212)\n - Revert symlink fix (#2604, @piotr1212)\n - Lock whitenoise dependency version (#2606, @Carles-Figuerola)\n - Prevent xss (#2620, @StephenDsouza90)\n - fix & improve docs for *WithWildcards functions (#2625, @Dieterbe)\n - Fix multi-threading issue in render endpoint by making grammar a thread-safe object (fixes #2626) (#2627, @romanek-adam)\n - Patch /static/ directory in Apache docs (#2635, @djmetzle)\n - Backport unicode fix from piotr1212/graphite-web@17e23ef (#2643, @piotr1212 / @deniszh)\n - Update whisper.rst with Python 3 fix (#2649, @cdeil)\n - utf-8 fix in unpickle (#2660, @piotr1212 / @ploxiln)\n - Fix expand braces (#2661, Aleksandr Cupacenko / @deniszh )\n - Fix paths not matching description (@thedoc31)\n - Amend web install docs (#2677, @deniszh)\n - Resolves #2692 can't unpickle Interval/IntervalSet (#2693, @drawks)\n\n### Features / Enhancements\n - Better logs on invalid input (#2590, @replay)\n - [Settings] Allow pickle protocol to be configurable for carbonlink requests. (#2591, @alikhtag)\n - List Promitor as a collector tool (#2605, @tomkerkhove)\n - REsynthesize: New script forked from Synthesize to install Graphite on CentOS (#2631, @deividgdt)\n - weightedAverage: raise an InputParameterError exception if the number of series passed for the values is different to the number passed for the weights (#2636, @fkaleo)\n - Find api documentation (Fixing #2616) (#2646, @deniszh)\n - Add aggregateSeriesLists() and aliases for diffSeriesLists(), sumSeriesLists(), multiplySeriesLists() (#2647, @alikhtag)\n - Optionally resolve right hand dip in sums because of lack of current minute in caches (#2659, @cbowman0)\n - You can disable info.log now (fixing #1860) (#2691, @deniszh)\n \n## carbon\n\n### Bug fixes\n - remove carbon-client.py, is broken for 4 years (#890, @piotr1212)\n - spelling (#893, @jsoref)\n - Update storage-aggregation.conf.example for #768 (#899, @antonsoroko)\n - Provide more complete list of aggregation options (#901, @neul)\n - Fixes #908 (PTC-W0016) Unnecessary comprehension (#909, @rohankhanna)\n - Fixes #906 (BAN-B101) Assert statement used outside of tests (#907, @rohankhanna)\n\n### Features / Enhancements\n - add config option to turn off logging of lost connections (#900, @tbenz9)\n - Improve carbon performance for non-tagged series (#903, @deniszh)\n\n## whisper\n\n### Bug fixes\n - fix reisze whisper from low retention to high retention will lose some data (#293, @Xu-Wentao) \n - Fixing test for python 2.7 (#295, @deniszh)\n\n## carbonate\n\n### Features / Enhancements\n - Support for Aggregated-Consistent Hash (#121 / #56, @deniszh / @klynch)\n - Handle transient network failures and support custom staging dir path (#122, @ryangsteele)\n\n# 1.1.7\n\n## graphite-web\n\n### Bug Fixes\n - Fix AttributeError if parameter validation fails (#2510, @PhilippWendler)\n - Taming lint (#2512, @deniszh)\n - relax enforcement of options sets in validation (#2513, @replay)\n - Fix tests (#2525, @replay)\n - Trying to fix tests (#2530, @deniszh)\n - simplify travis-ci config (#2532, @ploxiln)\n - fix function parameter types (#2536, @replay)\n - fixes #2541 (#2542, @replay)\n - prune flake8 ignore list (#2552, @ploxiln)\n - flake8: re-enable F841 (local variable assigned but not used) (#2559, @ploxiln)\n - flake8: re-enable E122,E124 (indent of continuation and closing bracket) (#2558, @ploxiln)\n - Fix validator when default value is used (#2555, @replay)\n - flake8: include contrib/ subdir, re-enable rule E713 (#2554, @ploxiln)\n\n### Features / Enhancements\n - Merge prefetched data. (#2507.  @liyichao)\n - introduce paramtype for agg or series func (#2523, @replay)\n - Mark series functions to use as aggregators  (#2528, @replay)\n - Python 3.9 support: remove deprecated U option to open (#2529, @piotr1212)\n - remove leading ~ from name when indexing metric names (#2458, @replay)\n - add graphite-dl4j and carbon-proxy (#2521, @jdbranham)\n - test docs on Python3 (#2535, @piotr1212)\n - Django 3.0 compatibility (#2534, @piotr1212)\n - Parameter type int or inf (#2538, @replay)\n - Interpret inf (#2539, @replay)\n - better error messages (#2543, @replay)\n - Adding Hisser and Go-graphite buckytools in tools documentation (#2549, @deniszh)\n - make consolidation func `avg` alias for average (#2556, @replay)\n - move all validation into Param.validateValue (#2557, @replay)\n - handle exceptions if params cannot be type converted (#2547, @replay)\n - better error messages with type indications (#2543, @replay)\n - log grafana dashboard/panel id headers (#2564, @replay)\n - Allow floats in scaleToSeconds() (#2565, @replay)\n\n## carbon\n\n### Bug Fixes\n - Fix #871: Adjust aggregator-rules input_pattern match greediness to support numeric matching after captured field (#872 @hessu)\n - Another test fix try (#874, @deniszh)\n - Fixing tests for S390 (#880, @sangitanalkar)\n - Trying to fix tests (#881, @deniszh)\n - Fix the manhole for Twisted > 16 and Python 3 (#882, @piotr1212)\n - Fix missing encoding for line protocol (#885, @pkruk) \n\n### Features / Enhancements\n - Bucketmax write strategy (#879, @piotr1212) \n - s390x support for travis (#869, @sangitanalkar)\n - sanitize names when using them as tag value (#858, @replay)\n - simplify travis-ci config (#875, @ploxiln)\n\n## carbonate\n\n### Bug Fixes\n - fixes python3 TypeError (#113, @l4r-s)\n - Change write mode to non-binary. (#111, @hdost)\n\n### Features / Enhancements\n - Add python3 testing (#110, @hdost)\n - add codecov (#112, @piotr1212)\n\n\n# 1.1.6\n\n## graphite-web\n\n### Bug Fixes\n - fix dashboard graph metric list icon paths with URL_PREFIX (#2424, @ploxiln)\n - docs: for sql db migration to 1.1 recommend –fake-initial (#2425, @ploxiln)\n - Fix dashboard template loading from URL (#2431, @cbowman0)\n - Dashboard render urls missing document.body.dataset.baseUrl (#2433, @cbowman0)\n - fixed small errors in docs (#2443, 0xflotus)\n - Copy requestContext() and empty prefetch (#2450, @cbowman0)\n - Fix a broken link to structured_metrics in doc (#2463, @izeye)\n - added space before (#2487, @saikek)\n - Fix for CVE-2017-18638 (#2499, @deniszh)\n - Upgrading minimal Django version (#2502, @deniszh)\n\n### Features / Enhancements\n - set package long description (#2407, @YevhenLukomskyi)\n - add tag formatting docs (#2426, @replay)\n - Accept IPv6 addresses in CARBONLINK_HOSTS (#2436, @RoEdAl)\n - update aggregation function docs for aggregate and groupbytags (#2451, @Dieterbe)\n - Add Statusengine to list of integrations (Forwarding) (#2452, @nook24)\n - Django22 compatibility (#2462, @piotr1212)\n - Python 3.8 support (#2464, @piotr1212)\n - New functions: add, sigmoid, logit, exp (#2466, @piotr1212)\n - Better error handling (return 4XX instead of 5XX in case of wrong function parameters) (#2467, @replay)\n - Pass maxDataPoints to the requestContext for Finder (#2479, @Felixoid)\n - Add redis password support for tagdb (#2483, @ahmet2mir)\n - Created issue template (#2488, @bigpythonimish)\n - docs: add netdata to ‘tools that work with graphite’ (#2490, @sbasgall)\n - Updated minimumBelow() docstring (#2493, @bigpythonimish)\n - xFilesFactor is an optional parameter for removeEmptySeries (#2495, @DanCech)\n - fix functions that aggregate to include the aliases in their params (#2496, @Dieterbe)\n - the callback parameter for groupByNode is optional (#2497, @DanCech)\n\n## carbon\n\n### Bug Fixes\n - set package long description (#834, @YevhenLukomskyi)\n - Remove pidfile on ValueError exception (#853, @albang)\n\n### Features / Enhancements\n - Add testing for Python 3.8 (#859, @piotr1212)\n\n## whisper\n\n### Bug Fixes\n - Switch to setuptools (#272, @piotr1212)\n - adding appropriate ‘type’ to sleep variable (#273, @piotr1212)\n - Add testing for Python 3.8, remove 3.4 (eol)(#277, @piotr1212)\n - Altering rrd2whisper.py for py3 compatibility (#280, @FliesLikeABrick)\n\n### Features / Enhancements\n - set package long description (#271, @YevhenLukomskyi)\n - Dump as raw values (#282, @Glandos)\n\n## carbonate\n\n### Bug Fixes\n - fix lint errors (PR#105, @YevhenLukomskyi)\n - specify long_description_content_type, so that package description is properly rendered on pypi.org (PR#104, @YevhenLukomskyi)\n\n### Features / Enhancements\n - Python 3 support (PR#107, @piotr1212)\n - Use –copy-dest, enabling the rsync algorithm when copying from remote to staging (PR#106, @luke-heberling)\n\n\n# 1.1.5\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_1_5.html\n\n# 1.1.4\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_1_4.html\n\n# 1.1.3\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_1_3.html\n\n# 1.1.2\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_1_2.html\n\n# 1.1.1\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_1_1.html\n\n# 1.0.2\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_0_2.html\n\n# 1.0.1\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_0_1.html\n\n# 1.0.0\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/1_0_0.html\n\n# 0.9.16\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_16.html\n\n# 0.9.15\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_15.html\n\n# 0.9.14\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_14.html\n\n# 0.9.12\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_12.html\n\n# 0.9.11\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_11.html\n\n# 0.9.10\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_10.html\n\n# 0.9.9\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_9.html\n\n# 0.9.8\n - See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_8.html\n\n# 0.9.7\n- See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_7.html\n\n# 0.9.6\n- See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_6.html\n\n# 0.9.5\n- See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_5.html\n\n# 0.9.4\n- See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_4.html\n\n# 0.9.3\n- See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_3.html\n\n# 0.9.2\n- See Release notes: https://graphite.readthedocs.io/en/latest/releases/0_9_2.html\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.1240234375,
          "content": "First of all, Welcome, and Thank You!\n\nGraphite has been a community project for years, and it only gets better by the efforts of people who volunteer.  We sincerely appreciate that you care enough to see a problem and take the time to make this project better.  Whether it's in the form of a bug report, code fix, or documentation improvement, we - the Graphite team - appreciate your help.\n\nThis is a collection of practices that will make it easier for us to accept your contributions.\n\n\n### Issues\n\nWhile not mandatory, opening an Issue against the appropriate repo is seldom a bad thing.  However, we would love if you would take a moment to search through the existing issues first.  It's entirely possible that the issue has already been reported, or even resolved.\n\nWhen opening a new issue, please write a descriptive report.  Terse but complete is best.  You should describe:\n\n* What you attempted\n* Expected Result\n* Witnessed Result\n* System Details\n  * OS / Version\n  * Python Version\n  * Django Version (a frequent cause of issues)\n  * Graphite Component Versions (or commit hash if running directly from the repo)\n    * If the graphite components were installed via pip, `pip list` will show the versions.\n    * Graphite-Web has a `/version/` endpoint that returns the version.  For example `curl http://mygraphite/version/`\n\n\n### Tests\n\nWe are always looking to improve our test coverage.  New tests will be appreciated and quickly reviewed for inclusion.\n\n\n### Code\n\nIf you see a mistake, have a feature, or a performance gain, we'd love to see it.  It's _strongly_ encouraged for contributions that aren't already covered by tests to come with them.  We're not trying to foist work on to you, but it makes it much easier for us to accept your contributions.\n\nTo set up your development environment, see the instructions in requirements.txt\n\n### Documentation\n\nGraphite has historically not had great docs.  It still doesn't.  The good news is that docs are easy to contribute.\n\nEven if you don't know the intricacies of ReStructured Text (ReST), bare unformatted paragraphs are better than nothing!\n\nEnglish not your primary language?  We'll work with you.\n"
        },
        {
          "name": "CONTRIBUTING_FOR_COMMITTERS.md",
          "type": "blob",
          "size": 0.7099609375,
          "content": "First of all, Welcome, and Thank You!\n\nI don't know about you, but I'm in it for all of the glory that @obfuscurity promised...\n\nThe team has grown some in the last year or so, so let's get some ground rules:\n\n* Be polite to the community.\n* We are part of the community.\n* Don't commit directly to the public repo.  Please Fork and PR.\n* Unless things are publicly broken and nobody else is around to validate, don't merge your own PR.\n* If you're going to do something directly on the main repo, or something Meta (tags, releases, etc), other people should probably know about it. When in doubt, check with @deniszh, @DanCech or @piotr1212.\n* Please update global CHANGELOG.md with your changes\n* Be polite to the community.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1123046875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2008-2012 Chris Davis; 2011-2020 The Graphite Project\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.369140625,
          "content": "include LICENSE\ninclude README.md\ninclude MANIFEST.in\ninclude check-dependencies.py\ninclude examples/*\ninclude conf/*.example\ninclude webapp/graphite/local_settings.py.example\nrecursive-include distro/ *\nrecursive-include webapp/graphite/ *.html\nrecursive-include webapp/content/ *\nrecursive-include webapp/tests/ *\nexclude webapp/graphite/local_settings.py\nexclude conf/*.conf\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.544921875,
          "content": "# Graphite-Web\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/5e94ef79c2ea441aaf209cfb2851849e)](https://www.codacy.com/app/graphite-project/graphite-web?utm_source=github.com&utm_medium=referral&utm_content=graphite-project/graphite-web&utm_campaign=badger)\n[![Build Status](https://travis-ci.org/graphite-project/graphite-web.png?branch=master)](https://travis-ci.org/graphite-project/graphite-web)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web?ref=badge_shield)\n[![codecov](https://codecov.io/gh/graphite-project/graphite-web/branch/master/graph/badge.svg)](https://codecov.io/gh/graphite-project/graphite-web)\n\n## Overview\n\nGraphite consists of three major components:\n\n1. Graphite-Web, a Django-based web application that renders graphs and dashboards\n2. The [Carbon](https://github.com/graphite-project/carbon) metric processing daemons\n3. The [Whisper](https://github.com/graphite-project/whisper) time-series database library\n\n![Graphite Components](https://github.com/graphite-project/graphite-web/raw/master/webapp/content/img/overview.png \"Graphite Components\")\n\n## Installation, Configuration and Usage\n\nPlease refer to the instructions at [readthedocs](http://graphite.readthedocs.io/).\n\n## License\n\nGraphite-Web is licensed under version 2.0 of the Apache License. See the [LICENSE](https://github.com/graphite-project/graphite-web/blob/master/LICENSE) file for details.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "check-dependencies.py",
          "type": "blob",
          "size": 5.9736328125,
          "content": "#!/usr/bin/env python\n\nimport sys\n\nif sys.version_info <= (2,7):\n    # SystemExit defaults to returning 1 when printing a string to stderr\n    raise SystemExit(\"You are using python %s, but version 2.7 or greater is \"\n                     \"required\" % sys.version_info)\n\nrequired = 0\noptional = 0\n\n\ndef versiontuple(v):\n    return tuple(map(int, (v.split(\".\"))))\n\n\n# Test for whisper\ntry:\n    import whisper\nexcept ImportError:\n    # No? test for ceres\n    try:\n        import ceres\n        # We imported ceres, but not whisper so it's an optional dependency\n        sys.stderr.write(\"[OPTIONAL] Unable to import the 'whisper' module. \"\n                         \"Without it the webapp will be unable to read .wsp files\\n\")\n        optional += 1\n    except ImportError:\n        sys.stderr.write(\"[REQUIRED] Unable to import the 'whisper' or 'ceres' modules, \"\n                         \"please download this package from the Graphite project page and install it.\\n\")\n        required += 1\n\n\n# Test for cairocffi or pycairo\ntry:\n    import cairocffi as cairo\nexcept ImportError:\n    sys.stderr.write(\"[REQUIRED] Unable to import the 'cairocffi' module, attempting to fall back to pycairo\\n\")\n    try:\n        import cairo\n    except ImportError:\n        sys.stderr.write(\"[REQUIRED] Unable to import the 'cairo' module, \"\n                         \"do you have pycairo installed for python %s?\\n\" % sys.version_info.major)\n        cairo = None\n        required += 1\n\n\n# Test that pycairo has the PNG backend\ntry:\n    if cairo:\n        surface = cairo.ImageSurface(cairo.FORMAT_ARGB32, 10, 10)\n        del surface\nexcept Exception:\n    sys.stderr.write(\"[REQUIRED] Failed to create an ImageSurface with cairo, \"\n                     \"you probably need to recompile cairo with PNG support\\n\")\n    required += 1\n\n\n# Test that cairo can find fonts\ntry:\n    if cairo:\n        surface = cairo.ImageSurface(cairo.FORMAT_ARGB32, 10, 10)\n        context = cairo.Context(surface)\n        context.font_extents()\n        del surface, context\nexcept Exception:\n    sys.stderr.write(\"[REQUIRED] Failed to create text with cairo, \"\n                     \"this probably means cairo cant find any fonts. \"\n                     \"Install some system fonts and try again\\n\")\n\n\n# Test for django\ntry:\n    import django\nexcept ImportError:\n    sys.stderr.write(\"[REQUIRED] Unable to import the 'django' module, \"\n                     \"do you have Django installed for python %s?\\n\" % sys.version_info.major)\n    django = None\n    required += 1\n\n\n# Test for pytz\ntry:\n    import pytz\nexcept ImportError:\n    sys.stderr.write(\"[REQUIRED] Unable to import the 'pytz' module, \"\n                     \"do you have pytz module installed for python %s?\\n\" % sys.version_info.major)\n    required += 1\n\n\n# Test for pyparsing\ntry:\n    import pyparsing\nexcept ImportError:\n    sys.stderr.write(\"[REQUIRED] Unable to import the 'pyparsing' module, \"\n                     \"do you have pyparsing module installed for python %s?\\n\" % sys.version_info.major)\n    required += 1\nif versiontuple(pyparsing.__version__) < versiontuple(\"2.3.0\"):\n    sys.stderr.write(\"[REQUIRED] You have pyparsing version %s installed, \"\n                     \"but version 2.3.0 or greater is required\\n\" % pyparsing.__version__)\n    required += 1\n\n\n# Test for django-tagging\ntry:\n    import tagging\nexcept ImportError:\n    sys.stderr.write(\"[REQUIRED] Unable to import the 'tagging' module, \"\n                     \"do you have django-tagging installed for python %s?\\n\" % sys.version_info.major)\n    required += 1\n\n\nif django and django.VERSION[:2] < (4,2):\n    sys.stderr.write(\"[REQUIRED] You have django version %s installed, \"\n                     \"but version 4.2 or greater is required\\n\" % django.get_version())\n    required += 1\n\n\n# Test for python-memcached\ntry:\n    import memcache\nexcept ImportError:\n    sys.stderr.write(\"[OPTIONAL] Unable to import the 'memcache' module, \"\n                     \"do you have python-memcached installed for python %s? \"\n                     \"This feature is not required but greatly improves performance.\\n\" % sys.version_info.major)\n    optional += 1\n\n\n# Test for python-ldap\ntry:\n    import ldap\nexcept ImportError:\n    sys.stderr.write(\"[OPTIONAL] Unable to import the 'ldap' module, \"\n                     \"do you have python-ldap installed for python %s? \"\n                     \"Without python-ldap, you will not be able to use \"\n                     \"LDAP authentication in the graphite webapp.\\n\" % sys.version_info.major)\n    optional += 1\n\n\n# Test for txamqp\ntry:\n    import txamqp\nexcept ImportError:\n    sys.stderr.write(\"[OPTIONAL] Unable to import the 'txamqp' module, \"\n                     \"this is required if you want to use AMQP as an input to Carbon. \"\n                     \"Note that txamqp requires python 2.5 or greater.\\n\")\n    optional += 1\n\n\n# Test for python-rrdtool\ntry:\n    import rrdtool\nexcept ImportError:\n    sys.stderr.write(\"[OPTIONAL] Unable to import the 'python-rrdtool' module, this is required for reading RRD.\\n\")\n    optional += 1\n\n\n# Test for whitenoise\ntry:\n    import whitenoise\nexcept ImportError:\n    sys.stderr.write(\"[OPTIONAL] Unable to import the 'whitenoise' module. This is useful for serving static files.\\n\")\n    optional += 1\n\n\n# Test for pyhash\ntry:\n    import pyhash\nexcept ImportError:\n    sys.stderr.write(\"[OPTIONAL] Unable to import the 'pyhash' module. This is useful for fnv1_ch hashing support.\\n\")\n    optional += 1\n\n\nif optional:\n    sys.stderr.write(\"%d optional dependencies not met. Please consider the optional items before proceeding.\\n\" % optional)\nelse:\n    print(\"All optional dependencies are met.\")\n\nif required:\n    sys.stderr.write(\"%d necessary dependencies not met. Graphite will not function until these dependencies are fulfilled.\\n\" % required)\n    sys.exit(1)\nelse:\n    print(\"All necessary dependencies are met.\")\n\n\n# suppress unused-import warnings\n__all__ = [\n    'whisper',\n    'ceres',\n    'cairo',\n    'django',\n    'pytz',\n    'pyparsing',\n    'tagging',\n    'memcache',\n    'ldap',\n    'txamqp',\n    'rrdtool',\n    'whitenoise',\n    'pyhash',\n]\n"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "distro",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 1.7109375,
          "content": "# This is a PIP requirements file.\n# To setup a dev environment:\n#\n#   If you use virtualenvwrapper, you can use the misc/virtualenvwrapper hook scripts to\n#   automate most of the following commands\n#\n#   easy_install virtualenv\n#   virtualenv --distribute --no-site-packages --prompt \"(graphite venv) \" --python=/usr/bin/python2.7 .venv\n#   source .venv/bin/activate\n#\n#   brew install cairo && brew link cairo # on OSX\n#   sudo apt-get install libcairo2-dev    # on Ubuntu\n#   pip install -r requirements.txt\n#\n#   mkdir -p .venv/storage/ceres .venv/storage/log/carbon-cache  .venv/conf\n#   touch .venv/conf/carbon.conf .venv/conf/storage-schemas.conf\n#   cp conf/graphTemplates.conf.example .venv/conf/graphTemplates.conf\n#   export GRAPHITE_ROOT=`pwd` GRAPHITE_STORAGE_DIR=`pwd`/.venv/storage/ GRAPHITE_CONF_DIR=`pwd`/.venv/conf/\n#\n#   git clone https://github.com/graphite-project/carbon.git ../carbon\n#   ../carbon/bin/carbon-cache.py start\n#   ../carbon/bin/carbon-cache.py status\n#\n#   mkdir -p .venv/storage/log/webapp /opt/graphite/storage/\n#   sudo chown -R $USER: /opt/graphite\n#   .venv/bin/django-admin.py migrate --run-syncdb --settings=graphite.settings --pythonpath=webapp\n#   bin/run-graphite-devel-server.py ./\n#   # or\n#   # cd webapp/graphite && $GRAPHITE_ROOT/.venv/bin/gunicorn_django -b 127.0.0.1:8080\n#\n# To clean up:\n#\n#   carbon/bin/carbon-cache.py stop\n#   unset GRAPHITE_ROOT GRAPHITE_STORAGE_DIR GRAPHITE_CONF_DIR\n#   deactivate\n#\n\nDjango>=4.2,<5\npython-memcached>=1.58\ntxAMQP>=0.8.2,<0.9\ndjango-tagging\ngunicorn\npytz\npyparsing>=2.3.0\ncairocffi\ngit+https://github.com/graphite-project/whisper.git#egg=whisper\n# Ceres is optional\n# git+https://github.com/graphite-project/ceres.git#egg=ceres\nwhitenoise==4.1.4\nurllib3\nsix\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 2.345703125,
          "content": "[bdist_rpm]\nrequires = Django => 1.8\n           django-tagging\n           carbon\n           whisper\n           ceres\n           mod_wsgi\n           pycairo\n           pycairo-devel\n           python-hashlib\n           pytz\n           pyparsing\n           scandir;python_version<\"3.5\"\n\npost_install = distro/redhat/misc/postinstall\n\nprovides = graphite\nobsoletes = graphite <= 0.9.9\n\n[flake8]\nexclude = .tox\n# ignore 4-space-indent rules for biggest files with most lines to change\nper-file-ignores =\n    webapp/graphite/util.py:E111,E114\n    webapp/graphite/browser/views.py:E111,E114\n    webapp/graphite/metrics/views.py:E111,E114\n    webapp/graphite/dashboard/views.py:E111,E114\n    webapp/graphite/render/evaluator.py:E111,E114\n    webapp/graphite/render/functions.py:E111,E114\n    webapp/graphite/render/datalib.py:E111,E114\n    webapp/graphite/render/glyph.py:E111,E114\n    webapp/graphite/render/views.py:E111,E114\n    webapp/tests/test_tags.py:E111,E114\n    webapp/tests/test_storage.py:E111,E114\n    webapp/tests/test_render_glyph.py:E111,E114\n    webapp/tests/test_render_datalib.py:E111,E114\n    webapp/tests/test_finders_remote.py:E111,E114\n    contrib/memcache_whisper.py:E111,E114\nignore =\n    # E121 continuation line under-indented for hanging indent\n    E121,\n    # E126 continuation line over-indented for hanging indent\n    E126,\n    # E128 continuation line under-indented for visual indent\n    E128,\n    # E201 whitespace after '('\n    E201,\n    # E202 whitespace before ')'\n    E202,\n    # E203 whitespace before ':'\n    E203,\n    # E221 multiple spaces before operator\n    E221,\n    # E222 multiple spaces after operator\n    E222,\n    # E225 missing whitespace around operator\n    E225,\n    # E226 missing whitespace around arithmetic operator\n    E226,\n    # E231 missing whitespace after ','\n    E231,\n    # E241 multiple spaces after ':'\n    E241,\n    # E251 unexpected spaces around keyword / parameter equals\n    E251,\n    # E261 at least two spaces before inline comment\n    E261,\n    # E262 inline comment should start with '# '\n    E262,\n    # E265 block comment should start with '# '\n    E265,\n    # E266 too many leading '#' for block comment\n    E266,\n    # E501 line too long\n    E501,\n    # W504 line break after binary operator\n    W504,\n    # E701 multiple statements on one line (colon)\n    E701,\n    # E731 do not assign a lambda expression, use a def\n    E731,\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.3115234375,
          "content": "#!/usr/bin/env python\n\nfrom __future__ import with_statement\n\nimport os\nfrom configparser import ConfigParser, DuplicateSectionError  # Python 3\n\nfrom glob import glob\nfrom collections import defaultdict\nfrom io import StringIO  # Python 3\n\n# Graphite historically has an install prefix set in setup.cfg. Being in a\n# configuration file, it's not easy to override it or unset it (for installing\n# graphite in a virtualenv for instance).\n# The prefix is now set by ``setup.py`` and *unset* if an environment variable\n# named ``GRAPHITE_NO_PREFIX`` is present.\n# While ``setup.cfg`` doesn't contain the prefix anymore, the *unset* step is\n# required for installations from a source tarball because running\n# ``python setup.py sdist`` will re-add the prefix to the tarball's\n# ``setup.cfg``.\nwith open('setup.cfg', 'r') as f:\n    orig_setup_cfg = f.read()\ncf = ConfigParser()\ncf.read_file(StringIO(orig_setup_cfg), 'setup.cfg')\n\nif os.environ.get('GRAPHITE_NO_PREFIX') or os.environ.get('READTHEDOCS'):\n    cf.remove_section('install')\nelse:\n    try:\n        cf.add_section('install')\n    except DuplicateSectionError:\n        pass\n    if not cf.has_option('install', 'prefix'):\n        cf.set('install', 'prefix', '/opt/graphite')\n    if not cf.has_option('install', 'install-lib'):\n        cf.set('install', 'install_lib', '%(prefix)s/webapp')\n\nwith open('setup.cfg', 'w') as f:\n    cf.write(f)\n\nif os.environ.get('USE_DISTUTILS'):\n    # skipcq: PYL-W0402\n    from distutils.core import setup\n    setup_kwargs = dict()\nelse:\n    from setuptools import setup\n    setup_kwargs = dict(zip_safe=0)\n\nstorage_dirs = []\n\nfor subdir in ('whisper/dummy.txt', 'ceres/dummy.txt', 'rrd/dummy.txt', 'log/dummy.txt', 'log/webapp/dummy.txt'):\n    storage_dirs.append( ('storage/%s' % subdir, []) )\n\nwebapp_content = defaultdict(list)\n\nfor root, dirs, files in os.walk('webapp/content'):\n    for filename in files:\n        filepath = os.path.join(root, filename)\n        webapp_content[root].append(filepath)\n\nconf_files = [('conf', glob('conf/*.example'))]\nexamples = [('examples', glob('examples/example-*'))]\n\n\ndef read(fname):\n    # skipcq: PTC-W6004\n    with open(os.path.join(os.path.dirname(__file__), fname)) as f:\n        return f.read()\n\n\ntry:\n    setup(\n      name='graphite-web',\n      version='1.2.0',\n      url='http://graphiteapp.org/',\n      author='Chris Davis',\n      author_email='chrismd@gmail.com',\n      license='Apache Software License 2.0',\n      description='Enterprise scalable realtime graphing',\n      long_description=read('README.md'),\n      long_description_content_type='text/markdown',\n      package_dir={'' : 'webapp'},\n      packages=[\n        'graphite',\n        'graphite.account',\n        'graphite.account.migrations',\n        'graphite.browser',\n        'graphite.composer',\n        'graphite.dashboard',\n        'graphite.dashboard.migrations',\n        'graphite.events',\n        'graphite.events.migrations',\n        'graphite.finders',\n        'graphite.functions',\n        'graphite.functions.custom',\n        'graphite.metrics',\n        'graphite.readers',\n        'graphite.render',\n        'graphite.tags',\n        'graphite.tags.migrations',\n        'graphite.url_shortener',\n        'graphite.url_shortener.migrations',\n        'graphite.version',\n        'graphite.whitelist',\n        'graphite.worker_pool',\n      ],\n      package_data={'graphite': ['templates/*', 'local_settings.py.example']},\n      scripts=glob('bin/*'),\n      data_files=list(webapp_content.items()) + storage_dirs + conf_files + examples,\n      install_requires=['Django>=3.2,<4', 'django-tagging==0.5.0', 'pytz',\n                        'pyparsing', 'cairocffi', 'urllib3', 'six'],\n      classifiers=[\n          'Intended Audience :: Developers',\n          'Natural Language :: English',\n          'License :: OSI Approved :: Apache Software License',\n          'Programming Language :: Python',\n          'Programming Language :: Python :: 3',\n          'Programming Language :: Python :: 3.7',\n          'Programming Language :: Python :: 3.8',\n          'Programming Language :: Python :: 3.9',\n          'Programming Language :: Python :: 3.10',\n          'Programming Language :: Python :: Implementation :: CPython',\n          'Programming Language :: Python :: Implementation :: PyPy',\n      ],\n      **setup_kwargs\n    )\nfinally:\n    with open('setup.cfg', 'w') as f:\n        f.write(orig_setup_cfg)\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.3984375,
          "content": "[gh-actions]\npython =\n    3.8: py38\n    3.9: py39\n    3.10: py310\n    3.11: py311\n    3.12: py312\n\n[tox]\nenvlist =\n  py{38,39,310,311,312},lint, docs\n\n[testenv]\nwhitelist_externals =\n\tmkdir\nsetenv =\n\tDJANGO_SETTINGS_MODULE=tests.settings\n\tPYTHONPATH={toxinidir}/webapp\n\tGRAPHITE_NO_PREFIX=true\n\tmysql: TEST_MYSQL=true\n\tpostgresql: TEST_POSTGRESQL=true\npassenv = TEST_MYSQL_* TEST_POSTGRESQL_* TEST_REDIS_*\nchangedir = webapp\ncommands =\n\tcoverage run --branch --source=graphite manage.py test {posargs}\n\tcoverage xml\n\tcoverage report\ndeps =\n\tcoverage\n\tcairocffi\n\tdjango-tagging\n\tpytz\n\tmock\n\tmsgpack-python\n\tgit+https://github.com/graphite-project/whisper.git#egg=whisper\n\tgit+https://github.com/graphite-project/ceres.git#egg=ceres\n\tpyparsing>=3.0.6\n\tDjango>=4.2,<5\n\turllib3\n\tredis\n\trrdtool\n\tmysql: mysqlclient\n\tpostgresql: psycopg2\n\tpyhash: pyhash\n\n[testenv:docs]\nbasepython = python3.10\nchangedir = docs\ndeps =\n\tcairocffi\n\tdjango-tagging\n\tpytz\n\tgit+https://github.com/graphite-project/whisper.git#egg=whisper\n\tgit+https://github.com/graphite-project/ceres.git#egg=ceres\n\tDjango<5\n\tpyparsing3: pyparsing>=3.0.6\n\talabaster==0.7.12\n\tSphinx==1.3.6\n\tjinja2<3.1.0\n\tsphinx_rtd_theme\n\turllib3\ncommands =\n\tmkdir -p {envsitepackagesdir}/../storage/ceres\n\tsphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html\n\n[testenv:lint]\nbasepython = python3.12\nchangedir = {toxinidir}\ndeps =\n\tflake8==3.7.9\ncommands =\n\tflake8 --show-source\n"
        },
        {
          "name": "webapp",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}