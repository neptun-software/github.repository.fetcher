{
  "metadata": {
    "timestamp": 1736562844179,
    "page": 413,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Freeboard/freeboard",
      "stars": 6456,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": ".idea\nnode_modules"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2958984375,
          "content": "FROM node:6\n\nRUN mkdir -p /usr/share/nginx/html\n\nCOPY . /usr/share/nginx/html/\n\nRUN chown -R node:node /usr/share/nginx/html\n\nUSER node\n\nWORKDIR /usr/share/nginx/html\n\nRUN npm install; \\\n    npm install grunt-cli underscore\n\nRUN ./node_modules/.bin/grunt\n\nVOLUME [\"/usr/share/nginx/html\"]\n\nCMD [\"bash\"]\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 3.69140625,
          "content": "module.exports = function(grunt) {\n    grunt.initConfig({\n        pkg: grunt.file.readJSON('package.json'),\n        concat: {\n            css: {\n                src: [\n                    'lib/css/thirdparty/*.css',\n                    'lib/css/freeboard/styles.css'\n                ],\n                dest: 'css/freeboard.css'\n            },\n            thirdparty : {\n                src : [\n                    [\n                        'lib/js/thirdparty/head.js',\n                        'lib/js/thirdparty/jquery.js',\n                        'lib/js/thirdparty/jquery-ui.js',\n                        'lib/js/thirdparty/knockout.js',\n                        'lib/js/thirdparty/underscore.js',\n                        'lib/js/thirdparty/jquery.gridster.js',\n                        'lib/js/thirdparty/jquery.caret.js',\n\t\t\t\t\t\t'lib/js/thirdparty/jquery.xdomainrequest.js',\n                        'lib/js/thirdparty/codemirror.js',\n                    ]\n                ],\n                dest : 'js/freeboard.thirdparty.js'\n            },\n\t\t\tfb : {\n\t\t\t\tsrc : [\n\t\t\t\t\t'lib/js/freeboard/DatasourceModel.js',\n\t\t\t\t\t'lib/js/freeboard/DeveloperConsole.js',\n\t\t\t\t\t'lib/js/freeboard/DialogBox.js',\n\t\t\t\t\t'lib/js/freeboard/FreeboardModel.js',\n\t\t\t\t\t'lib/js/freeboard/FreeboardUI.js',\n\t\t\t\t\t'lib/js/freeboard/JSEditor.js',\n\t\t\t\t\t'lib/js/freeboard/PaneModel.js',\n\t\t\t\t\t'lib/js/freeboard/PluginEditor.js',\n\t\t\t\t\t'lib/js/freeboard/ValueEditor.js',\n\t\t\t\t\t'lib/js/freeboard/WidgetModel.js',\n\t\t\t\t\t'lib/js/freeboard/freeboard.js',\n\t\t\t\t],\n\t\t\t\tdest : 'js/freeboard.js'\n\t\t\t},\n            plugins : {\n                src : [\n                    'plugins/freeboard/*.js'\n                ],\n                dest : 'js/freeboard.plugins.js'\n            },\n            'fb_plugins' : {\n                src : [\n                    'js/freeboard.js',\n                    'js/freeboard.plugins.js'\n                ],\n                dest : 'js/freeboard_plugins.js'\n            }\n        },\n        cssmin : {\n            css:{\n                src: 'css/freeboard.css',\n                dest: 'css/freeboard.min.css'\n            }\n        },\n        uglify : {\n            fb: {\n                files: {\n                    'js/freeboard.min.js' : [ 'js/freeboard.js' ]\n                }\n            },\n            plugins: {\n                files: {\n                    'js/freeboard.plugins.min.js' : [ 'js/freeboard.plugins.js' ]\n                }\n            },\n            thirdparty :{\n                options: {\n                    mangle : false,\n                    beautify : false,\n                    compress: {}\n                },\n                files: {\n                    'js/freeboard.thirdparty.min.js' : [ 'js/freeboard.thirdparty.js' ]\n                }\n            },\n            'fb_plugins': {\n                files: {\n                    'js/freeboard_plugins.min.js' : [ 'js/freeboard_plugins.js' ]\n                }\n            }\n        },\n        'string-replace': {\n            css: {\n                files: {\n                    'css/': 'css/*.css'\n                },\n                options: {\n                    replacements: [{\n                        pattern: /..\\/..\\/..\\/img/ig,\n                        replacement: '../img'\n                    }]\n                }\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-concat');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-cssmin');\n    grunt.loadNpmTasks('grunt-string-replace');\n    grunt.registerTask('default', [ 'concat:css', 'cssmin:css', 'concat:fb', 'concat:thirdparty', 'concat:plugins', 'concat:fb_plugins', 'uglify:fb', 'uglify:plugins', 'uglify:fb_plugins', 'uglify:thirdparty', 'string-replace:css' ]);\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0712890625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Jim Heising and Bug Labs, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.134765625,
          "content": "freeboard\n==========\n\n**free·board** (noun) *\\ˈfrē-ˌbȯrd\\*\n\n1. the distance between the waterline and the main deck or weather deck of a ship or between the level of the water and the upper edge of the side of a small boat.\n2. the act of freeing data from below the \"waterline\" and exposing it to the world.\n3. a damn-sexy, open source real-time dashboard builder/viewer for IOT and other web mashups.\n\n### Demo\nhttp://freeboard.github.io/freeboard\n\nhttps://freeboard.io\n\n### Screenshots\n![Weather](https://raw.github.com/Freeboard/branding/master/screenshots/freeboard-screenshot-1.jpg)\n\n### What is It?\n\nFreeboard is a turn-key HTML-based \"engine\" for dashboards. Besides a nice looking layout engine, it provides a plugin architecture for creating datasources (which fetch data) and widgets (which display data)— freeboard then does all the work to connect the two together. Another feature of freeboard is its ability to run entirely in the browser as a single-page static web app without the need for a server. The feature makes it extremely attractive as a front-end for embedded devices which may have limited ability to serve complex and dynamic web pages.\n\nThe code here is the client-side portion of what you see when you visit a freeboard at http://freeboard.io. It does not include any of the server-side code for user management, saving to a database or public/private functionality— this is left up to you to implement should you want to use freeboard as an online service.\n\n### How to Use\n\nFreeboard can be run entirely from a local hard drive. Simply download/clone the repository and open index.html. When using Chrome, you may run into issues with CORS when accessing JSON based APIs if you load from your local hard-drive— in this case you can switch to using JSONP or load index.html and run from a local or remote web server.\n\n1. git clone https://github.com/Freeboard/freeboard.git\n2. cd freeboard\n3. npm install\n4. grunt\n\nThen run a index.html or index-dev.html through a webserver.\n\n### API\n\nWhile freeboard runs as a stand-alone app out of the box, you can augment and control it from javascript with a simple API. All API calls are made on the `freeboard` singleton object.\n\n-------\n\n**freeboard.initialize(allowEdit, [callback])**\n\nMust be called first to initialize freeboard.\n\n> **allowEdit** (boolean) - Sets the initial state of freeboard to allow or disallow editing.\n\n> **callback** (function) - Function that will be called back when freeboard has finished initializing.\n\n-------\n\n**freeboard.newDashboard()**\n\nClear the contents of the freeboard and initialize a new dashboard.\n\n-------\n\n**freeboard.serialize()**\n\nSerializes the current dashboard and returns a javascript object.\n\n-------\n\n**freeboard.loadDashboard(configuration, [callback])**\n\nLoad the dashboard from a serialized dashboard object.\n\n> **configuration** (object) - A javascript object containing the configuration of a dashboard. Normally this will be an object that has been created and saved via the `freeboard.serialize()` function.\n\n> **callback** (function) - Function that will be called back when the dashboard has finished loading.\n\n-------\n\n**freeboard.setEditing(editing, animate)**\n\nProgramatically control the editing state of the of dashboard.\n\n> **editing** (bool) - Set to true or false to modify the view-only or editing state of the board.\n\n> **animate** (function) - Set to true or false to animate the modification of the editing state. This animates the top-tab dropdown (the part where you can edit datasources and such).\n\n-------\n\n**freeboard.isEditing()**\n\nReturns boolean depending on whether the dashboard is in in the view-only or edit state.\n\n-------\n\n**freeboard.loadDatasourcePlugin(plugin)**\n\nRegister a datasource plugin. See http://freeboard.github.io/freeboard/docs/plugin_example.html for information on creating plugins.\n\n> **plugin** (object) - A plugin definition object as defined at http://freeboard.github.io/freeboard/docs/plugin_example.html\n\n-------\n\n**freeboard.loadWidgetPlugin(plugin)**\n\nRegister a widget plugin. See http://freeboard.github.io/freeboard/docs/plugin_example.html for information on creating plugins.\n\n> **plugin** (object) - A plugin definition object as defined at http://freeboard.github.io/freeboard/docs/plugin_example.html\n\n-------\n\n**freeboard.showLoadingIndicator(show)**\n\nShow/hide the loading indicator. The loading indicator will display an indicator over the entire board that can be useful when you have some code that takes a while and you want to give a visual indication and to prevent the user from modifying the board.\n\n> **show** (boolean) - Set to true or false to show or hide the loading indicator.\n\n-------\n\n**freeboard.showDialog(contentElement, title, okButtonTitle, cancelButtonTitle, okCallback)**\n\nShow a styled dialog box with custom content.\n\n> **contentElement** (DOM or jquery element) - The DOM or jquery element to display within the content of the dialog box.\n\n> **title** (string) - The title of the dialog box displayed on the top left.\n\n> **okButtonTitle** (string) - The string to display in the button that will be used as the OK button. A null or undefined value will result in no button being displayed.\n\n> **cancelButtonTitle** (string) - The string to display in the button that will be used as the Cancel button. A null or undefined value will result in no button being displayed.\n\n> **okCallback** (function) - A function that will be called if the user presses the OK button.\n\n-------\n\n**freeboard.getDatasourceSettings(datasourceName)**\n\nReturns an object with the current settings for a datasource or null if no datasource with the given name is found.\n\n> **datasourceName** (string) - The name of a datasource in the dashboard.\n\n-------\n\n**freeboard.setDatasourceSettings(datasourceName, settings)**\n\nUpdates settings on a datasource.\n\n> **datasourceName** (string) - The name of a datasource in the dashboard.\n\n> **settings** (object) - An object of key-value pairs for the settings of the datasource. The values specified here will be combined with the current settings, so you do not need specify every setting if you only want to update one. To get a list of possible settings for a datasource, consult the datasource documentation or code, or call the freeboard.getDatasourceSettings function.\n\n-------\n\n**freeboard.on(eventName, callback)**\n\nAttach to a global freeboard event.\n\n> **eventName** (string) - The name of a global event. The following events are supported:\n\n> **\"dashboard_loaded\"** - Occurs after a dashboard has been loaded.\n\n> **\"initialized\"** - Occurs after freeboard has first been initialized.\n\n> **callback** (function) - The callback function to be called when the event occurs.\n\n-------\n\n### Building Plugins\n\nSee http://freeboard.github.io/freeboard/docs/plugin_example.html for info on how to build plugins for freeboard.\n\n### Testing Plugins\n\nJust edit index.html and add a link to your javascript file near the end of the head.js script loader, like:\n\n```javascript\n...\n\"path/to/my/plugin/file.js\",\n$(function()\n{ //DOM Ready\n    freeboard.initialize(true);\n});\n```\n\n### Copyright \n\nCopyright © 2013 Jim Heising (https://github.com/jheising)<br/>Copyright © 2013 Bug Labs, Inc. (http://buglabs.net)<br/>Licensed under the **MIT** license.\n\n---\n"
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.201171875,
          "content": "version: \"2\"\n\nservices:\n    nginx:\n        image: nginx:1.13\n        ports:\n            - \"8003:80\"\n        volumes_from:\n            - freeboard:ro\n    freeboard:\n        image: freeboard\n        build: .\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "index-dev.html",
          "type": "blob",
          "size": 8.1142578125,
          "content": "<!DOCTYPE html>\n<!-- Dev Version links to full versions (non-minified) of javascript and css files -->\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>freeboard</title>\n\t<meta name=\"mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n    <meta name=\"viewport\" content = \"width = device-width, initial-scale = 1, user-scalable = no\" />\n    <link href=\"lib/css/thirdparty/jquery.gridster.min.css\" rel=\"stylesheet\" />\n\t<link href=\"lib/css/thirdparty/codemirror.css\" rel=\"stylesheet\" />\n\t<link href=\"lib/css/thirdparty/codemirror-ambiance.css\" rel=\"stylesheet\" />\n    <link href=\"lib/css/freeboard/styles.css\" rel=\"stylesheet\" />\n    <script src=\"lib/js/thirdparty/head.js\"></script>\n    <script type=\"text/javascript\">\n        head.js(\"lib/js/thirdparty/knockout.js\",\n                \"lib/js/thirdparty/jquery.js\",\n                \"lib/js/thirdparty/jquery-ui.js\",\n                \"lib/js/thirdparty/underscore.js\",\n                \"lib/js/thirdparty/jquery.gridster.js\",\n                \"lib/js/thirdparty/jquery.caret.js\",\n\t\t\t\t\"lib/js/thirdparty/codemirror.js\",\n\t\t\t\t\"lib/js/thirdparty/jquery.xdomainrequest.js\",\n\n                \"lib/js/freeboard/FreeboardModel.js\",\n                \"lib/js/freeboard/DatasourceModel.js\",\n                \"lib/js/freeboard/PaneModel.js\",\n                \"lib/js/freeboard/WidgetModel.js\",\n                \"lib/js/freeboard/FreeboardUI.js\",\n                \"lib/js/freeboard/DialogBox.js\",\n                \"lib/js/freeboard/PluginEditor.js\",\n                \"lib/js/freeboard/ValueEditor.js\",\n                \"lib/js/freeboard/JSEditor.js\",\n                \"lib/js/freeboard/DeveloperConsole.js\",\n                \"lib/js/freeboard/freeboard.js\",\n\n                \"plugins/freeboard/freeboard.datasources.js\",\n                \"plugins/freeboard/freeboard.widgets.js\",\n                \"examples/plugin_example.js\",\n\n                // *** Load more plugins here ***\n                function(){\n                    $(function()\n                    { //DOM Ready\n\t\t\t\t\t\tfreeboard.setAssetRoot(\"/freeboard-ui/\");\n                        freeboard.initialize(true);\n                    });\n                });\n    </script>\n</head>\n<body>\n<div id=\"board-content\">\n    <img id=\"dash-logo\" data-bind=\"attr:{src: header_image}, visible:header_image()\">\n    <div class=\"gridster responsive-column-width\">\n        <ul data-bind=\"grid: true\">\n        </ul>\n    </div>\n</div>\n<header id=\"main-header\" data-bind=\"if:allow_edit\">\n    <div id=\"admin-bar\">\n        <div id=\"admin-menu\">\n            <div id=\"board-tools\">\n                <h1 id=\"board-logo\" class=\"title bordered\">freeboard</h1>\n                <div id=\"board-actions\">\n                    <ul class=\"board-toolbar vertical\">\n                        <li data-bind=\"click: loadDashboardFromLocalFile\"><i id=\"full-screen-icon\" class=\"icon-folder-open icon-white\"></i><label id=\"full-screen\">Load Freeboard</label></li>\n                        <li><i class=\"icon-download-alt icon-white\"></i>\n                            <label data-bind=\"click: saveDashboardClicked\">Save Freeboard</label>\n                            <label style=\"display: none;\" data-bind=\"click: saveDashboard\" data-pretty=\"true\">[Pretty]</label>\n                            <label style=\"display: none;\" data-bind=\"click: saveDashboard\" data-pretty=\"false\">[Minified]</label>\n                        </li>\n                        <li id=\"add-pane\" data-bind=\"click: createPane\"><i class=\"icon-plus icon-white\"></i><label>Add Pane</label></li>\n                    </ul>\n                </div>\n            </div>\n            <div id=\"datasources\">\n                <h2 class=\"title\">DATASOURCES</h2>\n\n                <div class=\"datasource-list-container\">\n                    <table class=\"table table-condensed sub-table\" id=\"datasources-list\" data-bind=\"if: datasources().length\">\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Last Updated</th>\n                            <th>&nbsp;</th>\n                        </tr>\n                        </thead>\n                        <tbody data-bind=\"foreach: datasources\">\n                        <tr>\n                            <td>\n                                <span class=\"text-button datasource-name\" data-bind=\"text: name, pluginEditor: {operation: 'edit', type: 'datasource'}\"></span>\n                            </td>\n                            <td data-bind=\"text: last_updated\"></td>\n                            <td>\n                                <ul class=\"board-toolbar\">\n                                    <li data-bind=\"click: updateNow\"><i class=\"icon-refresh icon-white\"></i></li>\n                                    <li data-bind=\"pluginEditor: {operation: 'delete', type: 'datasource'}\">\n                                        <i class=\"icon-trash icon-white\"></i></li>\n                                </ul>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <span class=\"text-button table-operation\" data-bind=\"pluginEditor: {operation: 'add', type: 'datasource'}\">ADD</span>\n            </div>\n        </div>\n    </div>\n\t<div id=\"column-tools\" class=\"responsive-column-width\">\n\t\t<ul class=\"board-toolbar left-columns\">\n\t\t\t<li class=\"column-tool add\" data-bind=\"click: addGridColumnLeft\"><span class=\"column-icon right\"></span><i class=\"icon-arrow-left icon-white\"></i></li>\n\t\t\t<li class=\"column-tool sub\" data-bind=\"click: subGridColumnLeft\"><span class=\"column-icon left\"></span><i class=\"icon-arrow-right icon-white\"></i></li>\n\t\t</ul>\n\t\t<ul class=\"board-toolbar right-columns\">\n\t\t\t<li class=\"column-tool sub\" data-bind=\"click: subGridColumnRight\"><span class=\"column-icon right\"></span><i class=\"icon-arrow-left icon-white\"></i></li>\n\t\t\t<li class=\"column-tool add\" data-bind=\"click: addGridColumnRight\"><span class=\"column-icon left\"></span><i class=\"icon-arrow-right icon-white\"></i></li>\n\t\t</ul>\n\t</div>\n    <div id=\"toggle-header\" data-bind=\"click: toggleEditing\">\n        <i id=\"toggle-header-icon\" class=\"icon-wrench icon-white\"></i>\n\t</div>\n</header>\n\n<div style=\"display:hidden\">\n    <ul data-bind=\"template: { name: 'pane-template', foreach: panes}\">\n    </ul>\n</div>\n\n<script type=\"text/html\" id=\"pane-template\">\n    <li data-bind=\"pane: true\">\n        <header>\n            <h1 data-bind=\"text: title\"></h1>\n            <ul class=\"board-toolbar pane-tools\">\n                <li data-bind=\"pluginEditor: {operation: 'add', type: 'widget'}\">\n                    <i class=\"icon-plus icon-white\"></i>\n                </li>\n                <li data-bind=\"pluginEditor: {operation: 'edit', type: 'pane'}\">\n                    <i class=\"icon-wrench icon-white\"></i>\n                </li>\n                <li data-bind=\"pluginEditor: {operation: 'delete', type: 'pane'}\">\n                    <i class=\"icon-trash icon-white\"></i>\n                </li>\n            </ul>\n        </header>\n        <section data-bind=\"foreach: widgets\">\n            <div class=\"sub-section\" data-bind=\"css: 'sub-section-height-' + height()\">\n                <div class=\"widget\" data-bind=\"widget: true, css:{fillsize:fillSize}\"></div>\n                <div class=\"sub-section-tools\">\n                    <ul class=\"board-toolbar\">\n                        <!-- ko if:$parent.widgetCanMoveUp($data) -->\n                        <li data-bind=\"click:$parent.moveWidgetUp\"><i class=\"icon-chevron-up icon-white\"></i></li>\n                        <!-- /ko -->\n                        <!-- ko if:$parent.widgetCanMoveDown($data) -->\n                        <li data-bind=\"click:$parent.moveWidgetDown\"><i class=\"icon-chevron-down icon-white\"></i></li>\n                        <!-- /ko -->\n                        <li data-bind=\"pluginEditor: {operation: 'edit', type: 'widget'}\"><i class=\"icon-wrench icon-white\"></i></li>\n                        <li data-bind=\"pluginEditor: {operation: 'delete', type: 'widget'}\"><i class=\"icon-trash icon-white\"></i></li>\n                    </ul>\n                </div>\n            </div>\n        </section>\n    </li>\n</script>\n\n</body>\n</html>\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 7.1435546875,
          "content": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>freeboard</title>\n\t<meta name=\"mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n    <meta name=\"viewport\" content = \"width = device-width, initial-scale = 1, user-scalable = no\" />\n    <link href=\"css/freeboard.min.css\" rel=\"stylesheet\" />\n    <script src=\"js/freeboard.thirdparty.min.js\"></script>\n    <script type=\"text/javascript\">\n        head.js(\"js/freeboard_plugins.min.js\",\n                // *** Load more plugins here ***\n                function(){\n                    $(function()\n                    { //DOM Ready\n                        freeboard.initialize(true);\n\n                        var hashpattern = window.location.hash.match(/(&|#)source=([^&]+)/);\n                        if (hashpattern !== null) {\n                            $.getJSON(hashpattern[2], function(data) {\n                                freeboard.loadDashboard(data, function() {\n                                    freeboard.setEditing(false);\n                                });\n                            });\n                        }\n\n                    });\n                });\n    </script>\n</head>\n<body>\n<div id=\"board-content\">\n    <img id=\"dash-logo\" data-bind=\"attr:{src: header_image}, visible:header_image()\">\n    <div class=\"gridster responsive-column-width\">\n        <ul data-bind=\"grid: true\">\n        </ul>\n    </div>\n</div>\n<header id=\"main-header\" data-bind=\"if:allow_edit\">\n    <div id=\"admin-bar\">\n        <div id=\"admin-menu\">\n            <div id=\"board-tools\">\n                <h1 id=\"board-logo\" class=\"title bordered\">freeboard</h1>\n                <div id=\"board-actions\">\n                    <ul class=\"board-toolbar vertical\">\n                        <li data-bind=\"click: loadDashboardFromLocalFile\"><i id=\"full-screen-icon\" class=\"icon-folder-open icon-white\"></i><label id=\"full-screen\">Load Freeboard</label></li>\n                        <li><i class=\"icon-download-alt icon-white\"></i>\n                            <label data-bind=\"click: saveDashboardClicked\">Save Freeboard</label>\n                            <label style=\"display: none;\" data-bind=\"click: saveDashboard\" data-pretty=\"true\">[Pretty]</label>\n                            <label style=\"display: none;\" data-bind=\"click: saveDashboard\" data-pretty=\"false\">[Minified]</label>\n                        </li>\n                        <li id=\"add-pane\" data-bind=\"click: createPane\"><i class=\"icon-plus icon-white\"></i><label>Add Pane</label></li>\n                    </ul>\n                </div>\n            </div>\n            <div id=\"datasources\">\n                <h2 class=\"title\">DATASOURCES</h2>\n\n                <div class=\"datasource-list-container\">\n                    <table class=\"table table-condensed sub-table\" id=\"datasources-list\" data-bind=\"if: datasources().length\">\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Last Updated</th>\n                            <th>&nbsp;</th>\n                        </tr>\n                        </thead>\n                        <tbody data-bind=\"foreach: datasources\">\n                        <tr>\n                            <td>\n                                <span class=\"text-button datasource-name\" data-bind=\"text: name, pluginEditor: {operation: 'edit', type: 'datasource'}\"></span>\n                            </td>\n                            <td data-bind=\"text: last_updated\"></td>\n                            <td>\n                                <ul class=\"board-toolbar\">\n                                    <li data-bind=\"click: updateNow\"><i class=\"icon-refresh icon-white\"></i></li>\n                                    <li data-bind=\"pluginEditor: {operation: 'delete', type: 'datasource'}\">\n                                        <i class=\"icon-trash icon-white\"></i></li>\n                                </ul>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <span class=\"text-button table-operation\" data-bind=\"pluginEditor: {operation: 'add', type: 'datasource'}\">ADD</span>\n            </div>\n        </div>\n    </div>\n\t<div id=\"column-tools\" class=\"responsive-column-width\">\n\t\t<ul class=\"board-toolbar left-columns\">\n\t\t\t<li class=\"column-tool add\" data-bind=\"click: addGridColumnLeft\"><span class=\"column-icon right\"></span><i class=\"icon-arrow-left icon-white\"></i></li>\n\t\t\t<li class=\"column-tool sub\" data-bind=\"click: subGridColumnLeft\"><span class=\"column-icon left\"></span><i class=\"icon-arrow-right icon-white\"></i></li>\n\t\t</ul>\n\t\t<ul class=\"board-toolbar right-columns\">\n\t\t\t<li class=\"column-tool sub\" data-bind=\"click: subGridColumnRight\"><span class=\"column-icon right\"></span><i class=\"icon-arrow-left icon-white\"></i></li>\n\t\t\t<li class=\"column-tool add\" data-bind=\"click: addGridColumnRight\"><span class=\"column-icon left\"></span><i class=\"icon-arrow-right icon-white\"></i></li>\n\t\t</ul>\n\t</div>\n    <div id=\"toggle-header\" data-bind=\"click: toggleEditing\">\n        <i id=\"toggle-header-icon\" class=\"icon-wrench icon-white\"></i></div>\n</header>\n\n<div style=\"display:hidden\">\n    <ul data-bind=\"template: { name: 'pane-template', foreach: panes}\">\n    </ul>\n</div>\n\n<script type=\"text/html\" id=\"pane-template\">\n    <li data-bind=\"pane: true\">\n        <header>\n            <h1 data-bind=\"text: title\"></h1>\n            <ul class=\"board-toolbar pane-tools\">\n                <li data-bind=\"pluginEditor: {operation: 'add', type: 'widget'}\">\n                    <i class=\"icon-plus icon-white\"></i>\n                </li>\n                <li data-bind=\"pluginEditor: {operation: 'edit', type: 'pane'}\">\n                    <i class=\"icon-wrench icon-white\"></i>\n                </li>\n                <li data-bind=\"pluginEditor: {operation: 'delete', type: 'pane'}\">\n                    <i class=\"icon-trash icon-white\"></i>\n                </li>\n            </ul>\n        </header>\n        <section data-bind=\"foreach: widgets\">\n            <div class=\"sub-section\" data-bind=\"css: 'sub-section-height-' + height()\">\n                <div class=\"widget\" data-bind=\"widget: true, css:{fillsize:fillSize}\"></div>\n                <div class=\"sub-section-tools\">\n                    <ul class=\"board-toolbar\">\n                        <!-- ko if:$parent.widgetCanMoveUp($data) -->\n                        <li data-bind=\"click:$parent.moveWidgetUp\"><i class=\"icon-chevron-up icon-white\"></i></li>\n                        <!-- /ko -->\n                        <!-- ko if:$parent.widgetCanMoveDown($data) -->\n                        <li data-bind=\"click:$parent.moveWidgetDown\"><i class=\"icon-chevron-down icon-white\"></i></li>\n                        <!-- /ko -->\n                        <li data-bind=\"pluginEditor: {operation: 'edit', type: 'widget'}\"><i class=\"icon-wrench icon-white\"></i></li>\n                        <li data-bind=\"pluginEditor: {operation: 'delete', type: 'widget'}\"><i class=\"icon-trash icon-white\"></i></li>\n                    </ul>\n                </div>\n            </div>\n        </section>\n    </li>\n</script>\n\n</body>\n</html>\n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.298828125,
          "content": "{\n  \"name\": \"freeboard\",\n  \"title\": \"freeboard\",\n  \"version\": \"1.1.3\",\n  \"devDependencies\": {\n    \"grunt\": \"0.4.1\",\n    \"grunt-contrib-concat\": \"0.1.3\",\n    \"grunt-contrib-cssmin\": \"0.6.1\",\n    \"grunt-contrib-watch\": \"0.5.3\",\n    \"grunt-contrib-uglify\": \"0.6.0\",\n    \"grunt-string-replace\": \"^0.2.7\"\n  }\n}\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}