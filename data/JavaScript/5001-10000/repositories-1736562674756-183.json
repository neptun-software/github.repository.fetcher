{
  "metadata": {
    "timestamp": 1736562674756,
    "page": 183,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/anyproxy",
      "stars": 7873,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0439453125,
          "content": "node_modules\ndist\nweb\nweb2\nresource\n*.sh\ndocs"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 2.0341796875,
          "content": "{\n  \"extends\": \"airbnb\",\n  \"parser\": \"babel-eslint\",\n  \"env\": {\n    \"browser\": true,\n    \"node\": true,\n    \"es6\": true,\n    \"jest\": true\n  },\n  \"globals\": {\n    \"React\": true,\n    \"ReactDOM\": true,\n    \"Zepto\": true,\n    \"JsBridgeUtil\": true\n  },\n  \"rules\": {\n    \"semi\": [0],\n    \"comma-dangle\": [0],\n    \"global-require\": [0],\n    \"no-alert\": [0],\n    \"no-console\": [0],\n    \"no-param-reassign\": [0],\n    \"max-len\": [0],\n    \"func-names\": [0],\n    \"no-underscore-dangle\": [0],\n    \"no-unused-vars\": [\"error\", { \"vars\": \"all\", \"args\": \"none\", \"ignoreRestSiblings\": false }],\n    \"object-shorthand\": [0],\n    \"arrow-body-style\": [0],\n    \"no-new\": [0],\n    \"strict\": [0],\n    \"no-script-url\": [0],\n    \"spaced-comment\": [0],\n    \"no-empty\": [0],\n    \"no-constant-condition\": [0],\n    \"no-else-return\": [0],\n    \"no-use-before-define\": [0],\n    \"no-unused-expressions\": [0],\n    \"no-class-assign\": [0],\n    \"new-cap\": [0],\n    \"array-callback-return\": [0],\n    \"prefer-template\": [0],\n    \"no-restricted-syntax\": [0],\n    \"no-trailing-spaces\": [0],\n    \"import/no-unresolved\": [0],\n    \"jsx-a11y/img-has-alt\": [0],\n    \"camelcase\": [0],\n    \"consistent-return\": [0],\n    \"guard-for-in\": [0],\n    \"one-var\": [0],\n    \"react/wrap-multilines\": [0],\n    \"react/no-multi-comp\": [0],\n    \"react/jsx-no-bind\": [0],\n    \"react/prop-types\": [0],\n    \"react/prefer-stateless-function\": [0],\n    \"react/jsx-first-prop-new-line\": [0],\n    \"react/sort-comp\": [0],\n    \"import/no-extraneous-dependencies\": [0],\n    \"import/extensions\": [0],\n    \"react/forbid-prop-types\": [0],\n    \"react/require-default-props\": [0],\n    \"class-methods-use-this\": [0],\n    \"jsx-a11y/no-static-element-interactions\": [0],\n    \"react/no-did-mount-set-state\": [0],\n    \"jsx-a11y/alt-text\": [0],\n    \"import/no-dynamic-require\": [0],\n    \"no-extra-boolean-cast\": [0],\n    \"no-lonely-if\": [0],\n    \"no-plusplus\": [0],\n    \"generator-star-spacing\": [\"error\", {\"before\": true, \"after\": false}],\n    \"require-yield\": [0],\n    \"arrow-parens\": [0],\n    \"no-template-curly-in-string\": [0],\n    \"no-mixed-operators\": [0]\n  }\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.419921875,
          "content": "cert/**/*.srl\ncert/**/*.key\ncert/**/*.crt\ncert/**/*.csr\nweb/build/.module-cache/\ntest/report/*.txt\ntmp.txt\n.*.swp\n._*\n.DS_Store\n.vscode\n.git\n.hg\n.lock-wscript\n.svn\n.wafpickle-*\n.vscode\nCVS\nnpm-debug.log\nlogs\n*.log\npids\n*.pid\n*.seed\nlib-cov\ncoverage\n.grunt\nbuild/Release\nnode_modules\n.lock-wscript\ntemp\ndist\ntest/report\n*.tgz\ndoc_compiled.md\ndocs-md/cn/doc.md\ndocs-md/en/doc.md\ndocs/gitbook/gitbook-plugin-livereload/\nnode_modules\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.2783203125,
          "content": "cert/**/*.srl\ncert/**/*.key\ncert/**/*.crt\ncert/**/*.csr\nweb/build/.module-cache/\ntmp.txt\n.*.swp\n._*\n.DS_Store\n.git\n.hg\n.lock-wscript\n.svn\n.wafpickle-*\nCVS\nnpm-debug.log\nlogs\n*.log\npids\n*.pid\n*.seed\nlib-cov\ncoverage\n.grunt\nnode_modules\n.lock-wscript\ntemp\nreleases\nrule_sample\ntest\n*.tgz"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.076171875,
          "content": "language: node_js\nnode_js:\n  - 12\nbefore_script:\n  - node ./bin/anyproxy-ca -g"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 3.166015625,
          "content": "22 Dec 2016: AnyProxy 4.0.0-beta:\n\n    * to AnyProxy rules: all the rule interfaces are asynchronous now, you can write them in a Promise way\n    * to the UI, rewrite the code and enhance the user experience\n\n26 Feb 2016: AnyProxy 3.10.4:\n\n   * let users assign the port for web socket in AnyProxy cli\n\n19 Sep 2016: AnyProxy 3.10.3:\n\n    * fix the cert path issue with Windows\n    * split out the cert management to an independent module\n    * add unit tests to AnyProxy\n\n29 Apr 2016: AnyProxy 3.10.0:\n\n    * using node-forge to generate HTTPS certificates instead of openssl\n\n29 Apr 2016: AnyProxy 3.9.1:\n\n    * update SHA1 to SHA256 for openssl certificates\n\n19 Nov 2015: AnyProxy 3.8.1:\n\n    * bugfix for image content in web GUI\n\n19 Nov 2015: AnyProxy 3.8.1:\n\n    * bugfix for image content in web GUI\n\n16 Nov 2015: AnyProxy 3.8.0:\n\n    * optimize the memory strategy\n\n2 Oct 2015: AnyProxy 3.7.7:\n\n    * bugfix for proxy.close() ref #36\n\n9 Sep 2015: AnyProxy 3.7.6:\n\n    * optimize detail panel, ref #35\n\n3 Sep 2015: AnyProxy 3.7.5:\n\n    * bugfix for intercepting urls like http://a.com?url=http://b.com\n\n19 Aug 2015: AnyProxy 3.7.4:\n\n    * bugfix for intercepting urls like http://a.com?url=http://b.com\n\n31 July 2015: AnyProxy 3.7.3:\n\n    * show lastest 100 records when visit the web ui\n    * save map-local config file to local file\n    * show an indicator when filter or map-local is in use\n\n31 July 2015: AnyProxy 3.7.2:\n\n    * bugfix for issue #29\n\n28 July 2015: AnyProxy 3.7.1:\n\n    * fix a bug about deflate compression\n\n20 July 2015: AnyProxy 3.7.0:\n\n    * add a map-local panel on web ui, now you can easily map some request to your local files\n\n1 July 2015: AnyProxy 3.6.0:\n\n    * add a filter on web ui\n\n1 July 2015: AnyProxy 3.5.2:\n\n    * optimize the row height on web ui\n\n18 June 2015: AnyProxy 3.5.1:\n\n    * print a hint when using SNI features in node <0.12\n    * Ref : https://github.com/alibaba/anyproxy/issues/25\n\n18 June 2015: AnyProxy 3.5.0:\n\n    * it's a formal release of 3.4.0@beta.\n\n27 Apr 2015: AnyProxy 3.4.0@beta:\n\n    * optimize web server and web socket interface\n\n20 Apr 2015: AnyProxy 3.3.1:\n\n    * now you can assign your own port for web gui\n\n31 Mar 2015: AnyProxy 3.3.0:\n\n    * optimize https features in windows\n    * add switch to mute the console\n\n20 Mar 2015: AnyProxy 3.2.5:\n\n    * bugfix for internal https server\n\n19 Mar 2015: AnyProxy 3.2.4:\n\n    * bugfix for absolute rule path\n\n23 Feb 2015: AnyProxy 3.2.2:\n\n    * [bugfix for relative rule path](https://github.com/alibaba/anyproxy/pull/18)\n\n10 Feb 2015: AnyProxy 3.2.1:\n\n    * bugfix for 3.2.0\n\n10 Feb 2015: AnyProxy 3.2.0:\n\n    * using SNI when intercepting https requests\n\n28 Jan 2015: AnyProxy 3.1.2:\n\n    * thanks to iconv-lite, almost webpage with any charset can be correctly decoded in web interface.\n\n28 Jan 2015: AnyProxy 3.1.1:\n\n    * convert GBK to UTF8 in web interface\n\n22 Jan 2015: AnyProxy 3.1.0:\n\n    * will NOT intercept https request by default. Use ``anyproxy --intercept`` to turn on this feature.\n\n12 Jan 2015: AnyProxy 3.0.4:\n\n    * show anyproxy version by --version\n\n12 Jan 2015: AnyProxy 3.0.3:\n\n    * Bugfix: https throttle\n\n9 Jan 2015: AnyProxy 3.0.2:\n\n    * UI improvement: add link and qr code to root CA file.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.1337890625,
          "content": "AnyProxy\n----------------\n\n[![NPM version][npm-image]][npm-url]\n[![node version][node-image]][node-url]\n[![npm download][download-image]][download-url]\n[![Build Status](https://travis-ci.org/alibaba/anyproxy.svg?branch=master)](https://travis-ci.org/alibaba/anyproxy)\n\n[npm-image]: https://img.shields.io/npm/v/anyproxy.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/anyproxy\n[node-image]: https://img.shields.io/badge/node.js-%3E=_6.0.0-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/anyproxy.svg?style=flat-square\n[download-url]: https://npmjs.org/package/anyproxy\n\nAnyProxy is A fully configurable HTTP/HTTPS proxy in NodeJS.\n\nHome page : [AnyProxy.io](http://anyproxy.io)\n\nIssue: https://github.com/alibaba/anyproxy/issues\n\nAnyProxy是一个基于NodeJS的，可供插件配置的HTTP/HTTPS代理服务器。\n\n主页：[AnyProxy.io](http://anyproxy.io)，访问可能需要稳定的国际网络环境\n\n![](https://gw.alipayobjects.com/zos/rmsportal/gUfcjGxLONndTfllxynC.jpg@_90q)\n\n----------------\n\nLegacy doc of version 3.x : https://github.com/alibaba/anyproxy/wiki/3.x-docs"
        },
        {
          "name": "babel.config.js",
          "type": "blob",
          "size": 0.1494140625,
          "content": "if (process.env.NODE_ENV === 'test') {\n  module.exports = {};\n} else {\n  module.exports = {\n    presets: [\n      'es2015',\n      'stage-0'\n    ]\n  };\n}\n\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs-src",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 6.185546875,
          "content": "// For a detailed explanation regarding each configuration property, visit:\n// https://jestjs.io/docs/en/configuration.html\n\nmodule.exports = {\n  testTimeout: 10 * 1000,\n  // All imported modules in your tests should be mocked automatically\n  // automock: false,\n\n  // Stop running tests after `n` failures\n  // bail: 0,\n\n  // Respect \"browser\" field in package.json when resolving modules\n  // browser: false,\n\n  // The directory where Jest should store its cached dependency information\n  // cacheDirectory: \"/private/var/folders/dn/t1cpcmtx6ng82d7qf8b02w7r0000gn/T/jest_dx\",\n\n  // Automatically clear mock calls and instances between every test\n  clearMocks: true,\n\n  // Indicates whether the coverage information should be collected while executing the test\n  // collectCoverage: false,\n\n  // An array of glob patterns indicating a set of files for which coverage information should be collected\n  // collectCoverageFrom: null,\n\n  // The directory where Jest should output its coverage files\n  coverageDirectory: 'coverage',\n\n  // An array of regexp pattern strings used to skip coverage collection\n  // coveragePathIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // A list of reporter names that Jest uses when writing coverage reports\n  // coverageReporters: [\n  //   \"json\",\n  //   \"text\",\n  //   \"lcov\",\n  //   \"clover\"\n  // ],\n\n  // An object that configures minimum threshold enforcement for coverage results\n  // coverageThreshold: null,\n\n  // A path to a custom dependency extractor\n  // dependencyExtractor: null,\n\n  // Make calling deprecated APIs throw helpful error messages\n  // errorOnDeprecated: false,\n\n  // Force coverage collection from ignored files using an array of glob patterns\n  // forceCoverageMatch: [],\n\n  // A path to a module which exports an async function that is triggered once before all test suites\n  // globalSetup: null,\n\n  // A path to a module which exports an async function that is triggered once after all test suites\n  // globalTeardown: null,\n\n  // A set of global variables that need to be available in all test environments\n  // globals: {},\n\n  // The maximum amount of workers used to run your tests. Can be specified as % or a number. E.g. maxWorkers: 10% will use 10% of your CPU amount + 1 as the maximum worker number. maxWorkers: 2 will use a maximum of 2 workers.\n  // maxWorkers: \"50%\",\n\n  // An array of directory names to be searched recursively up from the requiring module's location\n  // moduleDirectories: [\n  //   \"node_modules\"\n  // ],\n\n  // An array of file extensions your modules use\n  // moduleFileExtensions: [\n  //   \"js\",\n  //   \"json\",\n  //   \"jsx\",\n  //   \"ts\",\n  //   \"tsx\",\n  //   \"node\"\n  // ],\n\n  // A map from regular expressions to module names that allow to stub out resources with a single module\n  // moduleNameMapper: {},\n\n  // An array of regexp pattern strings, matched against all module paths before considered 'visible' to the module loader\n  // modulePathIgnorePatterns: [],\n\n  // Activates notifications for test results\n  // notify: false,\n\n  // An enum that specifies notification mode. Requires { notify: true }\n  // notifyMode: \"failure-change\",\n\n  // A preset that is used as a base for Jest's configuration\n  // preset: null,\n\n  // Run tests from one or more projects\n  // projects: null,\n\n  // Use this configuration option to add custom reporters to Jest\n  // reporters: undefined,\n\n  // Automatically reset mock state between every test\n  // resetMocks: false,\n\n  // Reset the module registry before running each individual test\n  // resetModules: false,\n\n  // A path to a custom resolver\n  // resolver: null,\n\n  // Automatically restore mock state between every test\n  // restoreMocks: false,\n\n  // The root directory that Jest should scan for tests and modules within\n  // rootDir: null,\n\n  // A list of paths to directories that Jest should use to search for files in\n  // roots: [\n  //   \"<rootDir>\"\n  // ],\n\n  // Allows you to use a custom runner instead of Jest's default test runner\n  // runner: \"jest-runner\",\n\n  // The paths to modules that run some code to configure or set up the testing environment before each test\n  // setupFiles: [],\n\n  // A list of paths to modules that run some code to configure or set up the testing framework before each test\n  // setupFilesAfterEnv: [],\n\n  // A list of paths to snapshot serializer modules Jest should use for snapshot testing\n  // snapshotSerializers: [],\n\n  // The test environment that will be used for testing\n  testEnvironment: 'node',\n\n  // Options that will be passed to the testEnvironment\n  // testEnvironmentOptions: {},\n\n  // Adds a location field to test results\n  // testLocationInResults: false,\n\n  // The glob patterns Jest uses to detect test files\n  // testMatch: [\n  //   \"**/__tests__/**/*.[jt]s?(x)\",\n  //   \"**/?(*.)+(spec|test).[tj]s?(x)\"\n  // ],\n\n  // An array of regexp pattern strings that are matched against all test paths, matched tests are skipped\n  // testPathIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // The regexp pattern or array of patterns that Jest uses to detect test files\n  // testRegex: [],\n\n  // This option allows the use of a custom results processor\n  // testResultsProcessor: null,\n\n  // This option allows use of a custom test runner\n  // testRunner: \"jasmine2\",\n\n  // This option sets the URL for the jsdom environment. It is reflected in properties such as location.href\n  // testURL: \"http://localhost\",\n\n  // Setting this value to \"fake\" allows the use of fake timers for functions such as \"setTimeout\"\n  // timers: \"real\",\n\n  // A map from regular expressions to paths to transformers\n  // transform: null,\n\n  // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n  // transformIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // An array of regexp pattern strings that are matched against all modules before the module loader will automatically return a mock for them\n  // unmockedModulePathPatterns: undefined,\n\n  // Indicates whether each individual test should be reported during the run\n  // verbose: null,\n\n  // An array of regexp patterns that are matched against all source file paths before re-running tests in watch mode\n  // watchPathIgnorePatterns: [],\n\n  // Whether to use watchman for file crawling\n  // watchman: true,\n};\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "module_sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.2490234375,
          "content": "{\n  \"name\": \"anyproxy\",\n  \"version\": \"4.1.3\",\n  \"description\": \"A fully configurable HTTP/HTTPS proxy in Node.js\",\n  \"main\": \"proxy.js\",\n  \"bin\": {\n    \"anyproxy-ca\": \"bin/anyproxy-ca\",\n    \"anyproxy\": \"bin/anyproxy\"\n  },\n  \"dependencies\": {\n    \"async\": \"~0.9.0\",\n    \"async-task-mgr\": \">=1.1.0\",\n    \"body-parser\": \"^1.13.1\",\n    \"brotli\": \"^1.3.2\",\n    \"classnames\": \"^2.2.5\",\n    \"clipboard-js\": \"^0.3.3\",\n    \"co\": \"^4.6.0\",\n    \"colorful\": \"^2.1.0\",\n    \"commander\": \"~2.11.0\",\n    \"component-emitter\": \"^1.2.1\",\n    \"compression\": \"^1.4.4\",\n    \"es6-promise\": \"^3.3.1\",\n    \"express\": \"^4.8.5\",\n    \"fast-json-stringify\": \"^0.17.0\",\n    \"iconv-lite\": \"^0.4.6\",\n    \"inquirer\": \"^5.2.0\",\n    \"ip\": \"^0.3.2\",\n    \"juicer\": \"^0.6.6-stable\",\n    \"mime-types\": \"2.1.11\",\n    \"moment\": \"^2.15.1\",\n    \"nedb\": \"^1.8.0\",\n    \"node-easy-cert\": \"^1.0.0\",\n    \"pug\": \"^2.0.0-beta6\",\n    \"qrcode-npm\": \"0.0.3\",\n    \"request\": \"^2.74.0\",\n    \"stream-throttle\": \"^0.1.3\",\n    \"svg-inline-react\": \"^1.0.2\",\n    \"thunkify\": \"^2.1.2\",\n    \"whatwg-fetch\": \"^1.0.0\",\n    \"ws\": \"^5.1.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.8.3\",\n    \"@babel/preset-env\": \"^7.8.3\",\n    \"antd\": \"^2.5.0\",\n    \"autoprefixer\": \"^6.4.1\",\n    \"babel-core\": \"^6.14.0\",\n    \"babel-eslint\": \"^7.0.0\",\n    \"babel-jest\": \"^24.9.0\",\n    \"babel-loader\": \"^6.2.5\",\n    \"babel-plugin-import\": \"^1.0.0\",\n    \"babel-plugin-transform-runtime\": \"^6.15.0\",\n    \"babel-polyfill\": \"^6.13.0\",\n    \"babel-preset-es2015\": \"^6.13.2\",\n    \"babel-preset-react\": \"^6.11.1\",\n    \"babel-preset-stage-0\": \"^6.5.0\",\n    \"babel-register\": \"^6.11.6\",\n    \"babel-runtime\": \"^6.11.6\",\n    \"css-loader\": \"^0.23.1\",\n    \"eslint\": \">=4.18.2\",\n    \"eslint-config-airbnb\": \"^15.1.0\",\n    \"eslint-plugin-import\": \"^2.7.0\",\n    \"eslint-plugin-jsx-a11y\": \"^5.1.1\",\n    \"eslint-plugin-react\": \"^7.4.0\",\n    \"extract-text-webpack-plugin\": \"^3.0.2\",\n    \"file-loader\": \"^0.9.0\",\n    \"jest\": \"^24.9.0\",\n    \"less\": \"^2.7.1\",\n    \"less-loader\": \"^2.2.3\",\n    \"node-simhash\": \"^0.1.0\",\n    \"nodeunit\": \"^0.9.1\",\n    \"phantom\": \"^4.0.0\",\n    \"postcss-loader\": \"^0.13.0\",\n    \"pre-commit\": \"^1.2.2\",\n    \"react\": \"^15.3.1\",\n    \"react-addons-perf\": \"^15.4.0\",\n    \"react-dom\": \"^15.3.1\",\n    \"react-json-tree\": \"^0.10.0\",\n    \"react-redux\": \"^4.4.5\",\n    \"react-tap-event-plugin\": \"^1.0.0\",\n    \"redux\": \"^3.6.0\",\n    \"redux-saga\": \"^0.11.1\",\n    \"stream-equal\": \"0.1.8\",\n    \"style-loader\": \"^0.13.1\",\n    \"svg-inline-loader\": \"^0.7.1\",\n    \"tunnel\": \"^0.0.6\",\n    \"url-loader\": \"^0.5.7\",\n    \"urllib\": \"^2.34.2\",\n    \"webpack\": \"^3.10.0\",\n    \"worker-loader\": \"^0.7.1\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"npm run buildweb\",\n    \"test\": \"npx jest\",\n    \"lint\": \"eslint .\",\n    \"testserver\": \"node test/server/startServer.js\",\n    \"buildweb\": \"NODE_ENV=production webpack --config web/webpack.config.js --colors\",\n    \"webserver\": \"NODE_ENV=test webpack --config web/webpack.config.js --colors --watch\",\n    \"doc:serve\": \"node build_scripts/prebuild-doc.js && gitbook serve ./docs-src ./docs --log debug\",\n    \"doc:build\": \"./build_scripts/build-doc-site.sh\"\n  },\n  \"pre-commit\": [\n    \"lint\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/alibaba/anyproxy\"\n  },\n  \"author\": \"ottomao@gmail.com\",\n  \"license\": \"Apache-2.0\",\n  \"engines\": {\n    \"node\": \">=6.0.0\"\n  }\n}\n"
        },
        {
          "name": "proxy.js",
          "type": "blob",
          "size": 11.2080078125,
          "content": "'use strict';\n\nconst http = require('http'),\n  https = require('https'),\n  async = require('async'),\n  color = require('colorful'),\n  certMgr = require('./lib/certMgr'),\n  Recorder = require('./lib/recorder'),\n  logUtil = require('./lib/log'),\n  util = require('./lib/util'),\n  events = require('events'),\n  co = require('co'),\n  WebInterface = require('./lib/webInterface'),\n  wsServerMgr = require('./lib/wsServerMgr'),\n  ThrottleGroup = require('stream-throttle').ThrottleGroup;\n\nconst T_TYPE_HTTP = 'http',\n  T_TYPE_HTTPS = 'https',\n  DEFAULT_TYPE = T_TYPE_HTTP;\n\nconst PROXY_STATUS_INIT = 'INIT';\nconst PROXY_STATUS_READY = 'READY';\nconst PROXY_STATUS_CLOSED = 'CLOSED';\n\n/**\n *\n * @class ProxyCore\n * @extends {events.EventEmitter}\n */\nclass ProxyCore extends events.EventEmitter {\n  /**\n   * Creates an instance of ProxyCore.\n   *\n   * @param {object} config - configs\n   * @param {number} config.port - port of the proxy server\n   * @param {object} [config.rule=null] - rule module to use\n   * @param {string} [config.type=http] - type of the proxy server, could be 'http' or 'https'\n   * @param {strign} [config.hostname=localhost] - host name of the proxy server, required when this is an https proxy\n   * @param {number} [config.throttle] - speed limit in kb/s\n   * @param {boolean} [config.forceProxyHttps=false] - if proxy all https requests\n   * @param {boolean} [config.silent=false] - if keep the console silent\n   * @param {boolean} [config.dangerouslyIgnoreUnauthorized=false] - if ignore unauthorized server response\n   * @param {object} [config.recorder] - recorder to use\n   * @param {boolean} [config.wsIntercept] - whether intercept websocket\n   *\n   * @memberOf ProxyCore\n   */\n  constructor(config) {\n    super();\n    config = config || {};\n\n    this.status = PROXY_STATUS_INIT;\n    this.proxyPort = config.port;\n    this.proxyType = /https/i.test(config.type || DEFAULT_TYPE) ? T_TYPE_HTTPS : T_TYPE_HTTP;\n    this.proxyHostName = config.hostname || 'localhost';\n    this.recorder = config.recorder;\n\n    if (parseInt(process.versions.node.split('.')[0], 10) < 4) {\n      throw new Error('node.js >= v4.x is required for anyproxy');\n    } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n      throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n    } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      throw new Error('hostname is required in https proxy');\n    } else if (!this.proxyPort) {\n      throw new Error('proxy port is required');\n    } else if (!this.recorder) {\n      throw new Error('recorder is required');\n    } else if (config.forceProxyHttps && config.rule && config.rule.beforeDealHttpsRequest) {\n      logUtil.printLog('both \"-i(--intercept)\" and rule.beforeDealHttpsRequest are specified, the \"-i\" option will be ignored.', logUtil.T_WARN);\n      config.forceProxyHttps = false;\n    }\n\n    this.httpProxyServer = null;\n    this.requestHandler = null;\n\n    // copy the rule to keep the original proxyRule independent\n    this.proxyRule = config.rule || {};\n\n    if (config.silent) {\n      logUtil.setPrintStatus(false);\n    }\n\n    if (config.throttle) {\n      logUtil.printLog('throttle :' + config.throttle + 'kb/s');\n      const rate = parseInt(config.throttle, 10);\n      if (rate < 1) {\n        throw new Error('Invalid throttle rate value, should be positive integer');\n      }\n      global._throttle = new ThrottleGroup({ rate: 1024 * rate }); // rate - byte/sec\n    }\n\n    // init recorder\n    this.recorder = config.recorder;\n\n    // init request handler\n    const RequestHandler = util.freshRequire('./requestHandler');\n    this.requestHandler = new RequestHandler({\n      wsIntercept: config.wsIntercept,\n      httpServerPort: config.port, // the http server port for http proxy\n      forceProxyHttps: !!config.forceProxyHttps,\n      dangerouslyIgnoreUnauthorized: !!config.dangerouslyIgnoreUnauthorized\n    }, this.proxyRule, this.recorder);\n  }\n\n  /**\n  * manage all created socket\n  * for each new socket, we put them to a map;\n  * if the socket is closed itself, we remove it from the map\n  * when the `close` method is called, we'll close the sockes before the server closed\n  *\n  * @param {Socket} the http socket that is creating\n  * @returns undefined\n  * @memberOf ProxyCore\n  */\n  handleExistConnections(socket) {\n    const self = this;\n    self.socketIndex++;\n    const key = `socketIndex_${self.socketIndex}`;\n    self.socketPool[key] = socket;\n\n    // if the socket is closed already, removed it from pool\n    socket.on('close', () => {\n      delete self.socketPool[key];\n    });\n  }\n  /**\n   * start the proxy server\n   *\n   * @returns ProxyCore\n   *\n   * @memberOf ProxyCore\n   */\n  start() {\n    const self = this;\n    self.socketIndex = 0;\n    self.socketPool = {};\n\n    if (self.status !== PROXY_STATUS_INIT) {\n      throw new Error('server status is not PROXY_STATUS_INIT, can not run start()');\n    }\n    async.series(\n      [\n        //creat proxy server\n        function (callback) {\n          if (self.proxyType === T_TYPE_HTTPS) {\n            certMgr.getCertificate(self.proxyHostName, (err, keyContent, crtContent) => {\n              if (err) {\n                callback(err);\n              } else {\n                self.httpProxyServer = https.createServer({\n                  key: keyContent,\n                  cert: crtContent\n                }, self.requestHandler.userRequestHandler);\n                callback(null);\n              }\n            });\n          } else {\n            self.httpProxyServer = http.createServer(self.requestHandler.userRequestHandler);\n            callback(null);\n          }\n        },\n\n        //handle CONNECT request for https over http\n        function (callback) {\n          self.httpProxyServer.on('connect', self.requestHandler.connectReqHandler);\n\n          callback(null);\n        },\n\n        function (callback) {\n          wsServerMgr.getWsServer({\n            server: self.httpProxyServer,\n            connHandler: self.requestHandler.wsHandler\n          });\n          // remember all sockets, so we can destory them when call the method 'close';\n          self.httpProxyServer.on('connection', (socket) => {\n            self.handleExistConnections.call(self, socket);\n          });\n          callback(null);\n        },\n\n        //start proxy server\n        function (callback) {\n          self.httpProxyServer.listen(self.proxyPort);\n          callback(null);\n        },\n      ],\n\n      //final callback\n      (err, result) => {\n        if (!err) {\n          const tipText = (self.proxyType === T_TYPE_HTTP ? 'Http' : 'Https') + ' proxy started on port ' + self.proxyPort;\n          logUtil.printLog(color.green(tipText));\n\n          if (self.webServerInstance) {\n            const webTip = 'web interface started on port ' + self.webServerInstance.webPort;\n            logUtil.printLog(color.green(webTip));\n          }\n\n          let ruleSummaryString = '';\n          const ruleSummary = this.proxyRule.summary;\n          if (ruleSummary) {\n            co(function *() {\n              if (typeof ruleSummary === 'string') {\n                ruleSummaryString = ruleSummary;\n              } else {\n                ruleSummaryString = yield ruleSummary();\n              }\n\n              logUtil.printLog(color.green(`Active rule is: ${ruleSummaryString}`));\n            });\n          }\n\n          self.status = PROXY_STATUS_READY;\n          self.emit('ready');\n        } else {\n          const tipText = 'err when start proxy server :(';\n          logUtil.printLog(color.red(tipText), logUtil.T_ERR);\n          logUtil.printLog(err, logUtil.T_ERR);\n          self.emit('error', {\n            error: err\n          });\n        }\n      }\n    );\n\n    return self;\n  }\n\n  /**\n   * close the proxy server\n   *\n   * @returns ProxyCore\n   *\n   * @memberOf ProxyCore\n   */\n  close() {\n    // clear recorder cache\n    return new Promise((resolve) => {\n      if (this.httpProxyServer) {\n        // destroy conns & cltSockets when closing proxy server\n        for (const connItem of this.requestHandler.conns) {\n          const key = connItem[0];\n          const conn = connItem[1];\n          logUtil.printLog(`destorying https connection : ${key}`);\n          conn.end();\n        }\n\n        for (const cltSocketItem of this.requestHandler.cltSockets) {\n          const key = cltSocketItem[0];\n          const cltSocket = cltSocketItem[1];\n          logUtil.printLog(`closing https cltSocket : ${key}`);\n          cltSocket.end();\n        }\n\n        if (this.requestHandler.httpsServerMgr) {\n          this.requestHandler.httpsServerMgr.close();\n        }\n\n        if (this.socketPool) {\n          for (const key in this.socketPool) {\n            this.socketPool[key].destroy();\n          }\n        }\n\n        this.httpProxyServer.close((error) => {\n          if (error) {\n            console.error(error);\n            logUtil.printLog(`proxy server close FAILED : ${error.message}`, logUtil.T_ERR);\n          } else {\n            this.httpProxyServer = null;\n\n            this.status = PROXY_STATUS_CLOSED;\n            logUtil.printLog(`proxy server closed at ${this.proxyHostName}:${this.proxyPort}`);\n          }\n          resolve(error);\n        });\n      } else {\n        resolve();\n      }\n    })\n  }\n}\n\n/**\n * start proxy server as well as recorder and webInterface\n */\nclass ProxyServer extends ProxyCore {\n  /**\n   *\n   * @param {object} config - config\n   * @param {object} [config.webInterface] - config of the web interface\n   * @param {boolean} [config.webInterface.enable=false] - if web interface is enabled\n   * @param {number} [config.webInterface.webPort=8002] - http port of the web interface\n   */\n  constructor(config) {\n    // prepare a recorder\n    const recorder = new Recorder();\n    const configForCore = Object.assign({\n      recorder,\n    }, config);\n\n    super(configForCore);\n\n    this.proxyWebinterfaceConfig = config.webInterface;\n    this.recorder = recorder;\n    this.webServerInstance = null;\n  }\n\n  start() {\n    if (this.recorder) {\n      this.recorder.setDbAutoCompact();\n    }\n\n    // start web interface if neeeded\n    if (this.proxyWebinterfaceConfig && this.proxyWebinterfaceConfig.enable) {\n      this.webServerInstance = new WebInterface(this.proxyWebinterfaceConfig, this.recorder);\n      // start web server\n      this.webServerInstance.start()\n      // start proxy core\n        .then(() => {\n          super.start();\n        })\n        .catch((e) => {\n          this.emit('error', e);\n        });\n    } else {\n      super.start();\n    }\n  }\n\n  close() {\n    const self = this;\n    // release recorder\n    if (self.recorder) {\n      self.recorder.stopDbAutoCompact();\n      self.recorder.clear();\n    }\n    self.recorder = null;\n\n    // close ProxyCore\n    return super.close()\n      // release webInterface\n      .then(() => {\n        if (self.webServerInstance) {\n          const tmpWebServer = self.webServerInstance;\n          self.webServerInstance = null;\n          logUtil.printLog('closing webInterface...');\n          return tmpWebServer.close();\n        }\n      });\n  }\n}\n\nmodule.exports.ProxyCore = ProxyCore;\nmodule.exports.ProxyServer = ProxyServer;\nmodule.exports.ProxyRecorder = Recorder;\nmodule.exports.ProxyWebServer = WebInterface;\nmodule.exports.utils = {\n  systemProxyMgr: require('./lib/systemProxyMgr'),\n  certMgr,\n};\n"
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "rule_sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}