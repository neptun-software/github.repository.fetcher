{
  "metadata": {
    "timestamp": 1736562944724,
    "page": 548,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "trazyn/weweChat",
      "stars": 5748,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.580078125,
          "content": "// NOTE: These options are overriden by the babel-loader configuration\n// for webpack, which can be found in ~/build/webpack.config.\n//\n// Why? The react-transform-hmr plugin depends on HMR (and throws if\n// module.hot is disabled), so keeping it and related plugins contained\n// within webpack helps prevent unexpected errors.\n{\n  \"presets\": [\"es2015\", \"react\", \"stage-0\"],\n  \"plugins\": [\"babel-polyfill\", \"transform-decorators-legacy\"],\n  \"env\": {\n      \"production\": {\n          \"presets\": [\"react-optimize\"]\n      },\n      \"development\": {\n          \"presets\": [\"react-hmre\"]\n      }\n  }\n}\n"
        },
        {
          "name": ".ctrlpignore",
          "type": "blob",
          "size": 0.0595703125,
          "content": "node_modules\nios\nDS_Store\nandroid\ngit\ndist\nrelease\n__tests__\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1474609375,
          "content": "\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newnewline = true\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "\ndist/*\n__tests__/*\nsrc/assets/*\nrelease/*\n\n"
        },
        {
          "name": ".eslintrc.json",
          "type": "blob",
          "size": 0.7490234375,
          "content": "{\n    \"parserOptions\": {\n        \"ecmaVersion\": 2018,\n        \"sourceType\": \"module\"\n    },\n    \"env\": {\n        \"es6\": true,\n        \"node\": true\n    },\n    \"parser\": \"babel-eslint\",\n    \"plugins\": [\"react\"],\n    \"rules\": {\n        \"semi\": [2, \"always\"],\n        \"new-cap\": [0],\n        \"indent\": [2, 4, { \"SwitchCase\": 1 }],\n        \"comma-dangle\": [2, \"only-multiline\"],\n        \"space-before-function-paren\": [2, \"never\"],\n        \"operator-linebreak\": [2, \"before\"],\n        \"no-floating-decimal\": [0],\n        \"react/jsx-indent\": [2, 4],\n        \"react/jsx-indent-props\": [2, 4],\n        \"react/jsx-boolean-value\": [2, \"always\"],\n        \"react/prop-types\": [0],\n        \"jsx-quotes\": [2, \"prefer-double\"]\n    },\n    \"extends\": [\"standard\", \"standard-react\"]\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0634765625,
          "content": "*.js linguist-language=JavaScript\nsrc/assets/* linguist-vendored\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4482421875,
          "content": "# OSX\n#\n.DS_Store\n\n# Other\n#\ndist/\nrelease/\npackage-lock.json\n\n# Xcode\n#\nbuild/\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\nxcuserdata\n*.xccheckout\n*.moved-aside\nDerivedData\n*.hmap\n*.ipa\n*.xcuserstate\nproject.xcworkspace\n\n# Android/IntelliJ\n#\nbuild/\n.idea\n.gradle\nlocal.properties\n*.iml\n\n# node.js\n#\nnode_modules/\nnpm-debug.log\n\n# BUCK\nbuck-out/\n\\.buckd/\nandroid/app/libs\n*.keystore\n"
        },
        {
          "name": ".stylelintignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": "\ndist/*\n__tests__/*\nsrc/assets/*\n"
        },
        {
          "name": ".stylelintrc",
          "type": "blob",
          "size": 0.6650390625,
          "content": "{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"block-no-empty\": null,\n    \"font-family-no-missing-generic-family-keyword\": null,\n    \"no-descending-specificity\": null,\n    \"color-no-invalid-hex\": true,\n    \"declaration-colon-space-after\": \"always\",\n    \"indentation\": [4, {\n      \"except\": [\"value\"]\n    }],\n    \"max-empty-lines\": 2,\n    \"rule-empty-line-before\": [ \"always\", {\n      \"except\": [\"first-nested\"],\n      \"ignore\": [\"after-comment\"]\n    } ],\n    \"selector-pseudo-class-no-unknown\": [ true, {\n      ignorePseudoClasses: [\"global\"],\n    } ],\n    \"number-leading-zero\": \"never\",\n    \"unit-whitelist\": [\"em\", \"rem\", \"%\", \"s\", \"vh\", \"vw\", \"px\", \"deg\"]\n  }\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0732421875,
          "content": "language: node_js\n\nnode_js:\n  - \"6\"\n\nscript: npm run lint && npm run build\n"
        },
        {
          "name": "CHANGELOG.MD",
          "type": "blob",
          "size": 1.36328125,
          "content": "\n\n# 1.1.4\n\n### 2017-09-22\n\n#### Improvements\n- 发送消息后滚动到对话窗口最下面\n\n#### Bug fixed\n- 修复 #34 快速`enter`时会重复发送消息\n- 修复点击状态栏小图标展开菜单后，收到消息后重新创建小图标导致程序退出的问题\n\n# 1.1.3\n\n### 2017-09-19\n\n#### Bug fixed\n- #36 #34 优化内存使用，修复由于1.1.1显示头像到菜单栏，接收新消息时刷新菜单中会话列表，重复创建nativeImage导致GC无法及时回收所造成内存占用过高\n\n\n# 1.1.2\n\n### 2017-09-18\n\n#### Improvements\n- 增加自动更新\n\n\n# 1.1.1\n\n### 2017-09-14\n\n#### Improvements\n- 增加用户头像到菜单栏\n\n#### Bug fixed\n- 修复登出时网络错误，导致未提示客户端已离线\n\n### 2017-09-12\n#29 替换`html`为对应`emoji`\n\n### 2017-09-11\n#28 在 windows 和 linux 上不显示菜单\n\n### 2017-09-10\n\n#### Bug fixed\n- 联系人列表只显示好友，不显示临时联系人\n\n### 2017-09-08\n\n#### Improvements\n- 添加文件助手, #27\n\n#### Bug fixed\n- 修改样式，防止文字信息内容过长\n\n### 2017-09-07\n\n#### Improvements\n- 调整表情框表情大小\n- 聊天窗口用户名取消换行\n\n#### Feature\n- 多文件拖拽发送\n\n#### Bug fixed\n- 仅在聊天开启时允许文件拖拽\n- 修复手机端消息同步客户端错误\n- 修复图片加载失败使用错误`src`进行回滚导致客户端卡死的问题\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2017 var.darling@gmail.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.MD",
          "type": "blob",
          "size": 5.0966796875,
          "content": "# weweChat\n\n<img src=\"https://github.com/trazyn/weweChat/blob/master/resource/128x128.png\" />\n\n[![Current Release](https://img.shields.io/github/release/trazyn/weweChat.svg?style=flat-square)](https://github.com/trazyn/weweChat/releases)\n[![Travis CI status](https://img.shields.io/travis/trazyn/weweChat/dev.svg?style=flat-square)](https://travis-ci.org/trazyn/weweChat/branches)\n[![Dependencies Status](https://david-dm.org/trazyn/weweChat/status.svg?style=flat-square)](https://david-dm.org/trazyn/weweChat)\n[![DevDependencies Status](https://david-dm.org/trazyn/weweChat/dev-status.svg?style=flat-square)](https://david-dm.org/trazyn/weweChat?type=dev)\n[![JS Standard Style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](http://standardjs.com)\n\nUnofficial WeChat client built with React, MobX and Electron.\n\nAPI from [https://web.wechat.com/](https://web.wechat.com/)\n> Web API can not create room and invite members to room since 2018.\n\n## [CHANGELOG](https://github.com/trazyn/weweChat/blob/master/CHANGELOG.MD)\n\n## Feature\n- Work on desktop\n- On macOS, window vibrancy effect\n- Block message recall(Default settings is not block)\n- Desktop notifications\n- Keyboard shortcuts supported\n- Send image by paste\n  ![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/pasteconfirmation.png)\n- Drag to send file\n  ![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/dragdrop.png)\n- Batch send message\n  ![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/batchsend.png)\n- Send GIF emoji\n  ![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/sendgif.gif)\n\n## Install\nDownload the last version on the [website](https://github.com/trazyn/weweChat/releases/latest) or below.\n\n#### Mac(10.9+)\n[Download](https://github.com/trazyn/weweChat/releases/download/v1.1.7/wewechat-1.1.7-mac.dmg) the `.dmg` file.\nOr use [Homebrew-Cask](https://caskroom.github.io/):\n```\n$ brew cask install wewechat\n```\n\n#### Linux\n[Download](https://github.com/trazyn/weweChat/releases)\nCentos/RHEL please download `.rpm` packages.\nDebian/Ubuntu please download `.deb` pacages.\nOther linux distribution please download `.AppImage` packages.\n\nInstall deb package for Debian / Ubuntu:\n```\n$ sudo dpkg -i wewechat-1.1.7-amd64.deb\n```\n\nInstall rpm package for Centos / RHEL:\n```\n$ sudo yum localinstall wewechat-1.1.7-x86_64.rpm\n```\n\nInstall AppImage package for other linux distribution:\n```\n$ chmod u+x wewechat-1.1.7-x86_64.AppImage\n$ ./wewechat-1.1.7-x86_64.AppImage\n```\n\n#### Windows\n[Download](https://github.com/trazyn/weweChat/releases/download/v1.1.7/wewechat-1.1.7-win-setup.exe) the `.exe` file.\n\n## Screenshot\n![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/0.png)\n![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/1.png)\n![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/2.png)\n![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/3.png)\n![preview](https://raw.githubusercontent.com/trazyn/weweChat/master/screenshots/4.png)\n\n## Development\n```\n$ npm install\n$ npm run dev\n```\n\nGenerate the binary:\n* For Linux\n```\n$ npm run package-linux\n```\nMaybe you will install some depends packages.\n* For Mac\n```\n$ npm run package-mac\n```\nAfter that, you will see the binary in `./release` folder\n\n## Keyboard shortcuts\n\nDescription            | Keys\n-----------------------| -----------------------\nNew conversation       | <kbd>Cmd</kbd> <kbd>N</kbd>\nSearch conversations   | <kbd>Cmd</kbd> <kbd>F</kbd>\nHide conversation      | <kbd>Shift</kbd> <kbd>Cmd</kbd> <kbd>M</kbd>\nJump to conversation   | <kbd>Cmd</kbd> <kbd>0</kbd> ... <kbd>9</kbd>\nNext conversation      | <kbd>Cmd</kbd> <kbd>J</kbd>\nPrevious conversation  | <kbd>Cmd</kbd> <kbd>K</kbd>\nBatch message          | <kbd>Cmd</kbd> <kbd>B</kbd>\nToggle Full Screen     | <kbd>Shift</kbd> <kbd>Cmd</kbd> <kbd>F</kbd>\nInsert QQ emoji        | <kbd>Cmd</kbd> <kbd>I</kbd>\nPreferences            | <kbd>Cmd</kbd> <kbd>,</kbd>\n\n### TODO\n- [x] Windows support\n- [x] Linux support\n- [x] Sticky on top\n- [x] Delete chat session\n- [x] Mark as Read\n- [x] Chat Room\n  - [x] Show correct contact\n  - [x] Show members\n  - [x] Add / Remove member\n  - [x] Create chat room\n- [x] Receive message\n  - [x] Text\n  - [x] Image\n  - [x] Voice\n  - [x] Location\n  - [x] Sticker\n  - [x] Contact Card\n  - [x] Video\n  - [x] Money Transger\n  - [x] Location sharing\n  - [x] Download File\n- [x] Send message\n  - [x] Text\n  - [x] File\n  - [x] Image\n  - [x] Video\n  - [x] Recall\n- [x] Forward text message\n- [x] Forward emoji\n- [x] Forward image\n- [x] Forward file\n- [x] Forward video\n- [x] Show QQ emoji\n- [x] Search chat set\n- [x] Search and create chat room\n- [x] Desktop notification\n- [x] Keep online\n- [x] Logout\n- [x] Autosart at login\n- [x] Send image from clipboard\n- [x] Drag to send file\n- [x] Batch send message\n- [ ] Mention a user\n\n### FAQ\n- ~~`Mac` 上如何修改图标，请参考 #39（另外问下，有没屌大的或者胸大的帮忙设计一个图标啊）~~\n- 关于历史记录的问题请参考 #30\n\n\n### License\nMIT License\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.js",
          "type": "blob",
          "size": 19.595703125,
          "content": "\nimport fs from 'fs';\nimport tmp from 'tmp';\nimport { app, powerMonitor, BrowserWindow, Tray, Menu, ipcMain, clipboard, shell, nativeImage, dialog } from 'electron';\nimport windowStateKeeper from 'electron-window-state';\nimport AutoLaunch from 'auto-launch';\nimport { autoUpdater } from 'electron-updater';\nimport axios from 'axios';\n\nimport pkg from './package.json';\n\nlet forceQuit = false;\nlet downloading = false;\nlet mainWindow;\nlet tray;\nlet settings = {};\nlet isFullScreen = false;\nlet isWin = process.platform === 'win32';\nlet isOsx = process.platform === 'darwin';\nlet isSuspend = false;\nlet userData = app.getPath('userData');\nlet imagesCacheDir = `${userData}/images`;\nlet voicesCacheDir = `${userData}/voices`;\nlet mainMenu = [\n    {\n        label: pkg.name,\n        submenu: [\n            {\n                label: `About ${pkg.name}`,\n                selector: 'orderFrontStandardAboutPanel:',\n            },\n            {\n                label: 'Preferences...',\n                accelerator: 'Cmd+,',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-settings');\n                }\n            },\n            {\n                type: 'separator'\n            },\n            {\n                role: 'hide'\n            },\n            {\n                role: 'hideothers'\n            },\n            {\n                role: 'unhide'\n            },\n            {\n                label: 'Check for updates',\n                accelerator: 'Cmd+U',\n                click() {\n                    checkForUpdates();\n                }\n            },\n            {\n                type: 'separator'\n            },\n            {\n                label: 'Quit weweChat',\n                accelerator: 'Command+Q',\n                selector: 'terminate:',\n                click() {\n                    forceQuit = true;\n                    mainWindow = null;\n                    app.quit();\n                }\n            }\n        ]\n    },\n    {\n        label: 'File',\n        submenu: [\n            {\n                label: 'New Chat',\n                accelerator: 'Cmd+N',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-newchat');\n                }\n            },\n            {\n                label: 'Search...',\n                accelerator: 'Cmd+F',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-search');\n                }\n            },\n            {\n                label: 'Batch Send Message',\n                accelerator: 'Cmd+B',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-batchsend');\n                }\n            },\n            {\n                type: 'separator',\n            },\n            {\n                label: 'Insert emoji',\n                accelerator: 'Cmd+I',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-emoji');\n                }\n            },\n            {\n                type: 'separator',\n            },\n            {\n                label: 'Next conversation',\n                accelerator: 'Cmd+J',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-next');\n                }\n            },\n            {\n                label: 'Previous conversation',\n                accelerator: 'Cmd+K',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-previous');\n                }\n            },\n        ]\n    },\n    {\n        label: 'Conversations',\n        submenu: [\n            {\n                label: 'Loading...',\n            }\n        ],\n    },\n    {\n        label: 'Contacts',\n        submenu: [\n            {\n                label: 'Loading...',\n            }\n        ],\n    },\n    {\n\n    },\n    {\n        label: 'Edit',\n        submenu: [\n            {\n                role: 'undo'\n            },\n            {\n                role: 'redo'\n            },\n            {\n                type: 'separator'\n            },\n            {\n                role: 'cut'\n            },\n            {\n                role: 'copy'\n            },\n            {\n                role: 'paste'\n            },\n            {\n                role: 'pasteandmatchstyle'\n            },\n            {\n                role: 'delete'\n            },\n            {\n                role: 'selectall'\n            }\n        ]\n    },\n    {\n        label: 'View',\n        submenu: [\n            {\n                label: isFullScreen ? 'Exit Full Screen' : 'Enter Full Screen',\n                accelerator: 'Shift+Cmd+F',\n                click() {\n                    isFullScreen = !isFullScreen;\n\n                    mainWindow.show();\n                    mainWindow.setFullScreen(isFullScreen);\n                }\n            },\n            {\n                label: 'Toggle Conversations',\n                accelerator: 'Shift+Cmd+M',\n                click() {\n                    mainWindow.show();\n                    mainWindow.webContents.send('show-conversations');\n                }\n            },\n            {\n                type: 'separator',\n            },\n            {\n                label: ''\n            },\n            {\n                type: 'separator',\n            },\n            {\n                role: 'toggledevtools'\n            },\n            {\n                role: 'togglefullscreen'\n            }\n        ]\n    },\n    {\n        role: 'window',\n        submenu: [\n            {\n                role: 'minimize'\n            },\n            {\n                role: 'close'\n            }\n        ]\n    },\n    {\n        role: 'help',\n        submenu: [\n            {\n                label: 'Feedback',\n                click() {\n                    shell.openExternal('https://github.com/trazyn/weweChat/issues');\n                }\n            },\n            {\n                label: 'Fork me on Github',\n                click() {\n                    shell.openExternal('https://github.com/trazyn/weweChat');\n                }\n            },\n            {\n                type: 'separator'\n            },\n            {\n                label: '💕 Follow me on Twitter 👏',\n                click() {\n                    shell.openExternal('https://twitter.com/var_darling');\n                }\n            }\n        ]\n    }\n];\nlet trayMenu = [\n    {\n        label: `You have 0 messages`,\n        click() {\n            mainWindow.show();\n            mainWindow.webContents.send('show-messages');\n        }\n    },\n    {\n        label: 'Toggle main window',\n        click() {\n            let isVisible = mainWindow.isVisible();\n            isVisible ? mainWindow.hide() : mainWindow.show();\n        }\n    },\n    {\n        type: 'separator'\n    },\n    {\n        label: 'Preferences...',\n        accelerator: 'Cmd+,',\n        click() {\n            mainWindow.show();\n            mainWindow.webContents.send('show-settings');\n        }\n    },\n    {\n        label: 'Fork me on Github',\n        click() {\n            shell.openExternal('https://github.com/trazyn/weweChat');\n        }\n    },\n    {\n        type: 'separator'\n    },\n    {\n        label: 'Toggle DevTools',\n        accelerator: 'Alt+Command+I',\n        click() {\n            mainWindow.show();\n            mainWindow.toggleDevTools();\n        }\n    },\n    {\n        label: 'Hide menu bar icon',\n        click() {\n            mainWindow.webContents.send('hide-tray');\n        }\n    },\n    {\n        type: 'separator'\n    },\n    {\n        label: 'Check for updates',\n        accelerator: 'Cmd+U',\n        click() {\n            checkForUpdates();\n        }\n    },\n    {\n        label: 'Quit weweChat',\n        accelerator: 'Command+Q',\n        selector: 'terminate:',\n        click() {\n            forceQuit = true;\n            mainWindow = null;\n            app.quit();\n        }\n    }\n];\nlet avatarPath = tmp.dirSync();\nlet avatarCache = {};\nlet avatarPlaceholder = `${__dirname}/src/assets/images/user-fallback.png`;\nconst icon = `${__dirname}/src/assets/images/dock.png`;\n\nasync function getIcon(cookies, userid, src) {\n    var cached = avatarCache[userid];\n    var icon;\n\n    if (cached) {\n        return cached;\n    }\n\n    if (cookies && src) {\n        try {\n            let response = await axios({\n                url: src,\n                method: 'get',\n                responseType: 'arraybuffer',\n                headers: {\n                    Cookie: cookies,\n                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/603.3.8 (KHTML, like Gecko) Version/10.1.2 Safari/603.3.8',\n                },\n            });\n            // eslint-disable-next-line\n            let base64 = new Buffer(response.data, 'binary').toString('base64');\n\n            icon = `${avatarPath.name}/${userid}.jpg`;\n            fs.writeFileSync(icon, base64.replace(/^data:image\\/png;base64,/, ''), 'base64');\n        } catch (ex) {\n            console.error(ex);\n            icon = avatarPlaceholder;\n        }\n    }\n\n    var image = nativeImage.createFromPath(icon);\n\n    image = image.resize({ width: 24, height: 24 });\n\n    avatarCache[userid] = image;\n\n    return image;\n}\n\nfunction checkForUpdates() {\n    if (downloading) {\n        dialog.showMessageBox({\n            type: 'info',\n            buttons: ['OK'],\n            title: pkg.name,\n            message: `Downloading...`,\n            detail: `Please leave the app open, the new version is downloading. You'll receive a new dialog when downloading is finished.`\n        });\n\n        return;\n    }\n\n    autoUpdater.checkForUpdates();\n}\n\nfunction updateTray(unread = 0) {\n    if (!isOsx) {\n        // Always show the tray icon on windows\n        settings.showOnTray = true;\n    }\n\n    // Update unread mesage count\n    trayMenu[0].label = `You have ${unread} messages`;\n\n    if (settings.showOnTray) {\n        if (tray\n            && updateTray.lastUnread === unread) {\n            return;\n        }\n\n        let contextmenu = Menu.buildFromTemplate(trayMenu);\n        let icon = unread\n            ? `${__dirname}/src/assets/images/icon-new-message.png`\n            : `${__dirname}/src/assets/images/icon.png`\n            ;\n\n        // Make sure the last tray has been destroyed\n        setTimeout(() => {\n            if (!tray) {\n                // Init tray icon\n                tray = new Tray(icon);\n\n                tray.on('right-click', () => {\n                    tray.popUpContextMenu();\n                });\n\n                let clicked = false;\n                tray.on('click', () => {\n                    if (clicked) {\n                        mainWindow.show();\n                        clicked = false;\n                    } else {\n                        clicked = true;\n                        setTimeout(() => {\n                            clicked = false;\n                        }, 400);\n                    }\n                });\n            }\n\n            tray.setImage(icon);\n            tray.setContextMenu(contextmenu);\n        });\n    } else {\n        if (!tray) return;\n\n        tray.destroy();\n        tray = null;\n    }\n\n    // Avoid tray icon been recreate\n    updateTray.lastUnread = unread;\n}\n\nasync function autostart() {\n    var launcher = new AutoLaunch({\n        name: 'weweChat',\n        path: '/Applications/wewechat.app',\n    });\n\n    if (settings.startup) {\n        if (!isOsx) {\n            mainWindow.webContents.send('show-errors', {\n                message: 'Currently only supports the OSX.'\n            });\n            return;\n        }\n\n        launcher.enable()\n            .catch(ex => {\n                console.error(ex);\n            });\n    } else {\n        launcher.disable();\n    }\n}\n\nfunction createMenu() {\n    var menu = Menu.buildFromTemplate(mainMenu);\n\n    if (isOsx) {\n        Menu.setApplicationMenu(menu);\n    } else {\n        mainWindow.setMenu(null);\n    }\n}\n\nconst createMainWindow = () => {\n    var mainWindowState = windowStateKeeper({\n        defaultWidth: 745,\n        defaultHeight: 500,\n    });\n\n    mainWindow = new BrowserWindow({\n        x: mainWindowState.x,\n        y: mainWindowState.y,\n        minWidth: 745,\n        minHeight: 450,\n        transparent: true,\n        titleBarStyle: 'hiddenInset',\n        backgroundColor: 'none',\n        resizable: false,\n        webPreferences: {\n            scrollBounce: true\n        },\n        frame: !isWin,\n        icon\n    });\n\n    mainWindow.setSize(350, 460);\n    mainWindow.loadURL(\n        `file://${__dirname}/src/index.html`\n    );\n\n    mainWindow.webContents.on('did-finish-load', () => {\n        try {\n            mainWindow.show();\n            mainWindow.focus();\n        } catch (ex) { }\n    });\n\n    mainWindow.webContents.on('new-window', (event, url) => {\n        event.preventDefault();\n        shell.openExternal(url);\n    });\n\n    mainWindow.on('close', e => {\n        if (forceQuit) {\n            mainWindow = null;\n            app.quit();\n        } else {\n            e.preventDefault();\n            mainWindow.hide();\n        }\n    });\n\n    ipcMain.on('settings-apply', (event, args) => {\n        settings = args.settings;\n        mainWindow.setAlwaysOnTop(!!settings.alwaysOnTop);\n\n        try {\n            updateTray();\n            autostart();\n        } catch (ex) {\n            console.error(ex);\n        }\n    });\n\n    ipcMain.on('show-window', event => {\n        if (!mainWindow.isVisible()) {\n            mainWindow.show();\n            mainWindow.focus();\n        }\n    });\n\n    ipcMain.on('menu-update', async(event, args) => {\n        var { cookies, contacts = [], conversations = [] } = args;\n        var conversationsMenu = mainMenu.find(e => e.label === 'Conversations');\n        var contactsMenu = mainMenu.find(e => e.label === 'Contacts');\n        var shouldUpdate = false;\n\n        if (!isOsx) {\n            return;\n        }\n\n        if (conversations.length\n            && conversations.map(e => e.name).join() !== conversationsMenu.submenu.map(e => e.label).join()) {\n            shouldUpdate = true;\n\n            conversations = await Promise.all(\n                conversations.map(async(e, index) => {\n                    let icon = await getIcon(cookies, e.id, e.avatar);\n\n                    return {\n                        label: e.name,\n                        accelerator: `Cmd+${index}`,\n                        icon,\n                        click() {\n                            mainWindow.show();\n                            mainWindow.webContents.send('message-chatto', {\n                                id: e.id,\n                            });\n                        }\n                    };\n                })\n            );\n            conversationsMenu.submenu = conversations;\n        }\n\n        if (contacts.length) {\n            shouldUpdate = true;\n\n            contacts = await Promise.all(\n                contacts.map(async e => {\n                    let icon = await getIcon(cookies, e.id, e.avatar);\n\n                    return {\n                        label: e.name,\n                        icon,\n                        click() {\n                            mainWindow.show();\n                            mainWindow.webContents.send('show-userinfo', {\n                                id: e.id,\n                            });\n                        }\n                    };\n                })\n            );\n            contactsMenu.submenu = contacts;\n        }\n\n        if (shouldUpdate) {\n            createMenu();\n        }\n    });\n\n    ipcMain.on('message-unread', (event, args) => {\n        var counter = args.counter;\n\n        if (settings.showOnTray) {\n            updateTray(counter);\n        }\n    });\n\n    ipcMain.on('file-paste', (event) => {\n        var image = clipboard.readImage();\n        var args = { hasImage: false };\n\n        if (!image.isEmpty()) {\n            let filename = tmp.tmpNameSync() + '.png';\n\n            args = {\n                hasImage: true,\n                filename,\n                raw: image.toPNG(),\n            };\n\n            fs.writeFileSync(filename, image.toPNG());\n        }\n\n        event.returnValue = args;\n    });\n\n    ipcMain.on('file-download', async(event, args) => {\n        var filename = args.filename;\n\n        fs.writeFileSync(filename, args.raw.replace(/^data:image\\/png;base64,/, ''), {\n            encoding: 'base64',\n            // Overwrite file\n            flag: 'wx',\n        });\n        event.returnValue = filename;\n    });\n\n    ipcMain.on('open-file', async(event, filename) => {\n        shell.openItem(filename);\n    });\n\n    ipcMain.on('open-folder', async(event, dir) => {\n        shell.openItem(dir);\n    });\n\n    ipcMain.on('open-map', (event, args) => {\n        event.preventDefault();\n        shell.openExternal(args.map);\n    });\n\n    ipcMain.on('open-image', async(event, args) => {\n        var filename = `${imagesCacheDir}/img_${args.dataset.id}`;\n\n        fs.writeFileSync(filename, args.base64.replace(/^data:image\\/png;base64,/, ''), 'base64');\n        shell.openItem(filename);\n    });\n\n    ipcMain.on('is-suspend', (event, args) => {\n        event.returnValue = isSuspend;\n    });\n\n    ipcMain.once('logined', event => {\n        mainWindow.setResizable(true);\n        mainWindow.setSize(mainWindowState.width, mainWindowState.height);\n        mainWindowState.manage(mainWindow);\n    });\n\n    powerMonitor.on('resume', () => {\n        isSuspend = false;\n        mainWindow.webContents.send('os-resume');\n    });\n\n    powerMonitor.on('suspend', () => {\n        isSuspend = true;\n    });\n\n    if (isOsx) {\n        app.setAboutPanelOptions({\n            applicationName: pkg.name,\n            applicationVersion: pkg.version,\n            copyright: 'Made with 💖 by trazyn. \\n https://github.com/trazyn/weweChat',\n            credits: `With the invaluable help of: \\n web.wechat.com`,\n            version: pkg.version\n        });\n    }\n\n    [imagesCacheDir, voicesCacheDir].map(e => {\n        if (!fs.existsSync(e)) {\n            fs.mkdirSync(e);\n        }\n    });\n\n    mainWindow.webContents.setUserAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/603.3.8 (KHTML, like Gecko) Version/10.1.2 Safari/603.3.8');\n    createMenu();\n};\n\napp.setName(pkg.name);\napp.dock && app.dock.setIcon(icon);\n\napp.on('ready', createMainWindow);\napp.on('before-quit', () => {\n    // Fix issues #14\n    forceQuit = true;\n});\napp.on('activate', e => {\n    if (!mainWindow.isVisible()) {\n        mainWindow.show();\n    }\n});\n\nautoUpdater.on('update-not-available', e => {\n    dialog.showMessageBox({\n        type: 'info',\n        buttons: ['OK'],\n        title: pkg.name,\n        message: `${pkg.name} is up to date :)`,\n        detail: `${pkg.name} ${pkg.version} is currently the newest version available, It looks like you're already rocking the latest version!`\n    });\n\n    console.log('Update not available.');\n});\n\nautoUpdater.on('update-available', e => {\n    downloading = true;\n    checkForUpdates();\n});\n\nautoUpdater.on('error', err => {\n    dialog.showMessageBox({\n        type: 'error',\n        buttons: ['Cancel update'],\n        title: pkg.name,\n        message: `Failed to update ${pkg.name} :(`,\n        detail: `An error occurred in retrieving update information, Please try again later.`,\n    });\n\n    downloading = false;\n    console.error(err);\n});\n\nautoUpdater.on('update-downloaded', info => {\n    var { releaseNotes, releaseName } = info;\n    var index = dialog.showMessageBox({\n        type: 'info',\n        buttons: ['Restart', 'Later'],\n        title: pkg.name,\n        message: `The new version has been downloaded. Please restart the application to apply the updates.`,\n        detail: `${releaseName}\\n\\n${releaseNotes}`\n    });\n    downloading = false;\n\n    if (index === 1) {\n        return;\n    }\n\n    autoUpdater.quitAndInstall();\n    setTimeout(() => {\n        mainWindow = null;\n        app.quit();\n    });\n});\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 5.263671875,
          "content": "{\n  \"name\": \"wewechat\",\n  \"version\": \"1.1.7\",\n  \"description\": \"Unofficial WeChat client built with React, MobX and Electron.\",\n  \"main\": \"main.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"js-lint\": \"node node_modules/.bin/eslint .\",\n    \"css-lint\": \"stylelint --fix src/**/*.css\",\n    \"lint\": \"npm run css-lint && npm run js-lint\",\n    \"build-main\": \"cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --config ./config/webpack.config.electron.js --progress --profile --colors\",\n    \"build-renderer\": \"cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --config ./config/webpack.config.production.js --progress --profile --colors\",\n    \"build\": \"rm -rf dist && npm run build-main && npm run build-renderer\",\n    \"package-win\": \"npm run build && rm -rf release && build --win --projectDir ./dist\",\n    \"package-win32\": \"npm run build && rm -rf release && build --win --ia32 --projectDir ./dist\",\n    \"package-linux\": \"npm run build && rm -rf release && build --linux --projectDir ./dist\",\n    \"package-mac\": \"npm run build && rm -rf release && build --mac --projectDir ./dist\",\n    \"package-all\": \"npm run build && rm -rf release && build --mac --win --linux --projectDir ./dist\",\n    \"hot-server\": \"cross-env NODE_ENV=development node -r babel-register scripts/dev.js\",\n    \"start-hot\": \"cross-env HOT=1 NODE_ENV=development ./node_modules/.bin/electron -r babel-register -r babel-polyfill ./main\",\n    \"dev\": \"concurrently --kill-others \\\"npm run hot-server\\\" \\\"npm run start-hot\\\"\"\n  },\n  \"author\": {\n    \"email\": \"var.darling@gmail.com\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/trazyn/weweChat.git\"\n  },\n  \"license\": \"MIT\",\n  \"build\": {\n    \"productName\": \"wewechat\",\n    \"appId\": \"gh.trazyn.wewechat\",\n    \"compression\": \"maximum\",\n    \"artifactName\": \"${productName}-${version}-${os}-${arch}.${ext}\",\n    \"dmg\": {\n      \"contents\": [\n        {\n          \"x\": 130,\n          \"y\": 220\n        },\n        {\n          \"x\": 410,\n          \"y\": 220,\n          \"type\": \"link\",\n          \"path\": \"/Applications\"\n        }\n      ],\n      \"title\": \"wewechat ${version}\"\n    },\n    \"mac\": {\n      \"icon\": \"../resource/dock.icns\"\n    },\n    \"linux\": {\n      \"icon\": \"../resource\",\n      \"category\": \"Chat\",\n      \"executableName\": \"wewechat\",\n      \"target\": [\n        \"deb\",\n        \"rpm\",\n        \"AppImage\"\n      ]\n    },\n    \"win\": {\n      \"target\": \"nsis\"\n    },\n    \"nsis\": {\n      \"oneClick\": false,\n      \"allowToChangeInstallationDirectory\": true,\n      \"artifactName\": \"${productName}-${version}-${os}-${arch}-setup.${ext}\",\n      \"deleteAppDataOnUninstall\": true\n    },\n    \"directories\": {\n      \"output\": \"../release\"\n    },\n    \"publish\": [\n      {\n        \"provider\": \"github\",\n        \"owner\": \"trazyn\",\n        \"repo\": \"weweChat\"\n      }\n    ]\n  },\n  \"dependencies\": {\n    \"auto-launch\": \"^5.0.1\",\n    \"axios\": \"^0.18.0\",\n    \"browser-md5-file\": \"^1.0.0\",\n    \"classname\": \"^0.0.0\",\n    \"delegate\": \"^3.1.3\",\n    \"electron-context-menu\": \"^0.10.0\",\n    \"electron-json-storage\": \"^4.0.2\",\n    \"electron-window-state\": \"^4.1.1\",\n    \"han\": \"^0.0.7\",\n    \"mobx\": \"^5.0.3\",\n    \"mobx-react\": \"^5.2.3\",\n    \"moment\": \"^2.22.2\",\n    \"play-sound\": \"^1.1.1\",\n    \"prop-types\": \"^15.6.0\",\n    \"randomcolor\": \"^0.5.3\",\n    \"react\": \"^16.0.0\",\n    \"react-addons-css-transition-group\": \"^15.6.2\",\n    \"react-dom\": \"^16.0.0\",\n    \"react-router-dom\": \"^4.2.2\",\n    \"tmp\": \"0.0.33\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.25.0\",\n    \"babel-eslint\": \"^8.0.1\",\n    \"babel-loader\": \"^7.1.1\",\n    \"babel-minify-webpack-plugin\": \"^0.3.1\",\n    \"babel-plugin-add-module-exports\": \"^0.2.1\",\n    \"babel-plugin-react-css-modules\": \"^3.3.2\",\n    \"babel-plugin-transform-async-to-generator\": \"^6.24.1\",\n    \"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n    \"babel-polyfill\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"babel-preset-react\": \"^6.24.1\",\n    \"babel-preset-react-hmre\": \"^1.1.1\",\n    \"babel-preset-react-optimize\": \"^1.0.1\",\n    \"babel-preset-stage-0\": \"^6.24.1\",\n    \"babel-register\": \"^6.24.1\",\n    \"concurrently\": \"^3.5.0\",\n    \"copy-webpack-plugin\": \"^4.2.0\",\n    \"cross-env\": \"^5.1.1\",\n    \"css-loader\": \"^1.0.0\",\n    \"electron\": \"^2.0.16\",\n    \"electron-builder\": \"^19.56.2\",\n    \"electron-updater\": \"^3.0.1\",\n    \"eslint\": \"^5.1.0\",\n    \"eslint-config-standard\": \"^11.0.0\",\n    \"eslint-config-standard-react\": \"^6.0.0\",\n    \"eslint-formatter-pretty\": \"^1.1.0\",\n    \"eslint-loader\": \"^2.0.0\",\n    \"eslint-plugin-import\": \"^2.8.0\",\n    \"eslint-plugin-node\": \"^7.0.1\",\n    \"eslint-plugin-promise\": \"^3.6.0\",\n    \"eslint-plugin-react\": \"^7.4.0\",\n    \"eslint-plugin-standard\": \"^3.0.1\",\n    \"express\": \"^4.16.2\",\n    \"extract-text-webpack-plugin\": \"^3.0.2\",\n    \"file-loader\": \"^1.1.5\",\n    \"html-loader\": \"^0.5.1\",\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"json-loader\": \"^0.5.4\",\n    \"postcss-autoreset\": \"^2.0.0\",\n    \"postcss-cssnext\": \"^3.0.2\",\n    \"postcss-import\": \"^11.0.0\",\n    \"postcss-loader\": \"^2.0.8\",\n    \"postcss-modules\": \"^1.1.0\",\n    \"style-loader\": \"^0.21.0\",\n    \"stylelint\": \"^9.3.0\",\n    \"stylelint-config-standard\": \"^18.2.0\",\n    \"url-loader\": \"^1.0.1\",\n    \"webpack\": \"^4.16.1\",\n    \"webpack-cli\": \"^3.1.0\",\n    \"webpack-dev-middleware\": \"^3.1.3\",\n    \"webpack-hot-middleware\": \"^2.20.0\"\n  }\n}\n"
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}