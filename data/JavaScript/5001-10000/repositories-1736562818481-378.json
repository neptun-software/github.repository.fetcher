{
  "metadata": {
    "timestamp": 1736562818481,
    "page": 378,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spdustin/ChatGPT-AutoExpert",
      "stars": 6632,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1181640625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n(my username @ that google mail domain).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 20.3671875,
          "content": "Attribution-NonCommercial-ShareAlike 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n    wiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More considerations\n     for the public:\n    wiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International\nPublic License\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial-ShareAlike 4.0 International Public License\n(\"Public License\"). To the extent this Public License may be\ninterpreted as a contract, You are granted the Licensed Rights in\nconsideration of Your acceptance of these terms and conditions, and the\nLicensor grants You such rights in consideration of benefits the\nLicensor receives from making the Licensed Material available under\nthese terms and conditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. BY-NC-SA Compatible License means a license listed at\n     creativecommons.org/compatiblelicenses, approved by Creative\n     Commons as essentially the equivalent of this Public License.\n\n  d. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  e. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  f. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  g. License Elements means the license attributes listed in the name\n     of a Creative Commons Public License. The License Elements of this\n     Public License are Attribution, NonCommercial, and ShareAlike.\n\n  h. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  i. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  j. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  k. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  l. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  m. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  n. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and\n\n            b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. Additional offer from the Licensor -- Adapted Material.\n               Every recipient of Adapted Material from You\n               automatically receives an offer from the Licensor to\n               exercise the Licensed Rights in the Adapted Material\n               under the conditions of the Adapter's License You apply.\n\n            c. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n  b. ShareAlike.\n\n     In addition to the conditions in Section 3(a), if You Share\n     Adapted Material You produce, the following conditions also apply.\n\n       1. The Adapter's License You apply must be a Creative Commons\n          license with the same License Elements, this version or\n          later, or a BY-NC-SA Compatible License.\n\n       2. You must include the text of, or the URI or hyperlink to, the\n          Adapter's License You apply. You may satisfy this condition\n          in any reasonable manner based on the medium, means, and\n          context in which You Share Adapted Material.\n\n       3. You may not offer or impose any additional or different terms\n          or conditions on, or apply any Effective Technological\n          Measures to, Adapted Material that restrict exercise of the\n          rights granted under the Adapter's License You apply.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material,\n     including for purposes of Section 3(b); and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the â€œLicensor.â€ The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.755859375,
          "content": "# ChatGPT AutoExpert\nby Dustin Miller • [Reddit](https://www.reddit.com/u/spdustin) • [Substack](https://spdustin.substack.com)\n\n**License**: [Attribution-NonCommercial-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n\n_Elevating Conversational AI to Expert Level_\n\n***\n\n## ❇️ NEW ❇️\nI've created a set of \"Custom GPTs\" with updated versions of these prompts:\n- [AutoExpert v6 (Chat)](https://chat.openai.com/g/g-LQHhJCXhW-autoexpert-chat)\n- [AutoExpert v6 (Dev)](https://chat.openai.com/g/g-pTF23RJ6f-autoexpert-dev)\n\n***\n\n<a href=\"https://trendshift.io/repositories/3540\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/3540\" alt=\"spdustin%2FChatGPT-AutoExpert | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n\n_**Want to support these free prompts? [My Substack](https://spdustin.substack.com) offers paid subscriptions, that's the best way to show your appreciation.**_\n\n## Introduction\nChatGPT AutoExpert is a **_shockingly effective_** set of custom instructions aimed at enhancing the capabilities of GPT-4 and GPT-3.5-Turbo conversational models. These instructions maximize the depth and nuance in responses while minimizing general disclaimers and hand-holding. The ultimate objective is to provide users with accurate, context-rich information and an improved learning experience.\n\n## Getting Started\nTo get started with ChatGPT AutoExpert, choose which set of custom instructions you want to use:\n\n* [AutoExpert (\"Standard Edition\")](standard-edition)<br>(for non-coding tasks)\n* [AutoExpert (\"Developer Edition\")](developer-edition)<br>(requires GPT-4 with Advanced Data Analysis)\n\n## Features\n\n### [\"Standard Edition\"](standard-edition)\n- ✳️ **New to v5**: **Automatically Improves your Question**<br>\n    Many of us still compose ambiguous questions when asking ChatGPT for help. The AutoExpert will automatically rewrite your question to be precise, and to elicit the best response the experts can provide.\n- ✳️ **New to v5**: **Slash Commands**<br>\n    Slash commands offer an easy way to interact with the AutoExpert system. Get summaries, ideas for additional questions, alternative viewpoints…even ask ChatGPT to review its own answer and suggest improvements.\n- ✳️ **New to v5**: **Auto-selects Frameworks and Methodologies**<br>\n    Designed to select a context-appropriate framework for formulating its best answers\n- **Maximized Depth and Nuance**<br>\n    Receive high-quality, in-depth, and ✳️ **New to v5**: multi-turn responses (_**GPT-4 only**_) without compromising on the granularity of the information.\n- **Perfect for Everyday Use**<br>\n    No need to switch these instructions on and off. They'll give you a greatly improved experience with ChatGPT, even if you're writing code. Although, if you _are_ writing code, you should check the [Developer Edition](developer-edition)\n- **Automatically Identifies the Best Expert**<br>\n    The AutoExpert custom instruction automatically finds the best expert roles to answer whatever question you ask, every time. You don't need a bunch of special prompts any more—this works with even the simplest of prompts!\n- **Minimized Hand-Holding**<br>\n    Cut through the noise and get straight to the facts, reducing unnecessary disclaimers.\n- **Explicit Reasoning**<br>\n    Your AutoExpert doesn't just provide answers; it offers an explanation, detailing the thought process behind each response.\n- **Resourceful Links**<br>\n    Automatically generates inline links for related topics and \"you may also like\" topics, helpfully linked to Google search results to avoid hallucination (GPT-3.5 still hallucinates here, but not always. GPT-4 is rock-solid).\n\n### [\"Developer Edition\"](developer-edition)\n\n> [!IMPORTANT]\n> This requires a ChatGPT professional subscription, as it needs both GPT-4 _and_ **Advanced Data Analysis**!\n\n- **Verbosity Selection**<br>Easily choose the complexity of the generated code, from compact \"code golf\" type responses, up to complex, modular code samples\n- **Powered by Jupyter**<br>ChatGPT Advanced Data Analysis already runs a Jupyter kernel under the hood. AutoExpert (Developer Edition) comes with a companion Python script that you simply upload to your conversation. It will automatically take advantage of the sandbox Python environment for editing longer code samples, and activate a handful of extra \"slash commands\" to make your life even easier.\n- **Pick Up Where You Left Off**<br>You can start a new chat without worrying about ChatGPT forgetting what you were doing in the previous one. The `/memory` slash command will download all your files, and a history of everything that's been done during your session. Simply upload it (along with the companion script) in a new session, and pick up where you left off.\n- **Install Custom Wheels**<br>Yeah, you heard me. Wheels for Python packages can be uploaded and installed automatically.\n  - *Note that your ChatGPT sandbox uses Python 3.8, on a VM with `x86_64` architecture (as of this writing)*.\n- **Save Your Work**<br>Among other `/slash` commands, AutoExpert (Developer Edition) will save all your code snippets, dehydrate its memory of your requirements and the work it's done—even back up the code cells themselves. Then it zips it up, and you can quickly download your coding conversation history.\n- **File and Symbol Tree**<br>By keeping a running history along with a file/symbol tree at the end of each response, ChatGPT will always remember what it just did, and you'll always see what files still need work. It's even smart enough to handle breaking down complex requirements in a way that allows it to write code over multiple turns.\n\n---\n\n<p xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dct=\"http://purl.org/dc/terms/\"><a property=\"dct:title\" rel=\"cc:attributionURL\" href=\"https://github.com/spdustin/ChatGPT-AutoExpert/\">ChatGPT AutoExpert (both standard and \"Developer Edition\")</a><br/>by <span property=\"cc:attributionName\">Dustin Miller</span> is licensed under <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block;\">Attribution-NonCommercial-ShareAlike 4.0 International<img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1\"><img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1\"></a></p>\n"
        },
        {
          "name": "System Prompts.md",
          "type": "blob",
          "size": 1.33203125,
          "content": "# Behind the scenes\n\nLet's see what `SYSTEM` messages are used behind the scenes at ChatGPT, and how they might influence custom instructions. They have been especially useful for me as I work on the [ChatGPT AutoExpert](README.md) custom instructions and supporting package (in the case of the Developer Edition).\n\n> [!NOTE]\n> I have added whitespace to some prompts to improve readability/formatting (but only where it wouldn't change how ChatGPT would attend to the prompt). \n>\n> I also updated this page to separate each prompt into their own Markdown file.\n\n**All examples are from GPT-4**.\n\n- [**Model Metadata**](_system-prompts/_backend_api__models.md)\n- [**Baseline GPT-4**](_system-prompts/base.md)\n  - [All Tools](_system-prompts/all_tools.md)\n  - [Advanced Data Analysis](_system-prompts/advanced-data-analysis.md)\n  - [Browse with Bing](_system-prompts/browse-with-bing.md)\n  - [DALL•E](_system-prompts/dall-e.md)\n  - [Mobile App (iOS)](_system-prompts/mobile-app-ios.md)\n  - [Mobile App (Android)](_system-prompts/mobile-app-android.md)\n  - [Plugins (Example: Zapier)](_system-prompts/plugins.md)\n  - [Vision](_system-prompts/vision.md)\n  - [Voice Conversation](_system-prompts/voice-conversation.md)\n- [**Custom Instructions**](_system-prompts/_custom-instructions.md)\n- [**Custom GPTs**](_system-prompts/gpts/README.md) ❇️ _New: 10-Nov-2023_\n"
        },
        {
          "name": "_system-prompts",
          "type": "tree",
          "content": null
        },
        {
          "name": "autoExpertChatGPTDebugHelper.user.js",
          "type": "blob",
          "size": 70.8720703125,
          "content": "// ==UserScript==\n// @name        ChatGPT Debug Helper 1.3.1\n// @author      Dustin Miller <dustin@llmimagineers.com>\n// @namespace   https://spdustin.substack.com\n// @version     1.3.1\n// @description Adds some helpful debugging tools to the ChatGPT UI\n// @run-at      document-idle\n// @match       https://chat.openai.com/*\n// @grant       none\n// ==/UserScript==\n\n/* #region(collapsed)  Highlight.js */\nvar hljs = (function () {\n  'use strict';\n  function e(n) {\n    return (\n      n instanceof Map\n        ? (n.clear =\n            n.delete =\n            n.set =\n              () => {\n                throw Error('map is read-only');\n              })\n        : n instanceof Set &&\n          (n.add =\n            n.clear =\n            n.delete =\n              () => {\n                throw Error('set is read-only');\n              }),\n      Object.freeze(n),\n      Object.getOwnPropertyNames(n).forEach((t) => {\n        const i = n[t],\n          a = typeof i;\n        ('object' !== a && 'function' !== a) || Object.isFrozen(i) || e(i);\n      }),\n      n\n    );\n  }\n  function n(e) {\n    return e\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#x27;');\n  }\n  function t(e, ...n) {\n    const t = Object.create(null);\n    for (const n in e) t[n] = e[n];\n    return (\n      n.forEach((e) => {\n        for (const n in e) t[n] = e[n];\n      }),\n      t\n    );\n  }\n  function i(e) {\n    return e ? ('string' == typeof e ? e : e.source) : null;\n  }\n  function a(e) {\n    return o('(?=', e, ')');\n  }\n  function r(e) {\n    return o('(?:', e, ')*');\n  }\n  function s(e) {\n    return o('(?:', e, ')?');\n  }\n  function o(...e) {\n    return e.map((e) => i(e)).join('');\n  }\n  function l(...e) {\n    const n = ((e) => {\n      const n = e[e.length - 1];\n      return 'object' == typeof n && n.constructor === Object ? (e.splice(e.length - 1, 1), n) : {};\n    })(e);\n    return '(' + (n.capture ? '' : '?:') + e.map((e) => i(e)).join('|') + ')';\n  }\n  function c(e) {\n    return RegExp(e.toString() + '|').exec('').length - 1;\n  }\n  function d(e, { joinWith: n }) {\n    let t = 0;\n    return e\n      .map((e) => {\n        t += 1;\n        const n = t;\n        let a = i(e),\n          r = '';\n        for (; a.length > 0; ) {\n          const e = M.exec(a);\n          if (!e) {\n            r += a;\n            break;\n          }\n          (r += a.substring(0, e.index)),\n            (a = a.substring(e.index + e[0].length)),\n            '\\\\' === e[0][0] && e[1]\n              ? (r += '\\\\' + (Number(e[1]) + n))\n              : ((r += e[0]), '(' === e[0] && t++);\n        }\n        return r;\n      })\n      .map((e) => `(${e})`)\n      .join(n);\n  }\n  function g(e, n) {\n    '.' === e.input[e.index - 1] && n.ignoreMatch();\n  }\n  function u(e, n) {\n    void 0 !== e.className && ((e.scope = e.className), delete e.className);\n  }\n  function b(e, n) {\n    n &&\n      e.beginKeywords &&\n      ((e.begin = '\\\\b(' + e.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)'),\n      (e.__beforeBegin = g),\n      (e.keywords = e.keywords || e.beginKeywords),\n      delete e.beginKeywords,\n      void 0 === e.relevance && (e.relevance = 0));\n  }\n  function h(e, n) {\n    Array.isArray(e.illegal) && (e.illegal = l(...e.illegal));\n  }\n  function p(e, n) {\n    if (e.match) {\n      if (e.begin || e.end) throw Error('begin & end are not supported with match');\n      (e.begin = e.match), delete e.match;\n    }\n  }\n  function m(e, n) {\n    void 0 === e.relevance && (e.relevance = 1);\n  }\n  function f(e, n, t = G) {\n    function i(e, t) {\n      n && (t = t.map((e) => e.toLowerCase())),\n        t.forEach((n) => {\n          const t = n.split('|');\n          a[t[0]] = [e, y(t[0], t[1])];\n        });\n    }\n    const a = Object.create(null);\n    return (\n      'string' == typeof e\n        ? i(t, e.split(' '))\n        : Array.isArray(e)\n        ? i(t, e)\n        : Object.keys(e).forEach((t) => {\n            Object.assign(a, f(e[t], n, t));\n          }),\n      a\n    );\n  }\n  function y(e, n) {\n    return n ? Number(n) : ((e) => Z.includes(e.toLowerCase()))(e) ? 0 : 1;\n  }\n  function E(e, n, { key: t }) {\n    let i = 0;\n    const a = e[t],\n      r = {},\n      s = {};\n    for (let e = 1; e <= n.length; e++) (s[e + i] = a[e]), (r[e + i] = !0), (i += c(n[e - 1]));\n    (e[t] = s), (e[t]._emit = r), (e[t]._multi = !0);\n  }\n  function _(e) {\n    ((e) => {\n      e.scope &&\n        'object' == typeof e.scope &&\n        null !== e.scope &&\n        ((e.beginScope = e.scope), delete e.scope);\n    })(e),\n      'string' == typeof e.beginScope && (e.beginScope = { _wrap: e.beginScope }),\n      'string' == typeof e.endScope && (e.endScope = { _wrap: e.endScope }),\n      ((e) => {\n        if (Array.isArray(e.begin)) {\n          if (e.skip || e.excludeBegin || e.returnBegin)\n            throw (W('skip, excludeBegin, returnBegin not compatible with beginScope: {}'), J);\n          if ('object' != typeof e.beginScope || null === e.beginScope)\n            throw (W('beginScope must be object'), J);\n          E(e, e.begin, { key: 'beginScope' }), (e.begin = d(e.begin, { joinWith: '' }));\n        }\n      })(e),\n      ((e) => {\n        if (Array.isArray(e.end)) {\n          if (e.skip || e.excludeEnd || e.returnEnd)\n            throw (W('skip, excludeEnd, returnEnd not compatible with endScope: {}'), J);\n          if ('object' != typeof e.endScope || null === e.endScope)\n            throw (W('endScope must be object'), J);\n          E(e, e.end, { key: 'endScope' }), (e.end = d(e.end, { joinWith: '' }));\n        }\n      })(e);\n  }\n  function v(e) {\n    function n(n, t) {\n      return RegExp(\n        i(n),\n        'm' + (e.case_insensitive ? 'i' : '') + (e.unicodeRegex ? 'u' : '') + (t ? 'g' : ''),\n      );\n    }\n    class a {\n      constructor() {\n        (this.matchIndexes = {}), (this.regexes = []), (this.matchAt = 1), (this.position = 0);\n      }\n      addRule(e, n) {\n        (n.position = this.position++),\n          (this.matchIndexes[this.matchAt] = n),\n          this.regexes.push([n, e]),\n          (this.matchAt += c(e) + 1);\n      }\n      compile() {\n        0 === this.regexes.length && (this.exec = () => null);\n        const e = this.regexes.map((e) => e[1]);\n        (this.matcherRe = n(d(e, { joinWith: '|' }), !0)), (this.lastIndex = 0);\n      }\n      exec(e) {\n        this.matcherRe.lastIndex = this.lastIndex;\n        const n = this.matcherRe.exec(e);\n        if (!n) return null;\n        const t = n.findIndex((e, n) => n > 0 && void 0 !== e),\n          i = this.matchIndexes[t];\n        return n.splice(0, t), Object.assign(n, i);\n      }\n    }\n    class r {\n      constructor() {\n        (this.rules = []),\n          (this.multiRegexes = []),\n          (this.count = 0),\n          (this.lastIndex = 0),\n          (this.regexIndex = 0);\n      }\n      getMatcher(e) {\n        if (this.multiRegexes[e]) return this.multiRegexes[e];\n        const n = new a();\n        return (\n          this.rules.slice(e).forEach(([e, t]) => n.addRule(e, t)),\n          n.compile(),\n          (this.multiRegexes[e] = n),\n          n\n        );\n      }\n      resumingScanAtSamePosition() {\n        return 0 !== this.regexIndex;\n      }\n      considerAll() {\n        this.regexIndex = 0;\n      }\n      addRule(e, n) {\n        this.rules.push([e, n]), 'begin' === n.type && this.count++;\n      }\n      exec(e) {\n        const n = this.getMatcher(this.regexIndex);\n        n.lastIndex = this.lastIndex;\n        let t = n.exec(e);\n        if (this.resumingScanAtSamePosition())\n          if (t && t.index === this.lastIndex);\n          else {\n            const n = this.getMatcher(0);\n            (n.lastIndex = this.lastIndex + 1), (t = n.exec(e));\n          }\n        return (\n          t &&\n            ((this.regexIndex += t.position + 1),\n            this.regexIndex === this.count && this.considerAll()),\n          t\n        );\n      }\n    }\n    if (\n      (e.compilerExtensions || (e.compilerExtensions = []),\n      e.contains && e.contains.includes('self'))\n    )\n      throw Error(\n        'ERR: contains `self` is not supported at the top-level of a language.  See documentation.',\n      );\n    return (\n      (e.classNameAliases = t(e.classNameAliases || {})),\n      (function a(s, o) {\n        const l = s;\n        if (s.isCompiled) return l;\n        [u, p, _, F].forEach((e) => e(s, o)),\n          e.compilerExtensions.forEach((e) => e(s, o)),\n          (s.__beforeBegin = null),\n          [b, h, m].forEach((e) => e(s, o)),\n          (s.isCompiled = !0);\n        let c = null;\n        return (\n          'object' == typeof s.keywords &&\n            s.keywords.$pattern &&\n            ((s.keywords = Object.assign({}, s.keywords)),\n            (c = s.keywords.$pattern),\n            delete s.keywords.$pattern),\n          (c = c || /\\w+/),\n          s.keywords && (s.keywords = f(s.keywords, e.case_insensitive)),\n          (l.keywordPatternRe = n(c, !0)),\n          o &&\n            (s.begin || (s.begin = /\\B|\\b/),\n            (l.beginRe = n(l.begin)),\n            s.end || s.endsWithParent || (s.end = /\\B|\\b/),\n            s.end && (l.endRe = n(l.end)),\n            (l.terminatorEnd = i(l.end) || ''),\n            s.endsWithParent &&\n              o.terminatorEnd &&\n              (l.terminatorEnd += (s.end ? '|' : '') + o.terminatorEnd)),\n          s.illegal && (l.illegalRe = n(s.illegal)),\n          s.contains || (s.contains = []),\n          (s.contains = [].concat(\n            ...s.contains.map((e) =>\n              ((e) => (\n                e.variants &&\n                  !e.cachedVariants &&\n                  (e.cachedVariants = e.variants.map((n) => t(e, { variants: null }, n))),\n                e.cachedVariants\n                  ? e.cachedVariants\n                  : w(e)\n                  ? t(e, { starts: e.starts ? t(e.starts) : null })\n                  : Object.isFrozen(e)\n                  ? t(e)\n                  : e\n              ))('self' === e ? s : e),\n            ),\n          )),\n          s.contains.forEach((e) => {\n            a(e, l);\n          }),\n          s.starts && a(s.starts, o),\n          (l.matcher = ((e) => {\n            const n = new r();\n            return (\n              e.contains.forEach((e) => n.addRule(e.begin, { rule: e, type: 'begin' })),\n              e.terminatorEnd && n.addRule(e.terminatorEnd, { type: 'end' }),\n              e.illegal && n.addRule(e.illegal, { type: 'illegal' }),\n              n\n            );\n          })(l)),\n          l\n        );\n      })(e)\n    );\n  }\n  function w(e) {\n    return !!e && (e.endsWithParent || w(e.starts));\n  }\n  class x {\n    constructor(e) {\n      void 0 === e.data && (e.data = {}), (this.data = e.data), (this.isMatchIgnored = !1);\n    }\n    ignoreMatch() {\n      this.isMatchIgnored = !0;\n    }\n  }\n  const k = (e) => !!e.scope;\n  class N {\n    constructor(e, n) {\n      (this.buffer = ''), (this.classPrefix = n.classPrefix), e.walk(this);\n    }\n    addText(e) {\n      this.buffer += n(e);\n    }\n    openNode(e) {\n      if (!k(e)) return;\n      const n = ((e, { prefix: n }) => {\n        if (e.startsWith('language:')) return e.replace('language:', 'language-');\n        if (e.includes('.')) {\n          const t = e.split('.');\n          return [`${n}${t.shift()}`, ...t.map((e, n) => `${e}${'_'.repeat(n + 1)}`)].join(' ');\n        }\n        return `${n}${e}`;\n      })(e.scope, { prefix: this.classPrefix });\n      this.span(n);\n    }\n    closeNode(e) {\n      k(e) && (this.buffer += '</span>');\n    }\n    value() {\n      return this.buffer;\n    }\n    span(e) {\n      this.buffer += `<span class=\"${e}\">`;\n    }\n  }\n  const A = (e = {}) => {\n    const n = { children: [] };\n    return Object.assign(n, e), n;\n  };\n  class S {\n    constructor() {\n      (this.rootNode = A()), (this.stack = [this.rootNode]);\n    }\n    get top() {\n      return this.stack[this.stack.length - 1];\n    }\n    get root() {\n      return this.rootNode;\n    }\n    add(e) {\n      this.top.children.push(e);\n    }\n    openNode(e) {\n      const n = A({ scope: e });\n      this.add(n), this.stack.push(n);\n    }\n    closeNode() {\n      if (this.stack.length > 1) return this.stack.pop();\n    }\n    closeAllNodes() {\n      for (; this.closeNode(); );\n    }\n    toJSON() {\n      return JSON.stringify(this.rootNode, null, 4);\n    }\n    walk(e) {\n      return this.constructor._walk(e, this.rootNode);\n    }\n    static _walk(e, n) {\n      return (\n        'string' == typeof n\n          ? e.addText(n)\n          : n.children &&\n            (e.openNode(n), n.children.forEach((n) => this._walk(e, n)), e.closeNode(n)),\n        e\n      );\n    }\n    static _collapse(e) {\n      'string' != typeof e &&\n        e.children &&\n        (e.children.every((e) => 'string' == typeof e)\n          ? (e.children = [e.children.join('')])\n          : e.children.forEach((e) => {\n              S._collapse(e);\n            }));\n    }\n  }\n  class O extends S {\n    constructor(e) {\n      super(), (this.options = e);\n    }\n    addText(e) {\n      '' !== e && this.add(e);\n    }\n    startScope(e) {\n      this.openNode(e);\n    }\n    endScope() {\n      this.closeNode();\n    }\n    __addSublanguage(e, n) {\n      const t = e.root;\n      n && (t.scope = 'language:' + n), this.add(t);\n    }\n    toHTML() {\n      return new N(this, this.options).value();\n    }\n    finalize() {\n      return this.closeAllNodes(), !0;\n    }\n  }\n  const M = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./,\n    R = '[a-zA-Z]\\\\w*',\n    T = '[a-zA-Z_]\\\\w*',\n    B = '\\\\b\\\\d+(\\\\.\\\\d+)?',\n    C = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)',\n    I = '\\\\b(0b[01]+)',\n    L = { begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0 },\n    j = { scope: 'string', begin: \"'\", end: \"'\", illegal: '\\\\n', contains: [L] },\n    $ = { scope: 'string', begin: '\"', end: '\"', illegal: '\\\\n', contains: [L] },\n    D = (e, n, i = {}) => {\n      const a = t({ scope: 'comment', begin: e, end: n, contains: [] }, i);\n      a.contains.push({\n        scope: 'doctag',\n        begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n        end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n        excludeBegin: !0,\n        relevance: 0,\n      });\n      const r = l(\n        'I',\n        'a',\n        'is',\n        'so',\n        'us',\n        'to',\n        'at',\n        'if',\n        'in',\n        'it',\n        'on',\n        /[A-Za-z]+['](d|ve|re|ll|t|s|n)/,\n        /[A-Za-z]+[-][a-z]+/,\n        /[A-Za-z][a-z]{2,}/,\n      );\n      return a.contains.push({ begin: o(/[ ]+/, '(', r, /[.]?[:]?([.][ ]|[ ])/, '){3}') }), a;\n    },\n    z = D('//', '$'),\n    P = D('/\\\\*', '\\\\*/'),\n    U = D('#', '$');\n  var H = Object.freeze({\n    __proto__: null,\n    APOS_STRING_MODE: j,\n    BACKSLASH_ESCAPE: L,\n    BINARY_NUMBER_MODE: { scope: 'number', begin: I, relevance: 0 },\n    BINARY_NUMBER_RE: I,\n    COMMENT: D,\n    C_BLOCK_COMMENT_MODE: P,\n    C_LINE_COMMENT_MODE: z,\n    C_NUMBER_MODE: { scope: 'number', begin: C, relevance: 0 },\n    C_NUMBER_RE: C,\n    END_SAME_AS_BEGIN: (e) =>\n      Object.assign(e, {\n        'on:begin': (e, n) => {\n          n.data._beginMatch = e[1];\n        },\n        'on:end': (e, n) => {\n          n.data._beginMatch !== e[1] && n.ignoreMatch();\n        },\n      }),\n    HASH_COMMENT_MODE: U,\n    IDENT_RE: R,\n    MATCH_NOTHING_RE: /\\b\\B/,\n    METHOD_GUARD: { begin: '\\\\.\\\\s*' + T, relevance: 0 },\n    NUMBER_MODE: { scope: 'number', begin: B, relevance: 0 },\n    NUMBER_RE: B,\n    PHRASAL_WORDS_MODE: {\n      begin:\n        /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/,\n    },\n    QUOTE_STRING_MODE: $,\n    REGEXP_MODE: {\n      scope: 'regexp',\n      begin: /\\/(?=[^/\\n]*\\/)/,\n      end: /\\/[gimuy]*/,\n      contains: [L, { begin: /\\[/, end: /\\]/, relevance: 0, contains: [L] }],\n    },\n    RE_STARTERS_RE:\n      '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~',\n    SHEBANG: (e = {}) => {\n      const n = /^#![ ]*\\//;\n      return (\n        e.binary && (e.begin = o(n, /.*\\b/, e.binary, /\\b.*/)),\n        t(\n          {\n            scope: 'meta',\n            begin: n,\n            end: /$/,\n            relevance: 0,\n            'on:begin': (e, n) => {\n              0 !== e.index && n.ignoreMatch();\n            },\n          },\n          e,\n        )\n      );\n    },\n    TITLE_MODE: { scope: 'title', begin: R, relevance: 0 },\n    UNDERSCORE_IDENT_RE: T,\n    UNDERSCORE_TITLE_MODE: { scope: 'title', begin: T, relevance: 0 },\n  });\n  const F = (e, n) => {\n      if (!e.beforeMatch) return;\n      if (e.starts) throw Error('beforeMatch cannot be used with starts');\n      const t = Object.assign({}, e);\n      Object.keys(e).forEach((n) => {\n        delete e[n];\n      }),\n        (e.keywords = t.keywords),\n        (e.begin = o(t.beforeMatch, a(t.begin))),\n        (e.starts = { relevance: 0, contains: [Object.assign(t, { endsParent: !0 })] }),\n        (e.relevance = 0),\n        delete t.beforeMatch;\n    },\n    Z = ['of', 'and', 'for', 'in', 'not', 'or', 'if', 'then', 'parent', 'list', 'value'],\n    G = 'keyword',\n    K = {},\n    W = (e) => {\n      console.error(e);\n    },\n    X = (e, ...n) => {\n      console.log('WARN: ' + e, ...n);\n    },\n    q = (e, n) => {\n      K[`${e}/${n}`] || (console.log(`Deprecated as of ${e}. ${n}`), (K[`${e}/${n}`] = !0));\n    },\n    J = Error();\n  class Q extends Error {\n    constructor(e, n) {\n      super(e), (this.name = 'HTMLInjectionError'), (this.html = n);\n    }\n  }\n  const V = n,\n    Y = t,\n    ee = Symbol('nomatch'),\n    ne = (n) => {\n      function t(e) {\n        return N.noHighlightRe.test(e);\n      }\n      function i(e, n, t) {\n        let i = '',\n          a = '';\n        'object' == typeof n\n          ? ((i = e), (t = n.ignoreIllegals), (a = n.language))\n          : (q('10.7.0', 'highlight(lang, code, ...args) has been deprecated.'),\n            q(\n              '10.7.0',\n              'Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277',\n            ),\n            (a = e),\n            (i = n)),\n          void 0 === t && (t = !0);\n        const r = { code: i, language: a };\n        m('before:highlight', r);\n        const s = r.result ? r.result : c(r.language, r.code, t);\n        return (s.code = r.code), m('after:highlight', s), s;\n      }\n      function c(e, n, t, i) {\n        function a() {\n          if (!S.keywords) return void M.addText(R);\n          let e = 0;\n          S.keywordPatternRe.lastIndex = 0;\n          let n = S.keywordPatternRe.exec(R),\n            t = '';\n          for (; n; ) {\n            t += R.substring(e, n.index);\n            const a = E.case_insensitive ? n[0].toLowerCase() : n[0],\n              r = ((i = a), S.keywords[i]);\n            if (r) {\n              const [e, i] = r;\n              if (\n                (M.addText(t),\n                (t = ''),\n                (m[a] = (m[a] || 0) + 1),\n                m[a] <= 7 && (T += i),\n                e.startsWith('_'))\n              )\n                t += n[0];\n              else {\n                const t = E.classNameAliases[e] || e;\n                s(n[0], t);\n              }\n            } else t += n[0];\n            (e = S.keywordPatternRe.lastIndex), (n = S.keywordPatternRe.exec(R));\n          }\n          var i;\n          (t += R.substring(e)), M.addText(t);\n        }\n        function r() {\n          null != S.subLanguage\n            ? (() => {\n                if ('' === R) return;\n                let e = null;\n                if ('string' == typeof S.subLanguage) {\n                  if (!f[S.subLanguage]) return void M.addText(R);\n                  (e = c(S.subLanguage, R, !0, O[S.subLanguage])), (O[S.subLanguage] = e._top);\n                } else e = d(R, S.subLanguage.length ? S.subLanguage : null);\n                S.relevance > 0 && (T += e.relevance), M.__addSublanguage(e._emitter, e.language);\n              })()\n            : a(),\n            (R = '');\n        }\n        function s(e, n) {\n          '' !== e && (M.startScope(n), M.addText(e), M.endScope());\n        }\n        function o(e, n) {\n          let t = 1;\n          const i = n.length - 1;\n          for (; t <= i; ) {\n            if (!e._emit[t]) {\n              t++;\n              continue;\n            }\n            const i = E.classNameAliases[e[t]] || e[t],\n              r = n[t];\n            i ? s(r, i) : ((R = r), a(), (R = '')), t++;\n          }\n        }\n        function l(e, n) {\n          return (\n            e.scope &&\n              'string' == typeof e.scope &&\n              M.openNode(E.classNameAliases[e.scope] || e.scope),\n            e.beginScope &&\n              (e.beginScope._wrap\n                ? (s(R, E.classNameAliases[e.beginScope._wrap] || e.beginScope._wrap), (R = ''))\n                : e.beginScope._multi && (o(e.beginScope, n), (R = ''))),\n            (S = Object.create(e, { parent: { value: S } })),\n            S\n          );\n        }\n        function g(e, n, t) {\n          let i = ((e, n) => {\n            const t = e && e.exec(n);\n            return t && 0 === t.index;\n          })(e.endRe, t);\n          if (i) {\n            if (e['on:end']) {\n              const t = new x(e);\n              e['on:end'](n, t), t.isMatchIgnored && (i = !1);\n            }\n            if (i) {\n              for (; e.endsParent && e.parent; ) e = e.parent;\n              return e;\n            }\n          }\n          if (e.endsWithParent) return g(e.parent, n, t);\n        }\n        function u(e) {\n          return 0 === S.matcher.regexIndex ? ((R += e[0]), 1) : ((I = !0), 0);\n        }\n        function h(e) {\n          const t = e[0],\n            i = n.substring(e.index),\n            a = g(S, e, i);\n          if (!a) return ee;\n          const c = S;\n          S.endScope && S.endScope._wrap\n            ? (r(), s(t, S.endScope._wrap))\n            : S.endScope && S.endScope._multi\n            ? (r(), o(S.endScope, e))\n            : c.skip\n            ? (R += t)\n            : (c.returnEnd || c.excludeEnd || (R += t), r(), c.excludeEnd && (R = t));\n          do {\n            S.scope && M.closeNode(), S.skip || S.subLanguage || (T += S.relevance), (S = S.parent);\n          } while (S !== a.parent);\n          return a.starts && l(a.starts, e), c.returnEnd ? 0 : t.length;\n        }\n        function p(i, a) {\n          const s = a && a[0];\n          if (((R += i), null == s)) return r(), 0;\n          if ('begin' === y.type && 'end' === a.type && y.index === a.index && '' === s) {\n            if (((R += n.slice(a.index, a.index + 1)), !_)) {\n              const n = Error(`0 width match regex (${e})`);\n              throw ((n.languageName = e), (n.badRule = y.rule), n);\n            }\n            return 1;\n          }\n          if (((y = a), 'begin' === a.type))\n            return ((e) => {\n              const n = e[0],\n                t = e.rule,\n                i = new x(t),\n                a = [t.__beforeBegin, t['on:begin']];\n              for (const t of a) if (t && (t(e, i), i.isMatchIgnored)) return u(n);\n              return (\n                t.skip\n                  ? (R += n)\n                  : (t.excludeBegin && (R += n), r(), t.returnBegin || t.excludeBegin || (R = n)),\n                l(t, e),\n                t.returnBegin ? 0 : n.length\n              );\n            })(a);\n          if ('illegal' === a.type && !t) {\n            const e = Error(\n              'Illegal lexeme \"' + s + '\" for mode \"' + (S.scope || '<unnamed>') + '\"',\n            );\n            throw ((e.mode = S), e);\n          }\n          if ('end' === a.type) {\n            const e = h(a);\n            if (e !== ee) return e;\n          }\n          if ('illegal' === a.type && '' === s) return 1;\n          if (C > 1e5 && C > 3 * a.index)\n            throw Error('potential infinite loop, way more iterations than matches');\n          return (R += s), s.length;\n        }\n        const m = Object.create(null);\n        let y = {};\n        const E = b(e);\n        if (!E) throw (W(w.replace('{}', e)), Error('Unknown language: \"' + e + '\"'));\n        const k = v(E);\n        let A = '',\n          S = i || k;\n        const O = {},\n          M = new N.__emitter(N);\n        (() => {\n          const e = [];\n          for (let n = S; n !== E; n = n.parent) n.scope && e.unshift(n.scope);\n          e.forEach((e) => M.openNode(e));\n        })();\n        let R = '',\n          T = 0,\n          B = 0,\n          C = 0,\n          I = !1;\n        try {\n          if (E.__emitTokens) E.__emitTokens(n, M);\n          else {\n            for (S.matcher.considerAll(); ; ) {\n              C++, I ? (I = !1) : S.matcher.considerAll(), (S.matcher.lastIndex = B);\n              const e = S.matcher.exec(n);\n              if (!e) break;\n              const t = p(n.substring(B, e.index), e);\n              B = e.index + t;\n            }\n            p(n.substring(B));\n          }\n          return (\n            M.finalize(),\n            (A = M.toHTML()),\n            { language: e, value: A, relevance: T, illegal: !1, _emitter: M, _top: S }\n          );\n        } catch (t) {\n          if (t.message && t.message.includes('Illegal'))\n            return {\n              language: e,\n              value: V(n),\n              illegal: !0,\n              relevance: 0,\n              _illegalBy: {\n                message: t.message,\n                index: B,\n                context: n.slice(B - 100, B + 100),\n                mode: t.mode,\n                resultSoFar: A,\n              },\n              _emitter: M,\n            };\n          if (_)\n            return {\n              language: e,\n              value: V(n),\n              illegal: !1,\n              relevance: 0,\n              errorRaised: t,\n              _emitter: M,\n              _top: S,\n            };\n          throw t;\n        }\n      }\n      function d(e, n) {\n        n = n || N.languages || Object.keys(f);\n        const t = ((e) => {\n            const n = {\n              value: V(e),\n              illegal: !1,\n              relevance: 0,\n              _top: k,\n              _emitter: new N.__emitter(N),\n            };\n            return n._emitter.addText(e), n;\n          })(e),\n          i = n\n            .filter(b)\n            .filter(p)\n            .map((n) => c(n, e, !1));\n        i.unshift(t);\n        const a = i.sort((e, n) => {\n            if (e.relevance !== n.relevance) return n.relevance - e.relevance;\n            if (e.language && n.language) {\n              if (b(e.language).supersetOf === n.language) return 1;\n              if (b(n.language).supersetOf === e.language) return -1;\n            }\n            return 0;\n          }),\n          [r, s] = a,\n          o = r;\n        return (o.secondBest = s), o;\n      }\n      function g(e) {\n        let n = null;\n        const a = ((e) => {\n          let n = e.className + ' ';\n          n += e.parentNode ? e.parentNode.className : '';\n          const i = N.languageDetectRe.exec(n);\n          if (i) {\n            const n = b(i[1]);\n            return (\n              n ||\n                (X(w.replace('{}', i[1])),\n                X('Falling back to no-highlight mode for this block.', e)),\n              n ? i[1] : 'no-highlight'\n            );\n          }\n          return n.split(/\\s+/).find((e) => t(e) || b(e));\n        })(e);\n        if (t(a)) return;\n        if ((m('before:highlightElement', { el: e, language: a }), e.dataset.highlighted))\n          return void console.log(\n            'Element previously highlighted. To highlight again, first unset `dataset.highlighted`.',\n            e,\n          );\n        if (\n          e.children.length > 0 &&\n          (N.ignoreUnescapedHTML ||\n            (console.warn(\n              'One of your code blocks includes unescaped HTML. This is a potentially serious security risk.',\n            ),\n            console.warn('https://github.com/highlightjs/highlight.js/wiki/security'),\n            console.warn('The element with unescaped HTML:'),\n            console.warn(e)),\n          N.throwUnescapedHTML)\n        )\n          throw new Q('One of your code blocks includes unescaped HTML.', e.innerHTML);\n        n = e;\n        const r = n.textContent,\n          s = a ? i(r, { language: a, ignoreIllegals: !0 }) : d(r);\n        (e.innerHTML = s.value),\n          (e.dataset.highlighted = 'yes'),\n          ((e, n, t) => {\n            const i = (n && y[n]) || t;\n            e.classList.add('hljs'), e.classList.add('language-' + i);\n          })(e, a, s.language),\n          (e.result = { language: s.language, re: s.relevance, relevance: s.relevance }),\n          s.secondBest &&\n            (e.secondBest = { language: s.secondBest.language, relevance: s.secondBest.relevance }),\n          m('after:highlightElement', { el: e, result: s, text: r });\n      }\n      function u() {\n        'loading' !== document.readyState\n          ? document.querySelectorAll(N.cssSelector).forEach(g)\n          : (A = !0);\n      }\n      function b(e) {\n        return (e = (e || '').toLowerCase()), f[e] || f[y[e]];\n      }\n      function h(e, { languageName: n }) {\n        'string' == typeof e && (e = [e]),\n          e.forEach((e) => {\n            y[e.toLowerCase()] = n;\n          });\n      }\n      function p(e) {\n        const n = b(e);\n        return n && !n.disableAutodetect;\n      }\n      function m(e, n) {\n        const t = e;\n        E.forEach((e) => {\n          e[t] && e[t](n);\n        });\n      }\n      const f = Object.create(null),\n        y = Object.create(null),\n        E = [];\n      let _ = !0;\n      const w =\n          \"Could not find the language '{}', did you forget to load/include a language module?\",\n        k = { disableAutodetect: !0, name: 'Plain text', contains: [] };\n      let N = {\n          ignoreUnescapedHTML: !1,\n          throwUnescapedHTML: !1,\n          noHighlightRe: /^(no-?highlight)$/i,\n          languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n          classPrefix: 'hljs-',\n          cssSelector: 'pre code',\n          languages: null,\n          __emitter: O,\n        },\n        A = !1;\n      'undefined' != typeof window &&\n        window.addEventListener &&\n        window.addEventListener(\n          'DOMContentLoaded',\n          () => {\n            A && u();\n          },\n          !1,\n        ),\n        Object.assign(n, {\n          highlight: i,\n          highlightAuto: d,\n          highlightAll: u,\n          highlightElement: g,\n          highlightBlock: (e) => (\n            q('10.7.0', 'highlightBlock will be removed entirely in v12.0'),\n            q('10.7.0', 'Please use highlightElement now.'),\n            g(e)\n          ),\n          configure: (e) => {\n            N = Y(N, e);\n          },\n          initHighlighting: () => {\n            u(), q('10.6.0', 'initHighlighting() deprecated.  Use highlightAll() now.');\n          },\n          initHighlightingOnLoad: () => {\n            u(), q('10.6.0', 'initHighlightingOnLoad() deprecated.  Use highlightAll() now.');\n          },\n          registerLanguage: (e, t) => {\n            let i = null;\n            try {\n              i = t(n);\n            } catch (t) {\n              if ((W(\"Language definition for '{}' could not be registered.\".replace('{}', e)), !_))\n                throw t;\n              W(t), (i = k);\n            }\n            i.name || (i.name = e),\n              (f[e] = i),\n              (i.rawDefinition = t.bind(null, n)),\n              i.aliases && h(i.aliases, { languageName: e });\n          },\n          unregisterLanguage: (e) => {\n            delete f[e];\n            for (const n of Object.keys(y)) y[n] === e && delete y[n];\n          },\n          listLanguages: () => Object.keys(f),\n          getLanguage: b,\n          registerAliases: h,\n          autoDetection: p,\n          inherit: Y,\n          addPlugin: (e) => {\n            ((e) => {\n              e['before:highlightBlock'] &&\n                !e['before:highlightElement'] &&\n                (e['before:highlightElement'] = (n) => {\n                  e['before:highlightBlock'](Object.assign({ block: n.el }, n));\n                }),\n                e['after:highlightBlock'] &&\n                  !e['after:highlightElement'] &&\n                  (e['after:highlightElement'] = (n) => {\n                    e['after:highlightBlock'](Object.assign({ block: n.el }, n));\n                  });\n            })(e),\n              E.push(e);\n          },\n          removePlugin: (e) => {\n            const n = E.indexOf(e);\n            -1 !== n && E.splice(n, 1);\n          },\n        }),\n        (n.debugMode = () => {\n          _ = !1;\n        }),\n        (n.safeMode = () => {\n          _ = !0;\n        }),\n        (n.versionString = '11.9.0'),\n        (n.regex = { concat: o, lookahead: a, either: l, optional: s, anyNumberOfTimes: r });\n      for (const n in H) 'object' == typeof H[n] && e(H[n]);\n      return Object.assign(n, H), n;\n    },\n    te = ne({});\n  return (te.newInstance = () => ne({})), te;\n})();\n'object' == typeof exports && 'undefined' != typeof module && (module.exports = hljs),\n  (() => {\n    var e = (() => {\n      'use strict';\n      const e = '[A-Za-z$_][0-9A-Za-z$_]*',\n        n = [\n          'as',\n          'in',\n          'of',\n          'if',\n          'for',\n          'while',\n          'finally',\n          'var',\n          'new',\n          'function',\n          'do',\n          'return',\n          'void',\n          'else',\n          'break',\n          'catch',\n          'instanceof',\n          'with',\n          'throw',\n          'case',\n          'default',\n          'try',\n          'switch',\n          'continue',\n          'typeof',\n          'delete',\n          'let',\n          'yield',\n          'const',\n          'class',\n          'debugger',\n          'async',\n          'await',\n          'static',\n          'import',\n          'from',\n          'export',\n          'extends',\n        ],\n        t = ['true', 'false', 'null', 'undefined', 'NaN', 'Infinity'],\n        i = [\n          'Object',\n          'Function',\n          'Boolean',\n          'Symbol',\n          'Math',\n          'Date',\n          'Number',\n          'BigInt',\n          'String',\n          'RegExp',\n          'Array',\n          'Float32Array',\n          'Float64Array',\n          'Int8Array',\n          'Uint8Array',\n          'Uint8ClampedArray',\n          'Int16Array',\n          'Int32Array',\n          'Uint16Array',\n          'Uint32Array',\n          'BigInt64Array',\n          'BigUint64Array',\n          'Set',\n          'Map',\n          'WeakSet',\n          'WeakMap',\n          'ArrayBuffer',\n          'SharedArrayBuffer',\n          'Atomics',\n          'DataView',\n          'JSON',\n          'Promise',\n          'Generator',\n          'GeneratorFunction',\n          'AsyncFunction',\n          'Reflect',\n          'Proxy',\n          'Intl',\n          'WebAssembly',\n        ],\n        a = [\n          'Error',\n          'EvalError',\n          'InternalError',\n          'RangeError',\n          'ReferenceError',\n          'SyntaxError',\n          'TypeError',\n          'URIError',\n        ],\n        r = [\n          'setInterval',\n          'setTimeout',\n          'clearInterval',\n          'clearTimeout',\n          'require',\n          'exports',\n          'eval',\n          'isFinite',\n          'isNaN',\n          'parseFloat',\n          'parseInt',\n          'decodeURI',\n          'decodeURIComponent',\n          'encodeURI',\n          'encodeURIComponent',\n          'escape',\n          'unescape',\n        ],\n        s = [\n          'arguments',\n          'this',\n          'super',\n          'console',\n          'window',\n          'document',\n          'localStorage',\n          'sessionStorage',\n          'module',\n          'global',\n        ],\n        o = [].concat(r, i, a);\n      return (l) => {\n        const c = l.regex,\n          d = e,\n          g = {\n            begin: /<[A-Za-z0-9\\\\._:-]+/,\n            end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n            isTrulyOpeningTag: (e, n) => {\n              const t = e[0].length + e.index,\n                i = e.input[t];\n              if ('<' === i || ',' === i) return void n.ignoreMatch();\n              let a;\n              '>' === i &&\n                (((e, { after: n }) => {\n                  const t = '</' + e[0].slice(1);\n                  return -1 !== e.input.indexOf(t, n);\n                })(e, { after: t }) ||\n                  n.ignoreMatch());\n              const r = e.input.substring(t);\n              ((a = r.match(/^\\s*=/)) || ((a = r.match(/^\\s+extends\\s+/)) && 0 === a.index)) &&\n                n.ignoreMatch();\n            },\n          },\n          u = { $pattern: e, keyword: n, literal: t, built_in: o, 'variable.language': s },\n          b = '[0-9](_?[0-9])*',\n          h = `\\\\.(${b})`,\n          p = '0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*',\n          m = {\n            className: 'number',\n            variants: [\n              { begin: `(\\\\b(${p})((${h})|\\\\.)?|(${h}))[eE][+-]?(${b})\\\\b` },\n              { begin: `\\\\b(${p})\\\\b((${h})\\\\b|\\\\.)?|(${h})\\\\b` },\n              { begin: '\\\\b(0|[1-9](_?[0-9])*)n\\\\b' },\n              { begin: '\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b' },\n              { begin: '\\\\b0[bB][0-1](_?[0-1])*n?\\\\b' },\n              { begin: '\\\\b0[oO][0-7](_?[0-7])*n?\\\\b' },\n              { begin: '\\\\b0[0-7]+n?\\\\b' },\n            ],\n            relevance: 0,\n          },\n          f = { className: 'subst', begin: '\\\\$\\\\{', end: '\\\\}', keywords: u, contains: [] },\n          y = {\n            begin: 'html`',\n            end: '',\n            starts: {\n              end: '`',\n              returnEnd: !1,\n              contains: [l.BACKSLASH_ESCAPE, f],\n              subLanguage: 'xml',\n            },\n          },\n          E = {\n            begin: 'css`',\n            end: '',\n            starts: {\n              end: '`',\n              returnEnd: !1,\n              contains: [l.BACKSLASH_ESCAPE, f],\n              subLanguage: 'css',\n            },\n          },\n          _ = {\n            begin: 'gql`',\n            end: '',\n            starts: {\n              end: '`',\n              returnEnd: !1,\n              contains: [l.BACKSLASH_ESCAPE, f],\n              subLanguage: 'graphql',\n            },\n          },\n          v = { className: 'string', begin: '`', end: '`', contains: [l.BACKSLASH_ESCAPE, f] },\n          w = {\n            className: 'comment',\n            variants: [\n              l.COMMENT(/\\/\\*\\*(?!\\/)/, '\\\\*/', {\n                relevance: 0,\n                contains: [\n                  {\n                    begin: '(?=@[A-Za-z]+)',\n                    relevance: 0,\n                    contains: [\n                      { className: 'doctag', begin: '@[A-Za-z]+' },\n                      {\n                        className: 'type',\n                        begin: '\\\\{',\n                        end: '\\\\}',\n                        excludeEnd: !0,\n                        excludeBegin: !0,\n                        relevance: 0,\n                      },\n                      {\n                        className: 'variable',\n                        begin: d + '(?=\\\\s*(-)|$)',\n                        endsParent: !0,\n                        relevance: 0,\n                      },\n                      { begin: /(?=[^\\n])\\s/, relevance: 0 },\n                    ],\n                  },\n                ],\n              }),\n              l.C_BLOCK_COMMENT_MODE,\n              l.C_LINE_COMMENT_MODE,\n            ],\n          },\n          x = [l.APOS_STRING_MODE, l.QUOTE_STRING_MODE, y, E, _, v, { match: /\\$\\d+/ }, m];\n        f.contains = x.concat({\n          begin: /\\{/,\n          end: /\\}/,\n          keywords: u,\n          contains: ['self'].concat(x),\n        });\n        const k = [].concat(w, f.contains),\n          N = k.concat([{ begin: /\\(/, end: /\\)/, keywords: u, contains: ['self'].concat(k) }]),\n          A = {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: !0,\n            excludeEnd: !0,\n            keywords: u,\n            contains: N,\n          },\n          S = {\n            variants: [\n              {\n                match: [\n                  /class/,\n                  /\\s+/,\n                  d,\n                  /\\s+/,\n                  /extends/,\n                  /\\s+/,\n                  c.concat(d, '(', c.concat(/\\./, d), ')*'),\n                ],\n                scope: { 1: 'keyword', 3: 'title.class', 5: 'keyword', 7: 'title.class.inherited' },\n              },\n              { match: [/class/, /\\s+/, d], scope: { 1: 'keyword', 3: 'title.class' } },\n            ],\n          },\n          O = {\n            relevance: 0,\n            match: c.either(\n              /\\bJSON/,\n              /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n              /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n              /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n            ),\n            className: 'title.class',\n            keywords: { _: [...i, ...a] },\n          },\n          M = {\n            variants: [\n              { match: [/function/, /\\s+/, d, /(?=\\s*\\()/] },\n              { match: [/function/, /\\s*(?=\\()/] },\n            ],\n            className: { 1: 'keyword', 3: 'title.function' },\n            label: 'func.def',\n            contains: [A],\n            illegal: /%/,\n          },\n          R = {\n            match: c.concat(\n              /\\b/,\n              ((T = [...r, 'super', 'import']), c.concat('(?!', T.join('|'), ')')),\n              d,\n              c.lookahead(/\\(/),\n            ),\n            className: 'title.function',\n            relevance: 0,\n          };\n        var T;\n        const B = {\n            begin: c.concat(/\\./, c.lookahead(c.concat(d, /(?![0-9A-Za-z$_(])/))),\n            end: d,\n            excludeBegin: !0,\n            keywords: 'prototype',\n            className: 'property',\n            relevance: 0,\n          },\n          C = {\n            match: [/get|set/, /\\s+/, d, /(?=\\()/],\n            className: { 1: 'keyword', 3: 'title.function' },\n            contains: [{ begin: /\\(\\)/ }, A],\n          },\n          I =\n            '(\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)|' +\n            l.UNDERSCORE_IDENT_RE +\n            ')\\\\s*=>',\n          L = {\n            match: [/const|var|let/, /\\s+/, d, /\\s*/, /=\\s*/, /(async\\s*)?/, c.lookahead(I)],\n            keywords: 'async',\n            className: { 1: 'keyword', 3: 'title.function' },\n            contains: [A],\n          };\n        return {\n          name: 'JavaScript',\n          aliases: ['js', 'jsx', 'mjs', 'cjs'],\n          keywords: u,\n          exports: { PARAMS_CONTAINS: N, CLASS_REFERENCE: O },\n          illegal: /#(?![$_A-z])/,\n          contains: [\n            l.SHEBANG({ label: 'shebang', binary: 'node', relevance: 5 }),\n            {\n              label: 'use_strict',\n              className: 'meta',\n              relevance: 10,\n              begin: /^\\s*['\"]use (strict|asm)['\"]/,\n            },\n            l.APOS_STRING_MODE,\n            l.QUOTE_STRING_MODE,\n            y,\n            E,\n            _,\n            v,\n            w,\n            { match: /\\$\\d+/ },\n            m,\n            O,\n            { className: 'attr', begin: d + c.lookahead(':'), relevance: 0 },\n            L,\n            {\n              begin: '(' + l.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n              keywords: 'return throw case',\n              relevance: 0,\n              contains: [\n                w,\n                l.REGEXP_MODE,\n                {\n                  className: 'function',\n                  begin: I,\n                  returnBegin: !0,\n                  end: '\\\\s*=>',\n                  contains: [\n                    {\n                      className: 'params',\n                      variants: [\n                        { begin: l.UNDERSCORE_IDENT_RE, relevance: 0 },\n                        { className: null, begin: /\\(\\s*\\)/, skip: !0 },\n                        {\n                          begin: /\\(/,\n                          end: /\\)/,\n                          excludeBegin: !0,\n                          excludeEnd: !0,\n                          keywords: u,\n                          contains: N,\n                        },\n                      ],\n                    },\n                  ],\n                },\n                { begin: /,/, relevance: 0 },\n                { match: /\\s+/, relevance: 0 },\n                {\n                  variants: [\n                    { begin: '<>', end: '</>' },\n                    { match: /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/ },\n                    { begin: g.begin, 'on:begin': g.isTrulyOpeningTag, end: g.end },\n                  ],\n                  subLanguage: 'xml',\n                  contains: [{ begin: g.begin, end: g.end, skip: !0, contains: ['self'] }],\n                },\n              ],\n            },\n            M,\n            { beginKeywords: 'while if switch catch for' },\n            {\n              begin:\n                '\\\\b(?!function)' +\n                l.UNDERSCORE_IDENT_RE +\n                '\\\\([^()]*(\\\\([^()]*(\\\\([^()]*\\\\)[^()]*)*\\\\)[^()]*)*\\\\)\\\\s*\\\\{',\n              returnBegin: !0,\n              label: 'func.def',\n              contains: [A, l.inherit(l.TITLE_MODE, { begin: d, className: 'title.function' })],\n            },\n            { match: /\\.\\.\\./, relevance: 0 },\n            B,\n            { match: '\\\\$' + d, relevance: 0 },\n            {\n              match: [/\\bconstructor(?=\\s*\\()/],\n              className: { 1: 'title.function' },\n              contains: [A],\n            },\n            R,\n            { relevance: 0, match: /\\b[A-Z][A-Z_0-9]+\\b/, className: 'variable.constant' },\n            S,\n            C,\n            { match: /\\$[(.]/ },\n          ],\n        };\n      };\n    })();\n    hljs.registerLanguage('javascript', e);\n  })(),\n  (() => {\n    var e = (() => {\n      'use strict';\n      return (e) => {\n        const n = ['true', 'false', 'null'],\n          t = { scope: 'literal', beginKeywords: n.join(' ') };\n        return {\n          name: 'JSON',\n          keywords: { literal: n },\n          contains: [\n            { className: 'attr', begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/, relevance: 1.01 },\n            { match: /[{}[\\],:]/, className: 'punctuation', relevance: 0 },\n            e.QUOTE_STRING_MODE,\n            t,\n            e.C_NUMBER_MODE,\n            e.C_LINE_COMMENT_MODE,\n            e.C_BLOCK_COMMENT_MODE,\n          ],\n          illegal: '\\\\S',\n        };\n      };\n    })();\n    hljs.registerLanguage('json', e);\n  })(),\n  (() => {\n    var e = (() => {\n      'use strict';\n      return (e) => {\n        const n = { begin: /<\\/?[A-Za-z_]/, end: '>', subLanguage: 'xml', relevance: 0 },\n          t = {\n            variants: [\n              { begin: /\\[.+?\\]\\[.*?\\]/, relevance: 0 },\n              {\n                begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n                relevance: 2,\n              },\n              {\n                begin: e.regex.concat(/\\[.+?\\]\\(/, /[A-Za-z][A-Za-z0-9+.-]*/, /:\\/\\/.*?\\)/),\n                relevance: 2,\n              },\n              { begin: /\\[.+?\\]\\([./?&#].*?\\)/, relevance: 1 },\n              { begin: /\\[.*?\\]\\(.*?\\)/, relevance: 0 },\n            ],\n            returnBegin: !0,\n            contains: [\n              { match: /\\[(?=\\])/ },\n              {\n                className: 'string',\n                relevance: 0,\n                begin: '\\\\[',\n                end: '\\\\]',\n                excludeBegin: !0,\n                returnEnd: !0,\n              },\n              {\n                className: 'link',\n                relevance: 0,\n                begin: '\\\\]\\\\(',\n                end: '\\\\)',\n                excludeBegin: !0,\n                excludeEnd: !0,\n              },\n              {\n                className: 'symbol',\n                relevance: 0,\n                begin: '\\\\]\\\\[',\n                end: '\\\\]',\n                excludeBegin: !0,\n                excludeEnd: !0,\n              },\n            ],\n          },\n          i = {\n            className: 'strong',\n            contains: [],\n            variants: [\n              { begin: /_{2}(?!\\s)/, end: /_{2}/ },\n              { begin: /\\*{2}(?!\\s)/, end: /\\*{2}/ },\n            ],\n          },\n          a = {\n            className: 'emphasis',\n            contains: [],\n            variants: [\n              { begin: /\\*(?![*\\s])/, end: /\\*/ },\n              { begin: /_(?![_\\s])/, end: /_/, relevance: 0 },\n            ],\n          },\n          r = e.inherit(i, { contains: [] }),\n          s = e.inherit(a, { contains: [] });\n        i.contains.push(s), a.contains.push(r);\n        let o = [n, t];\n        return (\n          [i, a, r, s].forEach((e) => {\n            e.contains = e.contains.concat(o);\n          }),\n          (o = o.concat(i, a)),\n          {\n            name: 'Markdown',\n            aliases: ['md', 'mkdown', 'mkd'],\n            contains: [\n              {\n                className: 'section',\n                variants: [\n                  { begin: '^#{1,6}', end: '$', contains: o },\n                  {\n                    begin: '(?=^.+?\\\\n[=-]{2,}$)',\n                    contains: [{ begin: '^[=-]*$' }, { begin: '^', end: '\\\\n', contains: o }],\n                  },\n                ],\n              },\n              n,\n              {\n                className: 'bullet',\n                begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n                end: '\\\\s+',\n                excludeEnd: !0,\n              },\n              i,\n              a,\n              { className: 'quote', begin: '^>\\\\s+', contains: o, end: '$' },\n              {\n                className: 'code',\n                variants: [\n                  { begin: '(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*' },\n                  { begin: '(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*' },\n                  { begin: '```', end: '```+[ ]*$' },\n                  { begin: '~~~', end: '~~~+[ ]*$' },\n                  { begin: '`.+?`' },\n                  {\n                    begin: '(?=^( {4}|\\\\t))',\n                    contains: [{ begin: '^( {4}|\\\\t)', end: '(\\\\n)$' }],\n                    relevance: 0,\n                  },\n                ],\n              },\n              { begin: '^[-\\\\*]{3,}', end: '$' },\n              t,\n              {\n                begin: /^\\[[^\\n]+\\]:/,\n                returnBegin: !0,\n                contains: [\n                  { className: 'symbol', begin: /\\[/, end: /\\]/, excludeBegin: !0, excludeEnd: !0 },\n                  { className: 'link', begin: /:\\s*/, end: /$/, excludeBegin: !0 },\n                ],\n              },\n            ],\n          }\n        );\n      };\n    })();\n    hljs.registerLanguage('markdown', e);\n  })(),\n  (() => {\n    var e = (() => {\n      'use strict';\n      return (e) => {\n        const n = e.regex,\n          t = /[\\p{XID_Start}_]\\p{XID_Continue}*/u,\n          i = [\n            'and',\n            'as',\n            'assert',\n            'async',\n            'await',\n            'break',\n            'case',\n            'class',\n            'continue',\n            'def',\n            'del',\n            'elif',\n            'else',\n            'except',\n            'finally',\n            'for',\n            'from',\n            'global',\n            'if',\n            'import',\n            'in',\n            'is',\n            'lambda',\n            'match',\n            'nonlocal|10',\n            'not',\n            'or',\n            'pass',\n            'raise',\n            'return',\n            'try',\n            'while',\n            'with',\n            'yield',\n          ],\n          a = {\n            $pattern: /[A-Za-z]\\w+|__\\w+__/,\n            keyword: i,\n            built_in: [\n              '__import__',\n              'abs',\n              'all',\n              'any',\n              'ascii',\n              'bin',\n              'bool',\n              'breakpoint',\n              'bytearray',\n              'bytes',\n              'callable',\n              'chr',\n              'classmethod',\n              'compile',\n              'complex',\n              'delattr',\n              'dict',\n              'dir',\n              'divmod',\n              'enumerate',\n              'eval',\n              'exec',\n              'filter',\n              'float',\n              'format',\n              'frozenset',\n              'getattr',\n              'globals',\n              'hasattr',\n              'hash',\n              'help',\n              'hex',\n              'id',\n              'input',\n              'int',\n              'isinstance',\n              'issubclass',\n              'iter',\n              'len',\n              'list',\n              'locals',\n              'map',\n              'max',\n              'memoryview',\n              'min',\n              'next',\n              'object',\n              'oct',\n              'open',\n              'ord',\n              'pow',\n              'print',\n              'property',\n              'range',\n              'repr',\n              'reversed',\n              'round',\n              'set',\n              'setattr',\n              'slice',\n              'sorted',\n              'staticmethod',\n              'str',\n              'sum',\n              'super',\n              'tuple',\n              'type',\n              'vars',\n              'zip',\n            ],\n            literal: ['__debug__', 'Ellipsis', 'False', 'None', 'NotImplemented', 'True'],\n            type: [\n              'Any',\n              'Callable',\n              'Coroutine',\n              'Dict',\n              'List',\n              'Literal',\n              'Generic',\n              'Optional',\n              'Sequence',\n              'Set',\n              'Tuple',\n              'Type',\n              'Union',\n            ],\n          },\n          r = { className: 'meta', begin: /^(>>>|\\.\\.\\.) / },\n          s = { className: 'subst', begin: /\\{/, end: /\\}/, keywords: a, illegal: /#/ },\n          o = { begin: /\\{\\{/, relevance: 0 },\n          l = {\n            className: 'string',\n            contains: [e.BACKSLASH_ESCAPE],\n            variants: [\n              {\n                begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n                end: /'''/,\n                contains: [e.BACKSLASH_ESCAPE, r],\n                relevance: 10,\n              },\n              {\n                begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n                end: /\"\"\"/,\n                contains: [e.BACKSLASH_ESCAPE, r],\n                relevance: 10,\n              },\n              {\n                begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n                end: /'''/,\n                contains: [e.BACKSLASH_ESCAPE, r, o, s],\n              },\n              {\n                begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n                end: /\"\"\"/,\n                contains: [e.BACKSLASH_ESCAPE, r, o, s],\n              },\n              { begin: /([uU]|[rR])'/, end: /'/, relevance: 10 },\n              { begin: /([uU]|[rR])\"/, end: /\"/, relevance: 10 },\n              { begin: /([bB]|[bB][rR]|[rR][bB])'/, end: /'/ },\n              { begin: /([bB]|[bB][rR]|[rR][bB])\"/, end: /\"/ },\n              {\n                begin: /([fF][rR]|[rR][fF]|[fF])'/,\n                end: /'/,\n                contains: [e.BACKSLASH_ESCAPE, o, s],\n              },\n              {\n                begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n                end: /\"/,\n                contains: [e.BACKSLASH_ESCAPE, o, s],\n              },\n              e.APOS_STRING_MODE,\n              e.QUOTE_STRING_MODE,\n            ],\n          },\n          c = '[0-9](_?[0-9])*',\n          d = `(\\\\b(${c}))?\\\\.(${c})|\\\\b(${c})\\\\.`,\n          g = '\\\\b|' + i.join('|'),\n          u = {\n            className: 'number',\n            relevance: 0,\n            variants: [\n              { begin: `(\\\\b(${c})|(${d}))[eE][+-]?(${c})[jJ]?(?=${g})` },\n              { begin: `(${d})[jJ]?` },\n              { begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${g})` },\n              { begin: `\\\\b0[bB](_?[01])+[lL]?(?=${g})` },\n              { begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${g})` },\n              { begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${g})` },\n              { begin: `\\\\b(${c})[jJ](?=${g})` },\n            ],\n          },\n          b = {\n            className: 'comment',\n            begin: n.lookahead(/# type:/),\n            end: /$/,\n            keywords: a,\n            contains: [{ begin: /# type:/ }, { begin: /#/, end: /\\b\\B/, endsWithParent: !0 }],\n          },\n          h = {\n            className: 'params',\n            variants: [\n              { className: '', begin: /\\(\\s*\\)/, skip: !0 },\n              {\n                begin: /\\(/,\n                end: /\\)/,\n                excludeBegin: !0,\n                excludeEnd: !0,\n                keywords: a,\n                contains: ['self', r, u, l, e.HASH_COMMENT_MODE],\n              },\n            ],\n          };\n        return (\n          (s.contains = [l, u, r]),\n          {\n            name: 'Python',\n            aliases: ['py', 'gyp', 'ipython'],\n            unicodeRegex: !0,\n            keywords: a,\n            illegal: /(<\\/|\\?)|=>/,\n            contains: [\n              r,\n              u,\n              { begin: /\\bself\\b/ },\n              { beginKeywords: 'if', relevance: 0 },\n              { match: /\\bor\\b/, scope: 'keyword' },\n              l,\n              b,\n              e.HASH_COMMENT_MODE,\n              {\n                match: [/\\bdef/, /\\s+/, t],\n                scope: { 1: 'keyword', 3: 'title.function' },\n                contains: [h],\n              },\n              {\n                variants: [\n                  { match: [/\\bclass/, /\\s+/, t, /\\s*/, /\\(\\s*/, t, /\\s*\\)/] },\n                  { match: [/\\bclass/, /\\s+/, t] },\n                ],\n                scope: { 1: 'keyword', 3: 'title.class', 6: 'title.class.inherited' },\n              },\n              { className: 'meta', begin: /^[\\t ]*@/, end: /(?=#)|$/, contains: [u, h, l] },\n            ],\n          }\n        );\n      };\n    })();\n    hljs.registerLanguage('python', e);\n  })(),\n  (() => {\n    var t = (() => {\n      'use strict';\n      return (t) => ({ name: 'Plain text', aliases: ['text', 'txt'], disableAutodetect: !0 });\n    })();\n    hljs.registerLanguage('plaintext', t);\n  })();\nhljs.registerLanguage('chatgpt_tools', function (hljs) {\n  const FUNCTION_NAMES = 'search back scroll quote_lines open_url click text2im'; // Add more function names as needed\n\n  return {\n    contains: [\n      {\n        className: 'function',\n        begin: '\\\\b(' + FUNCTION_NAMES.replace(/ /g, '|') + ')\\\\b\\\\(',\n        end: '\\\\)',\n        keywords: FUNCTION_NAMES,\n        contains: [\n          {\n            className: 'params',\n            begin: '\\\\(',\n            end: '\\\\)',\n            contains: [hljs.NUMBER_MODE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE],\n          },\n        ],\n      },\n    ],\n  };\n});\n\n/* #endregion */\n\n/* eslint-disable no-nested-ternary */\nconst DEBUG_TRANSCRIPT_FILENAME = 'autoexpert_debugger_transcript.json';\nconst DEBUG_STATUS_LABEL_COLORS = {\n  in_progress: 'p-1 bg-yellow-100 text-yellow-700',\n  finished_successfully: 'p-1 bg-green-100 text-green-700',\n};\nconst escapeHtml = (html) => {\n  const escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n  };\n  return html.replace(/[&<>\"']/g, (match) => escapeMap[match]);\n};\nconst collapsingFormatter = (text, highlight = true) => {\n  const content = highlight ? hljs.highlightAuto(text) : { value: text, language: 'contents' };\n  const panelHtml = `<details open><summary>Toggle ${\n    typeof content.language === 'undefined' ? 'contents' : content.language\n  }</summary><div class=\"hljs whitespace-pre-wrap\">${content.value}</div></details>`;\n  return panelHtml;\n};\nconst debugFormatter = (parts) => {\n  const formattedParts = parts.map((part) => {\n    if (typeof part !== 'string') {\n      return hljs.highlightAuto(JSON.stringify(part, null, 2), {\n        language: 'json',\n        ignoreIllegals: true,\n      }).value;\n    }\n    return collapsingFormatter(part);\n  });\n  const panelHtml = formattedParts.join('<br><br>');\n  return panelHtml;\n};\n\nconst DEBUG_PATHS = [\n  {\n    label: 'From',\n    paths: [\n      ['author', 'role'],\n      ['author', 'name'],\n    ],\n    formatter: (role, name) =>\n      `${role} ${\n        !name\n          ? ''\n          : `<br/> (${\n              name.includes('__') ? `${name.split('__')[0]}.${name.split('.')[1]}()` : name\n            })`\n      }`,\n    textClasses: ['text-green-700', 'font-bold'],\n  },\n  {\n    label: 'To',\n    paths: [['recipient']],\n    formatter: (name) => {\n      if (name.includes('__')) {\n        return `${name.split('__')[0]}.${name.split('.')[1]}()`;\n      }\n      return name;\n    },\n    textClasses: ['text-red-700', 'font-bold'],\n  },\n  {\n    label: 'Created',\n    paths: [['create_time']],\n    formatter: (timestamp) => {\n      const date = new Date(Math.round(timestamp * 1000));\n      return date.toLocaleString();\n    },\n  },\n  {\n    label: 'Status',\n    paths: [['status']],\n    textClass: (status) => DEBUG_STATUS_LABEL_COLORS[status],\n  },\n  {\n    label: 'Msg Type',\n    paths: [['metadata', 'message_type']],\n  },\n  {\n    label: 'Model',\n    paths: [['metadata', 'model_slug']],\n  },\n  {\n    label: 'Cont. Type',\n    paths: [\n      ['content', 'content_type'],\n      ['content', 'language'],\n    ],\n    formatter: (type, language) => `${type} ${!language ? '' : `(${language})`}`,\n  },\n  {\n    label: '——Domain',\n    paths: [['content', 'domain']],\n  },\n  {\n    label: '——URL',\n    paths: [['content', 'url']],\n  },\n  {\n    label: '——Title',\n    paths: [['content', 'title']],\n  },\n  {\n    label: '——Text',\n    paths: [['content', 'text']],\n    formatter: collapsingFormatter,\n    textClasses: ['break-all'],\n  },\n  {\n    label: '——Summary',\n    paths: [['content', 'summary']],\n  },\n  {\n    label: '——Results',\n    paths: [['content', 'result']],\n    formatter: collapsingFormatter,\n    textClasses: ['break-all'],\n  },\n  {\n    label: '——Assets',\n    paths: [['content', 'assets']],\n    formatter: debugFormatter,\n  },\n  {\n    label: 'Command',\n    paths: [\n      ['metadata', 'command'],\n      ['metadata', 'args'],\n    ],\n    formatter: (command, args) => `${command}(${args.join(',')})`,\n    textClasses: ['text-green-700'],\n  },\n  {\n    label: '——Status',\n    paths: [['metadata', 'status']],\n  },\n  {\n    label: 'Plugin',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'type']],\n  },\n  {\n    label: '——Display',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'display_message']],\n  },\n  {\n    label: '——Data',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'data']],\n    formatter: debugFormatter,\n  },\n  {\n    label: '——Domain',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'domain']],\n  },\n  {\n    label: '——Conseq.',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'is_consequential']],\n  },\n  {\n    label: '——Privacy',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'privacy_policy']],\n  },\n  {\n    label: '——Method',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'method']],\n  },\n  {\n    label: '——Path',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'path']],\n  },\n  {\n    label: '——Operation',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'operation']],\n  },\n  {\n    label: '——Params',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'params']],\n    formatter: debugFormatter,\n  },\n  {\n    label: '——Actions',\n    paths: [['metadata', 'jit_plugin_data', 'from_server', 'body', 'actions']],\n    formatter: debugFormatter,\n  },\n  {\n    label: 'Response',\n    paths: [['content', 'parts']],\n    formatter: debugFormatter,\n    textClasses: ['break-all', 'whitespace-pre-wrap'],\n  },\n  {\n    label: 'Citations',\n    paths: [['metadata', 'citations']],\n    formatter: debugFormatter,\n    textClasses: ['break-all', 'whitespace-pre-wrap'],\n  },\n];\n\nconst createDomElementFromHTML = (htmlString) => {\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = htmlString;\n  return tempDiv.firstElementChild;\n};\n\nconst debugPanel = createDomElementFromHTML(\n  '<div id=\"ae_debug_panel\" style=\"width: 33vw; opacity:0.95; margin:0; resize: horizontal;\" class=\"fixed top-0 left-0 bottom-0 z-40 h-screen p-4 overflow-y-auto transition-transform -translate-x-full bg-gray-50 dark:bg-gray-950 text-xs font-mono\" tabindex=\"-1\"> </div>',\n);\n\nfunction downloadJson(variable, filename) {\n  const jsonString = JSON.stringify(variable, null, 2);\n  const blob = new Blob([jsonString], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n}\n\nfunction createDebugButton(buttonData) {\n  const buttonHtml = `\n  <button\n    title=\"${buttonData.title}\"\n    id=\"${buttonData.id}\"\n    class=\"btn relative btn-neutral btn-small flex h-9 w-9 items-center justify-center whitespace-nowrap rounded-lg border border-token-border-medium focus:ring-0 ${\n      buttonData.hideForGPTs ? ' hideForGPTs' : ''\n    }\" >\n    ${buttonData.emoji}\n  </button>\n  `;\n\n  const button = createDomElementFromHTML(buttonHtml);\n  button.addEventListener('click', buttonData.handler, true);\n  return button;\n}\n\nfunction renderHtmlFromJson(jsonData, options) {\n  function getNestedProperties(obj, paths) {\n    return paths.map((path) => path.reduce((acc, part) => acc && acc[part], obj));\n  }\n\n  let html = '<dl class=\"debug_dl\">';\n\n  options.forEach((option) => {\n    const { paths, formatter, textClass, textClasses } = option;\n    const values = getNestedProperties(jsonData, paths);\n\n    if (values.some((value) => value === undefined)) {\n      return;\n    }\n\n    const formattedValue = formatter ? formatter(...values) : values.join(' ');\n    const formattedValueWithClass = textClasses\n      ? `<span class=\"${textClasses.join(' ')}\">${formattedValue}</span>`\n      : textClass\n      ? `<span class=\"${textClass(formattedValue)}\">${formattedValue}</span>`\n      : `${formattedValue}`;\n\n    html += `<dt class=\"col-span-1\">${option.label}:</dt>`;\n    html += `<dd class=\"col-span-4\">${formattedValueWithClass}</dd>`;\n  });\n\n  html += '</dl>';\n  return html;\n}\n\nfunction render(key, value) {\n  let entry = document.getElementById(`debug-${key}`);\n  const newHTML = renderHtmlFromJson(value, DEBUG_PATHS);\n  if (!entry) {\n    newEl = true;\n    entry = document.createElement('div');\n    entry.id = `debug-${key}`;\n    entry.classList = 'debug_entry';\n    debugPanel.appendChild(entry);\n  }\n  entry.innerHTML = newHTML;\n}\n\nclass AEDebugLog extends Map {\n  set(key, value) {\n    render(key, value);\n    return super.set(key, value);\n  }\n}\nlet messages = new AEDebugLog();\n\nfunction decodeEventStream(event) {\n  const decodedEvents = new TextDecoder().decode(event);\n  const parsedEvents = decodedEvents\n    .replace(/^data: /, '')\n    .split('\\n')\n    .filter(Boolean)\n    .map((eventData) => {\n      try {\n        const parsedEvent = JSON.parse(eventData);\n        messages.set(parsedEvent.message.id, parsedEvent.message);\n        return parsedEvent;\n      } catch (error) {\n        return null;\n      }\n    })\n    .filter(Boolean);\n  return parsedEvents;\n}\n\nasync function logEventStream(response) {\n  const reader = response.body.getReader();\n  const stream = new ReadableStream({\n    async start(controller) {\n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          decodeEventStream(value);\n          controller.enqueue(value);\n          if (done) {\n            break;\n          }\n        }\n      } finally {\n        controller.close();\n        reader.releaseLock();\n      }\n    },\n  });\n\n  return new Response(stream, {\n    headers: response.headers,\n  });\n}\n\nconst originalFetch = window.fetch;\nwindow.fetch = async (...args) => {\n  const response = await originalFetch(...args);\n  if (response.headers.get('content-type') === 'text/event-stream; charset=utf-8') {\n    logEventStream(response.clone());\n  }\n  return response;\n};\n\nconst debugToolbarButtons = [\n  {\n    title: 'Clear debug message log',\n    id: 'ae_clearMessages',\n    emoji:\n      '<svg width=\"18\" height=\"18\" viewBox=\"0 0 448 512\" fill=\"none\"><path fill=\"currentColor\" d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0h120.4c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64s14.3-32 32-32h96l7.2-14.3zM32 128h384v320c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"/></svg>',\n    hideForGPTs: false,\n    handler: () => {\n      debugPanel.innerHTML = '';\n      messages = new AEDebugLog();\n    },\n  },\n  {\n    title: 'Download debug message log',\n    id: 'ae_DownloadLog',\n    emoji:\n      '<svg width=\"18\" height=\"18\" viewBox=\"0 0 576 512\" fill=\"none\"><path fill=\"currentColor\" d=\"M0 64C0 28.7 28.7 0 64 0h160v128c0 17.7 14.3 32 32 32h128v128H216c-13.3 0-24 10.7-24 24s10.7 24 24 24h168v112c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zm384 272v-48h110.1l-39-39c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l80 80c9.4 9.4 9.4 24.6 0 33.9l-80 80c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l39-39H384zm0-208H256V0l128 128z\"/></svg>',\n    hideForGPTs: false,\n    handler: () => {\n      const messageLog = Object.fromEntries(messages);\n      downloadJson(messageLog, DEBUG_TRANSCRIPT_FILENAME);\n    },\n  },\n  {\n    title: 'Show debug message log',\n    id: 'ae_debug',\n    emoji:\n      '<svg width=\"18\" height=\"18\" viewBox=\"0 0 512 512\" fill=\"none\"><path fill=\"currentColor\" d=\"M256 0c53 0 96 43 96 96v3.6c0 15.7-12.7 28.4-28.4 28.4H188.4c-15.7 0-28.4-12.7-28.4-28.4V96c0-53 43-96 96-96zM41.4 105.4c12.5-12.5 32.8-12.5 45.3 0l64 64c.7.7 1.3 1.4 1.9 2.1 14.2-7.3 30.4-11.4 47.5-11.4H312c17.1 0 33.2 4.1 47.5 11.4.6-.7 1.2-1.4 1.9-2.1l64-64c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3l-64 64c-.7.7-1.4 1.3-2.1 1.9 6.2 12 10.1 25.3 11.1 39.5H480c17.7 0 32 14.3 32 32s-14.3 32-32 32h-64c0 24.6-5.5 47.8-15.4 68.6 2.2 1.3 4.2 2.9 6 4.8l64 64c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0l-63.1-63.1c-24.5 21.8-55.8 36.2-90.3 39.6V240c0-8.8-7.2-16-16-16s-16 7.2-16 16v239.2c-34.5-3.4-65.8-17.8-90.3-39.6l-63 63c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l64-64c1.9-1.9 3.9-3.4 6-4.8C101.5 367.8 96 344.6 96 320H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h64.3c1.1-14.1 5-27.5 11.1-39.5-.7-.6-1.4-1.2-2.1-1.9l-64-64c-12.5-12.5-12.5-32.8 0-45.3z\"/></svg>',\n    hideForGPTs: false,\n    handler: () => debugPanel.classList.toggle('-translate-x-full'),\n  },\n];\nconst debugToolbar = createDomElementFromHTML(\n  '<div id=\"ae_floatingButtons\" class=\"absolute p-2 top-8 mt-3 right-3 bg-transparent flex flex-col space-y-2\"> <!--Debug toolbar icons via Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--> </div>',\n);\n\nObject.keys(debugToolbarButtons).forEach((key) => {\n  const buttonToAdd = createDebugButton(debugToolbarButtons[key]);\n  debugToolbar.appendChild(buttonToAdd);\n});\ndocument.body.appendChild(debugPanel);\ndocument.body.appendChild(debugToolbar);\n\nconst style = document.createElement('style');\nstyle.innerHTML =\n  '.prose.dark a { color: #AACCFF !important; text-decoration: underline !important; text-underline-offset: 2px !important; } .debug_entry { --tw-bg-opacity: 1; background-color: rgba(255,255,255,0.1); border-width: 1px; font-family: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace; margin-bottom: 2.5rem; --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),0 4px 6px -2px rgba(0, 0, 0, 0.05); -webkit-box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); --tw-text-opacity: 1; } .debug_dl { --tw-bg-opacity: 1; background-color: rgba(255,255,255,0.1); display: grid; padding: .5rem; gap: .5rem; grid-template-columns: repeat(5,minmax(0,1fr)) } .debug_dl dt { grid-column: span 1/span 1 } .debug_dl dd { grid-column: span 4/span 4 }';\ndocument.head.appendChild(style);\n"
        },
        {
          "name": "autoexpert_userscript.js",
          "type": "blob",
          "size": 8.3759765625,
          "content": "// ==UserScript==\n// @name        AutoExpert v6 Loader\n// @namespace   https://spdustin.substack.com\n// @version     1.0.1\n// @description Loads AutoExpert custom instructions and provides simple buttons to activate them\n// @match       https://chat.openai.com/*\n// @grant       GM_xmlhttpRequest\n// ==/UserScript==\n(function () {\n  const autoExpertPaths = [{\n    \"title\": \"Standard v5\",\n    \"id\": \"std_5\",\n    \"user_url\": \"https://raw.githubusercontent.com/spdustin/ChatGPT-AutoExpert/dev__pre-eval/standard-edition/chatgpt_GPT4__about_me.md\",\n    \"model_url\": \"https://raw.githubusercontent.com/spdustin/ChatGPT-AutoExpert/dev__pre-eval/standard-edition/chatgpt_GPT4__custom_instructions.md\",\n    \"emoji\": \"🧠\"\n  },\n  {\n    \"title\": \"Dev v5\",\n    \"id\": \"dev_5\",\n    \"user_url\": \"https://raw.githubusercontent.com/spdustin/ChatGPT-AutoExpert/dev__pre-eval/developer-edition/chatgpt__about_me.md\",\n    \"model_url\": \"https://raw.githubusercontent.com/spdustin/ChatGPT-AutoExpert/dev__pre-eval/developer-edition/chatgpt__custom_instructions.md\",\n    \"emoji\": \"💻\"\n  },\n  {\n    \"title\": \"Voice V5\",\n    \"id\": \"voice_5\",\n    \"user_url\": \"https://raw.githubusercontent.com/spdustin/ChatGPT-AutoExpert/dev__voice_edition/voice-edition/chatgpt_GPT4_voice__about_me.md\",\n    \"model_url\": \"https://raw.githubusercontent.com/spdustin/ChatGPT-AutoExpert/dev__voice_edition/voice-edition/chatgpt_GPT4_voice__custom_instructions.md\",\n    \"emoji\": \"💬\"\n  }\n  ];\n  const BASE_URL = 'https://chat.openai.com';\n  const dataCache = {};\n  const customInstructionButtons = createFloatingButtonContainer();\n\n  let cachedToken = null;\n  let tokenExpiration = Date.now();\n\n  function handleError(context) {\n    return error => console.error(`An error occurred in ${context}:`, JSON.stringify(error, Object.getOwnPropertyNames(error)));\n  }\n\n  async function fetchToken() {\n    if (Date.now() < tokenExpiration) return cachedToken;\n    try {\n      const tokenData = await fetch(`${BASE_URL}/api/auth/session`)\n        .then(res => res.json());\n      cachedToken = tokenData.accessToken;\n      tokenExpiration = Date.now() + 3600000;\n    } catch (err) {\n      handleError('fetchToken')(err);\n    }\n  }\n\n  async function fetchData(url, options = {}, needsAuth = false, isCrossOrigin = false) {\n    if (needsAuth) {\n      await fetchToken();\n      options.headers = {\n        'Authorization': `Bearer ${cachedToken}`,\n        ...options.headers\n      };\n    }\n\n    if (isCrossOrigin) {\n      // Use GM_xmlhttpRequest for cross-origin requests\n      return new Promise((resolve, reject) => {\n        GM_xmlhttpRequest({\n          method: options.method || \"GET\",\n          headers: options.headers,\n          url: url,\n          onload: response => resolve(response.responseText),\n          onerror: reject\n        });\n      });\n    } else {\n      // Use native fetch for same-origin requests\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }\n  }\n\n  async function updateCustomInstructions(data) {\n    try {\n      const response = await fetchData(`${BASE_URL}/backend-api/user_system_messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      }, true);\n\n      if (response.status !== 200) {\n        throw new Error(`Failed to update custom instructions: ${response.statusText}`);\n      }\n    } catch (err) {\n      handleError('updateCustomInstructions')(err);\n    }\n  }\n\n  function createFloatingButtonContainer() {\n    const container = document.createElement('div');\n    container.style.position = 'fixed';\n    container.style.padding = '.25em';\n    container.style.top = '3em';\n    container.style.right = '1em';\n    container.style.zIndex = '9999';\n    container.style.backgroundColor = \"var(--surface-tertiary)\";\n    container.style.display = \"flex\";\n    container.style.flexDirection = \"column\";\n    return container;\n  }\n\n  function createButton(buttonData) {\n    const btn = document.createElement('button');\n    btn.title = buttonData.title;\n    btn.id = buttonData.id;\n    btn.innerHTML = buttonData.emoji;\n    btn.dataset.userUrl = buttonData.user_url;\n    btn.dataset.modelUrl = buttonData.model_url;\n    btn.style.backgroundColor = \"var(--surface-primary)\";\n    btn.style.border = \"none\";\n    btn.style.color = \"white\";\n    btn.style.padding = \".25em\";\n    btn.style.textAlign = \"center\";\n    btn.style.fontSize = \"16px\";\n    btn.style.margin = \".25em \";\n    btn.style.cursor = \"pointer\";\n    return btn;\n  }\n\n  function updateButtonUI(btn, {\n    disabled,\n    backgroundColor,\n    text\n  }) {\n    btn.disabled = disabled;\n    btn.style.backgroundColor = backgroundColor;\n    btn.innerHTML = text || btn.innerHTML;\n  }\n\n  function generateButtons(autoExpertPaths, targetContainer) {\n    autoExpertPaths.forEach(buttonData => {\n      const btn = createButton(buttonData);\n      btn.onclick = () => handleButtonClick(btn);\n      targetContainer.appendChild(btn);\n    });\n\n    const disableBtn = createButton({\n      title: \"Disable Instructions\",\n      id: \"ae_disable\",\n      emoji: \"🚫\"\n    });\n    disableBtn.onclick = () => handleDisableClick(disableBtn);\n    targetContainer.appendChild(disableBtn);\n\n    const downloadBtn = createDownloadDataButton();\n    downloadBtn.onclick = () => handleDownloadDataClick(downloadBtn);\n    targetContainer.appendChild(downloadBtn);\n\n    document.body.appendChild(targetContainer);\n  }\n\n  function handleButtonClick(btn) {\n    updateButtonUI(btn, {\n      disabled: true,\n      backgroundColor: 'yellow'\n    });\n    performButtonClickAction(btn)\n      .then(() => {\n        updateButtonUI(btn, {\n          backgroundColor: 'green'\n        });\n        location.reload(true);\n      })\n      .catch((err) => {\n        updateButtonUI(btn, {\n          backgroundColor: 'red'\n        });\n        handleError('handleButtonClick')(err);\n      });\n  }\n\n  async function performButtonClickAction(btn) {\n    // The contents from autoExpertPaths are cross-origin\n    const userContentPromise = fetchData(btn.dataset.userUrl, {}, false, true);\n    const modelContentPromise = fetchData(btn.dataset.modelUrl, {}, false, true);\n\n    const [aboutUserContent, aboutModelContent] = await Promise.all([userContentPromise, modelContentPromise]);\n    const data = {\n      \"about_user_message\": aboutUserContent,\n      \"about_model_message\": aboutModelContent,\n      \"enabled\": true,\n    };\n\n    await updateCustomInstructions(data);\n  }\n\n  function handleDisableClick(btn) {\n    updateButtonUI(btn, {\n      backgroundColor: 'yellow',\n      disabled: true\n    });\n    performDisableClickAction(btn)\n      .then(() => {\n        updateButtonUI(btn, {\n          backgroundColor: 'green'\n        });\n        location.reload(true);\n      })\n      .catch((err) => {\n        updateButtonUI(btn, {\n          backgroundColor: 'red'\n        });\n        handleError('handleDisableClick')(err);\n      });\n  }\n\n  async function performDisableClickAction(btn) {\n    const fetchedData = await fetchData(`${BASE_URL}/backend-api/user_system_messages`, {}, true);\n    fetchedData.enabled = false;\n\n    await updateCustomInstructions(fetchedData);\n  }\n\n  function createDownloadDataButton() {\n    const downloadBtn = createButton({\n      title: \"Download Data\",\n      id: \"download_data\",\n      emoji: \"📥\"\n    });\n    downloadBtn.onclick = handleDownloadDataClick.bind(downloadBtn);\n    return downloadBtn;\n  }\n\n  async function handleDownloadDataClick(btn) {\n    try {\n      updateButtonUI(btn, {\n        backgroundColor: 'yellow',\n        disabled: true\n      });\n      const data = await fetchData(`${BASE_URL}/backend-api/user_system_messages`, {}, true);\n      if (data) {\n        const blob = new Blob([JSON.stringify(data)], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'user_system_messages.json';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      } else {\n        throw new Error('Received undefined data');\n      }\n      updateButtonUI(btn, {\n        backgroundColor: '#DFDFDF',\n        disabled: false\n      });\n    } catch (err) {\n      updateButtonUI(btn, {\n        backgroundColor: 'red'\n      });\n      handleError('handleDownloadDataClick')(err);\n    }\n  }\n\n  generateButtons(autoExpertPaths, customInstructionButtons);\n\n})();\n"
        },
        {
          "name": "developer-edition",
          "type": "tree",
          "content": null
        },
        {
          "name": "standard-edition",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}