{
  "metadata": {
    "timestamp": 1736562681376,
    "page": 194,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "remarkjs/remark",
      "stars": 7830,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\nend_of_line = lf\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.17578125,
          "content": "!/packages/remark-parse/index.d.ts\n!/packages/remark-stringify/index.d.ts\n!/packages/remark/index.d.ts\n*.d.ts\n*.log\n*.map\n*.tsbuildinfo\n.DS_Store\ncoverage/\nnode_modules/\nyarn.lock\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.7119140625,
          "content": "Titus Wormer <tituswormer@gmail.com>\nIsaac Z. Schlueter <i@izs.me>\nKomatsu Seiji <skomatsu.comutt@gmail.com>\nCyril Lakech <cyril.lakech@adeoservices.com>\nZack Bonebrake <info@gigonaut.com>\nOmeid Matten <public@omeid.me>\nPatrick Bartsch <bartsch98@gmail.com>\nChris Wren <cthewren@gmail.com>\nTsuyusato Kitsune <make.just.on@gmail.com>\nMasahiro Miyashiro <3846masahiro+git@gmail.com>\nTom MacWright <tom@macwright.org> Tom MacWright <tmcw@users.noreply.github.com>\nMin RK <benjaminrk@gmail.com> MinRK <benjaminrk@gmail.com>\nNick Baugh <niftylettuce@gmail.com>\nAlex Leon <alexleon@domain.com.au>\n\n# User names only.\nanonymous (Niggler) <foo@bar.org>\nanonymous (Mithgol) <getgit@mithgol.ru>\nanonymous (insanehong) <intro957@gmail.com>\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0380859375,
          "content": "ignore-scripts=true\npackage-lock=false\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": "coverage/\n*.md\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 0.1181640625,
          "content": "# Changelog\n\nSee [GitHub Releases][releases] for the changelog.\n\n[releases]: https://github.com/remarkjs/remark/releases\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.068359375,
          "content": "(The MIT License)\n\nCopyright (c) Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "logo-square.svg",
          "type": "blob",
          "size": 3.9638671875,
          "content": "<svg height=\"256\" viewBox=\"0 0 256 256\" width=\"256\" xmlns=\"http://www.w3.org/2000/svg\">\n  <style>\n    .b {fill: #0d1117}\n    .l {fill: #fff}\n    @media (prefers-color-scheme: light) {\n      .b {fill: #fff}\n      .l {fill: #0d1117}\n    }\n  </style>\n  <rect class=\"b\" height=\"256\" width=\"256\" x=\"0\" y=\"0\" />\n  <path d=\"M410.59 171.78L410.59 157.60Q410.59 151.13 413.61 147.29Q416.63 143.45 421.73 143.45L421.73 143.45Q423.02 143.45 424.42 143.69Q425.83 143.92 426.91 144.33L426.91 144.33L426.91 140.14Q426.18 139.82 424.94 139.63Q423.69 139.44 422.31 139.44L422.31 139.44Q417.71 139.44 414.73 141.74Q411.74 144.04 410.92 148.26L410.92 148.26L410.51 148.26L410.51 140.23L399.61 140.23L399.61 143.33L406.76 143.33L406.76 171.78L410.59 171.78ZM400.25 171.78L420.61 171.78L420.61 168.68L400.25 168.68L400.25 171.78ZM449.50 143.10L449.50 143.10Q453.69 143.10 456.05 145.96Q458.41 148.81 458.41 153.85L458.41 153.85L440.36 153.85Q440.36 148.78 442.79 145.94Q445.22 143.10 449.50 143.10ZM462.16 163.99L458.35 163.99Q457.62 166.30 455.39 167.59Q453.16 168.88 449.94 168.88L449.94 168.88Q445.55 168.88 442.95 165.97Q440.36 163.05 440.36 158.10L440.36 158.10L440.36 157.02L462.30 157.02L462.30 154.53Q462.30 149.81 460.79 146.50Q459.29 143.19 456.43 141.45Q453.57 139.70 449.50 139.70L449.50 139.70Q445.60 139.70 442.67 141.42Q439.75 143.13 438.13 146.22Q436.52 149.31 436.52 153.47L436.52 153.47L436.52 158.07Q436.52 164.81 440.05 168.56Q443.58 172.31 449.94 172.31L449.94 172.31Q453.13 172.31 455.70 171.28Q458.26 170.26 459.95 168.38Q461.63 166.51 462.16 163.99L462.16 163.99Z\" fill=\"#d80303\" transform=\"translate(-380, -32)\" />\n  <path class=\"l\" d=\"M501.21 171.78L501.21 149.14Q501.21 144.45 499.47 142.08Q497.72 139.70 494.27 139.70L494.27 139.70Q491.83 139.70 489.99 140.99Q488.14 142.28 487.50 144.45L487.50 144.45L487.09 144.45Q486.59 142.19 485.05 140.95Q483.51 139.70 481.26 139.70L481.26 139.70Q479.09 139.70 477.46 140.98Q475.84 142.25 475.22 144.45L475.22 144.45L474.81 144.45L474.81 140.23L471.33 140.23L471.33 171.78L474.93 171.78L474.93 150.66Q474.93 147.17 476.29 145.17Q477.66 143.16 480.03 143.16L480.03 143.16Q482.28 143.16 483.41 144.87Q484.54 146.59 484.54 149.99L484.54 149.99L484.54 171.78L488.14 171.78L488.14 150.66Q488.14 147.14 489.48 145.15Q490.81 143.16 493.12 143.16L493.12 143.16Q495.35 143.16 496.48 144.89Q497.61 146.62 497.61 150.01L497.61 150.01L497.61 171.78L501.21 171.78ZM520.58 172.34L520.58 172.34Q524.15 172.34 526.68 170.92Q529.22 169.50 530.33 166.83L530.33 166.83L530.74 166.83L530.74 171.81L534.43 171.81L534.43 150.13Q534.43 145.33 531.46 142.65Q528.49 139.97 523.12 139.97L523.12 139.97Q520.08 139.97 517.60 141.01Q515.13 142.05 513.56 143.86Q511.99 145.68 511.70 148.05L511.70 148.05L515.51 148.05Q516.18 145.77 518.16 144.54Q520.14 143.31 523.12 143.31L523.12 143.31Q526.76 143.31 528.66 145.11Q530.57 146.91 530.57 150.31L530.57 150.31L530.57 153.30L521.42 153.71Q516.21 153.94 513.35 156.33Q510.50 158.72 510.50 162.88L510.50 162.88Q510.50 167.15 513.27 169.75Q516.03 172.34 520.58 172.34ZM521.51 168.94L521.51 168.94Q518.23 168.94 516.34 167.31Q514.45 165.69 514.45 162.88L514.45 162.88Q514.45 157.19 521.69 156.87L521.69 156.87L530.57 156.49L530.57 160.88Q530.57 163.14 529.36 164.97Q528.16 166.80 526.11 167.87Q524.06 168.94 521.51 168.94ZM558.95 171.78L558.95 157.60Q558.95 151.13 561.97 147.29Q564.99 143.45 570.09 143.45L570.09 143.45Q571.38 143.45 572.78 143.69Q574.19 143.92 575.27 144.33L575.27 144.33L575.27 140.14Q574.54 139.82 573.29 139.63Q572.05 139.44 570.67 139.44L570.67 139.44Q566.07 139.44 563.08 141.74Q560.10 144.04 559.28 148.26L559.28 148.26L558.87 148.26L558.87 140.23L547.97 140.23L547.97 143.33L555.12 143.33L555.12 171.78L558.95 171.78ZM548.61 171.78L568.97 171.78L568.97 168.68L548.61 168.68L548.61 171.78ZM606.65 140.23L591.83 155.08L591.47 155.08L591.47 127.66L587.64 127.66L587.64 171.78L591.47 171.78L591.47 159.83L597.07 154.38L598.01 153.47L611.51 140.23L606.65 140.23ZM598.53 151.71L595.75 154.20L607.76 171.78L612.39 171.78L598.53 151.71Z\" transform=\"translate(-380, -32)\" />\n</svg>\n"
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 3.90234375,
          "content": "<svg height=\"300\" viewBox=\"0 0 1012 300\" width=\"1012\" xmlns=\"http://www.w3.org/2000/svg\">\n  <style>\n    .b {fill: #0d1117}\n    .l {fill: #fff}\n    @media (prefers-color-scheme: light) {\n      .b {fill: #fff}\n      .l {fill: #0d1117}\n    }\n  </style>\n  <rect class=\"b\" height=\"300\" width=\"1012\" x=\"0\" y=\"0\" />\n  <path d=\"M410.59 171.78L410.59 157.60Q410.59 151.13 413.61 147.29Q416.63 143.45 421.73 143.45L421.73 143.45Q423.02 143.45 424.42 143.69Q425.83 143.92 426.91 144.33L426.91 144.33L426.91 140.14Q426.18 139.82 424.94 139.63Q423.69 139.44 422.31 139.44L422.31 139.44Q417.71 139.44 414.73 141.74Q411.74 144.04 410.92 148.26L410.92 148.26L410.51 148.26L410.51 140.23L399.61 140.23L399.61 143.33L406.76 143.33L406.76 171.78L410.59 171.78ZM400.25 171.78L420.61 171.78L420.61 168.68L400.25 168.68L400.25 171.78ZM449.50 143.10L449.50 143.10Q453.69 143.10 456.05 145.96Q458.41 148.81 458.41 153.85L458.41 153.85L440.36 153.85Q440.36 148.78 442.79 145.94Q445.22 143.10 449.50 143.10ZM462.16 163.99L458.35 163.99Q457.62 166.30 455.39 167.59Q453.16 168.88 449.94 168.88L449.94 168.88Q445.55 168.88 442.95 165.97Q440.36 163.05 440.36 158.10L440.36 158.10L440.36 157.02L462.30 157.02L462.30 154.53Q462.30 149.81 460.79 146.50Q459.29 143.19 456.43 141.45Q453.57 139.70 449.50 139.70L449.50 139.70Q445.60 139.70 442.67 141.42Q439.75 143.13 438.13 146.22Q436.52 149.31 436.52 153.47L436.52 153.47L436.52 158.07Q436.52 164.81 440.05 168.56Q443.58 172.31 449.94 172.31L449.94 172.31Q453.13 172.31 455.70 171.28Q458.26 170.26 459.95 168.38Q461.63 166.51 462.16 163.99L462.16 163.99Z\" fill=\"#d80303\" />\n  <path class=\"l\" d=\"M501.21 171.78L501.21 149.14Q501.21 144.45 499.47 142.08Q497.72 139.70 494.27 139.70L494.27 139.70Q491.83 139.70 489.99 140.99Q488.14 142.28 487.50 144.45L487.50 144.45L487.09 144.45Q486.59 142.19 485.05 140.95Q483.51 139.70 481.26 139.70L481.26 139.70Q479.09 139.70 477.46 140.98Q475.84 142.25 475.22 144.45L475.22 144.45L474.81 144.45L474.81 140.23L471.33 140.23L471.33 171.78L474.93 171.78L474.93 150.66Q474.93 147.17 476.29 145.17Q477.66 143.16 480.03 143.16L480.03 143.16Q482.28 143.16 483.41 144.87Q484.54 146.59 484.54 149.99L484.54 149.99L484.54 171.78L488.14 171.78L488.14 150.66Q488.14 147.14 489.48 145.15Q490.81 143.16 493.12 143.16L493.12 143.16Q495.35 143.16 496.48 144.89Q497.61 146.62 497.61 150.01L497.61 150.01L497.61 171.78L501.21 171.78ZM520.58 172.34L520.58 172.34Q524.15 172.34 526.68 170.92Q529.22 169.50 530.33 166.83L530.33 166.83L530.74 166.83L530.74 171.81L534.43 171.81L534.43 150.13Q534.43 145.33 531.46 142.65Q528.49 139.97 523.12 139.97L523.12 139.97Q520.08 139.97 517.60 141.01Q515.13 142.05 513.56 143.86Q511.99 145.68 511.70 148.05L511.70 148.05L515.51 148.05Q516.18 145.77 518.16 144.54Q520.14 143.31 523.12 143.31L523.12 143.31Q526.76 143.31 528.66 145.11Q530.57 146.91 530.57 150.31L530.57 150.31L530.57 153.30L521.42 153.71Q516.21 153.94 513.35 156.33Q510.50 158.72 510.50 162.88L510.50 162.88Q510.50 167.15 513.27 169.75Q516.03 172.34 520.58 172.34ZM521.51 168.94L521.51 168.94Q518.23 168.94 516.34 167.31Q514.45 165.69 514.45 162.88L514.45 162.88Q514.45 157.19 521.69 156.87L521.69 156.87L530.57 156.49L530.57 160.88Q530.57 163.14 529.36 164.97Q528.16 166.80 526.11 167.87Q524.06 168.94 521.51 168.94ZM558.95 171.78L558.95 157.60Q558.95 151.13 561.97 147.29Q564.99 143.45 570.09 143.45L570.09 143.45Q571.38 143.45 572.78 143.69Q574.19 143.92 575.27 144.33L575.27 144.33L575.27 140.14Q574.54 139.82 573.29 139.63Q572.05 139.44 570.67 139.44L570.67 139.44Q566.07 139.44 563.08 141.74Q560.10 144.04 559.28 148.26L559.28 148.26L558.87 148.26L558.87 140.23L547.97 140.23L547.97 143.33L555.12 143.33L555.12 171.78L558.95 171.78ZM548.61 171.78L568.97 171.78L568.97 168.68L548.61 168.68L548.61 171.78ZM606.65 140.23L591.83 155.08L591.47 155.08L591.47 127.66L587.64 127.66L587.64 171.78L591.47 171.78L591.47 159.83L597.07 154.38L598.01 153.47L611.51 140.23L606.65 140.23ZM598.53 151.71L595.75 154.20L607.76 171.78L612.39 171.78L598.53 151.71Z\" />\n</svg>\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.79296875,
          "content": "{\n  \"name\": \"remark\",\n  \"private\": true,\n  \"license\": \"MIT\",\n  \"homepage\": \"https://remark.js.org\",\n  \"repository\": \"https://github.com/remarkjs/remark\",\n  \"bugs\": \"https://github.com/remarkjs/remark/issues\",\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/unified\"\n  },\n  \"type\": \"module\",\n  \"workspaces\": [\n    \"packages/remark-parse/\",\n    \"packages/remark-stringify/\",\n    \"packages/remark/\",\n    \"packages/remark-cli/\"\n  ],\n  \"devDependencies\": {\n    \"@types/mdast\": \"^4.0.0\",\n    \"@types/node\": \"^22.0.0\",\n    \"c8\": \"^10.0.0\",\n    \"mdast-util-gfm\": \"^3.0.0\",\n    \"micromark-extension-gfm\": \"^3.0.0\",\n    \"prettier\": \"^3.0.0\",\n    \"remark-preset-wooorm\": \"^10.0.0\",\n    \"type-coverage\": \"^2.0.0\",\n    \"typescript\": \"^5.0.0\",\n    \"unified\": \"^11.0.0\",\n    \"unist-util-remove-position\": \"^5.0.0\",\n    \"xo\": \"^0.60.0\"\n  },\n  \"scripts\": {\n    \"build\": \"tsc --build --clean && tsc --build && type-coverage\",\n    \"format\": \"./packages/remark-cli/cli.js . --frail --output --quiet && prettier . --log-level warn --write && xo --fix\",\n    \"prepack\": \"npm run build && npm run format\",\n    \"test\": \"npm run build && npm run format && npm run test-coverage\",\n    \"test-api\": \"node --conditions development test.js\",\n    \"test-coverage\": \"c8 --100 --reporter lcov npm run test-api\"\n  },\n  \"prettier\": {\n    \"bracketSpacing\": false,\n    \"singleQuote\": true,\n    \"semi\": false,\n    \"tabWidth\": 2,\n    \"trailingComma\": \"none\",\n    \"useTabs\": false\n  },\n  \"remarkConfig\": {\n    \"plugins\": [\n      \"remark-preset-wooorm\",\n      [\n        \"remark-lint-no-html\",\n        false\n      ]\n    ]\n  },\n  \"typeCoverage\": {\n    \"atLeast\": 100,\n    \"detail\": true,\n    \"ignoreCatch\": true,\n    \"strict\": true\n  },\n  \"xo\": {\n    \"prettier\": true,\n    \"rules\": {\n      \"unicorn/prefer-string-replace-all\": \"off\"\n    }\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 18.8525390625,
          "content": "# ![remark][logo]\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**remark** is a tool that transforms markdown with plugins.\nThese plugins can inspect and change your markup.\nYou can use remark on the server, the client, CLIs, deno, etc.\n\n## Feature highlights\n\n* [x] **[compliant][syntax]**\n  — 100% to CommonMark, 100% to GFM or MDX with a plugin\n* [x] **[ASTs][syntax-tree]**\n  — inspecting and changing content made easy\n* [x] **[popular][]**\n  — world’s most popular markdown parser\n* [x] **[plugins][]**\n  — 150+ plugins you can pick and choose from\n\n## Intro\n\nremark is an ecosystem of plugins that work with markdown as structured data,\nspecifically ASTs (abstract syntax trees).\nASTs make it easy for programs to deal with markdown.\nWe call those programs plugins.\nPlugins inspect and change trees.\nYou can use the many existing plugins or you can make your own.\n\n* to learn markdown, see this [cheatsheet and tutorial][cheat]\n* for more about us, see [`unifiedjs.com`][site]\n* for updates, see [Twitter][]\n* for questions, see [support][]\n* to help, see [contribute][] or [sponsor][] below\n\n## Contents\n\n* [What is this?](#what-is-this)\n* [When should I use this?](#when-should-i-use-this)\n* [Plugins](#plugins)\n* [Examples](#examples)\n  * [Example: turning markdown into HTML](#example-turning-markdown-into-html)\n  * [Example: support for GFM and frontmatter](#example-support-for-gfm-and-frontmatter)\n  * [Example: checking markdown](#example-checking-markdown)\n  * [Example: checking and formatting markdown on the CLI](#example-checking-and-formatting-markdown-on-the-cli)\n* [Syntax](#syntax)\n* [Syntax tree](#syntax-tree)\n* [Types](#types)\n* [Compatibility](#compatibility)\n* [Security](#security)\n* [Contribute](#contribute)\n* [Sponsor](#sponsor)\n* [License](#license)\n\n## What is this?\n\nWith this project and a plugin, you can turn this markdown:\n\n```markdown\n# Hello, *Mercury*!\n```\n\n…into the following HTML:\n\n```html\n<h1>Hello, <em>Mercury</em>!</h1>\n```\n\n<details><summary>Show example code</summary>\n\n```js\nimport rehypeStringify from 'rehype-stringify'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeStringify)\n  .process('# Hello, *Mercury*!')\n\nconsole.log(String(file)) // => '<h1>Hello, <em>Mercury</em>!</h1>'\n```\n\n</details>\n\nWith another plugin, you can turn this markdown:\n\n```markdown\n# Hi, Saturn!\n```\n\n…into the following markdown:\n\n```markdown\n## Hi, Saturn!\n```\n\n<details><summary>Show example code</summary>\n\n```js\n/**\n * @import {Root} from 'mdast'\n */\n\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(myRemarkPluginToIncreaseHeadings)\n  .use(remarkStringify)\n  .process('# Hi, Saturn!')\n\nconsole.log(String(file)) // => '## Hi, Saturn!'\n\nfunction myRemarkPluginToIncreaseHeadings() {\n  /**\n   * @param {Root} tree\n   */\n  return function (tree) {\n    visit(tree, function (node) {\n      if (node.type === 'heading') {\n        node.depth++\n      }\n    })\n  }\n}\n```\n\n</details>\n\nYou can use remark for many different things.\n**[unified][]** is the core project that transforms content with ASTs.\n**remark** adds support for markdown to unified.\n**[mdast][]** is the markdown AST that remark uses.\n\nThis GitHub repository is a monorepo that contains the following packages:\n\n* [`remark-parse`][remark-parse]\n  — plugin to take markdown as input and turn it into a syntax tree (mdast)\n* [`remark-stringify`][remark-stringify]\n  — plugin to take a syntax tree (mdast) and turn it into markdown as output\n* [`remark`][remark-core]\n  — `unified`, `remark-parse`, and `remark-stringify`, useful when input and\n  output are markdown\n* [`remark-cli`][remark-cli]\n  — CLI around `remark` to inspect and format markdown in scripts\n\n## When should I use this?\n\nDepending on the input you have and output you want, you can use different\nparts of remark.\nIf the input is markdown, you can use `remark-parse` with `unified`.\nIf the output is markdown, you can use `remark-stringify` with `unified`.\nIf both the input and output are markdown, you can use `remark` on its own.\nWhen you want to inspect and format markdown files in a project, you can use\n`remark-cli`.\n\nIf you *just* want to turn markdown into HTML (with maybe a few extensions),\nwe recommend [`micromark`][micromark] instead.\n\nIf you don’t use plugins and want to deal with syntax trees manually, you can\nuse [`mdast-util-from-markdown`][mdast-util-from-markdown] and\n[`mdast-util-to-markdown`][mdast-util-to-markdown].\n\n## Plugins\n\nremark plugins deal with markdown.\nSome popular examples are:\n\n* [`remark-gfm`][remark-gfm]\n  — add support for GFM (GitHub flavored markdown)\n* [`remark-lint`][remark-lint]\n  — inspect markdown and warn about inconsistencies\n* [`remark-toc`][remark-toc]\n  — generate a table of contents\n* [`remark-rehype`][remark-rehype]\n  — turn markdown into HTML\n\nThese plugins are exemplary because what they do and how they do it is quite\ndifferent, respectively to extend markdown syntax, inspect trees, change trees,\nand transform to other syntax trees.\n\nYou can choose from the 150+ plugins that already exist.\nHere are three good ways to find plugins:\n\n* [`awesome-remark`][awesome-remark]\n  — selection of the most awesome projects\n* [List of plugins][list-of-plugins]\n  — list of all plugins\n* [`remark-plugin` topic][topic]\n  — any tagged repo on GitHub\n\nSome plugins are maintained by us here in the `@remarkjs` organization while\nothers are maintained by folks elsewhere.\nAnyone can make remark plugins, so as always when choosing whether to include\ndependencies in your project, make sure to carefully assess the quality of\nremark plugins too.\n\n## Examples\n\n### Example: turning markdown into HTML\n\nremark is an ecosystem around markdown.\nA different ecosystem is for HTML: [rehype][].\nThe following example turns markdown into HTML by combining both ecosystems with\n[`remark-rehype`][remark-rehype]:\n\n```js\nimport rehypeSanitize from 'rehype-sanitize'\nimport rehypeStringify from 'rehype-stringify'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeSanitize)\n  .use(rehypeStringify)\n  .process('# Hello, Neptune!')\n\nconsole.log(String(file))\n```\n\nYields:\n\n```html\n<h1>Hello, Neptune!</h1>\n```\n\n### Example: support for GFM and frontmatter\n\nremark supports CommonMark by default.\nNon-standard markdown extensions can be enabled with plugins.\nThe following example adds support for GFM (autolink literals, footnotes,\nstrikethrough, tables, tasklists) and frontmatter (YAML):\n\n```js\nimport rehypeStringify from 'rehype-stringify'\nimport remarkFrontmatter from 'remark-frontmatter'\nimport remarkGfm from 'remark-gfm'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\n\nconst value = `---\nlayout: solar-system\n---\n\n# Hi ~~Mars~~Venus!\n`\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkFrontmatter)\n  .use(remarkGfm)\n  .use(remarkRehype)\n  .use(rehypeStringify)\n  .process(value)\n\nconsole.log(String(file))\n```\n\nYields:\n\n```html\n<h1>Hi <del>Mars</del>Venus!</h1>\n```\n\n### Example: checking markdown\n\nThe following example checks that markdown code style is consistent and follows\nrecommended best practices:\n\n```js\nimport {remark} from 'remark'\nimport remarkPresetLintConsistent from 'remark-preset-lint-consistent'\nimport remarkPresetLintRecommended from 'remark-preset-lint-recommended'\nimport {reporter} from 'vfile-reporter'\n\nconst file = await remark()\n  .use(remarkPresetLintConsistent)\n  .use(remarkPresetLintRecommended)\n  .process('1) Hello, _Jupiter_ and *Neptune*!')\n\nconsole.error(reporter(file))\n```\n\nYields:\n\n```txt\n1:2           warning Unexpected ordered list marker `)`, expected `.`                                     ordered-list-marker-style remark-lint\n1:25-1:34     warning Unexpected emphasis marker `*`, expected `_`                                         emphasis-marker           remark-lint\n  [cause]:\n    1:11-1:20 info    Emphasis marker style `'_'` first defined for `'consistent'` here                    emphasis-marker           remark-lint\n1:35          warning Unexpected missing final newline character, expected line feed (`\\n`) at end of file final-newline             remark-lint\n\n⚠ 3 warnings\n```\n\n### Example: checking and formatting markdown on the CLI\n\nThe following example checks and formats markdown with `remark-cli`, which is\nthe CLI (command line interface) of remark that you can use in your terminal.\nThis example assumes you’re in a Node.js package.\n\nFirst, install the CLI and plugins:\n\n```sh\nnpm install --save-dev remark-cli remark-preset-lint-consistent remark-preset-lint-recommended remark-toc\n```\n\n…then add an npm script in your `package.json`:\n\n```js\n  /* … */\n  \"scripts\": {\n    /* … */\n    \"format\": \"remark . --output\",\n    /* … */\n  },\n  /* … */\n```\n\n> 💡 **Tip**: add ESLint and such in the `format` script too.\n\nThe above change adds a `format` script, which can be run with\n`npm run format`.\nIt runs remark on all markdown files (`.`) and rewrites them (`--output`).\nRun `./node_modules/.bin/remark --help` for more info on the CLI.\n\nThen, add a `remarkConfig` to your `package.json` to configure remark:\n\n```js\n  /* … */\n  \"remarkConfig\": {\n    \"settings\": {\n      \"bullet\": \"*\", // Use `*` for list item bullets (default)\n      // See <https://github.com/remarkjs/remark/tree/main/packages/remark-stringify> for more options.\n    },\n    \"plugins\": [\n      \"remark-preset-lint-consistent\", // Check that markdown is consistent.\n      \"remark-preset-lint-recommended\", // Few recommended rules.\n      [\n        // Generate a table of contents in `## Contents`\n        \"remark-toc\",\n        {\n          \"heading\": \"contents\"\n        }\n      ]\n    ]\n  },\n  /* … */\n```\n\n> 👉 **Note**: you must remove the comments in the above examples when\n> copy/pasting them as comments are not supported in `package.json` files.\n\nFinally, you can run the npm script to check and format markdown files in your\nproject:\n\n```sh\nnpm run format\n```\n\n## Syntax\n\nMarkdown is parsed and serialized according to CommonMark.\nOther plugins can add support for syntax extensions.\n\nWe use [`micromark`][micromark] for our parsing.\nSee its documentation for more information on markdown, CommonMark, and\nextensions.\n\n## Syntax tree\n\nThe syntax tree used in remark is [mdast][].\nIt represents markdown constructs as JSON objects.\n\nThis markdown:\n\n```markdown\n## Hello *Pluto*!\n```\n\n…yields the following tree (positional info remove for brevity):\n\n```js\n{\n  type: 'heading',\n  depth: 2,\n  children: [\n    {type: 'text', value: 'Hello '},\n    {type: 'emphasis', children: [{type: 'text', value: 'Pluto'}]}\n    {type: 'text', value: '!'}\n  ]\n}\n```\n\n## Types\n\nThe remark organization and the unified collective as a whole is fully typed\nwith [TypeScript][].\nTypes for mdast are available in [`@types/mdast`][types-mdast].\n\nFor TypeScript to work, it is important to type your plugins.\nFor example:\n\n```js\n/**\n * @import {Root} from 'mdast'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [someField]\n *   Some option (optional).\n */\n\n/**\n * My plugin.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport function myRemarkPluginAcceptingOptions(options) {\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree, file) {\n    // Do things.\n  }\n}\n```\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with maintained\nversions of Node.js.\n\nWhen we cut a new major release, we drop support for unmaintained versions of\nNode.\nThis means we try to keep the current release line compatible with Node.js 16.\n\n## Security\n\nAs markdown can be turned into HTML and improper use of HTML can open you up to\n[cross-site scripting (XSS)][xss] attacks, use of remark can be unsafe.\nWhen going to HTML, you will combine remark with **[rehype][]**, in which case\nyou should use [`rehype-sanitize`][rehype-sanitize].\n\nUse of remark plugins could also open you up to other attacks.\nCarefully assess each plugin and the risks involved in using them.\n\nFor info on how to submit a report, see our [security policy][security].\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`remarkjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\nJoin us in [Discussions][chat] to chat with the community and contributors.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## Sponsor\n\nSupport this effort and give back by sponsoring on [OpenCollective][collective]!\n\n<table>\n<tr valign=\"middle\">\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://vercel.com\">Vercel</a><br><br>\n  <a href=\"https://vercel.com\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://motif.land\">Motif</a><br><br>\n  <a href=\"https://motif.land\"><img src=\"https://avatars1.githubusercontent.com/u/74457950?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.hashicorp.com\">HashiCorp</a><br><br>\n  <a href=\"https://www.hashicorp.com\"><img src=\"https://avatars1.githubusercontent.com/u/761456?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.gitbook.com\">GitBook</a><br><br>\n  <a href=\"https://www.gitbook.com\"><img src=\"https://avatars1.githubusercontent.com/u/7111340?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.gatsbyjs.org\">Gatsby</a><br><br>\n  <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=256&v=4\" width=\"128\"></a>\n</td>\n</tr>\n<tr valign=\"middle\">\n</tr>\n<tr valign=\"middle\">\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.netlify.com\">Netlify</a><br><br>\n  <!--OC has a sharper image-->\n  <a href=\"https://www.netlify.com\"><img src=\"https://images.opencollective.com/netlify/4087de2/logo/256.png\" width=\"128\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://www.coinbase.com\">Coinbase</a><br><br>\n  <a href=\"https://www.coinbase.com\"><img src=\"https://avatars1.githubusercontent.com/u/1885080?s=256&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://themeisle.com\">ThemeIsle</a><br><br>\n  <a href=\"https://themeisle.com\"><img src=\"https://avatars1.githubusercontent.com/u/58979018?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://expo.io\">Expo</a><br><br>\n  <a href=\"https://expo.io\"><img src=\"https://avatars1.githubusercontent.com/u/12504344?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://boostnote.io\">Boost Note</a><br><br>\n  <a href=\"https://boostnote.io\"><img src=\"https://images.opencollective.com/boosthub/6318083/logo/128.png\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://markdown.space\">Markdown Space</a><br><br>\n  <a href=\"https://markdown.space\"><img src=\"https://images.opencollective.com/markdown-space/e1038ed/logo/128.png\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://www.holloway.com\">Holloway</a><br><br>\n  <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\"></td>\n<td width=\"10%\"></td>\n</tr>\n<tr valign=\"middle\">\n<td width=\"100%\" align=\"center\" colspan=\"8\">\n  <br>\n  <a href=\"https://opencollective.com/unified\"><strong>You?</strong></a>\n  <br><br>\n</td>\n</tr>\n</table>\n\n## License\n\n[MIT](license) © [Titus Wormer](https://wooorm.com)\n\n<!-- Definitions -->\n\n[logo]: https://raw.githubusercontent.com/remarkjs/remark/1f338e72/logo.svg?sanitize=true\n\n[build-badge]: https://github.com/remarkjs/remark/workflows/main/badge.svg\n\n[build]: https://github.com/remarkjs/remark/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark.svg\n\n[coverage]: https://codecov.io/github/remarkjs/remark\n\n[downloads-badge]: https://img.shields.io/npm/dm/remark.svg\n\n[downloads]: https://www.npmjs.com/package/remark\n\n[size-badge]: https://img.shields.io/bundlejs/size/remark\n\n[size]: https://bundlejs.com/?q=remark\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/remarkjs/remark/discussions\n\n[security]: https://github.com/remarkjs/.github/blob/main/security.md\n\n[health]: https://github.com/remarkjs/.github\n\n[contributing]: https://github.com/remarkjs/.github/blob/main/contributing.md\n\n[support]: https://github.com/remarkjs/.github/blob/main/support.md\n\n[coc]: https://github.com/remarkjs/.github/blob/main/code-of-conduct.md\n\n[typescript]: https://www.typescriptlang.org\n\n[cheat]: https://commonmark.org/help/\n\n[twitter]: https://twitter.com/unifiedjs\n\n[site]: https://unifiedjs.com\n\n[topic]: https://github.com/topics/remark-plugin\n\n[popular]: https://www.npmtrends.com/remark-parse-vs-marked-vs-micromark-vs-markdown-it\n\n[types-mdast]: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/mdast\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[mdast-util-from-markdown]: https://github.com/syntax-tree/mdast-util-from-markdown\n\n[mdast-util-to-markdown]: https://github.com/syntax-tree/mdast-util-to-markdown\n\n[micromark]: https://github.com/micromark/micromark\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[rehype-sanitize]: https://github.com/rehypejs/rehype-sanitize\n\n[remark-cli]: packages/remark-cli/\n\n[remark-core]: packages/remark/\n\n[remark-gfm]: https://github.com/remarkjs/remark-gfm\n\n[remark-lint]: https://github.com/remarkjs/remark-lint\n\n[remark-parse]: packages/remark-parse/\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[remark-stringify]: packages/remark-stringify/\n\n[remark-toc]: https://github.com/remarkjs/remark-toc\n\n[awesome-remark]: https://github.com/remarkjs/awesome-remark\n\n[unified]: https://github.com/unifiedjs/unified\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[list-of-plugins]: doc/plugins.md#list-of-plugins\n\n[syntax]: #syntax\n\n[syntax-tree]: #syntax-tree\n\n[plugins]: #plugins\n\n[contribute]: #contribute\n\n[sponsor]: #sponsor\n"
        },
        {
          "name": "test.js",
          "type": "blob",
          "size": 10.9501953125,
          "content": "import assert from 'node:assert/strict'\nimport {exec as execCallback} from 'node:child_process'\nimport test from 'node:test'\nimport {promisify} from 'node:util'\nimport {fileURLToPath} from 'node:url'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\nimport {remark} from 'remark'\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\nimport {unified} from 'unified'\nimport {removePosition} from 'unist-util-remove-position'\n\nconst exec = promisify(execCallback)\n\ntest('remark', async function (t) {\n  await t.test('should expose the public api', async function () {\n    assert.deepEqual(Object.keys(await import('remark')).sort(), ['remark'])\n  })\n\n  await t.test('should process a file', async function () {\n    assert.equal(remark().processSync('*foo*').toString(), '*foo*\\n')\n  })\n\n  await t.test('should accept settings', async function () {\n    assert.equal(\n      remark()\n        .data('settings', {closeAtx: true})\n        .processSync('# foo')\n        .toString(),\n      '# foo #\\n'\n    )\n  })\n})\n\ntest('remark-cli', async function (t) {\n  const binary = fileURLToPath(\n    new URL('packages/remark-cli/cli.js', import.meta.url)\n  )\n\n  await t.test('should show help on `--help`', async function () {\n    const result = await exec(binary + ' --help')\n\n    assert.equal(\n      result.stdout,\n      [\n        'Usage: remark [options] [path | glob ...]',\n        '',\n        '  CLI to process markdown with remark',\n        '',\n        'Options:',\n        '',\n        '      --[no-]color                        specify color in report (on by default)',\n        '      --[no-]config                       search for configuration files (on by default)',\n        '  -e  --ext <extensions>                  specify extensions',\n        '      --file-path <path>                  specify path to process as',\n        '  -f  --frail                             exit with 1 on warnings',\n        '  -h  --help                              output usage information',\n        '      --[no-]ignore                       search for ignore files (on by default)',\n        '  -i  --ignore-path <path>                specify ignore file',\n        '      --ignore-path-resolve-from cwd|dir  resolve patterns in `ignore-path` from its directory or cwd',\n        '      --ignore-pattern <globs>            specify ignore patterns',\n        '      --inspect                           output formatted syntax tree',\n        '  -o  --output [path]                     specify output location',\n        '  -q  --quiet                             output only warnings and errors',\n        '  -r  --rc-path <path>                    specify configuration file',\n        '      --report <reporter>                 specify reporter',\n        '  -s  --setting <settings>                specify settings',\n        '  -S  --silent                            output only errors',\n        '      --silently-ignore                   do not fail when given ignored files',\n        '      --[no-]stdout                       specify writing to stdout (on by default)',\n        '  -t  --tree                              specify input and output as syntax tree',\n        '      --tree-in                           specify input as syntax tree',\n        '      --tree-out                          output syntax tree',\n        '  -u  --use <plugins>                     use plugins',\n        '      --verbose                           report extra info for messages',\n        '  -v  --version                           output version number',\n        '  -w  --watch                             watch for changes and reprocess',\n        '',\n        'Examples:',\n        '',\n        '  # Process `input.md`',\n        '  $ remark input.md -o output.md',\n        '',\n        '  # Pipe',\n        '  $ remark < input.md > output.md',\n        '',\n        '  # Rewrite all applicable files',\n        '  $ remark . -o',\n        ''\n      ].join('\\n')\n    )\n  })\n\n  await t.test('should show version on `--version`', async function () {\n    const result = await exec(binary + ' --version')\n\n    assert.match(result.stdout, /remark: \\d+\\.\\d+\\.\\d+/)\n    assert.match(result.stdout, /remark-cli: \\d+\\.\\d+\\.\\d+/)\n  })\n})\n\ntest('remark-parse', async function (t) {\n  await t.test('should expose the public api', async function () {\n    assert.deepEqual(Object.keys(await import('remark-parse')).sort(), [\n      'default'\n    ])\n  })\n\n  await t.test('should parse', async function () {\n    assert.deepEqual(unified().use(remarkParse).parse('Alfred'), {\n      type: 'root',\n      children: [\n        {\n          type: 'paragraph',\n          children: [\n            {\n              type: 'text',\n              value: 'Alfred',\n              position: {\n                start: {line: 1, column: 1, offset: 0},\n                end: {line: 1, column: 7, offset: 6}\n              }\n            }\n          ],\n          position: {\n            start: {line: 1, column: 1, offset: 0},\n            end: {line: 1, column: 7, offset: 6}\n          }\n        }\n      ],\n      position: {\n        start: {line: 1, column: 1, offset: 0},\n        end: {line: 1, column: 7, offset: 6}\n      }\n    })\n  })\n\n  await t.test('should support extensions', function () {\n    const tree = unified()\n      .data('micromarkExtensions', [gfm()])\n      .data('fromMarkdownExtensions', [gfmFromMarkdown()])\n      .use(remarkParse)\n      .parse('* [x] contact@example.com ~~strikethrough~~')\n\n    removePosition(tree, {force: true})\n\n    assert.deepEqual(tree, {\n      type: 'root',\n      children: [\n        {\n          type: 'list',\n          ordered: false,\n          start: null,\n          spread: false,\n          children: [\n            {\n              type: 'listItem',\n              spread: false,\n              checked: true,\n              children: [\n                {\n                  type: 'paragraph',\n                  children: [\n                    {\n                      type: 'link',\n                      title: null,\n                      url: 'mailto:contact@example.com',\n                      children: [{type: 'text', value: 'contact@example.com'}]\n                    },\n                    {type: 'text', value: ' '},\n                    {\n                      type: 'delete',\n                      children: [{type: 'text', value: 'strikethrough'}]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    })\n  })\n})\n\ntest('remark-stringify', async function (t) {\n  await t.test('should expose the public api', async function () {\n    assert.deepEqual(Object.keys(await import('remark-stringify')).sort(), [\n      'default'\n    ])\n  })\n\n  await t.test('should serialize', async function () {\n    assert.equal(\n      unified()\n        .use(remarkStringify)\n        .stringify({\n          type: 'root',\n          children: [\n            {type: 'paragraph', children: [{type: 'text', value: 'Alfred'}]}\n          ]\n        }),\n      'Alfred\\n'\n    )\n  })\n\n  await t.test('should support extensions', async function () {\n    const result = unified()\n      .data('toMarkdownExtensions', [gfmToMarkdown()])\n      .use(remarkStringify)\n      .stringify({\n        type: 'root',\n        children: [\n          {\n            type: 'heading',\n            depth: 1,\n            children: [{type: 'text', value: 'GFM'}]\n          },\n          {\n            type: 'heading',\n            depth: 2,\n            children: [{type: 'text', value: 'Autolink literals'}]\n          },\n          {\n            type: 'paragraph',\n            children: [\n              {\n                type: 'link',\n                title: null,\n                url: 'http://www.example.com',\n                children: [{type: 'text', value: 'www.example.com'}]\n              },\n              {type: 'text', value: ', '},\n              {\n                type: 'link',\n                title: null,\n                url: 'https://example.com',\n                children: [{type: 'text', value: 'https://example.com'}]\n              },\n              {type: 'text', value: ', and '},\n              {\n                type: 'link',\n                title: null,\n                url: 'mailto:contact@example.com',\n                children: [{type: 'text', value: 'contact@example.com'}]\n              },\n              {type: 'text', value: '.'}\n            ]\n          },\n          {\n            type: 'heading',\n            depth: 2,\n            children: [{type: 'text', value: 'Strikethrough'}]\n          },\n          {\n            type: 'paragraph',\n            children: [\n              {\n                type: 'delete',\n                children: [{type: 'text', value: 'one'}]\n              },\n              {type: 'text', value: ' or '},\n              {\n                type: 'delete',\n                children: [{type: 'text', value: 'two'}]\n              },\n              {type: 'text', value: ' tildes.'}\n            ]\n          },\n          {\n            type: 'heading',\n            depth: 2,\n            children: [{type: 'text', value: 'Table'}]\n          },\n          {\n            type: 'table',\n            align: [null, 'left', 'right', 'center'],\n            children: [\n              {\n                type: 'tableRow',\n                children: [\n                  {type: 'tableCell', children: [{type: 'text', value: 'a'}]},\n                  {type: 'tableCell', children: [{type: 'text', value: 'b'}]},\n                  {type: 'tableCell', children: [{type: 'text', value: 'c'}]},\n                  {type: 'tableCell', children: [{type: 'text', value: 'd'}]}\n                ]\n              }\n            ]\n          },\n          {\n            type: 'heading',\n            depth: 2,\n            children: [{type: 'text', value: 'Tasklist'}]\n          },\n          {\n            type: 'list',\n            ordered: false,\n            start: undefined,\n            spread: false,\n            children: [\n              {\n                type: 'listItem',\n                spread: false,\n                checked: false,\n                children: [\n                  {\n                    type: 'paragraph',\n                    children: [{type: 'text', value: 'to do'}]\n                  }\n                ]\n              },\n              {\n                type: 'listItem',\n                spread: false,\n                checked: true,\n                children: [\n                  {\n                    type: 'paragraph',\n                    children: [{type: 'text', value: 'done'}]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      })\n\n    assert.equal(\n      result,\n      [\n        '# GFM',\n        '',\n        '## Autolink literals',\n        '',\n        '[www.example.com](http://www.example.com), <https://example.com>, and <contact@example.com>.',\n        '',\n        '## Strikethrough',\n        '',\n        '~~one~~ or ~~two~~ tildes.',\n        '',\n        '## Table',\n        '',\n        '| a | b  |  c |  d  |',\n        '| - | :- | -: | :-: |',\n        '',\n        '## Tasklist',\n        '',\n        '* [ ] to do',\n        '* [x] done',\n        ''\n      ].join('\\n')\n    )\n  })\n})\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.5,
          "content": "{\n  \"compilerOptions\": {\n    \"checkJs\": true,\n    \"customConditions\": [\"development\"],\n    \"declarationMap\": true,\n    \"declaration\": true,\n    \"emitDeclarationOnly\": true,\n    \"exactOptionalPropertyTypes\": true,\n    \"lib\": [\"es2022\"],\n    \"module\": \"node16\",\n    \"strict\": true,\n    \"target\": \"es2022\"\n  },\n  \"exclude\": [\"**/coverage/\", \"**/node_modules/\"],\n  \"include\": [\n    \"**/*.js\",\n    \"packages/remark/index.d.ts\",\n    \"packages/remark-parse/index.d.ts\",\n    \"packages/remark-stringify/index.d.ts\"\n  ]\n}\n"
        }
      ]
    }
  ]
}