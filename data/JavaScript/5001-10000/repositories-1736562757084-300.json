{
  "metadata": {
    "timestamp": 1736562757084,
    "page": 300,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gitalk/gitalk",
      "stars": 7058,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.126953125,
          "content": "{\n  \"sourceMaps\": true,\n  \"presets\": [\n    \"es2015\",\n    \"stage-2\",\n    \"react\"\n  ],\n  \"plugins\": [\n    \"transform-runtime\"\n  ]\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.546875,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# The JSON files contain newlines inconsistently\n[*.json]\ninsert_final_newline = ignore\n\n# Minified JavaScript files shouldn't be changed\n[**.min.js]\nindent_style = ignore\ninsert_final_newline = ignore\n\n# Makefiles always use tabs for indentation\n[Makefile]\nindent_style = tab\n\n# Batch files use tabs for indentation\n[*.bat]\nindent_style = tab\n\n[*.md]\ntrim_trailing_whitespace = false\n\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.8828125,
          "content": "{\n  \"root\": true,\n  \"parser\": \"babel-eslint\",\n  \"extends\": \"o2team\",\n  \"plugins\": [\n    \"react\"\n  ],\n  \"env\": {\n    \"browser\": true,\n    \"node\": true,\n    \"es6\": true,\n    \"jest\": true\n  },\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"modules\": true,\n      \"jsx\": true\n    }\n  },\n  \"settings\": {\n    // \"react\": {\n    //   \"pragma\": \"h\"\n    // }\n  },\n  \"globals\": {\n    \"Gitalk\": true\n  },\n  \"rules\": {\n    \"react/jsx-no-bind\": [2, { \"ignoreRefs\": true }],\n    \"react/jsx-no-duplicate-props\": 2,\n    \"react/self-closing-comp\": 2,\n    \"react/prefer-es6-class\": 2,\n    \"react/no-string-refs\": 2,\n    \"react/require-render-return\": 2,\n    \"react/no-find-dom-node\": 2,\n    \"react/no-is-mounted\": 2,\n    \"react/jsx-no-comment-textnodes\": 2,\n    \"react/jsx-curly-spacing\": 2,\n    \"react/jsx-no-undef\": 2,\n    \"react/jsx-uses-react\": 2,\n    \"react/jsx-uses-vars\": 2,\n\n    \"class-methods-use-this\": 0\n  }\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.103515625,
          "content": "*.log\n.DS_Store\n\n.vscode\n\nnpm-debug.log\nnode_modules\npackage-lock.json\n\ndev/config.js\nyarn.lock\n\ncoverage\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2958984375,
          "content": "language: node_js\nnode_js:\n  - stable\ninstall:\n  # not compatible webpack@3.1.0 and extract-text-webpack-plugin@2.1.2\n  - npm install --force\nscript:\n  - npm run lint\n  - npm run test\n  - npm run coverage\nafter_script: \"npm install coveralls && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.53515625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n\n### [1.7.2](https://github.com/gitalk/gitalk/compare/v1.7.1...v1.7.2) (2021-03-03)\n\n\n### Bug Fixes\n\n* replace proxy ([68786ee](https://github.com/gitalk/gitalk/commit/68786ee5d28b1e93fc7dcb57edabc70370d80cca))\n\n### [1.7.1](https://github.com/gitalk/gitalk/compare/v1.7.0...v1.7.1) (2021-02-28)\n\n\n### Bug Fixes\n\n* Update comment not work when post like or unlike ([#416](https://github.com/gitalk/gitalk/issues/416)) ([e0ca916](https://github.com/gitalk/gitalk/commit/e0ca91652165c0a1c54a9b214e00168e1f8dbb17))\n\n## [1.7.0](https://github.com/gitalk/gitalk/compare/v1.6.2...v1.7.0) (2020-10-15)\n\n\n### Features\n\n* add Korean language support ([#407](https://github.com/gitalk/gitalk/issues/407)) ([8d874e0](https://github.com/gitalk/gitalk/commit/8d874e02f12282f6a28ec0958f99685cf92f5fd9))\n* add Polish translations ([#406](https://github.com/gitalk/gitalk/issues/406)) ([6420f31](https://github.com/gitalk/gitalk/commit/6420f315ec92eb9b30e4532cffbb26e862237ef6))\n\n\n### Bug Fixes\n\n* replace onMouseDown to onClick ([873caa8](https://github.com/gitalk/gitalk/commit/873caa8407407476ea682bad8a5b6f60534e3cb4))\n\n### [1.6.2](https://github.com/gitalk/gitalk/compare/v1.6.0...v1.6.2) (2020-02-29)\n\n\n### Bug Fixes\n\n* set default avatar for image load fail ([#357](https://github.com/gitalk/gitalk/issues/357)) ([49e37fd](https://github.com/gitalk/gitalk/commit/49e37fddf6b374ce863f1888d23b0e09a53b3db0))\n\n### [1.6.1](https://github.com/gitalk/gitalk/compare/v1.6.0...v1.6.1) (2020-02-29)\n\n## [1.6.0](https://github.com/gitalk/gitalk/compare/v1.5.2...v1.6.0) (2020-02-16)\n\n\n### Features\n\n* add german translations ([#309](https://github.com/gitalk/gitalk/issues/309)) ([f92f372](https://github.com/gitalk/gitalk/commit/f92f3722fbabce236c8e3e13202a0cb1c91de757))\n* refresh after issue created. ([#277](https://github.com/gitalk/gitalk/issues/277)) ([6dfcc21](https://github.com/gitalk/gitalk/commit/6dfcc2150b1bd51f6ed939430cad7f712b33602a))\n\n\n### Bug Fixes\n\n* debounce at clicking btn to create comments ([eb35bdf](https://github.com/gitalk/gitalk/commit/eb35bdf9ad23e5f5a5240848d6465a863ffa70e0))\n* repeat create comment ([b53eccb](https://github.com/gitalk/gitalk/commit/b53eccb31af582818079c944f840b82b5ac8f031))\n* **comment:** comments via email notification ([d536f08](https://github.com/gitalk/gitalk/commit/d536f08437532fa5f526b7f3becec3bf97fac9dd)), closes [#224](https://github.com/gitalk/gitalk/issues/224)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2017 aotu.io\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.6767578125,
          "content": "{\n  \"name\": \"gitalk\",\n  \"version\": \"1.7.2\",\n  \"description\": \"A comment plugin base on GitHub issues\",\n  \"keywords\": [\n    \"comment\",\n    \"plugin\",\n    \"lib\",\n    \"GitHub\"\n  ],\n  \"main\": \"dist/gitalk.js\",\n  \"types\": \"typings/index.d.ts\",\n  \"scripts\": {\n    \"prepublishOnly\": \"npm run build\",\n    \"dev\": \"cross-env NODE_ENV=development webpack-dev-server --inline --hot --no-info --progress\",\n    \"build\": \"rimraf ./dist && cross-env NODE_ENV=production webpack --hide-modules && cross-env NODE_ENV=production webpack --config webpack.config.comp.js && cross-env NODE_ENV=production webpack --config webpack.config.min.js\",\n    \"lint\": \"eslint src\",\n    \"coverage\": \"jest --coverage\",\n    \"test\": \"jest\",\n    \"bump\": \"standard-version -a\"\n  },\n  \"author\": \"Liucw\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"autoprefixer\": \"7.1.2\",\n    \"babel-core\": \"6.25.0\",\n    \"babel-eslint\": \"7.2.3\",\n    \"babel-jest\": \"20.0.3\",\n    \"babel-loader\": \"7.1.1\",\n    \"babel-plugin-transform-runtime\": \"6.23.0\",\n    \"babel-preset-es2015\": \"6.24.1\",\n    \"babel-preset-react\": \"6.24.1\",\n    \"babel-preset-stage-2\": \"6.24.1\",\n    \"cross-env\": \"5.0.1\",\n    \"css-loader\": \"0.28.4\",\n    \"enzyme\": \"2.9.1\",\n    \"eslint\": \"4.19.1\",\n    \"eslint-config-o2team\": \"0.1.6\",\n    \"eslint-plugin-react\": \"7.1.0\",\n    \"extract-text-webpack-plugin\": \"2.1.2\",\n    \"jest\": \"20.0.4\",\n    \"moxios\": \"0.4.0\",\n    \"postcss-loader\": \"2.0.6\",\n    \"raw-loader\": \"^0.5.1\",\n    \"react\": \"15.6.1\",\n    \"react-dom\": \"15.6.1\",\n    \"react-test-renderer\": \"15.6.1\",\n    \"rimraf\": \"2.6.1\",\n    \"sinon\": \"2.3.7\",\n    \"standard-version\": \"~9.1.0\",\n    \"style-loader\": \"0.18.2\",\n    \"stylus\": \"^0.54.5\",\n    \"stylus-loader\": \"^3.0.1\",\n    \"url-loader\": \"0.5.9\",\n    \"webpack\": \"3.1.0\",\n    \"webpack-dev-server\": \"2.5.1\"\n  },\n  \"dependencies\": {\n    \"autosize\": \"3.0.21\",\n    \"axios\": \"0.19.2\",\n    \"date-fns\": \"2.16.1\",\n    \"es6-promise\": \"4.1.1\",\n    \"github-markdown-css\": \"2.8.0\",\n    \"node-polyglot\": \"2.2.2\",\n    \"preact\": \"8.1.0\",\n    \"preact-compat\": \"3.16.0\",\n    \"react-flip-move\": \"2.9.14\"\n  },\n  \"jest\": {\n    \"transform\": {\n      \"^.+\\\\.jsx?$\": \"babel-jest\"\n    },\n    \"moduleNameMapper\": {\n      \"\\\\.(css|less|scss|styl)$\": \"<rootDir>/src/__mocks__/style.js\",\n      \"^!!raw-loader\": \"<rootDir>/src/__mocks__/text.js\"\n    },\n    \"moduleFileExtensions\": [\n      \"js\",\n      \"jsx\"\n    ],\n    \"coveragePathIgnorePatterns\": [\n      \"src/gitalk.jsx\",\n      \"src/graphql/getComments.js\"\n    ],\n    \"globals\": {\n      \"VERSION\": \"1.0.0-test\"\n    }\n  },\n  \"standard-version\": {\n    \"releaseCommitMessageFormat\": \"chore(release): v{{currentTag}} :rocket:\",\n    \"scripts\": {\n      \"prerelease\": \"npm test\",\n      \"precommit\": \"npm run-script build > /dev/null && git add ./dist\"\n    }\n  }\n}\n"
        },
        {
          "name": "readme-cn.md",
          "type": "blob",
          "size": 6.6689453125,
          "content": "# Gitalk\n\n[![NPM][npm-version-image]][npm-version-url] \n[![CDNJS][cdnjs-version-image]][cdnjs-version-url] \n[![jsdelivr](https://data.jsdelivr.com/v1/package/npm/gitalk/badge)](https://www.jsdelivr.com/package/npm/gitalk)\n[![david-dm][david-dm-image]][david-dm-url] \n[![travis][travis-image]][travis-url] \n[![coveralls][coveralls-image]][coveralls-url] \n[![gzip-size][gzip-size]][gzip-url]\n\nGitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。\n\n## 特性\n\n- 使用 GitHub 登录\n- 支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]\n- 支持个人或组织\n- 无干扰模式（设置 distractionFreeMode 为 true 开启）\n- 快捷键提交评论 （cmd|ctrl + enter）\n\n[Readme](https://github.com/gitalk/gitalk/blob/master/readme.md)\n[在线示例](https://gitalk.github.io)\n\n## 安装\n\n两种方式\n\n- 直接引入\n\n```html\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n\n  <!-- or -->\n\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n  <script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n```\n\n- npm 安装\n\n```sh\nnpm i --save gitalk\n```\n\n```js\nimport 'gitalk/dist/gitalk.css'\nimport Gitalk from 'gitalk'\n```\n\n## 使用\n\n首先，您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论，\n\n然后需要创建 **GitHub Application**，如果没有 [点击这里申请](https://github.com/settings/applications/new)，`Authorization callback URL` 填写当前使用插件页面的域名。\n\n最后, 您可以选择如下的其中一种方式应用到页面：\n\n### 方式1\n\n添加一个容器：\n\n```html\n<div id=\"gitalk-container\"></div>\n```\n\n用下面的 Javascript 代码来生成 gitalk 插件：\n\n```js\nvar gitalk = new Gitalk({\n  clientID: 'GitHub Application Client ID',\n  clientSecret: 'GitHub Application Client Secret',\n  repo: 'GitHub repo',\n  owner: 'GitHub repo owner',\n  admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],\n  id: location.pathname,      // Ensure uniqueness and length less than 50\n  distractionFreeMode: false  // Facebook-like distraction free mode\n})\n\ngitalk.render('gitalk-container')\n```\n\n### 方式2：在React使用\n\n使用以下代码引入Gitalk组件\n\n```jsx\nimport GitalkComponent from \"gitalk/dist/gitalk-component\";\n```\n\n按以下方式在React中使用Gitalk组件\n\n```jsx\n<GitalkComponent options={{\n  clientID: \"...\",\n  // ...\n  // 设置项\n}} />\n```\n\n## 设置\n\n- **clientID** `String` \n\n  **必须**. GitHub Application Client ID.\n\n- **clientSecret** `String` \n\n  **必须**. GitHub Application Client Secret.\n\n- **repo** `String` \n\n  **必须**. GitHub repository.\n\n- **owner** `String` \n\n  **必须**. GitHub repository 所有者，可以是个人或者组织。\n\n- **admin** `Array` \n\n  **必须**. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。\n\n- **id** `String` \n  \n  Default: `location.href`.\n\n  页面的唯一标识。长度必须小于50。\n  \n- **number** `Number` \n  \n  Default: `-1`.\n\n  页面的 issue ID 标识，若未定义`number`属性则会使用`id`进行定位。\n\n  提示：可以使用正则从 `URL` 中提取其中一部份作为 `id`。例如：`location.href.match('/(?<=posts/)(.*)(?=/)/')[1]`\n\n- **labels** `Array` \n  \n  Default: `['Gitalk']`.\n\n  GitHub issue 的标签。\n\n- **title** `String` \n  \n  Default: `document.title`.\n\n  GitHub issue 的标题。\n\n- **body** `String` \n  \n  Default: `location.href + header.meta[description]`.\n\n  GitHub issue 的内容。\n\n- **language** `String` \n  \n  Default: `navigator.language || navigator.userLanguage`.\n\n  设置语言，支持 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]。\n\n- **perPage** `Number` \n  \n  Default: `10`.\n\n  每次加载的数据大小，最多 100。\n\n- **distractionFreeMode** `Boolean` \n  \n  Default: false。\n\n  类似Facebook评论框的全屏遮罩效果.\n\n- **pagerDirection** `String`\n\n  Default: 'last'\n\n  评论排序方式， `last`为按评论创建时间倒叙，`first`为按创建时间正序。\n\n- **createIssueManually** `Boolean` \n  \n  Default: `false`.\n\n  如果当前页面没有相应的 isssue 且登录的用户属于 admin，则会自动创建 issue。如果设置为 `true`，则显示一个初始化页面，创建 issue 需要点击 `init` 按钮。\n\n- **proxy** `String` \n\n  Default: `https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token`.\n\n   GitHub oauth 请求到反向代理，为了支持 CORS。 [为什么要这样?](https://github.com/isaacs/github/issues/330)\n\n- **flipMoveOptions** `Object` \n  \n  Default:\n  ```js\n    {\n      staggerDelayBy: 150,\n      appearAnimation: 'accordionVertical',\n      enterAnimation: 'accordionVertical',\n      leaveAnimation: 'accordionVertical',\n    }\n  ```\n\n  评论列表的动画。 [参考](https://github.com/joshwcomeau/react-flip-move/blob/master/documentation/enter_leave_animations.md)\n\n- **enableHotKey** `Boolean` \n  \n  Default: `true`.\n\n  启用快捷键(cmd|ctrl + enter) 提交评论.\n\n\n## 实例方法\n\n- **render(String/HTMLElement)**\n\n  初始化渲染并挂载插件。\n\n## TypeScript\n\n已经包括了配置项和Gitalk类的类型定义，不包括React组件的类型定义。\n\n## 贡献\n\n1. [Fork 代码仓库](https://github.com/gitalk/gitalk/fork) 并从 master 创建你的分支\n2. 如果你添加的代码需要测试，请添加测试！\n3. 如果你修改了 API，请更新文档。\n4. 确保单元测试通过 (npm test).\n5. 确保代码风格一致 (npm run lint).\n6. 提交你的代码 (git commit) [提交信息格式参考](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#-git-commit-guidelines)\n\n## 类似项目\n\n- [gitment](https://github.com/imsun/gitment)\n- [vssue](https://vssue.js.org/zh)\n\n## 许可\n\nMIT\n\n[npm-version-image]: https://img.shields.io/npm/v/gitalk.svg?style=flat-square\n[npm-version-url]: https://www.npmjs.com/package/gitalk\n[cdnjs-version-image]: https://img.shields.io/cdnjs/v/gitalk.svg?style=flat-square\n[cdnjs-version-url]: https://cdnjs.com/libraries/gitalk\n[david-dm-image]: https://david-dm.org/gitalk/gitalk.svg?style=flat-square\n[david-dm-url]: https://david-dm.org/gitalk/gitalk\n[travis-image]: https://img.shields.io/travis/gitalk/gitalk/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/gitalk/gitalk\n[coveralls-image]: https://img.shields.io/coveralls/gitalk/gitalk/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/github/gitalk/gitalk\n[gzip-size]: https://img.badgesize.io/https://unpkg.com/gitalk/dist/gitalk.min.js?compression=gzip&style=flat-square\n[gzip-url]: https://unpkg.com/gitalk/dist/gitalk.min.js\n"
        },
        {
          "name": "readme-zh.md",
          "type": "blob",
          "size": 6.4111328125,
          "content": "\n# Gitalk\n\n[![NPM][npm-version-image]][npm-version-url] \n[![CDNJS][cdnjs-version-image]][cdnjs-version-url] \n[![jsdelivr](https://data.jsdelivr.com/v1/package/npm/gitalk/badge)](https://www.jsdelivr.com/package/npm/gitalk)\n[![david-dm][david-dm-image]][david-dm-url] \n[![travis][travis-image]][travis-url] \n[![coveralls][coveralls-image]][coveralls-url] \n[![gzip-size][gzip-size]][gzip-url]\n\nGitalk 是一個基於 GitHub Issue 和 Preact 開發的評論插件。\n\n## 特性\n\n- 使用 GitHub 登錄\n- 支持多語言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]\n- 支持個人或組織\n- 無干擾模式（設置 distractionFreeMode 為 true 開啟）\n- 快捷鍵提交評論 （cmd|ctrl + enter）\n\n[Readme](https://github.com/gitalk/gitalk/blob/master/readme.md)\n[在線示例](https://gitalk.github.io)\n\n## 安裝\n\n兩種方式\n\n- 直接引入\n\n```html\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n\n  <!-- or -->\n\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n  <script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n```\n\n- npm 安裝\n\n```sh\nnpm i --save gitalk\n```\n\n```js\nimport 'gitalk/dist/gitalk.css'\nimport Gitalk from 'gitalk'\n```\n\n## 使用\n\n添加壹個容器：\n\n```html\n<div id=\"gitalk-container\"></div>\n```\n\n用下面的 Javascript 代碼來生成 gitalk 插件：\n\n```js\nvar gitalk = new Gitalk({\n  clientID: 'GitHub Application Client ID',\n  clientSecret: 'GitHub Application Client Secret',\n  repo: 'GitHub repo',\n  owner: 'GitHub repo owner',\n  admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],\n  id: location.pathname,      // Ensure uniqueness and length less than 50\n  distractionFreeMode: false  // Facebook-like distraction free mode\n})\n\ngitalk.render('gitalk-container')\n```\n\n需要 **GitHub Application**，如果沒有 [點擊這裡申請](https://github.com/settings/applications/new)，`Authorization callback URL` 填寫當前使用插件頁面的域名。\n\n### 在React使用\n\n使用以下代碼引入Gitalk組件\n\n```jsx\nimport GitalkComponent from \"gitalk/dist/gitalk-component\";\n```\n\n按以下方式在React中使用Gitalk組件\n\n```jsx\n<GitalkComponent options={{\n  clientID: \"...\",\n  // ...\n  // 設置項\n}} />\n```\n\n## 設置\n\n- **clientID** `String`\n\n  **必須**. GitHub Application Client ID.\n\n- **clientSecret** `String`\n\n  **必須**. GitHub Application Client Secret.\n\n- **repo** `String`\n\n  **必須**. GitHub repository.\n\n- **owner** `String`\n\n  **必須**. GitHub repository 所有者，可以是個人或者組織。\n\n- **admin** `Array`\n\n  **必須**. GitHub repository 的所有者和合作者 (對這個 repository 有寫權限的用戶)。\n\n- **id** `String`\n\n  Default: `location.href`.\n\n  頁面的唯一標識。長度必須小於50。\n  \n  提示：可以使用正則從 `URL` 中提取其中一部分作為 `id`。例如：`location.href.match('/(?<=posts/)(.*)(?=/)/')[1]`\n\n- **number** `Number` \n  \n  Default: `-1`.\n\n  頁面的 issue ID，若未定義`number`屬性則會使用`id`進行定位。  \n\n- **labels** `Array`\n\n  Default: `['Gitalk']`.\n\n  GitHub issue 的標籤。\n\n- **title** `String`\n\n  Default: `document.title`.\n\n  GitHub issue 的標題。\n\n- **body** `String`\n\n  Default: `location.href + header.meta[description]`.\n\n  GitHub issue 的內容。\n\n- **language** `String`\n\n  Default: `navigator.language || navigator.userLanguage`.\n\n  設置語言，支持 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]。\n\n- **perPage** `Number`\n\n  Default: `10`.\n\n  每次加載的數據大小，最多 100。\n\n- **distractionFreeMode** `Boolean`\n\n  Default: false。\n\n  類似Facebook評論框的全屏遮罩效果.\n\n- **pagerDirection** `String`\n\n  Default: 'last'\n\n  評論排序方式， `last`為按評論創建時間倒敘，`first`為按創建時間正序。\n\n- **createIssueManually** `Boolean`\n\n  Default: `false`.\n\n  如果當前頁面沒有相應的 isssue 且登錄的用戶屬於 admin，則會自動創建 issue。如果設置為 `true`，則顯示一個初始化頁面，創建 issue 需要點擊 `init` 按鈕。\n\n- **proxy** `String`\n\n  Default: `https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token`.\n\n   GitHub oauth 請求到反向代理，為了支持 CORS。 [為什麼要這樣?](https://github.com/isaacs/github/issues/330)\n\n- **flipMoveOptions** `Object`\n\n  Default:\n  ```js\n    {\n      staggerDelayBy: 150,\n      appearAnimation: 'accordionVertical',\n      enterAnimation: 'accordionVertical',\n      leaveAnimation: 'accordionVertical',\n    }\n  ```\n\n  評論列表的動畫。 [參考](https://github.com/joshwcomeau/react-flip-move/blob/master/documentation/enter_leave_animations.md)\n\n- **enableHotKey** `Boolean`\n\n  Default: `true`.\n\n  啟用快捷鍵(cmd|ctrl + enter) 提交評論.\n\n\n## 實例方法\n\n- **render(String/HTMLElement)**\n\n  初始化渲染並掛載插件。\n\n## TypeScript\n\n已經包括了配置項和Gitalk類的類型定義，不包括React組件的類型定義。\n\n## 貢獻\n\n1. [Fork 代碼倉庫](https://github.com/gitalk/gitalk/fork) 並從 master 創建你的分支\n2. 如果你添加的代碼需要測試，請添加測試！\n3. 如果你修改了 API，請更新文檔。\n4. 確保單元測試通過 (npm test).\n5. 確保代碼風格一致 (npm run lint).\n6. 提交你的代碼 (git commit) [提交信息格式參考](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#-git-commit-guidelines)\n\n## 類似項目\n\n- [gitment](https://github.com/imsun/gitment)\n- [vssue](https://vssue.js.org/zh)\n\n## 許可\n\nMIT\n\n[npm-version-image]: https://img.shields.io/npm/v/gitalk.svg?style=flat-square\n[npm-version-url]: https://www.npmjs.com/package/gitalk\n[cdnjs-version-image]: https://img.shields.io/cdnjs/v/gitalk.svg?style=flat-square\n[cdnjs-version-url]: https://cdnjs.com/libraries/gitalk\n[david-dm-image]: https://david-dm.org/gitalk/gitalk.svg?style=flat-square\n[david-dm-url]: https://david-dm.org/gitalk/gitalk\n[travis-image]: https://img.shields.io/travis/gitalk/gitalk/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/gitalk/gitalk\n[coveralls-image]: https://img.shields.io/coveralls/gitalk/gitalk/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/github/gitalk/gitalk\n[gzip-size]: https://img.badgesize.io/https://unpkg.com/gitalk/dist/gitalk.min.js?compression=gzip&style=flat-square\n[gzip-url]: https://unpkg.com/gitalk/dist/gitalk.min.js\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 6.927734375,
          "content": "# Gitalk\n\n[![NPM][npm-version-image]][npm-version-url] \n[![CDNJS][cdnjs-version-image]][cdnjs-version-url] \n[![jsdelivr](https://data.jsdelivr.com/v1/package/npm/gitalk/badge)](https://www.jsdelivr.com/package/npm/gitalk)\n[![david-dm][david-dm-image]][david-dm-url] \n[![travis][travis-image]][travis-url] \n[![coveralls][coveralls-image]][coveralls-url] \n[![gzip-size][gzip-size]][gzip-url]\n\nGitalk is a modern comment component based on GitHub Issue and Preact.\n\n## Features\n\n- Authentication with github account\n- Serverless, all comments will be stored as github issues\n- Both personal and organization github projects can be used to store comments\n- Localization, support multiple languages [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]\n- Facebook-like distraction free mode (Can be enabled via the `distractionFreeMode` option)\n- Hotkey submit comment (cmd|ctrl + enter)\n\n[中文说明](https://github.com/gitalk/gitalk/blob/master/readme-cn.md)\n[Demo](https://gitalk.github.io)\n\n## Install\n\nTwo ways.\n\n- links\n\n```html\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n\n  <!-- or -->\n\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n  <script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n```\n\n- npm install\n\n```sh\nnpm i --save gitalk\n```\n\n```js\nimport 'gitalk/dist/gitalk.css'\nimport Gitalk from 'gitalk'\n```\n\n## Usage\nFirstly, you need choose a public github repository (existed or create a new one) for store comments,\n\nThen create A **GitHub Application** if you don't have one, [Click here to register](https://github.com/settings/applications/new) a new one. \n**Note:** You must specify the website domain url in the `Authorization callback URL` field.\n\nLastly, you can choose how to apply to the page as below:\n\n### Method One\nAdd a container to your page:\n\n```html\n<div id=\"gitalk-container\"></div>\n```\n\nThen use the Javascript code below to generate the gitalk plugin:\n\n```js\nconst gitalk = new Gitalk({\n  clientID: 'GitHub Application Client ID',\n  clientSecret: 'GitHub Application Client Secret',\n  repo: 'GitHub repo',      // The repository of store comments,\n  owner: 'GitHub repo owner',\n  admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],\n  id: location.pathname,      // Ensure uniqueness and length less than 50\n  distractionFreeMode: false  // Facebook-like distraction free mode\n})\n\ngitalk.render('gitalk-container')\n```\n\n### Method Two: Use in React\n\nImport the Gitalk with\n\n```jsx\nimport GitalkComponent from \"gitalk/dist/gitalk-component\";\n```\n\nAnd use the component like\n\n```jsx\n<GitalkComponent options={{\n  clientID: \"...\",\n  // ...\n  // options below\n}} />\n```\n\n## Options\n\n- **clientID** `String`\n\n  **Required**. GitHub Application Client ID.\n\n- **clientSecret** `String`\n\n  **Required**. GitHub Application Client Secret.\n\n- **repo** `String`\n\n  **Required**. GitHub repository.\n\n- **owner** `String`\n\n  **Required**. GitHub repository owner. Can be personal user or organization.\n\n- **admin** `Array`\n\n  **Required**. GitHub repository owner and collaborators. (Users who having write access to this repository)\n\n- **id** `String`\n\n  Default: `location.href`.\n\n  The unique id of the page. Length must less than 50.\n\n  Note: You can use regex to extract certain path of the URL as the id. E.g., `location.href.match('/(?<=posts/)(.*)(?=/)/')[1]`\n\n- **number** `Number`\n\n  Default: `-1`.\n\n  The issue ID of the page, if the `number` attribute is not defined, issue will be located using `id`.\n\n- **labels** `Array`\n\n  Default: `['Gitalk']`.\n\n  GitHub issue labels.\n\n- **title** `String`\n\n  Default: `document.title`.\n\n  GitHub issue title.\n\n- **body** `String`\n\n  Default: `location.href + header.meta[description]`.\n\n  GitHub issue body.\n\n- **language** `String`\n\n  Default: `navigator.language || navigator.userLanguage`.\n\n  Localization language key, support [`en`, `zh-CN`, `zh-TW`, `es-ES`, `fr`, `ru`, `de`, `pl`, `ko`, `fa`, `ja`].\n\n- **perPage** `Number`\n\n  Default: `10`.\n\n  Pagination size, with maximum 100.\n\n- **distractionFreeMode** `Boolean`\n\n  Default: false.\n\n  Facebook-like distraction free mode.\n\n- **pagerDirection** `String`\n\n  Default: 'last'\n\n  Comment sorting direction, available values are `last` and `first`.\n\n- **createIssueManually** `Boolean`\n\n  Default: `false`.\n\n  By default, Gitalk will create a corresponding github issue for your every single page automatically when the logined user is belong to the `admin` users. You can create it manually by setting this option to `true`.\n\n- **proxy** `String`\n\n  Default: `https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token`.\n\n  GitHub oauth request reverse proxy for CORS. [Why need this?](https://github.com/isaacs/github/issues/330)\n\n- **flipMoveOptions** `Object`\n\n  Default:\n  ```js\n    {\n      staggerDelayBy: 150,\n      appearAnimation: 'accordionVertical',\n      enterAnimation: 'accordionVertical',\n      leaveAnimation: 'accordionVertical',\n    }\n  ```\n\n  Comment list animation. [Reference](https://github.com/joshwcomeau/react-flip-move/blob/master/documentation/enter_leave_animations.md)\n\n- **enableHotKey** `Boolean`\n\n  Default: `true`.\n\n  Enable hot key (cmd|ctrl + enter) submit comment.\n\n\n## Instance Methods\n\n- **render(String/HTMLElement)**\n\n  Init render and mount plugin.\n\n## TypeScript\n\nTypeScript definitions for options and Gitalk class come with the package and should be automatically detected.\n\nDefinitions for React component usage are not included.\n\n## Contributing\n\n1. [Fork the repository](https://github.com/gitalk/gitalk/fork) and create your branch from master\n2. If you've added code that should be tested, add tests!\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes (npm test).\n5. Make sure your code lints (npm run lint).\n6. Commit your changes (git commit) [Commit Message Format Reference](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#-git-commit-guidelines)\n\n## Similar Projects\n\n- [gitment](https://github.com/imsun/gitment)\n- [vssue](https://vssue.js.org)\n\n## LICENSE\n\nMIT\n\n[npm-version-image]: https://img.shields.io/npm/v/gitalk.svg?style=flat-square\n[npm-version-url]: https://www.npmjs.com/package/gitalk\n[cdnjs-version-image]: https://img.shields.io/cdnjs/v/gitalk.svg?style=flat-square\n[cdnjs-version-url]: https://cdnjs.com/libraries/gitalk\n[david-dm-image]: https://david-dm.org/gitalk/gitalk.svg?style=flat-square\n[david-dm-url]: https://david-dm.org/gitalk/gitalk\n[travis-image]: https://img.shields.io/travis/gitalk/gitalk/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/gitalk/gitalk\n[coveralls-image]: https://img.shields.io/coveralls/gitalk/gitalk/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/github/gitalk/gitalk\n[gzip-size]: https://img.badgesize.io/https://unpkg.com/gitalk/dist/gitalk.min.js?compression=gzip&style=flat-square\n[gzip-url]: https://unpkg.com/gitalk/dist/gitalk.min.js\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "typings",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.comp.js",
          "type": "blob",
          "size": 0.416015625,
          "content": "// webpack config for export react component\n\nconst webpackConfig = Object.create(require('./webpack.config.js'))\n\nwebpackConfig.entry = './gitalk.jsx'\nwebpackConfig.output = Object.create(webpackConfig.output)\nwebpackConfig.output.filename = 'gitalk-component.js'\n\ndelete webpackConfig.resolve.alias\nwebpackConfig.externals = {\n  react: 'commonjs react',\n  'react-dom': 'commonjs react-dom'\n}\n\nmodule.exports = webpackConfig\n"
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 2.1181640625,
          "content": "const path = require('path')\nconst webpack = require('webpack')\nconst autoprefixer = require('autoprefixer')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nconst ENV = process.env.NODE_ENV || 'development'\nconst isDev = ENV !== 'production'\n\nconst cssLoader = [{\n  loader: 'css-loader'\n}, {\n  loader: 'postcss-loader',\n  options: {\n    sourceMap: true,\n    plugins: [\n      autoprefixer({\n        browsers: ['last 2 versions']\n      })\n    ]\n  }\n}]\n\nconst stylLoader = {\n  loader: 'stylus-loader'\n}\n\nconst plugins = [\n  new webpack.DefinePlugin({\n    VERSION: JSON.stringify(require('./package.json').version)\n  })\n]\n\nmodule.exports = {\n  context: path.resolve(__dirname, 'src'),\n  entry: './index.js',\n\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    publicPath: '/dist',\n    filename: 'gitalk.js',\n    libraryTarget: 'umd',\n    library: 'Gitalk'\n  },\n\n  resolve: {\n    extensions: ['.jsx', '.js', '.json'],\n    alias: {\n      'react': 'preact-compat',\n      'react-dom': 'preact-compat'\n    }\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        use: 'babel-loader'\n      },\n      {\n        test: /\\.css$/,\n        use: isDev ? ['style-loader'].concat(cssLoader) : ExtractTextPlugin.extract({\n          fallback: 'style-loader',\n          use: cssLoader\n        })\n      },\n      {\n        test: /\\.styl$/,\n        use: isDev ? ['style-loader'].concat(cssLoader, stylLoader) : ExtractTextPlugin.extract({\n          fallback: 'style-loader',\n          use: cssLoader.concat(stylLoader)\n        })\n      },\n      {\n        test: /\\.(svg|woff2?|ttf|eot|jpe?g|png|gif)(\\?.*)?$/i,\n        use: [{\n          loader: 'url-loader',\n          options: {\n            limit: 1024 * 10\n          }\n        }]\n      }\n    ]\n  },\n  plugins: isDev ? [...plugins, new webpack.NoEmitOnErrorsPlugin()] : [...plugins, new ExtractTextPlugin('gitalk.css')],\n\n  devtool: isDev ? 'cheap-module-source-map' : 'source-map',\n\n  devServer: {\n    port: process.env.PORT || 8010,\n    host: 'localhost',\n    // publicPath: '/dist',\n    contentBase: './dev',\n    // historyApiFallback: true,\n    // open: true\n  }\n}\n"
        },
        {
          "name": "webpack.config.min.js",
          "type": "blob",
          "size": 0.408203125,
          "content": "const webpack = require('webpack')\n\nconst webpackConfig = Object.create(require('./webpack.config.js'))\n\nwebpackConfig.output = Object.create(webpackConfig.output)\nwebpackConfig.output.filename = webpackConfig.output.filename.replace(/\\.js$/, '.min.js')\n\nwebpackConfig.plugins = webpackConfig.plugins.concat(\n  new webpack.optimize.UglifyJsPlugin({ minimize: true, sourceMap: true })\n)\n\nmodule.exports = webpackConfig\n"
        }
      ]
    }
  ]
}