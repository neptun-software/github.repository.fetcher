{
  "metadata": {
    "timestamp": 1736562878120,
    "page": 456,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nuejs/nue",
      "stars": 6217,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.15234375,
          "content": "root = true\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\ntab_width = 2\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.025390625,
          "content": "*.lockb binary diff=lockb\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.080078125,
          "content": ".DS_Store\nnode_modules\ndist\n.dist\n.env\n.idea\n.vscode\n_test\ncoverage\nperformance.js"
        },
        {
          "name": ".prettierrc.yaml",
          "type": "blob",
          "size": 0.3291015625,
          "content": "printWidth: 100\ntabWidth: 2\nuseTabs: false\nsemi: false\nsingleQuote: true\nquoteProps: 'as-needed'\ntrailingComma: 'es5'\nbracketSpacing: true\narrowParens: 'avoid'\nrequirePragma: false\ninsertPragma: false\nproseWrap: 'preserve'\nhtmlWhitespaceSensitivity: 'css'\nendOfLine: 'lf'\nembeddedLanguageFormatting: 'auto'\nsingleAttributePerLine: false\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.7900390625,
          "content": "\n# Contributing to Nue\n\nFirst and foremost: Thank you for helping with Nue! ❤️❤️\n\n\n### Guidelines\n\n1. **Most important** If you are adding a new feature, please discuss it first under [GitHub issues](https://github.com/nuejs/nue/issues). This way you'll avoid doing redundant work because not all features are automatically accepted. Nue JS strives for minimalism, which means that we have to say \"no\" to most things.\n\n2. Features that add lots of new code, complexity, or several new/heavy NPM packages are most likely rejected. Most definitely if the first guideline wasn't applied.\n\n3. Please create only one thing per pull request. Easier to validate and merge. And less potential for conflicts.\n\n4. Please add a test case for every bug fix.\n\n5. Please write JavaScript. No TypeScript here, because Nue aims to work as close to web standards as possible.\n\n\n### Formatting\nPlease try to use the original style in the codebase. Do not introduce new rules or patterns. The most notable rules are:\n\n1. No semicolons, because they are redundant\n\n2. Strings with single quotes\n\n3. Indent with two spaces\n\n4. Prefer `==` over `===`. Strict equality only when truly needed, which is rarely the case\n\nNue is not using Prettier or ESLint because they will increase the project size to 40MB. The `.prettierrc.yaml` file on the root directory does the job well enough.\n\n\n### Testing\n\n```sh\n# if using bun\nbun install\nbun install --no-save esbuild\nbun test\n\n# if using node\nnpm install\nnpm install --no-save jest jest-extended esbuild\nnpm test\n```\n\n\n### Linking\n\n```sh\n# if using bun\nbun install\ncd packages/nuekit\nbun link\ncd my/nue/project\nnue\nnue build --production\n\n# if using node\nnpm install\ncd packages/nuekit\nnpm link\ncd my/nue/project\nnpm install --save-dev esbuild\nnode $(which nue)\nnode $(which nue) build --production\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0634765625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2023-present, Tero Piirainen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.0244140625,
          "content": "packages/nuekit/README.md"
        },
        {
          "name": "bun.lockb",
          "type": "blob",
          "size": 11.796875,
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.4052734375,
          "content": "{\n  \"name\": \"nue\",\n  \"version\": \"0.0.0\",\n  \"license\": \"MIT\",\n  \"type\": \"module\",\n  \"private\": true,\n  \"workspaces\": [\n    \"packages/*\"\n  ],\n  \"engines\": {\n    \"bun\": \">=1\",\n    \"node\": \">=18\"\n  },\n  \"scripts\": {\n    \"test\": \"node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand\"\n  },\n  \"jest\": {\n    \"setupFilesAfterEnv\": [\n      \"jest-extended/all\",\n      \"<rootDir>/setup-jest.js\"\n    ]\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pnpm-workspace.yaml",
          "type": "blob",
          "size": 0.0263671875,
          "content": "packages:\n  - 'packages/*'\n"
        },
        {
          "name": "setup-jest.js",
          "type": "blob",
          "size": 0.0546875,
          "content": "import { jest } from \"@jest/globals\"\nglobal.jest = jest\n"
        }
      ]
    }
  ]
}