{
  "metadata": {
    "timestamp": 1736563016741,
    "page": 644,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spolu/breach_core",
      "stars": 5392,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0498046875,
          "content": "node_modules\n.*.swp\n*~\nnpm-debug.log\nout\n.DS_Store\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Stanislas Polu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.2744140625,
          "content": "EXO_BROWSER=\"__DUMMY__\"\nARCH=\"x64\"\n\nclean:\n\trm -rf node_modules\n\trm -rf out\n\ninstall: clean\n\tnpm install\n\ndist_linux: install\n\tnode dist/linux.js $(ARCH) $(EXO_BROWSER)\ndist_darwin: install\n\tnode dist/darwin.js $(ARCH) $(EXO_BROWSER)\n\n\n.PHONY: clean install dist_linux dist_darwin\n"
        },
        {
          "name": "NOTES",
          "type": "blob",
          "size": 3.001953125,
          "content": "/******************************************************************************/\n/* TODO */\n/******************************************************************************/\n\n>>>v0.x<<<\n\nTODO(spolu): Session Management (when not logged)\n\nTODO(spolu): Onboarding (Networked, no module yet)\nTODO(spolu): InMemory Sessions (default modules?)\nTODO(spolu): Two phase initialization for modules (`init`, then `start`)\nTODO(spolu): Session Management API (to expose to modules)\n\n\nDONE: \n\n>>v0.3<<\n- GiG.fs 0.3x integration / local table only (alpha)\n- Basic Web Interface for Modules (Install, Remove)\n- Splash Screen (loading state + link to module manager)\n- `core_ui` for all things UI-related of `core` (serving pages)\n- Integrate GiG.fs w/ `module_manager`\n- Build Session Management on top of GiG.fs\n\n>>v0.2<<\n- Expose core API and Implement Stack as a module\n- FMA \n + Core RPC-CALL Broadcast\n + Name-based communication for modules\n + Module management API\n + Module retrieval (local)\n + Add running status to module list\n + Command Line interface for module Management (Dev)\n- Remove factory -> common\n- ExoBrowser: Run nodeJS only\n- ExoBrowser: Merge 1700 and fix DevTools\n- Rename repo into `breach_core`\n\n>>>v0.1.4<<\n- Connect to free port (multiple instances)\n- Find in Page feedback Impl\n\n>>v0.1<<\n- Sessions\n- Basic local CookieStore\n- :exit\n- NProgress\n- Keyboard shortcuts MacOSX\n- More conventional Keyboard shortcuts\n- Design (flatter + lighter)\n- Box get emptied while pages are loading (#3)\n\n\n/******************************************************************************/\n/* MODULES WORK */\n/******************************************************************************/\n\nTODO(spolu): Authentication\nTODO(spolu): Distributed Storage\nTODO(spolu): Inspector ?\nTODO(spolu): Flash ?\n\n/******************************************************************************/\n/* FMA MODULE DEFINITION */\n/******************************************************************************/\n\nA module is identified by its location. Module may be:\n- local: `local:~/src/breach/mod_stack`\n- retrieved from github: `github:breach/mod_test#v0.5.2`\n\nThe branch part of github modules is optional and is automatically replaced\nby latest version or #master if not specified.\n\nbreach --module install github:breach/mod_test#v0.2.1\nbreach --module remove github:breach/mod_test\nbreach --module list\nbreach --module info github.com/breach/mod_test\n\nThen modules are referenced by names. Two modules with the same name cannot\nbe installed at the same time.\n\n\n/******************************************************************************/\n/* NOTES(spolu) */\n/******************************************************************************/\n\n- Hooks in startup process?\n- Hooks in cookie storage? \n- Module should advertise their interfaces?\n- How does module collaborate to provide an interface?\n- Existing examples?\n\n- advertise `id`\n- rpc_call + reconciliation\n\nCORE_MODULE\n> maintains a list of frames for a given browser window\n> has a notion of identity\n> exposes distributed storage\n\n"
        },
        {
          "name": "ReadMe.md",
          "type": "blob",
          "size": 1.0439453125,
          "content": "### Breach: A Browser for the HTML5 Era\n\n**Modular** \nEverything in the browser is a module, a web-app running in its own process.\nConstruct your own browsing experience by selecting the right modules for you.\n\n**Hackable**\nWant vertical tabs? Write some JS & CSS! Customised autocomplete engine? JS!\nEvery behavior is programmatic and exposed through APIs.\n\n**Open source**\nThe entire technology stack is open source.\nModify existing modules and you can create your own to extend the behavior of Breach.\n\n\n### Getting Involved\n\n- Homepage: [http://breach.cc](http://breach.cc)\n- Mailing list: [breach-dev@googlegroups.com](https://groups.google.com/d/forum/breach-dev)\n- IRC Channel: #breach on Freenode\n\nYou can find a list of Modules available or under developement here: [List of Modules](https://github.com/breach/breach_core/wiki/List-of-modules)\n\n### Runing Breach on Linux\n\nSee instructions here: [Running Breach on Linux](https://github.com/breach/breach_core/wiki/Running-Breach-on-Linux)\n\n### Support the fun\n\n\nDogeCoin: `D5yw7dP4XqE2vEDVwwRxyH6VtuTdCHEwGP`\n"
        },
        {
          "name": "breach.icns",
          "type": "blob",
          "size": 129.6708984375,
          "content": null
        },
        {
          "name": "breach.png",
          "type": "blob",
          "size": 77.16796875,
          "content": null
        },
        {
          "name": "controls",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 3.2177734375,
          "content": "/*\n * Breach: index.js\n *\n * Copyright (c) 2014, Stanislas Polu. All rights reserved.\n *\n * @author: spolu\n *\n * @log:\n * - 2014-05-14 spolu   [GiG.fs 0.2.x] local only\n * - 2014-04-17 spolu   Removed monolithic session\n * - 2014-04-15 spolu   Try outs with session_manager\n * - 2014-01-17 spolu   Removed express, exposed module\n * - 2013-11-14 spolu   FMA refactoring\n * - 2013-09-06 spolu   Exp1 process.exit on session kill\n * - 2013-08-11 spolu   Creation\n */\n\"use strict\"\n\nvar common = require('./lib/common.js');\nvar async = require('async');\n\n/******************************************************************************/\n/* HELPERS */\n/******************************************************************************/\n\n/* This is a hack. But process.nextTick can sleep if there is no event on the */\n/* content API part so we replace it here by a setTimeout that will be called */\n/* TODO(spolu): find a better solution */\nprocess.nextTick = setTimeout\n\n/******************************************************************************/\n/* MAIN RUN MODES */\n/******************************************************************************/\n// ### breach_start\n//\n// Starts breach and its modules for the local session\nvar breach_start = function() {\n  common.log.out('[index] Breach v' + require('./package.json').version + \n                 ' Starting...');\n\n  var args = process.argv;\n  args.forEach(function(a) {\n    if(a === '--debug') {\n      common.DEBUG = true;\n    }\n    if(a === '--msg-log') {\n      common.MSG_LOG = true;\n    }\n    if(a === '--msg-dump') {\n      common.MSG_DUMP = true;\n    }\n  });\n\n  /* TODO(spolu): Useful for debugging on OSX. Maybe integrate it in */\n  /* module_manager.                                                 */\n  /*\n  var fs = require('fs');\n  var util = require('util');\n  var stdout = fs.createWriteStream('/Users/spolu/breach.stdout', { flags: 'a' })\n  var fun = console.log;\n  console.log = function(d) {\n    stdout.write(util.format(d) + '\\n');\n    fun(d);\n  };\n  */\n\n  common.auto_updater = require('./lib/auto_updater.js').auto_updater({});\n  common.auto_updater.init();\n\n  common.session_manager = require('./lib/session_manager.js').session_manager({\n    off_the_record: false\n  });\n  async.waterfall([\n    common.session_manager.init,\n    common.session_manager.list_sessions,\n    function(sessions, cb_) {\n      if(Object.keys(sessions).length === 0) {\n        common.session_manager.new_session(false, 'Alpha Session', cb_);\n      }\n      else {\n        return cb_(null, Object.keys(sessions)[0]);\n      }\n    },\n    common.session_manager.open_session\n  ], function(err) {\n    if(err) {\n      common.fatal(err);\n    }\n    common.log.out('[index] Startup Complete');\n  });\n};\n\n\n\n/******************************************************************************/\n/* INITIALIZATION */\n/******************************************************************************/\nbreach_start();\n\n\n// SAFETY NET (kills the process and the spawns)\nprocess.on('uncaughtException', function (err) {\n  common.fatal(err);\n});\n\nvar sig_handler = function() {\n  common.exit(0);\n};\nprocess.on('SIGHUP', sig_handler);\nprocess.on('SIGINT', sig_handler);\nprocess.on('SIGQUIT', sig_handler);\nprocess.on('SIGABRT', sig_handler);\nprocess.on('SIGTERM', sig_handler);\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "module",
          "type": "tree",
          "content": null
        },
        {
          "name": "openpgp.store",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.056640625,
          "content": "{\n  \"name\": \"breach_core\",\n  \"description\": \"Breach Core Module\",\n  \"author\": {\n    \"name\": \"Stanislas Polu\",\n    \"email\": \"polu.stanislas@gmail.com\",\n    \"url\": \"http://github.com/spolu\" \n  },\n  \"version\": \"0.3.22-alpha.6\",\n  \"dependencies\": {\n    \"exo_browser\": \"0.6.x\",\n    \"gig.fs\": \"0.2.x\",\n    \"async\": \"0.9.x\",\n    \"mkdirp\": \"0.3.x\",\n    \"octonode\": \"0.6.x\",\n    \"fs-extra\": \"0.8.x\",\n    \"npm\": \"1.4.x\",\n    \"semver\": \"2.2.x\",\n    \"tar\": \"0.1.x\",\n    \"request\": \"2.36.x\",\n    \"express\": \"4.0.x\",\n    \"body-parser\": \"1.0.x\",\n    \"method-override\": \"1.0.x\",\n    \"socket.io\": \"1.0.x\",\n    \"openpgp\": \"0.6.x\",\n    \"tail\": \"0.3.x\"\n  },\n  \"repository\" : { \n    \"type\" :  \"git\",\n    \"url\" :   \"http://github.com/breach/breach_core.git\" \n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/breach/breach_core/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"https://github.com/breach/breach_core/raw/master/LICENSE\"\n    }\n  ],\n  \"main\": \"./index.js\",\n  \"engines\": {\n    \"exo_browser\": \"0.6.x\"\n  },\n  \"auto_update\": {\n    \"url\": \"https://data.breach.cc/update\"\n  }\n}\n"
        }
      ]
    }
  ]
}