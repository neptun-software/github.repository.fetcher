{
  "metadata": {
    "timestamp": 1736562925224,
    "page": 518,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "koenbok/Framer",
      "stars": 5853,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9990234375,
          "content": ".DS_Store\nnode_modules\ntest/init.js\ntest/lib/framer.js\n*.swp\nbuild/template\nbuild\nlib\n.build\n.deploy\n*.pyc\nnpm-debug.log\ntest/phantomjs/tests.js\ntest/phantomjs/tests.js.map\nframer/**/*.js\nframer/**/*.js.map\ntest/tests/**/*.js\ntest/tests/**/*.js.map\n\n# Discard changes in Studio.framer\nextras/Studio.framer/app.coffee\nextras/Studio.framer/framer/config.json\n\n# Discard version changes\nframer/Version.coffee\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Docker\n_cache\n_steps\n_builds\n_projects\n\n# Ed\n.idea\nIcon\n/extras/resources.framerjs.com/static/DeviceResources/.*\n/yarn.lock\n/extras/Studio.framer/framer/.bookmark\n/extras/Studio.framer/framer/design.vekter\nyarn-error.log\n/extras/Studio.framer/framer/version\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Koen Bok\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.4365234375,
          "content": "# Configuration\n\nBIN = $(CURDIR)/node_modules/.bin\n\nDEFAULT_TARGET = extras/Studio.framer\nTARGET ?= $(DEFAULT_TARGET)\nTARGET_EXPANDED = $(shell echo $(TARGET)) # For ~ in paths, gulp needs this\n\n.PHONY: watch test debug release\n\ndefault: lazy_bootstrap lazy_build test\n\n# Utilities\n\nbootstrap:\n\tnpm install\n\nlazy_bootstrap: ; @test -d ./node_modules || make bootstrap\n\nunbootstrap:\n\trm -Rf node_modules\n\n\n\nclean:\n\trm -rf build\n\trm -Rf node_modules\n\n\n# Building and testing\n\nwatch: lazy_bootstrap\n\t-cp $(DEFAULT_TARGET)/index.html $(TARGET)\n\tTARGET='$(strip $(TARGET_EXPANDED))' $(BIN)/gulp watch\n\nbuild: lazy_bootstrap\n\t$(BIN)/gulp webpack:debug\n\nlazy_build: ; @test -f ./build/framer.debug.js || make build\n\ntest: lazy_build\n\t$(BIN)/gulp test\n\nlint: lazy_build\n\t$(BIN)/gulp lint\n\n\nrelease: lazy_bootstrap\n\t$(BIN)/gulp webpack:release\n\n\n# Framer Studio\n\nstudio:\n\topen -a \"Framer Beta\" ${TARGET}\n\tmake watch\n\nperf: debug\n\topen -a \"Framer Beta\" extras/Perf.framer\n\n\n# Distribution\n\ndist: release\n\tscripts/dist.sh\n\nsite-build: dist\n\tscripts/site-build.sh\n\nsite-upload: bootstrap site-build\n\t$(BIN)/coffee scripts/site.coffee upload\n\n# Resources\n\nresources:\n\tscripts/resources-optimize.sh\n\n\n# Code coverage\n\ncoverage: bootstrap\n\t$(BIN)/gulp version\n\tmkdir -p ./build/build\n\t$(BIN)/coffeeCoverage -t istanbul -c __coverage__ ./build/Version.coffee ./build/build/Version.js\n\t$(BIN)/coffeeCoverage -t istanbul -c __coverage__ ./framer ./build/instrumented\n\t$(BIN)/gulp coverage\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0947265625,
          "content": "codecov:\n  branch: master\n  strict_yaml_branch: master\n\ncoverage:\n  precision: 1\n  range: 40..95\n"
        },
        {
          "name": "coffeelint.json",
          "type": "blob",
          "size": 2.375,
          "content": "{\n  \"arrow_spacing\": {\n    \"level\": \"warn\"\n  },\n  \"braces_spacing\": {\n    \"level\": \"warn\",\n    \"spaces\": 0,\n    \"empty_object_spaces\": 0\n  },\n  \"camel_case_classes\": {\n    \"level\": \"error\"\n  },\n  \"coffeescript_error\": {\n    \"level\": \"error\"\n  },\n  \"colon_assignment_spacing\": {\n    \"level\": \"warn\",\n    \"spacing\": {\n      \"left\": 0,\n      \"right\": 1\n    }\n  },\n  \"cyclomatic_complexity\": {\n    \"level\": \"ignore\",\n    \"value\": 10\n  },\n  \"duplicate_key\": {\n    \"level\": \"error\"\n  },\n  \"empty_constructor_needs_parens\": {\n    \"level\": \"ignore\"\n  },\n  \"ensure_comprehensions\": {\n    \"level\": \"warn\"\n  },\n  \"eol_last\": {\n    \"level\": \"warn\"\n  },\n  \"indentation\": {\n    \"value\": 1,\n    \"level\": \"error\"\n  },\n  \"line_endings\": {\n    \"level\": \"error\",\n    \"value\": \"unix\"\n  },\n  \"max_line_length\": {\n    \"value\": 80,\n    \"level\": \"ignore\",\n    \"limitComments\": true\n  },\n  \"missing_fat_arrows\": {\n    \"level\": \"ignore\",\n    \"is_strict\": false\n  },\n  \"newlines_after_classes\": {\n    \"value\": 2,\n    \"level\": \"warn\"\n  },\n  \"no_backticks\": {\n    \"level\": \"error\"\n  },\n  \"no_debugger\": {\n    \"level\": \"warn\",\n    \"console\": false\n  },\n  \"no_empty_functions\": {\n    \"level\": \"ignore\"\n  },\n  \"no_empty_param_list\": {\n    \"level\": \"error\"\n  },\n  \"no_implicit_braces\": {\n    \"level\": \"ignore\",\n    \"strict\": true\n  },\n  \"no_implicit_parens\": {\n    \"level\": \"ignore\",\n    \"strict\": true\n  },\n  \"no_interpolation_in_single_quotes\": {\n    \"level\": \"ignore\"\n  },\n  \"no_nested_string_interpolation\": {\n    \"level\": \"warn\"\n  },\n  \"no_plusplus\": {\n    \"level\": \"ignore\"\n  },\n  \"no_private_function_fat_arrows\": {\n    \"level\": \"warn\"\n  },\n  \"no_stand_alone_at\": {\n    \"level\": \"ignore\"\n  },\n  \"no_tabs\": {\n    \"level\": \"ignore\"\n  },\n  \"no_this\": {\n    \"level\": \"ignore\"\n  },\n  \"no_throwing_strings\": {\n    \"level\": \"error\"\n  },\n  \"no_trailing_semicolons\": {\n    \"level\": \"error\"\n  },\n  \"no_trailing_whitespace\": {\n    \"level\": \"error\",\n    \"allowed_in_comments\": false,\n    \"allowed_in_empty_lines\": true\n  },\n  \"no_unnecessary_double_quotes\": {\n    \"level\": \"ignore\"\n  },\n  \"no_unnecessary_fat_arrows\": {\n    \"level\": \"error\"\n  },\n  \"non_empty_constructor_needs_parens\": {\n    \"level\": \"ignore\"\n  },\n  \"prefer_english_operator\": {\n    \"level\": \"warn\",\n    \"doubleNotLevel\": \"warn\"\n  },\n  \"space_operators\": {\n    \"level\": \"ignore\"\n  },\n  \"spacing_after_comma\": {\n    \"level\": \"error\"\n  },\n  \"transform_messes_up_line_numbers\": {\n    \"level\": \"warn\"\n  }\n}\n"
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "framer",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.coffee",
          "type": "blob",
          "size": 4.880859375,
          "content": "_ = require(\"lodash\")\nasync = require(\"async\")\ngulp = require(\"gulp\")\nphantomjs = require(\"gulp-mocha-phantomjs\")\nistanbulReport = require('gulp-istanbul-report')\nwebpack = require(\"webpack\")\nrename = require(\"gulp-rename\")\ntemplate = require(\"gulp-template\")\ngutil = require(\"gulp-util\")\n{exec} = require(\"child_process\")\ncoffeelint = require('gulp-coffeelint')\n\nDEBUG_TARGET = process.env.TARGET ? \"extras/Studio.framer\"\n\n################################################################################\n# Base webpack config\n\nWEBPACK =\n\tentry: \"./framer/Framer.coffee\"\n\tmodule:\n\t\tloaders: [{test: /\\.coffee$/, loader: \"coffee-loader\"}]\n\tresolve:\n\t\textensions: [\"\", \".web.coffee\", \".web.js\", \".coffee\", \".js\"]\n\tdevtool: \"sourcemap\"\n\tcache: true\n\tquiet: true\n\n################################################################################\n# Gulp tasks\n\ngulp.task \"watch\", [\"test\"], ->\n\tgulp.watch([\"./*.coffee\", \"framer/**\", \"test/tests/**\", \"!Version.coffee\"], [\"test\"])\n\ngulp.task \"test\", [\"webpack:tests\", \"lint\"], ->\n\treturn gulp\n\t\t.src(\"test/phantomjs/index.html\")\n\t\t.pipe(phantomjs({\n\t\t\treporter: \"dot\"\n\t\t\tphantomjs:\n\t\t\t\tviewportSize: {width: 400, height: 300}\n\t\t\t\tuseColors: true\n\t\t\t\tloadImages: false\n\t\t}))\n\ngulp.task 'lint', ->\n\tgulp.src([\"./framer/**/*.coffee\", \"!./framer/Version.coffee.template\", \"./test/tests/**\", \"./test/tests.coffee\", \"./gulpfile.coffee\", \"scripts/site.coffee\"])\n\t\t.pipe(coffeelint())\n\t\t.pipe(coffeelint.reporter())\n\ngulp.task \"version\", (callback) ->\n\tversionInfo (info) ->\n\n\t\t# If we are on the wercker platform, we need to get the branch\n\t\t# name from the env variables and remove the dirty from version.\n\t\tif process.env.WERCKER_GIT_BRANCH\n\t\t\tinfo.branch = process.env.WERCKER_GIT_BRANCH\n\t\t\tinfo.hash = info.hash.replace(\"-dirty\", \"\")\n\n\t\tlog \"version\", \"#{info.branch}/#{info.hash} @#{info.build}\"\n\n\t\ttask = gulp.src(\"framer/Version.coffee.template\")\n\t\t\t.pipe(template(info))\n\t\t\t.pipe(rename({\n\t\t\t\tbasename: \"Version\",\n\t\t\t\textname: \".coffee\"\n\t\t\t}))\n\t\t\t.pipe(gulp.dest(\"build\"))\n\n\t\tcallback(null, task)\n\n################################################################################\n# Webpack tasks\n\ngulp.task \"webpack:debug\", [\"version\"], (callback) ->\n\n\tconfig = _.extend WEBPACK,\n\t\tdebug: true\n\t\toutput:\n\t\t\tfilename: \"build/framer.debug.js\"\n\t\t\tsourceMapFilename: \"[file].map?hash=[hash]\"\n\n\twebpackDev \"webpack:debug\", config, ->\n\t\tcommand \"cp build/framer.debug.* '#{DEBUG_TARGET}/framer/'\"\n\t\tcallback()\n\ngulp.task \"webpack:release\", [\"version\"], (callback) ->\n\n\tconfig = _.extend WEBPACK,\n\t\toutput:\n\t\t\tfilename: \"build/framer.js\"\n\t\t\tsourceMapFilename: \"[file].map\"\n\t\t\tpathinfo: false\n\t\tplugins: [\n\t\t\tnew webpack.optimize.DedupePlugin(),\n\t\t\tnew webpack.optimize.UglifyJsPlugin({\n\t\t\t\tmangle: false\n\t\t\t\tcompress: {warnings: true}\n\t\t\t})\n\t\t]\n\n\twebpackDev(\"webpack:release\", config, callback)\n\ngulp.task \"webpack:tests\", [\"webpack:debug\"], (callback) ->\n\n\tconfig = _.extend WEBPACK,\n\t\tentry: \"./test/tests.coffee\"\n\t\toutput:\n\t\t\tfilename: \"test/phantomjs/tests.js\"\n\tdebug: true\n\n\twebpackDev(\"webpack:tests\", config, callback)\n\n\ngulp.task \"webpack:coverage\", [\"version\"], (callback) ->\n\n\tconfig = _.extend WEBPACK,\n\t\tentry: \"./build/instrumented/Framer.js\"\n\t\toutput:\n\t\t\tfilename: \"build/framer.debug.js\"\n\t\tdebug: true\n\n\twebpackDev(\"webpack:coverage\", config, callback)\n\ngulp.task \"coverage\", [\"version\", \"webpack:coverage\", \"webpack:tests\"], ->\n\tcoverageFile = \"build/coverage/coverage.json\"\n\treturn gulp\n\t\t.src(\"test/phantomjs/index.html\")\n\t\t.pipe(phantomjs(\n\t\t\treporter: \"dot\"\n\t\t\tphantomjs:\n\t\t\t\thooks: \"mocha-phantomjs-istanbul\"\n\t\t\t\tcoverageFile: coverageFile\n\t\t\t\tviewportSize: {width: 400, height: 300}\n\t\t\t\tuseColors: true\n\t\t\t\tloadImages: false\n\t\t))\n\t\t.on \"finish\", ->\n\t\t\tgulp.src(coverageFile)\n\t\t\t\t.pipe(istanbulReport(\n\t\t\t\t\treporterOpts:\n\t\t\t\t\t\tdir: './build/coverage'\n\t\t\t\t\treporters: [\n\t\t\t\t\t\t'text',\n\t\t\t\t\t\t{'name': 'lcov', file: 'lcov.info'},\n\t\t\t\t\t\t{'name': 'json', file: 'coverage-final.json'},\n\t\t\t\t\t\t{'name': 'clover', file: 'clover.xml'},\n\t\t\t\t\t]\n\t\t\t\t))\n\t\t\tconsole.log \"done\"\n\n\n\n################################################################################\n# Utilities\n\nlog = (task, args...) ->\n\tgutil.log \"[#{gutil.colors.yellow(task)}]\", args...\n\ncommand = (cmd, cb) ->\n\texec cmd, {cwd: __dirname}, (err, stdout, stderr) ->\n\t\tcb?(null, stdout.split(\"\\n\").join(\"\"))\n\nwebpackDev = (name, config, callback) ->\n\twebpackDev._instances ?= {}\n\twebpackDev._instances[name] ?= webpack(_.clone(config))\n\twebpackBuilder = webpackDev._instances[name]\n\twebpackBuilder.run (err, stats) ->\n\t\tthrow new gutil.PluginError(\"#{name}\", err) if (err)\n\t\tlog name, gutil.colors.green(\"All ok\")\n\t\tcallback()\n\nversionInfo = (callback) ->\n\tasync.series [\n\t\t(cb) -> command(\"git rev-parse --abbrev-ref HEAD\", cb) # branch\n\t\t(cb) -> command(\"git describe --always --dirty\", cb) # hash\n\t\t(cb) -> command(\"git rev-list --count HEAD\", cb) # build\n\t], (err, results) ->\n\t\tcallback\n\t\t\tbranch: results[0]\n\t\t\thash: results[1]\n\t\t\tbuild: results[2]\n\t\t\tdate: Math.floor(Date.now() / 1000)\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.4052734375,
          "content": "{\n  \"name\": \"framerjs\",\n  \"version\": \"3.0.0\",\n  \"description\": \"Modern Prototyping Framework\",\n  \"main\": \"lib/Framer.js\",\n  \"directories\": {\n    \"doc\": \"docs\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"make test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/koenbok/Framer.git\"\n  },\n  \"devDependencies\": {\n    \"async\": \"^2.0.1\",\n    \"chai\": \"^4.1.2\",\n    \"codecov\": \"^2.2.0\",\n    \"coffee-coverage\": \"^2.0.1\",\n    \"coffee-loader\": \"^0.7.2\",\n    \"coffee-script\": \"^1.9.1\",\n    \"es6-promise\": \"^4.1.1\",\n    \"eventemitter3\": \"^1.1.1\",\n    \"gulp\": \"^3.8.11\",\n    \"gulp-coffeelint\": \"^0.6.0\",\n    \"gulp-istanbul-report\": \"0.0.1\",\n    \"gulp-mocha-phantomjs\": \"^0.12.1\",\n    \"gulp-plumber\": \"^1.0.1\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-template\": \"^4.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"husl\": \"6.0.1\",\n    \"knox\": \"^0.9.2\",\n    \"lodash\": \"^4.14.1\",\n    \"mime\": \"^1.3.4\",\n    \"mocha\": \"^3.0.0\",\n    \"mocha-phantomjs\": \"^4.1.0\",\n    \"mocha-phantomjs-core\": \"^2.1.2\",\n    \"mocha-phantomjs-istanbul\": \"0.0.2\",\n    \"mustache\": \"^2.0.0\",\n    \"simulate\": \"^0.0.5\",\n    \"webpack\": \"^1.7.3\",\n    \"webpack-dev-server\": \"^1.14.1\",\n    \"webpack-stream\": \"^3.0.1\"\n  },\n  \"keywords\": [\n    \"prototyping\"\n  ],\n  \"author\": \"Koen Bok\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/koenbok/Framer/issues\"\n  },\n  \"homepage\": \"http://framer.com\",\n  \"dependencies\": {\n    \"webfontloader\": \"^1.6.28\"\n  }\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 3.83203125,
          "content": "# Framer Library for React\n\nWe are in the process of open sourcing our new [Framer Library for React](https://framer.com/api). Come back soon.\n\n---\n\n# Framer Library\n\nFramer Library is an open source JavaScript framework for high fidelity prototyping. Use it to design animations and interactions without any limitations. Make use of real spring physics or animate with 3D effects, anything is possible.\n<br /><br />\n\n![Example](https://raw.githubusercontent.com/krijnrijshouwer/FramerWiki/master/example.gif)\n<br /><br />\n\nThere are 2 ways to use Framer Library. To get most out of Library download Framer; a design tool for the Mac. The other way you can leverage Framer Library is with generator; an app that imports your layers from Sketch, Photoshop and Figma. The following features are included with each option.\n<br /><br />\n\n![Table](https://raw.githubusercontent.com/krijnrijshouwer/FramerWiki/master/comparison-table@2x.png)\n<br /><br />\n\n## Framer\n\nFramer is a design tool for the Mac which allows you to design without limitations. It is based on Framer Library and offers the familiarity of visual editing with the flexibility of code. A seamless workflow, further complemented by device previewing, version control and easy sharing.\n\n[Find out more](http://framer.com/?utm_source=GitHub%2C%20framerjs%2C%20readme&utm_medium=Github)\n<br /><br />\n\n![Framer for Mac](https://cloud.githubusercontent.com/assets/22095598/26638904/a7ddf000-4623-11e7-8ad3-a0fb8f194e89.png)\n<br /><br />\n\n## Set up Framer Library\n\n- [Download](https://builds.framerjs.com/version/latest/Framer.zip?utm_source=GitHub%2C%20framerjs%2C%20readme&utm_medium=Github) (Framer.js & Framer Generator)\n- Open **index.html** in a WebKit browser and you'll see an image animate on click\n- Edit the **app.js** to add interactions and animations (see example code below)\n\n![Project Folder](https://raw.githubusercontent.com/krijnrijshouwer/FramerWiki/master/project.png)\n<br /><br />\n\n## Get Started\n \n<img src=\"https://raw.githubusercontent.com/krijnrijshouwer/FramerWiki/master/icon-guide@2x.png\" width=\"49px\">\n\n[Learn with our beginner guides](https://framer.com/getstarted/guide/?utm_source=GitHub%2C%20framerjs%2C%20readme&utm_medium=Github) that give you a basic overview of Framer Library and a few simple pointers on how to set yourself up for success.\n<br /><br />\n\n<img src=\"https://raw.githubusercontent.com/krijnrijshouwer/FramerWiki/master/icon-community@2x.png\" width=\"64px\">\n\n[Become part of the community](https://framer.com/community/groups/?utm_source=GitHub%2C%20framerjs%2C%20readme&utm_medium=Github) and join the Facebook Group or engage with members in your city. Over 19.000 designers, engineers and creators are waiting to meet you.\n\n<br /><br />\n\n## Contribute\n\n###### Building\n\n- Download or fork the repository\n- Make sure you have the latest version of node and npm installed\n- Run `make dist` to build the latest version\n- Run `make` to rebuild the latest version on changes\n\n###### Testing\n\n- Run `make test` to run the unit tests in phantomjs\n- Run `make` to retest the latest version on changes\n\n###### Reporting Issues\n\n- Please use the issue tracker\n- Try to include an example and clearly describe expected behaviour\n<br /><br />\n\n## Others\n\n- [Twitter](http://twitter.com/framer) — Follow us for updates & the latest work\n- [The Community](https://www.facebook.com/groups/framerjs/) — Join over 20.000 designers for help and advice\n- [The Newsletter](https://framer.com/newsletter/?utm_source=GitHub%2C%20framerjs%2C%20readme&utm_medium=Github) — Get the best work & latest news in your inbox\n- [Featured Examples](https://framer.com/examples/featured/?utm_source=GitHub%2C%20framerjs%2C%20readme&utm_medium=Github) — The best Framer work from the community\n- [Latest builds](http://builds.framerjs.com/?utm_source=GitHub%2C%20framerjs%2C%20readme&utm_medium=Github) — The latest builds of Framer.js\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "wercker.yml",
          "type": "blob",
          "size": 0.7685546875,
          "content": "box: framer/wercker\n\nbuild:\n    steps:\n        - script:\n            name: load git revisions\n            code: |\n                git remote set-url origin https://github.com/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY.git\n                cd $WERCKER_SOURCE_DIR\n                git fetch --unshallow || true\n        - npm-install\n        - npm-test\n        - script:\n            name: generate code coverage\n            code: |\n                make coverage\n                `npm bin`/codecov -t f39fdc5b-687d-4986-bcb7-d6a478b2709d\n        - script:\n            name: release build\n            code: |\n                make release\n\ndeploy:\n    steps:\n        - script:\n            name: builds.framerjs.com\n            code: |\n                npm rebuild\n                make site-upload\n"
        }
      ]
    }
  ]
}