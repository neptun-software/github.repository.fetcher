{
  "metadata": {
    "timestamp": 1736563485144,
    "page": 73,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aosabook/500lines",
      "stars": 29373,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6025390625,
          "content": "*.aux\n*.pyc\n*.swp\n*1\n*~\n.DS_Store\n.c9\n.coverage\n.python-version\n_site\nhtmlcov\noutput\ntex/*.tex.1\ntex/500L.bib\ntex/500L.bbl\ntex/500L.blg\ntex/500L.log\ntex/500L.out\ntex/500L.toc\ntex/500L.tex\ntex/blockcode*\ntex/ci*\ntex/cluster*\ntex/contingent*\ntex/colophon.tex\ntex/crawler*\ntex/dagoba*\ntex/data-store*\ntex/event-web-framework*\ntex/flow-shop*\ntex/frontmatter*\ntex/functionalDB*\ntex/image-filters*\ntex/intro.tex\ntex/interpreter*\ntex/modeller*\ntex/objmodel*\ntex/ocr*\ntex/pedometer*\ntex/sampler*\ntex/same-origin-policy*\ntex/spreadsheet*\ntex/static-analysis*\ntex/template-engine*\ntex/web-server*\nhtml/content\nhtml/cache\n*.pid\n"
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 1.623046875,
          "content": "# Building 500 Lines or Less\n\n500 Lines or Less has been successfully built on several Linux systems, as well\nas OSX 10.10+. Almost all of the software mentioned in the below instructions\nshould be available via your favorite package manager, with the possible\nexception of LaTeX on OS X (common practice seems to be installing\n[MacTex](https://tug.org/mactex/) via the pkg installer.)\n\n## Base instructions:\n- Install [Python 2.7](https://www.python.org/downloads/). \n- You may want to use [virtualenv](https://virtualenv.pypa.io/en/stable/) to\n  isolate your Python build environment for 500Lines.\n  [pyenv](https://github.com/yyuu/pyenv) is a simple way to manage this:\n   - `cd 500lines`\n   - `pyenv virtualenv 500l`\n   - `pyenv local 500l`\n- `pip install -r requirements.txt`. If you haven't used virtualenv, you may\n  need to `sudo pip install -r requirements.txt`.\n- Install [pandoc](http://pandoc.org/) and\n  [pandoc-citeproc](https://github.com/jgm/pandoc-citeproc). These should both\n  be available via your favorite package manager.\n\n## Building the PDF:\n- Install a LaTeX distribution. \n- `python build.py --pdf`\n- Output will be in `output/500L.pdf`\n\n## Building the HTML:\n- `python build.py --html`\n- `cd html`\n- `make serve`\n\n## Building the ePub:\nWarning: the ePub version of 500Lines is an \"unsupported product\"; the print\nand code formatting is poor, raw LaTeX is displayed in several places, the code\nis difficult to read, and images have not been optimized for the format.\nHowever, if you really want 500Lines in your favorite reader, this is one way\nto do it.\n\n- `python build.py --epub --pandoc-epub`\n- Output will be in `output/500L.epub`\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 2.580078125,
          "content": "Licenses\n========\n\nWritten Material\n----------------\n\nAll written material in this project is made available under the\nCreative Commons Attribution license. You are free:\n\n* to **Share**---to copy, distribute and transmit the work\n* to **Remix**---to adapt the work\n\nUnder the following conditions:\n\n* **Attribution**---You must attribute the work using\n  \"Copyright (c) [chapter author's name]\"\n  (but not in any way that suggests that we endorse you or your use of the work).\n  Where practical, you must also include a hyperlink to http://aosabook.org.\n\nWith the understanding that:\n\n* **Waiver**---Any of the above conditions can be waived if you get permission from the copyright holder.\n* **Other Rights**---In no way are any of the following rights affected by the license:\n    * Your fair dealing or fair use rights;\n    * The author's moral rights;\n    * Rights other persons may have either in the work itself or in\n      how the work is used, such as publicity or privacy rights.\n* **Notice**---For any reuse or distribution, you must make clear to others the license terms of this work.\n  The best way to do this is with a link to\n  [http://creativecommons.org/licenses/by/3.0/](http://creativecommons.org/licenses/by/3.0/).\n\nFor the full legal text of this license, please see\n[http://creativecommons.org/licenses/by/3.0/legalcode](http://creativecommons.org/licenses/by/3.0/legalcode).\n\nSoftware\n--------\n\nThe example programs and other software included in this repository are made available under the\n[OSI](http://opensource.org)-approved\n[MIT license](http://opensource.org/licenses/mit-license.html).\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.5849609375,
          "content": "*500 Lines or Less*\n===================\n\n> \"What I cannot create, I do not understand.\"\n>\n> -- Richard Feynman\n\nThis is the source for the book *500 Lines or Less*, the fourth in the\n[Architecture of Open Source Applications](http://aosabook.org) series.  As\nwith other books in the series, all written material will be covered by the\nCreative Commons - Attribution license, and all code by the MIT License: please\nsee the [license description](LICENSE.md) for details.  In addition, all\nroyalties from paid-for versions will all go to Amnesty International.\n\nThe production of this book has been made possible by the financial support of\n[PagerDuty](http://www.pagerduty.com/company/work-with-us/).\n\n<p align=\"center\">\n    <img src=\"https://github.com/aosabook/500lines/raw/master/resource/pagerduty_logo.png\" alt=\"PagerDuty Logo\" />\n</p>\n\n\nMission\n-------\n\nEvery architect studies family homes, apartments, schools, and other common\ntypes of buildings during her training.  Equally, every programmer ought to\nknow how a compiler turns text into instructions, how a spreadsheet updates\ncells, and how a database efficiently persists data.\n\nPrevious books in the AOSA series have done this by describing the high-level\narchitecture of several mature open-source projects. While the lessons learned\nfrom those stories are valuable, they are sometimes difficult to absorb for\nprogrammers who have not yet had to build anything at that scale.\n\n\"500 Lines or Less\" focuses on the design decisions and tradeoffs that\nexperienced programmers make when they are writing code: \n\n*   Why divide the application into these particular modules with these\n    particular interfaces?\n*   Why use inheritance here and composition there?\n*   How do we predict where our program might need to be extended, and how can\n    we make that easy for other programmers?\n\nEach chapter consists of a walkthrough of a program that solves a canonical\nproblem in software engineering in at most 500 source lines of code. We hope\nthat the material in this book will help readers understand the varied\napproaches that engineers take when solving problems in different domains, and\nwill serve as a basis for projects that extend or modify the contributions\nhere.\n\nContributors\n------------\n\n<table>\n  <tr>\n    <th>Name</th>\n    <th>Affiliation</th>\n    <th>Project</th>\n    <th>Online</th>\n    <th>GitHub</th>\n  </tr>\n  <tr>\n    <td>Mike DiBernardo</td>\n    <td>Wave</td>\n    <td>editorial</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/mdibernardo\">@mdibernardo</a></li>\n            <li><a href=\"http://mikedebo.ca\">mikedebo.ca</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/MichaelDiBernardo\">MichaelDiBernardo</a></td>\n  </tr>\n   <tr>\n    <td>Amy Brown</td>\n    <td>indie</td>\n    <td>editorial</td>\n    <td><ul><li><a href=\"http://www.amyrbrown.ca/\">amyrbrown.ca</a></li>\n        <li><a href=\"http://www.twitter.com/amyrbrown\">@amyrbrown</a></li></ul></td>\n    <td><a href=\"https://github.com/amyrbrown\">amyrbrown</a></td>\n  </tr>\n  <tr>\n    <td>Allison Kaptur</td>\n    <td>Dropbox</td>\n    <td>byterun</td>\n    <td><ul><li><a href=\"https://twitter.com/akaptur\">@akaptur</a></li></ul></td>\n    <td><a href=\"https://github.com/akaptur\">akaptur</a></td>\n  </tr>\n  <tr>\n    <td>Audrey Tang</td>\n    <td>g0v.tw, Socialtext, Apple</td>\n    <td>spreadsheet</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/audreyt\">@audreyt</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/audreyt\">audreyt</a></td>\n  </tr>\n  <tr>\n    <td>Brandon Rhodes</td>\n    <td>Dropbox</td>\n    <td>contingent</td>\n    <td><ul><li><a href=\"https://twitter.com/brandon_rhodes\">@brandon_rhodes</a></li></ul></td>\n    <td><a href=\"https://github.com/brandon-rhodes\">brandon-rhodes</a></td>\n  </tr>\n  <tr>\n    <td>Carl Friedrich Bolz</td>\n    <td>King's College London</td>\n    <td>object model</td>\n    <td>\n        <ul>\n            <li><a href=\"https://cfbolz.de\">cfbolz.de</a></li>\n            <li><a href=\"https://twitter.com/cfbolz\">@cfbolz</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/cfbolz\">cfbolz</a></td>\n  </tr>\n  <tr>\n    <td>Cate Huston</td>\n    <td>&nbsp;</td>\n    <td>Image Filter app</td>\n    <td>\n        <ul>\n            <li><a href=\"http://www.accidentallyincode.com/\">www.accidentallyincode.com/</a></li>\n            <li><a href=\"https://twitter.com/catehstn\">@catehstn</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/catehstn\">catehstn</a></td>\n  </tr>\n  <tr>\n    <td>Christian Muise</td>\n    <td>University of Melbourne</td>\n    <td>flow-shop</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/cjmuise\">@cjmuise</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/haz\">haz</a></td>\n  </tr>\n  <tr>\n    <td>Daniel Jackson</td>\n    <td>&nbsp;</td>\n    <td>same-origin-policy</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n  <tr>\n    <td>Daniel Rocco</td>\n    <td>BrightLink Technology</td>\n    <td>contingent</td>\n    <td><ul><li><a href=\"https://twitter.com/drocco007\">@drocco007</a></li></ul></td>\n    <td><a href=\"https://github.com/drocco007\">drocco007</a></td>\n  </tr>\n  <tr>\n    <td>Dann Toliver</td>\n    <td>Bento Box</td>\n    <td>dagoba</td>\n    <td>\n        <ul>\n            <li><a href=\"http://danntoliver.com\">danntoliver.com</a></li>\n            <li><a href=\"https://twitter.com/dann\">@dann</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/dxnn\">dxnn</a></td>\n  </tr>\n  <tr>\n    <td>Dessy Daskalov</td>\n    <td>Nudge Rewards</td>\n    <td>Pedometer</td>\n    <td>\n        <ul>\n            <li><a href=\"http://www.dessydaskalov.com/\">www.dessydaskalov.com</a></li>\n            <li><a href=\"https://twitter.com/dess_e\">@dess_e</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/dessy\">dessy</a></td>\n  </tr>\n  <tr>\n    <td>Dethe Elza</td>\n    <td>&nbsp;</td>\n    <td>blockcode</td>\n    <td>&nbsp;</td>\n    <td><a href=\"https://github.com/dethe\">dethe</a></td>\n  </tr>\n  <tr>\n    <td>Dustin Mitchell</td>\n    <td>Mozilla</td>\n    <td>cluster</td>\n    <td>&nbsp;</td>\n    <td><a href=\"https://github.com/djmitche\">djmitche</a></td>\n  </tr>\n  <tr>\n    <td>Erick Dransch</td>\n    <td>&nbsp;</td>\n    <td>Modeller</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/ErickDransch\">@ErickDransch</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/EkkiD\">EkkiD</a></td>\n  </tr>\n  <tr>\n    <td>Eunsuk Kang</td>\n    <td>&nbsp;</td>\n    <td>same-origin-policy</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n  <tr>\n    <td>Greg Wilson</td>\n    <td>&nbsp;</td>\n    <td>web-server</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/gvwilson\">@gvwilson</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/gvwilson\">gvwilson</a></td>\n  </tr>\n  <tr>\n    <td>Guido van Rossum</td>\n    <td>Dropbox</td>\n    <td>crawler</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/gvanrossum\">@gvanrossum</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/gvanrossum\">gvanrossum</a></td>\n  </tr>\n  <tr>\n    <td>A. Jesse Jiryu Davis</td>\n    <td>MongoDB</td>\n    <td>crawler</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/jessejiryudavis\">@jessejiryudavis</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/ajdavis\">ajdavis</a></td>\n  </tr>\n  <tr>\n    <td>Jessica Hamrick</td>\n    <td>University of California, Berkeley</td>\n    <td>sampler</td>\n    <td>\n        <ul>\n            <li><a href=\"http://www.jesshamrick.com\">www.jesshamrick.com</a></li>\n            <li><a href=\"https://twitter.com/jhamrick\">@jhamrick</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/jhamrick\">jhamrick</a></td>\n  </tr>\n  <tr>\n    <td>Leah Hanson</td>\n    <td>Google</td>\n    <td>static analysis</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/astrieanna\">@astrieanna</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/astrieanna\">astrieanna</a></td>\n  </tr>\n  <tr>\n    <td>Leo Zovic</td>\n    <td>&nbsp;</td>\n    <td>event-web-framework</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n  <tr>\n    <td>Malini Das</td>\n    <td>Twitch</td>\n    <td>ci</td>\n    <td>\n        <ul>\n            <li><a href=\"http://malinidas.com\">malinidas.com</a></li>\n            <li><a href=\"https://twitter.com/malinidas\">@malinidas</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/malini\">malini</a></td>\n  </tr>\n  <tr>\n    <td>Marina Samuel</td>\n    <td>Mozilla</td>\n    <td>ocr</td>\n    <td>\n        <ul>\n            <li><a href=\"http://marinasamuel.com\">www.marinasamuel.com</a></li>\n            <li><a href=\"https://twitter.com/emtwos\">@emtwos</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/emtwo\">emtwo</a></td>\n  </tr>\n  <tr>\n    <td>Ned Batchelder</td>\n    <td>edX</td>\n    <td>templating engine</td>\n    <td>\n        <ul>\n            <li><a href=\"http://nedbatchelder.com\">nedbatchelder.com</a></li>\n            <li><a href=\"https://twitter.com/nedbat\">@nedbat</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/nedbat\">nedbat</a></td>\n  </tr>\n  <tr>\n    <td>Santiago Perez De Rosso</td>\n    <td>&nbsp;</td>\n    <td>same-origin-policy</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n  <tr>\n    <td>Taavi Burns</td>\n    <td>Previously at Points, now at PagerDuty</td>\n    <td>data-store</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/jaaaarel\">@jaaaarel</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/taavi\">taavi</a></td>\n  </tr>\n  <tr>\n    <td>Yoav Rubin</td>\n    <td>Microsoft</td>\n    <td>In-memory functional database</td>\n    <td>\n        <ul>\n            <li><a href=\"https://twitter.com/yoavrubin\">@yoavrubin</a></li>\n        </ul>\n    </td>\n    <td><a href=\"https://github.com/yoavrubin\">yoavrubin</a></td>\n  </tr>\n</table>\n\n\nTechnical Reviewers\n-------------------\n\n<table>\n  <tr>\n    <td>Amber Yust</td>\n    <td>Andrew Gwozdziewycz</td>\n    <td>Andrew Kuchling</td>\n  </tr>\n  <tr>\n    <td>Andrew Svetlov</td>\n    <td>Andy Shen</td>\n    <td>Anton Beloglazov</td>\n  </tr>\n  <tr>\n    <td>Ben Trofatter</td>\n    <td>Borys Pierov</td>\n    <td>Carise Fernandez</td>\n  </tr>\n  <tr>\n    <td>Charles Stanhope</td>\n    <td>Chris Atlee</td>\n    <td>Chris Seaton</td>\n  </tr>\n  <tr>\n    <td>Cyryl Płotnicki-Chudyk</td>\n    <td>Dan Langer</td>\n    <td>Dan Shapiro</td>\n  </tr>\n  <tr>\n    <td>David Pokorny</td>\n    <td>Eric Bouwers</td>\n    <td>Frederic De Groef</td>\n  </tr>\n  <tr>\n    <td>Graham Lee</td>\n    <td>Gregory Eric Sanderson</td>\n    <td>James O'Beirne</td>\n  </tr>\n  <tr>\n    <td>Jan de Baat</td>\n    <td>Jana Beck</td>\n    <td>Jessica McKellar</td>\n  </tr>\n  <tr>\n    <td>Jo Van Eyck</td>\n    <td>Joel Crocker</td>\n    <td>Johan Thelin</td>\n  </tr>\n  <tr>\n    <td>Johannes Fürmann</td>\n    <td>John Morrissey</td>\n    <td>Joseph Kaptur</td>\n  </tr>\n  <tr>\n    <td>Josh Crompton</td>\n    <td>Joshua T. Corbin</td>\n    <td>Kevin Huang</td>\n  </tr>\n  <tr>\n    <td>Maggie Zhou</td>\n    <td>Marc Towler</td>\n    <td>Marcin Milewski</td>\n  </tr>\n  <tr>\n    <td>Marco Lancini</td>\n    <td>Mark Reid</td>\n    <td>Matthias Bussonnier</td>\n  </tr>\n  <tr>\n    <td>Max Mautner</td>\n    <td>Meggin Kearney</td>\n    <td>Mike Aquino</td>\n  </tr>\n  <tr>\n    <td>Natalie Black</td>\n    <td>Nick Presta</td>\n    <td>Nikhil Almeida</td>\n  </tr>\n  <tr>\n    <td>Nolan Prescott</td>\n    <td>Paul Martin</td>\n    <td>Piotr Banaszkiewicz</td>\n  </tr>\n  <tr>\n    <td>Preston Holmes</td>\n    <td>Pulkit Sethi</td>\n    <td>Rail Aliiev</td>\n  </tr>\n  <tr>\n    <td>Ronen Narkis</td>\n    <td>Rose Ames</td>\n    <td>Sina Jahan</td>\n  </tr>\n  <tr>\n    <td>Stefan Turalski</td>\n    <td>William Lachance</td>\n  </tr>\n</table>\n"
        },
        {
          "name": "_build",
          "type": "tree",
          "content": null
        },
        {
          "name": "blockcode",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.py",
          "type": "blob",
          "size": 9.0224609375,
          "content": "#!/usr/bin/env python\n\nimport envoy\nimport glob\nimport os\n\n\ndef main(chapters=[], epub=False, pdf=False, html=False, mobi=False, pandoc_epub=False):\n    if not os.path.isdir('output'):\n        os.mkdir('output')\n    else:\n        output_files = glob.glob('output/*')\n        for f in output_files:\n            run('rm {}'.format(f))\n\n    chapter_dirs = [\n        'blockcode',\n        'ci',\n        'cluster',\n        'contingent',\n        'crawler',\n        'dagoba',\n        'data-store',\n        'event-web-framework',\n        'flow-shop',\n        'functionalDB',\n        'image-filters',\n        'interpreter',\n        'modeller',\n        'objmodel',\n        'ocr',\n        'pedometer',\n        'same-origin-policy',\n        'sampler',\n        'spreadsheet',\n        'static-analysis',\n        'template-engine',\n        'web-server',\n    ]\n    if len(chapters) > 0:\n        chapter_dirs = [\n            chapter_dir\n            for chapter_dir in\n            chapter_dirs\n            if chapter_dir in chapters\n        ]\n\n    chapter_markdowns = [\n        './' + chapter_dir + '/' + chapter_dir + '.markdown'\n        for chapter_dir in\n        chapter_dirs\n    ]\n\n    chapter_markdowns_exist = [\n        envoy.run('test -f ' + chapter_markdown).status_code\n        for chapter_markdown in\n        chapter_markdowns\n    ]\n\n    process_chapters = [\n        chapter_markdown\n        for chapter_markdown, process in\n        zip(chapter_markdowns, chapter_markdowns_exist)\n        if process == 0\n    ]\n\n    chapter_names = [\n        getbasename(chapter)\n        for chapter in\n        chapter_dirs\n    ]\n\n    image_paths = [\n        './blockcode/blockcode-images',\n        './ci/ci-images',\n        './cluster/cluster-images',\n        './contingent/contingent-images',\n        './crawler/crawler-images',\n        './data-store/data-store-images',\n        './flow-shop/flow-shop-images',\n        './functionalDB/functionalDB-images',\n        './image-filters/image-filters-images',\n        './interpreter/interpreter-images',\n        './modeller/modeller-images',\n        './objmodel/objmodel-images',\n        './ocr/ocr-images',\n        './pedometer/pedometer-images',\n        './same-origin-policy/same-origin-policy-images',\n        './sampler/sampler-images',\n        './spreadsheet/spreadsheet-images',\n        './web-server/web-server-images',\n        ]\n\n    run('cp -r minutiae/pdf/ tex')\n\n    with open('tex/500L.tex', 'w') as out:\n        with open('tex/500L.template.tex') as template:\n            lines = template.readlines()\n            for line in lines:\n                if 'chapterchapterchapter' in line:\n                    out.write(\n                        '\\n'.join(\n                            '\\include{%s}\\n' % (chapter_name)\n                            for chapter_name in chapter_names\n                            )\n                        )\n                else:\n                    out.write(line)\n\n    if pdf:\n        for imgpath in image_paths:\n            run('cp -a {imgpath} tex/'.format(imgpath=imgpath))\n        for chapter_markdown in process_chapters:\n            pandoc_cmd(chapter_markdown)\n        build_pdf()\n\n    if epub:\n        for imgpath in image_paths:\n            run('cp -a {imgpath} epub/'.format(imgpath=imgpath))\n        run('cp minutiae/html/introduction.md epub/introduction.markdown')\n        build_epub(process_chapters, pandoc_epub)\n\n    if mobi and not epub:\n        print 'Cannot build .mobi; depends on .epub.'\n        print 'Use --epub --mobi to build .mobi file.'\n    elif mobi:\n        build_mobi()\n\n    if html:\n        for imgpath in image_paths:\n            run('cp -a {imgpath} html/content/pages/'.format(imgpath=imgpath))\n        run('cp minutiae/html/introduction.md html/content/pages/.')\n        build_html(process_chapters)\n        for imgpath in image_paths:\n            run('cp -a {imgpath} html/output/pages/'.format(imgpath=imgpath))\n\ndef build_pdf():\n    os.chdir('tex')\n    run('pdflatex -interaction nonstopmode 500L')\n    os.chdir('..')\n    run('mv tex/500L.pdf output/')\n\n\ndef build_epub(chapter_markdowns, pandoc_epub):\n    basenames = [\n        os.path.splitext(\n            os.path.split(chapter_markdown)[1]\n        )[0] + '.markdown'\n        for chapter_markdown in chapter_markdowns\n    ]\n    temp = 'python _build/preprocessor.py --chapter {chapnum} --output=epub/{basename}.markdown.1 --latex {md}'\n    for i, markdown in enumerate(chapter_markdowns):\n        basename = os.path.splitext(os.path.split(markdown)[1])[0]\n        run(temp.format(md=markdown, basename=basename, chapnum=i+1))\n    os.chdir('epub')\n    temp = '../_build/increaseheaders.sh {basename}.markdown.1 {basename}.markdown {chapnum}'\n    for i, markdown in enumerate(chapter_markdowns):\n        basename = os.path.splitext(os.path.split(markdown)[1])[0]\n        run(temp.format(md=markdown, basename=basename, chapnum=i+1))\n    pandoc_path = 'pandoc'\n    cmd = '{pandoc} --chapters -S -f markdown+mmd_title_block --highlight-style=kate -o 500L.epub epubtitle.txt introduction.markdown {markdowns}'\n    if pandoc_epub:\n        run(cmd.format(pandoc=pandoc_path, markdowns=' '.join(basenames)))\n        print cmd.format(pandoc=pandoc_path, markdowns=' '.join(basenames))\n#    import subprocess as sp\n#    output = ' '.join(open('image-list.txt').read().splitlines())\n#    print 'zip 500L.epub META-INF mimetype nav.xhtml toc.ncx stylesheet.css content.opf ' + output\n#    sp.check_output(\n#        'zip 500L.epub META-INF mimetype nav.xhtml toc.ncx stylesheet.css content.opf ' + output,\n#        shell=True)\n#    if os.path.isdir('tmp-epub-contents'):\n#        run('rm -r tmp-epub-contents')\n#    os.mkdir('tmp-epub-contents')\n#    sp.check_output(\n#        'unzip 500L.epub -d tmp-epub-contents/',\n#        shell=True,\n#    )\n#    sp.check_output(\n#        'rsync -a tmp-epub-contents/* ./',\n#        shell=True\n#    )\n#    run('rm -r tmp-epub-contents')\n    run('cp 500L.epub ../output/500L.epub')\n    os.chdir('..')\n\n\ndef build_mobi():\n    run('ebook-convert output/500L.epub output/500L.mobi')\n\n\ndef build_html(chapter_markdowns):\n    run('mkdir -p html/content/pages')\n    temp = 'python _build/preprocessor.py --chapter {chap} --html-refs --output={md}.1 --latex {md}'\n    temp2 = 'pandoc --csl=minutiae/pdf/ieee.csl --mathjax -t html -f markdown+citations -o html/content/pages/{basename}.md {md}.1'\n    temp3 = './_build/fix_html_title.sh html/content/pages/{basename}.md'\n    for i, markdown in enumerate(chapter_markdowns):\n        basename = os.path.splitext(os.path.split(markdown)[1])[0]\n        run(temp.format(chap=i+1, md=markdown, basename=basename))\n        run(temp2.format(md=markdown, basename=basename))\n        run(temp3.format(md=markdown, basename=basename))\n    os.chdir('html')\n    run('make html')\n    os.chdir('..')\n\n\ndef getbasename(chapter_markdown):\n    import os\n    basename = os.path.splitext(\n        os.path.split(chapter_markdown)[1]\n    )[0]\n    return basename\n\n\ndef _pandoc_cmd(chapter_markdown):\n    pandoc_path = 'pandoc'\n    # tex/md because that's where the preprocessed markdowns end up\n    temp = '{pandoc} -V chaptertoken={chaptertoken} -t latex --chapters -S -f markdown+mmd_title_block+tex_math_dollars --template=tex/chaptertemplate.tex --no-highlight -o tex/{basename}.tex.1 tex/{md}'\n    basename = getbasename(chapter_markdown)\n    result = temp.format(pandoc=pandoc_path, basename=basename, md=chapter_markdown, chaptertoken='s:' + basename)\n    return result\n\n\ndef preprocessor_command(chapter_markdown):\n    temp = 'python _build/preprocessor.py --output=tex/{basename}.markdown --markdown {md}'\n    basename = getbasename(chapter_markdown)\n    result = temp.format(basename=basename, md=chapter_markdown)\n    print result\n    return (result, basename)\n\n\ndef postprocessor_command(basename):\n    temp = 'python _build/postprocessor.py --output=tex/{basename}.tex tex/{basename}.tex.1'\n    return temp.format(basename=basename)\n\n\ndef pandoc_cmd(chapter_markdown):\n    cmd, basename = preprocessor_command(chapter_markdown)\n    result = envoy.run(cmd)\n    new_chapter_markdown = basename + '.markdown'\n    if result.status_code != 0:\n        print result.std_err\n    else:\n        print result.std_out\n    result = envoy.run(_pandoc_cmd(new_chapter_markdown))\n    if result.status_code != 0:\n        print result.std_err\n    else:\n        print result.std_out\n    result2 = envoy.run(postprocessor_command(basename))\n    return result2\n\n\ndef run(cmd):\n    print cmd\n    result = envoy.run(cmd)\n    print result.std_out\n    print result.std_err\n    return result\n\n\nif __name__ == '__main__':\n    import argparse\n    parser = argparse.ArgumentParser(description=__doc__)\n    parser.add_argument('chapters', nargs='*')\n    parser.add_argument('--epub', action='store_true', default=False)\n    parser.add_argument('--mobi', action='store_true', default=False)\n    parser.add_argument('--pdf', action='store_true', default=False)\n    parser.add_argument('--html', action='store_true', default=False)\n    parser.add_argument('--pandoc-epub', action='store_true', default=False)\n    args = parser.parse_args()\n    main(chapters=args.chapters, epub=args.epub, pdf=args.pdf, html=args.html, mobi=args.mobi, pandoc_epub=args.pandoc_epub)\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "contingent",
          "type": "tree",
          "content": null
        },
        {
          "name": "crawler",
          "type": "tree",
          "content": null
        },
        {
          "name": "dagoba",
          "type": "tree",
          "content": null
        },
        {
          "name": "data-store",
          "type": "tree",
          "content": null
        },
        {
          "name": "epub",
          "type": "tree",
          "content": null
        },
        {
          "name": "event-web-framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow-shop",
          "type": "tree",
          "content": null
        },
        {
          "name": "functionalDB",
          "type": "tree",
          "content": null
        },
        {
          "name": "html",
          "type": "tree",
          "content": null
        },
        {
          "name": "image-filters",
          "type": "tree",
          "content": null
        },
        {
          "name": "incomplete",
          "type": "tree",
          "content": null
        },
        {
          "name": "interpreter",
          "type": "tree",
          "content": null
        },
        {
          "name": "minutiae",
          "type": "tree",
          "content": null
        },
        {
          "name": "modeller",
          "type": "tree",
          "content": null
        },
        {
          "name": "objmodel",
          "type": "tree",
          "content": null
        },
        {
          "name": "ocr",
          "type": "tree",
          "content": null
        },
        {
          "name": "pedometer",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0322265625,
          "content": "pelican\ntypogrify\nenvoy\nmarkdown\n"
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "same-origin-policy",
          "type": "tree",
          "content": null
        },
        {
          "name": "sampler",
          "type": "tree",
          "content": null
        },
        {
          "name": "spreadsheet",
          "type": "tree",
          "content": null
        },
        {
          "name": "static-analysis",
          "type": "tree",
          "content": null
        },
        {
          "name": "template-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "tex",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}