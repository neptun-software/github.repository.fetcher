{
  "metadata": {
    "timestamp": 1736563503529,
    "page": 98,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ajaxorg/ace",
      "stars": 26813,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.3671875,
          "content": "lib/ace/mode/css/*\nlib/ace/mode/coffee/*\nlib/ace/mode/html/*\nlib/ace/mode/javascript/*\nlib/ace/mode/json/*\nlib/ace/mode/lua/*\nlib/ace/mode/php/*\nlib/ace/mode/xml/*\nlib/ace/mode/xquery/*\nlib/ace/mode/xquery.js\nlib/ace/mode/yaml/*\nsrc/lib/default_english_messages.js\n**/test/asyncjs/*\n**/es5-shim.js\n**/vim*.js\nexperiments/\ntool/\ndoc/\nbuild/\ndemo/\napi/\n**/* *\n**/node_modules\n0*"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 6.47265625,
          "content": "{\n    \"parserOptions\": {\n        \"ecmaVersion\": 2015\n    },\n    \"env\": {\n        \"es6\": true\n    },\n    \"globals\": {\n        define: true,\n        require: true,\n        exports: true,\n        module: true,\n        __dirname: true,\n        __filename: true,\n        process: true,\n        global: true,\n        importScripts: true,\n        document: true,\n        window: true,\n        location: true,\n        navigator: true,\n        console: true,\n        Worker: true,\n        postMessage: true,\n        setTimeout: true,\n        clearTimeout: true,\n        setInterval: true,\n        clearInterval: true,\n        Blob: true,\n        cvox: true,\n        alert: true,\n        prompt: true,\n        XMLHttpRequest: true,\n        localStorage: true,\n        KeyboardEvent: true,\n        CustomEvent: true\n    },\n    \"rules\": {\n        curly: 0,\n        eqeqeq: 0,\n        //comma-dangle: 2,\n        no-dupe-args: 2,\n        no-dupe-keys: 2,\n        no-duplicate-case: 2,\n        no-empty-character-class: 2,\n        no-empty: 0,\n        no-ex-assign: 2,\n        no-extra-parens: 0,\n        no-func-assign: 2,\n        no-inner-declarations: 2,\n        no-invalid-regexp: 2,\n        no-irregular-whitespace: 2,\n        no-negated-in-lhs: 2,\n        no-obj-calls: 2,\n        no-sparse-arrays: 2,\n        no-unexpected-multiline: 2,\n        use-isnan: 2,\n        valid-typeof: 2,\n\n        accessor-pairs: 2,\n        complexity: 0,\n        dot-location: [2, \"property\"],\n        no-caller: 2,\n        no-case-declarations: 2,\n        no-empty-pattern: 2,\n        no-extra-bind: 2,\n        // no-useless-escape: 2, unfortunately this rule is broken\n\n        no-implied-eval: 2,\n        no-lone-blocks: 2,\n        no-native-reassign: 2,\n        no-new-func: 2,\n        no-new-wrappers: 2,\n        no-octal-escape: 2,\n        no-octal: 2,\n\n        no-return-assign: 0,\n        no-script-url: 2,\n        no-self-compare: 2,\n        no-sequences: 2,\n        no-useless-call: 2,\n        yoda: 2,\n\n        no-undef: 2,\n        no-redeclare: 0,\n        no-unused-vars: [1, {\"args\": \"none\", \"vars\": \"all\"}],\n\n        no-debugger: 2,\n\n        //////////////////////////////////////////////////////////////////\n        //\n        // no-unreachable: 2,\n        // no-proto: 2,\n        // no-regex-spaces: 2,\n        // no-extend-native: 2,\n        // no-useless-concat: 2,\n        // no-eval: 2,\n        // dot-notation: 2,\n        no-alert: 2,\n        no-extra-semi: 2, // doesn't handle ;(function() {})() pattern\n        // radix: 2,\n        // no-invalid-this: 2,\n        // no-param-reassign: 2,\n        // wrap-iife: 2,\n        // no-throw-literal: 2,\n        // no-multi-spaces: 2,\n        // no-new: 2,\n        // no-else-return: 2,\n        // no-unused-expressions: 2,\n        // no-use-before-define: [2, { \"functions\": false, \"classes\": false, \"variables\": false }],\n\n        // array-bracket-spacing: 2, // enforce spacing inside array brackets (fixable)\n        // block-spacing: 2, // disallow or enforce spaces inside of single line blocks (fixable)\n        // brace-style: 2, // enforce one true brace style\n        // camelcase: 2, // require camel case names\n        // comma-spacing: 2, // enforce spacing before and after comma (fixable)\n        // comma-style: 2, // enforce one true comma style\n        computed-property-spacing: 2, // require or disallow padding inside computed properties (fixable)\n        // consistent-this: 2, // enforce consistent naming when capturing the current execution context\n        linebreak-style: 2, // disallow mixed 'LF' and 'CRLF' as linebreaks\n        // indent: [\"error\", 4, { \"outerIIFEBody\": 0 }], // specify tab or space width for your code (fixable)\n        // key-spacing: 2, // enforce spacing between keys and values in object literal properties\n        // new-cap: 2, // require a capital letter for constructors\n        // new-parens: 2, // disallow the omission of parentheses when invoking a constructor with no arguments\n        // newline-after-var: 2, // require or disallow an empty newline after variable declarations\n        no-array-constructor: 2, // disallow use of the Array constructor\n        // no-lonely-if: 2, // disallow if as the only statement in an else block\n        no-mixed-spaces-and-tabs: 2, // disallow mixed spaces and tabs for indentation (recommended)\n        // no-multiple-empty-lines: 2, // disallow multiple empty lines\n        // no-negated-condition: 2, // disallow negated conditions\n        // no-nested-ternary: 2, // disallow nested ternary expressions\n        no-new-object: 2, // disallow the use of the Object constructor\n        no-restricted-syntax: 2, // disallow use of certain syntax in code\n        no-spaced-func: 2, // disallow space between function identifier and application (fixable)\n        // no-trailing-spaces: 2, // disallow trailing whitespace at the end of lines (fixable)\n        // no-underscore-dangle: 2, // disallow dangling underscores in identifiers\n        // no-unneeded-ternary: 2, // disallow the use of ternary operators when a simpler alternative exists\n        // object-curly-spacing: 2, // require or disallow padding inside curly braces (fixable)\n        // one-var: 2, // require or disallow one variable declaration per function\n        // operator-assignment: 2, // require assignment operator shorthand where possible or prohibit it entirely\n        // operator-linebreak: 2, // enforce operators to be placed before or after line breaks\n        // quotes: [2, \"double\", \"avoid-escape\"], // specify whether backticks, double or single quotes should be used (fixable)\n        // require-jsdoc: 2, // Require JSDoc comment\n        // semi-spacing: 2, // enforce spacing before and after semicolons\n        semi: [ 2, \"always\", { \"omitLastInOneLineBlock\": false } ]// require or disallow use of semicolons instead of ASI (fixable)\n        // keyword-spacing: 2, // require a space after certain keywords (fixable)\n        // space-before-blocks: 2, // require or disallow a space before blocks (fixable)\n        // space-before-function-paren: 2, // require or disallow a space before function opening parenthesis (fixable)\n        // space-before-keywords: 2, // require a space before certain keywords (fixable)\n        // space-in-parens: [2, \"never\"], // require or disallow spaces inside parentheses\n        // space-infix-ops: 2, // require spaces around operators (fixable)\n        // space-unary-ops: 2, // require or disallow spaces before/after unary operators (fixable)\n        // spaced-comment: [2, \"always\", { markers: [\"-\", \"*\", \"/\", \"{\", \"}\", \"#\"], exceptions: [\"}\"] }]\n\n    }\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3056640625,
          "content": "# Junk that could exist anywhere:\n.DS_Store\n*.swp\n*.tmp\n*~\n\n# Project files that should not be in the repo\n.*\n\\#*\n!/.github\n!/.gitignore\n.*.gz\n*.tmTheme.js\npackage-lock.json\n\n# A handy place to put stuff that git should ignore:\n/coverage\n/ignore/\nnode_modules/\njam/\n* *\n\n.git-ref\nnpm-debug.log\ndeps/\ndist\n\nlib/ace"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.166015625,
          "content": "[submodule \"doc/wiki\"]\n\tpath = doc/wiki\n\turl = https://github.com/ajaxorg/ace.wiki.git\n[submodule \"build\"]\n\tpath = build\n\turl = https://github.com/ajaxorg/ace-builds.git\n"
        },
        {
          "name": ".nojekyll",
          "type": "blob",
          "size": 0.0263671875,
          "content": "disable jekyll on gh-pages\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 69.189453125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n\n### [1.37.4](https://github.com/ajaxorg/ace/compare/v1.37.3...v1.37.4) (2025-01-09)\n\n\n### Bug Fixes\n\n* Remove unnecesary `typeof` from type imports in declarations ([#5715](https://github.com/ajaxorg/ace/issues/5715)) ([2c8bf91](https://github.com/ajaxorg/ace/commit/2c8bf916d75b086b958c205896bc2adc1747d241))\n\n### [1.37.3](https://github.com/ajaxorg/ace/compare/v1.37.2...v1.37.3) (2025-01-07)\n\n### [1.37.2](https://github.com/ajaxorg/ace/compare/v1.37.1...v1.37.2) (2025-01-06)\n\n\n### Bug Fixes\n\n* fix return type of supportsFile modelist ([#5705](https://github.com/ajaxorg/ace/issues/5705)) ([de21d50](https://github.com/ajaxorg/ace/commit/de21d50656bd874e1626265b8853923cb8da7c8b))\n\n### [1.37.1](https://github.com/ajaxorg/ace/compare/v1.37.0...v1.37.1) (2024-12-20)\n\n\n### Bug Fixes\n\n* hide gutter tooltip event missing from editor signal ([#5701](https://github.com/ajaxorg/ace/issues/5701)) ([66a6736](https://github.com/ajaxorg/ace/commit/66a673643d5d128eaf59d4fb6e5907fa6fa68773))\n\n### [1.36.6](https://github.com/ajaxorg/ace/compare/v1.36.5...v1.36.6) (2024-12-17)\n\n\n### Bug Fixes\n\n* update contribuition guide to mandate test cases ([#5694](https://github.com/ajaxorg/ace/issues/5694)) ([e6533b3](https://github.com/ajaxorg/ace/commit/e6533b3972d5adbf5995646c44894466b3b7f40f))\n* wrong behaviour rules in modes ([#5682](https://github.com/ajaxorg/ace/issues/5682)) ([442680c](https://github.com/ajaxorg/ace/commit/442680c68e66531c2d5ac80d80444ed600262ec1))\n\n### [1.36.5](https://github.com/ajaxorg/ace/compare/v1.36.4...v1.36.5) (2024-11-14)\n\n\n### Features\n\n* exposing getter setter for widget manager created using line widgets ([#5673](https://github.com/ajaxorg/ace/issues/5673)) ([f5d0c19](https://github.com/ajaxorg/ace/commit/f5d0c196c69d06a9dda1bdeb379fa20ecbf75590))\n\n\n### Bug Fixes\n\n* vue-directives regex bug ([#5671](https://github.com/ajaxorg/ace/issues/5671)) ([5e1e524](https://github.com/ajaxorg/ace/commit/5e1e524d7ef04e13291b5a979fb4166e973e61f0))\n\n### [1.36.4](https://github.com/ajaxorg/ace/compare/v1.36.3...v1.36.4) (2024-11-04)\n\n\n### Bug Fixes\n\n* **a11y:** update aria-label of textinput on cursor move ([#5665](https://github.com/ajaxorg/ace/issues/5665)) ([6ff93a8](https://github.com/ajaxorg/ace/commit/6ff93a86fe8c4855789ee7e7c156f7b376c0f935))\n\n### [1.36.3](https://github.com/ajaxorg/ace/compare/v1.36.2...v1.36.3) (2024-10-21)\n\n\n### Bug Fixes\n\n* `readdirSync` options `recursive: true` was added only in NodeJs v20.1.0 ([#5645](https://github.com/ajaxorg/ace/issues/5645)) ([2953f72](https://github.com/ajaxorg/ace/commit/2953f72877a90691432373cfe9182e60ea9b2d8f))\n\n### [1.36.2](https://github.com/ajaxorg/ace/compare/v1.36.1...v1.36.2) (2024-08-30)\n\n\n### Bug Fixes\n\n* apply padding to right side multi-line markers ([#5636](https://github.com/ajaxorg/ace/issues/5636)) ([c7549aa](https://github.com/ajaxorg/ace/commit/c7549aa5d53fb62f134b31a44d09029ceee3c800))\n\n### [1.36.1](https://github.com/ajaxorg/ace/compare/v1.36.0...v1.36.1) (2024-08-29)\n\n\n### Bug Fixes\n\n* improve type getMarkerAtPosition markergroup ([#5631](https://github.com/ajaxorg/ace/issues/5631)) ([89bd40a](https://github.com/ajaxorg/ace/commit/89bd40a66a2f06fb8806f174e5559021540a5b1e))\n* update cloudeditor light colours ([#5633](https://github.com/ajaxorg/ace/issues/5633)) ([0e2813e](https://github.com/ajaxorg/ace/commit/0e2813ed9e858d9359c2a79f2a9255d675308ad1))\n\n## [1.36.0](https://github.com/ajaxorg/ace/compare/v1.35.5...v1.36.0) (2024-08-21)\n\n\n### Features\n\n* allow setting marker type for MarkerGroups ([#5630](https://github.com/ajaxorg/ace/issues/5630)) ([214df9c](https://github.com/ajaxorg/ace/commit/214df9cea8d729f3071f9c02889cba2b2e7051b3))\n* **forced-color:** do not adjust the forced colors for the editor ([#5624](https://github.com/ajaxorg/ace/issues/5624)) ([c8f9df8](https://github.com/ajaxorg/ace/commit/c8f9df84e70ee29e8e989966985bcea95a9bef9b))\n\n### [1.35.5](https://github.com/ajaxorg/ace/compare/v1.35.4...v1.35.5) (2024-08-20)\n\n### [1.35.4](https://github.com/ajaxorg/ace/compare/v1.35.3...v1.35.4) (2024-07-22)\n\n\n### Bug Fixes\n\n* move right of cursor tokens to end of ghost text. ([#5616](https://github.com/ajaxorg/ace/issues/5616)) ([063ef9b](https://github.com/ajaxorg/ace/commit/063ef9bbe0934dfe75d9b447e8a92b69bfa41a3a))\n\n### [1.35.3](https://github.com/ajaxorg/ace/compare/v1.35.2...v1.35.3) (2024-07-18)\n\n\n### Bug Fixes\n\n* ghost text rendering of empty lines ([#5615](https://github.com/ajaxorg/ace/issues/5615)) ([1ae0bdc](https://github.com/ajaxorg/ace/commit/1ae0bdcfb9da4078713d116e93a9c9a935a1258d))\n\n### [1.35.2](https://github.com/ajaxorg/ace/compare/v1.35.1...v1.35.2) (2024-07-01)\n\n### [1.35.1](https://github.com/ajaxorg/ace/compare/v1.35.0...v1.35.1) (2024-06-27)\n\n\n### Bug Fixes\n\n* explicitly construct Number from window zoom attribute ([#5600](https://github.com/ajaxorg/ace/issues/5600)) ([2591c36](https://github.com/ajaxorg/ace/commit/2591c36b9e768305a9f837bf74c828c2d8d76e05))\n* use dom builder for gutter tooltip and inline widget ([#5601](https://github.com/ajaxorg/ace/issues/5601)) ([e81a299](https://github.com/ajaxorg/ace/commit/e81a299a8be39a7245a334ebc844eaeac6864bb3))\n* workaround for safari rendering bug ([#5573](https://github.com/ajaxorg/ace/issues/5573)) ([f9a152f](https://github.com/ajaxorg/ace/commit/f9a152fd925a8a16b10c65c909201100486c71e8))\n* wrong doc comment * insert behaviour ([#5571](https://github.com/ajaxorg/ace/issues/5571)) ([16c95b3](https://github.com/ajaxorg/ace/commit/16c95b32197c0ec952e52be85d21269005875940))\n\n## [1.35.0](https://github.com/ajaxorg/ace/compare/v1.34.2...v1.35.0) (2024-06-11)\n\n\n### Features\n\n* allow '{n}' as placeholder for translated strings ([#5581](https://github.com/ajaxorg/ace/issues/5581)) ([2206024](https://github.com/ajaxorg/ace/commit/220602488b95748c74141d647e13114c7a4569fb))\n\n\n### Bug Fixes\n\n* allow setting the placeholder type for nls ([#5584](https://github.com/ajaxorg/ace/issues/5584)) ([3e2d50f](https://github.com/ajaxorg/ace/commit/3e2d50f5307e201c20825311585e1f612f1ff23c))\n* not closed generic state in case of left-shift operator ([#5572](https://github.com/ajaxorg/ace/issues/5572)) ([e5bea6f](https://github.com/ajaxorg/ace/commit/e5bea6f63290003ff3270d56dbf9610e8a3091a8))\n* wrong vue-directives regexp ([#5586](https://github.com/ajaxorg/ace/issues/5586)) ([5f89a33](https://github.com/ajaxorg/ace/commit/5f89a334e69640bb395e74ae86530217d08f141c))\n\n### [1.34.2](https://github.com/ajaxorg/ace/compare/v1.34.1...v1.34.2) (2024-05-27)\n\n### [1.34.1](https://github.com/ajaxorg/ace/compare/v1.34.0...v1.34.1) (2024-05-24)\n\n\n### Bug Fixes\n\n* always set aria-label to text input in a11y mode ([#5563](https://github.com/ajaxorg/ace/issues/5563)) ([00346fd](https://github.com/ajaxorg/ace/commit/00346fde824beabb69f677631ad52815665eaef4))\n* Folding for comments and different modes ([#5533](https://github.com/ajaxorg/ace/issues/5533)) ([f4d0e33](https://github.com/ajaxorg/ace/commit/f4d0e33dac270ce21df09a96a39f50e16d6354db))\n\n## [1.34.0](https://github.com/ajaxorg/ace/compare/v1.33.3...v1.34.0) (2024-05-22)\n\n\n### Features\n\n* allow users to add arialabel to text input ([#5560](https://github.com/ajaxorg/ace/issues/5560)) ([8d7dfb6](https://github.com/ajaxorg/ace/commit/8d7dfb69392960aba61def982f4bea8f3a5caa70))\n\n### [1.33.3](https://github.com/ajaxorg/ace/compare/v1.33.2...v1.33.3) (2024-05-21)\n\n\n### Bug Fixes\n\n* contrast completion meta contrast cloud editor themes ([#5558](https://github.com/ajaxorg/ace/issues/5558)) ([b8877f0](https://github.com/ajaxorg/ace/commit/b8877f0f725b3973961cb639127402c9f56609de))\n\n### [1.33.2](https://github.com/ajaxorg/ace/compare/v1.33.1...v1.33.2) (2024-05-13)\n\n\n### Bug Fixes\n\n* Add soft wrap for ghost text ([#5540](https://github.com/ajaxorg/ace/issues/5540)) ([6a26b27](https://github.com/ajaxorg/ace/commit/6a26b277d0050b38cd766e00f93be4b9f3170f68))\n* generator function's determination; wrong parameter highlighting ([#5538](https://github.com/ajaxorg/ace/issues/5538)) ([ceca6f7](https://github.com/ajaxorg/ace/commit/ceca6f7b38f6b3347988f17579ae6a2e758137dd))\n* incorrect spans style ([#5539](https://github.com/ajaxorg/ace/issues/5539)) ([65a7f38](https://github.com/ajaxorg/ace/commit/65a7f38713cffb729dab530711351c0a17c5801f))\n* not determined folding widgets for html tags ([#5548](https://github.com/ajaxorg/ace/issues/5548)) ([7a51992](https://github.com/ajaxorg/ace/commit/7a5199292f55dfa1a8ea8830ea1a9d98be097161))\n* wrong token type ([#5535](https://github.com/ajaxorg/ace/issues/5535)) ([4041489](https://github.com/ajaxorg/ace/commit/4041489bb38ffe609d5f9b43b4a7637e47fc4739))\n\n### [1.33.1](https://github.com/ajaxorg/ace/compare/v1.33.0...v1.33.1) (2024-04-23)\n\n\n### Bug Fixes\n\n* account for `this.popup` being potentially undefined in completion mousewheel listener ([#5537](https://github.com/ajaxorg/ace/issues/5537)) ([6c3a9a6](https://github.com/ajaxorg/ace/commit/6c3a9a66a7a0ab0dd493ad2c281c9dd343d5301f))\n\n## [1.33.0](https://github.com/ajaxorg/ace/compare/v1.32.9...v1.33.0) (2024-04-12)\n\n\n### Features\n\n* Make translation system key based and add annotation type to gutter icon aria labels ([#5524](https://github.com/ajaxorg/ace/issues/5524)) ([bb8256d](https://github.com/ajaxorg/ace/commit/bb8256d5a5b5e989e3fb1bb80f326b8564fbbc20))\n\n\n### Bug Fixes\n\n* Contrast is too low for searched items ([#5523](https://github.com/ajaxorg/ace/issues/5523)) ([507ae2f](https://github.com/ajaxorg/ace/commit/507ae2f872a2b2f1a14fdffbf6530f4046df44c0))\n\n### [1.32.9](https://github.com/ajaxorg/ace/compare/v1.32.8...v1.32.9) (2024-03-29)\n\n\n### Bug Fixes\n\n* apply class to autocomplete popup for no suggestions state ([#5522](https://github.com/ajaxorg/ace/issues/5522)) ([a66f861](https://github.com/ajaxorg/ace/commit/a66f8619953eecd85833d97715e479d3b211c4cd))\n\n### [1.32.8](https://github.com/ajaxorg/ace/compare/v1.32.7...v1.32.8) (2024-03-22)\n\n\n### Bug Fixes\n\n* allow completers to trigger on newline characters ([#5519](https://github.com/ajaxorg/ace/issues/5519)) ([6e870fd](https://github.com/ajaxorg/ace/commit/6e870fd08e06be47f9da971743d13b25c41f99c2))\n* don't detach completion popup while typing when prefix is empty ([#5517](https://github.com/ajaxorg/ace/issues/5517)) ([7937e53](https://github.com/ajaxorg/ace/commit/7937e53babb9b327902e9dab4b18c04a907883be))\n* scroll cursor line to top editor for long inline preview ([#5514](https://github.com/ajaxorg/ace/issues/5514)) ([529473b](https://github.com/ajaxorg/ace/commit/529473b6959d5f7a70ada1d20feb0c87b432f766))\n* SwiftHighlightRules exports ([#5516](https://github.com/ajaxorg/ace/issues/5516)) ([f493ab0](https://github.com/ajaxorg/ace/commit/f493ab03bb50fe089c927b7a50a4a327c8dcec4c))\n\n### [1.32.7](https://github.com/ajaxorg/ace/compare/v1.32.6...v1.32.7) (2024-03-01)\n\n\n### Bug Fixes\n\n* swap blue/red in cloudeditor themes to reduces usage of red ([#5492](https://github.com/ajaxorg/ace/issues/5492)) ([0e8f549](https://github.com/ajaxorg/ace/commit/0e8f549a16481f8bb7573ac9edaae377cb9e3972))\n\n### [1.32.6](https://github.com/ajaxorg/ace/compare/v1.32.5...v1.32.6) (2024-02-07)\n\n### [1.32.5](https://github.com/ajaxorg/ace/compare/v1.32.4...v1.32.5) (2024-01-30)\n\n### [1.32.4](https://github.com/ajaxorg/ace/compare/v1.32.3...v1.32.4) (2024-01-29)\n\n\n### Bug Fixes\n\n* Improve contrast of completion popup in CloudEditor theme ([#5473](https://github.com/ajaxorg/ace/issues/5473)) ([273c7f1](https://github.com/ajaxorg/ace/commit/273c7f159ded7dc9403266c6501e16a35e4101c6))\n* update JSX mode to reflect React JSX ([#5451](https://github.com/ajaxorg/ace/issues/5451)) ([66789a7](https://github.com/ajaxorg/ace/commit/66789a79ce1b7791c65886d8aecddd7efc0415e8))\n\n### [1.32.3](https://github.com/ajaxorg/ace/compare/v1.32.2...v1.32.3) (2023-12-29)\n\n\n### Bug Fixes\n\n* improve prefixing for inline preview ([#5439](https://github.com/ajaxorg/ace/issues/5439)) ([51006bb](https://github.com/ajaxorg/ace/commit/51006bba9c60b97251ddb04ed74f68ba4e7f6b54))\n* update ghost text if on same line popup ([12f4664](https://github.com/ajaxorg/ace/commit/12f466460d7187cfe37593dab1fbe275403fedd3))\n* updated red color in cloud-editor dark theme ([#5432](https://github.com/ajaxorg/ace/issues/5432)) ([142b607](https://github.com/ajaxorg/ace/commit/142b607578f5d071a5026691ff6662c11e9f186b))\n\n### [1.32.2](https://github.com/ajaxorg/ace/compare/v1.32.1...v1.32.2) (2023-12-14)\n\n\n### Bug Fixes\n\n* **themes:** changed the solarized theme primary color from `[#93](https://github.com/ajaxorg/ace/issues/93)A1A1` to `[#839496](https://github.com/ajaxorg/ace/issues/839496)`. ([#5422](https://github.com/ajaxorg/ace/issues/5422)) ([114a5c1](https://github.com/ajaxorg/ace/commit/114a5c163fd875b4fab332dadfadeeae41e4097a)), closes [#93A1A1](https://github.com/ajaxorg/ace/issues/93A1A1)\n\n### [1.32.1](https://github.com/ajaxorg/ace/compare/v1.32.0...v1.32.1) (2023-12-11)\n\n\n### Bug Fixes\n\n* don't show loading state when empty completer array is provided ([7a8a929](https://github.com/ajaxorg/ace/commit/7a8a92933b3fde75907612d106643d28efa2d776))\n* prevent browser scroll while scrolling over the tooltip ([#5414](https://github.com/ajaxorg/ace/issues/5414)) ([c6475c0](https://github.com/ajaxorg/ace/commit/c6475c00bcfa49dde37ef9de06ebba82ba5ba15d))\n* switch aria-selected to aria-current for webkit ([#5416](https://github.com/ajaxorg/ace/issues/5416)) ([bf1a4ea](https://github.com/ajaxorg/ace/commit/bf1a4ea607ed09b5a299390dd2daa5c1d0019e00)), closes [#5403](https://github.com/ajaxorg/ace/issues/5403)\n* yaml worker errors at undefined row/column ([06cc12a](https://github.com/ajaxorg/ace/commit/06cc12aad98176d931a1c1cf9a701f4ac0c33de5))\n\n## [1.32.0](https://github.com/ajaxorg/ace/compare/v1.31.2...v1.32.0) (2023-11-30)\n\n\n### Features\n\n* adding CloudEditor theme ([#5404](https://github.com/ajaxorg/ace/issues/5404)) ([b0ee067](https://github.com/ajaxorg/ace/commit/b0ee067fadaf9593ed2207f363a402eb9ab8d57a))\n\n\n### Bug Fixes\n\n* autocomplete tests ([#5407](https://github.com/ajaxorg/ace/issues/5407)) ([cf6999d](https://github.com/ajaxorg/ace/commit/cf6999d9cb4103df16dc38a8cbfd40ab2a999e6d))\n* set completion popup role to 'menu' for safari ([6845905](https://github.com/ajaxorg/ace/commit/684590546746fa2ef090c10c140e01e43974d8f4))\n* stop rendering the completion popup disconnected from the editor for long ghost text ([#5401](https://github.com/ajaxorg/ace/issues/5401)) ([94d68a7](https://github.com/ajaxorg/ace/commit/94d68a73042c61a786d253fd0838e62cc5770a31))\n* try to scroll inline preview into view ([#5400](https://github.com/ajaxorg/ace/issues/5400)) ([95af560](https://github.com/ajaxorg/ace/commit/95af5608b655259d12cdbc4ca28cf450f9e649c7))\n\n### [1.31.2](https://github.com/ajaxorg/ace/compare/v1.31.1...v1.31.2) (2023-11-15)\n\n\n### Bug Fixes\n\n* inline preview with loading state ([05db94f](https://github.com/ajaxorg/ace/commit/05db94f53774f64318de757347f7217043744fe6))\n\n### [1.31.1](https://github.com/ajaxorg/ace/compare/v1.31.0...v1.31.1) (2023-10-30)\n\n\n### Bug Fixes\n\n* improve yaml folding ([5c80e3c](https://github.com/ajaxorg/ace/commit/5c80e3cdd716b4ad26ee6958c9137278530b7816))\n\n## [1.31.0](https://github.com/ajaxorg/ace/compare/v1.30.0...v1.31.0) (2023-10-23)\n\n\n### Features\n\n* add nasal language ([#5342](https://github.com/ajaxorg/ace/issues/5342)) ([4fff99e](https://github.com/ajaxorg/ace/commit/4fff99e320539a1472ce0512cd1fd3e5fc7f2ca6))\n\n\n### Bug Fixes\n\n* doc tooltip not filtering properly ([e5034c7](https://github.com/ajaxorg/ace/commit/e5034c7b58fb47fe57b28dbb001e72a567ef9abe))\n\n## [1.30.0](https://github.com/ajaxorg/ace/compare/v1.29.0...v1.30.0) (2023-10-13)\n\n\n### Features\n\n* Add support for time units in PRQL ([#5324](https://github.com/ajaxorg/ace/issues/5324)) ([8b9175b](https://github.com/ajaxorg/ace/commit/8b9175bc780fade64bed1570fa1cd34d022b337b))\n\n## [1.29.0](https://github.com/ajaxorg/ace/compare/v1.28.0...v1.29.0) (2023-10-09)\n\n\n### Features\n\n* allow setting completion.ignoreCaption ([5618046](https://github.com/ajaxorg/ace/commit/56180467e12c300850da89cc13c1c8648fb5e342))\n\n## [1.28.0](https://github.com/ajaxorg/ace/compare/v1.27.0...v1.28.0) (2023-09-22)\n\n\n### Features\n\n* Keep focus on same item in completion popup when slow completer delivers results. ([#5322](https://github.com/ajaxorg/ace/issues/5322)) ([0983134](https://github.com/ajaxorg/ace/commit/09831343ccd450326cffb4b0f26ce3a8b830c7fb))\n\n## [1.27.0](https://github.com/ajaxorg/ace/compare/v1.26.0...v1.27.0) (2023-09-19)\n\n\n### Features\n\n* Allow not showing inline preview for completers when `inlineEnabled` is set to `true`. ([#5315](https://github.com/ajaxorg/ace/issues/5315)) ([f3e3330](https://github.com/ajaxorg/ace/commit/f3e333041fc1a687b3ce35a44f1bf00bcc15a236))\n\n## [1.26.0](https://github.com/ajaxorg/ace/compare/v1.25.1...v1.26.0) (2023-09-15)\n\n\n### Features\n\n* Allow to set setSelectOnHover for Autocomplete ([#5317](https://github.com/ajaxorg/ace/issues/5317)) ([dccbcc2](https://github.com/ajaxorg/ace/commit/dccbcc20288a48403f10aa29b6b9b6181dc8a66f))\n\n\n### Bug Fixes\n\n* Improve PRQL syntax highlightning ([#5313](https://github.com/ajaxorg/ace/issues/5313)) ([7d677f1](https://github.com/ajaxorg/ace/commit/7d677f1019ea5c81f3d9ae36ed1e71ac7a08fb30))\n\n### [1.25.1](https://github.com/ajaxorg/ace/compare/v1.25.0...v1.25.1) (2023-09-14)\n\n## [1.25.0](https://github.com/ajaxorg/ace/compare/v1.24.2...v1.25.0) (2023-09-14)\n\n\n### Features\n\n* Add syntax highlighting for PRQL ([#5307](https://github.com/ajaxorg/ace/issues/5307)) ([24862cd](https://github.com/ajaxorg/ace/commit/24862cdc83694bbe541c6f8be6fbaaff80d44bf7))\n\n### [1.24.2](https://github.com/ajaxorg/ace/compare/v1.24.1...v1.24.2) (2023-09-08)\n\n\n### Bug Fixes\n\n* Added project details in index.html file ([#5300](https://github.com/ajaxorg/ace/issues/5300)) ([6e83505](https://github.com/ajaxorg/ace/commit/6e835059dd13e95178b15ce9b06a2f2444c2e731))\n* autocompletion threshold doesn't apply to trigger characters ([84bbc88](https://github.com/ajaxorg/ace/commit/84bbc888e1c0304c0160bb19fc46cf5539d079cf))\n* Update php_highlight_rules.js ([#5288](https://github.com/ajaxorg/ace/issues/5288)) ([caedd0c](https://github.com/ajaxorg/ace/commit/caedd0cf22d5a7644ceb418562ebcab801011c88))\n\n### [1.24.1](https://github.com/ajaxorg/ace/compare/v1.24.0...v1.24.1) (2023-08-15)\n\n## [1.24.0](https://github.com/ajaxorg/ace/compare/v1.23.4...v1.24.0) (2023-08-09)\n\n\n### Features\n\n* Add support for Unicode boundaries ([#5265](https://github.com/ajaxorg/ace/issues/5265)) ([1e6fcf3](https://github.com/ajaxorg/ace/commit/1e6fcf349d222715429ddc9fe6a38ec1f6d72ab1))\n* Allow more lines in hidden textarea to improve screen reader experience on Windows ([#5225](https://github.com/ajaxorg/ace/issues/5225)) ([bccff5a](https://github.com/ajaxorg/ace/commit/bccff5ae21b86004c2a4ab4a86a989c61e728ebf))\n* Cuttlefish mode ([#5278](https://github.com/ajaxorg/ace/issues/5278)) ([9cddf64](https://github.com/ajaxorg/ace/commit/9cddf64ac51fc5e7c5474e7aeaa2ef8f069220db))\n\n\n### Bug Fixes\n\n* add missing SQL keywords: IS and IN ([#5263](https://github.com/ajaxorg/ace/issues/5263)) ([c731164](https://github.com/ajaxorg/ace/commit/c731164315a757a5e0380f82eeef105a17b24b03))\n* bug in lua.lua example file kitchen-sink ([#5258](https://github.com/ajaxorg/ace/issues/5258)) ([6549570](https://github.com/ajaxorg/ace/commit/6549570310983999a1fd3ce52bc5bf8b4004402f))\n* support more environments ([#5266](https://github.com/ajaxorg/ace/issues/5266)) ([b196806](https://github.com/ajaxorg/ace/commit/b196806eb2937e7ee56e42b482b7b3bd5e3c9d79))\n\n### [1.23.4](https://github.com/ajaxorg/ace/compare/v1.23.3...v1.23.4) (2023-07-12)\n\n\n### Bug Fixes\n\n* filterText triggered selection range removal when completions range was present ([#5249](https://github.com/ajaxorg/ace/issues/5249)) ([b586e4d](https://github.com/ajaxorg/ace/commit/b586e4d574bf780fc38f1ac0d034276272b36ad3))\n\n### [1.23.3](https://github.com/ajaxorg/ace/compare/v1.23.2...v1.23.3) (2023-07-10)\n\n\n### Bug Fixes\n\n* android bug when deleting multiple lines ([#5248](https://github.com/ajaxorg/ace/issues/5248)) ([bd066ff](https://github.com/ajaxorg/ace/commit/bd066ffef88ca74f5ac32349d3e868cfa875a47b)), closes [#5087](https://github.com/ajaxorg/ace/issues/5087)\n* update jshint version to 2.13.6; change esversion to target ECMAScript 11 ([#5243](https://github.com/ajaxorg/ace/issues/5243)) ([301aee9](https://github.com/ajaxorg/ace/commit/301aee91b5974d9fb31d646466ed301c5c3b8249))\n\n### [1.23.2](https://github.com/ajaxorg/ace/compare/v1.23.1...v1.23.2) (2023-07-07)\n\n\n### Bug Fixes\n\n* **autocomplete:** fix a11y violations ([#5241](https://github.com/ajaxorg/ace/issues/5241)) ([decb615](https://github.com/ajaxorg/ace/commit/decb6154198105289170303b7434c524eaf9fda8))\n* bug in guttertooltip when `tooltipsFollowsMouse` set to false ([#5217](https://github.com/ajaxorg/ace/issues/5217)) ([67d318e](https://github.com/ajaxorg/ace/commit/67d318ed25d5b45789462850e6b96aac2931591f))\n* typo in function name ([#5229](https://github.com/ajaxorg/ace/issues/5229)) ([6e99055](https://github.com/ajaxorg/ace/commit/6e99055c46f443271161e40fe15372d1d8ae9f42))\n\n### [1.23.1](https://github.com/ajaxorg/ace/compare/v1.23.0...v1.23.1) (2023-06-27)\n\n## [1.23.0](https://github.com/ajaxorg/ace/compare/v1.22.1...v1.23.0) (2023-06-21)\n\n\n### Features\n\n* **autocomplete:** ellipsis is shown when suggestions is longer than popover width ([#5204](https://github.com/ajaxorg/ace/issues/5204)) ([de4234b](https://github.com/ajaxorg/ace/commit/de4234be62be264b78bd4dd19b09cf20fb4d0f28))\n* signal gutterkeydown in keyboard accessibility mode ([#5202](https://github.com/ajaxorg/ace/issues/5202)) ([538b18c](https://github.com/ajaxorg/ace/commit/538b18cf86e21c810910d286c820bac399927cd7))\n\n\n### Bug Fixes\n\n* Fix vite build and webpack warning ([#5192](https://github.com/ajaxorg/ace/issues/5192)) ([e14902e](https://github.com/ajaxorg/ace/commit/e14902e0c2b281346d062d6a5c84d05bd3590fe3))\n* gutter tooltip class fix ([#5211](https://github.com/ajaxorg/ace/issues/5211)) ([5bdb944](https://github.com/ajaxorg/ace/commit/5bdb944714e7787632914aeef521e3e5024a1d1f))\n* Improve ARIA labelling fold controls ([#5205](https://github.com/ajaxorg/ace/issues/5205)) ([dad5e6f](https://github.com/ajaxorg/ace/commit/dad5e6f6e445b805f7b470ef7892442a83d342e5))\n* regression in setting breakpoints on folded lines ([51326eb](https://github.com/ajaxorg/ace/commit/51326ebfe9b3e97925ab1be05246e0f2646c8687))\n\n### [1.22.1](https://github.com/ajaxorg/ace/compare/v1.22.0...v1.22.1) (2023-06-11)\n\n\n### Bug Fixes\n\n* don't throw unhandled errors in TabstopManager when EditSession becomes `undefined` ([#5193](https://github.com/ajaxorg/ace/issues/5193)) ([cd55932](https://github.com/ajaxorg/ace/commit/cd55932ac7161fcd45e2ee4f1ea8e22b5ff8c3c4))\n* include ace-modes to the npm package ([a074fa4](https://github.com/ajaxorg/ace/commit/a074fa41334314169075b66cd77dd2d9a191c73f))\n* jsdoc comment foldings ([#5197](https://github.com/ajaxorg/ace/issues/5197)) ([065af41](https://github.com/ajaxorg/ace/commit/065af4175f7c7426c9e8f798a0ec64c390a03259))\n\n## [1.22.0](https://github.com/ajaxorg/ace/compare/v1.21.1...v1.22.0) (2023-05-22)\n\n\n### Features\n\n* add odin mode ([#5169](https://github.com/ajaxorg/ace/issues/5169)) ([d455e9b](https://github.com/ajaxorg/ace/commit/d455e9b16efb6030a8b0b6c1189b72516b205b40))\n\n### [1.21.1](https://github.com/ajaxorg/ace/compare/v1.21.0...v1.21.1) (2023-05-16)\n\n\n### Bug Fixes\n\n* console error when hovering over empty gutter cell with tooltipFollowsMouse set to false ([#5173](https://github.com/ajaxorg/ace/issues/5173)) ([5ff8d4c](https://github.com/ajaxorg/ace/commit/5ff8d4cc064ac647a2f40bf977f88b2972ae17ef))\n\n## [1.21.0](https://github.com/ajaxorg/ace/compare/v1.20.0...v1.21.0) (2023-05-15)\n\n\n### Features\n\n* Custom empty message when no completion found ([#5158](https://github.com/ajaxorg/ace/issues/5158)) ([204aafa](https://github.com/ajaxorg/ace/commit/204aafa04c268e98655fb83b4877302a0f82fa4d))\n* Special trigger characters to start autocomplete ([#5147](https://github.com/ajaxorg/ace/issues/5147)) ([c2cfc5a](https://github.com/ajaxorg/ace/commit/c2cfc5a9f1448f64e62f7652c995a48c4ea31ab3))\n\n\n### Bug Fixes\n\n* command bar command type ([#5168](https://github.com/ajaxorg/ace/issues/5168)) ([64c8253](https://github.com/ajaxorg/ace/commit/64c8253e3cd4348b7ecd3684dae057c8fd5f79b9))\n\n## [1.20.0](https://github.com/ajaxorg/ace/compare/v1.19.0...v1.20.0) (2023-05-10)\n\n\n### Features\n\n* Add gutter controls to keyboard accessibility mode ([#5146](https://github.com/ajaxorg/ace/issues/5146)) ([5f2face](https://github.com/ajaxorg/ace/commit/5f2face8febe7c260a42bc30c67195f6a5a46085))\n* Inline autocomplete tooltip UX redesign ([#5149](https://github.com/ajaxorg/ace/issues/5149)) ([8d56c84](https://github.com/ajaxorg/ace/commit/8d56c841ef980527a1ebe4cf73442766f5f97208))\n\n## [1.19.0](https://github.com/ajaxorg/ace/compare/v1.18.1...v1.19.0) (2023-05-03)\n\n\n### Features\n\n* publishing generated styling files to ace-code package ([1fa223e](https://github.com/ajaxorg/ace/commit/1fa223e4ca0df16c9a0e0a6df2996fa010189666))\n\n### [1.18.1](https://github.com/ajaxorg/ace/compare/v1.18.0...v1.18.1) (2023-05-03)\n\n\n### Bug Fixes\n\n* add mode types, improve type definitions ([e22bd5c](https://github.com/ajaxorg/ace/commit/e22bd5c860451c000187941991c0047db4e701a2))\n* hide `$getindent` from the SyntaxMode ([2b1c65b](https://github.com/ajaxorg/ace/commit/2b1c65bceb290db74f26a5c59158f93830bc6111))\n* remove '$' fields for types that don't require exposing them ([2db9d4e](https://github.com/ajaxorg/ace/commit/2db9d4e88441f2932ce6c6f91e7f5ed36c590d2f))\n* remove or update badly formatted declarations ([1e7b022](https://github.com/ajaxorg/ace/commit/1e7b022908cdf6fef0a28419c464874ce6433e6e))\n* replaceRange could now be implemented as an instance of the Range interface, rather than being an instance of the Range class ([e1bdccc](https://github.com/ajaxorg/ace/commit/e1bdcccb4ed3179734aa534b37a9dade2e207f07))\n* wrong next state in regex state ([c5ed709](https://github.com/ajaxorg/ace/commit/c5ed7092f0151d4aa00c7060ecf0111fc37bfebb))\n\n## [1.18.0](https://github.com/ajaxorg/ace/compare/v1.17.0...v1.18.0) (2023-04-21)\n\n\n### Features\n\n* marker groups ([#5113](https://github.com/ajaxorg/ace/issues/5113)) ([01d4605](https://github.com/ajaxorg/ace/commit/01d4605c0dcf7bcbb4f1a09a243f7ef6d16d7d43))\n* summary of annotations in folded lines ([#5117](https://github.com/ajaxorg/ace/issues/5117)) ([dc63ba9](https://github.com/ajaxorg/ace/commit/dc63ba900d3641284d7d11cbb5ccad7c3039f3a4))\n\n## [1.17.0](https://github.com/ajaxorg/ace/compare/v1.16.0...v1.17.0) (2023-04-12)\n\n\n### Features\n\n* Add annotation level information to gutter tooltip ([#5101](https://github.com/ajaxorg/ace/issues/5101)) ([3cd28b8](https://github.com/ajaxorg/ace/commit/3cd28b88a51176c791e045f405cdf842916697ab))\n* Add option to prevent keyboard focus trapping ([#5114](https://github.com/ajaxorg/ace/issues/5114)) ([fe5d1bf](https://github.com/ajaxorg/ace/commit/fe5d1bfbf0a3432b78a5e503d1db680181ef48b8))\n* Add option to use SVG gutter icons ([#5107](https://github.com/ajaxorg/ace/issues/5107)) ([82eb439](https://github.com/ajaxorg/ace/commit/82eb439709773a71515fbe97c4e89890ea77e752))\n* add ResizeObserver to make calling editor.resize optional ([51d5e4d](https://github.com/ajaxorg/ace/commit/51d5e4d4308ba98921b1d6ea8cf946d0e17d0a7a))\n\n\n### Bug Fixes\n\n* adds missing 'on' method for 'guttermousedown' ([7212042](https://github.com/ajaxorg/ace/commit/721204292907549fd4fd02d6672afd2b63d1e168))\n* Fix bracket highlighting for brackets in open/close tags ([#5108](https://github.com/ajaxorg/ace/issues/5108)) ([3c149a9](https://github.com/ajaxorg/ace/commit/3c149a97acedd9c9ad52daebaf944aa26534d37f))\n* Improves Liquid Support ([#5098](https://github.com/ajaxorg/ace/issues/5098)) ([0ae8dbb](https://github.com/ajaxorg/ace/commit/0ae8dbb0fe017cfb8321307e5bfe5959eb121754))\n\n## [1.16.0](https://github.com/ajaxorg/ace/compare/v1.14.0...v1.16.0) (2023-03-17)\n\n\n### Features\n\n* Added Editor API to set the ghost text ([#5036](https://github.com/ajaxorg/ace/issues/5036)) ([958d573](https://github.com/ajaxorg/ace/commit/958d57383c4ebfacd414eb817aecc2e0982d1b36))\n* Inline autocompletion ([#5084](https://github.com/ajaxorg/ace/issues/5084)) ([eb834a1](https://github.com/ajaxorg/ace/commit/eb834a1f1ca7f922437a90f2f14d935d75f31ac8))\n\n\n### Bug Fixes\n\n* add updated monospace font for Windows ([#5091](https://github.com/ajaxorg/ace/issues/5091)) ([a981972](https://github.com/ajaxorg/ace/commit/a9819722cec6ff60b028deaa7b70d7fefabac531))\n* Added highlighting for TIES keyword introduced in PostgreSQL 13 ([#5033](https://github.com/ajaxorg/ace/issues/5033)) ([9588086](https://github.com/ajaxorg/ace/commit/95880868c2a9912f7c6a2c3942d67fc2a980094e))\n* Added lateral keyword introduced in MySQL 8.0.14 ([#5053](https://github.com/ajaxorg/ace/issues/5053)) ([3250956](https://github.com/ajaxorg/ace/commit/32509568010d8b881cc9f1a6d6bd76e6f69360ea))\n* editor shadow appears under the selected line background when horizontal scroll is active ([#5020](https://github.com/ajaxorg/ace/issues/5020)) ([ab4f788](https://github.com/ajaxorg/ace/commit/ab4f788455ae182ae133fa202d737efa5461ff79))\n* Fix bug with missing token in latex folding ([#5093](https://github.com/ajaxorg/ace/issues/5093)) ([44b3a3e](https://github.com/ajaxorg/ace/commit/44b3a3ef2de40f5cc71c3dedc1ed8d596cfadeec)), closes [#5090](https://github.com/ajaxorg/ace/issues/5090)\n* Implement highlight mode for PL/SQL (Oracle) dialect ([#5037](https://github.com/ajaxorg/ace/issues/5037)) ([159aa70](https://github.com/ajaxorg/ace/commit/159aa70d551530f2866fb0006fad37bd75e60dda))\n* Improve MySQL highlighting mode ([#5050](https://github.com/ajaxorg/ace/issues/5050)) ([00f6089](https://github.com/ajaxorg/ace/commit/00f60890a36121d7c705445514dcf79a81055f55))\n* Option to determine specific prefixes for quote insertion ([#5067](https://github.com/ajaxorg/ace/issues/5067)) ([34e769c](https://github.com/ajaxorg/ace/commit/34e769c5b29a68a3c4201fecc75d1287c99f9d51)), closes [#5063](https://github.com/ajaxorg/ace/issues/5063)\n* Remove broken keybinding from vscode mode ([#5032](https://github.com/ajaxorg/ace/issues/5032)) ([68ff964](https://github.com/ajaxorg/ace/commit/68ff964a214cc2da66e4a35b313ff66dd4490e34))\n\n### [1.15.3](https://github.com/ajaxorg/ace/compare/v1.15.2...v1.15.3) (2023-03-02)\n\n### [1.15.2](https://github.com/ajaxorg/ace/compare/v1.15.1...v1.15.2) (2023-02-16)\n\n### [1.15.1](https://github.com/ajaxorg/ace/compare/v1.15.0...v1.15.1) (2023-02-13)\n\n\n### Bug Fixes\n\n* Added lateral keyword introduced in MySQL 8.0.14 ([#5053](https://github.com/ajaxorg/ace/issues/5053)) ([3250956](https://github.com/ajaxorg/ace/commit/32509568010d8b881cc9f1a6d6bd76e6f69360ea))\n* Implement highlight mode for PL/SQL (Oracle) dialect ([#5037](https://github.com/ajaxorg/ace/issues/5037)) ([159aa70](https://github.com/ajaxorg/ace/commit/159aa70d551530f2866fb0006fad37bd75e60dda))\n* Improve MySQL highlighting mode ([#5050](https://github.com/ajaxorg/ace/issues/5050)) ([00f6089](https://github.com/ajaxorg/ace/commit/00f60890a36121d7c705445514dcf79a81055f55))\n\n## [1.15.0](https://github.com/ajaxorg/ace/compare/v1.14.0...v1.15.0) (2023-01-25)\n\n\n### Features\n\n* Added Editor API to set the ghost text ([#5036](https://github.com/ajaxorg/ace/issues/5036)) ([958d573](https://github.com/ajaxorg/ace/commit/958d57383c4ebfacd414eb817aecc2e0982d1b36))\n\n\n### Bug Fixes\n\n* Added highlighting for TIES keyword introduced in PostgreSQL 13 ([#5033](https://github.com/ajaxorg/ace/issues/5033)) ([9588086](https://github.com/ajaxorg/ace/commit/95880868c2a9912f7c6a2c3942d67fc2a980094e))\n* editor shadow appears under the selected line background when horizontal scroll is active ([#5020](https://github.com/ajaxorg/ace/issues/5020)) ([ab4f788](https://github.com/ajaxorg/ace/commit/ab4f788455ae182ae133fa202d737efa5461ff79))\n* Remove broken keybinding from vscode mode ([#5032](https://github.com/ajaxorg/ace/issues/5032)) ([68ff964](https://github.com/ajaxorg/ace/commit/68ff964a214cc2da66e4a35b313ff66dd4490e34))\n\n## [1.14.0](https://github.com/ajaxorg/ace/compare/v1.13.1...v1.14.0) (2022-12-12)\n\n\n### Features\n\n* Autocomplete accessibility features ([#5008](https://github.com/ajaxorg/ace/issues/5008)) ([3b7bb5e](https://github.com/ajaxorg/ace/commit/3b7bb5e4afbad0f2bdbc7f8487442a5cb78b8284))\n\n\n### Bug Fixes\n\n* Add missing options to `EditorOptions` ([#5003](https://github.com/ajaxorg/ace/issues/5003)) ([451b63f](https://github.com/ajaxorg/ace/commit/451b63f2243762d6de2fc5b9ee8c580c348b933c))\n* added GREATEST|LEAST logical functions added in SQL Server 2022 ([#5009](https://github.com/ajaxorg/ace/issues/5009)) ([e3f3e7a](https://github.com/ajaxorg/ace/commit/e3f3e7ab3efe540ac345325f06278a8ab1871371))\n* Better ES6 support for JavaScript Mode ([6fb39e3](https://github.com/ajaxorg/ace/commit/6fb39e38c79dd966233e48ed06be800c59c4c101))\n* Fix vim keybindings scroll to the selected line ([#4980](https://github.com/ajaxorg/ace/issues/4980)) ([8562f94](https://github.com/ajaxorg/ace/commit/8562f9493e0ebef865064992f0526fdc6df8535a))\n* show 2 context characters of a line when moving to it ([#4998](https://github.com/ajaxorg/ace/issues/4998)) ([743190e](https://github.com/ajaxorg/ace/commit/743190ea71841c0186b2f513b3d1e1a9e30d3de3))\n* Update ace.d.ts typings for navigate ([#5011](https://github.com/ajaxorg/ace/issues/5011)) ([a302709](https://github.com/ajaxorg/ace/commit/a30270990cc0041edb6985059915f96524ebb154))\n\n### [1.13.2](https://github.com/ajaxorg/ace/compare/v1.13.1...v1.13.2) (2022-12-07)\n\n\n### Bug Fixes\n\n* Add missing options to `EditorOptions` ([#5003](https://github.com/ajaxorg/ace/issues/5003)) ([451b63f](https://github.com/ajaxorg/ace/commit/451b63f2243762d6de2fc5b9ee8c580c348b933c))\n* Better ES6 support for JavaScript Mode ([6fb39e3](https://github.com/ajaxorg/ace/commit/6fb39e38c79dd966233e48ed06be800c59c4c101))\n* Fix vim keybindings scroll to the selected line ([#4980](https://github.com/ajaxorg/ace/issues/4980)) ([8562f94](https://github.com/ajaxorg/ace/commit/8562f9493e0ebef865064992f0526fdc6df8535a))\n* show 2 context characters of a line when moving to it ([#4998](https://github.com/ajaxorg/ace/issues/4998)) ([743190e](https://github.com/ajaxorg/ace/commit/743190ea71841c0186b2f513b3d1e1a9e30d3de3))\n\n### [1.13.1](https://github.com/ajaxorg/ace/compare/v1.13.0...v1.13.1) (2022-11-16)\n\n\n### Bug Fixes\n\n* Change curly braces insertion behavior for Markdown to act the same as for other braces ([#4994](https://github.com/ajaxorg/ace/issues/4994)) ([2760234](https://github.com/ajaxorg/ace/commit/2760234d3d8d1acba72a42df7763482655af5ebc))\n* incorrect cursor position for very long lines ([#4996](https://github.com/ajaxorg/ace/issues/4996)) ([e57a9d9](https://github.com/ajaxorg/ace/commit/e57a9d9eef0c056cd38a07c77c460bea39cc9551))\n\n## [1.13.0](https://github.com/ajaxorg/ace/compare/v1.12.5...v1.13.0) (2022-11-11)\n\n\n### Features\n\n* add highlight mode for Apache JEXL ([#4979](https://github.com/ajaxorg/ace/issues/4979)) ([4e8926e](https://github.com/ajaxorg/ace/commit/4e8926ef9f9207e57529e07cdbe2305b09e712e2))\n\n\n### Bug Fixes\n\n* Add missing options to `VirtualRendererOptions` and `EditorOptions` ([#4983](https://github.com/ajaxorg/ace/issues/4983)) ([19dd2ec](https://github.com/ajaxorg/ace/commit/19dd2ecc178bef2fedd6a53900f2db58ea7a3c23))\n* Fix of scroll while interrupting animation ([#4993](https://github.com/ajaxorg/ace/issues/4993)) ([0092f3f](https://github.com/ajaxorg/ace/commit/0092f3f8c1f0d9c8a0b8bebe58cc3517931697b7))\n* rare case when document passed to `dom.scrollbarWidth` doesn't have `documentElement` ([#4981](https://github.com/ajaxorg/ace/issues/4981)) ([df44158](https://github.com/ajaxorg/ace/commit/df441585ef44e17a027141e3ceed648e104e9cf9))\n\n### [1.12.5](https://github.com/ajaxorg/ace/compare/v1.12.4...v1.12.5) (2022-11-01)\n\n\n### Bug Fixes\n\n* enableLiveAutocompletion documentation ([#4976](https://github.com/ajaxorg/ace/issues/4976)) ([987ab76](https://github.com/ajaxorg/ace/commit/987ab7602e06acc9b08c75914f5c1335d5cdc8cc))\n* vim \"normal\" mode brackets highlighting ([0fbc54c](https://github.com/ajaxorg/ace/commit/0fbc54cc5130b0271928995660413ba0fab678cb))\n\n### [1.12.4](https://github.com/ajaxorg/ace/compare/v1.12.3...v1.12.4) (2022-10-31)\n\n\n### Bug Fixes\n\n* Open valid url under cursor ([#4970](https://github.com/ajaxorg/ace/issues/4970)) ([bf2913a](https://github.com/ajaxorg/ace/commit/bf2913a71624e94d13727115b2aa0ef0c279c89f))\n* Update for Csound 6.18.0 ([#4974](https://github.com/ajaxorg/ace/issues/4974)) ([6886b02](https://github.com/ajaxorg/ace/commit/6886b0233e9e1d8d6cce5d3ade7b27fe4527c940))\n* update/add missing demo samples ([#4975](https://github.com/ajaxorg/ace/issues/4975)) ([2b8236e](https://github.com/ajaxorg/ace/commit/2b8236eaf1df10caa9ff45a06902df14947cd968))\n\n### [1.12.3](https://github.com/ajaxorg/ace/compare/v1.12.2...v1.12.3) (2022-10-18)\n\n\n### Bug Fixes\n\n* Fix syntax error in the custom scroll CSS ([#4968](https://github.com/ajaxorg/ace/issues/4968)) ([f2a424a](https://github.com/ajaxorg/ace/commit/f2a424a649f655b9511b1bb6047097634edb0e3f))\n\n### [1.12.2](https://github.com/ajaxorg/ace/compare/v1.12.1...v1.12.2) (2022-10-18)\n\n\n### Bug Fixes\n\n* custom scrollbar breaks csp mode ([#4967](https://github.com/ajaxorg/ace/issues/4967)) ([be8eb12](https://github.com/ajaxorg/ace/commit/be8eb1236fb7e1d27cedf033d301f094ec6764e5))\n* find all in range bug ([13bd553](https://github.com/ajaxorg/ace/commit/13bd55348dc8de5c547c74ec0e48c52b6db96a26))\n* Namespace-relative names for php ([#4963](https://github.com/ajaxorg/ace/issues/4963)) ([96e4066](https://github.com/ajaxorg/ace/commit/96e4066341fb7b82d02ad8272929711073d3bfc4))\n\n### [1.12.1](https://github.com/ajaxorg/ace/compare/v1.12.0...v1.12.1) (2022-10-17)\n\n\n### Bug Fixes\n\n* php worker rules for T_NAME_FULLY_QUALIFIED ([#4960](https://github.com/ajaxorg/ace/issues/4960)) ([52dbb05](https://github.com/ajaxorg/ace/commit/52dbb0577693e29f124a1f16008b4e11e2ce7c02))\n* recognisition of uppercase hex numbers for stylus mode ([#4962](https://github.com/ajaxorg/ace/issues/4962)) ([87e0dc7](https://github.com/ajaxorg/ace/commit/87e0dc7b868798300e874e39304aeda18d3d1a76))\n\n## [1.12.0](https://github.com/ajaxorg/ace/compare/v1.11.2...v1.12.0) (2022-10-15)\n\n\n### Features\n\n* implement BibTeX mode highlighting ([ab9e191](https://github.com/ajaxorg/ace/commit/ab9e1916cb3363260de58b808bdc21fd6bc01618))\n\n\n### Bug Fixes\n\n* `MockDom's` `ClassList` `toggle` and `contains` methods return `boolean` instead of `void` ([e8c0a1f](https://github.com/ajaxorg/ace/commit/e8c0a1f35d302966626896aaf84b056e76a8e66e))\n* change lua version to 5.3 ([#4954](https://github.com/ajaxorg/ace/issues/4954)) ([fc56af5](https://github.com/ajaxorg/ace/commit/fc56af5936a2ebfdfa0871ca6a68ccf7ecc7dbf0))\n* documentation for TokenIterator methods ([#4955](https://github.com/ajaxorg/ace/issues/4955)) ([6bff7b4](https://github.com/ajaxorg/ace/commit/6bff7b43c7ad34dd5fafc81c5de773e9d709026d))\n* Fixed comment folding bugs for html (xml like languages) ([#4910](https://github.com/ajaxorg/ace/issues/4910)) ([5279a8a](https://github.com/ajaxorg/ace/commit/5279a8a71719bf5c7099db1774a3d9669d9e5694))\n* mode change for vim tests ([236a31e](https://github.com/ajaxorg/ace/commit/236a31e5d69fd4fd874b667b38dd1bf0685f75c5))\n* php worker rules for `T_NAME_FULLY_QUALIFIED`, `T_NAME_QUALIFIED`, `T_NAME_RELATIVE` namespaced names tokens ([#4948](https://github.com/ajaxorg/ace/issues/4948)) ([059ff71](https://github.com/ajaxorg/ace/commit/059ff7186ac95d38fa11821488c847d3786d3486))\n* tools to work with new ace project structure ([7894c4b](https://github.com/ajaxorg/ace/commit/7894c4bbc6da5eb3521efb3b89b1a189202c2497))\n\n### [1.11.2](https://github.com/ajaxorg/ace/compare/v1.11.1...v1.11.2) (2022-09-26)\n\n\n### Bug Fixes\n\n* Fixed handling surrogare characters in insert, replace, delete mode in Vim ([72fd4b7](https://github.com/ajaxorg/ace/commit/72fd4b7b616f070be198dc8fc437d48a74637a53))\n* Fixed handling surrogate characters in insert-after mode in Vim ([38f893a](https://github.com/ajaxorg/ace/commit/38f893a13b1f1dedea4407a8f3ef1d6098873269))\n\n### [1.11.1](https://github.com/ajaxorg/ace/compare/v1.11.0...v1.11.1) (2022-09-23)\n\n\n### Bug Fixes\n\n* Discrepancy between keywords used by mode-aql.js in the current version and the version used by arangodb ([1503dd0](https://github.com/ajaxorg/ace/commit/1503dd06f2d651d16af964978fb8c62e0304b6d6))\n* The editor can be crashed by passing in undefined into the setValue method ([56e6e56](https://github.com/ajaxorg/ace/commit/56e6e56137ea5717009e3687019f64dae7f88da2))\n* Update vim mode ([#4933](https://github.com/ajaxorg/ace/issues/4933)) ([3b89ed0](https://github.com/ajaxorg/ace/commit/3b89ed06069cb45edb59b7442b5cc6c15b33cfa4))\n\n## [1.11.0](https://github.com/ajaxorg/ace/compare/v1.10.1...v1.11.0) (2022-09-20)\n\n\n### Features\n\n* add gutter indicators for annotations; add custom scrollbar to display gutter indicators ([62fb0d8](https://github.com/ajaxorg/ace/commit/62fb0d8fba813241d01356962ed20ac868a29ede))\n\n\n### Bug Fixes\n\n* change scroll behaviour for `onmousedown` to immediate scroll to point ([392b224](https://github.com/ajaxorg/ace/commit/392b224ceb4e82b4d906c36aef2ea4953e3d440e))\n* Do not try apply highlight indent guide if the file is empty ([#4928](https://github.com/ajaxorg/ace/issues/4928)) ([a90ef27](https://github.com/ajaxorg/ace/commit/a90ef275298b524c493076e47aae13036f6e6271))\n* restrict annotation mark max height and optimise marks coords on canvas ([a6e2259](https://github.com/ajaxorg/ace/commit/a6e2259eb0a282c62fd9e6fde31d86b6c14ec06d))\n\n### [1.10.1](https://github.com/ajaxorg/ace/compare/v1.10.0...v1.10.1) (2022-09-06)\n\n\n### Bug Fixes\n\n* prevent javascript snippets file confusing old packagers ([#4917](https://github.com/ajaxorg/ace/issues/4917)) ([5d7b65c](https://github.com/ajaxorg/ace/commit/5d7b65c30aff0106a7001f68ecdf13a23893eaad))\n\n## [1.10.0](https://github.com/ajaxorg/ace/compare/v1.9.6...v1.10.0) (2022-08-31)\n\n\n### Features\n\n* editor option for indent guide highlighting ([f1f6517](https://github.com/ajaxorg/ace/commit/f1f6517a30d6819d1c8ca045744cdeb2925ccf0a))\n\n\n### Bug Fixes\n\n* add mock `getHighlightIndentGuides` and `setHighlightIndentGuides` for old tests to work ([4067512](https://github.com/ajaxorg/ace/commit/4067512a72934b23a0866eca33812425c37a7363))\n* added \"flex-start\" and \"flex-end\" ([#4912](https://github.com/ajaxorg/ace/issues/4912)) ([3e14988](https://github.com/ajaxorg/ace/commit/3e14988209354f94483307f168705690e15adaf5))\n* Fix problematic semicolon in CSS media queries ([#4849](https://github.com/ajaxorg/ace/issues/4849)) ([18a459a](https://github.com/ajaxorg/ace/commit/18a459a26430bfa58e0f798c4bacce6a799c77bd))\n* more optimal way to accessing an element's list of classes; mark `highlightIndentGuide` as internal property ([855a874](https://github.com/ajaxorg/ace/commit/855a874ffde4824bb8de6e56cb44fad64d49725b))\n* strictly equal instead of loosely ([d4c1ab8](https://github.com/ajaxorg/ace/commit/d4c1ab8ef6ee608e2570b7ca6d1d941c5a6628a9))\n* Updated Jshint to 2.13.5 ([#4911](https://github.com/ajaxorg/ace/issues/4911)) ([2401fbd](https://github.com/ajaxorg/ace/commit/2401fbd93f0d61cc01150c1071145e974dd6693f))\n\n### [1.9.6](https://github.com/ajaxorg/ace/compare/v1.9.5...v1.9.6) (2022-08-17)\n\n\n### Bug Fixes\n\n* better way to extract css for csp environments ([1b0612b](https://github.com/ajaxorg/ace/commit/1b0612b5a5ed33a2f1931e4aa08cb2d54ec8585c))\n\n### [1.9.5](https://github.com/ajaxorg/ace/compare/v1.9.4...v1.9.5) (2022-08-10)\n\n\n### Bug Fixes\n\n* reverted fix build script CSS extract with `options.compress` ([#4894](https://github.com/ajaxorg/ace/issues/4894)) ([8fa4500](https://github.com/ajaxorg/ace/commit/8fa45008887c957bc9c78c65e805e73240f2b33f))\n\n### [1.9.4](https://github.com/ajaxorg/ace/compare/v1.9.2...v1.9.4) (2022-08-09)\n\n### [1.9.3](https://github.com/ajaxorg/ace/compare/v1.9.2...v1.9.3) (2022-08-08)\n\n### [1.9.2](https://github.com/ajaxorg/ace/compare/v1.9.1...v1.9.2) (2022-08-08)\n\n### [1.9.1](https://github.com/ajaxorg/ace/compare/v1.9.0...v1.9.1) (2022-08-08)\n\n## [1.9.0](https://github.com/ajaxorg/ace/compare/v1.8.1...v1.9.0) (2022-08-08)\n\n\n### Features\n\n* added ability to limit amount of undos/redos ([#4872](https://github.com/ajaxorg/ace/issues/4872)) ([897ee0a](https://github.com/ajaxorg/ace/commit/897ee0a071ef4341338a285a1d9d8781fe5689de))\n* publish Ace source code to ace-code NPM package ([#4881](https://github.com/ajaxorg/ace/issues/4881)) ([66cf041](https://github.com/ajaxorg/ace/commit/66cf0418bedf221a507d9a173583538c97885410))\n\n\n### Bug Fixes\n\n* Fix determination of anonymous code blocks in Postgres Mode (fixes [#4790](https://github.com/ajaxorg/ace/issues/4790)) ([06f7e22](https://github.com/ajaxorg/ace/commit/06f7e2290543ca6566aab56228a8fc8daddfcf55))\n* Fixed Ace typings ([23208f2](https://github.com/ajaxorg/ace/commit/23208f2f19020d1f69b90bc3b02460bda8422072))\n* Fixed jsDoc annotations ([e15abb4](https://github.com/ajaxorg/ace/commit/e15abb443abfad2de59c620ce49fc5498ce6d33e)), closes [#4879](https://github.com/ajaxorg/ace/issues/4879)\n* refactor of kotlin mode to simplify states and resolve incorrect highlights ([a30a99d](https://github.com/ajaxorg/ace/commit/a30a99df731c2f10c2006181ca58a96e7fc21155))\n* returned precise highlight for functions params, generics and types ([967aa6b](https://github.com/ajaxorg/ace/commit/967aa6b05c4a69a5deac1b20c297648444ade7d6))\n* Rust identifiers normally recognised now; generics highlight support; doc comments support ([#4868](https://github.com/ajaxorg/ace/issues/4868)) ([bbb5800](https://github.com/ajaxorg/ace/commit/bbb5800b4cf56d2996691edc63edc2783e19f427))\n\n### [1.8.1](https://github.com/ajaxorg/ace/compare/v1.8.0...v1.8.1) (2022-07-21)\n\n\n### Bug Fixes\n\n* prevent race condition when creating css files in build ([1777bfb](https://github.com/ajaxorg/ace/commit/1777bfb7dca4dcaf575293ac9cacbc284f692351))\n\n## [1.8.0](https://github.com/ajaxorg/ace/compare/v1.7.1...v1.8.0) (2022-07-20)\n\n\n### Features\n\n* Use mini require ([#4845](https://github.com/ajaxorg/ace/issues/4845)) ([b9fabd4](https://github.com/ajaxorg/ace/commit/b9fabd47c0765d40117809cd3978b95d593370fb))\n\n\n### Bug Fixes\n\n* add undocumented Target command ([62e8e9e](https://github.com/ajaxorg/ace/commit/62e8e9e4d3b21552dd83d454b7fd55d4981d096a)), closes [#4839](https://github.com/ajaxorg/ace/issues/4839)\n* added NSIS 3.08 commands ([acad68c](https://github.com/ajaxorg/ace/commit/acad68cf92f5372257b061e300e31f71df9c62e9)), closes [#4838](https://github.com/ajaxorg/ace/issues/4838)\n* **bidihandler:** check for undefined before access length property on `splits` variable ([457b657](https://github.com/ajaxorg/ace/commit/457b65748f331740ded529fd7bbd06b86819fa4e))\n* correct highlight of php heredoc strings with one word on line ([ae4564c](https://github.com/ajaxorg/ace/commit/ae4564c2961b006ca849625a0dee1093061eba5a))\n* Fixed typo in Nord Dark theme. ([#4843](https://github.com/ajaxorg/ace/issues/4843)) ([38bf666](https://github.com/ajaxorg/ace/commit/38bf6663f43be1c45bfba3dc68c4a4820fb2661d))\n* Move session.onChange and placeholder.onChange handlers to be first in the change event handler queue ([bcb51f2](https://github.com/ajaxorg/ace/commit/bcb51f2b2a2ba2e1f30ebf543d97e7450574763f))\n* reuse `getTargetDir` function ([b89c4db](https://github.com/ajaxorg/ace/commit/b89c4db3424687856ff9c9e732435c35438b0cb9))\n* type declarations ([a8830fc](https://github.com/ajaxorg/ace/commit/a8830fc83708a7e51053038f1c6d7fde23e82e9d))\n\n### [1.7.1](https://github.com/ajaxorg/ace/compare/v1.7.0...v1.7.1) (2022-06-29)\n\n\n### Bug Fixes\n\n* Fixed accessing properties when err is null in onerror handler ([3b62a07](https://github.com/ajaxorg/ace/commit/3b62a0713e68fd76bfa9c52fa2112b56888d2349))\n* Uncaught TypeError: Cannot read properties of undefined in worker code ([ce068ac](https://github.com/ajaxorg/ace/commit/ce068ac29f0056f6a10d0fc99181b8ba3e274cfe))\n\n## [1.7.0](https://github.com/ajaxorg/ace/compare/v1.6.1...v1.7.0) (2022-06-28)\n\n\n### Features\n\n* Add Robot Framework syntax highlighting ([773c0c5](https://github.com/ajaxorg/ace/commit/773c0c5d8b87fabb643d8c1e2053f536c53318e8)), closes [#4614](https://github.com/ajaxorg/ace/issues/4614)\n* Added YAML language linter ([451f915](https://github.com/ajaxorg/ace/commit/451f915e645f8a172098316196ae2e029fc26aed)), closes [#3979](https://github.com/ajaxorg/ace/issues/3979)\n\n\n### Bug Fixes\n\n* Added two tmthemes gruvbox dark (hard) and light (hard) ([6b1e67f](https://github.com/ajaxorg/ace/commit/6b1e67f844056fd238a35094e8f4e4b197e0a9a4)), closes [#3673](https://github.com/ajaxorg/ace/issues/3673)\n* adds ignore browserified dir to eslintignore ([56b591b](https://github.com/ajaxorg/ace/commit/56b591b49673fcd062fd53325f74629d4cf45e3f))\n* Allow setAnnotations to use custom className ([f505879](https://github.com/ajaxorg/ace/commit/f505879d0463a8b2781e0e7caaaa857444d51f85)), closes [#4362](https://github.com/ajaxorg/ace/issues/4362)\n* Avoid substitutions when Webpack was introduced ([a540323](https://github.com/ajaxorg/ace/commit/a540323e933c6bad164bdc9f103d8de744ee1546)), closes [#4476](https://github.com/ajaxorg/ace/issues/4476)\n* Highlighting DISTINCT keyword in SQL ([fb3820a](https://github.com/ajaxorg/ace/commit/fb3820a9c1624c49a149d388bf26aa3d504704bb)), closes [#4399](https://github.com/ajaxorg/ace/issues/4399)\n* Make sure completions aren't null or undefined ([a78e127](https://github.com/ajaxorg/ace/commit/a78e127e8fd7d724b96208447caa384783616323)), closes [#4608](https://github.com/ajaxorg/ace/issues/4608)\n\n### [1.6.1](https://github.com/ajaxorg/ace/compare/v1.6.0...v1.6.1) (2022-06-24)\n\n\n### Bug Fixes\n\n* Highlight unicode characters in Python function and class names ([be6f2d1](https://github.com/ajaxorg/ace/commit/be6f2d125a8ffe70ceb336051da6a161ce9cf1bc))\n* Incorrect YAML syntax highlighting for version numbers with multiple periods ([049d761](https://github.com/ajaxorg/ace/commit/049d76131e6122f7397fb30cc341db34baaf2813))\n* Incorrect YAML syntax highlighting for version numbers with multiple periods [#4827](https://github.com/ajaxorg/ace/issues/4827) ([915fcaf](https://github.com/ajaxorg/ace/commit/915fcaf542469a7dc0e3e7235f23a66a3abaadb9))\n\n## [1.6.0](https://github.com/ajaxorg/ace/compare/v1.5.3...v1.6.0) (2022-06-10)\n\n\n### Bug Fixes\n\n* Add class to tooltip DOM element distinguish errors from warnings ([#4810](https://github.com/ajaxorg/ace/issues/4810)) ([d2446d6](https://github.com/ajaxorg/ace/commit/d2446d68e7ace4d1a860de6a5a3e5031f074161b))\n* Autocomplete stopped working after upgrade to v1.5.2 ([48e6b60](https://github.com/ajaxorg/ace/commit/48e6b601ad5ae03a99a341843194c3854d2376c2))\n* Fix css EOF duplicate errors [#4816](https://github.com/ajaxorg/ace/issues/4816) ([48176f6](https://github.com/ajaxorg/ace/commit/48176f66c8ca0dd239968329b471f55b548ee467))\n* Fix overflow button for long lines with one token ([#4818](https://github.com/ajaxorg/ace/issues/4818)) ([3f93451](https://github.com/ajaxorg/ace/commit/3f934510514a25c53edf64bb80911a96b7133908))\n\n### [1.5.3](https://github.com/ajaxorg/ace/compare/v1.5.2...v1.5.3) (2022-05-31)\n\n\n### Bug Fixes\n\n* Colors for variable, function and constant should be different ([#4802](https://github.com/ajaxorg/ace/issues/4802)) ([9e81bda](https://github.com/ajaxorg/ace/commit/9e81bdafc3d563421cae458259d4c4e1b449a237))\n\n### [1.5.2](https://github.com/ajaxorg/ace/compare/v1.5.1...v1.5.2) (2022-05-30)\n\n\n### Bug Fixes\n\n* Added es6-shim library to fix old browsers ([#4720](https://github.com/ajaxorg/ace/issues/4720)) ([5ba71a0](https://github.com/ajaxorg/ace/commit/5ba71a0b8b0804d8cb385f7b2ee6b63e9bd1c3b8))\n* Added mockdom.before method ([#4724](https://github.com/ajaxorg/ace/issues/4724)) ([ffedba3](https://github.com/ajaxorg/ace/commit/ffedba3e18138d7739285d1a9b945d01d384948e))\n* Added support for cjs, mjs and log modes ([#4718](https://github.com/ajaxorg/ace/issues/4718)) ([375498a](https://github.com/ajaxorg/ace/commit/375498a12ff28cf955224baf60d242421817220d))\n* Adds missed functions into `php_completions.js` ([#4726](https://github.com/ajaxorg/ace/issues/4726)) ([7d5f4b8](https://github.com/ajaxorg/ace/commit/7d5f4b83f3ecc854e70f1508e9247e39ca9de30a))\n* Cannot read property of null for bgTokenizer after session is destroyed ([#4713](https://github.com/ajaxorg/ace/issues/4713)) ([d604f52](https://github.com/ajaxorg/ace/commit/d604f52d60e3ec2dced126337ad46a2cf71bf294))\n* Do not render selected word markers for the same range multiple times ([#4727](https://github.com/ajaxorg/ace/issues/4727)) ([cd30f59](https://github.com/ajaxorg/ace/commit/cd30f591e40d5286fdabaa9f688f3c6066fbffff))\n* Fixed popup CSS styling ([#4728](https://github.com/ajaxorg/ace/issues/4728)) ([045a3e6](https://github.com/ajaxorg/ace/commit/045a3e652ec37b1ab3b716cdf2bc24967a75eb77))\n* Fixed scrolling code lenses into view ([#4717](https://github.com/ajaxorg/ace/issues/4717)) ([710b14a](https://github.com/ajaxorg/ace/commit/710b14a7709d7499a4d182ad707b3cbbb6e73a64))\n* Multiple improvements for Ace themes ([#4715](https://github.com/ajaxorg/ace/issues/4715)) ([87ad55d](https://github.com/ajaxorg/ace/commit/87ad55daf243bdc619e15fbf220dc5ded235ed4c))\n* Only send postMessage through worker if it's defined ([#4722](https://github.com/ajaxorg/ace/issues/4722)) ([2afa4bf](https://github.com/ajaxorg/ace/commit/2afa4bf91bbc99f29bd0a7c1f0adc600af2ceeae))\n* Pass additional arguments for command.exec ([#4723](https://github.com/ajaxorg/ace/issues/4723)) ([3b36762](https://github.com/ajaxorg/ace/commit/3b36762c045246efbc2e11eaa08d20a90142d26f))\n* Removed focussing after timeout in text input ([#4716](https://github.com/ajaxorg/ace/issues/4716)) ([f8ea48f](https://github.com/ajaxorg/ace/commit/f8ea48f1fe6362696ed30e01030e75c117ce4323))\n* Throw invalid delta error if change is out of range and added V2 for worker and worker client ([#4721](https://github.com/ajaxorg/ace/issues/4721)) ([f269889](https://github.com/ajaxorg/ace/commit/f2698895d6617f1c7ebeed14b7ecbb1c5d71bb51))\n* Updated ace typings ([#4714](https://github.com/ajaxorg/ace/issues/4714)) ([d5d6f9a](https://github.com/ajaxorg/ace/commit/d5d6f9a32ad443d02aa89d9f140917637f5f52ab))\n\n### [1.5.1](https://github.com/ajaxorg/ace/compare/v1.5.0...v1.5.1) (2022-05-23)\n\n\n### Bug Fixes\n\n* Correctly tokenize YAML meta tags with non alphabetical characters after multiline string ([#4706](https://github.com/ajaxorg/ace/issues/4706)) ([0164811](https://github.com/ajaxorg/ace/commit/0164811fd95ecae9a46ce6fd7278e9c8b0b48eed))\n* Made commas be tokenized as punctuation operator instead of text in JSON ([#4703](https://github.com/ajaxorg/ace/issues/4703)) ([4c4883a](https://github.com/ajaxorg/ace/commit/4c4883a854836b652dbb798b78f207ae4b1924b8))\n* Multiple Partiql and Amazon Ion textual notation fixes ([#4686](https://github.com/ajaxorg/ace/issues/4686)) ([bffba8d](https://github.com/ajaxorg/ace/commit/bffba8d934773bc9236d741f1a1ce2237a971b3e))\n* PHP syntax fix for AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG ([#4705](https://github.com/ajaxorg/ace/issues/4705)) ([d59c22b](https://github.com/ajaxorg/ace/commit/d59c22b603eaa9d688249a3cc11812e641f25426))\n* Python functions should be highlighted as functions ([#4708](https://github.com/ajaxorg/ace/issues/4708)) ([b2aaf1f](https://github.com/ajaxorg/ace/commit/b2aaf1f5644397959bd8c94e9e705da176242edd))\n* Updated PHP mode to support PHP8.1 syntax ([#4696](https://github.com/ajaxorg/ace/issues/4696)) ([33cf1c6](https://github.com/ajaxorg/ace/commit/33cf1c66af970edaf7eb0a468276fca249b8a5c8))\n\n## [1.5.0](https://github.com/ajaxorg/ace/compare/v1.4.14...v1.5.0) (2022-05-12)\n\n\n### Features\n\n* Added ability to configure certain format options for beautify extension ([20275de](https://github.com/ajaxorg/ace/commit/20275de79c40636d27d5ce293cf528c915338fbd))\n\n\n### Bug Fixes\n\n* Modify syntax ([b78d772](https://github.com/ajaxorg/ace/commit/b78d77240e1909b9d91fcd2ac35a4c17af05f56b))\n* Render bidirectional unicode characters as control characters ([#4693](https://github.com/ajaxorg/ace/issues/4693)) ([4d2ecf0](https://github.com/ajaxorg/ace/commit/4d2ecf08afeb1556f2511a1423729c2549802da8))\n\n2022.01.26 Version 1.4.14\n\n- update vim mode\n- remove slow regex in beautify extension\n\n  2021.09.30 Version 1.4.13\n\n- added useStrictCSP global option to use in environments where dynamic style creation is disabled\n  see demo/csp.html for an example of a page which loads external css files instead of generating styles with javascript\n- updated vim mode, added support for gqq command\n\n  2020.07.06 Version 1.4.12\n\n- removed unused es5-shim\n- imporved ruby and vbscript highlighting and folding\n- workaround for double space being converted to dot on mobile keyboards\n\n  2020.04.15 Version 1.4.10\n\n- added workaround for chrome bug causing memory leak after calling editor.destroy\n- added code folding support for vbscript mode\n\n  2020.04.01 Version 1.4.9\n\n- added option to disable autoindent\n- added new language modes\n- fixed backspace not working with some mobile keyboards\n\n  2020.01.14 Version 1.4.8\n\n- highlight both matched braces, and highlight unmatched brace in red\n- improve snippet manager\n- compatibility with webpack file-loader v5\n- improve vim mode\n\n  2019.10.17 Version 1.4.7\n\n- add placeholder option\n\n  2019.09.08 Version 1.4.6\n\n- restore native behavior of ctrl-p on mac (jumptomatching command is moved to cmd-\\)\n- improve snippet manager\n- fix backspace handling on mobile\n\n  2019.06.17 Version 1.4.5\n\n- improve scrolling and selection on mobile\n- improve type definitions\n\n  2019.04.24 Version 1.4.4\n\n- add experimental command prompt\n- add chrystal, nim and nginx highlight rules\n- fix regression in vim mode on ios\n\n  2019.02.21 Version 1.4.3\n\n- add sublime keybindings\n- add rtl option\n- implement ` and < textobjects in vim mode\n\n  2018.11.21 Version 1.4.2\n\n- fix regression in vim mode\n- improve keyboard input handling on ipad and IE\n- add new syntax highlighters\n\n  2018.08.07 Version 1.4.1\n\n- fix regression in autocomplete\n\n  2018.08.06 Version 1.4.0\n\n- remove usage of innerHTML\n- improved handling of textinput for IME and mobile\n- add support for relative line numbers\n- improve autocompletion popup\n\n  2018.03.26 Version 1.3.3\n\n- fix regession in static-highlight extension\n- use css animation for cursor blinking\n\n  2018.03.21 Version 1.3.2\n\n- add experimental support for using ace-builds with webpack\n\n  2018.02.11 Version 1.3.1\n\n- fixed regression with selectionChange event not firing some times\n- improved handling of non-ascii characters in vim normal mode\n\n  2018.01.31 Version 1.3.0\n\n- added copy copyWithEmptySelection option\n- improved undoManager\n- improved settings_menu plugin\n- improved handling of files with very long lines\n- fixed bug with scrolling editor out of view in transformed elements\n\n  2017.10.17 Version 1.2.9\n\n- added support for bidirectional text, with monospace font (Alex Shensis)\n- added support for emoji 😊\n\n- new language modes\n\n  - Red (Toomas Vooglaid)\n  - CSound (Nathan Whetsell)\n  - JSSM (John Haugeland)\n\n- New Themes\n\n  - Dracula (Austin Schwartz)\n\n    2017.07.02 Version 1.2.8\n\n- Fixed small bugs in searchbox and autocompleter\n\n  2017.06.18 Version 1.2.7\n\n- Added Support for arrow keys on external IPad keyboard (Emanuele Tamponi)\n- added match counter to searchbox extension\n\n* implemented higlighting of multiline strings in yaml mode (Maxim Trushin)\n* improved haml syntax highlighter (Andrés Álvarez)\n\n  2016.12.03 Version 1.2.6\n\n- Fixed IME handling on new Chrome\n- Support for php 7 in the syntax checker\n\n  2016.08.16 Version 1.2.5\n\n- Fixed regression in noconflict mode\n\n  2016.07.27 Version 1.2.4\n\n- Maintenance release with several new modes and small bugfixes\n\n  2016.01.17 Version 1.2.3\n\n- Bugfixes\n  - fix memory leak in setSession (Tyler Stalder)\n  - double click not working on linux/mac\n- new language modes\n\n  - reStructuredText (Robin Jarry)\n  - NSIS (Jan T. Sott)\n\n    2015.10.28 Version 1.2.1\n\n- new language modes\n\n  - Swift\n  - JSX\n\n    2015.07.11 Version 1.2.0\n\n- New Features\n\n  - Indented soft wrap (danyaPostfactum)\n  - Rounded borders on selections\n\n- API Changes\n\n  - unified delta types `{start, end, action, lines}` (Alden Daniels https://github.com/ajaxorg/ace/pull/1745)\n  - \"change\" event listeners on session and editor get delta objects directly\n\n- new language modes\n\n  - SQLServer (Morgan Yarbrough)\n\n    2015.04.03 Version 1.1.9\n\n  - Small Enhancements and Bugfixes\n\n    2014.11.08 Version 1.1.8\n\n- API Changes\n  - `editor.commands.commandKeyBinding` now contains direct map from keys to commands instead of grouping them by hashid\n- New Features\n  - Improved autoindent for html and php modes (Adam Jimenez)\n  - Find All from searchbox (Colton Voege)\n- new language modes\n\n  - Elixir, Elm\n    2014.09.21 Version 1.1.7\n\n- Bugfixes\n\n  - fix several bugs in autocompletion\n  - workaround for inaccurate getBoundingClientRect on chrome 37\n\n    2014.08.17 Version 1.1.6\n\n- Bugfixes\n  - fix regression in double tap to highlight\n  - Improved Latex Mode (Daniel Felder)\n- API Changes\n\n  - editor.destroy destroys editor.session too (call editor.setSession(null) to prevent that)\n\n- new language modes\n\n* Praat (José Joaquín Atria)\n* Eiffel (Victorien Elvinger)\n* G-code (Adam Joseph Cook)\n  2014.07.09 Version 1.1.5\n\n- Bugfixes\n\n  - fix regression in autocomplete popup\n\n- new language modes\n\n* gitignore (Devon Carew)\n  2014.07.01 Version 1.1.4\n\n- New Features\n\n  - Highlight matching tags (Adam Jimenez)\n  - Improved jump to matching command (Adam Jimenez)\n\n- new language modes\n\n* AppleScript (Yaogang Lian)\n* Vala\n\n  2014.03.08 Version 1.1.3\n\n- New Features\n\n  - Allow syntax checkers to be loaded from CDN (Derk-Jan Hartman)\n  - Add ColdFusion behavior (Abram Adams)\n  - add showLineNumbers option\n  - Add html syntax checker (danyaPostfactum)\n\n- new language modes\n\n  - Gherkin (Patrick Nevels)\n  - Smarty\n\n    2013.12.02 Version 1.1.2\n\n- New Features\n  - Accessibility Theme for Ace (Peter Xiao)\n  - use snipetManager for expanding emmet snippets\n  - update jshint to 2.1.4\n  - improve php syntax checker (jdalegonzalez)\n  - add option for autoresizing\n  - add option for autohiding vertical scrollbar\n  - improvements to highlighting of xml like languages (danyaPostfactum)\n  - add support for autocompletion and snippets (gjtorikyan danyaPostfactum and others)\n  - add option to merge similar changes in undo history\n  - add scrollPastEnd option\n  - use html5 dragndrop for text dragging (danyaPostfactum)\n- API Changes\n\n  - fixed typo in HashHandler commmandManager\n\n- new language modes\n\n  - Nix (Zef Hemel)\n  - Protobuf (Zef Hemel)\n  - Soy\n  - Handlebars\n\n    2013.06.04 Version 1.1.1\n\n  - Improved emacs keybindings (Robert Krahn)\n  - Added markClean, isClean methods to UndoManager (Joonsoo Jeon)\n  - Do not allow `Toggle comments` command to remove spaces from indentation\n  - Softer colors for indent guides in dark themes\n\n- new language modes\n\n  - Ada\n  - Assembly_x86\n  - Cobol\n  - D\n  - ejs\n  - MATLAB\n  - MySQL\n  - Twig\n  - Verilog\n\n    2013.05.01, Version 1.1.0\n\n- API Changes\n\n  - Default position of the editor container is changed to relative. Add `.ace_editor {position: absolute}` css rule to restore old behavior\n  - Changed default line-height to `normal` to not conflict with bootstrap. Use `line-height: inherit` for old behavior.\n  - Changed marker types accepted by session.addMarker. It now accepts \"text\"|\"line\"|\"fullLine\"|\"screenLine\"\n  - Internal classnames used by editor were made more consistent\n  - Introduced `editor.setOption/getOption/setOptions/getOptions` methods\n  - Introduced positionToIndex, indexToPosition methods\n\n- New Features\n\n  - Improved emacs mode (chetstone)\n    with Incremental search and Occur modes (Robert Krahn)\n\n  - Improved ime handling\n  - Searchbox (Vlad Zinculescu)\n\n  - Added elastic tabstops lite extension (Garen Torikian)\n  - Added extension for whitespace manipulation\n  - Added extension for enabling spellchecking from contextmenu\n  - Added extension for displaying available keyboard shortcuts (Matthew Christopher Kastor-Inare III)\n  - Added extension for displaying options panel (Matthew Christopher Kastor-Inare III)\n  - Added modelist extension (Matthew Christopher Kastor-Inare III)\n\n  - Improved toggleCommentLines and added ToggleCommentBlock command\n  - `:;` pairing in CSS mode (danyaPostfactum)\n\n  - Added suppoert for Delete and SelectAll from context menu (danyaPostfactum)\n\n  - Make wrapping behavior optional\n  - Selective bracket insertion/skipping\n  - Added commands for increase/decrease numbers, sort lines (Vlad Zinculescu)\n  - Folding for Markdown, Lua, LaTeX\n  - Selective bracket insertion/skipping for C-like languages\n\n- Many new languages\n\n  - Scheme (Mu Lei)\n  - Dot (edwardsp)\n  - FreeMarker (nguillaumin)\n  - Tiny Mushcode (h3rb)\n  - Velocity (Ryan Griffith)\n  - TOML (Garen Torikian)\n  - LSL (Nemurimasu Neiro, Builders Brewery)\n  - Curly (Libo Cannici)\n  - vbScript (Jan Jongboom)\n  - R (RStudio)\n  - ABAP\n  - Lucene (Graham Scott)\n  - Haml (Garen Torikian)\n  - Objective-C (Garen Torikian)\n  - Makefile (Garen Torikian)\n  - TypeScript (Garen Torikian)\n  - Lisp (Garen Torikian)\n  - Stylus (Garen Torikian)\n  - Dart (Garen Torikian)\n\n- Live syntax checks\n\n  - PHP (danyaPostfactum)\n  - Lua\n\n- New Themes\n\n  - Chaos\n  - Terminal\n    2012.09.17, Version 1.0.0\n\n- New Features\n\n  - Multiple cursors and selections (https://c9.io/site/blog/2012/08/be-an-armenian-warrior-with-block-selection-on-steroids/)\n  - Fold buttons displayed in the gutter\n  - Indent Guides\n  - Completely reworked vim mode (Sergi Mansilla)\n  - Improved emacs keybindings\n  - Autoclosing of html tags (danyaPostfactum)\n\n- 20 New language modes\n\n  - Coldfusion (Russ)\n  - Diff\n  - GLSL (Ed Mackey)\n  - Go (Davide Saurino)\n  - Haxe (Jason O'Neil)\n  - Jade (Garen Torikian)\n  - jsx (Syu Kato)\n  - LaTeX (James Allen)\n  - Less (John Roepke)\n  - Liquid (Bernie Telles)\n  - Lua (Lee Gao)\n  - LuaPage (Choonster)\n  - Markdown (Chris Spencer)\n  - PostgreSQL (John DeSoi)\n  - Powershell (John Kane)\n  - Sh (Richo Healey)\n  - SQL (Jonathan Camile)\n  - Tcl (Cristoph Hochreiner)\n  - XQuery (William Candillion)\n  - Yaml (Meg Sharkey)\n\n  * Live syntax checks\n\n  - for XQuery and JSON\n\n- New Themes\n\n  - Ambiance (Irakli Gozalishvili)\n  - Dreamweaver (Adam Jimenez)\n  - Github (bootstraponline)\n  - Tommorrow themes (https://github.com/chriskempson/tomorrow-theme)\n  - XCode\n\n- Many Small Enhancements and Bugfixes\n\n  2011.08.02, Version 0.2.0\n\n- Split view (Julian Viereck)\n\n  - split editor area horizontally or vertivally to show two files at the same\n    time\n\n- Code Folding (Julian Viereck)\n\n  - Unstructured code folding\n  - Will be the basis for language aware folding\n\n- Mode behaviours (Chris Spencer)\n\n  - Adds mode specific hooks which allow transformations of entered text\n  - Autoclosing of braces, paranthesis and quotation marks in C style modes\n  - Autoclosing of angular brackets in XML style modes\n\n- New language modes\n  - Clojure (Carin Meier)\n  - C# (Rob Conery)\n  - Groovy (Ben Tilford)\n  - Scala (Ben Tilford)\n  - JSON\n  - OCaml (Sergi Mansilla)\n  - Perl (Panagiotis Astithas)\n  - SCSS/SASS (Andreas Madsen)\n  - SVG\n  - Textile (Kelley van Evert)\n  - SCAD (Jacob Hansson)\n- Live syntax checks\n\n  - Lint for CSS using CSS Lint <http://csslint.net/>\n  - CoffeeScript\n\n- New Themes\n\n  - Crimson Editor (iebuggy)\n  - Merbivore (Michael Schwartz)\n  - Merbivore soft (Michael Schwartz)\n  - Solarized dark/light <http://ethanschoonover.com/solarized> (David Alan Hjelle)\n  - Vibrant Ink (Michael Schwartz)\n\n- Small Features/Enhancements\n\n  - Lots of render performance optimizations (Harutyun Amirjanyan)\n  - Improved Ruby highlighting (Chris Wanstrath, Trent Ogren)\n  - Improved PHP highlighting (Thomas Hruska)\n  - Improved CSS highlighting (Sean Kellogg)\n  - Clicks which cause the editor to be focused don't reset the selection\n  - Make padding text layer specific so that print margin and active line\n    highlight are not affected (Irakli Gozalishvili)\n  - Added setFontSize method\n  - Improved vi keybindings (Trent Ogren)\n  - When unfocused make cursor transparent instead of removing it (Harutyun Amirjanyan)\n  - Support for matching groups in tokenizer with arrays of tokens (Chris Spencer)\n\n- Bug fixes\n\n  - Add support for the new OSX scroll bars\n  - Properly highlight JavaScript regexp literals\n  - Proper handling of unicode characters in JavaScript identifiers\n  - Fix remove lines command on last line (Harutyun Amirjanyan)\n  - Fix scroll wheel sluggishness in Safari\n  - Make keyboard infrastructure route keys like []^$ the right way (Julian Viereck)\n\n    2011.02.14, Version 0.1.6\n\n- Floating Anchors\n  - An Anchor is a floating pointer in the document.\n  - Whenever text is inserted or deleted before the cursor, the position of\n    the cursor is updated\n  - Usesd for the cursor and selection\n  - Basis for bookmarks, multiple cursors and snippets in the future\n- Extensive support for Cocoa style keybindings on the Mac <https://github.com/ajaxorg/ace/issues/closed#issue/116/comment/767803>\n- New commands:\n  - center selection in viewport\n  - remove to end/start of line\n  - split line\n  - transpose letters\n- Refator markers\n  - Custom code can be used to render markers\n  - Markers can be in front or behind the text\n  - Markers are now stored in the session (was in the renderer)\n- Lots of IE8 fixes including copy, cut and selections\n- Unit tests can also be run in the browser\n  <https://github.com/ajaxorg/ace/blob/master/lib/ace/test/tests.html>\n- Soft wrap can adapt to the width of the editor (Mike Ratcliffe, Joe Cheng)\n- Add minimal node server server.js to run the Ace demo in Chrome\n- The top level editor.html demo has been renamed to index.html\n- Bug fixes\n\n  - Fixed gotoLine to consider wrapped lines when calculating where to scroll to (James Allen)\n  - Fixed isues when the editor was scrolled in the web page (Eric Allam)\n  - Highlighting of Python string literals\n  - Syntax rule for PHP comments\n\n    2011.02.08, Version 0.1.5\n\n- Add Coffeescript Mode (Satoshi Murakami)\n- Fix word wrap bug (Julian Viereck)\n- Fix packaged version of the Eclipse mode\n- Loading of workers is more robust\n- Fix \"click selection\"\n- Allow tokizing empty lines (Daniel Krech)\n- Make PageUp/Down behavior more consistent with native OS (Joe Cheng)\n\n  2011.02.04, Version 0.1.4\n\n- Add C/C++ mode contributed by Gastón Kleiman\n- Fix exception in key input\n\n  2011.02.04, Version 0.1.3\n\n- Let the packaged version play nice with requireJS\n- Add Ruby mode contributed by Shlomo Zalman Heigh\n- Add Java mode contributed by Tom Tasche\n- Fix annotation bug\n- Changing a document added a new empty line at the end\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0087890625,
          "content": "ace.c9.io"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.3037109375,
          "content": "## Code of Conduct\nThis project has adopted the [Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct). \nFor more information see the [Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact \nopensource-codeofconduct@amazon.com with any additional questions or comments.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.7001953125,
          "content": "Contributing\n------------\n\nAce is a community project and wouldn't be what it is without contributions! We actively encourage and support contributions. The Ace source code is released under the BSD License. This license is very simple, and is friendly to all kinds of projects, whether open source or not. Take charge of your editor and add your favorite language highlighting and keybindings!\n\nFeel free to fork and improve/enhance Ace any way you want. If you feel that the editor or the Ace community will benefit from your changes, please open a pull request. Do make sure that your changes are covered by test cases to pass the pull request checks which exists inorder to keep ace robust.\n\nHappy coding, Cloud9\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.455078125,
          "content": "Copyright (c) 2010, Ajax.org B.V.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of Ajax.org B.V. nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.0888671875,
          "content": ".PHONY : doc build clean dist\n\npre_build:\n\tgit rev-parse HEAD > .git-ref\n\tmkdir -p build/src\n\tmkdir -p build/demo/kitchen-sink\n\tmkdir -p build/textarea/src\n\t\n\tcp -r demo/kitchen-sink/styles.css build/demo/kitchen-sink/styles.css\n\tcp demo/kitchen-sink/logo.png build/demo/kitchen-sink/logo.png\n\tcp -r doc/site/images build/textarea\n\nbuild: pre_build\n\t./Makefile.dryice.js normal\n\t./Makefile.dryice.js demo\n\n# Minimal build: call Makefile.dryice.js only if our sources changed\nbasic: build/src/ace.js\n\nbuild/src/ace.js : ${wildcard lib/*} \\\n                   ${wildcard lib/*/*} \\\n                   ${wildcard lib/*/*/*} \\\n                   ${wildcard lib/*/*/*/*} \\\n                   ${wildcard lib/*/*/*/*/*} \\\n                   ${wildcard lib/*/*/*/*/*/*}\n\t./Makefile.dryice.js\n\ndoc:\n\tcd doc;\\\n\t(test -d node_modules && npm update) || npm install;\\\n\tnode build.js\n\nclean:\n\trm -rf build\n\trm -rf ace-*\n\trm -f ace-*.tgz\n\nace.tgz: build\n\tmv build ace-`./version.js`/\n\tcp Readme.md ace-`./version.js`/\n\tcp LICENSE ace-`./version.js`/\n\ttar cvfz ace-`./version.js`.tgz ace-`./version.js`/\n\ndist: clean build ace.tgz\n"
        },
        {
          "name": "Makefile.dryice.js",
          "type": "blob",
          "size": 33.0390625,
          "content": "#!/usr/bin/env node\n/* ***** BEGIN LICENSE BLOCK *****\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * ***** END LICENSE BLOCK ***** */\n\n/*global Buffer, setImmediate*/\n\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar copy = require('architect-build/copy');\nvar build = require('architect-build/build');\nvar {\n    updateDeclarationModuleNames,\n    generateDeclaration,\n    SEPARATE_MODULES\n} = require('./tool/ace_declaration_generator');\n\nvar ACE_HOME = __dirname;\nvar BUILD_DIR = ACE_HOME + \"/build\";\nvar CACHE = {};\n\nfunction generateAmdModules() {\n    var root = ACE_HOME + \"/\";\n    function iterate(dir) {\n        var filenames = fs.readdirSync(root + dir);\n        filenames.forEach(function(name) {\n            var path = dir + name;\n            var stat = fs.statSync(root + path);\n            var newPath = path.replace(\"src\", \"lib/ace\");\n            if (stat.isDirectory()) {\n                try {\n                    fs.mkdirSync(root + newPath);\n                } catch(e) {}\n                iterate(path + \"/\");\n            } else if (/\\.js/.test(name) && !/worker_client\\.js$/.test(name)) {\n                transform(path, newPath);\n            }\n        });\n    }\n    function transform(path, newPath) {\n        var data = fs.readFileSync(root + path, \"utf-8\");\n        data = \"define(function(require, exports, module){\"\n            + compileTypescript(data)\n            +\"\\n});\";\n        fs.writeFileSync(root + newPath, data, \"utf-8\");\n    }\n    function compileTypescript(code) {\n        var ts = require(\"typescript\");\n        return ts.transpileModule(code, {\n            compilerOptions: {\n                newLine: \"lf\",\n                downlevelIteration: true,\n                suppressExcessPropertyErrors: true,\n                module: ts.ModuleKind.CommonJS,\n                removeComments: false,\n                sourceMap: false,\n                inlineSourceMap: false,\n                target: \"ES5\"\n            },\n            fileName: \"\"\n        }).outputText;\n    }\n\n    iterate(\"src/\");\n}\n\nfunction main(args) {\n    if (args.indexOf(\"updateModes\") !== -1) {\n        return updateModes();\n    }\n    \n    var type = \"minimal\";\n    args = args.map(function(x) {\n        if (x[0] == \"-\" && x[1] != \"-\")\n            return \"-\" + x;\n        return x;\n    }).filter(Boolean);\n\n    if (args[2] && (args[2][0] != \"-\" || args[2].indexOf(\"h\") != -1))\n        type = args[2];\n\n    var i = args.indexOf(\"--target\");\n    if (i != -1 && args[i+1])\n        BUILD_DIR = args[i+1];\n\n    if (args.indexOf(\"--h\") != -1 || args.indexOf(\"-h\") != -1 || args.indexOf(\"--help\") != -1) {\n        return showHelp();\n    }\n    \n    if (type == \"css\") {\n        return extractCss();\n    }\n    if (type == \"nls\") {\n        return extractNls();\n    }\n\n    if (args.indexOf(\"--reuse\") === -1) {\n        console.log(\"updating files in lib/ace\");\n        generateAmdModules();\n    }\n\n    if (type == \"minimal\") {\n        buildAce({\n            compress: args.indexOf(\"--m\") != -1,\n            noconflict: args.indexOf(\"--nc\") != -1,\n            shrinkwrap: args.indexOf(\"--s\") != -1\n        });\n    } else if (type == \"normal\") {\n        ace();\n    } else if (type == \"demo\") {\n        demo();\n    } else if (type == \"full\") {\n        ace();\n        demo();\n    } else if (type == \"highlighter\") {\n        // TODO\n    }\n}\n\nfunction showHelp(type) {\n    console.log(\"--- Ace Dryice Build Tool ---\");\n    console.log(\"\");\n    console.log(\"Options:\");\n    console.log(\"  minimal      Places necessary Ace files out in build dir; uses configuration flags below [default]\");\n    console.log(\"  normal       Runs four Ace builds--minimal, minimal-noconflict, minimal-min, and minimal-noconflict-min\");\n    console.log(\"  demo         Runs demo build of Ace\");\n    console.log(\"  full         all of above\");\n    console.log(\"  highlighter  \");\n    console.log(\"  css          extract css files\");\n    console.log(\"  nls          extract nls messages\");\n    console.log(\"args:\");\n    console.log(\"  --target ./path   path to build folder\");\n    console.log(\"flags:\");\n    console.log(\"  --h                print this help\");\n    console.log(\"  --m                minify\");\n    console.log(\"  --nc               namespace require\");\n    console.log(\"  --s                shrinkwrap (combines all output files into one)\");\n    console.log(\"\");\n    if (type)\n        console.log(\"  output for \" + type + \" generated in \" + BUILD_DIR);\n}\n\nfunction ace() {\n    console.log('# ace License | Readme | Changelog ---------');\n\n    copy.file(ACE_HOME + \"/build_support/editor.html\",  BUILD_DIR + \"/editor.html\");\n    copy.file(ACE_HOME + \"/LICENSE\", BUILD_DIR + \"/LICENSE\");\n    copy.file(ACE_HOME + \"/CHANGELOG.md\", BUILD_DIR + \"/CHANGELOG.md\");\n    \n    console.log('# ace ---------');\n    for (var i = 0; i < 4; i++) {\n        buildAce({compress: i & 2, noconflict: i & 1, check: true});\n    }\n}\n\nfunction correctDeclarationsForBuild(path, additionalDeclarations) {\n    var definitions = fs.readFileSync(path, 'utf8');\n    var newDefinitions = updateDeclarationModuleNames(definitions);\n    if (additionalDeclarations) {\n        newDefinitions = newDefinitions + '\\n' + additionalDeclarations;\n    }\n    fs.writeFileSync(path, newDefinitions);\n}\n\nfunction buildTypes() {\n    // ace-builds package has different structure and can't use mode types defined for the ace-code.\n    var paths = fs.readdirSync(BUILD_DIR + '/src-noconflict');\n\n    var typeDir = BUILD_DIR + \"/types\";\n\n    if (!fs.existsSync(typeDir)) {\n        fs.mkdirSync(typeDir);\n    }\n\n    fs.readdirSync(BUILD_DIR + '/src-noconflict/snippets').forEach(function(path) {\n        paths.push(\"snippets/\" + path);\n    });\n\n    var moduleNameRegex = /^(keybinding)-/;\n\n    var pathModules = [\n        \"declare module 'ace-builds/webpack-resolver';\",\n        \"declare module 'ace-builds/esm-resolver';\",\n        \"declare module 'ace-builds/src-noconflict/ace';\"\n    ].concat(paths.map(function(path) {\n        if (moduleNameRegex.test(path)) {\n            var moduleName = path.split('.')[0];\n            return \"declare module 'ace-builds/src-noconflict/\" + moduleName + \"';\";\n        }\n    }).filter(Boolean)).join(\"\\n\") + \"\\n\";\n    \n    fs.copyFileSync(ACE_HOME + '/ace-internal.d.ts', BUILD_DIR + '/ace.d.ts');\n    generateDeclaration(BUILD_DIR + '/ace.d.ts');\n    fs.copyFileSync(ACE_HOME + '/ace-modes.d.ts', BUILD_DIR + '/ace-modes.d.ts');\n    correctDeclarationsForBuild(BUILD_DIR + '/ace.d.ts', pathModules);\n    correctDeclarationsForBuild(BUILD_DIR + '/ace-modes.d.ts');\n\n    let allModules = SEPARATE_MODULES;\n    allModules.push(\"modules\"); // core modules\n    allModules.forEach(function (key) {\n        let fileName = '/ace-' + key + '.d.ts';\n        fs.copyFileSync(ACE_HOME + '/types' + fileName, BUILD_DIR + '/types' + fileName);\n        correctDeclarationsForBuild(BUILD_DIR + '/types' + fileName);\n    });\n    \n    var esmUrls = [];\n\n    var loader = paths.map(function(path) {\n        if (/\\.js$/.test(path) && !/^ace\\.js$/.test(path)) {\n            var moduleName = path.split('.')[0].replace(/-/, \"/\");\n            if (/^worker/.test(moduleName))\n                moduleName = \"mode\" + moduleName.slice(6) + \"_worker\";\n            moduleName = moduleName.replace(/keybinding/, \"keyboard\");\n            esmUrls.push(\"ace.config.setModuleLoader('ace/\" + moduleName + \"', () => import('./src-noconflict/\" + path + \"'));\");\n            return \"ace.config.setModuleUrl('ace/\" + moduleName + \"', require('file-loader?esModule=false!./src-noconflict/\" + path + \"'));\";\n        }\n    }).join('\\n');\n    var esmLoader = esmUrls.join('\\n');\n\n    fs.writeFileSync(BUILD_DIR + '/webpack-resolver.js', loader, \"utf8\");\n    fs.writeFileSync(BUILD_DIR + '/esm-resolver.js', esmLoader, \"utf8\");\n}\n\nfunction demo() {\n    console.log('# kitchen sink ---------');\n\n    var version = \"\", ref = \"\";\n    try {\n        version = JSON.parse(fs.readFileSync(ACE_HOME + \"/package.json\")).version;\n        ref = fs.readFileSync(ACE_HOME + \"/.git-ref\").toString();\n    } catch(e) {}\n\n    function changeComments(data) {\n        return (data\n            .replace(\"doc/site/images/ace-logo.png\", \"demo/kitchen-sink/ace-logo.png\")\n            .replace(/<!\\-\\-DEVEL[\\d\\D]*?DEVEL\\-\\->/g, \"\")\n            .replace(/PACKAGE\\-\\->|<!\\-\\-PACKAGE/g, \"\")\n            .replace(/\\/\\*DEVEL[\\d\\D]*?DEVEL\\*\\//g, \"\")\n            .replace(/PACKAGE\\*\\/|\\/\\*PACKAGE/g, \"\")\n            .replace(\"%version%\", version)\n            .replace(\"%commit%\", ref)\n        );\n    }\n    \n    copy(ACE_HOME +\"/demo/kitchen-sink/docs/\", BUILD_DIR + \"/demo/kitchen-sink/docs/\");\n    \n    copy.file(ACE_HOME + \"/demo/kitchen-sink/logo.png\", BUILD_DIR + \"/demo/kitchen-sink/logo.png\");\n    copy.file(ACE_HOME + \"/demo/kitchen-sink/styles.css\", BUILD_DIR + \"/demo/kitchen-sink/styles.css\");\n    copy.file(ACE_HOME + \"/kitchen-sink.html\", BUILD_DIR + \"/kitchen-sink.html\", changeComments);\n\n    buildSubmodule({}, {\n        require: [\"kitchen-sink/demo\"],\n        projectType: \"demo\"\n    }, BUILD_DIR + \"/demo/kitchen-sink/demo\");\n\n    copy(ACE_HOME + \"/demo/\", BUILD_DIR + \"/demo/\", {\n        shallow: true,\n        exclude: /\\s|requirejs/,\n        include: /\\.(js|html)$/,\n        replace: function(source) {\n            if (!/^\\s*</.test(source))\n                return source;\n            var removeRequireJS;\n            source = source.replace(/<script src=\"kitchen-sink\\/require.js\"[\\s\\S]+?require\\(\\[([^\\]]+).*/, function(e, m) {\n                removeRequireJS = true;\n                var scripts = m.split(/,\\s*/);\n                var result = [];\n                function comment(str) {result.push(\"<!-- \" + str + \" -->\");}\n                function script(str) {result.push('<script src=\"../src/' + str + '.js\"></script>');}\n                scripts.forEach(function(s) {\n                    s = s.replace(/\"/g, \"\");\n                    if (s == \"ace/ace\") {\n                        comment(\"load ace\");\n                        script(\"ace\");\n                    } else {\n                        var extName = s.match(/[^/]*$/)[0];\n                        comment(\"load ace \" + extName + \" extension\");\n                        script(\"ext-\" + extName);\n                    }\n                });\n                result.push(\"<script>\");\n                return result.join(\"\\n\");\n            });\n            if (removeRequireJS) {\n                source = source.replace(/\\s*\\}\\);?\\s*(<\\/script>)/, \"\\n$1\");\n                source = source.replace(/( |^)require\\(/gm, \"$1ace.require(\");\n            }\n            source = source.replace(/\"\\.\\.\\/build\\//g, function(e) {\n                console.log(e); return '\"../';\n            });\n            return source;\n        }\n    });\n}\n\nfunction jsFileList(path, filter) {\n    path = ACE_HOME + \"/\" + path;\n    if (!filter)\n        filter = /_test/;\n\n    return fs.readdirSync(path).map(function(x) {\n        if (x.slice(-3) == \".js\" && !filter.test(x) && !/\\s|BASE|(\\b|_)dummy(\\b|_)|[\\-\\.]css\\.js$/.test(x))\n            return x.slice(0, -3);\n    }).filter(Boolean);\n}\n\nfunction searchFiles(dir, fn) {\n    var files = fs.readdirSync(dir);\n    files.forEach(function(name) {\n        var path = dir + \"/\" + name;\n        try {\n            var stat = fs.statSync(path);\n        } catch (e) {\n            return;\n        }\n        if (stat.isFile() && /\\.js$/.test(path)) {\n            fn(path);\n        } else if (stat.isDirectory()) {\n            if (/node_modules|[#\\s]/.test(name)) return;\n            searchFiles(path, fn);\n        }\n    });\n}\n\nfunction workers(path) {\n    return jsFileList(path).map(function(x) {\n        if (x.slice(-7) == \"_worker\")\n            return x.slice(0, -7);\n    }).filter(function(x) { return !!x; });\n}\n\nfunction modeList(path) {\n    path = path || \"lib/ace/mode\";\n    return jsFileList(path, /_highlight_rules|_test|_worker|xml_util|_outdent|behaviour|completions/);\n}\n\nfunction buildAceModule(opts, callback) {\n    // calling buildAceModuleInternal many times in parallel is slow, so we use queue\n    if (!buildAceModule.queue) {\n        buildAceModule.queue = [];\n        buildAceModule.dequeue = function() {\n            if (buildAceModule.running) return;\n            var call = buildAceModule.queue.shift();\n            buildAceModule.running = call;\n            if (call) {\n                setImmediate(function() {\n                    buildAceModuleInternal.apply(null, call);\n                });\n            }\n        };\n    }\n    \n    buildAceModule.queue.push([opts, function(err, result) {\n        callback && callback(err, result);\n        buildAceModule.running = null;\n        buildAceModule.dequeue();\n    }]);\n\n    if (!buildAceModule.running) {\n        buildAceModule.dequeue();\n    } else {\n        process.nextTick(buildAceModule.dequeue);\n    }\n}\n\nfunction buildAceModuleInternal(opts, callback) {\n    var cache = opts.cache == undefined ? CACHE : opts.cache;\n    var key = opts.require + \"|\" + opts.projectType;\n    if (cache && cache.configs && cache.configs[key])\n        return write(null, cache.configs[key]);\n        \n    var pathConfig = {\n        paths: {\n            ace: ACE_HOME + \"/lib/ace\",\n            \"kitchen-sink\": ACE_HOME + \"/demo/kitchen-sink\",\n            build_support:  ACE_HOME + \"/build_support\"\n        },\n        root: ACE_HOME\n    };\n        \n    function write(err, result) {\n        if (cache && key && !(cache.configs && cache.configs[key])) {\n            cache.configs = cache.configs || Object.create(null);\n            cache.configs[key] = result;\n            result.sources = result.sources.map(function(pkg) {\n                return {deps: pkg.deps};\n            });\n        } \n        \n        if (!opts.outputFile)\n            return callback(err, result);\n        \n        var code = result.code;\n        if (opts.compress) {\n            if (!result.codeMin)\n                result.codeMin = compress(result.code);\n            code = result.codeMin;\n        }\n            \n        var targetDir = getTargetDir(opts);\n        \n        var to = /^([\\\\/]|\\w:)/.test(opts.outputFile)\n            ? opts.outputFile\n            : path.join(opts.outputFolder || targetDir, opts.outputFile);\n    \n        var filters = [];\n\n        var ns = opts.ns || \"ace\";\n        if (opts.filters)\n            filters = filters.concat(opts.filters);\n    \n        if (opts.noconflict)\n            filters.push(namespace(ns));\n        var projectType = opts.projectType;\n        if (projectType !== \"worker\") {\n            filters.push(exportAce(ns, opts.require[0],\n                opts.noconflict ? ns : \"\", projectType !== \"main\"));\n        }\n        \n        filters.push(normalizeLineEndings);\n        \n        filters.forEach(function(f) { code = f(code); });\n        \n        build.writeToFile({code: code}, {\n            outputFolder: path.dirname(to),\n            outputFile: path.basename(to)\n        }, function() {});\n        \n        callback && callback(err, result);\n    }\n    \n    build(opts.require, {\n        cache: cache,\n        quiet: opts.quiet,\n        pathConfig: pathConfig,\n        additional: opts.additional,\n        enableBrowser: true,\n        keepDepArrays: opts.noconflict || opts.projectType == \"worker\" ? \"\" : \"all\",\n        noArchitect: true,\n        compress: false,\n        ignore: opts.ignore || [],\n        withRequire: false,\n        basepath: ACE_HOME,\n        transforms: [wrapCJS, normalizeLineEndings, includeLoader],\n        afterRead: [optimizeTextModules]\n    }, write);\n}\n\nfunction buildCore(options, extra, callback) {\n    options = extend(extra, options);\n    options.additional = [{\n        id: \"build_support/mini_require\", \n        order: -1000,\n        literal: true\n    }];\n    options.require =[\"ace/ace\", \"ace/loader_build\"];\n    options.projectType = \"main\";\n    options.ns = \"ace\";\n    buildAceModule(options, callback);\n}\n\nfunction buildSubmodule(options, extra, file, callback) {\n    options = extend(extra, options);\n    getLoadedFileList(options, function(coreFiles) {\n        options.outputFile = file + \".js\";\n        options.ignore = options.ignore || coreFiles;\n        options.quiet = true;\n        buildAceModule(options, callback);\n    });\n}\n\nfunction buildAce(options, callback) {\n    var snippetFiles = jsFileList(\"lib/ace/snippets\");\n    var modeNames = modeList();\n\n    buildCore(options, {outputFile: \"ace.js\"}, addCb());\n    // modes\n    modeNames.forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"mode\",\n            require: [\"ace/mode/\" + name]\n        }, \"mode-\" + name, addCb());\n    });\n    // snippets\n    modeNames.forEach(function(name) {\n        buildSubmodule(options, {\n            require: [\"ace/snippets/\" + name]\n        }, \"snippets/\" + name, addCb());\n    });\n    // themes\n    jsFileList(\"lib/ace/theme\").forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"theme\",\n            require: [\"ace/theme/\" + name]\n        }, \"theme-\" +  name, addCb());\n    });\n    // keybindings\n    [\"vim\", \"emacs\", \"sublime\", \"vscode\"].forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"keybinding\",\n            require: [\"ace/keyboard/\" + name ]\n        }, \"keybinding-\" + name, addCb());\n    });\n    // extensions\n    jsFileList(\"lib/ace/ext\").forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"ext\",\n            require: [\"ace/ext/\" + name]\n        }, \"ext-\" + name, addCb());\n    });\n    // workers\n    workers(\"lib/ace/mode\").forEach(function(name) {\n        buildSubmodule(options, {\n            projectType: \"worker\",\n            require: [\"ace/mode/\" + name + \"_worker\"],\n            ignore: [],\n            additional: [{\n                id: \"ace/worker/worker\",\n                transforms: [wrapCJS],\n                order: -1000\n            }]\n        }, \"worker-\" + name, addCb());\n    });\n    // worker base\n    buildSubmodule(options, {\n        projectType: \"worker\",\n        require: [\"ace/worker/mirror\"],\n        ignore: [],\n        additional: [{\n            id: \"ace/worker/worker\",\n            transforms: [wrapCJS],\n            order: -1000\n        }]\n    }, \"worker-base\", addCb());\n    // \n    function addCb() {\n        addCb.count = (addCb.count || 0) + 1; \n        return done;\n    }\n    function done() {\n        if (--addCb.count > 0)\n            return;\n        if (options.check)\n            sanityCheck(options, callback);\n        if (options.noconflict && !options.compress)\n            buildTypes();\n\n        // call extractCss only once during a build\n        if (cssUpdated) {\n            console.log(\"Finished building \" + getTargetDir(options));\n            return;\n        } else {\n            cssUpdated = true;\n            extractCss(function() {\n                if (callback) \n                    return callback();\n                console.log(\"Finished building \" + getTargetDir(options));                \n            });\n        }\n    }\n}\nvar cssUpdated = false;\n\nfunction extractCss(callback) {\n    var images = {};\n    var cssImports = {};\n    var fileName = \"\";\n\n    var extensions = jsFileList(\"src/ext\");\n    var keybinding = jsFileList(\"src/keyboard\");\n    var themes =  jsFileList(\"src/theme\");\n    var dom = require(\"./src/lib/dom\");\n    var index = 0;\n    dom.importCssString = function(value, id) {\n        if (!id) id = fileName + (index++);\n        cssImports[id] = value;\n    };\n    var loadFile = function(path) {\n        fileName = path;\n        require(path);\n    };\n    themes.forEach(function(name) {\n        cssImports = {};\n        loadFile(\"./src/theme/\" + name);\n        delete require.cache[require.resolve(\"./src/theme/\" + name)];\n\n        var themeCss = \"\";\n        for (var i in cssImports) {\n            themeCss += cssImports[i];\n        }\n        themeCss = extractImages(themeCss, name, \"..\");\n        build.writeToFile({code: themeCss}, {\n            outputFolder: BUILD_DIR + \"/css/theme\",\n            outputFile: name + \".css\"\n        }, function() {});\n    });\n\n    cssImports = {};\n    loadFile(\"./src/ace\");\n    extensions.forEach(function(name) {\n        loadFile(\"./src/ext/\" + name);\n    });\n    keybinding.forEach(function(name) {\n        loadFile(\"./src/keyboard/\" + name);\n    });\n\n    var css = \"\";\n    for (var i in cssImports) {\n        css += \"\\n/*\" + i + \"*/\";\n        css += \"\\n\" + cssImports[i];\n    }\n    \n    css = extractImages(css, \"main\", \".\").replace(/^\\s*/gm, \"\");\n    build.writeToFile({code: css}, {\n        outputFolder: BUILD_DIR + \"/css\",\n        outputFile: \"ace.css\"\n    }, function() {\n        saveImages();\n        callback && callback();\n    });\n    \n    function extractImages(css, name, directory) {\n        var imageCounter = 0;\n        return css.replace(\n            /url\\(\\s*\"data:([^\"\\\\]|\\\\.)+\"\\s*\\)|url\\(\\s*'data:([^'\\\\]|\\\\.)+'\\s*\\)|url\\(data:[^)]+\\)/g,\n            function(url) {\n                var data = url.slice(4, -1).trim();\n                if (/[\"']/.test(data[0])) {\n                    data = data.slice(1, -1).replace(/\\\\(.)/g, \"$1\");\n                }\n                data = data.slice(5);\n                var i = data.indexOf(\",\");\n                if (i == -1) {\n                    console.error(url);\n                    return url;\n                }\n                var buffer = Buffer.from(data.slice(i + 1), \"base64\");\n                imageCounter++;\n                var imageName;\n                if (/^image\\/svg\\+xml/.test(data))\n                    imageName = name + \"-\" + imageCounter + \".svg\";\n                else   \n                    imageName = name + \"-\" + imageCounter + \".png\";\n                images[imageName] = buffer;\n                console.log(\"url(\\\"\" + directory + \"/\" + imageName + \"\\\")\");\n                return \"url(\\\"\" + directory + \"/\" + imageName + \"\\\")\";\n            }\n        );\n    }\n    function saveImages() {\n        for (var imageName in images) {\n            fs.writeFileSync(BUILD_DIR + \"/css/\" + imageName, images[imageName]);\n        }\n    }\n}\n\nfunction extractNls() {\n    var defaultData = require(__dirname + \"/src/lib/default_english_messages\").defaultEnglishMessages;\n\n    searchFiles(__dirname + \"/src\", function(path) {\n        if (/_test/.test(path)) return;\n        var text = fs.readFileSync(path, \"utf8\");\n        var matches = text.match(/nls\\s*\\(\\s*(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+'),\\s*(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')/g);\n        matches && matches.forEach(function(m) {\n            var match = m.match(/(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+)/g);      \n            var key = match[0].replace(/[\"']|[\"']$/g, \"\");\n            var defaultString = match[1].replace(/[\"']|[\"']$/g, \"\");\n\n            // If the key not yet in the default file, add it:\n            if (defaultData[key] !== undefined) return;\n            defaultData[key] = defaultString;\n        });\n    });\n    fs.writeFileSync(__dirname + \"/src/lib/default_english_messages.js\", \"var defaultEnglishMessages = \" + JSON.stringify(defaultData, null, 4) + \"\\n\\nexports.defaultEnglishMessages = defaultEnglishMessages;\", \"utf8\");\n    \n    fs.readdirSync(__dirname + \"/translations\").forEach(function(x) {\n        if (!/\\.json$/.test(x)) return;\n        var path = __dirname + \"/translations/\" + x;\n        var existingStr = fs.readFileSync(path, \"utf8\");\n        var existing = JSON.parse(existingStr);\n        \n        for (var i in defaultData) {\n            existing[i] = existing[i] || \"\";\n        }\n        fs.writeFileSync(path, JSON.stringify(existing, null, 4), \"utf8\");\n        console.log(\"Saved \" + x);\n    });\n}\n\nfunction getLoadedFileList(options, callback, result) {\n    if (!result) {\n        return buildCore({}, {}, function(e, result) {\n            getLoadedFileList(options, callback, result);\n        });\n    }\n    var deps = Object.create(null);\n    result.sources.forEach(function(pkg) {\n        pkg.deps && pkg.deps.forEach(function(p) {\n            if (!deps[p]) deps[p] = 1;\n        });\n    });\n    if (options.projectType == \"theme\")\n        delete deps[\"ace/theme/textmate\"];\n    deps[\"ace/ace\"] = 1;\n    callback(Object.keys(deps));\n}\n\nfunction normalizeLineEndings(module) {\n    if (typeof module == \"string\") \n        module = {source: module};\n    return module.source = module.source.replace(/\\r\\n/g, \"\\n\");\n}\n\nfunction includeLoader(module) {\n    var pattern = '\"include loader_build\";';\n    if (module.source && module.source.indexOf(pattern) != -1) {\n        module.deps.push(\"ace/loader_build\");\n        module.source = module.source.replace(pattern, 'require(\"./loader_build\")(exports)');\n    }\n}\n\nfunction optimizeTextModules(sources) {\n    var textModules = {};\n    return sources.filter(function(pkg) {\n        if (!pkg.id) {\n            return true;\n        }\n        else if (pkg.id.indexOf(\"text!\") > -1) {\n            detectTextModules(pkg);\n            return false;\n        }\n        else {\n            pkg.source = rewriteTextImports(pkg.source, pkg.deps);\n            return true;\n        }\n    }).map(function(pkg) {\n        if (pkg && pkg.deps) {\n            pkg.deps = pkg.deps && pkg.deps.filter(function(p) {\n                return p.indexOf(\"text!\") == -1;\n            });\n        }\n        return pkg;\n    });\n    \n    function rewriteTextImports(text, deps) {\n        return text.replace(/ require\\(['\"](?:ace|[.\\/]+)\\/requirejs\\/text!(.*?)['\"]\\)/g, function(_, call) {\n            if (call) {\n                var dep;\n                deps.some(function(d) {\n                    if (d.split(\"/\").pop() == call.split(\"/\").pop()) {\n                        dep = d;\n                        return true;\n                    }\n                });\n    \n                call = textModules[dep];\n                if (call)\n                    return \" \" + call;\n            }\n        });\n    }\n    function detectTextModules(pkg) {\n        var input = pkg.source.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"');\n        if (/\\.css$/.test(pkg.id)) {\n            // remove unnecessary whitespace from css\n            input = input.replace(/\\n\\s+/g, \"\\n\");\n            input = '\"' + input.replace(/\\n/g, '\\\\\\n') + '\"';\n        } else {\n            // but don't break other files!\n            input = '\"' + input.replace(/\\n/g, '\\\\n\\\\\\n') + '\"';\n        }\n        textModules[pkg.id] = input;\n    }\n}\n\nfunction namespace(ns) {\n    return function(text) {\n        text = text\n            .toString()\n            .replace(/ACE_NAMESPACE\\s*=\\s*\"\"/, 'ACE_NAMESPACE = \"' + ns +'\"')\n            .replace(/\\bdefine\\(/g, function(def, index, source) {\n                if (/(^|[;}),])\\s*$/.test(source.slice(0, index)))\n                    return ns + \".\" + def;\n                return def;\n            });\n\n        return text;\n    };\n}\n\nfunction exportAce(ns, modules, requireBase, extModules) {\n    requireBase = requireBase || \"window\";\n    return function(text) {\n        /*globals REQUIRE_NS, MODULES, self*/\n        var template = function() {\n            (function() {\n                REQUIRE_NS.require(MODULES, function(a) {\n                    if (a) {\n                        a.config.init(true);\n                        a.define = REQUIRE_NS.define;\n                    }\n                    var global = (function () {\n                        return this;\n                    })();\n                    if (!global && typeof window != \"undefined\") global = window; // can happen in strict mode\n                    if (!global && typeof self != \"undefined\") global = self; // can happen in webworker\n                    \n                    if (!global.NS)\n                        global.NS = a;\n                    for (var key in a) if (a.hasOwnProperty(key))\n                        global.NS[key] = a[key];\n                    global.NS[\"default\"] = global.NS;\n                    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                        module.exports = global.NS;\n                    }\n                });\n            })();\n        };\n        \n        if (extModules) {\n            template = function() {\n                (function() {\n                    REQUIRE_NS.require(MODULES, function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            };\n        }\n        \n        text = text.replace(/function init\\(packaged\\) {/, \"init(true);$&\\n\");\n        \n        if (typeof modules == \"string\")\n            modules = [modules];\n            \n        return (text.replace(/;\\s*$/, \"\") + \";\" + template\n            .toString()\n            .replace(/MODULES/g, JSON.stringify(modules))\n            .replace(/REQUIRE_NS/g, requireBase)\n            .replace(/NS/g, ns)\n            .slice(13, -1)\n        );\n    };\n}\n\nfunction updateModes() {\n    modeList().forEach(function(m) {\n        var filepath = __dirname + \"/lib/ace/mode/\" + m + \".js\";\n        var source = fs.readFileSync(filepath, \"utf8\");\n        if (!/this.\\$id\\s*=\\s*\"/.test(source))\n            source = source.replace(/\\n([ \\t]*)(\\}\\).call\\(\\w*Mode.prototype\\))/, '\\n$1    this.$id = \"\";\\n$1$2');\n        \n        source = source.replace(/(this.\\$id\\s*=\\s*)\"[^\"]*\"/,  '$1\"ace/mode/' + m + '\"');\n        fs.writeFileSync(filepath, source, \"utf8\");\n    });\n}\n\nfunction generateThemesModule(themes) {\n    var themelist = [\n        'define(function(require, exports, module) {',\n        '\\n\\nmodule.exports.themes = ' + JSON.stringify(themes, null, '    '),\n        ';\\n\\n});'\n    ].join('');\n    fs.writeFileSync(__dirname + '/lib/ace/ext/themelist_utils/themes.js', themelist, 'utf8');\n}\n\nfunction wrapCJS(module) {\n    if (module.loaderModule || module.noRequire || module.literal) return;\n    module.source = module.source.replace(/^#.*\\n/, \"\");\n\n    if (!isCJS(module.source)) return;\n\n    module.source = `define(function(require, exports, module) {${module.source}\\n});`;\n}\n\nfunction isCJS(source) {\n    var firstDefineCall = source.match(/define\\(\\s*[^)]*/);\n    if (firstDefineCall) {\n        // check if it is a normal define or some crazy umd trick\n        if (/define\\(\\s*(function\\s*\\(|{)/.test(firstDefineCall[0])) return;\n        if (/define\\(\\s*\\[[^\\]]*\\],\\s*\\(?function\\(/.test(firstDefineCall[0])) return;\n        if (/typeof define/.test(source)) return;\n    }\n    if (/\"no use strict\"/.test(source)) return;\n    return true;\n}\n\nfunction compress(text) {\n    var uglify = require(\"dryice\").copy.filter.uglifyjs;\n    uglify.options.mangle_toplevel = {except: [\"ACE_NAMESPACE\", \"requirejs\"]};\n    uglify.options.beautify = {ascii_only: true, inline_script: true};\n    return asciify(uglify(text));\n    // copy.filter.uglifyjs.options.ascii_only = true; doesn't work with some uglify.js versions\n    function asciify(text) {\n        return text.replace(/[\\x00-\\x08\\x0b\\x0c\\x0e\\x19\\x80-\\uffff]/g, function(c) {\n            c = c.charCodeAt(0).toString(16);\n            if (c.length == 1)\n                return \"\\\\x0\" + c;\n            if (c.length == 2)\n                return \"\\\\x\" + c;\n            if (c.length == 3)\n                return \"\\\\u0\" + c;\n            return \"\\\\u\" + c;\n        });\n    }\n}\n\nfunction extend(base, extra) {\n    Object.keys(extra).forEach(function(k) {\n        base[k] = extra[k];\n    });\n    return base;\n}\n\nfunction getTargetDir(opts) {\n    var targetDir = BUILD_DIR + \"/src\";\n    if (opts.compress)\n        targetDir += \"-min\";\n    if (opts.noconflict)\n        targetDir += \"-noconflict\";\n    return targetDir;\n}\n\nfunction sanityCheck(opts, callback) {\n    var targetDir = getTargetDir(opts);\n    require(\"child_process\").execFile(process.execPath, [\"-e\", \"(\" + function() {\n        window = global;\n        require(\"./ace\");\n        if (typeof ace.edit != \"function\")\n            process.exit(1);\n        require(\"fs\").readdirSync(\".\").forEach(function(p) {\n            if (!/ace\\.js$/.test(p) && /\\.js$/.test(p))\n                require(\"./\" + p);\n        });\n        process.exit(0);\n    } + \")()\"], {\n        cwd: targetDir\n    }, function(err, stdout) {\n        if (callback) return callback(err, stdout);\n        if (err)\n            throw err;\n    });\n}\n\nif (!module.parent) \n    main(process.argv); \nelse {\n    exports.buildAce = buildAce;\n    exports.jsFileList = jsFileList;\n    exports.modeList = modeList;\n}\n    \n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 6.595703125,
          "content": "Ace (Ajax.org Cloud9 Editor)\n============================\n\n[![Build Status](https://github.com/ajaxorg/ace/workflows/CI/badge.svg)](https://github.com/ajaxorg/ace/actions) \n[![npm](https://img.shields.io/npm/v/ace-builds.svg)](https://www.npmjs.com/package/ace-builds)\n\n_Note_: The new site at http://ace.c9.io contains all the info below along with an embedding guide and all the other resources you need to get started with Ace.\n\nAce is a standalone code editor written in JavaScript. Our goal is to create a browser based editor that matches and extends the features, usability and performance of existing native editors such as TextMate, Vim or Eclipse. It can be easily embedded in any web page or JavaScript application. Ace is developed as the primary editor for [Cloud9 IDE](https://c9.io/) and the successor of the Mozilla Skywriter (Bespin) Project.\n\nFeatures\n--------\n\n* Syntax highlighting for over 120 languages (TextMate/Sublime/_.tmlanguage_ files can be imported)\n* Over 20 themes (TextMate/Sublime/_.tmtheme_ files can be imported)\n* Automatic indent and outdent\n* An optional command line\n* Handles huge documents (at last check, 4,000,000 lines is the upper limit)\n* Fully customizable key bindings including vim and Emacs modes\n* Search and replace with regular expressions\n* Highlight matching parentheses\n* Toggle between soft tabs and real tabs\n* Displays hidden characters\n* Drag and drop text using the mouse\n* Line wrapping\n* Code folding\n* Multiple cursors and selections\n* Live syntax checker (currently JavaScript/CoffeeScript/CSS/XQuery)\n* Cut, copy, and paste functionality\n\nTake Ace for a spin!\n--------------------\n\nCheck out the Ace live [demo](http://ace.c9.io/build/kitchen-sink.html) or get a [Cloud9 IDE account](https://c9.io/) to experience Ace while editing one of your own GitHub projects.\n\nIf you want, you can use Ace as a textarea replacement thanks to the [Ace Bookmarklet](http://ajaxorg.github.io/ace/build/demo/bookmarklet/index.html).\n\nEmbedding Ace\n-------------\n\nAce can be easily embedded into any existing web page. You can either use one of pre-packaged versions of [ace](https://github.com/ajaxorg/ace-builds/) (just copy one of `src*` subdirectories somewhere into your project), or use requireJS to load contents of [lib/ace](https://github.com/ajaxorg/ace/tree/master/lib/ace) as `ace`\n\n\nThe easiest version is simply:\n\n```html\n<div id=\"editor\">some text</div>\n<script src=\"src/ace.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n<script>\n    var editor = ace.edit(\"editor\");\n</script>\n```\n*Exploring configuration options [Configuring-Ace](https://github.com/ajaxorg/ace/wiki/Configuring-Ace/)*\n\nWith \"editor\" being the id of the DOM element, which should be converted to an editor. Note that this element must be explicitly sized and positioned `absolute` or `relative` for Ace to work. e.g.\n\n```css\n#editor {\n    position: absolute;\n    width: 500px;\n    height: 400px;\n}\n```\n\nTo change the theme simply include the Theme's JavaScript file\n\n```html\n<script src=\"src/theme-twilight.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n```\n\nand configure the editor to use the theme:\n\n```javascript\neditor.setTheme(\"ace/theme/twilight\");\n```\n\nBy default the editor only supports plain text mode; many other languages are available as separate modules. After including the mode's JavaScript file:\n\n```html\n<script src=\"src/mode-javascript.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n```\n\nThe mode can then be used like this:\n\n```javascript\nvar JavaScriptMode = ace.require(\"ace/mode/javascript\").Mode;\neditor.session.setMode(new JavaScriptMode());\n```\n\nto destroy editor use\n\n```javascript\neditor.destroy();\neditor.container.remove();\n```\n\n\nDocumentation\n-------------\n\nAdditional usage information, including events to listen to and extending syntax highlighters, can be found [on the main Ace website](http://ace.c9.io).\n\nYou can also find API documentation at [https://ajaxorg.github.io/ace-api-docs/](https://ajaxorg.github.io/ace-api-docs/).\n\nAlso check out the sample code for the kitchen sink [demo app](https://github.com/ajaxorg/ace/blob/master/demo/kitchen-sink/demo.js).\n\nIf you still need help, feel free to ask a question on our [discussions page](https://github.com/ajaxorg/ace/discussions).\n\nRunning Ace\n-----------\n\nAfter the checkout Ace works out of the box. No build step is required. To try it out, simply start the bundled mini HTTP server using Node.JS\n\n```bash\nnode ./static.js\n```\n\nThe editor can then be opened at http://localhost:8888/kitchen-sink.html. \n\nTo open the editor with a file:/// URL see [the wiki](https://github.com/ajaxorg/ace/wiki/Running-Ace-from-file).\n\nBuilding Ace\n-----------\n\nYou do not generally need to build ACE. The [ace-builds repository](https://github.com/ajaxorg/ace-builds/) endeavours to maintain the latest build, and you can just copy one of _src*_ subdirectories somewhere into your project.\n\nHowever, all you need is Node.js and npm installed to package ACE. Just run `npm install` in the ace folder to install dependencies:\n\n```bash\nnpm install\nnode ./Makefile.dryice.js\n```\n\nTo package Ace, we use the dryice build tool developed by the Mozilla Skywriter team. Call `node Makefile.dryice.js` on the command-line to start the packing. This build script accepts the following options\n\n```bash\n-m                 minify build files with uglify-js          \n-nc                namespace require and define calls with \"ace\"\n-bm                builds the bookmarklet version\n--target ./path    specify relative path for output folder (default value is \"./build\")\n```\n\nTo generate all the files in the ace-builds repository, run `node Makefile.dryice.js full --target ../ace-builds`\n\nRunning the Unit Tests\n----------------------\n\nThe Ace unit tests can run on node.js. Assuming you have already done `npm install`, just call:\n\n```bash\nnpm run test\n```\n\nYou can also run the tests in your browser by serving:\n\n    http://localhost:8888/src/test/tests.html\n\nThis makes debugging failing tests much easier.\n\nContributing\n-----------------------------\n\nAce is a community project and wouldn't be what it is without contributions! We actively encourage and support contributions. The Ace source code is released under the BSD License. This license is very simple, and is friendly to all kinds of projects, whether open source or not. Take charge of your editor and add your favorite language highlighting and keybindings!\n\nFeel free to fork and improve/enhance Ace any way you want. If you feel that the editor or the Ace community will benefit from your changes, please open a pull request. For more information on our contributing guidelines, see [CONTRIBUTING.md](https://github.com/ajaxorg/ace/blob/master/CONTRIBUTING.md).\n\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.2958984375,
          "content": "# Config file for Jekyll, which is used by GH pages to build the Ace website.\n# Some files in the docs folder can cause Jekyll to trip up so we ignore those.\n# https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll\nexclude:\n  - \"demo/kitchen-sink/docs\""
        },
        {
          "name": "ace-internal.d.ts",
          "type": "blob",
          "size": 49.9638671875,
          "content": "export namespace Ace {\n    type Anchor = import(\"./src/anchor\").Anchor;\n    type Editor = import(\"./src/editor\").Editor;\n    type EditSession = import(\"./src/edit_session\").EditSession;\n    type Document = import(\"./src/document\").Document;\n    type Fold = import(\"./src/edit_session/fold\").Fold;\n    type FoldLine = import(\"./src/edit_session/fold_line\").FoldLine;\n    type Range = import(\"./src/range\").Range;\n    type VirtualRenderer = import(\"./src/virtual_renderer\").VirtualRenderer;\n    type UndoManager = import(\"./src/undomanager\").UndoManager;\n    type Tokenizer = import(\"./src/tokenizer\").Tokenizer;\n    type TokenIterator = import(\"./src/token_iterator\").TokenIterator;\n    type Selection = import(\"./src/selection\").Selection;\n    type Autocomplete = import(\"./src/autocomplete\").Autocomplete;\n    type InlineAutocomplete = import(\"./src/ext/inline_autocomplete\").InlineAutocomplete;\n    type CompletionProvider = import(\"./src/autocomplete\").CompletionProvider;\n    type AcePopup = import(\"./src/autocomplete/popup\").AcePopup;\n    type AceInline = import(\"./src/autocomplete/inline\").AceInline;\n    type MouseEvent = import(\"./src/mouse/mouse_event\").MouseEvent;\n    type RangeList = import(\"./src/range_list\").RangeList;\n    type FilteredList = import(\"./src/autocomplete\").FilteredList;\n    type LineWidgets = import(\"./src/line_widgets\").LineWidgets;\n    type SearchBox = import(\"./src/ext/searchbox\").SearchBox;\n    type Occur = import(\"./src/occur\").Occur;\n    type DefaultHandlers = import(\"./src/mouse/default_handlers\").DefaultHandlers;\n    type GutterHandler = import(\"./src/mouse/default_gutter_handler\").GutterHandler;\n    type DragdropHandler = import(\"./src/mouse/dragdrop_handler\").DragdropHandler;\n    type AppConfig = import(\"./src/lib/app_config\").AppConfig;\n    type Config = typeof import(\"./src/config\");\n    type GutterTooltip = import( \"./src/mouse/default_gutter_handler\").GutterTooltip;\n    type GutterKeyboardEvent = import( \"./src/keyboard/gutter_handler\").GutterKeyboardEvent;\n\n    type AfterLoadCallback = (err: Error | null, module: unknown) => void;\n    type LoaderFunction = (moduleName: string, afterLoad: AfterLoadCallback) => void;\n\n    export interface ConfigOptions {\n        packaged: boolean,\n        workerPath: string | null,\n        modePath: string | null,\n        themePath: string | null,\n        basePath: string,\n        suffix: string,\n        $moduleUrls: { [url: string]: string },\n        loadWorkerFromBlob: boolean,\n        sharedPopups: boolean,\n        useStrictCSP: boolean | null\n    }\n\n    interface Theme {\n        cssClass?: string;\n        cssText?: string;\n        $id?: string;\n        padding?: number | string;\n        isDark?: boolean;\n    }\n\n    interface ScrollBar {\n        setVisible(visible: boolean): void;\n\n        [key: string]: any;\n    }\n\n    interface HScrollbar extends ScrollBar {\n        setWidth(width: number): void;\n    }\n\n    interface VScrollbar extends ScrollBar {\n        setHeight(width: number): void;\n    }\n\n    interface LayerConfig {\n        width: number,\n        padding: number,\n        firstRow: number,\n        firstRowScreen: number,\n        lastRow: number,\n        lineHeight: number,\n        characterWidth: number,\n        minHeight: number,\n        maxHeight: number,\n        offset: number,\n        height: number,\n        gutterOffset: number\n    }\n\n    interface HardWrapOptions {\n        startRow: number;\n        endRow: number;\n        allowMerge?: boolean;\n        column?: number;\n    }\n\n    interface CommandBarOptions {\n        maxElementsOnTooltip: number;\n        alwaysShow: boolean;\n        showDelay: number;\n        hideDelay: number;\n    }\n\n    interface ScreenCoordinates {\n        row: number,\n        column: number,\n        side?: 1 | -1,\n        offsetX?: number\n    }\n\n    interface Folding {\n        $foldData: FoldLine[];\n\n        /**\n         * Looks up a fold at a given row/column. Possible values for side:\n         *   -1: ignore a fold if fold.start = row/column\n         *   +1: ignore a fold if fold.end = row/column\n         **/\n        getFoldAt(row: number, column: number, side?: number): Ace.Fold;\n\n        /**\n         * Returns all folds in the given range. Note, that this will return folds\n         **/\n        getFoldsInRange(range: Ace.Range | Ace.Delta): Ace.Fold[];\n\n        getFoldsInRangeList(ranges: Ace.Range[] | Ace.Range): Ace.Fold[];\n\n        /**\n         * Returns all folds in the document\n         */\n        getAllFolds(): Ace.Fold[];\n\n        /**\n         * Returns the string between folds at the given position.\n         * E.g.\n         *  foo<fold>b|ar<fold>wolrd -> \"bar\"\n         *  foo<fold>bar<fold>wol|rd -> \"world\"\n         *  foo<fold>bar<fo|ld>wolrd -> <null>\n         *\n         * where | means the position of row/column\n         *\n         * The trim option determs if the return string should be trimed according\n         * to the \"side\" passed with the trim value:\n         *\n         * E.g.\n         *  foo<fold>b|ar<fold>wolrd -trim=-1> \"b\"\n         *  foo<fold>bar<fold>wol|rd -trim=+1> \"rld\"\n         *  fo|o<fold>bar<fold>wolrd -trim=00> \"foo\"\n         */\n        getFoldStringAt(row: number, column: number, trim?: number, foldLine?: Ace.FoldLine): string | null;\n\n        getFoldLine(docRow: number, startFoldLine?: Ace.FoldLine): null | Ace.FoldLine;\n\n        /**\n         * Returns the fold which starts after or contains docRow\n         */\n        getNextFoldLine(docRow: number, startFoldLine?: Ace.FoldLine): null | Ace.FoldLine;\n\n        getFoldedRowCount(first: number, last: number): number;\n\n        $addFoldLine(foldLine: FoldLine): Ace.FoldLine;\n\n        /**\n         * Adds a new fold.\n         * @returns {Ace.Fold}\n         *      The new created Fold object or an existing fold object in case the\n         *      passed in range fits an existing fold exactly.\n         */\n        addFold(placeholder: Ace.Fold | string, range?: Ace.Range): Ace.Fold;\n\n        $modified: boolean;\n\n        addFolds(folds: Ace.Fold[]): void;\n\n        removeFold(fold: Ace.Fold): void;\n\n        removeFolds(folds: Ace.Fold[]): void;\n\n        expandFold(fold: Ace.Fold): void;\n\n        expandFolds(folds: Ace.Fold[]): void;\n\n        unfold(location?: number | null | Ace.Point | Ace.Range | Ace.Range[], expandInner?: boolean): Ace.Fold[] | undefined;\n\n        /**\n         * Checks if a given documentRow is folded. This is true if there are some\n         * folded parts such that some parts of the line is still visible.\n         **/\n        isRowFolded(docRow: number, startFoldRow?: Ace.FoldLine): boolean;\n\n        getRowFoldEnd(docRow: number, startFoldRow?: Ace.FoldLine): number;\n\n        getRowFoldStart(docRow: number, startFoldRow?: Ace.FoldLine): number;\n\n        getFoldDisplayLine(foldLine: Ace.FoldLine, endRow?: number | null, endColumn?: number | null, startRow?: number | null, startColumn?: number | null): string;\n\n        getDisplayLine(row: number, endColumn: number | null, startRow: number | null, startColumn: number | null): string;\n\n        $cloneFoldData(): Ace.FoldLine[];\n\n        toggleFold(tryToUnfold?: boolean): void;\n\n        getCommentFoldRange(row: number, column: number, dir?: number): Ace.Range | undefined;\n\n        foldAll(startRow?: number | null, endRow?: number | null, depth?: number | null, test?: Function): void;\n\n        foldToLevel(level: number): void;\n\n        foldAllComments(): void;\n\n        $foldStyles: {\n            manual: number;\n            markbegin: number;\n            markbeginend: number;\n        };\n        $foldStyle: string;\n\n        setFoldStyle(style: string): void;\n\n        $setFolding(foldMode: Ace.FoldMode): void;\n\n        $foldMode: any;\n        foldWidgets: any[];\n        getFoldWidget: any;\n        getFoldWidgetRange: any;\n        $updateFoldWidgets: any;\n        $tokenizerUpdateFoldWidgets: any;\n\n        getParentFoldRangeData(row: number, ignoreCurrent?: boolean): {\n            range?: Ace.Range;\n            firstRange?: Ace.Range;\n        };\n\n        onFoldWidgetClick(row: number, e: any): void;\n\n        $toggleFoldWidget(row: number, options: any): Fold | any;\n\n        /**\n         *\n         * @param {boolean} [toggleParent]\n         */\n        toggleFoldWidget(toggleParent?: boolean): void;\n\n        updateFoldWidgets(delta: Ace.Delta): void;\n\n        tokenizerUpdateFoldWidgets(e: any): void;\n    }\n\n    interface BracketMatch {\n        findMatchingBracket: (position: Point, chr?: string) => Point;\n\n        getBracketRange: (pos: Point) => null | Range;\n        /**\n         * Returns:\n         * * null if there is no any bracket at `pos`;\n         * * two Ranges if there is opening and closing brackets;\n         * * one Range if there is only one bracket\n         */\n        getMatchingBracketRanges: (pos: Point, isBackwards?: boolean) => null | Range[];\n        $brackets: {\n            \")\": string;\n            \"(\": string;\n            \"]\": string;\n            \"[\": string;\n            \"{\": string;\n            \"}\": string;\n            \"<\": string;\n            \">\": string;\n        };\n        $findOpeningBracket: (bracket: string, position: Point, typeRe?: RegExp) => Point | null;\n        $findClosingBracket: (bracket: string, position: Point, typeRe?: RegExp) => Point | null;\n        /**\n         * Returns [[Range]]'s for matching tags and tag names, if there are any\n         */\n        getMatchingTags: (pos: Point) => {\n            closeTag: Range;\n            closeTagName: Range;\n            openTag: Range;\n            openTagName: Range;\n        };\n        $findTagName: (iterator: any) => any;\n        $findClosingTag: (iterator: any, token: any) => {\n            openTag: Range;\n            closeTag: Range;\n            openTagName: Range;\n            closeTagName: Range;\n        };\n        $findOpeningTag: (iterator: any, token: any) => {\n            openTag: Range;\n            closeTag: Range;\n            openTagName: Range;\n            closeTagName: Range;\n        };\n    }\n\n    interface IRange {\n        start: Point;\n        end: Point;\n    }\n\n    interface LineWidget {\n        editor?: Editor,\n        el?: HTMLElement;\n        rowCount?: number;\n        hidden?: boolean;\n        _inDocument?: boolean;\n        column?: number;\n        row: number;\n        $oldWidget?: LineWidget,\n        session?: EditSession,\n        html?: string,\n        text?: string,\n        className?: string,\n        coverGutter?: boolean,\n        pixelHeight?: number,\n        $fold?: Fold,\n        type?: any,\n        destroy?: () => void;\n        coverLine?: boolean,\n        fixedWidth?: boolean,\n        fullWidth?: boolean,\n        screenWidth?: number,\n        rowsAbove?: number,\n        lenses?: any[],\n    }\n\n    type NewLineMode = 'auto' | 'unix' | 'windows';\n\n    interface EditSessionOptions {\n        wrap: \"off\" | \"free\" | \"printmargin\" | boolean | number;\n        wrapMethod: 'code' | 'text' | 'auto';\n        indentedSoftWrap: boolean;\n        firstLineNumber: number;\n        useWorker: boolean;\n        useSoftTabs: boolean;\n        tabSize: number;\n        navigateWithinSoftTabs: boolean;\n        foldStyle: 'markbegin' | 'markbeginend' | 'manual';\n        overwrite: boolean;\n        newLineMode: NewLineMode;\n        mode: string;\n    }\n\n    interface VirtualRendererOptions {\n        animatedScroll: boolean;\n        showInvisibles: boolean;\n        showPrintMargin: boolean;\n        printMarginColumn: number;\n        printMargin: boolean | number;\n        showGutter: boolean;\n        fadeFoldWidgets: boolean;\n        showFoldWidgets: boolean;\n        showLineNumbers: boolean;\n        displayIndentGuides: boolean;\n        highlightIndentGuides: boolean;\n        highlightGutterLine: boolean;\n        hScrollBarAlwaysVisible: boolean;\n        vScrollBarAlwaysVisible: boolean;\n        fontSize: string | number;\n        fontFamily: string;\n        maxLines: number;\n        minLines: number;\n        scrollPastEnd: number;\n        fixedWidthGutter: boolean;\n        customScrollbar: boolean;\n        theme: string;\n        hasCssTransforms: boolean;\n        maxPixelHeight: number;\n        useSvgGutterIcons: boolean;\n        showFoldedAnnotations: boolean;\n        useResizeObserver: boolean;\n    }\n\n    interface MouseHandlerOptions {\n        scrollSpeed: number;\n        dragDelay: number;\n        dragEnabled: boolean;\n        focusTimeout: number;\n        tooltipFollowsMouse: boolean;\n    }\n\n    interface EditorOptions extends EditSessionOptions,\n        MouseHandlerOptions,\n        VirtualRendererOptions {\n        selectionStyle: \"fullLine\" | \"screenLine\" | \"text\" | \"line\";\n        highlightActiveLine: boolean;\n        highlightSelectedWord: boolean;\n        readOnly: boolean;\n        copyWithEmptySelection: boolean;\n        cursorStyle: 'ace' | 'slim' | 'smooth' | 'wide';\n        mergeUndoDeltas: true | false | 'always';\n        behavioursEnabled: boolean;\n        wrapBehavioursEnabled: boolean;\n        enableAutoIndent: boolean;\n        enableBasicAutocompletion: boolean | Completer[];\n        enableLiveAutocompletion: boolean | Completer[];\n        liveAutocompletionDelay: number;\n        liveAutocompletionThreshold: number;\n        enableSnippets: boolean;\n        autoScrollEditorIntoView: boolean;\n        keyboardHandler: string | null;\n        placeholder: string;\n        value: string;\n        session: EditSession;\n        relativeLineNumbers: boolean;\n        enableMultiselect: boolean;\n        enableKeyboardAccessibility: boolean;\n        enableCodeLens: boolean;\n        textInputAriaLabel: string;\n        enableMobileMenu: boolean;\n    }\n\n    interface EventsBase {\n        [key: string]: any;\n    }\n\n    interface EditSessionEvents {\n        /**\n         * Emitted when the document changes.\n         * @param delta\n         */\n        \"change\": (delta: Delta) => void;\n        /**\n         * Emitted when the tab size changes, via [[EditSession.setTabSize]].\n         */\n        \"changeTabSize\": () => void;\n        /**\n         * Emitted when the ability to overwrite text changes, via [[EditSession.setOverwrite]].\n         * @param overwrite\n         */\n        \"changeOverwrite\": (overwrite: boolean) => void;\n        /**\n         * Emitted when the gutter changes, either by setting or removing breakpoints, or when the gutter decorations change.\n         * @param e\n         */\n        \"changeBreakpoint\": (e?: { row?: number, breakpoint?: boolean }) => void;\n        /**\n         * Emitted when a front marker changes.\n         */\n        \"changeFrontMarker\": () => void;\n        /**\n         * Emitted when a back marker changes.\n         */\n        \"changeBackMarker\": () => void;\n        /**\n         * Emitted when an annotation changes, like through [[EditSession.setAnnotations]].\n         */\n        \"changeAnnotation\": (e: {}) => void;\n        /**\n         * Emitted when a background tokenizer asynchronously processes new rows.\n         */\n        \"tokenizerUpdate\": (e: { data: { first: number, last: number } }) => void;\n        /**\n         * Emitted when the current mode changes.\n         * @param e\n         */\n        \"changeMode\": (e: any) => void;\n        /**\n         * Emitted when the wrap mode changes.\n         * @param e\n         */\n        \"changeWrapMode\": (e: any) => void;\n        /**\n         * Emitted when the wrapping limit changes.\n         * @param e\n         */\n        \"changeWrapLimit\": (e: any) => void;\n        /**\n         * Emitted when a code fold is added or removed.\n         * @param e\n         */\n        \"changeFold\": (e: any, session?: EditSession) => void;\n        /**\n         * Emitted when the scroll top changes.\n         * @param scrollTop The new scroll top value\n         **/\n        \"changeScrollTop\": (scrollTop: number) => void;\n        /**\n         * Emitted when the scroll left changes.\n         * @param scrollLeft The new scroll left value\n         **/\n        \"changeScrollLeft\": (scrollLeft: number) => void;\n        \"changeEditor\": (e: { editor?: Editor, oldEditor?: Editor }) => void;\n        \"changeSelection\": () => void;\n        \"startOperation\": (op?: { command?: { name?: string }, args?: any }) => void;\n        \"endOperation\": (op?: any) => void;\n        \"beforeEndOperation\": () => void;\n    }\n\n    interface EditorEvents {\n        \"change\": (delta: Delta) => void;\n        \"changeSelection\": () => void;\n        \"input\": () => void;\n        /**\n         * Emitted whenever the [[EditSession]] changes.\n         * @param e An object with two properties, `oldSession` and `session`, that represent the old and new [[EditSession]]s.\n         **/\n        \"changeSession\": (e: { oldSession: EditSession, session: EditSession }) => void;\n        \"blur\": (e: any) => void;\n        \"mousedown\": (e: MouseEvent) => void;\n        \"mousemove\": (e: MouseEvent & { scrollTop?: any }, editor?: Editor) => void;\n        \"changeStatus\": (e: any) => void;\n        \"keyboardActivity\": (e: any) => void;\n        \"mousewheel\": (e: MouseEvent) => void;\n        \"mouseup\": (e: MouseEvent) => void;\n        \"beforeEndOperation\": (e: any) => void;\n        \"nativecontextmenu\": (e: any) => void;\n        \"destroy\": (e: any) => void;\n        \"focus\": (e?: any) => void;\n        /**\n         * Emitted when text is copied.\n         * @param text The copied text\n         **/\n        \"copy\": (e: { text: string }) => void;\n        /**\n         * Emitted when text is pasted.\n         **/\n        \"paste\": (text: string, event: any) => void;\n        /**\n         * Emitted when the selection style changes, via [[Editor.setSelectionStyle]].\n         * @param data Contains one property, `data`, which indicates the new selection style\n         **/\n        \"changeSelectionStyle\": (data: \"fullLine\" | \"screenLine\" | \"text\" | \"line\") => void;\n        \"changeMode\": (e: { mode?: Ace.SyntaxMode, oldMode?: Ace.SyntaxMode }) => void;\n\n        //from searchbox extension\n        \"findSearchBox\": (e: { match: boolean }) => void;\n\n        //from code_lens extension\n        \"codeLensClick\": (e: any) => void;\n\n        \"select\": () => void;\n        \"gutterkeydown\": (e: GutterKeyboardEvent) => void;\n        \"gutterclick\": (e: MouseEvent) => void;\n        \"showGutterTooltip\": (e: GutterTooltip) => void;\n        \"hideGutterTooltip\": (e: GutterTooltip) => void;\n    }\n\n    interface AcePopupEvents {\n        \"click\": (e: MouseEvent) => void;\n        \"dblclick\": (e: MouseEvent) => void;\n        \"tripleclick\": (e: MouseEvent) => void;\n        \"quadclick\": (e: MouseEvent) => void;\n        \"show\": () => void;\n        \"hide\": () => void;\n        \"select\": (hide: boolean) => void;\n        \"changeHoverMarker\": (e: any) => void;\n    }\n\n    interface DocumentEvents {\n        /**\n         * Fires whenever the document changes.\n         * Several methods trigger different `\"change\"` events. Below is a list of each action type, followed by each property that's also available:\n         *  * `\"insert\"`\n         *    * `range`: the [[Range]] of the change within the document\n         *    * `lines`: the lines being added\n         *  * `\"remove\"`\n         *    * `range`: the [[Range]] of the change within the document\n         *    * `lines`: the lines being removed\n         *\n         **/\n        \"change\": (e: Delta) => void;\n        \"changeNewLineMode\": () => void;\n    }\n\n    interface AnchorEvents {\n        /**\n         * Fires whenever the anchor position changes.\n         * Both of these objects have a `row` and `column` property corresponding to the position.\n         * Events that can trigger this function include [[Anchor.setPosition `setPosition()`]].\n         * @param {Object} e  An object containing information about the anchor position. It has two properties:\n         *  - `old`: An object describing the old Anchor position\n         *  - `value`: An object describing the new Anchor position\n         **/\n        \"change\": (e: { old: Point, value: Point }) => void;\n    }\n\n    interface BackgroundTokenizerEvents {\n        /**\n         * Fires whenever the background tokeniziers between a range of rows are going to be updated.\n         * @param e An object containing two properties, `first` and `last`, which indicate the rows of the region being updated.\n         **/\n        \"update\": (e: {\n            data: { first: number, last: number }\n        }) => void;\n    }\n\n    interface SelectionEvents {\n        /**\n         * Emitted when the cursor position changes.\n         **/\n        \"changeCursor\": () => void;\n        /**\n         * Emitted when the cursor selection changes.\n         **/\n        \"changeSelection\": () => void;\n    }\n\n    interface MultiSelectionEvents extends SelectionEvents {\n        \"multiSelect\": () => void;\n        \"addRange\": (e: { range: Range }) => void;\n        \"removeRange\": (e: { ranges: Range[] }) => void;\n        \"singleSelect\": () => void;\n    }\n\n    interface PlaceHolderEvents {\n        \"cursorEnter\": (e: any) => void;\n        \"cursorLeave\": (e: any) => void;\n    }\n\n    interface GutterEvents {\n        \"changeGutterWidth\": (width: number) => void;\n        \"afterRender\": () => void;\n    }\n\n    interface TextEvents {\n        \"changeCharacterSize\": (e: any) => void;\n    }\n\n    interface VirtualRendererEvents {\n        \"afterRender\": (e?: any, renderer?: VirtualRenderer) => void;\n        \"beforeRender\": (e: any, renderer?: VirtualRenderer) => void;\n        \"themeLoaded\": (e: { theme: string | Theme }) => void;\n        \"themeChange\": (e: { theme: string | Theme }) => void;\n        \"scrollbarVisibilityChanged\": () => void;\n        \"changeCharacterSize\": (e: any) => void;\n        \"resize\": (e?: any) => void;\n        \"autosize\": () => void;\n    }\n\n    export class EventEmitter<T extends { [K in keyof T]: (...args: any[]) => any }> {\n        once<K extends keyof T>(name: K, callback: T[K]): void;\n\n        setDefaultHandler(name: string, callback: Function): void;\n\n        removeDefaultHandler(name: string, callback: Function): void;\n\n        on<K extends keyof T>(name: K, callback: T[K], capturing?: boolean): T[K];\n\n        addEventListener<K extends keyof T>(name: K, callback: T[K], capturing?: boolean): T[K];\n\n        off<K extends keyof T>(name: K, callback: T[K]): void;\n\n        removeListener<K extends keyof T>(name: K, callback: T[K]): void;\n\n        removeEventListener<K extends keyof T>(name: K, callback: T[K]): void;\n\n        removeAllListeners(name?: string): void;\n\n        _signal<K extends keyof T>(eventName: K, ...args: Parameters<T[K]>): void;\n\n        _emit<K extends keyof T>(eventName: K, ...args: Parameters<T[K]>): void;\n\n        _dispatchEvent<K extends keyof T>(eventName: K, ...args: Parameters<T[K]>): void;\n    }\n\n    interface SearchOptions {\n        /**The string or regular expression you're looking for*/\n        needle: string | RegExp;\n        preventScroll: boolean;\n        /**Whether to search backwards from where cursor currently is*/\n        backwards: boolean;\n        /**The starting [[Range]] or cursor position to begin the search*/\n        start: Range;\n        /**Whether or not to include the current line in the search*/\n        skipCurrent: boolean;\n        /**The [[Range]] to search within. Set this to `null` for the whole document*/\n        range: Range | null;\n        preserveCase: boolean;\n        /**Whether the search is a regular expression or not*/\n        regExp: boolean;\n        /**Whether the search matches only on whole words*/\n        wholeWord: boolean;\n        /**Whether the search ought to be case-sensitive*/\n        caseSensitive: boolean;\n        /**Whether to wrap the search back to the beginning when it hits the end*/\n        wrap: boolean;\n        re: any;\n        /**true, if needle has \\n or \\r\\n*/\n        $isMultiLine: boolean;\n        /**\n         * internal property, determine if browser supports unicode flag\n         * @private\n         * */\n        $supportsUnicodeFlag: boolean;\n    }\n\n    interface Point {\n        row: number;\n        column: number;\n    }\n\n    type Position = Point;\n\n    interface Delta {\n        action: 'insert' | 'remove';\n        start: Point;\n        end: Point;\n        lines: string[];\n        id?: number,\n        folds?: Fold[]\n    }\n\n    interface Annotation {\n        row: number;\n        column: number;\n        text: string;\n        type: string;\n    }\n\n    export interface MarkerGroupItem {\n        range: Range;\n        className: string;\n    }\n\n    type MarkerGroup = import(\"./src/marker_group\").MarkerGroup;\n\n\n    export interface Command {\n        name?: string;\n        bindKey?: string | { mac?: string, win?: string };\n        readOnly?: boolean;\n        exec?: (editor?: Editor | any, args?: any) => void;\n        isAvailable?: (editor: Editor) => boolean;\n        description?: string,\n        multiSelectAction?: \"forEach\" | \"forEachLine\" | Function,\n        scrollIntoView?: true | \"cursor\" | \"center\" | \"selectionPart\" | \"animate\" | \"selection\" | \"none\",\n        aceCommandGroup?: string,\n        passEvent?: boolean,\n        level?: number,\n        action?: string,\n    }\n\n    type CommandLike = Command | ((editor: Editor) => void) | ((sb: SearchBox) => void);\n\n    type KeyboardHandler = Partial<import(\"./src/keyboard/hash_handler\").HashHandler> & {\n        attach?: (editor: Editor) => void;\n        detach?: (editor: Editor) => void;\n        getStatusText?: (editor?: any, data?: any) => string;\n    }\n\n    export interface MarkerLike {\n        range?: Range;\n        type: string;\n        renderer?: MarkerRenderer;\n        clazz: string;\n        inFront?: boolean;\n        id?: number;\n        update?: (html: string[],\n                  // TODO maybe define Marker class\n                  marker: any,\n                  session: EditSession,\n                  config: any) => void;\n\n        [key: string]: any;\n    }\n\n    type MarkerRenderer = (html: string[],\n                           range: Range,\n                           left: number,\n                           top: number,\n                           config: any) => void;\n\n    interface Token {\n        type: string;\n        value: string;\n        index?: number;\n        start?: number;\n    }\n\n    type BaseCompletion = import(\"./src/autocomplete\").BaseCompletion;\n    type SnippetCompletion = import(\"./src/autocomplete\").SnippetCompletion;\n    type ValueCompletion = import(\"./src/autocomplete\").ValueCompletion;\n    type Completion = import(\"./src/autocomplete\").Completion;\n\n    type HighlightRule = ({ defaultToken: string } | { include: string } | { todo: string } | {\n        token: string | string[] | ((value: string) => string);\n        regex: string | RegExp;\n        next?: string | (() => void);\n        push?: string;\n        comment?: string;\n        caseInsensitive?: boolean;\n        nextState?: string;\n    }) & { [key: string]: any };\n\n    type HighlightRulesMap = Record<string, HighlightRule[]>;\n\n    type KeywordMapper = (keyword: string) => string;\n\n    interface HighlightRules {\n        $rules: HighlightRulesMap;\n        $embeds: string[];\n        $keywords: any[];\n        $keywordList: string[];\n\n        addRules(rules: HighlightRulesMap, prefix?: string): void;\n\n        getRules(): HighlightRulesMap;\n\n        embedRules(rules: (new () => HighlightRules) | HighlightRulesMap, prefix: string, escapeRules?: boolean, append?: boolean): void;\n\n        getEmbeds(): string[];\n\n        normalizeRules(): void;\n\n        createKeywordMapper(map: Record<string, string>, defaultToken?: string, ignoreCase?: boolean, splitChar?: string): KeywordMapper;\n    }\n\n    type FoldWidget = \"start\" | \"end\" | \"\"\n\n    interface FoldMode {\n        foldingStartMarker: RegExp;\n        foldingStopMarker?: RegExp;\n\n        getFoldWidget(session: EditSession, foldStyle: string, row: number): FoldWidget;\n\n        getFoldWidgetRange(session: EditSession, foldStyle: string, row: number): Range | undefined;\n\n        indentationBlock(session: EditSession, row: number, column?: number): Range | undefined;\n\n        openingBracketBlock(session: EditSession, bracket: string, row: number, column: number, typeRe?: RegExp): Range | undefined;\n\n        closingBracketBlock(session: EditSession, bracket: string, row: number, column: number, typeRe?: RegExp): Range | undefined;\n    }\n\n    type BehaviorAction = (state: string | string[], action: string, editor: Editor, session: EditSession, text: string | Range) => ({\n        text: string,\n        selection: number[]\n    } | Range) & { [key: string]: any } | undefined;\n    type BehaviorMap = Record<string, Record<string, BehaviorAction>>;\n\n    interface Behaviour {\n        $behaviours: { [behaviour: string]: any }\n\n        add(name: string, action: string, callback: BehaviorAction): void;\n\n        addBehaviours(behaviours: BehaviorMap): void;\n\n        remove(name: string): void;\n\n        inherit(mode: SyntaxMode | (new () => SyntaxMode), filter: string[]): void;\n\n        getBehaviours(filter?: string[]): BehaviorMap;\n    }\n\n    interface Outdent {\n        checkOutdent(line: string, input: string): boolean;\n\n        autoOutdent(doc: Document, row: number): number | undefined;\n    }\n\n    interface SyntaxMode {\n        /**\n         * quotes used by language mode\n         */\n        $quotes: { [quote: string]: string };\n        HighlightRules: {\n            new(config?: any): HighlightRules\n        }; //TODO: fix this\n        foldingRules?: FoldMode;\n        $behaviour?: Behaviour;\n        $defaultBehaviour?: Behaviour;\n        /**\n         * characters that indicate the start of a line comment\n         */\n        lineCommentStart?: string;\n        /**\n         * characters that indicate the start and end of a block comment\n         */\n        blockComment?: { start: string, end: string }\n        tokenRe?: RegExp;\n        nonTokenRe?: RegExp;\n        /**\n         * An object containing conditions to determine whether to apply matching quote or not.\n         */\n        $pairQuotesAfter: { [quote: string]: RegExp }\n        $tokenizer: Tokenizer;\n        $highlightRules: HighlightRules;\n        $embeds?: string[];\n        $modes?: SyntaxMode[];\n        $keywordList?: string[];\n        $highlightRuleConfig?: any;\n        completionKeywords: string[];\n        transformAction: BehaviorAction;\n        path?: string;\n\n        getTokenizer(): Tokenizer;\n\n        toggleCommentLines(state: string | string[],\n                           session: EditSession,\n                           startRow: number,\n                           endRow: number): void;\n\n        toggleBlockComment(state: string | string[],\n                           session: EditSession,\n                           range: Range,\n                           cursor: Point): void;\n\n        getNextLineIndent(state: string | string[], line: string, tab: string): string;\n\n        checkOutdent(state: string | string[], line: string, input: string): boolean;\n\n        autoOutdent(state: string | string[], doc: EditSession, row: number): void;\n\n        // TODO implement WorkerClient types\n        createWorker(session: EditSession): any;\n\n        createModeDelegates(mapping: { [key: string]: string }): void;\n\n        getKeywords(append?: boolean): Array<string | RegExp>;\n\n        getCompletions(state: string | string[],\n                       session: EditSession,\n                       pos: Point,\n                       prefix: string): Completion[];\n\n        $getIndent(line: string): string;\n\n        $createKeywordList(): string[];\n\n        $delegator(method: string, args: IArguments, defaultHandler: any): any;\n\n    }\n\n    interface OptionsBase {\n        [key: string]: any;\n    }\n\n    class OptionsProvider<T> {\n        setOptions(optList: Partial<T>): void;\n\n        getOptions(optionNames?: Array<keyof T> | Partial<T>): Partial<T>;\n\n        setOption<K extends keyof T>(name: K, value: T[K]): void;\n\n        getOption<K extends keyof T>(name: K): T[K];\n    }\n\n    type KeyBinding = import(\"./src/keyboard/keybinding\").KeyBinding;\n\n    interface CommandMap {\n        [name: string]: Command;\n    }\n\n    type execEventHandler = (obj: {\n        editor: Editor,\n        command: Command,\n        args: any[]\n    }) => void;\n\n    interface CommandManagerEvents {\n        on(name: 'exec', callback: execEventHandler): Function;\n\n        on(name: 'afterExec', callback: execEventHandler): Function;\n    }\n\n    type CommandManager = import(\"./src/commands/command_manager\").CommandManager;\n\n\n    interface SavedSelection {\n        start: Point;\n        end: Point;\n        isBackwards: boolean;\n    }\n\n    var Selection: {\n        new(session: EditSession): Selection;\n    }\n\n    interface TextInput {\n        resetSelection(): void;\n\n        setAriaOption(options?: { activeDescendant: string, role: string, setLabel: any }): void;\n    }\n\n    type CompleterCallback = (error: any, completions: Completion[]) => void;\n\n    interface Completer {\n        identifierRegexps?: Array<RegExp>,\n\n        getCompletions(editor: Editor,\n                       session: EditSession,\n                       position: Point,\n                       prefix: string,\n                       callback: CompleterCallback): void;\n\n        getDocTooltip?(item: Completion): void | string | Completion;\n\n        onSeen?: (editor: Ace.Editor, completion: Completion) => void;\n        onInsert?: (editor: Ace.Editor, completion: Completion) => void;\n\n        cancel?(): void;\n\n        id?: string;\n        triggerCharacters?: string[];\n        hideInlinePreview?: boolean;\n        insertMatch?: (editor: Editor, data: Completion) => void;\n    }\n\n    interface CompletionOptions {\n        matches?: Completion[];\n    }\n\n    type CompletionProviderOptions = {\n        exactMatch?: boolean;\n        ignoreCaption?: boolean;\n    }\n\n    type GatherCompletionRecord = {\n        prefix: string;\n        matches: Completion[];\n        finished: boolean;\n    }\n\n    type CompletionCallbackFunction = (err: Error | undefined, data: GatherCompletionRecord) => void;\n    type CompletionProviderCallback = (this: import(\"./src/autocomplete\").Autocomplete, err: Error | undefined, completions: import(\"./src/autocomplete\").FilteredList, finished: boolean) => void;\n\n    type AcePopupNavigation = \"up\" | \"down\" | \"start\" | \"end\";\n\n    interface EditorMultiSelectProperties {\n        inMultiSelectMode?: boolean,\n        /**\n         * Updates the cursor and marker layers.\n         **/\n        updateSelectionMarkers: () => void,\n        /**\n         * Adds the selection and cursor.\n         * @param orientedRange A range containing a cursor\n         **/\n        addSelectionMarker: (orientedRange: Ace.Range & { marker?: any }) => Ace.Range & { marker?: any },\n        /**\n         * Removes the selection marker.\n         * @param range The selection range added with [[Editor.addSelectionMarker `addSelectionMarker()`]].\n         **/\n        removeSelectionMarker: (range: Ace.Range & { marker?: any }) => void,\n        removeSelectionMarkers: (ranges: (Ace.Range & { marker?: any })[]) => void,\n        $onAddRange: (e: any) => void,\n        $onRemoveRange: (e: any) => void,\n        $onMultiSelect: (e: any) => void,\n        $onSingleSelect: (e: any) => void,\n        $onMultiSelectExec: (e: any) => void,\n        /**\n         * Executes a command for each selection range.\n         * @param cmd The command to execute\n         * @param [args] Any arguments for the command\n         **/\n        forEachSelection: (cmd: Object, args?: string, options?: Object) => void,\n        /**\n         * Removes all the selections except the last added one.\n         **/\n        exitMultiSelectMode: () => void,\n        getSelectedText: () => string,\n        $checkMultiselectChange: (e: any, anchor: Ace.Anchor) => void,\n        /**\n         * Finds and selects all the occurrences of `needle`.\n         * @param needle The text to find\n         * @param options The search options\n         * @param additive keeps\n         * @returns {Number} The cumulative count of all found matches\n         **/\n        findAll: (needle?: string, options?: Partial<Ace.SearchOptions>, additive?: boolean) => number,\n        /**\n         * Adds a cursor above or below the active cursor.\n         * @param dir The direction of lines to select: -1 for up, 1 for down\n         * @param [skip] If `true`, removes the active selection range\n         */\n        selectMoreLines: (dir: number, skip?: boolean) => void,\n        /**\n         * Transposes the selected ranges.\n         * @param {Number} dir The direction to rotate selections\n         **/\n        transposeSelections: (dir: number) => void,\n        /**\n         * Finds the next occurrence of text in an active selection and adds it to the selections.\n         * @param {Number} dir The direction of lines to select: -1 for up, 1 for down\n         * @param {Boolean} [skip] If `true`, removes the active selection range\n         * @param {Boolean} [stopAtFirst]\n         **/\n        selectMore: (dir: number, skip?: boolean, stopAtFirst?: boolean) => void,\n        /**\n         * Aligns the cursors or selected text.\n         **/\n        alignCursors: () => void,\n        $reAlignText: (lines: string[], forceLeft: boolean) => string[],\n        multiSelect?: any,\n        $multiselectOnSessionChange?: any,\n        $blockSelectEnabled?: boolean,\n    }\n\n    interface CodeLenseProvider {\n        provideCodeLenses: (session: EditSession, callback: (err: any, payload: CodeLense[]) => void) => void;\n    }\n\n    interface CodeLense {\n        start: Point,\n        command: any\n    }\n\n    interface CodeLenseEditorExtension {\n        codeLensProviders?: CodeLenseProvider[];\n        $codeLensClickHandler?: any;\n        $updateLenses?: () => void;\n        $updateLensesOnInput?: () => void;\n    }\n\n    interface ElasticTabstopsEditorExtension {\n        elasticTabstops?: import(\"./src/ext/elastic_tabstops_lite\").ElasticTabstopsLite;\n    }\n\n    interface TextareaEditorExtension {\n        setDisplaySettings?: (settings: any) => void;\n    }\n\n    interface PromptEditorExtension {\n        cmdLine?: Editor;\n    }\n\n    interface OptionsEditorExtension {\n        $options?: any;\n    }\n\n    interface MultiSelectProperties {\n        ranges: Ace.Range[] | null;\n        rangeList: Ace.RangeList | null;\n\n        /**\n         * Adds a range to a selection by entering multiselect mode, if necessary.\n         * @param {Ace.Range} range The new range to add\n         * @param {Boolean} [$blockChangeEvents] Whether or not to block changing events\n         **/\n        addRange(range: Ace.Range, $blockChangeEvents?: boolean): any;\n\n        inMultiSelectMode: boolean;\n\n        /**\n         * @param {Ace.Range} [range]\n         **/\n        toSingleRange(range?: Ace.Range): void;\n\n        /**\n         * Removes a Range containing pos (if it exists).\n         * @param {Ace.Point} pos The position to remove, as a `{row, column}` object\n         **/\n        substractPoint(pos: Ace.Point): any;\n\n        /**\n         * Merges overlapping ranges ensuring consistency after changes\n         **/\n        mergeOverlappingRanges(): void;\n\n        /**\n         * @param {Ace.Range} range\n         */\n        $onAddRange(range: Ace.Range): void;\n\n        rangeCount: number;\n\n        /**\n         *\n         * @param {Ace.Range[]} removed\n         */\n        $onRemoveRange(removed: Ace.Range[]): void;\n\n        /**\n         * adds multicursor support to selection\n         */\n        $initRangeList(): void;\n\n        /**\n         * Returns a concatenation of all the ranges.\n         * @returns {Ace.Range[]}\n         **/\n        getAllRanges(): Ace.Range[];\n\n        /**\n         * Splits all the ranges into lines.\n         **/\n        splitIntoLines(): void;\n\n        /**\n         */\n        joinSelections(): void;\n\n        /**\n         **/\n        toggleBlockSelection(): void;\n\n        /**\n         *\n         * Gets list of ranges composing rectangular block on the screen\n         *\n         * @param {Ace.ScreenCoordinates} screenCursor The cursor to use\n         * @param {Ace.ScreenCoordinates} screenAnchor The anchor to use\n         * @param {Boolean} [includeEmptyLines] If true, this includes ranges inside the block which are empty due to clipping\n         * @returns {Ace.Range[]}\n         **/\n        rectangularRangeBlock(screenCursor: Ace.ScreenCoordinates, screenAnchor: Ace.ScreenCoordinates, includeEmptyLines?: boolean): Ace.Range[];\n\n        _eventRegistry?: any;\n        index?: number;\n    }\n\n    type AcePopupEventsCombined = Ace.EditorEvents & Ace.AcePopupEvents;\n    type AcePopupWithEditor = Ace.EventEmitter<AcePopupEventsCombined> & Ace.Editor;\n    type InlineAutocompleteAction = \"prev\" | \"next\" | \"first\" | \"last\";\n\n    type TooltipCommandFunction<T> = (editor: Ace.Editor) => T;\n\n    export interface TooltipCommand extends Ace.Command {\n        enabled?: TooltipCommandFunction<boolean> | boolean,\n        getValue?: TooltipCommandFunction<any>,\n        type: \"button\" | \"text\" | \"checkbox\"\n        iconCssClass?: string,\n        cssClass?: string\n    }\n\n    export type CommandBarTooltip = import(\"./src/ext/command_bar\").CommandBarTooltip;\n\n    export type TokenizeResult = Array<Array<{\n        className?: string,\n        value: string,\n    }>>\n\n    export interface StaticHighlightOptions {\n        mode?: string | SyntaxMode,\n        theme?: string | Theme,\n        trim?: boolean,\n        firstLineNumber?: number,\n        showGutter?: boolean\n    }\n\n    export interface Operation {\n        command: {\n            name?: string;\n        };\n        args: any;\n        selectionBefore?: Range | Range[];\n        selectionAfter?: Range | Range[];\n        docChanged?: boolean;\n        selectionChanged?: boolean;\n    }\n}\n\n\nexport const version: string;\nexport const config: Ace.Config;\n\nexport function require(name: string): any;\n\nexport function edit(el?: string | (Element & {\n    env?: any;\n    value?: any;\n}) | null, options?: Partial<Ace.EditorOptions>): Ace.Editor;\n\nexport function createEditSession(text: Ace.Document | string, mode: Ace.SyntaxMode): Ace.EditSession;\n\nexport const VirtualRenderer: {\n    new(container: HTMLElement, theme?: string): Ace.VirtualRenderer;\n};\nexport const EditSession: {\n    new(text: string | Ace.Document, mode?: Ace.SyntaxMode): Ace.EditSession;\n};\nexport const UndoManager: {\n    new(): Ace.UndoManager;\n};\nexport const Editor: {\n    new(renderer: Ace.VirtualRenderer, session?: Ace.EditSession, options?: Partial<Ace.EditorOptions>): Ace.Editor;\n};\nexport const Range: {\n    new(startRow: number, startColumn: number, endRow: number, endColumn: number): Ace.Range;\n    fromPoints(start: Ace.Point, end: Ace.Point): Ace.Range;\n    comparePoints(p1: Ace.Point, p2: Ace.Point): number;\n};\n\nexport type InlineAutocomplete = Ace.InlineAutocomplete;\nexport type CommandBarTooltip = Ace.CommandBarTooltip;\n\ndeclare global {\n    interface Element {\n        setAttribute(name: string, value: boolean): void;\n\n        setAttribute(name: string, value: number): void;\n    }\n}\n\ndeclare module \"./src/anchor\" {\n    export interface Anchor extends Ace.EventEmitter<Ace.AnchorEvents> {\n        markerId?: number;\n        document: Ace.Document;\n    }\n\n\n}\n\ndeclare module \"./src/autocomplete\" {\n    export interface Autocomplete {\n        popup: Ace.AcePopup;\n        emptyMessage?: Function,\n    }\n\n    export interface CompletionProvider {\n        completions: Ace.FilteredList;\n    }\n}\n\ndeclare module \"./src/background_tokenizer\" {\n    export interface BackgroundTokenizer extends Ace.EventEmitter<Ace.BackgroundTokenizerEvents> {\n\n    }\n}\n\ndeclare module \"./src/document\" {\n    export interface Document extends Ace.EventEmitter<Ace.DocumentEvents> {\n    }\n\n}\n\ndeclare module \"./src/editor\" {\n    export interface Editor extends Ace.EditorMultiSelectProperties, Ace.OptionsProvider<Ace.EditorOptions>,\n        Ace.EventEmitter<Ace.EditorEvents>, Ace.CodeLenseEditorExtension, Ace.ElasticTabstopsEditorExtension,\n        Ace.TextareaEditorExtension, Ace.PromptEditorExtension, Ace.OptionsEditorExtension {\n        session: Ace.EditSession;\n        $mergeUndoDeltas?: any,\n        $highlightSelectedWord?: boolean,\n        $updatePlaceholder?: Function,\n        $cursorStyle?: string,\n        $readOnly?: any,\n        $highlightActiveLine?: any,\n        $enableAutoIndent?: any,\n        $copyWithEmptySelection?: any\n        $selectionStyle?: string,\n        env?: any;\n        widgetManager?: Ace.LineWidgets,\n        completer?: Ace.Autocomplete | Ace.InlineAutocomplete,\n        completers: Ace.Completer[],\n        $highlightTagPending?: boolean,\n        showKeyboardShortcuts?: () => void,\n        showSettingsMenu?: () => void,\n        searchBox?: Ace.SearchBox,\n        _eventRegistry?: any,\n    }\n}\n\ndeclare module \"./src/edit_session\" {\n    export interface EditSession extends Ace.EventEmitter<Ace.EditSessionEvents>,\n        Ace.OptionsProvider<Ace.EditSessionOptions>,\n        Ace.Folding, Ace.BracketMatch {\n        doc: Ace.Document,\n        $highlightLineMarker?: {\n            start: Ace.Point,\n            end: Ace.Point,\n            id?: number\n        }\n        $useSoftTabs?: boolean,\n        $tabSize?: number,\n        $useWorker?: boolean,\n        $wrapAsCode?: boolean,\n        $indentedSoftWrap?: boolean,\n        $bracketHighlight?: any,\n        $selectionMarker?: number,\n        lineWidgetsWidth?: number,\n        $getWidgetScreenLength?: () => number,\n        _changedWidgets?: any,\n        $options: any,\n        $wrapMethod?: any,\n        $enableVarChar?: any,\n        $wrap?: any,\n        $navigateWithinSoftTabs?: boolean,\n        $selectionMarkers?: any[],\n        gutterRenderer?: any,\n        $firstLineNumber?: number,\n        $emacsMark?: any,\n        selectionMarkerCount?: number,\n        multiSelect?: any,\n        $occurHighlight?: any,\n        $occur?: Ace.Occur,\n        $occurMatchingLines?: any,\n        $useEmacsStyleLineStart?: boolean,\n        $selectLongWords?: boolean,\n        curOp: Ace.Operation | null,\n\n        getSelectionMarkers(): any[],\n    }\n\n}\n\ndeclare module \"./src/edit_session/fold\" {\n    export interface Fold {\n        collapseChildren?: number;\n    }\n}\n\ndeclare module \"./src/placeholder\" {\n    export interface PlaceHolder extends Ace.EventEmitter<Ace.PlaceHolderEvents> {\n    }\n}\n\ndeclare module \"./src/scrollbar\" {\n    export interface VScrollBar extends Ace.EventEmitter<any> {\n    }\n\n    export interface HScrollBar extends Ace.EventEmitter<any> {\n    }\n}\n\ndeclare module \"./src/scrollbar_custom\" {\n    export interface VScrollBar extends Ace.EventEmitter<any> {\n    }\n\n    export interface HScrollBar extends Ace.EventEmitter<any> {\n    }\n}\n\ndeclare module \"./src/line_widgets\" {\n    export interface LineWidgets {\n        lineWidgets: Ace.LineWidget[];\n        editor: Ace.Editor;\n    }\n}\n\ndeclare module \"./src/selection\" {\n    export interface Selection extends Ace.EventEmitter<Ace.MultiSelectionEvents>, Ace.MultiSelectProperties {\n    }\n}\n\ndeclare module \"./src/range\" {\n    export interface Range {\n        id?: number;\n        cursor?: Ace.Point;\n        isBackwards?: boolean;\n    }\n}\n\ndeclare module \"./src/virtual_renderer\" {\n    export interface VirtualRenderer extends Ace.EventEmitter<Ace.VirtualRendererEvents>, Ace.OptionsProvider<Ace.VirtualRendererOptions> {\n        $customScrollbar?: boolean,\n        $extraHeight?: number,\n        $showGutter?: boolean,\n        $showPrintMargin?: boolean,\n        $printMarginColumn?: number,\n        $animatedScroll?: boolean,\n        $isMousePressed?: boolean,\n        textarea: HTMLTextAreaElement,\n        $hScrollBarAlwaysVisible?: boolean,\n        $vScrollBarAlwaysVisible?: boolean\n        $maxLines?: number,\n        $scrollPastEnd?: number,\n        enableKeyboardAccessibility?: boolean,\n        $highlightGutterLine?: boolean,\n        $minLines?: number,\n        $maxPixelHeight?: number,\n        $gutterWidth?: number,\n        showInvisibles?: boolean,\n        $hasCssTransforms?: boolean,\n        $blockCursor?: boolean,\n        $useTextareaForIME?: boolean,\n        theme?: any,\n        $theme?: any,\n        destroyed?: boolean,\n        session: Ace.EditSession,\n        keyboardFocusClassName?: string,\n    }\n}\n\ndeclare module \"./src/snippets\" {\n    interface SnippetManager extends Ace.EventEmitter<any> {\n    }\n}\n\ndeclare module \"./src/ext/command_bar\" {\n    export interface CommandBarTooltip extends Ace.EventEmitter<any> {\n        $shouldHideMoreOptions?: boolean,\n    }\n}\n\ndeclare module \"./src/commands/command_manager\" {\n    export interface CommandManager extends Ace.EventEmitter<any> {\n        $checkCommandState?: boolean\n    }\n}\n\ndeclare module \"./src/autocomplete/popup\" {\n\n    export interface AcePopup extends Ace.AcePopupWithEditor {\n        setSelectOnHover: (val: boolean) => void,\n        setRow: (line: number) => void,\n        getRow: () => number,\n        getHoveredRow: () => number,\n        filterText: string,\n        isOpen: boolean,\n        isTopdown: boolean,\n        autoSelect: boolean,\n        data: Ace.Completion[],\n        setData: (data: Ace.Completion[], filterText?: string) => void,\n        getData: (row: number) => Ace.Completion,\n        hide: () => void,\n        anchor: \"top\" | \"bottom\",\n        anchorPosition: Ace.Point,\n        tryShow: (pos: any, lineHeight: number, anchor: \"top\" | \"bottom\", forceShow?: boolean) => boolean,\n        $borderSize: number,\n        show: (pos: any, lineHeight: number, topdownOnly?: boolean) => void,\n        goTo: (where: Ace.AcePopupNavigation) => void,\n        getTextLeftOffset: () => number,\n        $imageSize: number,\n        anchorPos: any,\n        isMouseOver?: boolean,\n        selectedNode?: HTMLElement,\n    }\n}\n\ndeclare module \"./src/layer/cursor\" {\n    export interface Cursor {\n        timeoutId?: number;\n    }\n}\n\ndeclare module \"./src/layer/gutter\" {\n    export interface Gutter extends Ace.EventEmitter<Ace.GutterEvents> {\n        $useSvgGutterIcons?: boolean,\n        $showFoldedAnnotations?: boolean,\n    }\n}\n\ndeclare module \"./src/layer/text\" {\n    export interface Text extends Ace.EventEmitter<Ace.TextEvents> {\n        config: Ace.LayerConfig\n    }\n}\n\ndeclare module \"./src/lib/app_config\" {\n    export interface AppConfig extends Ace.EventEmitter<any> {\n    }\n}\n\ndeclare module \"./src/mouse/mouse_event\" {\n    export interface MouseEvent {\n        time?: number;\n    }\n}\n\ndeclare module \"./src/mouse/mouse_handler\" {\n\n    export interface MouseHandler {\n        $tooltipFollowsMouse?: boolean,\n        cancelDrag?: boolean\n        //from DefaultHandlers\n        $clickSelection?: Ace.Range,\n        mousedownEvent?: Ace.MouseEvent,\n        startSelect?: (pos?: Ace.Point, waitForClickSelection?: boolean) => void,\n        select?: () => void\n        $lastScroll?: { t: number, vx: number, vy: number, allowed: number }\n        selectEnd?: () => void\n    }\n}\n\ndeclare module \"./src/ext/options\" {\n    export interface OptionPanel extends Ace.EventEmitter<any> {\n    }\n}\n\ndeclare module \"./src/layer/font_metrics\" {\n    export interface FontMetrics extends Ace.EventEmitter<any> {\n    }\n}\n\ndeclare module \"./src/tooltip\" {\n    export interface HoverTooltip {\n        row: number;\n    }\n}\n\ndeclare module \"./src/mouse/default_gutter_handler\" {\n    export interface GutterHandler {\n    }\n}\n\n"
        },
        {
          "name": "ace-modes.d.ts",
          "type": "blob",
          "size": 56.0234375,
          "content": "declare module \"ace-code/src/mode/abap_highlight_rules\" {\n    export const AbapHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/abap\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/abc_highlight_rules\" {\n    export const ABCHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/abc\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/actionscript_highlight_rules\" {\n    export const ActionScriptHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/actionscript\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/ada_highlight_rules\" {\n    export const AdaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/ada\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/alda_highlight_rules\" {\n    export const AldaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/alda\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/apache_conf_highlight_rules\" {\n    export const ApacheConfHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/apache_conf\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/apex_highlight_rules\" {\n    export const ApexHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/apex\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/applescript_highlight_rules\" {\n    export const AppleScriptHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/applescript\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/aql_highlight_rules\" {\n    export const AqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/aql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/asciidoc_highlight_rules\" {\n    export const AsciidocHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/asciidoc\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/asl_highlight_rules\" {\n    export const ASLHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/asl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/assembly_arm32_highlight_rules\" {\n    export const AssemblyARM32HighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/assembly_arm32\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/assembly_x86_highlight_rules\" {\n    export const AssemblyX86HighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/assembly_x86\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/astro_highlight_rules\" {\n    export const AstroHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/astro\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/autohotkey_highlight_rules\" {\n    export const AutoHotKeyHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/autohotkey\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/basic_highlight_rules\" {\n    export const BasicHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/basic\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/batchfile_highlight_rules\" {\n    export const BatchFileHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/batchfile\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/behaviour\" {\n    export const Behaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/behaviour/css\" {\n    export const CssBehaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/behaviour/cstyle\" {\n    export const CstyleBehaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/behaviour/html\" {\n    export const HtmlBehaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/behaviour/javascript\" {\n    export const JavaScriptBehaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/behaviour/liquid\" {\n    export const LiquidBehaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/behaviour/xml\" {\n    export const XmlBehaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/behaviour/xquery\" {\n    export const XQueryBehaviour: new () => import(\"ace-code\").Ace.Behaviour;\n}\n\ndeclare module \"ace-code/src/mode/bibtex_highlight_rules\" {\n    export const BibTeXHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/bibtex\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/c_cpp_highlight_rules\" {\n    export const cFunctions: string;\n    export const c_cppHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/c_cpp\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/c9search_highlight_rules\" {\n    export const C9SearchHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/c9search\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/cirru_highlight_rules\" {\n    export const CirruHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/cirru\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/clojure_highlight_rules\" {\n    export const ClojureHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/clojure\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/cobol_highlight_rules\" {\n    export const CobolHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/cobol\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/coffee_highlight_rules\" {\n    export const CoffeeHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/coffee\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/coldfusion_highlight_rules\" {\n    export const ColdfusionHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/coldfusion\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/crystal_highlight_rules\" {\n    export const CrystalHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/crystal\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/csharp_highlight_rules\" {\n    export const CSharpHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/csharp\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/csound_document_highlight_rules\" {\n    export const CsoundDocumentHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/csound_document\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/csound_orchestra_highlight_rules\" {\n    export const CsoundOrchestraHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/csound_orchestra\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/csound_preprocessor_highlight_rules\" {\n    export const CsoundPreprocessorHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/csound_score_highlight_rules\" {\n    export const CsoundScoreHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/csound_score\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/csp_highlight_rules\" {\n    export const CspHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/csp\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/css_completions\" {\n    export const CssCompletions: new () => import(\"ace-code\").Ace.Completion;\n}\n\ndeclare module \"ace-code/src/mode/css_highlight_rules\" {\n    export const supportType: string;\n    export const supportFunction: string;\n    export const supportConstant: string;\n    export const supportConstantColor: string;\n    export const supportConstantFonts: string;\n    export const numRe: string;\n    export const pseudoElements: string;\n    export const pseudoClasses: string;\n    export const CssHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/css\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/curly_highlight_rules\" {\n    export const CurlyHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/curly\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/cuttlefish_highlight_rules\" {\n    export const CuttlefishHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/cuttlefish\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/d_highlight_rules\" {\n    export const DHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/d\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/dart_highlight_rules\" {\n    export const DartHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/dart\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/diff_highlight_rules\" {\n    export const DiffHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/diff\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/django\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/doc_comment_highlight_rules\" {\n    export const DocCommentHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/dockerfile_highlight_rules\" {\n    export const DockerfileHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/dockerfile\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/dot_highlight_rules\" {\n    export const DotHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/dot\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/drools_highlight_rules\" {\n    export const DroolsHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/drools\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/edifact_highlight_rules\" {\n    export const EdifactHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/edifact\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/eiffel_highlight_rules\" {\n    export const EiffelHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/eiffel\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/ejs\" {\n    export const EjsHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/elixir_highlight_rules\" {\n    export const ElixirHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/elixir\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/elm_highlight_rules\" {\n    export const ElmHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/elm\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/erlang_highlight_rules\" {\n    export const ErlangHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/erlang\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/flix_highlight_rules\" {\n    export const FlixHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/flix\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/folding/asciidoc\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/basic\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/c9search\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/coffee\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/csharp\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/cstyle\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/diff\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/drools\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/fold_mode\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/haskell_cabal\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/html\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/ini\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/java\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/javascript\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/latex\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/lua\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/markdown\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/mixed\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/php\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/pythonic\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/ruby\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/sql\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/sqlserver\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/vbscript\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/velocity\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/xml\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/folding/yaml\" {\n    export const FoldMode: new () => import(\"ace-code\").Ace.Folding;\n}\n\ndeclare module \"ace-code/src/mode/forth_highlight_rules\" {\n    export const ForthHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/forth\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/fortran_highlight_rules\" {\n    export const FortranHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/fortran\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/fsharp_highlight_rules\" {\n    export const FSharpHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/fsharp\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/fsl_highlight_rules\" {\n    export const FSLHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/fsl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/ftl_highlight_rules\" {\n    export const FtlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/ftl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/gcode_highlight_rules\" {\n    export const GcodeHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/gcode\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/gherkin_highlight_rules\" {\n    export const GherkinHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/gherkin\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/gitignore_highlight_rules\" {\n    export const GitignoreHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/gitignore\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/glsl_highlight_rules\" {\n    export const glslHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/glsl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/gobstones_highlight_rules\" {\n    export const GobstonesHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/gobstones\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/golang_highlight_rules\" {\n    export const GolangHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/golang\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/graphqlschema_highlight_rules\" {\n    export const GraphQLSchemaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/graphqlschema\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/groovy_highlight_rules\" {\n    export const GroovyHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/groovy\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/haml_highlight_rules\" {\n    export const HamlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/haml\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/handlebars_highlight_rules\" {\n    export const HandlebarsHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/handlebars\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/haskell_cabal_highlight_rules\" {\n    export const CabalHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/haskell_cabal\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/haskell_highlight_rules\" {\n    export const HaskellHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/haskell\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/haxe_highlight_rules\" {\n    export const HaxeHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/haxe\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/hjson_highlight_rules\" {\n    export const HjsonHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/hjson\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/html_completions\" {\n    export const HtmlCompletions: new () => import(\"ace-code\").Ace.Completion;\n}\n\ndeclare module \"ace-code/src/mode/html_elixir_highlight_rules\" {\n    export const HtmlElixirHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/html_elixir\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/html_highlight_rules\" {\n    export const HtmlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/html_ruby_highlight_rules\" {\n    export const HtmlRubyHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/html_ruby\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/html\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/ini_highlight_rules\" {\n    export const IniHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/ini\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/io_highlight_rules\" {\n    export const IoHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/io\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/ion_highlight_rules\" {\n    export const IonHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/ion\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/jack_highlight_rules\" {\n    export const JackHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/jack\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/jade_highlight_rules\" {\n    export const JadeHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/jade\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/java_highlight_rules\" {\n    export const JavaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/java\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/javascript_highlight_rules\" {\n    export const JavaScriptHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/javascript\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/jexl_highlight_rules\" {\n    export const JexlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/jexl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/js_regex_highlight_rules\" {\n    export const JsRegexHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/jsdoc_comment_highlight_rules\" {\n    export const JsDocCommentHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/json_highlight_rules\" {\n    export const JsonHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/json\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/json5_highlight_rules\" {\n    export const Json5HighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/json5\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/jsp_highlight_rules\" {\n    export const JspHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/jsp\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/jssm_highlight_rules\" {\n    export const JSSMHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/jssm\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/jsx_highlight_rules\" {\n    export const JsxHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/jsx\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/julia_highlight_rules\" {\n    export const JuliaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/julia\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/kotlin_highlight_rules\" {\n    export const KotlinHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/kotlin\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/latex_highlight_rules\" {\n    export const LatexHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/latex\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/latte_highlight_rules\" {\n    export const LatteHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/latte\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/less_highlight_rules\" {\n    export const LessHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/less\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/liquid_highlight_rules\" {\n    export const LiquidHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/liquid\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/lisp_highlight_rules\" {\n    export const LispHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/lisp\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/livescript\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/logiql_highlight_rules\" {\n    export const LogiQLHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/logiql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/logtalk_highlight_rules\" {\n    export const LogtalkHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/logtalk\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/lsl_highlight_rules\" {\n    export const LSLHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/lsl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/lua_highlight_rules\" {\n    export const LuaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/lua\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/luapage_highlight_rules\" {\n    export const LuaPageHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/luapage\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/lucene_highlight_rules\" {\n    export const LuceneHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/lucene\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/makefile_highlight_rules\" {\n    export const MakefileHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/makefile\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/markdown_highlight_rules\" {\n    export const MarkdownHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/markdown\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/mask_highlight_rules\" {\n    export const MaskHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/mask\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/matching_brace_outdent\" {\n    export const MatchingBraceOutdent: new () => import(\"ace-code\").Ace.Outdent;\n}\n\ndeclare module \"ace-code/src/mode/matching_parens_outdent\" {\n    export const MatchingParensOutdent: new () => import(\"ace-code\").Ace.Outdent;\n}\n\ndeclare module \"ace-code/src/mode/matlab_highlight_rules\" {\n    export const MatlabHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/matlab\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/maze_highlight_rules\" {\n    export const MazeHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/maze\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/mediawiki_highlight_rules\" {\n    export const MediaWikiHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/mediawiki\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/mel_highlight_rules\" {\n    export const MELHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/mel\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/mips_highlight_rules\" {\n    export const MIPSHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/mips\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/mixal_highlight_rules\" {\n    export const MixalHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/mixal\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/mushcode_highlight_rules\" {\n    export const MushCodeRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/mushcode\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/mysql_highlight_rules\" {\n    export const MysqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/mysql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/nasal_highlight_rules\" {\n    export const NasalHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/nasal\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/nginx_highlight_rules\" {\n    export const NginxHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/nginx\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/nim_highlight_rules\" {\n    export const NimHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/nim\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/nix_highlight_rules\" {\n    export const NixHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/nix\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/nsis_highlight_rules\" {\n    export const NSISHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/nsis\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/nunjucks_highlight_rules\" {\n    export const NunjucksHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/nunjucks\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/objectivec_highlight_rules\" {\n    export const ObjectiveCHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/objectivec\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/ocaml_highlight_rules\" {\n    export const OcamlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/ocaml\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/odin_highlight_rules\" {\n    export const OdinHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/odin\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/partiql_highlight_rules\" {\n    export const PartiqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/partiql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/pascal_highlight_rules\" {\n    export const PascalHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/pascal\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/perl_highlight_rules\" {\n    export const PerlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/perl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/pgsql_highlight_rules\" {\n    export const PgsqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/pgsql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/php_completions\" {\n    export const PhpCompletions: new () => import(\"ace-code\").Ace.Completion;\n}\n\ndeclare module \"ace-code/src/mode/php_highlight_rules\" {\n    export const PhpHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n    export const PhpLangHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/php_laravel_blade_highlight_rules\" {\n    export const PHPLaravelBladeHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/php_laravel_blade\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/php\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/pig_highlight_rules\" {\n    export const PigHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/pig\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/plain_text\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/plsql_highlight_rules\" {\n    export const plsqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/plsql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/powershell_highlight_rules\" {\n    export const PowershellHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/powershell\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/praat_highlight_rules\" {\n    export const PraatHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/praat\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/prisma_highlight_rules\" {\n    export const PrismaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/prisma\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/prolog_highlight_rules\" {\n    export const PrologHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/prolog\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/properties_highlight_rules\" {\n    export const PropertiesHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/properties\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/protobuf_highlight_rules\" {\n    export const ProtobufHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/protobuf\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/prql_highlight_rules\" {\n    export const PrqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/prql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/puppet_highlight_rules\" {\n    export const PuppetHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/puppet\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/python_highlight_rules\" {\n    export const PythonHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/python\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/qml_highlight_rules\" {\n    export const QmlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/qml\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/r_highlight_rules\" {\n    export const RHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/r\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/raku_highlight_rules\" {\n    export const RakuHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/raku\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/razor_completions\" {\n    export const RazorCompletions: new () => import(\"ace-code\").Ace.Completion;\n}\n\ndeclare module \"ace-code/src/mode/razor_highlight_rules\" {\n    export const RazorHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n    export const RazorLangHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/razor\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/rdoc_highlight_rules\" {\n    export const RDocHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/rdoc\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/red_highlight_rules\" {\n    export const RedHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/red\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/redshift_highlight_rules\" {\n    export const RedshiftHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/redshift\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/rhtml_highlight_rules\" {\n    export const RHtmlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/rhtml\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/robot_highlight_rules\" {\n    export const RobotHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/robot\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/rst_highlight_rules\" {\n    export const RSTHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/rst\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/ruby_highlight_rules\" {\n    export const constantOtherSymbol: { token: string; regex: string; };\n    export const qString: { token: string; regex: string; };\n    export const qqString: { token: string; regex: string; };\n    export const tString: { token: string; regex: string; };\n    export const constantNumericHex: { token: string; regex: string; };\n    export const constantNumericBinary: { token: string; regex: RegExp; };\n    export const constantNumericDecimal: { token: string; regex: RegExp; };\n    export const constantNumericOctal: { token: string; regex: RegExp; };\n    export const constantNumericRational: { token: string; regex: RegExp; };\n    export const constantNumericComplex: { token: string; regex: RegExp; };\n    export const constantNumericFloat: { token: string; regex: string; };\n    export const instanceVariable: { token: string; regex: string; };\n    export const RubyHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/ruby\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/rust_highlight_rules\" {\n    export const RustHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/rust\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/sac_highlight_rules\" {\n    export const sacHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/sac\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/sass_highlight_rules\" {\n    export const SassHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/sass\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/scad_highlight_rules\" {\n    export const scadHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/scad\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/scala_highlight_rules\" {\n    export const ScalaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/scala\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/scheme_highlight_rules\" {\n    export const SchemeHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/scheme\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/scrypt_highlight_rules\" {\n    export const scryptHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/scrypt\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/scss_highlight_rules\" {\n    export const ScssHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/scss\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/sh_highlight_rules\" {\n    export const reservedKeywords: string;\n    export const languageConstructs: string;\n    export const ShHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/sh\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/sjs_highlight_rules\" {\n    export const SJSHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/sjs\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/slim_highlight_rules\" {\n    export const SlimHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/slim\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/smarty_highlight_rules\" {\n    export const SmartyHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/smarty\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/smithy_highlight_rules\" {\n    export const SmithyHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/smithy\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/snippets\" {\n    export const SnippetHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n    export const SnippetGroupHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/soy_template_highlight_rules\" {\n    export const SoyTemplateHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/soy_template\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/space_highlight_rules\" {\n    export const SpaceHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/space\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/sparql_highlight_rules\" {\n    export const SPARQLHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/sparql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/sql_highlight_rules\" {\n    export const SqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/sql\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/sqlserver_highlight_rules\" {\n    export const SqlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/sqlserver\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/stylus_highlight_rules\" {\n    export const StylusHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/stylus\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/svg_highlight_rules\" {\n    export const SvgHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/svg\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/swift_highlight_rules\" {\n    export const HighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n    export const SwiftHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/swift\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/tcl_highlight_rules\" {\n    export const TclHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/tcl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/terraform_highlight_rules\" {\n    export const TerraformHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/terraform\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/tex_highlight_rules\" {\n    export const TexHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/tex\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/text_highlight_rules\" {\n    export const TextHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/text\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/textile_highlight_rules\" {\n    export const TextileHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/textile\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/toml_highlight_rules\" {\n    export const TomlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/toml\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/tsx_highlight_rules\" {\n    export const TsxHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/tsx\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/turtle_highlight_rules\" {\n    export const TurtleHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/turtle\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/twig_highlight_rules\" {\n    export const TwigHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/twig\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/typescript_highlight_rules\" {\n    export const TypeScriptHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/typescript\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/vala_highlight_rules\" {\n    export const ValaHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/vala\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/vbscript_highlight_rules\" {\n    export const VBScriptHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/vbscript\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/velocity_highlight_rules\" {\n    export const VelocityHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/velocity\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/verilog_highlight_rules\" {\n    export const VerilogHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/verilog\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/vhdl_highlight_rules\" {\n    export const VHDLHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/vhdl\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/visualforce_highlight_rules\" {\n    export const VisualforceHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/visualforce\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/vue_highlight_rules\" {\n    export const VueHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/vue\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/wollok_highlight_rules\" {\n    export const WollokHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/wollok\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/xml_highlight_rules\" {\n    export const XmlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/xml\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/yaml_highlight_rules\" {\n    export const YamlHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/yaml\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/zeek_highlight_rules\" {\n    export const ZeekHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/zeek\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}\n\ndeclare module \"ace-code/src/mode/zig_highlight_rules\" {\n    export const ZigHighlightRules: new () => import(\"ace-code\").Ace.HighlightRules;\n}\n\ndeclare module \"ace-code/src/mode/zig\" {\n    export const Mode: new () => import(\"ace-code\").Ace.SyntaxMode;\n}"
        },
        {
          "name": "ace.d.ts",
          "type": "blob",
          "size": 41.6474609375,
          "content": "/* This file is generated using `npm run update-types` */\n\n/// <reference path=\"./types/ace-lib.d.ts\" />\n/// <reference path=\"./types/ace-modules.d.ts\" />\n/// <reference path=\"./types/ace-theme.d.ts\" />\n/// <reference path=\"./types/ace-ext.d.ts\" />\n/// <reference path=\"./types/ace-snippets.d.ts\" />\n/// <reference path=\"./ace-modes.d.ts\" />\ndeclare module \"ace-code\" {\n    export namespace Ace {\n        type Anchor = import(\"ace-code/src/anchor\").Anchor;\n        type Editor = import(\"ace-code/src/editor\").Editor;\n        type EditSession = import(\"ace-code/src/edit_session\").EditSession;\n        type Document = import(\"ace-code/src/document\").Document;\n        type Fold = import(\"ace-code/src/edit_session/fold\").Fold;\n        type FoldLine = import(\"ace-code/src/edit_session/fold_line\").FoldLine;\n        type Range = import(\"ace-code/src/range\").Range;\n        type VirtualRenderer = import(\"ace-code/src/virtual_renderer\").VirtualRenderer;\n        type UndoManager = import(\"ace-code/src/undomanager\").UndoManager;\n        type Tokenizer = import(\"ace-code/src/tokenizer\").Tokenizer;\n        type TokenIterator = import(\"ace-code/src/token_iterator\").TokenIterator;\n        type Selection = import(\"ace-code/src/selection\").Selection;\n        type Autocomplete = import(\"ace-code/src/autocomplete\").Autocomplete;\n        type InlineAutocomplete = import(\"ace-code/src/ext/inline_autocomplete\").InlineAutocomplete;\n        type CompletionProvider = import(\"ace-code/src/autocomplete\").CompletionProvider;\n        type AcePopup = import(\"ace-code/src/autocomplete/popup\").AcePopup;\n        type AceInline = import(\"ace-code/src/autocomplete/inline\").AceInline;\n        type MouseEvent = import(\"ace-code/src/mouse/mouse_event\").MouseEvent;\n        type RangeList = import(\"ace-code/src/range_list\").RangeList;\n        type FilteredList = import(\"ace-code/src/autocomplete\").FilteredList;\n        type LineWidgets = import(\"ace-code/src/line_widgets\").LineWidgets;\n        type SearchBox = import(\"ace-code/src/ext/searchbox\").SearchBox;\n        type Occur = import(\"ace-code/src/occur\").Occur;\n        type DefaultHandlers = import(\"ace-code/src/mouse/default_handlers\").DefaultHandlers;\n        type GutterHandler = import(\"ace-code/src/mouse/default_gutter_handler\").GutterHandler;\n        type DragdropHandler = import(\"ace-code/src/mouse/dragdrop_handler\").DragdropHandler;\n        type AppConfig = import(\"ace-code/src/lib/app_config\").AppConfig;\n        type Config = typeof import(\"ace-code/src/config\");\n        type GutterTooltip = import(\"ace-code/src/mouse/default_gutter_handler\").GutterTooltip;\n        type GutterKeyboardEvent = import(\"ace-code/src/keyboard/gutter_handler\").GutterKeyboardEvent;\n        type AfterLoadCallback = (err: Error | null, module: unknown) => void;\n        type LoaderFunction = (moduleName: string, afterLoad: AfterLoadCallback) => void;\n        export interface ConfigOptions {\n            packaged: boolean;\n            workerPath: string | null;\n            modePath: string | null;\n            themePath: string | null;\n            basePath: string;\n            suffix: string;\n            loadWorkerFromBlob: boolean;\n            sharedPopups: boolean;\n            useStrictCSP: boolean | null;\n        }\n        interface Theme {\n            cssClass?: string;\n            cssText?: string;\n            padding?: number | string;\n            isDark?: boolean;\n        }\n        interface ScrollBar {\n            setVisible(visible: boolean): void;\n            [key: string]: any;\n        }\n        interface HScrollbar extends ScrollBar {\n            setWidth(width: number): void;\n        }\n        interface VScrollbar extends ScrollBar {\n            setHeight(width: number): void;\n        }\n        interface LayerConfig {\n            width: number;\n            padding: number;\n            firstRow: number;\n            firstRowScreen: number;\n            lastRow: number;\n            lineHeight: number;\n            characterWidth: number;\n            minHeight: number;\n            maxHeight: number;\n            offset: number;\n            height: number;\n            gutterOffset: number;\n        }\n        interface HardWrapOptions {\n            startRow: number;\n            endRow: number;\n            allowMerge?: boolean;\n            column?: number;\n        }\n        interface CommandBarOptions {\n            maxElementsOnTooltip: number;\n            alwaysShow: boolean;\n            showDelay: number;\n            hideDelay: number;\n        }\n        interface ScreenCoordinates {\n            row: number;\n            column: number;\n            side?: 1 | -1;\n            offsetX?: number;\n        }\n        interface Folding {\n            /**\n             * Looks up a fold at a given row/column. Possible values for side:\n             *   -1: ignore a fold if fold.start = row/column\n             *   +1: ignore a fold if fold.end = row/column\n             **/\n            getFoldAt(row: number, column: number, side?: number): Ace.Fold;\n            /**\n             * Returns all folds in the given range. Note, that this will return folds\n             **/\n            getFoldsInRange(range: Ace.Range | Ace.Delta): Ace.Fold[];\n            getFoldsInRangeList(ranges: Ace.Range[] | Ace.Range): Ace.Fold[];\n            /**\n             * Returns all folds in the document\n             */\n            getAllFolds(): Ace.Fold[];\n            /**\n             * Returns the string between folds at the given position.\n             * E.g.\n             *  foo<fold>b|ar<fold>wolrd -> \"bar\"\n             *  foo<fold>bar<fold>wol|rd -> \"world\"\n             *  foo<fold>bar<fo|ld>wolrd -> <null>\n             *\n             * where | means the position of row/column\n             *\n             * The trim option determs if the return string should be trimed according\n             * to the \"side\" passed with the trim value:\n             *\n             * E.g.\n             *  foo<fold>b|ar<fold>wolrd -trim=-1> \"b\"\n             *  foo<fold>bar<fold>wol|rd -trim=+1> \"rld\"\n             *  fo|o<fold>bar<fold>wolrd -trim=00> \"foo\"\n             */\n            getFoldStringAt(row: number, column: number, trim?: number, foldLine?: Ace.FoldLine): string | null;\n            getFoldLine(docRow: number, startFoldLine?: Ace.FoldLine): null | Ace.FoldLine;\n            /**\n             * Returns the fold which starts after or contains docRow\n             */\n            getNextFoldLine(docRow: number, startFoldLine?: Ace.FoldLine): null | Ace.FoldLine;\n            getFoldedRowCount(first: number, last: number): number;\n            /**\n             * Adds a new fold.\n             *      The new created Fold object or an existing fold object in case the\n             *      passed in range fits an existing fold exactly.\n             */\n            addFold(placeholder: Ace.Fold | string, range?: Ace.Range): Ace.Fold;\n            addFolds(folds: Ace.Fold[]): void;\n            removeFold(fold: Ace.Fold): void;\n            removeFolds(folds: Ace.Fold[]): void;\n            expandFold(fold: Ace.Fold): void;\n            expandFolds(folds: Ace.Fold[]): void;\n            unfold(location?: number | null | Ace.Point | Ace.Range | Ace.Range[], expandInner?: boolean): Ace.Fold[] | undefined;\n            /**\n             * Checks if a given documentRow is folded. This is true if there are some\n             * folded parts such that some parts of the line is still visible.\n             **/\n            isRowFolded(docRow: number, startFoldRow?: Ace.FoldLine): boolean;\n            getRowFoldEnd(docRow: number, startFoldRow?: Ace.FoldLine): number;\n            getRowFoldStart(docRow: number, startFoldRow?: Ace.FoldLine): number;\n            getFoldDisplayLine(foldLine: Ace.FoldLine, endRow?: number | null, endColumn?: number | null, startRow?: number | null, startColumn?: number | null): string;\n            getDisplayLine(row: number, endColumn: number | null, startRow: number | null, startColumn: number | null): string;\n            toggleFold(tryToUnfold?: boolean): void;\n            getCommentFoldRange(row: number, column: number, dir?: number): Ace.Range | undefined;\n            foldAll(startRow?: number | null, endRow?: number | null, depth?: number | null, test?: Function): void;\n            foldToLevel(level: number): void;\n            foldAllComments(): void;\n            setFoldStyle(style: string): void;\n            foldWidgets: any[];\n            getFoldWidget: any;\n            getFoldWidgetRange: any;\n            getParentFoldRangeData(row: number, ignoreCurrent?: boolean): {\n                range?: Ace.Range;\n                firstRange?: Ace.Range;\n            };\n            onFoldWidgetClick(row: number, e: any): void;\n            toggleFoldWidget(toggleParent?: boolean): void;\n            updateFoldWidgets(delta: Ace.Delta): void;\n            tokenizerUpdateFoldWidgets(e: any): void;\n        }\n        interface BracketMatch {\n            findMatchingBracket: (position: Point, chr?: string) => Point;\n            getBracketRange: (pos: Point) => null | Range;\n            /**\n             * Returns:\n             * * null if there is no any bracket at `pos`;\n             * * two Ranges if there is opening and closing brackets;\n             * * one Range if there is only one bracket\n             */\n            getMatchingBracketRanges: (pos: Point, isBackwards?: boolean) => null | Range[];\n            /**\n             * Returns [[Range]]'s for matching tags and tag names, if there are any\n             */\n            getMatchingTags: (pos: Point) => {\n                closeTag: Range;\n                closeTagName: Range;\n                openTag: Range;\n                openTagName: Range;\n            };\n        }\n        interface IRange {\n            start: Point;\n            end: Point;\n        }\n        interface LineWidget {\n            editor?: Editor;\n            el?: HTMLElement;\n            rowCount?: number;\n            hidden?: boolean;\n            column?: number;\n            row: number;\n            session?: EditSession;\n            html?: string;\n            text?: string;\n            className?: string;\n            coverGutter?: boolean;\n            pixelHeight?: number;\n            type?: any;\n            destroy?: () => void;\n            coverLine?: boolean;\n            fixedWidth?: boolean;\n            fullWidth?: boolean;\n            screenWidth?: number;\n            rowsAbove?: number;\n            lenses?: any[];\n        }\n        type NewLineMode = \"auto\" | \"unix\" | \"windows\";\n        interface EditSessionOptions {\n            wrap: \"off\" | \"free\" | \"printmargin\" | boolean | number;\n            wrapMethod: \"code\" | \"text\" | \"auto\";\n            indentedSoftWrap: boolean;\n            firstLineNumber: number;\n            useWorker: boolean;\n            useSoftTabs: boolean;\n            tabSize: number;\n            navigateWithinSoftTabs: boolean;\n            foldStyle: \"markbegin\" | \"markbeginend\" | \"manual\";\n            overwrite: boolean;\n            newLineMode: NewLineMode;\n            mode: string;\n        }\n        interface VirtualRendererOptions {\n            animatedScroll: boolean;\n            showInvisibles: boolean;\n            showPrintMargin: boolean;\n            printMarginColumn: number;\n            printMargin: boolean | number;\n            showGutter: boolean;\n            fadeFoldWidgets: boolean;\n            showFoldWidgets: boolean;\n            showLineNumbers: boolean;\n            displayIndentGuides: boolean;\n            highlightIndentGuides: boolean;\n            highlightGutterLine: boolean;\n            hScrollBarAlwaysVisible: boolean;\n            vScrollBarAlwaysVisible: boolean;\n            fontSize: string | number;\n            fontFamily: string;\n            maxLines: number;\n            minLines: number;\n            scrollPastEnd: number;\n            fixedWidthGutter: boolean;\n            customScrollbar: boolean;\n            theme: string;\n            hasCssTransforms: boolean;\n            maxPixelHeight: number;\n            useSvgGutterIcons: boolean;\n            showFoldedAnnotations: boolean;\n            useResizeObserver: boolean;\n        }\n        interface MouseHandlerOptions {\n            scrollSpeed: number;\n            dragDelay: number;\n            dragEnabled: boolean;\n            focusTimeout: number;\n            tooltipFollowsMouse: boolean;\n        }\n        interface EditorOptions extends EditSessionOptions, MouseHandlerOptions, VirtualRendererOptions {\n            selectionStyle: \"fullLine\" | \"screenLine\" | \"text\" | \"line\";\n            highlightActiveLine: boolean;\n            highlightSelectedWord: boolean;\n            readOnly: boolean;\n            copyWithEmptySelection: boolean;\n            cursorStyle: \"ace\" | \"slim\" | \"smooth\" | \"wide\";\n            mergeUndoDeltas: true | false | \"always\";\n            behavioursEnabled: boolean;\n            wrapBehavioursEnabled: boolean;\n            enableAutoIndent: boolean;\n            enableBasicAutocompletion: boolean | Completer[];\n            enableLiveAutocompletion: boolean | Completer[];\n            liveAutocompletionDelay: number;\n            liveAutocompletionThreshold: number;\n            enableSnippets: boolean;\n            autoScrollEditorIntoView: boolean;\n            keyboardHandler: string | null;\n            placeholder: string;\n            value: string;\n            session: EditSession;\n            relativeLineNumbers: boolean;\n            enableMultiselect: boolean;\n            enableKeyboardAccessibility: boolean;\n            enableCodeLens: boolean;\n            textInputAriaLabel: string;\n            enableMobileMenu: boolean;\n        }\n        interface EventsBase {\n            [key: string]: any;\n        }\n        interface EditSessionEvents {\n            /**\n             * Emitted when the document changes.\n             */\n            \"change\": (delta: Delta) => void;\n            /**\n             * Emitted when the tab size changes, via [[EditSession.setTabSize]].\n             */\n            \"changeTabSize\": () => void;\n            /**\n             * Emitted when the ability to overwrite text changes, via [[EditSession.setOverwrite]].\n             */\n            \"changeOverwrite\": (overwrite: boolean) => void;\n            /**\n             * Emitted when the gutter changes, either by setting or removing breakpoints, or when the gutter decorations change.\n             */\n            \"changeBreakpoint\": (e?: {\n                row?: number;\n                breakpoint?: boolean;\n            }) => void;\n            /**\n             * Emitted when a front marker changes.\n             */\n            \"changeFrontMarker\": () => void;\n            /**\n             * Emitted when a back marker changes.\n             */\n            \"changeBackMarker\": () => void;\n            /**\n             * Emitted when an annotation changes, like through [[EditSession.setAnnotations]].\n             */\n            \"changeAnnotation\": (e: {}) => void;\n            /**\n             * Emitted when a background tokenizer asynchronously processes new rows.\n             */\n            \"tokenizerUpdate\": (e: {\n                data: {\n                    first: number;\n                    last: number;\n                };\n            }) => void;\n            /**\n             * Emitted when the current mode changes.\n             */\n            \"changeMode\": (e: any) => void;\n            /**\n             * Emitted when the wrap mode changes.\n             */\n            \"changeWrapMode\": (e: any) => void;\n            /**\n             * Emitted when the wrapping limit changes.\n             */\n            \"changeWrapLimit\": (e: any) => void;\n            /**\n             * Emitted when a code fold is added or removed.\n             */\n            \"changeFold\": (e: any, session?: EditSession) => void;\n            /**\n             * Emitted when the scroll top changes.\n             * @param scrollTop The new scroll top value\n             **/\n            \"changeScrollTop\": (scrollTop: number) => void;\n            /**\n             * Emitted when the scroll left changes.\n             * @param scrollLeft The new scroll left value\n             **/\n            \"changeScrollLeft\": (scrollLeft: number) => void;\n            \"changeEditor\": (e: {\n                editor?: Editor;\n                oldEditor?: Editor;\n            }) => void;\n            \"changeSelection\": () => void;\n            \"startOperation\": (op?: {\n                command?: {\n                    name?: string;\n                };\n                args?: any;\n            }) => void;\n            \"endOperation\": (op?: any) => void;\n            \"beforeEndOperation\": () => void;\n        }\n        interface EditorEvents {\n            \"change\": (delta: Delta) => void;\n            \"changeSelection\": () => void;\n            \"input\": () => void;\n            /**\n             * Emitted whenever the [[EditSession]] changes.\n             * @param e An object with two properties, `oldSession` and `session`, that represent the old and new [[EditSession]]s.\n             **/\n            \"changeSession\": (e: {\n                oldSession: EditSession;\n                session: EditSession;\n            }) => void;\n            \"blur\": (e: any) => void;\n            \"mousedown\": (e: MouseEvent) => void;\n            \"mousemove\": (e: MouseEvent & {\n                scrollTop?: any;\n            }, editor?: Editor) => void;\n            \"changeStatus\": (e: any) => void;\n            \"keyboardActivity\": (e: any) => void;\n            \"mousewheel\": (e: MouseEvent) => void;\n            \"mouseup\": (e: MouseEvent) => void;\n            \"beforeEndOperation\": (e: any) => void;\n            \"nativecontextmenu\": (e: any) => void;\n            \"destroy\": (e: any) => void;\n            \"focus\": (e?: any) => void;\n            /**\n             * Emitted when text is copied.\n             * @param text The copied text\n             **/\n            \"copy\": (e: {\n                text: string;\n            }) => void;\n            /**\n             * Emitted when text is pasted.\n             **/\n            \"paste\": (text: string, event: any) => void;\n            /**\n             * Emitted when the selection style changes, via [[Editor.setSelectionStyle]].\n             * @param data Contains one property, `data`, which indicates the new selection style\n             **/\n            \"changeSelectionStyle\": (data: \"fullLine\" | \"screenLine\" | \"text\" | \"line\") => void;\n            \"changeMode\": (e: {\n                mode?: Ace.SyntaxMode;\n                oldMode?: Ace.SyntaxMode;\n            }) => void;\n            //from searchbox extension\n            \"findSearchBox\": (e: {\n                match: boolean;\n            }) => void;\n            //from code_lens extension\n            \"codeLensClick\": (e: any) => void;\n            \"select\": () => void;\n            \"gutterkeydown\": (e: GutterKeyboardEvent) => void;\n            \"gutterclick\": (e: MouseEvent) => void;\n            \"showGutterTooltip\": (e: GutterTooltip) => void;\n            \"hideGutterTooltip\": (e: GutterTooltip) => void;\n        }\n        interface AcePopupEvents {\n            \"click\": (e: MouseEvent) => void;\n            \"dblclick\": (e: MouseEvent) => void;\n            \"tripleclick\": (e: MouseEvent) => void;\n            \"quadclick\": (e: MouseEvent) => void;\n            \"show\": () => void;\n            \"hide\": () => void;\n            \"select\": (hide: boolean) => void;\n            \"changeHoverMarker\": (e: any) => void;\n        }\n        interface DocumentEvents {\n            /**\n             * Fires whenever the document changes.\n             * Several methods trigger different `\"change\"` events. Below is a list of each action type, followed by each property that's also available:\n             *  * `\"insert\"`\n             *    * `range`: the [[Range]] of the change within the document\n             *    * `lines`: the lines being added\n             *  * `\"remove\"`\n             *    * `range`: the [[Range]] of the change within the document\n             *    * `lines`: the lines being removed\n             *\n             **/\n            \"change\": (e: Delta) => void;\n            \"changeNewLineMode\": () => void;\n        }\n        interface AnchorEvents {\n            /**\n             * Fires whenever the anchor position changes.\n             * Both of these objects have a `row` and `column` property corresponding to the position.\n             * Events that can trigger this function include [[Anchor.setPosition `setPosition()`]].\n             * @param {Object} e  An object containing information about the anchor position. It has two properties:\n             *  - `old`: An object describing the old Anchor position\n             *  - `value`: An object describing the new Anchor position\n             **/\n            \"change\": (e: {\n                old: Point;\n                value: Point;\n            }) => void;\n        }\n        interface BackgroundTokenizerEvents {\n            /**\n             * Fires whenever the background tokeniziers between a range of rows are going to be updated.\n             * @param e An object containing two properties, `first` and `last`, which indicate the rows of the region being updated.\n             **/\n            \"update\": (e: {\n                data: {\n                    first: number;\n                    last: number;\n                };\n            }) => void;\n        }\n        interface SelectionEvents {\n            /**\n             * Emitted when the cursor position changes.\n             **/\n            \"changeCursor\": () => void;\n            /**\n             * Emitted when the cursor selection changes.\n             **/\n            \"changeSelection\": () => void;\n        }\n        interface MultiSelectionEvents extends SelectionEvents {\n            \"multiSelect\": () => void;\n            \"addRange\": (e: {\n                range: Range;\n            }) => void;\n            \"removeRange\": (e: {\n                ranges: Range[];\n            }) => void;\n            \"singleSelect\": () => void;\n        }\n        interface PlaceHolderEvents {\n            \"cursorEnter\": (e: any) => void;\n            \"cursorLeave\": (e: any) => void;\n        }\n        interface GutterEvents {\n            \"changeGutterWidth\": (width: number) => void;\n            \"afterRender\": () => void;\n        }\n        interface TextEvents {\n            \"changeCharacterSize\": (e: any) => void;\n        }\n        interface VirtualRendererEvents {\n            \"afterRender\": (e?: any, renderer?: VirtualRenderer) => void;\n            \"beforeRender\": (e: any, renderer?: VirtualRenderer) => void;\n            \"themeLoaded\": (e: {\n                theme: string | Theme;\n            }) => void;\n            \"themeChange\": (e: {\n                theme: string | Theme;\n            }) => void;\n            \"scrollbarVisibilityChanged\": () => void;\n            \"changeCharacterSize\": (e: any) => void;\n            \"resize\": (e?: any) => void;\n            \"autosize\": () => void;\n        }\n        export class EventEmitter<T extends {\n            [K in keyof T]: (...args: any[]) => any;\n        }> {\n            once<K extends keyof T>(name: K, callback: T[K]): void;\n            setDefaultHandler(name: string, callback: Function): void;\n            removeDefaultHandler(name: string, callback: Function): void;\n            on<K extends keyof T>(name: K, callback: T[K], capturing?: boolean): T[K];\n            addEventListener<K extends keyof T>(name: K, callback: T[K], capturing?: boolean): T[K];\n            off<K extends keyof T>(name: K, callback: T[K]): void;\n            removeListener<K extends keyof T>(name: K, callback: T[K]): void;\n            removeEventListener<K extends keyof T>(name: K, callback: T[K]): void;\n            removeAllListeners(name?: string): void;\n        }\n        interface SearchOptions {\n            /**The string or regular expression you're looking for*/\n            needle: string | RegExp;\n            preventScroll: boolean;\n            /**Whether to search backwards from where cursor currently is*/\n            backwards: boolean;\n            /**The starting [[Range]] or cursor position to begin the search*/\n            start: Range;\n            /**Whether or not to include the current line in the search*/\n            skipCurrent: boolean;\n            /**The [[Range]] to search within. Set this to `null` for the whole document*/\n            range: Range | null;\n            preserveCase: boolean;\n            /**Whether the search is a regular expression or not*/\n            regExp: boolean;\n            /**Whether the search matches only on whole words*/\n            wholeWord: boolean;\n            /**Whether the search ought to be case-sensitive*/\n            caseSensitive: boolean;\n            /**Whether to wrap the search back to the beginning when it hits the end*/\n            wrap: boolean;\n            re: any;\n        }\n        interface Point {\n            row: number;\n            column: number;\n        }\n        type Position = Point;\n        interface Delta {\n            action: \"insert\" | \"remove\";\n            start: Point;\n            end: Point;\n            lines: string[];\n            id?: number;\n            folds?: Fold[];\n        }\n        interface Annotation {\n            row: number;\n            column: number;\n            text: string;\n            type: string;\n        }\n        export interface MarkerGroupItem {\n            range: Range;\n            className: string;\n        }\n        type MarkerGroup = import(\"ace-code/src/marker_group\").MarkerGroup;\n        export interface Command {\n            name?: string;\n            bindKey?: string | {\n                mac?: string;\n                win?: string;\n            };\n            readOnly?: boolean;\n            exec?: (editor?: Editor | any, args?: any) => void;\n            isAvailable?: (editor: Editor) => boolean;\n            description?: string;\n            multiSelectAction?: \"forEach\" | \"forEachLine\" | Function;\n            scrollIntoView?: true | \"cursor\" | \"center\" | \"selectionPart\" | \"animate\" | \"selection\" | \"none\";\n            aceCommandGroup?: string;\n            passEvent?: boolean;\n            level?: number;\n            action?: string;\n        }\n        type CommandLike = Command | ((editor: Editor) => void) | ((sb: SearchBox) => void);\n        type KeyboardHandler = Partial<import(\"ace-code/src/keyboard/hash_handler\").HashHandler> & {\n            attach?: (editor: Editor) => void;\n            detach?: (editor: Editor) => void;\n            getStatusText?: (editor?: any, data?: any) => string;\n        };\n        export interface MarkerLike {\n            range?: Range;\n            type: string;\n            renderer?: MarkerRenderer;\n            clazz: string;\n            inFront?: boolean;\n            id?: number;\n            update?: (html: string[],\n                // TODO maybe define Marker class\n                marker: any, session: EditSession, config: any) => void;\n            [key: string]: any;\n        }\n        type MarkerRenderer = (html: string[], range: Range, left: number, top: number, config: any) => void;\n        interface Token {\n            type: string;\n            value: string;\n            index?: number;\n            start?: number;\n        }\n        type BaseCompletion = import(\"ace-code/src/autocomplete\").BaseCompletion;\n        type SnippetCompletion = import(\"ace-code/src/autocomplete\").SnippetCompletion;\n        type ValueCompletion = import(\"ace-code/src/autocomplete\").ValueCompletion;\n        type Completion = import(\"ace-code/src/autocomplete\").Completion;\n        type HighlightRule = ({\n            defaultToken: string;\n        } | {\n            include: string;\n        } | {\n            todo: string;\n        } | {\n            token: string | string[] | ((value: string) => string);\n            regex: string | RegExp;\n            next?: string | (() => void);\n            push?: string;\n            comment?: string;\n            caseInsensitive?: boolean;\n            nextState?: string;\n        }) & {\n            [key: string]: any;\n        };\n        type HighlightRulesMap = Record<string, HighlightRule[]>;\n        type KeywordMapper = (keyword: string) => string;\n        interface HighlightRules {\n            addRules(rules: HighlightRulesMap, prefix?: string): void;\n            getRules(): HighlightRulesMap;\n            embedRules(rules: (new () => HighlightRules) | HighlightRulesMap, prefix: string, escapeRules?: boolean, append?: boolean): void;\n            getEmbeds(): string[];\n            normalizeRules(): void;\n            createKeywordMapper(map: Record<string, string>, defaultToken?: string, ignoreCase?: boolean, splitChar?: string): KeywordMapper;\n        }\n        type FoldWidget = \"start\" | \"end\" | \"\";\n        interface FoldMode {\n            foldingStartMarker: RegExp;\n            foldingStopMarker?: RegExp;\n            getFoldWidget(session: EditSession, foldStyle: string, row: number): FoldWidget;\n            getFoldWidgetRange(session: EditSession, foldStyle: string, row: number): Range | undefined;\n            indentationBlock(session: EditSession, row: number, column?: number): Range | undefined;\n            openingBracketBlock(session: EditSession, bracket: string, row: number, column: number, typeRe?: RegExp): Range | undefined;\n            closingBracketBlock(session: EditSession, bracket: string, row: number, column: number, typeRe?: RegExp): Range | undefined;\n        }\n        type BehaviorAction = (state: string | string[], action: string, editor: Editor, session: EditSession, text: string | Range) => ({\n            text: string;\n            selection: number[];\n        } | Range) & {\n            [key: string]: any;\n        } | undefined;\n        type BehaviorMap = Record<string, Record<string, BehaviorAction>>;\n        interface Behaviour {\n            add(name: string, action: string, callback: BehaviorAction): void;\n            addBehaviours(behaviours: BehaviorMap): void;\n            remove(name: string): void;\n            inherit(mode: SyntaxMode | (new () => SyntaxMode), filter: string[]): void;\n            getBehaviours(filter?: string[]): BehaviorMap;\n        }\n        interface Outdent {\n            checkOutdent(line: string, input: string): boolean;\n            autoOutdent(doc: Document, row: number): number | undefined;\n        }\n        interface SyntaxMode {\n            HighlightRules: {\n                new(config?: any): HighlightRules;\n            }; //TODO: fix this\n            foldingRules?: FoldMode;\n            /**\n             * characters that indicate the start of a line comment\n             */\n            lineCommentStart?: string;\n            /**\n             * characters that indicate the start and end of a block comment\n             */\n            blockComment?: {\n                start: string;\n                end: string;\n            };\n            tokenRe?: RegExp;\n            nonTokenRe?: RegExp;\n            completionKeywords: string[];\n            transformAction: BehaviorAction;\n            path?: string;\n            getTokenizer(): Tokenizer;\n            toggleCommentLines(state: string | string[], session: EditSession, startRow: number, endRow: number): void;\n            toggleBlockComment(state: string | string[], session: EditSession, range: Range, cursor: Point): void;\n            getNextLineIndent(state: string | string[], line: string, tab: string): string;\n            checkOutdent(state: string | string[], line: string, input: string): boolean;\n            autoOutdent(state: string | string[], doc: EditSession, row: number): void;\n            // TODO implement WorkerClient types\n            createWorker(session: EditSession): any;\n            createModeDelegates(mapping: {\n                [key: string]: string;\n            }): void;\n            getKeywords(append?: boolean): Array<string | RegExp>;\n            getCompletions(state: string | string[], session: EditSession, pos: Point, prefix: string): Completion[];\n        }\n        interface OptionsBase {\n            [key: string]: any;\n        }\n        class OptionsProvider<T> {\n            setOptions(optList: Partial<T>): void;\n            getOptions(optionNames?: Array<keyof T> | Partial<T>): Partial<T>;\n            setOption<K extends keyof T>(name: K, value: T[K]): void;\n            getOption<K extends keyof T>(name: K): T[K];\n        }\n        type KeyBinding = import(\"ace-code/src/keyboard/keybinding\").KeyBinding;\n        interface CommandMap {\n            [name: string]: Command;\n        }\n        type execEventHandler = (obj: {\n            editor: Editor;\n            command: Command;\n            args: any[];\n        }) => void;\n        interface CommandManagerEvents {\n            on(name: \"exec\", callback: execEventHandler): Function;\n            on(name: \"afterExec\", callback: execEventHandler): Function;\n        }\n        type CommandManager = import(\"ace-code/src/commands/command_manager\").CommandManager;\n        interface SavedSelection {\n            start: Point;\n            end: Point;\n            isBackwards: boolean;\n        }\n        var Selection: {\n            new(session: EditSession): Selection;\n        };\n        interface TextInput {\n            resetSelection(): void;\n            setAriaOption(options?: {\n                activeDescendant: string;\n                role: string;\n                setLabel: any;\n            }): void;\n        }\n        type CompleterCallback = (error: any, completions: Completion[]) => void;\n        interface Completer {\n            identifierRegexps?: Array<RegExp>;\n            getCompletions(editor: Editor, session: EditSession, position: Point, prefix: string, callback: CompleterCallback): void;\n            getDocTooltip?(item: Completion): void | string | Completion;\n            onSeen?: (editor: Ace.Editor, completion: Completion) => void;\n            onInsert?: (editor: Ace.Editor, completion: Completion) => void;\n            cancel?(): void;\n            id?: string;\n            triggerCharacters?: string[];\n            hideInlinePreview?: boolean;\n            insertMatch?: (editor: Editor, data: Completion) => void;\n        }\n        interface CompletionOptions {\n            matches?: Completion[];\n        }\n        type CompletionProviderOptions = {\n            exactMatch?: boolean;\n            ignoreCaption?: boolean;\n        };\n        type GatherCompletionRecord = {\n            prefix: string;\n            matches: Completion[];\n            finished: boolean;\n        };\n        type CompletionCallbackFunction = (err: Error | undefined, data: GatherCompletionRecord) => void;\n        type CompletionProviderCallback = (this: import(\"ace-code/src/autocomplete\").Autocomplete, err: Error | undefined, completions: import(\"ace-code/src/autocomplete\").FilteredList, finished: boolean) => void;\n        type AcePopupNavigation = \"up\" | \"down\" | \"start\" | \"end\";\n        interface EditorMultiSelectProperties {\n            inMultiSelectMode?: boolean;\n            /**\n             * Updates the cursor and marker layers.\n             **/\n            updateSelectionMarkers: () => void;\n            /**\n             * Adds the selection and cursor.\n             * @param orientedRange A range containing a cursor\n             **/\n            addSelectionMarker: (orientedRange: Ace.Range & {\n                marker?: any;\n            }) => Ace.Range & {\n                marker?: any;\n            };\n            /**\n             * Removes the selection marker.\n             * @param range The selection range added with [[Editor.addSelectionMarker `addSelectionMarker()`]].\n             **/\n            removeSelectionMarker: (range: Ace.Range & {\n                marker?: any;\n            }) => void;\n            removeSelectionMarkers: (ranges: (Ace.Range & {\n                marker?: any;\n            })[]) => void;\n            /**\n             * Executes a command for each selection range.\n             * @param cmd The command to execute\n             * @param [args] Any arguments for the command\n             **/\n            forEachSelection: (cmd: Object, args?: string, options?: Object) => void;\n            /**\n             * Removes all the selections except the last added one.\n             **/\n            exitMultiSelectMode: () => void;\n            getSelectedText: () => string;\n            /**\n             * Finds and selects all the occurrences of `needle`.\n             * @param needle The text to find\n             * @param options The search options\n             * @param additive keeps\n             * @returns {Number} The cumulative count of all found matches\n             **/\n            findAll: (needle?: string, options?: Partial<Ace.SearchOptions>, additive?: boolean) => number;\n            /**\n             * Adds a cursor above or below the active cursor.\n             * @param dir The direction of lines to select: -1 for up, 1 for down\n             * @param [skip] If `true`, removes the active selection range\n             */\n            selectMoreLines: (dir: number, skip?: boolean) => void;\n            /**\n             * Transposes the selected ranges.\n             * @param {Number} dir The direction to rotate selections\n             **/\n            transposeSelections: (dir: number) => void;\n            /**\n             * Finds the next occurrence of text in an active selection and adds it to the selections.\n             * @param {Number} dir The direction of lines to select: -1 for up, 1 for down\n             * @param {Boolean} [skip] If `true`, removes the active selection range\n             **/\n            selectMore: (dir: number, skip?: boolean, stopAtFirst?: boolean) => void;\n            /**\n             * Aligns the cursors or selected text.\n             **/\n            alignCursors: () => void;\n            multiSelect?: any;\n        }\n        interface CodeLenseProvider {\n            provideCodeLenses: (session: EditSession, callback: (err: any, payload: CodeLense[]) => void) => void;\n        }\n        interface CodeLense {\n            start: Point;\n            command: any;\n        }\n        interface CodeLenseEditorExtension {\n            codeLensProviders?: CodeLenseProvider[];\n        }\n        interface ElasticTabstopsEditorExtension {\n            elasticTabstops?: import(\"ace-code/src/ext/elastic_tabstops_lite\").ElasticTabstopsLite;\n        }\n        interface TextareaEditorExtension {\n            setDisplaySettings?: (settings: any) => void;\n        }\n        interface PromptEditorExtension {\n            cmdLine?: Editor;\n        }\n        interface OptionsEditorExtension {\n        }\n        interface MultiSelectProperties {\n            ranges: Ace.Range[] | null;\n            rangeList: Ace.RangeList | null;\n            /**\n             * Adds a range to a selection by entering multiselect mode, if necessary.\n             * @param {Ace.Range} range The new range to add\n             * @param {Boolean} [$blockChangeEvents] Whether or not to block changing events\n             **/\n            addRange(range: Ace.Range, $blockChangeEvents?: boolean): any;\n            inMultiSelectMode: boolean;\n            toSingleRange(range?: Ace.Range): void;\n            /**\n             * Removes a Range containing pos (if it exists).\n             * @param {Ace.Point} pos The position to remove, as a `{row, column}` object\n             **/\n            substractPoint(pos: Ace.Point): any;\n            /**\n             * Merges overlapping ranges ensuring consistency after changes\n             **/\n            mergeOverlappingRanges(): void;\n            rangeCount: number;\n            /**\n             * Returns a concatenation of all the ranges.\n             **/\n            getAllRanges(): Ace.Range[];\n            /**\n             * Splits all the ranges into lines.\n             **/\n            splitIntoLines(): void;\n            joinSelections(): void;\n            toggleBlockSelection(): void;\n            /**\n             *\n             * Gets list of ranges composing rectangular block on the screen\n             *\n             * @param {Ace.ScreenCoordinates} screenCursor The cursor to use\n             * @param {Ace.ScreenCoordinates} screenAnchor The anchor to use\n             * @param {Boolean} [includeEmptyLines] If true, this includes ranges inside the block which are empty due to clipping\n             **/\n            rectangularRangeBlock(screenCursor: Ace.ScreenCoordinates, screenAnchor: Ace.ScreenCoordinates, includeEmptyLines?: boolean): Ace.Range[];\n            index?: number;\n        }\n        type AcePopupEventsCombined = Ace.EditorEvents & Ace.AcePopupEvents;\n        type AcePopupWithEditor = Ace.EventEmitter<AcePopupEventsCombined> & Ace.Editor;\n        type InlineAutocompleteAction = \"prev\" | \"next\" | \"first\" | \"last\";\n        type TooltipCommandFunction<T> = (editor: Ace.Editor) => T;\n        export interface TooltipCommand extends Ace.Command {\n            enabled?: TooltipCommandFunction<boolean> | boolean;\n            getValue?: TooltipCommandFunction<any>;\n            type: \"button\" | \"text\" | \"checkbox\";\n            iconCssClass?: string;\n            cssClass?: string;\n        }\n        export type CommandBarTooltip = import(\"ace-code/src/ext/command_bar\").CommandBarTooltip;\n        export type TokenizeResult = Array<Array<{\n            className?: string;\n            value: string;\n        }>>;\n        export interface StaticHighlightOptions {\n            mode?: string | SyntaxMode;\n            theme?: string | Theme;\n            trim?: boolean;\n            firstLineNumber?: number;\n            showGutter?: boolean;\n        }\n        export interface Operation {\n            command: {\n                name?: string;\n            };\n            args: any;\n            selectionBefore?: Range | Range[];\n            selectionAfter?: Range | Range[];\n            docChanged?: boolean;\n            selectionChanged?: boolean;\n        }\n    }\n    export const config: typeof import(\"ace-code/src/config\");\n    export function edit(el?: string | (HTMLElement & {\n        env?: any;\n        value?: any;\n    }) | null, options?: any): Editor;\n    export function createEditSession(text: import(\"ace-code/src/document\").Document | string, mode?: import(\"ace-code\").Ace.SyntaxMode): EditSession;\n    import { Editor } from \"ace-code/src/editor\";\n    import { EditSession } from \"ace-code/src/edit_session\";\n    import { Range } from \"ace-code/src/range\";\n    import { UndoManager } from \"ace-code/src/undomanager\";\n    import { VirtualRenderer as Renderer } from \"ace-code/src/virtual_renderer\";\n    export var version: \"1.37.4\";\n    export { Range, Editor, EditSession, UndoManager, Renderer as VirtualRenderer };\n}\n"
        },
        {
          "name": "amplify.yml",
          "type": "blob",
          "size": 0.34375,
          "content": "version: 0.1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - npm install\n    # IMPORTANT - Please verify your build commands\n    build:\n      commands: \n        - make build\n  artifacts:\n    # IMPORTANT - Please verify your build output directory\n    baseDirectory: /\n    files:\n      - '**/*'\n  cache:\n    paths:\n      - node_modules/**/*\n"
        },
        {
          "name": "build",
          "type": "commit",
          "content": null
        },
        {
          "name": "build_support",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "experiments",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 86.9736328125,
          "content": "<!DOCTYPE html> \n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n        <title>Ace - The High Performance Code Editor for the Web</title>\n        <link rel=\"stylesheet\" href=\"./doc/site/css/bootstrap.no-icons.min.css\" />\n        <link rel=\"stylesheet\" href=\"./doc/site/css/font-awesome.css\" />\n        <link href=\"./doc/site/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n        <link href=\"./doc/site/images/favicon.ico\" rel=\"icon\" type=\"image/x-icon\" />\n\n        <script src=\"./build/src/ace.js\"></script>\n        <script src=\"./build/src/ext-static_highlight.js\"></script>\n        <!--[if lt IE 9]>\n            <script src=\"./build/src/ext-old_ie.js\"></script>\n        <![endif]-->\n    </head>\n    <body>\n        <a href=\"https://github.com/ajaxorg/ace\">\n            <img style=\"z-index: 50000; position: absolute; top: 0; right: 0; border: 0; width: 125px; height: 125px\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=149%2C149\" alt=\"Fork me on GitHub\">\n        </a>\n        <div id=\"wrapper\">\n            <div class=\"content\">\n                <div class=\"column2\">\n                    <div id=\"top_container\">\n                        <h1><img src=\"./doc/site/images/textimage.png\" alt=\"The high performance code editor for the web.\" /></h1>\n                        <div id=\"page_logo\">\n                            <img src=\"./doc/site/images/ace-logo.png\" />\n                            <iframe style=\"padding-top:5px\" src=\"https://ghbtns.com/github-btn.html?user=ajaxorg&amp;repo=ace&amp;type=watch&amp;count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"110px\" height=\"20px\" sandbox=\"allow-scripts allow-popups\"></iframe>\n                            <iframe src=\"https://ghbtns.com/github-btn.html?user=ajaxorg&amp;repo=ace&amp;type=fork&amp;count=true\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"110px\" height=\"20px\" sandbox=\"allow-scripts allow-popups\"></iframe>\n                        </div>\n                    </div>\n                    <div style=\"clear: both\"></div>\n                    <ul id=\"tabnav\" class=\"nav nav-pills\">\n                        <li>\n                            <a href=\"/\"><img src=\"./doc/site/images/ace-tab.png\" /></a>\n                        </li>\n                        <li>\n                            <a href=\"#about\" data-toggle=\"tab\">About</a>\n                        </li>\n                        <li>\n                            <a href=\"#embedding\" data-toggle=\"tab\">Embedding Guide</a>\n                        </li>\n                        <li>\n                            <a href=\"#howto\" data-toggle=\"tab\">How-To Guide</a>\n                        </li>\n                        <li>\n                            <a href=\"#higlighter\" data-toggle=\"tab\">Syntax Highlighters</a>\n                        </li>\n                        <li>\n                            <a href=\"https://ajaxorg.github.io/ace-api-docs/index.html\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-nav\">API Reference</a>\n                        </li>\n                        <li>\n                            <a href=\"#production\" data-toggle=\"tab\">Real World Users</a>\n                        </li>\n                        <li class=\"last-tab\">\n                            <a href=\"https://mkslanc.github.io/ace-playground/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-nav\">Try</a>\n                        </li>\n                    </ul>\n                    <div class=\"tab-content\">\n                        <div class=\"tab-pane fade\" id=\"about\">\n                            <h1>Built for Code</h1>\n                            <p id=\"first\">Ace is an embeddable code editor written in JavaScript.\n                                It matches the features and performance of native\n                                editors such as Sublime, Vim and TextMate. It can be easily embedded\n                                in any web page and JavaScript application. Ace is maintained as the\n                                primary editor for <a href=\"https://c9.io\">Cloud9 IDE</a>\n                                and is the successor of the Mozilla Skywriter (Bespin) project.\n                            </p>\n                            \n                                <pre id=\"ace_editor_demo\" style=\"opacity:0\">/**\n * In fact, you're looking at ACE right now. Go ahead and play with it!\n *\n * We are currently showing off the JavaScript mode. ACE has support for 45\n * language modes and 24 color themes!\n */\n\nfunction add(x, y) {\n    var resultString = \"Hello, ACE! The result of your math is: \";\n    var result = x + y;\n    return resultString + result;\n}\n\nvar addResult = add(3, 2);\nconsole.log(addResult);\n</pre>\n                            <p id=\"embed_link\"><a href=\"#nav=embedding\">Learn how to embed this in your own site</a></p>\n                            <p class=\"highlight_note\">Looking for a more full-featured demo? Check out the\n                                <a href=\"build/kitchen-sink.html\" target=\"_blank\" rel=\"noopener noreferrer\">kitchen sink</a>.\n                            </p>\n                            <h2>Features</h2>\n                            <ul class=\"content-list\">\n                                <li><a href=\"https://pcwalton.blogspot.com/2010/11/syntax-highlighting-specification.html\">Syntax highlighting</a> for over 110 languages (TextMate/Sublime Text<em>.tmlanguage</em> files can be imported)</li>\n                                <li>Over 20 themes (TextMate/Sublime Text <em>.tmtheme</em> files can be imported)</li>\n                                <li>Automatic indent and outdent</li>\n                                <li>An optional command line</li>\n                                <li>Handles huge documents (four million lines seems to be the limit!)</li>\n                                <li>Fully customizable key bindings including vim and Emacs modes</li>\n                                <li>Search and replace with regular expressions</li>\n                                <li>Highlight matching parentheses</li>\n                                <li>Toggle between soft tabs and real tabs</li>\n                                <li>Displays hidden characters</li>\n                                <li>Drag and drop text using the mouse</li>\n                                <li>Line wrapping</li>\n                                <li>Code folding</li>\n                                <li>Multiple cursors and selections</li>\n                                <li>Live syntax checker (currently JavaScript/CoffeeScript/CSS/XQuery)</li>\n                                <li>Cut, copy, and paste functionality</li>\n                            </ul>\n                            <h2>Get the Open-Source Code</h2>\n                            <p>Ace is a community project. We actively encourage and support\n                                contributions! The Ace source code is <a href=\"https://github.com/ajaxorg/ace\">hosted on GitHub</a>\n                                and released under the BSD license &dash; \n                                very simple and friendly to all kinds of projects, whether open-source\n                                or not. Take charge of your editor and add your favorite language\n                                highlighting and keybindings!\n                            </p>\n                            <pre>git clone git://github.com/ajaxorg/ace.git</pre>\n                            <h2>History</h2>\n                            <p>Skywriter/Bespin and Ace started\n                                as two independent projects both aiming to build a no compromise\n                                code editor component for the web. Bespin started as part of\n                                Mozilla Labs and was based on the &lt;canvas> tag, while Ace is\n                                the editor component of <a href=\"https://c9.io\">Cloud9 IDE</a>\n                                and uses the DOM for rendering. After the release of Ace at\n                                <a href=\"https://www.youtube.com/watch?v=hN_7tAKh0dM\" title=\"[JSConfEU 2010] Fabian Jakobs: Kick ass code editing and end to end JavaScript debugging\">JSConf.eu 2010</a>\n                                in Berlin the Skywriter team decided to merge Ace with a simplified \n                                version of Skywriter's plugin system and some of Skywriter&apos;s\n                                extensibility points. All these changes have been merged back to Ace\n                                now, which supersedes Skywriter. Both <a href=\"https://c9.io\">Cloud9 IDE</a>\n                                and <a href=\"https://mozilla.org\">Mozilla</a> are actively developing and\n                                maintaining Ace.\n                            </p>\n                            <h2>Related Projects</h2>\n                            <ul class=\"content-list\">\n                                <li><a href=\"https://github.com/convergencelabs/ace-collab-ext\">Ace collaboration extension</a></li>\n                                <li><a href=\"https://github.com/rksm/paredit.js\">Paredit extension for ace</a></li>\n                                <li><a href=\"https://github.com/cadorn/ace-extjs\">Ace wrapper for ExtJS</a></li>\n                                <li><a href=\"https://github.com/daveho/AceGWT\">Ace wrapper for GWT</a></li>\n                            </ul>\n                            <h2>Getting Help</h2>\n                            <ul class=\"content-list\">\n                                <li><a href=\"https://github.com/ajaxorg/ace/issues\">Report bugs</a></li>\n                                <li><a href=\"https://github.com/ajaxorg/ace/discussions\">Discuss</a></li>\n                            </ul>\n                        </div>\n                        <div class=\"tab-pane fade active in\" id=\"embedding\">\n                            <h1>Embedding Ace in Your Site</h1>\n                            <p>Ace can be easily embedded into a web page. Get prebuilt version of ace from \n                            <a href=\"https://github.com/ajaxorg/ace-builds/\">ace-builds</a> repository and use the code below:</p>\n                                <pre id=\"embedded_ace_code\" style=\"opacity:0\">&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n&lt;title>ACE in Action&lt;/title>\n&lt;style type=\"text/css\" media=\"screen\">\n    #editor { \n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n    }\n&lt;/style>\n&lt;/head>\n&lt;body>\n\n&lt;div id=\"editor\">function foo(items) {\n    var x = \"All this is syntax highlighted\";\n    return x;\n}&lt;/div>\n    \n&lt;script src=\"/ace-builds/src-noconflict/ace.js\" type=\"text/javascript\" charset=\"utf-8\">&lt;/script>\n&lt;script>\n    var editor = ace.edit(\"editor\");\n    editor.setTheme(\"ace/theme/monokai\");\n    editor.session.setMode(\"ace/mode/javascript\");\n&lt;/script>\n&lt;/body>\n&lt;/html></pre>\n                            <p>Now check out the <a href=\"#nav=howto\">How-To Guide</a> for instructions on\n                                common operations, such as setting a different language mode or\n                                getting the contents from the editor.\n                            </p>\n                            <h2>Loading Ace from a Local URL</h2>                            \n                            <p>If you want to clone and host Ace locally you can\n                                use one of the <a href=\"https://github.com/ajaxorg/ace-builds/\">pre-packaged versions</a>. Just copy\n                                one of <code>src*</code> subdirectories somewhere into your project, or use RequireJS to load the\n                                contents of <a href=\"https://github.com/ajaxorg/ace/tree/master/lib/ace\">lib/ace</a> folder as <code>ace</code>:\n                            </p>\n\t\t\t    <h2>Loading Ace from a CDN</h2>                            \n                            <p>The packaged version can also be loaded from CDN's such as <a href=\"https://www.jsdelivr.com/package/npm/ace-builds\">jsDelivr</a> or <a href=\"http://cdnjs.com/libraries/ace/\">cdnjs</a>.\n                            </p>\n                        </div>\n                        <div class=\"tab-pane fade\" id=\"howto\">\n                            <h1>Working with Ace</h1>\n                            <p><em>In all of these examples Ace has been invoked \n                                as shown in the <a href=\"#nav=embedding\">embedding guide</a>.</em>\n                            </p>\n                            <h2>Configuring the editor</h2>\n                            <p>there are several ways to pass configuration to Ace</p>\n                            <pre><code class=\"javascript\">// pass options to ace.edit\nace.edit(element, {\n    mode: \"ace/mode/javascript\",\n    selectionStyle: \"text\"\n})\n// use setOptions method to set several options at once\neditor.setOptions({\n    autoScrollEditorIntoView: true,\n    copyWithEmptySelection: true,\n});\n// use setOptions method\neditor.setOption(\"mergeUndoDeltas\", \"always\");\n\n// some options are also available as methods e.g. \neditor.setTheme(...)\n\n// to get the value of the option use\neditor.getOption(\"optionName\");\n</code>\n</pre>\n                            <p>See <a href=\"https://github.com/ajaxorg/ace/wiki/Configuring-Ace\">Configuring-Ace wiki page</a> for a more detailed list of options.</p>\n                            <h3>Changing the size of the editor</h3>\n                            <p>Ace only checks for changes of the size of it's container when window is resized. If you resize the editor div in another manner, and need Ace to resize, use the following:</p>\n                            <pre><code class=\"javascript\">editor.resize()</code></pre>\n                            <p>if you want editor to change it's size based on contents, use maxLines option as shown in <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ace.c9.io/demo/autoresize.html\">https://ace.c9.io/demo/autoresize.html</a></p>\n                            <h2>Setting Themes</h2>\n                            <p>Themes are loaded on demand; all you have to do is pass the string name:</p>\n                            <pre><code class=\"javascript\">editor.setTheme(\"ace/theme/twilight\");</code></pre>\n                            <p><span class=\"expand_arrow\">&gt;</span> <a href=\"https://github.com/ajaxorg/ace/tree/master/src/theme\" target=\"_blank\" rel=\"noopener noreferrer\">See all themes.</a>\n                            Or use <a href=\"https://github.com/ajaxorg/ace/blob/master/src/ext/themelist.js\" target=\"_blank\" rel=\"noopener noreferrer\">themelist extension</a> to get the list of available themes at runtime.\n                            </p>\n                            <h2>Setting the Programming Language Mode</h2>\n                            <p>By default, the editor supports plain text mode. All other language modes are available as separate modules, loaded on demand like this:</p>\n                            <pre><code class=\"javascript\">editor.session.setMode(\"ace/mode/javascript\");</code></pre>\n                            <h2>One Editor, Multiple Sessions</h2>\n                                <p>Ace keeps everything about the state of the editor (selection, scroll position, etc.)\n                                    in <code class=\"javascript\">editor.session</code>. This means you can grab the\n                                    session, store it in a var, and set the editor to another session (e.g. a tabbed editor).</p>\n                                <p>You might accomplish this like so:</p>\n                                \n                                <pre><code class=\"javascript\">var js = ace.createEditSession(\"some js code\");\nvar css = ace.createEditSession([\"some\", \"css\", \"code here\"]);\n// and then to load document into editor, just call\neditor.setSession(js);</code></pre>\n                            <h2>Common Operations</h2>\n                            <p>Set and get content:</p>\n                            <pre><code class=\"javascript\">editor.setValue(\"the new text here\");\neditor.setValue(\"text2\", -1); // set value and move cursor to the start of the text\neditor.session.setValue(\"the new text here\"); // set value and reset undo history\neditor.getValue(); // or session.getValue</code></pre>\n                            <p>Get selected text:</p>\n                            <pre><code class=\"javascript\">editor.getSelectedText(); // or for a specific range\neditor.session.getTextRange(editor.getSelectionRange()); </code></pre>\n                            <p>Insert at cursor, emulating user input:</p>\n                            <pre><code class=\"javascript\">editor.insert(\"Something cool\");</code></pre>\n                            <p>Replace text in range:</p>\n                            <pre><code class=\"javascript\">editor.session.replace(new ace.Range(0, 0, 1, 1), \"new text\");</code></pre>\n                            <p>Get the current cursor line and column:</p>\n                            <pre><code class=\"javascript\">editor.selection.getCursor();</code></pre>\n                            <p>Go to a line:</p>\n                            <pre><code class=\"javascript\">editor.gotoLine(lineNumber);</code></pre>\n                            <p>Get total number of lines:</p>\n                            <pre><code class=\"javascript\">editor.session.getLength();</code></pre>\n                            <p>Set the default tab size:</p>\n                            <pre><code class=\"javascript\">editor.session.setTabSize(4);</code></pre>\n                            <p>Use soft tabs:</p>\n                            <pre><code class=\"javascript\">editor.session.setUseSoftTabs(true);</code></pre>\n                            <p>Set the font size:</p>\n                            <pre><code class=\"javascript\">document.getElementById('editor').style.fontSize='12px';</code></pre>\n                            <p>Toggle word wrapping:</p>\n                            <pre><code class=\"javascript\">editor.session.setUseWrapMode(true);</code></pre>\n                            <p>Set line highlighting:</p>\n                            <pre><code class=\"javascript\">editor.setHighlightActiveLine(false);</code></pre>\n                            <p>Set the print margin visibility:</p>\n                            <pre><code class=\"javascript\">editor.setShowPrintMargin(false);</code></pre>\n                            <p>Set the editor to read-only:</p>\n                            <pre><code class=\"javascript\">editor.setReadOnly(true);  // false to make it editable</code></pre>\n                            <h3>Using undo manager</h3>\n                            <p>To group undo delta of the next edit with the previous one set `mergeUndoDeltas` to true</p>\n                            <pre><code class=\"language-javascript\">editor.session.mergeUndoDeltas = true; \neditor.session.insert({row: 0, column:0}, Date()+\"\");</code></pre>\n\n                            <p>To start new undo group use `markUndoGroup` method</p>\n                            <pre><code class=\"language-javascript\">editor.insertSnippet(\"a$0b\"); \neditor.session.markUndoGroup(); \neditor.insertSnippet(\"x$0y\");</code></pre>\n                            <p>To disable undo of a an edit in a collaborative editor</p>\n                            <pre><code class=\"language-javascript\">var rev = session.$undoManager.startNewGroup(); // start new undo group\n... // apply the edit \nsession.$undoManager.markIgnored(rev); // mark the new group as ignored</code></pre>\n\n\n                            <p>To implement undo/redo buttons see <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ace.c9.io/demo/toolbar.html\">https://ace.c9.io/demo/toolbar.html</a></p>\n\n                            <h3>Searching</h3>\n                            <pre><code class=\"language-javascript\">editor.find('needle',{\n    backwards: false,\n    wrap: false,\n    caseSensitive: false,\n    wholeWord: false,\n    regExp: false\n});\neditor.findNext();\neditor.findPrevious();</code></pre>\n                            <p>The following options are available to you for your search parameters:</p>\n                            <ul>\n                                <li>\n                                    <code>needle</code>: The string or regular expression you're looking for\n                                </li>\n                                <li>\n                                    <code>backwards</code>: Whether to search backwards from where cursor currently is. Defaults to <code>false</code>.\n                                </li>\n                                <li>\n                                    <code>wrap</code>: Whether to wrap the search back to the beginning when it hits the end. Defaults to <code>false</code>.\n                                </li>\n                                <li>\n                                    <code>caseSensitive</code>: Whether the search ought to be case-sensitive. Defaults to <code>false</code>.\n                                </li>\n                                <li>\n                                    <code>wholeWord</code>: Whether the search matches only on whole words. Defaults to <code>false</code>.\n                                </li>\n                                <li>\n                                    <code>range</code>: The <a class=\"internal absent\" href=\"/ajaxorg/ace/wiki/Range\">Range</a> to search within. Set this to <code>null</code> for the whole document\n                                </li>\n                                <li>\n                                    <code>regExp</code>: Whether the search is a regular expression or not. Defaults to <code>false</code>.\n                                </li>\n                                <li>\n                                    <code>start</code>: The starting <a class=\"internal absent\" href=\"/ajaxorg/ace/wiki/Range\">Range</a> or cursor position to begin the search\n                                </li>\n                                <li>\n                                    <code>skipCurrent</code>: Whether or not to include the current line in the search. Default to <code>false</code>.\n                                </li>\n\t\t\t\t <li>\n                                    <code>preventScroll</code>: Whether or not to move the cursor to the next match. Default to <code>false</code>.\n                                </li>\n                            </ul>\n                            <p>Here's how you can perform a replace:</p>\n                            <pre><code class=\"javascript\">editor.find('foo');\neditor.replace('bar');</code></pre>\n                            <p>And here's a replace all: </p>\n                            <pre><code class=\"javascript\">editor.replaceAll('bar');</code></pre>\n                            <p>(<code>editor.replaceAll</code> uses the needle set earlier by <code>editor.find('needle', ...</code>)</p>\n                            <h3>Listening to Events</h3>\n                            <p>To listen for an <code>onchange</code>:</p>\n                            <pre><code class=\"javascript\">editor.session.on('change', function(delta) {\n    // delta.start, delta.end, delta.lines, delta.action\n});</code></pre>\n                            <p>To listen for an <code>selection</code> change:</p>\n                            <pre><code class=\"javascript\">editor.session.selection.on('changeSelection', function(e) {\n});</code></pre>\n                            <p>To listen for a <code>cursor</code> change:</p>\n                            <pre><code class=\"javascript\">editor.session.selection.on('changeCursor', function(e) {\n});</code></pre>\n                            <h3>Adding New Commands and Keybindings</h3>\n                            <p>To assign key bindings to a custom function:</p>\n                            <pre><code class=\"javascript\">editor.commands.addCommand({\n    name: 'myCommand',\n    bindKey: {win: 'Ctrl-M',  mac: 'Command-M'},\n    exec: function(editor) {\n        //...\n    },\n    readOnly: true, // false if this command should not apply in readOnly mode\n    // multiSelectAction: \"forEach\", optional way to control behavior with multiple cursors\n    // scrollIntoView: \"cursor\", control how cursor is scolled into view after the command\n});</code></pre>\n                            <h3>Configure dynamic loading of modes and themes</h3>\n                            <p>By default ace detcts the url for dynamic loading by finding the script node for ace.js.\n                            This doesn't work if ace.js is not loaded with a separate script tag, and in this case it is required to set url explicitely</p>\n                            <pre><code class=\"javascript\">ace.config.set(\"basePath\", \"https://url.to.a/folder/that/contains-ace-modes\");</code></pre>\n                            <p>Path for one module alone can be configured with:</p>\n                            <pre><code class=\"javascript\">ace.config.setModuleUrl(\"ace/theme/textmate\", \"url for textmate.js\");</code></pre>\n                            <p>When using ace with webpack, it is possible to configure paths for all submodules using</p>                            \n                            <pre><code class=\"javascript\">require(\"ace-builds/esm-resolver\"); // for new bundlers: webpack 5, rollup, vite</code></pre>\n                            For webpack 4 use\n                            <pre><code class=\"javascript\">require(\"ace-builds/webpack-resolver\"); </code></pre>                            \n                            <p>which depends on <a href=\"https://github.com/webpack-contrib/file-loader\">file-loader</a></p>\n                        </div>\n                        <div class=\"tab-pane fade\" id=\"higlighter\">\n                            <h1>Creating a Syntax Highlighter for Ace</h1>\n                            <p>Creating a new syntax highlighter for Ace is extremely simple. You'll need to define two pieces of code: a new mode, and a new set of highlighting rules.</p>\n                            <h2 id=\"where-to-start\"><a class=\"heading_anchor\" href=\"#where-to-start\"><i class=\"headerLinkIcon\"></i></a>Where to Start</h2>\n                            <p>We recommend using the <a href=\"tool/mode_creator.html\">Ace Mode Creator</a> when defining your highlighter. This allows you to inspect your code's tokens, as well as providing a live preview of the syntax highlighter in action.</p>\n                            <h2 id=\"defining-a-mode\"><a class=\"heading_anchor\" href=\"#defining-a-mode\"><i class=\"headerLinkIcon\"></i></a>Defining a Mode</h2>\n                            <p>Every language needs a mode. A mode contains the paths to a language's syntax highlighting rules, indentation rules, and code folding rules. Without defining a mode, Ace won't know anything about the finer aspects of your language.</p>\n                            <p>Here is the starter template we'll use to create a new mode:</p>\n                            <pre><code class=\"language-javascript\">define(function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\n// defines the parent mode\nvar TextMode = require(\"./text\").Mode;\nvar Tokenizer = require(\"../tokenizer\").Tokenizer;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n// defines the language specific highlighters and folding rules\nvar MyNewHighlightRules = require(\"./mynew_highlight_rules\").MyNewHighlightRules;\nvar MyNewFoldMode = require(\"./folding/mynew\").MyNewFoldMode;\n\nvar Mode = function() {\n    // set everything up\n    this.HighlightRules = MyNewHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new MyNewFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    // configure comment start/end characters\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    // special logic for indent/outdent. \n    // By default ace keeps indentation of previous line\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    \n    // create worker for live syntax checking\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/mynew_worker\", \"NewWorker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"errors\", function(e) {\n            session.setAnnotations(e.data);\n        });\n        return worker;\n    };\n    \n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});</code></pre>\n                            <p>What's going on here? First, you're defining the path to <code>TextMode</code> (more on this later). Then you're pointing the mode to your definitions for the highlighting rules, as well as your rules for code folding. Finally, you're setting everything up to find those rules, and exporting the Mode so that it can be consumed. That's it!</p>\n                            <p>Regarding <code>TextMode</code>, you'll notice that it's only being used once: <code>oop.inherits(Mode, TextMode);</code>. If your new language depends on the rules of another language, you can choose to inherit the same rules, while expanding on it with your language's own requirements. For example, PHP inherits from HTML, since it can be embedded directly inside <em>.html</em> pages. You can either inherit from <code>TextMode</code>, or any other existing mode, if it already relates to your language.</p>\n                            <p>All Ace modes can be found in the <em>lib/ace/mode</em> folder.</p>\n                            <h2 id=\"defining-syntax-highlighting-rules\"><a class=\"heading_anchor\" href=\"#defining-syntax-highlighting-rules\"><i class=\"headerLinkIcon\"></i></a>Defining Syntax Highlighting Rules</h2>\n                            <p>The Ace highlighter can be considered to be a state machine. Regular expressions define the tokens for the current state, as well as the transitions into another state. Let's define <em>mynew_highlight_rules.js</em>, which our mode above uses.</p>\n                            <p>All syntax highlighters start off looking something like this:</p>\n                            <pre><code class=\"language-javascript\">define(function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar MyNewHighlightRules = function() {\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -&gt; the first match is used\n   this.$rules = {\n        \"start\" : [\n            {\n                token: token, // String, Array, or Function: the CSS token to apply\n                regex: regex, // String or RegExp: the regexp to match\n                next:  next   // [Optional] String: next state to enter\n            }\n        ]\n    };\n};\n\noop.inherits(MyNewHighlightRules, TextHighlightRules);\n\nexports.MyNewHighlightRules = MyNewHighlightRules;\n\n});</code></pre>\n                            <p>The token state machine operates on whatever is defined in <code>this.$rules</code>. The highlighter always begins at the <code>start</code> state, and progresses down the list, looking for a matching <code>regex</code>. When one is found, the resulting text is wrapped within a <code>&lt;span class=&quot;ace_&lt;token&gt;&quot;&gt;</code> tag, where <code>&lt;token&gt;</code> is defined as the <code>token</code> property. Note that all tokens are preceded by the <code>ace_</code> prefix when they're rendered on the page.</p>\n                            <p>Once again, we're inheriting from <code>TextHighlightRules</code> here. We could choose to make this any other language set we want, if our new language requires previously defined syntaxes. For more information on extending languages, see &quot;<a href=\"#extending-highlighters\">extending Highlighters</a>&quot; below.</p>\n                            <h3 id=\"defining-tokens\"><a class=\"heading_anchor\" href=\"#defining-tokens\"><i class=\"headerLinkIcon\"></i></a>Defining Tokens</h3>\n                            <p>The Ace highlighting system is heavily inspired by the <a href=\"http://manual.macromates.com/en/language_grammars\">TextMate language grammar</a>. Most tokens will follow the conventions of TextMate when naming grammars. A thorough (albeit incomplete) list of tokens can be found <a href=\"https://github.com/ajaxorg/ace/wiki/Creating-or-Extending-an-Edit-Mode#wiki-commonTokens\">on the Ace Wiki</a>.</p>\n                            <p>For the complete list of tokens, see <em><a href=\"https://github.com/ajaxorg/ace/blob/master/tool/tmtheme.js\">tool/tmtheme.js</a></em>. It is possible to add new token names, but the scope of that knowledge is outside of this document.</p>\n                            <p>Multiple tokens can be applied to the same text by adding dots in the token, <em>e.g.</em> <code>token: support.function</code> wraps the text in a <code>&lt;span class=&quot;ace_support ace_function&quot;&gt;</code> tag.</p>\n                            <h3 id=\"defining-regular-expressions\"><a class=\"heading_anchor\" href=\"#defining-regular-expressions\"><i class=\"headerLinkIcon\"></i></a>Defining Regular Expressions</h3>\n                            <p>Regular expressions can either be a RegExp or String definition</p>\n                            <p>If you're using a regular expression, remember to start and end the line with the <code>/</code> character, like this:</p>\n                            <pre><code class=\"language-javascript\">{\n    token : \"constant.language.escape\",\n    regex : /\\$[\\w\\d]+/\n}</code></pre>\n                            <p>A caveat of using stringed regular expressions is that any <code>\\</code> character must be escaped. That means that even an innocuous regular expression like this:</p>\n                            <pre><code class=\"language-javascript\">regex: \"function\\s*\\(\\w+\\)\"</code></pre>\n                            <p>Must actually be written like this:</p>\n                            <pre><code class=\"language-javascript\">regex: \"function\\\\s*\\(\\\\w+\\)\"</code></pre>\n                            <h4 id=\"groupings\"><a class=\"heading_anchor\" href=\"#groupings\"><i class=\"headerLinkIcon\"></i></a>Groupings</h4>\n                            <p>You can also include flat regexps--<code>(var)</code>--or have matching groups--<code>((a+)(b+))</code>. There is a strict requirement whereby matching groups <strong>must</strong> cover the entire matched string; thus, <code>(hel)lo</code> is invalid. If you want to create a non-matching group, simply start the group with the <code>?:</code> predicate; thus, <code>(hel)(?:lo)</code> is okay. You can, of course, create longer non-matching groups. For example:</p>\n                            <pre><code class=\"language-javascript\">{\n    token : \"constant.language.boolean\",\n    regex : /(?:true|false)\\b/\n},</code></pre>\n                            <p>For flat regular expression matches, <code>token</code> can be a String, or a Function that takes a single argument (the match) and returns a string token. For example, using a function might look like this:</p>\n                            <pre><code class=\"language-javascript\">var colors = lang.arrayToMap(\n    (\"aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|\" +\n    \"purple|red|silver|teal|white|yellow\").split(\"|\")\n);\n\nvar fonts = lang.arrayToMap(\n    (\"arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|\" +\n    \"symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|\" +\n    \"serif|monospace\").split(\"|\")\n);\n\n...\n\n{\n    token: function(value) {\n        if (colors.hasOwnProperty(value.toLowerCase())) {\n            return \"support.constant.color\";\n        }\n        else if (fonts.hasOwnProperty(value.toLowerCase())) {\n            return \"support.constant.fonts\";\n        }\n        else {\n            return \"text\";\n        }\n    },\n    regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n}</code></pre>\n                            <p>If <code>token</code> is a function,it should take the same number of arguments as there are groups, and return an array of tokens.</p>\n                            <p>For grouped regular expressions, <code>token</code> can be a String, in which case all matched groups are given that same token, like this:</p>\n                            <pre><code class=\"language-javascript\">{\n    token: \"identifier\",\n    regex: \"(\\\\w+\\\\s*:)(\\\\w*)\"\n}</code></pre>\n                            <p>More commonly, though, <code>token</code> is an Array (of the same length as the number of groups), whereby matches are given the token of the same alignment as in the match. For a complicated regular expression, like defining a function, that might look something like this:</p>\n                            <pre><code class=\"language-javascript\">{\n    token : [\"storage.type\", \"text\", \"entity.name.function\"],\n    regex : \"(function)(\\\\s+)([a-zA-Z_][a-zA-Z0-9_]*\\\\b)\"\n}</code></pre>\n                            <h2 id=\"defining-states\"><a class=\"heading_anchor\" href=\"#defining-states\"><i class=\"headerLinkIcon\"></i></a>Defining States</h2>\n                            <p>The syntax highlighting state machine stays in the <code>start</code> state, until you define a <code>next</code> state for it to advance to. At that point, the tokenizer stays in that new <code>state</code>, until it advances to another state. Afterwards, you should return to the original <code>start</code> state.</p>\n                            <p>Here's an example:</p>\n                            <pre><code class=\"language-javascript\">this.$rules = {\n    \"start\" : [ {\n        token : \"text\",\n        regex : \"&lt;\\\\!\\\\[CDATA\\\\[\",\n        next : \"cdata\"\n    } ],\n\n    \"cdata\" : [ {\n        token : \"text\",\n        regex : \"\\\\]\\\\]&gt;\",\n        next : \"start\"\n    }, {\n        defaultToken : \"text\"\n    } ]\n};</code></pre>\n                            <p>In this extremely short sample, we're defining some highlighting rules for when Ace detects a <code>&lt;![CDATA</code> tag. When one is encountered, the tokenizer moves from <code>start</code> into the <code>cdata</code> state. It remains there, applying the <code>text</code> token to any string it encounters. Finally, when it hits a closing <code>]&gt;</code> symbol, it returns to the <code>start</code> state and continues to tokenize anything else.</p>\n                            <h2>Using the TMLanguage Tool</h2>\n                            <p>There is a tool that \n                                will take an existing <em>tmlanguage</em> file and do its best to convert it into Javascript for Ace to consume. Here's what you need to get started:\n                            </p>\n                            <ol>\n                                <li>In the Ace repository, navigate to the <em><a href=\"https://github.com/ajaxorg/ace/tree/master/tool\">tools</a></em> folder.</li>\n                                <li>Run <code>npm install</code>  to install required dependencies.</li>\n                                <li>Run <code>node tmlanguage.js &lt;path_to_tmlanguage_file&gt;</code>; for example, <code>node &lt;path_to_tmlanguage_file&gt; /Users/Elrond/elven.tmLanguage</code></li>\n                            </ol>\n                            <p>Two files are created and placed in <em>lib/ace/mode</em>: one for the language mode, and one for the set of highlight rules. You will still need to add the code into <em>ace/ext/modelist.js</em>, and add a sample file for testing.</p>\n                            <h3 id=\"a-note-on-accuracy\"><a class=\"heading_anchor\" href=\"#a-note-on-accuracy\"><i class=\"headerLinkIcon\"></i></a>A Note on Accuracy</h3>\n                            <p>Your <em>.tmlanguage</em> file will then be converted to the best of the converter’s ability. It is an understatement to say that the tool is imperfect. Probably, language mode creation will never be able to be fully autogenerated. There's a list of non-determinable items; for example:</p>\n                            <ul>\n                                <li>The use of regular expression lookbehinds<br />This is a concept that JavaScript simply does not have and needs to be faked</li>\n                                <li>Deciding which state to transition to<br />While the tool does create new states correctly, it labels them with generic terms like <code>state_2</code>, <code>state_10</code>, <em>e.t.c.</em></li>\n                                <li>Extending modes<br />Many modes say something like <code>include source.c</code>, to mean, “add all the rules in C highlighting.” That syntax does not make sense to Ace or this tool (though of course you can <a href=\"/extension-development-resources/guides/extending_highlighters.html\">extending existing highlighters</a>).</li>\n                                <li>Rule preference order</li>\n                                <li>Gathering keywords<br />Most likely, you’ll need to take keywords from your language file and run them through <code>createKeywordMapper()</code></li>\n                            </ul>\n                            <p>However, the tool is an excellent way to get a quick start, if you already possess a <em>tmlanguage</em> file for you language.</p>\n                            <h2>Extending Highlighters</h2>\n                            <p>Suppose you&#39;re working on a LuaPage, PHP embedded in HTML, or a Django template. You&#39;ll need to create a syntax highlighter that takes all the rules from the original language (Lua, PHP, or Python) and extends it with some additional identifiers (<code>&lt;?lua</code>, <code>&lt;?php</code>, <code>{%</code>, for example). Ace allows you to easily extend a highlighter using a few helper functions.</p>\n                            <h3 id=\"getting-existing-rules\"><a class=\"heading_anchor\" href=\"#getting-existing-rules\"><i class=\"headerLinkIcon\"></i></a>Getting Existing Rules</h3>\n                            <p>To get the existing syntax highlighting rules for a particular language, use the <code>getRules()</code> function. For example:</p>\n                            <pre><code class=\"language-javascript\">var HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\n\nthis.$rules = new HtmlHighlightRules().getRules();\n\n/*\n    this.$rules == Same this.$rules as HTML highlighting\n*/</code></pre>\n                            <h3 id=\"extending-a-highlighter\"><a class=\"heading_anchor\" href=\"#extending-a-highlighter\"><i class=\"headerLinkIcon\"></i></a>Extending a Highlighter</h3>\n                            <p>The <code>addRules</code> method does one thing, and it does one thing well: it adds new rules to an existing rule set, and prefixes any state with a given tag. For example, let&#39;s say you&#39;ve got two sets of rules, defined like this:</p>\n                            <pre><code class=\"language-javascript\">this.$rules = {\n    \"start\": [ /* ... */ ]\n};\n\nvar newRules = {\n    \"start\": [ /* ... */ ]\n}</code></pre>\n                            <p>If you want to incorporate <code>newRules</code> into <code>this.$rules</code>, you&#39;d do something like this:</p>\n                            <pre><code class=\"language-javascript\">this.addRules(newRules, \"new-\");\n\n/*\n    this.$rules = {\n        \"start\": [ ... ],\n        \"new-start\": [ ... ]\n    };\n*/</code></pre>\n                            <h3 id=\"extending-two-highlighters\"><a class=\"heading_anchor\" href=\"#extending-two-highlighters\"><i class=\"headerLinkIcon\"></i></a>Extending Two Highlighters</h3>\n                            <p>The last function available to you combines both of these concepts, and it&#39;s called <code>embedRules</code>. It takes three parameters:</p>\n                            <ol>\n                                <li>An existing rule set to embed with</li>\n                                <li>A prefix to apply for each state in the existing rule set</li>\n                                <li>A set of new states to add</li>\n                            </ol>\n                            <p>Like <code>addRules</code>, <code>embedRules</code> adds on to the existing <code>this.$rules</code> object. </p>\n                            <p>To explain this visually, let&#39;s take a look at the syntax highlighter for Lua pages, which combines all of these concepts:</p>\n                            <pre><code class=\"language-javascript\">var HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\nvar LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\n\nvar LuaPageHighlightRules = function() {\n    this.$rules = new HtmlHighlightRules().getRules();\n\n    for (var i in this.$rules) {\n        this.$rules[i].unshift({\n            token: \"keyword\",\n            regex: \"&lt;\\\\%\\\\=?\",\n            next: \"lua-start\"\n        }, {\n            token: \"keyword\",\n            regex: \"&lt;\\\\?lua\\\\=?\",\n            next: \"lua-start\"\n        });\n    }\n    this.embedRules(LuaHighlightRules, \"lua-\", [\n        {\n            token: \"keyword\",\n            regex: \"\\\\%&gt;\",\n            next: \"start\"\n        },\n        {\n            token: \"keyword\",\n            regex: \"\\\\?&gt;\",\n            next: \"start\"\n        }\n    ]);\n};</code></pre>\n                            <p>Here, <code>this.$rules</code> starts off as a set of HTML highlighting rules. To this set, we add two new checks for <code>&lt;%=</code> and <code>&lt;?lua=</code>. We also delegate that if one of these rules are matched, we should move onto the <code>lua-start</code> state. Next, <code>embedRules</code> takes the already existing set of <code>LuaHighlightRules</code> and applies the <code>lua-</code> prefix to each state there. Finally, it adds two new checks for <code>%&gt;</code> and <code>?&gt;</code>, allowing the state machine to return to <code>start</code>.</p>\n                            <h3>Code Folding</h3>\n                            <p>Adding new folding rules to your mode can be a little tricky. First, insert the following lines of code into your mode definition:</p>\n                            <pre><code class=\"language-javascript\">var MyFoldMode = require(\"./folding/newrules\").FoldMode;\n\n...\nvar MyMode = function() {\n\n    ...\n\n    this.foldingRules = new MyFoldMode();\n};</code></pre>\n                            <p>You&#39;ll be defining your code folding rules into the <em>lib/ace/mode/folding</em> folder. Here&#39;s a template that you can use to get started:</p>\n                            <pre><code class=\"language-javascript\">define(function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    // regular expressions that identify starting and stopping points\n    this.foldingStartMarker; \n    this.foldingStopMarker;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n\n        // test each line, and return a range of segments to collapse\n    };\n\n}).call(FoldMode.prototype);\n\n});</code></pre>\n                            <p>Just like with <code>TextMode</code> for syntax highlighting, <code>BaseFoldMode</code> contains the starting point for code folding logic. <code>foldingStartMarker</code> defines your opening folding point, while <code>foldingStopMarker</code> defines the stopping point. For example, for a C-style folding system, these values might look like this:</p>\n                            <pre><code class=\"language-javascript\">this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\nthis.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;</code></pre>\n                            <p>These regular expressions identify various symbols--<code>{</code>, <code>[</code>, <code>//</code>--to pay attention to. <code>getFoldWidgetRange</code> matches on these regular expressions, and when found, returns the range of relevant folding points. For more information on the <code>Range</code> object, see <a href=\"#nav=api&amp;api=range\">the Ace API documentation</a>.</p>\n                            <p>Again, for a C-style folding mechanism, a range to return for the starting fold might look like this:</p>\n                            <pre><code class=\"language-javascript\">var line = session.getLine(row);\nvar match = line.match(this.foldingStartMarker);\nif (match) {\n    var i = match.index;\n\n    if (match[1])\n        return this.openingBracketBlock(session, match[1], row, i);\n\n    var range = session.getCommentFoldRange(row, i + match[0].length);\n    range.end.column -= 2;\n    return range;\n}</code></pre>\n                            <p>Let&#39;s say we stumble across the code block <code>hello_world() {</code>. Our range object here becomes:</p>\n                            <pre><code class=\"language-json\">{\n  startRow: 0,\n  endRow: 0,\n  startColumn: 0,\n  endColumn: 13\n}</code></pre>\n                            <h2>Testing Your Highlighter</h2>\n                            <p>The best way to test your tokenizer is to see it live, right? To do that, you&#39;ll want to modify the <a href=\"build/kitchen-sink.html\">live Ace demo</a> to preview your changes. You can find this file in the root Ace directory with the name <em>kitchen-sink.html</em>.</p>\n                            <ol>\n                                <li>\n                                    add an entry to <code>supportedModes</code> in <a href=\"https://github.com/ajaxorg/ace/blob/master/lib/ace/ext/modelist.js#L53\"><code>ace/ext/modelist.js</code></a>\n                                </li>\n                                <li>\n                                    <p>add a sample file to <code>demo/kitchen-sink/docs/</code> with same name as the mode file\n                                </li>\n                            </ol>\n                            <p>Once you set this up, you should be able to witness a live demonstration of your new highlighter.</p>\n                            <h3 id=\"adding-automated-tests\"><a class=\"heading_anchor\" href=\"#adding-automated-tests\"><i class=\"headerLinkIcon\"></i></a>Adding Automated Tests</h3>\n                            <p>Adding automated tests for a highlighter is trivial so you are not required to do it, but it can help during development.</p>\n                            <p>In <code>lib/ace/mode/_test</code> create a file named <code><pre>text_<span style=\"color:#AA0D91\">&lt;modeName&gt;</span>.txt</pre></code> with some example code. (You can skip this if the document you have added in <code>demo/docs</code> both looks good and covers various edge cases in your language syntax).\n                            </p>\n                            <p> Run <code><span style=\"color:#AA0D91\">node</span> <span style=\"color:#008800\">highlight_rules_test.js</span> <span style=\"color:#000088\">-gen</span></code> to preserve current output of your tokenizer in <code>tokens_<span style=\"color:#AA0D91\">&lt;modeName&gt;</span>.json</code>\n                            </p>\n                            <p>After this running <code><span style=\"color:#008800\">highlight_rules_test.js</span> <span style=\"color:#000088\">optionalLanguageName</span></code> will compare output of your tokenizer with the correct output you've created.\n                            </p>\n                            <p>Any files ending with the <em>_test.js</em> suffix are automatically run by Ace&#39;s <a href=\"https://travis-ci.org/#!/ajaxorg/ace\">Travis CI</a> server.</p>\n                        </div>\n                        <div class=\"tab-pane fade\" id=\"api\">\n                            <div class=\"row centerpiece\">\n                                <div id=\"sidebarContainer\" class=\"span2\">\n                                    <div id=\"sidebar\">\n                                        <div id=\"well\">\n                                            \n                                            <ul class=\"menu\">\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/ace.html\" class=\"menuLink namespace\">Ace</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/anchor.html\" class=\"menuLink namespace\">Anchor</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/background_tokenizer.html\" class=\"menuLink namespace\">BackgroundTokenizer     </a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/document.html\" class=\"menuLink namespace\">Document    </a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/edit_session.html\" class=\"menuLink namespace\">EditSession</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/editor.html\" class=\"menuLink namespace\">Editor</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/range.html\" class=\"menuLink namespace\">Range</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/scrollbar.html\" class=\"menuLink namespace\">Scrollbar</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/search.html\" class=\"menuLink namespace\">Search                     </a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/selection.html\" class=\"menuLink namespace\">Selection   </a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/token_iterator.html\" class=\"menuLink namespace\">TokenIterator</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/tokenizer.html\" class=\"menuLink namespace\">Tokenizer</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/undomanager.html\" class=\"menuLink namespace\">UndoManager</a></div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"menu-item\"><a href=\"./api/virtual_renderer.html\" class=\"menuLink namespace\">VirtualRenderer</a></div>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"apiHolder\">\n                                    <div id=\"documentation\" class=\"span7\">\n                                    <h1>Ace API Reference</h1>\n                                    <p>Welcome to the Ace API Reference!</p>\n                                    <p>On the left, you'll find a list of all of our currently documented classes. \n                                        These is not a complete set of classes, but rather, the \"core\" set. For more \n                                        information on how to work with Ace, check out the <a href=\"#nav=embedding\">embedding guide</a>.\n                                    </p>\n                                    <p>Below is an ERD diagram describing some fundamentals about how the internals of Ace works:</p>\n                                    <img lazy-src=\"doc/template/resources/images/Ace_ERD.png\" style=\"max-width:100%; max-height:100%\" />\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"tab-pane fade\" id=\"production\">\n                            <h1>Projects Using Ace</h1>\n                            <p>Ace is used all over the web in all kinds of production applications. Here is\n                                just a small sampling:</p>\n                            <ul class=\"menu-list\" style=\"overflow: hidden;\">\n                                <li>\n                                    <div style=\"height: 100%;background: url(https://a0.awsstatic.com/main/images/logos/aws_smile-header-desktop-en-white_59x35@2x.png) no-repeat 0 7px/100px;\"></div>\n                                    <a href=\"https://aws.amazon.com/\">AWS</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/khan-logo.png\"\n                                        style=\"left: -10px; top: -27px; width: 120px\" />\n                                    <a href=\"http://ejohn.org/blog/introducing-khan-cs/\">Khan Academy</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/cloud9-logo.png\"\n                                        style=\"left: -11px;top:-12px; width:122px\" />\n                                    <a href=\"https://github.com/ajaxorg/cloud9\">Cloud9 IDE</a>\n                                </li>\n                                \n                                <li>\n                                    <img lazy-src=\"doc/site/images/codecademy-logo.png\"\n                                        style=\"left: -5px; top: 10px;\" />\n                                    <a href=\"http://www.codecademy.com/\">Codecademy</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/rstudio_logo_64.png\"\n                                        style=\"left: 19px; top: 2px;\" />\n                                    <a href=\"http://rstudio.org/\">RStudio</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://zedapp.s3.amazonaws.com/uploads/2014/02/zed-small.png\" style=\"left: -1px;top: -20px;width: 103px;\">\n                                    <a href=\"http://zedapp.org\">Zed</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://raw.githubusercontent.com/creationix/tedit/gh-pages/icons/icon-128.png\"\n                                        style=\"width: 104px; left: -1px; top: -17px;\">\n                                    <a href=\"https://github.com/creationix/tedit\">Tedit</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://upload.wikimedia.org/wikipedia/commons/6/63/Wikipedia-logo.png\" style=\"left: -5px; top: -35px; width: 110px;\">\n                                    <a href=\"https://en.wikipedia.org/wiki/Special:Version\" style=\"font-family: 'Linux Libertine','Hoefler Text',Georgia,'Times New Roman',Times,serif;\">W<span style=\"font-variant: small-caps;\">ikipedi</span>A</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/codiad.png\"\n                                        style=\"left: 10px; top: -4px; width:80px\" />\n                                    <a href=\"http://codiad.com/\">Codiad</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://afreetools.com/wp-content/uploads/2024/04/logo-dark.png\"\n                                        style=\"left: 10px; top: -4px; width:80px\" />\n                                    <a href=\"https://afreetools.com\">aFreeTools</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/shiftedit-logo.png\"\n                                        style=\"left: -10px; top: -20px; width: 120px\" />\n                                    <a href=\"http://shiftedit.net/\">ShiftEdit</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/sassmeister-logo.png\"\n                                        style=\"left: 10px;top: -5px;width: 80px;\" />\n                                    <a href=\"http://sassmeister.com/\">SassMeister</a>\n                                </li> \n                                <li>\n                                    <img lazy-src=\"doc/site/images/sx-logo.png\"\n                                        style=\"left: -11px; top: -12px;\">\n                                    <a href=\"http://www.scroipe.com\">Scroipe</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/ideone-logo.png\"\n                                        style=\"left: -5px; top: 20px;\">\n                                    <a href=\"http://ideone.com\">Ideone.com</a>\n                                </li>\n                                <li>\n                                    <div style=\"\n                                        background: url(https://lively-web.org/core/media/lively-web-logo.png) no-repeat;\n                                        position: absolute; left: -5px; height: 71px; width: 103px; background-size: 390px;\n                                        background-position: 19px;\"></div>\n                                    \n                                    <a href=\"http://lively-web.org\">Lively Web</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"doc/site/images/modx-logo-4.png\"\n                                        style=\"left: 18px; top: 6px;\">\n                                    <a href=\"http://modx.com/extras/package/ace\">MODX</a>\n                                </li>\n                                <li>\n                                    <div class=\"rotating-logo\" style=\"background:url(doc/site/images/habitat-logo.svg) center no-repeat;\n                                        left: 19px; top: 6px;width: 60px;height: 60px;background-size: 60px;position: relative;\"></div>\n                                    <a href=\"http://habitat.inkling.com\">Inkling Habitat</a>\n                                </li>\n                                <li style=\"width: 248px;\">\n                                    <img lazy-src=\"https://codecombat.com/images/pages/base/logo.png\" style=\"left: 0px; top: 1px; width: 248px\">\n                                    <a href=\"http://codecombat.com\">Code Combat</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://papeeria.com/assets/all/images/papeeria_small.png\" style=\"width: 95px; left: 2px; top: 8px;\">\n                                    <a href=\"http://papeeria.com\">Papeeria</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://www.codingame.com/blog/wp-content/uploads/2016/11/logo_codingame_hud.png\"\n                                        style=\"left: -15px;top: 27px;width: 127px;background: black;\" />\n                                    <a href=\"https://www.codingame.com\">CodinGame</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">Dillinger</div>\n                                    <a href=\"http://dillinger.io/\">Dillinger</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">Edicy</div>\n                                    <a href=\"http://www.edicy.com/blog/new-code-editor-for-creating-unique-website-designs\">Edicy</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">pixelJET</div>\n                                    <a href=\"http://www.pixeljet.net/index.html\">pixelJET</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://approximatrix.com/static/images/simplytext/logo-long-white.png\"\n                                        style=\"width: 106px; left: -4px; top: 26px;\">\n                                    <a href=\"http://approximatrix.com/products/simplytext\">Simply Text</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\" style=\"font-size: 18px;\">ACEView</div>\n                                    <a href=\"https://github.com/faceleg/ACEView\">ACEView</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\" style=\"margin-left:-12px;\">BootTheme</div>\n                                    <a href=\"http://www.boottheme.com/\">BootTheme</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://codebender.cc/images/codebender-transparent.png\"\n                                        style=\"left: -9px; width: 117px;top: -22px;\">\n                                    <a href=\"http://codebender.cc/\">Codebender</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\" style=\"margin-left:-5px;\">Debuggex</div>\n                                    <a href=\"http://www.debuggex.com\">Debuggex</a>\n                                </li>\n                                <li>\n                                    <script>\n                                        ace.require(\"ace/lib/dom\").importCssStylsheet(\"https://fonts.googleapis.com/css?family=Henny+Penny\", document);\n                                    </script>\n                                    <div class=\"text-logo\" style=\"margin-left:-17px;font-family:'Henny Penny',cursive;\">ChocolateJs</div>\n                                    <a href=\"https://chocolatejs.org\">Chocolatejs</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://playir.com/common/icon_playir.png\"\n                                        style=\"left: 11px; width: 96px;top: -17px;\">\n                                    <a href=\"http://playir.com\">Playir</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://joshnuss.github.io/mruby-web-irb/images/favicon.png\"\n                                        style=\"left: 4px; width: 90px;top: -17px;\">\n                                    <a href=\"http://joshnuss.github.io/mruby-web-irb/\">Mruby-web-irb</a>\n                                </li>\n                                <li>\n                                    <div style=\"font-size:50px\" class=\"text-logo\">t<span style=\"color:green\">p<span></div>\n                                    <a href=\"https://www.tutorialspoint.com/online_html_editor.php\">tutorialspoint</a>\n                                </li>\n                                <li title=\"Online conference and code review tool\">\n                                    <div style=\"width: 90px; left: 10px; top: 0px;background:rgb(24,73,92);color: white;position: absolute;\n                                        font-size: 68px;text-align: center;font-weight: bold;font-family: inherit;line-height: normal;\">sT</div>\n                                    <a href=\"http://sourcetalk.net/\">SourceTalk</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\" style=\"margin-top:4px\">Run PHP Code</div>\n                                    <a href=\"https://github.com/websiteduck/Run-PHP-Code\">RunPHPCode</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://cloudcmd.io/img/logo/cloudcmd.png\"\n                                        style=\"width: 108px; left: -4px; top: -2px;\">\n                                    <a href=\"http://cloudcmd.io\">Cloud Commander</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">NapCat</div>\n                                    <a href=\"http://napcatapp.tumblr.com/post/60598006734/version-1-3-is-released\">NapCat</a>\n                                </li>\n                                <li>\n                                    <div style=\"color:orange;font-size:50px\" class=\"text-logo\">OJ</div>\n                                    <a href=\"http://ojjs.org/index.html\">OJjs</a>\n                                </li>\n                                <li>\n                                    <div style=\"color:green;font-size:50px\" class=\"text-logo\">&lt;/&gt;</div>\n                                    <a href=\"https://thlorenz.github.io/scriptie-talkie/\">Scriptie-Talkie</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">md</div>\n                                    <a href=\"https://thlorenz.github.io/browserify-markdown-editor/\">browserify-markdown-editor</a>\n                                </li>\n                                <li>\n                                    <!-- <img src=\"https://www.siteleaf.com/images/logo.svg\" style=\"left: 20px; top: -15px; width: 60px;\"> -->\n                                    <a href=\"https://www.siteleaf.com/\">Siteleaf</a>\n                                </li>\n                                <li>\n                                    <div class=\"\" style=\"\n                                        background: url(https://colorsublime.github.io/assets/img/ColorSublime_logo.png);\n                                        position: absolute;height: 65px;width: 99px;\n                                        background-size: 310px 128px;background-position: 210px top;\n                                    \"></div>\n                                    <a href=\"https://colorsublime.github.io/\">ColorSublime</a>\n                                </li>\n                                <li>\n                                    <div style=\"\n                                        background: url(https://s3.amazonaws.com/spark-website/spark.png) no-repeat;\n                                        position: absolute; height: 65px; width: 83px; background-size: 200px 65px;\n                                        background-position: 19px;\"></div>\n                                    <a href=\"http://spark.io/build\">Spark Core</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://2.gravatar.com/avatar/021e207e86fe81a7d81c67ef1ff38a0c\" style=\"left: 11px; top: -5px;\">\n                                    <a href=\"http://owncloud.org\">ownCloud</a>\n                                </li>\n                                <li>\n                                   <!--  <img src=\"https://www.ezoui.com/prod/images/EZo_logo.png\" style=\"left: 11px; top: -5px;\"> -->\n                                    <a href=\"http://jqmdesigner.appspot.com\">JQM Designer</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">qooxdoo</div>\n                                    <a href=\"http://demo.qooxdoo.org/devel/playground/#\">Qooxdoo playground</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">ShareJS</div>\n                                    <a href=\"http://sharejs.org/hello-ace.html\">ShareJS</a>\n                                </li>\n                                <li>\n                                    <div style=\"\n                                        background: url(https://www.pythonanywhere.com/static/anywhere/images/logo-234x35.png) no-repeat;\n                                        position: absolute; height: 65px; width: 94px; background-size: 234px 35px;\n                                        background-position: 19px;\"></div>\n                                    <a href=\"http://www.pythonanywhere.com/\">PythonAnywhere</a>\n                                </li>\n                                <li>\n                                   <!--  <img src=\"https://asciidocfx.com/images/logo.png\" style=\"width: 75px; left: 12px; top: 0px;\"> -->\n                                    <a href=\"http://asciidocfx.com/\">Asciidoc FX</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://octobercms.com/themes/website/assets/images/october.png\" style=\"width: 95px; left: 2px; top: -17px;\">\n                                    <a href=\"http://octobercms.com\">October CMS</a>\n                                </li>\n                                <li style=\"width: 248px;\">\n                                    <img lazy-src=\"https://www.codeavengers.com/image/RedLogoSmall.png\" style=\"width: 248px; top: 30px;\">\n                                    <a href=\"http://www.codeavengers.com/image/RedLogoSmall.png\">Code Avengers</a>\n                                </li>\n                                <li>\n                                    <div style=\"font-size:23px\" class=\"text-logo\">{dev<span style=\"color:#ef4423\">un</span>ity}</div>\n                                    <a href=\"http://devunity.com/\">Devunity</a>\n                                </li>\n                                <li style=\"width: 248px;\">\n                                    <img lazy-src=\"https://d2j5eocv5gptnv.cloudfront.net/assets/non_game_misc/site_header_logo.png?v=2\" style=\"width: 238px; top: 15px; left: 5px\">\n                                    <a href=\"http://www.codemonkey.co.il/\">CodeMonkey</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://funprogramming.org/i/fun_programming_logo_for_ace.png\" style=\"width: 75px; left: 12px; top: -5px;\">\n                                    <a href=\"http://funprogramming.org\">Fun Programming</a>\n                                </li>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://lh4.ggpht.com/hG5bDu1GBXwxpPnrgPcAmTNQyZK4ICBDC9aeLNmMZahEYQOz_2vYT6sBqLNGLIGPopWjdveEvPuM9NBuErUSLQ=s60\" style=\"width: 75px; left: 12px; top: -5px;\">\n                                    <a href=\"http://bootzee.com\">Bootzee</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://www.branchcms.com/layout/images/branch-brand-logo-2.png\" style=\"width: 125px; left: -12px; top: 15px;\">\n                                    <a href=\"http://www.branchcms.com/blog/post/new-code-editor-ace\">Branch CMS</a>\n                                </li>\n                                <li>\n                                   <!--  <img src=\"https://neocities.org/assets/img/cat.png\" style=\"width: 95px; left: 2px; top: 0px;\"> -->\n                                    <a href=\"https://neocities.org\">Neocities</a>\n                                </li>\n                                <li>\n                                   <!--  <img src=\"https://webftp.selfbuild.fr/images/logo/logo_128.png\" style=\"width: 95px; left: 2px; top: -17px;\"> -->\n                                    <a href=\"http://webftp.selfbuild.fr\">SelfBuild </a>\n                                </li>\n                                <li>\n                                    <!-- <img src=\"https://sbp.selfbuild.fr/sbp.png\" style=\"width: 95px; left: 2px; top: -8px;\"> -->\n                                    <a href=\"http://sbp.selfbuild.fr/\">SBP</a>\n                                </li>\n                                <li>\n                                    <!-- <img src=\"https://eseecode.com/web/sites/eseecode.com/files/favicon.png\" style=\"width: 100px; left: 0px; top: -20px;\"> -->\n                                    <a href=\"http://eseecode.com/\">eSeeCode</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://codinghire.com/static/img/twitter.png\" style=\"width: 80px; left: 10px; top: -3px;\">\n                                    <a href=\"https://codinghire.com/\">Coding Hire</a>\n                                </li>\n                                <li>\n                                    <div style=\"\"></div>\n                                    <a href=\"http://apiary.io/\">Apiary</a>\n                                </li>\n                                <li>\n                                    <!-- <img src=\"https://exist-db.org/exist/apps/eXide/resources/images/logo.png\" style=\"width: 120px; left: -10px; top: 15px;\"> -->\n                                    <a href=\"http://exist-db.org\">ExistDB</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://jscalc.io/img/icons/jscalc_full_bleed_24.svg\" style=\"width: 90px; left: 5px; top: -10px;\">\n                                    <a href=\"https://jscalc.io/\">JSCalc</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://www.gestixi.com/assets/img/icons/gestixi-64.png\" style=\"width: 90px; left: 5px; top: 20px;\">\n                                    <a href=\"https://www.gestixi.com/\">GestiXi</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\" style=\"font-size:22px;text-shadow:none;margin-top:13px\">Code-Fight.Club</div>\n                                    <a href=\"http://code-fight.club\">Code-Fight.Club</a>\n                                </li>\n                                \n                                <li>\n                                    <a href=\"http://www.wavemaker.com/\">WaveMaker</a>\n                                </li>\n                                \n                                <li>\n                                    <div class=\"text-logo\">Semantic Ui</div>\n                                    <a href=\"http://semantic-ui.com/\">Semantic Ui</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">tmpltr</div>\n                                    <a href=\"http://rocktronica.github.io/tmpltr/\">tmpltr</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">Git-Edit</div>\n                                    <a href=\"https://github.com/krispo/git-edit\">Git-Edit</a>\n                                </li>\n                                <li>\n                                    <a href=\"http://codebender.cc/\">Codebender</a>\n                                </li>\n                                <li>\n                                    <a href=\"http://beautifytools.com/\">BeautifyTools</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">trinket</div>\n                                     <a href=\"https://trinket.io/\">trinket</a>\n                                </li>\n                                <li>\n                                    <a href=\"https://goonlinetools.com/\">GoOnlineTools</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://sqlize.online/favicons/sqlize/android-chrome-192x192.png\" style=\"width: 72px; left: 15px; top: 0px;\">\n                                    <a href=\"https://sqlize.online/\">SQLize.online</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://phpize.online/favicons/phpize/android-chrome-192x192.png\" style=\"width: 72px; left: 15px; top: 0px;\">\n                                    <a href=\"https://phpize.online/\">PHPize.online</a>\n                                </li>\n                                <li>\n                                    <div class=\"text-logo\">Domoticz</div>\n                                    <a href=\"https://www.domoticz.com/\">Domoticz</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://nixx.dev/static/hotlink-ok/logo-alt.png\" style=\"width: 72px; left: 15px; top: 0px;\">\n                                    <a href=\"https://nixx.dev\">Nixx Web Tools</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://acode.foxdebug.com/logo.svg\" style=\"width: 72px; left: 15px; top: 10px;\">\n                                    <a href=\"https://acode.foxdebug.com\">Acode</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://tool.next2d.app/assets/img/logo.svg\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://next2d.app/\">Next2D</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://github.com/devlive-community/datacap/blob/dev/core/datacap-ui/public/static/images/logo.png?raw=true\" style=\"width: 72px; left: 15px; top: 0px;\">\n                                    <a href=\"https://github.com/devlive-community/datacap\">DataCap</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://aijs.io/images/purpleLogo.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://aijs.io/editor\">AIJS</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://k8studio.io/logo.png\" style=\"width: 85px; left: 7px; top: 25px; background-color: black; margin: -5px; padding: 5px;\">\n                                    <a href=\"https://k8studio.io/\">K8Studio</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://hardcoder.xyz/favicon.ico\" style=\"width: 72px; left: 15px; top: -2px;\">\n                                    <a href=\"https://hardcoder.xyz/?mkp=fncd\">Funcdown</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://sqltest.online/favicons/android-chrome-192x192.png\" style=\"width: 72px; left: 15px; top: 0px;\">\n                                    <a href=\"https://sqltest.online/\">SQLtest.online</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://hiren.js.org/H.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://hiren.js.org/\">HirenJS Code Editor</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://hyena-code.web.app/assets/universal/imgs/logo.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://hyena-code.web.app/\">Hyena Code</a>\n                                </li>\n\t\t\t                    <li>\n                                    <img lazy-src=\"https://techcopes.com/logo.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://techcopes.com/\">Techcopes</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://media.geeksforgeeks.org/gfg-gg-logo.svg\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://www.geeksforgeeks.org/\">Geeks for geeks</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://jsonedit.com/assets/img/jsoneditlogo.png\" style=\"width: 85px; left: 7px; top: 20px; background-color: rgb(4, 19, 19);\">\n                                    <a href=\"https://jsonedit.com/\">JSONEdit</a>\n                                </li>\t\t\n                                <li>\n                                    <img lazy-src=\"https://panel.bastify.com/dist/images/logo.svg\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://www.bastify.com/\">Bastify</a>\n                                </li>\t\n                                <li>\n                                    <img lazy-src=\"https://xuantuyen.education/assets/img/logo.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://www.xuantuyen.education/\">XUÂN TUYẾN Education</a>\n                                </li>\t\t\n\t\t\t\t<li>\n                                    <img lazy-src=\"https://gamaddy.com/gamaddy.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://gamaddy.com/\">Gamaddy</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://opensolr.com/img/logo-simple.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://opensolr.com/\">Opensolr</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://oppydev.ai/wp-content/uploads/2024/09/LogoIcon.png\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://oppydev.ai/\">OppyDev</a>\n                                </li>\n                                <li>\n                                    <img lazy-src=\"https://contao.org/files/images/contao-logo.svg\" style=\"width: 85px; left: 7px; top: -7px;\">\n                                    <a href=\"https://contao.org/\">Contao</a>\n                                </li>\n                                <li id=\"add_your_site\">\n                                    <p>+</p>\n                                    <a href=\"https://github.com/ajaxorg/ace/issues/new?assignees=&labels=website%2Cneeds-triage&projects=&template=add-to-website.yml&title=Add+project+%28project+name%29+to+the+list+of+projects+using+Ace+on+its+website\">Your Site Here</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <script src=\"./doc/site/js/jquery.min.js\"></script>\n        <script src=\"./doc/site/js/bootstrap.min.js\"></script>\n        <script src=\"./doc/template/resources/javascripts/bbq.js\"></script>        \n        <script src=\"./doc/site/js/main.js\"></script>        \n        <script defer src=\"./doc/site/js/ga.js\"></script>\n    </body>\n</html>\n"
        },
        {
          "name": "kitchen-sink.html",
          "type": "blob",
          "size": 3.685546875,
          "content": "<!DOCTYPE html>\n\n<html lang=\"en\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,height=device-height\" />\n    <title>Ace Kitchen Sink</title>\n    <meta name=\"author\" content=\"Fabian Jakobs\">\n\n    <link rel=\"stylesheet\" href=\"demo/kitchen-sink/styles.css\" type=\"text/css\" media=\"screen\" charset=\"utf-8\">\n\n    <link href=\"./doc/site/images/favicon.ico\" rel=\"icon\" type=\"image/x-icon\">\n</head>\n<body>\n<div id=\"sidePanel\" style=\"position:absolute;height:100%;\">\n  <div class=\"toggleButton\" id=\"optionToggle\" role=\"button\" aria-label=\"Hide Options\" tabindex=\"0\">\n    <div></div><div></div><div></div>\n  </div>\n  <a href=\"https://c9.io\">\n    <img id=\"c9-logo\" alt=\"Cloud9 IDE | Your code anywhere, anytime\" src=\"demo/kitchen-sink/logo.png\" style=\"width: 172px;margin: -9px 30px -12px 51px;\">\n  </a>\n  <div style=\"position: absolute; overflow: hidden; top:100px; bottom:0\">\n  <div id=\"optionsPanel\" style=\"width: 120%; height:100%; overflow-y: scroll\">\n\n  \n  <a href=\"https://ace.c9.io\">\n    <img id=\"ace-logo\" alt=\"Ace Website\" src=\"doc/site/images/ace-logo.png\" style=\"width: 134px;margin: 46px 0px 4px 66px;\">\n  </a>\n<!--DEVEL-->\n  <div style=\"text-align: left; padding: 0.5em 1em;\">\n    <a style=\"color: whitesmoke;\" target=\"_test\"  rel=\"noreferer\" href=\"./src/test/tests.html\">tests</a>\n  </div>\n  <div style=\"text-align: left; padding: 0.5em 1em;\">\n    <a style=\"color: whitesmoke;\" target=\"_test\"  rel=\"noreferer\" href=\"./tool/mode_creator.html\">Mode Creator</a>\n  </div>\n  <div style=\"text-align: left; padding: 0.5em 1em;\">\n    <a style=\"color: whitesmoke;\" target=\"_test\"  rel=\"noreferer\" href=\"./tool/perf-test.html\">Performance test</a>\n  </div>\n  <div style=\"text-align: left; padding: 0.5em 1em;\">\n    <a style=\"color: whitesmoke;\" href=\"?lib=1\">Load from lib/ace</a>\n  </div>\n<!--DEVEL-->\n  </div>\n  </div>\n</div>\n  <div id=\"editor-container\"></div>\n\n<!--DEVEL-->\n  <script type=\"text/javascript\">\n    var os = /os=(\\w+)|$/.exec(location.search)[1];\n    if (os) Object.defineProperty(navigator, \"platform\", {configurable:true, value: os});\n  </script>\n  <script src=\"demo/kitchen-sink/require.js\" type=\"text/javascript\"></script>\n  <script>\n    var useLib = /lib=1/.test(location.search);\n    var paths = useLib ? {\n      ace: \"lib/ace\",\n      demo: \"demo/kitchen-sink\"\n    } : {\n      ace: \"src\",\n      demo: \"demo/kitchen-sink\",\n      \"ace/worker/worker_client\": \"lib/ace/worker/worker_client_v2\",\n      \"ace/worker\": \"lib/ace/worker\",\n    };\n    \n    if (!useLib) {\n      [\n        \"json_worker\",\n        \"xquery_worker\",\n        \"yaml_worker\",\n        \"xquery/xqlint\",\n        \"xquery/jsoniq_lexer\",\n        \"xquery/xquery_lexer\",\n        \"css/csslint\",\n        \"coffee_worker\",\n        \"css_worker\",\n        \"xquery\",\n        \"html/saxparser\",\n        \"php/php\",\n        \"lua/luaparse\",\n        \"xml/sax\",\n        \"xml/dom-parser\",\n        \"xml/dom\",\n        \"lua_worker\",\n        \"jsoniq\",\n        \"json/json_parse\",\n        \"xml_worker\",\n        \"coffee/coffee\",\n        \"javascript_worker\",\n        \"php_worker\",\n        \"yaml/yaml-lint\",\n        \"javascript/jshint\",\n        \"html_worker\",\n      ].forEach(function(m) {\n        paths[\"ace/mode/\" + m] = \"lib/ace/mode/\" + m\n      })\n    }\n    \n    require.config({\n        paths: paths\n    });\n    require([\"ace/ace\"], function (ace) {\n        require([\"demo/demo.js\"], function (demo) {\n        });\n    });\n  </script>\n<!--DEVEL-->\n\n<!--PACKAGE\n  <script src=\"src/ace.js\" data-ace-base=\"src\" type=\"text/javascript\" charset=\"utf-8\"></script>\n  <script src=\"demo/kitchen-sink/demo.js\"></script>\n  <script type=\"text/javascript\" charset=\"utf-8\">\n    require(\"kitchen-sink/demo\");\n  </script>\n    PACKAGE-->\n\n</body>\n</html>\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.1025390625,
          "content": "{\n    \"name\": \"ace-code\",\n    \"description\": \"Ajax.org Code Editor is a full featured source code highlighting editor that powers the Cloud9 IDE\",\n    \"version\": \"1.37.4\",\n    \"homepage\": \"http://github.com/ajaxorg/ace\",\n    \"engines\": {\n        \"node\": \">= 0.6.0\"\n    },\n    \"author\": \"Fabian Jakobs <fabian@c9.io>\",\n    \"main\": \"src/ace.js\",\n    \"typings\": \"ace.d.ts\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"http://github.com/ajaxorg/ace.git\"\n    },\n    \"devDependencies\": {\n        \"amd-loader\": \"~0.0.4\",\n        \"architect-build\": \"https://github.com/c9/architect-build/tarball/43a6fdeffe\",\n        \"asyncjs\": \"~0.0.12\",\n        \"dryice\": \"0.4.11\",\n        \"eslint\": \"^8.20.0\",\n        \"istanbul\": \"^0.4.5\",\n        \"standard-version\": \"^9.3.2\",\n        \"typescript\": \"^5.6.3\"\n    },\n    \"mappings\": {\n        \"ace\": \".\"\n    },\n    \"license\": \"BSD-3-Clause\",\n    \"files\": [\n        \"src\",\n        \"styles\",\n        \"ace.d.ts\",\n        \"ace-modes.d.ts\",\n        \"types\",\n        \"esm-resolver.js\",\n        \"translations\",\n        \"!**/*_test.js\",\n        \"!**/_test\"\n    ],\n    \"scripts\": {\n        \"start\": \"node static.js\",\n        \"test\": \"node src/test/all.js\",\n        \"cover\": \"istanbul cover src/test/all.js\",\n        \"lint\": \"eslint \\\"src/**/*.js\\\" \\\"*.js\\\"\",\n        \"fix\": \"npm run lint -- --fix\",\n        \"typecheck\": \"tsc -p tsconfig.json\",\n        \"update-types\": \"node ./tool/ace_declaration_generator.js\",\n        \"changelog\": \"standard-version\",\n        \"prepack\": \"node tool/esm_resolver_generator.js && node tool/ace_declaration_generator.js && node Makefile.dryice.js css --target build-styles && rm -rf styles && mv build-styles/css styles\"\n    },\n    \"standard-version\": {\n        \"skip\": {\n            \"commit\": true,\n            \"tag\": true\n        }\n    },\n    \"prettier\": {\n        \"printWidth\": 120,\n        \"tabWidth\": 4,\n        \"useTabs\": false,\n        \"semi\": true,\n        \"singleQuote\": false,\n        \"trailingComma\": \"none\",\n        \"bracketSpacing\": false,\n        \"arrowParens\": \"always\",\n        \"requirePragma\": false,\n        \"insertPragma\": false,\n        \"proseWrap\": \"preserve\"\n    }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "static.js",
          "type": "blob",
          "size": 5.12109375,
          "content": "#!/usr/bin/env node\n\nvar http = require(\"http\")\n  , path = require(\"path\")\n  , url = require(\"url\")\n  , fs = require(\"fs\")\n  , port = process.env.PORT || 8888\n  , ip = process.env.IP || \"0.0.0.0\";\n\nfunction lookupMime(filename) {\n    var ext = /[^\\/\\\\.]*$/.exec(filename)[0];\n    return {\n        js: \"application/javascript\",\n        ico: \"image/x-icon\",\n        css: \"text/css\",\n        svg: \"image/svg+xml\",\n        png: \"image/png\",\n        jpg: \"image/jpg\",\n        html: \"text/html\",\n        jpeg: \"image/jpeg\",\n        wasm: \"application/wasm\",\n        json: \"application/json\",\n        xml: \"application/xml\",\n        ttf: \"font/ttf\",\n    }[ext];\n}\n  \n// compatibility with node 0.6\nif (!fs.exists)\n    fs.exists = path.exists;\n\nvar allowSave = process.argv.indexOf(\"--allow-save\") != -1;\nif (allowSave)\n    console.warn(\"writing files from browser is enabled\");\n\nhttp.createServer(function(req, res) {\n    var uri = unescape(url.parse(req.url).pathname);\n    console.log(\"[\" + req.method + \"]\", uri);\n    var root = process.cwd() + path.sep;\n    var filename = path.join(root, uri);\n\n    if (filename.slice(0, root.length) !== root) {\n        return error(res, 400, \"400 Bad request: Directory traversal is not allowed.\");\n    }\n\n    if (req.method == \"OPTIONS\") {\n        writeHead(res, 200);\n        return res.end();\n    }\n    \n    if (req.method == \"PUT\") {\n        if (!allowSave)\n            return error(res, 404, \"Saving not allowed (pass --allow-save to enable)\");\n        return save(req, res, filename);\n    }\n\n    fs.stat(filename, function(err, stat) {\n        if (err)\n            return error(res, 404, \"404 Not Found\\n\" + filename);\n\n        if (stat.isDirectory())\n            return serveDirectory(filename, uri, req, res);\n\n        var contentType = lookupMime(filename);\n        writeHead(res, 200, contentType);\n        res.setHeader(\"Content-Length\", stat.size);\n        var stream = fs.createReadStream(filename, {});\n        req.on(\"close\", stream.destroy.bind(stream));\n        stream.on(\"error\", function(err){\n            if (res._header)\n                return req.destroy();\n            writeHead(res, 500, \"text/plain\");\n            res.end();\n        });\n        stream.pipe(res);\n    });\n}).listen(port, ip);\n\nfunction writeHead(res, code, contentType) {\n    res.setHeader(\"Access-Control-Allow-Origin\", \"file://\");\n    res.setHeader(\"Access-Control-Allow-Methods\", \"PUT, GET, OPTIONS, HEAD\");\n    res.setHeader(\"Content-Type\", contentType || \"text/plain\");\n    res.statusCode = code;\n}\n\nfunction escapeHTML(str) {\n    return (\"\" + str).replace(/&/g, \"&#38;\").replace(/\"/g, \"&#34;\").replace(/'/g, \"&#39;\").replace(/</g, \"&#60;\");\n}\nfunction serveDirectory(filename, uri, req, res) {\n    var files = fs.readdirSync(filename);\n    writeHead(res, 200, \"text/html\");\n    \n    files.push(\"..\");\n    var html = files.map(function(name) {\n        try {\n            var stat = fs.statSync(filename + \"/\" + name);\n        } catch(e) {}\n        var index = name == \".\" ? 2 : name == \"..\" ? 3 : stat.isDirectory() ? 1 : 0;\n        return { name: name, index: index, size: stat.size };\n    }).filter(Boolean).sort(function(a, b) {\n        if (a.index == b.index)\n            return a.name.localeCompare(b.name);\n        return b.index - a.index;\n    }).map(function(stat) {\n        var name = stat.name;\n        if (stat.index) name += \"/\";\n        var size = \"\";\n        if (!stat.size) size = \"\";\n        else if (stat.size < 1024) size = stat.size + \"b\";\n        else if (stat.size < 1024 * 1024) size = (stat.size / 1024).toFixed(2) + \"kb\";\n        else size = (stat.size / 1024 / 1024).toFixed(2) + \"mb\";\n        return \"<tr>\"\n            + \"<td>&nbsp;&nbsp;\" + size + \"&nbsp;&nbsp;</td>\"\n            + \"<td><a href='\" + escapeHTML(name) + \"'>\" + escapeHTML(name) + \"</a></td>\"\n        + \"</tr>\";\n    }).join(\"\");\n    html = \"<table>\" + html + \"</table>\";\n\n    var baseUri = uri.replace(/\\/?$/, \"/\");\n    html = \"<base href='\"+ escapeHTML(baseUri) + \"'>\" + html;\n    res._hasBody && res.write(html);\n    res.end();\n}\n\nfunction error(res, status, message, error) {\n    console.error(error || message);\n    writeHead(res, status, \"text/plain\");\n    res.write(message);\n    res.end();\n}\n\nfunction save(req, res, filePath) {\n    var data = \"\";\n    req.on(\"data\", function(chunk) {\n        data += chunk;\n    });\n    req.on(\"error\", function() {\n        error(res, 404, \"Could't save file\");\n    });\n    req.on(\"end\", function() {\n        try {\n            fs.writeFileSync(filePath, data);\n        }\n        catch (e) {\n            return error(res, 404, \"Could't save file\", e);\n        }\n        writeHead(res, 200);\n        res.end(\"OK\");\n        console.log(\"saved \", filePath);\n    });\n}\n\nfunction getLocalIps() {\n    var os = require(\"os\");\n\n    var interfaces = os.networkInterfaces ? os.networkInterfaces() : {};\n    var addresses = [];\n    for (var k in interfaces) {\n        for (var k2 in interfaces[k]) {\n            var address = interfaces[k][k2];\n            if (address.family === \"IPv4\" && !address.internal) {\n                addresses.push(address.address);\n            }\n        }\n    }\n    return addresses;\n}\n\nconsole.log(\"http://\" + (ip == \"0.0.0.0\" ? getLocalIps()[0] : ip) + \":\" + port);\n\n"
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.59765625,
          "content": "{\n  \"compilerOptions\": {\n    \"strict\": false,\n    \"noImplicitAny\": false,\n    \"skipDefaultLibCheck\": true,\n    \"module\": \"commonjs\",\n    \"target\": \"es2019\",\n    \"allowJs\": true,\n    \"checkJs\": true,\n    \"declaration\": true,\n    \"noEmit\": true,\n  },\n  \"exclude\": [\n    \"node_modules\",\n    \"src/test\",\n    \"src/**/*_test.js\",\n    \"src/keyboard/vim.js\",\n    \"src/keyboard/emacs.js\",\n    \"src/keyboard/sublime.js\",\n    \"src/keyboard/vscode.js\",\n    \"src/mode\",\n    \"./ace-internal.d.ts\",\n    \"./ace-modes.d.ts\",\n    \"src/**/* *\"\n  ],\n  \"include\": [\n    \"./src/**/*\",\n    \"./ace.d.ts\",\n    \"./types/ace_*.d.ts\"\n  ]\n}\n"
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.js",
          "type": "blob",
          "size": 0.0751953125,
          "content": "#!/usr/bin/env node\nvar x;\nx = require('./package');\nconsole.log(x.version);\n"
        }
      ]
    }
  ]
}