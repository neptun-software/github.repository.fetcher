{
  "metadata": {
    "timestamp": 1736563345483,
    "page": 336,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "akiran/react-slick",
      "stars": 11811,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.13671875,
          "content": "{\n  \"presets\": [\n    \"@babel/preset-env\",\n    \"@babel/preset-react\"\n  ],\n  \"plugins\": [\n    \"@babel/plugin-proposal-class-properties\"\n  ]\n}\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.630859375,
          "content": "{\n  \"rules\": {\n    \"no-extra-parens\": 0,\n    \"react/jsx-uses-vars\": 1,\n    \"strict\": 0,\n    \"no-underscore-dangle\": 0,\n    \"space-infix-ops\": 0,\n    \"no-alert\": 0,\n    \"react/prop-types\": 0,\n    \"react/no-find-dom-node\": 0,\n    \"react/display-name\": 0,\n    \"no-console\": 0,\n    \"no-prototype-builtins\": 0\n  },\n  \"env\": {\n    \"node\": true,\n    \"browser\": true,\n    \"es6\": true,\n    \"jasmine\": true\n  },\n  \"parser\": \"@babel/eslint-parser\",\n  \"parserOptions\": {\n    \"requireConfigFile\": false\n  },\n  \"plugins\": [\n    \"react\",\n    \"import\"\n  ],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:import/errors\",\n    \"plugin:react/recommended\"\n  ]\n}"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.314453125,
          "content": "node_modules\nbower_components\n.sass-cache\nbuild\ndemos/*\ndemos1\nTODO.md\nnpm-debug.log\nlib\n*.sublime-*\n.idea\ndist\nyarn.lock\n.vscode\nexampleslib\nexamples/scripts/configs.json\njquery.html\ndocs/fonts/\ndocs/ajax-loader.gif\npackage-lock.json\n.DS_Store\n/test-results/\n/playwright-report/\n/blob-report/\n/playwright/.cache/\nsrc-jsx\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.1689453125,
          "content": "bower_components\n.sass-cache\nbuild\ndemos\ndemos1\nTODO.md\ntest\ntestlib\nbower.json\ngulpfile.js\nkarma.conf.js\nLICENSE\nwebpack.config.dist.js\nwebpack.config.js\nISSUE_TEMPLATE.md\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "trailingComma: none"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.041015625,
          "content": "language: node_js\n\nnode_js:\n  - \"stable\"\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.072265625,
          "content": "# Change Log\n\n## [Unreleased](https://github.com/akiran/react-slick/tree/HEAD)\n\n## 0.22.0\n\n**Release Changes**\n\n- Internal Changes\n  - converted InnerSlider from createReactClass object to ES6 class\n  - removed all the mixins, created classMethods and pure utility functions instead\n  - changed autoplay from setTimeout to setInterval\n  - added images onload handlers to update dynamically\n  - added autoplaying state for the betterment of autoplay and pause\n  - removed usage of assign or Object.assign, using object spreading instead\n  - implemented effects of touchMove props\n  - fixed transition in opposite direction in case of continuous scrolling\n  - added separate onclick event listener for images\n  - added missing classes `regular` and `slider`\n  - renamed events\n    - edgeEvent => onEdge\n    - init => onInit\n    - reInit => onReInit\n  - implemented `pauseOnDotsHover` property\n  - implemented Progressive LazyLoad property, lazyLoad is now ondemand/progressive\n  - implemented lazyloadError event\n  - implemented useTransform property\n  - implemented pauseOnFocus property\n  - added resize observer to update on slider resize\n\n- Bug Fixes\n  - dynamic track updates on image load\n  - fixed slickPause and autoPlay issues (paused slider would resume autoplay sometime)\n  - fixed trackStyle update on window resize\n  - fixed NodeList forEach problem for chrome 51 or below\n  - fixed bugs due to uncleared callback timers\n  - fixed update issues on just slider resize\n\n\n## 0.21.0\n\n**Release Changes**\n\n- Fixed issues\n  - dataset undefined error in case of swipeToSlide but finite slides\n  - slideWidth issue by transform scale\n  - variableWidth + finite alignment problems\n  - wrapper direction rtl issues\n  - added onload update handler for images\n  - fixed breaking of animation on setState\n\n- Mixins to Pure Functions\n  - getWidth, getHeight\n  - swipeDirection\n  - initialize, update\n\n- Other Changes\n  - removed sass, using pure CSS instead\n  - enforced dir='ltr' in the slider, so dir='rtl' in wrapper doesn't break the slider\n  - corrected up/down direction conventions\n  - added more tests along with snapshots\n\n## 0.20.0\n\n**Release Changes**\n\n- handled responsive breakpoint collision\n- renamed autoPlayTimer to autoplayTimer and removed it from state\n- changed es5 module.exports with es6 export default in src/index\n- implemented slider syncing with asNavFor prop\n- made all the slides untabbable\n- implemented getSlick method as in slick\n- implemented slickGetOption method\n- implemented lazyLoaded event\n- implemented reInit event\n- implemented onSwipe event and documented edgeEvent\n\n\n## 0.19.0\n\n**Release Changes**\n\nFollowing are the changes to be mentioned:\n\n- fixed slideWidth calculation approximation\n- fixed unusual scrolls in focusOnSelect mode\n- added appendDots method for customization of dots\n- modified logic for handling odd/even cases where there were unusual scrolls in opposite direction\n- implemented unslick feature properly\n- fixed variableWidth issues like blank spaces at edges, improper alignment\n- handling focus loss in case of fade=true\n- responsive lazyloading bug fixed\n- increased verticalswiping resistance from 4 to 10\n\n\n## 0.18.0\n\n**Major Changes:**\n\n- `centerPadding` prop now accepts % value as well\n- Fixed dots count in certain cases, where it was wrong\n- Fixed fade property mess-up on click\n- Fixed invisibility issue when fade & vertical are true\n- Modified logic for updating lazyLoadedList, earlier there were some whitespaces at ends, now they're gone\n- Fixed getTrackLeft issue for slideCount=1\n\n\n## 0.17.1\n\n**Major Changes**\n\n* Enforced some settings in specific configurations like:\n  - `slidesToScroll = 1` *when fade is true*\n  - `slidesToScroll = 1` *when centerMode is true*\n  - `slidesToShow = 1` *when fade is true*\n\n* Changed the number of clones (preclones and postclones), that fixed couple of issues like blank spaces after last slide and/or before first slide which occurred in several cases.\n\n\n**Minor Changes**\n\n- Rich amount of tests and test-utilities added\n- Additional documentation comments added\n- Refactored small snippets for betterment\n- Fixed several lazyload and centerMode bugs\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.734375,
          "content": "# Contribute\n\n## Introduction\n\nFirst, thank you for considering contributing to react-slick! It's people like you that make the open source community such a great community! ðŸ˜Š\n\nWe welcome any type of contribution, not only code. You can help with\n- **QA**: file bug reports, the more details you can give the better (e.g. screenshots with the console open)\n- **Marketing**: writing blog posts, howto's, printing stickers, ...\n- **Community**: presenting the project at meetups, organizing a dedicated meetup for the local community, ...\n- **Code**: take a look at the [open issues](https://github.com/akiran/react-slick/issues). Even if you can't write code, commenting on them, showing that you care about a given issue matters. It helps us triage them. To get started you can also [sign up to triage react-slick issues on CodeTriage](https://www.codetriage.com/akiran/react-slick).\n- **Money**: we welcome financial contributions in full transparency on our [open collective](https://opencollective.com/react-slick).\n\n## Your First Contribution\n\nWorking on your first Pull Request? You can learn how from this *free* series, [How to Contribute to an Open Source Project on GitHub](https://app.egghead.io/playlists/how-to-contribute-to-an-open-source-project-on-github).\n\n## Submitting code\n\nAny code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.\n\n## Code review process\n\nThe bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge.\nIt is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?\n\n## Financial contributions\n\nWe also welcome financial contributions in full transparency on our [open collective](https://opencollective.com/react-slick).\nAnyone can file an expense. If the expense makes sense for the development of the community, it will be \"merged\" in the ledger of our open collective by the core contributors and the person who filed the expense will be reimbursed.\n\n## Questions\n\nIf you have any questions, create an [issue](https://github.com/akiran/react-slick/issues) (protip: do a quick search first to see if someone else didn't ask the same question before!).\nYou can also reach us at hello@react-slick.opencollective.com.\n\n## Credits\n\n### Contributors\n\nThank you to all the people who have already contributed to react-slick!\n<a href=\"https://github.com/akiran/react-slick/graphs/contributors\"><img src=\"https://opencollective.com/react-slick/contributors.svg?width=890\" /></a>\n\n\n### Backers\n\nThank you to all our backers! [[Become a backer](https://opencollective.com/react-slick#backer)]\n\n<a href=\"https://opencollective.com/react-slick#backers\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/backers.svg?width=890\"></a>\n\n\n### Sponsors\n\nThank you to all our sponsors! (please ask your company to also support this open source project by [becoming a sponsor](https://opencollective.com/react-slick#sponsor))\n\n<a href=\"https://opencollective.com/react-slick/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/9/avatar.svg\"></a>\n\n<!-- This `CONTRIBUTING.md` is based on @nayafia's template https://github.com/nayafia/contributing-template -->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Kiran Abburi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.19921875,
          "content": "### react-slick\n\n[![Backers on Open Collective](https://opencollective.com/react-slick/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/react-slick/sponsors/badge.svg)](#sponsors)\n\n##### Carousel component built with React. It is a react port of [slick carousel](http://kenwheeler.github.io/slick/)\n\n## [Documentation](http://react-slick.neostack.com)\n\n### Installation\n\n**npm**\n\n```bash\nnpm install react-slick --save\n```\n\n**yarn**\n\n```bash\nyarn add react-slick\n```\n\n**Also install slick-carousel for css and font**\n\n```bash\nnpm install slick-carousel\n\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n```\n\nor add cdn link in your html\n\n```html\n<link\n  rel=\"stylesheet\"\n  type=\"text/css\"\n  charset=\"UTF-8\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css\"\n/>\n<link\n  rel=\"stylesheet\"\n  type=\"text/css\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css\"\n/>\n```\n\n### [PlayGround](https://stackblitz.com/edit/vitejs-vite-ownrun?file=src%2FImageSlider.jsx)\n\n### Example\n\n```js\nimport React from \"react\";\nimport Slider from \"react-slick\";\n\nexport default function SimpleSlider() {\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  return (\n    <Slider {...settings}>\n      <div>\n        <h3>1</h3>\n      </div>\n      <div>\n        <h3>2</h3>\n      </div>\n      <div>\n        <h3>3</h3>\n      </div>\n      <div>\n        <h3>4</h3>\n      </div>\n      <div>\n        <h3>5</h3>\n      </div>\n      <div>\n        <h3>6</h3>\n      </div>\n    </Slider>\n  );\n}\n```\n\n### Props\n\nFor all available props, go [here](https://react-slick.neostack.com/docs/api/).\n\n### Methods\n\nFor all available methods, go [here](https://react-slick.neostack.com/docs/api#methods)\n\n### Development\n\nWant to run demos locally\n\n```bash\ngit clone https://github.com/akiran/react-slick\ncd react-slick\nnpm install\nnpm start\nopen http://localhost:8080\n```\n\n## Community\n\nJoin our [discord channel](https://discord.gg/z7stRE4Cyb) to discuss react-slick bugs and ask for help\n\n## Contributing\n\nPlease see the [contributing guidelines](./CONTRIBUTING.md)\n"
        },
        {
          "name": "__tests__",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 3.3525390625,
          "content": "\"use strict\";\n\nvar gulp = require(\"gulp\");\nvar del = require(\"del\");\nvar rename = require(\"gulp-rename\");\nvar webpack = require(\"webpack\");\nvar WebpackDevServer = require(\"webpack-dev-server\");\nvar assign = require(\"object-assign\");\nvar opn = require(\"opn\");\n\nvar UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\n\nconst DEV_PORT = process.env.DEV_PORT || 8080;\n\ngulp.task(\"clean\", function() {\n  return del([\"./build/*\"]);\n});\n\ngulp.task(\"copy\", function() {\n  gulp.src(\"./docs/index.html\").pipe(gulp.dest(\"./build\"));\n  gulp.src(\"./docs/docs.css\").pipe(gulp.dest(\"./build\"));\n  gulp.src(\"./docs/slick.css\").pipe(gulp.dest(\"./build\"));\n  gulp.src(\"./docs/slick-theme.css\").pipe(gulp.dest(\"./build\"));\n  gulp.src(\"./docs/img/**/*\").pipe(gulp.dest(\"./build/img\"));\n  gulp\n    .src(\"./node_modules/slick-carousel/slick/fonts/*\")\n    .pipe(gulp.dest(\"./build/fonts\"));\n  return gulp\n    .src(\"./node_modules/slick-carousel/slick/ajax-loader.gif\")\n    .pipe(gulp.dest(\"./build\"));\n});\n\ngulp.task(\"prepare-playwright\", function() {\n  // Copy files to src-jsx directory with jsx extension\n  return gulp\n    .src(\"./src/**/*.js\")\n    .pipe(rename({ extname: \".jsx\" }))\n    .pipe(gulp.dest(\"./src-jsx\"));\n});\n\ngulp.task(\n  \"watch\",\n  gulp.series([\"copy\"], function(done) {\n    gulp.watch([\"./docs/index.html\"], gulp.parallel([\"copy\"]));\n    gulp.watch([\"./docs/docs.css\"], gulp.parallel([\"copy\"]));\n    gulp.watch([\"./docs/slick.css\"], gulp.parallel([\"copy\"]));\n    gulp.watch([\"./docs/slick-theme.css\"], gulp.parallel([\"copy\"]));\n    done();\n  })\n);\n\ngulp.task(\n  \"server\",\n  gulp.series([\"watch\", \"copy\"], function() {\n    console.log(\"Start\");\n    var myConfig = require(\"./webpack.config\");\n    if (process.env.SINGLE_DEMO) {\n      myConfig.entry = {\n        \"docs.js\": \"./docs/single-demo.js\"\n      };\n    }\n    myConfig.plugins = myConfig.plugins.concat(\n      new webpack.DefinePlugin({\n        \"process.env\": {\n          NODE_ENV: JSON.stringify(\"dev_docs\")\n        }\n      })\n    );\n\n    new WebpackDevServer(webpack(myConfig), {\n      contentBase: \"./build\",\n      hot: true,\n      stats: {\n        colors: true\n      }\n    }).listen(DEV_PORT, \"0.0.0.0\", function(err, result) {\n      if (err) {\n        console.log(err);\n      } else {\n        const server_url = `http://0.0.0.0:${DEV_PORT}`;\n        console.log(`> Dev Server started at ${server_url}`);\n        opn(server_url);\n      }\n    });\n  })\n);\n\n// gulp tasks for building dist files\ngulp.task(\"dist-clean\", function() {\n  return del([\"./dist/*\"]);\n});\n\nvar distConfig = require(\"./webpack.config.dist.js\");\ngulp.task(\"dist-unmin\", function(cb) {\n  var unminConfig = assign({}, distConfig);\n  unminConfig.output.filename = \"react-slick.js\";\n  unminConfig.mode = \"none\";\n  return webpack(unminConfig, function(err, stat) {\n    console.error(err);\n    cb();\n  });\n});\n\ngulp.task(\"dist-min\", function(cb) {\n  var minConfig = assign({}, distConfig);\n  minConfig.output.filename = \"react-slick.min.js\";\n  minConfig.plugins = minConfig.plugins.concat(\n    new UglifyJsPlugin({\n      cache: true,\n      parallel: true,\n      sourceMap: true,\n      uglifyOptions: {\n        warnings: false\n      }\n    })\n  );\n  return webpack(minConfig, function(err, stat) {\n    console.error(err);\n    cb();\n  });\n});\n\ngulp.task(\n  \"dist\",\n  gulp.series([\"dist-clean\", \"dist-unmin\", \"dist-min\"], function(done) {\n    done();\n  })\n);\n\ngulp.task(\"default\", gulp.series([\"watch\", \"server\"]));\n"
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 0.162109375,
          "content": "module.exports = {\n  testEnvironment: \"jsdom\",\n  setupFilesAfterEnv: [\"<rootDir>/test-setup.js\"],\n  testPathIgnorePatterns: [\"/node_modules/\", \"playwright-tests\"]\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.75,
          "content": "{\n  \"name\": \"react-slick\",\n  \"version\": \"0.30.3\",\n  \"description\": \" React port of slick carousel\",\n  \"main\": \"./lib\",\n  \"files\": [\n    \"dist\",\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"start\": \"NODE_OPTIONS=--openssl-legacy-provider gulp server\",\n    \"demo\": \"SINGLE_DEMO=true DEV_PORT=8000 NODE_OPTIONS=--openssl-legacy-provider gulp server\",\n    \"build-dev\": \"gulp clean && gulp copy && webpack\",\n    \"lib\": \"babel ./src --out-dir ./lib\",\n    \"build\": \"NODE_OPTIONS=--openssl-legacy-provider npm run lib && NODE_OPTIONS=--openssl-legacy-provider gulp dist\",\n    \"prepublishOnly\": \"npm run build\",\n    \"lint\": \"eslint src\",\n    \"gen\": \"node docs/scripts/generateExampleConfigs.js && node docs/scripts/generateExamples.js && xdg-open docs/jquery.html\",\n    \"precommit\": \"lint-staged\",\n    \"test\": \"jest\",\n    \"test-watch\": \"jest --watch\",\n    \"clear-jest\": \"jest --clearCache\",\n    \"test-ct\": \"npm run prepare-playwright && playwright test -c playwright-ct.config.js\",\n    \"test-clear\": \"jest --clearCache && rm -rf ./playwright/.cache\",\n    \"prepare-playwright\": \"rm -rf ./src-jsx && gulp prepare-playwright\"\n  },\n  \"author\": \"Kiran Abburi\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/akiran/react-slick.git\"\n  },\n  \"keywords\": [\n    \"slick\",\n    \"carousel\",\n    \"Image slider\",\n    \"orbit\",\n    \"slider\",\n    \"react-component\"\n  ],\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.0.0\",\n    \"@babel/core\": \"^7.16.0\",\n    \"@babel/eslint-parser\": \"^7.16.3\",\n    \"@babel/plugin-proposal-class-properties\": \"^7.1.0\",\n    \"@babel/polyfill\": \"^7.0.0\",\n    \"@babel/preset-env\": \"^7.1.0\",\n    \"@babel/preset-react\": \"^7.0.0\",\n    \"@playwright/experimental-ct-react\": \"^1.49.1\",\n    \"@testing-library/jest-dom\": \"^5.16.4\",\n    \"@testing-library/react\": \"^16.1.0\",\n    \"@testing-library/user-event\": \"^14.3.0\",\n    \"@types/node\": \"^22.10.2\",\n    \"autoprefixer\": \"^7.1.2\",\n    \"babel-core\": \"^7.0.0-bridge.0\",\n    \"babel-jest\": \"^24.8.0\",\n    \"babel-loader\": \"^8.0.4\",\n    \"babel-preset-airbnb\": \"^2.1.1\",\n    \"css-loader\": \"^2.1.1\",\n    \"deepmerge\": \"^1.1.0\",\n    \"del\": \"^2.2.2\",\n    \"es5-shim\": \"^4.5.9\",\n    \"eslint\": \"^8.4.1\",\n    \"eslint-plugin-import\": \"^2.25.3\",\n    \"eslint-plugin-react\": \"^7.27.1\",\n    \"express\": \"^4.14.0\",\n    \"foundation-apps\": \"^1.2.0\",\n    \"gulp\": \"^4.0.0\",\n    \"gulp-rename\": \"^2.0.0\",\n    \"husky\": \"^0.14.3\",\n    \"jest\": \"^28.1.3\",\n    \"jest-environment-jsdom\": \"^28.1.3\",\n    \"js-beautify\": \"^1.7.5\",\n    \"json-loader\": \"^0.5.4\",\n    \"lint-staged\": \"^12.1.2\",\n    \"opn\": \"^5.4.0\",\n    \"postcss-loader\": \"^1.3.3\",\n    \"prettier\": \"^1.14.3\",\n    \"raf\": \"^3.4.0\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n    \"regenerator-runtime\": \"^0.14.1\",\n    \"sinon\": \"^2.1.0\",\n    \"slick-carousel\": \"^1.8.1\",\n    \"style-loader\": \"^0.16.1\",\n    \"uglifyjs-webpack-plugin\": \"^2.0.1\",\n    \"webpack\": \"^4.21.0\",\n    \"webpack-cli\": \"^3.1.2\",\n    \"webpack-dev-server\": \"^3.1.9\",\n    \"why-did-you-update\": \"^0.1.1\"\n  },\n  \"dependencies\": {\n    \"classnames\": \"^2.2.5\",\n    \"json2mq\": \"^0.2.0\",\n    \"lodash.debounce\": \"^4.0.8\",\n    \"resize-observer-polyfill\": \"^1.5.0\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^0.14.0 || ^15.0.1 || ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n    \"react-dom\": \"^0.14.0 || ^15.0.1 || ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n  },\n  \"lint-staged\": {\n    \"*.{js,json,md}\": [\n      \"prettier --write\",\n      \"git add\"\n    ]\n  },\n  \"npmName\": \"react-slick\",\n  \"npmFileMap\": [\n    {\n      \"basePath\": \"/dist/\",\n      \"files\": [\n        \"*.js\"\n      ]\n    }\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/akiran/react-slick/issues\"\n  },\n  \"homepage\": \"https://react-slick.neostack.com\",\n  \"collective\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/react-slick\",\n    \"logo\": \"https://opencollective.com/opencollective/logo.txt\"\n  }\n}\n"
        },
        {
          "name": "playwright-ct.config.js",
          "type": "blob",
          "size": 1.5107421875,
          "content": "// @ts-check\nconst { defineConfig, devices } = require(\"@playwright/experimental-ct-react\");\n/**\n * @see https://playwright.dev/docs/test-configuration\n */\nmodule.exports = defineConfig({\n  testDir: \"./playwright-tests\",\n  // testDir: \"./tests-out\",\n  /* The base directory, relative to the config file, for snapshot files created with toMatchSnapshot and toHaveScreenshot. */\n  snapshotDir: \"./__snapshots__\",\n  /* Maximum time one test can run for. */\n  timeout: 10 * 1000,\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: \"html\",\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: \"on-first-retry\",\n\n    /* Port to use for Playwright component endpoint. */\n    ctPort: 3100\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    {\n      name: \"chromium\",\n      use: { ...devices[\"Desktop Chrome\"] }\n    }\n    // {\n    //   name: \"firefox\",\n    //   use: { ...devices[\"Desktop Firefox\"] }\n    // },\n    // {\n    //   name: \"webkit\",\n    //   use: { ...devices[\"Desktop Safari\"] }\n    // }\n  ]\n});\n"
        },
        {
          "name": "playwright-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "playwright",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-setup.js",
          "type": "blob",
          "size": 0.337890625,
          "content": "import \"@testing-library/jest-dom/extend-expect\";\nimport \"regenerator-runtime/runtime\";\n\n//Fix for \"matchMedia not present, legacy browsers require a polyfill jest\" error\nwindow.matchMedia =\n  window.matchMedia ||\n  function() {\n    return {\n      matches: false,\n      addListener: function() {},\n      removeListener: function() {}\n    };\n  };\n"
        },
        {
          "name": "test-utils.js",
          "type": "blob",
          "size": 2.67578125,
          "content": "import { render, fireEvent, waitFor, screen } from \"@testing-library/react\";\n\nexport function getSlidesCount(container) {\n  return container.getElementsByClassName(\"slick-slide\").length;\n}\n\nexport function getSlides(container) {\n  return container.getElementsByClassName(\"slick-slide\");\n}\n\nexport function getClonesCount(container) {\n  return container.getElementsByClassName(\"slick-cloned\").length;\n}\n\nexport function getActiveSlidesCount(container) {\n  return container.querySelectorAll(\".slick-slide.slick-active\").length;\n}\n\nexport function getCurrentSlide(container) {\n  return container.querySelector(\".slick-current\");\n}\n\nexport function getCurrentSlideContent(container) {\n  const slide = container.querySelector(\".slick-current\");\n  return slide.textContent;\n}\n\nexport function getButtons(container) {\n  return container.querySelectorAll(\".slick-dots button\");\n}\n\nexport function getButtonsListItem(container) {\n  return container.querySelectorAll(\".slick-dots\")[0].children;\n}\nexport function getButtonsLength(container) {\n  return container.querySelectorAll(\".slick-dots\")[0].children.length;\n}\nexport function hasClass(element, classname) {\n  if (element.className != undefined) {\n    return element.classList.contains(classname);\n  }\n  return false;\n}\nexport function getActiveButton(container) {\n  return Array.from(\n    container.querySelectorAll(\".slick-dots .slick-active button\")\n  ).map(e => e.textContent);\n}\n// export function getCurrentSlideIdState(container) {\n//   return parseInt(getCurrentSlide(container).getAttribute(\"data-index\")) + 1;\n// }\n// export function activeSlides(container) {\n//   return container.querySelectorAll(\".slick-slide.slick-active\");\n// }\nexport function getActiveSlide(container) {\n  return container.querySelector(\".slick-slide.slick-active\");\n}\n\nexport function getActiveSlides(container) {\n  return container.querySelectorAll(\".slick-slide.slick-active\");\n}\n\nexport function getActiveSlidesText(container) {\n  const slides = getActiveSlides(container);\n  return Array.from(slides).map(e => e.textContent);\n}\n\nexport function clickNext(container) {\n  fireEvent(\n    container.getElementsByClassName(\"slick-next\")[0],\n    new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true\n    })\n  );\n}\n\nexport function clickPrevious(container) {\n  fireEvent(\n    container.getElementsByClassName(\"slick-prev\")[0],\n    new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true\n    })\n  );\n}\n\nexport function hasDots(container) {\n  return Boolean(container.querySelectorAll(\".slick-dots\")[0]);\n}\n\nexport function hasArrows(container) {\n  return Boolean(\n    container.getElementsByClassName(\"slick-next\")[0] ||\n      container.getElementsByClassName(\"slick-prev\")[0]\n  );\n}\n"
        },
        {
          "name": "webpack.config.dist.js",
          "type": "blob",
          "size": 0.8193359375,
          "content": "var webpack = require(\"webpack\");\nvar path = require(\"path\");\n\nmodule.exports = {\n  mode: \"production\",\n\n  entry: \"./src/index\",\n\n  output: {\n    library: \"Slider\",\n    libraryTarget: \"umd\",\n    path: path.join(__dirname, \"dist\")\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.js/,\n        exclude: /(node_modules)/,\n        use: {\n          loader: \"babel-loader\"\n        }\n      }\n    ]\n  },\n\n  resolve: {\n    extensions: [\".js\", \".jsx\"]\n  },\n\n  externals: {\n    react: {\n      root: \"React\",\n      commonjs2: \"react\",\n      commonjs: \"react\",\n      amd: \"react\"\n    },\n    \"react-dom\": {\n      root: \"ReactDOM\",\n      commonjs2: \"react-dom\",\n      commonjs: \"react-dom\",\n      amd: \"react-dom\"\n    }\n  },\n\n  node: {\n    Buffer: false\n  },\n\n  devtool: \"source-map\",\n\n  performance: {\n    hints: \"warning\"\n  },\n\n  plugins: []\n};\n"
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 0.7626953125,
          "content": "var webpack = require(\"webpack\");\nvar path = require(\"path\");\n\nmodule.exports = {\n  mode: \"production\",\n  devtool: \"source-map\",\n  entry: {\n    \"docs.js\": \"./docs/index.js\"\n  },\n  output: {\n    path: path.join(__dirname, \"build\"),\n    filename: \"[name]\"\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?/,\n        exclude: /(node_modules)/,\n        use: {\n          loader: \"babel-loader\"\n        }\n      },\n      {\n        test: /\\.md$/,\n        loader: \"html!markdown\"\n      }\n    ]\n  },\n  resolve: {\n    extensions: [\".js\", \".jsx\"],\n    alias: {\n      \"react-slick\": path.resolve(__dirname, \"src/index.js\")\n    }\n  },\n  plugins: [new webpack.IgnorePlugin(/vertx/)],\n  devServer: {\n    contentBase: path.join(__dirname, \"./build\"),\n    port: 8080,\n    hot: true\n  }\n};\n"
        }
      ]
    }
  ]
}