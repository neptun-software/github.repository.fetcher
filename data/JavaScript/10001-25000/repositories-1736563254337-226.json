{
  "metadata": {
    "timestamp": 1736563254337,
    "page": 226,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shelljs/shelljs",
      "stars": 14287,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2138671875,
          "content": "# editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{md,markdown}]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0693359375,
          "content": ".nyc_output/\ncoverage/\nmake.js\nnode_modules/\ntest/resources/\ntest/tmp/\n"
        },
        {
          "name": ".eslintrc.json",
          "type": "blob",
          "size": 1.0791015625,
          "content": "{\n  \"env\": {\n    \"node\": true\n  },\n  \"extends\": \"airbnb-base/legacy\",\n  \"rules\": {\n    \"comma-dangle\": [\"error\", \"always-multiline\"],\n    \"consistent-return\": \"off\",\n    \"curly\": [\"error\", \"multi-line\"],\n    \"func-names\": \"off\",\n    \"global-require\": \"off\",\n    \"indent\": \"off\",\n    \"max-len\": \"off\",\n    \"newline-per-chained-call\": \"off\",\n    \"no-bitwise\": \"off\",\n    \"no-console\": \"off\",\n    \"no-continue\": \"off\",\n    \"no-else-return\": \"off\",\n    \"no-empty\": \"off\",\n    \"no-mixed-operators\": \"off\",\n    \"no-multi-spaces\": \"off\",\n    \"no-multiple-empty-lines\": [\"error\", { \"max\": 2, \"maxBOF\": 0, \"maxEOF\": 0 } ],\n    \"no-param-reassign\": \"off\",\n    \"no-plusplus\": \"off\",\n    \"no-prototype-builtins\": \"off\",\n    \"no-throw-literal\": \"off\",\n    \"no-underscore-dangle\": \"off\",\n    \"no-use-before-define\": \"off\",\n    \"operator-linebreak\": \"off\",\n    \"quote-props\": \"off\",\n    \"spaced-comment\": [\"error\", \"always\", { \"markers\": [\"@\", \"@include\"], \"exceptions\": [\"@\", \"@commands\"] }],\n    \"vars-on-top\": \"off\",\n    \"new-cap\": [\"error\", {\n      \"capIsNewExceptions\": [\n        \"ShellString\"\n      ]}\n    ]\n  }\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.013671875,
          "content": "* text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16015625,
          "content": "# Project\nnpm-debug.log*\nnode_modules\ntmp\ncoverage/\n.nyc_output/\n\n# Linux\n*~\n\n# JetBrains\n.idea\n\n# Vim\n## swap\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n\n# OS X\n.DS_Store\n\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.150390625,
          "content": "# We can't use lockfiles because npm@5 and npm@6 disagree about the syntax (and\n# will modify the lockfile when we run `npm install`).\npackage-lock=false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 83.171875,
          "content": "# Change Log\n\n## [Unreleased](https://github.com/shelljs/shelljs/tree/HEAD)\n\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.8.3...HEAD)\n\n**Closed issues:**\n\n- find returns empty array even though directory has files [\\#922](https://github.com/shelljs/shelljs/issues/922)\n- exec\\(\\) should support node v10 \\(maxbuffer change\\) [\\#915](https://github.com/shelljs/shelljs/issues/915)\n- grep exit status and extra newlines [\\#900](https://github.com/shelljs/shelljs/issues/900)\n- Travis CI currently broken [\\#893](https://github.com/shelljs/shelljs/issues/893)\n- Drop node v4 support [\\#873](https://github.com/shelljs/shelljs/issues/873)\n- cp -Ru respects the -R but not the -u [\\#808](https://github.com/shelljs/shelljs/issues/808)\n\n**Merged pull requests:**\n\n- feat\\(options\\): initial support for long options [\\#926](https://github.com/shelljs/shelljs/pull/926) ([nfischer](https://github.com/nfischer))\n- test\\(touch\\): add coverage for -d option [\\#925](https://github.com/shelljs/shelljs/pull/925) ([nfischer](https://github.com/nfischer))\n- chore\\(node\\): add v10 and v11 to CI [\\#921](https://github.com/shelljs/shelljs/pull/921) ([nfischer](https://github.com/nfischer))\n- chore\\(test\\): no coverage by default [\\#920](https://github.com/shelljs/shelljs/pull/920) ([nfischer](https://github.com/nfischer))\n- fix\\(exec\\): consistent error message for maxBuffer [\\#919](https://github.com/shelljs/shelljs/pull/919) ([nfischer](https://github.com/nfischer))\n- chore\\(node\\): drop node v4 and v5 [\\#917](https://github.com/shelljs/shelljs/pull/917) ([nfischer](https://github.com/nfischer))\n- chore: script to bump supported node versions [\\#913](https://github.com/shelljs/shelljs/pull/913) ([nfischer](https://github.com/nfischer))\n- chore\\(npm\\): remove lockfile [\\#911](https://github.com/shelljs/shelljs/pull/911) ([nfischer](https://github.com/nfischer))\n- ci: change language to node\\_js and remove obsolete scripts [\\#910](https://github.com/shelljs/shelljs/pull/910) ([DanielRuf](https://github.com/DanielRuf))\n- chore: remove gitter integration [\\#907](https://github.com/shelljs/shelljs/pull/907) ([nfischer](https://github.com/nfischer))\n- fix: Exit 1 with empty string if no match [\\#901](https://github.com/shelljs/shelljs/pull/901) ([wyardley](https://github.com/wyardley))\n- feat\\(cp\\): support update flag when recursing [\\#889](https://github.com/shelljs/shelljs/pull/889) ([joshi-sh](https://github.com/joshi-sh))\n\n## [v0.8.3](https://github.com/shelljs/shelljs/tree/v0.8.3) (2018-11-13)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.8.2...v0.8.3)\n\n**Closed issues:**\n\n- Shelljs print stderr to console even if exec-only \"silent\" is true [\\#905](https://github.com/shelljs/shelljs/issues/905)\n- refactor: remove common.state.tempDir [\\#902](https://github.com/shelljs/shelljs/issues/902)\n- Can't suppress stdout for echo [\\#899](https://github.com/shelljs/shelljs/issues/899)\n- exec\\(\\) doesn't apply the arguments correctly [\\#895](https://github.com/shelljs/shelljs/issues/895)\n- shell.exec\\('npm pack'\\) painfully slow [\\#885](https://github.com/shelljs/shelljs/issues/885)\n- shelljs.exec cannot find app.asar/node\\_modules/shelljs/src/exec-child.js [\\#881](https://github.com/shelljs/shelljs/issues/881)\n- test infra: mocks and skipOnWin conflict [\\#862](https://github.com/shelljs/shelljs/issues/862)\n- Support for shell function completion on IDE [\\#859](https://github.com/shelljs/shelljs/issues/859)\n- echo command shows options in stdout [\\#855](https://github.com/shelljs/shelljs/issues/855)\n- silent does not always work [\\#851](https://github.com/shelljs/shelljs/issues/851)\n- Appveyor installs the latest npm, instead of the latest compatible npm [\\#844](https://github.com/shelljs/shelljs/issues/844)\n- Force symbolic link \\(ln -sf\\) does not overwrite/recreate existing destination [\\#830](https://github.com/shelljs/shelljs/issues/830)\n- inconsistent result when trying to echo to a file [\\#798](https://github.com/shelljs/shelljs/issues/798)\n- Prevent require\\(\\)ing executable-only files [\\#789](https://github.com/shelljs/shelljs/issues/789)\n- Cannot set property to of \\[object String\\] which has only a getter [\\#752](https://github.com/shelljs/shelljs/issues/752)\n- which\\(\\) should check executability before returning a value [\\#657](https://github.com/shelljs/shelljs/issues/657)\n- Bad encoding experience [\\#456](https://github.com/shelljs/shelljs/issues/456)\n- phpcs very slow [\\#440](https://github.com/shelljs/shelljs/issues/440)\n- Error shown when triggering a sigint during shelljs.exec if process.on sigint is defined [\\#254](https://github.com/shelljs/shelljs/issues/254)\n- `.to\\(file\\)` does not mute STDIO output [\\#146](https://github.com/shelljs/shelljs/issues/146)\n- Escaping shell arguments to exec\\(\\) [\\#143](https://github.com/shelljs/shelljs/issues/143)\n- Allow multiple string arguments for exec\\(\\) [\\#103](https://github.com/shelljs/shelljs/issues/103)\n- cp does not recursively copy from readonly location  [\\#98](https://github.com/shelljs/shelljs/issues/98)\n- Handling permissions errors on file I/O [\\#64](https://github.com/shelljs/shelljs/issues/64)\n\n**Merged pull requests:**\n\n- Add test case for sed on empty file [\\#904](https://github.com/shelljs/shelljs/pull/904) ([wyardley](https://github.com/wyardley))\n- refactor: don't expose tempdir in common.state [\\#903](https://github.com/shelljs/shelljs/pull/903) ([nfischer](https://github.com/nfischer))\n- chore\\(ci\\): fix codecov on travis [\\#897](https://github.com/shelljs/shelljs/pull/897) ([nfischer](https://github.com/nfischer))\n- chore\\(npm\\): add ci-or-install script [\\#896](https://github.com/shelljs/shelljs/pull/896) ([nfischer](https://github.com/nfischer))\n- Fix silent exec [\\#892](https://github.com/shelljs/shelljs/pull/892) ([nfischer](https://github.com/nfischer))\n- chore\\(appveyor\\): run entire test matrix [\\#886](https://github.com/shelljs/shelljs/pull/886) ([nfischer](https://github.com/nfischer))\n- docs: remove gitter badge [\\#880](https://github.com/shelljs/shelljs/pull/880) ([nfischer](https://github.com/nfischer))\n- grep includes the i flag [\\#876](https://github.com/shelljs/shelljs/pull/876) ([ppsleep](https://github.com/ppsleep))\n- Fix\\(which\\): match only executable files \\(\\#657\\) [\\#874](https://github.com/shelljs/shelljs/pull/874) ([termosa](https://github.com/termosa))\n- chore: rename some tests [\\#871](https://github.com/shelljs/shelljs/pull/871) ([nfischer](https://github.com/nfischer))\n- Fix cp from readonly source [\\#870](https://github.com/shelljs/shelljs/pull/870) ([nfischer](https://github.com/nfischer))\n- chore: bump dev dependencies and add package-lock [\\#864](https://github.com/shelljs/shelljs/pull/864) ([nfischer](https://github.com/nfischer))\n- fix\\(mocks\\): fix conflict between mocks and skip [\\#863](https://github.com/shelljs/shelljs/pull/863) ([nfischer](https://github.com/nfischer))\n- chore: output npm version in travis [\\#850](https://github.com/shelljs/shelljs/pull/850) ([nfischer](https://github.com/nfischer))\n- Prevent require-ing bin/shjs [\\#848](https://github.com/shelljs/shelljs/pull/848) ([freitagbr](https://github.com/freitagbr))\n- chore\\(appveyor\\): do not use latest npm [\\#847](https://github.com/shelljs/shelljs/pull/847) ([nfischer](https://github.com/nfischer))\n- chore: update shelljs-release version [\\#846](https://github.com/shelljs/shelljs/pull/846) ([nfischer](https://github.com/nfischer))\n\n## [v0.8.2](https://github.com/shelljs/shelljs/tree/v0.8.2) (2018-05-08)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.8.1...v0.8.2)\n\n**Closed issues:**\n\n- High severity vulnerability in shelljs 0.8.1 [\\#842](https://github.com/shelljs/shelljs/issues/842)\n- Add test for ls\\(\\) on a symlink to a directory [\\#795](https://github.com/shelljs/shelljs/issues/795)\n- Harden shell.exec by writing the child process in a source file [\\#782](https://github.com/shelljs/shelljs/issues/782)\n- shell.exec\\(\\) doesn't respond correctly to config.fatal = true [\\#735](https://github.com/shelljs/shelljs/issues/735)\n- Merge 'exec: internal error' with ShellJSInternalError [\\#734](https://github.com/shelljs/shelljs/issues/734)\n- exec returning null from command [\\#724](https://github.com/shelljs/shelljs/issues/724)\n- Only Get Stderr from Exec [\\#371](https://github.com/shelljs/shelljs/issues/371)\n- Execute child.stdout.on before child.on\\(\"exit\"\\)  [\\#224](https://github.com/shelljs/shelljs/issues/224)\n\n**Merged pull requests:**\n\n- Workaround codecov bug of miscalculation of coverage \\(\\#795\\) [\\#838](https://github.com/shelljs/shelljs/pull/838) ([dwi2](https://github.com/dwi2))\n- Update doc comments and regenerate README.md. [\\#825](https://github.com/shelljs/shelljs/pull/825) ([Zearin](https://github.com/Zearin))\n- chore: update contributing guidelines [\\#817](https://github.com/shelljs/shelljs/pull/817) ([nfischer](https://github.com/nfischer))\n- chore\\(lint\\): don't allow excess trailing newlines [\\#816](https://github.com/shelljs/shelljs/pull/816) ([nfischer](https://github.com/nfischer))\n- Remove separate \"internal error\" from exec [\\#802](https://github.com/shelljs/shelljs/pull/802) ([freitagbr](https://github.com/freitagbr))\n\n## [v0.8.1](https://github.com/shelljs/shelljs/tree/v0.8.1) (2018-01-20)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.8.0...v0.8.1)\n\n**Closed issues:**\n\n- Exec failing with internal error when piping large output [\\#818](https://github.com/shelljs/shelljs/issues/818)\n\n**Merged pull requests:**\n\n- Revert \"refactor\\(exec\\): remove paramsFile \\(\\#807\\)\" [\\#819](https://github.com/shelljs/shelljs/pull/819) ([nfischer](https://github.com/nfischer))\n\n## [v0.8.0](https://github.com/shelljs/shelljs/tree/v0.8.0) (2018-01-12)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.8...v0.8.0)\n\n**Closed issues:**\n\n- Snyk vulnerability DB reporting command injection vulnerability in ShellJS [\\#810](https://github.com/shelljs/shelljs/issues/810)\n- chore: upgrade nyc [\\#803](https://github.com/shelljs/shelljs/issues/803)\n- Update CI to use Node v9 [\\#799](https://github.com/shelljs/shelljs/issues/799)\n- Link to FAQ wiki section in our issue template [\\#787](https://github.com/shelljs/shelljs/issues/787)\n- Is it possible to get a js library\\(file\\) for ShellJS [\\#776](https://github.com/shelljs/shelljs/issues/776)\n- 48, [\\#774](https://github.com/shelljs/shelljs/issues/774)\n- 47 [\\#773](https://github.com/shelljs/shelljs/issues/773)\n- Exec function calls JSON.stringify on command [\\#772](https://github.com/shelljs/shelljs/issues/772)\n- getting different result from terminal and with shelljs  [\\#769](https://github.com/shelljs/shelljs/issues/769)\n- test\\(\\) does not support -w and -x options [\\#768](https://github.com/shelljs/shelljs/issues/768)\n- Snyk \"high severity\" issue [\\#766](https://github.com/shelljs/shelljs/issues/766)\n- Snyk \"high security [\\#765](https://github.com/shelljs/shelljs/issues/765)\n- ShellJS doesn't respect NPM Registry being set outside of it [\\#761](https://github.com/shelljs/shelljs/issues/761)\n- Run second shell script [\\#756](https://github.com/shelljs/shelljs/issues/756)\n- shelljs seems NOT compatible with nexe under CentOS 6.5 [\\#754](https://github.com/shelljs/shelljs/issues/754)\n- Feature request: pushd/popd -q option [\\#753](https://github.com/shelljs/shelljs/issues/753)\n- cat doesn't support '-n' option [\\#750](https://github.com/shelljs/shelljs/issues/750)\n- shelljs run xcodebuild error [\\#749](https://github.com/shelljs/shelljs/issues/749)\n- Add wrappers around fs.statSync and fs.lstatSync [\\#745](https://github.com/shelljs/shelljs/issues/745)\n- Improve coverage for exec\\(\\) [\\#742](https://github.com/shelljs/shelljs/issues/742)\n- Improve coverage for head\\(\\) [\\#741](https://github.com/shelljs/shelljs/issues/741)\n- shelljs is no longer used in PDF.js [\\#737](https://github.com/shelljs/shelljs/issues/737)\n- ls doesn't follow links to directories [\\#733](https://github.com/shelljs/shelljs/issues/733)\n- Add test for `ls regular-file.txt` [\\#732](https://github.com/shelljs/shelljs/issues/732)\n- Clean up common tests [\\#714](https://github.com/shelljs/shelljs/issues/714)\n- Cant get encoding buffer to work on exec [\\#675](https://github.com/shelljs/shelljs/issues/675)\n- Set up Codecov for the project [\\#671](https://github.com/shelljs/shelljs/issues/671)\n- ShellJS: internal error Error: EBUSY: resource busy or locked, lstat 'C:\\pagefile.sys' [\\#514](https://github.com/shelljs/shelljs/issues/514)\n- Feature request: provide a way to skip option parsing [\\#778](https://github.com/shelljs/shelljs/issues/778)\n- Switch to os.homedir\\(\\) when we move to v4+ [\\#683](https://github.com/shelljs/shelljs/issues/683)\n- Drop support for v0.12 [\\#647](https://github.com/shelljs/shelljs/issues/647)\n- feature: echo -n [\\#559](https://github.com/shelljs/shelljs/issues/559)\n- Don't kill the node process upon unexpected error [\\#483](https://github.com/shelljs/shelljs/issues/483)\n- Echo doesn't return value ending in a trailing newline [\\#476](https://github.com/shelljs/shelljs/issues/476)\n- Synchronous exec stalls permenantly when there is an error/w the shell [\\#7](https://github.com/shelljs/shelljs/issues/7)\n\n**Merged pull requests:**\n\n- docs: announce plugin API [\\#812](https://github.com/shelljs/shelljs/pull/812) ([nfischer](https://github.com/nfischer))\n- chore: update CI to Node v9 [\\#811](https://github.com/shelljs/shelljs/pull/811) ([nfischer](https://github.com/nfischer))\n- refactor\\(exec\\): remove paramsFile [\\#807](https://github.com/shelljs/shelljs/pull/807) ([nfischer](https://github.com/nfischer))\n- chore: update nyc dependency [\\#805](https://github.com/shelljs/shelljs/pull/805) ([nfischer](https://github.com/nfischer))\n- refactor: harden plugins against unknown options [\\#804](https://github.com/shelljs/shelljs/pull/804) ([nfischer](https://github.com/nfischer))\n- chore\\(eslint\\): use words instead of numbers [\\#797](https://github.com/shelljs/shelljs/pull/797) ([nfischer](https://github.com/nfischer))\n- Add note to issue template about FAQ [\\#794](https://github.com/shelljs/shelljs/pull/794) ([freitagbr](https://github.com/freitagbr))\n- Remove codeFile parameter [\\#791](https://github.com/shelljs/shelljs/pull/791) ([nfischer](https://github.com/nfischer))\n- Use execFileSync to launch child process [\\#790](https://github.com/shelljs/shelljs/pull/790) ([nfischer](https://github.com/nfischer))\n- refactor\\(exec\\): move child process to source file [\\#786](https://github.com/shelljs/shelljs/pull/786) ([nfischer](https://github.com/nfischer))\n- Remove unnecessary shell.error checks from common tests [\\#785](https://github.com/shelljs/shelljs/pull/785) ([freitagbr](https://github.com/freitagbr))\n- Add a test for ls for a single file [\\#784](https://github.com/shelljs/shelljs/pull/784) ([freitagbr](https://github.com/freitagbr))\n- Wrap fs.statSync and fs.lstatSync [\\#783](https://github.com/shelljs/shelljs/pull/783) ([freitagbr](https://github.com/freitagbr))\n- chore: set AVA options [\\#780](https://github.com/shelljs/shelljs/pull/780) ([nfischer](https://github.com/nfischer))\n- chore: clean up refs to unsupported node versions [\\#779](https://github.com/shelljs/shelljs/pull/779) ([nfischer](https://github.com/nfischer))\n- Added `-q` \\(quiet\\) option to `push`, `popd`, `dirs` functions. [\\#777](https://github.com/shelljs/shelljs/pull/777) ([alexreg](https://github.com/alexreg))\n- feat\\(cat\\): number output lines \\(\\#750\\) [\\#775](https://github.com/shelljs/shelljs/pull/775) ([gcca](https://github.com/gcca))\n- refactor\\(test\\): update AVA and refactor tests [\\#760](https://github.com/shelljs/shelljs/pull/760) ([nfischer](https://github.com/nfischer))\n- chore: add skipOnWin and skipOnUnix test helpers [\\#746](https://github.com/shelljs/shelljs/pull/746) ([nfischer](https://github.com/nfischer))\n- test\\(exec\\): add tests for coverage [\\#744](https://github.com/shelljs/shelljs/pull/744) ([nfischer](https://github.com/nfischer))\n- test\\(head\\): improve coverage [\\#743](https://github.com/shelljs/shelljs/pull/743) ([nfischer](https://github.com/nfischer))\n- Remove PDF.js mention from README.md [\\#738](https://github.com/shelljs/shelljs/pull/738) ([voy](https://github.com/voy))\n- Provide an API to pass parameters which resemble options [\\#792](https://github.com/shelljs/shelljs/pull/792) ([nfischer](https://github.com/nfischer))\n- Fix ls not following links to directories by default [\\#764](https://github.com/shelljs/shelljs/pull/764) ([freitagbr](https://github.com/freitagbr))\n- Add \"encoding\" option to exec [\\#763](https://github.com/shelljs/shelljs/pull/763) ([freitagbr](https://github.com/freitagbr))\n- Merge dev into master [\\#731](https://github.com/shelljs/shelljs/pull/731) ([freitagbr](https://github.com/freitagbr))\n- Deprecate common.getUserHome, advise using os.homedir instead [\\#725](https://github.com/shelljs/shelljs/pull/725) ([freitagbr](https://github.com/freitagbr))\n- Echo test mocks [\\#708](https://github.com/shelljs/shelljs/pull/708) ([freitagbr](https://github.com/freitagbr))\n- Safely exit by throwing an error [\\#546](https://github.com/shelljs/shelljs/pull/546) ([freitagbr](https://github.com/freitagbr))\n- chore\\(make\\): depreciate shelljs/make [\\#431](https://github.com/shelljs/shelljs/pull/431) ([ariporad](https://github.com/ariporad))\n\n## [v0.7.8](https://github.com/shelljs/shelljs/tree/v0.7.8) (2017-06-07)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.7...v0.7.8)\n\n**Closed issues:**\n\n- Add node v8 to CI [\\#729](https://github.com/shelljs/shelljs/issues/729)\n- Exec not working in Electron ! [\\#726](https://github.com/shelljs/shelljs/issues/726)\n- is rechoir used anywhere? [\\#723](https://github.com/shelljs/shelljs/issues/723)\n- ShellJS: internal error on shelljs.mkdir\\('myFile/myDir'\\) [\\#720](https://github.com/shelljs/shelljs/issues/720)\n- Can't make sed perform global replace [\\#719](https://github.com/shelljs/shelljs/issues/719)\n- grep: option not recognized: l [\\#717](https://github.com/shelljs/shelljs/issues/717)\n- Problems getting code, stdout, stderr [\\#715](https://github.com/shelljs/shelljs/issues/715)\n- Copying hidden files fails on Windows 10 [\\#711](https://github.com/shelljs/shelljs/issues/711)\n- How am I suppose to handle errors with ShellJS? [\\#707](https://github.com/shelljs/shelljs/issues/707)\n- use cp\\('-r', './src', './dist'\\) bug [\\#705](https://github.com/shelljs/shelljs/issues/705)\n- Way to ignore files in globs. [\\#699](https://github.com/shelljs/shelljs/issues/699)\n- Buffer constructor is deprecated [\\#694](https://github.com/shelljs/shelljs/issues/694)\n- source command not working via exec method. [\\#693](https://github.com/shelljs/shelljs/issues/693)\n- Would you be interested in a PR for `open`? [\\#692](https://github.com/shelljs/shelljs/issues/692)\n- Get rid of common.platform in favor of process.platform [\\#670](https://github.com/shelljs/shelljs/issues/670)\n- Passing empty string to cp throws internal error [\\#664](https://github.com/shelljs/shelljs/issues/664)\n- Why does sed split files into an array, call replace on each line and rejoin? [\\#645](https://github.com/shelljs/shelljs/issues/645)\n- feat: cp & mv should not overwrite recently created files [\\#631](https://github.com/shelljs/shelljs/issues/631)\n- Echo tests unnecessarily run tests in own process [\\#622](https://github.com/shelljs/shelljs/issues/622)\n- rm -rf on a symbolic link to a dir deletes its contents [\\#587](https://github.com/shelljs/shelljs/issues/587)\n- \"Cannot extract package\" with node-webkit [\\#181](https://github.com/shelljs/shelljs/issues/181)\n- EBADF, bad file descriptor [\\#180](https://github.com/shelljs/shelljs/issues/180)\n\n**Merged pull requests:**\n\n- Add node 8 to CI [\\#730](https://github.com/shelljs/shelljs/pull/730) ([freitagbr](https://github.com/freitagbr))\n- fix\\(mkdir\\): improve error handling around files [\\#721](https://github.com/shelljs/shelljs/pull/721) ([nfischer](https://github.com/nfischer))\n- Properly handle directories as arguments [\\#713](https://github.com/shelljs/shelljs/pull/713) ([nfischer](https://github.com/nfischer))\n- Add common.buffer [\\#710](https://github.com/shelljs/shelljs/pull/710) ([freitagbr](https://github.com/freitagbr))\n- Fix common.expand error [\\#709](https://github.com/shelljs/shelljs/pull/709) ([freitagbr](https://github.com/freitagbr))\n- refactor: remove unnecessary common.js imports [\\#703](https://github.com/shelljs/shelljs/pull/703) ([nfischer](https://github.com/nfischer))\n- Fix \\#631 throw error when overwriting recently created file [\\#702](https://github.com/shelljs/shelljs/pull/702) ([uttpal](https://github.com/uttpal))\n- Small clarification of verbose flag [\\#691](https://github.com/shelljs/shelljs/pull/691) ([zommerfelds](https://github.com/zommerfelds))\n- fix\\(grep, sed, sort, uniq\\): Split only on newline characters [\\#690](https://github.com/shelljs/shelljs/pull/690) ([freitagbr](https://github.com/freitagbr))\n- Refactor: Use process.platform across codebase [\\#689](https://github.com/shelljs/shelljs/pull/689) ([freitagbr](https://github.com/freitagbr))\n- Remove contents of symlink to dir with rm -rf [\\#688](https://github.com/shelljs/shelljs/pull/688) ([freitagbr](https://github.com/freitagbr))\n- Echo stdout [\\#677](https://github.com/shelljs/shelljs/pull/677) ([nfischer](https://github.com/nfischer))\n\n## [v0.7.7](https://github.com/shelljs/shelljs/tree/v0.7.7) (2017-03-09)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.6...v0.7.7)\n\n**Closed issues:**\n\n- Error output should be consistent across all platforms. [\\#681](https://github.com/shelljs/shelljs/issues/681)\n- \\*CRITICAL data loss\\* shell.cp\\(\\) Content of file is erased when trying to copy it to the folder it already belongs to [\\#678](https://github.com/shelljs/shelljs/issues/678)\n- Use with webpack broken in 0.7.6 [\\#667](https://github.com/shelljs/shelljs/issues/667)\n- Difference between bash ls -R and ShellJS ls -R with symlinks [\\#666](https://github.com/shelljs/shelljs/issues/666)\n- Refactor which\\(\\) \\(too many repeated code blocks\\) [\\#656](https://github.com/shelljs/shelljs/issues/656)\n- find\\(\\) raises error when unable to find any files matching, expected to return empty array. [\\#653](https://github.com/shelljs/shelljs/issues/653)\n- Reformat the markdown in RELEASE.md [\\#642](https://github.com/shelljs/shelljs/issues/642)\n- rm -rf doesn't work if the directory contains an asar archive in Electron [\\#618](https://github.com/shelljs/shelljs/issues/618)\n- Add support for other file types in rm [\\#617](https://github.com/shelljs/shelljs/issues/617)\n- Feature request: ls -L option [\\#563](https://github.com/shelljs/shelljs/issues/563)\n- How to send SIGINT signal to child process launched with exec [\\#518](https://github.com/shelljs/shelljs/issues/518)\n- feature request: option to add node\\_modules to the path for shelljs scripts [\\#469](https://github.com/shelljs/shelljs/issues/469)\n- high cpu usage during synchronous exec [\\#167](https://github.com/shelljs/shelljs/issues/167)\n\n**Merged pull requests:**\n\n- Add support for removing fifos [\\#687](https://github.com/shelljs/shelljs/pull/687) ([freitagbr](https://github.com/freitagbr))\n- chore: add codecov script to appveyor CI [\\#686](https://github.com/shelljs/shelljs/pull/686) ([nfischer](https://github.com/nfischer))\n- Refactor tests to improve readability [\\#685](https://github.com/shelljs/shelljs/pull/685) ([nfischer](https://github.com/nfischer))\n- fix: convert error output to be consistent cross-platform [\\#684](https://github.com/shelljs/shelljs/pull/684) ([nfischer](https://github.com/nfischer))\n- chore: add codecov [\\#682](https://github.com/shelljs/shelljs/pull/682) ([nfischer](https://github.com/nfischer))\n- Fix cp overwriting identical files [\\#679](https://github.com/shelljs/shelljs/pull/679) ([freitagbr](https://github.com/freitagbr))\n- Modified glob pattern. Fixes \\#666 [\\#676](https://github.com/shelljs/shelljs/pull/676) ([frandiox](https://github.com/frandiox))\n- refactor\\(parseOptions\\): better handle errors [\\#674](https://github.com/shelljs/shelljs/pull/674) ([nfischer](https://github.com/nfischer))\n- test: add misc. tests to improve coverage [\\#673](https://github.com/shelljs/shelljs/pull/673) ([nfischer](https://github.com/nfischer))\n- test: don't count hard-to-test lines for coverage [\\#672](https://github.com/shelljs/shelljs/pull/672) ([nfischer](https://github.com/nfischer))\n- fix: switch commands.json -\\> commands.js [\\#668](https://github.com/shelljs/shelljs/pull/668) ([nfischer](https://github.com/nfischer))\n- ls -L \\(follow symlinks\\) [\\#665](https://github.com/shelljs/shelljs/pull/665) ([frandiox](https://github.com/frandiox))\n- docs\\(chmod\\): document `options` argument [\\#663](https://github.com/shelljs/shelljs/pull/663) ([gkalpak](https://github.com/gkalpak))\n- docs: clean up RELEASE.md [\\#662](https://github.com/shelljs/shelljs/pull/662) ([nfischer](https://github.com/nfischer))\n- docs: miscellaneous README changes [\\#661](https://github.com/shelljs/shelljs/pull/661) ([nfischer](https://github.com/nfischer))\n- Fix typo in README [\\#660](https://github.com/shelljs/shelljs/pull/660) ([faheel](https://github.com/faheel))\n- refactor: reduce repeated code in which\\(\\) [\\#659](https://github.com/shelljs/shelljs/pull/659) ([nfischer](https://github.com/nfischer))\n- feature: add -a option for which command [\\#655](https://github.com/shelljs/shelljs/pull/655) ([termosa](https://github.com/termosa))\n- Fix find ENOENT [\\#654](https://github.com/shelljs/shelljs/pull/654) ([freitagbr](https://github.com/freitagbr))\n- Safely exit by throwing an error [\\#649](https://github.com/shelljs/shelljs/pull/649) ([freitagbr](https://github.com/freitagbr))\n- Chore drop 0.12 [\\#648](https://github.com/shelljs/shelljs/pull/648) ([nfischer](https://github.com/nfischer))\n- chore\\(lint\\): Enforce a trailing comma for multi-line [\\#646](https://github.com/shelljs/shelljs/pull/646) ([nfischer](https://github.com/nfischer))\n- docs\\(release\\): use bulleted list [\\#643](https://github.com/shelljs/shelljs/pull/643) ([freitagbr](https://github.com/freitagbr))\n\n## [v0.7.6](https://github.com/shelljs/shelljs/tree/v0.7.6) (2017-01-08)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.5...v0.7.6)\n\n**Closed issues:**\n\n- unable to execute ionic command with shell js  [\\#640](https://github.com/shelljs/shelljs/issues/640)\n- How to increase ShellJS buffer size? [\\#639](https://github.com/shelljs/shelljs/issues/639)\n- mkdir fails with non-normalized path [\\#634](https://github.com/shelljs/shelljs/issues/634)\n- Move execPath into common [\\#633](https://github.com/shelljs/shelljs/issues/633)\n- QUESTION: Feedback while an operation is running? [\\#629](https://github.com/shelljs/shelljs/issues/629)\n- Test setup/cleanup is broken [\\#621](https://github.com/shelljs/shelljs/issues/621)\n- Ignore temp directories when running lint [\\#620](https://github.com/shelljs/shelljs/issues/620)\n- parseOptions should throw an error if the option string doesn't start with '-' [\\#614](https://github.com/shelljs/shelljs/issues/614)\n- chore: LGTM.co is gone [\\#595](https://github.com/shelljs/shelljs/issues/595)\n- refactor: objectAssign should refer to Object.assign if it exists, or the internal polyfill otherwise [\\#592](https://github.com/shelljs/shelljs/issues/592)\n- parseOptions: allow a way to keep errors silent \\(exception only\\) [\\#591](https://github.com/shelljs/shelljs/issues/591)\n- \\[Question\\] commands with multiple options / arguments? [\\#589](https://github.com/shelljs/shelljs/issues/589)\n- feature: GNU Parallel  [\\#585](https://github.com/shelljs/shelljs/issues/585)\n- write to file [\\#568](https://github.com/shelljs/shelljs/issues/568)\n- Cannot figure out how to disable globbing for rm [\\#567](https://github.com/shelljs/shelljs/issues/567)\n- Switch to the ava test framework [\\#560](https://github.com/shelljs/shelljs/issues/560)\n- Option not recognized [\\#556](https://github.com/shelljs/shelljs/issues/556)\n- chore: add @freitagbr to LGTM maintainers [\\#552](https://github.com/shelljs/shelljs/issues/552)\n- chore: set up dev branch [\\#548](https://github.com/shelljs/shelljs/issues/548)\n- bug: cp\\(\\) doesn't always copy everything [\\#547](https://github.com/shelljs/shelljs/issues/547)\n- User-friendly lint command [\\#544](https://github.com/shelljs/shelljs/issues/544)\n- Lint warning [\\#542](https://github.com/shelljs/shelljs/issues/542)\n- chore: add nodejs v7 to CI [\\#537](https://github.com/shelljs/shelljs/issues/537)\n- error.code is not always available [\\#536](https://github.com/shelljs/shelljs/issues/536)\n- Add shx as a dependency for testing [\\#525](https://github.com/shelljs/shelljs/issues/525)\n- Feature request: allow `common.error\\(\\)` to optionally not insert a prefix and optionally not print to console [\\#523](https://github.com/shelljs/shelljs/issues/523)\n- Feature request: Add \"shelljs.unlink\" [\\#519](https://github.com/shelljs/shelljs/issues/519)\n- Sed should allow a replacement string to contain `\\1` for match groups [\\#507](https://github.com/shelljs/shelljs/issues/507)\n- Usage with neodoc [\\#445](https://github.com/shelljs/shelljs/issues/445)\n- \\[ Feature idea \\] synchronous sleep command [\\#441](https://github.com/shelljs/shelljs/issues/441)\n- Improve test coverage [\\#347](https://github.com/shelljs/shelljs/issues/347)\n- Add a way to prevent shell-expansion on commands \\(this issue is not for exec\\) [\\#345](https://github.com/shelljs/shelljs/issues/345)\n- Chown [\\#183](https://github.com/shelljs/shelljs/issues/183)\n- spawn EMFILE [\\#81](https://github.com/shelljs/shelljs/issues/81)\n- Rewrite exec using execsync-ng \\(which uses node-ffi\\) [\\#66](https://github.com/shelljs/shelljs/issues/66)\n- `exec` gets stuck on my Debian box [\\#51](https://github.com/shelljs/shelljs/issues/51)\n- 100% cpu usage when a nodejs script goes side ways executing a command. [\\#5](https://github.com/shelljs/shelljs/issues/5)\n\n**Merged pull requests:**\n\n- refactor: add config.reset\\(\\) and .resetForTesting\\(\\) [\\#641](https://github.com/shelljs/shelljs/pull/641) ([nfischer](https://github.com/nfischer))\n- chore: set up test coverage [\\#638](https://github.com/shelljs/shelljs/pull/638) ([nfischer](https://github.com/nfischer))\n- refactor: create common.execPath [\\#636](https://github.com/shelljs/shelljs/pull/636) ([nfischer](https://github.com/nfischer))\n- fix: allow non-normalized paths as input to mkdir [\\#635](https://github.com/shelljs/shelljs/pull/635) ([nfischer](https://github.com/nfischer))\n- Finalize moving to ava [\\#630](https://github.com/shelljs/shelljs/pull/630) ([freitagbr](https://github.com/freitagbr))\n- test: refactor pushd tests to AVA [\\#627](https://github.com/shelljs/shelljs/pull/627) ([nfischer](https://github.com/nfischer))\n- test: refactor popd tests to AVA [\\#626](https://github.com/shelljs/shelljs/pull/626) ([nfischer](https://github.com/nfischer))\n- test: refactor shjs tests to AVA [\\#625](https://github.com/shelljs/shelljs/pull/625) ([nfischer](https://github.com/nfischer))\n- test: remove tests for make \\(deprecated\\) [\\#624](https://github.com/shelljs/shelljs/pull/624) ([nfischer](https://github.com/nfischer))\n- Ignore test temp directories during linting [\\#623](https://github.com/shelljs/shelljs/pull/623) ([freitagbr](https://github.com/freitagbr))\n- refactor: list all commands in commands.json [\\#616](https://github.com/shelljs/shelljs/pull/616) ([nfischer](https://github.com/nfischer))\n- Throw an error if the options string does not start with '-' [\\#615](https://github.com/shelljs/shelljs/pull/615) ([freitagbr](https://github.com/freitagbr))\n- chore: switch to files attribute from npmignore [\\#613](https://github.com/shelljs/shelljs/pull/613) ([nfischer](https://github.com/nfischer))\n- test: refactor 'test' command tests to AVA [\\#612](https://github.com/shelljs/shelljs/pull/612) ([nfischer](https://github.com/nfischer))\n- test: refactor find tests to AVA [\\#611](https://github.com/shelljs/shelljs/pull/611) ([nfischer](https://github.com/nfischer))\n- test: refactor ln tests to AVA [\\#610](https://github.com/shelljs/shelljs/pull/610) ([nfischer](https://github.com/nfischer))\n- test: refactor ls to use AVA [\\#609](https://github.com/shelljs/shelljs/pull/609) ([nfischer](https://github.com/nfischer))\n- test: refactor pipe tests to AVA [\\#608](https://github.com/shelljs/shelljs/pull/608) ([nfischer](https://github.com/nfischer))\n- test: refactor sed tests to AVA [\\#607](https://github.com/shelljs/shelljs/pull/607) ([nfischer](https://github.com/nfischer))\n- test: refactor grep tests to AVA [\\#606](https://github.com/shelljs/shelljs/pull/606) ([nfischer](https://github.com/nfischer))\n- test: refactor global tests to AVA [\\#605](https://github.com/shelljs/shelljs/pull/605) ([nfischer](https://github.com/nfischer))\n- test: refactor touch tests to AVA [\\#604](https://github.com/shelljs/shelljs/pull/604) ([nfischer](https://github.com/nfischer))\n- test: refactor uniq tests to AVA [\\#603](https://github.com/shelljs/shelljs/pull/603) ([nfischer](https://github.com/nfischer))\n- test: refactor sort tests to AVA [\\#602](https://github.com/shelljs/shelljs/pull/602) ([nfischer](https://github.com/nfischer))\n- test: refactor tail tests to AVA [\\#601](https://github.com/shelljs/shelljs/pull/601) ([nfischer](https://github.com/nfischer))\n- test: refactor head tests to AVA [\\#600](https://github.com/shelljs/shelljs/pull/600) ([nfischer](https://github.com/nfischer))\n- test: refactor mkdir tests to AVA [\\#599](https://github.com/shelljs/shelljs/pull/599) ([nfischer](https://github.com/nfischer))\n- Fix: rm behavior regarding symlinks [\\#598](https://github.com/shelljs/shelljs/pull/598) ([freitagbr](https://github.com/freitagbr))\n- test: refactor mv tests to AVA [\\#597](https://github.com/shelljs/shelljs/pull/597) ([nfischer](https://github.com/nfischer))\n- Remove files related to lgtm.co [\\#596](https://github.com/shelljs/shelljs/pull/596) ([freitagbr](https://github.com/freitagbr))\n- Add ability to configure error from parseOptions [\\#594](https://github.com/shelljs/shelljs/pull/594) ([freitagbr](https://github.com/freitagbr))\n- Use Object.assign if possible [\\#593](https://github.com/shelljs/shelljs/pull/593) ([freitagbr](https://github.com/freitagbr))\n- Add \"-n\" option to echo [\\#590](https://github.com/shelljs/shelljs/pull/590) ([freitagbr](https://github.com/freitagbr))\n- test: refactor rm tests to AVA [\\#586](https://github.com/shelljs/shelljs/pull/586) ([nfischer](https://github.com/nfischer))\n- test: refactor pwd tests to AVA [\\#582](https://github.com/shelljs/shelljs/pull/582) ([nfischer](https://github.com/nfischer))\n- test: refactor tempdir tests to AVA [\\#581](https://github.com/shelljs/shelljs/pull/581) ([nfischer](https://github.com/nfischer))\n- test: refactor 'which' tests to AVA [\\#580](https://github.com/shelljs/shelljs/pull/580) ([nfischer](https://github.com/nfischer))\n- test: refactor plugin tests to AVA [\\#579](https://github.com/shelljs/shelljs/pull/579) ([nfischer](https://github.com/nfischer))\n- test: refactor toEnd tests to AVA [\\#578](https://github.com/shelljs/shelljs/pull/578) ([nfischer](https://github.com/nfischer))\n- test: refactor to tests to AVA [\\#577](https://github.com/shelljs/shelljs/pull/577) ([nfischer](https://github.com/nfischer))\n- test: refactor 'set' tests to AVA [\\#576](https://github.com/shelljs/shelljs/pull/576) ([nfischer](https://github.com/nfischer))\n- test: refactor echo tests to AVA [\\#575](https://github.com/shelljs/shelljs/pull/575) ([nfischer](https://github.com/nfischer))\n- test: refactor exec tests to AVA [\\#574](https://github.com/shelljs/shelljs/pull/574) ([nfischer](https://github.com/nfischer))\n- test: refactor env tests to AVA [\\#573](https://github.com/shelljs/shelljs/pull/573) ([nfischer](https://github.com/nfischer))\n- test: refactor dirs tests to AVA [\\#572](https://github.com/shelljs/shelljs/pull/572) ([nfischer](https://github.com/nfischer))\n- test: refactor config tests to AVA [\\#571](https://github.com/shelljs/shelljs/pull/571) ([nfischer](https://github.com/nfischer))\n- test: refactor common tests to AVA [\\#570](https://github.com/shelljs/shelljs/pull/570) ([nfischer](https://github.com/nfischer))\n- test: refactor chmod tests to AVA [\\#569](https://github.com/shelljs/shelljs/pull/569) ([nfischer](https://github.com/nfischer))\n- test: refactor cp tests to ava [\\#565](https://github.com/shelljs/shelljs/pull/565) ([nfischer](https://github.com/nfischer))\n- test: refactor cat tests to ava [\\#564](https://github.com/shelljs/shelljs/pull/564) ([nfischer](https://github.com/nfischer))\n- test: set up ava and move cd.js [\\#561](https://github.com/shelljs/shelljs/pull/561) ([nfischer](https://github.com/nfischer))\n- Update sed documentation regarding capture groups [\\#558](https://github.com/shelljs/shelljs/pull/558) ([freitagbr](https://github.com/freitagbr))\n- Add newline to output of echo [\\#557](https://github.com/shelljs/shelljs/pull/557) ([freitagbr](https://github.com/freitagbr))\n- fix: handle code-less errors more carefully in exec [\\#554](https://github.com/shelljs/shelljs/pull/554) ([nfischer](https://github.com/nfischer))\n- Add Brandon Freitag to maintainers/contributors [\\#553](https://github.com/shelljs/shelljs/pull/553) ([freitagbr](https://github.com/freitagbr))\n- Get pipe tests running on Windows. [\\#550](https://github.com/shelljs/shelljs/pull/550) ([binki](https://github.com/binki))\n- fix: maxdepth doesn't limit total number of copies [\\#549](https://github.com/shelljs/shelljs/pull/549) ([nfischer](https://github.com/nfischer))\n- Fix lint warning [\\#543](https://github.com/shelljs/shelljs/pull/543) ([freitagbr](https://github.com/freitagbr))\n- chore: remove v0.10 from Travis CI [\\#540](https://github.com/shelljs/shelljs/pull/540) ([nfischer](https://github.com/nfischer))\n- chore: add Node v7 for CI [\\#539](https://github.com/shelljs/shelljs/pull/539) ([nfischer](https://github.com/nfischer))\n\n## [v0.7.5](https://github.com/shelljs/shelljs/tree/v0.7.5) (2016-10-27)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.4...v0.7.5)\n\n**Closed issues:**\n\n- Project objectives: there is some higher goal to achieve? [\\#533](https://github.com/shelljs/shelljs/issues/533)\n- fs.existsSync is un-deprecated [\\#531](https://github.com/shelljs/shelljs/issues/531)\n- Inadvertent breaking change to shell.test\\(\\) [\\#529](https://github.com/shelljs/shelljs/issues/529)\n- Add -u flag support for cp [\\#526](https://github.com/shelljs/shelljs/issues/526)\n- API request: allow `plugin.error\\(\\)` to take an options parameter [\\#522](https://github.com/shelljs/shelljs/issues/522)\n- FS Real Path error thrown when requiring shelljs [\\#521](https://github.com/shelljs/shelljs/issues/521)\n- Question: passing code via pipe? [\\#520](https://github.com/shelljs/shelljs/issues/520)\n- The performance in `cp` is different between `0.6.0` and `0.7.4` [\\#517](https://github.com/shelljs/shelljs/issues/517)\n- ShellJS in Electron package don't find ffmpeg anymore [\\#516](https://github.com/shelljs/shelljs/issues/516)\n- Exec issues with string option introduced in 0.7.4 [\\#515](https://github.com/shelljs/shelljs/issues/515)\n- \\[ Feature \\] SSH command [\\#435](https://github.com/shelljs/shelljs/issues/435)\n\n**Merged pull requests:**\n\n- feat: plugin.error\\(\\) takes an options parameter [\\#535](https://github.com/shelljs/shelljs/pull/535) ([nfischer](https://github.com/nfischer))\n- Revert \"refactor: replace fs.existsSync\" fixes\\(\\#531\\) [\\#532](https://github.com/shelljs/shelljs/pull/532) ([gyandeeps](https://github.com/gyandeeps))\n- Fix: Remove default glob from shell.test \\(fixes \\#529\\) [\\#530](https://github.com/shelljs/shelljs/pull/530) ([gyandeeps](https://github.com/gyandeeps))\n- feat: cp -u option [\\#527](https://github.com/shelljs/shelljs/pull/527) ([nfischer](https://github.com/nfischer))\n- chore: add downloads per month on README [\\#513](https://github.com/shelljs/shelljs/pull/513) ([nfischer](https://github.com/nfischer))\n\n## [v0.7.4](https://github.com/shelljs/shelljs/tree/v0.7.4) (2016-08-26)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.3...v0.7.4)\n\n**Closed issues:**\n\n- fix: echo -e should not print \"-e\" [\\#510](https://github.com/shelljs/shelljs/issues/510)\n- Wrong method signature in doc [\\#498](https://github.com/shelljs/shelljs/issues/498)\n- readFromPipe should be a function with no arguments [\\#485](https://github.com/shelljs/shelljs/issues/485)\n- TypeError: Cannot read property 'toString' of undefined [\\#471](https://github.com/shelljs/shelljs/issues/471)\n\n**Merged pull requests:**\n\n- fix: echo supports -e option properly [\\#511](https://github.com/shelljs/shelljs/pull/511) ([nfischer](https://github.com/nfischer))\n- refactor: replace fs.existsSync [\\#509](https://github.com/shelljs/shelljs/pull/509) ([nfischer](https://github.com/nfischer))\n- refactor: readFromPipe\\(\\) requires no arguments [\\#506](https://github.com/shelljs/shelljs/pull/506) ([nfischer](https://github.com/nfischer))\n- chore: switch to eslint [\\#504](https://github.com/shelljs/shelljs/pull/504) ([nfischer](https://github.com/nfischer))\n- feat: add overWrite option for commands [\\#503](https://github.com/shelljs/shelljs/pull/503) ([nfischer](https://github.com/nfischer))\n- chore: update issue template [\\#502](https://github.com/shelljs/shelljs/pull/502) ([nfischer](https://github.com/nfischer))\n- fixed head/tail readme [\\#499](https://github.com/shelljs/shelljs/pull/499) ([charlesread](https://github.com/charlesread))\n\n## [v0.7.3](https://github.com/shelljs/shelljs/tree/v0.7.3) (2016-07-27)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.2...v0.7.3)\n\n**Closed issues:**\n\n- expose execSync [\\#494](https://github.com/shelljs/shelljs/issues/494)\n- Add a way to create commands that can receive from a pipe without being standalone commands [\\#487](https://github.com/shelljs/shelljs/issues/487)\n- cp -r breaks when the directory contains a softlink [\\#193](https://github.com/shelljs/shelljs/issues/193)\n- Redirect output to file fails [\\#60](https://github.com/shelljs/shelljs/issues/60)\n- We need sed -n ? [\\#38](https://github.com/shelljs/shelljs/issues/38)\n\n**Merged pull requests:**\n\n- refactor: allow pipeOnly commands \\(methods on ShellStrings\\) [\\#493](https://github.com/shelljs/shelljs/pull/493) ([nfischer](https://github.com/nfischer))\n- refactor: glob by default for commands [\\#492](https://github.com/shelljs/shelljs/pull/492) ([nfischer](https://github.com/nfischer))\n- refactor: switch from notUnix to unix in wrap\\(\\) [\\#491](https://github.com/shelljs/shelljs/pull/491) ([nfischer](https://github.com/nfischer))\n- refactor: switch common.extend\\(\\) to Object.assign ponyfill [\\#490](https://github.com/shelljs/shelljs/pull/490) ([nfischer](https://github.com/nfischer))\n- fix: conflicting options now properly override each other [\\#489](https://github.com/shelljs/shelljs/pull/489) ([nfischer](https://github.com/nfischer))\n- refactor: expose plugin utils & add initial tests [\\#484](https://github.com/shelljs/shelljs/pull/484) ([nfischer](https://github.com/nfischer))\n\n## [v0.7.2](https://github.com/shelljs/shelljs/tree/v0.7.2) (2016-07-25)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.1...v0.7.2)\n\n**Closed issues:**\n\n- shelljs should not kill process if node call throws exception [\\#473](https://github.com/shelljs/shelljs/issues/473)\n- `cp` work incorrectly when folder name contains '@' [\\#463](https://github.com/shelljs/shelljs/issues/463)\n- Something went wrong [\\#158](https://github.com/shelljs/shelljs/issues/158)\n\n**Merged pull requests:**\n\n- fix: resolve a cylcic-dependency problem [\\#482](https://github.com/shelljs/shelljs/pull/482) ([nfischer](https://github.com/nfischer))\n- refactor: add wrapOutput option to auto-ShellString-ify command output [\\#481](https://github.com/shelljs/shelljs/pull/481) ([nfischer](https://github.com/nfischer))\n- refactor: move option parsing into common.wrap\\(\\) [\\#479](https://github.com/shelljs/shelljs/pull/479) ([nfischer](https://github.com/nfischer))\n- refactor: hook new uniq\\(\\) command using new format [\\#478](https://github.com/shelljs/shelljs/pull/478) ([nfischer](https://github.com/nfischer))\n- Fix mkdir malformed path [\\#477](https://github.com/shelljs/shelljs/pull/477) ([nfischer](https://github.com/nfischer))\n- fix: mkdir for invalid perms does not kill process [\\#474](https://github.com/shelljs/shelljs/pull/474) ([nfischer](https://github.com/nfischer))\n- feat\\(command\\): new command: uniq\\(\\) [\\#453](https://github.com/shelljs/shelljs/pull/453) ([joshi-sh](https://github.com/joshi-sh))\n\n## [v0.7.1](https://github.com/shelljs/shelljs/tree/v0.7.1) (2016-07-22)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.0...v0.7.1)\n\n**Closed issues:**\n\n- cp -n doesn't work correctly [\\#465](https://github.com/shelljs/shelljs/issues/465)\n- how can i run sudo apt-get install xtodotool by your plugin? [\\#448](https://github.com/shelljs/shelljs/issues/448)\n- shell.js grep: internal error,  Invalid regular expression [\\#447](https://github.com/shelljs/shelljs/issues/447)\n- Stdout is empty on Git log command [\\#439](https://github.com/shelljs/shelljs/issues/439)\n- Cannot read toString of null when using execSync [\\#415](https://github.com/shelljs/shelljs/issues/415)\n- cp -R dir/ target fails to copy hidden files in dir [\\#140](https://github.com/shelljs/shelljs/issues/140)\n- \\#mv Won't Work Across Disks [\\#1](https://github.com/shelljs/shelljs/issues/1)\n\n**Merged pull requests:**\n\n- refactor: commands now register themselves [\\#475](https://github.com/shelljs/shelljs/pull/475) ([nfischer](https://github.com/nfischer))\n- chore: switch to shields.io, and add npm badge [\\#470](https://github.com/shelljs/shelljs/pull/470) ([nfischer](https://github.com/nfischer))\n- fix\\(cp\\): -n option no longer raises error [\\#466](https://github.com/shelljs/shelljs/pull/466) ([nfischer](https://github.com/nfischer))\n- refactor: expose pipe-ability to command configuration [\\#464](https://github.com/shelljs/shelljs/pull/464) ([nfischer](https://github.com/nfischer))\n- fix\\(mv\\): works across partitions [\\#461](https://github.com/shelljs/shelljs/pull/461) ([nfischer](https://github.com/nfischer))\n- chore: switch to shelljs-changelog [\\#460](https://github.com/shelljs/shelljs/pull/460) ([nfischer](https://github.com/nfischer))\n- chore: update release process [\\#459](https://github.com/shelljs/shelljs/pull/459) ([nfischer](https://github.com/nfischer))\n- chore: revert depreciate shelljs/make \\(\\#431\\) [\\#458](https://github.com/shelljs/shelljs/pull/458) ([zephraph](https://github.com/zephraph))\n- chore: clarify message for when docs are not generated [\\#457](https://github.com/shelljs/shelljs/pull/457) ([nfischer](https://github.com/nfischer))\n- chore\\(gendocs\\): add `npm run gendocs` command [\\#455](https://github.com/shelljs/shelljs/pull/455) ([nfischer](https://github.com/nfischer))\n- chore: update jshint and move it to an npm script [\\#454](https://github.com/shelljs/shelljs/pull/454) ([nfischer](https://github.com/nfischer))\n- test\\(ls\\): add case for trailing slash on dir name [\\#450](https://github.com/shelljs/shelljs/pull/450) ([nfischer](https://github.com/nfischer))\n- docs\\(exec\\): explicitly mention the `shell` option [\\#449](https://github.com/shelljs/shelljs/pull/449) ([nfischer](https://github.com/nfischer))\n- chore: setup changelog [\\#443](https://github.com/shelljs/shelljs/pull/443) ([levithomason](https://github.com/levithomason))\n- docs: comment code better to help contributors [\\#437](https://github.com/shelljs/shelljs/pull/437) ([nfischer](https://github.com/nfischer))\n- chore\\(CI\\): update appveyor [\\#436](https://github.com/shelljs/shelljs/pull/436) ([nfischer](https://github.com/nfischer))\n- chore: test against node v6 [\\#433](https://github.com/shelljs/shelljs/pull/433) ([nfischer](https://github.com/nfischer))\n- docs: warn that README contains newest features [\\#410](https://github.com/shelljs/shelljs/pull/410) ([nfischer](https://github.com/nfischer))\n\n## [v0.7.0](https://github.com/shelljs/shelljs/tree/v0.7.0) (2016-04-25)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.6.0...v0.7.0)\n\n**Closed issues:**\n\n- exec\\('nohup node some.js &'\\) [\\#426](https://github.com/shelljs/shelljs/issues/426)\n- shelljs Breaks SemVer for Alpha and Pre-Release Versions [\\#390](https://github.com/shelljs/shelljs/issues/390)\n- Copy not accepting source end with wildcards \\* when using -r on v0.6.0 [\\#389](https://github.com/shelljs/shelljs/issues/389)\n- Support globbing in `shjs` [\\#388](https://github.com/shelljs/shelljs/issues/388)\n- Refactor more commands to return ShellString [\\#373](https://github.com/shelljs/shelljs/issues/373)\n- ln\\('-sf', './', '\\<destination\\>'\\) is not linking the right folder [\\#363](https://github.com/shelljs/shelljs/issues/363)\n- v0.6.0 - shell.cp\\('r', '/foo/\\*, '/bar'\\) fails with /foo/\\* no such file or directory [\\#342](https://github.com/shelljs/shelljs/issues/342)\n- Add documentup as a webhook [\\#327](https://github.com/shelljs/shelljs/issues/327)\n- Dir glob breaks when in the middle of path [\\#245](https://github.com/shelljs/shelljs/issues/245)\n- could you switch off wiki page? [\\#233](https://github.com/shelljs/shelljs/issues/233)\n- ls globbing does not behave like shell, consider using glob.sync [\\#225](https://github.com/shelljs/shelljs/issues/225)\n- Cannot run shell.exec\\('heroku config:push'\\) -- just hangs  [\\#218](https://github.com/shelljs/shelljs/issues/218)\n- `cp` does not overwrite files by default [\\#210](https://github.com/shelljs/shelljs/issues/210)\n- exec failed to return [\\#208](https://github.com/shelljs/shelljs/issues/208)\n- CLI Version [\\#202](https://github.com/shelljs/shelljs/issues/202)\n- Bracket expansion not working [\\#176](https://github.com/shelljs/shelljs/issues/176)\n- \"exec\" causes LiveScript interpreter \\(lsc\\) to hang [\\#160](https://github.com/shelljs/shelljs/issues/160)\n- Don't modify string prototype [\\#159](https://github.com/shelljs/shelljs/issues/159)\n- `exec\\(...\\).to\\(file\\)` should work [\\#154](https://github.com/shelljs/shelljs/issues/154)\n- Can't install shelljs locally instead of globally [\\#136](https://github.com/shelljs/shelljs/issues/136)\n- shelljs and node 0.10.28 [\\#125](https://github.com/shelljs/shelljs/issues/125)\n- Use case for global installed shelljs [\\#123](https://github.com/shelljs/shelljs/issues/123)\n- Only get stdout from `exec` [\\#92](https://github.com/shelljs/shelljs/issues/92)\n- What about other commands? [\\#90](https://github.com/shelljs/shelljs/issues/90)\n- Flesh out example of exit\\(\\) [\\#73](https://github.com/shelljs/shelljs/issues/73)\n- exec doesn't work with qualified paths on windows [\\#41](https://github.com/shelljs/shelljs/issues/41)\n- exec does not working in mingw bash in windows [\\#17](https://github.com/shelljs/shelljs/issues/17)\n- Add support for cp -P option [\\#413](https://github.com/shelljs/shelljs/issues/413)\n- cp -L: Incorrect behavior for symlinks to regular files [\\#407](https://github.com/shelljs/shelljs/issues/407)\n- Edit the docs to emphasize ShellStrings and Pipes [\\#398](https://github.com/shelljs/shelljs/issues/398)\n- Error message isn't always printed [\\#372](https://github.com/shelljs/shelljs/issues/372)\n- Standardize command output [\\#356](https://github.com/shelljs/shelljs/issues/356)\n- exec\\(\\) doesn't clean up all temp files [\\#353](https://github.com/shelljs/shelljs/issues/353)\n- Document that exec\\(\\) options don't work on early versions of node [\\#350](https://github.com/shelljs/shelljs/issues/350)\n- Add -f option to set\\(\\) [\\#344](https://github.com/shelljs/shelljs/issues/344)\n- Glob commands by default [\\#343](https://github.com/shelljs/shelljs/issues/343)\n- rm -rf incorrect behaviour [\\#332](https://github.com/shelljs/shelljs/issues/332)\n- Switch `exec\\(\\)` to use bash by default [\\#281](https://github.com/shelljs/shelljs/issues/281)\n- pipe to proc [\\#148](https://github.com/shelljs/shelljs/issues/148)\n- shell builtin [\\#138](https://github.com/shelljs/shelljs/issues/138)\n- add timeout option for exec [\\#132](https://github.com/shelljs/shelljs/issues/132)\n- shelljs cp handling symlinks badly [\\#69](https://github.com/shelljs/shelljs/issues/69)\n\n**Merged pull requests:**\n\n- chore: add \"Team\" section to README [\\#423](https://github.com/shelljs/shelljs/pull/423) ([nfischer](https://github.com/nfischer))\n- Contributing guidelines [\\#422](https://github.com/shelljs/shelljs/pull/422) ([nfischer](https://github.com/nfischer))\n- feat\\(glob\\): expose config.globOptions. [\\#400](https://github.com/shelljs/shelljs/pull/400) ([nfischer](https://github.com/nfischer))\n- Add shelljs as a keyword in package.json [\\#393](https://github.com/shelljs/shelljs/pull/393) ([nfischer](https://github.com/nfischer))\n- docs: add link to wiki page [\\#392](https://github.com/shelljs/shelljs/pull/392) ([nfischer](https://github.com/nfischer))\n- refactor\\(cd\\): use process.env.OLDPWD to store previous dir [\\#383](https://github.com/shelljs/shelljs/pull/383) ([nfischer](https://github.com/nfischer))\n- chore\\(appveyor\\): add in node 4 for appveyor [\\#381](https://github.com/shelljs/shelljs/pull/381) ([nfischer](https://github.com/nfischer))\n- Add Cash cross-reference [\\#375](https://github.com/shelljs/shelljs/pull/375) ([dthree](https://github.com/dthree))\n- Ignore gitattributes from npm package [\\#361](https://github.com/shelljs/shelljs/pull/361) ([nfischer](https://github.com/nfischer))\n- Consistently use LF line endings [\\#355](https://github.com/shelljs/shelljs/pull/355) ([TimothyGu](https://github.com/TimothyGu))\n- Release v0.7.0 [\\#429](https://github.com/shelljs/shelljs/pull/429) ([nfischer](https://github.com/nfischer))\n- fix: null is no longer confused for an object [\\#428](https://github.com/shelljs/shelljs/pull/428) ([nfischer](https://github.com/nfischer))\n- fix\\(ls\\): no trailing newline for empty directories [\\#425](https://github.com/shelljs/shelljs/pull/425) ([nfischer](https://github.com/nfischer))\n- feat\\(cp\\): -P option, plus better handling of symlinks [\\#421](https://github.com/shelljs/shelljs/pull/421) ([nfischer](https://github.com/nfischer))\n- docs\\(exec\\): fix docs about exec return type [\\#419](https://github.com/shelljs/shelljs/pull/419) ([nfischer](https://github.com/nfischer))\n- docs\\(error\\): deprecate relying on string value [\\#418](https://github.com/shelljs/shelljs/pull/418) ([nfischer](https://github.com/nfischer))\n- fix: error message now printed for fatal failures [\\#417](https://github.com/shelljs/shelljs/pull/417) ([nfischer](https://github.com/nfischer))\n- issue-407: Add regular files unit tests and fix symlink copy behavior [\\#409](https://github.com/shelljs/shelljs/pull/409) ([charlesverge](https://github.com/charlesverge))\n- refactor\\(rm\\): Remove duplicate code [\\#408](https://github.com/shelljs/shelljs/pull/408) ([nfischer](https://github.com/nfischer))\n- docs: wildcards for all commands, other docs cleanups [\\#404](https://github.com/shelljs/shelljs/pull/404) ([nfischer](https://github.com/nfischer))\n- test\\(rm\\): add tests to prevent a future regression [\\#403](https://github.com/shelljs/shelljs/pull/403) ([nfischer](https://github.com/nfischer))\n- refactor\\(string\\): modify string protoype, but only for shelljs/global [\\#401](https://github.com/shelljs/shelljs/pull/401) ([nfischer](https://github.com/nfischer))\n- feat: adding error codes to ShellJS [\\#394](https://github.com/shelljs/shelljs/pull/394) ([nfischer](https://github.com/nfischer))\n- feature: use rechoir [\\#384](https://github.com/shelljs/shelljs/pull/384) ([nfischer](https://github.com/nfischer))\n- refactor\\(cp\\): clean up code and fix \\#376 [\\#380](https://github.com/shelljs/shelljs/pull/380) ([nfischer](https://github.com/nfischer))\n- New commands: sort\\(\\), head\\(\\), and tail\\(\\) [\\#379](https://github.com/shelljs/shelljs/pull/379) ([nfischer](https://github.com/nfischer))\n- Add unit tests to prevent regression \\(see \\#376\\) [\\#378](https://github.com/shelljs/shelljs/pull/378) ([nfischer](https://github.com/nfischer))\n- feat\\(pipe\\): add support for pipes between commands [\\#370](https://github.com/shelljs/shelljs/pull/370) ([nfischer](https://github.com/nfischer))\n- refactor\\(ls\\): greatly simplify ls implimentation [\\#369](https://github.com/shelljs/shelljs/pull/369) ([ariporad](https://github.com/ariporad))\n- chore: drop node v0.10 support [\\#368](https://github.com/shelljs/shelljs/pull/368) ([ariporad](https://github.com/ariporad))\n- perf\\(cd\\): only run `stat` once [\\#367](https://github.com/shelljs/shelljs/pull/367) ([ariporad](https://github.com/ariporad))\n- fix\\(exec\\): properly handles paths with spaces and quotes [\\#365](https://github.com/shelljs/shelljs/pull/365) ([nfischer](https://github.com/nfischer))\n- test\\(ln\\): add tests for linking to cwd [\\#364](https://github.com/shelljs/shelljs/pull/364) ([nfischer](https://github.com/nfischer))\n- fix\\(verbose\\): verbose-style logging is consistent [\\#362](https://github.com/shelljs/shelljs/pull/362) ([nfischer](https://github.com/nfischer))\n- Refactor shellstring [\\#360](https://github.com/shelljs/shelljs/pull/360) ([nfischer](https://github.com/nfischer))\n- feat\\(glob\\): use glob module for globbing [\\#359](https://github.com/shelljs/shelljs/pull/359) ([nfischer](https://github.com/nfischer))\n- feat\\(set\\): add -f option to disable globbing [\\#358](https://github.com/shelljs/shelljs/pull/358) ([nfischer](https://github.com/nfischer))\n- config.fatal now throws an exception [\\#357](https://github.com/shelljs/shelljs/pull/357) ([jrmclaurin](https://github.com/jrmclaurin))\n- fix\\(exec\\): temp files are now cleaned up [\\#354](https://github.com/shelljs/shelljs/pull/354) ([nfischer](https://github.com/nfischer))\n- feat\\(glob\\): glob support for \\(almost\\) all commands [\\#352](https://github.com/shelljs/shelljs/pull/352) ([nfischer](https://github.com/nfischer))\n- feat\\(grep\\): add -l option [\\#349](https://github.com/shelljs/shelljs/pull/349) ([nfischer](https://github.com/nfischer))\n- fix\\(exec\\): now actually supports shell option [\\#348](https://github.com/shelljs/shelljs/pull/348) ([nfischer](https://github.com/nfischer))\n- feat\\(touch\\): supports multiple files [\\#346](https://github.com/shelljs/shelljs/pull/346) ([nfischer](https://github.com/nfischer))\n\n## [v0.6.0](https://github.com/shelljs/shelljs/tree/v0.6.0) (2016-02-05)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.3...v0.6.0)\n\n**Closed issues:**\n\n- option not recognized [\\#334](https://github.com/shelljs/shelljs/issues/334)\n- Feature request: Metadata with `ls` [\\#323](https://github.com/shelljs/shelljs/issues/323)\n- Gen-docs is broken [\\#309](https://github.com/shelljs/shelljs/issues/309)\n- `link -s` is broken for files on Windows [\\#301](https://github.com/shelljs/shelljs/issues/301)\n- Shelljs quits unexpectedly: [\\#300](https://github.com/shelljs/shelljs/issues/300)\n- Failing tests on Windows [\\#296](https://github.com/shelljs/shelljs/issues/296)\n- run-tests.js is broken for cmd.exe [\\#294](https://github.com/shelljs/shelljs/issues/294)\n- Support echo-ing environment variables [\\#291](https://github.com/shelljs/shelljs/issues/291)\n- Add Windows CI [\\#287](https://github.com/shelljs/shelljs/issues/287)\n- Add tests for the shjs utility [\\#280](https://github.com/shelljs/shelljs/issues/280)\n- Allow shjs utility to infer the extension for \"filename.\" [\\#278](https://github.com/shelljs/shelljs/issues/278)\n- Ability to read the stdout buffer line-by-line [\\#277](https://github.com/shelljs/shelljs/issues/277)\n- Poor output for commands with multiple errors [\\#267](https://github.com/shelljs/shelljs/issues/267)\n- Travis ci build status says \"unknown\" [\\#266](https://github.com/shelljs/shelljs/issues/266)\n- wild card characters in filename not working as expected [\\#262](https://github.com/shelljs/shelljs/issues/262)\n- shell.exec - read internal variable [\\#260](https://github.com/shelljs/shelljs/issues/260)\n- cp and rename directory with -r doesn't match unix behavior [\\#256](https://github.com/shelljs/shelljs/issues/256)\n- console.log.apply throwing TypeError: Illegal Invocation [\\#255](https://github.com/shelljs/shelljs/issues/255)\n- How to exit on first error [\\#253](https://github.com/shelljs/shelljs/issues/253)\n- why not support set 'cwd'  when invoke execAsync ? [\\#250](https://github.com/shelljs/shelljs/issues/250)\n- Not possible to check the failure of cd? [\\#247](https://github.com/shelljs/shelljs/issues/247)\n- By default shelljs runs command in root  [\\#246](https://github.com/shelljs/shelljs/issues/246)\n- /usr/bin/env: node: No such file or directory [\\#243](https://github.com/shelljs/shelljs/issues/243)\n- \"Which\" command not working properly on Windows Platform. [\\#238](https://github.com/shelljs/shelljs/issues/238)\n- Arguments [\\#237](https://github.com/shelljs/shelljs/issues/237)\n- sed\\(\\) should accept multiple file arguments [\\#231](https://github.com/shelljs/shelljs/issues/231)\n- shelljs.exec\\('aaa && bbb'\\) blocks [\\#229](https://github.com/shelljs/shelljs/issues/229)\n- Consider creating a GitHub Organization with more maintainers [\\#223](https://github.com/shelljs/shelljs/issues/223)\n- \\[idea\\] Add chmodr function. [\\#219](https://github.com/shelljs/shelljs/issues/219)\n- Execute a file [\\#211](https://github.com/shelljs/shelljs/issues/211)\n- Where is standard error going to? [\\#209](https://github.com/shelljs/shelljs/issues/209)\n- boolean return value for string.to\\(\\) [\\#205](https://github.com/shelljs/shelljs/issues/205)\n- `common.error` doesn't throw [\\#199](https://github.com/shelljs/shelljs/issues/199)\n- Problems with exec \\(sync\\) on 0.12/io.js [\\#197](https://github.com/shelljs/shelljs/issues/197)\n- cp --update flag [\\#172](https://github.com/shelljs/shelljs/issues/172)\n- Is there a way to suppress pushd/popd output? [\\#171](https://github.com/shelljs/shelljs/issues/171)\n- Cannot recursively list all \\*.js files [\\#162](https://github.com/shelljs/shelljs/issues/162)\n- exec\\(\\) breaks if executed in a deleted directory [\\#157](https://github.com/shelljs/shelljs/issues/157)\n- shjs command always exits with zero code [\\#133](https://github.com/shelljs/shelljs/issues/133)\n- touch command [\\#122](https://github.com/shelljs/shelljs/issues/122)\n- Symbolic links are broken! [\\#100](https://github.com/shelljs/shelljs/issues/100)\n- interpret `--` as stdin [\\#55](https://github.com/shelljs/shelljs/issues/55)\n- Error ENOTEMPTY when deleting a directory recursively. [\\#49](https://github.com/shelljs/shelljs/issues/49)\n- Cross-platform way to add to PATH [\\#32](https://github.com/shelljs/shelljs/issues/32)\n- `mv` fails on block, character, fifo [\\#25](https://github.com/shelljs/shelljs/issues/25)\n- ls -l [\\#22](https://github.com/shelljs/shelljs/issues/22)\n\n**Merged pull requests:**\n\n- feat\\(set\\): add new set\\(\\) command [\\#329](https://github.com/shelljs/shelljs/pull/329) ([nfischer](https://github.com/nfischer))\n- Fix symlinking on Windows [\\#322](https://github.com/shelljs/shelljs/pull/322) ([BYK](https://github.com/BYK))\n- Rewrite .gitignore to be more comprehensive [\\#321](https://github.com/shelljs/shelljs/pull/321) ([BYK](https://github.com/BYK))\n- chore\\(gitter/travis\\): add gitter webhook to travis [\\#313](https://github.com/shelljs/shelljs/pull/313) ([ariporad](https://github.com/ariporad))\n- chore\\(LGTM\\): add LGTM config files [\\#312](https://github.com/shelljs/shelljs/pull/312) ([ariporad](https://github.com/ariporad))\n- feat\\(ls\\): add -d flag to ls\\(\\) [\\#311](https://github.com/shelljs/shelljs/pull/311) ([nfischer](https://github.com/nfischer))\n- fix\\(gen-docs\\): fix issue where docs are generated wrong [\\#310](https://github.com/shelljs/shelljs/pull/310) ([nfischer](https://github.com/nfischer))\n- chore\\(package\\): remove v0.8 from engines list [\\#308](https://github.com/shelljs/shelljs/pull/308) ([nfischer](https://github.com/nfischer))\n- travis: Mark as not using `sudo` and do not test 0.11 [\\#307](https://github.com/shelljs/shelljs/pull/307) ([TimothyGu](https://github.com/TimothyGu))\n- fix: jshint works on Windows [\\#295](https://github.com/shelljs/shelljs/pull/295) ([nfischer](https://github.com/nfischer))\n- feat: add tilde expansion to expand\\(\\) [\\#293](https://github.com/shelljs/shelljs/pull/293) ([nfischer](https://github.com/nfischer))\n- style: make docs more consistent [\\#292](https://github.com/shelljs/shelljs/pull/292) ([nfischer](https://github.com/nfischer))\n- update `exec` docs to match implemented behaviour [\\#289](https://github.com/shelljs/shelljs/pull/289) ([vise890](https://github.com/vise890))\n- chore: update github URL in package.json [\\#288](https://github.com/shelljs/shelljs/pull/288) ([nfischer](https://github.com/nfischer))\n- docs\\(spelling\\): fix typo in source comment [\\#285](https://github.com/shelljs/shelljs/pull/285) ([nfischer](https://github.com/nfischer))\n- chore\\(travis\\): add OS X to Travis CI [\\#283](https://github.com/shelljs/shelljs/pull/283) ([nfischer](https://github.com/nfischer))\n- Don't do `console.log.apply\\(this, ...\\)`. [\\#274](https://github.com/shelljs/shelljs/pull/274) ([ariporad](https://github.com/ariporad))\n- Implementing cd\\('-'\\) to behave like Bash's \"cd -\" [\\#273](https://github.com/shelljs/shelljs/pull/273) ([nfischer](https://github.com/nfischer))\n- Fix cp to match unix behavior [\\#271](https://github.com/shelljs/shelljs/pull/271) ([freitagbr](https://github.com/freitagbr))\n- Commands that have multiple errors now produce cleaner log output [\\#268](https://github.com/shelljs/shelljs/pull/268) ([nfischer](https://github.com/nfischer))\n- Support exit code in shjs. [\\#252](https://github.com/shelljs/shelljs/pull/252) ([bryce-gibson](https://github.com/bryce-gibson))\n- add touch\\(1\\) [\\#249](https://github.com/shelljs/shelljs/pull/249) ([blockloop](https://github.com/blockloop))\n- Fix `os.tmpdir` bug [\\#240](https://github.com/shelljs/shelljs/pull/240) ([BYK](https://github.com/BYK))\n- Make sure Which\\(\\) on Windows platform always return the command with … [\\#239](https://github.com/shelljs/shelljs/pull/239) ([TingluoHuang](https://github.com/TingluoHuang))\n- Add target node.js \\(iojs v1, v2, v3\\) [\\#230](https://github.com/shelljs/shelljs/pull/230) ([sanemat](https://github.com/sanemat))\n- feat-multisymbolic + Support for directory entry \\(capital X in chmod terms\\) [\\#228](https://github.com/shelljs/shelljs/pull/228) ([rezonant](https://github.com/rezonant))\n- Fixes an issue with multi-symbolic mode specification \\(ie a-rwx,u+rw\\) [\\#227](https://github.com/shelljs/shelljs/pull/227) ([rezonant](https://github.com/rezonant))\n- Memoized the result of target invocation [\\#216](https://github.com/shelljs/shelljs/pull/216) ([rizowski](https://github.com/rizowski))\n- remove empty for loop and leaked i var [\\#166](https://github.com/shelljs/shelljs/pull/166) ([ratbeard](https://github.com/ratbeard))\n- Wrap script name in double quotes [\\#135](https://github.com/shelljs/shelljs/pull/135) ([ndelitski](https://github.com/ndelitski))\n- Fixed coffeescript syntax in top example [\\#99](https://github.com/shelljs/shelljs/pull/99) ([maxnordlund](https://github.com/maxnordlund))\n- fix\\(touch\\): enhance parseOptions and fix touch's -r flag [\\#341](https://github.com/shelljs/shelljs/pull/341) ([nfischer](https://github.com/nfischer))\n- chore\\(.npmignore\\): update npmignore [\\#339](https://github.com/shelljs/shelljs/pull/339) ([ariporad](https://github.com/ariporad))\n- Release v0.6.0 [\\#338](https://github.com/shelljs/shelljs/pull/338) ([ariporad](https://github.com/ariporad))\n- docs\\(README\\): remove coffeescript from README [\\#337](https://github.com/shelljs/shelljs/pull/337) ([ariporad](https://github.com/ariporad))\n- fix\\(cp\\): add -n option, make -f default behavior [\\#336](https://github.com/shelljs/shelljs/pull/336) ([nfischer](https://github.com/nfischer))\n- feat\\(exec\\): allow all exec options to pass through [\\#335](https://github.com/shelljs/shelljs/pull/335) ([nfischer](https://github.com/nfischer))\n- fix\\(mv\\): add -n option, make -f default behavior [\\#328](https://github.com/shelljs/shelljs/pull/328) ([nfischer](https://github.com/nfischer))\n- fix\\(cat\\): make behavior more like unix [\\#326](https://github.com/shelljs/shelljs/pull/326) ([nfischer](https://github.com/nfischer))\n- feat\\(ls\\): add -l  option [\\#324](https://github.com/shelljs/shelljs/pull/324) ([nfischer](https://github.com/nfischer))\n- style\\(test/which\\): make test/which.js conform to the style guidelines [\\#320](https://github.com/shelljs/shelljs/pull/320) ([ariporad](https://github.com/ariporad))\n- chore\\(appveyor\\): add badge [\\#316](https://github.com/shelljs/shelljs/pull/316) ([nfischer](https://github.com/nfischer))\n- fix\\(windows\\): fix shjs commands for windows [\\#315](https://github.com/shelljs/shelljs/pull/315) ([nfischer](https://github.com/nfischer))\n- feat\\(sed\\): support multiple file names [\\#314](https://github.com/shelljs/shelljs/pull/314) ([nfischer](https://github.com/nfischer))\n- feat\\(cd\\): cd\\(\\) \\(no args\\) changes to home directory [\\#306](https://github.com/shelljs/shelljs/pull/306) ([nfischer](https://github.com/nfischer))\n- test\\(shjs\\): add tests for shjs [\\#304](https://github.com/shelljs/shelljs/pull/304) ([ariporad](https://github.com/ariporad))\n- fix: regexes are more consistent with sed and grep [\\#303](https://github.com/shelljs/shelljs/pull/303) ([nfischer](https://github.com/nfischer))\n- Add appveyor.yml config file [\\#299](https://github.com/shelljs/shelljs/pull/299) ([nfischer](https://github.com/nfischer))\n- Fix tests on Windows [\\#297](https://github.com/shelljs/shelljs/pull/297) ([BYK](https://github.com/BYK))\n- Search PATHEXT instead of 3 hardcoded values [\\#290](https://github.com/shelljs/shelljs/pull/290) ([isiahmeadows](https://github.com/isiahmeadows))\n- Fix relative symlinks [\\#282](https://github.com/shelljs/shelljs/pull/282) ([freitagbr](https://github.com/freitagbr))\n- Make to and toEnd chainable [\\#276](https://github.com/shelljs/shelljs/pull/276) ([TimothyGu](https://github.com/TimothyGu))\n\n## [v0.5.3](https://github.com/shelljs/shelljs/tree/v0.5.3) (2015-08-11)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.2...v0.5.3)\n\n**Merged pull requests:**\n\n- Manually closing streams [\\#222](https://github.com/shelljs/shelljs/pull/222) ([JulianLaval](https://github.com/JulianLaval))\n\n## [v0.5.2](https://github.com/shelljs/shelljs/tree/v0.5.2) (2015-08-10)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.1...v0.5.2)\n\n**Closed issues:**\n\n- Cannot run shell.exec [\\#217](https://github.com/shelljs/shelljs/issues/217)\n- write after end: internal error [\\#206](https://github.com/shelljs/shelljs/issues/206)\n\n**Merged pull requests:**\n\n- Update README.md [\\#221](https://github.com/shelljs/shelljs/pull/221) ([giosh94mhz](https://github.com/giosh94mhz))\n- prevent internal error: write after end [\\#214](https://github.com/shelljs/shelljs/pull/214) ([charlierudolph](https://github.com/charlierudolph))\n\n## [v0.5.1](https://github.com/shelljs/shelljs/tree/v0.5.1) (2015-06-05)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.0...v0.5.1)\n\n**Closed issues:**\n\n- cd into home directory [\\#9](https://github.com/shelljs/shelljs/issues/9)\n\n**Merged pull requests:**\n\n- Fix issue \\#49: Retry rmdirSync on Windows for up to 1 second if files still exist. [\\#179](https://github.com/shelljs/shelljs/pull/179) ([andreialecu](https://github.com/andreialecu))\n\n## [v0.5.0](https://github.com/shelljs/shelljs/tree/v0.5.0) (2015-05-19)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.3.0...v0.5.0)\n\n**Closed issues:**\n\n- Enter text to prompt [\\#203](https://github.com/shelljs/shelljs/issues/203)\n- Find which shell is being used [\\#195](https://github.com/shelljs/shelljs/issues/195)\n- Pass command line params to the make tool [\\#188](https://github.com/shelljs/shelljs/issues/188)\n- Is it possible to call exec with a command containing new lines ? [\\#177](https://github.com/shelljs/shelljs/issues/177)\n- The installation would break on Windows 7 [\\#161](https://github.com/shelljs/shelljs/issues/161)\n- Q.ninvoke\\(\\) returns undefined [\\#153](https://github.com/shelljs/shelljs/issues/153)\n- installed shelljs on osx but reported error: npm ERR! 404 '%5B-g%5D' is not in the npm registry. [\\#124](https://github.com/shelljs/shelljs/issues/124)\n- \"ln\" not found \\(OS X\\) [\\#106](https://github.com/shelljs/shelljs/issues/106)\n- Using shelljs in a CLI app. [\\#91](https://github.com/shelljs/shelljs/issues/91)\n\n**Merged pull requests:**\n\n- Breaking: Allow -- as args separators \\(fixes \\#188\\) [\\#207](https://github.com/shelljs/shelljs/pull/207) ([nzakas](https://github.com/nzakas))\n- Update .travis.yml [\\#190](https://github.com/shelljs/shelljs/pull/190) ([arturadib](https://github.com/arturadib))\n- Use new child\\_process.execSync instead of busywaiting [\\#189](https://github.com/shelljs/shelljs/pull/189) ([madd512](https://github.com/madd512))\n- Update README.md: explains how to access \"config\" [\\#145](https://github.com/shelljs/shelljs/pull/145) ([kerphi](https://github.com/kerphi))\n- Fix to set state.error before throw the exception [\\#120](https://github.com/shelljs/shelljs/pull/120) ([abdul-martinez](https://github.com/abdul-martinez))\n- Add -l and -s support to grep. [\\#116](https://github.com/shelljs/shelljs/pull/116) ([idearat](https://github.com/idearat))\n\n## [v0.3.0](https://github.com/shelljs/shelljs/tree/v0.3.0) (2014-05-08)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.6...v0.3.0)\n\n**Closed issues:**\n\n- grep\\(\\) should fully support globing [\\#118](https://github.com/shelljs/shelljs/issues/118)\n- sed\\(\\) could support replacement function [\\#115](https://github.com/shelljs/shelljs/issues/115)\n- How would you close an exec process that runs indefinitely? [\\#113](https://github.com/shelljs/shelljs/issues/113)\n- listen for intermittent output of a long-running child process [\\#111](https://github.com/shelljs/shelljs/issues/111)\n-  Cannot find module 'shelljs' after installing shelljs with npm [\\#109](https://github.com/shelljs/shelljs/issues/109)\n- Massive CPU usage on exec\\(\\) windows [\\#108](https://github.com/shelljs/shelljs/issues/108)\n- cp skipping dot files? [\\#79](https://github.com/shelljs/shelljs/issues/79)\n- $variables in exec\\(\\) aren't handled correctly [\\#11](https://github.com/shelljs/shelljs/issues/11)\n- debug flag that prints commands instead of executing [\\#8](https://github.com/shelljs/shelljs/issues/8)\n\n**Merged pull requests:**\n\n- grep\\(\\) support for globing, fixes \\#118 [\\#119](https://github.com/shelljs/shelljs/pull/119) ([utensil](https://github.com/utensil))\n- make sed\\(\\) support replacement function, fixes \\#115 [\\#117](https://github.com/shelljs/shelljs/pull/117) ([utensil](https://github.com/utensil))\n- which\\(\\) should only find files, not directories [\\#110](https://github.com/shelljs/shelljs/pull/110) ([panrafal](https://github.com/panrafal))\n- Added the New BSD license to the package.json. [\\#105](https://github.com/shelljs/shelljs/pull/105) ([keskival](https://github.com/keskival))\n- Added win32 support to ln [\\#104](https://github.com/shelljs/shelljs/pull/104) ([jamon](https://github.com/jamon))\n- Fix ln using bad paths when given abspaths. [\\#89](https://github.com/shelljs/shelljs/pull/89) ([Schoonology](https://github.com/Schoonology))\n- Add ln support, including both -s and -f options. [\\#88](https://github.com/shelljs/shelljs/pull/88) ([Schoonology](https://github.com/Schoonology))\n- add support for symlinking \\(junctions\\) on win32 [\\#87](https://github.com/shelljs/shelljs/pull/87) ([jamon](https://github.com/jamon))\n\n## [v0.2.6](https://github.com/shelljs/shelljs/tree/v0.2.6) (2013-09-22)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.5...v0.2.6)\n\n**Closed issues:**\n\n- Versions 0.2.4 and 0.2.3 keep throwing strange errors [\\#82](https://github.com/shelljs/shelljs/issues/82)\n- Add global pollution tests [\\#33](https://github.com/shelljs/shelljs/issues/33)\n\n## [v0.2.5](https://github.com/shelljs/shelljs/tree/v0.2.5) (2013-09-11)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.4...v0.2.5)\n\n**Closed issues:**\n\n- shelljs.exec stalls on Red Hat when script is invoked with 'sudo -u username' [\\#72](https://github.com/shelljs/shelljs/issues/72)\n\n## [v0.2.4](https://github.com/shelljs/shelljs/tree/v0.2.4) (2013-09-11)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.3...v0.2.4)\n\n## [v0.2.3](https://github.com/shelljs/shelljs/tree/v0.2.3) (2013-09-09)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.2...v0.2.3)\n\n**Merged pull requests:**\n\n- Make shell.exec\\(\\) treat process error return codes as shelljs errors [\\#80](https://github.com/shelljs/shelljs/pull/80) ([nilsbunger](https://github.com/nilsbunger))\n\n## [v0.2.2](https://github.com/shelljs/shelljs/tree/v0.2.2) (2013-09-02)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.4...v0.2.2)\n\n**Closed issues:**\n\n- which and node\\_modules [\\#63](https://github.com/shelljs/shelljs/issues/63)\n- cannot install with nodejs 0.10.2 [\\#57](https://github.com/shelljs/shelljs/issues/57)\n\n**Merged pull requests:**\n\n- Addition of a toEnd\\(\\) function modeled after the Unix \\>\\> pipe. [\\#78](https://github.com/shelljs/shelljs/pull/78) ([a10y](https://github.com/a10y))\n- Added appendTo\\(\\) function to imitate '\\>\\>' redirect-and-append pipe. [\\#75](https://github.com/shelljs/shelljs/pull/75) ([a10y](https://github.com/a10y))\n- Fix a small typo in README.md [\\#71](https://github.com/shelljs/shelljs/pull/71) ([asmblah](https://github.com/asmblah))\n- adding an `.npmignore` file [\\#70](https://github.com/shelljs/shelljs/pull/70) ([stephenmathieson](https://github.com/stephenmathieson))\n- tempdir: use `os.tmpDir` when possible [\\#67](https://github.com/shelljs/shelljs/pull/67) ([stephenmathieson](https://github.com/stephenmathieson))\n\n## [v0.1.4](https://github.com/shelljs/shelljs/tree/v0.1.4) (2013-05-10)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.3...v0.1.4)\n\n**Merged pull requests:**\n\n- removing extra fs calls [\\#62](https://github.com/shelljs/shelljs/pull/62) ([stephenmathieson](https://github.com/stephenmathieson))\n- moving \\_jshint\\_ to a development dependency [\\#61](https://github.com/shelljs/shelljs/pull/61) ([stephenmathieson](https://github.com/stephenmathieson))\n- Make the maximum buffersize 20 MB. [\\#59](https://github.com/shelljs/shelljs/pull/59) ([waddlesplash](https://github.com/waddlesplash))\n\n## [v0.1.3](https://github.com/shelljs/shelljs/tree/v0.1.3) (2013-04-21)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.2...v0.1.3)\n\n**Merged pull requests:**\n\n- test\\('-L', badlink\\) should return true [\\#56](https://github.com/shelljs/shelljs/pull/56) ([lge88](https://github.com/lge88))\n- exec options now allows `silent:true` with callback. [\\#54](https://github.com/shelljs/shelljs/pull/54) ([iapain](https://github.com/iapain))\n- Add Zepto to README [\\#53](https://github.com/shelljs/shelljs/pull/53) ([madrobby](https://github.com/madrobby))\n\n## [v0.1.2](https://github.com/shelljs/shelljs/tree/v0.1.2) (2013-01-08)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.1...v0.1.2)\n\n**Closed issues:**\n\n- pushd/popd [\\#24](https://github.com/shelljs/shelljs/issues/24)\n\n**Merged pull requests:**\n\n- Implemented chmod command.  Github issue 35 [\\#48](https://github.com/shelljs/shelljs/pull/48) ([brandonramirez](https://github.com/brandonramirez))\n\n## [v0.1.1](https://github.com/shelljs/shelljs/tree/v0.1.1) (2013-01-01)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.0...v0.1.1)\n\n**Merged pull requests:**\n\n- Work in progress: pushd/popd/dirs [\\#47](https://github.com/shelljs/shelljs/pull/47) ([mstade](https://github.com/mstade))\n\n## [v0.1.0](https://github.com/shelljs/shelljs/tree/v0.1.0) (2012-12-26)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.9...v0.1.0)\n\n**Closed issues:**\n\n- test\\(\\) for binary file? [\\#45](https://github.com/shelljs/shelljs/issues/45)\n- Inconsistent behaviour of cp command with directories. [\\#44](https://github.com/shelljs/shelljs/issues/44)\n- Executing SSH with ShellJs [\\#43](https://github.com/shelljs/shelljs/issues/43)\n\n**Merged pull requests:**\n\n- Fix for \\#44 [\\#46](https://github.com/shelljs/shelljs/pull/46) ([mstade](https://github.com/mstade))\n- Fix single/double quotes in exec [\\#42](https://github.com/shelljs/shelljs/pull/42) ([danielepolencic](https://github.com/danielepolencic))\n\n## [v0.0.9](https://github.com/shelljs/shelljs/tree/v0.0.9) (2012-12-01)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.8...v0.0.9)\n\n**Closed issues:**\n\n- silent output [\\#40](https://github.com/shelljs/shelljs/issues/40)\n- asynchronous exec [\\#34](https://github.com/shelljs/shelljs/issues/34)\n\n**Merged pull requests:**\n\n- Passed process arguments to executable script [\\#36](https://github.com/shelljs/shelljs/pull/36) ([Zanisimo](https://github.com/Zanisimo))\n\n## [v0.0.8](https://github.com/shelljs/shelljs/tree/v0.0.8) (2012-10-11)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.7...v0.0.8)\n\n**Closed issues:**\n\n- exec with callback should automatically be async [\\#31](https://github.com/shelljs/shelljs/issues/31)\n- Exporting variables. [\\#30](https://github.com/shelljs/shelljs/issues/30)\n- Detecting shelljs/node [\\#27](https://github.com/shelljs/shelljs/issues/27)\n\n**Merged pull requests:**\n\n- fix: global leak 'stats' [\\#29](https://github.com/shelljs/shelljs/pull/29) ([ando-takahiro](https://github.com/ando-takahiro))\n- -a includes . and ..; -A does not [\\#28](https://github.com/shelljs/shelljs/pull/28) ([aeosynth](https://github.com/aeosynth))\n\n## [v0.0.7](https://github.com/shelljs/shelljs/tree/v0.0.7) (2012-09-23)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.6...v0.0.7)\n\n**Closed issues:**\n\n- gh-pages: clicking 'fork me' just reloads the page [\\#26](https://github.com/shelljs/shelljs/issues/26)\n- Not declared local var implies possible memory leak [\\#21](https://github.com/shelljs/shelljs/issues/21)\n- Cannot echo a string that starts with - [\\#20](https://github.com/shelljs/shelljs/issues/20)\n- Unexpected cp behaviour with directories [\\#15](https://github.com/shelljs/shelljs/issues/15)\n\n**Merged pull requests:**\n\n- add primaries to \\_test [\\#23](https://github.com/shelljs/shelljs/pull/23) ([aeosynth](https://github.com/aeosynth))\n\n## [v0.0.6](https://github.com/shelljs/shelljs/tree/v0.0.6) (2012-08-07)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.6pre2...v0.0.6)\n\n**Merged pull requests:**\n\n- Fixed a global variable leak [\\#16](https://github.com/shelljs/shelljs/pull/16) ([dallonf](https://github.com/dallonf))\n\n## [v0.0.6pre2](https://github.com/shelljs/shelljs/tree/v0.0.6pre2) (2012-05-25)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.6pre1...v0.0.6pre2)\n\n## [v0.0.6pre1](https://github.com/shelljs/shelljs/tree/v0.0.6pre1) (2012-05-25)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5...v0.0.6pre1)\n\n## [v0.0.5](https://github.com/shelljs/shelljs/tree/v0.0.5) (2012-05-24)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre4...v0.0.5)\n\n**Closed issues:**\n\n- global.key assigned value 'async' as a result of shell.exec\\(...\\) [\\#12](https://github.com/shelljs/shelljs/issues/12)\n\n**Merged pull requests:**\n\n- Add support for grep option -v. [\\#13](https://github.com/shelljs/shelljs/pull/13) ([kkujala](https://github.com/kkujala))\n\n## [v0.0.5pre4](https://github.com/shelljs/shelljs/tree/v0.0.5pre4) (2012-03-27)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre3...v0.0.5pre4)\n\n## [v0.0.5pre3](https://github.com/shelljs/shelljs/tree/v0.0.5pre3) (2012-03-27)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre2...v0.0.5pre3)\n\n## [v0.0.5pre2](https://github.com/shelljs/shelljs/tree/v0.0.5pre2) (2012-03-26)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre1...v0.0.5pre2)\n\n## [v0.0.5pre1](https://github.com/shelljs/shelljs/tree/v0.0.5pre1) (2012-03-26)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.4...v0.0.5pre1)\n\n**Closed issues:**\n\n- rm\\(\\) does not respect read/write modes [\\#6](https://github.com/shelljs/shelljs/issues/6)\n\n## [v0.0.4](https://github.com/shelljs/shelljs/tree/v0.0.4) (2012-03-22)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.3...v0.0.4)\n\n**Closed issues:**\n\n- \"For convenient iteration via `for in`, ...\"? [\\#4](https://github.com/shelljs/shelljs/issues/4)\n\n## [v0.0.3](https://github.com/shelljs/shelljs/tree/v0.0.3) (2012-03-21)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.2...v0.0.3)\n\n## [v0.0.2](https://github.com/shelljs/shelljs/tree/v0.0.2) (2012-03-15)\n[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.2pre1...v0.0.2)\n\n## [v0.0.2pre1](https://github.com/shelljs/shelljs/tree/v0.0.2pre1) (2012-03-03)\n\n\n\\* *This Change Log was automatically generated by [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.044921875,
          "content": "# Contributing\n\n## Filing a bug report\n\nWe love to receive bug reports (we're always trying to make ShellJS more\nstable). If you've found a bug, please follow these steps:\n\n - Please try to cut down on duplicates. Please search for issues which have\n   already been reported (remember to search closed issues).\n - Please see [`ISSUE_TEMPLATE.md`](.github/ISSUE_TEMPLATE.md) for more\n   information.\n\n## Pull requests\n\nPRs are welcome! However, we ask that you follow a few guidelines:\n\n - Please add tests for all changes/new features.\n - Make sure your code passes `npm test`. Please check the CI. If you can't\n   figure out why something doesn't work, feel free to ask for help.\n - Make sure you conform to our style guidelines. You can run `npm run lint` to\n   check style, and `npm run lint -- --fix` to automatically fix some issues.\n - Make documentation changes *within the source files*, not in the README.\n   Update the README with `npm run gendocs`.\n - Please keep your PR up to date (either via rebase or by pressing the \"update\n   branch\" button on Github).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.49609375,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2012, Artur Adib <arturadib@gmail.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.1240234375,
          "content": "# ShellJS - Unix shell commands for Node.js\n\n[![GitHub Actions](https://img.shields.io/github/actions/workflow/status/shelljs/shelljs/main.yml?style=flat-square&logo=github)](https://github.com/shelljs/shelljs/actions/workflows/main.yml)\n[![Codecov](https://img.shields.io/codecov/c/github/shelljs/shelljs/master.svg?style=flat-square&label=coverage)](https://codecov.io/gh/shelljs/shelljs)\n[![npm version](https://img.shields.io/npm/v/shelljs.svg?style=flat-square)](https://www.npmjs.com/package/shelljs)\n[![npm downloads](https://img.shields.io/npm/dm/shelljs.svg?style=flat-square)](https://www.npmjs.com/package/shelljs)\n\nShellJS is a portable **(Windows/Linux/macOS)** implementation of Unix shell\ncommands on top of the Node.js API. You can use it to eliminate your shell\nscript's dependency on Unix while still keeping its familiar and powerful\ncommands. You can also install it globally so you can run it from outside Node\nprojects - say goodbye to those gnarly Bash scripts!\n\nShellJS is proudly tested on every node release since <!-- start minVersion -->`v8`<!-- stop minVersion -->!\n\nThe project is unit-tested and battle-tested in projects like:\n\n+ [Firebug](http://getfirebug.com/) - Firefox's infamous debugger\n+ [JSHint](http://jshint.com) & [ESLint](http://eslint.org/) - popular JavaScript linters\n+ [Zepto](http://zeptojs.com) - jQuery-compatible JavaScript library for modern browsers\n+ [Yeoman](http://yeoman.io/) - Web application stack and development tool\n+ [Deployd.com](http://deployd.com) - Open source PaaS for quick API backend generation\n+ And [many more](https://npmjs.org/browse/depended/shelljs).\n\nIf you have feedback, suggestions, or need help, feel free to post in our [issue\ntracker](https://github.com/shelljs/shelljs/issues).\n\nThink ShellJS is cool? Check out some related projects in our [Wiki\npage](https://github.com/shelljs/shelljs/wiki)!\n\nUpgrading from an older version? Check out our [breaking\nchanges](https://github.com/shelljs/shelljs/wiki/Breaking-Changes) page to see\nwhat changes to watch out for while upgrading.\n\n## Command line use\n\nIf you just want cross platform UNIX commands, checkout our new project\n[shelljs/shx](https://github.com/shelljs/shx), a utility to expose `shelljs` to\nthe command line.\n\nFor example:\n\n```\n$ shx mkdir -p foo\n$ shx touch foo/bar.txt\n$ shx rm -rf foo\n```\n\n## Plugin API\n\nShellJS now supports third-party plugins! You can learn more about using plugins\nand writing your own ShellJS commands in [the\nwiki](https://github.com/shelljs/shelljs/wiki/Using-ShellJS-Plugins).\n\n## A quick note about the docs\n\nFor documentation on all the latest features, check out our\n[README](https://github.com/shelljs/shelljs). To read docs that are consistent\nwith the latest release, check out [the npm\npage](https://www.npmjs.com/package/shelljs).\n\n## Installing\n\nVia npm:\n\n```bash\n$ npm install [-g] shelljs\n```\n\n## Examples\n\n```javascript\nvar shell = require('shelljs');\n\nif (!shell.which('git')) {\n  shell.echo('Sorry, this script requires git');\n  shell.exit(1);\n}\n\n// Copy files to release dir\nshell.rm('-rf', 'out/Release');\nshell.cp('-R', 'stuff/', 'out/Release');\n\n// Replace macros in each .js file\nshell.cd('lib');\nshell.ls('*.js').forEach(function (file) {\n  shell.sed('-i', 'BUILD_VERSION', 'v0.1.2', file);\n  shell.sed('-i', /^.*REMOVE_THIS_LINE.*$/, '', file);\n  shell.sed('-i', /.*REPLACE_LINE_WITH_MACRO.*\\n/, shell.cat('macro.js'), file);\n});\nshell.cd('..');\n\n// Run external tool synchronously\nif (shell.exec('git commit -am \"Auto-commit\"').code !== 0) {\n  shell.echo('Error: Git commit failed');\n  shell.exit(1);\n}\n```\n\n## Exclude options\n\nIf you need to pass a parameter that looks like an option, you can do so like:\n\n```js\nshell.grep('--', '-v', 'path/to/file'); // Search for \"-v\", no grep options\n\nshell.cp('-R', '-dir', 'outdir'); // If already using an option, you're done\n```\n\n## Global vs. Local\n\nWe no longer recommend using a global-import for ShellJS (i.e.\n`require('shelljs/global')`). While still supported for convenience, this\npollutes the global namespace, and should therefore only be used with caution.\n\nInstead, we recommend a local import (standard for npm packages):\n\n```javascript\nvar shell = require('shelljs');\nshell.echo('hello world');\n```\n\nAlternatively, we also support importing as a module with:\n\n```javascript\nimport shell from 'shelljs';\nshell.echo('hello world');\n```\n\n<!-- DO NOT MODIFY BEYOND THIS POINT - IT'S AUTOMATICALLY GENERATED -->\n\n\n## Command reference\n\n\nAll commands run synchronously, unless otherwise stated.\nAll commands accept standard bash globbing characters (`*`, `?`, etc.),\ncompatible with the [node `glob` module](https://github.com/isaacs/node-glob).\n\nFor less-commonly used commands and features, please check out our [wiki\npage](https://github.com/shelljs/shelljs/wiki).\n\n\n### cat([options,] file [, file ...])\n### cat([options,] file_array)\n\nAvailable options:\n\n+ `-n`: number all output lines\n\nExamples:\n\n```javascript\nvar str = cat('file*.txt');\nvar str = cat('file1', 'file2');\nvar str = cat(['file1', 'file2']); // same as above\n```\n\nReturns a [ShellString](#shellstringstr) containing the given file, or a\nconcatenated string containing the files if more than one file is given (a\nnew line character is introduced between each file).\n\n\n### cd([dir])\n\nChanges to directory `dir` for the duration of the script. Changes to home\ndirectory if no argument is supplied. Returns a\n[ShellString](#shellstringstr) to indicate success or failure.\n\n\n### chmod([options,] octal_mode || octal_string, file)\n### chmod([options,] symbolic_mode, file)\n\nAvailable options:\n\n+ `-v`: output a diagnostic for every file processed\n+ `-c`: like verbose, but report only when a change is made\n+ `-R`: change files and directories recursively\n\nExamples:\n\n```javascript\nchmod(755, '/Users/brandon');\nchmod('755', '/Users/brandon'); // same as above\nchmod('u+x', '/Users/brandon');\nchmod('-R', 'a-w', '/Users/brandon');\n```\n\nAlters the permissions of a file or directory by either specifying the\nabsolute permissions in octal form or expressing the changes in symbols.\nThis command tries to mimic the POSIX behavior as much as possible.\nNotable exceptions:\n\n+ In symbolic modes, `a-r` and `-r` are identical.  No consideration is\n  given to the `umask`.\n+ There is no \"quiet\" option, since default behavior is to run silent.\n+ Windows OS uses a very different permission model than POSIX. `chmod()`\n  does its best on Windows, but there are limits to how file permissions can\n  be set. Note that WSL (Windows subsystem for Linux) **does** follow POSIX,\n  so cross-platform compatibility should not be a concern there.\n\nReturns a [ShellString](#shellstringstr) indicating success or failure.\n\n\n### cp([options,] source [, source ...], dest)\n### cp([options,] source_array, dest)\n\nAvailable options:\n\n+ `-f`: force (default behavior)\n+ `-n`: no-clobber\n+ `-u`: only copy if `source` is newer than `dest`\n+ `-r`, `-R`: recursive\n+ `-L`: follow symlinks\n+ `-P`: don't follow symlinks\n+ `-p`: preserve file mode, ownership, and timestamps\n\nExamples:\n\n```javascript\ncp('file1', 'dir1');\ncp('-R', 'path/to/dir/', '~/newCopy/');\ncp('-Rf', '/tmp/*', '/usr/local/*', '/home/tmp');\ncp('-Rf', ['/tmp/*', '/usr/local/*'], '/home/tmp'); // same as above\n```\n\nCopies files. Returns a [ShellString](#shellstringstr) indicating success\nor failure.\n\n\n### pushd([options,] [dir | '-N' | '+N'])\n\nAvailable options:\n\n+ `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\n+ `-q`: Suppresses output to the console.\n\nArguments:\n\n+ `dir`: Sets the current working directory to the top of the stack, then executes the equivalent of `cd dir`.\n+ `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n+ `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n\nExamples:\n\n```javascript\n// process.cwd() === '/usr'\npushd('/etc'); // Returns /etc /usr\npushd('+1');   // Returns /usr /etc\n```\n\nSave the current directory on the top of the directory stack and then `cd` to `dir`. With no arguments, `pushd` exchanges the top two directories. Returns an array of paths in the stack.\n\n\n### popd([options,] ['-N' | '+N'])\n\nAvailable options:\n\n+ `-n`: Suppress the normal directory change when removing directories from the stack, so that only the stack is manipulated.\n+ `-q`: Suppresses output to the console.\n\nArguments:\n\n+ `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\n+ `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\n\nExamples:\n\n```javascript\necho(process.cwd()); // '/usr'\npushd('/etc');       // '/etc /usr'\necho(process.cwd()); // '/etc'\npopd();              // '/usr'\necho(process.cwd()); // '/usr'\n```\n\nWhen no arguments are given, `popd` removes the top directory from the stack and performs a `cd` to the new top directory. The elements are numbered from 0, starting at the first directory listed with dirs (i.e., `popd` is equivalent to `popd +0`). Returns an array of paths in the stack.\n\n\n### dirs([options | '+N' | '-N'])\n\nAvailable options:\n\n+ `-c`: Clears the directory stack by deleting all of the elements.\n+ `-q`: Suppresses output to the console.\n\nArguments:\n\n+ `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\n+ `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\n\nDisplay the list of currently remembered directories. Returns an array of paths in the stack, or a single path if `+N` or `-N` was specified.\n\nSee also: `pushd`, `popd`\n\n\n### echo([options,] string [, string ...])\n\nAvailable options:\n\n+ `-e`: interpret backslash escapes (default)\n+ `-n`: remove trailing newline from output\n\nExamples:\n\n```javascript\necho('hello world');\nvar str = echo('hello world');\necho('-n', 'no newline at end');\n```\n\nPrints `string` to stdout, and returns a [ShellString](#shellstringstr).\n\n\n### exec(command [, options] [, callback])\n\nAvailable options:\n\n+ `async`: Asynchronous execution. If a callback is provided, it will be set to\n  `true`, regardless of the passed value (default: `false`).\n+ `fatal`: Exit upon error (default: `false`).\n+ `silent`: Do not echo program output to console (default: `false`).\n+ `encoding`: Character encoding to use. Affects the values returned to stdout and stderr, and\n  what is written to stdout and stderr when not in silent mode (default: `'utf8'`).\n+ and any option available to Node.js's\n  [`child_process.exec()`](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback)\n\nExamples:\n\n```javascript\nvar version = exec('node --version', {silent:true}).stdout;\n\nvar child = exec('some_long_running_process', {async:true});\nchild.stdout.on('data', function(data) {\n  /* ... do something with data ... */\n});\n\nexec('some_long_running_process', function(code, stdout, stderr) {\n  console.log('Exit code:', code);\n  console.log('Program output:', stdout);\n  console.log('Program stderr:', stderr);\n});\n```\n\nExecutes the given `command` _synchronously_, unless otherwise specified.\nWhen in synchronous mode, this returns a [ShellString](#shellstringstr).\nOtherwise, this returns the child process object, and the `callback`\nreceives the arguments `(code, stdout, stderr)`.\n\nNot seeing the behavior you want? `exec()` runs everything through `sh`\nby default (or `cmd.exe` on Windows), which differs from `bash`. If you\nneed bash-specific behavior, try out the `{shell: 'path/to/bash'}` option.\n\n**Security note:** as `shell.exec()` executes an arbitrary string in the\nsystem shell, it is **critical** to properly sanitize user input to avoid\n**command injection**. For more context, consult the [Security\nGuidelines](https://github.com/shelljs/shelljs/wiki/Security-guidelines).\n\n\n### find(path [, path ...])\n### find(path_array)\n\nExamples:\n\n```javascript\nfind('src', 'lib');\nfind(['src', 'lib']); // same as above\nfind('.').filter(function(file) { return file.match(/\\.js$/); });\n```\n\nReturns a [ShellString](#shellstringstr) (with array-like properties) of all\nfiles (however deep) in the given paths.\n\nThe main difference from `ls('-R', path)` is that the resulting file names\ninclude the base directories (e.g., `lib/resources/file1` instead of just `file1`).\n\n\n### grep([options,] regex_filter, file [, file ...])\n### grep([options,] regex_filter, file_array)\n\nAvailable options:\n\n+ `-v`: Invert `regex_filter` (only print non-matching lines).\n+ `-l`: Print only filenames of matching files.\n+ `-i`: Ignore case.\n+ `-n`: Print line numbers.\n\nExamples:\n\n```javascript\ngrep('-v', 'GLOBAL_VARIABLE', '*.js');\ngrep('GLOBAL_VARIABLE', '*.js');\n```\n\nReads input string from given files and returns a\n[ShellString](#shellstringstr) containing all lines of the @ file that match\nthe given `regex_filter`.\n\n\n### head([{'-n': \\<num\\>},] file [, file ...])\n### head([{'-n': \\<num\\>},] file_array)\n\nAvailable options:\n\n+ `-n <num>`: Show the first `<num>` lines of the files\n\nExamples:\n\n```javascript\nvar str = head({'-n': 1}, 'file*.txt');\nvar str = head('file1', 'file2');\nvar str = head(['file1', 'file2']); // same as above\n```\n\nRead the start of a `file`. Returns a [ShellString](#shellstringstr).\n\n\n### ln([options,] source, dest)\n\nAvailable options:\n\n+ `-s`: symlink\n+ `-f`: force\n\nExamples:\n\n```javascript\nln('file', 'newlink');\nln('-sf', 'file', 'existing');\n```\n\nLinks `source` to `dest`. Use `-f` to force the link, should `dest` already\nexist. Returns a [ShellString](#shellstringstr) indicating success or\nfailure.\n\n\n### ls([options,] [path, ...])\n### ls([options,] path_array)\n\nAvailable options:\n\n+ `-R`: recursive\n+ `-A`: all files (include files beginning with `.`, except for `.` and `..`)\n+ `-L`: follow symlinks\n+ `-d`: list directories themselves, not their contents\n+ `-l`: provides more details for each file. Specifically, each file is\n        represented by a structured object with separate fields for file\n        metadata (see\n        [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats)). The\n        return value also overrides `.toString()` to resemble `ls -l`'s\n        output format for human readability, but programmatic usage should\n        depend on the stable object format rather than the `.toString()`\n        representation.\n\nExamples:\n\n```javascript\nls('projs/*.js');\nls('projs/**/*.js'); // Find all js files recursively in projs\nls('-R', '/users/me', '/tmp');\nls('-R', ['/users/me', '/tmp']); // same as above\nls('-l', 'file.txt'); // { name: 'file.txt', mode: 33188, nlink: 1, ...}\n```\n\nReturns a [ShellString](#shellstringstr) (with array-like properties) of all\nthe files in the given `path`, or files in the current directory if no\n`path` is  provided.\n\n\n### mkdir([options,] dir [, dir ...])\n### mkdir([options,] dir_array)\n\nAvailable options:\n\n+ `-p`: full path (and create intermediate directories, if necessary)\n\nExamples:\n\n```javascript\nmkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\nmkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n```\n\nCreates directories. Returns a [ShellString](#shellstringstr) indicating\nsuccess or failure.\n\n\n### mv([options ,] source [, source ...], dest')\n### mv([options ,] source_array, dest')\n\nAvailable options:\n\n+ `-f`: force (default behavior)\n+ `-n`: no-clobber\n\nExamples:\n\n```javascript\nmv('-n', 'file', 'dir/');\nmv('file1', 'file2', 'dir/');\nmv(['file1', 'file2'], 'dir/'); // same as above\n```\n\nMoves `source` file(s) to `dest`. Returns a [ShellString](#shellstringstr)\nindicating success or failure.\n\n\n### pwd()\n\nReturns the current directory as a [ShellString](#shellstringstr).\n\n\n### rm([options,] file [, file ...])\n### rm([options,] file_array)\n\nAvailable options:\n\n+ `-f`: force\n+ `-r, -R`: recursive\n\nExamples:\n\n```javascript\nrm('-rf', '/tmp/*');\nrm('some_file.txt', 'another_file.txt');\nrm(['some_file.txt', 'another_file.txt']); // same as above\n```\n\nRemoves files. Returns a [ShellString](#shellstringstr) indicating success\nor failure.\n\n\n### sed([options,] search_regex, replacement, file [, file ...])\n### sed([options,] search_regex, replacement, file_array)\n\nAvailable options:\n\n+ `-i`: Replace contents of `file` in-place. _Note that no backups will be created!_\n\nExamples:\n\n```javascript\nsed('-i', 'PROGRAM_VERSION', 'v0.1.3', 'source.js');\n```\n\nReads an input string from `file`s, line by line, and performs a JavaScript `replace()` on\neach of the lines from the input string using the given `search_regex` and `replacement` string or\nfunction. Returns the new [ShellString](#shellstringstr) after replacement.\n\nNote:\n\nLike unix `sed`, ShellJS `sed` supports capture groups. Capture groups are specified\nusing the `$n` syntax:\n\n```javascript\nsed(/(\\w+)\\s(\\w+)/, '$2, $1', 'file.txt');\n```\n\nAlso, like unix `sed`, ShellJS `sed` runs replacements on each line from the input file\n(split by '\\n') separately, so `search_regex`es that span more than one line (or include '\\n')\nwill not match anything and nothing will be replaced.\n\n\n### set(options)\n\nAvailable options:\n\n+ `+/-e`: exit upon error (`config.fatal`)\n+ `+/-v`: verbose: show all commands (`config.verbose`)\n+ `+/-f`: disable filename expansion (globbing)\n\nExamples:\n\n```javascript\nset('-e'); // exit upon first error\nset('+e'); // this undoes a \"set('-e')\"\n```\n\nSets global configuration variables.\n\n\n### sort([options,] file [, file ...])\n### sort([options,] file_array)\n\nAvailable options:\n\n+ `-r`: Reverse the results\n+ `-n`: Compare according to numerical value\n\nExamples:\n\n```javascript\nsort('foo.txt', 'bar.txt');\nsort('-r', 'foo.txt');\n```\n\nReturn the contents of the `file`s, sorted line-by-line as a\n[ShellString](#shellstringstr). Sorting multiple files mixes their content\n(just as unix `sort` does).\n\n\n### tail([{'-n': \\<num\\>},] file [, file ...])\n### tail([{'-n': \\<num\\>},] file_array)\n\nAvailable options:\n\n+ `-n <num>`: Show the last `<num>` lines of `file`s\n\nExamples:\n\n```javascript\nvar str = tail({'-n': 1}, 'file*.txt');\nvar str = tail('file1', 'file2');\nvar str = tail(['file1', 'file2']); // same as above\n```\n\nRead the end of a `file`. Returns a [ShellString](#shellstringstr).\n\n\n### tempdir()\n\nExamples:\n\n```javascript\nvar tmp = tempdir(); // \"/tmp\" for most *nix platforms\n```\n\nSearches and returns string containing a writeable, platform-dependent temporary directory.\nFollows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\n\n\n### test(expression)\n\nAvailable expression primaries:\n\n+ `'-b', 'path'`: true if path is a block device\n+ `'-c', 'path'`: true if path is a character device\n+ `'-d', 'path'`: true if path is a directory\n+ `'-e', 'path'`: true if path exists\n+ `'-f', 'path'`: true if path is a regular file\n+ `'-L', 'path'`: true if path is a symbolic link\n+ `'-p', 'path'`: true if path is a pipe (FIFO)\n+ `'-S', 'path'`: true if path is a socket\n\nExamples:\n\n```javascript\nif (test('-d', path)) { /* do something with dir */ };\nif (!test('-f', path)) continue; // skip if it's not a regular file\n```\n\nEvaluates `expression` using the available primaries and returns\ncorresponding boolean value.\n\n\n### ShellString.prototype.to(file)\n\nExamples:\n\n```javascript\ncat('input.txt').to('output.txt');\n```\n\nAnalogous to the redirection operator `>` in Unix, but works with\n`ShellStrings` (such as those returned by `cat`, `grep`, etc.). _Like Unix\nredirections, `to()` will overwrite any existing file!_ Returns the same\n[ShellString](#shellstringstr) this operated on, to support chaining.\n\n\n### ShellString.prototype.toEnd(file)\n\nExamples:\n\n```javascript\ncat('input.txt').toEnd('output.txt');\n```\n\nAnalogous to the redirect-and-append operator `>>` in Unix, but works with\n`ShellStrings` (such as those returned by `cat`, `grep`, etc.). Returns the\nsame [ShellString](#shellstringstr) this operated on, to support chaining.\n\n\n### touch([options,] file [, file ...])\n### touch([options,] file_array)\n\nAvailable options:\n\n+ `-a`: Change only the access time\n+ `-c`: Do not create any files\n+ `-m`: Change only the modification time\n+ `{'-d': someDate}`, `{date: someDate}`: Use a `Date` instance (ex. `someDate`)\n  instead of current time\n+ `{'-r': file}`, `{reference: file}`: Use `file`'s times instead of current\n  time\n\nExamples:\n\n```javascript\ntouch('source.js');\ntouch('-c', 'path/to/file.js');\ntouch({ '-r': 'referenceFile.txt' }, 'path/to/file.js');\ntouch({ '-d': new Date('December 17, 1995 03:24:00'), '-m': true }, 'path/to/file.js');\ntouch({ date: new Date('December 17, 1995 03:24:00') }, 'path/to/file.js');\n```\n\nUpdate the access and modification times of each file to the current time.\nA file argument that does not exist is created empty, unless `-c` is supplied.\nThis is a partial implementation of\n[`touch(1)`](http://linux.die.net/man/1/touch). Returns a\n[ShellString](#shellstringstr) indicating success or failure.\n\n\n### uniq([options,] [input, [output]])\n\nAvailable options:\n\n+ `-i`: Ignore case while comparing\n+ `-c`: Prefix lines by the number of occurrences\n+ `-d`: Only print duplicate lines, one for each group of identical lines\n\nExamples:\n\n```javascript\nuniq('foo.txt');\nuniq('-i', 'foo.txt');\nuniq('-cd', 'foo.txt', 'bar.txt');\n```\n\nFilter adjacent matching lines from `input`. Returns a\n[ShellString](#shellstringstr).\n\n\n### which(command)\n\nExamples:\n\n```javascript\nvar nodeExec = which('node');\n```\n\nSearches for `command` in the system's `PATH`. On Windows, this uses the\n`PATHEXT` variable to append the extension if it's not already executable.\nReturns a [ShellString](#shellstringstr) containing the absolute path to\n`command`.\n\n\n### exit(code)\n\nExits the current process with the given exit `code`.\n\n### error()\n\nTests if error occurred in the last command. Returns a truthy value if an\nerror returned, or a falsy value otherwise.\n\n**Note**: do not rely on the\nreturn value to be an error message. If you need the last error message, use\nthe `.stderr` attribute from the last command's return value instead.\n\n\n### errorCode()\n\nReturns the error code from the last command.\n\n\n### ShellString(str)\n\nExamples:\n\n```javascript\nvar foo = new ShellString('hello world');\n```\n\nThis is a dedicated type returned by most ShellJS methods, which wraps a\nstring (or array) value. This has all the string (or array) methods, but\nalso exposes extra methods: [`.to()`](#shellstringprototypetofile),\n[`.toEnd()`](#shellstringprototypetoendfile), and all the pipe-able methods\n(ex. `.cat()`, `.grep()`, etc.). This can be easily converted into a string\nby calling `.toString()`.\n\nThis type also exposes the corresponding command's stdout, stderr, and\nreturn status code via the `.stdout` (string), `.stderr` (string), and\n`.code` (number) properties respectively.\n\n\n### env['VAR_NAME']\n\nObject containing environment variables (both getter and setter). Shortcut\nto `process.env`.\n\n### Pipes\n\nExamples:\n\n```javascript\ngrep('foo', 'file1.txt', 'file2.txt').sed(/o/g, 'a').to('output.txt');\necho('files with o\\'s in the name:\\n' + ls().grep('o'));\ncat('test.js').exec('node'); // pipe to exec() call\n```\n\nCommands can send their output to another command in a pipe-like fashion.\n`sed`, `grep`, `cat`, `exec`, `to`, and `toEnd` can appear on the right-hand\nside of a pipe. Pipes can be chained.\n\n## Configuration\n\n\n### config.silent\n\nExample:\n\n```javascript\nvar sh = require('shelljs');\nvar silentState = sh.config.silent; // save old silent state\nsh.config.silent = true;\n/* ... */\nsh.config.silent = silentState; // restore old silent state\n```\n\nSuppresses all command output if `true`, except for `echo()` calls.\nDefault is `false`.\n\n### config.fatal\n\nExample:\n\n```javascript\nrequire('shelljs/global');\nconfig.fatal = true; // or set('-e');\ncp('this_file_does_not_exist', '/dev/null'); // throws Error here\n/* more commands... */\n```\n\nIf `true`, the script will throw a Javascript error when any shell.js\ncommand encounters an error. Default is `false`. This is analogous to\nBash's `set -e`.\n\n### config.verbose\n\nExample:\n\n```javascript\nconfig.verbose = true; // or set('-v');\ncd('dir/');\nrm('-rf', 'foo.txt', 'bar.txt');\nexec('echo hello');\n```\n\nWill print each command as follows:\n\n```\ncd dir/\nrm -rf foo.txt bar.txt\nexec echo hello\n```\n\n### config.globOptions (deprecated)\n\n**Deprecated**: we recommend that you do not edit `config.globOptions`.\nSupport for this configuration option may be changed or removed in a future\nShellJS release.\n\nExample:\n\n```javascript\nconfig.globOptions = {nodir: true};\n```\n\n`config.globOptions` changes how ShellJS expands glob (wildcard)\nexpressions. See\n[node-glob](https://github.com/isaacs/node-glob?tab=readme-ov-file#options)\nfor available options. Be aware that modifying `config.globOptions` **may\nbreak ShellJS functionality.**\n\n### config.reset()\n\nExample:\n\n```javascript\nvar shell = require('shelljs');\n// Make changes to shell.config, and do stuff...\n/* ... */\nshell.config.reset(); // reset to original state\n// Do more stuff, but with original settings\n/* ... */\n```\n\nReset `shell.config` to the defaults:\n\n```javascript\n{\n  fatal: false,\n  globOptions: {},\n  maxdepth: 255,\n  noglob: false,\n  silent: false,\n  verbose: false,\n}\n```\n\n## Team\n\n| [![Nate Fischer](https://avatars.githubusercontent.com/u/5801521?s=130)](https://github.com/nfischer) | [![Brandon Freitag](https://avatars1.githubusercontent.com/u/5988055?v=3&s=130)](http://github.com/freitagbr) |\n|:---:|:---:|\n| [Nate Fischer](https://github.com/nfischer) | [Brandon Freitag](http://github.com/freitagbr) |\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 0.392578125,
          "content": "# Release steps\n\n1. Ensure master passes CI tests\n2. Bump version, create tags, push, and release:\n  - `$ npm run <release:major|release:minor|release:patch>`\n  - `major` - breaking API changes\n  - `minor` - backwards-compatible features\n  - `patch` - backwards-compatible bug fixes\n3. Update `CHANGELOG.md`\n  - `$ npm run changelog`\n  - Manually verify that the changelog makes sense\n  - `$ git push`\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "commands.js",
          "type": "blob",
          "size": 0.3515625,
          "content": "module.exports = [\n  'cat',\n  'cd',\n  'chmod',\n  // TODO(nfischer): uncomment this when shell.cmd() is finished.\n  // 'cmd',\n  'cp',\n  'dirs',\n  'echo',\n  'exec',\n  'find',\n  'grep',\n  'head',\n  'ln',\n  'ls',\n  'mkdir',\n  'mv',\n  'pwd',\n  'rm',\n  'sed',\n  'set',\n  'sort',\n  'tail',\n  'tempdir',\n  'test',\n  'to',\n  'toEnd',\n  'touch',\n  'uniq',\n  'which',\n];\n"
        },
        {
          "name": "global.js",
          "type": "blob",
          "size": 0.3447265625,
          "content": "/* eslint no-extend-native: 0 */\nvar shell = require('./shell.js');\nvar common = require('./src/common');\nObject.keys(shell).forEach(function (cmd) {\n  global[cmd] = shell[cmd];\n});\n\nvar _to = require('./src/to');\nString.prototype.to = common.wrap('to', _to);\n\nvar _toEnd = require('./src/toEnd');\nString.prototype.toEnd = common.wrap('toEnd', _toEnd);\n"
        },
        {
          "name": "make.js",
          "type": "blob",
          "size": 1.291015625,
          "content": "require('./global');\n\nglobal.config.fatal = true;\nglobal.target = {};\n\nvar args = process.argv.slice(2),\n  targetArgs,\n  dashesLoc = args.indexOf('--');\n\n// split args, everything after -- if only for targets\nif (dashesLoc > -1) {\n  targetArgs = args.slice(dashesLoc + 1, args.length);\n  args = args.slice(0, dashesLoc);\n}\n\n// This ensures we only execute the script targets after the entire script has\n// been evaluated\nsetTimeout(function() {\n  var t;\n\n  if (args.length === 1 && args[0] === '--help') {\n    console.log('Available targets:');\n    for (t in global.target)\n      console.log('  ' + t);\n    return;\n  }\n\n  // Wrap targets to prevent duplicate execution\n  for (t in global.target) {\n    (function(t, oldTarget){\n\n      // Wrap it\n      global.target[t] = function() {\n        if (!oldTarget.done){\n          oldTarget.done = true;\n          oldTarget.result = oldTarget.apply(oldTarget, arguments);\n        }\n        return oldTarget.result;\n      };\n\n    })(t, global.target[t]);\n  }\n\n  // Execute desired targets\n  if (args.length > 0) {\n    args.forEach(function(arg) {\n      if (arg in global.target)\n        global.target[arg](targetArgs);\n      else {\n        console.log('no such target: ' + arg);\n      }\n    });\n  } else if ('all' in global.target) {\n    global.target.all(targetArgs);\n  }\n\n}, 0);\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.9345703125,
          "content": "{\n  \"name\": \"shelljs\",\n  \"version\": \"0.8.3\",\n  \"description\": \"Portable Unix shell commands for Node.js\",\n  \"keywords\": [\n    \"shelljs\",\n    \"bash\",\n    \"unix\",\n    \"shell\",\n    \"makefile\",\n    \"make\",\n    \"jake\",\n    \"synchronous\"\n  ],\n  \"contributors\": [\n    \"Nate Fischer <ntfschr@gmail.com> (https://github.com/nfischer)\",\n    \"Brandon Freitag <freitagbr@gmail.com> (https://github.com/freitagbr)\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/shelljs/shelljs.git\"\n  },\n  \"license\": \"BSD-3-Clause\",\n  \"homepage\": \"http://github.com/shelljs/shelljs\",\n  \"main\": \"./shell.js\",\n  \"exports\": {\n    \".\": \"./shell.js\",\n    \"./make\": \"./make.js\",\n    \"./make.js\": \"./make.js\"\n  },\n  \"files\": [\n    \"commands.js\",\n    \"global.js\",\n    \"make.js\",\n    \"plugin.js\",\n    \"shell.js\",\n    \"bin\",\n    \"src\"\n  ],\n  \"scripts\": {\n    \"check-node-support\": \"node scripts/check-node-support\",\n    \"posttest\": \"npm run lint\",\n    \"test\": \"ava test/*.js\",\n    \"test-with-coverage\": \"nyc --reporter=text --reporter=lcov ava test/*.js\",\n    \"gendocs\": \"node scripts/generate-docs\",\n    \"lint\": \"eslint .\",\n    \"after-travis\": \"travis-check-changes\",\n    \"changelog\": \"shelljs-changelog\",\n    \"release:major\": \"shelljs-release major\",\n    \"release:minor\": \"shelljs-release minor\",\n    \"release:patch\": \"shelljs-release patch\"\n  },\n  \"bin\": {\n    \"shjs\": \"./bin/shjs\"\n  },\n  \"dependencies\": {\n    \"execa\": \"^1.0.0\",\n    \"glob\": \"^7.0.0\",\n    \"interpret\": \"^1.0.0\",\n    \"rechoir\": \"^0.6.2\"\n  },\n  \"ava\": {\n    \"serial\": true,\n    \"powerAssert\": false\n  },\n  \"devDependencies\": {\n    \"ava\": \"^1.4.1\",\n    \"chalk\": \"^1.1.3\",\n    \"coffee-script\": \"^1.12.7\",\n    \"eslint\": \"^5.16.0\",\n    \"eslint-config-airbnb-base\": \"^13.1.0\",\n    \"eslint-plugin-import\": \"^2.17.3\",\n    \"js-yaml\": \"^4.1.0\",\n    \"nyc\": \"^15.1.0\",\n    \"shelljs-changelog\": \"^0.2.6\",\n    \"shelljs-release\": \"^0.5.2\",\n    \"shx\": \"^0.3.4\",\n    \"travis-check-changes\": \"^0.4.0\"\n  },\n  \"engines\": {\n    \"node\": \">=8\"\n  }\n}\n"
        },
        {
          "name": "plugin.js",
          "type": "blob",
          "size": 0.46875,
          "content": "// Various utilities exposed to plugins\n\nrequire('./shell'); // Create the ShellJS instance (mandatory)\n\nvar common = require('./src/common');\n\nvar exportedAttributes = [\n  'error',        // For signaling errors from within commands\n  'parseOptions', // For custom option parsing\n  'readFromPipe', // For commands with the .canReceivePipe attribute\n  'register',     // For registering plugins\n];\n\nexportedAttributes.forEach(function (attr) {\n  exports[attr] = common[attr];\n});\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "shell.js",
          "type": "blob",
          "size": 4.1328125,
          "content": "//\n// ShellJS\n// Unix shell commands on top of Node's API\n//\n// Copyright (c) 2012 Artur Adib\n// http://github.com/shelljs/shelljs\n//\n\nvar common = require('./src/common');\n\n//@\n//@ All commands run synchronously, unless otherwise stated.\n//@ All commands accept standard bash globbing characters (`*`, `?`, etc.),\n//@ compatible with the [node `glob` module](https://github.com/isaacs/node-glob).\n//@\n//@ For less-commonly used commands and features, please check out our [wiki\n//@ page](https://github.com/shelljs/shelljs/wiki).\n//@\n\n// Include the docs for all the default commands\n//@commands\n\n// Load all default commands\nrequire('./commands').forEach(function (command) {\n  require('./src/' + command);\n});\n\n//@\n//@ ### exit(code)\n//@\n//@ Exits the current process with the given exit `code`.\nexports.exit = function exit(code) {\n  common.state.error = null;\n  common.state.errorCode = 0;\n  if (code) {\n    common.error('exit', {\n      continue: true,\n      code: code,\n      prefix: '',\n      silent: true,\n      fatal: false,\n    });\n    process.exit(code);\n  } else {\n    process.exit();\n  }\n};\n\n//@include ./src/error.js\nexports.error = require('./src/error');\n\n//@include ./src/errorCode.js\nexports.errorCode = require('./src/errorCode');\n\n//@include ./src/common.js\nexports.ShellString = common.ShellString;\n\n//@\n//@ ### env['VAR_NAME']\n//@\n//@ Object containing environment variables (both getter and setter). Shortcut\n//@ to `process.env`.\nexports.env = process.env;\n\n//@\n//@ ### Pipes\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ grep('foo', 'file1.txt', 'file2.txt').sed(/o/g, 'a').to('output.txt');\n//@ echo('files with o\\'s in the name:\\n' + ls().grep('o'));\n//@ cat('test.js').exec('node'); // pipe to exec() call\n//@ ```\n//@\n//@ Commands can send their output to another command in a pipe-like fashion.\n//@ `sed`, `grep`, `cat`, `exec`, `to`, and `toEnd` can appear on the right-hand\n//@ side of a pipe. Pipes can be chained.\n\n//@\n//@ ## Configuration\n//@\n\nexports.config = common.config;\n\n//@\n//@ ### config.silent\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ var sh = require('shelljs');\n//@ var silentState = sh.config.silent; // save old silent state\n//@ sh.config.silent = true;\n//@ /* ... */\n//@ sh.config.silent = silentState; // restore old silent state\n//@ ```\n//@\n//@ Suppresses all command output if `true`, except for `echo()` calls.\n//@ Default is `false`.\n\n//@\n//@ ### config.fatal\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ require('shelljs/global');\n//@ config.fatal = true; // or set('-e');\n//@ cp('this_file_does_not_exist', '/dev/null'); // throws Error here\n//@ /* more commands... */\n//@ ```\n//@\n//@ If `true`, the script will throw a Javascript error when any shell.js\n//@ command encounters an error. Default is `false`. This is analogous to\n//@ Bash's `set -e`.\n\n//@\n//@ ### config.verbose\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ config.verbose = true; // or set('-v');\n//@ cd('dir/');\n//@ rm('-rf', 'foo.txt', 'bar.txt');\n//@ exec('echo hello');\n//@ ```\n//@\n//@ Will print each command as follows:\n//@\n//@ ```\n//@ cd dir/\n//@ rm -rf foo.txt bar.txt\n//@ exec echo hello\n//@ ```\n\n//@\n//@ ### config.globOptions (deprecated)\n//@\n//@ **Deprecated**: we recommend that you do not edit `config.globOptions`.\n//@ Support for this configuration option may be changed or removed in a future\n//@ ShellJS release.\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ config.globOptions = {nodir: true};\n//@ ```\n//@\n//@ `config.globOptions` changes how ShellJS expands glob (wildcard)\n//@ expressions. See\n//@ [node-glob](https://github.com/isaacs/node-glob?tab=readme-ov-file#options)\n//@ for available options. Be aware that modifying `config.globOptions` **may\n//@ break ShellJS functionality.**\n\n//@\n//@ ### config.reset()\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ var shell = require('shelljs');\n//@ // Make changes to shell.config, and do stuff...\n//@ /* ... */\n//@ shell.config.reset(); // reset to original state\n//@ // Do more stuff, but with original settings\n//@ /* ... */\n//@ ```\n//@\n//@ Reset `shell.config` to the defaults:\n//@\n//@ ```javascript\n//@ {\n//@   fatal: false,\n//@   globOptions: {},\n//@   maxdepth: 255,\n//@   noglob: false,\n//@   silent: false,\n//@   verbose: false,\n//@ }\n//@ ```\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}