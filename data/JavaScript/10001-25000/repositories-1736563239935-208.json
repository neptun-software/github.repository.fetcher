{
  "metadata": {
    "timestamp": 1736563239935,
    "page": 208,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "riot/riot",
      "stars": 14817,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.177734375,
          "content": "ratings:\n  paths:\n    - 'src/**.js'\n\nexclude_paths:\n  - 'riot.d.ts'\n  - 'riot+compiler.js'\n  - 'riot+compiler.min.js'\n  - 'riot.js'\n  - 'riot.esm.js'\n  - 'riot.min.js'\n  - 'test/**'\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "/test/e2e/test.bundle.js\n"
        },
        {
          "name": ".eslintrc.yml",
          "type": "blob",
          "size": 0.310546875,
          "content": "extends:\n  - plugin:import/recommended\n  - eslint-config-riot\n\nsettings:\n  import/ignore:\n    - sinon\n\nplugins:\n  - import\n\nrules:\n  fp/no-rest-parameters: 0\n  import/no-unresolved: 0\n  import/extensions: [2, 'always', { ignorePackages: true }]\n\noverrides:\n  - files: 'test/**/*'\n    rules:\n      import/extensions: 0\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.755859375,
          "content": "# --------------------\n# OSX Files\n# --------------------\n.DS_Store\n.AppleDouble\n.LSOverride\nIcon\n._*\n.Spotlight-V100\n.Trashes\n\n# --------------------\n# Windows Files\n# --------------------\nThumbs.db\nehthumbs.db\nDesktop.ini\n$RECYCLE.BIN/\n*.cab\n*.msi\n*.msm\n*.msp\n*.lnk\n\n# --------------------\n# Sublime Text Files\n# --------------------\n*.sublime-project\n*.sublime-workspace\n\n# --------------------\n# IntelliJ Files\n# --------------------\n*.iml\n*.ipr\n*.iws\n.idea/\nout/\n\n# --------------------\n# Eclipse Files\n# --------------------\n.project\n.metadata\n*.bak\n.classpath\n.settings/\n\n# --------------------\n# App Files\n# --------------------\nnode_modules\nnpm-debug.log\nbower_components\ncoverage\ndist\nesm\n\n/dist/*\n/esm/*\n/cjs/*\n\n!.gitmodules\n!.travis.yml\n/test/e2e/test.bundle.js\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.107421875,
          "content": "/dist\n/coverage\n/esm\n/node_modules\n/.nyc_output\n/riot.js\n/riot.min.js\n/riot+compiler.js\n/riot+compiler.min.js\n"
        },
        {
          "name": ".prettierrc.cjs",
          "type": "blob",
          "size": 0.05078125,
          "content": "module.exports = require('@riotjs/prettier-config')\n"
        },
        {
          "name": "AWESOME.md",
          "type": "blob",
          "size": 8.4072265625,
          "content": "# List of awesome tools made with Riot.js\n\n### Demos\n\n- [**Riot Examples** - Community's Official](https://github.com/riot/examples)\n- [**Riot Animore** - Official Tags Animations Library](https://github.com/riot/animore)\n- [Riot Todo MVC](http://todomvc.com/examples/riotjs/)\n- [Hackernews reader](https://txchen.github.io/riot-hn)\n- [Vuejs examples by Riotjs](https://github.com/txchen/feplay/tree/gh-pages/riot_vue)\n- [Flux-like ES6 Todo](https://github.com/srackham/riot-todo)\n- [Timer](http://jsfiddle.net/gnumanth/h9kuozp5/)\n- [Another flux demo comparable to React ones](http://txchen.github.io/feplay/riot_flux)\n- [Various experiments](http://richardbondi.net/programming/riot)\n- [Isomorphic application](https://github.com/Avnerus/riot-isomorphic)\n- [Isomorphic proof of concept](https://github.com/PabloSichert/isomorphic-proof-of-concept)\n- [flux-riot todo](http://mingliangfeng.me/flux-riot)\n- [Another Riot Todo MVC](http://nippur72.github.io/riotjs-todomvc/#/)\n- [Cheft isomorphic by express](https://github.com/cheft/cheft)\n- [electron-riot - Riot in an electron application](https://github.com/mike-ward/electron-riot)\n- [An express, riot, jade, webpack simple boilerplate](https://github.com/revington/frontend-boilerplate)\n- [Riot.js vs React.js comparison of a simple comment box](https://github.com/vitogit/riot.js-vs-react.js-comment-box)\n- [Riot Seed project - webpack, routing, ava tests, dispatcher](https://github.com/continuata/riot-seed)\n- [Riot-Redux League Table example](https://github.com/drewmiley/PoolLeague)\n- [Riot vs React vs Ractive Counters using Redux store](https://github.com/drewmiley/ractive-react-riot-redux-counters-example)\n- [Riot Chrome Extension Boilerplate](https://github.com/acesmndr/chrome-extension-boilerplate-riot)\n\n### Books\n\n- [Building Apps with Riot](https://bleedingedgepress.com/building-apps-with-riot/)\n\n### Tutorials\n\n- [Building Apps with Riot, ES6 and Webpack](http://blog.srackham.com/posts/riot-es6-webpack-apps/)\n- [Building Apps with Riot, Babel, RiotControl and Webpack](https://github.com/txchen/feplay/tree/gh-pages/riot_webpack)\n- [Building tabs with Riot](http://robertwpearce.com/blog/riotjs-example.html)\n- [The \"React tutorial\" for Riot](https://juriansluiman.nl/article/154/the-react-tutorial-for-riot)\n- [How to package \"tag libraries\" in Riot](https://github.com/ivan-saorin/riot-tutorial-tags-pack-app)\n- [Another React tutorial with Riot](https://github.com/viliamjr/commentsTuto)\n- [Riot Custom Tag by Example](http://www.triplet.fi/blog/riot-custom-tag-by-example/)\n- [Riot Compiler Explained](http://www.triplet.fi/blog/riot-compiler-explained/)\n- [Adding compiled Riot tags to your Gulp + Browserify build](http://www.triplet.fi/blog/adding_compiled_riot_tags_to_your_gulp_browserify_build/)\n- [The anatomy of a tag - a primer tutorial](http://www.marcusoft.net/2015/12/riotjs-anatomy-of-a-tag.html)\n- [Using TDD with Riot+mocha+chai](http://vitomd.com/blog/coding/tutorial_tdd_riot_mocha/)\n- [The Basics - from ground up to connected tag-networks](http://happy-css.com/lessons/riotjs/)\n- [Hello Riot.js : a quick tutorial about this awesome lib](http://vitomd.com/blog/coding/hello-riot-js-quick-tutorial-about-this-awesome-lib/)\n\n### Video Tutorials\n\n- [Introduction](https://www.youtube.com/watch?v=al87U6NgRTc)\n- [Loops, Events and Callbacks](https://www.youtube.com/watch?v=T-ZV9dv93sw)\n- [Server Rendering with Node & Express](http://youtu.be/6ww1UXGJzcs)\n- [Riot And Webpack Setup](https://youtu.be/UgdZbT-KPpY)\n- [Riot and Redux - Part 1](https://youtu.be/Y6vpKAGT2-8)\n- [Riot and Redux - Part 2](https://youtu.be/DgM03bvgCYc)\n- [Riot and Redux - Part 3](https://youtu.be/QuwnbuneAzM)\n- [Riot and Redux - Part 4](https://youtu.be/qc6bjtu7KG0)\n- [Riot and Redux - Part 5](https://youtu.be/M4BNsRMatVY)\n- [Riot and Redux - Part 6](https://youtu.be/jr8KDpwtRsk)\n\n### Libraries / Frameworks\n\n- [Flux- like event controller for Riot](https://github.com/jimsparkman/RiotControl)\n- [flux-riot framework](https://github.com/mingliangfeng/flux-riot)\n- [Cheftjs - chinese framework for Riot](https://github.com/cheft/cheftjs)\n- [Veronica - flux adaption for Riot](https://www.npmjs.com/package/veronica-x)\n- [Minimal Flux dispatcher pattern](https://gist.github.com/continuata/c605846751c09a5e94d12ae8c91cbf05)\n- [riot-format: a format library for riotjs, like angular $filter](https://github.com/joylei/riot-format)\n- [riot-view-router: a simple state based router mixin](https://github.com/neetjn/riot-view-router)\n- [riotx - Centralized State Management for riot.js](https://github.com/cam-inc/riotx)\n- [storybook for riot.js components <sup>alpha</sup>](https://github.com/storybooks/storybook/tree/master/app/riot)\n- [riot-meiosis - State management for Riot 4](https://github.com/damusix/riot-meiosis)\n- [riot-final-form - Final Form wrapper for Riot 4](https://github.com/damusix/riot-final-form)\n\n### Components\n\n- [Material UI](http://kysonic.github.io/riot-mui/)\n- [RiotGear Components](https://riotgear.js.org)\n- [RiotGear Router](http://riotgear.js.org/components/router/)\n- [Riot Bootstrap](http://cognitom.github.io/riot-bootstrap/)\n- [iToolkit](https://github.com/BE-FE/iToolkit)\n- [Riot Routehandler](https://github.com/crisward/riot-routehandler)-[(Demo)](http://codepen.io/crisward/pen/xwGJpM?editors=101)\n- [Riot Flipcard](https://github.com/crisward/riot-flipcard) - [(Demo)](https://crisward.github.io/riot-flipcard/)\n- [Riot Grid](https://github.com/crisward/riot-grid) - [(Demo)](http://codepen.io/crisward/pen/rxepMX?editors=101)\n- [Riot Grid2](https://github.com/crisward/riot-grid2) - [(Demo)](http://crisward.github.io/riot-grid2/)\n- [Riot Subtag](https://github.com/crisward/riot-subtag) - faster than lots of if's\n- [ESLint Riot Plugin](https://github.com/txchen/eslint-plugin-riot)\n- [riot-animate](https://github.com/sartaj/riot-animate)\n- [Nest UI](https://github.com/fengzilong/Nest) - [(Demo)](https://fengzilong.github.io/Nest/)\n- [rGrid](https://github.com/limodou/rgrid) - [(Demo)](https://limodou.github.io/rgrid/examples.html)\n- [typewriter](https://github.com/amitguptagwl/web-snippets/tree/master/riotjs-components/typewriter) - [(Demo)](http://amitkumargupta.work)\n- [Riot Particles](https://github.com/matteobruni/tsparticles/tree/main/components/riot) - Particles, confetti, fireworks and other animations component\n\n### Resources\n\n- [create-riot-app](https://github.com/alexstep/create-riot-app-ejected) dev environment\n- [Riot + AngularJS](https://github.com/lucasbrigida/angular-riot)\n- [Module loader for WebPack](https://www.npmjs.com/package/riotjs-loader)\n- [Riot + Meteor](https://atmospherejs.com/baysao/riotjs)\n- [Riot Snake Game](http://cdn.rawgit.com/atian25/blog/master/assets/riot-snake.html)\n- [Riot Tag Syntax Checker](http://cognitom.github.io/riot-checker/)\n- [Riot 文档中译版](https://github.com/Centaur/riotjs_doc_cn) :cn:\n- [Riot + Wintersmith](https://github.com/collingreen/wintersmith-riot)\n- [Riot precompiler plugin for lineman](https://github.com/Power-Inside/lineman-riot)\n- [Riot Startkit - Flux inspired skeleton app + WebPack + PostCSS](https://github.com/wbkd/riotjs-startkit)\n- [Yeoman generator - Generator riot mobile](https://www.npmjs.com/package/generator-riot-mobile)\n- [Yeoman generator - Generator riot element](https://www.npmjs.com/package/generator-riot-element)\n- [Riot for TypeScript](https://github.com/nippur72/RiotTS)\n- [Riot loader plugin for RequireJS](https://github.com/amenadiel/requirejs-riot)\n- [Riot loader plugin for JSPM/SystemJS](https://github.com/amenadiel/systemjs-riot)\n- [RiotJS Style Guide](https://github.com/voorhoede/riotjs-style-guide)\n- [Riot Cheatsheet](http://martinmuzatko.github.io/riot-cheatsheet/)\n- [Riot 4 SPA Boilerplate](https://github.com/damusix/riot-4-boilerplate)\n\n### Miscellaneous\n\n- [Q&A with RiotJS author Tero Piirainen](http://www.triplet.fi/blog/q-and-a-with-riotjs-author-tero-piirainen/)\n- [riot-detector (Chrome Extension)](https://chrome.google.com/webstore/detail/riot-detector/cnnmjeggdmicjojlnjghdgkdlijiobke)\n\n### Editors / Editor Plugins (Syntax highlighting, autcompletion, etc...)\n\n- [riot (Atom Package)](https://atom.io/packages/riot)\n- [language-riot-tag (Atom Package)](https://github.com/dekimasoon/language-riot-tag)\n  - Based on Vue's official Sublime Text highlighter\n  - Note: Designed for html, not jade.\n- [sublime-tag (Sublime Text)](https://github.com/crisward/sublime-tag)\n- [riot-tag (Visual Studio)](https://github.com/crisward/riot-tag)\n- [web-mode (Emacs)](http://web-mode.org)\n  - See how to configure [#1967](https://github.com/riot/riot/issues/1967)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1005859375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nhello.riotjs@gmail.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.158203125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015-present\nOriginally created by Muut Inc.\nActively maintained by:\n - Gianluca Guarini https://github.com/GianlucaGuarini\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.9580078125,
          "content": "\n# if no \"v\" var given, default to package version\nv ?= $(shell node -pe \"require('./package.json').version\")\n\n# expand variable (so we can use it on branches w/o package.json)\nVERSION := $(v)\n\n# get x.x.* part of the version number\nMINOR_VERSION = `echo $(VERSION) | sed 's/\\.[^.]*$$//'`\n\n# Command line paths\nC8 = ./node_modules/c8/bin/c8.js\nWDIO = ./node_modules/.bin/wdio\nSERVE = ./node_modules/.bin/serve\nSTART_SERVER_AND_TEST = ./node_modules/.bin/start-server-and-test\nESLINT = ./node_modules/eslint/bin/eslint.js\nMOCHA = ./node_modules/mocha/bin/_mocha\nROLLUP = ./node_modules/.bin/rollup\nPRETTIER = ./node_modules/.bin/prettier\nMINIFY = ./node_modules/.bin/terser\nRIOT_CLI = ./node_modules/.bin/riot\nTSC = ./node_modules/.bin/tsc\n\n# folders\nDIST = dist/riot/\nSRC = src\nCONFIG = config/\n\nGENERATED_FILES = riot.js riot+compiler.js\n\n# Options needed to generate the rollup esm bundle\nROLLUP_ESM_OPTIONS = --format esm \\\n\t\t\t\t\t --output.preserveModules \\\n\t\t\t\t\t --amd.forceJsExtensionForImports \\\n\t\t\t\t\t --preserveModulesRoot src \\\n\t\t\t\t\t --config rollup.config.js \\\n\t\t\t\t\t --dir $(DIST)esm\n# Options we will pass to the minifier\nMINIFY_OPTIONS = --comments false \\\n\t\t\t\t --toplevel \\\n\t\t\t\t --compress pure_funcs=['panic'],unsafe=true,unsafe_symbols=true,passes=5 \\\n\t\t\t\t --mangle \\\n\n\ntest: lint unit-test test-typing\n\nunit-test:\n\t@ $(START_SERVER_AND_TEST) $(SERVE) 3000  \"$(C8) -r lcov -r text $(MOCHA) -r test/setup.js test/**/*.spec.js\"\n\ndebug:\n\t# build the e2e bundle\n\t@ $(ROLLUP) -c test/e2e/rollup.config.js\n\t@ $(SERVE)\n\ne2e-test:\n\t# build the e2e bundle\n\t@ $(ROLLUP) -c test/e2e/rollup.config.js\n\t@ $(START_SERVER_AND_TEST) $(SERVE) 3000  \"$(WDIO) run ./wdio.conf.js\"\n\nlint:\n\t# check if the code looks pretty\n\t@ $(PRETTIER) --check ./\n\t# check code style\n\t@ $(ESLINT) src test\n\ntest-typing:\n\t# silent compile typescript\n\t@ $(TSC) -p ./test\n\nraw:\n\t# build riot\n\t@ mkdir -p $(DIST)\n\t# Default builds UMD\n\t@ $(ROLLUP) src/riot.js --format umd --config rollup.config.js --file $(DIST)riot.js\n\t@ HAS_VISUALIZER=1 $(ROLLUP) src/riot+compiler.js --format umd --config rollup.config.js --file $(DIST)riot+compiler.js\n\t@ $(ROLLUP) src/riot.js $(ROLLUP_ESM_OPTIONS)\n\t@ $(ROLLUP) src/riot+compiler.js $(ROLLUP_ESM_OPTIONS)\n\t# alias the common js files renaming the umd js -> cjs\n\t@ mkdir -p $(DIST)/cjs\n\t@ cp $(DIST)/riot.js $(DIST)/cjs/riot.cjs\n\t@ cp $(DIST)/riot+compiler.js  $(DIST)/cjs/riot+compiler.cjs\n\nclean:\n\t# delete old esm folder\n\t@ rm -rf esm\n\t# clean $(DIST)\n\t@ rm -rf $(DIST)\n\nriot: clean raw test\n\nmin:\n\t# minify riot\n\t@ $(MINIFY) $(DIST)riot.js $(MINIFY_OPTIONS) -o $(DIST)riot.min.js;\n\t# minify the riot+compiler\n\t@ $(MINIFY) $(DIST)riot+compiler.js $(MINIFY_OPTIONS) -o $(DIST)riot+compiler.min.js;\n\nbuild:\n\t# generate riot.js & riot.min.js\n\t@ make min\n\t@ cp -r dist/riot/* .\n\t# write version in riot.js\n\t@ sed -i '' 's/WIP/v$(VERSION)/g' riot*.js esm/*.js esm/**/*.js\n\n\nbump:\n\t# grab all latest changes to main\n\t# (if there's any uncommited changes, it will stop here)\n\t# bump version in *.json files\n\t@ sed -i '' 's/\\(\"version\": \"\\)[^\"]*/\\1'$(VERSION)'/' package.json\n\t# update the lock file as well\n\t@ npm i\n\t@ make build\n\t@ git status --short\n\nbump-undo:\n\t# remove all uncommited changes\n\t@ git reset --hard\n\n\nversion:\n\t# @ git checkout main\n\t# create version commit\n\t@ git status --short\n\t@ git add --all\n\t@ git commit -am \"$(VERSION)\"\n\t@ git log --oneline -2\n\t# create version tag\n\t@ git tag -a 'v'$(VERSION) -m $(VERSION)\n\t@ git describe\n\nversion-undo:\n\t# remove the version tag\n\t@ git tag -d 'v'$(VERSION)\n\t@ git describe\n\t# remove the version commit\n\t@ git reset `git rev-parse :/$(VERSION)`\n\t@ git reset HEAD^\n\t@ git log --oneline -2\n\nrelease: riot min bump version\n\nrelease-undo:\n\tmake version-undo\n\tmake bump-undo\n\npublish:\n\t# push new version to npm and github\n\t# (github tag will also trigger an update in bower, component, cdnjs, etc)\n\t@ npm publish\n\t@ git push origin main\n\t@ git push origin main --tags\n\n.PHONY: test unit-test e2e-test debug min lint raw riot build bump bump-undo version version-undo release-undo publish\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.607421875,
          "content": "[![Riot logo](https://riot.js.org/img/logo/riot-logo.svg)](https://riot.js.org)\n\n## Simple and elegant component-based UI library\n\n[![Build Status][ci-image]][ci-url]\n[![MIT License][license-image]][license-url]\n[![Join the discord community channel][discord-image]][discord-url]\n[![Join the chat (ja) at https://riot-jp-slackin.herokuapp.com/][slack-ja-image]][slack-ja-url]\n[![OpenCollective Backers][backer-badge]][backer-url] [![OpenCollective Sponsors][sponsor-badge]][sponsor-url]\n\n[![NPM version][npm-version-image]][npm-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![jsDelivr Hits][jsdelivr-image]][jsdelivr-url]\n[![Coverage Status][coverage-image]][coverage-url]\n![Riot Size][lib-size]\n[![Code Quality][codeclimate-image]][codeclimate-url]\n\n[![Sauce Test Status][saucelabs-image]][saucelabs-url]\n\n### Custom components • Concise syntax • Simple API • Tiny Size\n\nRiot brings custom components to all modern browsers. It is designed to offer you everything you wished the native web components API provided.\n\n#### Tag definition\n\n```html\n<timer>\n  <p>Seconds Elapsed: { state.time }</p>\n\n  <script>\n    export default {\n      tick() {\n        this.update({ time: ++this.state.time })\n      },\n      onBeforeMount(props) {\n        // create the component initial state\n        this.state = {\n          time: props.start,\n        }\n\n        this.timer = setInterval(this.tick, 1000)\n      },\n      onUnmounted() {\n        clearInterval(this.timer)\n      },\n    }\n  </script>\n</timer>\n```\n\n[Open this example on Plunker](https://riot.js.org/examples/plunker/?app=timer)\n\n#### Mounting\n\n```javascript\n// mount the timer with its initial props\nriot.mount('timer', { start: 0 })\n```\n\n#### Nesting\n\nCustom components let you build complex views with HTML.\n\n```html\n<timetable>\n  <timer start=\"0\"></timer>\n  <timer start=\"10\"></timer>\n  <timer start=\"20\"></timer>\n</timetable>\n```\n\nHTML syntax is the de facto language on the web and it's designed for building user interfaces. The syntax is explicit, nesting is inherent to the language and attributes offer a clean way to provide options for custom tags.\n\n### Performant and predictable\n\n- Absolutely the smallest possible amount of DOM updates and reflows.\n- Fast expressions bindings instead of virtual DOM memory performance issues and drawbacks.\n- One way data flow: updates and unmounts are propagated downwards from parent to children.\n- No \"magic\" or \"smart\" reactive properties or hooks\n- Expressions are pre-compiled and cached for high performance.\n- Lifecycle methods for more control.\n\n### Close to standards\n\n- No proprietary event system.\n- Future proof thanks to the javascript module syntax.\n- The rendered DOM can be freely manipulated with other tools.\n- No extra HTML root elements, `data-` attributes or fancy custom attributes.\n- No new syntax to learn.\n- Plays well with any frontend framework.\n\n### Use your dearest language and tools\n\n- Create components with CoffeeScript, Jade, LiveScript, Typescript, ES6 or [any pre-processor](https://riot.js.org/compiler/#pre-processors) you want.\n- Build with [@riotjs/cli](https://github.com/riot/cli), [webpack](https://github.com/riot/webpack-loader), [Rollup](https://github.com/riot/rollup-plugin-riot), [parcel](https://github.com/riot/parcel-plugin-riot), [Browserify](https://github.com/riot/riotify).\n- Test however you like; you can [load your riot tags directly in node](https://github.com/riot/ssr#render---to-render-only-markup)\n\n### Powerful and modular ecosystem\n\nThe Riot.js ecosystem is completely modular, it's designed to let you pick only the stuff you really need:\n\n- [@riotjs/cli](https://github.com/riot/cli) - CLI to locally compile your tags to javascript\n- [@riotjs/ssr](https://github.com/riot/ssr) - Super simple server side rendering\n- [@riotjs/hydrate](https://github.com/riot/hydrate) - Hydration strategy for your SPA\n- [@riotjs/route](https://github.com/riot/route) - Isomorphic router\n- [@riotjs/lazy](https://github.com/riot/lazy) - Lazy components loader\n- [@riotjs/hot-reload](https://github.com/riot/hot-reload) - Live reload plugin\n- [@riotjs/compiler](https://github.com/riot/compiler) - Advanced tags compiler\n- [@riotjs/parser](https://github.com/riot/parser) - HTML parser\n- [@riotjs/dom-bindings](https://github.com/riot/dom-bindings) - Expressions based template engine\n- [@riotjs/custom-elements](https://github.com/riot/custom-elements) - native custom elements implementation\n\n### CDN hosting\n\n- [unpkg](https://unpkg.com/riot/riot.js)\n- [jsDelivr](https://www.jsdelivr.com/projects/riot)\n- [cdnjs](https://cdnjs.com/libraries/riot)\n\n### How to contribute\n\nIf you are reading this it's already a good sign and I am thankful for it! I try my best working as much as I can on riot but your help is always appreciated.\n\nIf you want to contribute to riot helping the project maintenance please check first the list of [open issues](https://github.com/riot/riot/issues) to understand whether there is a task where you could help.\n\nRiot is mainly developed on UNIX systems so you will be able to run all the commands necessary to build and test the library using our [Makefile](Makefile). If you are on a Microsoft machine it could be harder to set up your development environment properly.\n\nFollowing the steps below you should be able to properly submit your patch to the project\n\n#### 1) Clone the repo and browse to the riot folder\n\n```shell\ngit clone git@github.com:riot/riot.git && cd riot\n```\n\n#### 2) Set up your git branch\n\n```shell\ngit checkout -b feature/my-awesome-patch\n```\n\n#### 3) Install the npm dependencies\n\n```shell\nnpm i\n```\n\n#### 4) Build and test riot using the Makefile\n\n```shell\n# To build and test riot\n$ make riot\n\n# To build without testing\n$ make raw\n```\n\n#### 5) Pull request only against the `main` branch making sure you have read [our pull request template](.github/PULL_REQUEST_TEMPLATE.md)\n\n#### 6) Be patient\n\n### Credits\n\nRiot is actively maintained with :heart: by:\n\n<table>\n  <tbody>\n    <tr>\n      <td valign=\"top\">\n        <img width=\"125\" height=\"125\" src=\"https://github.com/GianlucaGuarini.png?s=125?s=125\">\n        <br>\n        <a href=\"https://github.com/GianlucaGuarini\">Gianluca Guarini</a>\n      </td>\n     </tr>\n  </tbody>\n</table>\n\nMany thanks to all smart people from all over the world who helped improving it.\n\n## Official Website\n\n<https://riot.js.org>\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [Become a backer][support-url]\n\n[![Backers][backers-image]][support-url]\n\n## Sponsors\n\nBecome a sponsor to get your logo on our README. [Become a sponsor][support-url]\n\n[![Sponsors][sponsors-image]][support-url]\n\n## Thanks\n\nSpecial thanks to Browserstack for their support\n\n<table cellpadding=\"8\">\n    <tr>\n        <td>\n          <a href='https://www.browserstack.com/?from=riotjs'>\n            <img width='70px' src=\"https://cdn.worldvectorlogo.com/logos/browserstack.svg\" alt=\"browser stack\">\n          </a>\n        </td>\n    </tr>\n</table>\n\n[ci-image]: https://img.shields.io/github/actions/workflow/status/riot/riot/test.yml?style=flat-square\n[ci-url]: https://github.com/riot/riot/actions\n[license-image]: https://img.shields.io/badge/license-MIT-000000.svg?style=flat-square\n[license-url]: LICENSE.txt\n[npm-version-image]: https://img.shields.io/npm/v/riot.svg?style=flat-square\n[npm-downloads-image]: https://img.shields.io/npm/dm/riot.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/riot\n[coverage-image]: https://img.shields.io/coveralls/riot/riot/main.svg?style=flat-square\n[coverage-url]: https://coveralls.io/r/riot/riot?branch=main\n[saucelabs-image]: https://saucelabs.com/browser-matrix/testsriotjs.svg?1\n[saucelabs-url]: https://saucelabs.com/u/testsriotjs\n[discord-url]: https://discord.gg/PagXe5Y\n[discord-image]: https://img.shields.io/badge/DISCORD-JOIN_CHANNEL_%E2%86%92-7289da.svg?style=flat-square\n[slack-ja-image]: https://img.shields.io/badge/SLACK_(ja)-JOIN_CHAT_%E2%86%92-551a8b.svg?style=flat-square\n[slack-ja-url]: https://riot-jp-slackin.herokuapp.com/\n[codeclimate-image]: https://api.codeclimate.com/v1/badges/b81ddf3c77e8189876da/maintainability\n[codeclimate-url]: https://codeclimate.com/github/riot/riot\n[jsdelivr-image]: https://data.jsdelivr.com/v1/package/npm/riot/badge\n[jsdelivr-url]: https://www.jsdelivr.com/package/npm/riot\n[backer-url]: #backers\n[backer-badge]: https://opencollective.com/riot/backers/badge.svg?color=blue\n[sponsor-url]: #sponsors\n[sponsor-badge]: https://opencollective.com/riot/sponsors/badge.svg?color=blue\n[support-url]: https://opencollective.com/riot#support\n[lib-size]: https://img.badgesize.io/https://unpkg.com/riot/riot.min.js?compression=gzip\n[backers-image]: https://opencollective.com/riot/backers.svg\n[sponsors-image]: https://opencollective.com/riot/sponsors.svg\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 422.0185546875,
          "content": "{\n  \"name\": \"riot\",\n  \"version\": \"9.4.4\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"riot\",\n      \"version\": \"9.4.4\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@riotjs/dom-bindings\": \"^9.2.5\"\n      },\n      \"devDependencies\": {\n        \"@riotjs/compiler\": \"^9.3.0\",\n        \"@riotjs/prettier-config\": \"^1.1.0\",\n        \"@riotjs/register\": \"^9.1.0\",\n        \"@riotjs/util\": \"^2.4.0\",\n        \"@rollup/plugin-commonjs\": \"^28.0.1\",\n        \"@rollup/plugin-node-resolve\": \"^15.3.0\",\n        \"@testing-library/user-event\": \"^14.5.2\",\n        \"@wdio/cli\": \"^9.2.11\",\n        \"@wdio/local-runner\": \"^9.2.11\",\n        \"@wdio/mocha-framework\": \"^9.2.8\",\n        \"@wdio/sauce-service\": \"^9.2.11\",\n        \"@wdio/spec-reporter\": \"^9.2.8\",\n        \"bianco.attr\": \"^1.1.1\",\n        \"bianco.query\": \"^1.1.4\",\n        \"c8\": \"^10.1.2\",\n        \"chai\": \"^5.1.2\",\n        \"cumpa\": \"^2.0.1\",\n        \"curri\": \"^2.0.3\",\n        \"eslint\": \"^8.57.0\",\n        \"eslint-config-riot\": \"^4.1.2\",\n        \"eslint-plugin-import\": \"^2.29.1\",\n        \"jsdom\": \"^25.0.1\",\n        \"jsdom-global\": \"^3.0.2\",\n        \"mocha\": \"^10.8.2\",\n        \"prettier\": \"^3.3.3\",\n        \"rollup\": \"^4.24.4\",\n        \"rollup-plugin-riot\": \"^9.0.2\",\n        \"serve\": \"^14.2.4\",\n        \"sinon\": \"^19.0.2\",\n        \"sinon-chai\": \"^4.0.0\",\n        \"start-server-and-test\": \"^2.0.8\",\n        \"terser\": \"^5.36.0\",\n        \"typescript\": \"^5.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">=18.0.0\"\n      }\n    },\n    \"node_modules/@aashutoshrathi/word-wrap\": {\n      \"version\": \"1.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/@aashutoshrathi/word-wrap/-/word-wrap-1.2.6.tgz\",\n      \"integrity\": \"sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.23.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.23.5.tgz\",\n      \"integrity\": \"sha512-CgH3s1a96LipHCmSUmYFPwY7MNx8C3avkq7i4Wl3cfa662ldtUe4VM1TPXX70pfmrlWTb6jLqTYrZyT2ZTJBgA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.23.4\",\n        \"chalk\": \"^2.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"node_modules/@babel/code-frame/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/code-frame/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.25.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz\",\n      \"integrity\": \"sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.25.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz\",\n      \"integrity\": \"sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.23.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.23.4.tgz\",\n      \"integrity\": \"sha512-acGdbYSfp2WheJoJm/EBBBLh/ID8KDc64ISZ9DYtBmC8/Q204PZJLHyzeB5qMzJ5trcOkybd78M4x2KWsUq++A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.22.20\",\n        \"chalk\": \"^2.4.2\",\n        \"js-tokens\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"node_modules/@babel/highlight/node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/highlight/node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.26.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.2.tgz\",\n      \"integrity\": \"sha512-DWMCZH9WA4Maitz2q21SRKHo9QXZxkDsbNZoVD62gusNtNBBqDg9i7uOhASfTfIGNzW+O+r7+jAlM8dwphcJKQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/types\": \"^7.26.0\"\n      },\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.23.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.23.6.tgz\",\n      \"integrity\": \"sha512-zHd0eUrf5GZoOWVCXp6koAKQTfZV07eit6bGPmJgnZdnSAvvZee6zniW2XMF7Cmc4ISOOnPy3QaSiIJGJkVEDQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.14.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.26.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.0.tgz\",\n      \"integrity\": \"sha512-Z/yiTPj+lDVnF7lWeKCIJzaIkI0vYO87dMpZ4bg4TDrFe4XXLFWL1TbXU27gBP3QccxV9mZICCrnjnYlJjXHOA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.25.9\",\n        \"@babel/helper-validator-identifier\": \"^7.25.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@bcoe/v8-coverage\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz\",\n      \"integrity\": \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\",\n      \"dev\": true\n    },\n    \"node_modules/@eggjs/yauzl\": {\n      \"version\": \"2.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eggjs/yauzl/-/yauzl-2.11.0.tgz\",\n      \"integrity\": \"sha512-Jq+k2fCZJ3i3HShb0nxLUiAgq5pwo8JTT1TrH22JoehZQ0Nm2dvByGIja1NYfNyuE4Tx5/Dns5nVsBN/mlC8yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\",\n        \"fd-slicer2\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/@esbuild/aix-ppc64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.23.1.tgz\",\n      \"integrity\": \"sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"aix\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.23.1.tgz\",\n      \"integrity\": \"sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/android-arm64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.23.1.tgz\",\n      \"integrity\": \"sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/android-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-arm64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.23.1.tgz\",\n      \"integrity\": \"sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/darwin-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-arm64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.23.1.tgz\",\n      \"integrity\": \"sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/freebsd-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.23.1.tgz\",\n      \"integrity\": \"sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-arm64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.23.1.tgz\",\n      \"integrity\": \"sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ia32\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.23.1.tgz\",\n      \"integrity\": \"sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-loong64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.23.1.tgz\",\n      \"integrity\": \"sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==\",\n      \"cpu\": [\n        \"loong64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-mips64el\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.23.1.tgz\",\n      \"integrity\": \"sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==\",\n      \"cpu\": [\n        \"mips64el\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-ppc64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.23.1.tgz\",\n      \"integrity\": \"sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-riscv64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.23.1.tgz\",\n      \"integrity\": \"sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-s390x\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.23.1.tgz\",\n      \"integrity\": \"sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/linux-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/netbsd-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"netbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/openbsd-arm64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.23.1.tgz\",\n      \"integrity\": \"sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/openbsd-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/sunos-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"sunos\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/win32-arm64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.23.1.tgz\",\n      \"integrity\": \"sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/win32-ia32\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.23.1.tgz\",\n      \"integrity\": \"sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@esbuild/win32-x64\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.23.1.tgz\",\n      \"integrity\": \"sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz\",\n      \"integrity\": \"sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint-community/regexpp\": {\n      \"version\": \"4.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.8.0.tgz\",\n      \"integrity\": \"sha512-JylOEEzDiOryeUnFbQz+oViCXS0KsvR1mvHkoMiu5+UiBvy+RYX7tzlIIIEstF/gVa2tj9AQXk3dgnxv6KxhFg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz\",\n      \"integrity\": \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.6.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/js\": {\n      \"version\": \"8.57.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-8.57.0.tgz\",\n      \"integrity\": \"sha512-Ys+3g2TaW7gADOJzPt83SJtCDhMjndcDMFVQ/Tj9iA1BfJzFKD9mAUXT3OenpuPHbI6P/myECxRJrofUsDx/5g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@hapi/hoek\": {\n      \"version\": \"9.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@hapi/hoek/-/hoek-9.3.0.tgz\",\n      \"integrity\": \"sha512-/c6rf4UJlmHlC9b5BaNvzAcFv7HZ2QHaV0D4/HNlBdvFnvQq8RI4kYdhyPCl7Xj+oWvTWQ8ujhqS53LIgAe6KQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@hapi/topo\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@hapi/topo/-/topo-5.1.0.tgz\",\n      \"integrity\": \"sha512-foQZKJig7Ob0BMAYBfcJk8d77QtOe7Wo4ox7ff1lQYoNNAb6jwcY1ncdoy2e9wQZzvNy7ODZCYJkK8kzmcAnAg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@hapi/hoek\": \"^9.0.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.11.14\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz\",\n      \"integrity\": \"sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^2.0.2\",\n        \"debug\": \"^4.3.1\",\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.2.tgz\",\n      \"integrity\": \"sha512-6EwiSjwWYP7pTckG6I5eyFANjPhmPjUX9JRLUSfNPC7FX7zK9gyZAfUEaECL6ALTpGX5AjnBq3C9XmVWPitNpw==\",\n      \"dev\": true\n    },\n    \"node_modules/@inquirer/checkbox\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/checkbox/-/checkbox-3.0.1.tgz\",\n      \"integrity\": \"sha512-0hm2nrToWUdD6/UHnel/UKGdk1//ke5zGUpHIvk5ZWmaKezlGxZkOJXNSWsdxO/rEqTkbB3lNC2J6nBElV2aAQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/figures\": \"^1.0.6\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"ansi-escapes\": \"^4.3.2\",\n        \"yoctocolors-cjs\": \"^2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/confirm\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/confirm/-/confirm-4.0.1.tgz\",\n      \"integrity\": \"sha512-46yL28o2NJ9doViqOy0VDcoTzng7rAb6yPQKU7VDLqkmbCaH4JqK4yk4XqlzNWy9PVC5pG1ZUXPBQv+VqnYs2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/type\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/core\": {\n      \"version\": \"9.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/core/-/core-9.2.1.tgz\",\n      \"integrity\": \"sha512-F2VBt7W/mwqEU4bL0RnHNZmC/OxzNx9cOYxHqnXX3MP6ruYvZUZAW9imgN9+h/uBT/oP8Gh888J2OZSbjSeWcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/figures\": \"^1.0.6\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"@types/mute-stream\": \"^0.0.4\",\n        \"@types/node\": \"^22.5.5\",\n        \"@types/wrap-ansi\": \"^3.0.0\",\n        \"ansi-escapes\": \"^4.3.2\",\n        \"cli-width\": \"^4.1.0\",\n        \"mute-stream\": \"^1.0.0\",\n        \"signal-exit\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^6.2.0\",\n        \"yoctocolors-cjs\": \"^2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/core/node_modules/@types/node\": {\n      \"version\": \"22.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.7.5.tgz\",\n      \"integrity\": \"sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~6.19.2\"\n      }\n    },\n    \"node_modules/@inquirer/core/node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/@inquirer/core/node_modules/undici-types\": {\n      \"version\": \"6.19.8\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz\",\n      \"integrity\": \"sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==\",\n      \"dev\": true\n    },\n    \"node_modules/@inquirer/core/node_modules/wrap-ansi\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\",\n      \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@inquirer/editor\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/editor/-/editor-3.0.1.tgz\",\n      \"integrity\": \"sha512-VA96GPFaSOVudjKFraokEEmUQg/Lub6OXvbIEZU1SDCmBzRkHGhxoFAVaF30nyiB4m5cEbDgiI2QRacXZ2hw9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"external-editor\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/expand\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/expand/-/expand-3.0.1.tgz\",\n      \"integrity\": \"sha512-ToG8d6RIbnVpbdPdiN7BCxZGiHOTomOX94C2FaT5KOHupV40tKEDozp12res6cMIfRKrXLJyexAZhWVHgbALSQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"yoctocolors-cjs\": \"^2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/figures\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/figures/-/figures-1.0.7.tgz\",\n      \"integrity\": \"sha512-m+Trk77mp54Zma6xLkLuY+mvanPxlE4A7yNKs2HBiyZ4UkVs28Mv5c/pgWrHeInx+USHeX/WEPzjrWrcJiQgjw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/input\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/input/-/input-3.0.1.tgz\",\n      \"integrity\": \"sha512-BDuPBmpvi8eMCxqC5iacloWqv+5tQSJlUafYWUe31ow1BVXjW2a5qe3dh4X/Z25Wp22RwvcaLCc2siHobEOfzg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/type\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/number\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/number/-/number-2.0.1.tgz\",\n      \"integrity\": \"sha512-QpR8jPhRjSmlr/mD2cw3IR8HRO7lSVOnqUvQa8scv1Lsr3xoAMMworcYW3J13z3ppjBFBD2ef1Ci6AE5Qn8goQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/type\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/password\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/password/-/password-3.0.1.tgz\",\n      \"integrity\": \"sha512-haoeEPUisD1NeE2IanLOiFr4wcTXGWrBOyAyPZi1FfLJuXOzNmxCJPgUrGYKVh+Y8hfGJenIfz5Wb/DkE9KkMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"ansi-escapes\": \"^4.3.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/prompts\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/prompts/-/prompts-6.0.1.tgz\",\n      \"integrity\": \"sha512-yl43JD/86CIj3Mz5mvvLJqAOfIup7ncxfJ0Btnl0/v5TouVUyeEdcpknfgc+yMevS/48oH9WAkkw93m7otLb/A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/checkbox\": \"^3.0.1\",\n        \"@inquirer/confirm\": \"^4.0.1\",\n        \"@inquirer/editor\": \"^3.0.1\",\n        \"@inquirer/expand\": \"^3.0.1\",\n        \"@inquirer/input\": \"^3.0.1\",\n        \"@inquirer/number\": \"^2.0.1\",\n        \"@inquirer/password\": \"^3.0.1\",\n        \"@inquirer/rawlist\": \"^3.0.1\",\n        \"@inquirer/search\": \"^2.0.1\",\n        \"@inquirer/select\": \"^3.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/rawlist\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/rawlist/-/rawlist-3.0.1.tgz\",\n      \"integrity\": \"sha512-VgRtFIwZInUzTiPLSfDXK5jLrnpkuSOh1ctfaoygKAdPqjcjKYmGh6sCY1pb0aGnCGsmhUxoqLDUAU0ud+lGXQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"yoctocolors-cjs\": \"^2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/search\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/search/-/search-2.0.1.tgz\",\n      \"integrity\": \"sha512-r5hBKZk3g5MkIzLVoSgE4evypGqtOannnB3PKTG9NRZxyFRKcfzrdxXXPcoJQsxJPzvdSU2Rn7pB7lw0GCmGAg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/figures\": \"^1.0.6\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"yoctocolors-cjs\": \"^2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/select\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/select/-/select-3.0.1.tgz\",\n      \"integrity\": \"sha512-lUDGUxPhdWMkN/fHy1Lk7pF3nK1fh/gqeyWXmctefhxLYxlDsc7vsPBEpxrfVGDsVdyYJsiJoD4bJ1b623cV1Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/figures\": \"^1.0.6\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"ansi-escapes\": \"^4.3.2\",\n        \"yoctocolors-cjs\": \"^2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@inquirer/type\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@inquirer/type/-/type-2.0.0.tgz\",\n      \"integrity\": \"sha512-XvJRx+2KR3YXyYtPUUy+qd9i7p+GO9Ko6VIIpWlBrpWwXDv8WLFeHTxz35CfQFUiBMLXlGHhGzys7lqit9gWag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mute-stream\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/@isaacs/cliui/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/expect-utils\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-29.7.0.tgz\",\n      \"integrity\": \"sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.6.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/schemas\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz\",\n      \"integrity\": \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@sinclair/typebox\": \"^0.27.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/types\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\",\n      \"integrity\": \"sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"@types/istanbul-reports\": \"^3.0.0\",\n        \"@types/node\": \"*\",\n        \"@types/yargs\": \"^17.0.8\",\n        \"chalk\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz\",\n      \"integrity\": \"sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.1.tgz\",\n      \"integrity\": \"sha512-dSYZh7HhCDtCKm4QakX0xFpsRDqjjtZf/kjI/v3T3Nwt5r8/qz/M19F9ySyOqU94SXBmeG9ttTul+YnR4LOxFA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz\",\n      \"integrity\": \"sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/source-map\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.5.tgz\",\n      \"integrity\": \"sha512-UTYAUj/wviwdsMfzoSJspJxbkH5o1snzwX0//0ENX1u/55kkZZkcTZP6u9bwKGkv+dkk9at4m1Cpt0uY80kcpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz\",\n      \"integrity\": \"sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.19\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.19.tgz\",\n      \"integrity\": \"sha512-kf37QtfW+Hwx/buWGMPcR60iF9ziHa6r/CZJIHbmcm4+0qrXiVdxegAH0F6yddEVQ7zdkjcGCgCzUu+BcbhQxw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@pkgjs/parseargs\": {\n      \"version\": \"0.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@promptbook/utils\": {\n      \"version\": \"0.69.5\",\n      \"resolved\": \"https://registry.npmjs.org/@promptbook/utils/-/utils-0.69.5.tgz\",\n      \"integrity\": \"sha512-xm5Ti/Hp3o4xHrsK9Yy3MS6KbDxYbq485hDsFvxqaNA7equHLPdo8H8faTitTeb14QCDfLW4iwCxdVYu5sn6YQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://buymeacoffee.com/hejny\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/webgptorg/promptbook/blob/main/README.md#%EF%B8%8F-contributing\"\n        }\n      ],\n      \"license\": \"CC-BY-4.0\",\n      \"dependencies\": {\n        \"spacetrim\": \"0.11.59\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@puppeteer/browsers/-/browsers-2.4.1.tgz\",\n      \"integrity\": \"sha512-0kdAbmic3J09I6dT8e9vE2JOCSt13wHCW5x/ly8TSt2bDtuIWe2TgLZZDHdcziw9AVCzflMAXCrVyRIhIs44Ng==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"debug\": \"^4.3.7\",\n        \"extract-zip\": \"^2.0.1\",\n        \"progress\": \"^2.0.3\",\n        \"proxy-agent\": \"^6.4.0\",\n        \"semver\": \"^7.6.3\",\n        \"tar-fs\": \"^3.0.6\",\n        \"unbzip2-stream\": \"^1.4.3\",\n        \"yargs\": \"^17.7.2\"\n      },\n      \"bin\": {\n        \"browsers\": \"lib/cjs/main-cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers/node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers/node_modules/semver\": {\n      \"version\": \"7.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n      \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers/node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@puppeteer/browsers/node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@riotjs/compiler\": {\n      \"version\": \"9.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@riotjs/compiler/-/compiler-9.3.0.tgz\",\n      \"integrity\": \"sha512-q/iJOrGos6zU8hYtb5z0I4P0s3HtkCkJg7sFPaPjMygPCsojF9NzLmldKqBup5j6tuLoXCSycTupBJDec2bkKQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.26.2\",\n        \"@riotjs/parser\": \"^5.0.1\",\n        \"@riotjs/util\": \"2.4.0\",\n        \"css-simple-parser\": \"^3.0.0\",\n        \"cssesc\": \"^3.0.0\",\n        \"cumpa\": \"^2.0.1\",\n        \"curri\": \"^2.0.3\",\n        \"dom-nodes\": \"^1.1.3\",\n        \"globals\": \"^15.12.0\",\n        \"recast\": \"^0.23.9\",\n        \"source-map\": \"^0.7.4\"\n      }\n    },\n    \"node_modules/@riotjs/compiler/node_modules/globals\": {\n      \"version\": \"15.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-15.12.0.tgz\",\n      \"integrity\": \"sha512-1+gLErljJFhbOVyaetcwJiJ4+eLe45S2E7P5UiZ9xGfeq3ATQf5DOv9G7MH3gGbKQLkzmNh2DxfZwLdw+j6oTQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@riotjs/dom-bindings\": {\n      \"version\": \"9.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/@riotjs/dom-bindings/-/dom-bindings-9.2.5.tgz\",\n      \"integrity\": \"sha512-oQd6Z3jTl0WvxcveZ7WyDYbj+w9qx6UejU0PGxxMsXvj4AZfiQSOIZ5nBT+rU63pGqLhlfmYezJAr195JS5jwg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@riotjs/util\": \"^2.4.0\"\n      }\n    },\n    \"node_modules/@riotjs/parser\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@riotjs/parser/-/parser-5.0.1.tgz\",\n      \"integrity\": \"sha512-qFtU+GQJtNsMEyKCX2XlHGKLOZ/+WAaLXKlxG4cOH30dQxiGJ4ddMCRIwkS0YuwkvtzAoCwwat5CW8jjpJaJjA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"curri\": \"^2.0.3\",\n        \"dom-nodes\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=4.2\",\n        \"npm\": \">=3.0\"\n      }\n    },\n    \"node_modules/@riotjs/prettier-config\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@riotjs/prettier-config/-/prettier-config-1.1.0.tgz\",\n      \"integrity\": \"sha512-EuBhKxw/rABgqJk/g2sBOG0T1MneKeXhR0LdNcouz832P99ABm+vahKhPlpleNq7Boai74zcG4ig13yfZuJdAw==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"prettier\": \"^2.0.0 || ^3.0.0\"\n      }\n    },\n    \"node_modules/@riotjs/register\": {\n      \"version\": \"9.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@riotjs/register/-/register-9.1.0.tgz\",\n      \"integrity\": \"sha512-VENHN/eIfd6KOJMfi0wcbe6fDbLTffhGGOoq3QQcCLNwuxfHW2xPaRIIES/4bVLzrWwkTU10PqymqZqUELoFXQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"@riotjs/compiler\": \"^9.0.0\"\n      }\n    },\n    \"node_modules/@riotjs/util\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@riotjs/util/-/util-2.4.0.tgz\",\n      \"integrity\": \"sha512-zhuJobO+FsmA6hKS9qPIjQ2SLI+kY29JtAztNtbI8EsE0vyF9YQLRNPRt2wi3uozxgC1YFe/9o0Olzo3HQ6XYw==\"\n    },\n    \"node_modules/@rollup/plugin-commonjs\": {\n      \"version\": \"28.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-28.0.1.tgz\",\n      \"integrity\": \"sha512-+tNWdlWKbpB3WgBN7ijjYkq9X5uhjmcvyjEght4NmH5fAU++zfQzAJ6wumLS+dNcvwEZhKx2Z+skY8m7v0wGSA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@rollup/pluginutils\": \"^5.0.1\",\n        \"commondir\": \"^1.0.1\",\n        \"estree-walker\": \"^2.0.2\",\n        \"fdir\": \"^6.2.0\",\n        \"is-reference\": \"1.2.1\",\n        \"magic-string\": \"^0.30.3\",\n        \"picomatch\": \"^4.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=16.0.0 || 14 >= 14.17\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^2.68.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/plugin-node-resolve\": {\n      \"version\": \"15.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-15.3.0.tgz\",\n      \"integrity\": \"sha512-9eO5McEICxMzJpDW9OnMYSv4Sta3hmt7VtBFz5zR9273suNOydOyq/FrGeGy+KsTRFm8w0SLVhzig2ILFT63Ag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@rollup/pluginutils\": \"^5.0.1\",\n        \"@types/resolve\": \"1.20.2\",\n        \"deepmerge\": \"^4.2.2\",\n        \"is-module\": \"^1.0.0\",\n        \"resolve\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^2.78.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/pluginutils\": {\n      \"version\": \"5.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.0.5.tgz\",\n      \"integrity\": \"sha512-6aEYR910NyP73oHiJglti74iRyOwgFU4x3meH/H8OJx6Ry0j6cOVZ5X/wTvub7G7Ao6qaHBEaNsV3GLJkSsF+Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"^1.0.0\",\n        \"estree-walker\": \"^2.0.2\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"rollup\": \"^1.20.0||^2.0.0||^3.0.0||^4.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"rollup\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@rollup/pluginutils/node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/@rollup/rollup-android-arm-eabi\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.24.4.tgz\",\n      \"integrity\": \"sha512-jfUJrFct/hTA0XDM5p/htWKoNNTbDLY0KRwEt6pyOA6k2fmk0WVwl65PdUdJZgzGEHWx+49LilkcSaumQRyNQw==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-android-arm64\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.24.4.tgz\",\n      \"integrity\": \"sha512-j4nrEO6nHU1nZUuCfRKoCcvh7PIywQPUCBa2UsootTHvTHIoIu2BzueInGJhhvQO/2FTRdNYpf63xsgEqH9IhA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-arm64\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.24.4.tgz\",\n      \"integrity\": \"sha512-GmU/QgGtBTeraKyldC7cDVVvAJEOr3dFLKneez/n7BvX57UdhOqDsVwzU7UOnYA7AAOt+Xb26lk79PldDHgMIQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-darwin-x64\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.24.4.tgz\",\n      \"integrity\": \"sha512-N6oDBiZCBKlwYcsEPXGDE4g9RoxZLK6vT98M8111cW7VsVJFpNEqvJeIPfsCzbf0XEakPslh72X0gnlMi4Ddgg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-freebsd-arm64\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.24.4.tgz\",\n      \"integrity\": \"sha512-py5oNShCCjCyjWXCZNrRGRpjWsF0ic8f4ieBNra5buQz0O/U6mMXCpC1LvrHuhJsNPgRt36tSYMidGzZiJF6mw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-freebsd-x64\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.24.4.tgz\",\n      \"integrity\": \"sha512-L7VVVW9FCnTTp4i7KrmHeDsDvjB4++KOBENYtNYAiYl96jeBThFfhP6HVxL74v4SiZEVDH/1ILscR5U9S4ms4g==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.24.4.tgz\",\n      \"integrity\": \"sha512-10ICosOwYChROdQoQo589N5idQIisxjaFE/PAnX2i0Zr84mY0k9zul1ArH0rnJ/fpgiqfu13TFZR5A5YJLOYZA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm-musleabihf\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.24.4.tgz\",\n      \"integrity\": \"sha512-ySAfWs69LYC7QhRDZNKqNhz2UKN8LDfbKSMAEtoEI0jitwfAG2iZwVqGACJT+kfYvvz3/JgsLlcBP+WWoKCLcw==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.24.4.tgz\",\n      \"integrity\": \"sha512-uHYJ0HNOI6pGEeZ/5mgm5arNVTI0nLlmrbdph+pGXpC9tFHFDQmDMOEqkmUObRfosJqpU8RliYoGz06qSdtcjg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-arm64-musl\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.24.4.tgz\",\n      \"integrity\": \"sha512-38yiWLemQf7aLHDgTg85fh3hW9stJ0Muk7+s6tIkSUOMmi4Xbv5pH/5Bofnsb6spIwD5FJiR+jg71f0CH5OzoA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-powerpc64le-gnu\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.24.4.tgz\",\n      \"integrity\": \"sha512-q73XUPnkwt9ZNF2xRS4fvneSuaHw2BXuV5rI4cw0fWYVIWIBeDZX7c7FWhFQPNTnE24172K30I+dViWRVD9TwA==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-riscv64-gnu\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.24.4.tgz\",\n      \"integrity\": \"sha512-Aie/TbmQi6UXokJqDZdmTJuZBCU3QBDA8oTKRGtd4ABi/nHgXICulfg1KI6n9/koDsiDbvHAiQO3YAUNa/7BCw==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-s390x-gnu\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.24.4.tgz\",\n      \"integrity\": \"sha512-P8MPErVO/y8ohWSP9JY7lLQ8+YMHfTI4bAdtCi3pC2hTeqFJco2jYspzOzTUB8hwUWIIu1xwOrJE11nP+0JFAQ==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-gnu\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.24.4.tgz\",\n      \"integrity\": \"sha512-K03TljaaoPK5FOyNMZAAEmhlyO49LaE4qCsr0lYHUKyb6QacTNF9pnfPpXnFlFD3TXuFbFbz7tJ51FujUXkXYA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-linux-x64-musl\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.24.4.tgz\",\n      \"integrity\": \"sha512-VJYl4xSl/wqG2D5xTYncVWW+26ICV4wubwN9Gs5NrqhJtayikwCXzPL8GDsLnaLU3WwhQ8W02IinYSFJfyo34Q==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.24.4.tgz\",\n      \"integrity\": \"sha512-ku2GvtPwQfCqoPFIJCqZ8o7bJcj+Y54cZSr43hHca6jLwAiCbZdBUOrqE6y29QFajNAzzpIOwsckaTFmN6/8TA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.24.4.tgz\",\n      \"integrity\": \"sha512-V3nCe+eTt/W6UYNr/wGvO1fLpHUrnlirlypZfKCT1fG6hWfqhPgQV/K/mRBXBpxc0eKLIF18pIOFVPh0mqHjlg==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@rollup/rollup-win32-x64-msvc\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.24.4.tgz\",\n      \"integrity\": \"sha512-LTw1Dfd0mBIEqUVCxbvTE/LLo+9ZxVC9k99v1v4ahg9Aak6FpqOfNu5kRkeTAn0wphoC4JU7No1/rL+bBCEwhg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ]\n    },\n    \"node_modules/@sec-ant/readable-stream\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@sec-ant/readable-stream/-/readable-stream-0.4.1.tgz\",\n      \"integrity\": \"sha512-831qok9r2t8AlxLko40y2ebgSDhenenCatLVeW/uBtnHPyhHOvG0C7TvfgecV+wHzIm5KUICgzmVpWS+IMEAeg==\",\n      \"dev\": true\n    },\n    \"node_modules/@sideway/address\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@sideway/address/-/address-4.1.5.tgz\",\n      \"integrity\": \"sha512-IqO/DUQHUkPeixNQ8n0JA6102hT9CmaljNTPmQ1u8MEhBo/R4Q8eKLN/vGZxuebwOroDB4cbpjheD4+/sKFK4Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@hapi/hoek\": \"^9.0.0\"\n      }\n    },\n    \"node_modules/@sideway/formula\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@sideway/formula/-/formula-3.0.1.tgz\",\n      \"integrity\": \"sha512-/poHZJJVjx3L+zVD6g9KgHfYnb443oi7wLu/XKojDviHy6HOEOA6z1Trk5aR1dGcmPenJEgb2sK2I80LeS3MIg==\",\n      \"dev\": true\n    },\n    \"node_modules/@sideway/pinpoint\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sideway/pinpoint/-/pinpoint-2.0.0.tgz\",\n      \"integrity\": \"sha512-RNiOoTPkptFtSVzQevY/yWtZwf/RxyVnPy/OcA9HBM3MlGDnBEYL5B41H0MTn0Uec8Hi+2qUtTfG2WWZBmMejQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@sinclair/typebox\": {\n      \"version\": \"0.27.8\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz\",\n      \"integrity\": \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@sindresorhus/is\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz\",\n      \"integrity\": \"sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/is?sponsor=1\"\n      }\n    },\n    \"node_modules/@sindresorhus/merge-streams\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sindresorhus/merge-streams/-/merge-streams-4.0.0.tgz\",\n      \"integrity\": \"sha512-tlqY9xq5ukxTUZBmoOp+m61cqwQD5pHJtFY3Mn8CA8ps6yghLH/Hw8UPdqg4OLmFW3IFlcXnQNmo/dh8HzXYIQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@sinonjs/commons\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/commons/-/commons-3.0.1.tgz\",\n      \"integrity\": \"sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-detect\": \"4.0.8\"\n      }\n    },\n    \"node_modules/@sinonjs/fake-timers\": {\n      \"version\": \"13.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-13.0.2.tgz\",\n      \"integrity\": \"sha512-4Bb+oqXZTSTZ1q27Izly9lv8B9dlV61CROxPiVtywwzv5SnytJqhvYe6FclHYuXml4cd1VHPo1zd5PmTeJozvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinonjs/commons\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/@sinonjs/samsam\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/samsam/-/samsam-8.0.2.tgz\",\n      \"integrity\": \"sha512-v46t/fwnhejRSFTGqbpn9u+LQ9xJDse10gNnPgAcxgdoCDMXj/G2asWAC/8Qs+BAZDicX+MNZouXT1A7c83kVw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinonjs/commons\": \"^3.0.1\",\n        \"lodash.get\": \"^4.4.2\",\n        \"type-detect\": \"^4.1.0\"\n      }\n    },\n    \"node_modules/@sinonjs/samsam/node_modules/type-detect\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.1.0.tgz\",\n      \"integrity\": \"sha512-Acylog8/luQ8L7il+geoSxhEkazvkslg7PSNKOX59mbB9cOveP5aq9h74Y7YU8yDpJwetzQQrfIwtf4Wp4LKcw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/@sinonjs/text-encoding\": {\n      \"version\": \"0.7.3\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/text-encoding/-/text-encoding-0.7.3.tgz\",\n      \"integrity\": \"sha512-DE427ROAphMQzU4ENbliGYrBSYPXF+TtLg9S8vzeA+OF4ZKzoDdzfL8sxuMUGS/lgRhM6j1URSk9ghf7Xo1tyA==\",\n      \"dev\": true\n    },\n    \"node_modules/@szmarczak/http-timer\": {\n      \"version\": \"4.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz\",\n      \"integrity\": \"sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"defer-to-connect\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@testing-library/dom\": {\n      \"version\": \"9.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/dom/-/dom-9.3.3.tgz\",\n      \"integrity\": \"sha512-fB0R+fa3AUqbLHWyxXa2kGVtf1Fe1ZZFr0Zp6AIbIAzXb2mKbEXl+PCQNUOaq5lbTab5tfctfXRNsWXxa2f7Aw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.10.4\",\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@types/aria-query\": \"^5.0.1\",\n        \"aria-query\": \"5.1.3\",\n        \"chalk\": \"^4.1.0\",\n        \"dom-accessibility-api\": \"^0.5.9\",\n        \"lz-string\": \"^1.5.0\",\n        \"pretty-format\": \"^27.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@testing-library/user-event\": {\n      \"version\": \"14.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/user-event/-/user-event-14.5.2.tgz\",\n      \"integrity\": \"sha512-YAh82Wh4TIrxYLmfGcixwD18oIjyC1pFQC2Y01F2lzV2HTMiYrI0nze0FD0ocB//CKS/7jIUgae+adPqxK5yCQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\",\n        \"npm\": \">=6\"\n      },\n      \"peerDependencies\": {\n        \"@testing-library/dom\": \">=7.21.4\"\n      }\n    },\n    \"node_modules/@tootallnate/quickjs-emscripten\": {\n      \"version\": \"0.23.0\",\n      \"resolved\": \"https://registry.npmjs.org/@tootallnate/quickjs-emscripten/-/quickjs-emscripten-0.23.0.tgz\",\n      \"integrity\": \"sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/aria-query\": {\n      \"version\": \"5.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/aria-query/-/aria-query-5.0.4.tgz\",\n      \"integrity\": \"sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/@types/cacheable-request\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.3.tgz\",\n      \"integrity\": \"sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/http-cache-semantics\": \"*\",\n        \"@types/keyv\": \"^3.1.4\",\n        \"@types/node\": \"*\",\n        \"@types/responselike\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@types/estree\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz\",\n      \"integrity\": \"sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/http-cache-semantics\": {\n      \"version\": \"4.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.4.tgz\",\n      \"integrity\": \"sha512-1m0bIFVc7eJWyve9S0RnuRgcQqF/Xd5QsUZAZeQFr1Q3/p9JWoQQEqmVy+DPTNpGXwhgIetAoYF8JSc33q29QA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/istanbul-lib-coverage\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.6.tgz\",\n      \"integrity\": \"sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/istanbul-lib-report\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.3.tgz\",\n      \"integrity\": \"sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/istanbul-lib-coverage\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-reports\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.4.tgz\",\n      \"integrity\": \"sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/istanbul-lib-report\": \"*\"\n      }\n    },\n    \"node_modules/@types/json5\": {\n      \"version\": \"0.0.29\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz\",\n      \"integrity\": \"sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/keyv\": {\n      \"version\": \"3.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz\",\n      \"integrity\": \"sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/mocha\": {\n      \"version\": \"10.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mocha/-/mocha-10.0.6.tgz\",\n      \"integrity\": \"sha512-dJvrYWxP/UcXm36Qn36fxhUKu8A/xMRXVT2cliFF1Z7UA9liG5Psj3ezNSZw+5puH2czDXRLcXQxf8JbJt0ejg==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/mute-stream\": {\n      \"version\": \"0.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mute-stream/-/mute-stream-0.0.4.tgz\",\n      \"integrity\": \"sha512-CPM9nzrCPPJHQNA9keH9CVkVI+WR5kMa+7XEs5jcGQ0VoAGnLv242w8lIVgwAEfmE4oufJRaTc9PNLQl0ioAow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"20.11.30\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.11.30.tgz\",\n      \"integrity\": \"sha512-dHM6ZxwlmuZaRmUPfv1p+KrdD1Dci04FbdEm/9wEMouFqxYoFl5aMkt0VMAUtYRQDyYvD41WJLukhq/ha3YuTw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~5.26.4\"\n      }\n    },\n    \"node_modules/@types/normalize-package-data\": {\n      \"version\": \"2.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/normalize-package-data/-/normalize-package-data-2.4.4.tgz\",\n      \"integrity\": \"sha512-37i+OaWTh9qeK4LSHPsyRC7NahnGotNuZvjLSgcPzblpHB3rrCJxAOgI5gCdKm7coonsaX1Of0ILiTcnZjbfxA==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/resolve\": {\n      \"version\": \"1.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz\",\n      \"integrity\": \"sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/responselike\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/responselike/-/responselike-1.0.3.tgz\",\n      \"integrity\": \"sha512-H/+L+UkTV33uf49PH5pCAUBVPNj2nDBXTN+qS1dOwyyg24l3CcicicCA7ca+HMvJBZcFgl5r8e+RR6elsb4Lyw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/sinonjs__fake-timers\": {\n      \"version\": \"8.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/sinonjs__fake-timers/-/sinonjs__fake-timers-8.1.5.tgz\",\n      \"integrity\": \"sha512-mQkU2jY8jJEF7YHjHvsQO8+3ughTL1mcnn96igfhONmR+fUPSKIkefQYpSe8bsly2Ep7oQbn/6VG5/9/0qcArQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/stack-utils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz\",\n      \"integrity\": \"sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-113D3mDkZDjo+EeUEHCFy0qniNc1ZpecGiAU7WSo7YDoSzolZIQKpYFHrPpjkB2nuyahcKfrmLXeQlh7gqJYdw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/wrap-ansi\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/wrap-ansi/-/wrap-ansi-3.0.0.tgz\",\n      \"integrity\": \"sha512-ltIpx+kM7g/MLRZfkbL7EsCEjfzCcScLpkg37eXEtx5kmrAKBkTJwd1GIAjDSL8wTpM6Hzn5YO4pSb91BEwu1g==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/ws\": {\n      \"version\": \"8.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/@types/ws/-/ws-8.5.13.tgz\",\n      \"integrity\": \"sha512-osM/gWBTPKgHV8XkTunnegTRIsvF6owmf5w+JtAfOw472dptdm0dlGv4xCt6GwQRcC2XVOvvRE/0bAoQcL2QkA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/yargs\": {\n      \"version\": \"17.0.33\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs/-/yargs-17.0.33.tgz\",\n      \"integrity\": \"sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/yargs-parser\": \"*\"\n      }\n    },\n    \"node_modules/@types/yargs-parser\": {\n      \"version\": \"21.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.3.tgz\",\n      \"integrity\": \"sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@types/yauzl\": {\n      \"version\": \"2.10.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.3.tgz\",\n      \"integrity\": \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@ungap/structured-clone\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz\",\n      \"integrity\": \"sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@vitest/pretty-format\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-2.1.2.tgz\",\n      \"integrity\": \"sha512-FIoglbHrSUlOJPDGIrh2bjX1sNars5HbxlcsFKCtKzu4+5lpsRhOCVcuzp0fEhAGHkPZRIXVNzPcpSlkoZ3LuA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tinyrainbow\": \"^1.2.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/@vitest/snapshot\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@vitest/snapshot/-/snapshot-2.1.2.tgz\",\n      \"integrity\": \"sha512-xtAeNsZ++aRIYIUsek7VHzry/9AcxeULlegBvsdLncLmNCR6tR8SRjn8BbDP4naxtccvzTqZ+L1ltZlRCfBZFA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@vitest/pretty-format\": \"2.1.2\",\n        \"magic-string\": \"^0.30.11\",\n        \"pathe\": \"^1.1.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/vitest\"\n      }\n    },\n    \"node_modules/@wdio/cli\": {\n      \"version\": \"9.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/cli/-/cli-9.2.11.tgz\",\n      \"integrity\": \"sha512-vXt5rs4lSNqBpYZkEL2msV3QeczOBqXNdtuEwVolOTChQ6huwnvxARM0l0XAnzDYfGIx3mxIWEVjEQ9TmLQUdw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^20.1.1\",\n        \"@vitest/snapshot\": \"^2.1.1\",\n        \"@wdio/config\": \"9.2.8\",\n        \"@wdio/globals\": \"9.2.11\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/protocols\": \"9.2.2\",\n        \"@wdio/types\": \"9.2.2\",\n        \"@wdio/utils\": \"9.2.8\",\n        \"async-exit-hook\": \"^2.0.1\",\n        \"chalk\": \"^5.2.0\",\n        \"chokidar\": \"^4.0.0\",\n        \"cli-spinners\": \"^3.0.0\",\n        \"dotenv\": \"^16.3.1\",\n        \"ejs\": \"^3.1.9\",\n        \"execa\": \"^9.2.0\",\n        \"import-meta-resolve\": \"^4.0.0\",\n        \"inquirer\": \"^11.0.1\",\n        \"lodash.flattendeep\": \"^4.4.0\",\n        \"lodash.pickby\": \"^4.6.0\",\n        \"lodash.union\": \"^4.6.0\",\n        \"read-pkg-up\": \"^10.0.0\",\n        \"recursive-readdir\": \"^2.2.3\",\n        \"tsx\": \"^4.7.2\",\n        \"webdriverio\": \"9.2.11\",\n        \"yargs\": \"^17.7.2\"\n      },\n      \"bin\": {\n        \"wdio\": \"bin/wdio.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/chalk\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.3.0.tgz\",\n      \"integrity\": \"sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/chokidar\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-4.0.1.tgz\",\n      \"integrity\": \"sha512-n8enUVCED/KVRQlab1hr3MVpcVMvxtZjmEa956u+4YijlmQED223XMSYj2tLuKvr4jcCTzNNMpQDUer72MMmzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"readdirp\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.16.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/execa\": {\n      \"version\": \"9.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-9.3.1.tgz\",\n      \"integrity\": \"sha512-gdhefCCNy/8tpH/2+ajP9IQc14vXchNdd0weyzSJEFURhRMGncQ+zKFxwjAufIewPEJm9BPOaJnvg2UtlH2gPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sindresorhus/merge-streams\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.3\",\n        \"figures\": \"^6.1.0\",\n        \"get-stream\": \"^9.0.0\",\n        \"human-signals\": \"^8.0.0\",\n        \"is-plain-obj\": \"^4.1.0\",\n        \"is-stream\": \"^4.0.1\",\n        \"npm-run-path\": \"^5.2.0\",\n        \"pretty-ms\": \"^9.0.0\",\n        \"signal-exit\": \"^4.1.0\",\n        \"strip-final-newline\": \"^4.0.0\",\n        \"yoctocolors\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^18.19.0 || >=20.5.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/get-stream\": {\n      \"version\": \"9.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-9.0.1.tgz\",\n      \"integrity\": \"sha512-kVCxPF3vQM/N0B1PmoqVUqgHP+EeVjmZSQn+1oCRPxd2P21P2F19lIgbR3HBosbB1PUhOAoctJnfEn2GbN2eZA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sec-ant/readable-stream\": \"^0.4.1\",\n        \"is-stream\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/human-signals\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-8.0.0.tgz\",\n      \"integrity\": \"sha512-/1/GPCpDUCCYwlERiYjxoczfP0zfvZMU/OWgQPMya9AbAE24vseigFdhAMObpc8Q4lc/kjutPfUddDYyAmejnA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18.18.0\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/is-stream\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-4.0.1.tgz\",\n      \"integrity\": \"sha512-Dnz92NInDqYckGEUJv689RbRiTSEHCQ7wOVeALbkOz999YpqT46yMRIGtSNl2iCL1waAZSx40+h59NV/EwzV/A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/npm-run-path\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz\",\n      \"integrity\": \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/path-key\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz\",\n      \"integrity\": \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/readdirp\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-4.0.2.tgz\",\n      \"integrity\": \"sha512-yDMz9g+VaZkqBYS/ozoBJwaBhTbZo3UNYQHNRw1D3UFQB8oHB4uS/tAODO+ZLjGWmUbKnIlOWO+aaIiAxrUWHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 14.16.0\"\n      },\n      \"funding\": {\n        \"type\": \"individual\",\n        \"url\": \"https://paulmillr.com/funding/\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/strip-final-newline\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-4.0.0.tgz\",\n      \"integrity\": \"sha512-aulFJcD6YK8V1G7iRB5tigAP4TsHBZZrOV8pjV++zdUwmeV8uzbY7yn6h9MswN62adStNZFuCIx4haBnRuMDaw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@wdio/cli/node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@wdio/config\": {\n      \"version\": \"9.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/config/-/config-9.2.8.tgz\",\n      \"integrity\": \"sha512-EGMmBPGJbz6RmgMjebRWkWu3fGyeTIRcusF4UA4f2tiUEKY8nbzUO/ZyDjVQNR+YVB40q0jcqAqpszYRrIzzeg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/types\": \"9.2.2\",\n        \"@wdio/utils\": \"9.2.8\",\n        \"decamelize\": \"^6.0.0\",\n        \"deepmerge-ts\": \"^7.0.3\",\n        \"glob\": \"^10.2.2\",\n        \"import-meta-resolve\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/config/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@wdio/config/node_modules/decamelize\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-6.0.0.tgz\",\n      \"integrity\": \"sha512-Fv96DCsdOgB6mdGl67MT5JaTNKRzrzill5OH5s8bjYJXVlcXyPYGyPsUkWyGV5p1TXI5esYIYMMeDJL0hEIwaA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@wdio/config/node_modules/glob\": {\n      \"version\": \"10.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.5.tgz\",\n      \"integrity\": \"sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^3.1.2\",\n        \"minimatch\": \"^9.0.4\",\n        \"minipass\": \"^7.1.2\",\n        \"package-json-from-dist\": \"^1.0.0\",\n        \"path-scurry\": \"^1.11.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/@wdio/config/node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/@wdio/globals\": {\n      \"version\": \"9.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/globals/-/globals-9.2.11.tgz\",\n      \"integrity\": \"sha512-wdsRt4Dd5tRvm8cAGry9dU1a7F+wi1VnrQou9pkGNvAdn/holiLz7qV8Rk+PO5t9uP1gY8JbXpNnPUVRS9htIA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      },\n      \"optionalDependencies\": {\n        \"expect-webdriverio\": \"^5.0.1\",\n        \"webdriverio\": \"9.2.11\"\n      }\n    },\n    \"node_modules/@wdio/local-runner\": {\n      \"version\": \"9.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/local-runner/-/local-runner-9.2.11.tgz\",\n      \"integrity\": \"sha512-3TkdpgfcQkH2RQy/aHJePuy9y2qtkR/Y6yZZykg2GsD9lPoybAYfgXZDKoPA7RR5uAVOLzTfcM4N/HMlWNTjSw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^20.1.0\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/repl\": \"9.0.8\",\n        \"@wdio/runner\": \"9.2.11\",\n        \"@wdio/types\": \"9.2.2\",\n        \"async-exit-hook\": \"^2.0.1\",\n        \"split2\": \"^4.1.0\",\n        \"stream-buffers\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/logger\": {\n      \"version\": \"9.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/logger/-/logger-9.1.3.tgz\",\n      \"integrity\": \"sha512-cumRMK/gE1uedBUw3WmWXOQ7HtB6DR8EyKQioUz2P0IJtRRpglMBdZV7Svr3b++WWawOuzZHMfbTkJQmaVt8Gw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^5.1.2\",\n        \"loglevel\": \"^1.6.0\",\n        \"loglevel-plugin-prefix\": \"^0.8.4\",\n        \"strip-ansi\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/logger/node_modules/ansi-regex\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@wdio/logger/node_modules/chalk\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.3.0.tgz\",\n      \"integrity\": \"sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@wdio/logger/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@wdio/mocha-framework\": {\n      \"version\": \"9.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/mocha-framework/-/mocha-framework-9.2.8.tgz\",\n      \"integrity\": \"sha512-lCek1D+Cdnb8sF/E/PkdKX1PLrq677YVKHV6hFlZeRHWKcJyopCTvhwnJerZNFgmcTuZ6zeiGLcNNlPdQzF4oQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/mocha\": \"^10.0.6\",\n        \"@types/node\": \"^20.11.28\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/types\": \"9.2.2\",\n        \"@wdio/utils\": \"9.2.8\",\n        \"mocha\": \"^10.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/protocols\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/protocols/-/protocols-9.2.2.tgz\",\n      \"integrity\": \"sha512-0GMUSHCbYm+J+rnRU6XPtaUgVCRICsiH6W5zCXpePm3wLlbmg/mvZ+4OnNErssbpIOulZuAmC2jNmut2AEfWSw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@wdio/repl\": {\n      \"version\": \"9.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/repl/-/repl-9.0.8.tgz\",\n      \"integrity\": \"sha512-3iubjl4JX5zD21aFxZwQghqC3lgu+mSs8c3NaiYYNCC+IT5cI/8QuKlgh9s59bu+N3gG988jqMJeCYlKuUv/iw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"^20.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/reporter\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/reporter/-/reporter-9.2.2.tgz\",\n      \"integrity\": \"sha512-3FxIMol0lTQ8S0gSlgvBpjTg9w/GRCFH+juHVIwjmdeqgKwID0IoKGxLo2enLjR7T3wsWUzN6JaqL/fa4nAK4A==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^20.1.0\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/types\": \"9.2.2\",\n        \"diff\": \"^7.0.0\",\n        \"object-inspect\": \"^1.12.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/reporter/node_modules/diff\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-7.0.0.tgz\",\n      \"integrity\": \"sha512-PJWHUb1RFevKCwaFA9RlG5tCd+FO5iRh9A8HEtkmBH2Li03iJriB6m6JIN4rGz3K3JLawI7/veA1xzRKP6ISBw==\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/@wdio/runner\": {\n      \"version\": \"9.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/runner/-/runner-9.2.11.tgz\",\n      \"integrity\": \"sha512-W+KSatpXsI+m2NdZMI4h2cOZNS+IpX79Jxdwh3i7fljg9BI2+QpI/ssTjtA49v+PA9APsDECgU+Zb+6kg1aGlQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^20.11.28\",\n        \"@wdio/config\": \"9.2.8\",\n        \"@wdio/globals\": \"9.2.11\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/types\": \"9.2.2\",\n        \"@wdio/utils\": \"9.2.8\",\n        \"deepmerge-ts\": \"^7.0.3\",\n        \"expect-webdriverio\": \"^5.0.1\",\n        \"webdriver\": \"9.2.8\",\n        \"webdriverio\": \"9.2.11\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/sauce-service\": {\n      \"version\": \"9.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/sauce-service/-/sauce-service-9.2.11.tgz\",\n      \"integrity\": \"sha512-TlzXk/GV1GRHIYBmS8vpX0vPCjgjxbJiHomaDpYe/iMVDX8waLWW11WE2umOlnCyOPjBNDXKczeba8nVgzedvg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/types\": \"9.2.2\",\n        \"@wdio/utils\": \"9.2.8\",\n        \"ip\": \"^2.0.1\",\n        \"saucelabs\": \"8.0.0\",\n        \"webdriverio\": \"9.2.11\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/spec-reporter\": {\n      \"version\": \"9.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/spec-reporter/-/spec-reporter-9.2.8.tgz\",\n      \"integrity\": \"sha512-68BH6TconFWDFQebqgRsKnQtbbmBoj56fSSlUq5+HSn8yoItTdaG6bYQ+rDpXD9RD9K46C2h622PtSV4ozIR1A==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@wdio/reporter\": \"9.2.2\",\n        \"@wdio/types\": \"9.2.2\",\n        \"chalk\": \"^5.1.2\",\n        \"easy-table\": \"^1.2.0\",\n        \"pretty-ms\": \"^9.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/spec-reporter/node_modules/chalk\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.3.0.tgz\",\n      \"integrity\": \"sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@wdio/types\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/types/-/types-9.2.2.tgz\",\n      \"integrity\": \"sha512-nHZ9Ne9iRQFJ1TOYKUn4Fza69IshTTzk6RYmSZ51ImGs9uMZu0+S0Jm9REdly+VLN3FzxG6g2QSe0/F3uNVPdw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^20.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/utils\": {\n      \"version\": \"9.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/utils/-/utils-9.2.8.tgz\",\n      \"integrity\": \"sha512-rKm5FXkpsCyeqh8tdirtRUHvgNytWNMiaVKdctsvKOJvqnDVPAAQcz9Wmgo7bSwoLwtSHcDaRoxY7olV7J4QnA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@puppeteer/browsers\": \"^2.2.0\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/types\": \"9.2.2\",\n        \"decamelize\": \"^6.0.0\",\n        \"deepmerge-ts\": \"^7.0.3\",\n        \"edgedriver\": \"^5.6.1\",\n        \"geckodriver\": \"^4.3.3\",\n        \"get-port\": \"^7.0.0\",\n        \"import-meta-resolve\": \"^4.0.0\",\n        \"locate-app\": \"^2.2.24\",\n        \"safaridriver\": \"^0.1.2\",\n        \"split2\": \"^4.2.0\",\n        \"wait-port\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/@wdio/utils/node_modules/decamelize\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-6.0.0.tgz\",\n      \"integrity\": \"sha512-Fv96DCsdOgB6mdGl67MT5JaTNKRzrzill5OH5s8bjYJXVlcXyPYGyPsUkWyGV5p1TXI5esYIYMMeDJL0hEIwaA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@zeit/schemas\": {\n      \"version\": \"2.36.0\",\n      \"resolved\": \"https://registry.npmjs.org/@zeit/schemas/-/schemas-2.36.0.tgz\",\n      \"integrity\": \"sha512-7kjMwcChYEzMKjeex9ZFXkt1AyNov9R5HZtjBKVsmVpw7pa7ZtlCGvCBC2vnnXctaYN+aRI61HjIqeetZW5ROg==\",\n      \"dev\": true\n    },\n    \"node_modules/@zip.js/zip.js\": {\n      \"version\": \"2.7.53\",\n      \"resolved\": \"https://registry.npmjs.org/@zip.js/zip.js/-/zip.js-2.7.53.tgz\",\n      \"integrity\": \"sha512-G6Bl5wN9EXXVaTUIox71vIX5Z454zEBe+akKpV4m1tUboIctT5h7ID3QXCJd/Lfy2rSvmkTmZIucf1jGRR4f5A==\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"bun\": \">=0.7.0\",\n        \"deno\": \">=1.0.0\",\n        \"node\": \">=16.5.0\"\n      }\n    },\n    \"node_modules/abort-controller\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz\",\n      \"integrity\": \"sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"event-target-shim\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.5\"\n      }\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.10.0.tgz\",\n      \"integrity\": \"sha512-F0SAmZ8iUtS//m8DmCTA0jlh6TDKkHQyK6xc6V4KDTyZKA9dnvX9/3sRTVQrWm79glUAZbnmmNcdYwUIHWVybw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/agent-base\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/agent-base/-/agent-base-7.1.1.tgz\",\n      \"integrity\": \"sha512-H0TSyFNDMomMNJQBn8wFV5YC/2eJ+VXECwOadZJT554xP6cODZHPX3H9QMQECxvrgiSOP1pHjy1sMWQVYJOUOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-align\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.1.tgz\",\n      \"integrity\": \"sha512-IOfwwBF5iczOjp/WeY4YxyjqAFMQoZufdQWDd19SEExbVLNXqvpzSJ/M7Za4/sCPmQ0+GRquoA7bGcINcxew6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.1.0\"\n      }\n    },\n    \"node_modules/ansi-colors\": {\n      \"version\": \"4.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz\",\n      \"integrity\": \"sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-escapes/node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/anymatch/node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/arch\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/arch/-/arch-2.2.0.tgz\",\n      \"integrity\": \"sha512-Of/R0wqp83cgHozfIYLbBMnej79U/SVGOOyuB3VVFv1NRM/PSFMK12x9KVtiYzJqmnU5WR2qp0Z5rHb7sWGnFQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/archiver\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/archiver/-/archiver-7.0.1.tgz\",\n      \"integrity\": \"sha512-ZcbTaIqJOfCc03QwD468Unz/5Ir8ATtvAHsK+FdXbDIbGfihqh9mrvdcYunQzqn4HrvWWaFyaxJhGZagaJJpPQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"archiver-utils\": \"^5.0.2\",\n        \"async\": \"^3.2.4\",\n        \"buffer-crc32\": \"^1.0.0\",\n        \"readable-stream\": \"^4.0.0\",\n        \"readdir-glob\": \"^1.1.2\",\n        \"tar-stream\": \"^3.0.0\",\n        \"zip-stream\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/archiver-utils\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/archiver-utils/-/archiver-utils-5.0.2.tgz\",\n      \"integrity\": \"sha512-wuLJMmIBQYCsGZgYLTy5FIB2pF6Lfb6cXMSF8Qywwk3t20zWnAi7zLcQFdKQmIB8wyZpY5ER38x08GbwtR2cLA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"glob\": \"^10.0.0\",\n        \"graceful-fs\": \"^4.2.0\",\n        \"is-stream\": \"^2.0.1\",\n        \"lazystream\": \"^1.0.0\",\n        \"lodash\": \"^4.17.15\",\n        \"normalize-path\": \"^3.0.0\",\n        \"readable-stream\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/archiver-utils/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/archiver-utils/node_modules/buffer\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz\",\n      \"integrity\": \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/archiver-utils/node_modules/glob\": {\n      \"version\": \"10.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.5.tgz\",\n      \"integrity\": \"sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^3.1.2\",\n        \"minimatch\": \"^9.0.4\",\n        \"minipass\": \"^7.1.2\",\n        \"package-json-from-dist\": \"^1.0.0\",\n        \"path-scurry\": \"^1.11.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/archiver-utils/node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/archiver-utils/node_modules/readable-stream\": {\n      \"version\": \"4.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-4.5.2.tgz\",\n      \"integrity\": \"sha512-yjavECdqeZ3GLXNgRXgeQEdz9fvDDkNKyHnbHRFtOr7/LcfgBcmct7t/ET+HaCTqfh06OzoAxrkN/IfjJBVe+g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"abort-controller\": \"^3.0.0\",\n        \"buffer\": \"^6.0.3\",\n        \"events\": \"^3.3.0\",\n        \"process\": \"^0.11.10\",\n        \"string_decoder\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/archiver-utils/node_modules/string_decoder\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz\",\n      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.2.0\"\n      }\n    },\n    \"node_modules/archiver/node_modules/buffer\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz\",\n      \"integrity\": \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/archiver/node_modules/buffer-crc32\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-1.0.0.tgz\",\n      \"integrity\": \"sha512-Db1SbgBS/fg/392AblrMJk97KggmvYhr4pB5ZIMTWtaivCPMWLkmb7m21cJvpvgK+J3nsU2CmmixNBZx4vFj/w==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/archiver/node_modules/readable-stream\": {\n      \"version\": \"4.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-4.5.2.tgz\",\n      \"integrity\": \"sha512-yjavECdqeZ3GLXNgRXgeQEdz9fvDDkNKyHnbHRFtOr7/LcfgBcmct7t/ET+HaCTqfh06OzoAxrkN/IfjJBVe+g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"abort-controller\": \"^3.0.0\",\n        \"buffer\": \"^6.0.3\",\n        \"events\": \"^3.3.0\",\n        \"process\": \"^0.11.10\",\n        \"string_decoder\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/archiver/node_modules/string_decoder\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz\",\n      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.2.0\"\n      }\n    },\n    \"node_modules/archiver/node_modules/tar-stream\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-3.1.7.tgz\",\n      \"integrity\": \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"b4a\": \"^1.6.4\",\n        \"fast-fifo\": \"^1.2.0\",\n        \"streamx\": \"^2.15.0\"\n      }\n    },\n    \"node_modules/arg\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-5.0.2.tgz\",\n      \"integrity\": \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\",\n      \"dev\": true\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"node_modules/aria-query\": {\n      \"version\": \"5.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.1.3.tgz\",\n      \"integrity\": \"sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"deep-equal\": \"^2.0.5\"\n      }\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.0.tgz\",\n      \"integrity\": \"sha512-LPuwb2P+NrQw3XhxGc36+XSvuBPopovXYTR9Ew++Du9Yb/bx5AzBfrIsBoj0EZUifjQU+sHL21sseZ3jerWO/A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"is-array-buffer\": \"^3.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-includes\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/array-includes/-/array-includes-3.1.7.tgz\",\n      \"integrity\": \"sha512-dlcsNBIiWhPkHdOEEKnehA+RNUWDc4UqFtnIXU4uuYDPtA4LDkr7qip2p0VvFAEXNDr0yWZ9PJyIRiGjRLQzwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"is-string\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.findlastindex\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.3.tgz\",\n      \"integrity\": \"sha512-LzLoiOMAxvy+Gd3BAq3B7VeIgPdo+Q8hthvKtXybMvRV0jrXfJM/t8mw7nNlpEcVlVUnCnM2KSX4XU5HmpodOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flat\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.2.tgz\",\n      \"integrity\": \"sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flatmap\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.2.tgz\",\n      \"integrity\": \"sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/arraybuffer.prototype.slice\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.2.tgz\",\n      \"integrity\": \"sha512-yMBKppFur/fbHu9/6USUe03bZ4knMYiwFBcyiaXB8Go0qNehwX6inYPzK9U0NeQvGxKthcmHcaR8P5MStSRBAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-shared-array-buffer\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/assertion-error\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/assertion-error/-/assertion-error-2.0.1.tgz\",\n      \"integrity\": \"sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/ast-types\": {\n      \"version\": \"0.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/ast-types/-/ast-types-0.13.4.tgz\",\n      \"integrity\": \"sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"tslib\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/async\": {\n      \"version\": \"3.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.5.tgz\",\n      \"integrity\": \"sha512-baNZyqaaLhyLVKm/DlvdW051MSgO6b8eVfIezl9E5PqWxFgzLm/wQntEW4zOytVburDEr0JlALEpdOFwvErLsg==\",\n      \"dev\": true\n    },\n    \"node_modules/async-exit-hook\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/async-exit-hook/-/async-exit-hook-2.0.1.tgz\",\n      \"integrity\": \"sha512-NW2cX8m1Q7KPA7a5M2ULQeZ2wR5qI5PAbw5L0UOMxdioVk9PMZ0h1TmyZEkPYrCvYjDlFICusOu1dlEKAAeXBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/asynckit\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\",\n      \"dev\": true\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.5.tgz\",\n      \"integrity\": \"sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/axios\": {\n      \"version\": \"1.7.7\",\n      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.7.7.tgz\",\n      \"integrity\": \"sha512-S4kL7XrjgBmvdGut0sN3yJxqYzrDOnivkBiN0OFs6hLiUam3UPvswUo0kqGyhqUZGEOytHyumEdXsAkgCOUf3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"follow-redirects\": \"^1.15.6\",\n        \"form-data\": \"^4.0.0\",\n        \"proxy-from-env\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/b4a\": {\n      \"version\": \"1.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/b4a/-/b4a-1.6.7.tgz\",\n      \"integrity\": \"sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/bare-events\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/bare-events/-/bare-events-2.5.0.tgz\",\n      \"integrity\": \"sha512-/E8dDe9dsbLyh2qrZ64PEPadOQ0F4gbl1sUJOrmph7xOiIxfY8vwab/4bFLh4Y88/Hk/ujKcrQKc+ps0mv873A==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"optional\": true\n    },\n    \"node_modules/bare-fs\": {\n      \"version\": \"2.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/bare-fs/-/bare-fs-2.3.5.tgz\",\n      \"integrity\": \"sha512-SlE9eTxifPDJrT6YgemQ1WGFleevzwY+XAP1Xqgl56HtcrisC2CHCZ2tq6dBpcH2TnNxwUEUGhweo+lrQtYuiw==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"bare-events\": \"^2.0.0\",\n        \"bare-path\": \"^2.0.0\",\n        \"bare-stream\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/bare-os\": {\n      \"version\": \"2.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/bare-os/-/bare-os-2.4.4.tgz\",\n      \"integrity\": \"sha512-z3UiI2yi1mK0sXeRdc4O1Kk8aOa/e+FNWZcTiPB/dfTWyLypuE99LibgRaQki914Jq//yAWylcAt+mknKdixRQ==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"optional\": true\n    },\n    \"node_modules/bare-path\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/bare-path/-/bare-path-2.1.3.tgz\",\n      \"integrity\": \"sha512-lh/eITfU8hrj9Ru5quUp0Io1kJWIk1bTjzo7JH1P5dWmQ2EL4hFUlfI8FonAhSlgIfhn63p84CDY/x+PisgcXA==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"bare-os\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/bare-stream\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/bare-stream/-/bare-stream-2.3.2.tgz\",\n      \"integrity\": \"sha512-EFZHSIBkDgSHIwj2l2QZfP4U5OcD4xFAOwhSb/vlr9PIqyGJGvB/nfClJbcnh3EY4jtPE4zsb5ztae96bVF79A==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"streamx\": \"^2.20.0\"\n      }\n    },\n    \"node_modules/base64-js\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/basic-ftp\": {\n      \"version\": \"5.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/basic-ftp/-/basic-ftp-5.0.5.tgz\",\n      \"integrity\": \"sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/bianco.attr\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/bianco.attr/-/bianco.attr-1.1.1.tgz\",\n      \"integrity\": \"sha512-fTjfPnnGYiCVbe5UltC/LsDRtJE+MjmadtL749CMIfCwjl18sdbCkaQ7cgtSao6iC9ZJC8Pzw0rjMdIuA6mK1g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bianco.dom-to-array\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/bianco.dom-to-array\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/bianco.dom-to-array/-/bianco.dom-to-array-1.1.0.tgz\",\n      \"integrity\": \"sha512-IWUgplQRhJSZh+7PgD/my5+X27PXNUFdcHPosOYz39a/iFF8Wl9d0N/mOArdR7Zgr3J0Q9pKVk7nO6W+7XZwBg==\",\n      \"dev\": true\n    },\n    \"node_modules/bianco.query\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/bianco.query/-/bianco.query-1.1.4.tgz\",\n      \"integrity\": \"sha512-jUu8l484ckacCBmxN0gYLZ4Ge5aMfReL+aYNiC81s37s8+l0+rn9pnQayEgQtMHGlnL8ejd+x5U2PKpo0rvQzw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bianco.dom-to-array\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bl\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/bl/-/bl-1.2.3.tgz\",\n      \"integrity\": \"sha512-pvcNpa0UU69UT341rO6AYy4FVAIkUHuZXRIWbq+zHnsVcRzDDjIAhGuuYoi0d//cwIwtt4pkpKycWEfjdV+vww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"readable-stream\": \"^2.3.5\",\n        \"safe-buffer\": \"^5.1.1\"\n      }\n    },\n    \"node_modules/bluebird\": {\n      \"version\": \"3.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz\",\n      \"integrity\": \"sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==\",\n      \"dev\": true\n    },\n    \"node_modules/boolbase\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz\",\n      \"integrity\": \"sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/boxen\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/boxen/-/boxen-7.0.0.tgz\",\n      \"integrity\": \"sha512-j//dBVuyacJbvW+tvZ9HuH03fZ46QcaKvvhZickZqtB271DxJ7SNRSNxrV/dZX0085m7hISRZWbzWlJvx/rHSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-align\": \"^3.0.1\",\n        \"camelcase\": \"^7.0.0\",\n        \"chalk\": \"^5.0.1\",\n        \"cli-boxes\": \"^3.0.0\",\n        \"string-width\": \"^5.1.2\",\n        \"type-fest\": \"^2.13.0\",\n        \"widest-line\": \"^4.0.1\",\n        \"wrap-ansi\": \"^8.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14.16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/boxen/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/boxen/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/boxen/node_modules/camelcase\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-7.0.1.tgz\",\n      \"integrity\": \"sha512-xlx1yCK2Oc1APsPXDL2LdlNP6+uu8OCDdhOBSVT279M/S+y75O30C2VuD8T2ogdePBBl7PfPF4504tnLgX3zfw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14.16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/boxen/node_modules/chalk\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.3.0.tgz\",\n      \"integrity\": \"sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/boxen/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/boxen/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/boxen/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/boxen/node_modules/type-fest\": {\n      \"version\": \"2.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-2.19.0.tgz\",\n      \"integrity\": \"sha512-RAH822pAdBgcNMAfWnCBU3CFZcfZ/i1eZjwFU/dsLKumyuuP3niueg2UAukXYF0E2AAoc82ZSSf9J0WQBinzHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12.20\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/boxen/node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browser-stdout\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/browser-stdout/-/browser-stdout-1.3.1.tgz\",\n      \"integrity\": \"sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE/fXaBSmW/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==\",\n      \"dev\": true\n    },\n    \"node_modules/buffer\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\",\n      \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.1.13\"\n      }\n    },\n    \"node_modules/buffer-alloc\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz\",\n      \"integrity\": \"sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-alloc-unsafe\": \"^1.1.0\",\n        \"buffer-fill\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/buffer-alloc-unsafe\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz\",\n      \"integrity\": \"sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg==\",\n      \"dev\": true\n    },\n    \"node_modules/buffer-crc32\": {\n      \"version\": \"0.2.13\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\",\n      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/buffer-fill\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz\",\n      \"integrity\": \"sha512-T7zexNBwiiaCOGDg9xNX9PBmjrubblRkENuptryuI64URkXDFum9il/JGL8Lm8wYfAXpredVXXZz7eMHilimiQ==\",\n      \"dev\": true\n    },\n    \"node_modules/buffer-from\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz\",\n      \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\",\n      \"dev\": true\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz\",\n      \"integrity\": \"sha512-pMhOfFDPiv9t5jjIXkHosWmkSyQbvsgEVNkz0ERHbuLh2T/7j4Mqqpz523Fe8MVY89KC6Sh/QfS2sM+SjgFDcw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/c8\": {\n      \"version\": \"10.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/c8/-/c8-10.1.2.tgz\",\n      \"integrity\": \"sha512-Qr6rj76eSshu5CgRYvktW0uM0CFY0yi4Fd5D0duDXO6sYinyopmftUiJVuzBQxQcwQLor7JWDVRP+dUfCmzgJw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@bcoe/v8-coverage\": \"^0.2.3\",\n        \"@istanbuljs/schema\": \"^0.1.3\",\n        \"find-up\": \"^5.0.0\",\n        \"foreground-child\": \"^3.1.1\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"istanbul-lib-report\": \"^3.0.1\",\n        \"istanbul-reports\": \"^3.1.6\",\n        \"test-exclude\": \"^7.0.1\",\n        \"v8-to-istanbul\": \"^9.0.0\",\n        \"yargs\": \"^17.7.2\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"bin\": {\n        \"c8\": \"bin/c8.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"peerDependencies\": {\n        \"monocart-coverage-reports\": \"^2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"monocart-coverage-reports\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/c8/node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/c8/node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/c8/node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/cacheable-lookup\": {\n      \"version\": \"5.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz\",\n      \"integrity\": \"sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.6.0\"\n      }\n    },\n    \"node_modules/cacheable-request\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.4.tgz\",\n      \"integrity\": \"sha512-v+p6ongsrp0yTGbJXjgxPow2+DL93DASP4kXCDKb8/bwRtt9OEF3whggkkDkGNzgcWy2XaF4a8nZglC7uElscg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"clone-response\": \"^1.0.2\",\n        \"get-stream\": \"^5.1.0\",\n        \"http-cache-semantics\": \"^4.0.0\",\n        \"keyv\": \"^4.0.0\",\n        \"lowercase-keys\": \"^2.0.0\",\n        \"normalize-url\": \"^6.0.1\",\n        \"responselike\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cacheable-request/node_modules/get-stream\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.5.tgz\",\n      \"integrity\": \"sha512-C3nQxfFZxFRVoJoGKKI8y3MOEo129NQ+FgQ08iye+Mk4zNZZGdjfs06bVTr+DBSlA66Q2VEcMki/cUCP4SercQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"set-function-length\": \"^1.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camel-case\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/camel-case/-/camel-case-4.1.2.tgz\",\n      \"integrity\": \"sha512-gxGWBrTT1JuMx6R+o5PTXMmUnhnVzLQ9SNutD4YqKtI6ap897t3tKECYla6gCWEkplXnlNybEkZg9GEGxKFCgw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pascal-case\": \"^3.1.2\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/capital-case\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/capital-case/-/capital-case-1.0.4.tgz\",\n      \"integrity\": \"sha512-ds37W8CytHgwnhGGTi88pcPyR15qoNkOpYwmMMfnWqqWgESapLqvDx6huFjQ5vqWSn2Z06173XNA7LtMOeUh1A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\",\n        \"upper-case-first\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/chai\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chai/-/chai-5.1.2.tgz\",\n      \"integrity\": \"sha512-aGtmf24DW6MLHHG5gCx4zaI3uBq3KRtxeVs0DjFH6Z0rDNbsvTxFASFvdj79pxjxZ8/5u3PIiN3IwEIQkiiuPw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"assertion-error\": \"^2.0.1\",\n        \"check-error\": \"^2.1.1\",\n        \"deep-eql\": \"^5.0.1\",\n        \"loupe\": \"^3.1.0\",\n        \"pathval\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/chalk-template\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk-template/-/chalk-template-0.4.0.tgz\",\n      \"integrity\": \"sha512-/ghrgmhfY8RaSdeo43hNXxpoHAtxdbskUHjPpfqUWGttFgycUhYPGx3YZBCnUCvOa7Doivn1IZec3DEGFoMgLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk-template?sponsor=1\"\n      }\n    },\n    \"node_modules/change-case\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/change-case/-/change-case-4.1.2.tgz\",\n      \"integrity\": \"sha512-bSxY2ws9OtviILG1EiY5K7NNxkqg/JnRnFxLtKQ96JaviiIxi7djMrSd0ECT9AC+lttClmYwKw53BWpOMblo7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camel-case\": \"^4.1.2\",\n        \"capital-case\": \"^1.0.4\",\n        \"constant-case\": \"^3.0.4\",\n        \"dot-case\": \"^3.0.4\",\n        \"header-case\": \"^2.0.4\",\n        \"no-case\": \"^3.0.4\",\n        \"param-case\": \"^3.0.4\",\n        \"pascal-case\": \"^3.1.2\",\n        \"path-case\": \"^3.0.4\",\n        \"sentence-case\": \"^3.0.4\",\n        \"snake-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/chardet\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz\",\n      \"integrity\": \"sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==\",\n      \"dev\": true\n    },\n    \"node_modules/check-error\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/check-error/-/check-error-2.1.1.tgz\",\n      \"integrity\": \"sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 16\"\n      }\n    },\n    \"node_modules/check-more-types\": {\n      \"version\": \"2.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/check-more-types/-/check-more-types-2.24.0.tgz\",\n      \"integrity\": \"sha512-Pj779qHxV2tuapviy1bSZNEL1maXr13bPYpsvSDB68HlYcYuhlDrmGd63i0JHMCLKzc7rUSNIrpdJlhVlNwrxA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/cheerio\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cheerio/-/cheerio-1.0.0.tgz\",\n      \"integrity\": \"sha512-quS9HgjQpdaXOvsZz82Oz7uxtXiy6UIsIQcpBj7HRw2M63Skasm9qlDocAM7jNuaxdhpPU7c4kJN+gA5MCu4ww==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"cheerio-select\": \"^2.1.0\",\n        \"dom-serializer\": \"^2.0.0\",\n        \"domhandler\": \"^5.0.3\",\n        \"domutils\": \"^3.1.0\",\n        \"encoding-sniffer\": \"^0.2.0\",\n        \"htmlparser2\": \"^9.1.0\",\n        \"parse5\": \"^7.1.2\",\n        \"parse5-htmlparser2-tree-adapter\": \"^7.0.0\",\n        \"parse5-parser-stream\": \"^7.1.2\",\n        \"undici\": \"^6.19.5\",\n        \"whatwg-mimetype\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/cheeriojs/cheerio?sponsor=1\"\n      }\n    },\n    \"node_modules/cheerio-select\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cheerio-select/-/cheerio-select-2.1.0.tgz\",\n      \"integrity\": \"sha512-9v9kG0LvzrlcungtnJtpGNxY+fzECQKhK4EGJX2vByejiMX84MFNQw4UxPJl3bFbTMw+Dfs37XaIkCwTZfLh4g==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"boolbase\": \"^1.0.0\",\n        \"css-select\": \"^5.1.0\",\n        \"css-what\": \"^6.1.0\",\n        \"domelementtype\": \"^2.3.0\",\n        \"domhandler\": \"^5.0.3\",\n        \"domutils\": \"^3.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/fb55\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/ci-info\": {\n      \"version\": \"3.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.9.0.tgz\",\n      \"integrity\": \"sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/sibiraj-s\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cli-boxes\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-boxes/-/cli-boxes-3.0.0.tgz\",\n      \"integrity\": \"sha512-/lzGpEWL/8PfI0BmBOPRwp0c/wFNX1RdUML3jK/RcSBA9T8mZDdQpqYBKtCFTOfQbwPqWEOpjqW+Fnayc0969g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/cli-spinners\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-spinners/-/cli-spinners-3.1.0.tgz\",\n      \"integrity\": \"sha512-2MH0N34TpDAs9ROPVkZJfBWFoYfv4zfkJF14PBHY4v/qRY75SLcm4WaEKNCLScsXieosa/tY/+slJ+BDswJxHQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18.20\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/cli-width\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cli-width/-/cli-width-4.1.0.tgz\",\n      \"integrity\": \"sha512-ouuZd4/dm2Sw5Gmqy6bGyNNNe1qt9RpmxveLSO7KcgsTnU7RXfsw+/bukWGo1abgBiMAic068rclZsO4IWmmxQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/clipboardy\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/clipboardy/-/clipboardy-3.0.0.tgz\",\n      \"integrity\": \"sha512-Su+uU5sr1jkUy1sGRpLKjKrvEOVXgSgiSInwa/qeID6aJ07yh+5NWc3h2QfjHjBnfX4LhtFcuAWKUsJ3r+fjbg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"arch\": \"^2.2.0\",\n        \"execa\": \"^5.1.1\",\n        \"is-wsl\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/clone\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/clone/-/clone-1.0.4.tgz\",\n      \"integrity\": \"sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/clone-response\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz\",\n      \"integrity\": \"sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-response\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"delayed-stream\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/commander\": {\n      \"version\": \"2.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz\",\n      \"integrity\": \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/commondir\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n      \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\",\n      \"dev\": true\n    },\n    \"node_modules/compress-commons\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/compress-commons/-/compress-commons-6.0.2.tgz\",\n      \"integrity\": \"sha512-6FqVXeETqWPoGcfzrXb37E50NP0LXT8kAMu5ooZayhWWdgEY4lBEEcbQNXtkuKQsGduxiIcI4gOTsxTmuq/bSg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"crc-32\": \"^1.2.0\",\n        \"crc32-stream\": \"^6.0.0\",\n        \"is-stream\": \"^2.0.1\",\n        \"normalize-path\": \"^3.0.0\",\n        \"readable-stream\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/compress-commons/node_modules/buffer\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz\",\n      \"integrity\": \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/compress-commons/node_modules/readable-stream\": {\n      \"version\": \"4.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-4.5.2.tgz\",\n      \"integrity\": \"sha512-yjavECdqeZ3GLXNgRXgeQEdz9fvDDkNKyHnbHRFtOr7/LcfgBcmct7t/ET+HaCTqfh06OzoAxrkN/IfjJBVe+g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"abort-controller\": \"^3.0.0\",\n        \"buffer\": \"^6.0.3\",\n        \"events\": \"^3.3.0\",\n        \"process\": \"^0.11.10\",\n        \"string_decoder\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/compress-commons/node_modules/string_decoder\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz\",\n      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.2.0\"\n      }\n    },\n    \"node_modules/compressible\": {\n      \"version\": \"2.0.18\",\n      \"resolved\": \"https://registry.npmjs.org/compressible/-/compressible-2.0.18.tgz\",\n      \"integrity\": \"sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-db\": \">= 1.43.0 < 2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/compressing\": {\n      \"version\": \"1.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/compressing/-/compressing-1.10.1.tgz\",\n      \"integrity\": \"sha512-XXwUffcVjqv8NGSQu1ttp6eMmuZ3zZEAec28Rt30o/vkXE20jXhowRQ9LXLY4uOgFkxXrNzApLobpam53Dc1AA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eggjs/yauzl\": \"^2.11.0\",\n        \"flushwritable\": \"^1.0.0\",\n        \"get-ready\": \"^1.0.0\",\n        \"iconv-lite\": \"^0.5.0\",\n        \"mkdirp\": \"^0.5.1\",\n        \"pump\": \"^3.0.0\",\n        \"streamifier\": \"^0.1.1\",\n        \"tar-stream\": \"^1.5.2\",\n        \"yazl\": \"^2.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 4.0.0\"\n      }\n    },\n    \"node_modules/compressing/node_modules/iconv-lite\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.5.2.tgz\",\n      \"integrity\": \"sha512-kERHXvpSaB4aU3eANwidg79K8FlrN77m8G9V+0vOR3HYaRifrlwMEpT7ZBJqLSEIHnEgJTHcWK82wwLwwKwtag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/compression\": {\n      \"version\": \"1.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/compression/-/compression-1.7.4.tgz\",\n      \"integrity\": \"sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"accepts\": \"~1.3.5\",\n        \"bytes\": \"3.0.0\",\n        \"compressible\": \"~2.0.16\",\n        \"debug\": \"2.6.9\",\n        \"on-headers\": \"~1.0.2\",\n        \"safe-buffer\": \"5.1.2\",\n        \"vary\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/compression/node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/compression/node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"dev\": true\n    },\n    \"node_modules/compression/node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"node_modules/constant-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/constant-case/-/constant-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-I2hSBi7Vvs7BEuJDr5dDHfzb/Ruj3FyvFyh7KLilAjNQw3Be+xgqUBA2W6scVEcL0hL1dwPRtIqEPVUCKkSsyQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\",\n        \"upper-case\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz\",\n      \"integrity\": \"sha512-kRGRZw3bLlFISDBgwTSA1TMBFN6J6GWDeubmDE3AF+3+yXL8hTWv8r5rkLbqYXY4RjPk/EzHnClI3zQf1cFmHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/core-util-is\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz\",\n      \"integrity\": \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\",\n      \"dev\": true\n    },\n    \"node_modules/crc-32\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/crc-32/-/crc-32-1.2.2.tgz\",\n      \"integrity\": \"sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"bin\": {\n        \"crc32\": \"bin/crc32.njs\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/crc32-stream\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/crc32-stream/-/crc32-stream-6.0.0.tgz\",\n      \"integrity\": \"sha512-piICUB6ei4IlTv1+653yq5+KoqfBYmj9bw6LqXoOneTMDXk5nM1qt12mFW1caG3LlJXEKW1Bp0WggEmIfQB34g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"crc-32\": \"^1.2.0\",\n        \"readable-stream\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/crc32-stream/node_modules/buffer\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz\",\n      \"integrity\": \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/crc32-stream/node_modules/readable-stream\": {\n      \"version\": \"4.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-4.5.2.tgz\",\n      \"integrity\": \"sha512-yjavECdqeZ3GLXNgRXgeQEdz9fvDDkNKyHnbHRFtOr7/LcfgBcmct7t/ET+HaCTqfh06OzoAxrkN/IfjJBVe+g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"abort-controller\": \"^3.0.0\",\n        \"buffer\": \"^6.0.3\",\n        \"events\": \"^3.3.0\",\n        \"process\": \"^0.11.10\",\n        \"string_decoder\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/crc32-stream/node_modules/string_decoder\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz\",\n      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.2.0\"\n      }\n    },\n    \"node_modules/create-eslint-index\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/create-eslint-index/-/create-eslint-index-1.0.0.tgz\",\n      \"integrity\": \"sha512-nXvJjnfDytOOaPOonX0h0a1ggMoqrhdekGeZkD6hkcWYvlCWhU719tKFVh8eU04CnMwu3uwe1JjwuUF2C3k2qg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"lodash.get\": \"^4.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/css-select\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/css-select/-/css-select-5.1.0.tgz\",\n      \"integrity\": \"sha512-nwoRF1rvRRnnCqqY7updORDsuqKzqYJ28+oSMaJMMgOauh3fvwHqMS7EZpIPqK8GL+g9mKxF1vP/ZjSeNjEVHg==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"boolbase\": \"^1.0.0\",\n        \"css-what\": \"^6.1.0\",\n        \"domhandler\": \"^5.0.2\",\n        \"domutils\": \"^3.0.1\",\n        \"nth-check\": \"^2.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/fb55\"\n      }\n    },\n    \"node_modules/css-shorthand-properties\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/css-shorthand-properties/-/css-shorthand-properties-1.1.2.tgz\",\n      \"integrity\": \"sha512-C2AugXIpRGQTxaCW0N7n5jD/p5irUmCrwl03TrnMFBHDbdq44CFWR2zO7rK9xPN4Eo3pUxC4vQzQgbIpzrD1PQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/css-simple-parser\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/css-simple-parser/-/css-simple-parser-3.0.0.tgz\",\n      \"integrity\": \"sha512-vCQf8BH7UO+HqA4DG1gkYzLVlRSLHD64leDWmfBrZZnZuHyGcTDFs6OqYNTDV36n4JbKMA6v4DnJeNRVXdk2nw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-indexes\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/css-value\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/css-value/-/css-value-0.0.1.tgz\",\n      \"integrity\": \"sha512-FUV3xaJ63buRLgHrLQVlVgQnQdR4yqdLGaDu7g8CQcWjInDfM9plBTPI9FRfpahju1UBSaMckeb2/46ApS/V1Q==\",\n      \"dev\": true\n    },\n    \"node_modules/css-what\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/css-what/-/css-what-6.1.0.tgz\",\n      \"integrity\": \"sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"engines\": {\n        \"node\": \">= 6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/fb55\"\n      }\n    },\n    \"node_modules/cssesc\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n      \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"cssesc\": \"bin/cssesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/cssstyle\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssstyle/-/cssstyle-4.1.0.tgz\",\n      \"integrity\": \"sha512-h66W1URKpBS5YMI/V8PyXvTMFT8SupJ1IzoIV8IeBC/ji8WVmrO8dGlTi+2dh6whmdk6BiKJLD/ZBkhWbcg6nA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"rrweb-cssom\": \"^0.7.1\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/cumpa\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cumpa/-/cumpa-2.0.1.tgz\",\n      \"integrity\": \"sha512-8oBF1cSWkgYq0ZsLP9iiLLZDicIh1eYM8WLicRhaSLMrdtjEf9A3DgMYMxB/i/xgVUZGxPVD/hrwVzx/pjdmmw==\",\n      \"dev\": true\n    },\n    \"node_modules/curri\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/curri/-/curri-2.0.3.tgz\",\n      \"integrity\": \"sha512-pdDH7g0LnogX/ZLO+Oa+GuTc4dgcK3aQm+tVMXum92SPZCU4LlKQ3IC8pZiE9hdtnucXGy1G+hfoZkneCDqZEw==\",\n      \"dev\": true\n    },\n    \"node_modules/data-uri-to-buffer\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz\",\n      \"integrity\": \"sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/data-urls\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/data-urls/-/data-urls-5.0.0.tgz\",\n      \"integrity\": \"sha512-ZYP5VBHshaDAiVZxjbRVcFJpc+4xGgT0bK3vzy1HLN8jTO975HEbuYzZJcHoQEY5K1a0z8YayJkyVETa08eNTg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"whatwg-mimetype\": \"^4.0.0\",\n        \"whatwg-url\": \"^14.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/data-urls/node_modules/tr46\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-5.0.0.tgz\",\n      \"integrity\": \"sha512-tk2G5R2KRwBd+ZN0zaEXpmzdKyOYksXwywulIX95MBODjSzMIuQnQ3m8JxgbhnL1LeVo7lqQKsYa1O3Htl7K5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/data-urls/node_modules/whatwg-url\": {\n      \"version\": \"14.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.0.0.tgz\",\n      \"integrity\": \"sha512-1lfMEm2IEr7RIV+f4lUNPOqfFL+pO+Xw3fJSqmjX9AbXcXcYOkCe1P6+9VBZB6n94af16NfZf+sSk0JCBZC9aw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tr46\": \"^5.0.0\",\n        \"webidl-conversions\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.7.tgz\",\n      \"integrity\": \"sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/decamelize\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-4.0.0.tgz\",\n      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/decimal.js\": {\n      \"version\": \"10.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/decimal.js/-/decimal.js-10.4.3.tgz\",\n      \"integrity\": \"sha512-VBBaLc1MgL5XpzgIP7ny5Z6Nx3UrRkIViUkPUdtl9aya5amy3De1gsUUSB1g3+3sExYNjCAsAznmukyxCb1GRA==\",\n      \"dev\": true\n    },\n    \"node_modules/decode-uri-component\": {\n      \"version\": \"0.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.2.tgz\",\n      \"integrity\": \"sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/decompress-response\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz\",\n      \"integrity\": \"sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-response\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/decompress-response/node_modules/mimic-response\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz\",\n      \"integrity\": \"sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/deep-eql\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/deep-eql/-/deep-eql-5.0.2.tgz\",\n      \"integrity\": \"sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/deep-equal\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-2.2.3.tgz\",\n      \"integrity\": \"sha512-ZIwpnevOurS8bpT4192sqAowWM76JDKSHYzMLty3BZGSswgq6pBaH3DhCSW5xVAZICZyKdOBPjwww5wfgT/6PA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"call-bind\": \"^1.0.5\",\n        \"es-get-iterator\": \"^1.1.3\",\n        \"get-intrinsic\": \"^1.2.2\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"object-is\": \"^1.1.5\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.5.1\",\n        \"side-channel\": \"^1.0.4\",\n        \"which-boxed-primitive\": \"^1.0.2\",\n        \"which-collection\": \"^1.0.1\",\n        \"which-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/deep-extend\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz\",\n      \"integrity\": \"sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n      \"dev\": true\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/deepmerge-ts\": {\n      \"version\": \"7.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge-ts/-/deepmerge-ts-7.1.3.tgz\",\n      \"integrity\": \"sha512-qCSH6I0INPxd9Y1VtAiLpnYvz5O//6rCfJXKk0z66Up9/VOSr+1yS8XSKA5IWRxjocFGlzPyaZYe+jxq7OOLtQ==\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"engines\": {\n        \"node\": \">=16.0.0\"\n      }\n    },\n    \"node_modules/defaults\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/defaults/-/defaults-1.0.4.tgz\",\n      \"integrity\": \"sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"clone\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/defer-to-connect\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz\",\n      \"integrity\": \"sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.1.tgz\",\n      \"integrity\": \"sha512-E7uGkTzkk1d0ByLeSc6ZsFS79Axg+m1P/VsgYsxHgiuc3tFSj+MjMIwe90FC4lOAZzNBdY7kkO2P2wKdsQ1vgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.1\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz\",\n      \"integrity\": \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/degenerator\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/degenerator/-/degenerator-5.0.1.tgz\",\n      \"integrity\": \"sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ast-types\": \"^0.13.4\",\n        \"escodegen\": \"^2.1.0\",\n        \"esprima\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/diff\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-5.2.0.tgz\",\n      \"integrity\": \"sha512-uIFDxqpRZGZ6ThOk84hEfqWoHx2devRFvpTZcTHur85vImfaxUbTW9Ryh4CpCuDnToOP1CEtXKIgytHBPVff5A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/diff-sequences\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz\",\n      \"integrity\": \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/dom-accessibility-api\": {\n      \"version\": \"0.5.16\",\n      \"resolved\": \"https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.5.16.tgz\",\n      \"integrity\": \"sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/dom-nodes\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/dom-nodes/-/dom-nodes-1.1.3.tgz\",\n      \"integrity\": \"sha512-y5wnIx97oe0IqMllL/lizgkK2c9vu1cQeqPCCsS7mwNdPuYxg3b04eDJynHhC63kM8+ZsteOmiPElfVGOUmmKg==\",\n      \"dev\": true\n    },\n    \"node_modules/dom-serializer\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/dom-serializer/-/dom-serializer-2.0.0.tgz\",\n      \"integrity\": \"sha512-wIkAryiqt/nV5EQKqQpo3SToSOV9J0DnbJqwK7Wv/Trc92zIAYZ4FlMu+JPFW1DfGFt81ZTCGgDEabffXeLyJg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"domelementtype\": \"^2.3.0\",\n        \"domhandler\": \"^5.0.2\",\n        \"entities\": \"^4.2.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/cheeriojs/dom-serializer?sponsor=1\"\n      }\n    },\n    \"node_modules/domelementtype\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz\",\n      \"integrity\": \"sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/fb55\"\n        }\n      ],\n      \"license\": \"BSD-2-Clause\"\n    },\n    \"node_modules/domhandler\": {\n      \"version\": \"5.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/domhandler/-/domhandler-5.0.3.tgz\",\n      \"integrity\": \"sha512-cgwlv/1iFQiFnU96XXgROh8xTeetsnJiDsTc7TYCLFd9+/WNkIqPTxiM/8pSd8VIrhXGTf1Ny1q1hquVqDJB5w==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"domelementtype\": \"^2.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/domhandler?sponsor=1\"\n      }\n    },\n    \"node_modules/domutils\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/domutils/-/domutils-3.1.0.tgz\",\n      \"integrity\": \"sha512-H78uMmQtI2AhgDJjWeQmHwJJ2bLPD3GMmO7Zja/ZZh84wkm+4ut+IUnUdRa8uCGX88DiVx1j6FRe1XfxEgjEZA==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"dom-serializer\": \"^2.0.0\",\n        \"domelementtype\": \"^2.3.0\",\n        \"domhandler\": \"^5.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/domutils?sponsor=1\"\n      }\n    },\n    \"node_modules/dot-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/dot-case/-/dot-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-Kv5nKlh6yRrdrGvxeJ2e5y2eRUpkUosIW4A2AS38zwSz27zu7ufDwQPi5Jhs3XAlGNetl3bmnGhQsMtkKJnj3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/dotenv\": {\n      \"version\": \"16.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.3.1.tgz\",\n      \"integrity\": \"sha512-IPzF4w4/Rd94bA9imS68tZBaYyBWSCE47V1RGuMrB94iyTOIEwRmVL2x/4An+6mETpLrKJ5hQkB8W4kFAadeIQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/motdotla/dotenv?sponsor=1\"\n      }\n    },\n    \"node_modules/duplexer\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/duplexer/-/duplexer-0.1.2.tgz\",\n      \"integrity\": \"sha512-jtD6YG370ZCIi/9GTaJKQxWTZD045+4R4hTk/x1UyoqadyJ9x9CgSi1RlVDQF8U2sxLLSnFkCaMihqljHIWgMg==\",\n      \"dev\": true\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n      \"dev\": true\n    },\n    \"node_modules/easy-table\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/easy-table/-/easy-table-1.2.0.tgz\",\n      \"integrity\": \"sha512-OFzVOv03YpvtcWGe5AayU5G2hgybsg3iqA6drU8UaoZyB9jLGMTrz9+asnLp/E+6qPh88yEI1gvyZFZ41dmgww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"optionalDependencies\": {\n        \"wcwidth\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/edge-paths\": {\n      \"version\": \"3.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/edge-paths/-/edge-paths-3.0.5.tgz\",\n      \"integrity\": \"sha512-sB7vSrDnFa4ezWQk9nZ/n0FdpdUuC6R1EOrlU3DL+bovcNFK28rqu2emmAUjujYEJTWIgQGqgVVWUZXMnc8iWg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/which\": \"^2.0.1\",\n        \"which\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/shirshak55\"\n      }\n    },\n    \"node_modules/edgedriver\": {\n      \"version\": \"5.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/edgedriver/-/edgedriver-5.6.1.tgz\",\n      \"integrity\": \"sha512-3Ve9cd5ziLByUdigw6zovVeWJjVs8QHVmqOB0sJ0WNeVPcwf4p18GnxMmVvlFmYRloUwf5suNuorea4QzwBIOA==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@wdio/logger\": \"^8.38.0\",\n        \"@zip.js/zip.js\": \"^2.7.48\",\n        \"decamelize\": \"^6.0.0\",\n        \"edge-paths\": \"^3.0.5\",\n        \"fast-xml-parser\": \"^4.4.1\",\n        \"node-fetch\": \"^3.3.2\",\n        \"which\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"edgedriver\": \"bin/edgedriver.js\"\n      }\n    },\n    \"node_modules/edgedriver/node_modules/@wdio/logger\": {\n      \"version\": \"8.38.0\",\n      \"resolved\": \"https://registry.npmjs.org/@wdio/logger/-/logger-8.38.0.tgz\",\n      \"integrity\": \"sha512-kcHL86RmNbcQP+Gq/vQUGlArfU6IIcbbnNp32rRIraitomZow+iEoc519rdQmSVusDozMS5DZthkgDdxK+vz6Q==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^5.1.2\",\n        \"loglevel\": \"^1.6.0\",\n        \"loglevel-plugin-prefix\": \"^0.8.4\",\n        \"strip-ansi\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"^16.13 || >=18\"\n      }\n    },\n    \"node_modules/edgedriver/node_modules/ansi-regex\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/edgedriver/node_modules/chalk\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.3.0.tgz\",\n      \"integrity\": \"sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/edgedriver/node_modules/decamelize\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-6.0.0.tgz\",\n      \"integrity\": \"sha512-Fv96DCsdOgB6mdGl67MT5JaTNKRzrzill5OH5s8bjYJXVlcXyPYGyPsUkWyGV5p1TXI5esYIYMMeDJL0hEIwaA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/edgedriver/node_modules/isexe\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-3.1.1.tgz\",\n      \"integrity\": \"sha512-LpB/54B+/2J5hqQ7imZHfdU31OlgQqx7ZicVlkm9kzg9/w8GKLEcFfJl/t7DCEDueOyBAD6zCCwTO6Fzs0NoEQ==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/edgedriver/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/edgedriver/node_modules/which\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-4.0.0.tgz\",\n      \"integrity\": \"sha512-GlaYyEb07DPxYCKhKzplCWBJtvxZcZMrL+4UkrTSJHHPyZU4mYYTv3qaOe77H7EODLSSopAUFAc6W8U4yqvscg==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"isexe\": \"^3.1.1\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/which.js\"\n      },\n      \"engines\": {\n        \"node\": \"^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/ejs\": {\n      \"version\": \"3.1.10\",\n      \"resolved\": \"https://registry.npmjs.org/ejs/-/ejs-3.1.10.tgz\",\n      \"integrity\": \"sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jake\": \"^10.8.5\"\n      },\n      \"bin\": {\n        \"ejs\": \"bin/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/encoding-sniffer\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/encoding-sniffer/-/encoding-sniffer-0.2.0.tgz\",\n      \"integrity\": \"sha512-ju7Wq1kg04I3HtiYIOrUrdfdDvkyO9s5XM8QAj/bN61Yo/Vb4vgJxy5vi4Yxk01gWHbrofpPtpxM8bKger9jhg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"iconv-lite\": \"^0.6.3\",\n        \"whatwg-encoding\": \"^3.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/encoding-sniffer?sponsor=1\"\n      }\n    },\n    \"node_modules/end-of-stream\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\",\n      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"node_modules/entities\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/entities/-/entities-4.5.0.tgz\",\n      \"integrity\": \"sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/entities?sponsor=1\"\n      }\n    },\n    \"node_modules/error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.22.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.22.3.tgz\",\n      \"integrity\": \"sha512-eiiY8HQeYfYH2Con2berK+To6GrK2RxbPawDkGq4UiCQQfZHb6wX9qQqkbpPqaxQFcl8d9QzZqo0tGE0VcrdwA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"arraybuffer.prototype.slice\": \"^1.0.2\",\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.5\",\n        \"es-set-tostringtag\": \"^2.0.1\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function.prototype.name\": \"^1.1.6\",\n        \"get-intrinsic\": \"^1.2.2\",\n        \"get-symbol-description\": \"^1.0.0\",\n        \"globalthis\": \"^1.0.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\",\n        \"internal-slot\": \"^1.0.5\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-negative-zero\": \"^2.0.2\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.12\",\n        \"is-weakref\": \"^1.0.2\",\n        \"object-inspect\": \"^1.13.1\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.5.1\",\n        \"safe-array-concat\": \"^1.0.1\",\n        \"safe-regex-test\": \"^1.0.0\",\n        \"string.prototype.trim\": \"^1.2.8\",\n        \"string.prototype.trimend\": \"^1.0.7\",\n        \"string.prototype.trimstart\": \"^1.0.7\",\n        \"typed-array-buffer\": \"^1.0.0\",\n        \"typed-array-byte-length\": \"^1.0.0\",\n        \"typed-array-byte-offset\": \"^1.0.0\",\n        \"typed-array-length\": \"^1.0.4\",\n        \"unbox-primitive\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-get-iterator\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-get-iterator/-/es-get-iterator-1.1.3.tgz\",\n      \"integrity\": \"sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-map\": \"^2.0.2\",\n        \"is-set\": \"^2.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"isarray\": \"^2.0.5\",\n        \"stop-iteration-iterator\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-set-tostringtag\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.2.tgz\",\n      \"integrity\": \"sha512-BuDyupZt65P9D2D2vA/zqcI3G5xRsklm5N3xCwuiy+/vKy8i0ifdsQP1sLgO4tZDSCaQUSnmC48khknGMV3D2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.2\",\n        \"has-tostringtag\": \"^1.0.0\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-shim-unscopables\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz\",\n      \"integrity\": \"sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz\",\n      \"integrity\": \"sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/esbuild\": {\n      \"version\": \"0.23.1\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.23.1.tgz\",\n      \"integrity\": \"sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"bin\": {\n        \"esbuild\": \"bin/esbuild\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"optionalDependencies\": {\n        \"@esbuild/aix-ppc64\": \"0.23.1\",\n        \"@esbuild/android-arm\": \"0.23.1\",\n        \"@esbuild/android-arm64\": \"0.23.1\",\n        \"@esbuild/android-x64\": \"0.23.1\",\n        \"@esbuild/darwin-arm64\": \"0.23.1\",\n        \"@esbuild/darwin-x64\": \"0.23.1\",\n        \"@esbuild/freebsd-arm64\": \"0.23.1\",\n        \"@esbuild/freebsd-x64\": \"0.23.1\",\n        \"@esbuild/linux-arm\": \"0.23.1\",\n        \"@esbuild/linux-arm64\": \"0.23.1\",\n        \"@esbuild/linux-ia32\": \"0.23.1\",\n        \"@esbuild/linux-loong64\": \"0.23.1\",\n        \"@esbuild/linux-mips64el\": \"0.23.1\",\n        \"@esbuild/linux-ppc64\": \"0.23.1\",\n        \"@esbuild/linux-riscv64\": \"0.23.1\",\n        \"@esbuild/linux-s390x\": \"0.23.1\",\n        \"@esbuild/linux-x64\": \"0.23.1\",\n        \"@esbuild/netbsd-x64\": \"0.23.1\",\n        \"@esbuild/openbsd-arm64\": \"0.23.1\",\n        \"@esbuild/openbsd-x64\": \"0.23.1\",\n        \"@esbuild/sunos-x64\": \"0.23.1\",\n        \"@esbuild/win32-arm64\": \"0.23.1\",\n        \"@esbuild/win32-ia32\": \"0.23.1\",\n        \"@esbuild/win32-x64\": \"0.23.1\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/escodegen\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/escodegen/-/escodegen-2.1.0.tgz\",\n      \"integrity\": \"sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"esprima\": \"^4.0.1\",\n        \"estraverse\": \"^5.2.0\",\n        \"esutils\": \"^2.0.2\"\n      },\n      \"bin\": {\n        \"escodegen\": \"bin/escodegen.js\",\n        \"esgenerate\": \"bin/esgenerate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"optionalDependencies\": {\n        \"source-map\": \"~0.6.1\"\n      }\n    },\n    \"node_modules/escodegen/node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.57.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.57.0.tgz\",\n      \"integrity\": \"sha512-dZ6+mexnaTIbSBZWgou51U6OmzIhYM2VcNdtiTtI7qPNZm35Akpr0f6vtw3w1Kmn5PYo+tZVfh13WrhpS6oLqQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@eslint-community/regexpp\": \"^4.6.1\",\n        \"@eslint/eslintrc\": \"^2.1.4\",\n        \"@eslint/js\": \"8.57.0\",\n        \"@humanwhocodes/config-array\": \"^0.11.14\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"@ungap/structured-clone\": \"^1.2.0\",\n        \"ajv\": \"^6.12.4\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.2.2\",\n        \"eslint-visitor-keys\": \"^3.4.3\",\n        \"espree\": \"^9.6.1\",\n        \"esquery\": \"^1.4.2\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"graphemer\": \"^1.4.0\",\n        \"ignore\": \"^5.2.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.3\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-ast-utils\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-ast-utils/-/eslint-ast-utils-1.1.0.tgz\",\n      \"integrity\": \"sha512-otzzTim2/1+lVrlH19EfQQJEhVJSu0zOb9ygb3iapN6UlyaDtyRq4b5U1FuW0v1lRa9Fp/GJyHkSwm6NqABgCA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"lodash.get\": \"^4.4.2\",\n        \"lodash.zip\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/eslint-config-prettier\": {\n      \"version\": \"9.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.0.0.tgz\",\n      \"integrity\": \"sha512-IcJsTkJae2S35pRsRAwoCE+925rJJStOdkKnLVgtE+tEpqU0EVVM7OqrwxqgptKdX29NUwC82I5pXsGFIgSevw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"bin\": {\n        \"eslint-config-prettier\": \"bin/cli.js\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/eslint-config-riot\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-config-riot/-/eslint-config-riot-4.1.2.tgz\",\n      \"integrity\": \"sha512-7aeVWC3xSsZn5btE6YbPEmlvTBXrI+I/AyeldtOGDQQ9Px48A27eNWq3LuxWhoDzOKMhd6HLasoa1Jt9z8Vr1Q==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"eslint\": \"^8.0.0\",\n        \"eslint-config-prettier\": \"^8.0.0 || ^9.0.0\",\n        \"eslint-plugin-fp\": \"^2.3.0\",\n        \"prettier\": \"^2.0.0 || ^3.0.0\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-node\": {\n      \"version\": \"0.3.9\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz\",\n      \"integrity\": \"sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\",\n        \"is-core-module\": \"^2.13.0\",\n        \"resolve\": \"^1.22.4\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-node/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-module-utils\": {\n      \"version\": \"2.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.8.0.tgz\",\n      \"integrity\": \"sha512-aWajIYfsqCKRDgUfjEXNN/JlrzauMuSEy5sbd7WXbtW3EH6A6MpwEh42c7qD+MqQo9QMJ6fWLAeIJynx0g6OAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"eslint\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/eslint-module-utils/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-fp\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-fp/-/eslint-plugin-fp-2.3.0.tgz\",\n      \"integrity\": \"sha512-3n2oHibwoIxAht9/+ZaTldhI6brXORgl8oNXqZd+d9xuAQt2SBJ2/aml0oQRMWvXrgsz2WG6wfC++NjzSG3prA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"create-eslint-index\": \"^1.0.0\",\n        \"eslint-ast-utils\": \"^1.0.0\",\n        \"lodash\": \"^4.13.1\",\n        \"req-all\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \">=3\"\n      }\n    },\n    \"node_modules/eslint-plugin-import\": {\n      \"version\": \"2.29.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.29.1.tgz\",\n      \"integrity\": \"sha512-BbPC0cuExzhiMo4Ff1BTVwHpjjv28C5R+btTOGaCRC7UEz801up0JadwkeSk5Ued6TG34uaczuVuH6qyy5YUxw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.7\",\n        \"array.prototype.findlastindex\": \"^1.2.3\",\n        \"array.prototype.flat\": \"^1.3.2\",\n        \"array.prototype.flatmap\": \"^1.3.2\",\n        \"debug\": \"^3.2.7\",\n        \"doctrine\": \"^2.1.0\",\n        \"eslint-import-resolver-node\": \"^0.3.9\",\n        \"eslint-module-utils\": \"^2.8.0\",\n        \"hasown\": \"^2.0.0\",\n        \"is-core-module\": \"^2.13.1\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.fromentries\": \"^2.0.7\",\n        \"object.groupby\": \"^1.0.1\",\n        \"object.values\": \"^1.1.7\",\n        \"semver\": \"^6.3.1\",\n        \"tsconfig-paths\": \"^3.15.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"7.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n      \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n      \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"acorn\": \"^8.9.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.5.0.tgz\",\n      \"integrity\": \"sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estree-walker\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n      \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n      \"dev\": true\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/event-stream\": {\n      \"version\": \"3.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/event-stream/-/event-stream-3.3.4.tgz\",\n      \"integrity\": \"sha512-QHpkERcGsR0T7Qm3HNJSyXKEEj8AHNxkY3PK8TS2KJvQ7NiSHe3DDpwVKKtoYprL/AreyzFBeIkBIWChAqn60g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"duplexer\": \"~0.1.1\",\n        \"from\": \"~0\",\n        \"map-stream\": \"~0.1.0\",\n        \"pause-stream\": \"0.0.11\",\n        \"split\": \"0.3\",\n        \"stream-combiner\": \"~0.0.4\",\n        \"through\": \"~2.3.1\"\n      }\n    },\n    \"node_modules/event-target-shim\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/event-target-shim/-/event-target-shim-5.0.1.tgz\",\n      \"integrity\": \"sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/events\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/events/-/events-3.3.0.tgz\",\n      \"integrity\": \"sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.8.x\"\n      }\n    },\n    \"node_modules/execa\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n      \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.3\",\n        \"get-stream\": \"^6.0.0\",\n        \"human-signals\": \"^2.1.0\",\n        \"is-stream\": \"^2.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^4.0.1\",\n        \"onetime\": \"^5.1.2\",\n        \"signal-exit\": \"^3.0.3\",\n        \"strip-final-newline\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n      }\n    },\n    \"node_modules/expect\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/expect/-/expect-29.7.0.tgz\",\n      \"integrity\": \"sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/expect-utils\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/expect-webdriverio\": {\n      \"version\": \"5.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/expect-webdriverio/-/expect-webdriverio-5.0.3.tgz\",\n      \"integrity\": \"sha512-0RHsFZX1856qCWZsXcvacFZpdZc7UAVD9wAglzf3KMWO1AoXt5EorjsNp1H9StGysxhJuVXJxRWKeXnD4LKtjQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@vitest/snapshot\": \"^2.0.5\",\n        \"expect\": \"^29.7.0\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"lodash.isequal\": \"^4.5.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18 || >=20 || >=22\"\n      },\n      \"peerDependencies\": {\n        \"@wdio/globals\": \"^9.0.0\",\n        \"@wdio/logger\": \"^9.0.0\",\n        \"webdriverio\": \"^9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@wdio/globals\": {\n          \"optional\": false\n        },\n        \"@wdio/logger\": {\n          \"optional\": false\n        },\n        \"webdriverio\": {\n          \"optional\": false\n        }\n      }\n    },\n    \"node_modules/external-editor\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz\",\n      \"integrity\": \"sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chardet\": \"^0.7.0\",\n        \"iconv-lite\": \"^0.4.24\",\n        \"tmp\": \"^0.0.33\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/external-editor/node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/extract-zip\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\",\n      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"get-stream\": \"^5.1.0\",\n        \"yauzl\": \"^2.10.0\"\n      },\n      \"bin\": {\n        \"extract-zip\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.17.0\"\n      },\n      \"optionalDependencies\": {\n        \"@types/yauzl\": \"^2.9.1\"\n      }\n    },\n    \"node_modules/extract-zip/node_modules/get-stream\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\",\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-fifo\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fast-fifo/-/fast-fifo-1.3.2.tgz\",\n      \"integrity\": \"sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-xml-parser\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-4.5.0.tgz\",\n      \"integrity\": \"sha512-/PlTQCI96+fZMAOLMZK4CWG1ItCbfZ/0jx7UIJFChPNrx7tcEgerUgWbeieCM9MfHInUDyK8DWYZ+YrywDJuTg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/NaturalIntelligence\"\n        },\n        {\n          \"type\": \"paypal\",\n          \"url\": \"https://paypal.me/naturalintelligence\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"strnum\": \"^1.0.5\"\n      },\n      \"bin\": {\n        \"fxparser\": \"src/cli/cli.js\"\n      }\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.15.0.tgz\",\n      \"integrity\": \"sha512-wBrocU2LCXXa+lWBt8RoIRD89Fi8OdABODa/kEnyeyjS5aZO5/GNvI5sEINADqP/h8M29UHTHUb53sUu5Ihqdw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fd-slicer\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pend\": \"~1.2.0\"\n      }\n    },\n    \"node_modules/fd-slicer2\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/fd-slicer2/-/fd-slicer2-1.2.0.tgz\",\n      \"integrity\": \"sha512-3lBUNUckhMZduCc4g+Pw4Ve16LD9vpX9b8qUkkKq2mgDRLYWzblszZH2luADnJqjJe+cypngjCuKRm/IW12rRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pend\": \"^1.2.0\"\n      }\n    },\n    \"node_modules/fdir\": {\n      \"version\": \"6.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/fdir/-/fdir-6.4.0.tgz\",\n      \"integrity\": \"sha512-3oB133prH1o4j/L5lLW7uOCF1PlD+/It2L0eL/iAqWMB91RBbqTewABqxhj0ibBd90EEmWZq7ntIWzVaWcXTGQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"picomatch\": \"^3 || ^4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"picomatch\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/fetch-blob\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz\",\n      \"integrity\": \"sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/jimmywarting\"\n        },\n        {\n          \"type\": \"paypal\",\n          \"url\": \"https://paypal.me/jimmywarting\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"node-domexception\": \"^1.0.0\",\n        \"web-streams-polyfill\": \"^3.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20 || >= 14.13\"\n      }\n    },\n    \"node_modules/figures\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-6.1.0.tgz\",\n      \"integrity\": \"sha512-d+l3qxjSesT4V7v2fh+QnmFnUWv9lSpjarhShNTgBOfA0ttejbQUAlHLitbjkoRiDulW0OPoQPYIGhIC8ohejg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-unicode-supported\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/figures/node_modules/is-unicode-supported\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-2.0.0.tgz\",\n      \"integrity\": \"sha512-FRdAyx5lusK1iHG0TWpVtk9+1i+GjrzRffhDg4ovQ7mcidMQ6mj+MhKPmvh7Xwyv5gIS06ns49CA7Sqg7lC22Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/filelist\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/filelist/-/filelist-1.0.4.tgz\",\n      \"integrity\": \"sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimatch\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/filelist/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/filelist/node_modules/minimatch\": {\n      \"version\": \"5.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n      \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/filter-obj\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/filter-obj/-/filter-obj-1.1.0.tgz\",\n      \"integrity\": \"sha512-8rXg1ZnX7xzy2NGDVkBVaAy+lSlPNwad13BtgSlLuxfIslyt5Vg64U7tFcCt4WS1R0hvtnQybT/IyCkGZ3DpXQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/flat\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/flat/-/flat-5.0.2.tgz\",\n      \"integrity\": \"sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"flat\": \"cli.js\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.0.4.tgz\",\n      \"integrity\": \"sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eDYZoZV5wdrev7P3Nwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flatted\": \"^3.1.0\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.2.7.tgz\",\n      \"integrity\": \"sha512-5nqDSxl8nn5BSNxyR3n4I6eDmbolI6WT+QqR547RwxQapgjQBmtktdP+HTBb/a/zLsbzERTONyUB5pefh5TtjQ==\",\n      \"dev\": true\n    },\n    \"node_modules/flushwritable\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/flushwritable/-/flushwritable-1.0.0.tgz\",\n      \"integrity\": \"sha512-3VELfuWCLVzt5d2Gblk8qcqFro6nuwvxwMzHaENVDHI7rxcBRtMCwTk/E9FXcgh+82DSpavPNDueA9+RxXJoFg==\",\n      \"dev\": true\n    },\n    \"node_modules/follow-redirects\": {\n      \"version\": \"1.15.9\",\n      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz\",\n      \"integrity\": \"sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://github.com/sponsors/RubenVerborgh\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \">=4.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"debug\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz\",\n      \"integrity\": \"sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.3\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.1.1.tgz\",\n      \"integrity\": \"sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/foreground-child/node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/form-data\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz\",\n      \"integrity\": \"sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.8\",\n        \"mime-types\": \"^2.1.12\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/formdata-polyfill\": {\n      \"version\": \"4.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz\",\n      \"integrity\": \"sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fetch-blob\": \"^3.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=12.20.0\"\n      }\n    },\n    \"node_modules/from\": {\n      \"version\": \"0.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/from/-/from-0.1.7.tgz\",\n      \"integrity\": \"sha512-twe20eF1OxVxp/ML/kq2p1uc6KvFK/+vs8WjEbeKmV2He22MKm7YF2ANIt+EOqhJ5L3K/SuuPhk0hWQDjOM23g==\",\n      \"dev\": true\n    },\n    \"node_modules/fs-constants\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz\",\n      \"integrity\": \"sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==\",\n      \"dev\": true\n    },\n    \"node_modules/fs-extra\": {\n      \"version\": \"11.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-11.2.0.tgz\",\n      \"integrity\": \"sha512-PmDi3uwK5nFuXh7XDTlVnS17xJS7vW36is2+w3xcv8SVxiB4NyATf4ctkVY5bkSjX0Y4nbvZCq1/EjtEyr9ktw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"graceful-fs\": \"^4.2.0\",\n        \"jsonfile\": \"^6.0.1\",\n        \"universalify\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.14\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/function.prototype.name\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz\",\n      \"integrity\": \"sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"functions-have-names\": \"^1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/geckodriver\": {\n      \"version\": \"4.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/geckodriver/-/geckodriver-4.5.1.tgz\",\n      \"integrity\": \"sha512-lGCRqPMuzbRNDWJOQcUqhNqPvNsIFu6yzXF8J/6K3WCYFd2r5ckbeF7h1cxsnjA7YLSEiWzERCt6/gjZ3tW0ug==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"license\": \"MPL-2.0\",\n      \"dependencies\": {\n        \"@wdio/logger\": \"^9.0.0\",\n        \"@zip.js/zip.js\": \"^2.7.48\",\n        \"decamelize\": \"^6.0.0\",\n        \"http-proxy-agent\": \"^7.0.2\",\n        \"https-proxy-agent\": \"^7.0.5\",\n        \"node-fetch\": \"^3.3.2\",\n        \"tar-fs\": \"^3.0.6\",\n        \"which\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"geckodriver\": \"bin/geckodriver.js\"\n      },\n      \"engines\": {\n        \"node\": \"^16.13 || >=18 || >=20\"\n      }\n    },\n    \"node_modules/geckodriver/node_modules/decamelize\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-6.0.0.tgz\",\n      \"integrity\": \"sha512-Fv96DCsdOgB6mdGl67MT5JaTNKRzrzill5OH5s8bjYJXVlcXyPYGyPsUkWyGV5p1TXI5esYIYMMeDJL0hEIwaA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/geckodriver/node_modules/isexe\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-3.1.1.tgz\",\n      \"integrity\": \"sha512-LpB/54B+/2J5hqQ7imZHfdU31OlgQqx7ZicVlkm9kzg9/w8GKLEcFfJl/t7DCEDueOyBAD6zCCwTO6Fzs0NoEQ==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/geckodriver/node_modules/which\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-4.0.0.tgz\",\n      \"integrity\": \"sha512-GlaYyEb07DPxYCKhKzplCWBJtvxZcZMrL+4UkrTSJHHPyZU4mYYTv3qaOe77H7EODLSSopAUFAc6W8U4yqvscg==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"isexe\": \"^3.1.1\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/which.js\"\n      },\n      \"engines\": {\n        \"node\": \"^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-func-name\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.2.tgz\",\n      \"integrity\": \"sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.2.tgz\",\n      \"integrity\": \"sha512-0gSo4ml/0j98Y3lngkFEot/zhiCeWsbYIlZ+uZOVgzLyLaUw7wxUL+nCTP0XJvJg1AXulJRI3UJi8GsbDuxdGA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"hasown\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-port\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-port/-/get-port-7.1.0.tgz\",\n      \"integrity\": \"sha512-QB9NKEeDg3xxVwCCwJQ9+xycaz6pBB6iQ76wiWMl1927n0Kir6alPiP+yuiICLLU4jpMe08dXfpebuQppFA2zw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-ready\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-ready/-/get-ready-1.0.0.tgz\",\n      \"integrity\": \"sha512-mFXCZPJIlcYcth+N8267+mghfYN9h3EhsDa6JSnbA3Wrhh/XFpuowviFcsDeYZtKspQyWyJqfs4O6P8CHeTwzw==\",\n      \"dev\": true\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-symbol-description\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.0.tgz\",\n      \"integrity\": \"sha512-2EmdH1YvIQiZpltCNgkuiUnyukzxM/R6NDJX31Ke3BG1Nq5b0S2PhX59UKi9vZpPDQVdqn+1IcaAwnzTT5vCjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-tsconfig\": {\n      \"version\": \"4.7.6\",\n      \"resolved\": \"https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.7.6.tgz\",\n      \"integrity\": \"sha512-ZAqrLlu18NbDdRaHq+AKXzAmqIUPswPWKUchfytdAjiRFnCe5ojG2bstg6mRiZabkKfCoL/e98pbBELIV/YCeA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"resolve-pkg-maps\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/privatenumber/get-tsconfig?sponsor=1\"\n      }\n    },\n    \"node_modules/get-uri\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/get-uri/-/get-uri-6.0.3.tgz\",\n      \"integrity\": \"sha512-BzUrJBS9EcUb4cFol8r4W3v1cPsSyajLSthNkz5BxbpDcHN5tIrM10E2eNvfnvBn3DaT3DUgx0OpsBKkaOpanw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"basic-ftp\": \"^5.0.2\",\n        \"data-uri-to-buffer\": \"^6.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"fs-extra\": \"^11.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/get-uri/node_modules/data-uri-to-buffer\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-6.0.2.tgz\",\n      \"integrity\": \"sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\n      \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^5.0.1\",\n        \"once\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/glob/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/glob/node_modules/minimatch\": {\n      \"version\": \"5.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n      \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"13.24.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.24.0.tgz\",\n      \"integrity\": \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/globalthis\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/globalthis/-/globalthis-1.0.3.tgz\",\n      \"integrity\": \"sha512-sFdI5LyBiNTHjRd7cGPWapiHWMOXKyuBNX/cWJ3NfzrZQVa8GI/8cofCl74AOVqq9W5kNmguTIzJ/1s2gyI9wA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/got\": {\n      \"version\": \"11.8.6\",\n      \"resolved\": \"https://registry.npmjs.org/got/-/got-11.8.6.tgz\",\n      \"integrity\": \"sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sindresorhus/is\": \"^4.0.0\",\n        \"@szmarczak/http-timer\": \"^4.0.5\",\n        \"@types/cacheable-request\": \"^6.0.1\",\n        \"@types/responselike\": \"^1.0.0\",\n        \"cacheable-lookup\": \"^5.0.3\",\n        \"cacheable-request\": \"^7.0.2\",\n        \"decompress-response\": \"^6.0.0\",\n        \"http2-wrapper\": \"^1.0.0-beta.5.2\",\n        \"lowercase-keys\": \"^2.0.0\",\n        \"p-cancelable\": \"^2.0.0\",\n        \"responselike\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.19.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/got?sponsor=1\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n      \"dev\": true,\n      \"license\": \"ISC\"\n    },\n    \"node_modules/grapheme-splitter\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/grapheme-splitter/-/grapheme-splitter-1.0.4.tgz\",\n      \"integrity\": \"sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/graphemer\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n      \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\",\n      \"dev\": true\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz\",\n      \"integrity\": \"sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz\",\n      \"integrity\": \"sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-7qE+iP+O+bgF9clE5+UoBFzE65mlBiVj3tKCrlNQ0Ogwm0BjpT/gK4SlLYDMybDh5I3TCTKnPPa0oMG7JDYrhg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz\",\n      \"integrity\": \"sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hash.js\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz\",\n      \"integrity\": \"sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"inherits\": \"^2.0.3\",\n        \"minimalistic-assert\": \"^1.0.1\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.0.tgz\",\n      \"integrity\": \"sha512-vUptKVTpIJhcczKBbgnS+RtcuYMB8+oNzPK2/Hp3hanz8JmpATdmmgLgSaadVREkDm+e2giHwY3ZRkyjSIDDFA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/he\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/he/-/he-1.2.0.tgz\",\n      \"integrity\": \"sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"he\": \"bin/he\"\n      }\n    },\n    \"node_modules/header-case\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/header-case/-/header-case-2.0.4.tgz\",\n      \"integrity\": \"sha512-H/vuk5TEEVZwrR0lp2zed9OCo1uAILMlx0JEMgC26rzyJJ3N1v6XkwHHXJQdR2doSjcGPM6OKPYoJgf0plJ11Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"capital-case\": \"^1.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/hosted-git-info\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-7.0.1.tgz\",\n      \"integrity\": \"sha512-+K84LB1DYwMHoHSgaOY/Jfhw3ucPmSET5v98Ke/HdNSw4a0UktWzyW1mjhjpuxxTqOOsfWT/7iVshHmVZ4IpOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^10.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^16.14.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/hosted-git-info/node_modules/lru-cache\": {\n      \"version\": \"10.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.2.0.tgz\",\n      \"integrity\": \"sha512-2bIM8x+VAf6JT4bKAljS1qUWgMsqZRPGJS6FSahIMPVvctcNhyVp7AJu7quxOW9jwkryBReKZY5tY5JYv2n/7Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"14 || >=16.14\"\n      }\n    },\n    \"node_modules/html-encoding-sniffer\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-4.0.0.tgz\",\n      \"integrity\": \"sha512-Y22oTqIU4uuPgEemfz7NDJz6OeKf12Lsu+QC+s3BVpda64lTiMYCyGwg5ki4vFxkMwQdeZDl2adZoqUgdFuTgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"whatwg-encoding\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/html-escaper\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz\",\n      \"integrity\": \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\",\n      \"dev\": true\n    },\n    \"node_modules/htmlfy\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/htmlfy/-/htmlfy-0.3.2.tgz\",\n      \"integrity\": \"sha512-FsxzfpeDYRqn1emox9VpxMPfGjADoUmmup8D604q497R0VNxiXs4ZZTN2QzkaMA5C9aHGUoe1iQRVSm+HK9xuA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/htmlparser2\": {\n      \"version\": \"9.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/htmlparser2/-/htmlparser2-9.1.0.tgz\",\n      \"integrity\": \"sha512-5zfg6mHUoaer/97TxnGpxmbR7zJtPwIYFMZ/H5ucTlPZhKvtum05yiPK3Mgai3a0DyVxv7qYqoweaEd2nrYQzQ==\",\n      \"dev\": true,\n      \"funding\": [\n        \"https://github.com/fb55/htmlparser2?sponsor=1\",\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/fb55\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"domelementtype\": \"^2.3.0\",\n        \"domhandler\": \"^5.0.3\",\n        \"domutils\": \"^3.1.0\",\n        \"entities\": \"^4.5.0\"\n      }\n    },\n    \"node_modules/http-cache-semantics\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.1.tgz\",\n      \"integrity\": \"sha512-er295DKPVsV82j5kw1Gjt+ADA/XYHsajl82cGNQG2eyoPkvgUhX+nDIyelzhIWbbsXP39EHcI6l5tYs2FYqYXQ==\",\n      \"dev\": true\n    },\n    \"node_modules/http-proxy-agent\": {\n      \"version\": \"7.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz\",\n      \"integrity\": \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/http2-wrapper\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz\",\n      \"integrity\": \"sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"quick-lru\": \"^5.1.1\",\n        \"resolve-alpn\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.19.0\"\n      }\n    },\n    \"node_modules/https-proxy-agent\": {\n      \"version\": \"7.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.5.tgz\",\n      \"integrity\": \"sha512-1e4Wqeblerz+tMKPIq2EMGiiWW1dIjZOksyHWSUm1rmuvw/how9hBHZ38lAGj5ID4Ik6EdkOw7NmWPy6LAwalw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/human-signals\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n      \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.17.0\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz\",\n      \"integrity\": \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ieee754\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n      \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.0.tgz\",\n      \"integrity\": \"sha512-g7dmpshy+gD7mh88OC9NwSGTKoc3kyLAZQRU1mt53Aw/vnvfXnbC+F/7F7QoYVKbV+KNvJx8wArewKy1vXMtlg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/immediate\": {\n      \"version\": \"3.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/immediate/-/immediate-3.0.6.tgz\",\n      \"integrity\": \"sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/import-meta-resolve\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-meta-resolve/-/import-meta-resolve-4.0.0.tgz\",\n      \"integrity\": \"sha512-okYUR7ZQPH+efeuMJGlq4f8ubUgO50kByRPyt/Cy1Io4PSRsPjxME+YlVaCOx+NIToW7hCsZNFJyTPFFKepRSA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/wooorm\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/ini\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/ini/-/ini-1.3.8.tgz\",\n      \"integrity\": \"sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==\",\n      \"dev\": true\n    },\n    \"node_modules/inquirer\": {\n      \"version\": \"11.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/inquirer/-/inquirer-11.1.0.tgz\",\n      \"integrity\": \"sha512-CmLAZT65GG/v30c+D2Fk8+ceP6pxD6RL+hIUOWAltCmeyEqWYwqu9v76q03OvjyZ3AB0C1Ala2stn1z/rMqGEw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@inquirer/core\": \"^9.2.1\",\n        \"@inquirer/prompts\": \"^6.0.1\",\n        \"@inquirer/type\": \"^2.0.0\",\n        \"@types/mute-stream\": \"^0.0.4\",\n        \"ansi-escapes\": \"^4.3.2\",\n        \"mute-stream\": \"^1.0.0\",\n        \"run-async\": \"^3.0.0\",\n        \"rxjs\": \"^7.8.1\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.6.tgz\",\n      \"integrity\": \"sha512-Xj6dv+PsbtwyPpEflsejS+oIZxmMlV44zAhG479uYu89MsjcYOhCFnNyKrkJrihbsiasQyY0afoCl/9BLR65bg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.2\",\n        \"hasown\": \"^2.0.0\",\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/ip\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ip/-/ip-2.0.1.tgz\",\n      \"integrity\": \"sha512-lJUL9imLTNi1ZfXT+DU6rBBdbiKGBuay9B6xGSPVjUeQwaH1RIGqef8RZkUtHioLmSNpPR5M4HVKJGm1j8FWVQ==\",\n      \"dev\": true\n    },\n    \"node_modules/ip-address\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz\",\n      \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"jsbn\": \"1.1.0\",\n        \"sprintf-js\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"node_modules/is-arguments\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz\",\n      \"integrity\": \"sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.2.tgz\",\n      \"integrity\": \"sha512-y+FyyR/w8vfIRq4eQcM1EYgSTnmHXPqaF+IgzgraytCFq5Xh8lllDVmAZolPJiZttZLeFSINPYMaEJ7/vWUa1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.0\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\",\n      \"dev\": true\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz\",\n      \"integrity\": \"sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz\",\n      \"integrity\": \"sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n      \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n      \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-docker\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz\",\n      \"integrity\": \"sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"is-docker\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-map\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-map/-/is-map-2.0.2.tgz\",\n      \"integrity\": \"sha512-cOZFQQozTha1f4MxLFzlgKYPTyj26picdZTx82hbc/Xf4K/tZOOXSCkMvU4pKioRXGDLJRn0GM7Upe7kR721yg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-module\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz\",\n      \"integrity\": \"sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==\",\n      \"dev\": true\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.2.tgz\",\n      \"integrity\": \"sha512-dqJvarLawXsFbNDeJW7zAz8ItJ9cd28YufuuFzh0G8pNHjJMnY08Dv7sYX2uF5UpQOwieAeOExEYAWWfu7ZZUA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz\",\n      \"integrity\": \"sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-plain-obj\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-4.1.0.tgz\",\n      \"integrity\": \"sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-port-reachable\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-port-reachable/-/is-port-reachable-4.0.0.tgz\",\n      \"integrity\": \"sha512-9UoipoxYmSk6Xy7QFgRv2HDyaysmgSG75TFQs6S+3pDM7ZhKTF/bskZV+0UlABHzKjNVhPjYCLfeZUEg1wXxig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-potential-custom-element-name\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-potential-custom-element-name/-/is-potential-custom-element-name-1.0.1.tgz\",\n      \"integrity\": \"sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==\",\n      \"dev\": true\n    },\n    \"node_modules/is-reference\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz\",\n      \"integrity\": \"sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/estree\": \"*\"\n      }\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n      \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-set\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-set/-/is-set-2.0.2.tgz\",\n      \"integrity\": \"sha512-+2cnTEZeY5z/iXGbLhPrOAaK/Mau5k5eXq9j14CpRTftq0pAJu2MwVRSZhyZWBzx3o6X795Lz6Bpb6R0GKf37g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-sqN2UDu1/0y6uvXyStCOzyhAjCSlHceFoMKJW8W9EU9cvic/QdsZ0kEU93HEy3IUEFZIiH/3w+AH/UQbPHNdhA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-stream\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz\",\n      \"integrity\": \"sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz\",\n      \"integrity\": \"sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.12.tgz\",\n      \"integrity\": \"sha512-Z14TF2JNG8Lss5/HMqt0//T9JeHXttXy5pH/DBU4vi98ozO2btxzq9MwYDZYnKwU8nRsz/+GVFVRDq3DkVuSPg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"which-typed-array\": \"^1.1.11\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz\",\n      \"integrity\": \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-weakmap\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.1.tgz\",\n      \"integrity\": \"sha512-NSBR4kH5oVj1Uwvv970ruUkCV7O1mzgVFO4/rev2cLRda9Tm9HrL70ZPut4rOHgY0FNrUu9BCbXA2sdQ+x0chA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakref\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz\",\n      \"integrity\": \"sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakset\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.2.tgz\",\n      \"integrity\": \"sha512-t2yVvttHkQktwnNNmBQ98AhENLdPUTDTE21uPqAQ0ARwQfGeQKRVS0NNurH7bTf7RrvcVn1OOge45CnBeHCSmg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-wsl\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz\",\n      \"integrity\": \"sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-docker\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz\",\n      \"integrity\": \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\",\n      \"dev\": true\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n      \"dev\": true\n    },\n    \"node_modules/istanbul-lib-coverage\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.0.tgz\",\n      \"integrity\": \"sha512-eOeJ5BHCmHYvQK7xt9GkdHuzuCGS1Y6g9Gvnx3Ym33fz/HpLRYxiS0wHNr+m/MBC8B647Xt608vCDEvhl9c6Mw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-report\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz\",\n      \"integrity\": \"sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"make-dir\": \"^4.0.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-reports\": {\n      \"version\": \"3.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.6.tgz\",\n      \"integrity\": \"sha512-TLgnMkKg3iTDsQ9PbPTdpfAK2DzjF9mqUG7RMgcQl8oFjad8ob4laGxv5XV5U9MAfx8D6tSJiUyuAwzLicaxlg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"html-escaper\": \"^2.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"3.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.0.tgz\",\n      \"integrity\": \"sha512-JVYhQnN59LVPFCEcVa2C3CrEKYacvjRfqIQl+h8oi91aLYQVWRYbxjPcv1bUiUy/kLmQaANrYfNMCO3kuEDHfw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      },\n      \"optionalDependencies\": {\n        \"@pkgjs/parseargs\": \"^0.11.0\"\n      }\n    },\n    \"node_modules/jake\": {\n      \"version\": \"10.8.7\",\n      \"resolved\": \"https://registry.npmjs.org/jake/-/jake-10.8.7.tgz\",\n      \"integrity\": \"sha512-ZDi3aP+fG/LchyBzUM804VjddnwfSfsdeYkwt8NcbKRvo4rFkjhs456iLFn3k2ZUWvNe4i48WACDbza8fhq2+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"async\": \"^3.2.3\",\n        \"chalk\": \"^4.0.2\",\n        \"filelist\": \"^1.0.4\",\n        \"minimatch\": \"^3.1.2\"\n      },\n      \"bin\": {\n        \"jake\": \"bin/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/jest-diff\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-diff/-/jest-diff-29.7.0.tgz\",\n      \"integrity\": \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"diff-sequences\": \"^29.6.3\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jest-get-type\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-get-type/-/jest-get-type-29.6.3.tgz\",\n      \"integrity\": \"sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-29.7.0.tgz\",\n      \"integrity\": \"sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"jest-diff\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jest-message-util\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-message-util/-/jest-message-util-29.7.0.tgz\",\n      \"integrity\": \"sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.12.13\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/stack-utils\": \"^2.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jest-util\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\",\n      \"integrity\": \"sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"picomatch\": \"^2.2.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-util/node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/joi\": {\n      \"version\": \"17.13.3\",\n      \"resolved\": \"https://registry.npmjs.org/joi/-/joi-17.13.3.tgz\",\n      \"integrity\": \"sha512-otDA4ldcIx+ZXsKHWmp0YizCweVRZG96J10b0FevjfuncLO1oX59THoAmHkNubYJ+9gWsYsp5k8v4ib6oDv1fA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@hapi/hoek\": \"^9.3.0\",\n        \"@hapi/topo\": \"^5.1.0\",\n        \"@sideway/address\": \"^4.1.5\",\n        \"@sideway/formula\": \"^3.0.1\",\n        \"@sideway/pinpoint\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n      \"dev\": true\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsbn\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz\",\n      \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsdom\": {\n      \"version\": \"25.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsdom/-/jsdom-25.0.1.tgz\",\n      \"integrity\": \"sha512-8i7LzZj7BF8uplX+ZyOlIz86V6TAsSs+np6m1kpW9u0JWi4z/1t+FzcK1aek+ybTnAC4KhBL4uXCNT0wcUIeCw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cssstyle\": \"^4.1.0\",\n        \"data-urls\": \"^5.0.0\",\n        \"decimal.js\": \"^10.4.3\",\n        \"form-data\": \"^4.0.0\",\n        \"html-encoding-sniffer\": \"^4.0.0\",\n        \"http-proxy-agent\": \"^7.0.2\",\n        \"https-proxy-agent\": \"^7.0.5\",\n        \"is-potential-custom-element-name\": \"^1.0.1\",\n        \"nwsapi\": \"^2.2.12\",\n        \"parse5\": \"^7.1.2\",\n        \"rrweb-cssom\": \"^0.7.1\",\n        \"saxes\": \"^6.0.0\",\n        \"symbol-tree\": \"^3.2.4\",\n        \"tough-cookie\": \"^5.0.0\",\n        \"w3c-xmlserializer\": \"^5.0.0\",\n        \"webidl-conversions\": \"^7.0.0\",\n        \"whatwg-encoding\": \"^3.1.1\",\n        \"whatwg-mimetype\": \"^4.0.0\",\n        \"whatwg-url\": \"^14.0.0\",\n        \"ws\": \"^8.18.0\",\n        \"xml-name-validator\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"peerDependencies\": {\n        \"canvas\": \"^2.11.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"canvas\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jsdom-global\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsdom-global/-/jsdom-global-3.0.2.tgz\",\n      \"integrity\": \"sha512-t1KMcBkz/pT5JrvcJbpUR2u/w1kO9jXctaaGJ0vZDzwFnIvGWw9IDSRciT83kIs8Bnw4qpOl8bQK08V01YgMPg==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"jsdom\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/jsdom/node_modules/tr46\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tr46/-/tr46-5.0.0.tgz\",\n      \"integrity\": \"sha512-tk2G5R2KRwBd+ZN0zaEXpmzdKyOYksXwywulIX95MBODjSzMIuQnQ3m8JxgbhnL1LeVo7lqQKsYa1O3Htl7K5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/jsdom/node_modules/whatwg-url\": {\n      \"version\": \"14.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.0.0.tgz\",\n      \"integrity\": \"sha512-1lfMEm2IEr7RIV+f4lUNPOqfFL+pO+Xw3fJSqmjX9AbXcXcYOkCe1P6+9VBZB6n94af16NfZf+sSk0JCBZC9aw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tr46\": \"^5.0.0\",\n        \"webidl-conversions\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/json-buffer\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n      \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\",\n      \"dev\": true\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-3.0.1.tgz\",\n      \"integrity\": \"sha512-aatBvbL26wVUCLmbWdCpeu9iF5wOyWpagiKkInA+kfws3sWdBrTnsvN2CKcyCYyUrc7rebNBlK6+kteg7ksecg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n      \"dev\": true\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/jsonfile\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\",\n      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"universalify\": \"^2.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.6\"\n      }\n    },\n    \"node_modules/jszip\": {\n      \"version\": \"3.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/jszip/-/jszip-3.10.1.tgz\",\n      \"integrity\": \"sha512-xXDvecyTpGLrqFrvkrUSoxxfJI5AH7U8zxxtVclpsUtMCq4JQ290LY8AW5c7Ggnr/Y/oK+bQMbqK2qmtk3pN4g==\",\n      \"dev\": true,\n      \"license\": \"(MIT OR GPL-3.0-or-later)\",\n      \"dependencies\": {\n        \"lie\": \"~3.3.0\",\n        \"pako\": \"~1.0.2\",\n        \"readable-stream\": \"~2.3.6\",\n        \"setimmediate\": \"^1.0.5\"\n      }\n    },\n    \"node_modules/just-extend\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/just-extend/-/just-extend-6.2.0.tgz\",\n      \"integrity\": \"sha512-cYofQu2Xpom82S6qD778jBDpwvvy39s1l/hrYij2u9AMdQcGRpaBu6kY4mVhuno5kJVi1DAz4aiphA2WI1/OAw==\",\n      \"dev\": true\n    },\n    \"node_modules/keyv\": {\n      \"version\": \"4.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n      \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"json-buffer\": \"3.0.1\"\n      }\n    },\n    \"node_modules/lazy-ass\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/lazy-ass/-/lazy-ass-1.6.0.tgz\",\n      \"integrity\": \"sha512-cc8oEVoctTvsFZ/Oje/kGnHbpWHYBe8IAJe4C0QNc3t8uM/0Y8+erSz/7Y1ALuXTEZTMvxXwO6YbX1ey3ujiZw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"> 0.8\"\n      }\n    },\n    \"node_modules/lazystream\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/lazystream/-/lazystream-1.0.1.tgz\",\n      \"integrity\": \"sha512-b94GiNHQNy6JNTrt5w6zNyffMrNkXZb3KTkCZJb2V1xaEGCk093vkZ2jk3tpaeP33/OiXC+WvK9AxUebnf5nbw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"readable-stream\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6.3\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/lie\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/lie/-/lie-3.3.0.tgz\",\n      \"integrity\": \"sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"immediate\": \"~3.0.5\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-2.0.4.tgz\",\n      \"integrity\": \"sha512-wM1+Z03eypVAVUCE7QdSqpVIvelbOakn1M0bPDoA4SGWPx3sNDVUiMo3L6To6WWGClB7VyXnhQ4Sn7gxiJbE6A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      }\n    },\n    \"node_modules/locate-app\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-app/-/locate-app-2.5.0.tgz\",\n      \"integrity\": \"sha512-xIqbzPMBYArJRmPGUZD9CzV9wOqmVtQnaAn3wrj3s6WYW0bQvPI7x+sPYUGmDTYMHefVK//zc6HEYZ1qnxIK+Q==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://buymeacoffee.com/hejny\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/hejny/locate-app/blob/main/README.md#%EF%B8%8F-contributing\"\n        }\n      ],\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@promptbook/utils\": \"0.69.5\",\n        \"type-fest\": \"4.26.0\",\n        \"userhome\": \"1.0.1\"\n      }\n    },\n    \"node_modules/locate-app/node_modules/type-fest\": {\n      \"version\": \"4.26.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-4.26.0.tgz\",\n      \"integrity\": \"sha512-OduNjVJsFbifKb57UqZ2EMP1i4u64Xwow3NYXUtBbD4vIwJdQd4+xl8YDou1dlm4DVrtwT/7Ky8z8WyCULVfxw==\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.clonedeep\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz\",\n      \"integrity\": \"sha512-H5ZhCF25riFd9uB5UCkVKo61m3S/xZk1x4wA6yp/L3RFP6Z/eHH1ymQcGLo7J3GMPfm0V/7m1tryHuGVxpqEBQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.flattendeep\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.flattendeep/-/lodash.flattendeep-4.4.0.tgz\",\n      \"integrity\": \"sha512-uHaJFihxmJcEX3kT4I23ABqKKalJ/zDrDg0lsFtc1h+3uw49SIJ5beyhx5ExVRti3AvKoOJngIj7xz3oylPdWQ==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.get\": {\n      \"version\": \"4.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz\",\n      \"integrity\": \"sha512-z+Uw/vLuy6gQe8cfaFWD7p0wVv8fJl3mbzXh33RS+0oW2wvUqiRXiQ69gLWSLpgB5/6sU+r6BlQR0MBILadqTQ==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.isequal\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.isequal/-/lodash.isequal-4.5.0.tgz\",\n      \"integrity\": \"sha512-pDo3lu8Jhfjqls6GkMgpahsF9kCyayhgykjyLMNFTKWrpVdAQtYyB4muAMWozBB4ig/dtWAmsMxLEI8wuz+DYQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.pickby\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.pickby/-/lodash.pickby-4.6.0.tgz\",\n      \"integrity\": \"sha512-AZV+GsS/6ckvPOVQPXSiFFacKvKB4kOQu6ynt9wz0F3LO4R9Ij4K1ddYsIytDpSgLz88JHd9P+oaLeej5/Sl7Q==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.union\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.union/-/lodash.union-4.6.0.tgz\",\n      \"integrity\": \"sha512-c4pB2CdGrGdjMKYLA+XiRDO7Y0PRQbm/Gzg8qMj+QH+pFVAoTp5sBpO0odL3FjoPCGjK96p6qsP+yQoiLoOBcw==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.zip\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.zip/-/lodash.zip-4.2.0.tgz\",\n      \"integrity\": \"sha512-C7IOaBBK/0gMORRBd8OETNx3kmOkgIWIPvyDpZSCTwUrpYmgZwJkjZeOD8ww4xbOUOs4/attY+pciKvadNfFbg==\",\n      \"dev\": true\n    },\n    \"node_modules/log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz\",\n      \"integrity\": \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/loglevel\": {\n      \"version\": \"1.9.2\",\n      \"resolved\": \"https://registry.npmjs.org/loglevel/-/loglevel-1.9.2.tgz\",\n      \"integrity\": \"sha512-HgMmCqIJSAKqo68l0rS2AanEWfkxaZ5wNiEFb5ggm08lDs9Xl2KxBlX3PTcaD2chBM1gXAYf491/M2Rv8Jwayg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6.0\"\n      },\n      \"funding\": {\n        \"type\": \"tidelift\",\n        \"url\": \"https://tidelift.com/funding/github/npm/loglevel\"\n      }\n    },\n    \"node_modules/loglevel-plugin-prefix\": {\n      \"version\": \"0.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/loglevel-plugin-prefix/-/loglevel-plugin-prefix-0.8.4.tgz\",\n      \"integrity\": \"sha512-WpG9CcFAOjz/FtNht+QJeGpvVl/cdR6P0z6OcXSkr8wFJOsV2GRj2j10JLfjuA4aYkcKCNIEqRGCyTife9R8/g==\",\n      \"dev\": true\n    },\n    \"node_modules/loupe\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/loupe/-/loupe-3.1.1.tgz\",\n      \"integrity\": \"sha512-edNu/8D5MKVfGVFRhFf8aAxiTM6Wumfz5XsaatSxlD3w4R1d/WEKUTydCdPGbl9K7QG/Ca3GnDV2sIKIpXRQcw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-func-name\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/lower-case\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/lower-case/-/lower-case-2.0.2.tgz\",\n      \"integrity\": \"sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/lowercase-keys\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz\",\n      \"integrity\": \"sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/lz-string\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lz-string/-/lz-string-1.5.0.tgz\",\n      \"integrity\": \"sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"bin\": {\n        \"lz-string\": \"bin/bin.js\"\n      }\n    },\n    \"node_modules/magic-string\": {\n      \"version\": \"0.30.11\",\n      \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.11.tgz\",\n      \"integrity\": \"sha512-+Wri9p0QHMy+545hKww7YAu5NyzF8iomPL/RQazugQ9+Ez4Ic3mERMd8ZTX5rfK944j+560ZJi8iAwgak1Ac7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.5.0\"\n      }\n    },\n    \"node_modules/make-dir\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-4.0.0.tgz\",\n      \"integrity\": \"sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"semver\": \"^7.5.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/make-dir/node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.4.tgz\",\n      \"integrity\": \"sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/map-stream\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz\",\n      \"integrity\": \"sha512-CkYQrPYZfWnu/DAmVCpTSX/xHpKZ80eKh2lAkyA6AJTef6bW+6JpbQZN5rofum7da+SyN1bi5ctTm+lTfcCW3g==\",\n      \"dev\": true\n    },\n    \"node_modules/merge-stream\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n      \"dev\": true\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"braces\": \"^3.0.3\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/micromatch/node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/mimic-response\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz\",\n      \"integrity\": \"sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/minimalistic-assert\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz\",\n      \"integrity\": \"sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\",\n      \"dev\": true\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\",\n      \"integrity\": \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/mkdirp\": {\n      \"version\": \"0.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz\",\n      \"integrity\": \"sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimist\": \"^1.2.6\"\n      },\n      \"bin\": {\n        \"mkdirp\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/mocha\": {\n      \"version\": \"10.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-10.8.2.tgz\",\n      \"integrity\": \"sha512-VZlYo/WE8t1tstuRmqgeyBgCbJc/lEdopaa+axcKzTBJ+UIdlAB9XnmvTCAH4pwR4ElNInaedhEBmZD8iCSVEg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-colors\": \"^4.1.3\",\n        \"browser-stdout\": \"^1.3.1\",\n        \"chokidar\": \"^3.5.3\",\n        \"debug\": \"^4.3.5\",\n        \"diff\": \"^5.2.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"find-up\": \"^5.0.0\",\n        \"glob\": \"^8.1.0\",\n        \"he\": \"^1.2.0\",\n        \"js-yaml\": \"^4.1.0\",\n        \"log-symbols\": \"^4.1.0\",\n        \"minimatch\": \"^5.1.6\",\n        \"ms\": \"^2.1.3\",\n        \"serialize-javascript\": \"^6.0.2\",\n        \"strip-json-comments\": \"^3.1.1\",\n        \"supports-color\": \"^8.1.1\",\n        \"workerpool\": \"^6.5.1\",\n        \"yargs\": \"^16.2.0\",\n        \"yargs-parser\": \"^20.2.9\",\n        \"yargs-unparser\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"_mocha\": \"bin/_mocha\",\n        \"mocha\": \"bin/mocha.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.0.0\"\n      }\n    },\n    \"node_modules/mocha/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/mocha/node_modules/minimatch\": {\n      \"version\": \"5.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n      \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/mocha/node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node_modules/mute-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-1.0.0.tgz\",\n      \"integrity\": \"sha512-avsJQhyd+680gKXyG/sQc0nXaC6rBkPOfyHYcFb9+hdkqQkR9bdnkJ0AMZhke0oesPqIO+mFFJ+IdBc7mst4IA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n      \"dev\": true\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/netmask\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/netmask/-/netmask-2.0.2.tgz\",\n      \"integrity\": \"sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/nise\": {\n      \"version\": \"6.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/nise/-/nise-6.1.1.tgz\",\n      \"integrity\": \"sha512-aMSAzLVY7LyeM60gvBS423nBmIPP+Wy7St7hsb+8/fc1HmeoHJfLO8CKse4u3BtOZvQLJghYPI2i/1WZrEj5/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinonjs/commons\": \"^3.0.1\",\n        \"@sinonjs/fake-timers\": \"^13.0.1\",\n        \"@sinonjs/text-encoding\": \"^0.7.3\",\n        \"just-extend\": \"^6.2.0\",\n        \"path-to-regexp\": \"^8.1.0\"\n      }\n    },\n    \"node_modules/no-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/no-case/-/no-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-fgAN3jGAh+RoxUGZHTSOLJIqUc2wmoBwGR4tbpNAKmmovFoWq0OdRkb0VkldReO2a2iBT/OEulG9XSUc10r3zg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lower-case\": \"^2.0.2\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/node-domexception\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz\",\n      \"integrity\": \"sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/jimmywarting\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://paypal.me/jimmywarting\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10.5.0\"\n      }\n    },\n    \"node_modules/node-fetch\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.2.tgz\",\n      \"integrity\": \"sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"data-uri-to-buffer\": \"^4.0.0\",\n        \"fetch-blob\": \"^3.1.4\",\n        \"formdata-polyfill\": \"^4.0.10\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/node-fetch\"\n      }\n    },\n    \"node_modules/normalize-package-data\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-6.0.0.tgz\",\n      \"integrity\": \"sha512-UL7ELRVxYBHBgYEtZCXjxuD5vPxnmvMGq0jp/dGPKKrN7tfsBh2IY7TlJ15WWwdjRWD3RJbnsygUurTK3xkPkg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hosted-git-info\": \"^7.0.0\",\n        \"is-core-module\": \"^2.8.1\",\n        \"semver\": \"^7.3.5\",\n        \"validate-npm-package-license\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^16.14.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/normalize-package-data/node_modules/semver\": {\n      \"version\": \"7.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.0.tgz\",\n      \"integrity\": \"sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-url\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz\",\n      \"integrity\": \"sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/npm-run-path\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/nth-check\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz\",\n      \"integrity\": \"sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==\",\n      \"dev\": true,\n      \"license\": \"BSD-2-Clause\",\n      \"dependencies\": {\n        \"boolbase\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/nth-check?sponsor=1\"\n      }\n    },\n    \"node_modules/nwsapi\": {\n      \"version\": \"2.2.12\",\n      \"resolved\": \"https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.12.tgz\",\n      \"integrity\": \"sha512-qXDmcVlZV4XRtKFzddidpfVP4oMSGhga+xdMc25mv8kaLUHtgzCDhUxkrN8exkGdTlLNaXj7CV3GtON7zuGZ+w==\",\n      \"dev\": true\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-is\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/object-is/-/object-is-1.1.5.tgz\",\n      \"integrity\": \"sha512-3cyDsyHgtmi7I7DfSSI2LDp6SK2lwvtbg0p0R1e0RvTqF5ceGx+K2dfSjm1bKDMVCFEDAQvy+o8c6a7VujOddw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz\",\n      \"integrity\": \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/object.assign/-/object.assign-4.1.5.tgz\",\n      \"integrity\": \"sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.5\",\n        \"define-properties\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.fromentries\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.7.tgz\",\n      \"integrity\": \"sha512-UPbPHML6sL8PI/mOqPwsH4G6iyXcCGzLin8KvEPenOZN5lpCNBZZQ+V62vdjB1mQHrmqGQt5/OJzemUA+KJmEA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.groupby\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.1.tgz\",\n      \"integrity\": \"sha512-HqaQtqLnp/8Bn4GL16cj+CUYbnpe1bh0TtEaWvybszDG4tgxCJuRpV8VGuvNaI1fAnI4lUJzDG55MXcOH4JZcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\",\n        \"get-intrinsic\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/object.values\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/object.values/-/object.values-1.1.7.tgz\",\n      \"integrity\": \"sha512-aU6xnDFYT3x17e/f0IiiwlGPTy2jzMySGfUB4fq6z7CV8l85CWHDk5ErhyhpfDHhrOMwGFhSQkhMGHaIotA6Ng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/on-headers\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz\",\n      \"integrity\": \"sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-fn\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.3.tgz\",\n      \"integrity\": \"sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@aashutoshrathi/word-wrap\": \"^1.2.3\",\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/p-cancelable\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz\",\n      \"integrity\": \"sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/pac-proxy-agent\": {\n      \"version\": \"7.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/pac-proxy-agent/-/pac-proxy-agent-7.0.2.tgz\",\n      \"integrity\": \"sha512-BFi3vZnO9X5Qt6NRz7ZOaPja3ic0PhlsmCRYLOpN11+mWBCR6XJDqW5RF3j8jm4WGGQZtBA+bTfxYzeKW73eHg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@tootallnate/quickjs-emscripten\": \"^0.23.0\",\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"get-uri\": \"^6.0.1\",\n        \"http-proxy-agent\": \"^7.0.0\",\n        \"https-proxy-agent\": \"^7.0.5\",\n        \"pac-resolver\": \"^7.0.1\",\n        \"socks-proxy-agent\": \"^8.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/pac-resolver\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pac-resolver/-/pac-resolver-7.0.1.tgz\",\n      \"integrity\": \"sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"degenerator\": \"^5.0.0\",\n        \"netmask\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/package-json-from-dist\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz\",\n      \"integrity\": \"sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==\",\n      \"dev\": true,\n      \"license\": \"BlueOak-1.0.0\"\n    },\n    \"node_modules/pako\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/pako/-/pako-1.0.11.tgz\",\n      \"integrity\": \"sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==\",\n      \"dev\": true,\n      \"license\": \"(MIT AND Zlib)\"\n    },\n    \"node_modules/param-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/param-case/-/param-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-RXlj7zCYokReqWpOPH9oYivUzLYZ5vAPIfEmCTNViosC78F8F0H9y7T7gG2M39ymgutxF5gcFEsyZQSph9Bp3A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dot-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parse-json\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-7.1.1.tgz\",\n      \"integrity\": \"sha512-SgOTCX/EZXtZxBE5eJ97P4yGM5n37BwRU+YMsH4vNzFqJV/oWFXXCmwFlgWUM4PrakybVOueJJ6pwHqSVhTFDw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.21.4\",\n        \"error-ex\": \"^1.3.2\",\n        \"json-parse-even-better-errors\": \"^3.0.0\",\n        \"lines-and-columns\": \"^2.0.3\",\n        \"type-fest\": \"^3.8.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parse-json/node_modules/type-fest\": {\n      \"version\": \"3.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-3.13.1.tgz\",\n      \"integrity\": \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14.16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parse-ms\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-ms/-/parse-ms-4.0.0.tgz\",\n      \"integrity\": \"sha512-TXfryirbmq34y8QBwgqCVLi+8oA3oWx2eAnSn62ITyEhEYaWRlVZ2DvMM9eZbMs/RfxPu/PK/aBLyGj4IrqMHw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/parse5\": {\n      \"version\": \"7.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/parse5/-/parse5-7.1.2.tgz\",\n      \"integrity\": \"sha512-Czj1WaSVpaoj0wbhMzLmWD69anp2WH7FXMB9n1Sy8/ZFF9jolSQVMu1Ij5WIyGmcBmhk7EOndpO4mIpihVqAXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"entities\": \"^4.4.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/inikulin/parse5?sponsor=1\"\n      }\n    },\n    \"node_modules/parse5-htmlparser2-tree-adapter\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse5-htmlparser2-tree-adapter/-/parse5-htmlparser2-tree-adapter-7.1.0.tgz\",\n      \"integrity\": \"sha512-ruw5xyKs6lrpo9x9rCZqZZnIUntICjQAd0Wsmp396Ul9lN/h+ifgVV1x1gZHi8euej6wTfpqX8j+BFQxF0NS/g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"domhandler\": \"^5.0.3\",\n        \"parse5\": \"^7.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/inikulin/parse5?sponsor=1\"\n      }\n    },\n    \"node_modules/parse5-parser-stream\": {\n      \"version\": \"7.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/parse5-parser-stream/-/parse5-parser-stream-7.1.2.tgz\",\n      \"integrity\": \"sha512-JyeQc9iwFLn5TbvvqACIF/VXG6abODeB3Fwmv/TGdLk2LfbWkaySGY72at4+Ty7EkPZj854u4CrICqNk2qIbow==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"parse5\": \"^7.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/inikulin/parse5?sponsor=1\"\n      }\n    },\n    \"node_modules/pascal-case\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/pascal-case/-/pascal-case-3.1.2.tgz\",\n      \"integrity\": \"sha512-uWlGT3YSnK9x3BQJaOdcZwrnV6hPpd8jFH1/ucpiLRPh/2zCVJKS19E4GvYHvaCcACn3foXZ0cLB9Wrx1KGe5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/path-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/path-case/-/path-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-qO4qCFjXqVTrcbPt/hQfhTQ+VhFsqNKOPtytgNKkKxSoEp3XPUQ8ObFuePylOIok5gjn69ry8XiULxCwot3Wfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dot-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-is-inside\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz\",\n      \"integrity\": \"sha512-DUWJr3+ULp4zXmol/SZkFf3JGsS9/SIv+Y3Rt93/UjPpDpklB5f1er4O3POIbUuUJ3FXgqte2Q7SrU6zAqwk8w==\",\n      \"dev\": true\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"1.11.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz\",\n      \"integrity\": \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^10.2.0\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-scurry/node_modules/lru-cache\": {\n      \"version\": \"10.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.2.2.tgz\",\n      \"integrity\": \"sha512-9hp3Vp2/hFQUiIwKo8XCeFVnrg8Pk3TYNPIR7tJADKi5YfcF7vEaK7avFHTlSy3kOKYaJQaalfEo6YuXdceBOQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"14 || >=16.14\"\n      }\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"8.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-8.2.0.tgz\",\n      \"integrity\": \"sha512-TdrF7fW9Rphjq4RjrW0Kp2AW0Ahwu9sRGTkS6bvDi0SCwZlEZYmcfDbEsTz8RVk0EHIS/Vd1bv3JhG+1xZuAyQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/pathe\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\",\n      \"integrity\": \"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\",\n      \"dev\": true\n    },\n    \"node_modules/pathval\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pathval/-/pathval-2.0.0.tgz\",\n      \"integrity\": \"sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 14.16\"\n      }\n    },\n    \"node_modules/pause-stream\": {\n      \"version\": \"0.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz\",\n      \"integrity\": \"sha512-e3FBlXLmN/D1S+zHzanP4E/4Z60oFAa3O051qt1pxa7DEJWKAyil6upYVXCWadEnuoqa4Pkc9oUx9zsxYeRv8A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"through\": \"~2.3\"\n      }\n    },\n    \"node_modules/pend\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\",\n      \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\",\n      \"dev\": true\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz\",\n      \"integrity\": \"sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/prettier\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-3.3.3.tgz\",\n      \"integrity\": \"sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==\",\n      \"dev\": true,\n      \"bin\": {\n        \"prettier\": \"bin/prettier.cjs\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/prettier/prettier?sponsor=1\"\n      }\n    },\n    \"node_modules/pretty-format\": {\n      \"version\": \"27.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz\",\n      \"integrity\": \"sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^17.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0\"\n      }\n    },\n    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/pretty-ms\": {\n      \"version\": \"9.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-ms/-/pretty-ms-9.1.0.tgz\",\n      \"integrity\": \"sha512-o1piW0n3tgKIKCwk2vpM/vOV13zjJzvP37Ioze54YlTHE06m4tjEbzg9WsKkvTuyYln2DHjo5pY4qrZGI0otpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"parse-ms\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/process\": {\n      \"version\": \"0.11.10\",\n      \"resolved\": \"https://registry.npmjs.org/process/-/process-0.11.10.tgz\",\n      \"integrity\": \"sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6.0\"\n      }\n    },\n    \"node_modules/process-nextick-args\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\",\n      \"dev\": true\n    },\n    \"node_modules/progress\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/progress/-/progress-2.0.3.tgz\",\n      \"integrity\": \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/proxy-agent\": {\n      \"version\": \"6.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-agent/-/proxy-agent-6.4.0.tgz\",\n      \"integrity\": \"sha512-u0piLU+nCOHMgGjRbimiXmA9kM/L9EHh3zL81xCdp7m+Y2pHIsnmbdDoEDoAz5geaonNR6q6+yOPQs6n4T6sBQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"agent-base\": \"^7.0.2\",\n        \"debug\": \"^4.3.4\",\n        \"http-proxy-agent\": \"^7.0.1\",\n        \"https-proxy-agent\": \"^7.0.3\",\n        \"lru-cache\": \"^7.14.1\",\n        \"pac-proxy-agent\": \"^7.0.1\",\n        \"proxy-from-env\": \"^1.1.0\",\n        \"socks-proxy-agent\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/proxy-agent/node_modules/lru-cache\": {\n      \"version\": \"7.18.3\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-7.18.3.tgz\",\n      \"integrity\": \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/proxy-from-env\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n      \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\",\n      \"dev\": true\n    },\n    \"node_modules/ps-tree\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ps-tree/-/ps-tree-1.2.0.tgz\",\n      \"integrity\": \"sha512-0VnamPPYHl4uaU/nSFeZZpR21QAWRz+sRv4iW9+v/GS/J5U5iZB5BNN6J0RMoOvdx2gWM2+ZFMIm58q24e4UYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"event-stream\": \"=3.3.4\"\n      },\n      \"bin\": {\n        \"ps-tree\": \"bin/ps-tree.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/pump\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n      \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.1\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n      \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/query-selector-shadow-dom\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/query-selector-shadow-dom/-/query-selector-shadow-dom-1.0.1.tgz\",\n      \"integrity\": \"sha512-lT5yCqEBgfoMYpf3F2xQRK7zEr1rhIIZuceDK6+xRkJQ4NMbHTwXqk4NkwDwQMNqXgG9r9fyHnzwNVs6zV5KRw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/query-string\": {\n      \"version\": \"7.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/query-string/-/query-string-7.1.3.tgz\",\n      \"integrity\": \"sha512-hh2WYhq4fi8+b+/2Kg9CEge4fDPvHS534aOOvOZeQ3+Vf2mCFsaFBYj0i+iXcAq6I9Vzp5fjMFBlONvayDC1qg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"decode-uri-component\": \"^0.2.2\",\n        \"filter-obj\": \"^1.1.0\",\n        \"split-on-first\": \"^1.0.0\",\n        \"strict-uri-encode\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/queue-tick\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/queue-tick/-/queue-tick-1.0.1.tgz\",\n      \"integrity\": \"sha512-kJt5qhMxoszgU/62PLP1CJytzd2NKetjSRnyuj31fDd3Rlcz3fzlFdFLD1SItunPwyqEOkca6GbV612BWfaBag==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/quick-lru\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz\",\n      \"integrity\": \"sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/randombytes\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n      \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.0.tgz\",\n      \"integrity\": \"sha512-kA5WQoNVo4t9lNx2kQNFCxKeBl5IbbSNBl1M/tLkw9WCn+hxNBAW5Qh8gdhs63CJnhjJ2zQWFoqPJP2sK1AV5A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/rc\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/rc/-/rc-1.2.8.tgz\",\n      \"integrity\": \"sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-extend\": \"^0.6.0\",\n        \"ini\": \"~1.3.0\",\n        \"minimist\": \"^1.2.0\",\n        \"strip-json-comments\": \"~2.0.1\"\n      },\n      \"bin\": {\n        \"rc\": \"cli.js\"\n      }\n    },\n    \"node_modules/rc/node_modules/strip-json-comments\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz\",\n      \"integrity\": \"sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"17.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz\",\n      \"integrity\": \"sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/read-pkg\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-8.1.0.tgz\",\n      \"integrity\": \"sha512-PORM8AgzXeskHO/WEv312k9U03B8K9JSiWF/8N9sUuFjBa+9SF2u6K7VClzXwDXab51jCd8Nd36CNM+zR97ScQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/normalize-package-data\": \"^2.4.1\",\n        \"normalize-package-data\": \"^6.0.0\",\n        \"parse-json\": \"^7.0.0\",\n        \"type-fest\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-10.0.0.tgz\",\n      \"integrity\": \"sha512-jgmKiS//w2Zs+YbX039CorlkOp8FIVbSAN8r8GJHDsGlmNPXo+VeHkqAwCiQVTTx5/LwLZTcEw59z3DvcLbr0g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"find-up\": \"^6.3.0\",\n        \"read-pkg\": \"^8.0.0\",\n        \"type-fest\": \"^3.12.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/find-up\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-6.3.0.tgz\",\n      \"integrity\": \"sha512-v2ZsoEuVHYy8ZIlYqwPe/39Cy+cFDzp4dXPaxNvkEuouymu+2Jbz0PxpKarJHYJTmv2HWT3O382qY8l4jMWthw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^7.1.0\",\n        \"path-exists\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/locate-path\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-7.2.0.tgz\",\n      \"integrity\": \"sha512-gvVijfZvn7R+2qyPX8mAuKcFGDf6Nc61GdvGafQsHL0sBIxfKzA+usWn4GFC/bk+QdwPUD4kWFJLhElipq+0VA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/p-limit\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-4.0.0.tgz\",\n      \"integrity\": \"sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/p-locate\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-6.0.0.tgz\",\n      \"integrity\": \"sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/path-exists\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-5.0.0.tgz\",\n      \"integrity\": \"sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/type-fest\": {\n      \"version\": \"3.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-3.13.1.tgz\",\n      \"integrity\": \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14.16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg-up/node_modules/yocto-queue\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.0.0.tgz\",\n      \"integrity\": \"sha512-9bnSc/HEW2uRy67wc+T8UwauLuPJVn28jb+GtJY16iiKWyvmYJRXVT4UamsAEGQfPohgr2q4Tq0sQbQlxTfi1g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12.20\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/read-pkg/node_modules/type-fest\": {\n      \"version\": \"4.10.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-4.10.3.tgz\",\n      \"integrity\": \"sha512-JLXyjizi072smKGGcZiAJDCNweT8J+AuRxmPZ1aG7TERg4ijx9REl8CNhbr36RV4qXqL1gO1FF9HL8OkVmmrsA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/readable-stream\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz\",\n      \"integrity\": \"sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"node_modules/readable-stream/node_modules/isarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\n      \"integrity\": \"sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==\",\n      \"dev\": true\n    },\n    \"node_modules/readable-stream/node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"node_modules/readdir-glob\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/readdir-glob/-/readdir-glob-1.1.3.tgz\",\n      \"integrity\": \"sha512-v05I2k7xN8zXvPD9N+z/uhXPaj0sUFCe2rcWZIpBsqxfP7xXFQ0tipAd/wjj1YxWyWtUS5IDJpOG82JKt2EAVA==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"minimatch\": \"^5.1.0\"\n      }\n    },\n    \"node_modules/readdir-glob/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/readdir-glob/node_modules/minimatch\": {\n      \"version\": \"5.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n      \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/readdirp/node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/recast\": {\n      \"version\": \"0.23.9\",\n      \"resolved\": \"https://registry.npmjs.org/recast/-/recast-0.23.9.tgz\",\n      \"integrity\": \"sha512-Hx/BGIbwj+Des3+xy5uAtAbdCyqK9y9wbBcDFDYanLS9JnMqf7OeF87HQwUimE87OEc72mr6tkKUKMBBL+hF9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ast-types\": \"^0.16.1\",\n        \"esprima\": \"~4.0.0\",\n        \"source-map\": \"~0.6.1\",\n        \"tiny-invariant\": \"^1.3.3\",\n        \"tslib\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/recast/node_modules/ast-types\": {\n      \"version\": \"0.16.1\",\n      \"resolved\": \"https://registry.npmjs.org/ast-types/-/ast-types-0.16.1.tgz\",\n      \"integrity\": \"sha512-6t10qk83GOG8p0vKmaCr8eiilZwO171AvbROMtvvNiwrTly62t+7XkA8RdIIVbpMhCASAsxgAzdRSwh6nw/5Dg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/recast/node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/recursive-readdir\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/recursive-readdir/-/recursive-readdir-2.2.3.tgz\",\n      \"integrity\": \"sha512-8HrF5ZsXk5FAH9dgsx3BlUer73nIhuj+9OrQwEbLTPOBzGkL1lsFCR01am+v+0m2Cmbs1nP12hLDl5FA7EszKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz\",\n      \"integrity\": \"sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.1.tgz\",\n      \"integrity\": \"sha512-sy6TXMN+hnP/wMy+ISxg3krXx7BAtWVO4UouuCN/ziM9UEne0euamVNafDfvC83bRNr95y0V5iijeDQFUNpvrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"set-function-name\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/registry-auth-token\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-3.3.2.tgz\",\n      \"integrity\": \"sha512-JL39c60XlzCVgNrO+qq68FoNb56w/m7JYvGR2jT5iR1xBrUA3Mfx5Twk5rqTThPmQKMWydGmq8oFtDlxfrmxnQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"rc\": \"^1.1.6\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"node_modules/registry-url\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/registry-url/-/registry-url-3.1.0.tgz\",\n      \"integrity\": \"sha512-ZbgR5aZEdf4UKZVBPYIgaglBmSF2Hi94s2PcIHhRGFjKYu+chjJdYfHn4rt3hB6eCKLJ8giVIIfgMa1ehDfZKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"rc\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/req-all\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/req-all/-/req-all-0.1.0.tgz\",\n      \"integrity\": \"sha512-ZdvPr8uXy9ujX3KujwE2P1HWkMYgogIhqeAeyb47MqWjSfyxERSm0TNbN/IapCCmWDufXab04AYrRgObaJCJ6Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n      \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.4\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.4.tgz\",\n      \"integrity\": \"sha512-PXNdCiPqDqeUou+w1C2eTQbNfxKSuMxqTCuvlmmMsk1NWHL5fRrhY6Pl0qEYYc6+QqGClco1Qj8XnjPego4wfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.13.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-alpn\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz\",\n      \"integrity\": \"sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==\",\n      \"dev\": true\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/resolve-pkg-maps\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz\",\n      \"integrity\": \"sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/privatenumber/resolve-pkg-maps?sponsor=1\"\n      }\n    },\n    \"node_modules/responselike\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz\",\n      \"integrity\": \"sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lowercase-keys\": \"^2.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/resq\": {\n      \"version\": \"1.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/resq/-/resq-1.11.0.tgz\",\n      \"integrity\": \"sha512-G10EBz+zAAy3zUd/CDoBbXRL6ia9kOo3xRHrMDsHljI0GDkhYlyjwoCx5+3eCC4swi1uCoZQhskuJkj7Gp57Bw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^2.0.1\"\n      }\n    },\n    \"node_modules/resq/node_modules/fast-deep-equal\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz\",\n      \"integrity\": \"sha512-bCK/2Z4zLidyB4ReuIsvALH6w31YfAQDmXMqMx6FyfHqvBxtjC0eRumeSu4Bs3XtXwpyIywtSTrVT99BxY1f9w==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz\",\n      \"integrity\": \"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rgb2hex\": {\n      \"version\": \"0.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/rgb2hex/-/rgb2hex-0.2.5.tgz\",\n      \"integrity\": \"sha512-22MOP1Rh7sAo1BZpDG6R5RFYzR2lYEgwq7HEmyW2qcsOqR2lQKmn+O//xV3YG/0rrhMC6KVX2hU+ZXuaw9a5bw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/rimraf/node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/rollup\": {\n      \"version\": \"4.24.4\",\n      \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.24.4.tgz\",\n      \"integrity\": \"sha512-vGorVWIsWfX3xbcyAS+I047kFKapHYivmkaT63Smj77XwvLSJos6M1xGqZnBPFQFBRZDOcG1QnYEIxAvTr/HjA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/estree\": \"1.0.6\"\n      },\n      \"bin\": {\n        \"rollup\": \"dist/bin/rollup\"\n      },\n      \"engines\": {\n        \"node\": \">=18.0.0\",\n        \"npm\": \">=8.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"@rollup/rollup-android-arm-eabi\": \"4.24.4\",\n        \"@rollup/rollup-android-arm64\": \"4.24.4\",\n        \"@rollup/rollup-darwin-arm64\": \"4.24.4\",\n        \"@rollup/rollup-darwin-x64\": \"4.24.4\",\n        \"@rollup/rollup-freebsd-arm64\": \"4.24.4\",\n        \"@rollup/rollup-freebsd-x64\": \"4.24.4\",\n        \"@rollup/rollup-linux-arm-gnueabihf\": \"4.24.4\",\n        \"@rollup/rollup-linux-arm-musleabihf\": \"4.24.4\",\n        \"@rollup/rollup-linux-arm64-gnu\": \"4.24.4\",\n        \"@rollup/rollup-linux-arm64-musl\": \"4.24.4\",\n        \"@rollup/rollup-linux-powerpc64le-gnu\": \"4.24.4\",\n        \"@rollup/rollup-linux-riscv64-gnu\": \"4.24.4\",\n        \"@rollup/rollup-linux-s390x-gnu\": \"4.24.4\",\n        \"@rollup/rollup-linux-x64-gnu\": \"4.24.4\",\n        \"@rollup/rollup-linux-x64-musl\": \"4.24.4\",\n        \"@rollup/rollup-win32-arm64-msvc\": \"4.24.4\",\n        \"@rollup/rollup-win32-ia32-msvc\": \"4.24.4\",\n        \"@rollup/rollup-win32-x64-msvc\": \"4.24.4\",\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/rollup-plugin-riot\": {\n      \"version\": \"9.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rollup-plugin-riot/-/rollup-plugin-riot-9.0.2.tgz\",\n      \"integrity\": \"sha512-ubVF5PAUwuiXTcWqcviREwkAOLKGzRQiWQg2ud3JiChLi1L66nSSO/nVUcKuAbK8s0Roj2e6mQ9UdDP2FjgPWA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@rollup/pluginutils\": \"^5.0.5\"\n      },\n      \"peerDependencies\": {\n        \"@riotjs/compiler\": \">=7.0.0\",\n        \"rollup\": \">=2.53.1\"\n      }\n    },\n    \"node_modules/rrweb-cssom\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/rrweb-cssom/-/rrweb-cssom-0.7.1.tgz\",\n      \"integrity\": \"sha512-TrEMa7JGdVm0UThDJSx7ddw5nVm3UJS9o9CCIZ72B1vSyEZoziDqBYP3XIoi/12lKrJR8rE3jeFHMok2F/Mnsg==\",\n      \"dev\": true\n    },\n    \"node_modules/run-async\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-async/-/run-async-3.0.0.tgz\",\n      \"integrity\": \"sha512-540WwVDOMxA6dN6We19EcT9sc3hkXPw5mzRNGM3FkdN/vtE9NFvj5lFAPNwUDmJjXidm3v7TC1cTE7t17Ulm1Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/rxjs\": {\n      \"version\": \"7.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-7.8.1.tgz\",\n      \"integrity\": \"sha512-AA3TVj+0A2iuIoQkWEK/tqFjBq2j+6PO6Y0zJcvzLAFhEFIO3HL0vls9hWLncZbAAbK0mar7oZ4V079I/qPMxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/safaridriver\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safaridriver/-/safaridriver-0.1.2.tgz\",\n      \"integrity\": \"sha512-4R309+gWflJktzPXBQCobbWEHlzC4aK3a+Ov3tz2Ib2aBxiwd11phkdIBH1l0EO22x24CJMUQkpKFumRriCSRg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safe-array-concat\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.0.1.tgz\",\n      \"integrity\": \"sha512-6XbUAseYE2KtOuGueyeobCySj9L4+66Tn6KQMOPQJrAJEowYKW/YR/MGJZl7FdydUdaFu4LYyDZjxf4/Nmo23Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"isarray\": \"^2.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.0.tgz\",\n      \"integrity\": \"sha512-JBUUzyOgEwXQY1NuPtvcj/qcBDbDmEvWufhlnXZIm75DEHp+afM1r1ujJpJsV/gSM4t59tpDyPi1sd6ZaPFfsA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"is-regex\": \"^1.1.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"node_modules/saucelabs\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/saucelabs/-/saucelabs-8.0.0.tgz\",\n      \"integrity\": \"sha512-Rj9m4OCniYk+c4MFuZGqvz64RPX6oRzMqt0bTr9T27IXGnA7Ic7Ms/VHgPtRcJFP6H3sQ169WOzazPZcW4BIAg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"change-case\": \"^4.1.2\",\n        \"compressing\": \"^1.10.0\",\n        \"form-data\": \"^4.0.0\",\n        \"got\": \"^11.8.6\",\n        \"hash.js\": \"^1.1.7\",\n        \"query-string\": \"^7.1.3\",\n        \"tunnel\": \"^0.0.6\",\n        \"yargs\": \"^17.2.1\"\n      },\n      \"bin\": {\n        \"sl\": \"bin/sl\"\n      }\n    },\n    \"node_modules/saucelabs/node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/saucelabs/node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/saucelabs/node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/saxes\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/saxes/-/saxes-6.0.0.tgz\",\n      \"integrity\": \"sha512-xAg7SOnEhrm5zI3puOOKyy1OMcMlIJZYNJY7xLBwSze0UjhPLnWfj2GF2EpT0jmzaJKIWKHLsaSSajf35bcYnA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"xmlchars\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=v12.22.7\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/sentence-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/sentence-case/-/sentence-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-8LS0JInaQMCRoQ7YUytAo/xUu5W2XnQxV2HI/6uM6U7CITS1RqPElr30V6uIqyMKM9lJGRVFy5/4CuzcixNYSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"no-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\",\n        \"upper-case-first\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/serialize-error\": {\n      \"version\": \"11.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-error/-/serialize-error-11.0.3.tgz\",\n      \"integrity\": \"sha512-2G2y++21dhj2R7iHAdd0FIzjGwuKZld+7Pl/bTU6YIkrC2ZMbVUjm+luj6A6V34Rv9XfKJDKpTWu9W4Gse1D9g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"type-fest\": \"^2.12.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14.16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/serialize-error/node_modules/type-fest\": {\n      \"version\": \"2.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-2.19.0.tgz\",\n      \"integrity\": \"sha512-RAH822pAdBgcNMAfWnCBU3CFZcfZ/i1eZjwFU/dsLKumyuuP3niueg2UAukXYF0E2AAoc82ZSSf9J0WQBinzHA==\",\n      \"dev\": true,\n      \"license\": \"(MIT OR CC0-1.0)\",\n      \"engines\": {\n        \"node\": \">=12.20\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/serialize-javascript\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.2.tgz\",\n      \"integrity\": \"sha512-Saa1xPByTTq2gdeFZYLLo+RFE35NHZkAbqZeWNd3BpzppeVisAqpDjcp8dyf6uIvEqJRd46jemmyA4iFIeVk8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/serve\": {\n      \"version\": \"14.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/serve/-/serve-14.2.4.tgz\",\n      \"integrity\": \"sha512-qy1S34PJ/fcY8gjVGszDB3EXiPSk5FKhUa7tQe0UPRddxRidc2V6cNHPNewbE1D7MAkgLuWEt3Vw56vYy73tzQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@zeit/schemas\": \"2.36.0\",\n        \"ajv\": \"8.12.0\",\n        \"arg\": \"5.0.2\",\n        \"boxen\": \"7.0.0\",\n        \"chalk\": \"5.0.1\",\n        \"chalk-template\": \"0.4.0\",\n        \"clipboardy\": \"3.0.0\",\n        \"compression\": \"1.7.4\",\n        \"is-port-reachable\": \"4.0.0\",\n        \"serve-handler\": \"6.1.6\",\n        \"update-check\": \"1.5.4\"\n      },\n      \"bin\": {\n        \"serve\": \"build/main.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/serve-handler\": {\n      \"version\": \"6.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/serve-handler/-/serve-handler-6.1.6.tgz\",\n      \"integrity\": \"sha512-x5RL9Y2p5+Sh3D38Fh9i/iQ5ZK+e4xuXRd/pGbM4D13tgo/MGwbttUk8emytcr1YYzBYs+apnUngBDFYfpjPuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bytes\": \"3.0.0\",\n        \"content-disposition\": \"0.5.2\",\n        \"mime-types\": \"2.1.18\",\n        \"minimatch\": \"3.1.2\",\n        \"path-is-inside\": \"1.0.2\",\n        \"path-to-regexp\": \"3.3.0\",\n        \"range-parser\": \"1.2.0\"\n      }\n    },\n    \"node_modules/serve-handler/node_modules/mime-db\": {\n      \"version\": \"1.33.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.33.0.tgz\",\n      \"integrity\": \"sha512-BHJ/EKruNIqJf/QahvxwQZXKygOQ256myeN/Ew+THcAa5q+PjyTTMMeNQC4DZw5AwfvelsUrA6B67NKMqXDbzQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/serve-handler/node_modules/mime-types\": {\n      \"version\": \"2.1.18\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.18.tgz\",\n      \"integrity\": \"sha512-lc/aahn+t4/SWV/qcmumYjymLsWfN3ELhpmVuUFjgsORruuZPVSwAQryq+HHGvO/SI2KVX26bx+En+zhM8g8hQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mime-db\": \"~1.33.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/serve-handler/node_modules/path-to-regexp\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-3.3.0.tgz\",\n      \"integrity\": \"sha512-qyCH421YQPS2WFDxDjftfc1ZR5WKQzVzqsp4n9M2kQhVOo/ByahFoUNJfl58kOcEGfQ//7weFTDhm+ss8Ecxgw==\",\n      \"dev\": true\n    },\n    \"node_modules/serve/node_modules/ajv\": {\n      \"version\": \"8.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.12.0.tgz\",\n      \"integrity\": \"sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"json-schema-traverse\": \"^1.0.0\",\n        \"require-from-string\": \"^2.0.2\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/serve/node_modules/chalk\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.0.1.tgz\",\n      \"integrity\": \"sha512-Fo07WOYGqMfCWHOzSXOt2CxDbC6skS/jO9ynEcmpANMoPrD+W1r1K6Vx7iNm+AQmETU1Xr2t+n8nzkV9t6xh3w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/serve/node_modules/json-schema-traverse\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n      \"dev\": true\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.1.1.tgz\",\n      \"integrity\": \"sha512-VoaqjbBJKiWtg4yRcKBQ7g7wnGnLV3M8oLvVWwOk2PdYY6PEFegR1vezXR0tw6fZGF9csVakIRjrJiy2veSBFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.1\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/set-function-name\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.1.tgz\",\n      \"integrity\": \"sha512-tMNCiqYVkXIZgc2Hnoy2IvC/f8ezc5koaRFkCjrpWzGpCd3qbZXPzVy9MAZzK1ch/X0jvSkojys3oqJN0qCmdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"has-property-descriptors\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/setimmediate\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz\",\n      \"integrity\": \"sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\",\n      \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.0.2\",\n        \"object-inspect\": \"^1.9.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\",\n      \"dev\": true\n    },\n    \"node_modules/sinon\": {\n      \"version\": \"19.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/sinon/-/sinon-19.0.2.tgz\",\n      \"integrity\": \"sha512-euuToqM+PjO4UgXeLETsfQiuoyPXlqFezr6YZDFwHR3t4qaX0fZUe1MfPMznTL5f8BWrVS89KduLdMUsxFCO6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinonjs/commons\": \"^3.0.1\",\n        \"@sinonjs/fake-timers\": \"^13.0.2\",\n        \"@sinonjs/samsam\": \"^8.0.1\",\n        \"diff\": \"^7.0.0\",\n        \"nise\": \"^6.1.1\",\n        \"supports-color\": \"^7.2.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/sinon\"\n      }\n    },\n    \"node_modules/sinon-chai\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/sinon-chai/-/sinon-chai-4.0.0.tgz\",\n      \"integrity\": \"sha512-cWqO7O2I4XfJDWyWElAQ9D/dtdh5Mo0RHndsfiiYyjWnlPzBJdIvjCVURO4EjyYaC3BjV+ISNXCfTXPXTEIEWA==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"chai\": \"^5.0.0\",\n        \"sinon\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/sinon/node_modules/diff\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-7.0.0.tgz\",\n      \"integrity\": \"sha512-PJWHUb1RFevKCwaFA9RlG5tCd+FO5iRh9A8HEtkmBH2Li03iJriB6m6JIN4rGz3K3JLawI7/veA1xzRKP6ISBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/smart-buffer\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz\",\n      \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 6.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/snake-case\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/snake-case/-/snake-case-3.0.4.tgz\",\n      \"integrity\": \"sha512-LAOh4z89bGQvl9pFfNF8V146i7o7/CqFPbqzYgP+yYzDIDeS9HaNFtXABamRW+AQzEVODcvE79ljJ+8a9YSdMg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dot-case\": \"^3.0.4\",\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/socks\": {\n      \"version\": \"2.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/socks/-/socks-2.8.3.tgz\",\n      \"integrity\": \"sha512-l5x7VUUWbjVFbafGLxPWkYsHIhEvmF85tbIeFZWc8ZPtoMyybuEhL7Jye/ooC4/d48FgOjSJXgsF/AJPYCW8Zw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ip-address\": \"^9.0.5\",\n        \"smart-buffer\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\",\n        \"npm\": \">= 3.0.0\"\n      }\n    },\n    \"node_modules/socks-proxy-agent\": {\n      \"version\": \"8.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-8.0.4.tgz\",\n      \"integrity\": \"sha512-GNAq/eg8Udq2x0eNiFkr9gRg5bA7PXEWagQdeRX4cPSG+X/8V38v637gim9bjFptMk1QWsCTr0ttrJEiXbNnRw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"agent-base\": \"^7.1.1\",\n        \"debug\": \"^4.3.4\",\n        \"socks\": \"^2.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.7.4.tgz\",\n      \"integrity\": \"sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/source-map-support\": {\n      \"version\": \"0.5.21\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz\",\n      \"integrity\": \"sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"source-map\": \"^0.6.0\"\n      }\n    },\n    \"node_modules/source-map-support/node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/spacetrim\": {\n      \"version\": \"0.11.59\",\n      \"resolved\": \"https://registry.npmjs.org/spacetrim/-/spacetrim-0.11.59.tgz\",\n      \"integrity\": \"sha512-lLYsktklSRKprreOm7NXReW8YiX2VBjbgmXYEziOoGf/qsJqAEACaDvoTtUOycwjpaSh+bT8eu0KrJn7UNxiCg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://buymeacoffee.com/hejny\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/hejny/spacetrim/blob/main/README.md#%EF%B8%8F-contributing\"\n        }\n      ],\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/spdx-correct\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.2.0.tgz\",\n      \"integrity\": \"sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-exceptions\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.5.0.tgz\",\n      \"integrity\": \"sha512-PiU42r+xO4UbUS1buo3LPJkjlO7430Xn5SVAhdpzzsPHsjbYVflnnFdATgabnLude+Cqu25p6N+g2lw/PFsa4w==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-expression-parse\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz\",\n      \"integrity\": \"sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-exceptions\": \"^2.1.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-license-ids\": {\n      \"version\": \"3.0.17\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.17.tgz\",\n      \"integrity\": \"sha512-sh8PWc/ftMqAAdFiBu6Fy6JUOYjqDJBJvIhpfDMyHrr0Rbp5liZqd4TjtQ/RgfLjKFZb+LMx5hpml5qOWy0qvg==\",\n      \"dev\": true\n    },\n    \"node_modules/split\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/split/-/split-0.3.3.tgz\",\n      \"integrity\": \"sha512-wD2AeVmxXRBoX44wAycgjVpMhvbwdI2aZjCkvfNcH1YqHQvJVa1duWc73OyVGJUc05fhFaTZeQ/PYsrmyH0JVA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"through\": \"2\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/split-on-first\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/split-on-first/-/split-on-first-1.1.0.tgz\",\n      \"integrity\": \"sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/split2\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/split2/-/split2-4.2.0.tgz\",\n      \"integrity\": \"sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 10.x\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz\",\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\",\n      \"dev\": true,\n      \"license\": \"BSD-3-Clause\"\n    },\n    \"node_modules/stack-utils\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.6.tgz\",\n      \"integrity\": \"sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/stack-utils/node_modules/escape-string-regexp\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz\",\n      \"integrity\": \"sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/start-server-and-test\": {\n      \"version\": \"2.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/start-server-and-test/-/start-server-and-test-2.0.8.tgz\",\n      \"integrity\": \"sha512-v2fV6NV2F7tL1ocwfI4Wpait+IKjRbT5l3ZZ+ZikXdMLmxYsS8ynGAsCQAUVXkVyGyS+UibsRnvgHkMvJIvCsw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"arg\": \"^5.0.2\",\n        \"bluebird\": \"3.7.2\",\n        \"check-more-types\": \"2.24.0\",\n        \"debug\": \"4.3.7\",\n        \"execa\": \"5.1.1\",\n        \"lazy-ass\": \"1.6.0\",\n        \"ps-tree\": \"1.2.0\",\n        \"wait-on\": \"8.0.1\"\n      },\n      \"bin\": {\n        \"server-test\": \"src/bin/start.js\",\n        \"start-server-and-test\": \"src/bin/start.js\",\n        \"start-test\": \"src/bin/start.js\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/stop-iteration-iterator\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.0.0.tgz\",\n      \"integrity\": \"sha512-iCGQj+0l0HOdZ2AEeBADlsRC+vsnDsZsbdSiH1yNSjcfKM7fdpCMfqAL/dwF5BLiw/XhRft/Wax6zQbhq2BcjQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"internal-slot\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/stream-buffers\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/stream-buffers/-/stream-buffers-3.0.2.tgz\",\n      \"integrity\": \"sha512-DQi1h8VEBA/lURbSwFtEHnSTb9s2/pwLEaFuNhXwy1Dx3Sa0lOuYT2yNUr4/j2fs8oCAMANtrZ5OrPZtyVs3MQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      }\n    },\n    \"node_modules/stream-combiner\": {\n      \"version\": \"0.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz\",\n      \"integrity\": \"sha512-rT00SPnTVyRsaSz5zgSPma/aHSOic5U1prhYdRy5HS2kTZviFpmDgzilbtsJsxiroqACmayynDN/9VzIbX5DOw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"duplexer\": \"~0.1.1\"\n      }\n    },\n    \"node_modules/streamifier\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/streamifier/-/streamifier-0.1.1.tgz\",\n      \"integrity\": \"sha512-zDgl+muIlWzXNsXeyUfOk9dChMjlpkq0DRsxujtYPgyJ676yQ8jEm6zzaaWHFDg5BNcLuif0eD2MTyJdZqXpdg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/streamx\": {\n      \"version\": \"2.20.1\",\n      \"resolved\": \"https://registry.npmjs.org/streamx/-/streamx-2.20.1.tgz\",\n      \"integrity\": \"sha512-uTa0mU6WUC65iUvzKH4X9hEdvSW7rbPxPtwfWiLMSj3qTdQbAiUboZTxauKfpFuGIGa1C2BYijZ7wgdUXICJhA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fast-fifo\": \"^1.3.2\",\n        \"queue-tick\": \"^1.0.1\",\n        \"text-decoder\": \"^1.1.0\"\n      },\n      \"optionalDependencies\": {\n        \"bare-events\": \"^2.2.0\"\n      }\n    },\n    \"node_modules/strict-uri-encode\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz\",\n      \"integrity\": \"sha512-QwiXZgpRcKkhTj2Scnn++4PKtWsH0kpzZ62L2R6c/LUVYv7hVnZqcg2+sMuT6R7Jusu1vviK/MFsu6kNJfWlEQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"node_modules/string_decoder/node_modules/safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"node_modules/string-indexes\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/string-indexes/-/string-indexes-2.0.0.tgz\",\n      \"integrity\": \"sha512-ATTNLgMvr27CtHUsOslQrMMR9+T3py6hhwKJtJPhu0YoRsiG7ybim70Kvdw/qk3Ill0sp0jzlxS5ILdBA3LW6w==\",\n      \"dev\": true\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string.prototype.trim\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.8.tgz\",\n      \"integrity\": \"sha512-lfjY4HcixfQXOfaqCvcBuOIapyaroTXhbkfJN3gcB1OtyupngWK4sEET9Knd0cXd28kTUqu/kHoV4HKSJdnjiQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.7.tgz\",\n      \"integrity\": \"sha512-Ni79DqeB72ZFq1uH/L6zJ+DKZTkOtPIHovb3YZHQViE+HDouuU4mBrLOLDn5Dde3RF8qw5qVETEjhu9locMLvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.7.tgz\",\n      \"integrity\": \"sha512-NGhtDFu3jCEm7B4Fy0DpLewdJQOZcQ0rGbwQ/+stjnrp2i+rlKeCvos9hOIeCmqwratM47OBxY7uFZzjxHXmrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.2.0\",\n        \"es-abstract\": \"^1.22.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz\",\n      \"integrity\": \"sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/strip-final-newline\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz\",\n      \"integrity\": \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/strnum\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/strnum/-/strnum-1.0.5.tgz\",\n      \"integrity\": \"sha512-J8bbNyKKXl5qYcR36TIO8W3mVGVHrmmxsd5PAItGkmyzwJvybiw2IVq5nqd0i4LSNSkB/sx9VHllbfFdr9k1JA==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/symbol-tree\": {\n      \"version\": \"3.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz\",\n      \"integrity\": \"sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==\",\n      \"dev\": true\n    },\n    \"node_modules/tar-fs\": {\n      \"version\": \"3.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/tar-fs/-/tar-fs-3.0.6.tgz\",\n      \"integrity\": \"sha512-iokBDQQkUyeXhgPYaZxmczGPhnhXZ0CmrqI+MOb/WFGS9DW5wnfrLgtjUJBvz50vQ3qfRwJ62QVoCFu8mPVu5w==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"pump\": \"^3.0.0\",\n        \"tar-stream\": \"^3.1.5\"\n      },\n      \"optionalDependencies\": {\n        \"bare-fs\": \"^2.1.1\",\n        \"bare-path\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/tar-fs/node_modules/tar-stream\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-3.1.7.tgz\",\n      \"integrity\": \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"b4a\": \"^1.6.4\",\n        \"fast-fifo\": \"^1.2.0\",\n        \"streamx\": \"^2.15.0\"\n      }\n    },\n    \"node_modules/tar-stream\": {\n      \"version\": \"1.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/tar-stream/-/tar-stream-1.6.2.tgz\",\n      \"integrity\": \"sha512-rzS0heiNf8Xn7/mpdSVVSMAWAoy9bfb1WOTYC78Z0UQKeKa/CWS8FOq0lKGNa8DWKAn9gxjCvMLYc5PGXYlK2A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bl\": \"^1.0.0\",\n        \"buffer-alloc\": \"^1.2.0\",\n        \"end-of-stream\": \"^1.0.0\",\n        \"fs-constants\": \"^1.0.0\",\n        \"readable-stream\": \"^2.3.0\",\n        \"to-buffer\": \"^1.1.1\",\n        \"xtend\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/terser\": {\n      \"version\": \"5.36.0\",\n      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.36.0.tgz\",\n      \"integrity\": \"sha512-IYV9eNMuFAV4THUspIRXkLakHnV6XO7FEdtKjf/mDyrnqUg9LnlOn6/RwRvM9SZjR4GUq8Nk8zj67FzVARr74w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/source-map\": \"^0.3.3\",\n        \"acorn\": \"^8.8.2\",\n        \"commander\": \"^2.20.0\",\n        \"source-map-support\": \"~0.5.20\"\n      },\n      \"bin\": {\n        \"terser\": \"bin/terser\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/test-exclude\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-7.0.1.tgz\",\n      \"integrity\": \"sha512-pFYqmTw68LXVjeWJMST4+borgQP2AyMNbg1BpZh9LbyhUeNkeaPF9gzfPGUAnSMV3qPYdWUwDIjjCLiSDOl7vg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"glob\": \"^10.4.1\",\n        \"minimatch\": \"^9.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/test-exclude/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/test-exclude/node_modules/glob\": {\n      \"version\": \"10.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.1.tgz\",\n      \"integrity\": \"sha512-2jelhlq3E4ho74ZyVLN03oKdAZVUa6UDZzFLVH1H7dnoax+y9qyaq8zBkfDIggjniU19z0wU18y16jMB2eyVIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^3.1.2\",\n        \"minimatch\": \"^9.0.4\",\n        \"minipass\": \"^7.1.2\",\n        \"path-scurry\": \"^1.11.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/test-exclude/node_modules/minimatch\": {\n      \"version\": \"9.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.4.tgz\",\n      \"integrity\": \"sha512-KqWh+VchfxcMNRAJjj2tnsSJdNbHsVgnkBhTNrW7AjVo6OvLtxw8zfT9oLw1JSohlFzJ8jCoTgaoXvJ+kHt6fw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/text-decoder\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/text-decoder/-/text-decoder-1.2.1.tgz\",\n      \"integrity\": \"sha512-x9v3H/lTKIJKQQe7RPQkLfKAnc9lUTkWDypIQgTzPJAq+5/GCDHonmshfvlsNSj58yyshbIJJDLmU15qNERrXQ==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\"\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n      \"dev\": true\n    },\n    \"node_modules/through\": {\n      \"version\": \"2.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n      \"integrity\": \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\",\n      \"dev\": true\n    },\n    \"node_modules/tiny-invariant\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz\",\n      \"integrity\": \"sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==\",\n      \"dev\": true\n    },\n    \"node_modules/tinyrainbow\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/tinyrainbow/-/tinyrainbow-1.2.0.tgz\",\n      \"integrity\": \"sha512-weEDEq7Z5eTHPDh4xjX789+fHfF+P8boiFB+0vbWzpbnbsEr/GRaohi/uMKxg8RZMXnl1ItAi/IUHWMsjDV7kQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/tldts\": {\n      \"version\": \"6.1.50\",\n      \"resolved\": \"https://registry.npmjs.org/tldts/-/tldts-6.1.50.tgz\",\n      \"integrity\": \"sha512-q9GOap6q3KCsLMdOjXhWU5jVZ8/1dIib898JBRLsN+tBhENpBDcAVQbE0epADOjw11FhQQy9AcbqKGBQPUfTQA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tldts-core\": \"^6.1.50\"\n      },\n      \"bin\": {\n        \"tldts\": \"bin/cli.js\"\n      }\n    },\n    \"node_modules/tldts-core\": {\n      \"version\": \"6.1.50\",\n      \"resolved\": \"https://registry.npmjs.org/tldts-core/-/tldts-core-6.1.50.tgz\",\n      \"integrity\": \"sha512-na2EcZqmdA2iV9zHV7OHQDxxdciEpxrjbkp+aHmZgnZKHzoElLajP59np5/4+sare9fQBfixgvXKx8ev1d7ytw==\",\n      \"dev\": true\n    },\n    \"node_modules/tmp\": {\n      \"version\": \"0.0.33\",\n      \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz\",\n      \"integrity\": \"sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"os-tmpdir\": \"~1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6.0\"\n      }\n    },\n    \"node_modules/to-buffer\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-buffer/-/to-buffer-1.1.1.tgz\",\n      \"integrity\": \"sha512-lx9B5iv7msuFYE3dytT+KE5tap+rNYw+K4jVkb9R/asAb+pbBSM17jtunHplhBe6RRJdZx3Pn2Jph24O32mOVg==\",\n      \"dev\": true\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/tough-cookie\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-5.0.0.tgz\",\n      \"integrity\": \"sha512-FRKsF7cz96xIIeMZ82ehjC3xW2E+O2+v11udrDYewUbszngYhsGa8z6YUMMzO9QJZzzyd0nGGXnML/TReX6W8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tldts\": \"^6.1.32\"\n      },\n      \"engines\": {\n        \"node\": \">=16\"\n      }\n    },\n    \"node_modules/tsconfig-paths\": {\n      \"version\": \"3.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz\",\n      \"integrity\": \"sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/json5\": \"^0.0.29\",\n        \"json5\": \"^1.0.2\",\n        \"minimist\": \"^1.2.6\",\n        \"strip-bom\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/tsconfig-paths/node_modules/json5\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.2.tgz\",\n      \"integrity\": \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimist\": \"^1.2.0\"\n      },\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"2.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.6.2.tgz\",\n      \"integrity\": \"sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==\",\n      \"dev\": true\n    },\n    \"node_modules/tsx\": {\n      \"version\": \"4.17.0\",\n      \"resolved\": \"https://registry.npmjs.org/tsx/-/tsx-4.17.0.tgz\",\n      \"integrity\": \"sha512-eN4mnDA5UMKDt4YZixo9tBioibaMBpoxBkD+rIPAjVmYERSG0/dWEY1CEFuV89CgASlKL499q8AhmkMnnjtOJg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esbuild\": \"~0.23.0\",\n        \"get-tsconfig\": \"^4.7.5\"\n      },\n      \"bin\": {\n        \"tsx\": \"dist/cli.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">=18.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.3\"\n      }\n    },\n    \"node_modules/tunnel\": {\n      \"version\": \"0.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/tunnel/-/tunnel-0.0.6.tgz\",\n      \"integrity\": \"sha512-1h/Lnq9yajKY2PEbBadPXj3VxsDDu844OnaAo52UVmIzIvwwtBPIuNvkjuzBlTWpfJyUbG3ez0KSBibQkj4ojg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6.11 <=0.7.0 || >=0.7.3\"\n      }\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/type-detect\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz\",\n      \"integrity\": \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typed-array-buffer\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.0.tgz\",\n      \"integrity\": \"sha512-Y8KTSIglk9OZEr8zywiIHG/kmQ7KWyjseXs1CbSo8vC42w7hg2HgYTxSWwP0+is7bWDc1H+Fo026CpHFwm8tkw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.1\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/typed-array-byte-length\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.0.tgz\",\n      \"integrity\": \"sha512-Or/+kvLxNpeQ9DtSydonMxCx+9ZXOswtwJn17SNLvhptaXYDJvkFFP5zbfU/uLmvnBJlI4yrnXRxpdWH/M5tNA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"has-proto\": \"^1.0.1\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-byte-offset\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.0.tgz\",\n      \"integrity\": \"sha512-RD97prjEt9EL8YgAgpOkf3O4IF9lhJFr9g0htQkm0rchFp/Vx7LW5Q8fSXXub7BXAODyUQohRMyOc3faCPd0hg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"has-proto\": \"^1.0.1\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typed-array-length\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.4.tgz\",\n      \"integrity\": \"sha512-KjZypGq+I/H7HI5HlOoGHkWUUGq+Q0TPhQurLbyrVrvnKTBgzLhIJ7j6J/XTQOi0d1RjyZ0wdas8bKs2p0x3Ng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"is-typed-array\": \"^1.1.9\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.6.3.tgz\",\n      \"integrity\": \"sha512-hjcS1mhfuyi4WW8IWtjP7brDrG2cuDZukyrYrSauoXGNgx0S7zceP07adYkJycEr56BOUTNPzbInooiN3fn1qw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-bigints\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.3\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/unbzip2-stream\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz\",\n      \"integrity\": \"sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer\": \"^5.2.1\",\n        \"through\": \"^2.3.8\"\n      }\n    },\n    \"node_modules/undici\": {\n      \"version\": \"6.20.1\",\n      \"resolved\": \"https://registry.npmjs.org/undici/-/undici-6.20.1.tgz\",\n      \"integrity\": \"sha512-AjQF1QsmqfJys+LXfGTNum+qw4S88CojRInG/6t31W/1fk6G59s92bnAvGz5Cmur+kQv2SURXEvvudLmbrE8QA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18.17\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"5.26.5\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz\",\n      \"integrity\": \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\",\n      \"dev\": true\n    },\n    \"node_modules/universalify\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz\",\n      \"integrity\": \"sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      }\n    },\n    \"node_modules/update-check\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/update-check/-/update-check-1.5.4.tgz\",\n      \"integrity\": \"sha512-5YHsflzHP4t1G+8WGPlvKbJEbAJGCgw+Em+dGR1KmBUbr1J36SJBqlHLjR7oob7sco5hWHGQVcr9B2poIVDDTQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"registry-auth-token\": \"3.3.2\",\n        \"registry-url\": \"3.1.0\"\n      }\n    },\n    \"node_modules/upper-case\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/upper-case/-/upper-case-2.0.2.tgz\",\n      \"integrity\": \"sha512-KgdgDGJt2TpuwBUIjgG6lzw2GWFRCW9Qkfkiv0DxqHHLYJHmtmdUIKcZd8rHgFSjopVTlw6ggzCm1b8MFQwikg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/upper-case-first\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/upper-case-first/-/upper-case-first-2.0.2.tgz\",\n      \"integrity\": \"sha512-514ppYHBaKwfJRK/pNC6c/OxfGa0obSnAl106u97Ed0I625Nin96KAjttZF6ZL3e1XLtphxnqrOi9iWgm+u+bg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.0.3\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/urlpattern-polyfill\": {\n      \"version\": \"10.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/urlpattern-polyfill/-/urlpattern-polyfill-10.0.0.tgz\",\n      \"integrity\": \"sha512-H/A06tKD7sS1O1X2SshBVeA5FLycRpjqiBeqGKmBwBDBy28EnRjORxTNe269KSSr5un5qyWi1iL61wLxpd+ZOg==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/userhome\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/userhome/-/userhome-1.0.1.tgz\",\n      \"integrity\": \"sha512-5cnLm4gseXjAclKowC4IjByaGsjtAoV6PrOQOljplNB54ReUYJP8HdAFq2muHinSDAh09PPX/uXDPfdxRHvuSA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\n      \"dev\": true\n    },\n    \"node_modules/v8-to-istanbul\": {\n      \"version\": \"9.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-9.2.0.tgz\",\n      \"integrity\": \"sha512-/EH/sDgxU2eGxajKdwLCDmQ4FWq+kpi3uCmBGpw1xJtnAxEjlD8j8PEiGWpCIMIs3ciNAgH0d3TTJiUkYzyZjA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.12\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.1\",\n        \"convert-source-map\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.12.0\"\n      }\n    },\n    \"node_modules/v8-to-istanbul/node_modules/convert-source-map\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n      \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/validate-npm-package-license\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz\",\n      \"integrity\": \"sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/w3c-xmlserializer\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-5.0.0.tgz\",\n      \"integrity\": \"sha512-o8qghlI8NZHU1lLPrpi2+Uq7abh4GGPpYANlalzWxyWteJOCsr/P+oPBA49TOLu5FTZO4d3F9MnWJfiMo4BkmA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"xml-name-validator\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/wait-on\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/wait-on/-/wait-on-8.0.1.tgz\",\n      \"integrity\": \"sha512-1wWQOyR2LVVtaqrcIL2+OM+x7bkpmzVROa0Nf6FryXkS+er5Sa1kzFGjzZRqLnHa3n1rACFLeTwUqE1ETL9Mig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"axios\": \"^1.7.7\",\n        \"joi\": \"^17.13.3\",\n        \"lodash\": \"^4.17.21\",\n        \"minimist\": \"^1.2.8\",\n        \"rxjs\": \"^7.8.1\"\n      },\n      \"bin\": {\n        \"wait-on\": \"bin/wait-on\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/wait-port\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wait-port/-/wait-port-1.1.0.tgz\",\n      \"integrity\": \"sha512-3e04qkoN3LxTMLakdqeWth8nih8usyg+sf1Bgdf9wwUkp05iuK1eSY/QpLvscT/+F/gA89+LpUmmgBtesbqI2Q==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chalk\": \"^4.1.2\",\n        \"commander\": \"^9.3.0\",\n        \"debug\": \"^4.3.4\"\n      },\n      \"bin\": {\n        \"wait-port\": \"bin/wait-port.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/wait-port/node_modules/commander\": {\n      \"version\": \"9.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-9.5.0.tgz\",\n      \"integrity\": \"sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.20.0 || >=14\"\n      }\n    },\n    \"node_modules/wcwidth\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz\",\n      \"integrity\": \"sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"defaults\": \"^1.0.3\"\n      }\n    },\n    \"node_modules/web-streams-polyfill\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.3.3.tgz\",\n      \"integrity\": \"sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/webdriver\": {\n      \"version\": \"9.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/webdriver/-/webdriver-9.2.8.tgz\",\n      \"integrity\": \"sha512-40NtUC1zME9tPHNfZv6ETSE3+aE75qZuKjbVAA0gj02AkO1Nl3yJmf5RLdaLLfIQ2WlrbRP1g8KXlkiiVCmakg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^20.1.0\",\n        \"@types/ws\": \"^8.5.3\",\n        \"@wdio/config\": \"9.2.8\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/protocols\": \"9.2.2\",\n        \"@wdio/types\": \"9.2.2\",\n        \"@wdio/utils\": \"9.2.8\",\n        \"deepmerge-ts\": \"^7.0.3\",\n        \"ws\": \"^8.8.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      }\n    },\n    \"node_modules/webdriverio\": {\n      \"version\": \"9.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/webdriverio/-/webdriverio-9.2.11.tgz\",\n      \"integrity\": \"sha512-JZJiFUy7Rv5C2PmCIN2GjPxp6qUrUhvlhshbrczkySLUmv1NW1EGWOwpJiJ9AFQC94ydDq80EdFaRdyNZSs6DQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@types/node\": \"^20.11.30\",\n        \"@types/sinonjs__fake-timers\": \"^8.1.5\",\n        \"@wdio/config\": \"9.2.8\",\n        \"@wdio/logger\": \"9.1.3\",\n        \"@wdio/protocols\": \"9.2.2\",\n        \"@wdio/repl\": \"9.0.8\",\n        \"@wdio/types\": \"9.2.2\",\n        \"@wdio/utils\": \"9.2.8\",\n        \"archiver\": \"^7.0.1\",\n        \"aria-query\": \"^5.3.0\",\n        \"cheerio\": \"^1.0.0-rc.12\",\n        \"css-shorthand-properties\": \"^1.1.1\",\n        \"css-value\": \"^0.0.1\",\n        \"grapheme-splitter\": \"^1.0.4\",\n        \"htmlfy\": \"^0.3.0\",\n        \"import-meta-resolve\": \"^4.0.0\",\n        \"is-plain-obj\": \"^4.1.0\",\n        \"jszip\": \"^3.10.1\",\n        \"lodash.clonedeep\": \"^4.5.0\",\n        \"lodash.zip\": \"^4.2.0\",\n        \"minimatch\": \"^9.0.3\",\n        \"query-selector-shadow-dom\": \"^1.0.1\",\n        \"resq\": \"^1.11.0\",\n        \"rgb2hex\": \"0.2.5\",\n        \"serialize-error\": \"^11.0.3\",\n        \"urlpattern-polyfill\": \"^10.0.0\",\n        \"webdriver\": \"9.2.8\"\n      },\n      \"engines\": {\n        \"node\": \">=18.20.0\"\n      },\n      \"peerDependencies\": {\n        \"puppeteer-core\": \"^22.3.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"puppeteer-core\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/webdriverio/node_modules/aria-query\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz\",\n      \"integrity\": \"sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/webdriverio/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/webdriverio/node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/webidl-conversions\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz\",\n      \"integrity\": \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/whatwg-encoding\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-3.1.1.tgz\",\n      \"integrity\": \"sha512-6qN4hJdMwfYBtE3YBTTHhoeuUrDBPZmbQaxWAqSALV/MeEnR5z1xd8UKud2RAkFoPkmB+hli1TZSnyi84xz1vQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"iconv-lite\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/whatwg-mimetype\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-4.0.0.tgz\",\n      \"integrity\": \"sha512-QaKxh0eNIi2mE9p2vEdzfagOKHCcj1pJ56EEHGQOVxp8r9/iszLUUV7v89x9O1p/T+NlTM5W7jW6+cz4Fq1YVg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-collection\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/which-collection/-/which-collection-1.0.1.tgz\",\n      \"integrity\": \"sha512-W8xeTUwaln8i3K/cY1nGXzdnVZlidBcagyNFtBdD5kxnb4TvGKR7FfSIS3mYpwWS1QUCutfKz8IY8RjftB0+1A==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"is-map\": \"^2.0.1\",\n        \"is-set\": \"^2.0.1\",\n        \"is-weakmap\": \"^2.0.1\",\n        \"is-weakset\": \"^2.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.13.tgz\",\n      \"integrity\": \"sha512-P5Nra0qjSncduVPEAr7xhoF5guty49ArDTwzJ/yNuPIbZppyRxFQsRCWrocxIY+CnMVG+qfbU2FmDKyvSGClow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.4\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/widest-line\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/widest-line/-/widest-line-4.0.1.tgz\",\n      \"integrity\": \"sha512-o0cyEG0e8GPzT4iGHphIOh0cJOV8fivsXxddQasHPHfoZf1ZexrfeA21w2NaEN1RHE+fXlfISmOE8R9N3u3Qig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/widest-line/node_modules/ansi-regex\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.0.1.tgz\",\n      \"integrity\": \"sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/widest-line/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/widest-line/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/widest-line/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/workerpool\": {\n      \"version\": \"6.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/workerpool/-/workerpool-6.5.1.tgz\",\n      \"integrity\": \"sha512-Fs4dNYcsdpYSAfVxhnl1L5zTksjvOJxtC5hzMNl+1t9B8hTJTdKDyZ5ju7ztgPy+ft9tBFXoOlDNiOT9WUXZlA==\",\n      \"dev\": true\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/ws\": {\n      \"version\": \"8.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.18.0.tgz\",\n      \"integrity\": \"sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      },\n      \"peerDependencies\": {\n        \"bufferutil\": \"^4.0.1\",\n        \"utf-8-validate\": \">=5.0.2\"\n      },\n      \"peerDependenciesMeta\": {\n        \"bufferutil\": {\n          \"optional\": true\n        },\n        \"utf-8-validate\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/xml-name-validator\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-5.0.0.tgz\",\n      \"integrity\": \"sha512-EvGK8EJ3DhaHfbRlETOWAS5pO9MZITeauHKJyb8wyajUfQUenkIg2MvLDTZ4T/TgIcm3HU0TFBgWWboAZ30UHg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/xmlchars\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz\",\n      \"integrity\": \"sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==\",\n      \"dev\": true\n    },\n    \"node_modules/xtend\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\n      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.4\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n      \"dev\": true\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"16.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"20.2.9\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz\",\n      \"integrity\": \"sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-unparser\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-2.0.0.tgz\",\n      \"integrity\": \"sha512-7pRTIA9Qc1caZ0bZ6RYRGbHJthJWuakf+WmHK0rVeLkNrrGhfoabBNdue6kdINI6r4if7ocq9aD/n7xwKOdzOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase\": \"^6.0.0\",\n        \"decamelize\": \"^4.0.0\",\n        \"flat\": \"^5.0.2\",\n        \"is-plain-obj\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-unparser/node_modules/is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz\",\n      \"integrity\": \"sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/yauzl\": {\n      \"version\": \"2.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz\",\n      \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\",\n        \"fd-slicer\": \"~1.1.0\"\n      }\n    },\n    \"node_modules/yazl\": {\n      \"version\": \"2.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/yazl/-/yazl-2.5.1.tgz\",\n      \"integrity\": \"sha512-phENi2PLiHnHb6QBVot+dJnaAZ0xosj7p3fWl+znIjBDlnMI2PsZCJZ306BPTFOaHf5qdDEI8x5qFrSOBN5vrw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-crc32\": \"~0.2.3\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/yoctocolors\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yoctocolors/-/yoctocolors-2.1.1.tgz\",\n      \"integrity\": \"sha512-GQHQqAopRhwU8Kt1DDM8NjibDXHC8eoh1erhGAJPEyveY9qqVeXvVikNKrDz69sHowPMorbPUrH/mx8c50eiBQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/yoctocolors-cjs\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/yoctocolors-cjs/-/yoctocolors-cjs-2.1.2.tgz\",\n      \"integrity\": \"sha512-cYVsTjKl8b+FrnidjibDWskAv7UKOfcwaVZdp/it9n1s9fU3IkgDbhdIRKCW4JDsAlECJY0ytoVPT3sK6kideA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/zip-stream\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/zip-stream/-/zip-stream-6.0.1.tgz\",\n      \"integrity\": \"sha512-zK7YHHz4ZXpW89AHXUPbQVGKI7uvkd3hzusTdotCg1UxyaVtg0zFJSTfW/Dq5f7OBBVnq6cZIaC8Ti4hb6dtCA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"archiver-utils\": \"^5.0.0\",\n        \"compress-commons\": \"^6.0.2\",\n        \"readable-stream\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      }\n    },\n    \"node_modules/zip-stream/node_modules/buffer\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz\",\n      \"integrity\": \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/zip-stream/node_modules/readable-stream\": {\n      \"version\": \"4.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-4.5.2.tgz\",\n      \"integrity\": \"sha512-yjavECdqeZ3GLXNgRXgeQEdz9fvDDkNKyHnbHRFtOr7/LcfgBcmct7t/ET+HaCTqfh06OzoAxrkN/IfjJBVe+g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"abort-controller\": \"^3.0.0\",\n        \"buffer\": \"^6.0.3\",\n        \"events\": \"^3.3.0\",\n        \"process\": \"^0.11.10\",\n        \"string_decoder\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/zip-stream/node_modules/string_decoder\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz\",\n      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"~5.2.0\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.4306640625,
          "content": "{\n  \"name\": \"riot\",\n  \"version\": \"9.4.4\",\n  \"description\": \"Simple and elegant component-based UI library\",\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"repository\": \"riot/riot\",\n  \"homepage\": \"https://riot.js.org/\",\n  \"author\": \"Gianluca Guarini <gianluca.guarini@gmail.com> (https://gianlucaguarini.com)\",\n  \"keywords\": [\n    \"custom tags\",\n    \"custom elements\",\n    \"web components\",\n    \"virtual dom\",\n    \"shadow dom\",\n    \"minimal\",\n    \"minimalist\",\n    \"client-side\",\n    \"framework\",\n    \"declarative\",\n    \"templating\",\n    \"template\",\n    \"data binding\",\n    \"mvc\",\n    \"model\",\n    \"view\",\n    \"controller\",\n    \"riotjs\",\n    \"riot.js\"\n  ],\n  \"main\": \"riot.js\",\n  \"module\": \"esm/riot.js\",\n  \"type\": \"module\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./riot.d.ts\",\n      \"import\": \"./esm/riot.js\",\n      \"require\": \"./cjs/riot.cjs\",\n      \"browser\": \"./riot.js\"\n    },\n    \"./riot+compiler\": {\n      \"types\": \"./riot.d.ts\",\n      \"import\": \"./esm/riot_compiler.js\",\n      \"require\": \"./cjs/riot+compiler.cjs\",\n      \"browser\": \"./riot+compiler.js\"\n    }\n  },\n  \"files\": [\n    \"esm\",\n    \"cjs\",\n    \"riot.js\",\n    \"riot.d.ts\",\n    \"riot.min.js\",\n    \"riot+compiler.js\",\n    \"riot+compiler.min.js\"\n  ],\n  \"scripts\": {\n    \"test\": \"make unit-test\"\n  },\n  \"jsnext:main\": \"esm/riot.js\",\n  \"sideEffects\": false,\n  \"types\": \"./riot.d.ts\",\n  \"dependencies\": {\n    \"@riotjs/dom-bindings\": \"^9.2.5\"\n  },\n  \"devDependencies\": {\n    \"@riotjs/compiler\": \"^9.3.0\",\n    \"@riotjs/prettier-config\": \"^1.1.0\",\n    \"@riotjs/register\": \"^9.1.0\",\n    \"@riotjs/util\": \"^2.4.0\",\n    \"@rollup/plugin-commonjs\": \"^28.0.1\",\n    \"@rollup/plugin-node-resolve\": \"^15.3.0\",\n    \"@testing-library/user-event\": \"^14.5.2\",\n    \"@wdio/cli\": \"^9.2.11\",\n    \"@wdio/local-runner\": \"^9.2.11\",\n    \"@wdio/mocha-framework\": \"^9.2.8\",\n    \"@wdio/sauce-service\": \"^9.2.11\",\n    \"@wdio/spec-reporter\": \"^9.2.8\",\n    \"bianco.attr\": \"^1.1.1\",\n    \"bianco.query\": \"^1.1.4\",\n    \"c8\": \"^10.1.2\",\n    \"chai\": \"^5.1.2\",\n    \"cumpa\": \"^2.0.1\",\n    \"curri\": \"^2.0.3\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-config-riot\": \"^4.1.2\",\n    \"eslint-plugin-import\": \"^2.29.1\",\n    \"jsdom\": \"^25.0.1\",\n    \"jsdom-global\": \"^3.0.2\",\n    \"mocha\": \"^10.8.2\",\n    \"prettier\": \"^3.3.3\",\n    \"rollup\": \"^4.24.4\",\n    \"rollup-plugin-riot\": \"^9.0.2\",\n    \"serve\": \"^14.2.4\",\n    \"sinon\": \"^19.0.2\",\n    \"sinon-chai\": \"^4.0.0\",\n    \"start-server-and-test\": \"^2.0.8\",\n    \"terser\": \"^5.36.0\",\n    \"typescript\": \"^5.6.3\"\n  }\n}\n"
        },
        {
          "name": "riot+compiler.js",
          "type": "blob",
          "size": 1017.1298828125,
          "content": "/* Riot v9.4.4, @license MIT */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.riot = {}));\n})(this, (function (exports) { 'use strict';\n\n  /**\n   * Quick type checking\n   * @param   {*} element - anything\n   * @param   {string} type - type definition\n   * @returns {boolean} true if the type corresponds\n   */\n  function checkType(element, type) {\n    return typeof element === type\n  }\n\n  /**\n   * Check if an element is part of an svg\n   * @param   {HTMLElement}  el - element to check\n   * @returns {boolean} true if we are in an svg context\n   */\n  function isSvg(el) {\n    const owner = el.ownerSVGElement;\n\n    return !!owner || owner === null\n  }\n\n  /**\n   * Check if an element is a template tag\n   * @param   {HTMLElement}  el - element to check\n   * @returns {boolean} true if it's a <template>\n   */\n  function isTemplate(el) {\n    return el.tagName.toLowerCase() === 'template'\n  }\n\n  /**\n   * Check that will be passed if its argument is a function\n   * @param   {*} value - value to check\n   * @returns {boolean} - true if the value is a function\n   */\n  function isFunction(value) {\n    return checkType(value, 'function')\n  }\n\n  /**\n   * Check if a value is a Boolean\n   * @param   {*}  value - anything\n   * @returns {boolean} true only for the value is a boolean\n   */\n  function isBoolean(value) {\n    return checkType(value, 'boolean')\n  }\n\n  /**\n   * Check if a value is an Object\n   * @param   {*}  value - anything\n   * @returns {boolean} true only for the value is an object\n   */\n  function isObject(value) {\n    return !isNil(value) && value.constructor === Object\n  }\n\n  /**\n   * Check if a value is null or undefined\n   * @param   {*}  value - anything\n   * @returns {boolean} true only for the 'undefined' and 'null' types\n   */\n  function isNil(value) {\n    return value === null || value === undefined\n  }\n\n  /**\n   * Detect node js environment\n   * @returns {boolean} true if the runtime is node\n   */\n  function isNode() {\n    return typeof globalThis.process !== 'undefined'\n  }\n\n  const ATTRIBUTE = 0;\n  const EVENT = 1;\n  const TEXT$1 = 2;\n  const VALUE = 3;\n\n  const expressionTypes = {\n    ATTRIBUTE,\n    EVENT,\n    TEXT: TEXT$1,\n    VALUE,\n  };\n\n  /**\n   * Convert a string from camel case to dash-case\n   * @param   {string} string - probably a component tag name\n   * @returns {string} component name normalized\n   */\n  function camelToDashCase(string) {\n    return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n  }\n\n  /**\n   * Convert a string containing dashes to camel case\n   * @param   {string} string - input string\n   * @returns {string} my-string -> myString\n   */\n  function dashToCamelCase(string) {\n    return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n  }\n\n  /**\n   * Throw an error with a descriptive message\n   * @param   { string } message - error message\n   * @param   { string } cause - optional error cause object\n   * @returns { undefined } hoppla... at this point the program should stop working\n   */\n  function panic$1(message, cause) {\n    throw new Error(message, { cause })\n  }\n  /**\n   * Returns the memoized (cached) function.\n   * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n   * @param {Function} fn - function to memoize\n   * @returns {Function} memoize function\n   */\n  function memoize$1(fn) {\n    const cache = new Map();\n    const cached = (val) => {\n      return cache.has(val)\n        ? cache.get(val)\n        : cache.set(val, fn.call(this, val)) && cache.get(val)\n    };\n    cached.cache = cache;\n    return cached\n  }\n\n  /**\n   * Evaluate a list of attribute expressions\n   * @param   {Array} attributes - attribute expressions generated by the riot compiler\n   * @returns {Object} key value pairs with the result of the computation\n   */\n  function evaluateAttributeExpressions(attributes) {\n    return attributes.reduce((acc, attribute) => {\n      const { value, type } = attribute;\n\n      switch (true) {\n        // spread attribute\n        case !attribute.name && type === ATTRIBUTE:\n          return {\n            ...acc,\n            ...value,\n          }\n        // value attribute\n        case type === VALUE:\n          acc.value = attribute.value;\n          break\n        // normal attributes\n        default:\n          acc[dashToCamelCase(attribute.name)] = attribute.value;\n      }\n\n      return acc\n    }, {})\n  }\n\n  /* Riot Compiler, @license MIT */\n\n  const TAG_LOGIC_PROPERTY = 'exports';\n  const TAG_CSS_PROPERTY = 'css';\n  const TAG_TEMPLATE_PROPERTY = 'template';\n  const TAG_NAME_PROPERTY = 'name';\n  const RIOT_MODULE_ID = 'riot';\n  const RIOT_INTERFACE_WRAPPER_NAME = 'RiotComponentWrapper';\n  const RIOT_TAG_INTERFACE_NAME = 'RiotComponent';\n\n  const JAVASCRIPT_OUTPUT_NAME = 'javascript';\n  const CSS_OUTPUT_NAME = 'css';\n  const TEMPLATE_OUTPUT_NAME = 'template';\n\n  // Tag names\n  const JAVASCRIPT_TAG = 'script';\n  const STYLE_TAG = 'style';\n  const TEXTAREA_TAG = 'textarea';\n\n  // Boolean attributes\n  const IS_RAW = 'isRaw';\n  const IS_SELF_CLOSING = 'isSelfClosing';\n  const IS_VOID = 'isVoid';\n  const IS_BOOLEAN = 'isBoolean';\n  const IS_CUSTOM = 'isCustom';\n  const IS_SPREAD = 'isSpread';\n\n  var c = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CSS_OUTPUT_NAME: CSS_OUTPUT_NAME,\n    IS_BOOLEAN: IS_BOOLEAN,\n    IS_CUSTOM: IS_CUSTOM,\n    IS_RAW: IS_RAW,\n    IS_SELF_CLOSING: IS_SELF_CLOSING,\n    IS_SPREAD: IS_SPREAD,\n    IS_VOID: IS_VOID,\n    JAVASCRIPT_OUTPUT_NAME: JAVASCRIPT_OUTPUT_NAME,\n    JAVASCRIPT_TAG: JAVASCRIPT_TAG,\n    STYLE_TAG: STYLE_TAG,\n    TEMPLATE_OUTPUT_NAME: TEMPLATE_OUTPUT_NAME,\n    TEXTAREA_TAG: TEXTAREA_TAG\n  });\n\n  /**\n   * Not all the types are handled in this module.\n   *\n   * @enum {number}\n   * @readonly\n   */\n  const TAG$1 = 1; /* TAG */\n  const ATTR = 2; /* ATTR */\n  const TEXT = 3; /* TEXT */\n  const CDATA = 4; /* CDATA */\n  const COMMENT = 8; /* COMMENT */\n  const DOCUMENT = 9; /* DOCUMENT */\n  const DOCTYPE = 10; /* DOCTYPE */\n  const DOCUMENT_FRAGMENT = 11; /* DOCUMENT_FRAGMENT */\n\n  var types$3 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ATTR: ATTR,\n    CDATA: CDATA,\n    COMMENT: COMMENT,\n    DOCTYPE: DOCTYPE,\n    DOCUMENT: DOCUMENT,\n    DOCUMENT_FRAGMENT: DOCUMENT_FRAGMENT,\n    TAG: TAG$1,\n    TEXT: TEXT\n  });\n\n  const rootTagNotFound = 'Root tag not found.';\n  const unclosedTemplateLiteral = 'Unclosed ES6 template literal.';\n  const unexpectedEndOfFile = 'Unexpected end of file.';\n  const unclosedComment = 'Unclosed comment.';\n  const unclosedNamedBlock = 'Unclosed \"%1\" block.';\n  const duplicatedNamedTag =\n    'Multiple inline \"<%1>\" tags are not supported.';\n  const unexpectedCharInExpression = 'Unexpected character %1.';\n  const unclosedExpression = 'Unclosed expression.';\n\n  /**\n   * Matches the start of valid tags names; used with the first 2 chars after the `'<'`.\n   * @const\n   * @private\n   */\n  const TAG_2C = /^(?:\\/[a-zA-Z]|[a-zA-Z][^\\s>/]?)/;\n  /**\n   * Matches valid tags names AFTER the validation with `TAG_2C`.\n   * $1: tag name including any `'/'`, $2: non self-closing brace (`>`) w/o attributes.\n   * @const\n   * @private\n   */\n  const TAG_NAME = /(\\/?[^\\s>/]+)\\s*(>)?/g;\n  /**\n   * Matches an attribute name-value pair (both can be empty).\n   * $1: attribute name, $2: value including any quotes.\n   * @const\n   * @private\n   */\n  const ATTR_START = /(\\S[^>/=\\s]*)(?:\\s*=\\s*([^>/])?)?/g;\n\n  /**\n   * Matches the spread operator\n   * it will be used for the spread attributes\n   * @type {RegExp}\n   */\n  const SPREAD_OPERATOR = /\\.\\.\\./;\n  /**\n   * Matches the closing tag of a `script` and `style` block.\n   * Used by parseText fo find the end of the block.\n   * @const\n   * @private\n   */\n  const RE_SCRYLE = {\n    script: /<\\/script\\s*>/gi,\n    style: /<\\/style\\s*>/gi,\n    textarea: /<\\/textarea\\s*>/gi,\n  };\n\n  // Do not touch text content inside this tags\n  const RAW_TAGS = /^\\/?(?:pre|textarea)$/;\n\n  /**\n   * Add an item into a collection, if the collection is not an array\n   * we create one and add the item to it\n   * @param   {Array} collection - target collection\n   * @param   {*} item - item to add to the collection\n   * @returns {Array} array containing the new item added to it\n   */\n  function addToCollection(collection = [], item) {\n    collection.push(item);\n    return collection\n  }\n\n  /**\n   * Run RegExp.exec starting from a specific position\n   * @param   {RegExp} re - regex\n   * @param   {number} pos - last index position\n   * @param   {string} string - regex target\n   * @returns {Array} regex result\n   */\n  function execFromPos(re, pos, string) {\n    re.lastIndex = pos;\n    return re.exec(string)\n  }\n\n  /**\n   * Escape special characters in a given string, in preparation to create a regex.\n   *\n   * @param   {string} str - Raw string\n   * @returns {string} Escaped string.\n   */\n  var escapeStr = (str) => str.replace(/(?=[-[\\](){^*+?.$|\\\\])/g, '\\\\');\n\n  function formatError(data, message, pos) {\n    if (!pos) {\n      pos = data.length;\n    }\n    // count unix/mac/win eols\n    const line = (data.slice(0, pos).match(/\\r\\n?|\\n/g) || '').length + 1;\n    let col = 0;\n    while (--pos >= 0 && !/[\\r\\n]/.test(data[pos])) {\n      ++col;\n    }\n    return `[${line},${col}]: ${message}`\n  }\n\n  const $_ES6_BQ = '`';\n\n  /**\n   * Searches the next backquote that signals the end of the ES6 Template Literal\n   * or the \"${\" sequence that starts a JS expression, skipping any escaped\n   * character.\n   *\n   * @param   {string}    code  - Whole code\n   * @param   {number}    pos   - The start position of the template\n   * @param   {string[]}  stack - To save nested ES6 TL count\n   * @returns {number}    The end of the string (-1 if not found)\n   */\n  function skipES6TL(code, pos, stack) {\n    // we are in the char following the backquote (`),\n    // find the next unescaped backquote or the sequence \"${\"\n    const re = /[`$\\\\]/g;\n    let c;\n    while (((re.lastIndex = pos), re.exec(code))) {\n      pos = re.lastIndex;\n      c = code[pos - 1];\n      if (c === '`') {\n        return pos\n      }\n      if (c === '$' && code[pos++] === '{') {\n        stack.push($_ES6_BQ, '}');\n        return pos\n      }\n      // else this is an escaped char\n    }\n    throw formatError(code, unclosedTemplateLiteral, pos)\n  }\n\n  /**\n   * Custom error handler can be implemented replacing this method.\n   * The `state` object includes the buffer (`data`)\n   * The error position (`loc`) contains line (base 1) and col (base 0).\n   * @param {string} data - string containing the error\n   * @param {string} msg - Error message\n   * @param {number} pos - Position of the error\n   * @returns {undefined} throw an exception error\n   */\n  function panic(data, msg, pos) {\n    const message = formatError(data, msg, pos);\n    throw new Error(message)\n  }\n\n  // forked from https://github.com/aMarCruz/skip-regex\n\n  // safe characters to precced a regex (including `=>`, `**`, and `...`)\n  const beforeReChars = '[{(,;:?=|&!^~>%*/';\n  const beforeReSign = `${beforeReChars}+-`;\n\n  // keyword that can preceed a regex (`in` is handled as special case)\n  const beforeReWords = [\n    'case',\n    'default',\n    'do',\n    'else',\n    'in',\n    'instanceof',\n    'prefix',\n    'return',\n    'typeof',\n    'void',\n    'yield',\n  ];\n\n  // Last chars of all the beforeReWords elements to speed up the process.\n  const wordsEndChar = beforeReWords.reduce((s, w) => s + w.slice(-1), '');\n\n  // Matches literal regex from the start of the buffer.\n  // The buffer to search must not include line-endings.\n  const RE_LIT_REGEX =\n    /^\\/(?=[^*>/])[^[/\\\\]*(?:(?:\\\\.|\\[(?:\\\\.|[^\\]\\\\]*)*\\])[^[\\\\/]*)*?\\/[gimuy]*/;\n\n  // Valid characters for JavaScript variable names and literal numbers.\n  const RE_JS_VCHAR = /[$\\w]/;\n\n  // Match dot characters that could be part of tricky regex\n  const RE_DOT_CHAR = /.*/g;\n\n  /**\n   * Searches the position of the previous non-blank character inside `code`,\n   * starting with `pos - 1`.\n   *\n   * @param   {string} code - Buffer to search\n   * @param   {number} pos  - Starting position\n   * @returns {number} Position of the first non-blank character to the left.\n   * @private\n   */\n  function _prev(code, pos) {\n    while (--pos >= 0 && /\\s/.test(code[pos]));\n    return pos\n  }\n\n  /**\n   * Check if the character in the `start` position within `code` can be a regex\n   * and returns the position following this regex or `start+1` if this is not\n   * one.\n   *\n   * NOTE: Ensure `start` points to a slash (this is not checked).\n   *\n   * @function skipRegex\n   * @param   {string} code  - Buffer to test in\n   * @param   {number} start - Position the first slash inside `code`\n   * @returns {number} Position of the char following the regex.\n   *\n   */\n  /* c8 ignore next */\n  function skipRegex(code, start) {\n    let pos = (RE_DOT_CHAR.lastIndex = start++);\n\n    // `exec()` will extract from the slash to the end of the line\n    //   and the chained `match()` will match the possible regex.\n    const match = (RE_DOT_CHAR.exec(code) || ' ')[0].match(RE_LIT_REGEX);\n\n    if (match) {\n      const next = pos + match[0].length; // result comes from `re.match`\n\n      pos = _prev(code, pos);\n      let c = code[pos];\n\n      // start of buffer or safe prefix?\n      if (pos < 0 || beforeReChars.includes(c)) {\n        return next\n      }\n\n      // from here, `pos` is >= 0 and `c` is code[pos]\n      if (c === '.') {\n        // can be `...` or something silly like 5./2\n        if (code[pos - 1] === '.') {\n          start = next;\n        }\n      } else {\n        if (c === '+' || c === '-') {\n          // tricky case\n          if (\n            code[--pos] !== c || // if have a single operator or\n            (pos = _prev(code, pos)) < 0 || // ...have `++` and no previous token\n            beforeReSign.includes((c = code[pos]))\n          ) {\n            return next // ...this is a regex\n          }\n        }\n\n        if (wordsEndChar.includes(c)) {\n          // looks like a keyword?\n          const end = pos + 1;\n\n          // get the complete (previous) keyword\n          while (--pos >= 0 && RE_JS_VCHAR.test(code[pos]));\n\n          // it is in the allowed keywords list?\n          if (beforeReWords.includes(code.slice(pos + 1, end))) {\n            start = next;\n          }\n        }\n      }\n    }\n\n    return start\n  }\n\n  /*\n   * Mini-parser for expressions.\n   * The main pourpose of this module is to find the end of an expression\n   * and return its text without the enclosing brackets.\n   * Does not works with comments, but supports ES6 template strings.\n   */\n  /**\n   * @exports exprExtr\n   */\n  const S_SQ_STR = /'[^'\\n\\r\\\\]*(?:\\\\(?:\\r\\n?|[\\S\\s])[^'\\n\\r\\\\]*)*'/.source;\n  /**\n   * Matches double quoted JS strings taking care about nested quotes\n   * and EOLs (escaped EOLs are Ok).\n   *\n   * @const\n   * @private\n   */\n  const S_STRING = `${S_SQ_STR}|${S_SQ_STR.replace(/'/g, '\"')}`;\n  /**\n   * Regex cache\n   *\n   * @type {Object.<string, RegExp>}\n   * @const\n   * @private\n   */\n  const reBr = {};\n  /**\n   * Makes an optimal regex that matches quoted strings, brackets, backquotes\n   * and the closing brackets of an expression.\n   *\n   * @param   {string} b - Closing brackets\n   * @returns {RegExp} - optimized regex\n   */\n  function _regex(b) {\n    let re = reBr[b];\n    if (!re) {\n      let s = escapeStr(b);\n      if (b.length > 1) {\n        s = `${s}|[`;\n      } else {\n        s = /[{}[\\]()]/.test(b) ? '[' : `[${s}`;\n      }\n      reBr[b] = re = new RegExp(`${S_STRING}|${s}\\`/\\\\{}[\\\\]()]`, 'g');\n    }\n    return re\n  }\n\n  /**\n   * Update the scopes stack removing or adding closures to it\n   * @param   {Array} stack - array stacking the expression closures\n   * @param   {string} char - current char to add or remove from the stack\n   * @param   {string} idx  - matching index\n   * @param   {string} code - expression code\n   * @returns {Object} result\n   * @returns {Object} result.char - either the char received or the closing braces\n   * @returns {Object} result.index - either a new index to skip part of the source code,\n   *                                  or 0 to keep from parsing from the old position\n   */\n  function updateStack(stack, char, idx, code) {\n    let index = 0;\n\n    switch (char) {\n      case '[':\n      case '(':\n      case '{':\n        stack.push(char === '[' ? ']' : char === '(' ? ')' : '}');\n        break\n      case ')':\n      case ']':\n      case '}':\n        if (char !== stack.pop()) {\n          panic(code, unexpectedCharInExpression.replace('%1', char), index);\n        }\n\n        if (char === '}' && stack[stack.length - 1] === $_ES6_BQ) {\n          char = stack.pop();\n        }\n\n        index = idx + 1;\n        break\n      case '/':\n        index = skipRegex(code, idx);\n    }\n\n    return { char, index }\n  }\n\n  /**\n   * Parses the code string searching the end of the expression.\n   * It skips braces, quoted strings, regexes, and ES6 template literals.\n   *\n   * @function exprExtr\n   * @param   {string}  code  - Buffer to parse\n   * @param   {number}  start - Position of the opening brace\n   * @param   {[string,string]} bp - Brackets pair\n   * @returns {Object} Expression's end (after the closing brace) or -1\n   *                            if it is not an expr.\n   */\n  function exprExtr(code, start, bp) {\n    const [openingBraces, closingBraces] = bp;\n    const offset = start + openingBraces.length; // skips the opening brace\n    const stack = []; // expected closing braces ('`' for ES6 TL)\n    const re = _regex(closingBraces);\n\n    re.lastIndex = offset; // begining of the expression\n\n    let end;\n    let match;\n\n    while ((match = re.exec(code))) {\n      // eslint-disable-line\n      const idx = match.index;\n      const str = match[0];\n      end = re.lastIndex;\n\n      // end the iteration\n      if (str === closingBraces && !stack.length) {\n        return {\n          text: code.slice(offset, idx),\n          start,\n          end,\n        }\n      }\n\n      const { char, index } = updateStack(stack, str[0], idx, code);\n      // update the end value depending on the new index received\n      end = index || end;\n      // update the regex last index\n      re.lastIndex = char === $_ES6_BQ ? skipES6TL(code, end, stack) : end;\n    }\n\n    if (stack.length) {\n      panic(code, unclosedExpression, end);\n    }\n  }\n\n  /**\n   * Outputs the last parsed node. Can be used with a builder too.\n   *\n   * @param   {ParserStore} store - Parsing store\n   * @returns {undefined} void function\n   * @private\n   */\n  function flush(store) {\n    const last = store.last;\n    store.last = null;\n    if (last && store.root) {\n      store.builder.push(last);\n    }\n  }\n\n  /**\n   * Get the code chunks from start and end range\n   * @param   {string}  source  - source code\n   * @param   {number}  start   - Start position of the chunk we want to extract\n   * @param   {number}  end     - Ending position of the chunk we need\n   * @returns {string}  chunk of code extracted from the source code received\n   * @private\n   */\n  function getChunk(source, start, end) {\n    return source.slice(start, end)\n  }\n\n  /**\n   * states text in the last text node, or creates a new one if needed.\n   *\n   * @param {ParserState}   state   - Current parser state\n   * @param {number}  start   - Start position of the tag\n   * @param {number}  end     - Ending position (last char of the tag)\n   * @param {Object}  extra   - extra properties to add to the text node\n   * @param {RawExpr[]} extra.expressions  - Found expressions\n   * @param {string}    extra.unescape     - Brackets to unescape\n   * @returns {undefined} - void function\n   * @private\n   */\n  function pushText(state, start, end, extra = {}) {\n    const text = getChunk(state.data, start, end);\n    const expressions = extra.expressions;\n    const unescape = extra.unescape;\n\n    let q = state.last;\n    state.pos = end;\n\n    if (q && q.type === TEXT) {\n      q.text += text;\n      q.end = end;\n    } else {\n      flush(state);\n      state.last = q = { type: TEXT, text, start, end };\n    }\n\n    if (expressions && expressions.length) {\n      q.expressions = (q.expressions || []).concat(expressions);\n    }\n\n    if (unescape) {\n      q.unescape = unescape;\n    }\n\n    return TEXT\n  }\n\n  /**\n   * Find the end of the attribute value or text node\n   * Extract expressions.\n   * Detect if value have escaped brackets.\n   *\n   * @param   {ParserState} state  - Parser state\n   * @param   {HasExpr} node       - Node if attr, info if text\n   * @param   {string} endingChars - Ends the value or text\n   * @param   {number} start       - Starting position\n   * @returns {number} Ending position\n   * @private\n   */\n  function expr(state, node, endingChars, start) {\n    const re = b0re(state, endingChars);\n\n    re.lastIndex = start; // reset re position\n\n    const { unescape, expressions, end } = parseExpressions(state, re);\n\n    if (node) {\n      if (unescape) {\n        node.unescape = unescape;\n      }\n      if (expressions.length) {\n        node.expressions = expressions;\n      }\n    } else {\n      pushText(state, start, end, { expressions, unescape });\n    }\n\n    return end\n  }\n\n  /**\n   * Parse a text chunk finding all the expressions in it\n   * @param   {ParserState} state  - Parser state\n   * @param   {RegExp} re - regex to match the expressions contents\n   * @returns {Object} result containing the expression found, the string to unescape and the end position\n   */\n  function parseExpressions(state, re) {\n    const { data, options } = state;\n    const { brackets } = options;\n    const expressions = [];\n    let unescape, pos, match;\n\n    // Anything captured in $1 (closing quote or character) ends the loop...\n    while ((match = re.exec(data)) && !match[1]) {\n      // ...else, we have an opening bracket and maybe an expression.\n      pos = match.index;\n      if (data[pos - 1] === '\\\\') {\n        unescape = match[0]; // it is an escaped opening brace\n      } else {\n        const tmpExpr = exprExtr(data, pos, brackets);\n        if (tmpExpr) {\n          expressions.push(tmpExpr);\n          re.lastIndex = tmpExpr.end;\n        }\n      }\n    }\n\n    // Even for text, the parser needs match a closing char\n    if (!match) {\n      panic(data, unexpectedEndOfFile, pos);\n    }\n\n    return {\n      unescape,\n      expressions,\n      end: match.index,\n    }\n  }\n\n  /**\n   * Creates a regex for the given string and the left bracket.\n   * The string is captured in $1.\n   *\n   * @param   {ParserState} state  - Parser state\n   * @param   {string} str - String to search\n   * @returns {RegExp} Resulting regex.\n   * @private\n   */\n  function b0re(state, str) {\n    const { brackets } = state.options;\n    const re = state.regexCache[str];\n\n    if (re) return re\n\n    const b0 = escapeStr(brackets[0]);\n    // cache the regex extending the regexCache object\n    Object.assign(state.regexCache, { [str]: new RegExp(`(${str})|${b0}`, 'g') });\n\n    return state.regexCache[str]\n  }\n\n  // similar to _.uniq\n  const uniq$1 = l => l.filter((x, i, a) => a.indexOf(x) === i);\n\n  /**\n   * SVG void elements that cannot be auto-closed and shouldn't contain child nodes.\n   * @const {Array}\n   */\n  const VOID_SVG_TAGS_LIST$1 = [\n    'circle',\n    'ellipse',\n    'line',\n    'path',\n    'polygon',\n    'polyline',\n    'rect',\n    'stop',\n    'use'\n  ];\n\n  /**\n   * List of html elements where the value attribute is allowed\n   * @type {Array}\n   */\n  const HTML_ELEMENTS_HAVING_VALUE_ATTRIBUTE_LIST$1 = [\n    'button',\n    'data',\n    'input',\n    'select',\n    'li',\n    'meter',\n    'option',\n    'output',\n    'progress',\n    'textarea',\n    'param'\n  ];\n\n  /**\n   * List of all the available svg tags\n   * @const {Array}\n   * @see {@link https://github.com/wooorm/svg-tag-names}\n   */\n  const SVG_TAGS_LIST$1 = uniq$1([\n    'a',\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animate',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'animation',\n    'audio',\n    'canvas',\n    'clipPath',\n    'color-profile',\n    'cursor',\n    'defs',\n    'desc',\n    'discard',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feDropShadow',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'filter',\n    'font',\n    'font-face',\n    'font-face-format',\n    'font-face-name',\n    'font-face-src',\n    'font-face-uri',\n    'foreignObject',\n    'g',\n    'glyph',\n    'glyphRef',\n    'handler',\n    'hatch',\n    'hatchpath',\n    'hkern',\n    'iframe',\n    'image',\n    'linearGradient',\n    'listener',\n    'marker',\n    'mask',\n    'mesh',\n    'meshgradient',\n    'meshpatch',\n    'meshrow',\n    'metadata',\n    'missing-glyph',\n    'mpath',\n    'pattern',\n    'prefetch',\n    'radialGradient',\n    'script',\n    'set',\n    'solidColor',\n    'solidcolor',\n    'style',\n    'svg',\n    'switch',\n    'symbol',\n    'tbreak',\n    'text',\n    'textArea',\n    'textPath',\n    'title',\n    'tref',\n    'tspan',\n    'unknown',\n    'video',\n    'view',\n    'vkern'\n  ].concat(VOID_SVG_TAGS_LIST$1)).sort();\n\n  /**\n   * HTML void elements that cannot be auto-closed and shouldn't contain child nodes.\n   * @type {Array}\n   * @see   {@link http://www.w3.org/TR/html-markup/syntax.html#syntax-elements}\n   * @see   {@link http://www.w3.org/TR/html5/syntax.html#void-elements}\n   */\n  const VOID_HTML_TAGS_LIST$1 = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'keygen',\n    'link',\n    'menuitem',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n  ];\n\n  /**\n   * List of all the html tags\n   * @const {Array}\n   * @see {@link https://github.com/sindresorhus/html-tags}\n   */\n  const HTML_TAGS_LIST$1 = uniq$1([\n    'a',\n    'abbr',\n    'address',\n    'article',\n    'aside',\n    'audio',\n    'b',\n    'bdi',\n    'bdo',\n    'blockquote',\n    'body',\n    'canvas',\n    'caption',\n    'cite',\n    'code',\n    'colgroup',\n    'datalist',\n    'dd',\n    'del',\n    'details',\n    'dfn',\n    'dialog',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'head',\n    'header',\n    'hgroup',\n    'html',\n    'i',\n    'iframe',\n    'ins',\n    'kbd',\n    'label',\n    'legend',\n    'main',\n    'map',\n    'mark',\n    'math',\n    'menu',\n    'nav',\n    'noscript',\n    'object',\n    'ol',\n    'optgroup',\n    'p',\n    'picture',\n    'pre',\n    'q',\n    'rb',\n    'rp',\n    'rt',\n    'rtc',\n    'ruby',\n    's',\n    'samp',\n    'script',\n    'section',\n    'select',\n    'slot',\n    'small',\n    'span',\n    'strong',\n    'style',\n    'sub',\n    'summary',\n    'sup',\n    'svg',\n    'table',\n    'tbody',\n    'td',\n    'template',\n    'tfoot',\n    'th',\n    'thead',\n    'time',\n    'title',\n    'tr',\n    'u',\n    'ul',\n    'var',\n    'video'\n  ]\n    .concat(VOID_HTML_TAGS_LIST$1)\n    .concat(HTML_ELEMENTS_HAVING_VALUE_ATTRIBUTE_LIST$1)\n  ).sort();\n\n  /**\n   * List of all boolean HTML attributes\n   * @const {RegExp}\n   * @see {@link https://www.w3.org/TR/html5/infrastructure.html#sec-boolean-attributes}\n   */\n  const BOOLEAN_ATTRIBUTES_LIST$1 = [\n    'disabled',\n    'visible',\n    'checked',\n    'readonly',\n    'required',\n    'allowfullscreen',\n    'autofocus',\n    'autoplay',\n    'compact',\n    'controls',\n    'default',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'noresize',\n    'noshade',\n    'novalidate',\n    'nowrap',\n    'open',\n    'reversed',\n    'seamless',\n    'selected',\n    'sortable',\n    'truespeed',\n    'typemustmatch'\n  ];\n\n  /**\n   * Join a list of items with the pipe symbol (usefull for regex list concatenation)\n   * @private\n   * @param   {Array} list - list of strings\n   * @returns {string} the list received joined with pipes\n   */\n  function joinWithPipe$1(list) {\n    return list.join('|')\n  }\n\n  /**\n   * Convert list of strings to regex in order to test against it ignoring the cases\n   * @private\n   * @param   {...Array} lists - array of strings\n   * @returns {RegExp} regex that will match all the strings in the array received ignoring the cases\n   */\n  function listsToRegex$1(...lists) {\n    return new RegExp(`^/?(?:${joinWithPipe$1(lists.map(joinWithPipe$1))})$`, 'i')\n  }\n\n  /**\n   * Regex matching all the html tags ignoring the cases\n   * @const {RegExp}\n   */\n  const HTML_TAGS_RE = listsToRegex$1(HTML_TAGS_LIST$1);\n\n  /**\n   * Regex matching all the svg tags ignoring the cases\n   * @const {RegExp}\n   */\n  const SVG_TAGS_RE = listsToRegex$1(SVG_TAGS_LIST$1);\n\n  /**\n   * Regex matching all the void html tags ignoring the cases\n   * @const {RegExp}\n   */\n  const VOID_HTML_TAGS_RE =  listsToRegex$1(VOID_HTML_TAGS_LIST$1);\n\n  /**\n   * Regex matching all the void svg tags ignoring the cases\n   * @const {RegExp}\n   */\n  const VOID_SVG_TAGS_RE =  listsToRegex$1(VOID_SVG_TAGS_LIST$1);\n\n  /**\n   * Regex matching all the html tags where the value tag is allowed\n   * @const {RegExp}\n   */\n  listsToRegex$1(HTML_ELEMENTS_HAVING_VALUE_ATTRIBUTE_LIST$1);\n\n  /**\n   * Regex matching all the boolean attributes\n   * @const {RegExp}\n   */\n  const BOOLEAN_ATTRIBUTES_RE =  listsToRegex$1(BOOLEAN_ATTRIBUTES_LIST$1);\n\n  /**\n   * True if it's a self closing tag\n   * @param   {string}  tag - test tag\n   * @returns {boolean} true if void\n   * @example\n   * isVoid('meta') // true\n   * isVoid('circle') // true\n   * isVoid('IMG') // true\n   * isVoid('div') // false\n   * isVoid('mask') // false\n   */\n  function isVoid(tag) {\n    return [\n      VOID_HTML_TAGS_RE,\n      VOID_SVG_TAGS_RE\n    ].some(r => r.test(tag))\n  }\n\n  /**\n   * True if it's not SVG nor a HTML known tag\n   * @param   {string}  tag - test tag\n   * @returns {boolean} true if custom element\n   * @example\n   * isCustom('my-component') // true\n   * isCustom('div') // false\n   */\n  function isCustom(tag) {\n    return [\n      HTML_TAGS_RE,\n      SVG_TAGS_RE\n    ].every(l => !l.test(tag))\n  }\n\n  /**\n   * True if it's a boolean attribute\n   * @param   {string} attribute - test attribute\n   * @returns {boolean} true if the attribute is a boolean type\n   * @example\n   * isBoolAttribute('selected') // true\n   * isBoolAttribute('class') // false\n   */\n  function isBoolAttribute(attribute) {\n    return BOOLEAN_ATTRIBUTES_RE.test(attribute)\n  }\n\n  /**\n   * Memoization function\n   * @param   {Function} fn - function to memoize\n   * @returns {*} return of the function to memoize\n   */\n  function memoize(fn) {\n    const cache = new WeakMap();\n\n    return (...args) => {\n      if (cache.has(args[0])) return cache.get(args[0])\n\n      const ret = fn(...args);\n\n      cache.set(args[0], ret);\n\n      return ret\n    }\n  }\n\n  const expressionsContentRe = memoize((brackets) =>\n    RegExp(`(${brackets[0]}[^${brackets[1]}]*?${brackets[1]})`, 'g'),\n  );\n  const isSpreadAttribute$1 = (name) => SPREAD_OPERATOR.test(name);\n  const isAttributeExpression = (name, brackets) => name[0] === brackets[0];\n  const getAttributeEnd = (state, attr) =>\n    expr(state, attr, '[>/\\\\s]', attr.start);\n\n  /**\n   * The more complex parsing is for attributes as it can contain quoted or\n   * unquoted values or expressions.\n   *\n   * @param   {ParserStore} state  - Parser state\n   * @returns {number} New parser mode.\n   * @private\n   */\n  function attr(state) {\n    const { data, last, pos, root } = state;\n    const tag = last; // the last (current) tag in the output\n    const _CH = /\\S/g; // matches the first non-space char\n    const ch = execFromPos(_CH, pos, data);\n\n    switch (true) {\n      case !ch:\n        state.pos = data.length; // reaching the end of the buffer with\n        // NodeTypes.ATTR will generate error\n        break\n      case ch[0] === '>':\n        // closing char found. If this is a self-closing tag with the name of the\n        // Root tag, we need decrement the counter as we are changing mode.\n        state.pos = tag.end = _CH.lastIndex;\n        if (tag[IS_SELF_CLOSING]) {\n          state.scryle = null; // allow selfClosing script/style tags\n          if (root && root.name === tag.name) {\n            state.count--; // \"pop\" root tag\n          }\n        }\n        return TEXT\n      case ch[0] === '/':\n        state.pos = _CH.lastIndex; // maybe. delegate the validation\n        tag[IS_SELF_CLOSING] = true; // the next loop\n        break\n      default:\n        delete tag[IS_SELF_CLOSING]; // ensure unmark as selfclosing tag\n        setAttribute(state, ch.index, tag);\n    }\n\n    return ATTR\n  }\n\n  /**\n   * Parses an attribute and its expressions.\n   *\n   * @param   {ParserStore}  state  - Parser state\n   * @param   {number} pos    - Starting position of the attribute\n   * @param   {Object} tag    - Current parent tag\n   * @returns {undefined} void function\n   * @private\n   */\n  function setAttribute(state, pos, tag) {\n    const { data } = state;\n    const expressionContent = expressionsContentRe(state.options.brackets);\n    const re = ATTR_START; // (\\S[^>/=\\s]*)(?:\\s*=\\s*([^>/])?)? g\n    const start = (re.lastIndex = expressionContent.lastIndex = pos); // first non-whitespace\n    const attrMatches = re.exec(data);\n    const isExpressionName = isAttributeExpression(\n      attrMatches[1],\n      state.options.brackets,\n    );\n    const match = isExpressionName\n      ? [null, expressionContent.exec(data)[1], null]\n      : attrMatches;\n\n    if (match) {\n      const end = re.lastIndex;\n      const attr = parseAttribute(state, match, start, end, isExpressionName);\n\n      //assert(q && q.type === Mode.TAG, 'no previous tag for the attr!')\n      // Pushes the attribute and shifts the `end` position of the tag (`last`).\n      state.pos = tag.end = attr.end;\n      tag.attributes = addToCollection(tag.attributes, attr);\n    }\n  }\n\n  function parseNomalAttribute(state, attr, quote) {\n    const { data } = state;\n    let { end } = attr;\n\n    if (isBoolAttribute(attr.name)) {\n      attr[IS_BOOLEAN] = true;\n    }\n\n    // parse the whole value (if any) and get any expressions on it\n    if (quote) {\n      // Usually, the value's first char (`quote`) is a quote and the lastIndex\n      // (`end`) is the start of the value.\n      let valueStart = end;\n      // If it not, this is an unquoted value and we need adjust the start.\n      if (quote !== '\"' && quote !== \"'\") {\n        quote = ''; // first char of value is not a quote\n        valueStart--; // adjust the starting position\n      }\n\n      end = expr(state, attr, quote || '[>/\\\\s]', valueStart);\n\n      // adjust the bounds of the value and save its content\n      return Object.assign(attr, {\n        value: getChunk(data, valueStart, end),\n        valueStart,\n        end: quote ? ++end : end,\n      })\n    }\n\n    return attr\n  }\n\n  /**\n   * Parse expression names <a {href}>\n   * @param   {ParserStore}  state  - Parser state\n   * @param   {Object} attr - attribute object parsed\n   * @returns {Object} normalized attribute object\n   */\n  function parseSpreadAttribute(state, attr) {\n    const end = getAttributeEnd(state, attr);\n\n    return {\n      [IS_SPREAD]: true,\n      start: attr.start,\n      expressions: attr.expressions.map((expr) =>\n        Object.assign(expr, {\n          text: expr.text.replace(SPREAD_OPERATOR, '').trim(),\n        }),\n      ),\n      end: end,\n    }\n  }\n\n  /**\n   * Parse expression names <a {href}>\n   * @param   {ParserStore}  state  - Parser state\n   * @param   {Object} attr - attribute object parsed\n   * @returns {Object} normalized attribute object\n   */\n  function parseExpressionNameAttribute(state, attr) {\n    const end = getAttributeEnd(state, attr);\n\n    return {\n      start: attr.start,\n      name: attr.expressions[0].text.trim(),\n      expressions: attr.expressions,\n      end: end,\n    }\n  }\n\n  /**\n   * Parse the attribute values normalising the quotes\n   * @param   {ParserStore}  state  - Parser state\n   * @param   {Array} match - results of the attributes regex\n   * @param   {number} start - attribute start position\n   * @param   {number} end - attribute end position\n   * @param   {boolean} isExpressionName - true if the attribute name is an expression\n   * @returns {Object} attribute object\n   */\n  function parseAttribute(state, match, start, end, isExpressionName) {\n    const attr = {\n      name: match[1],\n      value: '',\n      start,\n      end,\n    };\n\n    const quote = match[2]; // first letter of value or nothing\n\n    switch (true) {\n      case isSpreadAttribute$1(attr.name):\n        return parseSpreadAttribute(state, attr)\n      case isExpressionName === true:\n        return parseExpressionNameAttribute(state, attr)\n      default:\n        return parseNomalAttribute(state, attr, quote)\n    }\n  }\n\n  /**\n   * Function to curry any javascript method\n   * @param   {Function}  fn - the target function we want to curry\n   * @param   {...[args]} acc - initial arguments\n   * @returns {Function|*} it will return a function until the target function\n   *                       will receive all of its arguments\n   */\n  function curry$1(fn, ...acc) {\n    return (...args) => {\n      args = [...acc, ...args];\n\n      return args.length < fn.length ?\n        curry$1(fn, ...args) :\n        fn(...args)\n    }\n  }\n\n  /**\n   * Parses comments in long or short form\n   * (any DOCTYPE & CDATA blocks are parsed as comments).\n   *\n   * @param   {ParserState} state  - Parser state\n   * @param   {string} data       - Buffer to parse\n   * @param   {number} start      - Position of the '<!' sequence\n   * @returns {number} node type id\n   * @private\n   */\n  function comment(state, data, start) {\n    const pos = start + 2; // skip '<!'\n    const isLongComment = data.substr(pos, 2) === '--';\n    const str = isLongComment ? '-->' : '>';\n    const end = data.indexOf(str, pos);\n\n    if (end < 0) {\n      panic(data, unclosedComment, start);\n    }\n\n    pushComment(\n      state,\n      start,\n      end + str.length,\n      data.substring(start, end + str.length),\n    );\n\n    return TEXT\n  }\n\n  /**\n   * Parse a comment.\n   *\n   * @param   {ParserState}  state - Current parser state\n   * @param   {number}  start - Start position of the tag\n   * @param   {number}  end   - Ending position (last char of the tag)\n   * @param   {string}  text  - Comment content\n   * @returns {undefined} void function\n   * @private\n   */\n  function pushComment(state, start, end, text) {\n    state.pos = end;\n    if (state.options.comments === true) {\n      flush(state);\n      state.last = {\n        type: COMMENT,\n        start,\n        end,\n        text,\n      };\n    }\n  }\n\n  /**\n   * Pushes a new *tag* and set `last` to this, so any attributes\n   * will be included on this and shifts the `end`.\n   *\n   * @param   {ParserState} state  - Current parser state\n   * @param   {string}  name      - Name of the node including any slash\n   * @param   {number}  start     - Start position of the tag\n   * @param   {number}  end       - Ending position (last char of the tag + 1)\n   * @returns {undefined} - void function\n   * @private\n   */\n  function pushTag(state, name, start, end) {\n    const root = state.root;\n    const last = { type: TAG$1, name, start, end };\n\n    if (isCustom(name)) {\n      last[IS_CUSTOM] = true;\n    }\n\n    if (isVoid(name)) {\n      last[IS_VOID] = true;\n    }\n\n    state.pos = end;\n\n    if (root) {\n      if (name === root.name) {\n        state.count++;\n      } else if (name === root.close) {\n        state.count--;\n      }\n      flush(state);\n    } else {\n      // start with root (keep ref to output)\n      state.root = { name: last.name, close: `/${name}` };\n      state.count = 1;\n    }\n\n    state.last = last;\n  }\n\n  /**\n   * Parse the tag following a '<' character, or delegate to other parser\n   * if an invalid tag name is found.\n   *\n   * @param   {ParserState} state  - Parser state\n   * @returns {number} New parser mode\n   * @private\n   */\n  function tag(state) {\n    const { pos, data } = state; // pos of the char following '<'\n    const start = pos - 1; // pos of '<'\n    const str = data.substr(pos, 2); // first two chars following '<'\n\n    switch (true) {\n      case str[0] === '!':\n        return comment(state, data, start)\n      case TAG_2C.test(str):\n        return parseTag(state, start)\n      default:\n        return pushText(state, start, pos) // pushes the '<' as text\n    }\n  }\n\n  function parseTag(state, start) {\n    const { data, pos } = state;\n    const re = TAG_NAME; // (\\/?[^\\s>/]+)\\s*(>)? g\n    const match = execFromPos(re, pos, data);\n    const end = re.lastIndex;\n    const name = match[1].toLowerCase(); // $1: tag name including any '/'\n    // script/style block is parsed as another tag to extract attributes\n    if (name in RE_SCRYLE) {\n      state.scryle = name; // used by parseText\n    }\n\n    pushTag(state, name, start, end);\n    // only '>' can ends the tag here, the '/' is handled in parseAttribute\n    if (!match[2]) {\n      return ATTR\n    }\n\n    return TEXT\n  }\n\n  /**\n   * Parses regular text and script/style blocks ...scryle for short :-)\n   * (the content of script and style is text as well)\n   *\n   * @param   {ParserState} state - Parser state\n   * @returns {number} New parser mode.\n   * @private\n   */\n  function text(state) {\n    const { pos, data, scryle } = state;\n\n    switch (true) {\n      case typeof scryle === 'string': {\n        const name = scryle;\n        const re = RE_SCRYLE[name];\n        const match = execFromPos(re, pos, data);\n\n        if (!match) {\n          panic(data, unclosedNamedBlock.replace('%1', name), pos - 1);\n        }\n\n        const start = match.index;\n        const end = re.lastIndex;\n        state.scryle = null; // reset the script/style flag now\n        // write the tag content, if any\n        if (start > pos) {\n          parseSpecialTagsContent(state, name, match);\n        }\n        // now the closing tag, either </script> or </style>\n        pushTag(state, `/${name}`, start, end);\n        break\n      }\n      case data[pos] === '<':\n        state.pos++;\n        return TAG$1\n      default:\n        expr(state, null, '<', pos);\n    }\n\n    return TEXT\n  }\n\n  /**\n   * Parse the text content depending on the name\n   * @param   {ParserState} state - Parser state\n   * @param   {string} name  - one of the tags matched by the RE_SCRYLE regex\n   * @param   {Array}  match - result of the regex matching the content of the parsed tag\n   * @returns {undefined} void function\n   */\n  function parseSpecialTagsContent(state, name, match) {\n    const { pos } = state;\n    const start = match.index;\n\n    if (name === TEXTAREA_TAG) {\n      expr(state, null, match[0], pos);\n    } else {\n      pushText(state, pos, start);\n    }\n  }\n\n  /*---------------------------------------------------------------------\n   * Tree builder for the riot tag parser.\n   *\n   * The output has a root property and separate arrays for `html`, `css`,\n   * and `js` tags.\n   *\n   * The root tag is included as first element in the `html` array.\n   * Script tags marked with \"defer\" are included in `html` instead `js`.\n   *\n   * - Mark SVG tags\n   * - Mark raw tags\n   * - Mark void tags\n   * - Split prefixes from expressions\n   * - Unescape escaped brackets and escape EOLs and backslashes\n   * - Compact whitespace (option `compact`) for non-raw tags\n   * - Create an array `parts` for text nodes and attributes\n   *\n   * Throws on unclosed tags or closing tags without start tag.\n   * Selfclosing and void tags has no nodes[] property.\n   */\n\n  /**\n   * Escape the carriage return and the line feed from a string\n   * @param   {string} string - input string\n   * @returns {string} output string escaped\n   */\n  function escapeReturn(string) {\n    return string.replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n')\n  }\n\n  // check whether a tag has the 'src' attribute set like for example `<script src=\"\">`\n  const hasSrcAttribute = (node) =>\n    (node.attributes || []).some((attr) => attr.name === 'src');\n\n  /**\n   * Escape double slashes in a string\n   * @param   {string} string - input string\n   * @returns {string} output string escaped\n   */\n  function escapeSlashes(string) {\n    return string.replace(/\\\\/g, '\\\\\\\\')\n  }\n\n  /**\n   * Replace the multiple spaces with only one\n   * @param   {string} string - input string\n   * @returns {string} string without trailing spaces\n   */\n  function cleanSpaces(string) {\n    return string.replace(/\\s+/g, ' ')\n  }\n\n  const TREE_BUILDER_STRUCT = Object.seal({\n    get() {\n      const store = this.store;\n      // The real root tag is in store.root.nodes[0]\n      return {\n        [TEMPLATE_OUTPUT_NAME]: store.root.nodes[0],\n        [CSS_OUTPUT_NAME]: store[STYLE_TAG],\n        [JAVASCRIPT_OUTPUT_NAME]: store[JAVASCRIPT_TAG],\n      }\n    },\n\n    /**\n     * Process the current tag or text.\n     * @param {Object} node - Raw pseudo-node from the parser\n     * @returns {undefined} void function\n     */\n    push(node) {\n      const store = this.store;\n\n      switch (node.type) {\n        case COMMENT:\n          this.pushComment(store, node);\n          break\n        case TEXT:\n          this.pushText(store, node);\n          break\n        case TAG$1: {\n          const name = node.name;\n          const closingTagChar = '/';\n          const [firstChar] = name;\n\n          if (firstChar === closingTagChar && !node.isVoid) {\n            this.closeTag(store, node, name);\n          } else if (firstChar !== closingTagChar) {\n            this.openTag(store, node);\n          }\n          break\n        }\n      }\n    },\n    pushComment(store, node) {\n      const parent = store.last;\n\n      parent.nodes.push(node);\n    },\n    closeTag(store, node) {\n      const last = store.scryle || store.last;\n\n      last.end = node.end;\n\n      // update always the root node end position\n      if (store.root.nodes[0]) store.root.nodes[0].end = node.end;\n\n      if (store.scryle) {\n        store.scryle = null;\n      } else {\n        store.last = store.stack.pop();\n      }\n    },\n\n    openTag(store, node) {\n      const name = node.name;\n      const attrs = node.attributes;\n      const isCoreTag =\n        (JAVASCRIPT_TAG === name && !hasSrcAttribute(node)) || name === STYLE_TAG;\n\n      if (isCoreTag) {\n        // Only accept one of each\n        if (store[name]) {\n          panic(\n            this.store.data,\n            duplicatedNamedTag.replace('%1', name),\n            node.start,\n          );\n        }\n\n        store[name] = node;\n        store.scryle = store[name];\n      } else {\n        // store.last holds the last tag pushed in the stack and this are\n        // non-void, non-empty tags, so we are sure the `lastTag` here\n        // have a `nodes` property.\n        const lastTag = store.last;\n        const newNode = node;\n\n        lastTag.nodes.push(newNode);\n\n        if (lastTag[IS_RAW] || RAW_TAGS.test(name)) {\n          node[IS_RAW] = true;\n        }\n\n        if (!node[IS_SELF_CLOSING] && !node[IS_VOID]) {\n          store.stack.push(lastTag);\n          newNode.nodes = [];\n          store.last = newNode;\n        }\n      }\n\n      if (attrs) {\n        this.attrs(attrs);\n      }\n    },\n    attrs(attributes) {\n      attributes.forEach((attr) => {\n        if (attr.value) {\n          this.split(attr, attr.value, attr.valueStart, true);\n        }\n      });\n    },\n    pushText(store, node) {\n      const text = node.text;\n      const empty = !/\\S/.test(text);\n      const scryle = store.scryle;\n      if (!scryle) {\n        // store.last always have a nodes property\n        const parent = store.last;\n\n        const pack = this.compact && !parent[IS_RAW];\n        if (pack && empty) {\n          return\n        }\n        this.split(node, text, node.start, pack);\n        parent.nodes.push(node);\n      } else if (!empty) {\n        scryle.text = node;\n      }\n    },\n    split(node, source, start, pack) {\n      const expressions = node.expressions;\n      const parts = [];\n\n      if (expressions) {\n        let pos = 0;\n\n        expressions.forEach((expr) => {\n          const text = source.slice(pos, expr.start - start);\n          const code = expr.text;\n          parts.push(\n            this.sanitise(node, text, pack),\n            escapeReturn(escapeSlashes(code).trim()),\n          );\n          pos = expr.end - start;\n        });\n\n        if (pos < node.end) {\n          parts.push(this.sanitise(node, source.slice(pos), pack));\n        }\n      } else {\n        parts[0] = this.sanitise(node, source, pack);\n      }\n\n      node.parts = parts.filter((p) => p); // remove the empty strings\n    },\n    // unescape escaped brackets and split prefixes of expressions\n    sanitise(node, text, pack) {\n      let rep = node.unescape;\n      if (rep) {\n        let idx = 0;\n        rep = `\\\\${rep}`;\n        while ((idx = text.indexOf(rep, idx)) !== -1) {\n          text = text.substr(0, idx) + text.substr(idx + 1);\n          idx++;\n        }\n      }\n\n      text = escapeSlashes(text);\n\n      return pack ? cleanSpaces(text) : escapeReturn(text)\n    },\n  });\n\n  function createTreeBuilder(data, options) {\n    const root = {\n      type: TAG$1,\n      name: '',\n      start: 0,\n      end: 0,\n      nodes: [],\n    };\n\n    return Object.assign(Object.create(TREE_BUILDER_STRUCT), {\n      compact: options.compact !== false,\n      store: {\n        last: root,\n        stack: [],\n        scryle: null,\n        root,\n        style: null,\n        script: null,\n        data,\n      },\n    })\n  }\n\n  /**\n   * Factory for the Parser class, exposing only the `parse` method.\n   * The export adds the Parser class as property.\n   *\n   * @param   {Object}   options - User Options\n   * @param   {Function} customBuilder - Tree builder factory\n   * @returns {Function} Public Parser implementation.\n   */\n  function parser$1(options, customBuilder) {\n    const state = curry$1(createParserState)(options, createTreeBuilder);\n    return {\n      parse: (data) => parse$2(state(data)),\n    }\n  }\n\n  /**\n   * Create a new state object\n   * @param   {Object} userOptions - parser options\n   * @param   {Function} builder - Tree builder factory\n   * @param   {string} data - data to parse\n   * @returns {ParserState} it represents the current parser state\n   */\n  function createParserState(userOptions, builder, data) {\n    const options = Object.assign(\n      {\n        brackets: ['{', '}'],\n      },\n      userOptions,\n    );\n\n    return {\n      options,\n      regexCache: {},\n      pos: 0,\n      count: -1,\n      root: null,\n      last: null,\n      scryle: null,\n      builder: builder(data, options),\n      data,\n    }\n  }\n\n  /**\n   * It creates a raw output of pseudo-nodes with one of three different types,\n   * all of them having a start/end position:\n   *\n   * - TAG     -- Opening or closing tags\n   * - TEXT    -- Raw text\n   * - COMMENT -- Comments\n   *\n   * @param   {ParserState}  state - Current parser state\n   * @returns {ParserResult} Result, contains data and output properties.\n   */\n  function parse$2(state) {\n    const { data } = state;\n\n    walk(state);\n    flush(state);\n\n    if (state.count) {\n      panic(\n        data,\n        state.count > 0 ? unexpectedEndOfFile : rootTagNotFound,\n        state.pos,\n      );\n    }\n\n    return {\n      data,\n      output: state.builder.get(),\n    }\n  }\n\n  /**\n   * Parser walking recursive function\n   * @param {ParserState}  state - Current parser state\n   * @param {string} type - current parsing context\n   * @returns {undefined} void function\n   */\n  function walk(state, type) {\n    const { data } = state;\n    // extend the state adding the tree builder instance and the initial data\n    const length = data.length;\n\n    // The \"count\" property is set to 1 when the first tag is found.\n    // This becomes the root and precedent text or comments are discarded.\n    // So, at the end of the parsing count must be zero.\n    if (state.pos < length && state.count) {\n      walk(state, eat(state, type));\n    }\n  }\n\n  /**\n   * Function to help iterating on the current parser state\n   * @param {ParserState}  state - Current parser state\n   * @param   {string} type - current parsing context\n   * @returns {string} parsing context\n   */\n  function eat(state, type) {\n    switch (type) {\n      case TAG$1:\n        return tag(state)\n      case ATTR:\n        return attr(state)\n      default:\n        return text(state)\n    }\n  }\n\n  /**\n   * Expose the internal constants\n   */\n  const constants = c;\n\n  /**\n   * The nodeTypes definition\n   */\n  const nodeTypes = types$3;\n\n  const BINDING_TYPES = 'bindingTypes';\n  const EACH_BINDING_TYPE = 'EACH';\n  const IF_BINDING_TYPE = 'IF';\n  const TAG_BINDING_TYPE = 'TAG';\n  const SLOT_BINDING_TYPE = 'SLOT';\n\n  const EXPRESSION_TYPES = 'expressionTypes';\n  const ATTRIBUTE_EXPRESSION_TYPE = 'ATTRIBUTE';\n  const VALUE_EXPRESSION_TYPE = 'VALUE';\n  const TEXT_EXPRESSION_TYPE = 'TEXT';\n  const EVENT_EXPRESSION_TYPE = 'EVENT';\n\n  const TEMPLATE_FN = 'template';\n  const SCOPE = '_scope';\n  const GET_COMPONENT_FN = 'getComponent';\n\n  // keys needed to create the DOM bindings\n  const BINDING_SELECTOR_KEY = 'selector';\n  const BINDING_GET_COMPONENT_KEY = 'getComponent';\n  const BINDING_TEMPLATE_KEY = 'template';\n  const BINDING_TYPE_KEY = 'type';\n  const BINDING_REDUNDANT_ATTRIBUTE_KEY = 'redundantAttribute';\n  const BINDING_CONDITION_KEY = 'condition';\n  const BINDING_ITEM_NAME_KEY = 'itemName';\n  const BINDING_GET_KEY_KEY = 'getKey';\n  const BINDING_INDEX_NAME_KEY = 'indexName';\n  const BINDING_EVALUATE_KEY = 'evaluate';\n  const BINDING_NAME_KEY = 'name';\n  const BINDING_SLOTS_KEY = 'slots';\n  const BINDING_EXPRESSIONS_KEY = 'expressions';\n  const BINDING_IS_BOOLEAN_ATTRIBUTE = 'isBoolean';\n  const BINDING_CHILD_NODE_INDEX_KEY = 'childNodeIndex';\n  // slots keys\n  const BINDING_BINDINGS_KEY = 'bindings';\n  const BINDING_ID_KEY = 'id';\n  const BINDING_HTML_KEY = 'html';\n  const BINDING_ATTRIBUTES_KEY = 'attributes';\n\n  // DOM directives\n  const IF_DIRECTIVE = 'if';\n  const EACH_DIRECTIVE = 'each';\n  const KEY_ATTRIBUTE = 'key';\n  const SLOT_ATTRIBUTE = 'slot';\n  const NAME_ATTRIBUTE = 'name';\n  const IS_DIRECTIVE$1 = 'is';\n\n  // Misc\n  const DEFAULT_SLOT_NAME = 'default';\n  const TEXT_NODE_EXPRESSION_PLACEHOLDER = ' ';\n  const BINDING_SELECTOR_PREFIX = 'expr';\n  const SLOT_TAG_NODE_NAME = 'slot';\n  const PROGRESS_TAG_NODE_NAME = 'progress';\n  const TEMPLATE_TAG_NODE_NAME = 'template';\n\n  // Riot Parser constants\n  constants.IS_RAW;\n  const IS_VOID_NODE = constants.IS_VOID;\n  const IS_CUSTOM_NODE = constants.IS_CUSTOM;\n  const IS_BOOLEAN_ATTRIBUTE = constants.IS_BOOLEAN;\n  const IS_SPREAD_ATTRIBUTE = constants.IS_SPREAD;\n\n  function getDefaultExportFromCjs (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function getAugmentedNamespace(n) {\n    if (n.__esModule) return n;\n    var f = n.default;\n  \tif (typeof f == \"function\") {\n  \t\tvar a = function a () {\n  \t\t\tif (this instanceof a) {\n          return Reflect.construct(f, arguments, this.constructor);\n  \t\t\t}\n  \t\t\treturn f.apply(this, arguments);\n  \t\t};\n  \t\ta.prototype = f.prototype;\n    } else a = {};\n    Object.defineProperty(a, '__esModule', {value: true});\n  \tObject.keys(n).forEach(function (k) {\n  \t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n  \t\tObject.defineProperty(a, k, d.get ? d : {\n  \t\t\tenumerable: true,\n  \t\t\tget: function () {\n  \t\t\t\treturn n[k];\n  \t\t\t}\n  \t\t});\n  \t});\n  \treturn a;\n  }\n\n  var main$1 = {};\n\n  /******************************************************************************\n  Copyright (c) Microsoft Corporation.\n\n  Permission to use, copy, modify, and/or distribute this software for any\n  purpose with or without fee is hereby granted.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n  PERFORMANCE OF THIS SOFTWARE.\n  ***************************************************************************** */\n  /* global Reflect, Promise, SuppressedError, Symbol */\n\n  var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null)\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n  };\n\n  function __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n  }\n\n  function __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n  }\n\n  function __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n  }\n\n  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n        var context = {};\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        }\n        else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n  }\n  function __runInitializers(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n  }\n  function __propKey(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n  }\n  function __setFunctionName(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n  }\n  function __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n  }\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n\n  function __generator(thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n  }\n\n  var __createBinding = Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n  }) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n\n  function __exportStar(m, o) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n  }\n\n  function __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  }\n\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n  }\n\n  /** @deprecated */\n  function __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read(arguments[i]));\n    return ar;\n  }\n\n  /** @deprecated */\n  function __spreadArrays() {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n  }\n\n  function __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n  }\n\n  function __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n  }\n\n  function __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n  }\n\n  function __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n  }\n\n  function __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n  }\n\n  function __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n  }\n  var __setModuleDefault = Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  }) : function(o, v) {\n    o[\"default\"] = v;\n  };\n\n  function __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  }\n\n  function __importDefault(mod) {\n    return (mod && mod.__esModule) ? mod : { default: mod };\n  }\n\n  function __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n  }\n\n  function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n  }\n\n  function __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n  }\n\n  function __addDisposableResource(env, value, async) {\n    if (value !== null && value !== void 0) {\n      if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n      var dispose;\n      if (async) {\n          if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n          dispose = value[Symbol.asyncDispose];\n      }\n      if (dispose === void 0) {\n          if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n          dispose = value[Symbol.dispose];\n      }\n      if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n      env.stack.push({ value: value, dispose: dispose, async: async });\n    }\n    else if (async) {\n      env.stack.push({ async: true });\n    }\n    return value;\n  }\n\n  var _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n  };\n\n  function __disposeResources(env) {\n    function fail(e) {\n      env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        catch (e) {\n            fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  }\n\n  var tslib_es6 = {\n    __extends,\n    __assign,\n    __rest,\n    __decorate,\n    __param,\n    __metadata,\n    __awaiter,\n    __generator,\n    __createBinding,\n    __exportStar,\n    __values,\n    __read,\n    __spread,\n    __spreadArrays,\n    __spreadArray,\n    __await,\n    __asyncGenerator,\n    __asyncDelegator,\n    __asyncValues,\n    __makeTemplateObject,\n    __importStar,\n    __importDefault,\n    __classPrivateFieldGet,\n    __classPrivateFieldSet,\n    __classPrivateFieldIn,\n    __addDisposableResource,\n    __disposeResources,\n  };\n\n  var tslib_es6$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    __addDisposableResource: __addDisposableResource,\n    get __assign () { return __assign; },\n    __asyncDelegator: __asyncDelegator,\n    __asyncGenerator: __asyncGenerator,\n    __asyncValues: __asyncValues,\n    __await: __await,\n    __awaiter: __awaiter,\n    __classPrivateFieldGet: __classPrivateFieldGet,\n    __classPrivateFieldIn: __classPrivateFieldIn,\n    __classPrivateFieldSet: __classPrivateFieldSet,\n    __createBinding: __createBinding,\n    __decorate: __decorate,\n    __disposeResources: __disposeResources,\n    __esDecorate: __esDecorate,\n    __exportStar: __exportStar,\n    __extends: __extends,\n    __generator: __generator,\n    __importDefault: __importDefault,\n    __importStar: __importStar,\n    __makeTemplateObject: __makeTemplateObject,\n    __metadata: __metadata,\n    __param: __param,\n    __propKey: __propKey,\n    __read: __read,\n    __rest: __rest,\n    __runInitializers: __runInitializers,\n    __setFunctionName: __setFunctionName,\n    __spread: __spread,\n    __spreadArray: __spreadArray,\n    __spreadArrays: __spreadArrays,\n    __values: __values,\n    default: tslib_es6\n  });\n\n  var require$$0 = /*@__PURE__*/getAugmentedNamespace(tslib_es6$1);\n\n  var require$$1 = undefined;\n\n  var main = {};\n\n  var fork = {exports: {}};\n\n  var types$2 = {exports: {}};\n\n  var shared = {};\n\n  var hasRequiredShared;\n\n  function requireShared () {\n  \tif (hasRequiredShared) return shared;\n  \thasRequiredShared = 1;\n  \tObject.defineProperty(shared, \"__esModule\", { value: true });\n  \tshared.maybeSetModuleExports = void 0;\n  \tvar tslib_1 = require$$0;\n  \tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \tfunction default_1(fork) {\n  \t    var types = fork.use(types_1.default);\n  \t    var Type = types.Type;\n  \t    var builtin = types.builtInTypes;\n  \t    var isNumber = builtin.number;\n  \t    // An example of constructing a new type with arbitrary constraints from\n  \t    // an existing type.\n  \t    function geq(than) {\n  \t        return Type.from(function (value) { return isNumber.check(value) && value >= than; }, isNumber + \" >= \" + than);\n  \t    }\n  \t    // Default value-returning functions that may optionally be passed as a\n  \t    // third argument to Def.prototype.field.\n  \t    var defaults = {\n  \t        // Functions were used because (among other reasons) that's the most\n  \t        // elegant way to allow for the emptyArray one always to give a new\n  \t        // array instance.\n  \t        \"null\": function () { return null; },\n  \t        \"emptyArray\": function () { return []; },\n  \t        \"false\": function () { return false; },\n  \t        \"true\": function () { return true; },\n  \t        \"undefined\": function () { },\n  \t        \"use strict\": function () { return \"use strict\"; }\n  \t    };\n  \t    var naiveIsPrimitive = Type.or(builtin.string, builtin.number, builtin.boolean, builtin.null, builtin.undefined);\n  \t    var isPrimitive = Type.from(function (value) {\n  \t        if (value === null)\n  \t            return true;\n  \t        var type = typeof value;\n  \t        if (type === \"object\" ||\n  \t            type === \"function\") {\n  \t            return false;\n  \t        }\n  \t        return true;\n  \t    }, naiveIsPrimitive.toString());\n  \t    return {\n  \t        geq: geq,\n  \t        defaults: defaults,\n  \t        isPrimitive: isPrimitive,\n  \t    };\n  \t}\n  \tshared.default = default_1;\n  \t// This function accepts a getter function that should return an object\n  \t// conforming to the NodeModule interface above. Typically, this means calling\n  \t// maybeSetModuleExports(() => module) at the very end of any module that has a\n  \t// default export, so the default export value can replace module.exports and\n  \t// thus CommonJS consumers can continue to rely on require(\"./that/module\")\n  \t// returning the default-exported value, rather than always returning an exports\n  \t// object with a default property equal to that value. This function should help\n  \t// preserve backwards compatibility for CommonJS consumers, as a replacement for\n  \t// the ts-add-module-exports package.\n  \tfunction maybeSetModuleExports(moduleGetter) {\n  \t    try {\n  \t        var nodeModule = moduleGetter();\n  \t        var originalExports = nodeModule.exports;\n  \t        var defaultExport = originalExports[\"default\"];\n  \t    }\n  \t    catch (_a) {\n  \t        // It's normal/acceptable for this code to throw a ReferenceError due to\n  \t        // the moduleGetter function attempting to access a non-existent global\n  \t        // `module` variable. That's the reason we use a getter function here:\n  \t        // so the calling code doesn't have to do its own typeof module ===\n  \t        // \"object\" checking (because it's always safe to pass `() => module` as\n  \t        // an argument, even when `module` is not defined in the calling scope).\n  \t        return;\n  \t    }\n  \t    if (defaultExport &&\n  \t        defaultExport !== originalExports &&\n  \t        typeof originalExports === \"object\") {\n  \t        // Make all properties found in originalExports properties of the\n  \t        // default export, including the default property itself, so that\n  \t        // require(nodeModule.id).default === require(nodeModule.id).\n  \t        Object.assign(defaultExport, originalExports, { \"default\": defaultExport });\n  \t        // Object.assign only transfers enumerable properties, and\n  \t        // __esModule is (and should remain) non-enumerable.\n  \t        if (originalExports.__esModule) {\n  \t            Object.defineProperty(defaultExport, \"__esModule\", { value: true });\n  \t        }\n  \t        // This line allows require(nodeModule.id) === defaultExport, rather\n  \t        // than (only) require(nodeModule.id).default === defaultExport.\n  \t        nodeModule.exports = defaultExport;\n  \t    }\n  \t}\n  \tshared.maybeSetModuleExports = maybeSetModuleExports;\n  \t\n  \treturn shared;\n  }\n\n  types$2.exports;\n\n  var hasRequiredTypes;\n\n  function requireTypes () {\n  \tif (hasRequiredTypes) return types$2.exports;\n  \thasRequiredTypes = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\texports.Def = void 0;\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar shared_1 = requireShared();\n  \t\tvar Op = Object.prototype;\n  \t\tvar objToStr = Op.toString;\n  \t\tvar hasOwn = Op.hasOwnProperty;\n  \t\tvar BaseType = /** @class */ (function () {\n  \t\t    function BaseType() {\n  \t\t    }\n  \t\t    BaseType.prototype.assert = function (value, deep) {\n  \t\t        if (!this.check(value, deep)) {\n  \t\t            var str = shallowStringify(value);\n  \t\t            throw new Error(str + \" does not match type \" + this);\n  \t\t        }\n  \t\t        return true;\n  \t\t    };\n  \t\t    BaseType.prototype.arrayOf = function () {\n  \t\t        var elemType = this;\n  \t\t        return new ArrayType(elemType);\n  \t\t    };\n  \t\t    return BaseType;\n  \t\t}());\n  \t\tvar ArrayType = /** @class */ (function (_super) {\n  \t\t    tslib_1.__extends(ArrayType, _super);\n  \t\t    function ArrayType(elemType) {\n  \t\t        var _this = _super.call(this) || this;\n  \t\t        _this.elemType = elemType;\n  \t\t        _this.kind = \"ArrayType\";\n  \t\t        return _this;\n  \t\t    }\n  \t\t    ArrayType.prototype.toString = function () {\n  \t\t        return \"[\" + this.elemType + \"]\";\n  \t\t    };\n  \t\t    ArrayType.prototype.check = function (value, deep) {\n  \t\t        var _this = this;\n  \t\t        return Array.isArray(value) && value.every(function (elem) { return _this.elemType.check(elem, deep); });\n  \t\t    };\n  \t\t    return ArrayType;\n  \t\t}(BaseType));\n  \t\tvar IdentityType = /** @class */ (function (_super) {\n  \t\t    tslib_1.__extends(IdentityType, _super);\n  \t\t    function IdentityType(value) {\n  \t\t        var _this = _super.call(this) || this;\n  \t\t        _this.value = value;\n  \t\t        _this.kind = \"IdentityType\";\n  \t\t        return _this;\n  \t\t    }\n  \t\t    IdentityType.prototype.toString = function () {\n  \t\t        return String(this.value);\n  \t\t    };\n  \t\t    IdentityType.prototype.check = function (value, deep) {\n  \t\t        var result = value === this.value;\n  \t\t        if (!result && typeof deep === \"function\") {\n  \t\t            deep(this, value);\n  \t\t        }\n  \t\t        return result;\n  \t\t    };\n  \t\t    return IdentityType;\n  \t\t}(BaseType));\n  \t\tvar ObjectType = /** @class */ (function (_super) {\n  \t\t    tslib_1.__extends(ObjectType, _super);\n  \t\t    function ObjectType(fields) {\n  \t\t        var _this = _super.call(this) || this;\n  \t\t        _this.fields = fields;\n  \t\t        _this.kind = \"ObjectType\";\n  \t\t        return _this;\n  \t\t    }\n  \t\t    ObjectType.prototype.toString = function () {\n  \t\t        return \"{ \" + this.fields.join(\", \") + \" }\";\n  \t\t    };\n  \t\t    ObjectType.prototype.check = function (value, deep) {\n  \t\t        return (objToStr.call(value) === objToStr.call({}) &&\n  \t\t            this.fields.every(function (field) {\n  \t\t                return field.type.check(value[field.name], deep);\n  \t\t            }));\n  \t\t    };\n  \t\t    return ObjectType;\n  \t\t}(BaseType));\n  \t\tvar OrType = /** @class */ (function (_super) {\n  \t\t    tslib_1.__extends(OrType, _super);\n  \t\t    function OrType(types) {\n  \t\t        var _this = _super.call(this) || this;\n  \t\t        _this.types = types;\n  \t\t        _this.kind = \"OrType\";\n  \t\t        return _this;\n  \t\t    }\n  \t\t    OrType.prototype.toString = function () {\n  \t\t        return this.types.join(\" | \");\n  \t\t    };\n  \t\t    OrType.prototype.check = function (value, deep) {\n  \t\t        if (this.types.some(function (type) { return type.check(value, !!deep); })) {\n  \t\t            return true;\n  \t\t        }\n  \t\t        if (typeof deep === \"function\") {\n  \t\t            deep(this, value);\n  \t\t        }\n  \t\t        return false;\n  \t\t    };\n  \t\t    return OrType;\n  \t\t}(BaseType));\n  \t\tvar PredicateType = /** @class */ (function (_super) {\n  \t\t    tslib_1.__extends(PredicateType, _super);\n  \t\t    function PredicateType(name, predicate) {\n  \t\t        var _this = _super.call(this) || this;\n  \t\t        _this.name = name;\n  \t\t        _this.predicate = predicate;\n  \t\t        _this.kind = \"PredicateType\";\n  \t\t        return _this;\n  \t\t    }\n  \t\t    PredicateType.prototype.toString = function () {\n  \t\t        return this.name;\n  \t\t    };\n  \t\t    PredicateType.prototype.check = function (value, deep) {\n  \t\t        var result = this.predicate(value, deep);\n  \t\t        if (!result && typeof deep === \"function\") {\n  \t\t            deep(this, value);\n  \t\t        }\n  \t\t        return result;\n  \t\t    };\n  \t\t    return PredicateType;\n  \t\t}(BaseType));\n  \t\tvar Def = /** @class */ (function () {\n  \t\t    function Def(type, typeName) {\n  \t\t        this.type = type;\n  \t\t        this.typeName = typeName;\n  \t\t        this.baseNames = [];\n  \t\t        this.ownFields = Object.create(null);\n  \t\t        // Includes own typeName. Populated during finalization.\n  \t\t        this.allSupertypes = Object.create(null);\n  \t\t        // Linear inheritance hierarchy. Populated during finalization.\n  \t\t        this.supertypeList = [];\n  \t\t        // Includes inherited fields.\n  \t\t        this.allFields = Object.create(null);\n  \t\t        // Non-hidden keys of allFields.\n  \t\t        this.fieldNames = [];\n  \t\t        // This property will be overridden as true by individual Def instances\n  \t\t        // when they are finalized.\n  \t\t        this.finalized = false;\n  \t\t        // False by default until .build(...) is called on an instance.\n  \t\t        this.buildable = false;\n  \t\t        this.buildParams = [];\n  \t\t    }\n  \t\t    Def.prototype.isSupertypeOf = function (that) {\n  \t\t        if (that instanceof Def) {\n  \t\t            if (this.finalized !== true ||\n  \t\t                that.finalized !== true) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            return hasOwn.call(that.allSupertypes, this.typeName);\n  \t\t        }\n  \t\t        else {\n  \t\t            throw new Error(that + \" is not a Def\");\n  \t\t        }\n  \t\t    };\n  \t\t    Def.prototype.checkAllFields = function (value, deep) {\n  \t\t        var allFields = this.allFields;\n  \t\t        if (this.finalized !== true) {\n  \t\t            throw new Error(\"\" + this.typeName);\n  \t\t        }\n  \t\t        function checkFieldByName(name) {\n  \t\t            var field = allFields[name];\n  \t\t            var type = field.type;\n  \t\t            var child = field.getValue(value);\n  \t\t            return type.check(child, deep);\n  \t\t        }\n  \t\t        return value !== null &&\n  \t\t            typeof value === \"object\" &&\n  \t\t            Object.keys(allFields).every(checkFieldByName);\n  \t\t    };\n  \t\t    Def.prototype.bases = function () {\n  \t\t        var supertypeNames = [];\n  \t\t        for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t            supertypeNames[_i] = arguments[_i];\n  \t\t        }\n  \t\t        var bases = this.baseNames;\n  \t\t        if (this.finalized) {\n  \t\t            if (supertypeNames.length !== bases.length) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            for (var i = 0; i < supertypeNames.length; i++) {\n  \t\t                if (supertypeNames[i] !== bases[i]) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t            }\n  \t\t            return this;\n  \t\t        }\n  \t\t        supertypeNames.forEach(function (baseName) {\n  \t\t            // This indexOf lookup may be O(n), but the typical number of base\n  \t\t            // names is very small, and indexOf is a native Array method.\n  \t\t            if (bases.indexOf(baseName) < 0) {\n  \t\t                bases.push(baseName);\n  \t\t            }\n  \t\t        });\n  \t\t        return this; // For chaining.\n  \t\t    };\n  \t\t    return Def;\n  \t\t}());\n  \t\texports.Def = Def;\n  \t\tvar Field = /** @class */ (function () {\n  \t\t    function Field(name, type, defaultFn, hidden) {\n  \t\t        this.name = name;\n  \t\t        this.type = type;\n  \t\t        this.defaultFn = defaultFn;\n  \t\t        this.hidden = !!hidden;\n  \t\t    }\n  \t\t    Field.prototype.toString = function () {\n  \t\t        return JSON.stringify(this.name) + \": \" + this.type;\n  \t\t    };\n  \t\t    Field.prototype.getValue = function (obj) {\n  \t\t        var value = obj[this.name];\n  \t\t        if (typeof value !== \"undefined\") {\n  \t\t            return value;\n  \t\t        }\n  \t\t        if (typeof this.defaultFn === \"function\") {\n  \t\t            value = this.defaultFn.call(obj);\n  \t\t        }\n  \t\t        return value;\n  \t\t    };\n  \t\t    return Field;\n  \t\t}());\n  \t\tfunction shallowStringify(value) {\n  \t\t    if (Array.isArray(value)) {\n  \t\t        return \"[\" + value.map(shallowStringify).join(\", \") + \"]\";\n  \t\t    }\n  \t\t    if (value && typeof value === \"object\") {\n  \t\t        return \"{ \" + Object.keys(value).map(function (key) {\n  \t\t            return key + \": \" + value[key];\n  \t\t        }).join(\", \") + \" }\";\n  \t\t    }\n  \t\t    return JSON.stringify(value);\n  \t\t}\n  \t\tfunction typesPlugin(_fork) {\n  \t\t    var Type = {\n  \t\t        or: function () {\n  \t\t            var types = [];\n  \t\t            for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t                types[_i] = arguments[_i];\n  \t\t            }\n  \t\t            return new OrType(types.map(function (type) { return Type.from(type); }));\n  \t\t        },\n  \t\t        from: function (value, name) {\n  \t\t            if (value instanceof ArrayType ||\n  \t\t                value instanceof IdentityType ||\n  \t\t                value instanceof ObjectType ||\n  \t\t                value instanceof OrType ||\n  \t\t                value instanceof PredicateType) {\n  \t\t                return value;\n  \t\t            }\n  \t\t            // The Def type is used as a helper for constructing compound\n  \t\t            // interface types for AST nodes.\n  \t\t            if (value instanceof Def) {\n  \t\t                return value.type;\n  \t\t            }\n  \t\t            // Support [ElemType] syntax.\n  \t\t            if (isArray.check(value)) {\n  \t\t                if (value.length !== 1) {\n  \t\t                    throw new Error(\"only one element type is permitted for typed arrays\");\n  \t\t                }\n  \t\t                return new ArrayType(Type.from(value[0]));\n  \t\t            }\n  \t\t            // Support { someField: FieldType, ... } syntax.\n  \t\t            if (isObject.check(value)) {\n  \t\t                return new ObjectType(Object.keys(value).map(function (name) {\n  \t\t                    return new Field(name, Type.from(value[name], name));\n  \t\t                }));\n  \t\t            }\n  \t\t            if (typeof value === \"function\") {\n  \t\t                var bicfIndex = builtInCtorFns.indexOf(value);\n  \t\t                if (bicfIndex >= 0) {\n  \t\t                    return builtInCtorTypes[bicfIndex];\n  \t\t                }\n  \t\t                if (typeof name !== \"string\") {\n  \t\t                    throw new Error(\"missing name\");\n  \t\t                }\n  \t\t                return new PredicateType(name, value);\n  \t\t            }\n  \t\t            // As a last resort, toType returns a type that matches any value that\n  \t\t            // is === from. This is primarily useful for literal values like\n  \t\t            // toType(null), but it has the additional advantage of allowing\n  \t\t            // toType to be a total function.\n  \t\t            return new IdentityType(value);\n  \t\t        },\n  \t\t        // Define a type whose name is registered in a namespace (the defCache) so\n  \t\t        // that future definitions will return the same type given the same name.\n  \t\t        // In particular, this system allows for circular and forward definitions.\n  \t\t        // The Def object d returned from Type.def may be used to configure the\n  \t\t        // type d.type by calling methods such as d.bases, d.build, and d.field.\n  \t\t        def: function (typeName) {\n  \t\t            return hasOwn.call(defCache, typeName)\n  \t\t                ? defCache[typeName]\n  \t\t                : defCache[typeName] = new DefImpl(typeName);\n  \t\t        },\n  \t\t        hasDef: function (typeName) {\n  \t\t            return hasOwn.call(defCache, typeName);\n  \t\t        }\n  \t\t    };\n  \t\t    var builtInCtorFns = [];\n  \t\t    var builtInCtorTypes = [];\n  \t\t    function defBuiltInType(name, example) {\n  \t\t        var objStr = objToStr.call(example);\n  \t\t        var type = new PredicateType(name, function (value) { return objToStr.call(value) === objStr; });\n  \t\t        if (example && typeof example.constructor === \"function\") {\n  \t\t            builtInCtorFns.push(example.constructor);\n  \t\t            builtInCtorTypes.push(type);\n  \t\t        }\n  \t\t        return type;\n  \t\t    }\n  \t\t    // These types check the underlying [[Class]] attribute of the given\n  \t\t    // value, rather than using the problematic typeof operator. Note however\n  \t\t    // that no subtyping is considered; so, for instance, isObject.check\n  \t\t    // returns false for [], /./, new Date, and null.\n  \t\t    var isString = defBuiltInType(\"string\", \"truthy\");\n  \t\t    var isFunction = defBuiltInType(\"function\", function () { });\n  \t\t    var isArray = defBuiltInType(\"array\", []);\n  \t\t    var isObject = defBuiltInType(\"object\", {});\n  \t\t    var isRegExp = defBuiltInType(\"RegExp\", /./);\n  \t\t    var isDate = defBuiltInType(\"Date\", new Date());\n  \t\t    var isNumber = defBuiltInType(\"number\", 3);\n  \t\t    var isBoolean = defBuiltInType(\"boolean\", true);\n  \t\t    var isNull = defBuiltInType(\"null\", null);\n  \t\t    var isUndefined = defBuiltInType(\"undefined\", undefined);\n  \t\t    var isBigInt = typeof BigInt === \"function\"\n  \t\t        ? defBuiltInType(\"BigInt\", BigInt(1234))\n  \t\t        : new PredicateType(\"BigInt\", function () { return false; });\n  \t\t    var builtInTypes = {\n  \t\t        string: isString,\n  \t\t        function: isFunction,\n  \t\t        array: isArray,\n  \t\t        object: isObject,\n  \t\t        RegExp: isRegExp,\n  \t\t        Date: isDate,\n  \t\t        number: isNumber,\n  \t\t        boolean: isBoolean,\n  \t\t        null: isNull,\n  \t\t        undefined: isUndefined,\n  \t\t        BigInt: isBigInt,\n  \t\t    };\n  \t\t    // In order to return the same Def instance every time Type.def is called\n  \t\t    // with a particular name, those instances need to be stored in a cache.\n  \t\t    var defCache = Object.create(null);\n  \t\t    function defFromValue(value) {\n  \t\t        if (value && typeof value === \"object\") {\n  \t\t            var type = value.type;\n  \t\t            if (typeof type === \"string\" &&\n  \t\t                hasOwn.call(defCache, type)) {\n  \t\t                var d = defCache[type];\n  \t\t                if (d.finalized) {\n  \t\t                    return d;\n  \t\t                }\n  \t\t            }\n  \t\t        }\n  \t\t        return null;\n  \t\t    }\n  \t\t    var DefImpl = /** @class */ (function (_super) {\n  \t\t        tslib_1.__extends(DefImpl, _super);\n  \t\t        function DefImpl(typeName) {\n  \t\t            var _this = _super.call(this, new PredicateType(typeName, function (value, deep) { return _this.check(value, deep); }), typeName) || this;\n  \t\t            return _this;\n  \t\t        }\n  \t\t        DefImpl.prototype.check = function (value, deep) {\n  \t\t            if (this.finalized !== true) {\n  \t\t                throw new Error(\"prematurely checking unfinalized type \" + this.typeName);\n  \t\t            }\n  \t\t            // A Def type can only match an object value.\n  \t\t            if (value === null || typeof value !== \"object\") {\n  \t\t                return false;\n  \t\t            }\n  \t\t            var vDef = defFromValue(value);\n  \t\t            if (!vDef) {\n  \t\t                // If we couldn't infer the Def associated with the given value,\n  \t\t                // and we expected it to be a SourceLocation or a Position, it was\n  \t\t                // probably just missing a \"type\" field (because Esprima does not\n  \t\t                // assign a type property to such nodes). Be optimistic and let\n  \t\t                // this.checkAllFields make the final decision.\n  \t\t                if (this.typeName === \"SourceLocation\" ||\n  \t\t                    this.typeName === \"Position\") {\n  \t\t                    return this.checkAllFields(value, deep);\n  \t\t                }\n  \t\t                // Calling this.checkAllFields for any other type of node is both\n  \t\t                // bad for performance and way too forgiving.\n  \t\t                return false;\n  \t\t            }\n  \t\t            // If checking deeply and vDef === this, then we only need to call\n  \t\t            // checkAllFields once. Calling checkAllFields is too strict when deep\n  \t\t            // is false, because then we only care about this.isSupertypeOf(vDef).\n  \t\t            if (deep && vDef === this) {\n  \t\t                return this.checkAllFields(value, deep);\n  \t\t            }\n  \t\t            // In most cases we rely exclusively on isSupertypeOf to make O(1)\n  \t\t            // subtyping determinations. This suffices in most situations outside\n  \t\t            // of unit tests, since interface conformance is checked whenever new\n  \t\t            // instances are created using builder functions.\n  \t\t            if (!this.isSupertypeOf(vDef)) {\n  \t\t                return false;\n  \t\t            }\n  \t\t            // The exception is when deep is true; then, we recursively check all\n  \t\t            // fields.\n  \t\t            if (!deep) {\n  \t\t                return true;\n  \t\t            }\n  \t\t            // Use the more specific Def (vDef) to perform the deep check, but\n  \t\t            // shallow-check fields defined by the less specific Def (this).\n  \t\t            return vDef.checkAllFields(value, deep)\n  \t\t                && this.checkAllFields(value, false);\n  \t\t        };\n  \t\t        DefImpl.prototype.build = function () {\n  \t\t            var _this = this;\n  \t\t            var buildParams = [];\n  \t\t            for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t                buildParams[_i] = arguments[_i];\n  \t\t            }\n  \t\t            // Calling Def.prototype.build multiple times has the effect of merely\n  \t\t            // redefining this property.\n  \t\t            this.buildParams = buildParams;\n  \t\t            if (this.buildable) {\n  \t\t                // If this Def is already buildable, update self.buildParams and\n  \t\t                // continue using the old builder function.\n  \t\t                return this;\n  \t\t            }\n  \t\t            // Every buildable type will have its \"type\" field filled in\n  \t\t            // automatically. This includes types that are not subtypes of Node,\n  \t\t            // like SourceLocation, but that seems harmless (TODO?).\n  \t\t            this.field(\"type\", String, function () { return _this.typeName; });\n  \t\t            // Override Dp.buildable for this Def instance.\n  \t\t            this.buildable = true;\n  \t\t            var addParam = function (built, param, arg, isArgAvailable) {\n  \t\t                if (hasOwn.call(built, param))\n  \t\t                    return;\n  \t\t                var all = _this.allFields;\n  \t\t                if (!hasOwn.call(all, param)) {\n  \t\t                    throw new Error(\"\" + param);\n  \t\t                }\n  \t\t                var field = all[param];\n  \t\t                var type = field.type;\n  \t\t                var value;\n  \t\t                if (isArgAvailable) {\n  \t\t                    value = arg;\n  \t\t                }\n  \t\t                else if (field.defaultFn) {\n  \t\t                    // Expose the partially-built object to the default\n  \t\t                    // function as its `this` object.\n  \t\t                    value = field.defaultFn.call(built);\n  \t\t                }\n  \t\t                else {\n  \t\t                    var message = \"no value or default function given for field \" +\n  \t\t                        JSON.stringify(param) + \" of \" + _this.typeName + \"(\" +\n  \t\t                        _this.buildParams.map(function (name) {\n  \t\t                            return all[name];\n  \t\t                        }).join(\", \") + \")\";\n  \t\t                    throw new Error(message);\n  \t\t                }\n  \t\t                if (!type.check(value)) {\n  \t\t                    throw new Error(shallowStringify(value) +\n  \t\t                        \" does not match field \" + field +\n  \t\t                        \" of type \" + _this.typeName);\n  \t\t                }\n  \t\t                built[param] = value;\n  \t\t            };\n  \t\t            // Calling the builder function will construct an instance of the Def,\n  \t\t            // with positional arguments mapped to the fields original passed to .build.\n  \t\t            // If not enough arguments are provided, the default value for the remaining fields\n  \t\t            // will be used.\n  \t\t            var builder = function () {\n  \t\t                var args = [];\n  \t\t                for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t                    args[_i] = arguments[_i];\n  \t\t                }\n  \t\t                var argc = args.length;\n  \t\t                if (!_this.finalized) {\n  \t\t                    throw new Error(\"attempting to instantiate unfinalized type \" +\n  \t\t                        _this.typeName);\n  \t\t                }\n  \t\t                var built = Object.create(nodePrototype);\n  \t\t                _this.buildParams.forEach(function (param, i) {\n  \t\t                    if (i < argc) {\n  \t\t                        addParam(built, param, args[i], true);\n  \t\t                    }\n  \t\t                    else {\n  \t\t                        addParam(built, param, null, false);\n  \t\t                    }\n  \t\t                });\n  \t\t                Object.keys(_this.allFields).forEach(function (param) {\n  \t\t                    // Use the default value.\n  \t\t                    addParam(built, param, null, false);\n  \t\t                });\n  \t\t                // Make sure that the \"type\" field was filled automatically.\n  \t\t                if (built.type !== _this.typeName) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t                return built;\n  \t\t            };\n  \t\t            // Calling .from on the builder function will construct an instance of the Def,\n  \t\t            // using field values from the passed object. For fields missing from the passed object,\n  \t\t            // their default value will be used.\n  \t\t            builder.from = function (obj) {\n  \t\t                if (!_this.finalized) {\n  \t\t                    throw new Error(\"attempting to instantiate unfinalized type \" +\n  \t\t                        _this.typeName);\n  \t\t                }\n  \t\t                var built = Object.create(nodePrototype);\n  \t\t                Object.keys(_this.allFields).forEach(function (param) {\n  \t\t                    if (hasOwn.call(obj, param)) {\n  \t\t                        addParam(built, param, obj[param], true);\n  \t\t                    }\n  \t\t                    else {\n  \t\t                        addParam(built, param, null, false);\n  \t\t                    }\n  \t\t                });\n  \t\t                // Make sure that the \"type\" field was filled automatically.\n  \t\t                if (built.type !== _this.typeName) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t                return built;\n  \t\t            };\n  \t\t            Object.defineProperty(builders, getBuilderName(this.typeName), {\n  \t\t                enumerable: true,\n  \t\t                value: builder\n  \t\t            });\n  \t\t            return this;\n  \t\t        };\n  \t\t        // The reason fields are specified using .field(...) instead of an object\n  \t\t        // literal syntax is somewhat subtle: the object literal syntax would\n  \t\t        // support only one key and one value, but with .field(...) we can pass\n  \t\t        // any number of arguments to specify the field.\n  \t\t        DefImpl.prototype.field = function (name, type, defaultFn, hidden) {\n  \t\t            if (this.finalized) {\n  \t\t                console.error(\"Ignoring attempt to redefine field \" +\n  \t\t                    JSON.stringify(name) + \" of finalized type \" +\n  \t\t                    JSON.stringify(this.typeName));\n  \t\t                return this;\n  \t\t            }\n  \t\t            this.ownFields[name] = new Field(name, Type.from(type), defaultFn, hidden);\n  \t\t            return this; // For chaining.\n  \t\t        };\n  \t\t        DefImpl.prototype.finalize = function () {\n  \t\t            var _this = this;\n  \t\t            // It's not an error to finalize a type more than once, but only the\n  \t\t            // first call to .finalize does anything.\n  \t\t            if (!this.finalized) {\n  \t\t                var allFields = this.allFields;\n  \t\t                var allSupertypes = this.allSupertypes;\n  \t\t                this.baseNames.forEach(function (name) {\n  \t\t                    var def = defCache[name];\n  \t\t                    if (def instanceof Def) {\n  \t\t                        def.finalize();\n  \t\t                        extend(allFields, def.allFields);\n  \t\t                        extend(allSupertypes, def.allSupertypes);\n  \t\t                    }\n  \t\t                    else {\n  \t\t                        var message = \"unknown supertype name \" +\n  \t\t                            JSON.stringify(name) +\n  \t\t                            \" for subtype \" +\n  \t\t                            JSON.stringify(_this.typeName);\n  \t\t                        throw new Error(message);\n  \t\t                    }\n  \t\t                });\n  \t\t                // TODO Warn if fields are overridden with incompatible types.\n  \t\t                extend(allFields, this.ownFields);\n  \t\t                allSupertypes[this.typeName] = this;\n  \t\t                this.fieldNames.length = 0;\n  \t\t                for (var fieldName in allFields) {\n  \t\t                    if (hasOwn.call(allFields, fieldName) &&\n  \t\t                        !allFields[fieldName].hidden) {\n  \t\t                        this.fieldNames.push(fieldName);\n  \t\t                    }\n  \t\t                }\n  \t\t                // Types are exported only once they have been finalized.\n  \t\t                Object.defineProperty(namedTypes, this.typeName, {\n  \t\t                    enumerable: true,\n  \t\t                    value: this.type\n  \t\t                });\n  \t\t                this.finalized = true;\n  \t\t                // A linearization of the inheritance hierarchy.\n  \t\t                populateSupertypeList(this.typeName, this.supertypeList);\n  \t\t                if (this.buildable &&\n  \t\t                    this.supertypeList.lastIndexOf(\"Expression\") >= 0) {\n  \t\t                    wrapExpressionBuilderWithStatement(this.typeName);\n  \t\t                }\n  \t\t            }\n  \t\t        };\n  \t\t        return DefImpl;\n  \t\t    }(Def));\n  \t\t    // Note that the list returned by this function is a copy of the internal\n  \t\t    // supertypeList, *without* the typeName itself as the first element.\n  \t\t    function getSupertypeNames(typeName) {\n  \t\t        if (!hasOwn.call(defCache, typeName)) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        var d = defCache[typeName];\n  \t\t        if (d.finalized !== true) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        return d.supertypeList.slice(1);\n  \t\t    }\n  \t\t    // Returns an object mapping from every known type in the defCache to the\n  \t\t    // most specific supertype whose name is an own property of the candidates\n  \t\t    // object.\n  \t\t    function computeSupertypeLookupTable(candidates) {\n  \t\t        var table = {};\n  \t\t        var typeNames = Object.keys(defCache);\n  \t\t        var typeNameCount = typeNames.length;\n  \t\t        for (var i = 0; i < typeNameCount; ++i) {\n  \t\t            var typeName = typeNames[i];\n  \t\t            var d = defCache[typeName];\n  \t\t            if (d.finalized !== true) {\n  \t\t                throw new Error(\"\" + typeName);\n  \t\t            }\n  \t\t            for (var j = 0; j < d.supertypeList.length; ++j) {\n  \t\t                var superTypeName = d.supertypeList[j];\n  \t\t                if (hasOwn.call(candidates, superTypeName)) {\n  \t\t                    table[typeName] = superTypeName;\n  \t\t                    break;\n  \t\t                }\n  \t\t            }\n  \t\t        }\n  \t\t        return table;\n  \t\t    }\n  \t\t    var builders = Object.create(null);\n  \t\t    // This object is used as prototype for any node created by a builder.\n  \t\t    var nodePrototype = {};\n  \t\t    // Call this function to define a new method to be shared by all AST\n  \t\t    // nodes. The replaced method (if any) is returned for easy wrapping.\n  \t\t    function defineMethod(name, func) {\n  \t\t        var old = nodePrototype[name];\n  \t\t        // Pass undefined as func to delete nodePrototype[name].\n  \t\t        if (isUndefined.check(func)) {\n  \t\t            delete nodePrototype[name];\n  \t\t        }\n  \t\t        else {\n  \t\t            isFunction.assert(func);\n  \t\t            Object.defineProperty(nodePrototype, name, {\n  \t\t                enumerable: true,\n  \t\t                configurable: true,\n  \t\t                value: func\n  \t\t            });\n  \t\t        }\n  \t\t        return old;\n  \t\t    }\n  \t\t    function getBuilderName(typeName) {\n  \t\t        return typeName.replace(/^[A-Z]+/, function (upperCasePrefix) {\n  \t\t            var len = upperCasePrefix.length;\n  \t\t            switch (len) {\n  \t\t                case 0: return \"\";\n  \t\t                // If there's only one initial capital letter, just lower-case it.\n  \t\t                case 1: return upperCasePrefix.toLowerCase();\n  \t\t                default:\n  \t\t                    // If there's more than one initial capital letter, lower-case\n  \t\t                    // all but the last one, so that XMLDefaultDeclaration (for\n  \t\t                    // example) becomes xmlDefaultDeclaration.\n  \t\t                    return upperCasePrefix.slice(0, len - 1).toLowerCase() +\n  \t\t                        upperCasePrefix.charAt(len - 1);\n  \t\t            }\n  \t\t        });\n  \t\t    }\n  \t\t    function getStatementBuilderName(typeName) {\n  \t\t        typeName = getBuilderName(typeName);\n  \t\t        return typeName.replace(/(Expression)?$/, \"Statement\");\n  \t\t    }\n  \t\t    var namedTypes = {};\n  \t\t    // Like Object.keys, but aware of what fields each AST type should have.\n  \t\t    function getFieldNames(object) {\n  \t\t        var d = defFromValue(object);\n  \t\t        if (d) {\n  \t\t            return d.fieldNames.slice(0);\n  \t\t        }\n  \t\t        if (\"type\" in object) {\n  \t\t            throw new Error(\"did not recognize object of type \" +\n  \t\t                JSON.stringify(object.type));\n  \t\t        }\n  \t\t        return Object.keys(object);\n  \t\t    }\n  \t\t    // Get the value of an object property, taking object.type and default\n  \t\t    // functions into account.\n  \t\t    function getFieldValue(object, fieldName) {\n  \t\t        var d = defFromValue(object);\n  \t\t        if (d) {\n  \t\t            var field = d.allFields[fieldName];\n  \t\t            if (field) {\n  \t\t                return field.getValue(object);\n  \t\t            }\n  \t\t        }\n  \t\t        return object && object[fieldName];\n  \t\t    }\n  \t\t    // Iterate over all defined fields of an object, including those missing\n  \t\t    // or undefined, passing each field name and effective value (as returned\n  \t\t    // by getFieldValue) to the callback. If the object has no corresponding\n  \t\t    // Def, the callback will never be called.\n  \t\t    function eachField(object, callback, context) {\n  \t\t        getFieldNames(object).forEach(function (name) {\n  \t\t            callback.call(this, name, getFieldValue(object, name));\n  \t\t        }, context);\n  \t\t    }\n  \t\t    // Similar to eachField, except that iteration stops as soon as the\n  \t\t    // callback returns a truthy value. Like Array.prototype.some, the final\n  \t\t    // result is either true or false to indicates whether the callback\n  \t\t    // returned true for any element or not.\n  \t\t    function someField(object, callback, context) {\n  \t\t        return getFieldNames(object).some(function (name) {\n  \t\t            return callback.call(this, name, getFieldValue(object, name));\n  \t\t        }, context);\n  \t\t    }\n  \t\t    // Adds an additional builder for Expression subtypes\n  \t\t    // that wraps the built Expression in an ExpressionStatements.\n  \t\t    function wrapExpressionBuilderWithStatement(typeName) {\n  \t\t        var wrapperName = getStatementBuilderName(typeName);\n  \t\t        // skip if the builder already exists\n  \t\t        if (builders[wrapperName])\n  \t\t            return;\n  \t\t        // the builder function to wrap with builders.ExpressionStatement\n  \t\t        var wrapped = builders[getBuilderName(typeName)];\n  \t\t        // skip if there is nothing to wrap\n  \t\t        if (!wrapped)\n  \t\t            return;\n  \t\t        var builder = function () {\n  \t\t            var args = [];\n  \t\t            for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t                args[_i] = arguments[_i];\n  \t\t            }\n  \t\t            return builders.expressionStatement(wrapped.apply(builders, args));\n  \t\t        };\n  \t\t        builder.from = function () {\n  \t\t            var args = [];\n  \t\t            for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t                args[_i] = arguments[_i];\n  \t\t            }\n  \t\t            return builders.expressionStatement(wrapped.from.apply(builders, args));\n  \t\t        };\n  \t\t        builders[wrapperName] = builder;\n  \t\t    }\n  \t\t    function populateSupertypeList(typeName, list) {\n  \t\t        list.length = 0;\n  \t\t        list.push(typeName);\n  \t\t        var lastSeen = Object.create(null);\n  \t\t        for (var pos = 0; pos < list.length; ++pos) {\n  \t\t            typeName = list[pos];\n  \t\t            var d = defCache[typeName];\n  \t\t            if (d.finalized !== true) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            // If we saw typeName earlier in the breadth-first traversal,\n  \t\t            // delete the last-seen occurrence.\n  \t\t            if (hasOwn.call(lastSeen, typeName)) {\n  \t\t                delete list[lastSeen[typeName]];\n  \t\t            }\n  \t\t            // Record the new index of the last-seen occurrence of typeName.\n  \t\t            lastSeen[typeName] = pos;\n  \t\t            // Enqueue the base names of this type.\n  \t\t            list.push.apply(list, d.baseNames);\n  \t\t        }\n  \t\t        // Compaction loop to remove array holes.\n  \t\t        for (var to = 0, from = to, len = list.length; from < len; ++from) {\n  \t\t            if (hasOwn.call(list, from)) {\n  \t\t                list[to++] = list[from];\n  \t\t            }\n  \t\t        }\n  \t\t        list.length = to;\n  \t\t    }\n  \t\t    function extend(into, from) {\n  \t\t        Object.keys(from).forEach(function (name) {\n  \t\t            into[name] = from[name];\n  \t\t        });\n  \t\t        return into;\n  \t\t    }\n  \t\t    function finalize() {\n  \t\t        Object.keys(defCache).forEach(function (name) {\n  \t\t            defCache[name].finalize();\n  \t\t        });\n  \t\t    }\n  \t\t    return {\n  \t\t        Type: Type,\n  \t\t        builtInTypes: builtInTypes,\n  \t\t        getSupertypeNames: getSupertypeNames,\n  \t\t        computeSupertypeLookupTable: computeSupertypeLookupTable,\n  \t\t        builders: builders,\n  \t\t        defineMethod: defineMethod,\n  \t\t        getBuilderName: getBuilderName,\n  \t\t        getStatementBuilderName: getStatementBuilderName,\n  \t\t        namedTypes: namedTypes,\n  \t\t        getFieldNames: getFieldNames,\n  \t\t        getFieldValue: getFieldValue,\n  \t\t        eachField: eachField,\n  \t\t        someField: someField,\n  \t\t        finalize: finalize,\n  \t\t    };\n  \t\t}\n  \t\texports.default = typesPlugin;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (types$2, types$2.exports));\n  \treturn types$2.exports;\n  }\n\n  var pathVisitor = {exports: {}};\n\n  var nodePath = {exports: {}};\n\n  var path = {exports: {}};\n\n  path.exports;\n\n  var hasRequiredPath;\n\n  function requirePath () {\n  \tif (hasRequiredPath) return path.exports;\n  \thasRequiredPath = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar shared_1 = requireShared();\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar Op = Object.prototype;\n  \t\tvar hasOwn = Op.hasOwnProperty;\n  \t\tfunction pathPlugin(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var isArray = types.builtInTypes.array;\n  \t\t    var isNumber = types.builtInTypes.number;\n  \t\t    var Path = function Path(value, parentPath, name) {\n  \t\t        if (!(this instanceof Path)) {\n  \t\t            throw new Error(\"Path constructor cannot be invoked without 'new'\");\n  \t\t        }\n  \t\t        if (parentPath) {\n  \t\t            if (!(parentPath instanceof Path)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t        }\n  \t\t        else {\n  \t\t            parentPath = null;\n  \t\t            name = null;\n  \t\t        }\n  \t\t        // The value encapsulated by this Path, generally equal to\n  \t\t        // parentPath.value[name] if we have a parentPath.\n  \t\t        this.value = value;\n  \t\t        // The immediate parent Path of this Path.\n  \t\t        this.parentPath = parentPath;\n  \t\t        // The name of the property of parentPath.value through which this\n  \t\t        // Path's value was reached.\n  \t\t        this.name = name;\n  \t\t        // Calling path.get(\"child\") multiple times always returns the same\n  \t\t        // child Path object, for both performance and consistency reasons.\n  \t\t        this.__childCache = null;\n  \t\t    };\n  \t\t    var Pp = Path.prototype;\n  \t\t    function getChildCache(path) {\n  \t\t        // Lazily create the child cache. This also cheapens cache\n  \t\t        // invalidation, since you can just reset path.__childCache to null.\n  \t\t        return path.__childCache || (path.__childCache = Object.create(null));\n  \t\t    }\n  \t\t    function getChildPath(path, name) {\n  \t\t        var cache = getChildCache(path);\n  \t\t        var actualChildValue = path.getValueProperty(name);\n  \t\t        var childPath = cache[name];\n  \t\t        if (!hasOwn.call(cache, name) ||\n  \t\t            // Ensure consistency between cache and reality.\n  \t\t            childPath.value !== actualChildValue) {\n  \t\t            childPath = cache[name] = new path.constructor(actualChildValue, path, name);\n  \t\t        }\n  \t\t        return childPath;\n  \t\t    }\n  \t\t    // This method is designed to be overridden by subclasses that need to\n  \t\t    // handle missing properties, etc.\n  \t\t    Pp.getValueProperty = function getValueProperty(name) {\n  \t\t        return this.value[name];\n  \t\t    };\n  \t\t    Pp.get = function get() {\n  \t\t        var names = [];\n  \t\t        for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t            names[_i] = arguments[_i];\n  \t\t        }\n  \t\t        var path = this;\n  \t\t        var count = names.length;\n  \t\t        for (var i = 0; i < count; ++i) {\n  \t\t            path = getChildPath(path, names[i]);\n  \t\t        }\n  \t\t        return path;\n  \t\t    };\n  \t\t    Pp.each = function each(callback, context) {\n  \t\t        var childPaths = [];\n  \t\t        var len = this.value.length;\n  \t\t        var i = 0;\n  \t\t        // Collect all the original child paths before invoking the callback.\n  \t\t        for (var i = 0; i < len; ++i) {\n  \t\t            if (hasOwn.call(this.value, i)) {\n  \t\t                childPaths[i] = this.get(i);\n  \t\t            }\n  \t\t        }\n  \t\t        // Invoke the callback on just the original child paths, regardless of\n  \t\t        // any modifications made to the array by the callback. I chose these\n  \t\t        // semantics over cleverly invoking the callback on new elements because\n  \t\t        // this way is much easier to reason about.\n  \t\t        context = context || this;\n  \t\t        for (i = 0; i < len; ++i) {\n  \t\t            if (hasOwn.call(childPaths, i)) {\n  \t\t                callback.call(context, childPaths[i]);\n  \t\t            }\n  \t\t        }\n  \t\t    };\n  \t\t    Pp.map = function map(callback, context) {\n  \t\t        var result = [];\n  \t\t        this.each(function (childPath) {\n  \t\t            result.push(callback.call(this, childPath));\n  \t\t        }, context);\n  \t\t        return result;\n  \t\t    };\n  \t\t    Pp.filter = function filter(callback, context) {\n  \t\t        var result = [];\n  \t\t        this.each(function (childPath) {\n  \t\t            if (callback.call(this, childPath)) {\n  \t\t                result.push(childPath);\n  \t\t            }\n  \t\t        }, context);\n  \t\t        return result;\n  \t\t    };\n  \t\t    function emptyMoves() { }\n  \t\t    function getMoves(path, offset, start, end) {\n  \t\t        isArray.assert(path.value);\n  \t\t        if (offset === 0) {\n  \t\t            return emptyMoves;\n  \t\t        }\n  \t\t        var length = path.value.length;\n  \t\t        if (length < 1) {\n  \t\t            return emptyMoves;\n  \t\t        }\n  \t\t        var argc = arguments.length;\n  \t\t        if (argc === 2) {\n  \t\t            start = 0;\n  \t\t            end = length;\n  \t\t        }\n  \t\t        else if (argc === 3) {\n  \t\t            start = Math.max(start, 0);\n  \t\t            end = length;\n  \t\t        }\n  \t\t        else {\n  \t\t            start = Math.max(start, 0);\n  \t\t            end = Math.min(end, length);\n  \t\t        }\n  \t\t        isNumber.assert(start);\n  \t\t        isNumber.assert(end);\n  \t\t        var moves = Object.create(null);\n  \t\t        var cache = getChildCache(path);\n  \t\t        for (var i = start; i < end; ++i) {\n  \t\t            if (hasOwn.call(path.value, i)) {\n  \t\t                var childPath = path.get(i);\n  \t\t                if (childPath.name !== i) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t                var newIndex = i + offset;\n  \t\t                childPath.name = newIndex;\n  \t\t                moves[newIndex] = childPath;\n  \t\t                delete cache[i];\n  \t\t            }\n  \t\t        }\n  \t\t        delete cache.length;\n  \t\t        return function () {\n  \t\t            for (var newIndex in moves) {\n  \t\t                var childPath = moves[newIndex];\n  \t\t                if (childPath.name !== +newIndex) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t                cache[newIndex] = childPath;\n  \t\t                path.value[newIndex] = childPath.value;\n  \t\t            }\n  \t\t        };\n  \t\t    }\n  \t\t    Pp.shift = function shift() {\n  \t\t        var move = getMoves(this, -1);\n  \t\t        var result = this.value.shift();\n  \t\t        move();\n  \t\t        return result;\n  \t\t    };\n  \t\t    Pp.unshift = function unshift() {\n  \t\t        var args = [];\n  \t\t        for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t            args[_i] = arguments[_i];\n  \t\t        }\n  \t\t        var move = getMoves(this, args.length);\n  \t\t        var result = this.value.unshift.apply(this.value, args);\n  \t\t        move();\n  \t\t        return result;\n  \t\t    };\n  \t\t    Pp.push = function push() {\n  \t\t        var args = [];\n  \t\t        for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t            args[_i] = arguments[_i];\n  \t\t        }\n  \t\t        isArray.assert(this.value);\n  \t\t        delete getChildCache(this).length;\n  \t\t        return this.value.push.apply(this.value, args);\n  \t\t    };\n  \t\t    Pp.pop = function pop() {\n  \t\t        isArray.assert(this.value);\n  \t\t        var cache = getChildCache(this);\n  \t\t        delete cache[this.value.length - 1];\n  \t\t        delete cache.length;\n  \t\t        return this.value.pop();\n  \t\t    };\n  \t\t    Pp.insertAt = function insertAt(index) {\n  \t\t        var argc = arguments.length;\n  \t\t        var move = getMoves(this, argc - 1, index);\n  \t\t        if (move === emptyMoves && argc <= 1) {\n  \t\t            return this;\n  \t\t        }\n  \t\t        index = Math.max(index, 0);\n  \t\t        for (var i = 1; i < argc; ++i) {\n  \t\t            this.value[index + i - 1] = arguments[i];\n  \t\t        }\n  \t\t        move();\n  \t\t        return this;\n  \t\t    };\n  \t\t    Pp.insertBefore = function insertBefore() {\n  \t\t        var args = [];\n  \t\t        for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t            args[_i] = arguments[_i];\n  \t\t        }\n  \t\t        var pp = this.parentPath;\n  \t\t        var argc = args.length;\n  \t\t        var insertAtArgs = [this.name];\n  \t\t        for (var i = 0; i < argc; ++i) {\n  \t\t            insertAtArgs.push(args[i]);\n  \t\t        }\n  \t\t        return pp.insertAt.apply(pp, insertAtArgs);\n  \t\t    };\n  \t\t    Pp.insertAfter = function insertAfter() {\n  \t\t        var args = [];\n  \t\t        for (var _i = 0; _i < arguments.length; _i++) {\n  \t\t            args[_i] = arguments[_i];\n  \t\t        }\n  \t\t        var pp = this.parentPath;\n  \t\t        var argc = args.length;\n  \t\t        var insertAtArgs = [this.name + 1];\n  \t\t        for (var i = 0; i < argc; ++i) {\n  \t\t            insertAtArgs.push(args[i]);\n  \t\t        }\n  \t\t        return pp.insertAt.apply(pp, insertAtArgs);\n  \t\t    };\n  \t\t    function repairRelationshipWithParent(path) {\n  \t\t        if (!(path instanceof Path)) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        var pp = path.parentPath;\n  \t\t        if (!pp) {\n  \t\t            // Orphan paths have no relationship to repair.\n  \t\t            return path;\n  \t\t        }\n  \t\t        var parentValue = pp.value;\n  \t\t        var parentCache = getChildCache(pp);\n  \t\t        // Make sure parentCache[path.name] is populated.\n  \t\t        if (parentValue[path.name] === path.value) {\n  \t\t            parentCache[path.name] = path;\n  \t\t        }\n  \t\t        else if (isArray.check(parentValue)) {\n  \t\t            // Something caused path.name to become out of date, so attempt to\n  \t\t            // recover by searching for path.value in parentValue.\n  \t\t            var i = parentValue.indexOf(path.value);\n  \t\t            if (i >= 0) {\n  \t\t                parentCache[path.name = i] = path;\n  \t\t            }\n  \t\t        }\n  \t\t        else {\n  \t\t            // If path.value disagrees with parentValue[path.name], and\n  \t\t            // path.name is not an array index, let path.value become the new\n  \t\t            // parentValue[path.name] and update parentCache accordingly.\n  \t\t            parentValue[path.name] = path.value;\n  \t\t            parentCache[path.name] = path;\n  \t\t        }\n  \t\t        if (parentValue[path.name] !== path.value) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        if (path.parentPath.get(path.name) !== path) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        return path;\n  \t\t    }\n  \t\t    Pp.replace = function replace(replacement) {\n  \t\t        var results = [];\n  \t\t        var parentValue = this.parentPath.value;\n  \t\t        var parentCache = getChildCache(this.parentPath);\n  \t\t        var count = arguments.length;\n  \t\t        repairRelationshipWithParent(this);\n  \t\t        if (isArray.check(parentValue)) {\n  \t\t            var originalLength = parentValue.length;\n  \t\t            var move = getMoves(this.parentPath, count - 1, this.name + 1);\n  \t\t            var spliceArgs = [this.name, 1];\n  \t\t            for (var i = 0; i < count; ++i) {\n  \t\t                spliceArgs.push(arguments[i]);\n  \t\t            }\n  \t\t            var splicedOut = parentValue.splice.apply(parentValue, spliceArgs);\n  \t\t            if (splicedOut[0] !== this.value) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (parentValue.length !== (originalLength - 1 + count)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            move();\n  \t\t            if (count === 0) {\n  \t\t                delete this.value;\n  \t\t                delete parentCache[this.name];\n  \t\t                this.__childCache = null;\n  \t\t            }\n  \t\t            else {\n  \t\t                if (parentValue[this.name] !== replacement) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t                if (this.value !== replacement) {\n  \t\t                    this.value = replacement;\n  \t\t                    this.__childCache = null;\n  \t\t                }\n  \t\t                for (i = 0; i < count; ++i) {\n  \t\t                    results.push(this.parentPath.get(this.name + i));\n  \t\t                }\n  \t\t                if (results[0] !== this) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t            }\n  \t\t        }\n  \t\t        else if (count === 1) {\n  \t\t            if (this.value !== replacement) {\n  \t\t                this.__childCache = null;\n  \t\t            }\n  \t\t            this.value = parentValue[this.name] = replacement;\n  \t\t            results.push(this);\n  \t\t        }\n  \t\t        else if (count === 0) {\n  \t\t            delete parentValue[this.name];\n  \t\t            delete this.value;\n  \t\t            this.__childCache = null;\n  \t\t            // Leave this path cached as parentCache[this.name], even though\n  \t\t            // it no longer has a value defined.\n  \t\t        }\n  \t\t        else {\n  \t\t            throw new Error(\"Could not replace path\");\n  \t\t        }\n  \t\t        return results;\n  \t\t    };\n  \t\t    return Path;\n  \t\t}\n  \t\texports.default = pathPlugin;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (path, path.exports));\n  \treturn path.exports;\n  }\n\n  var scope$1 = {exports: {}};\n\n  scope$1.exports;\n\n  var hasRequiredScope;\n\n  function requireScope () {\n  \tif (hasRequiredScope) return scope$1.exports;\n  \thasRequiredScope = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar shared_1 = requireShared();\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar hasOwn = Object.prototype.hasOwnProperty;\n  \t\tfunction scopePlugin(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var Type = types.Type;\n  \t\t    var namedTypes = types.namedTypes;\n  \t\t    var Node = namedTypes.Node;\n  \t\t    var Expression = namedTypes.Expression;\n  \t\t    var isArray = types.builtInTypes.array;\n  \t\t    var b = types.builders;\n  \t\t    var Scope = function Scope(path, parentScope) {\n  \t\t        if (!(this instanceof Scope)) {\n  \t\t            throw new Error(\"Scope constructor cannot be invoked without 'new'\");\n  \t\t        }\n  \t\t        if (!TypeParameterScopeType.check(path.value)) {\n  \t\t            ScopeType.assert(path.value);\n  \t\t        }\n  \t\t        var depth;\n  \t\t        if (parentScope) {\n  \t\t            if (!(parentScope instanceof Scope)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            depth = parentScope.depth + 1;\n  \t\t        }\n  \t\t        else {\n  \t\t            parentScope = null;\n  \t\t            depth = 0;\n  \t\t        }\n  \t\t        Object.defineProperties(this, {\n  \t\t            path: { value: path },\n  \t\t            node: { value: path.value },\n  \t\t            isGlobal: { value: !parentScope, enumerable: true },\n  \t\t            depth: { value: depth },\n  \t\t            parent: { value: parentScope },\n  \t\t            bindings: { value: {} },\n  \t\t            types: { value: {} },\n  \t\t        });\n  \t\t    };\n  \t\t    var ScopeType = Type.or(\n  \t\t    // Program nodes introduce global scopes.\n  \t\t    namedTypes.Program, \n  \t\t    // Function is the supertype of FunctionExpression,\n  \t\t    // FunctionDeclaration, ArrowExpression, etc.\n  \t\t    namedTypes.Function, \n  \t\t    // In case you didn't know, the caught parameter shadows any variable\n  \t\t    // of the same name in an outer scope.\n  \t\t    namedTypes.CatchClause);\n  \t\t    // These types introduce scopes that are restricted to type parameters in\n  \t\t    // Flow (this doesn't apply to ECMAScript).\n  \t\t    var TypeParameterScopeType = Type.or(namedTypes.Function, namedTypes.ClassDeclaration, namedTypes.ClassExpression, namedTypes.InterfaceDeclaration, namedTypes.TSInterfaceDeclaration, namedTypes.TypeAlias, namedTypes.TSTypeAliasDeclaration);\n  \t\t    var FlowOrTSTypeParameterType = Type.or(namedTypes.TypeParameter, namedTypes.TSTypeParameter);\n  \t\t    Scope.isEstablishedBy = function (node) {\n  \t\t        return ScopeType.check(node) || TypeParameterScopeType.check(node);\n  \t\t    };\n  \t\t    var Sp = Scope.prototype;\n  \t\t    // Will be overridden after an instance lazily calls scanScope.\n  \t\t    Sp.didScan = false;\n  \t\t    Sp.declares = function (name) {\n  \t\t        this.scan();\n  \t\t        return hasOwn.call(this.bindings, name);\n  \t\t    };\n  \t\t    Sp.declaresType = function (name) {\n  \t\t        this.scan();\n  \t\t        return hasOwn.call(this.types, name);\n  \t\t    };\n  \t\t    Sp.declareTemporary = function (prefix) {\n  \t\t        if (prefix) {\n  \t\t            if (!/^[a-z$_]/i.test(prefix)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t        }\n  \t\t        else {\n  \t\t            prefix = \"t$\";\n  \t\t        }\n  \t\t        // Include this.depth in the name to make sure the name does not\n  \t\t        // collide with any variables in nested/enclosing scopes.\n  \t\t        prefix += this.depth.toString(36) + \"$\";\n  \t\t        this.scan();\n  \t\t        var index = 0;\n  \t\t        while (this.declares(prefix + index)) {\n  \t\t            ++index;\n  \t\t        }\n  \t\t        var name = prefix + index;\n  \t\t        return this.bindings[name] = types.builders.identifier(name);\n  \t\t    };\n  \t\t    Sp.injectTemporary = function (identifier, init) {\n  \t\t        identifier || (identifier = this.declareTemporary());\n  \t\t        var bodyPath = this.path.get(\"body\");\n  \t\t        if (namedTypes.BlockStatement.check(bodyPath.value)) {\n  \t\t            bodyPath = bodyPath.get(\"body\");\n  \t\t        }\n  \t\t        bodyPath.unshift(b.variableDeclaration(\"var\", [b.variableDeclarator(identifier, init || null)]));\n  \t\t        return identifier;\n  \t\t    };\n  \t\t    Sp.scan = function (force) {\n  \t\t        if (force || !this.didScan) {\n  \t\t            for (var name in this.bindings) {\n  \t\t                // Empty out this.bindings, just in cases.\n  \t\t                delete this.bindings[name];\n  \t\t            }\n  \t\t            for (var name in this.types) {\n  \t\t                // Empty out this.types, just in cases.\n  \t\t                delete this.types[name];\n  \t\t            }\n  \t\t            scanScope(this.path, this.bindings, this.types);\n  \t\t            this.didScan = true;\n  \t\t        }\n  \t\t    };\n  \t\t    Sp.getBindings = function () {\n  \t\t        this.scan();\n  \t\t        return this.bindings;\n  \t\t    };\n  \t\t    Sp.getTypes = function () {\n  \t\t        this.scan();\n  \t\t        return this.types;\n  \t\t    };\n  \t\t    function scanScope(path, bindings, scopeTypes) {\n  \t\t        var node = path.value;\n  \t\t        if (TypeParameterScopeType.check(node)) {\n  \t\t            var params = path.get('typeParameters', 'params');\n  \t\t            if (isArray.check(params.value)) {\n  \t\t                params.each(function (childPath) {\n  \t\t                    addTypeParameter(childPath, scopeTypes);\n  \t\t                });\n  \t\t            }\n  \t\t        }\n  \t\t        if (ScopeType.check(node)) {\n  \t\t            if (namedTypes.CatchClause.check(node)) {\n  \t\t                // A catch clause establishes a new scope but the only variable\n  \t\t                // bound in that scope is the catch parameter. Any other\n  \t\t                // declarations create bindings in the outer scope.\n  \t\t                addPattern(path.get(\"param\"), bindings);\n  \t\t            }\n  \t\t            else {\n  \t\t                recursiveScanScope(path, bindings, scopeTypes);\n  \t\t            }\n  \t\t        }\n  \t\t    }\n  \t\t    function recursiveScanScope(path, bindings, scopeTypes) {\n  \t\t        var node = path.value;\n  \t\t        if (path.parent &&\n  \t\t            namedTypes.FunctionExpression.check(path.parent.node) &&\n  \t\t            path.parent.node.id) {\n  \t\t            addPattern(path.parent.get(\"id\"), bindings);\n  \t\t        }\n  \t\t        if (!node) ;\n  \t\t        else if (isArray.check(node)) {\n  \t\t            path.each(function (childPath) {\n  \t\t                recursiveScanChild(childPath, bindings, scopeTypes);\n  \t\t            });\n  \t\t        }\n  \t\t        else if (namedTypes.Function.check(node)) {\n  \t\t            path.get(\"params\").each(function (paramPath) {\n  \t\t                addPattern(paramPath, bindings);\n  \t\t            });\n  \t\t            recursiveScanChild(path.get(\"body\"), bindings, scopeTypes);\n  \t\t            recursiveScanScope(path.get(\"typeParameters\"), bindings, scopeTypes);\n  \t\t        }\n  \t\t        else if ((namedTypes.TypeAlias && namedTypes.TypeAlias.check(node)) ||\n  \t\t            (namedTypes.InterfaceDeclaration && namedTypes.InterfaceDeclaration.check(node)) ||\n  \t\t            (namedTypes.TSTypeAliasDeclaration && namedTypes.TSTypeAliasDeclaration.check(node)) ||\n  \t\t            (namedTypes.TSInterfaceDeclaration && namedTypes.TSInterfaceDeclaration.check(node))) {\n  \t\t            addTypePattern(path.get(\"id\"), scopeTypes);\n  \t\t        }\n  \t\t        else if (namedTypes.VariableDeclarator.check(node)) {\n  \t\t            addPattern(path.get(\"id\"), bindings);\n  \t\t            recursiveScanChild(path.get(\"init\"), bindings, scopeTypes);\n  \t\t        }\n  \t\t        else if (node.type === \"ImportSpecifier\" ||\n  \t\t            node.type === \"ImportNamespaceSpecifier\" ||\n  \t\t            node.type === \"ImportDefaultSpecifier\") {\n  \t\t            addPattern(\n  \t\t            // Esprima used to use the .name field to refer to the local\n  \t\t            // binding identifier for ImportSpecifier nodes, but .id for\n  \t\t            // ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.\n  \t\t            // ESTree/Acorn/ESpree use .local for all three node types.\n  \t\t            path.get(node.local ? \"local\" :\n  \t\t                node.name ? \"name\" : \"id\"), bindings);\n  \t\t        }\n  \t\t        else if (Node.check(node) && !Expression.check(node)) {\n  \t\t            types.eachField(node, function (name, child) {\n  \t\t                var childPath = path.get(name);\n  \t\t                if (!pathHasValue(childPath, child)) {\n  \t\t                    throw new Error(\"\");\n  \t\t                }\n  \t\t                recursiveScanChild(childPath, bindings, scopeTypes);\n  \t\t            });\n  \t\t        }\n  \t\t    }\n  \t\t    function pathHasValue(path, value) {\n  \t\t        if (path.value === value) {\n  \t\t            return true;\n  \t\t        }\n  \t\t        // Empty arrays are probably produced by defaults.emptyArray, in which\n  \t\t        // case is makes sense to regard them as equivalent, if not ===.\n  \t\t        if (Array.isArray(path.value) &&\n  \t\t            path.value.length === 0 &&\n  \t\t            Array.isArray(value) &&\n  \t\t            value.length === 0) {\n  \t\t            return true;\n  \t\t        }\n  \t\t        return false;\n  \t\t    }\n  \t\t    function recursiveScanChild(path, bindings, scopeTypes) {\n  \t\t        var node = path.value;\n  \t\t        if (!node || Expression.check(node)) ;\n  \t\t        else if (namedTypes.FunctionDeclaration.check(node) &&\n  \t\t            node.id !== null) {\n  \t\t            addPattern(path.get(\"id\"), bindings);\n  \t\t        }\n  \t\t        else if (namedTypes.ClassDeclaration &&\n  \t\t            namedTypes.ClassDeclaration.check(node) &&\n  \t\t            node.id !== null) {\n  \t\t            addPattern(path.get(\"id\"), bindings);\n  \t\t            recursiveScanScope(path.get(\"typeParameters\"), bindings, scopeTypes);\n  \t\t        }\n  \t\t        else if ((namedTypes.InterfaceDeclaration &&\n  \t\t            namedTypes.InterfaceDeclaration.check(node)) ||\n  \t\t            (namedTypes.TSInterfaceDeclaration &&\n  \t\t                namedTypes.TSInterfaceDeclaration.check(node))) {\n  \t\t            addTypePattern(path.get(\"id\"), scopeTypes);\n  \t\t        }\n  \t\t        else if (ScopeType.check(node)) {\n  \t\t            if (namedTypes.CatchClause.check(node) &&\n  \t\t                // TODO Broaden this to accept any pattern.\n  \t\t                namedTypes.Identifier.check(node.param)) {\n  \t\t                var catchParamName = node.param.name;\n  \t\t                var hadBinding = hasOwn.call(bindings, catchParamName);\n  \t\t                // Any declarations that occur inside the catch body that do\n  \t\t                // not have the same name as the catch parameter should count\n  \t\t                // as bindings in the outer scope.\n  \t\t                recursiveScanScope(path.get(\"body\"), bindings, scopeTypes);\n  \t\t                // If a new binding matching the catch parameter name was\n  \t\t                // created while scanning the catch body, ignore it because it\n  \t\t                // actually refers to the catch parameter and not the outer\n  \t\t                // scope that we're currently scanning.\n  \t\t                if (!hadBinding) {\n  \t\t                    delete bindings[catchParamName];\n  \t\t                }\n  \t\t            }\n  \t\t        }\n  \t\t        else {\n  \t\t            recursiveScanScope(path, bindings, scopeTypes);\n  \t\t        }\n  \t\t    }\n  \t\t    function addPattern(patternPath, bindings) {\n  \t\t        var pattern = patternPath.value;\n  \t\t        namedTypes.Pattern.assert(pattern);\n  \t\t        if (namedTypes.Identifier.check(pattern)) {\n  \t\t            if (hasOwn.call(bindings, pattern.name)) {\n  \t\t                bindings[pattern.name].push(patternPath);\n  \t\t            }\n  \t\t            else {\n  \t\t                bindings[pattern.name] = [patternPath];\n  \t\t            }\n  \t\t        }\n  \t\t        else if (namedTypes.AssignmentPattern &&\n  \t\t            namedTypes.AssignmentPattern.check(pattern)) {\n  \t\t            addPattern(patternPath.get('left'), bindings);\n  \t\t        }\n  \t\t        else if (namedTypes.ObjectPattern &&\n  \t\t            namedTypes.ObjectPattern.check(pattern)) {\n  \t\t            patternPath.get('properties').each(function (propertyPath) {\n  \t\t                var property = propertyPath.value;\n  \t\t                if (namedTypes.Pattern.check(property)) {\n  \t\t                    addPattern(propertyPath, bindings);\n  \t\t                }\n  \t\t                else if (namedTypes.Property.check(property) ||\n  \t\t                    (namedTypes.ObjectProperty &&\n  \t\t                        namedTypes.ObjectProperty.check(property))) {\n  \t\t                    addPattern(propertyPath.get('value'), bindings);\n  \t\t                }\n  \t\t                else if (namedTypes.SpreadProperty &&\n  \t\t                    namedTypes.SpreadProperty.check(property)) {\n  \t\t                    addPattern(propertyPath.get('argument'), bindings);\n  \t\t                }\n  \t\t            });\n  \t\t        }\n  \t\t        else if (namedTypes.ArrayPattern &&\n  \t\t            namedTypes.ArrayPattern.check(pattern)) {\n  \t\t            patternPath.get('elements').each(function (elementPath) {\n  \t\t                var element = elementPath.value;\n  \t\t                if (namedTypes.Pattern.check(element)) {\n  \t\t                    addPattern(elementPath, bindings);\n  \t\t                }\n  \t\t                else if (namedTypes.SpreadElement &&\n  \t\t                    namedTypes.SpreadElement.check(element)) {\n  \t\t                    addPattern(elementPath.get(\"argument\"), bindings);\n  \t\t                }\n  \t\t            });\n  \t\t        }\n  \t\t        else if (namedTypes.PropertyPattern &&\n  \t\t            namedTypes.PropertyPattern.check(pattern)) {\n  \t\t            addPattern(patternPath.get('pattern'), bindings);\n  \t\t        }\n  \t\t        else if ((namedTypes.SpreadElementPattern &&\n  \t\t            namedTypes.SpreadElementPattern.check(pattern)) ||\n  \t\t            (namedTypes.RestElement &&\n  \t\t                namedTypes.RestElement.check(pattern)) ||\n  \t\t            (namedTypes.SpreadPropertyPattern &&\n  \t\t                namedTypes.SpreadPropertyPattern.check(pattern))) {\n  \t\t            addPattern(patternPath.get('argument'), bindings);\n  \t\t        }\n  \t\t    }\n  \t\t    function addTypePattern(patternPath, types) {\n  \t\t        var pattern = patternPath.value;\n  \t\t        namedTypes.Pattern.assert(pattern);\n  \t\t        if (namedTypes.Identifier.check(pattern)) {\n  \t\t            if (hasOwn.call(types, pattern.name)) {\n  \t\t                types[pattern.name].push(patternPath);\n  \t\t            }\n  \t\t            else {\n  \t\t                types[pattern.name] = [patternPath];\n  \t\t            }\n  \t\t        }\n  \t\t    }\n  \t\t    function addTypeParameter(parameterPath, types) {\n  \t\t        var parameter = parameterPath.value;\n  \t\t        FlowOrTSTypeParameterType.assert(parameter);\n  \t\t        if (hasOwn.call(types, parameter.name)) {\n  \t\t            types[parameter.name].push(parameterPath);\n  \t\t        }\n  \t\t        else {\n  \t\t            types[parameter.name] = [parameterPath];\n  \t\t        }\n  \t\t    }\n  \t\t    Sp.lookup = function (name) {\n  \t\t        for (var scope = this; scope; scope = scope.parent)\n  \t\t            if (scope.declares(name))\n  \t\t                break;\n  \t\t        return scope;\n  \t\t    };\n  \t\t    Sp.lookupType = function (name) {\n  \t\t        for (var scope = this; scope; scope = scope.parent)\n  \t\t            if (scope.declaresType(name))\n  \t\t                break;\n  \t\t        return scope;\n  \t\t    };\n  \t\t    Sp.getGlobalScope = function () {\n  \t\t        var scope = this;\n  \t\t        while (!scope.isGlobal)\n  \t\t            scope = scope.parent;\n  \t\t        return scope;\n  \t\t    };\n  \t\t    return Scope;\n  \t\t}\n  \t\texports.default = scopePlugin;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (scope$1, scope$1.exports));\n  \treturn scope$1.exports;\n  }\n\n  nodePath.exports;\n\n  var hasRequiredNodePath;\n\n  function requireNodePath () {\n  \tif (hasRequiredNodePath) return nodePath.exports;\n  \thasRequiredNodePath = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar path_1 = tslib_1.__importDefault(requirePath());\n  \t\tvar scope_1 = tslib_1.__importDefault(requireScope());\n  \t\tvar shared_1 = requireShared();\n  \t\tfunction nodePathPlugin(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var n = types.namedTypes;\n  \t\t    var b = types.builders;\n  \t\t    var isNumber = types.builtInTypes.number;\n  \t\t    var isArray = types.builtInTypes.array;\n  \t\t    var Path = fork.use(path_1.default);\n  \t\t    var Scope = fork.use(scope_1.default);\n  \t\t    var NodePath = function NodePath(value, parentPath, name) {\n  \t\t        if (!(this instanceof NodePath)) {\n  \t\t            throw new Error(\"NodePath constructor cannot be invoked without 'new'\");\n  \t\t        }\n  \t\t        Path.call(this, value, parentPath, name);\n  \t\t    };\n  \t\t    var NPp = NodePath.prototype = Object.create(Path.prototype, {\n  \t\t        constructor: {\n  \t\t            value: NodePath,\n  \t\t            enumerable: false,\n  \t\t            writable: true,\n  \t\t            configurable: true\n  \t\t        }\n  \t\t    });\n  \t\t    Object.defineProperties(NPp, {\n  \t\t        node: {\n  \t\t            get: function () {\n  \t\t                Object.defineProperty(this, \"node\", {\n  \t\t                    configurable: true,\n  \t\t                    value: this._computeNode()\n  \t\t                });\n  \t\t                return this.node;\n  \t\t            }\n  \t\t        },\n  \t\t        parent: {\n  \t\t            get: function () {\n  \t\t                Object.defineProperty(this, \"parent\", {\n  \t\t                    configurable: true,\n  \t\t                    value: this._computeParent()\n  \t\t                });\n  \t\t                return this.parent;\n  \t\t            }\n  \t\t        },\n  \t\t        scope: {\n  \t\t            get: function () {\n  \t\t                Object.defineProperty(this, \"scope\", {\n  \t\t                    configurable: true,\n  \t\t                    value: this._computeScope()\n  \t\t                });\n  \t\t                return this.scope;\n  \t\t            }\n  \t\t        }\n  \t\t    });\n  \t\t    NPp.replace = function () {\n  \t\t        delete this.node;\n  \t\t        delete this.parent;\n  \t\t        delete this.scope;\n  \t\t        return Path.prototype.replace.apply(this, arguments);\n  \t\t    };\n  \t\t    NPp.prune = function () {\n  \t\t        var remainingNodePath = this.parent;\n  \t\t        this.replace();\n  \t\t        return cleanUpNodesAfterPrune(remainingNodePath);\n  \t\t    };\n  \t\t    // The value of the first ancestor Path whose value is a Node.\n  \t\t    NPp._computeNode = function () {\n  \t\t        var value = this.value;\n  \t\t        if (n.Node.check(value)) {\n  \t\t            return value;\n  \t\t        }\n  \t\t        var pp = this.parentPath;\n  \t\t        return pp && pp.node || null;\n  \t\t    };\n  \t\t    // The first ancestor Path whose value is a Node distinct from this.node.\n  \t\t    NPp._computeParent = function () {\n  \t\t        var value = this.value;\n  \t\t        var pp = this.parentPath;\n  \t\t        if (!n.Node.check(value)) {\n  \t\t            while (pp && !n.Node.check(pp.value)) {\n  \t\t                pp = pp.parentPath;\n  \t\t            }\n  \t\t            if (pp) {\n  \t\t                pp = pp.parentPath;\n  \t\t            }\n  \t\t        }\n  \t\t        while (pp && !n.Node.check(pp.value)) {\n  \t\t            pp = pp.parentPath;\n  \t\t        }\n  \t\t        return pp || null;\n  \t\t    };\n  \t\t    // The closest enclosing scope that governs this node.\n  \t\t    NPp._computeScope = function () {\n  \t\t        var value = this.value;\n  \t\t        var pp = this.parentPath;\n  \t\t        var scope = pp && pp.scope;\n  \t\t        if (n.Node.check(value) &&\n  \t\t            Scope.isEstablishedBy(value)) {\n  \t\t            scope = new Scope(this, scope);\n  \t\t        }\n  \t\t        return scope || null;\n  \t\t    };\n  \t\t    NPp.getValueProperty = function (name) {\n  \t\t        return types.getFieldValue(this.value, name);\n  \t\t    };\n  \t\t    /**\n  \t\t     * Determine whether this.node needs to be wrapped in parentheses in order\n  \t\t     * for a parser to reproduce the same local AST structure.\n  \t\t     *\n  \t\t     * For instance, in the expression `(1 + 2) * 3`, the BinaryExpression\n  \t\t     * whose operator is \"+\" needs parentheses, because `1 + 2 * 3` would\n  \t\t     * parse differently.\n  \t\t     *\n  \t\t     * If assumeExpressionContext === true, we don't worry about edge cases\n  \t\t     * like an anonymous FunctionExpression appearing lexically first in its\n  \t\t     * enclosing statement and thus needing parentheses to avoid being parsed\n  \t\t     * as a FunctionDeclaration with a missing name.\n  \t\t     */\n  \t\t    NPp.needsParens = function (assumeExpressionContext) {\n  \t\t        var pp = this.parentPath;\n  \t\t        if (!pp) {\n  \t\t            return false;\n  \t\t        }\n  \t\t        var node = this.value;\n  \t\t        // Only expressions need parentheses.\n  \t\t        if (!n.Expression.check(node)) {\n  \t\t            return false;\n  \t\t        }\n  \t\t        // Identifiers never need parentheses.\n  \t\t        if (node.type === \"Identifier\") {\n  \t\t            return false;\n  \t\t        }\n  \t\t        while (!n.Node.check(pp.value)) {\n  \t\t            pp = pp.parentPath;\n  \t\t            if (!pp) {\n  \t\t                return false;\n  \t\t            }\n  \t\t        }\n  \t\t        var parent = pp.value;\n  \t\t        switch (node.type) {\n  \t\t            case \"UnaryExpression\":\n  \t\t            case \"SpreadElement\":\n  \t\t            case \"SpreadProperty\":\n  \t\t                return parent.type === \"MemberExpression\"\n  \t\t                    && this.name === \"object\"\n  \t\t                    && parent.object === node;\n  \t\t            case \"BinaryExpression\":\n  \t\t            case \"LogicalExpression\":\n  \t\t                switch (parent.type) {\n  \t\t                    case \"CallExpression\":\n  \t\t                        return this.name === \"callee\"\n  \t\t                            && parent.callee === node;\n  \t\t                    case \"UnaryExpression\":\n  \t\t                    case \"SpreadElement\":\n  \t\t                    case \"SpreadProperty\":\n  \t\t                        return true;\n  \t\t                    case \"MemberExpression\":\n  \t\t                        return this.name === \"object\"\n  \t\t                            && parent.object === node;\n  \t\t                    case \"BinaryExpression\":\n  \t\t                    case \"LogicalExpression\": {\n  \t\t                        var n_1 = node;\n  \t\t                        var po = parent.operator;\n  \t\t                        var pp_1 = PRECEDENCE[po];\n  \t\t                        var no = n_1.operator;\n  \t\t                        var np = PRECEDENCE[no];\n  \t\t                        if (pp_1 > np) {\n  \t\t                            return true;\n  \t\t                        }\n  \t\t                        if (pp_1 === np && this.name === \"right\") {\n  \t\t                            if (parent.right !== n_1) {\n  \t\t                                throw new Error(\"Nodes must be equal\");\n  \t\t                            }\n  \t\t                            return true;\n  \t\t                        }\n  \t\t                    }\n  \t\t                    default:\n  \t\t                        return false;\n  \t\t                }\n  \t\t            case \"SequenceExpression\":\n  \t\t                switch (parent.type) {\n  \t\t                    case \"ForStatement\":\n  \t\t                        // Although parentheses wouldn't hurt around sequence\n  \t\t                        // expressions in the head of for loops, traditional style\n  \t\t                        // dictates that e.g. i++, j++ should not be wrapped with\n  \t\t                        // parentheses.\n  \t\t                        return false;\n  \t\t                    case \"ExpressionStatement\":\n  \t\t                        return this.name !== \"expression\";\n  \t\t                    default:\n  \t\t                        // Otherwise err on the side of overparenthesization, adding\n  \t\t                        // explicit exceptions above if this proves overzealous.\n  \t\t                        return true;\n  \t\t                }\n  \t\t            case \"YieldExpression\":\n  \t\t                switch (parent.type) {\n  \t\t                    case \"BinaryExpression\":\n  \t\t                    case \"LogicalExpression\":\n  \t\t                    case \"UnaryExpression\":\n  \t\t                    case \"SpreadElement\":\n  \t\t                    case \"SpreadProperty\":\n  \t\t                    case \"CallExpression\":\n  \t\t                    case \"MemberExpression\":\n  \t\t                    case \"NewExpression\":\n  \t\t                    case \"ConditionalExpression\":\n  \t\t                    case \"YieldExpression\":\n  \t\t                        return true;\n  \t\t                    default:\n  \t\t                        return false;\n  \t\t                }\n  \t\t            case \"Literal\":\n  \t\t                return parent.type === \"MemberExpression\"\n  \t\t                    && isNumber.check(node.value)\n  \t\t                    && this.name === \"object\"\n  \t\t                    && parent.object === node;\n  \t\t            case \"AssignmentExpression\":\n  \t\t            case \"ConditionalExpression\":\n  \t\t                switch (parent.type) {\n  \t\t                    case \"UnaryExpression\":\n  \t\t                    case \"SpreadElement\":\n  \t\t                    case \"SpreadProperty\":\n  \t\t                    case \"BinaryExpression\":\n  \t\t                    case \"LogicalExpression\":\n  \t\t                        return true;\n  \t\t                    case \"CallExpression\":\n  \t\t                        return this.name === \"callee\"\n  \t\t                            && parent.callee === node;\n  \t\t                    case \"ConditionalExpression\":\n  \t\t                        return this.name === \"test\"\n  \t\t                            && parent.test === node;\n  \t\t                    case \"MemberExpression\":\n  \t\t                        return this.name === \"object\"\n  \t\t                            && parent.object === node;\n  \t\t                    default:\n  \t\t                        return false;\n  \t\t                }\n  \t\t            default:\n  \t\t                if (parent.type === \"NewExpression\" &&\n  \t\t                    this.name === \"callee\" &&\n  \t\t                    parent.callee === node) {\n  \t\t                    return containsCallExpression(node);\n  \t\t                }\n  \t\t        }\n  \t\t        if (assumeExpressionContext !== true &&\n  \t\t            !this.canBeFirstInStatement() &&\n  \t\t            this.firstInStatement())\n  \t\t            return true;\n  \t\t        return false;\n  \t\t    };\n  \t\t    function isBinary(node) {\n  \t\t        return n.BinaryExpression.check(node)\n  \t\t            || n.LogicalExpression.check(node);\n  \t\t    }\n  \t\t    var PRECEDENCE = {};\n  \t\t    [[\"||\"],\n  \t\t        [\"&&\"],\n  \t\t        [\"|\"],\n  \t\t        [\"^\"],\n  \t\t        [\"&\"],\n  \t\t        [\"==\", \"===\", \"!=\", \"!==\"],\n  \t\t        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n  \t\t        [\">>\", \"<<\", \">>>\"],\n  \t\t        [\"+\", \"-\"],\n  \t\t        [\"*\", \"/\", \"%\"]\n  \t\t    ].forEach(function (tier, i) {\n  \t\t        tier.forEach(function (op) {\n  \t\t            PRECEDENCE[op] = i;\n  \t\t        });\n  \t\t    });\n  \t\t    function containsCallExpression(node) {\n  \t\t        if (n.CallExpression.check(node)) {\n  \t\t            return true;\n  \t\t        }\n  \t\t        if (isArray.check(node)) {\n  \t\t            return node.some(containsCallExpression);\n  \t\t        }\n  \t\t        if (n.Node.check(node)) {\n  \t\t            return types.someField(node, function (_name, child) {\n  \t\t                return containsCallExpression(child);\n  \t\t            });\n  \t\t        }\n  \t\t        return false;\n  \t\t    }\n  \t\t    NPp.canBeFirstInStatement = function () {\n  \t\t        var node = this.node;\n  \t\t        return !n.FunctionExpression.check(node)\n  \t\t            && !n.ObjectExpression.check(node);\n  \t\t    };\n  \t\t    NPp.firstInStatement = function () {\n  \t\t        return firstInStatement(this);\n  \t\t    };\n  \t\t    function firstInStatement(path) {\n  \t\t        for (var node, parent; path.parent; path = path.parent) {\n  \t\t            node = path.node;\n  \t\t            parent = path.parent.node;\n  \t\t            if (n.BlockStatement.check(parent) &&\n  \t\t                path.parent.name === \"body\" &&\n  \t\t                path.name === 0) {\n  \t\t                if (parent.body[0] !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                return true;\n  \t\t            }\n  \t\t            if (n.ExpressionStatement.check(parent) &&\n  \t\t                path.name === \"expression\") {\n  \t\t                if (parent.expression !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                return true;\n  \t\t            }\n  \t\t            if (n.SequenceExpression.check(parent) &&\n  \t\t                path.parent.name === \"expressions\" &&\n  \t\t                path.name === 0) {\n  \t\t                if (parent.expressions[0] !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                continue;\n  \t\t            }\n  \t\t            if (n.CallExpression.check(parent) &&\n  \t\t                path.name === \"callee\") {\n  \t\t                if (parent.callee !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                continue;\n  \t\t            }\n  \t\t            if (n.MemberExpression.check(parent) &&\n  \t\t                path.name === \"object\") {\n  \t\t                if (parent.object !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                continue;\n  \t\t            }\n  \t\t            if (n.ConditionalExpression.check(parent) &&\n  \t\t                path.name === \"test\") {\n  \t\t                if (parent.test !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                continue;\n  \t\t            }\n  \t\t            if (isBinary(parent) &&\n  \t\t                path.name === \"left\") {\n  \t\t                if (parent.left !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                continue;\n  \t\t            }\n  \t\t            if (n.UnaryExpression.check(parent) &&\n  \t\t                !parent.prefix &&\n  \t\t                path.name === \"argument\") {\n  \t\t                if (parent.argument !== node) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t                continue;\n  \t\t            }\n  \t\t            return false;\n  \t\t        }\n  \t\t        return true;\n  \t\t    }\n  \t\t    /**\n  \t\t     * Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.\n  \t\t     */\n  \t\t    function cleanUpNodesAfterPrune(remainingNodePath) {\n  \t\t        if (n.VariableDeclaration.check(remainingNodePath.node)) {\n  \t\t            var declarations = remainingNodePath.get('declarations').value;\n  \t\t            if (!declarations || declarations.length === 0) {\n  \t\t                return remainingNodePath.prune();\n  \t\t            }\n  \t\t        }\n  \t\t        else if (n.ExpressionStatement.check(remainingNodePath.node)) {\n  \t\t            if (!remainingNodePath.get('expression').value) {\n  \t\t                return remainingNodePath.prune();\n  \t\t            }\n  \t\t        }\n  \t\t        else if (n.IfStatement.check(remainingNodePath.node)) {\n  \t\t            cleanUpIfStatementAfterPrune(remainingNodePath);\n  \t\t        }\n  \t\t        return remainingNodePath;\n  \t\t    }\n  \t\t    function cleanUpIfStatementAfterPrune(ifStatement) {\n  \t\t        var testExpression = ifStatement.get('test').value;\n  \t\t        var alternate = ifStatement.get('alternate').value;\n  \t\t        var consequent = ifStatement.get('consequent').value;\n  \t\t        if (!consequent && !alternate) {\n  \t\t            var testExpressionStatement = b.expressionStatement(testExpression);\n  \t\t            ifStatement.replace(testExpressionStatement);\n  \t\t        }\n  \t\t        else if (!consequent && alternate) {\n  \t\t            var negatedTestExpression = b.unaryExpression('!', testExpression, true);\n  \t\t            if (n.UnaryExpression.check(testExpression) && testExpression.operator === '!') {\n  \t\t                negatedTestExpression = testExpression.argument;\n  \t\t            }\n  \t\t            ifStatement.get(\"test\").replace(negatedTestExpression);\n  \t\t            ifStatement.get(\"consequent\").replace(alternate);\n  \t\t            ifStatement.get(\"alternate\").replace();\n  \t\t        }\n  \t\t    }\n  \t\t    return NodePath;\n  \t\t}\n  \t\texports.default = nodePathPlugin;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (nodePath, nodePath.exports));\n  \treturn nodePath.exports;\n  }\n\n  pathVisitor.exports;\n\n  var hasRequiredPathVisitor;\n\n  function requirePathVisitor () {\n  \tif (hasRequiredPathVisitor) return pathVisitor.exports;\n  \thasRequiredPathVisitor = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar node_path_1 = tslib_1.__importDefault(requireNodePath());\n  \t\tvar shared_1 = requireShared();\n  \t\tvar hasOwn = Object.prototype.hasOwnProperty;\n  \t\tfunction pathVisitorPlugin(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var NodePath = fork.use(node_path_1.default);\n  \t\t    var isArray = types.builtInTypes.array;\n  \t\t    var isObject = types.builtInTypes.object;\n  \t\t    var isFunction = types.builtInTypes.function;\n  \t\t    var undefined$1;\n  \t\t    var PathVisitor = function PathVisitor() {\n  \t\t        if (!(this instanceof PathVisitor)) {\n  \t\t            throw new Error(\"PathVisitor constructor cannot be invoked without 'new'\");\n  \t\t        }\n  \t\t        // Permanent state.\n  \t\t        this._reusableContextStack = [];\n  \t\t        this._methodNameTable = computeMethodNameTable(this);\n  \t\t        this._shouldVisitComments =\n  \t\t            hasOwn.call(this._methodNameTable, \"Block\") ||\n  \t\t                hasOwn.call(this._methodNameTable, \"Line\");\n  \t\t        this.Context = makeContextConstructor(this);\n  \t\t        // State reset every time PathVisitor.prototype.visit is called.\n  \t\t        this._visiting = false;\n  \t\t        this._changeReported = false;\n  \t\t    };\n  \t\t    function computeMethodNameTable(visitor) {\n  \t\t        var typeNames = Object.create(null);\n  \t\t        for (var methodName in visitor) {\n  \t\t            if (/^visit[A-Z]/.test(methodName)) {\n  \t\t                typeNames[methodName.slice(\"visit\".length)] = true;\n  \t\t            }\n  \t\t        }\n  \t\t        var supertypeTable = types.computeSupertypeLookupTable(typeNames);\n  \t\t        var methodNameTable = Object.create(null);\n  \t\t        var typeNameKeys = Object.keys(supertypeTable);\n  \t\t        var typeNameCount = typeNameKeys.length;\n  \t\t        for (var i = 0; i < typeNameCount; ++i) {\n  \t\t            var typeName = typeNameKeys[i];\n  \t\t            methodName = \"visit\" + supertypeTable[typeName];\n  \t\t            if (isFunction.check(visitor[methodName])) {\n  \t\t                methodNameTable[typeName] = methodName;\n  \t\t            }\n  \t\t        }\n  \t\t        return methodNameTable;\n  \t\t    }\n  \t\t    PathVisitor.fromMethodsObject = function fromMethodsObject(methods) {\n  \t\t        if (methods instanceof PathVisitor) {\n  \t\t            return methods;\n  \t\t        }\n  \t\t        if (!isObject.check(methods)) {\n  \t\t            // An empty visitor?\n  \t\t            return new PathVisitor;\n  \t\t        }\n  \t\t        var Visitor = function Visitor() {\n  \t\t            if (!(this instanceof Visitor)) {\n  \t\t                throw new Error(\"Visitor constructor cannot be invoked without 'new'\");\n  \t\t            }\n  \t\t            PathVisitor.call(this);\n  \t\t        };\n  \t\t        var Vp = Visitor.prototype = Object.create(PVp);\n  \t\t        Vp.constructor = Visitor;\n  \t\t        extend(Vp, methods);\n  \t\t        extend(Visitor, PathVisitor);\n  \t\t        isFunction.assert(Visitor.fromMethodsObject);\n  \t\t        isFunction.assert(Visitor.visit);\n  \t\t        return new Visitor;\n  \t\t    };\n  \t\t    function extend(target, source) {\n  \t\t        for (var property in source) {\n  \t\t            if (hasOwn.call(source, property)) {\n  \t\t                target[property] = source[property];\n  \t\t            }\n  \t\t        }\n  \t\t        return target;\n  \t\t    }\n  \t\t    PathVisitor.visit = function visit(node, methods) {\n  \t\t        return PathVisitor.fromMethodsObject(methods).visit(node);\n  \t\t    };\n  \t\t    var PVp = PathVisitor.prototype;\n  \t\t    PVp.visit = function () {\n  \t\t        if (this._visiting) {\n  \t\t            throw new Error(\"Recursively calling visitor.visit(path) resets visitor state. \" +\n  \t\t                \"Try this.visit(path) or this.traverse(path) instead.\");\n  \t\t        }\n  \t\t        // Private state that needs to be reset before every traversal.\n  \t\t        this._visiting = true;\n  \t\t        this._changeReported = false;\n  \t\t        this._abortRequested = false;\n  \t\t        var argc = arguments.length;\n  \t\t        var args = new Array(argc);\n  \t\t        for (var i = 0; i < argc; ++i) {\n  \t\t            args[i] = arguments[i];\n  \t\t        }\n  \t\t        if (!(args[0] instanceof NodePath)) {\n  \t\t            args[0] = new NodePath({ root: args[0] }).get(\"root\");\n  \t\t        }\n  \t\t        // Called with the same arguments as .visit.\n  \t\t        this.reset.apply(this, args);\n  \t\t        var didNotThrow;\n  \t\t        try {\n  \t\t            var root = this.visitWithoutReset(args[0]);\n  \t\t            didNotThrow = true;\n  \t\t        }\n  \t\t        finally {\n  \t\t            this._visiting = false;\n  \t\t            if (!didNotThrow && this._abortRequested) {\n  \t\t                // If this.visitWithoutReset threw an exception and\n  \t\t                // this._abortRequested was set to true, return the root of\n  \t\t                // the AST instead of letting the exception propagate, so that\n  \t\t                // client code does not have to provide a try-catch block to\n  \t\t                // intercept the AbortRequest exception.  Other kinds of\n  \t\t                // exceptions will propagate without being intercepted and\n  \t\t                // rethrown by a catch block, so their stacks will accurately\n  \t\t                // reflect the original throwing context.\n  \t\t                return args[0].value;\n  \t\t            }\n  \t\t        }\n  \t\t        return root;\n  \t\t    };\n  \t\t    PVp.AbortRequest = function AbortRequest() { };\n  \t\t    PVp.abort = function () {\n  \t\t        var visitor = this;\n  \t\t        visitor._abortRequested = true;\n  \t\t        var request = new visitor.AbortRequest();\n  \t\t        // If you decide to catch this exception and stop it from propagating,\n  \t\t        // make sure to call its cancel method to avoid silencing other\n  \t\t        // exceptions that might be thrown later in the traversal.\n  \t\t        request.cancel = function () {\n  \t\t            visitor._abortRequested = false;\n  \t\t        };\n  \t\t        throw request;\n  \t\t    };\n  \t\t    PVp.reset = function (_path /*, additional arguments */) {\n  \t\t        // Empty stub; may be reassigned or overridden by subclasses.\n  \t\t    };\n  \t\t    PVp.visitWithoutReset = function (path) {\n  \t\t        if (this instanceof this.Context) {\n  \t\t            // Since this.Context.prototype === this, there's a chance we\n  \t\t            // might accidentally call context.visitWithoutReset. If that\n  \t\t            // happens, re-invoke the method against context.visitor.\n  \t\t            return this.visitor.visitWithoutReset(path);\n  \t\t        }\n  \t\t        if (!(path instanceof NodePath)) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        var value = path.value;\n  \t\t        var methodName = value &&\n  \t\t            typeof value === \"object\" &&\n  \t\t            typeof value.type === \"string\" &&\n  \t\t            this._methodNameTable[value.type];\n  \t\t        if (methodName) {\n  \t\t            var context = this.acquireContext(path);\n  \t\t            try {\n  \t\t                return context.invokeVisitorMethod(methodName);\n  \t\t            }\n  \t\t            finally {\n  \t\t                this.releaseContext(context);\n  \t\t            }\n  \t\t        }\n  \t\t        else {\n  \t\t            // If there was no visitor method to call, visit the children of\n  \t\t            // this node generically.\n  \t\t            return visitChildren(path, this);\n  \t\t        }\n  \t\t    };\n  \t\t    function visitChildren(path, visitor) {\n  \t\t        if (!(path instanceof NodePath)) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        if (!(visitor instanceof PathVisitor)) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        var value = path.value;\n  \t\t        if (isArray.check(value)) {\n  \t\t            path.each(visitor.visitWithoutReset, visitor);\n  \t\t        }\n  \t\t        else if (!isObject.check(value)) ;\n  \t\t        else {\n  \t\t            var childNames = types.getFieldNames(value);\n  \t\t            // The .comments field of the Node type is hidden, so we only\n  \t\t            // visit it if the visitor defines visitBlock or visitLine, and\n  \t\t            // value.comments is defined.\n  \t\t            if (visitor._shouldVisitComments &&\n  \t\t                value.comments &&\n  \t\t                childNames.indexOf(\"comments\") < 0) {\n  \t\t                childNames.push(\"comments\");\n  \t\t            }\n  \t\t            var childCount = childNames.length;\n  \t\t            var childPaths = [];\n  \t\t            for (var i = 0; i < childCount; ++i) {\n  \t\t                var childName = childNames[i];\n  \t\t                if (!hasOwn.call(value, childName)) {\n  \t\t                    value[childName] = types.getFieldValue(value, childName);\n  \t\t                }\n  \t\t                childPaths.push(path.get(childName));\n  \t\t            }\n  \t\t            for (var i = 0; i < childCount; ++i) {\n  \t\t                visitor.visitWithoutReset(childPaths[i]);\n  \t\t            }\n  \t\t        }\n  \t\t        return path.value;\n  \t\t    }\n  \t\t    PVp.acquireContext = function (path) {\n  \t\t        if (this._reusableContextStack.length === 0) {\n  \t\t            return new this.Context(path);\n  \t\t        }\n  \t\t        return this._reusableContextStack.pop().reset(path);\n  \t\t    };\n  \t\t    PVp.releaseContext = function (context) {\n  \t\t        if (!(context instanceof this.Context)) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        this._reusableContextStack.push(context);\n  \t\t        context.currentPath = null;\n  \t\t    };\n  \t\t    PVp.reportChanged = function () {\n  \t\t        this._changeReported = true;\n  \t\t    };\n  \t\t    PVp.wasChangeReported = function () {\n  \t\t        return this._changeReported;\n  \t\t    };\n  \t\t    function makeContextConstructor(visitor) {\n  \t\t        function Context(path) {\n  \t\t            if (!(this instanceof Context)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(this instanceof PathVisitor)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(path instanceof NodePath)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            Object.defineProperty(this, \"visitor\", {\n  \t\t                value: visitor,\n  \t\t                writable: false,\n  \t\t                enumerable: true,\n  \t\t                configurable: false\n  \t\t            });\n  \t\t            this.currentPath = path;\n  \t\t            this.needToCallTraverse = true;\n  \t\t            Object.seal(this);\n  \t\t        }\n  \t\t        if (!(visitor instanceof PathVisitor)) {\n  \t\t            throw new Error(\"\");\n  \t\t        }\n  \t\t        // Note that the visitor object is the prototype of Context.prototype,\n  \t\t        // so all visitor methods are inherited by context objects.\n  \t\t        var Cp = Context.prototype = Object.create(visitor);\n  \t\t        Cp.constructor = Context;\n  \t\t        extend(Cp, sharedContextProtoMethods);\n  \t\t        return Context;\n  \t\t    }\n  \t\t    // Every PathVisitor has a different this.Context constructor and\n  \t\t    // this.Context.prototype object, but those prototypes can all use the\n  \t\t    // same reset, invokeVisitorMethod, and traverse function objects.\n  \t\t    var sharedContextProtoMethods = Object.create(null);\n  \t\t    sharedContextProtoMethods.reset =\n  \t\t        function reset(path) {\n  \t\t            if (!(this instanceof this.Context)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(path instanceof NodePath)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            this.currentPath = path;\n  \t\t            this.needToCallTraverse = true;\n  \t\t            return this;\n  \t\t        };\n  \t\t    sharedContextProtoMethods.invokeVisitorMethod =\n  \t\t        function invokeVisitorMethod(methodName) {\n  \t\t            if (!(this instanceof this.Context)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(this.currentPath instanceof NodePath)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            var result = this.visitor[methodName].call(this, this.currentPath);\n  \t\t            if (result === false) {\n  \t\t                // Visitor methods return false to indicate that they have handled\n  \t\t                // their own traversal needs, and we should not complain if\n  \t\t                // this.needToCallTraverse is still true.\n  \t\t                this.needToCallTraverse = false;\n  \t\t            }\n  \t\t            else if (result !== undefined$1) {\n  \t\t                // Any other non-undefined value returned from the visitor method\n  \t\t                // is interpreted as a replacement value.\n  \t\t                this.currentPath = this.currentPath.replace(result)[0];\n  \t\t                if (this.needToCallTraverse) {\n  \t\t                    // If this.traverse still hasn't been called, visit the\n  \t\t                    // children of the replacement node.\n  \t\t                    this.traverse(this.currentPath);\n  \t\t                }\n  \t\t            }\n  \t\t            if (this.needToCallTraverse !== false) {\n  \t\t                throw new Error(\"Must either call this.traverse or return false in \" + methodName);\n  \t\t            }\n  \t\t            var path = this.currentPath;\n  \t\t            return path && path.value;\n  \t\t        };\n  \t\t    sharedContextProtoMethods.traverse =\n  \t\t        function traverse(path, newVisitor) {\n  \t\t            if (!(this instanceof this.Context)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(path instanceof NodePath)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(this.currentPath instanceof NodePath)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            this.needToCallTraverse = false;\n  \t\t            return visitChildren(path, PathVisitor.fromMethodsObject(newVisitor || this.visitor));\n  \t\t        };\n  \t\t    sharedContextProtoMethods.visit =\n  \t\t        function visit(path, newVisitor) {\n  \t\t            if (!(this instanceof this.Context)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(path instanceof NodePath)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            if (!(this.currentPath instanceof NodePath)) {\n  \t\t                throw new Error(\"\");\n  \t\t            }\n  \t\t            this.needToCallTraverse = false;\n  \t\t            return PathVisitor.fromMethodsObject(newVisitor || this.visitor).visitWithoutReset(path);\n  \t\t        };\n  \t\t    sharedContextProtoMethods.reportChanged = function reportChanged() {\n  \t\t        this.visitor.reportChanged();\n  \t\t    };\n  \t\t    sharedContextProtoMethods.abort = function abort() {\n  \t\t        this.needToCallTraverse = false;\n  \t\t        this.visitor.abort();\n  \t\t    };\n  \t\t    return PathVisitor;\n  \t\t}\n  \t\texports.default = pathVisitorPlugin;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (pathVisitor, pathVisitor.exports));\n  \treturn pathVisitor.exports;\n  }\n\n  var equiv$1 = {exports: {}};\n\n  equiv$1.exports;\n\n  var hasRequiredEquiv;\n\n  function requireEquiv () {\n  \tif (hasRequiredEquiv) return equiv$1.exports;\n  \thasRequiredEquiv = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar shared_1 = requireShared();\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tfunction default_1(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var getFieldNames = types.getFieldNames;\n  \t\t    var getFieldValue = types.getFieldValue;\n  \t\t    var isArray = types.builtInTypes.array;\n  \t\t    var isObject = types.builtInTypes.object;\n  \t\t    var isDate = types.builtInTypes.Date;\n  \t\t    var isRegExp = types.builtInTypes.RegExp;\n  \t\t    var hasOwn = Object.prototype.hasOwnProperty;\n  \t\t    function astNodesAreEquivalent(a, b, problemPath) {\n  \t\t        if (isArray.check(problemPath)) {\n  \t\t            problemPath.length = 0;\n  \t\t        }\n  \t\t        else {\n  \t\t            problemPath = null;\n  \t\t        }\n  \t\t        return areEquivalent(a, b, problemPath);\n  \t\t    }\n  \t\t    astNodesAreEquivalent.assert = function (a, b) {\n  \t\t        var problemPath = [];\n  \t\t        if (!astNodesAreEquivalent(a, b, problemPath)) {\n  \t\t            if (problemPath.length === 0) {\n  \t\t                if (a !== b) {\n  \t\t                    throw new Error(\"Nodes must be equal\");\n  \t\t                }\n  \t\t            }\n  \t\t            else {\n  \t\t                throw new Error(\"Nodes differ in the following path: \" +\n  \t\t                    problemPath.map(subscriptForProperty).join(\"\"));\n  \t\t            }\n  \t\t        }\n  \t\t    };\n  \t\t    function subscriptForProperty(property) {\n  \t\t        if (/[_$a-z][_$a-z0-9]*/i.test(property)) {\n  \t\t            return \".\" + property;\n  \t\t        }\n  \t\t        return \"[\" + JSON.stringify(property) + \"]\";\n  \t\t    }\n  \t\t    function areEquivalent(a, b, problemPath) {\n  \t\t        if (a === b) {\n  \t\t            return true;\n  \t\t        }\n  \t\t        if (isArray.check(a)) {\n  \t\t            return arraysAreEquivalent(a, b, problemPath);\n  \t\t        }\n  \t\t        if (isObject.check(a)) {\n  \t\t            return objectsAreEquivalent(a, b, problemPath);\n  \t\t        }\n  \t\t        if (isDate.check(a)) {\n  \t\t            return isDate.check(b) && (+a === +b);\n  \t\t        }\n  \t\t        if (isRegExp.check(a)) {\n  \t\t            return isRegExp.check(b) && (a.source === b.source &&\n  \t\t                a.global === b.global &&\n  \t\t                a.multiline === b.multiline &&\n  \t\t                a.ignoreCase === b.ignoreCase);\n  \t\t        }\n  \t\t        return a == b;\n  \t\t    }\n  \t\t    function arraysAreEquivalent(a, b, problemPath) {\n  \t\t        isArray.assert(a);\n  \t\t        var aLength = a.length;\n  \t\t        if (!isArray.check(b) || b.length !== aLength) {\n  \t\t            if (problemPath) {\n  \t\t                problemPath.push(\"length\");\n  \t\t            }\n  \t\t            return false;\n  \t\t        }\n  \t\t        for (var i = 0; i < aLength; ++i) {\n  \t\t            if (problemPath) {\n  \t\t                problemPath.push(i);\n  \t\t            }\n  \t\t            if (i in a !== i in b) {\n  \t\t                return false;\n  \t\t            }\n  \t\t            if (!areEquivalent(a[i], b[i], problemPath)) {\n  \t\t                return false;\n  \t\t            }\n  \t\t            if (problemPath) {\n  \t\t                var problemPathTail = problemPath.pop();\n  \t\t                if (problemPathTail !== i) {\n  \t\t                    throw new Error(\"\" + problemPathTail);\n  \t\t                }\n  \t\t            }\n  \t\t        }\n  \t\t        return true;\n  \t\t    }\n  \t\t    function objectsAreEquivalent(a, b, problemPath) {\n  \t\t        isObject.assert(a);\n  \t\t        if (!isObject.check(b)) {\n  \t\t            return false;\n  \t\t        }\n  \t\t        // Fast path for a common property of AST nodes.\n  \t\t        if (a.type !== b.type) {\n  \t\t            if (problemPath) {\n  \t\t                problemPath.push(\"type\");\n  \t\t            }\n  \t\t            return false;\n  \t\t        }\n  \t\t        var aNames = getFieldNames(a);\n  \t\t        var aNameCount = aNames.length;\n  \t\t        var bNames = getFieldNames(b);\n  \t\t        var bNameCount = bNames.length;\n  \t\t        if (aNameCount === bNameCount) {\n  \t\t            for (var i = 0; i < aNameCount; ++i) {\n  \t\t                var name = aNames[i];\n  \t\t                var aChild = getFieldValue(a, name);\n  \t\t                var bChild = getFieldValue(b, name);\n  \t\t                if (problemPath) {\n  \t\t                    problemPath.push(name);\n  \t\t                }\n  \t\t                if (!areEquivalent(aChild, bChild, problemPath)) {\n  \t\t                    return false;\n  \t\t                }\n  \t\t                if (problemPath) {\n  \t\t                    var problemPathTail = problemPath.pop();\n  \t\t                    if (problemPathTail !== name) {\n  \t\t                        throw new Error(\"\" + problemPathTail);\n  \t\t                    }\n  \t\t                }\n  \t\t            }\n  \t\t            return true;\n  \t\t        }\n  \t\t        if (!problemPath) {\n  \t\t            return false;\n  \t\t        }\n  \t\t        // Since aNameCount !== bNameCount, we need to find some name that's\n  \t\t        // missing in aNames but present in bNames, or vice-versa.\n  \t\t        var seenNames = Object.create(null);\n  \t\t        for (i = 0; i < aNameCount; ++i) {\n  \t\t            seenNames[aNames[i]] = true;\n  \t\t        }\n  \t\t        for (i = 0; i < bNameCount; ++i) {\n  \t\t            name = bNames[i];\n  \t\t            if (!hasOwn.call(seenNames, name)) {\n  \t\t                problemPath.push(name);\n  \t\t                return false;\n  \t\t            }\n  \t\t            delete seenNames[name];\n  \t\t        }\n  \t\t        for (name in seenNames) {\n  \t\t            problemPath.push(name);\n  \t\t            break;\n  \t\t        }\n  \t\t        return false;\n  \t\t    }\n  \t\t    return astNodesAreEquivalent;\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (equiv$1, equiv$1.exports));\n  \treturn equiv$1.exports;\n  }\n\n  fork.exports;\n\n  var hasRequiredFork;\n\n  function requireFork () {\n  \tif (hasRequiredFork) return fork.exports;\n  \thasRequiredFork = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar path_visitor_1 = tslib_1.__importDefault(requirePathVisitor());\n  \t\tvar equiv_1 = tslib_1.__importDefault(requireEquiv());\n  \t\tvar path_1 = tslib_1.__importDefault(requirePath());\n  \t\tvar node_path_1 = tslib_1.__importDefault(requireNodePath());\n  \t\tvar shared_1 = requireShared();\n  \t\tfunction default_1(plugins) {\n  \t\t    var fork = createFork();\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    plugins.forEach(fork.use);\n  \t\t    types.finalize();\n  \t\t    var PathVisitor = fork.use(path_visitor_1.default);\n  \t\t    return {\n  \t\t        Type: types.Type,\n  \t\t        builtInTypes: types.builtInTypes,\n  \t\t        namedTypes: types.namedTypes,\n  \t\t        builders: types.builders,\n  \t\t        defineMethod: types.defineMethod,\n  \t\t        getFieldNames: types.getFieldNames,\n  \t\t        getFieldValue: types.getFieldValue,\n  \t\t        eachField: types.eachField,\n  \t\t        someField: types.someField,\n  \t\t        getSupertypeNames: types.getSupertypeNames,\n  \t\t        getBuilderName: types.getBuilderName,\n  \t\t        astNodesAreEquivalent: fork.use(equiv_1.default),\n  \t\t        finalize: types.finalize,\n  \t\t        Path: fork.use(path_1.default),\n  \t\t        NodePath: fork.use(node_path_1.default),\n  \t\t        PathVisitor: PathVisitor,\n  \t\t        use: fork.use,\n  \t\t        visit: PathVisitor.visit,\n  \t\t    };\n  \t\t}\n  \t\texports.default = default_1;\n  \t\tfunction createFork() {\n  \t\t    var used = [];\n  \t\t    var usedResult = [];\n  \t\t    function use(plugin) {\n  \t\t        var idx = used.indexOf(plugin);\n  \t\t        if (idx === -1) {\n  \t\t            idx = used.length;\n  \t\t            used.push(plugin);\n  \t\t            usedResult[idx] = plugin(fork);\n  \t\t        }\n  \t\t        return usedResult[idx];\n  \t\t    }\n  \t\t    var fork = { use: use };\n  \t\t    return fork;\n  \t\t}\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (fork, fork.exports));\n  \treturn fork.exports;\n  }\n\n  var esProposals = {exports: {}};\n\n  var es2022$1 = {exports: {}};\n\n  var es2021$2 = {exports: {}};\n\n  var es2021$1 = {exports: {}};\n\n  var es2020$2 = {exports: {}};\n\n  var es2016$2 = {exports: {}};\n\n  var core$1 = {exports: {}};\n\n  core$1.exports;\n\n  var hasRequiredCore$1;\n\n  function requireCore$1 () {\n  \tif (hasRequiredCore$1) return core$1.exports;\n  \thasRequiredCore$1 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar shared_1 = requireShared();\n  \t\tfunction default_1() {\n  \t\t    return {\n  \t\t        BinaryOperators: [\n  \t\t            \"==\", \"!=\", \"===\", \"!==\",\n  \t\t            \"<\", \"<=\", \">\", \">=\",\n  \t\t            \"<<\", \">>\", \">>>\",\n  \t\t            \"+\", \"-\", \"*\", \"/\", \"%\",\n  \t\t            \"&\",\n  \t\t            \"|\", \"^\", \"in\",\n  \t\t            \"instanceof\",\n  \t\t        ],\n  \t\t        AssignmentOperators: [\n  \t\t            \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\",\n  \t\t            \"<<=\", \">>=\", \">>>=\",\n  \t\t            \"|=\", \"^=\", \"&=\",\n  \t\t        ],\n  \t\t        LogicalOperators: [\n  \t\t            \"||\", \"&&\",\n  \t\t        ],\n  \t\t    };\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (core$1, core$1.exports));\n  \treturn core$1.exports;\n  }\n\n  es2016$2.exports;\n\n  var hasRequiredEs2016$1;\n\n  function requireEs2016$1 () {\n  \tif (hasRequiredEs2016$1) return es2016$2.exports;\n  \thasRequiredEs2016$1 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar shared_1 = requireShared();\n  \t\tvar core_1 = tslib_1.__importDefault(requireCore$1());\n  \t\tfunction default_1(fork) {\n  \t\t    var result = fork.use(core_1.default);\n  \t\t    // Exponentiation operators. Must run before BinaryOperators or\n  \t\t    // AssignmentOperators are used (hence before fork.use(es6Def)).\n  \t\t    // https://github.com/tc39/proposal-exponentiation-operator\n  \t\t    if (result.BinaryOperators.indexOf(\"**\") < 0) {\n  \t\t        result.BinaryOperators.push(\"**\");\n  \t\t    }\n  \t\t    if (result.AssignmentOperators.indexOf(\"**=\") < 0) {\n  \t\t        result.AssignmentOperators.push(\"**=\");\n  \t\t    }\n  \t\t    return result;\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2016$2, es2016$2.exports));\n  \treturn es2016$2.exports;\n  }\n\n  es2020$2.exports;\n\n  var hasRequiredEs2020$1;\n\n  function requireEs2020$1 () {\n  \tif (hasRequiredEs2020$1) return es2020$2.exports;\n  \thasRequiredEs2020$1 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar shared_1 = requireShared();\n  \t\tvar es2016_1 = tslib_1.__importDefault(requireEs2016$1());\n  \t\tfunction default_1(fork) {\n  \t\t    var result = fork.use(es2016_1.default);\n  \t\t    // Nullish coalescing. Must run before LogicalOperators is used.\n  \t\t    // https://github.com/tc39/proposal-nullish-coalescing\n  \t\t    if (result.LogicalOperators.indexOf(\"??\") < 0) {\n  \t\t        result.LogicalOperators.push(\"??\");\n  \t\t    }\n  \t\t    return result;\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2020$2, es2020$2.exports));\n  \treturn es2020$2.exports;\n  }\n\n  es2021$1.exports;\n\n  var hasRequiredEs2021$1;\n\n  function requireEs2021$1 () {\n  \tif (hasRequiredEs2021$1) return es2021$1.exports;\n  \thasRequiredEs2021$1 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar shared_1 = requireShared();\n  \t\tvar es2020_1 = tslib_1.__importDefault(requireEs2020$1());\n  \t\tfunction default_1(fork) {\n  \t\t    var result = fork.use(es2020_1.default);\n  \t\t    // Logical assignment operators. Must run before AssignmentOperators is used.\n  \t\t    // https://github.com/tc39/proposal-logical-assignment\n  \t\t    result.LogicalOperators.forEach(function (op) {\n  \t\t        var assignOp = op + \"=\";\n  \t\t        if (result.AssignmentOperators.indexOf(assignOp) < 0) {\n  \t\t            result.AssignmentOperators.push(assignOp);\n  \t\t        }\n  \t\t    });\n  \t\t    return result;\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2021$1, es2021$1.exports));\n  \treturn es2021$1.exports;\n  }\n\n  var es2020$1 = {exports: {}};\n\n  var es2019$1 = {exports: {}};\n\n  var es2018$1 = {exports: {}};\n\n  var es2017$1 = {exports: {}};\n\n  var es2016$1 = {exports: {}};\n\n  var es6 = {exports: {}};\n\n  var core = {exports: {}};\n\n  core.exports;\n\n  var hasRequiredCore;\n\n  function requireCore () {\n  \tif (hasRequiredCore) return core.exports;\n  \thasRequiredCore = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar core_1 = tslib_1.__importDefault(requireCore$1());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var Type = types.Type;\n  \t\t    var def = Type.def;\n  \t\t    var or = Type.or;\n  \t\t    var shared = fork.use(shared_1.default);\n  \t\t    var defaults = shared.defaults;\n  \t\t    var geq = shared.geq;\n  \t\t    var _a = fork.use(core_1.default), BinaryOperators = _a.BinaryOperators, AssignmentOperators = _a.AssignmentOperators, LogicalOperators = _a.LogicalOperators;\n  \t\t    // Abstract supertype of all syntactic entities that are allowed to have a\n  \t\t    // .loc field.\n  \t\t    def(\"Printable\")\n  \t\t        .field(\"loc\", or(def(\"SourceLocation\"), null), defaults[\"null\"], true);\n  \t\t    def(\"Node\")\n  \t\t        .bases(\"Printable\")\n  \t\t        .field(\"type\", String)\n  \t\t        .field(\"comments\", or([def(\"Comment\")], null), defaults[\"null\"], true);\n  \t\t    def(\"SourceLocation\")\n  \t\t        .field(\"start\", def(\"Position\"))\n  \t\t        .field(\"end\", def(\"Position\"))\n  \t\t        .field(\"source\", or(String, null), defaults[\"null\"]);\n  \t\t    def(\"Position\")\n  \t\t        .field(\"line\", geq(1))\n  \t\t        .field(\"column\", geq(0));\n  \t\t    def(\"File\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"program\", \"name\")\n  \t\t        .field(\"program\", def(\"Program\"))\n  \t\t        .field(\"name\", or(String, null), defaults[\"null\"]);\n  \t\t    def(\"Program\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [def(\"Statement\")]);\n  \t\t    def(\"Function\")\n  \t\t        .bases(\"Node\")\n  \t\t        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n  \t\t        .field(\"params\", [def(\"Pattern\")])\n  \t\t        .field(\"body\", def(\"BlockStatement\"))\n  \t\t        .field(\"generator\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"async\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"Statement\").bases(\"Node\");\n  \t\t    // The empty .build() here means that an EmptyStatement can be constructed\n  \t\t    // (i.e. it's not abstract) but that it needs no arguments.\n  \t\t    def(\"EmptyStatement\").bases(\"Statement\").build();\n  \t\t    def(\"BlockStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [def(\"Statement\")]);\n  \t\t    // TODO Figure out how to silently coerce Expressions to\n  \t\t    // ExpressionStatements where a Statement was expected.\n  \t\t    def(\"ExpressionStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", def(\"Expression\"));\n  \t\t    def(\"IfStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"test\", \"consequent\", \"alternate\")\n  \t\t        .field(\"test\", def(\"Expression\"))\n  \t\t        .field(\"consequent\", def(\"Statement\"))\n  \t\t        .field(\"alternate\", or(def(\"Statement\"), null), defaults[\"null\"]);\n  \t\t    def(\"LabeledStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"label\", \"body\")\n  \t\t        .field(\"label\", def(\"Identifier\"))\n  \t\t        .field(\"body\", def(\"Statement\"));\n  \t\t    def(\"BreakStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"label\")\n  \t\t        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n  \t\t    def(\"ContinueStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"label\")\n  \t\t        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n  \t\t    def(\"WithStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"object\", \"body\")\n  \t\t        .field(\"object\", def(\"Expression\"))\n  \t\t        .field(\"body\", def(\"Statement\"));\n  \t\t    def(\"SwitchStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"discriminant\", \"cases\", \"lexical\")\n  \t\t        .field(\"discriminant\", def(\"Expression\"))\n  \t\t        .field(\"cases\", [def(\"SwitchCase\")])\n  \t\t        .field(\"lexical\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"ReturnStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", or(def(\"Expression\"), null));\n  \t\t    def(\"ThrowStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Expression\"));\n  \t\t    def(\"TryStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"block\", \"handler\", \"finalizer\")\n  \t\t        .field(\"block\", def(\"BlockStatement\"))\n  \t\t        .field(\"handler\", or(def(\"CatchClause\"), null), function () {\n  \t\t        return this.handlers && this.handlers[0] || null;\n  \t\t    })\n  \t\t        .field(\"handlers\", [def(\"CatchClause\")], function () {\n  \t\t        return this.handler ? [this.handler] : [];\n  \t\t    }, true) // Indicates this field is hidden from eachField iteration.\n  \t\t        .field(\"guardedHandlers\", [def(\"CatchClause\")], defaults.emptyArray)\n  \t\t        .field(\"finalizer\", or(def(\"BlockStatement\"), null), defaults[\"null\"]);\n  \t\t    def(\"CatchClause\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"param\", \"guard\", \"body\")\n  \t\t        .field(\"param\", def(\"Pattern\"))\n  \t\t        .field(\"guard\", or(def(\"Expression\"), null), defaults[\"null\"])\n  \t\t        .field(\"body\", def(\"BlockStatement\"));\n  \t\t    def(\"WhileStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"test\", \"body\")\n  \t\t        .field(\"test\", def(\"Expression\"))\n  \t\t        .field(\"body\", def(\"Statement\"));\n  \t\t    def(\"DoWhileStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"body\", \"test\")\n  \t\t        .field(\"body\", def(\"Statement\"))\n  \t\t        .field(\"test\", def(\"Expression\"));\n  \t\t    def(\"ForStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"init\", \"test\", \"update\", \"body\")\n  \t\t        .field(\"init\", or(def(\"VariableDeclaration\"), def(\"Expression\"), null))\n  \t\t        .field(\"test\", or(def(\"Expression\"), null))\n  \t\t        .field(\"update\", or(def(\"Expression\"), null))\n  \t\t        .field(\"body\", def(\"Statement\"));\n  \t\t    def(\"ForInStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"left\", \"right\", \"body\")\n  \t\t        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n  \t\t        .field(\"right\", def(\"Expression\"))\n  \t\t        .field(\"body\", def(\"Statement\"));\n  \t\t    def(\"DebuggerStatement\").bases(\"Statement\").build();\n  \t\t    def(\"Declaration\").bases(\"Statement\");\n  \t\t    def(\"FunctionDeclaration\")\n  \t\t        .bases(\"Function\", \"Declaration\")\n  \t\t        .build(\"id\", \"params\", \"body\")\n  \t\t        .field(\"id\", def(\"Identifier\"));\n  \t\t    def(\"FunctionExpression\")\n  \t\t        .bases(\"Function\", \"Expression\")\n  \t\t        .build(\"id\", \"params\", \"body\");\n  \t\t    def(\"VariableDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"kind\", \"declarations\")\n  \t\t        .field(\"kind\", or(\"var\", \"let\", \"const\"))\n  \t\t        .field(\"declarations\", [def(\"VariableDeclarator\")]);\n  \t\t    def(\"VariableDeclarator\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"id\", \"init\")\n  \t\t        .field(\"id\", def(\"Pattern\"))\n  \t\t        .field(\"init\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    def(\"Expression\").bases(\"Node\");\n  \t\t    def(\"ThisExpression\").bases(\"Expression\").build();\n  \t\t    def(\"ArrayExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"elements\")\n  \t\t        .field(\"elements\", [or(def(\"Expression\"), null)]);\n  \t\t    def(\"ObjectExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"properties\")\n  \t\t        .field(\"properties\", [def(\"Property\")]);\n  \t\t    // TODO Not in the Mozilla Parser API, but used by Esprima.\n  \t\t    def(\"Property\")\n  \t\t        .bases(\"Node\") // Want to be able to visit Property Nodes.\n  \t\t        .build(\"kind\", \"key\", \"value\")\n  \t\t        .field(\"kind\", or(\"init\", \"get\", \"set\"))\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n  \t\t        .field(\"value\", def(\"Expression\"));\n  \t\t    def(\"SequenceExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"expressions\")\n  \t\t        .field(\"expressions\", [def(\"Expression\")]);\n  \t\t    var UnaryOperator = or(\"-\", \"+\", \"!\", \"~\", \"typeof\", \"void\", \"delete\");\n  \t\t    def(\"UnaryExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"operator\", \"argument\", \"prefix\")\n  \t\t        .field(\"operator\", UnaryOperator)\n  \t\t        .field(\"argument\", def(\"Expression\"))\n  \t\t        // Esprima doesn't bother with this field, presumably because it's\n  \t\t        // always true for unary operators.\n  \t\t        .field(\"prefix\", Boolean, defaults[\"true\"]);\n  \t\t    var BinaryOperator = or.apply(void 0, BinaryOperators);\n  \t\t    def(\"BinaryExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"operator\", \"left\", \"right\")\n  \t\t        .field(\"operator\", BinaryOperator)\n  \t\t        .field(\"left\", def(\"Expression\"))\n  \t\t        .field(\"right\", def(\"Expression\"));\n  \t\t    var AssignmentOperator = or.apply(void 0, AssignmentOperators);\n  \t\t    def(\"AssignmentExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"operator\", \"left\", \"right\")\n  \t\t        .field(\"operator\", AssignmentOperator)\n  \t\t        .field(\"left\", or(def(\"Pattern\"), def(\"MemberExpression\")))\n  \t\t        .field(\"right\", def(\"Expression\"));\n  \t\t    var UpdateOperator = or(\"++\", \"--\");\n  \t\t    def(\"UpdateExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"operator\", \"argument\", \"prefix\")\n  \t\t        .field(\"operator\", UpdateOperator)\n  \t\t        .field(\"argument\", def(\"Expression\"))\n  \t\t        .field(\"prefix\", Boolean);\n  \t\t    var LogicalOperator = or.apply(void 0, LogicalOperators);\n  \t\t    def(\"LogicalExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"operator\", \"left\", \"right\")\n  \t\t        .field(\"operator\", LogicalOperator)\n  \t\t        .field(\"left\", def(\"Expression\"))\n  \t\t        .field(\"right\", def(\"Expression\"));\n  \t\t    def(\"ConditionalExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"test\", \"consequent\", \"alternate\")\n  \t\t        .field(\"test\", def(\"Expression\"))\n  \t\t        .field(\"consequent\", def(\"Expression\"))\n  \t\t        .field(\"alternate\", def(\"Expression\"));\n  \t\t    def(\"NewExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"callee\", \"arguments\")\n  \t\t        .field(\"callee\", def(\"Expression\"))\n  \t\t        // The Mozilla Parser API gives this type as [or(def(\"Expression\"),\n  \t\t        // null)], but null values don't really make sense at the call site.\n  \t\t        // TODO Report this nonsense.\n  \t\t        .field(\"arguments\", [def(\"Expression\")]);\n  \t\t    def(\"CallExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"callee\", \"arguments\")\n  \t\t        .field(\"callee\", def(\"Expression\"))\n  \t\t        // See comment for NewExpression above.\n  \t\t        .field(\"arguments\", [def(\"Expression\")]);\n  \t\t    def(\"MemberExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"object\", \"property\", \"computed\")\n  \t\t        .field(\"object\", def(\"Expression\"))\n  \t\t        .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")))\n  \t\t        .field(\"computed\", Boolean, function () {\n  \t\t        var type = this.property.type;\n  \t\t        if (type === 'Literal' ||\n  \t\t            type === 'MemberExpression' ||\n  \t\t            type === 'BinaryExpression') {\n  \t\t            return true;\n  \t\t        }\n  \t\t        return false;\n  \t\t    });\n  \t\t    def(\"Pattern\").bases(\"Node\");\n  \t\t    def(\"SwitchCase\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"test\", \"consequent\")\n  \t\t        .field(\"test\", or(def(\"Expression\"), null))\n  \t\t        .field(\"consequent\", [def(\"Statement\")]);\n  \t\t    def(\"Identifier\")\n  \t\t        .bases(\"Expression\", \"Pattern\")\n  \t\t        .build(\"name\")\n  \t\t        .field(\"name\", String)\n  \t\t        .field(\"optional\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"Literal\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", or(String, Boolean, null, Number, RegExp, BigInt));\n  \t\t    // Abstract (non-buildable) comment supertype. Not a Node.\n  \t\t    def(\"Comment\")\n  \t\t        .bases(\"Printable\")\n  \t\t        .field(\"value\", String)\n  \t\t        // A .leading comment comes before the node, whereas a .trailing\n  \t\t        // comment comes after it. These two fields should not both be true,\n  \t\t        // but they might both be false when the comment falls inside a node\n  \t\t        // and the node has no children for the comment to lead or trail,\n  \t\t        // e.g. { /*dangling*/ }.\n  \t\t        .field(\"leading\", Boolean, defaults[\"true\"])\n  \t\t        .field(\"trailing\", Boolean, defaults[\"false\"]);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (core, core.exports));\n  \treturn core.exports;\n  }\n\n  es6.exports;\n\n  var hasRequiredEs6;\n\n  function requireEs6 () {\n  \tif (hasRequiredEs6) return es6.exports;\n  \thasRequiredEs6 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar core_1 = tslib_1.__importDefault(requireCore());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(core_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    def(\"Function\")\n  \t\t        .field(\"generator\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"expression\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"defaults\", [or(def(\"Expression\"), null)], defaults.emptyArray)\n  \t\t        // Legacy\n  \t\t        .field(\"rest\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n  \t\t    // The ESTree way of representing a ...rest parameter.\n  \t\t    def(\"RestElement\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Pattern\"))\n  \t\t        .field(\"typeAnnotation\", // for Babylon. Flow parser puts it on the identifier\n  \t\t    or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n  \t\t    def(\"SpreadElementPattern\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Pattern\"));\n  \t\t    def(\"FunctionDeclaration\")\n  \t\t        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\")\n  \t\t        // May be `null` in the context of `export default function () {}`\n  \t\t        .field(\"id\", or(def(\"Identifier\"), null));\n  \t\t    def(\"FunctionExpression\")\n  \t\t        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n  \t\t    def(\"ArrowFunctionExpression\")\n  \t\t        .bases(\"Function\", \"Expression\")\n  \t\t        .build(\"params\", \"body\", \"expression\")\n  \t\t        // The forced null value here is compatible with the overridden\n  \t\t        // definition of the \"id\" field in the Function interface.\n  \t\t        .field(\"id\", null, defaults[\"null\"])\n  \t\t        // Arrow function bodies are allowed to be expressions.\n  \t\t        .field(\"body\", or(def(\"BlockStatement\"), def(\"Expression\")))\n  \t\t        // The current spec forbids arrow generators, so I have taken the\n  \t\t        // liberty of enforcing that. TODO Report this.\n  \t\t        .field(\"generator\", false, defaults[\"false\"]);\n  \t\t    def(\"ForOfStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"left\", \"right\", \"body\")\n  \t\t        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Pattern\")))\n  \t\t        .field(\"right\", def(\"Expression\"))\n  \t\t        .field(\"body\", def(\"Statement\"));\n  \t\t    def(\"YieldExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"argument\", \"delegate\")\n  \t\t        .field(\"argument\", or(def(\"Expression\"), null))\n  \t\t        .field(\"delegate\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"GeneratorExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"body\", \"blocks\", \"filter\")\n  \t\t        .field(\"body\", def(\"Expression\"))\n  \t\t        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n  \t\t        .field(\"filter\", or(def(\"Expression\"), null));\n  \t\t    def(\"ComprehensionExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"body\", \"blocks\", \"filter\")\n  \t\t        .field(\"body\", def(\"Expression\"))\n  \t\t        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n  \t\t        .field(\"filter\", or(def(\"Expression\"), null));\n  \t\t    def(\"ComprehensionBlock\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"left\", \"right\", \"each\")\n  \t\t        .field(\"left\", def(\"Pattern\"))\n  \t\t        .field(\"right\", def(\"Expression\"))\n  \t\t        .field(\"each\", Boolean);\n  \t\t    def(\"Property\")\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n  \t\t        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n  \t\t        .field(\"method\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"shorthand\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"ObjectProperty\")\n  \t\t        .field(\"shorthand\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"PropertyPattern\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"key\", \"pattern\")\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n  \t\t        .field(\"pattern\", def(\"Pattern\"))\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"ObjectPattern\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"properties\")\n  \t\t        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"))]);\n  \t\t    def(\"ArrayPattern\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"elements\")\n  \t\t        .field(\"elements\", [or(def(\"Pattern\"), null)]);\n  \t\t    def(\"SpreadElement\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Expression\"));\n  \t\t    def(\"ArrayExpression\")\n  \t\t        .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), def(\"RestElement\"), null)]);\n  \t\t    def(\"NewExpression\")\n  \t\t        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n  \t\t    def(\"CallExpression\")\n  \t\t        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n  \t\t    // Note: this node type is *not* an AssignmentExpression with a Pattern on\n  \t\t    // the left-hand side! The existing AssignmentExpression type already\n  \t\t    // supports destructuring assignments. AssignmentPattern nodes may appear\n  \t\t    // wherever a Pattern is allowed, and the right-hand side represents a\n  \t\t    // default value to be destructured against the left-hand side, if no\n  \t\t    // value is otherwise provided. For example: default parameter values.\n  \t\t    def(\"AssignmentPattern\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"left\", \"right\")\n  \t\t        .field(\"left\", def(\"Pattern\"))\n  \t\t        .field(\"right\", def(\"Expression\"));\n  \t\t    def(\"MethodDefinition\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"kind\", \"key\", \"value\", \"static\")\n  \t\t        .field(\"kind\", or(\"constructor\", \"method\", \"get\", \"set\"))\n  \t\t        .field(\"key\", def(\"Expression\"))\n  \t\t        .field(\"value\", def(\"Function\"))\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"static\", Boolean, defaults[\"false\"]);\n  \t\t    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"StaticBlock\"));\n  \t\t    def(\"ClassProperty\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"key\")\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"ClassPropertyDefinition\") // static property\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"definition\")\n  \t\t        // Yes, Virginia, circular definitions are permitted.\n  \t\t        .field(\"definition\", ClassBodyElement);\n  \t\t    def(\"ClassBody\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [ClassBodyElement]);\n  \t\t    def(\"ClassDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"body\", \"superClass\")\n  \t\t        .field(\"id\", or(def(\"Identifier\"), null))\n  \t\t        .field(\"body\", def(\"ClassBody\"))\n  \t\t        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    def(\"ClassExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"id\", \"body\", \"superClass\")\n  \t\t        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n  \t\t        .field(\"body\", def(\"ClassBody\"))\n  \t\t        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    def(\"Super\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build();\n  \t\t    // Specifier and ModuleSpecifier are abstract non-standard types\n  \t\t    // introduced for definitional convenience.\n  \t\t    def(\"Specifier\").bases(\"Node\");\n  \t\t    // This supertype is shared/abused by both def/babel.js and\n  \t\t    // def/esprima.js. In the future, it will be possible to load only one set\n  \t\t    // of definitions appropriate for a given parser, but until then we must\n  \t\t    // rely on default functions to reconcile the conflicting AST formats.\n  \t\t    def(\"ModuleSpecifier\")\n  \t\t        .bases(\"Specifier\")\n  \t\t        // This local field is used by Babel/Acorn. It should not technically\n  \t\t        // be optional in the Babel/Acorn AST format, but it must be optional\n  \t\t        // in the Esprima AST format.\n  \t\t        .field(\"local\", or(def(\"Identifier\"), null), defaults[\"null\"])\n  \t\t        // The id and name fields are used by Esprima. The id field should not\n  \t\t        // technically be optional in the Esprima AST format, but it must be\n  \t\t        // optional in the Babel/Acorn AST format.\n  \t\t        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n  \t\t        .field(\"name\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n  \t\t    // import {<id [as name]>} from ...;\n  \t\t    def(\"ImportSpecifier\")\n  \t\t        .bases(\"ModuleSpecifier\")\n  \t\t        .build(\"imported\", \"local\")\n  \t\t        .field(\"imported\", def(\"Identifier\"));\n  \t\t    // import <id> from ...;\n  \t\t    def(\"ImportDefaultSpecifier\")\n  \t\t        .bases(\"ModuleSpecifier\")\n  \t\t        .build(\"local\");\n  \t\t    // import <* as id> from ...;\n  \t\t    def(\"ImportNamespaceSpecifier\")\n  \t\t        .bases(\"ModuleSpecifier\")\n  \t\t        .build(\"local\");\n  \t\t    def(\"ImportDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"specifiers\", \"source\", \"importKind\")\n  \t\t        .field(\"specifiers\", [or(def(\"ImportSpecifier\"), def(\"ImportNamespaceSpecifier\"), def(\"ImportDefaultSpecifier\"))], defaults.emptyArray)\n  \t\t        .field(\"source\", def(\"Literal\"))\n  \t\t        .field(\"importKind\", or(\"value\", \"type\"), function () {\n  \t\t        return \"value\";\n  \t\t    });\n  \t\t    def(\"ExportNamedDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"declaration\", \"specifiers\", \"source\")\n  \t\t        .field(\"declaration\", or(def(\"Declaration\"), null))\n  \t\t        .field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray)\n  \t\t        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  \t\t    def(\"ExportSpecifier\")\n  \t\t        .bases(\"ModuleSpecifier\")\n  \t\t        .build(\"local\", \"exported\")\n  \t\t        .field(\"exported\", def(\"Identifier\"));\n  \t\t    def(\"ExportDefaultDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"declaration\")\n  \t\t        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n  \t\t    def(\"ExportAllDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"source\")\n  \t\t        .field(\"source\", def(\"Literal\"));\n  \t\t    def(\"TaggedTemplateExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"tag\", \"quasi\")\n  \t\t        .field(\"tag\", def(\"Expression\"))\n  \t\t        .field(\"quasi\", def(\"TemplateLiteral\"));\n  \t\t    def(\"TemplateLiteral\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"quasis\", \"expressions\")\n  \t\t        .field(\"quasis\", [def(\"TemplateElement\")])\n  \t\t        .field(\"expressions\", [def(\"Expression\")]);\n  \t\t    def(\"TemplateElement\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"value\", \"tail\")\n  \t\t        .field(\"value\", { \"cooked\": String, \"raw\": String })\n  \t\t        .field(\"tail\", Boolean);\n  \t\t    def(\"MetaProperty\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"meta\", \"property\")\n  \t\t        .field(\"meta\", def(\"Identifier\"))\n  \t\t        .field(\"property\", def(\"Identifier\"));\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es6, es6.exports));\n  \treturn es6.exports;\n  }\n\n  es2016$1.exports;\n\n  var hasRequiredEs2016;\n\n  function requireEs2016 () {\n  \tif (hasRequiredEs2016) return es2016$1.exports;\n  \thasRequiredEs2016 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es2016_1 = tslib_1.__importDefault(requireEs2016$1());\n  \t\tvar es6_1 = tslib_1.__importDefault(requireEs6());\n  \t\tvar shared_1 = requireShared();\n  \t\tfunction default_1(fork) {\n  \t\t    // The es2016OpsDef plugin comes before es6Def so BinaryOperators and\n  \t\t    // AssignmentOperators will be appropriately augmented before they are first\n  \t\t    // used in the core definitions for this fork.\n  \t\t    fork.use(es2016_1.default);\n  \t\t    fork.use(es6_1.default);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2016$1, es2016$1.exports));\n  \treturn es2016$1.exports;\n  }\n\n  es2017$1.exports;\n\n  var hasRequiredEs2017;\n\n  function requireEs2017 () {\n  \tif (hasRequiredEs2017) return es2017$1.exports;\n  \thasRequiredEs2017 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es2016_1 = tslib_1.__importDefault(requireEs2016());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es2016_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    def(\"Function\")\n  \t\t        .field(\"async\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"AwaitExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Expression\"));\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2017$1, es2017$1.exports));\n  \treturn es2017$1.exports;\n  }\n\n  es2018$1.exports;\n\n  var hasRequiredEs2018;\n\n  function requireEs2018 () {\n  \tif (hasRequiredEs2018) return es2018$1.exports;\n  \thasRequiredEs2018 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es2017_1 = tslib_1.__importDefault(requireEs2017());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es2017_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    def(\"ForOfStatement\")\n  \t\t        .field(\"await\", Boolean, defaults[\"false\"]);\n  \t\t    // Legacy\n  \t\t    def(\"SpreadProperty\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Expression\"));\n  \t\t    def(\"ObjectExpression\")\n  \t\t        .field(\"properties\", [or(def(\"Property\"), def(\"SpreadProperty\"), // Legacy\n  \t\t        def(\"SpreadElement\"))]);\n  \t\t    def(\"TemplateElement\")\n  \t\t        .field(\"value\", { \"cooked\": or(String, null), \"raw\": String });\n  \t\t    // Legacy\n  \t\t    def(\"SpreadPropertyPattern\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Pattern\"));\n  \t\t    def(\"ObjectPattern\")\n  \t\t        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"), def(\"RestElement\"), def(\"SpreadPropertyPattern\"))]);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2018$1, es2018$1.exports));\n  \treturn es2018$1.exports;\n  }\n\n  es2019$1.exports;\n\n  var hasRequiredEs2019;\n\n  function requireEs2019 () {\n  \tif (hasRequiredEs2019) return es2019$1.exports;\n  \thasRequiredEs2019 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es2018_1 = tslib_1.__importDefault(requireEs2018());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es2018_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    def(\"CatchClause\")\n  \t\t        .field(\"param\", or(def(\"Pattern\"), null), defaults[\"null\"]);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2019$1, es2019$1.exports));\n  \treturn es2019$1.exports;\n  }\n\n  es2020$1.exports;\n\n  var hasRequiredEs2020;\n\n  function requireEs2020 () {\n  \tif (hasRequiredEs2020) return es2020$1.exports;\n  \thasRequiredEs2020 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es2020_1 = tslib_1.__importDefault(requireEs2020$1());\n  \t\tvar es2019_1 = tslib_1.__importDefault(requireEs2019());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    // The es2020OpsDef plugin comes before es2019Def so LogicalOperators will be\n  \t\t    // appropriately augmented before first used.\n  \t\t    fork.use(es2020_1.default);\n  \t\t    fork.use(es2019_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var shared = fork.use(shared_1.default);\n  \t\t    var defaults = shared.defaults;\n  \t\t    def(\"ImportExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"source\")\n  \t\t        .field(\"source\", def(\"Expression\"));\n  \t\t    def(\"ExportAllDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"source\", \"exported\")\n  \t\t        .field(\"source\", def(\"Literal\"))\n  \t\t        .field(\"exported\", or(def(\"Identifier\"), null, void 0), defaults[\"null\"]);\n  \t\t    // Optional chaining\n  \t\t    def(\"ChainElement\")\n  \t\t        .bases(\"Node\")\n  \t\t        .field(\"optional\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"CallExpression\")\n  \t\t        .bases(\"Expression\", \"ChainElement\");\n  \t\t    def(\"MemberExpression\")\n  \t\t        .bases(\"Expression\", \"ChainElement\");\n  \t\t    def(\"ChainExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", def(\"ChainElement\"));\n  \t\t    def(\"OptionalCallExpression\")\n  \t\t        .bases(\"CallExpression\")\n  \t\t        .build(\"callee\", \"arguments\", \"optional\")\n  \t\t        .field(\"optional\", Boolean, defaults[\"true\"]);\n  \t\t    // Deprecated optional chaining type, doesn't work with babelParser@7.11.0 or newer\n  \t\t    def(\"OptionalMemberExpression\")\n  \t\t        .bases(\"MemberExpression\")\n  \t\t        .build(\"object\", \"property\", \"computed\", \"optional\")\n  \t\t        .field(\"optional\", Boolean, defaults[\"true\"]);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2020$1, es2020$1.exports));\n  \treturn es2020$1.exports;\n  }\n\n  es2021$2.exports;\n\n  var hasRequiredEs2021;\n\n  function requireEs2021 () {\n  \tif (hasRequiredEs2021) return es2021$2.exports;\n  \thasRequiredEs2021 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es2021_1 = tslib_1.__importDefault(requireEs2021$1());\n  \t\tvar es2020_1 = tslib_1.__importDefault(requireEs2020());\n  \t\tvar shared_1 = requireShared();\n  \t\tfunction default_1(fork) {\n  \t\t    // The es2021OpsDef plugin comes before es2020Def so AssignmentOperators will\n  \t\t    // be appropriately augmented before first used.\n  \t\t    fork.use(es2021_1.default);\n  \t\t    fork.use(es2020_1.default);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2021$2, es2021$2.exports));\n  \treturn es2021$2.exports;\n  }\n\n  es2022$1.exports;\n\n  var hasRequiredEs2022;\n\n  function requireEs2022 () {\n  \tif (hasRequiredEs2022) return es2022$1.exports;\n  \thasRequiredEs2022 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es2021_1 = tslib_1.__importDefault(requireEs2021());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = requireShared();\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es2021_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    def(\"StaticBlock\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [def(\"Statement\")]);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (es2022$1, es2022$1.exports));\n  \treturn es2022$1.exports;\n  }\n\n  esProposals.exports;\n\n  var hasRequiredEsProposals;\n\n  function requireEsProposals () {\n  \tif (hasRequiredEsProposals) return esProposals.exports;\n  \thasRequiredEsProposals = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tvar es2022_1 = tslib_1.__importDefault(requireEs2022());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es2022_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var Type = types.Type;\n  \t\t    var def = types.Type.def;\n  \t\t    var or = Type.or;\n  \t\t    var shared = fork.use(shared_1.default);\n  \t\t    var defaults = shared.defaults;\n  \t\t    def(\"AwaitExpression\")\n  \t\t        .build(\"argument\", \"all\")\n  \t\t        .field(\"argument\", or(def(\"Expression\"), null))\n  \t\t        .field(\"all\", Boolean, defaults[\"false\"]);\n  \t\t    // Decorators\n  \t\t    def(\"Decorator\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", def(\"Expression\"));\n  \t\t    def(\"Property\")\n  \t\t        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  \t\t    def(\"MethodDefinition\")\n  \t\t        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  \t\t    // Private names\n  \t\t    def(\"PrivateName\")\n  \t\t        .bases(\"Expression\", \"Pattern\")\n  \t\t        .build(\"id\")\n  \t\t        .field(\"id\", def(\"Identifier\"));\n  \t\t    def(\"ClassPrivateProperty\")\n  \t\t        .bases(\"ClassProperty\")\n  \t\t        .build(\"key\", \"value\")\n  \t\t        .field(\"key\", def(\"PrivateName\"))\n  \t\t        .field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    // https://github.com/tc39/proposal-import-assertions\n  \t\t    def(\"ImportAttribute\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"key\", \"value\")\n  \t\t        .field(\"key\", or(def(\"Identifier\"), def(\"Literal\")))\n  \t\t        .field(\"value\", def(\"Expression\"));\n  \t\t    [\"ImportDeclaration\",\n  \t\t        \"ExportAllDeclaration\",\n  \t\t        \"ExportNamedDeclaration\",\n  \t\t    ].forEach(function (decl) {\n  \t\t        def(decl).field(\"assertions\", [def(\"ImportAttribute\")], defaults.emptyArray);\n  \t\t    });\n  \t\t    // https://github.com/tc39/proposal-record-tuple\n  \t\t    // https://github.com/babel/babel/pull/10865\n  \t\t    def(\"RecordExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"properties\")\n  \t\t        .field(\"properties\", [or(def(\"ObjectProperty\"), def(\"ObjectMethod\"), def(\"SpreadElement\"))]);\n  \t\t    def(\"TupleExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"elements\")\n  \t\t        .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), null)]);\n  \t\t    // https://github.com/tc39/proposal-js-module-blocks\n  \t\t    // https://github.com/babel/babel/pull/12469\n  \t\t    def(\"ModuleExpression\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", def(\"Program\"));\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (esProposals, esProposals.exports));\n  \treturn esProposals.exports;\n  }\n\n  var jsx = {exports: {}};\n\n  jsx.exports;\n\n  var hasRequiredJsx;\n\n  function requireJsx () {\n  \tif (hasRequiredJsx) return jsx.exports;\n  \thasRequiredJsx = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es_proposals_1 = tslib_1.__importDefault(requireEsProposals());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es_proposals_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    def(\"JSXAttribute\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"name\", \"value\")\n  \t\t        .field(\"name\", or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\")))\n  \t\t        .field(\"value\", or(def(\"Literal\"), // attr=\"value\"\n  \t\t    def(\"JSXExpressionContainer\"), // attr={value}\n  \t\t    def(\"JSXElement\"), // attr=<div />\n  \t\t    def(\"JSXFragment\"), // attr=<></>\n  \t\t    null // attr= or just attr\n  \t\t    ), defaults[\"null\"]);\n  \t\t    def(\"JSXIdentifier\")\n  \t\t        .bases(\"Identifier\")\n  \t\t        .build(\"name\")\n  \t\t        .field(\"name\", String);\n  \t\t    def(\"JSXNamespacedName\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"namespace\", \"name\")\n  \t\t        .field(\"namespace\", def(\"JSXIdentifier\"))\n  \t\t        .field(\"name\", def(\"JSXIdentifier\"));\n  \t\t    def(\"JSXMemberExpression\")\n  \t\t        .bases(\"MemberExpression\")\n  \t\t        .build(\"object\", \"property\")\n  \t\t        .field(\"object\", or(def(\"JSXIdentifier\"), def(\"JSXMemberExpression\")))\n  \t\t        .field(\"property\", def(\"JSXIdentifier\"))\n  \t\t        .field(\"computed\", Boolean, defaults.false);\n  \t\t    var JSXElementName = or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\"), def(\"JSXMemberExpression\"));\n  \t\t    def(\"JSXSpreadAttribute\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Expression\"));\n  \t\t    var JSXAttributes = [or(def(\"JSXAttribute\"), def(\"JSXSpreadAttribute\"))];\n  \t\t    def(\"JSXExpressionContainer\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", or(def(\"Expression\"), def(\"JSXEmptyExpression\")));\n  \t\t    var JSXChildren = [or(def(\"JSXText\"), def(\"JSXExpressionContainer\"), def(\"JSXSpreadChild\"), def(\"JSXElement\"), def(\"JSXFragment\"), def(\"Literal\") // Legacy: Esprima should return JSXText instead.\n  \t\t        )];\n  \t\t    def(\"JSXElement\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"openingElement\", \"closingElement\", \"children\")\n  \t\t        .field(\"openingElement\", def(\"JSXOpeningElement\"))\n  \t\t        .field(\"closingElement\", or(def(\"JSXClosingElement\"), null), defaults[\"null\"])\n  \t\t        .field(\"children\", JSXChildren, defaults.emptyArray)\n  \t\t        .field(\"name\", JSXElementName, function () {\n  \t\t        // Little-known fact: the `this` object inside a default function\n  \t\t        // is none other than the partially-built object itself, and any\n  \t\t        // fields initialized directly from builder function arguments\n  \t\t        // (like openingElement, closingElement, and children) are\n  \t\t        // guaranteed to be available.\n  \t\t        return this.openingElement.name;\n  \t\t    }, true) // hidden from traversal\n  \t\t        .field(\"selfClosing\", Boolean, function () {\n  \t\t        return this.openingElement.selfClosing;\n  \t\t    }, true) // hidden from traversal\n  \t\t        .field(\"attributes\", JSXAttributes, function () {\n  \t\t        return this.openingElement.attributes;\n  \t\t    }, true); // hidden from traversal\n  \t\t    def(\"JSXOpeningElement\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"name\", \"attributes\", \"selfClosing\")\n  \t\t        .field(\"name\", JSXElementName)\n  \t\t        .field(\"attributes\", JSXAttributes, defaults.emptyArray)\n  \t\t        .field(\"selfClosing\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"JSXClosingElement\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"name\")\n  \t\t        .field(\"name\", JSXElementName);\n  \t\t    def(\"JSXFragment\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"openingFragment\", \"closingFragment\", \"children\")\n  \t\t        .field(\"openingFragment\", def(\"JSXOpeningFragment\"))\n  \t\t        .field(\"closingFragment\", def(\"JSXClosingFragment\"))\n  \t\t        .field(\"children\", JSXChildren, defaults.emptyArray);\n  \t\t    def(\"JSXOpeningFragment\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build();\n  \t\t    def(\"JSXClosingFragment\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build();\n  \t\t    def(\"JSXText\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build(\"value\", \"raw\")\n  \t\t        .field(\"value\", String)\n  \t\t        .field(\"raw\", String, function () {\n  \t\t        return this.value;\n  \t\t    });\n  \t\t    def(\"JSXEmptyExpression\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build();\n  \t\t    def(\"JSXSpreadChild\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", def(\"Expression\"));\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (jsx, jsx.exports));\n  \treturn jsx.exports;\n  }\n\n  var flow = {exports: {}};\n\n  var typeAnnotations = {exports: {}};\n\n  typeAnnotations.exports;\n\n  var hasRequiredTypeAnnotations;\n\n  function requireTypeAnnotations () {\n  \tif (hasRequiredTypeAnnotations) return typeAnnotations.exports;\n  \thasRequiredTypeAnnotations = 1;\n  \t(function (module, exports) {\n  \t\t/**\n  \t\t * Type annotation defs shared between Flow and TypeScript.\n  \t\t * These defs could not be defined in ./flow.ts or ./typescript.ts directly\n  \t\t * because they use the same name.\n  \t\t */\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    var TypeAnnotation = or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null);\n  \t\t    var TypeParamDecl = or(def(\"TypeParameterDeclaration\"), def(\"TSTypeParameterDeclaration\"), null);\n  \t\t    def(\"Identifier\")\n  \t\t        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n  \t\t    def(\"ObjectPattern\")\n  \t\t        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n  \t\t    def(\"Function\")\n  \t\t        .field(\"returnType\", TypeAnnotation, defaults[\"null\"])\n  \t\t        .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"]);\n  \t\t    def(\"ClassProperty\")\n  \t\t        .build(\"key\", \"value\", \"typeAnnotation\", \"static\")\n  \t\t        .field(\"value\", or(def(\"Expression\"), null))\n  \t\t        .field(\"static\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n  \t\t    [\"ClassDeclaration\",\n  \t\t        \"ClassExpression\",\n  \t\t    ].forEach(function (typeName) {\n  \t\t        def(typeName)\n  \t\t            .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"])\n  \t\t            .field(\"superTypeParameters\", or(def(\"TypeParameterInstantiation\"), def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"])\n  \t\t            .field(\"implements\", or([def(\"ClassImplements\")], [def(\"TSExpressionWithTypeArguments\")]), defaults.emptyArray);\n  \t\t    });\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (typeAnnotations, typeAnnotations.exports));\n  \treturn typeAnnotations.exports;\n  }\n\n  flow.exports;\n\n  var hasRequiredFlow;\n\n  function requireFlow () {\n  \tif (hasRequiredFlow) return flow.exports;\n  \thasRequiredFlow = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es_proposals_1 = tslib_1.__importDefault(requireEsProposals());\n  \t\tvar type_annotations_1 = tslib_1.__importDefault(requireTypeAnnotations());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es_proposals_1.default);\n  \t\t    fork.use(type_annotations_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    // Base types\n  \t\t    def(\"Flow\").bases(\"Node\");\n  \t\t    def(\"FlowType\").bases(\"Flow\");\n  \t\t    // Type annotations\n  \t\t    def(\"AnyTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"EmptyTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"MixedTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"VoidTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"SymbolTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"NumberTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"BigIntTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"NumberLiteralTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"value\", \"raw\")\n  \t\t        .field(\"value\", Number)\n  \t\t        .field(\"raw\", String);\n  \t\t    // Babylon 6 differs in AST from Flow\n  \t\t    // same as NumberLiteralTypeAnnotation\n  \t\t    def(\"NumericLiteralTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"value\", \"raw\")\n  \t\t        .field(\"value\", Number)\n  \t\t        .field(\"raw\", String);\n  \t\t    def(\"BigIntLiteralTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"value\", \"raw\")\n  \t\t        .field(\"value\", null)\n  \t\t        .field(\"raw\", String);\n  \t\t    def(\"StringTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"StringLiteralTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"value\", \"raw\")\n  \t\t        .field(\"value\", String)\n  \t\t        .field(\"raw\", String);\n  \t\t    def(\"BooleanTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"BooleanLiteralTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"value\", \"raw\")\n  \t\t        .field(\"value\", Boolean)\n  \t\t        .field(\"raw\", String);\n  \t\t    def(\"TypeAnnotation\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"typeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", def(\"FlowType\"));\n  \t\t    def(\"NullableTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"typeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", def(\"FlowType\"));\n  \t\t    def(\"NullLiteralTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"NullTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"ThisTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"ExistsTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"ExistentialTypeParam\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build();\n  \t\t    def(\"FunctionTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n  \t\t        .field(\"params\", [def(\"FunctionTypeParam\")])\n  \t\t        .field(\"returnType\", def(\"FlowType\"))\n  \t\t        .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n  \t\t        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n  \t\t    def(\"FunctionTypeParam\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"name\", \"typeAnnotation\", \"optional\")\n  \t\t        .field(\"name\", or(def(\"Identifier\"), null))\n  \t\t        .field(\"typeAnnotation\", def(\"FlowType\"))\n  \t\t        .field(\"optional\", Boolean);\n  \t\t    def(\"ArrayTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"elementType\")\n  \t\t        .field(\"elementType\", def(\"FlowType\"));\n  \t\t    def(\"ObjectTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"properties\", \"indexers\", \"callProperties\")\n  \t\t        .field(\"properties\", [\n  \t\t        or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))\n  \t\t    ])\n  \t\t        .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n  \t\t        .field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray)\n  \t\t        .field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"])\n  \t\t        .field(\"exact\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n  \t\t    def(\"Variance\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"kind\")\n  \t\t        .field(\"kind\", or(\"plus\", \"minus\"));\n  \t\t    var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n  \t\t    def(\"ObjectTypeProperty\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"key\", \"value\", \"optional\")\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n  \t\t        .field(\"value\", def(\"FlowType\"))\n  \t\t        .field(\"optional\", Boolean)\n  \t\t        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n  \t\t    def(\"ObjectTypeIndexer\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"id\", \"key\", \"value\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"key\", def(\"FlowType\"))\n  \t\t        .field(\"value\", def(\"FlowType\"))\n  \t\t        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n  \t\t        .field(\"static\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"ObjectTypeCallProperty\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", def(\"FunctionTypeAnnotation\"))\n  \t\t        .field(\"static\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"QualifiedTypeIdentifier\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"qualification\", \"id\")\n  \t\t        .field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n  \t\t        .field(\"id\", def(\"Identifier\"));\n  \t\t    def(\"GenericTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"id\", \"typeParameters\")\n  \t\t        .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n  \t\t        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n  \t\t    def(\"MemberTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"object\", \"property\")\n  \t\t        .field(\"object\", def(\"Identifier\"))\n  \t\t        .field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n  \t\t    def(\"IndexedAccessType\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"objectType\", \"indexType\")\n  \t\t        .field(\"objectType\", def(\"FlowType\"))\n  \t\t        .field(\"indexType\", def(\"FlowType\"));\n  \t\t    def(\"OptionalIndexedAccessType\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"objectType\", \"indexType\", \"optional\")\n  \t\t        .field(\"objectType\", def(\"FlowType\"))\n  \t\t        .field(\"indexType\", def(\"FlowType\"))\n  \t\t        .field('optional', Boolean);\n  \t\t    def(\"UnionTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"types\")\n  \t\t        .field(\"types\", [def(\"FlowType\")]);\n  \t\t    def(\"IntersectionTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"types\")\n  \t\t        .field(\"types\", [def(\"FlowType\")]);\n  \t\t    def(\"TypeofTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"FlowType\"));\n  \t\t    def(\"ObjectTypeSpreadProperty\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"FlowType\"));\n  \t\t    def(\"ObjectTypeInternalSlot\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"id\", \"value\", \"optional\", \"static\", \"method\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"value\", def(\"FlowType\"))\n  \t\t        .field(\"optional\", Boolean)\n  \t\t        .field(\"static\", Boolean)\n  \t\t        .field(\"method\", Boolean);\n  \t\t    def(\"TypeParameterDeclaration\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"params\")\n  \t\t        .field(\"params\", [def(\"TypeParameter\")]);\n  \t\t    def(\"TypeParameterInstantiation\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"params\")\n  \t\t        .field(\"params\", [def(\"FlowType\")]);\n  \t\t    def(\"TypeParameter\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"name\", \"variance\", \"bound\", \"default\")\n  \t\t        .field(\"name\", String)\n  \t\t        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n  \t\t        .field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"])\n  \t\t        .field(\"default\", or(def(\"FlowType\"), null), defaults[\"null\"]);\n  \t\t    def(\"ClassProperty\")\n  \t\t        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n  \t\t    def(\"ClassImplements\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"id\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n  \t\t        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n  \t\t    def(\"InterfaceTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"body\", \"extends\")\n  \t\t        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n  \t\t        .field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n  \t\t    def(\"InterfaceDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"body\", \"extends\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"])\n  \t\t        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n  \t\t        .field(\"extends\", [def(\"InterfaceExtends\")]);\n  \t\t    def(\"DeclareInterface\")\n  \t\t        .bases(\"InterfaceDeclaration\")\n  \t\t        .build(\"id\", \"body\", \"extends\");\n  \t\t    def(\"InterfaceExtends\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"id\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n  \t\t    def(\"TypeAlias\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"typeParameters\", \"right\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n  \t\t        .field(\"right\", def(\"FlowType\"));\n  \t\t    def(\"DeclareTypeAlias\")\n  \t\t        .bases(\"TypeAlias\")\n  \t\t        .build(\"id\", \"typeParameters\", \"right\");\n  \t\t    def(\"OpaqueType\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n  \t\t        .field(\"impltype\", def(\"FlowType\"))\n  \t\t        .field(\"supertype\", or(def(\"FlowType\"), null));\n  \t\t    def(\"DeclareOpaqueType\")\n  \t\t        .bases(\"OpaqueType\")\n  \t\t        .build(\"id\", \"typeParameters\", \"supertype\")\n  \t\t        .field(\"impltype\", or(def(\"FlowType\"), null));\n  \t\t    def(\"TypeCastExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"expression\", \"typeAnnotation\")\n  \t\t        .field(\"expression\", def(\"Expression\"))\n  \t\t        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n  \t\t    def(\"TupleTypeAnnotation\")\n  \t\t        .bases(\"FlowType\")\n  \t\t        .build(\"types\")\n  \t\t        .field(\"types\", [def(\"FlowType\")]);\n  \t\t    def(\"DeclareVariable\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"id\")\n  \t\t        .field(\"id\", def(\"Identifier\"));\n  \t\t    def(\"DeclareFunction\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"id\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n  \t\t    def(\"DeclareClass\")\n  \t\t        .bases(\"InterfaceDeclaration\")\n  \t\t        .build(\"id\");\n  \t\t    def(\"DeclareModule\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"id\", \"body\")\n  \t\t        .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n  \t\t        .field(\"body\", def(\"BlockStatement\"));\n  \t\t    def(\"DeclareModuleExports\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"typeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n  \t\t    def(\"DeclareExportDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n  \t\t        .field(\"default\", Boolean)\n  \t\t        .field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"), // Implies default.\n  \t\t    def(\"TypeAlias\"), // Implies named type\n  \t\t    def(\"DeclareOpaqueType\"), // Implies named opaque type\n  \t\t    def(\"InterfaceDeclaration\"), null))\n  \t\t        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n  \t\t        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  \t\t    def(\"DeclareExportAllDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"source\")\n  \t\t        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  \t\t    def(\"ImportDeclaration\")\n  \t\t        .field(\"importKind\", or(\"value\", \"type\", \"typeof\"), function () { return \"value\"; });\n  \t\t    def(\"FlowPredicate\").bases(\"Flow\");\n  \t\t    def(\"InferredPredicate\")\n  \t\t        .bases(\"FlowPredicate\")\n  \t\t        .build();\n  \t\t    def(\"DeclaredPredicate\")\n  \t\t        .bases(\"FlowPredicate\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", def(\"Expression\"));\n  \t\t    def(\"Function\")\n  \t\t        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n  \t\t    def(\"CallExpression\")\n  \t\t        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n  \t\t    def(\"NewExpression\")\n  \t\t        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n  \t\t    // Enums\n  \t\t    def(\"EnumDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"body\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"body\", or(def(\"EnumBooleanBody\"), def(\"EnumNumberBody\"), def(\"EnumStringBody\"), def(\"EnumSymbolBody\")));\n  \t\t    def(\"EnumBooleanBody\")\n  \t\t        .build(\"members\", \"explicitType\")\n  \t\t        .field(\"members\", [def(\"EnumBooleanMember\")])\n  \t\t        .field(\"explicitType\", Boolean);\n  \t\t    def(\"EnumNumberBody\")\n  \t\t        .build(\"members\", \"explicitType\")\n  \t\t        .field(\"members\", [def(\"EnumNumberMember\")])\n  \t\t        .field(\"explicitType\", Boolean);\n  \t\t    def(\"EnumStringBody\")\n  \t\t        .build(\"members\", \"explicitType\")\n  \t\t        .field(\"members\", or([def(\"EnumStringMember\")], [def(\"EnumDefaultedMember\")]))\n  \t\t        .field(\"explicitType\", Boolean);\n  \t\t    def(\"EnumSymbolBody\")\n  \t\t        .build(\"members\")\n  \t\t        .field(\"members\", [def(\"EnumDefaultedMember\")]);\n  \t\t    def(\"EnumBooleanMember\")\n  \t\t        .build(\"id\", \"init\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"init\", or(def(\"Literal\"), Boolean));\n  \t\t    def(\"EnumNumberMember\")\n  \t\t        .build(\"id\", \"init\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"init\", def(\"Literal\"));\n  \t\t    def(\"EnumStringMember\")\n  \t\t        .build(\"id\", \"init\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"init\", def(\"Literal\"));\n  \t\t    def(\"EnumDefaultedMember\")\n  \t\t        .build(\"id\")\n  \t\t        .field(\"id\", def(\"Identifier\"));\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (flow, flow.exports));\n  \treturn flow.exports;\n  }\n\n  var esprima$1 = {exports: {}};\n\n  esprima$1.exports;\n\n  var hasRequiredEsprima$1;\n\n  function requireEsprima$1 () {\n  \tif (hasRequiredEsprima$1) return esprima$1.exports;\n  \thasRequiredEsprima$1 = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es_proposals_1 = tslib_1.__importDefault(requireEsProposals());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    fork.use(es_proposals_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    def(\"VariableDeclaration\")\n  \t\t        .field(\"declarations\", [or(def(\"VariableDeclarator\"), def(\"Identifier\") // Esprima deviation.\n  \t\t        )]);\n  \t\t    def(\"Property\")\n  \t\t        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\") // Esprima deviation.\n  \t\t    ));\n  \t\t    def(\"ArrayPattern\")\n  \t\t        .field(\"elements\", [or(def(\"Pattern\"), def(\"SpreadElement\"), null)]);\n  \t\t    def(\"ObjectPattern\")\n  \t\t        .field(\"properties\", [or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\") // Used by Esprima.\n  \t\t        )]);\n  \t\t    // Like ModuleSpecifier, except type:\"ExportSpecifier\" and buildable.\n  \t\t    // export {<id [as name]>} [from ...];\n  \t\t    def(\"ExportSpecifier\")\n  \t\t        .bases(\"ModuleSpecifier\")\n  \t\t        .build(\"id\", \"name\");\n  \t\t    // export <*> from ...;\n  \t\t    def(\"ExportBatchSpecifier\")\n  \t\t        .bases(\"Specifier\")\n  \t\t        .build();\n  \t\t    def(\"ExportDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n  \t\t        .field(\"default\", Boolean)\n  \t\t        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\"), // Implies default.\n  \t\t    null))\n  \t\t        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n  \t\t        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n  \t\t    def(\"Block\")\n  \t\t        .bases(\"Comment\")\n  \t\t        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n  \t\t    def(\"Line\")\n  \t\t        .bases(\"Comment\")\n  \t\t        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (esprima$1, esprima$1.exports));\n  \treturn esprima$1.exports;\n  }\n\n  var babel = {exports: {}};\n\n  var babelCore = {exports: {}};\n\n  babelCore.exports;\n\n  var hasRequiredBabelCore;\n\n  function requireBabelCore () {\n  \tif (hasRequiredBabelCore) return babelCore.exports;\n  \thasRequiredBabelCore = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar es_proposals_1 = tslib_1.__importDefault(requireEsProposals());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    var _a, _b, _c, _d, _e;\n  \t\t    fork.use(es_proposals_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var isUndefined = types.builtInTypes.undefined;\n  \t\t    def(\"Noop\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build();\n  \t\t    def(\"DoExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [def(\"Statement\")]);\n  \t\t    def(\"BindExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"object\", \"callee\")\n  \t\t        .field(\"object\", or(def(\"Expression\"), null))\n  \t\t        .field(\"callee\", def(\"Expression\"));\n  \t\t    def(\"ParenthesizedExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", def(\"Expression\"));\n  \t\t    def(\"ExportNamespaceSpecifier\")\n  \t\t        .bases(\"Specifier\")\n  \t\t        .build(\"exported\")\n  \t\t        .field(\"exported\", def(\"Identifier\"));\n  \t\t    def(\"ExportDefaultSpecifier\")\n  \t\t        .bases(\"Specifier\")\n  \t\t        .build(\"exported\")\n  \t\t        .field(\"exported\", def(\"Identifier\"));\n  \t\t    def(\"CommentBlock\")\n  \t\t        .bases(\"Comment\")\n  \t\t        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n  \t\t    def(\"CommentLine\")\n  \t\t        .bases(\"Comment\")\n  \t\t        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n  \t\t    def(\"Directive\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", def(\"DirectiveLiteral\"));\n  \t\t    def(\"DirectiveLiteral\")\n  \t\t        .bases(\"Node\", \"Expression\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", String, defaults[\"use strict\"]);\n  \t\t    def(\"InterpreterDirective\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", String);\n  \t\t    def(\"BlockStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [def(\"Statement\")])\n  \t\t        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n  \t\t    def(\"Program\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [def(\"Statement\")])\n  \t\t        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray)\n  \t\t        .field(\"interpreter\", or(def(\"InterpreterDirective\"), null), defaults[\"null\"]);\n  \t\t    function makeLiteralExtra(rawValueType, toRaw) {\n  \t\t        if (rawValueType === void 0) { rawValueType = String; }\n  \t\t        return [\n  \t\t            \"extra\",\n  \t\t            {\n  \t\t                rawValue: rawValueType,\n  \t\t                raw: String,\n  \t\t            },\n  \t\t            function getDefault() {\n  \t\t                var value = types.getFieldValue(this, \"value\");\n  \t\t                return {\n  \t\t                    rawValue: value,\n  \t\t                    raw: toRaw ? toRaw(value) : String(value),\n  \t\t                };\n  \t\t            },\n  \t\t        ];\n  \t\t    }\n  \t\t    // Split Literal\n  \t\t    (_a = def(\"StringLiteral\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", String))\n  \t\t        .field.apply(_a, makeLiteralExtra(String, function (val) { return JSON.stringify(val); }));\n  \t\t    (_b = def(\"NumericLiteral\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", Number)\n  \t\t        .field(\"raw\", or(String, null), defaults[\"null\"]))\n  \t\t        .field.apply(_b, makeLiteralExtra(Number));\n  \t\t    (_c = def(\"BigIntLiteral\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build(\"value\")\n  \t\t        // Only String really seems appropriate here, since BigInt values\n  \t\t        // often exceed the limits of JS numbers.\n  \t\t        .field(\"value\", or(String, Number)))\n  \t\t        .field.apply(_c, makeLiteralExtra(String, function (val) { return val + \"n\"; }));\n  \t\t    // https://github.com/tc39/proposal-decimal\n  \t\t    // https://github.com/babel/babel/pull/11640\n  \t\t    (_d = def(\"DecimalLiteral\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", String))\n  \t\t        .field.apply(_d, makeLiteralExtra(String, function (val) { return val + \"m\"; }));\n  \t\t    def(\"NullLiteral\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build()\n  \t\t        .field(\"value\", null, defaults[\"null\"]);\n  \t\t    def(\"BooleanLiteral\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build(\"value\")\n  \t\t        .field(\"value\", Boolean);\n  \t\t    (_e = def(\"RegExpLiteral\")\n  \t\t        .bases(\"Literal\")\n  \t\t        .build(\"pattern\", \"flags\")\n  \t\t        .field(\"pattern\", String)\n  \t\t        .field(\"flags\", String)\n  \t\t        .field(\"value\", RegExp, function () {\n  \t\t        return new RegExp(this.pattern, this.flags);\n  \t\t    }))\n  \t\t        .field.apply(_e, makeLiteralExtra(or(RegExp, isUndefined), function (exp) { return \"/\".concat(exp.pattern, \"/\").concat(exp.flags || \"\"); })).field(\"regex\", {\n  \t\t        pattern: String,\n  \t\t        flags: String\n  \t\t    }, function () {\n  \t\t        return {\n  \t\t            pattern: this.pattern,\n  \t\t            flags: this.flags,\n  \t\t        };\n  \t\t    });\n  \t\t    var ObjectExpressionProperty = or(def(\"Property\"), def(\"ObjectMethod\"), def(\"ObjectProperty\"), def(\"SpreadProperty\"), def(\"SpreadElement\"));\n  \t\t    // Split Property -> ObjectProperty and ObjectMethod\n  \t\t    def(\"ObjectExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"properties\")\n  \t\t        .field(\"properties\", [ObjectExpressionProperty]);\n  \t\t    // ObjectMethod hoist .value properties to own properties\n  \t\t    def(\"ObjectMethod\")\n  \t\t        .bases(\"Node\", \"Function\")\n  \t\t        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\")\n  \t\t        .field(\"kind\", or(\"method\", \"get\", \"set\"))\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n  \t\t        .field(\"params\", [def(\"Pattern\")])\n  \t\t        .field(\"body\", def(\"BlockStatement\"))\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"generator\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"async\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"accessibility\", // TypeScript\n  \t\t    or(def(\"Literal\"), null), defaults[\"null\"])\n  \t\t        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  \t\t    def(\"ObjectProperty\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"key\", \"value\")\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n  \t\t        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n  \t\t        .field(\"accessibility\", // TypeScript\n  \t\t    or(def(\"Literal\"), null), defaults[\"null\"])\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"]);\n  \t\t    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"), def(\"ClassAccessorProperty\"), def(\"StaticBlock\"));\n  \t\t    // MethodDefinition -> ClassMethod\n  \t\t    def(\"ClassBody\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [ClassBodyElement]);\n  \t\t    def(\"ClassMethod\")\n  \t\t        .bases(\"Declaration\", \"Function\")\n  \t\t        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\")\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")));\n  \t\t    def(\"ClassPrivateMethod\")\n  \t\t        .bases(\"Declaration\", \"Function\")\n  \t\t        .build(\"key\", \"params\", \"body\", \"kind\", \"computed\", \"static\")\n  \t\t        .field(\"key\", def(\"PrivateName\"));\n  \t\t    def(\"ClassAccessorProperty\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"key\", \"value\", \"decorators\", \"computed\", \"static\")\n  \t\t        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"PrivateName\"), \n  \t\t    // Only when .computed is true (TODO enforce this)\n  \t\t    def(\"Expression\")))\n  \t\t        .field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    [\"ClassMethod\",\n  \t\t        \"ClassPrivateMethod\",\n  \t\t    ].forEach(function (typeName) {\n  \t\t        def(typeName)\n  \t\t            .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function () { return \"method\"; })\n  \t\t            .field(\"body\", def(\"BlockStatement\"))\n  \t\t            // For backwards compatibility only. Expect accessibility instead (see below).\n  \t\t            .field(\"access\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"]);\n  \t\t    });\n  \t\t    [\"ClassMethod\",\n  \t\t        \"ClassPrivateMethod\",\n  \t\t        \"ClassAccessorProperty\",\n  \t\t    ].forEach(function (typeName) {\n  \t\t        def(typeName)\n  \t\t            .field(\"computed\", Boolean, defaults[\"false\"])\n  \t\t            .field(\"static\", Boolean, defaults[\"false\"])\n  \t\t            .field(\"abstract\", Boolean, defaults[\"false\"])\n  \t\t            .field(\"accessibility\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n  \t\t            .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n  \t\t            .field(\"definite\", Boolean, defaults[\"false\"])\n  \t\t            .field(\"optional\", Boolean, defaults[\"false\"])\n  \t\t            .field(\"override\", Boolean, defaults[\"false\"])\n  \t\t            .field(\"readonly\", Boolean, defaults[\"false\"]);\n  \t\t    });\n  \t\t    var ObjectPatternProperty = or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\"), // Used by Esprima\n  \t\t    def(\"ObjectProperty\"), // Babel 6\n  \t\t    def(\"RestProperty\"), // Babel 6\n  \t\t    def(\"RestElement\"));\n  \t\t    // Split into RestProperty and SpreadProperty\n  \t\t    def(\"ObjectPattern\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"properties\")\n  \t\t        .field(\"properties\", [ObjectPatternProperty])\n  \t\t        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n  \t\t    def(\"SpreadProperty\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Expression\"));\n  \t\t    def(\"RestProperty\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"argument\")\n  \t\t        .field(\"argument\", def(\"Expression\"));\n  \t\t    def(\"ForAwaitStatement\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"left\", \"right\", \"body\")\n  \t\t        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n  \t\t        .field(\"right\", def(\"Expression\"))\n  \t\t        .field(\"body\", def(\"Statement\"));\n  \t\t    // The callee node of a dynamic import(...) expression.\n  \t\t    def(\"Import\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build();\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (babelCore, babelCore.exports));\n  \treturn babelCore.exports;\n  }\n\n  babel.exports;\n\n  var hasRequiredBabel;\n\n  function requireBabel () {\n  \tif (hasRequiredBabel) return babel.exports;\n  \thasRequiredBabel = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar babel_core_1 = tslib_1.__importDefault(requireBabelCore());\n  \t\tvar flow_1 = tslib_1.__importDefault(requireFlow());\n  \t\tvar shared_1 = requireShared();\n  \t\tfunction default_1(fork) {\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var def = types.Type.def;\n  \t\t    fork.use(babel_core_1.default);\n  \t\t    fork.use(flow_1.default);\n  \t\t    // https://github.com/babel/babel/pull/10148\n  \t\t    def(\"V8IntrinsicIdentifier\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"name\")\n  \t\t        .field(\"name\", String);\n  \t\t    // https://github.com/babel/babel/pull/13191\n  \t\t    // https://github.com/babel/website/pull/2541\n  \t\t    def(\"TopicReference\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build();\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (babel, babel.exports));\n  \treturn babel.exports;\n  }\n\n  var typescript = {exports: {}};\n\n  typescript.exports;\n\n  var hasRequiredTypescript;\n\n  function requireTypescript () {\n  \tif (hasRequiredTypescript) return typescript.exports;\n  \thasRequiredTypescript = 1;\n  \t(function (module, exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar babel_core_1 = tslib_1.__importDefault(requireBabelCore());\n  \t\tvar type_annotations_1 = tslib_1.__importDefault(requireTypeAnnotations());\n  \t\tvar types_1 = tslib_1.__importDefault(requireTypes());\n  \t\tvar shared_1 = tslib_1.__importStar(requireShared());\n  \t\tfunction default_1(fork) {\n  \t\t    // Since TypeScript is parsed by Babylon, include the core Babylon types\n  \t\t    // but omit the Flow-related types.\n  \t\t    fork.use(babel_core_1.default);\n  \t\t    fork.use(type_annotations_1.default);\n  \t\t    var types = fork.use(types_1.default);\n  \t\t    var n = types.namedTypes;\n  \t\t    var def = types.Type.def;\n  \t\t    var or = types.Type.or;\n  \t\t    var defaults = fork.use(shared_1.default).defaults;\n  \t\t    var StringLiteral = types.Type.from(function (value, deep) {\n  \t\t        if (n.StringLiteral &&\n  \t\t            n.StringLiteral.check(value, deep)) {\n  \t\t            return true;\n  \t\t        }\n  \t\t        if (n.Literal &&\n  \t\t            n.Literal.check(value, deep) &&\n  \t\t            typeof value.value === \"string\") {\n  \t\t            return true;\n  \t\t        }\n  \t\t        return false;\n  \t\t    }, \"StringLiteral\");\n  \t\t    def(\"TSType\")\n  \t\t        .bases(\"Node\");\n  \t\t    var TSEntityName = or(def(\"Identifier\"), def(\"TSQualifiedName\"));\n  \t\t    def(\"TSTypeReference\")\n  \t\t        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n  \t\t        .build(\"typeName\", \"typeParameters\")\n  \t\t        .field(\"typeName\", TSEntityName);\n  \t\t    // An abstract (non-buildable) base type that provide a commonly-needed\n  \t\t    // optional .typeParameters field.\n  \t\t    def(\"TSHasOptionalTypeParameterInstantiation\")\n  \t\t        .field(\"typeParameters\", or(def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"]);\n  \t\t    // An abstract (non-buildable) base type that provide a commonly-needed\n  \t\t    // optional .typeParameters field.\n  \t\t    def(\"TSHasOptionalTypeParameters\")\n  \t\t        .field(\"typeParameters\", or(def(\"TSTypeParameterDeclaration\"), null, void 0), defaults[\"null\"]);\n  \t\t    // An abstract (non-buildable) base type that provide a commonly-needed\n  \t\t    // optional .typeAnnotation field.\n  \t\t    def(\"TSHasOptionalTypeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n  \t\t    def(\"TSQualifiedName\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"left\", \"right\")\n  \t\t        .field(\"left\", TSEntityName)\n  \t\t        .field(\"right\", TSEntityName);\n  \t\t    def(\"TSAsExpression\")\n  \t\t        .bases(\"Expression\", \"Pattern\")\n  \t\t        .build(\"expression\", \"typeAnnotation\")\n  \t\t        .field(\"expression\", def(\"Expression\"))\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"))\n  \t\t        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n  \t\t    def(\"TSTypeCastExpression\")\n  \t\t        .bases(\"Expression\")\n  \t\t        .build(\"expression\", \"typeAnnotation\")\n  \t\t        .field(\"expression\", def(\"Expression\"))\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"));\n  \t\t    def(\"TSSatisfiesExpression\")\n  \t\t        .bases(\"Expression\", \"Pattern\")\n  \t\t        .build(\"expression\", \"typeAnnotation\")\n  \t\t        .field(\"expression\", def(\"Expression\"))\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"));\n  \t\t    def(\"TSNonNullExpression\")\n  \t\t        .bases(\"Expression\", \"Pattern\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", def(\"Expression\"));\n  \t\t    [\n  \t\t        \"TSAnyKeyword\",\n  \t\t        \"TSBigIntKeyword\",\n  \t\t        \"TSBooleanKeyword\",\n  \t\t        \"TSNeverKeyword\",\n  \t\t        \"TSNullKeyword\",\n  \t\t        \"TSNumberKeyword\",\n  \t\t        \"TSObjectKeyword\",\n  \t\t        \"TSStringKeyword\",\n  \t\t        \"TSSymbolKeyword\",\n  \t\t        \"TSUndefinedKeyword\",\n  \t\t        \"TSUnknownKeyword\",\n  \t\t        \"TSVoidKeyword\",\n  \t\t        \"TSIntrinsicKeyword\",\n  \t\t        \"TSThisType\",\n  \t\t    ].forEach(function (keywordType) {\n  \t\t        def(keywordType)\n  \t\t            .bases(\"TSType\")\n  \t\t            .build();\n  \t\t    });\n  \t\t    def(\"TSArrayType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"elementType\")\n  \t\t        .field(\"elementType\", def(\"TSType\"));\n  \t\t    def(\"TSLiteralType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"literal\")\n  \t\t        .field(\"literal\", or(def(\"NumericLiteral\"), def(\"StringLiteral\"), def(\"BooleanLiteral\"), def(\"TemplateLiteral\"), def(\"UnaryExpression\"), def(\"BigIntLiteral\")));\n  \t\t    def(\"TemplateLiteral\")\n  \t\t        // The TemplateLiteral type appears to be reused for TypeScript template\n  \t\t        // literal types (instead of introducing a new TSTemplateLiteralType type),\n  \t\t        // so we allow the templateLiteral.expressions array to be either all\n  \t\t        // expressions or all TypeScript types.\n  \t\t        .field(\"expressions\", or([def(\"Expression\")], [def(\"TSType\")]));\n  \t\t    [\"TSUnionType\",\n  \t\t        \"TSIntersectionType\",\n  \t\t    ].forEach(function (typeName) {\n  \t\t        def(typeName)\n  \t\t            .bases(\"TSType\")\n  \t\t            .build(\"types\")\n  \t\t            .field(\"types\", [def(\"TSType\")]);\n  \t\t    });\n  \t\t    def(\"TSConditionalType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"checkType\", \"extendsType\", \"trueType\", \"falseType\")\n  \t\t        .field(\"checkType\", def(\"TSType\"))\n  \t\t        .field(\"extendsType\", def(\"TSType\"))\n  \t\t        .field(\"trueType\", def(\"TSType\"))\n  \t\t        .field(\"falseType\", def(\"TSType\"));\n  \t\t    def(\"TSInferType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"typeParameter\")\n  \t\t        .field(\"typeParameter\", def(\"TSTypeParameter\"));\n  \t\t    def(\"TSParenthesizedType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"typeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"));\n  \t\t    var ParametersType = [or(def(\"Identifier\"), def(\"RestElement\"), def(\"ArrayPattern\"), def(\"ObjectPattern\"))];\n  \t\t    [\"TSFunctionType\",\n  \t\t        \"TSConstructorType\",\n  \t\t    ].forEach(function (typeName) {\n  \t\t        def(typeName)\n  \t\t            .bases(\"TSType\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n  \t\t            .build(\"parameters\")\n  \t\t            .field(\"parameters\", ParametersType);\n  \t\t    });\n  \t\t    def(\"TSDeclareFunction\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n  \t\t        .build(\"id\", \"params\", \"returnType\")\n  \t\t        .field(\"declare\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"async\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"generator\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n  \t\t        .field(\"params\", [def(\"Pattern\")])\n  \t\t        // tSFunctionTypeAnnotationCommon\n  \t\t        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n  \t\t    null), defaults[\"null\"]);\n  \t\t    def(\"TSDeclareMethod\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n  \t\t        .build(\"key\", \"params\", \"returnType\")\n  \t\t        .field(\"async\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"generator\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"params\", [def(\"Pattern\")])\n  \t\t        // classMethodOrPropertyCommon\n  \t\t        .field(\"abstract\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n  \t\t        .field(\"static\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"optional\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"key\", or(def(\"Identifier\"), def(\"StringLiteral\"), def(\"NumericLiteral\"), \n  \t\t    // Only allowed if .computed is true.\n  \t\t    def(\"Expression\")))\n  \t\t        // classMethodOrDeclareMethodCommon\n  \t\t        .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function getDefault() { return \"method\"; })\n  \t\t        .field(\"access\", // Not \"accessibility\"?\n  \t\t    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n  \t\t        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n  \t\t        // tSFunctionTypeAnnotationCommon\n  \t\t        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n  \t\t    null), defaults[\"null\"]);\n  \t\t    def(\"TSMappedType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"typeParameter\", \"typeAnnotation\")\n  \t\t        .field(\"readonly\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n  \t\t        .field(\"typeParameter\", def(\"TSTypeParameter\"))\n  \t\t        .field(\"optional\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n  \t\t        .field(\"typeAnnotation\", or(def(\"TSType\"), null), defaults[\"null\"]);\n  \t\t    def(\"TSTupleType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"elementTypes\")\n  \t\t        .field(\"elementTypes\", [or(def(\"TSType\"), def(\"TSNamedTupleMember\"))]);\n  \t\t    def(\"TSNamedTupleMember\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"label\", \"elementType\", \"optional\")\n  \t\t        .field(\"label\", def(\"Identifier\"))\n  \t\t        .field(\"optional\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"elementType\", def(\"TSType\"));\n  \t\t    def(\"TSRestType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"typeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"));\n  \t\t    def(\"TSOptionalType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"typeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"));\n  \t\t    def(\"TSIndexedAccessType\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"objectType\", \"indexType\")\n  \t\t        .field(\"objectType\", def(\"TSType\"))\n  \t\t        .field(\"indexType\", def(\"TSType\"));\n  \t\t    def(\"TSTypeOperator\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"operator\")\n  \t\t        .field(\"operator\", String)\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"));\n  \t\t    def(\"TSTypeAnnotation\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"typeAnnotation\")\n  \t\t        .field(\"typeAnnotation\", or(def(\"TSType\"), def(\"TSTypeAnnotation\")));\n  \t\t    def(\"TSIndexSignature\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n  \t\t        .build(\"parameters\", \"typeAnnotation\")\n  \t\t        .field(\"parameters\", [def(\"Identifier\")]) // Length === 1\n  \t\t        .field(\"readonly\", Boolean, defaults[\"false\"]);\n  \t\t    def(\"TSPropertySignature\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n  \t\t        .build(\"key\", \"typeAnnotation\", \"optional\")\n  \t\t        .field(\"key\", def(\"Expression\"))\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"readonly\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"optional\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    def(\"TSMethodSignature\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n  \t\t        .build(\"key\", \"parameters\", \"typeAnnotation\")\n  \t\t        .field(\"key\", def(\"Expression\"))\n  \t\t        .field(\"computed\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"optional\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"parameters\", ParametersType);\n  \t\t    def(\"TSTypePredicate\")\n  \t\t        .bases(\"TSTypeAnnotation\", \"TSType\")\n  \t\t        .build(\"parameterName\", \"typeAnnotation\", \"asserts\")\n  \t\t        .field(\"parameterName\", or(def(\"Identifier\"), def(\"TSThisType\")))\n  \t\t        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"])\n  \t\t        .field(\"asserts\", Boolean, defaults[\"false\"]);\n  \t\t    [\"TSCallSignatureDeclaration\",\n  \t\t        \"TSConstructSignatureDeclaration\",\n  \t\t    ].forEach(function (typeName) {\n  \t\t        def(typeName)\n  \t\t            .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n  \t\t            .build(\"parameters\", \"typeAnnotation\")\n  \t\t            .field(\"parameters\", ParametersType);\n  \t\t    });\n  \t\t    def(\"TSEnumMember\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"id\", \"initializer\")\n  \t\t        .field(\"id\", or(def(\"Identifier\"), StringLiteral))\n  \t\t        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    def(\"TSTypeQuery\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"exprName\")\n  \t\t        .field(\"exprName\", or(TSEntityName, def(\"TSImportType\")));\n  \t\t    // Inferred from Babylon's tsParseTypeMember method.\n  \t\t    var TSTypeMember = or(def(\"TSCallSignatureDeclaration\"), def(\"TSConstructSignatureDeclaration\"), def(\"TSIndexSignature\"), def(\"TSMethodSignature\"), def(\"TSPropertySignature\"));\n  \t\t    def(\"TSTypeLiteral\")\n  \t\t        .bases(\"TSType\")\n  \t\t        .build(\"members\")\n  \t\t        .field(\"members\", [TSTypeMember]);\n  \t\t    def(\"TSTypeParameter\")\n  \t\t        .bases(\"Identifier\")\n  \t\t        .build(\"name\", \"constraint\", \"default\")\n  \t\t        .field(\"name\", or(def(\"Identifier\"), String))\n  \t\t        .field(\"constraint\", or(def(\"TSType\"), void 0), defaults[\"undefined\"])\n  \t\t        .field(\"default\", or(def(\"TSType\"), void 0), defaults[\"undefined\"]);\n  \t\t    def(\"TSTypeAssertion\")\n  \t\t        .bases(\"Expression\", \"Pattern\")\n  \t\t        .build(\"typeAnnotation\", \"expression\")\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"))\n  \t\t        .field(\"expression\", def(\"Expression\"))\n  \t\t        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n  \t\t    def(\"TSTypeParameterDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"params\")\n  \t\t        .field(\"params\", [def(\"TSTypeParameter\")]);\n  \t\t    def(\"TSInstantiationExpression\")\n  \t\t        .bases(\"Expression\", \"TSHasOptionalTypeParameterInstantiation\")\n  \t\t        .build(\"expression\", \"typeParameters\")\n  \t\t        .field(\"expression\", def(\"Expression\"));\n  \t\t    def(\"TSTypeParameterInstantiation\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"params\")\n  \t\t        .field(\"params\", [def(\"TSType\")]);\n  \t\t    def(\"TSEnumDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"members\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"const\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"declare\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"members\", [def(\"TSEnumMember\")])\n  \t\t        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n  \t\t    def(\"TSTypeAliasDeclaration\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n  \t\t        .build(\"id\", \"typeAnnotation\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"declare\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"typeAnnotation\", def(\"TSType\"));\n  \t\t    def(\"TSModuleBlock\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [def(\"Statement\")]);\n  \t\t    def(\"TSModuleDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"body\")\n  \t\t        .field(\"id\", or(StringLiteral, TSEntityName))\n  \t\t        .field(\"declare\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"global\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"body\", or(def(\"TSModuleBlock\"), def(\"TSModuleDeclaration\"), null), defaults[\"null\"]);\n  \t\t    def(\"TSImportType\")\n  \t\t        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n  \t\t        .build(\"argument\", \"qualifier\", \"typeParameters\")\n  \t\t        .field(\"argument\", StringLiteral)\n  \t\t        .field(\"qualifier\", or(TSEntityName, void 0), defaults[\"undefined\"]);\n  \t\t    def(\"TSImportEqualsDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\", \"moduleReference\")\n  \t\t        .field(\"id\", def(\"Identifier\"))\n  \t\t        .field(\"isExport\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"moduleReference\", or(TSEntityName, def(\"TSExternalModuleReference\")));\n  \t\t    def(\"TSExternalModuleReference\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", StringLiteral);\n  \t\t    def(\"TSExportAssignment\")\n  \t\t        .bases(\"Statement\")\n  \t\t        .build(\"expression\")\n  \t\t        .field(\"expression\", def(\"Expression\"));\n  \t\t    def(\"TSNamespaceExportDeclaration\")\n  \t\t        .bases(\"Declaration\")\n  \t\t        .build(\"id\")\n  \t\t        .field(\"id\", def(\"Identifier\"));\n  \t\t    def(\"TSInterfaceBody\")\n  \t\t        .bases(\"Node\")\n  \t\t        .build(\"body\")\n  \t\t        .field(\"body\", [TSTypeMember]);\n  \t\t    def(\"TSExpressionWithTypeArguments\")\n  \t\t        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n  \t\t        .build(\"expression\", \"typeParameters\")\n  \t\t        .field(\"expression\", TSEntityName);\n  \t\t    def(\"TSInterfaceDeclaration\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n  \t\t        .build(\"id\", \"body\")\n  \t\t        .field(\"id\", TSEntityName)\n  \t\t        .field(\"declare\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"extends\", or([def(\"TSExpressionWithTypeArguments\")], null), defaults[\"null\"])\n  \t\t        .field(\"body\", def(\"TSInterfaceBody\"));\n  \t\t    def(\"TSParameterProperty\")\n  \t\t        .bases(\"Pattern\")\n  \t\t        .build(\"parameter\")\n  \t\t        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n  \t\t        .field(\"readonly\", Boolean, defaults[\"false\"])\n  \t\t        .field(\"parameter\", or(def(\"Identifier\"), def(\"AssignmentPattern\")));\n  \t\t    def(\"ClassProperty\")\n  \t\t        .field(\"access\", // Not \"accessibility\"?\n  \t\t    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"]);\n  \t\t    def(\"ClassAccessorProperty\")\n  \t\t        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\");\n  \t\t    // Defined already in es6 and babel-core.\n  \t\t    def(\"ClassBody\")\n  \t\t        .field(\"body\", [or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassAccessorProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"), def(\"StaticBlock\"), \n  \t\t        // Just need to add these types:\n  \t\t        def(\"TSDeclareMethod\"), TSTypeMember)]);\n  \t\t}\n  \t\texports.default = default_1;\n  \t\t(0, shared_1.maybeSetModuleExports)(function () { return module; });\n  \t\t\n  \t} (typescript, typescript.exports));\n  \treturn typescript.exports;\n  }\n\n  var namedTypes$1 = {};\n\n  var hasRequiredNamedTypes;\n\n  function requireNamedTypes () {\n  \tif (hasRequiredNamedTypes) return namedTypes$1;\n  \thasRequiredNamedTypes = 1;\n  \t(function (exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\texports.namedTypes = void 0;\n  \t\t(function (namedTypes) {\n  \t\t})(exports.namedTypes || (exports.namedTypes = {}));\n  \t\t\n  \t} (namedTypes$1));\n  \treturn namedTypes$1;\n  }\n\n  var hasRequiredMain;\n\n  function requireMain () {\n  \tif (hasRequiredMain) return main;\n  \thasRequiredMain = 1;\n  \t(function (exports) {\n  \t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \t\texports.visit = exports.use = exports.Type = exports.someField = exports.PathVisitor = exports.Path = exports.NodePath = exports.namedTypes = exports.getSupertypeNames = exports.getFieldValue = exports.getFieldNames = exports.getBuilderName = exports.finalize = exports.eachField = exports.defineMethod = exports.builtInTypes = exports.builders = exports.astNodesAreEquivalent = void 0;\n  \t\tvar tslib_1 = require$$0;\n  \t\tvar fork_1 = tslib_1.__importDefault(requireFork());\n  \t\tvar es_proposals_1 = tslib_1.__importDefault(requireEsProposals());\n  \t\tvar jsx_1 = tslib_1.__importDefault(requireJsx());\n  \t\tvar flow_1 = tslib_1.__importDefault(requireFlow());\n  \t\tvar esprima_1 = tslib_1.__importDefault(requireEsprima$1());\n  \t\tvar babel_1 = tslib_1.__importDefault(requireBabel());\n  \t\tvar typescript_1 = tslib_1.__importDefault(requireTypescript());\n  \t\tvar namedTypes_1 = requireNamedTypes();\n  \t\tObject.defineProperty(exports, \"namedTypes\", { enumerable: true, get: function () { return namedTypes_1.namedTypes; } });\n  \t\tvar _a = (0, fork_1.default)([\n  \t\t    // Feel free to add to or remove from this list of extension modules to\n  \t\t    // configure the precise type hierarchy that you need.\n  \t\t    es_proposals_1.default,\n  \t\t    jsx_1.default,\n  \t\t    flow_1.default,\n  \t\t    esprima_1.default,\n  \t\t    babel_1.default,\n  \t\t    typescript_1.default,\n  \t\t]), astNodesAreEquivalent = _a.astNodesAreEquivalent, builders = _a.builders, builtInTypes = _a.builtInTypes, defineMethod = _a.defineMethod, eachField = _a.eachField, finalize = _a.finalize, getBuilderName = _a.getBuilderName, getFieldNames = _a.getFieldNames, getFieldValue = _a.getFieldValue, getSupertypeNames = _a.getSupertypeNames, n = _a.namedTypes, NodePath = _a.NodePath, Path = _a.Path, PathVisitor = _a.PathVisitor, someField = _a.someField, Type = _a.Type, use = _a.use, visit = _a.visit;\n  \t\texports.astNodesAreEquivalent = astNodesAreEquivalent;\n  \t\texports.builders = builders;\n  \t\texports.builtInTypes = builtInTypes;\n  \t\texports.defineMethod = defineMethod;\n  \t\texports.eachField = eachField;\n  \t\texports.finalize = finalize;\n  \t\texports.getBuilderName = getBuilderName;\n  \t\texports.getFieldNames = getFieldNames;\n  \t\texports.getFieldValue = getFieldValue;\n  \t\texports.getSupertypeNames = getSupertypeNames;\n  \t\texports.NodePath = NodePath;\n  \t\texports.Path = Path;\n  \t\texports.PathVisitor = PathVisitor;\n  \t\texports.someField = someField;\n  \t\texports.Type = Type;\n  \t\texports.use = use;\n  \t\texports.visit = visit;\n  \t\t// Populate the exported fields of the namedTypes namespace, while still\n  \t\t// retaining its member types.\n  \t\tObject.assign(namedTypes_1.namedTypes, n);\n  \t\t\n  \t} (main));\n  \treturn main;\n  }\n\n  var parser = {};\n\n  var tinyInvariant_cjs;\n  var hasRequiredTinyInvariant_cjs;\n\n  function requireTinyInvariant_cjs () {\n  \tif (hasRequiredTinyInvariant_cjs) return tinyInvariant_cjs;\n  \thasRequiredTinyInvariant_cjs = 1;\n  \tvar prefix = 'Invariant failed';\n  \tfunction invariant(condition, message) {\n  \t    if (condition) {\n  \t        return;\n  \t    }\n  \t    {\n  \t        throw new Error(prefix);\n  \t    }\n  \t}\n\n  \ttinyInvariant_cjs = invariant;\n  \treturn tinyInvariant_cjs;\n  }\n\n  var options = {};\n\n  var util = {};\n\n  // mock the sourcemaps api for the browser bundle\n  // we do not need sourcemaps with the in browser compilation\n  const noop$1 = function () {};\n\n  const SourceMapGenerator$1 = function () {\n    return {\n      addMapping: noop$1,\n      setSourceContent: noop$1,\n      toJSON: () => ({}),\n    }\n  };\n  const SourceMapConsumer$1 = function () {};\n  const SourceNode = function () {};\n\n  var sourcemapMockApi = {\n    SourceNode,\n    SourceMapConsumer: SourceMapConsumer$1,\n    SourceMapGenerator: SourceMapGenerator$1,\n  };\n\n  var sourcemapMockApi$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    SourceMapConsumer: SourceMapConsumer$1,\n    SourceMapGenerator: SourceMapGenerator$1,\n    SourceNode: SourceNode,\n    default: sourcemapMockApi\n  });\n\n  var require$$2 = /*@__PURE__*/getAugmentedNamespace(sourcemapMockApi$1);\n\n  const EOL = '\\n';\n\n  var osMockApi = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    EOL: EOL\n  });\n\n  var require$$4 = /*@__PURE__*/getAugmentedNamespace(osMockApi);\n\n  Object.defineProperty(util, \"__esModule\", { value: true });\n  util.isTrailingCommaEnabled = util.getParentExportDeclaration = util.isExportDeclaration = util.fixFaultyLocations = util.getTrueLoc = composeSourceMaps_1 = util.composeSourceMaps = util.copyPos = util.comparePos = util.getUnionOfKeys = util.getOption = util.isBrowser = util.getLineTerminator = void 0;\n  var tslib_1 = require$$0;\n  var tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  var types$1 = tslib_1.__importStar(requireMain());\n  var n = types$1.namedTypes;\n  var source_map_1 = tslib_1.__importDefault(require$$2);\n  var SourceMapConsumer = source_map_1.default.SourceMapConsumer;\n  var SourceMapGenerator = source_map_1.default.SourceMapGenerator;\n  var hasOwn = Object.prototype.hasOwnProperty;\n  function getLineTerminator() {\n      return isBrowser$1() ? \"\\n\" : require$$4.EOL || \"\\n\";\n  }\n  util.getLineTerminator = getLineTerminator;\n  function isBrowser$1() {\n      return (typeof window !== \"undefined\" && typeof window.document !== \"undefined\");\n  }\n  util.isBrowser = isBrowser$1;\n  function getOption(options, key, defaultValue) {\n      if (options && hasOwn.call(options, key)) {\n          return options[key];\n      }\n      return defaultValue;\n  }\n  util.getOption = getOption;\n  function getUnionOfKeys() {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n      }\n      var result = {};\n      var argc = args.length;\n      for (var i = 0; i < argc; ++i) {\n          var keys = Object.keys(args[i]);\n          var keyCount = keys.length;\n          for (var j = 0; j < keyCount; ++j) {\n              result[keys[j]] = true;\n          }\n      }\n      return result;\n  }\n  util.getUnionOfKeys = getUnionOfKeys;\n  function comparePos(pos1, pos2) {\n      return pos1.line - pos2.line || pos1.column - pos2.column;\n  }\n  util.comparePos = comparePos;\n  function copyPos(pos) {\n      return {\n          line: pos.line,\n          column: pos.column,\n      };\n  }\n  util.copyPos = copyPos;\n  function composeSourceMaps(formerMap, latterMap) {\n      if (formerMap) {\n          if (!latterMap) {\n              return formerMap;\n          }\n      }\n      else {\n          return latterMap || null;\n      }\n      var smcFormer = new SourceMapConsumer(formerMap);\n      var smcLatter = new SourceMapConsumer(latterMap);\n      var smg = new SourceMapGenerator({\n          file: latterMap.file,\n          sourceRoot: latterMap.sourceRoot,\n      });\n      var sourcesToContents = {};\n      smcLatter.eachMapping(function (mapping) {\n          var origPos = smcFormer.originalPositionFor({\n              line: mapping.originalLine,\n              column: mapping.originalColumn,\n          });\n          var sourceName = origPos.source;\n          if (sourceName === null) {\n              return;\n          }\n          smg.addMapping({\n              source: sourceName,\n              original: copyPos(origPos),\n              generated: {\n                  line: mapping.generatedLine,\n                  column: mapping.generatedColumn,\n              },\n              name: mapping.name,\n          });\n          var sourceContent = smcFormer.sourceContentFor(sourceName);\n          if (sourceContent && !hasOwn.call(sourcesToContents, sourceName)) {\n              sourcesToContents[sourceName] = sourceContent;\n              smg.setSourceContent(sourceName, sourceContent);\n          }\n      });\n      return smg.toJSON();\n  }\n  var composeSourceMaps_1 = util.composeSourceMaps = composeSourceMaps;\n  function getTrueLoc(node, lines) {\n      // It's possible that node is newly-created (not parsed by Esprima),\n      // in which case it probably won't have a .loc property (or an\n      // .original property for that matter). That's fine; we'll just\n      // pretty-print it as usual.\n      if (!node.loc) {\n          return null;\n      }\n      var result = {\n          start: node.loc.start,\n          end: node.loc.end,\n      };\n      function include(node) {\n          expandLoc(result, node.loc);\n      }\n      // If the node is an export declaration and its .declaration has any\n      // decorators, their locations might contribute to the true start/end\n      // positions of the export declaration node.\n      if (node.declaration &&\n          node.declaration.decorators &&\n          isExportDeclaration(node)) {\n          node.declaration.decorators.forEach(include);\n      }\n      if (comparePos(result.start, result.end) < 0) {\n          // Trim leading whitespace.\n          result.start = copyPos(result.start);\n          lines.skipSpaces(result.start, false, true);\n          if (comparePos(result.start, result.end) < 0) {\n              // Trim trailing whitespace, if the end location is not already the\n              // same as the start location.\n              result.end = copyPos(result.end);\n              lines.skipSpaces(result.end, true, true);\n          }\n      }\n      // If the node has any comments, their locations might contribute to\n      // the true start/end positions of the node.\n      if (node.comments) {\n          node.comments.forEach(include);\n      }\n      return result;\n  }\n  util.getTrueLoc = getTrueLoc;\n  function expandLoc(parentLoc, childLoc) {\n      if (parentLoc && childLoc) {\n          if (comparePos(childLoc.start, parentLoc.start) < 0) {\n              parentLoc.start = childLoc.start;\n          }\n          if (comparePos(parentLoc.end, childLoc.end) < 0) {\n              parentLoc.end = childLoc.end;\n          }\n      }\n  }\n  function fixFaultyLocations(node, lines) {\n      var loc = node.loc;\n      if (loc) {\n          if (loc.start.line < 1) {\n              loc.start.line = 1;\n          }\n          if (loc.end.line < 1) {\n              loc.end.line = 1;\n          }\n      }\n      if (node.type === \"File\") {\n          // Babylon returns File nodes whose .loc.{start,end} do not include\n          // leading or trailing whitespace.\n          loc.start = lines.firstPos();\n          loc.end = lines.lastPos();\n      }\n      fixForLoopHead(node, lines);\n      fixTemplateLiteral(node, lines);\n      if (loc && node.decorators) {\n          // Expand the .loc of the node responsible for printing the decorators\n          // (here, the decorated node) so that it includes node.decorators.\n          node.decorators.forEach(function (decorator) {\n              expandLoc(loc, decorator.loc);\n          });\n      }\n      else if (node.declaration && isExportDeclaration(node)) {\n          // Nullify .loc information for the child declaration so that we never\n          // try to reprint it without also reprinting the export declaration.\n          node.declaration.loc = null;\n          // Expand the .loc of the node responsible for printing the decorators\n          // (here, the export declaration) so that it includes node.decorators.\n          var decorators = node.declaration.decorators;\n          if (decorators) {\n              decorators.forEach(function (decorator) {\n                  expandLoc(loc, decorator.loc);\n              });\n          }\n      }\n      else if ((n.MethodDefinition && n.MethodDefinition.check(node)) ||\n          (n.Property.check(node) && (node.method || node.shorthand))) {\n          // If the node is a MethodDefinition or a .method or .shorthand\n          // Property, then the location information stored in\n          // node.value.loc is very likely untrustworthy (just the {body}\n          // part of a method, or nothing in the case of shorthand\n          // properties), so we null out that information to prevent\n          // accidental reuse of bogus source code during reprinting.\n          node.value.loc = null;\n          if (n.FunctionExpression.check(node.value)) {\n              // FunctionExpression method values should be anonymous,\n              // because their .id fields are ignored anyway.\n              node.value.id = null;\n          }\n      }\n      else if (node.type === \"ObjectTypeProperty\") {\n          var loc_1 = node.loc;\n          var end = loc_1 && loc_1.end;\n          if (end) {\n              end = copyPos(end);\n              if (lines.prevPos(end) && lines.charAt(end) === \",\") {\n                  // Some parsers accidentally include trailing commas in the\n                  // .loc.end information for ObjectTypeProperty nodes.\n                  if ((end = lines.skipSpaces(end, true, true))) {\n                      loc_1.end = end;\n                  }\n              }\n          }\n      }\n  }\n  util.fixFaultyLocations = fixFaultyLocations;\n  function fixForLoopHead(node, lines) {\n      if (node.type !== \"ForStatement\") {\n          return;\n      }\n      function fix(child) {\n          var loc = child && child.loc;\n          var start = loc && loc.start;\n          var end = loc && copyPos(loc.end);\n          while (start && end && comparePos(start, end) < 0) {\n              lines.prevPos(end);\n              if (lines.charAt(end) === \";\") {\n                  // Update child.loc.end to *exclude* the ';' character.\n                  loc.end.line = end.line;\n                  loc.end.column = end.column;\n              }\n              else {\n                  break;\n              }\n          }\n      }\n      fix(node.init);\n      fix(node.test);\n      fix(node.update);\n  }\n  function fixTemplateLiteral(node, lines) {\n      if (node.type !== \"TemplateLiteral\") {\n          return;\n      }\n      if (node.quasis.length === 0) {\n          // If there are no quasi elements, then there is nothing to fix.\n          return;\n      }\n      // node.loc is not present when using export default with a template literal\n      if (node.loc) {\n          // First we need to exclude the opening ` from the .loc of the first\n          // quasi element, in case the parser accidentally decided to include it.\n          var afterLeftBackTickPos = copyPos(node.loc.start);\n          (0, tiny_invariant_1.default)(lines.charAt(afterLeftBackTickPos) === \"`\");\n          (0, tiny_invariant_1.default)(lines.nextPos(afterLeftBackTickPos));\n          var firstQuasi = node.quasis[0];\n          if (comparePos(firstQuasi.loc.start, afterLeftBackTickPos) < 0) {\n              firstQuasi.loc.start = afterLeftBackTickPos;\n          }\n          // Next we need to exclude the closing ` from the .loc of the last quasi\n          // element, in case the parser accidentally decided to include it.\n          var rightBackTickPos = copyPos(node.loc.end);\n          (0, tiny_invariant_1.default)(lines.prevPos(rightBackTickPos));\n          (0, tiny_invariant_1.default)(lines.charAt(rightBackTickPos) === \"`\");\n          var lastQuasi = node.quasis[node.quasis.length - 1];\n          if (comparePos(rightBackTickPos, lastQuasi.loc.end) < 0) {\n              lastQuasi.loc.end = rightBackTickPos;\n          }\n      }\n      // Now we need to exclude ${ and } characters from the .loc's of all\n      // quasi elements, since some parsers accidentally include them.\n      node.expressions.forEach(function (expr, i) {\n          // Rewind from expr.loc.start over any whitespace and the ${ that\n          // precedes the expression. The position of the $ should be the same\n          // as the .loc.end of the preceding quasi element, but some parsers\n          // accidentally include the ${ in the .loc of the quasi element.\n          var dollarCurlyPos = lines.skipSpaces(expr.loc.start, true, false);\n          if (lines.prevPos(dollarCurlyPos) &&\n              lines.charAt(dollarCurlyPos) === \"{\" &&\n              lines.prevPos(dollarCurlyPos) &&\n              lines.charAt(dollarCurlyPos) === \"$\") {\n              var quasiBefore = node.quasis[i];\n              if (comparePos(dollarCurlyPos, quasiBefore.loc.end) < 0) {\n                  quasiBefore.loc.end = dollarCurlyPos;\n              }\n          }\n          // Likewise, some parsers accidentally include the } that follows\n          // the expression in the .loc of the following quasi element.\n          var rightCurlyPos = lines.skipSpaces(expr.loc.end, false, false);\n          if (lines.charAt(rightCurlyPos) === \"}\") {\n              (0, tiny_invariant_1.default)(lines.nextPos(rightCurlyPos));\n              // Now rightCurlyPos is technically the position just after the }.\n              var quasiAfter = node.quasis[i + 1];\n              if (comparePos(quasiAfter.loc.start, rightCurlyPos) < 0) {\n                  quasiAfter.loc.start = rightCurlyPos;\n              }\n          }\n      });\n  }\n  function isExportDeclaration(node) {\n      if (node)\n          switch (node.type) {\n              case \"ExportDeclaration\":\n              case \"ExportDefaultDeclaration\":\n              case \"ExportDefaultSpecifier\":\n              case \"DeclareExportDeclaration\":\n              case \"ExportNamedDeclaration\":\n              case \"ExportAllDeclaration\":\n                  return true;\n          }\n      return false;\n  }\n  util.isExportDeclaration = isExportDeclaration;\n  function getParentExportDeclaration(path) {\n      var parentNode = path.getParentNode();\n      if (path.getName() === \"declaration\" && isExportDeclaration(parentNode)) {\n          return parentNode;\n      }\n      return null;\n  }\n  util.getParentExportDeclaration = getParentExportDeclaration;\n  function isTrailingCommaEnabled(options, context) {\n      var trailingComma = options.trailingComma;\n      if (typeof trailingComma === \"object\") {\n          return !!trailingComma[context];\n      }\n      return !!trailingComma;\n  }\n  util.isTrailingCommaEnabled = isTrailingCommaEnabled;\n\n  var esprima = {};\n\n  var require$$7 = undefined;\n\n  var hasRequiredEsprima;\n\n  function requireEsprima () {\n  \tif (hasRequiredEsprima) return esprima;\n  \thasRequiredEsprima = 1;\n  \tObject.defineProperty(esprima, \"__esModule\", { value: true });\n  \tesprima.parse = void 0;\n  \t// This module is suitable for passing as options.parser when calling\n  \t// recast.parse to process ECMAScript code with Esprima:\n  \t//\n  \t//   const ast = recast.parse(source, {\n  \t//     parser: require(\"recast/parsers/esprima\")\n  \t//   });\n  \t//\n  \tvar util_1 = util;\n  \tfunction parse(source, options) {\n  \t    var comments = [];\n  \t    var ast = require$$7.parse(source, {\n  \t        loc: true,\n  \t        locations: true,\n  \t        comment: true,\n  \t        onComment: comments,\n  \t        range: (0, util_1.getOption)(options, \"range\", false),\n  \t        tolerant: (0, util_1.getOption)(options, \"tolerant\", true),\n  \t        tokens: true,\n  \t        jsx: (0, util_1.getOption)(options, \"jsx\", false),\n  \t        sourceType: (0, util_1.getOption)(options, \"sourceType\", \"module\"),\n  \t    });\n  \t    if (!Array.isArray(ast.comments)) {\n  \t        ast.comments = comments;\n  \t    }\n  \t    return ast;\n  \t}\n  \tesprima.parse = parse;\n  \treturn esprima;\n  }\n\n  var hasRequiredOptions;\n\n  function requireOptions () {\n  \tif (hasRequiredOptions) return options;\n  \thasRequiredOptions = 1;\n  \tObject.defineProperty(options, \"__esModule\", { value: true });\n  \toptions.normalize = void 0;\n  \tvar util_1 = util;\n  \tvar defaults = {\n  \t    parser: requireEsprima(),\n  \t    tabWidth: 4,\n  \t    useTabs: false,\n  \t    reuseWhitespace: true,\n  \t    lineTerminator: (0, util_1.getLineTerminator)(),\n  \t    wrapColumn: 74,\n  \t    sourceFileName: null,\n  \t    sourceMapName: null,\n  \t    sourceRoot: null,\n  \t    inputSourceMap: null,\n  \t    range: false,\n  \t    tolerant: true,\n  \t    quote: null,\n  \t    trailingComma: false,\n  \t    arrayBracketSpacing: false,\n  \t    objectCurlySpacing: true,\n  \t    arrowParensAlways: false,\n  \t    flowObjectCommas: true,\n  \t    tokens: true,\n  \t};\n  \tvar hasOwn = defaults.hasOwnProperty;\n  \t// Copy options and fill in default values.\n  \tfunction normalize(opts) {\n  \t    var options = opts || defaults;\n  \t    function get(key) {\n  \t        return hasOwn.call(options, key) ? options[key] : defaults[key];\n  \t    }\n  \t    return {\n  \t        tabWidth: +get(\"tabWidth\"),\n  \t        useTabs: !!get(\"useTabs\"),\n  \t        reuseWhitespace: !!get(\"reuseWhitespace\"),\n  \t        lineTerminator: get(\"lineTerminator\"),\n  \t        wrapColumn: Math.max(get(\"wrapColumn\"), 0),\n  \t        sourceFileName: get(\"sourceFileName\"),\n  \t        sourceMapName: get(\"sourceMapName\"),\n  \t        sourceRoot: get(\"sourceRoot\"),\n  \t        inputSourceMap: get(\"inputSourceMap\"),\n  \t        parser: get(\"esprima\") || get(\"parser\"),\n  \t        range: get(\"range\"),\n  \t        tolerant: get(\"tolerant\"),\n  \t        quote: get(\"quote\"),\n  \t        trailingComma: get(\"trailingComma\"),\n  \t        arrayBracketSpacing: get(\"arrayBracketSpacing\"),\n  \t        objectCurlySpacing: get(\"objectCurlySpacing\"),\n  \t        arrowParensAlways: get(\"arrowParensAlways\"),\n  \t        flowObjectCommas: get(\"flowObjectCommas\"),\n  \t        tokens: !!get(\"tokens\"),\n  \t    };\n  \t}\n  \toptions.normalize = normalize;\n  \treturn options;\n  }\n\n  var lines = {};\n\n  var mapping = {};\n\n  var hasRequiredMapping;\n\n  function requireMapping () {\n  \tif (hasRequiredMapping) return mapping;\n  \thasRequiredMapping = 1;\n  \tObject.defineProperty(mapping, \"__esModule\", { value: true });\n  \tvar tslib_1 = require$$0;\n  \tvar tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  \tvar util_1 = util;\n  \tvar Mapping = /** @class */ (function () {\n  \t    function Mapping(sourceLines, sourceLoc, targetLoc) {\n  \t        if (targetLoc === void 0) { targetLoc = sourceLoc; }\n  \t        this.sourceLines = sourceLines;\n  \t        this.sourceLoc = sourceLoc;\n  \t        this.targetLoc = targetLoc;\n  \t    }\n  \t    Mapping.prototype.slice = function (lines, start, end) {\n  \t        if (end === void 0) { end = lines.lastPos(); }\n  \t        var sourceLines = this.sourceLines;\n  \t        var sourceLoc = this.sourceLoc;\n  \t        var targetLoc = this.targetLoc;\n  \t        function skip(name) {\n  \t            var sourceFromPos = sourceLoc[name];\n  \t            var targetFromPos = targetLoc[name];\n  \t            var targetToPos = start;\n  \t            if (name === \"end\") {\n  \t                targetToPos = end;\n  \t            }\n  \t            else {\n  \t                (0, tiny_invariant_1.default)(name === \"start\");\n  \t            }\n  \t            return skipChars(sourceLines, sourceFromPos, lines, targetFromPos, targetToPos);\n  \t        }\n  \t        if ((0, util_1.comparePos)(start, targetLoc.start) <= 0) {\n  \t            if ((0, util_1.comparePos)(targetLoc.end, end) <= 0) {\n  \t                targetLoc = {\n  \t                    start: subtractPos(targetLoc.start, start.line, start.column),\n  \t                    end: subtractPos(targetLoc.end, start.line, start.column),\n  \t                };\n  \t                // The sourceLoc can stay the same because the contents of the\n  \t                // targetLoc have not changed.\n  \t            }\n  \t            else if ((0, util_1.comparePos)(end, targetLoc.start) <= 0) {\n  \t                return null;\n  \t            }\n  \t            else {\n  \t                sourceLoc = {\n  \t                    start: sourceLoc.start,\n  \t                    end: skip(\"end\"),\n  \t                };\n  \t                targetLoc = {\n  \t                    start: subtractPos(targetLoc.start, start.line, start.column),\n  \t                    end: subtractPos(end, start.line, start.column),\n  \t                };\n  \t            }\n  \t        }\n  \t        else {\n  \t            if ((0, util_1.comparePos)(targetLoc.end, start) <= 0) {\n  \t                return null;\n  \t            }\n  \t            if ((0, util_1.comparePos)(targetLoc.end, end) <= 0) {\n  \t                sourceLoc = {\n  \t                    start: skip(\"start\"),\n  \t                    end: sourceLoc.end,\n  \t                };\n  \t                targetLoc = {\n  \t                    // Same as subtractPos(start, start.line, start.column):\n  \t                    start: { line: 1, column: 0 },\n  \t                    end: subtractPos(targetLoc.end, start.line, start.column),\n  \t                };\n  \t            }\n  \t            else {\n  \t                sourceLoc = {\n  \t                    start: skip(\"start\"),\n  \t                    end: skip(\"end\"),\n  \t                };\n  \t                targetLoc = {\n  \t                    // Same as subtractPos(start, start.line, start.column):\n  \t                    start: { line: 1, column: 0 },\n  \t                    end: subtractPos(end, start.line, start.column),\n  \t                };\n  \t            }\n  \t        }\n  \t        return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n  \t    };\n  \t    Mapping.prototype.add = function (line, column) {\n  \t        return new Mapping(this.sourceLines, this.sourceLoc, {\n  \t            start: addPos(this.targetLoc.start, line, column),\n  \t            end: addPos(this.targetLoc.end, line, column),\n  \t        });\n  \t    };\n  \t    Mapping.prototype.subtract = function (line, column) {\n  \t        return new Mapping(this.sourceLines, this.sourceLoc, {\n  \t            start: subtractPos(this.targetLoc.start, line, column),\n  \t            end: subtractPos(this.targetLoc.end, line, column),\n  \t        });\n  \t    };\n  \t    Mapping.prototype.indent = function (by, skipFirstLine, noNegativeColumns) {\n  \t        if (skipFirstLine === void 0) { skipFirstLine = false; }\n  \t        if (noNegativeColumns === void 0) { noNegativeColumns = false; }\n  \t        if (by === 0) {\n  \t            return this;\n  \t        }\n  \t        var targetLoc = this.targetLoc;\n  \t        var startLine = targetLoc.start.line;\n  \t        var endLine = targetLoc.end.line;\n  \t        if (skipFirstLine && startLine === 1 && endLine === 1) {\n  \t            return this;\n  \t        }\n  \t        targetLoc = {\n  \t            start: targetLoc.start,\n  \t            end: targetLoc.end,\n  \t        };\n  \t        if (!skipFirstLine || startLine > 1) {\n  \t            var startColumn = targetLoc.start.column + by;\n  \t            targetLoc.start = {\n  \t                line: startLine,\n  \t                column: noNegativeColumns ? Math.max(0, startColumn) : startColumn,\n  \t            };\n  \t        }\n  \t        if (!skipFirstLine || endLine > 1) {\n  \t            var endColumn = targetLoc.end.column + by;\n  \t            targetLoc.end = {\n  \t                line: endLine,\n  \t                column: noNegativeColumns ? Math.max(0, endColumn) : endColumn,\n  \t            };\n  \t        }\n  \t        return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n  \t    };\n  \t    return Mapping;\n  \t}());\n  \tmapping.default = Mapping;\n  \tfunction addPos(toPos, line, column) {\n  \t    return {\n  \t        line: toPos.line + line - 1,\n  \t        column: toPos.line === 1 ? toPos.column + column : toPos.column,\n  \t    };\n  \t}\n  \tfunction subtractPos(fromPos, line, column) {\n  \t    return {\n  \t        line: fromPos.line - line + 1,\n  \t        column: fromPos.line === line ? fromPos.column - column : fromPos.column,\n  \t    };\n  \t}\n  \tfunction skipChars(sourceLines, sourceFromPos, targetLines, targetFromPos, targetToPos) {\n  \t    var targetComparison = (0, util_1.comparePos)(targetFromPos, targetToPos);\n  \t    if (targetComparison === 0) {\n  \t        // Trivial case: no characters to skip.\n  \t        return sourceFromPos;\n  \t    }\n  \t    var sourceCursor, targetCursor;\n  \t    if (targetComparison < 0) {\n  \t        // Skipping forward.\n  \t        sourceCursor =\n  \t            sourceLines.skipSpaces(sourceFromPos) || sourceLines.lastPos();\n  \t        targetCursor =\n  \t            targetLines.skipSpaces(targetFromPos) || targetLines.lastPos();\n  \t        var lineDiff = targetToPos.line - targetCursor.line;\n  \t        sourceCursor.line += lineDiff;\n  \t        targetCursor.line += lineDiff;\n  \t        if (lineDiff > 0) {\n  \t            // If jumping to later lines, reset columns to the beginnings\n  \t            // of those lines.\n  \t            sourceCursor.column = 0;\n  \t            targetCursor.column = 0;\n  \t        }\n  \t        else {\n  \t            (0, tiny_invariant_1.default)(lineDiff === 0);\n  \t        }\n  \t        while ((0, util_1.comparePos)(targetCursor, targetToPos) < 0 &&\n  \t            targetLines.nextPos(targetCursor, true)) {\n  \t            (0, tiny_invariant_1.default)(sourceLines.nextPos(sourceCursor, true));\n  \t            (0, tiny_invariant_1.default)(sourceLines.charAt(sourceCursor) === targetLines.charAt(targetCursor));\n  \t        }\n  \t    }\n  \t    else {\n  \t        // Skipping backward.\n  \t        sourceCursor =\n  \t            sourceLines.skipSpaces(sourceFromPos, true) || sourceLines.firstPos();\n  \t        targetCursor =\n  \t            targetLines.skipSpaces(targetFromPos, true) || targetLines.firstPos();\n  \t        var lineDiff = targetToPos.line - targetCursor.line;\n  \t        sourceCursor.line += lineDiff;\n  \t        targetCursor.line += lineDiff;\n  \t        if (lineDiff < 0) {\n  \t            // If jumping to earlier lines, reset columns to the ends of\n  \t            // those lines.\n  \t            sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n  \t            targetCursor.column = targetLines.getLineLength(targetCursor.line);\n  \t        }\n  \t        else {\n  \t            (0, tiny_invariant_1.default)(lineDiff === 0);\n  \t        }\n  \t        while ((0, util_1.comparePos)(targetToPos, targetCursor) < 0 &&\n  \t            targetLines.prevPos(targetCursor, true)) {\n  \t            (0, tiny_invariant_1.default)(sourceLines.prevPos(sourceCursor, true));\n  \t            (0, tiny_invariant_1.default)(sourceLines.charAt(sourceCursor) === targetLines.charAt(targetCursor));\n  \t        }\n  \t    }\n  \t    return sourceCursor;\n  \t}\n  \treturn mapping;\n  }\n\n  var hasRequiredLines;\n\n  function requireLines () {\n  \tif (hasRequiredLines) return lines;\n  \thasRequiredLines = 1;\n  \tObject.defineProperty(lines, \"__esModule\", { value: true });\n  \tlines.concat = lines.fromString = lines.countSpaces = lines.Lines = void 0;\n  \tvar tslib_1 = require$$0;\n  \tvar tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  \tvar source_map_1 = tslib_1.__importDefault(require$$2);\n  \tvar options_1 = requireOptions();\n  \tvar util_1 = util;\n  \tvar mapping_1 = tslib_1.__importDefault(requireMapping());\n  \tvar Lines = /** @class */ (function () {\n  \t    function Lines(infos, sourceFileName) {\n  \t        if (sourceFileName === void 0) { sourceFileName = null; }\n  \t        this.infos = infos;\n  \t        this.mappings = [];\n  \t        this.cachedSourceMap = null;\n  \t        this.cachedTabWidth = void 0;\n  \t        (0, tiny_invariant_1.default)(infos.length > 0);\n  \t        this.length = infos.length;\n  \t        this.name = sourceFileName || null;\n  \t        if (this.name) {\n  \t            this.mappings.push(new mapping_1.default(this, {\n  \t                start: this.firstPos(),\n  \t                end: this.lastPos(),\n  \t            }));\n  \t        }\n  \t    }\n  \t    Lines.prototype.toString = function (options) {\n  \t        return this.sliceString(this.firstPos(), this.lastPos(), options);\n  \t    };\n  \t    Lines.prototype.getSourceMap = function (sourceMapName, sourceRoot) {\n  \t        if (!sourceMapName) {\n  \t            // Although we could make up a name or generate an anonymous\n  \t            // source map, instead we assume that any consumer who does not\n  \t            // provide a name does not actually want a source map.\n  \t            return null;\n  \t        }\n  \t        var targetLines = this;\n  \t        function updateJSON(json) {\n  \t            json = json || {};\n  \t            json.file = sourceMapName;\n  \t            if (sourceRoot) {\n  \t                json.sourceRoot = sourceRoot;\n  \t            }\n  \t            return json;\n  \t        }\n  \t        if (targetLines.cachedSourceMap) {\n  \t            // Since Lines objects are immutable, we can reuse any source map\n  \t            // that was previously generated. Nevertheless, we return a new\n  \t            // JSON object here to protect the cached source map from outside\n  \t            // modification.\n  \t            return updateJSON(targetLines.cachedSourceMap.toJSON());\n  \t        }\n  \t        var smg = new source_map_1.default.SourceMapGenerator(updateJSON());\n  \t        var sourcesToContents = {};\n  \t        targetLines.mappings.forEach(function (mapping) {\n  \t            var sourceCursor = mapping.sourceLines.skipSpaces(mapping.sourceLoc.start) ||\n  \t                mapping.sourceLines.lastPos();\n  \t            var targetCursor = targetLines.skipSpaces(mapping.targetLoc.start) ||\n  \t                targetLines.lastPos();\n  \t            while ((0, util_1.comparePos)(sourceCursor, mapping.sourceLoc.end) < 0 &&\n  \t                (0, util_1.comparePos)(targetCursor, mapping.targetLoc.end) < 0) {\n  \t                var sourceChar = mapping.sourceLines.charAt(sourceCursor);\n  \t                var targetChar = targetLines.charAt(targetCursor);\n  \t                (0, tiny_invariant_1.default)(sourceChar === targetChar);\n  \t                var sourceName = mapping.sourceLines.name;\n  \t                // Add mappings one character at a time for maximum resolution.\n  \t                smg.addMapping({\n  \t                    source: sourceName,\n  \t                    original: { line: sourceCursor.line, column: sourceCursor.column },\n  \t                    generated: { line: targetCursor.line, column: targetCursor.column },\n  \t                });\n  \t                if (!hasOwn.call(sourcesToContents, sourceName)) {\n  \t                    var sourceContent = mapping.sourceLines.toString();\n  \t                    smg.setSourceContent(sourceName, sourceContent);\n  \t                    sourcesToContents[sourceName] = sourceContent;\n  \t                }\n  \t                targetLines.nextPos(targetCursor, true);\n  \t                mapping.sourceLines.nextPos(sourceCursor, true);\n  \t            }\n  \t        });\n  \t        targetLines.cachedSourceMap = smg;\n  \t        return smg.toJSON();\n  \t    };\n  \t    Lines.prototype.bootstrapCharAt = function (pos) {\n  \t        (0, tiny_invariant_1.default)(typeof pos === \"object\");\n  \t        (0, tiny_invariant_1.default)(typeof pos.line === \"number\");\n  \t        (0, tiny_invariant_1.default)(typeof pos.column === \"number\");\n  \t        var line = pos.line, column = pos.column, strings = this.toString().split(lineTerminatorSeqExp), string = strings[line - 1];\n  \t        if (typeof string === \"undefined\")\n  \t            return \"\";\n  \t        if (column === string.length && line < strings.length)\n  \t            return \"\\n\";\n  \t        if (column >= string.length)\n  \t            return \"\";\n  \t        return string.charAt(column);\n  \t    };\n  \t    Lines.prototype.charAt = function (pos) {\n  \t        (0, tiny_invariant_1.default)(typeof pos === \"object\");\n  \t        (0, tiny_invariant_1.default)(typeof pos.line === \"number\");\n  \t        (0, tiny_invariant_1.default)(typeof pos.column === \"number\");\n  \t        var line = pos.line, column = pos.column, secret = this, infos = secret.infos, info = infos[line - 1], c = column;\n  \t        if (typeof info === \"undefined\" || c < 0)\n  \t            return \"\";\n  \t        var indent = this.getIndentAt(line);\n  \t        if (c < indent)\n  \t            return \" \";\n  \t        c += info.sliceStart - indent;\n  \t        if (c === info.sliceEnd && line < this.length)\n  \t            return \"\\n\";\n  \t        if (c >= info.sliceEnd)\n  \t            return \"\";\n  \t        return info.line.charAt(c);\n  \t    };\n  \t    Lines.prototype.stripMargin = function (width, skipFirstLine) {\n  \t        if (width === 0)\n  \t            return this;\n  \t        (0, tiny_invariant_1.default)(width > 0, \"negative margin: \" + width);\n  \t        if (skipFirstLine && this.length === 1)\n  \t            return this;\n  \t        var lines = new Lines(this.infos.map(function (info, i) {\n  \t            if (info.line && (i > 0 || !skipFirstLine)) {\n  \t                info = tslib_1.__assign(tslib_1.__assign({}, info), { indent: Math.max(0, info.indent - width) });\n  \t            }\n  \t            return info;\n  \t        }));\n  \t        if (this.mappings.length > 0) {\n  \t            var newMappings_1 = lines.mappings;\n  \t            (0, tiny_invariant_1.default)(newMappings_1.length === 0);\n  \t            this.mappings.forEach(function (mapping) {\n  \t                newMappings_1.push(mapping.indent(width, skipFirstLine, true));\n  \t            });\n  \t        }\n  \t        return lines;\n  \t    };\n  \t    Lines.prototype.indent = function (by) {\n  \t        if (by === 0) {\n  \t            return this;\n  \t        }\n  \t        var lines = new Lines(this.infos.map(function (info) {\n  \t            if (info.line && !info.locked) {\n  \t                info = tslib_1.__assign(tslib_1.__assign({}, info), { indent: info.indent + by });\n  \t            }\n  \t            return info;\n  \t        }));\n  \t        if (this.mappings.length > 0) {\n  \t            var newMappings_2 = lines.mappings;\n  \t            (0, tiny_invariant_1.default)(newMappings_2.length === 0);\n  \t            this.mappings.forEach(function (mapping) {\n  \t                newMappings_2.push(mapping.indent(by));\n  \t            });\n  \t        }\n  \t        return lines;\n  \t    };\n  \t    Lines.prototype.indentTail = function (by) {\n  \t        if (by === 0) {\n  \t            return this;\n  \t        }\n  \t        if (this.length < 2) {\n  \t            return this;\n  \t        }\n  \t        var lines = new Lines(this.infos.map(function (info, i) {\n  \t            if (i > 0 && info.line && !info.locked) {\n  \t                info = tslib_1.__assign(tslib_1.__assign({}, info), { indent: info.indent + by });\n  \t            }\n  \t            return info;\n  \t        }));\n  \t        if (this.mappings.length > 0) {\n  \t            var newMappings_3 = lines.mappings;\n  \t            (0, tiny_invariant_1.default)(newMappings_3.length === 0);\n  \t            this.mappings.forEach(function (mapping) {\n  \t                newMappings_3.push(mapping.indent(by, true));\n  \t            });\n  \t        }\n  \t        return lines;\n  \t    };\n  \t    Lines.prototype.lockIndentTail = function () {\n  \t        if (this.length < 2) {\n  \t            return this;\n  \t        }\n  \t        return new Lines(this.infos.map(function (info, i) { return (tslib_1.__assign(tslib_1.__assign({}, info), { locked: i > 0 })); }));\n  \t    };\n  \t    Lines.prototype.getIndentAt = function (line) {\n  \t        (0, tiny_invariant_1.default)(line >= 1, \"no line \" + line + \" (line numbers start from 1)\");\n  \t        return Math.max(this.infos[line - 1].indent, 0);\n  \t    };\n  \t    Lines.prototype.guessTabWidth = function () {\n  \t        if (typeof this.cachedTabWidth === \"number\") {\n  \t            return this.cachedTabWidth;\n  \t        }\n  \t        var counts = []; // Sparse array.\n  \t        var lastIndent = 0;\n  \t        for (var line = 1, last = this.length; line <= last; ++line) {\n  \t            var info = this.infos[line - 1];\n  \t            var sliced = info.line.slice(info.sliceStart, info.sliceEnd);\n  \t            // Whitespace-only lines don't tell us much about the likely tab\n  \t            // width of this code.\n  \t            if (isOnlyWhitespace(sliced)) {\n  \t                continue;\n  \t            }\n  \t            var diff = Math.abs(info.indent - lastIndent);\n  \t            counts[diff] = ~~counts[diff] + 1;\n  \t            lastIndent = info.indent;\n  \t        }\n  \t        var maxCount = -1;\n  \t        var result = 2;\n  \t        for (var tabWidth = 1; tabWidth < counts.length; tabWidth += 1) {\n  \t            if (hasOwn.call(counts, tabWidth) && counts[tabWidth] > maxCount) {\n  \t                maxCount = counts[tabWidth];\n  \t                result = tabWidth;\n  \t            }\n  \t        }\n  \t        return (this.cachedTabWidth = result);\n  \t    };\n  \t    // Determine if the list of lines has a first line that starts with a //\n  \t    // or /* comment. If this is the case, the code may need to be wrapped in\n  \t    // parens to avoid ASI issues.\n  \t    Lines.prototype.startsWithComment = function () {\n  \t        if (this.infos.length === 0) {\n  \t            return false;\n  \t        }\n  \t        var firstLineInfo = this.infos[0], sliceStart = firstLineInfo.sliceStart, sliceEnd = firstLineInfo.sliceEnd, firstLine = firstLineInfo.line.slice(sliceStart, sliceEnd).trim();\n  \t        return (firstLine.length === 0 ||\n  \t            firstLine.slice(0, 2) === \"//\" ||\n  \t            firstLine.slice(0, 2) === \"/*\");\n  \t    };\n  \t    Lines.prototype.isOnlyWhitespace = function () {\n  \t        return isOnlyWhitespace(this.toString());\n  \t    };\n  \t    Lines.prototype.isPrecededOnlyByWhitespace = function (pos) {\n  \t        var info = this.infos[pos.line - 1];\n  \t        var indent = Math.max(info.indent, 0);\n  \t        var diff = pos.column - indent;\n  \t        if (diff <= 0) {\n  \t            // If pos.column does not exceed the indentation amount, then\n  \t            // there must be only whitespace before it.\n  \t            return true;\n  \t        }\n  \t        var start = info.sliceStart;\n  \t        var end = Math.min(start + diff, info.sliceEnd);\n  \t        var prefix = info.line.slice(start, end);\n  \t        return isOnlyWhitespace(prefix);\n  \t    };\n  \t    Lines.prototype.getLineLength = function (line) {\n  \t        var info = this.infos[line - 1];\n  \t        return this.getIndentAt(line) + info.sliceEnd - info.sliceStart;\n  \t    };\n  \t    Lines.prototype.nextPos = function (pos, skipSpaces) {\n  \t        if (skipSpaces === void 0) { skipSpaces = false; }\n  \t        var l = Math.max(pos.line, 0), c = Math.max(pos.column, 0);\n  \t        if (c < this.getLineLength(l)) {\n  \t            pos.column += 1;\n  \t            return skipSpaces ? !!this.skipSpaces(pos, false, true) : true;\n  \t        }\n  \t        if (l < this.length) {\n  \t            pos.line += 1;\n  \t            pos.column = 0;\n  \t            return skipSpaces ? !!this.skipSpaces(pos, false, true) : true;\n  \t        }\n  \t        return false;\n  \t    };\n  \t    Lines.prototype.prevPos = function (pos, skipSpaces) {\n  \t        if (skipSpaces === void 0) { skipSpaces = false; }\n  \t        var l = pos.line, c = pos.column;\n  \t        if (c < 1) {\n  \t            l -= 1;\n  \t            if (l < 1)\n  \t                return false;\n  \t            c = this.getLineLength(l);\n  \t        }\n  \t        else {\n  \t            c = Math.min(c - 1, this.getLineLength(l));\n  \t        }\n  \t        pos.line = l;\n  \t        pos.column = c;\n  \t        return skipSpaces ? !!this.skipSpaces(pos, true, true) : true;\n  \t    };\n  \t    Lines.prototype.firstPos = function () {\n  \t        // Trivial, but provided for completeness.\n  \t        return { line: 1, column: 0 };\n  \t    };\n  \t    Lines.prototype.lastPos = function () {\n  \t        return {\n  \t            line: this.length,\n  \t            column: this.getLineLength(this.length),\n  \t        };\n  \t    };\n  \t    Lines.prototype.skipSpaces = function (pos, backward, modifyInPlace) {\n  \t        if (backward === void 0) { backward = false; }\n  \t        if (modifyInPlace === void 0) { modifyInPlace = false; }\n  \t        if (pos) {\n  \t            pos = modifyInPlace\n  \t                ? pos\n  \t                : {\n  \t                    line: pos.line,\n  \t                    column: pos.column,\n  \t                };\n  \t        }\n  \t        else if (backward) {\n  \t            pos = this.lastPos();\n  \t        }\n  \t        else {\n  \t            pos = this.firstPos();\n  \t        }\n  \t        if (backward) {\n  \t            while (this.prevPos(pos)) {\n  \t                if (!isOnlyWhitespace(this.charAt(pos)) && this.nextPos(pos)) {\n  \t                    return pos;\n  \t                }\n  \t            }\n  \t            return null;\n  \t        }\n  \t        else {\n  \t            while (isOnlyWhitespace(this.charAt(pos))) {\n  \t                if (!this.nextPos(pos)) {\n  \t                    return null;\n  \t                }\n  \t            }\n  \t            return pos;\n  \t        }\n  \t    };\n  \t    Lines.prototype.trimLeft = function () {\n  \t        var pos = this.skipSpaces(this.firstPos(), false, true);\n  \t        return pos ? this.slice(pos) : emptyLines;\n  \t    };\n  \t    Lines.prototype.trimRight = function () {\n  \t        var pos = this.skipSpaces(this.lastPos(), true, true);\n  \t        return pos ? this.slice(this.firstPos(), pos) : emptyLines;\n  \t    };\n  \t    Lines.prototype.trim = function () {\n  \t        var start = this.skipSpaces(this.firstPos(), false, true);\n  \t        if (start === null) {\n  \t            return emptyLines;\n  \t        }\n  \t        var end = this.skipSpaces(this.lastPos(), true, true);\n  \t        if (end === null) {\n  \t            return emptyLines;\n  \t        }\n  \t        return this.slice(start, end);\n  \t    };\n  \t    Lines.prototype.eachPos = function (callback, startPos, skipSpaces) {\n  \t        if (startPos === void 0) { startPos = this.firstPos(); }\n  \t        if (skipSpaces === void 0) { skipSpaces = false; }\n  \t        var pos = this.firstPos();\n  \t        if (startPos) {\n  \t            (pos.line = startPos.line), (pos.column = startPos.column);\n  \t        }\n  \t        if (skipSpaces && !this.skipSpaces(pos, false, true)) {\n  \t            return; // Encountered nothing but spaces.\n  \t        }\n  \t        do\n  \t            callback.call(this, pos);\n  \t        while (this.nextPos(pos, skipSpaces));\n  \t    };\n  \t    Lines.prototype.bootstrapSlice = function (start, end) {\n  \t        var strings = this.toString()\n  \t            .split(lineTerminatorSeqExp)\n  \t            .slice(start.line - 1, end.line);\n  \t        if (strings.length > 0) {\n  \t            strings.push(strings.pop().slice(0, end.column));\n  \t            strings[0] = strings[0].slice(start.column);\n  \t        }\n  \t        return fromString(strings.join(\"\\n\"));\n  \t    };\n  \t    Lines.prototype.slice = function (start, end) {\n  \t        if (!end) {\n  \t            if (!start) {\n  \t                // The client seems to want a copy of this Lines object, but\n  \t                // Lines objects are immutable, so it's perfectly adequate to\n  \t                // return the same object.\n  \t                return this;\n  \t            }\n  \t            // Slice to the end if no end position was provided.\n  \t            end = this.lastPos();\n  \t        }\n  \t        if (!start) {\n  \t            throw new Error(\"cannot slice with end but not start\");\n  \t        }\n  \t        var sliced = this.infos.slice(start.line - 1, end.line);\n  \t        if (start.line === end.line) {\n  \t            sliced[0] = sliceInfo(sliced[0], start.column, end.column);\n  \t        }\n  \t        else {\n  \t            (0, tiny_invariant_1.default)(start.line < end.line);\n  \t            sliced[0] = sliceInfo(sliced[0], start.column);\n  \t            sliced.push(sliceInfo(sliced.pop(), 0, end.column));\n  \t        }\n  \t        var lines = new Lines(sliced);\n  \t        if (this.mappings.length > 0) {\n  \t            var newMappings_4 = lines.mappings;\n  \t            (0, tiny_invariant_1.default)(newMappings_4.length === 0);\n  \t            this.mappings.forEach(function (mapping) {\n  \t                var sliced = mapping.slice(this, start, end);\n  \t                if (sliced) {\n  \t                    newMappings_4.push(sliced);\n  \t                }\n  \t            }, this);\n  \t        }\n  \t        return lines;\n  \t    };\n  \t    Lines.prototype.bootstrapSliceString = function (start, end, options) {\n  \t        return this.slice(start, end).toString(options);\n  \t    };\n  \t    Lines.prototype.sliceString = function (start, end, options) {\n  \t        if (start === void 0) { start = this.firstPos(); }\n  \t        if (end === void 0) { end = this.lastPos(); }\n  \t        var _a = (0, options_1.normalize)(options), tabWidth = _a.tabWidth, useTabs = _a.useTabs, reuseWhitespace = _a.reuseWhitespace, lineTerminator = _a.lineTerminator;\n  \t        var parts = [];\n  \t        for (var line = start.line; line <= end.line; ++line) {\n  \t            var info = this.infos[line - 1];\n  \t            if (line === start.line) {\n  \t                if (line === end.line) {\n  \t                    info = sliceInfo(info, start.column, end.column);\n  \t                }\n  \t                else {\n  \t                    info = sliceInfo(info, start.column);\n  \t                }\n  \t            }\n  \t            else if (line === end.line) {\n  \t                info = sliceInfo(info, 0, end.column);\n  \t            }\n  \t            var indent = Math.max(info.indent, 0);\n  \t            var before_1 = info.line.slice(0, info.sliceStart);\n  \t            if (reuseWhitespace &&\n  \t                isOnlyWhitespace(before_1) &&\n  \t                countSpaces(before_1, tabWidth) === indent) {\n  \t                // Reuse original spaces if the indentation is correct.\n  \t                parts.push(info.line.slice(0, info.sliceEnd));\n  \t                continue;\n  \t            }\n  \t            var tabs = 0;\n  \t            var spaces = indent;\n  \t            if (useTabs) {\n  \t                tabs = Math.floor(indent / tabWidth);\n  \t                spaces -= tabs * tabWidth;\n  \t            }\n  \t            var result = \"\";\n  \t            if (tabs > 0) {\n  \t                result += new Array(tabs + 1).join(\"\\t\");\n  \t            }\n  \t            if (spaces > 0) {\n  \t                result += new Array(spaces + 1).join(\" \");\n  \t            }\n  \t            result += info.line.slice(info.sliceStart, info.sliceEnd);\n  \t            parts.push(result);\n  \t        }\n  \t        return parts.join(lineTerminator);\n  \t    };\n  \t    Lines.prototype.isEmpty = function () {\n  \t        return this.length < 2 && this.getLineLength(1) < 1;\n  \t    };\n  \t    Lines.prototype.join = function (elements) {\n  \t        var separator = this;\n  \t        var infos = [];\n  \t        var mappings = [];\n  \t        var prevInfo;\n  \t        function appendLines(linesOrNull) {\n  \t            if (linesOrNull === null) {\n  \t                return;\n  \t            }\n  \t            if (prevInfo) {\n  \t                var info = linesOrNull.infos[0];\n  \t                var indent = new Array(info.indent + 1).join(\" \");\n  \t                var prevLine_1 = infos.length;\n  \t                var prevColumn_1 = Math.max(prevInfo.indent, 0) +\n  \t                    prevInfo.sliceEnd -\n  \t                    prevInfo.sliceStart;\n  \t                prevInfo.line =\n  \t                    prevInfo.line.slice(0, prevInfo.sliceEnd) +\n  \t                        indent +\n  \t                        info.line.slice(info.sliceStart, info.sliceEnd);\n  \t                // If any part of a line is indentation-locked, the whole line\n  \t                // will be indentation-locked.\n  \t                prevInfo.locked = prevInfo.locked || info.locked;\n  \t                prevInfo.sliceEnd = prevInfo.line.length;\n  \t                if (linesOrNull.mappings.length > 0) {\n  \t                    linesOrNull.mappings.forEach(function (mapping) {\n  \t                        mappings.push(mapping.add(prevLine_1, prevColumn_1));\n  \t                    });\n  \t                }\n  \t            }\n  \t            else if (linesOrNull.mappings.length > 0) {\n  \t                mappings.push.apply(mappings, linesOrNull.mappings);\n  \t            }\n  \t            linesOrNull.infos.forEach(function (info, i) {\n  \t                if (!prevInfo || i > 0) {\n  \t                    prevInfo = tslib_1.__assign({}, info);\n  \t                    infos.push(prevInfo);\n  \t                }\n  \t            });\n  \t        }\n  \t        function appendWithSeparator(linesOrNull, i) {\n  \t            if (i > 0)\n  \t                appendLines(separator);\n  \t            appendLines(linesOrNull);\n  \t        }\n  \t        elements\n  \t            .map(function (elem) {\n  \t            var lines = fromString(elem);\n  \t            if (lines.isEmpty())\n  \t                return null;\n  \t            return lines;\n  \t        })\n  \t            .forEach(function (linesOrNull, i) {\n  \t            if (separator.isEmpty()) {\n  \t                appendLines(linesOrNull);\n  \t            }\n  \t            else {\n  \t                appendWithSeparator(linesOrNull, i);\n  \t            }\n  \t        });\n  \t        if (infos.length < 1)\n  \t            return emptyLines;\n  \t        var lines = new Lines(infos);\n  \t        lines.mappings = mappings;\n  \t        return lines;\n  \t    };\n  \t    Lines.prototype.concat = function () {\n  \t        var args = [];\n  \t        for (var _i = 0; _i < arguments.length; _i++) {\n  \t            args[_i] = arguments[_i];\n  \t        }\n  \t        var list = [this];\n  \t        list.push.apply(list, args);\n  \t        (0, tiny_invariant_1.default)(list.length === args.length + 1);\n  \t        return emptyLines.join(list);\n  \t    };\n  \t    return Lines;\n  \t}());\n  \tlines.Lines = Lines;\n  \tvar fromStringCache = {};\n  \tvar hasOwn = fromStringCache.hasOwnProperty;\n  \tvar maxCacheKeyLen = 10;\n  \tfunction countSpaces(spaces, tabWidth) {\n  \t    var count = 0;\n  \t    var len = spaces.length;\n  \t    for (var i = 0; i < len; ++i) {\n  \t        switch (spaces.charCodeAt(i)) {\n  \t            case 9: {\n  \t                // '\\t'\n  \t                (0, tiny_invariant_1.default)(typeof tabWidth === \"number\");\n  \t                (0, tiny_invariant_1.default)(tabWidth > 0);\n  \t                var next = Math.ceil(count / tabWidth) * tabWidth;\n  \t                if (next === count) {\n  \t                    count += tabWidth;\n  \t                }\n  \t                else {\n  \t                    count = next;\n  \t                }\n  \t                break;\n  \t            }\n  \t            case 11: // '\\v'\n  \t            case 12: // '\\f'\n  \t            case 13: // '\\r'\n  \t            case 0xfeff: // zero-width non-breaking space\n  \t                // These characters contribute nothing to indentation.\n  \t                break;\n  \t            case 32: // ' '\n  \t            default:\n  \t                // Treat all other whitespace like ' '.\n  \t                count += 1;\n  \t                break;\n  \t        }\n  \t    }\n  \t    return count;\n  \t}\n  \tlines.countSpaces = countSpaces;\n  \tvar leadingSpaceExp = /^\\s*/;\n  \t// As specified here: http://www.ecma-international.org/ecma-262/6.0/#sec-line-terminators\n  \tvar lineTerminatorSeqExp = /\\u000D\\u000A|\\u000D(?!\\u000A)|\\u000A|\\u2028|\\u2029/;\n  \t/**\n  \t * @param {Object} options - Options object that configures printing.\n  \t */\n  \tfunction fromString(string, options) {\n  \t    if (string instanceof Lines)\n  \t        return string;\n  \t    string += \"\";\n  \t    var tabWidth = options && options.tabWidth;\n  \t    var tabless = string.indexOf(\"\\t\") < 0;\n  \t    var cacheable = !options && tabless && string.length <= maxCacheKeyLen;\n  \t    (0, tiny_invariant_1.default)(tabWidth || tabless, \"No tab width specified but encountered tabs in string\\n\" + string);\n  \t    if (cacheable && hasOwn.call(fromStringCache, string))\n  \t        return fromStringCache[string];\n  \t    var lines = new Lines(string.split(lineTerminatorSeqExp).map(function (line) {\n  \t        // TODO: handle null exec result\n  \t        var spaces = leadingSpaceExp.exec(line)[0];\n  \t        return {\n  \t            line: line,\n  \t            indent: countSpaces(spaces, tabWidth),\n  \t            // Boolean indicating whether this line can be reindented.\n  \t            locked: false,\n  \t            sliceStart: spaces.length,\n  \t            sliceEnd: line.length,\n  \t        };\n  \t    }), (0, options_1.normalize)(options).sourceFileName);\n  \t    if (cacheable)\n  \t        fromStringCache[string] = lines;\n  \t    return lines;\n  \t}\n  \tlines.fromString = fromString;\n  \tfunction isOnlyWhitespace(string) {\n  \t    return !/\\S/.test(string);\n  \t}\n  \tfunction sliceInfo(info, startCol, endCol) {\n  \t    var sliceStart = info.sliceStart;\n  \t    var sliceEnd = info.sliceEnd;\n  \t    var indent = Math.max(info.indent, 0);\n  \t    var lineLength = indent + sliceEnd - sliceStart;\n  \t    if (typeof endCol === \"undefined\") {\n  \t        endCol = lineLength;\n  \t    }\n  \t    startCol = Math.max(startCol, 0);\n  \t    endCol = Math.min(endCol, lineLength);\n  \t    endCol = Math.max(endCol, startCol);\n  \t    if (endCol < indent) {\n  \t        indent = endCol;\n  \t        sliceEnd = sliceStart;\n  \t    }\n  \t    else {\n  \t        sliceEnd -= lineLength - endCol;\n  \t    }\n  \t    lineLength = endCol;\n  \t    lineLength -= startCol;\n  \t    if (startCol < indent) {\n  \t        indent -= startCol;\n  \t    }\n  \t    else {\n  \t        startCol -= indent;\n  \t        indent = 0;\n  \t        sliceStart += startCol;\n  \t    }\n  \t    (0, tiny_invariant_1.default)(indent >= 0);\n  \t    (0, tiny_invariant_1.default)(sliceStart <= sliceEnd);\n  \t    (0, tiny_invariant_1.default)(lineLength === indent + sliceEnd - sliceStart);\n  \t    if (info.indent === indent &&\n  \t        info.sliceStart === sliceStart &&\n  \t        info.sliceEnd === sliceEnd) {\n  \t        return info;\n  \t    }\n  \t    return {\n  \t        line: info.line,\n  \t        indent: indent,\n  \t        // A destructive slice always unlocks indentation.\n  \t        locked: false,\n  \t        sliceStart: sliceStart,\n  \t        sliceEnd: sliceEnd,\n  \t    };\n  \t}\n  \tfunction concat(elements) {\n  \t    return emptyLines.join(elements);\n  \t}\n  \tlines.concat = concat;\n  \t// The emptyLines object needs to be created all the way down here so that\n  \t// Lines.prototype will be fully populated.\n  \tvar emptyLines = fromString(\"\");\n  \treturn lines;\n  }\n\n  var comments = {};\n\n  var hasRequiredComments;\n\n  function requireComments () {\n  \tif (hasRequiredComments) return comments;\n  \thasRequiredComments = 1;\n  \tObject.defineProperty(comments, \"__esModule\", { value: true });\n  \tcomments.printComments = comments.attach = void 0;\n  \tvar tslib_1 = require$$0;\n  \tvar tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  \tvar types = tslib_1.__importStar(requireMain());\n  \tvar n = types.namedTypes;\n  \tvar isArray = types.builtInTypes.array;\n  \tvar isObject = types.builtInTypes.object;\n  \tvar lines_1 = requireLines();\n  \tvar util_1 = util;\n  \tvar childNodesCache = new WeakMap();\n  \t// TODO Move a non-caching implementation of this function into ast-types,\n  \t// and implement a caching wrapper function here.\n  \tfunction getSortedChildNodes(node, lines, resultArray) {\n  \t    if (!node) {\n  \t        return resultArray;\n  \t    }\n  \t    // The .loc checks below are sensitive to some of the problems that\n  \t    // are fixed by this utility function. Specifically, if it decides to\n  \t    // set node.loc to null, indicating that the node's .loc information\n  \t    // is unreliable, then we don't want to add node to the resultArray.\n  \t    (0, util_1.fixFaultyLocations)(node, lines);\n  \t    if (resultArray) {\n  \t        if (n.Node.check(node) && n.SourceLocation.check(node.loc)) {\n  \t            // This reverse insertion sort almost always takes constant\n  \t            // time because we almost always (maybe always?) append the\n  \t            // nodes in order anyway.\n  \t            var i = resultArray.length - 1;\n  \t            for (; i >= 0; --i) {\n  \t                var child = resultArray[i];\n  \t                if (child &&\n  \t                    child.loc &&\n  \t                    (0, util_1.comparePos)(child.loc.end, node.loc.start) <= 0) {\n  \t                    break;\n  \t                }\n  \t            }\n  \t            resultArray.splice(i + 1, 0, node);\n  \t            return resultArray;\n  \t        }\n  \t    }\n  \t    else {\n  \t        var childNodes = childNodesCache.get(node);\n  \t        if (childNodes) {\n  \t            return childNodes;\n  \t        }\n  \t    }\n  \t    var names;\n  \t    if (isArray.check(node)) {\n  \t        names = Object.keys(node);\n  \t    }\n  \t    else if (isObject.check(node)) {\n  \t        names = types.getFieldNames(node);\n  \t    }\n  \t    else {\n  \t        return resultArray;\n  \t    }\n  \t    if (!resultArray) {\n  \t        childNodesCache.set(node, (resultArray = []));\n  \t    }\n  \t    for (var i = 0, nameCount = names.length; i < nameCount; ++i) {\n  \t        getSortedChildNodes(node[names[i]], lines, resultArray);\n  \t    }\n  \t    return resultArray;\n  \t}\n  \t// As efficiently as possible, decorate the comment object with\n  \t// .precedingNode, .enclosingNode, and/or .followingNode properties, at\n  \t// least one of which is guaranteed to be defined.\n  \tfunction decorateComment(node, comment, lines) {\n  \t    var childNodes = getSortedChildNodes(node, lines);\n  \t    // Time to dust off the old binary search robes and wizard hat.\n  \t    var left = 0;\n  \t    var right = childNodes && childNodes.length;\n  \t    var precedingNode;\n  \t    var followingNode;\n  \t    while (typeof right === \"number\" && left < right) {\n  \t        var middle = (left + right) >> 1;\n  \t        var child = childNodes[middle];\n  \t        if ((0, util_1.comparePos)(child.loc.start, comment.loc.start) <= 0 &&\n  \t            (0, util_1.comparePos)(comment.loc.end, child.loc.end) <= 0) {\n  \t            // The comment is completely contained by this child node.\n  \t            decorateComment((comment.enclosingNode = child), comment, lines);\n  \t            return; // Abandon the binary search at this level.\n  \t        }\n  \t        if ((0, util_1.comparePos)(child.loc.end, comment.loc.start) <= 0) {\n  \t            // This child node falls completely before the comment.\n  \t            // Because we will never consider this node or any nodes\n  \t            // before it again, this node must be the closest preceding\n  \t            // node we have encountered so far.\n  \t            precedingNode = child;\n  \t            left = middle + 1;\n  \t            continue;\n  \t        }\n  \t        if ((0, util_1.comparePos)(comment.loc.end, child.loc.start) <= 0) {\n  \t            // This child node falls completely after the comment.\n  \t            // Because we will never consider this node or any nodes after\n  \t            // it again, this node must be the closest following node we\n  \t            // have encountered so far.\n  \t            followingNode = child;\n  \t            right = middle;\n  \t            continue;\n  \t        }\n  \t        throw new Error(\"Comment location overlaps with node location\");\n  \t    }\n  \t    if (precedingNode) {\n  \t        comment.precedingNode = precedingNode;\n  \t    }\n  \t    if (followingNode) {\n  \t        comment.followingNode = followingNode;\n  \t    }\n  \t}\n  \tfunction attach(comments, ast, lines) {\n  \t    if (!isArray.check(comments)) {\n  \t        return;\n  \t    }\n  \t    var tiesToBreak = [];\n  \t    comments.forEach(function (comment) {\n  \t        comment.loc.lines = lines;\n  \t        decorateComment(ast, comment, lines);\n  \t        var pn = comment.precedingNode;\n  \t        var en = comment.enclosingNode;\n  \t        var fn = comment.followingNode;\n  \t        if (pn && fn) {\n  \t            var tieCount = tiesToBreak.length;\n  \t            if (tieCount > 0) {\n  \t                var lastTie = tiesToBreak[tieCount - 1];\n  \t                (0, tiny_invariant_1.default)((lastTie.precedingNode === comment.precedingNode) ===\n  \t                    (lastTie.followingNode === comment.followingNode));\n  \t                if (lastTie.followingNode !== comment.followingNode) {\n  \t                    breakTies(tiesToBreak, lines);\n  \t                }\n  \t            }\n  \t            tiesToBreak.push(comment);\n  \t        }\n  \t        else if (pn) {\n  \t            // No contest: we have a trailing comment.\n  \t            breakTies(tiesToBreak, lines);\n  \t            addTrailingComment(pn, comment);\n  \t        }\n  \t        else if (fn) {\n  \t            // No contest: we have a leading comment.\n  \t            breakTies(tiesToBreak, lines);\n  \t            addLeadingComment(fn, comment);\n  \t        }\n  \t        else if (en) {\n  \t            // The enclosing node has no child nodes at all, so what we\n  \t            // have here is a dangling comment, e.g. [/* crickets */].\n  \t            breakTies(tiesToBreak, lines);\n  \t            addDanglingComment(en, comment);\n  \t        }\n  \t        else {\n  \t            throw new Error(\"AST contains no nodes at all?\");\n  \t        }\n  \t    });\n  \t    breakTies(tiesToBreak, lines);\n  \t    comments.forEach(function (comment) {\n  \t        // These node references were useful for breaking ties, but we\n  \t        // don't need them anymore, and they create cycles in the AST that\n  \t        // may lead to infinite recursion if we don't delete them here.\n  \t        delete comment.precedingNode;\n  \t        delete comment.enclosingNode;\n  \t        delete comment.followingNode;\n  \t    });\n  \t}\n  \tcomments.attach = attach;\n  \tfunction breakTies(tiesToBreak, lines) {\n  \t    var tieCount = tiesToBreak.length;\n  \t    if (tieCount === 0) {\n  \t        return;\n  \t    }\n  \t    var pn = tiesToBreak[0].precedingNode;\n  \t    var fn = tiesToBreak[0].followingNode;\n  \t    var gapEndPos = fn.loc.start;\n  \t    // Iterate backwards through tiesToBreak, examining the gaps\n  \t    // between the tied comments. In order to qualify as leading, a\n  \t    // comment must be separated from fn by an unbroken series of\n  \t    // whitespace-only gaps (or other comments).\n  \t    var indexOfFirstLeadingComment = tieCount;\n  \t    var comment;\n  \t    for (; indexOfFirstLeadingComment > 0; --indexOfFirstLeadingComment) {\n  \t        comment = tiesToBreak[indexOfFirstLeadingComment - 1];\n  \t        (0, tiny_invariant_1.default)(comment.precedingNode === pn);\n  \t        (0, tiny_invariant_1.default)(comment.followingNode === fn);\n  \t        var gap = lines.sliceString(comment.loc.end, gapEndPos);\n  \t        if (/\\S/.test(gap)) {\n  \t            // The gap string contained something other than whitespace.\n  \t            break;\n  \t        }\n  \t        gapEndPos = comment.loc.start;\n  \t    }\n  \t    while (indexOfFirstLeadingComment <= tieCount &&\n  \t        (comment = tiesToBreak[indexOfFirstLeadingComment]) &&\n  \t        // If the comment is a //-style comment and indented more\n  \t        // deeply than the node itself, reconsider it as trailing.\n  \t        (comment.type === \"Line\" || comment.type === \"CommentLine\") &&\n  \t        comment.loc.start.column > fn.loc.start.column) {\n  \t        ++indexOfFirstLeadingComment;\n  \t    }\n  \t    if (indexOfFirstLeadingComment) {\n  \t        var enclosingNode = tiesToBreak[indexOfFirstLeadingComment - 1].enclosingNode;\n  \t        if ((enclosingNode === null || enclosingNode === void 0 ? void 0 : enclosingNode.type) === \"CallExpression\") {\n  \t            --indexOfFirstLeadingComment;\n  \t        }\n  \t    }\n  \t    tiesToBreak.forEach(function (comment, i) {\n  \t        if (i < indexOfFirstLeadingComment) {\n  \t            addTrailingComment(pn, comment);\n  \t        }\n  \t        else {\n  \t            addLeadingComment(fn, comment);\n  \t        }\n  \t    });\n  \t    tiesToBreak.length = 0;\n  \t}\n  \tfunction addCommentHelper(node, comment) {\n  \t    var comments = node.comments || (node.comments = []);\n  \t    comments.push(comment);\n  \t}\n  \tfunction addLeadingComment(node, comment) {\n  \t    comment.leading = true;\n  \t    comment.trailing = false;\n  \t    addCommentHelper(node, comment);\n  \t}\n  \tfunction addDanglingComment(node, comment) {\n  \t    comment.leading = false;\n  \t    comment.trailing = false;\n  \t    addCommentHelper(node, comment);\n  \t}\n  \tfunction addTrailingComment(node, comment) {\n  \t    comment.leading = false;\n  \t    comment.trailing = true;\n  \t    addCommentHelper(node, comment);\n  \t}\n  \tfunction printLeadingComment(commentPath, print) {\n  \t    var comment = commentPath.getValue();\n  \t    n.Comment.assert(comment);\n  \t    var loc = comment.loc;\n  \t    var lines = loc && loc.lines;\n  \t    var parts = [print(commentPath)];\n  \t    if (comment.trailing) {\n  \t        // When we print trailing comments as leading comments, we don't\n  \t        // want to bring any trailing spaces along.\n  \t        parts.push(\"\\n\");\n  \t    }\n  \t    else if (lines instanceof lines_1.Lines) {\n  \t        var trailingSpace = lines.slice(loc.end, lines.skipSpaces(loc.end) || lines.lastPos());\n  \t        if (trailingSpace.length === 1) {\n  \t            // If the trailing space contains no newlines, then we want to\n  \t            // preserve it exactly as we found it.\n  \t            parts.push(trailingSpace);\n  \t        }\n  \t        else {\n  \t            // If the trailing space contains newlines, then replace it\n  \t            // with just that many newlines, with all other spaces removed.\n  \t            parts.push(new Array(trailingSpace.length).join(\"\\n\"));\n  \t        }\n  \t    }\n  \t    else {\n  \t        parts.push(\"\\n\");\n  \t    }\n  \t    return (0, lines_1.concat)(parts);\n  \t}\n  \tfunction printTrailingComment(commentPath, print) {\n  \t    var comment = commentPath.getValue(commentPath);\n  \t    n.Comment.assert(comment);\n  \t    var loc = comment.loc;\n  \t    var lines = loc && loc.lines;\n  \t    var parts = [];\n  \t    if (lines instanceof lines_1.Lines) {\n  \t        var fromPos = lines.skipSpaces(loc.start, true) || lines.firstPos();\n  \t        var leadingSpace = lines.slice(fromPos, loc.start);\n  \t        if (leadingSpace.length === 1) {\n  \t            // If the leading space contains no newlines, then we want to\n  \t            // preserve it exactly as we found it.\n  \t            parts.push(leadingSpace);\n  \t        }\n  \t        else {\n  \t            // If the leading space contains newlines, then replace it\n  \t            // with just that many newlines, sans all other spaces.\n  \t            parts.push(new Array(leadingSpace.length).join(\"\\n\"));\n  \t        }\n  \t    }\n  \t    parts.push(print(commentPath));\n  \t    return (0, lines_1.concat)(parts);\n  \t}\n  \tfunction printComments(path, print) {\n  \t    var value = path.getValue();\n  \t    var innerLines = print(path);\n  \t    var comments = n.Node.check(value) && types.getFieldValue(value, \"comments\");\n  \t    if (!comments || comments.length === 0) {\n  \t        return innerLines;\n  \t    }\n  \t    var leadingParts = [];\n  \t    var trailingParts = [innerLines];\n  \t    path.each(function (commentPath) {\n  \t        var comment = commentPath.getValue();\n  \t        var leading = types.getFieldValue(comment, \"leading\");\n  \t        var trailing = types.getFieldValue(comment, \"trailing\");\n  \t        if (leading ||\n  \t            (trailing &&\n  \t                !(n.Statement.check(value) ||\n  \t                    comment.type === \"Block\" ||\n  \t                    comment.type === \"CommentBlock\"))) {\n  \t            leadingParts.push(printLeadingComment(commentPath, print));\n  \t        }\n  \t        else if (trailing) {\n  \t            trailingParts.push(printTrailingComment(commentPath, print));\n  \t        }\n  \t    }, \"comments\");\n  \t    leadingParts.push.apply(leadingParts, trailingParts);\n  \t    return (0, lines_1.concat)(leadingParts);\n  \t}\n  \tcomments.printComments = printComments;\n  \treturn comments;\n  }\n\n  var hasRequiredParser;\n\n  function requireParser () {\n  \tif (hasRequiredParser) return parser;\n  \thasRequiredParser = 1;\n  \tObject.defineProperty(parser, \"__esModule\", { value: true });\n  \tparser.parse = void 0;\n  \tvar tslib_1 = require$$0;\n  \tvar tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  \tvar types = tslib_1.__importStar(requireMain());\n  \tvar b = types.builders;\n  \tvar isObject = types.builtInTypes.object;\n  \tvar isArray = types.builtInTypes.array;\n  \tvar options_1 = requireOptions();\n  \tvar lines_1 = requireLines();\n  \tvar comments_1 = requireComments();\n  \tvar util$1 = tslib_1.__importStar(util);\n  \tfunction parse(source, options) {\n  \t    options = (0, options_1.normalize)(options);\n  \t    var lines = (0, lines_1.fromString)(source, options);\n  \t    var sourceWithoutTabs = lines.toString({\n  \t        tabWidth: options.tabWidth,\n  \t        reuseWhitespace: false,\n  \t        useTabs: false,\n  \t    });\n  \t    var comments = [];\n  \t    var ast = options.parser.parse(sourceWithoutTabs, {\n  \t        jsx: true,\n  \t        loc: true,\n  \t        locations: true,\n  \t        range: options.range,\n  \t        comment: true,\n  \t        onComment: comments,\n  \t        tolerant: util$1.getOption(options, \"tolerant\", true),\n  \t        ecmaVersion: 6,\n  \t        sourceType: util$1.getOption(options, \"sourceType\", \"module\"),\n  \t    });\n  \t    // Use ast.tokens if possible, and otherwise fall back to the Esprima\n  \t    // tokenizer. All the preconfigured ../parsers/* expose ast.tokens\n  \t    // automatically, but custom parsers might need additional configuration\n  \t    // to avoid this fallback.\n  \t    var tokens = Array.isArray(ast.tokens)\n  \t        ? ast.tokens\n  \t        : require$$7.tokenize(sourceWithoutTabs, {\n  \t            loc: true,\n  \t        });\n  \t    // We will reattach the tokens array to the file object below.\n  \t    delete ast.tokens;\n  \t    // Make sure every token has a token.value string.\n  \t    tokens.forEach(function (token) {\n  \t        if (typeof token.value !== \"string\") {\n  \t            token.value = lines.sliceString(token.loc.start, token.loc.end);\n  \t        }\n  \t    });\n  \t    if (Array.isArray(ast.comments)) {\n  \t        comments = ast.comments;\n  \t        delete ast.comments;\n  \t    }\n  \t    if (ast.loc) {\n  \t        // If the source was empty, some parsers give loc.{start,end}.line\n  \t        // values of 0, instead of the minimum of 1.\n  \t        util$1.fixFaultyLocations(ast, lines);\n  \t    }\n  \t    else {\n  \t        ast.loc = {\n  \t            start: lines.firstPos(),\n  \t            end: lines.lastPos(),\n  \t        };\n  \t    }\n  \t    ast.loc.lines = lines;\n  \t    ast.loc.indent = 0;\n  \t    var file;\n  \t    var program;\n  \t    if (ast.type === \"Program\") {\n  \t        program = ast;\n  \t        // In order to ensure we reprint leading and trailing program\n  \t        // comments, wrap the original Program node with a File node. Only\n  \t        // ESTree parsers (Acorn and Esprima) return a Program as the root AST\n  \t        // node. Most other (Babylon-like) parsers return a File.\n  \t        file = b.file(ast, options.sourceFileName || null);\n  \t        file.loc = {\n  \t            start: lines.firstPos(),\n  \t            end: lines.lastPos(),\n  \t            lines: lines,\n  \t            indent: 0,\n  \t        };\n  \t    }\n  \t    else if (ast.type === \"File\") {\n  \t        file = ast;\n  \t        program = file.program;\n  \t    }\n  \t    // Expose file.tokens unless the caller passed false for options.tokens.\n  \t    if (options.tokens) {\n  \t        file.tokens = tokens;\n  \t    }\n  \t    // Expand the Program's .loc to include all comments (not just those\n  \t    // attached to the Program node, as its children may have comments as\n  \t    // well), since sometimes program.loc.{start,end} will coincide with the\n  \t    // .loc.{start,end} of the first and last *statements*, mistakenly\n  \t    // excluding comments that fall outside that region.\n  \t    var trueProgramLoc = util$1.getTrueLoc({\n  \t        type: program.type,\n  \t        loc: program.loc,\n  \t        body: [],\n  \t        comments: comments,\n  \t    }, lines);\n  \t    program.loc.start = trueProgramLoc.start;\n  \t    program.loc.end = trueProgramLoc.end;\n  \t    // Passing file.program here instead of just file means that initial\n  \t    // comments will be attached to program.body[0] instead of program.\n  \t    (0, comments_1.attach)(comments, program.body.length ? file.program : file, lines);\n  \t    // Return a copy of the original AST so that any changes made may be\n  \t    // compared to the original.\n  \t    return new TreeCopier(lines, tokens).copy(file);\n  \t}\n  \tparser.parse = parse;\n  \tvar TreeCopier = function TreeCopier(lines, tokens) {\n  \t    (0, tiny_invariant_1.default)(this instanceof TreeCopier);\n  \t    this.lines = lines;\n  \t    this.tokens = tokens;\n  \t    this.startTokenIndex = 0;\n  \t    this.endTokenIndex = tokens.length;\n  \t    this.indent = 0;\n  \t    this.seen = new Map();\n  \t};\n  \tvar TCp = TreeCopier.prototype;\n  \tTCp.copy = function (node) {\n  \t    if (this.seen.has(node)) {\n  \t        return this.seen.get(node);\n  \t    }\n  \t    if (isArray.check(node)) {\n  \t        var copy_1 = new Array(node.length);\n  \t        this.seen.set(node, copy_1);\n  \t        node.forEach(function (item, i) {\n  \t            copy_1[i] = this.copy(item);\n  \t        }, this);\n  \t        return copy_1;\n  \t    }\n  \t    if (!isObject.check(node)) {\n  \t        return node;\n  \t    }\n  \t    util$1.fixFaultyLocations(node, this.lines);\n  \t    var copy = Object.create(Object.getPrototypeOf(node), {\n  \t        original: {\n  \t            // Provide a link from the copy to the original.\n  \t            value: node,\n  \t            configurable: false,\n  \t            enumerable: false,\n  \t            writable: true,\n  \t        },\n  \t    });\n  \t    this.seen.set(node, copy);\n  \t    var loc = node.loc;\n  \t    var oldIndent = this.indent;\n  \t    var newIndent = oldIndent;\n  \t    var oldStartTokenIndex = this.startTokenIndex;\n  \t    var oldEndTokenIndex = this.endTokenIndex;\n  \t    if (loc) {\n  \t        // When node is a comment, we set node.loc.indent to\n  \t        // node.loc.start.column so that, when/if we print the comment by\n  \t        // itself, we can strip that much whitespace from the left margin of\n  \t        // the comment. This only really matters for multiline Block comments,\n  \t        // but it doesn't hurt for Line comments.\n  \t        if (node.type === \"Block\" ||\n  \t            node.type === \"Line\" ||\n  \t            node.type === \"CommentBlock\" ||\n  \t            node.type === \"CommentLine\" ||\n  \t            this.lines.isPrecededOnlyByWhitespace(loc.start)) {\n  \t            newIndent = this.indent = loc.start.column;\n  \t        }\n  \t        // Every node.loc has a reference to the original source lines as well\n  \t        // as a complete list of source tokens.\n  \t        loc.lines = this.lines;\n  \t        loc.tokens = this.tokens;\n  \t        loc.indent = newIndent;\n  \t        // Set loc.start.token and loc.end.token such that\n  \t        // loc.tokens.slice(loc.start.token, loc.end.token) returns a list of\n  \t        // all the tokens that make up this node.\n  \t        this.findTokenRange(loc);\n  \t    }\n  \t    var keys = Object.keys(node);\n  \t    var keyCount = keys.length;\n  \t    for (var i = 0; i < keyCount; ++i) {\n  \t        var key = keys[i];\n  \t        if (key === \"loc\") {\n  \t            copy[key] = node[key];\n  \t        }\n  \t        else if (key === \"tokens\" && node.type === \"File\") {\n  \t            // Preserve file.tokens (uncopied) in case client code cares about\n  \t            // it, even though Recast ignores it when reprinting.\n  \t            copy[key] = node[key];\n  \t        }\n  \t        else {\n  \t            copy[key] = this.copy(node[key]);\n  \t        }\n  \t    }\n  \t    this.indent = oldIndent;\n  \t    this.startTokenIndex = oldStartTokenIndex;\n  \t    this.endTokenIndex = oldEndTokenIndex;\n  \t    return copy;\n  \t};\n  \t// If we didn't have any idea where in loc.tokens to look for tokens\n  \t// contained by this loc, a binary search would be appropriate, but\n  \t// because we maintain this.startTokenIndex and this.endTokenIndex as we\n  \t// traverse the AST, we only need to make small (linear) adjustments to\n  \t// those indexes with each recursive iteration.\n  \tTCp.findTokenRange = function (loc) {\n  \t    // In the unlikely event that loc.tokens[this.startTokenIndex] starts\n  \t    // *after* loc.start, we need to rewind this.startTokenIndex first.\n  \t    while (this.startTokenIndex > 0) {\n  \t        var token = loc.tokens[this.startTokenIndex];\n  \t        if (util$1.comparePos(loc.start, token.loc.start) < 0) {\n  \t            --this.startTokenIndex;\n  \t        }\n  \t        else\n  \t            break;\n  \t    }\n  \t    // In the unlikely event that loc.tokens[this.endTokenIndex - 1] ends\n  \t    // *before* loc.end, we need to fast-forward this.endTokenIndex first.\n  \t    while (this.endTokenIndex < loc.tokens.length) {\n  \t        var token = loc.tokens[this.endTokenIndex];\n  \t        if (util$1.comparePos(token.loc.end, loc.end) < 0) {\n  \t            ++this.endTokenIndex;\n  \t        }\n  \t        else\n  \t            break;\n  \t    }\n  \t    // Increment this.startTokenIndex until we've found the first token\n  \t    // contained by this node.\n  \t    while (this.startTokenIndex < this.endTokenIndex) {\n  \t        var token = loc.tokens[this.startTokenIndex];\n  \t        if (util$1.comparePos(token.loc.start, loc.start) < 0) {\n  \t            ++this.startTokenIndex;\n  \t        }\n  \t        else\n  \t            break;\n  \t    }\n  \t    // Index into loc.tokens of the first token within this node.\n  \t    loc.start.token = this.startTokenIndex;\n  \t    // Decrement this.endTokenIndex until we've found the first token after\n  \t    // this node (not contained by the node).\n  \t    while (this.endTokenIndex > this.startTokenIndex) {\n  \t        var token = loc.tokens[this.endTokenIndex - 1];\n  \t        if (util$1.comparePos(loc.end, token.loc.end) < 0) {\n  \t            --this.endTokenIndex;\n  \t        }\n  \t        else\n  \t            break;\n  \t    }\n  \t    // Index into loc.tokens of the first token *after* this node.\n  \t    // If loc.start.token === loc.end.token, the node contains no tokens,\n  \t    // and the index is that of the next token following this node.\n  \t    loc.end.token = this.endTokenIndex;\n  \t};\n  \treturn parser;\n  }\n\n  var printer = {};\n\n  var fastPath = {};\n\n  var hasRequiredFastPath;\n\n  function requireFastPath () {\n  \tif (hasRequiredFastPath) return fastPath;\n  \thasRequiredFastPath = 1;\n  \tObject.defineProperty(fastPath, \"__esModule\", { value: true });\n  \tvar tslib_1 = require$$0;\n  \tvar tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  \tvar types = tslib_1.__importStar(requireMain());\n  \tvar util$1 = tslib_1.__importStar(util);\n  \tvar n = types.namedTypes;\n  \tvar isArray = types.builtInTypes.array;\n  \tvar isNumber = types.builtInTypes.number;\n  \tvar PRECEDENCE = {};\n  \t[\n  \t    [\"??\"],\n  \t    [\"||\"],\n  \t    [\"&&\"],\n  \t    [\"|\"],\n  \t    [\"^\"],\n  \t    [\"&\"],\n  \t    [\"==\", \"===\", \"!=\", \"!==\"],\n  \t    [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n  \t    [\">>\", \"<<\", \">>>\"],\n  \t    [\"+\", \"-\"],\n  \t    [\"*\", \"/\", \"%\"],\n  \t    [\"**\"],\n  \t].forEach(function (tier, i) {\n  \t    tier.forEach(function (op) {\n  \t        PRECEDENCE[op] = i;\n  \t    });\n  \t});\n  \tvar FastPath = function FastPath(value) {\n  \t    (0, tiny_invariant_1.default)(this instanceof FastPath);\n  \t    this.stack = [value];\n  \t};\n  \tvar FPp = FastPath.prototype;\n  \t// Static convenience function for coercing a value to a FastPath.\n  \tFastPath.from = function (obj) {\n  \t    if (obj instanceof FastPath) {\n  \t        // Return a defensive copy of any existing FastPath instances.\n  \t        return obj.copy();\n  \t    }\n  \t    if (obj instanceof types.NodePath) {\n  \t        // For backwards compatibility, unroll NodePath instances into\n  \t        // lightweight FastPath [..., name, value] stacks.\n  \t        var copy = Object.create(FastPath.prototype);\n  \t        var stack = [obj.value];\n  \t        for (var pp = void 0; (pp = obj.parentPath); obj = pp)\n  \t            stack.push(obj.name, pp.value);\n  \t        copy.stack = stack.reverse();\n  \t        return copy;\n  \t    }\n  \t    // Otherwise use obj as the value of the new FastPath instance.\n  \t    return new FastPath(obj);\n  \t};\n  \tFPp.copy = function copy() {\n  \t    var copy = Object.create(FastPath.prototype);\n  \t    copy.stack = this.stack.slice(0);\n  \t    return copy;\n  \t};\n  \t// The name of the current property is always the penultimate element of\n  \t// this.stack, and always a String.\n  \tFPp.getName = function getName() {\n  \t    var s = this.stack;\n  \t    var len = s.length;\n  \t    if (len > 1) {\n  \t        return s[len - 2];\n  \t    }\n  \t    // Since the name is always a string, null is a safe sentinel value to\n  \t    // return if we do not know the name of the (root) value.\n  \t    return null;\n  \t};\n  \t// The value of the current property is always the final element of\n  \t// this.stack.\n  \tFPp.getValue = function getValue() {\n  \t    var s = this.stack;\n  \t    return s[s.length - 1];\n  \t};\n  \tFPp.valueIsDuplicate = function () {\n  \t    var s = this.stack;\n  \t    var valueIndex = s.length - 1;\n  \t    return s.lastIndexOf(s[valueIndex], valueIndex - 1) >= 0;\n  \t};\n  \tfunction getNodeHelper(path, count) {\n  \t    var s = path.stack;\n  \t    for (var i = s.length - 1; i >= 0; i -= 2) {\n  \t        var value = s[i];\n  \t        if (n.Node.check(value) && --count < 0) {\n  \t            return value;\n  \t        }\n  \t    }\n  \t    return null;\n  \t}\n  \tFPp.getNode = function getNode(count) {\n  \t    if (count === void 0) { count = 0; }\n  \t    return getNodeHelper(this, ~~count);\n  \t};\n  \tFPp.getParentNode = function getParentNode(count) {\n  \t    if (count === void 0) { count = 0; }\n  \t    return getNodeHelper(this, ~~count + 1);\n  \t};\n  \t// The length of the stack can be either even or odd, depending on whether\n  \t// or not we have a name for the root value. The difference between the\n  \t// index of the root value and the index of the final value is always\n  \t// even, though, which allows us to return the root value in constant time\n  \t// (i.e. without iterating backwards through the stack).\n  \tFPp.getRootValue = function getRootValue() {\n  \t    var s = this.stack;\n  \t    if (s.length % 2 === 0) {\n  \t        return s[1];\n  \t    }\n  \t    return s[0];\n  \t};\n  \t// Temporarily push properties named by string arguments given after the\n  \t// callback function onto this.stack, then call the callback with a\n  \t// reference to this (modified) FastPath object. Note that the stack will\n  \t// be restored to its original state after the callback is finished, so it\n  \t// is probably a mistake to retain a reference to the path.\n  \tFPp.call = function call(callback /*, name1, name2, ... */) {\n  \t    var s = this.stack;\n  \t    var origLen = s.length;\n  \t    var value = s[origLen - 1];\n  \t    var argc = arguments.length;\n  \t    for (var i = 1; i < argc; ++i) {\n  \t        var name = arguments[i];\n  \t        value = value[name];\n  \t        s.push(name, value);\n  \t    }\n  \t    var result = callback(this);\n  \t    s.length = origLen;\n  \t    return result;\n  \t};\n  \t// Similar to FastPath.prototype.call, except that the value obtained by\n  \t// accessing this.getValue()[name1][name2]... should be array-like. The\n  \t// callback will be called with a reference to this path object for each\n  \t// element of the array.\n  \tFPp.each = function each(callback /*, name1, name2, ... */) {\n  \t    var s = this.stack;\n  \t    var origLen = s.length;\n  \t    var value = s[origLen - 1];\n  \t    var argc = arguments.length;\n  \t    for (var i = 1; i < argc; ++i) {\n  \t        var name = arguments[i];\n  \t        value = value[name];\n  \t        s.push(name, value);\n  \t    }\n  \t    for (var i = 0; i < value.length; ++i) {\n  \t        if (i in value) {\n  \t            s.push(i, value[i]);\n  \t            // If the callback needs to know the value of i, call\n  \t            // path.getName(), assuming path is the parameter name.\n  \t            callback(this);\n  \t            s.length -= 2;\n  \t        }\n  \t    }\n  \t    s.length = origLen;\n  \t};\n  \t// Similar to FastPath.prototype.each, except that the results of the\n  \t// callback function invocations are stored in an array and returned at\n  \t// the end of the iteration.\n  \tFPp.map = function map(callback /*, name1, name2, ... */) {\n  \t    var s = this.stack;\n  \t    var origLen = s.length;\n  \t    var value = s[origLen - 1];\n  \t    var argc = arguments.length;\n  \t    for (var i = 1; i < argc; ++i) {\n  \t        var name = arguments[i];\n  \t        value = value[name];\n  \t        s.push(name, value);\n  \t    }\n  \t    var result = new Array(value.length);\n  \t    for (var i = 0; i < value.length; ++i) {\n  \t        if (i in value) {\n  \t            s.push(i, value[i]);\n  \t            result[i] = callback(this, i);\n  \t            s.length -= 2;\n  \t        }\n  \t    }\n  \t    s.length = origLen;\n  \t    return result;\n  \t};\n  \t// Returns true if the node at the tip of the path is wrapped with\n  \t// parentheses, OR if the only reason the node needed parentheses was that\n  \t// it couldn't be the first expression in the enclosing statement (see\n  \t// FastPath#canBeFirstInStatement), and it has an opening `(` character.\n  \t// For example, the FunctionExpression in `(function(){}())` appears to\n  \t// need parentheses only because it's the first expression in the AST, but\n  \t// since it happens to be preceded by a `(` (which is not apparent from\n  \t// the AST but can be determined using FastPath#getPrevToken), there is no\n  \t// ambiguity about how to parse it, so it counts as having parentheses,\n  \t// even though it is not immediately followed by a `)`.\n  \tFPp.hasParens = function () {\n  \t    var node = this.getNode();\n  \t    var prevToken = this.getPrevToken(node);\n  \t    if (!prevToken) {\n  \t        return false;\n  \t    }\n  \t    var nextToken = this.getNextToken(node);\n  \t    if (!nextToken) {\n  \t        return false;\n  \t    }\n  \t    if (prevToken.value === \"(\") {\n  \t        if (nextToken.value === \")\") {\n  \t            // If the node preceded by a `(` token and followed by a `)` token,\n  \t            // then of course it has parentheses.\n  \t            return true;\n  \t        }\n  \t        // If this is one of the few Expression types that can't come first in\n  \t        // the enclosing statement because of parsing ambiguities (namely,\n  \t        // FunctionExpression, ObjectExpression, and ClassExpression) and\n  \t        // this.firstInStatement() returns true, and the node would not need\n  \t        // parentheses in an expression context because this.needsParens(true)\n  \t        // returns false, then it just needs an opening parenthesis to resolve\n  \t        // the parsing ambiguity that made it appear to need parentheses.\n  \t        var justNeedsOpeningParen = !this.canBeFirstInStatement() &&\n  \t            this.firstInStatement() &&\n  \t            !this.needsParens(true);\n  \t        if (justNeedsOpeningParen) {\n  \t            return true;\n  \t        }\n  \t    }\n  \t    return false;\n  \t};\n  \tFPp.getPrevToken = function (node) {\n  \t    node = node || this.getNode();\n  \t    var loc = node && node.loc;\n  \t    var tokens = loc && loc.tokens;\n  \t    if (tokens && loc.start.token > 0) {\n  \t        var token = tokens[loc.start.token - 1];\n  \t        if (token) {\n  \t            // Do not return tokens that fall outside the root subtree.\n  \t            var rootLoc = this.getRootValue().loc;\n  \t            if (util$1.comparePos(rootLoc.start, token.loc.start) <= 0) {\n  \t                return token;\n  \t            }\n  \t        }\n  \t    }\n  \t    return null;\n  \t};\n  \tFPp.getNextToken = function (node) {\n  \t    node = node || this.getNode();\n  \t    var loc = node && node.loc;\n  \t    var tokens = loc && loc.tokens;\n  \t    if (tokens && loc.end.token < tokens.length) {\n  \t        var token = tokens[loc.end.token];\n  \t        if (token) {\n  \t            // Do not return tokens that fall outside the root subtree.\n  \t            var rootLoc = this.getRootValue().loc;\n  \t            if (util$1.comparePos(token.loc.end, rootLoc.end) <= 0) {\n  \t                return token;\n  \t            }\n  \t        }\n  \t    }\n  \t    return null;\n  \t};\n  \t// Inspired by require(\"ast-types\").NodePath.prototype.needsParens, but\n  \t// more efficient because we're iterating backwards through a stack.\n  \tFPp.needsParens = function (assumeExpressionContext) {\n  \t    var node = this.getNode();\n  \t    // This needs to come before `if (!parent) { return false }` because\n  \t    // an object destructuring assignment requires parens for\n  \t    // correctness even when it's the topmost expression.\n  \t    if (node.type === \"AssignmentExpression\" &&\n  \t        node.left.type === \"ObjectPattern\") {\n  \t        return true;\n  \t    }\n  \t    var parent = this.getParentNode();\n  \t    var name = this.getName();\n  \t    // If the value of this path is some child of a Node and not a Node\n  \t    // itself, then it doesn't need parentheses. Only Node objects (in fact,\n  \t    // only Expression nodes) need parentheses.\n  \t    if (this.getValue() !== node) {\n  \t        return false;\n  \t    }\n  \t    // Only statements don't need parentheses.\n  \t    if (n.Statement.check(node)) {\n  \t        return false;\n  \t    }\n  \t    // Identifiers never need parentheses.\n  \t    if (node.type === \"Identifier\") {\n  \t        return false;\n  \t    }\n  \t    if (parent && parent.type === \"ParenthesizedExpression\") {\n  \t        return false;\n  \t    }\n  \t    if (node.extra && node.extra.parenthesized) {\n  \t        return true;\n  \t    }\n  \t    if (!parent)\n  \t        return false;\n  \t    // Wrap e.g. `-1` in parentheses inside `(-1) ** 2`.\n  \t    if (node.type === \"UnaryExpression\" &&\n  \t        parent.type === \"BinaryExpression\" &&\n  \t        name === \"left\" &&\n  \t        parent.left === node &&\n  \t        parent.operator === \"**\") {\n  \t        return true;\n  \t    }\n  \t    switch (node.type) {\n  \t        case \"UnaryExpression\":\n  \t        case \"SpreadElement\":\n  \t        case \"SpreadProperty\":\n  \t            return (parent.type === \"MemberExpression\" &&\n  \t                name === \"object\" &&\n  \t                parent.object === node);\n  \t        case \"BinaryExpression\":\n  \t        case \"LogicalExpression\":\n  \t            switch (parent.type) {\n  \t                case \"CallExpression\":\n  \t                    return name === \"callee\" && parent.callee === node;\n  \t                case \"UnaryExpression\":\n  \t                case \"SpreadElement\":\n  \t                case \"SpreadProperty\":\n  \t                    return true;\n  \t                case \"MemberExpression\":\n  \t                    return name === \"object\" && parent.object === node;\n  \t                case \"BinaryExpression\":\n  \t                case \"LogicalExpression\": {\n  \t                    var po = parent.operator;\n  \t                    var pp = PRECEDENCE[po];\n  \t                    var no = node.operator;\n  \t                    var np = PRECEDENCE[no];\n  \t                    if (pp > np) {\n  \t                        return true;\n  \t                    }\n  \t                    if (pp === np && name === \"right\") {\n  \t                        (0, tiny_invariant_1.default)(parent.right === node);\n  \t                        return true;\n  \t                    }\n  \t                    break;\n  \t                }\n  \t                default:\n  \t                    return false;\n  \t            }\n  \t            break;\n  \t        case \"SequenceExpression\":\n  \t            switch (parent.type) {\n  \t                case \"ReturnStatement\":\n  \t                    return false;\n  \t                case \"ForStatement\":\n  \t                    // Although parentheses wouldn't hurt around sequence expressions in\n  \t                    // the head of for loops, traditional style dictates that e.g. i++,\n  \t                    // j++ should not be wrapped with parentheses.\n  \t                    return false;\n  \t                case \"ExpressionStatement\":\n  \t                    return name !== \"expression\";\n  \t                default:\n  \t                    // Otherwise err on the side of overparenthesization, adding\n  \t                    // explicit exceptions above if this proves overzealous.\n  \t                    return true;\n  \t            }\n  \t        case \"OptionalIndexedAccessType\":\n  \t            return node.optional && parent.type === \"IndexedAccessType\";\n  \t        case \"IntersectionTypeAnnotation\":\n  \t        case \"UnionTypeAnnotation\":\n  \t            return parent.type === \"NullableTypeAnnotation\";\n  \t        case \"Literal\":\n  \t            return (parent.type === \"MemberExpression\" &&\n  \t                isNumber.check(node.value) &&\n  \t                name === \"object\" &&\n  \t                parent.object === node);\n  \t        // Babel 6 Literal split\n  \t        case \"NumericLiteral\":\n  \t            return (parent.type === \"MemberExpression\" &&\n  \t                name === \"object\" &&\n  \t                parent.object === node);\n  \t        case \"YieldExpression\":\n  \t        case \"AwaitExpression\":\n  \t        case \"AssignmentExpression\":\n  \t        case \"ConditionalExpression\":\n  \t            switch (parent.type) {\n  \t                case \"UnaryExpression\":\n  \t                case \"SpreadElement\":\n  \t                case \"SpreadProperty\":\n  \t                case \"BinaryExpression\":\n  \t                case \"LogicalExpression\":\n  \t                    return true;\n  \t                case \"CallExpression\":\n  \t                case \"NewExpression\":\n  \t                    return name === \"callee\" && parent.callee === node;\n  \t                case \"ConditionalExpression\":\n  \t                    return name === \"test\" && parent.test === node;\n  \t                case \"MemberExpression\":\n  \t                    return name === \"object\" && parent.object === node;\n  \t                default:\n  \t                    return false;\n  \t            }\n  \t        case \"ArrowFunctionExpression\":\n  \t            if (n.CallExpression.check(parent) &&\n  \t                name === \"callee\" &&\n  \t                parent.callee === node) {\n  \t                return true;\n  \t            }\n  \t            if (n.MemberExpression.check(parent) &&\n  \t                name === \"object\" &&\n  \t                parent.object === node) {\n  \t                return true;\n  \t            }\n  \t            if (n.TSAsExpression &&\n  \t                n.TSAsExpression.check(parent) &&\n  \t                name === \"expression\" &&\n  \t                parent.expression === node) {\n  \t                return true;\n  \t            }\n  \t            return isBinary(parent);\n  \t        case \"ObjectExpression\":\n  \t            if (parent.type === \"ArrowFunctionExpression\" &&\n  \t                name === \"body\" &&\n  \t                parent.body === node) {\n  \t                return true;\n  \t            }\n  \t            break;\n  \t        case \"TSAsExpression\":\n  \t            if (parent.type === \"ArrowFunctionExpression\" &&\n  \t                name === \"body\" &&\n  \t                parent.body === node &&\n  \t                node.expression.type === \"ObjectExpression\") {\n  \t                return true;\n  \t            }\n  \t            break;\n  \t        case \"CallExpression\":\n  \t            if (name === \"declaration\" &&\n  \t                n.ExportDefaultDeclaration.check(parent) &&\n  \t                n.FunctionExpression.check(node.callee)) {\n  \t                return true;\n  \t            }\n  \t    }\n  \t    if (parent.type === \"NewExpression\" &&\n  \t        name === \"callee\" &&\n  \t        parent.callee === node) {\n  \t        return containsCallExpression(node);\n  \t    }\n  \t    if (assumeExpressionContext !== true &&\n  \t        !this.canBeFirstInStatement() &&\n  \t        this.firstInStatement()) {\n  \t        return true;\n  \t    }\n  \t    return false;\n  \t};\n  \tfunction isBinary(node) {\n  \t    return n.BinaryExpression.check(node) || n.LogicalExpression.check(node);\n  \t}\n  \tfunction containsCallExpression(node) {\n  \t    if (n.CallExpression.check(node)) {\n  \t        return true;\n  \t    }\n  \t    if (isArray.check(node)) {\n  \t        return node.some(containsCallExpression);\n  \t    }\n  \t    if (n.Node.check(node)) {\n  \t        return types.someField(node, function (_name, child) {\n  \t            return containsCallExpression(child);\n  \t        });\n  \t    }\n  \t    return false;\n  \t}\n  \tFPp.canBeFirstInStatement = function () {\n  \t    var node = this.getNode();\n  \t    if (n.FunctionExpression.check(node)) {\n  \t        return false;\n  \t    }\n  \t    if (n.ObjectExpression.check(node)) {\n  \t        return false;\n  \t    }\n  \t    if (n.ClassExpression.check(node)) {\n  \t        return false;\n  \t    }\n  \t    return true;\n  \t};\n  \tFPp.firstInStatement = function () {\n  \t    var s = this.stack;\n  \t    var parentName, parent;\n  \t    var childName, child;\n  \t    for (var i = s.length - 1; i >= 0; i -= 2) {\n  \t        if (n.Node.check(s[i])) {\n  \t            childName = parentName;\n  \t            child = parent;\n  \t            parentName = s[i - 1];\n  \t            parent = s[i];\n  \t        }\n  \t        if (!parent || !child) {\n  \t            continue;\n  \t        }\n  \t        if (n.BlockStatement.check(parent) &&\n  \t            parentName === \"body\" &&\n  \t            childName === 0) {\n  \t            (0, tiny_invariant_1.default)(parent.body[0] === child);\n  \t            return true;\n  \t        }\n  \t        if (n.ExpressionStatement.check(parent) && childName === \"expression\") {\n  \t            (0, tiny_invariant_1.default)(parent.expression === child);\n  \t            return true;\n  \t        }\n  \t        if (n.AssignmentExpression.check(parent) && childName === \"left\") {\n  \t            (0, tiny_invariant_1.default)(parent.left === child);\n  \t            return true;\n  \t        }\n  \t        if (n.ArrowFunctionExpression.check(parent) && childName === \"body\") {\n  \t            (0, tiny_invariant_1.default)(parent.body === child);\n  \t            return true;\n  \t        }\n  \t        // s[i + 1] and s[i + 2] represent the array between the parent\n  \t        // SequenceExpression node and its child nodes\n  \t        if (n.SequenceExpression.check(parent) &&\n  \t            s[i + 1] === \"expressions\" &&\n  \t            childName === 0) {\n  \t            (0, tiny_invariant_1.default)(parent.expressions[0] === child);\n  \t            continue;\n  \t        }\n  \t        if (n.CallExpression.check(parent) && childName === \"callee\") {\n  \t            (0, tiny_invariant_1.default)(parent.callee === child);\n  \t            continue;\n  \t        }\n  \t        if (n.MemberExpression.check(parent) && childName === \"object\") {\n  \t            (0, tiny_invariant_1.default)(parent.object === child);\n  \t            continue;\n  \t        }\n  \t        if (n.ConditionalExpression.check(parent) && childName === \"test\") {\n  \t            (0, tiny_invariant_1.default)(parent.test === child);\n  \t            continue;\n  \t        }\n  \t        if (isBinary(parent) && childName === \"left\") {\n  \t            (0, tiny_invariant_1.default)(parent.left === child);\n  \t            continue;\n  \t        }\n  \t        if (n.UnaryExpression.check(parent) &&\n  \t            !parent.prefix &&\n  \t            childName === \"argument\") {\n  \t            (0, tiny_invariant_1.default)(parent.argument === child);\n  \t            continue;\n  \t        }\n  \t        return false;\n  \t    }\n  \t    return true;\n  \t};\n  \tfastPath.default = FastPath;\n  \treturn fastPath;\n  }\n\n  var patcher = {};\n\n  var hasRequiredPatcher;\n\n  function requirePatcher () {\n  \tif (hasRequiredPatcher) return patcher;\n  \thasRequiredPatcher = 1;\n  \tObject.defineProperty(patcher, \"__esModule\", { value: true });\n  \tpatcher.getReprinter = patcher.Patcher = void 0;\n  \tvar tslib_1 = require$$0;\n  \tvar tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  \tvar linesModule = tslib_1.__importStar(requireLines());\n  \tvar types = tslib_1.__importStar(requireMain());\n  \tvar Printable = types.namedTypes.Printable;\n  \tvar Expression = types.namedTypes.Expression;\n  \tvar ReturnStatement = types.namedTypes.ReturnStatement;\n  \tvar SourceLocation = types.namedTypes.SourceLocation;\n  \tvar util_1 = util;\n  \tvar fast_path_1 = tslib_1.__importDefault(requireFastPath());\n  \tvar isObject = types.builtInTypes.object;\n  \tvar isArray = types.builtInTypes.array;\n  \tvar isString = types.builtInTypes.string;\n  \tvar riskyAdjoiningCharExp = /[0-9a-z_$]/i;\n  \tvar Patcher = function Patcher(lines) {\n  \t    (0, tiny_invariant_1.default)(this instanceof Patcher);\n  \t    (0, tiny_invariant_1.default)(lines instanceof linesModule.Lines);\n  \t    var self = this, replacements = [];\n  \t    self.replace = function (loc, lines) {\n  \t        if (isString.check(lines))\n  \t            lines = linesModule.fromString(lines);\n  \t        replacements.push({\n  \t            lines: lines,\n  \t            start: loc.start,\n  \t            end: loc.end,\n  \t        });\n  \t    };\n  \t    self.get = function (loc) {\n  \t        // If no location is provided, return the complete Lines object.\n  \t        loc = loc || {\n  \t            start: { line: 1, column: 0 },\n  \t            end: { line: lines.length, column: lines.getLineLength(lines.length) },\n  \t        };\n  \t        var sliceFrom = loc.start, toConcat = [];\n  \t        function pushSlice(from, to) {\n  \t            (0, tiny_invariant_1.default)((0, util_1.comparePos)(from, to) <= 0);\n  \t            toConcat.push(lines.slice(from, to));\n  \t        }\n  \t        replacements\n  \t            .sort(function (a, b) { return (0, util_1.comparePos)(a.start, b.start); })\n  \t            .forEach(function (rep) {\n  \t            if ((0, util_1.comparePos)(sliceFrom, rep.start) > 0) ;\n  \t            else {\n  \t                pushSlice(sliceFrom, rep.start);\n  \t                toConcat.push(rep.lines);\n  \t                sliceFrom = rep.end;\n  \t            }\n  \t        });\n  \t        pushSlice(sliceFrom, loc.end);\n  \t        return linesModule.concat(toConcat);\n  \t    };\n  \t};\n  \tpatcher.Patcher = Patcher;\n  \tvar Pp = Patcher.prototype;\n  \tPp.tryToReprintComments = function (newNode, oldNode, print) {\n  \t    var patcher = this;\n  \t    if (!newNode.comments && !oldNode.comments) {\n  \t        // We were (vacuously) able to reprint all the comments!\n  \t        return true;\n  \t    }\n  \t    var newPath = fast_path_1.default.from(newNode);\n  \t    var oldPath = fast_path_1.default.from(oldNode);\n  \t    newPath.stack.push(\"comments\", getSurroundingComments(newNode));\n  \t    oldPath.stack.push(\"comments\", getSurroundingComments(oldNode));\n  \t    var reprints = [];\n  \t    var ableToReprintComments = findArrayReprints(newPath, oldPath, reprints);\n  \t    // No need to pop anything from newPath.stack or oldPath.stack, since\n  \t    // newPath and oldPath are fresh local variables.\n  \t    if (ableToReprintComments && reprints.length > 0) {\n  \t        reprints.forEach(function (reprint) {\n  \t            var oldComment = reprint.oldPath.getValue();\n  \t            (0, tiny_invariant_1.default)(oldComment.leading || oldComment.trailing);\n  \t            patcher.replace(oldComment.loc, \n  \t            // Comments can't have .comments, so it doesn't matter whether we\n  \t            // print with comments or without.\n  \t            print(reprint.newPath).indentTail(oldComment.loc.indent));\n  \t        });\n  \t    }\n  \t    return ableToReprintComments;\n  \t};\n  \t// Get all comments that are either leading or trailing, ignoring any\n  \t// comments that occur inside node.loc. Returns an empty array for nodes\n  \t// with no leading or trailing comments.\n  \tfunction getSurroundingComments(node) {\n  \t    var result = [];\n  \t    if (node.comments && node.comments.length > 0) {\n  \t        node.comments.forEach(function (comment) {\n  \t            if (comment.leading || comment.trailing) {\n  \t                result.push(comment);\n  \t            }\n  \t        });\n  \t    }\n  \t    return result;\n  \t}\n  \tPp.deleteComments = function (node) {\n  \t    if (!node.comments) {\n  \t        return;\n  \t    }\n  \t    var patcher = this;\n  \t    node.comments.forEach(function (comment) {\n  \t        if (comment.leading) {\n  \t            // Delete leading comments along with any trailing whitespace they\n  \t            // might have.\n  \t            patcher.replace({\n  \t                start: comment.loc.start,\n  \t                end: node.loc.lines.skipSpaces(comment.loc.end, false, false),\n  \t            }, \"\");\n  \t        }\n  \t        else if (comment.trailing) {\n  \t            // Delete trailing comments along with any leading whitespace they\n  \t            // might have.\n  \t            patcher.replace({\n  \t                start: node.loc.lines.skipSpaces(comment.loc.start, true, false),\n  \t                end: comment.loc.end,\n  \t            }, \"\");\n  \t        }\n  \t    });\n  \t};\n  \tfunction getReprinter(path) {\n  \t    (0, tiny_invariant_1.default)(path instanceof fast_path_1.default);\n  \t    // Make sure that this path refers specifically to a Node, rather than\n  \t    // some non-Node subproperty of a Node.\n  \t    var node = path.getValue();\n  \t    if (!Printable.check(node))\n  \t        return;\n  \t    var orig = node.original;\n  \t    var origLoc = orig && orig.loc;\n  \t    var lines = origLoc && origLoc.lines;\n  \t    var reprints = [];\n  \t    if (!lines || !findReprints(path, reprints))\n  \t        return;\n  \t    return function (print) {\n  \t        var patcher = new Patcher(lines);\n  \t        reprints.forEach(function (reprint) {\n  \t            var newNode = reprint.newPath.getValue();\n  \t            var oldNode = reprint.oldPath.getValue();\n  \t            SourceLocation.assert(oldNode.loc, true);\n  \t            var needToPrintNewPathWithComments = !patcher.tryToReprintComments(newNode, oldNode, print);\n  \t            if (needToPrintNewPathWithComments) {\n  \t                // Since we were not able to preserve all leading/trailing\n  \t                // comments, we delete oldNode's comments, print newPath with\n  \t                // comments, and then patch the resulting lines where oldNode used\n  \t                // to be.\n  \t                patcher.deleteComments(oldNode);\n  \t            }\n  \t            var newLines = print(reprint.newPath, {\n  \t                includeComments: needToPrintNewPathWithComments,\n  \t                // If the oldNode we're replacing already had parentheses, we may\n  \t                // not need to print the new node with any extra parentheses,\n  \t                // because the existing parentheses will suffice. However, if the\n  \t                // newNode has a different type than the oldNode, let the printer\n  \t                // decide if reprint.newPath needs parentheses, as usual.\n  \t                avoidRootParens: oldNode.type === newNode.type && reprint.oldPath.hasParens(),\n  \t            }).indentTail(oldNode.loc.indent);\n  \t            var nls = needsLeadingSpace(lines, oldNode.loc, newLines);\n  \t            var nts = needsTrailingSpace(lines, oldNode.loc, newLines);\n  \t            // If we try to replace the argument of a ReturnStatement like\n  \t            // return\"asdf\" with e.g. a literal null expression, we run the risk\n  \t            // of ending up with returnnull, so we need to add an extra leading\n  \t            // space in situations where that might happen. Likewise for\n  \t            // \"asdf\"in obj. See #170.\n  \t            if (nls || nts) {\n  \t                var newParts = [];\n  \t                nls && newParts.push(\" \");\n  \t                newParts.push(newLines);\n  \t                nts && newParts.push(\" \");\n  \t                newLines = linesModule.concat(newParts);\n  \t            }\n  \t            patcher.replace(oldNode.loc, newLines);\n  \t        });\n  \t        // Recall that origLoc is the .loc of an ancestor node that is\n  \t        // guaranteed to contain all the reprinted nodes and comments.\n  \t        var patchedLines = patcher.get(origLoc).indentTail(-orig.loc.indent);\n  \t        if (path.needsParens()) {\n  \t            return linesModule.concat([\"(\", patchedLines, \")\"]);\n  \t        }\n  \t        return patchedLines;\n  \t    };\n  \t}\n  \tpatcher.getReprinter = getReprinter;\n  \t// If the last character before oldLoc and the first character of newLines\n  \t// are both identifier characters, they must be separated by a space,\n  \t// otherwise they will most likely get fused together into a single token.\n  \tfunction needsLeadingSpace(oldLines, oldLoc, newLines) {\n  \t    var posBeforeOldLoc = (0, util_1.copyPos)(oldLoc.start);\n  \t    // The character just before the location occupied by oldNode.\n  \t    var charBeforeOldLoc = oldLines.prevPos(posBeforeOldLoc) && oldLines.charAt(posBeforeOldLoc);\n  \t    // First character of the reprinted node.\n  \t    var newFirstChar = newLines.charAt(newLines.firstPos());\n  \t    return (charBeforeOldLoc &&\n  \t        riskyAdjoiningCharExp.test(charBeforeOldLoc) &&\n  \t        newFirstChar &&\n  \t        riskyAdjoiningCharExp.test(newFirstChar));\n  \t}\n  \t// If the last character of newLines and the first character after oldLoc\n  \t// are both identifier characters, they must be separated by a space,\n  \t// otherwise they will most likely get fused together into a single token.\n  \tfunction needsTrailingSpace(oldLines, oldLoc, newLines) {\n  \t    // The character just after the location occupied by oldNode.\n  \t    var charAfterOldLoc = oldLines.charAt(oldLoc.end);\n  \t    var newLastPos = newLines.lastPos();\n  \t    // Last character of the reprinted node.\n  \t    var newLastChar = newLines.prevPos(newLastPos) && newLines.charAt(newLastPos);\n  \t    return (newLastChar &&\n  \t        riskyAdjoiningCharExp.test(newLastChar) &&\n  \t        charAfterOldLoc &&\n  \t        riskyAdjoiningCharExp.test(charAfterOldLoc));\n  \t}\n  \tfunction findReprints(newPath, reprints) {\n  \t    var newNode = newPath.getValue();\n  \t    Printable.assert(newNode);\n  \t    var oldNode = newNode.original;\n  \t    Printable.assert(oldNode);\n  \t    (0, tiny_invariant_1.default)(reprints.length === 0);\n  \t    if (newNode.type !== oldNode.type) {\n  \t        return false;\n  \t    }\n  \t    var oldPath = new fast_path_1.default(oldNode);\n  \t    var canReprint = findChildReprints(newPath, oldPath, reprints);\n  \t    if (!canReprint) {\n  \t        // Make absolutely sure the calling code does not attempt to reprint\n  \t        // any nodes.\n  \t        reprints.length = 0;\n  \t    }\n  \t    return canReprint;\n  \t}\n  \tfunction findAnyReprints(newPath, oldPath, reprints) {\n  \t    var newNode = newPath.getValue();\n  \t    var oldNode = oldPath.getValue();\n  \t    if (newNode === oldNode)\n  \t        return true;\n  \t    if (isArray.check(newNode))\n  \t        return findArrayReprints(newPath, oldPath, reprints);\n  \t    if (isObject.check(newNode))\n  \t        return findObjectReprints(newPath, oldPath, reprints);\n  \t    return false;\n  \t}\n  \tfunction findArrayReprints(newPath, oldPath, reprints) {\n  \t    var newNode = newPath.getValue();\n  \t    var oldNode = oldPath.getValue();\n  \t    if (newNode === oldNode ||\n  \t        newPath.valueIsDuplicate() ||\n  \t        oldPath.valueIsDuplicate()) {\n  \t        return true;\n  \t    }\n  \t    isArray.assert(newNode);\n  \t    var len = newNode.length;\n  \t    if (!(isArray.check(oldNode) && oldNode.length === len))\n  \t        return false;\n  \t    for (var i = 0; i < len; ++i) {\n  \t        newPath.stack.push(i, newNode[i]);\n  \t        oldPath.stack.push(i, oldNode[i]);\n  \t        var canReprint = findAnyReprints(newPath, oldPath, reprints);\n  \t        newPath.stack.length -= 2;\n  \t        oldPath.stack.length -= 2;\n  \t        if (!canReprint) {\n  \t            return false;\n  \t        }\n  \t    }\n  \t    return true;\n  \t}\n  \tfunction findObjectReprints(newPath, oldPath, reprints) {\n  \t    var newNode = newPath.getValue();\n  \t    isObject.assert(newNode);\n  \t    if (newNode.original === null) {\n  \t        // If newNode.original node was set to null, reprint the node.\n  \t        return false;\n  \t    }\n  \t    var oldNode = oldPath.getValue();\n  \t    if (!isObject.check(oldNode))\n  \t        return false;\n  \t    if (newNode === oldNode ||\n  \t        newPath.valueIsDuplicate() ||\n  \t        oldPath.valueIsDuplicate()) {\n  \t        return true;\n  \t    }\n  \t    if (Printable.check(newNode)) {\n  \t        if (!Printable.check(oldNode)) {\n  \t            return false;\n  \t        }\n  \t        var newParentNode = newPath.getParentNode();\n  \t        var oldParentNode = oldPath.getParentNode();\n  \t        if (oldParentNode !== null &&\n  \t            oldParentNode.type === \"FunctionTypeAnnotation\" &&\n  \t            newParentNode !== null &&\n  \t            newParentNode.type === \"FunctionTypeAnnotation\") {\n  \t            var oldNeedsParens = oldParentNode.params.length !== 1 || !!oldParentNode.params[0].name;\n  \t            var newNeedParens = newParentNode.params.length !== 1 || !!newParentNode.params[0].name;\n  \t            if (!oldNeedsParens && newNeedParens) {\n  \t                return false;\n  \t            }\n  \t        }\n  \t        // Here we need to decide whether the reprinted code for newNode is\n  \t        // appropriate for patching into the location of oldNode.\n  \t        if (newNode.type === oldNode.type) {\n  \t            var childReprints = [];\n  \t            if (findChildReprints(newPath, oldPath, childReprints)) {\n  \t                reprints.push.apply(reprints, childReprints);\n  \t            }\n  \t            else if (oldNode.loc) {\n  \t                // If we have no .loc information for oldNode, then we won't be\n  \t                // able to reprint it.\n  \t                reprints.push({\n  \t                    oldPath: oldPath.copy(),\n  \t                    newPath: newPath.copy(),\n  \t                });\n  \t            }\n  \t            else {\n  \t                return false;\n  \t            }\n  \t            return true;\n  \t        }\n  \t        if (Expression.check(newNode) &&\n  \t            Expression.check(oldNode) &&\n  \t            // If we have no .loc information for oldNode, then we won't be\n  \t            // able to reprint it.\n  \t            oldNode.loc) {\n  \t            // If both nodes are subtypes of Expression, then we should be able\n  \t            // to fill the location occupied by the old node with code printed\n  \t            // for the new node with no ill consequences.\n  \t            reprints.push({\n  \t                oldPath: oldPath.copy(),\n  \t                newPath: newPath.copy(),\n  \t            });\n  \t            return true;\n  \t        }\n  \t        // The nodes have different types, and at least one of the types is\n  \t        // not a subtype of the Expression type, so we cannot safely assume\n  \t        // the nodes are syntactically interchangeable.\n  \t        return false;\n  \t    }\n  \t    return findChildReprints(newPath, oldPath, reprints);\n  \t}\n  \tfunction findChildReprints(newPath, oldPath, reprints) {\n  \t    var newNode = newPath.getValue();\n  \t    var oldNode = oldPath.getValue();\n  \t    isObject.assert(newNode);\n  \t    isObject.assert(oldNode);\n  \t    if (newNode.original === null) {\n  \t        // If newNode.original node was set to null, reprint the node.\n  \t        return false;\n  \t    }\n  \t    // If this node needs parentheses and will not be wrapped with\n  \t    // parentheses when reprinted, then return false to skip reprinting and\n  \t    // let it be printed generically.\n  \t    if (newPath.needsParens() && !oldPath.hasParens()) {\n  \t        return false;\n  \t    }\n  \t    var keys = (0, util_1.getUnionOfKeys)(oldNode, newNode);\n  \t    if (oldNode.type === \"File\" || newNode.type === \"File\") {\n  \t        // Don't bother traversing file.tokens, an often very large array\n  \t        // returned by Babylon, and useless for our purposes.\n  \t        delete keys.tokens;\n  \t    }\n  \t    // Don't bother traversing .loc objects looking for reprintable nodes.\n  \t    delete keys.loc;\n  \t    var originalReprintCount = reprints.length;\n  \t    for (var k in keys) {\n  \t        if (k.charAt(0) === \"_\") {\n  \t            // Ignore \"private\" AST properties added by e.g. Babel plugins and\n  \t            // parsers like Babylon.\n  \t            continue;\n  \t        }\n  \t        newPath.stack.push(k, types.getFieldValue(newNode, k));\n  \t        oldPath.stack.push(k, types.getFieldValue(oldNode, k));\n  \t        var canReprint = findAnyReprints(newPath, oldPath, reprints);\n  \t        newPath.stack.length -= 2;\n  \t        oldPath.stack.length -= 2;\n  \t        if (!canReprint) {\n  \t            return false;\n  \t        }\n  \t    }\n  \t    // Return statements might end up running into ASI issues due to\n  \t    // comments inserted deep within the tree, so reprint them if anything\n  \t    // changed within them.\n  \t    if (ReturnStatement.check(newPath.getNode()) &&\n  \t        reprints.length > originalReprintCount) {\n  \t        return false;\n  \t    }\n  \t    return true;\n  \t}\n  \treturn patcher;\n  }\n\n  var hasRequiredPrinter;\n\n  function requirePrinter () {\n  \tif (hasRequiredPrinter) return printer;\n  \thasRequiredPrinter = 1;\n  \tObject.defineProperty(printer, \"__esModule\", { value: true });\n  \tprinter.Printer = void 0;\n  \tvar tslib_1 = require$$0;\n  \tvar tiny_invariant_1 = tslib_1.__importDefault(requireTinyInvariant_cjs());\n  \tvar types = tslib_1.__importStar(requireMain());\n  \tvar comments_1 = requireComments();\n  \tvar fast_path_1 = tslib_1.__importDefault(requireFastPath());\n  \tvar lines_1 = requireLines();\n  \tvar options_1 = requireOptions();\n  \tvar patcher_1 = requirePatcher();\n  \tvar util$1 = tslib_1.__importStar(util);\n  \tvar namedTypes = types.namedTypes;\n  \tvar isString = types.builtInTypes.string;\n  \tvar isObject = types.builtInTypes.object;\n  \tvar PrintResult = function PrintResult(code, sourceMap) {\n  \t    (0, tiny_invariant_1.default)(this instanceof PrintResult);\n  \t    isString.assert(code);\n  \t    this.code = code;\n  \t    if (sourceMap) {\n  \t        isObject.assert(sourceMap);\n  \t        this.map = sourceMap;\n  \t    }\n  \t};\n  \tvar PRp = PrintResult.prototype;\n  \tvar warnedAboutToString = false;\n  \tPRp.toString = function () {\n  \t    if (!warnedAboutToString) {\n  \t        console.warn(\"Deprecation warning: recast.print now returns an object with \" +\n  \t            \"a .code property. You appear to be treating the object as a \" +\n  \t            \"string, which might still work but is strongly discouraged.\");\n  \t        warnedAboutToString = true;\n  \t    }\n  \t    return this.code;\n  \t};\n  \tvar emptyPrintResult = new PrintResult(\"\");\n  \tvar Printer = function Printer(config) {\n  \t    (0, tiny_invariant_1.default)(this instanceof Printer);\n  \t    var explicitTabWidth = config && config.tabWidth;\n  \t    config = (0, options_1.normalize)(config);\n  \t    // It's common for client code to pass the same options into both\n  \t    // recast.parse and recast.print, but the Printer doesn't need (and\n  \t    // can be confused by) config.sourceFileName, so we null it out.\n  \t    config.sourceFileName = null;\n  \t    // Non-destructively modifies options with overrides, and returns a\n  \t    // new print function that uses the modified options.\n  \t    function makePrintFunctionWith(options, overrides) {\n  \t        options = Object.assign({}, options, overrides);\n  \t        return function (path) { return print(path, options); };\n  \t    }\n  \t    function print(path, options) {\n  \t        (0, tiny_invariant_1.default)(path instanceof fast_path_1.default);\n  \t        options = options || {};\n  \t        if (options.includeComments) {\n  \t            return (0, comments_1.printComments)(path, makePrintFunctionWith(options, {\n  \t                includeComments: false,\n  \t            }));\n  \t        }\n  \t        var oldTabWidth = config.tabWidth;\n  \t        if (!explicitTabWidth) {\n  \t            var loc = path.getNode().loc;\n  \t            if (loc && loc.lines && loc.lines.guessTabWidth) {\n  \t                config.tabWidth = loc.lines.guessTabWidth();\n  \t            }\n  \t        }\n  \t        var reprinter = (0, patcher_1.getReprinter)(path);\n  \t        var lines = reprinter\n  \t            ? // Since the print function that we pass to the reprinter will\n  \t                // be used to print \"new\" nodes, it's tempting to think we\n  \t                // should pass printRootGenerically instead of print, to avoid\n  \t                // calling maybeReprint again, but that would be a mistake\n  \t                // because the new nodes might not be entirely new, but merely\n  \t                // moved from elsewhere in the AST. The print function is the\n  \t                // right choice because it gives us the opportunity to reprint\n  \t                // such nodes using their original source.\n  \t                reprinter(print)\n  \t            : genericPrint(path, config, options, makePrintFunctionWith(options, {\n  \t                includeComments: true,\n  \t                avoidRootParens: false,\n  \t            }));\n  \t        config.tabWidth = oldTabWidth;\n  \t        return lines;\n  \t    }\n  \t    this.print = function (ast) {\n  \t        if (!ast) {\n  \t            return emptyPrintResult;\n  \t        }\n  \t        var lines = print(fast_path_1.default.from(ast), {\n  \t            includeComments: true,\n  \t            avoidRootParens: false,\n  \t        });\n  \t        return new PrintResult(lines.toString(config), util$1.composeSourceMaps(config.inputSourceMap, lines.getSourceMap(config.sourceMapName, config.sourceRoot)));\n  \t    };\n  \t    this.printGenerically = function (ast) {\n  \t        if (!ast) {\n  \t            return emptyPrintResult;\n  \t        }\n  \t        // Print the entire AST generically.\n  \t        function printGenerically(path) {\n  \t            return (0, comments_1.printComments)(path, function (path) {\n  \t                return genericPrint(path, config, {\n  \t                    includeComments: true,\n  \t                    avoidRootParens: false,\n  \t                }, printGenerically);\n  \t            });\n  \t        }\n  \t        var path = fast_path_1.default.from(ast);\n  \t        var oldReuseWhitespace = config.reuseWhitespace;\n  \t        // Do not reuse whitespace (or anything else, for that matter)\n  \t        // when printing generically.\n  \t        config.reuseWhitespace = false;\n  \t        // TODO Allow printing of comments?\n  \t        var pr = new PrintResult(printGenerically(path).toString(config));\n  \t        config.reuseWhitespace = oldReuseWhitespace;\n  \t        return pr;\n  \t    };\n  \t};\n  \tprinter.Printer = Printer;\n  \tfunction genericPrint(path, config, options, printPath) {\n  \t    (0, tiny_invariant_1.default)(path instanceof fast_path_1.default);\n  \t    var node = path.getValue();\n  \t    var parts = [];\n  \t    var linesWithoutParens = genericPrintNoParens(path, config, printPath);\n  \t    if (!node || linesWithoutParens.isEmpty()) {\n  \t        return linesWithoutParens;\n  \t    }\n  \t    var shouldAddParens = false;\n  \t    var decoratorsLines = printDecorators(path, printPath);\n  \t    if (decoratorsLines.isEmpty()) {\n  \t        // Nodes with decorators can't have parentheses, so we can avoid\n  \t        // computing path.needsParens() except in this case.\n  \t        if (!options.avoidRootParens) {\n  \t            shouldAddParens = path.needsParens();\n  \t        }\n  \t    }\n  \t    else {\n  \t        parts.push(decoratorsLines);\n  \t    }\n  \t    if (shouldAddParens) {\n  \t        parts.unshift(\"(\");\n  \t    }\n  \t    parts.push(linesWithoutParens);\n  \t    if (shouldAddParens) {\n  \t        parts.push(\")\");\n  \t    }\n  \t    return (0, lines_1.concat)(parts);\n  \t}\n  \t// Note that the `options` parameter of this function is what other\n  \t// functions in this file call the `config` object (that is, the\n  \t// configuration object originally passed into the Printer constructor).\n  \t// Its properties are documented in lib/options.js.\n  \tfunction genericPrintNoParens(path, options, print) {\n  \t    var n = path.getValue();\n  \t    if (!n) {\n  \t        return (0, lines_1.fromString)(\"\");\n  \t    }\n  \t    if (typeof n === \"string\") {\n  \t        return (0, lines_1.fromString)(n, options);\n  \t    }\n  \t    namedTypes.Printable.assert(n);\n  \t    var parts = [];\n  \t    switch (n.type) {\n  \t        case \"File\":\n  \t            return path.call(print, \"program\");\n  \t        case \"Program\":\n  \t            // Babel 6\n  \t            if (n.directives) {\n  \t                path.each(function (childPath) {\n  \t                    parts.push(print(childPath), \";\\n\");\n  \t                }, \"directives\");\n  \t            }\n  \t            if (n.interpreter) {\n  \t                parts.push(path.call(print, \"interpreter\"));\n  \t            }\n  \t            parts.push(path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"Noop\": // Babel extension.\n  \t        case \"EmptyStatement\":\n  \t            return (0, lines_1.fromString)(\"\");\n  \t        case \"ExpressionStatement\":\n  \t            return (0, lines_1.concat)([path.call(print, \"expression\"), \";\"]);\n  \t        case \"ParenthesizedExpression\": // Babel extension.\n  \t            return (0, lines_1.concat)([\"(\", path.call(print, \"expression\"), \")\"]);\n  \t        case \"BinaryExpression\":\n  \t        case \"LogicalExpression\":\n  \t        case \"AssignmentExpression\":\n  \t            return (0, lines_1.fromString)(\" \").join([\n  \t                path.call(print, \"left\"),\n  \t                n.operator,\n  \t                path.call(print, \"right\"),\n  \t            ]);\n  \t        case \"AssignmentPattern\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"left\"),\n  \t                \" = \",\n  \t                path.call(print, \"right\"),\n  \t            ]);\n  \t        case \"MemberExpression\":\n  \t        case \"OptionalMemberExpression\": {\n  \t            parts.push(path.call(print, \"object\"));\n  \t            var property = path.call(print, \"property\");\n  \t            // Like n.optional, except with defaults applied, so optional\n  \t            // defaults to true for OptionalMemberExpression nodes.\n  \t            var optional = types.getFieldValue(n, \"optional\");\n  \t            if (n.computed) {\n  \t                parts.push(optional ? \"?.[\" : \"[\", property, \"]\");\n  \t            }\n  \t            else {\n  \t                parts.push(optional ? \"?.\" : \".\", property);\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"ChainExpression\":\n  \t            return path.call(print, \"expression\");\n  \t        case \"MetaProperty\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"meta\"),\n  \t                \".\",\n  \t                path.call(print, \"property\"),\n  \t            ]);\n  \t        case \"BindExpression\":\n  \t            if (n.object) {\n  \t                parts.push(path.call(print, \"object\"));\n  \t            }\n  \t            parts.push(\"::\", path.call(print, \"callee\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"Path\":\n  \t            return (0, lines_1.fromString)(\".\").join(n.body);\n  \t        case \"Identifier\":\n  \t            return (0, lines_1.concat)([\n  \t                (0, lines_1.fromString)(n.name, options),\n  \t                n.optional ? \"?\" : \"\",\n  \t                path.call(print, \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"SpreadElement\":\n  \t        case \"SpreadElementPattern\":\n  \t        case \"RestProperty\": // Babel 6 for ObjectPattern\n  \t        case \"SpreadProperty\":\n  \t        case \"SpreadPropertyPattern\":\n  \t        case \"ObjectTypeSpreadProperty\":\n  \t        case \"RestElement\":\n  \t            return (0, lines_1.concat)([\n  \t                \"...\",\n  \t                path.call(print, \"argument\"),\n  \t                path.call(print, \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"FunctionDeclaration\":\n  \t        case \"FunctionExpression\":\n  \t        case \"TSDeclareFunction\":\n  \t            if (n.declare) {\n  \t                parts.push(\"declare \");\n  \t            }\n  \t            if (n.async) {\n  \t                parts.push(\"async \");\n  \t            }\n  \t            parts.push(\"function\");\n  \t            if (n.generator)\n  \t                parts.push(\"*\");\n  \t            if (n.id) {\n  \t                parts.push(\" \", path.call(print, \"id\"), path.call(print, \"typeParameters\"));\n  \t            }\n  \t            else {\n  \t                if (n.typeParameters) {\n  \t                    parts.push(path.call(print, \"typeParameters\"));\n  \t                }\n  \t            }\n  \t            parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n  \t            if (n.body) {\n  \t                parts.push(\" \", path.call(print, \"body\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ArrowFunctionExpression\":\n  \t            if (n.async) {\n  \t                parts.push(\"async \");\n  \t            }\n  \t            if (n.typeParameters) {\n  \t                parts.push(path.call(print, \"typeParameters\"));\n  \t            }\n  \t            if (!options.arrowParensAlways &&\n  \t                n.params.length === 1 &&\n  \t                !n.rest &&\n  \t                n.params[0].type === \"Identifier\" &&\n  \t                !n.params[0].typeAnnotation &&\n  \t                !n.returnType) {\n  \t                parts.push(path.call(print, \"params\", 0));\n  \t            }\n  \t            else {\n  \t                parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n  \t            }\n  \t            parts.push(\" => \", path.call(print, \"body\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"MethodDefinition\":\n  \t            return printMethod(path, options, print);\n  \t        case \"YieldExpression\":\n  \t            parts.push(\"yield\");\n  \t            if (n.delegate)\n  \t                parts.push(\"*\");\n  \t            if (n.argument)\n  \t                parts.push(\" \", path.call(print, \"argument\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"AwaitExpression\":\n  \t            parts.push(\"await\");\n  \t            if (n.all)\n  \t                parts.push(\"*\");\n  \t            if (n.argument)\n  \t                parts.push(\" \", path.call(print, \"argument\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ModuleExpression\":\n  \t            return (0, lines_1.concat)([\n  \t                \"module {\\n\",\n  \t                path.call(print, \"body\").indent(options.tabWidth),\n  \t                \"\\n}\",\n  \t            ]);\n  \t        case \"ModuleDeclaration\":\n  \t            parts.push(\"module\", path.call(print, \"id\"));\n  \t            if (n.source) {\n  \t                (0, tiny_invariant_1.default)(!n.body);\n  \t                parts.push(\"from\", path.call(print, \"source\"));\n  \t            }\n  \t            else {\n  \t                parts.push(path.call(print, \"body\"));\n  \t            }\n  \t            return (0, lines_1.fromString)(\" \").join(parts);\n  \t        case \"ImportSpecifier\":\n  \t            if (n.importKind && n.importKind !== \"value\") {\n  \t                parts.push(n.importKind + \" \");\n  \t            }\n  \t            if (n.imported) {\n  \t                parts.push(path.call(print, \"imported\"));\n  \t                if (n.local && n.local.name !== n.imported.name) {\n  \t                    parts.push(\" as \", path.call(print, \"local\"));\n  \t                }\n  \t            }\n  \t            else if (n.id) {\n  \t                parts.push(path.call(print, \"id\"));\n  \t                if (n.name) {\n  \t                    parts.push(\" as \", path.call(print, \"name\"));\n  \t                }\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ExportSpecifier\":\n  \t            if (n.exportKind && n.exportKind !== \"value\") {\n  \t                parts.push(n.exportKind + \" \");\n  \t            }\n  \t            if (n.local) {\n  \t                parts.push(path.call(print, \"local\"));\n  \t                if (n.exported && n.exported.name !== n.local.name) {\n  \t                    parts.push(\" as \", path.call(print, \"exported\"));\n  \t                }\n  \t            }\n  \t            else if (n.id) {\n  \t                parts.push(path.call(print, \"id\"));\n  \t                if (n.name) {\n  \t                    parts.push(\" as \", path.call(print, \"name\"));\n  \t                }\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ExportBatchSpecifier\":\n  \t            return (0, lines_1.fromString)(\"*\");\n  \t        case \"ImportNamespaceSpecifier\":\n  \t            parts.push(\"* as \");\n  \t            if (n.local) {\n  \t                parts.push(path.call(print, \"local\"));\n  \t            }\n  \t            else if (n.id) {\n  \t                parts.push(path.call(print, \"id\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ImportDefaultSpecifier\":\n  \t            if (n.local) {\n  \t                return path.call(print, \"local\");\n  \t            }\n  \t            return path.call(print, \"id\");\n  \t        case \"TSExportAssignment\":\n  \t            return (0, lines_1.concat)([\"export = \", path.call(print, \"expression\")]);\n  \t        case \"ExportDeclaration\":\n  \t        case \"ExportDefaultDeclaration\":\n  \t        case \"ExportNamedDeclaration\":\n  \t            return printExportDeclaration(path, options, print);\n  \t        case \"ExportAllDeclaration\":\n  \t            parts.push(\"export *\");\n  \t            if (n.exported) {\n  \t                parts.push(\" as \", path.call(print, \"exported\"));\n  \t            }\n  \t            parts.push(\" from \", path.call(print, \"source\"), \";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSNamespaceExportDeclaration\":\n  \t            parts.push(\"export as namespace \", path.call(print, \"id\"));\n  \t            return maybeAddSemicolon((0, lines_1.concat)(parts));\n  \t        case \"ExportNamespaceSpecifier\":\n  \t            return (0, lines_1.concat)([\"* as \", path.call(print, \"exported\")]);\n  \t        case \"ExportDefaultSpecifier\":\n  \t            return path.call(print, \"exported\");\n  \t        case \"Import\":\n  \t            return (0, lines_1.fromString)(\"import\", options);\n  \t        // Recast and ast-types currently support dynamic import(...) using\n  \t        // either this dedicated ImportExpression type or a CallExpression\n  \t        // whose callee has type Import.\n  \t        // https://github.com/benjamn/ast-types/pull/365#issuecomment-605214486\n  \t        case \"ImportExpression\":\n  \t            return (0, lines_1.concat)([\"import(\", path.call(print, \"source\"), \")\"]);\n  \t        case \"ImportDeclaration\": {\n  \t            parts.push(\"import \");\n  \t            if (n.importKind && n.importKind !== \"value\") {\n  \t                parts.push(n.importKind + \" \");\n  \t            }\n  \t            if (n.specifiers && n.specifiers.length > 0) {\n  \t                var unbracedSpecifiers_1 = [];\n  \t                var bracedSpecifiers_1 = [];\n  \t                path.each(function (specifierPath) {\n  \t                    var spec = specifierPath.getValue();\n  \t                    if (spec.type === \"ImportSpecifier\") {\n  \t                        bracedSpecifiers_1.push(print(specifierPath));\n  \t                    }\n  \t                    else if (spec.type === \"ImportDefaultSpecifier\" ||\n  \t                        spec.type === \"ImportNamespaceSpecifier\") {\n  \t                        unbracedSpecifiers_1.push(print(specifierPath));\n  \t                    }\n  \t                }, \"specifiers\");\n  \t                unbracedSpecifiers_1.forEach(function (lines, i) {\n  \t                    if (i > 0) {\n  \t                        parts.push(\", \");\n  \t                    }\n  \t                    parts.push(lines);\n  \t                });\n  \t                if (bracedSpecifiers_1.length > 0) {\n  \t                    var lines = (0, lines_1.fromString)(\", \").join(bracedSpecifiers_1);\n  \t                    if (lines.getLineLength(1) > options.wrapColumn) {\n  \t                        lines = (0, lines_1.concat)([\n  \t                            (0, lines_1.fromString)(\",\\n\").join(bracedSpecifiers_1).indent(options.tabWidth),\n  \t                            \",\",\n  \t                        ]);\n  \t                    }\n  \t                    if (unbracedSpecifiers_1.length > 0) {\n  \t                        parts.push(\", \");\n  \t                    }\n  \t                    if (lines.length > 1) {\n  \t                        parts.push(\"{\\n\", lines, \"\\n}\");\n  \t                    }\n  \t                    else if (options.objectCurlySpacing) {\n  \t                        parts.push(\"{ \", lines, \" }\");\n  \t                    }\n  \t                    else {\n  \t                        parts.push(\"{\", lines, \"}\");\n  \t                    }\n  \t                }\n  \t                parts.push(\" from \");\n  \t            }\n  \t            parts.push(path.call(print, \"source\"), maybePrintImportAssertions(path, options, print), \";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"ImportAttribute\":\n  \t            return (0, lines_1.concat)([path.call(print, \"key\"), \": \", path.call(print, \"value\")]);\n  \t        case \"StaticBlock\":\n  \t            parts.push(\"static \");\n  \t        // Intentionally fall through to BlockStatement below.\n  \t        case \"BlockStatement\": {\n  \t            var naked_1 = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n  \t            if (naked_1.isEmpty()) {\n  \t                if (!n.directives || n.directives.length === 0) {\n  \t                    parts.push(\"{}\");\n  \t                    return (0, lines_1.concat)(parts);\n  \t                }\n  \t            }\n  \t            parts.push(\"{\\n\");\n  \t            // Babel 6\n  \t            if (n.directives) {\n  \t                path.each(function (childPath) {\n  \t                    parts.push(maybeAddSemicolon(print(childPath).indent(options.tabWidth)), n.directives.length > 1 || !naked_1.isEmpty() ? \"\\n\" : \"\");\n  \t                }, \"directives\");\n  \t            }\n  \t            parts.push(naked_1.indent(options.tabWidth));\n  \t            parts.push(\"\\n}\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"ReturnStatement\": {\n  \t            parts.push(\"return\");\n  \t            if (n.argument) {\n  \t                var argLines = path.call(print, \"argument\");\n  \t                if (argLines.startsWithComment() ||\n  \t                    (argLines.length > 1 &&\n  \t                        namedTypes.JSXElement &&\n  \t                        namedTypes.JSXElement.check(n.argument))) {\n  \t                    parts.push(\" (\\n\", argLines.indent(options.tabWidth), \"\\n)\");\n  \t                }\n  \t                else {\n  \t                    parts.push(\" \", argLines);\n  \t                }\n  \t            }\n  \t            parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"CallExpression\":\n  \t        case \"OptionalCallExpression\":\n  \t            parts.push(path.call(print, \"callee\"));\n  \t            if (n.typeParameters) {\n  \t                parts.push(path.call(print, \"typeParameters\"));\n  \t            }\n  \t            if (n.typeArguments) {\n  \t                parts.push(path.call(print, \"typeArguments\"));\n  \t            }\n  \t            // Like n.optional, but defaults to true for OptionalCallExpression\n  \t            // nodes that are missing an n.optional property (unusual),\n  \t            // according to the OptionalCallExpression definition in ast-types.\n  \t            if (types.getFieldValue(n, \"optional\")) {\n  \t                parts.push(\"?.\");\n  \t            }\n  \t            parts.push(printArgumentsList(path, options, print));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"RecordExpression\":\n  \t            parts.push(\"#\");\n  \t        // Intentionally fall through to printing the object literal...\n  \t        case \"ObjectExpression\":\n  \t        case \"ObjectPattern\":\n  \t        case \"ObjectTypeAnnotation\": {\n  \t            var isTypeAnnotation_1 = n.type === \"ObjectTypeAnnotation\";\n  \t            var separator_1 = options.flowObjectCommas\n  \t                ? \",\"\n  \t                : isTypeAnnotation_1\n  \t                    ? \";\"\n  \t                    : \",\";\n  \t            var fields = [];\n  \t            var allowBreak_1 = false;\n  \t            if (isTypeAnnotation_1) {\n  \t                fields.push(\"indexers\", \"callProperties\");\n  \t                if (n.internalSlots != null) {\n  \t                    fields.push(\"internalSlots\");\n  \t                }\n  \t            }\n  \t            fields.push(\"properties\");\n  \t            var len_1 = 0;\n  \t            fields.forEach(function (field) {\n  \t                len_1 += n[field].length;\n  \t            });\n  \t            var oneLine_1 = (isTypeAnnotation_1 && len_1 === 1) || len_1 === 0;\n  \t            var leftBrace = n.exact ? \"{|\" : \"{\";\n  \t            var rightBrace = n.exact ? \"|}\" : \"}\";\n  \t            parts.push(oneLine_1 ? leftBrace : leftBrace + \"\\n\");\n  \t            var leftBraceIndex = parts.length - 1;\n  \t            var i_1 = 0;\n  \t            fields.forEach(function (field) {\n  \t                path.each(function (childPath) {\n  \t                    var lines = print(childPath);\n  \t                    if (!oneLine_1) {\n  \t                        lines = lines.indent(options.tabWidth);\n  \t                    }\n  \t                    var multiLine = !isTypeAnnotation_1 && lines.length > 1;\n  \t                    if (multiLine && allowBreak_1) {\n  \t                        // Similar to the logic for BlockStatement.\n  \t                        parts.push(\"\\n\");\n  \t                    }\n  \t                    parts.push(lines);\n  \t                    if (i_1 < len_1 - 1) {\n  \t                        // Add an extra line break if the previous object property\n  \t                        // had a multi-line value.\n  \t                        parts.push(separator_1 + (multiLine ? \"\\n\\n\" : \"\\n\"));\n  \t                        allowBreak_1 = !multiLine;\n  \t                    }\n  \t                    else if (len_1 !== 1 && isTypeAnnotation_1) {\n  \t                        parts.push(separator_1);\n  \t                    }\n  \t                    else if (!oneLine_1 &&\n  \t                        util$1.isTrailingCommaEnabled(options, \"objects\") &&\n  \t                        childPath.getValue().type !== \"RestElement\") {\n  \t                        parts.push(separator_1);\n  \t                    }\n  \t                    i_1++;\n  \t                }, field);\n  \t            });\n  \t            if (n.inexact) {\n  \t                var line = (0, lines_1.fromString)(\"...\", options);\n  \t                if (oneLine_1) {\n  \t                    if (len_1 > 0) {\n  \t                        parts.push(separator_1, \" \");\n  \t                    }\n  \t                    parts.push(line);\n  \t                }\n  \t                else {\n  \t                    // No trailing separator after ... to maintain parity with prettier.\n  \t                    parts.push(\"\\n\", line.indent(options.tabWidth));\n  \t                }\n  \t            }\n  \t            parts.push(oneLine_1 ? rightBrace : \"\\n\" + rightBrace);\n  \t            if (i_1 !== 0 && oneLine_1 && options.objectCurlySpacing) {\n  \t                parts[leftBraceIndex] = leftBrace + \" \";\n  \t                parts[parts.length - 1] = \" \" + rightBrace;\n  \t            }\n  \t            if (n.typeAnnotation) {\n  \t                parts.push(path.call(print, \"typeAnnotation\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"PropertyPattern\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"key\"),\n  \t                \": \",\n  \t                path.call(print, \"pattern\"),\n  \t            ]);\n  \t        case \"ObjectProperty\": // Babel 6\n  \t        case \"Property\": {\n  \t            // Non-standard AST node type.\n  \t            if (n.method || n.kind === \"get\" || n.kind === \"set\") {\n  \t                return printMethod(path, options, print);\n  \t            }\n  \t            if (n.shorthand && n.value.type === \"AssignmentPattern\") {\n  \t                return path.call(print, \"value\");\n  \t            }\n  \t            var key = path.call(print, \"key\");\n  \t            if (n.computed) {\n  \t                parts.push(\"[\", key, \"]\");\n  \t            }\n  \t            else {\n  \t                parts.push(key);\n  \t            }\n  \t            if (!n.shorthand || n.key.name !== n.value.name) {\n  \t                parts.push(\": \", path.call(print, \"value\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"ClassMethod\": // Babel 6\n  \t        case \"ObjectMethod\": // Babel 6\n  \t        case \"ClassPrivateMethod\":\n  \t        case \"TSDeclareMethod\":\n  \t            return printMethod(path, options, print);\n  \t        case \"PrivateName\":\n  \t            return (0, lines_1.concat)([\"#\", path.call(print, \"id\")]);\n  \t        case \"Decorator\":\n  \t            return (0, lines_1.concat)([\"@\", path.call(print, \"expression\")]);\n  \t        case \"TupleExpression\":\n  \t            parts.push(\"#\");\n  \t        // Intentionally fall through to printing the tuple elements...\n  \t        case \"ArrayExpression\":\n  \t        case \"ArrayPattern\": {\n  \t            var elems = n.elements;\n  \t            var len_2 = elems.length;\n  \t            var printed_1 = path.map(print, \"elements\");\n  \t            var joined = (0, lines_1.fromString)(\", \").join(printed_1);\n  \t            var oneLine_2 = joined.getLineLength(1) <= options.wrapColumn;\n  \t            if (oneLine_2) {\n  \t                if (options.arrayBracketSpacing) {\n  \t                    parts.push(\"[ \");\n  \t                }\n  \t                else {\n  \t                    parts.push(\"[\");\n  \t                }\n  \t            }\n  \t            else {\n  \t                parts.push(\"[\\n\");\n  \t            }\n  \t            path.each(function (elemPath) {\n  \t                var i = elemPath.getName();\n  \t                var elem = elemPath.getValue();\n  \t                if (!elem) {\n  \t                    // If the array expression ends with a hole, that hole\n  \t                    // will be ignored by the interpreter, but if it ends with\n  \t                    // two (or more) holes, we need to write out two (or more)\n  \t                    // commas so that the resulting code is interpreted with\n  \t                    // both (all) of the holes.\n  \t                    parts.push(\",\");\n  \t                }\n  \t                else {\n  \t                    var lines = printed_1[i];\n  \t                    if (oneLine_2) {\n  \t                        if (i > 0)\n  \t                            parts.push(\" \");\n  \t                    }\n  \t                    else {\n  \t                        lines = lines.indent(options.tabWidth);\n  \t                    }\n  \t                    parts.push(lines);\n  \t                    if (i < len_2 - 1 ||\n  \t                        (!oneLine_2 && util$1.isTrailingCommaEnabled(options, \"arrays\")))\n  \t                        parts.push(\",\");\n  \t                    if (!oneLine_2)\n  \t                        parts.push(\"\\n\");\n  \t                }\n  \t            }, \"elements\");\n  \t            if (oneLine_2 && options.arrayBracketSpacing) {\n  \t                parts.push(\" ]\");\n  \t            }\n  \t            else {\n  \t                parts.push(\"]\");\n  \t            }\n  \t            if (n.typeAnnotation) {\n  \t                parts.push(path.call(print, \"typeAnnotation\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"SequenceExpression\":\n  \t            return (0, lines_1.fromString)(\", \").join(path.map(print, \"expressions\"));\n  \t        case \"ThisExpression\":\n  \t            return (0, lines_1.fromString)(\"this\");\n  \t        case \"Super\":\n  \t            return (0, lines_1.fromString)(\"super\");\n  \t        case \"NullLiteral\": // Babel 6 Literal split\n  \t            return (0, lines_1.fromString)(\"null\");\n  \t        case \"RegExpLiteral\": // Babel 6 Literal split\n  \t            return (0, lines_1.fromString)(getPossibleRaw(n) || \"/\".concat(n.pattern, \"/\").concat(n.flags || \"\"), options);\n  \t        case \"BigIntLiteral\": // Babel 7 Literal split\n  \t            return (0, lines_1.fromString)(getPossibleRaw(n) || n.value + \"n\", options);\n  \t        case \"NumericLiteral\": // Babel 6 Literal Split\n  \t            return (0, lines_1.fromString)(getPossibleRaw(n) || n.value, options);\n  \t        case \"DecimalLiteral\":\n  \t            return (0, lines_1.fromString)(getPossibleRaw(n) || n.value + \"m\", options);\n  \t        case \"StringLiteral\":\n  \t            return (0, lines_1.fromString)(nodeStr(n.value, options));\n  \t        case \"BooleanLiteral\": // Babel 6 Literal split\n  \t        case \"Literal\":\n  \t            return (0, lines_1.fromString)(getPossibleRaw(n) ||\n  \t                (typeof n.value === \"string\" ? nodeStr(n.value, options) : n.value), options);\n  \t        case \"Directive\": // Babel 6\n  \t            return path.call(print, \"value\");\n  \t        case \"DirectiveLiteral\": // Babel 6\n  \t            return (0, lines_1.fromString)(getPossibleRaw(n) || nodeStr(n.value, options), options);\n  \t        case \"InterpreterDirective\":\n  \t            return (0, lines_1.fromString)(\"#!\".concat(n.value, \"\\n\"), options);\n  \t        case \"ModuleSpecifier\":\n  \t            if (n.local) {\n  \t                throw new Error(\"The ESTree ModuleSpecifier type should be abstract\");\n  \t            }\n  \t            // The Esprima ModuleSpecifier type is just a string-valued\n  \t            // Literal identifying the imported-from module.\n  \t            return (0, lines_1.fromString)(nodeStr(n.value, options), options);\n  \t        case \"UnaryExpression\":\n  \t            parts.push(n.operator);\n  \t            if (/[a-z]$/.test(n.operator))\n  \t                parts.push(\" \");\n  \t            parts.push(path.call(print, \"argument\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"UpdateExpression\":\n  \t            parts.push(path.call(print, \"argument\"), n.operator);\n  \t            if (n.prefix)\n  \t                parts.reverse();\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ConditionalExpression\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"test\"),\n  \t                \" ? \",\n  \t                path.call(print, \"consequent\"),\n  \t                \" : \",\n  \t                path.call(print, \"alternate\"),\n  \t            ]);\n  \t        case \"NewExpression\": {\n  \t            parts.push(\"new \", path.call(print, \"callee\"));\n  \t            if (n.typeParameters) {\n  \t                parts.push(path.call(print, \"typeParameters\"));\n  \t            }\n  \t            if (n.typeArguments) {\n  \t                parts.push(path.call(print, \"typeArguments\"));\n  \t            }\n  \t            var args = n.arguments;\n  \t            if (args) {\n  \t                parts.push(printArgumentsList(path, options, print));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"VariableDeclaration\": {\n  \t            if (n.declare) {\n  \t                parts.push(\"declare \");\n  \t            }\n  \t            parts.push(n.kind, \" \");\n  \t            var maxLen_1 = 0;\n  \t            var printed = path.map(function (childPath) {\n  \t                var lines = print(childPath);\n  \t                maxLen_1 = Math.max(lines.length, maxLen_1);\n  \t                return lines;\n  \t            }, \"declarations\");\n  \t            if (maxLen_1 === 1) {\n  \t                parts.push((0, lines_1.fromString)(\", \").join(printed));\n  \t            }\n  \t            else if (printed.length > 1) {\n  \t                parts.push((0, lines_1.fromString)(\",\\n\")\n  \t                    .join(printed)\n  \t                    .indentTail(n.kind.length + 1));\n  \t            }\n  \t            else {\n  \t                parts.push(printed[0]);\n  \t            }\n  \t            // We generally want to terminate all variable declarations with a\n  \t            // semicolon, except when they are children of for loops.\n  \t            var parentNode = path.getParentNode();\n  \t            if (!namedTypes.ForStatement.check(parentNode) &&\n  \t                !namedTypes.ForInStatement.check(parentNode) &&\n  \t                !(namedTypes.ForOfStatement &&\n  \t                    namedTypes.ForOfStatement.check(parentNode)) &&\n  \t                !(namedTypes.ForAwaitStatement &&\n  \t                    namedTypes.ForAwaitStatement.check(parentNode))) {\n  \t                parts.push(\";\");\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"VariableDeclarator\":\n  \t            return n.init\n  \t                ? (0, lines_1.fromString)(\" = \").join([\n  \t                    path.call(print, \"id\"),\n  \t                    path.call(print, \"init\"),\n  \t                ])\n  \t                : path.call(print, \"id\");\n  \t        case \"WithStatement\":\n  \t            return (0, lines_1.concat)([\n  \t                \"with (\",\n  \t                path.call(print, \"object\"),\n  \t                \") \",\n  \t                path.call(print, \"body\"),\n  \t            ]);\n  \t        case \"IfStatement\": {\n  \t            var con = adjustClause(path.call(print, \"consequent\"), options);\n  \t            parts.push(\"if (\", path.call(print, \"test\"), \")\", con);\n  \t            if (n.alternate)\n  \t                parts.push(endsWithBrace(con) ? \" else\" : \"\\nelse\", adjustClause(path.call(print, \"alternate\"), options));\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"ForStatement\": {\n  \t            // TODO Get the for (;;) case right.\n  \t            var init = path.call(print, \"init\");\n  \t            var sep = init.length > 1 ? \";\\n\" : \"; \";\n  \t            var forParen = \"for (\";\n  \t            var indented = (0, lines_1.fromString)(sep)\n  \t                .join([init, path.call(print, \"test\"), path.call(print, \"update\")])\n  \t                .indentTail(forParen.length);\n  \t            var head = (0, lines_1.concat)([forParen, indented, \")\"]);\n  \t            var clause = adjustClause(path.call(print, \"body\"), options);\n  \t            parts.push(head);\n  \t            if (head.length > 1) {\n  \t                parts.push(\"\\n\");\n  \t                clause = clause.trimLeft();\n  \t            }\n  \t            parts.push(clause);\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"WhileStatement\":\n  \t            return (0, lines_1.concat)([\n  \t                \"while (\",\n  \t                path.call(print, \"test\"),\n  \t                \")\",\n  \t                adjustClause(path.call(print, \"body\"), options),\n  \t            ]);\n  \t        case \"ForInStatement\":\n  \t            // Note: esprima can't actually parse \"for each (\".\n  \t            return (0, lines_1.concat)([\n  \t                n.each ? \"for each (\" : \"for (\",\n  \t                path.call(print, \"left\"),\n  \t                \" in \",\n  \t                path.call(print, \"right\"),\n  \t                \")\",\n  \t                adjustClause(path.call(print, \"body\"), options),\n  \t            ]);\n  \t        case \"ForOfStatement\":\n  \t        case \"ForAwaitStatement\":\n  \t            parts.push(\"for \");\n  \t            if (n.await || n.type === \"ForAwaitStatement\") {\n  \t                parts.push(\"await \");\n  \t            }\n  \t            parts.push(\"(\", path.call(print, \"left\"), \" of \", path.call(print, \"right\"), \")\", adjustClause(path.call(print, \"body\"), options));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"DoWhileStatement\": {\n  \t            var doBody = (0, lines_1.concat)([\n  \t                \"do\",\n  \t                adjustClause(path.call(print, \"body\"), options),\n  \t            ]);\n  \t            parts.push(doBody);\n  \t            if (endsWithBrace(doBody))\n  \t                parts.push(\" while\");\n  \t            else\n  \t                parts.push(\"\\nwhile\");\n  \t            parts.push(\" (\", path.call(print, \"test\"), \");\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"DoExpression\": {\n  \t            var statements = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n  \t            return (0, lines_1.concat)([\"do {\\n\", statements.indent(options.tabWidth), \"\\n}\"]);\n  \t        }\n  \t        case \"BreakStatement\":\n  \t            parts.push(\"break\");\n  \t            if (n.label)\n  \t                parts.push(\" \", path.call(print, \"label\"));\n  \t            parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ContinueStatement\":\n  \t            parts.push(\"continue\");\n  \t            if (n.label)\n  \t                parts.push(\" \", path.call(print, \"label\"));\n  \t            parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"LabeledStatement\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"label\"),\n  \t                \":\\n\",\n  \t                path.call(print, \"body\"),\n  \t            ]);\n  \t        case \"TryStatement\":\n  \t            parts.push(\"try \", path.call(print, \"block\"));\n  \t            if (n.handler) {\n  \t                parts.push(\" \", path.call(print, \"handler\"));\n  \t            }\n  \t            else if (n.handlers) {\n  \t                path.each(function (handlerPath) {\n  \t                    parts.push(\" \", print(handlerPath));\n  \t                }, \"handlers\");\n  \t            }\n  \t            if (n.finalizer) {\n  \t                parts.push(\" finally \", path.call(print, \"finalizer\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"CatchClause\":\n  \t            parts.push(\"catch \");\n  \t            if (n.param) {\n  \t                parts.push(\"(\", path.call(print, \"param\"));\n  \t            }\n  \t            if (n.guard) {\n  \t                // Note: esprima does not recognize conditional catch clauses.\n  \t                parts.push(\" if \", path.call(print, \"guard\"));\n  \t            }\n  \t            if (n.param) {\n  \t                parts.push(\") \");\n  \t            }\n  \t            parts.push(path.call(print, \"body\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ThrowStatement\":\n  \t            return (0, lines_1.concat)([\"throw \", path.call(print, \"argument\"), \";\"]);\n  \t        case \"SwitchStatement\":\n  \t            return (0, lines_1.concat)([\n  \t                \"switch (\",\n  \t                path.call(print, \"discriminant\"),\n  \t                \") {\\n\",\n  \t                (0, lines_1.fromString)(\"\\n\").join(path.map(print, \"cases\")),\n  \t                \"\\n}\",\n  \t            ]);\n  \t        // Note: ignoring n.lexical because it has no printing consequences.\n  \t        case \"SwitchCase\":\n  \t            if (n.test)\n  \t                parts.push(\"case \", path.call(print, \"test\"), \":\");\n  \t            else\n  \t                parts.push(\"default:\");\n  \t            if (n.consequent.length > 0) {\n  \t                parts.push(\"\\n\", path\n  \t                    .call(function (consequentPath) {\n  \t                    return printStatementSequence(consequentPath, options, print);\n  \t                }, \"consequent\")\n  \t                    .indent(options.tabWidth));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"DebuggerStatement\":\n  \t            return (0, lines_1.fromString)(\"debugger;\");\n  \t        // JSX extensions below.\n  \t        case \"JSXAttribute\":\n  \t            parts.push(path.call(print, \"name\"));\n  \t            if (n.value)\n  \t                parts.push(\"=\", path.call(print, \"value\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"JSXIdentifier\":\n  \t            return (0, lines_1.fromString)(n.name, options);\n  \t        case \"JSXNamespacedName\":\n  \t            return (0, lines_1.fromString)(\":\").join([\n  \t                path.call(print, \"namespace\"),\n  \t                path.call(print, \"name\"),\n  \t            ]);\n  \t        case \"JSXMemberExpression\":\n  \t            return (0, lines_1.fromString)(\".\").join([\n  \t                path.call(print, \"object\"),\n  \t                path.call(print, \"property\"),\n  \t            ]);\n  \t        case \"JSXSpreadAttribute\":\n  \t            return (0, lines_1.concat)([\"{...\", path.call(print, \"argument\"), \"}\"]);\n  \t        case \"JSXSpreadChild\":\n  \t            return (0, lines_1.concat)([\"{...\", path.call(print, \"expression\"), \"}\"]);\n  \t        case \"JSXExpressionContainer\":\n  \t            return (0, lines_1.concat)([\"{\", path.call(print, \"expression\"), \"}\"]);\n  \t        case \"JSXElement\":\n  \t        case \"JSXFragment\": {\n  \t            var openingPropName = \"opening\" + (n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n  \t            var closingPropName = \"closing\" + (n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n  \t            var openingLines = path.call(print, openingPropName);\n  \t            if (n[openingPropName].selfClosing) {\n  \t                (0, tiny_invariant_1.default)(!n[closingPropName], \"unexpected \" +\n  \t                    closingPropName +\n  \t                    \" element in self-closing \" +\n  \t                    n.type);\n  \t                return openingLines;\n  \t            }\n  \t            var childLines = (0, lines_1.concat)(path.map(function (childPath) {\n  \t                var child = childPath.getValue();\n  \t                if (namedTypes.Literal.check(child) &&\n  \t                    typeof child.value === \"string\") {\n  \t                    if (/\\S/.test(child.value)) {\n  \t                        return child.value.replace(/^\\s+/g, \"\");\n  \t                    }\n  \t                    else if (/\\n/.test(child.value)) {\n  \t                        return \"\\n\";\n  \t                    }\n  \t                }\n  \t                return print(childPath);\n  \t            }, \"children\")).indentTail(options.tabWidth);\n  \t            var closingLines = path.call(print, closingPropName);\n  \t            return (0, lines_1.concat)([openingLines, childLines, closingLines]);\n  \t        }\n  \t        case \"JSXOpeningElement\": {\n  \t            parts.push(\"<\", path.call(print, \"name\"));\n  \t            var typeDefPart = path.call(print, \"typeParameters\");\n  \t            if (typeDefPart.length)\n  \t                parts.push(typeDefPart);\n  \t            var attrParts_1 = [];\n  \t            path.each(function (attrPath) {\n  \t                attrParts_1.push(\" \", print(attrPath));\n  \t            }, \"attributes\");\n  \t            var attrLines = (0, lines_1.concat)(attrParts_1);\n  \t            var needLineWrap = attrLines.length > 1 || attrLines.getLineLength(1) > options.wrapColumn;\n  \t            if (needLineWrap) {\n  \t                attrParts_1.forEach(function (part, i) {\n  \t                    if (part === \" \") {\n  \t                        (0, tiny_invariant_1.default)(i % 2 === 0);\n  \t                        attrParts_1[i] = \"\\n\";\n  \t                    }\n  \t                });\n  \t                attrLines = (0, lines_1.concat)(attrParts_1).indentTail(options.tabWidth);\n  \t            }\n  \t            parts.push(attrLines, n.selfClosing ? \" />\" : \">\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"JSXClosingElement\":\n  \t            return (0, lines_1.concat)([\"</\", path.call(print, \"name\"), \">\"]);\n  \t        case \"JSXOpeningFragment\":\n  \t            return (0, lines_1.fromString)(\"<>\");\n  \t        case \"JSXClosingFragment\":\n  \t            return (0, lines_1.fromString)(\"</>\");\n  \t        case \"JSXText\":\n  \t            return (0, lines_1.fromString)(n.value, options);\n  \t        case \"JSXEmptyExpression\":\n  \t            return (0, lines_1.fromString)(\"\");\n  \t        case \"TypeAnnotatedIdentifier\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"annotation\"),\n  \t                \" \",\n  \t                path.call(print, \"identifier\"),\n  \t            ]);\n  \t        case \"ClassBody\":\n  \t            if (n.body.length === 0) {\n  \t                return (0, lines_1.fromString)(\"{}\");\n  \t            }\n  \t            return (0, lines_1.concat)([\n  \t                \"{\\n\",\n  \t                path\n  \t                    .call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\")\n  \t                    .indent(options.tabWidth),\n  \t                \"\\n}\",\n  \t            ]);\n  \t        case \"ClassPropertyDefinition\":\n  \t            parts.push(\"static \", path.call(print, \"definition\"));\n  \t            if (!namedTypes.MethodDefinition.check(n.definition))\n  \t                parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ClassProperty\": {\n  \t            if (n.declare) {\n  \t                parts.push(\"declare \");\n  \t            }\n  \t            var access = n.accessibility || n.access;\n  \t            if (typeof access === \"string\") {\n  \t                parts.push(access, \" \");\n  \t            }\n  \t            if (n.static) {\n  \t                parts.push(\"static \");\n  \t            }\n  \t            if (n.abstract) {\n  \t                parts.push(\"abstract \");\n  \t            }\n  \t            if (n.readonly) {\n  \t                parts.push(\"readonly \");\n  \t            }\n  \t            var key = path.call(print, \"key\");\n  \t            if (n.computed) {\n  \t                key = (0, lines_1.concat)([\"[\", key, \"]\"]);\n  \t            }\n  \t            if (n.variance) {\n  \t                key = (0, lines_1.concat)([printVariance(path, print), key]);\n  \t            }\n  \t            parts.push(key);\n  \t            if (n.optional) {\n  \t                parts.push(\"?\");\n  \t            }\n  \t            if (n.definite) {\n  \t                parts.push(\"!\");\n  \t            }\n  \t            if (n.typeAnnotation) {\n  \t                parts.push(path.call(print, \"typeAnnotation\"));\n  \t            }\n  \t            if (n.value) {\n  \t                parts.push(\" = \", path.call(print, \"value\"));\n  \t            }\n  \t            parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"ClassPrivateProperty\":\n  \t            if (n.static) {\n  \t                parts.push(\"static \");\n  \t            }\n  \t            parts.push(path.call(print, \"key\"));\n  \t            if (n.typeAnnotation) {\n  \t                parts.push(path.call(print, \"typeAnnotation\"));\n  \t            }\n  \t            if (n.value) {\n  \t                parts.push(\" = \", path.call(print, \"value\"));\n  \t            }\n  \t            parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ClassAccessorProperty\": {\n  \t            parts.push.apply(parts, tslib_1.__spreadArray(tslib_1.__spreadArray([], printClassMemberModifiers(n), false), [\"accessor \"], false));\n  \t            if (n.computed) {\n  \t                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n  \t            }\n  \t            else {\n  \t                parts.push(path.call(print, \"key\"));\n  \t            }\n  \t            if (n.optional) {\n  \t                parts.push(\"?\");\n  \t            }\n  \t            if (n.definite) {\n  \t                parts.push(\"!\");\n  \t            }\n  \t            if (n.typeAnnotation) {\n  \t                parts.push(path.call(print, \"typeAnnotation\"));\n  \t            }\n  \t            if (n.value) {\n  \t                parts.push(\" = \", path.call(print, \"value\"));\n  \t            }\n  \t            parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"ClassDeclaration\":\n  \t        case \"ClassExpression\":\n  \t        case \"DeclareClass\":\n  \t            if (n.declare) {\n  \t                parts.push(\"declare \");\n  \t            }\n  \t            if (n.abstract) {\n  \t                parts.push(\"abstract \");\n  \t            }\n  \t            parts.push(\"class\");\n  \t            if (n.id) {\n  \t                parts.push(\" \", path.call(print, \"id\"));\n  \t            }\n  \t            if (n.typeParameters) {\n  \t                parts.push(path.call(print, \"typeParameters\"));\n  \t            }\n  \t            if (n.superClass) {\n  \t                // ClassDeclaration and ClassExpression only\n  \t                parts.push(\" extends \", path.call(print, \"superClass\"), path.call(print, \"superTypeParameters\"));\n  \t            }\n  \t            if (n.extends && n.extends.length > 0) {\n  \t                // DeclareClass only\n  \t                parts.push(\" extends \", (0, lines_1.fromString)(\", \").join(path.map(print, \"extends\")));\n  \t            }\n  \t            if (n[\"implements\"] && n[\"implements\"].length > 0) {\n  \t                parts.push(\" implements \", (0, lines_1.fromString)(\", \").join(path.map(print, \"implements\")));\n  \t            }\n  \t            parts.push(\" \", path.call(print, \"body\"));\n  \t            if (n.type === \"DeclareClass\") {\n  \t                return printFlowDeclaration(path, parts);\n  \t            }\n  \t            else {\n  \t                return (0, lines_1.concat)(parts);\n  \t            }\n  \t        case \"TemplateElement\":\n  \t            return (0, lines_1.fromString)(n.value.raw, options).lockIndentTail();\n  \t        case \"TemplateLiteral\": {\n  \t            var expressions_1 = path.map(print, \"expressions\");\n  \t            parts.push(\"`\");\n  \t            path.each(function (childPath) {\n  \t                var i = childPath.getName();\n  \t                parts.push(print(childPath));\n  \t                if (i < expressions_1.length) {\n  \t                    parts.push(\"${\", expressions_1[i], \"}\");\n  \t                }\n  \t            }, \"quasis\");\n  \t            parts.push(\"`\");\n  \t            return (0, lines_1.concat)(parts).lockIndentTail();\n  \t        }\n  \t        case \"TaggedTemplateExpression\":\n  \t            return (0, lines_1.concat)([path.call(print, \"tag\"), path.call(print, \"quasi\")]);\n  \t        // These types are unprintable because they serve as abstract\n  \t        // supertypes for other (printable) types.\n  \t        case \"Node\":\n  \t        case \"Printable\":\n  \t        case \"SourceLocation\":\n  \t        case \"Position\":\n  \t        case \"Statement\":\n  \t        case \"Function\":\n  \t        case \"Pattern\":\n  \t        case \"Expression\":\n  \t        case \"Declaration\":\n  \t        case \"Specifier\":\n  \t        case \"NamedSpecifier\":\n  \t        case \"Comment\": // Supertype of Block and Line\n  \t        case \"Flow\": // Supertype of all Flow AST node types\n  \t        case \"FlowType\": // Supertype of all Flow types\n  \t        case \"FlowPredicate\": // Supertype of InferredPredicate and DeclaredPredicate\n  \t        case \"MemberTypeAnnotation\": // Flow\n  \t        case \"Type\": // Flow\n  \t        case \"TSHasOptionalTypeParameterInstantiation\":\n  \t        case \"TSHasOptionalTypeParameters\":\n  \t        case \"TSHasOptionalTypeAnnotation\":\n  \t        case \"ChainElement\": // Supertype of MemberExpression and CallExpression\n  \t            throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n  \t        case \"CommentBlock\": // Babel block comment.\n  \t        case \"Block\": // Esprima block comment.\n  \t            return (0, lines_1.concat)([\"/*\", (0, lines_1.fromString)(n.value, options), \"*/\"]);\n  \t        case \"CommentLine\": // Babel line comment.\n  \t        case \"Line\": // Esprima line comment.\n  \t            return (0, lines_1.concat)([\"//\", (0, lines_1.fromString)(n.value, options)]);\n  \t        // Type Annotations for Facebook Flow, typically stripped out or\n  \t        // transformed away before printing.\n  \t        case \"TypeAnnotation\":\n  \t            if (n.typeAnnotation) {\n  \t                if (n.typeAnnotation.type !== \"FunctionTypeAnnotation\") {\n  \t                    parts.push(\": \");\n  \t                }\n  \t                parts.push(path.call(print, \"typeAnnotation\"));\n  \t                return (0, lines_1.concat)(parts);\n  \t            }\n  \t            return (0, lines_1.fromString)(\"\");\n  \t        case \"ExistentialTypeParam\":\n  \t        case \"ExistsTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"*\", options);\n  \t        case \"EmptyTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"empty\", options);\n  \t        case \"AnyTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"any\", options);\n  \t        case \"MixedTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"mixed\", options);\n  \t        case \"ArrayTypeAnnotation\":\n  \t            return (0, lines_1.concat)([path.call(print, \"elementType\"), \"[]\"]);\n  \t        case \"TupleTypeAnnotation\": {\n  \t            var printed_2 = path.map(print, \"types\");\n  \t            var joined = (0, lines_1.fromString)(\", \").join(printed_2);\n  \t            var oneLine_3 = joined.getLineLength(1) <= options.wrapColumn;\n  \t            if (oneLine_3) {\n  \t                if (options.arrayBracketSpacing) {\n  \t                    parts.push(\"[ \");\n  \t                }\n  \t                else {\n  \t                    parts.push(\"[\");\n  \t                }\n  \t            }\n  \t            else {\n  \t                parts.push(\"[\\n\");\n  \t            }\n  \t            path.each(function (elemPath) {\n  \t                var i = elemPath.getName();\n  \t                var elem = elemPath.getValue();\n  \t                if (!elem) {\n  \t                    // If the array expression ends with a hole, that hole\n  \t                    // will be ignored by the interpreter, but if it ends with\n  \t                    // two (or more) holes, we need to write out two (or more)\n  \t                    // commas so that the resulting code is interpreted with\n  \t                    // both (all) of the holes.\n  \t                    parts.push(\",\");\n  \t                }\n  \t                else {\n  \t                    var lines = printed_2[i];\n  \t                    if (oneLine_3) {\n  \t                        if (i > 0)\n  \t                            parts.push(\" \");\n  \t                    }\n  \t                    else {\n  \t                        lines = lines.indent(options.tabWidth);\n  \t                    }\n  \t                    parts.push(lines);\n  \t                    if (i < n.types.length - 1 ||\n  \t                        (!oneLine_3 && util$1.isTrailingCommaEnabled(options, \"arrays\")))\n  \t                        parts.push(\",\");\n  \t                    if (!oneLine_3)\n  \t                        parts.push(\"\\n\");\n  \t                }\n  \t            }, \"types\");\n  \t            if (oneLine_3 && options.arrayBracketSpacing) {\n  \t                parts.push(\" ]\");\n  \t            }\n  \t            else {\n  \t                parts.push(\"]\");\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"BooleanTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"boolean\", options);\n  \t        case \"BooleanLiteralTypeAnnotation\":\n  \t            (0, tiny_invariant_1.default)(typeof n.value === \"boolean\");\n  \t            return (0, lines_1.fromString)(\"\" + n.value, options);\n  \t        case \"InterfaceTypeAnnotation\":\n  \t            parts.push(\"interface\");\n  \t            if (n.extends && n.extends.length > 0) {\n  \t                parts.push(\" extends \", (0, lines_1.fromString)(\", \").join(path.map(print, \"extends\")));\n  \t            }\n  \t            parts.push(\" \", path.call(print, \"body\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"DeclareFunction\":\n  \t            return printFlowDeclaration(path, [\n  \t                \"function \",\n  \t                path.call(print, \"id\"),\n  \t                \";\",\n  \t            ]);\n  \t        case \"DeclareModule\":\n  \t            return printFlowDeclaration(path, [\n  \t                \"module \",\n  \t                path.call(print, \"id\"),\n  \t                \" \",\n  \t                path.call(print, \"body\"),\n  \t            ]);\n  \t        case \"DeclareModuleExports\":\n  \t            return printFlowDeclaration(path, [\n  \t                \"module.exports\",\n  \t                path.call(print, \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"DeclareVariable\":\n  \t            return printFlowDeclaration(path, [\"var \", path.call(print, \"id\"), \";\"]);\n  \t        case \"DeclareExportDeclaration\":\n  \t        case \"DeclareExportAllDeclaration\":\n  \t            return (0, lines_1.concat)([\"declare \", printExportDeclaration(path, options, print)]);\n  \t        case \"EnumDeclaration\":\n  \t            return (0, lines_1.concat)([\n  \t                \"enum \",\n  \t                path.call(print, \"id\"),\n  \t                path.call(print, \"body\"),\n  \t            ]);\n  \t        case \"EnumBooleanBody\":\n  \t        case \"EnumNumberBody\":\n  \t        case \"EnumStringBody\":\n  \t        case \"EnumSymbolBody\": {\n  \t            if (n.type === \"EnumSymbolBody\" || n.explicitType) {\n  \t                parts.push(\" of \", \n  \t                // EnumBooleanBody => boolean, etc.\n  \t                n.type.slice(4, -4).toLowerCase());\n  \t            }\n  \t            parts.push(\" {\\n\", (0, lines_1.fromString)(\"\\n\")\n  \t                .join(path.map(print, \"members\"))\n  \t                .indent(options.tabWidth), \"\\n}\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"EnumDefaultedMember\":\n  \t            return (0, lines_1.concat)([path.call(print, \"id\"), \",\"]);\n  \t        case \"EnumBooleanMember\":\n  \t        case \"EnumNumberMember\":\n  \t        case \"EnumStringMember\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"id\"),\n  \t                \" = \",\n  \t                path.call(print, \"init\"),\n  \t                \",\",\n  \t            ]);\n  \t        case \"InferredPredicate\":\n  \t            return (0, lines_1.fromString)(\"%checks\", options);\n  \t        case \"DeclaredPredicate\":\n  \t            return (0, lines_1.concat)([\"%checks(\", path.call(print, \"value\"), \")\"]);\n  \t        case \"FunctionTypeAnnotation\": {\n  \t            // FunctionTypeAnnotation is ambiguous:\n  \t            // declare function(a: B): void; OR\n  \t            // const A: (a: B) => void;\n  \t            var parent = path.getParentNode(0);\n  \t            var isArrowFunctionTypeAnnotation = !(namedTypes.ObjectTypeCallProperty.check(parent) ||\n  \t                (namedTypes.ObjectTypeInternalSlot.check(parent) && parent.method) ||\n  \t                namedTypes.DeclareFunction.check(path.getParentNode(2)));\n  \t            var needsColon = isArrowFunctionTypeAnnotation &&\n  \t                !namedTypes.FunctionTypeParam.check(parent) &&\n  \t                !namedTypes.TypeAlias.check(parent);\n  \t            if (needsColon) {\n  \t                parts.push(\": \");\n  \t            }\n  \t            var hasTypeParameters = !!n.typeParameters;\n  \t            var needsParens = hasTypeParameters || n.params.length !== 1 || n.params[0].name;\n  \t            parts.push(hasTypeParameters ? path.call(print, \"typeParameters\") : \"\", needsParens ? \"(\" : \"\", printFunctionParams(path, options, print), needsParens ? \")\" : \"\");\n  \t            // The returnType is not wrapped in a TypeAnnotation, so the colon\n  \t            // needs to be added separately.\n  \t            if (n.returnType) {\n  \t                parts.push(isArrowFunctionTypeAnnotation ? \" => \" : \": \", path.call(print, \"returnType\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"FunctionTypeParam\": {\n  \t            var name = path.call(print, \"name\");\n  \t            parts.push(name);\n  \t            if (n.optional) {\n  \t                parts.push(\"?\");\n  \t            }\n  \t            if (name.infos[0].line) {\n  \t                parts.push(\": \");\n  \t            }\n  \t            parts.push(path.call(print, \"typeAnnotation\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"GenericTypeAnnotation\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"id\"),\n  \t                path.call(print, \"typeParameters\"),\n  \t            ]);\n  \t        case \"DeclareInterface\":\n  \t            parts.push(\"declare \");\n  \t        // Fall through to InterfaceDeclaration...\n  \t        case \"InterfaceDeclaration\":\n  \t        case \"TSInterfaceDeclaration\":\n  \t            if (n.declare) {\n  \t                parts.push(\"declare \");\n  \t            }\n  \t            parts.push(\"interface \", path.call(print, \"id\"), path.call(print, \"typeParameters\"), \" \");\n  \t            if (n[\"extends\"] && n[\"extends\"].length > 0) {\n  \t                parts.push(\"extends \", (0, lines_1.fromString)(\", \").join(path.map(print, \"extends\")), \" \");\n  \t            }\n  \t            if (n.body) {\n  \t                parts.push(path.call(print, \"body\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ClassImplements\":\n  \t        case \"InterfaceExtends\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"id\"),\n  \t                path.call(print, \"typeParameters\"),\n  \t            ]);\n  \t        case \"IntersectionTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\" & \").join(path.map(print, \"types\"));\n  \t        case \"NullableTypeAnnotation\":\n  \t            return (0, lines_1.concat)([\"?\", path.call(print, \"typeAnnotation\")]);\n  \t        case \"NullLiteralTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"null\", options);\n  \t        case \"ThisTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"this\", options);\n  \t        case \"NumberTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"number\", options);\n  \t        case \"ObjectTypeCallProperty\":\n  \t            return path.call(print, \"value\");\n  \t        case \"ObjectTypeIndexer\":\n  \t            if (n.static) {\n  \t                parts.push(\"static \");\n  \t            }\n  \t            parts.push(printVariance(path, print), \"[\");\n  \t            if (n.id) {\n  \t                parts.push(path.call(print, \"id\"), \": \");\n  \t            }\n  \t            parts.push(path.call(print, \"key\"), \"]: \", path.call(print, \"value\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"ObjectTypeProperty\":\n  \t            return (0, lines_1.concat)([\n  \t                printVariance(path, print),\n  \t                path.call(print, \"key\"),\n  \t                n.optional ? \"?\" : \"\",\n  \t                \": \",\n  \t                path.call(print, \"value\"),\n  \t            ]);\n  \t        case \"ObjectTypeInternalSlot\":\n  \t            return (0, lines_1.concat)([\n  \t                n.static ? \"static \" : \"\",\n  \t                \"[[\",\n  \t                path.call(print, \"id\"),\n  \t                \"]]\",\n  \t                n.optional ? \"?\" : \"\",\n  \t                n.value.type !== \"FunctionTypeAnnotation\" ? \": \" : \"\",\n  \t                path.call(print, \"value\"),\n  \t            ]);\n  \t        case \"QualifiedTypeIdentifier\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"qualification\"),\n  \t                \".\",\n  \t                path.call(print, \"id\"),\n  \t            ]);\n  \t        case \"StringLiteralTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(nodeStr(n.value, options), options);\n  \t        case \"NumberLiteralTypeAnnotation\":\n  \t        case \"NumericLiteralTypeAnnotation\":\n  \t            (0, tiny_invariant_1.default)(typeof n.value === \"number\");\n  \t            return (0, lines_1.fromString)(JSON.stringify(n.value), options);\n  \t        case \"BigIntLiteralTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(n.raw, options);\n  \t        case \"StringTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"string\", options);\n  \t        case \"DeclareTypeAlias\":\n  \t            parts.push(\"declare \");\n  \t        // Fall through to TypeAlias...\n  \t        case \"TypeAlias\":\n  \t            return (0, lines_1.concat)([\n  \t                \"type \",\n  \t                path.call(print, \"id\"),\n  \t                path.call(print, \"typeParameters\"),\n  \t                \" = \",\n  \t                path.call(print, \"right\"),\n  \t                \";\",\n  \t            ]);\n  \t        case \"DeclareOpaqueType\":\n  \t            parts.push(\"declare \");\n  \t        // Fall through to OpaqueType...\n  \t        case \"OpaqueType\":\n  \t            parts.push(\"opaque type \", path.call(print, \"id\"), path.call(print, \"typeParameters\"));\n  \t            if (n[\"supertype\"]) {\n  \t                parts.push(\": \", path.call(print, \"supertype\"));\n  \t            }\n  \t            if (n[\"impltype\"]) {\n  \t                parts.push(\" = \", path.call(print, \"impltype\"));\n  \t            }\n  \t            parts.push(\";\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TypeCastExpression\":\n  \t            return (0, lines_1.concat)([\n  \t                \"(\",\n  \t                path.call(print, \"expression\"),\n  \t                path.call(print, \"typeAnnotation\"),\n  \t                \")\",\n  \t            ]);\n  \t        case \"TypeParameterDeclaration\":\n  \t        case \"TypeParameterInstantiation\":\n  \t            return (0, lines_1.concat)([\n  \t                \"<\",\n  \t                (0, lines_1.fromString)(\", \").join(path.map(print, \"params\")),\n  \t                \">\",\n  \t            ]);\n  \t        case \"Variance\":\n  \t            if (n.kind === \"plus\") {\n  \t                return (0, lines_1.fromString)(\"+\");\n  \t            }\n  \t            if (n.kind === \"minus\") {\n  \t                return (0, lines_1.fromString)(\"-\");\n  \t            }\n  \t            return (0, lines_1.fromString)(\"\");\n  \t        case \"TypeParameter\":\n  \t            if (n.variance) {\n  \t                parts.push(printVariance(path, print));\n  \t            }\n  \t            parts.push(path.call(print, \"name\"));\n  \t            if (n.bound) {\n  \t                parts.push(path.call(print, \"bound\"));\n  \t            }\n  \t            if (n[\"default\"]) {\n  \t                parts.push(\"=\", path.call(print, \"default\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TypeofTypeAnnotation\":\n  \t            return (0, lines_1.concat)([\n  \t                (0, lines_1.fromString)(\"typeof \", options),\n  \t                path.call(print, \"argument\"),\n  \t            ]);\n  \t        case \"IndexedAccessType\":\n  \t        case \"OptionalIndexedAccessType\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"objectType\"),\n  \t                n.optional ? \"?.\" : \"\",\n  \t                \"[\",\n  \t                path.call(print, \"indexType\"),\n  \t                \"]\",\n  \t            ]);\n  \t        case \"UnionTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\" | \").join(path.map(print, \"types\"));\n  \t        case \"VoidTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"void\", options);\n  \t        case \"NullTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"null\", options);\n  \t        case \"SymbolTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"symbol\", options);\n  \t        case \"BigIntTypeAnnotation\":\n  \t            return (0, lines_1.fromString)(\"bigint\", options);\n  \t        // Type Annotations for TypeScript (when using Babylon as parser)\n  \t        case \"TSType\":\n  \t            throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n  \t        case \"TSNumberKeyword\":\n  \t            return (0, lines_1.fromString)(\"number\", options);\n  \t        case \"TSBigIntKeyword\":\n  \t            return (0, lines_1.fromString)(\"bigint\", options);\n  \t        case \"TSObjectKeyword\":\n  \t            return (0, lines_1.fromString)(\"object\", options);\n  \t        case \"TSBooleanKeyword\":\n  \t            return (0, lines_1.fromString)(\"boolean\", options);\n  \t        case \"TSStringKeyword\":\n  \t            return (0, lines_1.fromString)(\"string\", options);\n  \t        case \"TSSymbolKeyword\":\n  \t            return (0, lines_1.fromString)(\"symbol\", options);\n  \t        case \"TSAnyKeyword\":\n  \t            return (0, lines_1.fromString)(\"any\", options);\n  \t        case \"TSVoidKeyword\":\n  \t            return (0, lines_1.fromString)(\"void\", options);\n  \t        case \"TSIntrinsicKeyword\":\n  \t            return (0, lines_1.fromString)(\"intrinsic\", options);\n  \t        case \"TSThisType\":\n  \t            return (0, lines_1.fromString)(\"this\", options);\n  \t        case \"TSNullKeyword\":\n  \t            return (0, lines_1.fromString)(\"null\", options);\n  \t        case \"TSUndefinedKeyword\":\n  \t            return (0, lines_1.fromString)(\"undefined\", options);\n  \t        case \"TSUnknownKeyword\":\n  \t            return (0, lines_1.fromString)(\"unknown\", options);\n  \t        case \"TSNeverKeyword\":\n  \t            return (0, lines_1.fromString)(\"never\", options);\n  \t        case \"TSArrayType\":\n  \t            return (0, lines_1.concat)([path.call(print, \"elementType\"), \"[]\"]);\n  \t        case \"TSLiteralType\":\n  \t            return path.call(print, \"literal\");\n  \t        case \"TSUnionType\":\n  \t            return (0, lines_1.fromString)(\" | \").join(path.map(print, \"types\"));\n  \t        case \"TSIntersectionType\":\n  \t            return (0, lines_1.fromString)(\" & \").join(path.map(print, \"types\"));\n  \t        case \"TSConditionalType\":\n  \t            parts.push(path.call(print, \"checkType\"), \" extends \", path.call(print, \"extendsType\"), \" ? \", path.call(print, \"trueType\"), \" : \", path.call(print, \"falseType\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSInferType\":\n  \t            parts.push(\"infer \", path.call(print, \"typeParameter\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSParenthesizedType\":\n  \t            return (0, lines_1.concat)([\"(\", path.call(print, \"typeAnnotation\"), \")\"]);\n  \t        case \"TSFunctionType\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"typeParameters\"),\n  \t                \"(\",\n  \t                printFunctionParams(path, options, print),\n  \t                \") => \",\n  \t                path.call(print, \"typeAnnotation\", \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"TSConstructorType\":\n  \t            return (0, lines_1.concat)([\n  \t                \"new \",\n  \t                path.call(print, \"typeParameters\"),\n  \t                \"(\",\n  \t                printFunctionParams(path, options, print),\n  \t                \") => \",\n  \t                path.call(print, \"typeAnnotation\", \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"TSMappedType\": {\n  \t            parts.push(n.readonly ? \"readonly \" : \"\", \"[\", path.call(print, \"typeParameter\"), \"]\", n.optional ? \"?\" : \"\");\n  \t            if (n.typeAnnotation) {\n  \t                parts.push(\": \", path.call(print, \"typeAnnotation\"), \";\");\n  \t            }\n  \t            return (0, lines_1.concat)([\"{\\n\", (0, lines_1.concat)(parts).indent(options.tabWidth), \"\\n}\"]);\n  \t        }\n  \t        case \"TSTupleType\":\n  \t            return (0, lines_1.concat)([\n  \t                \"[\",\n  \t                (0, lines_1.fromString)(\", \").join(path.map(print, \"elementTypes\")),\n  \t                \"]\",\n  \t            ]);\n  \t        case \"TSNamedTupleMember\":\n  \t            parts.push(path.call(print, \"label\"));\n  \t            if (n.optional) {\n  \t                parts.push(\"?\");\n  \t            }\n  \t            parts.push(\": \", path.call(print, \"elementType\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSRestType\":\n  \t            return (0, lines_1.concat)([\"...\", path.call(print, \"typeAnnotation\")]);\n  \t        case \"TSOptionalType\":\n  \t            return (0, lines_1.concat)([path.call(print, \"typeAnnotation\"), \"?\"]);\n  \t        case \"TSIndexedAccessType\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"objectType\"),\n  \t                \"[\",\n  \t                path.call(print, \"indexType\"),\n  \t                \"]\",\n  \t            ]);\n  \t        case \"TSTypeOperator\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"operator\"),\n  \t                \" \",\n  \t                path.call(print, \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"TSTypeLiteral\": {\n  \t            var members = (0, lines_1.fromString)(\"\\n\").join(path.map(print, \"members\").map(function (member) {\n  \t                if (lastNonSpaceCharacter(member) !== \";\") {\n  \t                    return member.concat(\";\");\n  \t                }\n  \t                return member;\n  \t            }));\n  \t            if (members.isEmpty()) {\n  \t                return (0, lines_1.fromString)(\"{}\", options);\n  \t            }\n  \t            parts.push(\"{\\n\", members.indent(options.tabWidth), \"\\n}\");\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"TSEnumMember\":\n  \t            parts.push(path.call(print, \"id\"));\n  \t            if (n.initializer) {\n  \t                parts.push(\" = \", path.call(print, \"initializer\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSTypeQuery\":\n  \t            return (0, lines_1.concat)([\"typeof \", path.call(print, \"exprName\")]);\n  \t        case \"TSParameterProperty\":\n  \t            if (n.accessibility) {\n  \t                parts.push(n.accessibility, \" \");\n  \t            }\n  \t            if (n.export) {\n  \t                parts.push(\"export \");\n  \t            }\n  \t            if (n.static) {\n  \t                parts.push(\"static \");\n  \t            }\n  \t            if (n.readonly) {\n  \t                parts.push(\"readonly \");\n  \t            }\n  \t            parts.push(path.call(print, \"parameter\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSTypeReference\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"typeName\"),\n  \t                path.call(print, \"typeParameters\"),\n  \t            ]);\n  \t        case \"TSQualifiedName\":\n  \t            return (0, lines_1.concat)([path.call(print, \"left\"), \".\", path.call(print, \"right\")]);\n  \t        case \"TSAsExpression\":\n  \t        case \"TSSatisfiesExpression\": {\n  \t            var expression = path.call(print, \"expression\");\n  \t            parts.push(expression, n.type === \"TSSatisfiesExpression\" ? \" satisfies \" : \" as \", path.call(print, \"typeAnnotation\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"TSTypeCastExpression\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"expression\"),\n  \t                path.call(print, \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"TSNonNullExpression\":\n  \t            return (0, lines_1.concat)([path.call(print, \"expression\"), \"!\"]);\n  \t        case \"TSTypeAnnotation\":\n  \t            return (0, lines_1.concat)([\": \", path.call(print, \"typeAnnotation\")]);\n  \t        case \"TSIndexSignature\":\n  \t            return (0, lines_1.concat)([\n  \t                n.readonly ? \"readonly \" : \"\",\n  \t                \"[\",\n  \t                path.map(print, \"parameters\"),\n  \t                \"]\",\n  \t                path.call(print, \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"TSPropertySignature\":\n  \t            parts.push(printVariance(path, print), n.readonly ? \"readonly \" : \"\");\n  \t            if (n.computed) {\n  \t                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n  \t            }\n  \t            else {\n  \t                parts.push(path.call(print, \"key\"));\n  \t            }\n  \t            parts.push(n.optional ? \"?\" : \"\", path.call(print, \"typeAnnotation\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSMethodSignature\":\n  \t            if (n.kind === \"get\") {\n  \t                parts.push(\"get \");\n  \t            }\n  \t            else if (n.kind === \"set\") {\n  \t                parts.push(\"set \");\n  \t            }\n  \t            if (n.computed) {\n  \t                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n  \t            }\n  \t            else {\n  \t                parts.push(path.call(print, \"key\"));\n  \t            }\n  \t            if (n.optional) {\n  \t                parts.push(\"?\");\n  \t            }\n  \t            parts.push(path.call(print, \"typeParameters\"), \"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"typeAnnotation\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSTypePredicate\":\n  \t            if (n.asserts) {\n  \t                parts.push(\"asserts \");\n  \t            }\n  \t            parts.push(path.call(print, \"parameterName\"));\n  \t            if (n.typeAnnotation) {\n  \t                parts.push(\" is \", path.call(print, \"typeAnnotation\", \"typeAnnotation\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSCallSignatureDeclaration\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"typeParameters\"),\n  \t                \"(\",\n  \t                printFunctionParams(path, options, print),\n  \t                \")\",\n  \t                path.call(print, \"typeAnnotation\"),\n  \t            ]);\n  \t        case \"TSConstructSignatureDeclaration\":\n  \t            if (n.typeParameters) {\n  \t                parts.push(\"new\", path.call(print, \"typeParameters\"));\n  \t            }\n  \t            else {\n  \t                parts.push(\"new \");\n  \t            }\n  \t            parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"typeAnnotation\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSTypeAliasDeclaration\":\n  \t            return (0, lines_1.concat)([\n  \t                n.declare ? \"declare \" : \"\",\n  \t                \"type \",\n  \t                path.call(print, \"id\"),\n  \t                path.call(print, \"typeParameters\"),\n  \t                \" = \",\n  \t                path.call(print, \"typeAnnotation\"),\n  \t                \";\",\n  \t            ]);\n  \t        case \"TSTypeParameter\": {\n  \t            parts.push(path.call(print, \"name\"));\n  \t            // ambiguous because of TSMappedType\n  \t            var parent = path.getParentNode(0);\n  \t            var isInMappedType = namedTypes.TSMappedType.check(parent);\n  \t            if (n.constraint) {\n  \t                parts.push(isInMappedType ? \" in \" : \" extends \", path.call(print, \"constraint\"));\n  \t            }\n  \t            if (n[\"default\"]) {\n  \t                parts.push(\" = \", path.call(print, \"default\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"TSTypeAssertion\": {\n  \t            parts.push(\"<\", path.call(print, \"typeAnnotation\"), \"> \", path.call(print, \"expression\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"TSTypeParameterDeclaration\":\n  \t        case \"TSTypeParameterInstantiation\":\n  \t            return (0, lines_1.concat)([\n  \t                \"<\",\n  \t                (0, lines_1.fromString)(\", \").join(path.map(print, \"params\")),\n  \t                \">\",\n  \t            ]);\n  \t        case \"TSEnumDeclaration\": {\n  \t            parts.push(n.declare ? \"declare \" : \"\", n.const ? \"const \" : \"\", \"enum \", path.call(print, \"id\"));\n  \t            var memberLines = (0, lines_1.fromString)(\",\\n\").join(path.map(print, \"members\"));\n  \t            if (memberLines.isEmpty()) {\n  \t                parts.push(\" {}\");\n  \t            }\n  \t            else {\n  \t                parts.push(\" {\\n\", memberLines.indent(options.tabWidth), \"\\n}\");\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"TSExpressionWithTypeArguments\":\n  \t            return (0, lines_1.concat)([\n  \t                path.call(print, \"expression\"),\n  \t                path.call(print, \"typeParameters\"),\n  \t            ]);\n  \t        case \"TSInterfaceBody\": {\n  \t            var lines = (0, lines_1.fromString)(\"\\n\").join(path.map(print, \"body\").map(function (element) {\n  \t                if (lastNonSpaceCharacter(element) !== \";\") {\n  \t                    return element.concat(\";\");\n  \t                }\n  \t                return element;\n  \t            }));\n  \t            if (lines.isEmpty()) {\n  \t                return (0, lines_1.fromString)(\"{}\", options);\n  \t            }\n  \t            return (0, lines_1.concat)([\"{\\n\", lines.indent(options.tabWidth), \"\\n}\"]);\n  \t        }\n  \t        case \"TSImportType\":\n  \t            parts.push(\"import(\", path.call(print, \"argument\"), \")\");\n  \t            if (n.qualifier) {\n  \t                parts.push(\".\", path.call(print, \"qualifier\"));\n  \t            }\n  \t            if (n.typeParameters) {\n  \t                parts.push(path.call(print, \"typeParameters\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        case \"TSImportEqualsDeclaration\":\n  \t            if (n.isExport) {\n  \t                parts.push(\"export \");\n  \t            }\n  \t            parts.push(\"import \", path.call(print, \"id\"), \" = \", path.call(print, \"moduleReference\"));\n  \t            return maybeAddSemicolon((0, lines_1.concat)(parts));\n  \t        case \"TSExternalModuleReference\":\n  \t            return (0, lines_1.concat)([\"require(\", path.call(print, \"expression\"), \")\"]);\n  \t        case \"TSModuleDeclaration\": {\n  \t            var parent = path.getParentNode();\n  \t            if (parent.type === \"TSModuleDeclaration\") {\n  \t                parts.push(\".\");\n  \t            }\n  \t            else {\n  \t                if (n.declare) {\n  \t                    parts.push(\"declare \");\n  \t                }\n  \t                if (!n.global) {\n  \t                    var isExternal = n.id.type === \"StringLiteral\" ||\n  \t                        (n.id.type === \"Literal\" && typeof n.id.value === \"string\");\n  \t                    if (isExternal) {\n  \t                        parts.push(\"module \");\n  \t                    }\n  \t                    else if (n.loc && n.loc.lines && n.id.loc) {\n  \t                        var prefix = n.loc.lines.sliceString(n.loc.start, n.id.loc.start);\n  \t                        // These keywords are fundamentally ambiguous in the\n  \t                        // Babylon parser, and not reflected in the AST, so\n  \t                        // the best we can do is to match the original code,\n  \t                        // when possible.\n  \t                        if (prefix.indexOf(\"module\") >= 0) {\n  \t                            parts.push(\"module \");\n  \t                        }\n  \t                        else {\n  \t                            parts.push(\"namespace \");\n  \t                        }\n  \t                    }\n  \t                    else {\n  \t                        parts.push(\"namespace \");\n  \t                    }\n  \t                }\n  \t            }\n  \t            parts.push(path.call(print, \"id\"));\n  \t            if (n.body) {\n  \t                parts.push(\" \");\n  \t                parts.push(path.call(print, \"body\"));\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"TSModuleBlock\": {\n  \t            var naked = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n  \t            if (naked.isEmpty()) {\n  \t                parts.push(\"{}\");\n  \t            }\n  \t            else {\n  \t                parts.push(\"{\\n\", naked.indent(options.tabWidth), \"\\n}\");\n  \t            }\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        case \"TSInstantiationExpression\": {\n  \t            parts.push(path.call(print, \"expression\"), path.call(print, \"typeParameters\"));\n  \t            return (0, lines_1.concat)(parts);\n  \t        }\n  \t        // https://github.com/babel/babel/pull/10148\n  \t        case \"V8IntrinsicIdentifier\":\n  \t            return (0, lines_1.concat)([\"%\", path.call(print, \"name\")]);\n  \t        // https://github.com/babel/babel/pull/13191\n  \t        case \"TopicReference\":\n  \t            return (0, lines_1.fromString)(\"#\");\n  \t        // Unhandled types below. If encountered, nodes of these types should\n  \t        // be either left alone or desugared into AST types that are fully\n  \t        // supported by the pretty-printer.\n  \t        case \"ClassHeritage\": // TODO\n  \t        case \"ComprehensionBlock\": // TODO\n  \t        case \"ComprehensionExpression\": // TODO\n  \t        case \"Glob\": // TODO\n  \t        case \"GeneratorExpression\": // TODO\n  \t        case \"LetStatement\": // TODO\n  \t        case \"LetExpression\": // TODO\n  \t        case \"GraphExpression\": // TODO\n  \t        case \"GraphIndexExpression\": // TODO\n  \t        case \"XMLDefaultDeclaration\":\n  \t        case \"XMLAnyName\":\n  \t        case \"XMLQualifiedIdentifier\":\n  \t        case \"XMLFunctionQualifiedIdentifier\":\n  \t        case \"XMLAttributeSelector\":\n  \t        case \"XMLFilterExpression\":\n  \t        case \"XML\":\n  \t        case \"XMLElement\":\n  \t        case \"XMLList\":\n  \t        case \"XMLEscape\":\n  \t        case \"XMLText\":\n  \t        case \"XMLStartTag\":\n  \t        case \"XMLEndTag\":\n  \t        case \"XMLPointTag\":\n  \t        case \"XMLName\":\n  \t        case \"XMLAttribute\":\n  \t        case \"XMLCdata\":\n  \t        case \"XMLComment\":\n  \t        case \"XMLProcessingInstruction\":\n  \t        default:\n  \t            debugger;\n  \t            throw new Error(\"unknown type: \" + JSON.stringify(n.type));\n  \t    }\n  \t}\n  \tfunction printDecorators(path, printPath) {\n  \t    var parts = [];\n  \t    var node = path.getValue();\n  \t    if (node.decorators &&\n  \t        node.decorators.length > 0 &&\n  \t        // If the parent node is an export declaration, it will be\n  \t        // responsible for printing node.decorators.\n  \t        !util$1.getParentExportDeclaration(path)) {\n  \t        path.each(function (decoratorPath) {\n  \t            parts.push(printPath(decoratorPath), \"\\n\");\n  \t        }, \"decorators\");\n  \t    }\n  \t    else if (util$1.isExportDeclaration(node) &&\n  \t        node.declaration &&\n  \t        node.declaration.decorators) {\n  \t        // Export declarations are responsible for printing any decorators\n  \t        // that logically apply to node.declaration.\n  \t        path.each(function (decoratorPath) {\n  \t            parts.push(printPath(decoratorPath), \"\\n\");\n  \t        }, \"declaration\", \"decorators\");\n  \t    }\n  \t    return (0, lines_1.concat)(parts);\n  \t}\n  \tfunction printStatementSequence(path, options, print) {\n  \t    var filtered = [];\n  \t    var sawComment = false;\n  \t    var sawStatement = false;\n  \t    path.each(function (stmtPath) {\n  \t        var stmt = stmtPath.getValue();\n  \t        // Just in case the AST has been modified to contain falsy\n  \t        // \"statements,\" it's safer simply to skip them.\n  \t        if (!stmt) {\n  \t            return;\n  \t        }\n  \t        // Skip printing EmptyStatement nodes to avoid leaving stray\n  \t        // semicolons lying around.\n  \t        if (stmt.type === \"EmptyStatement\" &&\n  \t            !(stmt.comments && stmt.comments.length > 0)) {\n  \t            return;\n  \t        }\n  \t        if (namedTypes.Comment.check(stmt)) {\n  \t            // The pretty printer allows a dangling Comment node to act as\n  \t            // a Statement when the Comment can't be attached to any other\n  \t            // non-Comment node in the tree.\n  \t            sawComment = true;\n  \t        }\n  \t        else if (namedTypes.Statement.check(stmt)) {\n  \t            sawStatement = true;\n  \t        }\n  \t        else {\n  \t            // When the pretty printer encounters a string instead of an\n  \t            // AST node, it just prints the string. This behavior can be\n  \t            // useful for fine-grained formatting decisions like inserting\n  \t            // blank lines.\n  \t            isString.assert(stmt);\n  \t        }\n  \t        // We can't hang onto stmtPath outside of this function, because\n  \t        // it's just a reference to a mutable FastPath object, so we have\n  \t        // to go ahead and print it here.\n  \t        filtered.push({\n  \t            node: stmt,\n  \t            printed: print(stmtPath),\n  \t        });\n  \t    });\n  \t    if (sawComment) {\n  \t        (0, tiny_invariant_1.default)(sawStatement === false, \"Comments may appear as statements in otherwise empty statement \" +\n  \t            \"lists, but may not coexist with non-Comment nodes.\");\n  \t    }\n  \t    var prevTrailingSpace = null;\n  \t    var len = filtered.length;\n  \t    var parts = [];\n  \t    filtered.forEach(function (info, i) {\n  \t        var printed = info.printed;\n  \t        var stmt = info.node;\n  \t        var multiLine = printed.length > 1;\n  \t        var notFirst = i > 0;\n  \t        var notLast = i < len - 1;\n  \t        var leadingSpace;\n  \t        var trailingSpace;\n  \t        var lines = stmt && stmt.loc && stmt.loc.lines;\n  \t        var trueLoc = lines && options.reuseWhitespace && util$1.getTrueLoc(stmt, lines);\n  \t        if (notFirst) {\n  \t            if (trueLoc) {\n  \t                var beforeStart = lines.skipSpaces(trueLoc.start, true);\n  \t                var beforeStartLine = beforeStart ? beforeStart.line : 1;\n  \t                var leadingGap = trueLoc.start.line - beforeStartLine;\n  \t                leadingSpace = Array(leadingGap + 1).join(\"\\n\");\n  \t            }\n  \t            else {\n  \t                leadingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n  \t            }\n  \t        }\n  \t        else {\n  \t            leadingSpace = \"\";\n  \t        }\n  \t        if (notLast) {\n  \t            if (trueLoc) {\n  \t                var afterEnd = lines.skipSpaces(trueLoc.end);\n  \t                var afterEndLine = afterEnd ? afterEnd.line : lines.length;\n  \t                var trailingGap = afterEndLine - trueLoc.end.line;\n  \t                trailingSpace = Array(trailingGap + 1).join(\"\\n\");\n  \t            }\n  \t            else {\n  \t                trailingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n  \t            }\n  \t        }\n  \t        else {\n  \t            trailingSpace = \"\";\n  \t        }\n  \t        parts.push(maxSpace(prevTrailingSpace, leadingSpace), printed);\n  \t        if (notLast) {\n  \t            prevTrailingSpace = trailingSpace;\n  \t        }\n  \t        else if (trailingSpace) {\n  \t            parts.push(trailingSpace);\n  \t        }\n  \t    });\n  \t    return (0, lines_1.concat)(parts);\n  \t}\n  \tfunction maxSpace(s1, s2) {\n  \t    if (!s1 && !s2) {\n  \t        return (0, lines_1.fromString)(\"\");\n  \t    }\n  \t    if (!s1) {\n  \t        return (0, lines_1.fromString)(s2);\n  \t    }\n  \t    if (!s2) {\n  \t        return (0, lines_1.fromString)(s1);\n  \t    }\n  \t    var spaceLines1 = (0, lines_1.fromString)(s1);\n  \t    var spaceLines2 = (0, lines_1.fromString)(s2);\n  \t    if (spaceLines2.length > spaceLines1.length) {\n  \t        return spaceLines2;\n  \t    }\n  \t    return spaceLines1;\n  \t}\n  \tfunction printClassMemberModifiers(node) {\n  \t    var parts = [];\n  \t    if (node.declare) {\n  \t        parts.push(\"declare \");\n  \t    }\n  \t    var access = node.accessibility || node.access;\n  \t    if (typeof access === \"string\") {\n  \t        parts.push(access, \" \");\n  \t    }\n  \t    if (node.static) {\n  \t        parts.push(\"static \");\n  \t    }\n  \t    if (node.override) {\n  \t        parts.push(\"override \");\n  \t    }\n  \t    if (node.abstract) {\n  \t        parts.push(\"abstract \");\n  \t    }\n  \t    if (node.readonly) {\n  \t        parts.push(\"readonly \");\n  \t    }\n  \t    return parts;\n  \t}\n  \tfunction printMethod(path, options, print) {\n  \t    var node = path.getNode();\n  \t    var kind = node.kind;\n  \t    var parts = [];\n  \t    var nodeValue = node.value;\n  \t    if (!namedTypes.FunctionExpression.check(nodeValue)) {\n  \t        nodeValue = node;\n  \t    }\n  \t    parts.push.apply(parts, printClassMemberModifiers(node));\n  \t    if (nodeValue.async) {\n  \t        parts.push(\"async \");\n  \t    }\n  \t    if (nodeValue.generator) {\n  \t        parts.push(\"*\");\n  \t    }\n  \t    if (kind === \"get\" || kind === \"set\") {\n  \t        parts.push(kind, \" \");\n  \t    }\n  \t    var key = path.call(print, \"key\");\n  \t    if (node.computed) {\n  \t        key = (0, lines_1.concat)([\"[\", key, \"]\"]);\n  \t    }\n  \t    parts.push(key);\n  \t    if (node.optional) {\n  \t        parts.push(\"?\");\n  \t    }\n  \t    if (node === nodeValue) {\n  \t        parts.push(path.call(print, \"typeParameters\"), \"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n  \t        if (node.body) {\n  \t            parts.push(\" \", path.call(print, \"body\"));\n  \t        }\n  \t        else {\n  \t            parts.push(\";\");\n  \t        }\n  \t    }\n  \t    else {\n  \t        parts.push(path.call(print, \"value\", \"typeParameters\"), \"(\", path.call(function (valuePath) { return printFunctionParams(valuePath, options, print); }, \"value\"), \")\", path.call(print, \"value\", \"returnType\"));\n  \t        if (nodeValue.body) {\n  \t            parts.push(\" \", path.call(print, \"value\", \"body\"));\n  \t        }\n  \t        else {\n  \t            parts.push(\";\");\n  \t        }\n  \t    }\n  \t    return (0, lines_1.concat)(parts);\n  \t}\n  \tfunction printArgumentsList(path, options, print) {\n  \t    var printed = path.map(print, \"arguments\");\n  \t    var trailingComma = util$1.isTrailingCommaEnabled(options, \"parameters\");\n  \t    var joined = (0, lines_1.fromString)(\", \").join(printed);\n  \t    if (joined.getLineLength(1) > options.wrapColumn) {\n  \t        joined = (0, lines_1.fromString)(\",\\n\").join(printed);\n  \t        return (0, lines_1.concat)([\n  \t            \"(\\n\",\n  \t            joined.indent(options.tabWidth),\n  \t            trailingComma ? \",\\n)\" : \"\\n)\",\n  \t        ]);\n  \t    }\n  \t    return (0, lines_1.concat)([\"(\", joined, \")\"]);\n  \t}\n  \tfunction printFunctionParams(path, options, print) {\n  \t    var fun = path.getValue();\n  \t    var params;\n  \t    var printed = [];\n  \t    if (fun.params) {\n  \t        params = fun.params;\n  \t        printed = path.map(print, \"params\");\n  \t    }\n  \t    else if (fun.parameters) {\n  \t        params = fun.parameters;\n  \t        printed = path.map(print, \"parameters\");\n  \t    }\n  \t    if (fun.defaults) {\n  \t        path.each(function (defExprPath) {\n  \t            var i = defExprPath.getName();\n  \t            var p = printed[i];\n  \t            if (p && defExprPath.getValue()) {\n  \t                printed[i] = (0, lines_1.concat)([p, \" = \", print(defExprPath)]);\n  \t            }\n  \t        }, \"defaults\");\n  \t    }\n  \t    if (fun.rest) {\n  \t        printed.push((0, lines_1.concat)([\"...\", path.call(print, \"rest\")]));\n  \t    }\n  \t    var joined = (0, lines_1.fromString)(\", \").join(printed);\n  \t    if (joined.length > 1 || joined.getLineLength(1) > options.wrapColumn) {\n  \t        joined = (0, lines_1.fromString)(\",\\n\").join(printed);\n  \t        if (util$1.isTrailingCommaEnabled(options, \"parameters\") &&\n  \t            !fun.rest &&\n  \t            params[params.length - 1].type !== \"RestElement\") {\n  \t            joined = (0, lines_1.concat)([joined, \",\\n\"]);\n  \t        }\n  \t        else {\n  \t            joined = (0, lines_1.concat)([joined, \"\\n\"]);\n  \t        }\n  \t        return (0, lines_1.concat)([\"\\n\", joined.indent(options.tabWidth)]);\n  \t    }\n  \t    return joined;\n  \t}\n  \tfunction maybePrintImportAssertions(path, options, print) {\n  \t    var n = path.getValue();\n  \t    if (n.assertions && n.assertions.length > 0) {\n  \t        var parts = [\" assert {\"];\n  \t        var printed = path.map(print, \"assertions\");\n  \t        var flat = (0, lines_1.fromString)(\", \").join(printed);\n  \t        if (flat.length > 1 || flat.getLineLength(1) > options.wrapColumn) {\n  \t            parts.push(\"\\n\", (0, lines_1.fromString)(\",\\n\").join(printed).indent(options.tabWidth), \"\\n}\");\n  \t        }\n  \t        else {\n  \t            parts.push(\" \", flat, \" }\");\n  \t        }\n  \t        return (0, lines_1.concat)(parts);\n  \t    }\n  \t    return (0, lines_1.fromString)(\"\");\n  \t}\n  \tfunction printExportDeclaration(path, options, print) {\n  \t    var decl = path.getValue();\n  \t    var parts = [\"export \"];\n  \t    if (decl.exportKind && decl.exportKind === \"type\") {\n  \t        if (!decl.declaration) {\n  \t            parts.push(\"type \");\n  \t        }\n  \t    }\n  \t    var shouldPrintSpaces = options.objectCurlySpacing;\n  \t    namedTypes.Declaration.assert(decl);\n  \t    if (decl[\"default\"] || decl.type === \"ExportDefaultDeclaration\") {\n  \t        parts.push(\"default \");\n  \t    }\n  \t    if (decl.declaration) {\n  \t        parts.push(path.call(print, \"declaration\"));\n  \t    }\n  \t    else if (decl.specifiers) {\n  \t        if (decl.specifiers.length === 1 &&\n  \t            decl.specifiers[0].type === \"ExportBatchSpecifier\") {\n  \t            parts.push(\"*\");\n  \t        }\n  \t        else if (decl.specifiers.length === 0) {\n  \t            parts.push(\"{}\");\n  \t        }\n  \t        else if (decl.specifiers[0].type === \"ExportDefaultSpecifier\" ||\n  \t            decl.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n  \t            var unbracedSpecifiers_2 = [];\n  \t            var bracedSpecifiers_2 = [];\n  \t            path.each(function (specifierPath) {\n  \t                var spec = specifierPath.getValue();\n  \t                if (spec.type === \"ExportDefaultSpecifier\" ||\n  \t                    spec.type === \"ExportNamespaceSpecifier\") {\n  \t                    unbracedSpecifiers_2.push(print(specifierPath));\n  \t                }\n  \t                else {\n  \t                    bracedSpecifiers_2.push(print(specifierPath));\n  \t                }\n  \t            }, \"specifiers\");\n  \t            unbracedSpecifiers_2.forEach(function (lines, i) {\n  \t                if (i > 0) {\n  \t                    parts.push(\", \");\n  \t                }\n  \t                parts.push(lines);\n  \t            });\n  \t            if (bracedSpecifiers_2.length > 0) {\n  \t                var lines_2 = (0, lines_1.fromString)(\", \").join(bracedSpecifiers_2);\n  \t                if (lines_2.getLineLength(1) > options.wrapColumn) {\n  \t                    lines_2 = (0, lines_1.concat)([\n  \t                        (0, lines_1.fromString)(\",\\n\").join(bracedSpecifiers_2).indent(options.tabWidth),\n  \t                        \",\",\n  \t                    ]);\n  \t                }\n  \t                if (unbracedSpecifiers_2.length > 0) {\n  \t                    parts.push(\", \");\n  \t                }\n  \t                if (lines_2.length > 1) {\n  \t                    parts.push(\"{\\n\", lines_2, \"\\n}\");\n  \t                }\n  \t                else if (options.objectCurlySpacing) {\n  \t                    parts.push(\"{ \", lines_2, \" }\");\n  \t                }\n  \t                else {\n  \t                    parts.push(\"{\", lines_2, \"}\");\n  \t                }\n  \t            }\n  \t        }\n  \t        else {\n  \t            parts.push(shouldPrintSpaces ? \"{ \" : \"{\", (0, lines_1.fromString)(\", \").join(path.map(print, \"specifiers\")), shouldPrintSpaces ? \" }\" : \"}\");\n  \t        }\n  \t        if (decl.source) {\n  \t            parts.push(\" from \", path.call(print, \"source\"), maybePrintImportAssertions(path, options, print));\n  \t        }\n  \t    }\n  \t    var lines = (0, lines_1.concat)(parts);\n  \t    if (lastNonSpaceCharacter(lines) !== \";\" &&\n  \t        !(decl.declaration &&\n  \t            (decl.declaration.type === \"FunctionDeclaration\" ||\n  \t                decl.declaration.type === \"ClassDeclaration\" ||\n  \t                decl.declaration.type === \"TSModuleDeclaration\" ||\n  \t                decl.declaration.type === \"TSInterfaceDeclaration\" ||\n  \t                decl.declaration.type === \"TSEnumDeclaration\"))) {\n  \t        lines = (0, lines_1.concat)([lines, \";\"]);\n  \t    }\n  \t    return lines;\n  \t}\n  \tfunction printFlowDeclaration(path, parts) {\n  \t    var parentExportDecl = util$1.getParentExportDeclaration(path);\n  \t    if (parentExportDecl) {\n  \t        (0, tiny_invariant_1.default)(parentExportDecl.type === \"DeclareExportDeclaration\");\n  \t    }\n  \t    else {\n  \t        // If the parent node has type DeclareExportDeclaration, then it\n  \t        // will be responsible for printing the \"declare\" token. Otherwise\n  \t        // it needs to be printed with this non-exported declaration node.\n  \t        parts.unshift(\"declare \");\n  \t    }\n  \t    return (0, lines_1.concat)(parts);\n  \t}\n  \tfunction printVariance(path, print) {\n  \t    return path.call(function (variancePath) {\n  \t        var value = variancePath.getValue();\n  \t        if (value) {\n  \t            if (value === \"plus\") {\n  \t                return (0, lines_1.fromString)(\"+\");\n  \t            }\n  \t            if (value === \"minus\") {\n  \t                return (0, lines_1.fromString)(\"-\");\n  \t            }\n  \t            return print(variancePath);\n  \t        }\n  \t        return (0, lines_1.fromString)(\"\");\n  \t    }, \"variance\");\n  \t}\n  \tfunction adjustClause(clause, options) {\n  \t    if (clause.length > 1)\n  \t        return (0, lines_1.concat)([\" \", clause]);\n  \t    return (0, lines_1.concat)([\"\\n\", maybeAddSemicolon(clause).indent(options.tabWidth)]);\n  \t}\n  \tfunction lastNonSpaceCharacter(lines) {\n  \t    var pos = lines.lastPos();\n  \t    do {\n  \t        var ch = lines.charAt(pos);\n  \t        if (/\\S/.test(ch))\n  \t            return ch;\n  \t    } while (lines.prevPos(pos));\n  \t}\n  \tfunction endsWithBrace(lines) {\n  \t    return lastNonSpaceCharacter(lines) === \"}\";\n  \t}\n  \tfunction swapQuotes(str) {\n  \t    return str.replace(/['\"]/g, function (m) { return (m === '\"' ? \"'\" : '\"'); });\n  \t}\n  \tfunction getPossibleRaw(node) {\n  \t    var value = types.getFieldValue(node, \"value\");\n  \t    var extra = types.getFieldValue(node, \"extra\");\n  \t    if (extra && typeof extra.raw === \"string\" && value == extra.rawValue) {\n  \t        return extra.raw;\n  \t    }\n  \t    if (node.type === \"Literal\") {\n  \t        var raw = node.raw;\n  \t        if (typeof raw === \"string\" && value == raw) {\n  \t            return raw;\n  \t        }\n  \t    }\n  \t}\n  \tfunction jsSafeStringify(str) {\n  \t    return JSON.stringify(str).replace(/[\\u2028\\u2029]/g, function (m) {\n  \t        return \"\\\\u\" + m.charCodeAt(0).toString(16);\n  \t    });\n  \t}\n  \tfunction nodeStr(str, options) {\n  \t    isString.assert(str);\n  \t    switch (options.quote) {\n  \t        case \"auto\": {\n  \t            var double = jsSafeStringify(str);\n  \t            var single = swapQuotes(jsSafeStringify(swapQuotes(str)));\n  \t            return double.length > single.length ? single : double;\n  \t        }\n  \t        case \"single\":\n  \t            return swapQuotes(jsSafeStringify(swapQuotes(str)));\n  \t        case \"double\":\n  \t        default:\n  \t            return jsSafeStringify(str);\n  \t    }\n  \t}\n  \tfunction maybeAddSemicolon(lines) {\n  \t    var eoc = lastNonSpaceCharacter(lines);\n  \t    if (!eoc || \"\\n};\".indexOf(eoc) < 0)\n  \t        return (0, lines_1.concat)([lines, \";\"]);\n  \t    return lines;\n  \t}\n  \treturn printer;\n  }\n\n  (function (exports) {\n  \tObject.defineProperty(exports, \"__esModule\", { value: true });\n  \texports.run = exports.prettyPrint = exports.print = exports.visit = exports.types = exports.parse = void 0;\n  \tvar tslib_1 = require$$0;\n  \tvar fs_1 = tslib_1.__importDefault(require$$1);\n  \tvar types = tslib_1.__importStar(requireMain());\n  \texports.types = types;\n  \tvar parser_1 = requireParser();\n  \tObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parser_1.parse; } });\n  \tvar printer_1 = requirePrinter();\n  \t/**\n  \t * Traverse and potentially modify an abstract syntax tree using a\n  \t * convenient visitor syntax:\n  \t *\n  \t *   recast.visit(ast, {\n  \t *     names: [],\n  \t *     visitIdentifier: function(path) {\n  \t *       var node = path.value;\n  \t *       this.visitor.names.push(node.name);\n  \t *       this.traverse(path);\n  \t *     }\n  \t *   });\n  \t */\n  \tvar ast_types_1 = requireMain();\n  \tObject.defineProperty(exports, \"visit\", { enumerable: true, get: function () { return ast_types_1.visit; } });\n  \t/**\n  \t * Reprint a modified syntax tree using as much of the original source\n  \t * code as possible.\n  \t */\n  \tfunction print(node, options) {\n  \t    return new printer_1.Printer(options).print(node);\n  \t}\n  \texports.print = print;\n  \t/**\n  \t * Print without attempting to reuse any original source code.\n  \t */\n  \tfunction prettyPrint(node, options) {\n  \t    return new printer_1.Printer(options).printGenerically(node);\n  \t}\n  \texports.prettyPrint = prettyPrint;\n  \t/**\n  \t * Convenient command-line interface (see e.g. example/add-braces).\n  \t */\n  \tfunction run(transformer, options) {\n  \t    return runFile(process.argv[2], transformer, options);\n  \t}\n  \texports.run = run;\n  \tfunction runFile(path, transformer, options) {\n  \t    fs_1.default.readFile(path, \"utf-8\", function (err, code) {\n  \t        if (err) {\n  \t            console.error(err);\n  \t            return;\n  \t        }\n  \t        runString(code, transformer, options);\n  \t    });\n  \t}\n  \tfunction defaultWriteback(output) {\n  \t    process.stdout.write(output);\n  \t}\n  \tfunction runString(code, transformer, options) {\n  \t    var writeback = (options && options.writeback) || defaultWriteback;\n  \t    transformer((0, parser_1.parse)(code, options), function (node) {\n  \t        writeback(print(node, options).code);\n  \t    });\n  \t} \n  } (main$1));\n\n  const types = main$1.types;\n  const builders = main$1.types.builders;\n  const namedTypes = main$1.types.namedTypes;\n\n  const amd = {\n  \tdefine: false,\n  \trequire: false\n  };\n  const applescript = {\n  \t$: false,\n  \tApplication: false,\n  \tAutomation: false,\n  \tconsole: false,\n  \tdelay: false,\n  \tLibrary: false,\n  \tObjC: false,\n  \tObjectSpecifier: false,\n  \tPath: false,\n  \tProgress: false,\n  \tRef: false\n  };\n  const atomtest = {\n  \tadvanceClock: false,\n  \tatom: false,\n  \tfakeClearInterval: false,\n  \tfakeClearTimeout: false,\n  \tfakeSetInterval: false,\n  \tfakeSetTimeout: false,\n  \tresetTimeouts: false,\n  \twaitsForPromise: false\n  };\n  const browser = {\n  \tAbortController: false,\n  \tAbortSignal: false,\n  \tAbsoluteOrientationSensor: false,\n  \tAbstractRange: false,\n  \tAccelerometer: false,\n  \taddEventListener: false,\n  \tai: false,\n  \tAI: false,\n  \tAITextSession: false,\n  \talert: false,\n  \tAnalyserNode: false,\n  \tAnimation: false,\n  \tAnimationEffect: false,\n  \tAnimationEvent: false,\n  \tAnimationPlaybackEvent: false,\n  \tAnimationTimeline: false,\n  \tatob: false,\n  \tAttr: false,\n  \tAudio: false,\n  \tAudioBuffer: false,\n  \tAudioBufferSourceNode: false,\n  \tAudioContext: false,\n  \tAudioData: false,\n  \tAudioDecoder: false,\n  \tAudioDestinationNode: false,\n  \tAudioEncoder: false,\n  \tAudioListener: false,\n  \tAudioNode: false,\n  \tAudioParam: false,\n  \tAudioParamMap: false,\n  \tAudioProcessingEvent: false,\n  \tAudioScheduledSourceNode: false,\n  \tAudioSinkInfo: false,\n  \tAudioWorklet: false,\n  \tAudioWorkletGlobalScope: false,\n  \tAudioWorkletNode: false,\n  \tAudioWorkletProcessor: false,\n  \tAuthenticatorAssertionResponse: false,\n  \tAuthenticatorAttestationResponse: false,\n  \tAuthenticatorResponse: false,\n  \tBackgroundFetchManager: false,\n  \tBackgroundFetchRecord: false,\n  \tBackgroundFetchRegistration: false,\n  \tBarProp: false,\n  \tBaseAudioContext: false,\n  \tBatteryManager: false,\n  \tBeforeUnloadEvent: false,\n  \tBiquadFilterNode: false,\n  \tBlob: false,\n  \tBlobEvent: false,\n  \tBluetooth: false,\n  \tBluetoothCharacteristicProperties: false,\n  \tBluetoothDevice: false,\n  \tBluetoothRemoteGATTCharacteristic: false,\n  \tBluetoothRemoteGATTDescriptor: false,\n  \tBluetoothRemoteGATTServer: false,\n  \tBluetoothRemoteGATTService: false,\n  \tBluetoothUUID: false,\n  \tblur: false,\n  \tBroadcastChannel: false,\n  \tBrowserCaptureMediaStreamTrack: false,\n  \tbtoa: false,\n  \tByteLengthQueuingStrategy: false,\n  \tCache: false,\n  \tcaches: false,\n  \tCacheStorage: false,\n  \tcancelAnimationFrame: false,\n  \tcancelIdleCallback: false,\n  \tCanvasCaptureMediaStream: false,\n  \tCanvasCaptureMediaStreamTrack: false,\n  \tCanvasGradient: false,\n  \tCanvasPattern: f"
        },
        {
          "name": "riot+compiler.min.js",
          "type": "blob",
          "size": 336.1162109375,
          "content": "var e,t;e=this,t=function(e){\"use strict\";function t(e,t){return typeof e===t}function n(e){const t=e.ownerSVGElement;return!!t||null===t}function r(e){return\"template\"===e.tagName.toLowerCase()}function i(e){return t(e,\"function\")}function a(e){return!s(e)&&e.constructor===Object}function s(e){return null==e}function o(){return void 0!==globalThis.process}const l=0,c=1,u=2,p=3,h={ATTRIBUTE:0,EVENT:1,TEXT:2,VALUE:3};function d(e){return e.replace(/-(\\w)/g,((e,t)=>t.toUpperCase()))}function f(e,t){throw Error(e,{cause:t})}function m(e){const t=new Map,n=n=>(t.has(n)||t.set(n,e.call(this,n)))&&t.get(n);return n.cache=t,n}function y(e){return e.reduce(((e,t)=>{const{value:n,type:r}=t;switch(!0){case!t.name&&0===r:return{...e,...n};case 3===r:e.value=t.value;break;default:e[d(t.name)]=t.value}return e}),{})}const g=\"exports\",b=\"template\",v=\"riot\",x=\"RiotComponentWrapper\",S=\"RiotComponent\",E=\"javascript\",T=\"css\",_=\"template\",k=\"script\",P=\"style\",w=\"textarea\",A=\"isRaw\",C=\"isSelfClosing\",I=\"isVoid\",N=\"isBoolean\",O=\"isCustom\",D=\"isSpread\";var L=Object.freeze({__proto__:null,CSS_OUTPUT_NAME:\"css\",IS_BOOLEAN:N,IS_CUSTOM:O,IS_RAW:A,IS_SELF_CLOSING:C,IS_SPREAD:D,IS_VOID:I,JAVASCRIPT_OUTPUT_NAME:E,JAVASCRIPT_TAG:k,STYLE_TAG:P,TEMPLATE_OUTPUT_NAME:_,TEXTAREA_TAG:w}),j=Object.freeze({__proto__:null,ATTR:2,CDATA:4,COMMENT:8,DOCTYPE:10,DOCUMENT:9,DOCUMENT_FRAGMENT:11,TAG:1,TEXT:3});const M=/^(?:\\/[a-zA-Z]|[a-zA-Z][^\\s>/]?)/,B=/(\\/?[^\\s>/]+)\\s*(>)?/g,F=/(\\S[^>/=\\s]*)(?:\\s*=\\s*([^>/])?)?/g,V=/\\.\\.\\./,R={script:/<\\/script\\s*>/gi,style:/<\\/style\\s*>/gi,textarea:/<\\/textarea\\s*>/gi},q=/^\\/?(?:pre|textarea)$/;function U(e,t,n){return e.lastIndex=t,e.exec(n)}var z=e=>e.replace(/(?=[-[\\](){^*+?.$|\\\\])/g,\"\\\\\");function W(e,t,n){const r=/[`$\\\\]/g;let i;for(;r.lastIndex=t,r.exec(e);){if(i=e[(t=r.lastIndex)-1],\"`\"===i)return t;if(\"$\"===i&&\"{\"===e[t++])return n.push(\"`\",\"}\"),t}throw function(e,t,n){n||(n=e.length);const r=(e.slice(0,n).match(/\\r\\n?|\\n/g)||\"\").length+1;let i=0;for(;--n>=0&&!/[\\r\\n]/.test(e[n]);)++i;return`[${r},${i}]: Unclosed ES6 template literal.`}(e,0,t)}const G=\"[{(,;:?=|&!^~>%*/\",J=G+\"+-\",$=[\"case\",\"default\",\"do\",\"else\",\"in\",\"instanceof\",\"prefix\",\"return\",\"typeof\",\"void\",\"yield\"],H=$.reduce(((e,t)=>e+t.slice(-1)),\"\"),K=/^\\/(?=[^*>/])[^[/\\\\]*(?:(?:\\\\.|\\[(?:\\\\.|[^\\]\\\\]*)*\\])[^[\\\\/]*)*?\\/[gimuy]*/,X=/[$\\w]/,Y=/.*/g;function Q(e,t){for(;--t>=0&&/\\s/.test(e[t]););return t}const Z=/'[^'\\n\\r\\\\]*(?:\\\\(?:\\r\\n?|[\\S\\s])[^'\\n\\r\\\\]*)*'/.source,ee=`${Z}|${Z.replace(/'/g,'\"')}`,te={};function ne(e,t,n,r){let i=0;switch(t){case\"[\":case\"(\":case\"{\":e.push(\"[\"===t?\"]\":\"(\"===t?\")\":\"}\");break;case\")\":case\"]\":case\"}\":e.pop(),\"}\"===t&&\"`\"===e[e.length-1]&&(t=e.pop()),i=n+1;break;case\"/\":i=function(e,t){let n=Y.lastIndex=t++;const r=(Y.exec(e)||\" \")[0].match(K);if(r){const i=n+r[0].length;n=Q(e,n);let a=e[n];if(n<0||G.includes(a))return i;if(\".\"===a)\".\"===e[n-1]&&(t=i);else{if((\"+\"===a||\"-\"===a)&&(e[--n]!==a||(n=Q(e,n))<0||J.includes(a=e[n])))return i;if(H.includes(a)){const r=n+1;for(;--n>=0&&X.test(e[n]););$.includes(e.slice(n+1,r))&&(t=i)}}}return t}(r,n)}return{char:t,index:i}}function re(e,t,n){const[r,i]=n,a=t+r.length,s=[],o=function(e){let t=te[e];if(!t){let n=z(e);e.length>1?n+=\"|[\":n=/[{}[\\]()]/.test(e)?\"[\":\"[\"+n,te[e]=t=RegExp(`${ee}|${n}\\`/\\\\{}[\\\\]()]`,\"g\")}return t}(i);let l,c;for(o.lastIndex=a;c=o.exec(e);){const n=c.index,r=c[0];if(l=o.lastIndex,r===i&&!s.length)return{text:e.slice(a,n),start:t,end:l};const{char:u,index:p}=ne(s,r[0],n,e);l=p||l,o.lastIndex=\"`\"===u?W(e,l,s):l}}function ie(e){const t=e.last;e.last=null,t&&e.root&&e.builder.push(t)}function ae(e,t,n){return e.slice(t,n)}function se(e,t,n,r={}){const i=ae(e.data,t,n),a=r.expressions,s=r.unescape;let o=e.last;return e.pos=n,o&&3===o.type?(o.text+=i,o.end=n):(ie(e),e.last=o={type:3,text:i,start:t,end:n}),a&&a.length&&(o.expressions=(o.expressions||[]).concat(a)),s&&(o.unescape=s),3}function oe(e,t,n,r){const i=function(e,t){const{brackets:n}=e.options,r=e.regexCache[t];if(r)return r;const i=z(n[0]);return Object.assign(e.regexCache,{[t]:RegExp(`(${t})|${i}`,\"g\")}),e.regexCache[t]}(e,n);i.lastIndex=r;const{unescape:a,expressions:s,end:o}=function(e,t){const{data:n,options:r}=e,{brackets:i}=r,a=[];let s,o,l;for(;(l=t.exec(n))&&!l[1];)if(o=l.index,\"\\\\\"===n[o-1])s=l[0];else{const e=re(n,o,i);e&&(a.push(e),t.lastIndex=e.end)}return{unescape:s,expressions:a,end:l.index}}(e,i);return t?(a&&(t.unescape=a),s.length&&(t.expressions=s)):se(e,r,o,{expressions:s,unescape:a}),o}const le=e=>e.filter(((e,t,n)=>n.indexOf(e)===t)),ce=[\"circle\",\"ellipse\",\"line\",\"path\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"use\"],ue=[\"button\",\"data\",\"input\",\"select\",\"li\",\"meter\",\"option\",\"output\",\"progress\",\"textarea\",\"param\"],pe=le([\"a\",\"altGlyph\",\"altGlyphDef\",\"altGlyphItem\",\"animate\",\"animateColor\",\"animateMotion\",\"animateTransform\",\"animation\",\"audio\",\"canvas\",\"clipPath\",\"color-profile\",\"cursor\",\"defs\",\"desc\",\"discard\",\"feBlend\",\"feColorMatrix\",\"feComponentTransfer\",\"feComposite\",\"feConvolveMatrix\",\"feDiffuseLighting\",\"feDisplacementMap\",\"feDistantLight\",\"feDropShadow\",\"feFlood\",\"feFuncA\",\"feFuncB\",\"feFuncG\",\"feFuncR\",\"feGaussianBlur\",\"feImage\",\"feMerge\",\"feMergeNode\",\"feMorphology\",\"feOffset\",\"fePointLight\",\"feSpecularLighting\",\"feSpotLight\",\"feTile\",\"feTurbulence\",\"filter\",\"font\",\"font-face\",\"font-face-format\",\"font-face-name\",\"font-face-src\",\"font-face-uri\",\"foreignObject\",\"g\",\"glyph\",\"glyphRef\",\"handler\",\"hatch\",\"hatchpath\",\"hkern\",\"iframe\",\"image\",\"linearGradient\",\"listener\",\"marker\",\"mask\",\"mesh\",\"meshgradient\",\"meshpatch\",\"meshrow\",\"metadata\",\"missing-glyph\",\"mpath\",\"pattern\",\"prefetch\",\"radialGradient\",\"script\",\"set\",\"solidColor\",\"solidcolor\",\"style\",\"svg\",\"switch\",\"symbol\",\"tbreak\",\"text\",\"textArea\",\"textPath\",\"title\",\"tref\",\"tspan\",\"unknown\",\"video\",\"view\",\"vkern\"].concat(ce)).sort(),he=[\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"menuitem\",\"meta\",\"param\",\"source\",\"track\",\"wbr\"];function de(e){return e.join(\"|\")}function fe(...e){return RegExp(`^/?(?:${de(e.map(de))})$`,\"i\")}const me=fe(le([\"a\",\"abbr\",\"address\",\"article\",\"aside\",\"audio\",\"b\",\"bdi\",\"bdo\",\"blockquote\",\"body\",\"canvas\",\"caption\",\"cite\",\"code\",\"colgroup\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"html\",\"i\",\"iframe\",\"ins\",\"kbd\",\"label\",\"legend\",\"main\",\"map\",\"mark\",\"math\",\"menu\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"p\",\"picture\",\"pre\",\"q\",\"rb\",\"rp\",\"rt\",\"rtc\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"slot\",\"small\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"svg\",\"table\",\"tbody\",\"td\",\"template\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"u\",\"ul\",\"var\",\"video\"].concat(he).concat(ue)).sort()),ye=fe(pe),ge=fe(he),be=fe(ce);fe(ue);const ve=fe([\"disabled\",\"visible\",\"checked\",\"readonly\",\"required\",\"allowfullscreen\",\"autofocus\",\"autoplay\",\"compact\",\"controls\",\"default\",\"formnovalidate\",\"hidden\",\"ismap\",\"itemscope\",\"loop\",\"multiple\",\"muted\",\"noresize\",\"noshade\",\"novalidate\",\"nowrap\",\"open\",\"reversed\",\"seamless\",\"selected\",\"sortable\",\"truespeed\",\"typemustmatch\"]),xe=function(){const e=new WeakMap;return(...t)=>{if(e.has(t[0]))return e.get(t[0]);const n=(e=>RegExp(`(${e[0]}[^${e[1]}]*?${e[1]})`,\"g\"))(...t);return e.set(t[0],n),n}}(),Se=(e,t)=>oe(e,t,\"[>/\\\\s]\",t.start);function Ee(e,...t){return(...n)=>(n=[...t,...n]).length<e.length?Ee(e,...n):e(...n)}function Te(e,t,n,r){const i=e.root,a={type:1,name:t,start:n,end:r};var s;s=t,[me,ye].every((e=>!e.test(s)))&&(a[O]=!0),function(e){return[ge,be].some((t=>t.test(e)))}(t)&&(a[I]=!0),e.pos=r,i?(t===i.name?e.count++:t===i.close&&e.count--,ie(e)):(e.root={name:a.name,close:\"/\"+t},e.count=1),e.last=a}function _e(e){return e.replace(/\\r/g,\"\\\\r\").replace(/\\n/g,\"\\\\n\")}function ke(e){return e.replace(/\\\\/g,\"\\\\\\\\\")}const Pe=Object.seal({get(){const e=this.store;return{[_]:e.root.nodes[0],[T]:e[P],[E]:e[k]}},push(e){const t=this.store;switch(e.type){case 8:this.pushComment(t,e);break;case 3:this.pushText(t,e);break;case 1:{const n=e.name,r=\"/\",[i]=n;i!==r||e.isVoid?i!==r&&this.openTag(t,e):this.closeTag(t,e,n);break}}},pushComment(e,t){e.last.nodes.push(t)},closeTag(e,t){(e.scryle||e.last).end=t.end,e.root.nodes[0]&&(e.root.nodes[0].end=t.end),e.scryle?e.scryle=null:e.last=e.stack.pop()},openTag(e,t){const n=t.name,r=t.attributes,i=k===n&&!(e=>(e.attributes||[]).some((e=>\"src\"===e.name)))(t)||n===P;if(i)e[n]&&(this.store.data,t.start),e[n]=t,e.scryle=e[n];else{const r=e.last,i=t;r.nodes.push(i),(r[A]||q.test(n))&&(t[A]=!0),t[C]||t[I]||(e.stack.push(r),i.nodes=[],e.last=i)}r&&this.attrs(r)},attrs(e){e.forEach((e=>{e.value&&this.split(e,e.value,e.valueStart,!0)}))},pushText(e,t){const n=t.text,r=!/\\S/.test(n),i=e.scryle;if(i)r||(i.text=t);else{const i=e.last,a=this.compact&&!i[A];if(a&&r)return;this.split(t,n,t.start,a),i.nodes.push(t)}},split(e,t,n,r){const i=e.expressions,a=[];if(i){let s=0;i.forEach((i=>{const o=t.slice(s,i.start-n),l=i.text;a.push(this.sanitise(e,o,r),_e(ke(l).trim())),s=i.end-n})),s<e.end&&a.push(this.sanitise(e,t.slice(s),r))}else a[0]=this.sanitise(e,t,r);e.parts=a.filter((e=>e))},sanitise(e,t,n){let r=e.unescape;if(r){let e=0;for(r=\"\\\\\"+r;-1!==(e=t.indexOf(r,e));)t=t.substr(0,e)+t.substr(e+1),e++}return t=ke(t),n?t.replace(/\\s+/g,\" \"):_e(t)}});function we(e,t){const n={type:1,name:\"\",start:0,end:0,nodes:[]};return Object.assign(Object.create(Pe),{compact:!1!==t.compact,store:{last:n,stack:[],scryle:null,root:n,style:null,script:null,data:e}})}function Ae(e,t){const n=Ee(Ce)(e,we);return{parse:e=>function(e){const{data:t}=e;return Ie(e),ie(e),e.count&&(e.count,e.pos),{data:t,output:e.builder.get()}}(n(e))}}function Ce(e,t,n){const r=Object.assign({brackets:[\"{\",\"}\"]},e);return{options:r,regexCache:{},pos:0,count:-1,root:null,last:null,scryle:null,builder:t(n,r),data:n}}function Ie(e,t){const{data:n}=e,r=n.length;e.pos<r&&e.count&&Ie(e,function(e,t){switch(t){case 1:return function(e){const{pos:t,data:n}=e,r=t-1,i=n.substr(t,2);switch(!0){case\"!\"===i[0]:return function(e,t,n){const r=n+2,i=\"--\"===t.substr(r,2)?\"--\\x3e\":\">\",a=t.indexOf(i,r);return function(e,t,n,r){e.pos=n,!0===e.options.comments&&(ie(e),e.last={type:8,start:t,end:n,text:r})}(e,n,a+i.length,t.substring(n,a+i.length)),3}(e,n,r);case M.test(i):return function(e,t){const{data:n,pos:r}=e,i=B,a=U(i,r,n),s=i.lastIndex,o=a[1].toLowerCase();return o in R&&(e.scryle=o),Te(e,o,t,s),a[2]?3:2}(e,r);default:return se(e,r,t)}}(e);case 2:return function(e){const{data:t,last:n,pos:r,root:i}=e,a=n,s=/\\S/g,o=U(s,r,t);switch(!0){case!o:e.pos=t.length;break;case\">\"===o[0]:return e.pos=a.end=s.lastIndex,a[C]&&(e.scryle=null,i&&i.name===a.name&&e.count--),3;case\"/\"===o[0]:e.pos=s.lastIndex,a[C]=!0;break;default:delete a[C],function(e,t,n){const{data:r}=e,i=xe(e.options.brackets),a=F,s=a.lastIndex=i.lastIndex=t,o=a.exec(r),l=(u=o[1],p=e.options.brackets,u[0]===p[0]),c=l?[null,i.exec(r)[1],null]:o;var u,p;if(c){const t=function(e,t,n,r,i){const a={name:t[1],value:\"\",start:n,end:r},s=t[2];switch(!0){case(e=>V.test(e))(a.name):return function(e,t){const n=Se(e,t);return{[D]:!0,start:t.start,expressions:t.expressions.map((e=>Object.assign(e,{text:e.text.replace(V,\"\").trim()}))),end:n}}(e,a);case!0===i:return function(e,t){const n=Se(e,t);return{start:t.start,name:t.expressions[0].text.trim(),expressions:t.expressions,end:n}}(e,a);default:return function(e,t,n){const{data:r}=e;let{end:i}=t;var a;if(a=t.name,ve.test(a)&&(t[N]=!0),n){let a=i;return'\"'!==n&&\"'\"!==n&&(n=\"\",a--),i=oe(e,t,n||\"[>/\\\\s]\",a),Object.assign(t,{value:ae(r,a,i),valueStart:a,end:n?++i:i})}return t}(e,a,s)}}(e,c,s,a.lastIndex,l);e.pos=n.end=t.end,n.attributes=function(e=[],t){return e.push(t),e}(n.attributes,t)}}(e,o.index,a)}return 2}(e);default:return function(e){const{pos:t,data:n,scryle:r}=e;switch(!0){case\"string\"==typeof r:{const i=r,a=R[i],s=U(a,t,n),o=s.index,l=a.lastIndex;e.scryle=null,o>t&&function(e,t,n){const{pos:r}=e,i=n.index;t===w?oe(e,null,n[0],r):se(e,r,i)}(e,i,s),Te(e,\"/\"+i,o,l);break}case\"<\"===n[t]:return e.pos++,1;default:oe(e,null,\"<\",t)}return 3}(e)}}(e,t))}const Ne=L,Oe=j,De=\"bindingTypes\",Le=\"expressionTypes\",je=\"template\",Me=\"getComponent\",Be=\"type\",Fe=\"evaluate\",Ve=\"name\",Re=\"attributes\",qe=\"if\",Ue=\"each\",ze=\"key\",We=\"slot\",Ge=\"name\",Je=\"is\";Ne.IS_RAW;const $e=Ne.IS_VOID,He=Ne.IS_CUSTOM,Ke=Ne.IS_BOOLEAN,Xe=Ne.IS_SPREAD;function Ye(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}function Qe(e){if(e.__esModule)return e;var t=e.default;if(\"function\"==typeof t){var n=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,\"__esModule\",{value:!0}),Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),n}var Ze={},et=function(e,t){return et=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},et(e,t)};function tt(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+t+\" is not a constructor or null\");function n(){this.constructor=e}et(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var nt=function(){return nt=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},nt.apply(this,arguments)};function rt(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n}function it(e,t,n,r){var i,a=arguments.length,s=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(i=e[o])&&(s=(a<3?i(s):a>3?i(t,n,s):i(t,n))||s);return a>3&&s&&Object.defineProperty(t,n,s),s}function at(e,t){return function(n,r){t(n,r,e)}}function st(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function ot(e,t,n,r){return new(n||(n=Promise))((function(i,a){function s(e){try{l(r.next(e))}catch(e){a(e)}}function o(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}l((r=r.apply(e,t||[])).next())}))}function lt(e,t){var n,r,i,a,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(o){return function(l){return function(o){if(n)throw new TypeError(\"Generator is already executing.\");for(;a&&(a=0,o[0]&&(s=0)),s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}var ct=Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!(\"get\"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]};function ut(e,t){for(var n in e)\"default\"===n||Object.prototype.hasOwnProperty.call(t,n)||ct(t,e,n)}function pt(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function ht(e,t){var n=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)s.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return s}function dt(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(ht(arguments[t]));return e}function ft(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),i=0;for(t=0;t<n;t++)for(var a=arguments[t],s=0,o=a.length;s<o;s++,i++)r[i]=a[s];return r}function mt(e,t,n){if(n||2===arguments.length)for(var r,i=0,a=t.length;i<a;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}function yt(e){return this instanceof yt?(this.v=e,this):new yt(e)}function gt(e,t,n){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var r,i=n.apply(e,t||[]),a=[];return r={},s(\"next\"),s(\"throw\"),s(\"return\"),r[Symbol.asyncIterator]=function(){return this},r;function s(e){i[e]&&(r[e]=function(t){return new Promise((function(n,r){a.push([e,t,n,r])>1||o(e,t)}))})}function o(e,t){try{(n=i[e](t)).value instanceof yt?Promise.resolve(n.value.v).then(l,c):u(a[0][2],n)}catch(e){u(a[0][3],e)}var n}function l(e){o(\"next\",e)}function c(e){o(\"throw\",e)}function u(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}}function bt(e){var t,n;return t={},r(\"next\"),r(\"throw\",(function(e){throw e})),r(\"return\"),t[Symbol.iterator]=function(){return this},t;function r(r,i){t[r]=e[r]?function(t){return(n=!n)?{value:yt(e[r](t)),done:!1}:i?i(t):t}:i}}function vt(e){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=pt(e),t={},r(\"next\"),r(\"throw\"),r(\"return\"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,i){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,i,(t=e[n](t)).done,t.value)}))}}}function xt(e,t){return Object.defineProperty?Object.defineProperty(e,\"raw\",{value:t}):e.raw=t,e}var St=Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t};function Et(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\"default\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&ct(t,e,n);return St(t,e),t}function Tt(e){return e&&e.__esModule?e:{default:e}}function _t(e,t,n,r){if(\"a\"===n&&!r)throw new TypeError(\"Private accessor was defined without a getter\");if(\"function\"==typeof t?e!==t||!r:!t.has(e))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return\"m\"===n?r:\"a\"===n?r.call(e):r?r.value:t.get(e)}function kt(e,t,n,r,i){if(\"m\"===r)throw new TypeError(\"Private method is not writable\");if(\"a\"===r&&!i)throw new TypeError(\"Private accessor was defined without a setter\");if(\"function\"==typeof t?e!==t||!i:!t.has(e))throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");return\"a\"===r?i.call(e,n):i?i.value=n:t.set(e,n),n}function Pt(e,t){if(null===t||\"object\"!=typeof t&&\"function\"!=typeof t)throw new TypeError(\"Cannot use 'in' operator on non-object\");return\"function\"==typeof e?t===e:e.has(t)}function wt(e,t,n){if(null!=t){if(\"object\"!=typeof t&&\"function\"!=typeof t)throw new TypeError(\"Object expected.\");var r;if(n){if(!Symbol.asyncDispose)throw new TypeError(\"Symbol.asyncDispose is not defined.\");r=t[Symbol.asyncDispose]}if(void 0===r){if(!Symbol.dispose)throw new TypeError(\"Symbol.dispose is not defined.\");r=t[Symbol.dispose]}if(\"function\"!=typeof r)throw new TypeError(\"Object not disposable.\");e.stack.push({value:t,dispose:r,async:n})}else n&&e.stack.push({async:!0});return t}var At=\"function\"==typeof SuppressedError?SuppressedError:function(e,t,n){var r=Error(n);return r.name=\"SuppressedError\",r.error=e,r.suppressed=t,r};function Ct(e){function t(t){e.error=e.hasError?new At(t,e.error,\"An error was suppressed during disposal.\"):t,e.hasError=!0}return function n(){for(;e.stack.length;){var r=e.stack.pop();try{var i=r.dispose&&r.dispose.call(r.value);if(r.async)return Promise.resolve(i).then(n,(function(e){return t(e),n()}))}catch(e){t(e)}}if(e.hasError)throw e.error}()}var It,Nt,Ot={__extends:tt,__assign:nt,__rest:rt,__decorate:it,__param:at,__metadata:st,__awaiter:ot,__generator:lt,__createBinding:ct,__exportStar:ut,__values:pt,__read:ht,__spread:dt,__spreadArrays:ft,__spreadArray:mt,__await:yt,__asyncGenerator:gt,__asyncDelegator:bt,__asyncValues:vt,__makeTemplateObject:xt,__importStar:Et,__importDefault:Tt,__classPrivateFieldGet:_t,__classPrivateFieldSet:kt,__classPrivateFieldIn:Pt,__addDisposableResource:wt,__disposeResources:Ct},Dt=Object.freeze({__proto__:null,__addDisposableResource:wt,get __assign(){return nt},__asyncDelegator:bt,__asyncGenerator:gt,__asyncValues:vt,__await:yt,__awaiter:ot,__classPrivateFieldGet:_t,__classPrivateFieldIn:Pt,__classPrivateFieldSet:kt,__createBinding:ct,__decorate:it,__disposeResources:Ct,__esDecorate:function(e,t,n,r,i,a){function s(e){if(void 0!==e&&\"function\"!=typeof e)throw new TypeError(\"Function expected\");return e}for(var o,l=r.kind,c=\"getter\"===l?\"get\":\"setter\"===l?\"set\":\"value\",u=!t&&e?r.static?e:e.prototype:null,p=t||(u?Object.getOwnPropertyDescriptor(u,r.name):{}),h=!1,d=n.length-1;d>=0;d--){var f={};for(var m in r)f[m]=\"access\"===m?{}:r[m];for(var m in r.access)f.access[m]=r.access[m];f.addInitializer=function(e){if(h)throw new TypeError(\"Cannot add initializers after decoration has completed\");a.push(s(e||null))};var y=(0,n[d])(\"accessor\"===l?{get:p.get,set:p.set}:p[c],f);if(\"accessor\"===l){if(void 0===y)continue;if(null===y||\"object\"!=typeof y)throw new TypeError(\"Object expected\");(o=s(y.get))&&(p.get=o),(o=s(y.set))&&(p.set=o),(o=s(y.init))&&i.unshift(o)}else(o=s(y))&&(\"field\"===l?i.unshift(o):p[c]=o)}u&&Object.defineProperty(u,r.name,p),h=!0},__exportStar:ut,__extends:tt,__generator:lt,__importDefault:Tt,__importStar:Et,__makeTemplateObject:xt,__metadata:st,__param:at,__propKey:function(e){return\"symbol\"==typeof e?e:\"\".concat(e)},__read:ht,__rest:rt,__runInitializers:function(e,t,n){for(var r=arguments.length>2,i=0;i<t.length;i++)n=r?t[i].call(e,n):t[i].call(e);return r?n:void 0},__setFunctionName:function(e,t,n){return\"symbol\"==typeof t&&(t=t.description?\"[\".concat(t.description,\"]\"):\"\"),Object.defineProperty(e,\"name\",{configurable:!0,value:n?\"\".concat(n,\" \",t):t})},__spread:dt,__spreadArray:mt,__spreadArrays:ft,__values:pt,default:Ot}),Lt=Qe(Dt),jt={},Mt={exports:{}},Bt={exports:{}},Ft={};function Vt(){if(It)return Ft;It=1,Object.defineProperty(Ft,\"__esModule\",{value:!0}),Ft.maybeSetModuleExports=void 0;var e=Lt.__importDefault(Rt());return Ft.default=function(t){var n=t.use(e.default),r=n.Type,i=n.builtInTypes,a=i.number,s=r.or(i.string,i.number,i.boolean,i.null,i.undefined);return{geq:function(e){return r.from((function(t){return a.check(t)&&t>=e}),a+\" >= \"+e)},defaults:{null:function(){return null},emptyArray:function(){return[]},false:function(){return!1},true:function(){return!0},undefined:function(){},\"use strict\":function(){return\"use strict\"}},isPrimitive:r.from((function(e){if(null===e)return!0;var t=typeof e;return\"object\"!==t&&\"function\"!==t}),s.toString())}},Ft.maybeSetModuleExports=function(e){try{var t=e(),n=t.exports,r=n.default}catch(e){return}r&&r!==n&&\"object\"==typeof n&&(Object.assign(r,n,{default:r}),n.__esModule&&Object.defineProperty(r,\"__esModule\",{value:!0}),t.exports=r)},Ft}function Rt(){return Nt||(Nt=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.Def=void 0;var n=Lt,r=Vt(),i=Object.prototype,a=i.toString,s=i.hasOwnProperty,o=function(){function e(){}return e.prototype.assert=function(e,t){if(!this.check(e,t)){var n=m(e);throw Error(n+\" does not match type \"+this)}return!0},e.prototype.arrayOf=function(){return new l(this)},e}(),l=function(e){function t(t){var n=e.call(this)||this;return n.elemType=t,n.kind=\"ArrayType\",n}return n.__extends(t,e),t.prototype.toString=function(){return\"[\"+this.elemType+\"]\"},t.prototype.check=function(e,t){var n=this;return Array.isArray(e)&&e.every((function(e){return n.elemType.check(e,t)}))},t}(o),c=function(e){function t(t){var n=e.call(this)||this;return n.value=t,n.kind=\"IdentityType\",n}return n.__extends(t,e),t.prototype.toString=function(){return this.value+\"\"},t.prototype.check=function(e,t){var n=e===this.value;return n||\"function\"!=typeof t||t(this,e),n},t}(o),u=function(e){function t(t){var n=e.call(this)||this;return n.fields=t,n.kind=\"ObjectType\",n}return n.__extends(t,e),t.prototype.toString=function(){return\"{ \"+this.fields.join(\", \")+\" }\"},t.prototype.check=function(e,t){return a.call(e)===a.call({})&&this.fields.every((function(n){return n.type.check(e[n.name],t)}))},t}(o),p=function(e){function t(t){var n=e.call(this)||this;return n.types=t,n.kind=\"OrType\",n}return n.__extends(t,e),t.prototype.toString=function(){return this.types.join(\" | \")},t.prototype.check=function(e,t){return!!this.types.some((function(n){return n.check(e,!!t)}))||(\"function\"==typeof t&&t(this,e),!1)},t}(o),h=function(e){function t(t,n){var r=e.call(this)||this;return r.name=t,r.predicate=n,r.kind=\"PredicateType\",r}return n.__extends(t,e),t.prototype.toString=function(){return this.name},t.prototype.check=function(e,t){var n=this.predicate(e,t);return n||\"function\"!=typeof t||t(this,e),n},t}(o),d=function(){function e(e,t){this.type=e,this.typeName=t,this.baseNames=[],this.ownFields=Object.create(null),this.allSupertypes=Object.create(null),this.supertypeList=[],this.allFields=Object.create(null),this.fieldNames=[],this.finalized=!1,this.buildable=!1,this.buildParams=[]}return e.prototype.isSupertypeOf=function(t){if(t instanceof e){if(!0!==this.finalized||!0!==t.finalized)throw Error(\"\");return s.call(t.allSupertypes,this.typeName)}throw Error(t+\" is not a Def\")},e.prototype.checkAllFields=function(e,t){var n=this.allFields;if(!0!==this.finalized)throw Error(\"\"+this.typeName);return null!==e&&\"object\"==typeof e&&Object.keys(n).every((function(r){var i=n[r],a=i.type,s=i.getValue(e);return a.check(s,t)}))},e.prototype.bases=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=this.baseNames;if(this.finalized){if(e.length!==n.length)throw Error(\"\");for(var r=0;r<e.length;r++)if(e[r]!==n[r])throw Error(\"\");return this}return e.forEach((function(e){n.indexOf(e)<0&&n.push(e)})),this},e}();t.Def=d;var f=function(){function e(e,t,n,r){this.name=e,this.type=t,this.defaultFn=n,this.hidden=!!r}return e.prototype.toString=function(){return JSON.stringify(this.name)+\": \"+this.type},e.prototype.getValue=function(e){var t=e[this.name];return void 0!==t||\"function\"==typeof this.defaultFn&&(t=this.defaultFn.call(e)),t},e}();function m(e){return Array.isArray(e)?\"[\"+e.map(m).join(\", \")+\"]\":e&&\"object\"==typeof e?\"{ \"+Object.keys(e).map((function(t){return t+\": \"+e[t]})).join(\", \")+\" }\":JSON.stringify(e)}t.default=function(e){var t={or:function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return new p(e.map((function(e){return t.from(e)})))},from:function(e,n){if(e instanceof l||e instanceof c||e instanceof u||e instanceof p||e instanceof h)return e;if(e instanceof d)return e.type;if(b.check(e)){if(1!==e.length)throw Error(\"only one element type is permitted for typed arrays\");return new l(t.from(e[0]))}if(v.check(e))return new u(Object.keys(e).map((function(n){return new f(n,t.from(e[n],n))})));if(\"function\"==typeof e){var a=r.indexOf(e);if(a>=0)return i[a];if(\"string\"!=typeof n)throw Error(\"missing name\");return new h(n,e)}return new c(e)},def:function(e){return s.call(A,e)?A[e]:A[e]=new I(e)},hasDef:function(e){return s.call(A,e)}},r=[],i=[];function o(e,t){var n=a.call(t),s=new h(e,(function(e){return a.call(e)===n}));return t&&\"function\"==typeof t.constructor&&(r.push(t.constructor),i.push(s)),s}var y=o(\"string\",\"truthy\"),g=o(\"function\",(function(){})),b=o(\"array\",[]),v=o(\"object\",{}),x=o(\"RegExp\",/./),S=o(\"Date\",new Date),E=o(\"number\",3),T=o(\"boolean\",!0),_=o(\"null\",null),k=o(\"undefined\",void 0),P=\"function\"==typeof BigInt?o(\"BigInt\",BigInt(1234)):new h(\"BigInt\",(function(){return!1})),w={string:y,function:g,array:b,object:v,RegExp:x,Date:S,number:E,boolean:T,null:_,undefined:k,BigInt:P},A=Object.create(null);function C(e){if(e&&\"object\"==typeof e){var t=e.type;if(\"string\"==typeof t&&s.call(A,t)){var n=A[t];if(n.finalized)return n}}return null}var I=function(e){function r(t){var n=e.call(this,new h(t,(function(e,t){return n.check(e,t)})),t)||this;return n}return n.__extends(r,e),r.prototype.check=function(e,t){if(!0!==this.finalized)throw Error(\"prematurely checking unfinalized type \"+this.typeName);if(null===e||\"object\"!=typeof e)return!1;var n=C(e);return n?t&&n===this?this.checkAllFields(e,t):!!this.isSupertypeOf(n)&&(!t||n.checkAllFields(e,t)&&this.checkAllFields(e,!1)):(\"SourceLocation\"===this.typeName||\"Position\"===this.typeName)&&this.checkAllFields(e,t)},r.prototype.build=function(){for(var e=this,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];if(this.buildParams=t,this.buildable)return this;this.field(\"type\",String,(function(){return e.typeName})),this.buildable=!0;var r=function(t,n,r,i){if(!s.call(t,n)){var a=e.allFields;if(!s.call(a,n))throw Error(\"\"+n);var o,l=a[n],c=l.type;if(i)o=r;else{if(!l.defaultFn){var u=\"no value or default function given for field \"+JSON.stringify(n)+\" of \"+e.typeName+\"(\"+e.buildParams.map((function(e){return a[e]})).join(\", \")+\")\";throw Error(u)}o=l.defaultFn.call(t)}if(!c.check(o))throw Error(m(o)+\" does not match field \"+l+\" of type \"+e.typeName);t[n]=o}},i=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var i=t.length;if(!e.finalized)throw Error(\"attempting to instantiate unfinalized type \"+e.typeName);var a=Object.create(O);if(e.buildParams.forEach((function(e,n){n<i?r(a,e,t[n],!0):r(a,e,null,!1)})),Object.keys(e.allFields).forEach((function(e){r(a,e,null,!1)})),a.type!==e.typeName)throw Error(\"\");return a};return i.from=function(t){if(!e.finalized)throw Error(\"attempting to instantiate unfinalized type \"+e.typeName);var n=Object.create(O);if(Object.keys(e.allFields).forEach((function(e){s.call(t,e)?r(n,e,t[e],!0):r(n,e,null,!1)})),n.type!==e.typeName)throw Error(\"\");return n},Object.defineProperty(N,D(this.typeName),{enumerable:!0,value:i}),this},r.prototype.field=function(e,n,r,i){return this.finalized?(console.error(\"Ignoring attempt to redefine field \"+JSON.stringify(e)+\" of finalized type \"+JSON.stringify(this.typeName)),this):(this.ownFields[e]=new f(e,t.from(n),r,i),this)},r.prototype.finalize=function(){var e=this;if(!this.finalized){var t=this.allFields,n=this.allSupertypes;for(var r in this.baseNames.forEach((function(r){var i=A[r];if(!(i instanceof d)){var a=\"unknown supertype name \"+JSON.stringify(r)+\" for subtype \"+JSON.stringify(e.typeName);throw Error(a)}i.finalize(),F(t,i.allFields),F(n,i.allSupertypes)})),F(t,this.ownFields),n[this.typeName]=this,this.fieldNames.length=0,t)s.call(t,r)&&!t[r].hidden&&this.fieldNames.push(r);Object.defineProperty(j,this.typeName,{enumerable:!0,value:this.type}),this.finalized=!0,function(e,t){t.length=0,t.push(e);for(var n=Object.create(null),r=0;r<t.length;++r){e=t[r];var i=A[e];if(!0!==i.finalized)throw Error(\"\");s.call(n,e)&&delete t[n[e]],n[e]=r,t.push.apply(t,i.baseNames)}for(var a=0,o=a,l=t.length;o<l;++o)s.call(t,o)&&(t[a++]=t[o]);t.length=a}(this.typeName,this.supertypeList),this.buildable&&this.supertypeList.lastIndexOf(\"Expression\")>=0&&function(e){var t=L(e);if(!N[t]){var n=N[D(e)];if(n){var r=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return N.expressionStatement(n.apply(N,e))};r.from=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return N.expressionStatement(n.from.apply(N,e))},N[t]=r}}}(this.typeName)}},r}(d),N=Object.create(null),O={};function D(e){return e.replace(/^[A-Z]+/,(function(e){var t=e.length;switch(t){case 0:return\"\";case 1:return e.toLowerCase();default:return e.slice(0,t-1).toLowerCase()+e.charAt(t-1)}}))}function L(e){return(e=D(e)).replace(/(Expression)?$/,\"Statement\")}var j={};function M(e){var t=C(e);if(t)return t.fieldNames.slice(0);if(\"type\"in e)throw Error(\"did not recognize object of type \"+JSON.stringify(e.type));return Object.keys(e)}function B(e,t){var n=C(e);if(n){var r=n.allFields[t];if(r)return r.getValue(e)}return e&&e[t]}function F(e,t){return Object.keys(t).forEach((function(n){e[n]=t[n]})),e}return{Type:t,builtInTypes:w,getSupertypeNames:function(e){if(!s.call(A,e))throw Error(\"\");var t=A[e];if(!0!==t.finalized)throw Error(\"\");return t.supertypeList.slice(1)},computeSupertypeLookupTable:function(e){for(var t={},n=Object.keys(A),r=n.length,i=0;i<r;++i){var a=n[i],o=A[a];if(!0!==o.finalized)throw Error(\"\"+a);for(var l=0;l<o.supertypeList.length;++l){var c=o.supertypeList[l];if(s.call(e,c)){t[a]=c;break}}}return t},builders:N,defineMethod:function(e,t){var n=O[e];return k.check(t)?delete O[e]:(g.assert(t),Object.defineProperty(O,e,{enumerable:!0,configurable:!0,value:t})),n},getBuilderName:D,getStatementBuilderName:L,namedTypes:j,getFieldNames:M,getFieldValue:B,eachField:function(e,t,n){M(e).forEach((function(n){t.call(this,n,B(e,n))}),n)},someField:function(e,t,n){return M(e).some((function(n){return t.call(this,n,B(e,n))}),n)},finalize:function(){Object.keys(A).forEach((function(e){A[e].finalize()}))}}},(0,r.maybeSetModuleExports)((function(){return e}))}(Bt,Bt.exports)),Bt.exports}var qt,Ut={exports:{}},zt={exports:{}},Wt={exports:{}};function Gt(){return qt||(qt=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=Vt(),i=n.__importDefault(Rt()),a=Object.prototype.hasOwnProperty;t.default=function(e){var t=e.use(i.default),n=t.builtInTypes.array,r=t.builtInTypes.number,s=function e(t,n,r){if(!(this instanceof e))throw Error(\"Path constructor cannot be invoked without 'new'\");if(n){if(!(n instanceof e))throw Error(\"\")}else n=null,r=null;this.value=t,this.parentPath=n,this.name=r,this.__childCache=null},o=s.prototype;function l(e){return e.__childCache||(e.__childCache=Object.create(null))}function c(e,t){var n=l(e),r=e.getValueProperty(t),i=n[t];return a.call(n,t)&&i.value===r||(i=n[t]=new e.constructor(r,e,t)),i}function u(){}function p(e,t,i,s){if(n.assert(e.value),0===t)return u;var o=e.value.length;if(o<1)return u;var c=arguments.length;2===c?(i=0,s=o):3===c?(i=Math.max(i,0),s=o):(i=Math.max(i,0),s=Math.min(s,o)),r.assert(i),r.assert(s);for(var p=Object.create(null),h=l(e),d=i;d<s;++d)if(a.call(e.value,d)){var f=e.get(d);if(f.name!==d)throw Error(\"\");var m=d+t;f.name=m,p[m]=f,delete h[d]}return delete h.length,function(){for(var t in p){var n=p[t];if(n.name!==+t)throw Error(\"\");h[t]=n,e.value[t]=n.value}}}return o.getValueProperty=function(e){return this.value[e]},o.get=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=this,r=e.length,i=0;i<r;++i)n=c(n,e[i]);return n},o.each=function(e,t){var n=[],r=this.value.length,i=0;for(i=0;i<r;++i)a.call(this.value,i)&&(n[i]=this.get(i));for(t=t||this,i=0;i<r;++i)a.call(n,i)&&e.call(t,n[i])},o.map=function(e,t){var n=[];return this.each((function(t){n.push(e.call(this,t))}),t),n},o.filter=function(e,t){var n=[];return this.each((function(t){e.call(this,t)&&n.push(t)}),t),n},o.shift=function(){var e=p(this,-1),t=this.value.shift();return e(),t},o.unshift=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=p(this,e.length),r=this.value.unshift.apply(this.value,e);return n(),r},o.push=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return n.assert(this.value),delete l(this).length,this.value.push.apply(this.value,e)},o.pop=function(){n.assert(this.value);var e=l(this);return delete e[this.value.length-1],delete e.length,this.value.pop()},o.insertAt=function(e){var t=arguments.length,n=p(this,t-1,e);if(n===u&&t<=1)return this;e=Math.max(e,0);for(var r=1;r<t;++r)this.value[e+r-1]=arguments[r];return n(),this},o.insertBefore=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=this.parentPath,r=e.length,i=[this.name],a=0;a<r;++a)i.push(e[a]);return n.insertAt.apply(n,i)},o.insertAfter=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=this.parentPath,r=e.length,i=[this.name+1],a=0;a<r;++a)i.push(e[a]);return n.insertAt.apply(n,i)},o.replace=function(e){var t=[],r=this.parentPath.value,i=l(this.parentPath),a=arguments.length;if(function(e){if(!(e instanceof s))throw Error(\"\");var t=e.parentPath;if(!t)return e;var r=t.value,i=l(t);if(r[e.name]===e.value)i[e.name]=e;else if(n.check(r)){var a=r.indexOf(e.value);a>=0&&(i[e.name=a]=e)}else r[e.name]=e.value,i[e.name]=e;if(r[e.name]!==e.value)throw Error(\"\");if(e.parentPath.get(e.name)!==e)throw Error(\"\")}(this),n.check(r)){for(var o=r.length,c=p(this.parentPath,a-1,this.name+1),u=[this.name,1],h=0;h<a;++h)u.push(arguments[h]);if(r.splice.apply(r,u)[0]!==this.value)throw Error(\"\");if(r.length!==o-1+a)throw Error(\"\");if(c(),0===a)delete this.value,delete i[this.name],this.__childCache=null;else{if(r[this.name]!==e)throw Error(\"\");for(this.value!==e&&(this.value=e,this.__childCache=null),h=0;h<a;++h)t.push(this.parentPath.get(this.name+h));if(t[0]!==this)throw Error(\"\")}}else if(1===a)this.value!==e&&(this.__childCache=null),this.value=r[this.name]=e,t.push(this);else{if(0!==a)throw Error(\"Could not replace path\");delete r[this.name],delete this.value,this.__childCache=null}return t},s},(0,r.maybeSetModuleExports)((function(){return e}))}(Wt,Wt.exports)),Wt.exports}var Jt,$t,Ht,Kt={exports:{}};function Xt(){return $t||($t=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Rt()),i=n.__importDefault(Gt()),a=n.__importDefault((Jt||(Jt=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=Vt(),i=n.__importDefault(Rt()),a=Object.prototype.hasOwnProperty;t.default=function(e){var t=e.use(i.default),n=t.Type,r=t.namedTypes,s=r.Node,o=r.Expression,l=t.builtInTypes.array,c=t.builders,u=function e(t,n){if(!(this instanceof e))throw Error(\"Scope constructor cannot be invoked without 'new'\");var r;if(h.check(t.value)||p.assert(t.value),n){if(!(n instanceof e))throw Error(\"\");r=n.depth+1}else n=null,r=0;Object.defineProperties(this,{path:{value:t},node:{value:t.value},isGlobal:{value:!n,enumerable:!0},depth:{value:r},parent:{value:n},bindings:{value:{}},types:{value:{}}})},p=n.or(r.Program,r.Function,r.CatchClause),h=n.or(r.Function,r.ClassDeclaration,r.ClassExpression,r.InterfaceDeclaration,r.TSInterfaceDeclaration,r.TypeAlias,r.TSTypeAliasDeclaration),d=n.or(r.TypeParameter,r.TSTypeParameter);u.isEstablishedBy=function(e){return p.check(e)||h.check(e)};var f=u.prototype;function m(e,n,i){var a=e.value;e.parent&&r.FunctionExpression.check(e.parent.node)&&e.parent.node.id&&g(e.parent.get(\"id\"),n),a&&(l.check(a)?e.each((function(e){y(e,n,i)})):r.Function.check(a)?(e.get(\"params\").each((function(e){g(e,n)})),y(e.get(\"body\"),n,i),m(e.get(\"typeParameters\"),n,i)):r.TypeAlias&&r.TypeAlias.check(a)||r.InterfaceDeclaration&&r.InterfaceDeclaration.check(a)||r.TSTypeAliasDeclaration&&r.TSTypeAliasDeclaration.check(a)||r.TSInterfaceDeclaration&&r.TSInterfaceDeclaration.check(a)?b(e.get(\"id\"),i):r.VariableDeclarator.check(a)?(g(e.get(\"id\"),n),y(e.get(\"init\"),n,i)):\"ImportSpecifier\"===a.type||\"ImportNamespaceSpecifier\"===a.type||\"ImportDefaultSpecifier\"===a.type?g(e.get(a.local?\"local\":a.name?\"name\":\"id\"),n):s.check(a)&&!o.check(a)&&t.eachField(a,(function(t,r){var a=e.get(t);if(!function(e,t){return e.value===t||!(!Array.isArray(e.value)||0!==e.value.length||!Array.isArray(t)||0!==t.length)}(a,r))throw Error(\"\");y(a,n,i)})))}function y(e,t,n){var i=e.value;if(!i||o.check(i));else if(r.FunctionDeclaration.check(i)&&null!==i.id)g(e.get(\"id\"),t);else if(r.ClassDeclaration&&r.ClassDeclaration.check(i)&&null!==i.id)g(e.get(\"id\"),t),m(e.get(\"typeParameters\"),t,n);else if(r.InterfaceDeclaration&&r.InterfaceDeclaration.check(i)||r.TSInterfaceDeclaration&&r.TSInterfaceDeclaration.check(i))b(e.get(\"id\"),n);else if(p.check(i)){if(r.CatchClause.check(i)&&r.Identifier.check(i.param)){var s=i.param.name,l=a.call(t,s);m(e.get(\"body\"),t,n),l||delete t[s]}}else m(e,t,n)}function g(e,t){var n=e.value;r.Pattern.assert(n),r.Identifier.check(n)?a.call(t,n.name)?t[n.name].push(e):t[n.name]=[e]:r.AssignmentPattern&&r.AssignmentPattern.check(n)?g(e.get(\"left\"),t):r.ObjectPattern&&r.ObjectPattern.check(n)?e.get(\"properties\").each((function(e){var n=e.value;r.Pattern.check(n)?g(e,t):r.Property.check(n)||r.ObjectProperty&&r.ObjectProperty.check(n)?g(e.get(\"value\"),t):r.SpreadProperty&&r.SpreadProperty.check(n)&&g(e.get(\"argument\"),t)})):r.ArrayPattern&&r.ArrayPattern.check(n)?e.get(\"elements\").each((function(e){var n=e.value;r.Pattern.check(n)?g(e,t):r.SpreadElement&&r.SpreadElement.check(n)&&g(e.get(\"argument\"),t)})):r.PropertyPattern&&r.PropertyPattern.check(n)?g(e.get(\"pattern\"),t):(r.SpreadElementPattern&&r.SpreadElementPattern.check(n)||r.RestElement&&r.RestElement.check(n)||r.SpreadPropertyPattern&&r.SpreadPropertyPattern.check(n))&&g(e.get(\"argument\"),t)}function b(e,t){var n=e.value;r.Pattern.assert(n),r.Identifier.check(n)&&(a.call(t,n.name)?t[n.name].push(e):t[n.name]=[e])}return f.didScan=!1,f.declares=function(e){return this.scan(),a.call(this.bindings,e)},f.declaresType=function(e){return this.scan(),a.call(this.types,e)},f.declareTemporary=function(e){if(e){if(!/^[a-z$_]/i.test(e))throw Error(\"\")}else e=\"t$\";e+=this.depth.toString(36)+\"$\",this.scan();for(var n=0;this.declares(e+n);)++n;var r=e+n;return this.bindings[r]=t.builders.identifier(r)},f.injectTemporary=function(e,t){e||(e=this.declareTemporary());var n=this.path.get(\"body\");return r.BlockStatement.check(n.value)&&(n=n.get(\"body\")),n.unshift(c.variableDeclaration(\"var\",[c.variableDeclarator(e,t||null)])),e},f.scan=function(e){if(e||!this.didScan){for(var t in this.bindings)delete this.bindings[t];for(var t in this.types)delete this.types[t];!function(e,t,n){var i=e.value;if(h.check(i)){var s=e.get(\"typeParameters\",\"params\");l.check(s.value)&&s.each((function(e){!function(e,t){var n=e.value;d.assert(n),a.call(t,n.name)?t[n.name].push(e):t[n.name]=[e]}(e,n)}))}p.check(i)&&(r.CatchClause.check(i)?g(e.get(\"param\"),t):m(e,t,n))}(this.path,this.bindings,this.types),this.didScan=!0}},f.getBindings=function(){return this.scan(),this.bindings},f.getTypes=function(){return this.scan(),this.types},f.lookup=function(e){for(var t=this;t&&!t.declares(e);t=t.parent);return t},f.lookupType=function(e){for(var t=this;t&&!t.declaresType(e);t=t.parent);return t},f.getGlobalScope=function(){for(var e=this;!e.isGlobal;)e=e.parent;return e},u},(0,r.maybeSetModuleExports)((function(){return e}))}(Kt,Kt.exports)),Kt.exports)),s=Vt();t.default=function(e){var t=e.use(r.default),n=t.namedTypes,s=t.builders,o=t.builtInTypes.number,l=t.builtInTypes.array,c=e.use(i.default),u=e.use(a.default),p=function e(t,n,r){if(!(this instanceof e))throw Error(\"NodePath constructor cannot be invoked without 'new'\");c.call(this,t,n,r)},h=p.prototype=Object.create(c.prototype,{constructor:{value:p,enumerable:!1,writable:!0,configurable:!0}});function d(e){return n.BinaryExpression.check(e)||n.LogicalExpression.check(e)}Object.defineProperties(h,{node:{get:function(){return Object.defineProperty(this,\"node\",{configurable:!0,value:this._computeNode()}),this.node}},parent:{get:function(){return Object.defineProperty(this,\"parent\",{configurable:!0,value:this._computeParent()}),this.parent}},scope:{get:function(){return Object.defineProperty(this,\"scope\",{configurable:!0,value:this._computeScope()}),this.scope}}}),h.replace=function(){return delete this.node,delete this.parent,delete this.scope,c.prototype.replace.apply(this,arguments)},h.prune=function(){var e=this.parent;return this.replace(),function(e){if(n.VariableDeclaration.check(e.node)){var t=e.get(\"declarations\").value;if(!t||0===t.length)return e.prune()}else if(n.ExpressionStatement.check(e.node)){if(!e.get(\"expression\").value)return e.prune()}else n.IfStatement.check(e.node)&&function(e){var t=e.get(\"test\").value,r=e.get(\"alternate\").value,i=e.get(\"consequent\").value;if(i||r){if(!i&&r){var a=s.unaryExpression(\"!\",t,!0);n.UnaryExpression.check(t)&&\"!\"===t.operator&&(a=t.argument),e.get(\"test\").replace(a),e.get(\"consequent\").replace(r),e.get(\"alternate\").replace()}}else{var o=s.expressionStatement(t);e.replace(o)}}(e);return e}(e)},h._computeNode=function(){var e=this.value;if(n.Node.check(e))return e;var t=this.parentPath;return t&&t.node||null},h._computeParent=function(){var e=this.value,t=this.parentPath;if(!n.Node.check(e)){for(;t&&!n.Node.check(t.value);)t=t.parentPath;t&&(t=t.parentPath)}for(;t&&!n.Node.check(t.value);)t=t.parentPath;return t||null},h._computeScope=function(){var e=this.value,t=this.parentPath,r=t&&t.scope;return n.Node.check(e)&&u.isEstablishedBy(e)&&(r=new u(this,r)),r||null},h.getValueProperty=function(e){return t.getFieldValue(this.value,e)},h.needsParens=function(e){var t=this.parentPath;if(!t)return!1;var r=this.value;if(!n.Expression.check(r))return!1;if(\"Identifier\"===r.type)return!1;for(;!n.Node.check(t.value);)if(!(t=t.parentPath))return!1;var i=t.value;switch(r.type){case\"UnaryExpression\":case\"SpreadElement\":case\"SpreadProperty\":return\"MemberExpression\"===i.type&&\"object\"===this.name&&i.object===r;case\"BinaryExpression\":case\"LogicalExpression\":switch(i.type){case\"CallExpression\":return\"callee\"===this.name&&i.callee===r;case\"UnaryExpression\":case\"SpreadElement\":case\"SpreadProperty\":return!0;case\"MemberExpression\":return\"object\"===this.name&&i.object===r;case\"BinaryExpression\":case\"LogicalExpression\":var a=r,s=i.operator,l=f[s],c=a.operator,u=f[c];if(l>u)return!0;if(l===u&&\"right\"===this.name){if(i.right!==a)throw Error(\"Nodes must be equal\");return!0}default:return!1}case\"SequenceExpression\":switch(i.type){case\"ForStatement\":return!1;case\"ExpressionStatement\":return\"expression\"!==this.name;default:return!0}case\"YieldExpression\":switch(i.type){case\"BinaryExpression\":case\"LogicalExpression\":case\"UnaryExpression\":case\"SpreadElement\":case\"SpreadProperty\":case\"CallExpression\":case\"MemberExpression\":case\"NewExpression\":case\"ConditionalExpression\":case\"YieldExpression\":return!0;default:return!1}case\"Literal\":return\"MemberExpression\"===i.type&&o.check(r.value)&&\"object\"===this.name&&i.object===r;case\"AssignmentExpression\":case\"ConditionalExpression\":switch(i.type){case\"UnaryExpression\":case\"SpreadElement\":case\"SpreadProperty\":case\"BinaryExpression\":case\"LogicalExpression\":return!0;case\"CallExpression\":return\"callee\"===this.name&&i.callee===r;case\"ConditionalExpression\":return\"test\"===this.name&&i.test===r;case\"MemberExpression\":return\"object\"===this.name&&i.object===r;default:return!1}default:if(\"NewExpression\"===i.type&&\"callee\"===this.name&&i.callee===r)return m(r)}return!(!0===e||this.canBeFirstInStatement()||!this.firstInStatement())};var f={};function m(e){return!!n.CallExpression.check(e)||(l.check(e)?e.some(m):!!n.Node.check(e)&&t.someField(e,(function(e,t){return m(t)})))}return[[\"||\"],[\"&&\"],[\"|\"],[\"^\"],[\"&\"],[\"==\",\"===\",\"!=\",\"!==\"],[\"<\",\">\",\"<=\",\">=\",\"in\",\"instanceof\"],[\">>\",\"<<\",\">>>\"],[\"+\",\"-\"],[\"*\",\"/\",\"%\"]].forEach((function(e,t){e.forEach((function(e){f[e]=t}))})),h.canBeFirstInStatement=function(){var e=this.node;return!n.FunctionExpression.check(e)&&!n.ObjectExpression.check(e)},h.firstInStatement=function(){return function(e){for(var t,r;e.parent;e=e.parent){if(t=e.node,r=e.parent.node,n.BlockStatement.check(r)&&\"body\"===e.parent.name&&0===e.name){if(r.body[0]!==t)throw Error(\"Nodes must be equal\");return!0}if(n.ExpressionStatement.check(r)&&\"expression\"===e.name){if(r.expression!==t)throw Error(\"Nodes must be equal\");return!0}if(n.SequenceExpression.check(r)&&\"expressions\"===e.parent.name&&0===e.name){if(r.expressions[0]!==t)throw Error(\"Nodes must be equal\")}else if(n.CallExpression.check(r)&&\"callee\"===e.name){if(r.callee!==t)throw Error(\"Nodes must be equal\")}else if(n.MemberExpression.check(r)&&\"object\"===e.name){if(r.object!==t)throw Error(\"Nodes must be equal\")}else if(n.ConditionalExpression.check(r)&&\"test\"===e.name){if(r.test!==t)throw Error(\"Nodes must be equal\")}else if(d(r)&&\"left\"===e.name){if(r.left!==t)throw Error(\"Nodes must be equal\")}else{if(!n.UnaryExpression.check(r)||r.prefix||\"argument\"!==e.name)return!1;if(r.argument!==t)throw Error(\"Nodes must be equal\")}}return!0}(this)},p},(0,s.maybeSetModuleExports)((function(){return e}))}(zt,zt.exports)),zt.exports}var Yt,Qt,Zt={exports:{}};function en(){return Yt||(Yt=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=Vt(),i=n.__importDefault(Rt());t.default=function(e){var t=e.use(i.default),n=t.getFieldNames,r=t.getFieldValue,a=t.builtInTypes.array,s=t.builtInTypes.object,o=t.builtInTypes.Date,l=t.builtInTypes.RegExp,c=Object.prototype.hasOwnProperty;function u(e,t,n){return a.check(n)?n.length=0:n=null,h(e,t,n)}function p(e){return/[_$a-z][_$a-z0-9]*/i.test(e)?\".\"+e:\"[\"+JSON.stringify(e)+\"]\"}function h(e,t,i){return e===t||(a.check(e)?function(e,t,n){a.assert(e);var r=e.length;if(!a.check(t)||t.length!==r)return n&&n.push(\"length\"),!1;for(var i=0;i<r;++i){if(n&&n.push(i),i in e!=i in t)return!1;if(!h(e[i],t[i],n))return!1;if(n){var s=n.pop();if(s!==i)throw Error(\"\"+s)}}return!0}(e,t,i):s.check(e)?function(e,t,i){if(s.assert(e),!s.check(t))return!1;if(e.type!==t.type)return i&&i.push(\"type\"),!1;var a=n(e),o=a.length,l=n(t),u=l.length;if(o===u){for(var p=0;p<o;++p){var d=a[p],f=r(e,d),m=r(t,d);if(i&&i.push(d),!h(f,m,i))return!1;if(i){var y=i.pop();if(y!==d)throw Error(\"\"+y)}}return!0}if(!i)return!1;var g=Object.create(null);for(p=0;p<o;++p)g[a[p]]=!0;for(p=0;p<u;++p){if(d=l[p],!c.call(g,d))return i.push(d),!1;delete g[d]}for(d in g){i.push(d);break}return!1}(e,t,i):o.check(e)?o.check(t)&&+e==+t:l.check(e)?l.check(t)&&e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.ignoreCase===t.ignoreCase:e==t)}return u.assert=function(e,t){var n=[];if(!u(e,t,n)){if(0!==n.length)throw Error(\"Nodes differ in the following path: \"+n.map(p).join(\"\"));if(e!==t)throw Error(\"Nodes must be equal\")}},u},(0,r.maybeSetModuleExports)((function(){return e}))}(Zt,Zt.exports)),Zt.exports}var tn,nn,rn,an,sn={exports:{}},on={exports:{}},ln={exports:{}},cn={exports:{}},un={exports:{}},pn={exports:{}},hn={exports:{}};function dn(){return tn||(tn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Vt();t.default=function(){return{BinaryOperators:[\"==\",\"!=\",\"===\",\"!==\",\"<\",\"<=\",\">\",\">=\",\"<<\",\">>\",\">>>\",\"+\",\"-\",\"*\",\"/\",\"%\",\"&\",\"|\",\"^\",\"in\",\"instanceof\"],AssignmentOperators:[\"=\",\"+=\",\"-=\",\"*=\",\"/=\",\"%=\",\"<<=\",\">>=\",\">>>=\",\"|=\",\"^=\",\"&=\"],LogicalOperators:[\"||\",\"&&\"]}},(0,n.maybeSetModuleExports)((function(){return e}))}(hn,hn.exports)),hn.exports}function fn(){return nn||(nn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=Vt(),i=n.__importDefault(dn());t.default=function(e){var t=e.use(i.default);return t.BinaryOperators.indexOf(\"**\")<0&&t.BinaryOperators.push(\"**\"),t.AssignmentOperators.indexOf(\"**=\")<0&&t.AssignmentOperators.push(\"**=\"),t},(0,r.maybeSetModuleExports)((function(){return e}))}(pn,pn.exports)),pn.exports}function mn(){return rn||(rn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=Vt(),i=n.__importDefault(fn());t.default=function(e){var t=e.use(i.default);return t.LogicalOperators.indexOf(\"??\")<0&&t.LogicalOperators.push(\"??\"),t},(0,r.maybeSetModuleExports)((function(){return e}))}(un,un.exports)),un.exports}var yn,gn,bn,vn,xn,Sn,En,Tn,_n,kn,Pn={exports:{}},wn={exports:{}},An={exports:{}},Cn={exports:{}},In={exports:{}},Nn={exports:{}},On={exports:{}};function Dn(){return kn||(kn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Rt()),i=n.__importStar(Vt()),a=n.__importDefault((_n||(_n=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault((Tn||(Tn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault((an||(an=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=Vt(),i=n.__importDefault(mn());t.default=function(e){var t=e.use(i.default);return t.LogicalOperators.forEach((function(e){var n=e+\"=\";t.AssignmentOperators.indexOf(n)<0&&t.AssignmentOperators.push(n)})),t},(0,r.maybeSetModuleExports)((function(){return e}))}(cn,cn.exports)),cn.exports)),i=n.__importDefault((En||(En=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(mn()),i=n.__importDefault((Sn||(Sn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault((xn||(xn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault((vn||(vn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault((bn||(bn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(fn()),i=n.__importDefault((gn||(gn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault((yn||(yn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(dn()),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){var t=e.use(i.default).Type,n=t.def,s=t.or,o=e.use(a.default),l=o.defaults,c=o.geq,u=e.use(r.default),p=u.BinaryOperators,h=u.AssignmentOperators,d=u.LogicalOperators;n(\"Printable\").field(\"loc\",s(n(\"SourceLocation\"),null),l.null,!0),n(\"Node\").bases(\"Printable\").field(\"type\",String).field(\"comments\",s([n(\"Comment\")],null),l.null,!0),n(\"SourceLocation\").field(\"start\",n(\"Position\")).field(\"end\",n(\"Position\")).field(\"source\",s(String,null),l.null),n(\"Position\").field(\"line\",c(1)).field(\"column\",c(0)),n(\"File\").bases(\"Node\").build(\"program\",\"name\").field(\"program\",n(\"Program\")).field(\"name\",s(String,null),l.null),n(\"Program\").bases(\"Node\").build(\"body\").field(\"body\",[n(\"Statement\")]),n(\"Function\").bases(\"Node\").field(\"id\",s(n(\"Identifier\"),null),l.null).field(\"params\",[n(\"Pattern\")]).field(\"body\",n(\"BlockStatement\")).field(\"generator\",Boolean,l.false).field(\"async\",Boolean,l.false),n(\"Statement\").bases(\"Node\"),n(\"EmptyStatement\").bases(\"Statement\").build(),n(\"BlockStatement\").bases(\"Statement\").build(\"body\").field(\"body\",[n(\"Statement\")]),n(\"ExpressionStatement\").bases(\"Statement\").build(\"expression\").field(\"expression\",n(\"Expression\")),n(\"IfStatement\").bases(\"Statement\").build(\"test\",\"consequent\",\"alternate\").field(\"test\",n(\"Expression\")).field(\"consequent\",n(\"Statement\")).field(\"alternate\",s(n(\"Statement\"),null),l.null),n(\"LabeledStatement\").bases(\"Statement\").build(\"label\",\"body\").field(\"label\",n(\"Identifier\")).field(\"body\",n(\"Statement\")),n(\"BreakStatement\").bases(\"Statement\").build(\"label\").field(\"label\",s(n(\"Identifier\"),null),l.null),n(\"ContinueStatement\").bases(\"Statement\").build(\"label\").field(\"label\",s(n(\"Identifier\"),null),l.null),n(\"WithStatement\").bases(\"Statement\").build(\"object\",\"body\").field(\"object\",n(\"Expression\")).field(\"body\",n(\"Statement\")),n(\"SwitchStatement\").bases(\"Statement\").build(\"discriminant\",\"cases\",\"lexical\").field(\"discriminant\",n(\"Expression\")).field(\"cases\",[n(\"SwitchCase\")]).field(\"lexical\",Boolean,l.false),n(\"ReturnStatement\").bases(\"Statement\").build(\"argument\").field(\"argument\",s(n(\"Expression\"),null)),n(\"ThrowStatement\").bases(\"Statement\").build(\"argument\").field(\"argument\",n(\"Expression\")),n(\"TryStatement\").bases(\"Statement\").build(\"block\",\"handler\",\"finalizer\").field(\"block\",n(\"BlockStatement\")).field(\"handler\",s(n(\"CatchClause\"),null),(function(){return this.handlers&&this.handlers[0]||null})).field(\"handlers\",[n(\"CatchClause\")],(function(){return this.handler?[this.handler]:[]}),!0).field(\"guardedHandlers\",[n(\"CatchClause\")],l.emptyArray).field(\"finalizer\",s(n(\"BlockStatement\"),null),l.null),n(\"CatchClause\").bases(\"Node\").build(\"param\",\"guard\",\"body\").field(\"param\",n(\"Pattern\")).field(\"guard\",s(n(\"Expression\"),null),l.null).field(\"body\",n(\"BlockStatement\")),n(\"WhileStatement\").bases(\"Statement\").build(\"test\",\"body\").field(\"test\",n(\"Expression\")).field(\"body\",n(\"Statement\")),n(\"DoWhileStatement\").bases(\"Statement\").build(\"body\",\"test\").field(\"body\",n(\"Statement\")).field(\"test\",n(\"Expression\")),n(\"ForStatement\").bases(\"Statement\").build(\"init\",\"test\",\"update\",\"body\").field(\"init\",s(n(\"VariableDeclaration\"),n(\"Expression\"),null)).field(\"test\",s(n(\"Expression\"),null)).field(\"update\",s(n(\"Expression\"),null)).field(\"body\",n(\"Statement\")),n(\"ForInStatement\").bases(\"Statement\").build(\"left\",\"right\",\"body\").field(\"left\",s(n(\"VariableDeclaration\"),n(\"Expression\"))).field(\"right\",n(\"Expression\")).field(\"body\",n(\"Statement\")),n(\"DebuggerStatement\").bases(\"Statement\").build(),n(\"Declaration\").bases(\"Statement\"),n(\"FunctionDeclaration\").bases(\"Function\",\"Declaration\").build(\"id\",\"params\",\"body\").field(\"id\",n(\"Identifier\")),n(\"FunctionExpression\").bases(\"Function\",\"Expression\").build(\"id\",\"params\",\"body\"),n(\"VariableDeclaration\").bases(\"Declaration\").build(\"kind\",\"declarations\").field(\"kind\",s(\"var\",\"let\",\"const\")).field(\"declarations\",[n(\"VariableDeclarator\")]),n(\"VariableDeclarator\").bases(\"Node\").build(\"id\",\"init\").field(\"id\",n(\"Pattern\")).field(\"init\",s(n(\"Expression\"),null),l.null),n(\"Expression\").bases(\"Node\"),n(\"ThisExpression\").bases(\"Expression\").build(),n(\"ArrayExpression\").bases(\"Expression\").build(\"elements\").field(\"elements\",[s(n(\"Expression\"),null)]),n(\"ObjectExpression\").bases(\"Expression\").build(\"properties\").field(\"properties\",[n(\"Property\")]),n(\"Property\").bases(\"Node\").build(\"kind\",\"key\",\"value\").field(\"kind\",s(\"init\",\"get\",\"set\")).field(\"key\",s(n(\"Literal\"),n(\"Identifier\"))).field(\"value\",n(\"Expression\")),n(\"SequenceExpression\").bases(\"Expression\").build(\"expressions\").field(\"expressions\",[n(\"Expression\")]);var f=s(\"-\",\"+\",\"!\",\"~\",\"typeof\",\"void\",\"delete\");n(\"UnaryExpression\").bases(\"Expression\").build(\"operator\",\"argument\",\"prefix\").field(\"operator\",f).field(\"argument\",n(\"Expression\")).field(\"prefix\",Boolean,l.true);var m=s.apply(void 0,p);n(\"BinaryExpression\").bases(\"Expression\").build(\"operator\",\"left\",\"right\").field(\"operator\",m).field(\"left\",n(\"Expression\")).field(\"right\",n(\"Expression\"));var y=s.apply(void 0,h);n(\"AssignmentExpression\").bases(\"Expression\").build(\"operator\",\"left\",\"right\").field(\"operator\",y).field(\"left\",s(n(\"Pattern\"),n(\"MemberExpression\"))).field(\"right\",n(\"Expression\"));var g=s(\"++\",\"--\");n(\"UpdateExpression\").bases(\"Expression\").build(\"operator\",\"argument\",\"prefix\").field(\"operator\",g).field(\"argument\",n(\"Expression\")).field(\"prefix\",Boolean);var b=s.apply(void 0,d);n(\"LogicalExpression\").bases(\"Expression\").build(\"operator\",\"left\",\"right\").field(\"operator\",b).field(\"left\",n(\"Expression\")).field(\"right\",n(\"Expression\")),n(\"ConditionalExpression\").bases(\"Expression\").build(\"test\",\"consequent\",\"alternate\").field(\"test\",n(\"Expression\")).field(\"consequent\",n(\"Expression\")).field(\"alternate\",n(\"Expression\")),n(\"NewExpression\").bases(\"Expression\").build(\"callee\",\"arguments\").field(\"callee\",n(\"Expression\")).field(\"arguments\",[n(\"Expression\")]),n(\"CallExpression\").bases(\"Expression\").build(\"callee\",\"arguments\").field(\"callee\",n(\"Expression\")).field(\"arguments\",[n(\"Expression\")]),n(\"MemberExpression\").bases(\"Expression\").build(\"object\",\"property\",\"computed\").field(\"object\",n(\"Expression\")).field(\"property\",s(n(\"Identifier\"),n(\"Expression\"))).field(\"computed\",Boolean,(function(){var e=this.property.type;return\"Literal\"===e||\"MemberExpression\"===e||\"BinaryExpression\"===e})),n(\"Pattern\").bases(\"Node\"),n(\"SwitchCase\").bases(\"Node\").build(\"test\",\"consequent\").field(\"test\",s(n(\"Expression\"),null)).field(\"consequent\",[n(\"Statement\")]),n(\"Identifier\").bases(\"Expression\",\"Pattern\").build(\"name\").field(\"name\",String).field(\"optional\",Boolean,l.false),n(\"Literal\").bases(\"Expression\").build(\"value\").field(\"value\",s(String,Boolean,null,Number,RegExp,BigInt)),n(\"Comment\").bases(\"Printable\").field(\"value\",String).field(\"leading\",Boolean,l.true).field(\"trailing\",Boolean,l.false)},(0,a.maybeSetModuleExports)((function(){return e}))}(On,On.exports)),On.exports)),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){e.use(r.default);var t=e.use(i.default),n=t.Type.def,s=t.Type.or,o=e.use(a.default).defaults;n(\"Function\").field(\"generator\",Boolean,o.false).field(\"expression\",Boolean,o.false).field(\"defaults\",[s(n(\"Expression\"),null)],o.emptyArray).field(\"rest\",s(n(\"Identifier\"),null),o.null),n(\"RestElement\").bases(\"Pattern\").build(\"argument\").field(\"argument\",n(\"Pattern\")).field(\"typeAnnotation\",s(n(\"TypeAnnotation\"),n(\"TSTypeAnnotation\"),null),o.null),n(\"SpreadElementPattern\").bases(\"Pattern\").build(\"argument\").field(\"argument\",n(\"Pattern\")),n(\"FunctionDeclaration\").build(\"id\",\"params\",\"body\",\"generator\",\"expression\").field(\"id\",s(n(\"Identifier\"),null)),n(\"FunctionExpression\").build(\"id\",\"params\",\"body\",\"generator\",\"expression\"),n(\"ArrowFunctionExpression\").bases(\"Function\",\"Expression\").build(\"params\",\"body\",\"expression\").field(\"id\",null,o.null).field(\"body\",s(n(\"BlockStatement\"),n(\"Expression\"))).field(\"generator\",!1,o.false),n(\"ForOfStatement\").bases(\"Statement\").build(\"left\",\"right\",\"body\").field(\"left\",s(n(\"VariableDeclaration\"),n(\"Pattern\"))).field(\"right\",n(\"Expression\")).field(\"body\",n(\"Statement\")),n(\"YieldExpression\").bases(\"Expression\").build(\"argument\",\"delegate\").field(\"argument\",s(n(\"Expression\"),null)).field(\"delegate\",Boolean,o.false),n(\"GeneratorExpression\").bases(\"Expression\").build(\"body\",\"blocks\",\"filter\").field(\"body\",n(\"Expression\")).field(\"blocks\",[n(\"ComprehensionBlock\")]).field(\"filter\",s(n(\"Expression\"),null)),n(\"ComprehensionExpression\").bases(\"Expression\").build(\"body\",\"blocks\",\"filter\").field(\"body\",n(\"Expression\")).field(\"blocks\",[n(\"ComprehensionBlock\")]).field(\"filter\",s(n(\"Expression\"),null)),n(\"ComprehensionBlock\").bases(\"Node\").build(\"left\",\"right\",\"each\").field(\"left\",n(\"Pattern\")).field(\"right\",n(\"Expression\")).field(\"each\",Boolean),n(\"Property\").field(\"key\",s(n(\"Literal\"),n(\"Identifier\"),n(\"Expression\"))).field(\"value\",s(n(\"Expression\"),n(\"Pattern\"))).field(\"method\",Boolean,o.false).field(\"shorthand\",Boolean,o.false).field(\"computed\",Boolean,o.false),n(\"ObjectProperty\").field(\"shorthand\",Boolean,o.false),n(\"PropertyPattern\").bases(\"Pattern\").build(\"key\",\"pattern\").field(\"key\",s(n(\"Literal\"),n(\"Identifier\"),n(\"Expression\"))).field(\"pattern\",n(\"Pattern\")).field(\"computed\",Boolean,o.false),n(\"ObjectPattern\").bases(\"Pattern\").build(\"properties\").field(\"properties\",[s(n(\"PropertyPattern\"),n(\"Property\"))]),n(\"ArrayPattern\").bases(\"Pattern\").build(\"elements\").field(\"elements\",[s(n(\"Pattern\"),null)]),n(\"SpreadElement\").bases(\"Node\").build(\"argument\").field(\"argument\",n(\"Expression\")),n(\"ArrayExpression\").field(\"elements\",[s(n(\"Expression\"),n(\"SpreadElement\"),n(\"RestElement\"),null)]),n(\"NewExpression\").field(\"arguments\",[s(n(\"Expression\"),n(\"SpreadElement\"))]),n(\"CallExpression\").field(\"arguments\",[s(n(\"Expression\"),n(\"SpreadElement\"))]),n(\"AssignmentPattern\").bases(\"Pattern\").build(\"left\",\"right\").field(\"left\",n(\"Pattern\")).field(\"right\",n(\"Expression\")),n(\"MethodDefinition\").bases(\"Declaration\").build(\"kind\",\"key\",\"value\",\"static\").field(\"kind\",s(\"constructor\",\"method\",\"get\",\"set\")).field(\"key\",n(\"Expression\")).field(\"value\",n(\"Function\")).field(\"computed\",Boolean,o.false).field(\"static\",Boolean,o.false);var l=s(n(\"MethodDefinition\"),n(\"VariableDeclarator\"),n(\"ClassPropertyDefinition\"),n(\"ClassProperty\"),n(\"StaticBlock\"));n(\"ClassProperty\").bases(\"Declaration\").build(\"key\").field(\"key\",s(n(\"Literal\"),n(\"Identifier\"),n(\"Expression\"))).field(\"computed\",Boolean,o.false),n(\"ClassPropertyDefinition\").bases(\"Declaration\").build(\"definition\").field(\"definition\",l),n(\"ClassBody\").bases(\"Declaration\").build(\"body\").field(\"body\",[l]),n(\"ClassDeclaration\").bases(\"Declaration\").build(\"id\",\"body\",\"superClass\").field(\"id\",s(n(\"Identifier\"),null)).field(\"body\",n(\"ClassBody\")).field(\"superClass\",s(n(\"Expression\"),null),o.null),n(\"ClassExpression\").bases(\"Expression\").build(\"id\",\"body\",\"superClass\").field(\"id\",s(n(\"Identifier\"),null),o.null).field(\"body\",n(\"ClassBody\")).field(\"superClass\",s(n(\"Expression\"),null),o.null),n(\"Super\").bases(\"Expression\").build(),n(\"Specifier\").bases(\"Node\"),n(\"ModuleSpecifier\").bases(\"Specifier\").field(\"local\",s(n(\"Identifier\"),null),o.null).field(\"id\",s(n(\"Identifier\"),null),o.null).field(\"name\",s(n(\"Identifier\"),null),o.null),n(\"ImportSpecifier\").bases(\"ModuleSpecifier\").build(\"imported\",\"local\").field(\"imported\",n(\"Identifier\")),n(\"ImportDefaultSpecifier\").bases(\"ModuleSpecifier\").build(\"local\"),n(\"ImportNamespaceSpecifier\").bases(\"ModuleSpecifier\").build(\"local\"),n(\"ImportDeclaration\").bases(\"Declaration\").build(\"specifiers\",\"source\",\"importKind\").field(\"specifiers\",[s(n(\"ImportSpecifier\"),n(\"ImportNamespaceSpecifier\"),n(\"ImportDefaultSpecifier\"))],o.emptyArray).field(\"source\",n(\"Literal\")).field(\"importKind\",s(\"value\",\"type\"),(function(){return\"value\"})),n(\"ExportNamedDeclaration\").bases(\"Declaration\").build(\"declaration\",\"specifiers\",\"source\").field(\"declaration\",s(n(\"Declaration\"),null)).field(\"specifiers\",[n(\"ExportSpecifier\")],o.emptyArray).field(\"source\",s(n(\"Literal\"),null),o.null),n(\"ExportSpecifier\").bases(\"ModuleSpecifier\").build(\"local\",\"exported\").field(\"exported\",n(\"Identifier\")),n(\"ExportDefaultDeclaration\").bases(\"Declaration\").build(\"declaration\").field(\"declaration\",s(n(\"Declaration\"),n(\"Expression\"))),n(\"ExportAllDeclaration\").bases(\"Declaration\").build(\"source\").field(\"source\",n(\"Literal\")),n(\"TaggedTemplateExpression\").bases(\"Expression\").build(\"tag\",\"quasi\").field(\"tag\",n(\"Expression\")).field(\"quasi\",n(\"TemplateLiteral\")),n(\"TemplateLiteral\").bases(\"Expression\").build(\"quasis\",\"expressions\").field(\"quasis\",[n(\"TemplateElement\")]).field(\"expressions\",[n(\"Expression\")]),n(\"TemplateElement\").bases(\"Node\").build(\"value\",\"tail\").field(\"value\",{cooked:String,raw:String}).field(\"tail\",Boolean),n(\"MetaProperty\").bases(\"Expression\").build(\"meta\",\"property\").field(\"meta\",n(\"Identifier\")).field(\"property\",n(\"Identifier\"))},(0,a.maybeSetModuleExports)((function(){return e}))}(Nn,Nn.exports)),Nn.exports)),a=Vt();t.default=function(e){e.use(r.default),e.use(i.default)},(0,a.maybeSetModuleExports)((function(){return e}))}(In,In.exports)),In.exports)),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){e.use(r.default);var t=e.use(i.default).Type.def,n=e.use(a.default).defaults;t(\"Function\").field(\"async\",Boolean,n.false),t(\"AwaitExpression\").bases(\"Expression\").build(\"argument\").field(\"argument\",t(\"Expression\"))},(0,a.maybeSetModuleExports)((function(){return e}))}(Cn,Cn.exports)),Cn.exports)),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){e.use(r.default);var t=e.use(i.default),n=t.Type.def,s=t.Type.or,o=e.use(a.default).defaults;n(\"ForOfStatement\").field(\"await\",Boolean,o.false),n(\"SpreadProperty\").bases(\"Node\").build(\"argument\").field(\"argument\",n(\"Expression\")),n(\"ObjectExpression\").field(\"properties\",[s(n(\"Property\"),n(\"SpreadProperty\"),n(\"SpreadElement\"))]),n(\"TemplateElement\").field(\"value\",{cooked:s(String,null),raw:String}),n(\"SpreadPropertyPattern\").bases(\"Pattern\").build(\"argument\").field(\"argument\",n(\"Pattern\")),n(\"ObjectPattern\").field(\"properties\",[s(n(\"PropertyPattern\"),n(\"Property\"),n(\"RestElement\"),n(\"SpreadPropertyPattern\"))])},(0,a.maybeSetModuleExports)((function(){return e}))}(An,An.exports)),An.exports)),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){e.use(r.default);var t=e.use(i.default),n=t.Type.def,s=t.Type.or,o=e.use(a.default).defaults;n(\"CatchClause\").field(\"param\",s(n(\"Pattern\"),null),o.null)},(0,a.maybeSetModuleExports)((function(){return e}))}(wn,wn.exports)),wn.exports)),a=n.__importDefault(Rt()),s=n.__importStar(Vt());t.default=function(e){e.use(r.default),e.use(i.default);var t=e.use(a.default),n=t.Type.def,o=t.Type.or,l=e.use(s.default).defaults;n(\"ImportExpression\").bases(\"Expression\").build(\"source\").field(\"source\",n(\"Expression\")),n(\"ExportAllDeclaration\").bases(\"Declaration\").build(\"source\",\"exported\").field(\"source\",n(\"Literal\")).field(\"exported\",o(n(\"Identifier\"),null,void 0),l.null),n(\"ChainElement\").bases(\"Node\").field(\"optional\",Boolean,l.false),n(\"CallExpression\").bases(\"Expression\",\"ChainElement\"),n(\"MemberExpression\").bases(\"Expression\",\"ChainElement\"),n(\"ChainExpression\").bases(\"Expression\").build(\"expression\").field(\"expression\",n(\"ChainElement\")),n(\"OptionalCallExpression\").bases(\"CallExpression\").build(\"callee\",\"arguments\",\"optional\").field(\"optional\",Boolean,l.true),n(\"OptionalMemberExpression\").bases(\"MemberExpression\").build(\"object\",\"property\",\"computed\",\"optional\").field(\"optional\",Boolean,l.true)},(0,s.maybeSetModuleExports)((function(){return e}))}(Pn,Pn.exports)),Pn.exports)),a=Vt();t.default=function(e){e.use(r.default),e.use(i.default)},(0,a.maybeSetModuleExports)((function(){return e}))}(ln,ln.exports)),ln.exports)),i=n.__importDefault(Rt()),a=Vt();t.default=function(e){e.use(r.default);var t=e.use(i.default).Type.def;t(\"StaticBlock\").bases(\"Declaration\").build(\"body\").field(\"body\",[t(\"Statement\")])},(0,a.maybeSetModuleExports)((function(){return e}))}(on,on.exports)),on.exports));t.default=function(e){e.use(a.default);var t=e.use(r.default),n=t.Type,s=t.Type.def,o=n.or,l=e.use(i.default).defaults;s(\"AwaitExpression\").build(\"argument\",\"all\").field(\"argument\",o(s(\"Expression\"),null)).field(\"all\",Boolean,l.false),s(\"Decorator\").bases(\"Node\").build(\"expression\").field(\"expression\",s(\"Expression\")),s(\"Property\").field(\"decorators\",o([s(\"Decorator\")],null),l.null),s(\"MethodDefinition\").field(\"decorators\",o([s(\"Decorator\")],null),l.null),s(\"PrivateName\").bases(\"Expression\",\"Pattern\").build(\"id\").field(\"id\",s(\"Identifier\")),s(\"ClassPrivateProperty\").bases(\"ClassProperty\").build(\"key\",\"value\").field(\"key\",s(\"PrivateName\")).field(\"value\",o(s(\"Expression\"),null),l.null),s(\"ImportAttribute\").bases(\"Node\").build(\"key\",\"value\").field(\"key\",o(s(\"Identifier\"),s(\"Literal\"))).field(\"value\",s(\"Expression\")),[\"ImportDeclaration\",\"ExportAllDeclaration\",\"ExportNamedDeclaration\"].forEach((function(e){s(e).field(\"assertions\",[s(\"ImportAttribute\")],l.emptyArray)})),s(\"RecordExpression\").bases(\"Expression\").build(\"properties\").field(\"properties\",[o(s(\"ObjectProperty\"),s(\"ObjectMethod\"),s(\"SpreadElement\"))]),s(\"TupleExpression\").bases(\"Expression\").build(\"elements\").field(\"elements\",[o(s(\"Expression\"),s(\"SpreadElement\"),null)]),s(\"ModuleExpression\").bases(\"Node\").build(\"body\").field(\"body\",s(\"Program\"))},(0,i.maybeSetModuleExports)((function(){return e}))}(sn,sn.exports)),sn.exports}var Ln,jn,Mn,Bn={exports:{}},Fn={exports:{}},Vn={exports:{}};function Rn(){return jn||(jn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Rt()),i=n.__importStar(Vt());t.default=function(e){var t=e.use(r.default),n=t.Type.def,a=t.Type.or,s=e.use(i.default).defaults,o=a(n(\"TypeAnnotation\"),n(\"TSTypeAnnotation\"),null),l=a(n(\"TypeParameterDeclaration\"),n(\"TSTypeParameterDeclaration\"),null);n(\"Identifier\").field(\"typeAnnotation\",o,s.null),n(\"ObjectPattern\").field(\"typeAnnotation\",o,s.null),n(\"Function\").field(\"returnType\",o,s.null).field(\"typeParameters\",l,s.null),n(\"ClassProperty\").build(\"key\",\"value\",\"typeAnnotation\",\"static\").field(\"value\",a(n(\"Expression\"),null)).field(\"static\",Boolean,s.false).field(\"typeAnnotation\",o,s.null),[\"ClassDeclaration\",\"ClassExpression\"].forEach((function(e){n(e).field(\"typeParameters\",l,s.null).field(\"superTypeParameters\",a(n(\"TypeParameterInstantiation\"),n(\"TSTypeParameterInstantiation\"),null),s.null).field(\"implements\",a([n(\"ClassImplements\")],[n(\"TSExpressionWithTypeArguments\")]),s.emptyArray)}))},(0,i.maybeSetModuleExports)((function(){return e}))}(Vn,Vn.exports)),Vn.exports}function qn(){return Mn||(Mn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Dn()),i=n.__importDefault(Rn()),a=n.__importDefault(Rt()),s=n.__importStar(Vt());t.default=function(e){e.use(r.default),e.use(i.default);var t=e.use(a.default),n=t.Type.def,o=t.Type.or,l=e.use(s.default).defaults;n(\"Flow\").bases(\"Node\"),n(\"FlowType\").bases(\"Flow\"),n(\"AnyTypeAnnotation\").bases(\"FlowType\").build(),n(\"EmptyTypeAnnotation\").bases(\"FlowType\").build(),n(\"MixedTypeAnnotation\").bases(\"FlowType\").build(),n(\"VoidTypeAnnotation\").bases(\"FlowType\").build(),n(\"SymbolTypeAnnotation\").bases(\"FlowType\").build(),n(\"NumberTypeAnnotation\").bases(\"FlowType\").build(),n(\"BigIntTypeAnnotation\").bases(\"FlowType\").build(),n(\"NumberLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\",\"raw\").field(\"value\",Number).field(\"raw\",String),n(\"NumericLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\",\"raw\").field(\"value\",Number).field(\"raw\",String),n(\"BigIntLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\",\"raw\").field(\"value\",null).field(\"raw\",String),n(\"StringTypeAnnotation\").bases(\"FlowType\").build(),n(\"StringLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\",\"raw\").field(\"value\",String).field(\"raw\",String),n(\"BooleanTypeAnnotation\").bases(\"FlowType\").build(),n(\"BooleanLiteralTypeAnnotation\").bases(\"FlowType\").build(\"value\",\"raw\").field(\"value\",Boolean).field(\"raw\",String),n(\"TypeAnnotation\").bases(\"Node\").build(\"typeAnnotation\").field(\"typeAnnotation\",n(\"FlowType\")),n(\"NullableTypeAnnotation\").bases(\"FlowType\").build(\"typeAnnotation\").field(\"typeAnnotation\",n(\"FlowType\")),n(\"NullLiteralTypeAnnotation\").bases(\"FlowType\").build(),n(\"NullTypeAnnotation\").bases(\"FlowType\").build(),n(\"ThisTypeAnnotation\").bases(\"FlowType\").build(),n(\"ExistsTypeAnnotation\").bases(\"FlowType\").build(),n(\"ExistentialTypeParam\").bases(\"FlowType\").build(),n(\"FunctionTypeAnnotation\").bases(\"FlowType\").build(\"params\",\"returnType\",\"rest\",\"typeParameters\").field(\"params\",[n(\"FunctionTypeParam\")]).field(\"returnType\",n(\"FlowType\")).field(\"rest\",o(n(\"FunctionTypeParam\"),null)).field(\"typeParameters\",o(n(\"TypeParameterDeclaration\"),null)),n(\"FunctionTypeParam\").bases(\"Node\").build(\"name\",\"typeAnnotation\",\"optional\").field(\"name\",o(n(\"Identifier\"),null)).field(\"typeAnnotation\",n(\"FlowType\")).field(\"optional\",Boolean),n(\"ArrayTypeAnnotation\").bases(\"FlowType\").build(\"elementType\").field(\"elementType\",n(\"FlowType\")),n(\"ObjectTypeAnnotation\").bases(\"FlowType\").build(\"properties\",\"indexers\",\"callProperties\").field(\"properties\",[o(n(\"ObjectTypeProperty\"),n(\"ObjectTypeSpreadProperty\"))]).field(\"indexers\",[n(\"ObjectTypeIndexer\")],l.emptyArray).field(\"callProperties\",[n(\"ObjectTypeCallProperty\")],l.emptyArray).field(\"inexact\",o(Boolean,void 0),l[void 0]).field(\"exact\",Boolean,l.false).field(\"internalSlots\",[n(\"ObjectTypeInternalSlot\")],l.emptyArray),n(\"Variance\").bases(\"Node\").build(\"kind\").field(\"kind\",o(\"plus\",\"minus\"));var c=o(n(\"Variance\"),\"plus\",\"minus\",null);n(\"ObjectTypeProperty\").bases(\"Node\").build(\"key\",\"value\",\"optional\").field(\"key\",o(n(\"Literal\"),n(\"Identifier\"))).field(\"value\",n(\"FlowType\")).field(\"optional\",Boolean).field(\"variance\",c,l.null),n(\"ObjectTypeIndexer\").bases(\"Node\").build(\"id\",\"key\",\"value\").field(\"id\",n(\"Identifier\")).field(\"key\",n(\"FlowType\")).field(\"value\",n(\"FlowType\")).field(\"variance\",c,l.null).field(\"static\",Boolean,l.false),n(\"ObjectTypeCallProperty\").bases(\"Node\").build(\"value\").field(\"value\",n(\"FunctionTypeAnnotation\")).field(\"static\",Boolean,l.false),n(\"QualifiedTypeIdentifier\").bases(\"Node\").build(\"qualification\",\"id\").field(\"qualification\",o(n(\"Identifier\"),n(\"QualifiedTypeIdentifier\"))).field(\"id\",n(\"Identifier\")),n(\"GenericTypeAnnotation\").bases(\"FlowType\").build(\"id\",\"typeParameters\").field(\"id\",o(n(\"Identifier\"),n(\"QualifiedTypeIdentifier\"))).field(\"typeParameters\",o(n(\"TypeParameterInstantiation\"),null)),n(\"MemberTypeAnnotation\").bases(\"FlowType\").build(\"object\",\"property\").field(\"object\",n(\"Identifier\")).field(\"property\",o(n(\"MemberTypeAnnotation\"),n(\"GenericTypeAnnotation\"))),n(\"IndexedAccessType\").bases(\"FlowType\").build(\"objectType\",\"indexType\").field(\"objectType\",n(\"FlowType\")).field(\"indexType\",n(\"FlowType\")),n(\"OptionalIndexedAccessType\").bases(\"FlowType\").build(\"objectType\",\"indexType\",\"optional\").field(\"objectType\",n(\"FlowType\")).field(\"indexType\",n(\"FlowType\")).field(\"optional\",Boolean),n(\"UnionTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\",[n(\"FlowType\")]),n(\"IntersectionTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\",[n(\"FlowType\")]),n(\"TypeofTypeAnnotation\").bases(\"FlowType\").build(\"argument\").field(\"argument\",n(\"FlowType\")),n(\"ObjectTypeSpreadProperty\").bases(\"Node\").build(\"argument\").field(\"argument\",n(\"FlowType\")),n(\"ObjectTypeInternalSlot\").bases(\"Node\").build(\"id\",\"value\",\"optional\",\"static\",\"method\").field(\"id\",n(\"Identifier\")).field(\"value\",n(\"FlowType\")).field(\"optional\",Boolean).field(\"static\",Boolean).field(\"method\",Boolean),n(\"TypeParameterDeclaration\").bases(\"Node\").build(\"params\").field(\"params\",[n(\"TypeParameter\")]),n(\"TypeParameterInstantiation\").bases(\"Node\").build(\"params\").field(\"params\",[n(\"FlowType\")]),n(\"TypeParameter\").bases(\"FlowType\").build(\"name\",\"variance\",\"bound\",\"default\").field(\"name\",String).field(\"variance\",c,l.null).field(\"bound\",o(n(\"TypeAnnotation\"),null),l.null).field(\"default\",o(n(\"FlowType\"),null),l.null),n(\"ClassProperty\").field(\"variance\",c,l.null),n(\"ClassImplements\").bases(\"Node\").build(\"id\").field(\"id\",n(\"Identifier\")).field(\"superClass\",o(n(\"Expression\"),null),l.null).field(\"typeParameters\",o(n(\"TypeParameterInstantiation\"),null),l.null),n(\"InterfaceTypeAnnotation\").bases(\"FlowType\").build(\"body\",\"extends\").field(\"body\",n(\"ObjectTypeAnnotation\")).field(\"extends\",o([n(\"InterfaceExtends\")],null),l.null),n(\"InterfaceDeclaration\").bases(\"Declaration\").build(\"id\",\"body\",\"extends\").field(\"id\",n(\"Identifier\")).field(\"typeParameters\",o(n(\"TypeParameterDeclaration\"),null),l.null).field(\"body\",n(\"ObjectTypeAnnotation\")).field(\"extends\",[n(\"InterfaceExtends\")]),n(\"DeclareInterface\").bases(\"InterfaceDeclaration\").build(\"id\",\"body\",\"extends\"),n(\"InterfaceExtends\").bases(\"Node\").build(\"id\").field(\"id\",n(\"Identifier\")).field(\"typeParameters\",o(n(\"TypeParameterInstantiation\"),null),l.null),n(\"TypeAlias\").bases(\"Declaration\").build(\"id\",\"typeParameters\",\"right\").field(\"id\",n(\"Identifier\")).field(\"typeParameters\",o(n(\"TypeParameterDeclaration\"),null)).field(\"right\",n(\"FlowType\")),n(\"DeclareTypeAlias\").bases(\"TypeAlias\").build(\"id\",\"typeParameters\",\"right\"),n(\"OpaqueType\").bases(\"Declaration\").build(\"id\",\"typeParameters\",\"impltype\",\"supertype\").field(\"id\",n(\"Identifier\")).field(\"typeParameters\",o(n(\"TypeParameterDeclaration\"),null)).field(\"impltype\",n(\"FlowType\")).field(\"supertype\",o(n(\"FlowType\"),null)),n(\"DeclareOpaqueType\").bases(\"OpaqueType\").build(\"id\",\"typeParameters\",\"supertype\").field(\"impltype\",o(n(\"FlowType\"),null)),n(\"TypeCastExpression\").bases(\"Expression\").build(\"expression\",\"typeAnnotation\").field(\"expression\",n(\"Expression\")).field(\"typeAnnotation\",n(\"TypeAnnotation\")),n(\"TupleTypeAnnotation\").bases(\"FlowType\").build(\"types\").field(\"types\",[n(\"FlowType\")]),n(\"DeclareVariable\").bases(\"Statement\").build(\"id\").field(\"id\",n(\"Identifier\")),n(\"DeclareFunction\").bases(\"Statement\").build(\"id\").field(\"id\",n(\"Identifier\")).field(\"predicate\",o(n(\"FlowPredicate\"),null),l.null),n(\"DeclareClass\").bases(\"InterfaceDeclaration\").build(\"id\"),n(\"DeclareModule\").bases(\"Statement\").build(\"id\",\"body\").field(\"id\",o(n(\"Identifier\"),n(\"Literal\"))).field(\"body\",n(\"BlockStatement\")),n(\"DeclareModuleExports\").bases(\"Statement\").build(\"typeAnnotation\").field(\"typeAnnotation\",n(\"TypeAnnotation\")),n(\"DeclareExportDeclaration\").bases(\"Declaration\").build(\"default\",\"declaration\",\"specifiers\",\"source\").field(\"default\",Boolean).field(\"declaration\",o(n(\"DeclareVariable\"),n(\"DeclareFunction\"),n(\"DeclareClass\"),n(\"FlowType\"),n(\"TypeAlias\"),n(\"DeclareOpaqueType\"),n(\"InterfaceDeclaration\"),null)).field(\"specifiers\",[o(n(\"ExportSpecifier\"),n(\"ExportBatchSpecifier\"))],l.emptyArray).field(\"source\",o(n(\"Literal\"),null),l.null),n(\"DeclareExportAllDeclaration\").bases(\"Declaration\").build(\"source\").field(\"source\",o(n(\"Literal\"),null),l.null),n(\"ImportDeclaration\").field(\"importKind\",o(\"value\",\"type\",\"typeof\"),(function(){return\"value\"})),n(\"FlowPredicate\").bases(\"Flow\"),n(\"InferredPredicate\").bases(\"FlowPredicate\").build(),n(\"DeclaredPredicate\").bases(\"FlowPredicate\").build(\"value\").field(\"value\",n(\"Expression\")),n(\"Function\").field(\"predicate\",o(n(\"FlowPredicate\"),null),l.null),n(\"CallExpression\").field(\"typeArguments\",o(null,n(\"TypeParameterInstantiation\")),l.null),n(\"NewExpression\").field(\"typeArguments\",o(null,n(\"TypeParameterInstantiation\")),l.null),n(\"EnumDeclaration\").bases(\"Declaration\").build(\"id\",\"body\").field(\"id\",n(\"Identifier\")).field(\"body\",o(n(\"EnumBooleanBody\"),n(\"EnumNumberBody\"),n(\"EnumStringBody\"),n(\"EnumSymbolBody\"))),n(\"EnumBooleanBody\").build(\"members\",\"explicitType\").field(\"members\",[n(\"EnumBooleanMember\")]).field(\"explicitType\",Boolean),n(\"EnumNumberBody\").build(\"members\",\"explicitType\").field(\"members\",[n(\"EnumNumberMember\")]).field(\"explicitType\",Boolean),n(\"EnumStringBody\").build(\"members\",\"explicitType\").field(\"members\",o([n(\"EnumStringMember\")],[n(\"EnumDefaultedMember\")])).field(\"explicitType\",Boolean),n(\"EnumSymbolBody\").build(\"members\").field(\"members\",[n(\"EnumDefaultedMember\")]),n(\"EnumBooleanMember\").build(\"id\",\"init\").field(\"id\",n(\"Identifier\")).field(\"init\",o(n(\"Literal\"),Boolean)),n(\"EnumNumberMember\").build(\"id\",\"init\").field(\"id\",n(\"Identifier\")).field(\"init\",n(\"Literal\")),n(\"EnumStringMember\").build(\"id\",\"init\").field(\"id\",n(\"Identifier\")).field(\"init\",n(\"Literal\")),n(\"EnumDefaultedMember\").build(\"id\").field(\"id\",n(\"Identifier\"))},(0,s.maybeSetModuleExports)((function(){return e}))}(Fn,Fn.exports)),Fn.exports}var Un,zn,Wn,Gn={exports:{}},Jn={exports:{}},$n={exports:{}};function Hn(){return zn||(zn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Dn()),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){var t,n,s,o,l;e.use(r.default);var c=e.use(i.default),u=e.use(a.default).defaults,p=c.Type.def,h=c.Type.or,d=c.builtInTypes.undefined;function f(e,t){return void 0===e&&(e=String),[\"extra\",{rawValue:e,raw:String},function(){var e=c.getFieldValue(this,\"value\");return{rawValue:e,raw:t?t(e):e+\"\"}}]}p(\"Noop\").bases(\"Statement\").build(),p(\"DoExpression\").bases(\"Expression\").build(\"body\").field(\"body\",[p(\"Statement\")]),p(\"BindExpression\").bases(\"Expression\").build(\"object\",\"callee\").field(\"object\",h(p(\"Expression\"),null)).field(\"callee\",p(\"Expression\")),p(\"ParenthesizedExpression\").bases(\"Expression\").build(\"expression\").field(\"expression\",p(\"Expression\")),p(\"ExportNamespaceSpecifier\").bases(\"Specifier\").build(\"exported\").field(\"exported\",p(\"Identifier\")),p(\"ExportDefaultSpecifier\").bases(\"Specifier\").build(\"exported\").field(\"exported\",p(\"Identifier\")),p(\"CommentBlock\").bases(\"Comment\").build(\"value\",\"leading\",\"trailing\"),p(\"CommentLine\").bases(\"Comment\").build(\"value\",\"leading\",\"trailing\"),p(\"Directive\").bases(\"Node\").build(\"value\").field(\"value\",p(\"DirectiveLiteral\")),p(\"DirectiveLiteral\").bases(\"Node\",\"Expression\").build(\"value\").field(\"value\",String,u[\"use strict\"]),p(\"InterpreterDirective\").bases(\"Node\").build(\"value\").field(\"value\",String),p(\"BlockStatement\").bases(\"Statement\").build(\"body\").field(\"body\",[p(\"Statement\")]).field(\"directives\",[p(\"Directive\")],u.emptyArray),p(\"Program\").bases(\"Node\").build(\"body\").field(\"body\",[p(\"Statement\")]).field(\"directives\",[p(\"Directive\")],u.emptyArray).field(\"interpreter\",h(p(\"InterpreterDirective\"),null),u.null),(t=p(\"StringLiteral\").bases(\"Literal\").build(\"value\").field(\"value\",String)).field.apply(t,f(String,(function(e){return JSON.stringify(e)}))),(n=p(\"NumericLiteral\").bases(\"Literal\").build(\"value\").field(\"value\",Number).field(\"raw\",h(String,null),u.null)).field.apply(n,f(Number)),(s=p(\"BigIntLiteral\").bases(\"Literal\").build(\"value\").field(\"value\",h(String,Number))).field.apply(s,f(String,(function(e){return e+\"n\"}))),(o=p(\"DecimalLiteral\").bases(\"Literal\").build(\"value\").field(\"value\",String)).field.apply(o,f(String,(function(e){return e+\"m\"}))),p(\"NullLiteral\").bases(\"Literal\").build().field(\"value\",null,u.null),p(\"BooleanLiteral\").bases(\"Literal\").build(\"value\").field(\"value\",Boolean),(l=p(\"RegExpLiteral\").bases(\"Literal\").build(\"pattern\",\"flags\").field(\"pattern\",String).field(\"flags\",String).field(\"value\",RegExp,(function(){return RegExp(this.pattern,this.flags)}))).field.apply(l,f(h(RegExp,d),(function(e){return\"/\".concat(e.pattern,\"/\").concat(e.flags||\"\")}))).field(\"regex\",{pattern:String,flags:String},(function(){return{pattern:this.pattern,flags:this.flags}}));var m=h(p(\"Property\"),p(\"ObjectMethod\"),p(\"ObjectProperty\"),p(\"SpreadProperty\"),p(\"SpreadElement\"));p(\"ObjectExpression\").bases(\"Expression\").build(\"properties\").field(\"properties\",[m]),p(\"ObjectMethod\").bases(\"Node\",\"Function\").build(\"kind\",\"key\",\"params\",\"body\",\"computed\").field(\"kind\",h(\"method\",\"get\",\"set\")).field(\"key\",h(p(\"Literal\"),p(\"Identifier\"),p(\"Expression\"))).field(\"params\",[p(\"Pattern\")]).field(\"body\",p(\"BlockStatement\")).field(\"computed\",Boolean,u.false).field(\"generator\",Boolean,u.false).field(\"async\",Boolean,u.false).field(\"accessibility\",h(p(\"Literal\"),null),u.null).field(\"decorators\",h([p(\"Decorator\")],null),u.null),p(\"ObjectProperty\").bases(\"Node\").build(\"key\",\"value\").field(\"key\",h(p(\"Literal\"),p(\"Identifier\"),p(\"Expression\"))).field(\"value\",h(p(\"Expression\"),p(\"Pattern\"))).field(\"accessibility\",h(p(\"Literal\"),null),u.null).field(\"computed\",Boolean,u.false);var y=h(p(\"MethodDefinition\"),p(\"VariableDeclarator\"),p(\"ClassPropertyDefinition\"),p(\"ClassProperty\"),p(\"ClassPrivateProperty\"),p(\"ClassMethod\"),p(\"ClassPrivateMethod\"),p(\"ClassAccessorProperty\"),p(\"StaticBlock\"));p(\"ClassBody\").bases(\"Declaration\").build(\"body\").field(\"body\",[y]),p(\"ClassMethod\").bases(\"Declaration\",\"Function\").build(\"kind\",\"key\",\"params\",\"body\",\"computed\",\"static\").field(\"key\",h(p(\"Literal\"),p(\"Identifier\"),p(\"Expression\"))),p(\"ClassPrivateMethod\").bases(\"Declaration\",\"Function\").build(\"key\",\"params\",\"body\",\"kind\",\"computed\",\"static\").field(\"key\",p(\"PrivateName\")),p(\"ClassAccessorProperty\").bases(\"Declaration\").build(\"key\",\"value\",\"decorators\",\"computed\",\"static\").field(\"key\",h(p(\"Literal\"),p(\"Identifier\"),p(\"PrivateName\"),p(\"Expression\"))).field(\"value\",h(p(\"Expression\"),null),u.null),[\"ClassMethod\",\"ClassPrivateMethod\"].forEach((function(e){p(e).field(\"kind\",h(\"get\",\"set\",\"method\",\"constructor\"),(function(){return\"method\"})).field(\"body\",p(\"BlockStatement\")).field(\"access\",h(\"public\",\"private\",\"protected\",null),u.null)})),[\"ClassMethod\",\"ClassPrivateMethod\",\"ClassAccessorProperty\"].forEach((function(e){p(e).field(\"computed\",Boolean,u.false).field(\"static\",Boolean,u.false).field(\"abstract\",Boolean,u.false).field(\"accessibility\",h(\"public\",\"private\",\"protected\",null),u.null).field(\"decorators\",h([p(\"Decorator\")],null),u.null).field(\"definite\",Boolean,u.false).field(\"optional\",Boolean,u.false).field(\"override\",Boolean,u.false).field(\"readonly\",Boolean,u.false)}));var g=h(p(\"Property\"),p(\"PropertyPattern\"),p(\"SpreadPropertyPattern\"),p(\"SpreadProperty\"),p(\"ObjectProperty\"),p(\"RestProperty\"),p(\"RestElement\"));p(\"ObjectPattern\").bases(\"Pattern\").build(\"properties\").field(\"properties\",[g]).field(\"decorators\",h([p(\"Decorator\")],null),u.null),p(\"SpreadProperty\").bases(\"Node\").build(\"argument\").field(\"argument\",p(\"Expression\")),p(\"RestProperty\").bases(\"Node\").build(\"argument\").field(\"argument\",p(\"Expression\")),p(\"ForAwaitStatement\").bases(\"Statement\").build(\"left\",\"right\",\"body\").field(\"left\",h(p(\"VariableDeclaration\"),p(\"Expression\"))).field(\"right\",p(\"Expression\")).field(\"body\",p(\"Statement\")),p(\"Import\").bases(\"Expression\").build()},(0,a.maybeSetModuleExports)((function(){return e}))}($n,$n.exports)),$n.exports}var Kn,Xn,Yn,Qn={exports:{}},Zn={};function er(){return Yn||(Yn=1,function(e){Object.defineProperty(e,\"__esModule\",{value:!0}),e.visit=e.use=e.Type=e.someField=e.PathVisitor=e.Path=e.NodePath=e.namedTypes=e.getSupertypeNames=e.getFieldValue=e.getFieldNames=e.getBuilderName=e.finalize=e.eachField=e.defineMethod=e.builtInTypes=e.builders=e.astNodesAreEquivalent=void 0;var t=Lt,n=t.__importDefault((Qt||(Qt=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Rt()),i=n.__importDefault((Ht||(Ht=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Rt()),i=n.__importDefault(Xt()),a=Vt(),s=Object.prototype.hasOwnProperty;t.default=function(e){var t=e.use(r.default),n=e.use(i.default),a=t.builtInTypes.array,o=t.builtInTypes.object,l=t.builtInTypes.function,c=function e(){if(!(this instanceof e))throw Error(\"PathVisitor constructor cannot be invoked without 'new'\");this._reusableContextStack=[],this._methodNameTable=function(e){var n=Object.create(null);for(var r in e)/^visit[A-Z]/.test(r)&&(n[r.slice(5)]=!0);for(var i=t.computeSupertypeLookupTable(n),a=Object.create(null),s=Object.keys(i),o=s.length,c=0;c<o;++c){var u=s[c];r=\"visit\"+i[u],l.check(e[r])&&(a[u]=r)}return a}(this),this._shouldVisitComments=s.call(this._methodNameTable,\"Block\")||s.call(this._methodNameTable,\"Line\"),this.Context=d(this),this._visiting=!1,this._changeReported=!1};function u(e,t){for(var n in t)s.call(t,n)&&(e[n]=t[n]);return e}c.fromMethodsObject=function(e){if(e instanceof c)return e;if(!o.check(e))return new c;var t=function e(){if(!(this instanceof e))throw Error(\"Visitor constructor cannot be invoked without 'new'\");c.call(this)},n=t.prototype=Object.create(p);return n.constructor=t,u(n,e),u(t,c),l.assert(t.fromMethodsObject),l.assert(t.visit),new t},c.visit=function(e,t){return c.fromMethodsObject(t).visit(e)};var p=c.prototype;function h(e,r){if(!(e instanceof n))throw Error(\"\");if(!(r instanceof c))throw Error(\"\");var i=e.value;if(a.check(i))e.each(r.visitWithoutReset,r);else if(o.check(i)){var l=t.getFieldNames(i);r._shouldVisitComments&&i.comments&&l.indexOf(\"comments\")<0&&l.push(\"comments\");for(var u=l.length,p=[],h=0;h<u;++h){var d=l[h];s.call(i,d)||(i[d]=t.getFieldValue(i,d)),p.push(e.get(d))}for(h=0;h<u;++h)r.visitWithoutReset(p[h])}return e.value}function d(e){function t(r){if(!(this instanceof t))throw Error(\"\");if(!(this instanceof c))throw Error(\"\");if(!(r instanceof n))throw Error(\"\");Object.defineProperty(this,\"visitor\",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.currentPath=r,this.needToCallTraverse=!0,Object.seal(this)}if(!(e instanceof c))throw Error(\"\");var r=t.prototype=Object.create(e);return r.constructor=t,u(r,f),t}p.visit=function(){if(this._visiting)throw Error(\"Recursively calling visitor.visit(path) resets visitor state. Try this.visit(path) or this.traverse(path) instead.\");this._visiting=!0,this._changeReported=!1,this._abortRequested=!1;for(var e,t=arguments.length,r=Array(t),i=0;i<t;++i)r[i]=arguments[i];r[0]instanceof n||(r[0]=new n({root:r[0]}).get(\"root\")),this.reset.apply(this,r);try{var a=this.visitWithoutReset(r[0]);e=!0}finally{if(this._visiting=!1,!e&&this._abortRequested)return r[0].value}return a},p.AbortRequest=function(){},p.abort=function(){var e=this;e._abortRequested=!0;var t=new e.AbortRequest;throw t.cancel=function(){e._abortRequested=!1},t},p.reset=function(e){},p.visitWithoutReset=function(e){if(this instanceof this.Context)return this.visitor.visitWithoutReset(e);if(!(e instanceof n))throw Error(\"\");var t=e.value,r=t&&\"object\"==typeof t&&\"string\"==typeof t.type&&this._methodNameTable[t.type];if(!r)return h(e,this);var i=this.acquireContext(e);try{return i.invokeVisitorMethod(r)}finally{this.releaseContext(i)}},p.acquireContext=function(e){return 0===this._reusableContextStack.length?new this.Context(e):this._reusableContextStack.pop().reset(e)},p.releaseContext=function(e){if(!(e instanceof this.Context))throw Error(\"\");this._reusableContextStack.push(e),e.currentPath=null},p.reportChanged=function(){this._changeReported=!0},p.wasChangeReported=function(){return this._changeReported};var f=Object.create(null);return f.reset=function(e){if(!(this instanceof this.Context))throw Error(\"\");if(!(e instanceof n))throw Error(\"\");return this.currentPath=e,this.needToCallTraverse=!0,this},f.invokeVisitorMethod=function(e){if(!(this instanceof this.Context))throw Error(\"\");if(!(this.currentPath instanceof n))throw Error(\"\");var t=this.visitor[e].call(this,this.currentPath);if(!1===t?this.needToCallTraverse=!1:void 0!==t&&(this.currentPath=this.currentPath.replace(t)[0],this.needToCallTraverse&&this.traverse(this.currentPath)),!1!==this.needToCallTraverse)throw Error(\"Must either call this.traverse or return false in \"+e);var r=this.currentPath;return r&&r.value},f.traverse=function(e,t){if(!(this instanceof this.Context))throw Error(\"\");if(!(e instanceof n))throw Error(\"\");if(!(this.currentPath instanceof n))throw Error(\"\");return this.needToCallTraverse=!1,h(e,c.fromMethodsObject(t||this.visitor))},f.visit=function(e,t){if(!(this instanceof this.Context))throw Error(\"\");if(!(e instanceof n))throw Error(\"\");if(!(this.currentPath instanceof n))throw Error(\"\");return this.needToCallTraverse=!1,c.fromMethodsObject(t||this.visitor).visitWithoutReset(e)},f.reportChanged=function(){this.visitor.reportChanged()},f.abort=function(){this.needToCallTraverse=!1,this.visitor.abort()},c},(0,a.maybeSetModuleExports)((function(){return e}))}(Ut,Ut.exports)),Ut.exports)),a=n.__importDefault(en()),s=n.__importDefault(Gt()),o=n.__importDefault(Xt()),l=Vt();t.default=function(e){var t=function(){var e=[],t=[],n={use:function(r){var i=e.indexOf(r);return-1===i&&(i=e.length,e.push(r),t[i]=r(n)),t[i]}};return n}(),n=t.use(r.default);e.forEach(t.use),n.finalize();var l=t.use(i.default);return{Type:n.Type,builtInTypes:n.builtInTypes,namedTypes:n.namedTypes,builders:n.builders,defineMethod:n.defineMethod,getFieldNames:n.getFieldNames,getFieldValue:n.getFieldValue,eachField:n.eachField,someField:n.someField,getSupertypeNames:n.getSupertypeNames,getBuilderName:n.getBuilderName,astNodesAreEquivalent:t.use(a.default),finalize:n.finalize,Path:t.use(s.default),NodePath:t.use(o.default),PathVisitor:l,use:t.use,visit:l.visit}},(0,l.maybeSetModuleExports)((function(){return e}))}(Mt,Mt.exports)),Mt.exports)),r=t.__importDefault(Dn()),i=t.__importDefault((Ln||(Ln=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Dn()),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){e.use(r.default);var t=e.use(i.default),n=t.Type.def,s=t.Type.or,o=e.use(a.default).defaults;n(\"JSXAttribute\").bases(\"Node\").build(\"name\",\"value\").field(\"name\",s(n(\"JSXIdentifier\"),n(\"JSXNamespacedName\"))).field(\"value\",s(n(\"Literal\"),n(\"JSXExpressionContainer\"),n(\"JSXElement\"),n(\"JSXFragment\"),null),o.null),n(\"JSXIdentifier\").bases(\"Identifier\").build(\"name\").field(\"name\",String),n(\"JSXNamespacedName\").bases(\"Node\").build(\"namespace\",\"name\").field(\"namespace\",n(\"JSXIdentifier\")).field(\"name\",n(\"JSXIdentifier\")),n(\"JSXMemberExpression\").bases(\"MemberExpression\").build(\"object\",\"property\").field(\"object\",s(n(\"JSXIdentifier\"),n(\"JSXMemberExpression\"))).field(\"property\",n(\"JSXIdentifier\")).field(\"computed\",Boolean,o.false);var l=s(n(\"JSXIdentifier\"),n(\"JSXNamespacedName\"),n(\"JSXMemberExpression\"));n(\"JSXSpreadAttribute\").bases(\"Node\").build(\"argument\").field(\"argument\",n(\"Expression\"));var c=[s(n(\"JSXAttribute\"),n(\"JSXSpreadAttribute\"))];n(\"JSXExpressionContainer\").bases(\"Expression\").build(\"expression\").field(\"expression\",s(n(\"Expression\"),n(\"JSXEmptyExpression\")));var u=[s(n(\"JSXText\"),n(\"JSXExpressionContainer\"),n(\"JSXSpreadChild\"),n(\"JSXElement\"),n(\"JSXFragment\"),n(\"Literal\"))];n(\"JSXElement\").bases(\"Expression\").build(\"openingElement\",\"closingElement\",\"children\").field(\"openingElement\",n(\"JSXOpeningElement\")).field(\"closingElement\",s(n(\"JSXClosingElement\"),null),o.null).field(\"children\",u,o.emptyArray).field(\"name\",l,(function(){return this.openingElement.name}),!0).field(\"selfClosing\",Boolean,(function(){return this.openingElement.selfClosing}),!0).field(\"attributes\",c,(function(){return this.openingElement.attributes}),!0),n(\"JSXOpeningElement\").bases(\"Node\").build(\"name\",\"attributes\",\"selfClosing\").field(\"name\",l).field(\"attributes\",c,o.emptyArray).field(\"selfClosing\",Boolean,o.false),n(\"JSXClosingElement\").bases(\"Node\").build(\"name\").field(\"name\",l),n(\"JSXFragment\").bases(\"Expression\").build(\"openingFragment\",\"closingFragment\",\"children\").field(\"openingFragment\",n(\"JSXOpeningFragment\")).field(\"closingFragment\",n(\"JSXClosingFragment\")).field(\"children\",u,o.emptyArray),n(\"JSXOpeningFragment\").bases(\"Node\").build(),n(\"JSXClosingFragment\").bases(\"Node\").build(),n(\"JSXText\").bases(\"Literal\").build(\"value\",\"raw\").field(\"value\",String).field(\"raw\",String,(function(){return this.value})),n(\"JSXEmptyExpression\").bases(\"Node\").build(),n(\"JSXSpreadChild\").bases(\"Node\").build(\"expression\").field(\"expression\",n(\"Expression\"))},(0,a.maybeSetModuleExports)((function(){return e}))}(Bn,Bn.exports)),Bn.exports)),a=t.__importDefault(qn()),s=t.__importDefault((Un||(Un=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Dn()),i=n.__importDefault(Rt()),a=n.__importStar(Vt());t.default=function(e){e.use(r.default);var t=e.use(i.default),n=e.use(a.default).defaults,s=t.Type.def,o=t.Type.or;s(\"VariableDeclaration\").field(\"declarations\",[o(s(\"VariableDeclarator\"),s(\"Identifier\"))]),s(\"Property\").field(\"value\",o(s(\"Expression\"),s(\"Pattern\"))),s(\"ArrayPattern\").field(\"elements\",[o(s(\"Pattern\"),s(\"SpreadElement\"),null)]),s(\"ObjectPattern\").field(\"properties\",[o(s(\"Property\"),s(\"PropertyPattern\"),s(\"SpreadPropertyPattern\"),s(\"SpreadProperty\"))]),s(\"ExportSpecifier\").bases(\"ModuleSpecifier\").build(\"id\",\"name\"),s(\"ExportBatchSpecifier\").bases(\"Specifier\").build(),s(\"ExportDeclaration\").bases(\"Declaration\").build(\"default\",\"declaration\",\"specifiers\",\"source\").field(\"default\",Boolean).field(\"declaration\",o(s(\"Declaration\"),s(\"Expression\"),null)).field(\"specifiers\",[o(s(\"ExportSpecifier\"),s(\"ExportBatchSpecifier\"))],n.emptyArray).field(\"source\",o(s(\"Literal\"),null),n.null),s(\"Block\").bases(\"Comment\").build(\"value\",\"leading\",\"trailing\"),s(\"Line\").bases(\"Comment\").build(\"value\",\"leading\",\"trailing\")},(0,a.maybeSetModuleExports)((function(){return e}))}(Gn,Gn.exports)),Gn.exports)),o=t.__importDefault((Wn||(Wn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Rt()),i=n.__importDefault(Hn()),a=n.__importDefault(qn()),s=Vt();t.default=function(e){var t=e.use(r.default).Type.def;e.use(i.default),e.use(a.default),t(\"V8IntrinsicIdentifier\").bases(\"Expression\").build(\"name\").field(\"name\",String),t(\"TopicReference\").bases(\"Expression\").build()},(0,s.maybeSetModuleExports)((function(){return e}))}(Jn,Jn.exports)),Jn.exports)),l=t.__importDefault((Kn||(Kn=1,function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=Lt,r=n.__importDefault(Hn()),i=n.__importDefault(Rn()),a=n.__importDefault(Rt()),s=n.__importStar(Vt());t.default=function(e){e.use(r.default),e.use(i.default);var t=e.use(a.default),n=t.namedTypes,o=t.Type.def,l=t.Type.or,c=e.use(s.default).defaults,u=t.Type.from((function(e,t){return!(!n.StringLiteral||!n.StringLiteral.check(e,t))||!(!n.Literal||!n.Literal.check(e,t)||\"string\"!=typeof e.value)}),\"StringLiteral\");o(\"TSType\").bases(\"Node\");var p=l(o(\"Identifier\"),o(\"TSQualifiedName\"));o(\"TSTypeReference\").bases(\"TSType\",\"TSHasOptionalTypeParameterInstantiation\").build(\"typeName\",\"typeParameters\").field(\"typeName\",p),o(\"TSHasOptionalTypeParameterInstantiation\").field(\"typeParameters\",l(o(\"TSTypeParameterInstantiation\"),null),c.null),o(\"TSHasOptionalTypeParameters\").field(\"typeParameters\",l(o(\"TSTypeParameterDeclaration\"),null,void 0),c.null),o(\"TSHasOptionalTypeAnnotation\").field(\"typeAnnotation\",l(o(\"TSTypeAnnotation\"),null),c.null),o(\"TSQualifiedName\").bases(\"Node\").build(\"left\",\"right\").field(\"left\",p).field(\"right\",p),o(\"TSAsExpression\").bases(\"Expression\",\"Pattern\").build(\"expression\",\"typeAnnotation\").field(\"expression\",o(\"Expression\")).field(\"typeAnnotation\",o(\"TSType\")).field(\"extra\",l({parenthesized:Boolean},null),c.null),o(\"TSTypeCastExpression\").bases(\"Expression\").build(\"expression\",\"typeAnnotation\").field(\"expression\",o(\"Expression\")).field(\"typeAnnotation\",o(\"TSType\")),o(\"TSSatisfiesExpression\").bases(\"Expression\",\"Pattern\").build(\"expression\",\"typeAnnotation\").field(\"expression\",o(\"Expression\")).field(\"typeAnnotation\",o(\"TSType\")),o(\"TSNonNullExpression\").bases(\"Expression\",\"Pattern\").build(\"expression\").field(\"expression\",o(\"Expression\")),[\"TSAnyKeyword\",\"TSBigIntKeyword\",\"TSBooleanKeyword\",\"TSNeverKeyword\",\"TSNullKeyword\",\"TSNumberKeyword\",\"TSObjectKeyword\",\"TSStringKeyword\",\"TSSymbolKeyword\",\"TSUndefinedKeyword\",\"TSUnknownKeyword\",\"TSVoidKeyword\",\"TSIntrinsicKeyword\",\"TSThisType\"].forEach((function(e){o(e).bases(\"TSType\").build()})),o(\"TSArrayType\").bases(\"TSType\").build(\"elementType\").field(\"elementType\",o(\"TSType\")),o(\"TSLiteralType\").bases(\"TSType\").build(\"literal\").field(\"literal\",l(o(\"NumericLiteral\"),o(\"StringLiteral\"),o(\"BooleanLiteral\"),o(\"TemplateLiteral\"),o(\"UnaryExpression\"),o(\"BigIntLiteral\"))),o(\"TemplateLiteral\").field(\"expressions\",l([o(\"Expression\")],[o(\"TSType\")])),[\"TSUnionType\",\"TSIntersectionType\"].forEach((function(e){o(e).bases(\"TSType\").build(\"types\").field(\"types\",[o(\"TSType\")])})),o(\"TSConditionalType\").bases(\"TSType\").build(\"checkType\",\"extendsType\",\"trueType\",\"falseType\").field(\"checkType\",o(\"TSType\")).field(\"extendsType\",o(\"TSType\")).field(\"trueType\",o(\"TSType\")).field(\"falseType\",o(\"TSType\")),o(\"TSInferType\").bases(\"TSType\").build(\"typeParameter\").field(\"typeParameter\",o(\"TSTypeParameter\")),o(\"TSParenthesizedType\").bases(\"TSType\").build(\"typeAnnotation\").field(\"typeAnnotation\",o(\"TSType\"));var h=[l(o(\"Identifier\"),o(\"RestElement\"),o(\"ArrayPattern\"),o(\"ObjectPattern\"))];[\"TSFunctionType\",\"TSConstructorType\"].forEach((function(e){o(e).bases(\"TSType\",\"TSHasOptionalTypeParameters\",\"TSHasOptionalTypeAnnotation\").build(\"parameters\").field(\"parameters\",h)})),o(\"TSDeclareFunction\").bases(\"Declaration\",\"TSHasOptionalTypeParameters\").build(\"id\",\"params\",\"returnType\").field(\"declare\",Boolean,c.false).field(\"async\",Boolean,c.false).field(\"generator\",Boolean,c.false).field(\"id\",l(o(\"Identifier\"),null),c.null).field(\"params\",[o(\"Pattern\")]).field(\"returnType\",l(o(\"TSTypeAnnotation\"),o(\"Noop\"),null),c.null),o(\"TSDeclareMethod\").bases(\"Declaration\",\"TSHasOptionalTypeParameters\").build(\"key\",\"params\",\"returnType\").field(\"async\",Boolean,c.false).field(\"generator\",Boolean,c.false).field(\"params\",[o(\"Pattern\")]).field(\"abstract\",Boolean,c.false).field(\"accessibility\",l(\"public\",\"private\",\"protected\",void 0),c[void 0]).field(\"static\",Boolean,c.false).field(\"computed\",Boolean,c.false).field(\"optional\",Boolean,c.false).field(\"key\",l(o(\"Identifier\"),o(\"StringLiteral\"),o(\"NumericLiteral\"),o(\"Expression\"))).field(\"kind\",l(\"get\",\"set\",\"method\",\"constructor\"),(function(){return\"method\"})).field(\"access\",l(\"public\",\"private\",\"protected\",void 0),c[void 0]).field(\"decorators\",l([o(\"Decorator\")],null),c.null).field(\"returnType\",l(o(\"TSTypeAnnotation\"),o(\"Noop\"),null),c.null),o(\"TSMappedType\").bases(\"TSType\").build(\"typeParameter\",\"typeAnnotation\").field(\"readonly\",l(Boolean,\"+\",\"-\"),c.false).field(\"typeParameter\",o(\"TSTypeParameter\")).field(\"optional\",l(Boolean,\"+\",\"-\"),c.false).field(\"typeAnnotation\",l(o(\"TSType\"),null),c.null),o(\"TSTupleType\").bases(\"TSType\").build(\"elementTypes\").field(\"elementTypes\",[l(o(\"TSType\"),o(\"TSNamedTupleMember\"))]),o(\"TSNamedTupleMember\").bases(\"TSType\").build(\"label\",\"elementType\",\"optional\").field(\"label\",o(\"Identifier\")).field(\"optional\",Boolean,c.false).field(\"elementType\",o(\"TSType\")),o(\"TSRestType\").bases(\"TSType\").build(\"typeAnnotation\").field(\"typeAnnotation\",o(\"TSType\")),o(\"TSOptionalType\").bases(\"TSType\").build(\"typeAnnotation\").field(\"typeAnnotation\",o(\"TSType\")),o(\"TSIndexedAccessType\").bases(\"TSType\").build(\"objectType\",\"indexType\").field(\"objectType\",o(\"TSType\")).field(\"indexType\",o(\"TSType\")),o(\"TSTypeOperator\").bases(\"TSType\").build(\"operator\").field(\"operator\",String).field(\"typeAnnotation\",o(\"TSType\")),o(\"TSTypeAnnotation\").bases(\"Node\").build(\"typeAnnotation\").field(\"typeAnnotation\",l(o(\"TSType\"),o(\"TSTypeAnnotation\"))),o(\"TSIndexSignature\").bases(\"Declaration\",\"TSHasOptionalTypeAnnotation\").build(\"parameters\",\"typeAnnotation\").field(\"parameters\",[o(\"Identifier\")]).field(\"readonly\",Boolean,c.false),o(\"TSPropertySignature\").bases(\"Declaration\",\"TSHasOptionalTypeAnnotation\").build(\"key\",\"typeAnnotation\",\"optional\").field(\"key\",o(\"Expression\")).field(\"computed\",Boolean,c.false).field(\"readonly\",Boolean,c.false).field(\"optional\",Boolean,c.false).field(\"initializer\",l(o(\"Expression\"),null),c.null),o(\"TSMethodSignature\").bases(\"Declaration\",\"TSHasOptionalTypeParameters\",\"TSHasOptionalTypeAnnotation\").build(\"key\",\"parameters\",\"typeAnnotation\").field(\"key\",o(\"Expression\")).field(\"computed\",Boolean,c.false).field(\"optional\",Boolean,c.false).field(\"parameters\",h),o(\"TSTypePredicate\").bases(\"TSTypeAnnotation\",\"TSType\").build(\"parameterName\",\"typeAnnotation\",\"asserts\").field(\"parameterName\",l(o(\"Identifier\"),o(\"TSThisType\"))).field(\"typeAnnotation\",l(o(\"TSTypeAnnotation\"),null),c.null).field(\"asserts\",Boolean,c.false),[\"TSCallSignatureDeclaration\",\"TSConstructSignatureDeclaration\"].forEach((function(e){o(e).bases(\"Declaration\",\"TSHasOptionalTypeParameters\",\"TSHasOptionalTypeAnnotation\").build(\"parameters\",\"typeAnnotation\").field(\"parameters\",h)})),o(\"TSEnumMember\").bases(\"Node\").build(\"id\",\"initializer\").field(\"id\",l(o(\"Identifier\"),u)).field(\"initializer\",l(o(\"Expression\"),null),c.null),o(\"TSTypeQuery\").bases(\"TSType\").build(\"exprName\").field(\"exprName\",l(p,o(\"TSImportType\")));var d=l(o(\"TSCallSignatureDeclaration\"),o(\"TSConstructSignatureDeclaration\"),o(\"TSIndexSignature\"),o(\"TSMethodSignature\"),o(\"TSPropertySignature\"));o(\"TSTypeLiteral\").bases(\"TSType\").build(\"members\").field(\"members\",[d]),o(\"TSTypeParameter\").bases(\"Identifier\").build(\"name\",\"constraint\",\"default\").field(\"name\",l(o(\"Identifier\"),String)).field(\"constraint\",l(o(\"TSType\"),void 0),c[void 0]).field(\"default\",l(o(\"TSType\"),void 0),c[void 0]),o(\"TSTypeAssertion\").bases(\"Expression\",\"Pattern\").build(\"typeAnnotation\",\"expression\").field(\"typeAnnotation\",o(\"TSType\")).field(\"expression\",o(\"Expression\")).field(\"extra\",l({parenthesized:Boolean},null),c.null),o(\"TSTypeParameterDeclaration\").bases(\"Declaration\").build(\"params\").field(\"params\",[o(\"TSTypeParameter\")]),o(\"TSInstantiationExpression\").bases(\"Expression\",\"TSHasOptionalTypeParameterInstantiation\").build(\"expression\",\"typeParameters\").field(\"expression\",o(\"Expression\")),o(\"TSTypeParameterInstantiation\").bases(\"Node\").build(\"params\").field(\"params\",[o(\"TSType\")]),o(\"TSEnumDeclaration\").bases(\"Declaration\").build(\"id\",\"members\").field(\"id\",o(\"Identifier\")).field(\"const\",Boolean,c.false).field(\"declare\",Boolean,c.false).field(\"members\",[o(\"TSEnumMember\")]).field(\"initializer\",l(o(\"Expression\"),null),c.null),o(\"TSTypeAliasDeclaration\").bases(\"Declaration\",\"TSHasOptionalTypeParameters\").build(\"id\",\"typeAnnotation\").field(\"id\",o(\"Identifier\")).field(\"declare\",Boolean,c.false).field(\"typeAnnotation\",o(\"TSType\")),o(\"TSModuleBlock\").bases(\"Node\").build(\"body\").field(\"body\",[o(\"Statement\")]),o(\"TSModuleDeclaration\").bases(\"Declaration\").build(\"id\",\"body\").field(\"id\",l(u,p)).field(\"declare\",Boolean,c.false).field(\"global\",Boolean,c.false).field(\"body\",l(o(\"TSModuleBlock\"),o(\"TSModuleDeclaration\"),null),c.null),o(\"TSImportType\").bases(\"TSType\",\"TSHasOptionalTypeParameterInstantiation\").build(\"argument\",\"qualifier\",\"typeParameters\").field(\"argument\",u).field(\"qualifier\",l(p,void 0),c[void 0]),o(\"TSImportEqualsDeclaration\").bases(\"Declaration\").build(\"id\",\"moduleReference\").field(\"id\",o(\"Identifier\")).field(\"isExport\",Boolean,c.false).field(\"moduleReference\",l(p,o(\"TSExternalModuleReference\"))),o(\"TSExternalModuleReference\").bases(\"Declaration\").build(\"expression\").field(\"expression\",u),o(\"TSExportAssignment\").bases(\"Statement\").build(\"expression\").field(\"expression\",o(\"Expression\")),o(\"TSNamespaceExportDeclaration\").bases(\"Declaration\").build(\"id\").field(\"id\",o(\"Identifier\")),o(\"TSInterfaceBody\").bases(\"Node\").build(\"body\").field(\"body\",[d]),o(\"TSExpressionWithTypeArguments\").bases(\"TSType\",\"TSHasOptionalTypeParameterInstantiation\").build(\"expression\",\"typeParameters\").field(\"expression\",p),o(\"TSInterfaceDeclaration\").bases(\"Declaration\",\"TSHasOptionalTypeParameters\").build(\"id\",\"body\").field(\"id\",p).field(\"declare\",Boolean,c.false).field(\"extends\",l([o(\"TSExpressionWithTypeArguments\")],null),c.null).field(\"body\",o(\"TSInterfaceBody\")),o(\"TSParameterProperty\").bases(\"Pattern\").build(\"parameter\").field(\"accessibility\",l(\"public\",\"private\",\"protected\",void 0),c[void 0]).field(\"readonly\",Boolean,c.false).field(\"parameter\",l(o(\"Identifier\"),o(\"AssignmentPattern\"))),o(\"ClassProperty\").field(\"access\",l(\"public\",\"private\",\"protected\",void 0),c[void 0]),o(\"ClassAccessorProperty\").bases(\"Declaration\",\"TSHasOptionalTypeAnnotation\"),o(\"ClassBody\").field(\"body\",[l(o(\"MethodDefinition\"),o(\"VariableDeclarator\"),o(\"ClassPropertyDefinition\"),o(\"ClassProperty\"),o(\"ClassPrivateProperty\"),o(\"ClassAccessorProperty\"),o(\"ClassMethod\"),o(\"ClassPrivateMethod\"),o(\"StaticBlock\"),o(\"TSDeclareMethod\"),d)])},(0,s.maybeSetModuleExports)((function(){return e}))}(Qn,Qn.exports)),Qn.exports)),c=(Xn||(Xn=1,function(e){Object.defineProperty(e,\"__esModule\",{value:!0}),e.namedTypes=void 0,e.namedTypes||(e.namedTypes={})}(Zn)),Zn);Object.defineProperty(e,\"namedTypes\",{enumerable:!0,get:function(){return c.namedTypes}});var u=(0,n.default)([r.default,i.default,a.default,s.default,o.default,l.default]),p=u.astNodesAreEquivalent,h=u.builders,d=u.builtInTypes,f=u.defineMethod,m=u.eachField,y=u.finalize,g=u.getBuilderName,b=u.getFieldNames,v=u.getFieldValue,x=u.getSupertypeNames,S=u.namedTypes,E=u.NodePath,T=u.Path,_=u.PathVisitor,k=u.someField,P=u.Type,w=u.use,A=u.visit;e.astNodesAreEquivalent=p,e.builders=h,e.builtInTypes=d,e.defineMethod=f,e.eachField=m,e.finalize=y,e.getBuilderName=g,e.getFieldNames=b,e.getFieldValue=v,e.getSupertypeNames=x,e.NodePath=E,e.Path=T,e.PathVisitor=_,e.someField=k,e.Type=P,e.use=w,e.visit=A,Object.assign(c.namedTypes,S)}(jt)),jt}var tr,nr,rr={};function ir(){return nr?tr:(nr=1,tr=function(e,t){if(!e)throw Error(\"Invariant failed\")})}var ar={},sr={};const or=function(){},lr=function(){return{addMapping:or,setSourceContent:or,toJSON:()=>({})}},cr=function(){},ur=function(){};var pr=Qe(Object.freeze({__proto__:null,SourceMapConsumer:cr,SourceMapGenerator:lr,SourceNode:ur,default:{SourceNode:ur,SourceMapConsumer:cr,SourceMapGenerator:lr}})),hr=Qe(Object.freeze({__proto__:null,EOL:\"\\n\"}));Object.defineProperty(sr,\"__esModule\",{value:!0}),sr.isTrailingCommaEnabled=sr.getParentExportDeclaration=sr.isExportDeclaration=sr.fixFaultyLocations=sr.getTrueLoc=Tr=sr.composeSourceMaps=sr.copyPos=sr.comparePos=sr.getUnionOfKeys=sr.getOption=sr.isBrowser=sr.getLineTerminator=void 0;var dr=Lt,fr=dr.__importDefault(ir()),mr=dr.__importStar(er()).namedTypes,yr=dr.__importDefault(pr),gr=yr.default.SourceMapConsumer,br=yr.default.SourceMapGenerator,vr=Object.prototype.hasOwnProperty;function xr(){return\"undefined\"!=typeof window&&void 0!==window.document}function Sr(e,t){return e.line-t.line||e.column-t.column}function Er(e){return{line:e.line,column:e.column}}sr.getLineTerminator=function(){return xr()?\"\\n\":hr.EOL||\"\\n\"},sr.isBrowser=xr,sr.getOption=function(e,t,n){return e&&vr.call(e,t)?e[t]:n},sr.getUnionOfKeys=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n={},r=e.length,i=0;i<r;++i)for(var a=Object.keys(e[i]),s=a.length,o=0;o<s;++o)n[a[o]]=!0;return n},sr.comparePos=Sr,sr.copyPos=Er;var Tr=sr.composeSourceMaps=function(e,t){if(!e)return t||null;if(!t)return e;var n=new gr(e),r=new gr(t),i=new br({file:t.file,sourceRoot:t.sourceRoot}),a={};return r.eachMapping((function(e){var t=n.originalPositionFor({line:e.originalLine,column:e.originalColumn}),r=t.source;if(null!==r){i.addMapping({source:r,original:Er(t),generated:{line:e.generatedLine,column:e.generatedColumn},name:e.name});var s=n.sourceContentFor(r);s&&!vr.call(a,r)&&(a[r]=s,i.setSourceContent(r,s))}})),i.toJSON()};function _r(e,t){e&&t&&(Sr(t.start,e.start)<0&&(e.start=t.start),Sr(e.end,t.end)<0&&(e.end=t.end))}function kr(e){if(e)switch(e.type){case\"ExportDeclaration\":case\"ExportDefaultDeclaration\":case\"ExportDefaultSpecifier\":case\"DeclareExportDeclaration\":case\"ExportNamedDeclaration\":case\"ExportAllDeclaration\":return!0}return!1}sr.getTrueLoc=function(e,t){if(!e.loc)return null;var n={start:e.loc.start,end:e.loc.end};function r(e){_r(n,e.loc)}return e.declaration&&e.declaration.decorators&&kr(e)&&e.declaration.decorators.forEach(r),Sr(n.start,n.end)<0&&(n.start=Er(n.start),t.skipSpaces(n.start,!1,!0),Sr(n.start,n.end)<0&&(n.end=Er(n.end),t.skipSpaces(n.end,!0,!0))),e.comments&&e.comments.forEach(r),n},sr.fixFaultyLocations=function(e,t){var n=e.loc;if(n&&(n.start.line<1&&(n.start.line=1),n.end.line<1&&(n.end.line=1)),\"File\"===e.type&&(n.start=t.firstPos(),n.end=t.lastPos()),function(e,t){function n(e){for(var n=e&&e.loc,r=n&&n.start,i=n&&Er(n.end);r&&i&&Sr(r,i)<0&&(t.prevPos(i),\";\"===t.charAt(i));)n.end.line=i.line,n.end.column=i.column}\"ForStatement\"===e.type&&(n(e.init),n(e.test),n(e.update))}(e,t),function(e,t){if(\"TemplateLiteral\"===e.type&&0!==e.quasis.length){if(e.loc){var n=Er(e.loc.start);(0,fr.default)(\"`\"===t.charAt(n)),(0,fr.default)(t.nextPos(n));var r=e.quasis[0];Sr(r.loc.start,n)<0&&(r.loc.start=n);var i=Er(e.loc.end);(0,fr.default)(t.prevPos(i)),(0,fr.default)(\"`\"===t.charAt(i));var a=e.quasis[e.quasis.length-1];Sr(i,a.loc.end)<0&&(a.loc.end=i)}e.expressions.forEach((function(n,r){var i=t.skipSpaces(n.loc.start,!0,!1);if(t.prevPos(i)&&\"{\"===t.charAt(i)&&t.prevPos(i)&&\"$\"===t.charAt(i)){var a=e.quasis[r];Sr(i,a.loc.end)<0&&(a.loc.end=i)}var s=t.skipSpaces(n.loc.end,!1,!1);if(\"}\"===t.charAt(s)){(0,fr.default)(t.nextPos(s));var o=e.quasis[r+1];Sr(o.loc.start,s)<0&&(o.loc.start=s)}}))}}(e,t),n&&e.decorators)e.decorators.forEach((function(e){_r(n,e.loc)}));else if(e.declaration&&kr(e)){e.declaration.loc=null;var r=e.declaration.decorators;r&&r.forEach((function(e){_r(n,e.loc)}))}else if(mr.MethodDefinition&&mr.MethodDefinition.check(e)||mr.Property.check(e)&&(e.method||e.shorthand))e.value.loc=null,mr.FunctionExpression.check(e.value)&&(e.value.id=null);else if(\"ObjectTypeProperty\"===e.type){var i=e.loc,a=i&&i.end;a&&(a=Er(a),t.prevPos(a)&&\",\"===t.charAt(a)&&(a=t.skipSpaces(a,!0,!0))&&(i.end=a))}},sr.isExportDeclaration=kr,sr.getParentExportDeclaration=function(e){var t=e.getParentNode();return\"declaration\"===e.getName()&&kr(t)?t:null},sr.isTrailingCommaEnabled=function(e,t){var n=e.trailingComma;return\"object\"==typeof n?!!n[t]:!!n};var Pr,wr,Ar={},Cr=void 0;function Ir(){if(Pr)return Ar;Pr=1,Object.defineProperty(Ar,\"__esModule\",{value:!0}),Ar.parse=void 0;var e=sr;return Ar.parse=function(t,n){var r=[],i=Cr.parse(t,{loc:!0,locations:!0,comment:!0,onComment:r,range:(0,e.getOption)(n,\"range\",!1),tolerant:(0,e.getOption)(n,\"tolerant\",!0),tokens:!0,jsx:(0,e.getOption)(n,\"jsx\",!1),sourceType:(0,e.getOption)(n,\"sourceType\",\"module\")});return Array.isArray(i.comments)||(i.comments=r),i},Ar}function Nr(){if(wr)return ar;wr=1,Object.defineProperty(ar,\"__esModule\",{value:!0}),ar.normalize=void 0;var e=sr,t={parser:Ir(),tabWidth:4,useTabs:!1,reuseWhitespace:!0,lineTerminator:(0,e.getLineTerminator)(),wrapColumn:74,sourceFileName:null,sourceMapName:null,sourceRoot:null,inputSourceMap:null,range:!1,tolerant:!0,quote:null,trailingComma:!1,arrayBracketSpacing:!1,objectCurlySpacing:!0,arrowParensAlways:!1,flowObjectCommas:!0,tokens:!0},n=t.hasOwnProperty;return ar.normalize=function(e){var r=e||t;function i(e){return n.call(r,e)?r[e]:t[e]}return{tabWidth:+i(\"tabWidth\"),useTabs:!!i(\"useTabs\"),reuseWhitespace:!!i(\"reuseWhitespace\"),lineTerminator:i(\"lineTerminator\"),wrapColumn:Math.max(i(\"wrapColumn\"),0),sourceFileName:i(\"sourceFileName\"),sourceMapName:i(\"sourceMapName\"),sourceRoot:i(\"sourceRoot\"),inputSourceMap:i(\"inputSourceMap\"),parser:i(\"esprima\")||i(\"parser\"),range:i(\"range\"),tolerant:i(\"tolerant\"),quote:i(\"quote\"),trailingComma:i(\"trailingComma\"),arrayBracketSpacing:i(\"arrayBracketSpacing\"),objectCurlySpacing:i(\"objectCurlySpacing\"),arrowParensAlways:i(\"arrowParensAlways\"),flowObjectCommas:i(\"flowObjectCommas\"),tokens:!!i(\"tokens\")}},ar}var Or,Dr,Lr={},jr={};function Mr(){if(Dr)return Lr;Dr=1,Object.defineProperty(Lr,\"__esModule\",{value:!0}),Lr.concat=Lr.fromString=Lr.countSpaces=Lr.Lines=void 0;var e=Lt,t=e.__importDefault(ir()),n=e.__importDefault(pr),r=Nr(),i=sr,a=e.__importDefault(function(){if(Or)return jr;Or=1,Object.defineProperty(jr,\"__esModule\",{value:!0});var e=Lt.__importDefault(ir()),t=sr,n=function(){function n(e,t,n){void 0===n&&(n=t),this.sourceLines=e,this.sourceLoc=t,this.targetLoc=n}return n.prototype.slice=function(r,a,s){void 0===s&&(s=r.lastPos());var o=this.sourceLines,l=this.sourceLoc,c=this.targetLoc;function u(n){var i=l[n],u=c[n],p=a;return\"end\"===n?p=s:(0,e.default)(\"start\"===n),function(n,r,i,a,s){var o,l,c=(0,t.comparePos)(a,s);if(0===c)return r;if(c<0){o=n.skipSpaces(r)||n.lastPos(),l=i.skipSpaces(a)||i.lastPos();var u=s.line-l.line;for(o.line+=u,l.line+=u,u>0?(o.column=0,l.column=0):(0,e.default)(0===u);(0,t.comparePos)(l,s)<0&&i.nextPos(l,!0);)(0,e.default)(n.nextPos(o,!0)),(0,e.default)(n.charAt(o)===i.charAt(l))}else for(o=n.skipSpaces(r,!0)||n.firstPos(),l=i.skipSpaces(a,!0)||i.firstPos(),u=s.line-l.line,o.line+=u,l.line+=u,u<0?(o.column=n.getLineLength(o.line),l.column=i.getLineLength(l.line)):(0,e.default)(0===u);(0,t.comparePos)(s,l)<0&&i.prevPos(l,!0);)(0,e.default)(n.prevPos(o,!0)),(0,e.default)(n.charAt(o)===i.charAt(l));return o}(o,i,r,u,p)}if((0,t.comparePos)(a,c.start)<=0)if((0,t.comparePos)(c.end,s)<=0)c={start:i(c.start,a.line,a.column),end:i(c.end,a.line,a.column)};else{if((0,t.comparePos)(s,c.start)<=0)return null;l={start:l.start,end:u(\"end\")},c={start:i(c.start,a.line,a.column),end:i(s,a.line,a.column)}}else{if((0,t.comparePos)(c.end,a)<=0)return null;(0,t.comparePos)(c.end,s)<=0?(l={start:u(\"start\"),end:l.end},c={start:{line:1,column:0},end:i(c.end,a.line,a.column)}):(l={start:u(\"start\"),end:u(\"end\")},c={start:{line:1,column:0},end:i(s,a.line,a.column)})}return new n(this.sourceLines,l,c)},n.prototype.add=function(e,t){return new n(this.sourceLines,this.sourceLoc,{start:r(this.targetLoc.start,e,t),end:r(this.targetLoc.end,e,t)})},n.prototype.subtract=function(e,t){return new n(this.sourceLines,this.sourceLoc,{start:i(this.targetLoc.start,e,t),end:i(this.targetLoc.end,e,t)})},n.prototype.indent=function(e,t,r){if(void 0===t&&(t=!1),void 0===r&&(r=!1),0===e)return this;var i=this.targetLoc,a=i.start.line,s=i.end.line;if(t&&1===a&&1===s)return this;if(i={start:i.start,end:i.end},!t||a>1){var o=i.start.column+e;i.start={line:a,column:r?Math.max(0,o):o}}if(!t||s>1){var l=i.end.column+e;i.end={line:s,column:r?Math.max(0,l):l}}return new n(this.sourceLines,this.sourceLoc,i)},n}();function r(e,t,n){return{line:e.line+t-1,column:1===e.line?e.column+n:e.column}}function i(e,t,n){return{line:e.line-t+1,column:e.line===t?e.column-n:e.column}}return jr.default=n,jr}()),s=function(){function s(e,n){void 0===n&&(n=null),this.infos=e,this.mappings=[],this.cachedSourceMap=null,this.cachedTabWidth=void 0,(0,t.default)(e.length>0),this.length=e.length,this.name=n||null,this.name&&this.mappings.push(new a.default(this,{start:this.firstPos(),end:this.lastPos()}))}return s.prototype.toString=function(e){return this.sliceString(this.firstPos(),this.lastPos(),e)},s.prototype.getSourceMap=function(e,r){if(!e)return null;var a=this;function s(t){return(t=t||{}).file=e,r&&(t.sourceRoot=r),t}if(a.cachedSourceMap)return s(a.cachedSourceMap.toJSON());var o=new n.default.SourceMapGenerator(s()),c={};return a.mappings.forEach((function(e){for(var n=e.sourceLines.skipSpaces(e.sourceLoc.start)||e.sourceLines.lastPos(),r=a.skipSpaces(e.targetLoc.start)||a.lastPos();(0,i.comparePos)(n,e.sourceLoc.end)<0&&(0,i.comparePos)(r,e.targetLoc.end)<0;){var s=e.sourceLines.charAt(n),u=a.charAt(r);(0,t.default)(s===u);var p=e.sourceLines.name;if(o.addMapping({source:p,original:{line:n.line,column:n.column},generated:{line:r.line,column:r.column}}),!l.call(c,p)){var h=e.sourceLines.toString();o.setSourceContent(p,h),c[p]=h}a.nextPos(r,!0),e.sourceLines.nextPos(n,!0)}})),a.cachedSourceMap=o,o.toJSON()},s.prototype.bootstrapCharAt=function(e){(0,t.default)(\"object\"==typeof e),(0,t.default)(\"number\"==typeof e.line),(0,t.default)(\"number\"==typeof e.column);var n=e.line,r=e.column,i=this.toString().split(h),a=i[n-1];return void 0===a?\"\":r===a.length&&n<i.length?\"\\n\":r>=a.length?\"\":a.charAt(r)},s.prototype.charAt=function(e){(0,t.default)(\"object\"==typeof e),(0,t.default)(\"number\"==typeof e.line),(0,t.default)(\"number\"==typeof e.column);var n=e.line,r=e.column,i=this.infos[n-1],a=r;if(void 0===i||a<0)return\"\";var s=this.getIndentAt(n);return a<s?\" \":(a+=i.sliceStart-s)===i.sliceEnd&&n<this.length?\"\\n\":a>=i.sliceEnd?\"\":i.line.charAt(a)},s.prototype.stripMargin=function(n,r){if(0===n)return this;if((0,t.default)(n>0,\"negative margin: \"+n),r&&1===this.length)return this;var i=new s(this.infos.map((function(t,i){return t.line&&(i>0||!r)&&(t=e.__assign(e.__assign({},t),{indent:Math.max(0,t.indent-n)})),t})));if(this.mappings.length>0){var a=i.mappings;(0,t.default)(0===a.length),this.mappings.forEach((function(e){a.push(e.indent(n,r,!0))}))}return i},s.prototype.indent=function(n){if(0===n)return this;var r=new s(this.infos.map((function(t){return t.line&&!t.locked&&(t=e.__assign(e.__assign({},t),{indent:t.indent+n})),t})));if(this.mappings.length>0){var i=r.mappings;(0,t.default)(0===i.length),this.mappings.forEach((function(e){i.push(e.indent(n))}))}return r},s.prototype.indentTail=function(n){if(0===n)return this;if(this.length<2)return this;var r=new s(this.infos.map((function(t,r){return r>0&&t.line&&!t.locked&&(t=e.__assign(e.__assign({},t),{indent:t.indent+n})),t})));if(this.mappings.length>0){var i=r.mappings;(0,t.default)(0===i.length),this.mappings.forEach((function(e){i.push(e.indent(n,!0))}))}return r},s.prototype.lockIndentTail=function(){return this.length<2?this:new s(this.infos.map((function(t,n){return e.__assign(e.__assign({},t),{locked:n>0})})))},s.prototype.getIndentAt=function(e){return(0,t.default)(e>=1,\"no line \"+e+\" (line numbers start from 1)\"),Math.max(this.infos[e-1].indent,0)},s.prototype.guessTabWidth=function(){if(\"number\"==typeof this.cachedTabWidth)return this.cachedTabWidth;for(var e=[],t=0,n=1,r=this.length;n<=r;++n){var i=this.infos[n-1];if(!f(i.line.slice(i.sliceStart,i.sliceEnd))){var a=Math.abs(i.indent-t);e[a]=1+~~e[a],t=i.indent}}for(var s=-1,o=2,c=1;c<e.length;c+=1)l.call(e,c)&&e[c]>s&&(s=e[c],o=c);return this.cachedTabWidth=o},s.prototype.startsWithComment=function(){if(0===this.infos.length)return!1;var e=this.infos[0],t=e.sliceStart,n=e.sliceEnd,r=e.line.slice(t,n).trim();return 0===r.length||\"//\"===r.slice(0,2)||\"/*\"===r.slice(0,2)},s.prototype.isOnlyWhitespace=function(){return f(this.toString())},s.prototype.isPrecededOnlyByWhitespace=function(e){var t=this.infos[e.line-1],n=Math.max(t.indent,0),r=e.column-n;if(r<=0)return!0;var i=t.sliceStart,a=Math.min(i+r,t.sliceEnd);return f(t.line.slice(i,a))},s.prototype.getLineLength=function(e){var t=this.infos[e-1];return this.getIndentAt(e)+t.sliceEnd-t.sliceStart},s.prototype.nextPos=function(e,t){void 0===t&&(t=!1);var n=Math.max(e.line,0);return Math.max(e.column,0)<this.getLineLength(n)?(e.column+=1,!t||!!this.skipSpaces(e,!1,!0)):n<this.length&&(e.line+=1,e.column=0,!t||!!this.skipSpaces(e,!1,!0))},s.prototype.prevPos=function(e,t){void 0===t&&(t=!1);var n=e.line,r=e.column;if(r<1){if((n-=1)<1)return!1;r=this.getLineLength(n)}else r=Math.min(r-1,this.getLineLength(n));return e.line=n,e.column=r,!t||!!this.skipSpaces(e,!0,!0)},s.prototype.firstPos=function(){return{line:1,column:0}},s.prototype.lastPos=function(){return{line:this.length,column:this.getLineLength(this.length)}},s.prototype.skipSpaces=function(e,t,n){if(void 0===t&&(t=!1),void 0===n&&(n=!1),e=e?n?e:{line:e.line,column:e.column}:t?this.lastPos():this.firstPos(),t){for(;this.prevPos(e);)if(!f(this.charAt(e))&&this.nextPos(e))return e;return null}for(;f(this.charAt(e));)if(!this.nextPos(e))return null;return e},s.prototype.trimLeft=function(){var e=this.skipSpaces(this.firstPos(),!1,!0);return e?this.slice(e):y},s.prototype.trimRight=function(){var e=this.skipSpaces(this.lastPos(),!0,!0);return e?this.slice(this.firstPos(),e):y},s.prototype.trim=function(){var e=this.skipSpaces(this.firstPos(),!1,!0);if(null===e)return y;var t=this.skipSpaces(this.lastPos(),!0,!0);return null===t?y:this.slice(e,t)},s.prototype.eachPos=function(e,t,n){void 0===t&&(t=this.firstPos()),void 0===n&&(n=!1);var r=this.firstPos();if(t&&(r.line=t.line,r.column=t.column),!n||this.skipSpaces(r,!1,!0))do{e.call(this,r)}while(this.nextPos(r,n))},s.prototype.bootstrapSlice=function(e,t){var n=this.toString().split(h).slice(e.line-1,t.line);return n.length>0&&(n.push(n.pop().slice(0,t.column)),n[0]=n[0].slice(e.column)),d(n.join(\"\\n\"))},s.prototype.slice=function(e,n){if(!n){if(!e)return this;n=this.lastPos()}if(!e)throw Error(\"cannot slice with end but not start\");var r=this.infos.slice(e.line-1,n.line);e.line===n.line?r[0]=m(r[0],e.column,n.column):((0,t.default)(e.line<n.line),r[0]=m(r[0],e.column),r.push(m(r.pop(),0,n.column)));var i=new s(r);if(this.mappings.length>0){var a=i.mappings;(0,t.default)(0===a.length),this.mappings.forEach((function(t){var r=t.slice(this,e,n);r&&a.push(r)}),this)}return i},s.prototype.bootstrapSliceString=function(e,t,n){return this.slice(e,t).toString(n)},s.prototype.sliceString=function(e,t,n){void 0===e&&(e=this.firstPos()),void 0===t&&(t=this.lastPos());for(var i=(0,r.normalize)(n),a=i.tabWidth,s=i.useTabs,o=i.reuseWhitespace,l=i.lineTerminator,c=[],p=e.line;p<=t.line;++p){var h=this.infos[p-1];p===e.line?h=p===t.line?m(h,e.column,t.column):m(h,e.column):p===t.line&&(h=m(h,0,t.column));var d=Math.max(h.indent,0),y=h.line.slice(0,h.sliceStart);if(o&&f(y)&&u(y,a)===d)c.push(h.line.slice(0,h.sliceEnd));else{var g=0,b=d;s&&(b-=(g=Math.floor(d/a))*a);var v=\"\";g>0&&(v+=Array(g+1).join(\"\\t\")),b>0&&(v+=Array(b+1).join(\" \")),v+=h.line.slice(h.sliceStart,h.sliceEnd),c.push(v)}}return c.join(l)},s.prototype.isEmpty=function(){return this.length<2&&this.getLineLength(1)<1},s.prototype.join=function(t){var n,r=this,i=[],a=[];function o(t){if(null!==t){if(n){var r=t.infos[0],s=Array(r.indent+1).join(\" \"),o=i.length,l=Math.max(n.indent,0)+n.sliceEnd-n.sliceStart;n.line=n.line.slice(0,n.sliceEnd)+s+r.line.slice(r.sliceStart,r.sliceEnd),n.locked=n.locked||r.locked,n.sliceEnd=n.line.length,t.mappings.length>0&&t.mappings.forEach((function(e){a.push(e.add(o,l))}))}else t.mappings.length>0&&a.push.apply(a,t.mappings);t.infos.forEach((function(t,r){(!n||r>0)&&(n=e.__assign({},t),i.push(n))}))}}if(t.map((function(e){var t=d(e);return t.isEmpty()?null:t})).forEach((function(e,t){r.isEmpty()?o(e):function(e,t){t>0&&o(r),o(e)}(e,t)})),i.length<1)return y;var l=new s(i);return l.mappings=a,l},s.prototype.concat=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=[this];return r.push.apply(r,e),(0,t.default)(r.length===e.length+1),y.join(r)},s}();Lr.Lines=s;var o={},l=o.hasOwnProperty,c=10;function u(e,n){for(var r=0,i=e.length,a=0;a<i;++a)switch(e.charCodeAt(a)){case 9:(0,t.default)(\"number\"==typeof n),(0,t.default)(n>0);var s=Math.ceil(r/n)*n;s===r?r+=n:r=s;break;case 11:case 12:case 13:case 65279:break;default:r+=1}return r}Lr.countSpaces=u;var p=/^\\s*/,h=/\\u000D\\u000A|\\u000D(?!\\u000A)|\\u000A|\\u2028|\\u2029/;function d(e,n){if(e instanceof s)return e;e+=\"\";var i=n&&n.tabWidth,a=e.indexOf(\"\\t\")<0,d=!n&&a&&e.length<=c;if((0,t.default)(i||a,\"No tab width specified but encountered tabs in string\\n\"+e),d&&l.call(o,e))return o[e];var f=new s(e.split(h).map((function(e){var t=p.exec(e)[0];return{line:e,indent:u(t,i),locked:!1,sliceStart:t.length,sliceEnd:e.length}})),(0,r.normalize)(n).sourceFileName);return d&&(o[e]=f),f}function f(e){return!/\\S/.test(e)}function m(e,n,r){var i=e.sliceStart,a=e.sliceEnd,s=Math.max(e.indent,0),o=s+a-i;return void 0===r&&(r=o),n=Math.max(n,0),(r=Math.max(r=Math.min(r,o),n))<s?(s=r,a=i):a-=o-r,o=r,o-=n,n<s?s-=n:(n-=s,s=0,i+=n),(0,t.default)(s>=0),(0,t.default)(i<=a),(0,t.default)(o===s+a-i),e.indent===s&&e.sliceStart===i&&e.sliceEnd===a?e:{line:e.line,indent:s,locked:!1,sliceStart:i,sliceEnd:a}}Lr.fromString=d,Lr.concat=function(e){return y.join(e)};var y=d(\"\");return Lr}var Br,Fr,Vr={};function Rr(){if(Br)return Vr;Br=1,Object.defineProperty(Vr,\"__esModule\",{value:!0}),Vr.printComments=Vr.attach=void 0;var e=Lt,t=e.__importDefault(ir()),n=e.__importStar(er()),r=n.namedTypes,i=n.builtInTypes.array,a=n.builtInTypes.object,s=Mr(),o=sr,l=new WeakMap;function c(e,t,s){if(!e)return s;if((0,o.fixFaultyLocations)(e,t),s){if(r.Node.check(e)&&r.SourceLocation.check(e.loc)){for(var u=s.length-1;u>=0;--u){var p=s[u];if(p&&p.loc&&(0,o.comparePos)(p.loc.end,e.loc.start)<=0)break}return s.splice(u+1,0,e),s}}else{var h=l.get(e);if(h)return h}var d;if(i.check(e))d=Object.keys(e);else{if(!a.check(e))return s;d=n.getFieldNames(e)}s||l.set(e,s=[]),u=0;for(var f=d.length;u<f;++u)c(e[d[u]],t,s);return s}function u(e,t,n){for(var r,i,a=c(e,n),s=0,l=a&&a.length;\"number\"==typeof l&&s<l;){var p=s+l>>1,h=a[p];if((0,o.comparePos)(h.loc.start,t.loc.start)<=0&&(0,o.comparePos)(t.loc.end,h.loc.end)<=0)return void u(t.enclosingNode=h,t,n);if((0,o.comparePos)(h.loc.end,t.loc.start)<=0)r=h,s=p+1;else{if(!((0,o.comparePos)(t.loc.end,h.loc.start)<=0))throw Error(\"Comment location overlaps with node location\");i=h,l=p}}r&&(t.precedingNode=r),i&&(t.followingNode=i)}function p(e,n){var r=e.length;if(0!==r){for(var i,a=e[0].precedingNode,s=e[0].followingNode,o=s.loc.start,l=r;l>0;--l){i=e[l-1],(0,t.default)(i.precedingNode===a),(0,t.default)(i.followingNode===s);var c=n.sliceString(i.loc.end,o);if(/\\S/.test(c))break;o=i.loc.start}for(;l<=r&&(i=e[l])&&(\"Line\"===i.type||\"CommentLine\"===i.type)&&i.loc.start.column>s.loc.start.column;)++l;if(l){var u=e[l-1].enclosingNode;\"CallExpression\"===(null==u?void 0:u.type)&&--l}e.forEach((function(e,t){t<l?f(a,e):d(s,e)})),e.length=0}}function h(e,t){(e.comments||(e.comments=[])).push(t)}function d(e,t){t.leading=!0,t.trailing=!1,h(e,t)}function f(e,t){t.leading=!1,t.trailing=!0,h(e,t)}return Vr.attach=function(e,n,r){if(i.check(e)){var a=[];e.forEach((function(e){e.loc.lines=r,u(n,e,r);var i=e.precedingNode,s=e.enclosingNode,o=e.followingNode;if(i&&o){var l=a.length;if(l>0){var c=a[l-1];(0,t.default)(c.precedingNode===e.precedingNode==(c.followingNode===e.followingNode)),c.followingNode!==e.followingNode&&p(a,r)}a.push(e)}else if(i)p(a,r),f(i,e);else if(o)p(a,r),d(o,e);else{if(!s)throw Error(\"AST contains no nodes at all?\");p(a,r),function(e,t){t.leading=!1,t.trailing=!1,h(e,t)}(s,e)}})),p(a,r),e.forEach((function(e){delete e.precedingNode,delete e.enclosingNode,delete e.followingNode}))}},Vr.printComments=function(e,t){var i=e.getValue(),a=t(e),o=r.Node.check(i)&&n.getFieldValue(i,\"comments\");if(!o||0===o.length)return a;var l=[],c=[a];return e.each((function(e){var a=e.getValue(),o=n.getFieldValue(a,\"leading\"),u=n.getFieldValue(a,\"trailing\");o||u&&!r.Statement.check(i)&&\"Block\"!==a.type&&\"CommentBlock\"!==a.type?l.push(function(e,t){var n=e.getValue();r.Comment.assert(n);var i=n.loc,a=i&&i.lines,o=[t(e)];if(n.trailing)o.push(\"\\n\");else if(a instanceof s.Lines){var l=a.slice(i.end,a.skipSpaces(i.end)||a.lastPos());1===l.length?o.push(l):o.push(Array(l.length).join(\"\\n\"))}else o.push(\"\\n\");return(0,s.concat)(o)}(e,t)):u&&c.push(function(e,t){var n=e.getValue(e);r.Comment.assert(n);var i=n.loc,a=i&&i.lines,o=[];if(a instanceof s.Lines){var l=a.skipSpaces(i.start,!0)||a.firstPos(),c=a.slice(l,i.start);1===c.length?o.push(c):o.push(Array(c.length).join(\"\\n\"))}return o.push(t(e)),(0,s.concat)(o)}(e,t))}),\"comments\"),l.push.apply(l,c),(0,s.concat)(l)},Vr}var qr,Ur={},zr={};function Wr(){if(qr)return zr;qr=1,Object.defineProperty(zr,\"__esModule\",{value:!0});var e=Lt,t=e.__importDefault(ir()),n=e.__importStar(er()),r=e.__importStar(sr),i=n.namedTypes,a=n.builtInTypes.array,s=n.builtInTypes.number,o={};[[\"??\"],[\"||\"],[\"&&\"],[\"|\"],[\"^\"],[\"&\"],[\"==\",\"===\",\"!=\",\"!==\"],[\"<\",\">\",\"<=\",\">=\",\"in\",\"instanceof\"],[\">>\",\"<<\",\">>>\"],[\"+\",\"-\"],[\"*\",\"/\",\"%\"],[\"**\"]].forEach((function(e,t){e.forEach((function(e){o[e]=t}))}));var l=function e(n){(0,t.default)(this instanceof e),this.stack=[n]},c=l.prototype;function u(e,t){for(var n=e.stack,r=n.length-1;r>=0;r-=2){var a=n[r];if(i.Node.check(a)&&--t<0)return a}return null}function p(e){return i.BinaryExpression.check(e)||i.LogicalExpression.check(e)}function h(e){return!!i.CallExpression.check(e)||(a.check(e)?e.some(h):!!i.Node.check(e)&&n.someField(e,(function(e,t){return h(t)})))}return l.from=function(e){if(e instanceof l)return e.copy();if(e instanceof n.NodePath){for(var t=Object.create(l.prototype),r=[e.value],i=void 0;i=e.parentPath;e=i)r.push(e.name,i.value);return t.stack=r.reverse(),t}return new l(e)},c.copy=function(){var e=Object.create(l.prototype);return e.stack=this.stack.slice(0),e},c.getName=function(){var e=this.stack,t=e.length;return t>1?e[t-2]:null},c.getValue=function(){var e=this.stack;return e[e.length-1]},c.valueIsDuplicate=function(){var e=this.stack,t=e.length-1;return e.lastIndexOf(e[t],t-1)>=0},c.getNode=function(e){return void 0===e&&(e=0),u(this,~~e)},c.getParentNode=function(e){return void 0===e&&(e=0),u(this,1+~~e)},c.getRootValue=function(){var e=this.stack;return e.length%2==0?e[1]:e[0]},c.call=function(e){for(var t=this.stack,n=t.length,r=t[n-1],i=arguments.length,a=1;a<i;++a){var s=arguments[a];r=r[s],t.push(s,r)}var o=e(this);return t.length=n,o},c.each=function(e){for(var t=this.stack,n=t.length,r=t[n-1],i=arguments.length,a=1;a<i;++a){var s=arguments[a];r=r[s],t.push(s,r)}for(a=0;a<r.length;++a)a in r&&(t.push(a,r[a]),e(this),t.length-=2);t.length=n},c.map=function(e){for(var t=this.stack,n=t.length,r=t[n-1],i=arguments.length,a=1;a<i;++a){var s=arguments[a];r=r[s],t.push(s,r)}var o=Array(r.length);for(a=0;a<r.length;++a)a in r&&(t.push(a,r[a]),o[a]=e(this,a),t.length-=2);return t.length=n,o},c.hasParens=function(){var e=this.getNode(),t=this.getPrevToken(e);if(!t)return!1;var n=this.getNextToken(e);if(!n)return!1;if(\"(\"===t.value){if(\")\"===n.value)return!0;if(!this.canBeFirstInStatement()&&this.firstInStatement()&&!this.needsParens(!0))return!0}return!1},c.getPrevToken=function(e){var t=(e=e||this.getNode())&&e.loc,n=t&&t.tokens;if(n&&t.start.token>0){var i=n[t.start.token-1];if(i){var a=this.getRootValue().loc;if(r.comparePos(a.start,i.loc.start)<=0)return i}}return null},c.getNextToken=function(e){var t=(e=e||this.getNode())&&e.loc,n=t&&t.tokens;if(n&&t.end.token<n.length){var i=n[t.end.token];if(i){var a=this.getRootValue().loc;if(r.comparePos(i.loc.end,a.end)<=0)return i}}return null},c.needsParens=function(e){var n=this.getNode();if(\"AssignmentExpression\"===n.type&&\"ObjectPattern\"===n.left.type)return!0;var r=this.getParentNode(),a=this.getName();if(this.getValue()!==n)return!1;if(i.Statement.check(n))return!1;if(\"Identifier\"===n.type)return!1;if(r&&\"ParenthesizedExpression\"===r.type)return!1;if(n.extra&&n.extra.parenthesized)return!0;if(!r)return!1;if(\"UnaryExpression\"===n.type&&\"BinaryExpression\"===r.type&&\"left\"===a&&r.left===n&&\"**\"===r.operator)return!0;switch(n.type){case\"UnaryExpression\":case\"SpreadElement\":case\"SpreadProperty\":return\"MemberExpression\"===r.type&&\"object\"===a&&r.object===n;case\"BinaryExpression\":case\"LogicalExpression\":switch(r.type){case\"CallExpression\":return\"callee\"===a&&r.callee===n;case\"UnaryExpression\":case\"SpreadElement\":case\"SpreadProperty\":return!0;case\"MemberExpression\":return\"object\"===a&&r.object===n;case\"BinaryExpression\":case\"LogicalExpression\":var l=r.operator,c=o[l],u=n.operator,d=o[u];if(c>d)return!0;if(c===d&&\"right\"===a)return(0,t.default)(r.right===n),!0;break;default:return!1}break;case\"SequenceExpression\":switch(r.type){case\"ReturnStatement\":case\"ForStatement\":return!1;case\"ExpressionStatement\":return\"expression\"!==a;default:return!0}case\"OptionalIndexedAccessType\":return n.optional&&\"IndexedAccessType\"===r.type;case\"IntersectionTypeAnnotation\":case\"UnionTypeAnnotation\":return\"NullableTypeAnnotation\"===r.type;case\"Literal\":return\"MemberExpression\"===r.type&&s.check(n.value)&&\"object\"===a&&r.object===n;case\"NumericLiteral\":return\"MemberExpression\"===r.type&&\"object\"===a&&r.object===n;case\"YieldExpression\":case\"AwaitExpression\":case\"AssignmentExpression\":case\"ConditionalExpression\":switch(r.type){case\"UnaryExpression\":case\"SpreadElement\":case\"SpreadProperty\":case\"BinaryExpression\":case\"LogicalExpression\":return!0;case\"CallExpression\":case\"NewExpression\":return\"callee\"===a&&r.callee===n;case\"ConditionalExpression\":return\"test\"===a&&r.test===n;case\"MemberExpression\":return\"object\"===a&&r.object===n;default:return!1}case\"ArrowFunctionExpression\":return!(!i.CallExpression.check(r)||\"callee\"!==a||r.callee!==n)||!(!i.MemberExpression.check(r)||\"object\"!==a||r.object!==n)||!(!i.TSAsExpression||!i.TSAsExpression.check(r)||\"expression\"!==a||r.expression!==n)||p(r);case\"ObjectExpression\":if(\"ArrowFunctionExpression\"===r.type&&\"body\"===a&&r.body===n)return!0;break;case\"TSAsExpression\":if(\"ArrowFunctionExpression\"===r.type&&\"body\"===a&&r.body===n&&\"ObjectExpression\"===n.expression.type)return!0;break;case\"CallExpression\":if(\"declaration\"===a&&i.ExportDefaultDeclaration.check(r)&&i.FunctionExpression.check(n.callee))return!0}return\"NewExpression\"===r.type&&\"callee\"===a&&r.callee===n?h(n):!(!0===e||this.canBeFirstInStatement()||!this.firstInStatement())},c.canBeFirstInStatement=function(){var e=this.getNode();return!i.FunctionExpression.check(e)&&!i.ObjectExpression.check(e)&&!i.ClassExpression.check(e)},c.firstInStatement=function(){for(var e,n,r,a,s=this.stack,o=s.length-1;o>=0;o-=2)if(i.Node.check(s[o])&&(r=e,a=n,e=s[o-1],n=s[o]),n&&a){if(i.BlockStatement.check(n)&&\"body\"===e&&0===r)return(0,t.default)(n.body[0]===a),!0;if(i.ExpressionStatement.check(n)&&\"expression\"===r)return(0,t.default)(n.expression===a),!0;if(i.AssignmentExpression.check(n)&&\"left\"===r)return(0,t.default)(n.left===a),!0;if(i.ArrowFunctionExpression.check(n)&&\"body\"===r)return(0,t.default)(n.body===a),!0;if(i.SequenceExpression.check(n)&&\"expressions\"===s[o+1]&&0===r)(0,t.default)(n.expressions[0]===a);else if(i.CallExpression.check(n)&&\"callee\"===r)(0,t.default)(n.callee===a);else if(i.MemberExpression.check(n)&&\"object\"===r)(0,t.default)(n.object===a);else if(i.ConditionalExpression.check(n)&&\"test\"===r)(0,t.default)(n.test===a);else if(p(n)&&\"left\"===r)(0,t.default)(n.left===a);else{if(!i.UnaryExpression.check(n)||n.prefix||\"argument\"!==r)return!1;(0,t.default)(n.argument===a)}}return!0},zr.default=l,zr}var Gr,Jr,$r={};!function(e){Object.defineProperty(e,\"__esModule\",{value:!0}),e.run=e.prettyPrint=e.print=e.visit=e.types=e.parse=void 0;var t=Lt,n=t.__importDefault(void 0),r=t.__importStar(er());e.types=r;var i=function(){if(Fr)return rr;Fr=1,Object.defineProperty(rr,\"__esModule\",{value:!0}),rr.parse=void 0;var e=Lt,t=e.__importDefault(ir()),n=e.__importStar(er()),r=n.builders,i=n.builtInTypes.object,a=n.builtInTypes.array,s=Nr(),o=Mr(),l=Rr(),c=e.__importStar(sr);rr.parse=function(e,t){t=(0,s.normalize)(t);var n,i,a=(0,o.fromString)(e,t),p=a.toString({tabWidth:t.tabWidth,reuseWhitespace:!1,useTabs:!1}),h=[],d=t.parser.parse(p,{jsx:!0,loc:!0,locations:!0,range:t.range,comment:!0,onComment:h,tolerant:c.getOption(t,\"tolerant\",!0),ecmaVersion:6,sourceType:c.getOption(t,\"sourceType\",\"module\")}),f=Array.isArray(d.tokens)?d.tokens:Cr.tokenize(p,{loc:!0});delete d.tokens,f.forEach((function(e){\"string\"!=typeof e.value&&(e.value=a.sliceString(e.loc.start,e.loc.end))})),Array.isArray(d.comments)&&(h=d.comments,delete d.comments),d.loc?c.fixFaultyLocations(d,a):d.loc={start:a.firstPos(),end:a.lastPos()},d.loc.lines=a,d.loc.indent=0,\"Program\"===d.type?(i=d,(n=r.file(d,t.sourceFileName||null)).loc={start:a.firstPos(),end:a.lastPos(),lines:a,indent:0}):\"File\"===d.type&&(i=(n=d).program),t.tokens&&(n.tokens=f);var m=c.getTrueLoc({type:i.type,loc:i.loc,body:[],comments:h},a);return i.loc.start=m.start,i.loc.end=m.end,(0,l.attach)(h,i.body.length?n.program:n,a),new u(a,f).copy(n)};var u=function e(n,r){(0,t.default)(this instanceof e),this.lines=n,this.tokens=r,this.startTokenIndex=0,this.endTokenIndex=r.length,this.indent=0,this.seen=new Map},p=u.prototype;return p.copy=function(e){if(this.seen.has(e))return this.seen.get(e);if(a.check(e)){var t=Array(e.length);return this.seen.set(e,t),e.forEach((function(e,n){t[n]=this.copy(e)}),this),t}if(!i.check(e))return e;c.fixFaultyLocations(e,this.lines);var n=Object.create(Object.getPrototypeOf(e),{original:{value:e,configurable:!1,enumerable:!1,writable:!0}});this.seen.set(e,n);var r=e.loc,s=this.indent,o=s,l=this.startTokenIndex,u=this.endTokenIndex;r&&((\"Block\"===e.type||\"Line\"===e.type||\"CommentBlock\"===e.type||\"CommentLine\"===e.type||this.lines.isPrecededOnlyByWhitespace(r.start))&&(o=this.indent=r.start.column),r.lines=this.lines,r.tokens=this.tokens,r.indent=o,this.findTokenRange(r));for(var p=Object.keys(e),h=p.length,d=0;d<h;++d){var f=p[d];\"loc\"===f||\"tokens\"===f&&\"File\"===e.type?n[f]=e[f]:n[f]=this.copy(e[f])}return this.indent=s,this.startTokenIndex=l,this.endTokenIndex=u,n},p.findTokenRange=function(e){for(;this.startTokenIndex>0;){var t=e.tokens[this.startTokenIndex];if(!(c.comparePos(e.start,t.loc.start)<0))break;--this.startTokenIndex}for(;this.endTokenIndex<e.tokens.length&&(t=e.tokens[this.endTokenIndex],c.comparePos(t.loc.end,e.end)<0);)++this.endTokenIndex;for(;this.startTokenIndex<this.endTokenIndex&&(t=e.tokens[this.startTokenIndex],c.comparePos(t.loc.start,e.start)<0);)++this.startTokenIndex;for(e.start.token=this.startTokenIndex;this.endTokenIndex>this.startTokenIndex&&(t=e.tokens[this.endTokenIndex-1],c.comparePos(e.end,t.loc.end)<0);)--this.endTokenIndex;e.end.token=this.endTokenIndex},rr}();Object.defineProperty(e,\"parse\",{enumerable:!0,get:function(){return i.parse}});var a=function(){if(Jr)return Ur;Jr=1,Object.defineProperty(Ur,\"__esModule\",{value:!0}),Ur.Printer=void 0;var e=Lt,t=e.__importDefault(ir()),n=e.__importStar(er()),r=Rr(),i=e.__importDefault(Wr()),a=Mr(),s=Nr(),o=function(){if(Gr)return $r;Gr=1,Object.defineProperty($r,\"__esModule\",{value:!0}),$r.getReprinter=$r.Patcher=void 0;var e=Lt,t=e.__importDefault(ir()),n=e.__importStar(Mr()),r=e.__importStar(er()),i=r.namedTypes.Printable,a=r.namedTypes.Expression,s=r.namedTypes.ReturnStatement,o=r.namedTypes.SourceLocation,l=sr,c=e.__importDefault(Wr()),u=r.builtInTypes.object,p=r.builtInTypes.array,h=r.builtInTypes.string,d=/[0-9a-z_$]/i,f=function e(r){(0,t.default)(this instanceof e),(0,t.default)(r instanceof n.Lines);var i=[];this.replace=function(e,t){h.check(t)&&(t=n.fromString(t)),i.push({lines:t,start:e.start,end:e.end})},this.get=function(e){var a=(e=e||{start:{line:1,column:0},end:{line:r.length,column:r.getLineLength(r.length)}}).start,s=[];function o(e,n){(0,t.default)((0,l.comparePos)(e,n)<=0),s.push(r.slice(e,n))}return i.sort((function(e,t){return(0,l.comparePos)(e.start,t.start)})).forEach((function(e){(0,l.comparePos)(a,e.start)>0||(o(a,e.start),s.push(e.lines),a=e.end)})),o(a,e.end),n.concat(s)}};$r.Patcher=f;var m=f.prototype;function y(e){var t=[];return e.comments&&e.comments.length>0&&e.comments.forEach((function(e){(e.leading||e.trailing)&&t.push(e)})),t}function g(e,t,n){var r=e.getValue();return r===t.getValue()||(p.check(r)?b(e,t,n):!!u.check(r)&&function(e,t,n){var r=e.getValue();if(u.assert(r),null===r.original)return!1;var s=t.getValue();if(!u.check(s))return!1;if(r===s||e.valueIsDuplicate()||t.valueIsDuplicate())return!0;if(i.check(r)){if(!i.check(s))return!1;var o=e.getParentNode(),l=t.getParentNode();if(null!==l&&\"FunctionTypeAnnotation\"===l.type&&null!==o&&\"FunctionTypeAnnotation\"===o.type){var c=1!==l.params.length||!!l.params[0].name,p=1!==o.params.length||!!o.params[0].name;if(!c&&p)return!1}if(r.type===s.type){var h=[];if(v(e,t,h))n.push.apply(n,h);else{if(!s.loc)return!1;n.push({oldPath:t.copy(),newPath:e.copy()})}return!0}return!!(a.check(r)&&a.check(s)&&s.loc)&&(n.push({oldPath:t.copy(),newPath:e.copy()}),!0)}return v(e,t,n)}(e,t,n))}function b(e,t,n){var r=e.getValue(),i=t.getValue();if(r===i||e.valueIsDuplicate()||t.valueIsDuplicate())return!0;p.assert(r);var a=r.length;if(!p.check(i)||i.length!==a)return!1;for(var s=0;s<a;++s){e.stack.push(s,r[s]),t.stack.push(s,i[s]);var o=g(e,t,n);if(e.stack.length-=2,t.stack.length-=2,!o)return!1}return!0}function v(e,t,n){var i=e.getValue(),a=t.getValue();if(u.assert(i),u.assert(a),null===i.original)return!1;if(e.needsParens()&&!t.hasParens())return!1;var o=(0,l.getUnionOfKeys)(a,i);\"File\"!==a.type&&\"File\"!==i.type||delete o.tokens,delete o.loc;var c=n.length;for(var p in o)if(\"_\"!==p.charAt(0)){e.stack.push(p,r.getFieldValue(i,p)),t.stack.push(p,r.getFieldValue(a,p));var h=g(e,t,n);if(e.stack.length-=2,t.stack.length-=2,!h)return!1}return!(s.check(e.getNode())&&n.length>c)}return m.tryToReprintComments=function(e,n,r){var i=this;if(!e.comments&&!n.comments)return!0;var a=c.default.from(e),s=c.default.from(n);a.stack.push(\"comments\",y(e)),s.stack.push(\"comments\",y(n));var o=[],l=b(a,s,o);return l&&o.length>0&&o.forEach((function(e){var n=e.oldPath.getValue();(0,t.default)(n.leading||n.trailing),i.replace(n.loc,r(e.newPath).indentTail(n.loc.indent))})),l},m.deleteComments=function(e){if(e.comments){var t=this;e.comments.forEach((function(n){n.leading?t.replace({start:n.loc.start,end:e.loc.lines.skipSpaces(n.loc.end,!1,!1)},\"\"):n.trailing&&t.replace({start:e.loc.lines.skipSpaces(n.loc.start,!0,!1),end:n.loc.end},\"\")}))}},$r.getReprinter=function(e){(0,t.default)(e instanceof c.default);var r=e.getValue();if(i.check(r)){var a=r.original,s=a&&a.loc,u=s&&s.lines,p=[];if(u&&function(e,n){var r=e.getValue();i.assert(r);var a=r.original;if(i.assert(a),(0,t.default)(0===n.length),r.type!==a.type)return!1;var s=v(e,new c.default(a),n);return s||(n.length=0),s}(e,p))return function(t){var r=new f(u);p.forEach((function(e){var i=e.newPath.getValue(),a=e.oldPath.getValue();o.assert(a.loc,!0);var s=!r.tryToReprintComments(i,a,t);s&&r.deleteComments(a);var c=t(e.newPath,{includeComments:s,avoidRootParens:a.type===i.type&&e.oldPath.hasParens()}).indentTail(a.loc.indent),p=function(e,t,n){var r=(0,l.copyPos)(t.start),i=e.prevPos(r)&&e.charAt(r),a=n.charAt(n.firstPos());return i&&d.test(i)&&a&&d.test(a)}(u,a.loc,c),h=function(e,t,n){var r=e.charAt(t.end),i=n.lastPos(),a=n.prevPos(i)&&n.charAt(i);return a&&d.test(a)&&r&&d.test(r)}(u,a.loc,c);if(p||h){var f=[];p&&f.push(\" \"),f.push(c),h&&f.push(\" \"),c=n.concat(f)}r.replace(a.loc,c)}));var i=r.get(s).indentTail(-a.loc.indent);return e.needsParens()?n.concat([\"(\",i,\")\"]):i}}},$r}(),l=e.__importStar(sr),c=n.namedTypes,u=n.builtInTypes.string,p=n.builtInTypes.object,h=function e(n,r){(0,t.default)(this instanceof e),u.assert(n),this.code=n,r&&(p.assert(r),this.map=r)},d=!1;h.prototype.toString=function(){return d||(console.warn(\"Deprecation warning: recast.print now returns an object with a .code property. You appear to be treating the object as a string, which might still work but is strongly discouraged.\"),d=!0),this.code};var f=new h(\"\");function m(r,s,o,u){(0,t.default)(r instanceof i.default);var p=r.getValue(),h=[],d=function(r,i,s){var o=r.getValue();if(!o)return(0,a.fromString)(\"\");if(\"string\"==typeof o)return(0,a.fromString)(o,i);c.Printable.assert(o);var u=[];switch(o.type){case\"File\":return r.call(s,\"program\");case\"Program\":return o.directives&&r.each((function(e){u.push(s(e),\";\\n\")}),\"directives\"),o.interpreter&&u.push(r.call(s,\"interpreter\")),u.push(r.call((function(e){return y(e,i,s)}),\"body\")),(0,a.concat)(u);case\"Noop\":case\"EmptyStatement\":return(0,a.fromString)(\"\");case\"ExpressionStatement\":return(0,a.concat)([r.call(s,\"expression\"),\";\"]);case\"ParenthesizedExpression\":return(0,a.concat)([\"(\",r.call(s,\"expression\"),\")\"]);case\"BinaryExpression\":case\"LogicalExpression\":case\"AssignmentExpression\":return(0,a.fromString)(\" \").join([r.call(s,\"left\"),o.operator,r.call(s,\"right\")]);case\"AssignmentPattern\":return(0,a.concat)([r.call(s,\"left\"),\" = \",r.call(s,\"right\")]);case\"MemberExpression\":case\"OptionalMemberExpression\":u.push(r.call(s,\"object\"));var p=r.call(s,\"property\"),h=n.getFieldValue(o,\"optional\");return o.computed?u.push(h?\"?.[\":\"[\",p,\"]\"):u.push(h?\"?.\":\".\",p),(0,a.concat)(u);case\"ChainExpression\":return r.call(s,\"expression\");case\"MetaProperty\":return(0,a.concat)([r.call(s,\"meta\"),\".\",r.call(s,\"property\")]);case\"BindExpression\":return o.object&&u.push(r.call(s,\"object\")),u.push(\"::\",r.call(s,\"callee\")),(0,a.concat)(u);case\"Path\":return(0,a.fromString)(\".\").join(o.body);case\"Identifier\":return(0,a.concat)([(0,a.fromString)(o.name,i),o.optional?\"?\":\"\",r.call(s,\"typeAnnotation\")]);case\"SpreadElement\":case\"SpreadElementPattern\":case\"RestProperty\":case\"SpreadProperty\":case\"SpreadPropertyPattern\":case\"ObjectTypeSpreadProperty\":case\"RestElement\":return(0,a.concat)([\"...\",r.call(s,\"argument\"),r.call(s,\"typeAnnotation\")]);case\"FunctionDeclaration\":case\"FunctionExpression\":case\"TSDeclareFunction\":return o.declare&&u.push(\"declare \"),o.async&&u.push(\"async \"),u.push(\"function\"),o.generator&&u.push(\"*\"),o.id?u.push(\" \",r.call(s,\"id\"),r.call(s,\"typeParameters\")):o.typeParameters&&u.push(r.call(s,\"typeParameters\")),u.push(\"(\",x(r,i,s),\")\",r.call(s,\"returnType\")),o.body&&u.push(\" \",r.call(s,\"body\")),(0,a.concat)(u);case\"ArrowFunctionExpression\":return o.async&&u.push(\"async \"),o.typeParameters&&u.push(r.call(s,\"typeParameters\")),i.arrowParensAlways||1!==o.params.length||o.rest||\"Identifier\"!==o.params[0].type||o.params[0].typeAnnotation||o.returnType?u.push(\"(\",x(r,i,s),\")\",r.call(s,\"returnType\")):u.push(r.call(s,\"params\",0)),u.push(\" => \",r.call(s,\"body\")),(0,a.concat)(u);case\"MethodDefinition\":return b(r,i,s);case\"YieldExpression\":return u.push(\"yield\"),o.delegate&&u.push(\"*\"),o.argument&&u.push(\" \",r.call(s,\"argument\")),(0,a.concat)(u);case\"AwaitExpression\":return u.push(\"await\"),o.all&&u.push(\"*\"),o.argument&&u.push(\" \",r.call(s,\"argument\")),(0,a.concat)(u);case\"ModuleExpression\":return(0,a.concat)([\"module {\\n\",r.call(s,\"body\").indent(i.tabWidth),\"\\n}\"]);case\"ModuleDeclaration\":return u.push(\"module\",r.call(s,\"id\")),o.source?((0,t.default)(!o.body),u.push(\"from\",r.call(s,\"source\"))):u.push(r.call(s,\"body\")),(0,a.fromString)(\" \").join(u);case\"ImportSpecifier\":return o.importKind&&\"value\"!==o.importKind&&u.push(o.importKind+\" \"),o.imported?(u.push(r.call(s,\"imported\")),o.local&&o.local.name!==o.imported.name&&u.push(\" as \",r.call(s,\"local\"))):o.id&&(u.push(r.call(s,\"id\")),o.name&&u.push(\" as \",r.call(s,\"name\"))),(0,a.concat)(u);case\"ExportSpecifier\":return o.exportKind&&\"value\"!==o.exportKind&&u.push(o.exportKind+\" \"),o.local?(u.push(r.call(s,\"local\")),o.exported&&o.exported.name!==o.local.name&&u.push(\" as \",r.call(s,\"exported\"))):o.id&&(u.push(r.call(s,\"id\")),o.name&&u.push(\" as \",r.call(s,\"name\"))),(0,a.concat)(u);case\"ExportBatchSpecifier\":return(0,a.fromString)(\"*\");case\"ImportNamespaceSpecifier\":return u.push(\"* as \"),o.local?u.push(r.call(s,\"local\")):o.id&&u.push(r.call(s,\"id\")),(0,a.concat)(u);case\"ImportDefaultSpecifier\":return o.local?r.call(s,\"local\"):r.call(s,\"id\");case\"TSExportAssignment\":return(0,a.concat)([\"export = \",r.call(s,\"expression\")]);case\"ExportDeclaration\":case\"ExportDefaultDeclaration\":case\"ExportNamedDeclaration\":return E(r,i,s);case\"ExportAllDeclaration\":return u.push(\"export *\"),o.exported&&u.push(\" as \",r.call(s,\"exported\")),u.push(\" from \",r.call(s,\"source\"),\";\"),(0,a.concat)(u);case\"TSNamespaceExportDeclaration\":return u.push(\"export as namespace \",r.call(s,\"id\")),O((0,a.concat)(u));case\"ExportNamespaceSpecifier\":return(0,a.concat)([\"* as \",r.call(s,\"exported\")]);case\"ExportDefaultSpecifier\":return r.call(s,\"exported\");case\"Import\":return(0,a.fromString)(\"import\",i);case\"ImportExpression\":return(0,a.concat)([\"import(\",r.call(s,\"source\"),\")\"]);case\"ImportDeclaration\":if(u.push(\"import \"),o.importKind&&\"value\"!==o.importKind&&u.push(o.importKind+\" \"),o.specifiers&&o.specifiers.length>0){var d=[],f=[];r.each((function(e){var t=e.getValue();\"ImportSpecifier\"===t.type?f.push(s(e)):\"ImportDefaultSpecifier\"!==t.type&&\"ImportNamespaceSpecifier\"!==t.type||d.push(s(e))}),\"specifiers\"),d.forEach((function(e,t){t>0&&u.push(\", \"),u.push(e)})),f.length>0&&((ke=(0,a.fromString)(\", \").join(f)).getLineLength(1)>i.wrapColumn&&(ke=(0,a.concat)([(0,a.fromString)(\",\\n\").join(f).indent(i.tabWidth),\",\"])),d.length>0&&u.push(\", \"),ke.length>1?u.push(\"{\\n\",ke,\"\\n}\"):i.objectCurlySpacing?u.push(\"{ \",ke,\" }\"):u.push(\"{\",ke,\"}\")),u.push(\" from \")}return u.push(r.call(s,\"source\"),S(r,i,s),\";\"),(0,a.concat)(u);case\"ImportAttribute\":return(0,a.concat)([r.call(s,\"key\"),\": \",r.call(s,\"value\")]);case\"StaticBlock\":u.push(\"static \");case\"BlockStatement\":var m=r.call((function(e){return y(e,i,s)}),\"body\");return!m.isEmpty()||o.directives&&0!==o.directives.length?(u.push(\"{\\n\"),o.directives&&r.each((function(e){u.push(O(s(e).indent(i.tabWidth)),o.directives.length>1||!m.isEmpty()?\"\\n\":\"\")}),\"directives\"),u.push(m.indent(i.tabWidth)),u.push(\"\\n}\"),(0,a.concat)(u)):(u.push(\"{}\"),(0,a.concat)(u));case\"ReturnStatement\":if(u.push(\"return\"),o.argument){var A=r.call(s,\"argument\");A.startsWithComment()||A.length>1&&c.JSXElement&&c.JSXElement.check(o.argument)?u.push(\" (\\n\",A.indent(i.tabWidth),\"\\n)\"):u.push(\" \",A)}return u.push(\";\"),(0,a.concat)(u);case\"CallExpression\":case\"OptionalCallExpression\":return u.push(r.call(s,\"callee\")),o.typeParameters&&u.push(r.call(s,\"typeParameters\")),o.typeArguments&&u.push(r.call(s,\"typeArguments\")),n.getFieldValue(o,\"optional\")&&u.push(\"?.\"),u.push(v(r,i,s)),(0,a.concat)(u);case\"RecordExpression\":u.push(\"#\");case\"ObjectExpression\":case\"ObjectPattern\":case\"ObjectTypeAnnotation\":var I=\"ObjectTypeAnnotation\"===o.type,D=i.flowObjectCommas?\",\":I?\";\":\",\",L=[],j=!1;I&&(L.push(\"indexers\",\"callProperties\"),null!=o.internalSlots&&L.push(\"internalSlots\")),L.push(\"properties\");var M=0;L.forEach((function(e){M+=o[e].length}));var B=I&&1===M||0===M,F=o.exact?\"{|\":\"{\",V=o.exact?\"|}\":\"}\";u.push(B?F:F+\"\\n\");var R=u.length-1,q=0;if(L.forEach((function(e){r.each((function(e){var t=s(e);B||(t=t.indent(i.tabWidth));var n=!I&&t.length>1;n&&j&&u.push(\"\\n\"),u.push(t),q<M-1?(u.push(D+(n?\"\\n\\n\":\"\\n\")),j=!n):(1!==M&&I||!B&&l.isTrailingCommaEnabled(i,\"objects\")&&\"RestElement\"!==e.getValue().type)&&u.push(D),q++}),e)})),o.inexact){var U=(0,a.fromString)(\"...\",i);B?(M>0&&u.push(D,\" \"),u.push(U)):u.push(\"\\n\",U.indent(i.tabWidth))}return u.push(B?V:\"\\n\"+V),0!==q&&B&&i.objectCurlySpacing&&(u[R]=F+\" \",u[u.length-1]=\" \"+V),o.typeAnnotation&&u.push(r.call(s,\"typeAnnotation\")),(0,a.concat)(u);case\"PropertyPattern\":return(0,a.concat)([r.call(s,\"key\"),\": \",r.call(s,\"pattern\")]);case\"ObjectProperty\":case\"Property\":if(o.method||\"get\"===o.kind||\"set\"===o.kind)return b(r,i,s);if(o.shorthand&&\"AssignmentPattern\"===o.value.type)return r.call(s,\"value\");var z=r.call(s,\"key\");return o.computed?u.push(\"[\",z,\"]\"):u.push(z),o.shorthand&&o.key.name===o.value.name||u.push(\": \",r.call(s,\"value\")),(0,a.concat)(u);case\"ClassMethod\":case\"ObjectMethod\":case\"ClassPrivateMethod\":case\"TSDeclareMethod\":return b(r,i,s);case\"PrivateName\":return(0,a.concat)([\"#\",r.call(s,\"id\")]);case\"Decorator\":return(0,a.concat)([\"@\",r.call(s,\"expression\")]);case\"TupleExpression\":u.push(\"#\");case\"ArrayExpression\":case\"ArrayPattern\":var W=o.elements.length,G=r.map(s,\"elements\"),J=(0,a.fromString)(\", \").join(G).getLineLength(1)<=i.wrapColumn;return J?i.arrayBracketSpacing?u.push(\"[ \"):u.push(\"[\"):u.push(\"[\\n\"),r.each((function(e){var t=e.getName();if(e.getValue()){var n=G[t];J?t>0&&u.push(\" \"):n=n.indent(i.tabWidth),u.push(n),(t<W-1||!J&&l.isTrailingCommaEnabled(i,\"arrays\"))&&u.push(\",\"),J||u.push(\"\\n\")}else u.push(\",\")}),\"elements\"),J&&i.arrayBracketSpacing?u.push(\" ]\"):u.push(\"]\"),o.typeAnnotation&&u.push(r.call(s,\"typeAnnotation\")),(0,a.concat)(u);case\"SequenceExpression\":return(0,a.fromString)(\", \").join(r.map(s,\"expressions\"));case\"ThisExpression\":return(0,a.fromString)(\"this\");case\"Super\":return(0,a.fromString)(\"super\");case\"NullLiteral\":return(0,a.fromString)(\"null\");case\"RegExpLiteral\":return(0,a.fromString)(C(o)||\"/\".concat(o.pattern,\"/\").concat(o.flags||\"\"),i);case\"BigIntLiteral\":return(0,a.fromString)(C(o)||o.value+\"n\",i);case\"NumericLiteral\":return(0,a.fromString)(C(o)||o.value,i);case\"DecimalLiteral\":return(0,a.fromString)(C(o)||o.value+\"m\",i);case\"StringLiteral\":return(0,a.fromString)(N(o.value,i));case\"BooleanLiteral\":case\"Literal\":return(0,a.fromString)(C(o)||(\"string\"==typeof o.value?N(o.value,i):o.value),i);case\"Directive\":return r.call(s,\"value\");case\"DirectiveLiteral\":return(0,a.fromString)(C(o)||N(o.value,i),i);case\"InterpreterDirective\":return(0,a.fromString)(\"#!\".concat(o.value,\"\\n\"),i);case\"ModuleSpecifier\":if(o.local)throw Error(\"The ESTree ModuleSpecifier type should be abstract\");return(0,a.fromString)(N(o.value,i),i);case\"UnaryExpression\":return u.push(o.operator),/[a-z]$/.test(o.operator)&&u.push(\" \"),u.push(r.call(s,\"argument\")),(0,a.concat)(u);case\"UpdateExpression\":return u.push(r.call(s,\"argument\"),o.operator),o.prefix&&u.reverse(),(0,a.concat)(u);case\"ConditionalExpression\":return(0,a.concat)([r.call(s,\"test\"),\" ? \",r.call(s,\"consequent\"),\" : \",r.call(s,\"alternate\")]);case\"NewExpression\":return u.push(\"new \",r.call(s,\"callee\")),o.typeParameters&&u.push(r.call(s,\"typeParameters\")),o.typeArguments&&u.push(r.call(s,\"typeArguments\")),o.arguments&&u.push(v(r,i,s)),(0,a.concat)(u);case\"VariableDeclaration\":o.declare&&u.push(\"declare \"),u.push(o.kind,\" \");var $=0,H=r.map((function(e){var t=s(e);return $=Math.max(t.length,$),t}),\"declarations\");1===$?u.push((0,a.fromString)(\", \").join(H)):H.length>1?u.push((0,a.fromString)(\",\\n\").join(H).indentTail(o.kind.length+1)):u.push(H[0]);var K=r.getParentNode();return c.ForStatement.check(K)||c.ForInStatement.check(K)||c.ForOfStatement&&c.ForOfStatement.check(K)||c.ForAwaitStatement&&c.ForAwaitStatement.check(K)||u.push(\";\"),(0,a.concat)(u);case\"VariableDeclarator\":return o.init?(0,a.fromString)(\" = \").join([r.call(s,\"id\"),r.call(s,\"init\")]):r.call(s,\"id\");case\"WithStatement\":return(0,a.concat)([\"with (\",r.call(s,\"object\"),\") \",r.call(s,\"body\")]);case\"IfStatement\":var X=k(r.call(s,\"consequent\"),i);return u.push(\"if (\",r.call(s,\"test\"),\")\",X),o.alternate&&u.push(w(X)?\" else\":\"\\nelse\",k(r.call(s,\"alternate\"),i)),(0,a.concat)(u);case\"ForStatement\":var Y=r.call(s,\"init\"),Q=Y.length>1?\";\\n\":\"; \",Z=(0,a.fromString)(Q).join([Y,r.call(s,\"test\"),r.call(s,\"update\")]).indentTail(5),ee=(0,a.concat)([\"for (\",Z,\")\"]),te=k(r.call(s,\"body\"),i);return u.push(ee),ee.length>1&&(u.push(\"\\n\"),te=te.trimLeft()),u.push(te),(0,a.concat)(u);case\"WhileStatement\":return(0,a.concat)([\"while (\",r.call(s,\"test\"),\")\",k(r.call(s,\"body\"),i)]);case\"ForInStatement\":return(0,a.concat)([o.each?\"for each (\":\"for (\",r.call(s,\"left\"),\" in \",r.call(s,\"right\"),\")\",k(r.call(s,\"body\"),i)]);case\"ForOfStatement\":case\"ForAwaitStatement\":return u.push(\"for \"),(o.await||\"ForAwaitStatement\"===o.type)&&u.push(\"await \"),u.push(\"(\",r.call(s,\"left\"),\" of \",r.call(s,\"right\"),\")\",k(r.call(s,\"body\"),i)),(0,a.concat)(u);case\"DoWhileStatement\":var ne=(0,a.concat)([\"do\",k(r.call(s,\"body\"),i)]);return u.push(ne),w(ne)?u.push(\" while\"):u.push(\"\\nwhile\"),u.push(\" (\",r.call(s,\"test\"),\");\"),(0,a.concat)(u);case\"DoExpression\":var re=r.call((function(e){return y(e,i,s)}),\"body\");return(0,a.concat)([\"do {\\n\",re.indent(i.tabWidth),\"\\n}\"]);case\"BreakStatement\":return u.push(\"break\"),o.label&&u.push(\" \",r.call(s,\"label\")),u.push(\";\"),(0,a.concat)(u);case\"ContinueStatement\":return u.push(\"continue\"),o.label&&u.push(\" \",r.call(s,\"label\")),u.push(\";\"),(0,a.concat)(u);case\"LabeledStatement\":return(0,a.concat)([r.call(s,\"label\"),\":\\n\",r.call(s,\"body\")]);case\"TryStatement\":return u.push(\"try \",r.call(s,\"block\")),o.handler?u.push(\" \",r.call(s,\"handler\")):o.handlers&&r.each((function(e){u.push(\" \",s(e))}),\"handlers\"),o.finalizer&&u.push(\" finally \",r.call(s,\"finalizer\")),(0,a.concat)(u);case\"CatchClause\":return u.push(\"catch \"),o.param&&u.push(\"(\",r.call(s,\"param\")),o.guard&&u.push(\" if \",r.call(s,\"guard\")),o.param&&u.push(\") \"),u.push(r.call(s,\"body\")),(0,a.concat)(u);case\"ThrowStatement\":return(0,a.concat)([\"throw \",r.call(s,\"argument\"),\";\"]);case\"SwitchStatement\":return(0,a.concat)([\"switch (\",r.call(s,\"discriminant\"),\") {\\n\",(0,a.fromString)(\"\\n\").join(r.map(s,\"cases\")),\"\\n}\"]);case\"SwitchCase\":return o.test?u.push(\"case \",r.call(s,\"test\"),\":\"):u.push(\"default:\"),o.consequent.length>0&&u.push(\"\\n\",r.call((function(e){return y(e,i,s)}),\"consequent\").indent(i.tabWidth)),(0,a.concat)(u);case\"DebuggerStatement\":return(0,a.fromString)(\"debugger;\");case\"JSXAttribute\":return u.push(r.call(s,\"name\")),o.value&&u.push(\"=\",r.call(s,\"value\")),(0,a.concat)(u);case\"JSXIdentifier\":return(0,a.fromString)(o.name,i);case\"JSXNamespacedName\":return(0,a.fromString)(\":\").join([r.call(s,\"namespace\"),r.call(s,\"name\")]);case\"JSXMemberExpression\":return(0,a.fromString)(\".\").join([r.call(s,\"object\"),r.call(s,\"property\")]);case\"JSXSpreadAttribute\":return(0,a.concat)([\"{...\",r.call(s,\"argument\"),\"}\"]);case\"JSXSpreadChild\":return(0,a.concat)([\"{...\",r.call(s,\"expression\"),\"}\"]);case\"JSXExpressionContainer\":return(0,a.concat)([\"{\",r.call(s,\"expression\"),\"}\"]);case\"JSXElement\":case\"JSXFragment\":var ie=\"opening\"+(\"JSXElement\"===o.type?\"Element\":\"Fragment\"),ae=\"closing\"+(\"JSXElement\"===o.type?\"Element\":\"Fragment\"),se=r.call(s,ie);if(o[ie].selfClosing)return(0,t.default)(!o[ae],\"unexpected \"+ae+\" element in self-closing \"+o.type),se;var oe=(0,a.concat)(r.map((function(e){var t=e.getValue();if(c.Literal.check(t)&&\"string\"==typeof t.value){if(/\\S/.test(t.value))return t.value.replace(/^\\s+/g,\"\");if(/\\n/.test(t.value))return\"\\n\"}return s(e)}),\"children\")).indentTail(i.tabWidth),le=r.call(s,ae);return(0,a.concat)([se,oe,le]);case\"JSXOpeningElement\":u.push(\"<\",r.call(s,\"name\"));var ce=r.call(s,\"typeParameters\");ce.length&&u.push(ce);var ue=[];r.each((function(e){ue.push(\" \",s(e))}),\"attributes\");var pe=(0,a.concat)(ue);return(pe.length>1||pe.getLineLength(1)>i.wrapColumn)&&(ue.forEach((function(e,n){\" \"===e&&((0,t.default)(n%2==0),ue[n]=\"\\n\")})),pe=(0,a.concat)(ue).indentTail(i.tabWidth)),u.push(pe,o.selfClosing?\" />\":\">\"),(0,a.concat)(u);case\"JSXClosingElement\":return(0,a.concat)([\"</\",r.call(s,\"name\"),\">\"]);case\"JSXOpeningFragment\":return(0,a.fromString)(\"<>\");case\"JSXClosingFragment\":return(0,a.fromString)(\"</>\");case\"JSXText\":return(0,a.fromString)(o.value,i);case\"JSXEmptyExpression\":return(0,a.fromString)(\"\");case\"TypeAnnotatedIdentifier\":return(0,a.concat)([r.call(s,\"annotation\"),\" \",r.call(s,\"identifier\")]);case\"ClassBody\":return 0===o.body.length?(0,a.fromString)(\"{}\"):(0,a.concat)([\"{\\n\",r.call((function(e){return y(e,i,s)}),\"body\").indent(i.tabWidth),\"\\n}\"]);case\"ClassPropertyDefinition\":return u.push(\"static \",r.call(s,\"definition\")),c.MethodDefinition.check(o.definition)||u.push(\";\"),(0,a.concat)(u);case\"ClassProperty\":o.declare&&u.push(\"declare \");var he=o.accessibility||o.access;return\"string\"==typeof he&&u.push(he,\" \"),o.static&&u.push(\"static \"),o.abstract&&u.push(\"abstract \"),o.readonly&&u.push(\"readonly \"),z=r.call(s,\"key\"),o.computed&&(z=(0,a.concat)([\"[\",z,\"]\"])),o.variance&&(z=(0,a.concat)([_(r,s),z])),u.push(z),o.optional&&u.push(\"?\"),o.definite&&u.push(\"!\"),o.typeAnnotation&&u.push(r.call(s,\"typeAnnotation\")),o.value&&u.push(\" = \",r.call(s,\"value\")),u.push(\";\"),(0,a.concat)(u);case\"ClassPrivateProperty\":return o.static&&u.push(\"static \"),u.push(r.call(s,\"key\")),o.typeAnnotation&&u.push(r.call(s,\"typeAnnotation\")),o.value&&u.push(\" = \",r.call(s,\"value\")),u.push(\";\"),(0,a.concat)(u);case\"ClassAccessorProperty\":return u.push.apply(u,e.__spreadArray(e.__spreadArray([],g(o),!1),[\"accessor \"],!1)),o.computed?u.push(\"[\",r.call(s,\"key\"),\"]\"):u.push(r.call(s,\"key\")),o.optional&&u.push(\"?\"),o.definite&&u.push(\"!\"),o.typeAnnotation&&u.push(r.call(s,\"typeAnnotation\")),o.value&&u.push(\" = \",r.call(s,\"value\")),u.push(\";\"),(0,a.concat)(u);case\"ClassDeclaration\":case\"ClassExpression\":case\"DeclareClass\":return o.declare&&u.push(\"declare \"),o.abstract&&u.push(\"abstract \"),u.push(\"class\"),o.id&&u.push(\" \",r.call(s,\"id\")),o.typeParameters&&u.push(r.call(s,\"typeParameters\")),o.superClass&&u.push(\" extends \",r.call(s,\"superClass\"),r.call(s,\"superTypeParameters\")),o.extends&&o.extends.length>0&&u.push(\" extends \",(0,a.fromString)(\", \").join(r.map(s,\"extends\"))),o.implements&&o.implements.length>0&&u.push(\" implements \",(0,a.fromString)(\", \").join(r.map(s,\"implements\"))),u.push(\" \",r.call(s,\"body\")),\"DeclareClass\"===o.type?T(r,u):(0,a.concat)(u);case\"TemplateElement\":return(0,a.fromString)(o.value.raw,i).lockIndentTail();case\"TemplateLiteral\":var de=r.map(s,\"expressions\");return u.push(\"`\"),r.each((function(e){var t=e.getName();u.push(s(e)),t<de.length&&u.push(\"${\",de[t],\"}\")}),\"quasis\"),u.push(\"`\"),(0,a.concat)(u).lockIndentTail();case\"TaggedTemplateExpression\":return(0,a.concat)([r.call(s,\"tag\"),r.call(s,\"quasi\")]);case\"Node\":case\"Printable\":case\"SourceLocation\":case\"Position\":case\"Statement\":case\"Function\":case\"Pattern\":case\"Expression\":case\"Declaration\":case\"Specifier\":case\"NamedSpecifier\":case\"Comment\":case\"Flow\":case\"FlowType\":case\"FlowPredicate\":case\"MemberTypeAnnotation\":case\"Type\":case\"TSHasOptionalTypeParameterInstantiation\":case\"TSHasOptionalTypeParameters\":case\"TSHasOptionalTypeAnnotation\":case\"ChainElement\":throw Error(\"unprintable type: \"+JSON.stringify(o.type));case\"CommentBlock\":case\"Block\":return(0,a.concat)([\"/*\",(0,a.fromString)(o.value,i),\"*/\"]);case\"CommentLine\":case\"Line\":return(0,a.concat)([\"//\",(0,a.fromString)(o.value,i)]);case\"TypeAnnotation\":return o.typeAnnotation?(\"FunctionTypeAnnotation\"!==o.typeAnnotation.type&&u.push(\": \"),u.push(r.call(s,\"typeAnnotation\")),(0,a.concat)(u)):(0,a.fromString)(\"\");case\"ExistentialTypeParam\":case\"ExistsTypeAnnotation\":return(0,a.fromString)(\"*\",i);case\"EmptyTypeAnnotation\":return(0,a.fromString)(\"empty\",i);case\"AnyTypeAnnotation\":return(0,a.fromString)(\"any\",i);case\"MixedTypeAnnotation\":return(0,a.fromString)(\"mixed\",i);case\"ArrayTypeAnnotation\":return(0,a.concat)([r.call(s,\"elementType\"),\"[]\"]);case\"TupleTypeAnnotation\":var fe=r.map(s,\"types\"),me=(0,a.fromString)(\", \").join(fe).getLineLength(1)<=i.wrapColumn;return me?i.arrayBracketSpacing?u.push(\"[ \"):u.push(\"[\"):u.push(\"[\\n\"),r.each((function(e){var t=e.getName();if(e.getValue()){var n=fe[t];me?t>0&&u.push(\" \"):n=n.indent(i.tabWidth),u.push(n),(t<o.types.length-1||!me&&l.isTrailingCommaEnabled(i,\"arrays\"))&&u.push(\",\"),me||u.push(\"\\n\")}else u.push(\",\")}),\"types\"),me&&i.arrayBracketSpacing?u.push(\" ]\"):u.push(\"]\"),(0,a.concat)(u);case\"BooleanTypeAnnotation\":return(0,a.fromString)(\"boolean\",i);case\"BooleanLiteralTypeAnnotation\":return(0,t.default)(\"boolean\"==typeof o.value),(0,a.fromString)(\"\"+o.value,i);case\"InterfaceTypeAnnotation\":return u.push(\"interface\"),o.extends&&o.extends.length>0&&u.push(\" extends \",(0,a.fromString)(\", \").join(r.map(s,\"extends\"))),u.push(\" \",r.call(s,\"body\")),(0,a.concat)(u);case\"DeclareFunction\":return T(r,[\"function \",r.call(s,\"id\"),\";\"]);case\"DeclareModule\":return T(r,[\"module \",r.call(s,\"id\"),\" \",r.call(s,\"body\")]);case\"DeclareModuleExports\":return T(r,[\"module.exports\",r.call(s,\"typeAnnotation\")]);case\"DeclareVariable\":return T(r,[\"var \",r.call(s,\"id\"),\";\"]);case\"DeclareExportDeclaration\":case\"DeclareExportAllDeclaration\":return(0,a.concat)([\"declare \",E(r,i,s)]);case\"EnumDeclaration\":return(0,a.concat)([\"enum \",r.call(s,\"id\"),r.call(s,\"body\")]);case\"EnumBooleanBody\":case\"EnumNumberBody\":case\"EnumStringBody\":case\"EnumSymbolBody\":return(\"EnumSymbolBody\"===o.type||o.explicitType)&&u.push(\" of \",o.type.slice(4,-4).toLowerCase()),u.push(\" {\\n\",(0,a.fromString)(\"\\n\").join(r.map(s,\"members\")).indent(i.tabWidth),\"\\n}\"),(0,a.concat)(u);case\"EnumDefaultedMember\":return(0,a.concat)([r.call(s,\"id\"),\",\"]);case\"EnumBooleanMember\":case\"EnumNumberMember\":case\"EnumStringMember\":return(0,a.concat)([r.call(s,\"id\"),\" = \",r.call(s,\"init\"),\",\"]);case\"InferredPredicate\":return(0,a.fromString)(\"%checks\",i);case\"DeclaredPredicate\":return(0,a.concat)([\"%checks(\",r.call(s,\"value\"),\")\"]);case\"FunctionTypeAnnotation\":var ye=r.getParentNode(0),ge=!(c.ObjectTypeCallProperty.check(ye)||c.ObjectTypeInternalSlot.check(ye)&&ye.method||c.DeclareFunction.check(r.getParentNode(2)));ge&&!c.FunctionTypeParam.check(ye)&&!c.TypeAlias.check(ye)&&u.push(\": \");var be=!!o.typeParameters,ve=be||1!==o.params.length||o.params[0].name;return u.push(be?r.call(s,\"typeParameters\"):\"\",ve?\"(\":\"\",x(r,i,s),ve?\")\":\"\"),o.returnType&&u.push(ge?\" => \":\": \",r.call(s,\"returnType\")),(0,a.concat)(u);case\"FunctionTypeParam\":var xe=r.call(s,\"name\");return u.push(xe),o.optional&&u.push(\"?\"),xe.infos[0].line&&u.push(\": \"),u.push(r.call(s,\"typeAnnotation\")),(0,a.concat)(u);case\"GenericTypeAnnotation\":return(0,a.concat)([r.call(s,\"id\"),r.call(s,\"typeParameters\")]);case\"DeclareInterface\":u.push(\"declare \");case\"InterfaceDeclaration\":case\"TSInterfaceDeclaration\":return o.declare&&u.push(\"declare \"),u.push(\"interface \",r.call(s,\"id\"),r.call(s,\"typeParameters\"),\" \"),o.extends&&o.extends.length>0&&u.push(\"extends \",(0,a.fromString)(\", \").join(r.map(s,\"extends\")),\" \"),o.body&&u.push(r.call(s,\"body\")),(0,a.concat)(u);case\"ClassImplements\":case\"InterfaceExtends\":return(0,a.concat)([r.call(s,\"id\"),r.call(s,\"typeParameters\")]);case\"IntersectionTypeAnnotation\":return(0,a.fromString)(\" & \").join(r.map(s,\"types\"));case\"NullableTypeAnnotation\":return(0,a.concat)([\"?\",r.call(s,\"typeAnnotation\")]);case\"NullLiteralTypeAnnotation\":return(0,a.fromString)(\"null\",i);case\"ThisTypeAnnotation\":return(0,a.fromString)(\"this\",i);case\"NumberTypeAnnotation\":return(0,a.fromString)(\"number\",i);case\"ObjectTypeCallProperty\":return r.call(s,\"value\");case\"ObjectTypeIndexer\":return o.static&&u.push(\"static \"),u.push(_(r,s),\"[\"),o.id&&u.push(r.call(s,\"id\"),\": \"),u.push(r.call(s,\"key\"),\"]: \",r.call(s,\"value\")),(0,a.concat)(u);case\"ObjectTypeProperty\":return(0,a.concat)([_(r,s),r.call(s,\"key\"),o.optional?\"?\":\"\",\": \",r.call(s,\"value\")]);case\"ObjectTypeInternalSlot\":return(0,a.concat)([o.static?\"static \":\"\",\"[[\",r.call(s,\"id\"),\"]]\",o.optional?\"?\":\"\",\"FunctionTypeAnnotation\"!==o.value.type?\": \":\"\",r.call(s,\"value\")]);case\"QualifiedTypeIdentifier\":return(0,a.concat)([r.call(s,\"qualification\"),\".\",r.call(s,\"id\")]);case\"StringLiteralTypeAnnotation\":return(0,a.fromString)(N(o.value,i),i);case\"NumberLiteralTypeAnnotation\":case\"NumericLiteralTypeAnnotation\":return(0,t.default)(\"number\"==typeof o.value),(0,a.fromString)(JSON.stringify(o.value),i);case\"BigIntLiteralTypeAnnotation\":return(0,a.fromString)(o.raw,i);case\"StringTypeAnnotation\":return(0,a.fromString)(\"string\",i);case\"DeclareTypeAlias\":u.push(\"declare \");case\"TypeAlias\":return(0,a.concat)([\"type \",r.call(s,\"id\"),r.call(s,\"typeParameters\"),\" = \",r.call(s,\"right\"),\";\"]);case\"DeclareOpaqueType\":u.push(\"declare \");case\"OpaqueType\":return u.push(\"opaque type \",r.call(s,\"id\"),r.call(s,\"typeParameters\")),o.supertype&&u.push(\": \",r.call(s,\"supertype\")),o.impltype&&u.push(\" = \",r.call(s,\"impltype\")),u.push(\";\"),(0,a.concat)(u);case\"TypeCastExpression\":return(0,a.concat)([\"(\",r.call(s,\"expression\"),r.call(s,\"typeAnnotation\"),\")\"]);case\"TypeParameterDeclaration\":case\"TypeParameterInstantiation\":return(0,a.concat)([\"<\",(0,a.fromString)(\", \").join(r.map(s,\"params\")),\">\"]);case\"Variance\":return\"plus\"===o.kind?(0,a.fromString)(\"+\"):\"minus\"===o.kind?(0,a.fromString)(\"-\"):(0,a.fromString)(\"\");case\"TypeParameter\":return o.variance&&u.push(_(r,s)),u.push(r.call(s,\"name\")),o.bound&&u.push(r.call(s,\"bound\")),o.default&&u.push(\"=\",r.call(s,\"default\")),(0,a.concat)(u);case\"TypeofTypeAnnotation\":return(0,a.concat)([(0,a.fromString)(\"typeof \",i),r.call(s,\"argument\")]);case\"IndexedAccessType\":case\"OptionalIndexedAccessType\":return(0,a.concat)([r.call(s,\"objectType\"),o.optional?\"?.\":\"\",\"[\",r.call(s,\"indexType\"),\"]\"]);case\"UnionTypeAnnotation\":return(0,a.fromString)(\" | \").join(r.map(s,\"types\"));case\"VoidTypeAnnotation\":return(0,a.fromString)(\"void\",i);case\"NullTypeAnnotation\":return(0,a.fromString)(\"null\",i);case\"SymbolTypeAnnotation\":return(0,a.fromString)(\"symbol\",i);case\"BigIntTypeAnnotation\":return(0,a.fromString)(\"bigint\",i);case\"TSType\":throw Error(\"unprintable type: \"+JSON.stringify(o.type));case\"TSNumberKeyword\":return(0,a.fromString)(\"number\",i);case\"TSBigIntKeyword\":return(0,a.fromString)(\"bigint\",i);case\"TSObjectKeyword\":return(0,a.fromString)(\"object\",i);case\"TSBooleanKeyword\":return(0,a.fromString)(\"boolean\",i);case\"TSStringKeyword\":return(0,a.fromString)(\"string\",i);case\"TSSymbolKeyword\":return(0,a.fromString)(\"symbol\",i);case\"TSAnyKeyword\":return(0,a.fromString)(\"any\",i);case\"TSVoidKeyword\":return(0,a.fromString)(\"void\",i);case\"TSIntrinsicKeyword\":return(0,a.fromString)(\"intrinsic\",i);case\"TSThisType\":return(0,a.fromString)(\"this\",i);case\"TSNullKeyword\":return(0,a.fromString)(\"null\",i);case\"TSUndefinedKeyword\":return(0,a.fromString)(\"undefined\",i);case\"TSUnknownKeyword\":return(0,a.fromString)(\"unknown\",i);case\"TSNeverKeyword\":return(0,a.fromString)(\"never\",i);case\"TSArrayType\":return(0,a.concat)([r.call(s,\"elementType\"),\"[]\"]);case\"TSLiteralType\":return r.call(s,\"literal\");case\"TSUnionType\":return(0,a.fromString)(\" | \").join(r.map(s,\"types\"));case\"TSIntersectionType\":return(0,a.fromString)(\" & \").join(r.map(s,\"types\"));case\"TSConditionalType\":return u.push(r.call(s,\"checkType\"),\" extends \",r.call(s,\"extendsType\"),\" ? \",r.call(s,\"trueType\"),\" : \",r.call(s,\"falseType\")),(0,a.concat)(u);case\"TSInferType\":return u.push(\"infer \",r.call(s,\"typeParameter\")),(0,a.concat)(u);case\"TSParenthesizedType\":return(0,a.concat)([\"(\",r.call(s,\"typeAnnotation\"),\")\"]);case\"TSFunctionType\":return(0,a.concat)([r.call(s,\"typeParameters\"),\"(\",x(r,i,s),\") => \",r.call(s,\"typeAnnotation\",\"typeAnnotation\")]);case\"TSConstructorType\":return(0,a.concat)([\"new \",r.call(s,\"typeParameters\"),\"(\",x(r,i,s),\") => \",r.call(s,\"typeAnnotation\",\"typeAnnotation\")]);case\"TSMappedType\":return u.push(o.readonly?\"readonly \":\"\",\"[\",r.call(s,\"typeParameter\"),\"]\",o.optional?\"?\":\"\"),o.typeAnnotation&&u.push(\": \",r.call(s,\"typeAnnotation\"),\";\"),(0,a.concat)([\"{\\n\",(0,a.concat)(u).indent(i.tabWidth),\"\\n}\"]);case\"TSTupleType\":return(0,a.concat)([\"[\",(0,a.fromString)(\", \").join(r.map(s,\"elementTypes\")),\"]\"]);case\"TSNamedTupleMember\":return u.push(r.call(s,\"label\")),o.optional&&u.push(\"?\"),u.push(\": \",r.call(s,\"elementType\")),(0,a.concat)(u);case\"TSRestType\":return(0,a.concat)([\"...\",r.call(s,\"typeAnnotation\")]);case\"TSOptionalType\":return(0,a.concat)([r.call(s,\"typeAnnotation\"),\"?\"]);case\"TSIndexedAccessType\":return(0,a.concat)([r.call(s,\"objectType\"),\"[\",r.call(s,\"indexType\"),\"]\"]);case\"TSTypeOperator\":return(0,a.concat)([r.call(s,\"operator\"),\" \",r.call(s,\"typeAnnotation\")]);case\"TSTypeLiteral\":var Se=(0,a.fromString)(\"\\n\").join(r.map(s,\"members\").map((function(e){return\";\"!==P(e)?e.concat(\";\"):e})));return Se.isEmpty()?(0,a.fromString)(\"{}\",i):(u.push(\"{\\n\",Se.indent(i.tabWidth),\"\\n}\"),(0,a.concat)(u));case\"TSEnumMember\":return u.push(r.call(s,\"id\")),o.initializer&&u.push(\" = \",r.call(s,\"initializer\")),(0,a.concat)(u);case\"TSTypeQuery\":return(0,a.concat)([\"typeof \",r.call(s,\"exprName\")]);case\"TSParameterProperty\":return o.accessibility&&u.push(o.accessibility,\" \"),o.export&&u.push(\"export \"),o.static&&u.push(\"static \"),o.readonly&&u.push(\"readonly \"),u.push(r.call(s,\"parameter\")),(0,a.concat)(u);case\"TSTypeReference\":return(0,a.concat)([r.call(s,\"typeName\"),r.call(s,\"typeParameters\")]);case\"TSQualifiedName\":return(0,a.concat)([r.call(s,\"left\"),\".\",r.call(s,\"right\")]);case\"TSAsExpression\":case\"TSSatisfiesExpression\":var Ee=r.call(s,\"expression\");return u.push(Ee,\"TSSatisfiesExpression\"===o.type?\" satisfies \":\" as \",r.call(s,\"typeAnnotation\")),(0,a.concat)(u);case\"TSTypeCastExpression\":return(0,a.concat)([r.call(s,\"expression\"),r.call(s,\"typeAnnotation\")]);case\"TSNonNullExpression\":return(0,a.concat)([r.call(s,\"expression\"),\"!\"]);case\"TSTypeAnnotation\":return(0,a.concat)([\": \",r.call(s,\"typeAnnotation\")]);case\"TSIndexSignature\":return(0,a.concat)([o.readonly?\"readonly \":\"\",\"[\",r.map(s,\"parameters\"),\"]\",r.call(s,\"typeAnnotation\")]);case\"TSPropertySignature\":return u.push(_(r,s),o.readonly?\"readonly \":\"\"),o.computed?u.push(\"[\",r.call(s,\"key\"),\"]\"):u.push(r.call(s,\"key\")),u.push(o.optional?\"?\":\"\",r.call(s,\"typeAnnotation\")),(0,a.concat)(u);case\"TSMethodSignature\":return\"get\"===o.kind?u.push(\"get \"):\"set\"===o.kind&&u.push(\"set \"),o.computed?u.push(\"[\",r.call(s,\"key\"),\"]\"):u.push(r.call(s,\"key\")),o.optional&&u.push(\"?\"),u.push(r.call(s,\"typeParameters\"),\"(\",x(r,i,s),\")\",r.call(s,\"typeAnnotation\")),(0,a.concat)(u);case\"TSTypePredicate\":return o.asserts&&u.push(\"asserts \"),u.push(r.call(s,\"parameterName\")),o.typeAnnotation&&u.push(\" is \",r.call(s,\"typeAnnotation\",\"typeAnnotation\")),(0,a.concat)(u);case\"TSCallSignatureDeclaration\":return(0,a.concat)([r.call(s,\"typeParameters\"),\"(\",x(r,i,s),\")\",r.call(s,\"typeAnnotation\")]);case\"TSConstructSignatureDeclaration\":return o.typeParameters?u.push(\"new\",r.call(s,\"typeParameters\")):u.push(\"new \"),u.push(\"(\",x(r,i,s),\")\",r.call(s,\"typeAnnotation\")),(0,a.concat)(u);case\"TSTypeAliasDeclaration\":return(0,a.concat)([o.declare?\"declare \":\"\",\"type \",r.call(s,\"id\"),r.call(s,\"typeParameters\"),\" = \",r.call(s,\"typeAnnotation\"),\";\"]);case\"TSTypeParameter\":u.push(r.call(s,\"name\")),ye=r.getParentNode(0);var Te=c.TSMappedType.check(ye);return o.constraint&&u.push(Te?\" in \":\" extends \",r.call(s,\"constraint\")),o.default&&u.push(\" = \",r.call(s,\"default\")),(0,a.concat)(u);case\"TSTypeAssertion\":return u.push(\"<\",r.call(s,\"typeAnnotation\"),\"> \",r.call(s,\"expression\")),(0,a.concat)(u);case\"TSTypeParameterDeclaration\":case\"TSTypeParameterInstantiation\":return(0,a.concat)([\"<\",(0,a.fromString)(\", \").join(r.map(s,\"params\")),\">\"]);case\"TSEnumDeclaration\":u.push(o.declare?\"declare \":\"\",o.const?\"const \":\"\",\"enum \",r.call(s,\"id\"));var _e=(0,a.fromString)(\",\\n\").join(r.map(s,\"members\"));return _e.isEmpty()?u.push(\" {}\"):u.push(\" {\\n\",_e.indent(i.tabWidth),\"\\n}\"),(0,a.concat)(u);case\"TSExpressionWithTypeArguments\":return(0,a.concat)([r.call(s,\"expression\"),r.call(s,\"typeParameters\")]);case\"TSInterfaceBody\":var ke;return(ke=(0,a.fromString)(\"\\n\").join(r.map(s,\"body\").map((function(e){return\";\"!==P(e)?e.concat(\";\"):e})))).isEmpty()?(0,a.fromString)(\"{}\",i):(0,a.concat)([\"{\\n\",ke.indent(i.tabWidth),\"\\n}\"]);case\"TSImportType\":return u.push(\"import(\",r.call(s,\"argument\"),\")\"),o.qualifier&&u.push(\".\",r.call(s,\"qualifier\")),o.typeParameters&&u.push(r.call(s,\"typeParameters\")),(0,a.concat)(u);case\"TSImportEqualsDeclaration\":return o.isExport&&u.push(\"export \"),u.push(\"import \",r.call(s,\"id\"),\" = \",r.call(s,\"moduleReference\")),O((0,a.concat)(u));case\"TSExternalModuleReference\":return(0,a.concat)([\"require(\",r.call(s,\"expression\"),\")\"]);case\"TSModuleDeclaration\":return\"TSModuleDeclaration\"===(ye=r.getParentNode()).type?u.push(\".\"):(o.declare&&u.push(\"declare \"),o.global||(\"StringLiteral\"===o.id.type||\"Literal\"===o.id.type&&\"string\"==typeof o.id.value||o.loc&&o.loc.lines&&o.id.loc&&o.loc.lines.sliceString(o.loc.start,o.id.loc.start).indexOf(\"module\")>=0?u.push(\"module \"):u.push(\"namespace \"))),u.push(r.call(s,\"id\")),o.body&&(u.push(\" \"),u.push(r.call(s,\"body\"))),(0,a.concat)(u);case\"TSModuleBlock\":var Pe=r.call((function(e){return y(e,i,s)}),\"body\");return Pe.isEmpty()?u.push(\"{}\"):u.push(\"{\\n\",Pe.indent(i.tabWidth),\"\\n}\"),(0,a.concat)(u);case\"TSInstantiationExpression\":return u.push(r.call(s,\"expression\"),r.call(s,\"typeParameters\")),(0,a.concat)(u);case\"V8IntrinsicIdentifier\":return(0,a.concat)([\"%\",r.call(s,\"name\")]);case\"TopicReference\":return(0,a.fromString)(\"#\");default:throw Error(\"unknown type: \"+JSON.stringify(o.type))}}(r,s,u);if(!p||d.isEmpty())return d;var f=!1,m=function(e,t){var n=[],r=e.getValue();return r.decorators&&r.decorators.length>0&&!l.getParentExportDeclaration(e)?e.each((function(e){n.push(t(e),\"\\n\")}),\"decorators\"):l.isExportDeclaration(r)&&r.declaration&&r.declaration.decorators&&e.each((function(e){n.push(t(e),\"\\n\")}),\"declaration\",\"decorators\"),(0,a.concat)(n)}(r,u);return m.isEmpty()?o.avoidRootParens||(f=r.needsParens()):h.push(m),f&&h.unshift(\"(\"),h.push(d),f&&h.push(\")\"),(0,a.concat)(h)}function y(e,n,r){var i=[],s=!1,o=!1;e.each((function(e){var t=e.getValue();t&&(\"EmptyStatement\"!==t.type||t.comments&&t.comments.length>0)&&(c.Comment.check(t)?s=!0:c.Statement.check(t)?o=!0:u.assert(t),i.push({node:t,printed:r(e)}))})),s&&(0,t.default)(!1===o,\"Comments may appear as statements in otherwise empty statement lists, but may not coexist with non-Comment nodes.\");var p=null,h=i.length,d=[];return i.forEach((function(e,t){var r,i,s=e.printed,o=e.node,c=s.length>1,u=t>0,f=t<h-1,m=o&&o.loc&&o.loc.lines,y=m&&n.reuseWhitespace&&l.getTrueLoc(o,m);if(u)if(y){var g=m.skipSpaces(y.start,!0),b=g?g.line:1,v=y.start.line-b;r=Array(v+1).join(\"\\n\")}else r=c?\"\\n\\n\":\"\\n\";else r=\"\";if(f)if(y){var x=m.skipSpaces(y.end),S=(x?x.line:m.length)-y.end.line;i=Array(S+1).join(\"\\n\")}else i=c?\"\\n\\n\":\"\\n\";else i=\"\";d.push(function(e,t){if(!e&&!t)return(0,a.fromString)(\"\");if(!e)return(0,a.fromString)(t);if(!t)return(0,a.fromString)(e);var n=(0,a.fromString)(e),r=(0,a.fromString)(t);return r.length>n.length?r:n}(p,r),s),f?p=i:i&&d.push(i)})),(0,a.concat)(d)}function g(e){var t=[];e.declare&&t.push(\"declare \");var n=e.accessibility||e.access;return\"string\"==typeof n&&t.push(n,\" \"),e.static&&t.push(\"static \"),e.override&&t.push(\"override \"),e.abstract&&t.push(\"abstract \"),e.readonly&&t.push(\"readonly \"),t}function b(e,t,n){var r=e.getNode(),i=r.kind,s=[],o=r.value;c.FunctionExpression.check(o)||(o=r),s.push.apply(s,g(r)),o.async&&s.push(\"async \"),o.generator&&s.push(\"*\"),\"get\"!==i&&\"set\"!==i||s.push(i,\" \");var l=e.call(n,\"key\");return r.computed&&(l=(0,a.concat)([\"[\",l,\"]\"])),s.push(l),r.optional&&s.push(\"?\"),r===o?(s.push(e.call(n,\"typeParameters\"),\"(\",x(e,t,n),\")\",e.call(n,\"returnType\")),r.body?s.push(\" \",e.call(n,\"body\")):s.push(\";\")):(s.push(e.call(n,\"value\",\"typeParameters\"),\"(\",e.call((function(e){return x(e,t,n)}),\"value\"),\")\",e.call(n,\"value\",\"returnType\")),o.body?s.push(\" \",e.call(n,\"value\",\"body\")):s.push(\";\")),(0,a.concat)(s)}function v(e,t,n){var r=e.map(n,\"arguments\"),i=l.isTrailingCommaEnabled(t,\"parameters\"),s=(0,a.fromString)(\", \").join(r);return s.getLineLength(1)>t.wrapColumn?(s=(0,a.fromString)(\",\\n\").join(r),(0,a.concat)([\"(\\n\",s.indent(t.tabWidth),i?\",\\n)\":\"\\n)\"])):(0,a.concat)([\"(\",s,\")\"])}function x(e,t,n){var r,i=e.getValue(),s=[];i.params?(r=i.params,s=e.map(n,\"params\")):i.parameters&&(r=i.parameters,s=e.map(n,\"parameters\")),i.defaults&&e.each((function(e){var t=e.getName(),r=s[t];r&&e.getValue()&&(s[t]=(0,a.concat)([r,\" = \",n(e)]))}),\"defaults\"),i.rest&&s.push((0,a.concat)([\"...\",e.call(n,\"rest\")]));var o=(0,a.fromString)(\", \").join(s);return o.length>1||o.getLineLength(1)>t.wrapColumn?(o=(0,a.fromString)(\",\\n\").join(s),o=l.isTrailingCommaEnabled(t,\"parameters\")&&!i.rest&&\"RestElement\"!==r[r.length-1].type?(0,a.concat)([o,\",\\n\"]):(0,a.concat)([o,\"\\n\"]),(0,a.concat)([\"\\n\",o.indent(t.tabWidth)])):o}function S(e,t,n){var r=e.getValue();if(r.assertions&&r.assertions.length>0){var i=[\" assert {\"],s=e.map(n,\"assertions\"),o=(0,a.fromString)(\", \").join(s);return o.length>1||o.getLineLength(1)>t.wrapColumn?i.push(\"\\n\",(0,a.fromString)(\",\\n\").join(s).indent(t.tabWidth),\"\\n}\"):i.push(\" \",o,\" }\"),(0,a.concat)(i)}return(0,a.fromString)(\"\")}function E(e,t,n){var r=e.getValue(),i=[\"export \"];r.exportKind&&\"type\"===r.exportKind&&(r.declaration||i.push(\"type \"));var s=t.objectCurlySpacing;if(c.Declaration.assert(r),(r.default||\"ExportDefaultDeclaration\"===r.type)&&i.push(\"default \"),r.declaration)i.push(e.call(n,\"declaration\"));else if(r.specifiers){if(1===r.specifiers.length&&\"ExportBatchSpecifier\"===r.specifiers[0].type)i.push(\"*\");else if(0===r.specifiers.length)i.push(\"{}\");else if(\"ExportDefaultSpecifier\"===r.specifiers[0].type||\"ExportNamespaceSpecifier\"===r.specifiers[0].type){var o=[],l=[];if(e.each((function(e){var t=e.getValue();\"ExportDefaultSpecifier\"===t.type||\"ExportNamespaceSpecifier\"===t.type?o.push(n(e)):l.push(n(e))}),\"specifiers\"),o.forEach((function(e,t){t>0&&i.push(\", \"),i.push(e)})),l.length>0){var u=(0,a.fromString)(\", \").join(l);u.getLineLength(1)>t.wrapColumn&&(u=(0,a.concat)([(0,a.fromString)(\",\\n\").join(l).indent(t.tabWidth),\",\"])),o.length>0&&i.push(\", \"),u.length>1?i.push(\"{\\n\",u,\"\\n}\"):t.objectCurlySpacing?i.push(\"{ \",u,\" }\"):i.push(\"{\",u,\"}\")}}else i.push(s?\"{ \":\"{\",(0,a.fromString)(\", \").join(e.map(n,\"specifiers\")),s?\" }\":\"}\");r.source&&i.push(\" from \",e.call(n,\"source\"),S(e,t,n))}var p=(0,a.concat)(i);return\";\"===P(p)||r.declaration&&(\"FunctionDeclaration\"===r.declaration.type||\"ClassDeclaration\"===r.declaration.type||\"TSModuleDeclaration\"===r.declaration.type||\"TSInterfaceDeclaration\"===r.declaration.type||\"TSEnumDeclaration\"===r.declaration.type)||(p=(0,a.concat)([p,\";\"])),p}function T(e,n){var r=l.getParentExportDeclaration(e);return r?(0,t.default)(\"DeclareExportDeclaration\"===r.type):n.unshift(\"declare \"),(0,a.concat)(n)}function _(e,t){return e.call((function(e){var n=e.getValue();return n?\"plus\"===n?(0,a.fromString)(\"+\"):\"minus\"===n?(0,a.fromString)(\"-\"):t(e):(0,a.fromString)(\"\")}),\"variance\")}function k(e,t){return e.length>1?(0,a.concat)([\" \",e]):(0,a.concat)([\"\\n\",O(e).indent(t.tabWidth)])}function P(e){var t=e.lastPos();do{var n=e.charAt(t);if(/\\S/.test(n))return n}while(e.prevPos(t))}function w(e){return\"}\"===P(e)}function A(e){return e.replace(/['\"]/g,(function(e){return'\"'===e?\"'\":'\"'}))}function C(e){var t=n.getFieldValue(e,\"value\"),r=n.getFieldValue(e,\"extra\");if(r&&\"string\"==typeof r.raw&&t==r.rawValue)return r.raw;if(\"Literal\"===e.type){var i=e.raw;if(\"string\"==typeof i&&t==i)return i}}function I(e){return JSON.stringify(e).replace(/[\\u2028\\u2029]/g,(function(e){return\"\\\\u\"+e.charCodeAt(0).toString(16)}))}function N(e,t){switch(u.assert(e),t.quote){case\"auto\":var n=I(e),r=A(I(A(e)));return n.length>r.length?r:n;case\"single\":return A(I(A(e)));default:return I(e)}}function O(e){var t=P(e);return!t||\"\\n};\".indexOf(t)<0?(0,a.concat)([e,\";\"]):e}return Ur.Printer=function e(n){(0,t.default)(this instanceof e);var a=n&&n.tabWidth;function c(e,t){return e=Object.assign({},e,t),function(t){return u(t,e)}}function u(e,s){if((0,t.default)(e instanceof i.default),(s=s||{}).includeComments)return(0,r.printComments)(e,c(s,{includeComments:!1}));var l=n.tabWidth;if(!a){var p=e.getNode().loc;p&&p.lines&&p.lines.guessTabWidth&&(n.tabWidth=p.lines.guessTabWidth())}var h=(0,o.getReprinter)(e),d=h?h(u):m(e,n,s,c(s,{includeComments:!0,avoidRootParens:!1}));return n.tabWidth=l,d}(n=(0,s.normalize)(n)).sourceFileName=null,this.print=function(e){if(!e)return f;var t=u(i.default.from(e),{includeComments:!0,avoidRootParens:!1});return new h(t.toString(n),l.composeSourceMaps(n.inputSourceMap,t.getSourceMap(n.sourceMapName,n.sourceRoot)))},this.printGenerically=function(e){if(!e)return f;var t=i.default.from(e),a=n.reuseWhitespace;n.reuseWhitespace=!1;var s=new h(function e(t){return(0,r.printComments)(t,(function(t){return m(t,n,{includeComments:!0,avoidRootParens:!1},e)}))}(t).toString(n));return n.reuseWhitespace=a,s}},Ur}(),s=er();function o(e,t){return new a.Printer(t).print(e)}function l(e){process.stdout.write(e)}Object.defineProperty(e,\"visit\",{enumerable:!0,get:function(){return s.visit}}),e.print=o,e.prettyPrint=function(e,t){return new a.Printer(t).printGenerically(e)},e.run=function(e,t){return function(e,t,r){n.default.readFile(e,\"utf-8\",(function(e,n){e?console.error(e):function(e,t,n){var r=n&&n.writeback||l;t((0,i.parse)(e,n),(function(e){r(o(e,n).code)}))}(n,t,r)}))}(process.argv[2],e,t)}}(Ze);const Hr=Ze.types,Kr=Ze.types.builders,Xr=Ze.types.namedTypes,Yr=[\"window\",\"document\",\"console\"],Qr=Object.keys({AggregateError:!1,Array:!1,ArrayBuffer:!1,Atomics:!1,BigInt:!1,BigInt64Array:!1,BigUint64Array:!1,Boolean:!1,DataView:!1,Date:!1,decodeURI:!1,decodeURIComponent:!1,encodeURI:!1,encodeURIComponent:!1,Error:!1,escape:!1,eval:!1,EvalError:!1,FinalizationRegistry:!1,Float32Array:!1,Float64Array:!1,Function:!1,globalThis:!1,Infinity:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,Intl:!1,isFinite:!1,isNaN:!1,JSON:!1,Map:!1,Math:!1,NaN:!1,Number:!1,Object:!1,parseFloat:!1,parseInt:!1,Promise:!1,Proxy:!1,RangeError:!1,ReferenceError:!1,Reflect:!1,RegExp:!1,Set:!1,SharedArrayBuffer:!1,String:!1,Symbol:!1,SyntaxError:!1,TypeError:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,undefined:!1,unescape:!1,URIError:!1,WeakMap:!1,WeakRef:!1,WeakSet:!1}),Zr=e=>Xr.Identifier.check(e),ei=e=>Xr.Literal.check(e),ti=e=>Xr.ExpressionStatement.check(e),ni=e=>ti(e)&&ai(e.expression.left)&&(e=>Xr.ThisExpression.check(e))(e.expression.left.object),ri=e=>Xr.SequenceExpression.check(e),ii=e=>Xr.ExportDefaultDeclaration.check(e),ai=e=>Xr.MemberExpression.check(e),si=e=>Xr.ImportDeclaration.check(e),oi=e=>Xr.TSTypeAliasDeclaration.check(e),li=e=>Xr.TSInterfaceDeclaration.check(e),ci=e=>Xr.ExportNamedDeclaration.check(e);function ui(...e){return e.reduce(((e,t)=>(...n)=>e(t(...n))))}function pi(e){return function(e){return\"template\"===e.name}(e)&&!s(_i(We,e))&&!Ei(e)&&!Si(e)}function hi({scope:e,node:t}){return t.object?hi({node:t.object,scope:e}):!!((e=>e&&e.raw)(t)||(({name:e})=>Qr.includes(e))(t)||(({name:e})=>Yr.includes(e))(t)||(e=>Xr.NewExpression.check(e))(t)||function(e,t){return((n=!1)=>(Hr.visit(t,{visitIdentifier(t){e.lookup(ia(t.node))&&(n=!0),this.abort()}}),n))()}(e,t))}function di(e){return!(!e[He]&&!Ti(e))}function fi(e){return\"slot\"===e.name}function mi(e){return!!e[$e]}function yi(e){return e.type===Oe.TAG}function gi(e){return e.type===Oe.TEXT}function bi(e){return e.isRoot}const vi=(()=>{const e=/^on/;return t=>e.test(t.name)})();function xi(e){return!!(e.expressions||Ia(e).some((e=>xi(e)))||e.nodes&&e.nodes.some((e=>gi(e)&&xi(e))))}const Si=ui(Boolean,ki),Ei=ui(Boolean,Pi),Ti=ui(Boolean,Ai);function _i(e,t){return t.attributes&&t.attributes.find((t=>ia(t)===e))}function ki(e){return _i(qe,e)}function Pi(e){return _i(Ue,e)}function wi(e){return _i(ze,e)}function Ai(e){return _i(Je,e)}function Ci(){return Kr.literal(null)}function Ii(e,t){const n=Kr.property(\"init\",Kr.identifier(e),t,!1);return n.sho,n}ui(Boolean,wi);const Ni=/\\r\\n?|\\n/g;function Oi(e,t,n){const{column:r,line:i}=function(e,t){const n=function(e){return e.split(Ni)}(e.slice(0,t));return{line:n.length,column:n[n.length-1].length}}(t,n.start);return`${\"\\n\".repeat(i-1)}${\" \".repeat(r+1)}${e}`}const Di=e=>e.filter(((e,t,n)=>n.indexOf(e)===t)),Li=[\"circle\",\"ellipse\",\"line\",\"path\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"use\"],ji=[\"button\",\"data\",\"input\",\"select\",\"li\",\"meter\",\"option\",\"output\",\"progress\",\"textarea\",\"param\"],Mi=Di([\"a\",\"altGlyph\",\"altGlyphDef\",\"altGlyphItem\",\"animate\",\"animateColor\",\"animateMotion\",\"animateTransform\",\"animation\",\"audio\",\"canvas\",\"clipPath\",\"color-profile\",\"cursor\",\"defs\",\"desc\",\"discard\",\"feBlend\",\"feColorMatrix\",\"feComponentTransfer\",\"feComposite\",\"feConvolveMatrix\",\"feDiffuseLighting\",\"feDisplacementMap\",\"feDistantLight\",\"feDropShadow\",\"feFlood\",\"feFuncA\",\"feFuncB\",\"feFuncG\",\"feFuncR\",\"feGaussianBlur\",\"feImage\",\"feMerge\",\"feMergeNode\",\"feMorphology\",\"feOffset\",\"fePointLight\",\"feSpecularLighting\",\"feSpotLight\",\"feTile\",\"feTurbulence\",\"filter\",\"font\",\"font-face\",\"font-face-format\",\"font-face-name\",\"font-face-src\",\"font-face-uri\",\"foreignObject\",\"g\",\"glyph\",\"glyphRef\",\"handler\",\"hatch\",\"hatchpath\",\"hkern\",\"iframe\",\"image\",\"linearGradient\",\"listener\",\"marker\",\"mask\",\"mesh\",\"meshgradient\",\"meshpatch\",\"meshrow\",\"metadata\",\"missing-glyph\",\"mpath\",\"pattern\",\"prefetch\",\"radialGradient\",\"script\",\"set\",\"solidColor\",\"solidcolor\",\"style\",\"svg\",\"switch\",\"symbol\",\"tbreak\",\"text\",\"textArea\",\"textPath\",\"title\",\"tref\",\"tspan\",\"unknown\",\"video\",\"view\",\"vkern\"].concat(Li)).sort(),Bi=[\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"menuitem\",\"meta\",\"param\",\"source\",\"track\",\"wbr\"];function Fi(e){return e.join(\"|\")}function Vi(...e){return RegExp(`^/?(?:${Fi(e.map(Fi))})$`,\"i\")}Vi(Di([\"a\",\"abbr\",\"address\",\"article\",\"aside\",\"audio\",\"b\",\"bdi\",\"bdo\",\"blockquote\",\"body\",\"canvas\",\"caption\",\"cite\",\"code\",\"colgroup\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"html\",\"i\",\"iframe\",\"ins\",\"kbd\",\"label\",\"legend\",\"main\",\"map\",\"mark\",\"math\",\"menu\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"p\",\"picture\",\"pre\",\"q\",\"rb\",\"rp\",\"rt\",\"rtc\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"slot\",\"small\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"svg\",\"table\",\"tbody\",\"td\",\"template\",\"tfoot\",\"th\",\"thead\",\"time\",\"title\",\"tr\",\"u\",\"ul\",\"var\",\"video\"].concat(Bi).concat(ji)).sort()),Vi(Mi),Vi(Bi),Vi(Li);const Ri=Vi(ji);Vi([\"disabled\",\"visible\",\"checked\",\"readonly\",\"required\",\"allowfullscreen\",\"autofocus\",\"autoplay\",\"compact\",\"controls\",\"default\",\"formnovalidate\",\"hidden\",\"ismap\",\"itemscope\",\"loop\",\"multiple\",\"muted\",\"noresize\",\"noshade\",\"novalidate\",\"nowrap\",\"open\",\"reversed\",\"seamless\",\"selected\",\"sortable\",\"truespeed\",\"typemustmatch\"]);var qi={quot:'\"',amp:\"&\",apos:\"'\",lt:\"<\",gt:\">\",nbsp:\" \",iexcl:\"¡\",cent:\"¢\",pound:\"£\",curren:\"¤\",yen:\"¥\",brvbar:\"¦\",sect:\"§\",uml:\"¨\",copy:\"©\",ordf:\"ª\",laquo:\"«\",not:\"¬\",shy:\"­\",reg:\"®\",macr:\"¯\",deg:\"°\",plusmn:\"±\",sup2:\"²\",sup3:\"³\",acute:\"´\",micro:\"µ\",para:\"¶\",middot:\"·\",cedil:\"¸\",sup1:\"¹\",ordm:\"º\",raquo:\"»\",frac14:\"¼\",frac12:\"½\",frac34:\"¾\",iquest:\"¿\",Agrave:\"À\",Aacute:\"Á\",Acirc:\"Â\",Atilde:\"Ã\",Auml:\"Ä\",Aring:\"Å\",AElig:\"Æ\",Ccedil:\"Ç\",Egrave:\"È\",Eacute:\"É\",Ecirc:\"Ê\",Euml:\"Ë\",Igrave:\"Ì\",Iacute:\"Í\",Icirc:\"Î\",Iuml:\"Ï\",ETH:\"Ð\",Ntilde:\"Ñ\",Ograve:\"Ò\",Oacute:\"Ó\",Ocirc:\"Ô\",Otilde:\"Õ\",Ouml:\"Ö\",times:\"×\",Oslash:\"Ø\",Ugrave:\"Ù\",Uacute:\"Ú\",Ucirc:\"Û\",Uuml:\"Ü\",Yacute:\"Ý\",THORN:\"Þ\",szlig:\"ß\",agrave:\"à\",aacute:\"á\",acirc:\"â\",atilde:\"ã\",auml:\"ä\",aring:\"å\",aelig:\"æ\",ccedil:\"ç\",egrave:\"è\",eacute:\"é\",ecirc:\"ê\",euml:\"ë\",igrave:\"ì\",iacute:\"í\",icirc:\"î\",iuml:\"ï\",eth:\"ð\",ntilde:\"ñ\",ograve:\"ò\",oacute:\"ó\",ocirc:\"ô\",otilde:\"õ\",ouml:\"ö\",divide:\"÷\",oslash:\"ø\",ugrave:\"ù\",uacute:\"ú\",ucirc:\"û\",uuml:\"ü\",yacute:\"ý\",thorn:\"þ\",yuml:\"ÿ\",OElig:\"Œ\",oelig:\"œ\",Scaron:\"Š\",scaron:\"š\",Yuml:\"Ÿ\",fnof:\"ƒ\",circ:\"ˆ\",tilde:\"˜\",Alpha:\"Α\",Beta:\"Β\",Gamma:\"Γ\",Delta:\"Δ\",Epsilon:\"Ε\",Zeta:\"Ζ\",Eta:\"Η\",Theta:\"Θ\",Iota:\"Ι\",Kappa:\"Κ\",Lambda:\"Λ\",Mu:\"Μ\",Nu:\"Ν\",Xi:\"Ξ\",Omicron:\"Ο\",Pi:\"Π\",Rho:\"Ρ\",Sigma:\"Σ\",Tau:\"Τ\",Upsilon:\"Υ\",Phi:\"Φ\",Chi:\"Χ\",Psi:\"Ψ\",Omega:\"Ω\",alpha:\"α\",beta:\"β\",gamma:\"γ\",delta:\"δ\",epsilon:\"ε\",zeta:\"ζ\",eta:\"η\",theta:\"θ\",iota:\"ι\",kappa:\"κ\",lambda:\"λ\",mu:\"μ\",nu:\"ν\",xi:\"ξ\",omicron:\"ο\",pi:\"π\",rho:\"ρ\",sigmaf:\"ς\",sigma:\"σ\",tau:\"τ\",upsilon:\"υ\",phi:\"φ\",chi:\"χ\",psi:\"ψ\",omega:\"ω\",thetasym:\"ϑ\",upsih:\"ϒ\",piv:\"ϖ\",ensp:\" \",emsp:\" \",thinsp:\" \",zwnj:\"‌\",zwj:\"‍\",lrm:\"‎\",rlm:\"‏\",ndash:\"–\",mdash:\"—\",lsquo:\"‘\",rsquo:\"’\",sbquo:\"‚\",ldquo:\"“\",rdquo:\"”\",bdquo:\"„\",dagger:\"†\",Dagger:\"‡\",bull:\"•\",hellip:\"…\",permil:\"‰\",prime:\"′\",Prime:\"″\",lsaquo:\"‹\",rsaquo:\"›\",oline:\"‾\",frasl:\"⁄\",euro:\"€\",image:\"ℑ\",weierp:\"℘\",real:\"ℜ\",trade:\"™\",alefsym:\"ℵ\",larr:\"←\",uarr:\"↑\",rarr:\"→\",darr:\"↓\",harr:\"↔\",crarr:\"↵\",lArr:\"⇐\",uArr:\"⇑\",rArr:\"⇒\",dArr:\"⇓\",hArr:\"⇔\",forall:\"∀\",part:\"∂\",exist:\"∃\",empty:\"∅\",nabla:\"∇\",isin:\"∈\",notin:\"∉\",ni:\"∋\",prod:\"∏\",sum:\"∑\",minus:\"−\",lowast:\"∗\",radic:\"√\",prop:\"∝\",infin:\"∞\",ang:\"∠\",and:\"∧\",or:\"∨\",cap:\"∩\",cup:\"∪\",int:\"∫\",there4:\"∴\",sim:\"∼\",cong:\"≅\",asymp:\"≈\",ne:\"≠\",equiv:\"≡\",le:\"≤\",ge:\"≥\",sub:\"⊂\",sup:\"⊃\",nsub:\"⊄\",sube:\"⊆\",supe:\"⊇\",oplus:\"⊕\",otimes:\"⊗\",perp:\"⊥\",sdot:\"⋅\",lceil:\"⌈\",rceil:\"⌉\",lfloor:\"⌊\",rfloor:\"⌋\",lang:\"〈\",rang:\"〉\",loz:\"◊\",spades:\"♠\",clubs:\"♣\",hearts:\"♥\",diams:\"♦\"};const Ui=/&(\\S+);/g,zi=/^[\\da-fA-F]+$/,Wi=/^\\d+$/;function Gi(e){return e.replace(Ui,((e,t)=>{const[n,r]=t;return\"#\"===n?\"x\"===r?function(e){const t=e.substr(2);return zi.test(t)?String.fromCodePoint(parseInt(t,16)):e}(t):function(e){const t=e.substr(1);return Wi.test(t)?String.fromCodePoint(parseInt(t,10)):e}(t):qi[t]||t}))}function Ji(e,t){return e.replace(RegExp(\"\\\\\\\\\"+t,\"gm\"),t)}function $i(e,t,n){if(1===e.parts.length)return ga(e.expressions[0],t,n);const r=function(e,t){return e.expressions.reduce(((n,r,i)=>{const a=i?e.expressions[i-1].end:e.start,s=Gi(t.substring(a,r.start));return n.push(0===i?function(e){return(e.trimStart||e.trimLeft).apply(e)}(s):s),i===e.expressions.length-1&&n.push(Gi(function(e){return(e.trimEnd||e.trimRight).apply(e)}(t.substring(r.end,e.end)))),n}),[]).filter((e=>!(0===e.trim().indexOf(\"<!\")))).map((t=>e.unescape?Ji(t,e.unescape):t))}(e,n),i=r.reduce(((r,i,a)=>{const s=e.expressions[a];return[...r,Kr.literal(i),s?ga(s,t,n):Ci()]}),[]).filter((e=>!ei(e)||e.value));return La(i)}function Hi(e,t,n,r,i){switch(!0){case gi(e):return function(e,t,n,r){return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(Le),Kr.identifier(\"TEXT\"),!1)),Ii(\"childNodeIndex\",Kr.literal(r)),Ii(Fe,ma($i(e,t,n)))])}(e,t,n,r);case\"value\"===e.name&&(a=i.name,Ri.test(a))&&!(\"progress\"===i.name):return function(e,t,n){return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(Le),Kr.identifier(\"VALUE\"),!1)),Ii(Fe,Fa(e,t,n))])}(e,t,n);case vi(e):return function(e,t,n){return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(Le),Kr.identifier(\"EVENT\"),!1)),Ii(Ve,Kr.literal(e.name)),Ii(Fe,Fa(e,t,n))])}(e,t,n);default:return function(e,t,n,r){const i=e[Xe];return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(Le),Kr.identifier(\"ATTRIBUTE\"),!1)),Ii(\"isBoolean\",Kr.literal(!(\"hidden\"!==e.name&&(t[He]||(a=t,a.isRoot&&!a.isNestedRoot)||i||!e[Ke])))),Ii(Ve,i?Ci():Kr.literal(e.name)),Ii(Fe,Fa(e,n,r))]);var a}(e,i,t,n)}var a}function Ki(e,t,n){return(r=e,Ia(r).filter(xi)).map((r=>Hi(r,t,n,0,e)));var r}var Xi,Yi={},Qi={exports:{}};function Zi(){return Xi||(Xi=1,function(e,t){!function(e){var t=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239],n=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191],r=\"ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\",i={3:\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",5:\"class enum extends super const export import\",6:\"enum\",strict:\"implements interface let package private protected public static yield\",strictBind:\"eval arguments\"},a=\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\",s={5:a,\"5module\":a+\" export import\",6:a+\" const class extends export import super\"},o=/^in(stanceof)?$/,l=RegExp(\"[\"+r+\"]\"),c=RegExp(\"[\"+r+\"‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･]\");function u(e,t){for(var n=65536,r=0;r<t.length;r+=2){if((n+=t[r])>e)return!1;if((n+=t[r+1])>=e)return!0}return!1}function p(e,t){return e<65?36===e:e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&l.test(String.fromCharCode(e)):!1!==t&&u(e,n)))}function h(e,r){return e<48?36===e:e<58||!(e<65)&&(e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&c.test(String.fromCharCode(e)):!1!==r&&(u(e,n)||u(e,t)))))}var d=function(e,t){void 0===t&&(t={}),this.label=e,this.keyword=t.keyword,this.beforeExpr=!!t.beforeExpr,this.startsExpr=!!t.startsExpr,this.isLoop=!!t.isLoop,this.isAssign=!!t.isAssign,this.prefix=!!t.prefix,this.postfix=!!t.postfix,this.binop=t.binop||null,this.updateContext=null};function f(e,t){return new d(e,{beforeExpr:!0,binop:t})}var m={beforeExpr:!0},y={startsExpr:!0},g={};function b(e,t){return void 0===t&&(t={}),t.keyword=e,g[e]=new d(e,t)}var v={num:new d(\"num\",y),regexp:new d(\"regexp\",y),string:new d(\"string\",y),name:new d(\"name\",y),privateId:new d(\"privateId\",y),eof:new d(\"eof\"),bracketL:new d(\"[\",{beforeExpr:!0,startsExpr:!0}),bracketR:new d(\"]\"),braceL:new d(\"{\",{beforeExpr:!0,startsExpr:!0}),braceR:new d(\"}\"),parenL:new d(\"(\",{beforeExpr:!0,startsExpr:!0}),parenR:new d(\")\"),comma:new d(\",\",m),semi:new d(\";\",m),colon:new d(\":\",m),dot:new d(\".\"),question:new d(\"?\",m),questionDot:new d(\"?.\"),arrow:new d(\"=>\",m),template:new d(\"template\"),invalidTemplate:new d(\"invalidTemplate\"),ellipsis:new d(\"...\",m),backQuote:new d(\"`\",y),dollarBraceL:new d(\"${\",{beforeExpr:!0,startsExpr:!0}),eq:new d(\"=\",{beforeExpr:!0,isAssign:!0}),assign:new d(\"_=\",{beforeExpr:!0,isAssign:!0}),incDec:new d(\"++/--\",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new d(\"!/~\",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:f(\"||\",1),logicalAND:f(\"&&\",2),bitwiseOR:f(\"|\",3),bitwiseXOR:f(\"^\",4),bitwiseAND:f(\"&\",5),equality:f(\"==/!=/===/!==\",6),relational:f(\"</>/<=/>=\",7),bitShift:f(\"<</>>/>>>\",8),plusMin:new d(\"+/-\",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:f(\"%\",10),star:f(\"*\",10),slash:f(\"/\",10),starstar:new d(\"**\",{beforeExpr:!0}),coalesce:f(\"??\",1),_break:b(\"break\"),_case:b(\"case\",m),_catch:b(\"catch\"),_continue:b(\"continue\"),_debugger:b(\"debugger\"),_default:b(\"default\",m),_do:b(\"do\",{isLoop:!0,beforeExpr:!0}),_else:b(\"else\",m),_finally:b(\"finally\"),_for:b(\"for\",{isLoop:!0}),_function:b(\"function\",y),_if:b(\"if\"),_return:b(\"return\",m),_switch:b(\"switch\"),_throw:b(\"throw\",m),_try:b(\"try\"),_var:b(\"var\"),_const:b(\"const\"),_while:b(\"while\",{isLoop:!0}),_with:b(\"with\"),_new:b(\"new\",{beforeExpr:!0,startsExpr:!0}),_this:b(\"this\",y),_super:b(\"super\",y),_class:b(\"class\",y),_extends:b(\"extends\",m),_export:b(\"export\"),_import:b(\"import\",y),_null:b(\"null\",y),_true:b(\"true\",y),_false:b(\"false\",y),_in:b(\"in\",{beforeExpr:!0,binop:7}),_instanceof:b(\"instanceof\",{beforeExpr:!0,binop:7}),_typeof:b(\"typeof\",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:b(\"void\",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:b(\"delete\",{beforeExpr:!0,prefix:!0,startsExpr:!0})},x=/\\r\\n?|\\n|\\u2028|\\u2029/,S=RegExp(x.source,\"g\");function E(e){return 10===e||13===e||8232===e||8233===e}function T(e,t,n){void 0===n&&(n=e.length);for(var r=t;r<n;r++){var i=e.charCodeAt(r);if(E(i))return r<n-1&&13===i&&10===e.charCodeAt(r+1)?r+2:r+1}return-1}var _=/[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,k=/(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g,P=Object.prototype,w=P.hasOwnProperty,A=P.toString,C=Object.hasOwn||function(e,t){return w.call(e,t)},I=Array.isArray||function(e){return\"[object Array]\"===A.call(e)},N=Object.create(null);function O(e){return N[e]||(N[e]=RegExp(\"^(?:\"+e.replace(/ /g,\"|\")+\")$\"))}function D(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+((e-=65536)>>10),56320+(1023&e))}var L=/(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/,j=function(e,t){this.line=e,this.column=t};j.prototype.offset=function(e){return new j(this.line,this.column+e)};var M=function(e,t,n){this.start=t,this.end=n,null!==e.sourceFile&&(this.source=e.sourceFile)};function B(e,t){for(var n=1,r=0;;){var i=T(e,r,t);if(i<0)return new j(n,t-r);++n,r=i}}var F={ecmaVersion:null,sourceType:\"script\",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:null,allowSuperOutsideMethod:null,allowHashBang:!1,checkPrivateFields:!0,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1},V=!1;function R(e,t){return 2|(e?4:0)|(t?8:0)}var q=function(e,t,n){this.options=e=function(e){var t={};for(var n in F)t[n]=e&&C(e,n)?e[n]:F[n];if(\"latest\"===t.ecmaVersion?t.ecmaVersion=1e8:null==t.ecmaVersion?(!V&&\"object\"==typeof console&&console.warn&&(V=!0,console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\")),t.ecmaVersion=11):t.ecmaVersion>=2015&&(t.ecmaVersion-=2009),null==t.allowReserved&&(t.allowReserved=t.ecmaVersion<5),e&&null!=e.allowHashBang||(t.allowHashBang=t.ecmaVersion>=14),I(t.onToken)){var r=t.onToken;t.onToken=function(e){return r.push(e)}}return I(t.onComment)&&(t.onComment=function(e,t){return function(n,r,i,a,s,o){var l={type:n?\"Block\":\"Line\",value:r,start:i,end:a};e.locations&&(l.loc=new M(this,s,o)),e.ranges&&(l.range=[i,a]),t.push(l)}}(t,t.onComment)),t}(e),this.sourceFile=e.sourceFile,this.keywords=O(s[e.ecmaVersion>=6?6:\"module\"===e.sourceType?\"5module\":5]);var r=\"\";!0!==e.allowReserved&&(r=i[e.ecmaVersion>=6?6:5===e.ecmaVersion?5:3],\"module\"===e.sourceType&&(r+=\" await\")),this.reservedWords=O(r);var a=(r?r+\" \":\"\")+i.strict;this.reservedWordsStrict=O(a),this.reservedWordsStrictBind=O(a+\" \"+i.strictBind),this.input=t+\"\",this.containsEsc=!1,n?(this.pos=n,this.lineStart=this.input.lastIndexOf(\"\\n\",n-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(x).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=v.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule=\"module\"===e.sourceType,this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.potentialArrowInForAwait=!1,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports=Object.create(null),0===this.pos&&e.allowHashBang&&\"#!\"===this.input.slice(0,2)&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(1),this.regexpState=null,this.privateNameStack=[]},U={inFunction:{configurable:!0},inGenerator:{configurable:!0},inAsync:{configurable:!0},canAwait:{configurable:!0},allowSuper:{configurable:!0},allowDirectSuper:{configurable:!0},treatFunctionsAsVar:{configurable:!0},allowNewDotTarget:{configurable:!0},inClassStaticBlock:{configurable:!0}};q.prototype.parse=function(){var e=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(e)},U.inFunction.get=function(){return(2&this.currentVarScope().flags)>0},U.inGenerator.get=function(){return(8&this.currentVarScope().flags)>0&&!this.currentVarScope().inClassFieldInit},U.inAsync.get=function(){return(4&this.currentVarScope().flags)>0&&!this.currentVarScope().inClassFieldInit},U.canAwait.get=function(){for(var e=this.scopeStack.length-1;e>=0;e--){var t=this.scopeStack[e];if(t.inClassFieldInit||256&t.flags)return!1;if(2&t.flags)return(4&t.flags)>0}return this.inModule&&this.options.ecmaVersion>=13||this.options.allowAwaitOutsideFunction},U.allowSuper.get=function(){var e=this.currentThisScope(),t=e.flags,n=e.inClassFieldInit;return(64&t)>0||n||this.options.allowSuperOutsideMethod},U.allowDirectSuper.get=function(){return(128&this.currentThisScope().flags)>0},U.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())},U.allowNewDotTarget.get=function(){var e=this.currentThisScope(),t=e.flags,n=e.inClassFieldInit;return(258&t)>0||n},U.inClassStaticBlock.get=function(){return(256&this.currentVarScope().flags)>0},q.extend=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var n=this,r=0;r<e.length;r++)n=e[r](n);return n},q.parse=function(e,t){return new this(t,e).parse()},q.parseExpressionAt=function(e,t,n){var r=new this(n,e,t);return r.nextToken(),r.parseExpression()},q.tokenizer=function(e,t){return new this(t,e)},Object.defineProperties(q.prototype,U);var z=q.prototype,W=/^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;z.strictDirective=function(e){if(this.options.ecmaVersion<5)return!1;for(;;){k.lastIndex=e,e+=k.exec(this.input)[0].length;var t=W.exec(this.input.slice(e));if(!t)return!1;if(\"use strict\"===(t[1]||t[2])){k.lastIndex=e+t[0].length;var n=k.exec(this.input),r=n.index+n[0].length,i=this.input.charAt(r);return\";\"===i||\"}\"===i||x.test(n[0])&&!(/[(`.[+\\-/*%<>=,?^&]/.test(i)||\"!\"===i&&\"=\"===this.input.charAt(r+1))}e+=t[0].length,k.lastIndex=e,e+=k.exec(this.input)[0].length,\";\"===this.input[e]&&e++}},z.eat=function(e){return this.type===e&&(this.next(),!0)},z.isContextual=function(e){return this.type===v.name&&this.value===e&&!this.containsEsc},z.eatContextual=function(e){return!!this.isContextual(e)&&(this.next(),!0)},z.expectContextual=function(e){this.eatContextual(e)||this.unexpected()},z.canInsertSemicolon=function(){return this.type===v.eof||this.type===v.braceR||x.test(this.input.slice(this.lastTokEnd,this.start))},z.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0},z.semicolon=function(){this.eat(v.semi)||this.insertSemicolon()||this.unexpected()},z.afterTrailingComma=function(e,t){if(this.type===e)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),t||this.next(),!0},z.expect=function(e){this.eat(e)||this.unexpected()},z.unexpected=function(e){this.raise(null!=e?e:this.start,\"Unexpected token\")};var G=function(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1};z.checkPatternErrors=function(e,t){if(e){e.trailingComma>-1&&this.raiseRecoverable(e.trailingComma,\"Comma is not permitted after the rest element\");var n=t?e.parenthesizedAssign:e.parenthesizedBind;n>-1&&this.raiseRecoverable(n,t?\"Assigning to rvalue\":\"Parenthesized pattern\")}},z.checkExpressionErrors=function(e,t){if(!e)return!1;var n=e.shorthandAssign,r=e.doubleProto;if(!t)return n>=0||r>=0;n>=0&&this.raise(n,\"Shorthand property assignments are valid only in destructuring patterns\"),r>=0&&this.raiseRecoverable(r,\"Redefinition of __proto__ property\")},z.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,\"Yield expression cannot be a default value\"),this.awaitPos&&this.raise(this.awaitPos,\"Await expression cannot be a default value\")},z.isSimpleAssignTarget=function(e){return\"ParenthesizedExpression\"===e.type?this.isSimpleAssignTarget(e.expression):\"Identifier\"===e.type||\"MemberExpression\"===e.type};var J=q.prototype;J.parseTopLevel=function(e){var t=Object.create(null);for(e.body||(e.body=[]);this.type!==v.eof;){var n=this.parseStatement(null,!0,t);e.body.push(n)}if(this.inModule)for(var r=0,i=Object.keys(this.undefinedExports);r<i.length;r+=1){var a=i[r];this.raiseRecoverable(this.undefinedExports[a].start,\"Export '\"+a+\"' is not defined\")}return this.adaptDirectivePrologue(e.body),this.next(),e.sourceType=this.options.sourceType,this.finishNode(e,\"Program\")};var $={kind:\"loop\"},H={kind:\"switch\"};J.isLet=function(e){if(this.options.ecmaVersion<6||!this.isContextual(\"let\"))return!1;k.lastIndex=this.pos;var t=k.exec(this.input),n=this.pos+t[0].length,r=this.input.charCodeAt(n);if(91===r||92===r)return!0;if(e)return!1;if(123===r||r>55295&&r<56320)return!0;if(p(r,!0)){for(var i=n+1;h(r=this.input.charCodeAt(i),!0);)++i;if(92===r||r>55295&&r<56320)return!0;var a=this.input.slice(n,i);if(!o.test(a))return!0}return!1},J.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual(\"async\"))return!1;k.lastIndex=this.pos;var e,t=k.exec(this.input),n=this.pos+t[0].length;return!(x.test(this.input.slice(this.pos,n))||\"function\"!==this.input.slice(n,n+8)||n+8!==this.input.length&&(h(e=this.input.charCodeAt(n+8))||e>55295&&e<56320))},J.parseStatement=function(e,t,n){var r,i=this.type,a=this.startNode();switch(this.isLet(e)&&(i=v._var,r=\"let\"),i){case v._break:case v._continue:return this.parseBreakContinueStatement(a,i.keyword);case v._debugger:return this.parseDebuggerStatement(a);case v._do:return this.parseDoStatement(a);case v._for:return this.parseForStatement(a);case v._function:return e&&(this.strict||\"if\"!==e&&\"label\"!==e)&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(a,!1,!e);case v._class:return e&&this.unexpected(),this.parseClass(a,!0);case v._if:return this.parseIfStatement(a);case v._return:return this.parseReturnStatement(a);case v._switch:return this.parseSwitchStatement(a);case v._throw:return this.parseThrowStatement(a);case v._try:return this.parseTryStatement(a);case v._const:case v._var:return r=r||this.value,e&&\"var\"!==r&&this.unexpected(),this.parseVarStatement(a,r);case v._while:return this.parseWhileStatement(a);case v._with:return this.parseWithStatement(a);case v.braceL:return this.parseBlock(!0,a);case v.semi:return this.parseEmptyStatement(a);case v._export:case v._import:if(this.options.ecmaVersion>10&&i===v._import){k.lastIndex=this.pos;var s=k.exec(this.input),o=this.pos+s[0].length,l=this.input.charCodeAt(o);if(40===l||46===l)return this.parseExpressionStatement(a,this.parseExpression())}return this.options.allowImportExportEverywhere||(t||this.raise(this.start,\"'import' and 'export' may only appear at the top level\"),this.inModule||this.raise(this.start,\"'import' and 'export' may appear only with 'sourceType: module'\")),i===v._import?this.parseImport(a):this.parseExport(a,n);default:if(this.isAsyncFunction())return e&&this.unexpected(),this.next(),this.parseFunctionStatement(a,!0,!e);var c=this.value,u=this.parseExpression();return i===v.name&&\"Identifier\"===u.type&&this.eat(v.colon)?this.parseLabeledStatement(a,c,u,e):this.parseExpressionStatement(a,u)}},J.parseBreakContinueStatement=function(e,t){var n=\"break\"===t;this.next(),this.eat(v.semi)||this.insertSemicolon()?e.label=null:this.type!==v.name?this.unexpected():(e.label=this.parseIdent(),this.semicolon());for(var r=0;r<this.labels.length;++r){var i=this.labels[r];if(null==e.label||i.name===e.label.name){if(null!=i.kind&&(n||\"loop\"===i.kind))break;if(e.label&&n)break}}return r===this.labels.length&&this.raise(e.start,\"Unsyntactic \"+t),this.finishNode(e,n?\"BreakStatement\":\"ContinueStatement\")},J.parseDebuggerStatement=function(e){return this.next(),this.semicolon(),this.finishNode(e,\"DebuggerStatement\")},J.parseDoStatement=function(e){return this.next(),this.labels.push($),e.body=this.parseStatement(\"do\"),this.labels.pop(),this.expect(v._while),e.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(v.semi):this.semicolon(),this.finishNode(e,\"DoWhileStatement\")},J.parseForStatement=function(e){this.next();var t=this.options.ecmaVersion>=9&&this.canAwait&&this.eatContextual(\"await\")?this.lastTokStart:-1;if(this.labels.push($),this.enterScope(0),this.expect(v.parenL),this.type===v.semi)return t>-1&&this.unexpected(t),this.parseFor(e,null);var n=this.isLet();if(this.type===v._var||this.type===v._const||n){var r=this.startNode(),i=n?\"let\":this.value;return this.next(),this.parseVar(r,!0,i),this.finishNode(r,\"VariableDeclaration\"),(this.type===v._in||this.options.ecmaVersion>=6&&this.isContextual(\"of\"))&&1===r.declarations.length?(this.options.ecmaVersion>=9&&(this.type===v._in?t>-1&&this.unexpected(t):e.await=t>-1),this.parseForIn(e,r)):(t>-1&&this.unexpected(t),this.parseFor(e,r))}var a=this.isContextual(\"let\"),s=!1,o=this.containsEsc,l=new G,c=this.start,u=t>-1?this.parseExprSubscripts(l,\"await\"):this.parseExpression(!0,l);return this.type===v._in||(s=this.options.ecmaVersion>=6&&this.isContextual(\"of\"))?(t>-1?(this.type===v._in&&this.unexpected(t),e.await=!0):s&&this.options.ecmaVersion>=8&&(u.start!==c||o||\"Identifier\"!==u.type||\"async\"!==u.name?this.options.ecmaVersion>=9&&(e.await=!1):this.unexpected()),a&&s&&this.raise(u.start,\"The left-hand side of a for-of loop may not start with 'let'.\"),this.toAssignable(u,!1,l),this.checkLValPattern(u),this.parseForIn(e,u)):(this.checkExpressionErrors(l,!0),t>-1&&this.unexpected(t),this.parseFor(e,u))},J.parseFunctionStatement=function(e,t,n){return this.next(),this.parseFunction(e,X|(n?0:Y),!1,t)},J.parseIfStatement=function(e){return this.next(),e.test=this.parseParenExpression(),e.consequent=this.parseStatement(\"if\"),e.alternate=this.eat(v._else)?this.parseStatement(\"if\"):null,this.finishNode(e,\"IfStatement\")},J.parseReturnStatement=function(e){return this.inFunction||this.options.allowReturnOutsideFunction||this.raise(this.start,\"'return' outside of function\"),this.next(),this.eat(v.semi)||this.insertSemicolon()?e.argument=null:(e.argument=this.parseExpression(),this.semicolon()),this.finishNode(e,\"ReturnStatement\")},J.parseSwitchStatement=function(e){var t;this.next(),e.discriminant=this.parseParenExpression(),e.cases=[],this.expect(v.braceL),this.labels.push(H),this.enterScope(0);for(var n=!1;this.type!==v.braceR;)if(this.type===v._case||this.type===v._default){var r=this.type===v._case;t&&this.finishNode(t,\"SwitchCase\"),e.cases.push(t=this.startNode()),t.consequent=[],this.next(),r?t.test=this.parseExpression():(n&&this.raiseRecoverable(this.lastTokStart,\"Multiple default clauses\"),n=!0,t.test=null),this.expect(v.colon)}else t||this.unexpected(),t.consequent.push(this.parseStatement(null));return this.exitScope(),t&&this.finishNode(t,\"SwitchCase\"),this.next(),this.labels.pop(),this.finishNode(e,\"SwitchStatement\")},J.parseThrowStatement=function(e){return this.next(),x.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,\"Illegal newline after throw\"),e.argument=this.parseExpression(),this.semicolon(),this.finishNode(e,\"ThrowStatement\")};var K=[];J.parseCatchClauseParam=function(){var e=this.parseBindingAtom(),t=\"Identifier\"===e.type;return this.enterScope(t?32:0),this.checkLValPattern(e,t?4:2),this.expect(v.parenR),e},J.parseTryStatement=function(e){if(this.next(),e.block=this.parseBlock(),e.handler=null,this.type===v._catch){var t=this.startNode();this.next(),this.eat(v.parenL)?t.param=this.parseCatchClauseParam():(this.options.ecmaVersion<10&&this.unexpected(),t.param=null,this.enterScope(0)),t.body=this.parseBlock(!1),this.exitScope(),e.handler=this.finishNode(t,\"CatchClause\")}return e.finalizer=this.eat(v._finally)?this.parseBlock():null,e.handler||e.finalizer||this.raise(e.start,\"Missing catch or finally clause\"),this.finishNode(e,\"TryStatement\")},J.parseVarStatement=function(e,t,n){return this.next(),this.parseVar(e,!1,t,n),this.semicolon(),this.finishNode(e,\"VariableDeclaration\")},J.parseWhileStatement=function(e){return this.next(),e.test=this.parseParenExpression(),this.labels.push($),e.body=this.parseStatement(\"while\"),this.labels.pop(),this.finishNode(e,\"WhileStatement\")},J.parseWithStatement=function(e){return this.strict&&this.raise(this.start,\"'with' in strict mode\"),this.next(),e.object=this.parseParenExpression(),e.body=this.parseStatement(\"with\"),this.finishNode(e,\"WithStatement\")},J.parseEmptyStatement=function(e){return this.next(),this.finishNode(e,\"EmptyStatement\")},J.parseLabeledStatement=function(e,t,n,r){for(var i=0,a=this.labels;i<a.length;i+=1)a[i].name===t&&this.raise(n.start,\"Label '\"+t+\"' is already declared\");for(var s=this.type.isLoop?\"loop\":this.type===v._switch?\"switch\":null,o=this.labels.length-1;o>=0;o--){var l=this.labels[o];if(l.statementStart!==e.start)break;l.statementStart=this.start,l.kind=s}return this.labels.push({name:t,kind:s,statementStart:this.start}),e.body=this.parseStatement(r?-1===r.indexOf(\"label\")?r+\"label\":r:\"label\"),this.labels.pop(),e.label=n,this.finishNode(e,\"LabeledStatement\")},J.parseExpressionStatement=function(e,t){return e.expression=t,this.semicolon(),this.finishNode(e,\"ExpressionStatement\")},J.parseBlock=function(e,t,n){for(void 0===e&&(e=!0),void 0===t&&(t=this.startNode()),t.body=[],this.expect(v.braceL),e&&this.enterScope(0);this.type!==v.braceR;){var r=this.parseStatement(null);t.body.push(r)}return n&&(this.strict=!1),this.next(),e&&this.exitScope(),this.finishNode(t,\"BlockStatement\")},J.parseFor=function(e,t){return e.init=t,this.expect(v.semi),e.test=this.type===v.semi?null:this.parseExpression(),this.expect(v.semi),e.update=this.type===v.parenR?null:this.parseExpression(),this.expect(v.parenR),e.body=this.parseStatement(\"for\"),this.exitScope(),this.labels.pop(),this.finishNode(e,\"ForStatement\")},J.parseForIn=function(e,t){var n=this.type===v._in;return this.next(),\"VariableDeclaration\"===t.type&&null!=t.declarations[0].init&&(!n||this.options.ecmaVersion<8||this.strict||\"var\"!==t.kind||\"Identifier\"!==t.declarations[0].id.type)&&this.raise(t.start,(n?\"for-in\":\"for-of\")+\" loop variable declaration may not have an initializer\"),e.left=t,e.right=n?this.parseExpression():this.parseMaybeAssign(),this.expect(v.parenR),e.body=this.parseStatement(\"for\"),this.exitScope(),this.labels.pop(),this.finishNode(e,n?\"ForInStatement\":\"ForOfStatement\")},J.parseVar=function(e,t,n,r){for(e.declarations=[],e.kind=n;;){var i=this.startNode();if(this.parseVarId(i,n),this.eat(v.eq)?i.init=this.parseMaybeAssign(t):r||\"const\"!==n||this.type===v._in||this.options.ecmaVersion>=6&&this.isContextual(\"of\")?r||\"Identifier\"===i.id.type||t&&(this.type===v._in||this.isContextual(\"of\"))?i.init=null:this.raise(this.lastTokEnd,\"Complex binding patterns require an initialization value\"):this.unexpected(),e.declarations.push(this.finishNode(i,\"VariableDeclarator\")),!this.eat(v.comma))break}return e},J.parseVarId=function(e,t){e.id=this.parseBindingAtom(),this.checkLValPattern(e.id,\"var\"===t?1:2,!1)};var X=1,Y=2;function Q(e,t){var n=t.key.name,r=e[n],i=\"true\";return\"MethodDefinition\"!==t.type||\"get\"!==t.kind&&\"set\"!==t.kind||(i=(t.static?\"s\":\"i\")+t.kind),\"iget\"===r&&\"iset\"===i||\"iset\"===r&&\"iget\"===i||\"sget\"===r&&\"sset\"===i||\"sset\"===r&&\"sget\"===i?(e[n]=\"true\",!1):!!r||(e[n]=i,!1)}function Z(e,t){var n=e.computed,r=e.key;return!n&&(\"Identifier\"===r.type&&r.name===t||\"Literal\"===r.type&&r.value===t)}J.parseFunction=function(e,t,n,r,i){this.initFunction(e),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!r)&&(this.type===v.star&&t&Y&&this.unexpected(),e.generator=this.eat(v.star)),this.options.ecmaVersion>=8&&(e.async=!!r),t&X&&(e.id=4&t&&this.type!==v.name?null:this.parseIdent(),!e.id||t&Y||this.checkLValSimple(e.id,this.strict||e.generator||e.async?this.treatFunctionsAsVar?1:2:3));var a=this.yieldPos,s=this.awaitPos,o=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(R(e.async,e.generator)),t&X||(e.id=this.type===v.name?this.parseIdent():null),this.parseFunctionParams(e),this.parseFunctionBody(e,n,!1,i),this.yieldPos=a,this.awaitPos=s,this.awaitIdentPos=o,this.finishNode(e,t&X?\"FunctionDeclaration\":\"FunctionExpression\")},J.parseFunctionParams=function(e){this.expect(v.parenL),e.params=this.parseBindingList(v.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams()},J.parseClass=function(e,t){this.next();var n=this.strict;this.strict=!0,this.parseClassId(e,t),this.parseClassSuper(e);var r=this.enterClassBody(),i=this.startNode(),a=!1;for(i.body=[],this.expect(v.braceL);this.type!==v.braceR;){var s=this.parseClassElement(null!==e.superClass);s&&(i.body.push(s),\"MethodDefinition\"===s.type&&\"constructor\"===s.kind?(a&&this.raiseRecoverable(s.start,\"Duplicate constructor in the same class\"),a=!0):s.key&&\"PrivateIdentifier\"===s.key.type&&Q(r,s)&&this.raiseRecoverable(s.key.start,\"Identifier '#\"+s.key.name+\"' has already been declared\"))}return this.strict=n,this.next(),e.body=this.finishNode(i,\"ClassBody\"),this.exitClassBody(),this.finishNode(e,t?\"ClassDeclaration\":\"ClassExpression\")},J.parseClassElement=function(e){if(this.eat(v.semi))return null;var t=this.options.ecmaVersion,n=this.startNode(),r=\"\",i=!1,a=!1,s=\"method\",o=!1;if(this.eatContextual(\"static\")){if(t>=13&&this.eat(v.braceL))return this.parseClassStaticBlock(n),n;this.isClassElementNameStart()||this.type===v.star?o=!0:r=\"static\"}if(n.static=o,!r&&t>=8&&this.eatContextual(\"async\")&&(!this.isClassElementNameStart()&&this.type!==v.star||this.canInsertSemicolon()?r=\"async\":a=!0),!r&&(t>=9||!a)&&this.eat(v.star)&&(i=!0),!r&&!a&&!i){var l=this.value;(this.eatContextual(\"get\")||this.eatContextual(\"set\"))&&(this.isClassElementNameStart()?s=l:r=l)}if(r?(n.computed=!1,n.key=this.startNodeAt(this.lastTokStart,this.lastTokStartLoc),n.key.name=r,this.finishNode(n.key,\"Identifier\")):this.parseClassElementName(n),t<13||this.type===v.parenL||\"method\"!==s||i||a){var c=!n.static&&Z(n,\"constructor\"),u=c&&e;c&&\"method\"!==s&&this.raise(n.key.start,\"Constructor can't have get/set modifier\"),n.kind=c?\"constructor\":s,this.parseClassMethod(n,i,a,u)}else this.parseClassField(n);return n},J.isClassElementNameStart=function(){return this.type===v.name||this.type===v.privateId||this.type===v.num||this.type===v.string||this.type===v.bracketL||this.type.keyword},J.parseClassElementName=function(e){this.type===v.privateId?(\"constructor\"===this.value&&this.raise(this.start,\"Classes can't have an element named '#constructor'\"),e.computed=!1,e.key=this.parsePrivateIdent()):this.parsePropertyName(e)},J.parseClassMethod=function(e,t,n,r){var i=e.key;\"constructor\"===e.kind?(t&&this.raise(i.start,\"Constructor can't be a generator\"),n&&this.raise(i.start,\"Constructor can't be an async method\")):e.static&&Z(e,\"prototype\")&&this.raise(i.start,\"Classes may not have a static property named prototype\");var a=e.value=this.parseMethod(t,n,r);return\"get\"===e.kind&&0!==a.params.length&&this.raiseRecoverable(a.start,\"getter should have no params\"),\"set\"===e.kind&&1!==a.params.length&&this.raiseRecoverable(a.start,\"setter should have exactly one param\"),\"set\"===e.kind&&\"RestElement\"===a.params[0].type&&this.raiseRecoverable(a.params[0].start,\"Setter cannot use rest params\"),this.finishNode(e,\"MethodDefinition\")},J.parseClassField=function(e){if(Z(e,\"constructor\")?this.raise(e.key.start,\"Classes can't have a field named 'constructor'\"):e.static&&Z(e,\"prototype\")&&this.raise(e.key.start,\"Classes can't have a static field named 'prototype'\"),this.eat(v.eq)){var t=this.currentThisScope(),n=t.inClassFieldInit;t.inClassFieldInit=!0,e.value=this.parseMaybeAssign(),t.inClassFieldInit=n}else e.value=null;return this.semicolon(),this.finishNode(e,\"PropertyDefinition\")},J.parseClassStaticBlock=function(e){e.body=[];var t=this.labels;for(this.labels=[],this.enterScope(320);this.type!==v.braceR;){var n=this.parseStatement(null);e.body.push(n)}return this.next(),this.exitScope(),this.labels=t,this.finishNode(e,\"StaticBlock\")},J.parseClassId=function(e,t){this.type===v.name?(e.id=this.parseIdent(),t&&this.checkLValSimple(e.id,2,!1)):(!0===t&&this.unexpected(),e.id=null)},J.parseClassSuper=function(e){e.superClass=this.eat(v._extends)?this.parseExprSubscripts(null,!1):null},J.enterClassBody=function(){var e={declared:Object.create(null),used:[]};return this.privateNameStack.push(e),e.declared},J.exitClassBody=function(){var e=this.privateNameStack.pop(),t=e.declared,n=e.used;if(this.options.checkPrivateFields)for(var r=this.privateNameStack.length,i=0===r?null:this.privateNameStack[r-1],a=0;a<n.length;++a){var s=n[a];C(t,s.name)||(i?i.used.push(s):this.raiseRecoverable(s.start,\"Private field '#\"+s.name+\"' must be declared in an enclosing class\"))}},J.parseExportAllDeclaration=function(e,t){return this.options.ecmaVersion>=11&&(this.eatContextual(\"as\")?(e.exported=this.parseModuleExportName(),this.checkExport(t,e.exported,this.lastTokStart)):e.exported=null),this.expectContextual(\"from\"),this.type!==v.string&&this.unexpected(),e.source=this.parseExprAtom(),this.semicolon(),this.finishNode(e,\"ExportAllDeclaration\")},J.parseExport=function(e,t){if(this.next(),this.eat(v.star))return this.parseExportAllDeclaration(e,t);if(this.eat(v._default))return this.checkExport(t,\"default\",this.lastTokStart),e.declaration=this.parseExportDefaultDeclaration(),this.finishNode(e,\"ExportDefaultDeclaration\");if(this.shouldParseExportStatement())e.declaration=this.parseExportDeclaration(e),\"VariableDeclaration\"===e.declaration.type?this.checkVariableExport(t,e.declaration.declarations):this.checkExport(t,e.declaration.id,e.declaration.id.start),e.specifiers=[],e.source=null;else{if(e.declaration=null,e.specifiers=this.parseExportSpecifiers(t),this.eatContextual(\"from\"))this.type!==v.string&&this.unexpected(),e.source=this.parseExprAtom();else{for(var n=0,r=e.specifiers;n<r.length;n+=1){var i=r[n];this.checkUnreserved(i.local),this.checkLocalExport(i.local),\"Literal\"===i.local.type&&this.raise(i.local.start,\"A string literal cannot be used as an exported binding without `from`.\")}e.source=null}this.semicolon()}return this.finishNode(e,\"ExportNamedDeclaration\")},J.parseExportDeclaration=function(e){return this.parseStatement(null)},J.parseExportDefaultDeclaration=function(){var e;if(this.type===v._function||(e=this.isAsyncFunction())){var t=this.startNode();return this.next(),e&&this.next(),this.parseFunction(t,4|X,!1,e)}if(this.type===v._class){var n=this.startNode();return this.parseClass(n,\"nullableID\")}var r=this.parseMaybeAssign();return this.semicolon(),r},J.checkExport=function(e,t,n){e&&(\"string\"!=typeof t&&(t=\"Identifier\"===t.type?t.name:t.value),C(e,t)&&this.raiseRecoverable(n,\"Duplicate export '\"+t+\"'\"),e[t]=!0)},J.checkPatternExport=function(e,t){var n=t.type;if(\"Identifier\"===n)this.checkExport(e,t,t.start);else if(\"ObjectPattern\"===n)for(var r=0,i=t.properties;r<i.length;r+=1){var a=i[r];this.checkPatternExport(e,a)}else if(\"ArrayPattern\"===n)for(var s=0,o=t.elements;s<o.length;s+=1){var l=o[s];l&&this.checkPatternExport(e,l)}else\"Property\"===n?this.checkPatternExport(e,t.value):\"AssignmentPattern\"===n?this.checkPatternExport(e,t.left):\"RestElement\"===n&&this.checkPatternExport(e,t.argument)},J.checkVariableExport=function(e,t){if(e)for(var n=0,r=t;n<r.length;n+=1){var i=r[n];this.checkPatternExport(e,i.id)}},J.shouldParseExportStatement=function(){return\"var\"===this.type.keyword||\"const\"===this.type.keyword||\"class\"===this.type.keyword||\"function\"===this.type.keyword||this.isLet()||this.isAsyncFunction()},J.parseExportSpecifier=function(e){var t=this.startNode();return t.local=this.parseModuleExportName(),t.exported=this.eatContextual(\"as\")?this.parseModuleExportName():t.local,this.checkExport(e,t.exported,t.exported.start),this.finishNode(t,\"ExportSpecifier\")},J.parseExportSpecifiers=function(e){var t=[],n=!0;for(this.expect(v.braceL);!this.eat(v.braceR);){if(n)n=!1;else if(this.expect(v.comma),this.afterTrailingComma(v.braceR))break;t.push(this.parseExportSpecifier(e))}return t},J.parseImport=function(e){return this.next(),this.type===v.string?(e.specifiers=K,e.source=this.parseExprAtom()):(e.specifiers=this.parseImportSpecifiers(),this.expectContextual(\"from\"),e.source=this.type===v.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(e,\"ImportDeclaration\")},J.parseImportSpecifier=function(){var e=this.startNode();return e.imported=this.parseModuleExportName(),this.eatContextual(\"as\")?e.local=this.parseIdent():(this.checkUnreserved(e.imported),e.local=e.imported),this.checkLValSimple(e.local,2),this.finishNode(e,\"ImportSpecifier\")},J.parseImportDefaultSpecifier=function(){var e=this.startNode();return e.local=this.parseIdent(),this.checkLValSimple(e.local,2),this.finishNode(e,\"ImportDefaultSpecifier\")},J.parseImportNamespaceSpecifier=function(){var e=this.startNode();return this.next(),this.expectContextual(\"as\"),e.local=this.parseIdent(),this.checkLValSimple(e.local,2),this.finishNode(e,\"ImportNamespaceSpecifier\")},J.parseImportSpecifiers=function(){var e=[],t=!0;if(this.type===v.name&&(e.push(this.parseImportDefaultSpecifier()),!this.eat(v.comma)))return e;if(this.type===v.star)return e.push(this.parseImportNamespaceSpecifier()),e;for(this.expect(v.braceL);!this.eat(v.braceR);){if(t)t=!1;else if(this.expect(v.comma),this.afterTrailingComma(v.braceR))break;e.push(this.parseImportSpecifier())}return e},J.parseModuleExportName=function(){if(this.options.ecmaVersion>=13&&this.type===v.string){var e=this.parseLiteral(this.value);return L.test(e.value)&&this.raise(e.start,\"An export name cannot include a lone surrogate.\"),e}return this.parseIdent(!0)},J.adaptDirectivePrologue=function(e){for(var t=0;t<e.length&&this.isDirectiveCandidate(e[t]);++t)e[t].directive=e[t].expression.raw.slice(1,-1)},J.isDirectiveCandidate=function(e){return this.options.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"string\"==typeof e.expression.value&&('\"'===this.input[e.start]||\"'\"===this.input[e.start])};var ee=q.prototype;ee.toAssignable=function(e,t,n){if(this.options.ecmaVersion>=6&&e)switch(e.type){case\"Identifier\":this.inAsync&&\"await\"===e.name&&this.raise(e.start,\"Cannot use 'await' as identifier inside an async function\");break;case\"ObjectPattern\":case\"ArrayPattern\":case\"AssignmentPattern\":case\"RestElement\":break;case\"ObjectExpression\":e.type=\"ObjectPattern\",n&&this.checkPatternErrors(n,!0);for(var r=0,i=e.properties;r<i.length;r+=1){var a=i[r];this.toAssignable(a,t),\"RestElement\"!==a.type||\"ArrayPattern\"!==a.argument.type&&\"ObjectPattern\"!==a.argument.type||this.raise(a.argument.start,\"Unexpected token\")}break;case\"Property\":\"init\"!==e.kind&&this.raise(e.key.start,\"Object pattern can't contain getter or setter\"),this.toAssignable(e.value,t);break;case\"ArrayExpression\":e.type=\"ArrayPattern\",n&&this.checkPatternErrors(n,!0),this.toAssignableList(e.elements,t);break;case\"SpreadElement\":e.type=\"RestElement\",this.toAssignable(e.argument,t),\"AssignmentPattern\"===e.argument.type&&this.raise(e.argument.start,\"Rest elements cannot have a default value\");break;case\"AssignmentExpression\":\"=\"!==e.operator&&this.raise(e.left.end,\"Only '=' operator can be used for specifying default value.\"),e.type=\"AssignmentPattern\",delete e.operator,this.toAssignable(e.left,t);break;case\"ParenthesizedExpression\":this.toAssignable(e.expression,t,n);break;case\"ChainExpression\":this.raiseRecoverable(e.start,\"Optional chaining cannot appear in left-hand side\");break;case\"MemberExpression\":if(!t)break;default:this.raise(e.start,\"Assigning to rvalue\")}else n&&this.checkPatternErrors(n,!0);return e},ee.toAssignableList=function(e,t){for(var n=e.length,r=0;r<n;r++){var i=e[r];i&&this.toAssignable(i,t)}if(n){var a=e[n-1];6===this.options.ecmaVersion&&t&&a&&\"RestElement\"===a.type&&\"Identifier\"!==a.argument.type&&this.unexpected(a.argument.start)}return e},ee.parseSpread=function(e){var t=this.startNode();return this.next(),t.argument=this.parseMaybeAssign(!1,e),this.finishNode(t,\"SpreadElement\")},ee.parseRestBinding=function(){var e=this.startNode();return this.next(),6===this.options.ecmaVersion&&this.type!==v.name&&this.unexpected(),e.argument=this.parseBindingAtom(),this.finishNode(e,\"RestElement\")},ee.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case v.bracketL:var e=this.startNode();return this.next(),e.elements=this.parseBindingList(v.bracketR,!0,!0),this.finishNode(e,\"ArrayPattern\");case v.braceL:return this.parseObj(!0)}return this.parseIdent()},ee.parseBindingList=function(e,t,n,r){for(var i=[],a=!0;!this.eat(e);)if(a?a=!1:this.expect(v.comma),t&&this.type===v.comma)i.push(null);else{if(n&&this.afterTrailingComma(e))break;if(this.type===v.ellipsis){var s=this.parseRestBinding();this.parseBindingListItem(s),i.push(s),this.type===v.comma&&this.raiseRecoverable(this.start,\"Comma is not permitted after the rest element\"),this.expect(e);break}i.push(this.parseAssignableListItem(r))}return i},ee.parseAssignableListItem=function(e){var t=this.parseMaybeDefault(this.start,this.startLoc);return this.parseBindingListItem(t),t},ee.parseBindingListItem=function(e){return e},ee.parseMaybeDefault=function(e,t,n){if(n=n||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(v.eq))return n;var r=this.startNodeAt(e,t);return r.left=n,r.right=this.parseMaybeAssign(),this.finishNode(r,\"AssignmentPattern\")},ee.checkLValSimple=function(e,t,n){void 0===t&&(t=0);var r=0!==t;switch(e.type){case\"Identifier\":this.strict&&this.reservedWordsStrictBind.test(e.name)&&this.raiseRecoverable(e.start,(r?\"Binding \":\"Assigning to \")+e.name+\" in strict mode\"),r&&(2===t&&\"let\"===e.name&&this.raiseRecoverable(e.start,\"let is disallowed as a lexically bound name\"),n&&(C(n,e.name)&&this.raiseRecoverable(e.start,\"Argument name clash\"),n[e.name]=!0),5!==t&&this.declareName(e.name,t,e.start));break;case\"ChainExpression\":this.raiseRecoverable(e.start,\"Optional chaining cannot appear in left-hand side\");break;case\"MemberExpression\":r&&this.raiseRecoverable(e.start,\"Binding member expression\");break;case\"ParenthesizedExpression\":return r&&this.raiseRecoverable(e.start,\"Binding parenthesized expression\"),this.checkLValSimple(e.expression,t,n);default:this.raise(e.start,(r?\"Binding\":\"Assigning to\")+\" rvalue\")}},ee.checkLValPattern=function(e,t,n){switch(void 0===t&&(t=0),e.type){case\"ObjectPattern\":for(var r=0,i=e.properties;r<i.length;r+=1){var a=i[r];this.checkLValInnerPattern(a,t,n)}break;case\"ArrayPattern\":for(var s=0,o=e.elements;s<o.length;s+=1){var l=o[s];l&&this.checkLValInnerPattern(l,t,n)}break;default:this.checkLValSimple(e,t,n)}},ee.checkLValInnerPattern=function(e,t,n){switch(void 0===t&&(t=0),e.type){case\"Property\":this.checkLValInnerPattern(e.value,t,n);break;case\"AssignmentPattern\":this.checkLValPattern(e.left,t,n);break;case\"RestElement\":this.checkLValPattern(e.argument,t,n);break;default:this.checkLValPattern(e,t,n)}};var te=function(e,t,n,r,i){this.token=e,this.isExpr=!!t,this.preserveSpace=!!n,this.override=r,this.generator=!!i},ne={b_stat:new te(\"{\",!1),b_expr:new te(\"{\",!0),b_tmpl:new te(\"${\",!1),p_stat:new te(\"(\",!1),p_expr:new te(\"(\",!0),q_tmpl:new te(\"`\",!0,!0,(function(e){return e.tryReadTemplateToken()})),f_stat:new te(\"function\",!1),f_expr:new te(\"function\",!0),f_expr_gen:new te(\"function\",!0,!1,null,!0),f_gen:new te(\"function\",!1,!1,null,!0)},re=q.prototype;re.initialContext=function(){return[ne.b_stat]},re.curContext=function(){return this.context[this.context.length-1]},re.braceIsBlock=function(e){var t=this.curContext();return t===ne.f_expr||t===ne.f_stat||(e!==v.colon||t!==ne.b_stat&&t!==ne.b_expr?e===v._return||e===v.name&&this.exprAllowed?x.test(this.input.slice(this.lastTokEnd,this.start)):e===v._else||e===v.semi||e===v.eof||e===v.parenR||e===v.arrow||(e===v.braceL?t===ne.b_stat:e!==v._var&&e!==v._const&&e!==v.name&&!this.exprAllowed):!t.isExpr)},re.inGeneratorContext=function(){for(var e=this.context.length-1;e>=1;e--){var t=this.context[e];if(\"function\"===t.token)return t.generator}return!1},re.updateContext=function(e){var t,n=this.type;n.keyword&&e===v.dot?this.exprAllowed=!1:(t=n.updateContext)?t.call(this,e):this.exprAllowed=n.beforeExpr},re.overrideContext=function(e){this.curContext()!==e&&(this.context[this.context.length-1]=e)},v.parenR.updateContext=v.braceR.updateContext=function(){if(1!==this.context.length){var e=this.context.pop();e===ne.b_stat&&\"function\"===this.curContext().token&&(e=this.context.pop()),this.exprAllowed=!e.isExpr}else this.exprAllowed=!0},v.braceL.updateContext=function(e){this.context.push(this.braceIsBlock(e)?ne.b_stat:ne.b_expr),this.exprAllowed=!0},v.dollarBraceL.updateContext=function(){this.context.push(ne.b_tmpl),this.exprAllowed=!0},v.parenL.updateContext=function(e){var t=e===v._if||e===v._for||e===v._with||e===v._while;this.context.push(t?ne.p_stat:ne.p_expr),this.exprAllowed=!0},v.incDec.updateContext=function(){},v._function.updateContext=v._class.updateContext=function(e){!e.beforeExpr||e===v._else||e===v.semi&&this.curContext()!==ne.p_stat||e===v._return&&x.test(this.input.slice(this.lastTokEnd,this.start))||(e===v.colon||e===v.braceL)&&this.curContext()===ne.b_stat?this.context.push(ne.f_stat):this.context.push(ne.f_expr),this.exprAllowed=!1},v.colon.updateContext=function(){\"function\"===this.curContext().token&&this.context.pop(),this.exprAllowed=!0},v.backQuote.updateContext=function(){this.curContext()===ne.q_tmpl?this.context.pop():this.context.push(ne.q_tmpl),this.exprAllowed=!1},v.star.updateContext=function(e){if(e===v._function){var t=this.context.length-1;this.context[t]===ne.f_expr?this.context[t]=ne.f_expr_gen:this.context[t]=ne.f_gen}this.exprAllowed=!0},v.name.updateContext=function(e){var t=!1;this.options.ecmaVersion>=6&&e!==v.dot&&(\"of\"===this.value&&!this.exprAllowed||\"yield\"===this.value&&this.inGeneratorContext())&&(t=!0),this.exprAllowed=t};var ie=q.prototype;function ae(e){return\"Identifier\"===e.type||\"ParenthesizedExpression\"===e.type&&ae(e.expression)}function se(e){return\"MemberExpression\"===e.type&&\"PrivateIdentifier\"===e.property.type||\"ChainExpression\"===e.type&&se(e.expression)||\"ParenthesizedExpression\"===e.type&&se(e.expression)}ie.checkPropClash=function(e,t,n){if(!(this.options.ecmaVersion>=9&&\"SpreadElement\"===e.type||this.options.ecmaVersion>=6&&(e.computed||e.method||e.shorthand))){var r,i=e.key;switch(i.type){case\"Identifier\":r=i.name;break;case\"Literal\":r=i.value+\"\";break;default:return}var a=e.kind;if(this.options.ecmaVersion>=6)\"__proto__\"===r&&\"init\"===a&&(t.proto&&(n?n.doubleProto<0&&(n.doubleProto=i.start):this.raiseRecoverable(i.start,\"Redefinition of __proto__ property\")),t.proto=!0);else{var s=t[r=\"$\"+r];s?(\"init\"===a?this.strict&&s.init||s.get||s.set:s.init||s[a])&&this.raiseRecoverable(i.start,\"Redefinition of property\"):s=t[r]={init:!1,get:!1,set:!1},s[a]=!0}}},ie.parseExpression=function(e,t){var n=this.start,r=this.startLoc,i=this.parseMaybeAssign(e,t);if(this.type===v.comma){var a=this.startNodeAt(n,r);for(a.expressions=[i];this.eat(v.comma);)a.expressions.push(this.parseMaybeAssign(e,t));return this.finishNode(a,\"SequenceExpression\")}return i},ie.parseMaybeAssign=function(e,t,n){if(this.isContextual(\"yield\")){if(this.inGenerator)return this.parseYield(e);this.exprAllowed=!1}var r=!1,i=-1,a=-1,s=-1;t?(i=t.parenthesizedAssign,a=t.trailingComma,s=t.doubleProto,t.parenthesizedAssign=t.trailingComma=-1):(t=new G,r=!0);var o=this.start,l=this.startLoc;this.type!==v.parenL&&this.type!==v.name||(this.potentialArrowAt=this.start,this.potentialArrowInForAwait=\"await\"===e);var c=this.parseMaybeConditional(e,t);if(n&&(c=n.call(this,c,o,l)),this.type.isAssign){var u=this.startNodeAt(o,l);return u.operator=this.value,this.type===v.eq&&(c=this.toAssignable(c,!1,t)),r||(t.parenthesizedAssign=t.trailingComma=t.doubleProto=-1),t.shorthandAssign>=c.start&&(t.shorthandAssign=-1),this.type===v.eq?this.checkLValPattern(c):this.checkLValSimple(c),u.left=c,this.next(),u.right=this.parseMaybeAssign(e),s>-1&&(t.doubleProto=s),this.finishNode(u,\"AssignmentExpression\")}return r&&this.checkExpressionErrors(t,!0),i>-1&&(t.parenthesizedAssign=i),a>-1&&(t.trailingComma=a),c},ie.parseMaybeConditional=function(e,t){var n=this.start,r=this.startLoc,i=this.parseExprOps(e,t);if(this.checkExpressionErrors(t))return i;if(this.eat(v.question)){var a=this.startNodeAt(n,r);return a.test=i,a.consequent=this.parseMaybeAssign(),this.expect(v.colon),a.alternate=this.parseMaybeAssign(e),this.finishNode(a,\"ConditionalExpression\")}return i},ie.parseExprOps=function(e,t){var n=this.start,r=this.startLoc,i=this.parseMaybeUnary(t,!1,!1,e);return this.checkExpressionErrors(t)||i.start===n&&\"ArrowFunctionExpression\"===i.type?i:this.parseExprOp(i,n,r,-1,e)},ie.parseExprOp=function(e,t,n,r,i){var a=this.type.binop;if(null!=a&&(!i||this.type!==v._in)&&a>r){var s=this.type===v.logicalOR||this.type===v.logicalAND,o=this.type===v.coalesce;o&&(a=v.logicalAND.binop);var l=this.value;this.next();var c=this.start,u=this.startLoc,p=this.parseExprOp(this.parseMaybeUnary(null,!1,!1,i),c,u,a,i),h=this.buildBinary(t,n,e,p,l,s||o);return(s&&this.type===v.coalesce||o&&(this.type===v.logicalOR||this.type===v.logicalAND))&&this.raiseRecoverable(this.start,\"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\"),this.parseExprOp(h,t,n,r,i)}return e},ie.buildBinary=function(e,t,n,r,i,a){\"PrivateIdentifier\"===r.type&&this.raise(r.start,\"Private identifier can only be left side of binary expression\");var s=this.startNodeAt(e,t);return s.left=n,s.operator=i,s.right=r,this.finishNode(s,a?\"LogicalExpression\":\"BinaryExpression\")},ie.parseMaybeUnary=function(e,t,n,r){var i,a=this.start,s=this.startLoc;if(this.isContextual(\"await\")&&this.canAwait)i=this.parseAwait(r),t=!0;else if(this.type.prefix){var o=this.startNode(),l=this.type===v.incDec;o.operator=this.value,o.prefix=!0,this.next(),o.argument=this.parseMaybeUnary(null,!0,l,r),this.checkExpressionErrors(e,!0),l?this.checkLValSimple(o.argument):this.strict&&\"delete\"===o.operator&&ae(o.argument)?this.raiseRecoverable(o.start,\"Deleting local variable in strict mode\"):\"delete\"===o.operator&&se(o.argument)?this.raiseRecoverable(o.start,\"Private fields can not be deleted\"):t=!0,i=this.finishNode(o,l?\"UpdateExpression\":\"UnaryExpression\")}else if(t||this.type!==v.privateId){if(i=this.parseExprSubscripts(e,r),this.checkExpressionErrors(e))return i;for(;this.type.postfix&&!this.canInsertSemicolon();){var c=this.startNodeAt(a,s);c.operator=this.value,c.prefix=!1,c.argument=i,this.checkLValSimple(i),this.next(),i=this.finishNode(c,\"UpdateExpression\")}}else(r||0===this.privateNameStack.length)&&this.options.checkPrivateFields&&this.unexpected(),i=this.parsePrivateIdent(),this.type!==v._in&&this.unexpected();return n||!this.eat(v.starstar)?i:t?void this.unexpected(this.lastTokStart):this.buildBinary(a,s,i,this.parseMaybeUnary(null,!1,!1,r),\"**\",!1)},ie.parseExprSubscripts=function(e,t){var n=this.start,r=this.startLoc,i=this.parseExprAtom(e,t);if(\"ArrowFunctionExpression\"===i.type&&\")\"!==this.input.slice(this.lastTokStart,this.lastTokEnd))return i;var a=this.parseSubscripts(i,n,r,!1,t);return e&&\"MemberExpression\"===a.type&&(e.parenthesizedAssign>=a.start&&(e.parenthesizedAssign=-1),e.parenthesizedBind>=a.start&&(e.parenthesizedBind=-1),e.trailingComma>=a.start&&(e.trailingComma=-1)),a},ie.parseSubscripts=function(e,t,n,r,i){for(var a=this.options.ecmaVersion>=8&&\"Identifier\"===e.type&&\"async\"===e.name&&this.lastTokEnd===e.end&&!this.canInsertSemicolon()&&e.end-e.start==5&&this.potentialArrowAt===e.start,s=!1;;){var o=this.parseSubscript(e,t,n,r,a,s,i);if(o.optional&&(s=!0),o===e||\"ArrowFunctionExpression\"===o.type){if(s){var l=this.startNodeAt(t,n);l.expression=o,o=this.finishNode(l,\"ChainExpression\")}return o}e=o}},ie.shouldParseAsyncArrow=function(){return!this.canInsertSemicolon()&&this.eat(v.arrow)},ie.parseSubscriptAsyncArrow=function(e,t,n,r){return this.parseArrowExpression(this.startNodeAt(e,t),n,!0,r)},ie.parseSubscript=function(e,t,n,r,i,a,s){var o=this.options.ecmaVersion>=11,l=o&&this.eat(v.questionDot);r&&l&&this.raise(this.lastTokStart,\"Optional chaining cannot appear in the callee of new expressions\");var c=this.eat(v.bracketL);if(c||l&&this.type!==v.parenL&&this.type!==v.backQuote||this.eat(v.dot)){var u=this.startNodeAt(t,n);u.object=e,c?(u.property=this.parseExpression(),this.expect(v.bracketR)):this.type===v.privateId&&\"Super\"!==e.type?u.property=this.parsePrivateIdent():u.property=this.parseIdent(\"never\"!==this.options.allowReserved),u.computed=!!c,o&&(u.optional=l),e=this.finishNode(u,\"MemberExpression\")}else if(!r&&this.eat(v.parenL)){var p=new G,h=this.yieldPos,d=this.awaitPos,f=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var m=this.parseExprList(v.parenR,this.options.ecmaVersion>=8,!1,p);if(i&&!l&&this.shouldParseAsyncArrow())return this.checkPatternErrors(p,!1),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,\"Cannot use 'await' as identifier inside an async function\"),this.yieldPos=h,this.awaitPos=d,this.awaitIdentPos=f,this.parseSubscriptAsyncArrow(t,n,m,s);this.checkExpressionErrors(p,!0),this.yieldPos=h||this.yieldPos,this.awaitPos=d||this.awaitPos,this.awaitIdentPos=f||this.awaitIdentPos;var y=this.startNodeAt(t,n);y.callee=e,y.arguments=m,o&&(y.optional=l),e=this.finishNode(y,\"CallExpression\")}else if(this.type===v.backQuote){(l||a)&&this.raise(this.start,\"Optional chaining cannot appear in the tag of tagged template expressions\");var g=this.startNodeAt(t,n);g.tag=e,g.quasi=this.parseTemplate({isTagged:!0}),e=this.finishNode(g,\"TaggedTemplateExpression\")}return e},ie.parseExprAtom=function(e,t,n){this.type===v.slash&&this.readRegexp();var r,i=this.potentialArrowAt===this.start;switch(this.type){case v._super:return this.allowSuper||this.raise(this.start,\"'super' keyword outside a method\"),r=this.startNode(),this.next(),this.type!==v.parenL||this.allowDirectSuper||this.raise(r.start,\"super() call outside constructor of a subclass\"),this.type!==v.dot&&this.type!==v.bracketL&&this.type!==v.parenL&&this.unexpected(),this.finishNode(r,\"Super\");case v._this:return r=this.startNode(),this.next(),this.finishNode(r,\"ThisExpression\");case v.name:var a=this.start,s=this.startLoc,o=this.containsEsc,l=this.parseIdent(!1);if(this.options.ecmaVersion>=8&&!o&&\"async\"===l.name&&!this.canInsertSemicolon()&&this.eat(v._function))return this.overrideContext(ne.f_expr),this.parseFunction(this.startNodeAt(a,s),0,!1,!0,t);if(i&&!this.canInsertSemicolon()){if(this.eat(v.arrow))return this.parseArrowExpression(this.startNodeAt(a,s),[l],!1,t);if(this.options.ecmaVersion>=8&&\"async\"===l.name&&this.type===v.name&&!o&&(!this.potentialArrowInForAwait||\"of\"!==this.value||this.containsEsc))return l=this.parseIdent(!1),!this.canInsertSemicolon()&&this.eat(v.arrow)||this.unexpected(),this.parseArrowExpression(this.startNodeAt(a,s),[l],!0,t)}return l;case v.regexp:var c=this.value;return(r=this.parseLiteral(c.value)).regex={pattern:c.pattern,flags:c.flags},r;case v.num:case v.string:return this.parseLiteral(this.value);case v._null:case v._true:case v._false:return(r=this.startNode()).value=this.type===v._null?null:this.type===v._true,r.raw=this.type.keyword,this.next(),this.finishNode(r,\"Literal\");case v.parenL:var u=this.start,p=this.parseParenAndDistinguishExpression(i,t);return e&&(e.parenthesizedAssign<0&&!this.isSimpleAssignTarget(p)&&(e.parenthesizedAssign=u),e.parenthesizedBind<0&&(e.parenthesizedBind=u)),p;case v.bracketL:return r=this.startNode(),this.next(),r.elements=this.parseExprList(v.bracketR,!0,!0,e),this.finishNode(r,\"ArrayExpression\");case v.braceL:return this.overrideContext(ne.b_expr),this.parseObj(!1,e);case v._function:return r=this.startNode(),this.next(),this.parseFunction(r,0);case v._class:return this.parseClass(this.startNode(),!1);case v._new:return this.parseNew();case v.backQuote:return this.parseTemplate();case v._import:return this.options.ecmaVersion>=11?this.parseExprImport(n):this.unexpected();default:return this.parseExprAtomDefault()}},ie.parseExprAtomDefault=function(){this.unexpected()},ie.parseExprImport=function(e){var t=this.startNode();if(this.containsEsc&&this.raiseRecoverable(this.start,\"Escape sequence in keyword import\"),this.next(),this.type===v.parenL&&!e)return this.parseDynamicImport(t);if(this.type===v.dot){var n=this.startNodeAt(t.start,t.loc&&t.loc.start);return n.name=\"import\",t.meta=this.finishNode(n,\"Identifier\"),this.parseImportMeta(t)}this.unexpected()},ie.parseDynamicImport=function(e){if(this.next(),e.source=this.parseMaybeAssign(),!this.eat(v.parenR)){var t=this.start;this.eat(v.comma)&&this.eat(v.parenR)?this.raiseRecoverable(t,\"Trailing comma is not allowed in import()\"):this.unexpected(t)}return this.finishNode(e,\"ImportExpression\")},ie.parseImportMeta=function(e){this.next();var t=this.containsEsc;return e.property=this.parseIdent(!0),\"meta\"!==e.property.name&&this.raiseRecoverable(e.property.start,\"The only valid meta property for import is 'import.meta'\"),t&&this.raiseRecoverable(e.start,\"'import.meta' must not contain escaped characters\"),\"module\"===this.options.sourceType||this.options.allowImportExportEverywhere||this.raiseRecoverable(e.start,\"Cannot use 'import.meta' outside a module\"),this.finishNode(e,\"MetaProperty\")},ie.parseLiteral=function(e){var t=this.startNode();return t.value=e,t.raw=this.input.slice(this.start,this.end),110===t.raw.charCodeAt(t.raw.length-1)&&(t.bigint=t.raw.slice(0,-1).replace(/_/g,\"\")),this.next(),this.finishNode(t,\"Literal\")},ie.parseParenExpression=function(){this.expect(v.parenL);var e=this.parseExpression();return this.expect(v.parenR),e},ie.shouldParseArrow=function(e){return!this.canInsertSemicolon()},ie.parseParenAndDistinguishExpression=function(e,t){var n,r=this.start,i=this.startLoc,a=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var s,o=this.start,l=this.startLoc,c=[],u=!0,p=!1,h=new G,d=this.yieldPos,f=this.awaitPos;for(this.yieldPos=0,this.awaitPos=0;this.type!==v.parenR;){if(u?u=!1:this.expect(v.comma),a&&this.afterTrailingComma(v.parenR,!0)){p=!0;break}if(this.type===v.ellipsis){s=this.start,c.push(this.parseParenItem(this.parseRestBinding())),this.type===v.comma&&this.raiseRecoverable(this.start,\"Comma is not permitted after the rest element\");break}c.push(this.parseMaybeAssign(!1,h,this.parseParenItem))}var m=this.lastTokEnd,y=this.lastTokEndLoc;if(this.expect(v.parenR),e&&this.shouldParseArrow(c)&&this.eat(v.arrow))return this.checkPatternErrors(h,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=d,this.awaitPos=f,this.parseParenArrowList(r,i,c,t);c.length&&!p||this.unexpected(this.lastTokStart),s&&this.unexpected(s),this.checkExpressionErrors(h,!0),this.yieldPos=d||this.yieldPos,this.awaitPos=f||this.awaitPos,c.length>1?((n=this.startNodeAt(o,l)).expressions=c,this.finishNodeAt(n,\"SequenceExpression\",m,y)):n=c[0]}else n=this.parseParenExpression();if(this.options.preserveParens){var g=this.startNodeAt(r,i);return g.expression=n,this.finishNode(g,\"ParenthesizedExpression\")}return n},ie.parseParenItem=function(e){return e},ie.parseParenArrowList=function(e,t,n,r){return this.parseArrowExpression(this.startNodeAt(e,t),n,!1,r)};var oe=[];ie.parseNew=function(){this.containsEsc&&this.raiseRecoverable(this.start,\"Escape sequence in keyword new\");var e=this.startNode();if(this.next(),this.options.ecmaVersion>=6&&this.type===v.dot){var t=this.startNodeAt(e.start,e.loc&&e.loc.start);t.name=\"new\",e.meta=this.finishNode(t,\"Identifier\"),this.next();var n=this.containsEsc;return e.property=this.parseIdent(!0),\"target\"!==e.property.name&&this.raiseRecoverable(e.property.start,\"The only valid meta property for new is 'new.target'\"),n&&this.raiseRecoverable(e.start,\"'new.target' must not contain escaped characters\"),this.allowNewDotTarget||this.raiseRecoverable(e.start,\"'new.target' can only be used in functions and class static block\"),this.finishNode(e,\"MetaProperty\")}var r=this.start,i=this.startLoc;return e.callee=this.parseSubscripts(this.parseExprAtom(null,!1,!0),r,i,!0,!1),this.eat(v.parenL)?e.arguments=this.parseExprList(v.parenR,this.options.ecmaVersion>=8,!1):e.arguments=oe,this.finishNode(e,\"NewExpression\")},ie.parseTemplateElement=function(e){var t=e.isTagged,n=this.startNode();return this.type===v.invalidTemplate?(t||this.raiseRecoverable(this.start,\"Bad escape sequence in untagged template literal\"),n.value={raw:this.value.replace(/\\r\\n?/g,\"\\n\"),cooked:null}):n.value={raw:this.input.slice(this.start,this.end).replace(/\\r\\n?/g,\"\\n\"),cooked:this.value},this.next(),n.tail=this.type===v.backQuote,this.finishNode(n,\"TemplateElement\")},ie.parseTemplate=function(e){void 0===e&&(e={});var t=e.isTagged;void 0===t&&(t=!1);var n=this.startNode();this.next(),n.expressions=[];var r=this.parseTemplateElement({isTagged:t});for(n.quasis=[r];!r.tail;)this.type===v.eof&&this.raise(this.pos,\"Unterminated template literal\"),this.expect(v.dollarBraceL),n.expressions.push(this.parseExpression()),this.expect(v.braceR),n.quasis.push(r=this.parseTemplateElement({isTagged:t}));return this.next(),this.finishNode(n,\"TemplateLiteral\")},ie.isAsyncProp=function(e){return!e.computed&&\"Identifier\"===e.key.type&&\"async\"===e.key.name&&(this.type===v.name||this.type===v.num||this.type===v.string||this.type===v.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===v.star)&&!x.test(this.input.slice(this.lastTokEnd,this.start))},ie.parseObj=function(e,t){var n=this.startNode(),r=!0,i={};for(n.properties=[],this.next();!this.eat(v.braceR);){if(r)r=!1;else if(this.expect(v.comma),this.options.ecmaVersion>=5&&this.afterTrailingComma(v.braceR))break;var a=this.parseProperty(e,t);e||this.checkPropClash(a,i,t),n.properties.push(a)}return this.finishNode(n,e?\"ObjectPattern\":\"ObjectExpression\")},ie.parseProperty=function(e,t){var n,r,i,a,s=this.startNode();if(this.options.ecmaVersion>=9&&this.eat(v.ellipsis))return e?(s.argument=this.parseIdent(!1),this.type===v.comma&&this.raiseRecoverable(this.start,\"Comma is not permitted after the rest element\"),this.finishNode(s,\"RestElement\")):(s.argument=this.parseMaybeAssign(!1,t),this.type===v.comma&&t&&t.trailingComma<0&&(t.trailingComma=this.start),this.finishNode(s,\"SpreadElement\"));this.options.ecmaVersion>=6&&(s.method=!1,s.shorthand=!1,(e||t)&&(i=this.start,a=this.startLoc),e||(n=this.eat(v.star)));var o=this.containsEsc;return this.parsePropertyName(s),!e&&!o&&this.options.ecmaVersion>=8&&!n&&this.isAsyncProp(s)?(r=!0,n=this.options.ecmaVersion>=9&&this.eat(v.star),this.parsePropertyName(s)):r=!1,this.parsePropertyValue(s,e,n,r,i,a,t,o),this.finishNode(s,\"Property\")},ie.parseGetterSetter=function(e){e.kind=e.key.name,this.parsePropertyName(e),e.value=this.parseMethod(!1);var t=\"get\"===e.kind?0:1;if(e.value.params.length!==t){var n=e.value.start;\"get\"===e.kind?this.raiseRecoverable(n,\"getter should have no params\"):this.raiseRecoverable(n,\"setter should have exactly one param\")}else\"set\"===e.kind&&\"RestElement\"===e.value.params[0].type&&this.raiseRecoverable(e.value.params[0].start,\"Setter cannot use rest params\")},ie.parsePropertyValue=function(e,t,n,r,i,a,s,o){(n||r)&&this.type===v.colon&&this.unexpected(),this.eat(v.colon)?(e.value=t?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,s),e.kind=\"init\"):this.options.ecmaVersion>=6&&this.type===v.parenL?(t&&this.unexpected(),e.kind=\"init\",e.method=!0,e.value=this.parseMethod(n,r)):t||o||!(this.options.ecmaVersion>=5)||e.computed||\"Identifier\"!==e.key.type||\"get\"!==e.key.name&&\"set\"!==e.key.name||this.type===v.comma||this.type===v.braceR||this.type===v.eq?this.options.ecmaVersion>=6&&!e.computed&&\"Identifier\"===e.key.type?((n||r)&&this.unexpected(),this.checkUnreserved(e.key),\"await\"!==e.key.name||this.awaitIdentPos||(this.awaitIdentPos=i),e.kind=\"init\",t?e.value=this.parseMaybeDefault(i,a,this.copyNode(e.key)):this.type===v.eq&&s?(s.shorthandAssign<0&&(s.shorthandAssign=this.start),e.value=this.parseMaybeDefault(i,a,this.copyNode(e.key))):e.value=this.copyNode(e.key),e.shorthand=!0):this.unexpected():((n||r)&&this.unexpected(),this.parseGetterSetter(e))},ie.parsePropertyName=function(e){if(this.options.ecmaVersion>=6){if(this.eat(v.bracketL))return e.computed=!0,e.key=this.parseMaybeAssign(),this.expect(v.bracketR),e.key;e.computed=!1}return e.key=this.type===v.num||this.type===v.string?this.parseExprAtom():this.parseIdent(\"never\"!==this.options.allowReserved)},ie.initFunction=function(e){e.id=null,this.options.ecmaVersion>=6&&(e.generator=e.expression=!1),this.options.ecmaVersion>=8&&(e.async=!1)},ie.parseMethod=function(e,t,n){var r=this.startNode(),i=this.yieldPos,a=this.awaitPos,s=this.awaitIdentPos;return this.initFunction(r),this.options.ecmaVersion>=6&&(r.generator=e),this.options.ecmaVersion>=8&&(r.async=!!t),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(64|R(t,r.generator)|(n?128:0)),this.expect(v.parenL),r.params=this.parseBindingList(v.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(r,!1,!0,!1),this.yieldPos=i,this.awaitPos=a,this.awaitIdentPos=s,this.finishNode(r,\"FunctionExpression\")},ie.parseArrowExpression=function(e,t,n,r){var i=this.yieldPos,a=this.awaitPos,s=this.awaitIdentPos;return this.enterScope(16|R(n,!1)),this.initFunction(e),this.options.ecmaVersion>=8&&(e.async=!!n),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,e.params=this.toAssignableList(t,!0),this.parseFunctionBody(e,!0,!1,r),this.yieldPos=i,this.awaitPos=a,this.awaitIdentPos=s,this.finishNode(e,\"ArrowFunctionExpression\")},ie.parseFunctionBody=function(e,t,n,r){var i=t&&this.type!==v.braceL,a=this.strict,s=!1;if(i)e.body=this.parseMaybeAssign(r),e.expression=!0,this.checkParams(e,!1);else{var o=this.options.ecmaVersion>=7&&!this.isSimpleParamList(e.params);a&&!o||(s=this.strictDirective(this.end))&&o&&this.raiseRecoverable(e.start,\"Illegal 'use strict' directive in function with non-simple parameter list\");var l=this.labels;this.labels=[],s&&(this.strict=!0),this.checkParams(e,!a&&!s&&!t&&!n&&this.isSimpleParamList(e.params)),this.strict&&e.id&&this.checkLValSimple(e.id,5),e.body=this.parseBlock(!1,void 0,s&&!a),e.expression=!1,this.adaptDirectivePrologue(e.body.body),this.labels=l}this.exitScope()},ie.isSimpleParamList=function(e){for(var t=0,n=e;t<n.length;t+=1)if(\"Identifier\"!==n[t].type)return!1;return!0},ie.checkParams=function(e,t){for(var n=Object.create(null),r=0,i=e.params;r<i.length;r+=1){var a=i[r];this.checkLValInnerPattern(a,1,t?null:n)}},ie.parseExprList=function(e,t,n,r){for(var i=[],a=!0;!this.eat(e);){if(a)a=!1;else if(this.expect(v.comma),t&&this.afterTrailingComma(e))break;var s=void 0;n&&this.type===v.comma?s=null:this.type===v.ellipsis?(s=this.parseSpread(r),r&&this.type===v.comma&&r.trailingComma<0&&(r.trailingComma=this.start)):s=this.parseMaybeAssign(!1,r),i.push(s)}return i},ie.checkUnreserved=function(e){var t=e.start,n=e.end,r=e.name;this.inGenerator&&\"yield\"===r&&this.raiseRecoverable(t,\"Cannot use 'yield' as identifier inside a generator\"),this.inAsync&&\"await\"===r&&this.raiseRecoverable(t,\"Cannot use 'await' as identifier inside an async function\"),this.currentThisScope().inClassFieldInit&&\"arguments\"===r&&this.raiseRecoverable(t,\"Cannot use 'arguments' in class field initializer\"),!this.inClassStaticBlock||\"arguments\"!==r&&\"await\"!==r||this.raise(t,\"Cannot use \"+r+\" in class static initialization block\"),this.keywords.test(r)&&this.raise(t,\"Unexpected keyword '\"+r+\"'\"),this.options.ecmaVersion<6&&-1!==this.input.slice(t,n).indexOf(\"\\\\\")||(this.strict?this.reservedWordsStrict:this.reservedWords).test(r)&&(this.inAsync||\"await\"!==r||this.raiseRecoverable(t,\"Cannot use keyword 'await' outside an async function\"),this.raiseRecoverable(t,\"The keyword '\"+r+\"' is reserved\"))},ie.parseIdent=function(e){var t=this.parseIdentNode();return this.next(!!e),this.finishNode(t,\"Identifier\"),e||(this.checkUnreserved(t),\"await\"!==t.name||this.awaitIdentPos||(this.awaitIdentPos=t.start)),t},ie.parseIdentNode=function(){var e=this.startNode();return this.type===v.name?e.name=this.value:this.type.keyword?(e.name=this.type.keyword,\"class\"!==e.name&&\"function\"!==e.name||this.lastTokEnd===this.lastTokStart+1&&46===this.input.charCodeAt(this.lastTokStart)||this.context.pop(),this.type=v.name):this.unexpected(),e},ie.parsePrivateIdent=function(){var e=this.startNode();return this.type===v.privateId?e.name=this.value:this.unexpected(),this.next(),this.finishNode(e,\"PrivateIdentifier\"),this.options.checkPrivateFields&&(0===this.privateNameStack.length?this.raise(e.start,\"Private field '#\"+e.name+\"' must be declared in an enclosing class\"):this.privateNameStack[this.privateNameStack.length-1].used.push(e)),e},ie.parseYield=function(e){this.yieldPos||(this.yieldPos=this.start);var t=this.startNode();return this.next(),this.type===v.semi||this.canInsertSemicolon()||this.type!==v.star&&!this.type.startsExpr?(t.delegate=!1,t.argument=null):(t.delegate=this.eat(v.star),t.argument=this.parseMaybeAssign(e)),this.finishNode(t,\"YieldExpression\")},ie.parseAwait=function(e){this.awaitPos||(this.awaitPos=this.start);var t=this.startNode();return this.next(),t.argument=this.parseMaybeUnary(null,!0,!1,e),this.finishNode(t,\"AwaitExpression\")};var le=q.prototype;le.raise=function(e,t){var n=B(this.input,e);t+=\" (\"+n.line+\":\"+n.column+\")\";var r=new SyntaxError(t);throw r.pos=e,r.loc=n,r.raisedAt=this.pos,r},le.raiseRecoverable=le.raise,le.curPosition=function(){if(this.options.locations)return new j(this.curLine,this.pos-this.lineStart)};var ce=q.prototype,ue=function(e){this.flags=e,this.var=[],this.lexical=[],this.functions=[],this.inClassFieldInit=!1};ce.enterScope=function(e){this.scopeStack.push(new ue(e))},ce.exitScope=function(){this.scopeStack.pop()},ce.treatFunctionsAsVarInScope=function(e){return 2&e.flags||!this.inModule&&1&e.flags},ce.declareName=function(e,t,n){var r=!1;if(2===t){var i=this.currentScope();r=i.lexical.indexOf(e)>-1||i.functions.indexOf(e)>-1||i.var.indexOf(e)>-1,i.lexical.push(e),this.inModule&&1&i.flags&&delete this.undefinedExports[e]}else if(4===t)this.currentScope().lexical.push(e);else if(3===t){var a=this.currentScope();r=this.treatFunctionsAsVar?a.lexical.indexOf(e)>-1:a.lexical.indexOf(e)>-1||a.var.indexOf(e)>-1,a.functions.push(e)}else for(var s=this.scopeStack.length-1;s>=0;--s){var o=this.scopeStack[s];if(o.lexical.indexOf(e)>-1&&!(32&o.flags&&o.lexical[0]===e)||!this.treatFunctionsAsVarInScope(o)&&o.functions.indexOf(e)>-1){r=!0;break}if(o.var.push(e),this.inModule&&1&o.flags&&delete this.undefinedExports[e],259&o.flags)break}r&&this.raiseRecoverable(n,\"Identifier '\"+e+\"' has already been declared\")},ce.checkLocalExport=function(e){-1===this.scopeStack[0].lexical.indexOf(e.name)&&-1===this.scopeStack[0].var.indexOf(e.name)&&(this.undefinedExports[e.name]=e)},ce.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]},ce.currentVarScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if(259&t.flags)return t}},ce.currentThisScope=function(){for(var e=this.scopeStack.length-1;;e--){var t=this.scopeStack[e];if(259&t.flags&&!(16&t.flags))return t}};var pe=function(e,t,n){this.type=\"\",this.start=t,this.end=0,e.options.locations&&(this.loc=new M(e,n)),e.options.directSourceFile&&(this.sourceFile=e.options.directSourceFile),e.options.ranges&&(this.range=[t,0])},he=q.prototype;function de(e,t,n,r){return e.type=t,e.end=n,this.options.locations&&(e.loc.end=r),this.options.ranges&&(e.range[1]=n),e}he.startNode=function(){return new pe(this,this.start,this.startLoc)},he.startNodeAt=function(e,t){return new pe(this,e,t)},he.finishNode=function(e,t){return de.call(this,e,t,this.lastTokEnd,this.lastTokEndLoc)},he.finishNodeAt=function(e,t,n,r){return de.call(this,e,t,n,r)},he.copyNode=function(e){var t=new pe(this,e.start,this.startLoc);for(var n in e)t[n]=e[n];return t};for(var fe,me,ye=\"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\",ge=ye+\" Extended_Pictographic\",be=ge+\" EBase EComp EMod EPres ExtPict\",ve={9:ye,10:ge,11:ge,12:be,13:be,14:be},xe={9:\"\",10:\"\",11:\"\",12:\"\",13:\"\",14:\"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\"},Se=\"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\",Ee=\"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\",Te=Ee+\" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\",_e=Te+\" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\",ke=_e+\" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\",Pe=ke+\" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\",we={9:Ee,10:Te,11:_e,12:ke,13:Pe,14:Pe+\" Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz\"},Ae={},Ce=0,Ie=[9,10,11,12,13,14];Ce<Ie.length;Ce+=1)me=void 0,(me=Ae[fe=Ie[Ce]]={binary:O(ve[fe]+\" \"+Se),binaryOfStrings:O(xe[fe]),nonBinary:{General_Category:O(Se),Script:O(we[fe])}}).nonBinary.Script_Extensions=me.nonBinary.Script,me.nonBinary.gc=me.nonBinary.General_Category,me.nonBinary.sc=me.nonBinary.Script,me.nonBinary.scx=me.nonBinary.Script_Extensions;var Ne=q.prototype,Oe=function(e,t){this.parent=e,this.base=t||this};Oe.prototype.separatedFrom=function(e){for(var t=this;t;t=t.parent)for(var n=e;n;n=n.parent)if(t.base===n.base&&t!==n)return!0;return!1},Oe.prototype.sibling=function(){return new Oe(this.parent,this.base)};var De=function(e){this.parser=e,this.validFlags=\"gim\"+(e.options.ecmaVersion>=6?\"uy\":\"\")+(e.options.ecmaVersion>=9?\"s\":\"\")+(e.options.ecmaVersion>=13?\"d\":\"\")+(e.options.ecmaVersion>=15?\"v\":\"\"),this.unicodeProperties=Ae[e.options.ecmaVersion>=14?14:e.options.ecmaVersion],this.source=\"\",this.flags=\"\",this.start=0,this.switchU=!1,this.switchV=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue=\"\",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=Object.create(null),this.backReferenceNames=[],this.branchID=null};function Le(e){return 36===e||e>=40&&e<=43||46===e||63===e||e>=91&&e<=94||e>=123&&e<=125}function je(e){return e>=65&&e<=90||e>=97&&e<=122}function Me(e){return je(e)||95===e}function Be(e){return Me(e)||Fe(e)}function Fe(e){return e>=48&&e<=57}function Ve(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function Re(e){return e>=65&&e<=70?e-65+10:e>=97&&e<=102?e-97+10:e-48}function qe(e){return e>=48&&e<=55}De.prototype.reset=function(e,t,n){var r=-1!==n.indexOf(\"v\"),i=-1!==n.indexOf(\"u\");this.start=0|e,this.source=t+\"\",this.flags=n,r&&this.parser.options.ecmaVersion>=15?(this.switchU=!0,this.switchV=!0,this.switchN=!0):(this.switchU=i&&this.parser.options.ecmaVersion>=6,this.switchV=!1,this.switchN=i&&this.parser.options.ecmaVersion>=9)},De.prototype.raise=function(e){this.parser.raiseRecoverable(this.start,\"Invalid regular expression: /\"+this.source+\"/: \"+e)},De.prototype.at=function(e,t){void 0===t&&(t=!1);var n=this.source,r=n.length;if(e>=r)return-1;var i=n.charCodeAt(e);if(!t&&!this.switchU||i<=55295||i>=57344||e+1>=r)return i;var a=n.charCodeAt(e+1);return a>=56320&&a<=57343?(i<<10)+a-56613888:i},De.prototype.nextIndex=function(e,t){void 0===t&&(t=!1);var n=this.source,r=n.length;if(e>=r)return r;var i,a=n.charCodeAt(e);return!t&&!this.switchU||a<=55295||a>=57344||e+1>=r||(i=n.charCodeAt(e+1))<56320||i>57343?e+1:e+2},De.prototype.current=function(e){return void 0===e&&(e=!1),this.at(this.pos,e)},De.prototype.lookahead=function(e){return void 0===e&&(e=!1),this.at(this.nextIndex(this.pos,e),e)},De.prototype.advance=function(e){void 0===e&&(e=!1),this.pos=this.nextIndex(this.pos,e)},De.prototype.eat=function(e,t){return void 0===t&&(t=!1),this.current(t)===e&&(this.advance(t),!0)},De.prototype.eatChars=function(e,t){void 0===t&&(t=!1);for(var n=this.pos,r=0,i=e;r<i.length;r+=1){var a=i[r],s=this.at(n,t);if(-1===s||s!==a)return!1;n=this.nextIndex(n,t)}return this.pos=n,!0},Ne.validateRegExpFlags=function(e){for(var t=e.validFlags,n=e.flags,r=!1,i=!1,a=0;a<n.length;a++){var s=n.charAt(a);-1===t.indexOf(s)&&this.raise(e.start,\"Invalid regular expression flag\"),n.indexOf(s,a+1)>-1&&this.raise(e.start,\"Duplicate regular expression flag\"),\"u\"===s&&(r=!0),\"v\"===s&&(i=!0)}this.options.ecmaVersion>=15&&r&&i&&this.raise(e.start,\"Invalid regular expression flag\")},Ne.validateRegExpPattern=function(e){this.regexp_pattern(e),!e.switchN&&this.options.ecmaVersion>=9&&function(e){for(var t in e)return!0;return!1}(e.groupNames)&&(e.switchN=!0,this.regexp_pattern(e))},Ne.regexp_pattern=function(e){e.pos=0,e.lastIntValue=0,e.lastStringValue=\"\",e.lastAssertionIsQuantifiable=!1,e.numCapturingParens=0,e.maxBackReference=0,e.groupNames=Object.create(null),e.backReferenceNames.length=0,e.branchID=null,this.regexp_disjunction(e),e.pos!==e.source.length&&(e.eat(41)&&e.raise(\"Unmatched ')'\"),(e.eat(93)||e.eat(125))&&e.raise(\"Lone quantifier brackets\")),e.maxBackReference>e.numCapturingParens&&e.raise(\"Invalid escape\");for(var t=0,n=e.backReferenceNames;t<n.length;t+=1){var r=n[t];e.groupNames[r]||e.raise(\"Invalid named capture referenced\")}},Ne.regexp_disjunction=function(e){var t=this.options.ecmaVersion>=16;for(t&&(e.branchID=new Oe(e.branchID,null)),this.regexp_alternative(e);e.eat(124);)t&&(e.branchID=e.branchID.sibling()),this.regexp_alternative(e);t&&(e.branchID=e.branchID.parent),this.regexp_eatQuantifier(e,!0)&&e.raise(\"Nothing to repeat\"),e.eat(123)&&e.raise(\"Lone quantifier brackets\")},Ne.regexp_alternative=function(e){for(;e.pos<e.source.length&&this.regexp_eatTerm(e););},Ne.regexp_eatTerm=function(e){return this.regexp_eatAssertion(e)?(e.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(e)&&e.switchU&&e.raise(\"Invalid quantifier\"),!0):!!(e.switchU?this.regexp_eatAtom(e):this.regexp_eatExtendedAtom(e))&&(this.regexp_eatQuantifier(e),!0)},Ne.regexp_eatAssertion=function(e){var t=e.pos;if(e.lastAssertionIsQuantifiable=!1,e.eat(94)||e.eat(36))return!0;if(e.eat(92)){if(e.eat(66)||e.eat(98))return!0;e.pos=t}if(e.eat(40)&&e.eat(63)){var n=!1;if(this.options.ecmaVersion>=9&&(n=e.eat(60)),e.eat(61)||e.eat(33))return this.regexp_disjunction(e),e.eat(41)||e.raise(\"Unterminated group\"),e.lastAssertionIsQuantifiable=!n,!0}return e.pos=t,!1},Ne.regexp_eatQuantifier=function(e,t){return void 0===t&&(t=!1),!!this.regexp_eatQuantifierPrefix(e,t)&&(e.eat(63),!0)},Ne.regexp_eatQuantifierPrefix=function(e,t){return e.eat(42)||e.eat(43)||e.eat(63)||this.regexp_eatBracedQuantifier(e,t)},Ne.regexp_eatBracedQuantifier=function(e,t){var n=e.pos;if(e.eat(123)){var r=0,i=-1;if(this.regexp_eatDecimalDigits(e)&&(r=e.lastIntValue,e.eat(44)&&this.regexp_eatDecimalDigits(e)&&(i=e.lastIntValue),e.eat(125)))return-1!==i&&i<r&&!t&&e.raise(\"numbers out of order in {} quantifier\"),!0;e.switchU&&!t&&e.raise(\"Incomplete quantifier\"),e.pos=n}return!1},Ne.regexp_eatAtom=function(e){return this.regexp_eatPatternCharacters(e)||e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)},Ne.regexp_eatReverseSolidusAtomEscape=function(e){var t=e.pos;if(e.eat(92)){if(this.regexp_eatAtomEscape(e))return!0;e.pos=t}return!1},Ne.regexp_eatUncapturingGroup=function(e){var t=e.pos;if(e.eat(40)){if(e.eat(63)&&e.eat(58)){if(this.regexp_disjunction(e),e.eat(41))return!0;e.raise(\"Unterminated group\")}e.pos=t}return!1},Ne.regexp_eatCapturingGroup=function(e){if(e.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(e):63===e.current()&&e.raise(\"Invalid group\"),this.regexp_disjunction(e),e.eat(41))return e.numCapturingParens+=1,!0;e.raise(\"Unterminated group\")}return!1},Ne.regexp_eatExtendedAtom=function(e){return e.eat(46)||this.regexp_eatReverseSolidusAtomEscape(e)||this.regexp_eatCharacterClass(e)||this.regexp_eatUncapturingGroup(e)||this.regexp_eatCapturingGroup(e)||this.regexp_eatInvalidBracedQuantifier(e)||this.regexp_eatExtendedPatternCharacter(e)},Ne.regexp_eatInvalidBracedQuantifier=function(e){return this.regexp_eatBracedQuantifier(e,!0)&&e.raise(\"Nothing to repeat\"),!1},Ne.regexp_eatSyntaxCharacter=function(e){var t=e.current();return!!Le(t)&&(e.lastIntValue=t,e.advance(),!0)},Ne.regexp_eatPatternCharacters=function(e){for(var t=e.pos,n=0;-1!==(n=e.current())&&!Le(n);)e.advance();return e.pos!==t},Ne.regexp_eatExtendedPatternCharacter=function(e){var t=e.current();return!(-1===t||36===t||t>=40&&t<=43||46===t||63===t||91===t||94===t||124===t||(e.advance(),0))},Ne.regexp_groupSpecifier=function(e){if(e.eat(63)){this.regexp_eatGroupName(e)||e.raise(\"Invalid group\");var t=this.options.ecmaVersion>=16,n=e.groupNames[e.lastStringValue];if(n)if(t)for(var r=0,i=n;r<i.length;r+=1)i[r].separatedFrom(e.branchID)||e.raise(\"Duplicate capture group name\");else e.raise(\"Duplicate capture group name\");t?(n||(e.groupNames[e.lastStringValue]=[])).push(e.branchID):e.groupNames[e.lastStringValue]=!0}},Ne.regexp_eatGroupName=function(e){if(e.lastStringValue=\"\",e.eat(60)){if(this.regexp_eatRegExpIdentifierName(e)&&e.eat(62))return!0;e.raise(\"Invalid capture group name\")}return!1},Ne.regexp_eatRegExpIdentifierName=function(e){if(e.lastStringValue=\"\",this.regexp_eatRegExpIdentifierStart(e)){for(e.lastStringValue+=D(e.lastIntValue);this.regexp_eatRegExpIdentifierPart(e);)e.lastStringValue+=D(e.lastIntValue);return!0}return!1},Ne.regexp_eatRegExpIdentifierStart=function(e){var t=e.pos,n=this.options.ecmaVersion>=11,r=e.current(n);return e.advance(n),92===r&&this.regexp_eatRegExpUnicodeEscapeSequence(e,n)&&(r=e.lastIntValue),function(e){return p(e,!0)||36===e||95===e}(r)?(e.lastIntValue=r,!0):(e.pos=t,!1)},Ne.regexp_eatRegExpIdentifierPart=function(e){var t=e.pos,n=this.options.ecmaVersion>=11,r=e.current(n);return e.advance(n),92===r&&this.regexp_eatRegExpUnicodeEscapeSequence(e,n)&&(r=e.lastIntValue),function(e){return h(e,!0)||36===e||95===e||8204===e||8205===e}(r)?(e.lastIntValue=r,!0):(e.pos=t,!1)},Ne.regexp_eatAtomEscape=function(e){return!!(this.regexp_eatBackReference(e)||this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)||e.switchN&&this.regexp_eatKGroupName(e))||(e.switchU&&(99===e.current()&&e.raise(\"Invalid unicode escape\"),e.raise(\"Invalid escape\")),!1)},Ne.regexp_eatBackReference=function(e){var t=e.pos;if(this.regexp_eatDecimalEscape(e)){var n=e.lastIntValue;if(e.switchU)return n>e.maxBackReference&&(e.maxBackReference=n),!0;if(n<=e.numCapturingParens)return!0;e.pos=t}return!1},Ne.regexp_eatKGroupName=function(e){if(e.eat(107)){if(this.regexp_eatGroupName(e))return e.backReferenceNames.push(e.lastStringValue),!0;e.raise(\"Invalid named reference\")}return!1},Ne.regexp_eatCharacterEscape=function(e){return this.regexp_eatControlEscape(e)||this.regexp_eatCControlLetter(e)||this.regexp_eatZero(e)||this.regexp_eatHexEscapeSequence(e)||this.regexp_eatRegExpUnicodeEscapeSequence(e,!1)||!e.switchU&&this.regexp_eatLegacyOctalEscapeSequence(e)||this.regexp_eatIdentityEscape(e)},Ne.regexp_eatCControlLetter=function(e){var t=e.pos;if(e.eat(99)){if(this.regexp_eatControlLetter(e))return!0;e.pos=t}return!1},Ne.regexp_eatZero=function(e){return 48===e.current()&&!Fe(e.lookahead())&&(e.lastIntValue=0,e.advance(),!0)},Ne.regexp_eatControlEscape=function(e){var t=e.current();return 116===t?(e.lastIntValue=9,e.advance(),!0):110===t?(e.lastIntValue=10,e.advance(),!0):118===t?(e.lastIntValue=11,e.advance(),!0):102===t?(e.lastIntValue=12,e.advance(),!0):114===t&&(e.lastIntValue=13,e.advance(),!0)},Ne.regexp_eatControlLetter=function(e){var t=e.current();return!!je(t)&&(e.lastIntValue=t%32,e.advance(),!0)},Ne.regexp_eatRegExpUnicodeEscapeSequence=function(e,t){void 0===t&&(t=!1);var n,r=e.pos,i=t||e.switchU;if(e.eat(117)){if(this.regexp_eatFixedHexDigits(e,4)){var a=e.lastIntValue;if(i&&a>=55296&&a<=56319){var s=e.pos;if(e.eat(92)&&e.eat(117)&&this.regexp_eatFixedHexDigits(e,4)){var o=e.lastIntValue;if(o>=56320&&o<=57343)return e.lastIntValue=1024*(a-55296)+(o-56320)+65536,!0}e.pos=s,e.lastIntValue=a}return!0}if(i&&e.eat(123)&&this.regexp_eatHexDigits(e)&&e.eat(125)&&(n=e.lastIntValue)>=0&&n<=1114111)return!0;i&&e.raise(\"Invalid unicode escape\"),e.pos=r}return!1},Ne.regexp_eatIdentityEscape=function(e){if(e.switchU)return!!this.regexp_eatSyntaxCharacter(e)||!!e.eat(47)&&(e.lastIntValue=47,!0);var t=e.current();return!(99===t||e.switchN&&107===t||(e.lastIntValue=t,e.advance(),0))},Ne.regexp_eatDecimalEscape=function(e){e.lastIntValue=0;var t=e.current();if(t>=49&&t<=57){do{e.lastIntValue=10*e.lastIntValue+(t-48),e.advance()}while((t=e.current())>=48&&t<=57);return!0}return!1},Ne.regexp_eatCharacterClassEscape=function(e){var t=e.current();if(function(e){return 100===e||68===e||115===e||83===e||119===e||87===e}(t))return e.lastIntValue=-1,e.advance(),1;var n=!1;if(e.switchU&&this.options.ecmaVersion>=9&&((n=80===t)||112===t)){var r;if(e.lastIntValue=-1,e.advance(),e.eat(123)&&(r=this.regexp_eatUnicodePropertyValueExpression(e))&&e.eat(125))return n&&2===r&&e.raise(\"Invalid property name\"),r;e.raise(\"Invalid property name\")}return 0},Ne.regexp_eatUnicodePropertyValueExpression=function(e){var t=e.pos;if(this.regexp_eatUnicodePropertyName(e)&&e.eat(61)){var n=e.lastStringValue;if(this.regexp_eatUnicodePropertyValue(e)){var r=e.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(e,n,r),1}}if(e.pos=t,this.regexp_eatLoneUnicodePropertyNameOrValue(e)){var i=e.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(e,i)}return 0},Ne.regexp_validateUnicodePropertyNameAndValue=function(e,t,n){C(e.unicodeProperties.nonBinary,t)||e.raise(\"Invalid property name\"),e.unicodeProperties.nonBinary[t].test(n)||e.raise(\"Invalid property value\")},Ne.regexp_validateUnicodePropertyNameOrValue=function(e,t){return e.unicodeProperties.binary.test(t)?1:e.switchV&&e.unicodeProperties.binaryOfStrings.test(t)?2:void e.raise(\"Invalid property name\")},Ne.regexp_eatUnicodePropertyName=function(e){var t=0;for(e.lastStringValue=\"\";Me(t=e.current());)e.lastStringValue+=D(t),e.advance();return\"\"!==e.lastStringValue},Ne.regexp_eatUnicodePropertyValue=function(e){var t=0;for(e.lastStringValue=\"\";Be(t=e.current());)e.lastStringValue+=D(t),e.advance();return\"\"!==e.lastStringValue},Ne.regexp_eatLoneUnicodePropertyNameOrValue=function(e){return this.regexp_eatUnicodePropertyValue(e)},Ne.regexp_eatCharacterClass=function(e){if(e.eat(91)){var t=e.eat(94),n=this.regexp_classContents(e);return e.eat(93)||e.raise(\"Unterminated character class\"),t&&2===n&&e.raise(\"Negated character class may contain strings\"),!0}return!1},Ne.regexp_classContents=function(e){return 93===e.current()?1:e.switchV?this.regexp_classSetExpression(e):(this.regexp_nonEmptyClassRanges(e),1)},Ne.regexp_nonEmptyClassRanges=function(e){for(;this.regexp_eatClassAtom(e);){var t=e.lastIntValue;if(e.eat(45)&&this.regexp_eatClassAtom(e)){var n=e.lastIntValue;!e.switchU||-1!==t&&-1!==n||e.raise(\"Invalid character class\"),-1!==t&&-1!==n&&t>n&&e.raise(\"Range out of order in character class\")}}},Ne.regexp_eatClassAtom=function(e){var t=e.pos;if(e.eat(92)){if(this.regexp_eatClassEscape(e))return!0;if(e.switchU){var n=e.current();(99===n||qe(n))&&e.raise(\"Invalid class escape\"),e.raise(\"Invalid escape\")}e.pos=t}var r=e.current();return 93!==r&&(e.lastIntValue=r,e.advance(),!0)},Ne.regexp_eatClassEscape=function(e){var t=e.pos;if(e.eat(98))return e.lastIntValue=8,!0;if(e.switchU&&e.eat(45))return e.lastIntValue=45,!0;if(!e.switchU&&e.eat(99)){if(this.regexp_eatClassControlLetter(e))return!0;e.pos=t}return this.regexp_eatCharacterClassEscape(e)||this.regexp_eatCharacterEscape(e)},Ne.regexp_classSetExpression=function(e){var t,n=1;if(this.regexp_eatClassSetRange(e));else if(t=this.regexp_eatClassSetOperand(e)){2===t&&(n=2);for(var r=e.pos;e.eatChars([38,38]);)38!==e.current()&&(t=this.regexp_eatClassSetOperand(e))?2!==t&&(n=1):e.raise(\"Invalid character in character class\");if(r!==e.pos)return n;for(;e.eatChars([45,45]);)this.regexp_eatClassSetOperand(e)||e.raise(\"Invalid character in character class\");if(r!==e.pos)return n}else e.raise(\"Invalid character in character class\");for(;;)if(!this.regexp_eatClassSetRange(e)){if(!(t=this.regexp_eatClassSetOperand(e)))return n;2===t&&(n=2)}},Ne.regexp_eatClassSetRange=function(e){var t=e.pos;if(this.regexp_eatClassSetCharacter(e)){var n=e.lastIntValue;if(e.eat(45)&&this.regexp_eatClassSetCharacter(e)){var r=e.lastIntValue;return-1!==n&&-1!==r&&n>r&&e.raise(\"Range out of order in character class\"),!0}e.pos=t}return!1},Ne.regexp_eatClassSetOperand=function(e){return this.regexp_eatClassSetCharacter(e)?1:this.regexp_eatClassStringDisjunction(e)||this.regexp_eatNestedClass(e)},Ne.regexp_eatNestedClass=function(e){var t=e.pos;if(e.eat(91)){var n=e.eat(94),r=this.regexp_classContents(e);if(e.eat(93))return n&&2===r&&e.raise(\"Negated character class may contain strings\"),r;e.pos=t}if(e.eat(92)){var i=this.regexp_eatCharacterClassEscape(e);if(i)return i;e.pos=t}return null},Ne.regexp_eatClassStringDisjunction=function(e){var t=e.pos;if(e.eatChars([92,113])){if(e.eat(123)){var n=this.regexp_classStringDisjunctionContents(e);if(e.eat(125))return n}else e.raise(\"Invalid escape\");e.pos=t}return null},Ne.regexp_classStringDisjunctionContents=function(e){for(var t=this.regexp_classString(e);e.eat(124);)2===this.regexp_classString(e)&&(t=2);return t},Ne.regexp_classString=function(e){for(var t=0;this.regexp_eatClassSetCharacter(e);)t++;return 1===t?1:2},Ne.regexp_eatClassSetCharacter=function(e){var t=e.pos;if(e.eat(92))return!(!this.regexp_eatCharacterEscape(e)&&!this.regexp_eatClassSetReservedPunctuator(e)&&(e.eat(98)?(e.lastIntValue=8,0):(e.pos=t,1)));var n=e.current();return!(n<0||n===e.lookahead()&&function(e){return 33===e||e>=35&&e<=38||e>=42&&e<=44||46===e||e>=58&&e<=64||94===e||96===e||126===e}(n)||function(e){return 40===e||41===e||45===e||47===e||e>=91&&e<=93||e>=123&&e<=125}(n)||(e.advance(),e.lastIntValue=n,0))},Ne.regexp_eatClassSetReservedPunctuator=function(e){var t=e.current();return!!function(e){return 33===e||35===e||37===e||38===e||44===e||45===e||e>=58&&e<=62||64===e||96===e||126===e}(t)&&(e.lastIntValue=t,e.advance(),!0)},Ne.regexp_eatClassControlLetter=function(e){var t=e.current();return!(!Fe(t)&&95!==t||(e.lastIntValue=t%32,e.advance(),0))},Ne.regexp_eatHexEscapeSequence=function(e){var t=e.pos;if(e.eat(120)){if(this.regexp_eatFixedHexDigits(e,2))return!0;e.switchU&&e.raise(\"Invalid escape\"),e.pos=t}return!1},Ne.regexp_eatDecimalDigits=function(e){var t=e.pos,n=0;for(e.lastIntValue=0;Fe(n=e.current());)e.lastIntValue=10*e.lastIntValue+(n-48),e.advance();return e.pos!==t},Ne.regexp_eatHexDigits=function(e){var t=e.pos,n=0;for(e.lastIntValue=0;Ve(n=e.current());)e.lastIntValue=16*e.lastIntValue+Re(n),e.advance();return e.pos!==t},Ne.regexp_eatLegacyOctalEscapeSequence=function(e){if(this.regexp_eatOctalDigit(e)){var t=e.lastIntValue;if(this.regexp_eatOctalDigit(e)){var n=e.lastIntValue;t<=3&&this.regexp_eatOctalDigit(e)?e.lastIntValue=64*t+8*n+e.lastIntValue:e.lastIntValue=8*t+n}else e.lastIntValue=t;return!0}return!1},Ne.regexp_eatOctalDigit=function(e){var t=e.current();return qe(t)?(e.lastIntValue=t-48,e.advance(),!0):(e.lastIntValue=0,!1)},Ne.regexp_eatFixedHexDigits=function(e,t){var n=e.pos;e.lastIntValue=0;for(var r=0;r<t;++r){var i=e.current();if(!Ve(i))return e.pos=n,!1;e.lastIntValue=16*e.lastIntValue+Re(i),e.advance()}return!0};var Ue=function(e){this.type=e.type,this.value=e.value,this.start=e.start,this.end=e.end,e.options.locations&&(this.loc=new M(e,e.startLoc,e.endLoc)),e.options.ranges&&(this.range=[e.start,e.end])},ze=q.prototype;function We(e){return\"function\"!=typeof BigInt?null:BigInt(e.replace(/_/g,\"\"))}ze.next=function(e){!e&&this.type.keyword&&this.containsEsc&&this.raiseRecoverable(this.start,\"Escape sequence in keyword \"+this.type.keyword),this.options.onToken&&this.options.onToken(new Ue(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken()},ze.getToken=function(){return this.next(),new Ue(this)},\"undefined\"!=typeof Symbol&&(ze[Symbol.iterator]=function(){var e=this;return{next:function(){var t=e.getToken();return{done:t.type===v.eof,value:t}}}}),ze.nextToken=function(){var e=this.curContext();return e&&e.preserveSpace||this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length?this.finishToken(v.eof):e.override?e.override(this):void this.readToken(this.fullCharCodeAtPos())},ze.readToken=function(e){return p(e,this.options.ecmaVersion>=6)||92===e?this.readWord():this.getTokenFromCode(e)},ze.fullCharCodeAtPos=function(){var e=this.input.charCodeAt(this.pos);if(e<=55295||e>=56320)return e;var t=this.input.charCodeAt(this.pos+1);return t<=56319||t>=57344?e:(e<<10)+t-56613888},ze.skipBlockComment=function(){var e=this.options.onComment&&this.curPosition(),t=this.pos,n=this.input.indexOf(\"*/\",this.pos+=2);if(-1===n&&this.raise(this.pos-2,\"Unterminated comment\"),this.pos=n+2,this.options.locations)for(var r=void 0,i=t;(r=T(this.input,i,this.pos))>-1;)++this.curLine,i=this.lineStart=r;this.options.onComment&&this.options.onComment(!0,this.input.slice(t+2,n),t,this.pos,e,this.curPosition())},ze.skipLineComment=function(e){for(var t=this.pos,n=this.options.onComment&&this.curPosition(),r=this.input.charCodeAt(this.pos+=e);this.pos<this.input.length&&!E(r);)r=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(t+e,this.pos),t,this.pos,n,this.curPosition())},ze.skipSpace=function(){e:for(;this.pos<this.input.length;){var e=this.input.charCodeAt(this.pos);switch(e){case 32:case 160:++this.pos;break;case 13:10===this.input.charCodeAt(this.pos+1)&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break e}break;default:if(!(e>8&&e<14||e>=5760&&_.test(String.fromCharCode(e))))break e;++this.pos}}},ze.finishToken=function(e,t){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var n=this.type;this.type=e,this.value=t,this.updateContext(n)},ze.readToken_dot=function(){var e=this.input.charCodeAt(this.pos+1);if(e>=48&&e<=57)return this.readNumber(!0);var t=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&46===e&&46===t?(this.pos+=3,this.finishToken(v.ellipsis)):(++this.pos,this.finishToken(v.dot))},ze.readToken_slash=function(){var e=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):61===e?this.finishOp(v.assign,2):this.finishOp(v.slash,1)},ze.readToken_mult_modulo_exp=function(e){var t=this.input.charCodeAt(this.pos+1),n=1,r=42===e?v.star:v.modulo;return this.options.ecmaVersion>=7&&42===e&&42===t&&(++n,r=v.starstar,t=this.input.charCodeAt(this.pos+2)),61===t?this.finishOp(v.assign,n+1):this.finishOp(r,n)},ze.readToken_pipe_amp=function(e){var t=this.input.charCodeAt(this.pos+1);return t===e?this.options.ecmaVersion>=12&&61===this.input.charCodeAt(this.pos+2)?this.finishOp(v.assign,3):this.finishOp(124===e?v.logicalOR:v.logicalAND,2):61===t?this.finishOp(v.assign,2):this.finishOp(124===e?v.bitwiseOR:v.bitwiseAND,1)},ze.readToken_caret=function(){return 61===this.input.charCodeAt(this.pos+1)?this.finishOp(v.assign,2):this.finishOp(v.bitwiseXOR,1)},ze.readToken_plus_min=function(e){var t=this.input.charCodeAt(this.pos+1);return t===e?45!==t||this.inModule||62!==this.input.charCodeAt(this.pos+2)||0!==this.lastTokEnd&&!x.test(this.input.slice(this.lastTokEnd,this.pos))?this.finishOp(v.incDec,2):(this.skipLineComment(3),this.skipSpace(),this.nextToken()):61===t?this.finishOp(v.assign,2):this.finishOp(v.plusMin,1)},ze.readToken_lt_gt=function(e){var t=this.input.charCodeAt(this.pos+1),n=1;return t===e?(n=62===e&&62===this.input.charCodeAt(this.pos+2)?3:2,61===this.input.charCodeAt(this.pos+n)?this.finishOp(v.assign,n+1):this.finishOp(v.bitShift,n)):33!==t||60!==e||this.inModule||45!==this.input.charCodeAt(this.pos+2)||45!==this.input.charCodeAt(this.pos+3)?(61===t&&(n=2),this.finishOp(v.relational,n)):(this.skipLineComment(4),this.skipSpace(),this.nextToken())},ze.readToken_eq_excl=function(e){var t=this.input.charCodeAt(this.pos+1);return 61===t?this.finishOp(v.equality,61===this.input.charCodeAt(this.pos+2)?3:2):61===e&&62===t&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(v.arrow)):this.finishOp(61===e?v.eq:v.prefix,1)},ze.readToken_question=function(){var e=this.options.ecmaVersion;if(e>=11){var t=this.input.charCodeAt(this.pos+1);if(46===t){var n=this.input.charCodeAt(this.pos+2);if(n<48||n>57)return this.finishOp(v.questionDot,2)}if(63===t)return e>=12&&61===this.input.charCodeAt(this.pos+2)?this.finishOp(v.assign,3):this.finishOp(v.coalesce,2)}return this.finishOp(v.question,1)},ze.readToken_numberSign=function(){var e=35;if(this.options.ecmaVersion>=13&&(++this.pos,p(e=this.fullCharCodeAtPos(),!0)||92===e))return this.finishToken(v.privateId,this.readWord1());this.raise(this.pos,\"Unexpected character '\"+D(e)+\"'\")},ze.getTokenFromCode=function(e){switch(e){case 46:return this.readToken_dot();case 40:return++this.pos,this.finishToken(v.parenL);case 41:return++this.pos,this.finishToken(v.parenR);case 59:return++this.pos,this.finishToken(v.semi);case 44:return++this.pos,this.finishToken(v.comma);case 91:return++this.pos,this.finishToken(v.bracketL);case 93:return++this.pos,this.finishToken(v.bracketR);case 123:return++this.pos,this.finishToken(v.braceL);case 125:return++this.pos,this.finishToken(v.braceR);case 58:return++this.pos,this.finishToken(v.colon);case 96:if(this.options.ecmaVersion<6)break;return++this.pos,this.finishToken(v.backQuote);case 48:var t=this.input.charCodeAt(this.pos+1);if(120===t||88===t)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(111===t||79===t)return this.readRadixNumber(8);if(98===t||66===t)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(e);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(e);case 124:case 38:return this.readToken_pipe_amp(e);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(e);case 60:case 62:return this.readToken_lt_gt(e);case 61:case 33:return this.readToken_eq_excl(e);case 63:return this.readToken_question();case 126:return this.finishOp(v.prefix,1);case 35:return this.readToken_numberSign()}this.raise(this.pos,\"Unexpected character '\"+D(e)+\"'\")},ze.finishOp=function(e,t){var n=this.input.slice(this.pos,this.pos+t);return this.pos+=t,this.finishToken(e,n)},ze.readRegexp=function(){for(var e,t,n=this.pos;;){this.pos>=this.input.length&&this.raise(n,\"Unterminated regular expression\");var r=this.input.charAt(this.pos);if(x.test(r)&&this.raise(n,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===r)t=!0;else if(\"]\"===r&&t)t=!1;else if(\"/\"===r&&!t)break;e=\"\\\\\"===r}++this.pos}var i=this.input.slice(n,this.pos);++this.pos;var a=this.pos,s=this.readWord1();this.containsEsc&&this.unexpected(a);var o=this.regexpState||(this.regexpState=new De(this));o.reset(n,i,s),this.validateRegExpFlags(o),this.validateRegExpPattern(o);var l=null;try{l=RegExp(i,s)}catch(e){}return this.finishToken(v.regexp,{pattern:i,flags:s,value:l})},ze.readInt=function(e,t,n){for(var r=this.options.ecmaVersion>=12&&void 0===t,i=n&&48===this.input.charCodeAt(this.pos),a=this.pos,s=0,o=0,l=0,c=null==t?1/0:t;l<c;++l,++this.pos){var u=this.input.charCodeAt(this.pos),p=void 0;if(r&&95===u)i&&this.raiseRecoverable(this.pos,\"Numeric separator is not allowed in legacy octal numeric literals\"),95===o&&this.raiseRecoverable(this.pos,\"Numeric separator must be exactly one underscore\"),0===l&&this.raiseRecoverable(this.pos,\"Numeric separator is not allowed at the first of digits\"),o=u;else{if((p=u>=97?u-97+10:u>=65?u-65+10:u>=48&&u<=57?u-48:1/0)>=e)break;o=u,s=s*e+p}}return r&&95===o&&this.raiseRecoverable(this.pos-1,\"Numeric separator is not allowed at the last of digits\"),this.pos===a||null!=t&&this.pos-a!==t?null:s},ze.readRadixNumber=function(e){var t=this.pos;this.pos+=2;var n=this.readInt(e);return null==n&&this.raise(this.start+2,\"Expected number in radix \"+e),this.options.ecmaVersion>=11&&110===this.input.charCodeAt(this.pos)?(n=We(this.input.slice(t,this.pos)),++this.pos):p(this.fullCharCodeAtPos())&&this.raise(this.pos,\"Identifier directly after number\"),this.finishToken(v.num,n)},ze.readNumber=function(e){var t=this.pos;e||null!==this.readInt(10,void 0,!0)||this.raise(t,\"Invalid number\");var n=this.pos-t>=2&&48===this.input.charCodeAt(t);n&&this.strict&&this.raise(t,\"Invalid number\");var r=this.input.charCodeAt(this.pos);if(!n&&!e&&this.options.ecmaVersion>=11&&110===r){var i=We(this.input.slice(t,this.pos));return++this.pos,p(this.fullCharCodeAtPos())&&this.raise(this.pos,\"Identifier directly after number\"),this.finishToken(v.num,i)}n&&/[89]/.test(this.input.slice(t,this.pos))&&(n=!1),46!==r||n||(++this.pos,this.readInt(10),r=this.input.charCodeAt(this.pos)),69!==r&&101!==r||n||(43!==(r=this.input.charCodeAt(++this.pos))&&45!==r||++this.pos,null===this.readInt(10)&&this.raise(t,\"Invalid number\")),p(this.fullCharCodeAtPos())&&this.raise(this.pos,\"Identifier directly after number\");var a,s=(a=this.input.slice(t,this.pos),n?parseInt(a,8):parseFloat(a.replace(/_/g,\"\")));return this.finishToken(v.num,s)},ze.readCodePoint=function(){var e;if(123===this.input.charCodeAt(this.pos)){this.options.ecmaVersion<6&&this.unexpected();var t=++this.pos;e=this.readHexChar(this.input.indexOf(\"}\",this.pos)-this.pos),++this.pos,e>1114111&&this.invalidStringToken(t,\"Code point out of bounds\")}else e=this.readHexChar(4);return e},ze.readString=function(e){for(var t=\"\",n=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,\"Unterminated string constant\");var r=this.input.charCodeAt(this.pos);if(r===e)break;92===r?(t+=this.input.slice(n,this.pos),t+=this.readEscapedChar(!1),n=this.pos):8232===r||8233===r?(this.options.ecmaVersion<10&&this.raise(this.start,\"Unterminated string constant\"),++this.pos,this.options.locations&&(this.curLine++,this.lineStart=this.pos)):(E(r)&&this.raise(this.start,\"Unterminated string constant\"),++this.pos)}return t+=this.input.slice(n,this.pos++),this.finishToken(v.string,t)};var Ge={};ze.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken()}catch(e){if(e!==Ge)throw e;this.readInvalidTemplateToken()}this.inTemplateElement=!1},ze.invalidStringToken=function(e,t){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw Ge;this.raise(e,t)},ze.readTmplToken=function(){for(var e=\"\",t=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,\"Unterminated template\");var n=this.input.charCodeAt(this.pos);if(96===n||36===n&&123===this.input.charCodeAt(this.pos+1))return this.pos!==this.start||this.type!==v.template&&this.type!==v.invalidTemplate?(e+=this.input.slice(t,this.pos),this.finishToken(v.template,e)):36===n?(this.pos+=2,this.finishToken(v.dollarBraceL)):(++this.pos,this.finishToken(v.backQuote));if(92===n)e+=this.input.slice(t,this.pos),e+=this.readEscapedChar(!0),t=this.pos;else if(E(n)){switch(e+=this.input.slice(t,this.pos),++this.pos,n){case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:e+=\"\\n\";break;default:e+=String.fromCharCode(n)}this.options.locations&&(++this.curLine,this.lineStart=this.pos),t=this.pos}else++this.pos}},ze.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case\"\\\\\":++this.pos;break;case\"$\":if(\"{\"!==this.input[this.pos+1])break;case\"`\":return this.finishToken(v.invalidTemplate,this.input.slice(this.start,this.pos));case\"\\r\":\"\\n\"===this.input[this.pos+1]&&++this.pos;case\"\\n\":case\"\\u2028\":case\"\\u2029\":++this.curLine,this.lineStart=this.pos+1}this.raise(this.start,\"Unterminated template\")},ze.readEscapedChar=function(e){var t=this.input.charCodeAt(++this.pos);switch(++this.pos,t){case 110:return\"\\n\";case 114:return\"\\r\";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return D(this.readCodePoint());case 116:return\"\\t\";case 98:return\"\\b\";case 118:return\"\\v\";case 102:return\"\\f\";case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),\"\";case 56:case 57:if(this.strict&&this.invalidStringToken(this.pos-1,\"Invalid escape sequence\"),e){var n=this.pos-1;this.invalidStringToken(n,\"Invalid escape sequence in template string\")}default:if(t>=48&&t<=55){var r=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],i=parseInt(r,8);return i>255&&(r=r.slice(0,-1),i=parseInt(r,8)),this.pos+=r.length-1,t=this.input.charCodeAt(this.pos),\"0\"===r&&56!==t&&57!==t||!this.strict&&!e||this.invalidStringToken(this.pos-1-r.length,e?\"Octal literal in template string\":\"Octal literal in strict mode\"),String.fromCharCode(i)}return E(t)?(this.options.locations&&(this.lineStart=this.pos,++this.curLine),\"\"):String.fromCharCode(t)}},ze.readHexChar=function(e){var t=this.pos,n=this.readInt(16,e);return null===n&&this.invalidStringToken(t,\"Bad character escape sequence\"),n},ze.readWord1=function(){this.containsEsc=!1;for(var e=\"\",t=!0,n=this.pos,r=this.options.ecmaVersion>=6;this.pos<this.input.length;){var i=this.fullCharCodeAtPos();if(h(i,r))this.pos+=i<=65535?1:2;else{if(92!==i)break;this.containsEsc=!0,e+=this.input.slice(n,this.pos);var a=this.pos;117!==this.input.charCodeAt(++this.pos)&&this.invalidStringToken(this.pos,\"Expecting Unicode escape sequence \\\\uXXXX\"),++this.pos;var s=this.readCodePoint();(t?p:h)(s,r)||this.invalidStringToken(a,\"Invalid Unicode escape\"),e+=D(s),n=this.pos}t=!1}return e+this.input.slice(n,this.pos)},ze.readWord=function(){var e=this.readWord1(),t=v.name;return this.keywords.test(e)&&(t=g[e]),this.finishToken(t,e)};var Je=\"8.12.1\";q.acorn={Parser:q,version:Je,defaultOptions:F,Position:j,SourceLocation:M,getLineInfo:B,Node:pe,TokenType:d,tokTypes:v,keywordTypes:g,TokContext:te,tokContexts:ne,isIdentifierChar:h,isIdentifierStart:p,Token:Ue,isNewLine:E,lineBreak:x,lineBreakG:S,nonASCIIwhitespace:_},e.Node=pe,e.Parser=q,e.Position=j,e.SourceLocation=M,e.TokContext=te,e.Token=Ue,e.TokenType=d,e.defaultOptions=F,e.getLineInfo=B,e.isIdentifierChar=h,e.isIdentifierStart=p,e.isNewLine=E,e.keywordTypes=g,e.lineBreak=x,e.lineBreakG=S,e.nonASCIIwhitespace=_,e.parse=function(e,t){return q.parse(e,t)},e.parseExpressionAt=function(e,t,n){return q.parseExpressionAt(e,t,n)},e.tokContexts=ne,e.tokTypes=v,e.tokenizer=function(e,t){return q.tokenizer(e,t)},e.version=Je}(t)}(0,Qi.exports)),Qi.exports}Object.defineProperty(Yi,\"__esModule\",{value:!0});var ea=Yi.parse=void 0,ta=sr;function na(e,t){return Ze.parse(e,{parser:{parse:(e,t)=>ea(e,{...t,ecmaVersion:\"latest\"})},...t})}ea=Yi.parse=function(e,t){var n=[],r=[],i=Zi().parse(e,{allowHashBang:!0,allowImportExportEverywhere:!0,allowReturnOutsideFunction:!0,ecmaVersion:(0,ta.getOption)(t,\"ecmaVersion\",8),sourceType:(0,ta.getOption)(t,\"sourceType\",\"module\"),locations:!0,onComment:n,onToken:r});return i.comments||(i.comments=n),i.tokens||(i.tokens=r),i};const ra=Kr.identifier(\"_scope\"),ia=e=>e&&e.name?e.name:e;function aa(e,t){ba(t),e.replace(Kr.memberExpression(ra,t,!1))}function sa(e){if(!hi(e))return aa(e,e.node),!1;this.traverse(e)}function oa(e){const t=()=>this.traverse(e.get(\"object\")),n=e.node.object;switch(!0){case hi(e):n.arguments&&n.arguments.length&&t();break;case!e.value.computed&&Zr(n):aa(e,e.node);break;default:this.traverse(e)}return!1}function la(e){const t=e.node.value,n=e.node.shorthand;return Zr(t)||ai(t)||n?(n&&(e.node.shorthand=!1),sa.call(this,e.get(\"value\"))):this.traverse(e.get(\"value\")),!1}function ca(e){e.replace(ra),this.traverse(e)}function ua(e){const t=e.parent.value;return(!ai(t)&&t.key!==e.node||t.computed)&&sa.call(this,e),!1}function pa(e){return Hr.visit(e,{visitIdentifier:ua,visitMemberExpression:oa,visitObjectProperty:la,visitThisExpression:ca,visitClassExpression:()=>!1}),e}function ha(e,t,n){return na(`(${t?Oi(e.text,n,e):e.text})`,{sourceFileName:t})}function da(e){return Ii(\"template\",e?xa(...e):Ci())}function fa(e){return e.expressions?e.expressions[0]:{...e,text:e.value}}function ma(e){const t=Kr.arrowFunctionExpression([ra],e);return(e=>Xr.ObjectExpression.check(e))(e)&&(e.extra={parenthesized:!0}),t}function ya(e,t,n){return ui(ma,ga)(e,t,n)}function ga(e,t,n){return ui(ba,va,pa,ha)(e,t,n)}function ba(e){return e.extra&&(e.extra.parenthesized=!1),e}function va(e){const t=e.program.body;return t[0]?t[0].expression:t}function xa(e,t){return Kr.callExpression(Kr.identifier(je),[e?Kr.literal(e):Ci(),t?Kr.arrayExpression(t):Ci()])}const Sa=e=>Kr.arrowFunctionExpression([je,Le,De,Me].map(Kr.identifier),e),Ea=e=>`[${e}]`;function Ta(e){return e?[Ii(\"redundantAttribute\",Kr.literal(e)),Ii(\"selector\",ui(Kr.literal,Ea)(e))]:[]}function _a(e,t){return t?e.filter((e=>e.name!==t)):e}function ka(e){return Ia(e).filter((e=>![qe,Ue,ze,We,Je].includes(e.name)))}function Pa(e){return{nodes:Ca(e),isRoot:!0}}function wa(e){return{...Pa(e),isNestedRoot:!0,attributes:ka(e)}}function Aa(e){return e.map((e=>e.expressions?e:{...e,expressions:[{start:e.valueStart,end:e.end,text:`'${e.value?e.value:e[Ke]?e.name:\"\"}'`}]}))}function Ca(e){return e&&e.nodes?e.nodes:[]}function Ia(e){return e.attributes?e.attributes:[]}function Na(e,t,n){const r=Ai(e),i=e=>`'${e}'`;return r?r.expressions?ma(ja(r,t,n)):ya({...r,text:i(r.value)},t,n):ya({...e,text:i(ia(e))},t,n)}function Oa(e,t){return e.unescape?{...e,[t]:Ji(e[t],e.unescape)}:e}function Da(e){const t=function(e){return function(e){return Ia(e).filter((e=>!xi(e)))}(e).map((e=>e[Ke]||!e.value?e.name:`${e.name}=\"${Oa(e,\"value\").value}\"`)).join(\" \")}(e);switch(!0){case yi(e):return`<${e.name}${t?\" \"+t:\"\"}${mi(e)?\"/\":\"\"}>`;case gi(e):return xi(e)?\" \":Oa(e,\"text\").text;default:return e.text||\"\"}}function La(e){return Kr.callExpression(Kr.memberExpression(Kr.arrayExpression(e),Kr.identifier(\"join\"),!1),[Kr.literal(\"\")])}function ja(e,t,n){if(!e.parts||1===e.parts.length)return ga(e.expressions[0],t,n);const r=[...e.parts.reduce(((r,i)=>{const a=e.expressions.find((e=>e.text.trim()===i));return[...r,a?ga(a,t,n):Kr.literal(Gi(i))]}),[])].filter((e=>!ei(e)||e.value));return La(r)}const Ma=function(e=0){return()=>\"expr\"+e++}();function Ba(e,t,n,r){return Kr.arrayExpression([...ui((t=>t.map((t=>Hi(t,n,r,0,e)))),(e=>e.filter(xi)),(e=>_a(e,t)),ka)(e)])}function Fa(e,t,n){return ma(ja(e,t,n))}function Va(e){return e&&e.toJSON?e.toJSON():e}const Ra=Object.freeze({code:\"\",ast:[],meta:{},map:null});function qa(e,t){const n={...Ra,...e,meta:t};return!n.map&&t&&t.options&&t.options.file?{...n,map:(t.options.file,new lr)}:n}const Ua=new Set,za=Object.freeze({javascript:new Map,css:new Map,template:(new Map).set(\"default\",(e=>({code:e})))});function Wa(e){f(`No preprocessor of type \"${e}\" was found, please make sure to use one of these: 'javascript', 'css' or 'template'`)}function Ga(e,t,n,r){return za[e]||Wa(e),za[e].has(t)||function(e){f(`No preprocessor named \"${e}\" was found, are you sure you have registered it?'`)}(t),function(e,t,n){return qa(e?e(n,t):{code:n},t)}(za[e].get(t),n,r)}function Ja(e,t){return Ze.print(e,{...t,parser:{parse:(e,t)=>ea(e,{...t,ecmaVersion:\"latest\"})},tabWidth:2,wrapColumn:0,quote:\"single\"})}const $a=e=>ri(e.left)?e.left.expressions[0]:e.left,Ha=e=>ri(e.left)?e.left.expressions[1]:null,Ka=e=>e.right,Xa=ui(Kr.literal,ia),Ya=e=>Ii(\"itemName\",ui(Xa,$a)(e)),Qa=e=>Ii(\"indexName\",ui(Xa,Ha)(e)),Za=(e,t,n,r)=>Ii(Fe,ui((e=>ya(e,n,r)),(e=>({...t,text:Ja(e).code})),Ka)(e));function es(e,t,n){const r=ha(e,t,n).program.body[0];ti(r)||f(`The each directives supported should be of type \"ExpressionStatement\",you have provided a \"${r.type}\"`);const{expression:i}=r;return[Ya(i),Qa(i),Za(i,e,t,n)]}function ts(e,t,n,r){const[i,a,s]=[ki,Pi,wi].map((t=>t(e))),o=e=>e?ya(fa(e),n,r):Ci();return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(De),Kr.identifier(\"EACH\"),!1)),Ii(\"getKey\",o(s)),Ii(\"condition\",o(i)),da(us(e,n,r,t)),...Ta(t),...ui(es,fa)(a)])}function ns(e,t,n,r){const i=ki(e);return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(De),Kr.identifier(\"IF\"),!1)),Ii(Fe,ya(i.expressions[0],n,r)),...Ta(t),da(us(e,n,r,t))])}function rs(e,t,n){const r=Ca(e);return r.filter(gi).filter(xi).map((i=>Hi(i,t,n,r.indexOf(i),e)))}function is(e,t,n,r){return Kr.objectExpression([...pi(e)||bi(e)?[]:Ta(t),Ii(\"expressions\",Kr.arrayExpression([...rs(e,n,r),...Ki(e,n,r)]))])}function as(e,t,n,r){const i=_i(Ge,e),a=i?i.value:\"default\";return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(De),Kr.identifier(\"SLOT\"),!1)),Ii(Re,Ba({...e,attributes:Ia(e).filter((e=>ia(e)!==Ge))},t,n,r)),Ii(Ve,Kr.literal(a)),da(us(e,n,r,t)),...Ta(t)])}function ss(e){return Ca(e).reduce(((e,t)=>{const n=function(e){return Ia(e).find((e=>e.name===We))}(t);return n?e[n.value]=t:e.default=wa({nodes:[...Ca(e.default),t]}),e}),{default:null})}function os(e,t,n){return Kr.arrayExpression([...ui((e=>e.map((([e,r])=>function(e,t,n,r){const i={...t,attributes:Ia(t)},[a,s]=ps(i,n,r);return Kr.objectExpression([Ii(\"id\",Kr.literal(e)),Ii(\"html\",Kr.literal(a)),Ii(\"bindings\",Kr.arrayExpression(s))])}(e,r,t,n)))),(e=>e.filter((([,e])=>e))),Object.entries,ss)(e)])}function ls(e,t,n,r){return Kr.objectExpression([Ii(Be,Kr.memberExpression(Kr.identifier(De),Kr.identifier(\"TAG\"),!1)),Ii(\"getComponent\",Kr.identifier(Me)),Ii(Fe,Na(e,n,r)),Ii(\"slots\",os(e,n,r)),Ii(Re,Ba(e,t,n,r)),...Ta(t)])}const cs=Object.freeze({html:[],bindings:[],parent:null});function us(e,t,n,r){const i=di(e),a=function(e,t){return{...e,attributes:_a(Ia(e),t)}}(e,r);return i?[null,[ls(a,null,t,n)]]:ps(wa(a),t,n)}function ps(e,t,n,r){e||f(\"Something went wrong with your tag DOM parsing, your tag template can't be created\");const[i,a]=function(e,t,n){return r=e,[xi,Pi,ki,di,fi].every((e=>!e(r)))?[Da(e),[]]:function(e,t,n){return!0===gi(e)?[Da(e),[]]:function(e,t,n){const r=bi(e)?null:Ma(),i=function(e,t){return t?{...e,attributes:[{name:t,value:t},...Ia(e)]}:e}(e,r),a=Da(i);switch(!0){case Ei(i):return[a,[ts(i,r,t,n)]];case Si(i):return[a,[ns(i,r,t,n)]];case di(i):return[a,[ls(i,r,t,n)]];case fi(i):return[a,[as(i,r,t,n)]];default:return[a,[is(i,r,t,n)]]}}(e,t,n)}(e,t,n);var r}(e,t,n),s=Ca(e),o=!1===pi(e),l={...(c=cs,JSON.parse(JSON.stringify(c))),...r};var c,u;return o&&l.html.push(...i),l.bindings.push(...a),s.length&&(u=e,![Pi,ki,di,fi].some((e=>e(u))))&&s.forEach((r=>ps(r,t,n,{parent:e,...l}))),o&&yi(e)&&!mi(e)&&l.html.push(function(e){return e.name?`</${e.name}>`:\"\"}(e)),[l.html.join(\"\"),l.bindings]}var hs={}.hasOwnProperty,ds=/[ -,\\.\\/:-@\\[-\\^`\\{-~]/,fs=/[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/,ms=/(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g,ys=function e(t,n){\"single\"!=(n=function(e,t){if(!e)return t;var n={};for(var r in t)n[r]=hs.call(e,r)?e[r]:t[r];return n}(n,e.options)).quotes&&\"double\"!=n.quotes&&(n.quotes=\"single\");for(var r=\"double\"==n.quotes?'\"':\"'\",i=n.isIdentifier,a=t.charAt(0),s=\"\",o=0,l=t.length;o<l;){var c=t.charAt(o++),u=c.charCodeAt(),p=void 0;if(u<32||u>126){if(u>=55296&&u<=56319&&o<l){var h=t.charCodeAt(o++);56320==(64512&h)?u=((1023&u)<<10)+(1023&h)+65536:o--}p=\"\\\\\"+u.toString(16).toUpperCase()+\" \"}else p=n.escapeEverything?ds.test(c)?\"\\\\\"+c:\"\\\\\"+u.toString(16).toUpperCase()+\" \":/[\\t\\n\\f\\r\\x0B]/.test(c)?\"\\\\\"+u.toString(16).toUpperCase()+\" \":\"\\\\\"==c||!i&&('\"'==c&&r==c||\"'\"==c&&r==c)||i&&fs.test(c)?\"\\\\\"+c:c;s+=p}return i&&(/^-[-\\d]/.test(s)?s=\"\\\\-\"+s.slice(1):/\\d/.test(a)&&(s=\"\\\\3\"+a+\" \"+s.slice(1))),s=s.replace(ms,(function(e,t,n){return t&&t.length%2?e:(t||\"\")+n})),!i&&n.wrap?r+s+r:s};ys.options={escapeEverything:!1,isIdentifier:!1,quotes:\"single\",wrap:!1},ys.version=\"3.0.0\";var gs=Ye(ys);const bs={SELECTOR:1,BODY_START:2,BODY_END:3},vs=(e,t)=>{const n=[],r=t.length;let i=0;for(;;){const a=e.indexOf(t,i);if(-1===a)return n;n.push(a),i=a+r}},{SELECTOR:xs,BODY_START:Ss,BODY_END:Es}=bs,Ts=(e,t=0,n)=>{let r=0,i=t;for(let a=t,s=e.length;a<s;a++){const t=e[a],s=t.index;if(s>=n)break;r=t.type===Ss?s:s+1,i=a+1}return[r,i]},{SELECTOR:_s,BODY_START:ks,BODY_END:Ps}=bs,ws=(e,t)=>{const{children:n}=e;let r=\"\",i=e.bodyIndex;for(let e=0,a=n.length;e<a;e++){const a=n[e];r+=t.slice(i,a.index),i=a.indexEnd+1}return r+=t.slice(i,e.bodyIndexEnd),r};function As(e){const t=e.attributes?e.attributes.find((e=>\"type\"===e.name)):null;return t?t.value.replace(\"text/\",\"\"):null}function Cs(e,t,n,r){const i=r.text;return t?Ga(e,t,n,i):{code:i}}const Is=\":host\",Ns=[\"from\",\"to\"],Os=/\\/\\*[^*]*\\*+(?:[^*/][^*]*\\*+)*\\//g,Ds=/([^,]+)(?::(?!host)\\w+(?:[\\s|\\S]*?\\))?(?:[^,:]*)?)+|([^,]+)/g,Ls=(e,t)=>{const{children:n}=e;return n.forEach((e=>{!1!==t(e)&&Ls(e,t)})),e},js=e=>e.replace(/\\\\/g,\"\\\\\\\\\");function Ms(e,t,n,r){const i=As(e),{options:a}=n,s=Cs(\"css\",i,n,e.text).code.replace(Os,\"\").replace(/\\s+/g,\" \").trim(),o=(l=n.tagName,js(gs(l,{isIdentifier:!0})));var l;const c=(a.scopedCss?function(e,t){const n=(e=>{const t=(e=>{const t=vs(e,\"{\"),n=vs(e,\"}\"),r=Array(t.length),i=Array(t.length),a=Array(n.length);let s=0,o=0,l=0;for(let e=0,n=t.length;e<n;e++)i[o++]={type:Ss,index:t[e]+1};for(let e=0,t=n.length;e<t;e++)a[l++]={type:Es,index:n[e]};let c=0,u=0;for(let n=0,o=t.length;n<o;n++){const o=t[n],l=Ts(i,c,o),p=Ts(a,u,o);c=l[1],u=p[1];let h=l[0]>=p[0]?l[0]:p[0],d=e.slice(h,o),f=h+d.lastIndexOf(\";\",o)+1;f>h&&(h=f,d=e.slice(h,o)),r[s++]={type:xs,index:h,indexEnd:o,selector:d}}return((e,t)=>{let n=e.length+t.length,r=e.length-1,i=t.length-1;const a=Array(n);for(;n>0;)a[--n]=i<0||r>=0&&e[r].index>t[i].index?e[r--]:t[i--];return a})(((e,t)=>{const n=e.length,r=Array(2*n);for(let i=0,a=0;i<n;i++,a+=2)r[a]=e[i],r[a+1]=t[i];return r})(r,i),a)})(e),n={parent:null,children:[]};let r=n,i=0;for(;;){if(!r)throw Error(\"Parent node not found\");const n=t[i];if(!n)break;if(n.type===_s){const e=t[i+1];if(!e||e.type!==ks)throw Error('Found \"selector\" token without expected subsequent \"body_start\" token');const a={parent:r,index:n.index,indexEnd:-1,selector:n.selector,selectorIndex:n.index,selectorIndexEnd:n.indexEnd,body:\"\",bodyIndex:e.index,bodyIndexEnd:-1,children:[]};r.children.push(a),r=a,i+=2}else{if(n.type!==Ps)throw Error(`Unexpected token of type: \"${n.type}\"`);{const t=r;t.indexEnd=n.index+1,t.bodyIndexEnd=n.index,t.body=ws(t,e),r=t.parent,i+=1}}}return n})(t),r=t.length;return Ls(n,(n=>{const i=t.length-r;if(!n.selector.trim().startsWith(\"@\")){const r=n.selector.replace(Os,\"\");return a=t,s=n.selectorIndex+i,o=n.selectorIndexEnd+i,l=function(e,t){return t.replace(Ds,((t,n)=>{const r=t.trim(),i=n?n.trim():r;return 0===i.indexOf(e)||!i||Ns.indexOf(i)>-1||\"%\"===i.slice(-1)?t:r.indexOf(Is)<0?`${e} ${r},[is=\"${e}\"] ${r}`:`${r.replace(Is,e)},${r.replace(Is,`[is=\"${e}\"]`)}`}))}(e,r),t=`${a.substring(0,s)}${l}${a.substring(o)}`,!1}var a,s,o,l})),t}(o,js(s)):js(s)).trim();return Hr.visit(r,{visitProperty(e){if(\"css\"===e.value.key.name)return e.value.value=Kr.templateLiteral([Kr.templateElement({raw:c,cooked:\"\"},!1)],[]),!1;this.traverse(e)}}),r}function Bs(e,...t){return(...n)=>(n=[...t,...n]).length<e.length?Bs(e,...n):e(...n)}function Fs(e){return!e||!e.length}function Vs(e){return!e||Fs(e.mappings)}function Rs(e){return e.filter(si)}function qs(e){return e.filter((e=>!si(e)))}function Us(e){return e.filter((e=>!ci(e)||ii(e)))}function zs(e){return e.body||e.program.body}function Ws(e,t){return Hr.visit(e,{visitProperty(e){if(e.value.key.name===g)return e.value.value=t.declaration,!1;this.traverse(e)}}),e}function Gs(e,t,n,r){const i=As(e),a=Oi(e.text.text,t,e),{options:o}=n,l=Cs(\"javascript\",i,n,{...e,text:a}),c=Va(l.map),u=zs(na(l.code,{sourceFileName:o.file,inputSourceMap:Vs(c)?null:c})),p=u.find(ii),h=s(p),d=zs(r),f=function(e){const t=e.filter(ci).map((e=>e.declaration)),n=t.filter(oi),r=t.filter(li),i=({typeName:e})=>!(!e||!e.name)&&e.name===S,a=({expression:e})=>e.name===S;return n.find((e=>e.typeAnnotation.types&&e.typeAnnotation.types.some(i)||i(e.typeAnnotation)))||r.find((e=>e.extends&&e.extends.some(a)))}(u);if(p&&u.some(ni))throw Error('You can\\t use \"export default {}\" and root this statements in the same component');return d.unshift(...h?[...Rs(u),...(m=u,m.filter(ci))]:function(e){return e.filter((e=>!ii(e)&&!ni(e)))}(u)),h&&Ws(r,function(e){return Kr.exportDefaultDeclaration(Kr.functionDeclaration(Kr.identifier(g),[],Kr.blockStatement([...ui(qs,Us)(e),Kr.returnStatement(Kr.thisExpression())])))}(u)),p&&Ws(r,p),f?function(e,t){const n=zs(e),r=Kr.importSpecifier(Kr.identifier(x)),i=t.id.name,a=Rs(n).find((e=>e.source.value===v)),s=n.find(ii),o=s.declaration;return a?a.specifiers.push(r):n.unshift(0,Kr.importDeclaration([r],Kr.stringLiteral(v))),s.declaration=Kr.tsAsExpression(o,Kr.tsTypeReference(Kr.identifier(x),Kr.tsTypeParameterInstantiation([Kr.tsTypeReference(Kr.identifier(i))]))),e}(r,f):r;var m}function Js(e,t,n,r){const{options:i}=n;return function(e,t,n,r){return Hr.visit(e,{visitProperty(e){if(e.value.key.name===b)return e.value.value=Sa(function(e,t,n){return xa(...ps((r=e,{...Pa(r),attributes:ui(Aa,ka)(r)}),t,n));var r}(r,t,n)),!1;this.traverse(e)}}),e}(r,i.file,t,e)}const $s={template:\"default\",file:\"[unknown-source-file]\",scopedCss:!0};function Hs({tagName:e}){return Kr.program([Kr.exportDefaultDeclaration(Kr.objectExpression([Ii(\"css\",Ci()),Ii(g,Ci()),Ii(b,Ci()),Ii(\"name\",Kr.literal(e))]))])}function Ks(e){const t=Va(e);return Vs(t)?null:t}function Xs(e,t){return{...e,sourcesContent:[t]}}const Ys=(e,t)=>{const{parse:n}=Ae(t);return n(e).output.template};function Qs(e,t){return ui((({code:e})=>e),Ja,Sa,os)(Ys(e,t),$s.file,e)}function Zs(e,t={}){const n=function(e,t){return{tagName:null,fragments:null,options:{...$s,...t},source:e}}(e,t),{options:r}=n,{code:i,map:s}=Ga(\"template\",r.template,n,e),{parse:l}=Ae(r),{template:c,css:u,javascript:p}=l(i).output;if(function(e,t,n){const r=e?(\"\"+t.substr(0,e.start)+t.substr(e.end,t.length)).trim():\"\";if(r)try{const{template:e,javascript:t,css:i}=n(r).output;return[e,t,i].some(a)}catch(e){return!1}return!1}(c||u||p,i,l))throw Error(\"Multiple HTML root nodes are not supported\");return Object.assign(n,{tagName:c.name,fragments:{template:c,css:u,javascript:p}}),ui((e=>({...e,meta:n})),(e=>function(e,t){return Array.from(Ua).reduce((function(e,n){const{code:r,map:i}=e,a=n(r,t);return{code:a.code,map:(s=i,l=a.map,o()&&s&&l&&l.mappings?Tr(Va(s),Va(l)):o()&&s?Va(s):{})};var s,l}),qa(e,t))}(e,n)),(t=>({...t,map:Xs(t.map,e)})),(e=>n.ast=e&&Ja(e,{sourceMapName:r.file+\".map\",inputSourceMap:Ks(s)})),eo(Js,c,i,n),eo(Gs,p,i,n),eo(Ms,u,i,n))(Hs(n))}function eo(e,t,n,r){return!t||!t.text&&Fs(t.nodes)&&Fs(t.attributes)?e=>e:Bs(e)(t,n,r)}const to=Object.freeze({__proto__:null,compile:Zs,createInitialInput:Hs,generateSlotsFromString:Qs,generateTemplateFunctionFromString:function(e,t){return ui((({code:e})=>e),Ja,xa)(...ps(Ys(e,t),$s.file,e))},registerPostprocessor:function(e){return Ua.has(e)&&f(`This postprocessor \"${e.name||e.toString()}\" was already registered`),Ua.add(e),Ua},registerPreprocessor:function(e,t,n){return e||f(\"Please define the type of preprocessor you want to register 'javascript', 'css' or 'template'\"),t||f(\"Please define a name for your preprocessor\"),n||f(\"Please provide a preprocessor function\"),za[e]||Wa(e),za[e].has(t)&&f(`The preprocessor ${t} was already registered before`),za[e].set(t,n),za}}),no=0,ro=1,io=2,ao=3,so=4,oo={EACH:0,IF:1,SIMPLE:2,TAG:3,SLOT:4},lo=new Map,co=Symbol(),uo=new Set,po=\"is\",ho=\"mount\",fo=\"update\",mo=\"unmount\",yo=\"shouldUpdate\",go=\"onBeforeMount\",bo=\"onMounted\",vo=\"onBeforeUpdate\",xo=\"onUpdated\",So=\"onBeforeUnmount\",Eo=\"onUnmounted\",To=\"props\",_o=\"state\",ko=\"slots\",Po=\"root\",wo=Symbol(),Ao=Symbol(),Co=Symbol(),Io=Symbol(),No=Symbol();function Oo(e){return Array.from(e.attributes).reduce(((e,t)=>(e[d(t.name)]=t.value,e)),{})}function Do(e){for(;e.firstChild;)e.removeChild(e.firstChild)}const Lo=e=>e.remove(),jo=(e,t)=>t&&t.parentNode&&t.parentNode.insertBefore(e,t);function Mo(){return this}function Bo(e){return i(e)?e.prototype&&e.prototype.constructor?new e:e():e}function Fo(e,t,n,r={}){return Object.defineProperty(e,t,{value:n,enumerable:!1,writable:!1,configurable:!0,...r}),e}function Vo(e,t,n){return Object.entries(t).forEach((([t,r])=>{Fo(e,t,r,n)})),e}function Ro(e,t){return Object.entries(t).forEach((([t,n])=>{e[t]||(e[t]=n)})),e}const qo={[ho](e){this.el=e},[fo]:Mo,[mo](e,t,n=!1){n?Lo(this.el):n||Do(this.el)},clone(){return{...this}},createDOM:Mo},Uo=Symbol(),zo=Symbol(),Wo=Symbol(),Go={nodes:[],mount(e,t){return this.update(e,t)},update(e,t){const{placeholder:n,nodes:r,childrenMap:i}=this,a=e===Wo?null:this.evaluate(e),s=a?Array.from(a):[],{newChildrenMap:o,batches:l,futureNodes:c}=function(e,t,n,r){const{condition:i,template:a,childrenMap:s,itemName:o,getKey:l,indexName:c,root:u,isTemplateTag:p}=r,h=new Map,d=[],f=[];return e.forEach(((e,r)=>{const m=function(e,{itemName:t,indexName:n,index:r,item:i}){return Fo(e,t,i),n&&Fo(e,n,r),e}(Object.create(t),{itemName:o,indexName:c,index:r,item:e}),y=l?l(m):r,g=s.get(y),b=[];if(function(e,t){return!!e&&!e(t)}(i,m))return;const v=!g,x=g?g.template:a.clone(),S=x.el||u.cloneNode(),E=p&&v?function(e){const t=e.dom.cloneNode(!0),{head:n,tail:r}=function(){const e=document.createTextNode(\"\"),t=document.createTextNode(\"\");return e[Uo]=!0,t[zo]=!0,{head:e,tail:t}}();return{avoidDOMInjection:!0,fragment:t,head:n,tail:r,children:[n,...Array.from(t.childNodes),r]}}(x):x.meta;v?d.push((()=>x.mount(S,m,n,E))):d.push((()=>x.update(m,n))),p?b.push(...E.children):b.push(S),s.delete(y),f.push(...b),h.set(y,{nodes:b,template:x,context:m,index:r})})),{newChildrenMap:h,batches:d,futureNodes:f}}(s,e,t,this);return((e,t,n,r)=>{const i=t.length;let a=e.length,s=i,o=0,l=0,c=null;for(;o<a||l<s;)if(a===o){const e=s<i?l?n(t[l-1],-0).nextSibling:n(t[s-l],0):r;for(;l<s;)jo(n(t[l++],1),e)}else if(s===l)for(;o<a;)c&&c.has(e[o])||Lo(n(e[o],-1)),o++;else if(e[o]===t[l])o++,l++;else if(e[a-1]===t[s-1])a--,s--;else if(e[o]===t[s-1]&&t[l]===e[a-1]){const r=n(e[--a],-1).nextSibling;jo(n(t[l++],1),n(e[o++],-1).nextSibling),jo(n(t[--s],1),r),e[a]=t[s]}else{if(!c){c=new Map;let e=l;for(;e<s;)c.set(t[e],e++)}if(c.has(e[o])){const r=c.get(e[o]);if(l<r&&r<s){let i=o,h=1;for(;++i<a&&i<s&&c.get(e[i])===r+h;)h++;if(h>r-l){const i=n(e[o],0);for(;l<r;)jo(n(t[l++],1),i)}else u=n(t[l++],1),(p=n(e[o++],-1))&&p.parentNode&&p.parentNode.replaceChild(u,p)}else o++}else Lo(n(e[o++],-1))}var u,p})(r,c,function(e,t){return(n,r)=>{if(r<0){const n=e[e.length-1];if(n){const{template:r,nodes:i,context:a}=n;i.pop(),i.length||(e.pop(),r.unmount(a,t,null))}}return n}}(Array.from(i.values()),t),n),l.forEach((e=>e())),this.childrenMap=o,this.nodes=c,this},unmount(e,t){return this.update(Wo,t),this}},Jo={mount(e,t){return this.update(e,t)},update(e,t){const n=!!this.evaluate(e),r=!this.value&&n,i=this.value&&!n,a=()=>{const n=this.node.cloneNode();jo(n,this.placeholder),this.template=this.template.clone(),this.template.mount(n,e,t)};switch(!0){case r:a();break;case i:this.unmount(e);break;default:n&&this.template.update(e,t)}return this.value=n,this},unmount(e,t){return this.template.unmount(e,t,!0),this}},$o=\"undefined\"==typeof Element?{}:Element.prototype,Ho=m((e=>$o.hasOwnProperty(e))),Ko=/^on/,Xo={handleEvent(e){this[e.type](e)}},Yo=new WeakMap;function Qo(e){return s(e)?\"\":e}const Zo=(e,t)=>e.childNodes[t],el={[l]:function e(n,{name:r,isBoolean:s},o,l){return r?\"ref\"===r?(n&&n.removeAttribute(n,r),void o(n)):(!Ho(r)&&(function(e){return t(e,\"boolean\")}(o)||a(o)||i(o))&&(n[r]=o),void(function(e,t){return t?!e&&0!==e:null==e}(o,s)?n.removeAttribute(r):function(e){return[\"string\",\"number\",\"boolean\"].includes(typeof e)}(o)&&n.setAttribute(r,function(e,t,n){return!0===t&&n?e:t}(r,o,s)))):(l&&function(e,t,n){const r=t?Object.keys(t):[];Object.keys(n).filter((e=>!r.includes(e))).forEach((t=>e.removeAttribute(t)))}(n,o,l),void(o&&function(t,n){Object.keys(n).forEach((r=>e(t,{name:r},n[r])))}(n,o)))},[c]:function(e,{name:t},n){const r=t.replace(Ko,\"\"),i=Yo.get(e)||(e=>{const t=Object.create(Xo);return Yo.set(e,t),t})(e),[a,s]=(e=>Array.isArray(e)?e:[e,!1])(n),o=i[r],l=a&&!o;o&&!a&&e.removeEventListener(r,i),l&&e.addEventListener(r,i,s),i[r]=a},[u]:function(e,t,n){e.data=Qo(n)},[p]:function(e,t,n){e.value=Qo(n)}},tl={mount(e){return this.value=this.evaluate(e),nl(this,this.value),this},update(e){const t=this.evaluate(e);return this.value!==t&&(nl(this,t),this.value=t),this},unmount(){return 1===this.type&&nl(this,null),\"ref\"===this.name&&el[0](null,this,this.value),this}};function nl(e,t){return el[e.type](e.node,e,t,e.value)}function rl(e,t){return{...tl,...t,node:2===t.type?Zo(e,t.childNodeIndex):e}}const il=(e,t)=>e[Co]||t,al={attributes:[],getTemplateScope(e,t){return function(e,t,n){if(!e||!e.length)return n;const r=e.map((e=>({...e,value:e.evaluate(t)})));return Object.assign(Object.create(n||null),y(r))}(this.attributes,e,t)},mount(e,t){const n=!!e.slots&&e.slots.find((({id:e})=>e===this.name)),{parentNode:r}=this.node,i=n?il(e,t):e;return this.templateData=n,this.template=n&&dl(n.html,n.bindings).createDOM(r)||this.template?.clone(),this.template&&(Do(this.node),this.template.mount(this.node,this.getTemplateScope(e,i),i),this.template.children=Array.from(this.node.childNodes)),sl(this.node),Lo(this.node),this},update(e,t){if(this.template){const n=this.templateData?il(e,t):e;this.template.update(this.getTemplateScope(e,n),n)}return this},unmount(e,t,n){return this.template&&this.template.unmount(this.getTemplateScope(e,t),null,n),this}};function sl(e){const t=e&&e.firstChild;t&&(jo(t,e),sl(e))}function ol(e){return e.reduce(((e,{bindings:t})=>e.concat(t)),[])}const ll={mount(e){return this.update(e)},update(e,t){const n=this.evaluate(e);return n&&n===this.name?this.tag.update(e):(this.unmount(e,t,!0),this.name=n,this.tag=function(e,t=[],n=[]){return e?e({slots:t,attributes:n}):dl(function(e){return e.reduce(((e,t)=>e+t.html),\"\")}(t),[...ol(t),{expressions:n.map((e=>({type:0,...e})))}])}(this.getComponent(n),this.slots,this.attributes),this.tag.mount(this.node,e)),this},unmount(e,t,n){return this.tag&&this.tag.unmount(n),this}},cl={[ro]:function(e,{evaluate:t,template:n}){const r=document.createTextNode(\"\");return jo(r,e),Lo(e),{...Jo,node:e,evaluate:t,placeholder:r,template:n.createDOM(e)}},[io]:function(e,{expressions:t}){return n=t.map((t=>rl(e,t))),[\"mount\",\"update\",\"unmount\"].reduce(((e,t)=>({...e,[t]:e=>n.map((n=>n[t](e)))&&void 0})),{});var n},[no]:function(e,{evaluate:t,condition:n,itemName:i,indexName:a,getKey:s,template:o}){const l=document.createTextNode(\"\"),c=e.cloneNode();return jo(l,e),Lo(e),{...Go,childrenMap:new Map,node:e,root:c,condition:n,evaluate:t,isTemplateTag:r(c),template:o.createDOM(e),getKey:s,indexName:a,itemName:i,placeholder:l}},[ao]:function(e,{evaluate:t,getComponent:n,slots:r,attributes:i}){return{...ll,node:e,evaluate:t,slots:r,attributes:i,getComponent:n}},[so]:function(e,{name:t,attributes:n,template:r}){return{...al,attributes:n,template:r,node:e,name:t}}};function ul(e,t){return e.map((e=>2===e.type?{...e,childNodeIndex:e.childNodeIndex+t}:e))}function pl(e,t,n){const{selector:r,type:i,redundantAttribute:a,expressions:s}=t,o=r?e.querySelector(r):e;a&&o.removeAttribute(a);const l=s||[];return(cl[i]||cl[2])(o,{...t,expressions:n&&!r?ul(l,n):l})}const hl={createDOM(e){return this.dom=this.dom||function(e,t){return t&&(\"string\"==typeof t?function(e,t){return n(e)?function(e,t){return t.ownerDocument.importNode((new window.DOMParser).parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${e}</svg>`,\"application/xml\").documentElement,!0)}(t,e):function(e,t){const n=r(t)?t:document.createElement(\"template\");return n.innerHTML=e,n.content}(t,e)}(e,t):t)}(e,this.html)||document.createDocumentFragment(),this},mount(e,t,i,a={}){e||f(\"Please provide DOM node to mount properly your template\"),this.el&&this.unmount(t);const{fragment:s,children:o,avoidDOMInjection:l}=a,{parentNode:c}=o?o[0]:e,u=r(e),p=u?function(e,t,n){const r=Array.from(e.childNodes);return Math.max(r.indexOf(t),r.indexOf(n.head)+1,0)}(c,e,a):null;this.createDOM(e);const h=s||this.dom.cloneNode(!0);return this.el=u?c:e,this.children=u?o||Array.from(h.childNodes):null,!l&&h&&function(e,t){switch(!0){case n(e):!function(e,t){for(;e.firstChild;)t.appendChild(e.firstChild)}(t,e);break;case r(e):e.parentNode.replaceChild(t,e);break;default:e.appendChild(t)}}(e,h),this.bindings=this.bindingsData.map((e=>pl(this.el,e,p))),this.bindings.forEach((e=>e.mount(t,i))),this.meta=a,this},update(e,t){return this.bindings.forEach((n=>n.update(e,t))),this},unmount(e,t,n=!1){const r=this.el;if(!r)return this;switch(this.bindings.forEach((r=>r.unmount(e,t,n))),!0){case r[wo]||null===n:break;case Array.isArray(this.children):!function(e){for(let t=0;t<e.length;t++)Lo(e[t])}(this.children);break;case!n:Do(r);break;case!!n:Lo(r)}return this.el=null,this},clone(){return{...this,meta:{},el:null}}};function dl(e,t=[]){return{...hl,html:e,bindingsData:t}}const fl=Object.freeze({[ho]:Mo,[fo]:Mo,[mo]:Mo}),ml=(e,t)=>e[co]=t;function yl(e){return[ho,fo,mo].reduce(((t,n)=>(t[n]=e(n),t)),{})}function gl(e){return Array.isArray(e)?e:/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(e))&&\"number\"==typeof e.length?Array.from(e):[e]}function bl(e,t){return gl(\"string\"==typeof e?(t||document).querySelectorAll(e):e)}const vl=Object.freeze({$(e){return bl(e,this.root)[0]},$$(e){return bl(e,this.root)}}),xl=Object.freeze({[yo]:Mo,[go]:Mo,[bo]:Mo,[vo]:Mo,[xo]:Mo,[So]:Mo,[Eo]:Mo}),Sl=e=>1===e.length?e[0]:e;function El(e,t,n){const r=\"object\"==typeof t?t:{[t]:n},i=Object.keys(r);return gl(e).forEach((e=>{i.forEach((t=>e.setAttribute(t,r[t])))})),e}function Tl(e,t){return function(e,t){const n=\"string\"==typeof t?[t]:t;return Sl(gl(e).map((e=>Sl(n.map((t=>e.getAttribute(t)))))))}(e,t)}const _l=new Map;var kl;const Pl={CSS_BY_NAME:_l,add(e,t){return _l.has(e)||(_l.set(e,t),this.inject()),this},inject(){return(kl||(El(kl=bl(\"style[riot]\")[0]||document.createElement(\"style\"),\"type\",\"text/css\"),kl.parentNode||document.head.appendChild(kl),kl)).innerHTML=[..._l.values()].join(\"\\n\"),this},remove(e){return _l.has(e)&&(_l.delete(e),this.inject()),this}};function wl(e,...t){return(...n)=>(n=[...t,...n]).length<e.length?wl(e,...n):e(...n)}function Al(e){return Tl(e,po)||e.tagName.toLowerCase()}function Cl(e,t){return{...e,...Bo(t)}}function Il(e,t={}){return{...Oo(e),...Bo(t)}}const Nl=m((e=>{const t=e?.bindingsData?.[0];return t?.selector?[]:t?.expressions?.reduce(((e,{name:t,type:n})=>n===h.ATTRIBUTE?e.concat([t]):e),[])??[]}));function Ol(e,{slots:t,attributes:n,props:r}){return s=function(e){return[...uo].reduce(((e,t)=>t(e)||e),e)}(Vo(a(e)?Object.create(e):e,{mount(i,a={},s){return Fo(i,wo,!1),this[Co]=s,this[Io]=function(e,t=[]){const n=t.map((t=>rl(e,t))),r={};return Object.assign(r,{expressions:n,...yl((e=>t=>(n.forEach((n=>n[e](t))),r)))})}(i,n).mount(s),Fo(this,To,Object.freeze({...Il(i,r),...y(this[Io].expressions)})),this[_o]=Cl(this[_o],a),this[No]=this.template.createDOM(i).clone(),ml(i,this),e.name&&function(e,t){Al(e)!==t&&El(e,po,t)}(i,e.name),Fo(this,Po,i),Fo(this,ko,t),this[go](this[To],this[_o]),this[No].mount(i,this,s),this[bo](this[To],this[_o]),this},update(e={},t){t&&(this[Co]=t,this[Io].update(t));const n=Nl(this[No]),r=Oo({attributes:Array.from(this[Po].attributes).filter((({name:e})=>!n.includes(e)))}),{[po]:i,...s}={...r,...y(this[Io].expressions)};var o,l;if(!1!==this[yo](s,this[To]))return Fo(this,To,Object.freeze({...t?(o=this[To],l=n,a(o)?Object.fromEntries(l.map((e=>[e,o[e]]))):o):this[To],...s})),this[_o]=Cl(this[_o],e),this[vo](this[To],this[_o]),this[Ao]||(this[Ao]=!0,this[No].update(this,this[Co])),this[xo](this[To],this[_o]),this[Ao]=!1,this},unmount(e){return this[So](this[To],this[_o]),this[Io].unmount(),this[No].unmount(this,this[Co],null===e?null:!e),this[Eo](this[To],this[_o]),this}})),Object.keys(e).filter((t=>i(e[t]))).forEach((e=>{s[e]=s[e].bind(s)})),s;var s}function Dl({css:e,template:t,componentAPI:n,name:r}){return e&&r&&Pl.add(r,e),wl(Ol)(Vo(Ro(n,{...xl,[To]:{},[_o]:{}}),{[ko]:null,[Po]:null,...vl,name:r,css:e,template:t}))}const Ll=m(jl);function jl(e){const{css:t,template:n,exports:r,name:i}=e,a=n?function(e,t,n){return e(dl,h,oo,n)}(n,0,(e=>{const t=function(e={}){return Object.entries(Bo(e)).reduce(((e,[t,n])=>{var r;return e[(r=t,r.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase())]=jl(n),e}),{})}(e.exports?e.exports.components:{});return n=>n===e.name?Ll(e):t[n]||lo.get(n)})(e)):qo;return({slots:e,attributes:s,props:o})=>{if(r&&r[wo])return function(e,{slots:t,attributes:n,props:r,css:i,template:a}){a&&f(\"Pure components can not have html\"),i&&f(\"Pure components do not have css\");const s=Ro(e({slots:t,attributes:n,props:r}),fl);return yl((e=>(...t)=>{if(e===ho){const[e]=t;Fo(e,wo,!0),ml(e,s)}return s[e](...t),s}))}(r,{slots:e,attributes:s,props:o,css:t,template:n});const l=Bo(r)||{},c=Dl({css:t,template:a,componentAPI:l,name:i})({slots:e,attributes:s,props:o});return{mount:(e,t,n)=>c.mount(e,n,t),update:(e,t)=>c.update(t,e),unmount:e=>c.unmount(e)}}}function Ml(e,{css:t,template:n,exports:r}){return lo.has(e)&&f(`The component \"${e}\" was already registered`),lo.set(e,jl({name:e,css:t,template:n,exports:r})),lo}const Bl={cssManager:Pl,DOMBindings:{template:dl,createBinding:pl,createExpression:rl,bindingTypes:oo,expressionTypes:h},globals:{PROPS_KEY:To,STATE_KEY:_o,IS_COMPONENT_UPDATING:Ao,ATTRIBUTES_KEY_SYMBOL:Io,COMPONENTS_IMPLEMENTATION_MAP:lo,PLUGINS_SET:uo,DOM_COMPONENT_INSTANCE_PROPERTY:co,PARENT_KEY_SYMBOL:Co}};async function Fl(e,t){const n=await fetch(e);return Zs(await n.text(),{file:e,...t})}const Vl=\"__riot_registry__\",Rl=\"undefined\"==typeof process;function ql(e,t,n){window[Vl]=window[Vl]||{},function(e,t){Rl?((e,t)=>{const n=document.createElement(\"script\"),r=document.documentElement;n.text=t?`${e}\\n//# sourceURL=${t}.js`:e,r.appendChild(n),r.removeChild(n)})(e,t):Function(e)()}(`window.${Vl}['${t}'] = ${function(e){return`(function (global){${e}})(this)`.replace(\"export default\",\"return\")}(e)}`,n),Ml(t,window[Vl][t])}function Ul(e){if(!e.innerHTML.trim())return null;const t=Qs(e.outerHTML);return e.innerHTML=\"\",Function(\"return \"+t)()(dl,h,oo,(e=>lo.get(e)))}e.__=Bl,e.compile=async function(e){const t=bl('script[type=\"riot\"]').map((e=>Tl(e,\"src\")||Tl(e,\"data-src\")));(await Promise.all(t.map((t=>Fl(t,e))))).forEach((({code:e,meta:n},r)=>{const i=t[r],{tagName:a}=n;ql(e,a,i)}))},e.compileFromString=function(e,t){return Zs(e,t)},e.compileFromUrl=Fl,e.compiler=to,e.component=function(e){const t=function(e){return(t,n,{slots:r,attributes:i,parentScope:a}={})=>function(...e){return e.reduce(((e,t)=>(...n)=>e(t(...n))))}((e=>e.mount(t,a)),(e=>e({props:n,slots:r,attributes:i})),jl)(e)}(e);return(e,n,{slots:r,attributes:i,parentScope:a}={})=>t(e,n,{slots:r||Ul(e),attributes:i,parentScope:a})},e.inject=ql,e.install=function(e){return i(e)||f(\"Plugins must be of type function\"),uo.has(e)&&f(\"This plugin was already installed\"),uo.add(e),uo},e.mount=function(e,t,n){return bl(e).map((e=>function(e,t,n,r){const i=n||Al(e);return lo.has(i)||f(`The component named \"${i}\" was never registered`),lo.get(i)({props:t,slots:r}).mount(e)}(e,t,n,Ul(e))))},e.pure=function(e){return i(e)||f('riot.pure accepts only arguments of type \"function\"'),e[wo]=!0,e},e.register=Ml,e.uninstall=function(e){return uo.has(e)||f(\"This plugin was never installed\"),uo.delete(e),uo},e.unmount=function(e,t){return bl(e).map((e=>(e[co]&&e[co].unmount(t),e)))},e.unregister=function(e){return lo.has(e)||f(`The component \"${e}\" was never registered`),lo.delete(e),Pl.remove(e),lo},e.version=\"v9.4.4\",e.withTypes=e=>e},\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).riot={});"
        },
        {
          "name": "riot.d.ts",
          "type": "blob",
          "size": 7.60546875,
          "content": "import {\n  SlotBindingData,\n  TemplateChunk,\n  BindingData,\n  AttributeExpressionData,\n  ExpressionType,\n  BindingType,\n  template,\n  createBinding,\n  createExpression,\n  bindingTypes,\n  expressionTypes,\n  TagSlotData,\n  TagBindingData,\n} from '@riotjs/dom-bindings'\n\n// Internal Types and shortcuts\nexport type DefaultProps = Record<PropertyKey, any>\nexport type DefaultState = Record<PropertyKey, any>\n\nexport type RegisteredComponentsMap = Map<\n  string,\n  ({\n    slots,\n    attributes,\n    props,\n  }: {\n    slots?: TagSlotData[]\n    attributes?: AttributeExpressionData[]\n    props?: DefaultProps\n  }) => RiotComponent\n>\nexport type ComponentEnhancer = <\n  Props extends DefaultProps = DefaultProps,\n  State extends DefaultState = DefaultState,\n>(\n  component: RiotComponent<Props, State>,\n) => RiotComponent<Props, State>\nexport type InstalledPluginsSet = Set<ComponentEnhancer>\nexport type RiotComponentsMap = {\n  [key: string]: RiotComponentWrapper\n}\nexport type AutobindObjectMethods<Object, Component extends RiotComponent> = {\n  [K in keyof Object]: Object[K] extends (...args: infer Args) => infer Return\n    ? (this: Component & Object, ...args: Args) => Return\n    : Object[K]\n}\n\nexport interface RiotComponent<\n  Props extends DefaultProps = DefaultProps,\n  State extends DefaultState = DefaultState,\n> {\n  // automatically generated on any component instance\n  readonly props: Props\n  readonly root: HTMLElement\n  readonly name?: string\n  readonly slots: TagSlotData[]\n\n  // mutable state property\n  state: State\n  // optional alias to map the children component names\n  components?: RiotComponentsMap\n\n  mount(\n    element: HTMLElement,\n    initialState?: State,\n    parentScope?: object,\n  ): RiotComponent<Props, State>\n  update(\n    newState?: Partial<State>,\n    parentScope?: object,\n  ): RiotComponent<Props, State>\n  unmount(keepRootElement?: boolean): RiotComponent<Props, State>\n\n  // Helpers\n  $(selector: string): Element | null\n  $$(selector: string): Element[]\n\n  // state handling methods\n  shouldUpdate?(newProps: Props, oldProps: Props): boolean\n\n  // lifecycle methods\n  onBeforeMount?(props: Props, state: State): void\n  onMounted?(props: Props, state: State): void\n  onBeforeUpdate?(props: Props, state: State): void\n  onUpdated?(props: Props, state: State): void\n  onBeforeUnmount?(props: Props, state: State): void\n  onUnmounted?(props: Props, state: State): void\n}\n\n// The Riot component object without the internals\n// The internal attributes will be handled by the framework\nexport type RiotComponentWithoutInternals<Component extends RiotComponent> =\n  Omit<\n    Component,\n    | 'props'\n    | 'root'\n    | 'name'\n    | 'slots'\n    | 'mount'\n    | 'update'\n    | 'unmount'\n    | '$'\n    | '$$'\n  >\nexport type RiotComponentWithoutInternalsAndInitialState<\n  Component extends RiotComponent,\n> = Omit<RiotComponentWithoutInternals<Component>, 'state'>\n\n// Riot Pure Component interface that should be used together with riot.pure\nexport interface RiotPureComponent<Context = object> {\n  mount(element: HTMLElement, context?: Context): RiotPureComponent<Context>\n  update(context?: Context): RiotPureComponent<Context>\n  unmount(keepRootElement: boolean): RiotPureComponent<Context>\n}\n\nexport interface PureComponentFactoryFunction<\n  InitialProps extends DefaultProps = DefaultProps,\n  Context = any,\n> {\n  ({\n    slots,\n    attributes,\n    props,\n  }: {\n    slots?: TagSlotData<Context>[]\n    attributes?: AttributeExpressionData<Context>[]\n    props?: InitialProps\n  }): RiotPureComponent<Context>\n}\n\n// This object interface is created anytime a riot file will be compiled into javascript\nexport interface RiotComponentWrapper<Component = RiotComponent> {\n  readonly css?: string | null\n  readonly exports?: RiotComponentFactoryFunction<Component> | Component | null\n  readonly name?: string | null\n\n  template?(\n    template: (\n      template: string,\n      bindings?: BindingData<Component>[],\n    ) => TemplateChunk<Component>,\n    expressionTypes: Record<keyof typeof ExpressionType, number>,\n    bindingTypes: Record<keyof typeof BindingType, number>,\n    getComponent: TagBindingData['getComponent'],\n  ): TemplateChunk<Component> | null\n}\n\n// Interface for components factory functions\nexport interface RiotComponentFactoryFunction<Component> {\n  (): Component\n  components?: RiotComponentsMap\n}\n\n// Riot public API\nexport declare function register<\n  Props extends DefaultProps,\n  State extends DefaultState,\n>(\n  componentName: string,\n  wrapper: RiotComponentWrapper<RiotComponent<Props, State>>,\n): RegisteredComponentsMap\nexport declare function unregister(\n  componentName: string,\n): RegisteredComponentsMap\nexport declare function mount<\n  Props extends DefaultProps,\n  State extends DefaultState,\n>(\n  selector: string | HTMLElement,\n  initialProps?: Props,\n  componentName?: string,\n): RiotComponent<Props, State>[]\nexport declare function unmount(\n  selector: string | HTMLElement,\n  keepRootElement?: boolean,\n): HTMLElement[]\nexport declare function install(plugin: ComponentEnhancer): InstalledPluginsSet\nexport declare function uninstall(\n  plugin: ComponentEnhancer,\n): InstalledPluginsSet\nexport declare function component<\n  Props extends DefaultProps,\n  State extends DefaultState,\n  Component = RiotComponent<Props, State>,\n>(\n  wrapper: RiotComponentWrapper<Component>,\n): (\n  el: HTMLElement,\n  initialProps?: Props,\n  meta?: {\n    slots: TagSlotData[]\n    attributes: AttributeExpressionData[]\n    parentScope: any\n  },\n) => Component\n\nexport declare function pure<\n  InitialProps extends DefaultProps = DefaultProps,\n  Context = any,\n  FactoryFunction = PureComponentFactoryFunction<InitialProps, Context>,\n>(func: FactoryFunction): FactoryFunction\n\nexport declare const version: string\n\n// typescript specific methods\nexport declare function withTypes<\n  Component extends RiotComponent,\n  ComponentFactory = RiotComponentFactoryFunction<\n    AutobindObjectMethods<RiotComponentWithoutInternals<Component>, Component>\n  >,\n>(fn: ComponentFactory): () => Component\nexport declare function withTypes<\n  Component extends RiotComponent,\n  ComponentFactory = RiotComponentFactoryFunction<\n    AutobindObjectMethods<\n      RiotComponentWithoutInternalsAndInitialState<Component>,\n      Component\n    >\n  >,\n>(fn: ComponentFactory): () => Component\nexport declare function withTypes<\n  Component extends RiotComponent,\n  ComponentObjectWithInitialState = RiotComponentWithoutInternals<Component>,\n>(\n  component: AutobindObjectMethods<ComponentObjectWithInitialState, Component>,\n): Component\nexport declare function withTypes<\n  Component extends RiotComponent,\n  ComponentObjectWithoutInitialState = RiotComponentWithoutInternalsAndInitialState<Component>,\n>(\n  component: AutobindObjectMethods<\n    ComponentObjectWithoutInitialState,\n    Component\n  >,\n): Component\n\n/**\n * Internal stuff exposed for advanced use cases\n * IMPORTANT:\n * The things exposed under __ are not part of the official API and might break at any time\n * Use it at your own risk!\n */\n\nexport interface CSSManager {\n  CSS_BY_NAME: Map<string, string>\n  add: (name: string, css: string) => CSSManager\n  inject: () => CSSManager\n  remove: (name: string) => CSSManager\n}\n\nexport declare const __: {\n  cssManager: CSSManager\n  DOMBindings: {\n    template: typeof template\n    createBinding: typeof createBinding\n    createExpression: typeof createExpression\n    bindingTypes: typeof bindingTypes\n    expressionTypes: typeof expressionTypes\n  }\n  globals: {\n    PROPS_KEY: string\n    STATE_KEY: string\n    IS_COMPONENT_UPDATING: Symbol\n    ATTRIBUTES_KEY_SYMBOL: Symbol\n    PARENT_KEY_SYMBOL: Symbol\n    DOM_COMPONENT_INSTANCE_PROPERTY: Symbol\n    COMPONENTS_IMPLEMENTATION_MAP: RegisteredComponentsMap\n    PLUGINS_SET: InstalledPluginsSet\n  }\n}\n"
        },
        {
          "name": "riot.js",
          "type": "blob",
          "size": 80.4169921875,
          "content": "/* Riot v9.4.4, @license MIT */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.riot = {}));\n})(this, (function (exports) { 'use strict';\n\n  const EACH = 0;\n  const IF = 1;\n  const SIMPLE = 2;\n  const TAG = 3;\n  const SLOT = 4;\n\n  const bindingTypes = {\n    EACH,\n    IF,\n    SIMPLE,\n    TAG,\n    SLOT,\n  };\n\n  /**\n   * Quick type checking\n   * @param   {*} element - anything\n   * @param   {string} type - type definition\n   * @returns {boolean} true if the type corresponds\n   */\n  function checkType(element, type) {\n    return typeof element === type\n  }\n\n  /**\n   * Check if an element is part of an svg\n   * @param   {HTMLElement}  el - element to check\n   * @returns {boolean} true if we are in an svg context\n   */\n  function isSvg(el) {\n    const owner = el.ownerSVGElement;\n\n    return !!owner || owner === null\n  }\n\n  /**\n   * Check if an element is a template tag\n   * @param   {HTMLElement}  el - element to check\n   * @returns {boolean} true if it's a <template>\n   */\n  function isTemplate(el) {\n    return el.tagName.toLowerCase() === 'template'\n  }\n\n  /**\n   * Check that will be passed if its argument is a function\n   * @param   {*} value - value to check\n   * @returns {boolean} - true if the value is a function\n   */\n  function isFunction(value) {\n    return checkType(value, 'function')\n  }\n\n  /**\n   * Check if a value is a Boolean\n   * @param   {*}  value - anything\n   * @returns {boolean} true only for the value is a boolean\n   */\n  function isBoolean(value) {\n    return checkType(value, 'boolean')\n  }\n\n  /**\n   * Check if a value is an Object\n   * @param   {*}  value - anything\n   * @returns {boolean} true only for the value is an object\n   */\n  function isObject(value) {\n    return !isNil(value) && value.constructor === Object\n  }\n\n  /**\n   * Check if a value is null or undefined\n   * @param   {*}  value - anything\n   * @returns {boolean} true only for the 'undefined' and 'null' types\n   */\n  function isNil(value) {\n    return value === null || value === undefined\n  }\n\n  // Riot.js constants that can be used across more modules\n\n  const COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n    DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n    PLUGINS_SET = new Set(),\n    IS_DIRECTIVE = 'is',\n    MOUNT_METHOD_KEY = 'mount',\n    UPDATE_METHOD_KEY = 'update',\n    UNMOUNT_METHOD_KEY = 'unmount',\n    SHOULD_UPDATE_KEY = 'shouldUpdate',\n    ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n    ON_MOUNTED_KEY = 'onMounted',\n    ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n    ON_UPDATED_KEY = 'onUpdated',\n    ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n    ON_UNMOUNTED_KEY = 'onUnmounted',\n    PROPS_KEY = 'props',\n    STATE_KEY = 'state',\n    SLOTS_KEY = 'slots',\n    ROOT_KEY = 'root',\n    IS_PURE_SYMBOL = Symbol('pure'),\n    IS_COMPONENT_UPDATING = Symbol('is_updating'),\n    PARENT_KEY_SYMBOL = Symbol('parent'),\n    ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n    TEMPLATE_KEY_SYMBOL = Symbol('template');\n\n  /**\n   * Convert a string from camel case to dash-case\n   * @param   {string} string - probably a component tag name\n   * @returns {string} component name normalized\n   */\n  function camelToDashCase(string) {\n    return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n  }\n\n  /**\n   * Convert a string containing dashes to camel case\n   * @param   {string} string - input string\n   * @returns {string} my-string -> myString\n   */\n  function dashToCamelCase(string) {\n    return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n  }\n\n  /**\n   * Get all the element attributes as object\n   * @param   {HTMLElement} element - DOM node we want to parse\n   * @returns {Object} all the attributes found as a key value pairs\n   */\n  function DOMattributesToObject(element) {\n    return Array.from(element.attributes).reduce((acc, attribute) => {\n      acc[dashToCamelCase(attribute.name)] = attribute.value;\n      return acc\n    }, {})\n  }\n\n  /**\n   * Move all the child nodes from a source tag to another\n   * @param   {HTMLElement} source - source node\n   * @param   {HTMLElement} target - target node\n   * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n   */\n\n  // Ignore this helper because it's needed only for svg tags\n  function moveChildren(source, target) {\n    // eslint-disable-next-line fp/no-loops\n    while (source.firstChild) target.appendChild(source.firstChild);\n  }\n\n  /**\n   * Remove the child nodes from any DOM node\n   * @param   {HTMLElement} node - target node\n   * @returns {undefined}\n   */\n  function cleanNode(node) {\n    // eslint-disable-next-line fp/no-loops\n    while (node.firstChild) node.removeChild(node.firstChild);\n  }\n\n  /**\n   * Clear multiple children in a node\n   * @param   {HTMLElement[]} children - direct children nodes\n   * @returns {undefined}\n   */\n  function clearChildren(children) {\n    // eslint-disable-next-line fp/no-loops,fp/no-let\n    for (let i = 0; i < children.length; i++) removeChild(children[i]);\n  }\n\n  /**\n   * Remove a node\n   * @param {HTMLElement}node - node to remove\n   * @returns {undefined}\n   */\n  const removeChild = (node) => node.remove();\n\n  /**\n   * Insert before a node\n   * @param {HTMLElement} newNode - node to insert\n   * @param {HTMLElement} refNode - ref child\n   * @returns {undefined}\n   */\n  const insertBefore = (newNode, refNode) =>\n    refNode &&\n    refNode.parentNode &&\n    refNode.parentNode.insertBefore(newNode, refNode);\n\n  /**\n   * Replace a node\n   * @param {HTMLElement} newNode - new node to add to the DOM\n   * @param {HTMLElement} replaced - node to replace\n   * @returns {undefined}\n   */\n  const replaceChild = (newNode, replaced) =>\n    replaced &&\n    replaced.parentNode &&\n    replaced.parentNode.replaceChild(newNode, replaced);\n\n  const ATTRIBUTE = 0;\n  const EVENT = 1;\n  const TEXT = 2;\n  const VALUE = 3;\n\n  const expressionTypes = {\n    ATTRIBUTE,\n    EVENT,\n    TEXT,\n    VALUE,\n  };\n\n  // does simply nothing\n  function noop() {\n    return this\n  }\n\n  /**\n   * Autobind the methods of a source object to itself\n   * @param   {Object} source - probably a riot tag instance\n   * @param   {Array<string>} methods - list of the methods to autobind\n   * @returns {Object} the original object received\n   */\n  function autobindMethods(source, methods) {\n    methods.forEach((method) => {\n      source[method] = source[method].bind(source);\n    });\n\n    return source\n  }\n\n  /**\n   * Call the first argument received only if it's a function otherwise return it as it is\n   * @param   {*} source - anything\n   * @returns {*} anything\n   */\n  function callOrAssign(source) {\n    return isFunction(source)\n      ? source.prototype && source.prototype.constructor\n        ? new source()\n        : source()\n      : source\n  }\n\n  /**\n   * Throw an error with a descriptive message\n   * @param   { string } message - error message\n   * @param   { string } cause - optional error cause object\n   * @returns { undefined } hoppla... at this point the program should stop working\n   */\n  function panic(message, cause) {\n    throw new Error(message, { cause })\n  }\n  /**\n   * Returns the memoized (cached) function.\n   * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n   * @param {Function} fn - function to memoize\n   * @returns {Function} memoize function\n   */\n  function memoize(fn) {\n    const cache = new Map();\n    const cached = (val) => {\n      return cache.has(val)\n        ? cache.get(val)\n        : cache.set(val, fn.call(this, val)) && cache.get(val)\n    };\n    cached.cache = cache;\n    return cached\n  }\n\n  /**\n   * Evaluate a list of attribute expressions\n   * @param   {Array} attributes - attribute expressions generated by the riot compiler\n   * @returns {Object} key value pairs with the result of the computation\n   */\n  function evaluateAttributeExpressions(attributes) {\n    return attributes.reduce((acc, attribute) => {\n      const { value, type } = attribute;\n\n      switch (true) {\n        // spread attribute\n        case !attribute.name && type === ATTRIBUTE:\n          return {\n            ...acc,\n            ...value,\n          }\n        // value attribute\n        case type === VALUE:\n          acc.value = attribute.value;\n          break\n        // normal attributes\n        default:\n          acc[dashToCamelCase(attribute.name)] = attribute.value;\n      }\n\n      return acc\n    }, {})\n  }\n\n  /**\n   * Helper function to set an immutable property\n   * @param   {Object} source - object where the new property will be set\n   * @param   {string} key - object key where the new property will be stored\n   * @param   {*} value - value of the new property\n   * @param   {Object} options - set the property overriding the default options\n   * @returns {Object} - the original object modified\n   */\n  function defineProperty(source, key, value, options = {}) {\n    /* eslint-disable fp/no-mutating-methods */\n    Object.defineProperty(source, key, {\n      value,\n      enumerable: false,\n      writable: false,\n      configurable: true,\n      ...options,\n    });\n    /* eslint-enable fp/no-mutating-methods */\n\n    return source\n  }\n\n  /**\n   * Define multiple properties on a target object\n   * @param   {Object} source - object where the new properties will be set\n   * @param   {Object} properties - object containing as key pair the key + value properties\n   * @param   {Object} options - set the property overriding the default options\n   * @returns {Object} the original object modified\n   */\n  function defineProperties(source, properties, options) {\n    Object.entries(properties).forEach(([key, value]) => {\n      defineProperty(source, key, value, options);\n    });\n\n    return source\n  }\n\n  /**\n   * Define default properties if they don't exist on the source object\n   * @param   {Object} source - object that will receive the default properties\n   * @param   {Object} defaults - object containing additional optional keys\n   * @returns {Object} the original object received enhanced\n   */\n  function defineDefaults(source, defaults) {\n    Object.entries(defaults).forEach(([key, value]) => {\n      if (!source[key]) source[key] = value;\n    });\n\n    return source\n  }\n\n  /**\n   * Generate a new object picking only the properties from a given array\n   * @param {Object} source - target object\n   * @param {Array} keys - list of keys that we want to copy over to the new object\n   * @return {Object} a new object conaining only the keys that we have picked from the keys array list\n   */\n  function pick(source, keys) {\n    return isObject(source)\n      ? Object.fromEntries(keys.map((key) => [key, source[key]]))\n      : source\n  }\n\n  // Components without template use a mocked template interface with some basic functionalities to\n  // guarantee consistent rendering behaviour see https://github.com/riot/riot/issues/2984\n  const MOCKED_TEMPLATE_INTERFACE = {\n    [MOUNT_METHOD_KEY](el) {\n      this.el = el;\n    },\n    [UPDATE_METHOD_KEY]: noop,\n    [UNMOUNT_METHOD_KEY](_, __, mustRemoveRoot = false) {\n      if (mustRemoveRoot) removeChild(this.el);\n      else if (!mustRemoveRoot) cleanNode(this.el);\n    },\n    clone() {\n      return { ...this }\n    },\n    createDOM: noop,\n  };\n\n  const HEAD_SYMBOL = Symbol();\n  const TAIL_SYMBOL = Symbol();\n  const REF_ATTRIBUTE = 'ref';\n\n  /**\n   * Create the <template> fragments text nodes\n   * @return {Object} {{head: Text, tail: Text}}\n   */\n  function createHeadTailPlaceholders() {\n    const head = document.createTextNode('');\n    const tail = document.createTextNode('');\n\n    head[HEAD_SYMBOL] = true;\n    tail[TAIL_SYMBOL] = true;\n\n    return { head, tail }\n  }\n\n  /**\n   * Create the template meta object in case of <template> fragments\n   * @param   {TemplateChunk} componentTemplate - template chunk object\n   * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n   */\n  function createTemplateMeta(componentTemplate) {\n    const fragment = componentTemplate.dom.cloneNode(true);\n    const { head, tail } = createHeadTailPlaceholders();\n\n    return {\n      avoidDOMInjection: true,\n      fragment,\n      head,\n      tail,\n      children: [head, ...Array.from(fragment.childNodes), tail],\n    }\n  }\n\n  /* c8 ignore start */\n  /**\n   * ISC License\n   *\n   * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any\n   * purpose with or without fee is hereby granted, provided that the above\n   * copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n   * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n   * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n   * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n   * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n   * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   * PERFORMANCE OF THIS SOFTWARE.\n   */\n\n  // fork of https://github.com/WebReflection/udomdiff version 1.1.0\n  // due to https://github.com/WebReflection/udomdiff/pull/2\n  /* eslint-disable */\n\n  /**\n   * @param {Node[]} a The list of current/live children\n   * @param {Node[]} b The list of future children\n   * @param {(entry: Node, action: number) => Node} get\n   * The callback invoked per each entry related DOM operation.\n   * @param {Node} [before] The optional node used as anchor to insert before.\n   * @returns {Node[]} The same list of future children.\n   */\n  const udomdiff = (a, b, get, before) => {\n    const bLength = b.length;\n    let aEnd = a.length;\n    let bEnd = bLength;\n    let aStart = 0;\n    let bStart = 0;\n    let map = null;\n    while (aStart < aEnd || bStart < bEnd) {\n      // append head, tail, or nodes in between: fast path\n      if (aEnd === aStart) {\n        // we could be in a situation where the rest of nodes that\n        // need to be added are not at the end, and in such case\n        // the node to `insertBefore`, if the index is more than 0\n        // must be retrieved, otherwise it's gonna be the first item.\n        const node =\n          bEnd < bLength\n            ? bStart\n              ? get(b[bStart - 1], -0).nextSibling\n              : get(b[bEnd - bStart], 0)\n            : before;\n        while (bStart < bEnd) insertBefore(get(b[bStart++], 1), node);\n      }\n      // remove head or tail: fast path\n      else if (bEnd === bStart) {\n        while (aStart < aEnd) {\n          // remove the node only if it's unknown or not live\n          if (!map || !map.has(a[aStart])) removeChild(get(a[aStart], -1));\n          aStart++;\n        }\n      }\n      // same node: fast path\n      else if (a[aStart] === b[bStart]) {\n        aStart++;\n        bStart++;\n      }\n      // same tail: fast path\n      else if (a[aEnd - 1] === b[bEnd - 1]) {\n        aEnd--;\n        bEnd--;\n      }\n      // The once here single last swap \"fast path\" has been removed in v1.1.0\n      // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n      // reverse swap: also fast path\n      else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n        // this is a \"shrink\" operation that could happen in these cases:\n        // [1, 2, 3, 4, 5]\n        // [1, 4, 3, 2, 5]\n        // or asymmetric too\n        // [1, 2, 3, 4, 5]\n        // [1, 2, 3, 5, 6, 4]\n        const node = get(a[--aEnd], -1).nextSibling;\n        insertBefore(get(b[bStart++], 1), get(a[aStart++], -1).nextSibling);\n        insertBefore(get(b[--bEnd], 1), node);\n        // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n        // The main reason to do this, is that when a[aEnd] will be reached,\n        // the loop will likely be on the fast path, as identical to b[bEnd].\n        // In the best case scenario, the next loop will skip the tail,\n        // but in the worst one, this node will be considered as already\n        // processed, bailing out pretty quickly from the map index check\n        a[aEnd] = b[bEnd];\n      }\n      // map based fallback, \"slow\" path\n      else {\n        // the map requires an O(bEnd - bStart) operation once\n        // to store all future nodes indexes for later purposes.\n        // In the worst case scenario, this is a full O(N) cost,\n        // and such scenario happens at least when all nodes are different,\n        // but also if both first and last items of the lists are different\n        if (!map) {\n          map = new Map();\n          let i = bStart;\n          while (i < bEnd) map.set(b[i], i++);\n        }\n        // if it's a future node, hence it needs some handling\n        if (map.has(a[aStart])) {\n          // grab the index of such node, 'cause it might have been processed\n          const index = map.get(a[aStart]);\n          // if it's not already processed, look on demand for the next LCS\n          if (bStart < index && index < bEnd) {\n            let i = aStart;\n            // counts the amount of nodes that are the same in the future\n            let sequence = 1;\n            while (++i < aEnd && i < bEnd && map.get(a[i]) === index + sequence)\n              sequence++;\n            // effort decision here: if the sequence is longer than replaces\n            // needed to reach such sequence, which would brings again this loop\n            // to the fast path, prepend the difference before a sequence,\n            // and move only the future list index forward, so that aStart\n            // and bStart will be aligned again, hence on the fast path.\n            // An example considering aStart and bStart are both 0:\n            // a: [1, 2, 3, 4]\n            // b: [7, 1, 2, 3, 6]\n            // this would place 7 before 1 and, from that time on, 1, 2, and 3\n            // will be processed at zero cost\n            if (sequence > index - bStart) {\n              const node = get(a[aStart], 0);\n              while (bStart < index) insertBefore(get(b[bStart++], 1), node);\n            }\n            // if the effort wasn't good enough, fallback to a replace,\n            // moving both source and target indexes forward, hoping that some\n            // similar node will be found later on, to go back to the fast path\n            else {\n              replaceChild(get(b[bStart++], 1), get(a[aStart++], -1));\n            }\n          }\n          // otherwise move the source forward, 'cause there's nothing to do\n          else aStart++;\n        }\n        // this node has no meaning in the future list, so it's more than safe\n        // to remove it, and check the next live node out instead, meaning\n        // that only the live list index should be forwarded\n        else removeChild(get(a[aStart++], -1));\n      }\n    }\n    return b\n  };\n\n  const UNMOUNT_SCOPE = Symbol('unmount');\n\n  const EachBinding = {\n    // dynamic binding properties\n    // childrenMap: null,\n    // node: null,\n    // root: null,\n    // condition: null,\n    // evaluate: null,\n    // template: null,\n    // isTemplateTag: false,\n    nodes: [],\n    // getKey: null,\n    // indexName: null,\n    // itemName: null,\n    // afterPlaceholder: null,\n    // placeholder: null,\n\n    // API methods\n    mount(scope, parentScope) {\n      return this.update(scope, parentScope)\n    },\n    update(scope, parentScope) {\n      const { placeholder, nodes, childrenMap } = this;\n      const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n      const items = collection ? Array.from(collection) : [];\n\n      // prepare the diffing\n      const { newChildrenMap, batches, futureNodes } = createPatch(\n        items,\n        scope,\n        parentScope,\n        this,\n      );\n\n      // patch the DOM only if there are new nodes\n      udomdiff(\n        nodes,\n        futureNodes,\n        patch(Array.from(childrenMap.values()), parentScope),\n        placeholder,\n      );\n\n      // trigger the mounts and the updates\n      batches.forEach((fn) => fn());\n\n      // update the children map\n      this.childrenMap = newChildrenMap;\n      this.nodes = futureNodes;\n\n      return this\n    },\n    unmount(scope, parentScope) {\n      this.update(UNMOUNT_SCOPE, parentScope);\n\n      return this\n    },\n  };\n\n  /**\n   * Patch the DOM while diffing\n   * @param   {any[]} redundant - list of all the children (template, nodes, context) added via each\n   * @param   {*} parentScope - scope of the parent template\n   * @returns {Function} patch function used by domdiff\n   */\n  function patch(redundant, parentScope) {\n    return (item, info) => {\n      if (info < 0) {\n        // get the last element added to the childrenMap saved previously\n        const element = redundant[redundant.length - 1];\n\n        if (element) {\n          // get the nodes and the template in stored in the last child of the childrenMap\n          const { template, nodes, context } = element;\n          // remove the last node (notice <template> tags might have more children nodes)\n          nodes.pop();\n\n          // notice that we pass null as last argument because\n          // the root node and its children will be removed by domdiff\n          if (!nodes.length) {\n            // we have cleared all the children nodes and we can unmount this template\n            redundant.pop();\n            template.unmount(context, parentScope, null);\n          }\n        }\n      }\n\n      return item\n    }\n  }\n\n  /**\n   * Check whether a template must be filtered from a loop\n   * @param   {Function} condition - filter function\n   * @param   {Object} context - argument passed to the filter function\n   * @returns {boolean} true if this item should be skipped\n   */\n  function mustFilterItem(condition, context) {\n    return condition ? !condition(context) : false\n  }\n\n  /**\n   * Extend the scope of the looped template\n   * @param   {Object} scope - current template scope\n   * @param   {Object} options - options\n   * @param   {string} options.itemName - key to identify the looped item in the new context\n   * @param   {string} options.indexName - key to identify the index of the looped item\n   * @param   {number} options.index - current index\n   * @param   {*} options.item - collection item looped\n   * @returns {Object} enhanced scope object\n   */\n  function extendScope(scope, { itemName, indexName, index, item }) {\n    defineProperty(scope, itemName, item);\n    if (indexName) defineProperty(scope, indexName, index);\n\n    return scope\n  }\n\n  /**\n   * Loop the current template items\n   * @param   {Array} items - expression collection value\n   * @param   {*} scope - template scope\n   * @param   {*} parentScope - scope of the parent template\n   * @param   {EachBinding} binding - each binding object instance\n   * @returns {Object} data\n   * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n   * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n   * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n   */\n  function createPatch(items, scope, parentScope, binding) {\n    const {\n      condition,\n      template,\n      childrenMap,\n      itemName,\n      getKey,\n      indexName,\n      root,\n      isTemplateTag,\n    } = binding;\n    const newChildrenMap = new Map();\n    const batches = [];\n    const futureNodes = [];\n\n    items.forEach((item, index) => {\n      const context = extendScope(Object.create(scope), {\n        itemName,\n        indexName,\n        index,\n        item,\n      });\n      const key = getKey ? getKey(context) : index;\n      const oldItem = childrenMap.get(key);\n      const nodes = [];\n\n      if (mustFilterItem(condition, context)) {\n        return\n      }\n\n      const mustMount = !oldItem;\n      const componentTemplate = oldItem ? oldItem.template : template.clone();\n      const el = componentTemplate.el || root.cloneNode();\n      const meta =\n        isTemplateTag && mustMount\n          ? createTemplateMeta(componentTemplate)\n          : componentTemplate.meta;\n\n      if (mustMount) {\n        batches.push(() =>\n          componentTemplate.mount(el, context, parentScope, meta),\n        );\n      } else {\n        batches.push(() => componentTemplate.update(context, parentScope));\n      }\n\n      // create the collection of nodes to update or to add\n      // in case of template tags we need to add all its children nodes\n      if (isTemplateTag) {\n        nodes.push(...meta.children);\n      } else {\n        nodes.push(el);\n      }\n\n      // delete the old item from the children map\n      childrenMap.delete(key);\n      futureNodes.push(...nodes);\n\n      // update the children map\n      newChildrenMap.set(key, {\n        nodes,\n        template: componentTemplate,\n        context,\n        index,\n      });\n    });\n\n    return {\n      newChildrenMap,\n      batches,\n      futureNodes,\n    }\n  }\n\n  function create$6(\n    node,\n    { evaluate, condition, itemName, indexName, getKey, template },\n  ) {\n    const placeholder = document.createTextNode('');\n    const root = node.cloneNode();\n\n    insertBefore(placeholder, node);\n    removeChild(node);\n\n    return {\n      ...EachBinding,\n      childrenMap: new Map(),\n      node,\n      root,\n      condition,\n      evaluate,\n      isTemplateTag: isTemplate(root),\n      template: template.createDOM(node),\n      getKey,\n      indexName,\n      itemName,\n      placeholder,\n    }\n  }\n\n  /**\n   * Binding responsible for the `if` directive\n   */\n  const IfBinding = {\n    // dynamic binding properties\n    // node: null,\n    // evaluate: null,\n    // isTemplateTag: false,\n    // placeholder: null,\n    // template: null,\n\n    // API methods\n    mount(scope, parentScope) {\n      return this.update(scope, parentScope)\n    },\n    update(scope, parentScope) {\n      const value = !!this.evaluate(scope);\n      const mustMount = !this.value && value;\n      const mustUnmount = this.value && !value;\n      const mount = () => {\n        const pristine = this.node.cloneNode();\n\n        insertBefore(pristine, this.placeholder);\n        this.template = this.template.clone();\n        this.template.mount(pristine, scope, parentScope);\n      };\n\n      switch (true) {\n        case mustMount:\n          mount();\n          break\n        case mustUnmount:\n          this.unmount(scope);\n          break\n        default:\n          if (value) this.template.update(scope, parentScope);\n      }\n\n      this.value = value;\n\n      return this\n    },\n    unmount(scope, parentScope) {\n      this.template.unmount(scope, parentScope, true);\n\n      return this\n    },\n  };\n\n  function create$5(node, { evaluate, template }) {\n    const placeholder = document.createTextNode('');\n\n    insertBefore(placeholder, node);\n    removeChild(node);\n\n    return {\n      ...IfBinding,\n      node,\n      evaluate,\n      placeholder,\n      template: template.createDOM(node),\n    }\n  }\n\n  /* c8 ignore next */\n  const ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\n  const isNativeHtmlProperty = memoize(\n    (name) => ElementProto.hasOwnProperty(name), // eslint-disable-line\n  );\n\n  /**\n   * Add all the attributes provided\n   * @param   {HTMLElement} node - target node\n   * @param   {Object} attributes - object containing the attributes names and values\n   * @returns {undefined} sorry it's a void function :(\n   */\n  function setAllAttributes(node, attributes) {\n    Object.keys(attributes).forEach((name) =>\n      attributeExpression(node, { name }, attributes[name]),\n    );\n  }\n\n  /**\n   * Remove all the attributes provided\n   * @param   {HTMLElement} node - target node\n   * @param   {Object} newAttributes - object containing all the new attribute names\n   * @param   {Object} oldAttributes - object containing all the old attribute names\n   * @returns {undefined} sorry it's a void function :(\n   */\n  function removeAllAttributes(node, newAttributes, oldAttributes) {\n    const newKeys = newAttributes ? Object.keys(newAttributes) : [];\n\n    Object.keys(oldAttributes)\n      .filter((name) => !newKeys.includes(name))\n      .forEach((attribute) => node.removeAttribute(attribute));\n  }\n\n  /**\n   * Check whether the attribute value can be rendered\n   * @param {*} value - expression value\n   * @returns {boolean} true if we can render this attribute value\n   */\n  function canRenderAttribute(value) {\n    return ['string', 'number', 'boolean'].includes(typeof value)\n  }\n\n  /**\n   * Check whether the attribute should be removed\n   * @param {*} value - expression value\n   * @param   {boolean} isBoolean - flag to handle boolean attributes\n   * @returns {boolean} boolean - true if the attribute can be removed}\n   */\n  function shouldRemoveAttribute(value, isBoolean) {\n    // boolean attributes should be removed if the value is falsy\n    if (isBoolean) return !value && value !== 0\n    // otherwise we can try to render it\n    return typeof value === 'undefined' || value === null\n  }\n\n  /**\n   * This methods handles the DOM attributes updates\n   * @param   {HTMLElement} node - target node\n   * @param   {Object} expression - expression object\n   * @param   {string} expression.name - attribute name\n   * @param   {boolean} expression.isBoolean - flag to handle boolean attributes\n   * @param   {*} value - new expression value\n   * @param   {*} oldValue - the old expression cached value\n   * @returns {undefined}\n   */\n  function attributeExpression(\n    node,\n    { name, isBoolean: isBoolean$1 },\n    value,\n    oldValue,\n  ) {\n    // is it a spread operator? {...attributes}\n    if (!name) {\n      if (oldValue) {\n        // remove all the old attributes\n        removeAllAttributes(node, value, oldValue);\n      }\n\n      // is the value still truthy?\n      if (value) {\n        setAllAttributes(node, value);\n      }\n\n      return\n    }\n\n    // ref attributes are treated differently so we early return in this case\n    if (name === REF_ATTRIBUTE) {\n      node && node.removeAttribute(node, name);\n      value(node);\n      return\n    }\n\n    // store the attribute on the node to make it compatible with native custom elements\n    if (\n      !isNativeHtmlProperty(name) &&\n      (isBoolean(value) || isObject(value) || isFunction(value))\n    ) {\n      node[name] = value;\n    }\n\n    if (shouldRemoveAttribute(value, isBoolean$1)) {\n      node.removeAttribute(name);\n    } else if (canRenderAttribute(value)) {\n      node.setAttribute(name, normalizeValue(name, value, isBoolean$1));\n    }\n  }\n\n  /**\n   * Get the value as string\n   * @param   {string} name - attribute name\n   * @param   {*} value - user input value\n   * @param   {boolean} isBoolean - boolean attributes flag\n   * @returns {string} input value as string\n   */\n  function normalizeValue(name, value, isBoolean) {\n    // be sure that expressions like selected={ true } will always be rendered as selected='selected'\n    // fix https://github.com/riot/riot/issues/2975\n    return value === true && isBoolean ? name : value\n  }\n\n  const RE_EVENTS_PREFIX = /^on/;\n\n  const getCallbackAndOptions = (value) =>\n    Array.isArray(value) ? value : [value, false];\n\n  // see also https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\n  const EventListener = {\n    handleEvent(event) {\n      this[event.type](event);\n    },\n  };\n  const ListenersWeakMap = new WeakMap();\n\n  const createListener = (node) => {\n    const listener = Object.create(EventListener);\n    ListenersWeakMap.set(node, listener);\n    return listener\n  };\n\n  /**\n   * Set a new event listener\n   * @param   {HTMLElement} node - target node\n   * @param   {Object} expression - expression object\n   * @param   {string} expression.name - event name\n   * @param   {*} value - new expression value\n   * @returns {value} the callback just received\n   */\n  function eventExpression(node, { name }, value) {\n    const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n    const eventListener = ListenersWeakMap.get(node) || createListener(node);\n    const [callback, options] = getCallbackAndOptions(value);\n    const handler = eventListener[normalizedEventName];\n    const mustRemoveEvent = handler && !callback;\n    const mustAddEvent = callback && !handler;\n\n    if (mustRemoveEvent) {\n      node.removeEventListener(normalizedEventName, eventListener);\n    }\n\n    if (mustAddEvent) {\n      node.addEventListener(normalizedEventName, eventListener, options);\n    }\n\n    eventListener[normalizedEventName] = callback;\n  }\n\n  /**\n   * Normalize the user value in order to render a empty string in case of falsy values\n   * @param   {*} value - user input value\n   * @returns {string} hopefully a string\n   */\n  function normalizeStringValue(value) {\n    return isNil(value) ? '' : value\n  }\n\n  /**\n   * Get the the target text node to update or create one from of a comment node\n   * @param   {HTMLElement} node - any html element containing childNodes\n   * @param   {number} childNodeIndex - index of the text node in the childNodes list\n   * @returns {Text} the text node to update\n   */\n  const getTextNode = (node, childNodeIndex) => {\n    return node.childNodes[childNodeIndex]\n  };\n\n  /**\n   * This methods handles a simple text expression update\n   * @param   {HTMLElement} node - target node\n   * @param   {Object} data - expression object\n   * @param   {*} value - new expression value\n   * @returns {undefined}\n   */\n  function textExpression(node, data, value) {\n    node.data = normalizeStringValue(value);\n  }\n\n  /**\n   * This methods handles the input fields value updates\n   * @param   {HTMLElement} node - target node\n   * @param   {Object} expression - expression object\n   * @param   {*} value - new expression value\n   * @returns {undefined}\n   */\n  function valueExpression(node, expression, value) {\n    node.value = normalizeStringValue(value);\n  }\n\n  const expressions = {\n    [ATTRIBUTE]: attributeExpression,\n    [EVENT]: eventExpression,\n    [TEXT]: textExpression,\n    [VALUE]: valueExpression,\n  };\n\n  const Expression = {\n    // Static props\n    // node: null,\n    // value: null,\n\n    // API methods\n    /**\n     * Mount the expression evaluating its initial value\n     * @param   {*} scope - argument passed to the expression to evaluate its current values\n     * @returns {Expression} self\n     */\n    mount(scope) {\n      // hopefully a pure function\n      this.value = this.evaluate(scope);\n\n      // IO() DOM updates\n      apply(this, this.value);\n\n      return this\n    },\n    /**\n     * Update the expression if its value changed\n     * @param   {*} scope - argument passed to the expression to evaluate its current values\n     * @returns {Expression} self\n     */\n    update(scope) {\n      // pure function\n      const value = this.evaluate(scope);\n\n      if (this.value !== value) {\n        // IO() DOM updates\n        apply(this, value);\n        this.value = value;\n      }\n\n      return this\n    },\n    /**\n     * Expression teardown method\n     * @returns {Expression} self\n     */\n    unmount() {\n      // unmount only the event handling expressions\n      if (this.type === EVENT) apply(this, null);\n      // ref attributes need to be unmounted as well\n      if (this.name === REF_ATTRIBUTE)\n        expressions[ATTRIBUTE](null, this, this.value);\n\n      return this\n    },\n  };\n\n  /**\n   * IO() function to handle the DOM updates\n   * @param {Expression} expression - expression object\n   * @param {*} value - current expression value\n   * @returns {undefined}\n   */\n  function apply(expression, value) {\n    return expressions[expression.type](\n      expression.node,\n      expression,\n      value,\n      expression.value,\n    )\n  }\n\n  function create$4(node, data) {\n    return {\n      ...Expression,\n      ...data,\n      node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node,\n    }\n  }\n\n  /**\n   * Create a flat object having as keys a list of methods that if dispatched will propagate\n   * on the whole collection\n   * @param   {Array} collection - collection to iterate\n   * @param   {Array<string>} methods - methods to execute on each item of the collection\n   * @param   {*} context - context returned by the new methods created\n   * @returns {Object} a new object to simplify the the nested methods dispatching\n   */\n  function flattenCollectionMethods(collection, methods, context) {\n    return methods.reduce((acc, method) => {\n      return {\n        ...acc,\n        [method]: (scope) => {\n          return collection.map((item) => item[method](scope)) && context\n        },\n      }\n    }, {})\n  }\n\n  function create$3(node, { expressions }) {\n    return flattenCollectionMethods(\n      expressions.map((expression) => create$4(node, expression)),\n      ['mount', 'update', 'unmount'],\n    )\n  }\n\n  function extendParentScope(attributes, scope, parentScope) {\n    if (!attributes || !attributes.length) return parentScope\n\n    const expressions = attributes.map((attr) => ({\n      ...attr,\n      value: attr.evaluate(scope),\n    }));\n\n    return Object.assign(\n      Object.create(parentScope || null),\n      evaluateAttributeExpressions(expressions),\n    )\n  }\n\n  // this function is only meant to fix an edge case\n  // https://github.com/riot/riot/issues/2842\n  const getRealParent = (scope, parentScope) =>\n    scope[PARENT_KEY_SYMBOL] || parentScope;\n\n  const SlotBinding = {\n    // dynamic binding properties\n    // node: null,\n    // name: null,\n    attributes: [],\n    // templateData: null,\n    // template: null,\n\n    getTemplateScope(scope, parentScope) {\n      return extendParentScope(this.attributes, scope, parentScope)\n    },\n\n    // API methods\n    mount(scope, parentScope) {\n      const templateData = scope.slots\n        ? scope.slots.find(({ id }) => id === this.name)\n        : false;\n      const { parentNode } = this.node;\n\n      // if the slot did not pass any content, we will use the self slot for optional fallback content (https://github.com/riot/riot/issues/3024)\n      const realParent = templateData ? getRealParent(scope, parentScope) : scope;\n\n      this.templateData = templateData;\n\n      // override the template property if the slot needs to be replaced\n      this.template =\n        (templateData &&\n          create(templateData.html, templateData.bindings).createDOM(\n            parentNode,\n          )) ||\n        // otherwise use the optional template fallback if provided by the compiler see also https://github.com/riot/riot/issues/3014\n        this.template?.clone();\n\n      if (this.template) {\n        cleanNode(this.node);\n        this.template.mount(\n          this.node,\n          this.getTemplateScope(scope, realParent),\n          realParent,\n        );\n        this.template.children = Array.from(this.node.childNodes);\n      }\n\n      moveSlotInnerContent(this.node);\n      removeChild(this.node);\n\n      return this\n    },\n    update(scope, parentScope) {\n      if (this.template) {\n        const realParent = this.templateData\n          ? getRealParent(scope, parentScope)\n          : scope;\n\n        this.template.update(this.getTemplateScope(scope, realParent), realParent);\n      }\n\n      return this\n    },\n    unmount(scope, parentScope, mustRemoveRoot) {\n      if (this.template) {\n        this.template.unmount(\n          this.getTemplateScope(scope, parentScope),\n          null,\n          mustRemoveRoot,\n        );\n      }\n\n      return this\n    },\n  };\n\n  /**\n   * Move the inner content of the slots outside of them\n   * @param   {HTMLElement} slot - slot node\n   * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n   */\n  function moveSlotInnerContent(slot) {\n    const child = slot && slot.firstChild;\n\n    if (!child) return\n\n    insertBefore(child, slot);\n    moveSlotInnerContent(slot);\n  }\n\n  /**\n   * Create a single slot binding\n   * @param   {HTMLElement} node - slot node\n   * @param   {string} name - slot id\n   * @param   {AttributeExpressionData[]} attributes - slot attributes\n   * @returns {Object} Slot binding object\n   */\n  function createSlot(node, { name, attributes, template }) {\n    return {\n      ...SlotBinding,\n      attributes,\n      template,\n      node,\n      name,\n    }\n  }\n\n  /**\n   * Create a new tag object if it was registered before, otherwise fallback to the simple\n   * template chunk\n   * @param   {Function} component - component factory function\n   * @param   {Array<Object>} slots - array containing the slots markup\n   * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n   * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n   */\n  function getTag(component, slots = [], attributes = []) {\n    // if this tag was registered before we will return its implementation\n    if (component) {\n      return component({ slots, attributes })\n    }\n\n    // otherwise we return a template chunk\n    return create(slotsToMarkup(slots), [\n      ...slotBindings(slots),\n      {\n        // the attributes should be registered as binding\n        // if we fallback to a normal template chunk\n        expressions: attributes.map((attr) => {\n          return {\n            type: ATTRIBUTE,\n            ...attr,\n          }\n        }),\n      },\n    ])\n  }\n\n  /**\n   * Merge all the slots bindings into a single array\n   * @param   {Array<Object>} slots - slots collection\n   * @returns {Array<Bindings>} flatten bindings array\n   */\n  function slotBindings(slots) {\n    return slots.reduce((acc, { bindings }) => acc.concat(bindings), [])\n  }\n\n  /**\n   * Merge all the slots together in a single markup string\n   * @param   {Array<Object>} slots - slots collection\n   * @returns {string} markup of all the slots in a single string\n   */\n  function slotsToMarkup(slots) {\n    return slots.reduce((acc, slot) => {\n      return acc + slot.html\n    }, '')\n  }\n\n  const TagBinding = {\n    // dynamic binding properties\n    // node: null,\n    // evaluate: null,\n    // name: null,\n    // slots: null,\n    // tag: null,\n    // attributes: null,\n    // getComponent: null,\n\n    mount(scope) {\n      return this.update(scope)\n    },\n    update(scope, parentScope) {\n      const name = this.evaluate(scope);\n\n      // simple update\n      if (name && name === this.name) {\n        this.tag.update(scope);\n      } else {\n        // unmount the old tag if it exists\n        this.unmount(scope, parentScope, true);\n\n        // mount the new tag\n        this.name = name;\n        this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n        this.tag.mount(this.node, scope);\n      }\n\n      return this\n    },\n    unmount(scope, parentScope, keepRootTag) {\n      if (this.tag) {\n        // keep the root tag\n        this.tag.unmount(keepRootTag);\n      }\n\n      return this\n    },\n  };\n\n  function create$2(\n    node,\n    { evaluate, getComponent, slots, attributes },\n  ) {\n    return {\n      ...TagBinding,\n      node,\n      evaluate,\n      slots,\n      attributes,\n      getComponent,\n    }\n  }\n\n  const bindings = {\n    [IF]: create$5,\n    [SIMPLE]: create$3,\n    [EACH]: create$6,\n    [TAG]: create$2,\n    [SLOT]: createSlot,\n  };\n\n  /**\n   * Text expressions in a template tag will get childNodeIndex value normalized\n   * depending on the position of the <template> tag offset\n   * @param   {Expression[]} expressions - riot expressions array\n   * @param   {number} textExpressionsOffset - offset of the <template> tag\n   * @returns {Expression[]} expressions containing the text expressions normalized\n   */\n  function fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n    return expressions.map((e) =>\n      e.type === TEXT\n        ? {\n            ...e,\n            childNodeIndex: e.childNodeIndex + textExpressionsOffset,\n          }\n        : e,\n    )\n  }\n\n  /**\n   * Bind a new expression object to a DOM node\n   * @param   {HTMLElement} root - DOM node where to bind the expression\n   * @param   {TagBindingData} binding - binding data\n   * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n   * @returns {Binding} Binding object\n   */\n  function create$1(root, binding, templateTagOffset) {\n    const { selector, type, redundantAttribute, expressions } = binding;\n    // find the node to apply the bindings\n    const node = selector ? root.querySelector(selector) : root;\n\n    // remove eventually additional attributes created only to select this node\n    if (redundantAttribute) node.removeAttribute(redundantAttribute);\n    const bindingExpressions = expressions || [];\n\n    // init the binding\n    return (bindings[type] || bindings[SIMPLE])(node, {\n      ...binding,\n      expressions:\n        templateTagOffset && !selector\n          ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset)\n          : bindingExpressions,\n    })\n  }\n\n  // in this case a simple innerHTML is enough\n  function createHTMLTree(html, root) {\n    const template = isTemplate(root) ? root : document.createElement('template');\n    template.innerHTML = html;\n    return template.content\n  }\n\n  // for svg nodes we need a bit more work\n  /* c8 ignore start */\n  function createSVGTree(html, container) {\n    // create the SVGNode\n    const svgNode = container.ownerDocument.importNode(\n      new window.DOMParser().parseFromString(\n        `<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`,\n        'application/xml',\n      ).documentElement,\n      true,\n    );\n\n    return svgNode\n  }\n  /* c8 ignore end */\n\n  /**\n   * Create the DOM that will be injected\n   * @param {Object} root - DOM node to find out the context where the fragment will be created\n   * @param   {string} html - DOM to create as string\n   * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n   */\n  function createDOMTree(root, html) {\n    /* c8 ignore next */\n    if (isSvg(root)) return createSVGTree(html, root)\n\n    return createHTMLTree(html, root)\n  }\n\n  /**\n   * Inject the DOM tree into a target node\n   * @param   {HTMLElement} el - target element\n   * @param   {DocumentFragment|SVGElement} dom - dom tree to inject\n   * @returns {undefined}\n   */\n  function injectDOM(el, dom) {\n    switch (true) {\n      case isSvg(el):\n        moveChildren(dom, el);\n        break\n      case isTemplate(el):\n        el.parentNode.replaceChild(dom, el);\n        break\n      default:\n        el.appendChild(dom);\n    }\n  }\n\n  /**\n   * Create the Template DOM skeleton\n   * @param   {HTMLElement} el - root node where the DOM will be injected\n   * @param   {string|HTMLElement} html - HTML markup or HTMLElement that will be injected into the root node\n   * @returns {?DocumentFragment} fragment that will be injected into the root node\n   */\n  function createTemplateDOM(el, html) {\n    return html && (typeof html === 'string' ? createDOMTree(el, html) : html)\n  }\n\n  /**\n   * Get the offset of the <template> tag\n   * @param {HTMLElement} parentNode - template tag parent node\n   * @param {HTMLElement} el - the template tag we want to render\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {number} offset of the <template> tag calculated from its siblings DOM nodes\n   */\n  function getTemplateTagOffset(parentNode, el, meta) {\n    const siblings = Array.from(parentNode.childNodes);\n\n    return Math.max(siblings.indexOf(el), siblings.indexOf(meta.head) + 1, 0)\n  }\n\n  /**\n   * Template Chunk model\n   * @type {Object}\n   */\n  const TemplateChunk = {\n    // Static props\n    // bindings: null,\n    // bindingsData: null,\n    // html: null,\n    // isTemplateTag: false,\n    // fragment: null,\n    // children: null,\n    // dom: null,\n    // el: null,\n\n    /**\n     * Create the template DOM structure that will be cloned on each mount\n     * @param   {HTMLElement} el - the root node\n     * @returns {TemplateChunk} self\n     */\n    createDOM(el) {\n      // make sure that the DOM gets created before cloning the template\n      this.dom =\n        this.dom ||\n        createTemplateDOM(el, this.html) ||\n        document.createDocumentFragment();\n\n      return this\n    },\n\n    // API methods\n    /**\n     * Attach the template to a DOM node\n     * @param   {HTMLElement} el - target DOM node\n     * @param   {*} scope - template data\n     * @param   {*} parentScope - scope of the parent template tag\n     * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n     * @returns {TemplateChunk} self\n     */\n    mount(el, scope, parentScope, meta = {}) {\n      if (!el) panic('Please provide DOM node to mount properly your template');\n\n      if (this.el) this.unmount(scope);\n\n      // <template> tags require a bit more work\n      // the template fragment might be already created via meta outside of this call\n      const { fragment, children, avoidDOMInjection } = meta;\n      // <template> bindings of course can not have a root element\n      // so we check the parent node to set the query selector bindings\n      const { parentNode } = children ? children[0] : el;\n      const isTemplateTag = isTemplate(el);\n      const templateTagOffset = isTemplateTag\n        ? getTemplateTagOffset(parentNode, el, meta)\n        : null;\n\n      // create the DOM if it wasn't created before\n      this.createDOM(el);\n\n      // create the DOM of this template cloning the original DOM structure stored in this instance\n      // notice that if a documentFragment was passed (via meta) we will use it instead\n      const cloneNode = fragment || this.dom.cloneNode(true);\n\n      // store root node\n      // notice that for template tags the root note will be the parent tag\n      this.el = isTemplateTag ? parentNode : el;\n\n      // create the children array only for the <template> fragments\n      this.children = isTemplateTag\n        ? children || Array.from(cloneNode.childNodes)\n        : null;\n\n      // inject the DOM into the el only if a fragment is available\n      if (!avoidDOMInjection && cloneNode) injectDOM(el, cloneNode);\n\n      // create the bindings\n      this.bindings = this.bindingsData.map((binding) =>\n        create$1(this.el, binding, templateTagOffset),\n      );\n      this.bindings.forEach((b) => b.mount(scope, parentScope));\n\n      // store the template meta properties\n      this.meta = meta;\n\n      return this\n    },\n\n    /**\n     * Update the template with fresh data\n     * @param   {*} scope - template data\n     * @param   {*} parentScope - scope of the parent template tag\n     * @returns {TemplateChunk} self\n     */\n    update(scope, parentScope) {\n      this.bindings.forEach((b) => b.update(scope, parentScope));\n\n      return this\n    },\n\n    /**\n     * Remove the template from the node where it was initially mounted\n     * @param   {*} scope - template data\n     * @param   {*} parentScope - scope of the parent template tag\n     * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n     * if false or undefined clean the root tag content, if null don't touch the DOM\n     * @returns {TemplateChunk} self\n     */\n    unmount(scope, parentScope, mustRemoveRoot = false) {\n      const el = this.el;\n\n      if (!el) {\n        return this\n      }\n\n      this.bindings.forEach((b) => b.unmount(scope, parentScope, mustRemoveRoot));\n\n      switch (true) {\n        // pure components should handle the DOM unmount updates by themselves\n        // for mustRemoveRoot === null don't touch the DOM\n        case el[IS_PURE_SYMBOL] || mustRemoveRoot === null:\n          break\n\n        // if children are declared, clear them\n        // applicable for <template> and <slot/> bindings\n        case Array.isArray(this.children):\n          clearChildren(this.children);\n          break\n\n        // clean the node children only\n        case !mustRemoveRoot:\n          cleanNode(el);\n          break\n\n        // remove the root node only if the mustRemoveRoot is truly\n        case !!mustRemoveRoot:\n          removeChild(el);\n          break\n      }\n\n      this.el = null;\n\n      return this\n    },\n\n    /**\n     * Clone the template chunk\n     * @returns {TemplateChunk} a clone of this object resetting the this.el property\n     */\n    clone() {\n      return {\n        ...this,\n        meta: {},\n        el: null,\n      }\n    },\n  };\n\n  /**\n   * Create a template chunk wiring also the bindings\n   * @param   {string|HTMLElement} html - template string\n   * @param   {BindingData[]} bindings - bindings collection\n   * @returns {TemplateChunk} a new TemplateChunk copy\n   */\n  function create(html, bindings = []) {\n    return {\n      ...TemplateChunk,\n      html,\n      bindingsData: bindings,\n    }\n  }\n\n  /**\n   * Factory function to create the component templates only once\n   * @param   {Function} template - component template creation function\n   * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n   * @param   {Function} getChildComponent - getter function to return the children components\n   * @returns {TemplateChunk} template chunk object\n   */\n  function componentTemplateFactory(\n    template,\n    componentWrapper,\n    getChildComponent,\n  ) {\n    return template(\n      create,\n      expressionTypes,\n      bindingTypes,\n      getChildComponent,\n    )\n  }\n\n  const PURE_COMPONENT_API = Object.freeze({\n    [MOUNT_METHOD_KEY]: noop,\n    [UPDATE_METHOD_KEY]: noop,\n    [UNMOUNT_METHOD_KEY]: noop,\n  });\n\n  /**\n   * Bind a DOM node to its component object\n   * @param   {HTMLElement} node - html node mounted\n   * @param   {Object} component - Riot.js component object\n   * @returns {Object} the component object received as second argument\n   */\n  const bindDOMNodeToComponentInstance = (node, component) =>\n    (node[DOM_COMPONENT_INSTANCE_PROPERTY] = component);\n\n  /**\n   * Wrap the Riot.js core API methods using a mapping function\n   * @param   {Function} mapFunction - lifting function\n   * @returns {Object} an object having the { mount, update, unmount } functions\n   */\n  function createCoreAPIMethods(mapFunction) {\n    return [MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY].reduce(\n      (acc, method) => {\n        acc[method] = mapFunction(method);\n\n        return acc\n      },\n      {},\n    )\n  }\n\n  /**\n   * Create a pure component\n   * @param   {Function} pureFactoryFunction - pure component factory function\n   * @param   {Array} options.slots - component slots\n   * @param   {Array} options.attributes - component attributes\n   * @param   {Array} options.template - template factory function\n   * @param   {Array} options.template - template factory function\n   * @param   {any} options.props - initial component properties\n   * @returns {Object} pure component object\n   */\n  function createPureComponent(\n    pureFactoryFunction,\n    { slots, attributes, props, css, template },\n  ) {\n    if (template) panic('Pure components can not have html');\n    if (css) panic('Pure components do not have css');\n\n    const component = defineDefaults(\n      pureFactoryFunction({ slots, attributes, props }),\n      PURE_COMPONENT_API,\n    );\n\n    return createCoreAPIMethods((method) => (...args) => {\n      // intercept the mount calls to bind the DOM node to the pure object created\n      // see also https://github.com/riot/riot/issues/2806\n      if (method === MOUNT_METHOD_KEY) {\n        const [element] = args;\n        // mark this node as pure element\n        defineProperty(element, IS_PURE_SYMBOL, true);\n        bindDOMNodeToComponentInstance(element, component);\n      }\n\n      component[method](...args);\n\n      return component\n    })\n  }\n\n  /**\n   * Converts any DOM node/s to a loopable array\n   * @param   { HTMLElement|NodeList } els - single html element or a node list\n   * @returns { Array } always a loopable object\n   */\n  function domToArray(els) {\n    // can this object be already looped?\n    if (!Array.isArray(els)) {\n      // is it a node list?\n      if (\n        /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n          .test(Object.prototype.toString.call(els))\n          && typeof els.length === 'number'\n      )\n        return Array.from(els)\n      else\n        // if it's a single node\n        // it will be returned as \"array\" with one single entry\n        return [els]\n    }\n    // this object could be looped out of the box\n    return els\n  }\n\n  /**\n   * Simple helper to find DOM nodes returning them as array like loopable object\n   * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n   * @param   { HTMLElement }        scope      - context defining where the query will search for the DOM nodes\n   * @returns { Array } DOM nodes found as array\n   */\n  function $(selector, scope) {\n    return domToArray(typeof selector === 'string' ?\n      (scope || document).querySelectorAll(selector) :\n      selector\n    )\n  }\n\n  const COMPONENT_DOM_SELECTORS = Object.freeze({\n    // component helpers\n    $(selector) {\n      return $(selector, this.root)[0]\n    },\n    $$(selector) {\n      return $(selector, this.root)\n    },\n  });\n\n  const COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n    [SHOULD_UPDATE_KEY]: noop,\n    [ON_BEFORE_MOUNT_KEY]: noop,\n    [ON_MOUNTED_KEY]: noop,\n    [ON_BEFORE_UPDATE_KEY]: noop,\n    [ON_UPDATED_KEY]: noop,\n    [ON_BEFORE_UNMOUNT_KEY]: noop,\n    [ON_UNMOUNTED_KEY]: noop,\n  });\n\n  /**\n   * Normalize the return values, in case of a single value we avoid to return an array\n   * @param   { Array } values - list of values we want to return\n   * @returns { Array|string|boolean } either the whole list of values or the single one found\n   * @private\n   */\n  const normalize = values => values.length === 1 ? values[0] : values;\n\n  /**\n   * Parse all the nodes received to get/remove/check their attributes\n   * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n   * @param   { string|Array }               name   - name or list of attributes\n   * @param   { string }                     method - method that will be used to parse the attributes\n   * @returns { Array|string } result of the parsing in a list or a single value\n   * @private\n   */\n  function parseNodes(els, name, method) {\n    const names = typeof name === 'string' ? [name] : name;\n    return normalize(domToArray(els).map(el => {\n      return normalize(names.map(n => el[method](n)))\n    }))\n  }\n\n  /**\n   * Set any attribute on a single or a list of DOM nodes\n   * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n   * @param   { string|Object }              name  - either the name of the attribute to set\n   *                                                 or a list of properties as object key - value\n   * @param   { string }                     value - the new value of the attribute (optional)\n   * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n   *\n   * @example\n   *\n   * import { set } from 'bianco.attr'\n   *\n   * const img = document.createElement('img')\n   *\n   * set(img, 'width', 100)\n   *\n   * // or also\n   * set(img, {\n   *   width: 300,\n   *   height: 300\n   * })\n   *\n   */\n  function set(els, name, value) {\n    const attrs = typeof name === 'object' ? name : { [name]: value };\n    const props = Object.keys(attrs);\n\n    domToArray(els).forEach(el => {\n      props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n    });\n    return els\n  }\n\n  /**\n   * Get any attribute from a single or a list of DOM nodes\n   * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n   * @param   { string|Array }               name  - name or list of attributes to get\n   * @returns { Array|string } list of the attributes found\n   *\n   * @example\n   *\n   * import { get } from 'bianco.attr'\n   *\n   * const img = document.createElement('img')\n   *\n   * get(img, 'width') // => '200'\n   *\n   * // or also\n   * get(img, ['width', 'height']) // => ['200', '300']\n   *\n   * // or also\n   * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n   */\n  function get(els, name) {\n    return parseNodes(els, name, 'getAttribute')\n  }\n\n  const CSS_BY_NAME = new Map();\n  const STYLE_NODE_SELECTOR = 'style[riot]';\n\n  // memoized curried function\n  const getStyleNode = ((style) => {\n    return () => {\n      // lazy evaluation:\n      // if this function was already called before\n      // we return its cached result\n      if (style) return style\n\n      // create a new style element or use an existing one\n      // and cache it internally\n      style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n      set(style, 'type', 'text/css');\n\n      /* istanbul ignore next */\n      if (!style.parentNode) document.head.appendChild(style);\n\n      return style\n    }\n  })();\n\n  /**\n   * Object that will be used to inject and manage the css of every tag instance\n   */\n  const cssManager = {\n    CSS_BY_NAME,\n    /**\n     * Save a tag style to be later injected into DOM\n     * @param { string } name - if it's passed we will map the css to a tagname\n     * @param { string } css - css string\n     * @returns {Object} self\n     */\n    add(name, css) {\n      if (!CSS_BY_NAME.has(name)) {\n        CSS_BY_NAME.set(name, css);\n        this.inject();\n      }\n\n      return this\n    },\n    /**\n     * Inject all previously saved tag styles into DOM\n     * innerHTML seems slow: http://jsperf.com/riot-insert-style\n     * @returns {Object} self\n     */\n    inject() {\n      getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n      return this\n    },\n\n    /**\n     * Remove a tag style from the DOM\n     * @param {string} name a registered tagname\n     * @returns {Object} self\n     */\n    remove(name) {\n      if (CSS_BY_NAME.has(name)) {\n        CSS_BY_NAME.delete(name);\n        this.inject();\n      }\n\n      return this\n    },\n  };\n\n  /**\n   * Function to curry any javascript method\n   * @param   {Function}  fn - the target function we want to curry\n   * @param   {...[args]} acc - initial arguments\n   * @returns {Function|*} it will return a function until the target function\n   *                       will receive all of its arguments\n   */\n  function curry(fn, ...acc) {\n    return (...args) => {\n      args = [...acc, ...args];\n\n      return args.length < fn.length ?\n        curry(fn, ...args) :\n        fn(...args)\n    }\n  }\n\n  /**\n   * Get the tag name of any DOM node\n   * @param   {HTMLElement} element - DOM node we want to inspect\n   * @returns {string} name to identify this dom node in riot\n   */\n  function getName(element) {\n    return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase()\n  }\n\n  /**\n   * Add eventually the \"is\" attribute to link this DOM node to its css\n   * @param {HTMLElement} element - target root node\n   * @param {string} name - name of the component mounted\n   * @returns {undefined} it's a void function\n   */\n\n  function addCssHook(element, name) {\n    if (getName(element) !== name) {\n      set(element, IS_DIRECTIVE, name);\n    }\n  }\n\n  /**\n   * Compute the component current state merging it with its previous state\n   * @param   {Object} oldState - previous state object\n   * @param   {Object} newState - new state given to the `update` call\n   * @returns {Object} new object state\n   */\n  function computeComponentState(oldState, newState) {\n    return {\n      ...oldState,\n      ...callOrAssign(newState),\n    }\n  }\n\n  /**\n   * Evaluate the component properties either from its real attributes or from its initial user properties\n   * @param   {HTMLElement} element - component root\n   * @param   {Object}  initialProps - initial props\n   * @returns {Object} component props key value pairs\n   */\n  function computeInitialProps(element, initialProps = {}) {\n    return {\n      ...DOMattributesToObject(element),\n      ...callOrAssign(initialProps),\n    }\n  }\n\n  /**\n   * Create the bindings to update the component attributes\n   * @param   {HTMLElement} node - node where we will bind the expressions\n   * @param   {Array} attributes - list of attribute bindings\n   * @returns {TemplateChunk} - template bindings object\n   */\n  function createAttributeBindings(node, attributes = []) {\n    const expressions = attributes.map((a) => create$4(node, a));\n    const binding = {};\n\n    return Object.assign(binding, {\n      expressions,\n      ...createCoreAPIMethods((method) => (scope) => {\n        expressions.forEach((e) => e[method](scope));\n\n        return binding\n      }),\n    })\n  }\n\n  /**\n   * Run the component instance through all the plugins set by the user\n   * @param   {Object} component - component instance\n   * @returns {Object} the component enhanced by the plugins\n   */\n  function runPlugins(component) {\n    return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component)\n  }\n\n  /**\n   * Get the computed attribute names from the template instance\n   * Since these attributes will not change we memoize the result of this computation\n   * @param {TemplateChunk} template - template instance\n   * @return {[]} list of attribute names that will be computed by the template expressions\n   */\n  const getRootComputedAttributeNames = memoize((template) => {\n    const firstBinding = template?.bindingsData?.[0];\n\n    // if the first binding has the selector attribute it means that it doesn't belong to the root node\n    if (firstBinding?.selector) return []\n\n    return (\n      firstBinding?.expressions?.reduce(\n        (acc, { name, type }) =>\n          type === expressionTypes.ATTRIBUTE ? acc.concat([name]) : acc,\n        [],\n      ) ?? []\n    )\n  });\n\n  /**\n   * Component creation factory function that will enhance the user provided API\n   * @param   {Object} component - a component implementation previously defined\n   * @param   {Array} options.slots - component slots generated via riot compiler\n   * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n   * @returns {Riot.Component} a riot component instance\n   */\n  function manageComponentLifecycle(\n    component,\n    { slots, attributes, props },\n  ) {\n    return autobindMethods(\n      runPlugins(\n        defineProperties(\n          isObject(component) ? Object.create(component) : component,\n          {\n            mount(element, state = {}, parentScope) {\n              // any element mounted passing through this function can't be a pure component\n              defineProperty(element, IS_PURE_SYMBOL, false);\n              this[PARENT_KEY_SYMBOL] = parentScope;\n              this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(\n                element,\n                attributes,\n              ).mount(parentScope);\n\n              defineProperty(\n                this,\n                PROPS_KEY,\n                Object.freeze({\n                  ...computeInitialProps(element, props),\n                  ...evaluateAttributeExpressions(\n                    this[ATTRIBUTES_KEY_SYMBOL].expressions,\n                  ),\n                }),\n              );\n\n              this[STATE_KEY] = computeComponentState(this[STATE_KEY], state);\n              this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone();\n\n              // link this object to the DOM node\n              bindDOMNodeToComponentInstance(element, this);\n              // add eventually the 'is' attribute\n              component.name && addCssHook(element, component.name);\n\n              // define the root element\n              defineProperty(this, ROOT_KEY, element);\n              // define the slots array\n              defineProperty(this, SLOTS_KEY, slots);\n\n              // before mount lifecycle event\n              this[ON_BEFORE_MOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n              // mount the template\n              this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n              this[ON_MOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n              return this\n            },\n            update(state = {}, parentScope) {\n              if (parentScope) {\n                this[PARENT_KEY_SYMBOL] = parentScope;\n                this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n              }\n\n              // get the attribute names that don't belong to the the props object\n              // this will avoid recursive props rendering https://github.com/riot/riot/issues/2994\n              const computedAttributeNames = getRootComputedAttributeNames(\n                this[TEMPLATE_KEY_SYMBOL],\n              );\n              // filter out the computed attributes from the root node\n              const staticRootAttributes = Array.from(\n                this[ROOT_KEY].attributes,\n              ).filter(({ name }) => !computedAttributeNames.includes(name));\n\n              // evaluate the value of the static dom attributes\n              const domNodeAttributes = DOMattributesToObject({\n                attributes: staticRootAttributes,\n              });\n\n              // Avoid adding the riot \"is\" directives to the component props\n              // eslint-disable-next-line no-unused-vars\n              const { [IS_DIRECTIVE]: _, ...newProps } = {\n                ...domNodeAttributes,\n                ...evaluateAttributeExpressions(\n                  this[ATTRIBUTES_KEY_SYMBOL].expressions,\n                ),\n              };\n              if (this[SHOULD_UPDATE_KEY](newProps, this[PROPS_KEY]) === false)\n                return\n\n              defineProperty(\n                this,\n                PROPS_KEY,\n                Object.freeze({\n                  // only root components will merge their initial props with the new ones\n                  // children components will just get them overridden see also https://github.com/riot/riot/issues/2978\n                  ...(parentScope\n                    ? pick(this[PROPS_KEY], computedAttributeNames)\n                    : this[PROPS_KEY]),\n                  ...newProps,\n                }),\n              );\n\n              this[STATE_KEY] = computeComponentState(this[STATE_KEY], state);\n\n              this[ON_BEFORE_UPDATE_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n              // avoiding recursive updates\n              // see also https://github.com/riot/riot/issues/2895\n              if (!this[IS_COMPONENT_UPDATING]) {\n                this[IS_COMPONENT_UPDATING] = true;\n                this[TEMPLATE_KEY_SYMBOL].update(this, this[PARENT_KEY_SYMBOL]);\n              }\n\n              this[ON_UPDATED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n              this[IS_COMPONENT_UPDATING] = false;\n\n              return this\n            },\n            unmount(preserveRoot) {\n              this[ON_BEFORE_UNMOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n              this[ATTRIBUTES_KEY_SYMBOL].unmount();\n              // if the preserveRoot is null the template html will be left untouched\n              // in that case the DOM cleanup will happen differently from a parent node\n              this[TEMPLATE_KEY_SYMBOL].unmount(\n                this,\n                this[PARENT_KEY_SYMBOL],\n                preserveRoot === null ? null : !preserveRoot,\n              );\n              this[ON_UNMOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n              return this\n            },\n          },\n        ),\n      ),\n      Object.keys(component).filter((prop) => isFunction(component[prop])),\n    )\n  }\n\n  /**\n   * Component definition function\n   * @param   {Object} implementation - the component implementation will be generated via compiler\n   * @param   {Object} component - the component initial properties\n   * @returns {Object} a new component implementation object\n   */\n  function instantiateComponent({ css, template, componentAPI, name }) {\n    // add the component css into the DOM\n    if (css && name) cssManager.add(name, css);\n\n    return curry(manageComponentLifecycle)(\n      defineProperties(\n        // set the component defaults without overriding the original component API\n        defineDefaults(componentAPI, {\n          ...COMPONENT_LIFECYCLE_METHODS,\n          [PROPS_KEY]: {},\n          [STATE_KEY]: {},\n        }),\n        {\n          // defined during the component creation\n          [SLOTS_KEY]: null,\n          [ROOT_KEY]: null,\n          // these properties should not be overriden\n          ...COMPONENT_DOM_SELECTORS,\n          name,\n          css,\n          template,\n        },\n      ),\n    )\n  }\n\n  /**\n   * Create the subcomponents that can be included inside a tag in runtime\n   * @param   {Object} components - components imported in runtime\n   * @returns {Object} all the components transformed into Riot.Component factory functions\n   */\n  function createChildrenComponentsObject(components = {}) {\n    return Object.entries(callOrAssign(components)).reduce(\n      (acc, [key, value]) => {\n        acc[camelToDashCase(key)] = createComponentFromWrapper(value);\n        return acc\n      },\n      {},\n    )\n  }\n\n  /**\n   * Create the getter function to render the child components\n   * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n   * @returns {Function} function returning the component factory function\n   */\n  const createChildComponentGetter = (componentWrapper) => {\n    const childrenComponents = createChildrenComponentsObject(\n      componentWrapper.exports ? componentWrapper.exports.components : {},\n    );\n\n    return (name) => {\n      // improve support for recursive components\n      if (name === componentWrapper.name)\n        return memoizedCreateComponentFromWrapper(componentWrapper)\n      // return the registered components\n      return childrenComponents[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name)\n    }\n  };\n\n  /**\n   * Performance optimization for the recursive components\n   * @param  {RiotComponentWrapper} componentWrapper - riot compiler generated object\n   * @returns {Object} component like interface\n   */\n  const memoizedCreateComponentFromWrapper = memoize(createComponentFromWrapper);\n\n  /**\n   * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n   * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n   * @param   {string} componentWrapper.css - component css\n   * @param   {Function} componentWrapper.template - function that will return the dom-bindings template function\n   * @param   {Object} componentWrapper.exports - component interface\n   * @param   {string} componentWrapper.name - component name\n   * @returns {Object} component like interface\n   */\n  function createComponentFromWrapper(componentWrapper) {\n    const { css, template, exports, name } = componentWrapper;\n    const templateFn = template\n      ? componentTemplateFactory(\n          template,\n          componentWrapper,\n          createChildComponentGetter(componentWrapper),\n        )\n      : MOCKED_TEMPLATE_INTERFACE;\n\n    return ({ slots, attributes, props }) => {\n      // pure components rendering will be managed by the end user\n      if (exports && exports[IS_PURE_SYMBOL])\n        return createPureComponent(exports, {\n          slots,\n          attributes,\n          props,\n          css,\n          template,\n        })\n\n      const componentAPI = callOrAssign(exports) || {};\n\n      const component = instantiateComponent({\n        css,\n        template: templateFn,\n        componentAPI,\n        name,\n      })({ slots, attributes, props });\n\n      // notice that for the components created via tag binding\n      // we need to invert the mount (state/parentScope) arguments\n      // the template bindings will only forward the parentScope updates\n      // and never deal with the component state\n      return {\n        mount(element, parentScope, state) {\n          return component.mount(element, state, parentScope)\n        },\n        update(parentScope, state) {\n          return component.update(state, parentScope)\n        },\n        unmount(preserveRoot) {\n          return component.unmount(preserveRoot)\n        },\n      }\n    }\n  }\n\n  /**\n   * Register a custom tag by name\n   * @param   {string} name - component name\n   * @param   {Object} implementation - tag implementation\n   * @returns {Map} map containing all the components implementations\n   */\n  function register(name, { css, template, exports }) {\n    if (COMPONENTS_IMPLEMENTATION_MAP.has(name))\n      panic(`The component \"${name}\" was already registered`);\n\n    COMPONENTS_IMPLEMENTATION_MAP.set(\n      name,\n      createComponentFromWrapper({ name, css, template, exports }),\n    );\n\n    return COMPONENTS_IMPLEMENTATION_MAP\n  }\n\n  /**\n   * Unregister a riot web component\n   * @param   {string} name - component name\n   * @returns {Map} map containing all the components implementations\n   */\n  function unregister(name) {\n    if (!COMPONENTS_IMPLEMENTATION_MAP.has(name))\n      panic(`The component \"${name}\" was never registered`);\n\n    COMPONENTS_IMPLEMENTATION_MAP.delete(name);\n    cssManager.remove(name);\n\n    return COMPONENTS_IMPLEMENTATION_MAP\n  }\n\n  /**\n   * Component initialization function starting from a DOM node\n   * @param   {HTMLElement} element - element to upgrade\n   * @param   {Object} initialProps - initial component properties\n   * @param   {string} componentName - component id\n   * @param   {Array} slots - component slots\n   * @returns {Object} a new component instance bound to a DOM node\n   */\n  function mountComponent(element, initialProps, componentName, slots) {\n    const name = componentName || getName(element);\n    if (!COMPONENTS_IMPLEMENTATION_MAP.has(name))\n      panic(`The component named \"${name}\" was never registered`);\n\n    const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n      props: initialProps,\n      slots,\n    });\n\n    return component.mount(element)\n  }\n\n  /**\n   * Mounting function that will work only for the components that were globally registered\n   * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n   * @param   {Object} initialProps - the initial component properties\n   * @param   {string} name - optional component name\n   * @returns {Array} list of riot components\n   */\n  function mount(selector, initialProps, name) {\n    return $(selector).map((element) =>\n      mountComponent(element, initialProps, name),\n    )\n  }\n\n  /**\n   * Sweet unmounting helper function for the DOM node mounted manually by the user\n   * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n   * @param   {boolean|null} keepRootElement - if true keep the root element\n   * @returns {Array} list of nodes unmounted\n   */\n  function unmount(selector, keepRootElement) {\n    return $(selector).map((element) => {\n      if (element[DOM_COMPONENT_INSTANCE_PROPERTY]) {\n        element[DOM_COMPONENT_INSTANCE_PROPERTY].unmount(keepRootElement);\n      }\n      return element\n    })\n  }\n\n  /**\n   * Define a riot plugin\n   * @param   {Function} plugin - function that will receive all the components created\n   * @returns {Set} the set containing all the plugins installed\n   */\n  function install(plugin) {\n    if (!isFunction(plugin)) panic('Plugins must be of type function');\n    if (PLUGINS_SET.has(plugin)) panic('This plugin was already installed');\n\n    PLUGINS_SET.add(plugin);\n\n    return PLUGINS_SET\n  }\n\n  /**\n   * Uninstall a riot plugin\n   * @param   {Function} plugin - plugin previously installed\n   * @returns {Set} the set containing all the plugins installed\n   */\n  function uninstall(plugin) {\n    if (!PLUGINS_SET.has(plugin)) panic('This plugin was never installed');\n\n    PLUGINS_SET.delete(plugin);\n\n    return PLUGINS_SET\n  }\n\n  /**\n   * Similar to compose but performs from left-to-right function composition.<br/>\n   * {@link https://30secondsofcode.org/function#composeright see also}\n   * @param   {...[function]} fns) - list of unary function\n   * @returns {*} result of the computation\n   */\n\n  /**\n   * Performs right-to-left function composition.<br/>\n   * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n   * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n   * {@link https://30secondsofcode.org/function#compose original source code}\n   * @param   {...[function]} fns) - list of unary function\n   * @returns {*} result of the computation\n   */\n  function compose(...fns) {\n    return fns.reduce((f, g) => (...args) => f(g(...args)))\n  }\n\n  /**\n   * Helper method to create component without relying on the registered ones\n   * @param   {Object} implementation - component implementation\n   * @returns {Function} function that will allow you to mount a riot component on a DOM node\n   */\n  function component(implementation) {\n    return (el, props, { slots, attributes, parentScope } = {}) =>\n      compose(\n        (c) => c.mount(el, parentScope),\n        (c) => c({ props, slots, attributes }),\n        createComponentFromWrapper,\n      )(implementation)\n  }\n\n  /**\n   * Lift a riot component Interface into a pure riot object\n   * @param   {Function} func - RiotPureComponent factory function\n   * @returns {Function} the lifted original function received as argument\n   */\n  function pure(func) {\n    if (!isFunction(func))\n      panic('riot.pure accepts only arguments of type \"function\"');\n    func[IS_PURE_SYMBOL] = true;\n    return func\n  }\n\n  /**\n   * no-op function needed to add the proper types to your component via typescript\n   * @param {Function|Object} component - component default export\n   * @returns {Function|Object} returns exactly what it has received\n   */\n  /* istanbul ignore next */\n  const withTypes = (component) => component;\n\n  /** @type {string} current riot version */\n  const version = 'v9.4.4';\n\n  // expose some internal stuff that might be used from external tools\n  const __ = {\n    cssManager,\n    DOMBindings: {\n      template: create,\n      createBinding: create$1,\n      createExpression: create$4,\n      bindingTypes,\n      expressionTypes,\n    },\n    globals: {\n      PROPS_KEY,\n      STATE_KEY,\n      IS_COMPONENT_UPDATING,\n      ATTRIBUTES_KEY_SYMBOL,\n      COMPONENTS_IMPLEMENTATION_MAP,\n      PLUGINS_SET,\n      DOM_COMPONENT_INSTANCE_PROPERTY,\n      PARENT_KEY_SYMBOL,\n    },\n  };\n\n  exports.__ = __;\n  exports.component = component;\n  exports.install = install;\n  exports.mount = mount;\n  exports.pure = pure;\n  exports.register = register;\n  exports.uninstall = uninstall;\n  exports.unmount = unmount;\n  exports.unregister = unregister;\n  exports.version = version;\n  exports.withTypes = withTypes;\n\n}));\n"
        },
        {
          "name": "riot.min.js",
          "type": "blob",
          "size": 15.080078125,
          "content": "var t,e;t=this,e=function(t){\"use strict\";const e=0,n=1,r=2,s=3,o=4,i={EACH:0,IF:1,SIMPLE:2,TAG:3,SLOT:4};function u(t,e){return typeof t===e}function a(t){const e=t.ownerSVGElement;return!!e||null===e}function c(t){return\"template\"===t.tagName.toLowerCase()}function l(t){return u(t,\"function\")}function h(t){return!m(t)&&t.constructor===Object}function m(t){return null==t}const d=new Map,p=Symbol(),f=new Set,b=\"is\",g=\"mount\",y=\"update\",v=\"unmount\",N=\"shouldUpdate\",O=\"onBeforeMount\",E=\"onMounted\",T=\"onBeforeUpdate\",x=\"onUpdated\",M=\"onBeforeUnmount\",A=\"onUnmounted\",S=\"props\",j=\"state\",w=\"slots\",C=\"root\",D=Symbol(),I=Symbol(),P=Symbol(),_=Symbol(),L=Symbol();function k(t){return t.replace(/-(\\w)/g,((t,e)=>e.toUpperCase()))}function B(t){return Array.from(t.attributes).reduce(((t,e)=>(t[k(e.name)]=e.value,t)),{})}function U(t){for(;t.firstChild;)t.removeChild(t.firstChild)}const Y=t=>t.remove(),K=(t,e)=>e&&e.parentNode&&e.parentNode.insertBefore(t,e),R=0,$=1,z=2,G=3,H={ATTRIBUTE:0,EVENT:1,TEXT:2,VALUE:3};function F(){return this}function V(t){return l(t)?t.prototype&&t.prototype.constructor?new t:t():t}function q(t){const e=new Map,n=n=>(e.has(n)||e.set(n,t.call(this,n)))&&e.get(n);return n.cache=e,n}function W(t){return t.reduce(((t,e)=>{const{value:n,type:r}=e;switch(!0){case!e.name&&0===r:return{...t,...n};case 3===r:t.value=e.value;break;default:t[k(e.name)]=e.value}return t}),{})}function X(t,e,n,r={}){return Object.defineProperty(t,e,{value:n,enumerable:!1,writable:!1,configurable:!0,...r}),t}function Z(t,e,n){return Object.entries(e).forEach((([e,r])=>{X(t,e,r,n)})),t}function J(t,e){return Object.entries(e).forEach((([e,n])=>{t[e]||(t[e]=n)})),t}const Q={[g](t){this.el=t},[y]:F,[v](t,e,n=!1){n?Y(this.el):n||U(this.el)},clone(){return{...this}},createDOM:F},tt=Symbol(),et=Symbol(),nt=Symbol(),rt={nodes:[],mount(t,e){return this.update(t,e)},update(t,e){const{placeholder:n,nodes:r,childrenMap:s}=this,o=t===nt?null:this.evaluate(t),i=o?Array.from(o):[],{newChildrenMap:u,batches:a,futureNodes:c}=function(t,e,n,r){const{condition:s,template:o,childrenMap:i,itemName:u,getKey:a,indexName:c,root:l,isTemplateTag:h}=r,m=new Map,d=[],p=[];return t.forEach(((t,r)=>{const f=function(t,{itemName:e,indexName:n,index:r,item:s}){return X(t,e,s),n&&X(t,n,r),t}(Object.create(e),{itemName:u,indexName:c,index:r,item:t}),b=a?a(f):r,g=i.get(b),y=[];if(function(t,e){return!!t&&!t(e)}(s,f))return;const v=!g,N=g?g.template:o.clone(),O=N.el||l.cloneNode(),E=h&&v?function(t){const e=t.dom.cloneNode(!0),{head:n,tail:r}=function(){const t=document.createTextNode(\"\"),e=document.createTextNode(\"\");return t[tt]=!0,e[et]=!0,{head:t,tail:e}}();return{avoidDOMInjection:!0,fragment:e,head:n,tail:r,children:[n,...Array.from(e.childNodes),r]}}(N):N.meta;v?d.push((()=>N.mount(O,f,n,E))):d.push((()=>N.update(f,n))),h?y.push(...E.children):y.push(O),i.delete(b),p.push(...y),m.set(b,{nodes:y,template:N,context:f,index:r})})),{newChildrenMap:m,batches:d,futureNodes:p}}(i,t,e,this);return((t,e,n,r)=>{const s=e.length;let o=t.length,i=s,u=0,a=0,c=null;for(;u<o||a<i;)if(o===u){const t=i<s?a?n(e[a-1],-0).nextSibling:n(e[i-a],0):r;for(;a<i;)K(n(e[a++],1),t)}else if(i===a)for(;u<o;)c&&c.has(t[u])||Y(n(t[u],-1)),u++;else if(t[u]===e[a])u++,a++;else if(t[o-1]===e[i-1])o--,i--;else if(t[u]===e[i-1]&&e[a]===t[o-1]){const r=n(t[--o],-1).nextSibling;K(n(e[a++],1),n(t[u++],-1).nextSibling),K(n(e[--i],1),r),t[o]=e[i]}else{if(!c){c=new Map;let t=a;for(;t<i;)c.set(e[t],t++)}if(c.has(t[u])){const r=c.get(t[u]);if(a<r&&r<i){let s=u,m=1;for(;++s<o&&s<i&&c.get(t[s])===r+m;)m++;if(m>r-a){const s=n(t[u],0);for(;a<r;)K(n(e[a++],1),s)}else l=n(e[a++],1),(h=n(t[u++],-1))&&h.parentNode&&h.parentNode.replaceChild(l,h)}else u++}else Y(n(t[u++],-1))}var l,h})(r,c,function(t,e){return(n,r)=>{if(r<0){const n=t[t.length-1];if(n){const{template:r,nodes:s,context:o}=n;s.pop(),s.length||(t.pop(),r.unmount(o,e,null))}}return n}}(Array.from(s.values()),e),n),a.forEach((t=>t())),this.childrenMap=u,this.nodes=c,this},unmount(t,e){return this.update(nt,e),this}},st={mount(t,e){return this.update(t,e)},update(t,e){const n=!!this.evaluate(t),r=!this.value&&n,s=this.value&&!n,o=()=>{const n=this.node.cloneNode();K(n,this.placeholder),this.template=this.template.clone(),this.template.mount(n,t,e)};switch(!0){case r:o();break;case s:this.unmount(t);break;default:n&&this.template.update(t,e)}return this.value=n,this},unmount(t,e){return this.template.unmount(t,e,!0),this}},ot=\"undefined\"==typeof Element?{}:Element.prototype,it=q((t=>ot.hasOwnProperty(t))),ut=/^on/,at={handleEvent(t){this[t.type](t)}},ct=new WeakMap;function lt(t){return m(t)?\"\":t}const ht=(t,e)=>t.childNodes[e],mt={[R]:function t(e,{name:n,isBoolean:r},s,o){return n?\"ref\"===n?(e&&e.removeAttribute(e,n),void s(e)):(!it(n)&&(function(t){return u(t,\"boolean\")}(s)||h(s)||l(s))&&(e[n]=s),void(function(t,e){return e?!t&&0!==t:null==t}(s,r)?e.removeAttribute(n):function(t){return[\"string\",\"number\",\"boolean\"].includes(typeof t)}(s)&&e.setAttribute(n,function(t,e,n){return!0===e&&n?t:e}(n,s,r)))):(o&&function(t,e,n){const r=e?Object.keys(e):[];Object.keys(n).filter((t=>!r.includes(t))).forEach((e=>t.removeAttribute(e)))}(e,s,o),void(s&&function(e,n){Object.keys(n).forEach((r=>t(e,{name:r},n[r])))}(e,s)))},[$]:function(t,{name:e},n){const r=e.replace(ut,\"\"),s=ct.get(t)||(t=>{const e=Object.create(at);return ct.set(t,e),e})(t),[o,i]=(t=>Array.isArray(t)?t:[t,!1])(n),u=s[r],a=o&&!u;u&&!o&&t.removeEventListener(r,s),a&&t.addEventListener(r,s,i),s[r]=o},[z]:function(t,e,n){t.data=lt(n)},[G]:function(t,e,n){t.value=lt(n)}},dt={mount(t){return this.value=this.evaluate(t),pt(this,this.value),this},update(t){const e=this.evaluate(t);return this.value!==e&&(pt(this,e),this.value=e),this},unmount(){return 1===this.type&&pt(this,null),\"ref\"===this.name&&mt[0](null,this,this.value),this}};function pt(t,e){return mt[t.type](t.node,t,e,t.value)}function ft(t,e){return{...dt,...e,node:2===e.type?ht(t,e.childNodeIndex):t}}const bt=(t,e)=>t[P]||e,gt={attributes:[],getTemplateScope(t,e){return function(t,e,n){if(!t||!t.length)return n;const r=t.map((t=>({...t,value:t.evaluate(e)})));return Object.assign(Object.create(n||null),W(r))}(this.attributes,t,e)},mount(t,e){const n=!!t.slots&&t.slots.find((({id:t})=>t===this.name)),{parentNode:r}=this.node,s=n?bt(t,e):t;return this.templateData=n,this.template=n&&Mt(n.html,n.bindings).createDOM(r)||this.template?.clone(),this.template&&(U(this.node),this.template.mount(this.node,this.getTemplateScope(t,s),s),this.template.children=Array.from(this.node.childNodes)),yt(this.node),Y(this.node),this},update(t,e){if(this.template){const n=this.templateData?bt(t,e):t;this.template.update(this.getTemplateScope(t,n),n)}return this},unmount(t,e,n){return this.template&&this.template.unmount(this.getTemplateScope(t,e),null,n),this}};function yt(t){const e=t&&t.firstChild;e&&(K(e,t),yt(t))}function vt(t){return t.reduce(((t,{bindings:e})=>t.concat(e)),[])}const Nt={mount(t){return this.update(t)},update(t,e){const n=this.evaluate(t);return n&&n===this.name?this.tag.update(t):(this.unmount(t,e,!0),this.name=n,this.tag=function(t,e=[],n=[]){return t?t({slots:e,attributes:n}):Mt(function(t){return t.reduce(((t,e)=>t+e.html),\"\")}(e),[...vt(e),{expressions:n.map((t=>({type:0,...t})))}])}(this.getComponent(n),this.slots,this.attributes),this.tag.mount(this.node,t)),this},unmount(t,e,n){return this.tag&&this.tag.unmount(n),this}},Ot={[n]:function(t,{evaluate:e,template:n}){const r=document.createTextNode(\"\");return K(r,t),Y(t),{...st,node:t,evaluate:e,placeholder:r,template:n.createDOM(t)}},[r]:function(t,{expressions:e}){return n=e.map((e=>ft(t,e))),[\"mount\",\"update\",\"unmount\"].reduce(((t,e)=>({...t,[e]:t=>n.map((n=>n[e](t)))&&void 0})),{});var n},[e]:function(t,{evaluate:e,condition:n,itemName:r,indexName:s,getKey:o,template:i}){const u=document.createTextNode(\"\"),a=t.cloneNode();return K(u,t),Y(t),{...rt,childrenMap:new Map,node:t,root:a,condition:n,evaluate:e,isTemplateTag:c(a),template:i.createDOM(t),getKey:o,indexName:s,itemName:r,placeholder:u}},[s]:function(t,{evaluate:e,getComponent:n,slots:r,attributes:s}){return{...Nt,node:t,evaluate:e,slots:r,attributes:s,getComponent:n}},[o]:function(t,{name:e,attributes:n,template:r}){return{...gt,attributes:n,template:r,node:t,name:e}}};function Et(t,e){return t.map((t=>2===t.type?{...t,childNodeIndex:t.childNodeIndex+e}:t))}function Tt(t,e,n){const{selector:r,type:s,redundantAttribute:o,expressions:i}=e,u=r?t.querySelector(r):t;o&&u.removeAttribute(o);const a=i||[];return(Ot[s]||Ot[2])(u,{...e,expressions:n&&!r?Et(a,n):a})}const xt={createDOM(t){return this.dom=this.dom||function(t,e){return e&&(\"string\"==typeof e?function(t,e){return a(t)?function(t,e){return e.ownerDocument.importNode((new window.DOMParser).parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${t}</svg>`,\"application/xml\").documentElement,!0)}(e,t):function(t,e){const n=c(e)?e:document.createElement(\"template\");return n.innerHTML=t,n.content}(e,t)}(t,e):e)}(t,this.html)||document.createDocumentFragment(),this},mount(t,e,n,r={}){this.el&&this.unmount(e);const{fragment:s,children:o,avoidDOMInjection:i}=r,{parentNode:u}=o?o[0]:t,l=c(t),h=l?function(t,e,n){const r=Array.from(t.childNodes);return Math.max(r.indexOf(e),r.indexOf(n.head)+1,0)}(u,t,r):null;this.createDOM(t);const m=s||this.dom.cloneNode(!0);return this.el=l?u:t,this.children=l?o||Array.from(m.childNodes):null,!i&&m&&function(t,e){switch(!0){case a(t):!function(t,e){for(;t.firstChild;)e.appendChild(t.firstChild)}(e,t);break;case c(t):t.parentNode.replaceChild(e,t);break;default:t.appendChild(e)}}(t,m),this.bindings=this.bindingsData.map((t=>Tt(this.el,t,h))),this.bindings.forEach((t=>t.mount(e,n))),this.meta=r,this},update(t,e){return this.bindings.forEach((n=>n.update(t,e))),this},unmount(t,e,n=!1){const r=this.el;if(!r)return this;switch(this.bindings.forEach((r=>r.unmount(t,e,n))),!0){case r[D]||null===n:break;case Array.isArray(this.children):!function(t){for(let e=0;e<t.length;e++)Y(t[e])}(this.children);break;case!n:U(r);break;case!!n:Y(r)}return this.el=null,this},clone(){return{...this,meta:{},el:null}}};function Mt(t,e=[]){return{...xt,html:t,bindingsData:e}}const At=Object.freeze({[g]:F,[y]:F,[v]:F}),St=(t,e)=>t[p]=e;function jt(t){return[g,y,v].reduce(((e,n)=>(e[n]=t(n),e)),{})}function wt(t){return Array.isArray(t)?t:/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(t))&&\"number\"==typeof t.length?Array.from(t):[t]}function Ct(t,e){return wt(\"string\"==typeof t?(e||document).querySelectorAll(t):t)}const Dt=Object.freeze({$(t){return Ct(t,this.root)[0]},$$(t){return Ct(t,this.root)}}),It=Object.freeze({[N]:F,[O]:F,[E]:F,[T]:F,[x]:F,[M]:F,[A]:F}),Pt=t=>1===t.length?t[0]:t;function _t(t,e,n){const r=\"object\"==typeof e?e:{[e]:n},s=Object.keys(r);return wt(t).forEach((t=>{s.forEach((e=>t.setAttribute(e,r[e])))})),t}const Lt=new Map;var kt;const Bt={CSS_BY_NAME:Lt,add(t,e){return Lt.has(t)||(Lt.set(t,e),this.inject()),this},inject(){return(kt||(_t(kt=Ct(\"style[riot]\")[0]||document.createElement(\"style\"),\"type\",\"text/css\"),kt.parentNode||document.head.appendChild(kt),kt)).innerHTML=[...Lt.values()].join(\"\\n\"),this},remove(t){return Lt.has(t)&&(Lt.delete(t),this.inject()),this}};function Ut(t,...e){return(...n)=>(n=[...e,...n]).length<t.length?Ut(t,...n):t(...n)}function Yt(t){return function(t,e){const n=\"string\"==typeof e?[e]:e;return Pt(wt(t).map((t=>Pt(n.map((e=>t.getAttribute(e)))))))}(t,b)||t.tagName.toLowerCase()}function Kt(t,e){return{...t,...V(e)}}function Rt(t,e={}){return{...B(t),...V(e)}}const $t=q((t=>{const e=t?.bindingsData?.[0];return e?.selector?[]:e?.expressions?.reduce(((t,{name:e,type:n})=>n===H.ATTRIBUTE?t.concat([e]):t),[])??[]}));function zt(t,{slots:e,attributes:n,props:r}){return s=function(t){return[...f].reduce(((t,e)=>e(t)||t),t)}(Z(h(t)?Object.create(t):t,{mount(s,o={},i){return X(s,D,!1),this[P]=i,this[_]=function(t,e=[]){const n=e.map((e=>ft(t,e))),r={};return Object.assign(r,{expressions:n,...jt((t=>e=>(n.forEach((n=>n[t](e))),r)))})}(s,n).mount(i),X(this,S,Object.freeze({...Rt(s,r),...W(this[_].expressions)})),this[j]=Kt(this[j],o),this[L]=this.template.createDOM(s).clone(),St(s,this),t.name&&function(t,e){Yt(t)!==e&&_t(t,b,e)}(s,t.name),X(this,C,s),X(this,w,e),this[O](this[S],this[j]),this[L].mount(s,this,i),this[E](this[S],this[j]),this},update(t={},e){e&&(this[P]=e,this[_].update(e));const n=$t(this[L]),r=B({attributes:Array.from(this[C].attributes).filter((({name:t})=>!n.includes(t)))}),{[b]:s,...o}={...r,...W(this[_].expressions)};var i,u;if(!1!==this[N](o,this[S]))return X(this,S,Object.freeze({...e?(i=this[S],u=n,h(i)?Object.fromEntries(u.map((t=>[t,i[t]]))):i):this[S],...o})),this[j]=Kt(this[j],t),this[T](this[S],this[j]),this[I]||(this[I]=!0,this[L].update(this,this[P])),this[x](this[S],this[j]),this[I]=!1,this},unmount(t){return this[M](this[S],this[j]),this[_].unmount(),this[L].unmount(this,this[P],null===t?null:!t),this[A](this[S],this[j]),this}})),Object.keys(t).filter((e=>l(t[e]))).forEach((t=>{s[t]=s[t].bind(s)})),s;var s}function Gt({css:t,template:e,componentAPI:n,name:r}){return t&&r&&Bt.add(r,t),Ut(zt)(Z(J(n,{...It,[S]:{},[j]:{}}),{[w]:null,[C]:null,...Dt,name:r,css:t,template:e}))}const Ht=q(Ft);function Ft(t){const{css:e,template:n,exports:r,name:s}=t,o=n?function(t,e,n){return t(Mt,H,i,n)}(n,0,(t=>{const e=function(t={}){return Object.entries(V(t)).reduce(((t,[e,n])=>{var r;return t[(r=e,r.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase())]=Ft(n),t}),{})}(t.exports?t.exports.components:{});return n=>n===t.name?Ht(t):e[n]||d.get(n)})(t)):Q;return({slots:t,attributes:i,props:u})=>{if(r&&r[D])return function(t,{slots:e,attributes:n,props:r,css:s,template:o}){const i=J(t({slots:e,attributes:n,props:r}),At);return jt((t=>(...e)=>{if(t===g){const[t]=e;X(t,D,!0),St(t,i)}return i[t](...e),i}))}(r,{slots:t,attributes:i,props:u,css:e,template:n});const a=V(r)||{},c=Gt({css:e,template:o,componentAPI:a,name:s})({slots:t,attributes:i,props:u});return{mount:(t,e,n)=>c.mount(t,n,e),update:(t,e)=>c.update(e,t),unmount:t=>c.unmount(t)}}}const Vt={cssManager:Bt,DOMBindings:{template:Mt,createBinding:Tt,createExpression:ft,bindingTypes:i,expressionTypes:H},globals:{PROPS_KEY:S,STATE_KEY:j,IS_COMPONENT_UPDATING:I,ATTRIBUTES_KEY_SYMBOL:_,COMPONENTS_IMPLEMENTATION_MAP:d,PLUGINS_SET:f,DOM_COMPONENT_INSTANCE_PROPERTY:p,PARENT_KEY_SYMBOL:P}};t.__=Vt,t.component=function(t){return(e,n,{slots:r,attributes:s,parentScope:o}={})=>function(...t){return t.reduce(((t,e)=>(...n)=>t(e(...n))))}((t=>t.mount(e,o)),(t=>t({props:n,slots:r,attributes:s})),Ft)(t)},t.install=function(t){return l(t),f.has(t),f.add(t),f},t.mount=function(t,e,n){return Ct(t).map((t=>function(t,e,n){const r=n||Yt(t);return d.has(r),d.get(r)({props:e,slots:void 0}).mount(t)}(t,e,n)))},t.pure=function(t){return l(t),t[D]=!0,t},t.register=function(t,{css:e,template:n,exports:r}){return d.has(t),d.set(t,Ft({name:t,css:e,template:n,exports:r})),d},t.uninstall=function(t){return f.has(t),f.delete(t),f},t.unmount=function(t,e){return Ct(t).map((t=>(t[p]&&t[p].unmount(e),t)))},t.unregister=function(t){return d.has(t),d.delete(t),Bt.remove(t),d},t.version=\"v9.4.4\",t.withTypes=t=>t},\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=\"undefined\"!=typeof globalThis?globalThis:t||self).riot={});"
        },
        {
          "name": "rollup.config.js",
          "type": "blob",
          "size": 0.8203125,
          "content": "import commonjs from '@rollup/plugin-commonjs'\nimport { nodeResolve } from '@rollup/plugin-node-resolve'\nconst emptyFile = 'export default undefined'\n\n// ignore builtin requires\nfunction ignore() {\n  return {\n    transform(code, id) {\n      if (!id.includes('commonjs-external')) return\n\n      return {\n        code: emptyFile,\n        map: null,\n      }\n    },\n  }\n}\n\nexport default {\n  output: {\n    banner: '/* Riot WIP, @license MIT */',\n    name: 'riot',\n    generatedCode: {\n      constBindings: true,\n    },\n    entryFileNames: (chunkInfo) =>\n      chunkInfo.name.includes('node_modules')\n        ? // replace the node_modules from the path in order to avoid nodejs esm conflicts\n          `${chunkInfo.name.replace('node_modules', 'dependencies')}.js`\n        : '[name].js',\n  },\n  plugins: [ignore(), nodeResolve(), commonjs()],\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "wdio.conf.js",
          "type": "blob",
          "size": 12.0849609375,
          "content": "const isCI = process.env.GITHUB_RUN_NUMBER\n\nexport const config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  user: isCI ? process.env.SAUCE_USERNAME : undefined,\n  key: isCI ? process.env.SAUCE_ACCESS_KEY : undefined,\n  region: 'us', // or 'eu' or 'apac'\n  services: isCI\n    ? [\n        [\n          'sauce',\n          {\n            sauceConnect: true,\n          },\n        ],\n      ]\n    : [],\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // The path of the spec files will be resolved relative from the directory of\n  // of the config file unless it's absolute.\n  //\n  specs: ['./test/e2e/*.e2e.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: isCI\n    ? [\n        {\n          // capabilities for local browser web tests\n          browserName: 'chrome', // or \"firefox\", \"microsoftedge\", \"safari\"\n        },\n        {\n          browserName: 'firefox',\n        },\n        {\n          browserName: 'MicrosoftEdge',\n        },\n      ].map((capabilities) => ({\n        ...capabilities,\n        'sauce:options': {\n          build: `GITHUB_RUN_NUMBER #${process.env.GITHUB_RUN_NUMBER} (${process.env.GITHUB_RUN_NUMBER})`,\n          name: `${capabilities.browserName} ${capabilities['appium:deviceName'] || ''}`,\n        },\n      }))\n    : [\n        {\n          browserName: 'chrome',\n        },\n      ],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000,\n  },\n\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n   * Gets executed when a refresh happens.\n   * @param {string} oldSessionId session ID of the old session\n   * @param {string} newSessionId session ID of the new session\n   */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n   * Hook that gets executed before a WebdriverIO assertion happens.\n   * @param {object} params information about the assertion to be executed\n   */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n   * Hook that gets executed after a WebdriverIO assertion happened.\n   * @param {object} params information about the assertion that was executed, including its results\n   */\n  // afterAssertion: function(params) {\n  // }\n}\n"
        }
      ]
    }
  ]
}