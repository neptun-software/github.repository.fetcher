{
  "metadata": {
    "timestamp": 1736563392946,
    "page": 402,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "catdad/canvas-confetti",
      "stars": 10734,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".brackets.json",
          "type": "blob",
          "size": 0.41015625,
          "content": "{\n    \"spaceUnits\": 2,\n    \"useTabChar\": false,\n    \"language\": {\n        \"javascript\": {\n            \"linting.prefer\": [\n                \"ESLint\"\n            ],\n            \"linting.usePreferredOnly\": true\n        },\n        \"markdown\": {\n            \"wordWrap\": true\n        }\n    },\n    \"language.fileNames\": {\n        \"Jenkinsfile\": \"groovy\"\n    },\n    \"language.fileExtensions\": {\n      \"mjs\": \"javascript\"\n    }\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1826171875,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[{package.json,*.yml}]\nindent_size = 2\n"
        },
        {
          "name": ".eslintrc.yml",
          "type": "blob",
          "size": 0.109375,
          "content": "extends:\n  - eslint:recommended\nenv:\n  es6: false\n  browser: true\n  node: true\nrules:\n  semi: [ error, always ]\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.65625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n*.js     text eol=lf\n*.jsx    text eol=lf\n*.json   text eol=lf\n*.html   text eol=lf\n*.md     text eol=lf\n*.yml    text eol=lf\n*.css    text eol=lf\n*.less   text eol=lf\n*.scss   text eol=lf\n*.sass   text eol=lf\n*.svg    text eol=lf\n*.xml    text eol=lf\n*.sh     text eol=lf\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc    diff=astextplain\n*.DOC    diff=astextplain\n*.docx   diff=astextplain\n*.DOCX   diff=astextplain\n*.dot    diff=astextplain\n*.DOT    diff=astextplain\n*.pdf    diff=astextplain\n*.PDF    diff=astextplain\n*.rtf    diff=astextplain\n*.RTF    diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5478515625,
          "content": "# Windows image file caches\nThumbs.db\nehthumbs.db\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows shortcuts\n*.lnk\n\n# OSX\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Node stuff\nnode_modules/\ncoverage/\n.nyc_output/\n\n# project-specific stuff\nshots/\ndist/\ntemp/\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.6181640625,
          "content": "# Windows image file caches\nThumbs.db\nehthumbs.db\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows shortcuts\n*.lnk\n\n# OSX\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Node stuff\nnode_modules/\ncoverage/\n.nyc_output/\n\n# project-specific stuff\nbin/\ntest/\nshots/\ntemp/\nbuild/\nfixtures/\nindex.html\n\n# dotfiles don't need to be in npm\n.*\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "package-lock=false\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.7255859375,
          "content": "ISC License\n\nCopyright (c) 2020, Kiril Vatev\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.04296875,
          "content": "# [![Canvas Confetti](https://cdn.jsdelivr.net/gh/catdad-experiments/catdad-experiments-org@5ed78b/canvas-confetti/logo.jpg)](https://github.com/catdad/canvas-confetti/)\n\n[![github actions ci][ci.svg]][ci.link]\n[![jsdelivr][jsdelivr.svg]][jsdelivr.link]\n[![npm-downloads][npm-downloads.svg]][npm.link]\n[![npm-version][npm-version.svg]][npm.link]\n\n[ci.svg]: https://github.com/catdad/canvas-confetti/actions/workflows/ci.yml/badge.svg\n[ci.link]: https://github.com/catdad/canvas-confetti/actions/workflows/ci.yml?query=branch%3Amaster\n[jsdelivr.svg]: https://data.jsdelivr.com/v1/package/npm/canvas-confetti/badge?style=rounded\n[jsdelivr.link]: https://www.jsdelivr.com/package/npm/canvas-confetti\n[npm-downloads.svg]: https://img.shields.io/npm/dm/canvas-confetti.svg\n[npm.link]: https://www.npmjs.com/package/canvas-confetti\n[npm-version.svg]: https://img.shields.io/npm/v/canvas-confetti.svg\n\n## Demo\n\n[catdad.github.io/canvas-confetti](https://catdad.github.io/canvas-confetti/)\n\n## Install\n\nYou can install this module as a component from NPM:\n\n```bash\nnpm install --save canvas-confetti\n```\n\nYou can then `require('canvas-confetti');` to use it in your project build. _Note: this is a client component, and will not run in Node. You will need to build your project with something like [webpack](https://github.com/webpack/webpack) in order to use this._\n\nYou can also include this library in your HTML page directly from a CDN:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.min.js\"></script>\n```\n\n_Note: you should use the latest version at the time that you include your project. You can see all versions [on the releases page](https://github.com/catdad/canvas-confetti/releases)._\n\n## Reduced Motion\n\nThank you for joining me in this very important message about motion on your website. See, [not everyone likes it, and some actually prefer no motion](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion). They have [ways to tell us about it](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion) and we should listen. While I don't want to go as far as tell you not to have confetti on your page just yet, I do want to make it easy for you to respect what your users want. There is a `disableForReducedMotion` option you can use so that users that have trouble with chaotic animations don't need to struggle on your website. This is disabled by default, but I am considering changing that in a future major release. If you have strong feelings about this, [please let me know](https://github.com/catdad/canvas-confetti/issues/new). For now, please confetti responsibly.\n\n## API\n\nWhen installed from `npm`, this library can be required as a client component in your project build. When using the CDN version, it is exposed as a `confetti` function on `window`.\n\n### `confetti([options {Object}])` → `Promise|null`\n\n`confetti` takes a single optional object. When `window.Promise` is available, it will return a Promise to let you know when it is done. When promises are not available (like in IE), it will return `null`. You can polyfill promises using any of the popular polyfills. You can also provide a promise implementation to `confetti` through:\n\n```javascript\nconst MyPromise = require('some-promise-lib');\nconst confetti = require('canvas-confetti');\nconfetti.Promise = MyPromise;\n```\n\nIf you call `confetti` multiple times before it is done, it will return the same promise every time. Internally, the same canvas element will be reused, continuing the existing animation with the new confetti added. The promise returned by each call to `confetti` will resolve once all animations are done.\n\n#### `options`\n\nThe `confetti` parameter is a single optional `options` object, which has the following properties:\n\n- `particleCount` _Integer (default: 50)_: The number of confetti to launch. More is always fun... but be cool, there's a lot of math involved.\n- `angle` _Number (default: 90)_: The angle in which to launch the confetti, in degrees. 90 is straight up.\n- `spread` _Number (default: 45)_: How far off center the confetti can go, in degrees. 45 means the confetti will launch at the defined `angle` plus or minus 22.5 degrees.\n- `startVelocity` _Number (default: 45)_: How fast the confetti will start going, in pixels.\n- `decay` _Number (default: 0.9)_: How quickly the confetti will lose speed. Keep this number between 0 and 1, otherwise the confetti will gain speed. Better yet, just never change it.\n- `gravity` _Number (default: 1)_: How quickly the particles are pulled down. 1 is full gravity, 0.5 is half gravity, etc., but there are no limits. You can even make particles go up if you'd like.\n- `drift` _Number (default: 0)_: How much to the side the confetti will drift. The default is 0, meaning that they will fall straight down. Use a negative number for left and positive number for right.\n- `flat` _Boolean (default: false)_: Optionally turns off the tilt and wobble that three dimensional confetti would have in the real world. Yeah, they look a little sad, but y'all asked for them, so don't blame me.\n- `ticks` _Number (default: 200)_: How many times the confetti will move. This is abstract... but play with it if the confetti disappear too quickly for you.\n- `origin` _Object_: Where to start firing confetti from. Feel free to launch off-screen if you'd like.\n  - `origin.x` _Number (default: 0.5)_: The `x` position on the page, with `0` being the left edge and `1` being the right edge.\n  - `origin.y` _Number (default: 0.5)_: The `y` position on the page, with `0` being the top edge and `1` being the bottom edge.\n- `colors` _Array&lt;String&gt;_: An array of color strings, in the HEX format... you know, like `#bada55`.\n- `shapes` _Array&lt;String|Shape&gt;_: An array of shapes for the confetti. There are 3 built-in values of `square`, `circle`, and `star`. The default is to use both squares and circles in an even mix. To use a single shape, you can provide just one shape in the array, such as `['star']`. You can also change the mix by providing a value such as `['circle', 'circle', 'square']` to use two third circles and one third squares. You can also create your own shapes using the [`confetti.shapeFromPath`](#confettishapefrompath-path-matrix---shape) or [`confetti.shapeFromText`](#confettishapefromtext-text-scalar-color-fontfamily---shape) helper methods.\n- `scalar` _Number (default: 1)_: Scale factor for each confetti particle. Use decimals to make the confetti smaller. Go on, try teeny tiny confetti, they are adorable!\n- `zIndex` _Integer (default: 100)_: The confetti should be on top, after all. But if you have a crazy high page, you can set it even higher.\n- `disableForReducedMotion` _Boolean (default: false)_: Disables confetti entirely for users that [prefer reduced motion](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion). The `confetti()` promise will resolve immediately in this case.\n\n### `confetti.shapeFromPath({ path, matrix? })` → `Shape`\n\nThis helper method lets you create a custom confetti shape using an [SVG Path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d). Any valid path should work, though there are a few caveats:\n- All paths will be filed. If you were hoping to have a stroke path, that is not implemented.\n- Paths are limited to a single color, so keep that in mind.\n- All paths need a valid transform matrix. You can pass one in, or you can leave it out and use this helper to calculate the matrix for you. Do note that calculating the matrix is a bit expensive, so it is best to calculate it once for each path in development and cache that value, so that production confetti remain fast. The matrix is deterministic and will always be the same given the same path value.\n- For best forward compatibility, it is best to re-generate and re-cache the matrix if you update the `canvas-confetti` library.\n- Support for path-based confetti is limited to browsers which support [`Path2D`](https://developer.mozilla.org/en-US/docs/Web/API/Path2D), which should really be all major browser at this point.\n\nThis method will return a `Shape` -- it's really just a plain object with some properties, but shhh... we'll pretend it's a shape. Pass this `Shape` object into the `shapes` array directly.\n\nAs an example, here's how you might do a triangle confetti:\n\n```javascript\nvar triangle = confetti.shapeFromPath({ path: 'M0 10 L5 0 L10 10z' });\n\nconfetti({\n  shapes: [triangle]\n});\n```\n\n### `confetti.shapeFromText({ text, scalar?, color?, fontFamily? })` → `Shape`\n\nThis is the highly anticipated feature to render emoji confetti! Use any standard unicode emoji. Or other text, but... maybe don't use other text.\n\nWhile any text should work, there are some caveats:\n- For flailing confetti, something that is mostly square works best. That is, a single character, especially an emoji.\n- Rather than rendering text every time a confetti is drawn, this helper actually rasterizes the text. Therefore, it does not scale well after it is created. If you plan to use the `scalar` value to scale your confetti, use the same `scalar` value here when creating the shape. This will make sure the confetti are not blurry.\n\nThe options for this method are:\n- `options` _`Object`_:\n  - `text` _`String`_: the text to be rendered as a confetti. If you can't make up your mind, I suggest \"🐈\".\n  - `scalar` _`Number, optional, default: 1`_: a scale value relative to the default size. It matches the `scalar` value in the confetti options.\n  - `color` _`String, optional, default: #000000`_: the color used to render the text.\n  - `fontFamily` _`String, optional, default: native emoji`_: the font family name to use when rendering the text. The default follows [best practices for rendring the native OS emoji of the device](https://nolanlawson.com/2022/04/08/the-struggle-of-using-native-emoji-on-the-web/), falling back to `sans-serif`. If using a web font, make sure this [font is loaded](https://developer.mozilla.org/en-US/docs/Web/API/FontFace/load) before rendering your confetti.\n\n```javascript\nvar scalar = 2;\nvar pineapple = confetti.shapeFromText({ text: '🍍', scalar });\n\nconfetti({\n  shapes: [pineapple],\n  scalar\n});\n```\n\n### `confetti.create(canvas, [globalOptions])` → `function`\n\nThis method creates an instance of the `confetti` function that uses a custom canvas. This is useful if you want to limit the area on your page in which confetti appear. By default, this method will not modify the canvas in any way (other than drawing to it).\n\n_Canvas can be misunderstood a bit though, so let me explain why you might want to let the module modify the canvas just a bit. By default, a `canvas` is a relatively small image -- somewhere around 300x150, depending on the browser. When you resize it using CSS, this sets the display size of the canvas, but not the image being represented on that canvas. Think of it as loading a 300x150 jpeg image in an `img` tag and then setting the CSS for that tag to `1500x600` -- your image will end up stretched and blurry. In the case of a canvas, you need to also set the width and height of the canvas image itself. If you don't want to do that, you can allow `confetti` to set it for you._\n\nNote also that you should persist the custom instance and avoid initializing an instance of confetti with the same canvas element more than once.\n\nThe following global options are available:\n* `resize` _Boolean (default: false)_: Whether to allow setting the canvas image size, as well as keep it correctly sized if the window changes size (e.g. resizing the window, rotating a mobile device, etc.). By default, the canvas size will not be modified.\n* `useWorker` _Boolean (default: false)_: Whether to use an asynchronous web worker to render the confetti animation, whenever possible. This is turned off by default, meaning that the animation will always execute on the main thread. If turned on and the browser supports it, the animation will execute off of the main thread so that it is not blocking any other work your page needs to do. Using this option will also modify the canvas, but more on that directly below -- do read it. If it is not supported by the browser, this value will be ignored.\n* `disableForReducedMotion` _Boolean (default: false)_: Disables confetti entirely for users that [prefer reduced motion](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion). When set to true, use of this confetti instance will always respect a user's request for reduced motion and disable confetti for them.\n\n_**Important: If you use `useWorker: true`, I own your canvas now. It's mine now and I can do whatever I want with it (don't worry... I'll just put confetti inside it, I promise). You must not try to use the canvas in any way (other than I guess removing it from the DOM), as it will throw an error. When using workers for rendering, control of the canvas must be transferred to the web worker, preventing any usage of that canvas on the main thread. If you must manipulate the canvas in any way, do not use this option.**_\n\n```javascript\nvar myCanvas = document.createElement('canvas');\ndocument.body.appendChild(myCanvas);\n\nvar myConfetti = confetti.create(myCanvas, {\n  resize: true,\n  useWorker: true\n});\nmyConfetti({\n  particleCount: 100,\n  spread: 160\n  // any other options from the global\n  // confetti function\n});\n```\n\n### `confetti.reset()`\n\nStops the animation and clears all confetti, as well as immediately resolves any outstanding promises. In the case of a separate confetti instance created with [`confetti.create`](#confetticreatecanvas-globaloptions--function), that instance will have its own `reset` method.\n\n```javascript\nconfetti();\n\nsetTimeout(() => {\n  confetti.reset();\n}, 100);\n```\n\n```javascript\nvar myCanvas = document.createElement('canvas');\ndocument.body.appendChild(myCanvas);\n\nvar myConfetti = confetti.create(myCanvas, { resize: true });\n\nmyConfetti();\n\nsetTimeout(() => {\n  myConfetti.reset();\n}, 100);\n```\n\n## Examples\n\nLaunch some confetti the default way:\n\n```javascript\nconfetti();\n```\n\nLaunch a bunch of confetti:\n\n```javascript\nconfetti({\n  particleCount: 150\n});\n```\n\nLaunch some confetti really wide:\n\n```javascript\nconfetti({\n  spread: 180\n});\n```\n\nGet creative. Launch a small poof of confetti from a random part of the page:\n\n```javascript\nconfetti({\n  particleCount: 100,\n  startVelocity: 30,\n  spread: 360,\n  origin: {\n    x: Math.random(),\n    // since they fall down, start a bit higher than random\n    y: Math.random() - 0.2\n  }\n});\n```\n\nI said creative... we can do better. Since it doesn't matter how many times we call `confetti` (just the total number of confetti in the air), we can do some fun things, like continuously launch more and more confetti for 30 seconds, from multiple directions:\n\n```javascript\n// do this for 30 seconds\nvar duration = 30 * 1000;\nvar end = Date.now() + duration;\n\n(function frame() {\n  // launch a few confetti from the left edge\n  confetti({\n    particleCount: 7,\n    angle: 60,\n    spread: 55,\n    origin: { x: 0 }\n  });\n  // and launch a few from the right edge\n  confetti({\n    particleCount: 7,\n    angle: 120,\n    spread: 55,\n    origin: { x: 1 }\n  });\n\n  // keep going until we are out of time\n  if (Date.now() < end) {\n    requestAnimationFrame(frame);\n  }\n}());\n```\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "fixtures",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 29.8466796875,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <meta name=\"description\" content=\"Component for drawing confetti on a canvas\">\n  <meta name=\"author\" content=\"Kiril Vatev\">\n  <meta name=\"keywords\" content=\"canvas,confetti,component,module,animation,javascript,catdad\">\n\n  <meta name=\"theme-color\" content=\"#393939\">\n  <link id=\"favicon\" rel=\"shortcut icon\" type=\"image/png\" />\n\n  <title>canvas confetti</title>\n\n  <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans&display=swap\" rel=\"stylesheet\">\n\n  <style>\n    :root {\n      --primary-color: #eeeeee;\n      --secondary-color: #363636;\n      --secondary-variant-color: #272727;\n      --background-color: #212121;\n      --inner-color: #ffffff;\n      --border-color: #555651;\n\n      /* icons by Google - Material Design\n       * https://material.io/resources/icons/?style=baseline\n       */\n      --switch-moon-white: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' %3E%3Cpath fill='%23eeeeee' d='M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z'%3E%3C/path%3E%3C/svg%3E\");\n      --switch-sun-black: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' %3E%3Cpath fill='%23212121' d='M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z'%3E%3C/path%3E%3C/svg%3E\");\n      --switch-auto-white: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' %3E%3Cpath fill='%23eeeeee' d='M10.85 12.65h2.3L12 9l-1.15 3.65zM20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM14.3 16l-.7-2h-3.2l-.7 2H7.8L11 7h2l3.2 9h-1.9z'%3E%3C/path%3E%3C/svg%3E\");\n      --switch-auto-black: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' %3E%3Cpath fill='%23212121' d='M10.85 12.65h2.3L12 9l-1.15 3.65zM20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM14.3 16l-.7-2h-3.2l-.7 2H7.8L11 7h2l3.2 9h-1.9z'%3E%3C/path%3E%3C/svg%3E\");\n\n      --theme-switch: var(--switch-moon-white);\n    }\n\n    [data-theme=\"light\"] {\n      --primary-color: #212121;\n      --secondary-color: #ffffff;\n      --background-color: #f0f0f0;\n      --inner-color: #363636;\n\n      --theme-switch: var(--switch-sun-black);\n    }\n\n    [auto-theme] {\n      --theme-switch: var(--switch-auto-white);\n    }\n\n    [data-theme=\"light\"][auto-theme] {\n      --theme-switch: var(--switch-auto-black);\n    }\n    \n    html {\n      scroll-behavior: smooth;\n    }\n\n    html, body {\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      height: 100%;\n    }\n\n    body {\n      background: var(--background-color);\n      color: var(--primary-color);\n      font-size: 1em;\n      font-family: 'Noto Sans', sans-serif;\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n\n    .sprite {\n      display: none;\n    }\n\n    header {\n      position: absolute;\n      top: 0;\n      left: 0;\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      width: 100%;\n      height: 64px;\n    }\n\n    .theme {\n      --size: 28px;\n      position: relative;\n      display: inline-block;\n      width: var(--size);\n      height: var(--size);\n      background: none;\n      border: none;\n      outline: none;\n      margin-right: 12px;\n      cursor: pointer;\n    }\n\n    .theme:after {\n      position: absolute;\n      top: 0;\n      left: 0;\n      content: \"\";\n      width: var(--size);\n      height: var(--size);\n      background-repeat: no-repeat;\n      background-position: center;\n      background: var(--theme-switch);\n    }\n\n    .github-icon {\n      --size: 36px;\n      position: relative;\n      display: block;\n      width: var(--size);\n      height: var(--size);\n      margin-right: 12px;\n    }\n\n    .github-icon svg.icon {\n      fill: var(--primary-color);\n    }\n\n    h1, h2, .center {\n      text-align: center;\n    }\n\n    h1 {\n      margin-top: 64px;\n    }\n\n    h2 {\n      padding: 0;\n      margin: 0.25em;\n    }\n\n    p {\n      margin: 0.5em;\n    }\n\n    .container {\n      position: relative;\n      max-width: 1000px;\n      width: 100%;\n      margin: 0 auto;\n    }\n\n    .group {\n      position: relative;\n      width: 100%;\n      margin: 40px 0;\n      padding-top: 16px;\n\n      border-top: 1px solid var(--border-color);\n      border-radius: 20px;\n    }\n\n    .run {\n      padding: 10px 6px;\n      margin: 0.75em auto;\n      max-width: 200px;\n      width: 100%;\n      display: inline-block;\n\n      background: var(--secondary-color);\n      border: none;\n      outline: none;\n\n      color: var(--inner-color);\n      font-weight: bold;\n      cursor: pointer;\n      user-select: none;\n\n      opacity: 0.8;\n      transition: opacity 100ms ease;\n    }\n\n    .group .run:hover {\n      opacity: 1;\n    }\n\n    .editor {\n      position: relative;\n      min-height: 100px;\n      width: 100%;\n    }\n\n    .editor.ace_dark.ace_editor {\n      background-color: var(--secondary-color);\n    }\n    .editor.ace_dark .ace_gutter {\n      background: var(--secondary-variant-color);\n    }\n    .editor.ace_dark .ace_gutter .ace_gutter-cell {\n      color: var(--inner-color);\n      opacity: 0.6;\n    }\n\n    .flex-rows {\n      position: relative;\n      display: block;\n      width: 100%;\n      padding-bottom: 1em;\n    }\n\n    .description {\n      width: 94%;\n      margin: 10px auto;\n      padding: 0;\n\n      align-items: center;\n      line-height: 1.5;\n    }\n\n    .left {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: column;\n    }\n\n    a.anchor {\n      position: relative;\n      color: currentColor;\n      text-decoration: none;\n    }\n\n    a.anchor:hover::before {\n      content: \"🔗\";\n      color: currentColor;\n      position: absolute;\n      left: -2rem;\n      top: 0;\n      transform: scale(0.75, 0.75);\n    }\n\n    footer {\n      font-size: 0.9rem;\n      text-align: center;\n      line-height: 2;\n\n      background: var(--secondary-color);\n    }\n\n    footer span {\n      vertical-align: middle;\n    }\n\n    span.icon {\n      position: relative;\n      display: inline-block;\n      height: 1em;\n      width: 1em;\n    }\n    svg.icon {\n      position: absolute;\n      pointer-events: none;\n      left: 0;\n      width: 100%;\n      height: 100%;\n\n      fill: var(--inner-color);\n    }\n\n    footer a {\n      text-decoration: none;\n      color: var(--inner-color);\n      opacity: 0.85;\n      will-change: opacity;\n    }\n\n    footer a:hover {\n      opacity: 1;\n    }\n\n    .custom-canvas {\n      margin-top: 30px;\n      width: 100%;\n      max-width: 1000px;\n      height: 380px;\n      background: var(--secondary-color);\n    }\n\n    @media (min-width: 44em) {\n      .container {\n        width: 95%;\n      }\n\n      .flex-rows {\n        display: flex;\n        flex-direction: row;\n      }\n\n      .description {\n        width: 66%;\n        padding: 0 0 0 1em;\n      }\n    }\n  </style>\n\n  <script>\n    // this page is a demo that is not built, so fudge the module.exports support\n    // define a global `module` so that the actual source file can use it\n    window.module = {};\n  </script>\n  <script src=\"src/confetti.js\"></script>\n  <script>\n    // define the `module.exports` as the `confetti` global, the way that the\n    // cdn distributed file would\n    window.confetti = module.exports;\n  </script>\n\n  <script defer src=\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.0/ace.js\"></script>\n  <script defer src=\"https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.7.5/beautify.min.js\"></script>\n</head>\n<body>\n\n  <svg class=\"sprite\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n      <symbol id=\"code\" viewBox=\"0 0 14 16\">\n        <!-- Icon from GitHub Octicons - https://github.com/primer/octicons/ -->\n        <path d=\"M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3 9.5 3ZM4.5 3L0 8 4.5 13 6 11.5 2.5 8 6 4.5 4.5 3 4.5 3Z\"/>\n      </symbol>\n\n      <symbol id=\"heart\" viewBox=\"0 0 12 16\">\n        <!-- Icon from GitHub Octicons - https://github.com/primer/octicons/ -->\n        <path d=\"M11.2 3C10.68 2.37 9.95 2.05 9 2 8.03 2 7.31 2.42 6.8 3 6.29 3.58 6.02 3.92 6 4 5.98 3.92 5.72 3.58 5.2 3 4.68 2.42 4.03 2 3 2 2.05 2.05 1.31 2.38 0.8 3 0.28 3.61 0.02 4.28 0 5 0 5.52 0.09 6.52 0.67 7.67 1.25 8.82 3.01 10.61 6 13 8.98 10.61 10.77 8.83 11.34 7.67 11.91 6.51 12 5.5 12 5 11.98 4.28 11.72 3.61 11.2 2.98L11.2 3Z\"/>\n      </symbol>\n\n      <symbol id=\"run\" viewBox=\"0 0 10 10\">\n        <path d=\"M2 2L8 6L2 10\" />\n      </symbol>\n\n      <symbol id=\"octo\" viewBox=\"0 0 16 16\">\n        <!-- Icon from GitHub Octicons - https://github.com/primer/octicons/ -->\n        <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"/>\n      </symbol>\n    </defs>\n  </svg>\n\n  <header>\n    <button id=\"themeToggle\" title=\"Switch Theme\" class=\"theme\"></button>\n    <a class=\"github-icon\" title=\"Visit on GitHub\" href=\"https://github.com/catdad/canvas-confetti\" aria-label=\"View source on Github\">\n      <svg class=\"icon\"><use xlink:href=\"#octo\"></use></svg>\n    </a>\n  </header>\n\n  <h1>Canvas Confetti</h1>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"cannon\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#basic\" id=\"basic\" class=\"anchor\">Basic Cannon</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            The default mode... just your regular basic average blast of confetti. But it's still\n            a little cool, right?\n          </p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"random\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#random\" id=\"random\" class=\"anchor\">Random Direction</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            Go crazy with some randomness. Shoot a random amount of confetti in random directions.\n            (Go ahead... you know you want to click that button more than once.)\n          </p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"realistic\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#realistic\" id=\"realistic\" class=\"anchor\">Realistic Look</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            If you happened to get curious and changed the particle count to 400 or so, you saw\n            something disappointing. An even \"flattened cone\" look to the confetti, making it look\n            way too perfect and ruining the illusion. We can fix that by mixing a few effects together.\n          </p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"fireworks\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#fireworks\" id=\"fireworks\" class=\"anchor\">Fireworks</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            Why click a button repeatedly when you can have code do it for you? Shoot some firework\n            of confetti from the sides of page so you can still read the content in the center.\n          </p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"stars\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#stars\" id=\"stars\" class=\"anchor\">Stars</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            You can combine multiple calls to confetti with any settings in order to create\n            a more complex effect. Go ahead, combine different shapes, sizes, etc. Stagger them\n            for an extra boost of excitement.\n          </p>\n          <p class=\"center\">✨ Celebrate with a burst of stars! ✨</p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"snow\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#snow\" id=\"snow\" class=\"anchor\">Snow</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            The effect is not limited to crazy rapid fire of confetti though. You can create a\n            wintery mood with gently falling particles across the entire page.\n          </p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"continuous\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#continuous\" id=\"continuous\" class=\"anchor\">School Pride</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            But if you are into crazy rapid fire of confetti, what could be a better use than\n            to show everyone what you are all about? Tell people where you are from with two\n            confetti cannons from either side of the page.\n          </p>\n          <p class=\"center\">🌰 Go Buckeyes! 🌰</p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"paths\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#paths\" id=\"paths\" class=\"anchor\">Custom Shapes</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            Celebrate some holidays with holiday-appropriate shapes! You can use any SVG path\n            to make a confetti out of it. Go wild!\n          </p>\n          <p class=\"center\">🎃🎄💜</p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"emoji\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#emoji\" id=\"emoji\" class=\"anchor\">Emoji</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            Don't know any custom shapes? That's okay, just use emoji instead! That's what they\n            are for anyway. I mean... why do they even exist if we weren't supposed to make\n            confetti out of them? Think about it.\n          </p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"group\" data-name=\"custom\">\n      <div class=\"flex-rows\">\n        <div class=\"left\">\n          <h2><a href=\"#custom-canvas\" id=\"custom-canvas\" class=\"anchor\">Custom Canvas</a></h2>\n          <button class=\"run\">\n            Run\n            <span class=\"icon\">\n              <svg class=\"icon\"><use xlink:href=\"#run\"></use></svg>\n            </span>\n          </button>\n        </div>\n        <div class=\"description\">\n          <p>\n            But if you just hate confetti all over the place, there's something here for you\n            as well. You can limit where the confetti appear by providing your own canvas element.\n          </p>\n        </div>\n      </div>\n      <div class=\"editor\"></div>\n      <div class=\"flex-rows\">\n        <canvas id=\"my-canvas\" class=\"custom-canvas\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <footer>\n    <a href=\"https://github.com/catdad\">\n      <span class=\"icon\">\n        <svg class=\"icon\"><use xlink:href=\"#code\"></use></svg>\n      </span>\n      <span> with </span>\n      <span class=\"icon\">\n        <svg class=\"icon\"><use xlink:href=\"#heart\"></use></svg>\n      </span>\n      <span> by <b>catdad</b></span>\n    </a>\n  </footer>\n\n  <script>\n    var editors = [];\n    var activeTheme = 'dark';\n    var currentStep = parseInt(localStorage.getItem('canvas-confetti/theme'), 10) || 0;\n    var prefersLightTheme = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)');\n    var themes = {\n      light: 'ace/theme/xcode',\n      dark: 'ace/theme/monokai'\n    };\n\n    var getPreferedTheme = function () {\n      return prefersLightTheme ? prefersLightTheme.matches ? 'light' : 'dark' : 'dark';\n    };\n\n    var setTheme = function (isAuto, theme) {\n      if (isAuto) {\n        document.body.setAttribute('auto-theme', true);\n        activeTheme = getPreferedTheme();\n      } else {\n        document.body.removeAttribute('auto-theme');\n        activeTheme = theme;\n      }\n\n      document.body.setAttribute('data-theme', activeTheme);\n\n      editors.forEach(function(editor) {\n        editor.setTheme(themes[activeTheme]);\n      });\n    };\n\n    var updateTheme = function (step) {\n      currentStep = step;\n\n      switch (step) {\n        case 0:\n          setTheme(true);\n          prefersLightTheme && prefersLightTheme.addEventListener('change', setTheme);\n          break;\n        case 1:\n        case 2:\n          setTheme(false, step === 1 ? 'dark' : 'light');\n          prefersLightTheme && prefersLightTheme.removeListener(setTheme);\n          break;\n      }\n\n      localStorage.setItem('canvas-confetti/theme', currentStep);\n    }\n\n    updateTheme(currentStep);\n\n    document.getElementById('themeToggle').addEventListener('click', function (event) {\n      updateTheme(++currentStep % 3);\n    });\n\n    var modes = {\n      cannon: function cannon() {\n        confetti({\n          particleCount: 100,\n          spread: 70,\n          origin: { y: 0.6 }\n        });\n      },\n      random: function random() {\n        function randomInRange(min, max) {\n          return Math.random() * (max - min) + min;\n        }\n\n        confetti({\n          angle: randomInRange(55, 125),\n          spread: randomInRange(50, 70),\n          particleCount: randomInRange(50, 100),\n          origin: { y: 0.6 }\n        });\n      },\n      realistic: function realistic() {\n        var count = 200;\n        var defaults = {\n          origin: { y: 0.7 }\n        };\n\n        function fire(particleRatio, opts) {\n          confetti({\n            ...defaults,\n            ...opts,\n            particleCount: Math.floor(count * particleRatio)\n          });\n        }\n\n        fire(0.25, {\n          spread: 26,\n          startVelocity: 55,\n        });\n        fire(0.2, {\n          spread: 60,\n        });\n        fire(0.35, {\n          spread: 100,\n          decay: 0.91,\n          scalar: 0.8\n        });\n        fire(0.1, {\n          spread: 120,\n          startVelocity: 25,\n          decay: 0.92,\n          scalar: 1.2\n        });\n        fire(0.1, {\n          spread: 120,\n          startVelocity: 45,\n        });\n      },\n      fireworks: function fireworks() {\n        var duration = 15 * 1000;\n        var animationEnd = Date.now() + duration;\n        var defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\n\n        function randomInRange(min, max) {\n          return Math.random() * (max - min) + min;\n        }\n\n        var interval = setInterval(function () {\n          var timeLeft = animationEnd - Date.now();\n\n          if (timeLeft <= 0) {\n            return clearInterval(interval);\n          }\n\n          var particleCount = 50 * (timeLeft / duration);\n          // since particles fall down, start a bit higher than random\n          confetti({ ...defaults, particleCount, origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 } });\n          confetti({ ...defaults, particleCount, origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 } });\n        }, 250);\n      },\n      snow: function snow() {\n        var duration = 15 * 1000;\n        var animationEnd = Date.now() + duration;\n        var skew = 1;\n\n        function randomInRange(min, max) {\n          return Math.random() * (max - min) + min;\n        }\n\n        (function frame() {\n          var timeLeft = animationEnd - Date.now();\n          var ticks = Math.max(200, 500 * (timeLeft / duration));\n          skew = Math.max(0.8, skew - 0.001);\n\n          confetti({\n            particleCount: 1,\n            startVelocity: 0,\n            ticks: ticks,\n            origin: {\n              x: Math.random(),\n              // since particles fall down, skew start toward the top\n              y: (Math.random() * skew) - 0.2\n            },\n            colors: ['#ffffff'],\n            shapes: ['circle'],\n            gravity: randomInRange(0.4, 0.6),\n            scalar: randomInRange(0.4, 1),\n            drift: randomInRange(-0.4, 0.4)\n          });\n\n          if (timeLeft > 0) {\n            requestAnimationFrame(frame);\n          }\n        }());\n      },\n      stars: function stars() {\n        var defaults = {\n          spread: 360,\n          ticks: 50,\n          gravity: 0,\n          decay: 0.94,\n          startVelocity: 30,\n          colors: ['FFE400', 'FFBD00', 'E89400', 'FFCA6C', 'FDFFB8']\n        };\n\n        function shoot() {\n          confetti({\n            ...defaults,\n            particleCount: 40,\n            scalar: 1.2,\n            shapes: ['star']\n          });\n\n          confetti({\n            ...defaults,\n            particleCount: 10,\n            scalar: 0.75,\n            shapes: ['circle']\n          });\n        }\n\n        setTimeout(shoot, 0);\n        setTimeout(shoot, 100);\n        setTimeout(shoot, 200);\n      },\n      continuous: function continuous() {\n        var end = Date.now() + (15 * 1000);\n\n        // go Buckeyes!\n        var colors = ['#bb0000', '#ffffff'];\n\n        (function frame() {\n          confetti({\n            particleCount: 2,\n            angle: 60,\n            spread: 55,\n            origin: { x: 0 },\n            colors: colors\n          });\n          confetti({\n            particleCount: 2,\n            angle: 120,\n            spread: 55,\n            origin: { x: 1 },\n            colors: colors\n          });\n\n          if (Date.now() < end) {\n            requestAnimationFrame(frame);\n          }\n        }());\n      },\n      custom: function() {\n        var canvas = document.getElementById('my-canvas');\n\n        // you should  only initialize a canvas once, so save this function\n        // we'll save it to the canvas itself for the purpose of this demo\n        canvas.confetti = canvas.confetti || confetti.create(canvas, { resize: true });\n\n        canvas.confetti({\n          spread: 70,\n          origin: { y: 1.2 }\n        });\n      },\n      paths: function() {\n        // note: you CAN only use a path for confetti.shapeFrompath(), but for\n        // performance reasons it is best to use it once in development and save\n        // the result to avoid the performance penalty at runtime\n\n        // pumpkin shape from https://thenounproject.com/icon/pumpkin-5253388/\n        var pumpkin = confetti.shapeFromPath({\n          path: 'M449.4 142c-5 0-10 .3-15 1a183 183 0 0 0-66.9-19.1V87.5a17.5 17.5 0 1 0-35 0v36.4a183 183 0 0 0-67 19c-4.9-.6-9.9-1-14.8-1C170.3 142 105 219.6 105 315s65.3 173 145.7 173c5 0 10-.3 14.8-1a184.7 184.7 0 0 0 169 0c4.9.7 9.9 1 14.9 1 80.3 0 145.6-77.6 145.6-173s-65.3-173-145.7-173zm-220 138 27.4-40.4a11.6 11.6 0 0 1 16.4-2.7l54.7 40.3a11.3 11.3 0 0 1-7 20.3H239a11.3 11.3 0 0 1-9.6-17.5zM444 383.8l-43.7 17.5a17.7 17.7 0 0 1-13 0l-37.3-15-37.2 15a17.8 17.8 0 0 1-13 0L256 383.8a17.5 17.5 0 0 1 13-32.6l37.3 15 37.2-15c4.2-1.6 8.8-1.6 13 0l37.3 15 37.2-15a17.5 17.5 0 0 1 13 32.6zm17-86.3h-82a11.3 11.3 0 0 1-6.9-20.4l54.7-40.3a11.6 11.6 0 0 1 16.4 2.8l27.4 40.4a11.3 11.3 0 0 1-9.6 17.5z',\n          matrix: [0.020491803278688523, 0, 0, 0.020491803278688523, -7.172131147540983, -5.9016393442622945]\n        });\n        // tree shape from https://thenounproject.com/icon/pine-tree-1471679/\n        var tree = confetti.shapeFromPath({\n          path: 'M120 240c-41,14 -91,18 -120,1 29,-10 57,-22 81,-40 -18,2 -37,3 -55,-3 25,-14 48,-30 66,-51 -11,5 -26,8 -45,7 20,-14 40,-30 57,-49 -13,1 -26,2 -38,-1 18,-11 35,-25 51,-43 -13,3 -24,5 -35,6 21,-19 40,-41 53,-67 14,26 32,48 54,67 -11,-1 -23,-3 -35,-6 15,18 32,32 51,43 -13,3 -26,2 -38,1 17,19 36,35 56,49 -19,1 -33,-2 -45,-7 19,21 42,37 67,51 -19,6 -37,5 -56,3 25,18 53,30 82,40 -30,17 -79,13 -120,-1l0 41 -31 0 0 -41z',\n          matrix: [0.03597122302158273, 0, 0, 0.03597122302158273, -4.856115107913669, -5.071942446043165]\n        });\n        // heart shape from https://thenounproject.com/icon/heart-1545381/\n        var heart = confetti.shapeFromPath({\n          path: 'M167 72c19,-38 37,-56 75,-56 42,0 76,33 76,75 0,76 -76,151 -151,227 -76,-76 -151,-151 -151,-227 0,-42 33,-75 75,-75 38,0 57,18 76,56z',\n          matrix: [0.03333333333333333, 0, 0, 0.03333333333333333, -5.566666666666666, -5.533333333333333]\n        });\n\n        var defaults = {\n          scalar: 2,\n          spread: 180,\n          particleCount: 30,\n          origin: { y: -0.1 },\n          startVelocity: -35\n        };\n\n        confetti({\n          ...defaults,\n          shapes: [ pumpkin ],\n          colors: ['#ff9a00', '#ff7400', '#ff4d00']\n        });\n        confetti({\n          ...defaults,\n          shapes: [ tree ],\n          colors: ['#8d960f', '#be0f10', '#445404']\n        });\n        confetti({\n          ...defaults,\n          shapes: [ heart ],\n          colors: ['#f93963', '#a10864', '#ee0b93']\n        });\n      },\n      emoji: function () {\n        var scalar = 2;\n        var unicorn = confetti.shapeFromText({ text: '🦄', scalar });\n\n        var defaults = {\n          spread: 360,\n          ticks: 60,\n          gravity: 0,\n          decay: 0.96,\n          startVelocity: 20,\n          shapes: [unicorn],\n          scalar\n        };\n\n        function shoot() {\n          confetti({\n            ...defaults,\n            particleCount: 30\n          });\n\n          confetti({\n            ...defaults,\n            particleCount: 5,\n            flat: true\n          });\n\n          confetti({\n            ...defaults,\n            particleCount: 15,\n            scalar: scalar / 2,\n            shapes: ['circle']\n          });\n        }\n\n        setTimeout(shoot, 0);\n        setTimeout(shoot, 100);\n        setTimeout(shoot, 200);\n      }\n    };\n\n    function pretty(val) {\n      return js_beautify(val, { indent_size: 2, brace_style: 'preserve-inline', });\n    }\n\n    function getCode(name) {\n      // pretty-print the code, since we will use minified code in production\n      var code = pretty(modes[name].toString());\n      // take out the function wrapper, trim all whitespace\n      code = code.split('\\n').slice(1).slice(0, -1).map(function (s) {\n        return s.trim();\n      }).join('\\n');\n      // pretty-print again\n      return pretty(code);\n    }\n\n    window.onload = function () {\n      [].forEach.call(document.querySelectorAll('.group'), function (group) {\n        var name = group.getAttribute('data-name');\n        var button = group.querySelector('.run');\n        var codeElem = group.querySelector('.editor');\n\n        var editor = ace.edit(codeElem);\n        editor.setTheme(themes[activeTheme]);\n        editor.session.setMode('ace/mode/javascript');\n        editor.session.setUseSoftTabs(true);\n        editor.session.setTabSize(2);\n\n        editor.session.setValue(getCode(name));\n\n        var count = editor.session.getLength();\n\n        // set height so that all code is visible\n        codeElem.style.minHeight = (14 * count) + 1 + 'px';\n        codeElem.style.height = (count) + 'rem';\n\n        button.onclick = function (ev) {\n          // stop mobile browsers from zooming when clicking\n          // buttons repeatedly really fast\n          ev.preventDefault();\n\n          try {\n            eval(editor.getValue());\n          } catch (e) {\n            console.error(e);\n          }\n        };\n\n        editors.push(editor);\n      });\n    };\n  </script>\n\n  <script>\n    // render favicon live, because why not\n    addEventListener(\"load\", (event) => {\n      const image = confetti.shapeFromText('🎊', { scalar: 512/10 });\n      const canvas = new OffscreenCanvas(image.bitmap.width, image.bitmap.height);\n      const ctx = canvas.getContext('bitmaprenderer');\n      ctx.transferFromImageBitmap(image.bitmap);\n\n      canvas.convertToBlob().then(blob => {\n        const icon = document.getElementById('favicon');\n        icon.setAttribute('href', URL.createObjectURL(blob));\n      });\n    });\n  </script>\n\n  <script src=\"/analytics.js\" async></script>\n</body>\n</html>\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.61328125,
          "content": "{\n  \"name\": \"canvas-confetti\",\n  \"version\": \"1.9.3\",\n  \"description\": \"performant confetti animation in the browser\",\n  \"main\": \"src/confetti.js\",\n  \"module\": \"dist/confetti.module.mjs\",\n  \"jsdelivr\": \"dist/confetti.browser.js\",\n  \"scripts\": {\n    \"build\": \"node build/build.js\",\n    \"browserify\": \"browserify --entry src/confetti.js --outfile temp/confetti.bundle.js --standalone confetti\",\n    \"minify\": \"terser --compress --mangle -o temp/confetti.min.js -- dist/confetti.browser.js\",\n    \"pretest\": \"npm run build -s && npm run browserify -s && npm run -s minify\",\n    \"test\": \"cd test && ava --verbose --serial\",\n    \"lint\": \"eslint src/**/*.js test/**/*.js build/**/*.js\",\n    \"dev\": \"node build/serve.js\",\n    \"devtest\": \"cross-env CONFETTI_SHOW=1 npm test\",\n    \"citest\": \"npm run test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/catdad/canvas-confetti.git\"\n  },\n  \"author\": \"Kiril Vatev <vatev.1@gmail.com>\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/catdad/canvas-confetti/issues\"\n  },\n  \"homepage\": \"https://github.com/catdad/canvas-confetti#readme\",\n  \"devDependencies\": {\n    \"ava\": \"2.4.0\",\n    \"babel-eslint\": \"^8.2.1\",\n    \"browserify\": \"^15.2.0\",\n    \"cross-env\": \"^5.1.3\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-plugin-ava\": \"9.0.0\",\n    \"jimp\": \"^0.2.28\",\n    \"puppeteer\": \"^19.11.1\",\n    \"rootrequire\": \"^1.0.0\",\n    \"send\": \"^0.16.1\",\n    \"terser\": \"^3.14.1\"\n  },\n  \"keywords\": [\n    \"canvas\",\n    \"confetti\",\n    \"animation\",\n    \"burst\",\n    \"fireworks\",\n    \"snow\",\n    \"particles\"\n  ],\n  \"funding\": {\n    \"type\": \"donate\",\n    \"url\": \"https://www.paypal.me/kirilvatev\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}