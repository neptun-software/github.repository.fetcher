{
  "metadata": {
    "timestamp": 1736563095705,
    "page": 2,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nylas/nylas-mail",
      "stars": 24795,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".arcconfig",
          "type": "blob",
          "size": 0.1640625,
          "content": "{\n  \"project_id\" : \"nylas-mail\",\n  \"conduit_uri\" : \"https://phab.nylas.com/\",\n  \"load\" : [\n    \"arclib\"\n  ],\n  \"lint.engine\": \"ArcanistConfigurationDrivenLintEngine\"\n}\n"
        },
        {
          "name": ".arclint",
          "type": "blob",
          "size": 0.7880859375,
          "content": "{\n  \"linters\": {\n    \"coffeescript-linter\": {\n      \"type\": \"script-and-regex\",\n      \"script-and-regex.script\": \"./node_modules/.bin/coffeelint -f .coffeelint.json\",\n      \"script-and-regex.regex\": \"/^  ((?P<error>✖)|(?P<warning>⚠)) *line (?P<line>\\\\d+) +(?P<message>.*)$/m\",\n      \"include\": \"{\\\\.(e?coffee|cjsx)}\"\n    },\n    \"eslint-regex-based\": {\n      \"type\": \"script-and-regex\",\n      \"include\": [\"(\\\\.jsx?$)\", \"(\\\\.es6$)\"],\n      \"exclude\": [\"(src\\\\/K2)\", \"(node_modules)\"],\n      \"script-and-regex.script\": \"sh -c '([ -e ./node_modules/.bin/eslint ]) && (./node_modules/.bin/eslint -f compact \\\"$0\\\" || true)'\",\n      \"script-and-regex.regex\": \"/^(?P<file>.*): line (?P<line>[0-9]*), col (?P<char>[0-9]*), (?P<warning>Warning|Error) - (?P<message>.*?)(\\\\((?P<code>[a-z-]+)\\\\))?$/m\"\n    }\n  }\n}\n"
        },
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.0751953125,
          "content": "{\n  \"presets\": [\n    \"electron\",\n    \"react\"\n  ],\n  \"sourceMaps\": \"inline\"\n}\n"
        },
        {
          "name": ".coffeelint.json",
          "type": "blob",
          "size": 2.1552734375,
          "content": "{\n    \"arrow_spacing\": {\n        \"level\": \"ignore\"\n    },\n    \"camel_case_classes\": {\n        \"level\": \"error\"\n    },\n    \"coffeescript_error\": {\n        \"level\": \"error\"\n    },\n    \"colon_assignment_spacing\": {\n        \"level\": \"ignore\",\n        \"spacing\": {\n            \"left\": 0,\n            \"right\": 0\n        }\n    },\n    \"cyclomatic_complexity\": {\n        \"value\": 10,\n        \"level\": \"ignore\"\n    },\n    \"duplicate_key\": {\n        \"level\": \"error\"\n    },\n    \"empty_constructor_needs_parens\": {\n        \"level\": \"ignore\"\n    },\n    \"indentation\": {\n        \"value\": 2,\n        \"level\": \"error\"\n    },\n    \"max_line_length\": {\n        \"value\": 140,\n        \"level\": \"error\",\n        \"limitComments\": true\n    },\n    \"missing_fat_arrows\": {\n        \"level\": \"ignore\"\n    },\n    \"newlines_after_classes\": {\n        \"value\": 3,\n        \"level\": \"ignore\"\n    },\n    \"no_backticks\": {\n        \"level\": \"error\"\n    },\n    \"no_debugger\": {\n        \"level\": \"warn\"\n    },\n    \"no_empty_functions\": {\n        \"level\": \"ignore\"\n    },\n    \"no_empty_param_list\": {\n        \"level\": \"ignore\"\n    },\n    \"no_implicit_braces\": {\n        \"level\": \"ignore\",\n        \"strict\": true\n    },\n    \"no_implicit_parens\": {\n        \"strict\": true,\n        \"level\": \"ignore\"\n    },\n    \"no_interpolation_in_single_quotes\": {\n        \"level\": \"ignore\"\n    },\n    \"no_plusplus\": {\n        \"level\": \"ignore\"\n    },\n    \"no_stand_alone_at\": {\n        \"level\": \"ignore\"\n    },\n    \"no_tabs\": {\n        \"level\": \"error\"\n    },\n    \"no_throwing_strings\": {\n        \"level\": \"error\"\n    },\n    \"no_trailing_semicolons\": {\n        \"level\": \"error\"\n    },\n    \"no_trailing_whitespace\": {\n        \"level\": \"error\",\n        \"allowed_in_comments\": false,\n        \"allowed_in_empty_lines\": true\n    },\n    \"no_unnecessary_double_quotes\": {\n        \"level\": \"ignore\"\n    },\n    \"no_unnecessary_fat_arrows\": {\n        \"level\": \"warn\"\n    },\n    \"non_empty_constructor_needs_parens\": {\n        \"level\": \"ignore\"\n    },\n    \"prefer_english_operator\": {\n        \"level\": \"ignore\",\n        \"doubleNotLevel\": \"ignore\"\n    },\n    \"space_operators\": {\n        \"level\": \"ignore\"\n    },\n    \"spacing_after_comma\": {\n        \"level\": \"ignore\"\n    }\n}\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.34765625,
          "content": ".arc*\n.git*\narclib\n**/node_modules\npackages/client-*\n!packages/client-app/.babelrc\n\n*.swp\n*~\n.DS_Store\n**/npm-debug.log\n**/lerna-debug.log\n\n# Vim temp files\n*.swp\n*.swo\n\n# Elastic Beanstalk Files\n.elasticbeanstalk/*\n!.elasticbeanstalk/*.cfg.yml\n!.elasticbeanstalk/*.global.yml\n/packages/client-sync/spec-saved-state.json\n\n# Built cloud files\nn1_cloud_dist\n"
        },
        {
          "name": ".ebextensions",
          "type": "tree",
          "content": null
        },
        {
          "name": ".ebignore",
          "type": "blob",
          "size": 0.3505859375,
          "content": ".arc*\n.git*\narclib/\n**/node_modules/\npackages/client-*\n!packages/client-app/.babelrc\n\n*.swp\n*~\n.DS_Store\n**/npm-debug.log\n**/lerna-debug.log\n\n# Vim temp files\n*.swp\n*.swo\n\n# Elastic Beanstalk Files\n.elasticbeanstalk/*\n!.elasticbeanstalk/*.cfg.yml\n!.elasticbeanstalk/*.global.yml\n/packages/client-sync/spec-saved-state.json\n\n# Built cloud files\nn1_cloud_dist/\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 2.58984375,
          "content": "{\n  \"parser\": \"babel-eslint\",\n  \"extends\": \"airbnb\",\n  \"globals\": {\n    \"NylasEnv\": false,\n    \"$n\": false,\n    \"waitsForPromise\": false,\n    \"advanceClock\": false,\n    \"TEST_ACCOUNT_ID\": false,\n    \"TEST_ACCOUNT_NAME\": false,\n    \"TEST_ACCOUNT_EMAIL\": false,\n    \"TEST_ACCOUNT_ALIAS_EMAIL\": false\n  },\n  \"env\": {\n    \"browser\": true,\n    \"node\": true,\n    \"jasmine\": true\n  },\n  \"rules\": {\n    \"arrow-body-style\": \"off\",\n    \"arrow-parens\": \"off\",\n    \"class-methods-use-this\": \"off\",\n    \"prefer-arrow-callback\": [\"error\", {\"allowNamedFunctions\": true}],\n    \"eqeqeq\": [\"error\", \"smart\"],\n    \"id-length\": \"off\",\n    \"object-curly-spacing\": \"off\",\n    \"max-len\": \"off\",\n    \"new-cap\": [\"error\", {\"capIsNew\": false}],\n    \"newline-per-chained-call\": \"off\",\n    \"no-bitwise\": \"off\",\n    \"no-lonely-if\": \"off\",\n    \"no-console\": \"off\",\n    \"no-continue\": \"off\",\n    \"no-constant-condition\": \"off\",\n    \"no-loop-func\": \"off\",\n    \"no-plusplus\": \"off\",\n    \"no-shadow\": \"error\",\n    \"no-underscore-dangle\": \"off\",\n    \"object-shorthand\": \"off\",\n    \"quotes\": \"off\",\n    \"quote-props\": [\"error\", \"consistent-as-needed\", { \"keywords\": true }],\n    \"no-param-reassign\": [\"error\", { \"props\": false }],\n    \"semi\": \"off\",\n    \"no-mixed-operators\": \"off\",\n    \"import/extensions\": [\"error\", \"never\", { \"json\": \"always\" }],\n    \"import/no-unresolved\": [\"error\", {\"ignore\": [\"nylas-exports\", \"nylas-component-kit\", \"electron\", \"nylas-store\", \"react-dom/server\", \"nylas-observables\", \"windows-shortcuts\", \"moment-round\", \"better-sqlite3\", \"chrono-node\", \"event-kit\", \"enzyme\", \"isomorphic-core\"]}],\n    \"import/no-extraneous-dependencies\": \"off\",\n    \"import/newline-after-import\": \"off\",\n    \"import/prefer-default-export\": \"off\",\n    \"react/no-multi-comp\": \"off\",\n    \"react/no-find-dom-node\": \"off\",\n    \"react/no-string-refs\": \"off\",\n    \"react/no-unused-prop-types\": \"off\",\n    \"react/forbid-prop-types\": \"off\",\n    \"jsx-a11y/no-static-element-interactions\": \"off\",\n    \"react/prop-types\": [\"error\", {\"ignore\": [\"children\"]}],\n    \"react/sort-comp\": \"error\",\n    \"no-restricted-syntax\": [\n      \"error\", \"ForInStatement\", \"LabeledStatement\", \"WithStatement\"\n    ],\n    \"comma-dangle\": [\"error\", {\n      \"arrays\": \"always-multiline\",\n      \"objects\": \"always-multiline\",\n      \"imports\": \"always-multiline\",\n      \"exports\": \"always-multiline\",\n      \"functions\": \"ignore\"\n    }],\n    \"no-useless-return\": \"off\"\n  },\n  \"settings\": {\n    \"import/core-modules\": [ \"nylas-exports\", \"nylas-component-kit\", \"electron\", \"nylas-store\", \"nylas-observables\" ],\n    \"import/resolver\": {\"node\": {\"extensions\": [\".es6\", \".jsx\", \".coffee\", \".json\", \".cjsx\", \".js\"]}}\n  }\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1162109375,
          "content": "##### Elastic Beanstalk Files\n.elasticbeanstalk/*\n!.elasticbeanstalk/*.cfg.yml\n!.elasticbeanstalk/*.global.yml\n\n##### Arcanist / Phab\n**/.arcconfig\n**/.arclint\n**/arclib\n\n##### Node modules\nnode_modules\n!packages/client-app/spec/fixtures/packages/package-with-incompatible-native-module/node_modules\n**/npm-debug.log*\n**/lerna-debug.log*\n\n##### Certs for building\n**/build/resources/certs\n\n##### Misc swap files\n**/*.swp\n**/*.swo\n**/*~\n**/*#\n**/.DS_Store\n**/Thumbs.db\n**/#emacs\n\n# Built cloud files\nn1_cloud_dist\n\n# Built Nylas Mail client\npackages/client-app/dist\n\n# Tests\nspec-saved-state.json\n\n# Symlinked Jasmine config files\n**/jasmine/config.json\n!packages/isomorphic-core/spec/jasmine/config.json\n\n# Symlinked isomorphic-core Specs\npackages/client-app/spec/isomorphic-core\n\n# Elastic Beanstalk Files\n.elasticbeanstalk/*\n!.elasticbeanstalk/*.cfg.yml\n!.elasticbeanstalk/*.global.yml\n\n# Sqlite amalgamation for scripts\nscripts/sqlite\n\n# Scripts for calculating statistics\nscripts/toolbox\nscripts/venv\n\n# Python\n*.pyc\n\n# OAuth client secret for talking to Google Sheets\nclient_secret.json\n/packages/client-app/internal_packages/client-sync\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.9208984375,
          "content": "# The private Nylas monorepo build script. This will build a full signed\n# release for the Nylas Mail client\nsudo: false\n\naddons:\n  apt:\n    sources:\n    - ubuntu-toolchain-r-test\n    packages:\n    - build-essential\n    - clang\n    - fakeroot\n    - g++-4.8\n    - git\n    - libgnome-keyring-dev\n    - xvfb\n    - rpm\n    - libxext-dev\n    - libxtst-dev\n    - libxkbfile-dev\n\nbranches:\n  only:\n  - master\n  - /ci-.*/\n  - /stable.*/\n\nmatrix:\n  include:\n  - os: linux\n    env: NODE_VERSION=6.9 CC=gcc-4.8 CXX=g++-4.8 DEBUG=\"electron-packager:*\" INSTALL_TARGET=client\n  - os: osx\n    env: NODE_VERSION=6.9 CC=clang CXX=clang++ DEBUG=\"electron-packager:*\" INSTALL_TARGET=client\n\ninstall:\n- git clone https://github.com/creationix/nvm.git /tmp/.nvm\n- source /tmp/.nvm/nvm.sh\n- nvm install $NODE_VERSION\n- nvm use --delete-prefix $NODE_VERSION\n\nscript:\n- npm install && npm run build-client\n\ncache:\n  directories:\n  - node_modules\n  - apm/node_modules\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0791015625,
          "content": "# This Dockerfile builds a production-ready image of K2 to be used across all\n# services. See the Dockerfile documentation here:\n# https://docs.docker.com/engine/reference/builder/\n\n# Use the latest Node 6 base docker image\n# https://github.com/nodejs/docker-node\nFROM node:6\nENV INSTALL_TARGET=cloud\n\n# Copy everything (excluding what's in .dockerignore) into an empty dir\nCOPY . /home\nWORKDIR /home\n\n# This installs global dependencies, then in the postinstall script, runs lerna\n# bootstrap to install and link cloud-api, cloud-core, and cloud-workers.\n# We need the --unsafe-perm param to run the postinstall script since Docker\n# will run everything as sudo\nRUN npm install --unsafe-perm\n\n# This uses babel to compile any es6 to stock js for plain node\nRUN node packages/cloud-core/build/build-n1-cloud\n\n# External services run on port 80. Expose it.\nEXPOSE 5100\n\n# We use a start-aws command that automatically spawns the correct process\n# based on environmpackages/cloud-coreent variables (which changes instance to instance)\nCMD packages/cloud-core/_n1cloud_docker_launcher.sh ${AWS_SERVICE_NAME}\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.4765625,
          "content": "\n##### IMPORTANT: Nylas Mail is no longer maintained\n\nNylas Mail is no longer maintained by Nylas - nobody will read or respond to issues filed here.\nThis issue tracker is being kept online because many existing issues contain valuable tips\nand information.\n\nIf you're looking for an alternative to Nylas Mail, check out https://getmailspring.com/.\nIt is based on the Nylas Mail source code, maintained by one of the original developers, \nand features an entirely re-written sync engine.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2017 Nylas, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8115234375,
          "content": "# Nylas Mail - the open-source, extensible mail client\n![N1 Screenshot](https://github.com/nylas/nylas-mail/raw/master/screenshot/hero_graphic_mac%402x.png)\n\n**Nylas Mail was an open-source mail client built on the modern web with [Electron](https://github.com/atom/electron), [React](https://facebook.github.io/react/), and [Flux](https://facebook.github.io/flux/).** It was designed to be easy to extend, and many third-party plugins are available that add functionality to the client. \n\n**⚠️ Nylas Mail was initially released and open-sourced in early 2015 and was maintained by Nylas until Spring 2017.** While Nylas no longer supports Nylas Mail, you can download the latest release or build it from source. There are also **[several forks](#forks)** that are being actively developed and maintained.\n\n# Getting Started\n\n## Setup your Environment (Mac):\n\n1. Install [Homebrew](http://brew.sh/)\n1. Install [NVM](https://github.com/creationix/nvm) & Redis `brew install nvm redis`\n1. Install Node 6 via NVM: `nvm install 6`\n1. `npm install`\n\n## Setup your Environment (Linux - Debian/Ubuntu):\n\n1. Install Node 6+ via NodeSource (trusted):\n  1. `curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -`\n  1. `sudo apt-get install -y nodejs`\n1. Install Redis locally `sudo apt-get install -y redis-server redis-tools`\nbenefit of letting us use subdomains.\n1. `npm install`\n\n## Running Nylas Mail\n\n1. `npm run client`: Starts the app\n1. `npm run test-client`: Run the tests\n1. `npm run lint-client`: Lint the source (ESLint + Coffeelint + LESSLint)\n\n### Exploring the Source\n\nThis repository contains the full source code to the Nylas Mail client and it's backend services. It is divided into the following packages:\n\n1. [**Isomorphic Core**](https://github.com/nylas/nylas-mail/tree/master/packages/isomorphic-core): Shared code across local client and cloud servers\n1. [**Client App**](https://github.com/nylas/nylas-mail/tree/master/packages/client-app): The main Electron app for Nylas Mail\n   mirrored to open source repo.\n1. [**Client Sync**](https://github.com/nylas/nylas-mail/tree/master/packages/client-sync): The local mailsync engine integreated in Nylas Mail\n1. [**Client Private Plugins**](https://github.com/nylas/nylas-mail/tree/master/packages/client-private-plugins): Private Nylas Mail plugins (like SFDC)\n1. [**Cloud API**](https://github.com/nylas/nylas-mail/tree/master/packages/cloud-api): The cloud-based auth and metadata APIs for N1\n1. [**Cloud Core**](https://github.com/nylas/nylas-mail/tree/master/packages/cloud-core): Shared code used in all remote cloud services\n1. [**Cloud Workers**](https://github.com/nylas/nylas-mail/tree/master/packages/cloud-workers): Cloud workers for services like send later\n\nSee `/packages` for the separate pieces. Each folder in `/packages` is\ndesigned to be its own stand-alone repository. They are all bundled here\nfor the ease of source control management.\n\n## Digging Deeper\n\nIn early 2016, the Nylas Mail team wrote [extensive documentation](https://nylas.github.io/nylas-mail/) for the app that was intended for plugin developers. This documentation lives on GitHub Pages and offers a great overview of the app's architecture and important classes. Here are some good places to get started:\n\n- [Application Architecture](https://nylas.github.io/nylas-mail/guides/Architecture.html)\n- [Debugging Nylas Mail](https://nylas.github.io/nylas-mail/guides/Debugging.html)\n\nThe team has also given conference talks and published blog posts about the client:\n\n- [ReactEurope: How React & Flux Turn Apps Into Extensible Platforms](https://www.youtube.com/watch?v=Uu4Yz2HmCgE)\n- [ForwardJS: Electron, React & Pixel Perfect Experiences](https://www.youtube.com/watch?v=jRPUB-D1Wx0&list=PL7i8CwZBnlf7iUTn2JMVLLWofAhaiK7l3)\n\n- [Blog: Splitting from Atom](https://github.com/nylas/nylas-mail/raw/master/blog-posts/splitting-from-atom.pdf)\n- [Blog: Building Plugins for React Apps](https://github.com/nylas/nylas-mail/raw/master/blog-posts/plugins.pdf)\n- [Blog: Nylas Mail Build Process](https://github.com/nylas/nylas-mail/raw/master/blog-posts/build-process.pdf)\n- [Blog: Low level Electron Debugging](https://github.com/nylas/nylas-mail/raw/master/blog-posts/electron-debugging.pdf)\n- [Blog: A New Search Parser](https://github.com/nylas/nylas-mail/raw/master/blog-posts/search-parser.pdf)\n- [Blog: Developers Guide to Emoji](https://github.com/nylas/nylas-mail/raw/master/blog-posts/emoji.pdf)\n- [Blog: Nylas Pro](https://github.com/nylas/nylas-mail/raw/master/blog-posts/nylas-pro.pdf)\n- [Blog: Nylas Mail & PGP](https://github.com/nylas/nylas-mail/raw/master/blog-posts/pgp.pdf)\n- [Blog: Calendar Events and RRULEs](https://github.com/nylas/nylas-mail/raw/master/blog-posts/rrules.pdf)\n\n## Running the Cloud\n\nWhen you download and build Nylas Mail from source it runs without its cloud components. The concept of a \"Nylas ID\" / subscription has been removed, and plugins that require server-side processing are disabled by default. (Plugins like Snooze, Send Later, etc.)\n\nIn order to use these plugins and get the full Nylas Mail experience, you need to deploy the backend infrastructure located in the `cloud-*` packages. Deploying these services is challenging because they are implemented as microservices and designed to be run at enterprise scale with Redis, Postgres, etc. Because these backend services must access your email account, it is also important to use security best-practices (at the very least, SSL, encryption at rest, and a partitioned VPC). For more information about building and deploying this part of the stack, check out the [cloud-core README](https://github.com/nylas/nylas-mail/blob/master/packages/cloud-core/README.md).\n\n## Themes\n\nThe Nylas Mail user interface is styled using CSS, which means it's easy to modify and extend. Nylas Mail comes stock with a few beautiful themes, and there are many more which have been built by community developers\n\n![N1 Themes](https://github.com/nylas/nylas-mail/raw/master/screenshot/687474703a2f2f692e696d6775722e636f6d2f505751374e6c592e6a7067.jpg)\n\n#### Bundled Themes\n- [Dark](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/ui-dark)\n- [Darkside](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/ui-darkside) (designed by [Jamie Wilson](https://github.com/jamiewilson))\n- [Taiga](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/ui-taiga) (designed by [Noah Buscher](https://github.com/noahbuscher))\n- [Ubuntu](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/ui-ubuntu) (designed by [Ahmed Elhanafy](https://github.com/ahmedlhanafy))\n- [Less Is More](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/ui-less-is-more) (designed by [Alexander Adkins](https://github.com/P0WW0W))\n\n#### Community Themes\n|       |       |       |\n| ----- | ----- | ----- |\n| [ToogaBooga](https://github.com/brycedorn/N1-ToogaBooga) | [Material](https://github.com/jackiehluo/n1-material) | [Monokai](https://github.com/dcondrey/n1-monokai)  |\n| [Agapanthus](https://github.com/taniadaniela/n1-agapanthus)—Inbox-inspired theme | [Stripe](https://github.com/oeaeee/n1-stripe)| [Kleinstein](https://github.com/diklein/Kleinstein)—Hides account sidebar|\n| [Arc Dark](https://github.com/varlesh/Nylas-Arc-Dark-Theme)| [Solarized Dark](https://github.com/NSHenry/N1-Solarized-Dark) | [Darkish](https://github.com/dyrnade/N1-Darkish)|\n| [Predawn](https://github.com/adambmedia/N1-Predawn)| [Ido](https://github.com/edipox/n1-ido)—Polymail-inspired theme|[Berend](https://github.com/Frique/N1-Berend) |\n| [ElementaryOS](https://github.com/edipox/elementary-nylas) | [LevelUp](https://github.com/stolinski/level-up-nylas-n1-theme)|[Sunrise](https://github.com/jackiehluo/n1-sunrise) |\n| [BoraBora](https://github.com/arimai/N1-BoraBora) | [Honeyduke](https://github.com/arimai/n1-honeyduke)| [Snow](https://github.com/Wattenberger/N1-snow-theme)|\n|[Hull](https://github.com/unity/n1-hull)|[Express](https://github.com/oeaeee/n1-express)|[DarkSoda](https://github.com/adambullmer/N1-theme-DarkSoda)|\n|[Bemind](https://github.com/bemindinteractive/Bemind-N1-Theme)|[Dracula](https://github.com/dracula/nylas-n1)|[MouseEatsCat](https://github.com/MouseEatsCat/MouseEatsCat-N1)|\n|[Sublime Dark](https://github.com/rishabhkesarwani/Nylas-Sublime-Dark-Theme)|[Firefox](https://github.com/darshandsoni/n1-firefox-theme)|[Gmail](https://github.com/dregitsky/n1-gmail-theme)|\n\n#### To install community themes:\n\n1. Download and unzip the repo\n2. In Nylas Mail, select `Developer > Install a Package Manually... `\n3. Navigate to where you downloaded the theme and select the root folder. The theme is copied into the `~/.nylas-mail` folder for your convinence\n5. Select `Change Theme...` from the top level menu, and you'll see the newly installed theme. That's it!\n\nWant to dive in more? Try [creating your own theme](https://github.com/nylas/nylas-mail-theme-starter)!\n\n## Plugins\n\nSome plugins come pre-installed, and are a great starting points for creating your own:\n\n- [Translate](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/composer-translate)—Works with 10 languages\n- [Quick Replies](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/composer-templates)—Send emails faster with templates\n- [Emoji Keyboard](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/composer-emoji)—Insert emoji by typing a colon (:) followed by the name of an emoji symbol\n- [GitHub Sidebar Info](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/github-contact-card)\n- [View on GitHub](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/message-view-on-github)\n- [Personal Level Indicators](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/personal-level-indicators)\n- [Phishing Detection](https://github.com/nylas/nylas-mail/tree/master/packages/client-app/internal_packages/phishing-detection)\n\n#### Community Plugins\n\nNote these are not tested or officially supported by Nylas, but we still think they are really cool! If you find bugs with them, please open GitHub issues on their individual project pages, not the Nylas Mail (N1) repo page. Thanks!\n\n|       |       |       |\n| ----- | ----- | ----- |\n|[Jiffy](http://noahbuscher.github.io/N1-Jiffy/)—Insert animated GIFs|[Weather](https://github.com/jackiehluo/n1-weather)|[Todoist](https://github.com/alexfruehwirth/N1TodoistIntegration)|\n|[Unsubscribe](https://github.com/colinking/n1-unsubscribe)|[Squirt Speed Reader](https://github.com/HarleyKwyn/squirt-reader-N1-plugin/)|[Website Launcher](https://github.com/adriangrantdotorg/nylas-n1-background-webpage)—Opens a URL in separate window|\n|[Cypher](https://github.com/mbilker/cypher)—PGP Encryption|[Avatars](https://github.com/unity/n1-avatars)|[Events Calendar (WIP)](https://github.com/nerdenough/n1-events-calendar)|\n|[Mail in Chat (WIP)](https://github.com/yjchen/mail_in_chat)|[Evernote](https://github.com/grobgl/n1-evernote)|[Wunderlist](https://github.com/miguelrs/n1-wunderlist)|\n|[Participants Display](https://github.com/kbruccoleri/nylas-participants-display)|[GitHub](https://github.com/ForbesLindesay/N1-GitHub)||\n\nWhen you install packages, they're moved to ~/.nylas-mail/packages, and Nylas Mail runs apm install on the command line to fetch dependencies listed in the package's package.json\n\n# Forks\n\nThere are several forks of Nylas Mail that you should check out. If you're just learning about Nylas Mail, it is highly recommended you use one of these instead.\n\n - [Mailspring](http://www.getmailspring.com/) - Significant rewrite by one of the original authors focused on performance and cloud plugins\n - [Nylas Mail Lives](https://github.com/nylas-mail-lives/nylas-mail) - Community effort to fix bugs and improve the client! (Seeking Maintainers)\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.93359375,
          "content": "version: '{build}'\n\nbranches:\n  only:\n  - master\n  - /ci.*/\n  - /stable.*/\n\n# We need to only clone the main module because our submodule requires the\n# encrypted ssh key to access submodules\ninstall:\n- ps: Install-Product node $env:NODE_VERSION\n- ps: nuget install secure-file -ExcludeVersion\n- ps: npm config set msvs_version 2013\n\nbuild_script:\n- cmd: npm install\n\ndeploy_script:\n- ps: |\n    npm run build-client\n\nenvironment:\n  matrix:\n  - NODE_VERSION: 6.9\n  global:\n    DEBUG: \"electron-windows-installer:*,electron-packager:*\"\n    SIGN_BUILD: true\n    INSTALL_TARGET: \"client\"\n    CERTIFICATE_FILE: .\\packages\\client-private-plugins\\encrypted_certificates\\appveyor\\win-nylas-n1.p12\n    DECRYPTION_PASSWORD:\n      secure: 48VSzDtdBd52Xlo3TZ1NeR1yRRrZ3AU6Px5XjD5RDp44cFU5GYVspecGqX6DGCV7i0D7nldGMyEbXNrjM1t1Kw==\n\ncache:\n  - node_modules -> package.json\n  - packages\\client-app\\node_modules -> packages\\client-app\\package.json\n  - '%USERPROFILE%\\.npm'\n"
        },
        {
          "name": "arclib",
          "type": "tree",
          "content": null
        },
        {
          "name": "blog-posts",
          "type": "tree",
          "content": null
        },
        {
          "name": "lerna.json",
          "type": "blob",
          "size": 0.0517578125,
          "content": "{\n  \"lerna\": \"2.0.0-beta.38\",\n  \"version\": \"0.0.1\"\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.9013671875,
          "content": "{\n  \"name\": \"nylas-mail-all\",\n  \"version\": \"0.0.1\",\n  \"description\": \"All components required to run Nylas Mail\",\n  \"devDependencies\": {\n    \"babel-cli\": \"6.x.x\",\n    \"babel-core\": \"6.x.x\",\n    \"babel-eslint\": \"7.1.0\",\n    \"babel-preset-electron\": \"1.4.15\",\n    \"babel-preset-react\": \"6.x.x\",\n    \"chalk\": \"1.x.x\",\n    \"coffeelint-cjsx\": \"2.x.x\",\n    \"commander\": \"^2.9.0\",\n    \"electron-installer-dmg\": \"0.2.x\",\n    \"electron-packager\": \"8.4.x\",\n    \"electron-winstaller\": \"2.x.x\",\n    \"eslint\": \"3.10.1\",\n    \"eslint-config-airbnb\": \"13.0.0\",\n    \"eslint-plugin-import\": \"2.2.0\",\n    \"eslint-plugin-jsx-a11y\": \"2.2.3\",\n    \"eslint-plugin-react\": \"6.7.1\",\n    \"eslint_d\": \"4.2.0\",\n    \"fs-extra\": \"2.x.x\",\n    \"fs-plus\": \"2.x.x\",\n    \"glob\": \"7.x.x\",\n    \"grunt\": \"0.4.x\",\n    \"grunt-cli\": \"0.1.x\",\n    \"grunt-coffeelint\": \"git+https://github.com/atom/grunt-coffeelint.git#cfb99aa99811d52687969532bd5a98011ed95bfe\",\n    \"grunt-coffeelint-cjsx\": \"0.1.x\",\n    \"grunt-contrib-coffee\": \"0.12.x\",\n    \"grunt-contrib-csslint\": \"0.5.x\",\n    \"grunt-contrib-less\": \"0.8.x\",\n    \"grunt-lesslint\": \"0.13.x\",\n    \"jasmine\": \"2.x.x\",\n    \"lerna\": \"emorikawa/lerna#v2.0.0-beta.38.forked\",\n    \"load-grunt-parent-tasks\": \"0.1.1\",\n    \"mkdirp\": \"^0.5.1\",\n    \"pm2\": \"2.4.0\",\n    \"request\": \"2.x.x\",\n    \"s3\": \"4.x.x\",\n    \"temp\": \"0.8.x\",\n    \"underscore\": \"1.8.x\"\n  },\n  \"scripts\": {\n    \"start\": \"npm run client\",\n    \"test\": \"npm run test-client && npm run test-cloud\",\n    \"client\": \"packages/client-app/node_modules/.bin/electron packages/client-app --enable-logging --dev\",\n    \"benchmark\": \"packages/client-app/node_modules/.bin/electron packages/client-app --enable-logging --dev --benchmark\",\n    \"test-client\": \"packages/client-app/node_modules/.bin/electron packages/client-app --enable-logging --test\",\n    \"test-client-window\": \"packages/client-app/node_modules/.bin/electron packages/client-app --enable-logging --test=window\",\n    \"test-client-junit\": \"\",\n    \"lint-client\": \"grunt lint --gruntfile=packages/client-app/build/Gruntfile.js --base=./\",\n    \"build-client\": \"grunt build-client --gruntfile=packages/client-app/build/Gruntfile.js --base=./\",\n    \"cloud\": \"pm2 stop all; pm2 delete all; pm2 start packages/cloud-core/pm2-dev.yml --no-daemon\",\n    \"cloud-debug\": \"pm2 stop all; pm2 delete all; pm2 start packages/cloud-core/pm2-debug-cloud-api.yml --no-daemon\",\n    \"test-cloud\": \"cd packages/cloud-api && npm test && cd ../cloud-core && npm test && cd ../cloud-workers && npm test && cd ../isomorphic-core && npm test\",\n    \"stop\": \"npm run stop-cloud\",\n    \"stop-cloud\": \"pm2 stop all; pm2 delete all;\",\n    \"build-cloud\": \"docker build .\",\n    \"postinstall\": \"babel-node scripts/postinstall.es6\",\n    \"daily\": \"babel-node scripts/daily.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/nylas/nylas-mail-all.git\"\n  },\n  \"author\": \"Nylas\",\n  \"license\": \"proprietary\",\n  \"engines\": {\n    \"node\": \"6.9.1\",\n    \"npm\": \"3.10.8\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}