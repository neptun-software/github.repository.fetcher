{
  "metadata": {
    "timestamp": 1736563108783,
    "page": 21,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jaredhanson/passport",
      "stars": 23091,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0732421875,
          "content": "docs/\nreports/\n\n# Mac OS X\n.DS_Store\n\n# Node.js\nnode_modules\nnpm-debug.log\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.2919921875,
          "content": "{\n  \"node\": true,\n  \"bitwise\": true,\n  \"camelcase\": true,\n  \"curly\": true,\n  \"forin\": true,\n  \"immed\": true,\n  \"latedef\": true,\n  \"newcap\": true,\n  \"noarg\": true,\n  \"noempty\": true,\n  \"nonew\": true,\n  \"quotmark\": \"single\",\n  \"undef\": true,\n  \"unused\": true,\n  \"trailing\": true,\n  \"laxcomma\": true\n}\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.09765625,
          "content": "CONTRIBUTING.md\nMakefile\nSPONSORS.md\ndocs/\nexamples/\nreports/\ntest/\n\n.github/\n.jshintrc\n.travis.yml\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3447265625,
          "content": "language: \"node_js\"\nnode_js:\n  - \"13\"\n  - \"12\"\n  - \"11\"\n  - \"10\"\n  - \"9\"\n  - \"8\"\n  - \"7\"\n  - \"6\"\n  - \"5\"\n  - \"4\"\n  - \"3\" # io.js\n  - \"2\" # io.js\n  - \"1\" # io.js\n  - \"0.12\"\n  - \"0.10\"\n#  - \"0.8\"\n\n\nbefore_install:\n  - \"npm install make-node@0.3.x -g\"\n  - \"preinstall-compat\"\n\nscript:\n  - \"make test-cov\"\n\nafter_success:\n  - \"make report-cov\"\n\nsudo: false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.919921875,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [0.7.0] - 2023-11-27\n### Changed\n- Set `req.authInfo` by default when using the `assignProperty` option to\n`authenticate()` middleware.  This makes the behavior the same as when not using\nthe option, and can be disabled by setting `authInfo` option to `false`.\n\n## [0.6.0] - 2022-05-20\n### Added\n- `authenticate()`, `req#login`, and `req#logout` accept a\n`keepSessionInfo: true` option to keep session information after regenerating\nthe session.\n\n### Changed\n\n- `req#login()` and `req#logout()` regenerate the the session and clear session\ninformation by default.\n- `req#logout()` is now an asynchronous function and requires a callback\nfunction as the last argument.\n\n### Security\n\n- Improved robustness against session fixation attacks in cases where there is\nphysical access to the same system or the application is susceptible to\ncross-site scripting (XSS).\n\n## [0.5.3] - 2022-05-16\n### Fixed\n\n- `initialize()` middleware extends request with `login()`, `logIn()`,\n`logout()`, `logOut()`, `isAuthenticated()`, and `isUnauthenticated()` functions\nagain, reverting change from 0.5.1.\n\n## [0.5.2] - 2021-12-16\n### Fixed\n- Introduced a compatibility layer for strategies that depend directly on\n`passport@0.4.x` or earlier (such as `passport-azure-ad`), which were\nbroken by the removal of private variables in `passport@0.5.1`.\n\n## [0.5.1] - 2021-12-15\n### Added\n- Informative error message in session strategy if session support is not\navailable.\n\n### Changed\n\n- `authenticate()` middleware, rather than `initialize()` middleware, extends\nrequest with `login()`, `logIn()`, `logout()`, `logOut()`, `isAuthenticated()`,\nand `isUnauthenticated()` functions.\n\n## [0.5.0] - 2021-09-23\n### Changed\n\n- `initialize()` middleware extends request with `login()`, `logIn()`,\n`logout()`, `logOut()`, `isAuthenticated()`, and `isUnauthenticated()`\nfunctions.\n\n### Removed\n\n- `login()`, `logIn()`, `logout()`, `logOut()`, `isAuthenticated()`, and\n`isUnauthenticated()` functions no longer added to `http.IncomingMessage.prototype`.\n\n### Fixed\n\n- `userProperty` option to `initialize()` middleware only affects the current\nrequest, rather than all requests processed via singleton Passport instance,\neliminating a race condition in situations where `initialize()` middleware is\nused multiple times in an application with `userProperty` set to different\nvalues.\n\n[Unreleased]: https://github.com/jaredhanson/passport/compare/v0.6.0...HEAD\n[0.6.0]: https://github.com/jaredhanson/passport/compare/v0.5.3...v0.6.0\n[0.5.3]: https://github.com/jaredhanson/passport/compare/v0.5.2...v0.5.3\n[0.5.2]: https://github.com/jaredhanson/passport/compare/v0.5.1...v0.5.2\n[0.5.1]: https://github.com/jaredhanson/passport/compare/v0.5.0...v0.5.1\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.4013671875,
          "content": "## Contributing\n\n### Tests\n\nThe test suite is located in the `test/` directory.  All new features are\nexpected to have corresponding test cases with complete code coverage.  Patches\nthat increase test coverage are happily accepted.\n\nEnsure that the test suite passes by executing:\n\n```bash\n$ make test\n```\n\nCoverage reports can be generated and viewed by executing:\n\n```bash\n$ make test-cov\n$ make view-cov\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2011-2021 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.44921875,
          "content": "include node_modules/make-node/main.mk\n\n\nSOURCES = lib/*.js lib/**/*.js\nTESTS = test/*.test.js test/**/*.test.js\n\nLCOVFILE = ./reports/coverage/lcov.info\n\nMOCHAFLAGS = --require ./test/bootstrap/node\n\n\nview-docs:\n\topen ./docs/index.html\n\nview-cov:\n\topen ./reports/coverage/lcov-report/index.html\n\nclean: clean-docs clean-cov\n\t-rm -r $(REPORTSDIR)\n\nclobber: clean\n\t-rm -r node_modules\n\nhtml:\n\tjsdoc -c etc/jsdoc.json -d ./doc $(SOURCES)\n\n\n.PHONY: clean clobber\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.328125,
          "content": "[![passport banner](http://cdn.auth0.com/img/passport-banner-github.png)](http://passportjs.org)\n\n# Passport\n\nPassport is [Express](http://expressjs.com/)-compatible authentication\nmiddleware for [Node.js](http://nodejs.org/).\n\nPassport's sole purpose is to authenticate requests, which it does through an\nextensible set of plugins known as _strategies_.  Passport does not mount\nroutes or assume any particular database schema, which maximizes flexibility and\nallows application-level decisions to be made by the developer.  The API is\nsimple: you provide Passport a request to authenticate, and Passport provides\nhooks for controlling what occurs when authentication succeeds or fails.\n\n---\n\n<div align=\"center\">\n  <sup>Sponsors</sup>\n  <br>\n  <!-- Auth0 -->\n  <div>\n    <a href=\"https://auth0.com/\">\n      <picture>\n        <source srcset=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/auth0.png\" media=\"(prefers-color-scheme: light)\">\n        <source srcset=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/auth0-dark.png\" media=\"(prefers-color-scheme: dark)\">\n        <img src=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/auth0.svg\" width=\"275\">\n      </picture>\n      <p>\n        <b>Simple Authentication</b>\n        <br>\n        Make login our problem. Not yours.\n      </p>\n    </a>\n    <p>Auth0 by Okta provides a simple and customizable login page to authenticate your users. You can dynamically add new capabilities to it - including social login, multi-factor authentication, or passkeys - without making changes to your appâ€™s code.</p>\n    <p>We help protect your app and your users from attacks - defending your application from bot attacks and detecting runtime anomalies based on suspicious IPs, breached credentials, user context, and more.</p>\n  </div>\n  <br>\n  <!-- WorkOS -->\n  <div>\n    <a href=\"https://workos.com/?utm_campaign=github_repo&utm_medium=referral&utm_content=passport_js&utm_source=github\">\n      <img src=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/workos.png\">\n      <p>\n        <b>Your app, enterprise-ready.</b>\n        <br>\n        Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months.\n      </p>\n    </a>\n  </div>\n  <br>\n  <!-- Descope -->\n  <div>\n    <a href=\"https://www.descope.com/?utm_source=PassportJS&utm_medium=referral&utm_campaign=oss-sponsorship\">\n      <picture>\n        <source srcset=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/descope.svg\" media=\"(prefers-color-scheme: light)\">\n        <source srcset=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/descope-dark.svg\" media=\"(prefers-color-scheme: dark)\">\n        <img src=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/descope.svg\" width=\"275\">\n      </picture>\n      <p>\n        <b>Drag and drop your auth</b>\n        <br>\n        Add authentication and user management to your consumer and business apps with a few lines of code.\n      </p>\n    </a>\n  </div>\n  <br>\n  <!-- FusionAuth -->\n  <div>\n    <a href=\"https://fusionauth.io/?utm_source=passportjs&utm_medium=referral&utm_campaign=sponsorship\">\n      <img src=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/fusionauth.png\" width=\"275\">\n      <p>\n        <b>Auth. Built for Devs, by Devs</b>\n        <br>\n        Add login, registration, SSO, MFA, and a bazillion other features to your app in minutes. Integrates with any codebase and installs on any server, anywhere in the world.\n      </p>\n    </a>\n  </div>\n  <br>\n  <!-- Stytch -->\n  <div>\n    <a href=\"https://stytch.com?utm_source=oss-sponsorship&utm_medium=paid_sponsorship&utm_campaign=passportjs\">\n      <picture>\n        <source srcset=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/stytch.png\" media=\"(prefers-color-scheme: light)\">\n        <source srcset=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/stytch-dark.png\" media=\"(prefers-color-scheme: dark)\">\n        <img src=\"https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/stytch.png\" width=\"275\">\n      </picture>\n      <p>\n        <b>API-first AuthN, AuthZ, and Fraud Prevention</b>\n        <br>\n        The most powerful identity platform built for developers. Easily build and secure a modern auth flow with user & org management, multi-tenant SSO, MFA, RBAC, device fingerprinting, and more.\n      </p>\n    </a>\n  </div>\n</div>\n\n---\n\nStatus:\n[![Build](https://travis-ci.org/jaredhanson/passport.svg?branch=master)](https://travis-ci.org/jaredhanson/passport)\n[![Coverage](https://coveralls.io/repos/jaredhanson/passport/badge.svg?branch=master)](https://coveralls.io/r/jaredhanson/passport)\n[![Dependencies](https://david-dm.org/jaredhanson/passport.svg)](https://david-dm.org/jaredhanson/passport)\n\n\n## Install\n\n```\n$ npm install passport\n```\n\n## Usage\n\n#### Strategies\n\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using [OAuth](http://oauth.net/) (for example, via [Facebook](http://www.facebook.com/)\nor [Twitter](http://twitter.com/)), or federated authentication using [OpenID](http://openid.net/).\n\nBefore authenticating requests, the strategy (or strategies) used by an\napplication must be configured.\n\n```javascript\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    User.findOne({ username: username }, function (err, user) {\n      if (err) { return done(err); }\n      if (!user) { return done(null, false); }\n      if (!user.verifyPassword(password)) { return done(null, false); }\n      return done(null, user);\n    });\n  }\n));\n```\n\nThere are 480+ strategies. Find the ones you want at: [passportjs.org](http://passportjs.org)\n\n#### Sessions\n\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\n\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide functions to Passport which implements the necessary\nserialization and deserialization logic.  In a typical application, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\n\n```javascript\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  User.findById(id, function (err, user) {\n    done(err, user);\n  });\n});\n```\n\n#### Middleware\n\nTo use Passport in an [Express](http://expressjs.com/) or\n[Connect](http://senchalabs.github.com/connect/)-based application, configure it\nwith the required `passport.initialize()` middleware.  If your application uses\npersistent login sessions (recommended, but not required), `passport.session()`\nmiddleware must also be used.\n\n```javascript\nvar app = express();\napp.use(require('serve-static')(__dirname + '/../../public'));\napp.use(require('cookie-parser')());\napp.use(require('body-parser').urlencoded({ extended: true }));\napp.use(require('express-session')({ secret: 'keyboard cat', resave: true, saveUninitialized: true }));\napp.use(passport.initialize());\napp.use(passport.session());\n```\n\n#### Authenticate Requests\n\nPassport provides an `authenticate()` function, which is used as route\nmiddleware to authenticate requests.\n\n```javascript\napp.post('/login', \n  passport.authenticate('local', { failureRedirect: '/login' }),\n  function(req, res) {\n    res.redirect('/');\n  });\n```\n\n## Strategies\n\nPassport has a comprehensive set of **over 480** authentication strategies\ncovering social networking, enterprise integration, API services, and more.\n\n## Search all strategies\n\nThere is a **Strategy Search** at [passportjs.org](http://passportjs.org)\n\nThe following table lists commonly used strategies:\n\n|Strategy                                                       | Protocol                 |Developer                                       |\n|---------------------------------------------------------------|--------------------------|------------------------------------------------|\n|[Local](https://github.com/jaredhanson/passport-local)         | HTML form                |[Jared Hanson](https://github.com/jaredhanson)  |\n|[OpenID](https://github.com/jaredhanson/passport-openid)       | OpenID                   |[Jared Hanson](https://github.com/jaredhanson)  |\n|[BrowserID](https://github.com/jaredhanson/passport-browserid) | BrowserID                |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Facebook](https://github.com/jaredhanson/passport-facebook)   | OAuth 2.0                |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Google](https://github.com/jaredhanson/passport-google)       | OpenID                   |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Google](https://github.com/jaredhanson/passport-google-oauth) | OAuth / OAuth 2.0        |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Twitter](https://github.com/jaredhanson/passport-twitter)     | OAuth                    |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Azure Active Directory](https://github.com/AzureAD/passport-azure-ad)     | OAuth 2.0 / OpenID / SAML  |[Azure](https://github.com/azuread)  |\n\n## Examples\n\n- For a complete, working example, refer to the [example](https://github.com/passport/express-4.x-local-example)\nthat uses [passport-local](https://github.com/jaredhanson/passport-local).\n- **Local Strategy**: Refer to the following tutorials for setting up user authentication via LocalStrategy (`passport-local`):\n    - Mongo\n      - Express v3x - [Tutorial](http://mherman.org/blog/2016/09/25/node-passport-and-postgres/#.V-govpMrJE5) / [working example](https://github.com/mjhea0/passport-local-knex)\n      - Express v4x - [Tutorial](http://mherman.org/blog/2015/01/31/local-authentication-with-passport-and-express-4/) / [working example](https://github.com/mjhea0/passport-local-express4)\n    - Postgres\n      - [Tutorial](http://mherman.org/blog/2015/01/31/local-authentication-with-passport-and-express-4/) / [working example](https://github.com/mjhea0/passport-local-express4)\n- **Social Authentication**: Refer to the following tutorials for setting up various social authentication strategies:\n    - Express v3x - [Tutorial](http://mherman.org/blog/2013/11/10/social-authentication-with-passport-dot-js/) / [working example](https://github.com/mjhea0/passport-examples)\n    - Express v4x - [Tutorial](http://mherman.org/blog/2015/09/26/social-authentication-in-node-dot-js-with-passport) / [working example](https://github.com/mjhea0/passport-social-auth)\n\n## Related Modules\n\n- [Locomotive](https://github.com/jaredhanson/locomotive) â€” Powerful MVC web framework\n- [OAuthorize](https://github.com/jaredhanson/oauthorize) â€” OAuth service provider toolkit\n- [OAuth2orize](https://github.com/jaredhanson/oauth2orize) â€” OAuth 2.0 authorization server toolkit\n- [connect-ensure-login](https://github.com/jaredhanson/connect-ensure-login)  â€” middleware to ensure login sessions\n\nThe [modules](https://github.com/jaredhanson/passport/wiki/Modules) page on the\n[wiki](https://github.com/jaredhanson/passport/wiki) lists other useful modules\nthat build upon or integrate with Passport.\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2021 Jared Hanson <[https://www.jaredhanson.me/](https://www.jaredhanson.me/)>\n"
        },
        {
          "name": "SPONSORS.md",
          "type": "blob",
          "size": 0.4833984375,
          "content": "## Gold Sponsors\n\n[![WorkOS](https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/workos.png)](https://workos.com/)\n<br>\n[![Snyk](https://raw.githubusercontent.com/jaredhanson/passport/master/sponsors/snyk.png)](https://snyk.io/)\n\n## Sponsors\n\n- [CodePilot.ai](https://codepilot.ai/)\n- [Jeremy Combs](https://github.com/jmcombs)\n- [Gadget](https://gadget.dev/)\n- Kelly Burke\n- [Matt Miller](https://mmiller.me/)\n\n## Past Sponsors\n\n- [LoginRadius](https://www.loginradius.com/)\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.2568359375,
          "content": "{\n  \"name\": \"passport\",\n  \"version\": \"0.7.0\",\n  \"description\": \"Simple, unobtrusive authentication for Node.js.\",\n  \"keywords\": [\n    \"express\",\n    \"connect\",\n    \"auth\",\n    \"authn\",\n    \"authentication\"\n  ],\n  \"author\": {\n    \"name\": \"Jared Hanson\",\n    \"email\": \"jaredhanson@gmail.com\",\n    \"url\": \"https://www.jaredhanson.me/\"\n  },\n  \"homepage\": \"https://www.passportjs.org/\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/jaredhanson/passport.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/jaredhanson/passport/issues\"\n  },\n  \"funding\": {\n    \"type\": \"github\",\n    \"url\": \"https://github.com/sponsors/jaredhanson\"\n  },\n  \"license\": \"MIT\",\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"https://opensource.org/licenses/MIT\"\n    }\n  ],\n  \"main\": \"./lib\",\n  \"dependencies\": {\n    \"passport-strategy\": \"1.x.x\",\n    \"pause\": \"0.0.1\",\n    \"utils-merge\": \"^1.0.1\"\n  },\n  \"devDependencies\": {\n    \"make-node\": \"0.3.x\",\n    \"mocha\": \"2.x.x\",\n    \"chai\": \"2.x.x\",\n    \"chai-connect-middleware\": \"0.3.x\",\n    \"chai-passport-strategy\": \"0.2.x\",\n    \"proxyquire\": \"1.4.x\"\n  },\n  \"engines\": {\n    \"node\": \">= 0.4.0\"\n  },\n  \"scripts\": {\n    \"test\": \"node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js test/**/*.test.js\"\n  }\n}\n"
        },
        {
          "name": "sponsors",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}