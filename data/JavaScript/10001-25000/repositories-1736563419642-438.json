{
  "metadata": {
    "timestamp": 1736563419642,
    "page": 438,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PatrickJS/PatrickJS-starter",
      "stars": 10318,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.341796875,
          "content": ".git\n.github\n.vscode\ncoverage\n\n# OS generated files #\n.DS_Store\nehthumbs.db\nIcon?\nThumbs.db\n\n# Node Files #\nnode_modules\nnpm-debug.log\nnpm-debug.log.*\n\n# Typing #\nsrc/typings/tsd\ntypings\ntsd_typings\n\n# Dist #\ndist\n.awcache\n.webpack.json\ncompiled\ndll\n\n# IDE #\n.idea\n*.swp\n\n\n# Angular #\n*.ngfactory.ts\n*.css.shim.ts\n*.ngsummary.json\n*.shim.ngstyle.ts\n\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.248046875,
          "content": "# tipe.io\n# http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ninsert_final_newline = false\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.015625,
          "content": "yarn.lock -diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.00390625,
          "content": "# tipe.io\n\n# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# SonarQube sonar-scanner temp directory\n.scannerwork\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Users Environment Variables\n.lock-wscript\n\n# OS generated files #\n.DS_Store\nehthumbs.db\nIcon?\nThumbs.db\n\n# Node Files #\n/node_modules/\n/bower_components/\nnpm-debug.log\n/npm-debug.log.*\n\n# Coverage #\n/coverage/\n\n# Generic Unit Sonar Reports #\n/reports/\n\n# Typing #\n/src/typings/tsd/\n/typings/\n/tsd_typings/\n\n# Dist #\n/dist\n/public/__build__/\n/src/*/__build__/\n/__build__/**\n/public/dist/\n/src/*/dist/\n/dist/**\n/.awcache\n.webpack.json\n/compiled/\ndll/\ntemp\ntmp\nwebpack-cache\n\n# Doc #\n/doc/\n/documentation/\n\n# IDE #\n.idea/\n*.swp\n\n\n# Angular #\n*.ngfactory.ts\n*.css.shim.ts\n*.ngsummary.json\n*.shim.ngstyle.ts\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.005859375,
          "content": "lts/*\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3154296875,
          "content": "sudo: false\ndist: trusty\nlanguage: node_js\n\ncache:\n  directories:\n    - node_modules\n\naddons:\n  chrome: stable\n\nnode_js:\n  - \"6\"\n  - \"7\"\n  - \"8\"\n\nmatrix:\n  fast_finish: true\n\nbefore_install:\n  - npm install npm@5 -g\n  - npm cache verify\n  - npm prune\n  - npm update\n\ninstall:\n  - npm install\n\nscript:\n  - npm run ci:travis\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.1318359375,
          "content": "# Usage:\n#\n#    Build image:\n#    docker build -t angular-starter .\n#\n#    Run image (on localhost:8080):\n#    docker run --name angular-starter -p 8080:80 angular-starter\n#\n#    Run image as virtual host (read more: https://github.com/jwilder/nginx-proxy):\n#    docker run -e VIRTUAL_HOST=angular-starter.your-domain.com --name angular-starter angular-starter\n\n# Stage 1, based on Node.js, to build and compile Angular\n\nFROM node:8.9.4-alpine as builder\n\nCOPY package.json ./\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN npm i && mkdir /ng-app && mv ./node_modules ./ng-app\n\nWORKDIR /ng-app\n\nCOPY . .\n\nRUN npm run build:aot:prod\n\n# Stage 2, based on Nginx, to have only the compiled app, ready for production with Nginx\n\nFROM nginx:1.13.9-alpine\n\nCOPY ./config/nginx-custom.conf /etc/nginx/conf.d/default.conf\n                                  \n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/dist /usr/share/nginx/html\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
        },
        {
          "name": "Dockerfile-dev",
          "type": "blob",
          "size": 0.5849609375,
          "content": "# Usage:\n#\n#    Build image:\n#    docker build -t angular-starter .\n#\n#    Run image (on localhost:8080):\n#    docker run --name angular-starter -p 8080:80 angular-starter\n#\n#    Run image as virtual host (read more: https://github.com/jwilder/nginx-proxy):\n#    docker run -e VIRTUAL_HOST=angular-starter.your-domain.com --name angular-starter angular-starter\n\nFROM node:8.9.4-alpine as builder\n\nCOPY package.json ./\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN npm i && mkdir /ng-app && mv ./node_modules ./ng-app\n\nWORKDIR /ng-app\n\nCOPY . .\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0654296875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015-2018 PatrickJS, Tipe Inc\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 23.931640625,
          "content": "# Please use the Angular CLI if you want an angular app\n\n[![taylor swift](https://img.shields.io/badge/secured%20by-taylor%20swift-brightgreen.svg)](https://twitter.com/SwiftOnSecurity)\n[![volkswagen status](https://auchenberg.github.io/volkswagen/volkswargen_ci.svg?v=1)](https://github.com/auchenberg/volkswagen)\n[![Build Status](https://travis-ci.org/gdi2290/angular-starter.svg?branch=master)](https://travis-ci.org/gdi2290/angular-starter)\n[![GitHub version](https://badge.fury.io/gh/gdi2290%2Fangular-starter.svg)](https://badge.fury.io/gh/gdi2290%2Fangular-starter)\n[![Dependency Status](https://david-dm.org/gdi2290/angular-starter.svg)](https://david-dm.org/gdi2290/angular-starter)\n[![Stack Share](http://img.shields.io/badge/tech-stack-0690fa.svg?style=flat)](http://stackshare.io/gdi2290/angular-starter)\n\n<p align=\"center\">\n  <a href=\"https://patrickjs.com\" target=\"_blank\">\n    <img src=\"https://cloud.githubusercontent.com/assets/1016365/26219144/aa986cfa-3bdb-11e7-9f04-7296dc9ae945.png\" alt=\"Angular Starter\" />\n  </a>\n</p>\n\n# Angular Webpack Starter [![Join the chat at https://gitter.im/angularclass/angular2-webpack-starter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angularclass/angular2-webpack-starter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\n> An Angular starter kit featuring [Angular 6](https://angular.io), [Ahead of Time Compile](https://angular.io/docs/ts/latest/cookbook/aot-compiler.html), [Router](https://angular.io/docs/ts/latest/guide/router.html), [Forms](https://angular.io/docs/ts/latest/guide/forms.html),\n[Http](https://angular.io/docs/ts/latest/guide/server-communication.html),\n[Services](https://gist.github.com/gdi2290/634101fec1671ee12b3e#_follow_@AngularClass_on_twitter),\n[Tests](https://angular.io/docs/ts/latest/guide/testing.html), [E2E](https://angular.github.io/protractor/#/faq#what-s-the-difference-between-karma-and-protractor-when-do-i-use-which-)), [Karma](https://karma-runner.github.io/), [Protractor](https://angular.github.io/protractor/), [Jasmine](https://github.com/jasmine/jasmine), [Istanbul](https://github.com/gotwarlost/istanbul), [TypeScript](http://www.typescriptlang.org/), [@types](https://www.npmjs.com/~types), [TsLint](http://palantir.github.io/tslint/), [Codelyzer](https://github.com/mgechev/codelyzer), [Hot Module Replacement](https://webpack.github.io/docs/hot-module-replacement-with-webpack.html), and [Webpack](http://webpack.github.io/).\n\n> If you're looking for Angular 1.x please use [NG6-starter](https://github.com/gdi2290/NG6-starter)\n> If you're looking to learn about Webpack and ES6 Build Tools check out [ES6-build-tools](https://github.com/AngularClass/ES6-build-tools)\n> If you're looking to learn TypeScript see [TypeStrong/learn-typescript](https://github.com/TypeStrong/learn-typescript)\n> If you're looking for something easier to get started with then see the angular-seed that I also maintain [gdi2290/angular-seed](https://github.com/gdi2290/angular-seed)\n\nThis seed repo serves as an Angular starter for anyone looking to get up and running with Angular and TypeScript fast. Using a [Webpack 4](https://webpack.js.org) for building our files and assisting with boilerplate. We're also using Protractor for our end-to-end story and Karma for our unit tests.\n* Best practices in file and application organization for Angular.\n* Ready to go build system using Webpack for working with TypeScript.\n* Angular examples that are ready to go when experimenting with Angular.\n* A great Angular seed repo for anyone who wants to start their project.\n* Ahead of Time (AoT) compile for rapid page loads of your production builds.\n* Tree shaking to automatically remove unused code from your production bundle.\n* Testing Angular code with Jasmine and Karma.\n* Coverage with Istanbul and Karma\n* End-to-end Angular app testing using Protractor.\n* Type manager with @types\n* Hot Module Replacement with Webpack and [@gdi2290/hmr](https://github.com/gdi2290/angular-hmr) and [@gdi2290/hmr-loader](https://github.com/PatrickJS/angular-hmr-loader)\n\n### Quick start\n**Make sure you have Node version >= 8.0 and (NPM >= 5 or [Yarn](https://yarnpkg.com) )**\n> Clone/Download the repo then edit `app.component.ts` inside [`/src/app/app.component.ts`](/src/app/app.component.ts)\n\n```bash\n# clone our repo\n# --depth 1 removes all but one .git commit history\ngit clone --depth 1 https://github.com/gdi2290/angular-starter.git\n\n# change directory to our repo\ncd angular-starter\n\n# install the repo with npm\nnpm install\n\n# start the server\nnpm start\n\n# use Hot Module Replacement\nnpm run server:dev:hmr\n\n# if you're in China use cnpm\n# https://github.com/cnpm/cnpm\n```\ngo to [http://0.0.0.0:3000](http://0.0.0.0:3000) or [http://localhost:3000](http://localhost:3000) in your browser\n\n# Table of Contents\n* [File Structure](#file-structure)\n* [Getting Started](#getting-started)\n    * [Dependencies](#dependencies)\n    * [Installing](#installing)\n    * [Running the app](#running-the-app)\n* [Configuration](#configuration)\n* [AoT Don'ts](#aot-donts)\n* [External Stylesheets](#external-stylesheets)\n* [Contributing](#contributing)\n* [TypeScript](#typescript)\n* [@Types](#types)\n* [Frequently asked questions](#frequently-asked-questions)\n* [Support, Questions, or Feedback](#support-questions-or-feedback)\n* [Deployment](#deployment)\n* [License](#license)\n\n\n## File Structure\nWe use the component approach in our starter. This is the new standard for developing Angular apps and a great way to ensure maintainable code by encapsulation of our behavior logic. A component is basically a self contained app usually in a single file or a folder with each concern as a file: style, template, specs, e2e, and component class. Here's how it looks:\n```\nangular-starter/\n ├──config/                        * our configuration\n |   ├──build-utils.js             * common config and shared functions for prod and dev\n |   ├──config.common.json         * config for both environments prod and dev such title and description of index.html\n |   ├──config.dev.json            * config for development environment\n |   ├──config.prod.json           * config for production environment \n │   │                              (note: you can load your own config file, just set the evn ANGULAR_CONF_FILE with the path of your own file)\n |   ├──helpers.js                 * helper functions for our configuration files\n |   ├──spec-bundle.js             * ignore this magic that sets up our Angular testing environment\n |   ├──karma.conf.js              * karma config for our unit tests\n |   ├──protractor.conf.js         * protractor config for our end-to-end tests\n │   ├──webpack.common.js          * common tasks for webpack build process shared for dev and prod\n │   ├──webpack.dev.js             * our development webpack config\n │   ├──webpack.prod.js            * our production webpack config\n │   └──webpack.test.js            * our testing webpack config\n │\n ├──src/                           * our source files that will be compiled to javascript\n |   ├──main.browser.ts            * our entry file for our browser environment\n │   │\n |   ├──index.html                 * Index.html: where we generate our index page\n │   │\n |   ├──polyfills.ts               * our polyfills file\n │   │\n │   ├──app/                       * WebApp: folder\n │   │   ├──app.component.spec.ts  * a simple test of components in app.component.ts\n │   │   ├──app.e2e.ts             * a simple end-to-end test for /\n │   │   └──app.component.ts       * a simple version of our App component components\n │   │\n │   └──assets/                    * static assets are served here\n │       ├──icon/                  * our list of icons from www.favicon-generator.org\n │       ├──service-worker.js      * ignore this. Web App service worker that's not complete yet\n │       ├──robots.txt             * for search engines to crawl your website\n │       └──humans.txt             * for humans to know who the developers are\n │\n │\n ├──tslint.json                    * typescript lint config\n ├──typedoc.json                   * typescript documentation generator\n ├──tsconfig.json                  * typescript config used outside webpack\n ├──tsconfig.webpack.json          * config that webpack uses for typescript\n ├──package.json                   * what npm uses to manage its dependencies\n └──webpack.config.js              * webpack main configuration file\n\n```\n\n# Getting Started\n## Dependencies\nWhat you need to run this app:\n* `node` and `npm` (`brew install node`)\n* Ensure you're running the latest versions Node `v8.x.x`+ (or `v9.x.x`) and NPM `5.x.x`+\n\n> If you have `nvm` installed, which is highly recommended (`brew install nvm`) you can do a `nvm install --lts && nvm use` in `$` to run with the latest Node LTS. You can also have this `zsh` done for you [automatically](https://github.com/creationix/nvm#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file)\n\nOnce you have those, you should install these globals with `npm install --global`:\n* `webpack` (`npm install --global webpack`)\n* `webpack-dev-server` (`npm install --global webpack-dev-server`)\n* `karma` (`npm install --global karma-cli`)\n* `protractor` (`npm install --global protractor`)\n* `typescript` (`npm install --global typescript`)\n* `tslint` (`npm install --global tslint@4.5.1`)\n\n## Installing\n* `fork` this repo\n* `clone` your fork\n* `npm install webpack-dev-server rimraf webpack -g` to install required global dependencies\n* `npm install` to install all dependencies or `yarn`\n* `npm run server` to start the dev server in another tab\n\n## Running the app\nAfter you have installed all dependencies you can now run the app. Run `npm run server` to start a local server using `webpack-dev-server` which will watch, build (in-memory), and reload for you. The port will be displayed to you as `http://0.0.0.0:3000` (or if you prefer IPv6, if you're using `express` server, then it's `http://[::1]:3000/`).\n\n### server\n```bash\n# development\nnpm run server\n# production\nnpm run build:prod\nnpm run server:prod\n```\n\n## Other commands\n## the following commands with npm can be used with yarn as well\n\n### build files\n```bash\n# development\nnpm run build:dev\n# production (jit)\nnpm run build:prod\n# AoT\nnpm run build:aot\n```\n\n### hot module replacement\n```bash\nnpm run server:dev:hmr\n```\n\n### watch and build files\n```bash\nnpm run watch\n```\n\n### run unit tests\n```bash\nnpm run test\n```\n\n### watch and run our tests\n```bash\nnpm run watch:test\n```\n\n### run end-to-end tests\n```bash\n# update Webdriver (optional, done automatically by postinstall script)\nnpm run webdriver:update\n# this will start a test server and launch Protractor\nnpm run e2e\n```\n\n### continuous integration (run unit tests and e2e tests together)\n```bash\n# this will test both your JIT and AoT builds\nnpm run ci\n```\n\n### run Protractor's elementExplorer (for end-to-end)\n```bash\nnpm run e2e:live\n```\n\n### build Docker\n```bash\nnpm run build:docker\n```\n\n# Configuration\nConfiguration files live in `config/` we are currently using webpack, karma, and protractor for different stages of your application\n\n# AoT Don'ts\nThe following are some things that will make AoT compile fail.\n\n- Don’t use require statements for your templates or styles, use styleUrls and templateUrls, the angular2-template-loader plugin will change it to require at build time.\n- Don’t use default exports.\n- Don’t use `form.controls.controlName`, use `form.get(‘controlName’)`\n- Don’t use `control.errors?.someError`, use `control.hasError(‘someError’)`\n- Don’t use functions in your providers, routes or declarations, export a function and then reference that function name\n- @Inputs, @Outputs, View or Content Child(ren), Hostbindings, and any field you use from the template or annotate for Angular should be public\n\nFor more detailed guide on AoT's Do's and Don'ts refer to https://github.com/rangle/angular-2-aot-sandbox\n\n# External Stylesheets\nAny stylesheets (Sass or CSS) placed in the `src/styles` directory and imported into your project will automatically be compiled into an external `.css` and embedded in your production builds.\n\nFor example to use Bootstrap as an external stylesheet:\n1) Create a `styles.scss` file (name doesn't matter) in the `src/styles` directory.\n2) `npm install` the version of Bootstrap you want.\n3) In `styles.scss` add `@import '~bootstrap/scss/bootstrap.scss';`\n4) In `src/app/app.module.ts` add underneath the other import statements: `import '../styles/styles.scss';`\n\n# Contributing\nYou can include more examples as components but they must introduce a new concept such as `Home` component (separate folders), and Todo (services). I'll accept pretty much everything so feel free to open a Pull-Request\n\n# TypeScript\n> To take full advantage of TypeScript with autocomplete you would have to install it globally and use an editor with the correct TypeScript plugins.\n\n## Use latest TypeScript compiler\nTypeScript 2.7.x includes everything you need. Make sure to upgrade, even if you installed TypeScript previously.\n\n```\nnpm install --global typescript\n```\n\n## Use a TypeScript-aware editor\nWe have good experience using these editors:\n\n* [Visual Studio Code](https://code.visualstudio.com/)\n* [Webstorm 2018.1](https://www.jetbrains.com/webstorm/download/)\n* [Atom](https://atom.io/) with [TypeScript plugin](https://atom.io/packages/atom-typescript)\n* [Sublime Text](http://www.sublimetext.com/3) with [Typescript-Sublime-Plugin](https://github.com/Microsoft/Typescript-Sublime-plugin#installation)\n\n### Visual Studio Code + Debugger for Chrome\n> Install [Debugger for Chrome](https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome) and see docs for instructions to launch Chrome\n\nThe included `.vscode` automatically connects to the webpack development server on port `3000`.\n\n# Types\n> When you include a module that doesn't include Type Definitions inside of the module you can include external Type Definitions with @types\n\ni.e, to have youtube api support, run this command in terminal:\n```shell\nnpm i @types/youtube @types/gapi @types/gapi.youtube\n```\nIn some cases where your code editor doesn't support Typescript 2 yet or these types weren't listed in ```tsconfig.json```, add these to **\"src/custom-typings.d.ts\"** to make peace with the compile check:\n```es6\nimport '@types/gapi.youtube';\nimport '@types/gapi';\nimport '@types/youtube';\n```\n\n## Custom Type Definitions\nWhen including 3rd party modules you also need to include the type definition for the module\nif they don't provide one within the module. You can try to install it with @types\n\n```\nnpm install @types/node\nnpm install @types/lodash\n```\n\nIf you can't find the type definition in the registry we can make an ambient definition in\nthis file for now. For example\n\n```typescript\ndeclare module \"my-module\" {\n  export function doesSomething(value: string): string;\n}\n```\n\n\nIf you're prototyping and you will fix the types later you can also declare it as type any\n\n```typescript\ndeclare var assert: any;\ndeclare var _: any;\ndeclare var $: any;\n```\n\nIf you're importing a module that uses Node.js modules which are CommonJS you need to import as\n\n```typescript\nimport * as _ from 'lodash';\n```\n\n\n# Frequently asked questions\n* What's the current browser support for Angular?\n  * Please view the updated list of [browser support for Angular](https://github.com/gdi2290/awesome-angular#current-browser-support-for-angular)\n* Why is my service, aka provider, is not injecting parameter correctly?\n  * Please use `@Injectable()` for your service for typescript to correctly attach the metadata (this is a TypeScript problem)\n* Where do I write my tests?\n  * You can write your tests next to your component files. See [`/src/app/home/home.component.spec.ts`](/src/app/home/home.component.spec.ts)\n* How do I start the app when I get `EACCES` and `EADDRINUSE` errors?\n  * The `EADDRINUSE` error means the port `3000` is currently being used and `EACCES` is lack of permission for webpack to build files to `./dist/`\n* How to use `sass` for css?\n *  * `loaders: ['raw-loader','sass-loader']` and `@Component({ styleUrls: ['./filename.scss'] })` see Wiki page [How to include SCSS in components](https://github.com/gdi2290/angular-starter/wiki/How-to-include-SCSS-in-components), or issue [#136](https://github.com/gdi2290/angular-starter/issues/136) for more information.\n* How do I test a Service?  \n  * See issue [#130](https://github.com/gdi2290/angular-starter/issues/130#issuecomment-158872648)\n* How do I add `vscode-chrome-debug` support?\n  * The VS Code chrome debug extension support can be done via `launch.json` see issue [#144](https://github.com/gdi2290/angular-starter/issues/144#issuecomment-164063790)\n* How do I make the repo work in a virtual machine?\n  * You need to use `0.0.0.0` so revert these changes [#205](https://github.com/gdi2290/angular-starter/pull/205/files)\n* What are the naming conventions for Angular?\n  * please see issue [#185](https://github.com/gdi2290/angular-starter/issues/185) and PR [196](https://github.com/gdi2290/angular-starter/pull/196)\n* How do I include bootstrap or jQuery?\n  * please see issue [#215](https://github.com/gdi2290/angular-starter/issues/215) and [#214](https://github.com/gdi2290/angular-starter/issues/214#event-511768416)\n* How do I async load a component?\n  * see wiki [How-do-I-async-load-a-component-with-AsyncRoute](https://github.com/gdi2290/angular-starter/wiki/How-do-I-async-load-a-component-with-AsyncRoute)\n* Error: Cannot find module 'tapable'\n  * Remove `node_modules/` and run `npm cache clean` then `npm install`\n* How do I turn on Hot Module Replacement\n  * Run `npm run server:dev:hmr`\n* `RangeError: Maximum call stack size exceeded`\n  * This is a problem with minifying Angular and it's recent JIT templates. If you set `mangle` to `false` then you should be good.\n* Why is the size of my app larger in development?\n  * We are using inline source-maps and hot module replacement which will increase the bundle size.\n* If you're in China\n  * check out https://github.com/cnpm/cnpm\n* node-pre-gyp ERR in npm install (Windows)\n  * often happens when you're behind proxy and proxy wasn't configured in the npm as it tries to download binary package from the github and if it fails to do so, it will try to compile node-sass from the source codes\n  * install Python3 x86\n* `Error:Error: Parse tsconfig error [{\"messageText\":\"Unknown compiler option 'lib'.\",\"category\":1,\"code\":5023},{\"messageText\":\"Unknown compiler option 'strictNullChecks'.\",\"category\":1,\"code\":5023},{\"messageText\":\"Unknown compiler option 'baseUrl'.\",\"category\":1,\"code\":5023},{\"messageText\":\"Unknown compiler option 'paths'.\",\"category\":1,\"code\":5023},{\"messageText\":\"Unknown compiler option 'types'.\",\"category\":1,\"code\":5023}]`\n  * remove `node_modules/typescript` and run `npm install typescript@beta`. This repo now uses ts 2.0\n* \"There are multiple modules with names that only differ in casing\"\n  * change `c:\\[path to angular-starter]` to `C:\\[path to angular-starter]` see [926#issuecomment-245223547](https://github.com/gdi2290/angular-starter/issues/926#issuecomment-245223547)\n\n# Support, Questions, or Feedback\n> Contact us anytime for anything about this repo or Angular\n\n`@PatrickJS__` on twitter\n\n# Deployment\n\n## Docker\n\nTo run project you only need host machine with **operating system** with installed **git** (to clone this repo)\nand [docker](https://www.docker.com/) and thats all - any other software is not needed\n(other software like node.js etc. will be automatically downloaded and installed inside docker container during build step based on dockerfile).\n\n### Install docker\n\n#### MacOS:\n\n`brew cask install docker`\n\nAnd run docker by Mac bottom menu> launchpad > docker (on first run docker will ask you about password)\n\n#### Ubuntu:\n\n```\nsudo apt-get update\nsudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\nsudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'\nsudo apt-get update\napt-cache policy docker-engine\nsudo apt-get install -y docker-engine\nsudo systemctl status docker  # test: should be ‘active’\n```\nAnd add your user to docker group (to avoid `sudo` before using `docker` command in future):\n```\nsudo usermod -aG docker $(whoami)\n```\nand logout and login again.\n\n### Build image\n\nBecause *node.js* is big memory consumer you need 1-2GB RAM or virtual memory to build docker image\n(it was successfully tested on machine with 512MB RAM + 2GB virtual memory - building process take 7min)\n\nGo to main project folder. To build image type:\n\n`docker build -t angular-starter .`\n\nThe **angular-starter** name used in above commands is only example image name.\nTo remove intermediate images created by docker on build process, type:\n\n`docker rmi -f $(docker images -f \"dangling=true\" -q)`\n\n### Run image\n\nTo run created docker image on [localhost:8080](localhost:8080) type (parameter `-p 8080:80` is host:container port mapping)\n\n`docker run --name angular-starter -p 8080:80 angular-starter &`\n\nAnd that's all, you can open browser and go to [localhost:8080](localhost:8080).\n\n### Build and Run image using docker-compose\n\nTo create and run docker image on [localhost:8080](localhost:8080) as part of large project you may use **docker-compose**. Type \n\n`docker-compose up`\n\nAnd that's all, you can open browser and go to [localhost:8080](localhost:8080).\n\n\n### Run image on sub-domain\n\nIf you want to run image as virtual-host on sub-domain you must setup [proxy](https://github.com/jwilder/nginx-proxy). You should install proxy and set sub-domain in this way:\n\n ```\n docker run -d -p 80:80 --name nginx-proxy -v /var/run/docker.sock:/tmp/docker.sock:ro jwilder/nginx-proxy:alpine\n ```\n\n And in your `/etc/hosts` file (linux) add line: `127.0.0.1 angular-starter.your-domain.com` or in yor hosting add\n following DNS record (wildchar `*` is handy because when you add new sub-domain in future, you don't need to touch/add any DNS record)\n\n ```\n Type: CNAME\n Hostname: *.your-domain.com\n Direct to: your-domain.com\n TTL(sec): 43200\n ```\n\nAnd now you are ready to run image on subdomain by:\n\n```\ndocker run -e VIRTUAL_HOST=angular-starter.your-domain.com --name angular-starter angular-starter &\n```\n\n### Login into docker container\n\n`docker exec -t -i angular-starter /bin/bash`\n\n## Netlify\n\nYou can quickly create a free site to get started using this\nstarter kit in production on [Netlify](https://www.netlify.com/):\n\n[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/AngularClass/angular-starter)\n\n### Optional Integration with SonarQube (for continous code quality)\nAssuming you have SonarQube 5.5.6 (LTS) installed\n* Setup SonarQube with the [Sonar Typescript plugin](https://github.com/Pablissimo/SonarTsPlugin#installation) and the Generic Test Coverage plugin https://docs.sonarqube.org/display/PLUG/Generic+Test+Coverage\n* Install sonar-scanner globally \n```bash\nnpm install --global sonar-scanner\n```\n* Install the [Karma plugin for sonarqube](https://www.npmjs.com/package/karma-sonarqube-unit-reporter) as a dev dependency \n```bash\nnpm install karma-sonarqube-unit-reporter --save-dev\n```\n* Sonar Host URL configuration:\nUpdate [`sonar-project.properties`](sonar-project.properties) file for the property `sonar.host.url` to point to your SonarQube server. By default this assumes that the SonarQube server is running locally using the default port\n```\nsonar.host.url=<Sonar Host URL and Port>\n```\n* Run the unit tests with sonar reporter enabled\n```bash\nnpm run test:sonar\n```\n* The test results collected in the results folder in the sonar compatible format\n* Push results to SonarCube\n```bash\nsonar-scanner\n``` \n* If working with SonarQube 6.x it supports [Generic Test Data](https://docs.sonarqube.org/display/SONAR/Generic+Test+Data)\n* Modify the [karma.conf.js](config/karma.config.js) to set the appropriate version of the sonarQube\n```es6\nsonarQubeUnitReporter: {\n  sonarQubeVersion: '6.x',\n}\n```\n___\n\nenjoy — [**PatrickJS**](https://patrickjs.com)\n\n___\n\n# License\n [MIT](/LICENSE)\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.3125,
          "content": "version: '3'\nservices:\n  angular-starter:\n    build:\n      context: .\n      dockerfile: Dockerfile-dev\n    container_name: angular-starter\n    networks:\n      - angular-starter\n    ports:\n      - '3000:3000'\n    environment:\n     - HOST=0.0.0.0\n    command: npm run start\nnetworks:\n  angular-starter:\n    driver: bridge\n"
        },
        {
          "name": "firebase.json",
          "type": "blob",
          "size": 0.2275390625,
          "content": "{\n  \"hosting\": {\n    \"public\": \"dist\",\n    \"rewrites\": [\n      {\n        \"source\": \"**\",\n        \"destination\": \"/index.html\"\n      }\n    ],\n    \"ignore\": [\n      \"firebase.json\",\n      \"**/.*\",\n      \"**/node_modules/**\"\n    ]\n  }\n}"
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 0.1240234375,
          "content": "/**\n * @author: tipe.io\n */\n\n/**\n * Look in ./config for karma.conf.js\n */\nmodule.exports = require('./config/karma.conf.js');\n"
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.05859375,
          "content": "[build]\n  command = \"npm run build:prod\"\n  publish = \"dist\"\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 7.91796875,
          "content": "{\n  \"name\": \"angular-starter\",\n  \"version\": \"7.5.0\",\n  \"description\": \"An Angular Webpack Starter kit featuring Angular (Router, Http, Forms, Services, Tests, E2E, Coverage), Karma, Protractor, Jasmine, Istanbul, TypeScript, and Webpack by Tipe.io\",\n  \"keywords\": [\n    \"angular\",\n    \"angular2\",\n    \"angular4\",\n    \"angular5\",\n    \"webpack\",\n    \"typescript\",\n    \"tipe\",\n    \"tipe.io\"\n  ],\n  \"author\": \"Patrick Stapleton <patrick@tipe.io>\",\n  \"homepage\": \"https://github.com/gdi2290/angular-starter\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"build:aot:prod\": \"rimraf dist compiled && cross-env BUILD_AOT=1 SOURCE_MAP=0 npm run webpack -- --config config/webpack.prod.js --progress --profile --bail\",\n    \"build:aot\": \"npm run build:aot:prod\",\n    \"build:aot:dev\": \"cross-env BUILD_AOT=1 npm run build:dev\",\n    \"build:dev\": \"rimraf dist && npm run webpack -- --config config/webpack.dev.js --mode development --progress --profile --trace-deprecation\",\n    \"build:docker\": \"npm run build:prod && docker build -t angular-webpack-starter:latest .\",\n    \"build:prod\": \"rimraf dist && npm run webpack -- --config config/webpack.prod.js --progress --profile --bail\",\n    \"build\": \"npm run build:dev\",\n    \"ci:aot\": \"cross-env BUILD_E2E=1 npm run lint && npm run test:ci && npm run build:aot && npm run e2e\",\n    \"ci:jit\": \"cross-env BUILD_E2E=1 npm run lint && npm run test:ci && npm run build:prod && npm run e2e\",\n    \"ci:nobuild\": \"npm run lint && npm test:ci && npm run e2e\",\n    \"ci:testall\": \"cross-env BUILD_E2E=1 npm run lint && npm run test:ci && npm run build:prod && npm run e2e && npm run build:aot && npm run e2e\",\n    \"ci:travis\": \"cross-env BUILD_E2E=1 npm run lint && npm run test:ci && npm run build:aot && npm run e2e:travis\",\n    \"ci\": \"npm run ci:testall\",\n    \"clean:all\": \"npm run rimraf -- doc coverage dist compiled webpack-cache\",\n    \"clean:cache\": \"npm run rimraf -- webpack-cache\",\n    \"clean:aot\": \"npm run rimraf -- compiled\",\n    \"clean:dist\": \"npm run rimraf -- dist\",\n    \"clean:install\": \"npm set progress=false && npm install\",\n    \"clean\": \"npm cache verify && npm run rimraf -- node_modules doc coverage dist compiled webpack-cache\",\n    \"docker\": \"docker\",\n    \"docs\": \"npm run typedoc -- --options typedoc.json --exclude '**/*.spec.ts' ./src/\",\n    \"docs:compodoc\": \"compodoc -p tsconfig.json\",\n    \"docs:compodoc:serve\": \"compodoc -p tsconfig.json -s\",\n    \"docs:compodoc:serve:watch\": \"compodoc -p tsconfig.json -s -w\",\n    \"e2e:live\": \"npm-run-all -p -r server:prod:ci protractor:live\",\n    \"e2e:travis\": \"npm-run-all -p -r server:prod:ci protractor:delay\",\n    \"e2e\": \"npm-run-all -p -r server:prod:ci protractor\",\n    \"github-deploy:dev\": \"npm run webpack -- --config config/webpack.github-deploy.js --mode development --progress --profile --env.githubDev\",\n    \"github-deploy:prod\": \"npm run webpack -- --config config/webpack.github-deploy.js  --mode production --progress --profile --env.githubProd\",\n    \"github-deploy\": \"npm run github-deploy:dev\",\n    \"lint\": \"npm run tslint \\\"src/**/*.ts\\\"\",\n    \"node\": \"node\",\n    \"postinstall\": \"npm run webdriver:update\",\n    \"postversion\": \"git push && git push --tags\",\n    \"preclean:install\": \"npm run clean\",\n    \"preversion\": \"npm test\",\n    \"protractor\": \"protractor\",\n    \"protractor:delay\": \"sleep 3 && npm run protractor\",\n    \"protractor:live\": \"protractor --elementExplorer\",\n    \"rimraf\": \"rimraf\",\n    \"server:dev:hmr\": \"npm run server:dev -- --hot --hotOnly\",\n    \"server:aot:dev\": \"cross-env BUILD_AOT=1 npm run server:dev\",\n    \"server:dev\": \"npm run webpack-dev-server -- --config config/webpack.dev.js --open --progress --profile --watch --content-base src/\",\n    \"server:prod\": \"http-server dist -c-1 --cors\",\n    \"server:prod:ci\": \"http-server dist -p 3000 -c-1 --cors\",\n    \"server\": \"npm run server:dev\",\n    \"start:prod:hmr\": \"cross-env ANGULAR_CONF_FILE=./config.prod.json npm run server:dev:hmr\",\n    \"start:hmr\": \"npm run server:dev:hmr\",\n    \"start\": \"npm run server:dev\",\n    \"start:aot\": \"npm run server:aot:dev\",\n    \"test\": \"karma start\",\n    \"test:sonar\": \"npm run lint && cross-env SONAR_QUBE=1 karma start\",\n    \"test:ci\": \"karma start --single-run --browsers ChromeTravisCi\",\n    \"tslint\": \"tslint \\\"src/**/*.ts\\\" --project tsconfig.json\",\n    \"typedoc\": \"typedoc\",\n    \"version\": \"npm run build\",\n    \"watch:dev:hmr\": \"npm run watch:dev -- --hot\",\n    \"watch:dev\": \"npm run build:dev -- --watch\",\n    \"watch:aot:dev\": \"npm run build:aot:dev -- --watch\",\n    \"watch:prod\": \"npm run build:prod -- --watch\",\n    \"watch:aot:prod\": \"npm run build:aot:prod -- --watch\",\n    \"watch:test\": \"npm run test -- --auto-watch --no-single-run\",\n    \"watch\": \"npm run watch:dev\",\n    \"webdriver-manager\": \"node ./node_modules/protractor/bin/webdriver-manager\",\n    \"webdriver:start\": \"node ./node_modules/protractor/bin/webdriver-manager start\",\n    \"webdriver:update\": \"node ./node_modules/protractor/bin/webdriver-manager update\",\n    \"webpack-dev-server\": \"node --max_old_space_size=4096 node_modules/webpack-dev-server/bin/webpack-dev-server.js\",\n    \"webpack\": \"node --max_old_space_size=4096 node_modules/webpack/bin/webpack.js\"\n  },\n  \"dependencies\": {\n    \"@angular/animations\": \"^6.0.6\",\n    \"@angular/common\": \"^6.0.6\",\n    \"@angular/compiler\": \"^6.0.6\",\n    \"@angular/core\": \"^6.0.6\",\n    \"@angular/forms\": \"^6.0.6\",\n    \"@angular/platform-browser\": \"^6.0.6\",\n    \"@angular/platform-browser-dynamic\": \"^6.0.6\",\n    \"@angular/platform-server\": \"^6.0.6\",\n    \"@angular/router\": \"^6.0.6\",\n    \"core-js\": \"^2.5.7\",\n    \"http-server\": \"^0.11.1\",\n    \"ie-shim\": \"^0.1.0\",\n    \"reflect-metadata\": \"^0.1.12\",\n    \"rxjs\": \"^6.2.1\",\n    \"zone.js\": \"^0.8.26\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-optimizer\": \"^0.6.8\",\n    \"@angular/cli\": \"^6.0.8\",\n    \"@angular/compiler-cli\": \"^6.0.6\",\n    \"@angular/language-service\": \"^6.0.6\",\n    \"@compodoc/compodoc\": \"^1.1.3\",\n    \"@ngtools/webpack\": \"^6.0.8\",\n    \"@types/hammerjs\": \"^2.0.35\",\n    \"@types/jasmine\": \"^2.8.8\",\n    \"@types/node\": \"^10.3.5\",\n    \"@types/uglify-js\": \"^3.0.2\",\n    \"@types/webpack\": \"^4.4.2\",\n    \"add-asset-html-webpack-plugin\": \"^2.1.3\",\n    \"angular2-template-loader\": \"^0.6.2\",\n    \"assets-webpack-plugin\": \"^3.8.4\",\n    \"awesome-typescript-loader\": \"^5.2.0\",\n    \"codelyzer\": \"^4.3.0\",\n    \"copy-webpack-plugin\": \"^4.5.1\",\n    \"cross-env\": \"^5.2.0\",\n    \"css-loader\": \"^0.28.11\",\n    \"exports-loader\": \"^0.7.0\",\n    \"expose-loader\": \"^0.7.5\",\n    \"file-loader\": \"^1.1.11\",\n    \"find-root\": \"^1.1.0\",\n    \"gh-pages\": \"^1.2.0\",\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"imports-loader\": \"^0.8.0\",\n    \"istanbul-instrumenter-loader\": \"^3.0.1\",\n    \"jasmine-core\": \"^3.1.0\",\n    \"karma\": \"^2.0.4\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-coverage\": \"^1.1.2\",\n    \"karma-jasmine\": \"^1.1.2\",\n    \"karma-mocha-reporter\": \"^2.2.5\",\n    \"karma-remap-coverage\": \"^0.1.5\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-webpack\": \"^3.0.0\",\n    \"mini-css-extract-plugin\": \"^0.4.0\",\n    \"node-sass\": \"^4.9.0\",\n    \"npm-run-all\": \"^4.1.3\",\n    \"optimize-js-plugin\": \"^0.0.4\",\n    \"parse5\": \"^5.0.0\",\n    \"protractor\": \"^5.3.2\",\n    \"raw-loader\": \"^0.5.1\",\n    \"rimraf\": \"^2.6.2\",\n    \"rxjs-tslint\": \"^0.1.5\",\n    \"sass-loader\": \"^7.0.3\",\n    \"script-ext-html-webpack-plugin\": \"^2.0.1\",\n    \"source-map-loader\": \"^0.2.3\",\n    \"string-replace-loader\": \"^2.1.1\",\n    \"style-loader\": \"^0.21.0\",\n    \"to-string-loader\": \"^1.1.5\",\n    \"ts-node\": \"^7.0.0\",\n    \"tslib\": \"^1.9.3\",\n    \"tslint\": \"^5.10.0\",\n    \"tslint-loader\": \"^3.6.0\",\n    \"typedoc\": \"^0.11.1\",\n    \"typescript\": \"~2.7.2\",\n    \"uglifyjs-webpack-plugin\": \"^1.2.6\",\n    \"url-loader\": \"^1.0.1\",\n    \"webpack\": \"^4.12.0\",\n    \"webpack-cli\": \"^3.0.8\",\n    \"webpack-dev-middleware\": \"^3.1.3\",\n    \"webpack-dev-server\": \"^3.1.4\",\n    \"webpack-inline-manifest-plugin\": \"^4.0.1\",\n    \"webpack-merge\": \"^4.1.3\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/gdi2290/angular-starter.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/gdi2290/angular-starter/issues\"\n  },\n  \"engines\": {\n    \"node\": \">= 8.0.0\",\n    \"npm\": \">= 5\"\n  }\n}\n"
        },
        {
          "name": "protractor.conf.js",
          "type": "blob",
          "size": 0.140625,
          "content": "/**\n * @author: tipe.io\n */\n\n/**\n * look in ./config for protractor.conf.js\n */\nexports.config = require('./config/protractor.conf.js').config;\n"
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 0.6162109375,
          "content": "sonar.projectKey=angular:angular-starter\nsonar.projectName=angular-starter\nsonar.projectVersion=6.0.0\nsonar.sourceEncoding=UTF-8\nsonar.sources=src\nsonar.exclusions=**/node_modules/**,**/*.spec.ts\nsonar.tests=src/app\nsonar.test.inclusions=**/*.spec.ts\n\nsonar.ts.tslint.configPath=tslint.json\nsonar.ts.coverage.lcovReportPath=coverage/coverage.lcov\n# if using local tslint then enable the line below\n# sonar.ts.tslint.outputPath=reports/lint_issues.json\nsonar.genericcoverage.unitTestReportPaths=reports/ut_report.xml\n\n# Change the host.url to point to the \n# sonarcube server (default localhost)\nsonar.host.url=http://localhost:9000"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.8701171875,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"commonjs\",\n    \"moduleResolution\": \"node\",\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"sourceMap\": true,\n    \"noEmit\": true,\n    \"noEmitHelpers\": true,\n    \"importHelpers\": true,\n    \"strictNullChecks\": false,\n    \"lib\": [\n      \"dom\",\n      \"es6\"\n    ],\n    \"baseUrl\": \"./src\",\n    \"paths\": {\n      \"@angular/*\": [\"node_modules/@angular/*\"]\n    },\n    \"typeRoots\": [\n      \"node_modules/@types\"\n    ],\n    \"types\": [\n      \"hammerjs\",\n      \"jasmine\",\n      \"node\",\n      \"uglify-js\",\n      \"webpack\"\n    ]\n  },\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\"\n  ],\n  \"awesomeTypescriptLoaderOptions\": {\n    \"forkChecker\": true,\n    \"useWebpackText\": true\n  },\n  \"compileOnSave\": false,\n  \"buildOnSave\": false,\n  \"atom\": {\n    \"rewriteTsconfig\": false\n  }\n}\n"
        },
        {
          "name": "tsconfig.webpack.json",
          "type": "blob",
          "size": 0.818359375,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"sourceMap\": true,\n    \"noEmitHelpers\": true,\n    \"importHelpers\": true,\n    \"strictNullChecks\": false,\n    \"lib\": [\n      \"es2015\",\n      \"dom\"\n    ],\n    \"baseUrl\": \"./src\",\n    \"paths\": {\n      \"@angular/*\": [\"../node_modules/@angular/*\"]\n    },\n    \"typeRoots\": [\n      \"node_modules/@types\"\n    ],\n    \"types\": [\n      \"hammerjs\",\n      \"node\"\n    ]\n  },\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\",\n    \"src/**/*.spec.ts\",\n    \"src/**/*.e2e.ts\"\n  ],\n  \"angularCompilerOptions\": {\n    \"skipMetadataEmit\": true\n  },\n  \"compileOnSave\": false,\n  \"buildOnSave\": false,\n  \"atom\": {\n    \"rewriteTsconfig\": false\n  }\n}\n"
        },
        {
          "name": "tslint.json",
          "type": "blob",
          "size": 1.625,
          "content": "{\n  \"extends\": [\n    \"tslint:recommended\"\n  ],\n  \"linterOptions\": {\n    \"exclude\": [\n      \"src/*.d.ts\"\n    ]\n  },\n  \"rulesDirectory\": [\n    \"node_modules/codelyzer\",\n    \"node_modules/rxjs-tslint\"\n  ],\n  \"rules\": {\n    \"trailing-comma\": [false, {\"multiline\": \"always\", \"singleline\": \"never\"}],\n    \"interface-name\": [false, \"always-prefix\"],\n    \"component-class-suffix\": true,\n    // \"component-selector\": [true, \"element\", \"my\", \"kebab-case\"],\n    \"directive-class-suffix\": true,\n    // \"directive-selector\": [true, \"attribute\", \"my\", \"camelCase\"],\n    \"import-destructuring-spacing\": true,\n    \"no-attribute-parameter-decorator\": true,\n    \"no-forward-ref\": true,\n    \"no-input-rename\": true,\n    \"no-output-rename\": true,\n    \"only-arrow-functions\": false,\n    \"pipe-naming\": [true, \"camelCase\", \"my\"],\n    \"use-host-property-decorator\": true,\n    \"use-input-property-decorator\": true,\n    \"use-life-cycle-interface\": true,\n    \"use-output-property-decorator\": true,\n    \"use-pipe-transform-interface\": true,\n    \"no-console\": [true,\n      \"time\",\n      \"timeEnd\",\n      \"trace\"\n    ],\n    \"max-line-length\": [\n      true,\n      100\n    ],\n    \"no-string-literal\": false,\n    \"no-use-before-declare\": true,\n    \"object-literal-sort-keys\": false,\n    \"ordered-imports\": false,\n    \"quotemark\": [\n      true,\n      \"single\",\n      \"avoid-escape\"\n    ],\n    \"variable-name\": [\n      true,\n      \"allow-leading-underscore\",\n      \"allow-pascal-case\",\n      \"ban-keywords\",\n      \"check-format\"\n    ],\n    \"rxjs-collapse-imports\": true,\n    \"rxjs-pipeable-operators-only\": true,\n    \"rxjs-no-static-observable-methods\": true,\n    \"rxjs-proper-imports\": true\n  }\n}\n"
        },
        {
          "name": "typedoc.json",
          "type": "blob",
          "size": 0.3759765625,
          "content": "{\n  \"mode\": \"modules\",\n  \"out\": \"doc\",\n  \"theme\": \"default\",\n  \"ignoreCompilerErrors\": \"true\",\n  \"experimentalDecorators\": \"true\",\n  \"emitDecoratorMetadata\": \"true\",\n  \"target\": \"ES5\",\n  \"moduleResolution\": \"node\",\n  \"preserveConstEnums\": \"true\",\n  \"stripInternal\": \"true\",\n  \"suppressExcessPropertyErrors\": \"true\",\n  \"suppressImplicitAnyIndexErrors\": \"true\",\n  \"module\": \"commonjs\"\n}\n"
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 0.4658203125,
          "content": "/**\n * @author: tipe.io\n */\n\n/**\n * Look in ./config folder for webpack.dev.js\n */\nswitch (process.env.NODE_ENV) {\n  case 'prod':\n  case 'production':\n    module.exports = require('./config/webpack.prod')({env: 'production'});\n    break;\n  case 'test':\n  case 'testing':\n    module.exports = require('./config/webpack.test')({env: 'test'});\n    break;\n  case 'dev':\n  case 'development':\n  default:\n    module.exports = require('./config/webpack.dev')({env: 'development'});\n}\n"
        }
      ]
    }
  ]
}