{
  "metadata": {
    "timestamp": 1736563131094,
    "page": 52,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "simple-icons/simple-icons",
      "stars": 21605,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0908203125,
          "content": "# NodeJS\nnode_modules/\nnpm-debug.log\n\n# Build files\n/index.js\n/index.mjs\n/index.d.ts\n/sdk.js\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.322265625,
          "content": "root=true\n\n[*]\ncharset=utf-8\nindent_size=2\nindent_style=tab\ninsert_final_newline=true\ntrim_trailing_whitespace=true\n\n[*.md]\nindent_style = space\nindent_size=unset\n\n[*.svg]\ninsert_final_newline=false\n\n[*.yml]\nindent_style=space\n\n[.github/**/*.md]\ntrim_trailing_whitespace=false # Templates with trailing whitespace are more usable\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.220703125,
          "content": "*                  text=auto\n\n# SVGs are treated as binary by default\n*.svg              text\n\n# Don't diff machine generated files\nslugs.md           -diff\n\n# Don't export/archive these files\n.github            export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.763671875,
          "content": "# Editor configurations\n.vscode\n.idea\n\n# Files generated by build script\n/index.js\n/index.mjs\n/index.d.ts\n/sdk.js\n\n# Ignore all files in the icons folder\nicons/*\n# Except SVG files\n!icons/*.svg\n\n### NodeJS ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\nyarn.lock\n\n# Dependency directories\nnode_modules/\n\n# Generated files\n*.tgz\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".jsonschema.json",
          "type": "blob",
          "size": 4.1123046875,
          "content": "{\n\t\"title\": \"Simple Icons\",\n\t\"definitions\": {\n\t\t\"brand\": {\n\t\t\t\"$id\": \"#brand\",\n\t\t\t\"description\": \"A single brand\",\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\"title\", \"hex\", \"source\"],\n\t\t\t\"properties\": {\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/title\"\n\t\t\t\t},\n\t\t\t\t\"slug\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/slug\"\n\t\t\t\t},\n\t\t\t\t\"hex\": {\n\t\t\t\t\t\"description\": \"The brand color\",\n\t\t\t\t\t\"$ref\": \"#/definitions/hex\"\n\t\t\t\t},\n\t\t\t\t\"source\": {\n\t\t\t\t\t\"description\": \"The website from which the icon was sourced\",\n\t\t\t\t\t\"$ref\": \"#/definitions/sourceUrl\"\n\t\t\t\t},\n\t\t\t\t\"guidelines\": {\n\t\t\t\t\t\"description\": \"The brand guidelines\",\n\t\t\t\t\t\"$ref\": \"#/definitions/url\"\n\t\t\t\t},\n\t\t\t\t\"aliases\": {\n\t\t\t\t\t\"description\": \"The aliases for the brand\",\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"aka\": {\n\t\t\t\t\t\t\t\"description\": \"The brand is also known as (e.g. full length name or abbreviation)\",\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\"type\": \"string\"}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"dup\": {\n\t\t\t\t\t\t\t\"description\": \"Different brands that use the exact same icon\",\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\"$ref\": \"#/definitions/duplicate\"}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"loc\": {\n\t\t\t\t\t\t\t\"description\": \"Localized names of the brand\",\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/locale\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"old\": {\n\t\t\t\t\t\t\t\"description\": \"Old names, for backwards compatibility\",\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\"type\": \"string\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"minProperties\": 1,\n\t\t\t\t\t\"additionalProperties\": false\n\t\t\t\t},\n\t\t\t\t\"license\": {\n\t\t\t\t\t\"description\": \"The license for the icon\",\n\t\t\t\t\t\"oneOf\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"required\": [\"type\"],\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"An SPDX License Identifier\",\n\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"additionalProperties\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"required\": [\"type\", \"url\"],\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"Custom license type\",\n\t\t\t\t\t\t\t\t\t\"const\": \"custom\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"url\": {\n\t\t\t\t\t\t\t\t\t\"description\": \"The URL to the license text by the brand\",\n\t\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/url\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"additionalProperties\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"additionalProperties\": false\n\t\t},\n\t\t\"duplicate\": {\n\t\t\t\"$id\": \"#duplicate\",\n\t\t\t\"description\": \"A brand that uses the same icon\",\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\"title\"],\n\t\t\t\"properties\": {\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/title\"\n\t\t\t\t},\n\t\t\t\t\"slug\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/slug\"\n\t\t\t\t},\n\t\t\t\t\"hex\": {\n\t\t\t\t\t\"description\": \"The brand color, if different from the original\",\n\t\t\t\t\t\"$ref\": \"#/definitions/hex\"\n\t\t\t\t},\n\t\t\t\t\"source\": {\n\t\t\t\t\t\"description\": \"The website from which the duplicate's hex was sourced, if different from the original\",\n\t\t\t\t\t\"$ref\": \"#/definitions/url\"\n\t\t\t\t},\n\t\t\t\t\"guidelines\": {\n\t\t\t\t\t\"description\": \"The brand guidelines, if different from the original\",\n\t\t\t\t\t\"$ref\": \"#/definitions/url\"\n\t\t\t\t},\n\t\t\t\t\"loc\": {\n\t\t\t\t\t\"description\": \"Localized names of the brand\",\n\t\t\t\t\t\"$ref\": \"#/definitions/locale\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"additionalProperties\": false\n\t\t},\n\t\t\"hex\": {\n\t\t\t\"$id\": \"#hex\",\n\t\t\t\"description\": \"A 6-character hexadecimal color value (without #)\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"pattern\": \"^[0-9A-F]{6}$\"\n\t\t},\n\t\t\"locale\": {\n\t\t\t\"$id\": \"#locale\",\n\t\t\t\"description\": \"A localized brand name\",\n\t\t\t\"type\": \"object\",\n\t\t\t\"patternProperties\": {\n\t\t\t\t\"^[a-z]{2}-[A-Z]{2}$\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"The local name of the brand\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"minProperties\": 1,\n\t\t\t\"additionalProperties\": false\n\t\t},\n\t\t\"slug\": {\n\t\t\t\"$id\": \"#slug\",\n\t\t\t\"description\": \"The brand name slug (used as filename in icons/)\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"pattern\": \"^[a-z0-9]+(_[a-z0-9]+)?$\"\n\t\t},\n\t\t\"title\": {\n\t\t\t\"$id\": \"#title\",\n\t\t\t\"description\": \"The name of the brand\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"sourceUrl\": {\n\t\t\t\"$id\": \"#sourceUrl\",\n\t\t\t\"description\": \"URL for icon source. If is a GitHub URL, is validated to contain a commit hash, to be an issue comment or to be a GitHub organization URL\",\n\t\t\t\"$ref\": \"#/definitions/url\"\n\t\t},\n\t\t\"url\": {\n\t\t\t\"$id\": \"#url\",\n\t\t\t\"description\": \"HTTPS-only URL for a source\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"pattern\": \"^https://[^\\\\s]+$\"\n\t\t}\n\t},\n\t\"type\": \"array\",\n\t\"items\": {\"$ref\": \"#/definitions/brand\"}\n}\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.0703125,
          "content": "{\n\t\"default\": true,\n\t\"MD013\": false,\n\t\"MD033\": false,\n\t\"MD041\": false\n}\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.2490234375,
          "content": "# Ignore all files in root\n/*\n# Except the ones we want to publish\n!_data/\n!icons/\n!package.json\n!DISCLAIMER.md\n!README.md\n!LICENSE.md\n!VERSIONING.md\n!index.js\n!index.mjs\n!index.d.ts\n!types.d.ts\n!sdk.mjs\n!sdk.js\n!sdk.d.ts\n!.jsonschema.json\n!jsconfig.json\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0478515625,
          "content": "package-lock=false\nsave-exact=true\nsave-dev=true\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.25390625,
          "content": "# We prefer our own custom formatting for MarkDown files.\n# See the following thread for the discussion:\n#   https://github.com/simple-icons/simple-icons-font/pull/73\nLICENSE.md\nslugs.md\n\n# We use our own formatting for the data files.\n_data/simple-icons.json\n"
        },
        {
          "name": ".prettierrc.json",
          "type": "blob",
          "size": 0.126953125,
          "content": "{\n\t\"useTabs\": true,\n\t\"singleQuote\": true,\n\t\"bracketSpacing\": false,\n\t\"proseWrap\": \"never\",\n\t\"embeddedLanguageFormatting\": \"off\"\n}\n"
        },
        {
          "name": ".xo-config.json",
          "type": "blob",
          "size": 1.626953125,
          "content": "{\n\t\"prettier\": true,\n\t\"plugins\": [\"import\"],\n\t\"extends\": [\"plugin:jsdoc/recommended-error\"],\n\t\"rules\": {\n\t\t\"sort-imports\": [\n\t\t\t\"error\",\n\t\t\t{\n\t\t\t\t\"ignoreCase\": false,\n\t\t\t\t\"ignoreDeclarationSort\": true,\n\t\t\t\t\"ignoreMemberSort\": false,\n\t\t\t\t\"memberSyntaxSortOrder\": [\"none\", \"all\", \"multiple\", \"single\"],\n\t\t\t\t\"allowSeparatedGroups\": false\n\t\t\t}\n\t\t],\n\t\t\"import/no-named-as-default\": \"off\",\n\t\t\"import/extensions\": \"off\",\n\t\t\"import/order\": [\n\t\t\t\"error\",\n\t\t\t{\n\t\t\t\t\"groups\": [\"builtin\", \"external\", \"parent\", \"sibling\", \"index\"],\n\t\t\t\t\"alphabetize\": {\n\t\t\t\t\t\"order\": \"asc\",\n\t\t\t\t\t\"caseInsensitive\": true\n\t\t\t\t},\n\t\t\t\t\"warnOnUnassignedImports\": true,\n\t\t\t\t\"newlines-between\": \"never\"\n\t\t\t}\n\t\t],\n\t\t\"no-console\": [\"error\", {\"allow\": [\"warn\", \"error\"]}],\n\t\t\"no-warning-comments\": [\n\t\t\t\"warn\",\n\t\t\t{\n\t\t\t\t\"terms\": [\"fixme\", \"xxx\"]\n\t\t\t}\n\t\t],\n\t\t\"jsdoc/require-file-overview\": \"error\",\n\t\t\"jsdoc/require-description\": \"error\",\n\t\t\"jsdoc/no-bad-blocks\": \"error\",\n\t\t\"jsdoc/no-blank-blocks\": \"error\",\n\t\t\"jsdoc/no-blank-block-descriptions\": \"error\",\n\t\t\"jsdoc/check-syntax\": \"error\",\n\t\t\"jsdoc/require-asterisk-prefix\": \"error\",\n\t\t\"jsdoc/require-description-complete-sentence\": \"error\",\n\t\t\"jsdoc/require-hyphen-before-param-description\": [\"error\", \"never\"]\n\t},\n\t\"overrides\": [\n\t\t{\n\t\t\t\"files\": [\"sdk.mjs\", \"sdk.d.ts\"],\n\t\t\t\"nodeVersion\": \">=14.13.1\",\n\t\t\t\"rules\": {\n\t\t\t\t\"eslint-comments/disable-enable-pair\": \"off\",\n\t\t\t\t\"unicorn/no-abusive-eslint-disable\": \"off\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"files\": [\n\t\t\t\t\"scripts/**/*\",\n\t\t\t\t\"tests/**/*\",\n\t\t\t\t\"svglint.config.mjs\",\n\t\t\t\t\"svgo.config.mjs\"\n\t\t\t],\n\t\t\t\"nodeVersion\": \">=18\"\n\t\t},\n\t\t{\n\t\t\t\"files\": [\"svglint.config.mjs\"],\n\t\t\t\"rules\": {\n\t\t\t\t\"max-depth\": \"off\"\n\t\t\t}\n\t\t}\n\t]\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1015625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our community include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at <community@simpleicons.org>. All complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of actions.\n\n**Consequence**: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including sustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 2.0, available at <https://www.contributor-covenant.org/version/2/0/code_of_conduct.html>.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct enforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at <https://www.contributor-covenant.org/faq>. Translations are available at <https://www.contributor-covenant.org/translations>.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 28.8037109375,
          "content": "# Contributing to Simple Icons\n\n[![Good first issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3A%2522good%2520first%2520issue%2522%2520is%3Aopen%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=github&label=good%20first%20issues&color=228f6c&labelColor=228f6c&logoColor=white&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aopen+label%3A%22good+first+issue%22+-linked%3Apr) [![Icon issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3A%2522update%2520icon%2Fdata%2522%2C%2522new%2520icon%2522%2520is%3Aopen%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=svg&logoColor=333&label=icon%20issues&labelColor=FFB13B&color=FFB13B&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aissue+is%3Aopen+label%3A%22new+icon%22%2C%22update+icon%2Fdata%22) [![Code issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520is%3Aissue%2520is%3Aopen%2520label%3Ameta%2Cpackage%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=typescript&logoColor=white&label=code%20issues&labelColor=3178C6&color=3178C6&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aissue+is%3Aopen+label%3Adocs%2Cmeta%2Cpackage+-linked%3Apr) [![Documentation issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3Adocs%2520is%3Aopen%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=markdown&label=docs%20issues&labelColor=343a40&color=343a40&logoColor=FFF&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aopen+is%3Aissue+label%3Adocs+-linked%3Apr)\n\n> [!IMPORTANT]\\\n> We ask that all users read our [legal disclaimer](./DISCLAIMER.md) before contributing to Simple Icons.\n\nSimple Icons welcomes contributions and corrections. Before contributing, please make sure you have read the guidelines below. If you decide to contribute anything, please follow the steps below. If you're new to _git_ and/or _GitHub_, we suggest you go through [the GitHub Guides](https://guides.github.com/introduction/flow/).\n\n1. Fork this repository\n1. (Optional) Clone the fork\n\n   - Using SSH\n\n     ```shell\n     git clone --filter=tree:0 git@github.com:simple-icons/simple-icons.git\n     ```\n\n   - Using HTTPS\n\n     ```shell\n     git clone --filter=tree:0 https://github.com/simple-icons/simple-icons.git\n     ```\n\n   - Using GitHub CLI\n\n     ```shell\n     gh repo clone simple-icons/simple-icons -- --filter=tree:0\n     ```\n\n1. Create a new branch from the latest `develop`\n1. Start hacking on the new branch\n1. Commit and push to the new branch\n1. Make a pull request\n\n## Table of contents\n\n- [Requesting an Icon](#requesting-an-icon)\n  - [Forbidden Brands](#forbidden-brands)\n  - [Assessing Popularity](#assessing-popularity)\n  - [Opening an Issue](#opening-an-issue)\n- [Adding or Updating an Icon](#adding-or-updating-an-icon)\n  - [Requesting Permission](#requesting-permission)\n- [Testing Package Locally](#testing-package-locally)\n- [Using Docker](#using-docker)\n\n## Requesting an Icon\n\nWe welcome icon requests. Before you submit a new issue please make sure the icon:\n\n- Has not already been requested. If you find an existing issue or pull request for the brand you're looking for then please add a reaction or comment to show your support.\n- Is of a _popular_ brand - see \"[Assessing Popularity](#assessing-popularity)\" below.\n- Doesn't fall into one of the following categories:\n  - Illegal services (e.g. piracy, malware, threatening material, spam, etc.)\n  - Military-related brands and organizations\n  - Governmental agencies, programs, departments\n    - Allowed: International organizations and NGOs with supranational interests\n    - Allowed: Space agencies\n  - Symbols, including flags and banners\n    - Allowed: standards like FCC, CE, CCC, RoHS...\n  - Sport clubs\n    - Allowed: Sports organizations\n  - Yearly releases\n  - Universities or other educational institutions\n  - Any brands representing individuals rather than an organization, company, or product. This includes musicians, bands, and social media personalities.\n\n### Forbidden Brands\n\nSome companies and organizations are excessively protective with their brands, so please don't consider them:\n\n- BP\n- Disney\n- International Olympic Committee\n- Mattel\n- Microchip Technology Inc.\n- [Microsoft](https://github.com/simple-icons/simple-icons/issues/11236)\n- Oracle\n- Do you know more? Please, [report them](https://github.com/simple-icons/simple-icons/issues/new?labels=docs&template=documentation.yml).\n\nIf you are in doubt, feel free to submit it and we'll have a look.\n\n### Assessing Popularity\n\n> [!TIP]\\\n> Similarweb is now trying to force users to log in to view statistics. You can bypass this by going directly to `https://similarweb.com/website/google.com`, replacing `google.com` with the TLD you would like to get the stats on. You may need to use incognito mode if you visit these ranking pages often.\n\nTo be considered popular enough to be within our scope, a brand must be in existence for at least one year (from date of first stable release, where applicable) and meet one of the following metrics of popularity, in order of preference:\n\n1. Its website's Similarweb global rank is in the top 500k.\n   - As Similarweb updates its data only once every month, there will be a monitoring window for websites ranked between 450k & 550k until the next update, _unless_ the brand is within scope on any other metric below.\n   - For existing icons in our library, the threshold is dropped from 500k to 750k.\n   - A rank lower than 2m, without any other metric being provided, will result in the brand being declared outside our scope.\n1. The website's Similarweb rank in any one country is either:\n   - In the top 100, or,\n   - In the top 10k, _with_ a global rank of 1m or better.\n1. In cases where a brand does not have its own website the Similarweb rank of its parent company will be accepted _if_ the brand is that company's primary product.\n1. Its packages meet one of the following minimum requirements:\n   - [npm](https://www.npmjs.com): 100k weekly downloads,\n   - [jsDelivr](https://www.jsdelivr.com): 1m daily or 35m monthly requests,\n   - [crates.io](https://crates.io): 100k weekly downloads,\n   - [PyPi Stats](https://pypistats.org): 100k weekly downloads,\n   - [Homebrew Formulae](https://formulae.brew.sh): 5k installs in the last 30 days or 50k installs in the last year,\n   - [Arch User Repository](https://aur.archlinux.org): popularity of 7.00 or,\n1. If the brand is a Fediverse project, it needs to have a minimum of 10,000 Monthly Active Users as listed on [FediDB](https://fedidb.org/software).\n   - In addition, for **servers** that have a unique recognizable logo, the User Count as listed on [FediDB](https://fedidb.org/network) should be 100,000 or higher.\n1. The brand's popularity can be illustrated by other publicly available & verifiable statistic (e.g., downloads, usage).\n   - Stats should preferably also include data on one of our existing brands so a direct comparison can be made.\n1. The brand's popularity can be illustrated through a worldwide Google Trends comparison, or similar.\n   - Must be with a similar brand that is already in our library and still within our scope, or that would qualify under any metric.\n   - Must be unambiguous (i.e., it's not a suitable metric for brands with generic words for names).\n   - Trending equal to or higher than the compared brand will be considered in scope.\n   - Trending lower than the compared brand but with an upward trajectory will require the consensus of the person providing the comparison and at least 2 project maintainers.\n1. Where applicable, the primary repository for the brand's GitHub project meets the following requirements (see note below):\n   - A minimum of 5k GitHub stars will be required for consideration, providing,\n   - The repository is still active, and,\n   - Its [star history](https://star-history.com) is on a consistently upward trajectory.\n\nIf all else fails, though, feel free to make a good case for the popularity of the brand you're requesting on any other grounds, provided it can be backed up with verifiable data. Example: a car manufacturer's own website falls outside our scope but a major dealership dealing exclusively or primarily in that brand falls within our scope - in that case we'd accept the manufacturer as being popular. If you can provide a _particularly_ good metric that can be applied to other brands then it will be added to this list.\n\n> [!NOTE]\\\n> All metrics & cut-offs above are subject to ongoing review and potential change. These current metrics were devised in order to no longer rely on GitHub stars as an indication of a project's popularity. But, for projects that only exist on GitHub, we do still need some way of assessing their popularity so, until we can come up with a better way to do so, we have kept stars for the time being but will not be putting as much weight on them as in the past. If you know of a better way of assessing the popularity of a GitHub project then please create an issue for discussion.\n\n### Opening an Issue\n\nWhen submitting a request for a new or updated icon include helpful information such as:\n\n- **Issue Title:** The brand name. For example:\n\n  - New Icons: `Request: GitHub Icon`\n  - Icon Updates: `Update: GitHub Color` or `Update: GitHub Icon`\n\n- **Issue Body:** Links to official sources for the brand's icon and colors (e.g. media kits, brand guidelines, SVG files, etc.)\n\nIf you have an affiliation to the brand you are requesting that allows you to speak on their behalf then please disclose that in your issue as it can help speed up our research process.\n\n## Adding or Updating an Icon\n\n> [!NOTE]\\\n> If you decide to add an icon without requesting it first, the requirements above still apply.\n\n### 1. Identify Official Logos and Colors\n\nMost of the icons and brand colors on SimpleIcons have been derived from official sources. Using official sources helps ensure that the icons and colors in SimpleIcons accurately match the brand they represent. Thankfully, this is usually a simple process as organizations often provide brand guides and high-quality versions of their logo for download.\n\nOfficial high quality brand logos and brand colors can usually be found in the following locations:\n\n1. About pages, Press pages, Media Kits, and Brand Guidelines.\n1. Website headers\n1. Favicons\n1. Wikimedia (which should provide a source)\n1. GitHub repositories\n\nIt may be the case that no official source exists, but an unofficial icon has gained widespread acceptance and popularity. In such cases the unofficial icon can be included, but the details will be judged on a case-by-case basis. The JavaScript icon is an example of this. Notice that an unofficial source will never supersede an official one, even if it is more popular. An unofficial icon will only be accepted if no official option exists.\n\n#### Icon Guidelines\n\nWorking with an SVG version of the logo is best. In the absence of an SVG version, other vector filetypes may work as well (e.g. EPS, AI, PDF). In the absence of vector logos, a vector can be created from a high-quality rasterized image, however, this is much more labor-intensive.\n\nIf the icon includes a (registered) trademark icon we follow the guidelines below to decide whether to include the symbol or not:\n\n- If brand guidelines explicitly require including the symbol, it must be included.\n- If the brand itself includes the symbol with all uses of the logo, even at small sizes, it must be included.\n- If the symbol is incorporated into the design of the logo (e.g. [Chupa Chups]), it must be included.\n- If there is ambiguity about the conditions under which the symbol is required, it must be included if it is a _registered trademark symbol_ (®) but not if is a _trademark symbol_ (™).\n- If brand guidelines say it _may_ be removed, usually when the icon is displayed at small sizes, it must not be included.\n- If there is no explicit requirement that a symbol must be included, it must not be included.\n\n[Chupa Chups]: https://github.com/simple-icons/simple-icons/blob/develop/icons/chupachups.svg\n\n#### Color Guidelines\n\nFor color, the brand's primary color should be used. The official color of a brand is usually found in their brand guidelines, media kits, or some of the other locations mentioned above. If no official color can be identified, use the brand's primary web color or the most prominent color in the logo itself (please indicate why you choose the particular color in your pull request). If an icon's primary color is made up of a gradient, use [Eric Meyer's Color Blender tool] to pick the color of the calculated midpoint. Simple Icons stores brand colors in the standard 6 character hexadecimal format.\n\n[Eric Meyer's Color Blender tool]: https://meyerweb.com/eric/tools/color-blend/#::1:hex\n\n### 2. Extract the Icon from the Logo\n\nThere are many different tools for editing SVG files, some options include:\n\n| Name | Description | Platform | Price |\n| :-- | :-- | :-: | :-: |\n| [Inkscape](https://inkscape.org/) | Vector Graphics Editor | Windows, Mac, Linux | Free |\n| [SVGEdit](https://svgedit.netlify.app/editor/index.html) | Vector Graphics Editor | Web | Free |\n| [Boxy SVG](https://boxy-svg.com/) | Vector Graphics Editor | Windows, Mac, Linux | $ / Free (Linux, Web) |\n| [Affinity Designer](https://affinity.serif.com/designer/) | Vector Graphics Editor | Windows, Mac | $ |\n| [Adobe Illustrator](https://www.adobe.com/products/illustrator.html) | Vector Graphics Editor | Windows, Mac | $ - $$$ |\n\nUsing your preferred tool you should:\n\n1. Isolate the icon from any text or extraneous items.\n1. Merge any overlapping paths.\n1. Compound all paths into one.\n1. Change the icon's viewbox/canvas/page size to 24x24.\n1. Scale the icon to fit the viewbox, while preserving the icon's original proportions. This means the icon should be touching at least two sides of the viewbox.\n1. Center the icon horizontally and vertically.\n1. Remove all colors. The icon should be monochromatic.\n1. Export the icon as an SVG.\n\nSome icons can't be easily converted to a monochromatic version due to colour changes, shadows, or other effects. For such cases, the addition of gaps is the recommended approach, with a preferred width of 0.5px. In some situations, a different gap may be required, but that will be determined on a per-case basis.\n\nIf you have any problems or questions while creating the SVG, check out [the GitHub Discussions]. You may find an answer to your question there or you can ask your question if you did not find an answer.\n\n[the GitHub Discussions]: https://github.com/simple-icons/simple-icons/discussions/categories/help-with-svgs\n\n### 3. Optimize the Icon\n\nAll icons in Simple Icons have been optimized with the [SVGO tool]. This can be done in one of three ways:\n\n- The [SVGO Command Line Tool](https://github.com/svg/svgo)\n  - Run the following command `npx svgo icons/file-to-optimize.svg`\n  - Check if there is a loss of quality in the output, if so increase the precision.\n- The [SVGOMG Online Tool](https://jakearchibald.github.io/svgomg/)\n  - Click \"Open SVG\" and select an SVG file.\n  - Set the precision to about 3, depending on if there is a loss of quality.\n  - Leave the remaining settings untouched (or reset them with the button at the bottom of the settings).\n  - Click the download button.\n- The [SVGO Command Line Tool](https://github.com/svg/svgo) in Docker\n  - If none of the options above work for you, it is possible to build a Docker image for compressing the images.\n  - Build: `docker build . -t simple-icons`\n  - Run: `docker run --rm -v ${PWD}/icons/file-to-optimize.svg:/image.svg simple-icons`\n\nAfter optimizing the icon, double-check it against your original version to ensure no visual imperfections have crept in. Also, make sure that the dimensions of the path have not been changed so that the icon no longer fits exactly within the canvas. We currently check the dimensions up to a precision of 3 decimal points.\n\n[SVGO tool]: https://github.com/svg/svgo\n\n### 4. Annotate the Icon\n\nEach icon in Simple Icons has been annotated with a number of attributes and elements to increase accessibility. These include:\n\n- An svg element with the following attributes, ordered respectively:\n  - An img role attribute.\n    - `role=\"img\"`\n  - A 24x24 viewbox.\n    - `viewBox=\"0 0 24 24\"`\n  - The svg namespace.\n    - `xmlns=\"http://www.w3.org/2000/svg\"`\n- A title element containing the brand name.\n  - `<title>Adobe Photoshop</title>`\n\nHere is _part of_ the svg for the Adobe Photoshop icon as an example:\n\n```svg\n<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Photoshop</title>...</svg>\n```\n\n### 5. Check the Icon\n\nThe final icon should:\n\n- Be properly annotated [as discussed above](#4-annotate-the-icon).\n- Be monochromatic.\n  - Remove all fill colors so that icon defaults to black.\n- Be scaled to fit the viewbox, while preserving the icon's original proportions.\n  - This means the icon should be touching at least two sides of the viewbox.\n- Be vertically and horizontally centered.\n- Be minified to a single line with no formatting.\n- Contain only a single `path` element.\n- Not contain extraneous elements.\n  - This includes: `circle`, `ellipse`, `rect`, `polygon`, `line`, `g`, etc.\n- Not contain extraneous attributes.\n  - This includes: `width`, `height`, `fill`, `stroke`, `clip`, `font`, etc.\n\nHere is the svg for the Adobe Photoshop icon as an example:\n\n```svg\n<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Adobe Photoshop</title><path d=\"M0 .3v23.4h24V.3H0zm1 1h22v21.4H1V1.3zm4.8 4.48c0-.067.14-.116.224-.116.644-.033 1.588-.05 2.578-.05 2.772 0 3.85 1.52 3.85 3.466 0 2.54-1.842 3.63-4.102 3.63-.38 0-.51-.017-.775-.017v3.842c0 .083-.033.116-.115.116H5.916c-.083 0-.115-.03-.115-.113V5.78zm1.775 5.312c.23.016.412.016.81.016 1.17 0 2.27-.412 2.27-1.996 0-1.27-.786-1.914-2.122-1.914-.396 0-.775.016-.957.033v3.864zm8.607-1.188c-.792 0-1.056.396-1.056.726 0 .363.18.61 1.237 1.155 1.568.76 2.062 1.485 2.062 2.557 0 1.6-1.22 2.46-2.87 2.46-.876 0-1.62-.183-2.05-.43-.065-.033-.08-.082-.08-.165V14.74c0-.1.048-.133.114-.084.624.413 1.352.594 2.012.594.792 0 1.122-.33 1.122-.776 0-.363-.23-.677-1.237-1.205-1.42-.68-2.014-1.37-2.014-2.527 0-1.287 1.006-2.36 2.755-2.36.86 0 1.464.132 1.794.28.082.05.1.132.1.198v1.37c0 .083-.05.133-.15.1-.444-.264-1.1-.43-1.743-.43z\"/></svg>\n```\n\n### 6. Name the Icon\n\nThe filename of the SVG should correspond to the `<title>` used in the markup file mentioned above, and it should follow the rules below. If you're in doubt, you can always run `npm run get-filename -- \"Brand name\"` to get the correct filename.\n\n1. Use **lowercase letters** without **whitespace**, for example:\n\n   ```yml\n   title: Adobe Photoshop\n   filename: adobephotoshop.svg\n   ```\n\n1. Only use **latin** letters, for example:\n\n   ```yml\n   title: Citroën\n   filename: citroen.svg\n   ```\n\n1. Replace the following symbols with their alias:\n\n   | Symbol | Alias |\n   | :----: | ----- |\n   |   +    | plus  |\n   |   .    | dot   |\n   |   &    | and   |\n\n   for example:\n\n   ```yml\n   title: .Net\n   filename: dotnet.svg\n   ```\n\n1. On rare occasions the resulting name will clash with the name of an existing SVG file in our collection. To resolve such conflicts append `_[MODIFIER]` to the name, where `[MODIFIER]` is a short descriptor of the brand or the service they provide and follows the same rules of construction as above.\n\n   for example:\n\n   ```yml\n   title: Hive\n   filename: hive_blockchain.svg\n   ```\n\n### 7. Update the JSON Data for SimpleIcons.org\n\nIcon metadata should be added to the `_data/simple-icons.json` file. Each icon in the array has three required values:\n\n- The `title` of the new SVG.\n- A `hex` color value that matches the brand's primary color. All uppercase and without the `#` symbol.\n- The `source` URL of the logo being used. There are [more details below](#source-guidelines).\n\nThere are also [optional values](#optional-data) that may be provided for each icon, which are listed below.\n\nHere is the object of a fictional brand as an example:\n\n```json\n{\n    \"title\": \"A Fictional Brand\",\n    \"hex\": \"123456\",\n    \"source\": \"https://www.a-fictional-brand.org/logo\"\n}\n```\n\nYou can use `npm run add-icon-data` to add metadata via a CLI prompt.\n\nMake sure the icon is added in alphabetical order. If you're in doubt, you can always run `npm run ourlint` - this will tell you if any of the JSON data is in the wrong order.\n\n#### Optional Data\n\nAdditionally, each icon in the `_data/simple-icons.json` file may be given any of the following optional values:\n\n- The `slug` must be used to specify the icon's file name in cases where a modifier has been added to it in order to resolve a clash with an existing icon's name.\n- The `guidelines` may be used to specify the URL of the brand's guidelines/press kit/etc. This is useful if the SVG file was sourced from a different place, still if the SVG file was sourced from the guidelines, the URL should be duplicated here.\n- The `license` may be used to specify the license under which the icon is available. This is an object with a `type` and `url`. The `type` should be a [SPDX License ID](https://spdx.org/licenses/) or `\"custom\"`, the `url` is optional unless the `type` is `\"custom\"`.\n\nHere is the object of the fictional brand from before, but with all optional values, as an example:\n\n```json\n{\n    \"title\": \"A Fictional Brand\",\n    \"slug\": \"afictionalbrand_modifier\",\n    \"hex\": \"123456\",\n    \"source\": \"https://www.a-fictional-brand.org/logo\",\n    \"guidelines\": \"https://www.a-fictional-brand.org/brand-guidelines\",\n    \"license\": {\n        \"type\": \"CC0-1.0\",\n        \"url\": \"https://www.a-fictional-brand.org/logo/license\"\n    }\n}\n```\n\n> Non secured HTTP URLs are forbidden. If a brand's website only supports HTTP, you must still declare the URL using the `https://` protocol.\n\n#### Source Guidelines\n\nWe use the source URL as a reference for the current SVG in our repository and as a jumping-off point to find updates if the logo changes. If you used one of the sources listed below, make sure to follow these guidelines. If you're unsure about the source URL you can open a Pull Request and ask for help from others.\n\nIf the SVG is sourced from:\n\n- **Branding page**: For an SVG from a branding page the source URL should link to the branding page and not the image, PDF, or archive (such as `.zip`) file.\n- **Company website**: If the SVG is found on the company website (but there is no branding page) the source URL should link to a common page, such as the home page or about page, that includes the source image and not the image file itself.\n- **GitHub**: For an SVG from a GitHub (GitLab, BitBucket, etc.) repository the source URL should link to the file that was used as source material. If the color does not come from the file, its origin should be stated in the Pull Request description.\n\n  The commit hash should always be part of the URL. On GitHub, you can get the correct URL by pressing <kbd>y</kbd> on the GitHub page you want to link to. You can get help at the [getting permanent links to files page](https://help.github.com/en/github/managing-files-in-a-repository/getting-permanent-links-to-files).\n\n- **Wikipedia**: For an SVG from Wikipedia/Wikimedia the source URL should link to the logo file's page on the relevant site, and not the brand's Wikipedia pages. For example, [this is the link for AmericanExpress](https://commons.wikimedia.org/wiki/File:American_Express_logo.svg).\n\nIn general, make sure the URL does not contain any tracking identifiers.\n\n#### Aliases\n\nLastly, we aim to provide aliases of three types for various reasons. Each type of alias and its purpose can be found below. If you're unsure, you can mention an alias you're considering in your Pull Request so it can be discussed.\n\n##### Also Known As\n\nWe collect \"also known as\" names to make it easier to find brands that are known by different names or by their abbreviation/full name. This does not include localized names, which are recorded separately. To add an \"also known as\" name you add the following to the icon data:\n\n```json\n{\n    \"title\": \"the original title\",\n    \"aliases\": {\n        \"aka\": [\n            \"tot\",\n            \"thetitle\"\n        ]\n    }\n}\n```\n\nWhere the string is **different** from the original title as well as all other strings in the list.\n\n##### Duplicates\n\nWe collect the names of duplicates, brands that use the same icon but have a different name, to prevent duplicating an SVG while at the same time making the SVG available under the name of the duplicate. To add a duplicate you add the following to the icon data:\n\n```json5\n{\n    \"title\": \"the original title\",\n    \"hex\": \"123456\",\n    \"aliases\": {\n        \"dup\": [\n            {\n                \"title\": \"the duplicate's title\",\n                \"hex\": \"654321\", // Only if different from original's color\n                \"guidelines\": \"...\" // Only if different from original's guidelines\n            }\n        ]\n    }\n}\n```\n\nWhere the nested `title` is the name of the duplicate brand. The other fields, `hex` and `guidelines`, are only provided if they differ from the original.\n\n##### Localization\n\nWe collect localized names to make it possible to find the brand by it's local name, as well as to provide SVGs with localized titles. To add a localized name you add the following to the icon data:\n\n```json\n{\n    \"title\": \"the original title\",\n    \"aliases\": {\n        \"loc\": {\n            \"en-US\": \"A different title\"\n        }\n    }\n}\n```\n\nWhere the `locale` is an [IETF language tag] and `title` is a **different** title from the original title.\n\n[IETF language tag]: https://en.wikipedia.org/wiki/IETF_language_tag\n\n### 8. Create a Pull Request\n\nOnce you've completed the previous steps, create a pull request to merge your edits into the _develop_ branch. You can run `npm run lint` to check if there are any issues you still need to address.\n\nIf you have an affiliation to the brand you contributing that allows you to speak on their behalf then please disclose that in your pull request as it can help speed up our research and review processes.\n\n### Requesting Permission\n\nIf a brand's terms and conditions state that we need permission to include their brand, we will tag related issues and PRs with `permission required`. Anybody creating a PR for one of these icons is responsible (even if we discover permission requirements during PR review) for obtaining said permission.\n\nIf a contributor have been asked to obtain permission, they have 2 weeks to confirm they've reached out to the brand. If they do not confirm they have done this during that time, the PR will be closed.\n\nIf the contributor _has_ confirmed they've reached out to the brand, we will wait a maximum of 2 months for a response. If the response is an outright 'no' or is ambiguous, both the PR and issue will be closed, and the issue will marked as `will not add`. If the brand does not respond, we may close the PR or mark it as a draft, depending on whether the contributor is still actively pursuing a response. If the brand approves usage, the contributor should add the email response to the comments of the PR, and we will continue to merge the icon into the collection.\n\n#### Example Email\n\n```text\nDear [Brand Name],\n\nI am contributing to the Simple Icons project on GitHub (https://github.com/simple-icons/simple-icons) and would like to add your brand's icon.\nOne of the maintainers has requested - as per your Terms and Conditions - that I reach out to formally obtain permission prior to accepting it into their collection.\nCould you please let me know at your earliest convenience whether or not we are okay to include your brand's icon in the project?\n\nKind regards,\n\n[Your name]\n```\n\n## Testing Package Locally\n\n- Make sure you have [Node.js](https://nodejs.org/en/download/) installed. At least version `^12.20.0 || ^14.13.1 || >=16.0.0` is required.\n- Install the dependencies using `$ npm install`.\n- Build and test the package using `$ npm test`.\n- Run the project linting process using `$ npm run lint`.\n\n## Using Docker\n\nYou can build a Docker image for this project which can be used as a development environment and allows you to run SVGO safely. First, build the Docker image for simple-icons (if you haven't yet):\n\n```shell\ndocker build . -t simple-icons\n```\n\nThen, start a Docker container for simple-icons and attach to it:\n\n```shell\ndocker run -it --rm --entrypoint \"/bin/ash\" simple-icons\n```\n\n## Developing Third-Party Extensions\n\nA SDK is included in the `simple-icons/sdk` entrypoint of the npm package to make it easier the development of third party extensions with JavaScript and TypeScript.\n\n```typescript\nimport {getIconsData, type IconData} from 'simple-icons/sdk';\n\nconst iconsData: Promise<IconData[]> = getIconsData();\n```\n\n```javascript\nimport {getIconsData} from 'simple-icons/sdk';\n\n/* @typedef {import(\"./simple-icons/sdk\").IconData} IconData */\n\n/* @type {Promise<IconData[]>} */\nconst iconsData = getIconsData();\n```\n"
        },
        {
          "name": "DISCLAIMER.md",
          "type": "blob",
          "size": 4.625,
          "content": "# Disclaimer\n\nSimple Icons asks that its users read this disclaimer fully before including an icon in their project.\n\n## Table of Contents\n\n- [Licenses, Copyrights & Trademarks](#licenses-copyrights--trademarks)\n- [Brand Guidelines](#brand-guidelines)\n- [Update of Brands](#update-of-brands)\n- [Removal of Brands](#removal-of-brands)\n\n## Licenses, Copyrights & Trademarks\n\n> [!IMPORTANT]\\\n> The addition of licenses to Simple Icons is an ongoing project. Hence, the absence of licence data for a particular icon does not imply that the icon is not released under a license.\n\n<!-- makdownlint-disable-next-line no-blanks-blockquote -->\n\n> [!NOTE]\\\n> Simple Icons is released under CC0 - though that doesn't mean to imply that all icons within the project are also CC0. Please see individual licenses where available.\n\nSimple Icons provides data on the license under which icons are available. We ask users to carefully consider this when using an icon. As licenses are subject to change we also ask our users to regularly check if the license of the icons they use have been changed.\n\nThe license under which an icon is available can be found in the icon's entry in the JSON data file in the NPM and Packagist packages, or through the license link on the icon's card on [the Simple Icons website].\n\nAs we rely largely on our community to help us keep Simple Icons up-to-date, the license data for an icon may be outdated. If you find that the license data provided is outdated, please [submit an issue][icon-outdated-issues] to [the Simple Icons GitHub repository].\n\nIf an icon includes a registered trademark (`®`) or trademark symbol (`™`) the recommendations outlined in [the Simple Icons Contributing Guidelines] are followed to decide whether to include the symbol or not.\n\nSimple Icons cannot be held responsible for any legal activity raised by a brand, or users of the package. We ask that our users seek the correct permissions to use the icons relevant to their project.\n\n## Brand Guidelines\n\n> [!NOTE]\\\n> The addition of guidelines to Simple Icons is an ongoing project. In the meantime, users of Simple Icons are instead encouraged to check the `source` URL as, in some cases, the icon will have been sourced from official guidelines. The lack of a `guidelines` entry for a particular brand does not imply that the brand has no guidelines.\n\nSimple Icons provides a link to a brand's _branding guidelines_ (or similar) if the brand provides one. We ask our users read these guidelines and ensure their usage of the brand's icon is in accordance with them. As guidelines are subject to change we also ask our users to regularly check if the brand guidelines of the icons they use have been updated.\n\nThe brand guidelines can be found in the icon's entry in the JSON data file in the NPM and Packagist packages, or through the \"Brand Guidelines\" link on the icon's card on [the Simple Icons website].\n\nAs we rely largely on our community to help us keep Simple Icons up-to-date, the guidelines link for a brand may be outdated. If you find that the guidelines are outdated, please [submit an issue][icon-outdated-issues] to [the Simple Icons GitHub repository].\n\n## Update of Brands\n\nShould a brand wish for their icon or data to be updated, please [submit an issue][icon-outdated-issues] to [the Simple Icons GitHub repository]. In the issue, please explain your affiliation with the company and reasons for the update. We generally release updates once a week, but can make exceptions for immediate updates of brands.\n\n## Removal of Brands\n\nShould a brand wish for their icon to be removed from the package, contact `removals at simpleicons dot org` explaining your affiliation with the company, and reasons for removal. Alternatively, it is also possible to [submit an issue][removal-issues] on [the Simple Icons GitHub repository] with the same information. We generally remove icons that no longer [meet our criteria] twice a year in our major releases - but can occasionally make exceptions for immediate removal of brands.\n\n[meet our criteria]: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#requesting-an-icon\n[icon-outdated-issues]: https://github.com/simple-icons/simple-icons/issues/new?assignees=&labels=update+icon%2Fdata&template=icon_update.yml&title=Update%3A+\n[removal-issues]: https://github.com/simple-icons/simple-icons/issues/new?assignees=&labels=breaking+change&template=icon_removal.yml&title=Remove%3A+\n[the simple icons contributing guidelines]: https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#icon-guidelines\n[the simple icons github repository]: https://github.com/simple-icons/simple-icons\n[the simple icons website]: https://simpleicons.org/\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.205078125,
          "content": "FROM node:22-alpine\n\nRUN apk add --no-cache git\n\nWORKDIR /simple-icons\nCOPY package.json /simple-icons/\nRUN npm install --ignore-scripts --no-audit --no-fund\n\nCOPY . .\n\nENTRYPOINT [\"npx\", \"svgo\", \"/image.svg\"]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 6.4150390625,
          "content": "# CC0 1.0 Universal\n\n## Statement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an “owner”) of an original work of authorship and/or a database (each, a “Work”).\n\nCertain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (“Commons”) that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the “Affirmer”), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (“Copyright and Related Rights”). Copyright and Related Rights include, but are not limited to, the following:\n    1. the right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work;\n    2. moral rights retained by the original author(s) and/or performer(s);\n    3. publicity and privacy rights pertaining to a person’s image or likeness depicted in a Work;\n    4. rights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(i), below;\n    5. rights protecting the extraction, dissemination, use and reuse of data in a Work;\n    6. database rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and\n    7. other similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer’s Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “Waiver”). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer’s heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer’s express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer’s express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer’s Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “License”). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer’s express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n    1. No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.\n    2. Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.\n    3. Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person’s Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work.\n    4. Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.\n\nFor more information, please see <https://creativecommons.org/publicdomain/zero/1.0>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.29296875,
          "content": "<p align=\"center\">\n<img src=\"https://cdn.simpleicons.org/simpleicons/000/fff\" alt=\"Simple Icons\" width=70>\n<h3 align=\"center\">Simple Icons</h3>\n<p align=\"center\">\nOver 3200 Free SVG icons for popular brands. See them all on one page at <a href=\"https://simpleicons.org\">SimpleIcons.org</a>. Contributions, corrections & requests can be made on GitHub.</p>\n</p>\n\n<p align=\"center\">\n<a href=\"https://github.com/simple-icons/simple-icons/actions?query=workflow%3AVerify+branch%3Adevelop\"><img src=\"https://img.shields.io/github/actions/workflow/status/simple-icons/simple-icons/verify.yml?branch=develop&logo=github&label=tests\" alt=\"Build status\"/></a>\n<a href=\"https://www.npmjs.com/package/simple-icons\"><img src=\"https://img.shields.io/npm/v/simple-icons.svg?logo=npm\" alt=\"NPM version\"/></a>\n<a href=\"https://packagist.org/packages/simple-icons/simple-icons\"><img src=\"https://img.shields.io/packagist/v/simple-icons/simple-icons?logo=packagist&logoColor=white\" alt=\"Build status\"/></a>\n<br/>\n<a href=\"https://simpleicons.org\"><img src=\"https://img.shields.io/badge/dynamic/json?color=informational&label=icons&prefix=%20&logo=simpleicons&query=%24.length&url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fdevelop%2F_data%2Fsimple-icons.json\" alt=\"Number of icons currently in the library\"/></a>\n<a href=\"https://discord.gg/vUXFa7t5xJ\"><img src=\"https://img.shields.io/discord/1142044630909726760?logo=discord&logoColor=white&label=discord\" alt=\"Number of users active in our Discord server\"/></a>\n<a href=\"https://opencollective.com/simple-icons\"><img src=\"https://img.shields.io/opencollective/all/simple-icons?logo=opencollective\" alt=\"Backers and sponsors on Open Collective\"/></a>\n</p>\n\n## Usage\n\n> [!IMPORTANT]\\\n> We ask that all users read our [legal disclaimer](https://github.com/simple-icons/simple-icons/blob/develop/DISCLAIMER.md) before using icons from Simple Icons.\n\n### General Usage\n\nIcons can be downloaded as SVGs directly from [simpleicons.org](https://simpleicons.org) - simply click the download button of the icon you want, and the download will start automatically.\n\n### CDN Usage\n\nIcons can be served from a CDN such as [jsDelivr](https://www.jsdelivr.com/package/npm/simple-icons) or [unpkg](https://unpkg.com/browse/simple-icons/). Simply use the `simple-icons` npm package and specify a version in the URL like the following:\n\n```html\n<img height=\"32\" width=\"32\" src=\"https://cdn.jsdelivr.net/npm/simple-icons@v14/icons/[ICON SLUG].svg\" />\n<img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v14/icons/[ICON SLUG].svg\" />\n```\n\nWhere `[ICON SLUG]` is replaced by the [slug] of the icon you want to use, for example:\n\n```html\n<img height=\"32\" width=\"32\" src=\"https://cdn.jsdelivr.net/npm/simple-icons@v14/icons/simpleicons.svg\" />\n<img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v14/icons/simpleicons.svg\" />\n```\n\nThese examples use the latest major version. This means you won't receive any updates following the next major release. You can use `@latest` instead to receive updates indefinitely. However, this will result in a `404` error if the icon is removed.\n\n#### CDN with colors\n\nWe also provide a CDN service which allows you to use colors.\n\n```html\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/[ICON SLUG]\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/[ICON SLUG]/[COLOR]\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/[ICON SLUG]/[COLOR]/[DARK_MODE_COLOR]\" />\n```\n\nWhere `[COLOR]` is optional, and can be replaced by the [hex colors](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color) or [CSS keywords](https://www.w3.org/wiki/CSS/Properties/color/keywords) of the icon you want to use. The color is defaulted to the HEX color of the icon shown in [simpleicons.org website](https://simpleicons.org). `[DARK_MODE_COLOR]` is used for dark mode. The [CSS prefers-color-scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme) will be used when a value is specified. For example:\n\n```html\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/gray\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/hotpink\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/0cf\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/0cf9\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/00ccff\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/00ccff99\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/orange/pink\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/_/eee\" />\n<img height=\"32\" width=\"32\" src=\"https://cdn.simpleicons.org/simpleicons/eee/_\" />\n```\n\nYou can use a `viewbox=auto` parameter to get a auto-sized viewbox. This is useful if you want all icons rendered with consistent size:\n\n```html\n<img height=\"20\" src=\"https://cdn.simpleicons.org/github?viewbox=auto\" />\n<img height=\"20\" src=\"https://cdn.simpleicons.org/simpleicons?viewbox=auto\" />\n<img height=\"20\" src=\"https://cdn.simpleicons.org/awesomelists?viewbox=auto\" />\n```\n\n### Node Usage <img src=\"https://cdn.simpleicons.org/nodedotjs/000/fff\" alt=\"Node\" align=left width=24>\n\nThe icons are also available through our npm package. To install, simply run:\n\n```shell\nnpm install simple-icons\n```\n\nAll icons are imported from a single file, where `[ICON SLUG]` is replaced by a capitalized [slug]. We highly recommend using a bundler that can tree shake such as [webpack](https://webpack.js.org/) to remove the unused icon code:\n\n```javascript\n// Import a specific icon by its slug as:\n// import { si[ICON SLUG] } from 'simple-icons'\n\n// For example:\n// use import/esm to allow tree shaking\nimport {siSimpleicons} from 'simple-icons';\n// or with require/cjs\nconst {siSimpleicons} = require('simple-icons');\n```\n\nIt will return an icon object:\n\n```javascript\nconsole.log(siSimpleicons);\n\n/*\n{\n    title: 'Simple Icons',\n    slug: 'simpleicons',\n    hex: '111111',\n    source: 'https://simpleicons.org/',\n    svg: '<svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">...</svg>',\n    path: 'M12 12v-1.5c-2.484 ...',\n    guidelines: 'https://simpleicons.org/styleguide',\n    license: {\n        type: '...',\n        url: 'https://example.com/'\n    }\n}\n\nNOTE: the `guidelines` entry will be `undefined` if we do not yet have guidelines for the icon.\nNOTE: the `license` entry will be `undefined` if we do not yet have license data for the icon.\n*/\n```\n\nIf you need to iterate over all icons, use:\n\n```javascript\nimport * as icons from 'simple-icons';\n```\n\n#### TypeScript Usage <img src=\"https://cdn.simpleicons.org/typescript/000/fff\" alt=\"Typescript\" align=left width=19 height=19>\n\nType definitions are bundled with the package.\n\n```typescript\nimport type {SimpleIcon} from 'simple-icons';\n```\n\n### PHP Usage <img src=\"https://cdn.simpleicons.org/php/000/fff\" alt=\"Php\" align=left width=24 height=24>\n\nThe icons are also available through our Packagist package. To install, simply run:\n\n```shell\ncomposer require simple-icons/simple-icons\n```\n\nThe package can then be used as follows, where `[ICON SLUG]` is replaced by a [slug]:\n\n```php\n<?php\n// Import a specific icon by its slug as:\necho file_get_contents('path/to/package/icons/[ICON SLUG].svg');\n\n// For example:\necho file_get_contents('path/to/package/icons/simpleicons.svg');\n\n// <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">...</svg>\n?>\n```\n\n## Third-Party Extensions\n\nThe below are known extensions to third-party tools.\n\n| Extension | Author |\n| :-- | :-- |\n| [Blender add-on](https://github.com/mondeja/simple-icons-blender) <img src=\"https://cdn.simpleicons.org/blender/000/fff\" alt=\"Blender\" align=left width=24 height=24> | [@mondeja](https://github.com/mondeja) |\n| [Boxy SVG library](https://boxy-svg.com/ideas/298/simple-icons-library-provider) <img src=\"https://cdn.simpleicons.org/boxysvg/000/fff\" alt=\"Boxy SVG\" align=left width=24 height=24> | [@Jarek](https://boxy-svg.com/profiles/0000000000/jarek) |\n| [Drawio library](https://github.com/mondeja/simple-icons-drawio) <img src=\"https://cdn.simpleicons.org/diagramsdotnet/000/fff\" alt=\"Drawio\" align=left width=24 height=24> | [@mondeja](https://github.com/mondeja) |\n| [Figma plugin](https://www.figma.com/community/plugin/1149614463603005908) <img src=\"https://cdn.simpleicons.org/figma/000/fff\" alt=\"Figma\" align=left width=24 height=24> | [@LitoMore](https://github.com/LitoMore) |\n| [Miro app](https://miro.com/marketplace/brand-icons/) <img src=\"https://cdn.simpleicons.org/miro/000/fff\" alt=\"Miro\" align=left width=24 height=24> | [@LitoMore](https://github.com/LitoMore) |\n| [Raycast extension](https://www.raycast.com/litomore/simple-icons) <img src=\"https://cdn.simpleicons.org/raycast/000/fff\" alt=\"Raycast\" align=left width=24 height=24> | [@LitoMore](https://github.com/LitoMore) |\n| [Stream Deck icon pack](https://github.com/mackenly/simple-icons-stream-deck) <img src=\"https://cdn.simpleicons.org/elgato/000/fff\" alt=\"Stream Deck\" align=left width=24 height=24> | [@mackenly](https://github.com/mackenly) |\n| [Webflow app](https://webflow.com/apps/detail/simple-icons) <img src=\"https://cdn.simpleicons.org/webflow/000/fff\" alt=\"Webflow\" align=left width=24 height=24> | [@diegoliv](https://github.com/diegoliv) |\n\nMaintain an extension? [Submit a PR][open-pr] to include it in the list above.\n\n## Third-Party Libraries\n\nThe below are known third-party libraries for use in your own projects. We only keep items in the list that are at least up to date with our previous major version.\n\n| Library | Author | License | Simple Icons Version |\n| :-- | :-- | :-: | :-: |\n| [Angular package](https://github.com/khalilou88/semantic-icons/tree/main/libs/simple-icons) <img src=\"https://cdn.simpleicons.org/angular/000/fff\" alt=\"Angular\" align=left width=24 height=24> | [@khalilou88](https://github.com/khalilou88) | ![License](https://img.shields.io/github/license/khalilou88/semantic-icons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fkhalilou88%2Fsemantic-icons%2Fmain%2Fpackage.json&query=%24..devDependencies%5B'simple-icons'%5D&logo=simpleicons&label=version) |\n| [Astro package](https://github.com/dzeiocom/simple-icons-astro) <img src=\"https://cdn.simpleicons.org/astro/000/fff\" alt=\"Astro\" align=left width=24 height=24> | [@Aviortheking](https://github.com/aviortheking) | ![License](https://img.shields.io/github/license/dzeiocom/simple-icons-astro) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fdzeiocom%2Fsimple-icons-astro%2Fmaster%2Fpackage.json&query=%24.version&logo=simpleicons&label=version) |\n| [Blazor Nuget package](https://github.com/TimeWarpEngineering/timewarp-simple-icons) <img src=\"https://cdn.simpleicons.org/blazor/000/fff\" alt=\"Blazor\" align=left width=24 height=24> | [@TimeWarpEngineering](https://github.com/TimeWarpEngineering) | ![License](https://img.shields.io/github/license/TimeWarpEngineering/timewarp-simple-icons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/xml?url=https%3A%2F%2Fraw.githubusercontent.com%2FTimeWarpEngineering%2Ftimewarp-simple-icons%2Fmain%2Fsource%2Ftimewarp-simple-icons%2Ftimewarp-simple-icons.csproj&query=%2FProject%2FPropertyGroup%2FVersion&logo=simpleicons&label=version) |\n| [Flutter package](https://github.com/jlnrrg/simple_icons) <img src=\"https://cdn.simpleicons.org/flutter/000/fff\" alt=\"Flutter\" align=left width=24 height=24> | [@jlnrrg](https://github.com/jlnrrg) | ![License](https://img.shields.io/github/license/jlnrrg/simple_icons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/yaml?url=https%3A%2F%2Fraw.githubusercontent.com%2Fjlnrrg%2Fsimple_icons%2Fmaster%2Fpubspec.yaml&query=%24.version&logo=simpleicons&logoColor=white&label=version) |\n| [Framer component](https://github.com/LitoMore/simple-icons-framer) <img src=\"https://cdn.simpleicons.org/framer/000/fff\" alt=\"Framer\" align=left width=24 height=24> | [@LitoMore](https://github.com/LitoMore) | ![License](https://img.shields.io/github/license/LitoMore/simple-icons-framer) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fmaster%2Fpackage.json&query=%24.version&logo=simpleicons&label=version) |\n| [Hugo module](https://github.com/foo-dogsquared/hugo-mod-simple-icons) <img src=\"https://cdn.simpleicons.org/hugo/000/fff\" alt=\"Hugo\" align=left width=24 height=24> | [@foo-dogsquared](https://github.com/foo-dogsquared) | ![License](https://img.shields.io/github/license/foo-dogsquared/hugo-mod-simple-icons) | ![Simple Icons version](https://img.shields.io/github/v/tag/foo-dogsquared/hugo-mod-simple-icons?logo=simpleicons&label=version) |\n| [Kirby plugin](https://github.com/runxel/kirby3-simpleicons) <img src=\"https://cdn.simpleicons.org/kirby/000/fff\" alt=\"Kirby\" align=left width=24 height=24> | [@runxel](https://github.com/runxel) | ![License](https://img.shields.io/github/license/runxel/kirby3-simpleicons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Frunxel%2Fkirby3-simpleicons%2Fmaster%2Fcomposer.json&query=%24..%5B'simple-icons%2Fsimple-icons'%5D&logo=simpleicons&label=version) |\n| [LaTeX package](https://github.com/ineshbose/simple-icons-latex) <img src=\"https://cdn.simpleicons.org/latex/000/fff\" alt=\"LaTeX\" align=left width=24 height=24> | [@ineshbose](https://github.com/ineshbose) | ![License](https://img.shields.io/github/license/ineshbose/simple-icons-latex) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fineshbose%2Fsimple-icons-latex%2Fdevelop%2Fpackage.json&query=%24..%5B'simple-icons-font'%5D&logo=simpleicons&label=version) |\n| [Laravel package](https://github.com/ublabs/blade-simple-icons) <img src=\"https://cdn.simpleicons.org/laravel/000/fff\" alt=\"Laravel\" align=left width=24 height=24> | [@adrian-ub](https://github.com/adrian-ub) | ![License](https://img.shields.io/github/license/ublabs/blade-simple-icons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fmaster%2Fpackage.json&query=%24.version&logo=simpleicons&label=version) |\n| [Python wheel](https://github.com/carstencodes/simplepycons) <img src=\"https://cdn.simpleicons.org/python/000/fff\" alt=\"Python\" align=left width=24 height=24> | [@carstencodes](https://github.com/carstencodes) | ![License](https://img.shields.io/github/license/carstencodes/simplepycons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcarstencodes%2Fsimplepycons%2Fmaster%2Fsimple-icons.json&query=%24.simple-icons.version&logo=simpleicons&label=version) |\n| [React package](https://github.com/icons-pack/react-simple-icons) <img src=\"https://cdn.simpleicons.org/react/000/fff\" alt=\"React\" align=left width=24 height=24> | [@wootsbot](https://github.com/wootsbot) | ![License](https://img.shields.io/github/license/icons-pack/react-simple-icons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Ficons-pack%2Freact-simple-icons%2Fmain%2Fpackage.json&query=%24..%5B'simple-icons'%5D&logo=simpleicons&label=version) |\n| [Ruby gem](https://rubygems.org/gems/simple-icons-rails) <img src=\"https://cdn.simpleicons.org/rubygems/000/fff\" alt=\"Ruby\" align=left width=24 height=24> | [@thepew](https://github.com/the-pew-inc) | ![License](https://img.shields.io/github/license/the-pew-inc/simple-icons-rails) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fsimple-icons%2Fsimple-icons%2Fmaster%2Fpackage.json&query=%24.version&logo=simpleicons&label=version) |\n| [Svelte package](https://github.com/icons-pack/svelte-simple-icons) <img src=\"https://cdn.simpleicons.org/svelte/000/fff\" alt=\"Svelte\" align=left width=24 height=24> | [@wootsbot](https://github.com/wootsbot) | ![License](https://img.shields.io/github/license/icons-pack/svelte-simple-icons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Ficons-pack%2Fsvelte-simple-icons%2Fmain%2Fpackage.json&query=%24..%5B'simple-icons'%5D&logo=simpleicons&label=version) |\n| [Vue 3 package](https://github.com/wyatt-herkamp/vue3-simple-icons) <img src=\"https://cdn.simpleicons.org/vuedotjs/000/fff\" alt=\"Vue\" align=left width=24 height=24> | [@wyatt-herkamp](https://github.com/wyatt-herkamp) | ![License](https://img.shields.io/github/license/wyatt-herkamp/vue3-simple-icons) | ![Simple Icons version](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fwyatt-herkamp%2Fvue3-simple-icons%2Fmain%2Fsimple-icons.json&query=simpleIconsVersion&logo=simpleicons&label=version) |\n\nMaintain a library? [Submit a PR][open-pr] to include it in the list above.\n\n## Contribute\n\n[![Good first issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3A%2522good%2520first%2520issue%2522%2520is%3Aopen%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=github&label=good%20first%20issues&color=228f6c&labelColor=228f6c&logoColor=white&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aopen+label%3A%22good+first+issue%22+-linked%3Apr) [![Icon issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3A%2522update%2520icon%2Fdata%2522%2C%2522new%2520icon%2522%2520is%3Aopen%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=svg&logoColor=333&label=icon%20issues&labelColor=FFB13B&color=FFB13B&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aissue+is%3Aopen+label%3A%22new+icon%22%2C%22update+icon%2Fdata%22) [![Code issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520is%3Aissue%2520is%3Aopen%2520label%3Ameta%2Cpackage%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=typescript&logoColor=white&label=code%20issues&labelColor=3178C6&color=3178C6&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aissue+is%3Aopen+label%3Adocs%2Cmeta%2Cpackage+-linked%3Apr) [![Documentation issues](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.github.com%2Fsearch%2Fissues%3Fq%3Drepo%3Asimple-icons%2Fsimple-icons%2520label%3Adocs%2520is%3Aopen%2520-linked%3Apr&query=%24.total_count&suffix=%20open&logo=markdown&label=docs%20issues&labelColor=343a40&color=343a40&logoColor=FFF&style=flat-square)](https://github.com/simple-icons/simple-icons/issues?q=is%3Aopen+is%3Aissue+label%3Adocs+-linked%3Apr)\n\nInformation describing how to contribute can be found in the file [CONTRIBUTING.md](https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md)\n\n[slug]: https://github.com/simple-icons/simple-icons/blob/master/slugs.md\n[open-pr]: https://github.com/simple-icons/simple-icons/compare\n\n## Contributors\n\n<a href=\"https://github.com/simple-icons/simple-icons/graphs/contributors\">\n  <img\n    src=\"https://opencollective.com/simple-icons/contributors.svg?width=890&button=false\"\n    alt=\"Contributors\"\n  />\n</a>\n"
        },
        {
          "name": "VERSIONING.md",
          "type": "blob",
          "size": 1.1884765625,
          "content": "# Versioning\n\nWe use [Semantic Versioning](https://semver.org/) to version Simple Icons. In short, this means that version numbers are structured as `MAJOR.MINOR.PATCH`. For example, version `3.1.4` is major version `3`, minor version `1`, and patch `4`. Increasing each of these numbers implies certain kinds of changes.\n\nFor Simple Icons, given a change to the version number you can expect the following kinds of changes:\n\n| Version number increase | Kinds of changes |\n| :-- | :-- |\n| _Major_ | Removed icons; Slug changed icons; Breaking API changes |\n| _Minor_ | New icons; Title changed icons; API changes |\n| _Patch_ | Updated SVGs; Updated metadata |\n\n## Release Schedule\n\n_Minor_ releases and _patches_ are scheduled on a weekly basis and are generally released on a Sunday.\n\n_Major_ releases are scheduled on a half-year basis, mainly to remove old SVGs. That is, approximately every 6 months a normal Sunday release is a _major_ release instead of a _minor_ release or _patch_.\n\n## Deprecation\n\nAfter a _major_ release, the only other supported version is the last version of the previous _major_ release. This previous version will only receive bug fixes to either the npm library, or our internal APIs.\n"
        },
        {
          "name": "_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.6865234375,
          "content": "{\n\t\"name\": \"simple-icons/simple-icons\",\n\t\"description\": \"SVG icons for popular brands\",\n\t\"homepage\": \"https://simpleicons.org/\",\n\t\"keywords\": [\n\t\t\"svg\",\n\t\t\"icons\"\n\t],\n\t\"support\": {\n\t\t\"issues\": \"https://github.com/simple-icons/simple-icons/issues\",\n\t\t\"source\": \"https://github.com/simple-icons/simple-icons\",\n\t\t\"docs\": \"https://github.com/simple-icons/simple-icons#php-usage-\",\n\t\t\"chat\": \"https://discord.gg/vUXFa7t5xJ\",\n\t\t\"forum\": \"https://github.com/simple-icons/simple-icons/discussions\",\n\t\t\"security\": \"https://github.com/simple-icons/simple-icons/security/policy\"\n\t},\n\t\"license\": \"CC0-1.0\",\n\t\"funding\": [\n\t\t{\n\t\t\t\"type\": \"opencollective\",\n\t\t\t\"url\": \"https://opencollective.com/simple-icons\"\n\t\t}\n\t]\n}\n"
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsconfig.json",
          "type": "blob",
          "size": 0.2548828125,
          "content": "{\n\t\"compilerOptions\": {\n\t\t\"target\": \"es2022\",\n\t\t\"module\": \"node16\",\n\t\t\"moduleResolution\": \"node16\",\n\t\t\"checkJs\": true,\n\t\t\"skipLibCheck\": false,\n\t\t\"strict\": true,\n\t\t\"noImplicitAny\": true,\n\t\t\"noImplicitThis\": true,\n\t\t\"forceConsistentCasingInFileNames\": true\n\t}\n}\n"
        },
        {
          "name": "lychee.toml",
          "type": "blob",
          "size": 0.1455078125,
          "content": "exclude = [\n\t'^https://www\\.similarweb\\.com',\n\t'^https://www\\.figma\\.com/community/plugin',\n\t'^https://www\\.adobe\\.com/products/illustrator\\.html'\n]\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.7861328125,
          "content": "{\n\t\"name\": \"simple-icons\",\n\t\"version\": \"14.1.0\",\n\t\"description\": \"SVG icons for popular brands https://simpleicons.org\",\n\t\"homepage\": \"https://simpleicons.org\",\n\t\"keywords\": [\n\t\t\"svg\",\n\t\t\"icons\"\n\t],\n\t\"type\": \"commonjs\",\n\t\"main\": \"index.js\",\n\t\"types\": \"index.d.ts\",\n\t\"exports\": {\n\t\t\".\": {\n\t\t\t\"import\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.mjs\"\n\t\t\t},\n\t\t\t\"module\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.mjs\"\n\t\t\t},\n\t\t\t\"require\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.js\"\n\t\t\t},\n\t\t\t\"default\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.js\"\n\t\t\t}\n\t\t},\n\t\t\"./icons\": {\n\t\t\t\"import\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.mjs\"\n\t\t\t},\n\t\t\t\"module\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.mjs\"\n\t\t\t},\n\t\t\t\"require\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.js\"\n\t\t\t},\n\t\t\t\"default\": {\n\t\t\t\t\"types\": \"./index.d.ts\",\n\t\t\t\t\"default\": \"./index.js\"\n\t\t\t}\n\t\t},\n\t\t\"./icons/*\": [\n\t\t\t\"./icons/*\"\n\t\t],\n\t\t\"./sdk\": {\n\t\t\t\"import\": {\n\t\t\t\t\"types\": \"./sdk.d.ts\",\n\t\t\t\t\"default\": \"./sdk.mjs\"\n\t\t\t},\n\t\t\t\"module\": {\n\t\t\t\t\"types\": \"./sdk.d.ts\",\n\t\t\t\t\"default\": \"./sdk.mjs\"\n\t\t\t},\n\t\t\t\"require\": {\n\t\t\t\t\"types\": \"./sdk.d.ts\",\n\t\t\t\t\"default\": \"./sdk.js\"\n\t\t\t},\n\t\t\t\"default\": {\n\t\t\t\t\"types\": \"./sdk.d.ts\",\n\t\t\t\t\"default\": \"./sdk.js\"\n\t\t\t}\n\t\t},\n\t\t\"./icons.json\": {\n\t\t\t\"import\": \"./_data/simple-icons.json\",\n\t\t\t\"module\": \"./_data/simple-icons.json\",\n\t\t\t\"require\": \"./_data/simple-icons.json\",\n\t\t\t\"default\": \"./_data/simple-icons.json\"\n\t\t}\n\t},\n\t\"sideEffects\": false,\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+ssh://git@github.com/simple-icons/simple-icons.git\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/simple-icons/simple-icons/issues\"\n\t},\n\t\"author\": \"Simple Icons Collaborators\",\n\t\"license\": \"CC0-1.0\",\n\t\"funding\": {\n\t\t\"type\": \"opencollective\",\n\t\t\"url\": \"https://opencollective.com/simple-icons\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@inquirer/core\": \"10.0.1\",\n\t\t\"@inquirer/prompts\": \"7.0.1\",\n\t\t\"@types/node\": \"22.8.6\",\n\t\t\"chalk\": \"5.3.0\",\n\t\t\"editorconfig-checker\": \"6.0.0\",\n\t\t\"esbuild\": \"0.24.0\",\n\t\t\"eslint-plugin-import\": \"2.31.0\",\n\t\t\"eslint-plugin-jsdoc\": \"50.4.3\",\n\t\t\"fake-diff\": \"1.0.0\",\n\t\t\"fast-fuzzy\": \"1.12.0\",\n\t\t\"get-relative-luminance\": \"1.0.0\",\n\t\t\"husky\": \"9.1.6\",\n\t\t\"inquirer-autocomplete-standalone\": \"0.8.1\",\n\t\t\"jsonschema\": \"1.4.1\",\n\t\t\"markdownlint-cli2\": \"0.15.0\",\n\t\t\"mocha\": \"10.8.2\",\n\t\t\"named-html-entities-json\": \"1.0.0\",\n\t\t\"spdx-license-ids\": \"3.0.20\",\n\t\t\"svg-path-bbox\": \"2.1.0\",\n\t\t\"svg-path-segments\": \"2.0.1\",\n\t\t\"svglint\": \"3.0.0\",\n\t\t\"svgo\": \"3.3.2\",\n\t\t\"svgpath\": \"2.6.0\",\n\t\t\"typescript\": \"5.6.3\",\n\t\t\"xo\": \"0.60.0\"\n\t},\n\t\"scripts\": {\n\t\t\"build\": \"node scripts/build/package.js\",\n\t\t\"clean\": \"node scripts/build/clean.js\",\n\t\t\"format:icondata\": \"node scripts/format-icon-data.js\",\n\t\t\"format\": \"npm run format:icondata && npm run prettier -- --write && npm run xo:fix\",\n\t\t\"xo:fix\": \"xo --fix\",\n\t\t\"prettier\": \"prettier --ignore-unknown \\\"**/*.!(js|jsx|mjs|cjs|ts|tsx|mts|cts|svg)\\\"\",\n\t\t\"lint\": \"npm run ourlint && npm run prettierlint && npm run jslint && npm run jsonlint && npm run svglint && npm run wslint && npm run markdownlint\",\n\t\t\"ourlint\": \"node scripts/lint/ourlint.js\",\n\t\t\"prettierlint\": \"npm run prettier -- --check --cache\",\n\t\t\"jslint\": \"xo\",\n\t\t\"jsonlint\": \"node scripts/lint/jsonlint.js\",\n\t\t\"svglint\": \"svglint --ci --config svglint.config.mjs icons/*.svg\",\n\t\t\"wslint\": \"editorconfig-checker\",\n\t\t\"markdownlint\": \"markdownlint-cli2 '**/*.md' '#node_modules'\",\n\t\t\"prepare\": \"husky\",\n\t\t\"prepublishOnly\": \"npm run build\",\n\t\t\"postpublish\": \"npm run clean\",\n\t\t\"test\": \"mocha tests --reporter tests/min-reporter.cjs --inline-diffs\",\n\t\t\"pretest\": \"npm run prepublishOnly\",\n\t\t\"posttest\": \"npm run postpublish\",\n\t\t\"get-filename\": \"node scripts/get-filename.js\",\n\t\t\"add-icon-data\": \"node scripts/add-icon-data.js\",\n\t\t\"remove-icon\": \"node scripts/remove-icon.js\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=0.12.18\"\n\t}\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sdk.d.ts",
          "type": "blob",
          "size": 2.623046875,
          "content": "/**\n * @file\n * Types for Simple Icons SDK.\n */\n// eslint-disable-next-line n/file-extension-in-import\nimport type {CustomLicense, SPDXLicense} from './types';\n\n/**\n * The data for a third-party extension.\n *\n * Includes the module and author of the extension,\n * both including a name and URL.\n * @see {@link https://github.com/simple-icons/simple-icons#third-party-extensions Third-Party Extensions}\n */\nexport type ThirdPartyExtension = {\n\tmodule: ThirdPartyExtensionSubject;\n\tauthor: ThirdPartyExtensionSubject;\n};\n\ntype ThirdPartyExtensionSubject = {\n\tname: string;\n\turl: string;\n};\n\n/**\n * The aliases for a Simple Icon.\n *\n * Corresponds to the `aliases` property in the *_data/simple-icons.json* file.\n * @see {@link https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#aliases Aliases}\n */\nexport type Aliases = {\n\taka?: string[];\n\tdup?: DuplicateAlias[];\n\tloc?: Record<string, string>;\n};\n\ntype DuplicateAlias = {\n\ttitle: string;\n\thex?: string;\n\tguidelines?: string;\n\tloc?: Record<string, string>;\n};\n\n/**\n * The data for a Simple Icon.\n *\n * Corresponds to the data stored for each icon in the *_data/simple-icons.json* file.\n * @see {@link https://github.com/mondeja/simple-icons/blob/utils-entrypoint/CONTRIBUTING.md#7-update-the-json-data-for-simpleiconsorg Update the JSON Data for SimpleIcons.org}\n */\nexport type IconData = {\n\ttitle: string;\n\thex: string;\n\tsource: string;\n\tslug?: string;\n\tguidelines?: string;\n\tlicense?: Omit<SPDXLicense, 'url'> | CustomLicense;\n\taliases?: Aliases;\n};\n\n/* The next code is autogenerated from sdk.mjs */\n/* eslint-disable */\n\nexport const SVG_PATH_REGEX: RegExp;\nexport function getDirnameFromImportMeta(importMetaUrl: string): string;\nexport function urlRegex(jsonschemaPath?: string): Promise<RegExp>;\nexport function getIconSlug(icon: IconData): string;\nexport function svgToPath(svg: string): string;\nexport function titleToSlug(title: string): string;\nexport function slugToVariableName(slug: string): string;\nexport function titleToHtmlFriendly(brandTitle: string): string;\nexport function htmlFriendlyToTitle(htmlFriendlyTitle: string): string;\nexport function getIconsDataPath(rootDirectory?: string): string;\nexport function getIconsDataString(rootDirectory?: string): Promise<string>;\nexport function getIconsData(rootDirectory?: string): Promise<IconData[]>;\nexport function normalizeNewlines(text: string): string;\nexport function normalizeColor(text: string): string;\nexport function getThirdPartyExtensions(\n\treadmePath?: string,\n): Promise<ThirdPartyExtension[]>;\nexport function getThirdPartyLibraries(\n\treadmePath?: string,\n): Promise<ThirdPartyExtension[]>;\nexport const collator: Intl.Collator;\n"
        },
        {
          "name": "sdk.mjs",
          "type": "blob",
          "size": 8.923828125,
          "content": "/**\n * @file\n * Simple Icons SDK.\n */\n\nimport fs from 'node:fs/promises';\nimport path from 'node:path';\nimport {fileURLToPath} from 'node:url';\n\n/**\n * @typedef {import(\"./sdk.d.ts\").ThirdPartyExtension} ThirdPartyExtension\n * @typedef {import(\"./sdk.d.ts\").IconData} IconData\n */\n\n/** @type {{ [key: string]: string }} */\nconst TITLE_TO_SLUG_REPLACEMENTS = {\n\t'+': 'plus',\n\t'.': 'dot',\n\t'&': 'and',\n\tđ: 'd',\n\tħ: 'h',\n\tı: 'i',\n\tĸ: 'k',\n\tŀ: 'l',\n\tł: 'l',\n\tß: 'ss',\n\tŧ: 't',\n};\n\nconst TITLE_TO_SLUG_CHARS_REGEX = new RegExp(\n\t`[${Object.keys(TITLE_TO_SLUG_REPLACEMENTS).join('')}]`,\n\t'g',\n);\n\nconst TITLE_TO_SLUG_RANGE_REGEX = /[^a-z\\d]/g;\n\n/**\n * Regex to validate SVG paths.\n */\nexport const SVG_PATH_REGEX = /^m[-mzlhvcsqtae\\d,. ]+$/i;\n\n/**\n * Get the directory name where this file is located from `import.meta.url`,\n * equivalent to the `__dirname` global variable in CommonJS.\n * @param {string} importMetaUrl Relative `import.meta.url` value of the caller.\n * @returns {string} Directory name in which this file is located.\n */\nexport const getDirnameFromImportMeta = (importMetaUrl) =>\n\tpath.dirname(fileURLToPath(importMetaUrl));\n\n/**\n * Build a regex to validate HTTPs URLs.\n * @param {string} jsonschemaPath Path to the *.jsonschema.json* file.\n * @returns {Promise<RegExp>} Regex to validate HTTPs URLs.\n */\nexport const urlRegex = async (\n\tjsonschemaPath = path.join(\n\t\tgetDirnameFromImportMeta(import.meta.url),\n\t\t'.jsonschema.json',\n\t),\n) =>\n\tnew RegExp(\n\t\tJSON.parse(\n\t\t\tawait fs.readFile(jsonschemaPath, 'utf8'),\n\t\t).definitions.url.pattern,\n\t);\n\n/**\n * Get the slug/filename for an icon.\n * @param {IconData} icon The icon data as it appears in *_data/simple-icons.json*.\n * @returns {string} The slug/filename for the icon.\n */\nexport const getIconSlug = (icon) => icon.slug || titleToSlug(icon.title);\n\n/**\n * Extract the path from an icon SVG content.\n * @param {string} svg The icon SVG content.\n * @returns {string} The path from the icon SVG content.\n */\nexport const svgToPath = (svg) => svg.split('\"', 8)[7];\n\n/**\n * Converts a brand title into a slug/filename.\n * @param {string} title The title to convert.\n * @returns {string} The slug/filename for the title.\n */\nexport const titleToSlug = (title) =>\n\ttitle\n\t\t.toLowerCase()\n\t\t.replaceAll(\n\t\t\tTITLE_TO_SLUG_CHARS_REGEX,\n\t\t\t(char) => TITLE_TO_SLUG_REPLACEMENTS[char],\n\t\t)\n\t\t.normalize('NFD')\n\t\t.replaceAll(TITLE_TO_SLUG_RANGE_REGEX, '');\n\n/**\n * Converts a slug into a variable name that can be exported.\n * @param {string} slug The slug to convert.\n * @returns {string} The variable name for the slug.\n */\nexport const slugToVariableName = (slug) =>\n\t`si${slug[0].toUpperCase()}${slug.slice(1)}`;\n\n/**\n * Converts a brand title as defined in *_data/simple-icons.json* into a brand\n * title in HTML/SVG friendly format.\n * @param {string} brandTitle The title to convert.\n * @returns {string} The brand title in HTML/SVG friendly format.\n */\nexport const titleToHtmlFriendly = (brandTitle) =>\n\tbrandTitle\n\t\t.replaceAll('&', '&amp;')\n\t\t.replaceAll('\"', '&quot;')\n\t\t.replaceAll('<', '&lt;')\n\t\t.replaceAll('>', '&gt;')\n\t\t.replaceAll(/./g, (char) => {\n\t\t\t/** @type {number} */\n\t\t\t// @ts-ignore\n\t\t\tconst charCode = char.codePointAt(0);\n\t\t\treturn charCode > 127 ? `&#${charCode};` : char;\n\t\t});\n\n/**\n * Converts a brand title in HTML/SVG friendly format into a brand title (as\n * it is seen in *_data/simple-icons.json*).\n * @param {string} htmlFriendlyTitle The title to convert.\n * @returns {string} The brand title in HTML/SVG friendly format.\n */\nexport const htmlFriendlyToTitle = (htmlFriendlyTitle) =>\n\thtmlFriendlyTitle\n\t\t.replaceAll(/&#(\\d+);/g, (_, number_) =>\n\t\t\tString.fromCodePoint(Number.parseInt(number_, 10)),\n\t\t)\n\t\t.replaceAll(\n\t\t\t/&(quot|amp|lt|gt);/g,\n\t\t\t/**\n\t\t\t * Replace HTML entity references with their respective decoded characters.\n\t\t\t * @param {string} _ Full match.\n\t\t\t * @param {'quot' | 'amp' | 'lt' | 'gt'} reference Reference to replace.\n\t\t\t * @returns {string} Replacement for the reference.\n\t\t\t */\n\t\t\t(_, reference) => ({quot: '\"', amp: '&', lt: '<', gt: '>'})[reference],\n\t\t);\n\n/**\n * Get path of *_data/simple-icons.json*.\n * @param {string} rootDirectory Path to the root directory of the project.\n * @returns {string} Path of *_data/simple-icons.json*.\n */\nexport const getIconsDataPath = (\n\trootDirectory = getDirnameFromImportMeta(import.meta.url),\n) => path.resolve(rootDirectory, '_data', 'simple-icons.json');\n\n/**\n * Get contents of *_data/simple-icons.json*.\n * @param {string} rootDirectory Path to the root directory of the project.\n * @returns {Promise<string>} Content of *_data/simple-icons.json*.\n */\nexport const getIconsDataString = (\n\trootDirectory = getDirnameFromImportMeta(import.meta.url),\n) => fs.readFile(getIconsDataPath(rootDirectory), 'utf8');\n\n/**\n * Get icons data as object from *_data/simple-icons.json*.\n * @param {string} rootDirectory Path to the root directory of the project.\n * @returns {Promise<IconData[]>} Icons data as array from *_data/simple-icons.json*.\n */\nexport const getIconsData = async (\n\trootDirectory = getDirnameFromImportMeta(import.meta.url),\n) => {\n\tconst fileContents = await getIconsDataString(rootDirectory);\n\treturn JSON.parse(fileContents);\n};\n\n/**\n * Replace Windows newline characters by Unix ones.\n * @param {string} text The text to replace.\n * @returns {string} The text with Windows newline characters replaced by Unix ones.\n */\nexport const normalizeNewlines = (text) => text.replaceAll('\\r\\n', '\\n');\n\n/**\n * Convert non-6-digit hex color to 6-digit with the character `#` stripped.\n * @param {string} text The color text.\n * @returns {string} The color text in 6-digit hex format.\n */\nexport const normalizeColor = (text) => {\n\tlet color = text.replace('#', '').toUpperCase();\n\tif (color.length < 6) {\n\t\t// eslint-disable-next-line unicorn/no-useless-spread\n\t\tcolor = [...color.slice(0, 3)].map((x) => x.repeat(2)).join('');\n\t} else if (color.length > 6) {\n\t\tcolor = color.slice(0, 6);\n\t}\n\n\treturn color;\n};\n\n/**\n * Get information about third party extensions from the README table.\n * @param {string} readmePath Path to the README file.\n * @returns {Promise<ThirdPartyExtension[]>} Information about third party extensions.\n */\nexport const getThirdPartyExtensions = async (\n\treadmePath = path.join(\n\t\tgetDirnameFromImportMeta(import.meta.url),\n\t\t'README.md',\n\t),\n) =>\n\tnormalizeNewlines(await fs.readFile(readmePath, 'utf8'))\n\t\t.split('## Third-Party Extensions')[1]\n\t\t.split('|\\n\\n')[0]\n\t\t.split('|\\n|')\n\t\t.slice(2)\n\t\t.map((line) => {\n\t\t\tconst [module_, author] = line.split(' | ');\n\t\t\tconst module = module_.split('<img src=\"')[0];\n\t\t\tconst moduleName = /\\[(.+)]/.exec(module)?.[1];\n\t\t\tif (moduleName === undefined) {\n\t\t\t\tthrow new Error(`Module name improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\tconst moduleUrl = /\\((.+)\\)/.exec(module)?.[1];\n\t\t\tif (moduleUrl === undefined) {\n\t\t\t\tthrow new Error(`Module URL improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\tconst authorName = /\\[(.+)]/.exec(author)?.[1];\n\t\t\tif (authorName === undefined) {\n\t\t\t\tthrow new Error(`Author improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\tconst authorUrl = /\\((.+)\\)/.exec(author)?.[1];\n\t\t\tif (authorUrl === undefined) {\n\t\t\t\tthrow new Error(`Author URL improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmodule: {\n\t\t\t\t\tname: moduleName,\n\t\t\t\t\turl: moduleUrl,\n\t\t\t\t},\n\t\t\t\tauthor: {\n\t\t\t\t\tname: authorName,\n\t\t\t\t\turl: authorUrl,\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n/**\n * Get information about third party libraries from the README table.\n * @param {string} readmePath Path to the README file.\n * @returns {Promise<ThirdPartyExtension[]>} Information about third party libraries.\n */\nexport const getThirdPartyLibraries = async (\n\treadmePath = path.join(\n\t\tgetDirnameFromImportMeta(import.meta.url),\n\t\t'README.md',\n\t),\n) =>\n\tnormalizeNewlines(await fs.readFile(readmePath, 'utf8'))\n\t\t.split('## Third-Party Libraries')[1]\n\t\t.split('|\\n\\n')[0]\n\t\t.split('|\\n|')\n\t\t.slice(2)\n\t\t.map((line) => {\n\t\t\tlet [module, author] = line.split(' | ');\n\t\t\tmodule = module.split('<img src=\"')[0];\n\t\t\tconst moduleName = /\\[(.+)]/.exec(module)?.[1];\n\t\t\tif (moduleName === undefined) {\n\t\t\t\tthrow new Error(`Module name improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\tconst moduleUrl = /\\((.+)\\)/.exec(module)?.[1];\n\t\t\tif (moduleUrl === undefined) {\n\t\t\t\tthrow new Error(`Module URL improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\tconst authorName = /\\[(.+)]/.exec(author)?.[1];\n\t\t\tif (authorName === undefined) {\n\t\t\t\tthrow new Error(`Author improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\tconst authorUrl = /\\((.+)\\)/.exec(author)?.[1];\n\t\t\tif (authorUrl === undefined) {\n\t\t\t\tthrow new Error(`Author URL improperly parsed from line: ${line}`);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmodule: {\n\t\t\t\t\tname: moduleName,\n\t\t\t\t\turl: moduleUrl,\n\t\t\t\t},\n\t\t\t\tauthor: {\n\t\t\t\t\tname: authorName,\n\t\t\t\t\turl: authorUrl,\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n/**\n * `Intl.Collator` object ready to be used for icon titles sorting.\n * @see {@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator Intl.Collator}\n */\nexport const collator = new Intl.Collator('en', {\n\tusage: 'search',\n\tcaseFirst: 'upper',\n});\n"
        },
        {
          "name": "slugs.md",
          "type": "blob",
          "size": 90.306640625,
          "content": "<!--\nThis file is automatically generated. If you want to change something, please\nupdate the script at 'scripts/release/update-slugs-table.js'.\n-->\n\n# Simple Icons slugs\n\n| Brand name | Brand slug |\n| :--- | :--- |\n| `.ENV` | `dotenv` |\n| `.NET` | `dotnet` |\n| `/e/` | `e` |\n| `1.1.1.1` | `1dot1dot1dot1` |\n| `1&1` | `1and1` |\n| `1001Tracklists` | `1001tracklists` |\n| `1Panel` | `1panel` |\n| `1Password` | `1password` |\n| `2FAS` | `2fas` |\n| `2K` | `2k` |\n| `30 seconds of code` | `30secondsofcode` |\n| `365 Data Science` | `365datascience` |\n| `3M` | `3m` |\n| `42` | `42` |\n| `4chan` | `4chan` |\n| `4D` | `4d` |\n| `500px` | `500px` |\n| `7Zip` | `7zip` |\n| `99designs` | `99designs` |\n| `9GAG` | `9gag` |\n| `A-Frame` | `aframe` |\n| `ABB RobotStudio` | `abbrobotstudio` |\n| `Abbott` | `abbott` |\n| `Abbvie` | `abbvie` |\n| `About.me` | `aboutdotme` |\n| `Abstract` | `abstract` |\n| `abuse.ch` | `abusedotch` |\n| `Academia` | `academia` |\n| `Accenture` | `accenture` |\n| `Accusoft` | `accusoft` |\n| `AccuWeather` | `accuweather` |\n| `Acer` | `acer` |\n| `ACM` | `acm` |\n| `ActiGraph` | `actigraph` |\n| `Activision` | `activision` |\n| `ActivityPub` | `activitypub` |\n| `Actix` | `actix` |\n| `Actual Budget` | `actualbudget` |\n| `Acura` | `acura` |\n| `Adafruit` | `adafruit` |\n| `AdBlock` | `adblock` |\n| `Adblock Plus` | `adblockplus` |\n| `addy.io` | `addydotio` |\n| `AdGuard` | `adguard` |\n| `Adidas` | `adidas` |\n| `Adminer` | `adminer` |\n| `AdonisJS` | `adonisjs` |\n| `ADP` | `adp` |\n| `Adroll` | `adroll` |\n| `Advent Of Code` | `adventofcode` |\n| `Adyen` | `adyen` |\n| `Aegis Authenticator` | `aegisauthenticator` |\n| `Aer Lingus` | `aerlingus` |\n| `Aeroflot` | `aeroflot` |\n| `Aeroméxico` | `aeromexico` |\n| `Aerospike` | `aerospike` |\n| `AEW` | `aew` |\n| `AFDIAN` | `afdian` |\n| `AFFiNE` | `affine` |\n| `Affinity` | `affinity` |\n| `Affinity Designer` | `affinitydesigner` |\n| `Affinity Photo` | `affinityphoto` |\n| `Affinity Publisher` | `affinitypublisher` |\n| `Afterpay` | `afterpay` |\n| `AfterShip` | `aftership` |\n| `Agora` | `agora` |\n| `AI Dungeon` | `aidungeon` |\n| `AIB` | `aib` |\n| `AIOHTTP` | `aiohttp` |\n| `Aiqfome` | `aiqfome` |\n| `Air Canada` | `aircanada` |\n| `Air China` | `airchina` |\n| `Air France` | `airfrance` |\n| `Air India` | `airindia` |\n| `Air Serbia` | `airserbia` |\n| `Air Transat` | `airtransat` |\n| `AirAsia` | `airasia` |\n| `Airbnb` | `airbnb` |\n| `Airbrake` | `airbrake` |\n| `Airbus` | `airbus` |\n| `Airbyte` | `airbyte` |\n| `Aircall` | `aircall` |\n| `AirPlay Audio` | `airplayaudio` |\n| `AirPlay Video` | `airplayvideo` |\n| `Airtable` | `airtable` |\n| `Airtel` | `airtel` |\n| `Ajv` | `ajv` |\n| `Akamai` | `akamai` |\n| `Akasa Air` | `akasaair` |\n| `Akaunting` | `akaunting` |\n| `Akiflow` | `akiflow` |\n| `Alacritty` | `alacritty` |\n| `Alamy` | `alamy` |\n| `Albert Heijn` | `albertheijn` |\n| `Alby` | `alby` |\n| `Alchemy` | `alchemy` |\n| `Aldi Nord` | `aldinord` |\n| `Aldi Süd` | `aldisud` |\n| `Alfa Romeo` | `alfaromeo` |\n| `Alfred` | `alfred` |\n| `Algolia` | `algolia` |\n| `Algorand` | `algorand` |\n| `Alibaba Cloud` | `alibabacloud` |\n| `Alibaba.com` | `alibabadotcom` |\n| `Alienware` | `alienware` |\n| `AliExpress` | `aliexpress` |\n| `Alipay` | `alipay` |\n| `Allegro` | `allegro` |\n| `AlliedModders` | `alliedmodders` |\n| `AlloCiné` | `allocine` |\n| `AllTrails` | `alltrails` |\n| `AlmaLinux` | `almalinux` |\n| `Alpine Linux` | `alpinelinux` |\n| `Alpine.js` | `alpinedotjs` |\n| `AlternativeTo` | `alternativeto` |\n| `Alteryx` | `alteryx` |\n| `Altium Designer` | `altiumdesigner` |\n| `Alwaysdata` | `alwaysdata` |\n| `ALX` | `alx` |\n| `Amazon` | `amazon` |\n| `Amazon Alexa` | `amazonalexa` |\n| `Amazon API Gateway` | `amazonapigateway` |\n| `Amazon CloudWatch` | `amazoncloudwatch` |\n| `Amazon Cognito` | `amazoncognito` |\n| `Amazon DocumentDB` | `amazondocumentdb` |\n| `Amazon DynamoDB` | `amazondynamodb` |\n| `Amazon EC2` | `amazonec2` |\n| `Amazon ECS` | `amazonecs` |\n| `Amazon EKS` | `amazoneks` |\n| `Amazon ElastiCache` | `amazonelasticache` |\n| `Amazon Fire TV` | `amazonfiretv` |\n| `Amazon Games` | `amazongames` |\n| `Amazon Identity Access Management` | `amazoniam` |\n| `Amazon Lumberyard` | `amazonlumberyard` |\n| `Amazon Luna` | `amazonluna` |\n| `Amazon Music` | `amazonmusic` |\n| `Amazon Pay` | `amazonpay` |\n| `Amazon Prime` | `amazonprime` |\n| `Amazon RDS` | `amazonrds` |\n| `Amazon Redshift` | `amazonredshift` |\n| `Amazon Route 53` | `amazonroute53` |\n| `Amazon S3` | `amazons3` |\n| `Amazon Simple Email Service` | `amazonsimpleemailservice` |\n| `Amazon SQS` | `amazonsqs` |\n| `Amazon Web Services` | `amazonwebservices` |\n| `AMD` | `amd` |\n| `Ameba` | `ameba` |\n| `American Airlines` | `americanairlines` |\n| `American Express` | `americanexpress` |\n| `AMG` | `amg` |\n| `AMP` | `amp` |\n| `Amul` | `amul` |\n| `ANA` | `ana` |\n| `Anaconda` | `anaconda` |\n| `Analogue` | `analogue` |\n| `Andela` | `andela` |\n| `Android` | `android` |\n| `Android Auto` | `androidauto` |\n| `Android Studio` | `androidstudio` |\n| `Angular` | `angular` |\n| `AniList` | `anilist` |\n| `Animal Planet` | `animalplanet` |\n| `AnkerMake` | `ankermake` |\n| `Anki` | `anki` |\n| `Ansible` | `ansible` |\n| `Answer` | `answer` |\n| `Ansys` | `ansys` |\n| `Ant Design` | `antdesign` |\n| `Anta` | `anta` |\n| `Antena 3` | `antena3` |\n| `Anthropic` | `anthropic` |\n| `AntV` | `antv` |\n| `Anycubic` | `anycubic` |\n| `AnyDesk` | `anydesk` |\n| `Anytype` | `anytype` |\n| `AOL` | `aol` |\n| `Apache` | `apache` |\n| `Apache Airflow` | `apacheairflow` |\n| `Apache Ant` | `apacheant` |\n| `Apache Cassandra` | `apachecassandra` |\n| `Apache CloudStack` | `apachecloudstack` |\n| `Apache Cordova` | `apachecordova` |\n| `Apache CouchDB` | `apachecouchdb` |\n| `Apache DolphinScheduler` | `apachedolphinscheduler` |\n| `Apache Druid` | `apachedruid` |\n| `Apache ECharts` | `apacheecharts` |\n| `Apache Flink` | `apacheflink` |\n| `Apache FreeMarker` | `apachefreemarker` |\n| `Apache Groovy` | `apachegroovy` |\n| `Apache Guacamole` | `apacheguacamole` |\n| `Apache Hadoop` | `apachehadoop` |\n| `Apache HBase` | `apachehbase` |\n| `Apache Hive` | `apachehive` |\n| `Apache JMeter` | `apachejmeter` |\n| `Apache Kafka` | `apachekafka` |\n| `Apache Kylin` | `apachekylin` |\n| `Apache Lucene` | `apachelucene` |\n| `Apache Maven` | `apachemaven` |\n| `Apache NetBeans IDE` | `apachenetbeanside` |\n| `Apache NiFi` | `apachenifi` |\n| `Apache OpenOffice` | `apacheopenoffice` |\n| `Apache Parquet` | `apacheparquet` |\n| `Apache Pulsar` | `apachepulsar` |\n| `Apache RocketMQ` | `apacherocketmq` |\n| `Apache Solr` | `apachesolr` |\n| `Apache Spark` | `apachespark` |\n| `Apache Storm` | `apachestorm` |\n| `Apache Superset` | `apachesuperset` |\n| `Apache Tomcat` | `apachetomcat` |\n| `Aparat` | `aparat` |\n| `Apifox` | `apifox` |\n| `APM Terminals` | `apmterminals` |\n| `Apollo GraphQL` | `apollographql` |\n| `Apostrophe` | `apostrophe` |\n| `App Store` | `appstore` |\n| `AppGallery` | `appgallery` |\n| `Appian` | `appian` |\n| `Appium` | `appium` |\n| `Apple` | `apple` |\n| `Apple Arcade` | `applearcade` |\n| `Apple Music` | `applemusic` |\n| `Apple News` | `applenews` |\n| `Apple Pay` | `applepay` |\n| `Apple Podcasts` | `applepodcasts` |\n| `Apple TV` | `appletv` |\n| `AppSignal` | `appsignal` |\n| `Appsmith` | `appsmith` |\n| `AppVeyor` | `appveyor` |\n| `Appwrite` | `appwrite` |\n| `Aqua` | `aqua` |\n| `ARAL` | `aral` |\n| `ArangoDB` | `arangodb` |\n| `Arc` | `arc` |\n| `ArcGIS` | `arcgis` |\n| `Arch Linux` | `archlinux` |\n| `Archicad` | `archicad` |\n| `Archive of Our Own` | `archiveofourown` |\n| `Ardour` | `ardour` |\n| `Arduino` | `arduino` |\n| `Argo` | `argo` |\n| `Argos` | `argos` |\n| `Ariakit` | `ariakit` |\n| `ARK Ecosystem` | `arkecosystem` |\n| `Arlo` | `arlo` |\n| `Arm` | `arm` |\n| `Arm Keil` | `armkeil` |\n| `Ars Technica` | `arstechnica` |\n| `Artifact Hub` | `artifacthub` |\n| `Artix Linux` | `artixlinux` |\n| `ArtStation` | `artstation` |\n| `arXiv` | `arxiv` |\n| `Asahi Linux` | `asahilinux` |\n| `Asana` | `asana` |\n| `Asciidoctor` | `asciidoctor` |\n| `asciinema` | `asciinema` |\n| `ASDA` | `asda` |\n| `Aseprite` | `aseprite` |\n| `AssemblyScript` | `assemblyscript` |\n| `Asterisk` | `asterisk` |\n| `Aston Martin` | `astonmartin` |\n| `Astra` | `astra` |\n| `Astral` | `astral` |\n| `Astro` | `astro` |\n| `ASUS` | `asus` |\n| `AT&T` | `atandt` |\n| `Atari` | `atari` |\n| `AtlasOS` | `atlasos` |\n| `Atlassian` | `atlassian` |\n| `Auchan` | `auchan` |\n| `Audacity` | `audacity` |\n| `Audi` | `audi` |\n| `Audible` | `audible` |\n| `Audio-Technica` | `audiotechnica` |\n| `Audiobookshelf` | `audiobookshelf` |\n| `Audioboom` | `audioboom` |\n| `Audiomack` | `audiomack` |\n| `Aurelia` | `aurelia` |\n| `Auth0` | `auth0` |\n| `Authelia` | `authelia` |\n| `Authentik` | `authentik` |\n| `Authy` | `authy` |\n| `AutoCAD` | `autocad` |\n| `AutoCannon` | `autocannon` |\n| `Autodesk` | `autodesk` |\n| `Autodesk Maya` | `autodeskmaya` |\n| `Autodesk Revit` | `autodeskrevit` |\n| `AutoHotkey` | `autohotkey` |\n| `AutoIt` | `autoit` |\n| `Automattic` | `automattic` |\n| `Autoprefixer` | `autoprefixer` |\n| `AutoZone` | `autozone` |\n| `avajs` | `avajs` |\n| `Avast` | `avast` |\n| `avianca` | `avianca` |\n| `Avira` | `avira` |\n| `Awesome Lists` | `awesomelists` |\n| `awesomeWM` | `awesomewm` |\n| `AWS Amplify` | `awsamplify` |\n| `AWS Elastic Load Balancing` | `awselasticloadbalancing` |\n| `AWS Fargate` | `awsfargate` |\n| `AWS Lambda` | `awslambda` |\n| `AWS Organizations` | `awsorganizations` |\n| `AWS Secrets Manager` | `awssecretsmanager` |\n| `Awwwards` | `awwwards` |\n| `Axios` | `axios` |\n| `B&R Automation` | `bandrautomation` |\n| `Babel` | `babel` |\n| `Babelio` | `babelio` |\n| `Babylon.js` | `babylondotjs` |\n| `Backblaze` | `backblaze` |\n| `Backbone` | `backbone` |\n| `Backbone.js` | `backbonedotjs` |\n| `Backendless` | `backendless` |\n| `Backstage` | `backstage` |\n| `Badoo` | `badoo` |\n| `Baidu` | `baidu` |\n| `Bakaláři` | `bakalari` |\n| `Bamboo` | `bamboo` |\n| `Bambu Lab` | `bambulab` |\n| `Bandcamp` | `bandcamp` |\n| `BandLab` | `bandlab` |\n| `Bandsintown` | `bandsintown` |\n| `Bank of America` | `bankofamerica` |\n| `Barclays` | `barclays` |\n| `Baremetrics` | `baremetrics` |\n| `Barmenia` | `barmenia` |\n| `Basecamp` | `basecamp` |\n| `Baserow` | `baserow` |\n| `Basic Attention Token` | `basicattentiontoken` |\n| `Bastyon` | `bastyon` |\n| `bat` | `bat` |\n| `Bata` | `bata` |\n| `Battle.net` | `battledotnet` |\n| `Bazel` | `bazel` |\n| `Beatport` | `beatport` |\n| `Beats` | `beats` |\n| `Beats by Dre` | `beatsbydre` |\n| `BeatStars` | `beatstars` |\n| `Beekeeper Studio` | `beekeeperstudio` |\n| `Behance` | `behance` |\n| `Beijing Subway` | `beijingsubway` |\n| `BEM` | `bem` |\n| `Bentley` | `bentley` |\n| `Bento` | `bento` |\n| `BentoBox` | `bentobox` |\n| `BentoML` | `bentoml` |\n| `BeReal` | `bereal` |\n| `Betfair` | `betfair` |\n| `Better Stack` | `betterstack` |\n| `Bevy` | `bevy` |\n| `Big Cartel` | `bigcartel` |\n| `bigbasket` | `bigbasket` |\n| `BigBlueButton` | `bigbluebutton` |\n| `BigCommerce` | `bigcommerce` |\n| `Bilibili` | `bilibili` |\n| `Billboard` | `billboard` |\n| `BIM` | `bim` |\n| `Binance` | `binance` |\n| `Bio Link` | `biolink` |\n| `Biome` | `biome` |\n| `BisectHosting` | `bisecthosting` |\n| `Bit` | `bit` |\n| `Bitbucket` | `bitbucket` |\n| `Bitcoin` | `bitcoin` |\n| `Bitcoin Cash` | `bitcoincash` |\n| `Bitcoin SV` | `bitcoinsv` |\n| `BitComet` | `bitcomet` |\n| `Bitdefender` | `bitdefender` |\n| `Bitly` | `bitly` |\n| `Bitrise` | `bitrise` |\n| `BitTorrent` | `bittorrent` |\n| `Bitwarden` | `bitwarden` |\n| `Bitwig` | `bitwig` |\n| `Blackberry` | `blackberry` |\n| `Blackmagic Design` | `blackmagicdesign` |\n| `Blazemeter` | `blazemeter` |\n| `Blazor` | `blazor` |\n| `Blender` | `blender` |\n| `Blockbench` | `blockbench` |\n| `Blockchain.com` | `blockchaindotcom` |\n| `Blogger` | `blogger` |\n| `Bloglovin` | `bloglovin` |\n| `Blueprint` | `blueprint` |\n| `Bluesky` | `bluesky` |\n| `Bluesound` | `bluesound` |\n| `Bluetooth` | `bluetooth` |\n| `BMC Software` | `bmcsoftware` |\n| `BMW` | `bmw` |\n| `BNB Chain` | `bnbchain` |\n| `BoardGameGeek` | `boardgamegeek` |\n| `boAt` | `boat` |\n| `Boehringer Ingelheim` | `boehringeringelheim` |\n| `Boeing` | `boeing` |\n| `Bombardier` | `bombardier` |\n| `Bookalope` | `bookalope` |\n| `BookBub` | `bookbub` |\n| `Bookmeter` | `bookmeter` |\n| `BookMyShow` | `bookmyshow` |\n| `BookStack` | `bookstack` |\n| `Boost` | `boost` |\n| `Boosty` | `boosty` |\n| `Boots` | `boots` |\n| `Bootstrap` | `bootstrap` |\n| `BorgBackup` | `borgbackup` |\n| `Bosch` | `bosch` |\n| `Bose` | `bose` |\n| `Botble CMS` | `botblecms` |\n| `boulanger` | `boulanger` |\n| `Bower` | `bower` |\n| `Box` | `box` |\n| `Boxy SVG` | `boxysvg` |\n| `Braintree` | `braintree` |\n| `Brandfolder` | `brandfolder` |\n| `Brave` | `brave` |\n| `Breaker` | `breaker` |\n| `Brenntag` | `brenntag` |\n| `Brevo` | `brevo` |\n| `Brex` | `brex` |\n| `Bricks` | `bricks` |\n| `British Airways` | `britishairways` |\n| `Broadcom` | `broadcom` |\n| `Bruno` | `bruno` |\n| `BSD` | `bsd` |\n| `bspwm` | `bspwm` |\n| `BT` | `bt` |\n| `Buddy` | `buddy` |\n| `Budibase` | `budibase` |\n| `Buefy` | `buefy` |\n| `Buffer` | `buffer` |\n| `Bugatti` | `bugatti` |\n| `Bugcrowd` | `bugcrowd` |\n| `Bugsnag` | `bugsnag` |\n| `Buhl` | `buhl` |\n| `Buildkite` | `buildkite` |\n| `BuiltByBit` | `builtbybit` |\n| `Bukalapak` | `bukalapak` |\n| `Bulma` | `bulma` |\n| `Bun` | `bun` |\n| `Bungie` | `bungie` |\n| `bunq` | `bunq` |\n| `Burger King` | `burgerking` |\n| `Burp Suite` | `burpsuite` |\n| `Burton` | `burton` |\n| `Buy Me A Coffee` | `buymeacoffee` |\n| `BuySellAds` | `buysellads` |\n| `BuzzFeed` | `buzzfeed` |\n| `BVG` | `bvg` |\n| `Byju's` | `byjus` |\n| `ByteDance` | `bytedance` |\n| `C` | `c` |\n| `C++` | `cplusplus` |\n| `C++ Builder` | `cplusplusbuilder` |\n| `Cachet` | `cachet` |\n| `Caddy` | `caddy` |\n| `Cadillac` | `cadillac` |\n| `CafePress` | `cafepress` |\n| `Cairo Graphics` | `cairographics` |\n| `Cairo Metro` | `cairometro` |\n| `CaixaBank` | `caixabank` |\n| `CakePHP` | `cakephp` |\n| `Cal.com` | `caldotcom` |\n| `Calendly` | `calendly` |\n| `Calibre-Web` | `calibreweb` |\n| `Campaign Monitor` | `campaignmonitor` |\n| `Camunda` | `camunda` |\n| `Canonical` | `canonical` |\n| `Canva` | `canva` |\n| `Canvas` | `canvas` |\n| `Capacitor` | `capacitor` |\n| `CapRover` | `caprover` |\n| `Car Throttle` | `carthrottle` |\n| `Cardano` | `cardano` |\n| `Carlsberg Group` | `carlsberggroup` |\n| `Carrd` | `carrd` |\n| `Carrefour` | `carrefour` |\n| `Carto` | `carto` |\n| `Cash App` | `cashapp` |\n| `Castbox` | `castbox` |\n| `Castorama` | `castorama` |\n| `Castro` | `castro` |\n| `Caterpillar` | `caterpillar` |\n| `CBC` | `cbc` |\n| `CBS` | `cbs` |\n| `CCC` | `ccc` |\n| `CCleaner` | `ccleaner` |\n| `CD Projekt` | `cdprojekt` |\n| `CE` | `ce` |\n| `Celery` | `celery` |\n| `Celestron` | `celestron` |\n| `CentOS` | `centos` |\n| `Ceph` | `ceph` |\n| `Cesium` | `cesium` |\n| `Chai` | `chai` |\n| `Chainguard` | `chainguard` |\n| `Chainlink` | `chainlink` |\n| `Chakra UI` | `chakraui` |\n| `Channel 4` | `channel4` |\n| `Charles` | `charles` |\n| `Chart.js` | `chartdotjs` |\n| `ChartMogul` | `chartmogul` |\n| `Chase` | `chase` |\n| `ChatBot` | `chatbot` |\n| `Chatwoot` | `chatwoot` |\n| `CheckiO` | `checkio` |\n| `Checkmarx` | `checkmarx` |\n| `Checkmk` | `checkmk` |\n| `Chedraui` | `chedraui` |\n| `Cheerio` | `cheerio` |\n| `Chef` | `chef` |\n| `Chemex` | `chemex` |\n| `Chess.com` | `chessdotcom` |\n| `Chevrolet` | `chevrolet` |\n| `Chia Network` | `chianetwork` |\n| `China Eastern Airlines` | `chinaeasternairlines` |\n| `China Southern Airlines` | `chinasouthernairlines` |\n| `Chocolatey` | `chocolatey` |\n| `Chromatic` | `chromatic` |\n| `Chrome Web Store` | `chromewebstore` |\n| `Chromecast` | `chromecast` |\n| `Chrysler` | `chrysler` |\n| `Chupa Chups` | `chupachups` |\n| `Cilium` | `cilium` |\n| `Cinema 4D` | `cinema4d` |\n| `Cinnamon` | `cinnamon` |\n| `Circle` | `circle` |\n| `CircleCI` | `circleci` |\n| `CircuitVerse` | `circuitverse` |\n| `Cirrus CI` | `cirrusci` |\n| `Cisco` | `cisco` |\n| `Citrix` | `citrix` |\n| `Citroën` | `citroen` |\n| `CiviCRM` | `civicrm` |\n| `Civo` | `civo` |\n| `Clarifai` | `clarifai` |\n| `Claris` | `claris` |\n| `Clarivate` | `clarivate` |\n| `Claude` | `claude` |\n| `Clerk` | `clerk` |\n| `Clever Cloud` | `clevercloud` |\n| `ClickHouse` | `clickhouse` |\n| `ClickUp` | `clickup` |\n| `CLion` | `clion` |\n| `Clockify` | `clockify` |\n| `Clojure` | `clojure` |\n| `Cloud 66` | `cloud66` |\n| `Cloud Foundry` | `cloudfoundry` |\n| `CloudBees` | `cloudbees` |\n| `CloudCannon` | `cloudcannon` |\n| `Cloudera` | `cloudera` |\n| `Cloudflare` | `cloudflare` |\n| `Cloudflare Pages` | `cloudflarepages` |\n| `Cloudflare Workers` | `cloudflareworkers` |\n| `Cloudinary` | `cloudinary` |\n| `Cloudron` | `cloudron` |\n| `Cloudsmith` | `cloudsmith` |\n| `Cloudways` | `cloudways` |\n| `Clubforce` | `clubforce` |\n| `Clubhouse` | `clubhouse` |\n| `Clyp` | `clyp` |\n| `CMake` | `cmake` |\n| `CNCF` | `cncf` |\n| `CNET` | `cnet` |\n| `CNN` | `cnn` |\n| `Co-op` | `coop` |\n| `Coca-Cola` | `cocacola` |\n| `Cockpit` | `cockpit` |\n| `Cockroach Labs` | `cockroachlabs` |\n| `CocoaPods` | `cocoapods` |\n| `Cocos` | `cocos` |\n| `Coda` | `coda` |\n| `Codacy` | `codacy` |\n| `Code Climate` | `codeclimate` |\n| `Code::Blocks` | `codeblocks` |\n| `Codeberg` | `codeberg` |\n| `Codecademy` | `codecademy` |\n| `CodeceptJS` | `codeceptjs` |\n| `CodeChef` | `codechef` |\n| `Codecov` | `codecov` |\n| `CodeCrafters` | `codecrafters` |\n| `CodeFactor` | `codefactor` |\n| `Codeforces` | `codeforces` |\n| `Codefresh` | `codefresh` |\n| `CodeIgniter` | `codeigniter` |\n| `Codeium` | `codeium` |\n| `Codemagic` | `codemagic` |\n| `Codementor` | `codementor` |\n| `CodeMirror` | `codemirror` |\n| `CodeNewbie` | `codenewbie` |\n| `CodePen` | `codepen` |\n| `CodeProject` | `codeproject` |\n| `Coder` | `coder` |\n| `CodersRank` | `codersrank` |\n| `Coderwall` | `coderwall` |\n| `CodeSandbox` | `codesandbox` |\n| `Codeship` | `codeship` |\n| `CodeSignal` | `codesignal` |\n| `CodeStream` | `codestream` |\n| `Codewars` | `codewars` |\n| `Coding Ninjas` | `codingninjas` |\n| `CodinGame` | `codingame` |\n| `Codio` | `codio` |\n| `CoffeeScript` | `coffeescript` |\n| `Coggle` | `coggle` |\n| `Cognizant` | `cognizant` |\n| `cohost` | `cohost` |\n| `Coinbase` | `coinbase` |\n| `CoinMarketCap` | `coinmarketcap` |\n| `Collabora Online` | `collaboraonline` |\n| `ComicFury` | `comicfury` |\n| `comma` | `comma` |\n| `Commerzbank` | `commerzbank` |\n| `commitlint` | `commitlint` |\n| `Commodore` | `commodore` |\n| `Common Lisp` | `commonlisp` |\n| `Common Workflow Language` | `commonworkflowlanguage` |\n| `Compiler Explorer` | `compilerexplorer` |\n| `Composer` | `composer` |\n| `CompTIA` | `comptia` |\n| `Comsol` | `comsol` |\n| `Conan` | `conan` |\n| `Concourse` | `concourse` |\n| `Conda-Forge` | `condaforge` |\n| `Conekta` | `conekta` |\n| `Confluence` | `confluence` |\n| `Construct 3` | `construct3` |\n| `Consul` | `consul` |\n| `Contabo` | `contabo` |\n| `Contactless Payment` | `contactlesspayment` |\n| `containerd` | `containerd` |\n| `Contao` | `contao` |\n| `Contentful` | `contentful` |\n| `Contentstack` | `contentstack` |\n| `Continente` | `continente` |\n| `Contributor Covenant` | `contributorcovenant` |\n| `Conventional Commits` | `conventionalcommits` |\n| `Convertio` | `convertio` |\n| `Cookiecutter` | `cookiecutter` |\n| `Cooler Master` | `coolermaster` |\n| `Copa Airlines` | `copaairlines` |\n| `Coppel` | `coppel` |\n| `Cora` | `cora` |\n| `CorelDRAW` | `coreldraw` |\n| `Corona Engine` | `coronaengine` |\n| `Corona Renderer` | `coronarenderer` |\n| `Corsair` | `corsair` |\n| `Couchbase` | `couchbase` |\n| `Counter-Strike` | `counterstrike` |\n| `CountingWorks PRO` | `countingworkspro` |\n| `Coursera` | `coursera` |\n| `Coveralls` | `coveralls` |\n| `Coze` | `coze` |\n| `cPanel` | `cpanel` |\n| `Craft CMS` | `craftcms` |\n| `Craftsman` | `craftsman` |\n| `CrateDB` | `cratedb` |\n| `Crayon` | `crayon` |\n| `Creality` | `creality` |\n| `Create React App` | `createreactapp` |\n| `Creative Commons` | `creativecommons` |\n| `Creative Technology` | `creativetechnology` |\n| `Credly` | `credly` |\n| `Crehana` | `crehana` |\n| `Crew United` | `crewunited` |\n| `Critical Role` | `criticalrole` |\n| `Crowdin` | `crowdin` |\n| `Crowdsource` | `crowdsource` |\n| `Crunchbase` | `crunchbase` |\n| `Crunchyroll` | `crunchyroll` |\n| `CRYENGINE` | `cryengine` |\n| `Cryptomator` | `cryptomator` |\n| `CryptPad` | `cryptpad` |\n| `Crystal` | `crystal` |\n| `CSDN` | `csdn` |\n| `CSS` | `css` |\n| `CSS Design Awards` | `cssdesignawards` |\n| `CSS Modules` | `cssmodules` |\n| `CSS Wizardry` | `csswizardry` |\n| `CSS3` | `css3` |\n| `CTS` | `cts` |\n| `Cucumber` | `cucumber` |\n| `Cultura` | `cultura` |\n| `curl` | `curl` |\n| `CurseForge` | `curseforge` |\n| `Custom Ink` | `customink` |\n| `CyberDefenders` | `cyberdefenders` |\n| `Cycling '74` | `cycling74` |\n| `Cypress` | `cypress` |\n| `Cytoscape.js` | `cytoscapedotjs` |\n| `D` | `d` |\n| `D-EDGE` | `dedge` |\n| `D-Wave Systems` | `dwavesystems` |\n| `D3` | `d3` |\n| `Dacia` | `dacia` |\n| `DAF` | `daf` |\n| `daily.dev` | `dailydotdev` |\n| `Dailymotion` | `dailymotion` |\n| `DaisyUI` | `daisyui` |\n| `Dapr` | `dapr` |\n| `Dark Reader` | `darkreader` |\n| `Dart` | `dart` |\n| `Darty` | `darty` |\n| `Das Erste` | `daserste` |\n| `Dash` | `dash` |\n| `Dashlane` | `dashlane` |\n| `Dask` | `dask` |\n| `Dassault Systèmes` | `dassaultsystemes` |\n| `data.ai` | `datadotai` |\n| `Databricks` | `databricks` |\n| `DataCamp` | `datacamp` |\n| `Datadog` | `datadog` |\n| `DataGrip` | `datagrip` |\n| `Dataiku` | `dataiku` |\n| `DataStax` | `datastax` |\n| `date-fns` | `datefns` |\n| `DATEV` | `datev` |\n| `DatoCMS` | `datocms` |\n| `Datto` | `datto` |\n| `DaVinci Resolve` | `davinciresolve` |\n| `Dazhong Dianping` | `dazhongdianping` |\n| `DAZN` | `dazn` |\n| `DBeaver` | `dbeaver` |\n| `dblp` | `dblp` |\n| `dbt` | `dbt` |\n| `DC Entertainment` | `dcentertainment` |\n| `De'Longhi` | `delonghi` |\n| `Debian` | `debian` |\n| `Debrid-Link` | `debridlink` |\n| `Decap CMS` | `decapcms` |\n| `Decentraland` | `decentraland` |\n| `DeepCool` | `deepcool` |\n| `Deepgram` | `deepgram` |\n| `deepin` | `deepin` |\n| `DeepL` | `deepl` |\n| `Deepnote` | `deepnote` |\n| `Deliveroo` | `deliveroo` |\n| `Dell` | `dell` |\n| `Delphi` | `delphi` |\n| `Delta` | `delta` |\n| `Deluge` | `deluge` |\n| `Deno` | `deno` |\n| `Denon` | `denon` |\n| `Dependabot` | `dependabot` |\n| `Depositphotos` | `depositphotos` |\n| `Der Spiegel` | `derspiegel` |\n| `Deutsche Bahn` | `deutschebahn` |\n| `Deutsche Bank` | `deutschebank` |\n| `Deutsche Post` | `deutschepost` |\n| `Deutsche Telekom` | `deutschetelekom` |\n| `Deutsche Welle` | `deutschewelle` |\n| `dev.to` | `devdotto` |\n| `DevExpress` | `devexpress` |\n| `DeviantArt` | `deviantart` |\n| `Devpost` | `devpost` |\n| `devRant` | `devrant` |\n| `Dgraph` | `dgraph` |\n| `DHL` | `dhl` |\n| `diagrams.net` | `diagramsdotnet` |\n| `Dialogflow` | `dialogflow` |\n| `Diaspora` | `diaspora` |\n| `Dictionary.com` | `dictionarydotcom` |\n| `Digg` | `digg` |\n| `Digi-Key Electronics` | `digikeyelectronics` |\n| `DigitalOcean` | `digitalocean` |\n| `Diners Club` | `dinersclub` |\n| `Dior` | `dior` |\n| `Directus` | `directus` |\n| `Discogs` | `discogs` |\n| `Discord` | `discord` |\n| `Discourse` | `discourse` |\n| `Discover` | `discover` |\n| `Disqus` | `disqus` |\n| `Disroot` | `disroot` |\n| `Distrokid` | `distrokid` |\n| `Django` | `django` |\n| `DJI` | `dji` |\n| `Dlib` | `dlib` |\n| `DLNA` | `dlna` |\n| `dm` | `dm` |\n| `Docker` | `docker` |\n| `Docs.rs` | `docsdotrs` |\n| `Docsify` | `docsify` |\n| `Doctrine` | `doctrine` |\n| `Docusaurus` | `docusaurus` |\n| `Dogecoin` | `dogecoin` |\n| `DOI` | `doi` |\n| `Dolby` | `dolby` |\n| `DoorDash` | `doordash` |\n| `Dota 2` | `dota2` |\n| `Douban` | `douban` |\n| `Douban Read` | `doubanread` |\n| `Dovecot` | `dovecot` |\n| `Dovetail` | `dovetail` |\n| `Downdetector` | `downdetector` |\n| `Doxygen` | `doxygen` |\n| `DPD` | `dpd` |\n| `Dragonframe` | `dragonframe` |\n| `Draugiem.lv` | `draugiemdotlv` |\n| `Dreamstime` | `dreamstime` |\n| `Dribbble` | `dribbble` |\n| `Drizzle` | `drizzle` |\n| `Drone` | `drone` |\n| `Drooble` | `drooble` |\n| `Dropbox` | `dropbox` |\n| `Drupal` | `drupal` |\n| `DS Automobiles` | `dsautomobiles` |\n| `DTS` | `dts` |\n| `DTube` | `dtube` |\n| `Ducati` | `ducati` |\n| `DuckDB` | `duckdb` |\n| `DuckDuckGo` | `duckduckgo` |\n| `Dungeons & Dragons` | `dungeonsanddragons` |\n| `Dunked` | `dunked` |\n| `Dunzo` | `dunzo` |\n| `Duolingo` | `duolingo` |\n| `Duplicati` | `duplicati` |\n| `DVC` | `dvc` |\n| `dwm` | `dwm` |\n| `Dynatrace` | `dynatrace` |\n| `E.Leclerc` | `edotleclerc` |\n| `E3` | `e3` |\n| `EA` | `ea` |\n| `EAC` | `eac` |\n| `Eagle` | `eagle` |\n| `EasyEDA` | `easyeda` |\n| `easyJet` | `easyjet` |\n| `eBay` | `ebay` |\n| `EBOX` | `ebox` |\n| `Eclipse Adoptium` | `eclipseadoptium` |\n| `Eclipse Che` | `eclipseche` |\n| `Eclipse IDE` | `eclipseide` |\n| `Eclipse Jetty` | `eclipsejetty` |\n| `Eclipse Mosquitto` | `eclipsemosquitto` |\n| `Eclipse Vert.x` | `eclipsevertdotx` |\n| `Ecosia` | `ecosia` |\n| `Ecovacs` | `ecovacs` |\n| `EDEKA` | `edeka` |\n| `Edge Impulse` | `edgeimpulse` |\n| `EditorConfig` | `editorconfig` |\n| `Educative` | `educative` |\n| `edX` | `edx` |\n| `egghead` | `egghead` |\n| `Egnyte` | `egnyte` |\n| `Eight` | `eight` |\n| `Eight Sleep` | `eightsleep` |\n| `EJS` | `ejs` |\n| `Elastic` | `elastic` |\n| `Elastic Cloud` | `elasticcloud` |\n| `Elastic Stack` | `elasticstack` |\n| `Elasticsearch` | `elasticsearch` |\n| `Elavon` | `elavon` |\n| `Electron` | `electron` |\n| `Electron Fiddle` | `electronfiddle` |\n| `electron-builder` | `electronbuilder` |\n| `Elegoo` | `elegoo` |\n| `Element` | `element` |\n| `elementary` | `elementary` |\n| `Elementor` | `elementor` |\n| `ElevenLabs` | `elevenlabs` |\n| `Eleventy` | `eleventy` |\n| `Elgato` | `elgato` |\n| `Elixir` | `elixir` |\n| `Elm` | `elm` |\n| `Elsevier` | `elsevier` |\n| `Embarcadero` | `embarcadero` |\n| `Embark` | `embark` |\n| `Ember.js` | `emberdotjs` |\n| `Emby` | `emby` |\n| `Emirates` | `emirates` |\n| `Emlakjet` | `emlakjet` |\n| `Empire Kred` | `empirekred` |\n| `EndeavourOS` | `endeavouros` |\n| `Engadget` | `engadget` |\n| `Enpass` | `enpass` |\n| `EnterpriseDB` | `enterprisedb` |\n| `Envato` | `envato` |\n| `Envoy Proxy` | `envoyproxy` |\n| `EPEL` | `epel` |\n| `Epic Games` | `epicgames` |\n| `Epson` | `epson` |\n| `Equinix Metal` | `equinixmetal` |\n| `Eraser` | `eraser` |\n| `Ericsson` | `ericsson` |\n| `Erlang` | `erlang` |\n| `ERPNext` | `erpnext` |\n| `esbuild` | `esbuild` |\n| `ESEA` | `esea` |\n| `ESLGaming` | `eslgaming` |\n| `ESLint` | `eslint` |\n| `Esoteric Software` | `esotericsoftware` |\n| `ESPHome` | `esphome` |\n| `Espressif` | `espressif` |\n| `ESRI` | `esri` |\n| `etcd` | `etcd` |\n| `Ethereum` | `ethereum` |\n| `Ethers` | `ethers` |\n| `Ethiopian Airlines` | `ethiopianairlines` |\n| `Etihad Airways` | `etihadairways` |\n| `Etsy` | `etsy` |\n| `European Union` | `europeanunion` |\n| `Event Store` | `eventstore` |\n| `Eventbrite` | `eventbrite` |\n| `Evernote` | `evernote` |\n| `Excalidraw` | `excalidraw` |\n| `Exercism` | `exercism` |\n| `Exordo` | `exordo` |\n| `Exoscale` | `exoscale` |\n| `Expedia` | `expedia` |\n| `Expensify` | `expensify` |\n| `Experts Exchange` | `expertsexchange` |\n| `Expo` | `expo` |\n| `Express` | `express` |\n| `Express.com` | `expressdotcom` |\n| `ExpressVPN` | `expressvpn` |\n| `EyeEm` | `eyeem` |\n| `F-Droid` | `fdroid` |\n| `F-Secure` | `fsecure` |\n| `F#` | `fsharp` |\n| `F1` | `f1` |\n| `F5` | `f5` |\n| `Facebook` | `facebook` |\n| `Facebook Gaming` | `facebookgaming` |\n| `Facebook Live` | `facebooklive` |\n| `FACEIT` | `faceit` |\n| `Facepunch` | `facepunch` |\n| `Fairphone` | `fairphone` |\n| `Falco` | `falco` |\n| `Falcon` | `falcon` |\n| `FamPay` | `fampay` |\n| `Fandango` | `fandango` |\n| `Fandom` | `fandom` |\n| `Fanfou` | `fanfou` |\n| `Fantom` | `fantom` |\n| `Farcaster` | `farcaster` |\n| `FareHarbor` | `fareharbor` |\n| `FARFETCH` | `farfetch` |\n| `FastAPI` | `fastapi` |\n| `Fastify` | `fastify` |\n| `Fastlane` | `fastlane` |\n| `Fastly` | `fastly` |\n| `Fathom` | `fathom` |\n| `Fauna` | `fauna` |\n| `Favro` | `favro` |\n| `FCC` | `fcc` |\n| `FedEx` | `fedex` |\n| `Fedora` | `fedora` |\n| `Feedly` | `feedly` |\n| `Ferrari` | `ferrari` |\n| `Ferrari N.V.` | `ferrarinv` |\n| `FerretDB` | `ferretdb` |\n| `FFmpeg` | `ffmpeg` |\n| `Fi` | `fi` |\n| `Fiat` | `fiat` |\n| `Fido Alliance` | `fidoalliance` |\n| `FIFA` | `fifa` |\n| `Fig` | `fig` |\n| `Figma` | `figma` |\n| `figshare` | `figshare` |\n| `Fila` | `fila` |\n| `Filament` | `filament` |\n| `File.io` | `filedotio` |\n| `Files` | `files` |\n| `FileZilla` | `filezilla` |\n| `Fineco` | `fineco` |\n| `Fing` | `fing` |\n| `Firebase` | `firebase` |\n| `Firefish` | `firefish` |\n| `Firefly III` | `fireflyiii` |\n| `Firefox` | `firefox` |\n| `Firefox Browser` | `firefoxbrowser` |\n| `Fireship` | `fireship` |\n| `Firewalla` | `firewalla` |\n| `FIRST` | `first` |\n| `fish shell` | `fishshell` |\n| `Fitbit` | `fitbit` |\n| `FiveM` | `fivem` |\n| `Fiverr` | `fiverr` |\n| `Fizz` | `fizz` |\n| `Flashforge` | `flashforge` |\n| `Flask` | `flask` |\n| `Flat` | `flat` |\n| `Flathub` | `flathub` |\n| `Flatpak` | `flatpak` |\n| `Flickr` | `flickr` |\n| `Flightaware` | `flightaware` |\n| `Flipboard` | `flipboard` |\n| `Flipkart` | `flipkart` |\n| `Floatplane` | `floatplane` |\n| `Flood` | `flood` |\n| `Fluent Bit` | `fluentbit` |\n| `Fluentd` | `fluentd` |\n| `Fluke` | `fluke` |\n| `Flutter` | `flutter` |\n| `Flux` | `flux` |\n| `Fly.io` | `flydotio` |\n| `Flyway` | `flyway` |\n| `FMOD` | `fmod` |\n| `Fnac` | `fnac` |\n| `Folium` | `folium` |\n| `Fonoma` | `fonoma` |\n| `Font Awesome` | `fontawesome` |\n| `FontBase` | `fontbase` |\n| `FontForge` | `fontforge` |\n| `foobar2000` | `foobar2000` |\n| `foodpanda` | `foodpanda` |\n| `Ford` | `ford` |\n| `Forgejo` | `forgejo` |\n| `Formik` | `formik` |\n| `Formspree` | `formspree` |\n| `Formstack` | `formstack` |\n| `Fortinet` | `fortinet` |\n| `Fortran` | `fortran` |\n| `Fossa` | `fossa` |\n| `Fossil SCM` | `fossilscm` |\n| `Foundry Virtual Tabletop` | `foundryvirtualtabletop` |\n| `Foursquare` | `foursquare` |\n| `FOX` | `fox` |\n| `Foxtel` | `foxtel` |\n| `Fozzy` | `fozzy` |\n| `Framer` | `framer` |\n| `Framework` | `framework` |\n| `Framework7` | `framework7` |\n| `Franprix` | `franprix` |\n| `Frappe` | `frappe` |\n| `Fraunhofer-Gesellschaft` | `fraunhofergesellschaft` |\n| `FreeBSD` | `freebsd` |\n| `FreeCAD` | `freecad` |\n| `freeCodeCamp` | `freecodecamp` |\n| `freedesktop.org` | `freedesktopdotorg` |\n| `Freelancer` | `freelancer` |\n| `freelancermap` | `freelancermap` |\n| `FreeNAS` | `freenas` |\n| `freenet` | `freenet` |\n| `Freepik` | `freepik` |\n| `Fresh` | `fresh` |\n| `Frontend Mentor` | `frontendmentor` |\n| `Frontify` | `frontify` |\n| `Fubo` | `fubo` |\n| `Fueler` | `fueler` |\n| `Fuga Cloud` | `fugacloud` |\n| `Fujifilm` | `fujifilm` |\n| `Fujitsu` | `fujitsu` |\n| `Fur Affinity` | `furaffinity` |\n| `Furry Network` | `furrynetwork` |\n| `FusionAuth` | `fusionauth` |\n| `FutureLearn` | `futurelearn` |\n| `G2` | `g2` |\n| `G2A` | `g2a` |\n| `G2G` | `g2g` |\n| `Galaxus` | `galaxus` |\n| `Game Developer` | `gamedeveloper` |\n| `Game Jolt` | `gamejolt` |\n| `Game Science` | `gamescience` |\n| `GameBanana` | `gamebanana` |\n| `Gameloft` | `gameloft` |\n| `Gamemaker` | `gamemaker` |\n| `Garmin` | `garmin` |\n| `Gatling` | `gatling` |\n| `Gatsby` | `gatsby` |\n| `Gcore` | `gcore` |\n| `GDAL` | `gdal` |\n| `GeeksforGeeks` | `geeksforgeeks` |\n| `General Electric` | `generalelectric` |\n| `General Motors` | `generalmotors` |\n| `Genius` | `genius` |\n| `Gentoo` | `gentoo` |\n| `Geocaching` | `geocaching` |\n| `Geode` | `geode` |\n| `GeoPandas` | `geopandas` |\n| `Gerrit` | `gerrit` |\n| `GetX` | `getx` |\n| `Ghost` | `ghost` |\n| `Ghostery` | `ghostery` |\n| `GIMP` | `gimp` |\n| `Gin` | `gin` |\n| `GIPHY` | `giphy` |\n| `Git` | `git` |\n| `Git Extensions` | `gitextensions` |\n| `Git for Windows` | `gitforwindows` |\n| `Git LFS` | `gitlfs` |\n| `GitBook` | `gitbook` |\n| `Gitconnected` | `gitconnected` |\n| `Gitea` | `gitea` |\n| `Gitee` | `gitee` |\n| `GitHub` | `github` |\n| `GitHub Actions` | `githubactions` |\n| `GitHub Copilot` | `githubcopilot` |\n| `GitHub Pages` | `githubpages` |\n| `GitHub Sponsors` | `githubsponsors` |\n| `gitignore.io` | `gitignoredotio` |\n| `GitKraken` | `gitkraken` |\n| `GitLab` | `gitlab` |\n| `Gitpod` | `gitpod` |\n| `Gitter` | `gitter` |\n| `Glassdoor` | `glassdoor` |\n| `Glide` | `glide` |\n| `Glitch` | `glitch` |\n| `Globus` | `globus` |\n| `Glovo` | `glovo` |\n| `glTF` | `gltf` |\n| `Gmail` | `gmail` |\n| `GMX` | `gmx` |\n| `GNOME` | `gnome` |\n| `GNOME Terminal` | `gnometerminal` |\n| `GNU` | `gnu` |\n| `GNU Bash` | `gnubash` |\n| `GNU Emacs` | `gnuemacs` |\n| `GNU IceCat` | `gnuicecat` |\n| `GNU Privacy Guard` | `gnuprivacyguard` |\n| `GNU social` | `gnusocial` |\n| `Go` | `go` |\n| `GoCD` | `gocd` |\n| `GoDaddy` | `godaddy` |\n| `Godot Engine` | `godotengine` |\n| `GoFundMe` | `gofundme` |\n| `GOG.com` | `gogdotcom` |\n| `Gojek` | `gojek` |\n| `GoLand` | `goland` |\n| `GoldenLine` | `goldenline` |\n| `Goldman Sachs` | `goldmansachs` |\n| `Goodreads` | `goodreads` |\n| `Google` | `google` |\n| `Google AdMob` | `googleadmob` |\n| `Google Ads` | `googleads` |\n| `Google AdSense` | `googleadsense` |\n| `Google Analytics` | `googleanalytics` |\n| `Google Apps Script` | `googleappsscript` |\n| `Google Assistant` | `googleassistant` |\n| `Google Authenticator` | `googleauthenticator` |\n| `Google BigQuery` | `googlebigquery` |\n| `Google Bigtable` | `googlebigtable` |\n| `Google Calendar` | `googlecalendar` |\n| `Google Campaign Manager 360` | `googlecampaignmanager360` |\n| `Google Cardboard` | `googlecardboard` |\n| `Google Chat` | `googlechat` |\n| `Google Chrome` | `googlechrome` |\n| `Google Chronicle` | `googlechronicle` |\n| `Google Classroom` | `googleclassroom` |\n| `Google Cloud` | `googlecloud` |\n| `Google Cloud Composer` | `googlecloudcomposer` |\n| `Google Cloud Spanner` | `googlecloudspanner` |\n| `Google Cloud Storage` | `googlecloudstorage` |\n| `Google Colab` | `googlecolab` |\n| `Google Container Optimized OS` | `googlecontaineroptimizedos` |\n| `Google Data Studio` | `googledatastudio` |\n| `Google Dataflow` | `googledataflow` |\n| `Google Dataproc` | `googledataproc` |\n| `Google Display & Video 360` | `googledisplayandvideo360` |\n| `Google Docs` | `googledocs` |\n| `Google Drive` | `googledrive` |\n| `Google Earth` | `googleearth` |\n| `Google Earth Engine` | `googleearthengine` |\n| `Google Fit` | `googlefit` |\n| `Google Fonts` | `googlefonts` |\n| `Google Forms` | `googleforms` |\n| `Google Gemini` | `googlegemini` |\n| `Google Home` | `googlehome` |\n| `Google Keep` | `googlekeep` |\n| `Google Lens` | `googlelens` |\n| `Google Maps` | `googlemaps` |\n| `Google Marketing Platform` | `googlemarketingplatform` |\n| `Google Meet` | `googlemeet` |\n| `Google Messages` | `googlemessages` |\n| `Google Nearby` | `googlenearby` |\n| `Google News` | `googlenews` |\n| `Google Pay` | `googlepay` |\n| `Google Photos` | `googlephotos` |\n| `Google Play` | `googleplay` |\n| `Google Pub/Sub` | `googlepubsub` |\n| `Google Scholar` | `googlescholar` |\n| `Google Search Console` | `googlesearchconsole` |\n| `Google Sheets` | `googlesheets` |\n| `Google Slides` | `googleslides` |\n| `Google Street View` | `googlestreetview` |\n| `Google Tag Manager` | `googletagmanager` |\n| `Google Tasks` | `googletasks` |\n| `Google Translate` | `googletranslate` |\n| `GoToMeeting` | `gotomeeting` |\n| `Grab` | `grab` |\n| `Gradle` | `gradle` |\n| `Gradle Play Publisher` | `gradleplaypublisher` |\n| `Grafana` | `grafana` |\n| `Grammarly` | `grammarly` |\n| `Grand Frais` | `grandfrais` |\n| `GrapheneOS` | `grapheneos` |\n| `Graphite` | `graphite` |\n| `GraphQL` | `graphql` |\n| `Grav` | `grav` |\n| `Gravatar` | `gravatar` |\n| `Graylog` | `graylog` |\n| `Greasy Fork` | `greasyfork` |\n| `Great Learning` | `greatlearning` |\n| `Greenhouse` | `greenhouse` |\n| `GreenSock` | `greensock` |\n| `Grid.ai` | `griddotai` |\n| `Gridsome` | `gridsome` |\n| `Grocy` | `grocy` |\n| `GroupMe` | `groupme` |\n| `Groupon` | `groupon` |\n| `Grubhub` | `grubhub` |\n| `Grunt` | `grunt` |\n| `GSK` | `gsk` |\n| `GSMArena.com` | `gsmarenadotcom` |\n| `GStreamer` | `gstreamer` |\n| `GTK` | `gtk` |\n| `Guangzhou Metro` | `guangzhoumetro` |\n| `Guilded` | `guilded` |\n| `Guitar Pro` | `guitarpro` |\n| `gulp` | `gulp` |\n| `Gumroad` | `gumroad` |\n| `Gumtree` | `gumtree` |\n| `Gunicorn` | `gunicorn` |\n| `Gurobi` | `gurobi` |\n| `Gusto` | `gusto` |\n| `Gutenberg` | `gutenberg` |\n| `H&M` | `handm` |\n| `H3` | `h3` |\n| `Habr` | `habr` |\n| `Hack Club` | `hackclub` |\n| `Hack The Box` | `hackthebox` |\n| `Hackaday` | `hackaday` |\n| `Hacker Noon` | `hackernoon` |\n| `HackerEarth` | `hackerearth` |\n| `HackerOne` | `hackerone` |\n| `HackerRank` | `hackerrank` |\n| `Hackster` | `hackster` |\n| `HAL` | `hal` |\n| `Handlebars.js` | `handlebarsdotjs` |\n| `Handshake` | `handshake` |\n| `Handshake` | `handshake_protocol` |\n| `HappyCow` | `happycow` |\n| `Harbor` | `harbor` |\n| `HarmonyOS` | `harmonyos` |\n| `HashiCorp` | `hashicorp` |\n| `Hashnode` | `hashnode` |\n| `Haskell` | `haskell` |\n| `Hasura` | `hasura` |\n| `Hatena Bookmark` | `hatenabookmark` |\n| `haveibeenpwned` | `haveibeenpwned` |\n| `Haxe` | `haxe` |\n| `HBO` | `hbo` |\n| `HCL` | `hcl` |\n| `HDFC Bank` | `hdfcbank` |\n| `Headless UI` | `headlessui` |\n| `Headphone Zone` | `headphonezone` |\n| `Headspace` | `headspace` |\n| `Hearth` | `hearth` |\n| `hearthis.at` | `hearthisdotat` |\n| `Hedera` | `hedera` |\n| `Helium` | `helium` |\n| `Helix` | `helix` |\n| `HelloFresh` | `hellofresh` |\n| `Helly Hansen` | `hellyhansen` |\n| `Helm` | `helm` |\n| `Help Scout` | `helpscout` |\n| `HelpDesk` | `helpdesk` |\n| `Hepsiemlak` | `hepsiemlak` |\n| `HERE` | `here` |\n| `Hermes` | `hermes` |\n| `Heroku` | `heroku` |\n| `Hetzner` | `hetzner` |\n| `Hevy` | `hevy` |\n| `Hexlet` | `hexlet` |\n| `Hexo` | `hexo` |\n| `HEY` | `hey` |\n| `Hi Bob` | `hibob` |\n| `Hibernate` | `hibernate` |\n| `Hilton` | `hilton` |\n| `Hilton Hotels & Resorts` | `hiltonhotelsandresorts` |\n| `Hitachi` | `hitachi` |\n| `Hive` | `hive` |\n| `Hive` | `hive_blockchain` |\n| `HiveMQ` | `hivemq` |\n| `Homarr` | `homarr` |\n| `Home Assistant` | `homeassistant` |\n| `Home Assistant Community Store` | `homeassistantcommunitystore` |\n| `HomeAdvisor` | `homeadvisor` |\n| `Homebrew` | `homebrew` |\n| `Homebridge` | `homebridge` |\n| `Homepage` | `homepage` |\n| `homify` | `homify` |\n| `Honda` | `honda` |\n| `Honey` | `honey` |\n| `Honeybadger` | `honeybadger` |\n| `Honeygain` | `honeygain` |\n| `Hono` | `hono` |\n| `Honor` | `honor` |\n| `Hootsuite` | `hootsuite` |\n| `Hoppscotch` | `hoppscotch` |\n| `Hostinger` | `hostinger` |\n| `Hotels.com` | `hotelsdotcom` |\n| `Hotjar` | `hotjar` |\n| `Hotwire` | `hotwire` |\n| `Houdini` | `houdini` |\n| `Houzz` | `houzz` |\n| `HP` | `hp` |\n| `HSBC` | `hsbc` |\n| `HTC` | `htc` |\n| `HTC Vive` | `htcvive` |\n| `HTML Academy` | `htmlacademy` |\n| `HTML5` | `html5` |\n| `htmx` | `htmx` |\n| `htop` | `htop` |\n| `HTTPie` | `httpie` |\n| `Huawei` | `huawei` |\n| `HubSpot` | `hubspot` |\n| `Hugging Face` | `huggingface` |\n| `Hugo` | `hugo` |\n| `Humble Bundle` | `humblebundle` |\n| `HumHub` | `humhub` |\n| `Hungry Jack's` | `hungryjacks` |\n| `Husqvarna` | `husqvarna` |\n| `Hyper` | `hyper` |\n| `Hyperskill` | `hyperskill` |\n| `HyperX` | `hyperx` |\n| `Hypothesis` | `hypothesis` |\n| `Hyprland` | `hyprland` |\n| `Hyundai` | `hyundai` |\n| `i18next` | `i18next` |\n| `i3` | `i3` |\n| `Iata` | `iata` |\n| `iBeacon` | `ibeacon` |\n| `Iberia` | `iberia` |\n| `Iced` | `iced` |\n| `Iceland` | `iceland` |\n| `ICICI Bank` | `icicibank` |\n| `Icinga` | `icinga` |\n| `iCloud` | `icloud` |\n| `IcoMoon` | `icomoon` |\n| `ICON` | `icon` |\n| `Iconfinder` | `iconfinder` |\n| `Iconify` | `iconify` |\n| `IconJar` | `iconjar` |\n| `Icons8` | `icons8` |\n| `ICQ` | `icq` |\n| `IEEE` | `ieee` |\n| `iFixit` | `ifixit` |\n| `iFood` | `ifood` |\n| `IFTTT` | `ifttt` |\n| `IGDB` | `igdb` |\n| `IGN` | `ign` |\n| `iHeartRadio` | `iheartradio` |\n| `IKEA` | `ikea` |\n| `Île-de-France Mobilités` | `iledefrancemobilites` |\n| `Image.sc` | `imagedotsc` |\n| `ImageJ` | `imagej` |\n| `IMDb` | `imdb` |\n| `iMessage` | `imessage` |\n| `Imgur` | `imgur` |\n| `Immer` | `immer` |\n| `Immich` | `immich` |\n| `Imou` | `imou` |\n| `ImprovMX` | `improvmx` |\n| `Indeed` | `indeed` |\n| `Indian Super League` | `indiansuperleague` |\n| `Indie Hackers` | `indiehackers` |\n| `IndiGo` | `indigo` |\n| `Inductive Automation` | `inductiveautomation` |\n| `Inertia` | `inertia` |\n| `INFINITI` | `infiniti` |\n| `InfluxDB` | `influxdb` |\n| `Infomaniak` | `infomaniak` |\n| `InfoQ` | `infoq` |\n| `Informatica` | `informatica` |\n| `Infosys` | `infosys` |\n| `Infracost` | `infracost` |\n| `Ingress` | `ingress` |\n| `Inkdrop` | `inkdrop` |\n| `Inkscape` | `inkscape` |\n| `Inoreader` | `inoreader` |\n| `Insomnia` | `insomnia` |\n| `INSPIRE` | `inspire` |\n| `Insta360` | `insta360` |\n| `Instacart` | `instacart` |\n| `Instagram` | `instagram` |\n| `Instapaper` | `instapaper` |\n| `Instatus` | `instatus` |\n| `Instructables` | `instructables` |\n| `Instructure` | `instructure` |\n| `Intel` | `intel` |\n| `IntelliJ IDEA` | `intellijidea` |\n| `Interaction Design Foundation` | `interactiondesignfoundation` |\n| `InteractJS` | `interactjs` |\n| `Interbase` | `interbase` |\n| `Intercom` | `intercom` |\n| `Intermarche` | `intermarche` |\n| `Internet Archive` | `internetarchive` |\n| `Internet Computer` | `internetcomputer` |\n| `Intigriti` | `intigriti` |\n| `Intuit` | `intuit` |\n| `InVision` | `invision` |\n| `Invoice Ninja` | `invoiceninja` |\n| `ioBroker` | `iobroker` |\n| `Ionic` | `ionic` |\n| `Ionos` | `ionos` |\n| `iOS` | `ios` |\n| `IOTA` | `iota` |\n| `IPFS` | `ipfs` |\n| `IRIS` | `iris` |\n| `iRobot` | `irobot` |\n| `ISC2` | `isc2` |\n| `Issuu` | `issuu` |\n| `Istio` | `istio` |\n| `Itch.io` | `itchdotio` |\n| `iTerm2` | `iterm2` |\n| `iTunes` | `itunes` |\n| `ITVx` | `itvx` |\n| `IVECO` | `iveco` |\n| `Jabber` | `jabber` |\n| `Jaeger` | `jaeger` |\n| `Jaguar` | `jaguar` |\n| `Jamboard` | `jamboard` |\n| `Jameson` | `jameson` |\n| `Jamstack` | `jamstack` |\n| `Japan Airlines` | `japanairlines` |\n| `Jasmine` | `jasmine` |\n| `JavaScript` | `javascript` |\n| `JBL` | `jbl` |\n| `JCB` | `jcb` |\n| `Jeep` | `jeep` |\n| `Jekyll` | `jekyll` |\n| `Jellyfin` | `jellyfin` |\n| `Jenkins` | `jenkins` |\n| `Jest` | `jest` |\n| `JET` | `jet` |\n| `JetBlue` | `jetblue` |\n| `JetBrains` | `jetbrains` |\n| `Jetpack Compose` | `jetpackcompose` |\n| `JFrog` | `jfrog` |\n| `JFrog Pipelines` | `jfrogpipelines` |\n| `JHipster` | `jhipster` |\n| `Jinja` | `jinja` |\n| `Jio` | `jio` |\n| `Jira` | `jira` |\n| `Jira Software` | `jirasoftware` |\n| `JitPack` | `jitpack` |\n| `Jitsi` | `jitsi` |\n| `John Deere` | `johndeere` |\n| `Joomla` | `joomla` |\n| `Joplin` | `joplin` |\n| `Jordan` | `jordan` |\n| `JOUAV` | `jouav` |\n| `Jovian` | `jovian` |\n| `JPEG` | `jpeg` |\n| `jQuery` | `jquery` |\n| `JR Group` | `jrgroup` |\n| `jsDelivr` | `jsdelivr` |\n| `JSFiddle` | `jsfiddle` |\n| `JSON` | `json` |\n| `JSON Web Tokens` | `jsonwebtokens` |\n| `JSR` | `jsr` |\n| `JSS` | `jss` |\n| `JUCE` | `juce` |\n| `Juejin` | `juejin` |\n| `JUKE` | `juke` |\n| `Julia` | `julia` |\n| `Juniper Networks` | `junipernetworks` |\n| `JUnit5` | `junit5` |\n| `Jupyter` | `jupyter` |\n| `Just Eat` | `justeat` |\n| `JustGiving` | `justgiving` |\n| `K3s` | `k3s` |\n| `k6` | `k6` |\n| `Kaggle` | `kaggle` |\n| `Kagi` | `kagi` |\n| `Kahoot!` | `kahoot` |\n| `KaiOS` | `kaios` |\n| `Kakao` | `kakao` |\n| `KakaoTalk` | `kakaotalk` |\n| `Kali Linux` | `kalilinux` |\n| `Kamailio` | `kamailio` |\n| `Kaniko` | `kaniko` |\n| `Karlsruher Verkehrsverbund` | `karlsruherverkehrsverbund` |\n| `Kasa Smart` | `kasasmart` |\n| `KashFlow` | `kashflow` |\n| `Kaspersky` | `kaspersky` |\n| `Katana` | `katana` |\n| `Kaufland` | `kaufland` |\n| `KDE` | `kde` |\n| `KDE Plasma` | `kdeplasma` |\n| `Kdenlive` | `kdenlive` |\n| `Kedro` | `kedro` |\n| `Keenetic` | `keenetic` |\n| `Keep a Changelog` | `keepachangelog` |\n| `KeePassXC` | `keepassxc` |\n| `Keeper` | `keeper` |\n| `KeeWeb` | `keeweb` |\n| `Kentico` | `kentico` |\n| `Keras` | `keras` |\n| `Keybase` | `keybase` |\n| `KeyCDN` | `keycdn` |\n| `Keycloak` | `keycloak` |\n| `Keystone` | `keystone` |\n| `KFC` | `kfc` |\n| `Khan Academy` | `khanacademy` |\n| `Khronos Group` | `khronosgroup` |\n| `Kia` | `kia` |\n| `Kibana` | `kibana` |\n| `KiCad` | `kicad` |\n| `Kick` | `kick` |\n| `Kickstarter` | `kickstarter` |\n| `Kik` | `kik` |\n| `Kingston Technology` | `kingstontechnology` |\n| `Kinopoisk` | `kinopoisk` |\n| `Kinsta` | `kinsta` |\n| `Kirby` | `kirby` |\n| `Kit` | `kit` |\n| `Kitsu` | `kitsu` |\n| `Klarna` | `klarna` |\n| `Kleinanzeigen` | `kleinanzeigen` |\n| `KLM` | `klm` |\n| `Klook` | `klook` |\n| `Knative` | `knative` |\n| `Knex.js` | `knexdotjs` |\n| `KNIME` | `knime` |\n| `Knip` | `knip` |\n| `KnowledgeBase` | `knowledgebase` |\n| `Known` | `known` |\n| `Ko-fi` | `kofi` |\n| `Koa` | `koa` |\n| `Koc` | `koc` |\n| `Kodak` | `kodak` |\n| `Kodi` | `kodi` |\n| `Koenigsegg` | `koenigsegg` |\n| `Kofax` | `kofax` |\n| `Komoot` | `komoot` |\n| `Konami` | `konami` |\n| `Kong` | `kong` |\n| `Kongregate` | `kongregate` |\n| `Konva` | `konva` |\n| `Kotlin` | `kotlin` |\n| `Koyeb` | `koyeb` |\n| `Krita` | `krita` |\n| `KTM` | `ktm` |\n| `Ktor` | `ktor` |\n| `Kuaishou` | `kuaishou` |\n| `Kubernetes` | `kubernetes` |\n| `Kubuntu` | `kubuntu` |\n| `KuCoin` | `kucoin` |\n| `Kueski` | `kueski` |\n| `Kuma` | `kuma` |\n| `Kununu` | `kununu` |\n| `Kuula` | `kuula` |\n| `KX` | `kx` |\n| `Kyocera` | `kyocera` |\n| `L'Équipe` | `lequipe` |\n| `LabVIEW` | `labview` |\n| `LADA` | `lada` |\n| `Lamborghini` | `lamborghini` |\n| `Land Rover` | `landrover` |\n| `LangChain` | `langchain` |\n| `LanguageTool` | `languagetool` |\n| `Lapce` | `lapce` |\n| `Laragon` | `laragon` |\n| `Laravel` | `laravel` |\n| `Laravel Horizon` | `laravelhorizon` |\n| `Laravel Nova` | `laravelnova` |\n| `Last.fm` | `lastdotfm` |\n| `LastPass` | `lastpass` |\n| `LaTeX` | `latex` |\n| `Launchpad` | `launchpad` |\n| `Lazarus` | `lazarus` |\n| `LazyVim` | `lazyvim` |\n| `LBRY` | `lbry` |\n| `Leader Price` | `leaderprice` |\n| `Leaflet` | `leaflet` |\n| `League of Legends` | `leagueoflegends` |\n| `Leanpub` | `leanpub` |\n| `LeetCode` | `leetcode` |\n| `Lefthook` | `lefthook` |\n| `Legacy Games` | `legacygames` |\n| `Leica` | `leica` |\n| `Lemmy` | `lemmy` |\n| `Lemon Squeezy` | `lemonsqueezy` |\n| `Lenovo` | `lenovo` |\n| `Lens` | `lens` |\n| `Leptos` | `leptos` |\n| `Lerna` | `lerna` |\n| `Leroy Merlin` | `leroymerlin` |\n| `Les libraires` | `leslibraires` |\n| `Less` | `less` |\n| `Let's Encrypt` | `letsencrypt` |\n| `Letterboxd` | `letterboxd` |\n| `levels.fyi` | `levelsdotfyi` |\n| `LG` | `lg` |\n| `Li-Ning` | `lining` |\n| `Libera.Chat` | `liberadotchat` |\n| `Liberapay` | `liberapay` |\n| `Libraries.io` | `librariesdotio` |\n| `LibraryThing` | `librarything` |\n| `LibreOffice` | `libreoffice` |\n| `LibreOffice Base` | `libreofficebase` |\n| `LibreOffice Calc` | `libreofficecalc` |\n| `LibreOffice Draw` | `libreofficedraw` |\n| `LibreOffice Impress` | `libreofficeimpress` |\n| `LibreOffice Math` | `libreofficemath` |\n| `LibreOffice Writer` | `libreofficewriter` |\n| `LibreTranslate` | `libretranslate` |\n| `LibreTube` | `libretube` |\n| `LibreWolf` | `librewolf` |\n| `libuv` | `libuv` |\n| `Lichess` | `lichess` |\n| `Lidl` | `lidl` |\n| `LIFX` | `lifx` |\n| `LightBurn` | `lightburn` |\n| `Lighthouse` | `lighthouse` |\n| `Lightning` | `lightning` |\n| `LimeSurvey` | `limesurvey` |\n| `LINE` | `line` |\n| `LineageOS` | `lineageos` |\n| `Linear` | `linear` |\n| `Linkerd` | `linkerd` |\n| `Linkfire` | `linkfire` |\n| `Linksys` | `linksys` |\n| `Linktree` | `linktree` |\n| `Linphone` | `linphone` |\n| `LintCode` | `lintcode` |\n| `Linux` | `linux` |\n| `Linux Containers` | `linuxcontainers` |\n| `Linux Foundation` | `linuxfoundation` |\n| `Linux Mint` | `linuxmint` |\n| `Linux Professional Institute` | `linuxprofessionalinstitute` |\n| `LinuxServer` | `linuxserver` |\n| `Lion Air` | `lionair` |\n| `Liquibase` | `liquibase` |\n| `listmonk` | `listmonk` |\n| `Lit` | `lit` |\n| `Litecoin` | `litecoin` |\n| `Literal` | `literal` |\n| `LITIENGINE` | `litiengine` |\n| `LiveChat` | `livechat` |\n| `LiveJournal` | `livejournal` |\n| `Livewire` | `livewire` |\n| `LLVM` | `llvm` |\n| `LMMS` | `lmms` |\n| `Lobsters` | `lobsters` |\n| `Local` | `local` |\n| `Lodash` | `lodash` |\n| `Logitech` | `logitech` |\n| `Logitech G` | `logitechg` |\n| `LogMeIn` | `logmein` |\n| `Logseq` | `logseq` |\n| `Logstash` | `logstash` |\n| `Looker` | `looker` |\n| `Loom` | `loom` |\n| `Loop` | `loop` |\n| `LoopBack` | `loopback` |\n| `Loot Crate` | `lootcrate` |\n| `Lospec` | `lospec` |\n| `LOT Polish Airlines` | `lotpolishairlines` |\n| `LTspice` | `ltspice` |\n| `Lua` | `lua` |\n| `Lubuntu` | `lubuntu` |\n| `Lucia` | `lucia` |\n| `Lucid` | `lucid` |\n| `Lucide` | `lucide` |\n| `Ludwig` | `ludwig` |\n| `Lufthansa` | `lufthansa` |\n| `Lumen` | `lumen` |\n| `Lunacy` | `lunacy` |\n| `Lutris` | `lutris` |\n| `LVGL` | `lvgl` |\n| `Lydia` | `lydia` |\n| `Lyft` | `lyft` |\n| `MAAS` | `maas` |\n| `macOS` | `macos` |\n| `MacPaw` | `macpaw` |\n| `Macy's` | `macys` |\n| `Magasins U` | `magasinsu` |\n| `Magic` | `magic` |\n| `Magisk` | `magisk` |\n| `Mahindra` | `mahindra` |\n| `mail.com` | `maildotcom` |\n| `Mail.Ru` | `maildotru` |\n| `mailbox.org` | `mailboxdotorg` |\n| `MailChimp` | `mailchimp` |\n| `Mailgun` | `mailgun` |\n| `Mailtrap` | `mailtrap` |\n| `MainWP` | `mainwp` |\n| `Major League Hacking` | `majorleaguehacking` |\n| `Make` | `make` |\n| `MakerBot` | `makerbot` |\n| `Malt` | `malt` |\n| `Malwarebytes` | `malwarebytes` |\n| `Mamba UI` | `mambaui` |\n| `MAMP` | `mamp` |\n| `MAN` | `man` |\n| `ManageIQ` | `manageiq` |\n| `Manjaro` | `manjaro` |\n| `Mantine` | `mantine` |\n| `Mapbox` | `mapbox` |\n| `Mapillary` | `mapillary` |\n| `MapLibre` | `maplibre` |\n| `MapTiler` | `maptiler` |\n| `MariaDB` | `mariadb` |\n| `MariaDB Foundation` | `mariadbfoundation` |\n| `Markdown` | `markdown` |\n| `Marko` | `marko` |\n| `Marriott` | `marriott` |\n| `MarvelApp` | `marvelapp` |\n| `Maserati` | `maserati` |\n| `MasterCard` | `mastercard` |\n| `mastercomfig` | `mastercomfig` |\n| `Mastodon` | `mastodon` |\n| `Material Design` | `materialdesign` |\n| `Material Design Icons` | `materialdesignicons` |\n| `Material for MkDocs` | `materialformkdocs` |\n| `Matillion` | `matillion` |\n| `Matomo` | `matomo` |\n| `Matrix` | `matrix` |\n| `Matter.js` | `matterdotjs` |\n| `Mattermost` | `mattermost` |\n| `Matternet` | `matternet` |\n| `Mautic` | `mautic` |\n| `Max` | `max` |\n| `Max-Planck-Gesellschaft` | `maxplanckgesellschaft` |\n| `Maytag` | `maytag` |\n| `Mazda` | `mazda` |\n| `Maze` | `maze` |\n| `McAfee` | `mcafee` |\n| `McDonald's` | `mcdonalds` |\n| `McLaren` | `mclaren` |\n| `mdBook` | `mdbook` |\n| `MDN Web Docs` | `mdnwebdocs` |\n| `MDX` | `mdx` |\n| `MediaFire` | `mediafire` |\n| `MediaMarkt` | `mediamarkt` |\n| `MediaPipe` | `mediapipe` |\n| `MediaTek` | `mediatek` |\n| `MediBang Paint` | `medibangpaint` |\n| `Medium` | `medium` |\n| `Medusa` | `medusa` |\n| `Meetup` | `meetup` |\n| `MEGA` | `mega` |\n| `Meilisearch` | `meilisearch` |\n| `Meituan` | `meituan` |\n| `Meizu` | `meizu` |\n| `Mendeley` | `mendeley` |\n| `MentorCruise` | `mentorcruise` |\n| `Mercado Pago` | `mercadopago` |\n| `Mercedes` | `mercedes` |\n| `Merck` | `merck` |\n| `Mercurial` | `mercurial` |\n| `Mermaid` | `mermaid` |\n| `Messenger` | `messenger` |\n| `Meta` | `meta` |\n| `Metabase` | `metabase` |\n| `Metacritic` | `metacritic` |\n| `MetaFilter` | `metafilter` |\n| `Metasploit` | `metasploit` |\n| `Meteor` | `meteor` |\n| `Metro` | `metro` |\n| `Metro de la Ciudad de México` | `metrodelaciudaddemexico` |\n| `Metro de Madrid` | `metrodemadrid` |\n| `Métro de Paris` | `metrodeparis` |\n| `MeWe` | `mewe` |\n| `MG` | `mg` |\n| `Micro Editor` | `microeditor` |\n| `micro:bit` | `microbit` |\n| `Micro.blog` | `microdotblog` |\n| `MicroPython` | `micropython` |\n| `Microstation` | `microstation` |\n| `MicroStrategy` | `microstrategy` |\n| `MIDI` | `midi` |\n| `Migadu` | `migadu` |\n| `miHoYo` | `mihoyo` |\n| `Mikrotik` | `mikrotik` |\n| `Milanote` | `milanote` |\n| `Milvus` | `milvus` |\n| `Minds` | `minds` |\n| `Minetest` | `minetest` |\n| `MinGW-w64` | `mingww64` |\n| `Mini` | `mini` |\n| `MinIO` | `minio` |\n| `Mintlify` | `mintlify` |\n| `Minutemailer` | `minutemailer` |\n| `Miraheze` | `miraheze` |\n| `Miro` | `miro` |\n| `Misskey` | `misskey` |\n| `Mitsubishi` | `mitsubishi` |\n| `Mix` | `mix` |\n| `Mixcloud` | `mixcloud` |\n| `Mixpanel` | `mixpanel` |\n| `MLB` | `mlb` |\n| `MLflow` | `mlflow` |\n| `MobX` | `mobx` |\n| `MobX-State-Tree` | `mobxstatetree` |\n| `Mocha` | `mocha` |\n| `Mock Service Worker` | `mockserviceworker` |\n| `Modal` | `modal` |\n| `Modin` | `modin` |\n| `Modrinth` | `modrinth` |\n| `MODX` | `modx` |\n| `Mojeek` | `mojeek` |\n| `Moleculer` | `moleculer` |\n| `Momenteo` | `momenteo` |\n| `Monero` | `monero` |\n| `MoneyGram` | `moneygram` |\n| `MongoDB` | `mongodb` |\n| `Mongoose` | `mongoose` |\n| `Mongoose` | `mongoosedotws` |\n| `Monica` | `monica` |\n| `monkey tie` | `monkeytie` |\n| `Monkeytype` | `monkeytype` |\n| `MonoGame` | `monogame` |\n| `Monoprix` | `monoprix` |\n| `Monster` | `monster` |\n| `Monzo` | `monzo` |\n| `Moo` | `moo` |\n| `Moodle` | `moodle` |\n| `Moonrepo` | `moonrepo` |\n| `Moq` | `moq` |\n| `Moqups` | `moqups` |\n| `Morrisons` | `morrisons` |\n| `Moscow Metro` | `moscowmetro` |\n| `Motorola` | `motorola` |\n| `Movistar` | `movistar` |\n| `Mozilla` | `mozilla` |\n| `mpv` | `mpv` |\n| `MQTT` | `mqtt` |\n| `MSI` | `msi` |\n| `MSI Business` | `msibusiness` |\n| `MTA` | `mta` |\n| `MTR` | `mtr` |\n| `MUBI` | `mubi` |\n| `MUI` | `mui` |\n| `Mulesoft` | `mulesoft` |\n| `Müller` | `muller` |\n| `Mullvad` | `mullvad` |\n| `Multisim` | `multisim` |\n| `Mumble` | `mumble` |\n| `MUO` | `muo` |\n| `Mural` | `mural` |\n| `MuseScore` | `musescore` |\n| `MusicBrainz` | `musicbrainz` |\n| `MX Linux` | `mxlinux` |\n| `MyAnimeList` | `myanimelist` |\n| `MyGet` | `myget` |\n| `MYOB` | `myob` |\n| `Myspace` | `myspace` |\n| `MySQL` | `mysql` |\n| `N26` | `n26` |\n| `n8n` | `n8n` |\n| `Namebase` | `namebase` |\n| `Namecheap` | `namecheap` |\n| `NameMC` | `namemc` |\n| `NameSilo` | `namesilo` |\n| `Namu Wiki` | `namuwiki` |\n| `Nano` | `nano` |\n| `Nano Stores` | `nanostores` |\n| `Napster` | `napster` |\n| `NASA` | `nasa` |\n| `National Grid` | `nationalgrid` |\n| `National Rail` | `nationalrail` |\n| `NativeScript` | `nativescript` |\n| `NATS.io` | `natsdotio` |\n| `Naver` | `naver` |\n| `NBA` | `nba` |\n| `NBB` | `nbb` |\n| `NBC` | `nbc` |\n| `NDR` | `ndr` |\n| `NEAR` | `near` |\n| `Nebula` | `nebula` |\n| `NEC` | `nec` |\n| `Neo4j` | `neo4j` |\n| `Neovim` | `neovim` |\n| `Neptune` | `neptune` |\n| `NestJS` | `nestjs` |\n| `NetApp` | `netapp` |\n| `NetBSD` | `netbsd` |\n| `netcup` | `netcup` |\n| `Netdata` | `netdata` |\n| `NetEase Cloud Music` | `neteasecloudmusic` |\n| `Netflix` | `netflix` |\n| `NETGEAR` | `netgear` |\n| `Netlify` | `netlify` |\n| `Nette` | `nette` |\n| `Netto` | `netto` |\n| `Neutralinojs` | `neutralinojs` |\n| `New Balance` | `newbalance` |\n| `New Japan Pro-Wrestling` | `newjapanprowrestling` |\n| `New Relic` | `newrelic` |\n| `New York Times` | `newyorktimes` |\n| `Newegg` | `newegg` |\n| `Nexon` | `nexon` |\n| `Next.js` | `nextdotjs` |\n| `NextBillion.ai` | `nextbilliondotai` |\n| `Nextcloud` | `nextcloud` |\n| `NextDNS` | `nextdns` |\n| `Nextdoor` | `nextdoor` |\n| `Nextflow` | `nextflow` |\n| `Nextra` | `nextra` |\n| `NextUI` | `nextui` |\n| `Nexus Mods` | `nexusmods` |\n| `nf-core` | `nfcore` |\n| `NFC` | `nfc` |\n| `NGINX` | `nginx` |\n| `Nginx Proxy Manager` | `nginxproxymanager` |\n| `ngrok` | `ngrok` |\n| `NgRx` | `ngrx` |\n| `NHL` | `nhl` |\n| `NiceHash` | `nicehash` |\n| `niconico` | `niconico` |\n| `Nike` | `nike` |\n| `Nikon` | `nikon` |\n| `Nim` | `nim` |\n| `Nissan` | `nissan` |\n| `NixOS` | `nixos` |\n| `Node-RED` | `nodered` |\n| `Node.js` | `nodedotjs` |\n| `Nodemon` | `nodemon` |\n| `Nokia` | `nokia` |\n| `Nomad` | `nomad` |\n| `Norco` | `norco` |\n| `Nordic Semiconductor` | `nordicsemiconductor` |\n| `NordVPN` | `nordvpn` |\n| `Normalize.css` | `normalizedotcss` |\n| `Norton` | `norton` |\n| `Norwegian` | `norwegian` |\n| `Notepad++` | `notepadplusplus` |\n| `Notion` | `notion` |\n| `Notist` | `notist` |\n| `Noun Project` | `nounproject` |\n| `Novu` | `novu` |\n| `NOW` | `now` |\n| `npm` | `npm` |\n| `Nrwl` | `nrwl` |\n| `NSIS` | `nsis` |\n| `ntfy` | `ntfy` |\n| `Nubank` | `nubank` |\n| `Nucleo` | `nucleo` |\n| `NuGet` | `nuget` |\n| `Nuke` | `nuke` |\n| `Numba` | `numba` |\n| `NumPy` | `numpy` |\n| `Nunjucks` | `nunjucks` |\n| `Nushell` | `nushell` |\n| `Nutanix` | `nutanix` |\n| `Nuxt` | `nuxt` |\n| `NVIDIA` | `nvidia` |\n| `nvm` | `nvm` |\n| `Nx` | `nx` |\n| `NXP` | `nxp` |\n| `NZXT` | `nzxt` |\n| `O'Reilly` | `oreilly` |\n| `O2` | `o2` |\n| `ÖBB` | `obb` |\n| `OBS Studio` | `obsstudio` |\n| `Observable` | `observable` |\n| `Obsidian` | `obsidian` |\n| `Obtainium` | `obtainium` |\n| `OCaml` | `ocaml` |\n| `OCLC` | `oclc` |\n| `oclif` | `oclif` |\n| `Octane Render` | `octanerender` |\n| `Octave` | `octave` |\n| `October CMS` | `octobercms` |\n| `OctoPrint` | `octoprint` |\n| `Octopus Deploy` | `octopusdeploy` |\n| `Oculus` | `oculus` |\n| `Odin` | `odin` |\n| `Odnoklassniki` | `odnoklassniki` |\n| `Odoo` | `odoo` |\n| `Odysee` | `odysee` |\n| `Oh Dear` | `ohdear` |\n| `okcupid` | `okcupid` |\n| `Okta` | `okta` |\n| `OKX` | `okx` |\n| `Ollama` | `ollama` |\n| `Omada Cloud` | `omadacloud` |\n| `OnePlus` | `oneplus` |\n| `OnlyFans` | `onlyfans` |\n| `ONLYOFFICE` | `onlyoffice` |\n| `ONNX` | `onnx` |\n| `OnStar` | `onstar` |\n| `Opel` | `opel` |\n| `Open Access` | `openaccess` |\n| `Open Badges` | `openbadges` |\n| `Open Bug Bounty` | `openbugbounty` |\n| `Open Collective` | `opencollective` |\n| `Open Containers Initiative` | `opencontainersinitiative` |\n| `Open Source Hardware` | `opensourcehardware` |\n| `Open Source Initiative` | `opensourceinitiative` |\n| `OpenAI` | `openai` |\n| `OpenAI Gym` | `openaigym` |\n| `OpenAPI Initiative` | `openapiinitiative` |\n| `OpenBSD` | `openbsd` |\n| `OpenCV` | `opencv` |\n| `OpenFaaS` | `openfaas` |\n| `OpenGL` | `opengl` |\n| `openHAB` | `openhab` |\n| `OpenID` | `openid` |\n| `OpenJDK` | `openjdk` |\n| `OpenJS Foundation` | `openjsfoundation` |\n| `Openlayers` | `openlayers` |\n| `openmediavault` | `openmediavault` |\n| `OpenMined` | `openmined` |\n| `OpenNebula` | `opennebula` |\n| `OpenProject` | `openproject` |\n| `OpenSCAD` | `openscad` |\n| `OpenSea` | `opensea` |\n| `OpenSearch` | `opensearch` |\n| `OpenSSL` | `openssl` |\n| `OpenStack` | `openstack` |\n| `OpenStreetMap` | `openstreetmap` |\n| `openSUSE` | `opensuse` |\n| `OpenTelemetry` | `opentelemetry` |\n| `OpenText` | `opentext` |\n| `OpenTofu` | `opentofu` |\n| `Openverse` | `openverse` |\n| `OpenVPN` | `openvpn` |\n| `OpenWrt` | `openwrt` |\n| `OpenZeppelin` | `openzeppelin` |\n| `OpenZFS` | `openzfs` |\n| `Opera` | `opera` |\n| `Opera GX` | `operagx` |\n| `OPNSense` | `opnsense` |\n| `OPPO` | `oppo` |\n| `Opsgenie` | `opsgenie` |\n| `OpsLevel` | `opslevel` |\n| `Optimism` | `optimism` |\n| `Orange` | `orange` |\n| `ORCID` | `orcid` |\n| `Org` | `org` |\n| `Organic Maps` | `organicmaps` |\n| `Origin` | `origin` |\n| `Osano` | `osano` |\n| `OSF` | `osf` |\n| `OSGeo` | `osgeo` |\n| `Oshkosh` | `oshkosh` |\n| `OSMC` | `osmc` |\n| `osu!` | `osu` |\n| `Otto` | `otto` |\n| `Outline` | `outline` |\n| `Overcast` | `overcast` |\n| `Overleaf` | `overleaf` |\n| `OVH` | `ovh` |\n| `OWASP` | `owasp` |\n| `OWASP Dependency-Check` | `dependencycheck` |\n| `ownCloud` | `owncloud` |\n| `Oxygen` | `oxygen` |\n| `OYO` | `oyo` |\n| `p5.js` | `p5dotjs` |\n| `Packagist` | `packagist` |\n| `Packer` | `packer` |\n| `Packt` | `packt` |\n| `Paddle` | `paddle` |\n| `PaddlePaddle` | `paddlepaddle` |\n| `Paddy Power` | `paddypower` |\n| `Pagekit` | `pagekit` |\n| `PagerDuty` | `pagerduty` |\n| `PageSpeed Insights` | `pagespeedinsights` |\n| `PagSeguro` | `pagseguro` |\n| `Palantir` | `palantir` |\n| `Palo Alto Networks` | `paloaltonetworks` |\n| `Palo Alto Software` | `paloaltosoftware` |\n| `Panasonic` | `panasonic` |\n| `pandas` | `pandas` |\n| `Pandora` | `pandora` |\n| `Pantheon` | `pantheon` |\n| `Paperless-ngx` | `paperlessngx` |\n| `Papers With Code` | `paperswithcode` |\n| `Paperspace` | `paperspace` |\n| `Paradox Interactive` | `paradoxinteractive` |\n| `Paramount+` | `paramountplus` |\n| `Parity Substrate` | `paritysubstrate` |\n| `Parrot Security` | `parrotsecurity` |\n| `Parse.ly` | `parsedotly` |\n| `Passport` | `passport` |\n| `Pastebin` | `pastebin` |\n| `Patreon` | `patreon` |\n| `Paychex` | `paychex` |\n| `Payhip` | `payhip` |\n| `Payload CMS` | `payloadcms` |\n| `Payoneer` | `payoneer` |\n| `PayPal` | `paypal` |\n| `Paytm` | `paytm` |\n| `PCGamingWiki` | `pcgamingwiki` |\n| `PDM` | `pdm` |\n| `PDQ` | `pdq` |\n| `Peak Design` | `peakdesign` |\n| `Pearson` | `pearson` |\n| `Peerlist` | `peerlist` |\n| `PeerTube` | `peertube` |\n| `Pegasus Airlines` | `pegasusairlines` |\n| `Pelican` | `pelican` |\n| `Peloton` | `peloton` |\n| `Penny` | `penny` |\n| `Penpot` | `penpot` |\n| `Percy` | `percy` |\n| `Perforce` | `perforce` |\n| `Perl` | `perl` |\n| `Perplexity` | `perplexity` |\n| `Persistent` | `persistent` |\n| `Personio` | `personio` |\n| `Pets at Home` | `petsathome` |\n| `Peugeot` | `peugeot` |\n| `Pexels` | `pexels` |\n| `pfSense` | `pfsense` |\n| `Phabricator` | `phabricator` |\n| `Philips Hue` | `philipshue` |\n| `Phoenix Framework` | `phoenixframework` |\n| `PhonePe` | `phonepe` |\n| `Phosphor Icons` | `phosphoricons` |\n| `Photobucket` | `photobucket` |\n| `Photocrowd` | `photocrowd` |\n| `Photon` | `photon` |\n| `Photopea` | `photopea` |\n| `PHP` | `php` |\n| `phpBB` | `phpbb` |\n| `phpMyAdmin` | `phpmyadmin` |\n| `PhpStorm` | `phpstorm` |\n| `Pi Network` | `pinetwork` |\n| `Pi-hole` | `pihole` |\n| `Piaggio Group` | `piaggiogroup` |\n| `Piapro` | `piapro` |\n| `Picard Surgelés` | `picardsurgeles` |\n| `Picarto.TV` | `picartodottv` |\n| `Picnic` | `picnic` |\n| `PicPay` | `picpay` |\n| `Picrew` | `picrew` |\n| `Picsart` | `picsart` |\n| `Picxy` | `picxy` |\n| `Pimcore` | `pimcore` |\n| `Pinboard` | `pinboard` |\n| `Pine Script` | `pinescript` |\n| `Pingdom` | `pingdom` |\n| `pino` | `pino` |\n| `Pinterest` | `pinterest` |\n| `Pioneer DJ` | `pioneerdj` |\n| `Piped` | `piped` |\n| `pipx` | `pipx` |\n| `Pivotal Tracker` | `pivotaltracker` |\n| `Piwigo` | `piwigo` |\n| `Pix` | `pix` |\n| `Pixabay` | `pixabay` |\n| `Pixelfed` | `pixelfed` |\n| `pixiv` | `pixiv` |\n| `Pixlr` | `pixlr` |\n| `pkgsrc` | `pkgsrc` |\n| `Planet` | `planet` |\n| `PlanetScale` | `planetscale` |\n| `PlanGrid` | `plangrid` |\n| `Platform.sh` | `platformdotsh` |\n| `PlatformIO` | `platformio` |\n| `Platzi` | `platzi` |\n| `Plausible Analytics` | `plausibleanalytics` |\n| `PlayCanvas` | `playcanvas` |\n| `Player FM` | `playerfm` |\n| `Player.me` | `playerdotme` |\n| `PlayStation` | `playstation` |\n| `PlayStation 2` | `playstation2` |\n| `PlayStation 3` | `playstation3` |\n| `PlayStation 4` | `playstation4` |\n| `PlayStation 5` | `playstation5` |\n| `PlayStation Portable` | `playstationportable` |\n| `PlayStation Vita` | `playstationvita` |\n| `Pleroma` | `pleroma` |\n| `Plesk` | `plesk` |\n| `Plex` | `plex` |\n| `Plotly` | `plotly` |\n| `Plume` | `plume` |\n| `Pluralsight` | `pluralsight` |\n| `Plurk` | `plurk` |\n| `Plus Codes` | `pluscodes` |\n| `PM2` | `pm2` |\n| `pnpm` | `pnpm` |\n| `Pocket` | `pocket` |\n| `Pocket Casts` | `pocketcasts` |\n| `PocketBase` | `pocketbase` |\n| `Podcast Addict` | `podcastaddict` |\n| `Podcast Index` | `podcastindex` |\n| `Podman` | `podman` |\n| `Poe` | `poe` |\n| `Poetry` | `poetry` |\n| `Pointy` | `pointy` |\n| `Polars` | `polars` |\n| `Polestar` | `polestar` |\n| `Polkadot` | `polkadot` |\n| `Poly` | `poly` |\n| `Polygon` | `polygon` |\n| `Polymer Project` | `polymerproject` |\n| `Polywork` | `polywork` |\n| `Pond5` | `pond5` |\n| `Pop!_OS` | `popos` |\n| `Porkbun` | `porkbun` |\n| `Porsche` | `porsche` |\n| `Portainer` | `portainer` |\n| `PortSwigger` | `portswigger` |\n| `Posit` | `posit` |\n| `PostCSS` | `postcss` |\n| `PostgreSQL` | `postgresql` |\n| `PostHog` | `posthog` |\n| `Postman` | `postman` |\n| `Postmates` | `postmates` |\n| `POWERS` | `powers` |\n| `pr.co` | `prdotco` |\n| `pre-commit` | `precommit` |\n| `Preact` | `preact` |\n| `Prefect` | `prefect` |\n| `Premier League` | `premierleague` |\n| `PrepBytes` | `prepbytes` |\n| `PrestaShop` | `prestashop` |\n| `Presto` | `presto` |\n| `Prettier` | `prettier` |\n| `Pretzel` | `pretzel` |\n| `Prevention` | `prevention` |\n| `Prezi` | `prezi` |\n| `Prime` | `prime` |\n| `Prime Video` | `primevideo` |\n| `PrimeFaces` | `primefaces` |\n| `PrimeNG` | `primeng` |\n| `PrimeReact` | `primereact` |\n| `PrimeVue` | `primevue` |\n| `Printables` | `printables` |\n| `Prisma` | `prisma` |\n| `Prismic` | `prismic` |\n| `Private Division` | `privatedivision` |\n| `Private Internet Access` | `privateinternetaccess` |\n| `Pro Tools` | `protools` |\n| `Probot` | `probot` |\n| `Processing Foundation` | `processingfoundation` |\n| `ProcessWire` | `processwire` |\n| `Product Hunt` | `producthunt` |\n| `Progate` | `progate` |\n| `Progress` | `progress` |\n| `Prometheus` | `prometheus` |\n| `Pronouns.page` | `pronounsdotpage` |\n| `ProSieben` | `prosieben` |\n| `Proteus` | `proteus` |\n| `Proto.io` | `protodotio` |\n| `protocols.io` | `protocolsdotio` |\n| `Proton` | `proton` |\n| `Proton Calendar` | `protoncalendar` |\n| `Proton Drive` | `protondrive` |\n| `Proton Mail` | `protonmail` |\n| `Proton VPN` | `protonvpn` |\n| `ProtonDB` | `protondb` |\n| `Protractor` | `protractor` |\n| `Proxmox` | `proxmox` |\n| `Pterodactyl` | `pterodactyl` |\n| `PUBG` | `pubg` |\n| `Publons` | `publons` |\n| `PubMed` | `pubmed` |\n| `Pug` | `pug` |\n| `Pulumi` | `pulumi` |\n| `Puma` | `puma` |\n| `Puppet` | `puppet` |\n| `Puppeteer` | `puppeteer` |\n| `PureScript` | `purescript` |\n| `PurgeCSS` | `purgecss` |\n| `Purism` | `purism` |\n| `Pushbullet` | `pushbullet` |\n| `Pusher` | `pusher` |\n| `PWA` | `pwa` |\n| `PyCharm` | `pycharm` |\n| `PyCQA` | `pycqa` |\n| `Pydantic` | `pydantic` |\n| `PyG` | `pyg` |\n| `PyPI` | `pypi` |\n| `PyPy` | `pypy` |\n| `PyScaffold` | `pyscaffold` |\n| `PySyft` | `pysyft` |\n| `Pytest` | `pytest` |\n| `Python` | `python` |\n| `PythonAnywhere` | `pythonanywhere` |\n| `PyTorch` | `pytorch` |\n| `PyUp` | `pyup` |\n| `Qantas` | `qantas` |\n| `Qase` | `qase` |\n| `Qatar Airways` | `qatarairways` |\n| `qbittorrent` | `qbittorrent` |\n| `QEMU` | `qemu` |\n| `Qgis` | `qgis` |\n| `Qi` | `qi` |\n| `Qiita` | `qiita` |\n| `Qiskit` | `qiskit` |\n| `QIWI` | `qiwi` |\n| `Qlik` | `qlik` |\n| `QMK` | `qmk` |\n| `QNAP` | `qnap` |\n| `QQ` | `qq` |\n| `Qt` | `qt` |\n| `Qualcomm` | `qualcomm` |\n| `Qualtrics` | `qualtrics` |\n| `Qualys` | `qualys` |\n| `Quantcast` | `quantcast` |\n| `QuantConnect` | `quantconnect` |\n| `Quarkus` | `quarkus` |\n| `Quarto` | `quarto` |\n| `Quasar` | `quasar` |\n| `Qubes OS` | `qubesos` |\n| `Quest` | `quest` |\n| `QuickBooks` | `quickbooks` |\n| `QuickLook` | `quicklook` |\n| `QuickTime` | `quicktime` |\n| `quicktype` | `quicktype` |\n| `Quip` | `quip` |\n| `Quizlet` | `quizlet` |\n| `Quora` | `quora` |\n| `Qwant` | `qwant` |\n| `Qwik` | `qwik` |\n| `Qwiklabs` | `qwiklabs` |\n| `Qzone` | `qzone` |\n| `R` | `r` |\n| `R3` | `r3` |\n| `RabbitMQ` | `rabbitmq` |\n| `Racket` | `racket` |\n| `RAD Studio` | `radstudio` |\n| `Radar` | `radar` |\n| `radarr` | `radarr` |\n| `Radix UI` | `radixui` |\n| `Railway` | `railway` |\n| `Rainmeter` | `rainmeter` |\n| `Rakuten` | `rakuten` |\n| `Ram` | `ram` |\n| `Rancher` | `rancher` |\n| `Rapid` | `rapid` |\n| `Rarible` | `rarible` |\n| `Rasa` | `rasa` |\n| `Raspberry Pi` | `raspberrypi` |\n| `Ravelry` | `ravelry` |\n| `Ray` | `ray` |\n| `Raycast` | `raycast` |\n| `Raylib` | `raylib` |\n| `Razer` | `razer` |\n| `Razorpay` | `razorpay` |\n| `Rclone` | `rclone` |\n| `React` | `react` |\n| `React Bootstrap` | `reactbootstrap` |\n| `React Hook Form` | `reacthookform` |\n| `React Query` | `reactquery` |\n| `React Router` | `reactrouter` |\n| `React Table` | `reacttable` |\n| `Reactive Resume` | `reactiveresume` |\n| `ReactiveX` | `reactivex` |\n| `ReactOS` | `reactos` |\n| `Read the Docs` | `readthedocs` |\n| `Read.cv` | `readdotcv` |\n| `ReadMe` | `readme` |\n| `Reason` | `reason` |\n| `Reason Studios` | `reasonstudios` |\n| `Recoil` | `recoil` |\n| `Red` | `red` |\n| `Red Bull` | `redbull` |\n| `Red Candle Games` | `redcandlegames` |\n| `Red Hat` | `redhat` |\n| `Red Hat Open Shift` | `redhatopenshift` |\n| `Redash` | `redash` |\n| `Redbubble` | `redbubble` |\n| `Reddit` | `reddit` |\n| `Redis` | `redis` |\n| `Redmine` | `redmine` |\n| `Redox` | `redox` |\n| `Redragon` | `redragon` |\n| `Redsys` | `redsys` |\n| `Redux` | `redux` |\n| `Redux-Saga` | `reduxsaga` |\n| `RedwoodJS` | `redwoodjs` |\n| `Reebok` | `reebok` |\n| `Refine` | `refine` |\n| `Refined GitHub` | `refinedgithub` |\n| `Relay` | `relay` |\n| `Reliance Industries Limited` | `relianceindustrieslimited` |\n| `remark` | `remark` |\n| `Remedy Entertainment` | `remedyentertainment` |\n| `Remix` | `remix` |\n| `remove.bg` | `removedotbg` |\n| `Ren'Py` | `renpy` |\n| `Renault` | `renault` |\n| `Render` | `render` |\n| `Renovate` | `renovate` |\n| `Renren` | `renren` |\n| `Replicate` | `replicate` |\n| `Replit` | `replit` |\n| `Republic of Gamers` | `republicofgamers` |\n| `ReScript` | `rescript` |\n| `RescueTime` | `rescuetime` |\n| `ResearchGate` | `researchgate` |\n| `Resend` | `resend` |\n| `ReSharper` | `resharper` |\n| `Resurrection Remix OS` | `resurrectionremixos` |\n| `Retool` | `retool` |\n| `RetroArch` | `retroarch` |\n| `RetroPie` | `retropie` |\n| `ReVanced` | `revanced` |\n| `reveal.js` | `revealdotjs` |\n| `ReverbNation` | `reverbnation` |\n| `Revolt.chat` | `revoltdotchat` |\n| `Revolut` | `revolut` |\n| `REWE` | `rewe` |\n| `Rezgo` | `rezgo` |\n| `Rhinoceros` | `rhinoceros` |\n| `Rich` | `rich` |\n| `Rider` | `rider` |\n| `Rimac Automobili` | `rimacautomobili` |\n| `Rime` | `rime` |\n| `Ring` | `ring` |\n| `Riot Games` | `riotgames` |\n| `Ripple` | `ripple` |\n| `RISC-V` | `riscv` |\n| `Riseup` | `riseup` |\n| `Ritz Carlton` | `ritzcarlton` |\n| `Rive` | `rive` |\n| `roadmap.sh` | `roadmapdotsh` |\n| `Roam Research` | `roamresearch` |\n| `Robinhood` | `robinhood` |\n| `Roblox` | `roblox` |\n| `Roblox Studio` | `robloxstudio` |\n| `Roboflow` | `roboflow` |\n| `Robot Framework` | `robotframework` |\n| `Rocket` | `rocket` |\n| `Rocket.Chat` | `rocketdotchat` |\n| `RocksDB` | `rocksdb` |\n| `Rockstar Games` | `rockstargames` |\n| `Rockwell Automation` | `rockwellautomation` |\n| `Rocky Linux` | `rockylinux` |\n| `Roku` | `roku` |\n| `Roll20` | `roll20` |\n| `Rolls-Royce` | `rollsroyce` |\n| `rollup.js` | `rollupdotjs` |\n| `Roon` | `roon` |\n| `Root Me` | `rootme` |\n| `Roots` | `roots` |\n| `Roots Bedrock` | `rootsbedrock` |\n| `Roots Sage` | `rootssage` |\n| `ROS` | `ros` |\n| `Rossmann` | `rossmann` |\n| `Rotary International` | `rotaryinternational` |\n| `Rotten Tomatoes` | `rottentomatoes` |\n| `Roundcube` | `roundcube` |\n| `RSocket` | `rsocket` |\n| `RSS` | `rss` |\n| `RStudio IDE` | `rstudioide` |\n| `RTÉ` | `rte` |\n| `RTL` | `rtl` |\n| `RTLZWEI` | `rtlzwei` |\n| `RTM` | `rtm` |\n| `RuboCop` | `rubocop` |\n| `Ruby` | `ruby` |\n| `Ruby on Rails` | `rubyonrails` |\n| `Ruby Sinatra` | `rubysinatra` |\n| `RubyGems` | `rubygems` |\n| `RubyMine` | `rubymine` |\n| `Ruff` | `ruff` |\n| `Rumahweb` | `rumahweb` |\n| `Rumble` | `rumble` |\n| `Rundeck` | `rundeck` |\n| `Runkeeper` | `runkeeper` |\n| `RunKit` | `runkit` |\n| `Runrun.it` | `runrundotit` |\n| `Rust` | `rust` |\n| `RustDesk` | `rustdesk` |\n| `RxDB` | `rxdb` |\n| `Ryanair` | `ryanair` |\n| `Rye` | `rye` |\n| `S7 Airlines` | `s7airlines` |\n| `Sabanci` | `sabanci` |\n| `Safari` | `safari` |\n| `Sage` | `sage` |\n| `Sahibinden` | `sahibinden` |\n| `Sailfish OS` | `sailfishos` |\n| `Sails.js` | `sailsdotjs` |\n| `Salesforce` | `salesforce` |\n| `Salla` | `salla` |\n| `Salt Project` | `saltproject` |\n| `Sam's Club` | `samsclub` |\n| `Samsung` | `samsung` |\n| `Samsung Pay` | `samsungpay` |\n| `San Francisco Municipal Railway` | `sanfranciscomunicipalrailway` |\n| `SanDisk` | `sandisk` |\n| `Sanic` | `sanic` |\n| `Sanity` | `sanity` |\n| `São Paulo Metro` | `saopaulometro` |\n| `SAP` | `sap` |\n| `Sartorius` | `sartorius` |\n| `Sass` | `sass` |\n| `Sat.1` | `sat1` |\n| `Satellite` | `satellite` |\n| `Saturn` | `saturn` |\n| `Sauce Labs` | `saucelabs` |\n| `Saudia` | `saudia` |\n| `Scala` | `scala` |\n| `Scalar` | `scalar` |\n| `Scaleway` | `scaleway` |\n| `Scania` | `scania` |\n| `Schneider Electric` | `schneiderelectric` |\n| `scikit-learn` | `scikitlearn` |\n| `Scilab` | `scilab` |\n| `SciPy` | `scipy` |\n| `Scopus` | `scopus` |\n| `SCP Foundation` | `scpfoundation` |\n| `Scrapbox` | `scrapbox` |\n| `Scrapy` | `scrapy` |\n| `Scratch` | `scratch` |\n| `Screencastify` | `screencastify` |\n| `Scribd` | `scribd` |\n| `Scrimba` | `scrimba` |\n| `ScrollReveal` | `scrollreveal` |\n| `Scrum Alliance` | `scrumalliance` |\n| `Scrutinizer CI` | `scrutinizerci` |\n| `ScyllaDB` | `scylladb` |\n| `Seagate` | `seagate` |\n| `SearXNG` | `searxng` |\n| `SEAT` | `seat` |\n| `SeatGeek` | `seatgeek` |\n| `SecurityScorecard` | `securityscorecard` |\n| `Sefaria` | `sefaria` |\n| `Sega` | `sega` |\n| `Selenium` | `selenium` |\n| `Sellfy` | `sellfy` |\n| `Semantic Scholar` | `semanticscholar` |\n| `Semantic UI` | `semanticui` |\n| `Semantic UI React` | `semanticuireact` |\n| `Semantic Web` | `semanticweb` |\n| `semantic-release` | `semanticrelease` |\n| `Semaphore CI` | `semaphoreci` |\n| `Semrush` | `semrush` |\n| `SemVer` | `semver` |\n| `Sencha` | `sencha` |\n| `SendGrid` | `sendgrid` |\n| `Sennheiser` | `sennheiser` |\n| `Sensu` | `sensu` |\n| `Sentry` | `sentry` |\n| `SEPA` | `sepa` |\n| `Sequelize` | `sequelize` |\n| `Server Fault` | `serverfault` |\n| `Serverless` | `serverless` |\n| `Session` | `session` |\n| `Sessionize` | `sessionize` |\n| `Setapp` | `setapp` |\n| `SFML` | `sfml` |\n| `shadcn/ui` | `shadcnui` |\n| `Shadow` | `shadow` |\n| `Shanghai Metro` | `shanghaimetro` |\n| `ShareX` | `sharex` |\n| `sharp` | `sharp` |\n| `Shazam` | `shazam` |\n| `Shell` | `shell` |\n| `Shelly` | `shelly` |\n| `Shenzhen Metro` | `shenzhenmetro` |\n| `Shields.io` | `shieldsdotio` |\n| `Shikimori` | `shikimori` |\n| `Shopee` | `shopee` |\n| `Shopify` | `shopify` |\n| `Shopware` | `shopware` |\n| `Shortcut` | `shortcut` |\n| `Showpad` | `showpad` |\n| `Showtime` | `showtime` |\n| `Showwcase` | `showwcase` |\n| `Shutterstock` | `shutterstock` |\n| `Sidekiq` | `sidekiq` |\n| `SideQuest` | `sidequest` |\n| `Siemens` | `siemens` |\n| `SiFive` | `sifive` |\n| `Signal` | `signal` |\n| `Silver Airways` | `silverairways` |\n| `Similarweb` | `similarweb` |\n| `Simkl` | `simkl` |\n| `Simple Analytics` | `simpleanalytics` |\n| `Simple Icons` | `simpleicons` |\n| `SimpleLogin` | `simplelogin` |\n| `Simplenote` | `simplenote` |\n| `SimpleX` | `simplex` |\n| `Sina Weibo` | `sinaweibo` |\n| `Singapore Airlines` | `singaporeairlines` |\n| `SingleStore` | `singlestore` |\n| `Sitecore` | `sitecore` |\n| `SitePoint` | `sitepoint` |\n| `SiYuan` | `siyuan` |\n| `Skaffold` | `skaffold` |\n| `Sketch` | `sketch` |\n| `Sketchfab` | `sketchfab` |\n| `SketchUp` | `sketchup` |\n| `Skillshare` | `skillshare` |\n| `ŠKODA` | `skoda` |\n| `Sky` | `sky` |\n| `Skypack` | `skypack` |\n| `Slack` | `slack` |\n| `Slackware` | `slackware` |\n| `Slashdot` | `slashdot` |\n| `SlickPic` | `slickpic` |\n| `Slides` | `slides` |\n| `SlideShare` | `slideshare` |\n| `Slint` | `slint` |\n| `smart` | `smart` |\n| `SmartThings` | `smartthings` |\n| `Smashing Magazine` | `smashingmagazine` |\n| `SMRT` | `smrt` |\n| `SmugMug` | `smugmug` |\n| `Snapchat` | `snapchat` |\n| `Snapcraft` | `snapcraft` |\n| `Snapdragon` | `snapdragon` |\n| `SNCF` | `sncf` |\n| `Snort` | `snort` |\n| `Snowflake` | `snowflake` |\n| `Snowpack` | `snowpack` |\n| `Snyk` | `snyk` |\n| `Social Blade` | `socialblade` |\n| `Society6` | `society6` |\n| `Socket` | `socket` |\n| `Socket.io` | `socketdotio` |\n| `Softcatalà` | `softcatala` |\n| `Softpedia` | `softpedia` |\n| `Sogou` | `sogou` |\n| `Solana` | `solana` |\n| `Solid` | `solid` |\n| `Solidity` | `solidity` |\n| `Sololearn` | `sololearn` |\n| `Solus` | `solus` |\n| `Sonar` | `sonar` |\n| `SonarCloud` | `sonarcloud` |\n| `SonarLint` | `sonarlint` |\n| `SonarQube` | `sonarqube` |\n| `sonarr` | `sonarr` |\n| `Sonatype` | `sonatype` |\n| `Songkick` | `songkick` |\n| `Songoda` | `songoda` |\n| `SonicWall` | `sonicwall` |\n| `Sonos` | `sonos` |\n| `Sony` | `sony` |\n| `Soriana` | `soriana` |\n| `Soundcharts` | `soundcharts` |\n| `SoundCloud` | `soundcloud` |\n| `Source Engine` | `sourceengine` |\n| `SourceForge` | `sourceforge` |\n| `SourceHut` | `sourcehut` |\n| `Sourcetree` | `sourcetree` |\n| `Southwest Airlines` | `southwestairlines` |\n| `Spacemacs` | `spacemacs` |\n| `Spaceship` | `spaceship` |\n| `SpaceX` | `spacex` |\n| `spaCy` | `spacy` |\n| `Spark AR` | `sparkar` |\n| `Sparkasse` | `sparkasse` |\n| `SparkFun` | `sparkfun` |\n| `SparkPost` | `sparkpost` |\n| `SPDX` | `spdx` |\n| `Speaker Deck` | `speakerdeck` |\n| `Spectrum` | `spectrum` |\n| `Speedtest` | `speedtest` |\n| `SpeedyPage` | `speedypage` |\n| `Sphere Online Judge` | `spoj` |\n| `Sphinx` | `sphinx` |\n| `SpigotMC` | `spigotmc` |\n| `Spine` | `spine` |\n| `Spinnaker` | `spinnaker` |\n| `Splunk` | `splunk` |\n| `Spond` | `spond` |\n| `Spotify` | `spotify` |\n| `Spotlight` | `spotlight` |\n| `Spreadshirt` | `spreadshirt` |\n| `Spreaker` | `spreaker` |\n| `Spring` | `spring` |\n| `Spring` | `spring_creators` |\n| `Spring Boot` | `springboot` |\n| `Spring Security` | `springsecurity` |\n| `Spyder IDE` | `spyderide` |\n| `SQLAlchemy` | `sqlalchemy` |\n| `SQLite` | `sqlite` |\n| `Square` | `square` |\n| `Square Enix` | `squareenix` |\n| `Squarespace` | `squarespace` |\n| `SRG SSR` | `srgssr` |\n| `SSRN` | `ssrn` |\n| `SST` | `sst` |\n| `Stack Exchange` | `stackexchange` |\n| `Stack Overflow` | `stackoverflow` |\n| `Stackbit` | `stackbit` |\n| `StackBlitz` | `stackblitz` |\n| `StackEdit` | `stackedit` |\n| `StackHawk` | `stackhawk` |\n| `StackShare` | `stackshare` |\n| `Stadia` | `stadia` |\n| `Staffbase` | `staffbase` |\n| `Stagetimer` | `stagetimer` |\n| `Standard Resume` | `standardresume` |\n| `StandardJS` | `standardjs` |\n| `Star Trek` | `startrek` |\n| `Starbucks` | `starbucks` |\n| `Stardock` | `stardock` |\n| `Starling Bank` | `starlingbank` |\n| `Starship` | `starship` |\n| `start.gg` | `startdotgg` |\n| `Startpage` | `startpage` |\n| `STARZ` | `starz` |\n| `Statamic` | `statamic` |\n| `Statista` | `statista` |\n| `Statuspage` | `statuspage` |\n| `Statuspal` | `statuspal` |\n| `Steam` | `steam` |\n| `Steam Deck` | `steamdeck` |\n| `SteamDB` | `steamdb` |\n| `Steamworks` | `steamworks` |\n| `Steelseries` | `steelseries` |\n| `Steem` | `steem` |\n| `Steemit` | `steemit` |\n| `Steinberg` | `steinberg` |\n| `Stellar` | `stellar` |\n| `Stencil` | `stencil` |\n| `Stencyl` | `stencyl` |\n| `Stimulus` | `stimulus` |\n| `STMicroelectronics` | `stmicroelectronics` |\n| `StockX` | `stockx` |\n| `StopStalk` | `stopstalk` |\n| `Storyblok` | `storyblok` |\n| `Storybook` | `storybook` |\n| `Strapi` | `strapi` |\n| `Strava` | `strava` |\n| `Streamlabs` | `streamlabs` |\n| `Streamlit` | `streamlit` |\n| `StreamRunners` | `streamrunners` |\n| `Stremio` | `stremio` |\n| `Stripe` | `stripe` |\n| `strongSwan` | `strongswan` |\n| `Stryker` | `stryker` |\n| `StubHub` | `stubhub` |\n| `Studio 3T` | `studio3t` |\n| `styled-components` | `styledcomponents` |\n| `stylelint` | `stylelint` |\n| `StyleShare` | `styleshare` |\n| `Stylus` | `stylus` |\n| `Subaru` | `subaru` |\n| `Sublime Text` | `sublimetext` |\n| `Substack` | `substack` |\n| `Subtitle Edit` | `subtitleedit` |\n| `Subversion` | `subversion` |\n| `suckless` | `suckless` |\n| `Sui` | `sui` |\n| `Sumo Logic` | `sumologic` |\n| `Suno` | `suno` |\n| `Sunrise` | `sunrise` |\n| `Supabase` | `supabase` |\n| `Super User` | `superuser` |\n| `Supercrease` | `supercrease` |\n| `Supermicro` | `supermicro` |\n| `Surfshark` | `surfshark` |\n| `SurrealDB` | `surrealdb` |\n| `SurveyMonkey` | `surveymonkey` |\n| `SUSE` | `suse` |\n| `Suzuki` | `suzuki` |\n| `Svelte` | `svelte` |\n| `SVG` | `svg` |\n| `SVG.js` | `svgdotjs` |\n| `SVGO` | `svgo` |\n| `SvgTrace` | `svgtrace` |\n| `Swagger` | `swagger` |\n| `Swarm` | `swarm` |\n| `Sway` | `sway` |\n| `SWC` | `swc` |\n| `Swift` | `swift` |\n| `Swiggy` | `swiggy` |\n| `Swiper` | `swiper` |\n| `SWR` | `swr` |\n| `Symantec` | `symantec` |\n| `Symbolab` | `symbolab` |\n| `Symfony` | `symfony` |\n| `Symphony` | `symphony` |\n| `SymPy` | `sympy` |\n| `Syncthing` | `syncthing` |\n| `Synology` | `synology` |\n| `System76` | `system76` |\n| `Tabelog` | `tabelog` |\n| `TableCheck` | `tablecheck` |\n| `Taco Bell` | `tacobell` |\n| `tado°` | `tado` |\n| `Taichi Graphics` | `taichigraphics` |\n| `Taichi Lang` | `taichilang` |\n| `Tails` | `tails` |\n| `Tailscale` | `tailscale` |\n| `Tailwind CSS` | `tailwindcss` |\n| `Taipy` | `taipy` |\n| `Take-Two Interactive Software` | `taketwointeractivesoftware` |\n| `Talend` | `talend` |\n| `Talenthouse` | `talenthouse` |\n| `Talos` | `talos` |\n| `Tamiya` | `tamiya` |\n| `Tampermonkey` | `tampermonkey` |\n| `Taobao` | `taobao` |\n| `Tapas` | `tapas` |\n| `Target` | `target` |\n| `TAROM` | `tarom` |\n| `Task` | `task` |\n| `Tasmota` | `tasmota` |\n| `Tata` | `tata` |\n| `Tata Consultancy Services` | `tcs` |\n| `Tauri` | `tauri` |\n| `TaxBuzz` | `taxbuzz` |\n| `Teal` | `teal` |\n| `TeamCity` | `teamcity` |\n| `TeamSpeak` | `teamspeak` |\n| `TeamViewer` | `teamviewer` |\n| `TechCrunch` | `techcrunch` |\n| `TED` | `ted` |\n| `TeePublic` | `teepublic` |\n| `Teespring` | `teespring` |\n| `Tekton` | `tekton` |\n| `TELE 5` | `tele5` |\n| `Télé-Québec` | `telequebec` |\n| `Telefónica` | `telefonica` |\n| `Telegram` | `telegram` |\n| `Telegraph` | `telegraph` |\n| `Temporal` | `temporal` |\n| `TensorFlow` | `tensorflow` |\n| `Teradata` | `teradata` |\n| `teratail` | `teratail` |\n| `Termius` | `termius` |\n| `Terraform` | `terraform` |\n| `Tesco` | `tesco` |\n| `Tesla` | `tesla` |\n| `TestCafe` | `testcafe` |\n| `Testin` | `testin` |\n| `Testing Library` | `testinglibrary` |\n| `TestRail` | `testrail` |\n| `Tether` | `tether` |\n| `Textpattern` | `textpattern` |\n| `TGA` | `tga` |\n| `Thangs` | `thangs` |\n| `Thanos` | `thanos` |\n| `The Algorithms` | `thealgorithms` |\n| `The Boring Company` | `theboringcompany` |\n| `The Conversation` | `theconversation` |\n| `THE FINALS` | `thefinals` |\n| `The Guardian` | `theguardian` |\n| `The Irish Times` | `theirishtimes` |\n| `The Mighty` | `themighty` |\n| `The Models Resource` | `themodelsresource` |\n| `The Movie Database` | `themoviedatabase` |\n| `The North Face` | `thenorthface` |\n| `The Odin Project` | `theodinproject` |\n| `The Register` | `theregister` |\n| `The Sounds Resource` | `thesoundsresource` |\n| `The Spriters Resource` | `thespritersresource` |\n| `The Washington Post` | `thewashingtonpost` |\n| `The Weather Channel` | `theweatherchannel` |\n| `Thingiverse` | `thingiverse` |\n| `ThinkPad` | `thinkpad` |\n| `thirdweb` | `thirdweb` |\n| `Threadless` | `threadless` |\n| `Threads` | `threads` |\n| `Three.js` | `threedotjs` |\n| `Threema` | `threema` |\n| `Thumbtack` | `thumbtack` |\n| `Thunderbird` | `thunderbird` |\n| `Thunderstore` | `thunderstore` |\n| `Thurgauer Kantonalbank` | `thurgauerkantonalbank` |\n| `Thymeleaf` | `thymeleaf` |\n| `Ticketmaster` | `ticketmaster` |\n| `TickTick` | `ticktick` |\n| `Tidal` | `tidal` |\n| `TiddlyWiki` | `tiddlywiki` |\n| `Tide` | `tide` |\n| `Tidyverse` | `tidyverse` |\n| `TietoEVRY` | `tietoevry` |\n| `TikTok` | `tiktok` |\n| `Tilda Publishing` | `tildapublishing` |\n| `Tile` | `tile` |\n| `Timescale` | `timescale` |\n| `Tina` | `tina` |\n| `Tinder` | `tinder` |\n| `Tindie` | `tindie` |\n| `Tinkercad` | `tinkercad` |\n| `tinygrad` | `tinygrad` |\n| `TinyLetter` | `tinyletter` |\n| `Tistory` | `tistory` |\n| `tldraw` | `tldraw` |\n| `tmux` | `tmux` |\n| `Todoist` | `todoist` |\n| `Toggl` | `toggl` |\n| `Toggl Track` | `toggltrack` |\n| `Tokyo Metro` | `tokyometro` |\n| `Toll` | `toll` |\n| `TOML` | `toml` |\n| `Tomorrowland` | `tomorrowland` |\n| `TomTom` | `tomtom` |\n| `TON` | `ton` |\n| `Top.gg` | `topdotgg` |\n| `Topcoder` | `topcoder` |\n| `Toptal` | `toptal` |\n| `Tor Browser` | `torbrowser` |\n| `Tor Project` | `torproject` |\n| `Toshiba` | `toshiba` |\n| `TOTVS` | `totvs` |\n| `TourBox` | `tourbox` |\n| `Tower` | `tower` |\n| `Toyota` | `toyota` |\n| `TP-Link` | `tplink` |\n| `tqdm` | `tqdm` |\n| `Traccar` | `traccar` |\n| `TradingView` | `tradingview` |\n| `Traefik Mesh` | `traefikmesh` |\n| `Traefik Proxy` | `traefikproxy` |\n| `Trailforks` | `trailforks` |\n| `TrainerRoad` | `trainerroad` |\n| `Trakt` | `trakt` |\n| `Transifex` | `transifex` |\n| `Transmission` | `transmission` |\n| `Transport for Ireland` | `transportforireland` |\n| `Transport for London` | `transportforlondon` |\n| `Travis CI` | `travisci` |\n| `Treehouse` | `treehouse` |\n| `Trello` | `trello` |\n| `Trend Micro` | `trendmicro` |\n| `Treyarch` | `treyarch` |\n| `Tricentis` | `tricentis` |\n| `Trilium` | `trilium` |\n| `Triller` | `triller` |\n| `TrillerTV` | `trillertv` |\n| `Trimble` | `trimble` |\n| `Trino` | `trino` |\n| `Trip.com` | `tripdotcom` |\n| `Tripadvisor` | `tripadvisor` |\n| `trivago` | `trivago` |\n| `Trivy` | `trivy` |\n| `Trove` | `trove` |\n| `tRPC` | `trpc` |\n| `TrueNAS` | `truenas` |\n| `TrueUp` | `trueup` |\n| `trulia` | `trulia` |\n| `Trusted Shops` | `trustedshops` |\n| `Trustpilot` | `trustpilot` |\n| `Try It Online` | `tryitonline` |\n| `TryHackMe` | `tryhackme` |\n| `ts-node` | `tsnode` |\n| `Tubi` | `tubi` |\n| `TUI` | `tui` |\n| `Tumblr` | `tumblr` |\n| `TuneIn` | `tunein` |\n| `Turbo` | `turbo` |\n| `Turborepo` | `turborepo` |\n| `TurboSquid` | `turbosquid` |\n| `Turkish Airlines` | `turkishairlines` |\n| `Turso` | `turso` |\n| `Tuta` | `tuta` |\n| `TV Time` | `tvtime` |\n| `TV4 Play` | `tv4play` |\n| `Twilio` | `twilio` |\n| `Twinkly` | `twinkly` |\n| `Twinmotion` | `twinmotion` |\n| `Twitch` | `twitch` |\n| `Typeform` | `typeform` |\n| `TypeORM` | `typeorm` |\n| `Typer` | `typer` |\n| `TypeScript` | `typescript` |\n| `TYPO3` | `typo3` |\n| `Typst` | `typst` |\n| `U.S. News` | `udotsdotnews` |\n| `Uber` | `uber` |\n| `Uber Eats` | `ubereats` |\n| `Ubiquiti` | `ubiquiti` |\n| `Ubisoft` | `ubisoft` |\n| `uBlock Origin` | `ublockorigin` |\n| `Ubuntu` | `ubuntu` |\n| `Ubuntu MATE` | `ubuntumate` |\n| `Udacity` | `udacity` |\n| `Udemy` | `udemy` |\n| `UFC` | `ufc` |\n| `UIkit` | `uikit` |\n| `UiPath` | `uipath` |\n| `UKCA` | `ukca` |\n| `Ulule` | `ulule` |\n| `Umami` | `umami` |\n| `Umbraco` | `umbraco` |\n| `UML` | `uml` |\n| `Unacademy` | `unacademy` |\n| `Under Armour` | `underarmour` |\n| `Underscore.js` | `underscoredotjs` |\n| `Undertale` | `undertale` |\n| `Unicode` | `unicode` |\n| `Unilever` | `unilever` |\n| `Uniqlo` | `uniqlo` |\n| `Uniqlo` | `uniqlo_ja` |\n| `United Airlines` | `unitedairlines` |\n| `United Nations` | `unitednations` |\n| `Unity` | `unity` |\n| `UnJS` | `unjs` |\n| `Unlicense` | `unlicense` |\n| `UnoCSS` | `unocss` |\n| `unpkg` | `unpkg` |\n| `Unraid` | `unraid` |\n| `Unreal Engine` | `unrealengine` |\n| `Unsplash` | `unsplash` |\n| `Untappd` | `untappd` |\n| `UpCloud` | `upcloud` |\n| `Uphold` | `uphold` |\n| `UpLabs` | `uplabs` |\n| `Upptime` | `upptime` |\n| `UPS` | `ups` |\n| `Upstash` | `upstash` |\n| `Uptime Kuma` | `uptimekuma` |\n| `Upwork` | `upwork` |\n| `USPS` | `usps` |\n| `uTorrent` | `utorrent` |\n| `uv` | `uv` |\n| `V` | `v` |\n| `V2EX` | `v2ex` |\n| `V8` | `v8` |\n| `Vaadin` | `vaadin` |\n| `Vagrant` | `vagrant` |\n| `Vala` | `vala` |\n| `Valorant` | `valorant` |\n| `Valve` | `valve` |\n| `Vapor` | `vapor` |\n| `Vault` | `vault` |\n| `Vaultwarden` | `vaultwarden` |\n| `Vauxhall` | `vauxhall` |\n| `vBulletin` | `vbulletin` |\n| `Vectary` | `vectary` |\n| `Vector Logo Zone` | `vectorlogozone` |\n| `Vectorworks` | `vectorworks` |\n| `Veeam` | `veeam` |\n| `VEED` | `veed` |\n| `Veepee` | `veepee` |\n| `Vega` | `vega` |\n| `VEGAS` | `vegas` |\n| `Velog` | `velog` |\n| `Vencord` | `vencord` |\n| `Venmo` | `venmo` |\n| `Vercel` | `vercel` |\n| `Verdaccio` | `verdaccio` |\n| `Veritas` | `veritas` |\n| `Verizon` | `verizon` |\n| `Vespa` | `vespa` |\n| `Vestel` | `vestel` |\n| `VEXXHOST` | `vexxhost` |\n| `vFairs` | `vfairs` |\n| `Viadeo` | `viadeo` |\n| `Viaplay` | `viaplay` |\n| `Viber` | `viber` |\n| `Viblo` | `viblo` |\n| `VictoriaMetrics` | `victoriametrics` |\n| `Victron Energy` | `victronenergy` |\n| `Vim` | `vim` |\n| `Vimeo` | `vimeo` |\n| `Vimeo Livestream` | `vimeolivestream` |\n| `Virgin` | `virgin` |\n| `Virgin Atlantic` | `virginatlantic` |\n| `Virgin Media` | `virginmedia` |\n| `VirtualBox` | `virtualbox` |\n| `VirusTotal` | `virustotal` |\n| `Visa` | `visa` |\n| `visx` | `visx` |\n| `Vite` | `vite` |\n| `VitePress` | `vitepress` |\n| `Vitess` | `vitess` |\n| `Vitest` | `vitest` |\n| `Viva Wallet` | `vivawallet` |\n| `Vivaldi` | `vivaldi` |\n| `Vivino` | `vivino` |\n| `Vivint` | `vivint` |\n| `vivo` | `vivo` |\n| `VK` | `vk` |\n| `VLC media player` | `vlcmediaplayer` |\n| `VMware` | `vmware` |\n| `Vodafone` | `vodafone` |\n| `Void Linux` | `voidlinux` |\n| `VoIP.ms` | `voipdotms` |\n| `Volkswagen` | `volkswagen` |\n| `Volvo` | `volvo` |\n| `Vonage` | `vonage` |\n| `Voron Design` | `vorondesign` |\n| `Vowpal Wabbit` | `vowpalwabbit` |\n| `VOX` | `vox` |\n| `VRChat` | `vrchat` |\n| `VSCO` | `vsco` |\n| `VSCodium` | `vscodium` |\n| `VTEX` | `vtex` |\n| `Vue.js` | `vuedotjs` |\n| `Vuetify` | `vuetify` |\n| `Vulkan` | `vulkan` |\n| `Vultr` | `vultr` |\n| `Vyond` | `vyond` |\n| `W3Schools` | `w3schools` |\n| `Wacom` | `wacom` |\n| `Wagmi` | `wagmi` |\n| `Wagtail` | `wagtail` |\n| `Wails` | `wails` |\n| `WakaTime` | `wakatime` |\n| `WALKMAN` | `walkman` |\n| `Wallabag` | `wallabag` |\n| `WalletConnect` | `walletconnect` |\n| `Walmart` | `walmart` |\n| `Wantedly` | `wantedly` |\n| `Wappalyzer` | `wappalyzer` |\n| `Warner Bros.` | `warnerbros` |\n| `Warp` | `warp` |\n| `Wasabi` | `wasabi` |\n| `wasmCloud` | `wasmcloud` |\n| `Wasmer` | `wasmer` |\n| `Watchtower` | `watchtower` |\n| `Wattpad` | `wattpad` |\n| `Wayland` | `wayland` |\n| `Waze` | `waze` |\n| `WazirX` | `wazirx` |\n| `Wear OS` | `wearos` |\n| `Weasyl` | `weasyl` |\n| `WEB.DE` | `webdotde` |\n| `Web3.js` | `web3dotjs` |\n| `WebAssembly` | `webassembly` |\n| `WebAuthn` | `webauthn` |\n| `webcomponents.org` | `webcomponentsdotorg` |\n| `WebdriverIO` | `webdriverio` |\n| `Webex` | `webex` |\n| `Webflow` | `webflow` |\n| `WebGL` | `webgl` |\n| `WebGPU` | `webgpu` |\n| `Weblate` | `weblate` |\n| `Webmin` | `webmin` |\n| `WebMoney` | `webmoney` |\n| `Webpack` | `webpack` |\n| `WebRTC` | `webrtc` |\n| `WebStorm` | `webstorm` |\n| `WEBTOON` | `webtoon` |\n| `webtrees` | `webtrees` |\n| `WeChat` | `wechat` |\n| `WeGame` | `wegame` |\n| `Weights & Biases` | `weightsandbiases` |\n| `Welcome to the Jungle` | `welcometothejungle` |\n| `Wellfound` | `wellfound` |\n| `Wells Fargo` | `wellsfargo` |\n| `WEMO` | `wemo` |\n| `Western Digital` | `westerndigital` |\n| `Western Union` | `westernunion` |\n| `WeTransfer` | `wetransfer` |\n| `WezTerm` | `wezterm` |\n| `wgpu` | `wgpu` |\n| `WhatsApp` | `whatsapp` |\n| `When I Work` | `wheniwork` |\n| `wiki.gg` | `wikidotgg` |\n| `Wiki.js` | `wikidotjs` |\n| `Wikibooks` | `wikibooks` |\n| `Wikidata` | `wikidata` |\n| `Wikimedia Commons` | `wikimediacommons` |\n| `Wikimedia Foundation` | `wikimediafoundation` |\n| `Wikipedia` | `wikipedia` |\n| `Wikiquote` | `wikiquote` |\n| `Wikiversity` | `wikiversity` |\n| `Wikivoyage` | `wikivoyage` |\n| `Winamp` | `winamp` |\n| `Wine` | `wine` |\n| `Wipro` | `wipro` |\n| `Wire` | `wire` |\n| `WireGuard` | `wireguard` |\n| `Wireshark` | `wireshark` |\n| `Wise` | `wise` |\n| `Wish` | `wish` |\n| `Wistia` | `wistia` |\n| `Wix` | `wix` |\n| `Wizz Air` | `wizzair` |\n| `Wolfram` | `wolfram` |\n| `Wolfram Language` | `wolframlanguage` |\n| `Wolfram Mathematica` | `wolframmathematica` |\n| `Wondershare` | `wondershare` |\n| `Wondershare Filmora` | `wondersharefilmora` |\n| `Woo` | `woo` |\n| `WooCommerce` | `woocommerce` |\n| `WordPress` | `wordpress` |\n| `Workplace` | `workplace` |\n| `World Health Organization` | `worldhealthorganization` |\n| `WP Engine` | `wpengine` |\n| `WP Rocket` | `wprocket` |\n| `WPExplorer` | `wpexplorer` |\n| `Write.as` | `writedotas` |\n| `WWE` | `wwe` |\n| `Wwise` | `wwise` |\n| `Wykop` | `wykop` |\n| `Wyze` | `wyze` |\n| `X` | `x` |\n| `X.Org` | `xdotorg` |\n| `XAMPP` | `xampp` |\n| `Xcode` | `xcode` |\n| `XDA Developers` | `xdadevelopers` |\n| `Xendit` | `xendit` |\n| `Xero` | `xero` |\n| `XFCE` | `xfce` |\n| `Xiaohongshu` | `xiaohongshu` |\n| `Xiaomi` | `xiaomi` |\n| `Xing` | `xing` |\n| `XML` | `xml` |\n| `XMPP` | `xmpp` |\n| `XO` | `xo` |\n| `XRP` | `xrp` |\n| `XSplit` | `xsplit` |\n| `XState` | `xstate` |\n| `Xubuntu` | `xubuntu` |\n| `Y Combinator` | `ycombinator` |\n| `yabai` | `yabai` |\n| `Yale` | `yale` |\n| `Yamaha Corporation` | `yamahacorporation` |\n| `Yamaha Motor Corporation` | `yamahamotorcorporation` |\n| `YAML` | `yaml` |\n| `Yandex Cloud` | `yandexcloud` |\n| `Yarn` | `yarn` |\n| `Yelp` | `yelp` |\n| `Yeti` | `yeti` |\n| `Yii` | `yii` |\n| `Yoast` | `yoast` |\n| `YouHodler` | `youhodler` |\n| `YouTube` | `youtube` |\n| `YouTube Gaming` | `youtubegaming` |\n| `YouTube Kids` | `youtubekids` |\n| `YouTube Music` | `youtubemusic` |\n| `YouTube Shorts` | `youtubeshorts` |\n| `YouTube Studio` | `youtubestudio` |\n| `YouTube TV` | `youtubetv` |\n| `Yr` | `yr` |\n| `Yubico` | `yubico` |\n| `YunoHost` | `yunohost` |\n| `Żabka` | `zabka` |\n| `Zaim` | `zaim` |\n| `Zalando` | `zalando` |\n| `Zalo` | `zalo` |\n| `ZAP` | `zap` |\n| `Zapier` | `zapier` |\n| `Zara` | `zara` |\n| `Zazzle` | `zazzle` |\n| `Zcash` | `zcash` |\n| `ZCOOL` | `zcool` |\n| `ZDF` | `zdf` |\n| `ZebPay` | `zebpay` |\n| `Zebra Technologies` | `zebratechnologies` |\n| `Zed Industries` | `zedindustries` |\n| `Zelle` | `zelle` |\n| `Zend` | `zend` |\n| `Zendesk` | `zendesk` |\n| `Zenn` | `zenn` |\n| `Zenodo` | `zenodo` |\n| `Zensar` | `zensar` |\n| `Zerodha` | `zerodha` |\n| `ZeroTier` | `zerotier` |\n| `Zettlr` | `zettlr` |\n| `Zhihu` | `zhihu` |\n| `Zig` | `zig` |\n| `Zigbee` | `zigbee` |\n| `Zigbee2MQTT` | `zigbee2mqtt` |\n| `Ziggo` | `ziggo` |\n| `Zilch` | `zilch` |\n| `Zillow` | `zillow` |\n| `ZincSearch` | `zincsearch` |\n| `Zingat` | `zingat` |\n| `Zod` | `zod` |\n| `Zoho` | `zoho` |\n| `Zoiper` | `zoiper` |\n| `Zomato` | `zomato` |\n| `Zoom` | `zoom` |\n| `Zorin` | `zorin` |\n| `Zotero` | `zotero` |\n| `Zsh` | `zsh` |\n| `Zulip` | `zulip` |\n| `Zyte` | `zyte` |\n"
        },
        {
          "name": "svglint.config.mjs",
          "type": "blob",
          "size": 31.857421875,
          "content": "/**\n * @file\n * Linting rules for SVGLint to check SVG icons.\n */\n\nimport fs from 'node:fs/promises';\nimport path from 'node:path';\nimport {svgPathBbox} from 'svg-path-bbox';\nimport parsePath from 'svg-path-segments';\nimport svgpath from 'svgpath';\nimport {\n\tSVG_PATH_REGEX,\n\tgetDirnameFromImportMeta,\n\tgetIconsData,\n\thtmlFriendlyToTitle,\n} from './sdk.mjs';\n\nconst __dirname = getDirnameFromImportMeta(import.meta.url);\nconst htmlNamedEntitiesFile = path.join(\n\t__dirname,\n\t'node_modules',\n\t'named-html-entities-json',\n\t'index.json',\n);\n\nconst icons = await getIconsData();\nconst htmlNamedEntities = JSON.parse(\n\tawait fs.readFile(htmlNamedEntitiesFile, 'utf8'),\n);\n\nconst svgRegexp =\n\t/^<svg( \\S*=\".*\"){3}><title>.*<\\/title><path d=\".*\"\\/><\\/svg>$/;\nconst negativeZerosRegexp = /-0(?=[^.]|[\\s\\d\\w]|$)/g;\n\nconst iconSize = 24;\nconst iconTargetCenter = iconSize / 2;\nconst iconFloatPrecision = 3;\nconst iconMaxFloatPrecision = 5;\nconst iconTolerance = 0.001;\n\n/**\n * Remove leading zeros from a number as a string.\n * @param {number | string} numberOrString The number or string to remove leading zeros from.\n * @returns {string} The number as a string without leading zeros.\n */\nconst removeLeadingZeros = (numberOrString) => {\n\t// Convert 0.03 to '.03'\n\treturn numberOrString.toString().replace(/^(-?)(0)(\\.?.+)/, '$1$3');\n};\n\n/**\n * Given three points, returns if the middle one (x2, y2) is collinear\n *   to the line formed by the two limit points.\n * @param {number} x1 The x coordinate of the first point.\n * @param {number} y1 The y coordinate of the first point.\n * @param {number} x2 The x coordinate of the second point.\n * @param {number} y2 The y coordinate of the second point.\n * @param {number} x3 The x coordinate of the third point.\n * @param {number} y3 The y coordinate of the third point.\n * @returns {boolean} Whether the middle point is collinear to the line.\n */\n// eslint-disable-next-line max-params\nconst collinear = (x1, y1, x2, y2, x3, y3) => {\n\treturn x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2) === 0;\n};\n\n/**\n * Returns the number of digits after the decimal point.\n * @param {number} number_ The number to count the decimals of.\n * @returns {number} The number of digits after the decimal point.\n */\nconst countDecimals = (number_) => {\n\tif (number_ && number_ % 1) {\n\t\tconst [base, op, trail] = number_.toExponential().split(/e([+-])/);\n\t\tconst elen = Number.parseInt(trail, 10);\n\t\tconst index = base.indexOf('.');\n\t\treturn index === -1\n\t\t\t? elen\n\t\t\t: base.length - index - 1 + (op === '+' ? -elen : elen);\n\t}\n\n\treturn 0;\n};\n\n/**\n * Get the index at which the first path value of an SVG starts.\n * @param {string} svgFileContent The raw SVG as text.\n * @returns {number} The index at which the path value starts.\n */\nconst getPathDIndex = (svgFileContent) => {\n\tconst pathDStart = '<path d=\"';\n\treturn svgFileContent.indexOf(pathDStart) + pathDStart.length;\n};\n\n/**\n * Get the index at which the text of the first `<title></title>` tag starts.\n * @param {string} svgFileContent The raw SVG as text.\n * @returns {number} The index at which the title text starts.\n */\nconst getTitleTextIndex = (svgFileContent) => {\n\tconst titleStart = '<title>';\n\treturn svgFileContent.indexOf(titleStart) + titleStart.length;\n};\n\n/**\n * Shorten a string with ellipsis if it exceeds 20 characters.\n * @param {string} string_ The string to shorten.\n * @returns {string} The shortened string.\n */\nconst maybeShortenedWithEllipsis = (string_) => {\n\treturn string_.length > 20 ? `${string_.slice(0, 20)}...` : string_;\n};\n\n/**\n * Check if a string is a number.\n * @param {string} string_ The string to check.\n * @returns {boolean} Whether the string is a number.\n */\nconst isNumber = (string_) =>\n\t[...string_].every((character) => '0123456789'.includes(character));\n\n/**\n * Memoize a function which accepts a single argument.\n * A second argument can be passed to be used as key.\n * @param {(arg0: any) => any} function_ The function to memoize.\n * @returns {(arg0: any) => any} The memoized function.\n */\nconst memoize = (function_) => {\n\t/** @type {{ [key: string]: any }} */\n\tconst results = {};\n\n\t/**\n\t * Memoized function.\n\t * @param {any} argument The argument to memoize.\n\t * @returns {any} The result of the memoized function.\n\t */\n\treturn (argument) => {\n\t\tresults[argument] ||= function_(argument);\n\n\t\treturn results[argument];\n\t};\n};\n\n/** @typedef {import('cheerio').Cheerio<import('domhandler').Document>} Cheerio */\n\n/** @type {($icon: Cheerio) => string} */\nconst getIconPath = memoize(($icon) => $icon.find('path').attr('d'));\n/** @type {(iconPath: string) => import('svg-path-segments').Segment[]} */\nconst getIconPathSegments = memoize((iconPath) => parsePath(iconPath));\n/** @type {(iconPath: string) => import('svg-path-bbox').BBox} */\nconst getIconPathBbox = memoize((iconPath) => svgPathBbox(iconPath));\n\n/** @type {import('svglint').Config} */\nconst config = {\n\trules: {\n\t\telm: {\n\t\t\tsvg: 1,\n\t\t\t'svg > title': 1,\n\t\t\t'svg > path': 1,\n\t\t\t'*': false,\n\t\t},\n\t\tattr: [\n\t\t\t{\n\t\t\t\t// Ensure that the SVG element has the appropriate attributes\n\t\t\t\t// alphabetically ordered\n\t\t\t\trole: 'img',\n\t\t\t\tviewBox: `0 0 ${iconSize} ${iconSize}`,\n\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t'rule::selector': 'svg',\n\t\t\t\t'rule::whitelist': true,\n\t\t\t\t'rule::order': true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Ensure that the title element has the appropriate attribute\n\t\t\t\t'rule::selector': 'svg > title',\n\t\t\t\t'rule::whitelist': true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Ensure that the path element only has the 'd' attribute\n\t\t\t\t// (no style, opacity, etc.)\n\t\t\t\td: SVG_PATH_REGEX,\n\t\t\t\t'rule::selector': 'svg > path',\n\t\t\t\t'rule::whitelist': true,\n\t\t\t},\n\t\t],\n\t\tcustom: [\n\t\t\t// eslint-disable-next-line complexity\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'icon-title';\n\n\t\t\t\tconst iconTitleText = $.find('title').text();\n\t\t\t\tconst xmlNamedEntitiesCodepoints = [38, 60, 62];\n\t\t\t\tconst xmlNamedEntities = ['amp', 'lt', 'gt'];\n\t\t\t\tlet _validCodepointsRepr = true;\n\n\t\t\t\t// Avoid character codepoints as hexadecimal representation\n\t\t\t\tconst hexadecimalCodepoints = [\n\t\t\t\t\t...iconTitleText.matchAll(/&#x([A-Fa-f\\d]+);/g),\n\t\t\t\t];\n\t\t\t\tif (hexadecimalCodepoints.length > 0) {\n\t\t\t\t\t_validCodepointsRepr = false;\n\n\t\t\t\t\tfor (const match of hexadecimalCodepoints) {\n\t\t\t\t\t\tconst charHexReprIndex =\n\t\t\t\t\t\t\tgetTitleTextIndex(ast.source) + match.index + 1;\n\t\t\t\t\t\tconst charDec = Number.parseInt(match[1], 16);\n\n\t\t\t\t\t\tlet charRepr;\n\t\t\t\t\t\tif (xmlNamedEntitiesCodepoints.includes(charDec)) {\n\t\t\t\t\t\t\tcharRepr = `&${\n\t\t\t\t\t\t\t\txmlNamedEntities[xmlNamedEntitiesCodepoints.indexOf(charDec)]\n\t\t\t\t\t\t\t};`;\n\t\t\t\t\t\t} else if (charDec < 128) {\n\t\t\t\t\t\t\tcharRepr = String.fromCodePoint(charDec);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcharRepr = `&#${charDec};`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t'Hexadecimal representation of encoded character' +\n\t\t\t\t\t\t\t\t` \"${match[0]}\" found at index ${charHexReprIndex}:` +\n\t\t\t\t\t\t\t\t` replace it with \"${charRepr}\".`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Avoid character codepoints as named entities\n\t\t\t\tconst namedEntitiesCodepoints = [\n\t\t\t\t\t...iconTitleText.matchAll(/&([A-Za-z\\d]+);/g),\n\t\t\t\t];\n\t\t\t\tif (namedEntitiesCodepoints.length > 0) {\n\t\t\t\t\tfor (const match of namedEntitiesCodepoints) {\n\t\t\t\t\t\tconst namedEntiyReprIndex =\n\t\t\t\t\t\t\tgetTitleTextIndex(ast.source) + match.index + 1;\n\n\t\t\t\t\t\tif (!xmlNamedEntities.includes(match[1].toLowerCase())) {\n\t\t\t\t\t\t\t_validCodepointsRepr = false;\n\t\t\t\t\t\t\tconst namedEntityJsRepr = htmlNamedEntities[match[1]];\n\t\t\t\t\t\t\tlet replacement;\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnamedEntityJsRepr === undefined ||\n\t\t\t\t\t\t\t\tnamedEntityJsRepr.length !== 1\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treplacement = 'its decimal or literal representation';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst namedEntityDec = namedEntityJsRepr.codePointAt(0);\n\t\t\t\t\t\t\t\treplacement =\n\t\t\t\t\t\t\t\t\tnamedEntityDec < 128\n\t\t\t\t\t\t\t\t\t\t? `\"${namedEntityJsRepr}\"`\n\t\t\t\t\t\t\t\t\t\t: `\"&#${namedEntityDec};\"`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t\t'Named entity representation of encoded character' +\n\t\t\t\t\t\t\t\t\t` \"${match[0]}\" found at index ${namedEntiyReprIndex}.` +\n\t\t\t\t\t\t\t\t\t` Replace it with ${replacement}.`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (_validCodepointsRepr) {\n\t\t\t\t\t// Compare encoded title with original title and report error if not equal\n\t\t\t\t\tconst encodingMatches = [\n\t\t\t\t\t\t...iconTitleText.matchAll(/&(#(\\d+)|(amp|quot|lt|gt));/g),\n\t\t\t\t\t];\n\t\t\t\t\tconst encodedBuf = [];\n\n\t\t\t\t\tconst indexesToIgnore = [];\n\t\t\t\t\tfor (const match of encodingMatches) {\n\t\t\t\t\t\tfor (let r = match.index; r < match.index + match[0].length; r++) {\n\t\t\t\t\t\t\tindexesToIgnore.push(r);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = iconTitleText.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (indexesToIgnore.includes(i)) {\n\t\t\t\t\t\t\tencodedBuf.unshift(iconTitleText[i]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Encode all non ascii characters plus \"'&<> (XML named entities)\n\t\t\t\t\t\t\t/** @type {number} */\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tconst charDecimalCode = iconTitleText.codePointAt(i);\n\n\t\t\t\t\t\t\tif (charDecimalCode > 127) {\n\t\t\t\t\t\t\t\tencodedBuf.unshift(`&#${charDecimalCode};`);\n\t\t\t\t\t\t\t} else if (xmlNamedEntitiesCodepoints.includes(charDecimalCode)) {\n\t\t\t\t\t\t\t\tencodedBuf.unshift(\n\t\t\t\t\t\t\t\t\t`&${\n\t\t\t\t\t\t\t\t\t\txmlNamedEntities[\n\t\t\t\t\t\t\t\t\t\t\txmlNamedEntitiesCodepoints.indexOf(charDecimalCode)\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t};`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tencodedBuf.unshift(iconTitleText[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst encodedIconTitleText = encodedBuf.join('');\n\t\t\t\t\tif (encodedIconTitleText !== iconTitleText) {\n\t\t\t\t\t\t_validCodepointsRepr = false;\n\n\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t`Unencoded unicode characters found in title \"${iconTitleText}\":` +\n\t\t\t\t\t\t\t\t` rewrite it as \"${encodedIconTitleText}\".`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if there are some other encoded characters in decimal notation\n\t\t\t\t\t// which shouldn't be encoded\n\t\t\t\t\tconst numberMatches = encodingMatches.filter(\n\t\t\t\t\t\t(m) => m[2] !== undefined && isNumber(m[2]),\n\t\t\t\t\t);\n\t\t\t\t\tfor (const match of numberMatches) {\n\t\t\t\t\t\tconst decimalNumber = Number.parseInt(match[2], 10);\n\t\t\t\t\t\tif (decimalNumber > 127) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_validCodepointsRepr = false;\n\n\t\t\t\t\t\tconst decimalCodepointCharIndex =\n\t\t\t\t\t\t\tgetTitleTextIndex(ast.source) + match.index + 1;\n\t\t\t\t\t\tlet replacement;\n\t\t\t\t\t\tif (xmlNamedEntitiesCodepoints.includes(decimalNumber)) {\n\t\t\t\t\t\t\treplacement = `\"&${\n\t\t\t\t\t\t\t\txmlNamedEntities[\n\t\t\t\t\t\t\t\t\txmlNamedEntitiesCodepoints.indexOf(decimalNumber)\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t};\"`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treplacement = String.fromCodePoint(decimalNumber);\n\t\t\t\t\t\t\treplacement = replacement === '\"' ? `'\"'` : `\"${replacement}\"`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t`Unnecessary encoded character \"${match[0]}\" found` +\n\t\t\t\t\t\t\t\t` at index ${decimalCodepointCharIndex}:` +\n\t\t\t\t\t\t\t\t` replace it with ${replacement}.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_validCodepointsRepr) {\n\t\t\t\t\t\tconst iconName = htmlFriendlyToTitle(iconTitleText);\n\t\t\t\t\t\tconst iconExists = icons.some((icon) => icon.title === iconName);\n\t\t\t\t\t\tif (!iconExists) {\n\t\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t\t`No icon with title \"${iconName}\" found in simple-icons.json`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $) => {\n\t\t\t\treporter.name = 'icon-size';\n\n\t\t\t\tconst iconPath = getIconPath($);\n\n\t\t\t\tconst [minX, minY, maxX, maxY] = getIconPathBbox(iconPath);\n\t\t\t\tconst width = Number((maxX - minX).toFixed(iconFloatPrecision));\n\t\t\t\tconst height = Number((maxY - minY).toFixed(iconFloatPrecision));\n\n\t\t\t\tif (width === 0 && height === 0) {\n\t\t\t\t\treporter.error(\n\t\t\t\t\t\t'Path bounds were reported as 0 x 0; check if the path is valid',\n\t\t\t\t\t);\n\t\t\t\t} else if (width !== iconSize && height !== iconSize) {\n\t\t\t\t\treporter.error(\n\t\t\t\t\t\t`Size of <path> must be exactly ${iconSize} in one dimension;` +\n\t\t\t\t\t\t\t` the size is currently ${width} x ${height}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'icon-precision';\n\n\t\t\t\tconst iconPath = getIconPath($);\n\t\t\t\tconst segments = getIconPathSegments(iconPath);\n\n\t\t\t\tfor (const segment of segments) {\n\t\t\t\t\t/** @type {number[]} */\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst numberParameters = segment.params.slice(1);\n\t\t\t\t\tconst precisionMax = Math.max(\n\t\t\t\t\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\t\t\t\t\t...numberParameters.map(countDecimals),\n\t\t\t\t\t);\n\t\t\t\t\tif (precisionMax > iconMaxFloatPrecision) {\n\t\t\t\t\t\tlet errorMessage =\n\t\t\t\t\t\t\t`found ${precisionMax} decimals in segment` +\n\t\t\t\t\t\t\t` \"${iconPath.slice(segment.start, segment.end)}\"`;\n\t\t\t\t\t\tif (segment.chain !== undefined) {\n\t\t\t\t\t\t\tconst readableChain = maybeShortenedWithEllipsis(\n\t\t\t\t\t\t\t\ticonPath.slice(segment.chain.start, segment.chain.end),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\terrorMessage += ` of chain \"${readableChain}\"`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\terrorMessage += ` at index ${\n\t\t\t\t\t\t\tsegment.start + getPathDIndex(ast.source)\n\t\t\t\t\t\t}`;\n\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t'Maximum precision should not be greater than' +\n\t\t\t\t\t\t\t\t` ${iconMaxFloatPrecision}; ${errorMessage}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'ineffective-segments';\n\n\t\t\t\tconst iconPath = getIconPath($);\n\t\t\t\tconst segments = getIconPathSegments(iconPath);\n\n\t\t\t\t/** @type {import('svg-path-segments').Segment[]} */\n\t\t\t\t// TODO: svgpath does not includes the `segments` property on the interface,\n\t\t\t\t//       see https://github.com/fontello/svgpath/pull/67/files\n\t\t\t\t//\n\t\t\t\t/** @typedef {[string, ...number[]]} Segment  */\n\t\t\t\t/** @type {Segment[]} */\n\t\t\t\tconst absSegments =\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tsvgpath(iconPath).abs().unshort().segments;\n\n\t\t\t\tconst lowerMovementCommands = ['m', 'l'];\n\t\t\t\tconst lowerDirectionCommands = ['h', 'v'];\n\t\t\t\tconst lowerCurveCommand = 'c';\n\t\t\t\tconst lowerShorthandCurveCommand = 's';\n\t\t\t\tconst lowerCurveCommands = [\n\t\t\t\t\tlowerCurveCommand,\n\t\t\t\t\tlowerShorthandCurveCommand,\n\t\t\t\t];\n\t\t\t\tconst upperMovementCommands = ['M', 'L'];\n\t\t\t\tconst upperHorDirectionCommand = 'H';\n\t\t\t\tconst upperVersionDirectionCommand = 'V';\n\t\t\t\tconst upperDirectionCommands = [\n\t\t\t\t\tupperHorDirectionCommand,\n\t\t\t\t\tupperVersionDirectionCommand,\n\t\t\t\t];\n\t\t\t\tconst upperCurveCommand = 'C';\n\t\t\t\tconst upperShorthandCurveCommand = 'S';\n\t\t\t\tconst upperCurveCommands = [\n\t\t\t\t\tupperCurveCommand,\n\t\t\t\t\tupperShorthandCurveCommand,\n\t\t\t\t];\n\t\t\t\tconst curveCommands = [...lowerCurveCommands, ...upperCurveCommands];\n\t\t\t\tconst commands = new Set([\n\t\t\t\t\t...lowerMovementCommands,\n\t\t\t\t\t...lowerDirectionCommands,\n\t\t\t\t\t...upperMovementCommands,\n\t\t\t\t\t...upperDirectionCommands,\n\t\t\t\t\t...curveCommands,\n\t\t\t\t]);\n\n\t\t\t\t/**\n\t\t\t\t * Check if a segment is ineffective.\n\t\t\t\t * @param {import('svg-path-segments').Segment} segment The segment to check.\n\t\t\t\t * @param {number} index The index of the segment in the path.\n\t\t\t\t * @param {boolean} previousSegmentIsZ Whether the previous segment is a Z command.\n\t\t\t\t * @returns {boolean} Whether the segment is ineffective.\n\t\t\t\t */\n\t\t\t\t// eslint-disable-next-line complexity\n\t\t\t\tconst isInvalidSegment = (segment, index, previousSegmentIsZ) => {\n\t\t\t\t\tconst [command, x1Coord, y1Coord, ...rest] = segment.params;\n\t\t\t\t\tif (commands.has(command)) {\n\t\t\t\t\t\t// Relative directions (h or v) having a length of 0\n\t\t\t\t\t\tif (lowerDirectionCommands.includes(command) && x1Coord === 0) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Relative movement (m or l) having a distance of 0\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tindex > 0 &&\n\t\t\t\t\t\t\tlowerMovementCommands.includes(command) &&\n\t\t\t\t\t\t\tx1Coord === 0 &&\n\t\t\t\t\t\t\ty1Coord === 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// When the path is closed (z), the new segment can start with\n\t\t\t\t\t\t\t// a relative placement (m) as if it were absolute (M)\n\t\t\t\t\t\t\treturn command.toLowerCase() === 'm' ? !previousSegmentIsZ : true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlowerCurveCommands.includes(command) &&\n\t\t\t\t\t\t\tx1Coord === 0 &&\n\t\t\t\t\t\t\ty1Coord === 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst [x2Coord, y2Coord] = rest;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t// Relative shorthand curve (s) having a control point of 0\n\t\t\t\t\t\t\t\tcommand === lowerShorthandCurveCommand ||\n\t\t\t\t\t\t\t\t// Relative bézier curve (c) having control points of 0\n\t\t\t\t\t\t\t\t(command === lowerCurveCommand &&\n\t\t\t\t\t\t\t\t\tx2Coord === 0 &&\n\t\t\t\t\t\t\t\t\ty2Coord === 0)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t\tlet [yPreviousCoord, xPreviousCoord] = [\n\t\t\t\t\t\t\t\t...absSegments[index - 1],\n\t\t\t\t\t\t\t].reverse();\n\t\t\t\t\t\t\t// If the previous command was a direction one,\n\t\t\t\t\t\t\t// we need to iterate back until we find the missing coordinates\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tif (upperDirectionCommands.includes(xPreviousCoord)) {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\txPreviousCoord = undefined;\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tyPreviousCoord = undefined;\n\t\t\t\t\t\t\t\tlet index_ = index;\n\t\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t\t--index_ > 0 &&\n\t\t\t\t\t\t\t\t\t(xPreviousCoord === undefined || yPreviousCoord === undefined)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlet [yPreviousCoordDeep, xPreviousCoordDeep] = [\n\t\t\t\t\t\t\t\t\t\t...absSegments[index_],\n\t\t\t\t\t\t\t\t\t].reverse();\n\n\t\t\t\t\t\t\t\t\t// If the previous command was a horizontal movement,\n\t\t\t\t\t\t\t\t\t// we need to consider the single coordinate as x\n\t\t\t\t\t\t\t\t\tif (upperHorDirectionCommand === xPreviousCoordDeep) {\n\t\t\t\t\t\t\t\t\t\txPreviousCoordDeep = yPreviousCoordDeep;\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\tyPreviousCoordDeep = undefined;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// If the previous command was a vertical movement,\n\t\t\t\t\t\t\t\t\t// we need to consider the single coordinate as y\n\t\t\t\t\t\t\t\t\tif (upperVersionDirectionCommand === xPreviousCoordDeep) {\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\txPreviousCoordDeep = undefined;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\txPreviousCoord === undefined &&\n\t\t\t\t\t\t\t\t\t\txPreviousCoordDeep !== undefined\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\txPreviousCoord = xPreviousCoordDeep;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tyPreviousCoord === undefined &&\n\t\t\t\t\t\t\t\t\t\tyPreviousCoordDeep !== undefined\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tyPreviousCoord = yPreviousCoordDeep;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (upperCurveCommands.includes(command)) {\n\t\t\t\t\t\t\t\tconst [x2Coord, y2Coord, xCoord, yCoord] = rest;\n\t\t\t\t\t\t\t\t// Absolute shorthand curve (S) having\n\t\t\t\t\t\t\t\t// the same coordinate as the previous segment\n\t\t\t\t\t\t\t\t// and a control point equal to the ending point\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tupperShorthandCurveCommand === command &&\n\t\t\t\t\t\t\t\t\tx1Coord === xPreviousCoord &&\n\t\t\t\t\t\t\t\t\ty1Coord === yPreviousCoord &&\n\t\t\t\t\t\t\t\t\tx1Coord === x2Coord &&\n\t\t\t\t\t\t\t\t\ty1Coord === y2Coord\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Absolute bézier curve (C) having\n\t\t\t\t\t\t\t\t// the same coordinate as the previous segment\n\t\t\t\t\t\t\t\t// and last control point equal to the ending point\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tupperCurveCommand === command &&\n\t\t\t\t\t\t\t\t\tx1Coord === xPreviousCoord &&\n\t\t\t\t\t\t\t\t\ty1Coord === yPreviousCoord &&\n\t\t\t\t\t\t\t\t\tx2Coord === xCoord &&\n\t\t\t\t\t\t\t\t\ty2Coord === yCoord\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t// Absolute horizontal direction (H) having\n\t\t\t\t\t\t\t\t// the same x coordinate as the previous segment\n\t\t\t\t\t\t\t\t(upperHorDirectionCommand === command &&\n\t\t\t\t\t\t\t\t\tx1Coord === xPreviousCoord) ||\n\t\t\t\t\t\t\t\t// Absolute vertical direction (V) having\n\t\t\t\t\t\t\t\t// the same y coordinate as the previous segment\n\t\t\t\t\t\t\t\t(upperVersionDirectionCommand === command &&\n\t\t\t\t\t\t\t\t\tx1Coord === yPreviousCoord) ||\n\t\t\t\t\t\t\t\t// Absolute movement (M or L) having the same\n\t\t\t\t\t\t\t\t// coordinate as the previous segment\n\t\t\t\t\t\t\t\t(upperMovementCommands.includes(command) &&\n\t\t\t\t\t\t\t\t\tx1Coord === xPreviousCoord &&\n\t\t\t\t\t\t\t\t\ty1Coord === yPreviousCoord)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tfor (let index = 0; index < segments.length; index++) {\n\t\t\t\t\tconst segment = segments[index];\n\t\t\t\t\tconst previousSegmentIsZ =\n\t\t\t\t\t\tindex > 0 && segments[index - 1].params[0].toLowerCase() === 'z';\n\n\t\t\t\t\tif (isInvalidSegment(segment, index, previousSegmentIsZ)) {\n\t\t\t\t\t\tconst [command, _x1, _y1, ...rest] = segment.params;\n\n\t\t\t\t\t\tlet errorMessage = `Ineffective segment \"${iconPath.slice(\n\t\t\t\t\t\t\tsegment.start,\n\t\t\t\t\t\t\tsegment.end,\n\t\t\t\t\t\t)}\" found`;\n\t\t\t\t\t\tlet resolutionTip = 'should be removed';\n\n\t\t\t\t\t\tif (curveCommands.includes(command)) {\n\t\t\t\t\t\t\tconst [x2, y2, x, y] = rest;\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcommand === lowerShorthandCurveCommand &&\n\t\t\t\t\t\t\t\t(x2 !== 0 || y2 !== 0)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tresolutionTip = `should be \"l${removeLeadingZeros(\n\t\t\t\t\t\t\t\t\tx2,\n\t\t\t\t\t\t\t\t)} ${removeLeadingZeros(y2)}\" or removed`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (command === upperShorthandCurveCommand) {\n\t\t\t\t\t\t\t\tresolutionTip = `should be \"L${removeLeadingZeros(\n\t\t\t\t\t\t\t\t\tx2,\n\t\t\t\t\t\t\t\t)} ${removeLeadingZeros(y2)}\" or removed`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (command === lowerCurveCommand && (x !== 0 || y !== 0)) {\n\t\t\t\t\t\t\t\tresolutionTip = `should be \"l${removeLeadingZeros(\n\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t)} ${removeLeadingZeros(y)}\" or removed`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (command === upperCurveCommand) {\n\t\t\t\t\t\t\t\tresolutionTip = `should be \"L${removeLeadingZeros(\n\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t)} ${removeLeadingZeros(y)}\" or removed`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (segment.chain !== undefined) {\n\t\t\t\t\t\t\tconst readableChain = maybeShortenedWithEllipsis(\n\t\t\t\t\t\t\t\ticonPath.slice(segment.chain.start, segment.chain.end),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\terrorMessage += ` in chain \"${readableChain}\"`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\terrorMessage += ` at index ${\n\t\t\t\t\t\t\tsegment.start + getPathDIndex(ast.source)\n\t\t\t\t\t\t}`;\n\n\t\t\t\t\t\treporter.error(`${errorMessage} (${resolutionTip})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'collinear-segments';\n\t\t\t\t/**\n\t\t\t\t * Extracts collinear coordinates from SVG path straight lines\n\t\t\t\t * (does not extracts collinear coordinates from curves).\n\t\t\t\t * @param {string} iconPath The SVG path of the icon.\n\t\t\t\t * @returns {import('svg-path-segments').Segment[]} The collinear segments.\n\t\t\t\t */\n\t\t\t\t// eslint-disable-next-line complexity\n\t\t\t\tconst getCollinearSegments = (iconPath) => {\n\t\t\t\t\tconst segments = getIconPathSegments(iconPath);\n\t\t\t\t\tconst collinearSegments = [];\n\t\t\t\t\tconst straightLineCommands = 'HhVvLlMm';\n\n\t\t\t\t\tlet currentLine = [];\n\t\t\t\t\tlet currentAbsCoord = [undefined, undefined];\n\t\t\t\t\tlet startPoint;\n\t\t\t\t\tlet _inStraightLine = false;\n\t\t\t\t\tlet _nextInStraightLine = false;\n\t\t\t\t\tlet _resetStartPoint = false;\n\n\t\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\t\tconst seg = segments[s];\n\t\t\t\t\t\tconst parms = seg.params;\n\t\t\t\t\t\tconst cmd = parms[0];\n\t\t\t\t\t\tconst nextCmd =\n\t\t\t\t\t\t\ts + 1 < segments.length ? segments[s + 1].params[0] : null;\n\n\t\t\t\t\t\tswitch (cmd) {\n\t\t\t\t\t\t\t// Next switch cases have been ordered by frequency\n\t\t\t\t\t\t\t// of occurrence in the SVG paths of the icons\n\t\t\t\t\t\t\tcase 'M': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[2];\n\t\t\t\t\t\t\t\t// SVG 1.1:\n\t\t\t\t\t\t\t\t// If a moveto is followed by multiple pairs of coordinates,\n\t\t\t\t\t\t\t\t// the subsequent pairs are treated as implicit lineto commands.\n\t\t\t\t\t\t\t\tif (seg.chain === undefined || seg.chain.start === seg.start) {\n\t\t\t\t\t\t\t\t\tstartPoint = undefined;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'm': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[2];\n\t\t\t\t\t\t\t\tif (seg.chain === undefined || seg.chain.start === seg.start) {\n\t\t\t\t\t\t\t\t\tstartPoint = undefined;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'H': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[1];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'h': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[1];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'V': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[1];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'v': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[1];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'L': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[2];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'l': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[2];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t\tcase 'z': {\n\t\t\t\t\t\t\t\t// TODO: Overlapping in Z should be handled in another rule\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord = [startPoint[0], startPoint[1]];\n\t\t\t\t\t\t\t\t_resetStartPoint = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'C': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[5];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[6];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'c': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[5];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[6];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'A': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[6];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[7];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'a': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[6];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[7];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 's': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[2];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'S': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[2];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 't': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[2];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'T': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[1];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[2];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'Q': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = parms[3];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = parms[4];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 'q': {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[0] = (currentAbsCoord[0] || 0) + parms[3];\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tcurrentAbsCoord[1] = (currentAbsCoord[1] || 0) + parms[4];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tthrow new Error(`\"${cmd}\" command not handled`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startPoint === undefined) {\n\t\t\t\t\t\t\tstartPoint = [currentAbsCoord[0], currentAbsCoord[1]];\n\t\t\t\t\t\t} else if (_resetStartPoint) {\n\t\t\t\t\t\t\tstartPoint = undefined;\n\t\t\t\t\t\t\t_resetStartPoint = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t_nextInStraightLine = straightLineCommands.includes(nextCmd);\n\t\t\t\t\t\tconst _exitingStraightLine =\n\t\t\t\t\t\t\t_inStraightLine && !_nextInStraightLine;\n\t\t\t\t\t\t_inStraightLine = straightLineCommands.includes(cmd);\n\n\t\t\t\t\t\tif (_inStraightLine) {\n\t\t\t\t\t\t\tcurrentLine.push([currentAbsCoord[0], currentAbsCoord[1]]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_exitingStraightLine) {\n\t\t\t\t\t\t\t\tif (straightLineCommands.includes(cmd)) {\n\t\t\t\t\t\t\t\t\tcurrentLine.push([currentAbsCoord[0], currentAbsCoord[1]]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Get collinear coordinates\n\t\t\t\t\t\t\t\tfor (let p = 1; p < currentLine.length - 1; p++) {\n\t\t\t\t\t\t\t\t\tconst _collinearCoord = collinear(\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\tcurrentLine[p - 1][0],\n\t\t\t\t\t\t\t\t\t\tcurrentLine[p - 1][1],\n\t\t\t\t\t\t\t\t\t\tcurrentLine[p][0],\n\t\t\t\t\t\t\t\t\t\tcurrentLine[p][1],\n\t\t\t\t\t\t\t\t\t\tcurrentLine[p + 1][0],\n\t\t\t\t\t\t\t\t\t\tcurrentLine[p + 1][1],\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (_collinearCoord) {\n\t\t\t\t\t\t\t\t\t\tcollinearSegments.push(\n\t\t\t\t\t\t\t\t\t\t\tsegments[s - currentLine.length + p + 1],\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcurrentLine = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn collinearSegments;\n\t\t\t\t};\n\n\t\t\t\tconst iconPath = getIconPath($);\n\t\t\t\tconst collinearSegments = getCollinearSegments(iconPath);\n\t\t\t\tif (collinearSegments.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pathDIndex = getPathDIndex(ast.source);\n\t\t\t\tfor (const segment of collinearSegments) {\n\t\t\t\t\tlet errorMessage = `Collinear segment \"${iconPath.slice(\n\t\t\t\t\t\tsegment.start,\n\t\t\t\t\t\tsegment.end,\n\t\t\t\t\t)}\" found`;\n\t\t\t\t\tif (segment.chain !== undefined) {\n\t\t\t\t\t\tconst readableChain = maybeShortenedWithEllipsis(\n\t\t\t\t\t\t\ticonPath.slice(segment.chain.start, segment.chain.end),\n\t\t\t\t\t\t);\n\t\t\t\t\t\terrorMessage += ` in chain \"${readableChain}\"`;\n\t\t\t\t\t}\n\n\t\t\t\t\terrorMessage += ` at index ${\n\t\t\t\t\t\tsegment.start + pathDIndex\n\t\t\t\t\t} (should be removed)`;\n\t\t\t\t\treporter.error(errorMessage);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'extraneous';\n\n\t\t\t\tif (!svgRegexp.test(ast.source)) {\n\t\t\t\t\tif (ast.source.includes('\\n') || ast.source.includes('\\r')) {\n\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t'Unexpected newline character(s) detected in SVG markup',\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t'Unexpected character(s), most likely extraneous' +\n\t\t\t\t\t\t\t\t' whitespace, detected in SVG markup',\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'negative-zeros';\n\n\t\t\t\tconst iconPath = getIconPath($);\n\n\t\t\t\t// Find negative zeros inside path\n\t\t\t\tconst negativeZeroMatches = [...iconPath.matchAll(negativeZerosRegexp)];\n\t\t\t\tif (negativeZeroMatches.length > 0) {\n\t\t\t\t\t// Calculate the index for each match in the file\n\t\t\t\t\tconst pathDIndex = getPathDIndex(ast.source);\n\n\t\t\t\t\tfor (const match of negativeZeroMatches) {\n\t\t\t\t\t\tconst negativeZeroFileIndex = match.index + pathDIndex;\n\t\t\t\t\t\tconst previousChar = ast.source[negativeZeroFileIndex - 1];\n\t\t\t\t\t\tconst replacement = '0123456789'.includes(previousChar)\n\t\t\t\t\t\t\t? ' 0'\n\t\t\t\t\t\t\t: '0';\n\t\t\t\t\t\treporter.error(\n\t\t\t\t\t\t\t`Found \"-0\" at index ${negativeZeroFileIndex} (should` +\n\t\t\t\t\t\t\t\t` be \"${replacement}\")`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $) => {\n\t\t\t\treporter.name = 'icon-centered';\n\n\t\t\t\tconst iconPath = getIconPath($);\n\t\t\t\tconst [minX, minY, maxX, maxY] = getIconPathBbox(iconPath);\n\t\t\t\tconst centerX = Number(((minX + maxX) / 2).toFixed(iconFloatPrecision));\n\t\t\t\tconst devianceX = centerX - iconTargetCenter;\n\t\t\t\tconst centerY = Number(((minY + maxY) / 2).toFixed(iconFloatPrecision));\n\t\t\t\tconst devianceY = centerY - iconTargetCenter;\n\n\t\t\t\tif (\n\t\t\t\t\tMath.abs(devianceX) > iconTolerance ||\n\t\t\t\t\tMath.abs(devianceY) > iconTolerance\n\t\t\t\t) {\n\t\t\t\t\treporter.error(\n\t\t\t\t\t\t`<path> must be centered at (${iconTargetCenter}, ${iconTargetCenter});` +\n\t\t\t\t\t\t\t` the center is currently (${centerX}, ${centerY})`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'final-closepath';\n\n\t\t\t\tconst iconPath = getIconPath($);\n\t\t\t\tconst segments = getIconPathSegments(iconPath);\n\n\t\t\t\t// Unnecessary characters after the final closepath\n\t\t\t\t/** @type {import('svg-path-segments').Segment} */\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst lastSegment = segments.at(-1);\n\t\t\t\tconst endsWithZ = ['z', 'Z'].includes(lastSegment.params[0]);\n\t\t\t\tif (endsWithZ && lastSegment.end - lastSegment.start > 1) {\n\t\t\t\t\tconst ending = iconPath.slice(lastSegment.start + 1);\n\t\t\t\t\tconst closepath = iconPath.at(lastSegment.start);\n\t\t\t\t\tconst pathDIndex = getPathDIndex(ast.source);\n\t\t\t\t\tconst index = pathDIndex + lastSegment.start + 2;\n\t\t\t\t\tconst errorMessage =\n\t\t\t\t\t\t`Invalid character(s) \"${ending}\" after the final` +\n\t\t\t\t\t\t` closepath command \"${closepath}\" at index ${index}` +\n\t\t\t\t\t\t` (should be removed)`;\n\t\t\t\t\treporter.error(errorMessage);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'path-format';\n\n\t\t\t\tconst iconPath = getIconPath($);\n\n\t\t\t\tif (!SVG_PATH_REGEX.test(iconPath)) {\n\t\t\t\t\tconst errorMessage = 'Invalid path format';\n\t\t\t\t\tlet reason;\n\n\t\t\t\t\tif (!iconPath.startsWith('M') && !iconPath.startsWith('m')) {\n\t\t\t\t\t\t// Doesn't start with moveto\n\t\t\t\t\t\treason =\n\t\t\t\t\t\t\t'should start with \"moveto\" command (\"M\" or \"m\"),' +\n\t\t\t\t\t\t\t` but starts with \"${iconPath[0]}\"`;\n\t\t\t\t\t\treporter.error(`${errorMessage}: ${reason}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst validPathCharacters = SVG_PATH_REGEX.source.replaceAll(\n\t\t\t\t\t\t/[[\\]+^$]/g,\n\t\t\t\t\t\t'',\n\t\t\t\t\t);\n\t\t\t\t\tconst invalidCharactersMsgs = [];\n\t\t\t\t\tconst pathDIndex = getPathDIndex(ast.source);\n\n\t\t\t\t\tfor (const [i, char] of Object.entries(iconPath)) {\n\t\t\t\t\t\tif (!validPathCharacters.includes(char)) {\n\t\t\t\t\t\t\tinvalidCharactersMsgs.push(\n\t\t\t\t\t\t\t\t`\"${char}\" at index ${pathDIndex + Number.parseInt(i, 10)}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Contains invalid characters\n\t\t\t\t\tif (invalidCharactersMsgs.length > 0) {\n\t\t\t\t\t\treason = `unexpected character${\n\t\t\t\t\t\t\tinvalidCharactersMsgs.length > 1 ? 's' : ''\n\t\t\t\t\t\t} found (${invalidCharactersMsgs.join(', ')})`;\n\t\t\t\t\t\treporter.error(`${errorMessage}: ${reason}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(reporter, $, ast) => {\n\t\t\t\treporter.name = 'svg-format';\n\n\t\t\t\t// Don't allow explicit '</path>' closing tag\n\t\t\t\tif (ast.source.includes('</path>')) {\n\t\t\t\t\tconst reason =\n\t\t\t\t\t\t`found a closing \"path\" tag at index ${ast.source.indexOf(\n\t\t\t\t\t\t\t'</path>',\n\t\t\t\t\t\t)}. The path should be self-closing,` +\n\t\t\t\t\t\t' use \"/>\" instead of \"></path>\".';\n\t\t\t\t\treporter.error(`Invalid SVG content format: ${reason}`);\n\t\t\t\t}\n\t\t\t},\n\t\t],\n\t},\n};\n\nexport default config;\n"
        },
        {
          "name": "svgo.config.mjs",
          "type": "blob",
          "size": 2.2265625,
          "content": "/**\n * @file SVGO configuration for Simple Icons.\n */\n\n/** @type {import(\"svgo\").Config} */\nconst config = {\n\tmultipass: true,\n\tplugins: [\n\t\t'cleanupAttrs',\n\t\t'inlineStyles',\n\t\t'removeDoctype',\n\t\t'removeXMLProcInst',\n\t\t'removeComments',\n\t\t'removeMetadata',\n\t\t'removeDesc',\n\t\t'removeUselessDefs',\n\t\t'removeEditorsNSData',\n\t\t'removeEmptyAttrs',\n\t\t'removeHiddenElems',\n\t\t'removeEmptyText',\n\t\t'removeEmptyContainers',\n\t\t'cleanupEnableBackground',\n\t\t{\n\t\t\tname: 'convertPathData',\n\t\t\tparams: {\n\t\t\t\t// 3 decimals of precision in floating point numbers\n\t\t\t\tfloatPrecision: 3,\n\t\t\t\t// Some editors (e.g. Adobe Illustrator and Sketch) cannot parse flags\n\t\t\t\t// without space wrapping\n\t\t\t\tnoSpaceAfterFlags: false,\n\t\t\t},\n\t\t},\n\t\t'convertTransform',\n\t\t{\n\t\t\tname: 'removeUnknownsAndDefaults',\n\t\t\tparams: {\n\t\t\t\t// Keep the 'role' attribute, if it's already defined\n\t\t\t\tkeepRoleAttr: true,\n\t\t\t},\n\t\t},\n\t\t'removeNonInheritableGroupAttrs',\n\t\t{\n\t\t\t// Remove paths with fill=\"none\"\n\t\t\tname: 'removeUselessStrokeAndFill',\n\t\t\tparams: {\n\t\t\t\tremoveNone: true,\n\t\t\t},\n\t\t},\n\t\t'removeUselessStrokeAndFill',\n\t\t'removeUnusedNS',\n\t\t'cleanupIds',\n\t\t'cleanupNumericValues',\n\t\t'cleanupListOfValues',\n\t\t'moveGroupAttrsToElems',\n\t\t'collapseGroups',\n\t\t'removeRasterImages',\n\t\t{\n\t\t\t// Compound all <path>s into one\n\t\t\tname: 'mergePaths',\n\t\t\tparams: {\n\t\t\t\tforce: true,\n\t\t\t\tnoSpaceAfterFlags: false,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Convert basic shapes (such as <circle>) to <path>\n\t\t\tname: 'convertShapeToPath',\n\t\t\tparams: {\n\t\t\t\t// Including <arc>\n\t\t\t\tconvertArcs: true,\n\t\t\t},\n\t\t},\n\t\t'convertEllipseToCircle',\n\t\t{\n\t\t\t// Sort the attributes on the <svg> tag\n\t\t\tname: 'sortAttrs',\n\t\t\tparams: {\n\t\t\t\torder: ['role', 'viewBox'],\n\t\t\t\txmlnsOrder: 'alphabetical',\n\t\t\t},\n\t\t},\n\t\t'sortDefsChildren',\n\t\t'removeDimensions',\n\t\t{\n\t\t\tname: 'removeAttrs',\n\t\t\tparams: {\n\t\t\t\tattrs: [\n\t\t\t\t\t'svg:.*(?<!((role)|(viewBox)|(xmlns)))',\n\t\t\t\t\t'path:(?!d)',\n\t\t\t\t\t'title:*',\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Keep the role=\"img\" attribute and automatically add it\n\t\t\t// to the <svg> tag if it's not there already\n\t\t\tname: 'addAttributesToSVGElement',\n\t\t\tparams: {\n\t\t\t\tattributes: [{role: 'img', xmlns: 'http://www.w3.org/2000/svg'}],\n\t\t\t},\n\t\t},\n\t\t'removeOffCanvasPaths',\n\t\t'removeStyleElement',\n\t\t'removeScriptElement',\n\t\t'reusePaths',\n\t],\n};\n\nexport default config;\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "types.d.ts",
          "type": "blob",
          "size": 0.6728515625,
          "content": "/**\n * @file Types for Simple Icons package.\n */\n\n/**\n * The license for a Simple Icon.\n * @see {@link https://github.com/simple-icons/simple-icons/blob/develop/CONTRIBUTING.md#optional-data Optional Data}\n */\nexport type License = SPDXLicense | CustomLicense;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type SPDXLicense = {\n\ttype: string;\n\turl: string;\n};\n\nexport type CustomLicense = {\n\ttype: 'custom';\n\turl: string;\n};\n\n/**\n * The data for a Simple Icon as is exported by the npm package.\n */\nexport type SimpleIcon = {\n\ttitle: string;\n\tslug: string;\n\tsvg: string;\n\tpath: string;\n\tsource: string;\n\thex: string;\n\tguidelines?: string;\n\tlicense?: License;\n};\n"
        }
      ]
    }
  ]
}