{
  "metadata": {
    "timestamp": 1736563104449,
    "page": 15,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "philc/vimium",
      "stars": 23854,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.00390625,
          "content": "dist"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 26.4052734375,
          "content": "2.1.2 (2024-04-03)\n\n- Better fix for Vomnibar doesn't always list tabs by recency.\n  ([#4368](https://github.com/philc/vimium/issues/4368))\n- Add a workaround to make link hints work on Github Enterprise.\n  ([#4446](https://github.com/philc/vimium/issues/4446))\n- Fix position=end is ignored in createTab command\n  ([#4450](https://github.com/philc/vimium/issues/4450))\n\n2.1.1 (2024-03-29)\n\n- Fix exclusion rule popup not working. ([#4447](https://github.com/philc/vimium/issues/4447))\n\n2.1.0 (2024-03-27)\n\n- Fix Vomnibar doesn't always list tabs by recency.\n  ([#4368](https://github.com/philc/vimium/issues/4368))\n- Better domain detection in the Vomnibar ([#3268](https://github.com/philc/vimium/issues/3268))\n- Exclude keys based on the top frame URL, not a subframe's URL. This fixes many cases where the\n  excluded keys feature didn't seem to work. ([#4402](https://github.com/philc/vimium/issues/4402))\n- After selecting a link, if ESC is pressed, mouse out of the link. With this, Wikipedia's and\n  Github's link preview popups can be dismissed after following a link.\n  ([#3073](https://github.com/philc/vimium/issues/3073))\n- Fix link hints do not appear for links inside of github's popups. This fix is available on Chrome\n  114+, and soon Firefox. ([#4408](https://github.com/philc/vimium/issues/4408))\n\n2.0.5, 2.0.6 (2023-11-06)\n\n- Fix bug where \"esc\" wouldn't unfocus a textarea like it should.\n  ([#4336](https://github.com/philc/vimium/issues/4336))\n- Fix passNextKey command.\n\n2.0.4 (2023-10-19)\n\n- Bug fixes: ([#4340](https://github.com/philc/vimium/issues/4340)),\n  ([#4341](https://github.com/philc/vimium/issues/4341)),\n  ([#4342](https://github.com/philc/vimium/issues/4342)).\n\n2.0.2, 2.0.3 (2023-10-11)\n\n- Fix Vomnibar tab search doesn't get pre-populated with recently visited tabs.\n  ([#4326](https://github.com/philc/vimium/issues/4326))\n- Fix bookmarklets not working when opened from the Vomnibar. This is a partial fix; a full fix is\n  waiting on a new extensions API. See [#4329](https://github.com/philc/vimium/issues/4329) for\n  discussion.\n\n2.0.1 (2023-10-04)\n\n- Fix exception when migrating some pre-v2.0 settings.\n  ([#4323](https://github.com/philc/vimium/issues/4323))\n\n2.0.0 (2023-09-28 -- partially rolled out to users on the Chrome store)\n\n- Support manifest v3, as now required by Chrome. This involved a partial rewrite and many changes.\n  Please report any new issues [here](https://github.com/philc/vimium/issues).\n- The storage format for Vimium's options has changed in v2.x. That means an options backup from\n  Vimium v2.x cannot be loaded on Vimium v1.x installations.\n- Revamp the action bar UI, which configures which keys Vimium ignores on a particular site.\n- Improve Vimium's options UI.\n- Show link hints for image maps. ([#3493](https://github.com/philc/vimium/issues/3493))\n- Remove the use of window.unload handlers, in preparation for Chrome's bfcache.\n  ([#4265](https://github.com/philc/vimium/issues/4265))\n- Allow find mode to work when using only private windows.\n  ([#3614](https://github.com/philc/vimium/issues/3614))\n- Add a count option to closeTabsOnLeft and closeTabsOnRight commands, to allow binding a key to\n  \"close just 1 tab on the left/right\" rather than closing all tabs, as is the default. E.g.\n  `map cl\n  closeTabsOnLeft count=1`. ([#4296](https://github.com/philc/vimium/pull/4296))\n- Add search completions for Brave Search. ([#3851](https://github.com/philc/vimium/pull/3851))\n- Make regular expressions in find mode work again; other find mode improvements.\n  ([#4261](https://github.com/philc/vimium/issues/4261))\n- Bug fixes. ([#3944](https://github.com/philc/vimium/pull/3944),\n  [#3752](https://github.com/philc/vimium/pull/3752),\n  [#3675](https://github.com/philc/vimium/pull/3675))\n\n1.67.7 (2023-07-12)\n\n- Fix an issue where focusing the google search box puts the cursor at the start, rather than end,\n  of the search box. ([#4247](https://github.com/philc/vimium/issues/4247))\n\n1.67.6 (2022-12-19)\n\n- Fix a spurious issue preventing approval on the Mozilla addons site\n  ([#4195](https://github.com/philc/vimium/issues/4195))\n\n1.67.5 (2022-12-17)\n\n- For Firefox only, add back the clipboard read and write permissions. This fixes the Vimium\n  commands which use the clipboard in Firefox ([#4186](https://github.com/philc/vimium/pull/4186))\n\n1.67.4 (2022-12-01)\n\n- Remove clipboard read/write permissions. We no longer need them since 1.67.2 (see #4120).\n- Fix Vimium's dark mode styling, take 2 (see [#4156](https://github.com/philc/vimium/issues/4156),\n  [#4159](https://github.com/philc/vimium/pull/4159))\n\n1.67.3 (2022-10-29)\n\n- Fix copy-to-clipboard issue ([#4147](https://github.com/philc/vimium/issues/4147)) in visual mode.\n- Fix Vimium's dark mode styling in latest Firefox.\n  ([#4148](https://github.com/philc/vimium/issues/4148))\n\n1.67.2 (2022-10-17)\n\n- In Firefox, remove use of deprecated InstallTrigger, which was issuing a console warning\n  ([#4033](https://github.com/philc/vimium/issues/4033))\n- Fix the Vimium toolbar icon to accurately reflect whether keys are excluded\n  ([#4118](https://github.com/philc/vimium/pull/4118))\n- Fix usage of deprecated clipboard APIs, which affected commands using copy and paste\n  ([#4120](https://github.com/philc/vimium/issues/4120))\n- Fix bug preventing going into caret mode ([#3877](https://github.com/philc/vimium/pull/3877))\n\n1.67.1 (2022-01-19)\n\n- In Firefox 96+, make link hints open one tab, not two\n  ([#3985](https://github.com/philc/vimium/pull/3985))\n\n1.67 (2021-07-09)\n\n- Dark mode: Vimium's UI (URL bar, help dialog, option page, etc.) are dark if the browser is\n  configured for dark mode. Vimium's dark mode is also compatible when using the popular\n  [DarkReader extension](https://github.com/darkreader/darkreader).\n- Convert the code base from Coffeescript to Javascript, to simplify the dev experience and allow\n  more developers to work on Vimium.\n- Make search mode work in newer versions of Firefox (#3801)\n- Make buttons on the Vimium options page work again in newer versions of Firefox (#3624)\n- Allow Vimium to work in LibreWolf (a Firefox fork)\n- Fixes to visual mode (#3568, #3779)\n\n1.66 (2020-03-02)\n\n- Show tabs in the Vomnibar bar search results ('o')\n  ([#2656](https://github.com/philc/vimium/pull/2656))\n- Add commands to hover or focus a link ([#3097](https://github.com/philc/vimium/pull/3097)) (see\n  [wiki)](https://github.com/philc/vimium/wiki/Tips-and-Tricks#hovering-over-links-using-linkhints)\n- Allow shift as a modifier for keybindings (e.g. `<s-left>`)\n  ([#2388](https://github.com/philc/vimium/pull/2388))\n- Fix some issues with link hints [(#3499](https://github.com/philc/vimium/pull/3499),\n  [#3505](https://github.com/philc/vimium/pull/3505),\n  [#3509](https://github.com/philc/vimium/pull/3509))\n- Other fixes.\n\n1.65.2 (2020-02-10)\n\n- No code changes; trying to debug a permissions issue as shown in the chrome store\n  ([#3489](https://github.com/philc/vimium/issues/3489)).\n\n1.65.1 (2020-02-09)\n\n- Fix an issue with the HUD preventing some link hints from being shown\n  ([#3486](https://github.com/philc/vimium/issues/3486)).\n\n1.65 (2020-02-08)\n\n- Many fixes for Firefox ([#3483](https://github.com/philc/vimium/pull/3483),\n  [#2893](https://github.com/philc/vimium/issues/2893),\n  [#3106](https://github.com/philc/vimium/issues/3106),\n  [#3409](https://github.com/philc/vimium/pull/3409),\n  [#3288](https://github.com/philc/vimium/pull/3288))\n- Fix javascript bookmarks, broken by Chrome 71+\n  [(#3473)](https://github.com/philc/vimium/pull/3437)\n- Improved link hints: show hints on sites with shadow DOM\n  [(#3406)](https://github.com/philc/vimium/pull/3406), don't show hints for obstructed/invisible\n  links ([#2251](https://github.com/philc/vimium/pull/2251))\n- Fix scrolling on Reddit.com ([#3327](https://github.com/philc/vimium/pull/3327))\n- Show favicons when using the tab switcher ([#2878](https://github.com/philc/vimium/pull/2878))\n- The createTab command can now take arguments (start, end, before, after)\n  ([#2895](https://github.com/philc/vimium/pull/2895))\n- When using the Vomnibar, you can manually edit the suggested URL by typing ctrl-enter\n  [(#2464)](https://github.com/philc/vimium/pull/2914)\n- Other fixes\n\n1.64.6 (2019-05-12)\n\n- Fix the find mode, and copying the page's URL to the clipboard, which were broken by Chrome 74+.\n  ([#3260](https://github.com/philc/vimium/issues/3260))\n\n1.64.5 (2019-02-16)\n\n- Fix error in Chrome Store distribution.\n\n1.64.4 (2019-02-16)\n\n- Fix [Vomnibar focus issue](https://github.com/philc/vimium/issues/3242).\n\n1.64.3 (2018-12-26)\n\n- When yanking email addresses with `yf`, Vimium now strips the leading `mailto:`.\n- For custom search engines, if you use `%S` (instead of `%s`), then your search terms are not URI\n  encoded.\n- Bug fixes (including horizontal scrolling broken).\n\n1.64.2 (2018-12-16)\n\n- Better scrolling on new Reddit ~~and GMail~~.\n\n1.64 (2018-08-30)\n\n- Custom search engines can now be `javascript:` URLs (eg., search the current\n  [site](https://github.com/philc/vimium/issues/2956#issuecomment-366509915)).\n- You can now using local marks to mark a hash/anchor. This is particularly useful for marking\n  labels on GMail.\n- For filtered hints, you can now start typing the link text before the hints have been generated.\n- On Twitter, expanded tweets are now scrollable.\n- Fix bug whereby `<Enter>` wasn't recognised in the Vomnibar in some circumstances.\n- Various minor bug fixes.\n\n1.63 (2018-02-16)\n\n- The `reload` command now accepts a count prefix; so `999r` reloads all tabs (in the current\n  window).\n- Better detection of click listeners for link hints.\n- Display version number in page popup.\n- The Vomnibar is now loaded on demand (not preloaded). This should fix some issues with the dev\n  console.\n- The `\\I` control (case sensitivity) for find mode has been removed. Find mode uses smartcase.\n- Various bug fixes.\n- 1.63.1 (Firefox only):\n  - Fix [#2958](https://github.com/philc/vimium/issues/2958#issuecomment-366488659), link hints\n    broken for `target=\"_blank\"` links.\n- 1.63.2 (Firefox only):\n  - Fix [#2962](https://github.com/philc/vimium/issues/2962), find mode broken on Firefox Quantum.\n- 1.63.3:\n  - Fix [#2997](https://github.com/philc/vimium/issues/2997), Vimium's DOM injection breaks Google\n    Pay site.\n\n1.62 (2017-12-09)\n\n- Backup and restore Vimium options (see the very bottom of the options page, below _Advanced\n  Options_).\n- It is now possible to map `<tab>`, `<enter>`, `<delete>`, `<insert>`, `<home>` and `<end>`.\n- New command options for `createTab` to create new normal and incognito windows\n  ([examples](https://github.com/philc/vimium/wiki/Tips-and-Tricks#creating-tabs-with-urls-and-windows)).\n- Firefox only:\n  - Fix copy and paste commands.\n  - When upgrading, you will be asked to re-validate permissions. The only new permission is \"copy\n    and paste to/from clipboard\" (the `clipboardWrite` permission). This is necessary to support\n    copy/paste on Firefox.\n- Various bug fixes.\n- 1.62.1: Swap global and local marks (1.62.1). In a browser, some people find global marks more\n  useful than local marks. Example:\n\n```\nmap X Marks.activateCreateMode swap\nmap Y Marks.activateGotoMode swap\n```\n\n- Other minor versions:\n  - 1.62.2: Fixes [#2868](https://github.com/philc/vimium/issues/2868) (`createTab` with multiple\n    URLs).\n  - 1.62.4: Fixes bug affecting the enabled state, and really fix `createTab`.\n\n1.61 (2017-10-27)\n\n- For _filtered hints_, you can now use alphabetical hint characters instead of digits; use\n  `<Shift>` for hint characters.\n- With `map R reload hard`, the reload command now asks Chrome to bypass its cache.\n- You can now map `<c-[>` to a command (in which case it will not be treated as `Escape`).\n- Various bug fixes, particularly for Firefox.\n- Minor versions:\n  - 1.61.1: Fix `map R reload hard`.\n\n1.60 (2017-09-14)\n\n- Features:\n  - There's a new (advanced) option to ignore the keyboard layout; this can be helpful for users of\n    non-Latin keyboards.\n  - Firefox support. This is a work in progress; please report any issues\n    [here](https://github.com/philc/vimium/issues?q=is%3Aopen+sort%3Aupdated-desc); see the\n    [add on](https://addons.mozilla.org/en-GB/firefox/addon/vimium-ff/).\n\n- Bug fixes:\n  - Fixed issue affecting hint placement when the display is zoomed.\n  - Fixed search completion for Firefox (released as 1.59.1, Firefox only).\n\n- Minor versions:\n  - 1.60.1: fix [#2642](https://github.com/philc/vimium/issues/2642).\n  - 1.60.2: revert previous fix for HiDPI screens. This was breaking link-hint positioning for some\n    users.\n  - 1.60.3: [fix](https://github.com/philc/vimium/pull/2649) link-hint positioning.\n  - 1.60.4: [fix](https://github.com/philc/vimium/pull/2602) hints opening in new tab (Firefox\n    only).\n\n1.59 (2017-04-07)\n\n- Features:\n  - Some commands now work on PDF tabs (`J`, `K`, `o`, `b`, etc.). Scrolling and other\n    content-related commands still do not work.\n\n1.58 (2017-03-08)\n\n- Features:\n  - The `createTab` command can now open specific URLs (e.g,\n    `map X createTab http://www.bbc.com/news`).\n  - With pass keys defined for a site (such as GMail), you can now use Vimium's bindings again with,\n    for example, `map \\ passNextKey normal`; this reactivates normal mode temporarily, but _without\n    any pass keys_.\n  - You can now map multi-modifier keys, for example: `<c-a-X>`.\n  - Vimium can now do simple key mapping in some modes; see\n    [here](https://github.com/philc/vimium/wiki/Tips-and-Tricks#key-mapping). This can be helpful\n    with some non-English keyboards (and can also be used to remap `Escape`).\n  - For _Custom key mappings_ on the options page, lines which end with `\\` are now continued on the\n    following line.\n- Process:\n  - In order to provide faster bug fixes, we may in future push new releases without the noisy\n    notification.\n\n- Post-release minor fixes:\n  - 1.58.1 (2017-03-09) fix bug in `LinkHints.activateModeWithQueue` (#2445).\n  - 1.58.2 (2017-03-19) fix key handling bug (#2453).\n\n1.57 (2016-10-01)\n\n- New commands:\n  - `toggleMuteTab` - mute or unmute the current tab (default binding `<a-m>`), see also\n    [advanced usage](https://github.com/philc/vimium/wiki/Tips-and-Tricks#muting-tabs).\n- Other new features:\n  - You can now map `<backspace>` to a Vimium command (e.g. `map <backspace> goBack`).\n  - For link hints, when one hint marker is covered by another, `<Space>` now rotates the stacking\n    order. If you use filtered hints, you'll need to use a modifier (e.g. `<c-Space>`).\n- Changes:\n  - Global marks now search for an existing matching tab by prefix (rather than exact match). This\n    allows global marks to be used as quick bookmarks on sites (like Facebook, Gmail, etc) where the\n    URL changes as you navigate around.\n- Bug fixes:\n  - `/i` can no longer hang Vimium while the page is loading.\n  - `<c-a-[>` is no longer handled (incorrectly) as `Escape`. This also affects `<Alt-Gr-[>`.\n  - If `goX` is mapped, then `go` no longer launches the vomnibar. This only affects three-key (or\n    longer) bindings.\n\n1.56 (2016-06-11)\n\n- Vimium now works around a Chromium bug affecting users with non-standard keyboard layouts (see\n  #2147).\n- Fixed a bug preventing visual line mode (`V`) from working.\n\n1.55 (2016-05-26)\n\n- New commands:\n  - `visitPreviousTab` - visit the previous tab (by recency) with `^`, or the tab before that with\n    `2^`.\n  - `passNextKey` - pass the next key to the page. For example, using `map <c-]> passNextKey`, you\n    can close Facebook's messenger popups with `<c-]><Esc>`.\n- Link hints:\n  - Now work across all frames in the tab.\n  - Now select frames and scrollable elements.\n  - Now accept a count prefix; `3F` opens three new background tabs, `999F` opens many tabs.\n  - For filtered link hints, a new option on the settings page requires you to press `Enter` to\n    activate a link; this prevents unintentionally triggering Vimium commands with trailing\n    keystrokes.\n- Miscellaneous:\n  - `gg` now accepts a `count` prefix.\n  - `W` now accepts a count prefix; `3W` moves three tabs to a new window.\n  - With smooth scrolling, `2j`-and-hold now gives a faster scroll than `j`-and-hold.\n  - You can now bind keys to a command with a defined count prefix; for example,\n    `map d scrollDown count=4`.\n  - You can now bind three-key (or longer) sequences; for example, `map abc enterInsertMode`.\n  - `c-y` and `c-e` now scroll in visual mode.\n  - The Vimium help dialog has been re-styled.\n- Bug fixes:\n  - `<c-a-[>` is no longer treated as escape.\n  - Fix icon display and memory leak due to a regression in recent Chrome versions (49+).\n- For web-devs only:\n  - When disabled on a tab, Vimium no longer pollutes the dev console with network requests.\n\n1.54 (2016-01-30)\n\n- Fix occasional endless scrolling (#1911).\n\n1.53 (2015-09-25)\n\n- Vimium now works on the new-tab page for Chrome 47.\n- `g0` and `g$` now accept count prefixes; so `2g0` selects the second tab, and so on.\n- Bug fixes:\n  - Fix `moveTabLeft` and `moveTabRight` for pinned tabs (#1814 and #1815).\n\n1.52 (2015-09-09)\n\n- Search completion for selected custom search engines (details on the\n  [wiki](https://github.com/philc/vimium/wiki/Search-Completion)).\n- Use `Tab` on an empty Vomnibar to repeat or edit recent queries (details on the\n  [wiki](https://github.com/philc/vimium/wiki/Tips-and-Tricks#repeat-recent-vomnibar-queries)).\n- Marks:\n  - Use <tt>\\`\\`</tt> to jump back to the previous position after jump-like movements: <br/> (`gg`,\n    `G`, `n`, `N`, `/` and local mark movements).\n  - Global marks are now persistent and synced.\n- For numeric link hints, you can now use `Tab` and `Enter` to select hints, and hints are ordered\n  by the best match.\n- The Find Mode text entry box now supports editing, pasting, and better handles non-latin\n  characters.\n- Vimium now works on XML pages.\n- Bug fixes.\n\n1.51 (2015-05-02)\n\n- Bug\n  [fixes](https://github.com/philc/vimium/pulls?utf8=%E2%9C%93&q=is%3Apr+sort%3Aupdated-desc+is%3Aclosed+merged%3A%3E%3D2015-04-26+merged%3A%3C2015-05-02+state%3Amerged).\n\n1.50 (2015-04-26)\n\n- Visual mode (in beta): use `v` and then vim-like keystrokes to select text on the page. Use `y` to\n  yank or `p` and `P` to search with your default search engine.. Please provide feedback on Github.\n- Added the option to prevent pages from stealing focus from Vimium when loaded.\n- Many bugfixes for custom search engines, and search engines can now have a description.\n- Better support for frames: key exclusion rules are much improved and work within frames; the\n  Vomnibar is always activated in the main frame; and a new command (`gF`) focuses the main frame.\n- Find mode now has history. Use the up arrow to select previous searches.\n- Ctrl and Shift when using link hints changes the tab in which links are opened in (reinstated\n  feature).\n- Focus input (`gi`) remembers previously-visited inputs.\n- Bug fixes.\n\n1.49 (2014-12-16)\n\n- An option to toggle smooth scrolling.\n- Make Vimium work on older versions of Chrome.\n\n1.46, 1.47, 1.48 (2014-12-15)\n\n- Site-specific excluded keys: you can disable some Vimium key bindings on sites like gmail.com, so\n  you can use the key bindings provided by the site itself.\n- Smooth scrolling.\n- The Vomnibar now orders tabs by recency. Use this to quickly switch between your most\n  recently-used tabs.\n- New commands: \"close tabs to the left\", \"close tabs to the right\", \"close all other tabs\".\n- Usability improvements.\n- Bug fixes.\n\n1.45 (2014-07-20)\n\n- Vimium's settings are now synced across computers.\n- New commands: \"open link in new tab and focus\", \"move tab left\", \"move tab right\", \"pin/unpin\n  tab\".\n- Vomnibar can now use\n  [search engine shortcuts](https://github.com/philc/vimium/wiki/Search-Engines), similar to\n  Chrome's Omnibar.\n- Due to significant ranking improvements, Vomnibar's search results are now even more helpful.\n- When reopening a closed tab, its history is now preserved.\n- Bug fixes.\n\n1.44 (2013-11-06)\n\n- Add support for recent versions of Chromium.\n- Bug fixes.\n\n1.43 (2013-05-18)\n\n- Relevancy improvements to the Vomnibar's domain & history search.\n- Added `gU`, which goes to the root of the current URL.\n- Added `yt`, which duplicates the current tab.\n- Added `W`, which moves the current tab to a new window.\n- Added marks for saving and jumping to sections of a page. `mX` to set a mark and `` `X `` to\n  return to it.\n- Added \"LinkHints.activateModeToOpenIncognito\", currently an advanced, unbound command.\n- Disallowed repeat tab closings, since this causes trouble for many people.\n- Update our Chrome APIs so Vimium works on Chrome 28+.\n- Bug fixes.\n\n1.42 (2012-11-03)\n\n- Bug fixes.\n\n1.41 (2012-10-27)\n\n- Bug fixes.\n\n1.40 (2012-10-27)\n\n- Bug fixes.\n- Added options for search engines and regex find.\n- Pressing unmapped keys in hints mode now deactivates the mode.\n\n1.39 (2012-09-09)\n\n- Bug fixes.\n\n1.38 (2012-09-08)\n\n- `O` now opens Vomnibar results in a new tab. `B` does the same for bookmarks only.\n- Add a browser icon to quickly add sites to Vimium's exclude list.\n- Restyle options page.\n- `gi` now launches a new mode that allows the user to tab through the input elements on the page.\n- Bug fixes.\n\n1.37 (2012-07-07)\n\n- Select the first result by default in Vomnibar tab and bookmark modes.\n\n1.36 (2012-07-07)\n\n- `b` brings up a bookmark-only Vomnibar.\n- Better support for some bookmarklets.\n\n1.35 (2012-07-05)\n\n- Bug fixes.\n\n1.34 (2012-07-03)\n\n- A bug fix for bookmarklets in Vomnibar.\n\n1.33 (2012-07-02)\n\n- A Vomnibar, which allows you to open sites from history, bookmarks, and tabs using Vimium's UI.\n  Type `o` to try it.\n\n1.32 (2012-03-05)\n\n- More tweaks to the next / previous link-detection algorithm.\n- Minor bug fixes.\n\n1.31 (2012-02-28)\n\n- Improve style of link hints, and use fewer characters for hints.\n- Add an option to hide the heads up display (HUD). Notably, the HUD obscures Facebook Chat's\n  textbox.\n- Detection and following of next / previous links has been improved.\n- Addition of `g0` and `g$` commands, for switching tabs.\n- Addition of `p`/`P` commands for URL pasting.\n- A new find mode which optionally supports case sensitivity and regular expressions.\n- Bug fixes.\n\n1.30 (2011-12-04)\n\n- Support for image maps in link hints.\n- Counts now work with forward & backward navigation.\n- `Tab` & `shift-tab` to navigate bookmarks dialog.\n- An alternate link hints mode: type the title of a link to select it. You can enable it in Vimium's\n  Advanced Preferences.\n- Bug fixes.\n\n1.29 (2012-07-30)\n\n- `yf` to copy a link hint url to the clipboard.\n- Scatter link hints to prevent clustering on dense sites.\n- Don't show insert mode notification unless you specifically hit `i`.\n- Remove zooming functionality now that Chrome does it all natively.\n\n1.28 (2011-06-29)\n\n- Support for opening bookmarks (`b` and `B`).\n- Support for contenteditable text boxes.\n- Speed improvements and bug fixes.\n\n1.27 (2011-03-24)\n\n- Improvements and bug fixes.\n\n1.26 (2011-02-17)\n\n- `<c-d>`, `<c-f>` and related are no longer bound by default. You can rebind them on the options\n  page.\n- Faster link hinting.\n\n1.22, 1.23, 1.24, 1.25 (2011-02-10)\n\n- Some sites are now excluded by default.\n- View source (`gs`) now opens in a new tab.\n- Support for browsing paginated sites using `]]` and `[[` to go forward and backward respectively.\n- Many of the less-used commands are now marked as \"advanced\" and hidden in the help dialog by\n  default, so that the core command set is more focused and approachable.\n- Improvements to link hinting.\n- Bug fixes.\n\n1.21 (2010-10-24)\n\n- Critical bug fix for an excluded URLs regression due to frame support.\n\n1.20 (2010-10-24)\n\n- In link hints mode, holding down the shift key will now toggle between opening in the current tab\n  and opening in a new tab.\n- Two new commands (`zH` and `zL`) to scroll to the left and right edges of the page.\n- A new command (`gi`) to focus the first (or n-th) visible text input.\n- A new command (`<a-f>`) to open up multiple links at a time in new tabs.\n- Frame support.\n- More robust support for non-US keyboard layouts.\n- Numerous bug fixes.\n\n1.19 (2010-06-29)\n\n- A critical bug fix for development channel Chromium.\n- Vimium icons for the Chrome extensions panel and other places.\n\n1.18 (2010-06-22)\n\n- Vimium now runs on pages with file:/// and ftp:///\n- The Options page is now linked from the Help dialog.\n- Arrow keys and function keys can now be mapped using &lt;left&gt;, &lt;right&gt;, &lt;up&gt;,\n  &lt;down&gt;, &lt;f1&gt;, &lt;f2&gt;, etc. in the mappings interface.\n- There is a new command `goUp` (mapped to `gu` by default) that will go up one level in the URL\n  hierarchy. For example: from https://vimium.github.io/foo/bar to https://vimium.github.io/foo. At\n  the moment, `goUp` does not support command repetition.\n- Bug fixes and optimizations.\n\n1.17 (2010-04-18)\n\n- `u` now restores tabs that were closed by the mouse or with native shortcuts. Tabs are also\n  restored in their prior position.\n- New `unmapAll` command in the key mappings interface to remove all default mappings.\n- Link hints are now faster and more reliable.\n- Bug fixes.\n\n1.16 (2010-03-09)\n\n- Add support for configurable key mappings under Advanced Options.\n- A help dialog which shows all currently bound keyboard shortcuts. Type `?` to see it.\n- Bug fixes related to key stroke handling.\n\n1.15 (2010-01-31)\n\n- Make the CSS used by the link hints configurable. It's under Advanced Options.\n- Add a notification linking to the changelog when Vimium is updated in the background.\n- Link-hinting performance improvements and bug fixes.\n- `Ctrl+D` and `Ctrl+U` now scroll by 1/2 page instead of a fixed amount, to mirror Vim's behavior.\n\n1.14 (2010-01-21)\n\n- Fixed a bug introduced in 1.13 that prevented excluded URLs from being saved.\n\n1.13 (2010-01-21)\n\n- `<c-f>` and `<c-b>` are now mapped to scroll a full page up or down respectively.\n- Bug fixes related to entering insert mode when the page first loads, and when focusing Flash\n  embeds.\n- Added command listing to the Options page for easy reference.\n- `J` & `K` have reversed for tab switching: `J` goes left and `K` goes right.\n- `<c-[>` is now equivalent to `Esc`, to match the behavior of VIM.\n- `<c-e>` and `<c-y>` are now mapped to scroll down and up respectively.\n- The characters used for link hints are now configurable under Advanced Options.\n\n1.11, 1.12 (2010-01-08)\n\n- Commands `gt` & `gT` to move to the next & previous tab.\n- Command `yy` to yank (copy) the current tab's url to the clipboard.\n- Better Linux support.\n- Fix for `Shift+F` link hints.\n- `Esc` now clears the keyQueue. So, for example, hitting `g`, `Esc`, `g` will no longer scroll the\n  page.\n\n1.1 (2010-01-03)\n\n- A nicer looking settings page.\n- An exclusion list that allows you to define URL patterns for which Vimium will be disabled (e.g.\n  http\\*://mail.google.com/\\*).\n- Vimium-interpreted keystrokes are no longer sent to the page.\n- Better Windows support.\n- Various miscellaneous bug fixes and UI improvements.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.4814453125,
          "content": "# Contributing to Vimium\n\n## Reporting a bug\n\nFile the issue [here](https://github.com/philc/vimium/issues).\n\n## Contributing code\n\nYou'd like to fix a bug or implement a feature? Great! Before getting started, understand Vimium's\ndesign principles and the goals of the maintainers.\n\n### Vimium design principles\n\nWhen people first start using Vimium, it provides an incredibly powerful workflow improvement and it\nmakes them feel awesome. Surprisingly, Vimium is applicable to a huge, broad population of people,\nnot just users of Vim.\n\nIn addition to power, a secondary goal of Vimium is approachability: minimizing the barriers which\nprevent a new user from feeling awesome. Many of Vimium's users haven't used Vim before -- about 1\nin 5 Chrome Store reviews say this -- and most people have strong web browsing habits forged from\nyears of browsing. Given that, it's a great experience when Vimium feels like a natural addition to\nChrome which augments, but doesn't break, the user's current browsing habits.\n\n**Principles:**\n\n1. **Easy to understand**. Even if you're not very familiar with Vim. The Vimium video shows you all\n   you need to know to start using Vimium and feel awesome.\n2. **Reliable**. The core feature set works on most sites on the web.\n3. **Immediately useful**. Vimium doesn't require any configuration or doc-reading before it's\n   useful. Just watch the video or hit `?`. You can transition into using Vimium piecemeal; you\n   don't need to jump in whole-hog from the start.\n4. **Feels native**. Vimium doesn't drastically change the way Chrome looks or behaves.\n5. **Simple**. The core feature set isn't overwhelming. This principle is particularly vulnerable as\n   we add to Vimium, so it requires our active effort to maintain this simplicity.\n6. **Code simplicity**. Developers find the Vimium codebase relatively simple and easy to jump into.\n   This allows more people to fix bugs and implement features.\n\n### Which pull requests get merged?\n\n**Goals of the maintainers**\n\nThe maintainers of Vimium have limited bandwidth, which influences which PRs we can review and\nmerge.\n\nOur goals are generally to keep Vimium small, maintainable, and really nail the broad appeal use\ncases. This is in contrast to adding and maintaining an increasing number of complex or niche\nfeatures. We recommend those live in forked repos rather than the mainline Vimium repo.\n\nPRs we'll likely merge:\n\n- Reflect all of the Vimium design principles.\n- Are useful for lots of Vimium users.\n- Have simple implementations (straightforward code, few lines of code).\n\nPRs we likely won't:\n\n- Violate one or more of our design principles.\n- Are niche.\n- Have complex implementations -- more code than they're worth.\n\nTips for preparing a PR:\n\n- If you want to check with us first before implementing something big, open an issue proposing the\n  idea. You'll get feedback from the maintainers as to whether it's something we'll likely merge.\n- Try to keep PRs around 50 LOC or less. Bigger PRs create inertia for review.\n\nHere's the rationale behind this policy:\n\n- Vimium is a volunteer effort. To make it possible to keep the project up-to-date as the web and\n  browsers evolve, the codebase has to remain small and maintainable.\n- If the maintainers don't use a feature, and most other users don't, then the feature will likely\n  get neglected.\n- Every feature, particularly neglected ones, increase the complexity of the codebase and makes it\n  more difficult and less pleasant to work on.\n- Adding a new feature is only part of the work. Once it's added, a feature must be maintained\n  forever.\n- Vimium is a project which suffers from the\n  [stadium model of open source](https://github.com/philc/book-notes/blob/master/engineering/working%20in%20public%20-%20nadia%20eghbal.md#the-structure-of-an-open-source-project-chap-2):\n  there are many users but unfortunately few maintainers. As a result, there is bandwidth to\n  maintain only a limited number of features in the main repo.\n\n### Installing From Source\n\nVimium is written in Javascript. To install Vimium from source:\n\n**On Chrome/Chromium:**\n\n1. Navigate to `chrome://extensions`\n1. Toggle into Developer Mode\n1. Click on \"Load Unpacked Extension...\"\n1. Select the Vimium directory you've cloned from Github.\n\n**On Firefox:**\n\nFirefox needs a modified version of the manifest.json that's used for Chrome. To generate this, run\n\n`./make.js write-firefox-manifest`\n\nAfter that:\n\n1. Open Firefox\n1. Enter \"about:debugging\" in the URL bar\n1. Click \"This Firefox\" on the left side\n1. Click \"Load Temporary Add-on\"\n1. Open the Vimium directory you've cloned from Github, and select any file inside.\n\n### Running the tests\n\nOur tests use [shoulda.js](https://github.com/philc/shoulda.js) and\n[Puppeteer](https://github.com/puppeteer/puppeteer). To run the tests:\n\n1. Install [Deno](https://deno.land/) if you don't have it already.\n2. `deno run -A npm:puppeteer browsers install chrome` to install puppeteer\n1. `./make.js test` to build the code and run the tests.\n\n### Coding Style\n\n- Run `deno fmt` at the root of the Vimium project to format your code.\n- We generally follow the recommendations from the\n  [Airbnb Javascript style guide](https://github.com/airbnb/javascript).\n- We wrap lines at 100 characters.\n- When writing comments, uppercase the first letter of your sentence, and put a period at the end.\n- We're currently using JavaScript language features from ES2018 or earlier. If we desire to use\n  something introduced in a later version of JavaScript, we need to remember to update the minimum\n  Chrome and Firefox versions required.\n"
        },
        {
          "name": "CREDITS",
          "type": "blob",
          "size": 2.1640625,
          "content": "Authors & Maintainers:\n  Ilya Sukhar <ilya.sukhar@gmail.com> (github: ilya)\n  Phil Crosby <phil.crosby@gmail.com> (github: philc)\n\nContributors:\n  acrollet\n  Adam Lindberg <hello@alind.io> (github: eproxus)\n  akhilman\n  Ângelo Otávio Nuffer Nunes <angelonuffer@gmail.com> (github: angelonuffer)\n  Bernardo B. Marques <bernardo.fire@gmail.com> (github: bernardofire)\n  Bill Casarin <jb@jb55.com> (github: jb55)\n  Bill Mill (github: llimllib)\n  Branden Rolston <brolston@gmail.com> (github: branden)\n  Caleb Spare <cespare@gmail.com> (github: cespare)\n  Carl Helmertz <helmertz@gmail.com> (github: chelmertz)\n  Christian Stefanescu (github: stchris)\n  ConradIrwin\n  Daniel MacDougall <dmacdougall@gmail.com> (github: dmacdougall)\n  drizzd\n  gpurkins\n  hogelog\n  int3\n  Johannes Emerich (github: knuton)\n  Julian Naydichev <rublind@gmail.com> (github: naydichev)\n  Justin Blake <justin@hentzia.com> (github: blaix)\n  Knorkebrot\n  lack\n  markstos\n  Matthew Cline <matt@nightrealms.com>\n  Matt Garriott (github: mgarriott)\n  Matthew Ryan (github: mrmr1993)\n  Michael Hauser-Raspe (github: mijoharas)\n  Murph (github: pandeiro)\n  Niklas Baumstark <niklas.baumstark@gmail.com> (github: niklasb)\n  rodimius\n  Stephen Blott (github: smblott-github)\n  Svein-Erik Larsen <feinom@gmail.com> (github: feinom)\n  Tim Morgan <tim@timmorgan.org> (github: seven1m)\n  tsigo\n  R.T. Lechow <rtlechow@gmail.com> (github: rtlechow)\n  Wang Ning <daning106@gmail.com> (github:daning)\n  Werner Laurensse (github: ab3)\n  Timo Sand <timo.j.sand@gmail.com> (github: deiga)\n  Shiyong Chen <billbill290@gmail.com> (github: UncleBill)\n  Utkarsh Upadhyay <musically.ut@gmail.com) (github: musically-ut)\n  Michael Salihi <admin@prestance-informatique.fr> (github: PrestanceDesign)\n  Dahan Gong <gdh1995@qq.com> (github: gdh1995)\n  Scott Pinkelman <scott@scottpinkelman.com> (github: sco-tt)\n  Darryl Pogue <darryl@dpogue.ca> (github: dpogue)\n  tobimensch\n  Ramiro Araujo <rama.araujo@gmail.com> (github: ramiroaraujo)\n  Daniel Skogly <daniel@wishy.gift> (github: poacher2k)\n  Matt Wanchap <matt@wanchap.com> (github: mwanchap)\n  Leo Solidum <leo.g.solidum@gmail.com> (github: leosolid)\n\nFeel free to add real names in addition to GitHub usernames.\n"
        },
        {
          "name": "MIT-LICENSE.txt",
          "type": "blob",
          "size": 1.04296875,
          "content": "Copyright (c) 2010 Phil Crosby, Ilya Sukhar.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3017578125,
          "content": "# Vimium - The Hacker's Browser\n\nVimium is a browser extension that provides keyboard-based navigation and control of the web in the\nspirit of the Vim editor.\n\n**Installation instructions:**\n\n- Chrome:\n  [Chrome web store](https://chrome.google.com/extensions/detail/dbepggeogbaibhgnhhndojpepiihcmeb)\n- Edge:\n  [Edge Add-ons](https://microsoftedge.microsoft.com/addons/detail/vimium/djmieaghokpkpjfbpelnlkfgfjapaopa)\n- Firefox: [Firefox Add-ons](https://addons.mozilla.org/en-GB/firefox/addon/vimium-ff/)\n\nTo install from source, see [here](CONTRIBUTING.md#installing-from-source).\n\nVimium's Options page can be reached via a link on the help dialog (type `?`) or via the button next\nto Vimium on the extension pages of Chrome and Edge (`chrome://extensions`), or Firefox\n(`about:addons`).\n\n## Keyboard Bindings\n\nModifier keys are specified as `<c-x>`, `<m-x>`, and `<a-x>` for ctrl+x, meta+x, and alt+x\nrespectively. For shift+x and ctrl-shift-x, just type `X` and `<c-X>`. See the next section for how\nto customize these bindings.\n\nOnce you have Vimium installed, you can see this list of key bindings at any time by typing `?`.\n\nNavigating the current page:\n\n    ?       show the help dialog for a list of all available keys\n    h       scroll left\n    j       scroll down\n    k       scroll up\n    l       scroll right\n    gg      scroll to top of the page\n    G       scroll to bottom of the page\n    d       scroll down half a page\n    u       scroll up half a page\n    f       open a link in the current tab\n    F       open a link in a new tab\n    r       reload\n    gs      view source\n    i       enter insert mode -- all commands will be ignored until you hit Esc to exit\n    yy      copy the current url to the clipboard\n    yf      copy a link url to the clipboard\n    gf      cycle forward to the next frame\n    gF      focus the main/top frame\n\nNavigating to new pages:\n\n    o       Open URL, bookmark, or history entry\n    O       Open URL, bookmark, history entry in a new tab\n    b       Open bookmark\n    B       Open bookmark in a new tab\n\nUsing find:\n\n    /       enter find mode\n              -- type your search query and hit enter to search, or Esc to cancel\n    n       cycle forward to the next find match\n    N       cycle backward to the previous find match\n\nFor advanced usage, see [regular expressions](https://github.com/philc/vimium/wiki/Find-Mode) on the\nwiki.\n\nNavigating your history:\n\n    H       go back in history\n    L       go forward in history\n\nManipulating tabs:\n\n    J, gT   go one tab left\n    K, gt   go one tab right\n    g0      go to the first tab. Use ng0 to go to n-th tab\n    g$      go to the last tab\n    ^       visit the previously-visited tab\n    t       create tab\n    yt      duplicate current tab\n    x       close current tab\n    X       restore closed tab (i.e. unwind the 'x' command)\n    T       search through your open tabs\n    W       move current tab to new window\n    <a-p>   pin/unpin current tab\n\nUsing marks:\n\n    ma, mA  set local mark \"a\" (global mark \"A\")\n    `a, `A  jump to local mark \"a\" (global mark \"A\")\n    ``      jump back to the position before the previous jump\n              -- that is, before the previous gg, G, n, N, / or `a\n\nAdditional advanced browsing commands:\n\n    ]], [[  Follow the link labeled 'next' or '>' ('previous' or '<')\n              - helpful for browsing paginated sites\n    <a-f>   open multiple links in a new tab\n    gi      focus the first (or n-th) text input box on the page. Use <tab> to cycle through options.\n    gu      go up one level in the URL hierarchy\n    gU      go up to root of the URL hierarchy\n    ge      edit the current URL\n    gE      edit the current URL and open in a new tab\n    zH      scroll all the way left\n    zL      scroll all the way right\n    v       enter visual mode; use p/P to paste-and-go, use y to yank\n    V       enter visual line mode\n    R       Hard reload the page (skip the cache)\n\nVimium supports command repetition so, for example, hitting `5t` will open 5 tabs in rapid\nsuccession. `<Esc>` (or `<c-[>`) will clear any partial commands in the queue and will also exit\ninsert and find modes.\n\nThere are some advanced commands which aren't documented here; refer to the help dialog (type `?`)\nfor a full list.\n\n## Custom Key Mappings\n\nYou may remap or unmap any of the default key bindings in the \"Custom key mappings\" on the options\npage.\n\nEnter one of the following key mapping commands per line:\n\n- `map key command`: Maps a key to a Vimium command. Overrides Chrome's default behavior (if any).\n- `unmap key`: Unmaps a key and restores Chrome's default behavior (if any).\n- `unmapAll`: Unmaps all bindings. This is useful if you want to completely wipe Vimium's defaults\n  and start from scratch with your own setup.\n\nExamples:\n\n- `map <c-d> scrollPageDown` maps ctrl+d to scrolling the page down. Chrome's default behavior of\n  bringing up a bookmark dialog is suppressed.\n- `map r reload` maps the r key to reloading the page.\n- `unmap <c-d>` removes any mapping for ctrl+d and restores Chrome's default behavior.\n- `unmap r` removes any mapping for the r key.\n\nAvailable Vimium commands can be found via the \"Show available commands\" link near the key mapping\nbox on the options page. The command name appears to the right of the description in parenthesis.\n\nYou can add comments to key mappings by starting a line with `\"` or `#`.\n\nThe following special keys are available for mapping:\n\n- `<c-*>`, `<a-*>`, `<s-*>`, `<m-*>` for ctrl, alt, shift, and meta (command on Mac) respectively\n  with any key. Replace `*` with the key of choice.\n- `<left>`, `<right>`, `<up>`, `<down>` for the arrow keys.\n- `<f1>` through `<f12>` for the function keys.\n- `<space>` for the space key.\n- `<tab>`, `<enter>`, `<delete>`, `<backspace>`, `<insert>`, `<home>` and `<end>` for the\n  corresponding non-printable keys.\n\nShifts are automatically detected so, for example, `<c-&>` corresponds to ctrl+shift+7 on an English\nkeyboard.\n\n## More documentation\n\nMany of the more advanced or involved features are documented on\n[Vimium's GitHub wiki](https://github.com/philc/vimium/wiki). Also see the\n[FAQ](https://github.com/philc/vimium/wiki/FAQ).\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details.\n\n## Release Notes\n\nSee [CHANGELOG](CHANGELOG.md) for the major changes in each release.\n\n## License\n\nCopyright (c) Phil Crosby, Ilya Sukhar. See [MIT-LICENSE.txt](MIT-LICENSE.txt) for details.\n"
        },
        {
          "name": "background_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "content_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "deno.json",
          "type": "blob",
          "size": 0.3115234375,
          "content": "{\n  \"fmt\": {\n    \"lineWidth\": 100\n  },\n  \"imports\": {\n    \"@b-fuze/deno-dom\": \"jsr:@b-fuze/deno-dom@^0.1.48\",\n    \"@philc/shoulda\": \"jsr:@philc/shoulda@^2.0.0\",\n    \"@std/fs\": \"jsr:@std/fs@^1.0.8\",\n    \"@std/http\": \"jsr:@std/http@^1.0.12\",\n    \"@std/path\": \"jsr:@std/path@^1.0.8\",\n    \"json5\": \"npm:json5@^2.2.3\"\n  }\n}\n"
        },
        {
          "name": "deno.lock",
          "type": "blob",
          "size": 24.8671875,
          "content": "{\n  \"version\": \"4\",\n  \"specifiers\": {\n    \"jsr:@b-fuze/deno-dom@~0.1.48\": \"0.1.48\",\n    \"jsr:@philc/shoulda@2\": \"2.0.0\",\n    \"jsr:@std/cli@^1.0.8\": \"1.0.9\",\n    \"jsr:@std/encoding@^1.0.5\": \"1.0.6\",\n    \"jsr:@std/fmt@^1.0.3\": \"1.0.3\",\n    \"jsr:@std/fs@^1.0.8\": \"1.0.8\",\n    \"jsr:@std/html@^1.0.3\": \"1.0.3\",\n    \"jsr:@std/http@^1.0.12\": \"1.0.12\",\n    \"jsr:@std/media-types@^1.1.0\": \"1.1.0\",\n    \"jsr:@std/net@^1.0.4\": \"1.0.4\",\n    \"jsr:@std/path@^1.0.8\": \"1.0.8\",\n    \"jsr:@std/streams@^1.0.8\": \"1.0.8\",\n    \"npm:json5@*\": \"2.2.3\",\n    \"npm:puppeteer@*\": \"23.11.1_devtools-protocol@0.0.1367902\"\n  },\n  \"jsr\": {\n    \"@b-fuze/deno-dom@0.1.48\": {\n      \"integrity\": \"bf5b591aef2e9e9c59adfcbb93a9ecd45bab5b7c8263625beafa5c8f1662e7da\"\n    },\n    \"@philc/shoulda@2.0.0\": {\n      \"integrity\": \"2bc8b2eb9e5dee41fcd77760b009d3b3527980edf5b29cbf9f25443489a5faa9\"\n    },\n    \"@std/cli@1.0.9\": {\n      \"integrity\": \"557e5865af000efbf3f737dcfea5b8ab86453594f4a9cd8d08c9fa83d8e3f3bc\"\n    },\n    \"@std/encoding@1.0.6\": {\n      \"integrity\": \"ca87122c196e8831737d9547acf001766618e78cd8c33920776c7f5885546069\"\n    },\n    \"@std/fmt@1.0.3\": {\n      \"integrity\": \"97765c16aa32245ff4e2204ecf7d8562496a3cb8592340a80e7e554e0bb9149f\"\n    },\n    \"@std/fs@1.0.8\": {\n      \"integrity\": \"161c721b6f9400b8100a851b6f4061431c538b204bb76c501d02c508995cffe0\",\n      \"dependencies\": [\n        \"jsr:@std/path\"\n      ]\n    },\n    \"@std/html@1.0.3\": {\n      \"integrity\": \"7a0ac35e050431fb49d44e61c8b8aac1ebd55937e0dc9ec6409aa4bab39a7988\"\n    },\n    \"@std/http@1.0.12\": {\n      \"integrity\": \"85246d8bfe9c8e2538518725b158bdc31f616e0869255f4a8d9e3de919cab2aa\",\n      \"dependencies\": [\n        \"jsr:@std/cli\",\n        \"jsr:@std/encoding\",\n        \"jsr:@std/fmt\",\n        \"jsr:@std/html\",\n        \"jsr:@std/media-types\",\n        \"jsr:@std/net\",\n        \"jsr:@std/path\",\n        \"jsr:@std/streams\"\n      ]\n    },\n    \"@std/media-types@1.1.0\": {\n      \"integrity\": \"c9d093f0c05c3512932b330e3cc1fe1d627b301db33a4c2c2185c02471d6eaa4\"\n    },\n    \"@std/net@1.0.4\": {\n      \"integrity\": \"2f403b455ebbccf83d8a027d29c5a9e3a2452fea39bb2da7f2c04af09c8bc852\"\n    },\n    \"@std/path@1.0.8\": {\n      \"integrity\": \"548fa456bb6a04d3c1a1e7477986b6cffbce95102d0bb447c67c4ee70e0364be\"\n    },\n    \"@std/streams@1.0.8\": {\n      \"integrity\": \"b41332d93d2cf6a82fe4ac2153b930adf1a859392931e2a19d9fabfb6f154fb3\"\n    }\n  },\n  \"npm\": {\n    \"@babel/code-frame@7.26.2\": {\n      \"integrity\": \"sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==\",\n      \"dependencies\": [\n        \"@babel/helper-validator-identifier\",\n        \"js-tokens\",\n        \"picocolors\"\n      ]\n    },\n    \"@babel/helper-validator-identifier@7.25.9\": {\n      \"integrity\": \"sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==\"\n    },\n    \"@puppeteer/browsers@2.6.1\": {\n      \"integrity\": \"sha512-aBSREisdsGH890S2rQqK82qmQYU3uFpSH8wcZWHgHzl3LfzsxAKbLNiAG9mO8v1Y0UICBeClICxPJvyr0rcuxg==\",\n      \"dependencies\": [\n        \"debug\",\n        \"extract-zip\",\n        \"progress\",\n        \"proxy-agent\",\n        \"semver\",\n        \"tar-fs\",\n        \"unbzip2-stream\",\n        \"yargs\"\n      ]\n    },\n    \"@tootallnate/quickjs-emscripten@0.23.0\": {\n      \"integrity\": \"sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==\"\n    },\n    \"@types/node@22.5.4\": {\n      \"integrity\": \"sha512-FDuKUJQm/ju9fT/SeX/6+gBzoPzlVCzfzmGkwKvRHQVxi4BntVbyIwf6a4Xn62mrvndLiml6z/UBXIdEVjQLXg==\",\n      \"dependencies\": [\n        \"undici-types\"\n      ]\n    },\n    \"@types/yauzl@2.10.3\": {\n      \"integrity\": \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\",\n      \"dependencies\": [\n        \"@types/node\"\n      ]\n    },\n    \"agent-base@7.1.3\": {\n      \"integrity\": \"sha512-jRR5wdylq8CkOe6hei19GGZnxM6rBGwFl3Bg0YItGDimvjGtAvdZk4Pu6Cl4u4Igsws4a1fd1Vq3ezrhn4KmFw==\"\n    },\n    \"ansi-regex@5.0.1\": {\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"\n    },\n    \"ansi-styles@4.3.0\": {\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dependencies\": [\n        \"color-convert\"\n      ]\n    },\n    \"argparse@2.0.1\": {\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"\n    },\n    \"ast-types@0.13.4\": {\n      \"integrity\": \"sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==\",\n      \"dependencies\": [\n        \"tslib\"\n      ]\n    },\n    \"b4a@1.6.7\": {\n      \"integrity\": \"sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==\"\n    },\n    \"bare-events@2.5.1\": {\n      \"integrity\": \"sha512-Bw2PgKSrZ3uCuSV9WQ998c/GTJTd+9bWj97n7aDQMP8dP/exAZQlJeswPty0ISy+HZD+9Ex+C7CCnc9Q5QJFmQ==\"\n    },\n    \"bare-fs@2.3.5\": {\n      \"integrity\": \"sha512-SlE9eTxifPDJrT6YgemQ1WGFleevzwY+XAP1Xqgl56HtcrisC2CHCZ2tq6dBpcH2TnNxwUEUGhweo+lrQtYuiw==\",\n      \"dependencies\": [\n        \"bare-events\",\n        \"bare-path\",\n        \"bare-stream\"\n      ]\n    },\n    \"bare-os@2.4.4\": {\n      \"integrity\": \"sha512-z3UiI2yi1mK0sXeRdc4O1Kk8aOa/e+FNWZcTiPB/dfTWyLypuE99LibgRaQki914Jq//yAWylcAt+mknKdixRQ==\"\n    },\n    \"bare-path@2.1.3\": {\n      \"integrity\": \"sha512-lh/eITfU8hrj9Ru5quUp0Io1kJWIk1bTjzo7JH1P5dWmQ2EL4hFUlfI8FonAhSlgIfhn63p84CDY/x+PisgcXA==\",\n      \"dependencies\": [\n        \"bare-os\"\n      ]\n    },\n    \"bare-stream@2.6.1\": {\n      \"integrity\": \"sha512-eVZbtKM+4uehzrsj49KtCy3Pbg7kO1pJ3SKZ1SFrIH/0pnj9scuGGgUlNDf/7qS8WKtGdiJY5Kyhs/ivYPTB/g==\",\n      \"dependencies\": [\n        \"streamx\"\n      ]\n    },\n    \"base64-js@1.5.1\": {\n      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\"\n    },\n    \"basic-ftp@5.0.5\": {\n      \"integrity\": \"sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==\"\n    },\n    \"buffer-crc32@0.2.13\": {\n      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\"\n    },\n    \"buffer@5.7.1\": {\n      \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\",\n      \"dependencies\": [\n        \"base64-js\",\n        \"ieee754\"\n      ]\n    },\n    \"callsites@3.1.0\": {\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\"\n    },\n    \"chromium-bidi@0.11.0_devtools-protocol@0.0.1367902\": {\n      \"integrity\": \"sha512-6CJWHkNRoyZyjV9Rwv2lYONZf1Xm0IuDyNq97nwSsxxP3wf5Bwy15K5rOvVKMtJ127jJBmxFUanSAOjgFRxgrA==\",\n      \"dependencies\": [\n        \"devtools-protocol\",\n        \"mitt\",\n        \"zod\"\n      ]\n    },\n    \"cliui@8.0.1\": {\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dependencies\": [\n        \"string-width\",\n        \"strip-ansi\",\n        \"wrap-ansi\"\n      ]\n    },\n    \"color-convert@2.0.1\": {\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dependencies\": [\n        \"color-name\"\n      ]\n    },\n    \"color-name@1.1.4\": {\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"\n    },\n    \"cosmiconfig@9.0.0\": {\n      \"integrity\": \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\",\n      \"dependencies\": [\n        \"env-paths\",\n        \"import-fresh\",\n        \"js-yaml\",\n        \"parse-json\"\n      ]\n    },\n    \"data-uri-to-buffer@6.0.2\": {\n      \"integrity\": \"sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==\"\n    },\n    \"debug@4.4.0\": {\n      \"integrity\": \"sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==\",\n      \"dependencies\": [\n        \"ms\"\n      ]\n    },\n    \"degenerator@5.0.1\": {\n      \"integrity\": \"sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==\",\n      \"dependencies\": [\n        \"ast-types\",\n        \"escodegen\",\n        \"esprima\"\n      ]\n    },\n    \"devtools-protocol@0.0.1367902\": {\n      \"integrity\": \"sha512-XxtPuC3PGakY6PD7dG66/o8KwJ/LkH2/EKe19Dcw58w53dv4/vSQEkn/SzuyhHE2q4zPgCkxQBxus3VV4ql+Pg==\"\n    },\n    \"emoji-regex@8.0.0\": {\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"\n    },\n    \"end-of-stream@1.4.4\": {\n      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\",\n      \"dependencies\": [\n        \"once\"\n      ]\n    },\n    \"env-paths@2.2.1\": {\n      \"integrity\": \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\"\n    },\n    \"error-ex@1.3.2\": {\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dependencies\": [\n        \"is-arrayish\"\n      ]\n    },\n    \"escalade@3.2.0\": {\n      \"integrity\": \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\"\n    },\n    \"escodegen@2.1.0\": {\n      \"integrity\": \"sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==\",\n      \"dependencies\": [\n        \"esprima\",\n        \"estraverse\",\n        \"esutils\",\n        \"source-map\"\n      ]\n    },\n    \"esprima@4.0.1\": {\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\"\n    },\n    \"estraverse@5.3.0\": {\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\"\n    },\n    \"esutils@2.0.3\": {\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\"\n    },\n    \"extract-zip@2.0.1\": {\n      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\",\n      \"dependencies\": [\n        \"@types/yauzl\",\n        \"debug\",\n        \"get-stream\",\n        \"yauzl\"\n      ]\n    },\n    \"fast-fifo@1.3.2\": {\n      \"integrity\": \"sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==\"\n    },\n    \"fd-slicer@1.1.0\": {\n      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\",\n      \"dependencies\": [\n        \"pend\"\n      ]\n    },\n    \"get-caller-file@2.0.5\": {\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\"\n    },\n    \"get-stream@5.2.0\": {\n      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\",\n      \"dependencies\": [\n        \"pump\"\n      ]\n    },\n    \"get-uri@6.0.4\": {\n      \"integrity\": \"sha512-E1b1lFFLvLgak2whF2xDBcOy6NLVGZBqqjJjsIhvopKfWWEi64pLVTWWehV8KlLerZkfNTA95sTe2OdJKm1OzQ==\",\n      \"dependencies\": [\n        \"basic-ftp\",\n        \"data-uri-to-buffer\",\n        \"debug\"\n      ]\n    },\n    \"http-proxy-agent@7.0.2\": {\n      \"integrity\": \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\",\n      \"dependencies\": [\n        \"agent-base\",\n        \"debug\"\n      ]\n    },\n    \"https-proxy-agent@7.0.6\": {\n      \"integrity\": \"sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==\",\n      \"dependencies\": [\n        \"agent-base\",\n        \"debug\"\n      ]\n    },\n    \"ieee754@1.2.1\": {\n      \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\"\n    },\n    \"import-fresh@3.3.0\": {\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dependencies\": [\n        \"parent-module\",\n        \"resolve-from\"\n      ]\n    },\n    \"ip-address@9.0.5\": {\n      \"integrity\": \"sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==\",\n      \"dependencies\": [\n        \"jsbn\",\n        \"sprintf-js\"\n      ]\n    },\n    \"is-arrayish@0.2.1\": {\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\"\n    },\n    \"is-fullwidth-code-point@3.0.0\": {\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\"\n    },\n    \"js-tokens@4.0.0\": {\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n    },\n    \"js-yaml@4.1.0\": {\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dependencies\": [\n        \"argparse\"\n      ]\n    },\n    \"jsbn@1.1.0\": {\n      \"integrity\": \"sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==\"\n    },\n    \"json-parse-even-better-errors@2.3.1\": {\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\"\n    },\n    \"json5@2.2.3\": {\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\"\n    },\n    \"lines-and-columns@1.2.4\": {\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"\n    },\n    \"lru-cache@7.18.3\": {\n      \"integrity\": \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\"\n    },\n    \"mitt@3.0.1\": {\n      \"integrity\": \"sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==\"\n    },\n    \"ms@2.1.3\": {\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\n    },\n    \"netmask@2.0.2\": {\n      \"integrity\": \"sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==\"\n    },\n    \"once@1.4.0\": {\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dependencies\": [\n        \"wrappy\"\n      ]\n    },\n    \"pac-proxy-agent@7.1.0\": {\n      \"integrity\": \"sha512-Z5FnLVVZSnX7WjBg0mhDtydeRZ1xMcATZThjySQUHqr+0ksP8kqaw23fNKkaaN/Z8gwLUs/W7xdl0I75eP2Xyw==\",\n      \"dependencies\": [\n        \"@tootallnate/quickjs-emscripten\",\n        \"agent-base\",\n        \"debug\",\n        \"get-uri\",\n        \"http-proxy-agent\",\n        \"https-proxy-agent\",\n        \"pac-resolver\",\n        \"socks-proxy-agent\"\n      ]\n    },\n    \"pac-resolver@7.0.1\": {\n      \"integrity\": \"sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==\",\n      \"dependencies\": [\n        \"degenerator\",\n        \"netmask\"\n      ]\n    },\n    \"parent-module@1.0.1\": {\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dependencies\": [\n        \"callsites\"\n      ]\n    },\n    \"parse-json@5.2.0\": {\n      \"integrity\": \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\",\n      \"dependencies\": [\n        \"@babel/code-frame\",\n        \"error-ex\",\n        \"json-parse-even-better-errors\",\n        \"lines-and-columns\"\n      ]\n    },\n    \"pend@1.2.0\": {\n      \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\"\n    },\n    \"picocolors@1.1.1\": {\n      \"integrity\": \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"\n    },\n    \"progress@2.0.3\": {\n      \"integrity\": \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\"\n    },\n    \"proxy-agent@6.5.0\": {\n      \"integrity\": \"sha512-TmatMXdr2KlRiA2CyDu8GqR8EjahTG3aY3nXjdzFyoZbmB8hrBsTyMezhULIXKnC0jpfjlmiZ3+EaCzoInSu/A==\",\n      \"dependencies\": [\n        \"agent-base\",\n        \"debug\",\n        \"http-proxy-agent\",\n        \"https-proxy-agent\",\n        \"lru-cache\",\n        \"pac-proxy-agent\",\n        \"proxy-from-env\",\n        \"socks-proxy-agent\"\n      ]\n    },\n    \"proxy-from-env@1.1.0\": {\n      \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"\n    },\n    \"pump@3.0.2\": {\n      \"integrity\": \"sha512-tUPXtzlGM8FE3P0ZL6DVs/3P58k9nk8/jZeQCurTJylQA8qFYzHFfhBJkuqyE0FifOsQ0uKWekiZ5g8wtr28cw==\",\n      \"dependencies\": [\n        \"end-of-stream\",\n        \"once\"\n      ]\n    },\n    \"puppeteer-core@23.11.1_devtools-protocol@0.0.1367902\": {\n      \"integrity\": \"sha512-3HZ2/7hdDKZvZQ7dhhITOUg4/wOrDRjyK2ZBllRB0ZCOi9u0cwq1ACHDjBB+nX+7+kltHjQvBRdeY7+W0T+7Gg==\",\n      \"dependencies\": [\n        \"@puppeteer/browsers\",\n        \"chromium-bidi\",\n        \"debug\",\n        \"devtools-protocol\",\n        \"typed-query-selector\",\n        \"ws\"\n      ]\n    },\n    \"puppeteer@23.11.1_devtools-protocol@0.0.1367902\": {\n      \"integrity\": \"sha512-53uIX3KR5en8l7Vd8n5DUv90Ae9QDQsyIthaUFVzwV6yU750RjqRznEtNMBT20VthqAdemnJN+hxVdmMHKt7Zw==\",\n      \"dependencies\": [\n        \"@puppeteer/browsers\",\n        \"chromium-bidi\",\n        \"cosmiconfig\",\n        \"devtools-protocol\",\n        \"puppeteer-core\",\n        \"typed-query-selector\"\n      ]\n    },\n    \"queue-tick@1.0.1\": {\n      \"integrity\": \"sha512-kJt5qhMxoszgU/62PLP1CJytzd2NKetjSRnyuj31fDd3Rlcz3fzlFdFLD1SItunPwyqEOkca6GbV612BWfaBag==\"\n    },\n    \"require-directory@2.1.1\": {\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\"\n    },\n    \"resolve-from@4.0.0\": {\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\"\n    },\n    \"semver@7.6.3\": {\n      \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\"\n    },\n    \"smart-buffer@4.2.0\": {\n      \"integrity\": \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\"\n    },\n    \"socks-proxy-agent@8.0.5\": {\n      \"integrity\": \"sha512-HehCEsotFqbPW9sJ8WVYB6UbmIMv7kUUORIF2Nncq4VQvBfNBLibW9YZR5dlYCSUhwcD628pRllm7n+E+YTzJw==\",\n      \"dependencies\": [\n        \"agent-base\",\n        \"debug\",\n        \"socks\"\n      ]\n    },\n    \"socks@2.8.3\": {\n      \"integrity\": \"sha512-l5x7VUUWbjVFbafGLxPWkYsHIhEvmF85tbIeFZWc8ZPtoMyybuEhL7Jye/ooC4/d48FgOjSJXgsF/AJPYCW8Zw==\",\n      \"dependencies\": [\n        \"ip-address\",\n        \"smart-buffer\"\n      ]\n    },\n    \"source-map@0.6.1\": {\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"\n    },\n    \"sprintf-js@1.1.3\": {\n      \"integrity\": \"sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==\"\n    },\n    \"streamx@2.21.1\": {\n      \"integrity\": \"sha512-PhP9wUnFLa+91CPy3N6tiQsK+gnYyUNuk15S3YG/zjYE7RuPeCjJngqnzpC31ow0lzBHQ+QGO4cNJnd0djYUsw==\",\n      \"dependencies\": [\n        \"bare-events\",\n        \"fast-fifo\",\n        \"queue-tick\",\n        \"text-decoder\"\n      ]\n    },\n    \"string-width@4.2.3\": {\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dependencies\": [\n        \"emoji-regex\",\n        \"is-fullwidth-code-point\",\n        \"strip-ansi\"\n      ]\n    },\n    \"strip-ansi@6.0.1\": {\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dependencies\": [\n        \"ansi-regex\"\n      ]\n    },\n    \"tar-fs@3.0.6\": {\n      \"integrity\": \"sha512-iokBDQQkUyeXhgPYaZxmczGPhnhXZ0CmrqI+MOb/WFGS9DW5wnfrLgtjUJBvz50vQ3qfRwJ62QVoCFu8mPVu5w==\",\n      \"dependencies\": [\n        \"bare-fs\",\n        \"bare-path\",\n        \"pump\",\n        \"tar-stream\"\n      ]\n    },\n    \"tar-stream@3.1.7\": {\n      \"integrity\": \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\",\n      \"dependencies\": [\n        \"b4a\",\n        \"fast-fifo\",\n        \"streamx\"\n      ]\n    },\n    \"text-decoder@1.2.3\": {\n      \"integrity\": \"sha512-3/o9z3X0X0fTupwsYvR03pJ/DjWuqqrfwBgTQzdWDiQSm9KitAyz/9WqsT2JQW7KV2m+bC2ol/zqpW37NHxLaA==\",\n      \"dependencies\": [\n        \"b4a\"\n      ]\n    },\n    \"through@2.3.8\": {\n      \"integrity\": \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\"\n    },\n    \"tslib@2.8.1\": {\n      \"integrity\": \"sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==\"\n    },\n    \"typed-query-selector@2.12.0\": {\n      \"integrity\": \"sha512-SbklCd1F0EiZOyPiW192rrHZzZ5sBijB6xM+cpmrwDqObvdtunOHHIk9fCGsoK5JVIYXoyEp4iEdE3upFH3PAg==\"\n    },\n    \"unbzip2-stream@1.4.3\": {\n      \"integrity\": \"sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==\",\n      \"dependencies\": [\n        \"buffer\",\n        \"through\"\n      ]\n    },\n    \"undici-types@6.19.8\": {\n      \"integrity\": \"sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==\"\n    },\n    \"wrap-ansi@7.0.0\": {\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dependencies\": [\n        \"ansi-styles\",\n        \"string-width\",\n        \"strip-ansi\"\n      ]\n    },\n    \"wrappy@1.0.2\": {\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\"\n    },\n    \"ws@8.18.0\": {\n      \"integrity\": \"sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==\"\n    },\n    \"y18n@5.0.8\": {\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\"\n    },\n    \"yargs-parser@21.1.1\": {\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\"\n    },\n    \"yargs@17.7.2\": {\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dependencies\": [\n        \"cliui\",\n        \"escalade\",\n        \"get-caller-file\",\n        \"require-directory\",\n        \"string-width\",\n        \"y18n\",\n        \"yargs-parser\"\n      ]\n    },\n    \"yauzl@2.10.0\": {\n      \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\",\n      \"dependencies\": [\n        \"buffer-crc32\",\n        \"fd-slicer\"\n      ]\n    },\n    \"zod@3.23.8\": {\n      \"integrity\": \"sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==\"\n    }\n  },\n  \"remote\": {\n    \"https://deno.land/std@0.123.0/_util/assert.ts\": \"2f868145a042a11d5ad0a3c748dcf580add8a0dbc0e876eaa0026303a5488f58\",\n    \"https://deno.land/std@0.123.0/_util/os.ts\": \"dfb186cc4e968c770ab6cc3288bd65f4871be03b93beecae57d657232ecffcac\",\n    \"https://deno.land/std@0.123.0/fmt/colors.ts\": \"8368ddf2d48dfe413ffd04cdbb7ae6a1009cf0dccc9c7ff1d76259d9c61a0621\",\n    \"https://deno.land/std@0.123.0/fs/walk.ts\": \"705c210c736978731bd50bea0880bcf41bac48d29bca417c2534b1835e455756\",\n    \"https://deno.land/std@0.123.0/path/_constants.ts\": \"1247fee4a79b70c89f23499691ef169b41b6ccf01887a0abd131009c5581b853\",\n    \"https://deno.land/std@0.123.0/path/_interface.ts\": \"1fa73b02aaa24867e481a48492b44f2598cd9dfa513c7b34001437007d3642e4\",\n    \"https://deno.land/std@0.123.0/path/_util.ts\": \"2e06a3b9e79beaf62687196bd4b60a4c391d862cfa007a20fc3a39f778ba073b\",\n    \"https://deno.land/std@0.123.0/path/common.ts\": \"f41a38a0719a1e85aa11c6ba3bea5e37c15dd009d705bd8873f94c833568cbc4\",\n    \"https://deno.land/std@0.123.0/path/glob.ts\": \"7bf2349e818e332a830f3d8874c3f45dd7580b6c742ed50dbf6282d84ab18405\",\n    \"https://deno.land/std@0.123.0/path/mod.ts\": \"4465dc494f271b02569edbb4a18d727063b5dbd6ed84283ff906260970a15d12\",\n    \"https://deno.land/std@0.123.0/path/posix.ts\": \"34349174b9cd121625a2810837a82dd8b986bbaaad5ade690d1de75bbb4555b2\",\n    \"https://deno.land/std@0.123.0/path/separator.ts\": \"8fdcf289b1b76fd726a508f57d3370ca029ae6976fcde5044007f062e643ff1c\",\n    \"https://deno.land/std@0.123.0/path/win32.ts\": \"11549e8c6df8307a8efcfa47ad7b2a75da743eac7d4c89c9723a944661c8bd2e\",\n    \"https://deno.land/x/drake@v1.5.1/lib/deps.ts\": \"5df9314641116dcecb7302f6044826b6be1f3c852244356b801f629289fb578b\",\n    \"https://deno.land/x/drake@v1.5.1/lib/env.ts\": \"da778937e58d4a6e552d5f3cea11a3527dcf63fa1f18a756bed7611c25a7060e\",\n    \"https://deno.land/x/drake@v1.5.1/lib/graph.ts\": \"f953e904d4bdcbf3783bdf687cb11ca449003395698a0dea3f2fcedcd2a3fe39\",\n    \"https://deno.land/x/drake@v1.5.1/lib/help.ts\": \"d0ee8d081bf4f2d28c7aa71850be94cd9c8eea857ed231eada7b036f798cc383\",\n    \"https://deno.land/x/drake@v1.5.1/lib/registry.ts\": \"13906efa735f0fd03f38b3a1fdcb50d7d432306416a9d3212203dafa1999b9d8\",\n    \"https://deno.land/x/drake@v1.5.1/lib/tasks.ts\": \"4da700366fe15881c665e90d1668b60aafe0af2e0c8d10c2a48739986f971fcc\",\n    \"https://deno.land/x/drake@v1.5.1/lib/utils.ts\": \"55e56f4f0fb119374ae063a907e2bbe325443f6ea9f88408612ac619ac617fdc\",\n    \"https://deno.land/x/drake@v1.5.1/mod.ts\": \"56d43e13b0c80dbb473944b5554567592299bba228947c6b3c9dc0f68a217d74\"\n  },\n  \"workspace\": {\n    \"dependencies\": [\n      \"jsr:@b-fuze/deno-dom@~0.1.48\",\n      \"jsr:@philc/shoulda@2\",\n      \"jsr:@std/fs@^1.0.8\",\n      \"jsr:@std/http@^1.0.12\",\n      \"jsr:@std/path@^1.0.8\",\n      \"npm:json5@^2.2.3\"\n    ]\n  }\n}\n"
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "make.js",
          "type": "blob",
          "size": 11.28125,
          "content": "#!/usr/bin/env -S deno run --allow-read --allow-write --allow-env --allow-net --allow-run --allow-sys\n// Usage: ./make.js command. Use -l to list commands.\n// This is a set of tasks for building and testing Vimium in development.\nimport * as fs from \"@std/fs\";\nimport * as path from \"@std/path\";\nimport { abort, desc, run, task } from \"https://deno.land/x/drake@v1.5.1/mod.ts\";\nimport puppeteer from 'npm:puppeteer';\nimport * as shoulda from \"@philc/shoulda\";\nimport JSON5 from \"npm:json5\";\nimport { DOMParser } from \"@b-fuze/deno-dom\";\nimport * as fileServer from \"@std/http/file-server\";\n\nconst projectPath = new URL(\".\", import.meta.url).pathname;\n\nasync function shell(procName, argsArray = []) {\n  // NOTE(philc): Does drake's `sh` function work on Windows? If so, that can replace this function.\n  if (Deno.build.os == \"windows\") {\n    // if win32, prefix arguments with \"/c {original command}\"\n    // e.g. \"mkdir c:\\git\\vimium\" becomes \"cmd.exe /c mkdir c:\\git\\vimium\"\n    optArray.unshift(\"/c\", procName);\n    procName = \"cmd.exe\";\n  }\n  const p = Deno.run({ cmd: [procName].concat(argsArray) });\n  const status = await p.status();\n  if (!status.success) {\n    throw new Error(`${procName} ${argsArray} exited with status ${status.code}`);\n  }\n}\n\n// Clones and augments the manifest.json that we use for Chrome with the keys needed for Firefox.\nfunction createFirefoxManifest(manifest) {\n  manifest = JSON.parse(JSON.stringify(manifest)); // Deep clone.\n\n  manifest.permissions = manifest.permissions\n    // The favicon permission is not yet supported by Firefox.\n    .filter((p) => p != \"favicon\")\n    // Firefox needs clipboardRead and clipboardWrite for commands like \"copyCurrentUrl\", but Chrome\n    // does not. See #4186.\n    .concat([\"clipboardRead\", \"clipboardWrite\"]);\n\n  // As of 2023-07-08 Firefox doesn't yet support background.service_worker.\n  delete manifest.background[\"service_worker\"];\n  Object.assign(manifest.background, {\n    \"scripts\": [\"background_scripts/background.js\"],\n  });\n\n  // This key is only supported by Firefox.\n  Object.assign(manifest.action, {\n    \"default_area\": \"navbar\",\n  });\n\n  Object.assign(manifest, {\n    \"browser_specific_settings\": {\n      \"gecko\": {\n        // This ID was generated by the Firefox store upon first submission. It's needed in\n        // development mode, or many extension APIs don't work.\n        \"id\": \"{d7742d87-e61d-4b78-b8a1-b469842139fa}\",\n        \"strict_min_version\": \"112.0\",\n      },\n    },\n  });\n\n  // Firefox supports SVG icons.\n  Object.assign(manifest, {\n    \"icons\": {\n      \"16\": \"icons/icon.svg\",\n      \"32\": \"icons/icon.svg\",\n      \"48\": \"icons/icon.svg\",\n      \"64\": \"icons/icon.svg\",\n      \"96\": \"icons/icon.svg\",\n      \"128\": \"icons/icon.svg\",\n    },\n  });\n\n  Object.assign(manifest.action, {\n    \"default_icon\": \"icons/action_disabled.svg\",\n  });\n\n  return manifest;\n}\n\nasync function parseManifestFile() {\n  // Chrome's manifest.json supports JavaScript comment syntax. However, the Chrome Store rejects\n  // manifests with JavaScript comments in them! So here we use the JSON5 library, rather than JSON\n  // library, to parse our manifest.json and remove its comments.\n  return JSON5.parse(await Deno.readTextFile(\"./manifest.json\"));\n}\n\n// Builds a zip file for submission to the Chrome and Firefox stores. The output is in dist/.\nasync function buildStorePackage() {\n  const excludeList = [\n    \"*.md\",\n    \".*\",\n    \"CREDITS\",\n    \"MIT-LICENSE.txt\",\n    \"dist\",\n    \"make.js\",\n    \"deno.json\",\n    \"deno.lock\",\n    \"test_harnesses\",\n    \"tests\",\n  ];\n\n  const chromeManifest = await parseManifestFile();\n  const rsyncOptions = [\"-r\", \".\", \"dist/vimium\"].concat(\n    ...excludeList.map((item) => [\"--exclude\", item]),\n  );\n  const version = chromeManifest[\"version\"];\n  const writeDistManifest = async (manifest) => {\n    await Deno.writeTextFile(\"dist/vimium/manifest.json\", JSON.stringify(manifest, null, 2));\n  };\n  // cd into \"dist/vimium\" before building the zip, so that the files in the zip don't each have the\n  // path prefix \"dist/vimium\".\n  // --filesync ensures that files in the archive which are no longer on disk are deleted. It's\n  // equivalent to removing the zip file before the build.\n  const zipCommand = \"cd dist/vimium && zip -r --filesync \";\n\n  await shell(\"rm\", [\"-rf\", \"dist/vimium\"]);\n  await shell(\"mkdir\", [\n    \"-p\",\n    \"dist/vimium\",\n    \"dist/chrome-canary\",\n    \"dist/chrome-store\",\n    \"dist/firefox\",\n  ]);\n  await shell(\"rsync\", rsyncOptions);\n\n  const firefoxManifest = createFirefoxManifest(chromeManifest);\n  await writeDistManifest(firefoxManifest);\n  // Exclude PNG icons from the Firefox build, because we use the SVG directly.\n  await shell(\"bash\", [\n    \"-c\",\n    `${zipCommand} ../firefox/vimium-firefox-${version}.zip . -x icons/*.png`,\n  ]);\n\n  // Build the Chrome Store package.\n  await writeDistManifest(chromeManifest);\n  await shell(\"bash\", [\n    \"-c\",\n    `${zipCommand} ../chrome-store/vimium-chrome-store-${version}.zip .`,\n  ]);\n\n  // Build the Chrome Store dev package.\n  await writeDistManifest(Object.assign({}, chromeManifest, {\n    name: \"Vimium Canary\",\n    description: \"This is the development branch of Vimium (it is beta software).\",\n  }));\n  await shell(\"bash\", [\n    \"-c\",\n    `${zipCommand} ../chrome-canary/vimium-canary-${version}.zip .`,\n  ]);\n}\n\nconst runUnitTests = async () => {\n  // Import every test file.\n  const dir = path.join(projectPath, \"tests/unit_tests\");\n  const files = Array.from(Deno.readDirSync(dir)).map((f) => f.name).sort();\n  for (let f of files) {\n    if (f.endsWith(\"_test.js\")) {\n      await import(path.join(dir, f));\n    }\n  }\n\n  return await shoulda.run();\n};\n\nfunction setupPuppeteerPageForTests(page) {\n  // The \"console\" event emitted has arguments which are promises. To obtain the values to be\n  // printed, we must resolve those promises. However, if many console messages are emitted at once,\n  // resolving the promises often causes the console.log messages to be printed out of order. Here,\n  // we use a queue to strictly enforce that the messages appear in the order in which they were\n  // logged.\n  const messageQueue = [];\n  let processing = false;\n  const processMessageQueue = async () => {\n    while (messageQueue.length > 0) {\n      const values = await Promise.all(messageQueue.shift());\n      console.log(...values);\n    }\n    processing = false;\n  };\n  page.on(\"console\", async (msg) => {\n    const values = msg.args().map((a) => a.jsonValue());\n    messageQueue.push(values);\n    if (!processing) {\n      processing = true;\n      processMessageQueue();\n    }\n  });\n\n  page.on(\"error\", (err) => {\n    // NOTE(philc): As far as I can tell, this handler never gets executed.\n    console.error(err);\n  });\n  // pageerror catches the same events that window.onerror would, like JavaScript parsing errors.\n  page.on(\"pageerror\", (error) => {\n    // This is an arbitrary field we're writing to the page object.\n    page.receivedErrorOutput = true;\n    // Whatever type error is, it requires toString() to print the message.\n    console.log(error.toString());\n  });\n  page.on(\"requestfailed\", (request) => {\n    console.log(`${request.failure().errorText} ${request.url()}`);\n  });\n}\n\n// Navigates the Puppeteer `page` to `url` and invokes shoulda.run().\nasync function runPuppeteerTest(page, url) {\n  page.goto(url);\n  await page.waitForNavigation({ waitUntil: \"load\" });\n  const success = await page.evaluate(async () => {\n    return await shoulda.run();\n  });\n  return success;\n}\n\ndesc(\"Download and parse list of top-level domains (TLDs)\");\ntask(\"fetch-tlds\", [], async () => {\n  const suffixListUrl = \"https://www.iana.org/domains/root/db\";\n  const response = await fetch(suffixListUrl);\n  const text = await response.text();\n  const doc = new DOMParser().parseFromString(text, \"text/html\");\n  const els = doc.querySelectorAll(\"span.domain.tld\");\n  // Each span contains a TLD, e.g. \".com\". Trim off the leading period.\n  const domains = Array.from(els).map((el) => el.innerText.slice(1));\n  const str = domains.join(\"\\n\");\n  await Deno.writeTextFile(\"./resources/tlds.txt\", str);\n});\n\ndesc(\"Run unit tests\");\ntask(\"test-unit\", [], async () => {\n  const success = await runUnitTests();\n  if (!success) {\n    abort(\"test-unit failed\");\n  }\n});\n\n\nfunction isPortAvailable(number) {\n  try {\n    const listener = Deno.listen({ port: number });\n    listener.close();\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction getAvailablePort() {\n  const min = 7000;\n  const max = 65535;\n  let count = 0;\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n  let port = getRandomInt(min, max);\n  while (!isPortAvailable(port) && count < max - min) {\n    port++;\n    if (port > max) {\n      port = min;\n    }\n    if (isPortAvailable(port)) {\n      return port;\n    }\n    count++;\n    if (count >= max - min) {\n      throw new Error(`No port is available in the range ${min} - ${max}`);\n    }\n  }\n  return port;\n}\n\nasync function testDom() {\n  const port = getAvailablePort();\n  let served404 = false;\n  const httpServer = Deno.serve({ port }, async (req) => {\n    const url = new URL(req.url);\n    let path = decodeURIComponent(url.pathname);\n    if (path.startsWith(\"/\")) {\n      path = \".\" + path;\n    }\n    if (!(await fs.exists(path))) {\n      console.error(\"dom-tests: requested missing file (not found):\", path);\n      served404 = true;\n      return new Response(null, { status: 404 });\n    } else {\n      return fileServer.serveFile(req, path);\n    }\n  });\n\n  const files = [\"dom_tests.html\", \"vomnibar_test.html\"];\n  const browser = await puppeteer.launch();\n  let success = true;\n  for (const file of files) {\n    const page = await browser.newPage();\n    console.log(\"Running\", file);\n    setupPuppeteerPageForTests(page);\n    const url = `http://localhost:${port}/tests/dom_tests/${file}?dom_tests=true`;\n    const result = await runPuppeteerTest(page, url);\n    success = success && result;\n    if (served404) {\n      console.log(`${file} failed: a background or content script requested a missing file.`);\n    }\n    if (page.receivedErrorOutput) {\n      console.log(`${file} failed: there was a page level error.`);\n      success = false;\n    }\n    // If we close the puppeteer page (tab) via page.close(), we can get innocuous but noisy output\n    // like this:\n    // net::ERR_ABORTED http://localhost:43524/pages/hud.html?dom_tests=true\n    // There's probably a way to prevent that, but as a work around, we avoid closing the page.\n    // browser.close() will close all of its owned pages.\n  }\n  // NOTE(philc): At one point in development, I noticed that the output from Deno would suddenly\n  // pause, prior to the tests fully finishing, so closing the browser here may be racy. If it\n  // occurs again, we may need to add \"await delay(200)\".\n  await browser.close();\n  await httpServer.shutdown();\n  if (served404 || !success) {\n    abort(\"test-dom failed.\");\n  }\n}\n\ndesc(\"Run DOM tests\");\ntask(\"test-dom\", [], testDom);\n\ndesc(\"Run unit and DOM tests\");\ntask(\"test\", [\"test-unit\", \"test-dom\"]);\n\ndesc(\"Builds a zip file for submission to the Chrome and Firefox stores. The output is in dist/\");\ntask(\"package\", [], async () => {\n  await buildStorePackage();\n});\n\ndesc(\"Replaces manifest.json with a Firefox-compatible version, for development\");\ntask(\"write-firefox-manifest\", [], async () => {\n  const firefoxManifest = createFirefoxManifest(await parseManifestFile());\n  await Deno.writeTextFile(\"./manifest.json\", JSON.stringify(firefoxManifest, null, 2));\n});\n\nrun();\n"
        },
        {
          "name": "manifest.json",
          "type": "blob",
          "size": 3.3369140625,
          "content": "{\n  \"manifest_version\": 3,\n  \"name\": \"Vimium\",\n  \"version\": \"2.1.2\",\n  \"description\": \"The Hacker's Browser. Vimium provides keyboard shortcuts for navigation and control in the spirit of Vim.\",\n  \"icons\": { \"16\": \"icons/icon16.png\", \"48\": \"icons/icon48.png\", \"128\": \"icons/icon128.png\" },\n  \"minimum_chrome_version\": \"105.0\",\n  \"background\": {\n    \"service_worker\": \"background_scripts/background.js\",\n    \"type\": \"module\"\n    // Uncomment when developing in Firefox.\n    // \"scripts\": [\"background_scripts/background.js\"]\n  },\n  \"options_ui\": {\n    \"page\": \"pages/options.html\",\n    \"browser_style\": false,\n    \"open_in_tab\": true\n  },\n  \"host_permissions\": [\"<all_urls>\"],\n  \"permissions\": [\n    \"tabs\",\n    \"bookmarks\",\n    \"history\",\n    \"storage\",\n    \"sessions\",\n    // Notifications are used to show a message when Vimium's major version has been upgraded.\n    \"notifications\",\n    // We're using the scripting permission to 1) inject our content scripts and CSS into existing\n    // tabs when Vimium is first installed, and 2) inject the user's link hints CSS when a page\n    // loads. This permission was required when moving to manifest V3.\n    \"scripting\",\n    \"favicon\", // The favicon permission is not yet supported by Firefox.\n    \"webNavigation\",\n    \"search\"\n  ],\n  \"content_scripts\": [\n    {\n      \"matches\": [\"<all_urls>\"],\n      \"js\": [\n        \"lib/utils.js\",\n        \"lib/keyboard_utils.js\",\n        \"lib/dom_utils.js\",\n        \"lib/rect.js\",\n        \"lib/handler_stack.js\",\n        \"lib/settings.js\",\n        \"lib/find_mode_history.js\",\n        \"content_scripts/mode.js\",\n        \"content_scripts/ui_component.js\",\n        \"content_scripts/link_hints.js\",\n        \"content_scripts/vomnibar.js\",\n        \"content_scripts/scroller.js\",\n        \"content_scripts/marks.js\",\n        \"content_scripts/mode_insert.js\",\n        \"content_scripts/mode_find.js\",\n        \"content_scripts/mode_key_handler.js\",\n        \"content_scripts/mode_visual.js\",\n        \"content_scripts/hud.js\",\n        \"content_scripts/mode_normal.js\",\n        \"content_scripts/vimium_frontend.js\"\n      ],\n      \"css\": [\"content_scripts/vimium.css\"],\n      \"run_at\": \"document_start\",\n      \"all_frames\": true,\n      \"match_about_blank\": true\n    },\n    {\n      \"matches\": [\"file:///\", \"file:///*/\"],\n      \"css\": [\"content_scripts/file_urls.css\"],\n      \"run_at\": \"document_start\",\n      \"all_frames\": true\n    }\n  ],\n  // Uncomment when developing in Firefox.\n  // \"browser_specific_settings\": {\n  //   \"gecko\": {\n  //     // This ID was generated by the Firefox store upon first submission.\n  //     \"id\": \"{d7742d87-e61d-4b78-b8a1-b469842139fa}\",\n  //     \"strict_min_version\": \"109.0\"\n  //   }\n  // },\n  \"action\": {\n    \"default_icon\": {\n      \"16\": \"icons/action_disabled_16.png\",\n      \"32\": \"icons/action_disabled_32.png\"\n    },\n    // Uncomment for Firefox.\n    // \"default_area\": \"navbar\",\n    \"default_popup\": \"pages/action.html\"\n  },\n  \"web_accessible_resources\": [\n    {\n      \"resources\": [\n        \"pages/vomnibar.html\",\n        \"content_scripts/vimium.css\",\n        \"pages/hud.html\",\n        \"pages/help_dialog.html\",\n        \"pages/completion_engines.html\",\n        \"resources/tlds.txt\",\n        // This allows one to script the reloading of Vimium.\n        // This should only be enabled in development.\n        // \"pages/reload.html\",\n        \"_favicon/*\"\n      ],\n      \"matches\": [\"<all_urls>\"]\n    }\n  ]\n}\n"
        },
        {
          "name": "pages",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_harnesses",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}