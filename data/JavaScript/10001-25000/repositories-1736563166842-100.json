{
  "metadata": {
    "timestamp": 1736563166842,
    "page": 100,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "adam-golab/react-developer-roadmap",
      "stars": 18917,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.06640625,
          "content": ".DS_Store\n._*\nThumbs.db\n*.sublime-project\n*.sublime-workspace\n.idea\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 18.6455078125,
          "content": "## creative commons\n\n# Attribution-NonCommercial-ShareAlike 4.0 International\n\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\n\n### Using Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n\n* __Considerations for licensors:__ Our public licenses are intended for use by those authorized to give the public permission to use material in ways otherwise restricted by copyright and certain other rights. Our licenses are irrevocable. Licensors should read and understand the terms and conditions of the license they choose before applying it. Licensors should also secure all rights necessary before applying our licenses so that the public can reuse the material as expected. Licensors should clearly mark any material not subject to the license. This includes other CC-licensed material, or material used under an exception or limitation to copyright. [More considerations for licensors](http://wiki.creativecommons.org/Considerations_for_licensors_and_licensees#Considerations_for_licensors).\n\n* __Considerations for the public:__ By using one of our public licenses, a licensor grants the public permission to use the licensed material under specified terms and conditions. If the licensor’s permission is not necessary for any reason–for example, because of any applicable exception or limitation to copyright–then that use is not regulated by the license. Our licenses grant only permissions under copyright and certain other rights that a licensor has authority to grant. Use of the licensed material may still be restricted for other reasons, including because others have copyright or other rights in the material. A licensor may make special requests, such as asking that all changes be marked or described. Although not required by our licenses, you are encouraged to respect those requests where reasonable. [More considerations for the public](http://wiki.creativecommons.org/Considerations_for_licensors_and_licensees#Considerations_for_licensees).\n\n## Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License\n\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\n### Section 1 – Definitions.\n\na. __Adapted Material__ means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\n\nb. __Adapter's License__ means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\n\nc. __BY-NC-SA Compatible License__ means a license listed at [creativecommons.org/compatiblelicenses](http://creativecommons.org/compatiblelicenses), approved by Creative Commons as essentially the equivalent of this Public License.\n\nd. __Copyright and Similar Rights__ means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\n\ne. __Effective Technological Measures__ means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\n\nf. __Exceptions and Limitations__ means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\n\ng. __License Elements__ means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution, NonCommercial, and ShareAlike.\n\nh. __Licensed Material__ means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\n\ni. __Licensed Rights__ means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\n\nh. __Licensor__ means the individual(s) or entity(ies) granting rights under this Public License.\n\ni. __NonCommercial__ means not primarily intended for or directed towards commercial advantage or monetary compensation. For purposes of this Public License, the exchange of the Licensed Material for other material subject to Copyright and Similar Rights by digital file-sharing or similar means is NonCommercial provided there is no payment of monetary compensation in connection with the exchange.\n\nj. __Share__ means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\n\nk. __Sui Generis Database Rights__ means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\n\nl. __You__ means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n### Section 2 – Scope.\n\na. ___License grant.___\n\n   1. Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\n        A. reproduce and Share the Licensed Material, in whole or in part, for NonCommercial purposes only; and\n\n        B. produce, reproduce, and Share Adapted Material for NonCommercial purposes only.\n\n   2. __Exceptions and Limitations.__ For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\n\n   3. __Term.__ The term of this Public License is specified in Section 6(a).\n\n   4. __Media and formats; technical modifications allowed.__ The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\n\n    5. __Downstream recipients.__\n\n        A. __Offer from the Licensor – Licensed Material.__ Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\n\n        B. __Additional offer from the Licensor – Adapted Material.__ Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\n\n        C. __No downstream restrictions.__ You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\n    6. __No endorsement.__ Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nb. ___Other rights.___\n\n   1. Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\n\n   2. Patent and trademark rights are not licensed under this Public License.\n\n   3. To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties, including when the Licensed Material is used other than for NonCommercial purposes.\n\n### Section 3 – License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\na. ___Attribution.___\n\n   1. If You Share the Licensed Material (including in modified form), You must:\n\n       A. retain the following if it is supplied by the Licensor with the Licensed Material:\n\n         i. identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\n\n         ii. a copyright notice;\n\n         iii. a notice that refers to this Public License;\n\n         iv. a notice that refers to the disclaimer of warranties;\n\n         v. a URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\n       B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\n\n       C. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\n    2. You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\n\n    3. If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nb. ___ShareAlike.___\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\n1. The Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-NC-SA Compatible License.\n\n2. You must include the text of, or the URI or hyperlink to, the Adapter's License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\n\n3. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter's License You apply.\n\n### Section 4 – Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\na. for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database for NonCommercial purposes only;\n\nb. if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\n\nc. You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n### Section 5 – Disclaimer of Warranties and Limitation of Liability.\n\na. __Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.__\n\nb. __To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.__\n\nc. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n### Section 6 – Term and Termination.\n\na. This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\n\nb. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\n   1. automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\n\n   2. upon express reinstatement by the Licensor.\n\n   For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\n\nc. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\n\nd. Sections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n### Section 7 – Other Terms and Conditions.\n\na. The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\n\nb. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\n### Section 8 – Interpretation.\n\na. For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\n\nb. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\n\nc. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\n\nd. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n> Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at [creativecommons.org/policies](http://creativecommons.org/policies), Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\n>\n> Creative Commons may be contacted at creativecommons.org\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.2080078125,
          "content": "**What this PR does?**\n\n\n**Why are you adding given library? (Short description why do you think that this library is important)**\n\n\n**Screenshots (the part that you modified is enough)**\n\nBefore:\n\nAfter changes:\n"
        },
        {
          "name": "README-CN.md",
          "type": "blob",
          "size": 8.220703125,
          "content": "# React 开发者指南\n\n[README in English](README.md)\n\n[README in Japanese](README-JA.md)\n\n[README in Korean](README-KO.md)\n\n[README in Portuguese (Brazil)](README-PTBR.md)\n\n[README in Russian](README-RU.md)\n\n[README in Spanish](README-ES.md)\n\n> 该指南将助你在 2019 成为一名 React 开发者\n\n你可以在下面找到一张图，该图展示了你可以选取的路径及你想学习的库，从而成为一名 React 开发者。“作为 React 开发者，我接下来应该学习什么？”，我把这张图作为建议给每个问过我这一问题的人。\n\n## 免责声明\n\n> 该指南的目的是为了给你心有个大概的轮廓。如果你对接下来要学习的内容感到困惑，指南将指导你而不是鼓励你选择时髦和新颖的东西。\n> 你应该逐渐理解为什么一种工具比另一种工具更适合某些情况，并且记住时髦和新颖的东西并不总是意味着最适合这个工作。\n\n## Roadmap\n\n![Roadmap](./roadmap-cn.png)\n\n## 资源\n\n1.  基础\n    1.  HTML\n        - 学习 HTML 基础知识\n        - 做几个页面来练习\n    2.  CSS\n        - 学习 CSS 基础知识\n        - 完成上一步的样式页面\n        - 使用 grid 布局和 flexbox 布局构建页面\n    3.  JS 基础\n        - 熟悉语法\n        - 学习 DOM 的基本操作\n        - 学习 JS 的典型机制（状态提升，事件冒泡，原型）\n        - 实现一些 AJAX（XHR）调用\n        - 学习新特性 (ECMA Script 6+)\n        - 另外，熟悉 jQuery 库\n2.  常用开发技能\n    1.  学习 GIT 的使用, 在 GitHub 上创建一些仓库, 并和其他人分享你的代码\n    2.  掌握 HTTP(S) 协议, 及其请求方法 (GET, POST, PUT, PATCH, DELETE, OPTIONS)\n    3.  不要害怕使用 Google, [使用 Google 进行强力搜索](http://www.powersearchingwithgoogle.com/)\n    4.  熟悉终端，并配置你的 shell (bash, zsh, fish)\n    5.  阅读一些关于算法和数据结构的书籍\n    6.  阅读一些关于设计模式的书籍\n3.  在[官网](https://reactjs.org/tutorial/tutorial.html)上学习 React 或者完成一些[课程](https://egghead.io/courses/the-beginner-s-guide-to-react)\n4.  熟悉你将用到的工具\n    1.  包管理器\n        - [npm](https://www.npmjs.com/)\n        - [yarn](https://yarnpkg.com/lang/en/)\n        - [pnpm](https://pnpm.js.org/)\n    2.  任务运行器\n        - [npm 脚本](https://docs.npmjs.com/misc/scripts)\n        - [gulp](https://gulpjs.com/)\n    - [Webpack](https://webpack.js.org/)\n    - [Rollup](https://rollupjs.org/guide/en)\n    - [Parcel](https://parceljs.org/)\n5.  样式\n    1.  CSS 预处理器\n        - [Sass/CSS](https://sass-lang.com/)\n        - [PostCSS](https://postcss.org/)\n        - [Less](http://lesscss.org/)\n        - [Stylus](http://stylus-lang.com/)\n    2.  CSS 框架\n        - [Bootstrap](https://getbootstrap.com/)\n        - [Materialize](https://materializecss.com/), [Material UI](https://material-ui.com/), [Material Design Lite](https://getmdl.io/)\n        - [Bulma](https://bulma.io/)\n        - [Semantic UI](https://semantic-ui.com/)\n    3.  CSS 架构\n        - [BEM](http://getbem.com/)\n        - [CSS Modules](https://github.com/css-modules/css-modules)\n        - [Atomic](https://acss.io/)\n        - [OOCSS](https://github.com/stubbornella/oocss/wiki)\n        - [SMACSS](https://smacss.com/)\n        - [SUITCSS](https://suitcss.github.io/)\n    4.  JS 编写 CSS\n        - [Styled Components](https://www.styled-components.com/)\n        - [Radium](https://formidable.com/open-source/radium/)\n        - [Emotion](https://emotion.sh/)\n        - [JSS](http://cssinjs.org/)\n        - [Aphrodite](https://github.com/Khan/aphrodite)\n6.  状态管理\n    1.  [组件状态](https://reactjs.org/docs/faq-state.html)/[上下文 API](https://reactjs.org/docs/context.html)\n    2.  [Redux](https://redux.js.org/)\n        1.  异步操作 (Side Effects)\n            - [Redux Thunk](https://github.com/reduxjs/redux-thunk)\n            - [Redux Better Promise](https://github.com/Lukasz-pluszczewski/redux-better-promise)\n            - [Redux Saga](https://redux-saga.js.org/)\n            - [Redux Observable](https://redux-observable.js.org)\n        2. 助手\n            * [Rematch](https://rematch.gitbooks.io/rematch/)\n            * [Reselect](https://github.com/reduxjs/reselect)\n        3.  数据持久化\n            - [Redux Persist](https://github.com/rt2zz/redux-persist)\n            - [Redux Phoenix](https://github.com/adam-golab/redux-phoenix)\n        4.  [Redux Form](https://redux-form.com)\n    3.  [MobX](https://mobx.js.org/)\n7.  类型检查器\n    - [PropTypes](https://reactjs.org/docs/typechecking-with-proptypes.html)\n    - [TypeScript](https://www.typescriptlang.org/)\n    - [Flow](https://flow.org/en/)\n8.  表单助手\n    - [Redux Form](https://redux-form.com)\n    - [Formik](https://github.com/jaredpalmer/formik)\n    - [Formsy](https://github.com/formsy/formsy-react)\n    - [Final Form](https://github.com/final-form/final-form)\n9.  路由\n    - [React-Router](https://reacttraining.com/react-router/)\n    - [Router5](https://router5.js.org/)\n    - [Redux-First Router](https://github.com/faceyspacey/redux-first-router)\n    - [Reach Router](https://reach.tech/router/)\n10. API 客户端\n    1.  REST\n        - [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n        - [SuperAgent](https://visionmedia.github.io/superagent/)\n        - [axios](https://github.com/axios/axios)\n    2.  GraphQL\n        - [Apollo](https://www.apollographql.com/docs/react/)\n        - [Relay](https://facebook.github.io/relay/)\n        - [urql](https://github.com/FormidableLabs/urql)\n11. 实用工具库\n    - [Lodash](https://lodash.com/)\n    - [Moment](https://momentjs.com/)\n    - [classnames](https://github.com/JedWatson/classnames)\n    - [Numeral](http://numeraljs.com/)\n    - [RxJS](http://reactivex.io/)\n    - [ImmutableJS](https://facebook.github.io/immutable-js/)\n    - [Ramda](https://ramdajs.com/)\n12. 测试\n    1.  单元（Unit）测试\n        - [Jest](https://facebook.github.io/jest/)\n        - [Enzyme](http://airbnb.io/enzyme/)\n        - [Sinon](http://sinonjs.org/)\n        - [Mocha](https://mochajs.org/)\n        - [Chai](http://www.chaijs.com/)\n        - [AVA](https://github.com/avajs/ava)\n        - [Tape](https://github.com/substack/tape)\n    2.  端到端（E2E）测试\n        - [Selenium](https://www.seleniumhq.org/), [Webdriver](http://webdriver.io/)\n        - [Cypress](https://cypress.io/)\n        - [Puppeteer](https://pptr.dev/)\n        - [Cucumber.js](https://github.com/cucumber/cucumber-js)\n        - [Nightwatch.js](http://nightwatchjs.org/)\n    3.  集成测试\n        - [Karma](https://karma-runner.github.io/)\n13. 国际化（i18n)\n    - [React Intl](https://github.com/yahoo/react-intl)\n    - [React i18next](https://react.i18next.com/)\n14. 服务端渲染（SSR)\n    - [Next.js](https://nextjs.org/)\n    - [After.js](https://github.com/jaredpalmer/after.js)\n    - [Rogue](https://github.com/alidcastano/rogue.js)\n15. 静态网站生成器\n    - [Gatsby](https://www.gatsbyjs.org/)\n16. 后端集成框架\n    - [React on Rails](https://shakacode.gitbooks.io/react-on-rails/content/)\n17. 移动端\n    - [React Native](https://facebook.github.io/react-native/)\n    - [Cordova](https://cordova.apache.org/)/[Phonegap](https://phonegap.com/)\n18. 桌面端\n    - [Proton Native](https://proton-native.js.org/)\n    - [Electron](https://electronjs.org/)\n    - [React Native Windows](https://github.com/Microsoft/react-native-windows)\n19. 虚拟现实（VR)\n    - [React 360](https://facebook.github.io/react-360/)\n\n## 总结\n\n如果你认为指南可以改进，请提交包含任何更新的 PR 并提交任何问题。此外，我将继续改进这个仓库，因此你可以 star 这个仓库以便于重新访问。\n\n## 贡献\n\n该指南是使用[Draw.io](https://www.draw.io/)构建的。项目文件可以在 `/src` 目录中找到。要修改它, 请打开 draw.io, 点击 **Open Existing Diagram** 并选择项目中的 `xml` 文件。它将为你打开指南，更新它，上传和更新自述文件中的图像并创建一个 PR（导出为 png）。\n\n- 改进后提交 PR\n- 讨论问题中的想法\n- 传播消息\n\n## 版权许可\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "README-ES.md",
          "type": "blob",
          "size": 8.734375,
          "content": "# React Developer Roadmap\n\n[README in Chinese](README-CN.md)\n\n[README in English](README.md)\n\n[README in Japanese](README-JA.md)\n\n[README in Korean](README-KO.md)\n\n[README in Portuguese (Brazil)](README-PTBR.md)\n\n[README in Russian](README-RU.md)\n\n> Roadmap para convertirse en un desarrollador React en 2019::\n\nA continuación puede encontrar un gráfico que muestra las rutas que puede tomar y las bibliotecas que le gustaría aprender para convertirse en un desarrollador React. Hice esta tabla como una sugerencia para todos los que me preguntan: \"¿Qué debo aprender a continuación como desarrollador de React?\"\n\n## Descargo\n> El propósito de este roadmap es darte una idea sobre el paisaje. Este lo guiará en caso de estár confundido acerca de qué aprender, en lugar de animarlo a elegir lo que es moderno y actual. Debe comprender mejor por qué una herramienta sería más adecuada para algunos casos que la otra y recordar que la moda y la moda no siempre son las más adecuadas para el trabajo\n\n## Roadmap\n\n![Roadmap](./roadmap-es.png)\n\n## Resources\n\n1. Básico\n    1. HTML\n        * Aprender los conceptos básicos de HTML.\n        * Hacer unas pocas páginas como ejercicio.\n    2. CSS\n        * Aprender los conceptos básicos de CSS\n        * Páginas de estilo del paso anterior.\n        * Construir una página con grid y flexbox.\n    3. Javascript Básico\n        * Familiarizarse con la sintaxis.\n        * Aprender operaciones básicas en DOM\n        * Aprender los mecanismos típicos de JS (Hoisting, Event Bubbling, creación de prototipos)\n        * Hacer algunas llamadas AJAX (XHR)\n        * Aprender nuevas características (ECMA Script 6+)\n        * Además, familiarícese con la biblioteca jQuery\n2. Habilidades generales de desarrollo\n    1. Aprenda GIT, cree algunos repositorios en GitHub, comparta su código con otras personas\n    2. Conozca el protocolo HTTP (S), métodos de solicitud (GET, POST, PUT, PATCH, DELETE, OPTIONS)\n    3. No tengas miedo de usar Google, [Power Searching with Google](http://www.powersearchingwithgoogle.com/)\n    4. Familiarícese con el terminal, configure su shell (bash, zsh, fish)\n    5. Lee algunos libros sobre algoritmos y estructuras de datos\n    6. Lee algunos libros sobre patrones de diseño\n3. Aprender React [Página oficial](https://reactjs.org/tutorial/tutorial.html) o completa algunos [cursos](https://egghead.io/courses/the-beginner-s-guide-to-react)\n4. Familiarízate con las herramientas que utilizarás.\n    1. Gestores de paquetes\n        * [npm](https://www.npmjs.com/)\n        * [yarn](https://yarnpkg.com/lang/en/)\n        * [pnpm](https://pnpm.js.org/)\n    2. Task Runners\n        * [npm scripts](https://docs.npmjs.com/misc/scripts)\n        * [gulp](https://gulpjs.com/)\n    * [Webpack](https://webpack.js.org/)\n    * [Rollup](https://rollupjs.org/guide/en)\n    * [Parcel](https://parceljs.org/)\n5. Estilo\n    1. Preprocesadores CSS\n        * [Sass/CSS](https://sass-lang.com/)\n        * [PostCSS](https://postcss.org/)\n        * [Less](http://lesscss.org/)\n        * [Stylus](http://stylus-lang.com/)\n    2. Frameworks CSS\n        * [Bootstrap](https://getbootstrap.com/)\n        * [Materialize](https://materializecss.com/), [Material UI](https://material-ui.com/), [Material Design Lite](https://getmdl.io/)\n        * [Bulma](https://bulma.io/)\n        * [Semantic UI](https://semantic-ui.com/)\n    3. Arquitectura CSS\n        * [BEM](http://getbem.com/)\n        * [CSS Modules](https://github.com/css-modules/css-modules)\n        * [Atomic](https://acss.io/)\n        * [OOCSS](https://github.com/stubbornella/oocss/wiki)\n        * [SMACSS](https://smacss.com/)\n        * [SUITCSS](https://suitcss.github.io/)\n    4. CSS en JS\n        * [Styled Components](https://www.styled-components.com/)\n        * [Radium](https://formidable.com/open-source/radium/)\n        * [Emotion](https://emotion.sh/)\n        * [JSS](http://cssinjs.org/)\n        * [Aphrodite](https://github.com/Khan/aphrodite)\n6. Manejo del estado\n    1. [Component State](https://reactjs.org/docs/faq-state.html)/[Context API](https://reactjs.org/docs/context.html)\n    2. [Redux](https://redux.js.org/)\n        1. Acciones asincrónicas (Efectos secundarios)\n            * [Redux Thunk](https://github.com/reduxjs/redux-thunk)\n            * [Redux Better Promise](https://github.com/Lukasz-pluszczewski/redux-better-promise)\n            * [Redux Saga](https://redux-saga.js.org/)\n            * [Redux Observable](https://redux-observable.js.org)\n        2. Helpers\n            * [Rematch](https://rematch.gitbooks.io/rematch/)\n            * [Reselect](https://github.com/reduxjs/reselect)\n        3. Persistencia de datos\n            * [Redux Persist](https://github.com/rt2zz/redux-persist)\n            * [Redux Phoenix](https://github.com/adam-golab/redux-phoenix)\n        4. [Redux Form](https://redux-form.com)\n    3. [MobX](https://mobx.js.org/)\n7. Comprobadores de tipos\n    * [PropTypes](https://reactjs.org/docs/typechecking-with-proptypes.html)\n    * [TypeScript](https://www.typescriptlang.org/)\n    * [Flow](https://flow.org/en/)\n8. Helpers de formularios\n    * [Redux Form](https://redux-form.com)\n    * [Formik](https://github.com/jaredpalmer/formik)\n    * [Formsy](https://github.com/formsy/formsy-react)\n    * [Final Form](https://github.com/final-form/final-form)\n9. Enrutamiento\n    * [React-Router](https://reacttraining.com/react-router/)\n    * [Router5](https://router5.js.org/)\n    * [Redux-First Router](https://github.com/faceyspacey/redux-first-router)\n    * [Reach Router](https://reach.tech/router/)\n10. Consumo de API\n    1. REST\n        * [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n        * [SuperAgent](https://visionmedia.github.io/superagent/)\n        * [axios](https://github.com/axios/axios)\n    2. GraphQL\n        * [Apollo](https://www.apollographql.com/docs/react/)\n        * [Relay](https://facebook.github.io/relay/)\n        * [urql](https://github.com/FormidableLabs/urql)\n11. Librerías útiles\n    * [Lodash](https://lodash.com/)\n    * [Moment](https://momentjs.com/)\n    * [classnames](https://github.com/JedWatson/classnames)\n    * [Numeral](http://numeraljs.com/)\n    * [RxJS](http://reactivex.io/)\n    * [ImmutableJS](https://facebook.github.io/immutable-js/)\n    * [Ramda](https://ramdajs.com/)\n12. Pruebas\n    1. Pruebas Unitarias\n        * [Jest](https://facebook.github.io/jest/)\n        * [Enzyme](http://airbnb.io/enzyme/)\n        * [Sinon](http://sinonjs.org/)\n        * [Mocha](https://mochajs.org/)\n        * [Chai](http://www.chaijs.com/)\n        * [AVA](https://github.com/avajs/ava)\n        * [Tape](https://github.com/substack/tape)\n    2. Pruebas de extremo a extremo\n        * [Selenium](https://www.seleniumhq.org/), [Webdriver](http://webdriver.io/)\n        * [Cypress](https://cypress.io/)\n        * [Puppeteer](https://pptr.dev/)\n        * [Cucumber.js](https://github.com/cucumber/cucumber-js)\n        * [Nightwatch.js](http://nightwatchjs.org/)\n    3. Pruebas de integración\n        * [Karma](https://karma-runner.github.io/)\n13. Internacionalización\n    * [React Intl](https://github.com/yahoo/react-intl)\n    * [React i18next](https://react.i18next.com/)\n14. Render del lado del servidor\n    * [Next.js](https://nextjs.org/)\n    * [After.js](https://github.com/jaredpalmer/after.js)\n    * [Rogue](https://github.com/alidcastano/rogue.js)\n15. Generador de sitio estático\n    * [Gatsby](https://www.gatsbyjs.org/)\n16. Integración con Framework de Backend\n    * [React on Rails](https://shakacode.gitbooks.io/react-on-rails/content/)\n17. Móvil\n    * [React Native](https://facebook.github.io/react-native/)\n    * [Cordova](https://cordova.apache.org/)/[Phonegap](https://phonegap.com/)\n18. Escritorio\n    * [Proton Native](https://proton-native.js.org/)\n    * [Electron](https://electronjs.org/)\n    * [React Native Windows](https://github.com/Microsoft/react-native-windows)\n19. Realidad virtual\n    * [React 360](https://facebook.github.io/react-360/)\n\n## Conclusión\n\n\nSi cree que se puede mejorar el roadmap, abra un PR con cualquier actualización y envíe cualquier problema. Además, continuaré mejorandolo, por lo que es posible que desee darle una estrella a este repositorio para volver a visitarlo.\n\n## Contribución\n\nThe roadmap is built using [Draw.io](https://www.draw.io/). Project file can be found at `/src` directory. To modify it, open draw.io, click **Open Existing Diagram** and choose `xml` file with project. It will open the roadmap for you. Update it, upload and update the images in readme and create a PR (export as png).\n\n- Abrir un pull request con mejoras.\n- Discutir ideas en temas (issues).\n- Difundir la palabra.\n\n## Licencia\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "README-JA.md",
          "type": "blob",
          "size": 8.95703125,
          "content": "# React 開発者ロードマップ\n\n[README in Chinese](README-CN.md)\n\n[README in English](README.md)\n\n[README in Korean](README-KO.md)\n\n[README in Portuguese (Brazil)](README-PTBR.md)\n\n[README in Russian](README-RU.md)\n\n[README in Spanish](README-ES.md)\n\n> Roadmap to becoming a React developer in 2019:\n\nこれはReact開発者になるためにあなたが学ぶべき技術やライブラリを示すチャートです。 このチャートは、「React開発者として次に何を学ぶ必要があるのか」と悩むすべての人へのヒントとして作成しました。\n\n## 免責事項\n> このロードマップの目的は、あなたに状況を把握するヒントを与えることです。 あなたが次に何を学ぶべきかについて迷っているときにこのロードマップが導いてくれるでしょう。 あるツールがどのようなケースで他よりも適しているのか、その理由について理解を深める必要があります。また、流行しているものが必ずしも最適であるとは限らないことに注意してください。\n\n## Roadmap\n\n![Roadmap](./roadmap-ja.png)\n\n## Resources\n\n1. 基礎知識\n    1. HTML\n        * HTMLの基礎知識を学ぶ\n        * 練習としていくつかページを作成する\n    2. CSS\n        * CSSの基礎知識を学ぶ\n        * 前項で作成したページにCSSを当てる\n        * ページを grid 及び flexbox で作成する\n    3. JS基礎\n        * 構文に詳しくなる\n        * DOMの基本操作を学ぶ\n        * JSに特徴的なメカニズムを学ぶ (巻き上げ(Hoisting), Event Bubbling, Prototyping)\n        * AJAX (XHR) を利用する\n        * 新機能を学ぶ (ECMA Script 6以降)\n        * jQueryライブラリに詳しくなる\n2. 一般開発技能\n    1. GITについて学ぶ。GitHubにいくつかレポジトリを作成し他の人と共有してみる\n    2. Know HTTP(S) protocol, request methods (GET, POST, PUT, PATCH, DELETE, OPTIONS)\n    2. HTTP(S)について知る。リクエストメソッド (GET, POST, PUT, PATCH, DELETE, OPTIONS)\n    3. Googleを活用して検索する。[Power Searching with Google](http://www.powersearchingwithgoogle.com/)\n    4. ターミナルに慣れる。shell(bash, zsh, fish)の設定をしてみる。\n    5. データ構造とアルゴリズムについての本を読む\n    6. デザインパターンについての本を読む\n3. 公式サイトでReactについて学ぶ [official website](https://reactjs.org/tutorial/tutorial.html) or complete some [courses](https://egghead.io/courses/the-beginner-s-guide-to-react)\n4. 利用するツールに詳しくなる\n    1. Package Managers\n        * [npm](https://www.npmjs.com/)\n        * [yarn](https://yarnpkg.com/lang/en/)\n        * [pnpm](https://pnpm.js.org/)\n    2. Task Runners\n        * [npm scripts](https://docs.npmjs.com/misc/scripts)\n        * [gulp](https://gulpjs.com/)\n    * [Webpack](https://webpack.js.org/)\n    * [Rollup](https://rollupjs.org/guide/en)\n    * [Parcel](https://parceljs.org/)\n5. Styling\n    1. CSS Preprocessor\n        * [Sass/CSS](https://sass-lang.com/)\n        * [PostCSS](https://postcss.org/)\n        * [Less](http://lesscss.org/)\n        * [Stylus](http://stylus-lang.com/)\n    2. CSS Frameworks\n        * [Bootstrap](https://getbootstrap.com/)\n        * [Materialize](https://materializecss.com/), [Material UI](https://material-ui.com/), [Material Design Lite](https://getmdl.io/)\n        * [Bulma](https://bulma.io/)\n        * [Semantic UI](https://semantic-ui.com/)\n    3. CSS Architecture\n        * [BEM](http://getbem.com/)\n        * [CSS Modules](https://github.com/css-modules/css-modules)\n        * [Atomic](https://acss.io/)\n        * [OOCSS](https://github.com/stubbornella/oocss/wiki)\n        * [SMACSS](https://smacss.com/)\n        * [SUITCSS](https://suitcss.github.io/)\n    4. CSS in JS\n        * [Styled Components](https://www.styled-components.com/)\n        * [Radium](https://formidable.com/open-source/radium/)\n        * [Emotion](https://emotion.sh/)\n        * [JSS](http://cssinjs.org/)\n        * [Aphrodite](https://github.com/Khan/aphrodite)\n6. State管理\n    1. [Component State](https://reactjs.org/docs/faq-state.html)/[Context API](https://reactjs.org/docs/context.html)\n    2. [Redux](https://redux.js.org/)\n        1. 非同期処理 (副作用)\n            * [Redux Thunk](https://github.com/reduxjs/redux-thunk)\n            * [Redux Better Promise](https://github.com/Lukasz-pluszczewski/redux-better-promise)\n            * [Redux Saga](https://redux-saga.js.org/)\n            * [Redux Observable](https://redux-observable.js.org)\n        2. Helpers\n            * [Rematch](https://rematch.gitbooks.io/rematch/)\n            * [Reselect](https://github.com/reduxjs/reselect)\n        3. Data persistence\n            * [Redux Persist](https://github.com/rt2zz/redux-persist)\n            * [Redux Phoenix](https://github.com/adam-golab/redux-phoenix)\n        4. [Redux Form](https://redux-form.com)\n    3. [MobX](https://mobx.js.org/)\n7. 型チェッカー\n    * [PropTypes](https://reactjs.org/docs/typechecking-with-proptypes.html)\n    * [TypeScript](https://www.typescriptlang.org/)\n    * [Flow](https://flow.org/en/)\n8. Form Helpers\n    * [Redux Form](https://redux-form.com)\n    * [Formik](https://github.com/jaredpalmer/formik)\n    * [Formsy](https://github.com/formsy/formsy-react)\n    * [Final Form](https://github.com/final-form/final-form)\n9. Routing\n    * [React-Router](https://reacttraining.com/react-router/)\n    * [Router5](https://router5.js.org/)\n    * [Redux-First Router](https://github.com/faceyspacey/redux-first-router)\n    * [Reach Router](https://reach.tech/router/)\n10. API Clients\n    1. REST\n        * [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n        * [SuperAgent](https://visionmedia.github.io/superagent/)\n        * [axios](https://github.com/axios/axios)\n    2. GraphQL\n        * [Apollo](https://www.apollographql.com/docs/react/)\n        * [Relay](https://facebook.github.io/relay/)\n        * [urql](https://github.com/FormidableLabs/urql)\n11. Utility Libraries\n    * [Lodash](https://lodash.com/)\n    * [Moment](https://momentjs.com/)\n    * [classnames](https://github.com/JedWatson/classnames)\n    * [Numeral](http://numeraljs.com/)\n    * [RxJS](http://reactivex.io/)\n    * [ImmutableJS](https://facebook.github.io/immutable-js/)\n    * [Ramda](https://ramdajs.com/)\n12. Testing\n    1. Unit Testing\n        * [Jest](https://facebook.github.io/jest/)\n        * [Enzyme](http://airbnb.io/enzyme/)\n        * [Sinon](http://sinonjs.org/)\n        * [Mocha](https://mochajs.org/)\n        * [Chai](http://www.chaijs.com/)\n        * [AVA](https://github.com/avajs/ava)\n        * [Tape](https://github.com/substack/tape)\n    2. End to End Testing\n        * [Selenium](https://www.seleniumhq.org/), [Webdriver](http://webdriver.io/)\n        * [Cypress](https://cypress.io/)\n        * [Puppeteer](https://pptr.dev/)\n        * [Cucumber.js](https://github.com/cucumber/cucumber-js)\n        * [Nightwatch.js](http://nightwatchjs.org/)\n    3. Integration Testing\n        * [Karma](https://karma-runner.github.io/)\n13. 国際化(Internationalization)\n    * [React Intl](https://github.com/yahoo/react-intl)\n    * [React i18next](https://react.i18next.com/)\n14. Server Side Rendering\n    * [Next.js](https://nextjs.org/)\n    * [After.js](https://github.com/jaredpalmer/after.js)\n    * [Rogue](https://github.com/alidcastano/rogue.js)\n15. 静的サイトジェネレータ(Static Site Generator)\n    * [Gatsby](https://www.gatsbyjs.org/)\n16. Backend Framework Integration\n    * [React on Rails](https://shakacode.gitbooks.io/react-on-rails/content/)\n17. Mobile\n    * [React Native](https://facebook.github.io/react-native/)\n    * [Cordova](https://cordova.apache.org/)/[Phonegap](https://phonegap.com/)\n18. Desktop\n    * [Proton Native](https://proton-native.js.org/)\n    * [Electron](https://electronjs.org/)\n    * [React Native Windows](https://github.com/Microsoft/react-native-windows)\n19. Virtual Reality\n    * [React 360](https://facebook.github.io/react-360/)\n\n## Wrap Up\n\nロードマップに改善できる点があれば、Pull Requestを開いてissueを投稿してください。私もあなたがSTARをつけたくなるように、このロードマップを改善し続けます。\n\n## Contribution\n\nこのロードマップは [Draw.io](https://www.draw.io/) を利用してつくられています。プロジェクトファイルは `/src` ディレクトリにあります。 修正するときは, draw.ioを開いて **Open Existing Diagram** をクリックし `xml` ファイルを選択してください。ロードマップが開きます。それを更新し `png` としてエクスポートして、ファイルとreadmeを更新し, Pull Requestを作成してください.\n\n\n- 改善のプルリクエストを開く\n- 問題のアイデアを話し合う\n- 広く周知する\n\n## License\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "README-KO.md",
          "type": "blob",
          "size": 9.1328125,
          "content": "# React 개발자 로드맵\n\n[README in Chinese](README-CN.md)\n\n[README in English](README.md)\n\n[README in Japanese](README-JA.md)\n\n[README in Portuguese (Brazil)](README-PTBR.md)\n\n[README in Russian](README-RU.md)\n\n[README in Spanish](README-ES.md)\n\n> 2019년 React 개발자 로드맵:\n\n아래에는 React 개발자가 되기 위한 학습 로드맵과 관련 라이브러리들이 적혀있는 차트가 있습니다. React 개발자로서 다음에 무엇을 배워야하는지 묻는 모든 사람들을 위한 팁으로 이 차트를 만들었습니다.\n\n## 주의사항\n\n> 이 로드맵의 목적은 전체에 대한 윤곽을 제공하는 것입니다. 여러분이 무조건 힙하고 트렌디한 것을 선택하기보단, 앞으로 무엇을 배워야할지 혼란스러울때 이 로드맵이 좋은 가이드가 될 것입니다. 기술을 선택함에 있어 하나의 도구가 다른 도구보다 어떤 경우에 적합한지 이해해야하며, 힙하고 트렌디한 기술들이 항상 모든 업무에 적합하진 않다는 것을 염두에 두시기 바랍니다.\n\n## 로드맵\n\n![Roadmap](./roadmap-ko.png)\n\n## 학습 리소스\n\n1. 기본기\n   1. HTML\n      - HTML의 기본기를 다져주세요.\n      - 연습삼아 몇 개의 페이지를 만들어보세요.\n   2. CSS\n      - CSS의 기본기를 다져주세요.\n      - 이전 단계에서 만들었던 페이지들을 꾸며보세요.\n      - Grid와 flexbox를 활용해 페이지를 만들어보세요.\n   3. JS 기본\n      - 문법에 익숙해지세요.\n      - DOM을 활용한 기본적인 작업들을 배우세요.\n      - JS에 대한 일반적인 메커니즘을 배우세요. (호이스팅, 이벤트 버블링, 프로토타입)\n      - AJAX (XHR) 요청을 해보세요.\n      - 새로운 기능을 배우세요. (ECMA Script 6+)\n      - 선택적으로, jQuery 라이브러리에 익숙해지면 좋습니다.\n2. 기본적인 개발 스킬\n   1. GIT에 대해 공부하고, GitHub에 몇 개의 Repository를 만들어도 보고, 다른 사람들에게 여러분의 코드를 공유해보세요.\n   2. Request 메소드 (GET, POST, PUT, PATCH, DELETE, OPTIONS)와 더불어 HTTP(S) 프로토콜에 대해 공부하세요.\n   3. 구글링을 겁내지 마세요. [구글로 파워서칭 해보기](http://www.powersearchingwithgoogle.com/)\n   4. 터미널에 익숙해지시고, 여러분만의 shell (bash, zsh, fish)을 설정해보세요.\n   5. 알고리즘과 자료구조에 대한 몇 개의 책을 읽어보세요.\n   6. 디자인 패턴에 대한 몇 개의 책을 읽어보세요.\n3. [공식 홈페이지](https://reactjs.org/tutorial/tutorial.html)에서 튜토리얼을 읽어보거나 몇 개의 [코스들](https://egghead.io/courses/the-beginner-s-guide-to-react)을 수강해보세요.\n4. 여러분이 사용할 도구들에 익숙해지세요.\n   1. 패키지 관리\n      - [npm](https://www.npmjs.com/)\n      - [yarn](https://yarnpkg.com/lang/en/)\n      - [pnpm](https://pnpm.js.org/)\n   2. 태스크 러너\n      - [npm scripts](https://docs.npmjs.com/misc/scripts)\n      - [gulp](https://gulpjs.com/)\n   - [Webpack](https://webpack.js.org/)\n   - [Rollup](https://rollupjs.org/guide/en)\n   - [Parcel](https://parceljs.org/)\n5. 스타일링\n   1. CSS 전처리기\n      - [Sass/CSS](https://sass-lang.com/)\n      - [PostCSS](https://postcss.org/)\n      - [Less](http://lesscss.org/)\n      - [Stylus](http://stylus-lang.com/)\n   2. CSS 프레임워크\n      - [Bootstrap](https://getbootstrap.com/)\n      - [Materialize](https://materializecss.com/), [Material UI](https://material-ui.com/), [Material Design Lite](https://getmdl.io/)\n      - [Bulma](https://bulma.io/)\n      - [Semantic UI](https://semantic-ui.com/)\n   3. CSS 설계\n      - [BEM](http://getbem.com/)\n      - [CSS Modules](https://github.com/css-modules/css-modules)\n      - [Atomic](https://acss.io/)\n      - [OOCSS](https://github.com/stubbornella/oocss/wiki)\n      - [SMACSS](https://smacss.com/)\n      - [SUITCSS](https://suitcss.github.io/)\n   4. CSS in JS\n      - [Styled Components](https://www.styled-components.com/)\n      - [Radium](https://formidable.com/open-source/radium/)\n      - [Emotion](https://emotion.sh/)\n      - [JSS](http://cssinjs.org/)\n      - [Aphrodite](https://github.com/Khan/aphrodite)\n6. 상태관리\n   1. [컴포넌트 상태관리](https://reactjs.org/docs/faq-state.html)/[Context API](https://reactjs.org/docs/context.html)\n   2. [Redux](https://redux.js.org/)\n      1. 비동기 액션 (사이드 이펙트)\n         - [Redux Thunk](https://github.com/reduxjs/redux-thunk)\n         - [Redux Better Promise](https://github.com/Lukasz-pluszczewski/redux-better-promise)\n         - [Redux Saga](https://redux-saga.js.org/)\n         - [Redux Observable](https://redux-observable.js.org)\n      2. 헬퍼 라이브러리\n         - [Rematch](https://rematch.gitbooks.io/rematch/)\n         - [Reselect](https://github.com/reduxjs/reselect)\n      3. 데이터 지속성\n         - [Redux Persist](https://github.com/rt2zz/redux-persist)\n         - [Redux Phoenix](https://github.com/adam-golab/redux-phoenix)\n      4. [Redux Form](https://redux-form.com)\n   3. [MobX](https://mobx.js.org/)\n7. 정적 타입 체킹\n   - [PropTypes](https://reactjs.org/docs/typechecking-with-proptypes.html)\n   - [TypeScript](https://www.typescriptlang.org/)\n   - [Flow](https://flow.org/en/)\n8. 폼(Form) 헬퍼\n   - [Redux Form](https://redux-form.com)\n   - [Formik](https://github.com/jaredpalmer/formik)\n   - [Formsy](https://github.com/formsy/formsy-react)\n   - [Final Form](https://github.com/final-form/final-form)\n9. 라우팅\n   - [React-Router](https://reacttraining.com/react-router/)\n   - [Router5](https://router5.js.org/)\n   - [Redux-First Router](https://github.com/faceyspacey/redux-first-router)\n   - [Reach Router](https://reach.tech/router/)\n10. API 클라이언트\n    1. REST\n       - [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n       - [SuperAgent](https://visionmedia.github.io/superagent/)\n       - [axios](https://github.com/axios/axios)\n    2. GraphQL\n       - [Apollo](https://www.apollographql.com/docs/react/)\n       - [Relay](https://facebook.github.io/relay/)\n       - [urql](https://github.com/FormidableLabs/urql)\n11. 유틸리티 라이브러리\n    - [Lodash](https://lodash.com/)\n    - [Moment](https://momentjs.com/)\n    - [classnames](https://github.com/JedWatson/classnames)\n    - [Numeral](http://numeraljs.com/)\n    - [RxJS](http://reactivex.io/)\n    - [ImmutableJS](https://facebook.github.io/immutable-js/)\n    - [Ramda](https://ramdajs.com/)\n12. 테스팅\n    1. 유닛 테스팅\n       - [Jest](https://facebook.github.io/jest/)\n       - [Enzyme](http://airbnb.io/enzyme/)\n       - [Sinon](http://sinonjs.org/)\n       - [Mocha](https://mochajs.org/)\n       - [Chai](http://www.chaijs.com/)\n       - [AVA](https://github.com/avajs/ava)\n       - [Tape](https://github.com/substack/tape)\n    2. End to End 테스팅\n       - [Selenium](https://www.seleniumhq.org/), [Webdriver](http://webdriver.io/)\n       - [Cypress](https://cypress.io/)\n       - [Puppeteer](https://pptr.dev/)\n       - [Cucumber.js](https://github.com/cucumber/cucumber-js)\n       - [Nightwatch.js](http://nightwatchjs.org/)\n    3. 통합 테스팅\n       - [Karma](https://karma-runner.github.io/)\n13. 국제화\n    - [React Intl](https://github.com/yahoo/react-intl)\n    - [React i18next](https://react.i18next.com/)\n14. 서버사이드 렌더링\n    - [Next.js](https://nextjs.org/)\n    - [After.js](https://github.com/jaredpalmer/after.js)\n    - [Rogue](https://github.com/alidcastano/rogue.js)\n15. 정적 사이트 생성기\n    - [Gatsby](https://www.gatsbyjs.org/)\n16. 백엔드 프레임워크 통합\n    - [React on Rails](https://shakacode.gitbooks.io/react-on-rails/content/)\n17. 모바일\n    - [React Native](https://facebook.github.io/react-native/)\n    - [Cordova](https://cordova.apache.org/)/[Phonegap](https://phonegap.com/)\n18. 데스크탑\n    - [Proton Native](https://proton-native.js.org/)\n    - [Electron](https://electronjs.org/)\n    - [React Native Windows](https://github.com/Microsoft/react-native-windows)\n19. 가상현실 (VR)\n    - [React 360](https://facebook.github.io/react-360/)\n\n## 마무리\n\n이 로드맵에 개선이 필요하면 수정사항을 포함한 PR을 보내주시거나 이슈에 의견을 남겨주세요. 저 또한 이것을 계속 개선하려고 노력 중에 있으니, 여러분께서도 다시 찾아오시기 쉽도록 Star을 부탁드립니다.\n\n## 컨트리뷰션\n\n이 로드맵은 [Draw.io](https://www.draw.io/)를 사용하여 작성되었습니다. 프로젝트 파일들은 `/src` 디렉토리에 있습니다. 수정하기 위해선 draw.io를 열어서, **Open Existing Diagram** 를 누르시고 프로젝트 내의 `xml` 파일을 선택해주세요. 로드맵 파일이 열릴 것입니다. 수정하시고, readme의 image 파일을 변경해주시고 PR을 만들어주세요. (png 파일로 내보내기 해주세요).\n\n- 수정 / 개선사항과 함께 Pull Request를 남겨주세요.\n- Issues에서 의견을 나눠주세요.\n- 다른 사람들에게도 알려주세요.\n\n## 라이센스\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "README-PTBR.md",
          "type": "blob",
          "size": 8.5703125,
          "content": "# Guia do desenvolvedor React\n\n[README in Chinese](README-CN.md)\n\n[README in English](README.md)\n\n[README in Japanese](README-JA.md)\n\n[README in Korean](README-KO.md)\n\n[README in Russian](README-RU.md)\n\n[README in Spanish](README-ES.md)\n\n> Guia para se tornar um desenvolvedor React em 2019:\n> Abaixo, você pode encontrar um diagrama mostrando os caminhos que podem levar, bem como as bibliotecas que você precisa aprender para se tornar um desenvolvedor React. Eu fiz esse esquema como uma dica para qualquer um que me perguntasse: \"O que eu deveria aprender mais como desenvolvedor React?\"\n\n## Aviso\n\n> O objetivo deste guia é dar uma ideia geral de como se tornar um desenvolvedor React. Este guia irá ajudá-lo se você estiver confuso sobre o que estudar, em vez de encorajá-lo a escolher algo elegante e popular. Você deve entender gradualmente por que uma ferramenta é mais adequada para determinadas situações do que outra, e não se esqueça de que uma ferramenta moderna e popular nem sempre significa que ela é mais adequada para o trabalho.\n\n## Roadmap\n\n![Roadmap](./roadmap-ptbr.png)\n\n## Recursos\n\n1. Basico\n   1. HTML\n      - Aprenda o básico do HTML\n      - Desenvolva algumas paginas como exercícios\n   2. CSS\n      - Aprenda o básico de CSS\n      - Aplique estilos nas páginas desenvolvidas anteriormente\n      - Desenvolva uma página com CSS Grid e CSS Flexbox\n   3. Javascript\n      - Se familiarize com a sintaxe\n      - Aprenda operações basicas com o DOM\n      - Aprenda mecanismos típicos para JS (Hoisting, Event Bubbling, Prototyping)\n      - Faça algumas requisições AJAX\n      - Aprenda as novas features do javascript (ECMA Script 6+)\n      - Opcional: Conheça a biblioteca JQuery\n2. Conhecimentos de desenvolvimento em geral\n   1. Aprenda GIT, crie repositórios no GitHub e compartilhe seu código com outras pessoas.\n   2. Aprenda os protocolos HTTP(S) e metodos de request (GET, POST, PUT, PATCH, DELETE, OPTIONS)\n   3. Não tenha medo de utilizar o google, veja [o uso avançado do Google](http://www.powersearchingwithgoogle.com/)\n   4. Familiarize-se com terminal e configure-o (bash, zsh, fish)\n   5. Leia alguns livros sobre algoritmos e estrutura de dados\n   6. Leia alguns livros sobre padrões de projeto (design patterns)\n3. Aprenda React no [site oficial](https://reactjs.org/tutorial/tutorial.html) ou realize alguns [cursos](https://egghead.io/courses/the-beginner-s-guide-to-react)\n4. Conheça as ferramentas que voce usará\n   1. Gerenciadores de pacote\n      - [npm](https://www.npmjs.com/)\n      - [yarn](https://yarnpkg.com/lang/en/)\n      - [pnpm](https://pnpm.js.org/)\n   2. Executadores de tarefas\n      - [npm scripts](https://docs.npmjs.com/misc/scripts)\n      - [gulp](https://gulpjs.com/)\n   - [Webpack](https://webpack.js.org/)\n   - [Rollup](https://rollupjs.org/guide/en)\n   - [Parcel](https://parceljs.org/)\n5. Estilização\n   1. Pré-processadores CSS\n      - [Sass/CSS](https://sass-lang.com/)\n      - [PostCSS](https://postcss.org/)\n      - [Less](http://lesscss.org/)\n      - [Stylus](http://stylus-lang.com/)\n   2. Frameworks CSS\n      - [Bootstrap](https://getbootstrap.com/)\n      - [Materialize](https://materializecss.com/), [Material UI](https://material-ui.com/), [Material Design Lite](https://getmdl.io/)\n      - [Bulma](https://bulma.io/)\n      - [Semantic UI](https://semantic-ui.com/)\n   3. Arquitetura CSS\n      - [BEM](http://getbem.com/)\n      - [CSS Modules](https://github.com/css-modules/css-modules)\n      - [Atomic](https://acss.io/)\n      - [OOCSS](https://github.com/stubbornella/oocss/wiki)\n      - [SMACSS](https://smacss.com/)\n      - [SUITCSS](https://suitcss.github.io/)\n   4. CSS in JS\n      - [Styled Components](https://www.styled-components.com/)\n      - [Radium](https://formidable.com/open-source/radium/)\n      - [Emotion](https://emotion.sh/)\n      - [JSS](http://cssinjs.org/)\n      - [Aphrodite](https://github.com/Khan/aphrodite)\n6. Gerenciamento de estado\n   1. [Component State](https://reactjs.org/docs/faq-state.html)/[Context API](https://reactjs.org/docs/context.html)\n   2. [Redux](https://redux.js.org/)\n      1. Async actions (Side Effects)\n         - [Redux Thunk](https://github.com/reduxjs/redux-thunk)\n         - [Redux Better Promise](https://github.com/Lukasz-pluszczewski/redux-better-promise)\n         - [Redux Saga](https://redux-saga.js.org/)\n         - [Redux Observable](https://redux-observable.js.org)\n      2. Helpers\n         - [Rematch](https://rematch.gitbooks.io/rematch/)\n         - [Reselect](https://github.com/reduxjs/reselect)\n      3. Persistencia de dados\n         - [Redux Persist](https://github.com/rt2zz/redux-persist)\n         - [Redux Phoenix](https://github.com/adam-golab/redux-phoenix)\n      4. [Redux Form](https://redux-form.com)\n   3. [MobX](https://mobx.js.org/)\n7. Tipagem\n   - [PropTypes](https://reactjs.org/docs/typechecking-with-proptypes.html)\n   - [TypeScript](https://www.typescriptlang.org/)\n   - [Flow](https://flow.org/en/)\n8. Form Helpers\n   - [Redux Form](https://redux-form.com)\n   - [Formik](https://github.com/jaredpalmer/formik)\n   - [Formsy](https://github.com/formsy/formsy-react)\n   - [Final Form](https://github.com/final-form/final-form)\n9. Rotas\n   - [React-Router](https://reacttraining.com/react-router/)\n   - [Router5](https://router5.js.org/)\n   - [Redux-First Router](https://github.com/faceyspacey/redux-first-router)\n   - [Reach Router](https://reach.tech/router/)\n10. Clientes API\n    1. REST\n       - [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n       - [SuperAgent](https://visionmedia.github.io/superagent/)\n       - [axios](https://github.com/axios/axios)\n    2. GraphQL\n       - [Apollo](https://www.apollographql.com/docs/react/)\n       - [Relay](https://facebook.github.io/relay/)\n       - [urql](https://github.com/FormidableLabs/urql)\n11. Bibliotecas uteis\n    - [Lodash](https://lodash.com/)\n    - [Moment](https://momentjs.com/)\n    - [classnames](https://github.com/JedWatson/classnames)\n    - [Numeral](http://numeraljs.com/)\n    - [RxJS](http://reactivex.io/)\n    - [ImmutableJS](https://facebook.github.io/immutable-js/)\n    - [Ramda](https://ramdajs.com/)\n12. Testes\n    1. Teste unitário\n       - [Jest](https://facebook.github.io/jest/)\n       - [Enzyme](http://airbnb.io/enzyme/)\n       - [Sinon](http://sinonjs.org/)\n       - [Mocha](https://mochajs.org/)\n       - [Chai](http://www.chaijs.com/)\n       - [AVA](https://github.com/avajs/ava)\n       - [Tape](https://github.com/substack/tape)\n    2. Teste end-to-end\n       - [Selenium](https://www.seleniumhq.org/), [Webdriver](http://webdriver.io/)\n       - [Cypress](https://cypress.io/)\n       - [Puppeteer](https://pptr.dev/)\n       - [Cucumber.js](https://github.com/cucumber/cucumber-js)\n       - [Nightwatch.js](http://nightwatchjs.org/)\n    3. Teste de integração\n       - [Karma](https://karma-runner.github.io/)\n13. Internacionalização\n    - [React Intl](https://github.com/yahoo/react-intl)\n    - [React i18next](https://react.i18next.com/)\n14. Renderização no servidor\n    - [Next.js](https://nextjs.org/)\n    - [After.js](https://github.com/jaredpalmer/after.js)\n    - [Rogue](https://github.com/alidcastano/rogue.js)\n15. Gerador de site estático\n    - [Gatsby](https://www.gatsbyjs.org/)\n16. Integração com estrturas de backend\n    - [React on Rails](https://shakacode.gitbooks.io/react-on-rails/content/)\n17. Desenvolvimento de aplicativos móveis\n    - [React Native](https://facebook.github.io/react-native/)\n    - [Cordova](https://cordova.apache.org/)/[Phonegap](https://phonegap.com/)\n18. Desenvolvimento de aplicativos desktop\n    - [Proton Native](https://proton-native.js.org/)\n    - [Electron](https://electronjs.org/)\n    - [React Native Windows](https://github.com/Microsoft/react-native-windows)\n19. Realidade virtual\n    - [React 360](https://facebook.github.io/react-360/)\n\n## Resumo\n\nSe você acha que o guia pode ser melhorado, envie um PR com quaisquer atualizações e envie suas dúvidas. Além disso, continuarei a melhorar este repositório, então, favorite esse repositório para sempre revisitar.\n\n## Contribuição\n\nO guia foi criado com a ferramenta online [Draw.io](https://www.draw.io/). O arquivo do projeto pode ser encontrado no diretório `/src`. Para alterá-lo, abra o draw.io, clique em **Open Existing Diagram** e selecione o arquivo `xml`. Ele irá abrir o guia. Atualize o guia, faça update das imagens no readme (exporte como png) e crie um PR.\n\n- Abra pull request com melhorias\n- Discuta novas ideias nas issues\n- Compartilhe esse repositorio\n\n## Licença\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "README-RU.md",
          "type": "blob",
          "size": 11.5283203125,
          "content": "# План становления React-разработчиком\n\n[README in Chinese](README-CN.md)\n\n[README in English](README.md)\n\n[README in Japanese](README-JA.md)\n\n[README in Korean](README-KO.md)\n\n[README in Portuguese (Brazil)](README-PTBR.md)\n\n[README in Spanish](README-ES.md)\n\n> План, чтобы стать React-разработчиком в 2019 году:\n\nНиже вы можете найти схему, показывающую пути, которые могут привести, а также библиотеки, которые вам нужно изучить, чтобы стать разработчиком React. Я сделал эту схему в качестве подсказки для всех, кто спрашивает меня: «Что мне стоит изучить ещё в качестве React-разработчика?»\n\n## Предупреждение\n\n> Цель этого плана — дать вам общее представление о том, как стать React-разработчиком. Этот план поможет вам, если вы запутались, что изучать дальше, вместо того, чтобы поощрять вас выбирать что-то модное и популярное. Вам стоит постепенно понимать, почему один инструмент лучше подходит для определённых ситуаций, чем другой, и не забывать, что модный и популярный инструмент не всегда означает, что он лучше всего подходит для работы.\n\n## План изучения\n\n![План изучения](./roadmap-ru.png)\n\n## Ресурсы\n\n1. Основы\n    1. HTML\n        * Изучить основы HTML\n        * Сделать несколько страниц в качестве упражнения\n    2. CSS\n        * Изучить основы CSS\n        * Стилизовать страницы, созданные в предыдущем шаге\n        * Создать страницу с использованием сеток и флексбокса\n    3. Основы JS\n        * Познакомиться с синтаксисом\n        * Изучить основные операции на DOM\n        * Изучить механизмы, специфичные для JS (Поднятие, всплытие событий, прототипное наследование)\n        * Выполнить некоторые AJAX-вызовы (XHR)\n        * Изучить новые возможности (ECMAScript 6+)\n        * Дополнительно познакомиться с библиотекой jQuery\n2. Общие навыки для разработки\n    1. Изучить Git, создать несколько репозиториев на GitHub, поделиться своим кодом с другими\n    2. Узнать о протоколе HTTP(S), методами запроса (GET, POST, PUT, PATCH, DELETE, OPTIONS)\n    3. Не бояться использовать Google, посмотреть [курс по продвинутому использованию Google](http://www.powersearchingwithgoogle.com/)\n    4. Познакомиться с терминалом, настроить оболочку (bash, zsh, fish)\n    5. Прочитать несколько книг про алгоритмы и структуры данных\n    6. Прочитать несколько книг по паттернам проектирования\n3. Изучить [официальный сайт React](https://reactjs.org/tutorial/tutorial.html), пройти [курсы](https://egghead.io/courses/the-beginner-s-guide-to-react) или прочитать [книги](https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books-ru.md#react)\n4. Познакомиться с инструментами, которые вы будете использовать\n    1. Менеджеры пакетов\n        * [npm](https://www.npmjs.com/)\n        * [yarn](https://yarnpkg.com/lang/en/)\n        * [pnpm](https://pnpm.js.org/)\n    2. Выполнение задач\n        * [npm-скрипты](https://docs.npmjs.com/misc/scripts)\n        * [gulp](https://gulpjs.com/)\n    * [Webpack](https://webpack.js.org/)\n    * [Rollup](https://rollupjs.org/guide/en)\n    * [Parcel](https://parceljs.org/)\n5. Стилизация\n    1. CSS-препроцессоры\n        * [Sass/CSS](https://sass-lang.com/)\n        * [PostCSS](https://postcss.org/)\n        * [Less](http://lesscss.org/)\n        * [Stylus](http://stylus-lang.com/)\n    2. CSS-фреймворки\n        * [Bootstrap](https://getbootstrap.com/)\n        * [Materialize](https://materializecss.com/), [Material UI](https://material-ui.com/), [Material Design Lite](https://getmdl.io/)\n        * [Bulma](https://bulma.io/)\n        * [Semantic UI](https://semantic-ui.com/)\n    3. Архитектура CSS\n        * [BEM](http://getbem.com/)\n        * [CSS Modules](https://github.com/css-modules/css-modules)\n        * [Atomic](https://acss.io/)\n        * [OOCSS](https://github.com/stubbornella/oocss/wiki)\n        * [SMACSS](https://smacss.com/)\n        * [SUITCSS](https://suitcss.github.io/)\n    4. CSS в JS\n        * [Styled Components](https://www.styled-components.com/)\n        * [Radium](https://formidable.com/open-source/radium/)\n        * [Emotion](https://emotion.sh/)\n        * [JSS](http://cssinjs.org/)\n        * [Aphrodite](https://github.com/Khan/aphrodite)\n6. Управление состоянием\n    1. [Состояние компонента](https://reactjs.org/docs/faq-state.html)/[Context API](https://reactjs.org/docs/context.html)\n    2. [Redux](https://redux.js.org/)\n        1. Асинхронные действия (побочные эффекты)\n            * [Redux Thunk](https://github.com/reduxjs/redux-thunk)\n            * [Redux Better Promise](https://github.com/Lukasz-pluszczewski/redux-better-promise)\n            * [Redux Saga](https://redux-saga.js.org/)\n            * [Redux Observable](https://redux-observable.js.org)\n        2. Библиотеки-помощники\n            * [Rematch](https://rematch.gitbooks.io/rematch/)\n            * [Reselect](https://github.com/reduxjs/reselect)\n        3. Постоянное хранение данных\n            * [Redux Persist](https://github.com/rt2zz/redux-persist)\n            * [Redux Phoenix](https://github.com/adam-golab/redux-phoenix)\n        4. [Redux Form](https://redux-form.com)\n    3. [MobX](https://mobx.js.org/)\n7. Проверка типов\n    * [PropTypes](https://reactjs.org/docs/typechecking-with-proptypes.html)\n    * [TypeScript](https://www.typescriptlang.org/)\n    * [Flow](https://flow.org/en/)\n8. Вспомогательные библиотеки для форм\n    * [Redux Form](https://redux-form.com)\n    * [Formik](https://github.com/jaredpalmer/formik)\n    * [Formsy](https://github.com/formsy/formsy-react)\n    * [Final Form](https://github.com/final-form/final-form)\n9. Маршрутизация\n    * [React-Router](https://reacttraining.com/react-router/)\n    * [Router5](https://router5.js.org/)\n    * [Redux-First Router](https://github.com/faceyspacey/redux-first-router)\n    * [Reach Router](https://reach.tech/router/)\n10. API-клиенты\n    1. REST\n        * [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n        * [SuperAgent](https://visionmedia.github.io/superagent/)\n        * [axios](https://github.com/axios/axios)\n    2. GraphQL\n        * [Apollo](https://www.apollographql.com/docs/react/)\n        * [Relay](https://facebook.github.io/relay/)\n        * [urql](https://github.com/FormidableLabs/urql)\n11. Утилитарные библиотеки\n    * [Lodash](https://lodash.com/)\n    * [Moment](https://momentjs.com/)\n    * [classnames](https://github.com/JedWatson/classnames)\n    * [Numeral](http://numeraljs.com/)\n    * [RxJS](http://reactivex.io/)\n    * [ImmutableJS](https://facebook.github.io/immutable-js/)\n    * [Ramda](https://ramdajs.com/)\n12. Тестирование\n    1. Модульное тестирование\n        * [Jest](https://facebook.github.io/jest/)\n        * [Enzyme](http://airbnb.io/enzyme/)\n        * [Sinon](http://sinonjs.org/)\n        * [Mocha](https://mochajs.org/)\n        * [Chai](http://www.chaijs.com/)\n        * [AVA](https://github.com/avajs/ava)\n        * [Tape](https://github.com/substack/tape)\n    2. Сквозное (end-to-end) тестирование\n        * [Selenium](https://www.seleniumhq.org/), [Webdriver](http://webdriver.io/)\n        * [Cypress](https://cypress.io/)\n        * [Puppeteer](https://pptr.dev/)\n        * [Cucumber.js](https://github.com/cucumber/cucumber-js)\n        * [Nightwatch.js](http://nightwatchjs.org/)\n    3. Интеграционное тестирование\n        * [Karma](https://karma-runner.github.io/)\n13. Локализация\n    * [React Intl](https://github.com/yahoo/react-intl)\n    * [React i18next](https://react.i18next.com/)\n14. Отрисовка на стороне сервера\n    * [Next.js](https://nextjs.org/)\n    * [After.js](https://github.com/jaredpalmer/after.js)\n    * [Rogue](https://github.com/alidcastano/rogue.js)\n15. Генератор статических сайтов\n    * [Gatsby](https://www.gatsbyjs.org/)\n16. Интеграция с бэкенд-фреймворками\n    * [React on Rails](https://shakacode.gitbooks.io/react-on-rails/content/)\n17. Разработка мобильных приложений\n    * [React Native](https://facebook.github.io/react-native/)\n    * [Cordova](https://cordova.apache.org/)/[Phonegap](https://phonegap.com/)\n18. Разработка десктопных приложений\n    * [Proton Native](https://proton-native.js.org/)\n    * [Electron](https://electronjs.org/)\n    * [React Native Windows](https://github.com/Microsoft/react-native-windows)\n19. Виртуальная реальность\n    * [React 360](https://facebook.github.io/react-360/)\n\n## Резюме\n\nЕсли вы считаете, что план может быть улучшен, пожалуйста, создайте пулреквест с любыми обновлениями и отправляйте любые ишью, если есть вопросы и предложения. Кроме того, я продолжу улучшать его, так что, возможно, стоит отслеживать изменения, происходящие в этом репозитории, либо заглянуть в него спустя некоторое время.\n\n## Участие в проекте\n\nПлан создан с помощью онлайн-инструмента [Draw.io](https://www.draw.io/). Файл проекта можно найти в каталоге `/src`. Чтобы изменить его, откройте draw.io, нажмите **Open Existing Diagram** и выберите файл `xml` с проектом. Он откроет схему, обновите её, загрузите и обновите изображения в readme и создайте PR (экспортируйте как png).\n\n- Открыть пулреквест с улучшениями\n- Обсуждайте новые идеи в ишью\n- Расскажите об этом другим\n\n## Лицензия\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.2890625,
          "content": "# React Developer Roadmap\n\n[README in Chinese](README-CN.md)\n\n[README in Japanese](README-JA.md)\n\n[README in Korean](README-KO.md)\n\n[README in Portuguese (Brazil)](README-PTBR.md)\n\n[README in Russian](README-RU.md)\n\n[README in Spanish](README-ES.md)\n\n> Roadmap to becoming a React developer in 2019:\n\nBelow you can find a chart demonstrating the paths that you can take and the libraries that you would want to learn to become a React developer. I made this chart as a tip for everyone who asks me, \"What should I learn next as a React developer?\"\n\n## Disclaimer\n> The purpose of this roadmap is to give you an idea about the landscape. The road map will guide you if you are confused about what to learn next, rather than encouraging you to pick what is hip and trendy. You should grow some understanding of why one tool would be better suited for some cases than the other and remember hip and trendy does not always mean best suited for the job\n\n## Roadmap\n\n![Roadmap](./roadmap.png)\n\n## Resources\n\n1. Basics\n    1. HTML\n        * Learn the basics of HTML\n        * Make a few pages as an exercise\n    2. CSS\n        * Learn the basics of CSS\n        * Style pages from previous step\n        * Build a page with grid and flexbox\n    3. JS Basics\n        * Get familiar with the syntax\n        * Learn basic operations on DOM\n        * Learn mechanisms typical for JS (Hoisting, Event Bubbling, Prototyping)\n        * Make some AJAX (XHR) calls\n        * Learn new features (ECMA Script 6+)\n        * Additionally, get familiar with the jQuery library\n2. General Development Skills\n    1. Learn GIT, create a few repositories on GitHub, share your code with other people\n    2. Know HTTP(S) protocol, request methods (GET, POST, PUT, PATCH, DELETE, OPTIONS)\n    3. Don't be afraid of using Google, [Power Searching with Google](http://www.powersearchingwithgoogle.com/)\n    4. Get familiar with terminal, configure your shell (bash, zsh, fish)\n    5. Read a few books about algorithms and data structures\n    6. Read a few books about design patterns\n3. Learn React on [official website](https://reactjs.org/tutorial/tutorial.html) or complete some [courses](https://egghead.io/courses/the-beginner-s-guide-to-react)\n4. Get familiar with tools that you will be using\n    1. Package Managers\n        * [npm](https://www.npmjs.com/)\n        * [yarn](https://yarnpkg.com/lang/en/)\n        * [pnpm](https://pnpm.js.org/)\n    2. Task Runners\n        * [npm scripts](https://docs.npmjs.com/misc/scripts)\n        * [gulp](https://gulpjs.com/)\n    * [Webpack](https://webpack.js.org/)\n    * [Rollup](https://rollupjs.org/guide/en)\n    * [Parcel](https://parceljs.org/)\n5. Styling\n    1. CSS Preprocessor\n        * [Sass/CSS](https://sass-lang.com/)\n        * [PostCSS](https://postcss.org/)\n        * [Less](http://lesscss.org/)\n        * [Stylus](http://stylus-lang.com/)\n    2. CSS Frameworks\n        * [Bootstrap](https://getbootstrap.com/)\n        * [Materialize](https://materializecss.com/), [Material UI](https://material-ui.com/), [Material Design Lite](https://getmdl.io/)\n        * [Bulma](https://bulma.io/)\n        * [Semantic UI](https://semantic-ui.com/)\n    3. CSS Architecture\n        * [BEM](http://getbem.com/)\n        * [CSS Modules](https://github.com/css-modules/css-modules)\n        * [Atomic](https://acss.io/)\n        * [OOCSS](https://github.com/stubbornella/oocss/wiki)\n        * [SMACSS](https://smacss.com/)\n        * [SUITCSS](https://suitcss.github.io/)\n    4. CSS in JS\n        * [Styled Components](https://www.styled-components.com/)\n        * [Radium](https://formidable.com/open-source/radium/)\n        * [Emotion](https://emotion.sh/)\n        * [JSS](http://cssinjs.org/)\n        * [Aphrodite](https://github.com/Khan/aphrodite)\n6. State Management\n    1. [Component State](https://reactjs.org/docs/faq-state.html)/[Context API](https://reactjs.org/docs/context.html)\n    2. [Redux](https://redux.js.org/)\n        1. Async actions (Side Effects)\n            * [Redux Thunk](https://github.com/reduxjs/redux-thunk)\n            * [Redux Better Promise](https://github.com/Lukasz-pluszczewski/redux-better-promise)\n            * [Redux Saga](https://redux-saga.js.org/)\n            * [Redux Observable](https://redux-observable.js.org)\n        2. Helpers\n            * [Rematch](https://rematch.gitbooks.io/rematch/)\n            * [Reselect](https://github.com/reduxjs/reselect)\n        3. Data persistence\n            * [Redux Persist](https://github.com/rt2zz/redux-persist)\n            * [Redux Phoenix](https://github.com/adam-golab/redux-phoenix)\n        4. [Redux Form](https://redux-form.com)\n    3. [MobX](https://mobx.js.org/)\n7. Type Checkers\n    * [PropTypes](https://reactjs.org/docs/typechecking-with-proptypes.html)\n    * [TypeScript](https://www.typescriptlang.org/)\n    * [Flow](https://flow.org/en/)\n8. Form Helpers\n    * [Redux Form](https://redux-form.com)\n    * [Formik](https://github.com/jaredpalmer/formik)\n    * [Formsy](https://github.com/formsy/formsy-react)\n    * [Final Form](https://github.com/final-form/final-form)\n9. Routing\n    * [React-Router](https://reacttraining.com/react-router/)\n    * [Router5](https://router5.js.org/)\n    * [Redux-First Router](https://github.com/faceyspacey/redux-first-router)\n    * [Reach Router](https://reach.tech/router/)\n10. API Clients\n    1. REST\n        * [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n        * [SuperAgent](https://visionmedia.github.io/superagent/)\n        * [axios](https://github.com/axios/axios)\n    2. GraphQL\n        * [Apollo](https://www.apollographql.com/docs/react/)\n        * [Relay](https://facebook.github.io/relay/)\n        * [urql](https://github.com/FormidableLabs/urql)\n11. Utility Libraries\n    * [Lodash](https://lodash.com/)\n    * [Moment](https://momentjs.com/)\n    * [classnames](https://github.com/JedWatson/classnames)\n    * [Numeral](http://numeraljs.com/)\n    * [RxJS](http://reactivex.io/)\n    * [ImmutableJS](https://facebook.github.io/immutable-js/)\n    * [Ramda](https://ramdajs.com/)\n12. Testing\n    1. Unit Testing\n        * [Jest](https://facebook.github.io/jest/)\n        * [Enzyme](http://airbnb.io/enzyme/)\n        * [Sinon](http://sinonjs.org/)\n        * [Mocha](https://mochajs.org/)\n        * [Chai](http://www.chaijs.com/)\n        * [AVA](https://github.com/avajs/ava)\n        * [Tape](https://github.com/substack/tape)\n    2. End to End Testing\n        * [Selenium](https://www.seleniumhq.org/), [Webdriver](http://webdriver.io/)\n        * [Cypress](https://cypress.io/)\n        * [Puppeteer](https://pptr.dev/)\n        * [Cucumber.js](https://github.com/cucumber/cucumber-js)\n        * [Nightwatch.js](http://nightwatchjs.org/)\n    3. Integration Testing\n        * [Karma](https://karma-runner.github.io/)\n13. Internationalization\n    * [React Intl](https://github.com/yahoo/react-intl)\n    * [React i18next](https://react.i18next.com/)\n14. Server Side Rendering\n    * [Next.js](https://nextjs.org/)\n    * [After.js](https://github.com/jaredpalmer/after.js)\n    * [Rogue](https://github.com/alidcastano/rogue.js)\n15. Static Site Generator\n    * [Gatsby](https://www.gatsbyjs.org/)\n16. Backend Framework Integration\n    * [React on Rails](https://shakacode.gitbooks.io/react-on-rails/content/)\n17. Mobile\n    * [React Native](https://facebook.github.io/react-native/)\n    * [Cordova](https://cordova.apache.org/)/[Phonegap](https://phonegap.com/)\n18. Desktop\n    * [Proton Native](https://proton-native.js.org/)\n    * [Electron](https://electronjs.org/)\n    * [React Native Windows](https://github.com/Microsoft/react-native-windows)\n19. Virtual Reality\n    * [React 360](https://facebook.github.io/react-360/)\n\n## Wrap Up\n\nIf you think the roadmap can be improved, please do open a PR with any updates and submit any issues. Also, I will continue to improve this, so you might want to star this repository to revisit.\n\n## Contribution\n\nThe roadmap is built using [Draw.io](https://www.draw.io/). Project file can be found at `/src` directory. To modify it, open draw.io, click **Open Existing Diagram** and choose `xml` file with project. It will open the roadmap for you. Update it, upload and update the images in readme and create a PR (export as png).\n\n- Open a pull request with improvements\n- Discuss ideas in issues\n- Spread the word\n\n## License\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "roadmap-cn.png",
          "type": "blob",
          "size": 569.259765625,
          "content": null
        },
        {
          "name": "roadmap-es.png",
          "type": "blob",
          "size": 363.7236328125,
          "content": null
        },
        {
          "name": "roadmap-ja.png",
          "type": "blob",
          "size": 344.8193359375,
          "content": null
        },
        {
          "name": "roadmap-ko.png",
          "type": "blob",
          "size": 367.3095703125,
          "content": null
        },
        {
          "name": "roadmap-ptbr.png",
          "type": "blob",
          "size": 857.8251953125,
          "content": null
        },
        {
          "name": "roadmap-ru.png",
          "type": "blob",
          "size": 628.95703125,
          "content": null
        },
        {
          "name": "roadmap.png",
          "type": "blob",
          "size": 580.2421875,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}