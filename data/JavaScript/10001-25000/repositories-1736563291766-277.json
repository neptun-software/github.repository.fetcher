{
  "metadata": {
    "timestamp": 1736563291766,
    "page": 277,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "academicpages/academicpages.github.io",
      "stars": 12924,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2666015625,
          "content": "# Ignore the contents of the _site directory and other cache directories\n_site/\n.sass-cache/\n\n# Ignore the directory for local files during development\nlocal/\n\n# Ignore the Gemfile that is generated\nGemfile.lock\n\n# Ingore files created by npm\nnode_modules\npackage-lock.json"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.677734375,
          "content": "Contributions are welcome! \n\nPlease add issues and make pull requests. There are no stupid questions. All ideas are welcome. This is a volunteer project. Be excellent to each other.\n\nBug reports and feature requests to the template  should be [submitted via GitHub](https://github.com/academicpages/academicpages.github.io/issues/new/choose). For questions concerning how to style the template, please feel free to start a [new discussion on GitHub](https://github.com/academicpages/academicpages.github.io/discussions).\n\nFork from master and go from there. Remember that this repository is intended to remain a generic, ready-to-fork template that demonstrates the features of academicpages.\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.595703125,
          "content": "# Base image: Ruby with necessary dependencies for Jekyll\nFROM ruby:3.2\n\n# Install dependencies\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    nodejs \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set the working directory inside the container\nWORKDIR /usr/src/app\n\n# Copy Gemfile into the container (necessary for `bundle install`)\nCOPY Gemfile ./\n\n# Install bundler and dependencies\nRUN gem install bundler:2.3.26 && bundle install\n\n# Expose port 4000 for Jekyll server\nEXPOSE 4000\n\n# Command to serve the Jekyll site\nCMD [\"bundle\", \"exec\", \"jekyll\", \"serve\", \"--host\", \"0.0.0.0\", \"--watch\"]\n\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.203125,
          "content": "source 'https://rubygems.org'\n\ngroup :jekyll_plugins do\n  gem 'jekyll'\n  gem 'jekyll-feed'\n  gem 'jekyll-sitemap'\n  gem 'jekyll-redirect-from'\n  gem 'jemoji'\n  gem 'webrick', '~> 1.8'\nend\n\ngem 'github-pages'\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Michael Rose\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4443359375,
          "content": "# Academic Pages\n**Academic Pages is a Github Pages template for academic websites.**\n\n![Academic Pages template example](images/homepage.png \"Academic Pages template example\")\n\n# Getting Started\n\n1. Register a GitHub account if you don't have one and confirm your e-mail (required!)\n1. Click the \"Use this template\" button in the top right.\n1. On the \"New repository\" page, enter your repository name as \"[your GitHub username].github.io\", which will also be your website's URL.\n1. Set site-wide configuration and add your content.\n1. Upload any files (like PDFs, .zip files, etc.) to the `files/` directory. They will appear at https://[your GitHub username].github.io/files/example.pdf.\n1. Check status by going to the repository settings, in the \"GitHub pages\" section\n1. (Optional) Use the Jupyter notebooks or python scripts in the `markdown_generator` folder to generate markdown files for publications and talks from a TSV file.\n\nSee more info at https://academicpages.github.io/\n\n## Running locally\n\nWhen you are initially working your website, it is very useful to be able to preview the changes locally before pushing them to GitHub. To work locally you will need to:\n\n1. Clone the repository and made updates as detailed above.\n1. Make sure you have ruby-dev, bundler, and nodejs installed\n    \n    On most Linux distribution and [Windows Subsystem Linux](https://learn.microsoft.com/en-us/windows/wsl/about) the command is:\n    ```bash\n    sudo apt install ruby-dev ruby-bundler nodejs\n    ```\n    On MacOS the commands are:\n    ```bash\n    brew install ruby\n    brew install node\n    gem install bundler\n    ```\n1. Run `bundle install` to install ruby dependencies. If you get errors, delete Gemfile.lock and try again.\n1. Run `jekyll serve -l -H localhost` to generate the HTML and serve it from `localhost:4000` the local server will automatically rebuild and refresh the pages on change.\n\nIf you are running on Linux it may be necessary to install some additional dependencies prior to being able to run locally: `sudo apt install build-essential gcc make`\n\n## Using Docker\n\nWorking from a different OS, or just want to avoid installing dependencies? You can use the provided `Dockerfile` to build a container that will run the site for you if you have [Docker](https://www.docker.com/) installed.\n\nStart by build the container:\n\n```bash\ndocker build -t jekyll-site .\n```\n\nNext, run the container:\n```bash\ndocker run -p 4000:4000 --rm -v $(pwd):/usr/src/app jekyll-site\n```\n\nTo run the `docker run` command on Windows, you need to adjust the syntax for the volume mapping (`-v`) as Windows uses different path formats. Here's how to run your command on Windows:\n\n### Steps for Windows:\n1. **Check Docker Installation**: Ensure Docker is installed and running.\n2. **Adjust Path for Volume Mapping**:\n\n   - On Windows, replace `$(pwd)` with the full absolute path to your current directory. For example:\n\n     ```bash\n     -v C:\\path\\to\\your\\site:/usr/src/app\n     ```\n\n### Full Command Example:\n```bash\ndocker run -p 4000:4000 --rm -v C:\\path\\to\\your\\site:/usr/src/app jekyll-site\n```\n\n### Things to Keep in Mind:\n1. **Use PowerShell**:\n   - If you are using PowerShell, you can use `${PWD}` for the current directory:\n     ```bash\n     docker run -p 4000:4000 --rm -v ${PWD}:/usr/src/app jekyll-site\n     ```\n\n2. **Enable Docker File Sharing**:\n   - If your volume doesn't map correctly, ensure Docker has access to the drive where your project resides. To do this:\n     - Open Docker Desktop.\n     - Go to *Settings* → *Resources* → *File Sharing*.\n     - Add your drive (e.g., `C:`).\n\n3. **Run in Command Prompt or PowerShell**:\n   - In *Command Prompt*:\n   \n     ```bash\n     docker run -p 4000:4000 --rm -v C:\\path\\to\\your\\site:/usr/src/app jekyll-site\n     ```\n   - In *PowerShell*:\n\n     ```bash\n     docker run -p 4000:4000 --rm -v ${PWD}:/usr/src/app jekyll-site\n     ```\n\n# Maintenance\n\nBug reports and feature requests to the template should be [submitted via GitHub](https://github.com/academicpages/academicpages.github.io/issues/new/choose). For questions concerning how to style the template, please feel free to start a [new discussion on GitHub](https://github.com/academicpages/academicpages.github.io/discussions).\n\nThis repository was forked (then detached) by [Stuart Geiger](https://github.com/staeiou) from the [Minimal Mistakes Jekyll Theme](https://mmistakes.github.io/minimal-mistakes/), which is © 2016 Michael Rose and released under the MIT License (see LICENSE.md). It is currently being maintained by [Robert Zupko](https://github.com/rjzupkoii) and additional maintainers would be welcomed.\n\n## Bugfixes and enhancements\n\nIf you have bugfixes and enhancements that you would like to submit as a pull request, you will need to [fork](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo) this repository as opposed to using it as a template. This will also allow you to [synchronize your copy](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork) of template to your fork as well.\n\nUnfortunately, one logistical issue with a template theme like Academic Pages that makes it a little tricky to get bug fixes and updates to the core theme. If you use this template and customize it, you will probably get merge conflicts if you attempt to synchronize. If you want to save your various .yml configuration files and markdown files, you can delete the repository and fork it again. Or you can manually patch.\n\n---\n<div align=\"center\">\n    \n![pages-build-deployment](https://github.com/academicpages/academicpages.github.io/actions/workflows/pages/pages-build-deployment/badge.svg)\n[![GitHub contributors](https://img.shields.io/github/contributors/academicpages/academicpages.github.io.svg)](https://github.com/academicpages/academicpages.github.io/graphs/contributors)\n[![GitHub release](https://img.shields.io/github/v/release/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/releases/latest)\n[![GitHub license](https://img.shields.io/github/license/academicpages/academicpages.github.io?color=blue)](https://github.com/academicpages/academicpages.github.io/blob/master/LICENSE)\n\n[![GitHub stars](https://img.shields.io/github/stars/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io)\n[![GitHub forks](https://img.shields.io/github/forks/academicpages/academicpages.github.io)](https://github.com/academicpages/academicpages.github.io/fork)\n</div>\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 9.5283203125,
          "content": "# Welcome to Jekyll!\n#\n# This config file is meant for settings that affect your entire site, values\n# which you are expected to set up once and rarely need to edit after that.\n# For technical reasons, this file is *NOT* reloaded automatically when you use\n# `jekyll serve -l -H localhost`. If you change this file, please restart the \n# server process.\n\n# Basic Site Settings\nlocale                   : \"en-US\"\ntitle                    : \"Your Name / Site Title\"\ntitle_separator          : \"-\"\nname                     : &name \"Your Name\"\ndescription              : &description \"personal description\"\nurl                      : https://academicpages.github.io # the base hostname & protocol for your site e.g. \"https://[your GitHub username].github.io\"\nbaseurl                  : \"\" # the subpath of your site, e.g. \"/blog\"\nrepository               : \"academicpages/academicpages.github.io\"\n\n# Site Author - The following control what appear as part of the author content on the side bar.\n#               If a field is blank the icon and link will not appear, otherwise it will be shown.\n#               Additional customization can be done by editing /_includes/author-profile.html\nauthor:\n  # Biographic information\n  avatar           : \"profile.png\"\n  name             : \"Your Sidebar Name\"\n  pronouns         : # example: \"she/her\"  \n  bio              : \"Short biography for the left-hand sidebar\"\n  location         : \"Earth\"\n  employer         : \"Red Brick University\"\n  uri              : # URL\n  email            : \"none@example.org\" \n\n  # Academic websites\n  arxiv            : # URL - Update with the correct link to your profile\n  googlescholar    : \"https://scholar.google.com/citations?user=PS_CX0AAAAAJ\"\n  impactstory      : # URL\n  orcid            : \"http://orcid.org/yourorcidurl\"\n  semantic         : # URL\n  pubmed           : \"https://www.ncbi.nlm.nih.gov/pubmed/?term=john+snow\"\n  researchgate     : # URL\n  scopus           : # URL\n\n  # Repositories and software development\n  bitbucket        : # Username - Update with your username on the site\n  codepen          : # Username\n  dribbble         : # Username\n  github           : \"academicpages\"\n  kaggle           : # Username  \n  stackoverflow    : # User number or user number and name (i.e., use \"1\" or \"1/jeff-atwood\")    \n\n  # Social media\n  bluesky          : \"bsky.app\" # Replace this with you Bluesky username\n  facebook         : # Username\n  flickr           : # Username\n  foursquare       : # Username\n  goodreads        : # Username\n  google_plus      : # Username\n  keybase          : # Username\n  instagram        : # Username\n  lastfm           : # Username\n  linkedin         : # Username\n  mastodon         : # URL\n  medium           : # URL\n  pinterest        : # Username\n  soundcloud       : # Username\n  steam            : # Username\n  telegram         : # URL\n  tumblr           : # Username\n  twitter          : # Username for X / Twitter\n  vine             : # Username\n  weibo            : # Username\n  wikipedia        : # Username\n  xing             : # Username\n  youtube          : # Username\n  zhihu            : # Username\n\n# Publication Category - The following the list of publication categories and their headings\npublication_category:\n  books:\n    title: 'Books'\n  manuscripts:\n    title: 'Journal Articles'    \n  conferences:\n    title: 'Conference Papers'\n\n# Site Settings\nteaser                   :  # filename of teaser fallback teaser image placed in /images/, .e.g. \"500x300.png\"\nbreadcrumbs              : false # true, false (default)\nwords_per_minute         : 160\nfuture                   : true\nread_more                : \"disabled\" # if enabled, adds \"Read more\" links to excerpts\ntalkmap_link             : false      #change to true to add link to talkmap on talks page\ncomments:\n  provider               : # false (default), \"disqus\", \"discourse\", \"facebook\", \"google-plus\", \"staticman\", \"custom\"\n  disqus:\n    shortname            :\n  discourse:\n    server               : # https://meta.discourse.org/t/embedding-discourse-comments-via-javascript/31963 , e.g.: meta.discourse.org\n  facebook:\n    appid                :\n    num_posts            : # 5 (default)\n    colorscheme          : # \"light\" (default), \"dark\"\nstaticman:\n  allowedFields          : ['name', 'email', 'url', 'message']\n  branch                 : \"gh-pages\" # \"master\", \"gh-pages\"\n  commitMessage          : \"New comment.\"\n  filename               : comment-{@timestamp}\n  format                 : \"yml\"\n  moderation             : true\n  path                   : \"_data/comments/{options.slug}\"\n  requiredFields         : ['name', 'email', 'message']\n  transforms:\n    email                : \"md5\"\n  generatedFields:\n    date:\n      type               : \"date\"\n      options:\n        format           : \"iso8601\" # \"iso8601\" (default), \"timestamp-seconds\", \"timestamp-milliseconds\"\natom_feed:\n  hide                   : false     # change to true to hide the RSS feed in the footer\n  path                   : # blank (default) uses feed.xml\n\n\n# SEO Related\ngoogle_site_verification :\nbing_site_verification   :\nalexa_site_verification  :\nyandex_site_verification :\n\n\n# Social Sharing\ntwitter:\n  username               : &twitter\nfacebook:\n  username               :\n  app_id                 :\n  publisher              :\nog_image                 :  # Open Graph/Twitter default site image\n# For specifying social profiles\n# - https://developers.google.com/structured-data/customize/social-profiles\nsocial:\n  type                   : # Person or Organization (defaults to Person)\n  name                   : # If the user or organization name differs from the site's name\n  links: # An array of links to social media profiles\n\n\n# Analytics\nanalytics:\n  provider               :  \"false\" # false (default), \"google\", \"google-universal\", \"google-analytics-4\", \"custom\"\n  google:\n    tracking_id          :\n\n\n# Reading Files\ninclude:\n  - .htaccess\n  - _pages\n  - files\nexclude:\n  - \"*.sublime-project\"\n  - \"*.sublime-workspace\"\n  - .asset-cache\n  - .bundle\n  - .github\n  - .jekyll-assets-cache\n  - .sass-cache\n  - assets/js/_main.js\n  - assets/js/plugins\n  - assets/js/vendor\n  - CHANGELOG\n  - Capfile\n  - config\n  - Dockerfile\n  - Gemfile\n  - Gruntfile.js\n  - gulpfile.js\n  - LICENSE\n  - local\n  - log\n  - node_modules\n  - package.json*\n  - Rakefile\n  - README\n  - tmp\n  - vendor\nkeep_files:\n  - .git\n  - .svn\nencoding: \"utf-8\"\nmarkdown_ext: \"markdown,mkdown,mkdn,mkd,md\"\n\n\n# Conversion\nmarkdown: kramdown\nhighlighter: rouge\nlsi: false\nexcerpt_separator: \"\\n\\n\"\nincremental: false\n\n\n# Markdown Processing\nkramdown:\n  input: GFM\n  hard_wrap: false\n  auto_ids: true\n  footnote_nr: 1\n  entity_output: as_char\n  toc_levels: 1..6\n  smart_quotes: lsquo,rsquo,ldquo,rdquo\n  enable_coderay: false\n\n\n# These settings control the types of collections used by the template\ncollections:\n  teaching:\n    output: true\n    permalink: /:collection/:path/\n  publications:\n    output: true\n    permalink: /:collection/:path/\n  portfolio:\n    output: true\n    permalink: /:collection/:path/\n  talks:\n    output: true\n    permalink: /:collection/:path/\n\n\n# These settings control how pages and collections are included in the site\ndefaults:\n  # _posts\n  - scope:\n      path: \"\"\n      type: posts\n    values:\n      layout: single\n      author_profile: true\n      read_time: true\n      comments: true\n      share: true\n      related: true\n  # _pages\n  - scope:\n      path: \"\"\n      type: pages\n    values:\n      layout: single\n      author_profile: true\n  # _teaching\n  - scope:\n      path: \"\"\n      type: teaching\n    values:\n      layout: single\n      author_profile: true\n      share: true\n      comments: true\n  # _publications\n  - scope:\n      path: \"\"\n      type: publications\n    values:\n      layout: single\n      author_profile: true\n      share: true\n      comments: true\n  # _portfolio\n  - scope:\n      path: \"\"\n      type: portfolio\n    values:\n      layout: single\n      author_profile: true\n      share: true\n      comment: true\n  # _talks\n  - scope:\n      path: \"\"\n      type: talks\n    values:\n      layout: talk\n      author_profile: true\n      share: true\n\n\n# Sass/SCSS\nsass:\n  sass_dir: _sass\n  style: compressed # http://sass-lang.com/documentation/file.SASS_REFERENCE.html#output_style\n\n\n# Outputting\npermalink: /:categories/:title/\n# paginate: 5 # amount of posts to show\n# paginate_path: /page:num/\ntimezone: Etc/UTC # http://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\n\n# Plugins\nplugins:\n  - jekyll-feed\n  - jekyll-gist\n  - jekyll-paginate\n  - jekyll-sitemap\n  - jekyll-redirect-from\n  - jemoji\n\n# Mimic GitHub Pages with --safe\nwhitelist:\n  - jekyll-feed\n  - jekyll-gist\n  - jekyll-paginate\n  - jekyll-sitemap\n  - jekyll-redirect-from\n  - jemoji\n\n\n# Archives\n#  Type\n#  - GitHub Pages compatible archive pages built with Liquid ~> type: liquid (default)\n#  - Jekyll Archives plugin archive pages ~> type: jekyll-archives\n#  Path (examples)\n#  - Archive page should exist at path when using Liquid method or you can\n#    expect broken links (especially with breadcrumbs enabled)\n#  - <base_path>/tags/my-awesome-tag/index.html ~> path: /tags/\n#  - <base_path/categories/my-awesome-category/index.html ~> path: /categories/\n#  - <base_path/my-awesome-category/index.html ~> path: /\ncategory_archive:\n  type: liquid\n  path: /categories/\ntag_archive:\n  type: liquid\n  path: /tags/\n# https://github.com/jekyll/jekyll-archives\n# jekyll-archives:\n#   enabled:\n#     - categories\n#     - tags\n#   layouts:\n#     category: archive-taxonomy\n#     tag: archive-taxonomy\n#   permalinks:\n#     category: /categories/:name/\n#     tag: /tags/:name/\n\n\n# HTML Compression\n# - http://jch.penibelst.de/\ncompress_html:\n  clippings: all\n  ignore:\n    envs: development\n"
        },
        {
          "name": "_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "_drafts",
          "type": "tree",
          "content": null
        },
        {
          "name": "_includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "_layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "_pages",
          "type": "tree",
          "content": null
        },
        {
          "name": "_portfolio",
          "type": "tree",
          "content": null
        },
        {
          "name": "_posts",
          "type": "tree",
          "content": null
        },
        {
          "name": "_publications",
          "type": "tree",
          "content": null
        },
        {
          "name": "_sass",
          "type": "tree",
          "content": null
        },
        {
          "name": "_talks",
          "type": "tree",
          "content": null
        },
        {
          "name": "_teaching",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "files",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "markdown_generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.271484375,
          "content": "{\n  \"name\": \"academic-pages\",\n  \"version\": \"0.8.1.1\",\n  \"description\": \"Academic Pages Mistakes Jekyll theme npm build scripts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/academicpages/academicpages.github.io\"\n  },\n  \"keywords\": [\n    \"jekyll\",\n    \"theme\",\n    \"minimal\"\n  ],\n  \"contributors\": [\n    \"Michael Rose\",\n    \"Robert Zupko\"\n  ],\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/academicpages/academicpages.github.io/issues\"\n  },\n  \"homepage\": \"https://github.com/academicpages/academicpages.github.io\",\n  \"engines\": {\n    \"node\": \">= 0.10.0\"\n  },\n  \"dependencies\": {\n    \"fitvids\": \"^2.1.1\",\n    \"jquery\": \"^3.7.1\",\n    \"jquery-smooth-scroll\": \"^2.2.0\",\n    \"magnific-popup\": \"^1.2.0\"\n  },\n  \"devDependencies\": {\n    \"onchange\": \"^7.1.0\",\n    \"uglify-js\": \"^3.17.4\"\n  },\n  \"scripts\": {\n    \"uglify\": \"uglifyjs node_modules/jquery/dist/jquery.min.js node_modules/fitvids/dist/fitvids.min.js node_modules/magnific-popup/dist/jquery.magnific-popup.min.js node_modules/jquery-smooth-scroll/jquery.smooth-scroll.min.js assets/js/plugins/jquery.greedy-navigation.js assets/js/_main.js -c -m -o assets/js/main.min.js\",\n    \"watch:js\": \"onchange \\\"assets/js/**/*.js\\\" -e \\\"assets/js/main.min.js\\\" -- npm run build:js\",\n    \"build:js\": \"npm run uglify\"\n  }\n}\n"
        },
        {
          "name": "talkmap.ipynb",
          "type": "blob",
          "size": 4.005859375,
          "content": "{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# Leaflet cluster map of talk locations\\n\",\n    \"\\n\",\n    \"Run this from the _talks/ directory, which contains .md files of all your talks. This scrapes the location YAML field from each .md file, geolocates it with geopy/Nominatim, and uses the getorg library to output data, HTML, and Javascript for a standalone cluster map.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {\n    \"collapsed\": false\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"Requirement already up-to-date: getorg in /home/vm/anaconda3/lib/python3.5/site-packages\\n\",\n      \"Requirement already up-to-date: geopy in /home/vm/.local/lib/python3.5/site-packages (from getorg)\\n\",\n      \"Requirement already up-to-date: retrying in /home/vm/.local/lib/python3.5/site-packages (from getorg)\\n\",\n      \"Requirement already up-to-date: pygithub in /home/vm/anaconda3/lib/python3.5/site-packages (from getorg)\\n\",\n      \"Requirement already up-to-date: six>=1.7.0 in /home/vm/.local/lib/python3.5/site-packages (from retrying->getorg)\\n\",\n      \"IPywidgets and ipyleaflet support enabled.\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"!pip install getorg --upgrade\\n\",\n    \"import glob\\n\",\n    \"import getorg\\n\",\n    \"from geopy import Nominatim\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {\n    \"collapsed\": false\n   },\n   \"outputs\": [],\n   \"source\": [\n    \"g = glob.glob(\\\"*.md\\\")\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 3,\n   \"metadata\": {\n    \"collapsed\": true\n   },\n   \"outputs\": [],\n   \"source\": [\n    \"geocoder = Nominatim()\\n\",\n    \"location_dict = {}\\n\",\n    \"location = \\\"\\\"\\n\",\n    \"permalink = \\\"\\\"\\n\",\n    \"title = \\\"\\\"\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 4,\n   \"metadata\": {\n    \"collapsed\": false\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"Berkeley CA, USA \\n\",\n      \" Berkeley, Alameda County, California, United States of America\\n\",\n      \"Los Angeles, CA \\n\",\n      \" LA, Los Angeles County, California, United States of America\\n\",\n      \"London, UK \\n\",\n      \" London, Greater London, England, UK\\n\",\n      \"San Francisco, California \\n\",\n      \" SF, California, United States of America\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"\\n\",\n    \"for file in g:\\n\",\n    \"    with open(file, 'r') as f:\\n\",\n    \"        lines = f.read()\\n\",\n    \"        if lines.find('location: \\\"') > 1:\\n\",\n    \"            loc_start = lines.find('location: \\\"') + 11\\n\",\n    \"            lines_trim = lines[loc_start:]\\n\",\n    \"            loc_end = lines_trim.find('\\\"')\\n\",\n    \"            location = lines_trim[:loc_end]\\n\",\n    \"                            \\n\",\n    \"           \\n\",\n    \"        location_dict[location] = geocoder.geocode(location)\\n\",\n    \"        print(location, \\\"\\\\n\\\", location_dict[location])\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"metadata\": {\n    \"collapsed\": false\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"'Written map to ../talkmap/'\"\n      ]\n     },\n     \"execution_count\": 5,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"m = getorg.orgmap.create_map_obj()\\n\",\n    \"getorg.orgmap.output_html_cluster_map(location_dict, folder_name=\\\"../talkmap\\\", hashed_usernames=False)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {\n    \"collapsed\": true\n   },\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"anaconda-cloud\": {},\n  \"kernelspec\": {\n   \"display_name\": \"Python [Root]\",\n   \"language\": \"python\",\n   \"name\": \"Python [Root]\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.5.2\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 0\n}\n"
        },
        {
          "name": "talkmap.py",
          "type": "blob",
          "size": 1.16015625,
          "content": "\n\n# # Leaflet cluster map of talk locations\n#\n# (c) 2016-2017 R. Stuart Geiger, released under the MIT license\n#\n# Run this from the _talks/ directory, which contains .md files of all your talks. \n# This scrapes the location YAML field from each .md file, geolocates it with\n# geopy/Nominatim, and uses the getorg library to output data, HTML,\n# and Javascript for a standalone cluster map.\n#\n# Requires: glob, getorg, geopy\n\nimport glob\nimport getorg\nfrom geopy import Nominatim\n\ng = glob.glob(\"*.md\")\n\n\ngeocoder = Nominatim()\nlocation_dict = {}\nlocation = \"\"\npermalink = \"\"\ntitle = \"\"\n\n\nfor file in g:\n    with open(file, 'r') as f:\n        lines = f.read()\n        if lines.find('location: \"') > 1:\n            loc_start = lines.find('location: \"') + 11\n            lines_trim = lines[loc_start:]\n            loc_end = lines_trim.find('\"')\n            location = lines_trim[:loc_end]\n                            \n           \n        location_dict[location] = geocoder.geocode(location)\n        print(location, \"\\n\", location_dict[location])\n\n\nm = getorg.orgmap.create_map_obj()\ngetorg.orgmap.output_html_cluster_map(location_dict, folder_name=\"../talkmap\", hashed_usernames=False)\n\n\n\n\n"
        },
        {
          "name": "talkmap",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}