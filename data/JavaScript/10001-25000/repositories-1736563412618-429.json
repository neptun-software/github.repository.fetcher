{
  "metadata": {
    "timestamp": 1736563412618,
    "page": 429,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "meliorence/react-native-snap-carousel",
      "stars": 10398,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.9267578125,
          "content": "{\n    \"parser\"  : \"babel-eslint\",\n    \"extends\" : [\n        \"standard\",\n        \"standard-react\"\n     ],\n     \"plugins\": [\n         \"react\"\n     ],\n    \"env\" : {\n        \"browser\" : true,\n        \"es6\": true\n    },\n    \"globals\": {\n        \"__DEV__\": false\n    },\n    \"parserOptions\": {\n        \"ecmaVersion\": 6,\n        \"ecmaFeatures\": {\n            \"jsx\": true\n        }\n    },\n    \"rules\": {\n        \"generator-star-spacing\": 0,\n        \"indent\": [2, 4, { \"ignoredNodes\": [\"JSXAttribute\", \"JSXSpreadAttribute\"], \"SwitchCase\": 1 }],\n        \"no-warning-comments\": [1, {\n            \"terms\": [\"todo\", \"fixme\", \"xxx\"],\n            \"location\": \"start\"\n        }],\n        \"operator-linebreak\": [2, \"after\"],\n        \"padded-blocks\": 0,\n        \"semi\": [2, \"always\"],\n        \"react/jsx-indent-props\": [2, 2],\n        \"react/jsx-boolean-value\": [0, \"never\"],\n        \"react/jsx-curly-spacing\": [0, \"never\"],\n        \"react/jsx-indent\": [2, 4]\n    }\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0458984375,
          "content": "node_modules\n\n#LOCK\npackage-lock.json\nyarn.lock"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0498046875,
          "content": "/example\n/node_modules\npackage-lock.json\nyarn.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 16.0166015625,
          "content": "## v3.9.1\n\n* Fix for `getNode()` deprecation warning with RN `0.62+` (thanks [@r0b0t3d](https://github.com/r0b0t3d))\n\n## v3.9.0\n\n* Fix for incorrect snapToItem (thanks [@Romick2005](https://github.com/Romick2005) & [@sergeyzhukov](https://github.com/sergeyzhukov))\n* Fix issue with tappable pagination dots (thanks [@Creskendoll](https://github.com/Creskendoll))\n* Clear all timeouts when stopping autoplay (thanks [@adrianocola](https://github.com/adrianocola))\n* Add props `animatedDuration`, `animatedFriction`, `animatedTension` and `delayPressInDot` to the `Pagination` component (thanks [@muhlenbrock](https://github.com/muhlenbrock))\n\n## v3.8.4\n\n* Remove TypeScript definitions since they were causing issues (thanks [@radko93](https://github.com/radko93))\n  * If you're using Typescript you should install the type definitions this way: `npm install --save @types/react-native-snap-carousel`\n\n## v3.8.3\n\n* Seems like it's time to remove the `getItemLayout` & `initialScrollIndex` override to properly display the first item when its index is a huge number (thanks [@rontalx](https://github.com/rontalx))\n  * :warning: Make sure to read how these props work together ([link#1](https://facebook.github.io/react-native/docs/flatlist#getitemlayout) & [link #2](https://facebook.github.io/react-native/docs/flatlist#initialscrollindex)), and to understand [why they were disabled in the first place](https://github.com/facebook/react-native/issues/15734#issuecomment-330616697)!\n* Fix `snapToItem` not working when `enableMomentum` is set to `true` on Android (thanks [@daaashleywch](https://github.com/daaashleywch))\n* Add basic TypeScript support (thanks [@facuacostag](https://github.com/facuacostag))\n* Stack layout's peaking items will remain opaque if `inactiveSlideOpacity` is set to `1`\n\n\n## v3.8.2\n\n* Fix autoplay stop after user interaction (thanks [@HelloCore](https://github.com/HelloCore))\n* Allow using a custom animated image component with `ParallaxImage` (thanks [@DanielMarkiel](https://github.com/DanielMarkiel))\n\n## v3.8.1\n\n* Migrate from deprecated `componentWillReceiveProps` to `componentDidUpdate` (thanks [@kiarashws](https://github.com/kiarashws))\n* Use `console.error` instead of `console.warn` for critical warnings (thanks [@bardiarastin](https://github.com/bardiarastin))\n* Update parallax doc (thanks [@bardiarastin](https://github.com/bardiarastin))\n\n## v3.8.0\n\n* Set [`removeClippedSubviews`](https://facebook.github.io/react-native/docs/scrollview#removeclippedsubviews) to `false` by default for 'tinder' and 'stack' layouts, or when `useScrollView` is set to `true`. This aims at preventing a bunch of rendering issues.\n* Make sure that autoplay is properly restarted after a `touchStart` event\n* Allow serialized animated event as `onScroll`. See [#439](https://github.com/meliorence/react-native-snap-carousel/pull/439) for more info (thanks [@Jberivera](https://github.com/Jberivera))\n* Allow using a custom scroll component. See [#498](https://github.com/meliorence/react-native-snap-carousel/pull/498) for more info (thanks [@martinezguillaume](https://github.com/martinezguillaume))\n* Prevent loop animation from being played when reaching the end of the dataset. See [#443](https://github.com/meliorence/react-native-snap-carousel/pull/443) for more info (thanks [@suhanmoon](https://github.com/suhanmoon))\n* Fire the `onTouchStart` prop. See [#464](https://github.com/meliorence/react-native-snap-carousel/pull/464) for more info (thanks [@sangle7](https://github.com/sangle7))\n* Add accessibilityLabel to `Pagination`. See [#438](https://github.com/meliorence/react-native-snap-carousel/pull/438) for more info (thanks [@thymikee](https://github.com/thymikee))\n* Allow `contentContainerCustomStyle` to override default paddings. See [#482](https://github.com/meliorence/react-native-snap-carousel/pull/482) for more info (thanks [@yamov](https://github.com/yamov))\n\n## v3.7.5\n* Fix issue with `scrollEnabled` introduced in version `3.7.3`... again! (thanks [@ifsnow](https://github.com/ifsnow))\n\n## v3.7.4\n* Fix issue with `scrollEnabled` introduced in version `3.7.3` (thanks [@JakeRawr](https://github.com/JakeRawr))\n\n## v3.7.3\n* Fix faulty animated value and make sure to always check for `data` before checking for `data.length`\n* Fix `scrollEnabled` override when it was initially set to `false` (thanks [@JakeRawr](https://github.com/JakeRawr))\n\n## v3.7.2\n* Fix `ParallaxImage` not being rendered (thanks [@louiszawadzki](https://github.com/louiszawadzki))\n\n## v3.7.1\n* Fix a potential crash in release mode (thanks [@hanpanpan200](https://github.com/hanpanpan200))\n* Do not round scroll offset's number in order to prevent potential issues with scroll repositioning\n\n## v3.7.0\n### New features and enhancements\n* Add a new callback method: [`onBeforeSnapToItem()`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#methods)\n* Add prop `lockScrollTimeoutDuration`\n* Add the ability to enable/disable callback's execution when snaping programmatically\n* Add the ability to change `scrollEnabled` to `true` from initially `false` (thanks [@tomauty](https://github.com/tomauty))\n### Bugfixes\n* Fix random errors when accessing wrapped component's reference\n* Fix errors triggered when calling `setState()` while the component has already been unmounted\n### Other\n* Support `keyExtractor` on `ScrollView` (thanks [@hadimhd](https://github.com/hadimhd))\n\n## v3.6.0\n* Add a `layout` prop to let users choose between 3 different carousel layouts (see [the documentation](https://github.com/meliorence/react-native-snap-carousel#layouts-and-custom-interpolations))\n![react-native-snap-carousel default layout](https://i.imgur.com/e1WbZcu.gif)\n![react-native-snap-carousel stack layout](https://i.imgur.com/foMIGM2.gif)\n![react-native-snap-carousel tinder layout](https://i.imgur.com/R7OpEFs.gif)\n* Add the ability to define dynamic styles based on scroll position with props `scrollInterpolator` and `slideInterpolatedStyle`. This allows implementing custom animations and layouts (see [the dedicated documentation](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/CUSTOM_INTERPOLATIONS.md)).\n* Rename props `customAnimationType` and `customAnimationOptions` to `activeAnimationType` and `activeAnimationOptions`\n\n## v3.5.0\n* Add the ability to render either a `ScrollView` component or a `FlatList` one (default) ([see prop `useScrollView`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#behavior))\n* Add support for versions of React Native < `0.43` (see [this note](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/KNOWN_ISSUES.md#react-native-version))\n* Add support for custom animations ([see props `customAnimationType` and `customAnimationOptions`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#style-and-animation))\n* Add method [`triggerRenderingHack()`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#available-methods) to work around [a random `FlatList` bug](https://github.com/facebook/react-native/issues/1831) that keeps content hidden until the carousel is scrolled\n* Hack around `ScrollView`/`FlatList` image rendering issues on Android\n* Fix issue with tappable dots when loop is enabled\n\n## v3.4.0\n* Fix `snapToItem` call that results in snapping to the wrong item when `loop` is enabled\n* Fix issue that, in some use cases, prevents every items but the initial ones to be rendered\n* On Android, prevent loop and callback issues because scroll offset's value doesn't return an integer\n* Add prop `inactiveSlideShift` (see #204)\n* Expose `FlatList`'s prop `inverted` (**use at your own risk since it will mess with the current handling of RTL layouts**)\n* Set `removeClippedSubviews` to `true` by default\n\n## v3.3.4\n* Fix issue with possible faulty index when `loopClonesPerSide` is greater than data length\n* Guard against `setNativeProps()` being `undefined`\n* On Android, make sure that the first item has the proper active style after init\n* On iOS, remove the feature \"snap as soon as the previous/next item becomes active when `lockScrollWhileSnapping` is enabled\" since it messes with direct calls to `snapToItem()`\n\n## v3.3.3\n* Prevent issue on iOS when `enableSnap` is set to `false` while `lockScrollWhileSnapping` is set to `true`\n\n## v3.3.2\n* Fix issue with `lockScrollWhileSnapping` when no callback was provided\n* `Pagination` component: add props `activeOpacity` and `dotContainerStyle`\n\n## v3.3.1\n* Fix issue when initializing the carousel with empty data\n* Make tappable `PaginationDot` snaps to the right item when loop is enabled\n\n## v3.3.0\n* Bring in the most wanted 'infinite loop' feature :tada: (see [the 'Loop' section](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#loop) for more info about the new props `loop` and `loopClonesPerSide`)\n* Improve Android behavior when momentum is disabled\n* Guard against potential errors when component is unmounted\n* Add prop `lockScrollWhileSnapping` to improve behavior when momentum is disabled\n\n## v3.2.3\n* Fix issue with callback not fired when doing a long swipe\n\n## v3.2.2\n* Fix RTL issues\n* Fix issue with active item when `enableMomentum` was set to `true`\n* Fix issue with overlapping items (thanks [@henninghall](https://github.com/henninghall))\n* `ParallaxImage` component: allow overriding default styles\n* `Pagination` component: adapt to RTL layouts\n\n## v3.2.1\n* Fix issue with active item when no callback has been specified (introduced in version `3.2.0`)\n\n## v3.2.0\n* Refactor callback handling. **Make sure to use the new prop `callbackOffsetMargin` if you experience missed callbacks.**\n* Make item's scale and opacity animations follow scroll value (thanks [@hammadj](https://github.com/hammadj))\n* `Pagination` component: make dots tappable with new props `tappableDots` and `carouselRef` (see the [example](https://github.com/meliorence/react-native-snap-carousel/blob/master/example/src/index.js))\n* Fix issue when carousel has been unmounted but parent container requires to re-render\n* Fix state and scroll issues when the currently active item is being dynamically removed\n* Improve snap feeling when momentum is disabled (default)\n* Add prop `callbackOffsetMargin`\n* Remove props `animationFunc`, `animationOptions`, `scrollEndDragDebounceValue`, `snapOnAndroid`, and `useNativeOnScroll`\n\n## v3.1.0\n* `Pagination` component: add new props for advanced customization\n\n## v3.0.0\n### WARNING\n* **Do not use this version as some temporary code was pushed to `npm` by mistake. Make sure to use version `3.1.0` instead.**\n### Breaking changes\n* Plugin is now built on top of `FlatList`, which allows for huge performance optimizations. From now on, items must be rendered using props `data` and `renderItem`.\n### General\n* Add `ParallaxImage` component (see the specific documentation [here](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PARALLAX_IMAGE.md))\n* Add prop `activeSlideAlignment`\n* Fix issue with autoplay when setting `scrollEnabled` to `false`\n* Prevent going back to the first item when overscrolling the last one\n* Prevent callback from being called at the wrong time in some specific scenarios\n\n## v2.4.0\n* Add `Pagination` component (see the specific documentation [here](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PAGINATION.md))\n* Allow `firstItem` to be changed dynamically\n* Allow `0` value for `carouselHorizontalPadding` and `carouselVerticalPadding` (thanks [@bonbonez](https://github.com/bonbonez))\n* Keep the easing of slide's opacity animation linear\n* Use native driver for slide's animation (can be overridden via `animationOptions`)\n\n## v2.3.1\n* Fix issue when snap is disabled\n\n## v2.3.0\n* Refactor callback handling to provide a more reliable solution when momentum is disabled\n* Fix issue with parallel animations (thanks [@jnbt](https://github.com/jnbt))\n* Prevent calls to `undefined` interpolators when working with dynamic slides (thanks [@cskaynar](https://github.com/cskaynar))\n* Improve vertical mode\n* Add prop `scrollEndDragDebounceValue`\n* Expose current scroll position with `this.currentScrollPosition`\n* Remove props `scrollEndDragThrottleValue` and `snapCallbackDebounceValue` (use `scrollEndDragDebounceValue` instead)\n\n## v2.2.2\n* Fix issue that prevented inactive styles of first and last items to be applied when using `snapToPrev` and `snapToNext` methods\n\n## v2.2.1\n* Do not mark `sliderWidth` and `sliderHeight` as required\n* Add warnings when properties specific to carousel's orientation haven't been set\n\n## v2.2.0\n* Implement vertical mode (prop `vertical`)\n* Make sure that current active item is properly updated when snapping\n* Prevent issues when 'sliderWidth' is smaller than viewport's width\n* Recalculate card positions on layout to handle rotation (thanks [@andrewpope](https://github.com/andrewpope)); make sure to read [this note](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/TIPS_AND_TRICKS.md#handling-device-rotation)\n* Refresh card positions if slider and/or item's dimensions are updated (thanks [@hoangnm](https://github.com/hoangnm))\n* Add props `scrollEndDragThrottleValue` and `snapCallbackDebounceValue`\n* Expose `View`'s `onLayout` prop\n* Deprecate prop `onScrollViewScroll`\n\n## v2.1.4\n* Add prop `onScrollViewScroll`\n\n## v2.1.3\n* Default value for `showsHorizontalScrollIndicator` is now `false`\n* Expose `ScrollView`'s `onSscroll` prop (thanks [@radko93](https://github.com/radko93))\n\n## v2.1.2\n* Do not trigger `onSnapToItem` when snapping back to the same slide (thanks [@rgabs](https://github.com/rgabs))\n* Add prop `carouselHorizontalPadding` to override container's inner padding (thanks [@skeie](https://github.com/skeie))\n\n## v2.1.1\n* Ensure compatibility with RN 0.43 (previous version of plugin's dependency `react-addons-shallow-compare` was breaking with React 16)\n* Fix issue with padding on iOS that could cause the carousel to snap back when its last item was clicked\n\n## v2.1.0\n* Add RTL support\n* Keep current active item when adding slides dynamically\n* Prevent invalid `firstItem` number\n* Add prop `activeSlideOffset`\n\n## v2.0.3\n\n* Prevent error when carousel has only one child (thanks [@kevinvandijk](https://github.com/kevinvandijk))\n* Fix issue when appending dynamic slides (the first one was ignored)\n* Fix edge case that prevented the first slide from being focused when swiping back with momentum enabled\n* Bump example's RN version to 0.42.3\n\n## v2.0.2\n\n* Make sure that scroll indicator is hidden by default\n\n## v2.0.1\n\n* Fix un-handled exception with interpolators (thanks [@chitezh](https://github.com/chitezh))\n\n## v2.0.0\n\n* Items are now direct children of the `<Carousel />` component, which makes it easier to use (thanks [@Jonarod](https://github.com/Jonarod))\n* Props `items` and `renderItem` have been removed\n\n## v1.6.1\n\n* Due to some touch events being buggy, rework methods so the children will receive touch events on Android\n\n## v1.6.0\n\n* Add prop `enableMomentum`\n* Fix an infinite-loop on iOS with momentum enabled\n* Fix the snapping effect when releasing touch without interia on iOS with momentum enabled\n* Fix autoplay on Android, it should start and stop properly and stop being triggered while swiping\n* Use `View.propTypes.style` instead of `PropTypes.number` in styles validation (thanks [@pesakitan22](https://github.com/pesakitan22))\n\n## v1.5.0\n\n* Items length can now be changed on-the-fly (thanks [@superical](https://github.com/superical))\n* Now handling momentum (thanks [@FakeYou](https://github.com/FakeYou))\n\n## v1.4.0\n\n* Better update strategy with shallowCompare\n* Add `snapToNext()`, `snapToPrev()`, `currentIndex` methods and properties\n\n## v1.3.1\n\n* Properly center on first item when mounting component on Android (potentially iOS too)\n\n## v1.3.0\n\n* Pass the item data as the 2nd param of `onSnapToItem` callback\n\n## v1.2.1\n\n* Fix reference call when the component has been unmounted\n\n## v1.2.0\n\n* Add prop `onSnapToItem`\n\n## v1.1.0\n\n* Center slides properly\n* Handle one slide only\n* Add props `inactiveSlideScale`, `inactiveSlideOpacity`, `containerCustomStyle` and `contentContainerCustomStyle`"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.123046875,
          "content": ":warning: **From now on, users that don't adhere to the following guidelines when submitting an issue will see it closed without warning.**\n\n> This project is the result of countless hours of work and is maintained for free on our spare time. Show some love and respect by making it easier for us to help you!\n\nIf you would like to report a problem, take a look around and see if someone already opened an issue about it. If you are certain this is a new, unreported bug, you can submit a bug report by [opening a new issue](https://github.com/meliorence/react-native-snap-carousel/issues/new).\n\n:warning: When doing so, you need to fill out [the issue template](https://raw.githubusercontent.com/meliorence/react-native-snap-carousel/master/ISSUE_TEMPLATE.md) completely. **This step is mandatory!** Not doing so will result in your issue getting closed. Don't take this personally if this happens, and feel free to open a new issue once you've gathered all the information required by the template.\n\n* **One issue, one bug:** Please report a single bug per issue.\n* **Provide a [Snack example]((https://snack.expo.io/)):** To demonstrate the issue, you need to provide a reduced test case using [Snack](https://snack.expo.io/) and follow [the guidelines for providing a Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve). More often than not, providing a screencast will also be of tremendous help to understand the matter at stake (a screenshot might sometimes be enough).\n* **Provide reproduction steps:** List all the steps necessary to reproduce the issue. Provide a Snack, share the relevant source code or upload a sample project to GitHub. We should be able to follow these steps to reproduce your issue with minimal effort.\n* **Try out the latest version:** Verify that the issue can be reproduced locally by updating your project to use [the latest commit from `master`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/TIPS_AND_TRICKS.md#using-a-specific-commit). The bug may have already been fixed! Also make sure to test the latest stable release of React Native as your issue could be linked to RN's core."
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 5.34765625,
          "content": "<!--\n  MAKE SURE TO READ AND FOLLOW THIS TEMPLATE CLOSELY OR YOUR ISSUE WILL BE CLOSED WITHOUT NOTICE\n-->\n\n### Is this a bug report, a feature request, or a question?\n\n(Write your answer here.)\n\n<!--\n  If you answered \"Bug report\":\n\n    We expect you to produce a high-quality bug report since putting care into your report helps us fix the issue faster.\n    For bug reports, it is REQUIRED to fill the rest of this template, or the issue will be closed.\n\n  If you answered \"Feature request\" or \"Question\":\n\n    Make sure to describe as precisely as possible the feature you'd like to see implemented or the question you'd like to see answered.\n    When relevant, provide visual examples (screenshots, screencasts, diagrams...).\n    You can ignore the next steps as long as you've made sure that your description is as clear, thorough and illustrated as possible.\n-->\n\n### Have you followed the required steps before opening a bug report?\n\n(Check the step you've followed - put an `x` character between the square brackets (`[]`).)\n\n- [] I have read [the guidelines regarding bug report](https://github.com/meliorence/react-native-snap-carousel/blob/master/CONTRIBUTING.md).\n- [] I have reviewed [the documentation](https://github.com/meliorence/react-native-snap-carousel/blob/master/README.md) in its entirety, including the dedicated documentations :books:.\n- [] I have searched for [existing issues](https://github.com/meliorence/react-native-snap-carousel/issues) and made sure that the problem hasn't already been reported.\n- [] I am using [the latest plugin version](https://github.com/meliorence/react-native-snap-carousel/releases).\n- [] I am following [the issue template](https://raw.githubusercontent.com/meliorence/react-native-snap-carousel/master/ISSUE_TEMPLATE.md) closely in order to produce a useful bug report.\n\n<!--\n  Please DO NOT go futher if you've not followed ALL of the above steps.\n  Failing to do so will result in your issue getting closed without warning.\n-->\n\n### Have you made sure that it wasn't a [React Native bug](https://github.com/meliorence/react-native-snap-carousel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22react-native+bug%22+)?\n\n(Write your answer here.)\n\n<!--\n  Steps you should take:\n\n    1. Take a look at plugin's issues that are [labelled `react-native bug`](https://github.com/meliorence/react-native-snap-carousel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22react-native+bug%22+)\n\n    2. Search [React Native issues](https://github.com/facebook/react-native/issues)\n\n    3. Read the following sections of the doc again: [\"Known issues\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/KNOWN_ISSUES.md), [\"Important note regarding Android\"](https://github.com/meliorence/react-native-snap-carousel#important-note-regarding-android), and [\"Custom interpolations caveats\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/CUSTOM_INTERPOLATIONS.md#caveats).\n -->\n\n### Is the bug specific to iOS or Android? Or can it be reproduced on both platforms?\n\n(Write your answer here and specify the iOS/Android versions on which you've been able to reproduce the issue.)\n\n### Is the bug reproductible in a production environment (not a debug one)?\n\n(Write your answer here.)\n\n<!--\n  If you haven't been able to reproduce the bug in production mode, it probably has to do with React Native's limitations (see [\"Known issues\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/KNOWN_ISSUES.md)). Chances are we won't be able to do anything about it.\n-->\n\n### Environment\n\n<!--\n  Provide information about your current environment. At the very least, it should include the following:\n\n  Environment:\n    React: 16.0.0-beta.5\n    React native: 0.49.2\n    react-native-snap-carousel: 3.3.4\n\n  Target Platform:\n    Android (6.0)\n    iOS (10.3)\n-->\n\n(Write your answer here.)\n\n### Expected Behavior\n\n<!--\n  How did you expect your project to behave?\n  It’s fine if you’re not sure your understanding is correct.\n  Just write down what you thought would happen.\n-->\n\n(Write what you thought would happen.)\n\n### Actual Behavior\n\n<!--\n  Did something go wrong?\n  Is something broken, or not behaving as you expected?\n  Describe this section in detail, and attach screencasts (or screenshots) if possible.\n  Don't just say \"it doesn't work\"!\n-->\n\n(Write what happened. Add screencasts/screenshots!)\n\n### Reproducible Demo\n\n(Paste the link to a [Snack example](https://snack.expo.io/) in which the issue can be reproduced. Please follow [the guidelines](https://stackoverflow.com/help/mcve) for providing a Minimal, Complete, and Verifiable example.)\n\n<!--\n  This step is MANDATORY:\n\n    * It shows that you value and respect the time of the people that are willing to help you; no one wishes to waste his spare time trying to recreate someone else's problem.\n    * Issues without reproducible demos have an extremely low priority and will probably be closed without notice.\n    * You might figure out the issues yourself as you work on extracting it.\n-->\n\n### Steps to Reproduce\n\n<!--\n  How would you describe your issue to someone who doesn’t know you or your project?\n  Write a sequence of steps that anybody can repeat to see the issue.\n  Be specific! If the bug cannot be reproduced, your issue will be closed.\n-->\n\n(Write your steps so that anyone can reproduce the issue in the Snack demo you provided.)\n\n1.\n2.\n3.\n\n<!--\n  Thanks for helping us help you!\n-->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.474609375,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2021, Meliorence\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 1.853515625,
          "content": "### Platforms affected\n\n\n### What does this PR do?\n\n\n### What testing has been done on this change?\n\n\n### Tested features checklist\n<!--\nIMPORTANT: Please make sure that none of these features have been broken by your changes.\nIt's easy to overlook something you didn't use yet.\n-->\n- [ ] Default setup ([example](https://github.com/meliorence/react-native-snap-carousel/blob/master/example/src/index.js#L46-L87))\n- [ ] Carousels with and without momentum enabled ([prop `enableMomentum`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#behavior))\n- [ ] Vertical carousels ([prop `vertical`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#behavior))\n- [ ] Slide alignment ([prop `activeSlideAlignment`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#style-and-animation))\n- [ ] Autoplay ([prop `autoplay`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#autoplay))\n- [ ] Loop mode ([prop `loop`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#loop))\n- [ ] `ScrollView`/`FlatList` carousels ([prop `useScrollView`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#behavior))\n- [ ] [Callback methods](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#callbacks)\n- [ ] [`ParallaxImage` component](https://github.com/meliorence/react-native-snap-carousel#parallaximage-component)\n- [ ] [`Pagination` component](https://github.com/meliorence/react-native-snap-carousel#pagination-component)\n- [ ] [Layouts and custom interpolations](https://github.com/meliorence/react-native-snap-carousel#layouts-and-custom-interpolations)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.58984375,
          "content": "# react-native-snap-carousel\n\n![platforms](https://img.shields.io/badge/platforms-Android%20%7C%20iOS-brightgreen.svg?style=flat-square&colorB=191A17)\n[![npm](https://img.shields.io/npm/v/react-native-snap-carousel.svg?style=flat-square)](https://www.npmjs.com/package/react-native-snap-carousel)\n[![npm](https://img.shields.io/npm/dm/react-native-snap-carousel.svg?style=flat-square&colorB=007ec6)](https://www.npmjs.com/package/react-native-snap-carousel)\n<!-- [![github release](https://img.shields.io/github/release/meliorence/react-native-snap-carousel.svg?style=flat-square)](https://github.com/meliorence/react-native-snap-carousel/releases) -->\n[![github issues](https://img.shields.io/github/issues/meliorence/react-native-snap-carousel.svg?style=flat-square)](https://github.com/meliorence/react-native-snap-carousel/issues)\n[![github closed issues](https://img.shields.io/github/issues-closed/meliorence/react-native-snap-carousel.svg?style=flat-square&colorB=44cc11)](https://github.com/meliorence/react-native-snap-carousel/issues?q=is%3Aissue+is%3Aclosed)\n[![Issue Stats](https://img.shields.io/issuestats/i/github/meliorence/react-native-snap-carousel.svg?style=flat-square&colorB=44cc11)](http://github.com/meliorence/react-native-snap-carousel/issues)\n\n-----\n-----\n\n## ✨ Some great news for you, fellow plugin user!\n\n### 💡 **[Head over there now](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/VERSION_4.md)** to learn more about all the goodness that's coming your way.\n\n-----\n-----\n\n## Table of contents\n\n1. [Showcase](#showcase)\n1. [Usage](#usage)\n1. [Example](#example)\n1. [Props, methods and getters](#props-methods-and-getters)\n1. [Layouts and custom interpolations](#layouts-and-custom-interpolations)\n1. [`ParallaxImage` component](#parallaximage-component)\n1. [`Pagination` component](#pagination-component)\n1. [Tips and tricks](#tips-and-tricks)\n1. [Known issues](#known-issues)\n1. [Important note regarding Android](#important-note-regarding-android)\n1. [Important note regarding iOS](#important-note-regarding-ios)\n1. [Roadmap](#roadmap)\n1. [Credits](#credits)\n\n## Showcase\n\n### :raised_hands: New feature: layouts\n\n[Do you want to find out more?](#layouts-and-custom-interpolations)\n\n![react-native-snap-carousel default layout](https://i.imgur.com/e1WbZcu.gif)\n![react-native-snap-carousel tinder layout](https://i.imgur.com/R7OpEFs.gif)\n![react-native-snap-carousel stack layout](https://i.imgur.com/foMIGM2.gif)\n\n### Real-world examples\n\nThese are live apps we've created that make heavy use of the plugin. Don't be shy, share yours if you've done something awesome with it!\n\n![react-native-snap-carousel aix](https://i.imgur.com/pPm0csc.gif)\n![react-native-snap-carousel aix](https://i.imgur.com/UFsPlz2.gif)\n\n![react-native-snap-carousel](https://i.imgur.com/Fope3uj.gif)\n![react-native-snap-carousel](https://i.imgur.com/WNOBYfl.gif)\n![react-native-snap-carousel](https://i.imgur.com/sK5DKaG.gif)\n\n---\n\n## :handshake: Maintainers wanted\n\nHey there,\n\nCreating and maintaining this plugin has been a fun ride that started in 2016. We thank you all for your appreciation and for making the most out of it! You've motivated us to spend countless hours improving the plugin, and made us happy to give back to the Open Source community.\n\nPut simply, we love this project. However we currently aren't able to give it the love it deserves and the care it requires. **If you have enough time and knowledge, and want to become a maintainer, please let us know**.\n\n### 💡 **[Just head there if you're interested](https://github.com/meliorence/react-native-snap-carousel/issues/632).**\n\nWe're not abandoning the ship, but we need more people to help us keep it alive and well!\n\n---\n\n## Usage\n\n```bash\n$ npm install --save react-native-snap-carousel\n```\n\nIf you're using Typescript you should also install type definitions:\n```bash\n$ npm install --save @types/react-native-snap-carousel\n```\n\n\n```javascript\nimport Carousel from 'react-native-snap-carousel';\n\nexport class MyCarousel extends Component {\n\n    _renderItem = ({item, index}) => {\n        return (\n            <View style={styles.slide}>\n                <Text style={styles.title}>{ item.title }</Text>\n            </View>\n        );\n    }\n\n    render () {\n        return (\n            <Carousel\n              ref={(c) => { this._carousel = c; }}\n              data={this.state.entries}\n              renderItem={this._renderItem}\n              sliderWidth={sliderWidth}\n              itemWidth={itemWidth}\n            />\n        );\n    }\n}\n```\n\n## Example\n\nHere are simple examples that can be edited in real time in your browser:\n\n- https://snack.expo.io/@vitkor/carousel-simple-example\n- https://snack.expo.io/@bd-arc/react-native-snap-carousel-%7C-example-with-custom-interpolations\n\nYou can also find a more in-depth (read \"complex\") one in the [`/example` folder](https://github.com/meliorence/react-native-snap-carousel/tree/master/example).\n\n![react-native-snap-carousel](https://i.imgur.com/pZincya.gif)\n\n## Props, methods and getters\n\nIn order to let you to create mighty carousels and to keep up with your requests, we add new features on a regular basis. Consequently, the list of available props has become really huge and deserves a documentation of its own.\n\n### :books: [Documentation for \"Props, methods and getters\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md)\n\n## Layouts and custom interpolations\n\n### Built-in layouts\n\nIn version `3.6.0`, we've added two new layouts on top of the original one: the first one is called 'stack' since it mimics a stack of cards, and the other one is called 'tinder' since it provides a Tinder-like animation.\n\nYou can choose between the three of them using [the new prop `layout`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#style-and-animation) and you can modify the default card offset in the 'stack' and 'tinder' layouts with [prop `layoutCardOffset`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#style-and-animation).\n\n![react-native-snap-carousel default layout](https://i.imgur.com/e1WbZcu.gif)\n```javascript\n<Carousel layout={'default'} />\n```\n\n![react-native-snap-carousel stack layout ios](https://i.imgur.com/c7pU4rT.gif)\n![react-native-snap-carousel stack layout android](https://i.imgur.com/AnruacR.gif)\n```javascript\n<Carousel layout={'stack'} layoutCardOffset={`18`} />\n```\n\n![react-native-snap-carousel tinder layout ios](https://i.imgur.com/D9QyTzb.gif)\n![react-native-snap-carousel tinder layout android](https://i.imgur.com/ab1TI4e.gif)\n```javascript\n<Carousel layout={'tinder'} layoutCardOffset={`9`} />\n```\n\nA few things worth noting:\n* As you can see, the effect had to be inverted on Android. This has to do with [a really annoying Android-specific bug](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/CUSTOM_INTERPOLATIONS.md#android).\n* Even though the new layouts have been created with horizontal carousels in mind, they will also work with vertical ones \\o/\n* :warning: **You should NOT use `stack` or `tinder` layouts if you have a large data set to display.** In order to avoid rendering issues, the carousel will use a `ScrollView` component rather than a `FlatList` one for those layouts (see [prop `useScrollView`](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PROPS_METHODS_AND_GETTERS.md#behavior)). The tradeof is that you won't benefit from any of `FlatList`'s advanced optimizations. See [this issue](https://github.com/meliorence/react-native-snap-carousel/issues/262) for workarounds; or you may want to implement your own [custom interpolation](#custom-interpolations).\n\n### Custom interpolations\n\nOn top of the new layouts, we've exposed the logic we used so that users can create their own awesome layouts! If you're interested, take a deep breath and dive into the dedicated documentation.\n\n### :books: [Documentation for \"Custom interpolations\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/CUSTOM_INTERPOLATIONS.md)\n\nHere are a few examples of what can easily be achieved (you can explore [the source code](https://github.com/meliorence/react-native-snap-carousel/blob/master/example/src/utils/animations.js) and try it live in [the provided example](https://github.com/meliorence/react-native-snap-carousel/tree/master/example)):\n\n![react-native-snap-carousel custom layout](https://i.imgur.com/OrdLsCM.gif)\n![react-native-snap-carousel custom layout](https://i.imgur.com/slnTbyG.gif)\n![react-native-snap-carousel custom layout](https://i.imgur.com/kDx3xTc.gif)\n\n## `ParallaxImage` component\n\nVersion `3.0.0` introduced a `<ParallaxImage />` component, an image component aware of carousel's current scroll position and therefore able to display a nice parallax effect (powered by the native driver to ensure top-notch performance).\n\n### :books: [Documentation for \"`ParallaxImage` component\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PARALLAX_IMAGE.md)\n\n![react-native-snap-carousel parallax image](https://i.imgur.com/6iIb4SR.gif)\n\n## `Pagination` component\n\nStarting with version `2.4.0`, a customizable `<Pagination />` component has been added. You can see below how it looks like with its default configuration.\n\n### :books: [Documentation for \"`Pagination` component\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/PAGINATION.md)\n\n![react-native-snap-carousel pagination](https://i.imgur.com/FLQcGGL.gif)\n\n## Tips and tricks\n\nWe've gathered together all the useful tips and tricks. There is a bunch of them, which makes **this section a must-read!**\n\n### :books: [Documentation for \"Tips and tricks\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/TIPS_AND_TRICKS.md)\n\n## Known issues\n\n**Make sure to read about the known issues before opening a new one**; you may find something useful.\n\n### :books: [Documentation for \"Known issues\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/KNOWN_ISSUES.md)\n\n## Important note regarding Android\n\n![react-native-snap-carousel android](https://i.imgur.com/03iuB2Um.jpg)\n\nAndroid's debug mode is a mess: timeouts regularly desynchronize and scroll events are fired with some lag, which completely alters the inner logic of the carousel. **On Android, you *will* experience issues with carousel's behavior when JS Dev Mode is enabled, and you *might* have trouble with unreliable callbacks and loop mode when it isn't**. This is unfortunate, but it's rooted in various flaws of `ScrollView`/`FlatList`'s implementation and the miscellaneous workarounds we had to implement to compensate for it.\n\n:warning: **Therefore you should always check if the issue you experience also happens in a production environment. This is, sadly, the only way to test the real performance and behavior of the carousel.**\n\n> For more information, you can read the following notes: [\"Android performance\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/KNOWN_ISSUES.md#android-performance) and [\"Unreliable callbacks\"](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/KNOWN_ISSUES.md#unreliable-callbacks).\n\n## Important note regarding iOS\n\n![react-native-snap-carousel ios](https://i.imgur.com/npuiUSbh.png)\n\n:warning: When debugging with the iOS simulator, **you're only one \"Cmd + T\" away from toggling \"Slow Animations\"**. If carousel's animations seem painfully slow, make sure that you haven't enabled this setting by mistake.\n\n## Roadmap\n\n- [ ] Add [more examples](https://github.com/meliorence/react-native-snap-carousel/issues/257)\n- [ ] Base the plugin on a component less buggy than `FlatList`\n- [X] Implement different layouts and allow using custom interpolations\n- [X] Implement both `FlatList` and `ScrollView` handling\n- [X] Add the ability to provide custom items animation\n- [X] Implement 'loop' mode\n- [X] Improve Android's behavior\n- [x] Add parallax image component\n- [x] Base the plugin on `FlatList` instead of `ScrollView`\n- [x] Add alignment option\n- [x] Add pagination component\n- [x] Add vertical implementation\n- [x] Handle device orientation event (see [this note](https://github.com/meliorence/react-native-snap-carousel/blob/master/doc/TIPS_AND_TRICKS.md#handling-device-rotation))\n- [x] Add RTL support\n- [x] Improve momemtum handling\n- [x] Improve snap on Android\n- [x] Handle passing 1 item only\n- [x] Fix centering\n\n## Credits\n\nWritten by [Benoît Delmaire](https://fr.linkedin.com/in/benoitdelmaire) ([bd-arc](https://github.com/bd-arc)) and [Maxime Bertonnier](https://fr.linkedin.com/in/maxime-bertonnier-744351aa) ([Exilz](https://github.com/Exilz)) at\n[Meliorence](https://www.meliorence.com/).\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.7783203125,
          "content": "{\n    \"name\": \"react-native-snap-carousel\",\n    \"version\": \"3.9.1\",\n    \"description\": \"Swiper/carousel component for React Native with previews, multiple layouts, parallax images, performant handling of huge numbers of items, and RTL support. Compatible with Android & iOS.\",\n    \"main\": \"src/index.js\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"github.com/meliorence/react-native-snap-carousel\"\n    },\n    \"keywords\": [\n        \"react\",\n        \"native\",\n        \"carousel\",\n        \"slider\",\n        \"swiper\",\n        \"flatlist\",\n        \"scrollview\",\n        \"parallax\",\n        \"images\",\n        \"infinite\",\n        \"scroll\",\n        \"scrolling\",\n        \"items\",\n        \"edge\",\n        \"snap\",\n        \"card\",\n        \"cards\",\n        \"stack\",\n        \"deck\",\n        \"tinder\",\n        \"android\",\n        \"ios\",\n        \"snapping\",\n        \"component\",\n        \"rtl\"\n    ],\n    \"author\": \"Meliorence <contact@meliorence.com> (github.com/meliorence)\",\n    \"license\": \"BSD-3-Clause\",\n    \"dependencies\": {\n        \"prop-types\": \"^15.6.1\",\n        \"react-addons-shallow-compare\": \"15.6.2\"\n    },\n    \"peerDependencies\": {\n        \"react\": \">=15.0.0\",\n        \"react-native\": \"*\"\n    },\n    \"devDependencies\": {\n        \"babel-eslint\": \"^8.2.2\",\n        \"eslint\": \"^4.19.1\",\n        \"eslint-config-standard\": \"^10.2.1\",\n        \"eslint-config-standard-react\": \"^5.0.0\",\n        \"eslint-plugin-import\": \"^2.11.0\",\n        \"eslint-plugin-node\": \"^5.2.1\",\n        \"eslint-plugin-promise\": \"^3.7.0\",\n        \"eslint-plugin-react\": \"^7.7.0\",\n        \"eslint-plugin-standard\": \"^3.0.1\"\n    },\n    \"homepage\": \"https://github.com/meliorence/react-native-snap-carousel\",\n    \"bugs\": {\n        \"url\": \"https://github.com/meliorence/react-native-snap-carousel/issues\"\n    },\n    \"readmeFilename\": \"README.md\"\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}