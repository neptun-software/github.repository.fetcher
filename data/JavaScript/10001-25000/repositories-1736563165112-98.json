{
  "metadata": {
    "timestamp": 1736563165112,
    "page": 98,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "liriliri/eruda",
      "stars": 19068,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.314453125,
          "content": "module.exports = {\n  parser: 'babel-eslint',\n  env: {\n    browser: true,\n    commonjs: true,\n    es6: true,\n  },\n  extends: 'eslint:recommended',\n  parserOptions: {\n    sourceType: 'module',\n  },\n  globals: {\n    VERSION: true,\n    ENV: true,\n  },\n  rules: {\n    quotes: ['error', 'single'],\n    'prefer-const': 2,\n  },\n}\n"
        },
        {
          "name": ".eustia.js",
          "type": "blob",
          "size": 0.189453125,
          "content": "module.exports = {\n  test: {\n    library: ['node_modules/eustia-module'],\n    files: ['test/*.js', 'test/*.html'],\n    exclude: ['js'],\n    namespace: 'util',\n    output: 'test/util.js',\n  },\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.017578125,
          "content": "* text=auto eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": ".idea/\ndist/\nnode_modules/\ntest/lib/\ncoverage/\ntest/playground.html\nnpm-debug.log\npackage-lock.json"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.01171875,
          "content": "test/util.js"
        },
        {
          "name": ".prettierrc.json",
          "type": "blob",
          "size": 0.05859375,
          "content": "{\n  \"singleQuote\": true,\n  \"tabWidth\": 2,\n  \"semi\": false\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 12.95703125,
          "content": "## 3.4.1 (10 Nov 2024)\n\n* fix: no copy and delete for shadow root\n* fix: fetch remains pending when error occurs\n* fix: theme not updated if system theme changed\n\n## 3.4.0 (27 Sep 2024)\n\n* feat: support shadow dom [#158](https://github.com/liriliri/eruda/issues/158)\n* fix: quirks mode table rendering [#459](https://github.com/liriliri/eruda/issues/459)\n\n## 3.3.0 (9 Sep 2024)\n\n* feat: add vue devtools plugin\n\n## 3.2.3 (10 AUG 2024)\n\n* fix: WebSocket message base64 encoded [#447](https://github.com/liriliri/eruda/issues/447)\n\n## 3.2.2 (8 AUG 2024)\n\n* chore: update plugin versions\n\n## 3.2.1 (20 JUL 2024)\n\n* fix: touches plugin [#344](https://github.com/liriliri/eruda/issues/344)\n\n## 3.2.0 (16 JUL 2024)\n\n* feat: support inline mode\n* feat: allow spaces in plugin name\n* fix: some typescript d.ts mistakes\n* chore: remove elements set api\n* chore: update monitor plugin version\n\n## 3.1.0 (9 JUL 2024)\n\n* feat: add AMOLED theme [#414](https://github.com/liriliri/eruda/pull/414)\n* feat: support system preference theme config\n* feat: add isDarkTheme, getTheme util\n* fix: backers.svg lazy loading [#407](https://github.com/liriliri/eruda/issues/407)\n\n## 3.0.1 (18 JUL 2023)\n\n* fix: can not print string with %o [#336](https://github.com/liriliri/eruda/issues/336)\n* fix: mouse event on touch device [#302](https://github.com/liriliri/eruda/issues/302)\n* fix: unable to remove snippets [#349](https://github.com/liriliri/eruda/issues/349)\n\n## 3.0.0 (2 Apr 2023)\n\n* feat: replace fps and memory with monitor plugin\n* fix: resource stylesheet show failed\n* chore: remove licia utils\n* chore: separate polyfill\n\n## 2.11.3 (3 Mar 2023)\n\n* fix: scale [#307](https://github.com/liriliri/eruda/issues/307)\n\n## 2.11.2 (28 Jan 2023)\n\n* fix: check safe area error\n\n## 2.11.1 (28 Jan 2023)\n\n* fix: bottom safe area\n* fix(console): filter function support\n* fix: click event stop propagation [#155](https://github.com/liriliri/eruda/issues/155)\n* fix: worker null error [#152](https://github.com/liriliri/eruda/issues/152)\n\n## 2.11.0 (19 Jan 2023)\n\n* feat(network): filter\n* feat(info): add backers\n* feat(settings): use luna setting\n* feat(resources): use luna data grid\n* feat(resources): copy storage, cookie\n* fix(sources): code not selectable\n* fix(console): filter api\n\n## 2.10.0 (24 Dec 2022)\n\n* feat(sources): use luna text viewer\n* feat(elements): split mode\n* feat(network): split mode\n* fix(resources): delete cookie\n\n## 2.9.1 (20 Dec 2022)\n\n* fix(elements): select element using touch events\n\n## 2.9.0 (20 Dec 2022)\n\n* feat(elements): integrate dom viewer\n* feat(elements): element crumbs\n* feat(elements): copy node and delete node\n* feat(network): copy response\n* feat(network): toggle recording\n* chore: remove dom plugin snippet\n\n## 2.8.3 (13 Dec 2022)\n\n* fix(network): remove data grid ios outline\n* chore: update luna console and luna object viewer \n\n## 2.8.2 (12 Dec 2022)\n\n* fix: some variables not reset when destroy\n\n## 2.8.1 (12 Dec 2022)\n\n* fix: remove luna syntax highlighter\n\n## 2.8.0 (11 Dec 2022)\n\n* feat(info): copy\n* feat(sources): use luna syntax highlighter\n* feat(network): use luna data grid\n* feat(network): copy as curl [#220](https://github.com/liriliri/eruda/issues/220)\n* fix(network): recognize JSON [#201](https://github.com/liriliri/eruda/issues/201)\n* fix: init with shadow dom style error [#195](https://github.com/liriliri/eruda/issues/195)\n\n## 2.7.4 (10 Dec 2022)\n\n* fix: firefox document.body is null error [#293](https://github.com/liriliri/eruda/issues/293)\n\n## 2.7.3 (8 Dec 2022)\n\n* fix: remove tabs horizontal scrollbar [#236](https://github.com/liriliri/eruda/issues/236)\n\n## 2.7.2 (7 Dec 2022)\n\n* fix: luna modal style\n\n## 2.7.1 (7 Dec 2022)\n\n* fix: remove debug log\n\n## 2.7.0 (7 Dec 2022)\n\n* feat: drag to resize\n* feat: update icons\n* feat: use luna modal to replace browser prompt\n\n## 2.6.2 (3 Dec 2022)\n\n* feat: support android 5.0\n* feat(sources): remove code beautify\n* fix: code plugin theme\n\n## 2.6.1 (26 Nov 2022)\n\n* fix: dark mode scrollbar style\n* fix: unable to load timing plugin\n\n## 2.6.0 (25 Nov 2022)\n\n* feat(console): select and copy\n* chore: update luna console\n* chore: update chobitsu\n\n## 2.5.0 (9 Jul 2022)\n\n* feat: add ts declaration [#187](https://github.com/liriliri/eruda/pull/187)\n* refactor: use luna console\n* refactor: use chobitsu for highlighting element\n\n## 2.4.1 (28 Sep 2020)\n\n* fix: remove arrow function [#160](https://github.com/liriliri/eruda/issues/160)\n\n## 2.4.0 (14 Sep 2020)\n\n* feat: default settings [#141](https://github.com/liriliri/eruda/issues/141)\n* fix(elements): highlight\n* fix(console): blinks frequently as it scroll to the border\n* refactor: use chobitsu\n\n## 2.3.3 (3 May 2020)\n\n* fix: unsafe-eval CSP violation [#140](https://github.com/liriliri/eruda/issues/140)\n\n## v2.3.2 (29 Apr 2020)\n\n* fix(console): scroll performance\n\n## v2.3.1 (28 Apr 2020)\n\n* fix(elements): content highlight\n\n## v2.3.0 (28 Apr 2020)\n\n* feat: refresh notification\n* fix(console): safari bounce effect\n* fix(elements): highlight\n\n## v2.2.2 (17 Apr 2020)\n\n* fix(console): extra info from\n* chore: update icons\n\n## v2.2.1 (20 Mar 2020)\n\n* fix: redundant evaluated style\n* chore: use [luna-object-viewer](https://github.com/liriliri/luna) for viewing object\n\n## v2.2.0 (9 Feb 2020)\n\n* feat: use dark theme for dark mode\n* feat(elements): computed style filter\n* feat(resources): storage and cookie filter\n* fix(snippet): error loading plugin for local page\n* fix(console): unable to clear filter\n\n## v2.1.0 (2 Feb 2020)\n\n* feat: change navigation bar height\n* feat: change default transparency to 1\n* feat: change loaded plugin position\n* feat(console): remove debug filter\n* feat(console): improve input style\n* feat(console): show filter text\n* feat(network): add requests api [#132](https://github.com/liriliri/eruda/issues/132)\n\n## v2.0.2 (9 Jan 2020)\n\n* chore: reduce file size (452kb -> 418kb)\n\n## v2.0.1 (6 Jan 2020)\n\n* chore: update plugins\n\n## v2.0.0 (3 Jan 2020)\n\n* feat: theme support\n* feat(console): $x utility\n* feat(console): remove useWorker\n* feat(sources): indent size configuration\n* fix(console): url recognition\n* fix(console): log style\n* fix(sources): scrolling\n* perf(console): large object expansion\n* chore: reduce file size (472kb -> 452kb)\n\n## v1.10.3 (8 Nov 2019)\n\n* fix(info): escape location [#127](https://github.com/liriliri/eruda/issues/127)\n* chore: update refresh icon\n* chore: update timing plugin version\n\n## v1.10.2 (5 Nov 2019)\n\n* fix: must add .default if using require \n\n## v1.10.1 (4 Nov 2019)\n\n* fix(console): error display when js execution disabled\n\n## v1.10.0 (4 Nov 2019)\n\n* chore: updated to babel7, must add .default if using require \n* feat(console): multiple console instance\n* perf(console): rendering for a large number of logs\n\n## v1.9.2 (1 Nov 2019)\n\n* perf(console): rendering\n\n## v1.9.1 (27 Oct 2019)\n\n* perf(console): asynchronous log render\n* perf(console): reduce memory usage, 50% drop\n\n## v1.9.0 (20 Oct 2019)\n\n* feat: add snippet for loading touches plugin\n* feat: add fit screen snippet\n* fix(console): filter shouldn't affect group\n\n## v1.8.1 (14 Oct 2019)\n\n* fix(network): style [#121](https://github.com/liriliri/eruda/issues/121)\n\n## v1.8.0 (13 Oct 2019)\n\n* feat(network): display optimization\n* feat: move http view from sources to network\n* fix(console): group object expansion\n\n## v1.7.2 (11 Oct 2019)\n\n* fix(console): blank bottom if js input is disabled\n* chore: update eruda-dom version\n\n## v1.7.1 (10 Oct 2019)\n\n* fix: resize\n\n## v1.7.0 (8 Oct 2019)\n\n* feat: resize [#89](https://github.com/liriliri/eruda/issues/89)\n* feat(console): replace help button with filter\n* feat(console): disable js execution\n* feat(console): [utilities api](https://developers.google.cn/web/tools/chrome-devtools/console/utilities)\n* fix(console): disable log collapsing for group\n* fix(elements): select not working for desktop\n\n## v1.6.3 (1 Oct 2019)\n\n* fix(console): log border style\n\n## v1.6.2 (29 Sep 2019)\n\n* fix: container style affected [#119](https://github.com/liriliri/eruda/issues/119)\n* fix(console): log style, line-height should be normal\n\n## v1.6.1 (27 Sep 2019)\n\n* feat(network): catch fetch request headers\n* feat(console): timeLog, countReset\n* fix(console): clear not working\n* fix(console): table\n\n## v1.6.0 (26 Sep 2019)\n\n* feat: console group\n* fix: console style, width and height is forbidden\n* fix: regexp json view\n* chore: update fps and memory plugin version\n\n## v1.5.8 (2 Aug 2019)\n\n* fix: safeStorage undefined [#108](https://github.com/liriliri/eruda/issues/108)\n\n## v1.5.7 (15 Jul 2019)\n\n* Fix iOS max log number\n* Disable calling init if already initialized\n* Disable worker by default\n* Support xhr blob response type [#104](https://github.com/liriliri/eruda/issues/100)\n\n## v1.5.6 (17 Jun 2019)\n\n* Disable log collapse for objects\n\n## v1.5.5 (25 May 2019)\n\n* Fix resources error when cookie has % [#100](https://github.com/liriliri/eruda/issues/100)\n* Update dom plugin version\n\n## v1.5.4 (23 Sep 2018)\n\n* Fix network url start with //\n* Smaller padding for logs\n\n## v1.5.3 (2 Sep 2018)\n\n* Add load dom plugin snippet\n* Disable highlight for invisible elements\n* Fix unexpected token \\t in JSON\n* Add load orientation plugin snippet\n\n## v1.5.2 (23 Aug 2018)\n\n* Fix console show in sources panel\n* Fix log merge\n* Support getting entryBtn instance\n* Update timing plugin version\n* Add remove setting api\n* Fix safari merge log exception\n\n## v1.5.1 (18 Aug 2018)\n\n* Fix uglifyjs unicode escape [#69](https://github.com/liriliri/eruda/issues/69)\n* Update icons, use [iconfont](http://www.iconfont.cn) instead of [icomoon](https://icomoon.io/)\n* Show custom request headers [#78](https://github.com/liriliri/eruda/pull/78)\n* Add get api to info panel [#83](https://github.com/liriliri/eruda/issues/83)\n* Fix responseType json error [#82](https://github.com/liriliri/eruda/issues/82)\n* Support console lazy evaluation\n\n## v1.5.0 (19 Jun 2018)\n\n* Use shadow dom to encapsulate css\n* Enable sources copy [#71](https://github.com/liriliri/eruda/issues/71)\n* Improve **borderAll** style\n* Add **position** api [#74](https://github.com/liriliri/eruda/issues/74)\n* Fix nav bottom bar wrong position when removed\n\n## v1.4.4 (27 May 2018)\n\n* Improve console line break display\n* Add **rmCookie** util\n* Add **Load Geolocation Plugin** snippet\n* Fix Elements cssRules [#63](https://github.com/liriliri/eruda/issues/63)\n* Support console events [#66](https://github.com/liriliri/eruda/issues/66)\n* Fix Uc browser console worker [#62](https://github.com/liriliri/eruda/issues/62)\n\n## v1.4.3 (7 Feb 2018)\n\n* Dynamic info content support [#51](https://github.com/liriliri/eruda/issues/51)\n* Fix console input covered by error log\n* Add elements box model chart\n* Fix source code white-space style [#53](https://github.com/liriliri/eruda/issues/53)\n* Resources support iframe\n* Add **Load Benchmark Plugin** snippet\n\n## v1.4.2 (28 Jan 2018)\n\n* Extract viewportScale util into [eris](https://github.com/liriliri/eris)\n* Improve image list view using flex\n* Add DevTools display event hooks [#50](https://github.com/liriliri/eruda/issues/50)\n\n## v1.4.1 (13 Jan 2018)\n\n* Update timing plugin version\n* Fix viewportScale\n* Optimize console performance for big data\n* Expose snippets run api\n* Delete desktop scrollbar style\n* Add code plugin to snippets\n\n## v1.4.0 (7 Jan 2018)\n\n* Remove network timing into external plugin\n* Add system info\n* Add memory plugin snippet\n* Monitor fetch requests [#24](https://github.com/liriliri/eruda/issues/24)\n* Reduce json viewer click area\n* Use resource timing for image capture\n\n## v1.3.2 (14 Dec 2017)\n\n* Fix restore settings snippet\n* Extract *features* into an external plugin\n\n## v1.3.1 (19 Nov 2017)\n\n* Observe elements in resources panel\n* Fix performance timing not supported [#40](https://github.com/liriliri/eruda/issues/40)\n\n## v1.3.0 (5 Nov 2017)\n\n* Remove log margin\n* Fix css custom properties [#33](https://github.com/liriliri/eruda/issues/33)\n* Add version info\n* Change icomoon generated font name\n* Improve snippets style\n* Add *Load Fps Plugin* and *Restore Settings* snippets\n* Support navbar color customization\n* Support range in settings panel\n* Support auto scale [#32](https://github.com/liriliri/eruda/issues/32)\n* Improve *Border All* snippet\n* Use high resolution time for console time\n\n## v1.2.6 (31 Aug 2017)\n\n* Fix catch global errors\n\n## v1.2.5 (20 Aug 2017)\n\n* Fix cookie URI malformed\n* Fix single string argument unescaped\n* Update util library and dependencies\n* Fix catch event listeners [#31](https://github.com/liriliri/eruda/issues/31)\n* Console log scroll automatically only at bottom\n* Fix unformatted html tag\n\n## v1.2.4 (1 Jul 2017)\n\n* Fix uncaught promise error [#29](https://github.com/liriliri/eruda/issues/23)\n* Fix bad classes [#28](https://github.com/liriliri/eruda/issues/23)\n\n## v1.2.3 (15 May 2017)\n\n* Disable modernizr classes\n* Update eustia util\n* Fix console resize [#23](https://github.com/liriliri/eruda/issues/23)\n* Improve object log\n* Use outline for borderAll snippet\n\n## v1.2.2 (11 Mar 2017)\n\n* Fix log url recognition\n* Fix error log stack url and style\n* Fix table log ouput\n* Fix storage initialization [#20](https://github.com/liriliri/eruda/issues/20)\n* Update eustia lib\n* Elements auto refresh\n* Add pc scrollbar style"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016-present liriliri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0146484375,
          "content": "<div align=\"center\">\n  <a href=\"https://eruda.liriliri.io/\" target=\"_blank\">\n    <img src=\"https://eruda.liriliri.io/icon.png\" width=\"400\">\n  </a>\n</div>\n\n<h1 align=\"center\">Eruda</h1>\n\n<div align=\"center\">\n\nConsole for Mobile Browsers.\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][ci-image]][ci-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![Downloads][jsdelivr-image]][jsdelivr-url]\n[![License][license-image]][npm-url]\n\n</div>\n\n[npm-image]: https://img.shields.io/npm/v/eruda?style=flat-square\n[npm-url]: https://npmjs.org/package/eruda\n[jsdelivr-image]: https://img.shields.io/jsdelivr/npm/hm/eruda?style=flat-square\n[jsdelivr-url]: https://www.jsdelivr.com/package/npm/eruda\n[ci-image]: https://img.shields.io/github/actions/workflow/status/liriliri/eruda/main.yml?branch=master&style=flat-square\n[ci-url]: https://github.com/liriliri/eruda/actions/workflows/main.yml \n[codecov-image]: https://img.shields.io/codecov/c/github/liriliri/eruda?style=flat-square\n[codecov-url]: https://codecov.io/github/liriliri/eruda?branch=master\n[license-image]: https://img.shields.io/npm/l/eruda?style=flat-square\n[donate-image]: https://img.shields.io/badge/$-donate-0070ba.svg?style=flat-square\n\n<img src=\"https://eruda.liriliri.io/screenshot.jpg\" style=\"width:100%\">\n\n## Demo\n\n![Demo](https://eruda.liriliri.io/qrcode.png)\n\nBrowse it on your phone: [eruda.liriliri.io](https://eruda.liriliri.io/)\n\n## Install\n\nYou can get it on npm.\n\n```bash\nnpm install eruda --save-dev\n```\n\nAdd this script to your page.\n\n```html\n<script src=\"node_modules/eruda/eruda.js\"></script>\n<script>eruda.init();</script>\n```\n\nIt's also available on [jsDelivr](http://www.jsdelivr.com/projects/eruda) and [cdnjs](https://cdnjs.com/libraries/eruda).\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/eruda\"></script>\n<script>eruda.init();</script>\n```\n\nFor more detailed usage instructions, please read the documentation at [eruda.liriliri.io](https://eruda.liriliri.io/docs/)!\n\n## Related Projects\n\n* [eruda-android](https://github.com/liriliri/eruda-android): Simple webview with eruda loaded automatically.\n* [chii](https://github.com/liriliri/chii): Remote debugging tool.\n* [chobitsu](https://github.com/liriliri/chobitsu): Chrome devtools protocol JavaScript implementation.\n* [licia](https://github.com/liriliri/licia): Utility library used by eruda.\n* [luna](https://github.com/liriliri/luna): UI components used by eruda.\n* [vivy](https://github.com/liriliri/vivy-docs): Icon image generation.\n\n## Third Party\n\n* [eruda-pixel](https://github.com/Faithree/eruda-pixel): UI pixel restoration tool.\n* [eruda-webpack-plugin](https://github.com/huruji/eruda-webpack-plugin): Eruda webpack plugin.\n* [eruda-vue-devtools](https://github.com/Zippowxk/vue-devtools-plugin): Eruda Vue-devtools plugin.\n\n## Backers\n\n<a rel=\"noreferrer noopener\" href=\"https://opencollective.com/eruda\" target=\"_blank\"><img src=\"https://opencollective.com/eruda/backers.svg?width=890\"></a>\n\n## Contribution\n\nRead [Contributing Guide](https://eruda.liriliri.io/docs/contributing.html) for development setup instructions.\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "eruda.d.ts",
          "type": "blob",
          "size": 11.6025390625,
          "content": "/**\n * Type definitions for Eruda\n * @see https://github.com/liriliri/eruda\n */\ndeclare module 'eruda' {\n  export interface InitDefaults {\n    /**\n     * Transparency, 0 to 1\n     */\n    transparency?: number\n    /**\n     * Display size, 0 to 100\n     */\n    displaySize?: number\n    /**\n     * Theme, defaults to Light or Dark in dark mode\n     */\n    theme?: string\n  }\n\n  export interface InitOptions {\n    /**\n     * Container element. If not set, it will append an element directly under html root element\n     */\n    container?: HTMLElement\n    /**\n     * Choose which default tools you want, by default all will be added\n     */\n    tool?: string[]\n    /**\n     * Auto scale eruda for different viewport settings\n     */\n    autoScale?: boolean\n    /**\n     * Use shadow dom for css encapsulation\n     */\n    useShadowDom?: boolean\n    /**\n     * Enable inline mode\n     */\n    inline?: boolean\n    /**\n     * Default settings\n     */\n    defaults?: InitDefaults\n  }\n\n  export interface Position {\n    x: number\n    y: number\n  }\n\n  type AnyFn = (...args: any[]) => any\n\n  export interface Emitter {\n    on(event: string, listener: AnyFn): Emitter\n    off(event: string, listener: AnyFn): Emitter\n    once(event: string, listener: AnyFn): Emitter\n    emit(event: string, ...args: any[]): Emitter\n    removeAllListeners(event?: string): Emitter\n  }\n\n  /**\n   * Eruda Plugin\n   * @see https://eruda.liriliri.io/docs/plugin.html\n   */\n  export interface Tool {\n    /**\n     * Every plugin must have a unique name, which will be shown as the tab name on the top.\n     */\n    name: string\n    /**\n     * Called when plugin is added, and a document element used to display content is passed in.\n     * The element is wrapped as a jQuery like object, provided by the licia utility library.\n     */\n    init(el: unknown): void\n    /**\n     * Called when switch to the panel. Usually all you need to do is to show the container element.\n     */\n    show(): Tool | undefined\n    /**\n     * Called when switch to other panel. You should at least hide the container element here.\n     */\n    hide(): Tool | undefined\n    /**\n     * Called when plugin is removed using `eruda.remove('plugin name')`.\n     */\n    destroy(): void\n  }\n\n  export interface ToolConstructor {\n    new (): Tool\n    readonly prototype: Tool\n\n    extend(tool: Tool): ToolConstructor\n  }\n\n  export interface ConsoleConfig {\n    /**\n     * Asynchronous rendering\n     */\n    asyncRender?: boolean\n    /**\n     * Enable JavaScript execution\n     */\n    jsExecution?: boolean\n    /**\n     * Catch global errors\n     */\n    catchGlobalErr?: boolean\n    /**\n     * Override console\n     */\n    overrideConsole?: boolean\n    /**\n     * Display extra information\n     */\n    displayExtraInfo?: boolean\n    /**\n     * Display unenumerable properties\n     */\n    displayUnenumerable?: boolean\n    /**\n     * Access getter value\n     */\n    displayGetterVal?: boolean\n    /**\n     * Stringify object when clicked\n     */\n    lazyEvaluation?: boolean\n    /**\n     * Auto display if error occurs\n     */\n    displayIfErr?: boolean\n    /**\n     * Max log number\n     */\n    maxLogNum?: string\n  }\n\n  export interface Log {\n    type: string\n  }\n\n  export interface ErudaConsole extends Tool, Console {\n    config: {\n      set<K extends keyof ConsoleConfig>(name: K, value: ConsoleConfig[K]): void\n    }\n    /**\n     * Custom filter\n     */\n    filter(pattern: string | RegExp | ((log: Log) => boolean)): void\n    /**\n     * Html string\n     */\n    html(htmlStr: string): void\n  }\n\n  export interface ErudaConsoleConstructor {\n    new (): ErudaConsole\n    readonly prototype: ErudaConsole\n  }\n\n  export interface ElementsConfig {\n    /**\n     * Catch Event Listeners\n     */\n    overrideEventTarget?: boolean\n    /**\n     * Auto Refresh\n     */\n    observeElement?: boolean\n  }\n\n  export interface Elements extends Tool {\n    config: {\n      set<K extends keyof ElementsConfig>(\n        name: K,\n        value: ElementsConfig[K]\n      ): void\n    }\n    /**\n     * Element to display\n     */\n    select(el: HTMLElement): void\n  }\n\n  export interface ElementsConstructor {\n    new (): Elements\n    readonly prototype: Elements\n  }\n\n  export interface Network extends Tool {\n    /**\n     * Clear requests\n     */\n    clear(): void\n    /**\n     * Get request data\n     */\n    requests(): object[]\n  }\n\n  export interface NetworkConstructor {\n    new (): Network\n    readonly prototype: Network\n  }\n\n  export interface ResourcesConfig {\n    /**\n     * Hide Eruda Setting\n     */\n    hideErudaSetting?: boolean\n    /**\n     * Auto Refresh Elements\n     */\n    observeElement?: boolean\n  }\n\n  export interface Resources extends Tool {\n    config: {\n      set<K extends keyof ResourcesConfig>(\n        name: K,\n        value: ResourcesConfig[K]\n      ): void\n    }\n  }\n\n  export interface ResourcesConstructor {\n    new (): Resources\n    readonly prototype: Resources\n  }\n\n  export interface SourcesConfig {\n    /**\n     * Show Line Numbers\n     */\n    showLineNum?: boolean\n    /**\n     * Beautify Code\n     */\n    formatCode?: boolean\n    /**\n     * Indent Size\n     */\n    indentSize?: string\n  }\n\n  export interface Sources extends Tool {\n    config: {\n      set<K extends keyof SourcesConfig>(name: K, value: SourcesConfig[K]): void\n    }\n  }\n\n  export interface SourcesConstructor {\n    new (): Sources\n    readonly prototype: Sources\n  }\n\n  export interface InfoItem {\n    name: string\n    val: string\n  }\n\n  export interface Info extends Tool {\n    /**\n     * Clear infos\n     */\n    clear(): void\n    /**\n     * Add info\n     */\n    add(name: string, content: string | (() => void)): void\n    /**\n     * Get info or infos\n     */\n    get(): InfoItem[]\n    get(name: string): string\n    /**\n     * Remove specified info\n     */\n    remove(name: string): void\n  }\n\n  export interface InfoConstructor {\n    new (): Info\n    readonly prototype: Info\n  }\n\n  export interface Snippets extends Tool {\n    /**\n     * Clear snippets\n     */\n    clear(): void\n    /**\n     * Add snippet\n     * @param name Snippet name\n     * @param fn Function to be triggered\n     * @param desc Snippet description\n     */\n    add(name: string, fn: Function, desc: string): void\n    /**\n     * Remove specified snippet\n     * @param name Snippet name\n     */\n    remove(name: string): void\n    /**\n     * Run specified snippet\n     * @param name Snippet name\n     */\n    run(name: string): void\n  }\n\n  export interface SnippetsConstructor {\n    new (): Snippets\n    readonly prototype: Snippets\n  }\n\n  export interface SettingsRangeOptions {\n    min?: number\n    max?: number\n    step?: number\n  }\n\n  export interface Settings extends Tool {\n    /**\n     * Clear settings\n     */\n    clear(): void\n    /**\n     * Remove setting\n     * @param cfg Config object\n     * @param name Option name\n     */\n    remove(cfj: object, name: string): void\n    /**\n     * Add text\n     */\n    text(str: string): void\n    /**\n     * Add switch to toggle a boolean value\n     * @param cfg Config object created by util.createCfg\n     * @param name Option name\n     * @param desc Option description\n     */\n    switch(cfg: object, name: string, desc: string): void\n    /**\n     * Add select to select a number of string values\n     * @param cfg Config object\n     * @param name Option name\n     * @param desc Option description\n     * @param values Array of strings to select\n     */\n    select(cfg: object, name: string, desc: string, values: string[]): void\n    /**\n     * Add range to input a number\n     * @param cfg Config object\n     * @param name Option name\n     * @param desc Option description\n     * @param options Min, max, step\n     */\n    range(\n      cfg: object,\n      name: string,\n      desc: string,\n      options?: SettingsRangeOptions\n    ): void\n    /**\n     * Add a separator\n     */\n    separator(): void\n  }\n\n  export interface SettingsConstructor {\n    new (): Settings\n    readonly prototype: Settings\n  }\n\n  export interface EntryBtn extends Emitter {\n    show(): void\n    hide(): void\n    getPos(): Position\n    setPos(pos: Position): void\n    destroy(): void\n  }\n\n  export interface EntryBtnConstructor {\n    new (): EntryBtn\n    readonly prototype: EntryBtn\n  }\n\n  export interface DevTools extends Emitter {\n    show(): DevTools\n    hide(): DevTools\n    toggle(): void\n    add(tool: Tool | object): DevTools\n    remove(name: string): DevTools\n    removeAll(): DevTools\n    get<T extends ToolConstructor>(name: string): InstanceType<T> | undefined\n    showTool(name: string): DevTools\n    initCfg(settings: Settings): void\n    notify(content: string, options: object): void\n    destroy(): void\n  }\n\n  export interface DevToolsConstructor {\n    new (): DevTools\n    readonly prototype: DevTools\n  }\n\n  /**\n   * Eruda Util\n   * @see https://eruda.liriliri.io/docs/plugin.html#utility\n   */\n  export interface Util {\n    evalCss(css: string): HTMLStyleElement\n    isErudaEl(val: any): boolean\n    isDarkTheme(theme?: string): boolean\n    getTheme(): string\n  }\n\n  interface IToolNameMap {\n    console: InstanceType<ErudaConsoleConstructor>\n    elements: InstanceType<ElementsConstructor>\n    info: InstanceType<InfoConstructor>\n    network: InstanceType<NetworkConstructor>\n    resources: InstanceType<ResourcesConstructor>\n    settings: InstanceType<SettingsConstructor>\n    snippets: InstanceType<SnippetsConstructor>\n    sources: InstanceType<SourcesConstructor>\n    entryBtn: InstanceType<EntryBtnConstructor>\n  }\n\n  /**\n   * Eruda APIs\n   * @see https://eruda.liriliri.io/docs/api.html\n   */\n  export interface ErudaApis {\n    /**\n     * Initialize eruda.\n     */\n    init(options?: InitOptions): void\n    /**\n     * Destory eruda.\n     * Note: You can call `init` method again after destruction.\n     */\n    destroy(): void\n    /**\n     * Set or get scale.\n     */\n    scale(): number\n    scale(s: number): Eruda\n    /**\n     * Set or get entry button position.\n     * It will not take effect if given pos is out of range.\n     */\n    position(): Position\n    position(p: Position): Eruda\n    /**\n     * Get tool, eg. console, elements panels.\n     */\n    get<K extends keyof IToolNameMap>(name: K): IToolNameMap[K]\n    get<T extends ToolConstructor>(name: string): InstanceType<T> | undefined\n    get(): InstanceType<DevToolsConstructor>\n    /**\n     * Add tool.\n     */\n    add<T extends ToolConstructor>(\n      tool: InstanceType<T> | ((eruda: Eruda) => InstanceType<T>)\n    ): Eruda | undefined\n    /**\n     * Remove tool.\n     */\n    remove(name: string): Eruda | undefined\n    /**\n     * Show eruda panel.\n     */\n    show(name?: string): Eruda | undefined\n    /**\n     * Hide eruda panel.\n     */\n    hide(): Eruda | undefined\n  }\n\n  export interface Eruda extends ErudaApis {\n    /**\n     * Display console logs. Implementation detail follows the console api spec.\n     */\n    Console: ErudaConsoleConstructor\n    /**\n     * Check dom element status.\n     */\n    Elements: ElementsConstructor\n    /**\n     * Display special information, could be used for displaying user info to track user logs.\n     * By default, page url and browser user agent is shown.\n     */\n    Info: InfoConstructor\n    /**\n     * Display requests.\n     */\n    Network: NetworkConstructor\n    /**\n     * LocalStorage, sessionStorage, cookies, scripts, styleSheets and images.\n     */\n    Resources: ResourcesConstructor\n    /**\n     * Customization for all tools.\n     */\n    Settings: SettingsConstructor\n    /**\n     * Allow you to register small functions that can be triggered multiple times.\n     */\n    Snippets: SnippetsConstructor\n    /**\n     * View object, html, js, and css.\n     */\n    Sources: SourcesConstructor\n    /**\n     * Eruda Tool\n     */\n    Tool: ToolConstructor\n    /**\n     * Eruda Util\n     */\n    util: Util\n    /**\n     * Eruda version\n     */\n    readonly version: string\n  }\n\n  const eruda: Eruda\n\n  export default eruda\n}\n"
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 1.5390625,
          "content": "const webpackCfg = require('./build/webpack.dev')\nwebpackCfg.devtool = 'inline-source-map'\nwebpackCfg.module.rules.push({\n  test: /\\.js$/,\n  exclude: /node_modules|lib\\/util\\.js/,\n  loader: '@jsdevtools/coverage-istanbul-loader',\n  enforce: 'post',\n  options: {\n    esModules: true,\n  },\n})\n\nmodule.exports = function (config) {\n  config.set({\n    basePath: '',\n    frameworks: ['jquery-1.8.3'],\n    files: [\n      'src/index.js',\n      'test/init.js',\n      'node_modules/jasmine-core/lib/jasmine-core/jasmine.js',\n      'node_modules/karma-jasmine/lib/boot.js',\n      'node_modules/karma-jasmine/lib/adapter.js',\n      'node_modules/jasmine-jquery/lib/jasmine-jquery.js',\n      'test/util.js',\n      'test/console.js',\n      'test/elements.js',\n      'test/info.js',\n      'test/network.js',\n      'test/resources.js',\n      'test/snippets.js',\n      'test/sources.js',\n      'test/settings.js',\n      'test/eruda.js',\n    ],\n    plugins: [\n      'karma-jasmine',\n      'karma-jquery',\n      'karma-chrome-launcher',\n      'karma-webpack',\n      'karma-sourcemap-loader',\n      'karma-coverage-istanbul-reporter',\n    ],\n    webpackServer: {\n      noInfo: true,\n    },\n    preprocessors: {\n      'src/index.js': ['webpack', 'sourcemap'],\n    },\n    webpack: webpackCfg,\n    coverageIstanbulReporter: {\n      reports: ['html', 'lcovonly', 'text', 'text-summary'],\n    },\n    reporters: ['progress', 'coverage-istanbul'],\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    browsers: ['ChromeHeadless'],\n    singleRun: true,\n    concurrency: Infinity,\n  })\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.0751953125,
          "content": "{\n  \"name\": \"eruda\",\n  \"version\": \"3.4.1\",\n  \"description\": \"Console for Mobile Browsers\",\n  \"main\": \"eruda.js\",\n  \"browserslist\": [\n    \"since 2015\",\n    \"not dead\"\n  ],\n  \"scripts\": {\n    \"ci\": \"npm run lint && npm run test && npm run build && npm run es5\",\n    \"build\": \"lsla shx rm -rf dist && webpack --config build/webpack.prod.js && webpack --config build/webpack.polyfill.js && node build/build && lsla shx cp README.md eruda.d.ts dist\",\n    \"build:analyser\": \"webpack --config build/webpack.analyser.js\",\n    \"dev\": \"webpack-dev-server --config build/webpack.dev.js --host 0.0.0.0\",\n    \"test\": \"karma start\",\n    \"format\": \"lsla prettier \\\"*.{js,ts}\\\" \\\"src/**/*.{js,scss,css}\\\" \\\"build/*.js\\\" \\\"test/*.{js,html}\\\" --write\",\n    \"lint\": \"eslint src/**/*.js\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"es5\": \"es-check es5 dist/eruda.js dist/eruda-polyfill.js\",\n    \"setup\": \"lsla shx mkdir -p test/lib && lsla shx cp node_modules/jasmine-core/lib/jasmine-core/{jasmine.css,jasmine.js,jasmine-html.js,boot.js} test/lib && lsla shx cp node_modules/jasmine-jquery/lib/jasmine-jquery.js test/lib && lsla shx cp node_modules/jquery/dist/jquery.js test/lib\",\n    \"genIcon\": \"lsla genIcon --input src/style/icon --output src/style/icon.css --name eruda-icon && lsla prettier src/**/*.css --write\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/liriliri/eruda.git\"\n  },\n  \"keywords\": [\n    \"console\",\n    \"mobile\",\n    \"debug\"\n  ],\n  \"author\": \"redhoodsu\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/liriliri/eruda/issues\"\n  },\n  \"homepage\": \"https://eruda.liriliri.io/\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.18.6\",\n    \"@babel/plugin-proposal-class-properties\": \"^7.18.6\",\n    \"@babel/plugin-transform-runtime\": \"^7.18.6\",\n    \"@babel/preset-env\": \"^7.18.6\",\n    \"@babel/runtime\": \"^7.18.6\",\n    \"@jsdevtools/coverage-istanbul-loader\": \"^3.0.5\",\n    \"autoprefixer\": \"^9.7.4\",\n    \"babel-eslint\": \"^10.1.0\",\n    \"babel-loader\": \"^8.2.5\",\n    \"chobitsu\": \"^1.8.4\",\n    \"core-js\": \"^3.37.1\",\n    \"css-loader\": \"^3.4.2\",\n    \"es-check\": \"^6.2.1\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-loader\": \"^3.0.3\",\n    \"jasmine-core\": \"^2.99.1\",\n    \"jasmine-jquery\": \"^2.1.1\",\n    \"jquery\": \"^3.4.1\",\n    \"karma\": \"^6.4.0\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"karma-coverage-istanbul-reporter\": \"^2.1.1\",\n    \"karma-jasmine\": \"^1.1.2\",\n    \"karma-jquery\": \"^0.2.4\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-webpack\": \"^5.0.0\",\n    \"licia\": \"^1.44.0\",\n    \"luna-box-model\": \"^1.0.0\",\n    \"luna-console\": \"^1.3.5\",\n    \"luna-data-grid\": \"^1.0.0\",\n    \"luna-dom-viewer\": \"^1.4.0\",\n    \"luna-modal\": \"^1.2.3\",\n    \"luna-notification\": \"^0.3.2\",\n    \"luna-object-viewer\": \"^0.3.1\",\n    \"luna-setting\": \"^2.0.1\",\n    \"luna-tab\": \"^0.3.2\",\n    \"luna-text-viewer\": \"^0.2.1\",\n    \"postcss-clean\": \"^1.2.2\",\n    \"postcss-loader\": \"^3.0.0\",\n    \"postcss-prefixer\": \"^2.1.3\",\n    \"raw-loader\": \"^4.0.2\",\n    \"sass\": \"^1.77.6\",\n    \"sass-loader\": \"^14.2.1\",\n    \"webpack\": \"^5.92.1\",\n    \"webpack-bundle-analyzer\": \"^4.7.0\",\n    \"webpack-cli\": \"^5.1.4\",\n    \"webpack-dev-server\": \"^5.0.4\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}