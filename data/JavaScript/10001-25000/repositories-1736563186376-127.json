{
  "metadata": {
    "timestamp": 1736563186376,
    "page": 127,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "statsd/statsd",
      "stars": 17719,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1796875,
          "content": "# Dotfiles\n.git*\n.pkgr.yml\n.travis.yml\n\n# Non-app files\n*.md\n*.txt\nexampleProxyConfig.js\n\n# Non-app directories\ndebian\nnode_modules\npackager\nexamples\ndocs\n\n# Local dev files\nconfig.js\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0751953125,
          "content": "node_modules\n/config.js\n# WebStorm / IntelliJ IDEA project files\n.idea\n*.iml\n"
        },
        {
          "name": ".pkgr.yml",
          "type": "blob",
          "size": 0.1591796875,
          "content": "default_dependencies: false\ntargets:\n  ubuntu-14.04:\n  ubuntu-12.04:\n  debian-7:\n  centos-6:\nbefore:\n  - mv packager/Procfile .\nafter_install: ./packager/postinst\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2841796875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at \nstatsd-coc@googlegroups.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.732421875,
          "content": "# Contribute\n\nYou're interested in contributing to StatsD? *AWESOME*. Here are the basic steps:\n\n1. fork StatsD from here: http://github.com/statsd/statsd\n2. Clone your fork\n3. Hack away\n4. If you are adding new functionality, document it in the [docs][d]\n5. If necessary, rebase your commits into logical chunks, without errors\n6. Verify your code by running the test suite, and adding additional tests if able.\n7. Push the branch up to GitHub\n8. Send a pull request to the statsd/statsd project.\n\nWe'll do our best to get your changes in!\n\n# Contributors\n\nIn lieu of a list of contributors, check out the [commit history for the project](https://github.com/statsd/statsd/graphs/contributors)\n\n[d]: https://github.com/statsd/statsd/tree/master/docs\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 6.173828125,
          "content": "# Changelog\n\n## v0.10.2 (08/22/2023)\n\n- Support publishing amd64 and s390x container images\n\n## v0.10.1 (05/11/2023)\n\n- Include tag pushes in docker builds\n\n## v0.10.0 (05/11/2023)\n\n- Multiple documentation updates\n- Updated docker-compose syntax\n- Upgrade tests to use python3\n- Upgrade node base for Docker image\n- Automatic container publishing via GHA\n\n## v0.9.0 (08/27/2020)\n\n- Add support for graphite tagged metrics\n- Fix dashboard to 0 last_exception time on startup\n- Multiple documentation updates\n- Correct some out-dated integration examples\n- Update container image to use recent node version\n\n## v0.8.6 (02/19/2020)\n\n- Add an optional max TTL setting for gauges\n- add filter option for metrics\n\n## v0.8.5 (07/23/2019)\n\n- Update lodash (sub dependency) for security fix\n- Add the StatsD history to the docs\n- Add third party server interfaces to docs\n- Migrate docs from github wiki, and standardise markdown notation\n- Minor formatting proposals\n- Add docker image info to readme\n\n## v0.8.4 (07/11/2019)\n\n- update modern-syslog to 1.2.0 for node 12 compatibility\n- update package.json version to 0.8.3\n\n## v0.8.3 (07/11/2019)\n\n- correct backend flush loop\n- test and declare support for Current and LTS node\n- Correct reporter decleration in test runner\n- Convert codebase from var -> let / const (#673)\n- correct npm test script\n- correct travis deploy step\n\n## v0.8.2 (04/02/2019)\n\n- update travis npm token\n- update dockerfile to latest node-lts\n- correct gitter link\n- update dockerfile base image to node lts\n- Add gitter chat badge\n- run tests using python 3.7's pickle rather than 2.x cPickle (#669)\n\n## v0.8.1 (03/13/2019)\n\n- drop StatsD instance from proxy ring in instance of healthcheck failures (#665)\n- Add myself (elliot blackburn) to maintainers.md (#666)\n- add mysql backend link to docs/backend.md\n- Adding myself to MAINTAINERS.\n- begin testing on node lts and up\n- Added \"opencensus-backend\"\n- correct package.json links to new github organisation\n- Update MAINTAINERS.md\n- remove meta section of README\n- Create MAINTAINERS.md\n- Create DCO.txt\n- Create CODE_OF_CONDUCT.md\n- update README post transfer\n- Fixing Markdown formatting\n- fix simple typo\n- Added StatsdClient Kotlin implementation\n- fix formatting on backend interface docs\n- Update: ignore files\n- removes -q switch\n- Fix for failing test on node 0.10\n- fix usage of process.EventEmitter\n- Add plugin Warp10 to StatsD\n- Updated graphite link to read the docs\n\n## v0.8.0 (05/05/2016)\n- Modularized injest servers, with support for loading multiple servers\n- Added configurable tcp injest server\n- Added unix socket injest support\n- Added tcp repeater functionality\n- Added pickle protocol support to graphite backend\n- Added configurable IPv6 and TCP support to proxy\n- Added telnet admin interface to proxy\n- Multiple variable scoping fixes\n- Fixes to flush timer to reduce bucket drift\n- Fixes to ruby and java example client code\n- Dropped support for node v0.8.x\n- Fixed dependency issues for modern node versions\n- Updated npm hashring dependency to v3.2.0\n- Replaced npm node-syslog dependency with modern-syslog v1.1.2\n\n## v0.7.2 (09/02/2014)\n- Fixes to detecting valid packets\n\n## v0.7.1 (02/06/2014)\n- move contributing information into CONTRIBUTING.md\n- Updates winser to v0.1.6\n- examples: python: added efficiency note\n- python: examples: fixed doctests for Python 3\n- Standardized debian log locations\n- Enhancement: consume logger in graphite and repeater backends\n- Enhancement: update backend documentation\n- Enhancement: inject logger object into backend\n- Send STDOUT and STDERR to the appropriate files\n\n## v0.7.0 (12/05/2013)\n- added cluster proxy\n- measure and graph timestamp generation lag\n- added median calculation for timers\n- support for top percentiles for timers\n- drop support for node v0.6.x\n- support for setting the process title\n- functionality for optionally omitting stats_counts metrics\n- improved functionality to delete counters from the management console\n- updates to Debian packaging\n- added a clojure example client\n- cleaned up the Go example client\n- increased test coverage\n- documentation updates\n\n## v0.6.0 (03/15/2013)\n- added new metric types : sets, gauge deltas, histograms\n- added ability to delete idle stats\n- added support for configurable namespacing\n- added standard Deviation to timers stats (.std)\n- added last_flush_time and last_flush_length metrics to graphite backend\n- added ipv6 support\n- added StatsD repeater backend\n- added helper script to decide which timers to sample down\n- added Windows service support\n- added Scala example\n- added support for sampling timers.\n- added build testing on node 0.8, 0.9, and 0.10\n- fixed broken config file watching.\n- fixed for DNS errors from UDP socket\n- fixed for TCP client goes away crash.\n- removed debugInterval in favor of Console backend debugging\n- updated and reorganized Docs\n- updated examples scripts\n- improved the quality of randomness used for sampling.\n- moved  config.js to /lib folder to avoid confusion\n\n## v0.5.0 (07/20/2012)\n- add support for logging to syslog\n- add basic metrics gathering for StatsD and Graphite backend itself\n- several fixes and enhancements for the debian resources\n- fixed locale bug in Java client.\n- multiple fixes for the Java client\n\n## v0.4.0 (06/29/2012)\n- add bin/statsd\n- Add CLI bash client example\n- documentation updates\n- bug fixing, sample_data and data got swapped in Perl client\n- fix sampling in the python client\n- added sum to all metrics and mean to the total\n- changed the way we calculate some metrics by using a cumulative sum as it is more efficient for multiple percentile thresholds\n- update README mentioning to preferably use ints as values\n- Allow multiple metrics to be passed in one UDP packet delimited by a newline character.\n- added console backend\n- reformat topkeys log to feature sane key/value pairs\n\n## v0.3.0 (05/16/2012)\n- support backends installed from npm\n- fix test suite failures\n\n## v0.2.1 (05/14/2012)\n- add graphite backend in debian packaging\n\n## v0.2.0 (05/04/2012)\n- support for pluggable backends\n\n## v0.1.1 (05/02/2012)\n- add gauges type\n- percentThreshold also accepts list of percentiles\n- base sampling on sampleRate\n- updates for debian packaging\n- client example updates\n\n## v0.1.0 (02/17/2012)\n- initial npm release\n"
        },
        {
          "name": "DCO.txt",
          "type": "blob",
          "size": 1.3876953125,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6376953125,
          "content": "FROM node:18.16.0\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n# Install python\n# RUN apk add --no-cache --update g++ gcc libgcc libstdc++ linux-headers make python\n\n# Setup node envs\nARG NODE_ENV\nENV NODE_ENV $NODE_ENV\n\n# Install dependencies\nCOPY package.json /usr/src/app/\nRUN npm install && npm cache clean --force\n\n# Copy required src (see .dockerignore)\nCOPY . /usr/src/app\n\n# Set graphite hostname to \"graphite\"\nRUN \\\n  ls -la && \\\n  cp -v exampleConfig.js config.js && \\\n  sed -i 's/graphite.example.com/graphite/' config.js\n\n# Expose required ports\nEXPOSE 8125/udp\nEXPOSE 8126\n\n# Start statsd\nENTRYPOINT [ \"node\", \"stats.js\", \"config.js\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": " Copyright (c) 2010-2016 Etsy\n\n Permission is hereby granted, free of charge, to any person\n obtaining a copy of this software and associated documentation\n files (the \"Software\"), to deal in the Software without\n restriction, including without limitation the rights to use,\n copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the\n Software is furnished to do so, subject to the following\n conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 1.2861328125,
          "content": "StatsD is maintained by the following people.\n\nAll maintainers must agree to the [Developer Certificate of Origin][dco].\n\n## Steps to becoming a maintainer\n1. Open a PR where you add yourself to this file and agree to the DCO. Attach a little bit about your experience\nwith StatsD and how much time you think you can roughly spend on the project\n2. Current maintainers will review\n3. If it gets merged, you're in!\n\n## Retiring from being a maintainer\n1. Open a pull request moving yourself from current to past maintainers\n2. Mention [@statsd/statsd-maintainers](https://github.com/orgs/statsd/teams/statsd-maintainers) on the PR\n3. Have another maintainer approve/sign off\n4. Merge it\n\n## Current maintainers\n\n- **Daniel Schauenberg**: As a maintainer of StatsD, I agree to the [Developer Certificate of Origin][dco].\n- **Mike Heffner**: As a maintainer of StatsD, I agree to the [Developer Certificate of Origin][dco].\n- **Elliot Blackburn**: As a maintainer of StatsD, I agree to the [Developer Certificate of Origin][dco].\n\n[dco]: https://github.com/statsd/statsd/blob/5f58a9cc7442900c2e553ed1df3d6ce99e885226/DCO.txt\n\n## Past maintainers\n- [Tera Koch](https://github.com/pathzzrd)\n- [Ben Burry](https://github.com/benburry)\n- [Dan Rowe](https://github.com/draco2003)\n- [Erik Kastner](https://github.com/kastner)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8017578125,
          "content": "# StatsD [![Join the chat at https://gitter.im/statsd/statsd](https://badges.gitter.im/statsd/statsd.svg)](https://gitter.im/statsd/statsd?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) [![Docker Pulls](https://img.shields.io/docker/pulls/statsd/statsd)](https://hub.docker.com/r/statsd/statsd)\n\nA network daemon that runs on the [Node.js][node] platform and\nlistens for statistics, like counters and timers, sent over [UDP][udp] or\n[TCP][tcp] and sends aggregates to one or more pluggable backend services (e.g.,\n[Graphite][graphite]).\n\n## Key Concepts\n\n* *buckets*\n\n  Each stat is in its own \"bucket\". They are not predefined anywhere. Buckets\ncan be named anything that will translate to Graphite (periods make folders,\netc)\n\n* *values*\n\n  Each stat will have a value. How it is interpreted depends on modifiers. In\ngeneral values should be integers.\n\n* *flush*\n\n  After the flush interval timeout (defined by `config.flushInterval`,\n  default 10 seconds), stats are aggregated and sent to an upstream backend service.\n\n\n## Installation and Configuration\n\n### Docker\nStatsD supports docker in three ways:\n* The official container image on [GitHub Container Registry](https://github.com/statsd/statsd/pkgs/container/statsd)\n* The official container image on [DockerHub](https://hub.docker.com/r/statsd/statsd)\n* Building the image from the bundled [Dockerfile](./Dockerfile)\n\n### Manual installation\n * Install Node.js (All [`Current` and `LTS` Node.js versions](https://nodejs.org/en/about/releases/) are supported.)\n * Clone the project\n * Create a config file from `exampleConfig.js` and put it somewhere\n * Start the Daemon:\n   `node stats.js /path/to/config`\n\n## Usage\nThe basic line protocol expects metrics to be sent in the format:\n\n    <metricname>:<value>|<type>\n\nSo the simplest way to send in metrics from your command line if you have\nStatsD running with the default UDP server on localhost would be:\n\n    echo \"foo:1|c\" | nc -u -w0 127.0.0.1 8125\n\n## More Specific Topics\n* [Metric Types][docs_metric_types]\n* [Graphite Integration][docs_graphite]\n* [Supported Servers][docs_server]\n* [Supported Backends][docs_backend]\n* [Admin TCP Interface][docs_admin_interface]\n* [Server Interface][docs_server_interface]\n* [Backend Interface][docs_backend_interface]\n* [Metric Namespacing][docs_namespacing]\n* [StatsD Cluster Proxy][docs_cluster_proxy]\n\n## Debugging\nThere are additional config variables available for debugging:\n\n* `debug` - log exceptions and print out more diagnostic info\n* `dumpMessages` - print debug info on incoming messages\n\nFor more information, check the `exampleConfig.js`.\n\n\n## Tests\nA test framework has been added using node-unit and some custom code to start\nand manipulate StatsD. Please add tests under test/ for any new features or bug\nfixes encountered. Testing a live server can be tricky, attempts were made to\neliminate race conditions but it may be possible to encounter a stuck state. If\ndoing dev work, a `killall statsd` will kill any stray test servers in the\nbackground (don't do this on a production machine!).\n\nTests can be executed with `./run_tests.sh`.\n\n## History\nStatsD was originally written at [Etsy][etsy] and released with a\n[blog post][blog post] about how it works and why we created it.\n\n## Inspiration\nStatsD was inspired (heavily) by the project of the same name at Flickr.\nHere's a post where Cal Henderson described it in depth:\n[Counting and timing][counting-timing].\nCal re-released the code recently:\n[Perl StatsD][Flicker-StatsD]\n\n\n\n[graphite]: http://graphite.readthedocs.org/\n[etsy]: http://www.etsy.com\n[blog post]: https://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/\n[node]: http://nodejs.org\n[nodemods]: http://nodejs.org/api/modules.html\n[counting-timing]: http://code.flickr.com/blog/2008/10/27/counting-timing/\n[Flicker-StatsD]: https://github.com/iamcal/Flickr-StatsD\n[udp]: http://en.wikipedia.org/wiki/User_Datagram_Protocol\n[tcp]: http://en.wikipedia.org/wiki/Transmission_Control_Protocol\n[docs_metric_types]: https://github.com/statsd/statsd/blob/master/docs/metric_types.md\n[docs_graphite]: https://github.com/statsd/statsd/blob/master/docs/graphite.md\n[docs_server]: https://github.com/statsd/statsd/blob/master/docs/server.md\n[docs_backend]: https://github.com/statsd/statsd/blob/master/docs/backend.md\n[docs_admin_interface]: https://github.com/statsd/statsd/blob/master/docs/admin_interface.md\n[docs_server_interface]: https://github.com/statsd/statsd/blob/master/docs/server_interface.md\n[docs_backend_interface]: https://github.com/statsd/statsd/blob/master/docs/backend_interface.md\n[docs_namespacing]: https://github.com/etsy/statsd/blob/master/docs/namespacing.md\n[docs_cluster_proxy]: https://github.com/etsy/statsd/blob/master/docs/cluster_proxy.md\n[travis-ci_status_img]: https://travis-ci.org/statsd/statsd.svg?branch=master\n[travis-ci_statsd]: https://travis-ci.org/statsd/statsd\n"
        },
        {
          "name": "backends",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.376953125,
          "content": "version: '2'\nservices:\n  statsd:\n    build: .\n    links:\n    - carbon:graphite\n    ports:\n    - 8125:8125/udp\n    - 8126:8126\n\n  graphite-web:\n    image: dockerana/graphite\n    links:\n    - carbon\n    ports:\n    - 8000:8000\n    volumes_from:\n    - carbon\n\n  carbon:\n    image: dockerana/carbon\n    ports:\n    - 2003:2003\n    - 2004:2004\n    - 7002:7002\n    volumes:\n    - /opt/graphite\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "exampleConfig.js",
          "type": "blob",
          "size": 7.8134765625,
          "content": "/*\nGraphite Required Variable:\n\n(Leave this unset to avoid sending stats to Graphite.\n Set debug flag and leave this unset to run in 'dry' debug mode -\n useful for testing statsd clients without a Graphite server.)\n\n  graphiteHost:     hostname or IP of Graphite server\n\nOptional Variables:\n\n  graphitePort:     port for the graphite text collector [default: 2003]\n  graphitePicklePort: port for the graphite pickle collector [default: 2004]\n  graphiteProtocol: either 'text' or 'pickle' [default: 'text']\n  backends:         an array of backends to load. Each backend must exist\n                    by name in the directory backends/. If not specified,\n                    the default graphite backend will be loaded.\n                    * example for console and graphite:\n                    [ \"./backends/console\", \"./backends/graphite\" ]\n\n  servers:          an array of server configurations.\n                    If not specified, the server, address,\n                    address_ipv6, and port top-level configuration\n                    options are used to configure a single server for\n                    backwards-compatibility\n                    Each server configuration supports the following keys:\n    server:         the server to load. The server must exist by name in the directory\n                    servers/. If not specified, the default udp server will be loaded.\n                    * example for tcp server:\n                    \"./servers/tcp\"\n    address:        address to listen on [default: 0.0.0.0]\n    address_ipv6:   defines if the address is an IPv4 or IPv6 address [true or false, default: false]\n    port:           port to listen for messages on [default: 8125]\n    socket:         (only for tcp servers) path to unix domain socket which will be used to receive\n                    metrics [default: undefined]\n    socket_mod:     (only for tcp servers) file mode which should be applied to unix domain socket, relevant\n                    only if socket option is used [default: undefined]\n\n  debug:            debug flag [default: false]\n  mgmt_address:     address to run the management TCP interface on\n                    [default: 0.0.0.0]\n  mgmt_port:        port to run the management TCP interface on [default: 8126]\n  title:            Allows for overriding the process title. [default: statsd]\n                    if set to false, will not override the process title and let the OS set it.\n                    The length of the title has to be less than or equal to the binary name + cli arguments\n                    NOTE: This does not work on Mac's with node versions prior to v0.10\n\n  healthStatus:     default health status to be returned and statsd process starts ['up' or 'down', default: 'up']\n  dumpMessages:     log all incoming messages\n  flushInterval:    interval (in ms) to flush metrics to each backend\n  percentThreshold: for time information, calculate the Nth percentile(s)\n                    (can be a single value or list of floating-point values)\n                    negative values mean to use \"top\" Nth percentile(s) values\n                    [%, default: 90]\n  flush_counts:     send stats_counts metrics [default: true]\n\n  keyFlush:         log the most frequently sent keys [object, default: undefined]\n    interval:       how often to log frequent keys [ms, default: 0]\n    percent:        percentage of frequent keys to log [%, default: 100]\n    log:            location of log file for frequent keys [default: STDOUT]\n  deleteIdleStats:  don't send values to graphite for inactive counters, sets, gauges, or timers\n                    as opposed to sending 0.  For gauges, this unsets the gauge (instead of sending\n                    the previous value). Can be individually overridden. [default: false]\n  deleteGauges:     don't send values to graphite for inactive gauges, as opposed to sending the previous value [default: false]\n  gaugesMaxTTL:     number of flush cycles to wait before the gauge is marked as inactive, to use in combination with deleteGauges [default: 1]\n  deleteTimers:     don't send values to graphite for inactive timers, as opposed to sending 0 [default: false]\n  deleteSets:       don't send values to graphite for inactive sets, as opposed to sending 0 [default: false]\n  deleteCounters:   don't send values to graphite for inactive counters, as opposed to sending 0 [default: false]\n  prefixStats:      prefix to use for the statsd statistics data for this running instance of statsd [default: statsd]\n                    applies to both legacy and new namespacing\n  keyNameSanitize:  sanitize all stat names on ingress [default: true]\n                    If disabled, it is up to the backends to sanitize keynames\n                    as appropriate per their storage requirements.\n\n  calculatedTimerMetrics: List of timer metrics that will be sent. Default will send all metrics.\n                          To filter on percents and top percents: append '_percent' to the metric name.\n                          Example: calculatedTimerMetrics: ['count', 'median', 'upper_percent', 'histogram']\n\n  console:\n    prettyprint:    whether to prettyprint the console backend\n                    output [true or false, default: true]\n\n  log:              log settings [object, default: undefined]\n    backend:        where to log: stdout or syslog [string, default: stdout]\n    application:    name of the application for syslog [string, default: statsd]\n    level:          log level for [node-]syslog [string, default: LOG_INFO]\n\n  graphite:\n    legacyNamespace:  use the legacy namespace [default: true]\n    globalPrefix:     global prefix to use for sending stats to graphite [default: \"stats\"]\n    prefixCounter:    graphite prefix for counter metrics [default: \"counters\"]\n    prefixTimer:      graphite prefix for timer metrics [default: \"timers\"]\n    prefixGauge:      graphite prefix for gauge metrics [default: \"gauges\"]\n    prefixSet:        graphite prefix for set metrics [default: \"sets\"]\n    globalSuffix:     global suffix to use for sending stats to graphite [default: \"\"]\n                      This is particularly useful for sending per host stats by\n                      settings this value to: require('os').hostname().split('.')[0]\n\n  repeater:         an array of hashes of the for host: and port:\n                    that details other statsd servers to which the received\n                    packets should be \"repeated\" (duplicated to).\n                    e.g. [ { host: '10.10.10.10', port: 8125 },\n                           { host: 'observer', port: 88125 } ]\n\n  repeaterProtocol: whether to use udp4, udp6, or tcp for repeaters.\n                    [\"udp4,\" \"udp6\", or \"tcp\" default: \"udp4\"]\n\n  histogram:        for timers, an array of mappings of strings (to match metrics) and\n                    corresponding ordered non-inclusive upper limits of bins.\n                    For all matching metrics, histograms are maintained over\n                    time by writing the frequencies for all bins.\n                    'inf' means infinity. A lower limit of 0 is assumed.\n                    default: [], meaning no histograms for any timer.\n                    First match wins.  examples:\n                    * histogram to only track render durations, with unequal\n                      class intervals and catchall for outliers:\n                      [ { metric: 'render', bins: [ 0.01, 0.1, 1, 10, 'inf'] } ]\n                    * histogram for all timers except 'foo' related,\n                      equal class interval and catchall for outliers:\n                     [ { metric: 'foo', bins: [] },\n                       { metric: '', bins: [ 50, 100, 150, 200, 'inf'] } ]\n\n  automaticConfigReload: whether to watch the config file and reload it when it\n                         changes. The default is true. Set this to false to disable.\n*/\n{\n  graphitePort: 2003\n, graphiteHost: \"graphite.example.com\"\n, port: 8125\n, backends: [ \"./backends/graphite\" ]\n}\n"
        },
        {
          "name": "exampleProxyConfig.js",
          "type": "blob",
          "size": 1.6376953125,
          "content": "/*\n\nRequired Variables:\n\n  port:             StatsD Cluster Proxy listening port [default: 8125]\n  mgmt_port:        StatsD Cluster Proxy telnet management port [default: 8126]\n  mgmt_address:     address to run the management TCP interface on [default: 0.0.0.0]\n  nodes:            list of StatsD instances\n     host:          address of an instance of StatsD\n     port:          port that this instance is listening on\n     adminport:     port that this instance is listening on for the admininterface\n\nOptional Variables:\n\n  host:             address to listen on over UDP [default: 0.0.0.0]\n  address_ipv6:     defines if the listen address is an IPv4 or IPv6 address [true or false, default: false]\n  checkInterval:    health status check interval [default: 10000]\n  cacheSize:        size of the cache to store for hashring key lookups [default: 10000]\n  forkCount:        number of child processes (cluster module), number or 'auto' for utilize all cpus [default:0]\n  server:           the server to load. The server must exist by name in the directory\n                    servers/. If not specified, the default udp server will be loaded.\n                    Note: This will still send to the backends via udp regardless of the\n                    server type for the proxy\n                    * example for tcp server:\n                    \"./servers/tcp\"\n\n*/\n{\nnodes: [\n{host: '127.0.0.1', port: 8127, adminport: 8128},\n{host: '127.0.0.1', port: 8129, adminport: 8130},\n{host: '127.0.0.1', port: 8131, adminport: 8132}\n],\nserver: './servers/udp',\nhost:  '0.0.0.0',\nport: 8125,\nudp_version:'udp4',\nmgmt_port: 8126,\nforkCount: 0,\ncheckInterval: 1000,\ncacheSize: 10000\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 83.412109375,
          "content": "{\n  \"name\": \"statsd\",\n  \"version\": \"0.8.6\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"@babel/code-frame\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.0.0.tgz\",\n      \"integrity\": \"sha512-OfC2uemaknXr87bdLUkWog7nYuliM9Ij5HUcajsVcMCpQrcLmtxRbVFTIqmcSkSeYRBFBRxs2FiUqFJDLdiebA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/highlight\": \"^7.0.0\"\n      }\n    },\n    \"@babel/generator\": {\n      \"version\": \"7.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.4.4.tgz\",\n      \"integrity\": \"sha512-53UOLK6TVNqKxf7RUh8NE851EHRxOOeVXKbK2bivdb+iziMyk03Sr4eaE9OELCbyZAAafAKPDwF2TPUES5QbxQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.4.4\",\n        \"jsesc\": \"^2.5.1\",\n        \"lodash\": \"^4.17.11\",\n        \"source-map\": \"^0.5.0\",\n        \"trim-right\": \"^1.0.1\"\n      }\n    },\n    \"@babel/helper-function-name\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.1.0.tgz\",\n      \"integrity\": \"sha512-A95XEoCpb3TO+KZzJ4S/5uW5fNe26DjBGqf1o9ucyLyCmi1dXq/B3c8iaWTfBk3VvetUxl16e8tIrd5teOCfGw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-get-function-arity\": \"^7.0.0\",\n        \"@babel/template\": \"^7.1.0\",\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"@babel/helper-get-function-arity\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.0.0.tgz\",\n      \"integrity\": \"sha512-r2DbJeg4svYvt3HOS74U4eWKsUAMRH01Z1ds1zx8KNTPtpTL5JAsdFv8BNyOpVqdFhHkkRDIg5B4AsxmkjAlmQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"@babel/helper-split-export-declaration\": {\n      \"version\": \"7.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.4.4.tgz\",\n      \"integrity\": \"sha512-Ro/XkzLf3JFITkW6b+hNxzZ1n5OQ80NvIUdmHspih1XAhtN3vPTuUFT4eQnela+2MaZ5ulH+iyP513KJrxbN7Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.4.4\"\n      }\n    },\n    \"@babel/highlight\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.0.0.tgz\",\n      \"integrity\": \"sha512-UFMC4ZeFC48Tpvj7C8UgLvtkaUuovQX+5xNWrsIoMG8o2z+XFKjKaN9iVmS84dPwVN00W4wPmqvYoZF3EGAsfw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"chalk\": \"^2.0.0\",\n        \"esutils\": \"^2.0.2\",\n        \"js-tokens\": \"^4.0.0\"\n      }\n    },\n    \"@babel/parser\": {\n      \"version\": \"7.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.4.5.tgz\",\n      \"integrity\": \"sha512-9mUqkL1FF5T7f0WDFfAoDdiMVPWsdD1gZYzSnaXsxUCUqzuch/8of9G3VUSNiZmMBoRxT3neyVsqeiL/ZPcjew==\",\n      \"dev\": true\n    },\n    \"@babel/template\": {\n      \"version\": \"7.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.4.4.tgz\",\n      \"integrity\": \"sha512-CiGzLN9KgAvgZsnivND7rkA+AeJ9JB0ciPOD4U59GKbQP2iQl+olF1l76kJOupqidozfZ32ghwBEJDhnk9MEcw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"@babel/parser\": \"^7.4.4\",\n        \"@babel/types\": \"^7.4.4\"\n      }\n    },\n    \"@babel/traverse\": {\n      \"version\": \"7.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.4.5.tgz\",\n      \"integrity\": \"sha512-Vc+qjynwkjRmIFGxy0KYoPj4FdVDxLej89kMHFsWScq999uX+pwcX4v9mWRjW0KcAYTPAuVQl2LKP1wEVLsp+A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"@babel/generator\": \"^7.4.4\",\n        \"@babel/helper-function-name\": \"^7.1.0\",\n        \"@babel/helper-split-export-declaration\": \"^7.4.4\",\n        \"@babel/parser\": \"^7.4.5\",\n        \"@babel/types\": \"^7.4.4\",\n        \"debug\": \"^4.1.0\",\n        \"globals\": \"^11.1.0\",\n        \"lodash\": \"^4.17.11\"\n      }\n    },\n    \"@babel/types\": {\n      \"version\": \"7.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.4.4.tgz\",\n      \"integrity\": \"sha512-dOllgYdnEFOebhkKCjzSVFqw/PmmB8pH6RGOWkY4GsboQNd47b1fBThBSwlHAq9alF9vc1M3+6oqR47R50L0tQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"esutils\": \"^2.0.2\",\n        \"lodash\": \"^4.17.11\",\n        \"to-fast-properties\": \"^2.0.0\"\n      }\n    },\n    \"ajv\": {\n      \"version\": \"6.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.10.0.tgz\",\n      \"integrity\": \"sha512-nffhOpkymDECQyR0mnsUtoCE8RlX38G0rYP+wgLWFyZuUyuuojSSvi/+euOiQBIn63whYwYVIIH1TvE3tu4OEg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fast-deep-equal\": \"^2.0.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      }\n    },\n    \"ansi-regex\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz\",\n      \"integrity\": \"sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^1.9.0\"\n      }\n    },\n    \"append-transform\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/append-transform/-/append-transform-1.0.0.tgz\",\n      \"integrity\": \"sha512-P009oYkeHyU742iSZJzZZywj4QRJdnTWffaKuJQLablCZ1uz6/cW4yaRgcDaoQ+uwOxxnt0gRUcwfsNP2ri0gw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"default-require-extensions\": \"^2.0.0\"\n      }\n    },\n    \"archy\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/archy/-/archy-1.0.0.tgz\",\n      \"integrity\": \"sha1-+cjBN1fMHde8N5rHeyxipcKGjEA=\",\n      \"dev\": true\n    },\n    \"arg\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-4.1.0.tgz\",\n      \"integrity\": \"sha512-ZWc51jO3qegGkVh8Hwpv636EkbesNV5ZNQPCtRa+0qytRYPEs9IYT9qITY9buezqUH5uqyzlWLcufrzU2rffdg==\",\n      \"dev\": true\n    },\n    \"argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"asn1\": {\n      \"version\": \"0.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz\",\n      \"integrity\": \"sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safer-buffer\": \"~2.1.0\"\n      }\n    },\n    \"assert-plus\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n      \"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\",\n      \"dev\": true\n    },\n    \"asynckit\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n      \"integrity\": \"sha1-x57Zf380y48robyXkLzDZkdLS3k=\",\n      \"dev\": true\n    },\n    \"aws-sign2\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",\n      \"integrity\": \"sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=\",\n      \"dev\": true\n    },\n    \"aws4\": {\n      \"version\": \"1.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.8.0.tgz\",\n      \"integrity\": \"sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ==\",\n      \"dev\": true\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz\",\n      \"integrity\": \"sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\",\n      \"dev\": true\n    },\n    \"bcrypt-pbkdf\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz\",\n      \"integrity\": \"sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=\",\n      \"dev\": true,\n      \"requires\": {\n        \"tweetnacl\": \"^0.14.3\"\n      }\n    },\n    \"bind-obj-methods\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/bind-obj-methods/-/bind-obj-methods-2.0.0.tgz\",\n      \"integrity\": \"sha512-3/qRXczDi2Cdbz6jE+W3IflJOutRVica8frpBn14de1mBOkzDo+6tY33kNhvkw54Kn3PzRRD2VnGbGPcTAk4sw==\",\n      \"dev\": true\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"browser-process-hrtime\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-1.0.0.tgz\",\n      \"integrity\": \"sha512-9o5UecI3GhkpM6DrXr69PblIuWxPKk9Y0jHBRhdocZ2y7YECBFCsHm79Pr3OyR2AvjhDkabFJaDJMYRazHgsow==\",\n      \"dev\": true\n    },\n    \"buffer-from\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz\",\n      \"integrity\": \"sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==\",\n      \"dev\": true\n    },\n    \"caching-transform\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/caching-transform/-/caching-transform-3.0.2.tgz\",\n      \"integrity\": \"sha512-Mtgcv3lh3U0zRii/6qVgQODdPA4G3zhG+jtbCWj39RXuUFTMzH0vcdMtaJS1jPowd+It2Pqr6y3NJMQqOqCE2w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"hasha\": \"^3.0.0\",\n        \"make-dir\": \"^2.0.0\",\n        \"package-hash\": \"^3.0.0\",\n        \"write-file-atomic\": \"^2.4.2\"\n      }\n    },\n    \"camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n      \"dev\": true\n    },\n    \"capture-stack-trace\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/capture-stack-trace/-/capture-stack-trace-1.0.1.tgz\",\n      \"integrity\": \"sha512-mYQLZnx5Qt1JgB1WEiMCf2647plpGeQ2NMR/5L0HNZzGQo4fuSPnK+wjfPnKZV0aiJDgzmWqqkV/g7JD+DW0qw==\",\n      \"dev\": true\n    },\n    \"caseless\": {\n      \"version\": \"0.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",\n      \"integrity\": \"sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=\",\n      \"dev\": true\n    },\n    \"chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      }\n    },\n    \"clean-yaml-object\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz\",\n      \"integrity\": \"sha1-Y/sRDcLOGoTcIfbZM0h20BCui2g=\",\n      \"dev\": true\n    },\n    \"cliui\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-5.0.0.tgz\",\n      \"integrity\": \"sha512-PYeGSEmmHM6zvoef2w8TPzlrnNpXIjTipYK780YswmIP9vjxmd6Y2a3CB2Ks6/AU8NHjZugXvo8w3oWM2qnwXA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^3.1.0\",\n        \"strip-ansi\": \"^5.2.0\",\n        \"wrap-ansi\": \"^5.1.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\",\n      \"dev\": true\n    },\n    \"color-support\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz\",\n      \"integrity\": \"sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==\",\n      \"dev\": true\n    },\n    \"combined-stream\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"delayed-stream\": \"~1.0.0\"\n      }\n    },\n    \"commander\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-1.3.1.tgz\",\n      \"integrity\": \"sha1-AkQ+AtuW9LMrZ0IlRRq7bpUQAA4=\",\n      \"optional\": true,\n      \"requires\": {\n        \"keypress\": \"0.1.x\"\n      }\n    },\n    \"commondir\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n      \"integrity\": \"sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\",\n      \"dev\": true\n    },\n    \"connection-parse\": {\n      \"version\": \"0.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/connection-parse/-/connection-parse-0.0.7.tgz\",\n      \"integrity\": \"sha1-GOcxiqsGppkmc3KxDFIm0locmmk=\",\n      \"optional\": true\n    },\n    \"convert-source-map\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.6.0.tgz\",\n      \"integrity\": \"sha512-eFu7XigvxdZ1ETfbgPBohgyQ/Z++C0eEhTor0qRwBw9unw+L0/6V8wkSuGgzdThkiS5lSpdptOQPD8Ak40a+7A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"~5.1.1\"\n      }\n    },\n    \"core-util-is\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\",\n      \"integrity\": \"sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\",\n      \"dev\": true\n    },\n    \"coveralls\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/coveralls/-/coveralls-3.0.4.tgz\",\n      \"integrity\": \"sha512-eyqUWA/7RT0JagiL0tThVhjbIjoiEUyWCjtUJoOPcWoeofP5WK/jb2OJYoBFrR6DvplR+AxOyuBqk4JHkk5ykA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"growl\": \"~> 1.10.0\",\n        \"js-yaml\": \"^3.11.0\",\n        \"lcov-parse\": \"^0.0.10\",\n        \"log-driver\": \"^1.2.7\",\n        \"minimist\": \"^1.2.0\",\n        \"request\": \"^2.86.0\"\n      }\n    },\n    \"cp-file\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/cp-file/-/cp-file-6.2.0.tgz\",\n      \"integrity\": \"sha512-fmvV4caBnofhPe8kOcitBwSn2f39QLjnAnGq3gO9dfd75mUytzKNZB1hde6QHunW2Rt+OwuBOMc3i1tNElbszA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"make-dir\": \"^2.0.0\",\n        \"nested-error-stacks\": \"^2.0.0\",\n        \"pify\": \"^4.0.1\",\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"cross-spawn\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-4.0.2.tgz\",\n      \"integrity\": \"sha1-e5JHYhwjrf3ThWAEqCPL45dCTUE=\",\n      \"dev\": true,\n      \"requires\": {\n        \"lru-cache\": \"^4.0.1\",\n        \"which\": \"^1.2.9\"\n      }\n    },\n    \"dashdash\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\",\n      \"integrity\": \"sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\"\n      }\n    },\n    \"debug\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.1.1.tgz\",\n      \"integrity\": \"sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"decamelize\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz\",\n      \"integrity\": \"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\",\n      \"dev\": true\n    },\n    \"default-require-extensions\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-2.0.0.tgz\",\n      \"integrity\": \"sha1-9fj7sYp9bVCyH2QfZJ67Uiz+JPc=\",\n      \"dev\": true,\n      \"requires\": {\n        \"strip-bom\": \"^3.0.0\"\n      }\n    },\n    \"delayed-stream\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n      \"integrity\": \"sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\",\n      \"dev\": true\n    },\n    \"diff\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-1.4.0.tgz\",\n      \"integrity\": \"sha1-fyjS657nsVqX79ic5j3P2qPMur8=\",\n      \"dev\": true\n    },\n    \"domain-browser\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz\",\n      \"integrity\": \"sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA==\",\n      \"dev\": true\n    },\n    \"ecc-jsbn\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz\",\n      \"integrity\": \"sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"jsbn\": \"~0.1.0\",\n        \"safer-buffer\": \"^2.1.0\"\n      }\n    },\n    \"ejs\": {\n      \"version\": \"2.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/ejs/-/ejs-2.6.2.tgz\",\n      \"integrity\": \"sha512-PcW2a0tyTuPHz3tWyYqtK6r1fZ3gp+3Sop8Ph+ZYN81Ob5rwmbHEzaqs10N3BEsaGTkh/ooniXK+WwszGlc2+Q==\",\n      \"dev\": true\n    },\n    \"emoji-regex\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz\",\n      \"integrity\": \"sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==\",\n      \"dev\": true\n    },\n    \"end-of-stream\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz\",\n      \"integrity\": \"sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.4.0\"\n      }\n    },\n    \"error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"es6-error\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz\",\n      \"integrity\": \"sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==\",\n      \"dev\": true\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n      \"dev\": true\n    },\n    \"esm\": {\n      \"version\": \"3.2.25\",\n      \"resolved\": \"https://registry.npmjs.org/esm/-/esm-3.2.25.tgz\",\n      \"integrity\": \"sha512-U1suiZ2oDVWv4zPO56S0NcR5QriEahGtdN2OR6FiOG4WJvcjBVFB0qI4+eKoWFH483PKGuLuu6V8Z4T5g63UVA==\",\n      \"dev\": true\n    },\n    \"esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true\n    },\n    \"esutils\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz\",\n      \"integrity\": \"sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=\",\n      \"dev\": true\n    },\n    \"events-to-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/events-to-array/-/events-to-array-1.1.2.tgz\",\n      \"integrity\": \"sha1-LUH1Y+H+QA7Uli/hpNXGp1Od9/Y=\",\n      \"dev\": true\n    },\n    \"execa\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-1.0.0.tgz\",\n      \"integrity\": \"sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cross-spawn\": \"^6.0.0\",\n        \"get-stream\": \"^4.0.0\",\n        \"is-stream\": \"^1.1.0\",\n        \"npm-run-path\": \"^2.0.0\",\n        \"p-finally\": \"^1.0.0\",\n        \"signal-exit\": \"^3.0.0\",\n        \"strip-eof\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"cross-spawn\": {\n          \"version\": \"6.0.5\",\n          \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz\",\n          \"integrity\": \"sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"nice-try\": \"^1.0.4\",\n            \"path-key\": \"^2.0.1\",\n            \"semver\": \"^5.5.0\",\n            \"shebang-command\": \"^1.2.0\",\n            \"which\": \"^1.2.9\"\n          }\n        }\n      }\n    },\n    \"extend\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\",\n      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\",\n      \"dev\": true\n    },\n    \"extsprintf\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\",\n      \"integrity\": \"sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=\",\n      \"dev\": true\n    },\n    \"fast-deep-equal\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz\",\n      \"integrity\": \"sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=\",\n      \"dev\": true\n    },\n    \"fast-json-stable-stringify\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz\",\n      \"integrity\": \"sha1-1RQsDK7msRifh9OnYREGT4bIu/I=\",\n      \"dev\": true\n    },\n    \"find-cache-dir\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz\",\n      \"integrity\": \"sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"commondir\": \"^1.0.1\",\n        \"make-dir\": \"^2.0.0\",\n        \"pkg-dir\": \"^3.0.0\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz\",\n      \"integrity\": \"sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"locate-path\": \"^3.0.0\"\n      }\n    },\n    \"foreground-child\": {\n      \"version\": \"1.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-1.5.6.tgz\",\n      \"integrity\": \"sha1-T9ca0t/elnibmApcCilZN8svXOk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"cross-spawn\": \"^4\",\n        \"signal-exit\": \"^3.0.0\"\n      }\n    },\n    \"forever-agent\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\",\n      \"integrity\": \"sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=\",\n      \"dev\": true\n    },\n    \"form-data\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz\",\n      \"integrity\": \"sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"asynckit\": \"^0.4.0\",\n        \"combined-stream\": \"^1.0.6\",\n        \"mime-types\": \"^2.1.12\"\n      }\n    },\n    \"fs-exists-cached\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-exists-cached/-/fs-exists-cached-1.0.0.tgz\",\n      \"integrity\": \"sha1-zyVVTKBQ3EmuZla0HeQiWJidy84=\",\n      \"dev\": true\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\",\n      \"dev\": true\n    },\n    \"function-loop\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-loop/-/function-loop-1.0.2.tgz\",\n      \"integrity\": \"sha512-Iw4MzMfS3udk/rqxTiDDCllhGwlOrsr50zViTOO/W6lS/9y6B1J0BD2VZzrnWUYBJsl3aeqjgR5v7bWWhZSYbA==\",\n      \"dev\": true\n    },\n    \"generic-pool\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/generic-pool/-/generic-pool-2.2.0.tgz\",\n      \"integrity\": \"sha1-i0ZcGnWI6p3SuxM72gu2a/74pj4=\"\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true\n    },\n    \"get-stream\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz\",\n      \"integrity\": \"sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"pump\": \"^3.0.0\"\n      }\n    },\n    \"getpass\": {\n      \"version\": \"0.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\",\n      \"integrity\": \"sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\"\n      }\n    },\n    \"glob\": {\n      \"version\": \"7.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.4.tgz\",\n      \"integrity\": \"sha512-hkLPepehmnKk41pUGm3sYxoFs/umurYfYJCerbXEyFIWcAzvpipAgVkBqqT9RBKMGjnq6kMuyYwha6csxbiM1A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.0.4\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"globals\": {\n      \"version\": \"11.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\",\n      \"integrity\": \"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\",\n      \"dev\": true\n    },\n    \"graceful-fs\": {\n      \"version\": \"4.1.15\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz\",\n      \"integrity\": \"sha512-6uHUhOPEBgQ24HM+r6b/QwWfZq+yiFcipKFrOFiBEnWdy5sdzYoi+pJeQaPI5qOLRFqWmAXUPQNsielzdLoecA==\",\n      \"dev\": true\n    },\n    \"growl\": {\n      \"version\": \"1.10.5\",\n      \"resolved\": \"https://registry.npmjs.org/growl/-/growl-1.10.5.tgz\",\n      \"integrity\": \"sha512-qBr4OuELkhPenW6goKVXiv47US3clb3/IbuWF9KNKEijAy9oeHxU9IgzjvJhHkUzhaj7rOUD7+YGWqUjLp5oSA==\",\n      \"dev\": true\n    },\n    \"handlebars\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/handlebars/-/handlebars-4.1.2.tgz\",\n      \"integrity\": \"sha512-nvfrjqvt9xQ8Z/w0ijewdD/vvWDTOweBUm96NTr66Wfvo1mJenBLwcYmPs3TIBP5ruzYGD7Hx/DaM9RmhroGPw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"neo-async\": \"^2.6.0\",\n        \"optimist\": \"^0.6.1\",\n        \"source-map\": \"^0.6.1\",\n        \"uglify-js\": \"^3.1.4\"\n      },\n      \"dependencies\": {\n        \"source-map\": {\n          \"version\": \"0.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n          \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"har-schema\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz\",\n      \"integrity\": \"sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=\",\n      \"dev\": true\n    },\n    \"har-validator\": {\n      \"version\": \"5.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz\",\n      \"integrity\": \"sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ajv\": \"^6.5.5\",\n        \"har-schema\": \"^2.0.0\"\n      }\n    },\n    \"has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\",\n      \"dev\": true\n    },\n    \"hasha\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/hasha/-/hasha-3.0.0.tgz\",\n      \"integrity\": \"sha1-UqMvq4Vp1BymmmH/GiFPjrfIvTk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-stream\": \"^1.0.1\"\n      }\n    },\n    \"hashring\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/hashring/-/hashring-3.2.0.tgz\",\n      \"integrity\": \"sha1-/aTv3oqiLNuX+x0qZeiEAeHBRM4=\",\n      \"optional\": true,\n      \"requires\": {\n        \"connection-parse\": \"0.0.x\",\n        \"simple-lru-cache\": \"0.0.x\"\n      }\n    },\n    \"hosted-git-info\": {\n      \"version\": \"2.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.7.1.tgz\",\n      \"integrity\": \"sha512-7T/BxH19zbcCTa8XkMlbK5lTo1WtgkFi3GvdWEyNuc4Vex7/9Dqbnpsf4JMydcfj9HCg4zUWFTL3Za6lapg5/w==\",\n      \"dev\": true\n    },\n    \"http-signature\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz\",\n      \"integrity\": \"sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\",\n        \"jsprim\": \"^1.2.2\",\n        \"sshpk\": \"^1.7.0\"\n      }\n    },\n    \"imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha1-khi5srkoojixPcT7a21XbyMUU+o=\",\n      \"dev\": true\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"invert-kv\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/invert-kv/-/invert-kv-2.0.0.tgz\",\n      \"integrity\": \"sha512-wPVv/y/QQ/Uiirj/vh3oP+1Ww+AWehmi1g5fFWGPF6IpCBCDVrhgHRMvrLfdYcwDh3QJbGXDW4JAuzxElLSqKA==\",\n      \"dev\": true\n    },\n    \"is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=\",\n      \"dev\": true\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz\",\n      \"integrity\": \"sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\",\n      \"dev\": true\n    },\n    \"is-stream\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz\",\n      \"integrity\": \"sha1-EtSj3U5o4Lec6428hBc66A2RykQ=\",\n      \"dev\": true\n    },\n    \"is-typedarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\",\n      \"integrity\": \"sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\",\n      \"dev\": true\n    },\n    \"isarray\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\n      \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\",\n      \"dev\": true\n    },\n    \"isstream\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\",\n      \"integrity\": \"sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=\",\n      \"dev\": true\n    },\n    \"istanbul-lib-coverage\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.5.tgz\",\n      \"integrity\": \"sha512-8aXznuEPCJvGnMSRft4udDRDtb1V3pkQkMMI5LI+6HuQz5oQ4J2UFn1H82raA3qJtyOLkkwVqICBQkjnGtn5mA==\",\n      \"dev\": true\n    },\n    \"istanbul-lib-hook\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-2.0.7.tgz\",\n      \"integrity\": \"sha512-vrRztU9VRRFDyC+aklfLoeXyNdTfga2EI3udDGn4cZ6fpSXpHLV9X6CHvfoMCPtggg8zvDDmC4b9xfu0z6/llA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"append-transform\": \"^1.0.0\"\n      }\n    },\n    \"istanbul-lib-instrument\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-3.3.0.tgz\",\n      \"integrity\": \"sha512-5nnIN4vo5xQZHdXno/YDXJ0G+I3dAm4XgzfSVTPLQpj/zAV2dV6Juy0yaf10/zrJOJeHoN3fraFe+XRq2bFVZA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/generator\": \"^7.4.0\",\n        \"@babel/parser\": \"^7.4.3\",\n        \"@babel/template\": \"^7.4.0\",\n        \"@babel/traverse\": \"^7.4.3\",\n        \"@babel/types\": \"^7.4.0\",\n        \"istanbul-lib-coverage\": \"^2.0.5\",\n        \"semver\": \"^6.0.0\"\n      },\n      \"dependencies\": {\n        \"semver\": {\n          \"version\": \"6.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.1.1.tgz\",\n          \"integrity\": \"sha512-rWYq2e5iYW+fFe/oPPtYJxYgjBm8sC4rmoGdUOgBB7VnwKt6HrL793l2voH1UlsyYZpJ4g0wfjnTEO1s1NP2eQ==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"istanbul-lib-report\": {\n      \"version\": \"2.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-2.0.8.tgz\",\n      \"integrity\": \"sha512-fHBeG573EIihhAblwgxrSenp0Dby6tJMFR/HvlerBsrCTD5bkUuoNtn3gVh29ZCS824cGGBPn7Sg7cNk+2xUsQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"istanbul-lib-coverage\": \"^2.0.5\",\n        \"make-dir\": \"^2.1.0\",\n        \"supports-color\": \"^6.1.0\"\n      },\n      \"dependencies\": {\n        \"supports-color\": {\n          \"version\": \"6.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz\",\n          \"integrity\": \"sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^3.0.0\"\n          }\n        }\n      }\n    },\n    \"istanbul-lib-source-maps\": {\n      \"version\": \"3.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-3.0.6.tgz\",\n      \"integrity\": \"sha512-R47KzMtDJH6X4/YW9XTx+jrLnZnscW4VpNN+1PViSYTejLVPWv7oov+Duf8YQSPyVRUvueQqz1TcsC6mooZTXw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"debug\": \"^4.1.1\",\n        \"istanbul-lib-coverage\": \"^2.0.5\",\n        \"make-dir\": \"^2.1.0\",\n        \"rimraf\": \"^2.6.3\",\n        \"source-map\": \"^0.6.1\"\n      },\n      \"dependencies\": {\n        \"source-map\": {\n          \"version\": \"0.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n          \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"istanbul-reports\": {\n      \"version\": \"2.2.6\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-2.2.6.tgz\",\n      \"integrity\": \"sha512-SKi4rnMyLBKe0Jy2uUdx28h8oG7ph2PPuQPvIAh31d+Ci+lSiEu4C+h3oBPuJ9+mPKhOyW0M8gY4U5NM1WLeXA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"handlebars\": \"^4.1.2\"\n      }\n    },\n    \"js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n      \"dev\": true\n    },\n    \"js-yaml\": {\n      \"version\": \"3.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz\",\n      \"integrity\": \"sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      }\n    },\n    \"jsbn\": {\n      \"version\": \"0.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\",\n      \"integrity\": \"sha1-peZUwuWi3rXyAdls77yoDA7y9RM=\",\n      \"dev\": true\n    },\n    \"jsesc\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz\",\n      \"integrity\": \"sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==\",\n      \"dev\": true\n    },\n    \"json-parse-better-errors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz\",\n      \"integrity\": \"sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==\",\n      \"dev\": true\n    },\n    \"json-schema\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",\n      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",\n      \"dev\": true\n    },\n    \"json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n      \"dev\": true\n    },\n    \"json-stringify-safe\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\",\n      \"integrity\": \"sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\",\n      \"dev\": true\n    },\n    \"jsprim\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",\n      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"1.0.0\",\n        \"extsprintf\": \"1.3.0\",\n        \"json-schema\": \"0.2.3\",\n        \"verror\": \"1.10.0\"\n      }\n    },\n    \"keypress\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/keypress/-/keypress-0.1.0.tgz\",\n      \"integrity\": \"sha1-SjGI1CkbZrT2XtuZ+AaqmuKTWSo=\",\n      \"optional\": true\n    },\n    \"lcid\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lcid/-/lcid-2.0.0.tgz\",\n      \"integrity\": \"sha512-avPEb8P8EGnwXKClwsNUgryVjllcRqtMYa49NTsbQagYuT1DcXnl1915oxWjoyGrXR6zH/Y0Zc96xWsPcoDKeA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"invert-kv\": \"^2.0.0\"\n      }\n    },\n    \"lcov-parse\": {\n      \"version\": \"0.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/lcov-parse/-/lcov-parse-0.0.10.tgz\",\n      \"integrity\": \"sha1-GwuP+ayceIklBYK3C3ExXZ2m2aM=\",\n      \"dev\": true\n    },\n    \"load-json-file\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz\",\n      \"integrity\": \"sha1-L19Fq5HjMhYjT9U62rZo607AmTs=\",\n      \"dev\": true,\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.2\",\n        \"parse-json\": \"^4.0.0\",\n        \"pify\": \"^3.0.0\",\n        \"strip-bom\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"pify\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/pify/-/pify-3.0.0.tgz\",\n          \"integrity\": \"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"locate-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-locate\": \"^3.0.0\",\n        \"path-exists\": \"^3.0.0\"\n      }\n    },\n    \"lodash\": {\n      \"version\": \"4.17.15\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz\",\n      \"integrity\": \"sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A==\",\n      \"dev\": true\n    },\n    \"lodash.flattendeep\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.flattendeep/-/lodash.flattendeep-4.4.0.tgz\",\n      \"integrity\": \"sha1-+wMJF/hqMTTlvJvsDWngAT3f7bI=\",\n      \"dev\": true\n    },\n    \"log-driver\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/log-driver/-/log-driver-1.2.7.tgz\",\n      \"integrity\": \"sha512-U7KCmLdqsGHBLeWqYlFA0V0Sl6P08EE1ZrmA9cxjUE0WVqT9qnyVDPz1kzpFEP0jdJuFnasWIfSd7fsaNXkpbg==\",\n      \"dev\": true\n    },\n    \"lru-cache\": {\n      \"version\": \"4.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz\",\n      \"integrity\": \"sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"pseudomap\": \"^1.0.2\",\n        \"yallist\": \"^2.1.2\"\n      }\n    },\n    \"make-dir\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz\",\n      \"integrity\": \"sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"pify\": \"^4.0.1\",\n        \"semver\": \"^5.6.0\"\n      }\n    },\n    \"make-error\": {\n      \"version\": \"1.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/make-error/-/make-error-1.3.5.tgz\",\n      \"integrity\": \"sha512-c3sIjNUow0+8swNwVpqoH4YCShKNFkMaw6oH1mNS2haDZQqkeZFlHS3dhoeEbKKmJB4vXpJucU6oH75aDYeE9g==\",\n      \"dev\": true\n    },\n    \"map-age-cleaner\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz\",\n      \"integrity\": \"sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-defer\": \"^1.0.0\"\n      }\n    },\n    \"mem\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/mem/-/mem-4.3.0.tgz\",\n      \"integrity\": \"sha512-qX2bG48pTqYRVmDB37rn/6PT7LcR8T7oAX3bf99u1Tt1nzxYfxkgqDwUwolPlXweM0XzBOBFzSx4kfp7KP1s/w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"map-age-cleaner\": \"^0.1.1\",\n        \"mimic-fn\": \"^2.0.0\",\n        \"p-is-promise\": \"^2.0.0\"\n      }\n    },\n    \"merge-source-map\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.1.0.tgz\",\n      \"integrity\": \"sha512-Qkcp7P2ygktpMPh2mCQZaf3jhN6D3Z/qVZHSdWvQ+2Ef5HgRAPBO57A77+ENm0CPx2+1Ce/MYKi3ymqdfuqibw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"source-map\": \"^0.6.1\"\n      },\n      \"dependencies\": {\n        \"source-map\": {\n          \"version\": \"0.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n          \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"mime-db\": {\n      \"version\": \"1.40.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.40.0.tgz\",\n      \"integrity\": \"sha512-jYdeOMPy9vnxEqFRRo6ZvTZ8d9oPb+k18PKoYNYUe2stVEBPPwsln/qWzdbmaIvnhZ9v2P+CuecK+fpUfsV2mA==\",\n      \"dev\": true\n    },\n    \"mime-types\": {\n      \"version\": \"2.1.24\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.24.tgz\",\n      \"integrity\": \"sha512-WaFHS3MCl5fapm3oLxU4eYDw77IQM2ACcxQ9RIxfaC3ooc6PFuBMGZZsYpvoXS5D5QTWPieo1jjLdAm3TBP3cQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"mime-db\": \"1.40.0\"\n      }\n    },\n    \"mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"dev\": true\n    },\n    \"minimatch\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",\n      \"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"brace-expansion\": \"^1.1.7\"\n      }\n    },\n    \"minimist\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",\n      \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",\n      \"dev\": true\n    },\n    \"minipass\": {\n      \"version\": \"2.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-2.3.5.tgz\",\n      \"integrity\": \"sha512-Gi1W4k059gyRbyVUZQ4mEqLm0YIUiGYfvxhF6SIlk3ui1WVxMTGfGdQ2SInh3PDrRTVvPKgULkpJtT4RH10+VA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.1.2\",\n        \"yallist\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"yallist\": {\n          \"version\": \"3.0.3\",\n          \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz\",\n          \"integrity\": \"sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"mkdirp\": {\n      \"version\": \"0.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n      \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",\n      \"dev\": true,\n      \"requires\": {\n        \"minimist\": \"0.0.8\"\n      },\n      \"dependencies\": {\n        \"minimist\": {\n          \"version\": \"0.0.8\",\n          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n          \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"modern-syslog\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/modern-syslog/-/modern-syslog-1.2.0.tgz\",\n      \"integrity\": \"sha512-dmFE23qpyZJf8MOdzuNKliW4j1PCqxaRtSzyNnv6QDUWjf1z8T4ZoQ7Qf0t6It2ewNv9/XJZSJoUgwpq3D0X7A==\",\n      \"optional\": true,\n      \"requires\": {\n        \"nan\": \"^2.13.2\"\n      }\n    },\n    \"ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"nan\": {\n      \"version\": \"2.14.0\",\n      \"resolved\": \"https://registry.npmjs.org/nan/-/nan-2.14.0.tgz\",\n      \"integrity\": \"sha512-INOFj37C7k3AfaNTtX8RhsTw7qRy7eLET14cROi9+5HAVbbHuIWUHEauBv5qT4Av2tWasiTY1Jw6puUNqRJXQg==\",\n      \"optional\": true\n    },\n    \"neo-async\": {\n      \"version\": \"2.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/neo-async/-/neo-async-2.6.1.tgz\",\n      \"integrity\": \"sha512-iyam8fBuCUpWeKPGpaNMetEocMt364qkCsfL9JuhjXX6dRnguRVOfk2GZaDpPjcOKiiXCPINZC1GczQ7iTq3Zw==\",\n      \"dev\": true\n    },\n    \"nested-error-stacks\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/nested-error-stacks/-/nested-error-stacks-2.1.0.tgz\",\n      \"integrity\": \"sha512-AO81vsIO1k1sM4Zrd6Hu7regmJN1NSiAja10gc4bX3F0wd+9rQmcuHQaHVQCYIEC8iFXnE+mavh23GOt7wBgug==\",\n      \"dev\": true\n    },\n    \"nice-try\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz\",\n      \"integrity\": \"sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==\",\n      \"dev\": true\n    },\n    \"nodeunit\": {\n      \"version\": \"0.11.3\",\n      \"resolved\": \"https://registry.npmjs.org/nodeunit/-/nodeunit-0.11.3.tgz\",\n      \"integrity\": \"sha512-gDNxrDWpx07BxYNO/jn1UrGI1vNhDQZrIFphbHMcTCDc5mrrqQBWfQMXPHJ5WSgbFwD1D6bv4HOsqtTrPG03AA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ejs\": \"^2.5.2\",\n        \"tap\": \"^12.0.1\"\n      }\n    },\n    \"normalize-package-data\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz\",\n      \"integrity\": \"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"hosted-git-info\": \"^2.1.4\",\n        \"resolve\": \"^1.10.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"validate-npm-package-license\": \"^3.0.1\"\n      }\n    },\n    \"npm-run-path\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz\",\n      \"integrity\": \"sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=\",\n      \"dev\": true,\n      \"requires\": {\n        \"path-key\": \"^2.0.0\"\n      }\n    },\n    \"nyc\": {\n      \"version\": \"14.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/nyc/-/nyc-14.1.1.tgz\",\n      \"integrity\": \"sha512-OI0vm6ZGUnoGZv/tLdZ2esSVzDwUC88SNs+6JoSOMVxA+gKMB8Tk7jBwgemLx4O40lhhvZCVw1C+OYLOBOPXWw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"archy\": \"^1.0.0\",\n        \"caching-transform\": \"^3.0.2\",\n        \"convert-source-map\": \"^1.6.0\",\n        \"cp-file\": \"^6.2.0\",\n        \"find-cache-dir\": \"^2.1.0\",\n        \"find-up\": \"^3.0.0\",\n        \"foreground-child\": \"^1.5.6\",\n        \"glob\": \"^7.1.3\",\n        \"istanbul-lib-coverage\": \"^2.0.5\",\n        \"istanbul-lib-hook\": \"^2.0.7\",\n        \"istanbul-lib-instrument\": \"^3.3.0\",\n        \"istanbul-lib-report\": \"^2.0.8\",\n        \"istanbul-lib-source-maps\": \"^3.0.6\",\n        \"istanbul-reports\": \"^2.2.4\",\n        \"js-yaml\": \"^3.13.1\",\n        \"make-dir\": \"^2.1.0\",\n        \"merge-source-map\": \"^1.1.0\",\n        \"resolve-from\": \"^4.0.0\",\n        \"rimraf\": \"^2.6.3\",\n        \"signal-exit\": \"^3.0.2\",\n        \"spawn-wrap\": \"^1.4.2\",\n        \"test-exclude\": \"^5.2.3\",\n        \"uuid\": \"^3.3.2\",\n        \"yargs\": \"^13.2.2\",\n        \"yargs-parser\": \"^13.0.0\"\n      }\n    },\n    \"oauth-sign\": {\n      \"version\": \"0.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz\",\n      \"integrity\": \"sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==\",\n      \"dev\": true\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n      \"dev\": true,\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"opener\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/opener/-/opener-1.5.1.tgz\",\n      \"integrity\": \"sha512-goYSy5c2UXE4Ra1xixabeVh1guIX/ZV/YokJksb6q2lubWu6UbvPQ20p542/sFIll1nl8JnCyK9oBaOcCWXwvA==\",\n      \"dev\": true\n    },\n    \"optimist\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz\",\n      \"integrity\": \"sha1-2j6nRob6IaGaERwybpDrFaAZZoY=\",\n      \"dev\": true,\n      \"requires\": {\n        \"minimist\": \"~0.0.1\",\n        \"wordwrap\": \"~0.0.2\"\n      },\n      \"dependencies\": {\n        \"minimist\": {\n          \"version\": \"0.0.10\",\n          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz\",\n          \"integrity\": \"sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"os-homedir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n      \"integrity\": \"sha1-/7xJiDNuDoM94MFox+8VISGqf7M=\",\n      \"dev\": true\n    },\n    \"os-locale\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/os-locale/-/os-locale-3.1.0.tgz\",\n      \"integrity\": \"sha512-Z8l3R4wYWM40/52Z+S265okfFj8Kt2cC2MKY+xNi3kFs+XGI7WXu/I309QQQYbRW4ijiZ+yxs9pqEhJh0DqW3Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"execa\": \"^1.0.0\",\n        \"lcid\": \"^2.0.0\",\n        \"mem\": \"^4.0.0\"\n      }\n    },\n    \"own-or\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/own-or/-/own-or-1.0.0.tgz\",\n      \"integrity\": \"sha1-Tod/vtqaLsgAD7wLyuOWRe6L+Nw=\",\n      \"dev\": true\n    },\n    \"own-or-env\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.1.tgz\",\n      \"integrity\": \"sha512-y8qULRbRAlL6x2+M0vIe7jJbJx/kmUTzYonRAa2ayesR2qWLswninkVyeJe4x3IEXhdgoNodzjQRKAoEs6Fmrw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"own-or\": \"^1.0.0\"\n      }\n    },\n    \"p-defer\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz\",\n      \"integrity\": \"sha1-n26xgvbJqozXQwBKfU+WsZaw+ww=\",\n      \"dev\": true\n    },\n    \"p-finally\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz\",\n      \"integrity\": \"sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=\",\n      \"dev\": true\n    },\n    \"p-is-promise\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-is-promise/-/p-is-promise-2.1.0.tgz\",\n      \"integrity\": \"sha512-Y3W0wlRPK8ZMRbNq97l4M5otioeA5lm1z7bkNkxCka8HSPjR0xRWmpCmc9utiaLP9Jb1eD8BgeIxTW4AIF45Pg==\",\n      \"dev\": true\n    },\n    \"p-limit\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.2.0.tgz\",\n      \"integrity\": \"sha512-pZbTJpoUsCzV48Mc9Nh51VbwO0X9cuPFE8gYwx9BTCt9SF8/b7Zljd2fVgOxhIF/HDTKgpVzs+GPhyKfjLLFRQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-try\": \"^2.0.0\"\n      }\n    },\n    \"p-locate\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz\",\n      \"integrity\": \"sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-limit\": \"^2.0.0\"\n      }\n    },\n    \"p-try\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n      \"dev\": true\n    },\n    \"package-hash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/package-hash/-/package-hash-3.0.0.tgz\",\n      \"integrity\": \"sha512-lOtmukMDVvtkL84rJHI7dpTYq+0rli8N2wlnqUcBuDWCfVhRUfOmnR9SsoHFMLpACvEV60dX7rd0rFaYDZI+FA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.15\",\n        \"hasha\": \"^3.0.0\",\n        \"lodash.flattendeep\": \"^4.4.0\",\n        \"release-zalgo\": \"^1.0.0\"\n      }\n    },\n    \"parse-json\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz\",\n      \"integrity\": \"sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=\",\n      \"dev\": true,\n      \"requires\": {\n        \"error-ex\": \"^1.3.1\",\n        \"json-parse-better-errors\": \"^1.0.1\"\n      }\n    },\n    \"path-exists\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz\",\n      \"integrity\": \"sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=\",\n      \"dev\": true\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n      \"dev\": true\n    },\n    \"path-key\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz\",\n      \"integrity\": \"sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=\",\n      \"dev\": true\n    },\n    \"path-parse\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz\",\n      \"integrity\": \"sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==\",\n      \"dev\": true\n    },\n    \"path-type\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz\",\n      \"integrity\": \"sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"pify\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"pify\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/pify/-/pify-3.0.0.tgz\",\n          \"integrity\": \"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"performance-now\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\",\n      \"integrity\": \"sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns=\",\n      \"dev\": true\n    },\n    \"pify\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-4.0.1.tgz\",\n      \"integrity\": \"sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==\",\n      \"dev\": true\n    },\n    \"pkg-dir\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz\",\n      \"integrity\": \"sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"find-up\": \"^3.0.0\"\n      }\n    },\n    \"process-nextick-args\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"pseudomap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz\",\n      \"integrity\": \"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=\",\n      \"dev\": true\n    },\n    \"psl\": {\n      \"version\": \"1.1.33\",\n      \"resolved\": \"https://registry.npmjs.org/psl/-/psl-1.1.33.tgz\",\n      \"integrity\": \"sha512-LTDP2uSrsc7XCb5lO7A8BI1qYxRe/8EqlRvMeEl6rsnYAqDOl8xHR+8lSAIVfrNaSAlTPTNOCgNjWcoUL3AZsw==\",\n      \"dev\": true\n    },\n    \"pump\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\",\n      \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\",\n      \"dev\": true,\n      \"requires\": {\n        \"end-of-stream\": \"^1.1.0\",\n        \"once\": \"^1.3.1\"\n      }\n    },\n    \"punycode\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz\",\n      \"integrity\": \"sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\",\n      \"dev\": true\n    },\n    \"qs\": {\n      \"version\": \"6.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.2.tgz\",\n      \"integrity\": \"sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==\",\n      \"dev\": true\n    },\n    \"read-pkg\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz\",\n      \"integrity\": \"sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=\",\n      \"dev\": true,\n      \"requires\": {\n        \"load-json-file\": \"^4.0.0\",\n        \"normalize-package-data\": \"^2.3.2\",\n        \"path-type\": \"^3.0.0\"\n      }\n    },\n    \"read-pkg-up\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz\",\n      \"integrity\": \"sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"find-up\": \"^3.0.0\",\n        \"read-pkg\": \"^3.0.0\"\n      }\n    },\n    \"readable-stream\": {\n      \"version\": \"2.3.6\",\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n      \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"requires\": {\n        \"core-util-is\": \"~1.0.0\",\n        \"inherits\": \"~2.0.3\",\n        \"isarray\": \"~1.0.0\",\n        \"process-nextick-args\": \"~2.0.0\",\n        \"safe-buffer\": \"~5.1.1\",\n        \"string_decoder\": \"~1.1.1\",\n        \"util-deprecate\": \"~1.0.1\"\n      }\n    },\n    \"release-zalgo\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/release-zalgo/-/release-zalgo-1.0.0.tgz\",\n      \"integrity\": \"sha1-CXALflB0Mpc5Mw5TXFqQ+2eFFzA=\",\n      \"dev\": true,\n      \"requires\": {\n        \"es6-error\": \"^4.0.1\"\n      }\n    },\n    \"request\": {\n      \"version\": \"2.88.0\",\n      \"resolved\": \"https://registry.npmjs.org/request/-/request-2.88.0.tgz\",\n      \"integrity\": \"sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"aws-sign2\": \"~0.7.0\",\n        \"aws4\": \"^1.8.0\",\n        \"caseless\": \"~0.12.0\",\n        \"combined-stream\": \"~1.0.6\",\n        \"extend\": \"~3.0.2\",\n        \"forever-agent\": \"~0.6.1\",\n        \"form-data\": \"~2.3.2\",\n        \"har-validator\": \"~5.1.0\",\n        \"http-signature\": \"~1.2.0\",\n        \"is-typedarray\": \"~1.0.0\",\n        \"isstream\": \"~0.1.2\",\n        \"json-stringify-safe\": \"~5.0.1\",\n        \"mime-types\": \"~2.1.19\",\n        \"oauth-sign\": \"~0.9.0\",\n        \"performance-now\": \"^2.1.0\",\n        \"qs\": \"~6.5.2\",\n        \"safe-buffer\": \"^5.1.2\",\n        \"tough-cookie\": \"~2.4.3\",\n        \"tunnel-agent\": \"^0.6.0\",\n        \"uuid\": \"^3.3.2\"\n      }\n    },\n    \"require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\",\n      \"dev\": true\n    },\n    \"require-main-filename\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz\",\n      \"integrity\": \"sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==\",\n      \"dev\": true\n    },\n    \"resolve\": {\n      \"version\": \"1.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.11.0.tgz\",\n      \"integrity\": \"sha512-WL2pBDjqT6pGUNSUzMw00o4T7If+z4H2x3Gz893WoUQ5KW8Vr9txp00ykiP16VBaZF5+j/OcXJHZ9+PCvdiDKw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"path-parse\": \"^1.0.6\"\n      }\n    },\n    \"resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"dev\": true\n    },\n    \"rimraf\": {\n      \"version\": \"2.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz\",\n      \"integrity\": \"sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"glob\": \"^7.1.3\"\n      }\n    },\n    \"safe-buffer\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\",\n      \"dev\": true\n    },\n    \"safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"dev\": true\n    },\n    \"semver\": {\n      \"version\": \"5.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.0.tgz\",\n      \"integrity\": \"sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA==\",\n      \"dev\": true\n    },\n    \"sequence\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/sequence/-/sequence-2.2.1.tgz\",\n      \"integrity\": \"sha1-f1YXiV1ENRwKBH52RGdpBJChawM=\",\n      \"optional\": true\n    },\n    \"set-blocking\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",\n      \"integrity\": \"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\",\n      \"dev\": true\n    },\n    \"shebang-command\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz\",\n      \"integrity\": \"sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=\",\n      \"dev\": true,\n      \"requires\": {\n        \"shebang-regex\": \"^1.0.0\"\n      }\n    },\n    \"shebang-regex\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz\",\n      \"integrity\": \"sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=\",\n      \"dev\": true\n    },\n    \"signal-exit\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz\",\n      \"integrity\": \"sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=\",\n      \"dev\": true\n    },\n    \"simple-lru-cache\": {\n      \"version\": \"0.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/simple-lru-cache/-/simple-lru-cache-0.0.2.tgz\",\n      \"integrity\": \"sha1-1ZzDoZPBpdAyD4Tucy9uRxPlEd0=\",\n      \"optional\": true\n    },\n    \"source-map\": {\n      \"version\": \"0.5.7\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz\",\n      \"integrity\": \"sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=\",\n      \"dev\": true\n    },\n    \"source-map-support\": {\n      \"version\": \"0.5.12\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.12.tgz\",\n      \"integrity\": \"sha512-4h2Pbvyy15EE02G+JOZpUCmqWJuqrs+sEkzewTm++BPi7Hvn/HwcqLAcNxYAyI0x13CpPPn+kMjl+hplXMHITQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"source-map\": \"^0.6.0\"\n      },\n      \"dependencies\": {\n        \"source-map\": {\n          \"version\": \"0.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n          \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"spawn-wrap\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/spawn-wrap/-/spawn-wrap-1.4.2.tgz\",\n      \"integrity\": \"sha512-vMwR3OmmDhnxCVxM8M+xO/FtIp6Ju/mNaDfCMMW7FDcLRTPFWUswec4LXJHTJE2hwTI9O0YBfygu4DalFl7Ylg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"foreground-child\": \"^1.5.6\",\n        \"mkdirp\": \"^0.5.0\",\n        \"os-homedir\": \"^1.0.1\",\n        \"rimraf\": \"^2.6.2\",\n        \"signal-exit\": \"^3.0.2\",\n        \"which\": \"^1.3.0\"\n      }\n    },\n    \"spdx-correct\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.0.tgz\",\n      \"integrity\": \"sha512-lr2EZCctC2BNR7j7WzJ2FpDznxky1sjfxvvYEyzxNyb6lZXHODmEoJeFu4JupYlkfha1KZpJyoqiJ7pgA1qq8Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"spdx-exceptions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.2.0.tgz\",\n      \"integrity\": \"sha512-2XQACfElKi9SlVb1CYadKDXvoajPgBVPn/gOQLrTvHdElaVhr7ZEbqJaRnJLVNeaI4cMEAgVCeBMKF6MWRDCRA==\",\n      \"dev\": true\n    },\n    \"spdx-expression-parse\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz\",\n      \"integrity\": \"sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"spdx-exceptions\": \"^2.1.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"spdx-license-ids\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.4.tgz\",\n      \"integrity\": \"sha512-7j8LYJLeY/Yb6ACbQ7F76qy5jHkp0U6jgBfJsk97bwWlVUnUWsAgpyaCvo17h0/RQGnQ036tVDomiwoI4pDkQA==\",\n      \"dev\": true\n    },\n    \"sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n      \"integrity\": \"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\",\n      \"dev\": true\n    },\n    \"sshpk\": {\n      \"version\": \"1.16.1\",\n      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz\",\n      \"integrity\": \"sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"asn1\": \"~0.2.3\",\n        \"assert-plus\": \"^1.0.0\",\n        \"bcrypt-pbkdf\": \"^1.0.0\",\n        \"dashdash\": \"^1.12.0\",\n        \"ecc-jsbn\": \"~0.1.1\",\n        \"getpass\": \"^0.1.1\",\n        \"jsbn\": \"~0.1.0\",\n        \"safer-buffer\": \"^2.0.2\",\n        \"tweetnacl\": \"~0.14.0\"\n      }\n    },\n    \"stack-utils\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/stack-utils/-/stack-utils-1.0.2.tgz\",\n      \"integrity\": \"sha512-MTX+MeG5U994cazkjd/9KNAapsHnibjMLnfXodlkXw76JEea0UiNzrqidzo1emMwk7w5Qhc9jd4Bn9TBb1MFwA==\",\n      \"dev\": true\n    },\n    \"string-width\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz\",\n      \"integrity\": \"sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"emoji-regex\": \"^7.0.1\",\n        \"is-fullwidth-code-point\": \"^2.0.0\",\n        \"strip-ansi\": \"^5.1.0\"\n      }\n    },\n    \"string_decoder\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"requires\": {\n        \"safe-buffer\": \"~5.1.0\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz\",\n      \"integrity\": \"sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^4.1.0\"\n      }\n    },\n    \"strip-bom\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz\",\n      \"integrity\": \"sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=\",\n      \"dev\": true\n    },\n    \"strip-eof\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz\",\n      \"integrity\": \"sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=\",\n      \"dev\": true\n    },\n    \"supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^3.0.0\"\n      }\n    },\n    \"tap\": {\n      \"version\": \"12.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/tap/-/tap-12.7.0.tgz\",\n      \"integrity\": \"sha512-SjglJmRv0pqrQQ7d5ZBEY8ZOqv3nYDBXEX51oyycOH7piuhn82JKT/yDNewwmOsodTD/RZL9MccA96EjDgK+Eg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bind-obj-methods\": \"^2.0.0\",\n        \"browser-process-hrtime\": \"^1.0.0\",\n        \"capture-stack-trace\": \"^1.0.0\",\n        \"clean-yaml-object\": \"^0.1.0\",\n        \"color-support\": \"^1.1.0\",\n        \"coveralls\": \"^3.0.2\",\n        \"domain-browser\": \"^1.2.0\",\n        \"esm\": \"^3.2.5\",\n        \"foreground-child\": \"^1.3.3\",\n        \"fs-exists-cached\": \"^1.0.0\",\n        \"function-loop\": \"^1.0.1\",\n        \"glob\": \"^7.1.3\",\n        \"isexe\": \"^2.0.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"minipass\": \"^2.3.5\",\n        \"mkdirp\": \"^0.5.1\",\n        \"nyc\": \"^14.0.0\",\n        \"opener\": \"^1.5.1\",\n        \"os-homedir\": \"^1.0.2\",\n        \"own-or\": \"^1.0.0\",\n        \"own-or-env\": \"^1.0.1\",\n        \"rimraf\": \"^2.6.3\",\n        \"signal-exit\": \"^3.0.0\",\n        \"source-map-support\": \"^0.5.10\",\n        \"stack-utils\": \"^1.0.2\",\n        \"tap-mocha-reporter\": \"^3.0.9\",\n        \"tap-parser\": \"^7.0.0\",\n        \"tmatch\": \"^4.0.0\",\n        \"trivial-deferred\": \"^1.0.1\",\n        \"ts-node\": \"^8.0.2\",\n        \"tsame\": \"^2.0.1\",\n        \"typescript\": \"^3.3.3\",\n        \"write-file-atomic\": \"^2.4.2\",\n        \"yapool\": \"^1.0.0\"\n      }\n    },\n    \"tap-mocha-reporter\": {\n      \"version\": \"3.0.9\",\n      \"resolved\": \"https://registry.npmjs.org/tap-mocha-reporter/-/tap-mocha-reporter-3.0.9.tgz\",\n      \"integrity\": \"sha512-VO07vhC9EG27EZdOe7bWBj1ldbK+DL9TnRadOgdQmiQOVZjFpUEQuuqO7+rNSO2kfmkq5hWeluYXDWNG/ytXTQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-support\": \"^1.1.0\",\n        \"debug\": \"^2.1.3\",\n        \"diff\": \"^1.3.2\",\n        \"escape-string-regexp\": \"^1.0.3\",\n        \"glob\": \"^7.0.5\",\n        \"js-yaml\": \"^3.3.1\",\n        \"readable-stream\": \"^2.1.5\",\n        \"tap-parser\": \"^5.1.0\",\n        \"unicode-length\": \"^1.0.0\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"2.6.9\",\n          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n          \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"2.0.0\"\n          }\n        },\n        \"ms\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n          \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\",\n          \"dev\": true\n        },\n        \"tap-parser\": {\n          \"version\": \"5.4.0\",\n          \"resolved\": \"https://registry.npmjs.org/tap-parser/-/tap-parser-5.4.0.tgz\",\n          \"integrity\": \"sha512-BIsIaGqv7uTQgTW1KLTMNPSEQf4zDDPgYOBRdgOfuB+JFOLRBfEu6cLa/KvMvmqggu1FKXDfitjLwsq4827RvA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"events-to-array\": \"^1.0.1\",\n            \"js-yaml\": \"^3.2.7\",\n            \"readable-stream\": \"^2\"\n          }\n        }\n      }\n    },\n    \"tap-parser\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tap-parser/-/tap-parser-7.0.0.tgz\",\n      \"integrity\": \"sha512-05G8/LrzqOOFvZhhAk32wsGiPZ1lfUrl+iV7+OkKgfofZxiceZWMHkKmow71YsyVQ8IvGBP2EjcIjE5gL4l5lA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"events-to-array\": \"^1.0.1\",\n        \"js-yaml\": \"^3.2.7\",\n        \"minipass\": \"^2.2.0\"\n      }\n    },\n    \"temp\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/temp/-/temp-0.4.0.tgz\",\n      \"integrity\": \"sha1-ZxrWPVe+D+nXKUZks/xABjZnimA=\",\n      \"dev\": true\n    },\n    \"test-exclude\": {\n      \"version\": \"5.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-5.2.3.tgz\",\n      \"integrity\": \"sha512-M+oxtseCFO3EDtAaGH7iiej3CBkzXqFMbzqYAACdzKui4eZA+pq3tZEwChvOdNfa7xxy8BfbmgJSIr43cC/+2g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"glob\": \"^7.1.3\",\n        \"minimatch\": \"^3.0.4\",\n        \"read-pkg-up\": \"^4.0.0\",\n        \"require-main-filename\": \"^2.0.0\"\n      }\n    },\n    \"tmatch\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/tmatch/-/tmatch-4.0.0.tgz\",\n      \"integrity\": \"sha512-Ynn2Gsp+oCvYScQXeV+cCs7citRDilq0qDXA6tuvFwDgiYyyaq7D5vKUlAPezzZR5NDobc/QMeN6e5guOYmvxg==\",\n      \"dev\": true\n    },\n    \"to-fast-properties\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz\",\n      \"integrity\": \"sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=\",\n      \"dev\": true\n    },\n    \"tough-cookie\": {\n      \"version\": \"2.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.4.3.tgz\",\n      \"integrity\": \"sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"psl\": \"^1.1.24\",\n        \"punycode\": \"^1.4.1\"\n      },\n      \"dependencies\": {\n        \"punycode\": {\n          \"version\": \"1.4.1\",\n          \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",\n          \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",\n          \"dev\": true\n        }\n      }\n    },\n    \"trim-right\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz\",\n      \"integrity\": \"sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=\",\n      \"dev\": true\n    },\n    \"trivial-deferred\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/trivial-deferred/-/trivial-deferred-1.0.1.tgz\",\n      \"integrity\": \"sha1-N21NKdlR1jaKb3oK6FwvTV4GWPM=\",\n      \"dev\": true\n    },\n    \"ts-node\": {\n      \"version\": \"8.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ts-node/-/ts-node-8.3.0.tgz\",\n      \"integrity\": \"sha512-dyNS/RqyVTDcmNM4NIBAeDMpsAdaQ+ojdf0GOLqE6nwJOgzEkdRNzJywhDfwnuvB10oa6NLVG1rUJQCpRN7qoQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"arg\": \"^4.1.0\",\n        \"diff\": \"^4.0.1\",\n        \"make-error\": \"^1.1.1\",\n        \"source-map-support\": \"^0.5.6\",\n        \"yn\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"diff\": {\n          \"version\": \"4.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/diff/-/diff-4.0.1.tgz\",\n          \"integrity\": \"sha512-s2+XdvhPCOF01LRQBC8hf4vhbVmI2CGS5aZnxLJlT5FtdhPCDFq80q++zK2KlrVorVDdL5BOGZ/VfLrVtYNF+Q==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"tsame\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/tsame/-/tsame-2.0.1.tgz\",\n      \"integrity\": \"sha512-jxyxgKVKa4Bh5dPcO42TJL22lIvfd9LOVJwdovKOnJa4TLLrHxquK+DlGm4rkGmrcur+GRx+x4oW00O2pY/fFw==\",\n      \"dev\": true\n    },\n    \"tunnel-agent\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz\",\n      \"integrity\": \"sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.0.1\"\n      }\n    },\n    \"tweetnacl\": {\n      \"version\": \"0.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\",\n      \"integrity\": \"sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=\",\n      \"dev\": true\n    },\n    \"typescript\": {\n      \"version\": \"3.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-3.5.2.tgz\",\n      \"integrity\": \"sha512-7KxJovlYhTX5RaRbUdkAXN1KUZ8PwWlTzQdHV6xNqvuFOs7+WBo10TQUqT19Q/Jz2hk5v9TQDIhyLhhJY4p5AA==\",\n      \"dev\": true\n    },\n    \"uglify-js\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/uglify-js/-/uglify-js-3.6.0.tgz\",\n      \"integrity\": \"sha512-W+jrUHJr3DXKhrsS7NUVxn3zqMOFn0hL/Ei6v0anCIMoKC93TjcflTagwIHLW7SfMFfiQuktQyFVCFHGUE0+yg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"requires\": {\n        \"commander\": \"~2.20.0\",\n        \"source-map\": \"~0.6.1\"\n      },\n      \"dependencies\": {\n        \"commander\": {\n          \"version\": \"2.20.0\",\n          \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.20.0.tgz\",\n          \"integrity\": \"sha512-7j2y+40w61zy6YC2iRNpUe/NwhNyoXrYpHMrSunaMG64nRnaf96zO/KMQR4OyN/UnE5KLyEBnKHd4aG3rskjpQ==\",\n          \"dev\": true,\n          \"optional\": true\n        },\n        \"source-map\": {\n          \"version\": \"0.6.1\",\n          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n          \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n          \"dev\": true,\n          \"optional\": true\n        }\n      }\n    },\n    \"underscore\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.4.4.tgz\",\n      \"integrity\": \"sha1-YaajIBBiKvoHljvzJSA88SI51gQ=\",\n      \"dev\": true\n    },\n    \"unicode-length\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-length/-/unicode-length-1.0.3.tgz\",\n      \"integrity\": \"sha1-Wtp6f+1RhBpBijKM8UlHisg1irs=\",\n      \"dev\": true,\n      \"requires\": {\n        \"punycode\": \"^1.3.2\",\n        \"strip-ansi\": \"^3.0.1\"\n      },\n      \"dependencies\": {\n        \"ansi-regex\": {\n          \"version\": \"2.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",\n          \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",\n          \"dev\": true\n        },\n        \"punycode\": {\n          \"version\": \"1.4.1\",\n          \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz\",\n          \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",\n          \"dev\": true\n        },\n        \"strip-ansi\": {\n          \"version\": \"3.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\n          \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-regex\": \"^2.0.0\"\n          }\n        }\n      }\n    },\n    \"uri-js\": {\n      \"version\": \"4.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz\",\n      \"integrity\": \"sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"uuid\": {\n      \"version\": \"3.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz\",\n      \"integrity\": \"sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==\",\n      \"dev\": true\n    },\n    \"validate-npm-package-license\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz\",\n      \"integrity\": \"sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==\",\n      \"dev\": true,\n      \"requires\": {\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\"\n      }\n    },\n    \"verror\": {\n      \"version\": \"1.10.0\",\n      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\",\n      \"integrity\": \"sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=\",\n      \"dev\": true,\n      \"requires\": {\n        \"assert-plus\": \"^1.0.0\",\n        \"core-util-is\": \"1.0.2\",\n        \"extsprintf\": \"^1.2.0\"\n      }\n    },\n    \"which\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-1.3.1.tgz\",\n      \"integrity\": \"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"isexe\": \"^2.0.0\"\n      }\n    },\n    \"which-module\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz\",\n      \"integrity\": \"sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=\",\n      \"dev\": true\n    },\n    \"winser\": {\n      \"version\": \"0.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/winser/-/winser-0.1.6.tgz\",\n      \"integrity\": \"sha1-CGY9wyh4oSu84WLYQNpQl7SEZsk=\",\n      \"optional\": true,\n      \"requires\": {\n        \"commander\": \"1.3.1\",\n        \"sequence\": \"2.2.1\"\n      }\n    },\n    \"wordwrap\": {\n      \"version\": \"0.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz\",\n      \"integrity\": \"sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\",\n      \"dev\": true\n    },\n    \"wrap-ansi\": {\n      \"version\": \"5.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-5.1.0.tgz\",\n      \"integrity\": \"sha512-QC1/iN/2/RPVJ5jYK8BGttj5z83LmSKmvbvrXPNCLZSEb32KKVDJDl/MOt2N01qU2H/FkzEa9PKto1BqDjtd7Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^3.2.0\",\n        \"string-width\": \"^3.0.0\",\n        \"strip-ansi\": \"^5.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\",\n      \"dev\": true\n    },\n    \"write-file-atomic\": {\n      \"version\": \"2.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.3.tgz\",\n      \"integrity\": \"sha512-GaETH5wwsX+GcnzhPgKcKjJ6M2Cq3/iZp1WyY/X1CSqrW+jVNM9Y7D8EC2sM4ZG/V8wZlSniJnCKWPmBYAucRQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"graceful-fs\": \"^4.1.11\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"signal-exit\": \"^3.0.2\"\n      }\n    },\n    \"y18n\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz\",\n      \"integrity\": \"sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w==\",\n      \"dev\": true\n    },\n    \"yallist\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz\",\n      \"integrity\": \"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=\",\n      \"dev\": true\n    },\n    \"yapool\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yapool/-/yapool-1.0.0.tgz\",\n      \"integrity\": \"sha1-9pPymjFbUNmp2iZGp6ZkXJaYW2o=\",\n      \"dev\": true\n    },\n    \"yargs\": {\n      \"version\": \"13.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-13.2.4.tgz\",\n      \"integrity\": \"sha512-HG/DWAJa1PAnHT9JAhNa8AbAv3FPaiLzioSjCcmuXXhP8MlpHO5vwls4g4j6n30Z74GVQj8Xa62dWVx1QCGklg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cliui\": \"^5.0.0\",\n        \"find-up\": \"^3.0.0\",\n        \"get-caller-file\": \"^2.0.1\",\n        \"os-locale\": \"^3.1.0\",\n        \"require-directory\": \"^2.1.1\",\n        \"require-main-filename\": \"^2.0.0\",\n        \"set-blocking\": \"^2.0.0\",\n        \"string-width\": \"^3.0.0\",\n        \"which-module\": \"^2.0.0\",\n        \"y18n\": \"^4.0.0\",\n        \"yargs-parser\": \"^13.1.0\"\n      }\n    },\n    \"yargs-parser\": {\n      \"version\": \"13.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.1.tgz\",\n      \"integrity\": \"sha512-oVAVsHz6uFrg3XQheFII8ESO2ssAf9luWuAd6Wexsu4F3OtIW0o8IribPXYrD4WC24LWtPrJlGy87y5udK+dxQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"camelcase\": \"^5.0.0\",\n        \"decamelize\": \"^1.2.0\"\n      }\n    },\n    \"yn\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yn/-/yn-3.1.0.tgz\",\n      \"integrity\": \"sha512-kKfnnYkbTfrAdd0xICNFw7Atm8nKpLcLv9AZGEt+kczL/WQVai4e2V6ZN8U/O+iI6WrNuJjNNOyu4zfhl9D3Hg==\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0791015625,
          "content": "{\n  \"name\": \"statsd\",\n  \"version\": \"0.10.2\",\n  \"description\": \"Network daemon for the collection and aggregation of realtime application metrics\",\n  \"author\": {\n    \"name\": \"Etsy\",\n    \"url\": \"https://codeascraft.com\"\n  },\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/statsd/statsd\",\n  \"bugs\": \"https://github.com/statsd/statsd/issues\",\n  \"keywords\": [\n    \"statsd\",\n    \"etsy\",\n    \"metric\",\n    \"aggregation\",\n    \"realtime\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/statsd/statsd.git\"\n  },\n  \"engines\": {\n    \"node\": \">=8\"\n  },\n  \"dependencies\": {\n    \"generic-pool\": \"2.2.0\"\n  },\n  \"devDependencies\": {\n    \"nodeunit\": \"^0.11.3\",\n    \"underscore\": \"1.4.x\",\n    \"temp\": \"0.4.x\"\n  },\n  \"optionalDependencies\": {\n    \"modern-syslog\": \"1.2.0\",\n    \"hashring\": \"3.2.0\",\n    \"winser\": \"=0.1.6\"\n  },\n  \"bin\": {\n    \"statsd\": \"./bin/statsd\"\n  },\n  \"scripts\": {\n    \"test\": \"node run_tests.js\",\n    \"start\": \"node stats.js config.js\",\n    \"install-windows-service\": \"node_modules\\\\.bin\\\\winser -i\",\n    \"uninstall-windows-service\": \"node_modules\\\\.bin\\\\winser -r\"\n  }\n}\n"
        },
        {
          "name": "packager",
          "type": "tree",
          "content": null
        },
        {
          "name": "proxy.js",
          "type": "blob",
          "size": 8.4599609375,
          "content": "/*jshint node:true, laxcomma:true */\n\nvar dgram    = require('dgram')\n  , net      = require('net')\n  , events   = require('events')\n  , logger = require('./lib/logger')\n  , hashring = require('hashring')\n  , cluster = require('cluster')\n  , helpers = require('./lib/helpers')\n  , mgmt_server = require('./lib/mgmt_server')\n  , configlib   = require('./lib/config');\n\nvar packet   = new events.EventEmitter();\nvar startup_time = Math.round(new Date().getTime() / 1000);\nvar node_status = {};\nvar workers = [];  // Keep track of all forked childs\nvar node_ring = {};\nvar servers_loaded;\nvar config;\nvar l;  // logger\n\nconfiglib.configFile(process.argv[2], function (conf, oldConfig) {\n  config = conf;\n  var udp_version = config.address_ipv6 ? 'udp6' : 'udp4';\n  var nodes = config.nodes;\n  l = new logger.Logger(config.log || {});\n\n  var forkCount = config.forkCount;\n  if (forkCount === 'auto') {\n    forkCount = require('os').cpus().length;\n  }\n\n  var logPrefix = \"[\" + process.pid + \"] \";\n  var log = function(msg, type) {\n    l.log(logPrefix + msg, type);\n  };\n\n  var healthStatus = configlib.healthStatus || 'up';\n  var healthCheckInterval = config.checkInterval || 10000;\n\n  var broadcastMsg = function(msg) {\n    for (var i = 0; i < workers.length; i++) {\n      workers[i].send(msg);\n    }\n  };\n\n  if (forkCount > 1) {\n    if (cluster.isMaster) {\n      var worker;\n      logPrefix += \"[master] \";\n      log(\"forking \" + forkCount + \" childs\", \"INFO\");\n\n      for (var i = 0; i < forkCount; i++) {\n        worker = cluster.fork();\n        worker.on('message', broadcastMsg);\n      }\n\n      cluster.on('online', function(worker) {\n        log('worker ' + worker.process.pid + ' is online', 'INFO');\n        workers.push(worker);\n      });\n\n      cluster.on('exit', function(worker, code, signal) {\n        log('worker ' + worker.process.pid + ' died with exit code:' + code + \" restarting\", 'ERROR');\n\n        // Remove died worker from the array\n        for (var i = 0; i < workers.length; i++) {\n          if (workers[i].process.pid == worker.process.pid) {\n            workers.splice(i, 1);\n          }\n        }\n\n        worker = cluster.fork();\n        worker.on('message', broadcastMsg);\n      });\n\n      return;\n\n    } else {\n      process.on('message', function(msg) {\n        if (msg.healthStatus) {\n          healthStatus = msg.healthStatus;\n        }\n      });\n    }\n  }\n\n  //load the node_ring object with the available nodes and a weight of 100\n  // weight is currently arbitrary but the same for all\n  nodes.forEach(function(element, index, array) {\n    node_ring[element.host + ':' + element.port] = 100;\n  });\n\n  var ring = new hashring(\n    node_ring, 'md5', {\n      'max cache size': config.cacheSize || 10000,\n      //We don't want duplicate keys sent so replicas set to 0\n      'replicas': 0\n    });\n\n  if (!servers_loaded) {\n    // Do an initial rount of health checks prior to starting up the server\n    doHealthChecks();\n\n    // Setup the udp listener\n    var server_config = config.server  || './servers/udp';\n    var servermod = require(server_config);\n    var server = servermod.start(config, function (msg, rinfo) {\n      // Convert the raw packet to a string (defaults to UTF8 encoding)\n      var packet_data = msg.toString();\n      var current_metric\n        , bits\n        , key;\n      // If the packet contains a \\n then it contains multiple metrics\n      if (packet_data.indexOf(\"\\n\") > -1) {\n        var metrics;\n        metrics = packet_data.split(\"\\n\");\n        // Loop through the metrics and split on : to get metric name for hashing\n        for (var midx in metrics) {\n          current_metric = metrics[midx];\n          bits = current_metric.split(':');\n          key = bits.shift();\n          if (current_metric !== '') {\n            var new_msg = new Buffer(current_metric);\n            packet.emit('send', key, new_msg);\n          }\n        }\n\n      } else {\n        // metrics needs to be an array to fake it for single metric packets\n        current_metric = packet_data;\n        bits = current_metric.split(':');\n        key = bits.shift();\n        if (current_metric !== '') {\n          packet.emit('send', key, msg);\n        }\n      }\n    });\n    var client = dgram.createSocket(udp_version);\n    // Listen for the send message, and process the metric key and msg\n    packet.on('send', function(key, msg) {\n      // retrieves the destination for this key\n      var statsd_host = ring.get(key);\n\n      // break the retrieved host to pass to the send function\n      if (statsd_host === undefined) {\n        log('Warning: No backend statsd nodes available!', 'WARNING');\n      } else {\n        var host_config = statsd_host.split(':');\n\n        // Send the mesg to the backend\n        client.send(msg, 0, msg.length, host_config[1], host_config[0]);\n      }\n    });\n\n    mgmt_server.start(\n      config,\n      function(cmd, parameters, stream) {\n        switch(cmd) {\n          case \"help\":\n            stream.write(\"Commands: config, health, status, quit\\n\\n\");\n            break;\n\n          case \"config\":\n            helpers.writeConfig(config, stream);\n            break;\n\n          case \"health\":\n            if (parameters.length > 0) {\n              var cmdaction = parameters[0].toLowerCase();\n              if (cmdaction === 'up') {\n                healthStatus = 'up';\n                if (forkCount > 0) {\n                  // Notify the other forks\n                  process.send({ healthStatus: healthStatus });\n                }\n              } else if (cmdaction === 'down') {\n                healthStatus = 'down';\n                if (forkCount > 0) {\n                  // Notify the other forks\n                  process.send({ healthStatus: healthStatus });\n                }\n              }\n            }\n            stream.write(\"health: \" + healthStatus + \"\\n\");\n            break;\n\n          case \"status\":\n            var now    = Math.round(new Date().getTime() / 1000);\n            var uptime = now - startup_time;\n\n            stream.write(\"uptime: \" + uptime + \"\\n\");\n\n            stream.write(\"nodes: \");\n            ring.servers.forEach(function(server, index, array) {\n              stream.write(server.string + \" \");\n            });\n            stream.write(\"\\n\");\n            break;\n\n          case \"quit\":\n            stream.end();\n            break;\n\n          default:\n            stream.write(\"ERROR\\n\");\n            break;\n        }\n      },\n      function(err, stream) {\n        log(\"MGMT: Caught \" + err + \", Moving on\", \"WARNING\");\n      }\n    );\n\n    servers_loaded = true;\n    log(\"server is up\", \"INFO\");\n\n    // Set the interval for healthchecks\n    setInterval(doHealthChecks, healthCheckInterval);\n  }\n\n  // Perform health check on all nodes\n  function doHealthChecks() {\n    nodes.forEach(function(element, index, array) {\n      healthcheck(element);\n    });\n  }\n\n  function markNodeAsHealthy(node_id) {\n    if (node_status[node_id] !== undefined) {\n      if (node_status[node_id] > 0) {\n        var new_server = {};\n        new_server[node_id] = 100;\n        log('Adding node ' + node_id + ' to the ring.', 'WARNING');\n        ring.add(new_server);\n      }\n    }\n\n    node_status[node_id] = 0;\n  }\n\n  function markNodeAsUnhealthy(node_id) {\n    if (node_status[node_id] === undefined) {\n      node_status[node_id] = 1;\n    } else {\n      node_status[node_id]++;\n    }\n    if (node_status[node_id] < 2) {\n      log('Removing node ' + node_id + ' from the ring.', 'WARNING');\n      ring.remove(node_id);\n    }\n  }\n\n  // Perform health check on node\n  function healthcheck(node) {\n    var ended = false;\n    var node_id = node.host + ':' + node.port;\n    var client = net.connect(\n      {port: node.adminport, host: node.host},\n      function onConnect() {\n        if (!ended) {\n          client.write('health\\r\\n');\n        }\n      }\n    );\n\n    client.setTimeout(healthCheckInterval, function() {\n      client.end();\n      markNodeAsUnhealthy(node_id);\n      client.removeAllListeners('data');\n      ended = true;\n    });\n\n    client.on('data', function(data) {\n      if (ended) {\n        return;\n      }\n\n      var health_status = data.toString();\n      client.end();\n      ended = true;\n\n      if (health_status.indexOf('up') < 0) {\n        markNodeAsUnhealthy(node_id);\n      } else {\n        markNodeAsHealthy(node_id);\n      }\n    });\n\n    client.on('error', function(e) {\n      if (ended) {\n        return;\n      }\n\n      if (e.code !== 'ECONNREFUSED' && e.code !== 'EHOSTUNREACH' && e.code !== 'ECONNRESET') {\n        log('Error during healthcheck on node ' + node_id + ' with ' + e.code, 'ERROR');\n      }\n\n      markNodeAsUnhealthy(node_id);\n    });\n  }\n\n});\n"
        },
        {
          "name": "run_tests.js",
          "type": "blob",
          "size": 0.34375,
          "content": "#!/usr/bin/env node\nlet reporter;\ntry {\n    reporter = require('nodeunit').reporters.default;\n}\ncatch(e) {\n    console.log(\"Cannot find nodeunit module.\");\n    console.log(\"Make sure to run 'npm install nodeunit'\");\n    process.exit();\n}\n\nprocess.chdir(__dirname);\nreporter.run(['test/'], null, function(failure) {\n   process.exit(failure ? 1 : 0)\n});\n"
        },
        {
          "name": "servers",
          "type": "tree",
          "content": null
        },
        {
          "name": "stats.js",
          "type": "blob",
          "size": 15.259765625,
          "content": "/*jshint node:true, laxcomma:true */\n\nconst util = require('util');\nconst config = require('./lib/config');\nconst helpers = require('./lib/helpers');\nconst fs = require('fs');\nconst events = require('events');\nconst logger = require('./lib/logger');\nconst set = require('./lib/set');\nconst pm = require('./lib/process_metrics');\nconst process_mgmt = require('./lib/process_mgmt');\nconst mgmt_server = require('./lib/mgmt_server');\nconst mgmt = require('./lib/mgmt_console');\n\n// initialize data structures with defaults for statsd stats\nlet keyCounter = {};\nlet counters = {};\nlet timers = {};\nlet timer_counters = {};\nlet gauges = {};\nlet gaugesTTL = {};\nlet sets = {};\nlet counter_rates = {};\nlet timer_data = {};\nlet pctThreshold = null;\nlet flushInterval, keyFlushInt, serversLoaded, mgmtServer;\nlet startup_time = Math.round(new Date().getTime() / 1000);\nlet backendEvents = new events.EventEmitter();\nlet healthStatus = config.healthStatus || 'up';\nlet old_timestamp = 0;\nlet timestamp_lag_namespace;\nlet keyNameSanitize = true;\n\n// Load and init the backend from the backends/ directory.\nfunction loadBackend(config, name) {\n  const backendmod = require(name);\n\n  if (config.debug) {\n    l.log(\"Loading backend: \" + name, 'DEBUG');\n  }\n\n  const ret = backendmod.init(startup_time, config, backendEvents, l);\n  if (!ret) {\n    l.log(\"Failed to load backend: \" + name, \"ERROR\");\n    process.exit(1);\n  }\n}\n\n// Load and init the server from the servers/ directory.\n// The callback mimics the dgram 'message' event parameters (msg, rinfo)\n//   msg: the message received by the server. may contain more than one metric\n//   rinfo: contains remote address information and message length\n//      (attributes are .address, .port, .family, .size - you're welcome)\nfunction startServer(config, name, callback) {\n  const servermod = require(name);\n\n  if (config.debug) {\n    l.log(\"Loading server: \" + name, 'DEBUG');\n  }\n\n  const ret = servermod.start(config, callback);\n  if (!ret) {\n    l.log(\"Failed to load server: \" + name, \"ERROR\");\n    process.exit(1);\n  }\n}\n\n// global for conf\nlet conf;\n\n// Flush metrics to each backend.\nfunction flushMetrics() {\n  const time_stamp = Math.round(new Date().getTime() / 1000);\n  if (old_timestamp > 0) {\n    gauges[timestamp_lag_namespace] = (time_stamp - old_timestamp - (Number(conf.flushInterval)/1000));\n  }\n  old_timestamp = time_stamp;\n\n  const metrics_hash = {\n    counters: counters,\n    gauges: gauges,\n    timers: timers,\n    timer_counters: timer_counters,\n    sets: sets,\n    counter_rates: counter_rates,\n    timer_data: timer_data,\n    pctThreshold: pctThreshold,\n    histogram: conf.histogram\n  };\n\n  // After all listeners, reset the stats\n  backendEvents.once('flush', function clear_metrics(ts, metrics) {\n\n    // Clear the counters\n    conf.deleteCounters = conf.deleteCounters || false;\n    for (const counter_key in metrics.counters) {\n      if (conf.deleteCounters) {\n        if ((counter_key.indexOf(\"packets_received\") != -1) ||\n            (counter_key.indexOf(\"metrics_received\") != -1) ||\n            (counter_key.indexOf(\"bad_lines_seen\") != -1)) {\n          metrics.counters[counter_key] = 0;\n        } else {\n         delete(metrics.counters[counter_key]);\n        }\n      } else {\n        metrics.counters[counter_key] = 0;\n      }\n    }\n\n    // Clear the timers\n    conf.deleteTimers = conf.deleteTimers || false;\n    for (const timer_key in metrics.timers) {\n      if (conf.deleteTimers) {\n        delete(metrics.timers[timer_key]);\n        delete(metrics.timer_counters[timer_key]);\n      } else {\n        metrics.timers[timer_key] = [];\n        metrics.timer_counters[timer_key] = 0;\n     }\n    }\n\n    // Clear the sets\n    conf.deleteSets = conf.deleteSets || false;\n    for (const set_key in metrics.sets) {\n      if (conf.deleteSets) {\n        delete(metrics.sets[set_key]);\n      } else {\n        metrics.sets[set_key] = new set.Set();\n      }\n    }\n\n    // Normally gauges are not reset.  so if we don't delete them, continue to persist previous value\n    conf.deleteGauges = conf.deleteGauges || false;\n    if (conf.deleteGauges) {\n      for (const gauge_key in gaugesTTL) {\n        gaugesTTL[gauge_key]--;\n\n        // if the gauge has been idle for more than the allowed TTL cycles delete it\n        if (gaugesTTL[gauge_key] < 1) {\n          delete(metrics.gauges[gauge_key]);\n          delete(gaugesTTL[gauge_key]);\n        }\n      }\n    }\n  });\n\n  pm.process_metrics(metrics_hash, conf.calculatedTimerMetrics, flushInterval, time_stamp, function emitFlush(metrics) {\n    backendEvents.emit('flush', time_stamp, metrics);\n  });\n\n  // Performing this setTimeout at the end of this method rather than the beginning\n  // helps ensure we adapt to negative clock skew by letting the method's latency\n  // introduce a short delay that should more than compensate.\n  setTimeout(flushMetrics, getFlushTimeout(flushInterval));\n}\n\nconst stats = {\n  messages: {\n    last_msg_seen: startup_time,\n    bad_lines_seen: 0\n  }\n};\n\nfunction sanitizeKeyName(key) {\n  if (keyNameSanitize) {\n    return key.replace(/\\s+/g, '_')\n              .replace(/\\//g, '-')\n              .replace(/[^a-zA-Z_\\-0-9\\.;=]/g, '');\n  } else {\n    return key;\n  }\n}\n\nfunction getFlushTimeout(interval) {\n  const now = new Date().getTime()\n  const deltaTime = now - startup_time * 1000;\n  const timeoutAttempt = Math.round(deltaTime / interval) + 1;\n  const fixedTimeout = (startup_time * 1000 + timeoutAttempt * interval) - now;\n\n  return fixedTimeout;\n}\n\n// Global for the logger\nlet l;\n\nconfig.configFile(process.argv[2], function (config) {\n  conf = config;\n\n  process_mgmt.init(config);\n\n  l = new logger.Logger(config.log || {});\n\n  // force conf.gaugesMaxTTL to 1 if it not a positive integer > 1\n  if (helpers.isInteger(conf.gaugesMaxTTL) && conf.gaugesMaxTTL > 1) {\n    conf.gaugesMaxTTL = conf.gaugesMaxTTL;\n  } else {\n    conf.gaugesMaxTTL = 1;\n  }\n\n  // allows us to flag all of these on with a single config but still override them individually\n  conf.deleteIdleStats = conf.deleteIdleStats !== undefined ? conf.deleteIdleStats : false;\n  if (conf.deleteIdleStats) {\n    conf.deleteCounters = conf.deleteCounters !== undefined ? conf.deleteCounters : true;\n    conf.deleteTimers = conf.deleteTimers !== undefined ? conf.deleteTimers : true;\n    conf.deleteSets = conf.deleteSets !== undefined ? conf.deleteSets : true;\n    conf.deleteGauges = conf.deleteGauges !== undefined ? conf.deleteGauges : true;\n  }\n\n  // if gauges are not being deleted, clear gaugesTTL counters to save memory\n  if (! conf.deleteGauges) {\n    gaugesTTL = {}\n  }\n  // setup config for stats prefix\n  let prefixStats = config.prefixStats;\n  prefixStats = prefixStats !== undefined ? prefixStats : \"statsd\";\n  //setup the names for the stats stored in counters{}\n  bad_lines_seen   = prefixStats + \".bad_lines_seen\";\n  packets_received = prefixStats + \".packets_received\";\n  metrics_received = prefixStats + \".metrics_received\";\n  timestamp_lag_namespace = prefixStats + \".timestamp_lag\";\n\n  //now set to zero so we can increment them\n  counters[bad_lines_seen]   = 0;\n  counters[packets_received] = 0;\n  counters[metrics_received] = 0;\n\n  if (config.keyNameSanitize !== undefined) {\n    keyNameSanitize = config.keyNameSanitize;\n  }\n  if (!serversLoaded) {\n\n    // key counting\n    const keyFlushInterval = Number((config.keyFlush && config.keyFlush.interval) || 0);\n\n    const handlePacket = function (msg, rinfo) {\n      backendEvents.emit('packet', msg, rinfo);\n      counters[packets_received]++;\n      let metrics;\n      const packet_data = msg.toString();\n      if (packet_data.indexOf(\"\\n\") > -1) {\n        metrics = packet_data.split(\"\\n\");\n      } else {\n        metrics = [ packet_data ] ;\n      }\n\n      for (const midx in metrics) {\n        if (metrics[midx].length === 0) {\n          continue;\n        }\n\n        counters[metrics_received]++;\n        if (config.dumpMessages) {\n          l.log(metrics[midx].toString());\n        }\n\n        let bits = metrics[midx].toString().split('|#');\n        let tags = [];\n        if (bits.length > 1 && bits[1].length > 0) {\n          tags = bits[1].split(',');\n        }\n        bits = bits[0].split(':');\n        let key = bits.shift();\n        if (tags.length > 0) {\n          key += ';' + tags.map(function(tag) {\n            return tag.replace(';', '_').replace(':', '=');\n          }).join(';');\n        }\n        key = sanitizeKeyName(key);\n\n        if (keyFlushInterval > 0) {\n          if (! keyCounter[key]) {\n            keyCounter[key] = 0;\n          }\n          keyCounter[key] += 1;\n        }\n\n        if (bits.length === 0) {\n          bits.push(\"1\");\n        }\n\n        for (let i = 0; i < bits.length; i++) {\n          let sampleRate = 1;\n          const fields = bits[i].split(\"|\");\n          if (!helpers.is_valid_packet(fields)) {\n              l.log('Bad line: ' + fields + ' in msg \"' + metrics[midx] +'\"');\n              counters[bad_lines_seen]++;\n              stats.messages.bad_lines_seen++;\n              continue;\n          }\n          if (fields[2]) {\n            sampleRate = Number(fields[2].match(/^@([\\d\\.]+)/)[1]);\n          }\n\n          const metric_type = fields[1].trim();\n          if (metric_type === \"ms\") {\n            if (! timers[key]) {\n              timers[key] = [];\n              timer_counters[key] = 0;\n            }\n            timers[key].push(Number(fields[0] || 0));\n            timer_counters[key] += (1 / sampleRate);\n          } else if (metric_type === \"g\") {\n            // if deleteGauges is true reset the max TTL to its initial value\n            if (conf.deleteGauges) {\n              gaugesTTL[key] = conf.gaugesMaxTTL;\n            }\n            if (gauges[key] && fields[0].match(/^[-+]/)) {\n              gauges[key] += Number(fields[0] || 0);\n            } else {\n              gauges[key] = Number(fields[0] || 0);\n            }\n          } else if (metric_type === \"s\") {\n            if (! sets[key]) {\n              sets[key] = new set.Set();\n            }\n            sets[key].insert(fields[0] || '0');\n          } else {\n            if (! counters[key]) {\n              counters[key] = 0;\n            }\n            counters[key] += Number(fields[0] || 1) * (1 / sampleRate);\n          }\n        }\n      }\n\n      stats.messages.last_msg_seen = Math.round(new Date().getTime() / 1000);\n    };\n\n    // If config.servers isn't specified, use the top-level config for backwards-compatibility\n    const server_config = config.servers || [config];\n    for (let i = 0; i < server_config.length; i++) {\n      // The default server is UDP\n      const server = server_config[i].server || './servers/udp';\n      startServer(server_config[i], server, handlePacket);\n    }\n\n    mgmt_server.start(\n      config,\n      function(cmd, parameters, stream) {\n        switch(cmd) {\n          case \"help\":\n            stream.write(\"Commands: stats, counters, timers, gauges, delcounters, deltimers, delgauges, health, config, quit\\n\\n\");\n            break;\n\n          case \"config\":\n            helpers.writeConfig(config, stream);\n            break;\n\n          case \"health\":\n            if (parameters.length > 0) {\n              const cmdaction = parameters[0].toLowerCase();\n              if (cmdaction === 'up') {\n                healthStatus = 'up';\n              } else if (cmdaction === 'down') {\n                healthStatus = 'down';\n              }\n            }\n            stream.write(\"health: \" + healthStatus + \"\\n\");\n            break;\n\n          case \"stats\":\n            const now    = Math.round(new Date().getTime() / 1000);\n            const uptime = now - startup_time;\n\n            stream.write(\"uptime: \" + uptime + \"\\n\");\n\n            const stat_writer = function(group, metric, val) {\n              let delta;\n\n              if (metric.match(\"^last_\")) {\n                delta = now - val;\n              }\n              else {\n                delta = val;\n              }\n\n              stream.write(group + \".\" + metric + \": \" + delta + \"\\n\");\n            };\n\n            // Loop through the base stats\n            for (const group in stats) {\n              for (const metric in stats[group]) {\n                stat_writer(group, metric, stats[group][metric]);\n              }\n            }\n\n            backendEvents.once('status', function() {\n              stream.write(\"END\\n\\n\");\n            });\n\n            // Let each backend contribute its status\n            backendEvents.emit('status', function(err, name, stat, val) {\n              if (err) {\n                l.log(\"Failed to read stats for backend \" +\n                        name + \": \" + err);\n              } else {\n                stat_writer(name, stat, val);\n              }\n            });\n\n            break;\n\n          case \"counters\":\n            stream.write(util.inspect(counters) + \"\\n\");\n            stream.write(\"END\\n\\n\");\n            break;\n\n          case \"timers\":\n            stream.write(util.inspect(timers) + \"\\n\");\n            stream.write(\"END\\n\\n\");\n            break;\n\n          case \"gauges\":\n            stream.write(util.inspect(gauges) + \"\\n\");\n            stream.write(\"END\\n\\n\");\n            break;\n\n          case \"delcounters\":\n            mgmt.delete_stats(counters, parameters, stream);\n            break;\n\n          case \"deltimers\":\n            mgmt.delete_stats(timers, parameters, stream);\n            break;\n\n          case \"delgauges\":\n            mgmt.delete_stats(gauges, parameters, stream);\n            break;\n\n          case \"quit\":\n            stream.end();\n            break;\n\n          default:\n            stream.write(\"ERROR\\n\");\n            break;\n        }\n      },\n      function(err, stream) {\n        l.log('MGMT: Caught ' + err +', Moving on', 'WARNING');\n      }\n    );\n\n    serversLoaded = true;\n    util.log(\"server is up\", \"INFO\");\n\n    pctThreshold = config.percentThreshold || 90;\n    if (!Array.isArray(pctThreshold)) {\n      pctThreshold = [ pctThreshold ]; // listify percentiles so single values work the same\n    }\n\n    flushInterval = Number(config.flushInterval || 10000);\n    config.flushInterval = flushInterval;\n\n    if (config.backends) {\n      for (let j = 0; j < config.backends.length; j++) {\n        loadBackend(config, config.backends[j]);\n      }\n    } else {\n      // The default backend is graphite\n      loadBackend(config, './backends/graphite');\n    }\n\n    // Setup the flush timer\n    const flushInt = setTimeout(flushMetrics, getFlushTimeout(flushInterval));\n\n    if (keyFlushInterval > 0) {\n      const keyFlushPercent = Number((config.keyFlush && config.keyFlush.percent) || 100);\n      const keyFlushLog = config.keyFlush && config.keyFlush.log;\n\n      keyFlushInt = setInterval(function () {\n        const sortedKeys = [];\n\n        for (const key in keyCounter) {\n          sortedKeys.push([key, keyCounter[key]]);\n        }\n\n        sortedKeys.sort(function(a, b) { return b[1] - a[1]; });\n\n        let logMessage = \"\";\n        const timeString = (new Date()) + \"\";\n\n        // only show the top \"keyFlushPercent\" keys\n        for (let i = 0, e = sortedKeys.length * (keyFlushPercent / 100); i < e; i++) {\n          logMessage += timeString + \" count=\" + sortedKeys[i][1] + \" key=\" + sortedKeys[i][0] + \"\\n\";\n        }\n\n        if (keyFlushLog) {\n          const logFile = fs.createWriteStream(keyFlushLog, {flags: 'a+'});\n          logFile.write(logMessage);\n          logFile.end();\n        } else {\n          process.stdout.write(logMessage);\n        }\n\n        // clear the counter\n        keyCounter = {};\n      }, keyFlushInterval);\n    }\n  }\n});\n\nprocess.on('exit', function () {\n  flushMetrics();\n});\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}