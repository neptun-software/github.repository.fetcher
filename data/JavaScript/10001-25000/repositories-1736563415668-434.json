{
  "metadata": {
    "timestamp": 1736563415668,
    "page": 434,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ksky521/nodeppt",
      "stars": 10366,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2431640625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 4\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[{.travis.yml,ci.yml}]\nindent_style = space\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.2705078125,
          "content": "yarn.lock\n/node_modules\n/.sass-cache\n/src/index.html\n/test\n/3th\n/.idea\n/.vscode\n.DS_Store\n/npm-debug.log\ndist\npublish\noutput\n\nyarn-lock.json\npackage-lock.json\n\n.DS_Store\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Typescript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n\n### WebStorm ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff:\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/dictionaries\n\n# Sensitive or high-churn files:\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.xml\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n\n# Gradle:\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# CMake\ncmake-build-debug/\n\n# Mongo Explorer plugin:\n.idea/**/mongoSettings.xml\n\n## File-based project format:\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n### WebStorm Patch ###\n# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721\n\n# *.iml\n# modules.xml\n# .idea/misc.xml\n# *.ipr\n\n# Sonarlint plugin\n.idea/sonarlint\n\n# End of https://www.gitignore.io/api/node,webstorm\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.2177734375,
          "content": "{\n    \"singleQuote\": true,\n    \"printWidth\": 120,\n    \"tabWidth\": 4,\n    \"bracketSpacing\": false,\n    \"overrides\": [\n        {\n            \"files\": \".prettierrc\",\n            \"options\": {\"parser\": \"json\"}\n        }\n    ]\n}\n"
        },
        {
          "name": "MIT-LICENSE.txt",
          "type": "blob",
          "size": 1.0361328125,
          "content": "Copyright 2013 Theowang http://js8.in\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.0458984375,
          "content": "<h1 align=\"center\">nodeppt 2.0</h1>\n\n> 累死累活干不过做 PPT 的！<br/> > **查看效果：https://nodeppt.js.org**\n\n[![Markpress npm badge](https://nodei.co/npm/nodeppt.png)](https://www.npmjs.com/package/nodeppt)\n\n\n**nodeppt 2.0** 基于[webslides](https://github.com/webslides/WebSlides)、webpack、markdown-it、posthtml 重构，[新效果](https://nodeppt.js.org)\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm install -g nodeppt\n```\n\n## TODO\n* bug fix\n* 增加多页编辑公共资源，说人话就是 splitChunks\n\n<h2 align=\"center\">Usage</h2>\n\n简化了，就三个命令：\n\n-   new：使用线上模板创建一个新的 md 文件\n-   serve：启动一个 md 文件的 webpack dev server\n-   build：编译产出一个 md 文件\n\n```bash\n# create a new slide with an official template\n$ nodeppt new slide.md\n\n# create a new slide straight from a github template\n$ nodeppt new slide.md -t username/repo\n\n# start local sever show slide\n$ nodeppt serve slide.md\n\n# to build a slide\n$ nodeppt build slide.md\n```\n\n### 帮助\n\n```bash\n# help\nnodeppt -h\n# 获取帮助\nnodeppt serve -h\n```\n\n<h2 align=\"center\">演讲者模式</h2>\n\nnodeppt 有演讲者模式，在页面 url 后面增加`?mode=speaker` 既可以打开演讲者模式，双屏同步\n\n<h2 align=\"center\">Keyboard Shortcuts</h2>\n\n-   Page: ↑/↓/←/→ Space Home End\n-   Fullscreen: F\n-   Overview: -/+\n-   Speaker Note: N\n-   Grid Background: Enter\n\n<h2 align=\"center\">公共资源：public 文件夹</h2>\n\n如果项目文件夹下，存在`public`文件夹，可以直接通过 url 访问，参考`webpack dev server`的 `contentBase` 选项。\n\n在`build`的时候，public 文件夹中的文件会完全 copy 到`dist`文件夹中\n\n<h2 align=\"center\">编写</h2>\n\n最佳体验是 chrome 浏览器，本来就是给做演示用的，所以就别考虑非 Chrome 浏览器兼容问题了！\n\n这里说下怎么编写。\n\n### 基本语法\n\n整个 markdown 文件分为两部分，第一部分是写在最前面的**配置**，然后是使用`<slide>`隔开的每页幻灯片内容。\n\n### 配置\n\nnodeppt 的配置是直接写在 md 文件顶部的，采用 yaml 语法，例如下面配置：\n\n```yaml\ntitle: nodeppt markdown 演示\nspeaker: 三水清\nurl: https://github.com/ksky521/nodeppt\njs:\n    - https://www.echartsjs.com/asset/theme/shine.js\nprismTheme: solarizedlight\nplugins:\n    - echarts\n    - mermaid\n    - katex\n```\n\n-   title: 演讲主题\n-   speaker：演讲者\n-   url：地址\n-   js：js 文件数组，放到 body 之前\n-   css：css 文件数组，放到头部\n-   prismTheme：prism 配色，取值范围 `['dark', 'coy', 'funky', 'okaidia', 'tomorrow', 'solarizedlight', 'twilight']`\n-   plugins：目前支持 [echarts](https://echarts.baidu.com/)，[mermaid](https://mermaidjs.github.io/)和 [katex](https://katex.org) 三个插件\n\n#### 插件\n\n目前 nodeppt 支持 [图表 echarts](https://echarts.baidu.com/)，[流程图 mermaid](https://mermaidjs.github.io/)，[数学符号 KaTeX](https://katex.org) 三个插件。\n\n#### echarts\n\necharts 主题配色可以直接在`yaml`配置的 js 中引入。echarts 采用`fence`语法，如下：\n\n```echarts\n{\n    xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [{\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\n        type: 'line'\n    }]\n}\n```\n详见[site/echarts.md](./site/echarts.md)\n\n#### mermaid\n\nmermaid 主题配色可以直接在`yaml`配置的 js 中引入。mermaid 采用`fence`语法，如下：\n\n```mermaid\nsequenceDiagram\n    Alice ->> Bob: Hello Bob, how are you?\n    Bob-->>John: How about you John?\n    Bob--x Alice: I am good thanks!\n    Bob-x John: I am good thanks!\n    Note right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\n\n    Bob-->Alice: Checking with John...\n    Alice->John: Yes... John, how are you?\n```\n\n详见[site/mermaid.md](./site/mermaid.md)\n#### ketex\n\n参考：[markdown-it-katex](https://www.npmjs.com/package/markdown-it-katex)语法\n\n### `<slide>` 语法\n\nnodeppt 会根据`<slide>`对整个 markdown 文件进行拆分，拆成单页的幻灯片内容。`<slide>` 标签支持下面标签：\n\n-   class/style 等：正常的 class 类，可以通过这个控制居中（aligncenter），内容位置，背景色等\n-   image：背景图片，基本语法 `image=\"img_url\"`\n-   video：背景视频，基本语法 `video=\"video_src1,video_src2\"`\n-   :class：wrap 的 class，下面详解\n\n每个 slide 会解析成下面的 html 结构：\n\n```html\n<section class=\"slide\" attrs...><div class=\"wrap\" wrap=\"true\">// 具体 markdown 渲染的内容</div></section>\n```\n\n其中`<slide>` 的`class`等会被解析到 `<section>`标签上面，而`:class`则被解析到`div.wrap`上面，例如：\n\n```html\n<slide :class=\"size-50\" class=\"bg-primary\"></slide>\n```\n\noutput 为：\n\n```html\n<section class=\"slide bg-primary\"><div class=\"wrap size-50\" wrap=\"true\">// 具体 markdown 渲染的内容</div></section>\n```\n\n#### 背景：图片\n\n`<slide>`的`image` 会被解析成背景大图，常见的支持方式有：\n\n```md\n<slide image=\"https://source.unsplash.com/UJbHNoVPZW0/\">\n\n# 这是一个普通的背景图\n\n<slide image=\"https://source.unsplash.com/UJbHNoVPZW0/ .dark\">\n\n# 这张背景图会在图片上面蒙一层偏黑色的透明层\n\n<slide image=\"https://source.unsplash.com/UJbHNoVPZW0/ .light\">\n\n# 这张背景图会在图片上面蒙一层偏白色的透明层\n\n<slide class=\"bg-black aligncenter\" image=\"https://source.unsplash.com/n9WPPWiPPJw/ .anim\">\n\n# 这张背景图会缓慢动\n```\n\n详见[site/background.md](./site/background.md)和[在线演示](https://js8.in/nodeppt/background.html)\n\n### 样式\n\n样式太多，具体详见[site/classes.md](./site/classes.md)和[在线演示](https://js8.in/nodeppt/classes.html)\n\n### 布局\n\nnodeppt 这次使用`webslides`的布局，支持丰富的布局，实在太多了，直接看文档[site/layout.md](./site/layout.md)和[在线演示](https://js8.in/nodeppt/layout.html)\n\n### attribute\n\n参考[markdown-it-attrs](https://www.npmjs.com/package/markdown-it-attrs)，支持了`attribute`，修改增加多 class 支持等功能。\n\n其中：`..class`会往上一级节点添加 class，支持`{.class1.class2}`这种多 class 的语法。用法举例：\n\n```markdown\n# header {.style-me.class2}\n\nparagraph {data-toggle=modal}\n```\n\nOutput:\n\n```html\n<h1 class=\"style-me class2\">header</h1>\n<p data-toggle=\"modal\">paragraph</p>\n```\n\n```markdown\nUse the css-module green on this paragraph. {.text-intro}\n```\n\nOutput:\n\n```html\n<p class=\"text-intro\">Use the css-module green on this paragraph.</p>\n```\n\n```markdown\n-   list item **bold** {.red}\n```\n\nOutput:\n\n```html\n<ul>\n    <li class=\"red\">list item <strong>bold</strong></li>\n</ul>\n```\n\n```markdown\n-   list item **bold**\n    {.red}\n```\n\nOutput:\n\n```html\n<ul class=\"red\">\n    <li>list item <strong>bold</strong></li>\n</ul>\n```\n\n### image 增强\n\n对于 image ，支持外面包裹一层的写法，具体语法 `!![](图片地址 属性)`，例如：\n\n```markdown\n!![](https://webslides.tv/static/images/iphone.png .size-50.alignleft)\n```\n\nOutput：\n\n```html\n<img src=\"https://webslides.tv/static/images/iphone.png\" class=\"size-50 alignleft\" />\n```\n\n```markdown\n!![figure](https://webslides.tv/static/images/setup.png .aligncenter)\n```\n\nOutput:\n\n```html\n<figure><img src=\"https://webslides.tv/static/images/setup.png\" class=\"aligncenter\" /></figure>\n```\n\n### button\n\nnodeppt 的 button 是类似`link`语法的，支持蓝色、圆角、空心和 icon 版本的 button：\n\n```markdown\n[普通按钮](){.button} [圆角普通按钮](){.button.radius}\n\n[空心](){.button.ghost} [:fa-github: 前面带 icon](){.button}\n```\n\n### Icon：FontAwesome\n\nnodeppt 的 icon 支持 [FontAwesome](https://fontawesome.com/)\n语法：\n\n-   `:fa-xxx:` → `<i class=\"fa fa-xxx\"></i>`\n-   `:~fa-xxx:~` → `<span><i class=\"fa fa-xxx\"></i></span>`\n-   `::fa-xxx::` → 块级`<i class=\"fa fa-xxx\"></i>`，即不会被`p`包裹\n\n### span\n\n代码修改自[markdown-it-span](https://github.com/pnewell/markdown-it-span/)，支持 `attr`语法，基本用法：\n\n```md\n:span:\n:span: {.text-span}\n```\n\n### 动效\n\nnodeppt 一如既往的支持动效，2.0 版本支持动效主要是页面内的动效。\n\n支持动效包括：\n\n-   fadeIn\n-   zoomIn\n-   rollIn\n-   moveIn\n-   fadeInUp\n-   slow\n\n在需要支持的动效父节点添加`.build`或者在具体的某个元素上添加`.tobuild+动效 class`即可。\n\n按照惯例，nodeppt 还支持`animate.css`的动效哦~\n\n详细查看文件：[site/animation.md](./site/animation.md)和[在线演示](https://js8.in/nodeppt/animation.html)\n\n### 使用强大的`:::`完成复杂布局\n\n`:::`语法是扩展了 [markdown-it-container](https://www.npmjs.com/package/markdown-it-container) 语法，默认是任意 tag，例如\n\n```markdown\n:::div {.content-left}\n\n## title\n\n:::\n```\n\nOutput：\n\n```html\n<div class=\"content-left\"><h2>title</h2></div>\n```\n\n还支持，`tag` 嵌套，除此之外，支持的组件包括：\n\n-   card：卡片，一边是图片，一边是内容\n-   column：column 多栏布局\n-   shadowbox：带阴影的盒子\n-   steps：步骤组件\n-   cta：\n-   gallery：图片\n-   flexblock：flex block 布局，支持多个子类型\n-   note: 演讲注释\n\n基本语法是：\n\n```markdown\n:::TYPE {.attrs}\n\n## 第一部分\n\n使用 hr 标签隔开\n\n---\n\n## 第二部分\n\n这里的内容也是哦\n\n:::\n```\n\n详细可以看 [component](./site/component.md) 部分的 markdown 文件和[在线演示](https://js8.in/nodeppt/component.html)\n\n<h2 align=\"center\">打印？导出 pdf？</h2>\n\nchrome 浏览器，直接在第一页 `command+P/ctrl+P` 即可\n\n<h2 align=\"center\">高级玩法</h2>\n\n如果上面\n\n### `nodeppt.config.js`\n\n在 nodeppt 执行路径下创建`nodeppt.config.js`文件，可以配置跟`webpack`相关的选项，另外可以支持自研 nodeppt 插件。\n\n默认内置的`config.js`内容如下：\n\n```js\n/**\n * @file 默认配置\n */\nmodule.exports = () => ({\n    // project deployment base\n    baseUrl: '/',\n\n    // where to output built files\n    outputDir: 'dist',\n\n    // where to put static assets (js/css/img/font/...)\n    assetsDir: '',\n\n    // filename for index.html (relative to outputDir)\n    indexPath: 'index.html',\n    // 插件，包括 markdown 和 posthtml\n    plugins: [],\n    // chainWebpack: [],\n\n    // whether filename will contain hash part\n    filenameHashing: true,\n\n    // boolean, use full build?\n    runtimeCompiler: false,\n\n    // deps to transpile\n    transpileDependencies: [\n        /* string or regex */\n    ],\n\n    // sourceMap for production build?\n    productionSourceMap: true,\n\n    // use thread-loader for babel & TS in production build\n    // enabled by default if the machine has more than 1 cores\n    parallel: () => {\n        try {\n            return require('os').cpus().length > 1;\n        } catch (e) {\n            return false;\n        }\n    },\n\n    // multi-page config\n    pages: undefined,\n\n    // <script type=\"module\" crossorigin=\"use-credentials\">\n    // #1656, #1867, #2025\n    crossorigin: undefined,\n\n    // subresource integrity\n    integrity: false,\n\n    css: {\n        extract: true\n        // modules: false,\n        // localIdentName: '[name]_[local]_[hash:base64:5]',\n        // sourceMap: false,\n        // loaderOptions: {}\n    },\n\n    devServer: {\n        /*\n      host: '0.0.0.0',\n      port: 8080,\n      https: false,\n      proxy: null, // string | Object\n      before: app => {}\n    */\n    }\n});\n```\n\n### parser plugin\n\n解析插件分两类： `markdown-it` 和 `posthtml`，\n\n-   markdown-it：是解析 markdown 文件的，如果是增强 markdown 语法，可以用这类插件\n-   posthtml：是处理 html 标签的，如果是修改输出的 html 内容，可以用这类插件\n\n定义一个 plugin ：\n\n```js\nmodule.exports = {\n    // 这里的 id 必须以 markdown/posthtml开头\n    // 分别对应 markdown-it和 posthtml 插件语法\n    id: 'markdown-xxx',\n    // 这里的 apply 是插件实际的内容，详细查看 markdown-it和 posthtml 插件开发\n    apply: () => {}\n};\n```\n\n-   [markdown-it docs](https://github.com/markdown-it/markdown-it/tree/master/docs)\n-   [posthtml docs](https://github.com/posthtml/posthtml/tree/master/docs)\n\n### webslides plugin\n\nWebSlides 插件需要写到一个 js 文件中，然后作为数组放到`window.WSPlugins_`中，然后通过在 md 页面的配置（yaml）添加 js 的方法引入。\n\n```md\njs: - webslide_plugins.js\n```\n\n```js\n// webslide_plugins.js内容\nwindow.WSPlugins_ = [\n    {\n        id: 'webslide_plugin_name',\n        // 下面是对应的插件类\n        apply: class Plugin {}\n    }\n];\n```\n\n参考[WebSlides 文档](https://github.com/webslides/WebSlides/wiki/Plugin-development)\n\n### Template：自制模板\n\n参考[nodeppt-template-default](https://github.com/ksky521/nodeppt-template-default)。\n\n然后使用`nodeppt new username/repo xxx.md`使用\n\n<h2 align=\"center\">Thanks</h2>\n\n-   [WebSlides](https://github.com/webslides/WebSlides)\n-   [markdown-it](https://github.com/markdown-it/markdown-it)\n-   [posthtml](https://github.com/posthtml/posthtml)\n-   [webpack](https://github.com/webpack/webpack)\n-   [vue-cli](https://github.com/vuejs/vue-cli)\n"
        },
        {
          "name": "gh-page.sh",
          "type": "blob",
          "size": 0.6669921875,
          "content": "#! /bin/sh\nset -e\nrm -rf publish\ncd site\n\nnode ../packages/nodeppt/bin/nodeppt build index.md\nnode ../packages/nodeppt/bin/nodeppt build animation.md\nnode ../packages/nodeppt/bin/nodeppt build component.md\nnode ../packages/nodeppt/bin/nodeppt build layout.md\nnode ../packages/nodeppt/bin/nodeppt build media.md\nnode ../packages/nodeppt/bin/nodeppt build background.md\nnode ../packages/nodeppt/bin/nodeppt build classes.md\n\ncd dist\n\necho 'nodeppt.js.org' > CNAME\ngit init\ngit add -A\ndate_str=`date \"+DATE: %m/%d/%Y%nTIME: %H:%M:%S\"`\ngit commit -m \"build with nodeppt on $date_str\"\n#exit\necho 'push remote github'\ngit push -u git@github.com:ksky521/nodeppt.git master:gh-pages --force\n"
        },
        {
          "name": "lerna.json",
          "type": "blob",
          "size": 0.2265625,
          "content": "{\n    \"packages\": [\n        \"packages/*\"\n    ],\n    \"npmClient\": \"yarn\",\n    \"command\": {\n        \"bootstrap\": {\n            \"npmClientArgs\": [\n                \"--no-lockfile\"\n            ]\n        }\n    },\n    \"version\": \"2.2.2\"\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.150390625,
          "content": "{\n    \"name\": \"nodeppt\",\n    \"private\": true,\n    \"workspaces\": [\n        \"packages/*\"\n    ],\n    \"devDependencies\": {\n        \"lerna\": \"^3.20.2\"\n    }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}