{
  "metadata": {
    "timestamp": 1736563218570,
    "page": 173,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MHSanaei/3x-ui",
      "stars": 15864,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1162109375,
          "content": ".idea\n.vscode\n.cache\n.sync*\n*.tar.gz\n*.log\naccess.log\nerror.log\ntmp\nmain\nbackup/\nbin/\ndist/\nrelease/\n/release.sh\n/x-ui\n"
        },
        {
          "name": "DockerEntrypoint.sh",
          "type": "blob",
          "size": 0.078125,
          "content": "#!/bin/sh\n\n# Start fail2ban\nfail2ban-client -x start\n\n# Run x-ui\nexec /app/x-ui\n"
        },
        {
          "name": "DockerInit.sh",
          "type": "blob",
          "size": 1.2744140625,
          "content": "#!/bin/sh\ncase $1 in\n    amd64)\n        ARCH=\"64\"\n        FNAME=\"amd64\"\n        ;;\n    i386)\n        ARCH=\"32\"\n        FNAME=\"i386\"\n        ;;\n    armv8 | arm64 | aarch64)\n        ARCH=\"arm64-v8a\"\n        FNAME=\"arm64\"\n        ;;\n    armv7 | arm | arm32)\n        ARCH=\"arm32-v7a\"\n        FNAME=\"arm32\"\n        ;;\n    armv6)\n        ARCH=\"arm32-v6\"\n        FNAME=\"armv6\"\n        ;;\n    *)\n        ARCH=\"64\"\n        FNAME=\"amd64\"\n        ;;\nesac\nmkdir -p build/bin\ncd build/bin\nwget \"https://github.com/XTLS/Xray-core/releases/download/v25.1.1/Xray-linux-${ARCH}.zip\"\nunzip \"Xray-linux-${ARCH}.zip\"\nrm -f \"Xray-linux-${ARCH}.zip\" geoip.dat geosite.dat\nmv xray \"xray-linux-${FNAME}\"\nwget https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat\nwget https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat\nwget -O geoip_IR.dat https://github.com/chocolate4u/Iran-v2ray-rules/releases/latest/download/geoip.dat\nwget -O geosite_IR.dat https://github.com/chocolate4u/Iran-v2ray-rules/releases/latest/download/geosite.dat\nwget -O geoip_RU.dat https://github.com/runetfreedom/russia-v2ray-rules-dat/releases/latest/download/geoip.dat\nwget -O geosite_RU.dat https://github.com/runetfreedom/russia-v2ray-rules-dat/releases/latest/download/geosite.dat\ncd ../../"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.3115234375,
          "content": "# ========================================================\n# Stage: Builder\n# ========================================================\nFROM golang:1.23-alpine AS builder\nWORKDIR /app\nARG TARGETARCH\n\nRUN apk --no-cache --update add \\\n  build-base \\\n  gcc \\\n  wget \\\n  unzip\n\nCOPY . .\n\nENV CGO_ENABLED=1\nENV CGO_CFLAGS=\"-D_LARGEFILE64_SOURCE\"\nRUN go build -o build/x-ui main.go\nRUN ./DockerInit.sh \"$TARGETARCH\"\n\n# ========================================================\n# Stage: Final Image of 3x-ui\n# ========================================================\nFROM alpine\nENV TZ=Asia/Tehran\nWORKDIR /app\n\nRUN apk add --no-cache --update \\\n  ca-certificates \\\n  tzdata \\\n  fail2ban \\\n  bash\n\nCOPY --from=builder /app/build/ /app/\nCOPY --from=builder /app/DockerEntrypoint.sh /app/\nCOPY --from=builder /app/x-ui.sh /usr/bin/x-ui\n\n\n# Configure fail2ban\nRUN rm -f /etc/fail2ban/jail.d/alpine-ssh.conf \\\n  && cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local \\\n  && sed -i \"s/^\\[ssh\\]$/&\\nenabled = false/\" /etc/fail2ban/jail.local \\\n  && sed -i \"s/^\\[sshd\\]$/&\\nenabled = false/\" /etc/fail2ban/jail.local \\\n  && sed -i \"s/#allowipv6 = auto/allowipv6 = auto/g\" /etc/fail2ban/fail2ban.conf\n\nRUN chmod +x \\\n  /app/DockerEntrypoint.sh \\\n  /app/x-ui \\\n  /usr/bin/x-ui\n\nVOLUME [ \"/etc/x-ui\" ]\nCMD [ \"./x-ui\" ]\nENTRYPOINT [ \"/app/DockerEntrypoint.sh\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.es_ES.md",
          "type": "blob",
          "size": 21.888671875,
          "content": "[English](/README.md) | [中文](/README.zh_CN.md) | [Español](/README.es_ES.md) | [Русский](/README.ru_RU.md)\n\n<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/3x-ui-dark.png\">\n    <img alt=\"3x-ui\" src=\"./media/3x-ui-light.png\">\n  </picture>\n</p>\n\n**Un Panel Web Avanzado • Construido sobre Xray Core**\n\n[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg)](https://github.com/MHSanaei/3x-ui/releases)\n[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg)](#)\n[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg)](#)\n[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg)](#)\n[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true)](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n> **Descargo de responsabilidad:** Este proyecto es solo para aprendizaje personal y comunicación, por favor no lo uses con fines ilegales, por favor no lo uses en un entorno de producción\n\n**Si este proyecto te es útil, podrías considerar darle una**:star2:\n\n<p align=\"left\">\n  <a href=\"https://buymeacoffee.com/mhsanaei\" target=\"_blank\">\n    <img src=\"./media/buymeacoffe.png\" alt=\"Image\">\n  </a>\n</p>\n\n- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`\n- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`\n- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`\n\n## Instalar y Actualizar\n\n```\nbash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)\n```\n\n## Instalar versión antigua (no recomendamos)\n\nPara instalar la versión deseada, utiliza el siguiente comando de instalación. Por ejemplo, ver `v1.7.9`:\n\n```\nVERSION=v1.7.9 && <(curl -Ls \"https://raw.githubusercontent.com/mhsanaei/3x-ui/$VERSION/install.sh\") $VERSION\n```\n\n## Certificado SSL\n\n<details>\n  <summary>Haga clic para ver los detalles del certificado SSL</summary>\n\n### ACME\n\nPara gestionar certificados SSL utilizando ACME:\n\n1. Asegúrate de que tu dominio esté correctamente resuelto al servidor.\n2. Ejecuta el comando `x-ui` en la terminal y elige `Gestión de Certificados SSL`.\n3. Se te presentarán las siguientes opciones:\n\n   - **Get SSL:** Obtener certificados SSL.\n   - **Revoke:** Revocar certificados SSL existentes.\n   - **Force Renew:** Forzar la renovación de certificados SSL.\n   - **Show Existing Domains:** Mostrar todos los certificados de dominio disponibles en el servidor.  \n   - **Set Certificate Paths for the Panel:** Especificar el certificado para tu dominio que será utilizado por el panel. \n\n### Certbot\n\nPara instalar y usar Certbot:\n\n```sh\napt-get install certbot -y\ncertbot certonly --standalone --agree-tos --register-unsafely-without-email -d yourdomain.com\ncertbot renew --dry-run\n```\n\n### Cloudflare\n\nEl script de gestión incluye una aplicación de certificado SSL integrada para Cloudflare. Para usar este script para solicitar un certificado, necesitas lo siguiente:\n\n- Correo electrónico registrado en Cloudflare\n- Clave API Global de Cloudflare\n- El nombre de dominio debe estar resuelto al servidor actual a través de Cloudflare\n\n**Cómo obtener la Clave API Global de Cloudflare:**\n\n1. Ejecuta el comando `x-ui` en la terminal y elige `Certificado SSL de Cloudflare`.\n2. Visita el enlace: [Tokens de API de Cloudflare](https://dash.cloudflare.com/profile/api-tokens).\n3. Haz clic en \"Ver Clave API Global\" (consulta la captura de pantalla a continuación):\n   ![](media/APIKey1.PNG)\n4. Es posible que necesites volver a autenticar tu cuenta. Después de eso, se mostrará la Clave API (consulta la captura de pantalla a continuación):\n   ![](media/APIKey2.png)\n\nAl utilizarlo, simplemente ingresa tu `nombre de dominio`, `correo electrónico` y `CLAVE API`. El diagrama es el siguiente:\n   ![](media/DetailEnter.png)\n\n</details>\n\n## Instalación y Actualización Manual\n\n<details>\n  <summary>Haz clic para más detalles de la instalación manual</summary>\n\n#### Uso\n\n1. Para descargar la última versión del paquete comprimido directamente en tu servidor, ejecuta el siguiente comando:\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\n\nwget https://github.com/MHSanaei/3x-ui/releases/latest/download/x-ui-linux-${XUI_ARCH}.tar.gz\n```\n\n2. Una vez que se haya descargado el paquete comprimido, ejecuta los siguientes comandos para instalar o actualizar x-ui:\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\ncd /root/\nrm -rf x-ui/ /usr/local/x-ui/ /usr/bin/x-ui\ntar zxvf x-ui-linux-${XUI_ARCH}.tar.gz\nchmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh\ncp x-ui/x-ui.sh /usr/bin/x-ui\ncp -f x-ui/x-ui.service /etc/systemd/system/\nmv x-ui/ /usr/local/\nsystemctl daemon-reload\nsystemctl enable x-ui\nsystemctl restart x-ui\n```\n\n</details>\n\n## Instalar con Docker\n\n<details>\n  <summary>Haz clic para más detalles del Docker</summary>\n\n#### Uso\n\n1. Instala Docker:\n\n   ```sh\n   bash <(curl -sSL https://get.docker.com)\n   ```\n\n2. Clona el Repositorio del Proyecto:\n\n   ```sh\n   git clone https://github.com/MHSanaei/3x-ui.git\n   cd 3x-ui\n   ```\n\n3. Inicia el Servicio\n\n   ```sh\n   docker compose up -d\n   ```\n\n   O tambien\n\n   ```sh\n   docker run -itd \\\n      -e XRAY_VMESS_AEAD_FORCED=false \\\n      -v $PWD/db/:/etc/x-ui/ \\\n      -v $PWD/cert/:/root/cert/ \\\n      --network=host \\\n      --restart=unless-stopped \\\n      --name 3x-ui \\\n      ghcr.io/mhsanaei/3x-ui:latest\n   ```\n\nactualizar a la última versión\n\n   ```sh\n    cd 3x-ui\n    docker compose down\n    docker compose pull 3x-ui\n    docker compose up -d\n   ```\n\neliminar 3x-ui de docker\n\n   ```sh\n    docker stop 3x-ui\n    docker rm 3x-ui\n    cd --\n    rm -r 3x-ui\n   ```\n\n</details>\n\n## Configuración de Nginx\n<details>\n  <summary>Haga clic aquí para configurar el proxy inverso</summary>\n\n#### Proxy inverso Nginx\n```nginx\nlocation / {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n\n#### Nginx sub-path\n- EAsegúrese de que la \"Ruta Raíz de la URL del Panel\" en la configuración del panel `/sub` es la misma.\n- El `url` en la configuración del panel debe terminar con `/`.   \n\n```nginx\nlocation /sub {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n</details>\n\n## SO Recomendados\n\n- Ubuntu 20.04+\n- Debian 11+\n- CentOS 8+\n- OpenEuler 22.03+\n- Fedora 36+\n- Arch Linux\n- Parch Linux\n- Manjaro\n- Armbian\n- AlmaLinux 8.0+\n- Rocky Linux 8+\n- Oracle Linux 8+\n- OpenSUSE Tubleweed\n- Amazon Linux 2023\n- Windows x64\n\n## Arquitecturas y Dispositivos Compatibles\n\n<details>\n  <summary>Haz clic para detalles de arquitecturas y dispositivos compatibles</summary>\n\nNuestra plataforma ofrece compatibilidad con una amplia gama de arquitecturas y dispositivos, garantizando flexibilidad en diversos entornos informáticos. A continuación se presentan las principales arquitecturas que admitimos:\n\n- **amd64**: Esta arquitectura predominante es la estándar para computadoras personales y servidores, y admite la mayoría de los sistemas operativos modernos sin problemas.\n\n- **x86 / i386**: Ampliamente adoptada en computadoras de escritorio y portátiles, esta arquitectura cuenta con un amplio soporte de numerosos sistemas operativos y aplicaciones, incluidos, entre otros, Windows, macOS y sistemas Linux.\n\n- **armv8 / arm64 / aarch64**: Diseñada para dispositivos móviles y embebidos contemporáneos, como teléfonos inteligentes y tabletas, esta arquitectura está ejemplificada por dispositivos como Raspberry Pi 4, Raspberry Pi 3, Raspberry Pi Zero 2/Zero 2 W, Orange Pi 3 LTS, entre otros.\n\n- **armv7 / arm / arm32**: Sirve como arquitectura para dispositivos móviles y embebidos más antiguos, y sigue siendo ampliamente utilizada en dispositivos como Orange Pi Zero LTS, Orange Pi PC Plus, Raspberry Pi 2, entre otros.\n\n- **armv6 / arm / arm32**: Orientada a dispositivos embebidos muy antiguos, esta arquitectura, aunque menos común, todavía se utiliza. Dispositivos como Raspberry Pi 1, Raspberry Pi Zero/Zero W, dependen de esta arquitectura.\n\n- **armv5 / arm / arm32**: Una arquitectura más antigua asociada principalmente con sistemas embebidos tempranos, es menos común hoy en día pero aún puede encontrarse en dispositivos heredados como versiones antiguas de Raspberry Pi y algunos teléfonos inteligentes más antiguos.\n</details>\n\n## Idiomas\n\n- English (inglés)  \n- Persian (persa)  \n- Traditional Chinese (chino tradicional)  \n- Simplified Chinese (chino simplificado)  \n- Japanese (japonés)  \n- Russian (ruso)  \n- Vietnamese (vietnamita)  \n- Spanish (español)  \n- Indonesian (indonesio)  \n- Ukrainian (ucraniano)  \n- Turkish (turco)  \n- Português (Brazil) (portugués (Brasil))  \n\n\n## Características\n\n- Monitoreo del Estado del Sistema\n- Búsqueda dentro de todas las reglas de entrada y clientes\n- Tema Oscuro/Claro\n- Soporta multiusuario y multiprotocolo\n- Soporta protocolos, incluyendo VMess, VLESS, Trojan, Shadowsocks, Dokodemo-door, Socks, HTTP, wireguard\n- Soporta Protocolos nativos XTLS, incluyendo RPRX-Direct, Visión, REALITY\n- Estadísticas de tráfico, límite de tráfico, límite de tiempo de vencimiento\n- Plantillas de configuración de Xray personalizables\n- Soporta acceso HTTPS al panel (dominio proporcionado por uno mismo + certificado SSL)\n- Soporta la solicitud y renovación automática de certificados SSL con un clic\n- Para elementos de configuración más avanzados, consulta el panel\n- Corrige rutas de API (la configuración del usuario se creará con la API)\n- Soporta cambiar las configuraciones por diferentes elementos proporcionados en el panel.\n- Soporta exportar/importar base de datos desde el panel\n\n\n## Configuración Predeterminada del Panel\n\n<details>\n  <summary>Haz clic para ver los detalles de la configuración predeterminada</summary>\n\n### Nombre de usuario, Contraseña, Puerto y Ruta Base Web\n\nSi elige no modificar estas configuraciones, se generarán aleatoriamente (esto no se aplica a Docker).\n\n**Configuraciones predeterminadas para Docker:**\n- **Nombre de usuario:** admin\n- **Contraseña:** admin\n- **Puerto:** 2053\n\n### Gestión de la Base de Datos:\n\n  Puedes realizar copias de seguridad y restauraciones de la base de datos directamente desde el panel.\n\n- **Ruta de la Base de Datos:**\n  - `/etc/x-ui/x-ui.db`\n\n### Ruta Base Web\n\n1. **Restablecer la Ruta Base Web:**\n   - Abre tu terminal.\n   - Ejecuta el comando `x-ui`.\n   - Selecciona la opción `Restablecer la Ruta Base Web`.\n\n2. **Generar o Personalizar la Ruta:**\n   - La ruta se generará aleatoriamente, o puedes ingresar una ruta personalizada.\n\n3. **Ver Configuración Actual:**\n   - Para ver tu configuración actual, utiliza el comando `x-ui settings` en el terminal o selecciona `Ver Configuración Actual` en `x-ui`.\n\n### Recomendación de Seguridad:\n- Para mayor seguridad, utiliza una palabra larga y aleatoria en la estructura de tu URL.\n\n**Ejemplos:**\n- `http://ip:port/*webbasepath*/panel`\n- `http://domain:port/*webbasepath*/panel`\n\n</details>\n\n## Configuración de WARP\n\n<details>\n  <summary>Haz clic para ver los detalles de la configuración de WARP</summary>\n\n#### Uso\n\n**Para versiones `v2.1.0` y posteriores:**\n\nWARP está integrado, no se requiere instalación adicional. Simplemente habilita la configuración necesaria en el panel.\n\n</details>\n\n## Límite de IP\n\n<details>\n  <summary>Haz clic para ver los detalles del límite de IP</summary>\n\n#### Uso\n\n**Nota:** El Límite de IP no funcionará correctamente cuando uses Túnel IP.\n\n- **Para versiones hasta `v1.6.1`:**\n  - El límite de IP está integrado en el panel.\n\n**Para versiones `v1.7.0` y posteriores:**\n\nPara habilitar la funcionalidad de límite de IP, necesitas instalar `fail2ban` y los archivos requeridos siguiendo estos pasos:\n\n1. Ejecuta el comando `x-ui` en el terminal, luego elige `Gestión de Límite de IP`.\n2. Verás las siguientes opciones:\n\n   - **Cambiar la Duración del Bloqueo:** Ajustar la duración de los bloqueos.\n   - **Desbloquear a Todos:** Levantar todos los bloqueos actuales.\n   - **Revisar los Registros:** Revisar los registros.\n   - **Estado de Fail2ban:** Verificar el estado de `fail2ban`.\n   - **Reiniciar Fail2ban:** Reiniciar el servicio `fail2ban`.\n   - **Desinstalar Fail2ban:** Desinstalar Fail2ban con la configuración.\n\n3. Agrega una ruta para el registro de acceso en el panel configurando `Xray Configs/log/Access log` a `./access.log`, luego guarda y reinicia Xray.\n\n- **Para versiones anteriores a `v2.1.3`:**\n  - Necesitas configurar manualmente la ruta del registro de acceso en tu configuración de Xray:\n\n    ```sh\n    \"log\": {\n      \"access\": \"./access.log\",\n      \"dnsLog\": false,\n      \"loglevel\": \"warning\"\n    },\n    ```\n\n- **Para versiones `v2.1.3` y posteriores:**\n  - Hay una opción para configurar `access.log` directamente desde el panel.\n\n</details>\n\n## Bot de Telegram\n\n<details>\n  <summary>Haz clic para más detalles del bot de Telegram</summary>\n\n#### Uso\n\nEl panel web admite tráfico diario, inicio de sesión en el panel, copia de seguridad de la base de datos, estado del sistema, información del cliente y otras notificaciones y funciones a través del Bot de Telegram. Para usar el bot, debes establecer los parámetros relacionados con el bot en el panel, que incluyen:\n\n- Token de Telegram\n- ID de chat de administrador(es)\n- Hora de Notificación (en sintaxis cron)\n- Notificación de Fecha de Caducidad\n- Notificación de Capacidad de Tráfico\n- Copia de seguridad de la base de datos\n- Notificación de Carga de CPU\n\n\n**Sintaxis de referencia:**\n\n- `30 \\* \\* \\* \\* \\*` - Notifica a los 30s de cada punto\n- `0 \\*/10 \\* \\* \\* \\*` - Notifica en el primer segundo de cada 10 minutos\n- `@hourly` - Notificación por hora\n- `@daily` - Notificación diaria (00:00 de la mañana)\n- `@weekly` - Notificación semanal\n- `@every 8h` - Notifica cada 8 horas\n\n### Funcionalidades del Bot de Telegram\n\n- Reporte periódico\n- Notificación de inicio de sesión\n- Notificación de umbral de CPU\n- Umbral de Notificación para Fecha de Caducidad y Tráfico para informar con anticipación\n- Soporte para menú de reporte de cliente si el nombre de usuario de Telegram del cliente se agrega a las configuraciones de usuario\n- Soporte para reporte de tráfico de Telegram buscado con UUID (VMESS/VLESS) o Contraseña (TROJAN) - anónimamente\n- Bot basado en menú\n- Buscar cliente por correo electrónico (solo administrador)\n- Ver todas las Entradas\n- Ver estado del servidor\n- Ver clientes agotados\n- Recibir copia de seguridad bajo demanda y en informes periódicos\n- Bot multilingüe\n\n### Configuración del Bot de Telegram\n\n- Inicia [Botfather](https://t.me/BotFather) en tu cuenta de Telegram:\n    ![Botfather](./media/botfather.png)\n\n- Crea un nuevo bot usando el comando /newbot: Te hará 2 preguntas, Un nombre y un nombre de usuario para tu bot. Ten en cuenta que el nombre de usuario debe terminar con la palabra \"bot\".\n    ![Create new bot](./media/newbot.png)\n\n- Inicia el bot que acabas de crear. Puedes encontrar el enlace a tu bot aquí.\n    ![token](./media/token.png)\n\n- Ingresa a tu panel y configura los ajustes del bot de Telegram como se muestra a continuación:\n![Panel Config](./media/panel-bot-config.png)\n\nIngresa el token de tu bot en el campo de entrada número 3.\nIngresa el ID de chat de usuario en el campo de entrada número 4. Las cuentas de Telegram con esta ID serán los administradores del bot. (Puedes ingresar más de uno, solo sepáralos con ,)\n\n- ¿Cómo obtener el ID de chat de Telegram? Usa este [bot](https://t.me/useridinfobot), Inicia el bot y te dará el ID de chat del usuario de Telegram.\n![User ID](./media/user-id.png)\n\n</details>\n\n## Rutas de API\n\n<details>\n  <summary>Haz clic para más detalles de las rutas de API</summary>\n\n#### Uso\n\n- [Documentación de API](https://www.postman.com/hsanaei/3x-ui/collection/q1l5l0u/3x-ui)\n- `/login` con `POST` datos de usuario: `{username: '', password: ''}` para iniciar sesión\n- `/panel/api/inbounds` base para las siguientes acciones:\n\n| Método | Ruta                               | Acción                                                    |\n| :----: | ---------------------------------- | --------------------------------------------------------- |\n| `GET`  | `\"/list\"`                          | Obtener todas los Entradas                                |\n| `GET`  | `\"/get/:id\"`                       | Obtener Entrada con inbound.id                            |\n| `GET`  | `\"/getClientTraffics/:email\"`      | Obtener Tráficos del Cliente con email                    |\n| `GET`  | `\"/createbackup\"`                  | El bot de Telegram envía copia de seguridad a los admins  |\n| `POST` | `\"/add\"`                           | Agregar Entrada                                           |\n| `POST` | `\"/del/:id\"`                       | Eliminar Entrada                                          |\n| `POST` | `\"/update/:id\"`                    | Actualizar Entrada                                        |\n| `POST` | `\"/clientIps/:email\"`              | Dirección IP del Cliente                                  |\n| `POST` | `\"/clearClientIps/:email\"`         | Borrar Dirección IP del Cliente                           |\n| `POST` | `\"/addClient\"`                     | Agregar Cliente a la Entrada                              |\n| `POST` | `\"/:id/delClient/:clientId\"`       | Eliminar Cliente por clientId\\*                           |\n| `POST` | `\"/updateClient/:clientId\"`        | Actualizar Cliente por clientId\\*                         |\n| `POST` | `\"/:id/resetClientTraffic/:email\"` | Restablecer Tráfico del Cliente                           |\n| `POST` | `\"/resetAllTraffics\"`              | Restablecer tráfico de todos las Entradas                 |\n| `POST` | `\"/resetAllClientTraffics/:id\"`    | Restablecer tráfico de todos los clientes en una Entrada  |\n| `POST` | `\"/delDepletedClients/:id\"`        | Eliminar clientes agotados de la entrada (-1: todos)      |\n| `POST` | `\"/onlines\"`                       | Obtener usuarios en línea (lista de correos electrónicos) |\n\n\\*- El campo `clientId` debe llenarse por:\n\n- `client.id` para VMESS y VLESS\n- `client.password` para TROJAN\n- `client.email` para Shadowsocks\n\n- [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://app.getpostman.com/run-collection/5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5%26entityType%3Dcollection%26workspaceId%3Dd64f609f-485a-4951-9b8f-876b3f917124)\n</details>\n\n## Variables de Entorno\n\n<details>\n  <summary>Haz clic para más detalles de las variables de entorno</summary>\n\n#### Uso\n\n| Variable       |                      Tipo                      | Predeterminado |\n| -------------- | :--------------------------------------------: | :------------- |\n| XUI_LOG_LEVEL  | `\"debug\"` \\| `\"info\"` \\| `\"warn\"` \\| `\"error\"` | `\"info\"`       |\n| XUI_DEBUG      |                   `boolean`                    | `false`        |\n| XUI_BIN_FOLDER |                    `string`                    | `\"bin\"`        |\n| XUI_DB_FOLDER  |                    `string`                    | `\"/etc/x-ui\"`  |\n| XUI_LOG_FOLDER |                    `string`                    | `\"/var/log\"`   |\n\nEjemplo:\n\n```sh\nXUI_BIN_FOLDER=\"bin\" XUI_DB_FOLDER=\"/etc/x-ui\" go build main.go\n```\n\n</details>\n\n## Vista previa\n\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/01-overview-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/01-overview-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/02-inbounds-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/02-inbounds-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/03-add-inbound-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/03-add-inbound-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/04-add-client-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/04-add-client-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/05-settings-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/05-settings-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/06-configs-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/06-configs-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/07-bot-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/07-bot-light.png\">\n</picture>\n\n## Un agradecimiento especial a\n\n- [alireza0](https://github.com/alireza0/)\n\n## Reconocimientos\n\n- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (Licencia: **GPL-3.0**): _Reglas de enrutamiento mejoradas de v2ray/xray y v2ray/xray-clients con dominios iraníes integrados y un enfoque en seguridad y bloqueo de anuncios._\n- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _Este repositorio contiene reglas de enrutamiento de V2Ray actualizadas automáticamente basadas en datos de dominios y direcciones bloqueados en Rusia._\n\n## Estrellas a lo largo del tiempo\n\n[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.080078125,
          "content": "[English](/README.md) | [中文](/README.zh_CN.md) | [Español](/README.es_ES.md) | [Русский](/README.ru_RU.md)\n\n<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/3x-ui-dark.png\">\n    <img alt=\"3x-ui\" src=\"./media/3x-ui-light.png\">\n  </picture>\n</p>\n\n**An Advanced Web Panel • Built on Xray Core**\n\n[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg)](https://github.com/MHSanaei/3x-ui/releases)\n[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg)](#)\n[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg)](#)\n[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg)](#)\n[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true)](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n> **Disclaimer:** This project is only for personal learning and communication, please do not use it for illegal purposes, please do not use it in a production environment\n\n**If this project is helpful to you, you may wish to give it a**:star2:\n\n<p align=\"left\">\n  <a href=\"https://buymeacoffee.com/mhsanaei\" target=\"_blank\">\n    <img src=\"./media/buymeacoffe.png\" alt=\"Image\">\n  </a>\n</p>\n\n- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`\n- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`\n- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`\n\n## Install & Upgrade\n\n```\nbash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)\n```\n\n## Install legacy Version (we don't recommend)\n\nTo install your desired version, use following installation command. e.g., ver `v1.7.9`:\n\n```\nVERSION=v1.7.9 && bash <(curl -Ls \"https://raw.githubusercontent.com/mhsanaei/3x-ui/$VERSION/install.sh\") $VERSION\n```\n\n## SSL Certificate\n\n<details>\n  <summary>Click for SSL Certificate details</summary>\n\n### ACME\n\nTo manage SSL certificates using ACME:\n\n1. Ensure your domain is correctly resolved to the server.\n2. Run the `x-ui` command in the terminal, then choose `SSL Certificate Management`.\n3. You will be presented with the following options:\n\n   - **Get SSL:** Obtain SSL certificates.\n   - **Revoke:** Revoke existing SSL certificates.\n   - **Force Renew:** Force renewal of SSL certificates.\n   - **Show Existing Domains:** Display all domain certificates available on the server.  \n   - **Set Certificate Paths for the Panel:** Specify the certificate for your domain to be used by the panel. \n\n### Certbot\n\nTo install and use Certbot:\n\n```sh\napt-get install certbot -y\ncertbot certonly --standalone --agree-tos --register-unsafely-without-email -d yourdomain.com\ncertbot renew --dry-run\n```\n\n### Cloudflare\n\nThe management script includes a built-in SSL certificate application for Cloudflare. To use this script to apply for a certificate, you need the following:\n\n- Cloudflare registered email\n- Cloudflare Global API Key\n- The domain name must be resolved to the current server through Cloudflare\n\n**How to get the Cloudflare Global API Key:**\n\n1. Run the `x-ui` command in the terminal, then choose `Cloudflare SSL Certificate`.\n2. Visit the link: [Cloudflare API Tokens](https://dash.cloudflare.com/profile/api-tokens).\n3. Click on \"View Global API Key\" (see the screenshot below):\n   ![](media/APIKey1.PNG)\n4. You may need to re-authenticate your account. After that, the API Key will be shown (see the screenshot below):\n   ![](media/APIKey2.png)\n\nWhen using, just enter your `domain name`, `email`, and `API KEY`. The diagram is as follows:\n   ![](media/DetailEnter.png)\n\n\n</details>\n\n## Manual Install & Upgrade\n\n<details>\n  <summary>Click for manual install details</summary>\n\n#### Usage\n\n1. To download the latest version of the compressed package directly to your server, run the following command:\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  s390x) echo 's390x' ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\n\nwget https://github.com/MHSanaei/3x-ui/releases/latest/download/x-ui-linux-${XUI_ARCH}.tar.gz\n```\n\n2. Once the compressed package is downloaded, execute the following commands to install or upgrade x-ui:\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  s390x) echo 's390x' ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\ncd /root/\nrm -rf x-ui/ /usr/local/x-ui/ /usr/bin/x-ui\ntar zxvf x-ui-linux-${XUI_ARCH}.tar.gz\nchmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh\ncp x-ui/x-ui.sh /usr/bin/x-ui\ncp -f x-ui/x-ui.service /etc/systemd/system/\nmv x-ui/ /usr/local/\nsystemctl daemon-reload\nsystemctl enable x-ui\nsystemctl restart x-ui\n```\n\n</details>\n\n## Install with Docker\n\n<details>\n  <summary>Click for Docker details</summary>\n\n#### Usage\n\n1. **Install Docker:**\n\n   ```sh\n   bash <(curl -sSL https://get.docker.com)\n   ```\n\n2. **Clone the Project Repository:**\n\n   ```sh\n   git clone https://github.com/MHSanaei/3x-ui.git\n   cd 3x-ui\n   ```\n\n3. **Start the Service:**\n\n   ```sh\n   docker compose up -d\n   ```\n\n  Add ```--pull always``` flag to make docker automatically recreate container if a newer image is pulled. See https://docs.docker.com/reference/cli/docker/container/run/#pull for more info.\n\n   **OR**\n\n   ```sh\n   docker run -itd \\\n      -e XRAY_VMESS_AEAD_FORCED=false \\\n      -v $PWD/db/:/etc/x-ui/ \\\n      -v $PWD/cert/:/root/cert/ \\\n      --network=host \\\n      --restart=unless-stopped \\\n      --name 3x-ui \\\n      ghcr.io/mhsanaei/3x-ui:latest\n   ```\n\n4. **Update to the Latest Version:**\n\n   ```sh\n   cd 3x-ui\n   docker compose down\n   docker compose pull 3x-ui\n   docker compose up -d\n   ```\n\n5. **Remove 3x-ui from Docker:**\n\n   ```sh\n   docker stop 3x-ui\n   docker rm 3x-ui\n   cd --\n   rm -r 3x-ui\n   ```\n\n</details>\n\n## Nginx Settings\n<details>\n  <summary>Click for Reverse Proxy Configuration</summary>\n\n#### Nginx Reverse Proxy\n```nginx\nlocation / {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n\n#### Nginx sub-path\n- Ensure that the \"URI Path\" in the `/sub` panel settings is the same.\n- The `url` in the panel settings needs to end with `/`.   \n\n```nginx\nlocation /sub {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n</details>\n\n## Recommended OS\n\n- Ubuntu 20.04+\n- Debian 11+\n- CentOS 8+\n- OpenEuler 22.03+\n- Fedora 36+\n- Arch Linux\n- Parch Linux\n- Manjaro\n- Armbian\n- AlmaLinux 8.0+\n- Rocky Linux 8+\n- Oracle Linux 8+\n- OpenSUSE Tubleweed\n- Amazon Linux 2023\n- Windows x64\n\n## Supported Architectures and Devices\n\n<details>\n  <summary>Click for Supported Architectures and devices details</summary>\n\nOur platform offers compatibility with a diverse range of architectures and devices, ensuring flexibility across various computing environments. The following are key architectures that we support:\n\n- **amd64**: This prevalent architecture is the standard for personal computers and servers, accommodating most modern operating systems seamlessly.\n\n- **x86 / i386**: Widely adopted in desktop and laptop computers, this architecture enjoys broad support from numerous operating systems and applications, including but not limited to Windows, macOS, and Linux systems.\n\n- **armv8 / arm64 / aarch64**: Tailored for contemporary mobile and embedded devices, such as smartphones and tablets, this architecture is exemplified by devices like Raspberry Pi 4, Raspberry Pi 3, Raspberry Pi Zero 2/Zero 2 W, Orange Pi 3 LTS, and more.\n\n- **armv7 / arm / arm32**: Serving as the architecture for older mobile and embedded devices, it remains widely utilized in devices like Orange Pi Zero LTS, Orange Pi PC Plus, Raspberry Pi 2, among others.\n\n- **armv6 / arm / arm32**: Geared towards very old embedded devices, this architecture, while less prevalent, is still in use. Devices such as Raspberry Pi 1, Raspberry Pi Zero/Zero W, rely on this architecture.\n\n- **armv5 / arm / arm32**: An older architecture primarily associated with early embedded systems, it is less common today but may still be found in legacy devices like early Raspberry Pi versions and some older smartphones.\n\n- **s390x**: This architecture is commonly used in IBM mainframe computers and offers high performance and reliability for enterprise workloads.\n</details>\n\n## Languages\n\n- English\n- Persian\n- Traditional Chinese\n- Simplified Chinese\n- Japanese\n- Russian\n- Vietnamese\n- Spanish\n- Indonesian\n- Ukrainian\n- Turkish\n- Português (Brazil)\n\n\n## Features\n\n- System Status Monitoring\n- Search within all inbounds and clients\n- Dark/Light theme\n- Supports multi-user and multi-protocol\n- Supports protocols, including VMESS, VLESS, Trojan, Shadowsocks, Dokodemo-door, Socks, HTTP, wireguard\n- Supports XTLS native Protocols, including RPRX-Direct, Vision, REALITY\n- Traffic statistics, traffic limit, expiration time limit\n- Customizable Xray configuration templates\n- Supports HTTPS access panel (self-provided domain name + SSL certificate)\n- Supports One-Click SSL certificate application and automatic renewal\n- For more advanced configuration items, please refer to the panel\n- Fixes API routes (user setting will be created with API)\n- Supports changing configs by different items provided in the panel.\n- Supports export/import database from the panel\n\n\n## Default Panel Settings\n\n<details>\n  <summary>Click for default settings details</summary>\n\n### Username, Password, Port, and Web Base Path\n\nIf you choose not to modify these settings, they will be generated randomly (this does not apply to Docker).\n\n**Default Settings for Docker:**\n- **Username:** admin\n- **Password:** admin\n- **Port:** 2053\n\n### Database Management:\n\n  You can conveniently perform database Backups and Restores directly from the panel.\n\n- **Database Path:**\n  - `/etc/x-ui/x-ui.db`\n\n\n### Web Base Path\n\n1. **Reset Web Base Path:**\n   - Open your terminal.\n   - Run the `x-ui` command.\n   - Select the option to `Reset Web Base Path`.\n\n2. **Generate or Customize Path:**\n   - The path will be randomly generated, or you can enter a custom path.\n\n3. **View Current Settings:**\n   - To view your current settings, use the `x-ui settings` command in the terminal or `View Current Settings` in `x-ui`\n\n### Security Recommendation:\n- For enhanced security, use a long, random word in your URL structure.\n\n**Examples:**\n- `http://ip:port/*webbasepath*/panel`\n- `http://domain:port/*webbasepath*/panel`\n\n</details>\n\n## WARP Configuration\n\n<details>\n  <summary>Click for WARP configuration details</summary>\n\n#### Usage\n\n**For versions `v2.1.0` and later:**\n\nWARP is built-in, and no additional installation is required. Simply turn on the necessary configuration in the panel.\n\n</details>\n\n## IP Limit\n\n<details>\n  <summary>Click for IP limit details</summary>\n\n#### Usage\n\n**Note:** IP Limit won't work correctly when using IP Tunnel.\n\n- **For versions up to `v1.6.1`:**\n  - The IP limit is built-in to the panel\n\n**For versions `v1.7.0` and newer:**\n\nTo enable the IP Limit functionality, you need to install `fail2ban` and its required files by following these steps:\n\n1. Run the `x-ui` command in the terminal, then choose `IP Limit Management`.\n2. You will see the following options:\n\n   - **Change Ban Duration:** Adjust the duration of bans.\n   - **Unban Everyone:** Lift all current bans.\n   - **Check Logs:** Review the logs.\n   - **Fail2ban Status:** Check the status of `fail2ban`.\n   - **Restart Fail2ban:** Restart the `fail2ban` service.\n   - **Uninstall Fail2ban:** Uninstall Fail2ban with configuration.\n\n3. Add a path for the access log on the panel by setting `Xray Configs/log/Access log` to `./access.log` then save and restart xray.\n\n- **For versions before `v2.1.3`:**\n  - You need to set the access log path manually in your Xray configuration:\n\n    ```sh\n    \"log\": {\n      \"access\": \"./access.log\",\n      \"dnsLog\": false,\n      \"loglevel\": \"warning\"\n    },\n    ```\n\n- **For versions `v2.1.3` and newer:**\n  - There is an option for configuring `access.log` directly from the panel.\n\n</details>\n\n## Telegram Bot\n\n<details>\n  <summary>Click for Telegram bot details</summary>\n\n#### Usage\n\nThe web panel supports daily traffic, panel login, database backup, system status, client info, and other notification and functions through the Telegram Bot. To use the bot, you need to set the bot-related parameters in the panel, including:\n\n- Telegram Token\n- Admin Chat ID(s)\n- Notification Time (in cron syntax)\n- Expiration Date Notification\n- Traffic Cap Notification\n- Database Backup\n- CPU Load Notification\n\n\n**Reference syntax:**\n\n- `30 \\* \\* \\* \\* \\*` - Notify at the 30s of each point\n- `0 \\*/10 \\* \\* \\* \\*` - Notify at the first second of each 10 minutes\n- `@hourly` - Hourly notification\n- `@daily` - Daily notification (00:00 in the morning)\n- `@weekly` - weekly notification\n- `@every 8h` - Notify every 8 hours\n\n### Telegram Bot Features\n\n- Report periodic\n- Login notification\n- CPU threshold notification\n- Threshold for Expiration time and Traffic to report in advance\n- Support client report menu if client's telegram username added to the user's configurations\n- Support telegram traffic report searched with UUID (VMESS/VLESS) or Password (TROJAN) - anonymously\n- Menu-based bot\n- Search client by email (only admin)\n- Check all inbounds\n- Check server status\n- Check depleted users\n- Receive backup by request and in periodic reports\n- Multi-language bot\n\n### Setting up Telegram bot\n\n- Start [Botfather](https://t.me/BotFather) in your Telegram account:\n    ![Botfather](./media/botfather.png)\n\n- Create a new Bot using /newbot command: It will ask you 2 questions, A name and a username for your bot. Note that the username has to end with the word \"bot\".\n    ![Create new bot](./media/newbot.png)\n\n- Start the bot you've just created. You can find the link to your bot here.\n    ![token](./media/token.png)\n\n- Enter your panel and config Telegram bot settings like below:\n![Panel Config](./media/panel-bot-config.png)\n\nEnter your bot token in input field number 3.\nEnter the user ID in input field number 4. The Telegram accounts with this id will be the bot admin. (You can enter more than one, Just separate them with ,)\n\n- How to get Telegram user ID? Use this [bot](https://t.me/useridinfobot), Start the bot and it will give you the Telegram user ID.\n![User ID](./media/user-id.png)\n\n</details>\n\n## API Routes\n\n<details>\n  <summary>Click for API routes details</summary>\n\n#### Usage\n\n- [API Documentation](https://www.postman.com/hsanaei/3x-ui/collection/q1l5l0u/3x-ui)\n- `/login` with `POST` user data: `{username: '', password: ''}` for login\n- `/panel/api/inbounds` base for following actions:\n\n| Method | Path                               | Action                                      |\n| :----: | ---------------------------------- | ------------------------------------------- |\n| `GET`  | `\"/list\"`                          | Get all inbounds                            |\n| `GET`  | `\"/get/:id\"`                       | Get inbound with inbound.id                 |\n| `GET`  | `\"/getClientTraffics/:email\"`      | Get Client Traffics with email              |\n| `GET`  | `\"/getClientTrafficsById/:id\"`     | Get client's traffic By ID |\n| `GET`  | `\"/createbackup\"`                  | Telegram bot sends backup to admins         |\n| `POST` | `\"/add\"`                           | Add inbound                                 |\n| `POST` | `\"/del/:id\"`                       | Delete Inbound                              |\n| `POST` | `\"/update/:id\"`                    | Update Inbound                              |\n| `POST` | `\"/clientIps/:email\"`              | Client Ip address                           |\n| `POST` | `\"/clearClientIps/:email\"`         | Clear Client Ip address                     |\n| `POST` | `\"/addClient\"`                     | Add Client to inbound                       |\n| `POST` | `\"/:id/delClient/:clientId\"`       | Delete Client by clientId\\*                 |\n| `POST` | `\"/updateClient/:clientId\"`        | Update Client by clientId\\*                 |\n| `POST` | `\"/:id/resetClientTraffic/:email\"` | Reset Client's Traffic                      |\n| `POST` | `\"/resetAllTraffics\"`              | Reset traffics of all inbounds              |\n| `POST` | `\"/resetAllClientTraffics/:id\"`    | Reset traffics of all clients in an inbound |\n| `POST` | `\"/delDepletedClients/:id\"`        | Delete inbound depleted clients (-1: all)   |\n| `POST` | `\"/onlines\"`                       | Get Online users ( list of emails )         |\n\n\\*- The field `clientId` should be filled by:\n\n- `client.id` for VMESS and VLESS\n- `client.password` for TROJAN\n- `client.email` for Shadowsocks\n\n- [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://app.getpostman.com/run-collection/5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5%26entityType%3Dcollection%26workspaceId%3Dd64f609f-485a-4951-9b8f-876b3f917124)\n</details>\n\n## Environment Variables\n\n<details>\n  <summary>Click for environment variables details</summary>\n\n#### Usage\n\n| Variable       |                      Type                      | Default       |\n| -------------- | :--------------------------------------------: | :------------ |\n| XUI_LOG_LEVEL  | `\"debug\"` \\| `\"info\"` \\| `\"warn\"` \\| `\"error\"` | `\"info\"`      |\n| XUI_DEBUG      |                   `boolean`                    | `false`       |\n| XUI_BIN_FOLDER |                    `string`                    | `\"bin\"`       |\n| XUI_DB_FOLDER  |                    `string`                    | `\"/etc/x-ui\"` |\n| XUI_LOG_FOLDER |                    `string`                    | `\"/var/log\"`  |\n\nExample:\n\n```sh\nXUI_BIN_FOLDER=\"bin\" XUI_DB_FOLDER=\"/etc/x-ui\" go build main.go\n```\n\n</details>\n\n## Preview\n\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/01-overview-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/01-overview-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/02-inbounds-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/02-inbounds-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/03-add-inbound-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/03-add-inbound-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/04-add-client-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/04-add-client-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/05-settings-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/05-settings-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/06-configs-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/06-configs-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/07-bot-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/07-bot-light.png\">\n</picture>\n\n## A Special Thanks to\n\n- [alireza0](https://github.com/alireza0/)\n\n## Acknowledgment\n\n- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (License: **GPL-3.0**): _Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking._\n- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _This repository contains automatically updated V2Ray routing rules based on data on blocked domains and addresses in Russia._\n\n## Stargazers over Time\n\n[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)"
        },
        {
          "name": "README.ru_RU.md",
          "type": "blob",
          "size": 29.365234375,
          "content": "[English](/README.md) | [中文](/README.zh_CN.md) | [Español](/README.es_ES.md) | [Русский](/README.ru_RU.md)\n\n<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/3x-ui-dark.png\">\n    <img alt=\"3x-ui\" src=\"./media/3x-ui-light.png\">\n  </picture>\n</p>\n\n**Продвинутая веб-панель • Построена на основе Xray Core**\n\n[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg)](https://github.com/MHSanaei/3x-ui/releases)\n[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg)](#)\n[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg)](#)\n[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg)](#)\n[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true)](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n> **Отказ от ответственности:** Этот проект предназначен только для личного обучения и общения. Пожалуйста, не используйте его в незаконных целях и не применяйте в производственной среде.\n\n**Если этот проект оказался полезным для вас, вы можете оценить его, поставив звёздочку** :star2:\n\n<p align=\"left\">\n  <a href=\"https://buymeacoffee.com/mhsanaei\" target=\"_blank\">\n    <img src=\"./media/buymeacoffe.png\" alt=\"Image\">\n  </a>\n</p>\n\n- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`\n- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`\n- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`\n\n## Установка и обновление\n\n```\nbash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)\n```\n\n## Установить старую версию (мы не рекомендуем)\n\nЧтобы установить желаемую версию, используйте следующую команду установки. Например, ver `v1.7.9`:\n\n```\nVERSION=v1.7.9 && <(curl -Ls \"https://raw.githubusercontent.com/mhsanaei/3x-ui/$VERSION/install.sh\") $VERSION\n```\n\n## SSL Сертификат\n\n<details>\n  <summary>Нажмите для получения информации об SSL сертификате</summary>\n\n### ACME\n\nДля управления SSL сертификатами с помощью ACME:\n\n1. Убедитесь, что ваш домен правильно настроен и указывает на сервер.\n2. Выполните команду `x-ui` в терминале, затем выберите `SSL Certificate Management`.\n3. Вам будут предложены следующие опции:\n\n   - **Get SSL:** Получить SSL сертификаты.\n   - **Revoke:** Отозвать существующие SSL сертификаты.\n   - **Force Renew:** Принудительно перевыпустить SSL сертификаты.\n   - **Show Existing Domains:** Отобразить все сертификаты доменов, доступные на сервере.  \n   - **Set Certificate Paths for the Panel:** Укажите сертификат для вашего домена, который будет использоваться панелью.\n\n### Certbot\n\nДля установки и использования Certbot:\n\n```sh\napt-get install certbot -y\ncertbot certonly --standalone --agree-tos --register-unsafely-without-email -d вашдомен.com\ncertbot renew --dry-run\n```\n\n### Cloudflare\n\nСкрипт управления включает встроенное приложение для получения SSL сертификата через Cloudflare. Чтобы использовать этот скрипт для запроса сертификата, вам потребуется следующее:\n\n- Email, зарегистрированный в Cloudflare\n- Глобальный API-ключ Cloudflare\n- Доменное имя должно указывать на текущий сервер через Cloudflare\n\n**Как получить глобальный API-ключ Cloudflare:**\n\n1. Выполните команду `x-ui` в терминале, затем выберите `Cloudflare SSL Certificate`.\n2. Перейдите по ссылке: [Cloudflare API Tokens](https://dash.cloudflare.com/profile/api-tokens).\n3. Нажмите на \"View Global API Key\" (см. скриншот ниже):\n   ![](media/APIKey1.PNG)\n4. Возможно, вам потребуется повторно пройти аутентификацию. После этого ключ API будет отображён (см. скриншот ниже):\n   ![](media/APIKey2.png)\n\nПри использовании просто введите ваше `доменное имя`, `email` и `API-ключ`. Схема приведена ниже:\n   ![](media/DetailEnter.png)\n\n</details>\n\n## Ручная установка и обновление\n\n<details>\n  <summary>Нажмите для получения информации о ручной установке</summary>\n\n#### Использование\n\n1. Чтобы скачать последнюю версию архива напрямую на ваш сервер, выполните следующую команду:\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  s390x) echo 's390x' ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\n\nwget https://github.com/MHSanaei/3x-ui/releases/latest/download/x-ui-linux-${XUI_ARCH}.tar.gz\n```\n\n2. После загрузки архива выполните следующие команды для установки или обновления x-ui:\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  s390x) echo 's390x' ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\ncd /root/\nrm -rf x-ui/ /usr/local/x-ui/ /usr/bin/x-ui\ntar zxvf x-ui-linux-${XUI_ARCH}.tar.gz\nchmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh\ncp x-ui/x-ui.sh /usr/bin/x-ui\ncp -f x-ui/x-ui.service /etc/systemd/system/\nmv x-ui/ /usr/local/\nsystemctl daemon-reload\nsystemctl enable x-ui\nsystemctl restart x-ui\n```\n\n</details>\n\n## Установка с помощью Docker\n\n<details>\n  <summary>Нажмите для получения информации о Docker</summary>\n\n#### Использование\n\n1. **Установите Docker:**\n\n   ```sh\n   bash <(curl -sSL https://get.docker.com)\n   ```\n\n2. **Склонируйте репозиторий проекта:**\n\n   ```sh\n   git clone https://github.com/MHSanaei/3x-ui.git\n   cd 3x-ui\n   ```\n\n3. **Запустите сервис:**\n\n   ```sh\n   docker compose up -d\n   ```\n\n  Добавьте параметр ```--pull always``` для автоматического обновления контейнера, когда публикуется новый образ. Подробности: https://docs.docker.com/reference/cli/docker/container/run/#pull\n\n   **ИЛИ**\n\n   ```sh\n   docker run -itd \\\n      -e XRAY_VMESS_AEAD_FORCED=false \\\n      -v $PWD/db/:/etc/x-ui/ \\\n      -v $PWD/cert/:/root/cert/ \\\n      --network=host \\\n      --restart=unless-stopped \\\n      --name 3x-ui \\\n      ghcr.io/mhsanaei/3x-ui:latest\n   ```\n\n4. **Обновление до последней версии:**\n\n   ```sh\n   cd 3x-ui\n   docker compose down\n   docker compose pull 3x-ui\n   docker compose up -d\n   ```\n\n5. **Удаление 3x-ui из Docker:**\n\n   ```sh\n   docker stop 3x-ui\n   docker rm 3x-ui\n   cd --\n   rm -r 3x-ui\n   ```\n\n</details>\n\n## Настройки Nginx\n<details>\n  <summary>Нажмите чтобы просмотреть конфигурацию обратного прокси-сервера</summary>\n\n#### Обратный прокси-сервер Nginx\n```nginx\nlocation / {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n\n#### Nginx sub-path\n- Убедитесь, что \"корневой путь URL адреса панели\" в настройках панели и `/sub` совпадают.\n- В настройках панели `url` должен заканчиваться на `/`.    \n\n```nginx\nlocation /sub {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n</details>\n\n## Рекомендуемые ОС\n\n- Ubuntu 20.04+\n- Debian 11+\n- CentOS 8+\n- OpenEuler 22.03+\n- Fedora 36+\n- Arch Linux\n- Parch Linux\n- Manjaro\n- Armbian\n- AlmaLinux 8.0+\n- Rocky Linux 8+\n- Oracle Linux 8+\n- OpenSUSE Tubleweed\n- Amazon Linux 2023\n- Windows x64\n\n## Поддерживаемые архитектуры и устройства\n\n<details>\n  <summary>Нажмите для получения информации о поддерживаемых архитектурах и устройствах</summary>\n\nНаша платформа поддерживает разнообразные архитектуры и устройства, обеспечивая гибкость в различных вычислительных средах. Вот основные архитектуры, которые мы поддерживаем:\n\n- **amd64**: Эта распространенная архитектура является стандартом для персональных компьютеров и серверов, обеспечивая беспроблемную работу большинства современных операционных систем.\n\n- **x86 / i386**: Широко используется в настольных и портативных компьютерах. Эта архитектура имеет широкую поддержку со стороны множества операционных систем и приложений, включая, но не ограничиваясь, Windows, macOS и Linux.\n\n- **armv8 / arm64 / aarch64**: Предназначена для современных мобильных и встроенных устройств, таких как смартфоны и планшеты. Эта архитектура представлена устройствами, такими как Raspberry Pi 4, Raspberry Pi 3, Raspberry Pi Zero 2/Zero 2 W, Orange Pi 3 LTS и другими.\n\n- **armv7 / arm / arm32**: Служит архитектурой для старых мобильных и встроенных устройств, оставаясь широко используемой в таких устройствах, как Orange Pi Zero LTS, Orange Pi PC Plus, Raspberry Pi 2 и других.\n\n- **armv6 / arm / arm32**: Ориентирована на очень старые встроенные устройства, эта архитектура, хотя и менее распространенная, всё ещё используется. Например, такие устройства, как Raspberry Pi 1, Raspberry Pi Zero/Zero W, полагаются на эту архитектуру.\n\n- **armv5 / arm / arm32**: Более старая архитектура, ассоциируемая с ранними встроенными системами, сегодня менее распространена, но всё ещё может быть найдена в устаревших устройствах, таких как ранние версии Raspberry Pi и некоторые старые смартфоны.\n\n- **s390x**: Эта архитектура обычно используется в мейнфреймах IBM и обеспечивает высокую производительность и надежность для корпоративных рабочих нагрузок.\n</details>\n\n## Языки\n\n- English (английский)  \n- Persian (персидский)  \n- Traditional Chinese (традиционный китайский)  \n- Simplified Chinese (упрощенный китайский)  \n- Japanese (японский)  \n- Russian (русский)  \n- Vietnamese (вьетнамский)  \n- Spanish (испанский)  \n- Indonesian (индонезийский)  \n- Ukrainian (украинский)  \n- Turkish (турецкий)  \n- Português (Brazil) (португальский (Бразилия))\n\n## Возможности\n\n- Мониторинг состояния системы\n- Поиск по всем входящим подключениям и клиентам\n- Тёмная/светлая тема\n- Поддержка нескольких пользователей и протоколов\n- Поддержка протоколов, включая VMESS, VLESS, Trojan, Shadowsocks, Dokodemo-door, Socks, HTTP, WireGuard\n- Поддержка протоколов XTLS, включая RPRX-Direct, Vision, REALITY\n- Статистика трафика, ограничение трафика, ограничение по времени истечения\n- Настраиваемые шаблоны конфигурации Xray\n- Поддержка HTTPS доступа к панели (ваше доменное имя + SSL сертификат)\n- Поддержка установки SSL-сертификата в один клик и автоматического перевыпуска\n- Для получения более продвинутых настроек обращайтесь к панели\n- Исправляет маршруты API (настройка пользователя будет создана через API)\n- Поддержка изменения конфигураций по различным элементам, предоставленным в панели\n- Поддержка экспорта/импорта базы данных из панели\n\n## Настройки панели по умолчанию\n\n<details>\n  <summary>Нажмите для получения информации о настройках по умолчанию</summary>\n\n### Имя пользователя, Пароль, Порт и Web Base Path\n\nЕсли вы не измените эти настройки, они будут сгенерированы случайным образом (это не относится к Docker).\n\n**Настройки по умолчанию для Docker:**\n- **Имя пользователя:** admin\n- **Пароль:** admin\n- **Порт:** 2053\n\n### Управление базой данных:\n\nВы можете удобно выполнять резервное копирование и восстановление базы данных прямо из панели.\n\n- **Путь к базе данных:**\n  - `/etc/x-ui/x-ui.db`\n\n### Webbasepath\n\n1. **Сбросить webbasepath:**\n   - Откройте терминал.\n   - Выполните команду `x-ui`.\n   - Выберите опцию `Reset Web Base Path`.\n\n2. **Генерация или настройка пути:**\n   - Путь будет сгенерирован случайным образом, или вы можете ввести собственный путь.\n\n3. **Просмотр текущих настроек:**\n   - Чтобы просмотреть текущие настройки, используйте команду `x-ui settings` в терминале или опцию `View Current Settings` в `x-ui`.\n\n### Рекомендации по безопасности:\n- Для повышения безопасности используйте длинное случайное слово в структуре вашего URL.\n\n**Примеры:**\n- `http://ip_адрес:порт/*webbasepath*/panel`\n- `http://домен:порт/*webbasepath*/panel`\n\n</details>\n\n## Настройка WARP\n\n<details>\n  <summary>Нажмите для получения информации о настройке WARP</summary>\n\n#### Использование\n\n**Для версий `v2.1.0` и новее:**\n\nWARP встроен, и дополнительная установка не требуется. Просто включите необходимую конфигурацию в панели.\n\n</details>\n\n## Ограничение IP\n\n<details>\n  <summary>Нажмите для получения информации об ограничении IP</summary>\n\n#### Использование\n\n**Примечание:** Ограничение IP не будет работать корректно при использовании IP Tunnel.\n\n- **Для версий до `v1.6.1`:**\n  - Ограничение IP встроено в панель.\n\n**Для версий `v1.7.0` и новее:**\n\nЧтобы включить функциональность ограничения IP, вам нужно установить `fail2ban` и его необходимые файлы, выполнив следующие шаги:\n\n1. Выполните команду `x-ui` в терминале, затем выберите `IP Limit Management`.\n2. Вам будут предложены следующие опции:\n\n   - **Change Ban Duration:** Отрегулировать длительность блокировок.\n   - **Unban Everyone:** Снять все текущие блокировки.\n   - **Check Logs:** Просмотреть логи.\n   - **Fail2ban Status:** Проверить статус `fail2ban`.\n   - **Restart Fail2ban:** Перезапустить службу `fail2ban`.\n   - **Uninstall Fail2ban:** Удалить Fail2ban с его конфигурацией.\n\n3. Добавьте путь к логам доступа в панели, установив `Xray Configs/log/Access log` в `./access.log`, затем сохраните и перезапустите xray.\n\n- **Для версий до `v2.1.3`:**\n  - Вам нужно вручную установить путь к логам доступа в вашей конфигурации Xray:\n\n    ```sh\n    \"log\": {\n      \"access\": \"./access.log\",\n      \"dnsLog\": false,\n      \"loglevel\": \"warning\"\n    },\n    ```\n\n- **Для версий `v2.1.3` и новее:**\n  - Есть возможность настройки `access.log` непосредственно из панели.\n\n</details>\n\n## Телеграм-бот\n\n<details>\n  <summary>Нажмите для получения информации о телеграм-боте</summary>\n\n#### Использование\n\nВеб-панель поддерживает уведомления и функции, такие как ежедневный трафик, вход в панель, резервное копирование базы данных, состояние системы, информация о клиентах и другие, через телеграм-бота. Чтобы использовать бота, вам нужно настроить параметры, связанные с ботом, в панели, включая:\n\n- Токен Telegram\n- ID чата админа(-ов)\n- Время уведомлений (в синтаксисе cron)\n- Уведомления о дате истечения\n- Уведомления о лимите трафика\n- Резервное копирование базы данных\n- Уведомления о загрузке CPU\n\n**Примеры синтаксиса:**\n\n- `30 * * * * *` - Уведомлять на 30-й секунде каждого часа\n- `0 */10 * * * *` - Уведомлять на первой секунде каждых 10 минут\n- `@hourly` - Ежечасное уведомление\n- `@daily` - Ежедневное уведомление (в 00:00)\n- `@weekly` - Еженедельное уведомление\n- `@every 8h` - Уведомлять каждые 8 часов\n\n### Возможности телеграм-бота\n\n- Периодические отчеты\n- Уведомления о входе\n- Уведомления о пороге загруженности процессора\n- Уведомления о времени истечения и трафике заранее\n- Поддерживает меню отчетов клиента, если имя пользователя телеграм клиента добавлено в конфигурации пользователя\n- Поддержка отчета о трафике через Telegram, поиск по UUID (VMESS/VLESS) или паролю (TROJAN) - анонимно\n- Бот, основанный на меню\n- Поиск клиента по email (только администратор)\n- Проверка всех входящих соединений\n- Проверка состояния сервера\n- Проверка истекших пользователей\n- Получение резервных копий по запросу и в периодических отчётах\n- Многоязычный бот\n\n### Настройка телеграм-бота\n\n- Запустите [Botfather](https://t.me/BotFather) в вашем аккаунте Telegram:\n    ![Botfather](./media/botfather.png)\n\n- Создайте нового бота с помощью команды /newbot: у вас спросят 2 вопроса: отображаемое имя и имя пользователя для вашего бота. Обратите внимание, что имя пользователя должно заканчиваться на слово \"bot\".\n    ![Создать нового бота](./media/newbot.png)\n\n- Запустите созданного бота. Ссылку на вашего бота можно найти здесь.\n    ![токен](./media/token.png)\n\n- Перейдите в панель и настройте параметры телеграм-бота следующим образом:\n![Настройки панели](./media/panel-bot-config.png)\n\nВведите токен вашего бота в поле ввода номер 3.\nВведите ID пользователя в поле ввода номер 4. Telegram-аккаунты с этим ID будут администраторами бота. (Вы можете ввести несколько ID, разделяя их запятой)\n\n- Как получить ID пользователя Telegram? Используйте этот [бот](https://t.me/useridinfobot). Запустите бота, и он отобразит ваш ID пользователя Telegram.\n![ID пользователя](./media/user-id.png)\n\n</details>\n\n## Маршруты API\n\n<details>\n  <summary>Нажмите для получения информации о маршрутах API</summary>\n\n#### Использование\n\n- [API документация](https://www.postman.com/hsanaei/3x-ui/collection/q1l5l0u/3x-ui)\n- `/login` с `POST`-данными: `{username: '', password: ''}` для входа\n- `/panel/api/inbounds` это базовый путь для следующих действий:\n\n| Метод  | Путь                               | Действие\n| :----: | -----------------------------------| -------------------------------------------\n| `GET`  | `\"/list\"`                          | Получить все входящие соединения\n| `GET`  | `\"/get/:id\"`                       | Получить входящее соединение с inbound.id\n| `GET`  | `\"/getClientTraffics/:email\"`      | Получить трафик клиента по email\n| `GET`  | `\"/getClientTrafficsById/:id\"`     | Получить трафик клиента по ID\n| `GET`  | `\"/createbackup\"`                  | Telegram-бот отправит резервную копию администраторам\n| `POST` | `\"/add\"`                           | Добавить входящее соединение\n| `POST` | `\"/del/:id\"`                       | Удалить входящее соединение\n| `POST` | `\"/update/:id\"`                    | Обновить входящее соединение\n| `POST` | `\"/clientIps/:email\"`              | IP-адрес клиента\n| `POST` | `\"/clearClientIps/:email\"`         | Очистить IP-адреса клиента\n| `POST` | `\"/addClient\"`                     | Добавить клиента к входящему соединению\n| `POST` | `\"/:id/delClient/:clientId\"`       | Удалить клиента по clientId\\*\n| `POST` | `\"/updateClient/:clientId\"`        | Обновить клиента по clientId\\*\n| `POST` | `\"/:id/resetClientTraffic/:email\"` | Сбросить трафик клиента\n| `POST` | `\"/resetAllTraffics\"`              | Сбросить трафик всех входящих соединений\n| `POST` | `\"/resetAllClientTraffics/:id\"`    | Сбросить трафик всех клиентов в входящем соединении\n| `POST` | `\"/delDepletedClients/:id\"`        | Удалить истекших клиентов в входящем соединении (-1: всех)\n| `POST` | `\"/onlines\"`                       | Получить пользователей, которые находятся онлайн (список email'ов)\n\n\\*- Поле `clientId` должно быть заполнено следующим образом:\n\n- `client.id` для VMESS и VLESS\n- `client.password` для TROJAN\n- `client.email` для Shadowsocks\n\n</details>\n\n\n- [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://app.getpostman.com/run-collection/5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5%26entityType%3Dcollection%26workspaceId%3Dd64f609f-485a-4951-9b8f-876b3f917124)\n</details>\n\n## Переменные среды\n\n<details>\n  <summary>Нажмите для получения информации о переменных среды</summary>\n\n#### Использование\n\n| Переменная       |                      Тип                       | Значение по умолчанию |\n| ---------------- | :------------------------------------------:   | :-------------------- |\n| XUI_LOG_LEVEL    | `\"debug\"` \\| `\"info\"` \\| `\"warn\"` \\| `\"error\"` | `\"info\"`             |\n| XUI_DEBUG        |                   `boolean`                    | `false`              |\n| XUI_BIN_FOLDER   |                    `string`                    | `\"bin\"`              |\n| XUI_DB_FOLDER    |                    `string`                    | `\"/etc/x-ui\"`        |\n| XUI_LOG_FOLDER   |                    `string`                    | `\"/var/log\"`         |\n\nПример:\n\n```sh\nXUI_BIN_FOLDER=\"bin\" XUI_DB_FOLDER=\"/etc/x-ui\" go build main.go\n```\n\n</details>\n\n## Предварительный Просмотр\n\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/01-overview-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/01-overview-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/02-inbounds-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/02-inbounds-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/03-add-inbound-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/03-add-inbound-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/04-add-client-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/04-add-client-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/05-settings-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/05-settings-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/06-configs-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/06-configs-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/07-bot-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/07-bot-light.png\">\n</picture>\n\n## Особая благодарность\n\n- [alireza0](https://github.com/alireza0/)\n\n## Благодарности\n\n- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (License: **GPL-3.0**): _Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking._\n- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _Этот репозиторий содержит автоматически обновляемые правила маршрутизации V2Ray на основе данных о заблокированных доменах и адресах в России._\n\n## Число звёзд со временем\n\n[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)"
        },
        {
          "name": "README.zh_CN.md",
          "type": "blob",
          "size": 18.7236328125,
          "content": "[English](/README.md) | [中文](/README.zh_CN.md) | [Español](/README.es_ES.md) | [Русский](/README.ru_RU.md)\n\n<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/3x-ui-dark.png\">\n    <img alt=\"3x-ui\" src=\"./media/3x-ui-light.png\">\n  </picture>\n</p>\n\n**一个更好的面板 • 基于Xray Core构建**\n\n[![](https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg)](https://github.com/MHSanaei/3x-ui/releases)\n[![](https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg)](#)\n[![GO Version](https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg)](#)\n[![Downloads](https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg)](#)\n[![License](https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true)](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n> **Disclaimer:** 此项目仅供个人学习交流，请不要用于非法目的，请不要在生产环境中使用。\n\n**如果此项目对你有用，请给一个**:star2:\n\n<p align=\"left\">\n  <a href=\"https://buymeacoffee.com/mhsanaei\" target=\"_blank\">\n    <img src=\"./media/buymeacoffe.png\" alt=\"Image\">\n  </a>\n</p>\n\n- USDT (TRC20): `TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC`\n- MATIC (polygon): `0x41C9548675D044c6Bfb425786C765bc37427256A`\n- LTC (Litecoin): `ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv`\n\n## 安装 & 升级\n\n```\nbash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)\n```\n\n## 安装旧版本 (我们不建议)\n\n要安装您想要的版本，请使用以下安装命令。例如，ver `v1.7.9`:\n\n```\nVERSION=v1.7.9 && <(curl -Ls \"https://raw.githubusercontent.com/mhsanaei/3x-ui/$VERSION/install.sh\") $VERSION\n```\n\n### SSL证书\n\n<details>\n  <summary>点击查看SSL证书详情</summary>\n\n### ACME\n\n使用ACME管理SSL证书：\n\n1. 确保您的域名正确解析到服务器。\n2. 在终端中运行 `x-ui` 命令，然后选择 `SSL证书管理`。\n3. 您将看到以下选项：\n\n   - **Get SSL:** 获取SSL证书。\n   - **Revoke:** 吊销现有的SSL证书。\n   - **Force Renew:** 强制更新SSL证书。\n   - **Show Existing Domains:** 显示服务器上所有可用的域证书。  \n   - **Set Certificate Paths for the Panel:** 指定用于面板的域证书。\n\n### Certbot\n\n安装并使用Certbot：\n\n```sh\napt-get install certbot -y\ncertbot certonly --standalone --agree-tos --register-unsafely-without-email -d yourdomain.com\ncertbot renew --dry-run\n```\n\n### Cloudflare\n\n管理脚本内置了Cloudflare的SSL证书申请。要使用此脚本申请证书，您需要以下信息：\n\n- Cloudflare注册的电子邮件\n- Cloudflare全局API密钥\n- 域名必须通过Cloudflare解析到当前服务器\n\n**如何获取Cloudflare全局API密钥：**\n\n1. 在终端中运行 `x-ui` 命令，然后选择 `Cloudflare SSL证书`。\n2. 访问链接：[Cloudflare API Tokens](https://dash.cloudflare.com/profile/api-tokens)。\n3. 点击“查看全局API密钥”（参见下图）：\n   ![](media/APIKey1.PNG)\n4. 您可能需要重新验证您的账户。之后将显示API密钥（参见下图）：\n   ![](media/APIKey2.png)\n\n使用时，只需输入您的 `域名`、`电子邮件` 和 `API密钥`。如下图所示：\n   ![](media/DetailEnter.png)\n\n</details>\n\n## 手动安装 & 升级\n\n<details>\n  <summary>点击查看 手动安装 & 升级</summary>\n\n#### 使用\n\n1. 若要将最新版本的压缩包直接下载到服务器，请运行以下命令：\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\n\nwget https://github.com/MHSanaei/3x-ui/releases/latest/download/x-ui-linux-${XUI_ARCH}.tar.gz\n```\n\n2. 下载压缩包后，执行以下命令安装或升级 x-ui：\n\n```sh\nARCH=$(uname -m)\ncase \"${ARCH}\" in\n  x86_64 | x64 | amd64) XUI_ARCH=\"amd64\" ;;\n  i*86 | x86) XUI_ARCH=\"386\" ;;\n  armv8* | armv8 | arm64 | aarch64) XUI_ARCH=\"arm64\" ;;\n  armv7* | armv7) XUI_ARCH=\"armv7\" ;;\n  armv6* | armv6) XUI_ARCH=\"armv6\" ;;\n  armv5* | armv5) XUI_ARCH=\"armv5\" ;;\n  *) XUI_ARCH=\"amd64\" ;;\nesac\n\ncd /root/\nrm -rf x-ui/ /usr/local/x-ui/ /usr/bin/x-ui\ntar zxvf x-ui-linux-${XUI_ARCH}.tar.gz\nchmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh\ncp x-ui/x-ui.sh /usr/bin/x-ui\ncp -f x-ui/x-ui.service /etc/systemd/system/\nmv x-ui/ /usr/local/\nsystemctl daemon-reload\nsystemctl enable x-ui\nsystemctl restart x-ui\n```\n\n</details>\n\n## 通过Docker安装\n\n<details>\n  <summary>点击查看 通过Docker安装</summary>\n\n#### 使用\n\n1. 安装Docker：\n\n   ```sh\n   bash <(curl -sSL https://get.docker.com)\n   ```\n\n2. 克隆仓库：\n\n   ```sh\n   git clone https://github.com/MHSanaei/3x-ui.git\n   cd 3x-ui\n   ```\n\n3. 运行服务：\n\n   ```sh\n   docker compose up -d\n   ```\n\n   或\n\n   ```sh\n   docker run -itd \\\n      -e XRAY_VMESS_AEAD_FORCED=false \\\n      -v $PWD/db/:/etc/x-ui/ \\\n      -v $PWD/cert/:/root/cert/ \\\n      --network=host \\\n      --restart=unless-stopped \\\n      --name 3x-ui \\\n      ghcr.io/mhsanaei/3x-ui:latest\n   ```\n\n更新至最新版本\n\n   ```sh\n    cd 3x-ui\n    docker compose down\n    docker compose pull 3x-ui\n    docker compose up -d\n   ```\n\n从Docker中删除3x-ui\n\n   ```sh\n    docker stop 3x-ui\n    docker rm 3x-ui\n    cd --\n    rm -r 3x-ui\n   ```\n\n</details>\n\n\n## Nginx 设置\n<details>\n  <summary>点击查看 反向代理配置</summary>\n\n#### Nginx反向代理\n```nginx\nlocation / {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n\n#### Nginx子路径\n- 确保 `/sub` 面板设置中的\"面板url根路径\"一致\n- 面板设置中的 `url` 需要以 `/` 结尾   \n\n```nginx\nlocation /sub {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header Range $http_range;\n    proxy_set_header If-Range $http_if_range; \n    proxy_redirect off;\n    proxy_pass http://127.0.0.1:2053;\n}\n```\n</details>\n\n## 建议使用的操作系统\n\n- Ubuntu 20.04+\n- Debian 11+\n- CentOS 8+\n- OpenEuler 22.03+\n- Fedora 36+\n- Arch Linux\n- Parch Linux\n- Manjaro\n- Armbian\n- AlmaLinux 8.0+\n- Rocky Linux 8+\n- Oracle Linux 8+\n- OpenSUSE Tubleweed\n- Amazon Linux 2023\n- Windows x64\n\n## 支持的架构和设备\n<details>\n  <summary>点击查看 支持的架构和设备</summary>\n\n我们的平台提供与各种架构和设备的兼容性，确保在各种计算环境中的灵活性。以下是我们支持的关键架构：\n\n- **amd64**: 这种流行的架构是个人计算机和服务器的标准，可以无缝地适应大多数现代操作系统。\n\n- **x86 / i386**: 这种架构在台式机和笔记本电脑中被广泛采用，得到了众多操作系统和应用程序的广泛支持，包括但不限于 Windows、macOS 和 Linux 系统。\n\n- **armv8 / arm64 / aarch64**: 这种架构专为智能手机和平板电脑等当代移动和嵌入式设备量身定制，以 Raspberry Pi 4、Raspberry Pi 3、Raspberry Pi Zero 2/Zero 2 W、Orange Pi 3 LTS 等设备为例。\n\n- **armv7 / arm / arm32**: 作为较旧的移动和嵌入式设备的架构，它仍然广泛用于Orange Pi Zero LTS、Orange Pi PC Plus、Raspberry Pi 2等设备。\n\n- **armv6 / arm / arm32**: 这种架构面向非常老旧的嵌入式设备，虽然不太普遍，但仍在使用中。Raspberry Pi 1、Raspberry Pi Zero/Zero W 等设备都依赖于这种架构。\n\n- **armv5 / arm / arm32**: 它是一种主要与早期嵌入式系统相关的旧架构，目前不太常见，但仍可能出现在早期 Raspberry Pi 版本和一些旧智能手机等传统设备中。\n</details>\n\n## Languages\n\n- English（英语）  \n- Persian（波斯语）  \n- Traditional Chinese（繁体中文）  \n- Simplified Chinese（简体中文）  \n- Japanese（日语）  \n- Russian（俄语）  \n- Vietnamese（越南语）  \n- Spanish（西班牙语）  \n- Indonesian（印尼语）  \n- Ukrainian（乌克兰语）  \n- Turkish（土耳其语）  \n- Português (Brazil)（葡萄牙语（巴西））\n\n\n## Features\n\n- 系统状态监控\n- 在所有入站和客户端中搜索\n- 深色/浅色主题\n- 支持多用户和多协议\n- 支持多种协议，包括 VMess、VLESS、Trojan、Shadowsocks、Dokodemo-door、Socks、HTTP、wireguard\n- 支持 XTLS 原生协议，包括 RPRX-Direct、Vision、REALITY\n- 流量统计、流量限制、过期时间限制\n- 可自定义的 Xray配置模板\n- 支持HTTPS访问面板（自建域名+SSL证书）\n- 支持一键式SSL证书申请和自动续费\n- 更多高级配置项目请参考面板\n- 修复了 API 路由（用户设置将使用 API 创建）\n- 支持通过面板中提供的不同项目更改配置。\n- 支持从面板导出/导入数据库\n\n\n## 默认面板设置\n\n<details>\n  <summary>点击查看默认设置详情</summary>\n\n### 用户名、密码、端口和 Web Base Path\n\n如果您选择不修改这些设置，它们将随机生成（不适用于 Docker）。\n\n**Docker 的默认设置：**\n- **用户名：** admin\n- **密码：** admin\n- **端口：** 2053\n\n### 数据库管理：\n\n  您可以直接在面板中方便地进行数据库备份和还原。\n\n- **数据库路径:**\n  - `/etc/x-ui/x-ui.db`\n\n### Web 基础路径\n\n1. **重置 Web 基础路径:**\n   - 打开终端。\n   - 运行 `x-ui` 命令。\n   - 选择 `重置 Web 基础路径` 选项。\n\n2. **生成或自定义路径:**\n   - 路径将会随机生成，或者您可以输入自定义路径。\n\n3. **查看当前设置:**\n   - 要查看当前设置，请在终端中使用 `x-ui settings` 命令，或在 `x-ui` 面板中点击 `查看当前设置`。\n\n### 安全建议：\n- 为了提高安全性，建议在URL结构中使用一个长的随机词。\n\n**示例：**\n- `http://ip:port/*webbasepath*/panel`\n- `http://domain:port/*webbasepath*/panel`\n\n</details>\n\n## WARP 配置\n\n<details>\n  <summary>点击查看 WARP 配置详情</summary>\n\n#### 使用方法\n\n**对于 `v2.1.0` 及之后的版本：**\n\nWARP 已内置，无需额外安装。只需在面板中开启相关配置即可。\n\n</details>\n\n## IP 限制\n\n<details>\n  <summary>点击查看 IP 限制详情</summary>\n\n#### 使用方法\n\n**注意:** 当使用 IP 隧道时，IP 限制将无法正常工作。\n\n- **对于 `v1.6.1` 及之前的版本：**\n  - IP 限制功能已内置于面板中。\n\n**对于 `v1.7.0` 及更新的版本：**\n\n要启用 IP 限制功能，您需要安装 `fail2ban` 及其所需的文件，步骤如下：\n\n1. 在终端中运行 `x-ui` 命令，然后选择 `IP 限制管理`。\n2. 您将看到以下选项：\n\n   - **更改封禁时长:** 调整封禁时长。\n   - **解除所有封禁:** 解除当前的所有封禁。\n   - **查看日志:** 查看日志。\n   - **Fail2ban 状态:** 检查 `fail2ban` 的状态。\n   - **重启 Fail2ban:** 重启 `fail2ban` 服务。\n   - **卸载 Fail2ban:** 卸载带有配置的 Fail2ban。\n\n3. 在面板中通过设置 `Xray 配置/log/访问日志` 为 `./access.log` 添加访问日志路径，然后保存并重启 Xray。\n\n- **对于 `v2.1.3` 之前的版本：**\n  - 您需要在 Xray 配置中手动设置访问日志路径：\n\n    ```sh\n    \"log\": {\n      \"access\": \"./access.log\",\n      \"dnsLog\": false,\n      \"loglevel\": \"warning\"\n    },\n    ```\n\n- **对于 `v2.1.3` 及之后的版本：**\n  - 面板中直接提供了配置 `access.log` 的选项。\n\n</details>\n\n## Telegram 机器人\n\n<details>\n  <summary>点击查看 Telegram 机器人</summary>\n\n#### 使用\n\nWeb 面板通过 Telegram Bot 支持每日流量、面板登录、数据库备份、系统状态、客户端信息等通知和功能。要使用机器人，您需要在面板中设置机器人相关参数，包括：\n\n- 电报令牌\n- 管理员聊天 ID\n- 通知时间（cron 语法）\n- 到期日期通知\n- 流量上限通知\n- 数据库备份\n- CPU 负载通知\n\n\n**参考：**\n\n- `30 \\* \\* \\* \\* \\*` - 在每个点的 30 秒处通知\n- `0 \\*/10 \\* \\* \\* \\*` - 每 10 分钟的第一秒通知\n- `@hourly` - 每小时通知\n- `@daily` - 每天通知 (00:00)\n- `@weekly` - 每周通知\n- `@every 8h` - 每8小时通知\n\n### Telegram Bot 功能\n\n- 定期报告\n- 登录通知\n- CPU 阈值通知\n- 提前报告的过期时间和流量阈值\n- 如果将客户的电报用户名添加到用户的配置中，则支持客户端报告菜单\n- 支持使用UUID（VMESS/VLESS）或密码（TROJAN）搜索报文流量报告 - 匿名\n- 基于菜单的机器人\n- 通过电子邮件搜索客户端（仅限管理员）\n- 检查所有入库\n- 检查服务器状态\n- 检查耗尽的用户\n- 根据请求和定期报告接收备份\n- 多语言机器人\n\n### 注册 Telegram bot\n\n- 与 [Botfather](https://t.me/BotFather) 对话：\n    ![Botfather](./media/botfather.png)\n\n- 使用 /newbot 创建新机器人：你需要提供机器人名称以及用户名，注意名称中末尾要包含“bot”\n    ![创建机器人](./media/newbot.png)\n\n- 启动您刚刚创建的机器人。可以在此处找到机器人的链接。\n    ![令牌](./media/token.png)\n\n- 输入您的面板并配置 Telegram 机器人设置，如下所示：\n    ![面板设置](./media/panel-bot-config.png)\n\n在输入字段编号 3 中输入机器人令牌。\n在输入字段编号 4 中输入用户 ID。具有此 id 的 Telegram 帐户将是机器人管理员。 （您可以输入多个，只需将它们用“ ，”分开即可）\n\n- 如何获取TG ID? 使用 [bot](https://t.me/useridinfobot)， 启动机器人，它会给你 Telegram 用户 ID。\n![用户 ID](./media/user-id.png)\n\n</details>\n\n## API 路由\n\n<details>\n  <summary>点击查看 API 路由</summary>\n\n#### 使用\n\n- [API 文档](https://www.postman.com/hsanaei/3x-ui/collection/q1l5l0u/3x-ui)\n- `/login` 使用 `POST` 用户名称 & 密码： `{username: '', password: ''}` 登录\n- `/panel/api/inbounds` 以下操作的基础：\n\n|  方法  | 路径                               | 操作                              |\n| :----: | ---------------------------------- | --------------------------------- |\n| `GET`  | `\"/list\"`                          | 获取所有入站                      |\n| `GET`  | `\"/get/:id\"`                       | 获取所有入站以及inbound.id        |\n| `GET`  | `\"/getClientTraffics/:email\"`      | 通过电子邮件获取客户端流量        |\n| `GET`  | `\"/createbackup\"`                  | Telegram 机器人向管理员发送备份   |\n| `POST` | `\"/add\"`                           | 添加入站                          |\n| `POST` | `\"/del/:id\"`                       | 删除入站                          |\n| `POST` | `\"/update/:id\"`                    | 更新入站                          |\n| `POST` | `\"/clientIps/:email\"`              | 客户端 IP 地址                    |\n| `POST` | `\"/clearClientIps/:email\"`         | 清除客户端 IP 地址                |\n| `POST` | `\"/addClient\"`                     | 将客户端添加到入站                |\n| `POST` | `\"/:id/delClient/:clientId\"`       | 通过 clientId\\* 删除客户端        |\n| `POST` | `\"/updateClient/:clientId\"`        | 通过 clientId\\* 更新客户端        |\n| `POST` | `\"/:id/resetClientTraffic/:email\"` | 重置客户端的流量                  |\n| `POST` | `\"/resetAllTraffics\"`              | 重置所有入站的流量                |\n| `POST` | `\"/resetAllClientTraffics/:id\"`    | 重置入站中所有客户端的流量        |\n| `POST` | `\"/delDepletedClients/:id\"`        | 删除入站耗尽的客户端 （-1： all） |\n| `POST` | `\"/onlines\"`                       | 获取在线用户 （ 电子邮件列表 ）   |\n\n\\*- `clientId` 项应该使用下列数据\n\n- `client.id`  VMESS and VLESS\n- `client.password`  TROJAN\n- `client.email`  Shadowsocks\n\n- [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://app.getpostman.com/run-collection/5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D5146551-dda3cab3-0e33-485f-96f9-d4262f437ac5%26entityType%3Dcollection%26workspaceId%3Dd64f609f-485a-4951-9b8f-876b3f917124)\n</details>\n\n## 环境变量\n\n<details>\n  <summary>点击查看 环境变量</summary>\n\n#### Usage\n\n| 变量           |                      Type                      | 默认          |\n| -------------- | :--------------------------------------------: | :------------ |\n| XUI_LOG_LEVEL  | `\"debug\"` \\| `\"info\"` \\| `\"warn\"` \\| `\"error\"` | `\"info\"`      |\n| XUI_DEBUG      |                   `boolean`                    | `false`       |\n| XUI_BIN_FOLDER |                    `string`                    | `\"bin\"`       |\n| XUI_DB_FOLDER  |                    `string`                    | `\"/etc/x-ui\"` |\n| XUI_LOG_FOLDER |                    `string`                    | `\"/var/log\"`  |\n\n例子：\n\n```sh\nXUI_BIN_FOLDER=\"bin\" XUI_DB_FOLDER=\"/etc/x-ui\" go build main.go\n```\n\n</details>\n\n## 预览\n\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/01-overview-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/01-overview-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/02-inbounds-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/02-inbounds-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/03-add-inbound-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/03-add-inbound-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/04-add-client-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/04-add-client-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/05-settings-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/05-settings-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/06-configs-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/06-configs-light.png\">\n</picture>\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./media/07-bot-dark.png\">\n  <img alt=\"3x-ui\" src=\"./media/07-bot-light.png\">\n</picture>\n\n## 特别感谢\n\n- [alireza0](https://github.com/alireza0/)\n\n## 致谢\n\n- [Iran v2ray rules](https://github.com/chocolate4u/Iran-v2ray-rules) (License: **GPL-3.0**): _Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking._\n- [Russia v2ray rules](https://github.com/runetfreedom/russia-v2ray-rules-dat) (License: **GPL-3.0**): _This repository contains automatically updated V2Ray routing rules based on data on blocked domains and addresses in Russia._\n\n## Star趋势\n\n[![Stargazers over time](https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive)](https://starchart.cc/MHSanaei/3x-ui)"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.3154296875,
          "content": "---\nversion: \"3\"\n\nservices:\n  3x-ui:\n    image: ghcr.io/mhsanaei/3x-ui:latest\n    container_name: 3x-ui\n    hostname: yourhostname\n    volumes:\n      - $PWD/db/:/etc/x-ui/\n      - $PWD/cert/:/root/cert/\n    environment:\n      XRAY_VMESS_AEAD_FORCED: \"false\"\n    tty: true\n    network_mode: host\n    restart: unless-stopped\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.6416015625,
          "content": "module x-ui\n\ngo 1.23.4\n\nrequire (\n\tgithub.com/gin-contrib/gzip v1.1.0\n\tgithub.com/gin-contrib/sessions v1.0.2\n\tgithub.com/gin-gonic/gin v1.10.0\n\tgithub.com/goccy/go-json v0.10.4\n\tgithub.com/mymmrac/telego v0.31.5\n\tgithub.com/nicksnyder/go-i18n/v2 v2.4.1\n\tgithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7\n\tgithub.com/pelletier/go-toml/v2 v2.2.3\n\tgithub.com/robfig/cron/v3 v3.0.1\n\tgithub.com/shirou/gopsutil/v4 v4.24.12\n\tgithub.com/valyala/fasthttp v1.58.0\n\tgithub.com/xtls/xray-core v1.8.25-0.20250101120305-e80ca67feed9\n\tgo.uber.org/atomic v1.11.0\n\tgolang.org/x/text v0.21.0\n\tgoogle.golang.org/grpc v1.69.2\n\tgorm.io/driver/sqlite v1.5.7\n\tgorm.io/gorm v1.25.12\n)\n\nrequire (\n\tgithub.com/andybalholm/brotli v1.1.1 // indirect\n\tgithub.com/bytedance/sonic v1.12.6 // indirect\n\tgithub.com/bytedance/sonic/loader v0.2.1 // indirect\n\tgithub.com/cloudflare/circl v1.5.0 // indirect\n\tgithub.com/cloudwego/base64x v0.1.4 // indirect\n\tgithub.com/cloudwego/iasm v0.2.0 // indirect\n\tgithub.com/dgryski/go-metro v0.0.0-20211217172704-adc40b04c140 // indirect\n\tgithub.com/ebitengine/purego v0.8.1 // indirect\n\tgithub.com/fasthttp/router v1.5.3 // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.7 // indirect\n\tgithub.com/gin-contrib/sse v1.0.0 // indirect\n\tgithub.com/go-ole/go-ole v1.3.0 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/go-playground/validator/v10 v10.23.0 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/google/btree v1.1.3 // indirect\n\tgithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad // indirect\n\tgithub.com/gorilla/context v1.1.2 // indirect\n\tgithub.com/gorilla/securecookie v1.1.2 // indirect\n\tgithub.com/gorilla/sessions v1.4.0 // indirect\n\tgithub.com/gorilla/websocket v1.5.3 // indirect\n\tgithub.com/grbit/go-json v0.11.0 // indirect\n\tgithub.com/jinzhu/inflection v1.0.0 // indirect\n\tgithub.com/jinzhu/now v1.1.5 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.9 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/leodido/go-urn v1.4.0 // indirect\n\tgithub.com/lufia/plan9stats v0.0.0-20240909124753-873cd0166683 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-sqlite3 v1.14.24 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.22.2 // indirect\n\tgithub.com/pires/go-proxyproto v0.8.0 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55 // indirect\n\tgithub.com/quic-go/qpack v0.5.1 // indirect\n\tgithub.com/refraction-networking/utls v1.6.7 // indirect\n\tgithub.com/riobard/go-bloom v0.0.0-20200614022211-cdc8013cb5b3 // indirect\n\tgithub.com/rogpeppe/go-internal v1.13.1 // indirect\n\tgithub.com/sagernet/sing v0.5.1 // indirect\n\tgithub.com/sagernet/sing-shadowsocks v0.2.7 // indirect\n\tgithub.com/savsgio/gotils v0.0.0-20240704082632-aef3928b8a38 // indirect\n\tgithub.com/seiflotfy/cuckoofilter v0.0.0-20240715131351-a2f2c23f1771 // indirect\n\tgithub.com/tklauser/go-sysconf v0.3.14 // indirect\n\tgithub.com/tklauser/numcpus v0.9.0 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.12 // indirect\n\tgithub.com/v2fly/ss-bloomring v0.0.0-20210312155135-28617310f63e // indirect\n\tgithub.com/valyala/bytebufferpool v1.0.0 // indirect\n\tgithub.com/valyala/fastjson v1.6.4 // indirect\n\tgithub.com/vishvananda/netlink v1.3.0 // indirect\n\tgithub.com/vishvananda/netns v0.0.5 // indirect\n\tgithub.com/xtls/quic-go v0.48.2 // indirect\n\tgithub.com/xtls/reality v0.0.0-20240909153216-e26ae2305463 // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgo.uber.org/mock v0.5.0 // indirect\n\tgo4.org/netipx v0.0.0-20231129151722-fdeea329fbba // indirect\n\tgolang.org/x/arch v0.12.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/net v0.33.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/time v0.8.0 // indirect\n\tgolang.org/x/tools v0.28.0 // indirect\n\tgolang.zx2c4.com/wintun v0.0.0-20230126152724-0fa3db229ce2 // indirect\n\tgolang.zx2c4.com/wireguard v0.0.0-20231211153847-12269c276173 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241230172942-26aa7a208def // indirect\n\tgoogle.golang.org/protobuf v1.36.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tgvisor.dev/gvisor v0.0.0-20231202080848-1f7806d17489 // indirect\n\tlukechampine.com/blake3 v1.3.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 23.888671875,
          "content": "github.com/BurntSushi/toml v1.4.0 h1:kuoIxZQy2WRRk1pttg9asf+WVv6tWQuBNVmK8+nqPr0=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/OmarTariq612/goech v0.0.0-20240405204721-8e2e1dafd3a0 h1:Wo41lDOevRJSGpevP+8Pk5bANX7fJacO2w04aqLiC5I=\ngithub.com/OmarTariq612/goech v0.0.0-20240405204721-8e2e1dafd3a0/go.mod h1:FVGavL/QEBQDcBpr3fAojoK17xX5k9bicBphrOpP7uM=\ngithub.com/andybalholm/brotli v1.1.1 h1:PR2pgnyFznKEugtsUo0xLdDop5SKXd5Qf5ysW+7XdTA=\ngithub.com/andybalholm/brotli v1.1.1/go.mod h1:05ib4cKhjx3OQYUY22hTVd34Bc8upXjOLL2rKwwZBoA=\ngithub.com/bytedance/sonic v1.12.6 h1:/isNmCUF2x3Sh8RAp/4mh4ZGkcFAX/hLrzrK3AvpRzk=\ngithub.com/bytedance/sonic v1.12.6/go.mod h1:B8Gt/XvtZ3Fqj+iSKMypzymZxw/FVwgIGKzMzT9r/rk=\ngithub.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=\ngithub.com/bytedance/sonic/loader v0.2.1 h1:1GgorWTqf12TA8mma4DDSbaQigE2wOgQo7iCjjJv3+E=\ngithub.com/bytedance/sonic/loader v0.2.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=\ngithub.com/cloudflare/circl v1.5.0 h1:hxIWksrX6XN5a1L2TI/h53AGPhNHoUBo+TD1ms9+pys=\ngithub.com/cloudflare/circl v1.5.0/go.mod h1:uddAzsPgqdMAYatqJ0lsjX1oECcQLIlRpzZh3pJrofs=\ngithub.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=\ngithub.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=\ngithub.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=\ngithub.com/cloudwego/iasm v0.2.0/go.mod h1:8rXZaNYT2n95jn+zTI1sDr+IgcD2GVs0nlbbQPiEFhY=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-metro v0.0.0-20200812162917-85c65e2d0165/go.mod h1:c9O8+fpSOX1DM8cPNSkX/qsBWdkD4yd2dpciOWQjpBw=\ngithub.com/dgryski/go-metro v0.0.0-20211217172704-adc40b04c140 h1:y7y0Oa6UawqTFPCDw9JG6pdKt4F9pAhHv0B7FMGaGD0=\ngithub.com/dgryski/go-metro v0.0.0-20211217172704-adc40b04c140/go.mod h1:c9O8+fpSOX1DM8cPNSkX/qsBWdkD4yd2dpciOWQjpBw=\ngithub.com/ebitengine/purego v0.8.1 h1:sdRKd6plj7KYW33EH5As6YKfe8m9zbN9JMrOjNVF/BE=\ngithub.com/ebitengine/purego v0.8.1/go.mod h1:iIjxzd6CiRiOG0UyXP+V1+jWqUXVjPKLAI0mRfJZTmQ=\ngithub.com/fasthttp/router v1.5.3 h1:BFWXqa3e4thRI3MgPKTNtz0Oiq6UYN2OsEtb+YQ5TMI=\ngithub.com/fasthttp/router v1.5.3/go.mod h1:b864KkDIapOYh77AVG/SNkwfRZ6k6ecWvD+ZRXmP5pw=\ngithub.com/gabriel-vasile/mimetype v1.4.7 h1:SKFKl7kD0RiPdbht0s7hFtjl489WcQ1VyPW8ZzUMYCA=\ngithub.com/gabriel-vasile/mimetype v1.4.7/go.mod h1:GDlAgAyIRT27BhFl53XNAFtfjzOkLaF35JdEG0P7LtU=\ngithub.com/ghodss/yaml v1.0.1-0.20220118164431-d8423dcdf344 h1:Arcl6UOIS/kgO2nW3A65HN+7CMjSDP/gofXL4CZt1V4=\ngithub.com/ghodss/yaml v1.0.1-0.20220118164431-d8423dcdf344/go.mod h1:GIjDIg/heH5DOkXY3YJ/wNhfHsQHoXGjl8G8amsYQ1I=\ngithub.com/gin-contrib/gzip v1.1.0 h1:kVw7Nr9M+Z6Ch4qo7aGMbiqxDeyQFru+07MgAcUF62M=\ngithub.com/gin-contrib/gzip v1.1.0/go.mod h1:iHJXCup4CWiKyPUEl+GwkHjchl+YyYuMKbOCiXujPIA=\ngithub.com/gin-contrib/sessions v1.0.2 h1:UaIjUvTH1cMeOdj3in6dl+Xb6It8RiKRF9Z1anbUyCA=\ngithub.com/gin-contrib/sessions v1.0.2/go.mod h1:KxKxWqWP5LJVDCInulOl4WbLzK2KSPlLesfZ66wRvMs=\ngithub.com/gin-contrib/sse v1.0.0 h1:y3bT1mUWUxDpW4JLQg/HnTqV4rozuW4tC9eFKTxYI9E=\ngithub.com/gin-contrib/sse v1.0.0/go.mod h1:zNuFdwarAygJBht0NTKiSi3jRf6RbqeILZ9Sp6Slhe0=\ngithub.com/gin-gonic/gin v1.10.0 h1:nTuyha1TYqgedzytsKYqna+DfLos46nTv2ygFy86HFU=\ngithub.com/gin-gonic/gin v1.10.0/go.mod h1:4PMNQiOhvDRa013RKVbsiNwoyezlm2rm0uX/T7kzp5Y=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-ole/go-ole v1.3.0 h1:Dt6ye7+vXGIKZ7Xtk4s6/xVdGDQynvom7xCFEdWr6uE=\ngithub.com/go-ole/go-ole v1.3.0/go.mod h1:5LS6F96DhAwUc7C+1HLexzMXY1xGRSryjyPPKW6zv78=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.23.0 h1:/PwmTwZhS0dPkav3cdK9kV1FsAmrL8sThn8IHr/sO+o=\ngithub.com/go-playground/validator/v10 v10.23.0/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/goccy/go-json v0.10.4 h1:JSwxQzIqKfmFX1swYPpUThQZp/Ka4wzJdK0LWVytLPM=\ngithub.com/goccy/go-json v0.10.4/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=\ngithub.com/golang/mock v1.7.0-rc.1 h1:YojYx61/OLFsiv6Rw1Z96LpldJIy31o+UHmwAUMJ6/U=\ngithub.com/golang/mock v1.7.0-rc.1/go.mod h1:s42URUywIqd+OcERslBJvOjepvNymP31m3q8d/GkuRs=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=\ngithub.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad h1:a6HEuzUHeKH6hwfN/ZoQgRgVIWFJljSWa/zetS2WTvg=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/context v1.1.2 h1:WRkNAv2uoa03QNIc1A6u4O7DAGMUVoopZhkiXWA2V1o=\ngithub.com/gorilla/context v1.1.2/go.mod h1:KDPwT9i/MeWHiLl90fuTgrt4/wPcv75vFAZLaOOcbxM=\ngithub.com/gorilla/securecookie v1.1.2 h1:YCIWL56dvtr73r6715mJs5ZvhtnY73hBvEF8kXD8ePA=\ngithub.com/gorilla/securecookie v1.1.2/go.mod h1:NfCASbcHqRSY+3a8tlWJwsQap2VX5pwzwo4h3eOamfo=\ngithub.com/gorilla/sessions v1.4.0 h1:kpIYOp/oi6MG/p5PgxApU8srsSw9tuFbt46Lt7auzqQ=\ngithub.com/gorilla/sessions v1.4.0/go.mod h1:FLWm50oby91+hl7p/wRxDth9bWSuk0qVL2emc7lT5ik=\ngithub.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\ngithub.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/grbit/go-json v0.11.0 h1:bAbyMdYrYl/OjYsSqLH99N2DyQ291mHy726Mx+sYrnc=\ngithub.com/grbit/go-json v0.11.0/go.mod h1:IYpHsdybQ386+6g3VE6AXQ3uTGa5mquBme5/ZWmtzek=\ngithub.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=\ngithub.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\ngithub.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=\ngithub.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.9 h1:66ze0taIn2H33fBvCkXuv9BmCwDfafmiIVpKV9kKGuY=\ngithub.com/klauspost/cpuid/v2 v2.2.9/go.mod h1:rqkxqrZ1EhYM9G+hXH7YdowN5R5RGN6NK4QwQ3WMXF8=\ngithub.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=\ngithub.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=\ngithub.com/lufia/plan9stats v0.0.0-20240909124753-873cd0166683 h1:7UMa6KCCMjZEMDtTVdcGu0B1GmmC7QJKiCCjyTAWQy0=\ngithub.com/lufia/plan9stats v0.0.0-20240909124753-873cd0166683/go.mod h1:ilwx/Dta8jXAgpFYFvSWEMwxmbWXyiUHkd5FwyKhb5k=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-sqlite3 v1.14.24 h1:tpSp2G2KyMnnQu99ngJ47EIkWVmliIizyZBfPrBWDRM=\ngithub.com/mattn/go-sqlite3 v1.14.24/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/miekg/dns v1.1.62 h1:cN8OuEF1/x5Rq6Np+h1epln8OiyPWV+lROx9LxcGgIQ=\ngithub.com/miekg/dns v1.1.62/go.mod h1:mvDlcItzm+br7MToIKqkglaGhlFMHJ9DTNNWONWXbNQ=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/mymmrac/telego v0.31.5 h1:5CpSeAxGtFTmEJWFvPmu8f4Lqg3u2DSDYn4R80Mo+rs=\ngithub.com/mymmrac/telego v0.31.5/go.mod h1:1U+D+TeoB7PnkOi024apOivATL4Q3MnUSZlY+rcMPiE=\ngithub.com/nicksnyder/go-i18n/v2 v2.4.1 h1:zwzjtX4uYyiaU02K5Ia3zSkpJZrByARkRB4V3YPrr0g=\ngithub.com/nicksnyder/go-i18n/v2 v2.4.1/go.mod h1:++Pl70FR6Cki7hdzZRnEEqdc2dJt+SAGotyFg/SvZMk=\ngithub.com/onsi/ginkgo/v2 v2.22.2 h1:/3X8Panh8/WwhU/3Ssa6rCKqPLuAkVY2I0RoyDLySlU=\ngithub.com/onsi/ginkgo/v2 v2.22.2/go.mod h1:oeMosUL+8LtarXBHu/c0bx2D/K9zyQ6uX3cTyztHwsk=\ngithub.com/onsi/gomega v1.36.2 h1:koNYke6TVk6ZmnyHrCXba/T/MoLBXFjeC1PtvYgw0A8=\ngithub.com/onsi/gomega v1.36.2/go.mod h1:DdwyADRjrc825LhMEkD76cHR5+pUnjhUN8GlHlRPHzY=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7 h1:lDH9UUVJtmYCjyT0CI4q8xvlXPxeZ0gYCVvWbmPlp88=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=\ngithub.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=\ngithub.com/pires/go-proxyproto v0.8.0 h1:5unRmEAPbHXHuLjDg01CxJWf91cw3lKHc/0xzKpXEe0=\ngithub.com/pires/go-proxyproto v0.8.0/go.mod h1:iknsfgnH8EkjrMeMyvfKByp9TiBZCKZM0jx2xmKqnVY=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55 h1:o4JXh1EVt9k/+g42oCprj/FisM4qX9L3sZB3upGN2ZU=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/quic-go/qpack v0.5.1 h1:giqksBPnT/HDtZ6VhtFKgoLOWmlyo9Ei6u9PqzIMbhI=\ngithub.com/quic-go/qpack v0.5.1/go.mod h1:+PC4XFrEskIVkcLzpEkbLqq1uCoxPhQuvK5rH1ZgaEg=\ngithub.com/refraction-networking/utls v1.6.7 h1:zVJ7sP1dJx/WtVuITug3qYUq034cDq9B2MR1K67ULZM=\ngithub.com/refraction-networking/utls v1.6.7/go.mod h1:BC3O4vQzye5hqpmDTWUqi4P5DDhzJfkV1tdqtawQIH0=\ngithub.com/riobard/go-bloom v0.0.0-20200614022211-cdc8013cb5b3 h1:f/FNXud6gA3MNr8meMVVGxhp+QBTqY91tM8HjEuMjGg=\ngithub.com/riobard/go-bloom v0.0.0-20200614022211-cdc8013cb5b3/go.mod h1:HgjTstvQsPGkxUsCd2KWxErBblirPizecHcpD3ffK+s=\ngithub.com/robfig/cron/v3 v3.0.1 h1:WdRxkvbJztn8LMz/QEvLN5sBU+xKpSqwwUO1Pjr4qDs=\ngithub.com/robfig/cron/v3 v3.0.1/go.mod h1:eQICP3HwyT7UooqI/z+Ov+PtYAWygg1TEWWzGIFLtro=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/sagernet/sing v0.5.1 h1:mhL/MZVq0TjuvHcpYcFtmSD1BFOxZ/+8ofbNZcg1k1Y=\ngithub.com/sagernet/sing v0.5.1/go.mod h1:ARkL0gM13/Iv5VCZmci/NuoOlePoIsW0m7BWfln/Hak=\ngithub.com/sagernet/sing-shadowsocks v0.2.7 h1:zaopR1tbHEw5Nk6FAkM05wCslV6ahVegEZaKMv9ipx8=\ngithub.com/sagernet/sing-shadowsocks v0.2.7/go.mod h1:0rIKJZBR65Qi0zwdKezt4s57y/Tl1ofkaq6NlkzVuyE=\ngithub.com/savsgio/gotils v0.0.0-20240704082632-aef3928b8a38 h1:D0vL7YNisV2yqE55+q0lFuGse6U8lxlg7fYTctlT5Gc=\ngithub.com/savsgio/gotils v0.0.0-20240704082632-aef3928b8a38/go.mod h1:sM7Mt7uEoCeFSCBM+qBrqvEo+/9vdmj19wzp3yzUhmg=\ngithub.com/seiflotfy/cuckoofilter v0.0.0-20240715131351-a2f2c23f1771 h1:emzAzMZ1L9iaKCTxdy3Em8Wv4ChIAGnfiz18Cda70g4=\ngithub.com/seiflotfy/cuckoofilter v0.0.0-20240715131351-a2f2c23f1771/go.mod h1:bR6DqgcAl1zTcOX8/pE2Qkj9XO00eCNqmKb7lXP8EAg=\ngithub.com/shirou/gopsutil/v4 v4.24.12 h1:qvePBOk20e0IKA1QXrIIU+jmk+zEiYVVx06WjBRlZo4=\ngithub.com/shirou/gopsutil/v4 v4.24.12/go.mod h1:DCtMPAad2XceTeIAbGyVfycbYQNBGk2P8cvDi7/VN9o=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tklauser/go-sysconf v0.3.14 h1:g5vzr9iPFFz24v2KZXs/pvpvh8/V9Fw6vQK5ZZb78yU=\ngithub.com/tklauser/go-sysconf v0.3.14/go.mod h1:1ym4lWMLUOhuBOPGtRcJm7tEGX4SCYNEEEtghGG/8uY=\ngithub.com/tklauser/numcpus v0.9.0 h1:lmyCHtANi8aRUgkckBgoDk1nHCux3n2cgkJLXdQGPDo=\ngithub.com/tklauser/numcpus v0.9.0/go.mod h1:SN6Nq1O3VychhC1npsWostA+oW+VOQTxZrS604NSRyI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=\ngithub.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=\ngithub.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngithub.com/v2fly/ss-bloomring v0.0.0-20210312155135-28617310f63e h1:5QefA066A1tF8gHIiADmOVOV5LS43gt3ONnlEl3xkwI=\ngithub.com/v2fly/ss-bloomring v0.0.0-20210312155135-28617310f63e/go.mod h1:5t19P9LBIrNamL6AcMQOncg/r10y3Pc01AbHeMhwlpU=\ngithub.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=\ngithub.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=\ngithub.com/valyala/fasthttp v1.58.0 h1:GGB2dWxSbEprU9j0iMJHgdKYJVDyjrOwF9RE59PbRuE=\ngithub.com/valyala/fasthttp v1.58.0/go.mod h1:SYXvHHaFp7QZHGKSHmoMipInhrI5StHrhDTYVEjK/Kw=\ngithub.com/valyala/fastjson v1.6.4 h1:uAUNq9Z6ymTgGhcm0UynUAB6tlbakBrz6CQFax3BXVQ=\ngithub.com/valyala/fastjson v1.6.4/go.mod h1:CLCAqky6SMuOcxStkYQvblddUtoRxhYMGLrsQns1aXY=\ngithub.com/vishvananda/netlink v1.3.0 h1:X7l42GfcV4S6E4vHTsw48qbrV+9PVojNfIhZcwQdrZk=\ngithub.com/vishvananda/netlink v1.3.0/go.mod h1:i6NetklAujEcC6fK0JPjT8qSwWyO0HLn4UKG+hGqeJs=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/vishvananda/netns v0.0.5 h1:DfiHV+j8bA32MFM7bfEunvT8IAqQ/NzSJHtcmW5zdEY=\ngithub.com/vishvananda/netns v0.0.5/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/xtls/quic-go v0.48.2 h1:59Gs+E9qtc9s0uniXYDA649gNEZlMWcNpFLyp9jfkuE=\ngithub.com/xtls/quic-go v0.48.2/go.mod h1:rcyY5J0JT+1d5pa5Y+FbCsXM7Zu79jE87ZSFOBfiH7Q=\ngithub.com/xtls/reality v0.0.0-20240909153216-e26ae2305463 h1:g1Cj7d+my6k/HHxLAyxPwyX8i7FGRr6ulBDMkBzg2BM=\ngithub.com/xtls/reality v0.0.0-20240909153216-e26ae2305463/go.mod h1:BjIOLmkEEtAgloAiVUcYj0Mt+YU00JARZw8AEU0IwAg=\ngithub.com/xtls/xray-core v1.8.25-0.20250101120305-e80ca67feed9 h1:lCjZeLXt/k1DGAqt2+D1kzMMaDELuS1v7TqpeNS/JR8=\ngithub.com/xtls/xray-core v1.8.25-0.20250101120305-e80ca67feed9/go.mod h1:ZQNlyI+v398/dKXjacCwhGfQlhjPThvmPToC/RBy7oM=\ngithub.com/xyproto/randomstring v1.0.5 h1:YtlWPoRdgMu3NZtP45drfy1GKoojuR7hmRcnhZqKjWU=\ngithub.com/xyproto/randomstring v1.0.5/go.mod h1:rgmS5DeNXLivK7YprL0pY+lTuhNQW3iGxZ18UQApw/E=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngo.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=\ngo.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=\ngo.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=\ngo.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=\ngo.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=\ngo.uber.org/atomic v1.11.0 h1:ZvwS0R+56ePWxUNi+Atn9dWONBPp/AUETXlHW0DxSjE=\ngo.uber.org/atomic v1.11.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=\ngo.uber.org/mock v0.5.0 h1:KAMbZvZPyBPWgD14IrIQ38QCyjwpvVVV6K/bHl1IwQU=\ngo.uber.org/mock v0.5.0/go.mod h1:ge71pBPLYDk7QIi1LupWxdAykm7KIEFchiOqd6z7qMM=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba h1:0b9z3AuHCjxk0x/opv64kcgZLBseWJUpBw5I82+2U4M=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba/go.mod h1:PLyyIXexvUFg3Owu6p/WfdlivPbZJsZdgWZlrGope/Y=\ngolang.org/x/arch v0.12.0 h1:UsYJhbzPYGsT0HbEdmYcqtCv8UNGvnaL561NnIUvaKg=\ngolang.org/x/arch v0.12.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67 h1:1UoZQm6f0P/ZO0w1Ri+f+ifG/gXhegadRdwBIXEFWDo=\ngolang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67/go.mod h1:qj5a5QZpwLU2NLQudwIN5koi3beDhSAlJwa67PuM98c=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngolang.zx2c4.com/wintun v0.0.0-20230126152724-0fa3db229ce2 h1:B82qJJgjvYKsXS9jeunTOisW56dUokqW/FOteYJJ/yg=\ngolang.zx2c4.com/wintun v0.0.0-20230126152724-0fa3db229ce2/go.mod h1:deeaetjYA+DHMHg+sMSMI58GrEteJUUzzw7en6TJQcI=\ngolang.zx2c4.com/wireguard v0.0.0-20231211153847-12269c276173 h1:/jFs0duh4rdb8uIfPMv78iAJGcPKDeqAFnaLBropIC4=\ngolang.zx2c4.com/wireguard v0.0.0-20231211153847-12269c276173/go.mod h1:tkCQ4FQXmpAgYVh++1cq16/dH4QJtmvpRv19DWGAHSA=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241230172942-26aa7a208def h1:4P81qv5JXI/sDNae2ClVx88cgDDA6DPilADkG9tYKz8=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241230172942-26aa7a208def/go.mod h1:bdAgzvd4kFrpykc5/AC2eLUiegK9T/qxZHD4hXYf/ho=\ngoogle.golang.org/grpc v1.69.2 h1:U3S9QEtbXC0bYNvRtcoklF3xGtLViumSYxWykJS+7AU=\ngoogle.golang.org/grpc v1.69.2/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20200605160147-a5ece683394c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngorm.io/driver/sqlite v1.5.7 h1:8NvsrhP0ifM7LX9G4zPB97NwovUakUxc+2V2uuf3Z1I=\ngorm.io/driver/sqlite v1.5.7/go.mod h1:U+J8craQU6Fzkcvu8oLeAQmi50TkwPEhHDEjQZXDah4=\ngorm.io/gorm v1.25.12 h1:I0u8i2hWQItBq1WfE0o2+WuL9+8L21K9e2HHSTE/0f8=\ngorm.io/gorm v1.25.12/go.mod h1:xh7N7RHfYlNc5EmcI/El95gXusucDrQnHXe0+CgWcLQ=\ngvisor.dev/gvisor v0.0.0-20231202080848-1f7806d17489 h1:ze1vwAdliUAr68RQ5NtufWaXaOg8WUO2OACzEV+TNdE=\ngvisor.dev/gvisor v0.0.0-20231202080848-1f7806d17489/go.mod h1:10sU+Uh5KKNv1+2x2A0Gvzt8FjD3ASIhorV3YsauXhk=\nlukechampine.com/blake3 v1.3.0 h1:sJ3XhFINmHSrYCgl958hscfIa3bw8x4DqMP3u1YvoYE=\nlukechampine.com/blake3 v1.3.0/go.mod h1:0OFRp7fBtAylGVCO40o87sbupkyIGgbpv1+M1k1LM6k=\nnullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 12.18359375,
          "content": "#!/bin/bash\n\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nblue='\\033[0;34m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\n\ncur_dir=$(pwd)\n\n# check root\n[[ $EUID -ne 0 ]] && echo -e \"${red}Fatal error: ${plain} Please run this script with root privilege \\n \" && exit 1\n\n# Check OS and set release variable\nif [[ -f /etc/os-release ]]; then\n    source /etc/os-release\n    release=$ID\nelif [[ -f /usr/lib/os-release ]]; then\n    source /usr/lib/os-release\n    release=$ID\nelse\n    echo \"Failed to check the system OS, please contact the author!\" >&2\n    exit 1\nfi\necho \"The OS release is: $release\"\n\narch() {\n    case \"$(uname -m)\" in\n    x86_64 | x64 | amd64) echo 'amd64' ;;\n    i*86 | x86) echo '386' ;;\n    armv8* | armv8 | arm64 | aarch64) echo 'arm64' ;;\n    armv7* | armv7 | arm) echo 'armv7' ;;\n    armv6* | armv6) echo 'armv6' ;;\n    armv5* | armv5) echo 'armv5' ;;\n    s390x) echo 's390x' ;;\n    *) echo -e \"${green}Unsupported CPU architecture! ${plain}\" && rm -f install.sh && exit 1 ;;\n    esac\n}\n\necho \"arch: $(arch)\"\n\nos_version=\"\"\nos_version=$(grep \"^VERSION_ID\" /etc/os-release | cut -d '=' -f2 | tr -d '\"' | tr -d '.')\n\nif [[ \"${release}\" == \"arch\" ]]; then\n    echo \"Your OS is Arch Linux\"\nelif [[ \"${release}\" == \"parch\" ]]; then\n    echo \"Your OS is Parch Linux\"\nelif [[ \"${release}\" == \"manjaro\" ]]; then\n    echo \"Your OS is Manjaro\"\nelif [[ \"${release}\" == \"armbian\" ]]; then\n    echo \"Your OS is Armbian\"\nelif [[ \"${release}\" == \"alpine\" ]]; then\n    echo \"Your OS is Alpine Linux\"\nelif [[ \"${release}\" == \"opensuse-tumbleweed\" ]]; then\n    echo \"Your OS is OpenSUSE Tumbleweed\"\nelif [[ \"${release}\" == \"openEuler\" ]]; then\n    if [[ ${os_version} -lt 2203 ]]; then\n        echo -e \"${red} Please use OpenEuler 22.03 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"centos\" ]]; then\n    if [[ ${os_version} -lt 8 ]]; then\n        echo -e \"${red} Please use CentOS 8 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"ubuntu\" ]]; then\n    if [[ ${os_version} -lt 2004 ]]; then\n        echo -e \"${red} Please use Ubuntu 20 or higher version!${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"fedora\" ]]; then\n    if [[ ${os_version} -lt 36 ]]; then\n        echo -e \"${red} Please use Fedora 36 or higher version!${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"amzn\" ]]; then\n    if [[ ${os_version} != \"2023\" ]]; then\n        echo -e \"${red} Please use Amazon Linux 2023!${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"debian\" ]]; then\n    if [[ ${os_version} -lt 11 ]]; then\n        echo -e \"${red} Please use Debian 11 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"almalinux\" ]]; then\n    if [[ ${os_version} -lt 80 ]]; then\n        echo -e \"${red} Please use AlmaLinux 8.0 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"rocky\" ]]; then\n    if [[ ${os_version} -lt 8 ]]; then\n        echo -e \"${red} Please use Rocky Linux 8 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"ol\" ]]; then\n    if [[ ${os_version} -lt 8 ]]; then\n        echo -e \"${red} Please use Oracle Linux 8 or higher ${plain}\\n\" && exit 1\n    fi\nelse\n    echo -e \"${red}Your operating system is not supported by this script.${plain}\\n\"\n    echo \"Please ensure you are using one of the following supported operating systems:\"\n    echo \"- Ubuntu 20.04+\"\n    echo \"- Debian 11+\"\n    echo \"- CentOS 8+\"\n    echo \"- OpenEuler 22.03+\"\n    echo \"- Fedora 36+\"\n    echo \"- Arch Linux\"\n    echo \"- Parch Linux\"\n    echo \"- Manjaro\"\n    echo \"- Armbian\"\n    echo \"- AlmaLinux 8.0+\"\n    echo \"- Rocky Linux 8+\"\n    echo \"- Oracle Linux 8+\"\n    echo \"- OpenSUSE Tumbleweed\"\n    echo \"- Amazon Linux 2023\"\n    exit 1\nfi\n\ninstall_base() {\n    case \"${release}\" in\n    ubuntu | debian | armbian)\n        apt-get update && apt-get install -y -q wget curl tar tzdata\n        ;;\n    centos | almalinux | rocky | ol)\n        yum -y update && yum install -y -q wget curl tar tzdata\n        ;;\n    fedora | amzn)\n        dnf -y update && dnf install -y -q wget curl tar tzdata\n        ;;\n    arch | manjaro | parch)\n        pacman -Syu && pacman -Syu --noconfirm wget curl tar tzdata\n        ;;\n    opensuse-tumbleweed)\n        zypper refresh && zypper -q install -y wget curl tar timezone\n        ;;\n    *)\n        apt-get update && apt install -y -q wget curl tar tzdata\n        ;;\n    esac\n}\n\ngen_random_string() {\n    local length=\"$1\"\n    local random_string=$(LC_ALL=C tr -dc 'a-zA-Z0-9' </dev/urandom | fold -w \"$length\" | head -n 1)\n    echo \"$random_string\"\n}\n\nconfig_after_install() {\n    local existing_username=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'username: .+' | awk '{print $2}')\n    local existing_password=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'password: .+' | awk '{print $2}')\n    local existing_webBasePath=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'webBasePath: .+' | awk '{print $2}')\n    local existing_port=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'port: .+' | awk '{print $2}')\n    local server_ip=$(curl -s https://api.ipify.org)\n\n    if [[ ${#existing_webBasePath} -lt 4 ]]; then\n        if [[ \"$existing_username\" == \"admin\" && \"$existing_password\" == \"admin\" ]]; then\n            local config_webBasePath=$(gen_random_string 15)\n            local config_username=$(gen_random_string 10)\n            local config_password=$(gen_random_string 10)\n\n            read -p \"Would you like to customize the Panel Port settings? (If not, a random port will be applied) [y/n]: \" config_confirm\n            if [[ \"${config_confirm}\" == \"y\" || \"${config_confirm}\" == \"Y\" ]]; then\n                read -p \"Please set up the panel port: \" config_port\n                echo -e \"${yellow}Your Panel Port is: ${config_port}${plain}\"\n            else\n                local config_port=$(shuf -i 1024-62000 -n 1)\n                echo -e \"${yellow}Generated random port: ${config_port}${plain}\"\n            fi\n\n            /usr/local/x-ui/x-ui setting -username \"${config_username}\" -password \"${config_password}\" -port \"${config_port}\" -webBasePath \"${config_webBasePath}\"\n            echo -e \"This is a fresh installation, generating random login info for security concerns:\"\n            echo -e \"###############################################\"\n            echo -e \"${green}Username: ${config_username}${plain}\"\n            echo -e \"${green}Password: ${config_password}${plain}\"\n            echo -e \"${green}Port: ${config_port}${plain}\"\n            echo -e \"${green}WebBasePath: ${config_webBasePath}${plain}\"\n            echo -e \"${green}Access URL: http://${server_ip}:${config_port}/${config_webBasePath}${plain}\"\n            echo -e \"###############################################\"\n            echo -e \"${yellow}If you forgot your login info, you can type 'x-ui settings' to check${plain}\"\n        else\n            local config_webBasePath=$(gen_random_string 15)\n            echo -e \"${yellow}WebBasePath is missing or too short. Generating a new one...${plain}\"\n            /usr/local/x-ui/x-ui setting -webBasePath \"${config_webBasePath}\"\n            echo -e \"${green}New WebBasePath: ${config_webBasePath}${plain}\"\n            echo -e \"${green}Access URL: http://${server_ip}:${existing_port}/${config_webBasePath}${plain}\"\n        fi\n    else\n        if [[ \"$existing_username\" == \"admin\" && \"$existing_password\" == \"admin\" ]]; then\n            local config_username=$(gen_random_string 10)\n            local config_password=$(gen_random_string 10)\n\n            echo -e \"${yellow}Default credentials detected. Security update required...${plain}\"\n            /usr/local/x-ui/x-ui setting -username \"${config_username}\" -password \"${config_password}\"\n            echo -e \"Generated new random login credentials:\"\n            echo -e \"###############################################\"\n            echo -e \"${green}Username: ${config_username}${plain}\"\n            echo -e \"${green}Password: ${config_password}${plain}\"\n            echo -e \"###############################################\"\n            echo -e \"${yellow}If you forgot your login info, you can type 'x-ui settings' to check${plain}\"\n        else\n            echo -e \"${green}Username, Password, and WebBasePath are properly set. Exiting...${plain}\"\n        fi\n    fi\n\n    /usr/local/x-ui/x-ui migrate\n}\n\ninstall_x-ui() {\n    cd /usr/local/\n\n    if [ $# == 0 ]; then\n        tag_version=$(curl -Ls \"https://api.github.com/repos/MHSanaei/3x-ui/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"([^\"]+)\".*/\\1/')\n        if [[ ! -n \"$tag_version\" ]]; then\n            echo -e \"${red}Failed to fetch x-ui version, it may be due to GitHub API restrictions, please try it later${plain}\"\n            exit 1\n        fi\n        echo -e \"Got x-ui latest version: ${tag_version}, beginning the installation...\"\n        wget -N --no-check-certificate -O /usr/local/x-ui-linux-$(arch).tar.gz https://github.com/MHSanaei/3x-ui/releases/download/${tag_version}/x-ui-linux-$(arch).tar.gz\n        if [[ $? -ne 0 ]]; then\n            echo -e \"${red}Downloading x-ui failed, please be sure that your server can access GitHub ${plain}\"\n            exit 1\n        fi\n    else\n        tag_version=$1\n        tag_version_numeric=${tag_version#v}\n        min_version=\"2.3.5\"\n\n        if [[ \"$(printf '%s\\n' \"$min_version\" \"$tag_version_numeric\" | sort -V | head -n1)\" != \"$min_version\" ]]; then\n            echo -e \"${red}Please use a newer version (at least v2.3.5). Exiting installation.${plain}\"\n            exit 1\n        fi\n\n        url=\"https://github.com/MHSanaei/3x-ui/releases/download/${tag_version}/x-ui-linux-$(arch).tar.gz\"\n        echo -e \"Beginning to install x-ui $1\"\n        wget -N --no-check-certificate -O /usr/local/x-ui-linux-$(arch).tar.gz ${url}\n        if [[ $? -ne 0 ]]; then\n            echo -e \"${red}Download x-ui $1 failed, please check if the version exists ${plain}\"\n            exit 1\n        fi\n    fi\n\n    if [[ -e /usr/local/x-ui/ ]]; then\n        systemctl stop x-ui\n        rm /usr/local/x-ui/ -rf\n    fi\n\n    tar zxvf x-ui-linux-$(arch).tar.gz\n    rm x-ui-linux-$(arch).tar.gz -f\n    cd x-ui\n    chmod +x x-ui\n\n    # Check the system's architecture and rename the file accordingly\n    if [[ $(arch) == \"armv5\" || $(arch) == \"armv6\" || $(arch) == \"armv7\" ]]; then\n        mv bin/xray-linux-$(arch) bin/xray-linux-arm\n        chmod +x bin/xray-linux-arm\n    fi\n\n    chmod +x x-ui bin/xray-linux-$(arch)\n    cp -f x-ui.service /etc/systemd/system/\n    wget --no-check-certificate -O /usr/bin/x-ui https://raw.githubusercontent.com/MHSanaei/3x-ui/main/x-ui.sh\n    chmod +x /usr/local/x-ui/x-ui.sh\n    chmod +x /usr/bin/x-ui\n    config_after_install\n\n    systemctl daemon-reload\n    systemctl enable x-ui\n    systemctl start x-ui\n    echo -e \"${green}x-ui ${tag_version}${plain} installation finished, it is running now...\"\n    echo -e \"\"\n    echo -e \"┌───────────────────────────────────────────────────────┐\n│  ${blue}x-ui control menu usages (subcommands):${plain}              │\n│                                                       │\n│  ${blue}x-ui${plain}              - Admin Management Script          │\n│  ${blue}x-ui start${plain}        - Start                            │\n│  ${blue}x-ui stop${plain}         - Stop                             │\n│  ${blue}x-ui restart${plain}      - Restart                          │\n│  ${blue}x-ui status${plain}       - Current Status                   │\n│  ${blue}x-ui settings${plain}     - Current Settings                 │\n│  ${blue}x-ui enable${plain}       - Enable Autostart on OS Startup   │\n│  ${blue}x-ui disable${plain}      - Disable Autostart on OS Startup  │\n│  ${blue}x-ui log${plain}          - Check logs                       │\n│  ${blue}x-ui banlog${plain}       - Check Fail2ban ban logs          │\n│  ${blue}x-ui update${plain}       - Update                           │\n│  ${blue}x-ui legacy${plain}       - legacy version                   │\n│  ${blue}x-ui install${plain}      - Install                          │\n│  ${blue}x-ui uninstall${plain}    - Uninstall                        │\n└───────────────────────────────────────────────────────┘\"\n}\n\necho -e \"${green}Running...${plain}\"\ninstall_base\ninstall_x-ui $1\n"
        },
        {
          "name": "logger",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 11.869140625,
          "content": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\t_ \"unsafe\"\n\n\t\"x-ui/config\"\n\t\"x-ui/database\"\n\t\"x-ui/logger\"\n\t\"x-ui/sub\"\n\t\"x-ui/web\"\n\t\"x-ui/web/global\"\n\t\"x-ui/web/service\"\n\n\t\"github.com/op/go-logging\"\n)\n\nfunc runWebServer() {\n\tlog.Printf(\"Starting %v %v\", config.GetName(), config.GetVersion())\n\n\tswitch config.GetLogLevel() {\n\tcase config.Debug:\n\t\tlogger.InitLogger(logging.DEBUG)\n\tcase config.Info:\n\t\tlogger.InitLogger(logging.INFO)\n\tcase config.Notice:\n\t\tlogger.InitLogger(logging.NOTICE)\n\tcase config.Warn:\n\t\tlogger.InitLogger(logging.WARNING)\n\tcase config.Error:\n\t\tlogger.InitLogger(logging.ERROR)\n\tdefault:\n\t\tlog.Fatalf(\"Unknown log level: %v\", config.GetLogLevel())\n\t}\n\n\terr := database.InitDB(config.GetDBPath())\n\tif err != nil {\n\t\tlog.Fatalf(\"Error initializing database: %v\", err)\n\t}\n\n\tvar server *web.Server\n\tserver = web.NewServer()\n\tglobal.SetWebServer(server)\n\terr = server.Start()\n\tif err != nil {\n\t\tlog.Fatalf(\"Error starting web server: %v\", err)\n\t\treturn\n\t}\n\n\tvar subServer *sub.Server\n\tsubServer = sub.NewServer()\n\tglobal.SetSubServer(subServer)\n\terr = subServer.Start()\n\tif err != nil {\n\t\tlog.Fatalf(\"Error starting sub server: %v\", err)\n\t\treturn\n\t}\n\n\tsigCh := make(chan os.Signal, 1)\n\t// Trap shutdown signals\n\tsignal.Notify(sigCh, syscall.SIGHUP, syscall.SIGTERM)\n\tfor {\n\t\tsig := <-sigCh\n\n\t\tswitch sig {\n\t\tcase syscall.SIGHUP:\n\t\t\tlogger.Info(\"Received SIGHUP signal. Restarting servers...\")\n\n\t\t\terr := server.Stop()\n\t\t\tif err != nil {\n\t\t\t\tlogger.Debug(\"Error stopping web server:\", err)\n\t\t\t}\n\t\t\terr = subServer.Stop()\n\t\t\tif err != nil {\n\t\t\t\tlogger.Debug(\"Error stopping sub server:\", err)\n\t\t\t}\n\n\t\t\tserver = web.NewServer()\n\t\t\tglobal.SetWebServer(server)\n\t\t\terr = server.Start()\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatalf(\"Error restarting web server: %v\", err)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlog.Println(\"Web server restarted successfully.\")\n\n\t\t\tsubServer = sub.NewServer()\n\t\t\tglobal.SetSubServer(subServer)\n\t\t\terr = subServer.Start()\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatalf(\"Error restarting sub server: %v\", err)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlog.Println(\"Sub server restarted successfully.\")\n\n\t\tdefault:\n\t\t\tserver.Stop()\n\t\t\tsubServer.Stop()\n\t\t\tlog.Println(\"Shutting down servers.\")\n\t\t\treturn\n\t\t}\n\t}\n}\n\nfunc resetSetting() {\n\terr := database.InitDB(config.GetDBPath())\n\tif err != nil {\n\t\tfmt.Println(\"Failed to initialize database:\", err)\n\t\treturn\n\t}\n\n\tsettingService := service.SettingService{}\n\terr = settingService.ResetSettings()\n\tif err != nil {\n\t\tfmt.Println(\"Failed to reset settings:\", err)\n\t} else {\n\t\tfmt.Println(\"Settings successfully reset.\")\n\t}\n}\n\nfunc showSetting(show bool) {\n\tif show {\n\t\tsettingService := service.SettingService{}\n\t\tport, err := settingService.GetPort()\n\t\tif err != nil {\n\t\t\tfmt.Println(\"get current port failed, error info:\", err)\n\t\t}\n\n\t\twebBasePath, err := settingService.GetBasePath()\n\t\tif err != nil {\n\t\t\tfmt.Println(\"get webBasePath failed, error info:\", err)\n\t\t}\n\n\t\tcertFile, err := settingService.GetCertFile()\n\t\tif err != nil {\n\t\t\tfmt.Println(\"get cert file failed, error info:\", err)\n\t\t}\n\t\tkeyFile, err := settingService.GetKeyFile()\n\t\tif err != nil {\n\t\t\tfmt.Println(\"get key file failed, error info:\", err)\n\t\t}\n\n\t\tuserService := service.UserService{}\n\t\tuserModel, err := userService.GetFirstUser()\n\t\tif err != nil {\n\t\t\tfmt.Println(\"get current user info failed, error info:\", err)\n\t\t}\n\n\t\tusername := userModel.Username\n\t\tuserpasswd := userModel.Password\n\t\tif username == \"\" || userpasswd == \"\" {\n\t\t\tfmt.Println(\"current username or password is empty\")\n\t\t}\n\n\t\tfmt.Println(\"current panel settings as follows:\")\n\t\tif certFile == \"\" || keyFile == \"\" {\n\t\t\tfmt.Println(\"Warning: Panel is not secure with SSL\")\n\t\t} else {\n\t\t\tfmt.Println(\"Panel is secure with SSL\")\n\t\t}\n\t\tfmt.Println(\"username:\", username)\n\t\tfmt.Println(\"password:\", userpasswd)\n\t\tfmt.Println(\"port:\", port)\n\t\tfmt.Println(\"webBasePath:\", webBasePath)\n\t}\n}\n\nfunc updateTgbotEnableSts(status bool) {\n\tsettingService := service.SettingService{}\n\tcurrentTgSts, err := settingService.GetTgbotEnabled()\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\tlogger.Infof(\"current enabletgbot status[%v],need update to status[%v]\", currentTgSts, status)\n\tif currentTgSts != status {\n\t\terr := settingService.SetTgbotEnabled(status)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\treturn\n\t\t} else {\n\t\t\tlogger.Infof(\"SetTgbotEnabled[%v] success\", status)\n\t\t}\n\t}\n}\n\nfunc updateTgbotSetting(tgBotToken string, tgBotChatid string, tgBotRuntime string) {\n\terr := database.InitDB(config.GetDBPath())\n\tif err != nil {\n\t\tfmt.Println(\"Error initializing database:\", err)\n\t\treturn\n\t}\n\n\tsettingService := service.SettingService{}\n\n\tif tgBotToken != \"\" {\n\t\terr := settingService.SetTgBotToken(tgBotToken)\n\t\tif err != nil {\n\t\t\tfmt.Printf(\"Error setting Telegram bot token: %v\\n\", err)\n\t\t\treturn\n\t\t}\n\t\tlogger.Info(\"Successfully updated Telegram bot token.\")\n\t}\n\n\tif tgBotRuntime != \"\" {\n\t\terr := settingService.SetTgbotRuntime(tgBotRuntime)\n\t\tif err != nil {\n\t\t\tfmt.Printf(\"Error setting Telegram bot runtime: %v\\n\", err)\n\t\t\treturn\n\t\t}\n\t\tlogger.Infof(\"Successfully updated Telegram bot runtime to [%s].\", tgBotRuntime)\n\t}\n\n\tif tgBotChatid != \"\" {\n\t\terr := settingService.SetTgBotChatId(tgBotChatid)\n\t\tif err != nil {\n\t\t\tfmt.Printf(\"Error setting Telegram bot chat ID: %v\\n\", err)\n\t\t\treturn\n\t\t}\n\t\tlogger.Info(\"Successfully updated Telegram bot chat ID.\")\n\t}\n}\n\nfunc updateSetting(port int, username string, password string, webBasePath string, listenIP string) {\n\terr := database.InitDB(config.GetDBPath())\n\tif err != nil {\n\t\tfmt.Println(\"Database initialization failed:\", err)\n\t\treturn\n\t}\n\n\tsettingService := service.SettingService{}\n\tuserService := service.UserService{}\n\n\tif port > 0 {\n\t\terr := settingService.SetPort(port)\n\t\tif err != nil {\n\t\t\tfmt.Println(\"Failed to set port:\", err)\n\t\t} else {\n\t\t\tfmt.Printf(\"Port set successfully: %v\\n\", port)\n\t\t}\n\t}\n\n\tif username != \"\" || password != \"\" {\n\t\terr := userService.UpdateFirstUser(username, password)\n\t\tif err != nil {\n\t\t\tfmt.Println(\"Failed to update username and password:\", err)\n\t\t} else {\n\t\t\tfmt.Println(\"Username and password updated successfully\")\n\t\t}\n\t}\n\n\tif webBasePath != \"\" {\n\t\terr := settingService.SetBasePath(webBasePath)\n\t\tif err != nil {\n\t\t\tfmt.Println(\"Failed to set base URI path:\", err)\n\t\t} else {\n\t\t\tfmt.Println(\"Base URI path set successfully\")\n\t\t}\n\t}\n\n\tif listenIP != \"\" {\n\t\terr := settingService.SetListen(listenIP)\n\t\tif err != nil {\n\t\t\tfmt.Println(\"Failed to set listen IP:\", err)\n\t\t} else {\n\t\t\tfmt.Printf(\"listen %v set successfully\", listenIP)\n\t\t}\n\t}\n}\n\nfunc updateCert(publicKey string, privateKey string) {\n\terr := database.InitDB(config.GetDBPath())\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\n\tif (privateKey != \"\" && publicKey != \"\") || (privateKey == \"\" && publicKey == \"\") {\n\t\tsettingService := service.SettingService{}\n\t\terr = settingService.SetCertFile(publicKey)\n\t\tif err != nil {\n\t\t\tfmt.Println(\"set certificate public key failed:\", err)\n\t\t} else {\n\t\t\tfmt.Println(\"set certificate public key success\")\n\t\t}\n\n\t\terr = settingService.SetKeyFile(privateKey)\n\t\tif err != nil {\n\t\t\tfmt.Println(\"set certificate private key failed:\", err)\n\t\t} else {\n\t\t\tfmt.Println(\"set certificate private key success\")\n\t\t}\n\t} else {\n\t\tfmt.Println(\"both public and private key should be entered.\")\n\t}\n}\n\nfunc GetCertificate(getCert bool) {\n\tif getCert {\n\t\tsettingService := service.SettingService{}\n\t\tcertFile, err := settingService.GetCertFile()\n\t\tif err != nil {\n\t\t\tfmt.Println(\"get cert file failed, error info:\", err)\n\t\t}\n\t\tkeyFile, err := settingService.GetKeyFile()\n\t\tif err != nil {\n\t\t\tfmt.Println(\"get key file failed, error info:\", err)\n\t\t}\n\n\t\tfmt.Println(\"cert:\", certFile)\n\t\tfmt.Println(\"key:\", keyFile)\n\t}\n}\n\nfunc GetListenIP(getListen bool) {\n\tif getListen {\n\n\t\tsettingService := service.SettingService{}\n\t\tListenIP, err := settingService.GetListen()\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Failed to retrieve listen IP: %v\", err)\n\t\t\treturn\n\t\t}\n\n\t\tfmt.Println(\"listenIP:\", ListenIP)\n\t}\n}\n\nfunc migrateDb() {\n\tinboundService := service.InboundService{}\n\n\terr := database.InitDB(config.GetDBPath())\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfmt.Println(\"Start migrating database...\")\n\tinboundService.MigrateDB()\n\tfmt.Println(\"Migration done!\")\n}\n\nfunc removeSecret() {\n\tuserService := service.UserService{}\n\n\tsecretExists, err := userService.CheckSecretExistence()\n\tif err != nil {\n\t\tfmt.Println(\"Error checking secret existence:\", err)\n\t\treturn\n\t}\n\n\tif !secretExists {\n\t\tfmt.Println(\"No secret exists to remove.\")\n\t\treturn\n\t}\n\n\terr = userService.RemoveUserSecret()\n\tif err != nil {\n\t\tfmt.Println(\"Error removing secret:\", err)\n\t\treturn\n\t}\n\n\tsettingService := service.SettingService{}\n\terr = settingService.SetSecretStatus(false)\n\tif err != nil {\n\t\tfmt.Println(\"Error updating secret status:\", err)\n\t\treturn\n\t}\n\n\tfmt.Println(\"Secret removed successfully.\")\n}\n\nfunc main() {\n\tif len(os.Args) < 2 {\n\t\trunWebServer()\n\t\treturn\n\t}\n\n\tvar showVersion bool\n\tflag.BoolVar(&showVersion, \"v\", false, \"show version\")\n\n\trunCmd := flag.NewFlagSet(\"run\", flag.ExitOnError)\n\n\tsettingCmd := flag.NewFlagSet(\"setting\", flag.ExitOnError)\n\tvar port int\n\tvar username string\n\tvar password string\n\tvar webBasePath string\n\tvar listenIP string\n\tvar getListen bool\n\tvar webCertFile string\n\tvar webKeyFile string\n\tvar tgbottoken string\n\tvar tgbotchatid string\n\tvar enabletgbot bool\n\tvar tgbotRuntime string\n\tvar reset bool\n\tvar show bool\n\tvar getCert bool\n\tvar remove_secret bool\n\tsettingCmd.BoolVar(&reset, \"reset\", false, \"Reset all settings\")\n\tsettingCmd.BoolVar(&show, \"show\", false, \"Display current settings\")\n\tsettingCmd.BoolVar(&remove_secret, \"remove_secret\", false, \"Remove secret key\")\n\tsettingCmd.IntVar(&port, \"port\", 0, \"Set panel port number\")\n\tsettingCmd.StringVar(&username, \"username\", \"\", \"Set login username\")\n\tsettingCmd.StringVar(&password, \"password\", \"\", \"Set login password\")\n\tsettingCmd.StringVar(&webBasePath, \"webBasePath\", \"\", \"Set base path for Panel\")\n\tsettingCmd.StringVar(&listenIP, \"listenIP\", \"\", \"set panel listenIP IP\")\n\tsettingCmd.BoolVar(&getListen, \"getListen\", false, \"Display current panel listenIP IP\")\n\tsettingCmd.BoolVar(&getCert, \"getCert\", false, \"Display current certificate settings\")\n\tsettingCmd.StringVar(&webCertFile, \"webCert\", \"\", \"Set path to public key file for panel\")\n\tsettingCmd.StringVar(&webKeyFile, \"webCertKey\", \"\", \"Set path to private key file for panel\")\n\tsettingCmd.StringVar(&tgbottoken, \"tgbottoken\", \"\", \"Set token for Telegram bot\")\n\tsettingCmd.StringVar(&tgbotRuntime, \"tgbotRuntime\", \"\", \"Set cron time for Telegram bot notifications\")\n\tsettingCmd.StringVar(&tgbotchatid, \"tgbotchatid\", \"\", \"Set chat ID for Telegram bot notifications\")\n\tsettingCmd.BoolVar(&enabletgbot, \"enabletgbot\", false, \"Enable notifications via Telegram bot\")\n\n\toldUsage := flag.Usage\n\tflag.Usage = func() {\n\t\toldUsage()\n\t\tfmt.Println()\n\t\tfmt.Println(\"Commands:\")\n\t\tfmt.Println(\"    run            run web panel\")\n\t\tfmt.Println(\"    migrate        migrate form other/old x-ui\")\n\t\tfmt.Println(\"    setting        set settings\")\n\t}\n\n\tflag.Parse()\n\tif showVersion {\n\t\tfmt.Println(config.GetVersion())\n\t\treturn\n\t}\n\n\tswitch os.Args[1] {\n\tcase \"run\":\n\t\terr := runCmd.Parse(os.Args[2:])\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\treturn\n\t\t}\n\t\trunWebServer()\n\tcase \"migrate\":\n\t\tmigrateDb()\n\tcase \"setting\":\n\t\terr := settingCmd.Parse(os.Args[2:])\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\treturn\n\t\t}\n\t\tif reset {\n\t\t\tresetSetting()\n\t\t} else {\n\t\t\tupdateSetting(port, username, password, webBasePath, listenIP)\n\t\t}\n\t\tif show {\n\t\t\tshowSetting(show)\n\t\t}\n\t\tif getListen {\n\t\t\tGetListenIP(getListen)\n\t\t}\n\t\tif getCert {\n\t\t\tGetCertificate(getCert)\n\t\t}\n\t\tif (tgbottoken != \"\") || (tgbotchatid != \"\") || (tgbotRuntime != \"\") {\n\t\t\tupdateTgbotSetting(tgbottoken, tgbotchatid, tgbotRuntime)\n\t\t}\n\t\tif remove_secret {\n\t\t\tremoveSecret()\n\t\t}\n\t\tif enabletgbot {\n\t\t\tupdateTgbotEnableSts(enabletgbot)\n\t\t}\n\tcase \"cert\":\n\t\terr := settingCmd.Parse(os.Args[2:])\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\treturn\n\t\t}\n\t\tif reset {\n\t\t\tupdateCert(\"\", \"\")\n\t\t} else {\n\t\t\tupdateCert(webCertFile, webKeyFile)\n\t\t}\n\tdefault:\n\t\tfmt.Println(\"Invalid subcommands\")\n\t\tfmt.Println()\n\t\trunCmd.Usage()\n\t\tfmt.Println()\n\t\tsettingCmd.Usage()\n\t}\n}\n"
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "sub",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        },
        {
          "name": "x-ui.service",
          "type": "blob",
          "size": 0.2685546875,
          "content": "[Unit]\nDescription=x-ui Service\nAfter=network.target\nWants=network.target\n\n[Service]\nEnvironment=\"XRAY_VMESS_AEAD_FORCED=false\"\nType=simple\nWorkingDirectory=/usr/local/x-ui/\nExecStart=/usr/local/x-ui/x-ui\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target"
        },
        {
          "name": "x-ui.sh",
          "type": "blob",
          "size": 63.0400390625,
          "content": "#!/bin/bash\n\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nblue='\\033[0;34m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\n\n#Add some basic function here\nfunction LOGD() {\n    echo -e \"${yellow}[DEG] $* ${plain}\"\n}\n\nfunction LOGE() {\n    echo -e \"${red}[ERR] $* ${plain}\"\n}\n\nfunction LOGI() {\n    echo -e \"${green}[INF] $* ${plain}\"\n}\n\n# check root\n[[ $EUID -ne 0 ]] && LOGE \"ERROR: You must be root to run this script! \\n\" && exit 1\n\n# Check OS and set release variable\nif [[ -f /etc/os-release ]]; then\n    source /etc/os-release\n    release=$ID\nelif [[ -f /usr/lib/os-release ]]; then\n    source /usr/lib/os-release\n    release=$ID\nelse\n    echo \"Failed to check the system OS, please contact the author!\" >&2\n    exit 1\nfi\n\necho \"The OS release is: $release\"\n\nos_version=\"\"\nos_version=$(grep \"^VERSION_ID\" /etc/os-release | cut -d '=' -f2 | tr -d '\"' | tr -d '.')\n\nif [[ \"${release}\" == \"arch\" ]]; then\n    echo \"Your OS is Arch Linux\"\nelif [[ \"${release}\" == \"parch\" ]]; then\n    echo \"Your OS is Parch Linux\"\nelif [[ \"${release}\" == \"manjaro\" ]]; then\n    echo \"Your OS is Manjaro\"\nelif [[ \"${release}\" == \"armbian\" ]]; then\n    echo \"Your OS is Armbian\"\nelif [[ \"${release}\" == \"alpine\" ]]; then\n    echo \"Your OS is Alpine Linux\"\nelif [[ \"${release}\" == \"opensuse-tumbleweed\" ]]; then\n    echo \"Your OS is OpenSUSE Tumbleweed\"\nelif [[ \"${release}\" == \"openEuler\" ]]; then\n    if [[ ${os_version} -lt 2203 ]]; then\n        echo -e \"${red} Please use OpenEuler 22.03 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"centos\" ]]; then\n    if [[ ${os_version} -lt 8 ]]; then\n        echo -e \"${red} Please use CentOS 8 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"ubuntu\" ]]; then\n    if [[ ${os_version} -lt 2004 ]]; then\n        echo -e \"${red} Please use Ubuntu 20 or higher version!${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"fedora\" ]]; then\n    if [[ ${os_version} -lt 36 ]]; then\n        echo -e \"${red} Please use Fedora 36 or higher version!${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"amzn\" ]]; then\n    if [[ ${os_version} != \"2023\" ]]; then\n        echo -e \"${red} Please use Amazon Linux 2023!${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"debian\" ]]; then\n    if [[ ${os_version} -lt 11 ]]; then\n        echo -e \"${red} Please use Debian 11 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"almalinux\" ]]; then\n    if [[ ${os_version} -lt 80 ]]; then\n        echo -e \"${red} Please use AlmaLinux 8.0 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"rocky\" ]]; then\n    if [[ ${os_version} -lt 8 ]]; then\n        echo -e \"${red} Please use Rocky Linux 8 or higher ${plain}\\n\" && exit 1\n    fi\nelif [[ \"${release}\" == \"ol\" ]]; then\n    if [[ ${os_version} -lt 8 ]]; then\n        echo -e \"${red} Please use Oracle Linux 8 or higher ${plain}\\n\" && exit 1\n    fi\nelse\n    echo -e \"${red}Your operating system is not supported by this script.${plain}\\n\"\n    echo \"Please ensure you are using one of the following supported operating systems:\"\n    echo \"- Ubuntu 20.04+\"\n    echo \"- Debian 11+\"\n    echo \"- CentOS 8+\"\n    echo \"- OpenEuler 22.03+\"\n    echo \"- Fedora 36+\"\n    echo \"- Arch Linux\"\n    echo \"- Parch Linux\"\n    echo \"- Manjaro\"\n    echo \"- Armbian\"\n    echo \"- AlmaLinux 8.0+\"\n    echo \"- Rocky Linux 8+\"\n    echo \"- Oracle Linux 8+\"\n    echo \"- OpenSUSE Tumbleweed\"\n    echo \"- Amazon Linux 2023\"\n    exit 1\nfi\n\n# Declare Variables\nlog_folder=\"${XUI_LOG_FOLDER:=/var/log}\"\niplimit_log_path=\"${log_folder}/3xipl.log\"\niplimit_banned_log_path=\"${log_folder}/3xipl-banned.log\"\n\nconfirm() {\n    if [[ $# > 1 ]]; then\n        echo && read -p \"$1 [Default $2]: \" temp\n        if [[ \"${temp}\" == \"\" ]]; then\n            temp=$2\n        fi\n    else\n        read -p \"$1 [y/n]: \" temp\n    fi\n    if [[ \"${temp}\" == \"y\" || \"${temp}\" == \"Y\" ]]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\nconfirm_restart() {\n    confirm \"Restart the panel, Attention: Restarting the panel will also restart xray\" \"y\"\n    if [[ $? == 0 ]]; then\n        restart\n    else\n        show_menu\n    fi\n}\n\nbefore_show_menu() {\n    echo && echo -n -e \"${yellow}Press enter to return to the main menu: ${plain}\" && read temp\n    show_menu\n}\n\ninstall() {\n    bash <(curl -Ls https://raw.githubusercontent.com/MHSanaei/3x-ui/main/install.sh)\n    if [[ $? == 0 ]]; then\n        if [[ $# == 0 ]]; then\n            start\n        else\n            start 0\n        fi\n    fi\n}\n\nupdate() {\n    confirm \"This function will forcefully reinstall the latest version, and the data will not be lost. Do you want to continue?\" \"y\"\n    if [[ $? != 0 ]]; then\n        LOGE \"Cancelled\"\n        if [[ $# == 0 ]]; then\n            before_show_menu\n        fi\n        return 0\n    fi\n    bash <(curl -Ls https://raw.githubusercontent.com/MHSanaei/3x-ui/main/install.sh)\n    if [[ $? == 0 ]]; then\n        LOGI \"Update is complete, Panel has automatically restarted \"\n        before_show_menu\n    fi\n}\n\nupdate_menu() {\n    echo -e \"${yellow}Updating Menu${plain}\"\n    confirm \"This function will update the menu to the latest changes.\" \"y\"\n    if [[ $? != 0 ]]; then\n        LOGE \"Cancelled\"\n        if [[ $# == 0 ]]; then\n            before_show_menu\n        fi\n        return 0\n    fi\n\n    wget --no-check-certificate -O /usr/bin/x-ui https://raw.githubusercontent.com/MHSanaei/3x-ui/main/x-ui.sh\n    chmod +x /usr/local/x-ui/x-ui.sh\n    chmod +x /usr/bin/x-ui\n\n    if [[ $? == 0 ]]; then\n        echo -e \"${green}Update successful. The panel has automatically restarted.${plain}\"\n        before_show_menu\n    else\n        echo -e \"${red}Failed to update the menu.${plain}\"\n        return 1\n    fi\n}\n\nlegacy_version() {\n    echo \"Enter the panel version (like 2.4.0):\"\n    read tag_version\n\n    if [ -z \"$tag_version\" ]; then\n        echo \"Panel version cannot be empty. Exiting.\"\n        exit 1\n    fi\n    # Use the entered panel version in the download link\n    install_command=\"bash <(curl -Ls \"https://raw.githubusercontent.com/mhsanaei/3x-ui/v$tag_version/install.sh\") v$tag_version\"\n\n    echo \"Downloading and installing panel version $tag_version...\"\n    eval $install_command\n}\n\n# Function to handle the deletion of the script file\ndelete_script() {\n    rm \"$0\" # Remove the script file itself\n    exit 1\n}\n\nuninstall() {\n    confirm \"Are you sure you want to uninstall the panel? xray will also uninstalled!\" \"n\"\n    if [[ $? != 0 ]]; then\n        if [[ $# == 0 ]]; then\n            show_menu\n        fi\n        return 0\n    fi\n    systemctl stop x-ui\n    systemctl disable x-ui\n    rm /etc/systemd/system/x-ui.service -f\n    systemctl daemon-reload\n    systemctl reset-failed\n    rm /etc/x-ui/ -rf\n    rm /usr/local/x-ui/ -rf\n\n    echo \"\"\n    echo -e \"Uninstalled Successfully.\\n\"\n    echo \"If you need to install this panel again, you can use below command:\"\n    echo -e \"${green}bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)${plain}\"\n    echo \"\"\n    # Trap the SIGTERM signal\n    trap delete_script SIGTERM\n    delete_script\n}\n\nreset_user() {\n    confirm \"Are you sure to reset the username and password of the panel?\" \"n\"\n    if [[ $? != 0 ]]; then\n        if [[ $# == 0 ]]; then\n            show_menu\n        fi\n        return 0\n    fi\n    read -rp \"Please set the login username [default is a random username]: \" config_account\n    [[ -z $config_account ]] && config_account=$(date +%s%N | md5sum | cut -c 1-8)\n    read -rp \"Please set the login password [default is a random password]: \" config_password\n    [[ -z $config_password ]] && config_password=$(date +%s%N | md5sum | cut -c 1-8)\n    /usr/local/x-ui/x-ui setting -username ${config_account} -password ${config_password} >/dev/null 2>&1\n    /usr/local/x-ui/x-ui setting -remove_secret >/dev/null 2>&1\n    echo -e \"Panel login username has been reset to: ${green} ${config_account} ${plain}\"\n    echo -e \"Panel login password has been reset to: ${green} ${config_password} ${plain}\"\n    echo -e \"${yellow} Panel login secret token disabled ${plain}\"\n    echo -e \"${green} Please use the new login username and password to access the X-UI panel. Also remember them! ${plain}\"\n    confirm_restart\n}\n\ngen_random_string() {\n    local length=\"$1\"\n    local random_string=$(LC_ALL=C tr -dc 'a-zA-Z0-9' </dev/urandom | fold -w \"$length\" | head -n 1)\n    echo \"$random_string\"\n}\n\nreset_webbasepath() {\n    echo -e \"${yellow}Resetting Web Base Path${plain}\"\n\n    read -rp \"Are you sure you want to reset the web base path? (y/n): \" confirm\n    if [[ $confirm != \"y\" && $confirm != \"Y\" ]]; then\n        echo -e \"${yellow}Operation canceled.${plain}\"\n        return\n    fi\n\n    config_webBasePath=$(gen_random_string 10)\n\n    # Apply the new web base path setting\n    /usr/local/x-ui/x-ui setting -webBasePath \"${config_webBasePath}\" >/dev/null 2>&1\n    \n    echo -e \"Web base path has been reset to: ${green}${config_webBasePath}${plain}\"\n    echo -e \"${green}Please use the new web base path to access the panel.${plain}\"\n    restart\n}\n\nreset_config() {\n    confirm \"Are you sure you want to reset all panel settings, Account data will not be lost, Username and password will not change\" \"n\"\n    if [[ $? != 0 ]]; then\n        if [[ $# == 0 ]]; then\n            show_menu\n        fi\n        return 0\n    fi\n    /usr/local/x-ui/x-ui setting -reset\n    echo -e \"All panel settings have been reset to default.\"\n    restart\n}\n\ncheck_config() {\n    local info=$(/usr/local/x-ui/x-ui setting -show true)\n    if [[ $? != 0 ]]; then\n        LOGE \"get current settings error, please check logs\"\n        show_menu\n        return\n    fi\n    LOGI \"${info}\"\n\n    local existing_webBasePath=$(echo \"$info\" | grep -Eo 'webBasePath: .+' | awk '{print $2}')\n    local existing_port=$(echo \"$info\" | grep -Eo 'port: .+' | awk '{print $2}')\n    local existing_cert=$(/usr/local/x-ui/x-ui setting -getCert true | grep -Eo 'cert: .+' | awk '{print $2}')\n    local server_ip=$(curl -s https://api.ipify.org)\n\n    if [[ -n \"$existing_cert\" ]]; then\n        local domain=$(basename \"$(dirname \"$existing_cert\")\")\n\n        if [[ \"$domain\" =~ ^[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$ ]]; then\n            echo -e \"${green}Access URL: https://${domain}:${existing_port}${existing_webBasePath}${plain}\"\n        else\n            echo -e \"${green}Access URL: https://${server_ip}:${existing_port}${existing_webBasePath}${plain}\"\n        fi\n    else\n        echo -e \"${green}Access URL: http://${server_ip}:${existing_port}${existing_webBasePath}${plain}\"\n    fi\n}\n\nset_port() {\n    echo && echo -n -e \"Enter port number[1-65535]: \" && read port\n    if [[ -z \"${port}\" ]]; then\n        LOGD \"Cancelled\"\n        before_show_menu\n    else\n        /usr/local/x-ui/x-ui setting -port ${port}\n        echo -e \"The port is set, Please restart the panel now, and use the new port ${green}${port}${plain} to access web panel\"\n        confirm_restart\n    fi\n}\n\nstart() {\n    check_status\n    if [[ $? == 0 ]]; then\n        echo \"\"\n        LOGI \"Panel is running, No need to start again, If you need to restart, please select restart\"\n    else\n        systemctl start x-ui\n        sleep 2\n        check_status\n        if [[ $? == 0 ]]; then\n            LOGI \"x-ui Started Successfully\"\n        else\n            LOGE \"panel Failed to start, Probably because it takes longer than two seconds to start, Please check the log information later\"\n        fi\n    fi\n\n    if [[ $# == 0 ]]; then\n        before_show_menu\n    fi\n}\n\nstop() {\n    check_status\n    if [[ $? == 1 ]]; then\n        echo \"\"\n        LOGI \"Panel stopped, No need to stop again!\"\n    else\n        systemctl stop x-ui\n        sleep 2\n        check_status\n        if [[ $? == 1 ]]; then\n            LOGI \"x-ui and xray stopped successfully\"\n        else\n            LOGE \"Panel stop failed, Probably because the stop time exceeds two seconds, Please check the log information later\"\n        fi\n    fi\n\n    if [[ $# == 0 ]]; then\n        before_show_menu\n    fi\n}\n\nrestart() {\n    systemctl restart x-ui\n    sleep 2\n    check_status\n    if [[ $? == 0 ]]; then\n        LOGI \"x-ui and xray Restarted successfully\"\n    else\n        LOGE \"Panel restart failed, Probably because it takes longer than two seconds to start, Please check the log information later\"\n    fi\n    if [[ $# == 0 ]]; then\n        before_show_menu\n    fi\n}\n\nstatus() {\n    systemctl status x-ui -l\n    if [[ $# == 0 ]]; then\n        before_show_menu\n    fi\n}\n\nenable() {\n    systemctl enable x-ui\n    if [[ $? == 0 ]]; then\n        LOGI \"x-ui Set to boot automatically on startup successfully\"\n    else\n        LOGE \"x-ui Failed to set Autostart\"\n    fi\n\n    if [[ $# == 0 ]]; then\n        before_show_menu\n    fi\n}\n\ndisable() {\n    systemctl disable x-ui\n    if [[ $? == 0 ]]; then\n        LOGI \"x-ui Autostart Cancelled successfully\"\n    else\n        LOGE \"x-ui Failed to cancel autostart\"\n    fi\n\n    if [[ $# == 0 ]]; then\n        before_show_menu\n    fi\n}\n\nshow_log() {\n    echo -e \"${green}\\t1.${plain} Debug Log\"\n    echo -e \"${green}\\t2.${plain} Clear All logs\"\n    echo -e \"${green}\\t0.${plain} Back to Main Menu\"\n    read -p \"Choose an option: \" choice\n\n    case \"$choice\" in\n    0)\n        show_menu\n        ;;\n    1)\n        journalctl -u x-ui -e --no-pager -f -p debug\n        if [[ $# == 0 ]]; then\n        before_show_menu\n        fi\n        ;;\n    2)\n        sudo journalctl --rotate\n        sudo journalctl --vacuum-time=1s\n        echo \"All Logs cleared.\"\n        restart\n        ;;\n    *)\n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        show_log\n        ;;\n    esac\n}\n\nshow_banlog() {\n    local system_log=\"/var/log/fail2ban.log\"\n    \n    echo -e \"${green}Checking ban logs...${plain}\\n\"\n    \n    if ! systemctl is-active --quiet fail2ban; then\n        echo -e \"${red}Fail2ban service is not running!${plain}\\n\"\n        return 1\n    fi\n\n    if [[ -f \"$system_log\" ]]; then\n        echo -e \"${green}Recent system ban activities from fail2ban.log:${plain}\"\n        grep \"3x-ipl\" \"$system_log\" | grep -E \"Ban|Unban\" | tail -n 10 || echo -e \"${yellow}No recent system ban activities found${plain}\"\n        echo \"\"\n    fi\n\n    if [[ -f \"${iplimit_banned_log_path}\" ]]; then\n        echo -e \"${green}3X-IPL ban log entries:${plain}\"\n        if [[ -s \"${iplimit_banned_log_path}\" ]]; then\n            grep -v \"INIT\" \"${iplimit_banned_log_path}\" | tail -n 10 || echo -e \"${yellow}No ban entries found${plain}\"\n        else\n            echo -e \"${yellow}Ban log file is empty${plain}\"\n        fi\n    else\n        echo -e \"${red}Ban log file not found at: ${iplimit_banned_log_path}${plain}\"\n    fi\n\n    echo -e \"\\n${green}Current jail status:${plain}\"\n    fail2ban-client status 3x-ipl || echo -e \"${yellow}Unable to get jail status${plain}\"\n}\n\nbbr_menu() {\n    echo -e \"${green}\\t1.${plain} Enable BBR\"\n    echo -e \"${green}\\t2.${plain} Disable BBR\"\n    echo -e \"${green}\\t0.${plain} Back to Main Menu\"\n    read -p \"Choose an option: \" choice\n    case \"$choice\" in\n    0)\n        show_menu\n        ;;\n    1)\n        enable_bbr\n        bbr_menu\n        ;;\n    2)\n        disable_bbr\n        bbr_menu\n        ;;\n    *) \n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        bbr_menu\n        ;;\n    esac\n}\n\ndisable_bbr() {\n\n    if ! grep -q \"net.core.default_qdisc=fq\" /etc/sysctl.conf || ! grep -q \"net.ipv4.tcp_congestion_control=bbr\" /etc/sysctl.conf; then\n        echo -e \"${yellow}BBR is not currently enabled.${plain}\"\n        before_show_menu\n    fi\n\n    # Replace BBR with CUBIC configurations\n    sed -i 's/net.core.default_qdisc=fq/net.core.default_qdisc=pfifo_fast/' /etc/sysctl.conf\n    sed -i 's/net.ipv4.tcp_congestion_control=bbr/net.ipv4.tcp_congestion_control=cubic/' /etc/sysctl.conf\n\n    # Apply changes\n    sysctl -p\n\n    # Verify that BBR is replaced with CUBIC\n    if [[ $(sysctl net.ipv4.tcp_congestion_control | awk '{print $3}') == \"cubic\" ]]; then\n        echo -e \"${green}BBR has been replaced with CUBIC successfully.${plain}\"\n    else\n        echo -e \"${red}Failed to replace BBR with CUBIC. Please check your system configuration.${plain}\"\n    fi\n}\n\nenable_bbr() {\n    if grep -q \"net.core.default_qdisc=fq\" /etc/sysctl.conf && grep -q \"net.ipv4.tcp_congestion_control=bbr\" /etc/sysctl.conf; then\n        echo -e \"${green}BBR is already enabled!${plain}\"\n        before_show_menu\n    fi\n\n    # Check the OS and install necessary packages\n    case \"${release}\" in\n    ubuntu | debian | armbian)\n        apt-get update && apt-get install -yqq --no-install-recommends ca-certificates\n        ;;\n    centos | almalinux | rocky | ol)\n        yum -y update && yum -y install ca-certificates\n        ;;\n    fedora | amzn)\n        dnf -y update && dnf -y install ca-certificates\n        ;;\n    arch | manjaro | parch)\n        pacman -Sy --noconfirm ca-certificates\n        ;;\n    *)\n        echo -e \"${red}Unsupported operating system. Please check the script and install the necessary packages manually.${plain}\\n\"\n        exit 1\n        ;;\n    esac\n\n    # Enable BBR\n    echo \"net.core.default_qdisc=fq\" | tee -a /etc/sysctl.conf\n    echo \"net.ipv4.tcp_congestion_control=bbr\" | tee -a /etc/sysctl.conf\n\n    # Apply changes\n    sysctl -p\n\n    # Verify that BBR is enabled\n    if [[ $(sysctl net.ipv4.tcp_congestion_control | awk '{print $3}') == \"bbr\" ]]; then\n        echo -e \"${green}BBR has been enabled successfully.${plain}\"\n    else\n        echo -e \"${red}Failed to enable BBR. Please check your system configuration.${plain}\"\n    fi\n}\n\nupdate_shell() {\n    wget -O /usr/bin/x-ui -N --no-check-certificate https://github.com/MHSanaei/3x-ui/raw/main/x-ui.sh\n    if [[ $? != 0 ]]; then\n        echo \"\"\n        LOGE \"Failed to download script, Please check whether the machine can connect Github\"\n        before_show_menu\n    else\n        chmod +x /usr/bin/x-ui\n        LOGI \"Upgrade script succeeded, Please rerun the script\" \n        before_show_menu\n    fi\n}\n\n# 0: running, 1: not running, 2: not installed\ncheck_status() {\n    if [[ ! -f /etc/systemd/system/x-ui.service ]]; then\n        return 2\n    fi\n    temp=$(systemctl status x-ui | grep Active | awk '{print $3}' | cut -d \"(\" -f2 | cut -d \")\" -f1)\n    if [[ \"${temp}\" == \"running\" ]]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncheck_enabled() {\n    temp=$(systemctl is-enabled x-ui)\n    if [[ \"${temp}\" == \"enabled\" ]]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncheck_uninstall() {\n    check_status\n    if [[ $? != 2 ]]; then\n        echo \"\"\n        LOGE \"Panel installed, Please do not reinstall\"\n        if [[ $# == 0 ]]; then\n            before_show_menu\n        fi\n        return 1\n    else\n        return 0\n    fi\n}\n\ncheck_install() {\n    check_status\n    if [[ $? == 2 ]]; then\n        echo \"\"\n        LOGE \"Please install the panel first\"\n        if [[ $# == 0 ]]; then\n            before_show_menu\n        fi\n        return 1\n    else\n        return 0\n    fi\n}\n\nshow_status() {\n    check_status\n    case $? in\n    0)\n        echo -e \"Panel state: ${green}Running${plain}\"\n        show_enable_status\n        ;;\n    1)\n        echo -e \"Panel state: ${yellow}Not Running${plain}\"\n        show_enable_status\n        ;;\n    2)\n        echo -e \"Panel state: ${red}Not Installed${plain}\"\n        ;;\n    esac\n    show_xray_status\n}\n\nshow_enable_status() {\n    check_enabled\n    if [[ $? == 0 ]]; then\n        echo -e \"Start automatically: ${green}Yes${plain}\"\n    else\n        echo -e \"Start automatically: ${red}No${plain}\"\n    fi\n}\n\ncheck_xray_status() {\n    count=$(ps -ef | grep \"xray-linux\" | grep -v \"grep\" | wc -l)\n    if [[ count -ne 0 ]]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\nshow_xray_status() {\n    check_xray_status\n    if [[ $? == 0 ]]; then\n        echo -e \"xray state: ${green}Running${plain}\"\n    else\n        echo -e \"xray state: ${red}Not Running${plain}\"\n    fi\n}\n\nfirewall_menu() {\n    echo -e \"${green}\\t1.${plain} ${green}Install${plain} Firewall\"\n    echo -e \"${green}\\t2.${plain} Port List [numbered]\"\n    echo -e \"${green}\\t3.${plain} ${green}Open${plain} Ports\"\n    echo -e \"${green}\\t4.${plain} ${red}Delete${plain} Ports from List\"\n    echo -e \"${green}\\t5.${plain} ${green}Enable${plain} Firewall\"\n    echo -e \"${green}\\t6.${plain} ${red}Disable${plain} Firewall\"\n    echo -e \"${green}\\t7.${plain} Firewall Status\"\n    echo -e \"${green}\\t0.${plain} Back to Main Menu\"\n    read -p \"Choose an option: \" choice\n    case \"$choice\" in\n    0)\n        show_menu\n        ;;\n    1)\n        install_firewall\n        firewall_menu\n        ;;\n    2)\n        ufw status numbered\n        firewall_menu\n        ;;\n    3)\n        open_ports\n        firewall_menu\n        ;;\n    4)\n        delete_ports\n        firewall_menu\n        ;;\n    5)\n        ufw enable\n        firewall_menu\n        ;;\n    6)\n        ufw disable\n        firewall_menu\n        ;;\n    7)\n        ufw status verbose\n        firewall_menu\n        ;;\n    *) \n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        firewall_menu\n        ;;\n    esac\n}\n\ninstall_firewall() {\n    if ! command -v ufw &>/dev/null; then\n        echo \"ufw firewall is not installed. Installing now...\"\n        apt-get update\n        apt-get install -y ufw\n    else\n        echo \"ufw firewall is already installed\"\n    fi\n\n    # Check if the firewall is inactive\n    if ufw status | grep -q \"Status: active\"; then\n        echo \"Firewall is already active\"\n    else\n        echo \"Activating firewall...\"\n        # Open the necessary ports\n        ufw allow ssh\n        ufw allow http\n        ufw allow https\n        ufw allow 2053/tcp #webPort\n        ufw allow 2096/tcp #subport\n\n        # Enable the firewall\n        ufw --force enable\n    fi\n}\n\nopen_ports() {\n    # Prompt the user to enter the ports they want to open\n    read -p \"Enter the ports you want to open (e.g. 80,443,2053 or range 400-500): \" ports\n\n    # Check if the input is valid\n    if ! [[ $ports =~ ^([0-9]+|[0-9]+-[0-9]+)(,([0-9]+|[0-9]+-[0-9]+))*$ ]]; then\n        echo \"Error: Invalid input. Please enter a comma-separated list of ports or a range of ports (e.g. 80,443,2053 or 400-500).\" >&2\n        exit 1\n    fi\n\n    # Open the specified ports using ufw\n    IFS=',' read -ra PORT_LIST <<<\"$ports\"\n    for port in \"${PORT_LIST[@]}\"; do\n        if [[ $port == *-* ]]; then\n            # Split the range into start and end ports\n            start_port=$(echo $port | cut -d'-' -f1)\n            end_port=$(echo $port | cut -d'-' -f2)\n            # Open the port range\n            ufw allow $start_port:$end_port/tcp\n            ufw allow $start_port:$end_port/udp\n        else\n            # Open the single port\n            ufw allow \"$port\"\n        fi\n    done\n\n    # Confirm that the ports are opened\n    echo \"Opened the specified ports:\"\n    for port in \"${PORT_LIST[@]}\"; do\n        if [[ $port == *-* ]]; then\n            start_port=$(echo $port | cut -d'-' -f1)\n            end_port=$(echo $port | cut -d'-' -f2)\n            # Check if the port range has been successfully opened\n            (ufw status | grep -q \"$start_port:$end_port\") && echo \"$start_port-$end_port\"\n        else\n            # Check if the individual port has been successfully opened\n            (ufw status | grep -q \"$port\") && echo \"$port\"\n        fi\n    done\n}\n\ndelete_ports() {\n    # Display current rules with numbers\n    echo \"Current UFW rules:\"\n    ufw status numbered\n\n    # Ask the user how they want to delete rules\n    echo \"Do you want to delete rules by:\"\n    echo \"1) Rule numbers\"\n    echo \"2) Ports\"\n    read -p \"Enter your choice (1 or 2): \" choice\n\n    if [[ $choice -eq 1 ]]; then\n        # Deleting by rule numbers\n        read -p \"Enter the rule numbers you want to delete (1, 2, etc.): \" rule_numbers\n\n        # Validate the input\n        if ! [[ $rule_numbers =~ ^([0-9]+)(,[0-9]+)*$ ]]; then\n            echo \"Error: Invalid input. Please enter a comma-separated list of rule numbers.\" >&2\n            exit 1\n        fi\n\n        # Split numbers into an array\n        IFS=',' read -ra RULE_NUMBERS <<<\"$rule_numbers\"\n        for rule_number in \"${RULE_NUMBERS[@]}\"; do\n            # Delete the rule by number\n            ufw delete \"$rule_number\" || echo \"Failed to delete rule number $rule_number\"\n        done\n\n        echo \"Selected rules have been deleted.\"\n\n    elif [[ $choice -eq 2 ]]; then\n        # Deleting by ports\n        read -p \"Enter the ports you want to delete (e.g. 80,443,2053 or range 400-500): \" ports\n\n        # Validate the input\n        if ! [[ $ports =~ ^([0-9]+|[0-9]+-[0-9]+)(,([0-9]+|[0-9]+-[0-9]+))*$ ]]; then\n            echo \"Error: Invalid input. Please enter a comma-separated list of ports or a range of ports (e.g. 80,443,2053 or 400-500).\" >&2\n            exit 1\n        fi\n\n        # Split ports into an array\n        IFS=',' read -ra PORT_LIST <<<\"$ports\"\n        for port in \"${PORT_LIST[@]}\"; do\n            if [[ $port == *-* ]]; then\n                # Split the port range\n                start_port=$(echo $port | cut -d'-' -f1)\n                end_port=$(echo $port | cut -d'-' -f2)\n                # Delete the port range\n                ufw delete allow $start_port:$end_port/tcp\n                ufw delete allow $start_port:$end_port/udp\n            else\n                # Delete a single port\n                ufw delete allow \"$port\"\n            fi\n        done\n\n        # Confirmation of deletion\n        echo \"Deleted the specified ports:\"\n        for port in \"${PORT_LIST[@]}\"; do\n            if [[ $port == *-* ]]; then\n                start_port=$(echo $port | cut -d'-' -f1)\n                end_port=$(echo $port | cut -d'-' -f2)\n                # Check if the port range has been deleted\n                (ufw status | grep -q \"$start_port:$end_port\") || echo \"$start_port-$end_port\"\n            else\n                # Check if the individual port has been deleted\n                (ufw status | grep -q \"$port\") || echo \"$port\"\n            fi\n        done\n    else\n        echo \"${red}Error:${plain} Invalid choice. Please enter 1 or 2.\" >&2\n        exit 1\n    fi\n}\n\n\nupdate_geo() {\n    echo -e \"${green}\\t1.${plain} Loyalsoldier (geoip.dat, geosite.dat)\"\n    echo -e \"${green}\\t2.${plain} chocolate4u (geoip_IR.dat, geosite_IR.dat)\"\n    echo -e \"${green}\\t3.${plain} runetfreedom (geoip_RU.dat, geosite_RU.dat)\"\n    echo -e \"${green}\\t0.${plain} Back to Main Menu\"\n    read -p \"Choose an option: \" choice\n\n    cd /usr/local/x-ui/bin\n\n    case \"$choice\" in\n    0)\n        show_menu\n        ;;\n    1)\n        systemctl stop x-ui\n        rm -f geoip.dat geosite.dat\n        wget -N https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat\n        wget -N https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat\n        echo -e \"${green}Loyalsoldier datasets have been updated successfully!${plain}\"\n        restart\n        ;;\n    2)\n        systemctl stop x-ui\n        rm -f geoip_IR.dat geosite_IR.dat\n        wget -O geoip_IR.dat -N https://github.com/chocolate4u/Iran-v2ray-rules/releases/latest/download/geoip.dat\n        wget -O geosite_IR.dat -N https://github.com/chocolate4u/Iran-v2ray-rules/releases/latest/download/geosite.dat\n        echo -e \"${green}chocolate4u datasets have been updated successfully!${plain}\"\n        restart\n        ;;\n    3)\n        systemctl stop x-ui\n        rm -f geoip_RU.dat geosite_RU.dat\n        wget -O geoip_RU.dat -N https://github.com/runetfreedom/russia-v2ray-rules-dat/releases/latest/download/geoip.dat\n        wget -O geosite_RU.dat -N https://github.com/runetfreedom/russia-v2ray-rules-dat/releases/latest/download/geosite.dat\n        echo -e \"${green}runetfreedom datasets have been updated successfully!${plain}\"\n        restart\n        ;;\n    *)\n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        update_geo\n        ;;\n    esac\n\n    before_show_menu\n}\n\ninstall_acme() {\n    # Check if acme.sh is already installed\n    if command -v ~/.acme.sh/acme.sh &>/dev/null; then\n        LOGI \"acme.sh is already installed.\"\n        return 0\n    fi\n\n    LOGI \"Installing acme.sh...\"\n    cd ~ || return 1 # Ensure you can change to the home directory\n\n    curl -s https://get.acme.sh | sh\n    if [ $? -ne 0 ]; then\n        LOGE \"Installation of acme.sh failed.\"\n        return 1\n    else\n        LOGI \"Installation of acme.sh succeeded.\"\n    fi\n\n    return 0\n}\n\nssl_cert_issue_main() {\n    echo -e \"${green}\\t1.${plain} Get SSL\"\n    echo -e \"${green}\\t2.${plain} Revoke\"\n    echo -e \"${green}\\t3.${plain} Force Renew\"\n    echo -e \"${green}\\t4.${plain} Show Existing Domains\"\n    echo -e \"${green}\\t5.${plain} Set Cert paths for the panel\"\n    echo -e \"${green}\\t0.${plain} Back to Main Menu\"\n\n    read -p \"Choose an option: \" choice\n    case \"$choice\" in\n    0)\n        show_menu\n        ;;\n    1)\n        ssl_cert_issue\n        ssl_cert_issue_main\n        ;;\n    2)\n        local domains=$(find /root/cert/ -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n        if [ -z \"$domains\" ]; then\n            echo \"No certificates found to revoke.\"\n        else\n            echo \"Existing domains:\"\n            echo \"$domains\"\n            read -p \"Please enter a domain from the list to revoke the certificate: \" domain\n            if echo \"$domains\" | grep -qw \"$domain\"; then\n                ~/.acme.sh/acme.sh --revoke -d ${domain}\n                LOGI \"Certificate revoked for domain: $domain\"\n            else\n                echo \"Invalid domain entered.\"\n            fi\n        fi\n        ssl_cert_issue_main\n        ;;\n    3)\n        local domains=$(find /root/cert/ -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n        if [ -z \"$domains\" ]; then\n            echo \"No certificates found to renew.\"\n        else\n            echo \"Existing domains:\"\n            echo \"$domains\"\n            read -p \"Please enter a domain from the list to renew the SSL certificate: \" domain\n            if echo \"$domains\" | grep -qw \"$domain\"; then\n                ~/.acme.sh/acme.sh --renew -d ${domain} --force\n                LOGI \"Certificate forcefully renewed for domain: $domain\"\n            else\n                echo \"Invalid domain entered.\"\n            fi\n        fi\n        ssl_cert_issue_main\n        ;;\n    4)\n        local domains=$(find /root/cert/ -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n        if [ -z \"$domains\" ]; then\n            echo \"No certificates found.\"\n        else\n            echo \"Existing domains and their paths:\"\n            for domain in $domains; do\n                local cert_path=\"/root/cert/${domain}/fullchain.pem\"\n                local key_path=\"/root/cert/${domain}/privkey.pem\"\n                if [[ -f \"${cert_path}\" && -f \"${key_path}\" ]]; then\n                    echo -e \"Domain: ${domain}\"\n                    echo -e \"\\tCertificate Path: ${cert_path}\"\n                    echo -e \"\\tPrivate Key Path: ${key_path}\"\n                else\n                    echo -e \"Domain: ${domain} - Certificate or Key missing.\"\n                fi\n            done\n        fi\n        ssl_cert_issue_main\n        ;;\n    5)\n        local domains=$(find /root/cert/ -mindepth 1 -maxdepth 1 -type d -exec basename {} \\;)\n        if [ -z \"$domains\" ]; then\n            echo \"No certificates found.\"\n        else\n            echo \"Available domains:\"\n            echo \"$domains\"\n            read -p \"Please choose a domain to set the panel paths: \" domain\n\n            if echo \"$domains\" | grep -qw \"$domain\"; then\n                local webCertFile=\"/root/cert/${domain}/fullchain.pem\"\n                local webKeyFile=\"/root/cert/${domain}/privkey.pem\"\n\n                if [[ -f \"${webCertFile}\" && -f \"${webKeyFile}\" ]]; then\n                    /usr/local/x-ui/x-ui cert -webCert \"$webCertFile\" -webCertKey \"$webKeyFile\"\n                    echo \"Panel paths set for domain: $domain\"\n                    echo \"  - Certificate File: $webCertFile\"\n                    echo \"  - Private Key File: $webKeyFile\"\n                    restart\n                else\n                    echo \"Certificate or private key not found for domain: $domain.\"\n                fi\n            else\n                echo \"Invalid domain entered.\"\n            fi\n        fi\n        ssl_cert_issue_main\n        ;;\n\n    *)\n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        ssl_cert_issue_main\n        ;;\n    esac\n}\n\nssl_cert_issue() {\n    local existing_webBasePath=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'webBasePath: .+' | awk '{print $2}')\n    local existing_port=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'port: .+' | awk '{print $2}')\n    # check for acme.sh first\n    if ! command -v ~/.acme.sh/acme.sh &>/dev/null; then\n        echo \"acme.sh could not be found. we will install it\"\n        install_acme\n        if [ $? -ne 0 ]; then\n            LOGE \"install acme failed, please check logs\"\n            exit 1\n        fi\n    fi\n\n    # install socat second\n    case \"${release}\" in\n    ubuntu | debian | armbian)\n        apt update && apt install socat -y\n        ;;\n    centos | almalinux | rocky | ol)\n        yum -y update && yum -y install socat\n        ;;\n    fedora | amzn)\n        dnf -y update && dnf -y install socat\n        ;;\n    arch | manjaro | parch)\n        pacman -Sy --noconfirm socat\n        ;;\n    *)\n        echo -e \"${red}Unsupported operating system. Please check the script and install the necessary packages manually.${plain}\\n\"\n        exit 1\n        ;;\n    esac\n    if [ $? -ne 0 ]; then\n        LOGE \"install socat failed, please check logs\"\n        exit 1\n    else\n        LOGI \"install socat succeed...\"\n    fi\n\n    # get the domain here, and we need to verify it\n    local domain=\"\"\n    read -p \"Please enter your domain name: \" domain\n    LOGD \"Your domain is: ${domain}, checking it...\"\n\n    # check if there already exists a certificate\n    local currentCert=$(~/.acme.sh/acme.sh --list | tail -1 | awk '{print $1}')\n    if [ \"${currentCert}\" == \"${domain}\" ]; then\n        local certInfo=$(~/.acme.sh/acme.sh --list)\n        LOGE \"System already has certificates for this domain. Cannot issue again. Current certificate details:\"\n        LOGI \"$certInfo\"\n        exit 1\n    else\n        LOGI \"Your domain is ready for issuing certificates now...\"\n    fi\n\n    # create a directory for the certificate\n    certPath=\"/root/cert/${domain}\"\n    if [ ! -d \"$certPath\" ]; then\n        mkdir -p \"$certPath\"\n    else\n        rm -rf \"$certPath\"\n        mkdir -p \"$certPath\"\n    fi\n\n    # get the port number for the standalone server\n    local WebPort=80\n    read -p \"Please choose which port to use (default is 80): \" WebPort\n    if [[ ${WebPort} -gt 65535 || ${WebPort} -lt 1 ]]; then\n        LOGE \"Your input ${WebPort} is invalid, will use default port 80.\"\n        WebPort=80\n    fi\n    LOGI \"Will use port: ${WebPort} to issue certificates. Please make sure this port is open.\"\n\n    # issue the certificate\n    ~/.acme.sh/acme.sh --set-default-ca --server letsencrypt\n    ~/.acme.sh/acme.sh --issue -d ${domain} --listen-v6 --standalone --httpport ${WebPort}\n    if [ $? -ne 0 ]; then\n        LOGE \"Issuing certificate failed, please check logs.\"\n        rm -rf ~/.acme.sh/${domain}\n        exit 1\n    else\n        LOGE \"Issuing certificate succeeded, installing certificates...\"\n    fi\n\n    # install the certificate\n    ~/.acme.sh/acme.sh --installcert -d ${domain} \\\n        --key-file /root/cert/${domain}/privkey.pem \\\n        --fullchain-file /root/cert/${domain}/fullchain.pem\n\n    if [ $? -ne 0 ]; then\n        LOGE \"Installing certificate failed, exiting.\"\n        rm -rf ~/.acme.sh/${domain}\n        exit 1\n    else\n        LOGI \"Installing certificate succeeded, enabling auto renew...\"\n    fi\n\n    # enable auto-renew\n    ~/.acme.sh/acme.sh --upgrade --auto-upgrade\n    if [ $? -ne 0 ]; then\n        LOGE \"Auto renew failed, certificate details:\"\n        ls -lah cert/*\n        chmod 755 $certPath/*\n        exit 1\n    else\n        LOGI \"Auto renew succeeded, certificate details:\"\n        ls -lah cert/*\n        chmod 755 $certPath/*\n    fi\n\n    # Prompt user to set panel paths after successful certificate installation\n    read -p \"Would you like to set this certificate for the panel? (y/n): \" setPanel\n    if [[ \"$setPanel\" == \"y\" || \"$setPanel\" == \"Y\" ]]; then\n        local webCertFile=\"/root/cert/${domain}/fullchain.pem\"\n        local webKeyFile=\"/root/cert/${domain}/privkey.pem\"\n\n        if [[ -f \"$webCertFile\" && -f \"$webKeyFile\" ]]; then\n            /usr/local/x-ui/x-ui cert -webCert \"$webCertFile\" -webCertKey \"$webKeyFile\"\n            LOGI \"Panel paths set for domain: $domain\"\n            LOGI \"  - Certificate File: $webCertFile\"\n            LOGI \"  - Private Key File: $webKeyFile\"\n            echo -e \"${green}Access URL: https://${domain}:${existing_port}${existing_webBasePath}${plain}\"\n            restart\n        else\n            LOGE \"Error: Certificate or private key file not found for domain: $domain.\"\n        fi\n    else\n        LOGI \"Skipping panel path setting.\"\n    fi\n}\n\nssl_cert_issue_CF() {\n    local existing_webBasePath=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'webBasePath: .+' | awk '{print $2}')\n    local existing_port=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'port: .+' | awk '{print $2}')\n    LOGI \"****** Instructions for Use ******\"\n    LOGI \"Follow the steps below to complete the process:\"\n    LOGI \"1. Cloudflare Registered E-mail.\"\n    LOGI \"2. Cloudflare Global API Key.\"\n    LOGI \"3. The Domain Name.\"\n    LOGI \"4. Once the certificate is issued, you will be prompted to set the certificate for the panel (optional).\"\n    LOGI \"5. The script also supports automatic renewal of the SSL certificate after installation.\"\n\n    confirm \"Do you confirm the information and wish to proceed? [y/n]\" \"y\"\n\n    if [ $? -eq 0 ]; then\n        # Check for acme.sh first\n        if ! command -v ~/.acme.sh/acme.sh &>/dev/null; then\n            echo \"acme.sh could not be found. We will install it.\"\n            install_acme\n            if [ $? -ne 0 ]; then\n                LOGE \"Install acme failed, please check logs.\"\n                exit 1\n            fi\n        fi\n\n        CF_Domain=\"\"\n        certPath=\"/root/cert-CF\"\n        if [ ! -d \"$certPath\" ]; then\n            mkdir -p $certPath\n        else\n            rm -rf $certPath\n            mkdir -p $certPath\n        fi\n\n        LOGD \"Please set a domain name:\"\n        read -p \"Input your domain here: \" CF_Domain\n        LOGD \"Your domain name is set to: ${CF_Domain}\"\n\n        # Set up Cloudflare API details\n        CF_GlobalKey=\"\"\n        CF_AccountEmail=\"\"\n        LOGD \"Please set the API key:\"\n        read -p \"Input your key here: \" CF_GlobalKey\n        LOGD \"Your API key is: ${CF_GlobalKey}\"\n\n        LOGD \"Please set up registered email:\"\n        read -p \"Input your email here: \" CF_AccountEmail\n        LOGD \"Your registered email address is: ${CF_AccountEmail}\"\n\n        # Set the default CA to Let's Encrypt\n        ~/.acme.sh/acme.sh --set-default-ca --server letsencrypt\n        if [ $? -ne 0 ]; then\n            LOGE \"Default CA, Let'sEncrypt fail, script exiting...\"\n            exit 1\n        fi\n\n        export CF_Key=\"${CF_GlobalKey}\"\n        export CF_Email=\"${CF_AccountEmail}\"\n\n        # Issue the certificate using Cloudflare DNS\n        ~/.acme.sh/acme.sh --issue --dns dns_cf -d ${CF_Domain} -d *.${CF_Domain} --log\n        if [ $? -ne 0 ]; then\n            LOGE \"Certificate issuance failed, script exiting...\"\n            exit 1\n        else\n            LOGI \"Certificate issued successfully, Installing...\"\n        fi\n\n        # Install the certificate\n        mkdir -p ${certPath}/${CF_Domain}\n        if [ $? -ne 0 ]; then\n            LOGE \"Failed to create directory: ${certPath}/${CF_Domain}\"\n            exit 1\n        fi\n\n        ~/.acme.sh/acme.sh --installcert -d ${CF_Domain} -d *.${CF_Domain} \\\n            --fullchain-file ${certPath}/${CF_Domain}/fullchain.pem \\\n            --key-file ${certPath}/${CF_Domain}/privkey.pem\n\n        if [ $? -ne 0 ]; then\n            LOGE \"Certificate installation failed, script exiting...\"\n            exit 1\n        else\n            LOGI \"Certificate installed successfully, Turning on automatic updates...\"\n        fi\n\n        # Enable auto-update\n        ~/.acme.sh/acme.sh --upgrade --auto-upgrade\n        if [ $? -ne 0 ]; then\n            LOGE \"Auto update setup failed, script exiting...\"\n            exit 1\n        else\n            LOGI \"The certificate is installed and auto-renewal is turned on. Specific information is as follows:\"\n            ls -lah ${certPath}/${CF_Domain}\n            chmod 755 ${certPath}/${CF_Domain}\n        fi\n\n        # Prompt user to set panel paths after successful certificate installation\n        read -p \"Would you like to set this certificate for the panel? (y/n): \" setPanel\n        if [[ \"$setPanel\" == \"y\" || \"$setPanel\" == \"Y\" ]]; then\n            local webCertFile=\"${certPath}/${CF_Domain}/fullchain.pem\"\n            local webKeyFile=\"${certPath}/${CF_Domain}/privkey.pem\"\n\n            if [[ -f \"$webCertFile\" && -f \"$webKeyFile\" ]]; then\n                /usr/local/x-ui/x-ui cert -webCert \"$webCertFile\" -webCertKey \"$webKeyFile\"\n                LOGI \"Panel paths set for domain: $CF_Domain\"\n                LOGI \"  - Certificate File: $webCertFile\"\n                LOGI \"  - Private Key File: $webKeyFile\"\n                echo -e \"${green}Access URL: https://${CF_Domain}:${existing_port}${existing_webBasePath}${plain}\"\n                restart\n            else\n                LOGE \"Error: Certificate or private key file not found for domain: $CF_Domain.\"\n            fi\n        else\n            LOGI \"Skipping panel path setting.\"\n        fi\n    else\n        show_menu\n    fi\n}\n\nrun_speedtest() {\n    # Check if Speedtest is already installed\n    if ! command -v speedtest &>/dev/null; then\n        # If not installed, determine installation method\n        if command -v snap &>/dev/null; then\n            # Use snap to install Speedtest\n            echo \"Installing Speedtest using snap...\"\n            snap install speedtest\n        else\n            # Fallback to using package managers\n            local pkg_manager=\"\"\n            local speedtest_install_script=\"\"\n\n            if command -v dnf &>/dev/null; then\n                pkg_manager=\"dnf\"\n                speedtest_install_script=\"https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.rpm.sh\"\n            elif command -v yum &>/dev/null; then\n                pkg_manager=\"yum\"\n                speedtest_install_script=\"https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.rpm.sh\"\n            elif command -v apt-get &>/dev/null; then\n                pkg_manager=\"apt-get\"\n                speedtest_install_script=\"https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh\"\n            elif command -v apt &>/dev/null; then\n                pkg_manager=\"apt\"\n                speedtest_install_script=\"https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh\"\n            fi\n\n            if [[ -z $pkg_manager ]]; then\n                echo \"Error: Package manager not found. You may need to install Speedtest manually.\"\n                return 1\n            else\n                echo \"Installing Speedtest using $pkg_manager...\"\n                curl -s $speedtest_install_script | bash\n                $pkg_manager install -y speedtest\n            fi\n        fi\n    fi\n\n    speedtest\n}\n\ncreate_iplimit_jails() {\n    # Use default bantime if not passed => 30 minutes\n    local bantime=\"${1:-30}\"\n\n    # Uncomment 'allowipv6 = auto' in fail2ban.conf\n    sed -i 's/#allowipv6 = auto/allowipv6 = auto/g' /etc/fail2ban/fail2ban.conf\n\n    # On Debian 12+ fail2ban's default backend should be changed to systemd\n    if [[  \"${release}\" == \"debian\" && ${os_version} -ge 12 ]]; then\n        sed -i '0,/action =/s/backend = auto/backend = systemd/' /etc/fail2ban/jail.conf\n    fi\n\n    cat << EOF > /etc/fail2ban/jail.d/3x-ipl.conf\n[3x-ipl]\nenabled=true\nbackend=auto\nfilter=3x-ipl\naction=3x-ipl\nlogpath=${iplimit_log_path}\nmaxretry=2\nfindtime=32\nbantime=${bantime}m\nEOF\n\n    cat << EOF > /etc/fail2ban/filter.d/3x-ipl.conf\n[Definition]\ndatepattern = ^%%Y/%%m/%%d %%H:%%M:%%S\nfailregex   = \\[LIMIT_IP\\]\\s*Email\\s*=\\s*<F-USER>.+</F-USER>\\s*\\|\\|\\s*SRC\\s*=\\s*<ADDR>\nignoreregex =\nEOF\n\n    cat << EOF > /etc/fail2ban/action.d/3x-ipl.conf\n[INCLUDES]\nbefore = iptables-allports.conf\n\n[Definition]\nactionstart = <iptables> -N f2b-<name>\n              <iptables> -A f2b-<name> -j <returntype>\n              <iptables> -I <chain> -p <protocol> -j f2b-<name>\n\nactionstop = <iptables> -D <chain> -p <protocol> -j f2b-<name>\n             <actionflush>\n             <iptables> -X f2b-<name>\n\nactioncheck = <iptables> -n -L <chain> | grep -q 'f2b-<name>[ \\t]'\n\nactionban = <iptables> -I f2b-<name> 1 -s <ip> -j <blocktype>\n            echo \"\\$(date +\"%%Y/%%m/%%d %%H:%%M:%%S\")   BAN   [Email] = <F-USER> [IP] = <ip> banned for <bantime> seconds.\" >> ${iplimit_banned_log_path}\n\nactionunban = <iptables> -D f2b-<name> -s <ip> -j <blocktype>\n              echo \"\\$(date +\"%%Y/%%m/%%d %%H:%%M:%%S\")   UNBAN   [Email] = <F-USER> [IP] = <ip> unbanned.\" >> ${iplimit_banned_log_path}\n\n[Init]\nname = default\nprotocol = tcp\nchain = INPUT\nEOF\n\n    echo -e \"${green}Ip Limit jail files created with a bantime of ${bantime} minutes.${plain}\"\n}\n\niplimit_remove_conflicts() {\n    local jail_files=(\n        /etc/fail2ban/jail.conf\n        /etc/fail2ban/jail.local\n    )\n\n    for file in \"${jail_files[@]}\"; do\n        # Check for [3x-ipl] config in jail file then remove it\n        if test -f \"${file}\" && grep -qw '3x-ipl' ${file}; then\n            sed -i \"/\\[3x-ipl\\]/,/^$/d\" ${file}\n            echo -e \"${yellow}Removing conflicts of [3x-ipl] in jail (${file})!${plain}\\n\"\n        fi\n    done\n}\n\nip_validation() {\n    ipv6_regex=\"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$\"\n    ipv4_regex=\"^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)$\"\n}\n\niplimit_main() {\n    echo -e \"\\n${green}\\t1.${plain} Install Fail2ban and configure IP Limit\"\n    echo -e \"${green}\\t2.${plain} Change Ban Duration\"\n    echo -e \"${green}\\t3.${plain} Unban Everyone\"\n    echo -e \"${green}\\t4.${plain} Ban Logs\"\n    echo -e \"${green}\\t5.${plain} Ban an IP Address\"\n    echo -e \"${green}\\t6.${plain} Unban an IP Address\"\n    echo -e \"${green}\\t7.${plain} Real-Time Logs\"\n    echo -e \"${green}\\t8.${plain} Service Status\"\n    echo -e \"${green}\\t9.${plain} Service Restart\"\n    echo -e \"${green}\\t10.${plain} Uninstall Fail2ban and IP Limit\"\n    echo -e \"${green}\\t0.${plain} Back to Main Menu\"\n    read -p \"Choose an option: \" choice\n    case \"$choice\" in\n    0)\n        show_menu\n        ;;\n    1)\n        confirm \"Proceed with installation of Fail2ban & IP Limit?\" \"y\"\n        if [[ $? == 0 ]]; then\n            install_iplimit\n        else\n            iplimit_main\n        fi\n        ;;\n    2)\n        read -rp \"Please enter new Ban Duration in Minutes [default 30]: \" NUM\n        if [[ $NUM =~ ^[0-9]+$ ]]; then\n            create_iplimit_jails ${NUM}\n            systemctl restart fail2ban\n        else\n            echo -e \"${red}${NUM} is not a number! Please, try again.${plain}\"\n        fi\n        iplimit_main\n        ;;\n    3)\n        confirm \"Proceed with Unbanning everyone from IP Limit jail?\" \"y\"\n        if [[ $? == 0 ]]; then\n            fail2ban-client reload --restart --unban 3x-ipl\n            truncate -s 0 \"${iplimit_banned_log_path}\"\n            echo -e \"${green}All users Unbanned successfully.${plain}\"\n            iplimit_main\n        else\n            echo -e \"${yellow}Cancelled.${plain}\"\n        fi\n        iplimit_main\n        ;;\n    4)\n        show_banlog\n        iplimit_main\n        ;;\n    5)\n        read -rp \"Enter the IP address you want to ban: \" ban_ip\n        ip_validation\n        if [[ $ban_ip =~ $ipv4_regex || $ban_ip =~ $ipv6_regex ]]; then\n            fail2ban-client set 3x-ipl banip \"$ban_ip\"\n            echo -e \"${green}IP Address ${ban_ip} has been banned successfully.${plain}\"\n        else\n            echo -e \"${red}Invalid IP address format! Please try again.${plain}\"\n        fi\n        iplimit_main\n        ;;\n    6)\n        read -rp \"Enter the IP address you want to unban: \" unban_ip\n        ip_validation\n        if [[ $unban_ip =~ $ipv4_regex || $unban_ip =~ $ipv6_regex ]]; then\n            fail2ban-client set 3x-ipl unbanip \"$unban_ip\"\n            echo -e \"${green}IP Address ${unban_ip} has been unbanned successfully.${plain}\"\n        else\n            echo -e \"${red}Invalid IP address format! Please try again.${plain}\"\n        fi\n        iplimit_main\n        ;;\n    7)\n        tail -f /var/log/fail2ban.log\n        iplimit_main\n        ;;\n    8)\n        service fail2ban status\n        iplimit_main\n        ;;\n    9)\n        systemctl restart fail2ban\n        iplimit_main\n        ;;\n    10)\n        remove_iplimit\n        iplimit_main\n        ;;\n    *)\n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        iplimit_main\n        ;;\n    esac\n}\n\ninstall_iplimit() {\n    if ! command -v fail2ban-client &>/dev/null; then\n        echo -e \"${green}Fail2ban is not installed. Installing now...!${plain}\\n\"\n\n        # Check the OS and install necessary packages\n        case \"${release}\" in\n        ubuntu)\n            if [[ \"${os_version}\" -ge 24 ]]; then\n                apt update && apt install python3-pip -y\n                python3 -m pip install pyasynchat --break-system-packages\n            fi\n            apt update && apt install fail2ban -y\n            ;;\n        debian | armbian)\n            apt update && apt install fail2ban -y\n            ;;\n        centos | almalinux | rocky | ol)\n            yum update -y && yum install epel-release -y\n            yum -y install fail2ban\n            ;;\n        fedora | amzn)\n            dnf -y update && dnf -y install fail2ban\n            ;;\n        arch | manjaro | parch)\n            pacman -Syu --noconfirm fail2ban\n            ;;\n        *)\n            echo -e \"${red}Unsupported operating system. Please check the script and install the necessary packages manually.${plain}\\n\"\n            exit 1\n            ;;\n        esac\n\n        if ! command -v fail2ban-client &>/dev/null; then\n            echo -e \"${red}Fail2ban installation failed.${plain}\\n\"\n            exit 1\n        fi\n\n        echo -e \"${green}Fail2ban installed successfully!${plain}\\n\"\n    else\n        echo -e \"${yellow}Fail2ban is already installed.${plain}\\n\"\n    fi\n\n    echo -e \"${green}Configuring IP Limit...${plain}\\n\"\n\n    # make sure there's no conflict for jail files\n    iplimit_remove_conflicts\n\n    # Check if log file exists\n    if ! test -f \"${iplimit_banned_log_path}\"; then\n        touch ${iplimit_banned_log_path}\n    fi\n\n    # Check if service log file exists so fail2ban won't return error\n    if ! test -f \"${iplimit_log_path}\"; then\n        touch ${iplimit_log_path}\n    fi\n\n    # Create the iplimit jail files\n    # we didn't pass the bantime here to use the default value\n    create_iplimit_jails\n\n    # Launching fail2ban\n    if ! systemctl is-active --quiet fail2ban; then\n        systemctl start fail2ban\n        systemctl enable fail2ban\n    else\n        systemctl restart fail2ban\n    fi\n    systemctl enable fail2ban\n\n    echo -e \"${green}IP Limit installed and configured successfully!${plain}\\n\"\n    before_show_menu\n}\n\nremove_iplimit() {\n    echo -e \"${green}\\t1.${plain} Only remove IP Limit configurations\"\n    echo -e \"${green}\\t2.${plain} Uninstall Fail2ban and IP Limit\"\n    echo -e \"${green}\\t0.${plain} Back to Main Menu\"\n    read -p \"Choose an option: \" num\n    case \"$num\" in\n    1)\n        rm -f /etc/fail2ban/filter.d/3x-ipl.conf\n        rm -f /etc/fail2ban/action.d/3x-ipl.conf\n        rm -f /etc/fail2ban/jail.d/3x-ipl.conf\n        systemctl restart fail2ban\n        echo -e \"${green}IP Limit removed successfully!${plain}\\n\"\n        before_show_menu\n        ;;\n    2)\n        rm -rf /etc/fail2ban\n        systemctl stop fail2ban\n        case \"${release}\" in\n        ubuntu | debian | armbian)\n            apt-get remove -y fail2ban\n            apt-get purge -y fail2ban -y\n            apt-get autoremove -y\n            ;;\n        centos | almalinux | rocky | ol)\n            yum remove fail2ban -y\n            yum autoremove -y\n            ;;\n        fedora | amzn)\n            dnf remove fail2ban -y\n            dnf autoremove -y\n            ;;\n        arch | manjaro | parch)\n            pacman -Rns --noconfirm fail2ban\n            ;;\n        *)\n            echo -e \"${red}Unsupported operating system. Please uninstall Fail2ban manually.${plain}\\n\"\n            exit 1\n            ;;\n        esac\n        echo -e \"${green}Fail2ban and IP Limit removed successfully!${plain}\\n\"\n        before_show_menu\n        ;;\n    0)\n        show_menu\n        ;;\n    *)\n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        remove_iplimit\n        ;;\n    esac\n}\n\nSSH_port_forwarding() {\n    local server_ip=$(curl -s https://api.ipify.org)\n    local existing_webBasePath=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'webBasePath: .+' | awk '{print $2}')\n    local existing_port=$(/usr/local/x-ui/x-ui setting -show true | grep -Eo 'port: .+' | awk '{print $2}')\n    local existing_listenIP=$(/usr/local/x-ui/x-ui setting -getListen true | grep -Eo 'listenIP: .+' | awk '{print $2}')\n    local existing_cert=$(/usr/local/x-ui/x-ui setting -getCert true | grep -Eo 'cert: .+' | awk '{print $2}')\n    local existing_key=$(/usr/local/x-ui/x-ui setting -getCert true | grep -Eo 'key: .+' | awk '{print $2}')\n\n    local config_listenIP=\"\"\n    local listen_choice=\"\"\n\n    if [[ -n \"$existing_cert\" && -n \"$existing_key\" ]]; then\n        echo -e \"${green}Panel is secure with SSL.${plain}\"\n        before_show_menu\n    fi\n    if [[ -z \"$existing_cert\" && -z \"$existing_key\" && (-z \"$existing_listenIP\" || \"$existing_listenIP\" == \"0.0.0.0\") ]]; then\n        echo -e \"\\n${red}Warning: No Cert and Key found! The panel is not secure.${plain}\"\n        echo \"Please obtain a certificate or set up SSH port forwarding.\"\n    fi\n\n    if [[ -n \"$existing_listenIP\" && \"$existing_listenIP\" != \"0.0.0.0\" && (-z \"$existing_cert\" && -z \"$existing_key\") ]]; then\n        echo -e \"\\n${green}Current SSH Port Forwarding Configuration:${plain}\"\n        echo -e \"Standard SSH command:\"\n        echo -e \"${yellow}ssh -L 2222:${existing_listenIP}:${existing_port} root@${server_ip}${plain}\"\n        echo -e \"\\nIf using SSH key:\"\n        echo -e \"${yellow}ssh -i <sshkeypath> -L 2222:${existing_listenIP}:${existing_port} root@${server_ip}${plain}\"\n        echo -e \"\\nAfter connecting, access the panel at:\"\n        echo -e \"${yellow}http://localhost:2222${existing_webBasePath}${plain}\"\n    fi\n\n    echo -e \"\\nChoose an option:\"\n    echo -e \"${green}1.${plain} Set listen IP\"\n    echo -e \"${green}2.${plain} Clear listen IP\"\n    echo -e \"${green}0.${plain} Back to Main Menu\"\n    read -p \"Choose an option: \" num\n\n    case \"$num\" in\n    1)\n        if [[ -z \"$existing_listenIP\" || \"$existing_listenIP\" == \"0.0.0.0\" ]]; then\n            echo -e \"\\nNo listenIP configured. Choose an option:\"\n            echo -e \"1. Use default IP (127.0.0.1)\"\n            echo -e \"2. Set a custom IP\"\n            read -p \"Select an option (1 or 2): \" listen_choice\n\n            config_listenIP=\"127.0.0.1\"\n            [[ \"$listen_choice\" == \"2\" ]] && read -p \"Enter custom IP to listen on: \" config_listenIP\n\n            /usr/local/x-ui/x-ui setting -listenIP \"${config_listenIP}\" >/dev/null 2>&1\n            echo -e \"${green}listen IP has been set to ${config_listenIP}.${plain}\"\n            echo -e \"\\n${green}SSH Port Forwarding Configuration:${plain}\"\n            echo -e \"Standard SSH command:\"\n            echo -e \"${yellow}ssh -L 2222:${config_listenIP}:${existing_port} root@${server_ip}${plain}\"\n            echo -e \"\\nIf using SSH key:\"\n            echo -e \"${yellow}ssh -i <sshkeypath> -L 2222:${config_listenIP}:${existing_port} root@${server_ip}${plain}\"\n            echo -e \"\\nAfter connecting, access the panel at:\"\n            echo -e \"${yellow}http://localhost:2222${existing_webBasePath}${plain}\"\n            restart\n        else\n            config_listenIP=\"${existing_listenIP}\"\n            echo -e \"${green}Current listen IP is already set to ${config_listenIP}.${plain}\"\n        fi\n        ;;\n    2)\n        /usr/local/x-ui/x-ui setting -listenIP 0.0.0.0 >/dev/null 2>&1\n        echo -e \"${green}Listen IP has been cleared.${plain}\"\n        restart\n        ;;\n    0)\n        show_menu\n        ;;\n    *)\n        echo -e \"${red}Invalid option. Please select a valid number.${plain}\\n\"\n        SSH_port_forwarding\n        ;;\n    esac\n}\n\nshow_usage() {\n    echo -e \"┌───────────────────────────────────────────────────────┐\n│  ${blue}x-ui control menu usages (subcommands):${plain}              │\n│                                                       │\n│  ${blue}x-ui${plain}              - Admin Management Script          │\n│  ${blue}x-ui start${plain}        - Start                            │\n│  ${blue}x-ui stop${plain}         - Stop                             │\n│  ${blue}x-ui restart${plain}      - Restart                          │\n│  ${blue}x-ui status${plain}       - Current Status                   │\n│  ${blue}x-ui settings${plain}     - Current Settings                 │\n│  ${blue}x-ui enable${plain}       - Enable Autostart on OS Startup   │\n│  ${blue}x-ui disable${plain}      - Disable Autostart on OS Startup  │\n│  ${blue}x-ui log${plain}          - Check logs                       │\n│  ${blue}x-ui banlog${plain}       - Check Fail2ban ban logs          │\n│  ${blue}x-ui update${plain}       - Update                           │\n│  ${blue}x-ui legacy${plain}       - legacy version                   │\n│  ${blue}x-ui install${plain}      - Install                          │\n│  ${blue}x-ui uninstall${plain}    - Uninstall                        │\n└───────────────────────────────────────────────────────┘\"\n}\n\nshow_menu() {\n    echo -e \"\n╔────────────────────────────────────────────────╗\n│   ${green}3X-UI Panel Management Script${plain}                │\n│   ${green}0.${plain} Exit Script                               │\n│────────────────────────────────────────────────│\n│   ${green}1.${plain} Install                                   │\n│   ${green}2.${plain} Update                                    │\n│   ${green}3.${plain} Update Menu                               │\n│   ${green}4.${plain} Legacy Version                            │\n│   ${green}5.${plain} Uninstall                                 │\n│────────────────────────────────────────────────│\n│   ${green}6.${plain} Reset Username & Password & Secret Token  │\n│   ${green}7.${plain} Reset Web Base Path                       │\n│   ${green}8.${plain} Reset Settings                            │\n│   ${green}9.${plain} Change Port                               │\n│  ${green}10.${plain} View Current Settings                     │\n│────────────────────────────────────────────────│\n│  ${green}11.${plain} Start                                     │\n│  ${green}12.${plain} Stop                                      │\n│  ${green}13.${plain} Restart                                   │\n│  ${green}14.${plain} Check Status                              │\n│  ${green}15.${plain} Logs Management                           │\n│────────────────────────────────────────────────│\n│  ${green}16.${plain} Enable Autostart                          │\n│  ${green}17.${plain} Disable Autostart                         │\n│────────────────────────────────────────────────│\n│  ${green}18.${plain} SSL Certificate Management                │\n│  ${green}19.${plain} Cloudflare SSL Certificate                │\n│  ${green}20.${plain} IP Limit Management                       │\n│  ${green}21.${plain} Firewall Management                       │\n│  ${green}22.${plain} SSH Port Forwarding Management            │\n│────────────────────────────────────────────────│\n│  ${green}23.${plain} Enable BBR                                │\n│  ${green}24.${plain} Update Geo Files                          │\n│  ${green}25.${plain} Speedtest by Ookla                        │\n╚────────────────────────────────────────────────╝\n\"\n    show_status\n    echo && read -p \"Please enter your selection [0-25]: \" num\n\n    case \"${num}\" in\n    0)\n        exit 0\n        ;;\n    1)\n        check_uninstall && install\n        ;;\n    2)\n        check_install && update\n        ;;\n    3)\n        check_install && update_menu\n        ;;\n    4)\n        check_install && legacy_version\n        ;;\n    5)\n        check_install && uninstall\n        ;;\n    6)\n        check_install && reset_user\n        ;;\n    7)\n        check_install && reset_webbasepath\n        ;;\n    8)\n        check_install && reset_config\n        ;;\n    9)\n        check_install && set_port\n        ;;\n    10)\n        check_install && check_config\n        ;;\n    11)\n        check_install && start\n        ;;\n    12)\n        check_install && stop\n        ;;\n    13)\n        check_install && restart\n        ;;\n    14)\n        check_install && status\n        ;;\n    15)\n        check_install && show_log\n        ;;\n    16)\n        check_install && enable\n        ;;\n    17)\n        check_install && disable\n        ;;\n    18)\n        ssl_cert_issue_main\n        ;;\n    19)\n        ssl_cert_issue_CF\n        ;;\n    20)\n        iplimit_main\n        ;;\n    21)\n        firewall_menu\n        ;;\n    22)\n        SSH_port_forwarding\n        ;;\n    23)\n        bbr_menu\n        ;;\n    24)\n        update_geo\n        ;;\n    25)\n        run_speedtest\n        ;;\n    *)\n        LOGE \"Please enter the correct number [0-25]\"\n        ;;\n    esac\n}\n\nif [[ $# > 0 ]]; then\n    case $1 in\n    \"start\")\n        check_install 0 && start 0\n        ;;\n    \"stop\")\n        check_install 0 && stop 0\n        ;;\n    \"restart\")\n        check_install 0 && restart 0\n        ;;\n    \"status\")\n        check_install 0 && status 0\n        ;;\n    \"settings\")\n        check_install 0 && check_config 0\n        ;;\n    \"enable\")\n        check_install 0 && enable 0\n        ;;\n    \"disable\")\n        check_install 0 && disable 0\n        ;;\n    \"log\")\n        check_install 0 && show_log 0\n        ;;\n    \"banlog\")\n        check_install 0 && show_banlog 0\n        ;;\n    \"update\")\n        check_install 0 && update 0\n        ;;\n    \"legacy\")\n        check_install 0 && legacy_version 0\n        ;;\n    \"install\")\n        check_uninstall 0 && install 0\n        ;;\n    \"uninstall\")\n        check_install 0 && uninstall 0\n        ;;\n    *) show_usage ;;\n    esac\nelse\n    show_menu\nfi\n"
        },
        {
          "name": "xray",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}