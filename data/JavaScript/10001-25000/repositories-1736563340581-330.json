{
  "metadata": {
    "timestamp": 1736563340581,
    "page": 330,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "novnc/noVNC",
      "stars": 11891,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": "*.pyc\n*.o\ntests/data_*.js\nutils/rebind.so\nutils/websockify\n/node_modules\n/build\n/lib\nrecordings\n*.swp\n*~\nnoVNC-*.tgz\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.349609375,
          "content": "maintainers:\n- Samuel Mannehed for Cendio AB (@samhed)\n- Pierre Ossman for Cendio AB (@CendioOssman)\nmaintainersEmeritus:\n- Joel Martin (@kanaka)\n- Solly Ross (@directxman12)\n- @astrand \ncontributors:\n# There are a bunch of people that should be here.\n# If you want to be on this list, feel free send a PR\n# to add yourself.\n- jalf <git@jalf.dk>\n- NTT corp.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 2.1123046875,
          "content": "noVNC is Copyright (C) 2022 The noVNC authors\n(./AUTHORS)\n\nThe noVNC core library files are licensed under the MPL 2.0 (Mozilla\nPublic License 2.0). The noVNC core library is composed of the\nJavascript code necessary for full noVNC operation. This includes (but\nis not limited to):\n\n    core/**/*.js\n    app/*.js\n    test/playback.js\n\nThe HTML, CSS, font and images files that included with the noVNC\nsource distibution (or repository) are not considered part of the\nnoVNC core library and are licensed under more permissive licenses.\nThe intent is to allow easy integration of noVNC into existing web\nsites and web applications.\n\nThe HTML, CSS, font and image files are licensed as follows:\n\n    *.html                     : 2-Clause BSD license\n\n    app/styles/*.css           : 2-Clause BSD license\n\n    app/styles/Orbitron*       : SIL Open Font License 1.1\n                                 (Copyright 2009 Matt McInerney)\n\n    app/images/                : Creative Commons Attribution-ShareAlike\n                                 http://creativecommons.org/licenses/by-sa/3.0/\n\nSome portions of noVNC are copyright to their individual authors.\nPlease refer to the individual source files and/or to the noVNC commit\nhistory: https://github.com/novnc/noVNC/commits/master\n\nThe are several files and projects that have been incorporated into\nthe noVNC core library. Here is a list of those files and the original\nlicenses (all MPL 2.0 compatible):\n\n    core/base64.js          : MPL 2.0\n\n    core/des.js             : Various BSD style licenses\n\n    vendor/pako/            : MIT\n\nAny other files not mentioned above are typically marked with\na copyright/license header at the top of the file. The default noVNC\nlicense is MPL-2.0.\n\nThe following license texts are included:\n\n    docs/LICENSE.MPL-2.0\n    docs/LICENSE.OFL-1.1\n    docs/LICENSE.BSD-3-Clause (New BSD)\n    docs/LICENSE.BSD-2-Clause (Simplified BSD / FreeBSD)\n    vendor/pako/LICENSE (MIT)\n\nOr alternatively the license texts may be found here:\n\n    http://www.mozilla.org/MPL/2.0/\n    http://scripts.sil.org/OFL\n    http://en.wikipedia.org/wiki/BSD_licenses\n    https://opensource.org/licenses/MIT\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.400390625,
          "content": "## noVNC: HTML VNC client library and application\n\n[![Test Status](https://github.com/novnc/noVNC/workflows/Test/badge.svg)](https://github.com/novnc/noVNC/actions?query=workflow%3ATest)\n[![Lint Status](https://github.com/novnc/noVNC/workflows/Lint/badge.svg)](https://github.com/novnc/noVNC/actions?query=workflow%3ALint)\n\n### Description\n\nnoVNC is both a HTML VNC client JavaScript library and an application built on\ntop of that library. noVNC runs well in any modern browser including mobile\nbrowsers (iOS and Android).\n\nMany companies, projects and products have integrated noVNC including\n[OpenStack](http://www.openstack.org),\n[OpenNebula](http://opennebula.org/),\n[LibVNCServer](http://libvncserver.sourceforge.net), and\n[ThinLinc](https://cendio.com/thinlinc). See\n[the Projects and companies wiki page](https://github.com/novnc/noVNC/wiki/Projects-and-companies-using-noVNC)\nfor a more complete list with additional info and links.\n\n### Table of contents\n\n- [News/help/contact](#newshelpcontact)\n- [Features](#features)\n- [Screenshots](#screenshots)\n- [Browser requirements](#browser-requirements)\n- [Server requirements](#server-requirements)\n- [Quick start](#quick-start)\n- [Installation from snap package](#installation-from-snap-package)\n- [Integration and deployment](#integration-and-deployment)\n- [Authors/Contributors](#authorscontributors)\n\n### News/help/contact\n\nThe project website is found at [novnc.com](http://novnc.com).\n\nIf you are a noVNC developer/integrator/user (or want to be) please join the\n[noVNC discussion group](https://groups.google.com/forum/?fromgroups#!forum/novnc).\n\nBugs and feature requests can be submitted via\n[github issues](https://github.com/novnc/noVNC/issues). If you have questions\nabout using noVNC then please first use the\n[discussion group](https://groups.google.com/forum/?fromgroups#!forum/novnc).\nWe also have a [wiki](https://github.com/novnc/noVNC/wiki/) with lots of\nhelpful information.\n\nIf you are looking for a place to start contributing to noVNC, a good place to\nstart would be the issues that are marked as\n[\"patchwelcome\"](https://github.com/novnc/noVNC/issues?labels=patchwelcome).\nPlease check our\n[contribution guide](https://github.com/novnc/noVNC/wiki/Contributing) though.\n\nIf you want to show appreciation for noVNC you could donate to a great non-\nprofits such as:\n[Compassion International](http://www.compassion.com/),\n[SIL](http://www.sil.org),\n[Habitat for Humanity](http://www.habitat.org),\n[Electronic Frontier Foundation](https://www.eff.org/),\n[Against Malaria Foundation](http://www.againstmalaria.com/),\n[Nothing But Nets](http://www.nothingbutnets.net/), etc.\n\n\n### Features\n\n* Supports all modern browsers including mobile (iOS, Android)\n* Supported authentication methods: none, classical VNC, RealVNC's\n  RSA-AES, Tight, VeNCrypt Plain, XVP, Apple's Diffie-Hellman,\n  UltraVNC's MSLogonII\n* Supported VNC encodings: raw, copyrect, rre, hextile, tight, tightPNG,\n  ZRLE, JPEG, Zlib\n* Supports scaling, clipping and resizing the desktop\n* Local cursor rendering\n* Clipboard copy/paste with full Unicode support\n* Translations\n* Touch gestures for emulating common mouse actions\n* Licensed mainly under the [MPL 2.0](http://www.mozilla.org/MPL/2.0/), see\n  [the license document](LICENSE.txt) for details\n\n### Screenshots\n\nRunning in Firefox before and after connecting:\n\n<img src=\"http://novnc.com/img/noVNC-1-login.png\" width=400>&nbsp;\n<img src=\"http://novnc.com/img/noVNC-3-connected.png\" width=400>\n\nSee more screenshots\n[here](http://novnc.com/screenshots.html).\n\n\n### Browser requirements\n\nnoVNC uses many modern web technologies so a formal requirement list is\nnot available. However these are the minimum versions we are currently\naware of:\n\n* Chrome 89, Firefox 89, Safari 15, Opera 75, Edge 89\n\n\n### Server requirements\n\nnoVNC follows the standard VNC protocol, but unlike other VNC clients it does\nrequire WebSockets support. Many servers include support (e.g.\n[x11vnc/libvncserver](http://libvncserver.sourceforge.net/),\n[QEMU](http://www.qemu.org/), and\n[MobileVNC](http://www.smartlab.at/mobilevnc/)), but for the others you need to\nuse a WebSockets to TCP socket proxy. noVNC has a sister project\n[websockify](https://github.com/novnc/websockify) that provides a simple such\nproxy.\n\n\n### Quick start\n\n* Use the `novnc_proxy` script to automatically download and start websockify, which\n  includes a mini-webserver and the WebSockets proxy. The `--vnc` option is\n  used to specify the location of a running VNC server:\n\n    `./utils/novnc_proxy --vnc localhost:5901`\n    \n* If you don't need to expose the web server to public internet, you can\n  bind to localhost:\n  \n    `./utils/novnc_proxy --vnc localhost:5901 --listen localhost:6081`\n\n* Point your browser to the cut-and-paste URL that is output by the `novnc_proxy`\n  script. Hit the Connect button, enter a password if the VNC server has one\n  configured, and enjoy!\n\n### Installation from snap package\nRunning the command below will install the latest release of noVNC from snap:\n\n`sudo snap install novnc`\n\n#### Running noVNC from snap directly\n\nYou can run the snap package installed novnc directly with, for example:\n\n`novnc --listen 6081 --vnc localhost:5901 # /snap/bin/novnc if /snap/bin is not in your PATH`\n\nIf you want to use certificate files, due to standard snap confinement restrictions you need to have them in the /home/\\<user\\>/snap/novnc/current/ directory. If your username is jsmith an example command would be:\n  \n  `novnc --listen 8443 --cert ~jsmith/snap/novnc/current/self.crt --key ~jsmith/snap/novnc/current/self.key --vnc ubuntu.example.com:5901`\n\n#### Running noVNC from snap as a service (daemon)\nThe snap package also has the capability to run a 'novnc' service which can be\nconfigured to listen on multiple ports connecting to multiple VNC servers \n(effectively a service runing multiple instances of novnc).\nInstructions (with example values):\n\nList current services (out-of-box this will be blank):\n\n```\nsudo snap get novnc services\nKey             Value\nservices.n6080  {...}\nservices.n6081  {...}\n```\n\nCreate a new service that listens on port 6082 and connects to the VNC server \nrunning on port 5902 on localhost:\n\n`sudo snap set novnc services.n6082.listen=6082 services.n6082.vnc=localhost:5902`\n\n(Any services you define with 'snap set' will be automatically started)\nNote that the name of the service, 'n6082' in this example, can be anything \nas long as it doesn't start with a number or contain spaces/special characters.\n\nView the configuration of the service just created:\n\n```\nsudo snap get novnc services.n6082\nKey                    Value\nservices.n6082.listen  6082\nservices.n6082.vnc     localhost:5902\n```\n\nDisable a service (note that because of a limitation in snap it's currently not\npossible to unset config variables, setting them to blank values is the way \nto disable a service):\n\n`sudo snap set novnc services.n6082.listen='' services.n6082.vnc=''`\n\n(Any services you set to blank with 'snap set' like this will be automatically stopped)\n\nVerify that the service is disabled (blank values):\n\n```\nsudo snap get novnc services.n6082\nKey                    Value\nservices.n6082.listen  \nservices.n6082.vnc\n```\n\n### Integration and deployment\n\nPlease see our other documents for how to integrate noVNC in your own software,\nor deploying the noVNC application in production environments:\n\n* [Embedding](docs/EMBEDDING.md) - For the noVNC application\n* [Library](docs/LIBRARY.md) - For the noVNC JavaScript library\n\n\n### Authors/Contributors\n\nSee [AUTHORS](AUTHORS) for a (full-ish) list of authors.  If you're not on\nthat list and you think you should be, feel free to send a PR to fix that.\n\n* Core team:\n    * [Samuel Mannehed](https://github.com/samhed) (Cendio)\n    * [Pierre Ossman](https://github.com/CendioOssman) (Cendio)\n\n* Previous core contributors:\n    * [Joel Martin](https://github.com/kanaka) (Project founder)\n    * [Solly Ross](https://github.com/DirectXMan12) (Red Hat / OpenStack)\n\n* Notable contributions:\n    * UI and icons : Pierre Ossman, Chris Gordon\n    * Original logo : Michael Sersen\n    * tight encoding : Michael Tinglof (Mercuri.ca)\n    * RealVNC RSA AES authentication : USTC Vlab Team\n\n* Included libraries:\n    * base64 : Martijn Pieters (Digital Creations 2), Samuel Sieb (sieb.net)\n    * DES : Dave Zimmerman (Widget Workshop), Jef Poskanzer (ACME Labs)\n    * Pako : Vitaly Puzrin (https://github.com/nodeca/pako)\n\nDo you want to be on this list? Check out our\n[contribution guide](https://github.com/novnc/noVNC/wiki/Contributing) and\nstart hacking!\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "defaults.json",
          "type": "blob",
          "size": 0.0029296875,
          "content": "{}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "eslint.config.mjs",
          "type": "blob",
          "size": 3.6494140625,
          "content": "import globals from \"globals\";\nimport js from \"@eslint/js\";\n\nexport default [\n    js.configs.recommended,\n    {\n        languageOptions: {\n            ecmaVersion: 2022,\n            sourceType: \"module\",\n            globals: {\n                ...globals.browser,\n                ...globals.es2022,\n            }\n        },\n        ignores: [\"**/xtscancodes.js\"],\n        rules: {\n            // Unsafe or confusing stuff that we forbid\n\n            \"no-unused-vars\": [\"error\", { \"vars\": \"all\",\n                                          \"args\": \"none\",\n                                          \"ignoreRestSiblings\": true,\n                                          \"caughtErrors\": \"none\" }],\n            \"no-constant-condition\": [\"error\", { \"checkLoops\": false }],\n            \"no-var\": \"error\",\n            \"no-useless-constructor\": \"error\",\n            \"object-shorthand\": [\"error\", \"methods\", { \"avoidQuotes\": true }],\n            \"prefer-arrow-callback\": \"error\",\n            \"arrow-body-style\": [\"error\", \"as-needed\", { \"requireReturnForObjectLiteral\": false } ],\n            \"arrow-parens\": [\"error\", \"as-needed\", { \"requireForBlockBody\": true }],\n            \"arrow-spacing\": [\"error\"],\n            \"no-confusing-arrow\": [\"error\", { \"allowParens\": true }],\n\n            // Enforced coding style\n\n            \"brace-style\": [\"error\", \"1tbs\", { \"allowSingleLine\": true }],\n            \"indent\": [\"error\", 4, { \"SwitchCase\": 1,\n                                     \"VariableDeclarator\": \"first\",\n                                     \"FunctionDeclaration\": { \"parameters\": \"first\" },\n                                     \"FunctionExpression\": { \"parameters\": \"first\" },\n                                     \"CallExpression\": { \"arguments\": \"first\" },\n                                     \"ArrayExpression\": \"first\",\n                                     \"ObjectExpression\": \"first\",\n                                     \"ImportDeclaration\": \"first\",\n                                     \"ignoreComments\": true }],\n            \"comma-spacing\": [\"error\"],\n            \"comma-style\": [\"error\"],\n            \"curly\": [\"error\", \"multi-line\"],\n            \"func-call-spacing\": [\"error\"],\n            \"func-names\": [\"error\"],\n            \"func-style\": [\"error\", \"declaration\", { \"allowArrowFunctions\": true }],\n            \"key-spacing\": [\"error\"],\n            \"keyword-spacing\": [\"error\"],\n            \"no-trailing-spaces\": [\"error\"],\n            \"semi\": [\"error\"],\n            \"space-before-blocks\": [\"error\"],\n            \"space-before-function-paren\": [\"error\", { \"anonymous\": \"always\",\n                                                       \"named\": \"never\",\n                                                       \"asyncArrow\": \"always\" }],\n            \"switch-colon-spacing\": [\"error\"],\n            \"camelcase\": [\"error\", { \"allow\": [\"^XK_\", \"^XF86XK_\"] }],\n            \"no-console\": [\"error\"],\n        }\n    },\n    {\n        files: [\"po/po2js\", \"po/xgettext-html\"],\n        languageOptions: {\n            globals: {\n                ...globals.node,\n            }\n        },\n        rules: {\n            \"no-console\": 0,\n        },\n    },\n    {\n        files: [\"tests/*\"],\n        languageOptions: {\n            globals: {\n                ...globals.node,\n                ...globals.mocha,\n                sinon: false,\n                expect: false,\n            }\n        },\n        rules: {\n            \"prefer-arrow-callback\": 0,\n            // Too many anonymous callbacks\n            \"func-names\": \"off\",\n        },\n    },\n    {\n        files: [\"utils/*\"],\n        languageOptions: {\n            globals: {\n                ...globals.node,\n            }\n        },\n        rules: {\n            \"no-console\": 0,\n        },\n    },\n];\n"
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 2.603515625,
          "content": "// Karma configuration\n\n// The Safari launcher is broken, so construct our own\nfunction SafariBrowser(id, baseBrowserDecorator, args) {\n  baseBrowserDecorator(this);\n\n  this._start = function(url) {\n    this._execCommand('/usr/bin/open', ['-W', '-n', '-a', 'Safari', url]);\n  }\n}\n\nSafariBrowser.prototype = {\n  name: 'Safari'\n}\n\nmodule.exports = (config) => {\n  let browsers = [];\n\n  if (process.env.TEST_BROWSER_NAME) {\n    browsers = process.env.TEST_BROWSER_NAME.split(',');\n  }\n\n  const my_conf = {\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['mocha'],\n\n    // list of files / patterns to load in the browser\n    files: [\n      // node modules\n      { pattern: 'node_modules/chai/**', included: false },\n      { pattern: 'node_modules/sinon/**', included: false },\n      { pattern: 'node_modules/sinon-chai/**', included: false },\n      // modules to test\n      { pattern: 'app/localization.js', included: false, type: 'module' },\n      { pattern: 'app/webutil.js', included: false, type: 'module' },\n      { pattern: 'core/**/*.js', included: false, type: 'module' },\n      { pattern: 'vendor/pako/**/*.js', included: false, type: 'module' },\n      // tests\n      { pattern: 'tests/test.*.js', type: 'module' },\n      // test support files\n      { pattern: 'tests/fake.*.js', included: false, type: 'module' },\n      { pattern: 'tests/assertions.js', type: 'module' },\n    ],\n\n    client: {\n      mocha: {\n        // replace Karma debug page with mocha display\n        'reporter': 'html',\n        'ui': 'bdd'\n      }\n    },\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n    plugins: [\n      'karma-*',\n      '@chiragrupani/karma-chromium-edge-launcher',\n      { 'launcher:Safari': [ 'type', SafariBrowser ] },\n    ],\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: browsers,\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['mocha'],\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: false,\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: true,\n  };\n\n  config.set(my_conf);\n};\n"
        },
        {
          "name": "mandatory.json",
          "type": "blob",
          "size": 0.0029296875,
          "content": "{}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.78515625,
          "content": "{\n  \"name\": \"@novnc/novnc\",\n  \"version\": \"1.5.0\",\n  \"description\": \"An HTML5 VNC client\",\n  \"browser\": \"lib/rfb\",\n  \"directories\": {\n    \"lib\": \"lib\",\n    \"doc\": \"docs\",\n    \"test\": \"tests\"\n  },\n  \"files\": [\n    \"lib\",\n    \"AUTHORS\",\n    \"VERSION\",\n    \"docs/API.md\",\n    \"docs/LIBRARY.md\",\n    \"docs/LICENSE*\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint app core po/po2js po/xgettext-html tests utils\",\n    \"test\": \"karma start karma.conf.js\",\n    \"prepublish\": \"node ./utils/convert.js --clean\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/novnc/noVNC.git\"\n  },\n  \"author\": \"Joel Martin <github@martintribe.org> (https://github.com/kanaka)\",\n  \"contributors\": [\n    \"Samuel Mannehed <samuel@cendio.se> (https://github.com/samhed)\",\n    \"Pierre Ossman <ossman@cendio.se> (https://github.com/CendioOssman)\"\n  ],\n  \"license\": \"MPL-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/novnc/noVNC/issues\"\n  },\n  \"homepage\": \"https://github.com/novnc/noVNC\",\n  \"devDependencies\": {\n    \"@babel/core\": \"latest\",\n    \"@babel/preset-env\": \"latest\",\n    \"babel-plugin-import-redirect\": \"latest\",\n    \"browserify\": \"latest\",\n    \"chai\": \"latest\",\n    \"commander\": \"latest\",\n    \"eslint\": \"latest\",\n    \"fs-extra\": \"latest\",\n    \"globals\": \"latest\",\n    \"jsdom\": \"latest\",\n    \"karma\": \"latest\",\n    \"karma-mocha\": \"latest\",\n    \"karma-chrome-launcher\": \"latest\",\n    \"@chiragrupani/karma-chromium-edge-launcher\": \"latest\",\n    \"karma-firefox-launcher\": \"latest\",\n    \"karma-ie-launcher\": \"latest\",\n    \"karma-mocha-reporter\": \"latest\",\n    \"karma-safari-launcher\": \"latest\",\n    \"karma-script-launcher\": \"latest\",\n    \"mocha\": \"latest\",\n    \"pofile\": \"latest\",\n    \"sinon\": \"latest\",\n    \"sinon-chai\": \"latest\"\n  },\n  \"dependencies\": {},\n  \"keywords\": [\n    \"vnc\",\n    \"rfb\",\n    \"novnc\",\n    \"websockify\"\n  ]\n}\n"
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "vnc.html",
          "type": "blob",
          "size": 16.4873046875,
          "content": "<!DOCTYPE html>\n<html lang=\"en\" class=\"noVNC_loading\">\n<head>\n\n    <!--\n    noVNC example: simple example using default UI\n    Copyright (C) 2019 The noVNC authors\n    noVNC is licensed under the MPL 2.0 (see LICENSE.txt)\n    This file is licensed under the 2-Clause BSD license (see LICENSE.txt).\n\n    Connect parameters are provided in query string:\n        http://example.com/?host=HOST&port=PORT&encrypt=1\n    or the fragment:\n        http://example.com/#host=HOST&port=PORT&encrypt=1\n    -->\n    <title>noVNC</title>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"app/images/icons/novnc.ico\">\n    <meta name=\"theme-color\" content=\"#313131\">\n\n    <!-- Apple iOS Safari settings -->\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n\n    <!-- @2x -->\n    <link rel=\"apple-touch-icon\" sizes=\"40x40\" type=\"image/png\" href=\"app/images/icons/novnc-ios-40.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"58x58\" type=\"image/png\" href=\"app/images/icons/novnc-ios-58.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"80x80\" type=\"image/png\" href=\"app/images/icons/novnc-ios-80.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"120x120\" type=\"image/png\" href=\"app/images/icons/novnc-ios-120.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"152x152\" type=\"image/png\" href=\"app/images/icons/novnc-ios-152.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"167x167\" type=\"image/png\" href=\"app/images/icons/novnc-ios-167.png\">\n    <!-- @3x -->\n    <link rel=\"apple-touch-icon\" sizes=\"60x60\" type=\"image/png\" href=\"app/images/icons/novnc-ios-60.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"87x87\" type=\"image/png\" href=\"app/images/icons/novnc-ios-87.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"120x120\" type=\"image/png\" href=\"app/images/icons/novnc-ios-120.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" type=\"image/png\" href=\"app/images/icons/novnc-ios-180.png\">\n\n    <!-- Stylesheets -->\n    <link rel=\"stylesheet\" href=\"app/styles/base.css\">\n    <link rel=\"stylesheet\" href=\"app/styles/input.css\">\n\n    <!-- Images that will later appear via CSS -->\n    <link rel=\"preload\" as=\"image\" href=\"app/images/info.svg\">\n    <link rel=\"preload\" as=\"image\" href=\"app/images/error.svg\">\n    <link rel=\"preload\" as=\"image\" href=\"app/images/warning.svg\">\n\n    <script type=\"module\" crossorigin=\"anonymous\" src=\"app/error-handler.js\"></script>\n\n    <script type=\"module\">\n        import UI from \"./app/ui.js\";\n        import * as Log from './core/util/logging.js';\n\n        let response;\n\n        let defaults = {};\n        let mandatory = {};\n\n        // Default settings will be loaded from defaults.json. Mandatory\n        // settings will be loaded from mandatory.json, which the user\n        // cannot change.\n\n        try {\n            response = await fetch('./defaults.json');\n            if (!response.ok) {\n                throw Error(\"\" + response.status + \" \" + response.statusText);\n            }\n\n            defaults = await response.json();\n        } catch (err) {\n            Log.Error(\"Couldn't fetch defaults.json: \" + err);\n        }\n\n        try {\n            response = await fetch('./mandatory.json');\n            if (!response.ok) {\n                throw Error(\"\" + response.status + \" \" + response.statusText);\n            }\n\n            mandatory = await response.json();\n        } catch (err) {\n            Log.Error(\"Couldn't fetch mandatory.json: \" + err);\n        }\n\n        // You can also override any defaults you need here:\n        //\n        // defaults['host'] = 'vnc.example.com';\n\n        // Or force a specific setting, preventing the user from\n        // changing it:\n        //\n        // mandatory['view_only'] = true;\n\n        // See docs/EMBEDDING.md for a list of possible settings.\n\n        UI.start({ settings: { defaults: defaults,\n                               mandatory: mandatory } });\n    </script>\n</head>\n\n<body>\n\n    <div id=\"noVNC_fallback_error\" class=\"noVNC_center\">\n        <div>\n            <div>noVNC encountered an error:</div>\n            <br>\n            <div id=\"noVNC_fallback_errormsg\"></div>\n        </div>\n    </div>\n\n    <!-- noVNC control bar -->\n    <div id=\"noVNC_control_bar_anchor\" class=\"noVNC_vcenter\">\n\n        <div id=\"noVNC_control_bar\">\n            <div id=\"noVNC_control_bar_handle\" title=\"Hide/Show the control bar\"><div></div></div>\n\n            <div class=\"noVNC_scroll\">\n\n            <h1 class=\"noVNC_logo\" translate=\"no\"><span>no</span><br>VNC</h1>\n\n            <hr>\n\n            <!-- Drag/Pan the viewport -->\n            <input type=\"image\" alt=\"Drag\" src=\"app/images/drag.svg\"\n                id=\"noVNC_view_drag_button\" class=\"noVNC_button noVNC_hidden\"\n                title=\"Move/Drag viewport\">\n\n            <!--noVNC touch device only buttons-->\n            <div id=\"noVNC_mobile_buttons\">\n                <input type=\"image\" alt=\"Keyboard\" src=\"app/images/keyboard.svg\"\n                    id=\"noVNC_keyboard_button\" class=\"noVNC_button\" title=\"Show keyboard\">\n            </div>\n\n            <!-- Extra manual keys -->\n            <input type=\"image\" alt=\"Extra keys\" src=\"app/images/toggleextrakeys.svg\"\n                id=\"noVNC_toggle_extra_keys_button\" class=\"noVNC_button\"\n                title=\"Show extra keys\">\n            <div class=\"noVNC_vcenter\">\n            <div id=\"noVNC_modifiers\" class=\"noVNC_panel\">\n                <input type=\"image\" alt=\"Ctrl\" src=\"app/images/ctrl.svg\"\n                    id=\"noVNC_toggle_ctrl_button\" class=\"noVNC_button\"\n                    title=\"Toggle Ctrl\">\n                <input type=\"image\" alt=\"Alt\" src=\"app/images/alt.svg\"\n                    id=\"noVNC_toggle_alt_button\" class=\"noVNC_button\"\n                    title=\"Toggle Alt\">\n                <input type=\"image\" alt=\"Windows\" src=\"app/images/windows.svg\"\n                    id=\"noVNC_toggle_windows_button\" class=\"noVNC_button\"\n                    title=\"Toggle Windows\">\n                <input type=\"image\" alt=\"Tab\" src=\"app/images/tab.svg\"\n                    id=\"noVNC_send_tab_button\" class=\"noVNC_button\"\n                    title=\"Send Tab\">\n                <input type=\"image\" alt=\"Esc\" src=\"app/images/esc.svg\"\n                    id=\"noVNC_send_esc_button\" class=\"noVNC_button\"\n                    title=\"Send Escape\">\n                <input type=\"image\" alt=\"Ctrl+Alt+Del\" src=\"app/images/ctrlaltdel.svg\"\n                    id=\"noVNC_send_ctrl_alt_del_button\" class=\"noVNC_button\"\n                    title=\"Send Ctrl-Alt-Del\">\n            </div>\n            </div>\n\n            <!-- Shutdown/Reboot -->\n            <input type=\"image\" alt=\"Shutdown/Reboot\" src=\"app/images/power.svg\"\n                id=\"noVNC_power_button\" class=\"noVNC_button\"\n                title=\"Shutdown/Reboot...\">\n            <div class=\"noVNC_vcenter\">\n            <div id=\"noVNC_power\" class=\"noVNC_panel\">\n                <div class=\"noVNC_heading\">\n                    <img alt=\"\" src=\"app/images/power.svg\"> Power\n                </div>\n                <input type=\"button\" id=\"noVNC_shutdown_button\" value=\"Shutdown\">\n                <input type=\"button\" id=\"noVNC_reboot_button\" value=\"Reboot\">\n                <input type=\"button\" id=\"noVNC_reset_button\" value=\"Reset\">\n            </div>\n            </div>\n\n            <!-- Clipboard -->\n            <input type=\"image\" alt=\"Clipboard\" src=\"app/images/clipboard.svg\"\n                id=\"noVNC_clipboard_button\" class=\"noVNC_button\"\n                title=\"Clipboard\">\n            <div class=\"noVNC_vcenter\">\n            <div id=\"noVNC_clipboard\" class=\"noVNC_panel\">\n                <div class=\"noVNC_heading\">\n                    <img alt=\"\" src=\"app/images/clipboard.svg\"> Clipboard\n                </div>\n                <p class=\"noVNC_subheading\">\n                    Edit clipboard content in the textarea below.\n                </p>\n                <textarea id=\"noVNC_clipboard_text\" rows=5></textarea>\n            </div>\n            </div>\n\n            <!-- Toggle fullscreen -->\n            <input type=\"image\" alt=\"Full screen\" src=\"app/images/fullscreen.svg\"\n                id=\"noVNC_fullscreen_button\" class=\"noVNC_button noVNC_hidden\"\n                title=\"Full screen\">\n\n            <!-- Settings -->\n            <input type=\"image\" alt=\"Settings\" src=\"app/images/settings.svg\"\n                id=\"noVNC_settings_button\" class=\"noVNC_button\"\n                title=\"Settings\">\n            <div class=\"noVNC_vcenter\">\n            <div id=\"noVNC_settings\" class=\"noVNC_panel\">\n                <div class=\"noVNC_heading\">\n                    <img alt=\"\" src=\"app/images/settings.svg\"> Settings\n                </div>\n                <ul>\n                    <li>\n                        <label><input id=\"noVNC_setting_shared\" type=\"checkbox\"> Shared mode</label>\n                    </li>\n                    <li>\n                        <label><input id=\"noVNC_setting_view_only\" type=\"checkbox\"> View only</label>\n                    </li>\n                    <li><hr></li>\n                    <li>\n                        <label><input id=\"noVNC_setting_view_clip\" type=\"checkbox\"> Clip to window</label>\n                    </li>\n                    <li>\n                        <label for=\"noVNC_setting_resize\">Scaling mode:</label>\n                        <select id=\"noVNC_setting_resize\" name=\"vncResize\">\n                            <option value=\"off\">None</option>\n                            <option value=\"scale\">Local scaling</option>\n                            <option value=\"remote\">Remote resizing</option>\n                        </select>\n                    </li>\n                    <li><hr></li>\n                    <li>\n                        <div class=\"noVNC_expander\">Advanced</div>\n                        <div><ul>\n                            <li>\n                                <label for=\"noVNC_setting_quality\">Quality:</label>\n                                <input id=\"noVNC_setting_quality\" type=\"range\" min=\"0\" max=\"9\" value=\"6\">\n                            </li>\n                            <li>\n                                <label for=\"noVNC_setting_compression\">Compression level:</label>\n                                <input id=\"noVNC_setting_compression\" type=\"range\" min=\"0\" max=\"9\" value=\"2\">\n                            </li>\n                            <li><hr></li>\n                            <li>\n                                <label for=\"noVNC_setting_repeaterID\">Repeater ID:</label>\n                                <input id=\"noVNC_setting_repeaterID\" type=\"text\" value=\"\">\n                            </li>\n                            <li>\n                                <div class=\"noVNC_expander\">WebSocket</div>\n                                <div><ul>\n                                    <li>\n                                        <label><input id=\"noVNC_setting_encrypt\" type=\"checkbox\"> Encrypt</label>\n                                    </li>\n                                    <li>\n                                        <label for=\"noVNC_setting_host\">Host:</label>\n                                        <input id=\"noVNC_setting_host\">\n                                    </li>\n                                    <li>\n                                        <label for=\"noVNC_setting_port\">Port:</label>\n                                        <input id=\"noVNC_setting_port\" type=\"number\">\n                                    </li>\n                                    <li>\n                                        <label for=\"noVNC_setting_path\">Path:</label>\n                                        <input id=\"noVNC_setting_path\" type=\"text\" value=\"websockify\">\n                                    </li>\n                                </ul></div>\n                            </li>\n                            <li><hr></li>\n                            <li>\n                                <label><input id=\"noVNC_setting_reconnect\" type=\"checkbox\"> Automatic reconnect</label>\n                            </li>\n                            <li>\n                                <label for=\"noVNC_setting_reconnect_delay\">Reconnect delay (ms):</label>\n                                <input id=\"noVNC_setting_reconnect_delay\" type=\"number\">\n                            </li>\n                            <li><hr></li>\n                            <li>\n                                <label><input id=\"noVNC_setting_show_dot\" type=\"checkbox\"> Show dot when no cursor</label>\n                            </li>\n                            <li><hr></li>\n                            <!-- Logging selection dropdown -->\n                            <li>\n                                <label>Logging:\n                                    <select id=\"noVNC_setting_logging\" name=\"vncLogging\">\n                                    </select>\n                                </label>\n                            </li>\n                        </ul></div>\n                    </li>\n                    <li class=\"noVNC_version_separator\"><hr></li>\n                    <li class=\"noVNC_version_wrapper\">\n                        <span>Version:</span>\n                        <span class=\"noVNC_version\"></span>\n                    </li>\n                </ul>\n            </div>\n            </div>\n\n            <!-- Connection controls -->\n            <input type=\"image\" alt=\"Disconnect\" src=\"app/images/disconnect.svg\"\n                id=\"noVNC_disconnect_button\" class=\"noVNC_button\"\n                title=\"Disconnect\">\n\n            </div>\n        </div>\n\n    </div> <!-- End of noVNC_control_bar -->\n\n    <div id=\"noVNC_hint_anchor\" class=\"noVNC_vcenter\">\n        <div id=\"noVNC_control_bar_hint\">\n        </div>\n    </div>\n\n    <!-- Status dialog -->\n    <div id=\"noVNC_status\"></div>\n\n    <!-- Connect button -->\n    <div class=\"noVNC_center\">\n        <div id=\"noVNC_connect_dlg\">\n            <p class=\"noVNC_logo\" translate=\"no\"><span>no</span>VNC</p>\n            <div>\n                <button id=\"noVNC_connect_button\">\n                    <img alt=\"\" src=\"app/images/connect.svg\"> Connect\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Server key verification dialog -->\n    <div class=\"noVNC_center noVNC_connect_layer\">\n    <div id=\"noVNC_verify_server_dlg\" class=\"noVNC_panel\"><form>\n        <div class=\"noVNC_heading\">\n            Server identity\n        </div>\n        <div>\n            The server has provided the following identifying information:\n        </div>\n        <div id=\"noVNC_fingerprint_block\">\n            <b>Fingerprint:</b>\n            <span id=\"noVNC_fingerprint\"></span>\n        </div>\n        <div>\n            Please verify that the information is correct and press\n            \"Approve\". Otherwise press \"Reject\".\n        </div>\n        <div>\n            <input id=\"noVNC_approve_server_button\" type=\"submit\" value=\"Approve\" class=\"noVNC_submit\">\n            <input id=\"noVNC_reject_server_button\" type=\"button\" value=\"Reject\" class=\"noVNC_submit\">\n        </div>\n    </form></div>\n    </div>\n\n    <!-- Password dialog -->\n    <div class=\"noVNC_center noVNC_connect_layer\">\n    <div id=\"noVNC_credentials_dlg\" class=\"noVNC_panel\"><form>\n        <div class=\"noVNC_heading\">\n            Credentials\n        </div>\n        <div id=\"noVNC_username_block\">\n            <label for=\"noVNC_username_input\">Username:</label>\n            <input id=\"noVNC_username_input\">\n        </div>\n        <div id=\"noVNC_password_block\">\n            <label for=\"noVNC_password_input\">Password:</label>\n            <input id=\"noVNC_password_input\" type=\"password\">\n        </div>\n        <div>\n            <input id=\"noVNC_credentials_button\" type=\"submit\" value=\"Send credentials\" class=\"noVNC_submit\">\n        </div>\n    </form></div>\n    </div>\n\n    <!-- Transition screens -->\n    <div id=\"noVNC_transition\">\n        <div id=\"noVNC_transition_text\"></div>\n        <div>\n        <input type=\"button\" id=\"noVNC_cancel_reconnect_button\" value=\"Cancel\" class=\"noVNC_submit\">\n        </div>\n        <div class=\"noVNC_spinner\"></div>\n    </div>\n\n    <!-- This is where the RFB elements will attach -->\n    <div id=\"noVNC_container\">\n        <!-- Note that Google Chrome on Android doesn't respect any of these,\n             html attributes which attempt to disable text suggestions on the\n             on-screen keyboard. Let's hope Chrome implements the ime-mode\n             style for example -->\n        <textarea id=\"noVNC_keyboardinput\" autocapitalize=\"off\"\n            autocomplete=\"off\" spellcheck=\"false\" tabindex=\"-1\"></textarea>\n    </div>\n\n    <audio id=\"noVNC_bell\">\n        <source src=\"app/sounds/bell.oga\" type=\"audio/ogg\">\n        <source src=\"app/sounds/bell.mp3\" type=\"audio/mpeg\">\n    </audio>\n </body>\n</html>\n"
        },
        {
          "name": "vnc_lite.html",
          "type": "blob",
          "size": 5.6455078125,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\n    <!--\n    noVNC example: lightweight example using minimal UI and features\n\n    This is a self-contained file which doesn't import WebUtil or external CSS.\n\n    Copyright (C) 2019 The noVNC authors\n    noVNC is licensed under the MPL 2.0 (see LICENSE.txt)\n    This file is licensed under the 2-Clause BSD license (see LICENSE.txt).\n\n    Connect parameters are provided in query string:\n        http://example.com/?host=HOST&port=PORT&scale=true\n    -->\n    <title>noVNC</title>\n\n    <style>\n\n        body {\n            margin: 0;\n            background-color: dimgrey;\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        html {\n            height: 100%;\n        }\n\n        #top_bar {\n            background-color: #6e84a3;\n            color: white;\n            font: bold 12px Helvetica;\n            padding: 6px 5px 4px 5px;\n            border-bottom: 1px outset;\n        }\n        #status {\n            text-align: center;\n        }\n        #sendCtrlAltDelButton {\n            position: fixed;\n            top: 0px;\n            right: 0px;\n            border: 1px outset;\n            padding: 5px 5px 4px 5px;\n            cursor: pointer;\n        }\n\n        #screen {\n            flex: 1; /* fill remaining space */\n            overflow: hidden;\n        }\n\n    </style>\n\n    <script type=\"module\" crossorigin=\"anonymous\">\n        // RFB holds the API to connect and communicate with a VNC server\n        import RFB from './core/rfb.js';\n\n        let rfb;\n        let desktopName;\n\n        // When this function is called we have\n        // successfully connected to a server\n        function connectedToServer(e) {\n            status(\"Connected to \" + desktopName);\n        }\n\n        // This function is called when we are disconnected\n        function disconnectedFromServer(e) {\n            if (e.detail.clean) {\n                status(\"Disconnected\");\n            } else {\n                status(\"Something went wrong, connection is closed\");\n            }\n        }\n\n        // When this function is called, the server requires\n        // credentials to authenticate\n        function credentialsAreRequired(e) {\n            const password = prompt(\"Password required:\");\n            rfb.sendCredentials({ password: password });\n        }\n\n        // When this function is called we have received\n        // a desktop name from the server\n        function updateDesktopName(e) {\n            desktopName = e.detail.name;\n        }\n\n        // Since most operating systems will catch Ctrl+Alt+Del\n        // before they get a chance to be intercepted by the browser,\n        // we provide a way to emulate this key sequence.\n        function sendCtrlAltDel() {\n            rfb.sendCtrlAltDel();\n            return false;\n        }\n\n        // Show a status text in the top bar\n        function status(text) {\n            document.getElementById('status').textContent = text;\n        }\n\n        // This function extracts the value of one variable from the\n        // query string. If the variable isn't defined in the URL\n        // it returns the default value instead.\n        function readQueryVariable(name, defaultValue) {\n            // A URL with a query parameter can look like this:\n            // https://www.example.com?myqueryparam=myvalue\n            //\n            // Note that we use location.href instead of location.search\n            // because Firefox < 53 has a bug w.r.t location.search\n            const re = new RegExp('.*[?&]' + name + '=([^&#]*)'),\n                  match = document.location.href.match(re);\n\n            if (match) {\n                // We have to decode the URL since want the cleartext value\n                return decodeURIComponent(match[1]);\n            }\n\n            return defaultValue;\n        }\n\n        document.getElementById('sendCtrlAltDelButton')\n            .onclick = sendCtrlAltDel;\n\n        // Read parameters specified in the URL query string\n        // By default, use the host and port of server that served this file\n        const host = readQueryVariable('host', window.location.hostname);\n        let port = readQueryVariable('port', window.location.port);\n        const password = readQueryVariable('password');\n        const path = readQueryVariable('path', 'websockify');\n\n        // | | |         | | |\n        // | | | Connect | | |\n        // v v v         v v v\n\n        status(\"Connecting\");\n\n        // Build the websocket URL used to connect\n        let url;\n        if (window.location.protocol === \"https:\") {\n            url = 'wss';\n        } else {\n            url = 'ws';\n        }\n        url += '://' + host;\n        if(port) {\n            url += ':' + port;\n        }\n        url += '/' + path;\n\n        // Creating a new RFB object will start a new connection\n        rfb = new RFB(document.getElementById('screen'), url,\n                      { credentials: { password: password } });\n\n        // Add listeners to important events from the RFB module\n        rfb.addEventListener(\"connect\",  connectedToServer);\n        rfb.addEventListener(\"disconnect\", disconnectedFromServer);\n        rfb.addEventListener(\"credentialsrequired\", credentialsAreRequired);\n        rfb.addEventListener(\"desktopname\", updateDesktopName);\n\n        // Set parameters that can be changed on an active connection\n        rfb.viewOnly = readQueryVariable('view_only', false);\n        rfb.scaleViewport = readQueryVariable('scale', false);\n    </script>\n</head>\n\n<body>\n    <div id=\"top_bar\">\n        <div id=\"status\">Loading</div>\n        <div id=\"sendCtrlAltDelButton\">Send CtrlAltDel</div>\n    </div>\n    <div id=\"screen\">\n        <!-- This is where the remote screen will appear -->\n    </div>\n</body>\n</html>\n"
        }
      ]
    }
  ]
}