{
  "metadata": {
    "timestamp": 1736563138390,
    "page": 62,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "songquanpeng/one-api",
      "stars": 20740,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.0537109375,
          "content": "PORT=3000\nDEBUG=false\nHTTPS_PROXY=http://localhost:7890"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09765625,
          "content": ".idea\n.vscode\nupload\n*.exe\n*.db\nbuild\n*.db-journal\nlogs\ndata\n/web/node_modules\ncmd.md\n.env\n/one-api\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0244140625,
          "content": "FROM --platform=$BUILDPLATFORM node:16 AS builder\n\nWORKDIR /web\nCOPY ./VERSION .\nCOPY ./web .\n\nWORKDIR /web/default\nRUN npm install\nRUN DISABLE_ESLINT_PLUGIN='true' REACT_APP_VERSION=$(cat VERSION) npm run build\n\nWORKDIR /web/berry\nRUN npm install\nRUN DISABLE_ESLINT_PLUGIN='true' REACT_APP_VERSION=$(cat VERSION) npm run build\n\nWORKDIR /web/air\nRUN npm install\nRUN DISABLE_ESLINT_PLUGIN='true' REACT_APP_VERSION=$(cat VERSION) npm run build\n\nFROM golang:alpine AS builder2\n\nRUN apk add --no-cache g++\n\nENV GO111MODULE=on \\\n    CGO_ENABLED=1 \\\n    GOOS=linux\n\nWORKDIR /build\nADD go.mod go.sum ./\nRUN go mod download\nCOPY . .\nCOPY --from=builder /web/build ./web/build\nRUN go build -trimpath -ldflags \"-s -w -X 'github.com/songquanpeng/one-api/common.Version=$(cat VERSION)' -extldflags '-static'\" -o one-api\n\nFROM alpine\n\nRUN apk update \\\n    && apk upgrade \\\n    && apk add --no-cache ca-certificates tzdata \\\n    && update-ca-certificates 2>/dev/null || true\n\nCOPY --from=builder2 /build/one-api /\nEXPOSE 3000\nWORKDIR /data\nENTRYPOINT [\"/one-api\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2023 JustSong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 18.9833984375,
          "content": "<p align=\"right\">\n    <a href=\"./README.md\">中文</a> | <strong>English</strong> | <a href=\"./README.ja.md\">日本語</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/songquanpeng/one-api\"><img src=\"https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png\" width=\"150\" height=\"150\" alt=\"one-api logo\"></a>\n</p>\n\n<div align=\"center\">\n\n# One API\n\n_✨ Access all LLM through the standard OpenAI API format, easy to deploy & use ✨_\n\n</div>\n\n<p align=\"center\">\n  <a href=\"https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen\" alt=\"license\">\n  </a>\n  <a href=\"https://github.com/songquanpeng/one-api/releases/latest\">\n    <img src=\"https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&include_prereleases\" alt=\"release\">\n  </a>\n  <a href=\"https://hub.docker.com/repository/docker/justsong/one-api\">\n    <img src=\"https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen\" alt=\"docker pull\">\n  </a>\n  <a href=\"https://github.com/songquanpeng/one-api/releases/latest\">\n    <img src=\"https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&include_prereleases\" alt=\"release\">\n  </a>\n  <a href=\"https://goreportcard.com/report/github.com/songquanpeng/one-api\">\n    <img src=\"https://goreportcard.com/badge/github.com/songquanpeng/one-api\" alt=\"GoReportCard\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"#deployment\">Deployment Tutorial</a>\n  ·\n  <a href=\"#usage\">Usage</a>\n  ·\n  <a href=\"https://github.com/songquanpeng/one-api/issues\">Feedback</a>\n  ·\n  <a href=\"#screenshots\">Screenshots</a>\n  ·\n  <a href=\"https://openai.justsong.cn/\">Live Demo</a>\n  ·\n  <a href=\"#faq\">FAQ</a>\n  ·\n  <a href=\"#related-projects\">Related Projects</a>\n  ·\n  <a href=\"https://iamazing.cn/page/reward\">Donate</a>\n</p>\n\n> **Warning**: This README is translated by ChatGPT. Please feel free to submit a PR if you find any translation errors.\n\n> **Warning**: The Docker image for English version is `justsong/one-api-en`.\n\n> **Note**: The latest image pulled from Docker may be an `alpha` release. Specify the version manually if you require stability.\n\n## Features\n1. Support for multiple large models:\n   + [x] [OpenAI ChatGPT Series Models](https://platform.openai.com/docs/guides/gpt/chat-completions-api) (Supports [Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference))\n   + [x] [Anthropic Claude Series Models](https://anthropic.com)\n   + [x] [Google PaLM2 and Gemini Series Models](https://developers.generativeai.google)\n   + [x] [Baidu Wenxin Yiyuan Series Models](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)\n   + [x] [Alibaba Tongyi Qianwen Series Models](https://help.aliyun.com/document_detail/2400395.html)\n   + [x] [Zhipu ChatGLM Series Models](https://bigmodel.cn)\n2. Supports access to multiple channels through **load balancing**.\n3. Supports **stream mode** that enables typewriter-like effect through stream transmission.\n4. Supports **multi-machine deployment**. [See here](#multi-machine-deployment) for more details.\n5. Supports **token management** that allows setting token expiration time and usage count.\n6. Supports **voucher management** that enables batch generation and export of vouchers. Vouchers can be used for account balance replenishment.\n7. Supports **channel management** that allows bulk creation of channels.\n8. Supports **user grouping** and **channel grouping** for setting different rates for different groups.\n9. Supports channel **model list configuration**.\n10. Supports **quota details checking**.\n11. Supports **user invite rewards**.\n12. Allows display of balance in USD.\n13. Supports announcement publishing, recharge link setting, and initial balance setting for new users.\n14. Offers rich **customization** options:\n    1. Supports customization of system name, logo, and footer.\n    2. Supports customization of homepage and about page using HTML & Markdown code, or embedding a standalone webpage through iframe.\n15. Supports management API access through system access tokens.\n16. Supports Cloudflare Turnstile user verification.\n17. Supports user management and multiple user login/registration methods:\n    + Email login/registration and password reset via email.\n    + [GitHub OAuth](https://github.com/settings/applications/new).\n    + WeChat Official Account authorization (requires additional deployment of [WeChat Server](https://github.com/songquanpeng/wechat-server)).\n18. Immediate support and encapsulation of other major model APIs as they become available.\n\n## Deployment\n### Docker Deployment\nDeployment command: `docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api-en`\n\nUpdate command: `docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR`\n\nThe first `3000` in `-p 3000:3000` is the port of the host, which can be modified as needed.\n\nData will be saved in the `/home/ubuntu/data/one-api` directory on the host. Ensure that the directory exists and has write permissions, or change it to a suitable directory.\n\nNginx reference configuration:\n```\nserver{\n   server_name openai.justsong.cn;  # Modify your domain name accordingly\n\n   location / {\n          client_max_body_size  64m;\n          proxy_http_version 1.1;\n          proxy_pass http://localhost:3000;  # Modify your port accordingly\n          proxy_set_header Host $host;\n          proxy_set_header X-Forwarded-For $remote_addr;\n          proxy_cache_bypass $http_upgrade;\n          proxy_set_header Accept-Encoding gzip;\n   }\n}\n```\n\nNext, configure HTTPS with Let's Encrypt certbot:\n```bash\n# Install certbot on Ubuntu:\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n# Generate certificates & modify Nginx configuration\nsudo certbot --nginx\n# Follow the prompts\n# Restart Nginx\nsudo service nginx restart\n```\n\nThe initial account username is `root` and password is `123456`.\n\n### Manual Deployment\n1. Download the executable file from [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) or compile from source:\n   ```shell\n   git clone https://github.com/songquanpeng/one-api.git\n\n   # Build the frontend\n   cd one-api/web/default\n   npm install\n   npm run build\n\n   # Build the backend\n   cd ../..\n   go mod download\n   go build -ldflags \"-s -w\" -o one-api\n   ```\n2. Run:\n   ```shell\n   chmod u+x one-api\n   ./one-api --port 3000 --log-dir ./logs\n   ```\n3. Access [http://localhost:3000/](http://localhost:3000/) and log in. The initial account username is `root` and password is `123456`.\n\nFor more detailed deployment tutorials, please refer to [this page](https://iamazing.cn/page/how-to-deploy-a-website).\n\n### Multi-machine Deployment\n1. Set the same `SESSION_SECRET` for all servers.\n2. Set `SQL_DSN` and use MySQL instead of SQLite. All servers should connect to the same database.\n3. Set the `NODE_TYPE` for all non-master nodes to `slave`.\n4. Set `SYNC_FREQUENCY` for servers to periodically sync configurations from the database.\n5. Non-master nodes can optionally set `FRONTEND_BASE_URL` to redirect page requests to the master server.\n6. Install Redis separately on non-master nodes, and configure `REDIS_CONN_STRING` so that the database can be accessed with zero latency when the cache has not expired.\n7. If the main server also has high latency accessing the database, Redis must be enabled and `SYNC_FREQUENCY` must be set to periodically sync configurations from the database.\n\nPlease refer to the [environment variables](#environment-variables) section for details on using environment variables.\n\n### Deployment on Control Panels (e.g., Baota)\nRefer to [#175](https://github.com/songquanpeng/one-api/issues/175) for detailed instructions.\n\nIf you encounter a blank page after deployment, refer to [#97](https://github.com/songquanpeng/one-api/issues/97) for possible solutions.\n\n### Deployment on Third-Party Platforms\n<details>\n<summary><strong>Deploy on Sealos</strong></summary>\n<div>\n\n> Sealos supports high concurrency, dynamic scaling, and stable operations for millions of users.\n\n> Click the button below to deploy with one click.👇\n\n[![](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)\n\n\n</div>\n</details>\n\n<details>\n<summary><strong>Deployment on Zeabur</strong></summary>\n<div>\n\n> Zeabur's servers are located overseas, automatically solving network issues, and the free quota is sufficient for personal usage.\n\n[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)\n\n1. First, fork the code.\n2. Go to [Zeabur](https://zeabur.com?referralCode=songquanpeng), log in, and enter the console.\n3. Create a new project. In Service -> Add Service, select Marketplace, and choose MySQL. Note down the connection parameters (username, password, address, and port).\n4. Copy the connection parameters and run ```create database `one-api` ``` to create the database.\n5. Then, in Service -> Add Service, select Git (authorization is required for the first use) and choose your forked repository.\n6. Automatic deployment will start, but please cancel it for now. Go to the Variable tab, add a `PORT` with a value of `3000`, and then add a `SQL_DSN` with a value of `<username>:<password>@tcp(<addr>:<port>)/one-api`. Save the changes. Please note that if `SQL_DSN` is not set, data will not be persisted, and the data will be lost after redeployment.\n7. Select Redeploy.\n8. In the Domains tab, select a suitable domain name prefix, such as \"my-one-api\". The final domain name will be \"my-one-api.zeabur.app\". You can also CNAME your own domain name.\n9. Wait for the deployment to complete, and click on the generated domain name to access One API.\n\n</div>\n</details>\n\n## Configuration\nThe system is ready to use out of the box.\n\nYou can configure it by setting environment variables or command line parameters.\n\nAfter the system starts, log in as the `root` user to further configure the system.\n\n## Usage\nAdd your API Key on the `Channels` page, and then add an access token on the `Tokens` page.\n\nYou can then use your access token to access One API. The usage is consistent with the [OpenAI API](https://platform.openai.com/docs/api-reference/introduction).\n\nIn places where the OpenAI API is used, remember to set the API Base to your One API deployment address, for example: `https://openai.justsong.cn`. The API Key should be the token generated in One API.\n\nNote that the specific API Base format depends on the client you are using.\n\n```mermaid\ngraph LR\n    A(User)\n    A --->|Request| B(One API)\n    B -->|Relay Request| C(OpenAI)\n    B -->|Relay Request| D(Azure)\n    B -->|Relay Request| E(Other downstream channels)\n```\n\nTo specify which channel to use for the current request, you can add the channel ID after the token, for example: `Authorization: Bearer ONE_API_KEY-CHANNEL_ID`.\nNote that the token needs to be created by an administrator to specify the channel ID.\n\nIf the channel ID is not provided, load balancing will be used to distribute the requests to multiple channels.\n\n### Environment Variables\n1. `REDIS_CONN_STRING`: When set, Redis will be used as the storage for request rate limiting instead of memory.\n    + Example: `REDIS_CONN_STRING=redis://default:redispw@localhost:49153`\n2. `SESSION_SECRET`: When set, a fixed session key will be used to ensure that cookies of logged-in users are still valid after the system restarts.\n    + Example: `SESSION_SECRET=random_string`\n3. `SQL_DSN`: When set, the specified database will be used instead of SQLite. Please use MySQL version 8.0.\n    + Example: `SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`\n4. `LOG_SQL_DSN`: When set, a separate database will be used for the `logs` table; please use MySQL or PostgreSQL.\n    + Example: `LOG_SQL_DSN=root:123456@tcp(localhost:3306)/oneapi-logs`\n5. `FRONTEND_BASE_URL`: When set, the specified frontend address will be used instead of the backend address.\n    + Example: `FRONTEND_BASE_URL=https://openai.justsong.cn`\n6. 'MEMORY_CACHE_ENABLED': Enabling memory caching can cause a certain delay in updating user quotas, with optional values of 'true' and 'false'. If not set, it defaults to 'false'.\n7. `SYNC_FREQUENCY`: When set, the system will periodically sync configurations from the database, with the unit in seconds. If not set, no sync will happen.\n    + Example: `SYNC_FREQUENCY=60`\n8. `NODE_TYPE`: When set, specifies the node type. Valid values are `master` and `slave`. If not set, it defaults to `master`.\n    + Example: `NODE_TYPE=slave`\n9. `CHANNEL_UPDATE_FREQUENCY`: When set, it periodically updates the channel balances, with the unit in minutes. If not set, no update will happen.\n    + Example: `CHANNEL_UPDATE_FREQUENCY=1440`\n10. `CHANNEL_TEST_FREQUENCY`: When set, it periodically tests the channels, with the unit in minutes. If not set, no test will happen.\n    + Example: `CHANNEL_TEST_FREQUENCY=1440`\n11. `POLLING_INTERVAL`: The time interval (in seconds) between requests when updating channel balances and testing channel availability. Default is no interval.\n    + Example: `POLLING_INTERVAL=5`\n12. `BATCH_UPDATE_ENABLED`: Enabling batch database update aggregation can cause a certain delay in updating user quotas. The optional values are 'true' and 'false', but if not set, it defaults to 'false'.\n    +Example: ` BATCH_UPDATE_ENABLED=true`\n    +If you encounter an issue with too many database connections, you can try enabling this option.\n13. `BATCH_UPDATE_INTERVAL=5`: The time interval for batch updating aggregates, measured in seconds, defaults to '5'.\n    +Example: ` BATCH_UPDATE_INTERVAL=5`\n14. Request frequency limit:\n    + `GLOBAL_API_RATE_LIMIT`: Global API rate limit (excluding relay requests), the maximum number of requests within three minutes per IP, default to 180.\n    + `GLOBAL_WEL_RATE_LIMIT`: Global web speed limit, the maximum number of requests within three minutes per IP, default to 60.\n15. Encoder cache settings:\n    +`TIKTOKEN_CACHE_DIR`: By default, when the program starts, it will download the encoding of some common word elements online, such as' gpt-3.5 turbo '. In some unstable network environments or offline situations, it may cause startup problems. This directory can be configured to cache data and can be migrated to an offline environment.\n    +`DATA_GYM_CACHE_DIR`: Currently, this configuration has the same function as' TIKTOKEN-CACHE-DIR ', but its priority is not as high as it.\n16. `RELAY_TIMEOUT`: Relay timeout setting, measured in seconds, with no default timeout time set.\n17. `RELAY_PROXY`: After setting up, use this proxy to request APIs.\n18. `USER_CONTENT_REQUEST_TIMEOUT`: The timeout period for users to upload and download content, measured in seconds.\n19. `USER_CONTENT_REQUEST_PROXY`: After setting up, use this agent to request content uploaded by users, such as images.\n20. `SQLITE_BUSY_TIMEOUT`: SQLite lock wait timeout setting, measured in milliseconds, default to '3000'.\n21. `GEMINI_SAFETY_SETTING`: Gemini's security settings are set to 'BLOCK-NONE' by default.\n22. `GEMINI_VERSION`: The Gemini version used by the One API, which defaults to 'v1'.\n23. `THE`: The system's theme setting, default to 'default', specific optional values refer to [here] (./web/README. md).\n24. `ENABLE_METRIC`: Whether to disable channels based on request success rate, default not enabled, optional values are 'true' and 'false'.\n25. `METRIC_QUEUE_SIZE`: Request success rate statistics queue size, default to '10'.\n26. `METRIC_SUCCESS_RATE_THRESHOLD`: Request success rate threshold, default to '0.8'.\n27. `INITIAL_ROOT_TOKEN`: If this value is set, a root user token with the value of the environment variable will be automatically created when the system starts for the first time.\n28. `INITIAL_ROOT_ACCESS_TOKEN`: If this value is set, a system management token will be automatically created for the root user with a value of the environment variable when the system starts for the first time.\n\n### Command Line Parameters\n1. `--port <port_number>`: Specifies the port number on which the server listens. Defaults to `3000`.\n    + Example: `--port 3000`\n2. `--log-dir <log_dir>`: Specifies the log directory. If not set, the logs will not be saved.\n    + Example: `--log-dir ./logs`\n3. `--version`: Prints the system version number and exits.\n4. `--help`: Displays the command usage help and parameter descriptions.\n\n## Screenshots\n![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)\n![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)\n\n## FAQ\n1. What is quota? How is it calculated? Does One API have quota calculation issues?\n    + Quota = Group multiplier * Model multiplier * (number of prompt tokens + number of completion tokens * completion multiplier)\n    + The completion multiplier is fixed at 1.33 for GPT3.5 and 2 for GPT4, consistent with the official definition.\n    + If it is not a stream mode, the official API will return the total number of tokens consumed. However, please note that the consumption multipliers for prompts and completions are different.\n2. Why does it prompt \"insufficient quota\" even though my account balance is sufficient?\n    + Please check if your token quota is sufficient. It is separate from the account balance.\n    + The token quota is used to set the maximum usage and can be freely set by the user.\n3. It says \"No available channels\" when trying to use a channel. What should I do?\n    + Please check the user and channel group settings.\n    + Also check the channel model settings.\n4. Channel testing reports an error: \"invalid character '<' looking for beginning of value\"\n    + This error occurs when the returned value is not valid JSON but an HTML page.\n    + Most likely, the IP of your deployment site or the node of the proxy has been blocked by CloudFlare.\n5. ChatGPT Next Web reports an error: \"Failed to fetch\"\n    + Do not set `BASE_URL` during deployment.\n    + Double-check that your interface address and API Key are correct.\n\n## Related Projects\n* [FastGPT](https://github.com/labring/FastGPT): Knowledge question answering system based on the LLM\n* [VChart](https://github.com/VisActor/VChart):  More than just a cross-platform charting library, but also an expressive data storyteller.\n* [VMind](https://github.com/VisActor/VMind):  Not just automatic, but also fantastic. Open-source solution for intelligent visualization.\n\n## Note\nThis project is an open-source project. Please use it in compliance with OpenAI's [Terms of Use](https://openai.com/policies/terms-of-use) and **applicable laws and regulations**. It must not be used for illegal purposes.\n\nThis project is released under the MIT license. Based on this, attribution and a link to this project must be included at the bottom of the page.\n\nThe same applies to derivative projects based on this project.\n\nIf you do not wish to include attribution, prior authorization must be obtained.\n\nAccording to the MIT license, users should bear the risk and responsibility of using this project, and the developer of this open-source project is not responsible for this.\n"
        },
        {
          "name": "README.ja.md",
          "type": "blob",
          "size": 19.4248046875,
          "content": "<p align=\"right\">\n    <a href=\"./README.md\">中文</a> | <a href=\"./README.en.md\">English</a> | <strong>日本語</strong>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/songquanpeng/one-api\"><img src=\"https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png\" width=\"150\" height=\"150\" alt=\"one-api logo\"></a>\n</p>\n\n<div align=\"center\">\n\n# One API\n\n_✨ 標準的な OpenAI API フォーマットを通じてすべての LLM にアクセスでき、導入と利用が容易です ✨_\n\n</div>\n\n<p align=\"center\">\n  <a href=\"https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen\" alt=\"license\">\n  </a>\n  <a href=\"https://github.com/songquanpeng/one-api/releases/latest\">\n    <img src=\"https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&include_prereleases\" alt=\"release\">\n  </a>\n  <a href=\"https://hub.docker.com/repository/docker/justsong/one-api\">\n    <img src=\"https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen\" alt=\"docker pull\">\n  </a>\n  <a href=\"https://github.com/songquanpeng/one-api/releases/latest\">\n    <img src=\"https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&include_prereleases\" alt=\"release\">\n  </a>\n  <a href=\"https://goreportcard.com/report/github.com/songquanpeng/one-api\">\n    <img src=\"https://goreportcard.com/badge/github.com/songquanpeng/one-api\" alt=\"GoReportCard\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"#deployment\">デプロイチュートリアル</a>\n  ·\n  <a href=\"#usage\">使用方法</a>\n  ·\n  <a href=\"https://github.com/songquanpeng/one-api/issues\">フィードバック</a>\n  ·\n  <a href=\"#screenshots\">スクリーンショット</a>\n  ·\n  <a href=\"https://openai.justsong.cn/\">ライブデモ</a>\n  ·\n  <a href=\"#faq\">FAQ</a>\n  ·\n  <a href=\"#related-projects\">関連プロジェクト</a>\n  ·\n  <a href=\"https://iamazing.cn/page/reward\">寄付</a>\n</p>\n\n> **警告**: この README は ChatGPT によって翻訳されています。翻訳ミスを発見した場合は遠慮なく PR を投稿してください。\n\n> **警告**： 英語版の Docker イメージは `justsong/one-api-en` です。\n\n> **注**: Docker からプルされた最新のイメージは、`alpha` リリースかもしれません。安定性が必要な場合は、手動でバージョンを指定してください。\n\n## 特徴\n1. 複数の大型モデルをサポート:\n   + [x] [OpenAI ChatGPT シリーズモデル](https://platform.openai.com/docs/guides/gpt/chat-completions-api) ([Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference) をサポート)\n   + [x] [Anthropic Claude シリーズモデル](https://anthropic.com)\n   + [x] [Google PaLM2/Gemini シリーズモデル](https://developers.generativeai.google)\n   + [x] [Baidu Wenxin Yiyuan シリーズモデル](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)\n   + [x] [Alibaba Tongyi Qianwen シリーズモデル](https://help.aliyun.com/document_detail/2400395.html)\n   + [x] [Zhipu ChatGLM シリーズモデル](https://bigmodel.cn)\n2. **ロードバランシング**による複数チャンネルへのアクセスをサポート。\n3. ストリーム伝送によるタイプライター的効果を可能にする**ストリームモード**に対応。\n4. **マルチマシンデプロイ**に対応。[詳細はこちら](#multi-machine-deployment)を参照。\n5. トークンの有効期限や使用回数を設定できる**トークン管理**に対応しています。\n6. **バウチャー管理**に対応しており、バウチャーの一括生成やエクスポートが可能です。バウチャーは口座残高の補充に利用できます。\n7. **チャンネル管理**に対応し、チャンネルの一括作成が可能。\n8. グループごとに異なるレートを設定するための**ユーザーグループ**と**チャンネルグループ**をサポートしています。\n9. チャンネル**モデルリスト設定**に対応。\n10. **クォータ詳細チェック**をサポート。\n11. **ユーザー招待報酬**をサポートします。\n12. 米ドルでの残高表示が可能。\n13. 新規ユーザー向けのお知らせ公開、リチャージリンク設定、初期残高設定に対応。\n14. 豊富な**カスタマイズ**オプションを提供します:\n    1. システム名、ロゴ、フッターのカスタマイズが可能。\n    2. HTML と Markdown コードを使用したホームページとアバウトページのカスタマイズ、または iframe を介したスタンドアロンウェブページの埋め込みをサポートしています。\n15. システム・アクセストークンによる管理 API アクセスをサポートする。\n16. Cloudflare Turnstile によるユーザー認証に対応。\n17. ユーザー管理と複数のユーザーログイン/登録方法をサポート:\n    + 電子メールによるログイン/登録とパスワードリセット。\n    + [GitHub OAuth](https://github.com/settings/applications/new)。\n    + WeChat 公式アカウントの認証（[WeChat Server](https://github.com/songquanpeng/wechat-server)の追加導入が必要）。\n18. 他の主要なモデル API が利用可能になった場合、即座にサポートし、カプセル化する。\n\n## デプロイメント\n### Docker デプロイメント\nデプロイコマンド: `docker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api-en`。\n\nコマンドを更新する: `docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrr/watchtower -cR`。\n\n`-p 3000:3000` の最初の `3000` はホストのポートで、必要に応じて変更できます。\n\nデータはホストの `/home/ubuntu/data/one-api` ディレクトリに保存される。このディレクトリが存在し、書き込み権限があることを確認する、もしくは適切なディレクトリに変更してください。\n\nNginxリファレンス設定:\n```\nserver{\n   server_name openai.justsong.cn;  # ドメイン名は適宜変更\n\n   location / {\n          client_max_body_size  64m;\n          proxy_http_version 1.1;\n          proxy_pass http://localhost:3000;  # それに応じてポートを変更\n          proxy_set_header Host $host;\n          proxy_set_header X-Forwarded-For $remote_addr;\n          proxy_cache_bypass $http_upgrade;\n          proxy_set_header Accept-Encoding gzip;\n          proxy_read_timeout 300s;  # GPT-4 はより長いタイムアウトが必要\n   }\n}\n```\n\n次に、Let's Encrypt certbot を使って HTTPS を設定します:\n```bash\n# Ubuntu に certbot をインストール:\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n# 証明書の生成と Nginx 設定の変更\nsudo certbot --nginx\n# プロンプトに従う\n# Nginx を再起動\nsudo service nginx restart\n```\n\n初期アカウントのユーザー名は `root` で、パスワードは `123456` です。\n\n### マニュアルデプロイ\n1. [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) から実行ファイルをダウンロードする、もしくはソースからコンパイルする:\n   ```shell\n   git clone https://github.com/songquanpeng/one-api.git\n\n   # フロントエンドのビルド\n   cd one-api/web/default\n   npm install\n   npm run build\n\n   # バックエンドのビルド\n   cd ../..\n   go mod download\n   go build -ldflags \"-s -w\" -o one-api\n   ```\n2. 実行:\n   ```shell\n   chmod u+x one-api\n   ./one-api --port 3000 --log-dir ./logs\n   ```\n3. [http://localhost:3000/](http://localhost:3000/) にアクセスし、ログインする。初期アカウントのユーザー名は `root`、パスワードは `123456` である。\n\nより詳細なデプロイのチュートリアルについては、[このページ](https://iamazing.cn/page/how-to-deploy-a-website) を参照してください。\n\n### マルチマシンデプロイ\n1. すべてのサーバに同じ `SESSION_SECRET` を設定する。\n2. `SQL_DSN` を設定し、SQLite の代わりに MySQL を使用する。すべてのサーバは同じデータベースに接続する。\n3. マスターノード以外のノードの `NODE_TYPE` を `slave` に設定する。\n4. データベースから定期的に設定を同期するサーバーには `SYNC_FREQUENCY` を設定する。\n5. マスター以外のノードでは、オプションで `FRONTEND_BASE_URL` を設定して、ページ要求をマスターサーバーにリダイレクトすることができます。\n6. マスター以外のノードには Redis を個別にインストールし、`REDIS_CONN_STRING` を設定して、キャッシュの有効期限が切れていないときにデータベースにゼロレイテンシーでアクセスできるようにする。\n7. メインサーバーでもデータベースへのアクセスが高レイテンシになる場合は、Redis を有効にし、`SYNC_FREQUENCY` を設定してデータベースから定期的に設定を同期する必要がある。\n\nPlease refer to the [environment variables](#environment-variables) section for details on using environment variables.\n\n### コントロールパネル（例: Baota）への展開\n詳しい手順は [#175](https://github.com/songquanpeng/one-api/issues/175) を参照してください。\n\n配置後に空白のページが表示される場合は、[#97](https://github.com/songquanpeng/one-api/issues/97) を参照してください。\n\n### サードパーティプラットフォームへのデプロイ\n<details>\n<summary><strong>Sealos へのデプロイ</strong></summary>\n<div>\n\n> Sealos は、高い同時実行性、ダイナミックなスケーリング、数百万人のユーザーに対する安定した運用をサポートしています。\n\n> 下のボタンをクリックすると、ワンクリックで展開できます。👇\n\n[![](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)\n\n\n</div>\n</details>\n\n<details>\n<summary><strong>Zeabur へのデプロイ</strong></summary>\n<div>\n\n> Zeabur のサーバーは海外にあるため、ネットワークの問題は自動的に解決されます。\n\n[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)\n\n1. まず、コードをフォークする。\n2. [Zeabur](https://zeabur.com?referralCode=songquanpeng) にアクセスしてログインし、コンソールに入る。\n3. 新しいプロジェクトを作成します。Service -> Add ServiceでMarketplace を選択し、MySQL を選択する。接続パラメータ（ユーザー名、パスワード、アドレス、ポート）をメモします。\n4. 接続パラメータをコピーし、```create database `one-api` ``` を実行してデータベースを作成する。\n5. その後、Service -> Add Service で Git を選択し（最初の使用には認証が必要です）、フォークしたリポジトリを選択します。\n6. 自動デプロイが開始されますが、一旦キャンセルしてください。Variable タブで `PORT` に `3000` を追加し、`SQL_DSN` に `<username>:<password>@tcp(<addr>:<port>)/one-api` を追加します。変更を保存する。SQL_DSN` が設定されていないと、データが永続化されず、再デプロイ後にデータが失われるので注意すること。\n7. 再デプロイを選択します。\n8. Domains タブで、\"my-one-api\" のような適切なドメイン名の接頭辞を選択する。最終的なドメイン名は \"my-one-api.zeabur.app\" となります。独自のドメイン名を CNAME することもできます。\n9. デプロイが完了するのを待ち、生成されたドメイン名をクリックして One API にアクセスします。\n\n</div>\n</details>\n\n## コンフィグ\nシステムは箱から出してすぐに使えます。\n\n環境変数やコマンドラインパラメータを設定することで、システムを構成することができます。\n\nシステム起動後、`root` ユーザーとしてログインし、さらにシステムを設定します。\n\n## 使用方法\n`Channels` ページで API Key を追加し、`Tokens` ページでアクセストークンを追加する。\n\nアクセストークンを使って One API にアクセスすることができる。使い方は [OpenAI API](https://platform.openai.com/docs/api-reference/introduction) と同じです。\n\nOpenAI API が使用されている場所では、API Base に One API のデプロイアドレスを設定することを忘れないでください（例: `https://openai.justsong.cn`）。API Key は One API で生成されたトークンでなければなりません。\n\n具体的な API Base のフォーマットは、使用しているクライアントに依存することに注意してください。\n\n```mermaid\ngraph LR\n    A(ユーザ)\n    A --->|リクエスト| B(One API)\n    B -->|中継リクエスト| C(OpenAI)\n    B -->|中継リクエスト| D(Azure)\n    B -->|中継リクエスト| E(その他のダウンストリームチャンネル)\n```\n\n現在のリクエストにどのチャネルを使うかを指定するには、トークンの後に チャネル ID を追加します： 例えば、`Authorization: Bearer ONE_API_KEY-CHANNEL_ID` のようにします。\nチャンネル ID を指定するためには、トークンは管理者によって作成される必要があることに注意してください。\n\nもしチャネル ID が指定されない場合、ロードバランシングによってリクエストが複数のチャネルに振り分けられます。\n\n### 環境変数\n1. `REDIS_CONN_STRING`: 設定すると、リクエストレート制限のためのストレージとして、メモリの代わりに Redis が使われる。\n    + 例: `REDIS_CONN_STRING=redis://default:redispw@localhost:49153`\n2. `SESSION_SECRET`: 設定すると、固定セッションキーが使用され、システムの再起動後もログインユーザーのクッキーが有効であることが保証されます。\n    + 例: `SESSION_SECRET=random_string`\n3. `SQL_DSN`: 設定すると、SQLite の代わりに指定したデータベースが使用されます。MySQL バージョン 8.0 を使用してください。\n    + 例: `SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`\n4. `LOG_SQL_DSN`: を設定すると、`logs`テーブルには独立したデータベースが使用されます。MySQLまたはPostgreSQLを使用してください。\n5. `FRONTEND_BASE_URL`: 設定されると、バックエンドアドレスではなく、指定されたフロントエンドアドレスが使われる。\n    + 例: `FRONTEND_BASE_URL=https://openai.justsong.cn`\n6. `SYNC_FREQUENCY`: 設定された場合、システムは定期的にデータベースからコンフィグを秒単位で同期する。設定されていない場合、同期は行われません。\n    + 例: `SYNC_FREQUENCY=60`\n7. `NODE_TYPE`: 設定すると、ノードのタイプを指定する。有効な値は `master` と `slave` である。設定されていない場合、デフォルトは `master`。\n    + 例: `NODE_TYPE=slave`\n8. `CHANNEL_UPDATE_FREQUENCY`: 設定すると、チャンネル残高を分単位で定期的に更新する。設定されていない場合、更新は行われません。\n    + 例: `CHANNEL_UPDATE_FREQUENCY=1440`\n9. `CHANNEL_TEST_FREQUENCY`: 設定すると、チャンネルを定期的にテストする。設定されていない場合、テストは行われません。\n    + 例: `CHANNEL_TEST_FREQUENCY=1440`\n10. `POLLING_INTERVAL`: チャネル残高の更新とチャネルの可用性をテストするときのリクエスト間の時間間隔 (秒)。デフォルトは間隔なし。\n    + 例: `POLLING_INTERVAL=5`\n\n### コマンドラインパラメータ\n1. `--port <port_number>`: サーバがリッスンするポート番号を指定。デフォルトは `3000` です。\n    + 例: `--port 3000`\n2. `--log-dir <log_dir>`: ログディレクトリを指定。設定しない場合、ログは保存されません。\n    + 例: `--log-dir ./logs`\n3. `--version`: システムのバージョン番号を表示して終了する。\n4. `--help`: コマンドの使用法ヘルプとパラメータの説明を表示。\n\n## スクリーンショット\n![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)\n![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)\n\n## FAQ\n1. ノルマとは何か？どのように計算されますか？One API にはノルマ計算の問題はありますか？\n    + ノルマ = グループ倍率 * モデル倍率 * (プロンプトトークンの数 + 完了トークンの数 * 完了倍率)\n    + 完了倍率は、公式の定義と一致するように、GPT3.5 では 1.33、GPT4 では 2 に固定されています。\n    + ストリームモードでない場合、公式 API は消費したトークンの総数を返す。ただし、プロンプトとコンプリートの消費倍率は異なるので注意してください。\n2. アカウント残高は十分なのに、\"insufficient quota\" と表示されるのはなぜですか？\n    + トークンのクォータが十分かどうかご確認ください。トークンクォータはアカウント残高とは別のものです。\n    + トークンクォータは最大使用量を設定するためのもので、ユーザーが自由に設定できます。\n3. チャンネルを使おうとすると \"No available channels\" と表示されます。どうすればいいですか？\n    + ユーザーとチャンネルグループの設定を確認してください。\n    + チャンネルモデルの設定も確認してください。\n4. チャンネルテストがエラーを報告する: \"invalid character '<' looking for beginning of value\"\n    + このエラーは、返された値が有効な JSON ではなく、HTML ページである場合に発生する。\n    + ほとんどの場合、デプロイサイトのIPかプロキシのノードが CloudFlare によってブロックされています。\n5. ChatGPT Next Web でエラーが発生しました: \"Failed to fetch\"\n    + デプロイ時に `BASE_URL` を設定しないでください。\n    + インターフェイスアドレスと API Key が正しいか再確認してください。\n\n## 関連プロジェクト\n[FastGPT](https://github.com/labring/FastGPT): LLM に基づく知識質問応答システム\n\n## 注\n本プロジェクトはオープンソースプロジェクトです。OpenAI の[利用規約](https://openai.com/policies/terms-of-use)および**適用される法令**を遵守してご利用ください。違法な目的での利用はご遠慮ください。\n\nこのプロジェクトは MIT ライセンスで公開されています。これに基づき、ページの最下部に帰属表示と本プロジェクトへのリンクを含める必要があります。\n\nこのプロジェクトを基にした派生プロジェクトについても同様です。\n\n帰属表示を含めたくない場合は、事前に許可を得なければなりません。\n\nMIT ライセンスによると、このプロジェクトを利用するリスクと責任は利用者が負うべきであり、このオープンソースプロジェクトの開発者は責任を負いません。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.2998046875,
          "content": "<p align=\"right\">\n   <strong>中文</strong> | <a href=\"./README.en.md\">English</a> | <a href=\"./README.ja.md\">日本語</a>\n</p>\n\n\n<p align=\"center\">\n  <a href=\"https://github.com/songquanpeng/one-api\"><img src=\"https://raw.githubusercontent.com/songquanpeng/one-api/main/web/default/public/logo.png\" width=\"150\" height=\"150\" alt=\"one-api logo\"></a>\n</p>\n\n<div align=\"center\">\n\n# One API\n\n_✨ 通过标准的 OpenAI API 格式访问所有的大模型，开箱即用 ✨_\n\n</div>\n\n<p align=\"center\">\n  <a href=\"https://raw.githubusercontent.com/songquanpeng/one-api/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/songquanpeng/one-api?color=brightgreen\" alt=\"license\">\n  </a>\n  <a href=\"https://github.com/songquanpeng/one-api/releases/latest\">\n    <img src=\"https://img.shields.io/github/v/release/songquanpeng/one-api?color=brightgreen&include_prereleases\" alt=\"release\">\n  </a>\n  <a href=\"https://hub.docker.com/repository/docker/justsong/one-api\">\n    <img src=\"https://img.shields.io/docker/pulls/justsong/one-api?color=brightgreen\" alt=\"docker pull\">\n  </a>\n  <a href=\"https://github.com/songquanpeng/one-api/releases/latest\">\n    <img src=\"https://img.shields.io/github/downloads/songquanpeng/one-api/total?color=brightgreen&include_prereleases\" alt=\"release\">\n  </a>\n  <a href=\"https://goreportcard.com/report/github.com/songquanpeng/one-api\">\n    <img src=\"https://goreportcard.com/badge/github.com/songquanpeng/one-api\" alt=\"GoReportCard\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/songquanpeng/one-api#部署\">部署教程</a>\n  ·\n  <a href=\"https://github.com/songquanpeng/one-api#使用方法\">使用方法</a>\n  ·\n  <a href=\"https://github.com/songquanpeng/one-api/issues\">意见反馈</a>\n  ·\n  <a href=\"https://github.com/songquanpeng/one-api#截图展示\">截图展示</a>\n  ·\n  <a href=\"https://openai.justsong.cn/\">在线演示</a>\n  ·\n  <a href=\"https://github.com/songquanpeng/one-api#常见问题\">常见问题</a>\n  ·\n  <a href=\"https://github.com/songquanpeng/one-api#相关项目\">相关项目</a>\n  ·\n  <a href=\"https://iamazing.cn/page/reward\">赞赏支持</a>\n</p>\n\n> [!NOTE]\n> 本项目为开源项目，使用者必须在遵循 OpenAI 的[使用条款](https://openai.com/policies/terms-of-use)以及**法律法规**的情况下使用，不得用于非法用途。\n>\n> 根据[《生成式人工智能服务管理暂行办法》](http://www.cac.gov.cn/2023-07/13/c_1690898327029107.htm)的要求，请勿对中国地区公众提供一切未经备案的生成式人工智能服务。\n\n> [!WARNING]\n> 使用 Docker 拉取的最新镜像可能是 `alpha` 版本，如果追求稳定性请手动指定版本。\n\n> [!WARNING]\n> 使用 root 用户初次登录系统后，务必修改默认密码 `123456`！\n\n## 功能\n1. 支持多种大模型：\n   + [x] [OpenAI ChatGPT 系列模型](https://platform.openai.com/docs/guides/gpt/chat-completions-api)（支持 [Azure OpenAI API](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference)）\n   + [x] [Anthropic Claude 系列模型](https://anthropic.com) (支持 AWS Claude)\n   + [x] [Google PaLM2/Gemini 系列模型](https://developers.generativeai.google)\n   + [x] [Mistral 系列模型](https://mistral.ai/)\n   + [x] [字节跳动豆包大模型](https://console.volcengine.com/ark/region:ark+cn-beijing/model)\n   + [x] [百度文心一言系列模型](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html)\n   + [x] [阿里通义千问系列模型](https://help.aliyun.com/document_detail/2400395.html)\n   + [x] [讯飞星火认知大模型](https://www.xfyun.cn/doc/spark/Web.html)\n   + [x] [智谱 ChatGLM 系列模型](https://bigmodel.cn)\n   + [x] [360 智脑](https://ai.360.cn)\n   + [x] [腾讯混元大模型](https://cloud.tencent.com/document/product/1729)\n   + [x] [Moonshot AI](https://platform.moonshot.cn/)\n   + [x] [百川大模型](https://platform.baichuan-ai.com)\n   + [x] [MINIMAX](https://api.minimax.chat/)\n   + [x] [Groq](https://wow.groq.com/)\n   + [x] [Ollama](https://github.com/ollama/ollama)\n   + [x] [零一万物](https://platform.lingyiwanwu.com/)\n   + [x] [阶跃星辰](https://platform.stepfun.com/)\n   + [x] [Coze](https://www.coze.com/)\n   + [x] [Cohere](https://cohere.com/)\n   + [x] [DeepSeek](https://www.deepseek.com/)\n   + [x] [Cloudflare Workers AI](https://developers.cloudflare.com/workers-ai/)\n   + [x] [DeepL](https://www.deepl.com/)\n   + [x] [together.ai](https://www.together.ai/)\n   + [x] [novita.ai](https://www.novita.ai/)\n   + [x] [硅基流动 SiliconCloud](https://siliconflow.cn/siliconcloud)\n   + [x] [xAI](https://x.ai/)\n2. 支持配置镜像以及众多[第三方代理服务](https://iamazing.cn/page/openai-api-third-party-services)。\n3. 支持通过**负载均衡**的方式访问多个渠道。\n4. 支持 **stream 模式**，可以通过流式传输实现打字机效果。\n5. 支持**多机部署**，[详见此处](#多机部署)。\n6. 支持**令牌管理**，设置令牌的过期时间、额度、允许的 IP 范围以及允许的模型访问。\n7. 支持**兑换码管理**，支持批量生成和导出兑换码，可使用兑换码为账户进行充值。\n8. 支持**渠道管理**，批量创建渠道。\n9. 支持**用户分组**以及**渠道分组**，支持为不同分组设置不同的倍率。\n10. 支持渠道**设置模型列表**。\n11. 支持**查看额度明细**。\n12. 支持**用户邀请奖励**。\n13. 支持以美元为单位显示额度。\n14. 支持发布公告，设置充值链接，设置新用户初始额度。\n15. 支持模型映射，重定向用户的请求模型，如无必要请不要设置，设置之后会导致请求体被重新构造而非直接透传，会导致部分还未正式支持的字段无法传递成功。\n16. 支持失败自动重试。\n17. 支持绘图接口。\n18. 支持 [Cloudflare AI Gateway](https://developers.cloudflare.com/ai-gateway/providers/openai/)，渠道设置的代理部分填写 `https://gateway.ai.cloudflare.com/v1/ACCOUNT_TAG/GATEWAY/openai` 即可。\n19. 支持丰富的**自定义**设置，\n    1. 支持自定义系统名称，logo 以及页脚。\n    2. 支持自定义首页和关于页面，可以选择使用 HTML & Markdown 代码进行自定义，或者使用一个单独的网页通过 iframe 嵌入。\n20. 支持通过系统访问令牌调用管理 API，进而**在无需二开的情况下扩展和自定义** One API 的功能，详情请参考此处 [API 文档](./docs/API.md)。。\n21. 支持 Cloudflare Turnstile 用户校验。\n22. 支持用户管理，支持**多种用户登录注册方式**：\n    + 邮箱登录注册（支持注册邮箱白名单）以及通过邮箱进行密码重置。\n    + 支持[飞书授权登录](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/authen-v1/authorize/get)（[这里有 One API 的实现细节阐述供参考](https://iamazing.cn/page/feishu-oauth-login)）。\n    + 支持 [GitHub 授权登录](https://github.com/settings/applications/new)。\n    + 微信公众号授权（需要额外部署 [WeChat Server](https://github.com/songquanpeng/wechat-server)）。\n23. 支持主题切换，设置环境变量 `THEME` 即可，默认为 `default`，欢迎 PR 更多主题，具体参考[此处](./web/README.md)。\n24. 配合 [Message Pusher](https://github.com/songquanpeng/message-pusher) 可将报警信息推送到多种 App 上。\n\n## 部署\n### 基于 Docker 进行部署\n```shell\n# 使用 SQLite 的部署命令：\ndocker run --name one-api -d --restart always -p 3000:3000 -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api\n# 使用 MySQL 的部署命令，在上面的基础上添加 `-e SQL_DSN=\"root:123456@tcp(localhost:3306)/oneapi\"`，请自行修改数据库连接参数，不清楚如何修改请参见下面环境变量一节。\n# 例如：\ndocker run --name one-api -d --restart always -p 3000:3000 -e SQL_DSN=\"root:123456@tcp(localhost:3306)/oneapi\" -e TZ=Asia/Shanghai -v /home/ubuntu/data/one-api:/data justsong/one-api\n```\n\n其中，`-p 3000:3000` 中的第一个 `3000` 是宿主机的端口，可以根据需要进行修改。\n\n数据和日志将会保存在宿主机的 `/home/ubuntu/data/one-api` 目录，请确保该目录存在且具有写入权限，或者更改为合适的目录。\n\n如果启动失败，请添加 `--privileged=true`，具体参考 https://github.com/songquanpeng/one-api/issues/482 。\n\n如果上面的镜像无法拉取，可以尝试使用 GitHub 的 Docker 镜像，将上面的 `justsong/one-api` 替换为 `ghcr.io/songquanpeng/one-api` 即可。\n\n如果你的并发量较大，**务必**设置 `SQL_DSN`，详见下面[环境变量](#环境变量)一节。\n\n更新命令：`docker run --rm -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower -cR`\n\nNginx 的参考配置：\n```\nserver{\n   server_name openai.justsong.cn;  # 请根据实际情况修改你的域名\n\n   location / {\n          client_max_body_size  64m;\n          proxy_http_version 1.1;\n          proxy_pass http://localhost:3000;  # 请根据实际情况修改你的端口\n          proxy_set_header Host $host;\n          proxy_set_header X-Forwarded-For $remote_addr;\n          proxy_cache_bypass $http_upgrade;\n          proxy_set_header Accept-Encoding gzip;\n          proxy_read_timeout 300s;  # GPT-4 需要较长的超时时间，请自行调整\n   }\n}\n```\n\n之后使用 Let's Encrypt 的 certbot 配置 HTTPS：\n```bash\n# Ubuntu 安装 certbot：\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n# 生成证书 & 修改 Nginx 配置\nsudo certbot --nginx\n# 根据指示进行操作\n# 重启 Nginx\nsudo service nginx restart\n```\n\n初始账号用户名为 `root`，密码为 `123456`。\n\n### 通过宝塔面板进行一键部署\n1. 安装宝塔面板9.2.0及以上版本，前往 [宝塔面板](https://www.bt.cn/new/download.html?r=dk_oneapi) 官网，选择正式版的脚本下载安装；\n2. 安装后登录宝塔面板，在左侧菜单栏中点击 `Docker`，首次进入会提示安装 `Docker` 服务，点击立即安装，按提示完成安装；\n3. 安装完成后在应用商店中搜索 `One-API`，点击安装，配置域名等基本信息即可完成安装；\n\n### 基于 Docker Compose 进行部署\n\n> 仅启动方式不同，参数设置不变，请参考基于 Docker 部署部分\n\n```shell\n# 目前支持 MySQL 启动，数据存储在 ./data/mysql 文件夹内\ndocker-compose up -d\n\n# 查看部署状态\ndocker-compose ps\n```\n\n### 手动部署\n1. 从 [GitHub Releases](https://github.com/songquanpeng/one-api/releases/latest) 下载可执行文件或者从源码编译：\n   ```shell\n   git clone https://github.com/songquanpeng/one-api.git\n\n   # 构建前端\n   cd one-api/web/default\n   npm install\n   npm run build\n\n   # 构建后端\n   cd ../..\n   go mod download\n   go build -ldflags \"-s -w\" -o one-api\n   ````\n2. 运行：\n   ```shell\n   chmod u+x one-api\n   ./one-api --port 3000 --log-dir ./logs\n   ```\n3. 访问 [http://localhost:3000/](http://localhost:3000/) 并登录。初始账号用户名为 `root`，密码为 `123456`。\n\n更加详细的部署教程[参见此处](https://iamazing.cn/page/how-to-deploy-a-website)。\n\n### 多机部署\n1. 所有服务器 `SESSION_SECRET` 设置一样的值。\n2. 必须设置 `SQL_DSN`，使用 MySQL 数据库而非 SQLite，所有服务器连接同一个数据库。\n3. 所有从服务器必须设置 `NODE_TYPE` 为 `slave`，不设置则默认为主服务器。\n4. 设置 `SYNC_FREQUENCY` 后服务器将定期从数据库同步配置，在使用远程数据库的情况下，推荐设置该项并启用 Redis，无论主从。\n5. 从服务器可以选择设置 `FRONTEND_BASE_URL`，以重定向页面请求到主服务器。\n6. 从服务器上**分别**装好 Redis，设置好 `REDIS_CONN_STRING`，这样可以做到在缓存未过期的情况下数据库零访问，可以减少延迟（Redis 集群或者哨兵模式的支持请参考环境变量说明）。\n7. 如果主服务器访问数据库延迟也比较高，则也需要启用 Redis，并设置 `SYNC_FREQUENCY`，以定期从数据库同步配置。\n\n环境变量的具体使用方法详见[此处](#环境变量)。\n\n### 宝塔部署教程\n\n详见 [#175](https://github.com/songquanpeng/one-api/issues/175)。\n\n如果部署后访问出现空白页面，详见 [#97](https://github.com/songquanpeng/one-api/issues/97)。\n\n### 部署第三方服务配合 One API 使用\n> 欢迎 PR 添加更多示例。\n\n#### ChatGPT Next Web\n项目主页：https://github.com/Yidadaa/ChatGPT-Next-Web\n\n```bash\ndocker run --name chat-next-web -d -p 3001:3000 yidadaa/chatgpt-next-web\n```\n\n注意修改端口号，之后在页面上设置接口地址（例如：https://openai.justsong.cn/ ）和 API Key 即可。\n\n#### ChatGPT Web\n项目主页：https://github.com/Chanzhaoyu/chatgpt-web\n\n```bash\ndocker run --name chatgpt-web -d -p 3002:3002 -e OPENAI_API_BASE_URL=https://openai.justsong.cn -e OPENAI_API_KEY=sk-xxx chenzhaoyu94/chatgpt-web\n```\n\n注意修改端口号、`OPENAI_API_BASE_URL` 和 `OPENAI_API_KEY`。\n\n#### QChatGPT - QQ机器人\n项目主页：https://github.com/RockChinQ/QChatGPT\n\n根据[文档](https://qchatgpt.rockchin.top)完成部署后，在 `data/provider.json`设置`requester.openai-chat-completions.base-url`为 One API 实例地址，并填写 API Key 到 `keys.openai` 组中，设置 `model` 为要使用的模型名称。\n\n运行期间可以通过`!model`命令查看、切换可用模型。\n\n### 部署到第三方平台\n<details>\n<summary><strong>部署到 Sealos </strong></summary>\n<div>\n\n> Sealos 的服务器在国外，不需要额外处理网络问题，支持高并发 & 动态伸缩。\n\n点击以下按钮一键部署（部署后访问出现 404 请等待 3~5 分钟）：\n\n[![Deploy-on-Sealos.svg](https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg)](https://cloud.sealos.io/?openapp=system-fastdeploy?templateName=one-api)\n\n</div>\n</details>\n\n<details>\n<summary><strong>部署到 Zeabur</strong></summary>\n<div>\n\n> Zeabur 的服务器在国外，自动解决了网络的问题，同时免费的额度也足够个人使用\n\n[![Deploy on Zeabur](https://zeabur.com/button.svg)](https://zeabur.com/templates/7Q0KO3)\n\n1. 首先 fork 一份代码。\n2. 进入 [Zeabur](https://zeabur.com?referralCode=songquanpeng)，登录，进入控制台。\n3. 新建一个 Project，在 Service -> Add Service 选择 Marketplace，选择 MySQL，并记下连接参数（用户名、密码、地址、端口）。\n4. 复制链接参数，运行 ```create database `one-api` ``` 创建数据库。\n5. 然后在 Service -> Add Service，选择 Git（第一次使用需要先授权），选择你 fork 的仓库。\n6. Deploy 会自动开始，先取消。进入下方 Variable，添加一个 `PORT`，值为 `3000`，再添加一个 `SQL_DSN`，值为 `<username>:<password>@tcp(<addr>:<port>)/one-api` ，然后保存。 注意如果不填写 `SQL_DSN`，数据将无法持久化，重新部署后数据会丢失。\n7. 选择 Redeploy。\n8. 进入下方 Domains，选择一个合适的域名前缀，如 \"my-one-api\"，最终域名为 \"my-one-api.zeabur.app\"，也可以 CNAME 自己的域名。\n9. 等待部署完成，点击生成的域名进入 One API。\n\n</div>\n</details>\n\n<details>\n<summary><strong>部署到 Render</strong></summary>\n<div>\n\n> Render 提供免费额度，绑卡后可以进一步提升额度\n\nRender 可以直接部署 docker 镜像，不需要 fork 仓库：https://dashboard.render.com\n\n</div>\n</details>\n\n## 配置\n系统本身开箱即用。\n\n你可以通过设置环境变量或者命令行参数进行配置。\n\n等到系统启动后，使用 `root` 用户登录系统并做进一步的配置。\n\n**Note**：如果你不知道某个配置项的含义，可以临时删掉值以看到进一步的提示文字。\n\n## 使用方法\n在`渠道`页面中添加你的 API Key，之后在`令牌`页面中新增访问令牌。\n\n之后就可以使用你的令牌访问 One API 了，使用方式与 [OpenAI API](https://platform.openai.com/docs/api-reference/introduction) 一致。\n\n你需要在各种用到 OpenAI API 的地方设置 API Base 为你的 One API 的部署地址，例如：`https://openai.justsong.cn`，API Key 则为你在 One API 中生成的令牌。\n\n注意，具体的 API Base 的格式取决于你所使用的客户端。\n\n例如对于 OpenAI 的官方库：\n```bash\nOPENAI_API_KEY=\"sk-xxxxxx\"\nOPENAI_API_BASE=\"https://<HOST>:<PORT>/v1\"\n```\n\n```mermaid\ngraph LR\n    A(用户)\n    A --->|使用 One API 分发的 key 进行请求| B(One API)\n    B -->|中继请求| C(OpenAI)\n    B -->|中继请求| D(Azure)\n    B -->|中继请求| E(其他 OpenAI API 格式下游渠道)\n    B -->|中继并修改请求体和返回体| F(非 OpenAI API 格式下游渠道)\n```\n\n可以通过在令牌后面添加渠道 ID 的方式指定使用哪一个渠道处理本次请求，例如：`Authorization: Bearer ONE_API_KEY-CHANNEL_ID`。\n注意，需要是管理员用户创建的令牌才能指定渠道 ID。\n\n不加的话将会使用负载均衡的方式使用多个渠道。\n\n### 环境变量\n> One API 支持从 `.env` 文件中读取环境变量，请参照 `.env.example` 文件，使用时请将其重命名为 `.env`。\n1. `REDIS_CONN_STRING`：设置之后将使用 Redis 作为缓存使用。\n   + 例子：`REDIS_CONN_STRING=redis://default:redispw@localhost:49153`\n   + 如果数据库访问延迟很低，没有必要启用 Redis，启用后反而会出现数据滞后的问题。\n   + 如果需要使用哨兵或者集群模式：\n     + 则需要把该环境变量设置为节点列表，例如：`localhost:49153,localhost:49154,localhost:49155`。\n     + 除此之外还需要设置以下环境变量：\n       + `REDIS_PASSWORD`：Redis 集群或者哨兵模式下的密码设置。\n       + `REDIS_MASTER_NAME`：Redis 哨兵模式下主节点的名称。\n2. `SESSION_SECRET`：设置之后将使用固定的会话密钥，这样系统重新启动后已登录用户的 cookie 将依旧有效。\n   + 例子：`SESSION_SECRET=random_string`\n3. `SQL_DSN`：设置之后将使用指定数据库而非 SQLite，请使用 MySQL 或 PostgreSQL。\n   + 例子：\n     + MySQL：`SQL_DSN=root:123456@tcp(localhost:3306)/oneapi`\n     + PostgreSQL：`SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi`（适配中，欢迎反馈）\n   + 注意需要提前建立数据库 `oneapi`，无需手动建表，程序将自动建表。\n   + 如果使用本地数据库：部署命令可添加 `--network=\"host\"` 以使得容器内的程序可以访问到宿主机上的 MySQL。\n   + 如果使用云数据库：如果云服务器需要验证身份，需要在连接参数中添加 `?tls=skip-verify`。\n   + 请根据你的数据库配置修改下列参数（或者保持默认值）：\n     + `SQL_MAX_IDLE_CONNS`：最大空闲连接数，默认为 `100`。\n     + `SQL_MAX_OPEN_CONNS`：最大打开连接数，默认为 `1000`。\n       + 如果报错 `Error 1040: Too many connections`，请适当减小该值。\n     + `SQL_CONN_MAX_LIFETIME`：连接的最大生命周期，默认为 `60`，单位分钟。\n4. `LOG_SQL_DSN`：设置之后将为 `logs` 表使用独立的数据库，请使用 MySQL 或 PostgreSQL。\n5. `FRONTEND_BASE_URL`：设置之后将重定向页面请求到指定的地址，仅限从服务器设置。\n   + 例子：`FRONTEND_BASE_URL=https://openai.justsong.cn`\n6. `MEMORY_CACHE_ENABLED`：启用内存缓存，会导致用户额度的更新存在一定的延迟，可选值为 `true` 和 `false`，未设置则默认为 `false`。\n   + 例子：`MEMORY_CACHE_ENABLED=true`\n7. `SYNC_FREQUENCY`：在启用缓存的情况下与数据库同步配置的频率，单位为秒，默认为 `600` 秒。\n   + 例子：`SYNC_FREQUENCY=60`\n8. `NODE_TYPE`：设置之后将指定节点类型，可选值为 `master` 和 `slave`，未设置则默认为 `master`。\n   + 例子：`NODE_TYPE=slave`\n9. `CHANNEL_UPDATE_FREQUENCY`：设置之后将定期更新渠道余额，单位为分钟，未设置则不进行更新。\n   + 例子：`CHANNEL_UPDATE_FREQUENCY=1440`\n10. `CHANNEL_TEST_FREQUENCY`：设置之后将定期检查渠道，单位为分钟，未设置则不进行检查。 \n   +例子：`CHANNEL_TEST_FREQUENCY=1440`\n11. `POLLING_INTERVAL`：批量更新渠道余额以及测试可用性时的请求间隔，单位为秒，默认无间隔。\n    + 例子：`POLLING_INTERVAL=5`\n12. `BATCH_UPDATE_ENABLED`：启用数据库批量更新聚合，会导致用户额度的更新存在一定的延迟可选值为 `true` 和 `false`，未设置则默认为 `false`。\n    + 例子：`BATCH_UPDATE_ENABLED=true`\n    + 如果你遇到了数据库连接数过多的问题，可以尝试启用该选项。\n13. `BATCH_UPDATE_INTERVAL=5`：批量更新聚合的时间间隔，单位为秒，默认为 `5`。\n    + 例子：`BATCH_UPDATE_INTERVAL=5`\n14. 请求频率限制：\n    + `GLOBAL_API_RATE_LIMIT`：全局 API 速率限制（除中继请求外），单 ip 三分钟内的最大请求数，默认为 `180`。\n    + `GLOBAL_WEB_RATE_LIMIT`：全局 Web 速率限制，单 ip 三分钟内的最大请求数，默认为 `60`。\n15. 编码器缓存设置：\n    + `TIKTOKEN_CACHE_DIR`：默认程序启动时会联网下载一些通用的词元的编码，如：`gpt-3.5-turbo`，在一些网络环境不稳定，或者离线情况，可能会导致启动有问题，可以配置此目录缓存数据，可迁移到离线环境。\n    + `DATA_GYM_CACHE_DIR`：目前该配置作用与 `TIKTOKEN_CACHE_DIR` 一致，但是优先级没有它高。\n16. `RELAY_TIMEOUT`：中继超时设置，单位为秒，默认不设置超时时间。\n17. `RELAY_PROXY`：设置后使用该代理来请求 API。\n18. `USER_CONTENT_REQUEST_TIMEOUT`：用户上传内容下载超时时间，单位为秒。\n19. `USER_CONTENT_REQUEST_PROXY`：设置后使用该代理来请求用户上传的内容，例如图片。\n20. `SQLITE_BUSY_TIMEOUT`：SQLite 锁等待超时设置，单位为毫秒，默认 `3000`。\n21. `GEMINI_SAFETY_SETTING`：Gemini 的安全设置，默认 `BLOCK_NONE`。\n22. `GEMINI_VERSION`：One API 所使用的 Gemini 版本，默认为 `v1`。\n23. `THEME`：系统的主题设置，默认为 `default`，具体可选值参考[此处](./web/README.md)。\n24. `ENABLE_METRIC`：是否根据请求成功率禁用渠道，默认不开启，可选值为 `true` 和 `false`。\n25. `METRIC_QUEUE_SIZE`：请求成功率统计队列大小，默认为 `10`。\n26. `METRIC_SUCCESS_RATE_THRESHOLD`：请求成功率阈值，默认为 `0.8`。\n27. `INITIAL_ROOT_TOKEN`：如果设置了该值，则在系统首次启动时会自动创建一个值为该环境变量值的 root 用户令牌。\n28. `INITIAL_ROOT_ACCESS_TOKEN`：如果设置了该值，则在系统首次启动时会自动创建一个值为该环境变量的 root 用户创建系统管理令牌。\n29. `ENFORCE_INCLUDE_USAGE`：是否强制在 stream 模型下返回 usage，默认不开启，可选值为 `true` 和 `false`。\n\n### 命令行参数\n1. `--port <port_number>`: 指定服务器监听的端口号，默认为 `3000`。\n   + 例子：`--port 3000`\n2. `--log-dir <log_dir>`: 指定日志文件夹，如果没有设置，默认保存至工作目录的 `logs` 文件夹下。\n   + 例子：`--log-dir ./logs`\n3. `--version`: 打印系统版本号并退出。\n4. `--help`: 查看命令的使用帮助和参数说明。\n\n## 演示\n### 在线演示\n注意，该演示站不提供对外服务：\nhttps://openai.justsong.cn\n\n### 截图展示\n![channel](https://user-images.githubusercontent.com/39998050/233837954-ae6683aa-5c4f-429f-a949-6645a83c9490.png)\n![token](https://user-images.githubusercontent.com/39998050/233837971-dab488b7-6d96-43af-b640-a168e8d1c9bf.png)\n\n## 常见问题\n1. 额度是什么？怎么计算的？One API 的额度计算有问题？\n   + 额度 = 分组倍率 * 模型倍率 * （提示 token 数 + 补全 token 数 * 补全倍率）\n   + 其中补全倍率对于 GPT3.5 固定为 1.33，GPT4 为 2，与官方保持一致。\n   + 如果是非流模式，官方接口会返回消耗的总 token，但是你要注意提示和补全的消耗倍率不一样。\n   + 注意，One API 的默认倍率就是官方倍率，是已经调整过的。\n2. 账户额度足够为什么提示额度不足？\n   + 请检查你的令牌额度是否足够，这个和账户额度是分开的。\n   + 令牌额度仅供用户设置最大使用量，用户可自由设置。\n3. 提示无可用渠道？\n   + 请检查的用户分组和渠道分组设置。\n   + 以及渠道的模型设置。\n4. 渠道测试报错：`invalid character '<' looking for beginning of value`\n   + 这是因为返回值不是合法的 JSON，而是一个 HTML 页面。\n   + 大概率是你的部署站的 IP 或代理的节点被 CloudFlare 封禁了。\n5. ChatGPT Next Web 报错：`Failed to fetch`\n   + 部署的时候不要设置 `BASE_URL`。\n   + 检查你的接口地址和 API Key 有没有填对。\n   + 检查是否启用了 HTTPS，浏览器会拦截 HTTPS 域名下的 HTTP 请求。\n6. 报错：`当前分组负载已饱和，请稍后再试`\n   + 上游渠道 429 了。\n7. 升级之后我的数据会丢失吗？\n   + 如果使用 MySQL，不会。\n   + 如果使用 SQLite，需要按照我所给的部署命令挂载 volume 持久化 one-api.db 数据库文件，否则容器重启后数据会丢失。\n8. 升级之前数据库需要做变更吗？\n   + 一般情况下不需要，系统将在初始化的时候自动调整。\n   + 如果需要的话，我会在更新日志中说明，并给出脚本。\n9. 手动修改数据库后报错：`数据库一致性已被破坏，请联系管理员`？\n   + 这是检测到 ability 表里有些记录的渠道 id 是不存在的，这大概率是因为你删了 channel 表里的记录但是没有同步在 ability 表里清理无效的渠道。\n   + 对于每一个渠道，其所支持的模型都需要有一个专门的 ability 表的记录，表示该渠道支持该模型。\n\n## 相关项目\n* [FastGPT](https://github.com/labring/FastGPT): 基于 LLM 大语言模型的知识库问答系统\n* [ChatGPT Next Web](https://github.com/Yidadaa/ChatGPT-Next-Web):  一键拥有你自己的跨平台 ChatGPT 应用\n* [VChart](https://github.com/VisActor/VChart):  不只是开箱即用的多端图表库，更是生动灵活的数据故事讲述者。\n* [VMind](https://github.com/VisActor/VMind):  不仅自动，还很智能。开源智能可视化解决方案。\n\n## 注意\n\n本项目使用 MIT 协议进行开源，**在此基础上**，必须在页面底部保留署名以及指向本项目的链接。如果不想保留署名，必须首先获得授权。\n\n同样适用于基于本项目的二开项目。\n\n依据 MIT 协议，使用者需自行承担使用本项目的风险与责任，本开源项目开发者与此无关。\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "controller",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.6201171875,
          "content": "version: '3.4'\n\nservices:\n  one-api:\n    image: \"${REGISTRY:-docker.io}/justsong/one-api:latest\"\n    container_name: one-api\n    restart: always\n    command: --log-dir /app/logs\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - ./data/oneapi:/data\n      - ./logs:/app/logs\n    environment:\n      - SQL_DSN=oneapi:123456@tcp(db:3306)/one-api  # 修改此行，或注释掉以使用 SQLite 作为数据库\n      - REDIS_CONN_STRING=redis://redis\n      - SESSION_SECRET=random_string  # 修改为随机字符串\n      - TZ=Asia/Shanghai\n#      - NODE_TYPE=slave  # 多机部署时从节点取消注释该行\n#      - SYNC_FREQUENCY=60  # 需要定期从数据库加载数据时取消注释该行\n#      - FRONTEND_BASE_URL=https://openai.justsong.cn  # 多机部署时从节点取消注释该行\n    depends_on:\n      - redis\n      - db\n    healthcheck:\n      test: [ \"CMD-SHELL\", \"wget -q -O - http://localhost:3000/api/status | grep -o '\\\"success\\\":\\\\s*true' | awk -F: '{print $2}'\" ]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  redis:\n    image: \"${REGISTRY:-docker.io}/redis:latest\"\n    container_name: redis\n    restart: always\n\n  db:\n    image: \"${REGISTRY:-docker.io}/mysql:8.2.0\"\n    restart: always\n    container_name: mysql\n    volumes:\n      - ./data/mysql:/var/lib/mysql  # 挂载目录，持久化存储\n    ports:\n      - '3306:3306'\n    environment:\n      TZ: Asia/Shanghai   # 设置时区\n      MYSQL_ROOT_PASSWORD: 'OneAPI@justsong' # 设置 root 用户的密码\n      MYSQL_USER: oneapi   # 创建专用用户\n      MYSQL_PASSWORD: '123456'    # 设置专用用户密码\n      MYSQL_DATABASE: one-api   # 自动创建数据库"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.8876953125,
          "content": "module github.com/songquanpeng/one-api\n\n// +heroku goVersion go1.18\ngo 1.20\n\nrequire (\n\tcloud.google.com/go/iam v1.1.10\n\tgithub.com/aws/aws-sdk-go-v2 v1.27.0\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.17.15\n\tgithub.com/aws/aws-sdk-go-v2/service/bedrockruntime v1.8.3\n\tgithub.com/gin-contrib/cors v1.7.2\n\tgithub.com/gin-contrib/gzip v1.0.1\n\tgithub.com/gin-contrib/sessions v1.0.1\n\tgithub.com/gin-contrib/static v1.1.2\n\tgithub.com/gin-gonic/gin v1.10.0\n\tgithub.com/go-playground/validator/v10 v10.20.0\n\tgithub.com/go-redis/redis/v8 v8.11.5\n\tgithub.com/golang-jwt/jwt v3.2.2+incompatible\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/websocket v1.5.1\n\tgithub.com/jinzhu/copier v0.4.0\n\tgithub.com/joho/godotenv v1.5.1\n\tgithub.com/patrickmn/go-cache v2.1.0+incompatible\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/pkoukk/tiktoken-go v0.1.7\n\tgithub.com/smartystreets/goconvey v1.8.1\n\tgithub.com/stretchr/testify v1.9.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/image v0.18.0\n\tgoogle.golang.org/api v0.187.0\n\tgorm.io/driver/mysql v1.5.6\n\tgorm.io/driver/postgres v1.5.7\n\tgorm.io/driver/sqlite v1.5.5\n\tgorm.io/gorm v1.25.10\n)\n\nrequire (\n\tcloud.google.com/go/auth v0.6.1 // indirect\n\tcloud.google.com/go/auth/oauth2adapt v0.2.2 // indirect\n\tcloud.google.com/go/compute/metadata v0.3.0 // indirect\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.2 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.7 // indirect\n\tgithub.com/aws/smithy-go v1.20.2 // indirect\n\tgithub.com/bytedance/sonic v1.11.6 // indirect\n\tgithub.com/bytedance/sonic/loader v0.1.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cloudwego/base64x v0.1.4 // indirect\n\tgithub.com/cloudwego/iasm v0.2.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f // indirect\n\tgithub.com/dlclark/regexp2 v1.11.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.3 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/go-sql-driver/mysql v1.8.1 // indirect\n\tgithub.com/goccy/go-json v0.10.3 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/s2a-go v0.1.7 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.12.5 // indirect\n\tgithub.com/gopherjs/gopherjs v1.17.2 // indirect\n\tgithub.com/gorilla/context v1.1.2 // indirect\n\tgithub.com/gorilla/securecookie v1.1.2 // indirect\n\tgithub.com/gorilla/sessions v1.2.2 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9 // indirect\n\tgithub.com/jackc/pgx/v5 v5.5.5 // indirect\n\tgithub.com/jackc/puddle/v2 v2.2.1 // indirect\n\tgithub.com/jinzhu/inflection v1.0.0 // indirect\n\tgithub.com/jinzhu/now v1.1.5 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/jtolds/gls v4.20.0+incompatible // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.7 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/leodido/go-urn v1.4.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-sqlite3 v1.14.22 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/smarty/assertions v1.15.0 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.12 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 // indirect\n\tgo.opentelemetry.io/otel v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.24.0 // indirect\n\tgolang.org/x/arch v0.8.0 // indirect\n\tgolang.org/x/net v0.26.0 // indirect\n\tgolang.org/x/oauth2 v0.21.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.5.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240617180043-68d350f18fd4 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240624140628-dc46fd24d27d // indirect\n\tgoogle.golang.org/grpc v1.64.1 // indirect\n\tgoogle.golang.org/protobuf v1.34.2 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 28.791015625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go/auth v0.6.1 h1:T0Zw1XM5c1GlpN2HYr2s+m3vr1p2wy+8VN+Z1FKxW38=\ncloud.google.com/go/auth v0.6.1/go.mod h1:eFHG7zDzbXHKmjJddFG/rBlcGp6t25SwRUiEQSlO4x4=\ncloud.google.com/go/auth/oauth2adapt v0.2.2 h1:+TTV8aXpjeChS9M+aTtN/TjdQnzJvmzKFt//oWu7HX4=\ncloud.google.com/go/auth/oauth2adapt v0.2.2/go.mod h1:wcYjgpZI9+Yu7LyYBg4pqSiaRkfEK3GQcpb7C/uyF1Q=\ncloud.google.com/go/compute/metadata v0.3.0 h1:Tz+eQXMEqDIKRsmY3cHTL6FVaynIjX2QxYC4trgAKZc=\ncloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=\ncloud.google.com/go/iam v1.1.10 h1:ZSAr64oEhQSClwBL670MsJAW5/RLiC6kfw3Bqmd5ZDI=\ncloud.google.com/go/iam v1.1.10/go.mod h1:iEgMq62sg8zx446GCaijmA2Miwg5o3UbO+nI47WHJps=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/aws/aws-sdk-go-v2 v1.27.0 h1:7bZWKoXhzI+mMR/HjdMx8ZCC5+6fY0lS5tr0bbgiLlo=\ngithub.com/aws/aws-sdk-go-v2 v1.27.0/go.mod h1:ffIFB97e2yNsv4aTSGkqtHnppsIJzw7G7BReUZ3jCXM=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.2 h1:x6xsQXGSmW6frevwDA+vi/wqhp1ct18mVXYN08/93to=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.2/go.mod h1:lPprDr1e6cJdyYeGXnRaJoP4Md+cDBvi2eOj00BlGmg=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.15 h1:YDexlvDRCA8ems2T5IP1xkMtOZ1uLJOCJdTr0igs5zo=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.15/go.mod h1:vxHggqW6hFNaeNC0WyXS3VdyjcV0a4KMUY4dKJ96buU=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.7 h1:lf/8VTF2cM+N4SLzaYJERKEWAXq8MOMpZfU6wEPWsPk=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.7/go.mod h1:4SjkU7QiqK2M9oozyMzfZ/23LmUY+h3oFqhdeP5OMiI=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.7 h1:4OYVp0705xu8yjdyoWix0r9wPIRXnIzzOoUpQVHIJ/g=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.7/go.mod h1:vd7ESTEvI76T2Na050gODNmNU7+OyKrIKroYTu4ABiI=\ngithub.com/aws/aws-sdk-go-v2/service/bedrockruntime v1.8.3 h1:Fihjyd6DeNjcawBEGLH9dkIEUi6AdhucDKPE9nJ4QiY=\ngithub.com/aws/aws-sdk-go-v2/service/bedrockruntime v1.8.3/go.mod h1:opvUj3ismqSCxYc+m4WIjPL0ewZGtvp0ess7cKvBPOQ=\ngithub.com/aws/smithy-go v1.20.2 h1:tbp628ireGtzcHDDmLT/6ADHidqnwgF57XOXZe6tp4Q=\ngithub.com/aws/smithy-go v1.20.2/go.mod h1:krry+ya/rV9RDcV/Q16kpu6ypI4K2czasz0NC3qS14E=\ngithub.com/bytedance/sonic v1.11.6 h1:oUp34TzMlL+OY1OUWxHqsdkgC/Zfc85zGqw9siXjrc0=\ngithub.com/bytedance/sonic v1.11.6/go.mod h1:LysEHSvpvDySVdC2f87zGWf6CIKJcAvqab1ZaiQtds4=\ngithub.com/bytedance/sonic/loader v0.1.1 h1:c+e5Pt1k/cy5wMveRDyk2X4B9hF4g7an8N3zCYjJFNM=\ngithub.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=\ngithub.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=\ngithub.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=\ngithub.com/cloudwego/iasm v0.2.0/go.mod h1:8rXZaNYT2n95jn+zTI1sDr+IgcD2GVs0nlbbQPiEFhY=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\ngithub.com/dlclark/regexp2 v1.11.0 h1:G/nrcoOa7ZXlpoa/91N3X7mM3r8eIlMBBJZvsz/mxKI=\ngithub.com/dlclark/regexp2 v1.11.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=\ngithub.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=\ngithub.com/gin-contrib/cors v1.7.2 h1:oLDHxdg8W/XDoN/8zamqk/Drgt4oVZDvaV0YmvVICQw=\ngithub.com/gin-contrib/cors v1.7.2/go.mod h1:SUJVARKgQ40dmrzgXEVxj2m7Ig1v1qIboQkPDTQ9t2E=\ngithub.com/gin-contrib/gzip v1.0.1 h1:HQ8ENHODeLY7a4g1Au/46Z92bdGFl74OhxcZble9WJE=\ngithub.com/gin-contrib/gzip v1.0.1/go.mod h1:njt428fdUNRvjuJf16tZMYZ2Yl+WQB53X5wmhDwXvC4=\ngithub.com/gin-contrib/sessions v1.0.1 h1:3hsJyNs7v7N8OtelFmYXFrulAf6zSR7nW/putcPEHxI=\ngithub.com/gin-contrib/sessions v1.0.1/go.mod h1:ouxSFM24/OgIud5MJYQJLpy6AwxQ5EYO9yLhbtObGkM=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-contrib/static v1.1.2 h1:c3kT4bFkUJn2aoRU3s6XnMjJT8J6nNWJkR0NglqmlZ4=\ngithub.com/gin-contrib/static v1.1.2/go.mod h1:Fw90ozjHCmZBWbgrsqrDvO28YbhKEKzKp8GixhR4yLw=\ngithub.com/gin-gonic/gin v1.10.0 h1:nTuyha1TYqgedzytsKYqna+DfLos46nTv2ygFy86HFU=\ngithub.com/gin-gonic/gin v1.10.0/go.mod h1:4PMNQiOhvDRa013RKVbsiNwoyezlm2rm0uX/T7kzp5Y=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.20.0 h1:K9ISHbSaI0lyB2eWMPJo+kOS/FBExVwjEviJTixqxL8=\ngithub.com/go-playground/validator/v10 v10.20.0/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=\ngithub.com/go-redis/redis/v8 v8.11.5 h1:AcZZR7igkdvfVmQTPnu9WE37LRrO/YrBH5zWyjDC0oI=\ngithub.com/go-redis/redis/v8 v8.11.5/go.mod h1:gREzHqY1hg6oD9ngVRbLStwAWKhA0FEgq8Jd4h5lpwo=\ngithub.com/go-sql-driver/mysql v1.7.0/go.mod h1:OXbVy3sEdcQ2Doequ6Z5BW6fXNQTmx+9S1MCJN5yJMI=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/goccy/go-json v0.10.3 h1:KZ5WoDbxAIgm2HNbYckL0se1fHD6rz5j4ywS6ebzDqA=\ngithub.com/goccy/go-json v0.10.3/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=\ngithub.com/golang-jwt/jwt v3.2.2+incompatible h1:IfV12K8xAKAnZqdXVzCZ+TOjboZ2keLg81eXfW3O+oY=\ngithub.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.12.5 h1:8gw9KZK8TiVKB6q3zHY3SBzLnrGp6HQjyfYBYGmXdxA=\ngithub.com/googleapis/gax-go/v2 v2.12.5/go.mod h1:BUDKcWo+RaKq5SC9vVYL0wLADa3VcfswbOMMRmB9H3E=\ngithub.com/gopherjs/gopherjs v1.17.2 h1:fQnZVsXk8uxXIStYb0N4bGk7jeyTalG/wsZjQ25dO0g=\ngithub.com/gopherjs/gopherjs v1.17.2/go.mod h1:pRRIvn/QzFLrKfvEz3qUuEhtE/zLCWfreZ6J5gM2i+k=\ngithub.com/gorilla/context v1.1.2 h1:WRkNAv2uoa03QNIc1A6u4O7DAGMUVoopZhkiXWA2V1o=\ngithub.com/gorilla/context v1.1.2/go.mod h1:KDPwT9i/MeWHiLl90fuTgrt4/wPcv75vFAZLaOOcbxM=\ngithub.com/gorilla/securecookie v1.1.2 h1:YCIWL56dvtr73r6715mJs5ZvhtnY73hBvEF8kXD8ePA=\ngithub.com/gorilla/securecookie v1.1.2/go.mod h1:NfCASbcHqRSY+3a8tlWJwsQap2VX5pwzwo4h3eOamfo=\ngithub.com/gorilla/sessions v1.2.2 h1:lqzMYz6bOfvn2WriPUjNByzeXIlVzURcPmgMczkmTjY=\ngithub.com/gorilla/sessions v1.2.2/go.mod h1:ePLdVu+jbEgHH+KWw8I1z2wqd0BAdAQh/8LRvBeoNcQ=\ngithub.com/gorilla/websocket v1.5.1 h1:gmztn0JnHVt9JZquRuzLw3g4wouNVzKL15iLr/zn/QY=\ngithub.com/gorilla/websocket v1.5.1/go.mod h1:x3kM2JMyaluk02fnUJpQuwD2dCS5NDG2ZHL0uE0tcaY=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9 h1:L0QtFUgDarD7Fpv9jeVMgy/+Ec0mtnmYuImjTz6dtDA=\ngithub.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgx/v5 v5.5.5 h1:amBjrZVmksIdNjxGW/IiIMzxMKZFelXbUoPNb+8sjQw=\ngithub.com/jackc/pgx/v5 v5.5.5/go.mod h1:ez9gk+OAat140fv9ErkZDYFWmXLfV+++K0uAOiwgm1A=\ngithub.com/jackc/puddle/v2 v2.2.1 h1:RhxXJtFG022u4ibrCSMSiu5aOq1i77R3OHKNJj77OAk=\ngithub.com/jackc/puddle/v2 v2.2.1/go.mod h1:vriiEXHvEE654aYKXXjOvZM39qJ0q+azkZFrfEOc3H4=\ngithub.com/jinzhu/copier v0.4.0 h1:w3ciUoD19shMCRargcpm0cm91ytaBhDvuRpz1ODO/U8=\ngithub.com/jinzhu/copier v0.4.0/go.mod h1:DfbEm0FYsaqBcKcFuvmOZb218JkPGtvSHsKg8S8hyyg=\ngithub.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=\ngithub.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\ngithub.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=\ngithub.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\ngithub.com/joho/godotenv v1.5.1 h1:7eLL/+HRGLY0ldzfGMeQkb7vMd0as4CfYvUVzLqw0N0=\ngithub.com/joho/godotenv v1.5.1/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jtolds/gls v4.20.0+incompatible h1:xdiiI2gbIgH/gLH7ADydsJ1uDOEzR8yvV7C0MuV77Wo=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.7 h1:ZWSB3igEs+d0qvnxR/ZBzXVmxkgt8DdzP6m9pfuVLDM=\ngithub.com/klauspost/cpuid/v2 v2.2.7/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=\ngithub.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-sqlite3 v1.14.22 h1:2gZY6PC6kBnID23Tichd1K+Z0oS6nE/XwU+Vz/5o4kU=\ngithub.com/mattn/go-sqlite3 v1.14.22/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/gomega v1.18.1 h1:M1GfJqGRrBrrGGsbxzV5dqM2U2ApXefZCQpkukxYRLE=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkoukk/tiktoken-go v0.1.7 h1:qOBHXX4PHtvIvmOtyg1EeKlwFRiMKAcoMp4Q+bLQDmw=\ngithub.com/pkoukk/tiktoken-go v0.1.7/go.mod h1:9NiV+i9mJKGj1rYOT+njbv+ZwA/zJxYdewGl6qVatpg=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=\ngithub.com/smarty/assertions v1.15.0 h1:cR//PqUBUiQRakZWqBiFFQ9wb8emQGDb0HeGdqGByCY=\ngithub.com/smarty/assertions v1.15.0/go.mod h1:yABtdzeQs6l1brC900WlRNwj6ZR55d7B+E8C6HtKdec=\ngithub.com/smartystreets/goconvey v1.8.1 h1:qGjIddxOk4grTu9JPOU31tVfq3cNdBlNa5sSznIX1xY=\ngithub.com/smartystreets/goconvey v1.8.1/go.mod h1:+/u4qLyY6x1jReYOp7GOM2FSt8aP9CzCZL03bI28W60=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=\ngithub.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=\ngithub.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 h1:4Pp6oUg3+e/6M4C0A/3kJ2VYa++dsWVTtGgLVj5xtHg=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0/go.mod h1:Mjt1i1INqiaoZOMGR1RIUJN+i3ChKoFRqzrRQhlkbs0=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 h1:jq9TW8u3so/bN+JPT166wjOI6/vQPF6Xe7nMNIltagk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0/go.mod h1:p8pYQP+m5XfbZm9fxtSKAbM6oIllS7s2AfxrChvc7iw=\ngo.opentelemetry.io/otel v1.24.0 h1:0LAOdjNmQeSTzGBzduGe/rU4tZhMwL5rWgtp9Ku5Jfo=\ngo.opentelemetry.io/otel v1.24.0/go.mod h1:W7b9Ozg4nkF5tWI5zsXkaKKDjdVjpD4oAt9Qi/MArHo=\ngo.opentelemetry.io/otel/metric v1.24.0 h1:6EhoGWWK28x1fbpA4tYTOWBkPefTDQnb8WSGXlc88kI=\ngo.opentelemetry.io/otel/metric v1.24.0/go.mod h1:VYhLe1rFfxuTXLgj4CBiyz+9WYBA8pNGJgDcSFRKBco=\ngo.opentelemetry.io/otel/trace v1.24.0 h1:CsKnnL4dUAr/0llH9FKuc698G04IrpWV0MQA/Y1YELI=\ngo.opentelemetry.io/otel/trace v1.24.0/go.mod h1:HPc3Xr/cOApsBI154IU0OI0HJexz+aw5uPdbs3UCjNU=\ngolang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/arch v0.8.0 h1:3wRIsP3pM4yUptoR96otTUOXI367OS0+c9eeRi9doIc=\ngolang.org/x/arch v0.8.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/image v0.18.0 h1:jGzIakQa/ZXI1I0Fxvaa9W7yP25TqT6cHIHn+6CqvSQ=\ngolang.org/x/image v0.18.0/go.mod h1:4yyo5vMFQjVjUcVk4jEQcU9MGy/rulF5WvUILseCM2E=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.26.0 h1:soB7SVo0PWrY4vPW/+ay0jKDNScG2X9wFeYlXIvJsOQ=\ngolang.org/x/net v0.26.0/go.mod h1:5YKkiSynbBIh3p6iOc/vibscux0x38BZDkn8sCUPxHE=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.21.0 h1:tsimM75w1tF/uws5rbeHzIWxEqElMehnc+iW793zsZs=\ngolang.org/x/oauth2 v0.21.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.187.0 h1:Mxs7VATVC2v7CY+7Xwm4ndkX71hpElcvx0D1Ji/p1eo=\ngoogle.golang.org/api v0.187.0/go.mod h1:KIHlTc4x7N7gKKuVsdmfBXN13yEEWXWFURWY6SBp2gk=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240617180043-68d350f18fd4 h1:MuYw1wJzT+ZkybKfaOXKp5hJiZDn2iHaXRw0mRYdHSc=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240617180043-68d350f18fd4/go.mod h1:px9SlOOZBg1wM1zdnr8jEL4CNGUBZ+ZKYtNPApNQc4c=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240624140628-dc46fd24d27d h1:k3zyW3BYYR30e8v3x0bTDdE9vpYFjZHK+HcyqkrppWk=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240624140628-dc46fd24d27d/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.64.1 h1:LKtvyfbX3UGVPFcGqJ9ItpVWW6oN/2XqTxfAnwRRXiA=\ngoogle.golang.org/grpc v1.64.1/go.mod h1:hiQF4LFZelK2WKaP6W0L92zGHtiQdZxk8CrSdvyjeP0=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngorm.io/driver/mysql v1.5.6 h1:Ld4mkIickM+EliaQZQx3uOJDJHtrd70MxAUqWqlx3Y8=\ngorm.io/driver/mysql v1.5.6/go.mod h1:sEtPWMiqiN1N1cMXoXmBbd8C6/l+TESwriotuRRpkDM=\ngorm.io/driver/postgres v1.5.7 h1:8ptbNJTDbEmhdr62uReG5BGkdQyeasu/FZHxI0IMGnM=\ngorm.io/driver/postgres v1.5.7/go.mod h1:3e019WlBaYI5o5LIdNV+LyxCMNtLOQETBXL2h4chKpA=\ngorm.io/driver/sqlite v1.5.5 h1:7MDMtUZhV065SilG62E0MquljeArQZNfJnjd9i9gx3E=\ngorm.io/driver/sqlite v1.5.5/go.mod h1:6NgQ7sQWAIFsPrJJl1lSNSu2TABh0ZZ/zm5fosATavE=\ngorm.io/gorm v1.25.7/go.mod h1:hbnx/Oo0ChWMn1BIhpy1oYozzpM15i4YPuHDmfYtwg8=\ngorm.io/gorm v1.25.10 h1:dQpO+33KalOA+aFYGlK+EfxcI5MbO7EP2yYygwh9h+s=\ngorm.io/gorm v1.25.10/go.mod h1:hbnx/Oo0ChWMn1BIhpy1oYozzpM15i4YPuHDmfYtwg8=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nnullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\n"
        },
        {
          "name": "i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 3.154296875,
          "content": "package main\n\nimport (\n\t\"embed\"\n\t\"fmt\"\n\t\"github.com/gin-contrib/sessions\"\n\t\"github.com/gin-contrib/sessions/cookie\"\n\t\"github.com/gin-gonic/gin\"\n\t_ \"github.com/joho/godotenv/autoload\"\n\t\"github.com/songquanpeng/one-api/common\"\n\t\"github.com/songquanpeng/one-api/common/client\"\n\t\"github.com/songquanpeng/one-api/common/config\"\n\t\"github.com/songquanpeng/one-api/common/logger\"\n\t\"github.com/songquanpeng/one-api/controller\"\n\t\"github.com/songquanpeng/one-api/middleware\"\n\t\"github.com/songquanpeng/one-api/model\"\n\t\"github.com/songquanpeng/one-api/relay/adaptor/openai\"\n\t\"github.com/songquanpeng/one-api/router\"\n\t\"os\"\n\t\"strconv\"\n)\n\n//go:embed web/build/*\nvar buildFS embed.FS\n\nfunc main() {\n\tcommon.Init()\n\tlogger.SetupLogger()\n\tlogger.SysLogf(\"One API %s started\", common.Version)\n\n\tif os.Getenv(\"GIN_MODE\") != gin.DebugMode {\n\t\tgin.SetMode(gin.ReleaseMode)\n\t}\n\tif config.DebugEnabled {\n\t\tlogger.SysLog(\"running in debug mode\")\n\t}\n\n\t// Initialize SQL Database\n\tmodel.InitDB()\n\tmodel.InitLogDB()\n\n\tvar err error\n\terr = model.CreateRootAccountIfNeed()\n\tif err != nil {\n\t\tlogger.FatalLog(\"database init error: \" + err.Error())\n\t}\n\tdefer func() {\n\t\terr := model.CloseDB()\n\t\tif err != nil {\n\t\t\tlogger.FatalLog(\"failed to close database: \" + err.Error())\n\t\t}\n\t}()\n\n\t// Initialize Redis\n\terr = common.InitRedisClient()\n\tif err != nil {\n\t\tlogger.FatalLog(\"failed to initialize Redis: \" + err.Error())\n\t}\n\n\t// Initialize options\n\tmodel.InitOptionMap()\n\tlogger.SysLog(fmt.Sprintf(\"using theme %s\", config.Theme))\n\tif common.RedisEnabled {\n\t\t// for compatibility with old versions\n\t\tconfig.MemoryCacheEnabled = true\n\t}\n\tif config.MemoryCacheEnabled {\n\t\tlogger.SysLog(\"memory cache enabled\")\n\t\tlogger.SysLog(fmt.Sprintf(\"sync frequency: %d seconds\", config.SyncFrequency))\n\t\tmodel.InitChannelCache()\n\t}\n\tif config.MemoryCacheEnabled {\n\t\tgo model.SyncOptions(config.SyncFrequency)\n\t\tgo model.SyncChannelCache(config.SyncFrequency)\n\t}\n\tif os.Getenv(\"CHANNEL_TEST_FREQUENCY\") != \"\" {\n\t\tfrequency, err := strconv.Atoi(os.Getenv(\"CHANNEL_TEST_FREQUENCY\"))\n\t\tif err != nil {\n\t\t\tlogger.FatalLog(\"failed to parse CHANNEL_TEST_FREQUENCY: \" + err.Error())\n\t\t}\n\t\tgo controller.AutomaticallyTestChannels(frequency)\n\t}\n\tif os.Getenv(\"BATCH_UPDATE_ENABLED\") == \"true\" {\n\t\tconfig.BatchUpdateEnabled = true\n\t\tlogger.SysLog(\"batch update enabled with interval \" + strconv.Itoa(config.BatchUpdateInterval) + \"s\")\n\t\tmodel.InitBatchUpdater()\n\t}\n\tif config.EnableMetric {\n\t\tlogger.SysLog(\"metric enabled, will disable channel if too much request failed\")\n\t}\n\topenai.InitTokenEncoders()\n\tclient.Init()\n\n\t// Initialize HTTP server\n\tserver := gin.New()\n\tserver.Use(gin.Recovery())\n\t// This will cause SSE not to work!!!\n\t//server.Use(gzip.Gzip(gzip.DefaultCompression))\n\tserver.Use(middleware.RequestId())\n\tmiddleware.SetUpLogger(server)\n\t// Initialize session store\n\tstore := cookie.NewStore([]byte(config.SessionSecret))\n\tserver.Use(sessions.Sessions(\"session\", store))\n\n\trouter.SetRouter(server, buildFS)\n\tvar port = os.Getenv(\"PORT\")\n\tif port == \"\" {\n\t\tport = strconv.Itoa(*common.Port)\n\t}\n\tlogger.SysLogf(\"server started on http://localhost:%s\", port)\n\terr = server.Run(\":\" + port)\n\tif err != nil {\n\t\tlogger.FatalLog(\"failed to start HTTP server: \" + err.Error())\n\t}\n}\n"
        },
        {
          "name": "middleware",
          "type": "tree",
          "content": null
        },
        {
          "name": "model",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "one-api.service",
          "type": "blob",
          "size": 0.501953125,
          "content": "# File path: /etc/systemd/system/one-api.service\n# sudo systemctl daemon-reload\n# sudo systemctl start one-api\n# sudo systemctl enable one-api\n# sudo systemctl status one-api\n[Unit]\nDescription=One API Service\nAfter=network.target\n\n[Service]\nUser=ubuntu  # 注意修改用户名\nWorkingDirectory=/path/to/one-api  # 注意修改路径\nExecStart=/path/to/one-api/one-api --port 3000 --log-dir /path/to/one-api/logs  # 注意修改路径和端口号\nRestart=always\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\n"
        },
        {
          "name": "pull_request_template.md",
          "type": "blob",
          "size": 0.529296875,
          "content": "[//]: # (请按照以下格式关联 issue)\n[//]: # (请在提交 PR 前确认所提交的功能可用，需要附上截图，谢谢)\n[//]: # (项目维护者一般仅在周末处理 PR，因此如若未能及时回复希望能理解)\n[//]: # (开发者交流群：910657413)\n[//]: # (请在提交 PR 之前删除上面的注释)\n\nclose #issue_number\n\n我已确认该 PR 已自测通过，相关截图如下：\n（此处放上测试通过的截图，如果不涉及前端改动或从 UI 上无法看出，请放终端启动成功的截图）\n"
        },
        {
          "name": "relay",
          "type": "tree",
          "content": null
        },
        {
          "name": "router",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}