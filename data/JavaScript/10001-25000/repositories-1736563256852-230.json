{
  "metadata": {
    "timestamp": 1736563256852,
    "page": 230,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "unbug/codelf",
      "stars": 14143,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1923828125,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.71875,
          "content": "module.exports = {\n  'extends': [\n    'eslint:recommended',\n    'plugin:react/recommended'\n  ],\n  'plugins': [\n    'react-hooks'\n  ],\n  'rules': {\n    'no-unused-vars': [2, {'vars': 'all', 'args': 'none'}],\n    'no-empty': [0],\n    'react/prop-types': [0],\n    'react/no-unescaped-entities': [0],\n    'react-hooks/rules-of-hooks': 'error',\n    'no-useless-escape': [0],\n    'no-control-regex': [0]\n  },\n  'env': {\n    'es6': true,\n    'node': true,\n    'browser': true\n  },\n  'globals': {\n    'React': true,\n    'ReactDOM': true,\n    'Promise': true,\n    'd3': true,\n    'NProgress': true,\n    'ClipboardJS': true,\n    'PR': true,\n    'Mark': true\n  },\n  'parser': 'babel-eslint',\n  'parserOptions': {\n    'sourceType': 'module'\n  }\n};\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0234375,
          "content": "dist -diff\nassets -diff\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.484375,
          "content": "# See http://help.github.com/ignore-files/ for more about ignoring files.\n#\n# If you find yourself ignoring temporary files generated by your text editor\n# or operating system, you probably want to add a global ignore instead:\n#   git config --global core.excludesfile ~/.gitignore_global\n.DS_Store\nThumbs.db\n.sass-cache\n.idea\n.vscode\nlib-cov\n*.seed\n*.log\n*.csv\n*.dat\n*.out\n*.pid\n*.gz\n\npids\nlogs\nresults\n\npackage-lock.json\nnpm-debug.log\nnode_modules\ndocs/html\napp/css\napp/js\napp/images\napp/fonts\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.576171875,
          "content": "SAY NO TO SUICIDE PUBLIC LICENSE\n\nVersion 1.0, September 2017\n\nhttps://github.com/unbug/snts\n\nCopyright (C) 2017 @unbug\n\nEveryone is permitted to copy and distribute verbatim copies\nof this license document.\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, MODIFICATION, AND DISTRIBUTION\n\n  1. You can do anything with the original copy,\n  whenever, whatever, no limitation.\n\n  2. When you are in despair, just talk to someone you trust,\n  someone you love. Getting help from your family, your friends,\n  the police, the community, the public.\n\n  3. Keep yourself alive and say no to suicide.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9794921875,
          "content": "  \n  <img src=\"https://user-images.githubusercontent.com/799578/50462941-8075fe80-09c3-11e9-89e7-af0cb7991406.png\" width=\"80\">\n\n\nCODELF(变量命名神器)\n=================\n  A search tool helps dev to solve the naming things problem.\n\n  Search over projects from Github, Bitbucket, Google Code, Codeplex, Sourceforge, Fedora Project, GitLab to find real-world usage variable names.\n  \n  Also a daily Algorithm Copybook.\n  \n  Also a GitHub stars, repositories tagger and organizer tool.\n\n  >There are only two hard things in Computer Science: cache invalidation and naming things.-- Phil Karlton\n  >\n  >![twohardtings](https://user-images.githubusercontent.com/799578/50462942-8075fe80-09c3-11e9-9c7f-b38d495b925d.jpg)\n  \n  ![image](https://user-images.githubusercontent.com/799578/51435509-a2595d00-1cb3-11e9-8f4e-85ecbc3a2325.png)\n\nWIKI\n=================\n[简体中文](https://github.com/unbug/codelf/wiki)\n  \nPlugins\n=================\n### Codelf for VS Code\n\n##### Install\n  Codelf is on VS Code Extension Marketplace. Just search \"codelf\" on VS Code EXTENSIONS pane and click install.\n\n##### Usage\n  1. Select text, right-click and select \"Codelf\". \n  \n  <img width=\"521\" alt=\"select\" src=\"https://cloud.githubusercontent.com/assets/799578/26273099/199ab0b0-3d5b-11e7-9cb6-b48a035b0a1f.png\">\n\n### Codelf for Atom\n\n##### Install\n  Codelf is [on Atom package](https://atom.io/packages/codelf). Search \"codelf\" on Atom setting pane and click install.Please see [Atom Packages in the Atom Flight Manual](http://flight-manual.atom.io/using-atom/sections/atom-packages/) \n\n##### Usage\n  1. Select text, right-click and click \"Codelf\".\n  2. Open Packages menu select \"Codelf\"\n  3. Press CTRL+ALT+E to open Codelf\n  \n  <img src=\"https://cloud.githubusercontent.com/assets/799578/12577706/2b6d4970-c457-11e5-83d3-dba0ce2c867c.gif\" width=\"600\">\n\n  Also see [How to use Codelf on Atom](https://github.com/unbug/atom-codelf#usage)\n\n\n### Codelf for Sublime Text\n\n##### Install\n  1. [Download Codelf for Sublime](https://github.com/unbug/codelf/archive/st-0.0.5.zip) or [Select a \"st-\" version to download](https://github.com/unbug/codelf/tags)\n  2. Unzip and rename the folder to `Codelf`\n  3. Copy the folder into `Packages` directory, which you can find using the menu item `Sublime Text -> Preferences -> Browse Packages...`\n  4. Restart Sublime Text\n\n##### Usage\n  1. Select text, right-click and click \"Codelf\". \n  \n  ![ST Right Click](https://cloud.githubusercontent.com/assets/799578/12536608/655d4f72-c2e5-11e5-8836-7ce733f47eed.png)\n  2. Open Command Palette using menu item Tools -> Command Palette... --> Type \"E\" or \"Codelf\" -->Select \"Search Selection\" or \"Search From Input\"\n  \n  ![ST Command Palette...](https://cloud.githubusercontent.com/assets/799578/12536569/10422964-c2e4-11e5-9530-6efb742dad3c.png)\n\nApps\n=================\n[Codelf Chrome App](https://chrome.google.com/webstore/detail/codelf-best-github-stars/jnmjaglhmmcplekpfnblniiammmdpaan)\n\n  \nFind me\n=================\n  * Twitter [@unbug](https://twitter.com/unbug)\n  * 微博 [@听奏](http://weibo.com/unbug)\n\nVideos\n===============\n[![Codelf first look](https://cloud.githubusercontent.com/assets/799578/12520673/e037c0c6-c180-11e5-8342-cb291b98dcab.png)](https://youtu.be/Uqg8HWaa-2c)\n  \nScreenshots\n================\n\n### Search variable\n\n![image](https://user-images.githubusercontent.com/799578/51435477-f748a380-1cb2-11e9-89df-3ae5d99ed7e6.png)\n\n![image](https://user-images.githubusercontent.com/799578/51435487-1b0be980-1cb3-11e9-9379-58c2ec678a81.png)\n\n### Daily Algorithm Copybook\n\n![jan-20-2019 14-29-06](https://user-images.githubusercontent.com/799578/51436194-75ad4180-1cc3-11e9-9ca0-80a0a56b9d7c.gif)\n\n![image](https://user-images.githubusercontent.com/799578/51435445-71c4f380-1cb2-11e9-87a4-edc54cbe7052.png)\n\n### GitHub stars, repositories tagger and organizer tool\n\n![bnk1](https://cloud.githubusercontent.com/assets/799578/12507895/9945d290-c133-11e5-8bb9-ff5d5dec0cfe.png)\n\n![bmk2](https://cloud.githubusercontent.com/assets/799578/12507854/5d2d328a-c133-11e5-85eb-d4da1c38a747.png)\n"
        },
        {
          "name": "__static",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "babel.config.js",
          "type": "blob",
          "size": 0.2001953125,
          "content": "module.exports = {\n  \"presets\": [\n    \"@babel/preset-env\",\n    \"@babel/preset-react\"\n  ],\n  \"plugins\": [\n    \"@babel/plugin-proposal-class-properties\",\n    \"@babel/plugin-proposal-optional-chaining\"\n  ]\n}\n"
        },
        {
          "name": "build-system",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 1.4697265625,
          "content": "'use strict';\n\nconst gulp = require('gulp');\nconst $ = require('./build-system/util');\nconst requireDir = require('require-dir');\nrequireDir('./build-system');\n\ngulp.task('help', cb => {\n  $.util.log(\n    `\n    Usage\n    gulp [TASK] [OPTIONS...]\n\n  Available tasks\n    build          Builds the app.\n    build:app-css  Builds the app style.\n    build:app-js   Builds the app scripts.\n    build:extra    Builds extra files.\n    build:images   Builds the app style.\n    build:lib-css  Builds the lib style.\n    build:lib-js   Builds the lib scripts.\n    clean          Cleans files.\n    clean:dist     Cleans dist files.\n    default\n    dist           Dist the app.\n    dist:all       Copy all to dist.\n    dist:css       Compress css to dist.\n    dist:html      Compress html to dist.\n    dist:images    Compress images to dist.\n    dist:js        Compress js to dist.\n    help           Display this help text.\n    lint           Lint JS files.\n    server         Starts a HTTP(s) server for debug.\n    watch          Watches for changes in files.\n    `\n  );\n  cb();\n});\n\n// Run tasks: lint, build, docs, watch, server\ngulp.task('default', cb => {\n  $.util.log(\n    $.util.colors.green('Building and watching for changes ...')\n  );\n  gulp.series(\n    'lint',\n    'build:extra', 'build:images', 'build:app-css', 'build:lib-js', 'build:lib-css', 'watch', 'server', () => {\n      $.util.log(\n        $.util.colors.green('Ready! Run \"gulp help\" for more build command usages.'), '\\n'\n      );\n    })(cb);\n});\n"
        },
        {
          "name": "lib.config.js",
          "type": "blob",
          "size": 1.1533203125,
          "content": "'use strict';\n\nexports.js = [\n  './node_modules/react/umd/react.production.min.js',\n  './node_modules/react-dom/umd/react-dom.production.min.js',\n  './node_modules/clipboard/dist/clipboard.min.js',\n  './src/vendors/prettify.js',\n  './node_modules/mark.js/dist/mark.min.js'\n];\n\nexports.css = [\n  './node_modules/semantic-ui-css/semantic.min.css',\n  './node_modules/animate.css/animate.min.css',\n  './src/vendors/prettify.css'\n];\n\nexports.extra = [{\n  'css/themes': './node_modules/semantic-ui-css/themes/**'\n}];\n\n// configs for service worker, get request only, not in \"included\" url won't be cached\nexports.serviceWorker = {\n  included: [ // cache then network, url must start with it's host\n    '\"searchcode.com\"',\n    '\"fanyi.youdao.com\"',\n    '\"api.cognitive.microsofttranslator.com\"',\n    '\"api.github.com\"'\n  ],\n  networkOnly: [ // network falling back to cache, url|path|etc must included in \"included\"\n  ],\n  cacheOnly: [ // cache fallback to network, url|path|etc must included in \"included\"\n    '\"fanyi.youdao.com\"',\n    '\"api.cognitive.microsofttranslator.com\"',\n    '\"api.github.com\"'\n  ],\n  excluded: [ // won't be cache, url|path|etc must included in \"included\"\n  ]\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.5556640625,
          "content": "{\n  \"name\": \"Codelf\",\n  \"version\": \"8.1.0\",\n  \"description\": \"A search tool helps dev to solve the naming things problem.\",\n  \"keywords\": [\n    \"Codelf\",\n    \"real-world usage variable names\",\n    \"searchcode\"\n  ],\n  \"author\": \"unbug\",\n  \"license\": \"snts\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"gulp\",\n    \"build\": \"NODE_ENV=production gulp build\",\n    \"dist\": \"NODE_ENV=production gulp build && gulp dist\",\n    \"gh-pages\": \"npm run dist && sleep 3 && git add dist/ && git commit -m \\\"build dist\\\" && git push origin `git subtree split --prefix dist HEAD`:gh-pages --force\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.7.4\",\n    \"@babel/plugin-proposal-class-properties\": \"^7.7.4\",\n    \"@babel/plugin-proposal-optional-chaining\": \"^7.7.4\",\n    \"@babel/preset-env\": \"^7.7.4\",\n    \"@babel/preset-react\": \"^7.7.4\",\n    \"ansi-colors\": \"^4.1.1\",\n    \"babel-eslint\": \"^10.0.3\",\n    \"babel-loader\": \"^8.0.6\",\n    \"browser-sync\": \"^2.26.7\",\n    \"css-loader\": \"^3.2.1\",\n    \"cssnano\": \"^4.1.10\",\n    \"del\": \"^5.1.0\",\n    \"eslint\": \"^6.7.2\",\n    \"eslint-plugin-react\": \"^7.17.0\",\n    \"eslint-plugin-react-hooks\": \"^2.3.0\",\n    \"fancy-log\": \"^1.3.3\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-autoprefixer\": \"^7.0.1\",\n    \"gulp-babel-minify\": \"^0.5.1\",\n    \"gulp-cachebust\": \"0.0.10\",\n    \"gulp-cached\": \"^1.1.1\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-csso\": \"^3.0.1\",\n    \"gulp-eslint\": \"^6.0.0\",\n    \"gulp-htmlmin\": \"^5.0.1\",\n    \"gulp-if\": \"^3.0.0\",\n    \"gulp-imagemin\": \"^6.2.0\",\n    \"gulp-load-plugins\": \"^2.0.1\",\n    \"gulp-replace\": \"^1.0.0\",\n    \"gulp-sass\": \"^4.0.2\",\n    \"gulp-sass-lint\": \"^1.4.0\",\n    \"gulp-size\": \"^3.0.0\",\n    \"gulp-watch\": \"^5.0.1\",\n    \"imagemin-pngquant\": \"^8.0.0\",\n    \"minimist\": \"^1.2.0\",\n    \"node-sass\": \"^4.13.0\",\n    \"plugin-error\": \"^1.0.1\",\n    \"require-dir\": \"^1.2.0\",\n    \"sass-loader\": \"^8.0.0\",\n    \"serve-index\": \"^1.9.1\",\n    \"through2\": \"^3.0.0\",\n    \"webpack\": \"^4.41.2\",\n    \"webpack-cli\": \"^3.3.10\",\n    \"webpack-dev-server\": \"^3.9.0\",\n    \"webpack-hot-middleware\": \"^2.25.0\",\n    \"webpack-merge\": \"^4.2.2\"\n  },\n  \"dependencies\": {\n    \"@babel/polyfill\": \"^7.7.0\",\n    \"animate.css\": \"^3.7.2\",\n    \"clipboard\": \"^2.0.4\",\n    \"code-prettify\": \"^0.1.0\",\n    \"css-doodle\": \"^0.7.6\",\n    \"events\": \"^3.0.0\",\n    \"file-saver\": \"^2.0.2\",\n    \"lodash\": \"^4.17.15\",\n    \"mark.js\": \"^8.11.1\",\n    \"nprogress\": \"^0.2.0\",\n    \"react\": \"^16.12.0\",\n    \"react-dom\": \"^16.12.0\",\n    \"react-router-dom\": \"^5.1.2\",\n    \"semantic-ui-css\": \"^2.4.1\",\n    \"semantic-ui-react\": \"^0.88.1\",\n    \"spark-md5\": \"^3.0.0\",\n    \"whatwg-fetch\": \"^3.0.0\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "styles",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 0.6845703125,
          "content": "'use strict'\n\nconst path = require('path');\nconst merge = require('webpack-merge');\n\nconst common = {\n  entry: ['@babel/polyfill', './src/App.js'],\n  output: {\n    filename: 'app.js',\n    path: path.resolve(__dirname, 'app/js'),\n    publicPath: '/app/js'\n  },\n  externals: {\n    'react': 'React',\n    'react-dom': 'ReactDOM'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?$/,\n        include: [\n          path.resolve(__dirname, 'src'),\n          path.resolve(__dirname, 'node_modules')\n        ],\n        loader: 'babel-loader'\n      }\n    ]\n  }\n};\n\nexports.dev = merge(common, {\n  mode: 'development',\n  devtool: 'source-map'\n});\n\nexports.prod = merge(common, {\n  mode: 'production'\n});\n"
        }
      ]
    }
  ]
}