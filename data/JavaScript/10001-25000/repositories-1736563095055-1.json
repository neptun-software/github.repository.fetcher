{
  "metadata": {
    "timestamp": 1736563095055,
    "page": 1,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ai/nanoid",
      "stars": 24947,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "node_modules/\n\ncoverage/\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "test/\ntsconfig.json\ncoverage/\n\nimg/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.294921875,
          "content": "# Change Log\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n## 5.0.9\n* Fixed a way to break Nano ID by passing non-integer size (by @myndzi).\n\n## 5.0.8\n* Reduced `customAlphabet` size (by @kirillgroshkov).\n\n## 5.0.7\n* Fixed Parcel support (by @WilhelmYakunin).\n\n## 5.0.6\n* Fixed React Native support.\n\n## 5.0.5\n* Make browser’s version faster by increasing size a little (by Samuel Elgozi).\n\n## 5.0.4\n* Fixed CLI docs (by @ilyaboka).\n\n## 5.0.3\n* Fixed CLI docs (by Chris Schmich).\n\n## 5.0.2\n* Fixed `webcrypto` import (by Divyansh Singh).\n\n## 5.0.1\n* Fixed Node.js 18 support.\n\n## 5.0\n* Moved Node.js version to Web Crypto API.\n* Removed async API since Web Crypto API has only sync version.\n* Removed Node.js 14 and 16 support.\n\n## 4.0.2\n* Added [link](https://github.com/sponsors/ai) to Github Sponsors.\n\n## 4.0.1\n* Reduced npm package size (by @HiChen404).\n\n## 4.0\n* Removed CommonJS support. Nano ID 4 will work only with ESM applications.\n  We will support 3.x branch with CommonJS for users who can’t migrate to ESM.\n* Removed Node.js 10 and Node.js 12 support.\n* Reduced npm package size.\n\n## 3.3.8\n* Fixed a way to break Nano ID by passing non-integer size (by @myndzi).\n\n## 3.3.7\n* Fixed `node16` TypeScript support (by Saadi Myftija).\n\n## 3.3.6\n* Fixed package.\n\n## 3.3.5\n* Backport funding information.\n\n## 3.3.4\n* Fixed `--help` in CLI (by @Lete114).\n\n## 3.3.3\n* Reduced size (by Anton Khlynovskiy).\n\n## 3.3.2\n* Fixed `enhanced-resolve` support.\n\n## 3.3.1\n* Reduced package size.\n\n## 3.3\n* Added `size` argument to function from `customAlphabet` (by Stefan Sundin).\n\n## 3.2\n* Added `--size` and `--alphabet` arguments to binary (by Vitaly Baev).\n\n## 3.1.32\n* Reduced `async` exports size (by Artyom Arutyunyan).\n* Moved from Jest to uvu (by Vitaly Baev).\n\n## 3.1.31\n* Fixed collision vulnerability on object in `size` (by Artyom Arutyunyan).\n\n## 3.1.30\n* Reduced size for project with `brotli` compression (by Anton Khlynovskiy).\n\n## 3.1.29\n* Reduced npm package size.\n\n## 3.1.28\n* Reduced npm package size.\n\n## 3.1.27\n* Cleaned `dependencies` from development tools.\n\n## 3.1.26\n* Improved performance (by Eitan Har-Shoshanim).\n* Reduced npm package size.\n\n## 3.1.25\n* Fixed `browserify` support.\n\n## 3.1.24\n* Fixed `browserify` support (by Artur Paikin).\n\n## 3.1.23\n* Fixed `esbuild` support.\n\n## 3.1.22\n* Added `default` and `browser.default` to `package.exports`.\n\n## 3.1.21\n* Reduced npm package size.\n\n## 3.1.20\n* Fix ES modules support.\n\n## 3.1.19\n* Reduced `customAlphabet` size (by Enrico Scherlies).\n\n## 3.1.18\n* Fixed `package.exports`.\n\n## 3.1.17\n* Added files without `process`.\n\n## 3.1.16\n* Speeded up Nano ID 4 times (by Peter Boyer).\n\n## 3.1.15\n* Fixed `package.types` path.\n\n## 3.1.14\n* Added `package.types`.\n\n## 3.1.13\n* Removed Node.js 15.0.0 with `randomFillSync` regression from `engines.node`.\n\n## 3.1.12\n* Improved IE 11 docs.\n\n## 3.1.11\n* Fixed asynchronous `customAlphabet` in browser (by @LoneRifle).\n\n## 3.1.10\n* Fix ES modules support.\n\n## 3.1.9\n* Try to fix React Native Expo support.\n\n## 3.1.8\n* Add React Native Expo support.\n\n## 3.1.7\n* Clean up code.\n\n## 3.1.6\n* Avoid `self` using.\n\n## 3.1.5\n* Improve IE docs and warning.\n\n## 3.1.4\n* Restrict old Node.js 13 by `engines.node` (by Cansin Yildiz).\n\n## 3.1.3\n* Fix ES modules issue with CLI.\n\n## 3.1.2\n* Add shebang to CLI.\n\n## 3.1.1\n* Fix CLI.\n\n## 3.1\n* Add `npx nanoid` CLI.\n\n## 3.0.2\n* Fix docs (by Dylan Irlbeck ).\n\n## 3.0.1\n* Fix React Native warning on `non-secure` import (by Jia Huang).\n\n## 3.0\n**Migration guide:** <https://github.com/ai/nanoid/releases/tag/3.0.0>\n* Move to ES2016 syntax. You need to use Babel for IE 11.\n* Move to named exports `import { nanoid } from 'nanoid'`.\n* Move `import url from 'nanoid/url'` to `import { urlAlphabet } from 'nanoid'`.\n* Replace `format()` to `customRandom()`.\n* Replace `generate()` to `customAlphabet()`.\n* Remove `async/format`.\n* Remove React Native support for `nanoid/async`.\n* Add `nanoid.js` to use directly in browser from CDN.\n* Add TypeScript type definitions.\n* Add ES modules support for bundlers, Node.js, and React Native.\n* Fix React Native support.\n* Reduce size.\n* Improve docs (by Dair Aidarkhanov).\n\n## 2.1.11\n* Reduce size (by Anton Evzhakov).\n\n## 2.1.10\n* Reduce size by 10% (by Anton Khlynovskiy).\n\n## 2.1.9\n* Reduce `format` and `async/format` size (by Dair Aidarkhanov).\n\n## 2.1.8\n* Improve React docs (by Nahum Zsilva).\n\n## 2.1.7\n* Reduce `index`, `async` and `non-secure` size (by @polemius).\n\n## 2.1.6\n* Reduce size (by Stas Lashmanov).\n* Return fast mask for Node.js.\n\n## 2.1.5\n* Reduce size (by Max Graey).\n* Fix IE support.\n\n## 2.1.4\n* Reduce `generate` size (by Vsevolod Rodionov).\n* Reduce `format` and `format` size (by Victor).\n* Reduce `async`, `non-secure` and `non-secure/generate` size.\n* Speed up `format` and `async/format` (by Max Graey).\n* Improve development process on Windows (by Stanislav Lashmanov).\n\n## 2.1.3\n* Improve performance (by Stephen Richardson).\n* Reduce size (by Stephen Richardson).\n\n## 2.1.2\n* Improve docs.\n\n## 2.1.1\n* Fix React Native support (by Shawn Hwei).\n\n## 2.1\n* Improve React Native support (by Sebastian Werner).\n\n## 2.0.4\n* Improve error text for React Native (by Sebastian Werner).\n\n## 2.0.3\n* Fix freeze on string in ID length.\n\n## 2.0.2\n* Improve docs (by Sylvanus Kateile and Mark Stosberg).\n\n## 2.0.1\n* Reduce npm package size.\n* Mark package as not having side effects (by @xiaody).\n\n## 2.0\n* Use `-` instead of `~` in default alphabet to by file name safe.\n* Add `nanoid/non-secure/generate`.\n\n## 1.3.4\n* Reduce `non-secure` size.\n* Add `async` callback type check.\n\n## 1.3.3\n* Fix `nanoid/async` performance regression.\n* Fix old Node.js `not seeded` issue in synchronous version too.\n\n## 1.3.2\n* Fix random generator `not seeded` issue of old Node.js.\n\n## 1.3.1\n* Reduce library size.\n\n## 1.3\n* Add `nanoid/async/format` and `nanoid/async/generate`.\n* Improve synchronous API performance.\n* Reduce `url` size (by Daniil Poroshin).\n* Improve React Native docs (by joelgetaction).\n\n## 1.2.6\n* Reduce library size (by rqrqrqrq).\n\n## 1.2.5\n* Fix Node.js 6.11.1 support (by Andrey Belym).\n\n## 1.2.4\n* Speed up Node.js secure generators (by Dmitriy Tsvettsikh).\n\n## 1.2.3\n* Fix JSDoc (by Hendry Sadrak).\n\n## 1.2.2\n* Fix distribution in `nanoid/non-secure` (by Eatall).\n\n## 1.2.1\n* Fix old Node.js support.\n\n## 1.2\n* Add `nanoid/async`.\n* Fix `nanoid/non-secure` JSDoc.\n* Add Chinese documentation (by Wenliang Dai).\n* Speed up and reduce size of `nanoid/non-secure` (by Ori Livni).\n\n## 1.1.1\n* Improve performance and reduce size of non-secure ID generator.\n\n## 1.1\n* Add non-secure ID generator.\n* Suggest to use non-secure ID generator for React Native developers.\n* Reduce size.\n\n## 1.0.7\n* Fix documentation.\n\n## 1.0.6\n* Fix documentation.\n\n## 1.0.5\n* Reduce `nanoid/index` size (by Anton Khlynovskiy).\n\n## 1.0.4\n* Reduce npm package size.\n\n## 1.0.3\n* Reduce npm package size.\n\n## 1.0.2\n* Fix Web Workers support (by Zachary Golba).\n\n## 1.0.1\n* Reduce `nanoid/index` size (by Anton Khlynovskiy).\n\n## 1.0\n* Use 21 symbols by default (by David Klebanoff).\n\n## 0.2.2\n* Reduce `nanoid/generate` size (by Anton Khlynovskiy).\n* Speed up Node.js random generator.\n\n## 0.2.1\n* Fix documentation (by Piper Chester).\n\n## 0.2\n* Add `size` argument to `nanoid()`.\n* Improve performance by 50%.\n* Reduce library size by 26% (by Vsevolod Rodionov and Oleg Mokhov).\n\n## 0.1.1\n* Reduce library size by 5%.\n\n## 0.1\n* Initial release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0693359375,
          "content": "The MIT License (MIT)\n\nCopyright 2017 Andrey Sitnik <andrey@sitnik.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.id-ID.md",
          "type": "blob",
          "size": 14.255859375,
          "content": "# Nano ID\n\n<img src=\"https://ai.github.io/nanoid/logo.svg\" align=\"right\"\n     alt=\"Logo Nano ID oleh Anton Lovchikov\" width=\"180\" height=\"94\">\n\n[English](./README.md) | [Русский](./README.ru.md) | [简体中文](./README.zh-CN.md) | **Bahasa Indonesia**\n\nSebuah generator ID yang unik dalam bentuk string yang ringan, aman, serta _URL-friendly_ untuk JavaScript.\n\n> \"Sebuah tingkat kesempurnaan yang luar biasa,\n> yang mana tidak mungkin untuk tidak dihormati.\"\n\n- **Ringan.** Hanya 118 bytes (diperkecil dan brotlied). Tidak ada ketergantungan (dependencies) apapun. [Size Limit](https://github.com/ai/size-limit) mengatur ukuran dari generator ini.\n- **Aman.** Nano ID menggunakan RNG yang terdapat pada perangkat keras. Dapat digunakan dalam lingkungan seperti klaster.\n- **ID yang pendek.** Nano ID menggunakan alfabet yang lebih banyak ketimbang UUID (`A-Za-z0-9_-`), karenanya ukuran ID menjadi berkurang dari 36 menjadi 21 simbol.\n- **Portabel.** Nano ID telah dimigrasi untuk [20 bahasa pemrograman lainnya](#bahasa-pemrograman-lainnya).\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\nMendukung penjelajah (browser) modern, IE [dengan Babel](https://developer.epages.com/blog/coding/how-to-transpile-node-modules-with-babel-and-webpack-in-a-monorepo/), Node.js, dan React Native.\n\n---\n\n<img src=\"https://cdn.evilmartians.com/badges/logo-no-label.svg\" alt=\"\" width=\"22\" height=\"16\" />  Made at <b><a href=\"https://evilmartians.com/devtools?utm_source=nanoid&utm_campaign=devtools-button&utm_medium=github\">Evil Martians</a></b>, product consulting for <b>developer tools</b>.\n\n---\n\n\n## Table of Contents\n\n- [Table of Contents](#table-of-contents)\n- [Perbandingan dengan UUID](#perbandingan-dengan-uuid)\n- [Benchmark](#benchmark)\n- [Keamanan](#keamanan)\n- [Instalasi](#instalasi)\n- [API](#api)\n  - [Blocking](#blocking)\n  - [Non-Secure](#non-secure)\n  - [Alfabet dan Ukuran (Custom)](#alfabet-dan-ukuran-custom)\n  - [Generasi Random Bytes (Custom)](#generasi-random-bytes-custom)\n- [Penggunaan](#penggunaan)\n  - [React](#react)\n  - [React Native](#react-native)\n  - [PouchDB dan CouchDB](#pouchdb-dan-couchdb)\n  - [Web Workers](#web-workers)\n  - [CLI](#cli)\n  - [Bahasa Pemrograman Lainnya](#bahasa-pemrograman-lainnya)\n- [Alat](#alat)\n\n\n## Perbandingan dengan UUID\n\nNano ID dapat dibandingkan dengan UUID v4 (yang berbasis acak / _randomly generated_). Nano ID dan UUID v4 memiliki jumlah bita yang mirip pada ID yang dihasilkan (126 bita pada NanoID dan 122 bita pada UUID), karenanya ia memiliki probabilitas _collision_ (konflik / tabrakan) yang hampir serupa:\n\n> Agar timbul kemungkinan collison / duplikasi ID satu dalam satu miliar, perlu dihasilkan 103 triliun UUID v4.\n\nAda dua buah perbedaan antara Nano ID dan UUID v4:\n\n1. Nano ID menggunakan alfabet yang lebih lebar, karenanya jumlah bita acak dapat 'dikemas' dalam 21 simbol, bukan 36 simbol.\n2. Kode sumber Nano ID **empat kali lebih kecil** ketimbang `uuid/v4`: 130 bytes dibanding 423 bytes.\n\n\n## Benchmark\n\n```rust\n$ node ./test/benchmark.js\ncrypto.randomUUID          7,619,041 ops/sec\nuuid v4                    7,436,626 ops/sec\n@napi-rs/uuid              4,730,614 ops/sec\nuid/secure                 4,729,185 ops/sec\n@lukeed/uuid               4,015,673 ops/sec\nnanoid                     3,693,964 ops/sec\ncustomAlphabet             2,799,255 ops/sec\nnanoid for browser           380,915 ops/sec\nsecure-random-string         362,316 ops/sec\nuid-safe.sync                354,234 ops/sec\nshortid                       38,808 ops/sec\n\nNon-secure:\nuid                       11,872,105 ops/sec\nnanoid/non-secure          2,226,483 ops/sec\nrndm                       2,308,044 ops/sec\n```\n\nKonfigurasi pengujian: Framework 13 7840U, Fedora 39, Node.js 21.6.\n\n\n## Keamanan\n\n_Lihat artikel yang informatif tentang teori angka acak: [Nilai acak yang aman dalam Node.js (English)](https://gist.github.com/joepie91/7105003c3b26e65efcea63f3db82dfba)_.\n\n- **Ketidakpastian.** Sebagai ganti untuk penggunaan `Math.random()`, Nano ID menggunakan modul `crypto` yang ada di dalam Nodejs dan/atau Web Crypto API dalam penjelajah (_browser_). Modul-modul ini menggunakan generator acak berbasis perangkat keras yang tidak bisa diprediksi untuk mendapatkan nilai-nilai yang tidak pasti yang aman secara kriptografis.\n\n- **Keseragaman.** Pembagian dengan rumus `random % alphabet` adalah kesalahan yang seringkali dilakukan ketika merancang sebuah generator ID. Distribusi dari nilai-nilai tersebut tidak akan seimbang; dalam artian ada kesempatan untuk beberapa simbol untuk muncul dibandingkan dengan simbol yang lain. Ini memiliki dampak yang kurang baik, yakni mengurangi jumlah percobaan ketika seseorang mencoba untuk melakukan _brute-force attacks_. Nano ID menggunakan [algoritma yang lebih baik](https://github.com/ai/nanoid/blob/main/index.js) dan sudah diuji untuk keseragamannya.\n\n  <img src=\"img/distribution.png\" alt=\"Nano ID uniformity\"\n    width=\"340\" height=\"135\">\n\n- **Terdokumentasi secara baik.** Seluruh algoritma Nano ID sudah terdokumentasi. Lihat komentar di [kode sumber](https://github.com/ai/nanoid/blob/main/index.js).\n\n- **Kerentanan.** Untuk melaporkan sebuah _security vulnerability_ atau kerentanan, mohon menggunakan [Tidelift Security Contact](https://tidelift.com/security). Tidelift akan mengkoordinasikan pembetulan dan penyingkapan dari kerentanan tersebut.\n\n\n## Instalasi\n\n```bash\nnpm install nanoid\n```\n\nNano ID 5 hanya tersedia untuk proyek, pengujian, atau skrip ESM Node.js.\nUntuk CommonJS Anda memerlukan Nano ID 3.x (kami masih mendukungnya):\n\n```bash\nnpm install nanoid@3\n```\n\nApabila ingin 'coba-coba' terlebih dahulu, dapat digunakan Nano ID melalui CDN. Hal ini tidak direkomendasikan untuk digunakan pada lingkungan produksi karena performa pemuatan (_loading_) yang berkurang.\n\n```js\nimport { nanoid } from 'https://cdn.jsdelivr.net/npm/nanoid/nanoid.js'\n```\n\n\n## API\n\nNano ID memiliki dua API: normal dan _non-secure_.\n\nBawaannya, Nano ID menggunakan simbol yang _URL-friendly_ (`A-Za-z0-9_-`) dan mengembalikan ID dengan 21 karakter (untuk memiliki probabilitas collision / tabrakan yang mirip dengan UUID v4).\n\n\n### Blocking\n\nPenggunaan Nano ID yang aman dan yang paling mudah.\n\nDalam kasus langka, fungsi ini dapat menghambat CPU untuk melakukan proses yang lain ketika dalam proses 'noise-collection' untuk generasi nilai acak (yang dilakukan pada perangkat keras).\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\nApabila ingin mengurangi ukuran ID (dan meningkatkan probabilitas collision), dapat dimasukkan `size` sebagai argumen dari fungsi `nanoid()`.\n\n```js\nnanoid(10) //=> \"IRFa-VaY2b\"\n```\n\nJangan lupa memeriksa tingkat keamanan dari ukuran ID dalam situs [ID collision probability calculator](https://zelark.github.io/nano-id-cc/).\n\nDapat digunakan pula [custom alphabet](#custom-alphabet-or-size) atau [random generator](#custom-random-bytes-generator) yang lain.\n\n\n### Non-Secure\n\nKonfigurasi bawaan Nano ID menggunakan random bytes generator yang berasal dari perangkat keras untuk keamanan dan probabilitas collision yang rendah. Apabila tidak terlalu memikirkan soal keamanan, dapat pula menggunakan non-secure generator yang lebih cepat.\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nconst id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\n\n### Alfabet dan Ukuran (Custom)\n\n`customAlphabet` digunakan untuk membuat Nano ID dengan alfabet dan ukuran ID yang sesuai dengan kebutuhan (dapat dikustomisasi).\n\n```js\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nmodel.id = nanoid() //=> \"4f90d13a42\"\n```\n\nKetika menggunakan fungsi ini, jangan lupa untuk memeriksa keamanan alfabet dan ukuran ID dalam [ID collision probability calculator](https://alex7kom.github.io/nano-nanoid-cc/). Untuk lebih banyak alfabet, dapat menggunakan [`nanoid-dictionary`](https://github.com/CyberAP/nanoid-dictionary).\n\nAlfabet harus terbentuk dari 256 simbol atau lebih kecil. Selain itu, keamanan algoritma generasi yang berada di dalam library ini tidak dijamin aman.\n\nAPI non-secure yang dapat dikustomisasi dengan `customAlphabet` pun tersedia disini:\n\n```js\nimport { customAlphabet } from 'nanoid/non-secure'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nuser.id = nanoid()\n```\n\n\n### Generasi Random Bytes (Custom)\n\n`customRandom` digunakan untuk membuat Nano ID yang mengganti alfabet dan algoritma _random bytes generator_ yang telah diimplementasikan pada versi bawaan (dalam artian menggunakan algoritma sendiri untuk mendapatkan random bytes).\n\nPada contoh berikut, digunakan _seed-based generator_:\n\n```js\nimport { customRandom } from 'nanoid'\n\nconst rng = seedrandom(seed)\nconst nanoid = customRandom('abcdef', 10, size => {\n  return new Uint8Array(size).map(() => 256 * rng())\n})\n\nnanoid() //=> \"fbaefaadeb\"\n```\n\nFungsi _callback_ pada `random` harus menerima ukuran array dan mengembalikan sebuah array dengan angka acak.\n\nApabila ingin menggunakan alfabet bawaan NanoID pada fungsi `customRandom`, dapat menggunakan konstanta `urlAlphabet` seperti berikut:\n\n```js\nconst { customRandom, urlAlphabet } = require('nanoid')\nconst nanoid = customRandom(urlAlphabet, 10, random)\n```\n\nAPI asinkronus dan non-secure tidak tersedia untuk fungsi `customRandom`.\n\n\n## Penggunaan\n\n### React\n\nDalam React, tidak ada cara yang benar bila ingin menggunakan Nano ID untuk prop `key`, karena `key` tersebut harus konsisten dalam setiap proses render yang terjadi.\n\n```jsx\nfunction Todos({ todos }) {\n  return (\n    <ul>\n      {todos.map(todo => (\n        /* JANGAN DILAKUKAN! */\n        <li key={nanoid()}>{todo.text}</li>\n      ))}\n    </ul>\n  )\n}\n```\n\nKarena hal tersebut, disarankan untuk menggunakan ID yang stabil pada setiap objek yang di-render oleh React.\n\n```jsx\nconst todoItems = todos.map(todo => <li key={todo.id}>{todo.text}</li>)\n```\n\nApabila tidak memiliki ID yang stabil pada setiap _item_ yang di-render pada React, lebih baik menggunakan indeks sebuah array sebagai `key` ketimbang menggunakan fungsi `nanoid()`, seperti berikut:\n\n```jsx\nconst todoItems = todos.map((text, index) => (\n  /* Tetap tidak direkomendasikan, tetapi lebih disarankan dari 'nanoid()'. Lakukan ini\n    apabila setiap objek / item dalam list tidak ada ID yang stabil. */\n  <li key={index}>{text}</li>\n))\n```\n\n### React Native\n\nReact Native tidak memiliki _built-in random generator_. Digunakan polyfill seperti berikut yang berjalan untuk React Native dan Expo yang bermula dari versi `39.x`.\n\n1. Periksa dokumentasi [`react-native-get-random-values`](https://github.com/LinusU/react-native-get-random-values) dan install di aplikasi.\n2. Import library tersebut sebelum Nano ID.\n\n```js\nimport 'react-native-get-random-values'\nimport { nanoid } from 'nanoid'\n```\n\n### PouchDB dan CouchDB\n\nDalam PouchDB dan CouchDB, ID tidak bisa dimulai dengan underscore `_`. Sebuah _prefix_ dibutuhkan untuk mencegah hal ini terjadi, karena Nano ID mungkin menggunakan `_` sebagai karakter pertama dari ID yang dihasilkan.\n\nID bawaan dapat diubah dengan opsi berikut:\n\n```js\ndb.put({\n  _id: 'id' + nanoid(),\n  …\n})\n```\n\n\n### Web Workers\n\nWeb Workers tidak memiliki akses untuk secure random generator.\n\nKeamanan sangat penting pada ID yang mana setiap ID harus memiliki sifat tidak bisa diprediksi, seperti pada contoh use-case generasi link pada \"access by URL\". Apabila tidak memerlukan ID yang tidak bisa diprediksi, tetapi ingin/harus menggunakan Web Workers, dapat digunakan NanoID dengan API non-secure.\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nnanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\nPerhatian: ID yang dihasilkan dari non-secure dapat lebih mudah tabrakan / memiliki probabilitas collision yang lebih besar.\n\n\n### CLI\n\nNano ID dapat didapatkan dengan cara menggunakan `npx nanoid` pada Terminal. Hanya diperlukan Node.js untuk ini, dan tidak perlu mengunduh dan menginstall Nano ID dalam sistem.\n\n```sh\n$ npx nanoid\nnpx: installed 1 in 0.63s\nLZfXLFzPPR4NNrgjlWDxn\n```\n\nBila ingin mengganti alfabet atau ukuran ID, dapat menggunakan [`nanoid-cli`](https://github.com/twhitbeck/nanoid-cli).\n\n\n### Bahasa Pemrograman Lainnya\n\nNano ID telah bermigrasi ke berbagai macam bahasa. Seluruh versi dapat digunakan untuk mendapatkan ID generator yang sama pada sisi klien dan sisi penyedia layanan (_client-side_ dan _server-side_).\n\n- [C#](https://github.com/codeyu/nanoid-net)\n- [C++](https://github.com/mcmikecreations/nanoid_cpp)\n- [Clojure and ClojureScript](https://github.com/zelark/nano-id)\n- [ColdFusion/CFML](https://github.com/JamoCA/cfml-nanoid)\n- [Crystal](https://github.com/mamantoha/nanoid.cr)\n- [Dart & Flutter](https://github.com/pd4d10/nanoid-dart)\n- [Deno](https://github.com/ianfabs/nanoid)\n- [Elixir](https://github.com/railsmechanic/nanoid)\n- [Go](https://github.com/jaevor/go-nanoid)\n- [Haskell](https://github.com/MichelBoucey/NanoID)\n- [Haxe](https://github.com/flashultra/uuid)\n- [Janet](https://sr.ht/~statianzo/janet-nanoid/)\n- [Java](https://github.com/Soundicly/jnanoid-enhanced)\n- [Kotlin](https://github.com/viascom/nanoid-kotlin)\n- [MySQL/MariaDB](https://github.com/viascom/nanoid-mysql-mariadb)\n- [Nim](https://github.com/icyphox/nanoid.nim)\n- [OCaml](https://github.com/routineco/ocaml-nanoid)\n- [Perl](https://github.com/tkzwtks/Nanoid-perl)\n- [PHP](https://github.com/hidehalo/nanoid-php)\n- [Python](https://github.com/puyuan/py-nanoid) with [dictionaries](https://pypi.org/project/nanoid-dictionary)\n- [Postgres Extension](https://github.com/spa5k/uids-postgres)\n- [Postgres Native Function](https://github.com/viascom/nanoid-postgres)\n- [R](https://github.com/hrbrmstr/nanoid) (with dictionaries)\n- [Ruby](https://github.com/radeno/nanoid.rb)\n- [Rust](https://github.com/nikolay-govorov/nanoid)\n- [Swift](https://github.com/antiflasher/NanoID)\n- [Unison](https://share.unison-lang.org/latest/namespaces/hojberg/nanoid)\n- [V](https://github.com/invipal/nanoid)\n- [Zig](https://github.com/SasLuca/zig-nanoid)\n\nUntuk environment lainnya, [CLI](#cli) tersedia untuk melakukan generasi ID dari command line / Terminal.\n\n\n## Alat\n\n- [ID Size Calculator](https://zelark.github.io/nano-id-cc/) menunjukkan probabilitas collision ketika melakukan konfigurasi alfabet dan ukuran.\n- [`nanoid-dictionary`](https://github.com/CyberAP/nanoid-dictionary) untuk menggunakan alfabet popular dalam fungsi [`customAlphabet`](#custom-alphabet-or-size)\n- [`nanoid-good`](https://github.com/y-gagar1n/nanoid-good) untuk meyakinkan bahwa ID yang di-generasi tidak memiliki kata-kata yang kurang baik (kasar, tidak sopan, dsb.).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.9697265625,
          "content": "# Nano ID\n\n<img src=\"https://ai.github.io/nanoid/logo.svg\" align=\"right\"\n     alt=\"Nano ID logo by Anton Lovchikov\" width=\"180\" height=\"94\">\n\n**English** | [Русский](./README.ru.md) | [简体中文](./README.zh-CN.md) | [Bahasa Indonesia](./README.id-ID.md)\n\nA tiny, secure, URL-friendly, unique string ID generator for JavaScript.\n\n> “An amazing level of senseless perfectionism,\n> which is simply impossible not to respect.”\n\n* **Small.** 118 bytes (minified and brotlied). No dependencies.\n  [Size Limit] controls the size.\n* **Safe.** It uses hardware random generator. Can be used in clusters.\n* **Short IDs.** It uses a larger alphabet than UUID (`A-Za-z0-9_-`).\n  So ID size was reduced from 36 to 21 symbols.\n* **Portable.** Nano ID was ported\n  to over [20 programming languages](./README.md#other-programming-languages).\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\n---\n\n<img src=\"https://cdn.evilmartians.com/badges/logo-no-label.svg\" alt=\"\" width=\"22\" height=\"16\" />  Made at <b><a href=\"https://evilmartians.com/devtools?utm_source=nanoid&utm_campaign=devtools-button&utm_medium=github\">Evil Martians</a></b>, product consulting for <b>developer tools</b>.\n\n---\n\n[online tool]: https://gitpod.io/#https://github.com/ai/nanoid/\n[with Babel]:  https://developer.epages.com/blog/coding/how-to-transpile-node-modules-with-babel-and-webpack-in-a-monorepo/\n[Size Limit]:  https://github.com/ai/size-limit\n\n\n## Table of Contents\n\n- [Table of Contents](#table-of-contents)\n- [Comparison with UUID](#comparison-with-uuid)\n- [Benchmark](#benchmark)\n- [Security](#security)\n- [Install](#install)\n  - [ESM](#esm)\n  - [CommonJS](#commonjs)\n  - [CDN](#cdn)\n- [API](#api)\n  - [Blocking](#blocking)\n  - [Non-Secure](#non-secure)\n  - [Custom Alphabet or Size](#custom-alphabet-or-size)\n  - [Custom Random Bytes Generator](#custom-random-bytes-generator)\n- [Usage](#usage)\n  - [React](#react)\n  - [React Native](#react-native)\n  - [PouchDB and CouchDB](#pouchdb-and-couchdb)\n  - [Web Workers](#web-workers)\n  - [CLI](#cli)\n  - [Other Programming Languages](#other-programming-languages)\n- [Tools](#tools)\n\n\n## Comparison with UUID\n\nNano ID is quite comparable to UUID v4 (random-based).\nIt has a similar number of random bits in the ID\n(126 in Nano ID and 122 in UUID), so it has a similar collision probability:\n\n> For there to be a one in a billion chance of duplication,\n> 103 trillion version 4 IDs must be generated.\n\nThere are two main differences between Nano ID and UUID v4:\n\n1. Nano ID uses a bigger alphabet, so a similar number of random bits\n   are packed in just 21 symbols instead of 36.\n2. Nano ID code is **4 times smaller** than `uuid/v4` package:\n   130 bytes instead of 423.\n\n\n## Benchmark\n\n```rust\n$ node ./test/benchmark.js\ncrypto.randomUUID          7,619,041 ops/sec\nuuid v4                    7,436,626 ops/sec\n@napi-rs/uuid              4,730,614 ops/sec\nuid/secure                 4,729,185 ops/sec\n@lukeed/uuid               4,015,673 ops/sec\nnanoid                     3,693,964 ops/sec\ncustomAlphabet             2,799,255 ops/sec\nnanoid for browser           380,915 ops/sec\nsecure-random-string         362,316 ops/sec\nuid-safe.sync                354,234 ops/sec\nshortid                       38,808 ops/sec\n\nNon-secure:\nuid                       11,872,105 ops/sec\nnanoid/non-secure          2,226,483 ops/sec\nrndm                       2,308,044 ops/sec\n```\n\nTest configuration: Framework 13 7840U, Fedora 39, Node.js 21.6.\n\n\n## Security\n\n*See a good article about random generators theory:\n[Secure random values (in Node.js)]*\n\n* **Unpredictability.** Instead of using the unsafe `Math.random()`, Nano ID\n  uses the `crypto` module in Node.js and the Web Crypto API in browsers.\n  These modules use unpredictable hardware random generator.\n* **Uniformity.** `random % alphabet` is a popular mistake to make when coding\n  an ID generator. The distribution will not be even; there will be a lower\n  chance for some symbols to appear compared to others. So, it will reduce\n  the number of tries when brute-forcing. Nano ID uses a [better algorithm]\n  and is tested for uniformity.\n\n  <img src=\"img/distribution.png\" alt=\"Nano ID uniformity\"\n     width=\"340\" height=\"135\">\n\n* **Well-documented:** all Nano ID hacks are documented. See comments\n  in [the source].\n* **Vulnerabilities:** to report a security vulnerability, please use\n  the [Tidelift security contact](https://tidelift.com/security).\n  Tidelift will coordinate the fix and disclosure.\n\n[Secure random values (in Node.js)]: https://gist.github.com/joepie91/7105003c3b26e65efcea63f3db82dfba\n[better algorithm]:                  https://github.com/ai/nanoid/blob/main/index.js\n[the source]:                        https://github.com/ai/nanoid/blob/main/index.js\n\n\n## Install\n\n### ESM\n\nNano ID 5 works with ESM projects (with `import`) in tests or Node.js scripts.\n\n```bash\nnpm install nanoid\n```\n\n### CommonJS\n\nNano ID can be used with CommonJS in one of the following ways:\n\n- You can use `require()` to import Nano ID. You need to use latest Node.js\n  22.12 (works out-of-the-box) or Node.js 20\n  (with `--experimental-require-module`).\n\n- For Node.js 18 you can dynamically import Nano ID as follows:\n\n  ```js\n  let nanoid\n  module.exports.createID = async () => {\n    if (!nanoid) ({ nanoid } = await import('nanoid'))\n    return nanoid() // => \"V1StGXR8_Z5jdHi6B-myT\"\n  }\n  ```\n\n- You can use Nano ID 3.x (we still support it):\n\n  ```bash\n  npm install nanoid@3\n  ```\n\n### CDN\n\nFor quick hacks, you can load Nano ID from CDN. Though, it is not recommended\nto be used in production because of the lower loading performance.\n\n```js\nimport { nanoid } from 'https://cdn.jsdelivr.net/npm/nanoid/nanoid.js'\n```\n\n## API\n\nNano ID has 2 APIs: normal and non-secure.\n\nBy default, Nano ID uses URL-friendly symbols (`A-Za-z0-9_-`) and returns an ID\nwith 21 characters (to have a collision probability similar to UUID v4).\n\n\n### Blocking\n\nThe safe and easiest way to use Nano ID.\n\nIn rare cases could block CPU from other work while noise collection\nfor hardware random generator.\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\nIf you want to reduce the ID size (and increase collisions probability),\nyou can pass the size as an argument.\n\n```js\nnanoid(10) //=> \"IRFa-VaY2b\"\n```\n\nDon’t forget to check the safety of your ID size\nin our [ID collision probability] calculator.\n\nYou can also use a [custom alphabet](#custom-alphabet-or-size)\nor a [random generator](#custom-random-bytes-generator).\n\n[ID collision probability]: https://zelark.github.io/nano-id-cc/\n\n\n### Non-Secure\n\nBy default, Nano ID uses hardware random bytes generation for security\nand low collision probability. If you are not so concerned with security,\nyou can use it for environments without hardware random generators.\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nconst id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\n\n### Custom Alphabet or Size\n\n`customAlphabet` returns a function that allows you to create `nanoid`\nwith your own alphabet and ID size.\n\n```js\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nmodel.id = nanoid() //=> \"4f90d13a42\"\n```\n\n```js\nimport { customAlphabet } from 'nanoid/non-secure'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nuser.id = nanoid()\n```\n\nCheck the safety of your custom alphabet and ID size in our\n[ID collision probability] calculator. For more alphabets, check out the options\nin [`nanoid-dictionary`].\n\nAlphabet must contain 256 symbols or less.\nOtherwise, the security of the internal generator algorithm is not guaranteed.\n\nIn addition to setting a default size, you can change the ID size when calling\nthe function:\n\n```js\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nmodel.id = nanoid(5) //=> \"f01a2\"\n```\n\n[ID collision probability]: https://alex7kom.github.io/nano-nanoid-cc/\n[`nanoid-dictionary`]:      https://github.com/CyberAP/nanoid-dictionary\n\n\n### Custom Random Bytes Generator\n\n`customRandom` allows you to create a `nanoid` and replace alphabet\nand the default random bytes generator.\n\nIn this example, a seed-based generator is used:\n\n```js\nimport { customRandom } from 'nanoid'\n\nconst rng = seedrandom(seed)\nconst nanoid = customRandom('abcdef', 10, size => {\n  return (new Uint8Array(size)).map(() => 256 * rng())\n})\n\nnanoid() //=> \"fbaefaadeb\"\n```\n\n`random` callback must accept the array size and return an array\nwith random numbers.\n\nIf you want to use the same URL-friendly symbols with `customRandom`,\nyou can get the default alphabet using the `urlAlphabet`.\n\n```js\nconst { customRandom, urlAlphabet } = require('nanoid')\nconst nanoid = customRandom(urlAlphabet, 10, random)\n```\n\nNote, that between Nano ID versions we may change random generator\ncall sequence. If you are using seed-based generators, we do not guarantee\nthe same result.\n\n\n## Usage\n\n### React\n\nThere’s no correct way to use Nano ID for React `key` prop\nsince it should be consistent among renders.\n\n```jsx\nfunction Todos({todos}) {\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={nanoid()}> /* DON’T DO IT */\n          {todo.text}\n        </li>\n      ))}\n    </ul>\n  )\n}\n```\n\nYou should rather try to reach for stable ID inside your list item.\n\n```jsx\nconst todoItems = todos.map((todo) =>\n  <li key={todo.id}>\n    {todo.text}\n  </li>\n)\n```\n\nIn case you don’t have stable IDs you'd rather use index as `key`\ninstead of `nanoid()`:\n\n```jsx\nconst todoItems = todos.map((text, index) =>\n  <li key={index}> /* Still not recommended but preferred over nanoid().\n                      Only do this if items have no stable IDs. */\n    {text}\n  </li>\n)\n```\n\nIn case you just need random IDs to link elements like labels\nand input fields together, [`useId`] is recommended.\nThat hook was added in React 18.\n\n[`useId`]: https://reactjs.org/docs/hooks-reference.html#useid\n\n\n### React Native\n\nReact Native does not have built-in random generator. The following polyfill\nworks for plain React Native and Expo starting with `39.x`.\n\n1. Check [`react-native-get-random-values`] docs and install it.\n2. Import it before Nano ID.\n\n```js\nimport 'react-native-get-random-values'\nimport { nanoid } from 'nanoid'\n```\n\n[`react-native-get-random-values`]: https://github.com/LinusU/react-native-get-random-values\n\n\n### PouchDB and CouchDB\n\nIn PouchDB and CouchDB, IDs can’t start with an underscore `_`.\nA prefix is required to prevent this issue, as Nano ID might use a `_`\nat the start of the ID by default.\n\nOverride the default ID with the following option:\n\n```js\ndb.put({\n  _id: 'id' + nanoid(),\n  …\n})\n```\n\n\n### Web Workers\n\nWeb Workers do not have access to a secure random generator.\n\nSecurity is important in IDs when IDs should be unpredictable.\nFor instance, in \"access by URL\" link generation.\nIf you do not need unpredictable IDs, but you need to use Web Workers,\nyou can use the non‑secure ID generator.\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nnanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\nNote: non-secure IDs are more prone to collision attacks.\n\n\n### CLI\n\nYou can get unique ID in terminal by calling `npx nanoid`. You need only\nNode.js in the system. You do not need Nano ID to be installed anywhere.\n\n```sh\n$ npx nanoid\nnpx: installed 1 in 0.63s\nLZfXLFzPPR4NNrgjlWDxn\n```\n\nSize of generated ID can be specified with `--size` (or `-s`) option:\n\n```sh\n$ npx nanoid --size 10\nL3til0JS4z\n```\n\nCustom alphabet can be specified with `--alphabet` (or `-a`) option\n(note that in this case `--size` is required):\n\n```sh\n$ npx nanoid --alphabet abc --size 15\nbccbcabaabaccab\n```\n\n\n### Other Programming Languages\n\nNano ID was ported to many languages. You can use these ports to have\nthe same ID generator on the client and server side.\n\n* [C](https://github.com/lukateras/nanoid.h)\n* [C#](https://github.com/codeyu/nanoid-net)\n* [C++](https://github.com/mcmikecreations/nanoid_cpp)\n* [Clojure and ClojureScript](https://github.com/zelark/nano-id)\n* [ColdFusion/CFML](https://github.com/JamoCA/cfml-nanoid)\n* [Crystal](https://github.com/mamantoha/nanoid.cr)\n* [Dart & Flutter](https://github.com/pd4d10/nanoid-dart)\n* [Deno](https://github.com/ianfabs/nanoid)\n* [Elixir](https://github.com/railsmechanic/nanoid)\n* [Go](https://github.com/matoous/go-nanoid)\n* [Haskell](https://github.com/MichelBoucey/NanoID)\n* [Haxe](https://github.com/flashultra/uuid)\n* [Janet](https://sr.ht/~statianzo/janet-nanoid/)\n* [Java](https://github.com/Soundicly/jnanoid-enhanced)\n* [Kotlin](https://github.com/viascom/nanoid-kotlin)\n* [MySQL/MariaDB](https://github.com/viascom/nanoid-mysql-mariadb)\n* [Nim](https://github.com/icyphox/nanoid.nim)\n* [OCaml](https://github.com/routineco/ocaml-nanoid)\n* [Perl](https://github.com/tkzwtks/Nanoid-perl)\n* [PHP](https://github.com/hidehalo/nanoid-php)\n* Python [native](https://github.com/puyuan/py-nanoid) implementation\n  with [dictionaries](https://pypi.org/project/nanoid-dictionary)\n  and [fast](https://github.com/oliverlambson/fastnanoid) implementation (written in Rust)\n* Postgres [Extension](https://github.com/spa5k/uids-postgres)\n  and [Native Function](https://github.com/viascom/nanoid-postgres)\n* [R](https://github.com/hrbrmstr/nanoid) (with dictionaries)\n* [Ruby](https://github.com/radeno/nanoid.rb)\n* [Rust](https://github.com/nikolay-govorov/nanoid)\n* [Swift](https://github.com/antiflasher/NanoID)\n* [Unison](https://share.unison-lang.org/latest/namespaces/hojberg/nanoid)\n* [V](https://github.com/invipal/nanoid)\n* [Zig](https://github.com/SasLuca/zig-nanoid)\n\nFor other environments, [CLI] is available to generate IDs from a command line.\n\n[CLI]: #cli\n\n\n## Tools\n\n* [ID size calculator] shows collision probability when adjusting\n  the ID alphabet or size.\n* [`nanoid-dictionary`] with popular alphabets to use with [`customAlphabet`].\n* [`nanoid-good`] to be sure that your ID doesn’t contain any obscene words.\n\n[`nanoid-dictionary`]: https://github.com/CyberAP/nanoid-dictionary\n[ID size calculator]:  https://zelark.github.io/nano-id-cc/\n[`customAlphabet`]:    #custom-alphabet-or-size\n[`nanoid-good`]:       https://github.com/y-gagar1n/nanoid-good\n"
        },
        {
          "name": "README.ru.md",
          "type": "blob",
          "size": 19.0234375,
          "content": "# Nano ID\n\n<img src=\"https://ai.github.io/nanoid/logo.svg\" align=\"right\"\n     alt=\"Логотип Nano ID от Антона Ловчикова\" width=\"180\" height=\"94\">\n\n[English](./README.md) | **Русский** | [简体中文](./README.zh-CN.md) | [Bahasa Indonesia](./README.id-ID.md)\n\nГенератор уникальных ID для JavaScript — лёгкий, безопасный,\nID можно применять в URL.\n\n> «Поразительный уровень бессмысленного перфекционизма,\n> который просто невозможно не уважать»\n\n- **Лёгкий.** 118 байт (после минификации и Brotli). Без зависимостей.\n  [Size Limit] следит за размером.\n- **Безопасный.** Использует аппаратный генератор случайных чисел.\n  Можно использовать в кластерах машин.\n- **Короткие ID.** Используется больший алфавит, чем у UUID (`A-Za-z0-9_-`).\n  Поэтому длина ID уменьшена с 36 до 21 символа.\n- **Работает везде.** Nano ID уже портировали\n  на [20 языков программирования](#другие-языки-программирования).\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\nПоддерживает современные браузеры, IE ([с Babel]), Node.js и React Native.\n\n[online tool]: https://gitpod.io/#https://github.com/ai/nanoid/\n[с babel]: https://developer.epages.com/blog/coding/how-to-transpile-node-modules-with-babel-and-webpack-in-a-monorepo/\n[size limit]: https://github.com/ai/size-limit\n\n---\n\n<img src=\"https://cdn.evilmartians.com/badges/logo-no-label.svg\" alt=\"\" width=\"22\" height=\"16\" />  Сделано в <b><a href=\"https://evilmartians.com/devtools?utm_source=nanoid&utm_campaign=devtools-button&utm_medium=github\">Злых марсианах</a></b>, продуктовом консалтинге для <b>инструментов разработки</b>.\n\n---\n\n\n## Оглавление\n\n- [Оглавление](#оглавление)\n- [Сравнение с UUID](#сравнение-с-uuid)\n- [Сравнение производительности](#сравнение-производительности)\n- [Безопасность](#безопасность)\n- [Подключение](#подключение)\n  - [ESM](#esm)\n  - [CommonJS](#commonjs)\n  - [CDN](#cdn)\n- [API](#api)\n  - [Блокирующий](#блокирующий)\n  - [Небезопасный](#небезопасный)\n  - [Смена алфавита или длины](#смена-алфавита-или-длины)\n  - [Смена генератора случайных чисел](#смена-генератора-случайных-чисел)\n- [Руководство](#руководство)\n  - [React](#react)\n  - [React Native](#react-native)\n  - [PouchDB и CouchDB](#pouchdb-и-couchdb)\n  - [Веб-воркеры](#веб-воркеры)\n  - [Терминал](#терминал)\n  - [Другие языки программирования](#другие-языки-программирования)\n- [Инструменты](#инструменты)\n\n\n## Сравнение с UUID\n\nNano ID похож на UUID v4 (случайный).\nУ них сравнимое число битов случайности в ID (126 у Nano ID против 122 у UUID),\nпоэтому они обладают похожей вероятностью возникновения коллизий\n(повторной генерации ранее выданных ID):\n\n> Чтобы вероятность повтора приблизилась к 1 на миллиард,\n> нужно сгенерировать 103 триллиона ID.\n\nНо между ними есть 2 важных отличия:\n\n1. Nano ID использует более широкий алфавит, и сравнимое количество\n   битов случайности будут упакованы в более короткую строку\n   (21 символ, против 36 у UUID).\n2. Код Nano ID **в 4 раз меньше**, чем у `uuid/v4` — 130 байт против 423.\n\n\n## Сравнение производительности\n\n```rust\n$ node ./test/benchmark.js\ncrypto.randomUUID          7,619,041 ops/sec\nuuid v4                    7,436,626 ops/sec\n@napi-rs/uuid              4,730,614 ops/sec\nuid/secure                 4,729,185 ops/sec\n@lukeed/uuid               4,015,673 ops/sec\nnanoid                     3,693,964 ops/sec\ncustomAlphabet             2,799,255 ops/sec\nnanoid for browser           380,915 ops/sec\nsecure-random-string         362,316 ops/sec\nuid-safe.sync                354,234 ops/sec\nshortid                       38,808 ops/sec\n\nNon-secure:\nuid                       11,872,105 ops/sec\nnanoid/non-secure          2,226,483 ops/sec\nrndm                       2,308,044 ops/sec\n```\n\nСреда сравнения: Framework 13 7840U, Fedora 39, Node.js 21.6.\n\n\n## Безопасность\n\n_См. также хорошую статью о теориях генераторов случайных чисел:\n[Secure random values (in Node.js)]_\n\n- **Непредсказуемость.** Вместо предсказуемого `Math.random()`, Nano ID\n  использует модуль `crypto` в Node.js и Web Crypto API в браузере.\n  Эти модули дают доступ к аппаратному генератору случайных чисел.\n- **Равномерность.** Например, существует популярная ошибка `random % alphabet`,\n  которую часто допускают при разработке генератора ID.\n  Распределение вероятности для каждого символа может не быть одинаковым.\n  Из-за неравномерности использования пространства алфавита, на перебор ID\n  потребуется меньше времени, чем ожидается.\n  Nano ID использует [более совершенный алгоритм],\n  а равномерность распределения символов покрыта тестами.\n\n  <img src=\"img/distribution.png\" alt=\"Распределение Nano ID\"\n     width=\"340\" height=\"135\">\n\n- **Документация:** все хитрости Nano ID хорошо документированы — смотрите\n  комментарии [в исходниках].\n- **Уязвимости:** если вы нашли уязвимость в Nano ID, свяжитесь с\n  [командой безопасности Tidelift](https://tidelift.com/security).\n  Они проконтролируют исправление и проинформируют пользователей.\n\n[secure random values (in node.js)]: https://gist.github.com/joepie91/7105003c3b26e65efcea63f3db82dfba\n[более совершенный алгоритм]: https://github.com/ai/nanoid/blob/main/index.js\n[в исходниках]: https://github.com/ai/nanoid/blob/main/index.js\n\n\n## Подключение\n\n### ESM\n\nNano ID 5 работает с ESM-проектами (`import`) в тестах или скриптах для Node.js.\n\n```bash\nnpm install nanoid\n```\n\n### CommonJS\n\nНа проектах с CommonJS вы можете использовать:\n\n- `require()` будет работать в последней версия Node.js 22.12 (из коробки)\n  или Node.js 20 (с флагом `--experimental-require-module`).\n\n- В более старых версиях Node.js можно использовать динамический импорт:\n\n  ```js\n  let nanoid\n  module.exports.createID = async () => {\n    if (!nanoid) ({ nanoid } = await import('nanoid'))\n    return nanoid() // => \"V1StGXR8_Z5jdHi6B-myT\"\n  }\n  ```\n\n- Или можно просто взять Nano ID 3.x (мы его всё ещё поддерживаем):\n\n  ```bash\n  npm install nanoid@3\n  ```\n\n### CDN\n\nДля быстрого прототипирования вы можете подключить Nano ID с CDN без установки.\nНе используйте этот способ на реальном сайте, так как он сильно бьёт\nпо скорости загрузки сайта.\n\n```js\nimport { nanoid } from 'https://cdn.jsdelivr.net/npm/nanoid/nanoid.js'\n```\n\n\n## API\n\nNano ID разделён на два модуля: стандартный и небезопасный.\n\nПо умолчанию используются символы, безопасные для URL (`A-Za-z0-9_-`).\nДлина ID по умолчанию — 21 символ\n(чтобы вероятность коллизий была соизмеримой с UUID v4).\n\n\n### Блокирующий\n\nБезопасный и простой в использовании способ использования Nano ID.\n\nИз-за особенностей работы генератора случайных чисел при использовании этого\nспособа ЦПУ может иногда простаивать без работы.\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\nФункция также принимает необязательный аргумент, задающий длину ID:\n\n```js\nnanoid(10) //=> \"IRFa-VaY2b\"\n```\n\nПри изменении размера, всегда проверяйте риски\nв нашем [калькуляторе коллизий](https://zelark.github.io/nano-id-cc/).\n\n\n### Небезопасный\n\nПо умолчанию, Nano ID использует аппаратный генератор случайных чисел для\nполучения непредсказуемых ID и минимизации риска возникновения коллизий\n(повторной генерации ранее выданных ID). Но если вам не требуется устойчивость\nк подбору ID, то вы можете перейти на небезопасный генератор — это полезно\nтам, где нет доступа к API аппаратного генератора случайных чисел.\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nconst id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\nНо учтите, что предсказуемость ID может быть использована для атаки на систему.\n\n\n### Смена алфавита или длины\n\nФункция `customAlphabet` позволяет создать свою функцию `nanoid`\nс нужным вам алфавитом и длиной ID.\n\n```js\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nuser.id = nanoid() //=> \"4f90d13a42\"\n```\n\n```js\nimport { customAlphabet } from 'nanoid/non-secure'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nuser.id = nanoid()\n```\n\nНе забудьте проверить риски коллизии вашего алфавита и длины\n[на нашем калькуляторе]. [`nanoid-dictionary`] содержит много популярных\nпримеров альтернативных алфавитов.\n\nАлфавит должен содержать ≤256 символов. Иначе мы не сможем гарантировать\nнепредсказуемость ID.\n\nДлину ID можно менять не только в `customAlphabet()`, но и при вызове\nгенератора, который она вернёт:\n\n```js\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nmodel.id = nanoid(5) //=> \"f01a2\"\n```\n\n[на нашем калькуляторе]: https://alex7kom.github.io/nano-nanoid-cc/\n[`nanoid-dictionary`]: https://github.com/CyberAP/nanoid-dictionary\n\n\n### Смена генератора случайных чисел\n\nФункция `customRandom` позволяет создать свою функцию `nanoid` со своими\nгенераторами случайных чисел, алфавитом и длинной ID.\n\nНапример, можно использовать генератор c seed для повторяемости тестов.\n\n```js\nimport { customRandom } from 'nanoid'\n\nconst rng = seedrandom(seed)\nconst nanoid = customRandom('abcdef', 10, size => {\n  return new Uint8Array(size).map(() => 256 * rng())\n})\n\nnanoid() //=> \"fbaefaadeb\"\n```\n\nФункция в третьем аргументе `customRandom` должна принимать длину массива\nи возвращать нужный массив со случайными числами\n\nЕсли вы хотите заменить только генератор случайных чисел, но оставить\nURL-совместимый алфавит, то стандартный алфавит доступен\nв экспорте `urlAlphabet`.\n\n```js\nconst { customRandom, urlAlphabet } = require('nanoid')\nconst nanoid = customRandom(urlAlphabet, 10, random)\n```\n\n\n## Руководство\n\n### React\n\nНе используйте Nano ID для генерации свойства `key` в JSX. При каждом рендере\n`key` будет разный, что плохо скажется на производительности.\n\n```jsx\nfunction Todos({ todos }) {\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={nanoid()}> /* НЕ ДЕЛАЙТЕ ТАК */\n          {todo.text}\n        </li>\n      ))}\n    </ul>\n  )\n}\n```\n\nДля связи `<input>` и `<label>` лучше использовать [`useId`],\nкоторый был добавлен в React 18.\n\n[`useId`]: https://reactjs.org/docs/hooks-reference.html#useid\n\n\n### React Native\n\nReact Native не имеет встроенного аппаратного генератора случайных чисел.\nПолифил ниже работает в чистом React Native и в Expo начиная с версии 39.\n\n1. Прочитайте документацию [`react-native-get-random-values`] и установите его.\n2. Импортируйте эту библиотеку до импорта Nano ID.\n\n```js\nimport 'react-native-get-random-values'\nimport { nanoid } from 'nanoid'\n```\n\n[`react-native-get-random-values`]: https://github.com/LinusU/react-native-get-random-values\n\n\n### PouchDB и CouchDB\n\nВ PouchDB и CouchDB, ID не могут начинаться с `_`. Добавьте к ID префикс,\nтак как иногда Nano ID может сгенерировать ID начинающийся с `_`.\n\nИзменить стандартный ID можно через следующую опцию:\n\n```js\ndb.put({\n  _id: 'id' + nanoid(),\n  …\n})\n```\n\n\n### Веб-воркеры\n\nВеб-воркеры не имеют доступа к аппаратному генератору случайных чисел.\n\nАппаратный генератор нужен, в том числе, для непредсказуемости ID. Например,\nкогда доступ к секретному документу защищён ссылкой с уникальным ID.\n\nЕсли вам не нужна непредсказуемость ID, то в Веб-воркере можно использовать\nнебезопасный генератор ID.\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nnanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\n\n### Терминал\n\nМожно сгенерировать уникальный ID прямо из терминала, вызвав `npx nanoid`.\nДля этого в системе должна быть только Node.js. `npx` сама скачает Nano ID,\nесли его нет в системе.\n\n```sh\n$ npx nanoid\nnpx: installed 1 in 0.63s\nLZfXLFzPPR4NNrgjlWDxn\n```\n\nДлину генерируемых ID можно передать в аргументе `--size` (или `-s`):\n\n```sh\n$ npx nanoid --size 10\nL3til0JS4z\n```\n\nИзменить алфавит можно при помощи аргумента `--alphabet` (ли `-a`)\n(в этом случае `--size` обязателен):\n\n```sh\n$ npx nanoid --alphabet abc --size 15\nbccbcabaabaccab\n```\n\n### Другие языки программирования\n\nNano ID был портирован на множество языков. Это полезно, чтобы сервер и клиент\nгенерировали ID по одной схеме.\n\n- [C#](https://github.com/codeyu/nanoid-net)\n- [C++](https://github.com/mcmikecreations/nanoid_cpp)\n- [Clojure и ClojureScript](https://github.com/zelark/nano-id)\n- [ColdFusion/CFML](https://github.com/JamoCA/cfml-nanoid)\n- [Crystal](https://github.com/mamantoha/nanoid.cr)\n- [Dart и Flutter](https://github.com/pd4d10/nanoid-dart)\n- [Deno](https://github.com/ianfabs/nanoid)\n- [Elixir](https://github.com/railsmechanic/nanoid)\n- [Go](https://github.com/jaevor/go-nanoid)\n- [Haskell](https://github.com/MichelBoucey/NanoID)\n- [Haxe](https://github.com/flashultra/uuid)\n- [Janet](https://sr.ht/~statianzo/janet-nanoid/)\n- [Java](https://github.com/Soundicly/jnanoid-enhanced)\n- [Kotlin](https://github.com/viascom/nanoid-kotlin)\n- [MySQL/MariaDB](https://github.com/viascom/nanoid-mysql-mariadb)\n- [Nim](https://github.com/icyphox/nanoid.nim)\n- [Perl](https://github.com/tkzwtks/Nanoid-perl)\n- [PHP](https://github.com/hidehalo/nanoid-php)\n- [Python](https://github.com/puyuan/py-nanoid)\n  со [словарями](https://pypi.org/project/nanoid-dictionary)\n- Postgres: [Rust-расширение](https://github.com/spa5k/uids-postgres)\n  и [на чисто pgSQL](https://github.com/viascom/nanoid-postgres)\n- [R](https://github.com/hrbrmstr/nanoid) (со словарями)\n- [Ruby](https://github.com/radeno/nanoid.rb)\n- [Rust](https://github.com/nikolay-govorov/nanoid)\n- [Swift](https://github.com/antiflasher/NanoID)\n- [Unison](https://share.unison-lang.org/latest/namespaces/hojberg/nanoid)\n- [V](https://github.com/invipal/nanoid)\n- [Zig](https://github.com/SasLuca/zig-nanoid)\n\nДля остальных сред можно использовать Nano ID [для терминала].\n\n[для терминала]: #терминал\n\n\n## Инструменты\n\n- [Калькулятор длины ID] поможет подобрать оптимальную длину ID,\n  в зависимости от частоты выдачи ID и нужной надёжности системы.\n- [`nanoid-dictionary`] с популярными алфавитами для [`customAlphabet`].\n- [`nanoid-good`] гарантирует, что в случайном ID не будет матерных слов.\n\n[калькулятор длины id]: https://zelark.github.io/nano-id-cc/\n[`nanoid-dictionary`]: https://github.com/CyberAP/nanoid-dictionary\n[`customalphabet`]: #смена-алфавита-или-длины\n[`nanoid-good`]: https://github.com/y-gagar1n/nanoid-good\n"
        },
        {
          "name": "README.zh-CN.md",
          "type": "blob",
          "size": 12.9736328125,
          "content": "# Nano ID\n\n<img src=\"https://ai.github.io/nanoid/logo.svg\" align=\"right\"\n     alt=\"Nano ID logo by Anton Lovchikov\" width=\"180\" height=\"94\">\n\n[English](./README.md) | [Русский](./README.ru.md) | **简体中文** | [Bahasa Indonesia](./README.id-ID.md)\n\n一个小巧、安全、URL友好、唯一的 JavaScript 字符串ID生成器。\n\n> “一个惊人的无意义的完美主义水平，这简直让人无法不敬佩。”\n\n* **小巧.** 118字节 (经过压缩和Brotli处理)。没有依赖。[Size Limit] 控制大小。\n* **安全.** 它使用硬件随机生成器。可在集群中使用。\n* **紧凑.** 它使用比 UUID（`A-Za-z0-9_-`）更大的字母表。因此，ID 大小从36个符号减少到21个符号。\n* **可移植.** Nano ID 已被移植到 [20种编程语言](#其他编程语言)。\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\n支持现代浏览器、IE [需使用 Babel]、Node.js 和 React Native。\n\n[在线工具]: https://gitpod.io/#https://github.com/ai/nanoid/\n[使用 Babel]:  https://developer.epages.com/blog/coding/how-to-transpile-node-modules-with-babel-and-webpack-in-a-monorepo/\n[Size Limit]:  https://github.com/ai/size-limit\n\n---\n\n<img src=\"https://cdn.evilmartians.com/badges/logo-no-label.svg\" alt=\"\" width=\"22\" height=\"16\" />  Made at <b><a href=\"https://evilmartians.com/devtools?utm_source=nanoid&utm_campaign=devtools-button&utm_medium=github\">Evil Martians</a></b>, product consulting for <b>developer tools</b>.\n\n---\n\n## 目录\n\n- [目录](#目录)\n- [与 UUID 的比较](#与-uuid-的比较)\n- [基准值](#基准值)\n- [安全性](#安全性)\n- [安装](#安装)\n- [API](#api)\n  - [阻塞](#阻塞)\n  - [不安全](#不安全)\n  - [自定义字母或大小](#自定义字母或大小)\n  - [自定义随机字节生成器](#自定义随机字节生成器)\n- [用法](#用法)\n  - [React](#react)\n  - [React Native](#react-native)\n  - [PouchDB and CouchDB](#pouchdb-and-couchdb)\n  - [Web Workers](#web-workers)\n  - [CLI](#cli)\n  - [其他编程语言](#其他编程语言)\n- [工具](#工具)\n\n\n## 与 UUID 的比较\n\nNano ID 与 UUID v4 (基于随机数) 相当。\n它们在 ID 中有相似数量的随机位\n(Nano ID 为126，UUID 为122),因此它们的碰撞概率相似：:\n\n> 要想有十亿分之一的重复机会,\n> 必须产生103万亿个版本4的ID.\n\nNano ID 和 UUID v4之间有两个主要区别:\n\n1. Nano ID 使用更大的字母表，所以类似数量的随机位\n   被包装在21个符号中，而不是36个。\n2. Nano ID 代码比 `uuid/v4` 包少 **4倍**: 130字节而不是423字节.\n\n\n## 基准值\n\n```rust\n$ node ./test/benchmark.js\ncrypto.randomUUID          7,619,041 ops/sec\nuuid v4                    7,436,626 ops/sec\n@napi-rs/uuid              4,730,614 ops/sec\nuid/secure                 4,729,185 ops/sec\n@lukeed/uuid               4,015,673 ops/sec\nnanoid                     3,693,964 ops/sec\ncustomAlphabet             2,799,255 ops/sec\nnanoid for browser           380,915 ops/sec\nsecure-random-string         362,316 ops/sec\nuid-safe.sync                354,234 ops/sec\nshortid                       38,808 ops/sec\n\nNon-secure:\nuid                       11,872,105 ops/sec\nnanoid/non-secure          2,226,483 ops/sec\nrndm                       2,308,044 ops/sec\n```\n\n测试配置: Framework 13 7840U, Fedora 39, Node.js 21.6.\n\n\n## 安全性\n\n*请看一篇关于随机生成器理论的好文章:\n[安全的随机值 (在 Node.js 中)]*\n\n* **不可预测性.** 不使用不安全的 `Math.random()`, Nano ID\n  使用 Node.js 的 `crypto` 模块和浏览器的 Web Crypto API。\n  这些模块使用不可预测的硬件随机生成器。\n* **统一性.** `random % alphabet` 是编写ID生成器时常犯的一个错误。\n  这样做会导致分布不均匀; 一些符号出现的机会较其他符号低。因此，在暴力破解时，尝试的次数会减少。\n  Nano ID 使用了一种 [更好的算法]，并进行了一致性测试。\n\n  <img src=\"img/distribution.png\" alt=\"Nano ID uniformity\"\n     width=\"340\" height=\"135\">\n\n* **有据可查:** 所有的 Nano ID 的行为都有记录。\n  见 [源代码] 中的注释。\n* **漏洞:** 报告安全漏洞，请使用\n  [安全联系人 Tidelift](https://tidelift.com/security).\n  Tidelift 将协调修复和披露。\n\n[安全的随机值 (在 Node.js 中)]: https://gist.github.com/joepie91/7105003c3b26e65efcea63f3db82dfba\n[更好的算法]:                  https://github.com/ai/nanoid/blob/main/index.js\n[源代码]:                     https://github.com/ai/nanoid/blob/main/index.js\n\n\n## 安装\n\n```bash\nnpm install nanoid\n```\n\nNano ID 5 仅适用于 ESM 项目、测试或 Node.js 脚本。\n对于 CommonJS，您需要 Nano ID 3.x（我们仍然支持它）：\n\n```bash\nnpm install nanoid@3\n```\n\n想要快速上手尝试，你可以从 CDN 加载 Nano ID。但是，它不建议\n在生产中使用，因为它的加载性能较低。\n\n```js\nimport { nanoid } from 'https://cdn.jsdelivr.net/npm/nanoid/nanoid.js'\n```\n\n\n## API\n\nNano ID 有2个 API：正常(阻塞)，和不安全。\n\n默认情况下，Nano ID 使用 URL 友好的符号（`A-Za-z0-9_-`）并返回一个\n有21个字符（类似 UUID v4 的碰撞概率）的 ID。\n\n\n### 阻塞\n\n使用 Nano ID 最安全、最简单的方法\n\n在极少数情况下，当收集硬件随机生成器的噪声时，可能会阻塞CPU，导致无法进行其他工作。\n\n```js\nimport { nanoid } from 'nanoid'\nmodel.id = nanoid() //=> \"V1StGXR8_Z5jdHi6B-myT\"\n```\n\n如果你想要减小 ID 大小（但是会增加碰撞概率），\n可以将大小作为参数传递\n\n```js\nnanoid(10) //=> \"IRFa-VaY2b\"\n```\n\n别忘了在我们的 [ID 碰撞概率] 计算器中检查你的 ID 大小的安全性。\n\n您也可以使用 [自定义字母表](#自定义字母或大小)\n或者是 [自定义生成器](#自定义随机字节生成器).\n\n[ID 碰撞概率]: https://alex7kom.github.io/nano-nanoid-cc/\n\n\n### 不安全\n\n默认情况下，Nano ID 使用硬件随机字节生成以提供安全性和较低的碰撞概率。如果您对安全性不太担心，您可以在没有硬件随机生成器的环境中使用它\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nconst id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\n\n### 自定义字母或大小\n\n`customAlphabet` 返回一个函数，允许您使用自定义字母表和ID大小创建 `nanoid`。\n\n```js\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nmodel.id = nanoid() //=> \"4f90d13a42\"\n```\n\n```js\nimport { customAlphabet } from 'nanoid/non-secure'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nuser.id = nanoid()\n```\n\n在我们的 [ID 碰撞概率] 计算器中检查您的自定义字母表和 ID 大小的安全性。\n查看 [`nanoid-dictionary`] 中的选项以获取更多字母表。\n\n字母表必须包含256个或更少的符号。\n否则，无法保证内部生成器算法的安全性。\n\n除了设置默认大小外，您还可以在调用函数时更改ID大小：\n\n```js\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('1234567890abcdef', 10)\nmodel.id = nanoid(5) //=> \"f01a2\"\n```\n\n[ID collision probability]: https://alex7kom.github.io/nano-nanoid-cc/\n[`nanoid-dictionary`]:      https://github.com/CyberAP/nanoid-dictionary\n\n\n### 自定义随机字节生成器\n\n`customRandom` 允许您创建一个 `nanoid` 并替换字母表\n和默认的随机字节生成器。\n\n在此示例中，使用基于种子的生成器:\n\n```js\nimport { customRandom } from 'nanoid'\n\nconst rng = seedrandom(seed)\nconst nanoid = customRandom('abcdef', 10, size => {\n  return (new Uint8Array(size)).map(() => 256 * rng())\n})\n\nnanoid() //=> \"fbaefaadeb\"\n```\n\n`random` 回调必须接受数组大小并返回随机数的数组。\n\n如果要使用与 `customRandom` 相同的URL友好符号,\n您可以使用 `urlAlphabet` 获取默认字母表。\n\n```js\nconst { customRandom, urlAlphabet } = require('nanoid')\nconst nanoid = customRandom(urlAlphabet, 10, random)\n```\n\n请注意，在Nano ID的不同版本之间，我们可能会更改随机生成器的调用顺序。如果您正在使用基于种子的生成器，我们不能保证相同的结果。\n\n\n## 用法\n\n### React\n\n目前还没有将 nanoid 用于 React `key` prop 的正确方法\n因为它在不同的渲染中应该是一致的。\n\n```jsx\nfunction Todos({todos}) {\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={nanoid()}> /* 不要这样做 */\n          {todo.text}\n        </li>\n      ))}\n    </ul>\n  )\n}\n```\n\n您应该尝试在列表项中找到稳定的 id。\n\n```jsx\nconst todoItems = todos.map((todo) =>\n  <li key={todo.id}>\n    {todo.text}\n  </li>\n)\n```\n\n如果您没有稳定的 ID，您最好使用索引作为 `键` 而不是 `nanoid()`：\n\n```jsx\nconst todoItems = todos.map((text, index) =>\n  <li key={index}> /* 仍然不推荐，但优于 nanoid()。\n                      仅当项目没有稳定ID时才执行此操作。 */\n    {text}\n  </li>\n)\n```\n\n如果您只需要随机 ID 来将元素（如标签和输入字段）链接在一起，建议使用 [`useId`]。该钩子在 React 18 中添加。\n\n[`useId`]: https://reactjs.org/docs/hooks-reference.html#useid\n\n\n### React Native\n\nReact Native 没有内置的随机生成器。以下polyfill适用于纯 React Native 和 Expo，从39.x版本开始生效。\n\n1. 检查 [`react-native-get-random-values`] 文档并安装它。\n2. 在 Nano ID 之前导入它。\n\n```js\nimport 'react-native-get-random-values'\nimport { nanoid } from 'nanoid'\n```\n\n[`react-native-get-random-values`]: https://github.com/LinusU/react-native-get-random-values\n\n\n### PouchDB and CouchDB\n\n在 PouchDB 和 CouchDB 中，ID 不能以下划线 `_` 开头。\n需要一个前缀来防止这个问题，因为 Nano ID 可能在默认情况下使用 `_` 作为 ID 的开头。\n在默认情况下，在 ID 的开头使用 `_`。\n\n用下面的选项覆盖默认的 ID。\n\n```js\ndb.put({\n  _id: 'id' + nanoid(),\n  …\n})\n```\n\n\n### Web Workers\n\nWeb Workers 无法访问安全的随机生成器.\n\n当ID应该是不可预测的时候，安全性对ID很重要。\n例如，在 \"按 URL 访问\"的链接生成中。\n如果你不需要不可预测的 ID，但你需要使用 Web Workers。\n你可以使用非安全的 ID 生成器。\n\n```js\nimport { nanoid } from 'nanoid/non-secure'\nnanoid() //=> \"Uakgb_J5m9g-0JDMbcJqLJ\"\n```\n\n注意：非安全的ID更容易受到碰撞攻击。\n\n\n### CLI\n\n你可以通过调用 `npx nanoid` 在终端获得唯一的 ID。你只需要\n在系统中安装了 Node.js。你不需要把 Nano ID 安装在任何地方。\n\n```sh\n$ npx nanoid\nnpx: installed 1 in 0.63s\nLZfXLFzPPR4NNrgjlWDxn\n```\n\n生成的ID的大小可以使用 `--size`（或 `-s` ）选项指定：\n\n```sh\n$ npx nanoid --size 10\nL3til0JS4z\n```\n\n可以使用 `--alphabet`（或 `-a` ）选项指定自定义字母表（请注意，这种情况下需要 `--size` 选项）。\n\n```sh\n$ npx nanoid --alphabet abc --size 15\nbccbcabaabaccab\n```\n\n\n### 其他编程语言\n\nNano ID 已被移植到许多语言。 你可以使用下面这些移植，获取在客户端和服务器端相同的ID生成器。\n\n* [C#](https://github.com/codeyu/nanoid-net)\n* [C++](https://github.com/mcmikecreations/nanoid_cpp)\n* [Clojure and ClojureScript](https://github.com/zelark/nano-id)\n* [ColdFusion/CFML](https://github.com/JamoCA/cfml-nanoid)\n* [Crystal](https://github.com/mamantoha/nanoid.cr)\n* [Dart & Flutter](https://github.com/pd4d10/nanoid-dart)\n* [Deno](https://github.com/ianfabs/nanoid)\n* [Elixir](https://github.com/railsmechanic/nanoid)\n* [Go](https://github.com/jaevor/go-nanoid)\n* [Haskell](https://github.com/MichelBoucey/NanoID)\n* [Haxe](https://github.com/flashultra/uuid)\n* [Janet](https://sr.ht/~statianzo/janet-nanoid/)\n* [Java](https://github.com/Soundicly/jnanoid-enhanced)\n* [Kotlin](https://github.com/viascom/nanoid-kotlin)\n* [MySQL/MariaDB](https://github.com/viascom/nanoid-mysql-mariadb)\n* [Nim](https://github.com/icyphox/nanoid.nim)\n* [Perl](https://github.com/tkzwtks/Nanoid-perl)\n* [PHP](https://github.com/hidehalo/nanoid-php)\n* [Python](https://github.com/puyuan/py-nanoid)\n  with [dictionaries](https://pypi.org/project/nanoid-dictionary)\n* [Postgres Extension](https://github.com/spa5k/uids-postgres)\n* [Postgres Native Function](https://github.com/viascom/nanoid-postgres)\n* [R](https://github.com/hrbrmstr/nanoid) (with dictionaries)\n* [Ruby](https://github.com/radeno/nanoid.rb)\n* [Rust](https://github.com/nikolay-govorov/nanoid)\n* [Swift](https://github.com/antiflasher/NanoID)\n* [Unison](https://share.unison-lang.org/latest/namespaces/hojberg/nanoid)\n* [V](https://github.com/invipal/nanoid)\n* [Zig](https://github.com/SasLuca/zig-nanoid)\n\n此外，[CLI] 还可用于从命令行生成 ID。\n\n[CLI]: #cli\n\n\n## 工具\n\n* [ID size 计算器] 显示调整时的碰撞概率\n  ID的字母或大小。\n* [`nanoid-dictionary`] 与常用的字母一起使用 [`自定义字母`]。\n* [`nanoid-good`] 以确保你的ID不包含任何淫秽词汇。\n\n[`nanoid-dictionary`]: https://github.com/CyberAP/nanoid-dictionary\n[ID size 计算器]:  https://zelark.github.io/nano-id-cc/\n[`自定义字母`]:    #自定义字母或大小\n[`nanoid-good`]:       https://github.com/y-gagar1n/nanoid-good\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "eslint.config.js",
          "type": "blob",
          "size": 0.32421875,
          "content": "import loguxConfig from '@logux/eslint-config'\n\n/** @type {import('eslint').Linter.FlatConfig[]} */\nexport default [\n  { ignores: ['test/demo/build', 'nanoid.js', '**/errors.ts'] },\n  ...loguxConfig,\n  {\n    rules: {\n      'func-style': 'off',\n      'n/no-unsupported-features/node-builtins': 'off',\n      'yoda': 'off'\n    }\n  }\n]\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.browser.js",
          "type": "blob",
          "size": 2.462890625,
          "content": "// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\n\nexport { urlAlphabet } from './url-alphabet/index.js'\n\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step | 0\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\n\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\n\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    // Using the bitwise AND operator to \"cap\" the value of\n    // the random byte from 255 to 63, in that way we can make sure\n    // that the value will be a valid index for the \"chars\" string.\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"
        },
        {
          "name": "index.d.ts",
          "type": "blob",
          "size": 2.19921875,
          "content": "/**\n * Generate secure URL-friendly unique ID.\n *\n * By default, the ID will have 21 symbols to have a collision probability\n * similar to UUID v4.\n *\n * ```js\n * import { nanoid } from 'nanoid'\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n * ```\n *\n * @param size Size of the ID. The default size is 21.\n * @returns A random string.\n */\nexport function nanoid(size?: number): string\n\n/**\n * Generate secure unique ID with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param alphabet Alphabet used to generate the ID.\n * @param defaultSize Size of the ID. The default size is 21.\n * @returns A random string generator.\n *\n * ```js\n * const { customAlphabet } = require('nanoid')\n * const nanoid = customAlphabet('0123456789абвгдеё', 5)\n * nanoid() //=> \"8ё56а\"\n * ```\n */\nexport function customAlphabet(\n  alphabet: string,\n  defaultSize?: number\n): (size?: number) => string\n\n/**\n * Generate unique ID with custom random generator and alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * ```js\n * import { customRandom } from 'nanoid/format'\n *\n * const nanoid = customRandom('abcdef', 5, size => {\n *   const random = []\n *   for (let i = 0; i < size; i++) {\n *     random.push(randomByte())\n *   }\n *   return random\n * })\n *\n * nanoid() //=> \"fbaef\"\n * ```\n *\n * @param alphabet Alphabet used to generate a random string.\n * @param size Size of the random string.\n * @param random A random bytes generator.\n * @returns A random string generator.\n */\nexport function customRandom(\n  alphabet: string,\n  size: number,\n  random: (bytes: number) => Uint8Array\n): () => string\n\n/**\n * URL safe symbols.\n *\n * ```js\n * import { urlAlphabet } from 'nanoid'\n * const nanoid = customAlphabet(urlAlphabet, 10)\n * nanoid() //=> \"Uakgb_J5m9\"\n * ```\n */\nexport const urlAlphabet: string\n\n/**\n * Generate an array of random bytes collected from hardware noise.\n *\n * ```js\n * import { customRandom, random } from 'nanoid'\n * const nanoid = customRandom(\"abcdef\", 5, random)\n * ```\n *\n * @param bytes Size of the array.\n * @returns An array of random bytes.\n */\nexport function random(bytes: number): Uint8Array\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 3.333984375,
          "content": "import { webcrypto as crypto } from 'node:crypto'\n\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\n\nexport { urlAlphabet } from './url-alphabet/index.js'\n\n// It is best to make fewer, larger requests to the crypto module to\n// avoid system call overhead. So, random numbers are generated in a\n// pool. The pool is a Buffer that is larger than the initial random\n// request size by this multiplier. The pool is enlarged if subsequent\n// requests exceed the maximum buffer size.\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\n\nfunction fillPool(bytes) {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.getRandomValues(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.getRandomValues(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\n\nexport function random(bytes) {\n  // `|=` convert `bytes` to number to prevent `valueOf` abusing and pool pollution\n  fillPool((bytes |= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\n\nexport function customRandom(alphabet, defaultSize, getRandom) {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (let i = 0; i < step; i++)`.\n      let i = step\n      while (i--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\n\nexport function customAlphabet(alphabet, size = 21) {\n  return customRandom(alphabet, size, random)\n}\n\nexport function nanoid(size = 21) {\n  // `|=` convert `size` to number to prevent `valueOf` abusing and pool pollution\n  fillPool((size |= 0))\n  let id = ''\n  // We are reading directly from the random pool to avoid creating new array\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unnecessary because\n    // the bitmask trims bytes down to the alphabet size.\n    id += scopedUrlAlphabet[pool[i] & 63]\n  }\n  return id\n}\n"
        },
        {
          "name": "nanoid.js",
          "type": "blob",
          "size": 0.1923828125,
          "content": "let a=\"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";export let nanoid=(e=21)=>{let t=\"\",r=crypto.getRandomValues(new Uint8Array(e));for(let n=0;n<e;n++)t+=a[63&r[n]];return t};"
        },
        {
          "name": "non-secure",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.791015625,
          "content": "{\n  \"name\": \"nanoid\",\n  \"version\": \"5.0.9\",\n  \"description\": \"A tiny (118 bytes), secure URL-friendly unique string ID generator\",\n  \"keywords\": [\n    \"uuid\",\n    \"random\",\n    \"id\",\n    \"url\"\n  ],\n  \"scripts\": {\n    \"clean\": \"rm -rf coverage\",\n    \"start\": \"vite test/demo/\",\n    \"test:coverage\": \"c8 bnt\",\n    \"test:lint\": \"eslint .\",\n    \"test:size\": \"pnpm clean && size-limit\",\n    \"test\": \"pnpm run /^test:/\"\n  },\n  \"type\": \"module\",\n  \"engines\": {\n    \"node\": \"^18 || >=20\"\n  },\n  \"funding\": [\n    {\n      \"type\": \"github\",\n      \"url\": \"https://github.com/sponsors/ai\"\n    }\n  ],\n  \"author\": \"Andrey Sitnik <andrey@sitnik.ru>\",\n  \"license\": \"MIT\",\n  \"repository\": \"ai/nanoid\",\n  \"exports\": {\n    \".\": {\n      \"browser\": \"./index.browser.js\",\n      \"default\": \"./index.js\"\n    },\n    \"./non-secure\": \"./non-secure/index.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"browser\": {\n    \"./index.js\": \"./index.browser.js\"\n  },\n  \"react-native\": {\n    \"./index.js\": \"./index.browser.js\"\n  },\n  \"bin\": \"./bin/nanoid.js\",\n  \"sideEffects\": false,\n  \"types\": \"./index.d.ts\",\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.26.0\",\n    \"@logux/eslint-config\": \"^53.5.1\",\n    \"@lukeed/uuid\": \"^2.0.1\",\n    \"@napi-rs/uuid\": \"^0.2.2\",\n    \"@originjs/vite-plugin-commonjs\": \"^1.0.3\",\n    \"@size-limit/file\": \"^11.1.6\",\n    \"@size-limit/webpack\": \"^11.1.6\",\n    \"@types/node\": \"^22.10.1\",\n    \"better-node-test\": \"^0.7.1\",\n    \"c8\": \"^10.1.2\",\n    \"clean-publish\": \"^5.1.0\",\n    \"eslint\": \"^9.16.0\",\n    \"rndm\": \"^1.2.0\",\n    \"secure-random-string\": \"^1.1.4\",\n    \"shortid\": \"^2.2.16\",\n    \"size-limit\": \"^11.1.6\",\n    \"terser\": \"^5.36.0\",\n    \"tinybench\": \"^3.0.7\",\n    \"uid\": \"^2.0.2\",\n    \"uid-safe\": \"^2.1.5\",\n    \"uuid\": \"^11.0.3\",\n    \"vite\": \"^6.0.2\"\n  },\n  \"size-limit\": [\n    {\n      \"name\": \"nanoid\",\n      \"import\": \"{ nanoid }\",\n      \"limit\": \"118 B\"\n    },\n    {\n      \"name\": \"customAlphabet\",\n      \"import\": \"{ customAlphabet }\",\n      \"limit\": \"165 B\"\n    },\n    {\n      \"name\": \"urlAlphabet\",\n      \"import\": \"{ urlAlphabet }\",\n      \"limit\": \"47 B\"\n    },\n    {\n      \"name\": \"non-secure nanoid\",\n      \"import\": \"{ nanoid }\",\n      \"path\": \"non-secure/index.js\",\n      \"limit\": \"90 B\"\n    },\n    {\n      \"name\": \"non-secure customAlphabet\",\n      \"import\": \"{ customAlphabet }\",\n      \"path\": \"non-secure/index.js\",\n      \"limit\": \"55 B\"\n    }\n  ],\n  \"prettier\": {\n    \"arrowParens\": \"avoid\",\n    \"jsxSingleQuote\": false,\n    \"quoteProps\": \"consistent\",\n    \"semi\": false,\n    \"singleQuote\": true,\n    \"trailingComma\": \"none\"\n  },\n  \"clean-publish\": {\n    \"cleanDocs\": true,\n    \"cleanComments\": true\n  },\n  \"c8\": {\n    \"exclude\": [\n      \"bin/nanoid.js\",\n      \"**/*.test.*\",\n      \"test/*\"\n    ],\n    \"lines\": 100,\n    \"check-coverage\": true,\n    \"reporter\": [\n      \"text\",\n      \"lcov\"\n    ],\n    \"skip-full\": true,\n    \"clean\": true\n  }\n}\n"
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 138.119140625,
          "content": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    devDependencies:\n      '@babel/core':\n        specifier: ^7.26.0\n        version: 7.26.0\n      '@logux/eslint-config':\n        specifier: ^53.5.1\n        version: 53.5.1(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      '@lukeed/uuid':\n        specifier: ^2.0.1\n        version: 2.0.1\n      '@napi-rs/uuid':\n        specifier: ^0.2.2\n        version: 0.2.2\n      '@originjs/vite-plugin-commonjs':\n        specifier: ^1.0.3\n        version: 1.0.3\n      '@size-limit/file':\n        specifier: ^11.1.6\n        version: 11.1.6(size-limit@11.1.6)\n      '@size-limit/webpack':\n        specifier: ^11.1.6\n        version: 11.1.6(size-limit@11.1.6)\n      '@types/node':\n        specifier: ^22.10.1\n        version: 22.10.1\n      better-node-test:\n        specifier: ^0.7.1\n        version: 0.7.1\n      c8:\n        specifier: ^10.1.2\n        version: 10.1.2\n      clean-publish:\n        specifier: ^5.1.0\n        version: 5.1.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.16.0(jiti@2.4.1)\n      rndm:\n        specifier: ^1.2.0\n        version: 1.2.0\n      secure-random-string:\n        specifier: ^1.1.4\n        version: 1.1.4\n      shortid:\n        specifier: ^2.2.16\n        version: 2.2.16\n      size-limit:\n        specifier: ^11.1.6\n        version: 11.1.6\n      terser:\n        specifier: ^5.36.0\n        version: 5.36.0\n      tinybench:\n        specifier: ^3.0.7\n        version: 3.0.7\n      uid:\n        specifier: ^2.0.2\n        version: 2.0.2\n      uid-safe:\n        specifier: ^2.1.5\n        version: 2.1.5\n      uuid:\n        specifier: ^11.0.3\n        version: 11.0.3\n      vite:\n        specifier: ^6.0.2\n        version: 6.0.2(@types/node@22.10.1)(jiti@2.4.1)(terser@5.36.0)\n\npackages:\n\n  '@ampproject/remapping@2.3.0':\n    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}\n    engines: {node: '>=6.0.0'}\n\n  '@babel/code-frame@7.26.2':\n    resolution: {integrity: sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/compat-data@7.26.3':\n    resolution: {integrity: sha512-nHIxvKPniQXpmQLb0vhY3VaFb3S0YrTAwpOWJZh1wn3oJPjJk9Asva204PsBdmAE8vpzfHudT8DB0scYvy9q0g==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/core@7.26.0':\n    resolution: {integrity: sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/generator@7.26.3':\n    resolution: {integrity: sha512-6FF/urZvD0sTeO7k6/B15pMLC4CHUv1426lzr3N01aHJTl046uCAh9LXW/fzeXXjPNCJ6iABW5XaWOsIZB93aQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-compilation-targets@7.25.9':\n    resolution: {integrity: sha512-j9Db8Suy6yV/VHa4qzrj9yZfZxhLWQdVnRlXxmKLYlhWUVB1sB2G5sxuWYXk/whHD9iW76PmNzxZ4UCnTQTVEQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-module-imports@7.25.9':\n    resolution: {integrity: sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-module-transforms@7.26.0':\n    resolution: {integrity: sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0\n\n  '@babel/helper-string-parser@7.25.9':\n    resolution: {integrity: sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-identifier@7.25.9':\n    resolution: {integrity: sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-option@7.25.9':\n    resolution: {integrity: sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helpers@7.26.0':\n    resolution: {integrity: sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/parser@7.26.3':\n    resolution: {integrity: sha512-WJ/CvmY8Mea8iDXo6a7RK2wbmJITT5fN3BEkRuFlxVyNx8jOKIIhmC4fSkTcPcf8JyavbBwIe6OpiCOBXt/IcA==}\n    engines: {node: '>=6.0.0'}\n    hasBin: true\n\n  '@babel/template@7.25.9':\n    resolution: {integrity: sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/traverse@7.26.3':\n    resolution: {integrity: sha512-yTmc8J+Sj8yLzwr4PD5Xb/WF3bOYu2C2OoSZPzbuqRm4n98XirsbzaX+GloeO376UnSYIYJ4NCanwV5/ugZkwA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/types@7.26.3':\n    resolution: {integrity: sha512-vN5p+1kl59GVKMvTHt55NzzmYVxprfJD+ql7U9NFIfKCBkYE55LYtS+WtPlaYOyzydrKI8Nezd+aZextrd+FMA==}\n    engines: {node: '>=6.9.0'}\n\n  '@bcoe/v8-coverage@0.2.3':\n    resolution: {integrity: sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==}\n\n  '@esbuild/aix-ppc64@0.24.0':\n    resolution: {integrity: sha512-WtKdFM7ls47zkKHFVzMz8opM7LkcsIp9amDUBIAWirg70RM71WRSjdILPsY5Uv1D42ZpUfaPILDlfactHgsRkw==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [aix]\n\n  '@esbuild/android-arm64@0.24.0':\n    resolution: {integrity: sha512-Vsm497xFM7tTIPYK9bNTYJyF/lsP590Qc1WxJdlB6ljCbdZKU9SY8i7+Iin4kyhV/KV5J2rOKsBQbB77Ab7L/w==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [android]\n\n  '@esbuild/android-arm@0.24.0':\n    resolution: {integrity: sha512-arAtTPo76fJ/ICkXWetLCc9EwEHKaeya4vMrReVlEIUCAUncH7M4bhMQ+M9Vf+FFOZJdTNMXNBrWwW+OXWpSew==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [android]\n\n  '@esbuild/android-x64@0.24.0':\n    resolution: {integrity: sha512-t8GrvnFkiIY7pa7mMgJd7p8p8qqYIz1NYiAoKc75Zyv73L3DZW++oYMSHPRarcotTKuSs6m3hTOa5CKHaS02TQ==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [android]\n\n  '@esbuild/darwin-arm64@0.24.0':\n    resolution: {integrity: sha512-CKyDpRbK1hXwv79soeTJNHb5EiG6ct3efd/FTPdzOWdbZZfGhpbcqIpiD0+vwmpu0wTIL97ZRPZu8vUt46nBSw==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@esbuild/darwin-x64@0.24.0':\n    resolution: {integrity: sha512-rgtz6flkVkh58od4PwTRqxbKH9cOjaXCMZgWD905JOzjFKW+7EiUObfd/Kav+A6Gyud6WZk9w+xu6QLytdi2OA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@esbuild/freebsd-arm64@0.24.0':\n    resolution: {integrity: sha512-6Mtdq5nHggwfDNLAHkPlyLBpE5L6hwsuXZX8XNmHno9JuL2+bg2BX5tRkwjyfn6sKbxZTq68suOjgWqCicvPXA==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@esbuild/freebsd-x64@0.24.0':\n    resolution: {integrity: sha512-D3H+xh3/zphoX8ck4S2RxKR6gHlHDXXzOf6f/9dbFt/NRBDIE33+cVa49Kil4WUjxMGW0ZIYBYtaGCa2+OsQwQ==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@esbuild/linux-arm64@0.24.0':\n    resolution: {integrity: sha512-TDijPXTOeE3eaMkRYpcy3LarIg13dS9wWHRdwYRnzlwlA370rNdZqbcp0WTyyV/k2zSxfko52+C7jU5F9Tfj1g==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@esbuild/linux-arm@0.24.0':\n    resolution: {integrity: sha512-gJKIi2IjRo5G6Glxb8d3DzYXlxdEj2NlkixPsqePSZMhLudqPhtZ4BUrpIuTjJYXxvF9njql+vRjB2oaC9XpBw==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [linux]\n\n  '@esbuild/linux-ia32@0.24.0':\n    resolution: {integrity: sha512-K40ip1LAcA0byL05TbCQ4yJ4swvnbzHscRmUilrmP9Am7//0UjPreh4lpYzvThT2Quw66MhjG//20mrufm40mA==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [linux]\n\n  '@esbuild/linux-loong64@0.14.54':\n    resolution: {integrity: sha512-bZBrLAIX1kpWelV0XemxBZllyRmM6vgFQQG2GdNb+r3Fkp0FOh1NJSvekXDs7jq70k4euu1cryLMfU+mTXlEpw==}\n    engines: {node: '>=12'}\n    cpu: [loong64]\n    os: [linux]\n\n  '@esbuild/linux-loong64@0.24.0':\n    resolution: {integrity: sha512-0mswrYP/9ai+CU0BzBfPMZ8RVm3RGAN/lmOMgW4aFUSOQBjA31UP8Mr6DDhWSuMwj7jaWOT0p0WoZ6jeHhrD7g==}\n    engines: {node: '>=18'}\n    cpu: [loong64]\n    os: [linux]\n\n  '@esbuild/linux-mips64el@0.24.0':\n    resolution: {integrity: sha512-hIKvXm0/3w/5+RDtCJeXqMZGkI2s4oMUGj3/jM0QzhgIASWrGO5/RlzAzm5nNh/awHE0A19h/CvHQe6FaBNrRA==}\n    engines: {node: '>=18'}\n    cpu: [mips64el]\n    os: [linux]\n\n  '@esbuild/linux-ppc64@0.24.0':\n    resolution: {integrity: sha512-HcZh5BNq0aC52UoocJxaKORfFODWXZxtBaaZNuN3PUX3MoDsChsZqopzi5UupRhPHSEHotoiptqikjN/B77mYQ==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@esbuild/linux-riscv64@0.24.0':\n    resolution: {integrity: sha512-bEh7dMn/h3QxeR2KTy1DUszQjUrIHPZKyO6aN1X4BCnhfYhuQqedHaa5MxSQA/06j3GpiIlFGSsy1c7Gf9padw==}\n    engines: {node: '>=18'}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@esbuild/linux-s390x@0.24.0':\n    resolution: {integrity: sha512-ZcQ6+qRkw1UcZGPyrCiHHkmBaj9SiCD8Oqd556HldP+QlpUIe2Wgn3ehQGVoPOvZvtHm8HPx+bH20c9pvbkX3g==}\n    engines: {node: '>=18'}\n    cpu: [s390x]\n    os: [linux]\n\n  '@esbuild/linux-x64@0.24.0':\n    resolution: {integrity: sha512-vbutsFqQ+foy3wSSbmjBXXIJ6PL3scghJoM8zCL142cGaZKAdCZHyf+Bpu/MmX9zT9Q0zFBVKb36Ma5Fzfa8xA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [linux]\n\n  '@esbuild/netbsd-x64@0.24.0':\n    resolution: {integrity: sha512-hjQ0R/ulkO8fCYFsG0FZoH+pWgTTDreqpqY7UnQntnaKv95uP5iW3+dChxnx7C3trQQU40S+OgWhUVwCjVFLvg==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [netbsd]\n\n  '@esbuild/openbsd-arm64@0.24.0':\n    resolution: {integrity: sha512-MD9uzzkPQbYehwcN583yx3Tu5M8EIoTD+tUgKF982WYL9Pf5rKy9ltgD0eUgs8pvKnmizxjXZyLt0z6DC3rRXg==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [openbsd]\n\n  '@esbuild/openbsd-x64@0.24.0':\n    resolution: {integrity: sha512-4ir0aY1NGUhIC1hdoCzr1+5b43mw99uNwVzhIq1OY3QcEwPDO3B7WNXBzaKY5Nsf1+N11i1eOfFcq+D/gOS15Q==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [openbsd]\n\n  '@esbuild/sunos-x64@0.24.0':\n    resolution: {integrity: sha512-jVzdzsbM5xrotH+W5f1s+JtUy1UWgjU0Cf4wMvffTB8m6wP5/kx0KiaLHlbJO+dMgtxKV8RQ/JvtlFcdZ1zCPA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [sunos]\n\n  '@esbuild/win32-arm64@0.24.0':\n    resolution: {integrity: sha512-iKc8GAslzRpBytO2/aN3d2yb2z8XTVfNV0PjGlCxKo5SgWmNXx82I/Q3aG1tFfS+A2igVCY97TJ8tnYwpUWLCA==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@esbuild/win32-ia32@0.24.0':\n    resolution: {integrity: sha512-vQW36KZolfIudCcTnaTpmLQ24Ha1RjygBo39/aLkM2kmjkWmZGEJ5Gn9l5/7tzXA42QGIoWbICfg6KLLkIw6yw==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [win32]\n\n  '@esbuild/win32-x64@0.24.0':\n    resolution: {integrity: sha512-7IAFPrjSQIJrGsK6flwg7NFmwBoSTyF3rl7If0hNUFQU4ilTsEPL6GuMuU9BfIWVVGuRnuIidkSMC+c0Otu8IA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [win32]\n\n  '@eslint-community/eslint-utils@4.4.1':\n    resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0\n\n  '@eslint-community/regexpp@4.12.1':\n    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n\n  '@eslint/config-array@0.19.1':\n    resolution: {integrity: sha512-fo6Mtm5mWyKjA/Chy1BYTdn5mGJoDNjC7C64ug20ADsRDGrA85bN3uK3MaKbeRkRuuIEAR5N33Jr1pbm411/PA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/core@0.9.1':\n    resolution: {integrity: sha512-GuUdqkyyzQI5RMIWkHhvTWLCyLo1jNK3vzkSyaExH5kHPDHcuL2VOpHjmMY+y3+NC69qAKToBqldTBgYeLSr9Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/eslintrc@3.2.0':\n    resolution: {integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/js@9.16.0':\n    resolution: {integrity: sha512-tw2HxzQkrbeuvyj1tG2Yqq+0H9wGoI2IMk4EOsQeX+vmd75FtJAzf+gTA69WF+baUKRYQ3x2kbLE08js5OsTVg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/object-schema@2.1.5':\n    resolution: {integrity: sha512-o0bhxnL89h5Bae5T318nFoFzGy+YE5i/gGkoPAgkmTVdRKTiv3p8JHevPiPaMwoloKfEiiaHlawCqaZMqRm+XQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/plugin-kit@0.2.4':\n    resolution: {integrity: sha512-zSkKow6H5Kdm0ZUQUB2kV5JIXqoG0+uH5YADhaEHswm664N9Db8dXSi0nMJpacpMf+MyyglF1vnZohpEg5yUtg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@humanfs/core@0.19.1':\n    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanfs/node@0.16.6':\n    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanwhocodes/module-importer@1.0.1':\n    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}\n    engines: {node: '>=12.22'}\n\n  '@humanwhocodes/retry@0.3.1':\n    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}\n    engines: {node: '>=18.18'}\n\n  '@humanwhocodes/retry@0.4.1':\n    resolution: {integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==}\n    engines: {node: '>=18.18'}\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@istanbuljs/schema@0.1.3':\n    resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}\n    engines: {node: '>=8'}\n\n  '@jridgewell/gen-mapping@0.3.5':\n    resolution: {integrity: sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/set-array@1.2.1':\n    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/source-map@0.3.6':\n    resolution: {integrity: sha512-1ZJTZebgqllO79ue2bm3rIGud/bOe0pP5BjSRCRxxYkEZS8STV7zN84UBbiYu7jy+eCKSnVIUgoWWE/tt+shMQ==}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@logux/eslint-config@53.5.1':\n    resolution: {integrity: sha512-rw8NxhTWPcqBTenTrKhuLwq4vpecogq+cw7g0q9/QTbj+Waj2POZMuhS7Dn9UoXkmJ5r5n1gdyURHKZsB8MOLg==}\n    engines: {node: '>=18.0.0'}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      eslint-plugin-svelte: ^2.35.1\n      svelte: ^4.2.12 || ^5.0.0\n    peerDependenciesMeta:\n      eslint-plugin-svelte:\n        optional: true\n      svelte:\n        optional: true\n\n  '@lukeed/csprng@1.1.0':\n    resolution: {integrity: sha512-Z7C/xXCiGWsg0KuKsHTKJxbWhpI3Vs5GwLfOean7MGyVFGqdRgBbAjOCh6u4bbjPc/8MJ2pZmK/0DLdCbivLDA==}\n    engines: {node: '>=8'}\n\n  '@lukeed/uuid@2.0.1':\n    resolution: {integrity: sha512-qC72D4+CDdjGqJvkFMMEAtancHUQ7/d/tAiHf64z8MopFDmcrtbcJuerDtFceuAfQJ2pDSfCKCtbqoGBNnwg0w==}\n    engines: {node: '>=8'}\n\n  '@napi-rs/uuid-android-arm-eabi@0.2.2':\n    resolution: {integrity: sha512-Wm1gelEpuIdcNaJF0Y3SyYEV5iiPfqUzxs8lTwl525sBvnOXCNaErLYAL3sKq4kbsk7zjyHmXDjVy5cTFST9Jw==}\n    engines: {node: '>= 10'}\n    cpu: [arm]\n    os: [android]\n\n  '@napi-rs/uuid-android-arm64@0.2.2':\n    resolution: {integrity: sha512-QXj6tU3NoCd82ESCJWBcjFndgu0bDaYu8EpjL40cXQgT9IpBulmlNbES8LYm5Mdqp2VrKg0imJHFwS34m4QIuw==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [android]\n\n  '@napi-rs/uuid-darwin-arm64@0.2.2':\n    resolution: {integrity: sha512-U1B4O54y2yF5KImJxaANpNBjh+G54tjuBP38/xmnQzRYdFGzOHSGHcZZ3glyQXVP12nZR9wWA0tKkuadhFJrbQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@napi-rs/uuid-darwin-x64@0.2.2':\n    resolution: {integrity: sha512-RKp3VAw10+Yh8N+glrKRQvfVX3qkiSCmNIbB9+c1KadbWPBxuQZe+pLaluu0KU8SHXmRexBBGkwvbXHWj/ewRw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@napi-rs/uuid-freebsd-x64@0.2.2':\n    resolution: {integrity: sha512-XzNfzeKhcEr92NkLpJO95UPqpR0ieFTzbDDSuWnFm2SlaVu0rdPOYvKp4RtYmNycmrVNXYRUM7ymXvh1w8Zleg==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@napi-rs/uuid-linux-arm-gnueabihf@0.2.2':\n    resolution: {integrity: sha512-lfzTqZwZNYJc1fYzP9ShkwtC57L9Ffrc8fmzh0YWSKL9QNaHT9xGnxL2BXeQihQ2o+U+oFi90JX000fN2yCQ4A==}\n    engines: {node: '>= 10'}\n    cpu: [arm]\n    os: [linux]\n\n  '@napi-rs/uuid-linux-arm64-gnu@0.2.2':\n    resolution: {integrity: sha512-8A44SmfNfbbtg8GlqemXwW+OcjJ0EDYxdO/p/85pKa95kZbqdtAR/uZF3AQIUztBKvOf1mlX3oCqJqjNWmOKLQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@napi-rs/uuid-linux-arm64-musl@0.2.2':\n    resolution: {integrity: sha512-RNuGOpfJ/MvEkUbvHxzkA8JkKZ4Qz2xrbGt7vre0fVlPAgxlNcp9XdhjoMuGV+t0tS3hw9dM6yinnd80kVhvMg==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@napi-rs/uuid-linux-x64-gnu@0.2.2':\n    resolution: {integrity: sha512-0/7FRAWNQmV2XwmBYV+LcWZ8rMqKNv0q7EtetNQJ1YE3ILLEYM18xKN3GBMBX7ywnSyfejfUUIJ9Gd9Gpm4U0g==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@napi-rs/uuid-linux-x64-musl@0.2.2':\n    resolution: {integrity: sha512-vvcwluZ085vh2ZR1CZpmyE2L4vPNVpwV4SsysJE0Pe05dui/1C1xWZ5IwXqWeh0GM1NVeEPtVxl+O5YUlNAlzw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@napi-rs/uuid-win32-arm64-msvc@0.2.2':\n    resolution: {integrity: sha512-VwK9xXz9Q408hfdx8oM3qPt65TAvYtkvUQnkmDVB9K/QSlxuNpNPJwbSFeP1/MBqI/eRle5E4DpjjCMVNoJ7Ng==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@napi-rs/uuid-win32-ia32-msvc@0.2.2':\n    resolution: {integrity: sha512-UPM9v32YCyOKLd3hHyIWQ5PRJpIUfWo0TmtG9lBEnyK+BI+9TgqOsYO0uxztD9+oVdbMI1CM2+D0gMs8dZNVKA==}\n    engines: {node: '>= 10'}\n    cpu: [ia32]\n    os: [win32]\n\n  '@napi-rs/uuid-win32-x64-msvc@0.2.2':\n    resolution: {integrity: sha512-sN6kcUBg32XL/+ovaerDAeOi83MvFgPQyE05NRdkqKvqS0SI0SnxsUZxAMACSdsfh/gd0kPPwK95YUipqgOi8w==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [win32]\n\n  '@napi-rs/uuid@0.2.2':\n    resolution: {integrity: sha512-1sqgzzQLzdSPmy/zNl1wxhtaUw0OwEeXP9h3V2X9xm+72M0R2suwrV1mRuoCrWxjg0Q7GEAZmKVXHi+BE2/ROA==}\n    engines: {node: '>= 10'}\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@originjs/vite-plugin-commonjs@1.0.3':\n    resolution: {integrity: sha512-KuEXeGPptM2lyxdIEJ4R11+5ztipHoE7hy8ClZt3PYaOVQ/pyngd2alaSrPnwyFeOW1UagRBaQ752aA1dTMdOQ==}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@rollup/rollup-android-arm-eabi@4.28.0':\n    resolution: {integrity: sha512-wLJuPLT6grGZsy34g4N1yRfYeouklTgPhH1gWXCYspenKYD0s3cR99ZevOGw5BexMNywkbV3UkjADisozBmpPQ==}\n    cpu: [arm]\n    os: [android]\n\n  '@rollup/rollup-android-arm64@4.28.0':\n    resolution: {integrity: sha512-eiNkznlo0dLmVG/6wf+Ifi/v78G4d4QxRhuUl+s8EWZpDewgk7PX3ZyECUXU0Zq/Ca+8nU8cQpNC4Xgn2gFNDA==}\n    cpu: [arm64]\n    os: [android]\n\n  '@rollup/rollup-darwin-arm64@4.28.0':\n    resolution: {integrity: sha512-lmKx9yHsppblnLQZOGxdO66gT77bvdBtr/0P+TPOseowE7D9AJoBw8ZDULRasXRWf1Z86/gcOdpBrV6VDUY36Q==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@rollup/rollup-darwin-x64@4.28.0':\n    resolution: {integrity: sha512-8hxgfReVs7k9Js1uAIhS6zq3I+wKQETInnWQtgzt8JfGx51R1N6DRVy3F4o0lQwumbErRz52YqwjfvuwRxGv1w==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@rollup/rollup-freebsd-arm64@4.28.0':\n    resolution: {integrity: sha512-lA1zZB3bFx5oxu9fYud4+g1mt+lYXCoch0M0V/xhqLoGatbzVse0wlSQ1UYOWKpuSu3gyN4qEc0Dxf/DII1bhQ==}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@rollup/rollup-freebsd-x64@4.28.0':\n    resolution: {integrity: sha512-aI2plavbUDjCQB/sRbeUZWX9qp12GfYkYSJOrdYTL/C5D53bsE2/nBPuoiJKoWp5SN78v2Vr8ZPnB+/VbQ2pFA==}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.28.0':\n    resolution: {integrity: sha512-WXveUPKtfqtaNvpf0iOb0M6xC64GzUX/OowbqfiCSXTdi/jLlOmH0Ba94/OkiY2yTGTwteo4/dsHRfh5bDCZ+w==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm-musleabihf@4.28.0':\n    resolution: {integrity: sha512-yLc3O2NtOQR67lI79zsSc7lk31xjwcaocvdD1twL64PK1yNaIqCeWI9L5B4MFPAVGEVjH5k1oWSGuYX1Wutxpg==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-gnu@4.28.0':\n    resolution: {integrity: sha512-+P9G9hjEpHucHRXqesY+3X9hD2wh0iNnJXX/QhS/J5vTdG6VhNYMxJ2rJkQOxRUd17u5mbMLHM7yWGZdAASfcg==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-musl@4.28.0':\n    resolution: {integrity: sha512-1xsm2rCKSTpKzi5/ypT5wfc+4bOGa/9yI/eaOLW0oMs7qpC542APWhl4A37AENGZ6St6GBMWhCCMM6tXgTIplw==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.28.0':\n    resolution: {integrity: sha512-zgWxMq8neVQeXL+ouSf6S7DoNeo6EPgi1eeqHXVKQxqPy1B2NvTbaOUWPn/7CfMKL7xvhV0/+fq/Z/J69g1WAQ==}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@rollup/rollup-linux-riscv64-gnu@4.28.0':\n    resolution: {integrity: sha512-VEdVYacLniRxbRJLNtzwGt5vwS0ycYshofI7cWAfj7Vg5asqj+pt+Q6x4n+AONSZW/kVm+5nklde0qs2EUwU2g==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@rollup/rollup-linux-s390x-gnu@4.28.0':\n    resolution: {integrity: sha512-LQlP5t2hcDJh8HV8RELD9/xlYtEzJkm/aWGsauvdO2ulfl3QYRjqrKW+mGAIWP5kdNCBheqqqYIGElSRCaXfpw==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-gnu@4.28.0':\n    resolution: {integrity: sha512-Nl4KIzteVEKE9BdAvYoTkW19pa7LR/RBrT6F1dJCV/3pbjwDcaOq+edkP0LXuJ9kflW/xOK414X78r+K84+msw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-musl@4.28.0':\n    resolution: {integrity: sha512-eKpJr4vBDOi4goT75MvW+0dXcNUqisK4jvibY9vDdlgLx+yekxSm55StsHbxUsRxSTt3JEQvlr3cGDkzcSP8bw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-win32-arm64-msvc@4.28.0':\n    resolution: {integrity: sha512-Vi+WR62xWGsE/Oj+mD0FNAPY2MEox3cfyG0zLpotZdehPFXwz6lypkGs5y38Jd/NVSbOD02aVad6q6QYF7i8Bg==}\n    cpu: [arm64]\n    os: [win32]\n\n  '@rollup/rollup-win32-ia32-msvc@4.28.0':\n    resolution: {integrity: sha512-kN/Vpip8emMLn/eOza+4JwqDZBL6MPNpkdaEsgUtW1NYN3DZvZqSQrbKzJcTL6hd8YNmFTn7XGWMwccOcJBL0A==}\n    cpu: [ia32]\n    os: [win32]\n\n  '@rollup/rollup-win32-x64-msvc@4.28.0':\n    resolution: {integrity: sha512-Bvno2/aZT6usSa7lRDL2+hMjVAGjuqaymF1ApZm31JXzniR/hvr14jpU+/z4X6Gt5BPlzosscyJZGUvguXIqeQ==}\n    cpu: [x64]\n    os: [win32]\n\n  '@rtsao/scc@1.1.0':\n    resolution: {integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==}\n\n  '@size-limit/file@11.1.6':\n    resolution: {integrity: sha512-ojzzJMrTfcSECRnaTjGy0wNIolTCRdyqZTSWG9sG5XEoXG6PNgHXDDS6gf6YNxnqb+rWfCfVe93u6aKi3wEocQ==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    peerDependencies:\n      size-limit: 11.1.6\n\n  '@size-limit/webpack@11.1.6':\n    resolution: {integrity: sha512-PTZCgwJsgdzdEj2wPFuLm0cCge8N2WbswMcKWNwMJibxQxPAmiF+sZ2F6GYBS7G7K3Fb4ovCliuN+wnnRACPNg==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    peerDependencies:\n      size-limit: 11.1.6\n\n  '@types/eslint-scope@3.7.7':\n    resolution: {integrity: sha512-MzMFlSLBqNF2gcHWO0G1vP/YQyfvrxZ0bF+u7mzUdZ1/xK4A4sru+nraZz5i3iEIk1l1uyicaDVTB4QbbEkAYg==}\n\n  '@types/eslint@9.6.1':\n    resolution: {integrity: sha512-FXx2pKgId/WyYo2jXw63kk7/+TY7u7AziEJxJAnSFzHlqTAS3Ync6SvgYAN/k4/PQpnnVuzoMuVnByKK2qp0ag==}\n\n  '@types/estree@1.0.6':\n    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}\n\n  '@types/istanbul-lib-coverage@2.0.6':\n    resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}\n\n  '@types/json-schema@7.0.15':\n    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}\n\n  '@types/json5@0.0.29':\n    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n\n  '@types/node@22.10.1':\n    resolution: {integrity: sha512-qKgsUwfHZV2WCWLAnVP1JqnpE6Im6h3Y0+fYgMTasNQ7V++CBX5OT1as0g0f+OyubbFqhf6XVNIsmN4IIhEgGQ==}\n\n  '@typescript-eslint/eslint-plugin@8.17.0':\n    resolution: {integrity: sha512-HU1KAdW3Tt8zQkdvNoIijfWDMvdSweFYm4hWh+KwhPstv+sCmWb89hCIP8msFm9N1R/ooh9honpSuvqKWlYy3w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      '@typescript-eslint/parser': ^8.0.0 || ^8.0.0-alpha.0\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/parser@8.17.0':\n    resolution: {integrity: sha512-Drp39TXuUlD49F7ilHHCG7TTg8IkA+hxCuULdmzWYICxGXvDXmDmWEjJYZQYgf6l/TFfYNE167m7isnc3xlIEg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/scope-manager@8.17.0':\n    resolution: {integrity: sha512-/ewp4XjvnxaREtqsZjF4Mfn078RD/9GmiEAtTeLQ7yFdKnqwTOgRMSvFz4et9U5RiJQ15WTGXPLj89zGusvxBg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/type-utils@8.17.0':\n    resolution: {integrity: sha512-q38llWJYPd63rRnJ6wY/ZQqIzPrBCkPdpIsaCfkR3Q4t3p6sb422zougfad4TFW9+ElIFLVDzWGiGAfbb/v2qw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/types@8.17.0':\n    resolution: {integrity: sha512-gY2TVzeve3z6crqh2Ic7Cr+CAv6pfb0Egee7J5UAVWCpVvDI/F71wNfolIim4FE6hT15EbpZFVUj9j5i38jYXA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/typescript-estree@8.17.0':\n    resolution: {integrity: sha512-JqkOopc1nRKZpX+opvKqnM3XUlM7LpFMD0lYxTqOTKQfCWAmxw45e3qlOCsEqEB2yuacujivudOFpCnqkBDNMw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/utils@8.17.0':\n    resolution: {integrity: sha512-bQC8BnEkxqG8HBGKwG9wXlZqg37RKSMY7v/X8VEWD8JG2JuTHuNK0VFvMPMUKQcbk6B+tf05k+4AShAEtCtJ/w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/visitor-keys@8.17.0':\n    resolution: {integrity: sha512-1Hm7THLpO6ww5QU6H/Qp+AusUUl+z/CAm3cNZZ0jQvon9yicgO7Rwd+/WWRpMKLYV6p2UvdbR27c86rzCPpreg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@webassemblyjs/ast@1.14.1':\n    resolution: {integrity: sha512-nuBEDgQfm1ccRp/8bCQrx1frohyufl4JlbMMZ4P1wpeOfDhF6FQkxZJ1b/e+PLwr6X1Nhw6OLme5usuBWYBvuQ==}\n\n  '@webassemblyjs/floating-point-hex-parser@1.13.2':\n    resolution: {integrity: sha512-6oXyTOzbKxGH4steLbLNOu71Oj+C8Lg34n6CqRvqfS2O71BxY6ByfMDRhBytzknj9yGUPVJ1qIKhRlAwO1AovA==}\n\n  '@webassemblyjs/helper-api-error@1.13.2':\n    resolution: {integrity: sha512-U56GMYxy4ZQCbDZd6JuvvNV/WFildOjsaWD3Tzzvmw/mas3cXzRJPMjP83JqEsgSbyrmaGjBfDtV7KDXV9UzFQ==}\n\n  '@webassemblyjs/helper-buffer@1.14.1':\n    resolution: {integrity: sha512-jyH7wtcHiKssDtFPRB+iQdxlDf96m0E39yb0k5uJVhFGleZFoNw1c4aeIcVUPPbXUVJ94wwnMOAqUHyzoEPVMA==}\n\n  '@webassemblyjs/helper-numbers@1.13.2':\n    resolution: {integrity: sha512-FE8aCmS5Q6eQYcV3gI35O4J789wlQA+7JrqTTpJqn5emA4U2hvwJmvFRC0HODS+3Ye6WioDklgd6scJ3+PLnEA==}\n\n  '@webassemblyjs/helper-wasm-bytecode@1.13.2':\n    resolution: {integrity: sha512-3QbLKy93F0EAIXLh0ogEVR6rOubA9AoZ+WRYhNbFyuB70j3dRdwH9g+qXhLAO0kiYGlg3TxDV+I4rQTr/YNXkA==}\n\n  '@webassemblyjs/helper-wasm-section@1.14.1':\n    resolution: {integrity: sha512-ds5mXEqTJ6oxRoqjhWDU83OgzAYjwsCV8Lo/N+oRsNDmx/ZDpqalmrtgOMkHwxsG0iI//3BwWAErYRHtgn0dZw==}\n\n  '@webassemblyjs/ieee754@1.13.2':\n    resolution: {integrity: sha512-4LtOzh58S/5lX4ITKxnAK2USuNEvpdVV9AlgGQb8rJDHaLeHciwG4zlGr0j/SNWlr7x3vO1lDEsuePvtcDNCkw==}\n\n  '@webassemblyjs/leb128@1.13.2':\n    resolution: {integrity: sha512-Lde1oNoIdzVzdkNEAWZ1dZ5orIbff80YPdHx20mrHwHrVNNTjNr8E3xz9BdpcGqRQbAEa+fkrCb+fRFTl/6sQw==}\n\n  '@webassemblyjs/utf8@1.13.2':\n    resolution: {integrity: sha512-3NQWGjKTASY1xV5m7Hr0iPeXD9+RDobLll3T9d2AO+g3my8xy5peVyjSag4I50mR1bBSN/Ct12lo+R9tJk0NZQ==}\n\n  '@webassemblyjs/wasm-edit@1.14.1':\n    resolution: {integrity: sha512-RNJUIQH/J8iA/1NzlE4N7KtyZNHi3w7at7hDjvRNm5rcUXa00z1vRz3glZoULfJ5mpvYhLybmVcwcjGrC1pRrQ==}\n\n  '@webassemblyjs/wasm-gen@1.14.1':\n    resolution: {integrity: sha512-AmomSIjP8ZbfGQhumkNvgC33AY7qtMCXnN6bL2u2Js4gVCg8fp735aEiMSBbDR7UQIj90n4wKAFUSEd0QN2Ukg==}\n\n  '@webassemblyjs/wasm-opt@1.14.1':\n    resolution: {integrity: sha512-PTcKLUNvBqnY2U6E5bdOQcSM+oVP/PmrDY9NzowJjislEjwP/C4an2303MCVS2Mg9d3AJpIGdUFIQQWbPds0Sw==}\n\n  '@webassemblyjs/wasm-parser@1.14.1':\n    resolution: {integrity: sha512-JLBl+KZ0R5qB7mCnud/yyX08jWFw5MsoalJ1pQ4EdFlgj9VdXKGuENGsiCIjegI1W7p91rUlcB/LB5yRJKNTcQ==}\n\n  '@webassemblyjs/wast-printer@1.14.1':\n    resolution: {integrity: sha512-kPSSXE6De1XOR820C90RIo2ogvZG+c3KiHzqUoO/F34Y2shGzesfqv7o57xrxovZJH/MetF5UjroJ/R/3isoiw==}\n\n  '@xtuc/ieee754@1.2.0':\n    resolution: {integrity: sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==}\n\n  '@xtuc/long@4.2.2':\n    resolution: {integrity: sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==}\n\n  acorn-jsx@5.3.2:\n    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}\n    peerDependencies:\n      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0\n\n  acorn@8.14.0:\n    resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  ajv-keywords@3.5.2:\n    resolution: {integrity: sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==}\n    peerDependencies:\n      ajv: ^6.9.1\n\n  ajv@6.12.6:\n    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.1.0:\n    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  argparse@2.0.1:\n    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}\n\n  array-buffer-byte-length@1.0.1:\n    resolution: {integrity: sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==}\n    engines: {node: '>= 0.4'}\n\n  array-includes@3.1.8:\n    resolution: {integrity: sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.findlastindex@1.2.5:\n    resolution: {integrity: sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flat@1.3.2:\n    resolution: {integrity: sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flatmap@1.3.2:\n    resolution: {integrity: sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==}\n    engines: {node: '>= 0.4'}\n\n  arraybuffer.prototype.slice@1.0.3:\n    resolution: {integrity: sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==}\n    engines: {node: '>= 0.4'}\n\n  available-typed-arrays@1.0.7:\n    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}\n    engines: {node: '>= 0.4'}\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  better-node-test@0.7.1:\n    resolution: {integrity: sha512-reijKcA8jO9qlmnYMu2EerjYgltEiatqa5V5+gxY71FHKZPZduJv4Mc0xMj1l9E4kiuCAM6SBS/IPdKksWtcrw==}\n    engines: {node: ^18.19.0 || ^20.0.0 || >=22.0.0}\n    hasBin: true\n\n  brace-expansion@1.1.11:\n    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n\n  brace-expansion@2.0.1:\n    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  browserslist@4.24.2:\n    resolution: {integrity: sha512-ZIc+Q62revdMcqC6aChtW4jz3My3klmCO1fEmINZY/8J3EpBg5/A/D0AKmBveUh6pgoeycoMkVMko84tuYS+Gg==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  buffer-from@1.1.2:\n    resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}\n\n  bytes-iec@3.1.1:\n    resolution: {integrity: sha512-fey6+4jDK7TFtFg/klGSvNKJctyU7n2aQdnM+CO0ruLPbqqMOM8Tio0Pc+deqUeVKX1tL5DQep1zQ7+37aTAsA==}\n    engines: {node: '>= 0.8'}\n\n  c8@10.1.2:\n    resolution: {integrity: sha512-Qr6rj76eSshu5CgRYvktW0uM0CFY0yi4Fd5D0duDXO6sYinyopmftUiJVuzBQxQcwQLor7JWDVRP+dUfCmzgJw==}\n    engines: {node: '>=18'}\n    hasBin: true\n    peerDependencies:\n      monocart-coverage-reports: ^2\n    peerDependenciesMeta:\n      monocart-coverage-reports:\n        optional: true\n\n  call-bind@1.0.7:\n    resolution: {integrity: sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==}\n    engines: {node: '>= 0.4'}\n\n  callsites@3.1.0:\n    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}\n    engines: {node: '>=6'}\n\n  caniuse-lite@1.0.30001686:\n    resolution: {integrity: sha512-Y7deg0Aergpa24M3qLC5xjNklnKnhsmSyR/V89dLZ1n0ucJIFNs7PgR2Yfa/Zf6W79SbBicgtGxZr2juHkEUIA==}\n\n  chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n\n  chokidar@4.0.1:\n    resolution: {integrity: sha512-n8enUVCED/KVRQlab1hr3MVpcVMvxtZjmEa956u+4YijlmQED223XMSYj2tLuKvr4jcCTzNNMpQDUer72MMmzA==}\n    engines: {node: '>= 14.16.0'}\n\n  chrome-trace-event@1.0.4:\n    resolution: {integrity: sha512-rNjApaLzuwaOTjCiT8lSDdGN1APCiqkChLMJxJPWLunPAt5fy8xgU9/jNOchV84wfIxrA0lRQB7oCT8jrn/wrQ==}\n    engines: {node: '>=6.0'}\n\n  clean-publish@5.1.0:\n    resolution: {integrity: sha512-Gbz8x7sL/sn0j+2B+yYEumD17WmPT6pHLN+A5nhcd0Sdh86EYblQleU+dUIICXVFalFMFBdW2aGynrVJ6k1u4Q==}\n    engines: {node: '>= 18.0.0'}\n    hasBin: true\n\n  cliui@8.0.1:\n    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}\n    engines: {node: '>=12'}\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  commander@2.20.3:\n    resolution: {integrity: sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==}\n\n  concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n\n  convert-source-map@2.0.0:\n    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  data-view-buffer@1.0.1:\n    resolution: {integrity: sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-length@1.0.1:\n    resolution: {integrity: sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-offset@1.0.0:\n    resolution: {integrity: sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==}\n    engines: {node: '>= 0.4'}\n\n  debug@3.2.7:\n    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.3.7:\n    resolution: {integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  deep-is@0.1.4:\n    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n\n  define-data-property@1.1.4:\n    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}\n    engines: {node: '>= 0.4'}\n\n  define-properties@1.2.1:\n    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}\n    engines: {node: '>= 0.4'}\n\n  doctrine@2.1.0:\n    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}\n    engines: {node: '>=0.10.0'}\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  electron-to-chromium@1.5.70:\n    resolution: {integrity: sha512-P6FPqAWIZrC3sHDAwBitJBs7N7IF58m39XVny7DFseQXK2eiMn7nNQizFf63mWDDUnFvaqsM8FI0+ZZfLkdUGA==}\n\n  emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  enhanced-resolve@5.17.1:\n    resolution: {integrity: sha512-LMHl3dXhTcfv8gM4kEzIUeTQ+7fpdA0l2tUf34BddXPkz2A5xJ5L/Pchd5BL6rdccM9QGvu0sWZzK1Z1t4wwyg==}\n    engines: {node: '>=10.13.0'}\n\n  es-abstract@1.23.5:\n    resolution: {integrity: sha512-vlmniQ0WNPwXqA0BnmwV3Ng7HxiGlh6r5U6JcTMNx8OilcAGqVJBHJcPjqOMaczU9fRuRK5Px2BdVyPRnKMMVQ==}\n    engines: {node: '>= 0.4'}\n\n  es-define-property@1.0.0:\n    resolution: {integrity: sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==}\n    engines: {node: '>= 0.4'}\n\n  es-errors@1.3.0:\n    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}\n    engines: {node: '>= 0.4'}\n\n  es-module-lexer@1.5.4:\n    resolution: {integrity: sha512-MVNK56NiMrOwitFB7cqDwq0CQutbw+0BvLshJSse0MUNU+y1FC3bUS/AQg7oUng+/wKrrki7JfmwtVHkVfPLlw==}\n\n  es-object-atoms@1.0.0:\n    resolution: {integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==}\n    engines: {node: '>= 0.4'}\n\n  es-set-tostringtag@2.0.3:\n    resolution: {integrity: sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==}\n    engines: {node: '>= 0.4'}\n\n  es-shim-unscopables@1.0.2:\n    resolution: {integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==}\n\n  es-to-primitive@1.3.0:\n    resolution: {integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==}\n    engines: {node: '>= 0.4'}\n\n  esbuild-android-64@0.14.54:\n    resolution: {integrity: sha512-Tz2++Aqqz0rJ7kYBfz+iqyE3QMycD4vk7LBRyWaAVFgFtQ/O8EJOnVmTOiDWYZ/uYzB4kvP+bqejYdVKzE5lAQ==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [android]\n\n  esbuild-android-arm64@0.14.54:\n    resolution: {integrity: sha512-F9E+/QDi9sSkLaClO8SOV6etqPd+5DgJje1F9lOWoNncDdOBL2YF59IhsWATSt0TLZbYCf3pNlTHvVV5VfHdvg==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [android]\n\n  esbuild-darwin-64@0.14.54:\n    resolution: {integrity: sha512-jtdKWV3nBviOd5v4hOpkVmpxsBy90CGzebpbO9beiqUYVMBtSc0AL9zGftFuBon7PNDcdvNCEuQqw2x0wP9yug==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [darwin]\n\n  esbuild-darwin-arm64@0.14.54:\n    resolution: {integrity: sha512-OPafJHD2oUPyvJMrsCvDGkRrVCar5aVyHfWGQzY1dWnzErjrDuSETxwA2HSsyg2jORLY8yBfzc1MIpUkXlctmw==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [darwin]\n\n  esbuild-freebsd-64@0.14.54:\n    resolution: {integrity: sha512-OKwd4gmwHqOTp4mOGZKe/XUlbDJ4Q9TjX0hMPIDBUWWu/kwhBAudJdBoxnjNf9ocIB6GN6CPowYpR/hRCbSYAg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [freebsd]\n\n  esbuild-freebsd-arm64@0.14.54:\n    resolution: {integrity: sha512-sFwueGr7OvIFiQT6WeG0jRLjkjdqWWSrfbVwZp8iMP+8UHEHRBvlaxL6IuKNDwAozNUmbb8nIMXa7oAOARGs1Q==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [freebsd]\n\n  esbuild-linux-32@0.14.54:\n    resolution: {integrity: sha512-1ZuY+JDI//WmklKlBgJnglpUL1owm2OX+8E1syCD6UAxcMM/XoWd76OHSjl/0MR0LisSAXDqgjT3uJqT67O3qw==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [linux]\n\n  esbuild-linux-64@0.14.54:\n    resolution: {integrity: sha512-EgjAgH5HwTbtNsTqQOXWApBaPVdDn7XcK+/PtJwZLT1UmpLoznPd8c5CxqsH2dQK3j05YsB3L17T8vE7cp4cCg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [linux]\n\n  esbuild-linux-arm64@0.14.54:\n    resolution: {integrity: sha512-WL71L+0Rwv+Gv/HTmxTEmpv0UgmxYa5ftZILVi2QmZBgX3q7+tDeOQNqGtdXSdsL8TQi1vIaVFHUPDe0O0kdig==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [linux]\n\n  esbuild-linux-arm@0.14.54:\n    resolution: {integrity: sha512-qqz/SjemQhVMTnvcLGoLOdFpCYbz4v4fUo+TfsWG+1aOu70/80RV6bgNpR2JCrppV2moUQkww+6bWxXRL9YMGw==}\n    engines: {node: '>=12'}\n    cpu: [arm]\n    os: [linux]\n\n  esbuild-linux-mips64le@0.14.54:\n    resolution: {integrity: sha512-qTHGQB8D1etd0u1+sB6p0ikLKRVuCWhYQhAHRPkO+OF3I/iSlTKNNS0Lh2Oc0g0UFGguaFZZiPJdJey3AGpAlw==}\n    engines: {node: '>=12'}\n    cpu: [mips64el]\n    os: [linux]\n\n  esbuild-linux-ppc64le@0.14.54:\n    resolution: {integrity: sha512-j3OMlzHiqwZBDPRCDFKcx595XVfOfOnv68Ax3U4UKZ3MTYQB5Yz3X1mn5GnodEVYzhtZgxEBidLWeIs8FDSfrQ==}\n    engines: {node: '>=12'}\n    cpu: [ppc64]\n    os: [linux]\n\n  esbuild-linux-riscv64@0.14.54:\n    resolution: {integrity: sha512-y7Vt7Wl9dkOGZjxQZnDAqqn+XOqFD7IMWiewY5SPlNlzMX39ocPQlOaoxvT4FllA5viyV26/QzHtvTjVNOxHZg==}\n    engines: {node: '>=12'}\n    cpu: [riscv64]\n    os: [linux]\n\n  esbuild-linux-s390x@0.14.54:\n    resolution: {integrity: sha512-zaHpW9dziAsi7lRcyV4r8dhfG1qBidQWUXweUjnw+lliChJqQr+6XD71K41oEIC3Mx1KStovEmlzm+MkGZHnHA==}\n    engines: {node: '>=12'}\n    cpu: [s390x]\n    os: [linux]\n\n  esbuild-netbsd-64@0.14.54:\n    resolution: {integrity: sha512-PR01lmIMnfJTgeU9VJTDY9ZerDWVFIUzAtJuDHwwceppW7cQWjBBqP48NdeRtoP04/AtO9a7w3viI+PIDr6d+w==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [netbsd]\n\n  esbuild-openbsd-64@0.14.54:\n    resolution: {integrity: sha512-Qyk7ikT2o7Wu76UsvvDS5q0amJvmRzDyVlL0qf5VLsLchjCa1+IAvd8kTBgUxD7VBUUVgItLkk609ZHUc1oCaw==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [openbsd]\n\n  esbuild-sunos-64@0.14.54:\n    resolution: {integrity: sha512-28GZ24KmMSeKi5ueWzMcco6EBHStL3B6ubM7M51RmPwXQGLe0teBGJocmWhgwccA1GeFXqxzILIxXpHbl9Q/Kw==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [sunos]\n\n  esbuild-windows-32@0.14.54:\n    resolution: {integrity: sha512-T+rdZW19ql9MjS7pixmZYVObd9G7kcaZo+sETqNH4RCkuuYSuv9AGHUVnPoP9hhuE1WM1ZimHz1CIBHBboLU7w==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [win32]\n\n  esbuild-windows-64@0.14.54:\n    resolution: {integrity: sha512-AoHTRBUuYwXtZhjXZbA1pGfTo8cJo3vZIcWGLiUcTNgHpJJMC1rVA44ZereBHMJtotyN71S8Qw0npiCIkW96cQ==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [win32]\n\n  esbuild-windows-arm64@0.14.54:\n    resolution: {integrity: sha512-M0kuUvXhot1zOISQGXwWn6YtS+Y/1RT9WrVIOywZnJHo3jCDyewAc79aKNQWFCQm+xNHVTq9h8dZKvygoXQQRg==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [win32]\n\n  esbuild@0.14.54:\n    resolution: {integrity: sha512-Cy9llcy8DvET5uznocPyqL3BFRrFXSVqbgpMJ9Wz8oVjZlh/zUSNbPRbov0VX7VxN2JH1Oa0uNxZ7eLRb62pJA==}\n    engines: {node: '>=12'}\n    hasBin: true\n\n  esbuild@0.24.0:\n    resolution: {integrity: sha512-FuLPevChGDshgSicjisSooU0cemp/sGXR841D5LHMB7mTVOmsEHcAxaH3irL53+8YDIeVNQEySh4DaYU/iuPqQ==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  escalade@3.2.0:\n    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}\n    engines: {node: '>=6'}\n\n  escape-string-regexp@4.0.0:\n    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}\n    engines: {node: '>=10'}\n\n  eslint-compat-utils@0.5.1:\n    resolution: {integrity: sha512-3z3vFexKIEnjHE3zCMRo6fn/e44U7T1khUjg+Hp0ZQMCigh28rALD0nPFBcGZuiLC5rLZa2ubQHDRln09JfU2Q==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      eslint: '>=6.0.0'\n\n  eslint-config-standard@17.1.0:\n    resolution: {integrity: sha512-IwHwmaBNtDK4zDHQukFDW5u/aTb8+meQWZvNFWkiGmbWjD6bqyuSSBxxXKkCftCUzc1zwCH2m/baCNDLGmuO5Q==}\n    engines: {node: '>=12.0.0'}\n    peerDependencies:\n      eslint: ^8.0.1\n      eslint-plugin-import: ^2.25.2\n      eslint-plugin-n: '^15.0.0 || ^16.0.0 '\n      eslint-plugin-promise: ^6.0.0\n\n  eslint-import-resolver-node@0.3.9:\n    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}\n\n  eslint-module-utils@2.12.0:\n    resolution: {integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      '@typescript-eslint/parser': '*'\n      eslint: '*'\n      eslint-import-resolver-node: '*'\n      eslint-import-resolver-typescript: '*'\n      eslint-import-resolver-webpack: '*'\n    peerDependenciesMeta:\n      '@typescript-eslint/parser':\n        optional: true\n      eslint:\n        optional: true\n      eslint-import-resolver-node:\n        optional: true\n      eslint-import-resolver-typescript:\n        optional: true\n      eslint-import-resolver-webpack:\n        optional: true\n\n  eslint-plugin-es-x@7.8.0:\n    resolution: {integrity: sha512-7Ds8+wAAoV3T+LAKeu39Y5BzXCrGKrcISfgKEqTS4BDN8SFEDQd0S43jiQ8vIa3wUKD07qitZdfzlenSi8/0qQ==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n    peerDependencies:\n      eslint: '>=8'\n\n  eslint-plugin-import@2.31.0:\n    resolution: {integrity: sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      '@typescript-eslint/parser': '*'\n      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9\n    peerDependenciesMeta:\n      '@typescript-eslint/parser':\n        optional: true\n\n  eslint-plugin-n@17.14.0:\n    resolution: {integrity: sha512-maxPLMEA0rPmRpoOlxEclKng4UpDe+N5BJS4t24I3UKnN109Qcivnfs37KMy84G0af3bxjog5lKctP5ObsvcTA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: '>=8.23.0'\n\n  eslint-plugin-perfectionist@3.9.1:\n    resolution: {integrity: sha512-9WRzf6XaAxF4Oi5t/3TqKP5zUjERhasHmLFHin2Yw6ZAp/EP/EVA2dr3BhQrrHWCm5SzTMZf0FcjDnBkO2xFkA==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    peerDependencies:\n      astro-eslint-parser: ^1.0.2\n      eslint: '>=8.0.0'\n      svelte: '>=3.0.0'\n      svelte-eslint-parser: ^0.41.1\n      vue-eslint-parser: '>=9.0.0'\n    peerDependenciesMeta:\n      astro-eslint-parser:\n        optional: true\n      svelte:\n        optional: true\n      svelte-eslint-parser:\n        optional: true\n      vue-eslint-parser:\n        optional: true\n\n  eslint-plugin-prefer-let@4.0.0:\n    resolution: {integrity: sha512-X4ep5PMO1320HKaNC9DM5+p6XvOhwv+RcqGjhv3aiw9iAtHhiFtdIUB5l0Zya0iM22ys2BGKzrNI9Xpw/ZHooQ==}\n    engines: {node: '>=0.10.0'}\n\n  eslint-plugin-promise@7.2.1:\n    resolution: {integrity: sha512-SWKjd+EuvWkYaS+uN2csvj0KoP43YTu7+phKQ5v+xw6+A0gutVX2yqCeCkC3uLCJFiPfR2dD8Es5L7yUsmvEaA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^7.0.0 || ^8.0.0 || ^9.0.0\n\n  eslint-scope@5.1.1:\n    resolution: {integrity: sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==}\n    engines: {node: '>=8.0.0'}\n\n  eslint-scope@8.2.0:\n    resolution: {integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint-visitor-keys@3.4.3:\n    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n\n  eslint-visitor-keys@4.2.0:\n    resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint@9.16.0:\n    resolution: {integrity: sha512-whp8mSQI4C8VXd+fLgSM0lh3UlmcFtVwUQjyKCFfsp+2ItAIYhlq/hqGahGqHE6cv9unM41VlqKk2VtKYR2TaA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    hasBin: true\n    peerDependencies:\n      jiti: '*'\n    peerDependenciesMeta:\n      jiti:\n        optional: true\n\n  espree@10.3.0:\n    resolution: {integrity: sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  esquery@1.6.0:\n    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}\n    engines: {node: '>=0.10'}\n\n  esrecurse@4.3.0:\n    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}\n    engines: {node: '>=4.0'}\n\n  estraverse@4.3.0:\n    resolution: {integrity: sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==}\n    engines: {node: '>=4.0'}\n\n  estraverse@5.3.0:\n    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}\n    engines: {node: '>=4.0'}\n\n  esutils@2.0.3:\n    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}\n    engines: {node: '>=0.10.0'}\n\n  events@3.3.0:\n    resolution: {integrity: sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==}\n    engines: {node: '>=0.8.x'}\n\n  fast-deep-equal@3.1.3:\n    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}\n\n  fast-glob@3.3.2:\n    resolution: {integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==}\n    engines: {node: '>=8.6.0'}\n\n  fast-json-stable-stringify@2.1.0:\n    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}\n\n  fast-levenshtein@2.0.6:\n    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}\n\n  fastq@1.17.1:\n    resolution: {integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==}\n\n  fdir@6.4.2:\n    resolution: {integrity: sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==}\n    peerDependencies:\n      picomatch: ^3 || ^4\n    peerDependenciesMeta:\n      picomatch:\n        optional: true\n\n  file-entry-cache@8.0.0:\n    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}\n    engines: {node: '>=16.0.0'}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  find-up@5.0.0:\n    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}\n    engines: {node: '>=10'}\n\n  flat-cache@4.0.1:\n    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}\n    engines: {node: '>=16'}\n\n  flatted@3.3.2:\n    resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}\n\n  for-each@0.3.3:\n    resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}\n\n  foreground-child@3.3.0:\n    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}\n    engines: {node: '>=14'}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  function.prototype.name@1.1.6:\n    resolution: {integrity: sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==}\n    engines: {node: '>= 0.4'}\n\n  functions-have-names@1.2.3:\n    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}\n\n  gensync@1.0.0-beta.2:\n    resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}\n    engines: {node: '>=6.9.0'}\n\n  get-caller-file@2.0.5:\n    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}\n    engines: {node: 6.* || 8.* || >= 10.*}\n\n  get-intrinsic@1.2.4:\n    resolution: {integrity: sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==}\n    engines: {node: '>= 0.4'}\n\n  get-symbol-description@1.0.2:\n    resolution: {integrity: sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==}\n    engines: {node: '>= 0.4'}\n\n  get-tsconfig@4.8.1:\n    resolution: {integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  glob-to-regexp@0.4.1:\n    resolution: {integrity: sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==}\n\n  glob@10.4.5:\n    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n    hasBin: true\n\n  globals@11.12.0:\n    resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}\n    engines: {node: '>=4'}\n\n  globals@14.0.0:\n    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}\n    engines: {node: '>=18'}\n\n  globals@15.13.0:\n    resolution: {integrity: sha512-49TewVEz0UxZjr1WYYsWpPrhyC/B/pA8Bq0fUmet2n+eR7yn0IvNzNaoBwnK6mdkzcN+se7Ez9zUgULTz2QH4g==}\n    engines: {node: '>=18'}\n\n  globalthis@1.0.4:\n    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}\n    engines: {node: '>= 0.4'}\n\n  gopd@1.2.0:\n    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}\n    engines: {node: '>= 0.4'}\n\n  graceful-fs@4.2.11:\n    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}\n\n  graphemer@1.4.0:\n    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}\n\n  has-bigints@1.0.2:\n    resolution: {integrity: sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==}\n\n  has-flag@4.0.0:\n    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}\n    engines: {node: '>=8'}\n\n  has-property-descriptors@1.0.2:\n    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}\n\n  has-proto@1.1.0:\n    resolution: {integrity: sha512-QLdzI9IIO1Jg7f9GT1gXpPpXArAn6cS31R1eEZqz08Gc+uQ8/XiqHWt17Fiw+2p6oTTIq5GXEpQkAlA88YRl/Q==}\n    engines: {node: '>= 0.4'}\n\n  has-symbols@1.1.0:\n    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}\n    engines: {node: '>= 0.4'}\n\n  has-tostringtag@1.0.2:\n    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}\n    engines: {node: '>= 0.4'}\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  html-escaper@2.0.2:\n    resolution: {integrity: sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==}\n\n  ignore@5.3.2:\n    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}\n    engines: {node: '>= 4'}\n\n  import-fresh@3.3.0:\n    resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}\n    engines: {node: '>=6'}\n\n  imurmurhash@0.1.4:\n    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}\n    engines: {node: '>=0.8.19'}\n\n  internal-slot@1.0.7:\n    resolution: {integrity: sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==}\n    engines: {node: '>= 0.4'}\n\n  is-array-buffer@3.0.4:\n    resolution: {integrity: sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==}\n    engines: {node: '>= 0.4'}\n\n  is-async-function@2.0.0:\n    resolution: {integrity: sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==}\n    engines: {node: '>= 0.4'}\n\n  is-bigint@1.1.0:\n    resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}\n    engines: {node: '>= 0.4'}\n\n  is-boolean-object@1.2.0:\n    resolution: {integrity: sha512-kR5g0+dXf/+kXnqI+lu0URKYPKgICtHGGNCDSB10AaUFj3o/HkB3u7WfpRBJGFopxxY0oH3ux7ZsDjLtK7xqvw==}\n    engines: {node: '>= 0.4'}\n\n  is-callable@1.2.7:\n    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}\n    engines: {node: '>= 0.4'}\n\n  is-core-module@2.15.1:\n    resolution: {integrity: sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==}\n    engines: {node: '>= 0.4'}\n\n  is-data-view@1.0.1:\n    resolution: {integrity: sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==}\n    engines: {node: '>= 0.4'}\n\n  is-date-object@1.0.5:\n    resolution: {integrity: sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==}\n    engines: {node: '>= 0.4'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-finalizationregistry@1.1.0:\n    resolution: {integrity: sha512-qfMdqbAQEwBw78ZyReKnlA8ezmPdb9BemzIIip/JkjaZUhitfXDkkr+3QTboW0JrSXT1QWyYShpvnNHGZ4c4yA==}\n    engines: {node: '>= 0.4'}\n\n  is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  is-generator-function@1.0.10:\n    resolution: {integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==}\n    engines: {node: '>= 0.4'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-map@2.0.3:\n    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}\n    engines: {node: '>= 0.4'}\n\n  is-negative-zero@2.0.3:\n    resolution: {integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==}\n    engines: {node: '>= 0.4'}\n\n  is-number-object@1.1.0:\n    resolution: {integrity: sha512-KVSZV0Dunv9DTPkhXwcZ3Q+tUc9TsaE1ZwX5J2WMvsSGS6Md8TFPun5uwh0yRdrNerI6vf/tbJxqSx4c1ZI1Lw==}\n    engines: {node: '>= 0.4'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  is-regex@1.2.0:\n    resolution: {integrity: sha512-B6ohK4ZmoftlUe+uvenXSbPJFo6U37BH7oO1B3nQH8f/7h27N56s85MhUtbFJAziz5dcmuR3i8ovUl35zp8pFA==}\n    engines: {node: '>= 0.4'}\n\n  is-set@2.0.3:\n    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}\n    engines: {node: '>= 0.4'}\n\n  is-shared-array-buffer@1.0.3:\n    resolution: {integrity: sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==}\n    engines: {node: '>= 0.4'}\n\n  is-string@1.1.0:\n    resolution: {integrity: sha512-PlfzajuF9vSo5wErv3MJAKD/nqf9ngAs1NFQYm16nUYFO2IzxJ2hcm+IOCg+EEopdykNNUhVq5cz35cAUxU8+g==}\n    engines: {node: '>= 0.4'}\n\n  is-symbol@1.1.0:\n    resolution: {integrity: sha512-qS8KkNNXUZ/I+nX6QT8ZS1/Yx0A444yhzdTKxCzKkNjQ9sHErBxJnJAgh+f5YhusYECEcjo4XcyH87hn6+ks0A==}\n    engines: {node: '>= 0.4'}\n\n  is-typed-array@1.1.13:\n    resolution: {integrity: sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==}\n    engines: {node: '>= 0.4'}\n\n  is-weakmap@2.0.2:\n    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}\n    engines: {node: '>= 0.4'}\n\n  is-weakref@1.0.2:\n    resolution: {integrity: sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==}\n\n  is-weakset@2.0.3:\n    resolution: {integrity: sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==}\n    engines: {node: '>= 0.4'}\n\n  isarray@2.0.5:\n    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  istanbul-lib-coverage@3.2.2:\n    resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}\n    engines: {node: '>=8'}\n\n  istanbul-lib-report@3.0.1:\n    resolution: {integrity: sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==}\n    engines: {node: '>=10'}\n\n  istanbul-reports@3.1.7:\n    resolution: {integrity: sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==}\n    engines: {node: '>=8'}\n\n  jackspeak@3.4.3:\n    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}\n\n  jest-worker@27.5.1:\n    resolution: {integrity: sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==}\n    engines: {node: '>= 10.13.0'}\n\n  jiti@2.4.1:\n    resolution: {integrity: sha512-yPBThwecp1wS9DmoA4x4KR2h3QoslacnDR8ypuFM962kI4/456Iy1oHx2RAgh4jfZNdn0bctsdadceiBUgpU1g==}\n    hasBin: true\n\n  js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n\n  js-yaml@4.1.0:\n    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}\n    hasBin: true\n\n  jsesc@3.0.2:\n    resolution: {integrity: sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  json-buffer@3.0.1:\n    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}\n\n  json-parse-even-better-errors@2.3.1:\n    resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}\n\n  json-schema-traverse@0.4.1:\n    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}\n\n  json-stable-stringify-without-jsonify@1.0.1:\n    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}\n\n  json5@1.0.2:\n    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}\n    hasBin: true\n\n  json5@2.2.3:\n    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  keyv@4.5.4:\n    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}\n\n  levn@0.4.1:\n    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}\n    engines: {node: '>= 0.8.0'}\n\n  lilconfig@3.1.3:\n    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}\n    engines: {node: '>=14'}\n\n  loader-runner@4.3.0:\n    resolution: {integrity: sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==}\n    engines: {node: '>=6.11.5'}\n\n  locate-path@6.0.0:\n    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}\n    engines: {node: '>=10'}\n\n  lodash.merge@4.6.2:\n    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}\n\n  lru-cache@10.4.3:\n    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}\n\n  lru-cache@5.1.1:\n    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}\n\n  make-dir@4.0.0:\n    resolution: {integrity: sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==}\n    engines: {node: '>=10'}\n\n  merge-stream@2.0.0:\n    resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  mime-db@1.52.0:\n    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}\n    engines: {node: '>= 0.6'}\n\n  mime-types@2.1.35:\n    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}\n    engines: {node: '>= 0.6'}\n\n  minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minimist@1.2.8:\n    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}\n\n  minipass@7.1.2:\n    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  nanoid@2.1.11:\n    resolution: {integrity: sha512-s/snB+WGm6uwi0WjsZdaVcuf3KJXlfGl2LcxgwkEwJF0D/BWzVWAZW/XY4bFaiR7s0Jk3FPvlnepg1H1b1UwlA==}\n\n  nanoid@3.3.8:\n    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  nanoid@5.0.9:\n    resolution: {integrity: sha512-Aooyr6MXU6HpvvWXKoVoXwKMs/KyVakWwg7xQfv5/S/RIgJMy0Ifa45H9qqYy7pTCszrHzP21Uk4PZq2HpEM8Q==}\n    engines: {node: ^18 || >=20}\n    hasBin: true\n\n  nanospinner@1.2.0:\n    resolution: {integrity: sha512-dGxYcEj8YhuxjVO3PYmnj1nBhtwUkvuwYbLl/MduBPmQUPy3xBtG/ScJgqZgntQkX44UQaCSlFeW4rS5fUR/Sw==}\n\n  natural-compare-lite@1.4.0:\n    resolution: {integrity: sha512-Tj+HTDSJJKaZnfiuw+iaF9skdPpTo2GtEly5JHnWV/hfv2Qj/9RKsGISQtLh2ox3l5EAGw487hnBee0sIJ6v2g==}\n\n  natural-compare@1.4.0:\n    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n\n  neo-async@2.6.2:\n    resolution: {integrity: sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==}\n\n  node-releases@2.0.18:\n    resolution: {integrity: sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==}\n\n  object-inspect@1.13.3:\n    resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}\n    engines: {node: '>= 0.4'}\n\n  object-keys@1.1.1:\n    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}\n    engines: {node: '>= 0.4'}\n\n  object.assign@4.1.5:\n    resolution: {integrity: sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==}\n    engines: {node: '>= 0.4'}\n\n  object.fromentries@2.0.8:\n    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}\n    engines: {node: '>= 0.4'}\n\n  object.groupby@1.0.3:\n    resolution: {integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==}\n    engines: {node: '>= 0.4'}\n\n  object.values@1.2.0:\n    resolution: {integrity: sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==}\n    engines: {node: '>= 0.4'}\n\n  optionator@0.9.4:\n    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}\n    engines: {node: '>= 0.8.0'}\n\n  p-limit@3.1.0:\n    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}\n    engines: {node: '>=10'}\n\n  p-locate@5.0.0:\n    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}\n    engines: {node: '>=10'}\n\n  package-json-from-dist@1.0.1:\n    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}\n\n  parent-module@1.0.1:\n    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}\n    engines: {node: '>=6'}\n\n  path-exists@4.0.0:\n    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}\n    engines: {node: '>=8'}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  path-scurry@1.11.1:\n    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n    engines: {node: '>=16 || 14 >=14.18'}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  picomatch@4.0.2:\n    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}\n    engines: {node: '>=12'}\n\n  possible-typed-array-names@1.0.0:\n    resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}\n    engines: {node: '>= 0.4'}\n\n  postcss@8.4.49:\n    resolution: {integrity: sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  prelude-ls@1.2.1:\n    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n    engines: {node: '>= 0.8.0'}\n\n  punycode@2.3.1:\n    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}\n    engines: {node: '>=6'}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  random-bytes@1.0.0:\n    resolution: {integrity: sha512-iv7LhNVO047HzYR3InF6pUcUsPQiHTM1Qal51DcGSuZFBil1aBBWG5eHPNek7bvILMaYJ/8RU1e8w1AMdHmLQQ==}\n    engines: {node: '>= 0.8'}\n\n  randombytes@2.1.0:\n    resolution: {integrity: sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==}\n\n  readdirp@4.0.2:\n    resolution: {integrity: sha512-yDMz9g+VaZkqBYS/ozoBJwaBhTbZo3UNYQHNRw1D3UFQB8oHB4uS/tAODO+ZLjGWmUbKnIlOWO+aaIiAxrUWHA==}\n    engines: {node: '>= 14.16.0'}\n\n  reflect.getprototypeof@1.0.7:\n    resolution: {integrity: sha512-bMvFGIUKlc/eSfXNX+aZ+EL95/EgZzuwA0OBPTbZZDEJw/0AkentjMuM1oiRfwHrshqk4RzdgiTg5CcDalXN5g==}\n    engines: {node: '>= 0.4'}\n\n  regexp.prototype.flags@1.5.3:\n    resolution: {integrity: sha512-vqlC04+RQoFalODCbCumG2xIOvapzVMHwsyIGM/SIE8fRhFFsXeH8/QQ+s0T0kDAhKc4k30s73/0ydkHQz6HlQ==}\n    engines: {node: '>= 0.4'}\n\n  require-directory@2.1.1:\n    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}\n    engines: {node: '>=0.10.0'}\n\n  requireindex@1.2.0:\n    resolution: {integrity: sha512-L9jEkOi3ASd9PYit2cwRfyppc9NoABujTP8/5gFcbERmo5jUoAKovIC3fsF17pkTnGsrByysqX+Kxd2OTNI1ww==}\n    engines: {node: '>=0.10.5'}\n\n  resolve-from@4.0.0:\n    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}\n    engines: {node: '>=4'}\n\n  resolve-pkg-maps@1.0.0:\n    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}\n\n  resolve@1.22.8:\n    resolution: {integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==}\n    hasBin: true\n\n  reusify@1.0.4:\n    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  rndm@1.2.0:\n    resolution: {integrity: sha512-fJhQQI5tLrQvYIYFpOnFinzv9dwmR7hRnUz1XqP3OJ1jIweTNOd6aTO4jwQSgcBSFUB+/KHJxuGneime+FdzOw==}\n\n  rollup@4.28.0:\n    resolution: {integrity: sha512-G9GOrmgWHBma4YfCcX8PjH0qhXSdH8B4HDE2o4/jaxj93S4DPCIDoLcXz99eWMji4hB29UFCEd7B2gwGJDR9cQ==}\n    engines: {node: '>=18.0.0', npm: '>=8.0.0'}\n    hasBin: true\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  safe-array-concat@1.1.2:\n    resolution: {integrity: sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==}\n    engines: {node: '>=0.4'}\n\n  safe-buffer@5.2.1:\n    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}\n\n  safe-regex-test@1.0.3:\n    resolution: {integrity: sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==}\n    engines: {node: '>= 0.4'}\n\n  schema-utils@3.3.0:\n    resolution: {integrity: sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==}\n    engines: {node: '>= 10.13.0'}\n\n  secure-random-string@1.1.4:\n    resolution: {integrity: sha512-wkl2kL6/eT0II0HvuRAGW3dunWwfFV81Rdueu8+we0smnJU1B/aEksngOsoACs6XUyVeeZAM4eJvprRuPs0PPQ==}\n\n  semver@6.3.1:\n    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}\n    hasBin: true\n\n  semver@7.6.3:\n    resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  serialize-javascript@6.0.2:\n    resolution: {integrity: sha512-Saa1xPByTTq2gdeFZYLLo+RFE35NHZkAbqZeWNd3BpzppeVisAqpDjcp8dyf6uIvEqJRd46jemmyA4iFIeVk8g==}\n\n  set-function-length@1.2.2:\n    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}\n    engines: {node: '>= 0.4'}\n\n  set-function-name@2.0.2:\n    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}\n    engines: {node: '>= 0.4'}\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  shortid@2.2.16:\n    resolution: {integrity: sha512-Ugt+GIZqvGXCIItnsL+lvFJOiN7RYqlGy7QE41O3YC1xbNSeDGIRO7xg2JJXIAj1cAGnOeC1r7/T9pgrtQbv4g==}\n    deprecated: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.\n\n  side-channel@1.0.6:\n    resolution: {integrity: sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==}\n    engines: {node: '>= 0.4'}\n\n  signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n\n  size-limit@11.1.6:\n    resolution: {integrity: sha512-S5ux2IB8rU26xwVgMskmknGMFkieaIAqDLuwgKiypk6oa4lFsie8yFPrzRFV+yrLDY2GddjXuCaVk5PveVOHiQ==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  source-map-support@0.5.21:\n    resolution: {integrity: sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==}\n\n  source-map@0.6.1:\n    resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}\n    engines: {node: '>=0.10.0'}\n\n  string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n\n  string-width@5.1.2:\n    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}\n    engines: {node: '>=12'}\n\n  string.prototype.trim@1.2.9:\n    resolution: {integrity: sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.trimend@1.0.8:\n    resolution: {integrity: sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==}\n\n  string.prototype.trimstart@1.0.8:\n    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}\n    engines: {node: '>= 0.4'}\n\n  strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n\n  strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n\n  strip-bom@3.0.0:\n    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}\n    engines: {node: '>=4'}\n\n  strip-json-comments@3.1.1:\n    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}\n    engines: {node: '>=8'}\n\n  supports-color@7.2.0:\n    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}\n    engines: {node: '>=8'}\n\n  supports-color@8.1.1:\n    resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}\n    engines: {node: '>=10'}\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  tapable@2.2.1:\n    resolution: {integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==}\n    engines: {node: '>=6'}\n\n  terser-webpack-plugin@5.3.10:\n    resolution: {integrity: sha512-BKFPWlPDndPs+NGGCr1U59t0XScL5317Y0UReNrHaw9/FwhPENlq6bfgs+4yPfyP51vqC1bQ4rp1EfXW5ZSH9w==}\n    engines: {node: '>= 10.13.0'}\n    peerDependencies:\n      '@swc/core': '*'\n      esbuild: '*'\n      uglify-js: '*'\n      webpack: ^5.1.0\n    peerDependenciesMeta:\n      '@swc/core':\n        optional: true\n      esbuild:\n        optional: true\n      uglify-js:\n        optional: true\n\n  terser@5.36.0:\n    resolution: {integrity: sha512-IYV9eNMuFAV4THUspIRXkLakHnV6XO7FEdtKjf/mDyrnqUg9LnlOn6/RwRvM9SZjR4GUq8Nk8zj67FzVARr74w==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  test-exclude@7.0.1:\n    resolution: {integrity: sha512-pFYqmTw68LXVjeWJMST4+borgQP2AyMNbg1BpZh9LbyhUeNkeaPF9gzfPGUAnSMV3qPYdWUwDIjjCLiSDOl7vg==}\n    engines: {node: '>=18'}\n\n  tinybench@3.0.7:\n    resolution: {integrity: sha512-soxV7Dp8eDKvPDv3c4qPJbUjLm1cZxFlsTaIH+FqalsazJzFrLG59dpiIN8OfgVcl11Hfj2b7apD73inCB67Mw==}\n    engines: {node: '>=18.0.0'}\n\n  tinyglobby@0.2.10:\n    resolution: {integrity: sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==}\n    engines: {node: '>=12.0.0'}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  ts-api-utils@1.4.3:\n    resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}\n    engines: {node: '>=16'}\n    peerDependencies:\n      typescript: '>=4.2.0'\n\n  tsconfig-paths@3.15.0:\n    resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}\n\n  type-check@0.4.0:\n    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}\n    engines: {node: '>= 0.8.0'}\n\n  typed-array-buffer@1.0.2:\n    resolution: {integrity: sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-length@1.0.1:\n    resolution: {integrity: sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-offset@1.0.3:\n    resolution: {integrity: sha512-GsvTyUHTriq6o/bHcTd0vM7OQ9JEdlvluu9YISaA7+KzDzPaIzEeDFNkTfhdE3MYcNhNi0vq/LlegYgIs5yPAw==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-length@1.0.7:\n    resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}\n    engines: {node: '>= 0.4'}\n\n  typescript-eslint@8.17.0:\n    resolution: {integrity: sha512-409VXvFd/f1br1DCbuKNFqQpXICoTB+V51afcwG1pn1a3Cp92MqAUges3YjwEdQ0cMUoCIodjVDAYzyD8h3SYA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  typescript@5.5.2:\n    resolution: {integrity: sha512-NcRtPEOsPFFWjobJEtfihkLCZCXZt/os3zf8nTxjVH3RvTSxjrCamJpbExGvYOF+tFHc3pA65qpdwPbzjohhew==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  uid-safe@2.1.5:\n    resolution: {integrity: sha512-KPHm4VL5dDXKz01UuEd88Df+KzynaohSL9fBh096KWAxSKZQDI2uBrVqtvRM4rwrIrRRKsdLNML/lnaaVSRioA==}\n    engines: {node: '>= 0.8'}\n\n  uid@2.0.2:\n    resolution: {integrity: sha512-u3xV3X7uzvi5b1MncmZo3i2Aw222Zk1keqLA1YkHldREkAhAqi65wuPfe7lHx8H/Wzy+8CE7S7uS3jekIM5s8g==}\n    engines: {node: '>=8'}\n\n  unbox-primitive@1.0.2:\n    resolution: {integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==}\n\n  undici-types@6.20.0:\n    resolution: {integrity: sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==}\n\n  update-browserslist-db@1.1.1:\n    resolution: {integrity: sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==}\n    hasBin: true\n    peerDependencies:\n      browserslist: '>= 4.21.0'\n\n  uri-js@4.4.1:\n    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}\n\n  uuid@11.0.3:\n    resolution: {integrity: sha512-d0z310fCWv5dJwnX1Y/MncBAqGMKEzlBb1AOf7z9K8ALnd0utBX/msg/fA0+sbyN1ihbMsLhrBlnl1ak7Wa0rg==}\n    hasBin: true\n\n  v8-to-istanbul@9.3.0:\n    resolution: {integrity: sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==}\n    engines: {node: '>=10.12.0'}\n\n  vite@6.0.2:\n    resolution: {integrity: sha512-XdQ+VsY2tJpBsKGs0wf3U/+azx8BBpYRHFAyKm5VeEZNOJZRB63q7Sc8Iup3k0TrN3KO6QgyzFf+opSbfY1y0g==}\n    engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}\n    hasBin: true\n    peerDependencies:\n      '@types/node': ^18.0.0 || ^20.0.0 || >=22.0.0\n      jiti: '>=1.21.0'\n      less: '*'\n      lightningcss: ^1.21.0\n      sass: '*'\n      sass-embedded: '*'\n      stylus: '*'\n      sugarss: '*'\n      terser: ^5.16.0\n      tsx: ^4.8.1\n      yaml: ^2.4.2\n    peerDependenciesMeta:\n      '@types/node':\n        optional: true\n      jiti:\n        optional: true\n      less:\n        optional: true\n      lightningcss:\n        optional: true\n      sass:\n        optional: true\n      sass-embedded:\n        optional: true\n      stylus:\n        optional: true\n      sugarss:\n        optional: true\n      terser:\n        optional: true\n      tsx:\n        optional: true\n      yaml:\n        optional: true\n\n  watchpack@2.4.2:\n    resolution: {integrity: sha512-TnbFSbcOCcDgjZ4piURLCbJ3nJhznVh9kw6F6iokjiFPl8ONxe9A6nMDVXDiNbrSfLILs6vB07F7wLBrwPYzJw==}\n    engines: {node: '>=10.13.0'}\n\n  webpack-sources@3.2.3:\n    resolution: {integrity: sha512-/DyMEOrDgLKKIG0fmvtz+4dUX/3Ghozwgm6iPp8KRhvn+eQf9+Q7GWxVNMk3+uCPWfdXYC4ExGBckIXdFEfH1w==}\n    engines: {node: '>=10.13.0'}\n\n  webpack@5.97.0:\n    resolution: {integrity: sha512-CWT8v7ShSfj7tGs4TLRtaOLmOCPWhoKEvp+eA7FVx8Xrjb3XfT0aXdxDItnRZmE8sHcH+a8ayDrJCOjXKxVFfQ==}\n    engines: {node: '>=10.13.0'}\n    hasBin: true\n    peerDependencies:\n      webpack-cli: '*'\n    peerDependenciesMeta:\n      webpack-cli:\n        optional: true\n\n  which-boxed-primitive@1.1.0:\n    resolution: {integrity: sha512-Ei7Miu/AXe2JJ4iNF5j/UphAgRoma4trE6PtisM09bPygb3egMH3YLW/befsWb1A1AxvNSFidOFTB18XtnIIng==}\n    engines: {node: '>= 0.4'}\n\n  which-builtin-type@1.2.0:\n    resolution: {integrity: sha512-I+qLGQ/vucCby4tf5HsLmGueEla4ZhwTBSqaooS+Y0BuxN4Cp+okmGuV+8mXZ84KDI9BA+oklo+RzKg0ONdSUA==}\n    engines: {node: '>= 0.4'}\n\n  which-collection@1.0.2:\n    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}\n    engines: {node: '>= 0.4'}\n\n  which-typed-array@1.1.16:\n    resolution: {integrity: sha512-g+N+GAWiRj66DngFwHvISJd+ITsyphZvD1vChfVg6cEdnzy53GzB3oy0fUNlvhz7H7+MiqhYr26qxQShCpKTTQ==}\n    engines: {node: '>= 0.4'}\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  word-wrap@1.2.5:\n    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}\n    engines: {node: '>=0.10.0'}\n\n  wrap-ansi@7.0.0:\n    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}\n    engines: {node: '>=10'}\n\n  wrap-ansi@8.1.0:\n    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}\n    engines: {node: '>=12'}\n\n  y18n@5.0.8:\n    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}\n    engines: {node: '>=10'}\n\n  yallist@3.1.1:\n    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}\n\n  yargs-parser@21.1.1:\n    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}\n    engines: {node: '>=12'}\n\n  yargs@17.7.2:\n    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}\n    engines: {node: '>=12'}\n\n  yocto-queue@0.1.0:\n    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}\n    engines: {node: '>=10'}\n\nsnapshots:\n\n  '@ampproject/remapping@2.3.0':\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.5\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@babel/code-frame@7.26.2':\n    dependencies:\n      '@babel/helper-validator-identifier': 7.25.9\n      js-tokens: 4.0.0\n      picocolors: 1.1.1\n\n  '@babel/compat-data@7.26.3': {}\n\n  '@babel/core@7.26.0':\n    dependencies:\n      '@ampproject/remapping': 2.3.0\n      '@babel/code-frame': 7.26.2\n      '@babel/generator': 7.26.3\n      '@babel/helper-compilation-targets': 7.25.9\n      '@babel/helper-module-transforms': 7.26.0(@babel/core@7.26.0)\n      '@babel/helpers': 7.26.0\n      '@babel/parser': 7.26.3\n      '@babel/template': 7.25.9\n      '@babel/traverse': 7.26.3\n      '@babel/types': 7.26.3\n      convert-source-map: 2.0.0\n      debug: 4.3.7\n      gensync: 1.0.0-beta.2\n      json5: 2.2.3\n      semver: 6.3.1\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/generator@7.26.3':\n    dependencies:\n      '@babel/parser': 7.26.3\n      '@babel/types': 7.26.3\n      '@jridgewell/gen-mapping': 0.3.5\n      '@jridgewell/trace-mapping': 0.3.25\n      jsesc: 3.0.2\n\n  '@babel/helper-compilation-targets@7.25.9':\n    dependencies:\n      '@babel/compat-data': 7.26.3\n      '@babel/helper-validator-option': 7.25.9\n      browserslist: 4.24.2\n      lru-cache: 5.1.1\n      semver: 6.3.1\n\n  '@babel/helper-module-imports@7.25.9':\n    dependencies:\n      '@babel/traverse': 7.26.3\n      '@babel/types': 7.26.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/helper-module-transforms@7.26.0(@babel/core@7.26.0)':\n    dependencies:\n      '@babel/core': 7.26.0\n      '@babel/helper-module-imports': 7.25.9\n      '@babel/helper-validator-identifier': 7.25.9\n      '@babel/traverse': 7.26.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/helper-string-parser@7.25.9': {}\n\n  '@babel/helper-validator-identifier@7.25.9': {}\n\n  '@babel/helper-validator-option@7.25.9': {}\n\n  '@babel/helpers@7.26.0':\n    dependencies:\n      '@babel/template': 7.25.9\n      '@babel/types': 7.26.3\n\n  '@babel/parser@7.26.3':\n    dependencies:\n      '@babel/types': 7.26.3\n\n  '@babel/template@7.25.9':\n    dependencies:\n      '@babel/code-frame': 7.26.2\n      '@babel/parser': 7.26.3\n      '@babel/types': 7.26.3\n\n  '@babel/traverse@7.26.3':\n    dependencies:\n      '@babel/code-frame': 7.26.2\n      '@babel/generator': 7.26.3\n      '@babel/parser': 7.26.3\n      '@babel/template': 7.25.9\n      '@babel/types': 7.26.3\n      debug: 4.3.7\n      globals: 11.12.0\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/types@7.26.3':\n    dependencies:\n      '@babel/helper-string-parser': 7.25.9\n      '@babel/helper-validator-identifier': 7.25.9\n\n  '@bcoe/v8-coverage@0.2.3': {}\n\n  '@esbuild/aix-ppc64@0.24.0':\n    optional: true\n\n  '@esbuild/android-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/android-arm@0.24.0':\n    optional: true\n\n  '@esbuild/android-x64@0.24.0':\n    optional: true\n\n  '@esbuild/darwin-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/darwin-x64@0.24.0':\n    optional: true\n\n  '@esbuild/freebsd-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/freebsd-x64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-arm@0.24.0':\n    optional: true\n\n  '@esbuild/linux-ia32@0.24.0':\n    optional: true\n\n  '@esbuild/linux-loong64@0.14.54':\n    optional: true\n\n  '@esbuild/linux-loong64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-mips64el@0.24.0':\n    optional: true\n\n  '@esbuild/linux-ppc64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-riscv64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-s390x@0.24.0':\n    optional: true\n\n  '@esbuild/linux-x64@0.24.0':\n    optional: true\n\n  '@esbuild/netbsd-x64@0.24.0':\n    optional: true\n\n  '@esbuild/openbsd-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/openbsd-x64@0.24.0':\n    optional: true\n\n  '@esbuild/sunos-x64@0.24.0':\n    optional: true\n\n  '@esbuild/win32-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/win32-ia32@0.24.0':\n    optional: true\n\n  '@esbuild/win32-x64@0.24.0':\n    optional: true\n\n  '@eslint-community/eslint-utils@4.4.1(eslint@9.16.0(jiti@2.4.1))':\n    dependencies:\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-visitor-keys: 3.4.3\n\n  '@eslint-community/regexpp@4.12.1': {}\n\n  '@eslint/config-array@0.19.1':\n    dependencies:\n      '@eslint/object-schema': 2.1.5\n      debug: 4.3.7\n      minimatch: 3.1.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/core@0.9.1':\n    dependencies:\n      '@types/json-schema': 7.0.15\n\n  '@eslint/eslintrc@3.2.0':\n    dependencies:\n      ajv: 6.12.6\n      debug: 4.3.7\n      espree: 10.3.0\n      globals: 14.0.0\n      ignore: 5.3.2\n      import-fresh: 3.3.0\n      js-yaml: 4.1.0\n      minimatch: 3.1.2\n      strip-json-comments: 3.1.1\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/js@9.16.0': {}\n\n  '@eslint/object-schema@2.1.5': {}\n\n  '@eslint/plugin-kit@0.2.4':\n    dependencies:\n      levn: 0.4.1\n\n  '@humanfs/core@0.19.1': {}\n\n  '@humanfs/node@0.16.6':\n    dependencies:\n      '@humanfs/core': 0.19.1\n      '@humanwhocodes/retry': 0.3.1\n\n  '@humanwhocodes/module-importer@1.0.1': {}\n\n  '@humanwhocodes/retry@0.3.1': {}\n\n  '@humanwhocodes/retry@0.4.1': {}\n\n  '@isaacs/cliui@8.0.2':\n    dependencies:\n      string-width: 5.1.2\n      string-width-cjs: string-width@4.2.3\n      strip-ansi: 7.1.0\n      strip-ansi-cjs: strip-ansi@6.0.1\n      wrap-ansi: 8.1.0\n      wrap-ansi-cjs: wrap-ansi@7.0.0\n\n  '@istanbuljs/schema@0.1.3': {}\n\n  '@jridgewell/gen-mapping@0.3.5':\n    dependencies:\n      '@jridgewell/set-array': 1.2.1\n      '@jridgewell/sourcemap-codec': 1.5.0\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/set-array@1.2.1': {}\n\n  '@jridgewell/source-map@0.3.6':\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.5\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  '@logux/eslint-config@53.5.1(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)':\n    dependencies:\n      '@eslint/eslintrc': 3.2.0\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-config-standard: 17.1.0(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-n@17.14.0(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-promise@7.2.1(eslint@9.16.0(jiti@2.4.1)))(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-n: 17.14.0(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-perfectionist: 3.9.1(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      eslint-plugin-prefer-let: 4.0.0\n      eslint-plugin-promise: 7.2.1(eslint@9.16.0(jiti@2.4.1))\n      typescript-eslint: 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n    transitivePeerDependencies:\n      - '@typescript-eslint/parser'\n      - astro-eslint-parser\n      - eslint-import-resolver-typescript\n      - eslint-import-resolver-webpack\n      - supports-color\n      - svelte-eslint-parser\n      - typescript\n      - vue-eslint-parser\n\n  '@lukeed/csprng@1.1.0': {}\n\n  '@lukeed/uuid@2.0.1':\n    dependencies:\n      '@lukeed/csprng': 1.1.0\n\n  '@napi-rs/uuid-android-arm-eabi@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-android-arm64@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-darwin-arm64@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-darwin-x64@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-freebsd-x64@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-linux-arm-gnueabihf@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-linux-arm64-gnu@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-linux-arm64-musl@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-linux-x64-gnu@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-linux-x64-musl@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-win32-arm64-msvc@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-win32-ia32-msvc@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid-win32-x64-msvc@0.2.2':\n    optional: true\n\n  '@napi-rs/uuid@0.2.2':\n    optionalDependencies:\n      '@napi-rs/uuid-android-arm-eabi': 0.2.2\n      '@napi-rs/uuid-android-arm64': 0.2.2\n      '@napi-rs/uuid-darwin-arm64': 0.2.2\n      '@napi-rs/uuid-darwin-x64': 0.2.2\n      '@napi-rs/uuid-freebsd-x64': 0.2.2\n      '@napi-rs/uuid-linux-arm-gnueabihf': 0.2.2\n      '@napi-rs/uuid-linux-arm64-gnu': 0.2.2\n      '@napi-rs/uuid-linux-arm64-musl': 0.2.2\n      '@napi-rs/uuid-linux-x64-gnu': 0.2.2\n      '@napi-rs/uuid-linux-x64-musl': 0.2.2\n      '@napi-rs/uuid-win32-arm64-msvc': 0.2.2\n      '@napi-rs/uuid-win32-ia32-msvc': 0.2.2\n      '@napi-rs/uuid-win32-x64-msvc': 0.2.2\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.17.1\n\n  '@originjs/vite-plugin-commonjs@1.0.3':\n    dependencies:\n      esbuild: 0.14.54\n\n  '@pkgjs/parseargs@0.11.0':\n    optional: true\n\n  '@rollup/rollup-android-arm-eabi@4.28.0':\n    optional: true\n\n  '@rollup/rollup-android-arm64@4.28.0':\n    optional: true\n\n  '@rollup/rollup-darwin-arm64@4.28.0':\n    optional: true\n\n  '@rollup/rollup-darwin-x64@4.28.0':\n    optional: true\n\n  '@rollup/rollup-freebsd-arm64@4.28.0':\n    optional: true\n\n  '@rollup/rollup-freebsd-x64@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm-musleabihf@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-gnu@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-musl@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-riscv64-gnu@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-s390x-gnu@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-x64-gnu@4.28.0':\n    optional: true\n\n  '@rollup/rollup-linux-x64-musl@4.28.0':\n    optional: true\n\n  '@rollup/rollup-win32-arm64-msvc@4.28.0':\n    optional: true\n\n  '@rollup/rollup-win32-ia32-msvc@4.28.0':\n    optional: true\n\n  '@rollup/rollup-win32-x64-msvc@4.28.0':\n    optional: true\n\n  '@rtsao/scc@1.1.0': {}\n\n  '@size-limit/file@11.1.6(size-limit@11.1.6)':\n    dependencies:\n      size-limit: 11.1.6\n\n  '@size-limit/webpack@11.1.6(size-limit@11.1.6)':\n    dependencies:\n      nanoid: 5.0.9\n      size-limit: 11.1.6\n      webpack: 5.97.0\n    transitivePeerDependencies:\n      - '@swc/core'\n      - esbuild\n      - uglify-js\n      - webpack-cli\n\n  '@types/eslint-scope@3.7.7':\n    dependencies:\n      '@types/eslint': 9.6.1\n      '@types/estree': 1.0.6\n\n  '@types/eslint@9.6.1':\n    dependencies:\n      '@types/estree': 1.0.6\n      '@types/json-schema': 7.0.15\n\n  '@types/estree@1.0.6': {}\n\n  '@types/istanbul-lib-coverage@2.0.6': {}\n\n  '@types/json-schema@7.0.15': {}\n\n  '@types/json5@0.0.29': {}\n\n  '@types/node@22.10.1':\n    dependencies:\n      undici-types: 6.20.0\n\n  '@typescript-eslint/eslint-plugin@8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)':\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      '@typescript-eslint/scope-manager': 8.17.0\n      '@typescript-eslint/type-utils': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      '@typescript-eslint/visitor-keys': 8.17.0\n      eslint: 9.16.0(jiti@2.4.1)\n      graphemer: 1.4.0\n      ignore: 5.3.2\n      natural-compare: 1.4.0\n      ts-api-utils: 1.4.3(typescript@5.5.2)\n    optionalDependencies:\n      typescript: 5.5.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)':\n    dependencies:\n      '@typescript-eslint/scope-manager': 8.17.0\n      '@typescript-eslint/types': 8.17.0\n      '@typescript-eslint/typescript-estree': 8.17.0(typescript@5.5.2)\n      '@typescript-eslint/visitor-keys': 8.17.0\n      debug: 4.3.7\n      eslint: 9.16.0(jiti@2.4.1)\n    optionalDependencies:\n      typescript: 5.5.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/scope-manager@8.17.0':\n    dependencies:\n      '@typescript-eslint/types': 8.17.0\n      '@typescript-eslint/visitor-keys': 8.17.0\n\n  '@typescript-eslint/type-utils@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)':\n    dependencies:\n      '@typescript-eslint/typescript-estree': 8.17.0(typescript@5.5.2)\n      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      debug: 4.3.7\n      eslint: 9.16.0(jiti@2.4.1)\n      ts-api-utils: 1.4.3(typescript@5.5.2)\n    optionalDependencies:\n      typescript: 5.5.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/types@8.17.0': {}\n\n  '@typescript-eslint/typescript-estree@8.17.0(typescript@5.5.2)':\n    dependencies:\n      '@typescript-eslint/types': 8.17.0\n      '@typescript-eslint/visitor-keys': 8.17.0\n      debug: 4.3.7\n      fast-glob: 3.3.2\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.6.3\n      ts-api-utils: 1.4.3(typescript@5.5.2)\n    optionalDependencies:\n      typescript: 5.5.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/utils@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)':\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      '@typescript-eslint/scope-manager': 8.17.0\n      '@typescript-eslint/types': 8.17.0\n      '@typescript-eslint/typescript-estree': 8.17.0(typescript@5.5.2)\n      eslint: 9.16.0(jiti@2.4.1)\n    optionalDependencies:\n      typescript: 5.5.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/visitor-keys@8.17.0':\n    dependencies:\n      '@typescript-eslint/types': 8.17.0\n      eslint-visitor-keys: 4.2.0\n\n  '@webassemblyjs/ast@1.14.1':\n    dependencies:\n      '@webassemblyjs/helper-numbers': 1.13.2\n      '@webassemblyjs/helper-wasm-bytecode': 1.13.2\n\n  '@webassemblyjs/floating-point-hex-parser@1.13.2': {}\n\n  '@webassemblyjs/helper-api-error@1.13.2': {}\n\n  '@webassemblyjs/helper-buffer@1.14.1': {}\n\n  '@webassemblyjs/helper-numbers@1.13.2':\n    dependencies:\n      '@webassemblyjs/floating-point-hex-parser': 1.13.2\n      '@webassemblyjs/helper-api-error': 1.13.2\n      '@xtuc/long': 4.2.2\n\n  '@webassemblyjs/helper-wasm-bytecode@1.13.2': {}\n\n  '@webassemblyjs/helper-wasm-section@1.14.1':\n    dependencies:\n      '@webassemblyjs/ast': 1.14.1\n      '@webassemblyjs/helper-buffer': 1.14.1\n      '@webassemblyjs/helper-wasm-bytecode': 1.13.2\n      '@webassemblyjs/wasm-gen': 1.14.1\n\n  '@webassemblyjs/ieee754@1.13.2':\n    dependencies:\n      '@xtuc/ieee754': 1.2.0\n\n  '@webassemblyjs/leb128@1.13.2':\n    dependencies:\n      '@xtuc/long': 4.2.2\n\n  '@webassemblyjs/utf8@1.13.2': {}\n\n  '@webassemblyjs/wasm-edit@1.14.1':\n    dependencies:\n      '@webassemblyjs/ast': 1.14.1\n      '@webassemblyjs/helper-buffer': 1.14.1\n      '@webassemblyjs/helper-wasm-bytecode': 1.13.2\n      '@webassemblyjs/helper-wasm-section': 1.14.1\n      '@webassemblyjs/wasm-gen': 1.14.1\n      '@webassemblyjs/wasm-opt': 1.14.1\n      '@webassemblyjs/wasm-parser': 1.14.1\n      '@webassemblyjs/wast-printer': 1.14.1\n\n  '@webassemblyjs/wasm-gen@1.14.1':\n    dependencies:\n      '@webassemblyjs/ast': 1.14.1\n      '@webassemblyjs/helper-wasm-bytecode': 1.13.2\n      '@webassemblyjs/ieee754': 1.13.2\n      '@webassemblyjs/leb128': 1.13.2\n      '@webassemblyjs/utf8': 1.13.2\n\n  '@webassemblyjs/wasm-opt@1.14.1':\n    dependencies:\n      '@webassemblyjs/ast': 1.14.1\n      '@webassemblyjs/helper-buffer': 1.14.1\n      '@webassemblyjs/wasm-gen': 1.14.1\n      '@webassemblyjs/wasm-parser': 1.14.1\n\n  '@webassemblyjs/wasm-parser@1.14.1':\n    dependencies:\n      '@webassemblyjs/ast': 1.14.1\n      '@webassemblyjs/helper-api-error': 1.13.2\n      '@webassemblyjs/helper-wasm-bytecode': 1.13.2\n      '@webassemblyjs/ieee754': 1.13.2\n      '@webassemblyjs/leb128': 1.13.2\n      '@webassemblyjs/utf8': 1.13.2\n\n  '@webassemblyjs/wast-printer@1.14.1':\n    dependencies:\n      '@webassemblyjs/ast': 1.14.1\n      '@xtuc/long': 4.2.2\n\n  '@xtuc/ieee754@1.2.0': {}\n\n  '@xtuc/long@4.2.2': {}\n\n  acorn-jsx@5.3.2(acorn@8.14.0):\n    dependencies:\n      acorn: 8.14.0\n\n  acorn@8.14.0: {}\n\n  ajv-keywords@3.5.2(ajv@6.12.6):\n    dependencies:\n      ajv: 6.12.6\n\n  ajv@6.12.6:\n    dependencies:\n      fast-deep-equal: 3.1.3\n      fast-json-stable-stringify: 2.1.0\n      json-schema-traverse: 0.4.1\n      uri-js: 4.4.1\n\n  ansi-regex@5.0.1: {}\n\n  ansi-regex@6.1.0: {}\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  ansi-styles@6.2.1: {}\n\n  argparse@2.0.1: {}\n\n  array-buffer-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      is-array-buffer: 3.0.4\n\n  array-includes@3.1.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-object-atoms: 1.0.0\n      get-intrinsic: 1.2.4\n      is-string: 1.1.0\n\n  array.prototype.findlastindex@1.2.5:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      es-shim-unscopables: 1.0.2\n\n  array.prototype.flat@1.3.2:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-shim-unscopables: 1.0.2\n\n  array.prototype.flatmap@1.3.2:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-shim-unscopables: 1.0.2\n\n  arraybuffer.prototype.slice@1.0.3:\n    dependencies:\n      array-buffer-byte-length: 1.0.1\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n      is-array-buffer: 3.0.4\n      is-shared-array-buffer: 1.0.3\n\n  available-typed-arrays@1.0.7:\n    dependencies:\n      possible-typed-array-names: 1.0.0\n\n  balanced-match@1.0.2: {}\n\n  better-node-test@0.7.1: {}\n\n  brace-expansion@1.1.11:\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n\n  brace-expansion@2.0.1:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  browserslist@4.24.2:\n    dependencies:\n      caniuse-lite: 1.0.30001686\n      electron-to-chromium: 1.5.70\n      node-releases: 2.0.18\n      update-browserslist-db: 1.1.1(browserslist@4.24.2)\n\n  buffer-from@1.1.2: {}\n\n  bytes-iec@3.1.1: {}\n\n  c8@10.1.2:\n    dependencies:\n      '@bcoe/v8-coverage': 0.2.3\n      '@istanbuljs/schema': 0.1.3\n      find-up: 5.0.0\n      foreground-child: 3.3.0\n      istanbul-lib-coverage: 3.2.2\n      istanbul-lib-report: 3.0.1\n      istanbul-reports: 3.1.7\n      test-exclude: 7.0.1\n      v8-to-istanbul: 9.3.0\n      yargs: 17.7.2\n      yargs-parser: 21.1.1\n\n  call-bind@1.0.7:\n    dependencies:\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.4\n      set-function-length: 1.2.2\n\n  callsites@3.1.0: {}\n\n  caniuse-lite@1.0.30001686: {}\n\n  chalk@4.1.2:\n    dependencies:\n      ansi-styles: 4.3.0\n      supports-color: 7.2.0\n\n  chokidar@4.0.1:\n    dependencies:\n      readdirp: 4.0.2\n\n  chrome-trace-event@1.0.4: {}\n\n  clean-publish@5.1.0:\n    dependencies:\n      cross-spawn: 7.0.6\n      fast-glob: 3.3.2\n      lilconfig: 3.1.3\n      micromatch: 4.0.8\n\n  cliui@8.0.1:\n    dependencies:\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      wrap-ansi: 7.0.0\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.4: {}\n\n  commander@2.20.3: {}\n\n  concat-map@0.0.1: {}\n\n  convert-source-map@2.0.0: {}\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  data-view-buffer@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-data-view: 1.0.1\n\n  data-view-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-data-view: 1.0.1\n\n  data-view-byte-offset@1.0.0:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-data-view: 1.0.1\n\n  debug@3.2.7:\n    dependencies:\n      ms: 2.1.3\n\n  debug@4.3.7:\n    dependencies:\n      ms: 2.1.3\n\n  deep-is@0.1.4: {}\n\n  define-data-property@1.1.4:\n    dependencies:\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      gopd: 1.2.0\n\n  define-properties@1.2.1:\n    dependencies:\n      define-data-property: 1.1.4\n      has-property-descriptors: 1.0.2\n      object-keys: 1.1.1\n\n  doctrine@2.1.0:\n    dependencies:\n      esutils: 2.0.3\n\n  eastasianwidth@0.2.0: {}\n\n  electron-to-chromium@1.5.70: {}\n\n  emoji-regex@8.0.0: {}\n\n  emoji-regex@9.2.2: {}\n\n  enhanced-resolve@5.17.1:\n    dependencies:\n      graceful-fs: 4.2.11\n      tapable: 2.2.1\n\n  es-abstract@1.23.5:\n    dependencies:\n      array-buffer-byte-length: 1.0.1\n      arraybuffer.prototype.slice: 1.0.3\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.7\n      data-view-buffer: 1.0.1\n      data-view-byte-length: 1.0.1\n      data-view-byte-offset: 1.0.0\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      es-set-tostringtag: 2.0.3\n      es-to-primitive: 1.3.0\n      function.prototype.name: 1.1.6\n      get-intrinsic: 1.2.4\n      get-symbol-description: 1.0.2\n      globalthis: 1.0.4\n      gopd: 1.2.0\n      has-property-descriptors: 1.0.2\n      has-proto: 1.1.0\n      has-symbols: 1.1.0\n      hasown: 2.0.2\n      internal-slot: 1.0.7\n      is-array-buffer: 3.0.4\n      is-callable: 1.2.7\n      is-data-view: 1.0.1\n      is-negative-zero: 2.0.3\n      is-regex: 1.2.0\n      is-shared-array-buffer: 1.0.3\n      is-string: 1.1.0\n      is-typed-array: 1.1.13\n      is-weakref: 1.0.2\n      object-inspect: 1.13.3\n      object-keys: 1.1.1\n      object.assign: 4.1.5\n      regexp.prototype.flags: 1.5.3\n      safe-array-concat: 1.1.2\n      safe-regex-test: 1.0.3\n      string.prototype.trim: 1.2.9\n      string.prototype.trimend: 1.0.8\n      string.prototype.trimstart: 1.0.8\n      typed-array-buffer: 1.0.2\n      typed-array-byte-length: 1.0.1\n      typed-array-byte-offset: 1.0.3\n      typed-array-length: 1.0.7\n      unbox-primitive: 1.0.2\n      which-typed-array: 1.1.16\n\n  es-define-property@1.0.0:\n    dependencies:\n      get-intrinsic: 1.2.4\n\n  es-errors@1.3.0: {}\n\n  es-module-lexer@1.5.4: {}\n\n  es-object-atoms@1.0.0:\n    dependencies:\n      es-errors: 1.3.0\n\n  es-set-tostringtag@2.0.3:\n    dependencies:\n      get-intrinsic: 1.2.4\n      has-tostringtag: 1.0.2\n      hasown: 2.0.2\n\n  es-shim-unscopables@1.0.2:\n    dependencies:\n      hasown: 2.0.2\n\n  es-to-primitive@1.3.0:\n    dependencies:\n      is-callable: 1.2.7\n      is-date-object: 1.0.5\n      is-symbol: 1.1.0\n\n  esbuild-android-64@0.14.54:\n    optional: true\n\n  esbuild-android-arm64@0.14.54:\n    optional: true\n\n  esbuild-darwin-64@0.14.54:\n    optional: true\n\n  esbuild-darwin-arm64@0.14.54:\n    optional: true\n\n  esbuild-freebsd-64@0.14.54:\n    optional: true\n\n  esbuild-freebsd-arm64@0.14.54:\n    optional: true\n\n  esbuild-linux-32@0.14.54:\n    optional: true\n\n  esbuild-linux-64@0.14.54:\n    optional: true\n\n  esbuild-linux-arm64@0.14.54:\n    optional: true\n\n  esbuild-linux-arm@0.14.54:\n    optional: true\n\n  esbuild-linux-mips64le@0.14.54:\n    optional: true\n\n  esbuild-linux-ppc64le@0.14.54:\n    optional: true\n\n  esbuild-linux-riscv64@0.14.54:\n    optional: true\n\n  esbuild-linux-s390x@0.14.54:\n    optional: true\n\n  esbuild-netbsd-64@0.14.54:\n    optional: true\n\n  esbuild-openbsd-64@0.14.54:\n    optional: true\n\n  esbuild-sunos-64@0.14.54:\n    optional: true\n\n  esbuild-windows-32@0.14.54:\n    optional: true\n\n  esbuild-windows-64@0.14.54:\n    optional: true\n\n  esbuild-windows-arm64@0.14.54:\n    optional: true\n\n  esbuild@0.14.54:\n    optionalDependencies:\n      '@esbuild/linux-loong64': 0.14.54\n      esbuild-android-64: 0.14.54\n      esbuild-android-arm64: 0.14.54\n      esbuild-darwin-64: 0.14.54\n      esbuild-darwin-arm64: 0.14.54\n      esbuild-freebsd-64: 0.14.54\n      esbuild-freebsd-arm64: 0.14.54\n      esbuild-linux-32: 0.14.54\n      esbuild-linux-64: 0.14.54\n      esbuild-linux-arm: 0.14.54\n      esbuild-linux-arm64: 0.14.54\n      esbuild-linux-mips64le: 0.14.54\n      esbuild-linux-ppc64le: 0.14.54\n      esbuild-linux-riscv64: 0.14.54\n      esbuild-linux-s390x: 0.14.54\n      esbuild-netbsd-64: 0.14.54\n      esbuild-openbsd-64: 0.14.54\n      esbuild-sunos-64: 0.14.54\n      esbuild-windows-32: 0.14.54\n      esbuild-windows-64: 0.14.54\n      esbuild-windows-arm64: 0.14.54\n\n  esbuild@0.24.0:\n    optionalDependencies:\n      '@esbuild/aix-ppc64': 0.24.0\n      '@esbuild/android-arm': 0.24.0\n      '@esbuild/android-arm64': 0.24.0\n      '@esbuild/android-x64': 0.24.0\n      '@esbuild/darwin-arm64': 0.24.0\n      '@esbuild/darwin-x64': 0.24.0\n      '@esbuild/freebsd-arm64': 0.24.0\n      '@esbuild/freebsd-x64': 0.24.0\n      '@esbuild/linux-arm': 0.24.0\n      '@esbuild/linux-arm64': 0.24.0\n      '@esbuild/linux-ia32': 0.24.0\n      '@esbuild/linux-loong64': 0.24.0\n      '@esbuild/linux-mips64el': 0.24.0\n      '@esbuild/linux-ppc64': 0.24.0\n      '@esbuild/linux-riscv64': 0.24.0\n      '@esbuild/linux-s390x': 0.24.0\n      '@esbuild/linux-x64': 0.24.0\n      '@esbuild/netbsd-x64': 0.24.0\n      '@esbuild/openbsd-arm64': 0.24.0\n      '@esbuild/openbsd-x64': 0.24.0\n      '@esbuild/sunos-x64': 0.24.0\n      '@esbuild/win32-arm64': 0.24.0\n      '@esbuild/win32-ia32': 0.24.0\n      '@esbuild/win32-x64': 0.24.0\n\n  escalade@3.2.0: {}\n\n  escape-string-regexp@4.0.0: {}\n\n  eslint-compat-utils@0.5.1(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      eslint: 9.16.0(jiti@2.4.1)\n      semver: 7.6.3\n\n  eslint-config-standard@17.1.0(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-n@17.14.0(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-promise@7.2.1(eslint@9.16.0(jiti@2.4.1)))(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-n: 17.14.0(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-promise: 7.2.1(eslint@9.16.0(jiti@2.4.1))\n\n  eslint-import-resolver-node@0.3.9:\n    dependencies:\n      debug: 3.2.7\n      is-core-module: 2.15.1\n      resolve: 1.22.8\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      debug: 3.2.7\n    optionalDependencies:\n      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-import-resolver-node: 0.3.9\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-plugin-es-x@7.8.0(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      '@eslint-community/regexpp': 4.12.1\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-compat-utils: 0.5.1(eslint@9.16.0(jiti@2.4.1))\n\n  eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@rtsao/scc': 1.1.0\n      array-includes: 3.1.8\n      array.prototype.findlastindex: 1.2.5\n      array.prototype.flat: 1.3.2\n      array.prototype.flatmap: 1.3.2\n      debug: 3.2.7\n      doctrine: 2.1.0\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-import-resolver-node: 0.3.9\n      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0(jiti@2.4.1))\n      hasown: 2.0.2\n      is-core-module: 2.15.1\n      is-glob: 4.0.3\n      minimatch: 3.1.2\n      object.fromentries: 2.0.8\n      object.groupby: 1.0.3\n      object.values: 1.2.0\n      semver: 6.3.1\n      string.prototype.trimend: 1.0.8\n      tsconfig-paths: 3.15.0\n    optionalDependencies:\n      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n    transitivePeerDependencies:\n      - eslint-import-resolver-typescript\n      - eslint-import-resolver-webpack\n      - supports-color\n\n  eslint-plugin-n@17.14.0(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      enhanced-resolve: 5.17.1\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-plugin-es-x: 7.8.0(eslint@9.16.0(jiti@2.4.1))\n      get-tsconfig: 4.8.1\n      globals: 15.13.0\n      ignore: 5.3.2\n      minimatch: 9.0.5\n      semver: 7.6.3\n\n  eslint-plugin-perfectionist@3.9.1(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2):\n    dependencies:\n      '@typescript-eslint/types': 8.17.0\n      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      eslint: 9.16.0(jiti@2.4.1)\n      minimatch: 9.0.5\n      natural-compare-lite: 1.4.0\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  eslint-plugin-prefer-let@4.0.0:\n    dependencies:\n      requireindex: 1.2.0\n\n  eslint-plugin-promise@7.2.1(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      eslint: 9.16.0(jiti@2.4.1)\n\n  eslint-scope@5.1.1:\n    dependencies:\n      esrecurse: 4.3.0\n      estraverse: 4.3.0\n\n  eslint-scope@8.2.0:\n    dependencies:\n      esrecurse: 4.3.0\n      estraverse: 5.3.0\n\n  eslint-visitor-keys@3.4.3: {}\n\n  eslint-visitor-keys@4.2.0: {}\n\n  eslint@9.16.0(jiti@2.4.1):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      '@eslint-community/regexpp': 4.12.1\n      '@eslint/config-array': 0.19.1\n      '@eslint/core': 0.9.1\n      '@eslint/eslintrc': 3.2.0\n      '@eslint/js': 9.16.0\n      '@eslint/plugin-kit': 0.2.4\n      '@humanfs/node': 0.16.6\n      '@humanwhocodes/module-importer': 1.0.1\n      '@humanwhocodes/retry': 0.4.1\n      '@types/estree': 1.0.6\n      '@types/json-schema': 7.0.15\n      ajv: 6.12.6\n      chalk: 4.1.2\n      cross-spawn: 7.0.6\n      debug: 4.3.7\n      escape-string-regexp: 4.0.0\n      eslint-scope: 8.2.0\n      eslint-visitor-keys: 4.2.0\n      espree: 10.3.0\n      esquery: 1.6.0\n      esutils: 2.0.3\n      fast-deep-equal: 3.1.3\n      file-entry-cache: 8.0.0\n      find-up: 5.0.0\n      glob-parent: 6.0.2\n      ignore: 5.3.2\n      imurmurhash: 0.1.4\n      is-glob: 4.0.3\n      json-stable-stringify-without-jsonify: 1.0.1\n      lodash.merge: 4.6.2\n      minimatch: 3.1.2\n      natural-compare: 1.4.0\n      optionator: 0.9.4\n    optionalDependencies:\n      jiti: 2.4.1\n    transitivePeerDependencies:\n      - supports-color\n\n  espree@10.3.0:\n    dependencies:\n      acorn: 8.14.0\n      acorn-jsx: 5.3.2(acorn@8.14.0)\n      eslint-visitor-keys: 4.2.0\n\n  esquery@1.6.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  esrecurse@4.3.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  estraverse@4.3.0: {}\n\n  estraverse@5.3.0: {}\n\n  esutils@2.0.3: {}\n\n  events@3.3.0: {}\n\n  fast-deep-equal@3.1.3: {}\n\n  fast-glob@3.3.2:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fast-json-stable-stringify@2.1.0: {}\n\n  fast-levenshtein@2.0.6: {}\n\n  fastq@1.17.1:\n    dependencies:\n      reusify: 1.0.4\n\n  fdir@6.4.2(picomatch@4.0.2):\n    optionalDependencies:\n      picomatch: 4.0.2\n\n  file-entry-cache@8.0.0:\n    dependencies:\n      flat-cache: 4.0.1\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  find-up@5.0.0:\n    dependencies:\n      locate-path: 6.0.0\n      path-exists: 4.0.0\n\n  flat-cache@4.0.1:\n    dependencies:\n      flatted: 3.3.2\n      keyv: 4.5.4\n\n  flatted@3.3.2: {}\n\n  for-each@0.3.3:\n    dependencies:\n      is-callable: 1.2.7\n\n  foreground-child@3.3.0:\n    dependencies:\n      cross-spawn: 7.0.6\n      signal-exit: 4.1.0\n\n  fsevents@2.3.3:\n    optional: true\n\n  function-bind@1.1.2: {}\n\n  function.prototype.name@1.1.6:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      functions-have-names: 1.2.3\n\n  functions-have-names@1.2.3: {}\n\n  gensync@1.0.0-beta.2: {}\n\n  get-caller-file@2.0.5: {}\n\n  get-intrinsic@1.2.4:\n    dependencies:\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      has-proto: 1.1.0\n      has-symbols: 1.1.0\n      hasown: 2.0.2\n\n  get-symbol-description@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n\n  get-tsconfig@4.8.1:\n    dependencies:\n      resolve-pkg-maps: 1.0.0\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-to-regexp@0.4.1: {}\n\n  glob@10.4.5:\n    dependencies:\n      foreground-child: 3.3.0\n      jackspeak: 3.4.3\n      minimatch: 9.0.5\n      minipass: 7.1.2\n      package-json-from-dist: 1.0.1\n      path-scurry: 1.11.1\n\n  globals@11.12.0: {}\n\n  globals@14.0.0: {}\n\n  globals@15.13.0: {}\n\n  globalthis@1.0.4:\n    dependencies:\n      define-properties: 1.2.1\n      gopd: 1.2.0\n\n  gopd@1.2.0: {}\n\n  graceful-fs@4.2.11: {}\n\n  graphemer@1.4.0: {}\n\n  has-bigints@1.0.2: {}\n\n  has-flag@4.0.0: {}\n\n  has-property-descriptors@1.0.2:\n    dependencies:\n      es-define-property: 1.0.0\n\n  has-proto@1.1.0:\n    dependencies:\n      call-bind: 1.0.7\n\n  has-symbols@1.1.0: {}\n\n  has-tostringtag@1.0.2:\n    dependencies:\n      has-symbols: 1.1.0\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  html-escaper@2.0.2: {}\n\n  ignore@5.3.2: {}\n\n  import-fresh@3.3.0:\n    dependencies:\n      parent-module: 1.0.1\n      resolve-from: 4.0.0\n\n  imurmurhash@0.1.4: {}\n\n  internal-slot@1.0.7:\n    dependencies:\n      es-errors: 1.3.0\n      hasown: 2.0.2\n      side-channel: 1.0.6\n\n  is-array-buffer@3.0.4:\n    dependencies:\n      call-bind: 1.0.7\n      get-intrinsic: 1.2.4\n\n  is-async-function@2.0.0:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-bigint@1.1.0:\n    dependencies:\n      has-bigints: 1.0.2\n\n  is-boolean-object@1.2.0:\n    dependencies:\n      call-bind: 1.0.7\n      has-tostringtag: 1.0.2\n\n  is-callable@1.2.7: {}\n\n  is-core-module@2.15.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-data-view@1.0.1:\n    dependencies:\n      is-typed-array: 1.1.13\n\n  is-date-object@1.0.5:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-finalizationregistry@1.1.0:\n    dependencies:\n      call-bind: 1.0.7\n\n  is-fullwidth-code-point@3.0.0: {}\n\n  is-generator-function@1.0.10:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-map@2.0.3: {}\n\n  is-negative-zero@2.0.3: {}\n\n  is-number-object@1.1.0:\n    dependencies:\n      call-bind: 1.0.7\n      has-tostringtag: 1.0.2\n\n  is-number@7.0.0: {}\n\n  is-regex@1.2.0:\n    dependencies:\n      call-bind: 1.0.7\n      gopd: 1.2.0\n      has-tostringtag: 1.0.2\n      hasown: 2.0.2\n\n  is-set@2.0.3: {}\n\n  is-shared-array-buffer@1.0.3:\n    dependencies:\n      call-bind: 1.0.7\n\n  is-string@1.1.0:\n    dependencies:\n      call-bind: 1.0.7\n      has-tostringtag: 1.0.2\n\n  is-symbol@1.1.0:\n    dependencies:\n      call-bind: 1.0.7\n      has-symbols: 1.1.0\n      safe-regex-test: 1.0.3\n\n  is-typed-array@1.1.13:\n    dependencies:\n      which-typed-array: 1.1.16\n\n  is-weakmap@2.0.2: {}\n\n  is-weakref@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n\n  is-weakset@2.0.3:\n    dependencies:\n      call-bind: 1.0.7\n      get-intrinsic: 1.2.4\n\n  isarray@2.0.5: {}\n\n  isexe@2.0.0: {}\n\n  istanbul-lib-coverage@3.2.2: {}\n\n  istanbul-lib-report@3.0.1:\n    dependencies:\n      istanbul-lib-coverage: 3.2.2\n      make-dir: 4.0.0\n      supports-color: 7.2.0\n\n  istanbul-reports@3.1.7:\n    dependencies:\n      html-escaper: 2.0.2\n      istanbul-lib-report: 3.0.1\n\n  jackspeak@3.4.3:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jest-worker@27.5.1:\n    dependencies:\n      '@types/node': 22.10.1\n      merge-stream: 2.0.0\n      supports-color: 8.1.1\n\n  jiti@2.4.1: {}\n\n  js-tokens@4.0.0: {}\n\n  js-yaml@4.1.0:\n    dependencies:\n      argparse: 2.0.1\n\n  jsesc@3.0.2: {}\n\n  json-buffer@3.0.1: {}\n\n  json-parse-even-better-errors@2.3.1: {}\n\n  json-schema-traverse@0.4.1: {}\n\n  json-stable-stringify-without-jsonify@1.0.1: {}\n\n  json5@1.0.2:\n    dependencies:\n      minimist: 1.2.8\n\n  json5@2.2.3: {}\n\n  keyv@4.5.4:\n    dependencies:\n      json-buffer: 3.0.1\n\n  levn@0.4.1:\n    dependencies:\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n\n  lilconfig@3.1.3: {}\n\n  loader-runner@4.3.0: {}\n\n  locate-path@6.0.0:\n    dependencies:\n      p-locate: 5.0.0\n\n  lodash.merge@4.6.2: {}\n\n  lru-cache@10.4.3: {}\n\n  lru-cache@5.1.1:\n    dependencies:\n      yallist: 3.1.1\n\n  make-dir@4.0.0:\n    dependencies:\n      semver: 7.6.3\n\n  merge-stream@2.0.0: {}\n\n  merge2@1.4.1: {}\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  mime-db@1.52.0: {}\n\n  mime-types@2.1.35:\n    dependencies:\n      mime-db: 1.52.0\n\n  minimatch@3.1.2:\n    dependencies:\n      brace-expansion: 1.1.11\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.1\n\n  minimist@1.2.8: {}\n\n  minipass@7.1.2: {}\n\n  ms@2.1.3: {}\n\n  nanoid@2.1.11: {}\n\n  nanoid@3.3.8: {}\n\n  nanoid@5.0.9: {}\n\n  nanospinner@1.2.0:\n    dependencies:\n      picocolors: 1.1.1\n\n  natural-compare-lite@1.4.0: {}\n\n  natural-compare@1.4.0: {}\n\n  neo-async@2.6.2: {}\n\n  node-releases@2.0.18: {}\n\n  object-inspect@1.13.3: {}\n\n  object-keys@1.1.1: {}\n\n  object.assign@4.1.5:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      has-symbols: 1.1.0\n      object-keys: 1.1.1\n\n  object.fromentries@2.0.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-object-atoms: 1.0.0\n\n  object.groupby@1.0.3:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n\n  object.values@1.2.0:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  optionator@0.9.4:\n    dependencies:\n      deep-is: 0.1.4\n      fast-levenshtein: 2.0.6\n      levn: 0.4.1\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n      word-wrap: 1.2.5\n\n  p-limit@3.1.0:\n    dependencies:\n      yocto-queue: 0.1.0\n\n  p-locate@5.0.0:\n    dependencies:\n      p-limit: 3.1.0\n\n  package-json-from-dist@1.0.1: {}\n\n  parent-module@1.0.1:\n    dependencies:\n      callsites: 3.1.0\n\n  path-exists@4.0.0: {}\n\n  path-key@3.1.1: {}\n\n  path-parse@1.0.7: {}\n\n  path-scurry@1.11.1:\n    dependencies:\n      lru-cache: 10.4.3\n      minipass: 7.1.2\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  picomatch@4.0.2: {}\n\n  possible-typed-array-names@1.0.0: {}\n\n  postcss@8.4.49:\n    dependencies:\n      nanoid: 3.3.8\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  prelude-ls@1.2.1: {}\n\n  punycode@2.3.1: {}\n\n  queue-microtask@1.2.3: {}\n\n  random-bytes@1.0.0: {}\n\n  randombytes@2.1.0:\n    dependencies:\n      safe-buffer: 5.2.1\n\n  readdirp@4.0.2: {}\n\n  reflect.getprototypeof@1.0.7:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n      gopd: 1.2.0\n      which-builtin-type: 1.2.0\n\n  regexp.prototype.flags@1.5.3:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-errors: 1.3.0\n      set-function-name: 2.0.2\n\n  require-directory@2.1.1: {}\n\n  requireindex@1.2.0: {}\n\n  resolve-from@4.0.0: {}\n\n  resolve-pkg-maps@1.0.0: {}\n\n  resolve@1.22.8:\n    dependencies:\n      is-core-module: 2.15.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  reusify@1.0.4: {}\n\n  rndm@1.2.0: {}\n\n  rollup@4.28.0:\n    dependencies:\n      '@types/estree': 1.0.6\n    optionalDependencies:\n      '@rollup/rollup-android-arm-eabi': 4.28.0\n      '@rollup/rollup-android-arm64': 4.28.0\n      '@rollup/rollup-darwin-arm64': 4.28.0\n      '@rollup/rollup-darwin-x64': 4.28.0\n      '@rollup/rollup-freebsd-arm64': 4.28.0\n      '@rollup/rollup-freebsd-x64': 4.28.0\n      '@rollup/rollup-linux-arm-gnueabihf': 4.28.0\n      '@rollup/rollup-linux-arm-musleabihf': 4.28.0\n      '@rollup/rollup-linux-arm64-gnu': 4.28.0\n      '@rollup/rollup-linux-arm64-musl': 4.28.0\n      '@rollup/rollup-linux-powerpc64le-gnu': 4.28.0\n      '@rollup/rollup-linux-riscv64-gnu': 4.28.0\n      '@rollup/rollup-linux-s390x-gnu': 4.28.0\n      '@rollup/rollup-linux-x64-gnu': 4.28.0\n      '@rollup/rollup-linux-x64-musl': 4.28.0\n      '@rollup/rollup-win32-arm64-msvc': 4.28.0\n      '@rollup/rollup-win32-ia32-msvc': 4.28.0\n      '@rollup/rollup-win32-x64-msvc': 4.28.0\n      fsevents: 2.3.3\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  safe-array-concat@1.1.2:\n    dependencies:\n      call-bind: 1.0.7\n      get-intrinsic: 1.2.4\n      has-symbols: 1.1.0\n      isarray: 2.0.5\n\n  safe-buffer@5.2.1: {}\n\n  safe-regex-test@1.0.3:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-regex: 1.2.0\n\n  schema-utils@3.3.0:\n    dependencies:\n      '@types/json-schema': 7.0.15\n      ajv: 6.12.6\n      ajv-keywords: 3.5.2(ajv@6.12.6)\n\n  secure-random-string@1.1.4: {}\n\n  semver@6.3.1: {}\n\n  semver@7.6.3: {}\n\n  serialize-javascript@6.0.2:\n    dependencies:\n      randombytes: 2.1.0\n\n  set-function-length@1.2.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.4\n      gopd: 1.2.0\n      has-property-descriptors: 1.0.2\n\n  set-function-name@2.0.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      functions-have-names: 1.2.3\n      has-property-descriptors: 1.0.2\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@3.0.0: {}\n\n  shortid@2.2.16:\n    dependencies:\n      nanoid: 2.1.11\n\n  side-channel@1.0.6:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n      object-inspect: 1.13.3\n\n  signal-exit@4.1.0: {}\n\n  size-limit@11.1.6:\n    dependencies:\n      bytes-iec: 3.1.1\n      chokidar: 4.0.1\n      jiti: 2.4.1\n      lilconfig: 3.1.3\n      nanospinner: 1.2.0\n      picocolors: 1.1.1\n      tinyglobby: 0.2.10\n\n  source-map-js@1.2.1: {}\n\n  source-map-support@0.5.21:\n    dependencies:\n      buffer-from: 1.1.2\n      source-map: 0.6.1\n\n  source-map@0.6.1: {}\n\n  string-width@4.2.3:\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  string-width@5.1.2:\n    dependencies:\n      eastasianwidth: 0.2.0\n      emoji-regex: 9.2.2\n      strip-ansi: 7.1.0\n\n  string.prototype.trim@1.2.9:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-object-atoms: 1.0.0\n\n  string.prototype.trimend@1.0.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  string.prototype.trimstart@1.0.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  strip-ansi@6.0.1:\n    dependencies:\n      ansi-regex: 5.0.1\n\n  strip-ansi@7.1.0:\n    dependencies:\n      ansi-regex: 6.1.0\n\n  strip-bom@3.0.0: {}\n\n  strip-json-comments@3.1.1: {}\n\n  supports-color@7.2.0:\n    dependencies:\n      has-flag: 4.0.0\n\n  supports-color@8.1.1:\n    dependencies:\n      has-flag: 4.0.0\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  tapable@2.2.1: {}\n\n  terser-webpack-plugin@5.3.10(webpack@5.97.0):\n    dependencies:\n      '@jridgewell/trace-mapping': 0.3.25\n      jest-worker: 27.5.1\n      schema-utils: 3.3.0\n      serialize-javascript: 6.0.2\n      terser: 5.36.0\n      webpack: 5.97.0\n\n  terser@5.36.0:\n    dependencies:\n      '@jridgewell/source-map': 0.3.6\n      acorn: 8.14.0\n      commander: 2.20.3\n      source-map-support: 0.5.21\n\n  test-exclude@7.0.1:\n    dependencies:\n      '@istanbuljs/schema': 0.1.3\n      glob: 10.4.5\n      minimatch: 9.0.5\n\n  tinybench@3.0.7: {}\n\n  tinyglobby@0.2.10:\n    dependencies:\n      fdir: 6.4.2(picomatch@4.0.2)\n      picomatch: 4.0.2\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  ts-api-utils@1.4.3(typescript@5.5.2):\n    dependencies:\n      typescript: 5.5.2\n\n  tsconfig-paths@3.15.0:\n    dependencies:\n      '@types/json5': 0.0.29\n      json5: 1.0.2\n      minimist: 1.2.8\n      strip-bom: 3.0.0\n\n  type-check@0.4.0:\n    dependencies:\n      prelude-ls: 1.2.1\n\n  typed-array-buffer@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-typed-array: 1.1.13\n\n  typed-array-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.2.0\n      has-proto: 1.1.0\n      is-typed-array: 1.1.13\n\n  typed-array-byte-offset@1.0.3:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.2.0\n      has-proto: 1.1.0\n      is-typed-array: 1.1.13\n      reflect.getprototypeof: 1.0.7\n\n  typed-array-length@1.0.7:\n    dependencies:\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.2.0\n      is-typed-array: 1.1.13\n      possible-typed-array-names: 1.0.0\n      reflect.getprototypeof: 1.0.7\n\n  typescript-eslint@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2):\n    dependencies:\n      '@typescript-eslint/eslint-plugin': 8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.5.2)\n      eslint: 9.16.0(jiti@2.4.1)\n    optionalDependencies:\n      typescript: 5.5.2\n    transitivePeerDependencies:\n      - supports-color\n\n  typescript@5.5.2: {}\n\n  uid-safe@2.1.5:\n    dependencies:\n      random-bytes: 1.0.0\n\n  uid@2.0.2:\n    dependencies:\n      '@lukeed/csprng': 1.1.0\n\n  unbox-primitive@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n      has-bigints: 1.0.2\n      has-symbols: 1.1.0\n      which-boxed-primitive: 1.1.0\n\n  undici-types@6.20.0: {}\n\n  update-browserslist-db@1.1.1(browserslist@4.24.2):\n    dependencies:\n      browserslist: 4.24.2\n      escalade: 3.2.0\n      picocolors: 1.1.1\n\n  uri-js@4.4.1:\n    dependencies:\n      punycode: 2.3.1\n\n  uuid@11.0.3: {}\n\n  v8-to-istanbul@9.3.0:\n    dependencies:\n      '@jridgewell/trace-mapping': 0.3.25\n      '@types/istanbul-lib-coverage': 2.0.6\n      convert-source-map: 2.0.0\n\n  vite@6.0.2(@types/node@22.10.1)(jiti@2.4.1)(terser@5.36.0):\n    dependencies:\n      esbuild: 0.24.0\n      postcss: 8.4.49\n      rollup: 4.28.0\n    optionalDependencies:\n      '@types/node': 22.10.1\n      fsevents: 2.3.3\n      jiti: 2.4.1\n      terser: 5.36.0\n\n  watchpack@2.4.2:\n    dependencies:\n      glob-to-regexp: 0.4.1\n      graceful-fs: 4.2.11\n\n  webpack-sources@3.2.3: {}\n\n  webpack@5.97.0:\n    dependencies:\n      '@types/eslint-scope': 3.7.7\n      '@types/estree': 1.0.6\n      '@webassemblyjs/ast': 1.14.1\n      '@webassemblyjs/wasm-edit': 1.14.1\n      '@webassemblyjs/wasm-parser': 1.14.1\n      acorn: 8.14.0\n      browserslist: 4.24.2\n      chrome-trace-event: 1.0.4\n      enhanced-resolve: 5.17.1\n      es-module-lexer: 1.5.4\n      eslint-scope: 5.1.1\n      events: 3.3.0\n      glob-to-regexp: 0.4.1\n      graceful-fs: 4.2.11\n      json-parse-even-better-errors: 2.3.1\n      loader-runner: 4.3.0\n      mime-types: 2.1.35\n      neo-async: 2.6.2\n      schema-utils: 3.3.0\n      tapable: 2.2.1\n      terser-webpack-plugin: 5.3.10(webpack@5.97.0)\n      watchpack: 2.4.2\n      webpack-sources: 3.2.3\n    transitivePeerDependencies:\n      - '@swc/core'\n      - esbuild\n      - uglify-js\n\n  which-boxed-primitive@1.1.0:\n    dependencies:\n      is-bigint: 1.1.0\n      is-boolean-object: 1.2.0\n      is-number-object: 1.1.0\n      is-string: 1.1.0\n      is-symbol: 1.1.0\n\n  which-builtin-type@1.2.0:\n    dependencies:\n      call-bind: 1.0.7\n      function.prototype.name: 1.1.6\n      has-tostringtag: 1.0.2\n      is-async-function: 2.0.0\n      is-date-object: 1.0.5\n      is-finalizationregistry: 1.1.0\n      is-generator-function: 1.0.10\n      is-regex: 1.2.0\n      is-weakref: 1.0.2\n      isarray: 2.0.5\n      which-boxed-primitive: 1.1.0\n      which-collection: 1.0.2\n      which-typed-array: 1.1.16\n\n  which-collection@1.0.2:\n    dependencies:\n      is-map: 2.0.3\n      is-set: 2.0.3\n      is-weakmap: 2.0.2\n      is-weakset: 2.0.3\n\n  which-typed-array@1.1.16:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.2.0\n      has-tostringtag: 1.0.2\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  word-wrap@1.2.5: {}\n\n  wrap-ansi@7.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@8.1.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 5.1.2\n      strip-ansi: 7.1.0\n\n  y18n@5.0.8: {}\n\n  yallist@3.1.1: {}\n\n  yargs-parser@21.1.1: {}\n\n  yargs@17.7.2:\n    dependencies:\n      cliui: 8.0.1\n      escalade: 3.2.0\n      get-caller-file: 2.0.5\n      require-directory: 2.1.1\n      string-width: 4.2.3\n      y18n: 5.0.8\n      yargs-parser: 21.1.1\n\n  yocto-queue@0.1.0: {}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "url-alphabet",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}