{
  "metadata": {
    "timestamp": 1736563286839,
    "page": 270,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "browserslist/browserslist",
      "stars": 13103,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "node_modules/\n\ncoverage/\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0517578125,
          "content": "test/\ncoverage/\n\nimg/\ntsconfig.json\ngrammar.w3c-ebnf\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.7294921875,
          "content": "# Change Log\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n## 4.24.4\n* Improved performance by using caching better (by @thoughtspile).\n\n## 4.24.3\n* Updated Firefox ESR (by @fpapado).\n\n## 4.24.2\n* Clarify outdated `caniuse-lite` warning text.\n\n## 4.24.1\n* Added months since last `caniuse-lite` update to the warning (by @mezhnin).\n\n## 4.24.0\n* Added `browserslist.findConfigFile()` helper (by @JLHwung).\n\n## 4.23.3\n* Fixed `>=` query for `ios` (by @syi0808).\n\n## 4.23.2\n* Updated Firefox ESR.\n\n## 4.23.1\n* Fixed feature query with mobile to desktop when caniuse lags (by @steverep).\n\n## 4.23.0\n* Added `BROWSERSLIST_ROOT_PATH` (by @teleclimber).\n\n## 4.22.3\n* Fixed white spaces support in `supports` query (@g-plane).\n* Fixed shared config like `@company/package/browserslist-config` (@boucodes).\n\n## 4.22.2\n* Fixed idempotency in time queries with `mobileToDesktop` (by Aliaksei Sapach).\n\n## 4.22.1\n* Updated Firefox ESR (by @lerkor).\n\n## 4.22\n* Added `fully supports` query (by Ben Scott).\n* Added `partially supports` alias for `supports` query (by Ben Scott).\n\n## 4.21.11\n* Added warning to `--update-db` to move to new CLI (by Ivan Vasilev).\n* Fixed docs (by Tatsunori Uchino).\n\n## 4.21.10\n* Updated Firefox ESR.\n\n## 4.21.9\n* Fixed Opera Mobile edge cases (by Steve Repsher).\n\n## 4.21.8\n* Fixed `supports` query and `mobileToDesktop` (by Steve Repsher).\n\n## 4.21.7\n* Fixed last queries for Android (by Steve Repsher).\n\n## 4.21.6\n* Fixed time queries with `mobileToDesktop` (by Steve Repsher).\n* Fixed docs (by Tatsunori Uchino, Will Stone, and Dominik Pschenitschni).\n\n## 4.21.5\n* Fixed running Browserslist in browser environment.\n\n## 4.21.4\n* Updated Firefox ESR.\n\n## 4.21.3\n* Improved unknown region and unknown feature error (by Alexander Chabin).\n\n## 4.21.2\n* Updated Firefox ESR.\n\n## 4.21.1\n* Fixed parsing days in `since` query.\n\n## 4.21\n* IE 11 was added to `dead` and removed from `defaults` (by Albert Portnoy).\n* Added `browserslist.parse()` to get config AST for analysis.\n* Moved `--update-db` script to `update-browserslist-db` tool.\n* Fixed Unicode BOM support in `package.json`.\n\n## 4.20.4\n* Fixed Opera in `mobileToDesktop` (by Pig Fang).\n\n## 4.20.3\n* Added `Baidu` to `dead` browsers (by Igor Lukanin).\n\n## 4.20.2\n* Fixed `package.funding` URL format.\n\n## 4.20.1\n* Fixed `package.funding`.\n* Fixed docs (by Michael Lohmann).\n\n## 4.20\n* Added `last 2 node versions` and `last 2 node major versions` (by @g-plane).\n\n## 4.19.3\n* Updated Firefox ESR (by Christophe Coevoet).\n\n## 4.19.2\n* Fixed `--help` output.\n\n## 4.19.1\n* Fixed `throwOnMissing` types (by Øyvind Saltvik).\n\n## 4.19\n* Added queries grammar definition (by Pig Fang).\n* Added `throwOnMissing` option (by Øyvind Saltvik).\n* Fixed `null` data ignoring in `< 50% in CN` (byPig Fang).\n* Fixed data parsing in `in my stats` (by Sun Xiaoran).\n* Fixed `yarn.lock` support with `integrity` (by Alexey Berezin).\n* Fixed Yarn Berry error message in `--update-db`.\n\n## 4.18.1\n* Fixed case inventiveness for `cover` queries (by Pig Fang).\n* Fixed `since 1970` query for `null` in release date (by Pig Fang).\n\n## 4.18\n* Added `--ignore-unknown-versions` CLI option (by Pig Fang).\n\n## 4.17.6\n* Fixed sharable config resolution (by Adaline Valentina Simonian).\n\n## 4.17.5\n* Fixed `--update-db` for some `pnpm` cases.\n\n## 4.17.4\n* Reduced package size.\n\n## 4.17.3\n* Use `picocolors` for color output in `--update-db`.\n\n## 4.17.2\n* Reduced package size.\n\n## 4.17.1\n* Use Nano Colors for color output in `--update-db`.\n\n## 4.17\n* Added `yarn` 3 support to `--update-db` (by Himank Pathak).\n\n## 4.16.8\n* Updated Firefox ESR.\n\n## 4.16.7\n* Fixed `oudated caniuse-lite` warning text (by Paul Verest).\n* Fixed docs (by Alexander Belov).\n\n## 4.16.6\n* Fixed `npm-shrinkwrap.json` support in `--update-db` (by Geoff Newman).\n\n## 4.16.5\n* Fixed unsafe RegExp (by Yeting Li).\n\n## 4.16.4\n* Fixed unsafe RegExp.\n* Added artifactory support to `--update-db` (by Ittai Baratz).\n\n## 4.16.3\n* Fixed `--update-db`.\n\n## 4.16.2\n* Fixed `--update-db` (by @ialarmedalien).\n\n## 4.16.1\n* Fixed Chrome 4 with `mobileToDesktop` (by Aron Woost).\n\n## 4.16\n* Add `browserslist config` query.\n\n## 4.15\n* Add TypeScript types (by Dmitry Semigradsky).\n\n## 4.14.7\n* Fixed Yarn Workspaces support to `--update-db` (by Fausto Núñez Alberro).\n* Added browser changes to `--update-db` (by @AleksandrSl).\n* Added color output to `--update-db`.\n* Updated `package.funding` to have link to our Open Collective.\n\n## 4.14.6\n* Fixed Yarn support in `--update-db` (by Ivan Storck).\n* Fixed npm 7 support in `--update-db`.\n\n## 4.14.5\n* Fixed `last 2 electron versions` query (by Sergey Melyukov).\n\n## 4.14.4\n* Fixed `Unknown version 59 of op_mob` error.\n\n## 4.14.3\n* Update Firefox ESR.\n\n## 4.14.2\n* Fixed `--update-db` on Windows (by James Ross).\n* Improved `--update-db` output.\n\n## 4.14.1\n* Added `--update-db` explanation (by Justin Zelinsky).\n\n## 4.14\n* Add `BROWSERSLIST_DANGEROUS_EXTEND` support (by Timo Mayer).\n\n## 4.13\n* Added `supports` query to select browsers (by Jesús Leganés-Combarro).\n\n## 4.12.2\n* Update Firefox ESR.\n\n## 4.12.1\n* Update `package.json` scanning tool for `--update-db` (by Luke Edwards).\n* Improve docs (by Mukundan Senthil).\n* Drop Node.js 13.0-13.6 support because of ES modules bug in that versions.\n\n## 4.12\n* Add environments to shared configs (by Yevgeny Petukhov).\n* Fix docs (by Dmitry Statsenko and Thomas Pozzo di Borgo).\n\n## 4.11.1\n* Fix Node.js 6 support.\n\n## 4.11\n* Add `npx browserslist --mobile-to-desktop` (by James Ross).\n\n## 4.10\n* Add `npx browserslist --update-db` (by Ivan Solovev).\n\n## 4.9.1\n* Normalize incorrect Can I Use regional data (by Huáng Jùnliàng).\n\n## 4.9\n* Add `node X-Y` query support (by Yuping Zuo).\n\n## 4.8.7\n* Fix `last N major versions` (by Valeriy Trubachev).\n\n## 4.8.6\n* Fix `Unknown version 10 of op_mob` error in `mobileToDesktop` option.\n\n## 4.8.5\n* Fix `last N browsers` again after new `caniuse-db` API changes.\n\n## 4.8.4\n* Fix released versions detection for queries like `last N browsers`.\n* Add IE 11 Mobile to `dead` browsers.\n\n## 4.8.3\n* Fix warning message (by Anton Ivanov).\n\n## 4.8.2\n* Fix `Cannot convert undefined or null to object` (by Antoine Clausse).\n* Fix `mobileToDesktop` in `defaults` (by Huáng Jùnliàng).\n\n## 4.8.1\n* Fix Chrome and `mobileToDesktop` (by Huáng Jùnliàng).\n\n## 4.8\n* Add `> 5% in browserslist-config-my stats` query (by Andrew Leedham).\n* Improve docs (by Danny van Kooten).\n\n## 4.7.3\n* Add funding link for `npm fund`.\n\n## 4.7.2\n* Add cache for query parsing.\n* Improve config caching (by Kārlis Gaņģis).\n* Update Firefox ESR.\n\n## 4.7.1\n* Improve caching.\n\n## 4.7\n* Add PhantomJS queries.\n* Improve docs (by Dorian Koehring).\n\n## 4.6.6\n* Remove Safari from `dead` query.\n\n## 4.6.5\n* Add Samsung 4 browser to `dead` query.\n* Remove dirty fix for `android all` error.\n\n## 4.6.4\n* Add Firefox 68 to `Firefox ESR` query.\n\n## 4.6.3\n* Dirty fix for `android all` error.\n\n## 4.6.2\n* Fix `last x version` and similar queries for Android (by Tony Ross).\n\n## 4.6.1\n* Fix patch version support for Electron (by Kilian Valkhof).\n\n## 4.6\n* Add `mobileToDesktop` option (by Nicolò Ribaudo).\n\n## 4.5.6\n* Make `Node > 5` and `node > 5` queries case insensitive.\n\n## 4.5.5\n* Fix CLI help (by Marcel Gerber).\n* Add KaiOS browser to docs.\n\n## 4.5.4\n* Update docs (by Andrew Leedham and Dan Onoshko).\n\n## 4.5.3\n* Fix splitting string to queries.\n\n## 4.5.2\n* Show default browsers in CLI on project without config.\n\n## 4.5.1\n* Improve text for the warning about outdated `caniuse-lite`.\n\n## 4.5\n* Add `>=`, `>`, and `<=` support for Node.js version (by Mathspy Terabithian).\n\n## 4.4.2\n* Allow to have string in `package.json` (by @dmarkhas).\n\n## 4.4.1\n* Allow to use `.` in scope name of shareable config (by Gustav Nikolaj).\n\n## 4.4\n* Added `and` and `or` keywords to combine queries (by Jon Ege Ronnenberg).\n\n## 4.3.7\n* Fix fraction years support in `last 1.5 years` (by Clément P).\n* Fix version-less browser support.\n\n## 4.3.6\n* Fix version-less browser support in custom statistics (by Alex Walter).\n\n## 4.3.5\n* Fix `not` query for wrong Can I Use data.\n\n## 4.3.4\n* Allow to update `node-releases` without new Browserslist releases.\n\n## 4.3.3\n* Fix Node.js 11 support.\n\n## 4.3.2\n* Fix `Unknown version 11 of Node.js` error (by Dan Onoshko).\n\n## 4.3.1\n* Fix conflict between `caniuse-lite` and custom browsers statistics.\n\n## 4.3\n* Allow to use `extends browserslist-config-a/file` (by @Schweinepriester).\n\n## 4.2.1\n* Use new `node-releases` support (by Sergey Rubanov).\n\n## 4.2\n* Add `--json` argument for CLI.\n* Allow to pass multiple areas in CLI by `--coverage=US,alt-AS,global`.\n\n## 4.1.2\n* Better `unknow query` error message.\n* Use latest `node-releases`.\n\n## 4.1.1\n* Update Firefox ESR versions.\n\n## 4.1\n* Add `current node` query.\n* Add contributors widget to docs (by Sergey Surkov).\n\n## 4.0.2\n* Fix new `node-releases` support (by Sergey Rubanov).\n* Fix error text (by Josh Smith).\n\n## 4.0.1\n* Reduce npm package size.\n* Fix docs.\n\n## 4.0.0 “Erinaceus amurensis”\n* Add `node X` and `maintained node versions` queries (by Pavel Vostrikov).\n* Remove Node.js 4 support.\n* Show warning if `caniuse-lite` is old (by Anton Tuzhik).\n* Add comma support in config file.\n\n## 3.2.8\n* Add IE 9-5.5 to dead browsers.\n* Remove development configs from npm package.\n\n## 3.2.7\n* Add Firefox 60 as Firefox ESR.\n\n## 3.2.6\n* Add Opera Mini 12 to dead browsers.\n* Update docs (by Jamie Kyle).\n\n## 3.2.5\n* Fix excluding Opera Mini and other browsers with `all` version.\n\n## 3.2.4\n* Resolve shareable config from current working directory.\n\n## 3.2.3\n* Fix `package.json` config validation for single string case.\n* Fix CLI error reporting.\n\n## 3.2.2\n* Add `package.json` config validation.\n* Move project to `browserlist` GitHub organization.\n\n## 3.2.1\n* Fix error text (by Steve Schrab).\n\n## 3.2\n* Add `cover 99%` query (by Vasily Fedoseyev).\n* Add `cover 99% in US` query (by Vasily Fedoseyev).\n* Add `cover 99% in my stats` query (by Vasily Fedoseyev).\n* Add `\"my stats\"` support to `browserlist.coverage()` (by Vasily Fedoseyev).\n\n## 3.1.2\n* Add more clear error on missed browser version.\n\n## 3.1.1\n* Fix JSDoc (by Sylvain Pollet-Villard).\n\n## 3.1\n* Add `ignoreUnknownVersions` option.\n* Fix docs (by Pascal Duez).\n\n## 3.0 “Atelerix sclateri”\n* Remove country statistics from client-side build of Browserslist.\n* Change `> 1%` to `> 0.5%` in default query.\n* Add `not dead` to default query.\n* Change default environment to `production` (by Marco Fugaro).\n* Add `dead` query support with IE 10 and BlackBerry browser.\n* Add multiple environments in one section support (by Evilebot Tnawi).\n* Add custom statistics support to `browserlist.coverage()`.\n* Fix `path` option check.\n\n## 2.11.3\n* Fix for `path: undefined` option.\n\n## 2.11.2\n* Remove Node.js specific code from webpack build.\n\n## 2.11.1\n* Fix using Browserslist in browser with `path` but without `fs`.\n\n## 2.11\n* Add `last 2 years` query support (by James Harris).\n\n## 2.10.2\n* Fix Browserify support.\n\n## 2.10.1\n* Fix using Browserslist without `process` (by Andrew Patton).\n\n## 2.10\n* Add `< 1%` and `<= 1%` queries support (by August Kaiser).\n\n## 2.9.1\n* Fix unknown query on trailing spaces in query.\n\n## 2.9\n* Add `last Electron versions` and `last Electron major versions` queries\n  (by Louis Mouhat).\n\n## 2.8\n* Add `since 2016-03` and `since 2016-03-20` queries support (by Andrew Blick).\n\n## 2.7\n* Add `since 2016` queries support (by Igor Deryabin).\n\n## 2.6.1\n* Fix `Path must be a string` error.\n\n## 2.6\n* By default load config from current directory in CLI tool.\n\n## 2.5.1\n* Allow `@scope/browserlist-config` config name (by Jamie Connolly).\n\n## 2.5\n* Add `extends` query (by YellowKirby).\n\n## 2.4.1\n* Throw error if `package.json` contain `browserlist` instead of `browserslist`.\n\n## 2.4\n* Add `last n major versions` query (by John Sanders).\n\n## 2.3.3\n* Fix browsers support.\n\n## 2.3.2\n* Fix `> 0` query for browsers with one version (by Nikolay Solovyov).\n\n## 2.3.1\n* Reduce library size.\n\n## 2.3\n* Add `unreleased versions` and `unreleased Chrome versions` queries.\n\n## 2.2.2\n* Fix `Path must be a string` error (by Pieter Beulque).\n\n## 2.2.1\n* Fix security issue with regions dynamic `require`.\n\n## 2.2\n* Add region usage statistics support (by Clément P).\n\n## 2.1.5\n* Remove Firefox 45 from Firefox ESR.\n\n## 2.1.4\n* Use both ESR versions when they actual.\n\n## 2.1.3\n* Add warning on first exclude query.\n\n## 2.1.2\n* Fix non-Node.js environments support.\n\n## 2.1.1\n* Fix CLI arguments parsing.\n\n## 2.1\n* Add `>= 5%`, `>= 5% in US` and `>= 5% in my stats` queries.\n\n## 2.0 “Atelerix frontalis”\n* `last n versions` returns versions for all browsers, not only main browsers.\n* Cache file system operations (by Aarni Koskela).\n* Use `caniuse-lite` 1 MB instead of `caniuse-db` 7 MB (by Ben Briggs).\n* Add `.browserslistrc` config support.\n* Add QQ Browser for Android support.\n* Add tests for CLI (by Zhulduz Zhankenova).\n\n## 1.7.7\n* Update Firefox ESR.\n\n## 1.7.6\n* Fix Android Chrome selection.\n\n## 1.7.5\n* Fix combining `not` query with country based statistics.\n* Fix `--env` argument in CLI (by Tuure Savuoja).\n\n## 1.7.4\n* Speed up browser sorting (by Aarni Koskela).\n\n## 1.7.3\n* Fix config finding when directory was passed to `path` (by Aarni Koskela).\n\n## 1.7.2\n* Fix config finding algorithm (by Aarni Koskela).\n\n## 1.7.1\n* Fix unreleased browsers version detection.\n\n## 1.7\n* Add `--config` and `--env` arguments to CLI (by Jarek Rencz).\n\n## 1.6\n* Convert Electron version to Chrome (by Kilian Valkhof).\n* Fix `0` version mistake in Can I Use data.\n\n## 1.5.2\n* Fix browser versions ordering (by Marco Massarotto).\n\n## 1.5.1\n* Fix error on `package.json` and `browserslist` in same directory.\n\n## 1.5\n* Add `package.json` support (by Stepan Kuzmin).\n* Add environments support (by Maksim Semenov and openlibser).\n* Add `browserslist-stats.json` file support (by Oleh Aloshkin).\n* Add `config` option to CLI (by Evilebot Tnawi).\n* Add JSDoc.\n* Fix tests on Windows (by Anna Stoliar).\n* Don’t set custom usage statistics globally.\n\n## 1.4\n* Add `defaults` keyword.\n\n## 1.3.6\n* Add `UCAndroid` alias to `and_uc` (by Evilebot Tnawi).\n\n## 1.3.5\n* Fix Opera Mini support. Use `op_mini all`.\n\n## 1.3.4\n* Add space-less `>1%` and `>.5%` syntax support (by Andreas Lind).\n\n## 1.3.3\n* Clean `0` versions in some country-based requests.\n\n## 1.3.2\n* Update Firefox ESR.\n\n## 1.3.1\n* Add Safari TP support.\n\n## 1.3\n* Add coverage for specific country (by Joshua Wise).\n\n## 1.2\n* Add `browserslist.coverage()` method.\n* Add `--coverage` and `-c` argument to CLI.\n* Add `-v` argument support to CLI.\n* Better error handling in CLI.\n\n## 1.1.3\n* Fix jspm support (by Sean Anderson).\n\n## 1.1.2\n* Fix jspm support (by Sean Anderson).\n\n## 1.1.1\n* Fix space-less `>10%` and `>10% in my stats` queries.\n* Normalize error messages.\n* Remove development files from npm package.\n\n## 1.1\n* Added query against custom browser usage data (by Daniel Rey).\n\n## 1.0.1\n* Update Firefox ESR (by Rouven Weßling).\n\n## 1.0 “Atelerix algirus”\n* Remove Opera 12.1 from default query.\n* Add `not` keyword and exclude browsers by query.\n* Add Microsoft Edge support (by Andrey Polischuk).\n* Add CLI for debug and non-JS usage (by Luke Horvat).\n* Use own class in Browserslist errors.\n\n## 0.5\n* Add version ranges `IE 6-9` (by Ben Briggs).\n\n## 0.4\n* Add `config` option and `BROWSERSLIST_CONFIG` environment variable support.\n* Add symlink config support.\n\n## 0.3.3\n* Fix DynJS compatibility (by Nick Howes).\n\n## 0.3.2\n* Fix joined versions on versions query (by Vincent De Oliveira).\n\n## 0.3.1\n* Fix global variable leak (by Peter Müller).\n\n## 0.3\n* Takes queries from `BROWSERSLIST` environment variable.\n\n## 0.2\n* Return Can I Use joined versions as `ios_saf 7.0-7.1`.\n\n## 0.1.3\n* Better work with Can I Use joined versions like `ios_saf 7.0-7.1`.\n* Browserslist now understands `ios_saf 7.0` or `ios_saf 7`.\n\n## 0.1.2\n* Do not create global `browserslist` var (by Maxime Thirouin).\n\n## 0.1.1\n* Sort browsers by name and version.\n\n## 0.1 “Atelerix albiventris”\n* Initial release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.091796875,
          "content": "The MIT License (MIT)\n\nCopyright 2014 Andrey Sitnik <andrey@sitnik.ru> and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.3271484375,
          "content": "# Browserslist [![Cult Of Martians][cult-img]][cult]\n\n<img width=\"120\" height=\"120\" alt=\"Browserslist logo by Anton Popov\"\n     src=\"https://browsersl.ist/logo.svg\" align=\"right\">\n\nThe config to share target browsers and Node.js versions between different\nfront-end tools. It is used in:\n\n* [Autoprefixer]\n* [Babel]\n* [postcss-preset-env]\n* [eslint-plugin-compat]\n* [stylelint-no-unsupported-browser-features]\n* [postcss-normalize]\n* [obsolete-webpack-plugin]\n\nAll tools will find target browsers automatically,\nwhen you add the following to `package.json`:\n\n```json\n  \"browserslist\": [\n    \"defaults and fully supports es6-module\",\n    \"maintained node versions\"\n  ]\n```\n\nOr in `.browserslistrc` config:\n\n```yaml\n# Browsers that we support\n\ndefaults and fully supports es6-module\nmaintained node versions\n```\n\nDevelopers set their version lists using queries like `last 2 versions`\nto be free from updating versions manually.\nBrowserslist will use [`caniuse-lite`] with [Can I Use] data for this queries.\n\nYou can check how config works at our playground: [`browsersl.ist`](https://browsersl.ist/)\n\n<a href=\"https://browsersl.ist/\">\n  <img src=\"/img/screenshot.webp\" alt=\"browsersl.ist website\">\n</a>\n\n<br>\n<br>\n<div align=\"center\">\n  <a href=\"https://evilmartians.com/?utm_source=browserslist\"><img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\"></a>  <a href=\"https://cube.dev/?ref=eco-browserslist-github\"><img src=\"https://user-images.githubusercontent.com/986756/154330861-d79ab8ec-aacb-4af8-9e17-1b28f1eccb01.svg\" alt=\"Supported by Cube\" width=\"227\" height=\"46\"></a>\n</div>\n\n[stylelint-no-unsupported-browser-features]: https://github.com/ismay/stylelint-no-unsupported-browser-features\n[obsolete-webpack-plugin]:                   https://github.com/ElemeFE/obsolete-webpack-plugin\n[eslint-plugin-compat]:                      https://github.com/amilajack/eslint-plugin-compat\n[Browserslist Example]:                      https://github.com/browserslist/browserslist-example\n[postcss-preset-env]:                        https://github.com/csstools/postcss-plugins/tree/main/plugin-packs/postcss-preset-env\n[postcss-normalize]:                         https://github.com/csstools/postcss-normalize\n[`browsersl.ist`]:                           https://browsersl.ist/\n[`caniuse-lite`]:                            https://github.com/ben-eb/caniuse-lite\n[Autoprefixer]:                              https://github.com/postcss/autoprefixer\n[Can I Use]:                                 https://caniuse.com/\n[Babel]:                                     https://github.com/babel/babel/tree/master/packages/babel-preset-env\n[cult-img]: https://cultofmartians.com/assets/badges/badge.svg\n[cult]: https://cultofmartians.com/done.html\n\n## Table of Contents\n\n* [Tools](#tools)\n* [Best Practices](#best-practices)\n* [Queries](#queries)\n* [Config File](#config-file)\n* [Shareable Configs](#shareable-configs)\n* [Configuring for Different Environments](#configuring-for-different-environments)\n* [Custom Usage Data](#custom-usage-data)\n* [JS API](#js-api)\n* [Environment Variables](#environment-variables)\n* [Cache](#cache)\n* [Security Contact](#security-contact)\n* [For Enterprise](#for-enterprise)\n\n\n## Sponsors\n\nBrowserslist needs your support. We are accepting donations\n[at Open Collective](https://opencollective.com/browserslist).\n\n<a href=\"https://www.springernature.com/\"><img src=\"https://user-images.githubusercontent.com/19343/227742503-cf7fc2b3-9cc4-481c-97b8-68414d762fda.png\" alt=\"Sponsored by Springer Nature Technology\" width=\"154\" height=\"54\"></a>      <a href=\"https://workleap.com/\"><img src=\"https://workleap.com/wp-content/uploads/2023/05/workleap-logo.svg\" alt=\"Sponsored by Workleap\" width=\"154\" height=\"40\"></a>\n\n\n## Tools\n\n### Analyze your Browserslist Config\n\n* Run `npx browserslist` in your project directory to see project’s\n  target browsers. This CLI tool is built-in and available in any project\n  with Autoprefixer.\n* [`browserslist-lint`] checks your config for popular mistakes.\n\n\n### Update `caniuse-lite`\n\n* [`update-browserslist-db`] is a CLI tool to update browsers DB for queries\n  like `last 2 version` or `>1%`.\n* [`browserslist-update-action`] is a GitHub Action to automatically\n  run `update-browserslist-db` and proposes a pull request to merge updates.\n\n\n### Show “We do not support your browser” Banner\n\n* [`browserslist-useragent-regexp`] compiles Browserslist query to a RegExp\n  to test browser useragent.\n* [`browserslist-useragent-ruby`] is a Ruby library to check browser\n  by user agent string to match Browserslist.\n\n\n### Get Statistics for `>5% in my stats`:\n\n* [`browserslist-ga`] and [`browserslist-ga-export`] download your website\n  browsers statistics to use it in `> 0.5% in my stats` query.\n* [`browserslist-new-relic`] generates a custom usage data file for Browserslist\n* [`browserslist-adobe-analytics`] uses Adobe Analytics data to target browsers\n  from your New Relic Browser data.\n\n\n### Others\n\n* [`browserslist-rs`] is a Browserslist port to Rust.\n* [`browserslist-browserstack`] runs BrowserStack tests for all browsers\n  in Browserslist config.\n\n[`browserslist-useragent-regexp`]: https://github.com/browserslist/browserslist-useragent-regexp\n[`browserslist-adobe-analytics`]:  https://github.com/xeroxinteractive/browserslist-adobe-analytics\n[`browserslist-useragent-ruby`]:   https://github.com/browserslist/browserslist-useragent-ruby\n[`browserslist-update-action`]:    https://github.com/c2corg/browserslist-update-action\n[`browserslist-browserstack`]:     https://github.com/xeroxinteractive/browserslist-browserstack\n[`browserslist-ga-export`]:        https://github.com/browserslist/browserslist-ga-export\n[`browserslist-useragent`]:        https://github.com/pastelsky/browserslist-useragent\n[`update-browserslist-db`]:        https://github.com/browserslist/update-db\n[`browserslist-new-relic`]:        https://github.com/syntactic-salt/browserslist-new-relic\n[`browserslist-lint`]:             https://github.com/browserslist/lint/\n[`browserslist-ga`]:               https://github.com/browserslist/browserslist-ga\n[`browserslist-rs`]:               https://github.com/g-plane/browserslist-rs\n[`caniuse-api`]:                   https://github.com/Nyalab/caniuse-api\n\n\n### Text Editors\n\nThese extensions will add syntax highlighting for `.browserslistrc` files.\n\n* [VS Code](https://marketplace.visualstudio.com/items?itemName=webben.browserslist)\n* [Vim](https://github.com/browserslist/vim-browserslist)\n* [WebStorm](https://plugins.jetbrains.com/plugin/16139-browserslist)\n\n## Best Practices\n\n* There is a `defaults` query, which gives a reasonable configuration\n  for most users:\n\n  ```json\n    \"browserslist\": [\n      \"defaults\"\n    ]\n  ```\n\n* If you want to change the default set of browsers, we recommend including\n  `last 2 versions, not dead, > 0.2%`. This is because `last n versions` on its\n  own does not add popular old versions, while only using a percentage of usage\n  numbers above `0.2%` will in the long run make popular browsers even more\n  popular. We might run into a monopoly and stagnation situation, as we had with\n  Internet Explorer 6. Please use this setting with caution.\n* Select browsers directly (`last 2 Chrome versions`) only if you are making\n  a web app for a kiosk with one browser. There are a lot of browsers\n  on the market. If you are making general web app you should respect\n  browsers diversity.\n* Don’t remove browsers just because you don’t know them. Opera Mini has\n  100 million users in Africa and it is more popular in the global market\n  than Microsoft Edge. Chinese QQ Browsers has more market share than Firefox\n  and desktop Safari combined.\n\n\n## Queries\n\nBrowserslist will use browsers and Node.js versions query\nfrom one of these sources:\n\n1. `.browserslistrc` config file in current or parent directories.\n2. `browserslist` key in `package.json` file in current or parent directories.\n3. `browserslist` config file in current or parent directories.\n4. `BROWSERSLIST` environment variable.\n5. If the above methods did not produce a valid result\n   Browserslist will use defaults:\n   `> 0.5%, last 2 versions, Firefox ESR, not dead`.\n\n\n### Query Composition\n\nAn `or` combiner can use the keyword `or` as well as `,`.\n`last 1 version or > 1%` is equal to `last 1 version, > 1%`.\n\n`and` query combinations are also supported to perform an\nintersection of all the previous queries:\n`last 1 version or chrome > 75 and > 1%` will select\n(`browser last version` or `Chrome since 76`) and `more than 1% marketshare`.\n\nThere are 3 different ways to combine queries as depicted below. First you start\nwith a single query and then we combine the queries to get our final list.\n\nObviously you can *not* start with a `not` combiner, since there is no left-hand\nside query to combine it with. The left-hand is always resolved as `and`\ncombiner even if `or` is used (this is an API implementation specificity).\n\n| Query combiner type | Illustration | Example |\n| ------------------- | :----------: | ------- |\n|`or`/`,` combiner <br> (union) | ![Union of queries](img/union.svg)  | `> .5% or last 2 versions` <br> `> .5%, last 2 versions` |\n| `and` combiner <br> (intersection) | ![intersection of queries](img/intersection.svg) | `> .5% and last 2 versions` |\n| `not` combiner <br> (relative complement) | ![Relative complement of queries](img/complement.svg) | These three are equivalent to one another: <br> `> .5% and not last 2 versions` <br> `> .5% or not last 2 versions` <br> `> .5%, not last 2 versions` |\n\n_A quick way to test your query is to do `npx browserslist '> 0.3%, not dead'`\nin your terminal._\n\n### Full List\n\nYou can specify the browser and Node.js versions by queries (case insensitive):\n\n* `defaults`: Browserslist’s default browsers\n  (`> 0.5%, last 2 versions, Firefox ESR, not dead`).\n* By usage statistics:\n  * `> 5%`: browsers versions selected by global usage statistics.\n  `>=`, `<` and `<=` work too.\n  * `> 5% in US`: uses USA usage statistics.\n    It accepts [two-letter country code].\n  * `> 5% in alt-AS`: uses Asia region usage statistics.\n    List of all region codes can be found at [`caniuse-lite/data/regions`].\n  * `> 5% in my stats`: uses [custom usage data].\n  * `> 5% in browserslist-config-mycompany stats`: uses [custom usage data]\n    from `browserslist-config-mycompany/browserslist-stats.json`.\n  * `cover 99.5%`: most popular browsers that provide coverage.\n  * `cover 99.5% in US`: same as above, with [two-letter country code].\n  * `cover 99.5% in my stats`: uses [custom usage data].\n* Last versions:\n  * `last 2 versions`: the last 2 versions for *each* browser.\n  * `last 2 Chrome versions`: the last 2 versions of Chrome browser.\n  * `last 2 major versions` or `last 2 iOS major versions`:\n    all minor/patch releases of last 2 major versions.\n* `dead`: browsers without official support or updates for 24 months.\n  Right now it is `IE 11`, `IE_Mob 11`, `BlackBerry 10`, `BlackBerry 7`,\n  `Samsung 4`, `OperaMobile 12.1` and all versions of `Baidu`.\n* Node.js versions:\n  * `node 10` and `node 10.4`: selects latest Node.js `10.x.x`\n  or `10.4.x` release.\n  * `last 2 node versions`: select 2 latest Node.js releases.\n  * `last 2 node major versions`: select 2 latest major-version Node.js releases.\n  * `current node`: Node.js version used by Browserslist right now.\n  * `maintained node versions`: all Node.js versions, which are [still maintained]\n    by Node.js Foundation.\n* Browsers versions:\n  * `iOS 7`: the iOS browser version 7 directly. Note, that `op_mini`\n    has special version `all`.\n  * `Firefox > 20`: versions of Firefox newer than 20.\n    `>=`, `<` and `<=` work too. It also works with Node.js.\n  * `ie 6-8`: selects an inclusive range of versions.\n  * `Firefox ESR`: the latest [Firefox Extended Support Release].\n  * `PhantomJS 2.1` and `PhantomJS 1.9`: selects Safari versions similar\n    to PhantomJS runtime.\n* `extends browserslist-config-mycompany`: take queries from\n  `browserslist-config-mycompany` npm package.\n* By browser support:<br>\n  In these example queries `es6` and `es6-module` are the the `feat` parameter\n  from the URL of the [Can I Use] page. A list of all available features can be\n  found at [`caniuse-lite/data/features`].\n  * `fully supports es6`: browsers with full support for specific\n    features. For example, `fully supports css-grid` will omit Edge 12-15, as\n    those browser versions are marked as [having partial support].\n  * `partially supports es6-module` or `supports es6-module`:  browsers with\n    full or partial support for specific features. For example,\n    `partially supports css-grid` will include Edge 12-15 support, as those\n    browser versions are marked as [having partial support].\n* `browserslist config`: the browsers defined in Browserslist config. Useful\n  in Differential Serving to modify user’s config like\n  `browserslist config and fully supports es6-module`.\n* `since 2015` or `last 2 years`: all versions released since year 2015\n  (also `since 2015-03` and `since 2015-03-10`).\n* `unreleased versions` or `unreleased Chrome versions`:\n  alpha and beta versions.\n* `not ie <= 8`: exclude IE 8 and lower from previous queries.\n\nYou can add `not ` to any query.\n\n[`caniuse-lite/data/regions`]: https://github.com/ben-eb/caniuse-lite/tree/main/data/regions\n[`caniuse-lite/data/features`]: https://github.com/ben-eb/caniuse-lite/tree/main/data/features\n[two-letter country code]:     https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements\n[custom usage data]:           #custom-usage-data\n[still maintained]:            https://github.com/nodejs/Release\n[Can I Use]:                   https://caniuse.com/\n[Firefox Extended Support Release]: https://support.mozilla.org/en-US/kb/choosing-firefox-update-channel\n[having partial support]: https://caniuse.com/css-grid\n\n### Grammar Definition\n\nThere is a [grammar specification](./grammar.w3c-ebnf) about the query syntax,\nwhich may be helpful if you're implementing a parser or something else.\n\n### Debug\n\nRun `npx browserslist` in a project directory to see which browsers were selected\nby your queries.\n\n```sh\n$ npx browserslist\nand_chr 61\nand_ff 56\nand_qq 1.2\nand_uc 11.4\nandroid 56\nbaidu 7.12\nbb 10\nchrome 62\nedge 16\nfirefox 56\nios_saf 11\nopera 48\nsafari 11\nsamsung 5\n```\n\n\n### Browsers\n\nThe following table maps browser names & their target devices into identifiers used by browserslist.\n\n| Browser Name             | Desktop         | Android                   | iOS                      | Other Mobile      |\n| ------------------------ | --------------- | ------------------------- | ------------------------ | ----------------- |\n| Android (WebView)        |                 | `Android`                 |                          |                   |\n| Baidu                    | `Baidu`         |                           |                          |                   |\n| BlackBerry               |                 |                           |                          | `BlackBerry` `bb` |\n| Chrome                   | `Chrome`        | `ChromeAndroid` `and_chr` | ↪︎ `ios_saf`<sup>2</sup> |                   |\n| Edge                     | `Edge`          | ↪︎ `and_chr`              | ↪︎ `ios_saf`<sup>2</sup> |                   |\n| Electron                 | `Electron`      |                           |                          |                   |\n| Firefox                  | `Firefox` `ff`  | `FirefoxAndroid` `and_ff` | ↪︎ `ios_saf`<sup>2</sup> |                   |\n| Internet Explorer        | `Explorer` `ie` |                           |                          | `ie_mob`          |\n| Node.js                  | `Node`          |                           |                          |                   |\n| [KaiOS Browser]          |                 |                           |                          | `kaios`           |\n| Opera                    | `Opera`         | `op_mob` <sup>1</sup>     | ↪︎ `ios_saf`<sup>2</sup> |                   |\n| [Opera Mini]<sup>3</sup> |                 | `OperaMini` `op_mini`     |                          |                   |\n| [QQ browser]             |                 | `and_qq`                  |                          |                   |\n| Safari                   | `Safari`        |                           | `iOS` `ios_saf`          |                   |\n| Samsung Internet         |                 | `Samsung`                 |                          |                   |\n| [UC Browser]             |                 | `UCAndroid` `and_uc`      |                          |                   |\n\n- `↪︎ name` implies that the browser uses the same engine captured by `name`\n- <sup>1</sup> [Opera Mobile ≈ Chrome Android](https://github.com/Fyrd/caniuse/issues/5602#issuecomment-792385127)\n- <sup>2</sup> [All iOS browsers use WebKit](https://en.wikipedia.org/wiki/WebKit)\n- <sup>3</sup> Opera Mini has 2 modes “Extreme” and “High” for data saving.\n  `op_mini` targets at the “Extreme” one.\n  “High” is compatible with the normal Opera Mobile.\n\n[KaiOS Browser]: https://medium.com/design-at-kai/what-you-didnt-know-about-kaios-browser-53937ea1636\n[QQ browser]: https://en.wikipedia.org/wiki/QQ_browser\n[Opera Mini]: https://en.wikipedia.org/wiki/Opera_Mini\n[UC Browser]: https://en.wikipedia.org/wiki/UC_Browser\n\n## Config File\n\n### `package.json`\n\nIf you want to reduce config files in project root, you can specify\nbrowsers in `package.json` with `browserslist` key:\n\n```json\n{\n  \"private\": true,\n  \"dependencies\": {\n    \"autoprefixer\": \"^6.5.4\"\n  },\n  \"browserslist\": [\n    \"last 1 version\",\n    \"> 1%\",\n    \"not dead\"\n  ]\n}\n```\n\n\n### `.browserslistrc`\n\nSeparated Browserslist config should be named `.browserslistrc`\nand have browsers queries split by a new line.\nEach line is combined with the `or` combiner. Comments starts with `#` symbol:\n\n```yaml\n# Browsers that we support\n\nlast 1 version\n> 1%\nnot dead # no browsers without security updates\n```\n\nBrowserslist will check config in every directory in `path`.\nSo, if tool process `app/styles/main.css`, you can put config to root,\n`app/` or `app/styles`.\n\nYou can specify direct path in `BROWSERSLIST_CONFIG` environment variables.\n\n\n## Shareable Configs\n\nYou can use the following query to reference an exported Browserslist config\nfrom another package:\n\n```json\n  \"browserslist\": [\n    \"extends browserslist-config-mycompany\"\n  ]\n```\n\nFor security reasons, external configuration only supports packages that have\nthe `browserslist-config-` prefix. npm scoped packages are also supported, by\nnaming or prefixing the module with `@scope/browserslist-config`, such as\n`@scope/browserslist-config` or `@scope/browserslist-config-mycompany`.\n\nIf you don’t accept Browserslist queries from users, you can disable the\nvalidation by using the or `BROWSERSLIST_DANGEROUS_EXTEND` environment variable.\n\n```sh\nBROWSERSLIST_DANGEROUS_EXTEND=1 npx webpack\n```\n\nBecause this uses `npm`'s resolution, you can also reference specific files\nin a package:\n\n```json\n  \"browserslist\": [\n    \"extends browserslist-config-mycompany/desktop\",\n    \"extends browserslist-config-mycompany/mobile\"\n  ]\n```\n\nWhen writing a shared Browserslist package, just export an array.\n`browserslist-config-mycompany/index.js`:\n\n```js\nmodule.exports = [\n  'last 1 version',\n  '> 1%',\n  'not dead'\n]\n```\n\nYou can also include a `browserslist-stats.json` file as part of your shareable\nconfig at the root and query it using\n`> 5% in browserslist-config-mycompany stats`. It uses the same format\nas `extends` and the `dangerousExtend` property as above.\n\nYou can export configs for different environments and select environment\nby `BROWSERSLIST_ENV` or `env` option in your tool:\n\n```js\nmodule.exports = {\n  development: [\n    'last 1 version'\n  ],\n  production: [\n    'last 1 version',\n    '> 1%',\n    'not dead'\n  ]\n}\n```\n\n\n## Configuring for Different Environments\n\nYou can also specify different browser queries for various environments.\nBrowserslist will choose query according to `BROWSERSLIST_ENV` or `NODE_ENV`\nvariables. If none of them is declared, Browserslist will firstly look\nfor `production` queries and then use defaults.\n\nIn `package.json`:\n\n```js\n  \"browserslist\": {\n    \"production\": [\n      \"> 1%\",\n      \"not dead\"\n    ],\n    \"modern\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\"\n    ],\n    \"ssr\": [\n      \"node 12\"\n    ]\n  }\n```\n\nIn `.browserslistrc` config:\n\n```ini\n[production]\n> 1%\nnot dead\n\n[modern]\nlast 1 chrome version\nlast 1 firefox version\n\n[ssr]\nnode 12\n```\n\n\n## Custom Usage Data\n\nIf you have a website, you can query against the usage statistics of your site.\n[`browserslist-ga`] will ask access to Google Analytics and then generate\n`browserslist-stats.json`:\n\n```\nnpx browserslist-ga\n```\n\nOr you can use [`browserslist-ga-export`] to convert Google Analytics data without giving a password for Google account.\n\nYou can generate usage statistics file by any other method. File format should\nbe like:\n\n```js\n{\n  \"ie\": {\n    \"6\": 0.01,\n    \"7\": 0.4,\n    \"8\": 1.5\n  },\n  \"chrome\": {\n    …\n  },\n  …\n}\n```\n\nNote that you can query against your custom usage data while also querying\nagainst global or regional data. For example, the query\n`> 1% in my stats, > 5% in US, 10%` is permitted.\n\n[`browserslist-ga-export`]: https://github.com/browserslist/browserslist-ga-export\n[`browserslist-ga`]:        https://github.com/browserslist/browserslist-ga\n[Can I Use]:                https://caniuse.com/\n\n\n## JS API\n\n```js\nconst browserslist = require('browserslist')\n\n// Your CSS/JS build tool code\nfunction process (source, opts) {\n  const browsers = browserslist(opts.overrideBrowserslist, {\n    stats: opts.stats,\n    path:  opts.file,\n    env:   opts.env\n  })\n  // Your code to add features for selected browsers\n}\n```\n\nQueries can be a string `\"> 1%, not dead\"`\nor an array `['> 1%', 'not dead']`.\n\nIf a query is missing, Browserslist will look for a config file.\nYou can provide a `path` option (that can be a file) to find the config file\nrelatively to it.\n\nOptions:\n\n* `path`: file or a directory path to look for config file. Default is `.`.\n* `env`: what environment section use from config. Default is `production`.\n* `stats`: custom usage statistics data.\n* `config`: path to config if you want to set it manually.\n* `ignoreUnknownVersions`: do not throw on direct query (like `ie 12`).\n  Default is `false`.\n* `dangerousExtend`: Disable security checks for `extend` query.\n  Default is `false`.\n* `throwOnMissing`: throw an error if env is not found.\n  Default is `false`.\n* `mobileToDesktop`: Use desktop browsers if Can I Use doesn’t have data\n  about this mobile version. Can I Use has only data about\n  latest versions of mobile browsers. By default, `last 2 and_ff versions`\n  returns `and_ff 90` and with this option it returns `and_ff 91, and_ff 90`.\n  This option may lead to unknown browser version error (in example Can I Use\n  doesn’t have data for `and_ff 91` yet). Default is `false`.\n\nFor non-JS environment and debug purpose you can use CLI tool:\n\n```sh\nbrowserslist \"> 1%, not dead\"\n```\n\nYou can get total users coverage for selected browsers by JS API:\n\n```js\nbrowserslist.coverage(browserslist('> 1%'))\n//=> 81.4\n```\n\n```js\nbrowserslist.coverage(browserslist('> 1% in US'), 'US')\n//=> 83.1\n```\n\n```js\nbrowserslist.coverage(browserslist('> 1% in my stats'), 'my stats')\n//=> 83.1\n```\n\n```js\nbrowserslist.coverage(browserslist('> 1% in my stats', { stats }), stats)\n//=> 82.2\n```\n\nOr by CLI:\n\n```sh\n$ browserslist --coverage \"> 1%\"\nThese browsers account for 81.4% of all users globally\n```\n\n```sh\n$ browserslist --coverage=US \"> 1% in US\"\nThese browsers account for 83.1% of all users in the US\n```\n\n```sh\n$ browserslist --coverage \"> 1% in my stats\"\nThese browsers account for 83.1% of all users in custom statistics\n```\n\n```sh\n$ browserslist --coverage \"> 1% in my stats\" --stats=./stats.json\nThese browsers account for 83.1% of all users in custom statistics\n```\n\n\n## Environment Variables\n\nIf a tool uses Browserslist inside, you can change the Browserslist settings\nwith [environment variables]:\n\n* `BROWSERSLIST` with browsers queries.\n\n   ```sh\n  BROWSERSLIST=\"> 5%\" npx webpack\n   ```\n\n* `BROWSERSLIST_CONFIG` with path to config file.\n\n   ```sh\n  BROWSERSLIST_CONFIG=./config/browserslist npx webpack\n   ```\n\n* `BROWSERSLIST_ENV` with environments string.\n\n   ```sh\n  BROWSERSLIST_ENV=\"development\" npx webpack\n   ```\n\n* `BROWSERSLIST_STATS` with path to the custom usage data\n  for `> 1% in my stats` query.\n\n   ```sh\n  BROWSERSLIST_STATS=./config/usage_data.json npx webpack\n   ```\n\n* `BROWSERSLIST_DISABLE_CACHE` if you want to disable config reading cache.\n\n   ```sh\n  BROWSERSLIST_DISABLE_CACHE=1 npx webpack\n   ```\n\n* `BROWSERSLIST_DANGEROUS_EXTEND` to disable security shareable config\n  name check.\n\n   ```sh\n  BROWSERSLIST_DANGEROUS_EXTEND=1 npx webpack\n   ```\n\n* `BROWSERSLIST_ROOT_PATH` to prevent reading files above this path.\n\n   ```sh\n  BROWSERSLIST_ROOT_PATH=. npx webpack\n   ```\n\n[environment variables]: https://en.wikipedia.org/wiki/Environment_variable\n\n### `browserslist.coverage()`\n\nReturn browsers market coverage.\n\n```js\nconst browsers = browserslist('> 1% in US')\nbrowserslist.coverage(browsers, 'US') //=> 83.1\n```\n\n### `browserslist.loadConfig()`\n\nIt is like calling `browserslist()`, but it returns config’s queries,\nnot browsers.\n\n```js\nbrowserslist.loadConfig({ path: process.cwd() }) ?? browserslist.defaults\n```\n\n### `browserslist.defaults`\n\nAn array with default queries.\n\n\n## Cache\n\nBrowserslist caches the configuration it reads from `package.json` and\n`browserslist` files, as well as knowledge about the existence of files,\nfor the duration of the hosting process.\n\nTo clear these caches, use:\n\n```js\nbrowserslist.clearCaches()\n```\n\nTo disable the caching altogether, set the `BROWSERSLIST_DISABLE_CACHE`\nenvironment variable.\n\n\n## Security Contact\n\nTo report a security vulnerability, please use the [Tidelift security contact].\nTidelift will coordinate the fix and disclosure.\n\n[Tidelift security contact]: https://tidelift.com/security\n\n\n## For Enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `browserslist` and thousands of other packages are working\nwith Tidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk,\nand improve code health, while paying the maintainers of the exact dependencies\nyou use. [Learn more.](https://tidelift.com/subscription/pkg/npm-browserslist?utm_source=npm-browserslist&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n\n## Browsers Data Updating\n\nSee [`update-browserslist-db` docs](https://github.com/browserslist/update-db#readme)\n"
        },
        {
          "name": "browser.js",
          "type": "blob",
          "size": 1.0908203125,
          "content": "var BrowserslistError = require('./error')\n\nfunction noop() {}\n\nmodule.exports = {\n  loadQueries: function loadQueries() {\n    throw new BrowserslistError(\n      'Sharable configs are not supported in client-side build of Browserslist'\n    )\n  },\n\n  getStat: function getStat(opts) {\n    return opts.stats\n  },\n\n  loadConfig: function loadConfig(opts) {\n    if (opts.config) {\n      throw new BrowserslistError(\n        'Browserslist config are not supported in client-side build'\n      )\n    }\n  },\n\n  loadCountry: function loadCountry() {\n    throw new BrowserslistError(\n      'Country statistics are not supported ' +\n        'in client-side build of Browserslist'\n    )\n  },\n\n  loadFeature: function loadFeature() {\n    throw new BrowserslistError(\n      'Supports queries are not available in client-side build of Browserslist'\n    )\n  },\n\n  currentNode: function currentNode(resolve, context) {\n    return resolve(['maintained node versions'], context)[0]\n  },\n\n  parseConfig: noop,\n\n  readConfig: noop,\n\n  findConfig: noop,\n\n  findConfigFile: noop,\n\n  clearCaches: noop,\n\n  oldDataWarning: noop,\n\n  env: {}\n}\n"
        },
        {
          "name": "cli.js",
          "type": "blob",
          "size": 4.2451171875,
          "content": "#!/usr/bin/env node\n\nvar fs = require('fs')\nvar updateDb = require('update-browserslist-db')\n\nvar browserslist = require('./')\nvar pkg = require('./package.json')\n\nvar args = process.argv.slice(2)\n\nvar USAGE =\n  'Usage:\\n' +\n  '  npx browserslist\\n' +\n  '  npx browserslist \"QUERIES\"\\n' +\n  '  npx browserslist --json \"QUERIES\"\\n' +\n  '  npx browserslist --config=\"path/to/browserlist/file\"\\n' +\n  '  npx browserslist --coverage \"QUERIES\"\\n' +\n  '  npx browserslist --coverage=US \"QUERIES\"\\n' +\n  '  npx browserslist --coverage=US,RU,global \"QUERIES\"\\n' +\n  '  npx browserslist --env=\"environment name defined in config\"\\n' +\n  '  npx browserslist --stats=\"path/to/browserlist/stats/file\"\\n' +\n  '  npx browserslist --mobile-to-desktop\\n' +\n  '  npx browserslist --ignore-unknown-versions\\n'\n\nfunction isArg(arg) {\n  return args.some(function (str) {\n    return str === arg || str.indexOf(arg + '=') === 0\n  })\n}\n\nfunction error(msg) {\n  process.stderr.write('browserslist: ' + msg + '\\n')\n  process.exit(1)\n}\n\nif (isArg('--help') || isArg('-h')) {\n  process.stdout.write(pkg.description + '.\\n\\n' + USAGE + '\\n')\n} else if (isArg('--version') || isArg('-v')) {\n  process.stdout.write('browserslist ' + pkg.version + '\\n')\n} else if (isArg('--update-db')) {\n  /* c8 ignore next 8 */\n  process.stdout.write(\n    'The --update-db command is deprecated.\\n' +\n      'Please use npx update-browserslist-db@latest instead.\\n'\n  )\n  process.stdout.write('Browserslist DB update will still be made.\\n')\n  updateDb(function (str) {\n    process.stdout.write(str)\n  })\n} else {\n  var mode = 'browsers'\n  var opts = {}\n  var queries\n  var areas\n\n  for (var i = 0; i < args.length; i++) {\n    if (args[i][0] !== '-') {\n      queries = args[i].replace(/^[\"']|[\"']$/g, '')\n      continue\n    }\n\n    var arg = args[i].split('=')\n    var name = arg[0]\n    var value = arg[1]\n\n    if (value) value = value.replace(/^[\"']|[\"']$/g, '')\n\n    if (name === '--config' || name === '-b') {\n      opts.config = value\n    } else if (name === '--env' || name === '-e') {\n      opts.env = value\n    } else if (name === '--stats' || name === '-s') {\n      opts.stats = value\n    } else if (name === '--coverage' || name === '-c') {\n      if (mode !== 'json') mode = 'coverage'\n      if (value) {\n        areas = value.split(',')\n      } else {\n        areas = ['global']\n      }\n    } else if (name === '--json') {\n      mode = 'json'\n    } else if (name === '--mobile-to-desktop') {\n      /* c8 ignore next */\n      opts.mobileToDesktop = true\n    } else if (name === '--ignore-unknown-versions') {\n      /* c8 ignore next */\n      opts.ignoreUnknownVersions = true\n    } else {\n      error('Unknown arguments ' + args[i] + '.\\n\\n' + USAGE)\n    }\n  }\n\n  var browsers\n  try {\n    browsers = browserslist(queries, opts)\n  } catch (e) {\n    if (e.name === 'BrowserslistError') {\n      error(e.message)\n    } /* c8 ignore start */ else {\n      throw e\n    } /* c8 ignore end */\n  }\n\n  var coverage\n  if (mode === 'browsers') {\n    browsers.forEach(function (browser) {\n      process.stdout.write(browser + '\\n')\n    })\n  } else if (areas) {\n    coverage = areas.map(function (area) {\n      var stats\n      if (area !== 'global') {\n        stats = area\n      } else if (opts.stats) {\n        stats = JSON.parse(fs.readFileSync(opts.stats))\n      }\n      var result = browserslist.coverage(browsers, stats)\n      var round = Math.round(result * 100) / 100.0\n\n      return [area, round]\n    })\n\n    if (mode === 'coverage') {\n      var prefix = 'These browsers account for '\n      process.stdout.write(prefix)\n      coverage.forEach(function (data, index) {\n        var area = data[0]\n        var round = data[1]\n        var end = 'globally'\n        if (area && area !== 'global') {\n          end = 'in the ' + area.toUpperCase()\n        } else if (opts.stats) {\n          end = 'in custom statistics'\n        }\n\n        if (index !== 0) {\n          process.stdout.write(prefix.replace(/./g, ' '))\n        }\n\n        process.stdout.write(round + '% of all users ' + end + '\\n')\n      })\n    }\n  }\n\n  if (mode === 'json') {\n    var data = { browsers: browsers }\n    if (coverage) {\n      data.coverage = coverage.reduce(function (object, j) {\n        object[j[0]] = j[1]\n        return object\n      }, {})\n    }\n    process.stdout.write(JSON.stringify(data, null, '  ') + '\\n')\n  }\n}\n"
        },
        {
          "name": "error.d.ts",
          "type": "blob",
          "size": 0.1513671875,
          "content": "declare class BrowserslistError extends Error {\n  constructor(message: any)\n  name: 'BrowserslistError'\n  browserslist: true\n}\n\nexport = BrowserslistError\n"
        },
        {
          "name": "error.js",
          "type": "blob",
          "size": 0.2919921875,
          "content": "function BrowserslistError(message) {\n  this.name = 'BrowserslistError'\n  this.message = message\n  this.browserslist = true\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, BrowserslistError)\n  }\n}\n\nBrowserslistError.prototype = Error.prototype\n\nmodule.exports = BrowserslistError\n"
        },
        {
          "name": "eslint.config.mjs",
          "type": "blob",
          "size": 1.5693359375,
          "content": "import { FlatCompat } from '@eslint/eslintrc'\nimport loguxConfig from '@logux/eslint-config'\nimport es5Plugin from 'eslint-plugin-es5'\n\nlet compat = new FlatCompat({\n  baseDirectory: import.meta.dirname\n})\n\nlet es5 = compat.extends('plugin:es5/no-es2015')\n\n/** @type {import('eslint').Linter.Config[]} */\nexport default [\n  { ignores: ['coverage'] },\n  ...loguxConfig,\n  ...es5,\n  {\n    plugins: {\n      es5: es5Plugin\n    },\n    rules: {\n      'node-import/prefer-node-protocol': 'off',\n      'perfectionist/sort-objects': 'off',\n      'n/prefer-node-protocol': 'off',\n      'prefer-let/prefer-let': 'off',\n      'prefer-arrow-callback': 'off',\n      'no-unused-vars': ['error', { caughtErrors: 'none' }],\n      'n/global-require': 'off',\n      'object-shorthand': 'off',\n      'no-console': 'off',\n      'no-var': 'off'\n    }\n  },\n  {\n    files: ['cli.js'],\n    rules: {\n      'n/no-unsupported-features/es-syntax': [\n        'error',\n        {\n          version: '>=12.5.0',\n          ignores: []\n        }\n      ]\n    }\n  },\n  {\n    files: ['test/**/*', 'eslint.config.mjs'],\n    rules: {\n      'n/no-unsupported-features/es-syntax': 'off',\n      'es5/no-shorthand-properties': 'off',\n      'es5/no-template-literals': 'off',\n      'es5/no-rest-parameters': 'off',\n      'es5/no-arrow-functions': 'off',\n      'es5/no-destructuring': 'off',\n      'es5/no-block-scoping': 'off',\n      'es5/no-es6-methods': 'off',\n      'es5/no-spread': 'off',\n      'es5/no-for-of': 'off',\n      'no-console': 'off'\n    }\n  },\n  {\n    files: ['eslint.config.mjs'],\n    rules: {\n      'es5/no-modules': 'off'\n    }\n  }\n]\n"
        },
        {
          "name": "grammar.w3c-ebnf",
          "type": "blob",
          "size": 2.7470703125,
          "content": "NonSpaceChar ::= [#x21-#xD7FF] | [#xE000-#xFFFD]\n\nDigit ::= [0-9]\n\nSpace ::= ' ' | '\\t'\n\nNumeric ::= (Digit* '.')? Digit+\n\nBrowserName ::= 'ie'\n  | 'edge'\n  | 'firefox'\n  | 'chrome'\n  | 'safari'\n  | 'opera'\n  | 'ios_saf'\n  | 'op_mini'\n  | 'android'\n  | 'bb'\n  | 'op_mob'\n  | 'and_chr'\n  | 'and_ff'\n  | 'ie_mob'\n  | 'and_uc'\n  | 'samsung'\n  | 'and_qq'\n  | 'baidu'\n  | 'kaios'\n  | 'fx'\n  | 'ff'\n  | 'ios'\n  | 'explorer'\n  | 'blackberry'\n  | 'explorermobile'\n  | 'operamini'\n  | 'operamobile'\n  | 'chromeandroid'\n  | 'firefoxandroid'\n  | 'ucandroid'\n  | 'qqandroid'\n\nCompareOperator ::= ('>' | '<') '='?\n\nVersionKeyword ::= 'version' 's'?\n\nLastBrowsers ::= 'last' Space+ Digit+ Space+ (BrowserName Space+)? ('major' Space+)? VersionKeyword\n\nLastElectron ::= 'last' Space+ Digit+ Space+ 'electron' Space+ ('major' Space+)? VersionKeyword\n\nLastNode ::= 'last' Space+ Digit+ Space+ 'node' Space+ ('major' Space+)? VersionKeyword\n\nUnreleased ::= 'unreleased' Space+ ((BrowserName | 'electron') Space+)? VersionKeyword\n\nYears ::= 'last' Space+ Numeric Space+ 'year' 's'?\n\nSince ::= 'since' Space Digit+ ('-' Digit+ ('-' Digit+)?)?\n\nRegion ::= ('alt-' [a-z][a-z] | [A-Z][A-Z])\n\nMyStats ::= 'my' Space+ 'stats'\n\nCustomStats ::= NonSpaceChar+ Space+ 'stats'\n\nPercentage ::= CompareOperator Space* Numeric '%' (Space+ 'in' Space+ (MyStats | CustomStats | Region))?\n\nCover ::= 'cover' Space+ Numeric '%' (Space+ 'in' Space+ (MyStats | Region))?\n\nFeatureSupport ::= (('fully' | 'partially') Space+)? 'supports' Space+ ([a-z0-9] | '-')+\n\nVersion ::= (Digit | '.')+\n\nBoundedRange ::= Version Space* '-' Space* Version\n\nUnboundedRange ::= CompareOperator Space* Version\n\nElectron ::= 'electron' Space+ (BoundedRange | UnboundedRange | Version)\n\nNode ::= 'node' Space+ (BoundedRange | UnboundedRange | Version)\n\nBrowser ::= BrowserName Space+ (BoundedRange | UnboundedRange | Version | 'tp')\n\nFirefoxESR ::= ('firefox' | 'fx' | 'ff') Space+ 'esr'\n\nOperaMini ::= ('operamini' | 'op_mini') Space+ 'all'\n\nCurrentNode ::= 'current' Space+ 'node'\n\nMaintainedNode ::= 'maintained' Space+ 'node' Space+ 'versions'\n\nPhantom ::= 'phantomjs' Space+ ('1.9' | '2.1')\n\nBrowserslistConfig ::= 'browserslist config'\n\nExtending ::= 'extends' Space NonSpaceChar+\n\nDefaults ::= 'defaults'\n\nDead ::= 'dead'\n\nQueryAtom ::= LastBrowsers\n  | LastElectron\n  | LastNode\n  | Unreleased\n  | Years\n  | Since\n  | Percentage\n  | Cover\n  | FeatureSupport\n  | Electron\n  | Node\n  | Browser\n  | FirefoxESR\n  | OperaMini\n  | CurrentNode\n  | MaintainedNode\n  | Phantom\n  | BrowserslistConfig\n  | Extending\n  | Defaults\n  | Dead\n\nSingleQuery ::= ('not' Space)? QueryAtom\n\nOrOperator ::= Space+ 'or' Space+ | Space* ',' Space*\n\nAndOperator ::= Space+ 'and' Space+\n\nBrowserslistQuery ::= QueryAtom ((OrOperator | AndOperator) SingleQuery)*\n\nRoot ::= BrowserslistQuery\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.d.ts",
          "type": "blob",
          "size": 4.8447265625,
          "content": "/**\n * Return array of browsers by selection queries.\n *\n * ```js\n * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']\n * ```\n *\n * @param queries Browser queries.\n * @param opts Options.\n * @returns Array with browser names in Can I Use.\n */\ndeclare function browserslist(\n  queries?: string | readonly string[] | null,\n  opts?: browserslist.Options\n): string[]\n\ndeclare namespace browserslist {\n  interface Query {\n    compose: 'or' | 'and'\n    type: string\n    query: string\n    not?: true\n  }\n\n  interface Options {\n    /**\n     * Path to processed file. It will be used to find config files.\n     */\n    path?: string | false\n    /**\n     * Processing environment. It will be used to take right queries\n     * from config file.\n     */\n    env?: string\n    /**\n     * Custom browser usage statistics for \"> 1% in my stats\" query.\n     */\n    stats?: Stats | string\n    /**\n     * Path to config file with queries.\n     */\n    config?: string\n    /**\n     * Do not throw on unknown version in direct query.\n     */\n    ignoreUnknownVersions?: boolean\n    /**\n     * Throw an error if env is not found.\n     */\n    throwOnMissing?: boolean\n    /**\n     * Disable security checks for extend query.\n     */\n    dangerousExtend?: boolean\n    /**\n     * Alias mobile browsers to the desktop version when Can I Use\n     * doesn’t have data about the specified version.\n     */\n    mobileToDesktop?: boolean\n  }\n\n  type Config = {\n    defaults: string[]\n    [section: string]: string[] | undefined\n  }\n\n  interface Stats {\n    [browser: string]: {\n      [version: string]: number\n    }\n  }\n\n  /**\n   * Browser names aliases.\n   */\n  let aliases: {\n    [alias: string]: string | undefined\n  }\n\n  /**\n   * Aliases to work with joined versions like `ios_saf 7.0-7.1`.\n   */\n  let versionAliases: {\n    [browser: string]:\n      | {\n          [version: string]: string | undefined\n        }\n      | undefined\n  }\n\n  /**\n   * Can I Use only provides a few versions for some browsers (e.g. `and_chr`).\n   *\n   * Fallback to a similar browser for unknown versions.\n   */\n  let desktopNames: {\n    [browser: string]: string | undefined\n  }\n\n  let data: {\n    [browser: string]:\n      | {\n          name: string\n          versions: string[]\n          released: string[]\n          releaseDate: {\n            [version: string]: number | undefined | null\n          }\n        }\n      | undefined\n  }\n\n  let nodeVersions: string[]\n\n  interface Usage {\n    [version: string]: number\n  }\n\n  let usage: {\n    global?: Usage\n    custom?: Usage | null\n    [country: string]: Usage | undefined | null\n  }\n\n  let cache: {\n    [feature: string]: {\n      [name: string]: {\n        [version: string]: string\n      }\n    }\n  }\n\n  /**\n   * Default browsers query\n   */\n  let defaults: readonly string[]\n\n  /**\n   * Which statistics should be used. Country code or custom statistics.\n   * Pass `\"my stats\"` to load statistics from `Browserslist` files.\n   */\n  type StatsOptions = string | 'my stats' | Stats | { dataByBrowser: Stats }\n\n  /**\n   * Return browsers market coverage.\n   *\n   * ```js\n   * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1\n   * ```\n   *\n   * @param browsers Browsers names in Can I Use.\n   * @param stats Which statistics should be used.\n   * @returns Total market coverage for all selected browsers.\n   */\n  function coverage(browsers: readonly string[], stats?: StatsOptions): number\n\n  /**\n   * Get queries AST to analyze the config content.\n   *\n   * @param queries Browser queries.\n   * @param opts Options.\n   * @returns An array of the data of each query in the config.\n   */\n  function parse(\n    queries?: string | readonly string[] | null,\n    opts?: browserslist.Options\n  ): Query[]\n\n  /**\n   * Return queries for specific file inside the project.\n   *\n   * ```js\n   * browserslist.loadConfig({\n   *   file: process.cwd()\n   * }) ?? browserslist.defaults\n   * ```\n   */\n  function loadConfig(options: LoadConfigOptions): string[] | undefined\n\n  function clearCaches(): void\n\n  function parseConfig(string: string): Config\n\n  function readConfig(file: string): Config\n\n  function findConfig(...pathSegments: string[]): Config | undefined\n\n  function findConfigFile(...pathSegments: string[]): string | undefined\n\n  interface LoadConfigOptions {\n    /**\n     * Path to config file\n     * */\n    config?: string\n\n    /**\n     * Path to file inside the project to find Browserslist config\n     * in closest folder\n     */\n    path?: string\n\n    /**\n     * Environment to choose part of config.\n     */\n    env?: string\n  }\n}\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      BROWSERSLIST?: string\n      BROWSERSLIST_CONFIG?: string\n      BROWSERSLIST_DANGEROUS_EXTEND?: string\n      BROWSERSLIST_DISABLE_CACHE?: string\n      BROWSERSLIST_ENV?: string\n      BROWSERSLIST_IGNORE_OLD_DATA?: string\n      BROWSERSLIST_STATS?: string\n      BROWSERSLIST_ROOT_PATH?: string\n    }\n  }\n}\n\nexport = browserslist\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 33.8857421875,
          "content": "var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar e2c = require('electron-to-chromium/versions')\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\n\nvar BrowserslistError = require('./error')\nvar env = require('./node')\nvar parseWithoutCache = require('./parse') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = '37'\nvar OP_MOB_BLINK_FIRST = 14\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseLatestFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseLatestFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n\n  function parseLatestFloat(v) {\n    return parseFloat(v.split('-')[1] || v)\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var iFirstEvergreen = chromeVersions.indexOf(ANDROID_EVERGREEN_FIRST)\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(iFirstEvergreen))\n}\n\nfunction copyObject(obj) {\n  var copy = {}\n  for (var key in obj) {\n    copy[key] = obj[key]\n  }\n  return copy\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  android.releaseDate = copyObject(android.releaseDate)\n  android.released.forEach(function (v) {\n    if (android.releaseDate[v] === undefined) {\n      android.releaseDate[v] = chrome.releaseDate[v]\n    }\n  })\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\n// Adjusts last X versions queries for some mobile browsers,\n// where caniuse data jumps from a legacy version to the latest\nfunction filterJumps(list, name, nVersions, context) {\n  var jump = 1\n  switch (name) {\n    case 'android':\n      if (context.mobileToDesktop) return list\n      var released = browserslist.data.chrome.released\n      jump = released.length - released.indexOf(ANDROID_EVERGREEN_FIRST)\n      break\n    case 'op_mob':\n      var latest = browserslist.data.op_mob.released.slice(-1)[0]\n      jump = getMajor(latest) - OP_MOB_BLINK_FIRST + 1\n      break\n    default:\n      return list\n  }\n  if (nVersions <= jump) {\n    return list.slice(-1)\n  }\n  return list.slice(jump - 1 - nVersions)\n}\n\nfunction isSupported(flags, withPartial) {\n  return (\n    typeof flags === 'string' &&\n    (flags.indexOf('y') >= 0 || (withPartial && flags.indexOf('a') >= 0))\n  )\n}\n\nfunction resolve(queries, context) {\n  return parseQueries(queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\nvar parseCache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var needsPath = parseQueries(queries).some(function (node) {\n    return QUERIES[node.type].needsPath\n  })\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    env: opts.env\n  }\n  // Removing to avoid using context.path without marking query as needsPath\n  if (needsPath) {\n    context.path = opts.path\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nfunction parseQueries(queries) {\n  var cacheKey = JSON.stringify(queries)\n  if (cacheKey in parseCache) return parseCache[cacheKey]\n  var result = parseWithoutCache(QUERIES, queries)\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    parseCache[cacheKey] = result\n  }\n  return result\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parseQueries(queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\n// Note op_mob is not included as its chromium versions are not in sync with Opera desktop\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfigFile = env.findConfigFile\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var stats = env.loadStat(context, node.config, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['supportType', 'feature'],\n    regexp: /^(?:(fully|partially)\\s+)?supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var withPartial = node.supportType !== 'fully'\n      var features = browserslist.cache[node.feature]\n      var result = []\n      for (var name in features) {\n        var data = byName(name, context)\n        // Only check desktop when latest released mobile has support\n        var iMax = data.released.length - 1\n        while (iMax >= 0) {\n          if (data.released[iMax] in features[name]) break\n          iMax--\n        }\n        var checkDesktop =\n          context.mobileToDesktop &&\n          name in browserslist.desktopNames &&\n          isSupported(features[name][data.released[iMax]], withPartial)\n        data.versions.forEach(function (version) {\n          var flags = features[name][version]\n          if (flags === undefined && checkDesktop) {\n            flags = features[browserslist.desktopNames[name]][version]\n          }\n          if (isSupported(flags, withPartial)) {\n            result.push(name + ' ' + version)\n          }\n        })\n      }\n      return result\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 128']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    needsPath: true,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    needsPath: true,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n"
        },
        {
          "name": "node.js",
          "type": "blob",
          "size": 12.1748046875,
          "content": "var feature = require('caniuse-lite/dist/unpacker/feature').default\nvar region = require('caniuse-lite/dist/unpacker/region').default\nvar fs = require('fs')\nvar path = require('path')\n\nvar BrowserslistError = require('./error')\n\nvar IS_SECTION = /^\\s*\\[(.+)]\\s*$/\nvar CONFIG_PATTERN = /^browserslist-config-/\nvar SCOPED_CONFIG__PATTERN = /@[^/]+(?:\\/[^/]+)?\\/browserslist-config(?:-|$|\\/)/\nvar FORMAT =\n  'Browserslist config should be a string or an array ' +\n  'of strings with browser queries'\n\nvar dataTimeChecked = false\nvar statCache = {}\nvar configPathCache = {}\nvar parseConfigCache = {}\n\nfunction checkExtend(name) {\n  var use = ' Use `dangerousExtend` option to disable.'\n  if (!CONFIG_PATTERN.test(name) && !SCOPED_CONFIG__PATTERN.test(name)) {\n    throw new BrowserslistError(\n      'Browserslist config needs `browserslist-config-` prefix. ' + use\n    )\n  }\n  if (name.replace(/^@[^/]+\\//, '').indexOf('.') !== -1) {\n    throw new BrowserslistError(\n      '`.` not allowed in Browserslist config name. ' + use\n    )\n  }\n  if (name.indexOf('node_modules') !== -1) {\n    throw new BrowserslistError(\n      '`node_modules` not allowed in Browserslist config.' + use\n    )\n  }\n}\n\nfunction isFile(file) {\n  return fs.existsSync(file) && fs.statSync(file).isFile()\n}\nfunction isDirectory(dir) {\n  return fs.existsSync(dir) && fs.statSync(dir).isDirectory()\n}\n\nfunction eachParent(file, callback, cache) {\n  var loc = path.resolve(file)\n  var pathsForCacheResult = []\n  var result\n  do {\n    if (!pathInRoot(loc)) {\n      break\n    }\n    if (cache && (loc in cache)) {\n      result = cache[loc]\n      break\n    }\n    pathsForCacheResult.push(loc)\n    \n    if (!isDirectory(loc)) {\n      continue\n    }\n    \n    var locResult = callback(loc)\n    if (typeof locResult !== 'undefined') {\n      result = locResult\n      break\n    }\n  } while (loc !== (loc = path.dirname(loc)))\n  \n  if (cache && !process.env.BROWSERSLIST_DISABLE_CACHE) {\n    pathsForCacheResult.forEach(function (cachePath) {\n      cache[cachePath] = result\n    })\n  }\n  return result\n}\n\nfunction pathInRoot(p) {\n  if (!process.env.BROWSERSLIST_ROOT_PATH) return true\n  var rootPath = path.resolve(process.env.BROWSERSLIST_ROOT_PATH)\n  if (path.relative(rootPath, p).substring(0, 2) === '..') {\n    return false\n  }\n  return true\n}\n\nfunction check(section) {\n  if (Array.isArray(section)) {\n    for (var i = 0; i < section.length; i++) {\n      if (typeof section[i] !== 'string') {\n        throw new BrowserslistError(FORMAT)\n      }\n    }\n  } else if (typeof section !== 'string') {\n    throw new BrowserslistError(FORMAT)\n  }\n}\n\nfunction pickEnv(config, opts) {\n  if (typeof config !== 'object') return config\n\n  var name\n  if (typeof opts.env === 'string') {\n    name = opts.env\n  } else if (process.env.BROWSERSLIST_ENV) {\n    name = process.env.BROWSERSLIST_ENV\n  } else if (process.env.NODE_ENV) {\n    name = process.env.NODE_ENV\n  } else {\n    name = 'production'\n  }\n\n  if (opts.throwOnMissing) {\n    if (name && name !== 'defaults' && !config[name]) {\n      throw new BrowserslistError(\n        'Missing config for Browserslist environment `' + name + '`'\n      )\n    }\n  }\n\n  return config[name] || config.defaults\n}\n\nfunction parsePackage(file) {\n  var text = fs\n    .readFileSync(file)\n    .toString()\n    .replace(/^\\uFEFF/m, '')\n  var list\n  if (text.indexOf('\"browserslist\"') >= 0) {\n    list = JSON.parse(text).browserslist\n  } else if (text.indexOf('\"browserlist\"') >= 0) {\n    var config = JSON.parse(text)\n    if (config.browserlist && !config.browserslist) {\n      throw new BrowserslistError(\n        '`browserlist` key instead of `browserslist` in ' + file\n      )\n    }\n  }\n  if (Array.isArray(list) || typeof list === 'string') {\n    list = { defaults: list }\n  }\n  for (var i in list) {\n    check(list[i])\n  }\n\n  return list\n}\n\nfunction parsePackageOrReadConfig(file) {\n  if (file in parseConfigCache) {\n    return parseConfigCache[file]\n  }\n  \n  var isPackage = path.basename(file) === 'package.json'\n  var result = isPackage ? parsePackage(file) : module.exports.readConfig(file)\n  \n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    parseConfigCache[file] = result\n  }\n  return result\n}\n\nfunction latestReleaseTime(agents) {\n  var latest = 0\n  for (var name in agents) {\n    var dates = agents[name].releaseDate || {}\n    for (var key in dates) {\n      if (latest < dates[key]) {\n        latest = dates[key]\n      }\n    }\n  }\n  return latest * 1000\n}\n\nfunction getMonthsPassed(date) {\n  var now = new Date()\n  var past = new Date(date)\n\n  var years = now.getFullYear() - past.getFullYear()\n  var months = now.getMonth() - past.getMonth()\n\n  return years * 12 + months\n}\n\nfunction normalizeStats(data, stats) {\n  if (!data) {\n    data = {}\n  }\n  if (stats && 'dataByBrowser' in stats) {\n    stats = stats.dataByBrowser\n  }\n\n  if (typeof stats !== 'object') return undefined\n\n  var normalized = {}\n  for (var i in stats) {\n    var versions = Object.keys(stats[i])\n    if (versions.length === 1 && data[i] && data[i].versions.length === 1) {\n      var normal = data[i].versions[0]\n      normalized[i] = {}\n      normalized[i][normal] = stats[i][versions[0]]\n    } else {\n      normalized[i] = stats[i]\n    }\n  }\n\n  return normalized\n}\n\nfunction normalizeUsageData(usageData, data) {\n  for (var browser in usageData) {\n    var browserUsage = usageData[browser]\n    // https://github.com/browserslist/browserslist/issues/431#issuecomment-565230615\n    // caniuse-db returns { 0: \"percentage\" } for `and_*` regional stats\n    if ('0' in browserUsage) {\n      var versions = data[browser].versions\n      browserUsage[versions[versions.length - 1]] = browserUsage[0]\n      delete browserUsage[0]\n    }\n  }\n}\n\nmodule.exports = {\n  loadQueries: function loadQueries(ctx, name) {\n    if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {\n      checkExtend(name)\n    }\n    var queries = require(require.resolve(name, { paths: ['.', ctx.path] }))\n    if (queries) {\n      if (Array.isArray(queries)) {\n        return queries\n      } else if (typeof queries === 'object') {\n        if (!queries.defaults) queries.defaults = []\n        return pickEnv(queries, ctx, name)\n      }\n    }\n    throw new BrowserslistError(\n      '`' +\n        name +\n        '` config exports not an array of queries' +\n        ' or an object of envs'\n    )\n  },\n\n  loadStat: function loadStat(ctx, name, data) {\n    if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {\n      checkExtend(name)\n    }\n    var stats = require(require.resolve(\n      path.join(name, 'browserslist-stats.json'),\n      { paths: ['.'] }\n    ))\n    return normalizeStats(data, stats)\n  },\n\n  getStat: function getStat(opts, data) {\n    var stats\n    if (opts.stats) {\n      stats = opts.stats\n    } else if (process.env.BROWSERSLIST_STATS) {\n      stats = process.env.BROWSERSLIST_STATS\n    } else if (opts.path && path.resolve && fs.existsSync) {\n      stats = eachParent(opts.path, function (dir) {\n        var file = path.join(dir, 'browserslist-stats.json')\n        return isFile(file) ? file : undefined\n      }, statCache)\n    }\n    if (typeof stats === 'string') {\n      try {\n        stats = JSON.parse(fs.readFileSync(stats))\n      } catch (e) {\n        throw new BrowserslistError(\"Can't read \" + stats)\n      }\n    }\n    return normalizeStats(data, stats)\n  },\n\n  loadConfig: function loadConfig(opts) {\n    if (process.env.BROWSERSLIST) {\n      return process.env.BROWSERSLIST\n    } else if (opts.config || process.env.BROWSERSLIST_CONFIG) {\n      var file = opts.config || process.env.BROWSERSLIST_CONFIG\n      return pickEnv(parsePackageOrReadConfig(file), opts)\n    } else if (opts.path) {\n      return pickEnv(module.exports.findConfig(opts.path), opts)\n    } else {\n      return undefined\n    }\n  },\n\n  loadCountry: function loadCountry(usage, country, data) {\n    var code = country.replace(/[^\\w-]/g, '')\n    if (!usage[code]) {\n      var compressed\n      try {\n        compressed = require('caniuse-lite/data/regions/' + code + '.js')\n      } catch (e) {\n        throw new BrowserslistError('Unknown region name `' + code + '`.')\n      }\n      var usageData = region(compressed)\n      normalizeUsageData(usageData, data)\n      usage[country] = {}\n      for (var i in usageData) {\n        for (var j in usageData[i]) {\n          usage[country][i + ' ' + j] = usageData[i][j]\n        }\n      }\n    }\n  },\n\n  loadFeature: function loadFeature(features, name) {\n    name = name.replace(/[^\\w-]/g, '')\n    if (features[name]) return\n    var compressed\n    try {\n      compressed = require('caniuse-lite/data/features/' + name + '.js')\n    } catch (e) {\n      throw new BrowserslistError('Unknown feature name `' + name + '`.')\n    }\n    var stats = feature(compressed).stats\n    features[name] = {}\n    for (var i in stats) {\n      features[name][i] = {}\n      for (var j in stats[i]) {\n        features[name][i][j] = stats[i][j]\n      }\n    }\n  },\n\n  parseConfig: function parseConfig(string) {\n    var result = { defaults: [] }\n    var sections = ['defaults']\n\n    string\n      .toString()\n      .replace(/#[^\\n]*/g, '')\n      .split(/\\n|,/)\n      .map(function (line) {\n        return line.trim()\n      })\n      .filter(function (line) {\n        return line !== ''\n      })\n      .forEach(function (line) {\n        if (IS_SECTION.test(line)) {\n          sections = line.match(IS_SECTION)[1].trim().split(' ')\n          sections.forEach(function (section) {\n            if (result[section]) {\n              throw new BrowserslistError(\n                'Duplicate section ' + section + ' in Browserslist config'\n              )\n            }\n            result[section] = []\n          })\n        } else {\n          sections.forEach(function (section) {\n            result[section].push(line)\n          })\n        }\n      })\n\n    return result\n  },\n\n  readConfig: function readConfig(file) {\n    if (!isFile(file)) {\n      throw new BrowserslistError(\"Can't read \" + file + ' config')\n    }\n\n    return module.exports.parseConfig(fs.readFileSync(file))\n  },\n\n  findConfigFile: function findConfigFile(from) {\n    return eachParent(from, function (dir) {\n      var config = path.join(dir, 'browserslist')\n      var pkg = path.join(dir, 'package.json')\n      var rc = path.join(dir, '.browserslistrc')\n\n      var pkgBrowserslist\n      if (isFile(pkg)) {\n        try {\n          pkgBrowserslist = parsePackage(pkg)\n        } catch (e) {\n          if (e.name === 'BrowserslistError') throw e\n          console.warn(\n            '[Browserslist] Could not parse ' + pkg + '. Ignoring it.'\n          )\n        }\n      }\n\n      if (isFile(config) && pkgBrowserslist) {\n        throw new BrowserslistError(\n          dir + ' contains both browserslist and package.json with browsers'\n        )\n      } else if (isFile(rc) && pkgBrowserslist) {\n        throw new BrowserslistError(\n          dir + ' contains both .browserslistrc and package.json with browsers'\n        )\n      } else if (isFile(config) && isFile(rc)) {\n        throw new BrowserslistError(\n          dir + ' contains both .browserslistrc and browserslist'\n        )\n      } else if (isFile(config)) {\n        return config\n      } else if (isFile(rc)) {\n        return rc\n      } else if (pkgBrowserslist) {\n        return pkg\n      }\n    }, configPathCache)\n  },\n\n  findConfig: function findConfig(from) {\n    var configFile = this.findConfigFile(from)\n\n    return configFile ? parsePackageOrReadConfig(configFile) : undefined\n  },\n\n  clearCaches: function clearCaches() {\n    dataTimeChecked = false\n    statCache = {}\n    configPathCache = {}\n    parseConfigCache = {}\n\n    this.cache = {}\n  },\n\n  oldDataWarning: function oldDataWarning(agentsObj) {\n    if (dataTimeChecked) return\n    dataTimeChecked = true\n    if (process.env.BROWSERSLIST_IGNORE_OLD_DATA) return\n\n    var latest = latestReleaseTime(agentsObj)\n    var monthsPassed = getMonthsPassed(latest)\n\n    if (latest !== 0 && monthsPassed >= 6) {\n      var months = monthsPassed + ' ' + (monthsPassed > 1 ? 'months' : 'month')\n      console.warn(\n        'Browserslist: browsers data (caniuse-lite) is ' +\n          months +\n          ' old. Please run:\\n' +\n          '  npx update-browserslist-db@latest\\n' +\n          '  Why you should do it regularly: ' +\n          'https://github.com/browserslist/update-db#readme'\n      )\n    }\n  },\n\n  currentNode: function currentNode() {\n    return 'node ' + process.versions.node\n  },\n\n  env: process.env\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.0693359375,
          "content": "{\n  \"name\": \"browserslist\",\n  \"version\": \"4.24.4\",\n  \"description\": \"Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-env-preset\",\n  \"keywords\": [\n    \"caniuse\",\n    \"browsers\",\n    \"target\"\n  ],\n  \"funding\": [\n    {\n      \"type\": \"opencollective\",\n      \"url\": \"https://opencollective.com/browserslist\"\n    },\n    {\n      \"type\": \"tidelift\",\n      \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n    },\n    {\n      \"type\": \"github\",\n      \"url\": \"https://github.com/sponsors/ai\"\n    }\n  ],\n  \"author\": \"Andrey Sitnik <andrey@sitnik.ru>\",\n  \"license\": \"MIT\",\n  \"repository\": \"browserslist/browserslist\",\n  \"scripts\": {\n    \"unit\": \"NODE_ENV=test uvu test .test.js\",\n    \"test:coverage\": \"c8 pnpm unit\",\n    \"test:lint\": \"eslint .\",\n    \"test:size\": \"size-limit\",\n    \"test\": \"pnpm run /^test:/\"\n  },\n  \"dependencies\": {\n    \"caniuse-lite\": \"^1.0.30001688\",\n    \"electron-to-chromium\": \"^1.5.73\",\n    \"node-releases\": \"^2.0.19\",\n    \"update-browserslist-db\": \"^1.1.1\"\n  },\n  \"engines\": {\n    \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n  },\n  \"bin\": {\n    \"browserslist\": \"cli.js\"\n  },\n  \"types\": \"./index.d.ts\",\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3.2.0\",\n    \"@logux/eslint-config\": \"^53.5.1\",\n    \"@size-limit/preset-small-lib\": \"^11.1.6\",\n    \"c8\": \"^10.1.3\",\n    \"clean-publish\": \"^5.1.0\",\n    \"cross-spawn\": \"^7.0.6\",\n    \"eslint\": \"^9.16.0\",\n    \"eslint-plugin-es5\": \"^1.5.0\",\n    \"fs-extra\": \"^11.2.0\",\n    \"nanospy\": \"^1.0.0\",\n    \"size-limit\": \"^11.1.6\",\n    \"uvu\": \"^0.5.6\"\n  },\n  \"browser\": {\n    \"./node.js\": \"./browser.js\",\n    \"path\": false\n  },\n  \"clean-publish\": {\n    \"cleanDocs\": true\n  },\n  \"c8\": {\n    \"exclude\": [\n      \"**/*.test.*\"\n    ],\n    \"lines\": 100,\n    \"reporter\": \"lcov\",\n    \"check-coverage\": true\n  },\n  \"size-limit\": [\n    {\n      \"path\": \"index.js\",\n      \"limit\": \"15 KB\"\n    }\n  ],\n  \"eslintConfig\": {\n    \"plugins\": [\n      \"es5\"\n    ],\n    \"extends\": [\n      \"@logux/eslint-config\",\n      \"plugin:es5/no-es2015\"\n    ],\n    \"rules\": {\n      \"node-import/prefer-node-protocol\": \"off\",\n      \"perfectionist/sort-objects\": \"off\",\n      \"prefer-let/prefer-let\": \"off\",\n      \"prefer-arrow-callback\": \"off\",\n      \"n/global-require\": \"off\",\n      \"object-shorthand\": \"off\",\n      \"no-console\": \"off\",\n      \"no-var\": \"off\"\n    },\n    \"overrides\": [\n      {\n        \"files\": \"test/**/*\",\n        \"rules\": {\n          \"n/no-unsupported-features/es-syntax\": \"off\",\n          \"es5/no-shorthand-properties\": \"off\",\n          \"es5/no-template-literals\": \"off\",\n          \"es5/no-rest-parameters\": \"off\",\n          \"es5/no-arrow-functions\": \"off\",\n          \"es5/no-destructuring\": \"off\",\n          \"es5/no-block-scoping\": \"off\",\n          \"es5/no-es6-methods\": \"off\",\n          \"es5/no-spread\": \"off\",\n          \"es5/no-for-of\": \"off\",\n          \"no-console\": \"off\"\n        }\n      }\n    ]\n  },\n  \"eslintIgnore\": [\n    \"test/fixtures\"\n  ],\n  \"prettier\": {\n    \"arrowParens\": \"avoid\",\n    \"jsxSingleQuote\": false,\n    \"quoteProps\": \"consistent\",\n    \"semi\": false,\n    \"singleQuote\": true,\n    \"trailingComma\": \"none\"\n  }\n}\n"
        },
        {
          "name": "parse.js",
          "type": "blob",
          "size": 1.7470703125,
          "content": "var AND_REGEXP = /^\\s+and\\s+(.*)/i\nvar OR_REGEXP = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\nfunction find(string, predicate) {\n  for (var max = string.length, n = 1; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction matchQuery(all, query) {\n  var node = { query: query }\n  if (query.indexOf('not ') === 0) {\n    node.not = true\n    query = query.slice(4)\n  }\n\n  for (var name in all) {\n    var type = all[name]\n    var match = query.match(type.regexp)\n    if (match) {\n      node.type = name\n      for (var i = 0; i < type.matches.length; i++) {\n        node[type.matches[i]] = match[i + 1]\n      }\n      return node\n    }\n  }\n\n  node.type = 'unknown'\n  return node\n}\n\nfunction matchBlock(all, string, qs) {\n  var node\n  return find(string, function (parsed, n, max) {\n    if (AND_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(AND_REGEXP)[1])\n      node.compose = 'and'\n      qs.unshift(node)\n      return true\n    } else if (OR_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(OR_REGEXP)[1])\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    } else if (n === max) {\n      node = matchQuery(all, parsed.trim())\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    }\n    return false\n  })\n}\n\nmodule.exports = function parse(all, queries) {\n  if (!Array.isArray(queries)) queries = [queries]\n  return flatten(\n    queries.map(function (block) {\n      var qs = []\n      do {\n        block = matchBlock(all, block, qs)\n      } while (block)\n      return qs\n    })\n  )\n}\n"
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 99.7939453125,
          "content": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      caniuse-lite:\n        specifier: ^1.0.30001688\n        version: 1.0.30001688\n      electron-to-chromium:\n        specifier: ^1.5.73\n        version: 1.5.73\n      node-releases:\n        specifier: ^2.0.19\n        version: 2.0.19\n      update-browserslist-db:\n        specifier: ^1.1.1\n        version: 1.1.1(browserslist@4.24.0)\n    devDependencies:\n      '@eslint/eslintrc':\n        specifier: ^3.2.0\n        version: 3.2.0\n      '@logux/eslint-config':\n        specifier: ^53.5.1\n        version: 53.5.1(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      '@size-limit/preset-small-lib':\n        specifier: ^11.1.6\n        version: 11.1.6(size-limit@11.1.6)\n      c8:\n        specifier: ^10.1.3\n        version: 10.1.3\n      clean-publish:\n        specifier: ^5.1.0\n        version: 5.1.0\n      cross-spawn:\n        specifier: ^7.0.6\n        version: 7.0.6\n      eslint:\n        specifier: ^9.16.0\n        version: 9.16.0(jiti@2.4.1)\n      eslint-plugin-es5:\n        specifier: ^1.5.0\n        version: 1.5.0(eslint@9.16.0(jiti@2.4.1))\n      fs-extra:\n        specifier: ^11.2.0\n        version: 11.2.0\n      nanospy:\n        specifier: ^1.0.0\n        version: 1.0.0\n      size-limit:\n        specifier: ^11.1.6\n        version: 11.1.6\n      uvu:\n        specifier: ^0.5.6\n        version: 0.5.6\n\npackages:\n\n  '@bcoe/v8-coverage@1.0.1':\n    resolution: {integrity: sha512-W+a0/JpU28AqH4IKtwUPcEUnUyXMDLALcn5/JLczGGT9fHE2sIby/xP/oQnx3nxkForzgzPy201RAKcB4xPAFQ==}\n    engines: {node: '>=18'}\n\n  '@esbuild/aix-ppc64@0.24.0':\n    resolution: {integrity: sha512-WtKdFM7ls47zkKHFVzMz8opM7LkcsIp9amDUBIAWirg70RM71WRSjdILPsY5Uv1D42ZpUfaPILDlfactHgsRkw==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [aix]\n\n  '@esbuild/android-arm64@0.24.0':\n    resolution: {integrity: sha512-Vsm497xFM7tTIPYK9bNTYJyF/lsP590Qc1WxJdlB6ljCbdZKU9SY8i7+Iin4kyhV/KV5J2rOKsBQbB77Ab7L/w==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [android]\n\n  '@esbuild/android-arm@0.24.0':\n    resolution: {integrity: sha512-arAtTPo76fJ/ICkXWetLCc9EwEHKaeya4vMrReVlEIUCAUncH7M4bhMQ+M9Vf+FFOZJdTNMXNBrWwW+OXWpSew==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [android]\n\n  '@esbuild/android-x64@0.24.0':\n    resolution: {integrity: sha512-t8GrvnFkiIY7pa7mMgJd7p8p8qqYIz1NYiAoKc75Zyv73L3DZW++oYMSHPRarcotTKuSs6m3hTOa5CKHaS02TQ==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [android]\n\n  '@esbuild/darwin-arm64@0.24.0':\n    resolution: {integrity: sha512-CKyDpRbK1hXwv79soeTJNHb5EiG6ct3efd/FTPdzOWdbZZfGhpbcqIpiD0+vwmpu0wTIL97ZRPZu8vUt46nBSw==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@esbuild/darwin-x64@0.24.0':\n    resolution: {integrity: sha512-rgtz6flkVkh58od4PwTRqxbKH9cOjaXCMZgWD905JOzjFKW+7EiUObfd/Kav+A6Gyud6WZk9w+xu6QLytdi2OA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@esbuild/freebsd-arm64@0.24.0':\n    resolution: {integrity: sha512-6Mtdq5nHggwfDNLAHkPlyLBpE5L6hwsuXZX8XNmHno9JuL2+bg2BX5tRkwjyfn6sKbxZTq68suOjgWqCicvPXA==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@esbuild/freebsd-x64@0.24.0':\n    resolution: {integrity: sha512-D3H+xh3/zphoX8ck4S2RxKR6gHlHDXXzOf6f/9dbFt/NRBDIE33+cVa49Kil4WUjxMGW0ZIYBYtaGCa2+OsQwQ==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@esbuild/linux-arm64@0.24.0':\n    resolution: {integrity: sha512-TDijPXTOeE3eaMkRYpcy3LarIg13dS9wWHRdwYRnzlwlA370rNdZqbcp0WTyyV/k2zSxfko52+C7jU5F9Tfj1g==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@esbuild/linux-arm@0.24.0':\n    resolution: {integrity: sha512-gJKIi2IjRo5G6Glxb8d3DzYXlxdEj2NlkixPsqePSZMhLudqPhtZ4BUrpIuTjJYXxvF9njql+vRjB2oaC9XpBw==}\n    engines: {node: '>=18'}\n    cpu: [arm]\n    os: [linux]\n\n  '@esbuild/linux-ia32@0.24.0':\n    resolution: {integrity: sha512-K40ip1LAcA0byL05TbCQ4yJ4swvnbzHscRmUilrmP9Am7//0UjPreh4lpYzvThT2Quw66MhjG//20mrufm40mA==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [linux]\n\n  '@esbuild/linux-loong64@0.24.0':\n    resolution: {integrity: sha512-0mswrYP/9ai+CU0BzBfPMZ8RVm3RGAN/lmOMgW4aFUSOQBjA31UP8Mr6DDhWSuMwj7jaWOT0p0WoZ6jeHhrD7g==}\n    engines: {node: '>=18'}\n    cpu: [loong64]\n    os: [linux]\n\n  '@esbuild/linux-mips64el@0.24.0':\n    resolution: {integrity: sha512-hIKvXm0/3w/5+RDtCJeXqMZGkI2s4oMUGj3/jM0QzhgIASWrGO5/RlzAzm5nNh/awHE0A19h/CvHQe6FaBNrRA==}\n    engines: {node: '>=18'}\n    cpu: [mips64el]\n    os: [linux]\n\n  '@esbuild/linux-ppc64@0.24.0':\n    resolution: {integrity: sha512-HcZh5BNq0aC52UoocJxaKORfFODWXZxtBaaZNuN3PUX3MoDsChsZqopzi5UupRhPHSEHotoiptqikjN/B77mYQ==}\n    engines: {node: '>=18'}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@esbuild/linux-riscv64@0.24.0':\n    resolution: {integrity: sha512-bEh7dMn/h3QxeR2KTy1DUszQjUrIHPZKyO6aN1X4BCnhfYhuQqedHaa5MxSQA/06j3GpiIlFGSsy1c7Gf9padw==}\n    engines: {node: '>=18'}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@esbuild/linux-s390x@0.24.0':\n    resolution: {integrity: sha512-ZcQ6+qRkw1UcZGPyrCiHHkmBaj9SiCD8Oqd556HldP+QlpUIe2Wgn3ehQGVoPOvZvtHm8HPx+bH20c9pvbkX3g==}\n    engines: {node: '>=18'}\n    cpu: [s390x]\n    os: [linux]\n\n  '@esbuild/linux-x64@0.24.0':\n    resolution: {integrity: sha512-vbutsFqQ+foy3wSSbmjBXXIJ6PL3scghJoM8zCL142cGaZKAdCZHyf+Bpu/MmX9zT9Q0zFBVKb36Ma5Fzfa8xA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [linux]\n\n  '@esbuild/netbsd-x64@0.24.0':\n    resolution: {integrity: sha512-hjQ0R/ulkO8fCYFsG0FZoH+pWgTTDreqpqY7UnQntnaKv95uP5iW3+dChxnx7C3trQQU40S+OgWhUVwCjVFLvg==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [netbsd]\n\n  '@esbuild/openbsd-arm64@0.24.0':\n    resolution: {integrity: sha512-MD9uzzkPQbYehwcN583yx3Tu5M8EIoTD+tUgKF982WYL9Pf5rKy9ltgD0eUgs8pvKnmizxjXZyLt0z6DC3rRXg==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [openbsd]\n\n  '@esbuild/openbsd-x64@0.24.0':\n    resolution: {integrity: sha512-4ir0aY1NGUhIC1hdoCzr1+5b43mw99uNwVzhIq1OY3QcEwPDO3B7WNXBzaKY5Nsf1+N11i1eOfFcq+D/gOS15Q==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [openbsd]\n\n  '@esbuild/sunos-x64@0.24.0':\n    resolution: {integrity: sha512-jVzdzsbM5xrotH+W5f1s+JtUy1UWgjU0Cf4wMvffTB8m6wP5/kx0KiaLHlbJO+dMgtxKV8RQ/JvtlFcdZ1zCPA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [sunos]\n\n  '@esbuild/win32-arm64@0.24.0':\n    resolution: {integrity: sha512-iKc8GAslzRpBytO2/aN3d2yb2z8XTVfNV0PjGlCxKo5SgWmNXx82I/Q3aG1tFfS+A2igVCY97TJ8tnYwpUWLCA==}\n    engines: {node: '>=18'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@esbuild/win32-ia32@0.24.0':\n    resolution: {integrity: sha512-vQW36KZolfIudCcTnaTpmLQ24Ha1RjygBo39/aLkM2kmjkWmZGEJ5Gn9l5/7tzXA42QGIoWbICfg6KLLkIw6yw==}\n    engines: {node: '>=18'}\n    cpu: [ia32]\n    os: [win32]\n\n  '@esbuild/win32-x64@0.24.0':\n    resolution: {integrity: sha512-7IAFPrjSQIJrGsK6flwg7NFmwBoSTyF3rl7If0hNUFQU4ilTsEPL6GuMuU9BfIWVVGuRnuIidkSMC+c0Otu8IA==}\n    engines: {node: '>=18'}\n    cpu: [x64]\n    os: [win32]\n\n  '@eslint-community/eslint-utils@4.4.1':\n    resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0\n\n  '@eslint-community/regexpp@4.12.1':\n    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n\n  '@eslint/config-array@0.19.1':\n    resolution: {integrity: sha512-fo6Mtm5mWyKjA/Chy1BYTdn5mGJoDNjC7C64ug20ADsRDGrA85bN3uK3MaKbeRkRuuIEAR5N33Jr1pbm411/PA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/core@0.9.1':\n    resolution: {integrity: sha512-GuUdqkyyzQI5RMIWkHhvTWLCyLo1jNK3vzkSyaExH5kHPDHcuL2VOpHjmMY+y3+NC69qAKToBqldTBgYeLSr9Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/eslintrc@3.2.0':\n    resolution: {integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/js@9.16.0':\n    resolution: {integrity: sha512-tw2HxzQkrbeuvyj1tG2Yqq+0H9wGoI2IMk4EOsQeX+vmd75FtJAzf+gTA69WF+baUKRYQ3x2kbLE08js5OsTVg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/object-schema@2.1.5':\n    resolution: {integrity: sha512-o0bhxnL89h5Bae5T318nFoFzGy+YE5i/gGkoPAgkmTVdRKTiv3p8JHevPiPaMwoloKfEiiaHlawCqaZMqRm+XQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/plugin-kit@0.2.4':\n    resolution: {integrity: sha512-zSkKow6H5Kdm0ZUQUB2kV5JIXqoG0+uH5YADhaEHswm664N9Db8dXSi0nMJpacpMf+MyyglF1vnZohpEg5yUtg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@humanfs/core@0.19.1':\n    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanfs/node@0.16.6':\n    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanwhocodes/module-importer@1.0.1':\n    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}\n    engines: {node: '>=12.22'}\n\n  '@humanwhocodes/retry@0.3.1':\n    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}\n    engines: {node: '>=18.18'}\n\n  '@humanwhocodes/retry@0.4.1':\n    resolution: {integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==}\n    engines: {node: '>=18.18'}\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@istanbuljs/schema@0.1.3':\n    resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}\n    engines: {node: '>=8'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@logux/eslint-config@53.5.1':\n    resolution: {integrity: sha512-rw8NxhTWPcqBTenTrKhuLwq4vpecogq+cw7g0q9/QTbj+Waj2POZMuhS7Dn9UoXkmJ5r5n1gdyURHKZsB8MOLg==}\n    engines: {node: '>=18.0.0'}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      eslint-plugin-svelte: ^2.35.1\n      svelte: ^4.2.12 || ^5.0.0\n    peerDependenciesMeta:\n      eslint-plugin-svelte:\n        optional: true\n      svelte:\n        optional: true\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@rtsao/scc@1.1.0':\n    resolution: {integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==}\n\n  '@size-limit/esbuild@11.1.6':\n    resolution: {integrity: sha512-0nBKYSxeRjUVCVoCkWZbmGkGBwpm0HdwHedWgxksBGxTKU0PjOMSHc3XTjKOrXBKXQzw90Ue0mgOd4n6zct9SA==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    peerDependencies:\n      size-limit: 11.1.6\n\n  '@size-limit/file@11.1.6':\n    resolution: {integrity: sha512-ojzzJMrTfcSECRnaTjGy0wNIolTCRdyqZTSWG9sG5XEoXG6PNgHXDDS6gf6YNxnqb+rWfCfVe93u6aKi3wEocQ==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    peerDependencies:\n      size-limit: 11.1.6\n\n  '@size-limit/preset-small-lib@11.1.6':\n    resolution: {integrity: sha512-hlmkBlOryJIsKlGpS61Ti7/EEZomygAzOabpo2htdxUbkCkvtVoUQpGWHUfWuxdhheDVF6rtZZ6lPGftMKlaQg==}\n    peerDependencies:\n      size-limit: 11.1.6\n\n  '@types/estree@1.0.6':\n    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}\n\n  '@types/istanbul-lib-coverage@2.0.6':\n    resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}\n\n  '@types/json-schema@7.0.15':\n    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}\n\n  '@types/json5@0.0.29':\n    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}\n\n  '@typescript-eslint/eslint-plugin@8.18.0':\n    resolution: {integrity: sha512-NR2yS7qUqCL7AIxdJUQf2MKKNDVNaig/dEB0GBLU7D+ZdHgK1NoH/3wsgO3OnPVipn51tG3MAwaODEGil70WEw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      '@typescript-eslint/parser': ^8.0.0 || ^8.0.0-alpha.0\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/parser@8.18.0':\n    resolution: {integrity: sha512-hgUZ3kTEpVzKaK3uNibExUYm6SKKOmTU2BOxBSvOYwtJEPdVQ70kZJpPjstlnhCHcuc2WGfSbpKlb/69ttyN5Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/scope-manager@8.18.0':\n    resolution: {integrity: sha512-PNGcHop0jkK2WVYGotk/hxj+UFLhXtGPiGtiaWgVBVP1jhMoMCHlTyJA+hEj4rszoSdLTK3fN4oOatrL0Cp+Xw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/type-utils@8.18.0':\n    resolution: {integrity: sha512-er224jRepVAVLnMF2Q7MZJCq5CsdH2oqjP4dT7K6ij09Kyd+R21r7UVJrF0buMVdZS5QRhDzpvzAxHxabQadow==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/types@8.18.0':\n    resolution: {integrity: sha512-FNYxgyTCAnFwTrzpBGq+zrnoTO4x0c1CKYY5MuUTzpScqmY5fmsh2o3+57lqdI3NZucBDCzDgdEbIaNfAjAHQA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/typescript-estree@8.18.0':\n    resolution: {integrity: sha512-rqQgFRu6yPkauz+ms3nQpohwejS8bvgbPyIDq13cgEDbkXt4LH4OkDMT0/fN1RUtzG8e8AKJyDBoocuQh8qNeg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/utils@8.18.0':\n    resolution: {integrity: sha512-p6GLdY383i7h5b0Qrfbix3Vc3+J2k6QWw6UMUeY5JGfm3C5LbZ4QIZzJNoNOfgyRe0uuYKjvVOsO/jD4SJO+xg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/visitor-keys@8.18.0':\n    resolution: {integrity: sha512-pCh/qEA8Lb1wVIqNvBke8UaRjJ6wrAWkJO5yyIbs8Yx6TNGYyfNjOo61tLv+WwLvoLPp4BQ8B7AHKijl8NGUfw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  acorn-jsx@5.3.2:\n    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}\n    peerDependencies:\n      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0\n\n  acorn@8.14.0:\n    resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  ajv@6.12.6:\n    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.1.0:\n    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  argparse@2.0.1:\n    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}\n\n  array-buffer-byte-length@1.0.1:\n    resolution: {integrity: sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==}\n    engines: {node: '>= 0.4'}\n\n  array-includes@3.1.8:\n    resolution: {integrity: sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.findlastindex@1.2.5:\n    resolution: {integrity: sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flat@1.3.2:\n    resolution: {integrity: sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flatmap@1.3.2:\n    resolution: {integrity: sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==}\n    engines: {node: '>= 0.4'}\n\n  arraybuffer.prototype.slice@1.0.3:\n    resolution: {integrity: sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==}\n    engines: {node: '>= 0.4'}\n\n  available-typed-arrays@1.0.7:\n    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}\n    engines: {node: '>= 0.4'}\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  brace-expansion@1.1.11:\n    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n\n  brace-expansion@2.0.1:\n    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  browserslist@4.24.0:\n    resolution: {integrity: sha512-Rmb62sR1Zpjql25eSanFGEhAxcFwfA1K0GuQcLoaJBAcENegrQut3hYdhXFF1obQfiDyqIW/cLM5HSJ/9k884A==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  bytes-iec@3.1.1:\n    resolution: {integrity: sha512-fey6+4jDK7TFtFg/klGSvNKJctyU7n2aQdnM+CO0ruLPbqqMOM8Tio0Pc+deqUeVKX1tL5DQep1zQ7+37aTAsA==}\n    engines: {node: '>= 0.8'}\n\n  c8@10.1.3:\n    resolution: {integrity: sha512-LvcyrOAaOnrrlMpW22n690PUvxiq4Uf9WMhQwNJ9vgagkL/ph1+D4uvjvDA5XCbykrc0sx+ay6pVi9YZ1GnhyA==}\n    engines: {node: '>=18'}\n    hasBin: true\n    peerDependencies:\n      monocart-coverage-reports: ^2\n    peerDependenciesMeta:\n      monocart-coverage-reports:\n        optional: true\n\n  call-bind-apply-helpers@1.0.1:\n    resolution: {integrity: sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==}\n    engines: {node: '>= 0.4'}\n\n  call-bind@1.0.8:\n    resolution: {integrity: sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==}\n    engines: {node: '>= 0.4'}\n\n  call-bound@1.0.2:\n    resolution: {integrity: sha512-0lk0PHFe/uz0vl527fG9CgdE9WdafjDbCXvBbs+LUv000TVt2Jjhqbs4Jwm8gz070w8xXyEAxrPOMullsxXeGg==}\n    engines: {node: '>= 0.4'}\n\n  callsites@3.1.0:\n    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}\n    engines: {node: '>=6'}\n\n  caniuse-lite@1.0.30001688:\n    resolution: {integrity: sha512-Nmqpru91cuABu/DTCXbM2NSRHzM2uVHfPnhJ/1zEAJx/ILBRVmz3pzH4N7DZqbdG0gWClsCC05Oj0mJ/1AWMbA==}\n\n  chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n\n  chokidar@4.0.1:\n    resolution: {integrity: sha512-n8enUVCED/KVRQlab1hr3MVpcVMvxtZjmEa956u+4YijlmQED223XMSYj2tLuKvr4jcCTzNNMpQDUer72MMmzA==}\n    engines: {node: '>= 14.16.0'}\n\n  clean-publish@5.1.0:\n    resolution: {integrity: sha512-Gbz8x7sL/sn0j+2B+yYEumD17WmPT6pHLN+A5nhcd0Sdh86EYblQleU+dUIICXVFalFMFBdW2aGynrVJ6k1u4Q==}\n    engines: {node: '>= 18.0.0'}\n    hasBin: true\n\n  cliui@8.0.1:\n    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}\n    engines: {node: '>=12'}\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n\n  convert-source-map@2.0.0:\n    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  data-view-buffer@1.0.1:\n    resolution: {integrity: sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-length@1.0.1:\n    resolution: {integrity: sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-offset@1.0.0:\n    resolution: {integrity: sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==}\n    engines: {node: '>= 0.4'}\n\n  debug@3.2.7:\n    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.4.0:\n    resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  deep-is@0.1.4:\n    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n\n  define-data-property@1.1.4:\n    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}\n    engines: {node: '>= 0.4'}\n\n  define-properties@1.2.1:\n    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}\n    engines: {node: '>= 0.4'}\n\n  dequal@2.0.3:\n    resolution: {integrity: sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==}\n    engines: {node: '>=6'}\n\n  diff@5.2.0:\n    resolution: {integrity: sha512-uIFDxqpRZGZ6ThOk84hEfqWoHx2devRFvpTZcTHur85vImfaxUbTW9Ryh4CpCuDnToOP1CEtXKIgytHBPVff5A==}\n    engines: {node: '>=0.3.1'}\n\n  doctrine@2.1.0:\n    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}\n    engines: {node: '>=0.10.0'}\n\n  dunder-proto@1.0.0:\n    resolution: {integrity: sha512-9+Sj30DIu+4KvHqMfLUGLFYL2PkURSYMVXJyXe92nFRvlYq5hBjLEhblKB+vkd/WVlUYMWigiY07T91Fkk0+4A==}\n    engines: {node: '>= 0.4'}\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  electron-to-chromium@1.5.73:\n    resolution: {integrity: sha512-8wGNxG9tAG5KhGd3eeA0o6ixhiNdgr0DcHWm85XPCphwZgD1lIEoi6t3VERayWao7SF7AAZTw6oARGJeVjH8Kg==}\n\n  emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  enhanced-resolve@5.17.1:\n    resolution: {integrity: sha512-LMHl3dXhTcfv8gM4kEzIUeTQ+7fpdA0l2tUf34BddXPkz2A5xJ5L/Pchd5BL6rdccM9QGvu0sWZzK1Z1t4wwyg==}\n    engines: {node: '>=10.13.0'}\n\n  es-abstract@1.23.5:\n    resolution: {integrity: sha512-vlmniQ0WNPwXqA0BnmwV3Ng7HxiGlh6r5U6JcTMNx8OilcAGqVJBHJcPjqOMaczU9fRuRK5Px2BdVyPRnKMMVQ==}\n    engines: {node: '>= 0.4'}\n\n  es-define-property@1.0.1:\n    resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}\n    engines: {node: '>= 0.4'}\n\n  es-errors@1.3.0:\n    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}\n    engines: {node: '>= 0.4'}\n\n  es-object-atoms@1.0.0:\n    resolution: {integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==}\n    engines: {node: '>= 0.4'}\n\n  es-set-tostringtag@2.0.3:\n    resolution: {integrity: sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==}\n    engines: {node: '>= 0.4'}\n\n  es-shim-unscopables@1.0.2:\n    resolution: {integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==}\n\n  es-to-primitive@1.3.0:\n    resolution: {integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==}\n    engines: {node: '>= 0.4'}\n\n  esbuild@0.24.0:\n    resolution: {integrity: sha512-FuLPevChGDshgSicjisSooU0cemp/sGXR841D5LHMB7mTVOmsEHcAxaH3irL53+8YDIeVNQEySh4DaYU/iuPqQ==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  escalade@3.2.0:\n    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}\n    engines: {node: '>=6'}\n\n  escape-string-regexp@4.0.0:\n    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}\n    engines: {node: '>=10'}\n\n  eslint-compat-utils@0.5.1:\n    resolution: {integrity: sha512-3z3vFexKIEnjHE3zCMRo6fn/e44U7T1khUjg+Hp0ZQMCigh28rALD0nPFBcGZuiLC5rLZa2ubQHDRln09JfU2Q==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      eslint: '>=6.0.0'\n\n  eslint-config-standard@17.1.0:\n    resolution: {integrity: sha512-IwHwmaBNtDK4zDHQukFDW5u/aTb8+meQWZvNFWkiGmbWjD6bqyuSSBxxXKkCftCUzc1zwCH2m/baCNDLGmuO5Q==}\n    engines: {node: '>=12.0.0'}\n    peerDependencies:\n      eslint: ^8.0.1\n      eslint-plugin-import: ^2.25.2\n      eslint-plugin-n: '^15.0.0 || ^16.0.0 '\n      eslint-plugin-promise: ^6.0.0\n\n  eslint-import-resolver-node@0.3.9:\n    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}\n\n  eslint-module-utils@2.12.0:\n    resolution: {integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      '@typescript-eslint/parser': '*'\n      eslint: '*'\n      eslint-import-resolver-node: '*'\n      eslint-import-resolver-typescript: '*'\n      eslint-import-resolver-webpack: '*'\n    peerDependenciesMeta:\n      '@typescript-eslint/parser':\n        optional: true\n      eslint:\n        optional: true\n      eslint-import-resolver-node:\n        optional: true\n      eslint-import-resolver-typescript:\n        optional: true\n      eslint-import-resolver-webpack:\n        optional: true\n\n  eslint-plugin-es-x@7.8.0:\n    resolution: {integrity: sha512-7Ds8+wAAoV3T+LAKeu39Y5BzXCrGKrcISfgKEqTS4BDN8SFEDQd0S43jiQ8vIa3wUKD07qitZdfzlenSi8/0qQ==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n    peerDependencies:\n      eslint: '>=8'\n\n  eslint-plugin-es5@1.5.0:\n    resolution: {integrity: sha512-Qxmfo7v2B7SGAEURJo0dpBweFf+JU15kSyALfiB2rXWcBuJ96r6X9kFHXFnhdopPHCaHjoQs1xQPUJVbGMb1AA==}\n    peerDependencies:\n      eslint: '>= 3.0.0'\n\n  eslint-plugin-import@2.31.0:\n    resolution: {integrity: sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      '@typescript-eslint/parser': '*'\n      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9\n    peerDependenciesMeta:\n      '@typescript-eslint/parser':\n        optional: true\n\n  eslint-plugin-n@17.15.0:\n    resolution: {integrity: sha512-xF3zJkOfLlFOm5TvmqmsnA9/fO+/z2pYs0dkuKXKN/ymS6UB1yEcaoIkqxLKQ9Dw/WmLX/Tdh6/5ZS5azVixFQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: '>=8.23.0'\n\n  eslint-plugin-perfectionist@3.9.1:\n    resolution: {integrity: sha512-9WRzf6XaAxF4Oi5t/3TqKP5zUjERhasHmLFHin2Yw6ZAp/EP/EVA2dr3BhQrrHWCm5SzTMZf0FcjDnBkO2xFkA==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    peerDependencies:\n      astro-eslint-parser: ^1.0.2\n      eslint: '>=8.0.0'\n      svelte: '>=3.0.0'\n      svelte-eslint-parser: ^0.41.1\n      vue-eslint-parser: '>=9.0.0'\n    peerDependenciesMeta:\n      astro-eslint-parser:\n        optional: true\n      svelte:\n        optional: true\n      svelte-eslint-parser:\n        optional: true\n      vue-eslint-parser:\n        optional: true\n\n  eslint-plugin-prefer-let@4.0.0:\n    resolution: {integrity: sha512-X4ep5PMO1320HKaNC9DM5+p6XvOhwv+RcqGjhv3aiw9iAtHhiFtdIUB5l0Zya0iM22ys2BGKzrNI9Xpw/ZHooQ==}\n    engines: {node: '>=0.10.0'}\n\n  eslint-plugin-promise@7.2.1:\n    resolution: {integrity: sha512-SWKjd+EuvWkYaS+uN2csvj0KoP43YTu7+phKQ5v+xw6+A0gutVX2yqCeCkC3uLCJFiPfR2dD8Es5L7yUsmvEaA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^7.0.0 || ^8.0.0 || ^9.0.0\n\n  eslint-scope@8.2.0:\n    resolution: {integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint-visitor-keys@3.4.3:\n    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n\n  eslint-visitor-keys@4.2.0:\n    resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint@9.16.0:\n    resolution: {integrity: sha512-whp8mSQI4C8VXd+fLgSM0lh3UlmcFtVwUQjyKCFfsp+2ItAIYhlq/hqGahGqHE6cv9unM41VlqKk2VtKYR2TaA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    hasBin: true\n    peerDependencies:\n      jiti: '*'\n    peerDependenciesMeta:\n      jiti:\n        optional: true\n\n  espree@10.3.0:\n    resolution: {integrity: sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  esquery@1.6.0:\n    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}\n    engines: {node: '>=0.10'}\n\n  esrecurse@4.3.0:\n    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}\n    engines: {node: '>=4.0'}\n\n  estraverse@5.3.0:\n    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}\n    engines: {node: '>=4.0'}\n\n  esutils@2.0.3:\n    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}\n    engines: {node: '>=0.10.0'}\n\n  fast-deep-equal@3.1.3:\n    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}\n\n  fast-glob@3.3.2:\n    resolution: {integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==}\n    engines: {node: '>=8.6.0'}\n\n  fast-json-stable-stringify@2.1.0:\n    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}\n\n  fast-levenshtein@2.0.6:\n    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}\n\n  fastq@1.17.1:\n    resolution: {integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==}\n\n  fdir@6.4.2:\n    resolution: {integrity: sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==}\n    peerDependencies:\n      picomatch: ^3 || ^4\n    peerDependenciesMeta:\n      picomatch:\n        optional: true\n\n  file-entry-cache@8.0.0:\n    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}\n    engines: {node: '>=16.0.0'}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  find-up@5.0.0:\n    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}\n    engines: {node: '>=10'}\n\n  flat-cache@4.0.1:\n    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}\n    engines: {node: '>=16'}\n\n  flatted@3.3.2:\n    resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}\n\n  for-each@0.3.3:\n    resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}\n\n  foreground-child@3.3.0:\n    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}\n    engines: {node: '>=14'}\n\n  fs-extra@11.2.0:\n    resolution: {integrity: sha512-PmDi3uwK5nFuXh7XDTlVnS17xJS7vW36is2+w3xcv8SVxiB4NyATf4ctkVY5bkSjX0Y4nbvZCq1/EjtEyr9ktw==}\n    engines: {node: '>=14.14'}\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  function.prototype.name@1.1.6:\n    resolution: {integrity: sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==}\n    engines: {node: '>= 0.4'}\n\n  functions-have-names@1.2.3:\n    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}\n\n  get-caller-file@2.0.5:\n    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}\n    engines: {node: 6.* || 8.* || >= 10.*}\n\n  get-intrinsic@1.2.6:\n    resolution: {integrity: sha512-qxsEs+9A+u85HhllWJJFicJfPDhRmjzoYdl64aMWW9yRIJmSyxdn8IEkuIM530/7T+lv0TIHd8L6Q/ra0tEoeA==}\n    engines: {node: '>= 0.4'}\n\n  get-symbol-description@1.0.2:\n    resolution: {integrity: sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==}\n    engines: {node: '>= 0.4'}\n\n  get-tsconfig@4.8.1:\n    resolution: {integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  glob@10.4.5:\n    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n    hasBin: true\n\n  globals@14.0.0:\n    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}\n    engines: {node: '>=18'}\n\n  globals@15.13.0:\n    resolution: {integrity: sha512-49TewVEz0UxZjr1WYYsWpPrhyC/B/pA8Bq0fUmet2n+eR7yn0IvNzNaoBwnK6mdkzcN+se7Ez9zUgULTz2QH4g==}\n    engines: {node: '>=18'}\n\n  globalthis@1.0.4:\n    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}\n    engines: {node: '>= 0.4'}\n\n  gopd@1.2.0:\n    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}\n    engines: {node: '>= 0.4'}\n\n  graceful-fs@4.2.11:\n    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}\n\n  graphemer@1.4.0:\n    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}\n\n  has-bigints@1.0.2:\n    resolution: {integrity: sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==}\n\n  has-flag@4.0.0:\n    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}\n    engines: {node: '>=8'}\n\n  has-property-descriptors@1.0.2:\n    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}\n\n  has-proto@1.2.0:\n    resolution: {integrity: sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==}\n    engines: {node: '>= 0.4'}\n\n  has-symbols@1.1.0:\n    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}\n    engines: {node: '>= 0.4'}\n\n  has-tostringtag@1.0.2:\n    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}\n    engines: {node: '>= 0.4'}\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  html-escaper@2.0.2:\n    resolution: {integrity: sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==}\n\n  ignore@5.3.2:\n    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}\n    engines: {node: '>= 4'}\n\n  import-fresh@3.3.0:\n    resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}\n    engines: {node: '>=6'}\n\n  imurmurhash@0.1.4:\n    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}\n    engines: {node: '>=0.8.19'}\n\n  internal-slot@1.1.0:\n    resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}\n    engines: {node: '>= 0.4'}\n\n  is-array-buffer@3.0.4:\n    resolution: {integrity: sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==}\n    engines: {node: '>= 0.4'}\n\n  is-async-function@2.0.0:\n    resolution: {integrity: sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==}\n    engines: {node: '>= 0.4'}\n\n  is-bigint@1.1.0:\n    resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}\n    engines: {node: '>= 0.4'}\n\n  is-boolean-object@1.2.1:\n    resolution: {integrity: sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==}\n    engines: {node: '>= 0.4'}\n\n  is-callable@1.2.7:\n    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}\n    engines: {node: '>= 0.4'}\n\n  is-core-module@2.15.1:\n    resolution: {integrity: sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==}\n    engines: {node: '>= 0.4'}\n\n  is-data-view@1.0.2:\n    resolution: {integrity: sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==}\n    engines: {node: '>= 0.4'}\n\n  is-date-object@1.1.0:\n    resolution: {integrity: sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==}\n    engines: {node: '>= 0.4'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-finalizationregistry@1.1.0:\n    resolution: {integrity: sha512-qfMdqbAQEwBw78ZyReKnlA8ezmPdb9BemzIIip/JkjaZUhitfXDkkr+3QTboW0JrSXT1QWyYShpvnNHGZ4c4yA==}\n    engines: {node: '>= 0.4'}\n\n  is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  is-generator-function@1.0.10:\n    resolution: {integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==}\n    engines: {node: '>= 0.4'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-map@2.0.3:\n    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}\n    engines: {node: '>= 0.4'}\n\n  is-negative-zero@2.0.3:\n    resolution: {integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==}\n    engines: {node: '>= 0.4'}\n\n  is-number-object@1.1.0:\n    resolution: {integrity: sha512-KVSZV0Dunv9DTPkhXwcZ3Q+tUc9TsaE1ZwX5J2WMvsSGS6Md8TFPun5uwh0yRdrNerI6vf/tbJxqSx4c1ZI1Lw==}\n    engines: {node: '>= 0.4'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  is-regex@1.2.1:\n    resolution: {integrity: sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==}\n    engines: {node: '>= 0.4'}\n\n  is-set@2.0.3:\n    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}\n    engines: {node: '>= 0.4'}\n\n  is-shared-array-buffer@1.0.3:\n    resolution: {integrity: sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==}\n    engines: {node: '>= 0.4'}\n\n  is-string@1.1.0:\n    resolution: {integrity: sha512-PlfzajuF9vSo5wErv3MJAKD/nqf9ngAs1NFQYm16nUYFO2IzxJ2hcm+IOCg+EEopdykNNUhVq5cz35cAUxU8+g==}\n    engines: {node: '>= 0.4'}\n\n  is-symbol@1.1.1:\n    resolution: {integrity: sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==}\n    engines: {node: '>= 0.4'}\n\n  is-typed-array@1.1.13:\n    resolution: {integrity: sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==}\n    engines: {node: '>= 0.4'}\n\n  is-weakmap@2.0.2:\n    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}\n    engines: {node: '>= 0.4'}\n\n  is-weakref@1.1.0:\n    resolution: {integrity: sha512-SXM8Nwyys6nT5WP6pltOwKytLV7FqQ4UiibxVmW+EIosHcmCqkkjViTb5SNssDlkCiEYRP1/pdWUKVvZBmsR2Q==}\n    engines: {node: '>= 0.4'}\n\n  is-weakset@2.0.3:\n    resolution: {integrity: sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==}\n    engines: {node: '>= 0.4'}\n\n  isarray@2.0.5:\n    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  istanbul-lib-coverage@3.2.2:\n    resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}\n    engines: {node: '>=8'}\n\n  istanbul-lib-report@3.0.1:\n    resolution: {integrity: sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==}\n    engines: {node: '>=10'}\n\n  istanbul-reports@3.1.7:\n    resolution: {integrity: sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==}\n    engines: {node: '>=8'}\n\n  jackspeak@3.4.3:\n    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}\n\n  jiti@2.4.1:\n    resolution: {integrity: sha512-yPBThwecp1wS9DmoA4x4KR2h3QoslacnDR8ypuFM962kI4/456Iy1oHx2RAgh4jfZNdn0bctsdadceiBUgpU1g==}\n    hasBin: true\n\n  js-yaml@4.1.0:\n    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}\n    hasBin: true\n\n  json-buffer@3.0.1:\n    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}\n\n  json-schema-traverse@0.4.1:\n    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}\n\n  json-stable-stringify-without-jsonify@1.0.1:\n    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}\n\n  json5@1.0.2:\n    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}\n    hasBin: true\n\n  jsonfile@6.1.0:\n    resolution: {integrity: sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==}\n\n  keyv@4.5.4:\n    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}\n\n  kleur@4.1.5:\n    resolution: {integrity: sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==}\n    engines: {node: '>=6'}\n\n  levn@0.4.1:\n    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}\n    engines: {node: '>= 0.8.0'}\n\n  lilconfig@3.1.3:\n    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}\n    engines: {node: '>=14'}\n\n  locate-path@6.0.0:\n    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}\n    engines: {node: '>=10'}\n\n  lodash.merge@4.6.2:\n    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}\n\n  lru-cache@10.4.3:\n    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}\n\n  make-dir@4.0.0:\n    resolution: {integrity: sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==}\n    engines: {node: '>=10'}\n\n  math-intrinsics@1.0.0:\n    resolution: {integrity: sha512-4MqMiKP90ybymYvsut0CH2g4XWbfLtmlCkXmtmdcDCxNB+mQcu1w/1+L/VD7vi/PSv7X2JYV7SCcR+jiPXnQtA==}\n    engines: {node: '>= 0.4'}\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minimist@1.2.8:\n    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}\n\n  minipass@7.1.2:\n    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  mri@1.2.0:\n    resolution: {integrity: sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==}\n    engines: {node: '>=4'}\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  nanoid@5.0.9:\n    resolution: {integrity: sha512-Aooyr6MXU6HpvvWXKoVoXwKMs/KyVakWwg7xQfv5/S/RIgJMy0Ifa45H9qqYy7pTCszrHzP21Uk4PZq2HpEM8Q==}\n    engines: {node: ^18 || >=20}\n    hasBin: true\n\n  nanospinner@1.2.2:\n    resolution: {integrity: sha512-Zt/AmG6qRU3e+WnzGGLuMCEAO/dAu45stNbHY223tUxldaDAeE+FxSPsd9Q+j+paejmm0ZbrNVs5Sraqy3dRxA==}\n\n  nanospy@1.0.0:\n    resolution: {integrity: sha512-wvmmALNstRRhLhy7RV11NCRY2k1zxstImiju4VyyKNNRIKDVjyBtmEd/Q4G82/3dN4VSTe+0PRR3DUAASSbEEQ==}\n    engines: {node: ^8.0.0 || ^10.0.0 || ^12.0.0 || ^14.0.0 || ^16.0.0 || ^18.0.0 || >=20.0.0}\n\n  natural-compare-lite@1.4.0:\n    resolution: {integrity: sha512-Tj+HTDSJJKaZnfiuw+iaF9skdPpTo2GtEly5JHnWV/hfv2Qj/9RKsGISQtLh2ox3l5EAGw487hnBee0sIJ6v2g==}\n\n  natural-compare@1.4.0:\n    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n\n  node-releases@2.0.19:\n    resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}\n\n  object-inspect@1.13.3:\n    resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}\n    engines: {node: '>= 0.4'}\n\n  object-keys@1.1.1:\n    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}\n    engines: {node: '>= 0.4'}\n\n  object.assign@4.1.5:\n    resolution: {integrity: sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==}\n    engines: {node: '>= 0.4'}\n\n  object.fromentries@2.0.8:\n    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}\n    engines: {node: '>= 0.4'}\n\n  object.groupby@1.0.3:\n    resolution: {integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==}\n    engines: {node: '>= 0.4'}\n\n  object.values@1.2.0:\n    resolution: {integrity: sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==}\n    engines: {node: '>= 0.4'}\n\n  optionator@0.9.4:\n    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}\n    engines: {node: '>= 0.8.0'}\n\n  p-limit@3.1.0:\n    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}\n    engines: {node: '>=10'}\n\n  p-locate@5.0.0:\n    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}\n    engines: {node: '>=10'}\n\n  package-json-from-dist@1.0.1:\n    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}\n\n  parent-module@1.0.1:\n    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}\n    engines: {node: '>=6'}\n\n  path-exists@4.0.0:\n    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}\n    engines: {node: '>=8'}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  path-scurry@1.11.1:\n    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n    engines: {node: '>=16 || 14 >=14.18'}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  picomatch@4.0.2:\n    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}\n    engines: {node: '>=12'}\n\n  possible-typed-array-names@1.0.0:\n    resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}\n    engines: {node: '>= 0.4'}\n\n  prelude-ls@1.2.1:\n    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n    engines: {node: '>= 0.8.0'}\n\n  punycode@2.3.1:\n    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}\n    engines: {node: '>=6'}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  readdirp@4.0.2:\n    resolution: {integrity: sha512-yDMz9g+VaZkqBYS/ozoBJwaBhTbZo3UNYQHNRw1D3UFQB8oHB4uS/tAODO+ZLjGWmUbKnIlOWO+aaIiAxrUWHA==}\n    engines: {node: '>= 14.16.0'}\n\n  reflect.getprototypeof@1.0.8:\n    resolution: {integrity: sha512-B5dj6usc5dkk8uFliwjwDHM8To5/QwdKz9JcBZ8Ic4G1f0YmeeJTtE/ZTdgRFPAfxZFiUaPhZ1Jcs4qeagItGQ==}\n    engines: {node: '>= 0.4'}\n\n  regexp.prototype.flags@1.5.3:\n    resolution: {integrity: sha512-vqlC04+RQoFalODCbCumG2xIOvapzVMHwsyIGM/SIE8fRhFFsXeH8/QQ+s0T0kDAhKc4k30s73/0ydkHQz6HlQ==}\n    engines: {node: '>= 0.4'}\n\n  require-directory@2.1.1:\n    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}\n    engines: {node: '>=0.10.0'}\n\n  requireindex@1.2.0:\n    resolution: {integrity: sha512-L9jEkOi3ASd9PYit2cwRfyppc9NoABujTP8/5gFcbERmo5jUoAKovIC3fsF17pkTnGsrByysqX+Kxd2OTNI1ww==}\n    engines: {node: '>=0.10.5'}\n\n  resolve-from@4.0.0:\n    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}\n    engines: {node: '>=4'}\n\n  resolve-pkg-maps@1.0.0:\n    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}\n\n  resolve@1.22.8:\n    resolution: {integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==}\n    hasBin: true\n\n  reusify@1.0.4:\n    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  sade@1.8.1:\n    resolution: {integrity: sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==}\n    engines: {node: '>=6'}\n\n  safe-array-concat@1.1.3:\n    resolution: {integrity: sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==}\n    engines: {node: '>=0.4'}\n\n  safe-regex-test@1.1.0:\n    resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}\n    engines: {node: '>= 0.4'}\n\n  semver@6.3.1:\n    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}\n    hasBin: true\n\n  semver@7.6.3:\n    resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  set-function-length@1.2.2:\n    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}\n    engines: {node: '>= 0.4'}\n\n  set-function-name@2.0.2:\n    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}\n    engines: {node: '>= 0.4'}\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  side-channel-list@1.0.0:\n    resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}\n    engines: {node: '>= 0.4'}\n\n  side-channel-map@1.0.1:\n    resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}\n    engines: {node: '>= 0.4'}\n\n  side-channel-weakmap@1.0.2:\n    resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}\n    engines: {node: '>= 0.4'}\n\n  side-channel@1.1.0:\n    resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}\n    engines: {node: '>= 0.4'}\n\n  signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n\n  size-limit@11.1.6:\n    resolution: {integrity: sha512-S5ux2IB8rU26xwVgMskmknGMFkieaIAqDLuwgKiypk6oa4lFsie8yFPrzRFV+yrLDY2GddjXuCaVk5PveVOHiQ==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n\n  string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n\n  string-width@5.1.2:\n    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}\n    engines: {node: '>=12'}\n\n  string.prototype.trim@1.2.10:\n    resolution: {integrity: sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.trimend@1.0.9:\n    resolution: {integrity: sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.trimstart@1.0.8:\n    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}\n    engines: {node: '>= 0.4'}\n\n  strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n\n  strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n\n  strip-bom@3.0.0:\n    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}\n    engines: {node: '>=4'}\n\n  strip-json-comments@3.1.1:\n    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}\n    engines: {node: '>=8'}\n\n  supports-color@7.2.0:\n    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}\n    engines: {node: '>=8'}\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  tapable@2.2.1:\n    resolution: {integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==}\n    engines: {node: '>=6'}\n\n  test-exclude@7.0.1:\n    resolution: {integrity: sha512-pFYqmTw68LXVjeWJMST4+borgQP2AyMNbg1BpZh9LbyhUeNkeaPF9gzfPGUAnSMV3qPYdWUwDIjjCLiSDOl7vg==}\n    engines: {node: '>=18'}\n\n  tinyglobby@0.2.10:\n    resolution: {integrity: sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==}\n    engines: {node: '>=12.0.0'}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  ts-api-utils@1.4.3:\n    resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}\n    engines: {node: '>=16'}\n    peerDependencies:\n      typescript: '>=4.2.0'\n\n  tsconfig-paths@3.15.0:\n    resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}\n\n  type-check@0.4.0:\n    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}\n    engines: {node: '>= 0.8.0'}\n\n  typed-array-buffer@1.0.2:\n    resolution: {integrity: sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-length@1.0.1:\n    resolution: {integrity: sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-offset@1.0.3:\n    resolution: {integrity: sha512-GsvTyUHTriq6o/bHcTd0vM7OQ9JEdlvluu9YISaA7+KzDzPaIzEeDFNkTfhdE3MYcNhNi0vq/LlegYgIs5yPAw==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-length@1.0.7:\n    resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}\n    engines: {node: '>= 0.4'}\n\n  typescript-eslint@8.18.0:\n    resolution: {integrity: sha512-Xq2rRjn6tzVpAyHr3+nmSg1/9k9aIHnJ2iZeOH7cfGOWqTkXTm3kwpQglEuLGdNrYvPF+2gtAs+/KF5rjVo+WQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  typescript@5.6.2:\n    resolution: {integrity: sha512-NW8ByodCSNCwZeghjN3o+JX5OFH0Ojg6sadjEKY4huZ52TqbJTJnDo5+Tw98lSy63NZvi4n+ez5m2u5d4PkZyw==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  unbox-primitive@1.0.2:\n    resolution: {integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==}\n\n  universalify@2.0.1:\n    resolution: {integrity: sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==}\n    engines: {node: '>= 10.0.0'}\n\n  update-browserslist-db@1.1.1:\n    resolution: {integrity: sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==}\n    hasBin: true\n    peerDependencies:\n      browserslist: '>= 4.21.0'\n\n  uri-js@4.4.1:\n    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}\n\n  uvu@0.5.6:\n    resolution: {integrity: sha512-+g8ENReyr8YsOc6fv/NVJs2vFdHBnBNdfE49rshrTzDWOlUx4Gq7KOS2GD8eqhy2j+Ejq29+SbKH8yjkAqXqoA==}\n    engines: {node: '>=8'}\n    hasBin: true\n\n  v8-to-istanbul@9.3.0:\n    resolution: {integrity: sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==}\n    engines: {node: '>=10.12.0'}\n\n  which-boxed-primitive@1.1.0:\n    resolution: {integrity: sha512-Ei7Miu/AXe2JJ4iNF5j/UphAgRoma4trE6PtisM09bPygb3egMH3YLW/befsWb1A1AxvNSFidOFTB18XtnIIng==}\n    engines: {node: '>= 0.4'}\n\n  which-builtin-type@1.2.1:\n    resolution: {integrity: sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==}\n    engines: {node: '>= 0.4'}\n\n  which-collection@1.0.2:\n    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}\n    engines: {node: '>= 0.4'}\n\n  which-typed-array@1.1.16:\n    resolution: {integrity: sha512-g+N+GAWiRj66DngFwHvISJd+ITsyphZvD1vChfVg6cEdnzy53GzB3oy0fUNlvhz7H7+MiqhYr26qxQShCpKTTQ==}\n    engines: {node: '>= 0.4'}\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  word-wrap@1.2.5:\n    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}\n    engines: {node: '>=0.10.0'}\n\n  wrap-ansi@7.0.0:\n    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}\n    engines: {node: '>=10'}\n\n  wrap-ansi@8.1.0:\n    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}\n    engines: {node: '>=12'}\n\n  y18n@5.0.8:\n    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}\n    engines: {node: '>=10'}\n\n  yargs-parser@21.1.1:\n    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}\n    engines: {node: '>=12'}\n\n  yargs@17.7.2:\n    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}\n    engines: {node: '>=12'}\n\n  yocto-queue@0.1.0:\n    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}\n    engines: {node: '>=10'}\n\nsnapshots:\n\n  '@bcoe/v8-coverage@1.0.1': {}\n\n  '@esbuild/aix-ppc64@0.24.0':\n    optional: true\n\n  '@esbuild/android-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/android-arm@0.24.0':\n    optional: true\n\n  '@esbuild/android-x64@0.24.0':\n    optional: true\n\n  '@esbuild/darwin-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/darwin-x64@0.24.0':\n    optional: true\n\n  '@esbuild/freebsd-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/freebsd-x64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-arm@0.24.0':\n    optional: true\n\n  '@esbuild/linux-ia32@0.24.0':\n    optional: true\n\n  '@esbuild/linux-loong64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-mips64el@0.24.0':\n    optional: true\n\n  '@esbuild/linux-ppc64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-riscv64@0.24.0':\n    optional: true\n\n  '@esbuild/linux-s390x@0.24.0':\n    optional: true\n\n  '@esbuild/linux-x64@0.24.0':\n    optional: true\n\n  '@esbuild/netbsd-x64@0.24.0':\n    optional: true\n\n  '@esbuild/openbsd-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/openbsd-x64@0.24.0':\n    optional: true\n\n  '@esbuild/sunos-x64@0.24.0':\n    optional: true\n\n  '@esbuild/win32-arm64@0.24.0':\n    optional: true\n\n  '@esbuild/win32-ia32@0.24.0':\n    optional: true\n\n  '@esbuild/win32-x64@0.24.0':\n    optional: true\n\n  '@eslint-community/eslint-utils@4.4.1(eslint@9.16.0(jiti@2.4.1))':\n    dependencies:\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-visitor-keys: 3.4.3\n\n  '@eslint-community/regexpp@4.12.1': {}\n\n  '@eslint/config-array@0.19.1':\n    dependencies:\n      '@eslint/object-schema': 2.1.5\n      debug: 4.4.0\n      minimatch: 3.1.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/core@0.9.1':\n    dependencies:\n      '@types/json-schema': 7.0.15\n\n  '@eslint/eslintrc@3.2.0':\n    dependencies:\n      ajv: 6.12.6\n      debug: 4.4.0\n      espree: 10.3.0\n      globals: 14.0.0\n      ignore: 5.3.2\n      import-fresh: 3.3.0\n      js-yaml: 4.1.0\n      minimatch: 3.1.2\n      strip-json-comments: 3.1.1\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/js@9.16.0': {}\n\n  '@eslint/object-schema@2.1.5': {}\n\n  '@eslint/plugin-kit@0.2.4':\n    dependencies:\n      levn: 0.4.1\n\n  '@humanfs/core@0.19.1': {}\n\n  '@humanfs/node@0.16.6':\n    dependencies:\n      '@humanfs/core': 0.19.1\n      '@humanwhocodes/retry': 0.3.1\n\n  '@humanwhocodes/module-importer@1.0.1': {}\n\n  '@humanwhocodes/retry@0.3.1': {}\n\n  '@humanwhocodes/retry@0.4.1': {}\n\n  '@isaacs/cliui@8.0.2':\n    dependencies:\n      string-width: 5.1.2\n      string-width-cjs: string-width@4.2.3\n      strip-ansi: 7.1.0\n      strip-ansi-cjs: strip-ansi@6.0.1\n      wrap-ansi: 8.1.0\n      wrap-ansi-cjs: wrap-ansi@7.0.0\n\n  '@istanbuljs/schema@0.1.3': {}\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  '@logux/eslint-config@53.5.1(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)':\n    dependencies:\n      '@eslint/eslintrc': 3.2.0\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-config-standard: 17.1.0(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-n@17.15.0(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-promise@7.2.1(eslint@9.16.0(jiti@2.4.1)))(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-n: 17.15.0(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-perfectionist: 3.9.1(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      eslint-plugin-prefer-let: 4.0.0\n      eslint-plugin-promise: 7.2.1(eslint@9.16.0(jiti@2.4.1))\n      typescript-eslint: 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n    transitivePeerDependencies:\n      - '@typescript-eslint/parser'\n      - astro-eslint-parser\n      - eslint-import-resolver-typescript\n      - eslint-import-resolver-webpack\n      - supports-color\n      - svelte-eslint-parser\n      - typescript\n      - vue-eslint-parser\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.17.1\n\n  '@pkgjs/parseargs@0.11.0':\n    optional: true\n\n  '@rtsao/scc@1.1.0': {}\n\n  '@size-limit/esbuild@11.1.6(size-limit@11.1.6)':\n    dependencies:\n      esbuild: 0.24.0\n      nanoid: 5.0.9\n      size-limit: 11.1.6\n\n  '@size-limit/file@11.1.6(size-limit@11.1.6)':\n    dependencies:\n      size-limit: 11.1.6\n\n  '@size-limit/preset-small-lib@11.1.6(size-limit@11.1.6)':\n    dependencies:\n      '@size-limit/esbuild': 11.1.6(size-limit@11.1.6)\n      '@size-limit/file': 11.1.6(size-limit@11.1.6)\n      size-limit: 11.1.6\n\n  '@types/estree@1.0.6': {}\n\n  '@types/istanbul-lib-coverage@2.0.6': {}\n\n  '@types/json-schema@7.0.15': {}\n\n  '@types/json5@0.0.29': {}\n\n  '@typescript-eslint/eslint-plugin@8.18.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)':\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n      '@typescript-eslint/parser': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      '@typescript-eslint/scope-manager': 8.18.0\n      '@typescript-eslint/type-utils': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      '@typescript-eslint/utils': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      '@typescript-eslint/visitor-keys': 8.18.0\n      eslint: 9.16.0(jiti@2.4.1)\n      graphemer: 1.4.0\n      ignore: 5.3.2\n      natural-compare: 1.4.0\n      ts-api-utils: 1.4.3(typescript@5.6.2)\n      typescript: 5.6.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)':\n    dependencies:\n      '@typescript-eslint/scope-manager': 8.18.0\n      '@typescript-eslint/types': 8.18.0\n      '@typescript-eslint/typescript-estree': 8.18.0(typescript@5.6.2)\n      '@typescript-eslint/visitor-keys': 8.18.0\n      debug: 4.4.0\n      eslint: 9.16.0(jiti@2.4.1)\n      typescript: 5.6.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/scope-manager@8.18.0':\n    dependencies:\n      '@typescript-eslint/types': 8.18.0\n      '@typescript-eslint/visitor-keys': 8.18.0\n\n  '@typescript-eslint/type-utils@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)':\n    dependencies:\n      '@typescript-eslint/typescript-estree': 8.18.0(typescript@5.6.2)\n      '@typescript-eslint/utils': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      debug: 4.4.0\n      eslint: 9.16.0(jiti@2.4.1)\n      ts-api-utils: 1.4.3(typescript@5.6.2)\n      typescript: 5.6.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/types@8.18.0': {}\n\n  '@typescript-eslint/typescript-estree@8.18.0(typescript@5.6.2)':\n    dependencies:\n      '@typescript-eslint/types': 8.18.0\n      '@typescript-eslint/visitor-keys': 8.18.0\n      debug: 4.4.0\n      fast-glob: 3.3.2\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.6.3\n      ts-api-utils: 1.4.3(typescript@5.6.2)\n      typescript: 5.6.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/utils@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)':\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      '@typescript-eslint/scope-manager': 8.18.0\n      '@typescript-eslint/types': 8.18.0\n      '@typescript-eslint/typescript-estree': 8.18.0(typescript@5.6.2)\n      eslint: 9.16.0(jiti@2.4.1)\n      typescript: 5.6.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/visitor-keys@8.18.0':\n    dependencies:\n      '@typescript-eslint/types': 8.18.0\n      eslint-visitor-keys: 4.2.0\n\n  acorn-jsx@5.3.2(acorn@8.14.0):\n    dependencies:\n      acorn: 8.14.0\n\n  acorn@8.14.0: {}\n\n  ajv@6.12.6:\n    dependencies:\n      fast-deep-equal: 3.1.3\n      fast-json-stable-stringify: 2.1.0\n      json-schema-traverse: 0.4.1\n      uri-js: 4.4.1\n\n  ansi-regex@5.0.1: {}\n\n  ansi-regex@6.1.0: {}\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  ansi-styles@6.2.1: {}\n\n  argparse@2.0.1: {}\n\n  array-buffer-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.8\n      is-array-buffer: 3.0.4\n\n  array-includes@3.1.8:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-object-atoms: 1.0.0\n      get-intrinsic: 1.2.6\n      is-string: 1.1.0\n\n  array.prototype.findlastindex@1.2.5:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      es-shim-unscopables: 1.0.2\n\n  array.prototype.flat@1.3.2:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-shim-unscopables: 1.0.2\n\n  array.prototype.flatmap@1.3.2:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-shim-unscopables: 1.0.2\n\n  arraybuffer.prototype.slice@1.0.3:\n    dependencies:\n      array-buffer-byte-length: 1.0.1\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.6\n      is-array-buffer: 3.0.4\n      is-shared-array-buffer: 1.0.3\n\n  available-typed-arrays@1.0.7:\n    dependencies:\n      possible-typed-array-names: 1.0.0\n\n  balanced-match@1.0.2: {}\n\n  brace-expansion@1.1.11:\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n\n  brace-expansion@2.0.1:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  browserslist@4.24.0:\n    dependencies:\n      caniuse-lite: 1.0.30001688\n      electron-to-chromium: 1.5.73\n      node-releases: 2.0.19\n      update-browserslist-db: 1.1.1(browserslist@4.24.0)\n\n  bytes-iec@3.1.1: {}\n\n  c8@10.1.3:\n    dependencies:\n      '@bcoe/v8-coverage': 1.0.1\n      '@istanbuljs/schema': 0.1.3\n      find-up: 5.0.0\n      foreground-child: 3.3.0\n      istanbul-lib-coverage: 3.2.2\n      istanbul-lib-report: 3.0.1\n      istanbul-reports: 3.1.7\n      test-exclude: 7.0.1\n      v8-to-istanbul: 9.3.0\n      yargs: 17.7.2\n      yargs-parser: 21.1.1\n\n  call-bind-apply-helpers@1.0.1:\n    dependencies:\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n\n  call-bind@1.0.8:\n    dependencies:\n      call-bind-apply-helpers: 1.0.1\n      es-define-property: 1.0.1\n      get-intrinsic: 1.2.6\n      set-function-length: 1.2.2\n\n  call-bound@1.0.2:\n    dependencies:\n      call-bind: 1.0.8\n      get-intrinsic: 1.2.6\n\n  callsites@3.1.0: {}\n\n  caniuse-lite@1.0.30001688: {}\n\n  chalk@4.1.2:\n    dependencies:\n      ansi-styles: 4.3.0\n      supports-color: 7.2.0\n\n  chokidar@4.0.1:\n    dependencies:\n      readdirp: 4.0.2\n\n  clean-publish@5.1.0:\n    dependencies:\n      cross-spawn: 7.0.6\n      fast-glob: 3.3.2\n      lilconfig: 3.1.3\n      micromatch: 4.0.8\n\n  cliui@8.0.1:\n    dependencies:\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      wrap-ansi: 7.0.0\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.4: {}\n\n  concat-map@0.0.1: {}\n\n  convert-source-map@2.0.0: {}\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  data-view-buffer@1.0.1:\n    dependencies:\n      call-bind: 1.0.8\n      es-errors: 1.3.0\n      is-data-view: 1.0.2\n\n  data-view-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.8\n      es-errors: 1.3.0\n      is-data-view: 1.0.2\n\n  data-view-byte-offset@1.0.0:\n    dependencies:\n      call-bind: 1.0.8\n      es-errors: 1.3.0\n      is-data-view: 1.0.2\n\n  debug@3.2.7:\n    dependencies:\n      ms: 2.1.3\n\n  debug@4.4.0:\n    dependencies:\n      ms: 2.1.3\n\n  deep-is@0.1.4: {}\n\n  define-data-property@1.1.4:\n    dependencies:\n      es-define-property: 1.0.1\n      es-errors: 1.3.0\n      gopd: 1.2.0\n\n  define-properties@1.2.1:\n    dependencies:\n      define-data-property: 1.1.4\n      has-property-descriptors: 1.0.2\n      object-keys: 1.1.1\n\n  dequal@2.0.3: {}\n\n  diff@5.2.0: {}\n\n  doctrine@2.1.0:\n    dependencies:\n      esutils: 2.0.3\n\n  dunder-proto@1.0.0:\n    dependencies:\n      call-bind-apply-helpers: 1.0.1\n      es-errors: 1.3.0\n      gopd: 1.2.0\n\n  eastasianwidth@0.2.0: {}\n\n  electron-to-chromium@1.5.73: {}\n\n  emoji-regex@8.0.0: {}\n\n  emoji-regex@9.2.2: {}\n\n  enhanced-resolve@5.17.1:\n    dependencies:\n      graceful-fs: 4.2.11\n      tapable: 2.2.1\n\n  es-abstract@1.23.5:\n    dependencies:\n      array-buffer-byte-length: 1.0.1\n      arraybuffer.prototype.slice: 1.0.3\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.8\n      data-view-buffer: 1.0.1\n      data-view-byte-length: 1.0.1\n      data-view-byte-offset: 1.0.0\n      es-define-property: 1.0.1\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      es-set-tostringtag: 2.0.3\n      es-to-primitive: 1.3.0\n      function.prototype.name: 1.1.6\n      get-intrinsic: 1.2.6\n      get-symbol-description: 1.0.2\n      globalthis: 1.0.4\n      gopd: 1.2.0\n      has-property-descriptors: 1.0.2\n      has-proto: 1.2.0\n      has-symbols: 1.1.0\n      hasown: 2.0.2\n      internal-slot: 1.1.0\n      is-array-buffer: 3.0.4\n      is-callable: 1.2.7\n      is-data-view: 1.0.2\n      is-negative-zero: 2.0.3\n      is-regex: 1.2.1\n      is-shared-array-buffer: 1.0.3\n      is-string: 1.1.0\n      is-typed-array: 1.1.13\n      is-weakref: 1.1.0\n      object-inspect: 1.13.3\n      object-keys: 1.1.1\n      object.assign: 4.1.5\n      regexp.prototype.flags: 1.5.3\n      safe-array-concat: 1.1.3\n      safe-regex-test: 1.1.0\n      string.prototype.trim: 1.2.10\n      string.prototype.trimend: 1.0.9\n      string.prototype.trimstart: 1.0.8\n      typed-array-buffer: 1.0.2\n      typed-array-byte-length: 1.0.1\n      typed-array-byte-offset: 1.0.3\n      typed-array-length: 1.0.7\n      unbox-primitive: 1.0.2\n      which-typed-array: 1.1.16\n\n  es-define-property@1.0.1: {}\n\n  es-errors@1.3.0: {}\n\n  es-object-atoms@1.0.0:\n    dependencies:\n      es-errors: 1.3.0\n\n  es-set-tostringtag@2.0.3:\n    dependencies:\n      get-intrinsic: 1.2.6\n      has-tostringtag: 1.0.2\n      hasown: 2.0.2\n\n  es-shim-unscopables@1.0.2:\n    dependencies:\n      hasown: 2.0.2\n\n  es-to-primitive@1.3.0:\n    dependencies:\n      is-callable: 1.2.7\n      is-date-object: 1.1.0\n      is-symbol: 1.1.1\n\n  esbuild@0.24.0:\n    optionalDependencies:\n      '@esbuild/aix-ppc64': 0.24.0\n      '@esbuild/android-arm': 0.24.0\n      '@esbuild/android-arm64': 0.24.0\n      '@esbuild/android-x64': 0.24.0\n      '@esbuild/darwin-arm64': 0.24.0\n      '@esbuild/darwin-x64': 0.24.0\n      '@esbuild/freebsd-arm64': 0.24.0\n      '@esbuild/freebsd-x64': 0.24.0\n      '@esbuild/linux-arm': 0.24.0\n      '@esbuild/linux-arm64': 0.24.0\n      '@esbuild/linux-ia32': 0.24.0\n      '@esbuild/linux-loong64': 0.24.0\n      '@esbuild/linux-mips64el': 0.24.0\n      '@esbuild/linux-ppc64': 0.24.0\n      '@esbuild/linux-riscv64': 0.24.0\n      '@esbuild/linux-s390x': 0.24.0\n      '@esbuild/linux-x64': 0.24.0\n      '@esbuild/netbsd-x64': 0.24.0\n      '@esbuild/openbsd-arm64': 0.24.0\n      '@esbuild/openbsd-x64': 0.24.0\n      '@esbuild/sunos-x64': 0.24.0\n      '@esbuild/win32-arm64': 0.24.0\n      '@esbuild/win32-ia32': 0.24.0\n      '@esbuild/win32-x64': 0.24.0\n\n  escalade@3.2.0: {}\n\n  escape-string-regexp@4.0.0: {}\n\n  eslint-compat-utils@0.5.1(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      eslint: 9.16.0(jiti@2.4.1)\n      semver: 7.6.3\n\n  eslint-config-standard@17.1.0(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-n@17.15.0(eslint@9.16.0(jiti@2.4.1)))(eslint-plugin-promise@7.2.1(eslint@9.16.0(jiti@2.4.1)))(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-n: 17.15.0(eslint@9.16.0(jiti@2.4.1))\n      eslint-plugin-promise: 7.2.1(eslint@9.16.0(jiti@2.4.1))\n\n  eslint-import-resolver-node@0.3.9:\n    dependencies:\n      debug: 3.2.7\n      is-core-module: 2.15.1\n      resolve: 1.22.8\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      debug: 3.2.7\n    optionalDependencies:\n      '@typescript-eslint/parser': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-import-resolver-node: 0.3.9\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-plugin-es-x@7.8.0(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      '@eslint-community/regexpp': 4.12.1\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-compat-utils: 0.5.1(eslint@9.16.0(jiti@2.4.1))\n\n  eslint-plugin-es5@1.5.0(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      eslint: 9.16.0(jiti@2.4.1)\n\n  eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@rtsao/scc': 1.1.0\n      array-includes: 3.1.8\n      array.prototype.findlastindex: 1.2.5\n      array.prototype.flat: 1.3.2\n      array.prototype.flatmap: 1.3.2\n      debug: 3.2.7\n      doctrine: 2.1.0\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-import-resolver-node: 0.3.9\n      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0(jiti@2.4.1))\n      hasown: 2.0.2\n      is-core-module: 2.15.1\n      is-glob: 4.0.3\n      minimatch: 3.1.2\n      object.fromentries: 2.0.8\n      object.groupby: 1.0.3\n      object.values: 1.2.0\n      semver: 6.3.1\n      string.prototype.trimend: 1.0.9\n      tsconfig-paths: 3.15.0\n    optionalDependencies:\n      '@typescript-eslint/parser': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n    transitivePeerDependencies:\n      - eslint-import-resolver-typescript\n      - eslint-import-resolver-webpack\n      - supports-color\n\n  eslint-plugin-n@17.15.0(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      enhanced-resolve: 5.17.1\n      eslint: 9.16.0(jiti@2.4.1)\n      eslint-plugin-es-x: 7.8.0(eslint@9.16.0(jiti@2.4.1))\n      get-tsconfig: 4.8.1\n      globals: 15.13.0\n      ignore: 5.3.2\n      minimatch: 9.0.5\n      semver: 7.6.3\n\n  eslint-plugin-perfectionist@3.9.1(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2):\n    dependencies:\n      '@typescript-eslint/types': 8.18.0\n      '@typescript-eslint/utils': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      eslint: 9.16.0(jiti@2.4.1)\n      minimatch: 9.0.5\n      natural-compare-lite: 1.4.0\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  eslint-plugin-prefer-let@4.0.0:\n    dependencies:\n      requireindex: 1.2.0\n\n  eslint-plugin-promise@7.2.1(eslint@9.16.0(jiti@2.4.1)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      eslint: 9.16.0(jiti@2.4.1)\n\n  eslint-scope@8.2.0:\n    dependencies:\n      esrecurse: 4.3.0\n      estraverse: 5.3.0\n\n  eslint-visitor-keys@3.4.3: {}\n\n  eslint-visitor-keys@4.2.0: {}\n\n  eslint@9.16.0(jiti@2.4.1):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0(jiti@2.4.1))\n      '@eslint-community/regexpp': 4.12.1\n      '@eslint/config-array': 0.19.1\n      '@eslint/core': 0.9.1\n      '@eslint/eslintrc': 3.2.0\n      '@eslint/js': 9.16.0\n      '@eslint/plugin-kit': 0.2.4\n      '@humanfs/node': 0.16.6\n      '@humanwhocodes/module-importer': 1.0.1\n      '@humanwhocodes/retry': 0.4.1\n      '@types/estree': 1.0.6\n      '@types/json-schema': 7.0.15\n      ajv: 6.12.6\n      chalk: 4.1.2\n      cross-spawn: 7.0.6\n      debug: 4.4.0\n      escape-string-regexp: 4.0.0\n      eslint-scope: 8.2.0\n      eslint-visitor-keys: 4.2.0\n      espree: 10.3.0\n      esquery: 1.6.0\n      esutils: 2.0.3\n      fast-deep-equal: 3.1.3\n      file-entry-cache: 8.0.0\n      find-up: 5.0.0\n      glob-parent: 6.0.2\n      ignore: 5.3.2\n      imurmurhash: 0.1.4\n      is-glob: 4.0.3\n      json-stable-stringify-without-jsonify: 1.0.1\n      lodash.merge: 4.6.2\n      minimatch: 3.1.2\n      natural-compare: 1.4.0\n      optionator: 0.9.4\n    optionalDependencies:\n      jiti: 2.4.1\n    transitivePeerDependencies:\n      - supports-color\n\n  espree@10.3.0:\n    dependencies:\n      acorn: 8.14.0\n      acorn-jsx: 5.3.2(acorn@8.14.0)\n      eslint-visitor-keys: 4.2.0\n\n  esquery@1.6.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  esrecurse@4.3.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  estraverse@5.3.0: {}\n\n  esutils@2.0.3: {}\n\n  fast-deep-equal@3.1.3: {}\n\n  fast-glob@3.3.2:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fast-json-stable-stringify@2.1.0: {}\n\n  fast-levenshtein@2.0.6: {}\n\n  fastq@1.17.1:\n    dependencies:\n      reusify: 1.0.4\n\n  fdir@6.4.2(picomatch@4.0.2):\n    optionalDependencies:\n      picomatch: 4.0.2\n\n  file-entry-cache@8.0.0:\n    dependencies:\n      flat-cache: 4.0.1\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  find-up@5.0.0:\n    dependencies:\n      locate-path: 6.0.0\n      path-exists: 4.0.0\n\n  flat-cache@4.0.1:\n    dependencies:\n      flatted: 3.3.2\n      keyv: 4.5.4\n\n  flatted@3.3.2: {}\n\n  for-each@0.3.3:\n    dependencies:\n      is-callable: 1.2.7\n\n  foreground-child@3.3.0:\n    dependencies:\n      cross-spawn: 7.0.6\n      signal-exit: 4.1.0\n\n  fs-extra@11.2.0:\n    dependencies:\n      graceful-fs: 4.2.11\n      jsonfile: 6.1.0\n      universalify: 2.0.1\n\n  function-bind@1.1.2: {}\n\n  function.prototype.name@1.1.6:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      functions-have-names: 1.2.3\n\n  functions-have-names@1.2.3: {}\n\n  get-caller-file@2.0.5: {}\n\n  get-intrinsic@1.2.6:\n    dependencies:\n      call-bind-apply-helpers: 1.0.1\n      dunder-proto: 1.0.0\n      es-define-property: 1.0.1\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      function-bind: 1.1.2\n      gopd: 1.2.0\n      has-symbols: 1.1.0\n      hasown: 2.0.2\n      math-intrinsics: 1.0.0\n\n  get-symbol-description@1.0.2:\n    dependencies:\n      call-bind: 1.0.8\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.6\n\n  get-tsconfig@4.8.1:\n    dependencies:\n      resolve-pkg-maps: 1.0.0\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob@10.4.5:\n    dependencies:\n      foreground-child: 3.3.0\n      jackspeak: 3.4.3\n      minimatch: 9.0.5\n      minipass: 7.1.2\n      package-json-from-dist: 1.0.1\n      path-scurry: 1.11.1\n\n  globals@14.0.0: {}\n\n  globals@15.13.0: {}\n\n  globalthis@1.0.4:\n    dependencies:\n      define-properties: 1.2.1\n      gopd: 1.2.0\n\n  gopd@1.2.0: {}\n\n  graceful-fs@4.2.11: {}\n\n  graphemer@1.4.0: {}\n\n  has-bigints@1.0.2: {}\n\n  has-flag@4.0.0: {}\n\n  has-property-descriptors@1.0.2:\n    dependencies:\n      es-define-property: 1.0.1\n\n  has-proto@1.2.0:\n    dependencies:\n      dunder-proto: 1.0.0\n\n  has-symbols@1.1.0: {}\n\n  has-tostringtag@1.0.2:\n    dependencies:\n      has-symbols: 1.1.0\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  html-escaper@2.0.2: {}\n\n  ignore@5.3.2: {}\n\n  import-fresh@3.3.0:\n    dependencies:\n      parent-module: 1.0.1\n      resolve-from: 4.0.0\n\n  imurmurhash@0.1.4: {}\n\n  internal-slot@1.1.0:\n    dependencies:\n      es-errors: 1.3.0\n      hasown: 2.0.2\n      side-channel: 1.1.0\n\n  is-array-buffer@3.0.4:\n    dependencies:\n      call-bind: 1.0.8\n      get-intrinsic: 1.2.6\n\n  is-async-function@2.0.0:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-bigint@1.1.0:\n    dependencies:\n      has-bigints: 1.0.2\n\n  is-boolean-object@1.2.1:\n    dependencies:\n      call-bound: 1.0.2\n      has-tostringtag: 1.0.2\n\n  is-callable@1.2.7: {}\n\n  is-core-module@2.15.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-data-view@1.0.2:\n    dependencies:\n      call-bound: 1.0.2\n      get-intrinsic: 1.2.6\n      is-typed-array: 1.1.13\n\n  is-date-object@1.1.0:\n    dependencies:\n      call-bound: 1.0.2\n      has-tostringtag: 1.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-finalizationregistry@1.1.0:\n    dependencies:\n      call-bind: 1.0.8\n\n  is-fullwidth-code-point@3.0.0: {}\n\n  is-generator-function@1.0.10:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-map@2.0.3: {}\n\n  is-negative-zero@2.0.3: {}\n\n  is-number-object@1.1.0:\n    dependencies:\n      call-bind: 1.0.8\n      has-tostringtag: 1.0.2\n\n  is-number@7.0.0: {}\n\n  is-regex@1.2.1:\n    dependencies:\n      call-bound: 1.0.2\n      gopd: 1.2.0\n      has-tostringtag: 1.0.2\n      hasown: 2.0.2\n\n  is-set@2.0.3: {}\n\n  is-shared-array-buffer@1.0.3:\n    dependencies:\n      call-bind: 1.0.8\n\n  is-string@1.1.0:\n    dependencies:\n      call-bind: 1.0.8\n      has-tostringtag: 1.0.2\n\n  is-symbol@1.1.1:\n    dependencies:\n      call-bound: 1.0.2\n      has-symbols: 1.1.0\n      safe-regex-test: 1.1.0\n\n  is-typed-array@1.1.13:\n    dependencies:\n      which-typed-array: 1.1.16\n\n  is-weakmap@2.0.2: {}\n\n  is-weakref@1.1.0:\n    dependencies:\n      call-bound: 1.0.2\n\n  is-weakset@2.0.3:\n    dependencies:\n      call-bind: 1.0.8\n      get-intrinsic: 1.2.6\n\n  isarray@2.0.5: {}\n\n  isexe@2.0.0: {}\n\n  istanbul-lib-coverage@3.2.2: {}\n\n  istanbul-lib-report@3.0.1:\n    dependencies:\n      istanbul-lib-coverage: 3.2.2\n      make-dir: 4.0.0\n      supports-color: 7.2.0\n\n  istanbul-reports@3.1.7:\n    dependencies:\n      html-escaper: 2.0.2\n      istanbul-lib-report: 3.0.1\n\n  jackspeak@3.4.3:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jiti@2.4.1: {}\n\n  js-yaml@4.1.0:\n    dependencies:\n      argparse: 2.0.1\n\n  json-buffer@3.0.1: {}\n\n  json-schema-traverse@0.4.1: {}\n\n  json-stable-stringify-without-jsonify@1.0.1: {}\n\n  json5@1.0.2:\n    dependencies:\n      minimist: 1.2.8\n\n  jsonfile@6.1.0:\n    dependencies:\n      universalify: 2.0.1\n    optionalDependencies:\n      graceful-fs: 4.2.11\n\n  keyv@4.5.4:\n    dependencies:\n      json-buffer: 3.0.1\n\n  kleur@4.1.5: {}\n\n  levn@0.4.1:\n    dependencies:\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n\n  lilconfig@3.1.3: {}\n\n  locate-path@6.0.0:\n    dependencies:\n      p-locate: 5.0.0\n\n  lodash.merge@4.6.2: {}\n\n  lru-cache@10.4.3: {}\n\n  make-dir@4.0.0:\n    dependencies:\n      semver: 7.6.3\n\n  math-intrinsics@1.0.0: {}\n\n  merge2@1.4.1: {}\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  minimatch@3.1.2:\n    dependencies:\n      brace-expansion: 1.1.11\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.1\n\n  minimist@1.2.8: {}\n\n  minipass@7.1.2: {}\n\n  mri@1.2.0: {}\n\n  ms@2.1.3: {}\n\n  nanoid@5.0.9: {}\n\n  nanospinner@1.2.2:\n    dependencies:\n      picocolors: 1.1.1\n\n  nanospy@1.0.0: {}\n\n  natural-compare-lite@1.4.0: {}\n\n  natural-compare@1.4.0: {}\n\n  node-releases@2.0.19: {}\n\n  object-inspect@1.13.3: {}\n\n  object-keys@1.1.1: {}\n\n  object.assign@4.1.5:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      has-symbols: 1.1.0\n      object-keys: 1.1.1\n\n  object.fromentries@2.0.8:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-object-atoms: 1.0.0\n\n  object.groupby@1.0.3:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n\n  object.values@1.2.0:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  optionator@0.9.4:\n    dependencies:\n      deep-is: 0.1.4\n      fast-levenshtein: 2.0.6\n      levn: 0.4.1\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n      word-wrap: 1.2.5\n\n  p-limit@3.1.0:\n    dependencies:\n      yocto-queue: 0.1.0\n\n  p-locate@5.0.0:\n    dependencies:\n      p-limit: 3.1.0\n\n  package-json-from-dist@1.0.1: {}\n\n  parent-module@1.0.1:\n    dependencies:\n      callsites: 3.1.0\n\n  path-exists@4.0.0: {}\n\n  path-key@3.1.1: {}\n\n  path-parse@1.0.7: {}\n\n  path-scurry@1.11.1:\n    dependencies:\n      lru-cache: 10.4.3\n      minipass: 7.1.2\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  picomatch@4.0.2: {}\n\n  possible-typed-array-names@1.0.0: {}\n\n  prelude-ls@1.2.1: {}\n\n  punycode@2.3.1: {}\n\n  queue-microtask@1.2.3: {}\n\n  readdirp@4.0.2: {}\n\n  reflect.getprototypeof@1.0.8:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      dunder-proto: 1.0.0\n      es-abstract: 1.23.5\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.6\n      gopd: 1.2.0\n      which-builtin-type: 1.2.1\n\n  regexp.prototype.flags@1.5.3:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-errors: 1.3.0\n      set-function-name: 2.0.2\n\n  require-directory@2.1.1: {}\n\n  requireindex@1.2.0: {}\n\n  resolve-from@4.0.0: {}\n\n  resolve-pkg-maps@1.0.0: {}\n\n  resolve@1.22.8:\n    dependencies:\n      is-core-module: 2.15.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  reusify@1.0.4: {}\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  sade@1.8.1:\n    dependencies:\n      mri: 1.2.0\n\n  safe-array-concat@1.1.3:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.2\n      get-intrinsic: 1.2.6\n      has-symbols: 1.1.0\n      isarray: 2.0.5\n\n  safe-regex-test@1.1.0:\n    dependencies:\n      call-bound: 1.0.2\n      es-errors: 1.3.0\n      is-regex: 1.2.1\n\n  semver@6.3.1: {}\n\n  semver@7.6.3: {}\n\n  set-function-length@1.2.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.6\n      gopd: 1.2.0\n      has-property-descriptors: 1.0.2\n\n  set-function-name@2.0.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      functions-have-names: 1.2.3\n      has-property-descriptors: 1.0.2\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@3.0.0: {}\n\n  side-channel-list@1.0.0:\n    dependencies:\n      es-errors: 1.3.0\n      object-inspect: 1.13.3\n\n  side-channel-map@1.0.1:\n    dependencies:\n      call-bound: 1.0.2\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.6\n      object-inspect: 1.13.3\n\n  side-channel-weakmap@1.0.2:\n    dependencies:\n      call-bound: 1.0.2\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.6\n      object-inspect: 1.13.3\n      side-channel-map: 1.0.1\n\n  side-channel@1.1.0:\n    dependencies:\n      es-errors: 1.3.0\n      object-inspect: 1.13.3\n      side-channel-list: 1.0.0\n      side-channel-map: 1.0.1\n      side-channel-weakmap: 1.0.2\n\n  signal-exit@4.1.0: {}\n\n  size-limit@11.1.6:\n    dependencies:\n      bytes-iec: 3.1.1\n      chokidar: 4.0.1\n      jiti: 2.4.1\n      lilconfig: 3.1.3\n      nanospinner: 1.2.2\n      picocolors: 1.1.1\n      tinyglobby: 0.2.10\n\n  string-width@4.2.3:\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  string-width@5.1.2:\n    dependencies:\n      eastasianwidth: 0.2.0\n      emoji-regex: 9.2.2\n      strip-ansi: 7.1.0\n\n  string.prototype.trim@1.2.10:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.2\n      define-data-property: 1.1.4\n      define-properties: 1.2.1\n      es-abstract: 1.23.5\n      es-object-atoms: 1.0.0\n      has-property-descriptors: 1.0.2\n\n  string.prototype.trimend@1.0.9:\n    dependencies:\n      call-bind: 1.0.8\n      call-bound: 1.0.2\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  string.prototype.trimstart@1.0.8:\n    dependencies:\n      call-bind: 1.0.8\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  strip-ansi@6.0.1:\n    dependencies:\n      ansi-regex: 5.0.1\n\n  strip-ansi@7.1.0:\n    dependencies:\n      ansi-regex: 6.1.0\n\n  strip-bom@3.0.0: {}\n\n  strip-json-comments@3.1.1: {}\n\n  supports-color@7.2.0:\n    dependencies:\n      has-flag: 4.0.0\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  tapable@2.2.1: {}\n\n  test-exclude@7.0.1:\n    dependencies:\n      '@istanbuljs/schema': 0.1.3\n      glob: 10.4.5\n      minimatch: 9.0.5\n\n  tinyglobby@0.2.10:\n    dependencies:\n      fdir: 6.4.2(picomatch@4.0.2)\n      picomatch: 4.0.2\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  ts-api-utils@1.4.3(typescript@5.6.2):\n    dependencies:\n      typescript: 5.6.2\n\n  tsconfig-paths@3.15.0:\n    dependencies:\n      '@types/json5': 0.0.29\n      json5: 1.0.2\n      minimist: 1.2.8\n      strip-bom: 3.0.0\n\n  type-check@0.4.0:\n    dependencies:\n      prelude-ls: 1.2.1\n\n  typed-array-buffer@1.0.2:\n    dependencies:\n      call-bind: 1.0.8\n      es-errors: 1.3.0\n      is-typed-array: 1.1.13\n\n  typed-array-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.8\n      for-each: 0.3.3\n      gopd: 1.2.0\n      has-proto: 1.2.0\n      is-typed-array: 1.1.13\n\n  typed-array-byte-offset@1.0.3:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.8\n      for-each: 0.3.3\n      gopd: 1.2.0\n      has-proto: 1.2.0\n      is-typed-array: 1.1.13\n      reflect.getprototypeof: 1.0.8\n\n  typed-array-length@1.0.7:\n    dependencies:\n      call-bind: 1.0.8\n      for-each: 0.3.3\n      gopd: 1.2.0\n      is-typed-array: 1.1.13\n      possible-typed-array-names: 1.0.0\n      reflect.getprototypeof: 1.0.8\n\n  typescript-eslint@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2):\n    dependencies:\n      '@typescript-eslint/eslint-plugin': 8.18.0(@typescript-eslint/parser@8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2))(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      '@typescript-eslint/parser': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      '@typescript-eslint/utils': 8.18.0(eslint@9.16.0(jiti@2.4.1))(typescript@5.6.2)\n      eslint: 9.16.0(jiti@2.4.1)\n      typescript: 5.6.2\n    transitivePeerDependencies:\n      - supports-color\n\n  typescript@5.6.2: {}\n\n  unbox-primitive@1.0.2:\n    dependencies:\n      call-bind: 1.0.8\n      has-bigints: 1.0.2\n      has-symbols: 1.1.0\n      which-boxed-primitive: 1.1.0\n\n  universalify@2.0.1: {}\n\n  update-browserslist-db@1.1.1(browserslist@4.24.0):\n    dependencies:\n      browserslist: 4.24.0\n      escalade: 3.2.0\n      picocolors: 1.1.1\n\n  uri-js@4.4.1:\n    dependencies:\n      punycode: 2.3.1\n\n  uvu@0.5.6:\n    dependencies:\n      dequal: 2.0.3\n      diff: 5.2.0\n      kleur: 4.1.5\n      sade: 1.8.1\n\n  v8-to-istanbul@9.3.0:\n    dependencies:\n      '@jridgewell/trace-mapping': 0.3.25\n      '@types/istanbul-lib-coverage': 2.0.6\n      convert-source-map: 2.0.0\n\n  which-boxed-primitive@1.1.0:\n    dependencies:\n      is-bigint: 1.1.0\n      is-boolean-object: 1.2.1\n      is-number-object: 1.1.0\n      is-string: 1.1.0\n      is-symbol: 1.1.1\n\n  which-builtin-type@1.2.1:\n    dependencies:\n      call-bound: 1.0.2\n      function.prototype.name: 1.1.6\n      has-tostringtag: 1.0.2\n      is-async-function: 2.0.0\n      is-date-object: 1.1.0\n      is-finalizationregistry: 1.1.0\n      is-generator-function: 1.0.10\n      is-regex: 1.2.1\n      is-weakref: 1.1.0\n      isarray: 2.0.5\n      which-boxed-primitive: 1.1.0\n      which-collection: 1.0.2\n      which-typed-array: 1.1.16\n\n  which-collection@1.0.2:\n    dependencies:\n      is-map: 2.0.3\n      is-set: 2.0.3\n      is-weakmap: 2.0.2\n      is-weakset: 2.0.3\n\n  which-typed-array@1.1.16:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.8\n      for-each: 0.3.3\n      gopd: 1.2.0\n      has-tostringtag: 1.0.2\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  word-wrap@1.2.5: {}\n\n  wrap-ansi@7.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@8.1.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 5.1.2\n      strip-ansi: 7.1.0\n\n  y18n@5.0.8: {}\n\n  yargs-parser@21.1.1: {}\n\n  yargs@17.7.2:\n    dependencies:\n      cliui: 8.0.1\n      escalade: 3.2.0\n      get-caller-file: 2.0.5\n      require-directory: 2.1.1\n      string-width: 4.2.3\n      y18n: 5.0.8\n      yargs-parser: 21.1.1\n\n  yocto-queue@0.1.0: {}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}