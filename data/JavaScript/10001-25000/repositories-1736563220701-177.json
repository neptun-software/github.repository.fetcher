{
  "metadata": {
    "timestamp": 1736563220701,
    "page": 177,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jasmine/jasmine",
      "stars": 15769,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1240234375,
          "content": "[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\n\n[*.{js, json, sh, yml}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.8056640625,
          "content": "{\n  \"extends\": [\n    \"plugin:compat/recommended\"\n  ],\n  \"env\": {\n    \"browser\": true,\n    \"node\": true,\n    \"es2017\": true\n  },\n  \"parserOptions\": {\n    \"ecmaVersion\": 2018\n  },\n  \"rules\": {\n    \"curly\": \"error\",\n    \"quotes\": [\n      \"error\",\n      \"single\",\n      {\n        \"avoidEscape\": true\n      }\n    ],\n    \"no-unused-vars\": [\n      \"error\",\n      {\n        \"args\": \"none\"\n      }\n    ],\n    \"no-implicit-globals\": \"error\",\n    \"block-spacing\": \"error\",\n    \"func-call-spacing\": [\n      \"error\",\n      \"never\"\n    ],\n    \"key-spacing\": \"error\",\n    \"no-tabs\": \"error\",\n    \"no-trailing-spaces\": \"error\",\n    \"no-whitespace-before-property\": \"error\",\n    \"semi\": [\n      \"error\",\n      \"always\"\n    ],\n    \"space-before-blocks\": \"error\",\n    \"no-eval\": \"error\",\n    \"no-var\": \"error\",\n    \"no-debugger\": \"error\"\n  }\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0302734375,
          "content": "* text=auto eol=lf\n*.png -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.25,
          "content": ".idea/\n.svn/\n.DS_Store\nsite/\n.bundle/\n.pairs\n.rvmrc\n.ruby-gemset\n.ruby-version\n*.gem\n.bundle\ntags\nGemfile.lock\npackage-lock.json\nyarn.lock\npkg/*\n.sass-cache/*\nsrc/html/.sass-cache/*\nnode_modules/\nsauce_connect.log\n*.swp\nbuild/\ndist\nnbproject/\n*.iml\n.envrc\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.025390625,
          "content": "{\n  \"singleQuote\": true\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1572265625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at jasmine-maintainers@googlegroups.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 3.1162109375,
          "content": "module.exports = function(grunt) {\n  var pkg = require(\"./package.json\");\n  global.jasmineVersion = pkg.version;\n\n  grunt.initConfig({\n    pkg: pkg,\n    concat: require('./grunt/config/concat.js'),\n    sass: require('./grunt/config/sass.js'),\n    compress: require('./grunt/config/compress.js'),\n    cssUrlEmbed: require('./grunt/config/cssUrlEmbed.js')\n  });\n\n  require('load-grunt-tasks')(grunt);\n\n  grunt.loadTasks('grunt/tasks');\n\n  grunt.registerTask('default', ['sass:dist', \"cssUrlEmbed\"]);\n\n  grunt.registerTask('buildDistribution',\n    'Builds and lints jasmine.js, jasmine-html.js, jasmine.css',\n    [\n      'sass:dist',\n      \"cssUrlEmbed\",\n      'concat'\n    ]\n  );\n\n  grunt.registerTask(\"execSpecsInNode\",\n    \"Run Jasmine core specs in Node.js\",\n    function() {\n      verifyNoGlobals(() => require('./lib/jasmine-core.js').noGlobals());\n      const done = this.async(),\n        Jasmine = require('jasmine'),\n        jasmineCore = require('./lib/jasmine-core.js'),\n        jasmine = new Jasmine({jasmineCore: jasmineCore});\n\n      jasmine.loadConfigFile('./spec/support/jasmine.json');\n      jasmine.exitOnCompletion = false;\n      jasmine.execute().then(\n        result => done(result.overallStatus === 'passed'),\n        err => {\n          console.error(err);\n          done(false);\n        }\n      );\n    }\n  );\n\n  grunt.registerTask(\"execSpecsInParallel\",\n    \"Run Jasmine core specs in parallel in Node.js\",\n    function() {\n      // Need to require this here rather than at the top of the file\n      // so that we don't break verifyNoGlobals above by loading jasmine-core\n      // too early\n      const ParallelRunner = require('jasmine/parallel');\n      let numWorkers = require('os').cpus().length;\n\n      if (process.env['CIRCLECI']) {\n        // On Circle CI, the above gives the number of CPU cores on the host\n        // computer, which is unrelated to the resources actually available\n        // to the container. 2 workers gives peak performance with our current\n        // configuration, but 4 might increase the odds of discovering any\n        // parallel-specific bugs.\n        numWorkers = 4;\n      }\n\n      const done = this.async();\n      const runner = new ParallelRunner({\n        jasmineCore: require('./lib/jasmine-core.js'),\n        numWorkers\n      });\n\n      runner.loadConfigFile('./spec/support/jasmine.json')\n        .then(() => {\n          runner.exitOnCompletion = false;\n          return runner.execute();\n        }).then(\n          jasmineDoneInfo => done(jasmineDoneInfo.overallStatus === 'passed'),\n          err => {\n            console.error(err);\n            done(false);\n          }\n        );\n    }\n  );\n\n  grunt.registerTask(\"execSpecsInNode:performance\",\n    \"Run Jasmine performance specs in Node.js\",\n    function() {\n      require(\"shelljs\").exec(\"node_modules/.bin/jasmine JASMINE_CONFIG_PATH=spec/support/jasmine-performance.json\");\n    }\n  );\n};\n\nfunction verifyNoGlobals(fn) {\n  const initialGlobals = Object.keys(global);\n  fn();\n\n  const extras = Object.keys(global).filter(k => !initialGlobals.includes(k));\n\n  if (extras.length !== 0) {\n    throw new Error('Globals were unexpectedly created: ' + extras.join(', '));\n  }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.08203125,
          "content": "Copyright (c) 2008-2019 Pivotal Labs\nCopyright (c) 2008-2024 The Jasmine developers\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.849609375,
          "content": "<a name=\"README\">[<img src=\"https://rawgithub.com/jasmine/jasmine/main/images/jasmine-horizontal.svg\" width=\"400px\" />](http://jasmine.github.io)</a>\n\n# A JavaScript Testing Framework\n\nJasmine is a Behavior Driven Development testing framework for JavaScript. It does not rely on browsers, DOM, or any JavaScript framework. Thus it's suited for websites, [Node.js](http://nodejs.org) projects, or anywhere that JavaScript can run.\n\nUpgrading from Jasmine 4.x? Check out the [upgrade guide](https://jasmine.github.io/tutorials/upgrading_to_Jasmine_5.0).\n\n## Contributing\n\nPlease read the [contributors' guide](https://github.com/jasmine/jasmine/blob/main/.github/CONTRIBUTING.md).\n\n## Installation\n\nThere are several different ways to install Jasmine, depending on your \nenvironment and how you'd like to use it. See the [Getting Started page](https://jasmine.github.io/pages/getting_started.html)\nfor details.\n\n## Usage\n\nSee the [documentation site](https://jasmine.github.io/pages/docs_home.html),\nparticularly the [Your First Suite tutorial](https://jasmine.github.io/tutorials/your_first_suite)\nfor information on writing specs, and [the FAQ](https://jasmine.github.io/pages/faq.html).\n\n## Supported environments\n\nJasmine tests itself across popular browsers (Safari, Chrome, Firefox, and\nMicrosoft Edge) as well as Node.\n\n| Environment       | Supported versions         |\n|-------------------|----------------------------|\n| Node              | 18, 20, 22                 |\n| Safari            | 15-17                      |\n| Chrome            | Evergreen                  |\n| Firefox           | Evergreen, 102*, 115*, 128 |\n| Edge              | Evergreen                  |\n\nFor evergreen browsers, each version of Jasmine is tested against the version of the browser that is available to us\nat the time of release. Other browsers, as well as older & newer versions of some supported browsers, are likely to work.\nHowever, Jasmine isn't tested against them and they aren't actively supported. \n\n\\* Environments that are past end of life are supported on a best-effort basis.\nThey may be dropped in a future minor release of Jasmine if continued support\nbecomes impractical.\n\nTo find out what environments work with a particular Jasmine release, see the [release notes](https://github.com/jasmine/jasmine/tree/main/release_notes).\n\n## Maintainers\n\n* [Gwendolyn Van Hove](mailto:gwen@slackersoft.net)\n* [Steve Gravrock](mailto:sdg@panix.com)\n\n### Maintainers Emeritus\n\n* [Davis W. Frank](mailto:dwfrank@pivotal.io)\n* [Rajan Agaskar](mailto:rajan@pivotal.io)\n* [Greg Cobb](mailto:gcobb@pivotal.io)\n* [Chris Amavisca](mailto:camavisca@pivotal.io)\n* [Christian Williams](mailto:antixian666@gmail.com)\n* Sheel Choksi\n\nCopyright (c) 2008-2019 Pivotal Labs<br>\nCopyright (c) 2008-2024 The Jasmine developers<br>\nThis software is licensed under the [MIT License](https://github.com/jasmine/jasmine/blob/main/LICENSE).\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 2.4482421875,
          "content": "# How to work on a Jasmine Release\n\n## Development\n___Jasmine Core Maintainers Only___\n\nFollow the instructions in `CONTRIBUTING.md` during development.\n\n### Git Rules\n\nPlease attempt to keep commits to `main` small, but cohesive. If a feature is contained in a bunch of small commits (e.g., it has several wip commits or small work), please squash them when pushing to `main`.\n\n### Version\n\nWe attempt to stick to [Semantic Versioning](http://semver.org/). Most of the time, development should be against a new minor version - fixing bugs and adding new features that are backwards compatible.\n\nThe current version lives in the file `/package.json`. This version will be\ncopied to `jasmine.js` when the distribution is built. When releasing a new\nversion, update `package.json` with the new version and `npm run build` to\nupdate the gem version number.\n\nNote that Jasmine should only use the \"patch\" version number if the new release\ncontains only bug fixes.\n\nWhen `jasmine-core` revs its major or minor version, the `jasmine` NPM package\nshould also rev to that version.\n\n## Release\n\nWhen ready to release - specs are all green and the stories are done:\n\n1. Update the release notes in `release_notes` - use the Anchorman gem to generate the markdown file and edit accordingly. Include a list of supported environments.\n1. Update the version in `package.json`\n1. Run `npm run build`.\n\n### Commit and push core changes\n\n1. Commit release notes and version changes (jasmine.js, package.json)\n2. Push\n3. Tag the release and push the tag.\n4. Wait for Circle CI to go green\n\n### Build standalone distribution\n\n1. Build the standalone distribution with `grunt buildStandaloneDist`\n1. This will generate `dist/jasmine-standalone-<version>.zip`, which you will upload later (see \"Finally\" below).\n\n### Release the core NPM module\n\n1. `npm login` to save your credentials locally\n2. `npm publish .` to publish what's in `package.json`\n\n### Release the docs\n\nProbably only need to do this when releasing a minor version, and not a patch\nversion. See [the README file in the docs repo](https://github.com/jasmine/jasmine.github.io/blob/master/README.md)\nfor instructions.\n\n### Release the `jasmine` NPM package\n\nSee <https://github.com/jasmine/jasmine-npm/blob/main/RELEASE.md>.\n\n### Publish the GitHub release\n\n1. Visit the releases page and find the tag just published.\n2. Paste in a link to the correct release notes for this release.\n3. If it is a pre-release, mark it as such.\n4. Attach the standalone zipfile.\n"
        },
        {
          "name": "grunt",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.7294921875,
          "content": "{\n  \"name\": \"jasmine-core\",\n  \"license\": \"MIT\",\n  \"version\": \"5.5.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/jasmine/jasmine.git\"\n  },\n  \"keywords\": [\n    \"test\",\n    \"testing\",\n    \"jasmine\",\n    \"tdd\",\n    \"bdd\"\n  ],\n  \"scripts\": {\n    \"posttest\": \"eslint \\\"src/**/*.js\\\" \\\"spec/**/*.js\\\" && prettier --check \\\"src/**/*.js\\\" \\\"spec/**/*.js\\\"\",\n    \"test\": \"grunt --stack execSpecsInNode\",\n    \"cleanup\": \"prettier --write \\\"src/**/*.js\\\" \\\"spec/**/*.js\\\"\",\n    \"build\": \"grunt buildDistribution\",\n    \"serve\": \"node spec/support/localJasmineBrowser.js\",\n    \"serve:performance\": \"node spec/support/localJasmineBrowser.js jasmine-browser-performance.json\",\n    \"ci\": \"node spec/support/ci.js\",\n    \"ci:performance\": \"node spec/support/ci.js jasmine-browser-performance.json\"\n  },\n  \"description\": \"Simple JavaScript testing framework for browsers and node.js\",\n  \"homepage\": \"https://jasmine.github.io\",\n  \"main\": \"./lib/jasmine-core.js\",\n  \"files\": [\n    \"LICENSE\",\n    \"README.md\",\n    \"images/*.{png,svg}\",\n    \"lib/**/*.{js,css}\",\n    \"package.json\"\n  ],\n  \"devDependencies\": {\n    \"eslint\": \"^8.36.0\",\n    \"eslint-plugin-compat\": \"^4.0.0\",\n    \"glob\": \"^10.2.3\",\n    \"grunt\": \"^1.0.4\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-compress\": \"^2.0.0\",\n    \"grunt-contrib-concat\": \"^2.0.0\",\n    \"grunt-css-url-embed\": \"^1.11.1\",\n    \"grunt-sass\": \"^3.0.2\",\n    \"jasmine\": \"^5.0.0\",\n    \"jasmine-browser-runner\": \"github:jasmine/jasmine-browser-runner\",\n    \"jsdom\": \"^22.0.0\",\n    \"load-grunt-tasks\": \"^5.1.0\",\n    \"prettier\": \"1.17.1\",\n    \"sass\": \"^1.58.3\",\n    \"shelljs\": \"^0.8.3\",\n    \"temp\": \"^0.9.0\"\n  },\n  \"browserslist\": [\n    \"Safari >= 15\",\n    \"Firefox >= 102\",\n    \"last 2 Chrome versions\",\n    \"last 2 Edge versions\"\n  ]\n}\n"
        },
        {
          "name": "release_notes",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}