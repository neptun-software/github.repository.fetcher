{
  "metadata": {
    "timestamp": 1736563532774,
    "page": 2,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "trekhleb/javascript-algorithms",
      "stars": 189294,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.0380859375,
          "content": "{\n  \"presets\": [\"@babel/preset-env\"]\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1962890625,
          "content": "# @see: https://editorconfig.org/\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\nquote_type = single\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.38671875,
          "content": "{\n  \"root\": true,\n  \"extends\": \"airbnb\",\n  \"plugins\": [\"jest\"],\n  \"env\": {\n    \"jest/globals\": true\n  },\n  \"rules\": {\n    \"no-bitwise\": \"off\",\n    \"no-lonely-if\": \"off\",\n    \"class-methods-use-this\": \"off\",\n    \"arrow-body-style\": \"off\",\n    \"no-loop-func\": \"off\"\n  },\n  \"ignorePatterns\": [\"*.md\", \"*.png\", \"*.jpeg\", \"*.jpg\"],\n  \"settings\": {\n    \"react\": {\n      \"version\": \"18.2.0\"\n    }\n  }\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.044921875,
          "content": "node_modules\n.idea\ncoverage\n.vscode\n.DS_Store\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "engine-strict=true\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.0087890625,
          "content": "v16.15.0\n"
        },
        {
          "name": "BACKERS.md",
          "type": "blob",
          "size": 0.74609375,
          "content": "# Project Backers\n\n> You may support this project via ❤️️ [GitHub](https://github.com/sponsors/trekhleb) or ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n## `O(2ⁿ)` Backers\n\n`null`\n\n## `O(n²)` Backers\n\n`null`\n\n## `O(n×log(n))` Backers\n\n`null`\n\n<!--\n<table>\n  <tr>\n    <td align=\"center\">\n      <a href=\"[PROFILE_URL]\">\n        <img\n          src=\"[PROFILE_IMG_SRC]\"\n          width=\"50\"\n          height=\"50\"\n        />\n      </a>\n      <br />\n      <a href=\"[PROFILE_URL]\">[PROFILE_NAME]</a>\n    </td>\n  </tr>\n</table>\n-->\n\n<!--\n<ul>\n  <li>\n    <a href=\"[PROFILE_URL]\">\n      <img\n        src=\"[PROFILE_IMG_SRC]\"\n        width=\"30\"\n        height=\"30\"\n      /></a>\n    &thinsp;\n    <a href=\"[PROFILE_URL]\">[PROFILE_NAME]</a>\n  </li>\n</ul>\n-->\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.498046875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.0908203125,
          "content": "## Contributing\n\n**General Rules**\n\n- As much as possible, try to follow the existing format of markdown and code.\n- Don't forget to run `npm run lint` and `npm test` before submitting pull requests.\n- Make sure that **100%** of your code is covered by tests.\n\n**Contributing New Translation**\n\n- Create new `README.xx-XX.md` file with translation alongside with \nmain `README.md` file where `xx-XX` is [locale and country/region codes](http://www.lingoes.net/en/translator/langcode.htm).\nFor example `en-US`, `zh-CN`, `zh-TW`, `ko-KR` etc.\n- You may also translate all other sub-folders by creating \nrelated `README.xx-XX.md` files in each of them.\n\n**Contributing New Algorithms**\n\n- Make your pull requests to be **specific** and **focused**. Instead of \ncontributing \"several sorting algorithms\" all at once contribute them all \none by one separately (i.e. one pull request for \"Quick Sort\", another one\nfor \"Heap Sort\" and so on).\n- Provide **README.md** for each of the algorithms **with explanations** of\nthe algorithm and **with links** to further readings.\n- Describe what you do in code using **comments**.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2018 Oleksii Trekhleb\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.ar-AR.md",
          "type": "blob",
          "size": 25.2509765625,
          "content": "# جافا سكريبت خوارزميات  وهياكل البيانات\n\n[![Build Status](https://travis-ci.org/trekhleb/javascript-algorithms.svg?branch=master)](https://travis-ci.org/trekhleb/javascript-algorithms)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nتحتوي هذه المقالة على أمثلة عديدة تستند إلى الخوارزميات الشائعة وهياكل البيانات في الجافا سكريبت.\n\nكل خوارزمية وهياكل البيانات لها برنامج README منفصل خاص بها\nمع التفسيرات والروابط ذات الصلة لمزيد من القراءة (بما في ذلك تلك\nإلى مقاطع فيديو YouTube).\n\n\n_اقرأ هذا في لغات أخرى:_\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n ☝ ملاحضة هذا المشروع مخصص للاستخدام لأغراض التعلم والبحث\nفقط ، و ** ليست ** معدة للاستخدام في **الإنتاج**\n\n## هياكل البيانات\n\nهياكل البيانات هي طريقة خاصة لتنظيم البيانات وتخزينها في جهاز الكمبيوتر بحيث\nيمكن الوصول إليها وتعديلها بكفاءة. بتعبير أدق ، هيكل البيانات هو مجموعة من البيانات\nالقيم والعلاقات فيما بينها والوظائف أو العمليات التي يمكن تطبيقها عليها\nالبيانات.\n\n\n`B` - مبتدئ, `A` - المتقدمة\n\n* `B` [قائمة مرتبطة](src/data-structures/linked-list)\n* `B` [قائمة مرتبطة بشكل مضاعف](src/data-structures/doubly-linked-list)\n* `B` [طابور, Queue](src/data-structures/queue)\n* `B` [كومة](src/data-structures/stack)\n* `B` [جدول التجزئة](src/data-structures/hash-table)\n* `B` [كومة](src/data-structures/heap) -الحد الأقصى والحد الأدنى من إصدارات الكومة\n* `B` [طابور الأولوية](src/data-structures/priority-queue)\n* `A` [تري](src/data-structures/trie)\n* `A` [شجرة](src/data-structures/tree)\n  * `A` [شجرة البحث الثنائية](src/data-structures/tree/binary-search-tree)\n  * `A` [شجرة AVL](src/data-structures/tree/avl-tree)\n  * `A` [شجرة الأحمر والأسود](src/data-structures/tree/red-black-tree)\n  * `A` [شجرة القطعة](src/data-structures/tree/segment-tree) - مع أمثلة على استفسارات النطاق الأدنى / الأقصى / المجموع\n  * `A` [شجرة فينويك](src/data-structures/tree/fenwick-tree) (شجرة ثنائية مفهرسة)\n* `A` [Graph](src/data-structures/graph) (كلاهما موجه وغير موجه)\n* `A` [مجموعة منفصلة](src/data-structures/disjoint-set)\n* `A` [مرشح بلوم](src/data-structures/bloom-filter)\n\n\n## الخوارزميات\n\nالخوارزمية هي تحديد لا لبس فيه لكيفية حل فئة من المشاكل. أنه\nمجموعة من القواعد التي تحدد بدقة تسلسل العمليات.\n\n`B` - مبتدئ ، `A` - متقدم\n\n\n### الخوارزميات حسب الموضوع\n\n* **رياضيات**\n  * `B` [معالجة البت](src/algorithms/math/bits)\n  * `B` [عاملي](src/algorithms/math/factorial)\n  * `B` [رقم فيبوناتشي](src/algorithms/math/fibonacci) - الإصدارات الكلاسيكية والمغلقة\n  * `B` [اختبار البدائية](src/algorithms/math/primality-test) (طريقة تقسيم المحاكمة)\n  * `B` [الخوارزمية الإقليدية](src/algorithms/math/euclidean-algorithm) - احسب القاسم المشترك الأكبر (GCD)\n  * `B` [أقل مضاعف مشترك](src/algorithms/math/least-common-multiple) (LCM)\n  * `B` [منخل إراتوستينس](src/algorithms/math/sieve-of-eratosthenes) - إيجاد جميع الأعداد الأولية حتى أي حد معين\n  * `B` [هي قوة اثنين](src/algorithms/math/is-power-of-two) - تحقق مما إذا كان الرقم هو قوة اثنين (الخوارزميات الساذجة والبتية)\n  * `B` [مثلث باسكال](src/algorithms/math/pascal-triangle)\n  * `B` [عدد مركب](src/algorithms/math/complex-number) - الأعداد المركبة والعمليات الأساسية معهم\n  * `B` [راديان ودرجة](src/algorithms/math/radian) - راديان لدرجة التحويل والعكس\n  * `B` [تشغيل سريع](src/algorithms/math/fast-powering)\n  * `B` [طريقة هورنر](src/algorithms/math/horner-method) - تقييم متعدد الحدود\n  * `A` [قسم صحيح](src/algorithms/math/integer-partition)\n  * `A` [الجذر التربيعي](src/algorithms/math/square-root) - طريقة نيوتن\n  * `A` [خوارزمية ليو هوي π](src/algorithms/math/liu-hui) - π حسابات تقريبية على أساس N-gons\n  * `A` [تحويل فورييه المنفصل](src/algorithms/math/fourier-transform) - حلل وظيفة الوقت (إشارة) في الترددات التي يتكون منها\n* **مجموعات**\n  * `B` [المنتج الديكارتي](src/algorithms/sets/cartesian-product) - منتج من مجموعات متعددة\n  * `B` [فيشر ييتس شافل](src/algorithms/sets/fisher-yates) - التقليب العشوائي لتسلسل محدود\n  * `A` [مجموعة الطاقة](src/algorithms/sets/power-set) - جميع المجموعات الفرعية للمجموعة (حلول البت والتتبع التراجعي)\n  * `A` [التباديل](src/algorithms/sets/permutations) (مع وبدون التكرار)\n  * `A` [مجموعات](src/algorithms/sets/combinations) (مع وبدون التكرار)\n  * `A` [أطول نتيجة مشتركة](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [أطول زيادة متتالية](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [أقصر تسلسل فائق مشترك](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [مشكلة حقيبة الظهر](src/algorithms/sets/knapsack-problem) - \"0/1\" و \"غير منضم\"\n  * `A` [الحد الأقصى من Subarray](src/algorithms/sets/maximum-subarray) -إصدارات \"القوة الغاشمة\" و \"البرمجة الديناميكية\" (كادان)\n  * `A` [مجموع الجمع](src/algorithms/sets/combination-sum) - ابحث عن جميع التركيبات التي تشكل مبلغًا محددًا\n* **سلاسل**\n  * `B` [مسافة هامنج](src/algorithms/string/hamming-distance) - عدد المواقف التي تختلف فيها الرموز\n  * `A` [المسافة ليفنشتاين](src/algorithms/string/levenshtein-distance) - الحد الأدنى لمسافة التحرير بين تسلسلين\n  * `A` [خوارزمية كنوث - موريس - برات](src/algorithms/string/knuth-morris-pratt) (خوارزمية KMP) - بحث السلسلة الفرعية (مطابقة النمط)\n  * `A` [خوارزمية Z](src/algorithms/string/z-algorithm) - بحث سلسلة فرعية (مطابقة النمط)\n  * `A` [خوارزمية رابين كارب](src/algorithms/string/rabin-karp) - بحث السلسلة الفرعية\n  * `A` [أطول سلسلة فرعية مشتركة](src/algorithms/string/longest-common-substring)\n  * `A` [مطابقة التعبير العادي](src/algorithms/string/regular-expression-matching)\n* **عمليات البحث**\n  * `B` [البحث الخطي](src/algorithms/search/linear-search)\n  * `B` [بحث سريع](src/algorithms/search/jump-search) (أو حظر البحث) - ابحث في مصفوفة مرتبة\n  * `B` [بحث ثنائي](src/algorithms/search/binary-search) - البحث في مجموعة مرتبة\n  * `B` [بحث الاستيفاء](src/algorithms/search/interpolation-search) - البحث في مجموعة مرتبة موزعة بشكل موحد\n\n* **فرز**\n  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)\n  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)\n  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)\n  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - عمليات التنفيذ في المكان وغير في المكان\n  * `B` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)\n  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)\n* **القوائم المرتبطة**\n  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)\n  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)\n* **الأشجار**\n  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)\n* **الرسوم البيانية**\n  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجه\n  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) -إيجاد أقصر المسارات لجميع رؤوس الرسم البياني من رأس واحد\n  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - إيجاد أقصر المسارات لجميع رؤوس الرسم البياني من رأس واحد\n  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - إيجاد أقصر المسارات بين جميع أزواج الرؤوس\n  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - لكل من الرسوم البيانية الموجهة وغير الموجهة (الإصدارات القائمة على DFS و Disjoint Set)\n  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجه\n  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - طريقة البحث العمق الأول (DFS)\n  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - خوارزمية تارجان (تعتمد على DFS)\n  * `A` [Bridges](src/algorithms/graph/bridges) - خوارزمية تعتمد على DFS\n  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - خوارزمية فلوري - قم بزيارة كل حافة مرة واحدة بالضبط\n  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - قم بزيارة كل قمة مرة واحدة بالضبط\n  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - خوارزمية Kosaraju\n  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - أقصر طريق ممكن يزور كل مدينة ويعود إلى المدينة الأصلية\n* **التشفير\n  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - المتداول دالة التجزئة على أساس متعدد الحدود\n  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - استبدال بسيط للشفرات\n* **التعلم الالي**\n  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 وظائف JS بسيطة توضح كيف يمكن للآلات أن تتعلم بالفعل (الانتشار إلى الأمام / الخلف)\n* **غير مصنف**\n  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - خوارزمية في المكان\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - التراجع ، البرمجة الديناميكية (من أعلى إلى أسفل + من أسفل إلى أعلى) والأمثلة الجشعة\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - التراجع والبرمجة الديناميكية والأمثلة القائمة على مثلث باسكال\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - محاصرة مشكلة مياه الأمطار (البرمجة الديناميكية وإصدارات القوة الغاشمة)\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - احسب عدد الطرق للوصول إلى القمة (4 حلول)\n  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n\n### الخوارزميات حسب النموذج\n\nالنموذج الحسابي هو طريقة أو نهج عام يكمن وراء تصميم الفصل\nمن الخوارزميات. إنه تجريد أعلى من مفهوم الخوارزمية ، تمامًا مثل\nالخوارزمية هي تجريد أعلى من برنامج الكمبيوتر.\n\n* **القوة الغاشمة** - انظر في جميع الاحتمالات وحدد الحل الأفضل\n  * `B` [Linear Search](src/algorithms/search/linear-search)\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - محاصرة مشكلة مياه الأمطار\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - احسب عدد الطرق للوصول إلى القمة\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)\n  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - أقصر طريق ممكن يزور كل مدينة ويعود إلى المدينة الأصلية\n  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - حلل وظيفة الوقت (إشارة) في الترددات التي يتكون منها\n* **جشع** - اختر الخيار الأفضل في الوقت الحالي ، دون أي اعتبار للمستقبل\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)\n  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - إيجاد أقصر مسار لجميع رؤوس الرسم البياني\n  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجه\n  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجه\n* **فرق تسد** - قسّم المشكلة إلى أجزاء أصغر ثم حل تلك الأجزاء\n  * `B` [Binary Search](src/algorithms/search/binary-search)\n  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Pascal's Triangle](src/algorithms/math/pascal-triangle)\n  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - حساب القاسم المشترك الأكبر (GCD)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort)\n  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Fast Powering](src/algorithms/math/fast-powering)\n  * `A` [Permutations](src/algorithms/sets/permutations) (مع التكرار وبدونه)\n  * `A` [Combinations](src/algorithms/sets/combinations) (مع التكرار وبدونه)\n* **البرمجة الديناميكية** - بناء حل باستخدام الحلول الفرعية التي تم العثور عليها مسبقًا\n  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - محاصرة مشكلة مياه الأمطار\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - احسب عدد الطرق للوصول إلى القمة\n  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - الحد الأدنى لمسافة التحرير بين تسلسلين\n  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)\n  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)\n  * `A` [Integer Partition](src/algorithms/math/integer-partition)\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)\n  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - إيجاد أقصر مسار لجميع رؤوس الرسم البياني\n  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - إيجاد أقصر المسارات بين جميع أزواج الرؤوس\n  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)\n* **التراجع** - على غرار القوة الغاشمة ، حاول إنشاء جميع الحلول الممكنة ، ولكن في كل مرة تقوم فيها بإنشاء الحل التالي الذي تختبره\nإذا استوفت جميع الشروط ، وعندها فقط استمر في إنشاء الحلول اللاحقة. خلاف ذلك ، تراجع ، واذهب إلى\nطريق مختلف لإيجاد حل. عادةً ما يتم استخدام اجتياز DFS لمساحة الدولة.\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  * `B` [Power Set](src/algorithms/sets/power-set) - جميع المجموعات الفرعية للمجموعة\n  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - قم بزيارة كل قمة مرة واحدة بالضبط\n  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - ابحث عن جميع التركيبات التي تشكل مبلغًا محددًا\n\n\n* ** Branch & Bound ** - تذكر الحل الأقل تكلفة الموجود في كل مرحلة من مراحل التراجع\nالبحث ، واستخدام تكلفة الحل الأقل تكلفة الموجود حتى الآن بحد أدنى لتكلفة\nالحل الأقل تكلفة للمشكلة ، من أجل تجاهل الحلول الجزئية بتكاليف أكبر من\nتم العثور على حل بأقل تكلفة حتى الآن. اجتياز BFS عادةً بالاشتراك مع اجتياز DFS لمساحة الحالة\nيتم استخدام الشجرة.\n\n## كيفية استخدام هذا المستودع\n\n**تثبيت كل التبعيات**\n```\nnpm install\n```\n\n**قم بتشغيل ESLint**\n\nقد ترغب في تشغيله للتحقق من جودة الكود.\n\n```\nnpm run lint\n```\n\n**قم بإجراء جميع الاختبارات**\n```\nnpm test\n```\n\n**قم بإجراء الاختبارات بالاسم**\n```\nnpm test -- 'LinkedList'\n```\n\n**ملعب**\n\nيمكنك اللعب بهياكل البيانات والخوارزميات في ملف `. /src/playground/playground.js` والكتابة\nاختبارات لها في `./src/playground/__test__/playground.test.js`.\n\nثم قم ببساطة بتشغيل الأمر التالي لاختبار ما إذا كان كود الملعب الخاص بك يعمل كما هو متوقع:\n\n```\nnpm test -- 'playground'\n```\n\n## معلومات مفيدة\n\n### المراجع\n\n[▶ هياكل البيانات والخوارزميات على موقع يوتيوب](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Big O Notation\n\n* يتم استخدام **Big O notation** لتصنيف الخوارزميات وفقًا لكيفية نمو متطلبات وقت التشغيل أو المساحة مع نمو حجم الإدخال.\nقد تجد في الرسم البياني أدناه الأوامر الأكثر شيوعًا لنمو الخوارزميات المحددة في تBig O notation.\n\n![Big O graphs](./assets/big-o-graph.png)\n\nمصدر: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nفيما يلي قائمة ببعض رموز Big O notation الأكثر استخدامًا ومقارنات أدائها مقابل أحجام مختلفة من بيانات الإدخال.\n\n| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements  |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### تعقيد عمليات بنية البيانات\n\n| Data Structure          | Access    | Search    | Insertion | Deletion  | Comments  |\n| ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- |\n| **Array**               | 1         | n         | n         | n         |           |\n| **Stack**               | n         | n         | 1         | 1         |           |\n| **Queue**               | n         | n         | 1         | 1         |           |\n| **Linked List**         | n         | n         | 1         | n         |           |\n| **Hash Table**          | -         | n         | n         | n         |في حالة وجود تكاليف دالة تجزئة مثالية ستكون O (1)|\n| **Binary Search Tree**  | n         | n         | n         | n         | في حالة توازن تكاليف الشجرة ستكون O (log (n))|\n| **B-Tree**              | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Red-Black Tree**      | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **AVL Tree**            | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Bloom Filter**        | -         | 1         | 1         | -         |الإيجابيات الكاذبة ممكنة أثناء البحث|\n\n### تعقيد خوارزميات فرز الصفيف\n\n| Name                  | Best            | Average             | Worst               | Memory    | Stable    | Comments  |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- |\n| **Bubble sort**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | نعم       |           |\n| **Insertion sort**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | نعم       |           |\n| **Selection sort**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | لا        |           |\n| **Heap sort**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | لا        |           |\n| **Merge sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | نعم       |           |\n| **Quick sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | No        | عادةً ما يتم إجراء الفرز السريع في مكانه مع مساحة مكدس O (log (n))|\n| **Shell sort**        | n&nbsp;log(n)   | depends on gap sequence   | n&nbsp;(log(n))<sup>2</sup>  | 1         | لا       |           |\n| **Counting sort**     | n + r           | n + r               | n + r               | n + r     | Yes       |r - أكبر رقم في المجموعة|\n| **Radix sort**        | n * k           | n * k               | n * k               | n + k     | Yes       | ك - طول أطول مفتاح |\n\n## مؤيدو المشروع\n\n> يمكنك دعم هذا المشروع عبر ❤️️ [GitHub](https://github.com/sponsors/trekhleb) أو ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n[الناس الذين يدعمون هذا المشروع](https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md) `∑ = 0`\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.de-DE.md",
          "type": "blob",
          "size": 28.9013671875,
          "content": "# JavaScript-Algorithmen und Datenstrukturen\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nDieses Repository enthält JavaScript Beispiele für viele\ngängige Algorithmen und Datenstrukturen.\n\nJeder Algorithmus und jede Datenstruktur hat eine eigene README\nmit zugehörigen Erklärungen und weiterführenden Links (einschließlich zu YouTube-Videos).\n\n_Lies dies in anderen Sprachen:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/)\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Uzbek_](README.uz-UZ.md)\n\n_☝ Beachte, dass dieses Projekt nur für Lern- und Forschungszwecke gedacht ist und **nicht** für den produktiven Einsatz verwendet werden soll_\n\n## Datenstrukturen\n\nEine Datenstruktur ist eine bestimmte Art und Weise, Daten in einem Computer so zu organisieren und zu speichern, dass sie\neffizient erreicht und verändert werden können. Genauer gesagt, ist eine Datenstruktur eine Sammlung von Werten,\nden Beziehungen zwischen ihnen und den Funktionen oder Operationen, die auf die Daten angewendet werden können.\n\n`B` - Anfänger:innen, `A` - Fortgeschrittene\n\n* `B` [Verkettete Liste (Linked List)](src/data-structures/linked-list)\n* `B` [Doppelt verkettete Liste (Doubly Linked List)](src/data-structures/doubly-linked-list)\n* `B` [Warteschlange (Queue)](src/data-structures/queue)\n* `B` [Stapelspeicher (Stack)](src/data-structures/stack)\n* `B` [Hashtabelle (Hash Table)](src/data-structures/hash-table)\n* `B` [Heap-Algorithmus (Heap)](src/data-structures/heap) - max und min Heap-Versionen\n* `B` [Vorrangwarteschlange (Priority Queue)](src/data-structures/priority-queue)\n* `A` [Trie (Trie)](src/data-structures/trie)\n* `A` [Baum (Tree)](src/data-structures/tree)\n  * `A` [Binärer Suchbaum (Binary Search Tree)](src/data-structures/tree/binary-search-tree)\n  * `A` [AVL-Baum (AVL Tree)](src/data-structures/tree/avl-tree)\n  * `A` [Rot-Schwarz-Baum (Red-Black Tree)](src/data-structures/tree/red-black-tree)\n  * `A` [Segment-Baum (Segment Tree)](src/data-structures/tree/segment-tree) - mit Min/Max/Summenbereich-Abfrage Beispiel\n  * `A` [Fenwick Baum (Fenwick Tree)](src/data-structures/tree/fenwick-tree) (Binär indizierter Baum / Binary Indexed Tree)\n* `A` [Graph (Graph)](src/data-structures/graph) (sowohl gerichtet als auch ungerichtet)\n* `A` [Union-Find-Struktur (Disjoint Set)](src/data-structures/disjoint-set)\n* `A` [Bloomfilter (Bloom Filter)](src/data-structures/bloom-filter)\n\n## Algorithmen\n\nEin Algorithmus ist eine eindeutige Spezifikation, wie eine Klasse von Problemen zu lösen ist. Er besteht\naus einem Satz von Regeln, die eine Abfolge von Operationen genau definieren.\n\n`B` - Anfänger:innen, `A` - Fortgeschrittene\n\n### Algorithmen nach Thema\n\n* **Mathe**\n  * `B` [Bitmanipulation (Bit Manipulation)](src/algorithms/math/bits) - Bits setzen/lesen/aktualisieren/löschen, Multiplikation/Division durch zwei negieren usw..\n  * `B` [Faktoriell (Factorial)](src/algorithms/math/factorial)\n  * `B` [Fibonacci-Zahl (Fibonacci Number)](src/algorithms/math/fibonacci) - Klassische und geschlossene Version\n  * `B` [Primfaktoren (Prime Factors)](src/algorithms/math/prime-factors) - Auffinden von Primfaktoren und deren Zählung mit Hilfe des Satz von Hardy-Ramanujan (Hardy-Ramanujan's theorem)\n  * `B` [Primzahl-Test (Primality Test)](src/algorithms/math/primality-test) (Probedivision / trial division method)\n  * `B` [Euklidischer Algorithmus (Euclidean Algorithm)](src/algorithms/math/euclidean-algorithm) - Berechnen des größten gemeinsamen Teilers (ggT)\n  * `B` [Kleinstes gemeinsames Vielfaches (Least Common Multiple)](src/algorithms/math/least-common-multiple) (kgV)\n  * `B` [Sieb des Eratosthenes (Sieve of Eratosthenes)](src/algorithms/math/sieve-of-eratosthenes) - Finden aller Primzahlen bis zu einer bestimmten Grenze\n  * `B` [Power of two (Is Power of Two)](src/algorithms/math/is-power-of-two) - Prüft, ob die Zahl eine Zweierpotenz ist (naive und bitweise Algorithmen)\n  * `B` [Pascalsches Dreieck (Pascal's Triangle)](src/algorithms/math/pascal-triangle)\n  * `B` [Komplexe Zahlen (Complex Number)](src/algorithms/math/complex-number) - Komplexe Zahlen und Grundoperationen mit ihnen\n  * `B` [Bogenmaß & Grad (Radian & Degree)](src/algorithms/math/radian) - Umrechnung von Bogenmaß in Grad und zurück\n  * `B` [Fast Powering Algorithmus (Fast Powering)](src/algorithms/math/fast-powering)\n  * `B` [Horner-Schema (Horner's method)](src/algorithms/math/horner-method) - Polynomauswertung\n  * `B` [Matrizen (Matrices)](src/algorithms/math/matrix) - Matrizen und grundlegende Matrixoperationen (Multiplikation, Transposition usw.)\n  * `B` [Euklidischer Abstand (Euclidean Distance)](src/algorithms/math/euclidean-distance) - Abstand zwischen zwei Punkten/Vektoren/Matrizen\n  * `A` [Ganzzahlige Partitionierung (Integer Partition)](src/algorithms/math/integer-partition)\n  * `A` [Quadratwurzel (Square Root)](src/algorithms/math/square-root) - Newtonverfahren (Newton's method)\n  * `A` [Liu Hui π Algorithmus (Liu Hui π Algorithm)](src/algorithms/math/liu-hui) - Näherungsweise π-Berechnungen auf Basis von N-gons\n  * `A` [Diskrete Fourier-Transformation (Discrete Fourier Transform)](src/algorithms/math/fourier-transform) - Eine Funktion der Zeit (ein Signal) in die Frequenzen zerlegen, aus denen sie sich zusammensetzt\n* **Sets**\n  * `B` [Kartesisches Produkt (Cartesian Product)](src/algorithms/sets/cartesian-product) - Produkt aus mehreren Mengen\n  * `B` [Fisher-Yates-Verfahren (Fisher–Yates Shuffle)](src/algorithms/sets/fisher-yates) - Zufällige Permutation einer endlichen Folge\n  * `A` [Potenzmenge (Power Set)](src/algorithms/sets/power-set) - Alle Teilmengen einer Menge (Bitweise und Rücksetzverfahren Lösungen(backtracking solutions))\n  * `A` [Permutation (Permutations)](src/algorithms/sets/permutations) (mit und ohne Wiederholungen)\n  * `A` [Kombination (Combinations)](src/algorithms/sets/combinations) (mit und ohne Wiederholungen)\n  * `A` [Problem der längsten gemeinsamen Teilsequenz (Longest Common Subsequence)](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Längste gemeinsame Teilsequenz (Longest Increasing Subsequence)](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Der kürzeste gemeinsame String (Shortest Common Supersequence)](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Rucksackproblem (Knapsack Problem)](src/algorithms/sets/knapsack-problem) - \"0/1\" und \"Ungebunden\"\n  * `A` [Das Maximum-Subarray Problem (Maximum Subarray)](src/algorithms/sets/maximum-subarray) - \"Brute-Force-Methode\" und \"Dynamische Programmierung\" (Kadane' Algorithmus)\n  * `A` [Kombinationssumme (Combination Sum)](src/algorithms/sets/combination-sum) - Alle Kombinationen finden, die eine bestimmte Summe bilden\n* **Zeichenketten (Strings)**\n  * `B` [Hamming-Abstand (Hamming Distance)](src/algorithms/string/hamming-distance) - Anzahl der Positionen, an denen die Symbole unterschiedlich sind\n  * `A` [Levenshtein-Distanz (Levenshtein Distance)](src/algorithms/string/levenshtein-distance) - Minimaler Editierabstand zwischen zwei Sequenzen\n  * `A` [Knuth-Morris-Pratt-Algorithmus (Knuth–Morris–Pratt Algorithm)](src/algorithms/string/knuth-morris-pratt) (KMP Algorithmus) - Teilstringsuche (Mustervergleich / Pattern Matching)\n  * `A` [Z-Algorithmus (Z Algorithm)](src/algorithms/string/z-algorithm) - Teilstringsuche (Mustervergleich / Pattern Matching)\n  * `A` [Rabin-Karp-Algorithmus (Rabin Karp Algorithm)](src/algorithms/string/rabin-karp) - Teilstringsuche\n  * `A` [Längstes häufiges Teilzeichenfolgenproblem (Longest Common Substring)](src/algorithms/string/longest-common-substring)\n  * `A` [Regulärer Ausdruck (Regular Expression Matching)](src/algorithms/string/regular-expression-matching)\n* **Suchen**\n  * `B` [Lineare Suche (Linear Search)](src/algorithms/search/linear-search)\n  * `B` [Sprungsuche (Jump Search)](src/algorithms/search/jump-search) (oder Blocksuche) - Suche im sortierten Array\n  * `B` [Binäre Suche (Binary Search)](src/algorithms/search/binary-search) - Suche in einem sortierten Array\n  * `B` [Interpolationssuche (Interpolation Search)](src/algorithms/search/interpolation-search) - Suche in gleichmäßig verteilt sortiertem Array\n* **Sortieren**\n  * `B` [Bubblesort (Bubble Sort)](src/algorithms/sorting/bubble-sort)\n  * `B` [Selectionsort (Selection Sort)](src/algorithms/sorting/selection-sort)\n  * `B` [Einfügesortierenmethode (Insertion Sort)](src/algorithms/sorting/insertion-sort)\n  * `B` [Haldensortierung (Heap Sort)](src/algorithms/sorting/heap-sort)\n  * `B` [Mergesort (Merge Sort)](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort (Quicksort)](src/algorithms/sorting/quick-sort) - in-place und non-in-place Implementierungen\n  * `B` [Shellsort (Shellsort)](src/algorithms/sorting/shell-sort)\n  * `B` [Countingsort (Counting Sort)](src/algorithms/sorting/counting-sort)\n  * `B` [Fachverteilen (Radix Sort)](src/algorithms/sorting/radix-sort)\n* **Verkettete Liste (Linked List)**\n  * `B` [Gerade Traversierung (Straight Traversal)](src/algorithms/linked-list/traversal)\n  * `B` [Umgekehrte Traversierung (Reverse Traversal)](src/algorithms/linked-list/reverse-traversal)\n* **Bäume**\n  * `B` [Tiefensuche (Depth-First Search)](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Breitensuche (Breadth-First Search)](src/algorithms/tree/breadth-first-search) (BFS)\n* **Graphen**\n  * `B` [Tiefensuche (Depth-First Search)](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Breitensuche (Breadth-First Search)](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Algorithmus von Kruskal (Kruskal’s Algorithm)](src/algorithms/graph/kruskal) - Finden des Spannbaum (Minimum Spanning Tree / MST) für einen gewichteten ungerichteten Graphen\n  * `A` [Dijkstra-Algorithmus (Dijkstra Algorithm)](src/algorithms/graph/dijkstra) - Finden der kürzesten Wege zu allen Knoten des Graphen von einem einzelnen Knotenpunkt aus\n  * `A` [Bellman-Ford-Algorithmus (Bellman-Ford Algorithm)](src/algorithms/graph/bellman-ford) - Finden der kürzesten Wege zu allen Knoten des Graphen von einem einzelnen Knotenpunkt aus\n  * `A` [Algorithmus von Floyd und Warshall (Floyd-Warshall Algorithm)](src/algorithms/graph/floyd-warshall) - Die kürzesten Wege zwischen allen Knotenpaaren finden\n  * `A` [Zykluserkennung (Detect Cycle)](src/algorithms/graph/detect-cycle) - Sowohl für gerichtete als auch für ungerichtete Graphen (DFS- und Disjoint-Set-basierte Versionen)\n  * `A` [Algorithmus von Prim (Prim’s Algorithm)](src/algorithms/graph/prim) - Finden des Spannbaums (Minimum Spanning Tree / MST) für einen gewichteten ungerichteten Graphen\n  * `A` [Topologische Sortierung (Topological Sorting)](src/algorithms/graph/topological-sorting) - DFS-Verfahren\n  * `A` [Artikulationspunkte (Articulation Points)](src/algorithms/graph/articulation-points) - Algorithmus von Tarjan (Tarjan's algorithm) (DFS basiert)\n  * `A` [Brücke (Bridges)](src/algorithms/graph/bridges) - DFS-basierter Algorithmus\n  * `A` [Eulerkreisproblem (Eulerian Path and Eulerian Circuit)](src/algorithms/graph/eulerian-path) - Algorithmus von Fleury (Fleury's algorithm) - Jede Kante genau einmal durchlaufen.\n  * `A` [Hamiltonkreisproblem (Hamiltonian Cycle)](src/algorithms/graph/hamiltonian-cycle) - Jeden Eckpunkt genau einmal durchlaufen.\n  * `A` [Starke Zusammenhangskomponente (Strongly Connected Components)](src/algorithms/graph/strongly-connected-components) - Kosarajus Algorithmus\n  * `A` [Problem des Handlungsreisenden (Travelling Salesman Problem)](src/algorithms/graph/travelling-salesman) - Kürzestmögliche Route, die jede Stadt besucht und zur Ausgangsstadt zurückkehrt\n* **Kryptographie**\n  * `B` [Polynomiale Streuwertfunktion(Polynomial Hash)](src/algorithms/cryptography/polynomial-hash) - Rollierende Streuwert-Funktion basierend auf Polynom\n  * `B` [Schienenzaun Chiffre (Rail Fence Cipher)](src/algorithms/cryptography/rail-fence-cipher) - Ein Transpositionsalgorithmus zur Verschlüsselung von Nachrichten\n  * `B` [Caesar-Verschlüsselung (Caesar Cipher)](src/algorithms/cryptography/caesar-cipher) - Einfache Substitutions-Chiffre\n  * `B` [Hill-Chiffre (Hill Cipher)](src/algorithms/cryptography/hill-cipher) - Substitutionschiffre basierend auf linearer Algebra\n* **Maschinelles Lernen**\n  * `B` [Künstliches Neuron (NanoNeuron)](https://github.com/trekhleb/nano-neuron) - 7 einfache JS-Funktionen, die veranschaulichen, wie Maschinen tatsächlich lernen können (Vorwärts-/Rückwärtspropagation)\n  * `B` [Nächste-Nachbarn-Klassifikation (k-NN)](src/algorithms/ml/knn) - k-nächste-Nachbarn-Algorithmus\n  * `B` [k-Means (k-Means)](src/algorithms/ml/k-means) - k-Means-Algorithmus\n* **Image Processing**\n  * `B` [Inhaltsabhängige Bildverzerrung (Seam Carving)](src/algorithms/image-processing/seam-carving) - Algorithmus zur inhaltsabhängigen Bildgrößenänderung\n* **Unkategorisiert**\n  * `B` [Türme von Hanoi (Tower of Hanoi)](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Rotationsmatrix (Square Matrix Rotation)](src/algorithms/uncategorized/square-matrix-rotation) - In-Place-Algorithmus\n  * `B` [Jump Game (Jump Game)](src/algorithms/uncategorized/jump-game) - Backtracking, dynamische Programmierung (Top-down + Bottom-up) und gierige Beispiele\n  * `B` [Eindeutige Pfade (Unique Paths)](src/algorithms/uncategorized/unique-paths) - Backtracking, dynamische Programmierung und Pascalsches Dreieck basierte Beispiele\n  * `B` [Regenterrassen (Rain Terraces)](src/algorithms/uncategorized/rain-terraces) - Auffangproblem für Regenwasser (trapping rain water problem) (dynamische Programmierung und Brute-Force-Versionen)\n  * `B` [Rekursive Treppe (Recursive Staircase)](src/algorithms/uncategorized/recursive-staircase) - Zählen der Anzahl der Wege, die nach oben führen (4 Lösungen)\n  * `B` [Beste Zeit zum Kaufen/Verkaufen von Aktien (Best Time To Buy Sell Stocks)](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - Beispiele für \"Teile und Herrsche\" und Beispiele für den One-Pass-Algorithmus\n  * `A` [Damenproblem (N-Queens Problem)](src/algorithms/uncategorized/n-queens)\n  * `A` [Springerproblem (Knight's Tour)](src/algorithms/uncategorized/knight-tour)\n\n### Algorithmen nach Paradigma\n\nEin algorithmisches Paradigma ist eine generische Methode oder ein Ansatz, der dem Entwurf einer Klasse von Algorithmen zugrunde liegt. Es ist eine Abstraktion, die höher ist als der Begriff des Algorithmus. Genauso wie ein Algorithmus eine Abstraktion ist, die höher ist als ein Computerprogramm.\n\n* **Brachiale Gewalt (Brute Force)** - schaut sich alle Möglichkeiten an und wählt die beste Lösung aus\n  * `B` [Lineare Suche (Linear Search)](src/algorithms/search/linear-search)\n  * `B` [Regenterrassen (Rain Terraces)](src/algorithms/uncategorized/rain-terraces) - Auffangproblem für Regenwasser (trapping rain water problem) (dynamische Programmierung und Brute-Force-Versionen)\n  * `B` [Rekursive Treppe (Recursive Staircase)](src/algorithms/uncategorized/recursive-staircase) - Zählen der Anzahl der Wege, die nach oben führen (4 Lösungen)\n  * `A` [Das Maximum-Subarray Problem (Maximum Subarray)](src/algorithms/sets/maximum-subarray)\n  * `A` [Problem des Handlungsreisenden (Travelling Salesman Problem)](src/algorithms/graph/travelling-salesman) - Kürzestmögliche Route, die jede Stadt besucht und zur Ausgangsstadt zurückkehrt\n  * `A` [Diskrete Fourier-Transformation (Discrete Fourier Transform)](src/algorithms/math/fourier-transform) - Eine Funktion der Zeit (ein Signal) in die Frequenzen zerlegen, aus denen sie sich zusammensetzt\n* **Gierig (Greedy)** - Wählt die beste Option zum aktuellen Zeitpunkt, ohne Rücksicht auf die Zukunft\n  * `B` [Jump Game (Jump Game)](src/algorithms/uncategorized/jump-game)\n  * `A` [Rucksackproblem (Unbound Knapsack Problem)](src/algorithms/sets/knapsack-problem)\n  * `A` [Dijkstra-Algorithmus (Dijkstra Algorithm)](src/algorithms/graph/dijkstra) - Finden der kürzesten Wege zu allen Knoten des Graphen von einem einzelnen Knotenpunkt aus\n  * `A` [Algorithmus von Prim (Prim’s Algorithm)](src/algorithms/graph/prim) - Finden des Spannbaums (Minimum Spanning Tree / MST) für einen gewichteten ungerichteten Graphen\n  * `B` [Algorithmus von Kruskal (Kruskal’s Algorithm)](src/algorithms/graph/kruskal) - Finden des Spannbaum (Minimum Spanning Tree / MST) für einen gewichteten ungerichteten Graphen\n* **Teile und herrsche** - Das Problem in kleinere Teile aufteilen und diese Teile dann lösen\n  * `B` [Binäre Suche (Binary Search)](src/algorithms/search/binary-search)\n  * `B` [Türme von Hanoi (Tower of Hanoi)](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Pascalsches Dreieck (Pascal's Triangle)](src/algorithms/math/pascal-triangle)\n  * `B` [Euklidischer Algorithmus (Euclidean Algorithm)](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)\n  * `B` [Mergesort (Merge Sort)](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort (Quicksort)](src/algorithms/sorting/quick-sort)\n  * `B` [Tiefensuche (Depth-First Search)](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Breitensuche (Breadth-First Search)](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Matrizen (Matrices)](src/algorithms/math/matrix) - Matrizen und grundlegende Matrixoperationen (Multiplikation, Transposition usw.)\n  * `B` [Jump Game (Jump Game)](src/algorithms/uncategorized/jump-game)\n  * `B` [Fast Powering Algorithmus (Fast Powering)](src/algorithms/math/fast-powering)\n  * `B` [Beste Zeit zum Kaufen/Verkaufen von Aktien (Best Time To Buy Sell Stocks)](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - Beispiele für \"Teile und Herrsche\" und Beispiele für den One-Pass-Algorithmus\n  * `A` [Permutation (Permutations)](src/algorithms/sets/permutations) (mit und ohne Wiederholungen)\n  * `A` [Kombination (Combinations)](src/algorithms/sets/combinations) (mit und ohne Wiederholungen)\n* **Dynamische Programmierung** - Eine Lösung aus zuvor gefundenen Teillösungen aufbauen\n  * `B` [Fibonacci-Zahl (Fibonacci Number)](src/algorithms/math/fibonacci)\n  * `B` [Jump Game (Jump Game)](src/algorithms/uncategorized/jump-game)\n  * `B` [Eindeutige Pfade (Unique Paths)](src/algorithms/uncategorized/unique-paths)\n  * `B` [Regenterrassen (Rain Terraces)](src/algorithms/uncategorized/rain-terraces) - Auffangproblem für Regenwasser (trapping rain water problem) (dynamische Programmierung und Brute-Force-Versionen)\n  * `B` [Rekursive Treppe (Recursive Staircase)](src/algorithms/uncategorized/recursive-staircase) - Zählen der Anzahl der Wege, die nach oben führen (4 Lösungen)\n  * `B` [Inhaltsabhängige Bildverzerrung (Seam Carving)](src/algorithms/image-processing/seam-carving) - Algorithmus zur inhaltsabhängigen Bildgrößenänderung\n  * `A` [Levenshtein-Distanz (Levenshtein Distance)](src/algorithms/string/levenshtein-distance) - Minimaler Editierabstand zwischen zwei Sequenzen\n  * `A` [Problem der längsten gemeinsamen Teilsequenz (Longest Common Subsequence)](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Längstes häufiges Teilzeichenfolgenproblem (Longest Common Substring)](src/algorithms/string/longest-common-substring)\n  * `A` [Längste gemeinsame Teilsequenz (Longest Increasing Subsequence)](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Der kürzeste gemeinsame String (Shortest Common Supersequence)](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Rucksackproblem (0/1 Knapsack Problem)](src/algorithms/sets/knapsack-problem)\n  * `A` [Ganzzahlige Partitionierung (Integer Partition)](src/algorithms/math/integer-partition)\n  * `A` [Das Maximum-Subarray Problem (Maximum Subarray)](src/algorithms/sets/maximum-subarray)\n  * `A` [Bellman-Ford-Algorithmus (Bellman-Ford Algorithm)](src/algorithms/graph/bellman-ford) - Finden der kürzesten Wege zu allen Knoten des Graphen von einem einzelnen Knotenpunkt aus\n  * `A` [Algorithmus von Floyd und Warshall (Floyd-Warshall Algorithm)](src/algorithms/graph/floyd-warshall) - Die kürzesten Wege zwischen allen Knotenpaaren finden\n  * `A` [Regulärer Ausdruck (Regular Expression Matching)](src/algorithms/string/regular-expression-matching)\n* **Zurückverfolgung** - Ähnlich wie bei Brute-Force versuchen Sie, alle möglichen Lösungen zu generieren, aber jedes Mal, wenn Sie die nächste Lösung generieren, testen Sie, ob sie alle Bedingungen erfüllt, und fahren erst dann mit der Generierung weiterer Lösungen fort. Andernfalls gehen Sie zurück und nehmen einen anderen Weg, um eine Lösung zu finden. Normalerweise wird das DFS-Traversal des Zustandsraums verwendet.\n  * `B` [Jump Game (Jump Game)](src/algorithms/uncategorized/jump-game)\n  * `B` [Eindeutige Pfade (Unique Paths)](src/algorithms/uncategorized/unique-paths)\n  * `A` [Potenzmenge (Power Set)](src/algorithms/sets/power-set) - Alle Teilmengen einer Menge\n  * `A` [Hamiltonkreisproblem (Hamiltonian Cycle)](src/algorithms/graph/hamiltonian-cycle) - Jeden Eckpunkt genau einmal durchlaufen.\n  * `A` [Damenproblem (N-Queens Problem)](src/algorithms/uncategorized/n-queens)\n  * `A` [Springerproblem (Knight's Tour)](src/algorithms/uncategorized/knight-tour)\n  * `A` [Kombinationssumme (Combination Sum)](src/algorithms/sets/combination-sum) - Alle Kombinationen finden, die eine bestimmte Summe bilden\n* **Verzweigung & Bindung** - Merkt sich die Lösung mit den niedrigsten Kosten, die in jeder Phase der Backtracking-Suche gefunden wurde, und verwendet die Kosten der bisher gefundenen Lösung mit den niedrigsten Kosten als untere Schranke für die Kosten einer Lösung des Problems mit den geringsten Kosten, um Teillösungen zu verwerfen, deren Kosten größer sind als die der bisher gefundenen Lösung mit den niedrigsten Kosten. Normalerweise wird das BFS-Traversal in Kombination mit dem DFS-Traversal des Zustandsraumbaums verwendet.\n\n## So verwendest du dieses Repository\n\n**Alle Abhängigkeiten installieren**\n\n```\nnpm install\n```\n\n**ESLint ausführen**\n\nYou may want to run it to check code quality.\n\n```\nnpm run lint\n```\n\n**Alle Tests ausführen**\n\n```\nnpm test\n```\n\n**Tests nach Namen ausführen**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**Fehlerbehebung**\n\nFalls das Linting oder Testen fehlschlägt, versuche, den Ordner \"node_modules\" zu löschen und die npm-Pakete neu zu installieren:\n\n```\nrm -rf ./node_modules\nnpm i\n```\n\n**Spielwiese**\n\nDu kannst mit Datenstrukturen und Algorithmen in der Datei `./src/playground/playground.js` herumspielen und\ndir in dieser Datei Tests schreiben `./src/playground/__test__/playground.test.js`.\n\nDann führe einfach folgenden Befehl aus, um zu testen, ob dein Spielwiesencode wie erwartet funktioniert:\n\n```\nnpm test -- 'playground'\n```\n\n## Nützliche Informationen\n\n### Referenzen\n\n[▶ Datenstrukturen und Algorithmen auf YouTube(Englisch)](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### O-Notation (_Big O Notation_)\n\nDie O-Notation wird verwendet, um Algorithmen danach zu klassifizieren, wie ihre Laufzeit oder ihr Platzbedarf mit zunehmender Eingabegröße wächst. In der folgenden Tabelle finden Sie die häufigsten Wachstumsordnungen von Algorithmen, die in Big-O-Notation angegeben sind.\n\n![O-Notation Graphen](./assets/big-o-graph.png)\n\nQuelle: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nNachfolgend finden Sie eine Liste einiger der am häufigsten verwendeten Big O-Notationen und deren Leistungsvergleiche für unterschiedliche Größen der Eingabedaten.\n\n| Big O Notation | Berechnungen für 10 Elemente | Berechnungen für 100 Elemente | Berechnungen für 1000 Elemente |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------ |\n| **O(1)**       | 1                            | 1                             | 1                              |\n| **O(log N)**   | 3                            | 6                             | 9                              |\n| **O(N)**       | 10                           | 100                           | 1000                           |\n| **O(N log N)** | 30                           | 600                           | 9000                           |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                        |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                      |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                     |\n\n### Komplexität von Datenstrukturoperationen\n\n| Datenstruktur          | Zugriff auf | Suche  | Einfügen | Löschung | Kommentare                                                      |\n| ---------------------- | :---------: | :----: | :------: | :------: | :-------------------------------------------------------------- |\n| **Array**              |      1      |   n    |    n     |    n     |                                                                 |\n| **Stack**              |      n      |   n    |    1     |    1     |                                                                 |\n| **Queue**              |      n      |   n    |    1     |    1     |                                                                 |\n| **Linked List**        |      n      |   n    |    1     |    n     |                                                                 |\n| **Hash Table**         |      -      |   n    |    n     |    n     | Im Falle einer perfekten Hash-Funktion wären die Kosten O(1)    |\n| **Binary Search Tree** |      n      |   n    |    n     |    n     | Im Falle eines ausgeglichenen Baumes wären die Kosten O(log(n)) |\n| **B-Tree**             |   log(n)    | log(n) |  log(n)  |  log(n)  |                                                                 |\n| **Red-Black Tree**     |   log(n)    | log(n) |  log(n)  |  log(n)  |                                                                 |\n| **AVL Tree**           |   log(n)    | log(n) |  log(n)  |  log(n)  |                                                                 |\n| **Bloom Filter**       |      -      |   1    |    1     |    -     | Falschpostive sind bei der Suche möglichen                      |\n\n### Komplexität von Array-Sortieralgorithmen\n\n| Name               |    Bester     |      Durchschnitt       |        Schlechtester        | Speicher | Stabil | Kommentar                                                                  |\n| ------------------ | :-----------: | :---------------------: | :-------------------------: | :------: | :----: | :------------------------------------------------------------------------- |\n| **Bubble sort**    |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |    1     |   JA   |                                                                            |\n| **Insertion sort** |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |    1     |   Ja   |                                                                            |\n| **Selection sort** | n<sup>2</sup> |      n<sup>2</sup>      |        n<sup>2</sup>        |    1     |  Nein  |                                                                            |\n| **Heap sort**      | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |    1     |  Nein  |                                                                            |\n| **Merge sort**     | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |    n     |   Ja   |                                                                            |\n| **Quick sort**     | n&nbsp;log(n) |      n&nbsp;log(n)      |        n<sup>2</sup>        |  log(n)  |  Nein  | Quicksort wird normalerweise in-place mit O(log(n)) Stapelplatz ausgeführt |\n| **Shell sort**     | n&nbsp;log(n) | abhängig von Spaltfolge | n&nbsp;(log(n))<sup>2</sup> |    1     |  Nein  |                                                                            |\n| **Counting sort**  |     n + r     |          n + r          |            n + r            |  n + r   |   Ja   | r - größte Zahl im Array                                                   |\n| **Radix sort**     |    n \\* k     |         n \\* k          |           n \\* k            |  n + k   |   Ja   | k - Länge des längsten Schlüssels                                          |\n\n## Projekt-Unterstützer\n\n> Du kannst dieses Projekt unterstützen über ❤️️ [GitHub](https://github.com/sponsors/trekhleb) or ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n[Leute, die dieses Projekt unterstützen](https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md) `∑ = 0`\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n\n"
        },
        {
          "name": "README.es-ES.md",
          "type": "blob",
          "size": 22.740234375,
          "content": "# Algoritmos y Estructuras de Datos en JavaScript\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nEste repositorio contiene ejemplos basados en JavaScript de muchos\nalgoritmos y estructuras de datos populares.\n\nCada algoritmo y estructura de datos tiene su propio LÉAME con explicaciones relacionadas y\nenlaces para lecturas adicionales (incluyendo algunas a vídeos de YouTube).\n\n_Léelo en otros idiomas:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n*☝ Nótese que este proyecto está pensado con fines de aprendizaje e investigación,\ny **no** para ser usado en producción.*\n\n## Estructuras de Datos\n\nUna estructura de datos es una forma particular de organizar y almacenar datos en un ordenador para que puedan accederse\ny modificarse de forma eficiente. Más concretamente, una estructura de datos es un conjunto de valores\nde datos, las relaciones entre ellos y las funciones u operaciones que se pueden aplicar a\nlos datos.\n\n`P` - Principiante, `A` - Avanzado\n\n* `P` [Lista enlazada](src/data-structures/linked-list)\n* `P` [Lista doblemente enlazada](src/data-structures/doubly-linked-list)\n* `P` [Cola](src/data-structures/queue)\n* `P` [Pila](src/data-structures/stack)\n* `P` [Tabla hash](src/data-structures/hash-table)\n* `P` [Heap](src/data-structures/heap) - versiones máx y mín\n* `P` [Cola de prioridad](src/data-structures/priority-queue)\n* `A` [Trie](src/data-structures/trie)\n* `A` [Árbol](src/data-structures/tree)\n  * `A` [Árbol de búsqueda binaria](src/data-structures/tree/binary-search-tree)\n  * `A` [Árbol AVL](src/data-structures/tree/avl-tree)\n  * `A` [Árbol Rojo-Negro](src/data-structures/tree/red-black-tree)\n  * `A` [Árbol de segmentos](src/data-structures/tree/segment-tree) - con ejemplos de consultas de rango mín/máx/suma\n  * `A` [Árbol de Fenwick](src/data-structures/tree/fenwick-tree) (Árbol binario indexado)\n* `A` [Grafo](src/data-structures/graph) (dirigido y no dirigido)\n* `A` [Conjuntos disjuntos](src/data-structures/disjoint-set)\n* `A` [Filtro de Bloom](src/data-structures/bloom-filter)\n\n## Algoritmos\n\nUn algoritmo es una especificación inequívoca de cómo resolver una clase de problemas. Es un conjunto de reglas que\ndefinen con precisión una secuencia de operaciones.\n\n`P` - Principiante, `A` - Avanzado\n\n### Algoritmos por Tema\n\n* **Matemáticas**\n  * `P` [Manipulación de bits](src/algorithms/math/bits) - asignar/obtener/actualizar/limpiar bits, multiplicación/división por dos, hacer negativo, etc.\n  * `P` [Factorial](src/algorithms/math/factorial)\n  * `P` [Sucesión de Fibonacci](src/algorithms/math/fibonacci)\n  * `P` [Prueba de primalidad](src/algorithms/math/primality-test) (método de división de prueba)\n  * `P` [Algoritmo de Euclides](src/algorithms/math/euclidean-algorithm) - calcular el Máximo común divisor (MCD)\n  * `P` [Mínimo común múltiplo](src/algorithms/math/least-common-multiple) (MCM)\n  * `P` [Criba de Eratóstenes](src/algorithms/math/sieve-of-eratosthenes) - encontrar todos los números primos hasta un límite dado\n  * `P` [Es una potencia de dos?](src/algorithms/math/is-power-of-two) - comprobar si el número es una potencia de dos (algoritmos ingenuos y de bits)\n  * `P` [Triángulo de Pascal](src/algorithms/math/pascal-triangle)\n  * `P` [Números complejos](src/algorithms/math/complex-number) - números complejos y operaciones con ellos\n  * `P` [Radianes & Grados](src/algorithms/math/radian) - conversión de radianes a grados y viceversa\n  * `P` [Exponenciación rápida](src/algorithms/math/fast-powering)\n  * `A` [Partición entera](src/algorithms/math/integer-partition)\n  * `A` [Algoritmo π de Liu Hui](src/algorithms/math/liu-hui) - aproximar el cálculo de  π basado en polígonos de N lados\n  * `A` [Transformada discreta de Fourier](src/algorithms/math/fourier-transform) - descomponer una función de tiempo (señal) en las frecuencias que la componen\n* **Conjuntos**\n  * `P` [Producto cartesiano](src/algorithms/sets/cartesian-product) - producto de múltiples conjuntos\n  * `P` [Permutación de Fisher–Yates](src/algorithms/sets/fisher-yates) - permutación aleatoria de una secuencia finita\n  * `A` [Conjunto potencia](src/algorithms/sets/power-set) - todos los subconjuntos de un conjunto\n  * `A` [Permutaciones](src/algorithms/sets/permutations) (con y sin repeticiones)\n  * `A` [Combinaciones](src/algorithms/sets/combinations) (con y sin repeticiones)\n  * `A` [Subsecuencia común más larga](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Subsecuencia creciente más larga](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Supersecuencia común más corta](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Problema de la mochila](src/algorithms/sets/knapsack-problem) - \"0/1\" y \"sin límite\"\n  * `A` [Máximo subarreglo](src/algorithms/sets/maximum-subarray) - versiones de \"fuerza bruta\" y \"programación dinámica\" (de Kadane)\n  * `A` [Suma combinada](src/algorithms/sets/combination-sum) - encuentra todas las combinaciones que forman una suma específica\n* **Cadenas de caracteres**\n  * `P` [Distancia de Hamming](src/algorithms/string/hamming-distance) - número de posiciones en las que los símbolos son diferentes\n  * `A` [Distancia de Levenshtein](src/algorithms/string/levenshtein-distance) - distancia mínima de edición entre dos secuencias\n  * `A` [Algoritmo Knuth-Morris-Pratt](src/algorithms/string/knuth-morris-pratt) (Algoritmo KMP) - búsqueda de subcadenas (coincidencia de patrones)\n  * `A` [Algoritmo Z](src/algorithms/string/z-algorithm) - búsqueda de subcadenas (coincidencia de patrones)\n  * `A` [Algoritmo de Rabin Karp](src/algorithms/string/rabin-karp) - búsqueda de subcadenas\n  * `A` [Subcadena común más larga](src/algorithms/string/longest-common-substring)\n  * `A` [Coincidencia por expresiones regulares](src/algorithms/string/regular-expression-matching)\n* **Búsquedas**\n  * `P` [Búsqueda lineal](src/algorithms/search/linear-search)\n  * `P` [Búsqueda de salto](src/algorithms/search/jump-search) (o Búsqueda de bloque) - búsqueda en una lista ordenada\n  * `P` [Búsqueda binaria](src/algorithms/search/binary-search) - búsqueda en una lista ordenada\n  * `P` [Búsqueda por interpolación](src/algorithms/search/interpolation-search) - búsqueda en una lista ordenada uniformemente distribuida\n* **Ordenamiento**\n  * `P` [Ordenamiento de burbuja](src/algorithms/sorting/bubble-sort)\n  * `P` [Ordenamiento por selección](src/algorithms/sorting/selection-sort)\n  * `P` [Ordenamiento por inserción](src/algorithms/sorting/insertion-sort)\n  * `P` [Ordenamiento por Heap](src/algorithms/sorting/heap-sort)\n  * `P` [Ordenamiento por mezcla](src/algorithms/sorting/merge-sort)\n  * `P` [Quicksort](src/algorithms/sorting/quick-sort) - implementaciones in situ y no in situ\n  * `P` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `P` [Ordenamiento por cuentas](src/algorithms/sorting/counting-sort)\n  * `P` [Ordenamiento Radix](src/algorithms/sorting/radix-sort)\n* **Listas enlazadas**\n  * `P` [Recorrido directo](src/algorithms/linked-list/traversal)\n  * `P` [Recorrido inverso](src/algorithms/linked-list/reverse-traversal)\n* **Árboles**\n  * `P` [Búsqueda en profundidad](src/algorithms/tree/depth-first-search) (DFS)\n  * `P` [Búsqueda en anchura](src/algorithms/tree/breadth-first-search) (BFS)\n* **Grafos**\n  * `P` [Búsqueda en profundidad](src/algorithms/graph/depth-first-search) (DFS)\n  * `P` [Búsqueda en anchura](src/algorithms/graph/breadth-first-search) (BFS)\n  * `P` [Algoritmo de Kruskal](src/algorithms/graph/kruskal) - encontrar el árbol de cubrimiento mínimo (MST) para un grafo no dirigido ponderado\n  * `A` [Algoritmo de Dijkstra](src/algorithms/graph/dijkstra) - encontrar los caminos más cortos a todos los vértices del grafo desde un solo vértice\n  * `A` [Algoritmo de Bellman-Ford](src/algorithms/graph/bellman-ford) - encontrar los caminos más cortos a todos los vértices del grafo desde un solo vértice\n  * `A` [Algoritmo de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - encontrar los caminos más cortos entre todos los pares de vértices\n  * `A` [Detectar ciclos](src/algorithms/graph/detect-cycle) - para grafos dirigidos y no dirigidos (versiones basadas en DFS y conjuntos disjuntos)\n  * `A` [Algoritmo de Prim](src/algorithms/graph/prim) - encontrar el árbol de cubrimiento mínimo (MST) para un grafo no dirigido ponderado\n  * `A` [Ordenamiento topológico](src/algorithms/graph/topological-sorting) - método DFS\n  * `A` [Puntos de articulación](src/algorithms/graph/articulation-points) - algoritmo de Tarjan (basado en DFS)\n  * `A` [Puentes](src/algorithms/graph/bridges) - algoritmo basado en DFS\n  * `A` [Camino euleriano y circuito euleriano](src/algorithms/graph/eulerian-path) - algoritmo de Fleury - visitar cada arista exactamente una vez\n  * `A` [Ciclo hamiltoniano](src/algorithms/graph/hamiltonian-cycle) - visitar cada vértice exactamente una vez\n  * `A` [Componentes fuertemente conexos](src/algorithms/graph/strongly-connected-components) - algoritmo de Kosaraju\n  * `A` [Problema del viajante](src/algorithms/graph/travelling-salesman) - la ruta más corta posible que visita cada ciudad y vuelve a la ciudad de origen\n* **Criptografía**\n  * `P` [Hash polinomial](src/algorithms/cryptography/polynomial-hash) - función de hash rodante basada en polinomio\n* **Sin categoría**\n  * `P` [Torre de Hanói](src/algorithms/uncategorized/hanoi-tower)\n  * `P` [Rotación de matriz cuadrada](src/algorithms/uncategorized/square-matrix-rotation) - algoritmo in situ\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game) - ejemplos de backtracking, programación dinámica (de arriba hacia abajo + de abajo hacia arriba) y voraces\n  * `P` [Caminos únicos](src/algorithms/uncategorized/unique-paths) - ejemplos de backtracking, programación dinámica y basados en el Triángulo de Pascal\n  * `P` [Terrazas pluviales](src/algorithms/uncategorized/rain-terraces) - el problema de la retención del agua de lluvia (programación dinámica y fuerza bruta)\n  * `A` [Problema de las N Reinas](src/algorithms/uncategorized/n-queens)\n  * `A` [Problema del caballo (Knight tour)](src/algorithms/uncategorized/knight-tour)\n\n### Algoritmos por paradigma\n\nUn paradigma algorítmico es un método o enfoque genérico que subyace al diseño de una clase de algoritmos.\nEs una abstracción superior a la noción de algoritmo, del mismo modo que un algoritmo es una abstracción superior a un programa de ordenador.\n\n* **Fuerza Bruta** - mira todas las posibilidades y selecciona la mejor solución\n  * `P` [Búsqueda lineal](src/algorithms/search/linear-search)\n  * `P` [Terrazas pluviales](src/algorithms/uncategorized/rain-terraces) - el problema de la retención del agua de lluvia\n  * `A` [Máximo subarreglo](src/algorithms/sets/maximum-subarray)\n  * `A` [Problema del viajante](src/algorithms/graph/travelling-salesman) - la ruta más corta posible que visita cada ciudad y vuelve a la ciudad de origen\n  * `A` [Transformada discreta de Fourier](src/algorithms/math/fourier-transform) - descomponer una función de tiempo (señal) en las frecuencias que la componen\n* **Voraces** - escoge la mejor opción en el momento actual, sin ninguna consideración sobre el futuro\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `A` [Problema de la mochila sin límite](src/algorithms/sets/knapsack-problem)\n  * `A` [Algoritmo de Dijkstra](src/algorithms/graph/dijkstra) - encontrar los caminos más cortos a todos los vértices del grafo desde un solo vértice\n  * `A` [Algoritmo de Prim](src/algorithms/graph/prim) - encontrar el árbol de cubrimiento mínimo (MST) para un grafo no dirigido ponderado\n  * `A` [Algoritmo de Kruskal](src/algorithms/graph/kruskal) - encontrar el árbol de cubrimiento mínimo (MST) para un grafo no dirigido ponderado\n* **Divide y Vencerás** - divide el problema en partes más pequeñas y luego resuelve esas partes\n  * `P` [Búsqueda binaria](src/algorithms/search/binary-search)\n  * `P` [Torre de Hanói](src/algorithms/uncategorized/hanoi-tower)\n  * `P` [Triángulo de Pascal](src/algorithms/math/pascal-triangle)\n  * `P` [Algoritmo de Euclides](src/algorithms/math/euclidean-algorithm) - calcular el Máximo Común Divisor (MCD)\n  * `P` [Ordenamiento por mezcla](src/algorithms/sorting/merge-sort)\n  * `P` [Quicksort](src/algorithms/sorting/quick-sort)\n  * `P` [Búsqueda en profundidad (árboles)](src/algorithms/tree/depth-first-search) - (DFS)\n  * `P` [Búsqueda en profundidad (grafos)](src/algorithms/graph/depth-first-search) - (DFS)\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `P` [Exponenciación rápida](src/algorithms/math/fast-powering)\n  * `A` [Permutaciones](src/algorithms/sets/permutations) - (con y sin repeticiones)\n  * `A` [Combinaciones](src/algorithms/sets/combinations) - (con y sin repeticiones)\n* **Programación Dinámica** - construye una solución usando sub-soluciones previamente encontradas\n  * `P` [Número de Fibonacci](src/algorithms/math/fibonacci)\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `P` [Caminos únicos](src/algorithms/uncategorized/unique-paths)\n  * `P` [Terrazas pluviales](src/algorithms/uncategorized/rain-terraces) - el problema de la retención del agua de lluvia\n  * `A` [Distancia de Levenshtein](src/algorithms/string/levenshtein-distance) - distancia mínima de edición entre dos secuencias\n  * `A` [Subsecuencia común más larga](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Subcadena común más larga](src/algorithms/string/longest-common-substring)\n  * `A` [Subsecuencia creciente más larga](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Supersecuencia común más corta](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Problema de la mochila 0/1](src/algorithms/sets/knapsack-problem)\n  * `A` [Partición entera](src/algorithms/math/integer-partition)\n  * `A` [Máximo subarreglo](src/algorithms/sets/maximum-subarray)\n  * `A` [Algoritmo de Bellman-Ford](src/algorithms/graph/bellman-ford) - encontrar los caminos más cortos a todos los vértices del grafo desde un solo vértice\n  * `A` [Algoritmo de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - encontrar los caminos más cortos entre todos los pares de vértices\n  * `A` [Coincidencia por expresiones regulares](src/algorithms/string/regular-expression-matching)\n* **De Retorceso (Backtracking)** - De manera similar a la fuerza bruta, trata de generar todas las soluciones posibles, pero cada vez que genere la siguiente solución, comprueba si cumple con todas las condiciones, y sólo entonces continúa generando soluciones posteriores. De lo contrario, retrocede y sigue un camino diferente para encontrar una solución. Normalmente se utiliza un recorrido en profundidad (DFS) del espacio de estados.\n  * `P` [Juego de los saltos](src/algorithms/uncategorized/jump-game)\n  * `P` [Caminos únicos](src/algorithms/uncategorized/unique-paths)\n  * `P` [Conjunto potencia](src/algorithms/sets/power-set) - todos los subconjuntos de un conjunto\n  * `A` [Ciclo hamiltoniano](src/algorithms/graph/hamiltonian-cycle) - visitar cada vértice exactamente una vez\n  * `A` [Problema de las N Reinas](src/algorithms/uncategorized/n-queens)\n  * `A` [Problema del caballo (Knight tour)](src/algorithms/uncategorized/knight-tour)\n  * `A` [Suma combinada](src/algorithms/sets/combination-sum) - encuentra todas las combinaciones que forman una suma específica\n* **Ramas y Límites** - recuerda la solución de menor costo encontrada en cada etapa de la búsqueda de rastreo, y utilizar el costo de la solución de menor costo encontrada hasta el momento como un límite inferior del costo de una solución de menor costo para el problema, a fin de descartar soluciones parciales con costos mayores que la solución de menor costo encontrada hasta el momento. Normalmente se utiliza un recorrido BFS en combinación con un recorrido DFS del árbol del espacio de estados.\n\n## Cómo usar este repositorio\n\n**Instalar las dependencias**\n\n```\nnpm install\n```\n\n**Correr ESLint**\n\nEs posible que desee ejecutarlo para comprobar la calidad del código.\n\n```\nnpm run lint\n```\n\n**Correr los tests**\n\n```\nnpm test\n```\n\n**Correr tests por nombre**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**Campo de juegos**\n\nPuede jugar con estructuras de datos y algoritmos en el archivo `./src/playground/playground.js` y escribir\npruebas para ello en `./src/playground/__test__/playground.test.js`.\n\nA continuación, simplemente ejecute el siguiente comando para comprobar si el código funciona como se espera:\n\n```\nnpm test -- 'playground'\n```\n\n## Información útil\n\n### Referencias\n\n[▶ Estructuras de datos y algoritmos en YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Notación O Grande\n\nOrden de crecimiento de los algoritmos especificados en la notación O grande.\n\n![Gráficas de Notación O grande ](./assets/big-o-graph.png)\n\nFuente: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nA continuación se muestra la lista de algunas de las notaciones de Big O más utilizadas y sus comparaciones de rendimiento\nfrente a diferentes tamaños de los datos de entrada.\n\n| Notación O grande | Cálculos para 10 elementos | Cálculos para 100 elementos | Cálculos para 1000 elementos |\n| ----------------- | -------------------------- | --------------------------- | ---------------------------- |\n| **O(1)**          | 1                          | 1                           | 1                            |\n| **O(log N)**      | 3                          | 6                           | 9                            |\n| **O(N)**          | 10                         | 100                         | 1000                         |\n| **O(N log N)**    | 30                         | 600                         | 9000                         |\n| **O(N^2)**        | 100                        | 10000                       | 1000000                      |\n| **O(2^N)**        | 1024                       | 1.26e+29                    | 1.07e+301                    |\n| **O(N!)**         | 3628800                    | 9.3e+157                    | 4.02e+2567                   |\n\n### Complejidad de las operaciones de estructuras de datos\n\n| Estructura de Datos            | Accesso | Busqueda | Inserción | Borrado | Comentarios                                                     |\n| ------------------------------ | :-----: | :------: | :-------: | :-----: | :-------------------------------------------------------------- |\n| **Colección**                  |    1    |    n     |     n     |    n    |                                                                 |\n| **Stack**                      |    n    |    n     |     1     |    1    |                                                                 |\n| **Cola**                       |    n    |    n     |     1     |    1    |                                                                 |\n| **Lista enlazada**             |    n    |    n     |     1     |    1    |                                                                 |\n| **Tabla hash**                 |    -    |    n     |     n     |    n    | En caso de función hash perfecta los costos serían O(1)         |\n| **Búsqueda por Árbol binario** |    n    |    n     |     n     |    n    | En el caso de un árbol equilibrado, los costos serían O(log(n)) |\n| **Árbol B**                    | log(n)  |  log(n)  |  log(n)   | log(n)  |                                                                 |\n| **Árbol Rojo-Negro**           | log(n)  |  log(n)  |  log(n)   | log(n)  |                                                                 |\n| **Árbol AVL**                  | log(n)  |  log(n)  |  log(n)   | log(n)  |                                                                 |\n| **Filtro de Bloom**            |    -    |    1     |     1     |    -    | Falsos positivos son posibles durante la búsqueda               |\n\n### Complejidad de algoritmos de ordenamiento de arreglos\n\n| Nombre                           | Mejor         | Promedio                | Pero                        | Memorya | Estable | Comentarios                                                   |\n| -------------------------------- | :-----------: | :---------------------: | :-------------------------: | :-----: | :-----: | :------------------------------------------------------------ |\n| **Ordenamiento de burbuja**      |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |   1     |  Si     |                                                               |\n| **Ordenamiento por inserción**   |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |   1     |  Si     |                                                               |\n| **Ordenamiento por selección**   | n<sup>2</sup> |      n<sup>2</sup>      |        n<sup>2</sup>        |   1     |   No    |                                                               |\n| **Ordenamiento por Heap**        | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |   1     |   No    |                                                               |\n| **Ordenamiento por mezcla**      | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |   n     |  Si     |                                                               |\n| **Quicksort**                    | n&nbsp;log(n) |      n&nbsp;log(n)      |        n<sup>2</sup>        | log(n)  |   No    | Quicksort utiliza O(log(n)) de espacio en el stack         |\n| **Shellsort**                    | n&nbsp;log(n) | depende de la secuencia de huecos | n&nbsp;(log(n))<sup>2</sup> |   1   |   No   |                                                               |\n| **Ordenamiento por cuentas**     |     n + r     |          n + r          |            n + r            | n + r   |  Si     | r - mayor número en el arreglo                                |\n| **Ordenamiento Radix**           |    n \\* k     |         n \\* k          |           n \\* k            | n + k   |  Si     | k - largo de la llave más larga                                     |\n\n> ℹ️ Algunos otros [proyectos](https://trekhleb.dev/projects/) y [artículos](https://trekhleb.dev/blog/) sobre JavaScript y algoritmos en [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.fr-FR.md",
          "type": "blob",
          "size": 22.1435546875,
          "content": "# Algorithmes et Structures de Données en JavaScript\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nCe dépôt contient des exemples d'implémentation en JavaScript de plusieurs\nalgorithmes et structures de données populaires.\n\nChaque algorithme et structure de donnée possède son propre README contenant\nles explications détaillées et liens (incluant aussi des vidéos Youtube) pour\ncomplément d'informations.\n\n_Lisez ceci dans d'autres langues:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n## Data Structures\n\nUne structure de données est une manière spéciale d'organiser et de stocker\ndes données dans un ordinateur de manière à ce que l'on puisse accéder à\ncette information et la modifier de manière efficiente. De manière plus\nspécifique, une structure de données est un ensemble composé d'une collection\nde valeurs, des relations entre ces valeurs ainsi que d'un ensemble de\nfonctions ou d'opérations pouvant être appliquées sur ces données.\n\n`B` - Débutant, `A` - Avancé\n\n- `B` [Liste Chaînée](src/data-structures/linked-list)\n- `B` [Liste Doublement Chaînée](src/data-structures/doubly-linked-list)\n- `B` [Queue](src/data-structures/queue)\n- `B` [Pile](src/data-structures/stack)\n- `B` [Table de Hachage](src/data-structures/hash-table)\n- `B` [Tas](src/data-structures/heap)\n- `B` [Queue de Priorité](src/data-structures/priority-queue)\n- `A` [Trie](src/data-structures/trie)\n- `A` [Arbre](src/data-structures/tree)\n  - `A` [Arbre de recherche Binaire](src/data-structures/tree/binary-search-tree)\n  - `A` [Arbre AVL](src/data-structures/tree/avl-tree)\n  - `A` [Arbre Red-Black](src/data-structures/tree/red-black-tree)\n  - `A` [Arbre de Segments](src/data-structures/tree/segment-tree) - avec exemples de requêtes de type min/max/somme sur intervalles\n  - `A` [Arbre de Fenwick](src/data-structures/tree/fenwick-tree) (Arbre Binaire Indexé)\n- `A` [Graphe](src/data-structures/graph) (orienté et non orienté)\n- `A` [Ensembles Disjoints](src/data-structures/disjoint-set)\n- `A` [Filtre de Bloom](src/data-structures/bloom-filter)\n\n## Algorithmes\n\nUn algorithme est une démarche non ambigüe expliquant comment résoudre une\nclasse de problèmes. C'est un ensemble de règles décrivant de manière précise\nune séquence d'opérations.\n\n`B` - Débutant, `A` - Avancé\n\n### Algorithmes par topic\n\n- **Math**\n  - `B` [Manipulation de Bit](src/algorithms/math/bits/README.fr-FR.md) - définir/obtenir/mettre à jour/effacer les bits, multiplication/division par deux, négativiser etc.\n  - `B` [Factorielle](src/algorithms/math/factorial/README.fr-FR.md)\n  - `B` [Nombre de Fibonacci](src/algorithms/math/fibonacci/README.fr-FR.md)\n  - `B` [Test de Primalité](src/algorithms/math/primality-test) (méthode du test de division)\n  - `B` [Algorithme d'Euclide](src/algorithms/math/euclidean-algorithm/README.fr-FR.md) - calcule le Plus Grand Commun Diviseur (PGCD)\n  - `B` [Plus Petit Commun Multiple](src/algorithms/math/least-common-multiple) (PPCM)\n  - `B` [Crible d'Eratosthène](src/algorithms/math/sieve-of-eratosthenes) - trouve tous les nombres premiers inférieurs à une certaine limite\n  - `B` [Puissance de Deux](src/algorithms/math/is-power-of-two) - teste si un nombre donné est une puissance de deux (algorithmes naif et basé sur les opérations bit-à-bit)\n  - `B` [Triangle de Pascal](src/algorithms/math/pascal-triangle)\n  - `B` [Nombre complexe](src/algorithms/math/complex-number/README.fr-FR.md) - nombres complexes et opérations de bases\n  - `A` [Partition Entière](src/algorithms/math/integer-partition)\n  - `A` [Approximation de π par l'algorithme de Liu Hui](src/algorithms/math/liu-hui) - approximation du calcul de π basé sur les N-gons\n  - `B` [Exponentiation rapide](src/algorithms/math/fast-powering/README.fr-FR.md)\n  - `A` [Transformée de Fourier Discrète](src/algorithms/math/fourier-transform/README.fr-FR.md) - décomposer une fonction du temps (un signal) en fréquences qui la composent\n- **Ensembles**\n  - `B` [Produit Cartésien](src/algorithms/sets/cartesian-product) - produit de plusieurs ensembles\n  - `B` [Mélange de Fisher–Yates](src/algorithms/sets/fisher-yates) - permulation aléatoire d'une séquence finie\n  - `A` [Ensemble des parties d'un ensemble](src/algorithms/sets/power-set) - tous les sous-ensembles d'un ensemble\n  - `A` [Permutations](src/algorithms/sets/permutations) (avec et sans répétitions)\n  - `A` [Combinaisons](src/algorithms/sets/combinations) (avec et sans répétitions)\n  - `A` [Plus Longue Sous-séquence Commune](src/algorithms/sets/longest-common-subsequence)\n  - `A` [Plus Longue Sous-suite strictement croissante](src/algorithms/sets/longest-increasing-subsequence)\n  - `A` [Plus Courte Super-séquence Commune](src/algorithms/sets/shortest-common-supersequence)\n  - `A` [Problème du Sac à Dos](src/algorithms/sets/knapsack-problem) - versions \"0/1\" et \"Sans Contraintes\"\n  - `A` [Sous-partie Maximum](src/algorithms/sets/maximum-subarray) - versions \"Force Brute\" et \"Programmation Dynamique\" (Kadane)\n  - `A` [Somme combinatoire](src/algorithms/sets/combination-sum) - trouve toutes les combinaisons qui forment une somme spécifique\n- **Chaînes de Caractères**\n  - `B` [Distance de Hamming](src/algorithms/string/hamming-distance) - nombre de positions auxquelles les symboles sont différents\n  - `A` [Distance de Levenshtein](src/algorithms/string/levenshtein-distance) - distance minimale d'édition entre deux séquences\n  - `A` [Algorithme de Knuth–Morris–Pratt](src/algorithms/string/knuth-morris-pratt) (Algorithme KMP) - recherche de sous-chaîne (pattern matching)\n  - `A` [Algorithme Z](src/algorithms/string/z-algorithm) - recherche de sous-chaîne (pattern matching)\n  - `A` [Algorithme de Rabin Karp](src/algorithms/string/rabin-karp) - recherche de sous-chaîne\n  - `A` [Plus Longue Sous-chaîne Commune](src/algorithms/string/longest-common-substring)\n  - `A` [Expression Régulière](src/algorithms/string/regular-expression-matching)\n- **Recherche**\n  - `B` [Recherche Linéaire](src/algorithms/search/linear-search)\n  - `B` [Jump Search](src/algorithms/search/jump-search) Recherche par saut (ou par bloc) - recherche dans une liste triée\n  - `B` [Recherche Binaire](src/algorithms/search/binary-search) - recherche dans une liste triée\n  - `B` [Recherche par Interpolation](src/algorithms/search/interpolation-search) - recherche dans une liste triée et uniformément distribuée\n- **Tri**\n  - `B` [Tri Bullet](src/algorithms/sorting/bubble-sort)\n  - `B` [Tri Sélection](src/algorithms/sorting/selection-sort)\n  - `B` [Tri Insertion](src/algorithms/sorting/insertion-sort)\n  - `B` [Tri Par Tas](src/algorithms/sorting/heap-sort)\n  - `B` [Tri Fusion](src/algorithms/sorting/merge-sort)\n  - `B` [Tri Rapide](src/algorithms/sorting/quick-sort) - implémentations _in-place_ et _non in-place_\n  - `B` [Tri Shell](src/algorithms/sorting/shell-sort)\n  - `B` [Tri Comptage](src/algorithms/sorting/counting-sort)\n  - `B` [Tri Radix](src/algorithms/sorting/radix-sort)\n- **Arbres**\n  - `B` [Parcours en Profondeur](src/algorithms/tree/depth-first-search) (DFS)\n  - `B` [Parcours en Largeur](src/algorithms/tree/breadth-first-search) (BFS)\n- **Graphes**\n  - `B` [Parcours en Profondeur](src/algorithms/graph/depth-first-search) (DFS)\n  - `B` [Parcours en Largeur](src/algorithms/graph/breadth-first-search) (BFS)\n  - `B` [Algorithme de Kruskal](src/algorithms/graph/kruskal) - trouver l'arbre couvrant de poids minimal sur un graphe pondéré non dirigé\n  - `A` [Algorithme de Dijkstra](src/algorithms/graph/dijkstra) - trouver tous les plus courts chemins partant d'un noeud vers tous les autres noeuds dans un graphe\n  - `A` [Algorithme de Bellman-Ford](src/algorithms/graph/bellman-ford) - trouver tous les plus courts chemins partant d'un noeud vers tous les autres noeuds dans un graphe\n  - `A` [Algorithme de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - trouver tous les plus courts chemins entre toutes les paires de noeuds dans un graphe\n  - `A` [Détection de Cycle](src/algorithms/graph/detect-cycle) - pour les graphes dirigés et non dirigés (implémentations basées sur l'algorithme de Parcours en Profondeur et sur les Ensembles Disjoints)\n  - `A` [Algorithme de Prim](src/algorithms/graph/prim) - trouver l'arbre couvrant de poids minimal sur un graphe pondéré non dirigé\n  - `A` [Tri Topologique](src/algorithms/graph/topological-sorting) - méthode DFS\n  - `A` [Point d'Articulation](src/algorithms/graph/articulation-points) - algorithme de Tarjan (basé sur l'algorithme de Parcours en Profondeur)\n  - `A` [Bridges](src/algorithms/graph/bridges) - algorithme basé sur le Parcours en Profondeur\n  - `A` [Chemin Eulérien et Circuit Eulérien](src/algorithms/graph/eulerian-path) - algorithme de Fleury - visite chaque arc exactement une fois\n  - `A` [Cycle Hamiltonien](src/algorithms/graph/hamiltonian-cycle) - visite chaque noeud exactement une fois\n  - `A` [Composants Fortements Connexes](src/algorithms/graph/strongly-connected-components) - algorithme de Kosaraju\n  - `A` [Problème du Voyageur de Commerce](src/algorithms/graph/travelling-salesman) - chemin le plus court visitant chaque cité et retournant à la cité d'origine\n- **Non catégorisé**\n  - `B` [Tours de Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  - `B` [Rotation de Matrice Carrée](src/algorithms/uncategorized/square-matrix-rotation) - algorithme _in place_\n  - `B` [Jump Game](src/algorithms/uncategorized/jump-game) - retour sur trace, programmation dynamique (haut-bas + bas-haut) et exemples gourmands\n  - `B` [Chemins Uniques](src/algorithms/uncategorized/unique-paths) - retour sur trace, programmation dynamique (haut-bas + bas-haut) et exemples basés sur le Triangle de Pascal\n  - `A` [Problème des N-Dames](src/algorithms/uncategorized/n-queens)\n  - `A` [Problème du Cavalier](src/algorithms/uncategorized/knight-tour)\n\n### Algorithmes par Paradigme\n\nUn paradigme algorithmique est une méthode générique ou une approche qui\nsous-tend la conception d'une classe d'algorithmes. C'est une abstraction\nau-dessus de la notion d'algorithme, tout comme l'algorithme est une abstraction\nsupérieure à un programme informatique.\n\n- **Force Brute** - cherche parmi toutes les possibilités et retient la meilleure\n  - `B` [Recherche Linéaire](src/algorithms/search/linear-search)\n  - `A` [Sous-partie Maximum](src/algorithms/sets/maximum-subarray)\n  - `A` [Problème du Voyageur de Commerce](src/algorithms/graph/travelling-salesman) - chemin le plus court visitant chaque cité et retournant à la cité d'origine\n- **Gourmand** - choisit la meilleure option à l'instant courant, sans tenir compte de la situation future\n  - `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  - `A` [Problème du Sac à Dos Sans Contraintes](src/algorithms/sets/knapsack-problem)\n  - `A` [Algorithme de Dijkstra](src/algorithms/graph/dijkstra) - trouver tous les plus courts chemins partant d'un noeud vers tous les autres noeuds dans un graphe\n  - `A` [Algorithme de Prim](src/algorithms/graph/prim) - trouver l'arbre couvrant de poids minimal sur un graphe pondéré non dirigé\n  - `A` [Algorithme de Kruskal](src/algorithms/graph/kruskal) - trouver l'arbre couvrant de poids minimal sur un graphe pondéré non dirigé\n- **Diviser et Régner** - divise le problème en sous problèmes (plus simples) et résoud ces sous problèmes\n  - `B` [Recherche Binaire](src/algorithms/search/binary-search)\n  - `B` [Tours de Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  - `B` [Triangle de Pascal](src/algorithms/math/pascal-triangle)\n  - `B` [Algorithme d'Euclide](src/algorithms/math/euclidean-algorithm) - calcule le Plus Grand Commun Diviseur (PGCD)\n  - `B` [Tri Fusion](src/algorithms/sorting/merge-sort)\n  - `B` [Tri Rapide](src/algorithms/sorting/quick-sort)\n  - `B` [Arbre de Parcours en Profondeur](src/algorithms/tree/depth-first-search) (DFS)\n  - `B` [Graphe de Parcours en Profondeur](src/algorithms/graph/depth-first-search) (DFS)\n  - `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  - `A` [Permutations](src/algorithms/sets/permutations) (avec et sans répétitions)\n  - `A` [Combinations](src/algorithms/sets/combinations) (avec et sans répétitions)\n- **Programmation Dynamique** - construit une solution en utilisant les solutions précédemment trouvées\n  - `B` [Nombre de Fibonacci](src/algorithms/math/fibonacci)\n  - `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  - `B` [Chemins Uniques](src/algorithms/uncategorized/unique-paths)\n  - `A` [Distance de Levenshtein](src/algorithms/string/levenshtein-distance) - distance minimale d'édition entre deux séquences\n  - `A` [Plus Longue Sous-séquence Commune](src/algorithms/sets/longest-common-subsequence)\n  - `A` [Plus Longue Sous-chaîne Commune](src/algorithms/string/longest-common-substring)\n  - `A` [Plus Longue Sous-suite strictement croissante](src/algorithms/sets/longest-increasing-subsequence)\n  - `A` [Plus Courte Super-séquence Commune](src/algorithms/sets/shortest-common-supersequence)\n  - `A` [Problème de Sac à Dos](src/algorithms/sets/knapsack-problem)\n  - `A` [Partition Entière](src/algorithms/math/integer-partition)\n  - `A` [Sous-partie Maximum](src/algorithms/sets/maximum-subarray)\n  - `A` [Algorithme de Bellman-Ford](src/algorithms/graph/bellman-ford) - trouver tous les plus courts chemins partant d'un noeud vers tous les autres noeuds dans un graphe\n  - `A` [Algorithme de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - trouver tous les plus courts chemins entre toutes les paires de noeuds dans un graphe\n  - `A` [Expression Régulière](src/algorithms/string/regular-expression-matching)\n- **Retour sur trace** - de même que la version \"Force Brute\", essaie de générer toutes les solutions possibles, mais pour chaque solution générée, on teste si elle satisfait toutes les conditions, et seulement ensuite continuer à générer des solutions ultérieures. Sinon, l'on revient en arrière, et l'on essaie un\n  chemin différent pour tester d'autres solutions. Normalement, la traversée en profondeur de l'espace d'états est utilisée.\n  - `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  - `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  - `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once\n  - `A` [Problème des N-Dames](src/algorithms/uncategorized/n-queens)\n  - `A` [Problème du Cavalier](src/algorithms/uncategorized/knight-tour)\n  - `A` [Somme combinatoire](src/algorithms/sets/combination-sum) - trouve toutes les combinaisons qui forment une somme spécifique\n- **Séparation et Evaluation** - pemet de retenir une solution à moindre coût dans un ensemble. Pour chaque étape, l'on garde une trace de la solution la moins coûteuse trouvée jusqu'à présent en tant que borne inférieure du coût. Cela afin d'éliminer les solutions partielles dont les coûts sont plus élevés que celui de la solution actuelle retenue. Normalement, la traversée en largeur en combinaison avec la traversée en profondeur de l'espace d'états de l'arbre est utilisée.\n\n## Comment utiliser ce dépôt\n\n**Installer toutes les dépendances**\n\n```\nnpm install\n```\n\n**Exécuter ESLint**\n\nVous pouvez l'installer pour tester la qualité du code.\n\n```\nnpm run lint\n```\n\n**Exécuter tous les tests**\n\n```\nnpm test\n```\n\n**Exécuter les tests par nom**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**Tests personnalisés**\n\nVous pouvez manipuler les structures de données et algorithmes présents dans ce\ndépôt avec le fichier `./src/playground/playground.js` et écrire vos propres\ntests dans file `./src/playground/__test__/playground.test.js`.\n\nVous pourrez alors simplement exécuter la commande suivante afin de tester si\nvotre code fonctionne comme escompté\n\n```\nnpm test -- 'playground'\n```\n\n## Informations Utiles\n\n### Références\n\n[▶ Structures de Données et Algorithmes sur YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Notation Grand O\n\nComparaison de la performance d'algorithmes en notation Grand O.\n\n![Big O graphs](./assets/big-o-graph.png)\n\nSource: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nVoici la liste de certaines des notations Grand O les plus utilisées et de leurs\ncomparaisons de performance suivant différentes tailles pour les données d'entrée.\n\n| Notation Grand O | Opérations pour 10 éléments | Opérations pour 100 éléments | Opérations pour 1000 éléments |\n| ---------------- | --------------------------- | ---------------------------- | ----------------------------- |\n| **O(1)**         | 1                           | 1                            | 1                             |\n| **O(log N)**     | 3                           | 6                            | 9                             |\n| **O(N)**         | 10                          | 100                          | 1000                          |\n| **O(N log N)**   | 30                          | 600                          | 9000                          |\n| **O(N^2)**       | 100                         | 10000                        | 1000000                       |\n| **O(2^N)**       | 1024                        | 1.26e+29                     | 1.07e+301                     |\n| **O(N!)**        | 3628800                     | 9.3e+157                     | 4.02e+2567                    |\n\n### Complexité des Opérations suivant les Structures de Données\n\n| Structure de donnée            | Accès  | Recherche | Insertion | Suppression | Commentaires                                                               |\n| ------------------------------ | :----: | :-------: | :-------: | :---------: | :------------------------------------------------------------------------- |\n| **Liste**                      |   1    |     n     |     n     |      n      |                                                                            |\n| **Pile**                       |   n    |     n     |     1     |      1      |                                                                            |\n| **Queue**                      |   n    |     n     |     1     |      1      |                                                                            |\n| **Liste Liée**                 |   n    |     n     |     1     |      1      |                                                                            |\n| **Table de Hachage**           |   -    |     n     |     n     |      n      | Dans le cas des fonctions de hachage parfaites, les couts seraient de O(1) |\n| **Arbre de Recherche Binaire** |   n    |     n     |     n     |      n      | Dans le cas des arbre équilibrés, les coûts seraient de O(log(n))          |\n| **Arbre B**                    | log(n) |  log(n)   |  log(n)   |   log(n)    |                                                                            |\n| **Arbre Red-Black**            | log(n) |  log(n)   |  log(n)   |   log(n)    |                                                                            |\n| **Arbre AVL**                  | log(n) |  log(n)   |  log(n)   |   log(n)    |                                                                            |\n| **Filtre de Bloom**            |   -    |     1     |     1     |      -      | Les faux positifs sont possibles lors de la recherche                      |\n\n### Complexité des Algorithmes de Tri de Liste\n\n| Nom               |   Meilleur    |        Moyenne         |            Pire             | Mémoire | Stable | Commentaires                                                                         |\n| ----------------- | :-----------: | :--------------------: | :-------------------------: | :-----: | :----: | :----------------------------------------------------------------------------------- |\n| **Tri Bulle**     |       n       |     n<sup>2</sup>      |        n<sup>2</sup>        |    1    |  Oui   |                                                                                      |\n| **Tri Insertion** |       n       |     n<sup>2</sup>      |        n<sup>2</sup>        |    1    |  Oui   |                                                                                      |\n| **Tri Sélection** | n<sup>2</sup> |     n<sup>2</sup>      |        n<sup>2</sup>        |    1    |  Non   |                                                                                      |\n| **Tri par Tas**   | n&nbsp;log(n) |     n&nbsp;log(n)      |        n&nbsp;log(n)        |    1    |  Non   |                                                                                      |\n| **Merge sort**    | n&nbsp;log(n) |     n&nbsp;log(n)      |        n&nbsp;log(n)        |    n    |  Oui   |                                                                                      |\n| **Tri Rapide**    | n&nbsp;log(n) |     n&nbsp;log(n)      |        n<sup>2</sup>        | log(n)  |  Non   | le Tri Rapide est généralement effectué _in-place_ avec une pile de taille O(log(n)) |\n| **Tri Shell**     | n&nbsp;log(n) | dépend du gap séquence | n&nbsp;(log(n))<sup>2</sup> |    1    |  Non   |                                                                                      |\n| **Tri Comptage**  |     n + r     |         n + r          |            n + r            |  n + r  |  Oui   | r - le plus grand nombre dans la liste                                               |\n| **Tri Radix**     |    n \\* k     |         n \\* k         |           n \\* k            |  n + k  |  Non   | k - longueur du plus long index                                                      |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.id-ID.md",
          "type": "blob",
          "size": 23.970703125,
          "content": "# Algoritme dan Struktur Data Javascript\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nRepositori ini berisi contoh-contoh algoritme dan struktur data yang populer menggunakan JavaScript.\n\nSetiap algoritma dan struktur data memiliki README-nya tersendiri dengan penjelasan yang berkaitan dan tautan untuk bacaan lebih lanjut (termasuk tautan menuju video YouTube).\n\n_Baca ini dalam bahasa yang lain:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n_☝ Perhatikan bahwa proyek ini hanya dimaksudkan untuk tujuan pembelajaran dan riset, dan **tidak** dimaksudkan untuk digunakan sebagai produksi._\n\n## Struktur Data\n\nStruktur data adalah cara tertentu untuk mengatur dan menyimpan data dalam komputer sehingga dapat diakses dan diubah secara efisien. Lebih tepatnya, struktur data adalah kumpulan dari nilai data, relasi di antara data-data, dan fungsi atau operasi yang dapat diterapkan pada data.\n\n`P` - Pemula, `L` - Lanjutan\n\n- `P` [Senarai Berantai](src/data-structures/linked-list)\n- `P` [Senarai Berantai Ganda](src/data-structures/doubly-linked-list)\n- `P` [Antrean](src/data-structures/queue)\n- `P` [Tumpukan](src/data-structures/stack)\n- `P` [Tabel Hash](src/data-structures/hash-table)\n- `P` [_Heap_](src/data-structures/heap) - versi _heap_ maksimum dan minimum\n- `P` [Antrean Prioritas](src/data-structures/priority-queue)\n- `L` [_Trie_](src/data-structures/trie)\n- `L` [Pohon](src/data-structures/tree)\n  - `L` [Pohon Telusur Biner](src/data-structures/tree/binary-search-tree)\n  - `L` [_AVL Tree_](src/data-structures/tree/avl-tree)\n  - `L` [Pohon Merah Hitam](src/data-structures/tree/red-black-tree)\n  - `L` [_Segment Tree_](src/data-structures/tree/segment-tree) - dengan contoh min/max/sum range query\n  - `L` [Pohon Fenwick](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)\n- `L` [Graf](src/data-structures/graph) (directed dan undirected)\n- `L` [_Disjoint Set_](src/data-structures/disjoint-set)\n- `L` [_Bloom Filter_](src/data-structures/bloom-filter)\n\n## Algoritma\n\nAlgoritma adalah sebuah perincian yang jelas tentang cara untuk memecahkan suatu masalah. Ia adalah sekumpulan aturan yang menjelaskan secara tepat urutan-urutan dari sebuah operasi.\n\n`P` - Pemula, `L` - Lanjutan\n\n### Algoritma Berdasarkanan Topik\n\n- **Matematika**\n  - `P` [Manipulasi Bit](src/algorithms/math/bits) - menetapkan/mendapatkan/memperbarui/menghapus bit, perkalian/pembagian dengan angka 2, membuat bilangan negatif dan lain-lain.\n  - `P` [Faktorial](src/algorithms/math/Faktorial)\n  - `P` [Bilangan Fibonacci](src/algorithms/math/fibonacci) - versi klasik dan bentuk tertutup\n  - `P` [Faktor Prima](src/algorithms/math/prime-factors) - menemukan faktor prima dan menghitungnya menggunakan teorema Hardy-Ramanujan\n  - `P` [Pengujian Bilangan Prima](src/algorithms/math/primality-test) (metode _trial division_)\n  - `P` [Algoritma Euclidean](src/algorithms/math/euclidean-algorithm) - menghitung Faktor Persekutuan Terbesar (FPB)\n  - `P` [_Least Common Multiple_](src/algorithms/math/least-common-multiple) (LCM)\n  - `P` [_Sieve of Eratosthenes_](src/algorithms/math/sieve-of-eratosthenes) - menemukan semua bilangan prima hingga batas yang ditentukan\n  - `P` [_Is Power of Two_](src/algorithms/math/is-power-of-two) - mengecek apakah sebuah bilangan adalah hasil dari pangkat dua (algoritma _naive_ dan _bitwise_)\n  - `P` [Segitiga Pascal](src/algorithms/math/pascal-triangle)\n  - `P` [Bilangan Kompleks](src/algorithms/math/complex-number) - bilangan kompleks dengan operasi dasarnya\n  - `P` [Radian & Derajat](src/algorithms/math/radian) - konversi radian ke derajat dan sebaliknya\n  - `P` [_Fast Powering_](src/algorithms/math/fast-powering)\n  - `P` [Metode Horner](src/algorithms/math/horner-method) - evaluasi polinomial\n  - `L` [Partisi Bilangan Bulat](src/algorithms/math/integer-partition)\n  - `L` [Akar Pangkat Dua](src/algorithms/math/square-root) - metode Newton\n  - `L` [Algoritma π Liu Hui](src/algorithms/math/liu-hui) - perkiraan perhitungan π berdasarkan segibanyak\n  - `L` [Transformasi Diskrit Fourier](src/algorithms/math/fourier-transform) - menguraikan fungsi waktu (sinyal) menjadi frekuensi yang menyusunnya\n- **Himpunan**\n  - `P` [Produk Kartesian](src/algorithms/sets/cartesian-product) - hasil dari beberapa himpunan\n  - `P` [Pengocokan Fisher–Yates](src/algorithms/sets/fisher-yates) - permutasi acak dari sebuah urutan terhingga\n  - `L` [Himpunan Kuasa](src/algorithms/sets/power-set) - semua himpunan bagian dari sebuah himpunan\n  - `L` [Permutasi](src/algorithms/sets/permutations) (dengan dan tanpa pengulangan)\n  - `L` [Kombinasi](src/algorithms/sets/combinations) (dengan dan tanpa pengulangan)\n  - `L` [_Longest Common Subsequence_](src/algorithms/sets/longest-common-subsequence) (LCS)\n  - `L` [_Longest Increasing Subsequence_](src/algorithms/sets/longest-increasing-subsequence)\n  - `L` [_Shortest Common Supersequence_](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  - `L` [Permasalahan Knapsack](src/algorithms/sets/knapsack-problem) - \"0/1\" dan yang tidak \"dibatasi\"\n  - `L` [Upalarik Maksimum](src/algorithms/sets/maximum-subarray) - \"_Brute Force_\" dan \"Pemrograman Dinamis\" versi Kadane\n  - `L` [_Combination Sum_](src/algorithms/sets/combination-sum) - menemukan semua kombinasi yang membentuk jumlah tertentu\n- **String**\n  - `P` [Jarak Hamming](src/algorithms/string/hamming-distance) - jumlah posisi di mana ditemukan simbol-simbol yang berbeda\n  - `L` [Algoritma Jarak Levenshtein](src/algorithms/string/levenshtein-distance) - _edit distance_ minimum antara dua urutan\n  - `L` [Algoritma Knuth–Morris–Pratt](src/algorithms/string/knuth-morris-pratt) (Algoritma KMP) - pencarian substring (pencocokan pola)\n  - `L` [Algoritma Z](src/algorithms/string/z-algorithm) - pencarian substring (pencocokan pola)\n  - `L` [Algoritma Rabin Karp](src/algorithms/string/rabin-karp) - pencarian substring\n  - `L` [_Longest Common Substring_](src/algorithms/string/longest-common-substring)\n  - `L` [Pencocokan Ekspresi Reguler](src/algorithms/string/regular-expression-matching)\n- **Pencarian**\n  - `P` [Pencarian Linier](src/algorithms/search/linear-search)\n  - `P` [Pencarian Lompat](src/algorithms/search/jump-search) (atau Block Search) - pencarian di larik tersortir\n  - `P` [Pencarian Biner](src/algorithms/search/binary-search) - pencarian di larik tersortir\n  - `P` [Pencarian Interpolasi](src/algorithms/search/interpolation-search) - pencarian di larik tersortir yang terdistribusi seragam\n- **Penyortiran**\n  - `P` [Sortir Gelembung](src/algorithms/sorting/bubble-sort)\n  - `P` [Sortir Seleksi](src/algorithms/sorting/selection-sort)\n  - `P` [Sortir Sisipan](src/algorithms/sorting/insertion-sort)\n  - `P` [Sortir _Heap_](src/algorithms/sorting/heap-sort)\n  - `P` [Sortir Gabungan](src/algorithms/sorting/merge-sort)\n  - `P` [Sortir Cepat](src/algorithms/sorting/quick-sort) - implementasi _in-place_ dan _non-in-place_\n  - `P` [Sortir Shell](src/algorithms/sorting/shell-sort)\n  - `P` [Sortir Perhitungan](src/algorithms/sorting/counting-sort)\n  - `P` [Sortir Akar](src/algorithms/sorting/radix-sort)\n- **Senarai Berantai**\n  - `P` [Lintas Lurus](src/algorithms/linked-list/traversal)\n  - `P` [Lintas Terbalik](src/algorithms/linked-list/reverse-traversal)\n- **Pohon**\n  - `P` [Pencarian Kedalaman Pertama](src/algorithms/tree/depth-first-search) (DFS)\n  - `P` [Pencarian Luas Pertama](src/algorithms/tree/breadth-first-search) (BFS)\n- **Graf**\n  - `P` [Pencarian Kedalaman Pertama](src/algorithms/graph/depth-first-search) (DFS)\n  - `P` [Pencarian Luas Pertama](src/algorithms/graph/breadth-first-search) (BFS)\n  - `P` [Algoritma Kruskal](src/algorithms/graph/kruskal) - mencari rentang pohon minimum untuk graf tidak berarah berbobot\n  - `L` [Algoritma Dijkstra](src/algorithms/graph/dijkstra) - menemukan jalur terpendek ke semua sudut graf dari sudut tunggal\n  - `L` [Algoritma Bellman-Ford](src/algorithms/graph/bellman-ford) - menemukan jalur terpendek ke semua sudut graf dari sudut tunggal\n  - `L` [Algoritma Floyd-Warshall](src/algorithms/graph/floyd-warshall) - menemukan jalur terpendek antara semua pasangan sudut\n  - `L` [Mendeteksi Siklus](src/algorithms/graph/detect-cycle) - untuk graf berarah dan tidak berarah (berdasarkan versi DFS dan _Disjoint Set_)\n  - `L` [ALgoritma Prim](src/algorithms/graph/prim) - mencari rentang pohon minimum untuk graf tidak berarah berbobot\n  - `L` [Sortir Topologi](src/algorithms/graph/topological-sorting) - metode DFS\n  - `L` [Poin Artikulasi](src/algorithms/graph/articulation-points) - Algoritma Tarjan (berdasarkan DFS)\n  - `L` [Jembatan](src/algorithms/graph/bridges) - Algoritma berdasarkan DFS\n  - `L` [Jalur dan Sirkuit Eulerian](src/algorithms/graph/eulerian-path) - Algoritma Fleury - Mengunjungi setiap tepinya tepat satu kali\n  - `L` [Siklus Hamiltonian](src/algorithms/graph/hamiltonian-cycle) - mengunjungi setiap sudutnya tepat satu kali\n  - `L` [Komponen yang Terkoneksi dengan Kuat](src/algorithms/graph/strongly-connected-components) - Algoritma Kosaraju\n  - `L` [Permasalahan Penjual Keliling](src/algorithms/graph/travelling-salesman) - kemungkinan rute terpendek untuk mengunjungi setiap kota dan kembali lagi ke kota asal\n- **Kriptografi**\n  - `P` [Polinomial Hash](src/algorithms/cryptography/polynomial-hash) - fungsi rolling hash berdasarkan polinomial\n  - `P` [Sandi Caesar](src/algorithms/cryptography/caesar-cipher) - sandi pengganti sederhana\n- **Pembelajaran Mesin**\n  - `P` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 fungsi JS sederhana yang mengilustrasikan bagaimana mesin-mesin dapat benar-benar belajar (perambatan maju/mundur)\n- **Tidak Dikategorikan**\n  - `P` [Menara Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  - `P` [Perputaran Matriks Persegi](src/algorithms/uncategorized/square-matrix-rotation) - algoritma _in-place_\n  - `P` [Permainan Melompat](src/algorithms/uncategorized/jump-game) - runut-balik, pemrograman dinamis (atas ke bawah + bawah ke atas) and contoh-contoh _greedy_\n  - `P` [_Unique Paths_](src/algorithms/uncategorized/unique-paths) - runut-balik, pemrograman dinamis and contoh-contoh beradsarkan Segitiga Pascal\n  - `P` [_Rain Terraces_](src/algorithms/uncategorized/rain-terraces) - permasalahan _trapping rain water_ (versi pemrograman dinamis and _brute force_)\n  - `P` [Tangga Rekursif](src/algorithms/uncategorized/recursive-staircase) - menghitung jumlah cara untuk mencapai ke atas tangga (4 solusi)\n  - `L` [Permainan N-Queen](src/algorithms/uncategorized/n-queens)\n  - `L` [Permainan Knight's Tour](src/algorithms/uncategorized/knight-tour)\n\n### Algoritma Berdasarkan Paradigma\n\nParadigma algoritmik adalah sebuah metode atau pendekatan umum yang mendasari desain sebuah tingkatan algoritma. Paradigma algoritmik merupakan abstraksi yang lebih tinggi dari gagasan sebuah algoritma, seperti halnya sebuah algoritma merupakan abstraksi yang lebih tinggi dari sebuah program komputer.\n\n- **_Brute Force_** - melihat ke semua kemungkinan dan memilih solusi yang terbaik\n  - `P` [Pencarian Linier](src/algorithms/search/linear-search)\n  - `P` [_Rain Terraces_](src/algorithms/uncategorized/rain-terraces) - permasalahan _trapping rain water_\n  - `P` [Tangga Rekursif](src/algorithms/uncategorized/recursive-staircase) - menghitung jumlah cara untuk mencapai ke atas tangga\n  - `L` [Upalarik Maksimum](src/algorithms/sets/maximum-subarray)\n  - `L` [Permasalahan Penjual Keliling](src/algorithms/graph/travelling-salesman) - kemungkinan rute terpendek untuk mengunjungi setiap kota dan kembali lagi ke kota asal\n  - `L` [Transformasi Diskrit Fourier](src/algorithms/math/fourier-transform) - menguraikan fungsi waktu (sinyal) menjadi frekuensi yang menyusunnya\n- **_Greedy_** - memilih pilihan terbaik pada saat ini tanpa mempertimbangkan masa yang akan datang\n  - `P` [Permainan Melompat](src/algorithms/uncategorized/jump-game)\n  - `L` [Permasalahan Knapsack yang Tidak Dibatasi](src/algorithms/sets/knapsack-problem)\n  - `L` [Algoritma Dijkstra](src/algorithms/graph/dijkstra) - menemukan jalur terpendek ke semua sudut graf dari sudut tunggal\n  - `L` [Algoritma Prim](src/algorithms/graph/prim) - mencari rentang pohon minimum untuk graf tidak berarah berbobot\n  - `L` [Algoritma Kruskal](src/algorithms/graph/kruskal) - mencari rentang pohon minimum untuk graf tidak berarah berbobot\n- **Memecah dan Menaklukkan** - membagi masalah menjadi bagian-bagian yang kecil, lalu memcahkan bagian-bagian tersebut\n  - `P` [Pencarian Biner](src/algorithms/search/binary-search)\n  - `P` [Menara Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  - `P` [Segitiga Pascal](src/algorithms/math/pascal-triangle)\n  - `P` [Algoritma Euclidean](src/algorithms/math/euclidean-algorithm) - menghitung Faktor Persekutuan Terbesar (FPB)\n  - `P` [Sortir Gabungan](src/algorithms/sorting/merge-sort)\n  - `P` [Sortir Cepat](src/algorithms/sorting/quick-sort)\n  - `P` [Pencarian Kedalaman Pertama untuk Pohon](src/algorithms/tree/depth-first-search) (DFS)\n  - `P` [Pencarian Kedalaman Pertama untuk Graf](src/algorithms/graph/depth-first-search) (DFS)\n  - `P` [Permainan Melompat](src/algorithms/uncategorized/jump-game)\n  - `P` [_Fast Powering_](src/algorithms/math/fast-powering)\n  - `L` [Permutasi](src/algorithms/sets/permutations) (dengan dan tanpa pengulangan)\n  - `L` [Kombinasi](src/algorithms/sets/combinations) (dengan dan tanpa pengulangan)\n- **Pemrograman Dinamis** - membangun sebuah solusi menggunakan upasolusi yang ditemukan sebelumnya\n  - `P` [Bilangan Fibonacci](src/algorithms/math/fibonacci)\n  - `P` [Permainan Melompat](src/algorithms/uncategorized/jump-game)\n  - `P` [_Unique Paths_](src/algorithms/uncategorized/unique-paths)\n  - `P` [_Rain Terraces_](src/algorithms/uncategorized/rain-terraces) - permasalahan _trapping rain water_\n  - `P` [Tangga Rekursif](src/algorithms/uncategorized/recursive-staircase) - menghitung jumlah cara untuk mencapai ke atas tangga\n  - `L` [Algoritma Jarak Levenshtein](src/algorithms/string/levenshtein-distance) - _edit distance_ minimum antara dua urutan\n  - `L` [_Longest Common Subsquence_](src/algorithms/sets/longest-common-subsequence) (LCS)\n  - `L` [_Longest Common Substring_](src/algorithms/string/longest-common-substring)\n  - `L` [_Longest Increasing Subsequence_](src/algorithms/sets/longest-increasing-subsequence)\n  - `L` [_Shortest Common Supersequence_](src/algorithms/sets/shortest-common-supersequence)\n  - `L` [Permasalahan Knapsack 0/1](src/algorithms/sets/knapsack-problem)\n  - `L` [Partisi Bilangan Bulat](src/algorithms/math/integer-partition)\n  - `L` [Upalarik Maksimum](src/algorithms/sets/maximum-subarray)\n  - `L` [Algoritma Bellman-Ford](src/algorithms/graph/bellman-ford) - menemukan jalur terpendek ke semua sudut graf dari sudut tunggal\n  - `L` [Algoritma Floyd-Warshall](src/algorithms/graph/floyd-warshall) - menemukan jalur terpendek antara semua pasangan sudut\n  - `L` [Pencocokan Ekspresi Reguler](src/algorithms/string/regular-expression-matching)\n- **Runut-balik** - sama halnya dengan _brute force_, algoritma ini mencoba untuk menghasilkan segala kemungkinan solusi, tetapi setiap kali anda menghasilkan solusi selanjutnya, anda akan menguji apakah solusi tersebut memenuhi semua kondisi dan setelah itu baru akan menghasilkan solusi berikutnya. Apabila tidak, maka akan merunut-balik dan mencari solusi di jalur yang berbeda. Biasanya menggunakan lintas DFS dari ruang keadaan.\n  - `P` [Permainan Melompat](src/algorithms/uncategorized/jump-game)\n  - `P` [_Unique Paths_](src/algorithms/uncategorized/unique-paths)\n  - `P` [Himpunan Kuasa](src/algorithms/sets/power-set) - semua himpunan bagian dari sebuah himpunan\n  - `L` [Siklus Hamiltonian](src/algorithms/graph/hamiltonian-cycle) - mengunjungi setiap sudutnya tepat satu kali\n  - `L` [Permainan N-Queen](src/algorithms/uncategorized/n-queens)\n  - `L` [Permainan Knight's Tour](src/algorithms/uncategorized/knight-tour)\n  - `L` [_Combination Sum_](src/algorithms/sets/combination-sum) - menemukan semua kombinasi yang membentuk jumlah tertentu\n- **_Mencabang dan Membatasi_** - digunakan untuk membuang solusi parsial dengan biaya yang lebih besar dari solusi dengan biaya yang terendah yang ditemukan sejauh ini dengan cara mengingat solusi dengan biaya terendah yang ditemukan pada setiap tahap dari pencarian runut-balik dan menggunakan biaya dari solusi dengan biaya terendah sejauh ini sebagai batas bawah pada biaya dari solusi dengan biaya yang paling sedikit untuk permasalahannya. Biasanya menggunakan lintas BFS yang berkombinasi dengan lintas DFS dari pohon ruang keadaan.\n\n## Cara menggunakan repositori ini\n\n**Meng-_install_ semua dependensi**\n\n```\nnpm install\n```\n\n**Menjalankan ESLint**\n\nAnda dapat menjalankannya untuk memeriksa kualitas kode.\n\n```\nnpm run lint\n```\n\n**Menjalankan semua tes**\n\n```\nnpm test\n```\n\n**Menjalankan tes berdasarkan nama**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**_Playground_**\n\nAnda dapat bermain dengan algoritma dan struktur data di _file_ `./src/playground/playground.js` dan menuliskan tesnya di `./src/playground/__test__/playground.test.js`.\n\nLalu, hanya tinggal menjalankan perintah berikut untuk mengetes apakah kode _playground_ anda bekerja sesuai dengan keinginan:\n\n```\nnpm test -- 'playground'\n```\n\n## Informasi Bermanfaat\n\n### Referensi\n\n[▶ Algoritma dan Struktur Data di YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Notasi _Big O_\n\nNotasi _Big O_ digunakan untuk mengklasifikasikan algoritma berdasarkan durasi atau ruang yang dibutuhkan seiring bertambahnya _input_. Pada grafik dibawah, anda dapat menemukan urutan pertumbuhan yang paling umum dari algoritma yang ditentukan dalam notasi _Big O_.\n\n![Big O graphs](./assets/big-o-graph.png)\n\nSumber: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nDi bawah ini adalah daftar dari beberapa notasi _Big O_ yang sering digunakan dan perbandingan kinerjanya terhadap berbagai ukuran _input data_.\n\n| Notasi _Big O_ | Komputasi untuk 10 elemen | Komputasi untuk 100 elemen | Komputasi untuk 1000 elemen |\n| -------------- | ------------------------- | -------------------------- | --------------------------- |\n| **O(1)**       | 1                         | 1                          | 1                           |\n| **O(log N)**   | 3                         | 6                          | 9                           |\n| **O(N)**       | 10                        | 100                        | 1000                        |\n| **O(N log N)** | 30                        | 600                        | 9000                        |\n| **O(N^2)**     | 100                       | 10000                      | 1000000                     |\n| **O(2^N)**     | 1024                      | 1.26e+29                   | 1.07e+301                   |\n| **O(N!)**      | 3628800                   | 9.3e+157                   | 4.02e+2567                  |\n\n### Kompleksitas Operasi Struktur Data\n\n| Struktur Data                                | Akses  | Pencarian | Penyisipan | Penghapusan | Keterangan                                               |\n| -------------------------------------------- | :----: | :-------: | :--------: | :---------: | :------------------------------------------------------- |\n| **Array (Larik)**                            |   1    |     n     |     n      |      n      |                                                          |\n| **Stack (Tumpukan)**                         |   n    |     n     |     1      |      1      |                                                          |\n| **Queue (Antrean)**                          |   n    |     n     |     1      |      1      |                                                          |\n| **Linked List (Senarai Berantai)**           |   n    |     n     |     1      |      n      |                                                          |\n| **Hash Table**                               |   -    |     n     |     n      |      n      | Apabila fungsi hash sempurna, biayanya akan menjadi O(1) |\n| **Binary Search Tree (Pohon Telusur Biner)** |   n    |     n     |     n      |      n      | Apabila pohon seimbang, biayanya akan menjadi O(log(n))  |\n| **B-Tree**                                   | log(n) |  log(n)   |   log(n)   |   log(n)    |                                                          |\n| **Red-Black Tree (Pohon Merah-Hitam)**       | log(n) |  log(n)   |   log(n)   |   log(n)    |                                                          |\n| **AVL Tree**                                 | log(n) |  log(n)   |   log(n)   |   log(n)    |                                                          |\n| **Bloom Filter**                             |   -    |     1     |     1      |      -      | Positif palsu dimungkinkan saat pencarian                |\n\n### Kompleksitas Algoritma Sortir Larik\n\n| Nama                                   |    Terbaik    |          Rata-rata           |          Terburuk           | Memori | Stabil | Keterangan                                                                        |\n| -------------------------------------- | :-----------: | :--------------------------: | :-------------------------: | :----: | :----: | :-------------------------------------------------------------------------------- |\n| **Bubble sort (Sortir Gelembung)**     |       n       |        n<sup>2</sup>         |        n<sup>2</sup>        |   1    |   Ya   |                                                                                   |\n| **Insertion sort (Sortir Sisipan)**    |       n       |        n<sup>2</sup>         |        n<sup>2</sup>        |   1    |   Ya   |                                                                                   |\n| **Selection sort (Sortir Seleksi)**    | n<sup>2</sup> |        n<sup>2</sup>         |        n<sup>2</sup>        |   1    | Tidak  |                                                                                   |\n| **Heap sort (Sortir _Heap_)**          | n&nbsp;log(n) |        n&nbsp;log(n)         |        n&nbsp;log(n)        |   1    | Tidak  |                                                                                   |\n| **Merge Sort (Sortir Gabungan)**       | n&nbsp;log(n) |        n&nbsp;log(n)         |        n&nbsp;log(n)        |   n    |   Ya   |                                                                                   |\n| **Quick sort (Sortir Cepat)**          | n&nbsp;log(n) |        n&nbsp;log(n)         |        n<sup>2</sup>        | log(n) | Tidak  | Sortir Cepat biasanya dilakukan secara _in-place_ dengan O(log(n)) ruang tumpukan |\n| **Shell sort (Sortir Shell)**          | n&nbsp;log(n) | tergantung pada jarak urutan | n&nbsp;(log(n))<sup>2</sup> |   1    | Tidak  |                                                                                   |\n| **Counting sort (Sortir Perhitungan)** |     n + r     |            n + r             |            n + r            | n + r  |   Ya   | r - angka terbesar dalam larik                                                    |\n| **Radix sort (Sortir Akar)**           |    n \\* k     |            n \\* k            |           n \\* k            | n + k  |   Ya   | k - panjang dari kunci terpanjang                                                 |\n\n## Pendukung Proyek\n\n> Anda dapat mendukung proyek ini via ❤️️ [GitHub](https://github.com/sponsors/trekhleb) atau ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n[Orang-orang yang mendukung proyek ini](https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md) `∑ = 1`\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.it-IT.md",
          "type": "blob",
          "size": 21.4921875,
          "content": "# Algoritmi e Strutture Dati in Javascript\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nQuesta repository contiene esempi in Javascript dei più popolari algoritmi e strutture dati .\n\nOgni algortimo e struttura dati ha il suo README separato e la relative spiegazioni e i link per ulteriori approfondimenti (compresi quelli su YouTube).\n\n_Leggilo in altre lingue:_\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n*☝ Si noti che questo progetto è destinato ad essere utilizzato solo per l'apprendimento e la ricerca e non è destinato ad essere utilizzato per il commercio.*\n\n## Strutture Dati\n\nUna struttura dati è un particolare modo di organizzare e memorizzare i dati in un computer che  permeta di accedervi e modificarli in modo efficiente. Più precisamente, una struttura dati è una raccolta di dati, le relazioni tra di essi e le funzioni o operazioni che possono essere applicate ai dati.\n\n`P` - Principiante, `A` - Avanzato\n\n* `P` [Lista Concatenata](src/data-structures/linked-list)\n* `P` [Doppia Lista Concatenata](src/data-structures/doubly-linked-list)\n* `P` [Coda](src/data-structures/queue)\n* `P` [Pila](src/data-structures/stack)\n* `P` [Hash Table](src/data-structures/hash-table)\n* `P` [Heap](src/data-structures/heap) - versione massimo e minimo heap\n* `P` [Coda di priorità](src/data-structures/priority-queue)\n* `A` [Trie](src/data-structures/trie)\n* `A` [Albero](src/data-structures/tree)\n  * `A` [Albero binario di ricerca](src/data-structures/tree/binary-search-tree)\n  * `A` [Albero AVL](src/data-structures/tree/avl-tree)\n  * `A` [RB Albero](src/data-structures/tree/red-black-tree)\n  * `A` [Albero Segmentato](src/data-structures/tree/segment-tree) - con  min/max/sum esempi di query\n  * `A` [Albero di Fenwick](src/data-structures/tree/fenwick-tree) (Albero binario indicizzato)\n* `A` [Grafo](src/data-structures/graph) (direzionale e unidirezionale)\n* `A` [Set Disgiunto](src/data-structures/disjoint-set)\n* `A` [Filtro Bloom](src/data-structures/bloom-filter)\n\n## Algoritmi\n\nUn algoritmo è una specifica univoca per risolvere una classe di problemi. È\nun insieme di regole che definiscono con precisione una sequenza di operazioni.\n\n`P` - Principiante, `A` - Avanzato\n\n### Algoritmi per Topic\n\n* **Matematica**\n  * `P` [Manipolazione dei Bit](src/algorithms/math/bits) - set/get/update/clear bits, moltiplicazione/divisione per due, gestire numeri negativi etc.\n  * `P` [Fattoriale](src/algorithms/math/factorial)\n  * `P` [Numeri di Fibonacci](src/algorithms/math/fibonacci) - classico e forma chiusa\n  * `P` [Test di Primalità](src/algorithms/math/primality-test) (metodo del divisore)\n  * `P` [Algoritmo di Euclide](src/algorithms/math/euclidean-algorithm) - trova il massimo comune divisore (MCD)\n  * `P` [Minimo Comune Multiplo](src/algorithms/math/least-common-multiple) (MCM)\n  * `P` [Crivello di Eratostene](src/algorithms/math/sieve-of-eratosthenes) - trova i numeri i primi fino al limite indicato\n  * `P` [Potenza di due](src/algorithms/math/is-power-of-two) - controlla se il numero è una potenza di due\n  * `P` [Triangolo di Pascal](src/algorithms/math/pascal-triangle)\n  * `P` [Numeri Complessi](src/algorithms/math/complex-number) - numeri complessi e operazioni\n  * `P` [Radiante & Gradi](src/algorithms/math/radian) - conversione da radiante a gradi e viceversa\n  * `P` [Potenza di un Numero](src/algorithms/math/fast-powering)\n  * `A` [Partizione di un Intero](src/algorithms/math/integer-partition)\n  * `A` [Radice Quadrata](src/algorithms/math/square-root) - Metodo di Newton\n  * `A` [Algoritmo di Liu Hui π](src/algorithms/math/liu-hui) - calcolare π usando un poligono\n  * `A` [Trasformata Discreta di Fourier ](src/algorithms/math/fourier-transform) -decomporre una funzione di tempo (un segnale) nelle frequenze che lo compongono\n* **Set**\n  * `P` [Prodotto Cartesiano](src/algorithms/sets/cartesian-product) - moltiplicazione multipla di set\n  * `P` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - permutazione casuale di un sequenza finita\n  * `A` [Power Set](src/algorithms/sets/power-set) - tutti i sottoinsiemi di un set (soluzioni bitwise e backtracking)\n  * `A` [Permutazioni](src/algorithms/sets/permutations) (con e senza ripetizioni)\n  * `A` [Combinazioni](src/algorithms/sets/combinations) (con e senza ripetizioni)\n  * `A` [Massima Sottosequenza Comune](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Massima Sottosequenza Crescente](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Minima Sottosequenza Diffusa](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Problema dello Zaino di Knapsack](src/algorithms/sets/knapsack-problem) - \"0/1\" e \"Senza Restrizioni\"\n  * `A` [Massimo SubArray](src/algorithms/sets/maximum-subarray) - \"Brute Force\" e \"Programmazione Dinamica\" versione Kadane\n  * `A` [Somma di Combinazioni](src/algorithms/sets/combination-sum) - ricerca di tutte le combinazioni di una somma\n* **String**\n  * `P` [Distanza di Hamming](src/algorithms/string/hamming-distance) - numero di posizioni in cui i caratteri sono diversi\n  * `A` [Distanza di Levenshtein](src/algorithms/string/levenshtein-distance) - numero minimo di modifiche per rendere uguali due stringhe\n  * `A` [Algoritmo di Knuth-Morris-Pratt](src/algorithms/string/knuth-morris-pratt) (KMP) - ricerca nella sottostringa (pattern matching)\n  * `A` [Algoritmo Z](src/algorithms/string/z-algorithm) - ricerca nella sottostringa (pattern matching)\n  * `A` [Algoritmo di Rabin Karp ](src/algorithms/string/rabin-karp) - ricerca nella sottostringa\n  * `A` [Sottostringa Comune più lunga](src/algorithms/string/longest-common-substring)\n  * `A` [Espressioni Regolari](src/algorithms/string/regular-expression-matching)\n* **Searches**\n  * `P` [Ricerca Sequenziale](src/algorithms/search/linear-search)\n  * `P` [Ricerca a Salti](src/algorithms/search/jump-search) (o Ricerca a Blocchi) - per la ricerca in array ordinati\n  * `P` [Ricerca Binari](src/algorithms/search/binary-search) - per la ricerca in array ordinati\n  * `P` [Ricerca Interpolata](src/algorithms/search/interpolation-search) - per la ricerca in un array ordinato uniformemente distibuito\n* **Sorting**\n  * `P` [Bubble Sort](src/algorithms/sorting/bubble-sort)\n  * `P` [Selection Sort](src/algorithms/sorting/selection-sort)\n  * `P` [Insertion Sort](src/algorithms/sorting/insertion-sort)\n  * `P` [Heap Sort](src/algorithms/sorting/heap-sort)\n  * `P` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `P` [Quicksort](src/algorithms/sorting/quick-sort) - con e senza allocazione di ulteriore memoria\n  * `P` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `P` [Counting Sort](src/algorithms/sorting/counting-sort)\n  * `P` [Radix Sort](src/algorithms/sorting/radix-sort)\n* **Lista Concatenatas**\n  * `P` [Attraversamento Lista Concatenata](src/algorithms/linked-list/traversal)\n  * `P` [Attraversamento Lista Concatenata nel senso Contrario](src/algorithms/linked-list/reverse-traversal)\n* **Alberi**\n  * `P` [Ricerca in Profondità su Alberi](src/algorithms/tree/depth-first-search) (DFS)\n  * `P` [Ricerca in Ampiezza su Alberi](src/algorithms/tree/breadth-first-search) (BFS)\n* **Grafi**\n  * `P` [Ricerca in Profondità su Grafi](src/algorithms/graph/depth-first-search) (DFS)\n  * `P` [Breadth-First Search su Grafi](src/algorithms/graph/breadth-first-search) (BFS)\n  * `P` [Algoritmo di Kruskal](src/algorithms/graph/kruskal) - ricerca dell'Albero con Minima Distanza (MST) per grafi pesati unidirezionali\n  * `A` [Algoritmo di Dijkstra](src/algorithms/graph/dijkstra) - ricerca dei percorsi più breve per raggiungere tutti i vertici del grafo da un singolo vertice\n  * `A` [Algoritmo di Bellman-Ford](src/algorithms/graph/bellman-ford) - ricerca dei percorsi più breve per raggiungere tutti i vertici del grafo da un singolo vertice\n  * `A` [Algoritmo di Floyd-Warshall](src/algorithms/graph/floyd-warshall) -  ricerca dei percorsi più brevi tra tutte le coppie di vertici\n  * `A` [Rivelamento dei Cicli](src/algorithms/graph/detect-cycle) - per grafici diretti e non diretti (basate su partizioni DFS e Disjoint Set)\n  * `A` [Algoritmo di Prim](src/algorithms/graph/prim) - ricerca dell'Albero Ricoprente Minimo (MST) per grafi unidirezionali pesati\n  * `A` [Ordinamento Topologico](src/algorithms/graph/topological-sorting) - metodo DFS\n  * `A` [Punti di Articolazione](src/algorithms/graph/articulation-points) - Algoritmo di Tarjan (basato su DFS)\n  * `A` [Bridges](src/algorithms/graph/bridges) - basato su DFS\n  * `A` [Cammino Euleriano e Circuito Euleriano](src/algorithms/graph/eulerian-path) - Algoritmo di Fleury - Visita ogni margine esattamente una volta\n  * `A` [Ciclo di Hamiltonian](src/algorithms/graph/hamiltonian-cycle) - Visita ad ogni vertice solo una volta\n  * `A` [Componenti Fortemente Connessa](src/algorithms/graph/strongly-connected-components) - algoritmo di Kosaraju\n  * `A` [Problema del Commesso Viaggiatore](src/algorithms/graph/travelling-salesman) - il percorso più breve che visita ogni città e ritorna alla città iniziale\n* **Crittografia**\n  * `P` [Hash Polinomiale](src/algorithms/cryptography/polynomial-hash) - Una funzione hash di rolling basata sul polinomio\n* **Senza categoria**\n  * `P` [Torre di Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `P` [Rotazione Matrice Quadrata](src/algorithms/uncategorized/square-matrix-rotation) - algoritmo in memoria\n  * `P` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, programmazione dinamica (top-down + bottom-up) ed esempre di greeedy\n  * `P` [Percorsi Unici](src/algorithms/uncategorized/unique-paths) - backtracking, programmazione dinamica and l'esempio del Triangolo di Pascal\n  * `P` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - problema dell'acqua piovana in trappola(versione con programmazione dinamica e brute force)\n  * `P` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - contare il numero di percorsi per arrivare in vetta(4 soluzioni)\n  * `A` [Rompicapo delle Otto Regine](src/algorithms/uncategorized/n-queens)\n  * `A` [Percorso del Cavallo](src/algorithms/uncategorized/knight-tour)\n\n### Modelli di Algoritmi\n\n Un modello di algoritmo è un generico metodo o approcio che sta alla base della progettazione di una classe di algoritmi.\n Si tratta di un'astrazione ancora più alta di un algoritmo, proprio come un algoritmo è un'astrazione di un programma del computer.\n\n* **Brute Force** - controlla tutte le possibilità e seleziona la migliore\n  * `P` [Ricerca Lineare](src/algorithms/search/linear-search)\n  * `P` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - problema dell'acqua piovana in trappola\n  * `P` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - contare il numero di percorsi per arrivare in vetta\n  * `A` [Massimo SubArray](src/algorithms/sets/maximum-subarray)\n  * `A` [Problema del commesso viaggiatore](src/algorithms/graph/travelling-salesman) - il percorso più breve che visita ogni città e ritorna alla città iniziale\n  * `A` [Trasformata Discreta di Fourier](src/algorithms/math/fourier-transform) - scomporre la funzione (segnale) del tempo in frequenze che la compongono\n* **Greedy** - scegliere l'opzione migliore al momento d'eleborazione dell'algoritmo, senza alcuna considerazione per il futuro\n  * `P` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `A` [Problema dello Zaino di Knapsack](src/algorithms/sets/knapsack-problem)\n  * `A` [Algoritmo di Dijkstra](src/algorithms/graph/dijkstra) - ricerca del percorso più breve tra tutti i vertici del grafo\n  * `A` [Algoritmo di Prim](src/algorithms/graph/prim) - ricerca del Minimo Albero Ricoprente per grafi pesati e unidirezionali\n  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n* **Divide e Conquista** - divide il problema in piccole parti e risolve ogni parte\n  * `P` [Ricerca Binaria](src/algorithms/search/binary-search)\n  * `P` [Torre di Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `P` [Triangolo di Pascal](src/algorithms/math/pascal-triangle)\n  * `P` [Algoritmo di Euclide](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)\n  * `P` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `P` [Quicksort](src/algorithms/sorting/quick-sort)\n  * `P` [Albero per Ricerca in Profondità](src/algorithms/tree/depth-first-search) (DFS)\n  * `P` [Grafo per Ricerca in Profondità](src/algorithms/graph/depth-first-search) (DFS)\n  * `P` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `P` [Algoritmo di Elevamento a Potenza](src/algorithms/math/fast-powering)\n  * `A` [Permutazioni](src/algorithms/sets/permutations) (con o senza ripetizioni)\n  * `A` [Combinazioni](src/algorithms/sets/combinations) (con o senza ripetizioni)\n* **Programmazione Dinamica** - creare una soluzione utilizzando le sub-solution trovate in precedenza\n  * `P` [Numero di Fibonacci](src/algorithms/math/fibonacci)\n  * `P` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `P` [Percorsi Unici](src/algorithms/uncategorized/unique-paths)\n  * `P` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - problema dell'acqua piovana in trappola\n  * `P` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - contare il numero di percorsi per arrivare in vetta\n  * `A` [Distanza di Levenshtein](src/algorithms/string/levenshtein-distance) - minima variazione tra due sequenze\n  * `A` [La Più Lunga Frequente SottoSequenza](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [La Più Lunga Frequente SubString](src/algorithms/string/longest-common-substring)\n  * `A` [La Più Lunga SottoSequenza Crescente](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [La Più Corta e Frequente SuperSequenza](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Problema dello zaino](src/algorithms/sets/knapsack-problem)\n  * `A` [Partizione di un Intero](src/algorithms/math/integer-partition)\n  * `A` [Massimo SubArray](src/algorithms/sets/maximum-subarray)\n  * `A` [Algoritmo di Bellman-Ford](src/algorithms/graph/bellman-ford) - ricerca del percorso più breve per tutti i vertici del grafo\n  * `A` [Algoritmo di Floyd-Warshall](src/algorithms/graph/floyd-warshall) - ricerca del percorso più breve tra tutte le coppie di vertici\n  * `A` [Espressioni Regolari](src/algorithms/string/regular-expression-matching)\n* **Backtracking** -  come la brute force, provate a generare tutte le soluzioni possibili, ma ogni volta che generate la prossima soluzione testate se soddisfa tutte le condizioni e solo allora continuare a generare soluzioni successive. Altrimenti, fate marcia indietro, e andate su un percorso diverso per trovare una soluzione. Normalmente si utilizza l'algoritmo DFS.\n  * `P` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `P` [Percorsi Unici](src/algorithms/uncategorized/unique-paths)\n  * `P` [Power Set](src/algorithms/sets/power-set) - tutti i subset di un set\n  * `A` [Ciclo di Hamiltonian](src/algorithms/graph/hamiltonian-cycle) - visita di tutti i vertici solamente una volta\n  * `A` [Problema di N-Queens](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n  * `A` [Combinazioni di una Somma](src/algorithms/sets/combination-sum) - trovare tutte le combinazioni che compongono una somma\n* **Branch & Bound** - ricordatevi che la soluzione meno costosa trovata ad ogni step durante il backtracking e\nil costo di usare la soluzione meno costosa trovata fino al limite inferiore al costo minimo della soluzione al problema,\nal fine di scartare soluzioni parziali con costi maggiori della soluzione meno costosa trovata .\nDi solito si usa BFS trasversale in combinazione con DFS trasversale .\n\n## Come usare questa repository\n\n**Installare tutte le dipendenze**\n```\nnpm install\n```\n\n**Eseguire ESLint**\n\nPotresti usarlo per controllare la qualità del codice.\n\n```\nnpm run lint\n```\n\n**Eseguire tutti i test**\n```\nnpm test\n```\n\n**Eseguire un test tramite il nome**\n```\nnpm test -- 'LinkedList'\n```\n\n**Playground**\n\nSe vuoi puoi giocare le strutture dati e gli algoritmi nel file ./src/playground/playground.js` e\nscrivere test nel file `./src/playground/__test__/playground.test.js`.\n\nPoi puoi semplicemente eseguire il seguente comando per testare quello che hai scritto :\n\n```\nnpm test -- 'playground'\n```\n\n## Informazioni Utili\n\n### Bibliografia\n\n[▶ Data Structures and Algorithms on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Notazione Big O\n\n* La notazione Big O* è usata per classificare algoritmi in base al tempo di esecuzione o ai\nrequisiti di spazio che crescono in base alla crescita dell'input .\nNella grafico qua sotto puoi trovare gli ordini di crescita più comuni degli algoritmi usando la notazione Big O.\n\n![Grafi Big O ](./assets/big-o-graph.png)\n\nRiferimento: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nNella tabella qua sotto ci sono riportate la lista delle notazioni Big O più usate e delle loro prestazioni comparate tra differenti grandezze d'input .\n\n| Notazione Big O | Computazione con 10 elementi | Computazione con 100 elementi | Computazione con 1000 elementi  |\n| --------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**        | 1                            | 1                             | 1                               |\n| **O(log N)**    | 3                            | 6                             | 9                               |\n| **O(N)**        | 10                           | 100                           | 1000                            |\n| **O(N log N)**  | 30                           | 600                           | 9000                            |\n| **O(N^2)**      | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**      | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**       | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### Complessità delle Operazion sulle Strutture Dati\n\n| Struttura Dati          | Accesso   | Ricerca   | Inserimento | Rimozione | Commenti  |\n| ----------------------- | :-------: | :-------: | :--------:  | :-------: | :-------- |\n| **Array**               | 1         | n         | n           | n         |           |\n| **Pila**                | n         | n         | 1           | 1         |           |\n| **Coda**                | n         | n         | 1           | 1         |           |\n| **Lista Concatenata**   | n         | n         | 1           | n         |           |\n| **Tabella Hash**        | -         | n         | n           | n         | Nel caso di una funzione di hashing perfetta il costo sarebbe O(1)|\n| **Binary Search Tree**  | n         | n         | n           | n         | Nel caso di albero bilanciato il costo sarebbe O(log(n)) |\n| **B-Tree**              | log(n)    | log(n)    | log(n)      | log(n)    |           |\n| **Red-Black Tree**      | log(n)    | log(n)    | log(n)      | log(n)    |           |\n| **Albero AVL**          | log(n)    | log(n)    | log(n)      | log(n)    |           |\n| **Bloom Filter**        | -         | 1         | 1           | -         | Falsi positivi sono possibili durante la ricerca |\n\n### Complessità degli Algoritmi di Ordinamento di Array\n\n| Nome                  | Milgiore        | Media               | Perggiore           | Memoria   | Stabile   | Commenti  |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- |\n| **Bubble sort**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes       |           |\n| **Insertion sort**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes       |           |\n| **Selection sort**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | No        |           |\n| **Heap sort**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | No        |           |\n| **Merge sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Yes       |           |\n| **Quick sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | No        | Quicksort viene eseguito in memoria solitamente con una pila di O(log(n)) |\n| **Shell sort**        | n&nbsp;log(n)   | dipende dagli spazi vuoti nella sequenza  | n&nbsp;(log(n))<sup>2</sup>  | 1         | No         |           |\n| **Counting sort**     | n + r           | n + r               | n + r               | n + r     | Yes       | r - numero più grande nell'array |\n| **Radix sort**        | n * k           | n * k               | n * k               | n + k     | Yes       | k - lunghezza della chiave più grande |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.ja-JP.md",
          "type": "blob",
          "size": 22.76171875,
          "content": "# JavaScriptアルゴリズムとデータ構造\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nこのリポジトリには、JavaScriptベースの一般的なアルゴリズムとデータ構造に関する多数のサンプルが含まれています。\n\n\n各アルゴリズムとデータ構造には独自のREADMEがあります。\n関連する説明、そして参考資料 (YouTube動画)も含まれています。\n\n_Read this in other languages:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n## データ構造\n\nデータ構造は、データ値、データ値との間の関係、\nそして、データを扱うことができる関数と演算の集合で、\nデータを特定の方法で構成して保存することで、より効率的に\nアクセスして変更することができます。\n\n`B` - 初心者, `A` - 上級\n\n* `B` [リンクされたリスト](src/data-structures/linked-list)\n* `B` [二重リンクリスト](src/data-structures/doubly-linked-list)\n* `B` [キュー](src/data-structures/queue)\n* `B` [スタック](src/data-structures/stack)\n* `B` [ハッシュ表](src/data-structures/hash-table)\n* `B` [ヒープ](src/data-structures/heap) - max and min heap versions\n* `B` [優先度キュー](src/data-structures/priority-queue)\n* `A` [トライ](src/data-structures/trie)\n* `A` [ツリー](src/data-structures/tree)\n  * `A` [バイナリ検索ツリー](src/data-structures/tree/binary-search-tree)\n  * `A` [AVLツリー](src/data-structures/tree/avl-tree)\n  * `A` [赤黒のツリー](src/data-structures/tree/red-black-tree)\n  * `A` [セグメントツリー](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples\n  * `A` [フェンウィック・ツリー](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)\n* `A` [グラフ](src/data-structures/graph) (both directed and undirected)\n* `A` [分離集合](src/data-structures/disjoint-set)\n* `A` [ブルームフィルタ](src/data-structures/bloom-filter)\n\n## アルゴリズム\n\nアルゴリズムとは、問題のクラスをどのように解決するかの明確な仕様です。\n一連の操作を正確に定義する一連のルールです。\n\n`B` - 初心者, `A` - 上級\n\n### トピック別アルゴリズム\n\n* **数学**\n  * `B` [ビット操作](src/algorithms/math/bits) - set/get/update/clear bits, 2つの乗算/除算, 否定的にする. 等\n  * `B` [因果関係](src/algorithms/math/factorial)\n  * `B` [フィボナッチ数](src/algorithms/math/fibonacci) - クラシックとクローズドフォームのバージョン\n  * `B` [素数性テスト](src/algorithms/math/primality-test) (trial division 方法)\n  * `B` [ユークリッドアルゴリズム](src/algorithms/math/euclidean-algorithm) - 最大公約数を計算する (GCD)\n  * `B` [最小公倍数](src/algorithms/math/least-common-multiple) (LCM)\n  * `B` [エラトステネスのふるい](src/algorithms/math/sieve-of-eratosthenes) - 与えられた限度まですべての素数を見つける\n  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - 数値が2の累乗であるかどうかを調べる（単純なアルゴリズムとビットごとのアルゴリズム）\n  * `B` [パスカルの三角形](src/algorithms/math/pascal-triangle)\n  * `B` [複素数](src/algorithms/math/complex-number) - 複素数とその基本演算\n  * `B` [ラジアン＆度](src/algorithms/math/radian) - 度数と逆方向の変換に対するラジアン\n  * `B` [高速電力供給](src/algorithms/math/fast-powering)\n  * `A` [整数パーティション](src/algorithms/math/integer-partition)\n  * `A` [Liu Hui π アルゴリズム](src/algorithms/math/liu-hui) - N-gonsに基づく近似π計算\n  * `A` [離散フーリエ変換](src/algorithms/math/fourier-transform) - 時間（信号）の関数をそれを構成する周波数に分解する\n* **セット**\n  * `B` [デカルト積 ](src/algorithms/sets/cartesian-product) - 複数の積の積\n  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - 有限シーケンスのランダム置換\n  * `A` [パワーセット](src/algorithms/sets/power-set) - セットのすべてのサブセット（ビットごとのソリューションとバックトラッキングソリューション）\n  * `A` [順列](src/algorithms/sets/permutations) （繰り返しの有無にかかわらず）\n  * `A` [組み合わせ](src/algorithms/sets/combinations) （繰返しあり、繰返しなし）\n  * `A` [最長共通部分列](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [最長増加サブシーケンス](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [最短共通スーパーシーケンス](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [ナップザック問題 ](src/algorithms/sets/knapsack-problem) - 「0/1」と「非結合」問題\n  * `A` [最大サブアレイ](src/algorithms/sets/maximum-subarray) - 「ブルートフォース」と「ダイナミックプログラミング」（Kadane's版）\n  * `A` [組み合わせ合計](src/algorithms/sets/combination-sum) - 特定の合計を構成するすべての組み合わせを見つける\n* **文字列**\n  * `B` [ハミング距離](src/algorithms/string/hamming-distance) - シンボルが異なる位置の数\n  * `A` [レーベンシュタイン距離](src/algorithms/string/levenshtein-distance) - 2つのシーケンス間の最小編集距離\n  * `A` [Knuth-Morris-Prattアルゴリズム](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - 部分文字列検索 (pattern matching)\n  * `A` [Z アルゴリズム](src/algorithms/string/z-algorithm) - 部分文字列検索 (pattern matching)\n  * `A` [Rabin Karpアルゴリズム](src/algorithms/string/rabin-karp) - 部分文字列検索\n  * `A` [最長共通部分文字列](src/algorithms/string/longest-common-substring)\n  * `A` [正規表現マッチング](src/algorithms/string/regular-expression-matching)\n* **検索**\n  * `B` [リニアサーチ](src/algorithms/search/linear-search)\n  * `B` [ジャンプ検索](src/algorithms/search/jump-search) (Jump Search) - ソートされた配列で検索\n  * `B` [バイナリ検索](src/algorithms/search/binary-search) - ソートされた配列で検索\n  * `B` [補間探索](src/algorithms/search/interpolation-search) - 一様分布のソート配列で検索する\n* **並べ替え**\n  * `B` [バブルソート](src/algorithms/sorting/bubble-sort)\n  * `B` [選択ソート](src/algorithms/sorting/selection-sort)\n  * `B` [挿入ソート](src/algorithms/sorting/insertion-sort)\n  * `B` [ヒープソート](src/algorithms/sorting/heap-sort)\n  * `B` [マージソート](src/algorithms/sorting/merge-sort)\n  * `B` [クイックソート](src/algorithms/sorting/quick-sort) -インプレースおよび非インプレース・インプリメンテーション\n  * `B` [シェルソート](src/algorithms/sorting/shell-sort)\n  * `B` [並べ替えを数える](src/algorithms/sorting/counting-sort)\n  * `B` [基数ソート](src/algorithms/sorting/radix-sort)\n* **リンクされたリスト**\n  * `B` [ストレートトラバーサル](src/algorithms/linked-list/traversal)\n  * `B` [逆方向のトラバーサル](src/algorithms/linked-list/reverse-traversal)\n* **ツリー**\n  * `B` [深度優先検索](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [幅優先検索](src/algorithms/tree/breadth-first-search) (BFS)\n* **グラフ**\n  * `B` [深度優先検索](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [幅優先検索](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Kruskalのアルゴリズム](src/algorithms/graph/kruskal) - 重み付き無向グラフの最小スパニングツリー（MST）の発見\n  * `A` [Dijkstraアルゴリズム](src/algorithms/graph/dijkstra) - 単一の頂点からすべてのグラフ頂点への最短経路を見つける\n  * `A` [Bellman-Fordアルゴリズム](src/algorithms/graph/bellman-ford) - 単一の頂点からすべてのグラフ頂点への最短経路を見つける\n  * `A` [Floyd-Warshallアルゴリズム](src/algorithms/graph/floyd-warshall) - すべての頂点ペア間の最短経路を見つける\n  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - 有向グラフと無向グラフの両方（DFSおよびディスジョイントセットベースのバージョン）\n  * `A` [プリムのアルゴリズム](src/algorithms/graph/prim) - 重み付き無向グラフの最小スパニングツリー（MST）の発見\n  * `A` [トポロジカルソート](src/algorithms/graph/topological-sorting) - DFSメソッド\n  * `A` [アーティキュレーションポイント](src/algorithms/graph/articulation-points) - Tarjanのアルゴリズム（DFSベース）\n  * `A` [ブリッジ ](src/algorithms/graph/bridges) - DFSベースのアルゴリズム\n  * `A` [オイラーパスとオイラー回路](src/algorithms/graph/eulerian-path) - フルリーアルゴリズム - すべてのエッジを正確に1回訪問する\n  * `A` [ハミルトニアンサイクル](src/algorithms/graph/hamiltonian-cycle) - すべての頂点を正確に1回訪問する\n  * `A` [強連結成分](src/algorithms/graph/strongly-connected-components) - コサラジュのアルゴリズム\n  * `A` [トラベリングセールスマン問題](src/algorithms/graph/travelling-salesman) - 各都市を訪問し、起点都市に戻る最短経路\n* **暗号**\n  * `B` [多項式ハッシュ](src/algorithms/cryptography/polynomial-hash) - 関数多項式に基づくハッシュ関数\n* **未分類**\n  * `B` [ハノイの塔](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [正方行列回転](src/algorithms/uncategorized/square-matrix-rotation) - インプレイスアルゴリズム\n  * `B` [ジャンプゲーム](src/algorithms/uncategorized/jump-game) - バックトラック、ダイナミックプログラミング（トップダウン+ボトムアップ）、欲張りの例\n  * `B` [ユニークなパス](src/algorithms/uncategorized/unique-paths) - バックトラック、動的プログラミング、PascalのTriangleベースの例\n  * `B` [レインテラス](src/algorithms/uncategorized/rain-terraces) - トラップ雨水問題（ダイナミックプログラミングとブルートフォースバージョン）\n  * `B` [再帰的階段](src/algorithms/uncategorized/recursive-staircase) - 上に到達する方法の数を数える（4つのソリューション）\n  * `A` [N-クイーンズ問題](src/algorithms/uncategorized/n-queens)\n  * `A` [ナイトツアー](src/algorithms/uncategorized/knight-tour)\n\n### Paradigmによるアルゴリズム\n\nアルゴリズムパラダイムは、あるクラスのアルゴリズムの設計の基礎をなす一般的な方法またはアプローチである。それは、アルゴリズムがコンピュータプログラムよりも高い抽象であるのと同様に、アルゴリズムの概念よりも高い抽象である。\n* **ブルートフォース** - すべての可能性を見て最適なソリューションを選択する\n  * `B` [線形探索](src/algorithms/search/linear-search)\n  * `B` [レインテラス](src/algorithms/uncategorized/rain-terraces) - 雨水問題\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - 先頭に到達する方法の数を数えます\n  * `A` [最大サブアレイ](src/algorithms/sets/maximum-subarray)\n  * `A` [旅行セールスマン問題](src/algorithms/graph/travelling-salesman) - 各都市を訪れ、起点都市に戻る最短ルート\n  * `A` [離散フーリエ変換](src/algorithms/math/fourier-transform) - 時間（信号）の関数をそれを構成する周波数に分解する\n* **欲張り** - 未来を考慮することなく、現時点で最適なオプションを選択する\n  * `B` [ジャンプゲーム](src/algorithms/uncategorized/jump-game)\n  * `A` [結合されていないナップザック問題](src/algorithms/sets/knapsack-problem)\n  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - すべてのグラフ頂点への最短経路を見つける\n  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - 重み付き無向グラフの最小スパニングツリー（MST）を見つける\n  * `A` [Kruskalのアルゴリズム](src/algorithms/graph/kruskal) - 重み付き無向グラフの最小スパニングツリー（MST）を見つける\n* **分割と征服** - 問題をより小さな部分に分割し、それらの部分を解決する\n  * `B` [バイナリ検索](src/algorithms/search/binary-search)\n  * `B` [ハノイの塔](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [パスカルの三角形](src/algorithms/math/pascal-triangle)\n  * `B` [ユークリッドアルゴリズム](src/algorithms/math/euclidean-algorithm) - GCD（Greatest Common Divisor）を計算する\n  * `B` [マージソート](src/algorithms/sorting/merge-sort)\n  * `B` [クイックソート](src/algorithms/sorting/quick-sort)\n  * `B` [ツリーの深さ優先検索](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [グラフの深さ優先検索](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [ジャンプゲーム](src/algorithms/uncategorized/jump-game)\n  * `B` [高速電力供給](src/algorithms/math/fast-powering)\n  * `A` [順列](src/algorithms/sets/permutations) （繰り返しの有無にかかわらず）\n  * `A` [組み合わせ](src/algorithms/sets/combinations)（繰返しあり、繰返しなし）\n* **動的プログラミング** - 以前に発見されたサブソリューションを使用してソリューションを構築する\n  * `B` [フィボナッチ数](src/algorithms/math/fibonacci)\n  * `B` [ジャンプゲーム](src/algorithms/uncategorized/jump-game)\n  * `B` [ユニークなパス](src/algorithms/uncategorized/unique-paths)\n  * `B` [雨テラス](src/algorithms/uncategorized/rain-terraces) - トラップ雨水問題\n  * `B` [再帰的階段](src/algorithms/uncategorized/recursive-staircase) - 上に到達する方法の数を数える\n  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - 2つのシーケンス間の最小編集距離\n  * `A` [最長共通部分列](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [最長共通部分文字列](src/algorithms/string/longest-common-substring)\n  * `A` [最長増加サブシーケンス](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [最短共通共通配列](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [0/1ナップザック問題](src/algorithms/sets/knapsack-problem)\n  * `A` [整数パーティション](src/algorithms/math/integer-partition)\n  * `A` [最大サブアレイ](src/algorithms/sets/maximum-subarray)\n  * `A` [Bellman-Fordアルゴリズム](src/algorithms/graph/bellman-ford) - すべてのグラフ頂点への最短経路を見つける\n  * `A` [Floyd-Warshallアルゴリズム](src/algorithms/graph/floyd-warshall) - すべての頂点ペア間の最短経路を見つける\n  * `A` [正規表現マッチング](src/algorithms/string/regular-expression-matching)\n* **バックトラッキング** - ブルートフォースと同様に、可能なすべてのソリューションを生成しようとしますが、\n  次のソリューションを生成するたびにすべての条件を満たすかどうかをテストし、それ以降は引き続きソリューションを生成します。\n  それ以外の場合は、バックトラックして、解決策を見つける別の経路に進みます。\n  通常、状態空間のDFSトラバーサルが使用されています。\n  * `B` [ジャンプゲーム](src/algorithms/uncategorized/jump-game)\n  * `B` [ユニークなパス](src/algorithms/uncategorized/unique-paths)\n  * `B` [パワーセット](src/algorithms/sets/power-set) - セットのすべてのサブセット\n  * `A` [ハミルトニアンサイクル](src/algorithms/graph/hamiltonian-cycle) - すべての頂点を正確に1回訪問する\n  * `A` [N-クイーンズ問題](src/algorithms/uncategorized/n-queens)\n  * `A` [ナイトツアー](src/algorithms/uncategorized/knight-tour)\n  * `A` [組み合わせ合計](src/algorithms/sets/combination-sum) - 特定の合計を構成するすべての組み合わせを見つける\n* **ブランチ＆バウンド** - バックトラック検索の各段階で見つかった最もコストの低いソリューションを覚えておいて、最もコストの低いソリューションのコストを使用します。これまでに発見された最もコストの低いソリューションよりも大きなコストで部分ソリューションを破棄するように指示します。通常、状態空間ツリーのDFSトラバーサルと組み合わせたBFSトラバーサルが使用されています。\n\n## このリポジトリの使い方\n\n**すべての依存関係をインストールする**\n```\nnpm install\n```\n\n**ESLintを実行する**\n\nこれを実行してコードの品質をチェックすることができます。\n\n```\nnpm run lint\n```\n\n**すべてのテストを実行する**\n```\nnpm test\n```\n\n**名前でテストを実行する**\n```\nnpm test -- 'LinkedList'\n```\n\n**playground**\n\nデータ構造とアルゴリズムを `./src/playground/playground.js` ファイルで再生し、\nそれに対するテストを書くことができ `./src/playground/__test__/playground.test.js`.\n\n次に、次のコマンドを実行して、遊び場コードが正常に動作するかどうかをテストします。\n\n```\nnpm test -- 'playground'\n```\n\n## 有用な情報\n\n### 参考文献\n\n[▶ データ構造とアルゴリズム on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### ビッグO表記\n\n*Big O表記法は* 入力サイズが大きくなるにつれて実行時間やスペース要件がどのように増加するかに応じてアルゴリズムを分類するために使用されます。下のチャートでは、Big O表記で指定されたアルゴリズムの成長の最も一般的な順序を見つけることができます。\n\n![Big Oグラフ](./assets/big-o-graph.png)\n\n出典: [Big Oチートシート](http://bigocheatsheet.com/).\n\n以下は、最も使用されているBig O表記のリストと、入力データのさまざまなサイズに対するパフォーマンス比較です。\n\n| Big O Notation | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements  |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### データ構造操作の複雑さ\n\n| Data Structure          | Access    | Search    | Insertion | Deletion  | Comments  |\n| ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- |\n| **Array**               | 1         | n         | n         | n         |           |\n| **Stack**               | n         | n         | 1         | 1         |           |\n| **Queue**               | n         | n         | 1         | 1         |           |\n| **Linked List**         | n         | n         | 1         | 1         |           |\n| **Hash Table**          | -         | n         | n         | n         | In case of perfect hash function costs would be O(1) |\n| **Binary Search Tree**  | n         | n         | n         | n         | In case of balanced tree costs would be O(log(n)) |\n| **B-Tree**              | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Red-Black Tree**      | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **AVL Tree**            | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Bloom Filter**        | -         | 1         | 1         | -         | False positives are possible while searching |\n\n### 配列の並べ替えアルゴリズムの複雑さ\n\n| Name                  | Best            | Average             | Worst               | Memory    | Stable    | Comments  |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- |\n| **Bubble sort**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes       |           |\n| **Insertion sort**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes       |           |\n| **Selection sort**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | No        |           |\n| **Heap sort**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | No        |           |\n| **Merge sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Yes       |           |\n| **Quick sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | No        | Quicksort is usually done in-place with O(log(n)) stack space |\n| **Shell sort**        | n&nbsp;log(n)   | depends on gap sequence   | n&nbsp;(log(n))<sup>2</sup>  | 1         | No         |           |\n| **Counting sort**     | n + r           | n + r               | n + r               | n + r     | Yes       | r - biggest number in array |\n| **Radix sort**        | n * k           | n * k               | n * k               | n + k     | Yes       | k - length of longest key |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.ko-KR.md",
          "type": "blob",
          "size": 19.818359375,
          "content": "# JavaScript 알고리즘 및 자료 구조\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\n이 저장소에는 많이 알려진 알고리즘 및 자료 구조의 Javascript 기반 예제를 담고 있습니다.\n\n각 알고리즘과 자료 구조에 대해 연관되어 있는 설명이 README에 작성되어 있으며,\n링크를 통해 더 자세한 설명을 만날 수 있습니다. (관련된 YouTube 영상도 포함).\n\n_Read this in other languages:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n## 자료 구조\n\n자료 구조는 데이터를 특정 방식으로 구성하고 저장함으로써 더 효율적으로\n접근하고 수정할 수 있게 해줍니다. 간단히 말해, 자료 구조는 데이터 값들,\n데이터 간의 관계, 그리고 데이터를 다룰 수 있는 함수와 작업의 모임입니다.\n\n\n`B` - 입문자, `A` - 숙련자\n\n* `B` [연결 리스트](src/data-structures/linked-list)\n* `B` [이중 연결 리스트](src/data-structures/doubly-linked-list)\n* `B` [큐](src/data-structures/queue)\n* `B` [스택](src/data-structures/stack)\n* `B` [해시 테이블](src/data-structures/hash-table)\n* `B` [힙](src/data-structures/heap)\n* `B` [우선순위 큐](src/data-structures/priority-queue)\n* `A` [트라이](src/data-structures/trie)\n* `A` [트리](src/data-structures/tree)\n  * `A` [이진 탐색 트리](src/data-structures/tree/binary-search-tree)\n  * `A` [AVL 트리](src/data-structures/tree/avl-tree)\n  * `A` [Red-Black 트리](src/data-structures/tree/red-black-tree)\n  * `A` [세그먼트 트리](src/data-structures/tree/segment-tree) - min/max/sum range 쿼리 예제.\n  * `A` [Fenwick 트리](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)\n* `A` [그래프](src/data-structures/graph) (유방향, 무방향)\n* `A` [서로소 집합](src/data-structures/disjoint-set)\n* `A` [블룸 필터](src/data-structures/bloom-filter)\n\n## 알고리즘\n\n알고리즘은 어떤 종류의 문제를 풀 수 있는 정확한 방법이며,\n일련의 작업을 정확하게 정의해 놓은 규칙들입니다.\n\n`B` - 입문자, `A` - 숙련자\n\n### 주제별 알고리즘\n\n* **Math**\n  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, 2의 곱 / 나누기, 음수로 만들기 etc.\n  * `B` [팩토리얼](src/algorithms/math/factorial)\n  * `B` [피보나치 수](src/algorithms/math/fibonacci)\n  * `B` [소수 판별](src/algorithms/math/primality-test) (trial division 방식)\n  * `B` [유클리드 호제법](src/algorithms/math/euclidean-algorithm) - 최대공약수 (GCD)\n  * `B` [최소 공배수](src/algorithms/math/least-common-multiple) - LCM\n  * `B` [에라토스테네스의 체](src/algorithms/math/sieve-of-eratosthenes) - 특정수 이하의 모든 소수 찾기\n  * `B` [2의 거듭제곱 판별법](src/algorithms/math/is-power-of-two) - 어떤 수가 2의 거듭제곱인지 판별 (naive 와 bitwise 알고리즘)\n  * `B` [파스칼 삼각형](src/algorithms/math/pascal-triangle)\n  * `A` [자연수 분할](src/algorithms/math/integer-partition)\n  * `A` [리우 후이 π 알고리즘](src/algorithms/math/liu-hui) - N-각형을 기반으로 π 근사치 구하기\n* **Sets**\n  * `B` [카티지언 프로덕트](src/algorithms/sets/cartesian-product) - 곱집합\n  * `B` [Fisher–Yates 셔플](src/algorithms/sets/fisher-yates) - 유한 시퀀스의 무작위 순열\n  * `A` [멱집합](src/algorithms/sets/power-set) - 집합의 모든 부분집합\n  * `A` [순열](src/algorithms/sets/permutations) (반복 유,무)\n  * `A` [조합](src/algorithms/sets/combinations) (반복 유,무)\n  * `A` [최장 공통 부분수열](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [최장 증가 수열](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [배낭 문제](src/algorithms/sets/knapsack-problem) - \"0/1\" 과 \"Unbound\"\n  * `A` [최대 구간합](src/algorithms/sets/maximum-subarray) - \"브루트 포스\" 과 \"동적 계획법\" (Kadane's) 버전\n  * `A` [조합 합](src/algorithms/sets/combination-sum) - 특정 합을 구성하는 모든 조합 찾기\n* **Strings**\n  * `B` [해밍 거리](src/algorithms/string/hamming-distance) - 심볼이 다른 위치의 갯수\n  * `A` [편집 거리](src/algorithms/string/levenshtein-distance) - 두 시퀀스 간위 최소 편집거리\n  * `A` [커누스-모리스-프랫 알고리즘](src/algorithms/string/knuth-morris-pratt) (KMP 알고리즘) - 부분 문자열 탐색 (패턴 매칭)\n  * `A` [Z 알고리즘](src/algorithms/string/z-algorithm) - 부분 문자열 탐색 (패턴 매칭)\n  * `A` [라빈 카프 알고리즘](src/algorithms/string/rabin-karp) - 부분 문자열 탐색\n  * `A` [최장 공통 부분 문자열](src/algorithms/string/longest-common-substring)\n  * `A` [정규 표현식 매칭](src/algorithms/string/regular-expression-matching)\n* **Searches**\n  * `B` [선형 탐색](src/algorithms/search/linear-search)\n  * `B` [점프 탐색](src/algorithms/search/jump-search) (or Block Search) - 정렬된 배열에서 탐색\n  * `B` [이진 탐색](src/algorithms/search/binary-search) - 정렬된 배열에서 탐색\n  * `B` [보간 탐색](src/algorithms/search/interpolation-search) - 균등한 분포를 이루는 정렬된 배열에서 탐색\n* **Sorting**\n  * `B` [거품 정렬](src/algorithms/sorting/bubble-sort)\n  * `B` [선택 정렬](src/algorithms/sorting/selection-sort)\n  * `B` [삽입 정렬](src/algorithms/sorting/insertion-sort)\n  * `B` [힙 정렬](src/algorithms/sorting/heap-sort)\n  * `B` [병합 정렬](src/algorithms/sorting/merge-sort)\n  * `B` [퀵 정렬](src/algorithms/sorting/quick-sort) - 제자리(in-place)와 제자리가 아닌(non-in-place) 구현\n  * `B` [셸 정렬](src/algorithms/sorting/shell-sort)\n  * `B` [계수 정렬](src/algorithms/sorting/counting-sort)\n  * `B` [기수 정렬](src/algorithms/sorting/radix-sort)\n* **Trees**\n  * `B` [깊이 우선 탐색](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [너비 우선 탐색](src/algorithms/tree/breadth-first-search) (BFS)\n* **Graphs**\n  * `B` [깊이 우선 탐색](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [너비 우선 탐색](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [크루스칼 알고리즘](src/algorithms/graph/kruskal) - 최소 신장 트리 찾기 (MST) 무방향 가중 그래프\n  * `A` [다익스트라 알고리즘](src/algorithms/graph/dijkstra) - 한 점에서 다른 모든 점까지 최단 거리 찾기\n  * `A` [벨만-포드 알고리즘](src/algorithms/graph/bellman-ford) - 한 점에서 다른 모든 점까지 최단 거리 찾기\n  * `A` [플로이드-워셜 알고리즘](src/algorithms/graph/floyd-warshall) - 모든 종단 간의 최단거리 찾기\n  * `A` [사이클 탐지](src/algorithms/graph/detect-cycle) - 유방향, 무방향 그래프 (DFS 와 Disjoint Set 에 기반한 버전)\n  * `A` [프림 알고리즘](src/algorithms/graph/prim) - 무방향 가중치 그래프에서 최소 신장 트리 (MST) 찾기\n  * `A` [위상 정렬](src/algorithms/graph/topological-sorting) - DFS 방식\n  * `A` [단절점](src/algorithms/graph/articulation-points) - 타잔의 알고리즘 (DFS 기반)\n  * `A` [단절선](src/algorithms/graph/bridges) - DFS 기반 알고리즘\n  * `A` [오일러 경로 와 오일러 회로](src/algorithms/graph/eulerian-path) - Fleury의 알고리즘 - 모든 엣지를 한번만 방문\n  * `A` [해밀턴 경로](src/algorithms/graph/hamiltonian-cycle) - 모든 꼭짓점을 한번만 방문\n  * `A` [강결합 컴포넌트](src/algorithms/graph/strongly-connected-components) - Kosaraju의 알고리즘\n  * `A` [외판원 문제](src/algorithms/graph/travelling-salesman) - 각 도시를 다 방문하고 다시 출발점으로 돌아오는 최단 경로 찾기\n* **Uncategorized**\n  * `B` [하노이 탑](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [정방 행렬 회전](src/algorithms/uncategorized/square-matrix-rotation) - 제자리(in-place) 알고리즘\n  * `B` [점프 게임](src/algorithms/uncategorized/jump-game) - 백트래킹, 동적계획법 (top-down + bottom-up), 탐욕 알고리즘 예제\n  * `B` [Unique 경로](src/algorithms/uncategorized/unique-paths) - 백트래킹, 동적계획법, 파스칼 삼각형에 기반한 예제\n  * `B` [빗물 담기 문제](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (동적계획법, 브루트포스 버전)\n  * `A` [N-Queens 문제](src/algorithms/uncategorized/n-queens)\n  * `A` [기사의 여행 문제](src/algorithms/uncategorized/knight-tour)\n\n### 패러다임별 알고리즘\n\n알고리즘 패러다임 이란, 알고리즘이 주어진 문제를 해결하기 위해 채택한 기초가 되는 일반적인 방법 혹은 접근법입니다. 알고리즘이 해결하는 문제나 알고리즘의 동작 방식이 완전히 다르더라도,알고리즘의 동작 원칙이 같으면 같은 패러다음을 사용했다고 말할 수 있으며, 주로 알고리즘을 구분하는 기준으로 쓰인다. 알고리즘이 일반적인 컴퓨터의 프로그램에 대한 개념보다 보다 더 추상적인 개념인 것처럼 알고리즘의 패러다임은 명확히 정의된 수학적 실체가 있는 것이 아니기 때문에 그 어떤 알고리즘의 개념보다도 훨씬 추상적인 개념입니다.\n\n* **브루트 포스(Brute Force)** - 가능한 모든 경우를 탐색한 뒤 최적을 찾아내는 방식입니다.\n  * `B` [선형 탐색](src/algorithms/search/linear-search)\n  * `B` [빗물 담기 문제](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem\n  * `A` [최대 구간합](src/algorithms/sets/maximum-subarray)\n  * `A` [외판원 문제](src/algorithms/graph/travelling-salesman) - 각 도시를 다 방문하고 다시 출발점으로 돌아오는 최단 경로 찾기\n* **탐욕 알고리즘(Greedy)** - 이후를 고려하지 않고 현재 시점에서 가장 최적인 선택을 하는 방식입니다.\n  * `B` [점프 게임](src/algorithms/uncategorized/jump-game)\n  * `A` [쪼갤수 있는 배낭 문제](src/algorithms/sets/knapsack-problem)\n  * `A` [다익스트라 알고리즘](src/algorithms/graph/dijkstra) - 모든 점 까지의 최단거리 찾기\n  * `A` [프림 알고리즘](src/algorithms/graph/prim) - 무방향 가중치 그래프에서 최소 신창 트리 (MST) 찾기\n  * `A` [크루스칼 알고리즘](src/algorithms/graph/kruskal) - 무방향 가중치 그래프에서 최소 신창 트리 (MST) 찾기\n* **분할 정복법(Divide and Conquer)** - 문제를 여러 작은 문제로 분할한 뒤 해결하는 방식입니다.\n  * `B` [이진 탐색](src/algorithms/search/binary-search)\n  * `B` [하노이 탑](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [파스칼 삼각형](src/algorithms/math/pascal-triangle)\n  * `B` [유클리드 호제법](src/algorithms/math/euclidean-algorithm) - 최대공약수 계산 (GCD)\n  * `B` [병합 정렬](src/algorithms/sorting/merge-sort)\n  * `B` [퀵 정렬](src/algorithms/sorting/quick-sort)\n  * `B` [트리 깊이 우선 탐색](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [그래프 깊이 우선 탐색](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [점프 게임](src/algorithms/uncategorized/jump-game)\n  * `A` [순열](src/algorithms/sets/permutations) (반복 유,무)\n  * `A` [조합](src/algorithms/sets/combinations) (반복 유,무)\n* **동적 계획법(Dynamic Programming)** - 이전에 찾은 결과를 이용하여 최종적으로 해결하는 방식입니다.\n  * `B` [피보나치 수](src/algorithms/math/fibonacci)\n  * `B` [점프 게임](src/algorithms/uncategorized/jump-game)\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  * `B` [빗물 담기 문제](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem\n  * `A` [편집 거리](src/algorithms/string/levenshtein-distance) - 두 시퀀스 간의 최소 편집 거리\n  * `A` [최장 공통 부분 수열](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [최장 공통 부분 문자열](src/algorithms/string/longest-common-substring)\n  * `A` [최장 증가 수열](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [0/1 배낭 문제](src/algorithms/sets/knapsack-problem)\n  * `A` [자연수 분할](src/algorithms/math/integer-partition)\n  * `A` [최대 구간합](src/algorithms/sets/maximum-subarray)\n  * `A` [벨만-포드 알고리즘](src/algorithms/graph/bellman-ford) - 모든 점 까지의 최단 거리 찾기\n  * `A` [플로이드-워셜 알고리즘](src/algorithms/graph/floyd-warshall) - 모든 종단 간의 최단거리 찾기\n  * `A` [정규 표현식 매칭](src/algorithms/string/regular-expression-matching)\n* **백트래킹(Backtracking)** - 모든 가능한 경우를 고려한다는 점에서 브루트 포스와 유사합니다. 하지만 다음 단계로 넘어갈때 마다 모든 조건을 만족했는지 확인하고 진행합니다. 만약 조건을 만족하지 못했다면 뒤로 돌아갑니다 (백트래킹). 그리고 다른 경로를 선택합니다. 보통 상태를  유지한 DFS 탐색을 많이 사용합니다.\n  * `B` [점프 게임](src/algorithms/uncategorized/jump-game)\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  * `A` [해밀턴 경로](src/algorithms/graph/hamiltonian-cycle) - 모든 점을 한번씩 방문\n  * `A` [N-Queens 문제](src/algorithms/uncategorized/n-queens)\n  * `A` [기사의 여행](src/algorithms/uncategorized/knight-tour)\n  * `A` [조합 합](src/algorithms/sets/combination-sum) - 특정 합을 구성하는 모든 조합 찾기\n* **분기 한정법** - 백트래킹으로 찾은 각 단계의 최소 비용이 드는 해를 기억해 두고 있다가, 이 비용을 이용해서 더 낮은 최적의 해를 찾습니다. 기억해둔 최소 비용들을 이용해 더 높은 비용이 드는 해결법을 탐색 안함으로써 불필요한 시간 소모를 줄입니다. 보통 상태 공간 트리의 DFS 탐색을 이용한 BFS 탐색 방식에서 사용됩니다.\n\n## 이 저장소의 사용법\n\n**모든 종속 모듈들 설치**\n```\nnpm install\n```\n\n**ESLint 실행**\n\n코드의 품질을 확인 할 수 있습니다.\n\n```\nnpm run lint\n```\n\n**모든 테스트 실행**\n```\nnpm test\n```\n\n**이름을 통해 특정 테스트 실행**\n```\nnpm test -- 'LinkedList'\n```\n\n**Playground**\n\n `./src/playground/playground.js` 파일을 통해 자료 구조와 알고리즘을 작성하고 `./src/playground/__test__/playground.test.js`에 테스트를 작성할 수 있습니다.\n\n그리고 간단하게 아래 명령어를 통해 의도한대로 동작하는지 확인 할 수 있습니다.:\n\n```\nnpm test -- 'playground'\n```\n\n## 유용한 정보\n\n### 참고\n\n[▶ Data Structures and Algorithms on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Big O 표기\n\nBig O 표기로 표시한 알고리즘의 증가 양상입니다.\n\n![Big O graphs](./assets/big-o-graph.png)\n\nSource: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\n아래는 가장 많이 사용되는 Big O 표기와 입력 데이터 크기에 따른 성능을 비교한 표입니다.\n\n| Big O 표기 | 10 개 일때 | 100 개 일때 | 1000 개 일때  |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### 자료 구조 작업별 복잡도\n\n| 자료 구조                 | 접근       | 검색      | 삽입       | 삭제      | 비고       |\n| ------------------------ | :-------: | :-------: | :-------: | :-------: | :-------- |\n| **배열**                  | 1         | n         | n         | n         |           |\n| **스택**                  | n         | n         | 1         | 1         |           |\n| **큐**                    | n         | n         | 1         | 1         |           |\n| **연결 리스트**            | n         | n         | 1         | 1         |           |\n| **해시 테이블**            | -         | n         | n         | n         | 완벽한 해시 함수의 경우 O(1) |\n| **이진 탐색 트리**          | n         | n         | n         | n         | 균형 트리의 경우 O(log(n)) |\n| **B-트리**                | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Red-Black 트리**        | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **AVL 트리**              | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Bloom Filter**          | -         | 1         | 1         | -         | 거짓 양성이 탐색 중 발생 가능 |\n\n### 정렬 알고리즘 복잡도\n\n| 이름                   | 최적            | 평균                 | 최악                | 메모리     | 동일값 순서유지    | 비고       |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :--------------: | :-------- |\n| **거품 정렬**          | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes              |           |\n| **삽입 정렬**          | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes              |           |\n| **선택 정렬**          | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | No               |           |\n| **힙 정렬**            | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | No               |           |\n| **병합 정렬**          | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Yes              |           |\n| **퀵 정렬**            | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | No               | 퀵 정렬은 보통 제자리(in-place)로 O(log(n)) 스택공간으로 수행됩니다. |\n| **셸 정렬**            | n&nbsp;log(n)   | 간격 순서에 영향을 받습니다.   | n&nbsp;(log(n))<sup>2</sup>  | 1         | No         |           |\n| **계수 정렬**          | n + r           | n + r               | n + r               | n + r     | Yes              | r - 배열내 가장 큰 수 |\n| **기수 정렬**          | n * k           | n * k               | n * k               | n + k     | Yes              | k - 키값의 최대 길이 |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.8486328125,
          "content": "# JavaScript Algorithms and Data Structures\n\n> 🇺🇦 UKRAINE [IS BEING ATTACKED](https://war.ukraine.ua/) BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.\n> - Help Ukraine via:\n>   - [Serhiy Prytula Charity Foundation](https://prytulafoundation.org/en/)\n>   - [Come Back Alive Charity Foundation](https://savelife.in.ua/en/donate-en/)\n>   - [National Bank of Ukraine](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)\n> - More info on [war.ukraine.ua](https://war.ukraine.ua/) and [MFA of Ukraine](https://twitter.com/MFA_Ukraine)\n\n<hr/>\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)\n\nThis repository contains JavaScript based examples of many\npopular algorithms and data structures.\n\nEach algorithm and data structure has its own separate README\nwith related explanations and links for further reading (including ones\nto YouTube videos).\n\n_Read this in other languages:_\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türkçe_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n*☝ Note that this project is meant to be used for learning and researching purposes\nonly, and it is **not** meant to be used for production.*\n\n## Data Structures\n\nA data structure is a particular way of organizing and storing data in a computer so that it can\nbe accessed and modified efficiently. More precisely, a data structure is a collection of data\nvalues, the relationships among them, and the functions or operations that can be applied to\nthe data.\n\nRemember that each data has its own trade-offs. And you need to pay attention more to why you're choosing a certain data structure than to how to implement it.\n\n`B` - Beginner, `A` - Advanced\n\n* `B` [Linked List](src/data-structures/linked-list)\n* `B` [Doubly Linked List](src/data-structures/doubly-linked-list)\n* `B` [Queue](src/data-structures/queue)\n* `B` [Stack](src/data-structures/stack)\n* `B` [Hash Table](src/data-structures/hash-table)\n* `B` [Heap](src/data-structures/heap) - max and min heap versions\n* `B` [Priority Queue](src/data-structures/priority-queue)\n* `A` [Trie](src/data-structures/trie)\n* `A` [Tree](src/data-structures/tree)\n  * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree)\n  * `A` [AVL Tree](src/data-structures/tree/avl-tree)\n  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)\n  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples\n  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)\n* `A` [Graph](src/data-structures/graph) (both directed and undirected)\n* `A` [Disjoint Set](src/data-structures/disjoint-set) - a union–find data structure or merge–find set\n* `A` [Bloom Filter](src/data-structures/bloom-filter)\n* `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache\n\n## Algorithms\n\nAn algorithm is an unambiguous specification of how to solve a class of problems. It is\na set of rules that precisely define a sequence of operations.\n\n`B` - Beginner, `A` - Advanced\n\n### Algorithms by Topic\n\n* **Math**\n  * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.\n  * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers.\n  * `B` [Factorial](src/algorithms/math/factorial)\n  * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions\n  * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan's theorem\n  * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method)\n  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)\n  * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM)\n  * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit\n  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms)\n  * `B` [Pascal's Triangle](src/algorithms/math/pascal-triangle)\n  * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them\n  * `B` [Radian & Degree](src/algorithms/math/radian) - radians to degree and backwards conversion\n  * `B` [Fast Powering](src/algorithms/math/fast-powering)\n  * `B` [Horner's method](src/algorithms/math/horner-method) - polynomial evaluation\n  * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.)\n  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices\n  * `A` [Integer Partition](src/algorithms/math/integer-partition)\n  * `A` [Square Root](src/algorithms/math/square-root) - Newton's method\n  * `A` [Liu Hui π Algorithm](src/algorithms/math/liu-hui) - approximate π calculations based on N-gons\n  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up\n* **Sets**\n  * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets\n  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence\n  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions)\n  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)\n  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)\n  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - \"0/1\" and \"Unbound\" ones\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - \"Brute Force\" and \"Dynamic Programming\" (Kadane's) versions\n  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum\n* **Strings**\n  * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different\n  * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse\n  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences\n  * `A` [Knuth–Morris–Pratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching)\n  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching)\n  * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search\n  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)\n  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)\n* **Searches**\n  * `B` [Linear Search](src/algorithms/search/linear-search)\n  * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array\n  * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array\n  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array\n* **Sorting**\n  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)\n  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)\n  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)\n  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations\n  * `B` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)\n  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)\n  * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort)\n* **Linked Lists**\n  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)\n  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)\n* **Trees**\n  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)\n* **Graphs**\n  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex\n  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex\n  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices\n  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)\n  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method\n  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan's algorithm (DFS based)\n  * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm\n  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury's algorithm - Visit every edge exactly once\n  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once\n  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju's algorithm\n  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city\n* **Cryptography**\n  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - rolling hash function based on polynomial\n  * `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - a transposition cipher algorithm for encoding messages\n  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher\n  * `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - substitution cipher based on linear algebra\n* **Machine Learning**\n  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)\n  * `B` [k-NN](src/algorithms/ml/knn) - k-nearest neighbors classification algorithm\n  * `B` [k-Means](src/algorithms/ml/k-means) - k-Means clustering algorithm\n* **Image Processing**\n  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm\n* **Statistics**\n  * `B` [Weighted Random](src/algorithms/statistics/weighted-random) - select the random item from the list based on items' weights\n* **Evolutionary algorithms**\n  * `A` [Genetic algorithm](https://github.com/trekhleb/self-parking-car-evolution) - example of how the genetic algorithm may be applied for training the self-parking cars\n* **Uncategorized**\n  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal's Triangle based examples\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top (4 solutions)\n  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples\n  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n\n### Algorithms by Paradigm\n\nAn algorithmic paradigm is a generic method or approach which underlies the design of a class\nof algorithms. It is an abstraction higher than the notion of an algorithm, just as an\nalgorithm is an abstraction higher than a computer program.\n\n* **Brute Force** - look at all the possibilities and selects the best solution\n  * `B` [Linear Search](src/algorithms/search/linear-search)\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)\n  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city\n  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up\n* **Greedy** - choose the best option at the current time, without any consideration for the future\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)\n  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest path to all graph vertices\n  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n* **Divide and Conquer** - divide the problem into smaller parts and then solve those parts\n  * `B` [Binary Search](src/algorithms/search/binary-search)\n  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Pascal's Triangle](src/algorithms/math/pascal-triangle)\n  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort)\n  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Matrices](src/algorithms/math/matrix) - generating and traversing the matrices of different shapes\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Fast Powering](src/algorithms/math/fast-powering)\n  * `B` [Best Time To Buy Sell Stocks](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - divide and conquer and one-pass examples\n  * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions)\n  * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions)\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)\n* **Dynamic Programming** - build up a solution using previously found sub-solutions\n  * `B` [Fibonacci Number](src/algorithms/math/fibonacci)\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top\n  * `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - content-aware image resizing algorithm\n  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences\n  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)\n  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)\n  * `A` [Integer Partition](src/algorithms/math/integer-partition)\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)\n  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest path to all graph vertices\n  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices\n  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)\n* **Backtracking** - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test\nif it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a\ndifferent path of finding a solution. Normally the DFS traversal of state-space is being used.\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set\n  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once\n  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum\n* **Branch & Bound** - remember the lowest-cost solution found at each stage of the backtracking\nsearch, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of\na least-cost solution to the problem, in order to discard partial solutions with costs larger than the\nlowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space\ntree is being used.\n\n## How to use this repository\n\n**Install all dependencies**\n\n```\nnpm install\n```\n\n**Run ESLint**\n\nYou may want to run it to check code quality.\n\n```\nnpm run lint\n```\n\n**Run all tests**\n\n```\nnpm test\n```\n\n**Run tests by name**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**Troubleshooting**\n\nIf linting or testing is failing, try to delete the `node_modules` folder and re-install npm packages:\n\n```\nrm -rf ./node_modules\nnpm i\n```\n\nAlso make sure that you're using a correct Node version (`>=16`). If you're using [nvm](https://github.com/nvm-sh/nvm) for Node version management you may run `nvm use` from the root folder of the project and the correct version will be picked up.\n\n**Playground**\n\nYou may play with data-structures and algorithms in `./src/playground/playground.js` file and write\ntests for it in `./src/playground/__test__/playground.test.js`.\n\nThen just simply run the following command to test if your playground code works as expected:\n\n```\nnpm test -- 'playground'\n```\n\n## Useful Information\n\n### References\n\n- [▶ Data Structures and Algorithms on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n- [✍🏻 Data Structure Sketches](https://okso.app/showcase/data-structures)\n\n### Big O Notation\n\n*Big O notation* is used to classify algorithms according to how their running time or space requirements grow as the input size grows.\nOn the chart below you may find most common orders of growth of algorithms specified in Big O notation.\n\n![Big O graphs](./assets/big-o-graph.png)\n\nSource: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nBelow is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.\n\n| Big O Notation | Type        | Computations for 10 elements | Computations for 100 elements | Computations for 1000 elements  |\n| -------------- | ----------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | Constant    | 1                            | 1                             | 1                               |\n| **O(log N)**   | Logarithmic | 3                            | 6                             | 9                               |\n| **O(N)**       | Linear      | 10                           | 100                           | 1000                            |\n| **O(N log N)** | n log(n)    | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | Quadratic   | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | Exponential | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | Factorial   | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### Data Structure Operations Complexity\n\n| Data Structure          | Access    | Search    | Insertion | Deletion  | Comments  |\n| ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- |\n| **Array**               | 1         | n         | n         | n         |           |\n| **Stack**               | n         | n         | 1         | 1         |           |\n| **Queue**               | n         | n         | 1         | 1         |           |\n| **Linked List**         | n         | n         | 1         | n         |           |\n| **Hash Table**          | -         | n         | n         | n         | In case of perfect hash function costs would be O(1) |\n| **Binary Search Tree**  | n         | n         | n         | n         | In case of balanced tree costs would be O(log(n)) |\n| **B-Tree**              | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Red-Black Tree**      | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **AVL Tree**            | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Bloom Filter**        | -         | 1         | 1         | -         | False positives are possible while searching |\n\n### Array Sorting Algorithms Complexity\n\n| Name                  | Best            | Average             | Worst               | Memory    | Stable    | Comments  |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- |\n| **Bubble sort**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes       |           |\n| **Insertion sort**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes       |           |\n| **Selection sort**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | No        |           |\n| **Heap sort**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | No        |           |\n| **Merge sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Yes       |           |\n| **Quick sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | No        | Quicksort is usually done in-place with O(log(n)) stack space |\n| **Shell sort**        | n&nbsp;log(n)   | depends on gap sequence   | n&nbsp;(log(n))<sup>2</sup>  | 1         | No         |           |\n| **Counting sort**     | n + r           | n + r               | n + r               | n + r     | Yes       | r - biggest number in array |\n| **Radix sort**        | n * k           | n * k               | n * k               | n + k     | Yes       | k - length of longest key |\n\n## Project Backers\n\n> You may support this project via ❤️️ [GitHub](https://github.com/sponsors/trekhleb) or ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n[Folks who are backing this project](https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md) `∑ = 1`\n\n## Author\n\n[@trekhleb](https://trekhleb.dev)\n\nA few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.pl-PL.md",
          "type": "blob",
          "size": 20.0439453125,
          "content": "# JavaScript Algorytmy i Struktury Danych\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nTo repozytorium zawiera wiele przykładów JavaScript opartych na\nznanych algorytmach i strukturach danych.\n\nKażdy algorytm i struktura danych zawiera osobny plik README\nwraz z powiązanymi wyjaśnieniami i odnośnikami do dalszego czytania\n(włącznie z tymi do YouTube videos).\n\n_Read this in other languages:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/)\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n## Struktury Danych\n\nStruktura danych to sposób uporządkowania i przechowywania informacji w\nkomputerze żeby mogłaby być sprawnie dostępna i efektywnie zmodyfikowana.\nDokładniej, struktura danych jest zbiorem wartości danych, relacjami\npomiędzy nimi, zadaniami lub działaniami, które mogą dotyczyć danych.\n\n`B` - Początkujący, `A` - Zaawansowany\n\n* `B` [Lista](src/data-structures/linked-list)\n* `B` [Lista Dwukierunkowa](src/data-structures/doubly-linked-list)\n* `B` [Kolejka](src/data-structures/queue)\n* `B` [Stos](src/data-structures/stack)\n* `B` [Tabela Skrótu](src/data-structures/hash-table)\n* `B` [Sterta](src/data-structures/heap)\n* `B` [Kolejka Priorytetowa](src/data-structures/priority-queue)\n* `A` [Trie](src/data-structures/trie)\n* `A` [Drzewo](src/data-structures/tree)\n  * `A` [Wyszukiwanie Binarne](src/data-structures/tree/binary-search-tree)\n  * `A` [AVL Drzewo](src/data-structures/tree/avl-tree)\n  * `A` [Drzewa czerwono-czarne](src/data-structures/tree/red-black-tree)\n  * `A` [Drzewo Segmentu](src/data-structures/tree/segment-tree) - z przykładami zapytań o min / max / sumie sum\n  * `A` [Drzewo Fenwicka](src/data-structures/tree/fenwick-tree) (Drzewo Indeksowane Binarnie)\n* `A` [Graf](src/data-structures/graph) (zarówno skierowane i nieukierunkowane)\n* `A` [Rozłączny Zestaw](src/data-structures/disjoint-set)\n* `A` [Filtr Blooma](src/data-structures/bloom-filter)\n\n## Algorytmy\n\nAlgorytm jest to skończony ciąg jasno zdefiniowanych czynności, koniecznych\ndo wykonania pewnego rodzaju zadań. Sposób postępowania prowadzący do\nrozwiązania problemu.\n\n`B` - Początkujący, `A` - Zaawansowany\n\n### Algorytmy według tematu\n\n* **Matematyka**\n  * `B` [Manipulacja Bitami](src/algorithms/math/bits) - ustaw / uzyskaj / aktualizuj / usuwaj bity, mnożenie / dzielenie przez dwa, tworzenie negatywów itp.\n  * `B` [Silnia](src/algorithms/math/factorial)\n  * `B` [Ciąg Fibonacciego](src/algorithms/math/fibonacci)\n  * `B` [Test Pierwszorzędności](src/algorithms/math/primality-test) (metoda podziału na próby)\n  * `B` [Algorytm Euclideana](src/algorithms/math/euclidean-algorithm) - obliczyć Największy Wspólny Dzielnik (GCD)\n  * `B` [Najmniejsza Wspólna Wielokrotność](src/algorithms/math/least-common-multiple) (LCM)\n  * `B` [Sito Eratosthenes-a](src/algorithms/math/sieve-of-eratosthenes) - znajdowanie wszystkich liczb pierwszych do określonego limitu\n  * `B` [Jest Potęgą Dwójki](src/algorithms/math/is-power-of-two) - sprawdź, czy liczba jest potęgą dwóch (algorytmy naiwne i bitowe)\n  * `B` [Trójkąt Pascala](src/algorithms/math/pascal-triangle)\n  * `A` [Partycja Całkowita](src/algorithms/math/integer-partition)\n  * `A` [Algorytm Liu Huia](src/algorithms/math/liu-hui) - przybliżone obliczenia na podstawie N-gonów\n* **Zestawy**\n  * `B` [Produkt Kartezyjny](src/algorithms/sets/cartesian-product) - wynik wielu zestawów\n  * `B` [Przetasowanie Fisher Yates-a](src/algorithms/sets/fisher-yates) - losowa permutacja kończącej się serii\n  * `A` [Zestaw Zasilający](src/algorithms/sets/power-set) - podzbiór wszystkich serii\n  * `A` [Permutacje](src/algorithms/sets/permutations) (z albo bez powtórzeń)\n  * `A` [Kombinacje](src/algorithms/sets/combinations) (z albo bez powtórzeń)\n  * `A` [Najdłuższa Wspólna Podsekwencja](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Najdłuższa Wzrostająca Podsekwencja](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Najkrótsza Wspólna Supersekwencja](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Problem Knapsacka](src/algorithms/sets/knapsack-problem) - \"0/1\" i \"Rozwiązany\"\n  * `A` [Maksymalna Podtablica](src/algorithms/sets/maximum-subarray) - \"Metoda Siłowa\" i \"Dynamiczne Programowanie\" (Kadane-a) wersje\n  * `A` [Suma Kombinacji](src/algorithms/sets/combination-sum) -\nznajdź wszystkie kombinacje, które tworzą określoną sumę\n* **Łańcuchy**\n  * `B` [Odległość Hamminga](src/algorithms/string/hamming-distance) - liczba pozycji, w których symbole są różne\n  * `A` [Odległość Levenshteina](src/algorithms/string/levenshtein-distance) - minimalna odległość edycji między dwiema sekwencjami\n  * `A` [Algorytm Knuth–Morris–Pratta](src/algorithms/string/knuth-morris-pratt) (Algorytm KMP) - dopasowywanie wzorców (dopasowywanie wzorców)\n  * `A` [Algorytm Z](src/algorithms/string/z-algorithm) - szukanie podłańcucha(dopasowywanie wzorców)\n  * `A` [Algorytm Rabin Karpa](src/algorithms/string/rabin-karp) - szukanie podłańcucha\n  * `A` [Najdłuższa Wspólna Podłańcucha](src/algorithms/string/longest-common-substring)\n  * `A` [Dopasowanie Wyrażeń Regularnych](src/algorithms/string/regular-expression-matching)\n* **Szukanie**\n  * `B` [Wyszukiwanie Liniowe](src/algorithms/search/linear-search)\n  * `B` [Jump Search](src/algorithms/search/jump-search) (lub Przeszukiwanie Bloku) - szukaj w posortowanej tablicy\n  * `B` [Wyszukiwanie Binarne](src/algorithms/search/binary-search) - szukaj w posortowanej tablicy\n  * `B` [Wyszukiwanie Interpolacyjne](src/algorithms/search/interpolation-search) - szukaj w równomiernie rozłożonej, posortowanej tablicy\n* **Sortowanie**\n  * `B` [Sortowanie bąbelkowe](src/algorithms/sorting/bubble-sort)\n  * `B` [Sortowanie przez wymiane](src/algorithms/sorting/selection-sort)\n  * `B` [Sortowanie przez wstawianie](src/algorithms/sorting/insertion-sort)\n  * `B` [Sortowanie stogowe](src/algorithms/sorting/heap-sort)\n  * `B` [Sortowanie przez scalanie](src/algorithms/sorting/merge-sort)\n  * `B` [Sortowanie szybkie](src/algorithms/sorting/quick-sort) - wdrożenia w miejscu i nie na miejscu\n  * `B` [Sortowanie Shella](src/algorithms/sorting/shell-sort)\n  * `B` [Sortowanie przez zliczanie](src/algorithms/sorting/counting-sort)\n  * `B` [Sortowanie pozycyjne](src/algorithms/sorting/radix-sort)\n* **Drzewa**\n  * `B` [Przeszukiwanie w głąb](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Przeszukiwanie wszerz](src/algorithms/tree/breadth-first-search) (BFS)\n* **Grafy**\n  * `B` [Przeszukiwanie w głąb](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Przeszukiwanie wszerz](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Algorytm Kruskala](src/algorithms/graph/kruskal) - znalezienie Minimalnego Drzewa Opinającego (MST) dla ważonego nieukierunkowanego wykresu\n  * `A` [Algorytm Dijkstry](src/algorithms/graph/dijkstra) - znajdowanie  najkrótszej ścieżki z pojedynczego źródła w grafie\n  * `A` [Algorytm Bellmana-Forda](src/algorithms/graph/bellman-ford) - znajdowanie najkrótszych ścieżek do wszystkich wierzchołków wykresu z jednego wierzchołka\n  * `A` [Algorytm Floyd-Warshalla](src/algorithms/graph/floyd-warshall) - znajdź najkrótsze ścieżki między wszystkimi parami wierzchołków\n  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - zarówno dla wykresów skierowanych, jak i nieukierunkowanych(wersje oparte na DFS i Rozłączny Zestaw)\n  * `A` [Algorytm Prima](src/algorithms/graph/prim) - znalezienie Minimalnego Drzewa Opinającego (MST) dla ważonego nieukierunkowanego wykresu\n  * `A` [Sortowanie Topologiczne](src/algorithms/graph/topological-sorting) - metoda DFS\n  * `A` [Punkty Artykulacji](src/algorithms/graph/articulation-points) - Algorytm Tarjana (oparty o DFS)\n  * `A` [Mosty](src/algorithms/graph/bridges) - Oparty na algorytmie DFS\n  * `A` [Ścieżka Euleriana i Obwód Euleriana](src/algorithms/graph/eulerian-path) - Algorytm Fleurya - Odwiedź każdą krawędź dokładnie raz\n  * `A` [Cykl Hamiltoniana](src/algorithms/graph/hamiltonian-cycle) - Odwiedź każdy wierzchołek dokładnie raz\n  * `A` [Silnie Połączone Komponenty](src/algorithms/graph/strongly-connected-components) - Algorytm Kosaraja\n  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - najkrótsza ścieżka która odwiedza każde miasto i wraca miasta początkującego\n* **Niezkategorizowane**\n  * `B` [Wieża Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Kwadratowa Matryca Obrotu](src/algorithms/uncategorized/square-matrix-rotation) - algorytm w miejscu\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - cofanie, dynamiczne programowanie (od góry do dołu + od dołu do góry) i przykłady chciwego\n  * `B` [Unikatowe Ścieżki](src/algorithms/uncategorized/unique-paths) - cofanie, dynamiczne programowanie i przykłady oparte na Trójkącie Pascala\n  * `A` [Problem N-Queens](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n\n### Algorytmy według paradygmatu\n\nParadygmat algorytmiczny jest ogólną metodą lub podejściem, które jest\npodstawą projektowania klasy algorytmów. Jest abstrakcją wyższą niż\npojęcie algorytmu, podobnie jak algorytm jest abstrakcją wyższą niż\nprogram komputerowy.\n\n* **Metoda Siłowa** - Sprawdza wszystkie możliwosci i wybiera  najlepsze rozwiązanie.\n  * `B` [Wyszukiwanie Liniowe](src/algorithms/search/linear-search)\n  * `A` [Maksymalna Podtablica](src/algorithms/sets/maximum-subarray)\n  * `A` [Problem z Podróżującym Sprzedawcą](src/algorithms/graph/travelling-salesman) - najkrótsza możliwa trasa, która odwiedza każde miasto i wraca do miasta początkowego\n* **Chciwy** - wybierz najlepszą opcję w obecnym czasie, bez względu na przyszłość\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `A` [Niezwiązany Problem Knapsacka ](src/algorithms/sets/knapsack-problem)\n  * `A` [Algorytm Dijkstry](src/algorithms/graph/dijkstra) -\nznalezienie najkrótszej ścieżki do wszystkich wierzchołków grafu\n  * `A` [Algorytm Prima](src/algorithms/graph/prim) - znalezienie Minimalnego Drzewa Opinającego (MST) dla ważonego nieukierunkowanego wykresu\n  * `A` [Algorytm Kruskala](src/algorithms/graph/kruskal) - znalezienie Minimalnego Drzewa Opinającego (MST) dla ważonego nieukierunkowanego wykresu\n* **Dziel i Zwyciężaj** - podziel problem na mniejsze części, a następnie rozwiąż te części\n  * `B` [Wyszukiwanie Binarne](src/algorithms/search/binary-search)\n  * `B` [Wieża Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Trójkąt Pascala](src/algorithms/math/pascal-triangle)\n  * `B` [Algorytm Euclideana](src/algorithms/math/euclidean-algorithm) - obliczyć Największy Wspólny Dzielnik(GCD)\n  * `B` [Sortowanie przez scalanie](src/algorithms/sorting/merge-sort)\n  * `B` [Szybkie Sortowanie](src/algorithms/sorting/quick-sort)\n  * `B` [Drzewo Przeszukiwania W Głąb](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Graf Przeszukiwania W Głąb](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `A` [Permutacje](src/algorithms/sets/permutations) (z albo bez powtórzeń)\n  * `A` [Kombinacje](src/algorithms/sets/combinations) (z albo bez powtórzeń)\n* **Programowanie Dynamiczne** - zbuduj rozwiązanie, korzystając z wcześniej znalezionych podrzędnych rozwiązań\n  * `B` [Ciąg Fibonacciego](src/algorithms/math/fibonacci)\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Unikatowe Scieżki](src/algorithms/uncategorized/unique-paths)\n  * `A` [Dystans Levenshteina](src/algorithms/string/levenshtein-distance) - minimalna odległość edycji między dwiema sekwencjami\n  * `A` [Najdłuższa Wspólna Podsekwencja](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Najdłuższa Wspólna Podłańcucha](src/algorithms/string/longest-common-substring)\n  * `A` [Najdłuższa Wzrostająca Podsekwencja](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Najkrótsza Wspólna Supersekwencja](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [0/1 Problem Knapsacka](src/algorithms/sets/knapsack-problem)\n  * `A` [Partycja Całkowita](src/algorithms/math/integer-partition)\n  * `A` [Maksymalne Podtablice](src/algorithms/sets/maximum-subarray)\n  * `A` [Algorytm Bellman-Forda](src/algorithms/graph/bellman-ford) - znalezienie najkrótszej ścieżki wszystkich wierzchołków wykresu\n  * `A` [Algorytm Floyd-Warshalla](src/algorithms/graph/floyd-warshall) -\nznajdź najkrótsze ścieżki między wszystkimi parami wierzchołków\n  * `A` [Dopasowanie Wyrażeń Regularnych](src/algorithms/string/regular-expression-matching)\n* **Algorytm z nawrotami** - podobny do metody siłowej, próbuje wygenerować wszystkie możliwe rozwiązania, jednak za każdym razem generujesz następne rozwiązanie które testujesz\njeżeli zaspokaja wszystkie warunki, tylko wtedy generuje kolejne rozwiązania. W innym wypadku, cofa sie, i podąża inna ścieżka znaleźenia rozwiązania. Zazwyczaj, używane jest przejście przez Przeszukiwania W Głąb(DFS) przestrzeni stanów.\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Unikatowe Scieżki](src/algorithms/uncategorized/unique-paths)\n  * `A` [Cykl Hamiltoniana](src/algorithms/graph/hamiltonian-cycle) - Odwiedź każdy wierzchołek dokładnie raz\n  * `A` [Problem N-Queens](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n  * `A` [Zestaw Sumy](src/algorithms/sets/combination-sum) - znajduje wszystkie zestawy które tworzą określoną sumę\n* **Metoda Podziału i Ograniczeń** - Pamięta o niskonakładowym rozwiązaniu znalezionym na każdym etapie szukania nawrotu,\nużywa kosztu niskonakładowego kosztu, które dotychczas zostało znalezione jako niska granica najmniejszego kosztu\ndo rozwiązanie problemu, aby odrzucić cząstkowe rozwiązania o kosztach większych niż niskonakładowe\nrozwiązanie znalezione do tej pory.\nZazwyczan trajektoria BFS, w połączeniu z trajektorią Przeszukiwania W Głąb (DFS) drzewa przestrzeni stanów jest użyte.\n\n## Jak używać repozytorium\n\n**Zainstaluj wszystkie zależnosci**\n```\nnpm install\n```\n\n**Uruchom ESLint**\n\nMożesz to uruchomić aby sprawdzić jakość kodu.\n\n```\nnpm run lint\n```\n\n**Uruchom wszystkie testy**\n```\nnpm test\n```\n\n**Uruchom testy używając określonej nazwy**\n```\nnpm test -- 'LinkedList'\n```\n\n**Playground**\n\nMożesz pociwiczyć ze strukturą danych i algorytmami w `./src/playground/playground.js` zakartotekuj i napisz\ntesty do tego w `./src/playground/__test__/playground.test.js`.\n\nNastępnie uruchom następującą komendę w celu przetestowania czy twoje kod działa według oczekiwań:\n\n```\nnpm test -- 'playground'\n```\n\n## Pomocne informacje\n\n### Źródła\n\n[â–¶ Struktury Danych i Algorytmy na YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Big O Notacja\n\nKolejność wzrastania algorytmów według Big O notacji.\n\n![Big O grafy](./assets/big-o-graph.png)\n\nŹródło: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nPoniżej umieszczamy listę najbardziej używanych Big O notacji i ich porównania wydajności do róznych rozmiarów z wprowadzonych danych.\n\n| Big O notacja  | Obliczenia na 10 elementów   | Obliczenia na 100 elementów   | Obliczenia na 1000 elementów    |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### Złożoność operacji struktury danych\n\n| Struktura Danych                | Dostęp    | Szukaj    | Umieszczanie | Usuwanie  | Komentarze   |\n| ------------------------------- | :-------: | :-------: | :----------: | :-------: | :----------- |\n| **Szereg**                      | 1         | n         | n            | n         |              |\n| **Sterta**                      | n         | n         | 1            | 1         |              |\n| **Kolejka**                     | n         | n         | 1            | 1         |              |\n| **Lista Powiązana**             | n         | n         | 1            | 1         |              |\n| **Tablica funkcji mieszanej**   | -         | n         | n            | n         | W wypadku idealnej funkcji skrótu koszt mógłby sie równać O(1) |\n| **Binarne Drzewo Poszukiwań**   | n         | n         | n            | n         | W przypadku zrównoważonych kosztów drzew byłoby O(log(n)) |\n| **B-Drzewo**                    | log(n)    | log(n)    | log(n)       | log(n)    |              |\n| **Drzewa czerwono-czarne**      | log(n)    | log(n)    | log(n)       | log(n)    |              |\n| **AVL Drzewo**                  | log(n)    | log(n)    | log(n)       | log(n)    |              |\n| **Filtr Blooma**                | -         | 1         | 1            | -         | Fałszywe dotatnie są możliwe podczas wyszukiwania |\n\n### Sortowanie Tablic Złożoności Algorytmów\n\n| Nazwa                               | Najlepszy       | Średni              | Najgorszy           | Pamięć    | Stabilność  | Komentarze  |\n| ----------------------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :---------: | :---------- |\n| **Sortowanie bąbelkowe**            | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes         |             |\n| **Sortowanie przez wstawianie**     | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Yes         |             |\n| **Sortowanie przez wybieranie**     | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | No          |             |\n| **Sortowanie przez kopcowanie**     | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | No          |             |\n| **Sortowanie przez scalanie**       | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Yes         |             |\n| **Szybkie sortowanie**              | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | No          | Szybkie sortowanie jest zazwyczaj robione w miejsce O(log(n)) stosu przestrzeni |\n| **Sortowanie Shella**               | n&nbsp;log(n)   | zależy od luki w układzie   | n&nbsp;(log(n))<sup>2</sup>  | 1         | No         |           |\n| **Sortowanie przez zliczanie**      | n + r           | n + r               | n + r               | n + r     | Yes         | r - największy numer w tablicy|\n| **Sortowanie Radix**                | n * k           | n * k               | n * k               | n + k     | Yes         | k -długość najdłuższego klucza |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.pt-BR.md",
          "type": "blob",
          "size": 22.017578125,
          "content": "# Estrutura de Dados e Algoritmos em JavaScript\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nEste repositório contém exemplos baseados em JavaScript de muitos\nalgoritmos e estruturas de dados populares.\n\nCada algoritmo e estrutura de dados possui seu próprio README\ncom explicações relacionadas e links para leitura adicional (incluindo\nvídeos para YouTube)\n\n_Leia isto em outros idiomas:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/)\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n## Estrutura de Dados\n\nUma estrutura de dados é uma maneira particular de organizar e armazenar dados em um computador para que ele possa\nser acessado e modificado de forma eficiente. Mais precisamente, uma estrutura de dados é uma coleção de valores de dados, as relações entre eles e as funções ou operações que podem ser aplicadas aos dados.\n\n`B` - Iniciante, `A` - Avançado\n\n* `B` [Lista Encadeada (Linked List)](src/data-structures/linked-list/README.pt-BR.md)\n* `B` [Lista Duplamente Ligada (Doubly Linked List)](src/data-structures/doubly-linked-list/README.pt-BR.md)\n* `B` [Fila (Queue)](src/data-structures/queue/README.pt-BR.md)\n* `B` [Pilha (Stack)](src/data-structures/stack/README.pt-BR.md)\n* `B` [Tabela de Hash (Hash Table)](src/data-structures/hash-table/README.pt-BR.md)\n* `B` [Heap](src/data-structures/heap/README.pt-BR.md) - versões de heap máximo e mínimo\n* `B` [Fila de Prioridade (Priority Queue)](src/data-structures/priority-queue/README.pt-BR.md)\n* `A` [Árvore de Prefixos (Trie)](src/data-structures/trie/README.pt-BR.md)\n* `A` [Árvore (Tree)](src/data-structures/tree/README.pt-BR.md)\n  * `A` [Árvore de Pesquisa Binária (Binary Search Tree)](src/data-structures/tree/binary-search-tree/README.pt-BR.md)\n  * `A` [Árvore AVL (AVL Tree)](src/data-structures/tree/avl-tree/README.pt-BR.md)\n  * `A` [Árvore Rubro-Negra (Red-Black Tree)](src/data-structures/tree/red-black-tree/README.pt-BR.md)\n  * `A` [Árvore de Segmento (Segment Tree)](src/data-structures/tree/segment-tree/README.pt-BR.md) - com exemplos de consultas min / max / sum range\n  * `A` [Árvore Fenwick (Fenwick Tree)](src/data-structures/tree/fenwick-tree/README.pt-BR.md) (Árvore indexada binária)\n* `A` [Grafo (Graph)](src/data-structures/graph/README.pt-BR.md) (ambos dirigidos e não direcionados)\n* `A` [Conjunto Disjunto (Disjoint Set)](src/data-structures/disjoint-set/README.pt-BR.md)\n* `A` [Filtro Bloom (Bloom Filter)](src/data-structures/bloom-filter/README.pt-BR.md)\n\n## Algoritmos\n\nUm algoritmo é uma especificação inequívoca de como resolver uma classe de problemas. Isto é\num conjunto de regras que define precisamente uma sequência de operações.\n\n`B` - Iniciante, `A` - Avançado\n\n### Algoritmos por Tópico\n\n* **Matemática**\n  * `B` [Manipulação Bit](src/algorithms/math/bits) - set/get/update/clear bits, multiplicação / divisão por dois, tornar negativo etc.\n  * `B` [Fatorial](src/algorithms/math/factorial)\n  * `B` [Número de Fibonacci](src/algorithms/math/fibonacci)\n  * `B` [Teste de Primalidade](src/algorithms/math/primality-test) (método de divisão experimental)\n  * `B` [Algoritmo Euclidiano](src/algorithms/math/euclidean-algorithm) - Calcular o Máximo Divisor Comum (MDC)\n  * `B` [Mínimo Múltiplo Comum](src/algorithms/math/least-common-multiple) Calcular o Mínimo Múltiplo Comum (MMC)\n  * `B` [Peneira de Eratóstenes](src/algorithms/math/sieve-of-eratosthenes) - Encontrar todos os números primos até um determinado limite\n  * `B` [Potência de Dois](src/algorithms/math/is-power-of-two) - Verifique se o número é a potência de dois (algoritmos ingênuos e bit a bit)\n  * `B` [Triângulo de Pascal](src/algorithms/math/pascal-triangle)\n  * `B` [Número Complexo](src/algorithms/math/complex-number) - Números complexos e operações básicas com eles\n  * `A` [Partição Inteira](src/algorithms/math/integer-partition)\n  * `A` [Algoritmo Liu Hui π](src/algorithms/math/liu-hui) - Cálculos aproximados de π baseados em N-gons\n* **Conjuntos**\n  * `B` [Produto Cartesiano](src/algorithms/sets/cartesian-product) - Produto de vários conjuntos\n  * `B` [Permutações de Fisher–Yates](src/algorithms/sets/fisher-yates) - Permutação aleatória de uma sequência finita\n  * `A` [Potência e Conjunto](src/algorithms/sets/power-set) - Todos os subconjuntos de um conjunto\n  * `A` [Permutações](src/algorithms/sets/permutations) (com e sem repetições)\n  * `A` [Combinações](src/algorithms/sets/combinations) (com e sem repetições)\n  * `A` [Mais Longa Subsequência Comum](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Maior Subsequência Crescente](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Supersequência Comum Mais Curta](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Problema da Mochila](src/algorithms/sets/knapsack-problem) - \"0/1\" e \"Não consolidado\"\n  * `A` [Subarray Máximo](src/algorithms/sets/maximum-subarray) - \"Força bruta\" e \"Programação Dinâmica\", versões de Kadane\n  * `A` [Soma de Combinação](src/algorithms/sets/combination-sum) - Encontre todas as combinações que formam uma soma específica\n* **Cadeia de Caracteres**\n  * `B` [Distância de Hamming](src/algorithms/string/hamming-distance) - Número de posições em que os símbolos são diferentes\n  * `B` [Palíndromos](src/algorithms/string/palindrome) - Verifique se a cadeia de caracteres (string) é a mesma ao contrário\n  * `A` [Distância Levenshtein](src/algorithms/string/levenshtein-distance) - Distância mínima de edição entre duas sequências\n  * `A` [Algoritmo Knuth–Morris–Pratt](src/algorithms/string/knuth-morris-pratt) (Algoritmo KMP) - Pesquisa de substring (correspondência de padrão)\n  * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - Pesquisa de substring (correspondência de padrão)\n  * `A` [Algoritmo de Rabin Karp](src/algorithms/string/rabin-karp) - Pesquisa de substring\n  * `A` [Substring Comum Mais Longa](src/algorithms/string/longest-common-substring)\n  * `A` [Expressões Regulares Correspondentes](src/algorithms/string/regular-expression-matching)\n* **Buscas**\n  * `B` [Busca Linear (Linear Search)](src/algorithms/search/linear-search)\n  * `B` [Busca por Saltos (Jump Search)](src/algorithms/search/jump-search) - Pesquisa em matriz ordenada\n  * `B` [Busca Binária (Binary Search)](src/algorithms/search/binary-search) - Pesquisa em matriz ordenada\n  * `B` [Busca por Interpolação (Interpolation Search)](src/algorithms/search/interpolation-search) - Pesquisa em matriz classificada uniformemente distribuída\n* **Classificação**\n  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)\n  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)\n  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)\n  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - Implementações local e não local\n  * `B` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)\n  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)\n* **Árvores**\n  * `B` [Busca em Profundidade (Depth-First Search)](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Busca em Largura (Breadth-First Search)](src/algorithms/tree/breadth-first-search) (BFS)\n* **Grafos**\n  * `B` [Busca em Profundidade (Depth-First Search)](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Busca em Largura (Breadth-First Search)](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Algoritmo de Kruskal](src/algorithms/graph/kruskal) - Encontrando Árvore Mínima de Abrangência (MST) para grafo conexo com pesos\n  * `A` [Algoritmo de Dijkstra](src/algorithms/graph/dijkstra) - Encontrar caminhos mais curtos para todos os vértices do grafo a partir de um único vértice\n  * `A` [Algoritmo de Bellman-Ford](src/algorithms/graph/bellman-ford) - Encontrar caminhos mais curtos para todos os vértices do grafo a partir de um único vértice\n  * `A` [Algoritmo de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - Encontrar caminhos mais curtos entre todos os pares de vértices\n  * `A` [Detectar Ciclo](src/algorithms/graph/detect-cycle) - Para grafos direcionados e não direcionados (versões baseadas em DFS e Conjunto Disjuntivo)\n  * `A` [Algoritmo de Prim](src/algorithms/graph/prim) - Encontrando Árvore Mínima de Abrangência (MST) para grafo não direcionado ponderado\n  * `A` [Ordenação Topológica](src/algorithms/graph/topological-sorting) - Métodos DFS\n  * `A` [Pontos de Articulação](src/algorithms/graph/articulation-points) - O algoritmo de Tarjan (baseado em DFS)\n  * `A` [Pontes](src/algorithms/graph/bridges) - Algoritmo baseado em DFS\n  * `A` [Caminho e Circuito Euleriano](src/algorithms/graph/eulerian-path) - Algoritmo de Fleury - Visite todas as bordas exatamente uma vez\n  * `A` [Ciclo Hamiltoniano](src/algorithms/graph/hamiltonian-cycle) - Visite todas as bordas exatamente uma vez\n  * `A` [Componentes Fortemente Conectados](src/algorithms/graph/strongly-connected-components) - Algoritmo de Kosaraju\n  * `A` [Problema do Caixeiro Viajante](src/algorithms/graph/travelling-salesman) - Rota mais curta possível que visita cada cidade e retorna à cidade de origem\n* **Criptografia**\n  * `B` [Hash Polinomial](src/algorithms/cryptography/polynomial-hash) - Função de hash de rolagem baseada em polinômio\n* **Sem categoria**\n  * `B` [Torre de Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Rotação de Matriz Quadrada](src/algorithms/uncategorized/square-matrix-rotation) - Algoritmo no local\n  * `B` [Jogo do Salto](src/algorithms/uncategorized/jump-game) - Backtracking, programação dinâmica (top-down + bottom-up) e exemplos gananciosos\n  * `B` [Caminhos Únicos](src/algorithms/uncategorized/unique-paths) - Backtracking, programação dinâmica e exemplos baseados no triângulo de Pascal\n  * `B` [Terraços de Chuva](src/algorithms/uncategorized/rain-terraces) - Problema de retenção da água da chuva (programação dinâmica e versões de força bruta)\n  * `A` [Problema das N-Rainhas](src/algorithms/uncategorized/n-queens)\n  * `A` [Passeio do Cavaleiro](src/algorithms/uncategorized/knight-tour)\n\n### Algoritmos por Paradigma\n\nUm paradigma algorítmico é um método ou abordagem genérica subjacente ao design de uma classe\nde algoritmos. É uma abstração maior do que a noção de um algoritmo, assim como\nalgoritmo é uma abstração maior que um programa de computador.\n\n* **Força bruta** - Pense em todas as possibilidades e escolha a melhor solução\n  * `B` [Busca Linear (Linear Search)](src/algorithms/search/linear-search)\n  * `B` [Terraços de Chuva](src/algorithms/uncategorized/rain-terraces) - Problema de retenção de água da chuva (programação dinâmica e versões de força bruta)\n  * `A` [Subarray Máximo](src/algorithms/sets/maximum-subarray)\n  * `A` [Problema do Caixeiro Viajante](src/algorithms/graph/travelling-salesman) - Rota mais curta possível que visita cada cidade e retorna à cidade de origem\n* **Ganância** - Escolha a melhor opção no momento, sem qualquer consideração pelo futuro\n  * `B` [Jogo do Salto](src/algorithms/uncategorized/jump-game)\n  * `A` [Problema da Mochila](src/algorithms/sets/knapsack-problem)\n  * `A` [Algoritmo de Dijkstra](src/algorithms/graph/dijkstra) - Encontrar caminhos mais curtos para todos os vértices do grafo a partir de um único vértice\n  * `A` [Algoritmo de Prim](src/algorithms/graph/prim) - Encontrando Árvore Mínima de Abrangência (MST) para grafo não direcionado ponderado\n  * `A` [Algoritmo de Kruskal](src/algorithms/graph/kruskal) - Encontrando Árvore Mínima de Abrangência (MST) para grafo conexo com pesos\n* **Dividir e Conquistar** - Dividir o problema em partes menores e então resolver essas partes\n  * `B` [Busca Binária (Binary Search)](src/algorithms/search/binary-search)\n  * `B` [Torre de Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Triângulo de Pascal](src/algorithms/math/pascal-triangle)\n  * `B` [Algoritmo Euclidiano](src/algorithms/math/euclidean-algorithm) - Calcular o Máximo Divisor Comum (MDC)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort)\n  * `B` [Busca em Profundidade (Depth-First Search)](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Busca em Largura (Breadth-First Search)](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Jogo do Salto](src/algorithms/uncategorized/jump-game)\n  * `A` [Permutações](src/algorithms/sets/permutations) (com e sem repetições)\n  * `A` [Combinações](src/algorithms/sets/combinations) (com e sem repetições)\n* **Programação Dinâmica** - Criar uma solução usando sub-soluções encontradas anteriormente\n  * `B` [Número de Fibonacci](src/algorithms/math/fibonacci)\n  * `B` [Jogo do Salto](src/algorithms/uncategorized/jump-game)\n  * `B` [Caminhos Únicos](src/algorithms/uncategorized/unique-paths)\n  * `B` [Terraços de Chuva](src/algorithms/uncategorized/rain-terraces) - Trapping problema da água da chuva\n  * `A` [Distância Levenshtein](src/algorithms/string/levenshtein-distance) - Distância mínima de edição entre duas sequências\n  * `A` [Mais Longa Subsequência Comum](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Substring Comum Mais Longa](src/algorithms/string/longest-common-substring)\n  * `A` [Maior Subsequência Crescente](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Supersequência Comum Mais Curta](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Problema da Mochila](src/algorithms/sets/knapsack-problem)\n  * `A` [Partição Inteira](src/algorithms/math/integer-partition)\n  * `A` [Subarray Máximo](src/algorithms/sets/maximum-subarray)\n  * `A` [Algoritmo de Bellman-Ford](src/algorithms/graph/bellman-ford) - Encontrar caminhos mais curtos para todos os vértices do grafo a partir de um único vértice\n  * `A` [Algoritmo de Floyd-Warshall](src/algorithms/graph/floyd-warshall) - Encontrar caminhos mais curtos entre todos os pares de vértices\n  * `A` [Expressões Regulares Correspondentes](src/algorithms/string/regular-expression-matching)\n* **Backtracking** - Da mesma forma que a força bruta, tente gerar todas as soluções possíveis, mas, cada vez que você gerar a próxima solução será necessário testar se a mesma satisfaz todas as condições, e só então continuará a gerar as soluções subsequentes. Caso contrário, volte atrás e siga um caminho diferente para encontrar uma solução. Normalmente, a passagem DFS do espaço de estados está sendo usada.\n  * `B` [Jogo do Salto](src/algorithms/uncategorized/jump-game)\n  * `B` [Caminhos Únicos](src/algorithms/uncategorized/unique-paths)\n  * `A` [Ciclo Hamiltoniano](src/algorithms/graph/hamiltonian-cycle) - Visite todos os vértices exatamente uma vez\n  * `A` [Problema das N-Rainhas](src/algorithms/uncategorized/n-queens)\n  * `A` [Passeio do Cavaleiro](src/algorithms/uncategorized/knight-tour)\n  * `A` [Soma de Combinação](src/algorithms/sets/combination-sum) - Encontre todas as combinações que formam uma soma específica\n* **Branch & Bound** - Lembre-se da solução de menor custo encontrada em cada etapa do retrocesso, pesquisar e usar o custo da solução de menor custo encontrada até o limite inferior do custo de\nsolução de menor custo para o problema, a fim de descartar soluções parciais com custos maiores que o\nsolução de menor custo encontrada até o momento. Normalmente, a travessia BFS em combinação com a passagem DFS do espaço de estados\nárvore está sendo usada\n\n## Como usar este repositório\n\n**Instalar todas as dependências**\n```\nnpm install\n```\n\n**Executar o ESLint**\n\nVocê pode querer executá-lo para verificar a qualidade do código.\n\n```\nnpm run lint\n```\n\n**Execute todos os testes**\n```\nnpm test\n```\n\n**Executar testes por nome**\n```\nnpm test -- 'LinkedList'\n```\n**Solução de problemas**\n\nCaso o linting ou o teste estejam falhando, tente excluir a pasta node_modules e reinstalar os pacotes npm:\n```\nrm -rf ./node_modules\nnpm i\n```\n\nVerifique também se você está usando uma versão correta do Node (>=14.16.0). Se você estiver usando [nvm](https://github.com/nvm-sh/nvm) para gerenciamento de versão do Node, você pode executar `nvm use` a partir da pasta raiz do projeto e a versão correta será escolhida.\n\n**Playground**\n\nVocê pode brincar com estruturas de dados e algoritmos no arquivo `./src/playground/playground.js` e escrever\ntestes para isso em `./src/playground/__test__/playground.test.js`.\n\nEm seguida, basta executar o seguinte comando para testar se o código do seu playground funciona conforme o esperado:\n\n```\nnpm test -- 'playground'\n```\n\n## Informação útil\n\n### Referências\n\n- [▶ Estruturas de Dados e Algoritmos no YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n- [✍🏻 Esboços de Estruturas de Dados](https://okso.app/showcase/data-structures)\n\n### Notação Big O\n\nA notação Big O é usada para classificar algoritmos de acordo com a forma como seu tempo de execução ou requisitos de espaço crescem à medida que o tamanho da entrada aumenta. No gráfico abaixo você pode encontrar as ordens mais comuns de crescimento de algoritmos especificados na notação Big O.\n\n![Notação Big-O](./assets/big-o-graph.png)\n\nFonte: [Notação Big-O Dicas](http://bigocheatsheet.com/).\n\nAbaixo está a lista de algumas das notações Big O mais usadas e suas comparações de desempenho em relação aos diferentes tamanhos dos dados de entrada.\n\n| Notação Big-O  | Cálculos para 10 elementos   | Cálculos para 100 elementos   | Cálculos para 1000 elementos    |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### Complexidade de operações de estrutura de dados\n\n| Estrutura de dados      | Acesso    | Busca     | Inserção  | Eliminação | Comentários |\n| ----------------------- | :-------: | :-------: | :-------: | :-------:  | :--------   |\n| **Array**               | 1         | n         | n         | n          |             |\n| **Stack**               | n         | n         | 1         | 1          |             |\n| **Queue**               | n         | n         | 1         | 1          |             |\n| **Linked List**         | n         | n         | 1         | 1          |             |\n| **Hash Table**          | -         | n         | n         | n          | Em caso de uma função hash perfeita, os custos seriam O(1) |\n| **Binary Search Tree**  | n         | n         | n         | n          | No caso de custos de árvore equilibrados seria O(log(n))\n| **B-Tree**              | log(n)    | log(n)    | log(n)    | log(n)     |             |\n| **Red-Black Tree**      | log(n)    | log(n)    | log(n)    | log(n)     |             |\n| **AVL Tree**            | log(n)    | log(n)    | log(n)    | log(n)     |             |\n| **Bloom Filter**        | -         | 1         | 1         | -          | Falsos positivos são possíveis durante a pesquisa |\n\n### Complexidade dos Algoritmos de Ordenação de Matrizes\n\n| Nome                  | Melhor          | Média               | Pior                | Mémoria   | Estável   | Comentários |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :--------   |\n| **Bubble sort**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Sim       |             |\n| **Insertion sort**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Sim       |             |\n| **Selection sort**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Não       |             |\n| **Heap sort**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | Não       |             |\n| **Merge sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Sim       |             |\n| **Quick sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | Não       | O Quicksort geralmente é feito no local com espaço de pilha O(log(n)) |\n| **Shell sort**        | n&nbsp;log(n)   | depende da sequência de lacunas | n&nbsp;(log(n))<sup>2</sup>     | 1      | Não    |                   |\n| **Counting sort**     | n + r           | n + r               | n + r               | n + r     | Sim       | r - maior número na matriz          |\n| **Radix sort**        | n * k           | n * k               | n * k               | n + k     | Sim       | k - comprimento da chave mais longa |\n\n> ℹ️ Outros [projetos](https://trekhleb.dev/projects/) e [artigos](https://trekhleb.dev/blog/) sobre JavaScript e algoritmos em [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.ru-RU.md",
          "type": "blob",
          "size": 34.0361328125,
          "content": "# Алгоритмы и структуры данных на JavaScript\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nВ этом репозитории содержатся базовые JavaScript-примеры многих популярных алгоритмов и структур данных.\n\nДля каждого алгоритма и структуры данных есть свой файл README с соответствующими пояснениями и ссылками на материалы для дальнейшего изучения (в том числе и ссылки на видеоролики в YouTube).\n\n_Читать на других языках:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n*☝ Замечание: этот репозиторий предназначен для учебно-исследовательских целей (**не** для использования в продакшн-системах).*\n\n## Структуры данных\n\nСтруктура данных (англ. data structure) — программная единица, позволяющая хранить и обрабатывать множество однотипных и/или логически связанных данных в вычислительной технике. Для добавления, поиска, изменения и удаления данных структура данных предоставляет некоторый набор функций, составляющих её интерфейс.\n\n`B` - Базовый уровень, `A` - Продвинутый уровень\n\n* `B` [Связный список](src/data-structures/linked-list)\n* `B` [Двунаправленный связный список](src/data-structures/doubly-linked-list)\n* `B` [Очередь](src/data-structures/queue)\n* `B` [Стек](src/data-structures/stack)\n* `B` [Хеш-таблица](src/data-structures/hash-table)\n* `B` [Куча](src/data-structures/heap) — максимальная и минимальная версии\n* `B` [Очередь с приоритетом](src/data-structures/priority-queue)\n* `A` [Префиксное дерево](src/data-structures/trie)\n* `A` [Деревья](src/data-structures/tree)\n  * `A` [Двоичное дерево поиска](src/data-structures/tree/binary-search-tree)\n  * `A` [АВЛ-дерево](src/data-structures/tree/avl-tree)\n  * `A` [Красно-чёрное дерево](src/data-structures/tree/red-black-tree)\n  * `A` [Дерево отрезков](src/data-structures/tree/segment-tree) — для минимума, максимума и суммы отрезков\n  * `A` [Дерево Фенвика](src/data-structures/tree/fenwick-tree) (двоичное индексированное дерево)\n* `A` [Граф](src/data-structures/graph) (ориентированный и неориентированный)\n* `A` [Система непересекающихся множеств](src/data-structures/disjoint-set)\n* `A` [Фильтр Блума](src/data-structures/bloom-filter)\n\n## Алгоритмы\n\nАлгоритм — конечная совокупность точно заданных правил решения некоторого класса задач или набор инструкций, описывающих порядок действий исполнителя для решения некоторой задачи.\n\n`B` - Базовый уровень, `A` - Продвинутый уровень\n\n### Алгоритмы по тематике\n\n* **Математика**\n  * `B` [Битовые манипуляции](src/algorithms/math/bits) — получение/запись/сброс/обновление битов, умножение/деление на 2, сделать отрицательным и т.п.\n  * `B` [Двоичное число с плавающей запятой](src/algorithms/math/binary-floating-point) - двоичное представление чисел с плавающей запятой\n  * `B` [Факториал](src/algorithms/math/factorial)\n  * `B` [Числа Фибоначчи](src/algorithms/math/fibonacci) — классическое решение, решение в замкнутой форме\n  * `B` [Простые множители](src/algorithms/math/prime-factors) - нахождение простых множителей и их подсчёт с использованием теоремы Харди-Рамануджана\n  * `B` [Тест простоты](src/algorithms/math/primality-test) (метод пробного деления)\n  * `B` [Алгоритм Евклида](src/algorithms/math/euclidean-algorithm) — нахождение наибольшего общего делителя (НОД)\n  * `B` [Наименьшее общее кратное](src/algorithms/math/least-common-multiple) (НОК)\n  * `B` [Решето Эратосфена](src/algorithms/math/sieve-of-eratosthenes) — нахождение всех простых чисел до некоторого целого числа n\n  * `B` [Степень двойки](src/algorithms/math/is-power-of-two) — является ли число степенью двойки (простое и побитовое решения)\n  * `B` [Треугольник Паскаля](src/algorithms/math/pascal-triangle)\n  * `B` [Комплексные числа](src/algorithms/math/complex-number) — комплексные числа, базовые операции над ними\n  * `B` [Радианы и градусы](src/algorithms/math/radian) — конвертирование радианов в градусы и наоборот\n  * `B` [Быстрое возведение в степень](src/algorithms/math/fast-powering)\n  * `B` [Схема Горнера](src/algorithms/math/horner-method) - оценка полиномов\n  * `B` [Матрицы](src/algorithms/math/matrix) - матрицы и основные операции с матрицами (умножение, транспонирование и т.д.)\n  * `B` [Евклидово расстояние](src/algorithms/math/euclidean-distance) - расстояние между двумя точками/векторами/матрицами\n  * `A` [Разбиение числа](src/algorithms/math/integer-partition)\n  * `A` [Квадратный корень](src/algorithms/math/square-root) — метод Ньютона\n  * `A` [Алгоритм Лю Хуэя](src/algorithms/math/liu-hui) — расчёт числа π с заданной точностью методом вписанных правильных многоугольников\n  * `A` [Дискретное преобразование Фурье](src/algorithms/math/fourier-transform) — разложение временной функции (сигнала) на частотные составляющие\n* **Множества**\n  * `B` [Декартово произведение](src/algorithms/sets/cartesian-product) — результат перемножения множеств\n  * `B` [Тасование Фишера — Йетса](src/algorithms/sets/fisher-yates) — создание случайных перестановок конечного множества\n  * `A` [Булеан](src/algorithms/sets/power-set) — все подмножества заданного множества (побитовый поиск и поиск с возвратом)\n  * `A` [Перестановки](src/algorithms/sets/permutations) (с повторениями и без повторений)\n  * `A` [Сочетания](src/algorithms/sets/combinations) (с повторениями и без повторений)\n  * `A` [Наибольшая общая подпоследовательность](src/algorithms/sets/longest-common-subsequence)\n  * `A` [Наибольшая увеличивающаяся подпоследовательность](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Наименьшая общая супер-последовательность](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Задача о рюкзаке](src/algorithms/sets/knapsack-problem) — \"0/1\" и \"неограниченный\" рюкзаки\n  * `A` [Максимальный под-массив](src/algorithms/sets/maximum-subarray) — метод полного перебора и алгоритм Кадане\n  * `A` [Комбинации сумм](src/algorithms/sets/combination-sum) — нахождение всех комбинаций, сумма каждой из которых равна заданному числу\n* **Алгоритмы работы со строками**\n  * `B` [Расстояние Хэмминга](src/algorithms/string/hamming-distance) — число позиций, в которых соответствующие символы различны\n  * `A` [Расстояние Левенштейна](src/algorithms/string/levenshtein-distance) — метрика, измеряющая разность между двумя последовательностями\n  * `A` [Алгоритм Кнута — Морриса — Пратта](src/algorithms/string/knuth-morris-pratt) — поиск подстроки (сопоставление с шаблоном)\n  * `A` [Z-функция](src/algorithms/string/z-algorithm) — поиск подстроки (сопоставление с шаблоном)\n  * `A` [Алгоритм Рабина — Карпа](src/algorithms/string/rabin-karp) — поиск подстроки\n  * `A` [Наибольшая общая подстрока](src/algorithms/string/longest-common-substring)\n  * `A` [Разборщик регулярных выражений](src/algorithms/string/regular-expression-matching)\n* **Алгоритмы поиска**\n  * `B` [Линейный поиск](src/algorithms/search/linear-search)\n  * `B` [Поиск с перескоком](src/algorithms/search/jump-search) (поиск блоков) — поиск в упорядоченном массиве\n  * `B` [Двоичный поиск](src/algorithms/search/binary-search) — поиск в упорядоченном массиве\n  * `B` [Интерполяционный поиск](src/algorithms/search/interpolation-search) — поиск в равномерно распределённом упорядоченном массиве.\n* **Алгоритмы сортировки**\n  * `B` [Сортировка пузырьком](src/algorithms/sorting/bubble-sort)\n  * `B` [Сортировка выбором](src/algorithms/sorting/selection-sort)\n  * `B` [Сортировка вставками](src/algorithms/sorting/insertion-sort)\n  * `B` [Пирамидальная сортировка (сортировка кучей)](src/algorithms/sorting/heap-sort)\n  * `B` [Сортировка слиянием](src/algorithms/sorting/merge-sort)\n  * `B` [Быстрая сортировка](src/algorithms/sorting/quick-sort) — с использованием дополнительной памяти и без её использования\n  * `B` [Сортировка Шелла](src/algorithms/sorting/shell-sort)\n  * `B` [Сортировка подсчётом](src/algorithms/sorting/counting-sort)\n  * `B` [Поразрядная сортировка](src/algorithms/sorting/radix-sort)\n* **Связный список**\n  * `B` [Прямой обход](src/algorithms/linked-list/traversal)\n  * `B` [Обратный обход](src/algorithms/linked-list/reverse-traversal)\n* **Деревья**\n  * `B` [Поиск в глубину](src/algorithms/tree/depth-first-search)\n  * `B` [Поиск в ширину](src/algorithms/tree/breadth-first-search)\n* **Графы**\n  * `B` [Поиск в глубину](src/algorithms/graph/depth-first-search)\n  * `B` [Поиск в ширину](src/algorithms/graph/breadth-first-search)\n  * `B` [Алгоритм Краскала](src/algorithms/graph/kruskal) — нахождение минимального остовного дерева для взвешенного неориентированного графа\n  * `A` [Алгоритм Дейкстры](src/algorithms/graph/dijkstra) — нахождение кратчайших путей от одной из вершин графа до всех остальных\n  * `A` [Алгоритм Беллмана — Форда](src/algorithms/graph/bellman-ford) — нахождение кратчайших путей от одной из вершин графа до всех остальных\n  * `A` [Алгоритм Флойда — Уоршелла](src/algorithms/graph/floyd-warshall) — нахождение кратчайших расстояний между всеми вершинами графа\n  * `A` [Задача нахождения цикла](src/algorithms/graph/detect-cycle) — для ориентированных и неориентированных графов (на основе поиска в глубину и системы непересекающихся множеств)\n  * `A` [Алгоритм Прима](src/algorithms/graph/prim) — нахождение минимального остовного дерева для взвешенного неориентированного графа\n  * `A` [Топологическая сортировка](src/algorithms/graph/topological-sorting) — на основе поиска в глубину\n  * `A` [Шарниры (разделяющие вершины)](src/algorithms/graph/articulation-points) — алгоритм Тарьяна (на основе поиска в глубину)\n  * `A` [Мосты](src/algorithms/graph/bridges) — на основе поиска в глубину\n  * `A` [Эйлеров путь и Эйлеров цикл](src/algorithms/graph/eulerian-path) — алгоритм Флёри (однократное посещение каждой вершины)\n  * `A` [Гамильтонов цикл](src/algorithms/graph/hamiltonian-cycle) — проходит через каждую вершину графа ровно один раз\n  * `A` [Компоненты сильной связности](src/algorithms/graph/strongly-connected-components) — алгоритм Косарайю\n  * `A` [Задача коммивояжёра](src/algorithms/graph/travelling-salesman) — кратчайший маршрут, проходящий через указанные города с последующим возвратом в исходный город\n* **Криптография**\n  * `B` [Полиноминальный хэш](src/algorithms/cryptography/polynomial-hash) — функция кольцевого хэша, основанная на полиноме\n  * `B` [Шифр ​​ограждения рельсов](src/algorithms/cryptography/rail-fence-cipher) - алгоритм транспозиционного шифра для кодирования сообщений\n  * `B` [Шифр Цезаря](src/algorithms/cryptography/caesar-cipher) - простой подстановочный шифр\n  * `B` [Шифр Хилла](src/algorithms/cryptography/hill-cipher) - подстановочный шифр на основе линейной алгебры\n* **Машинное обучение**\n  * `B` [Нано-нейрон](https://github.com/trekhleb/nano-neuron) — 7 простых JavaScript функций, отображающих способности машины к обучению (прямое и обратное распространение)\n  * `B` [k-NN](src/algorithms/ml/knn) - алгоритм классификации k-ближайших соседей\n  * `B` [k-Means](src/algorithms/ml/k-means) - алгоритм кластеризации по методу k-средних\n* **Обработка изображений**\n  * `B` [Резьба по шву](src/algorithms/image-processing/seam-carving) - алгоритм изменения размера изображения с учетом содержания\n* **Статистика**\n  * `B` [Взвешенная случайность](src/algorithms/statistics/weighted-random) - выбор случайного элемента из списка на основе веса элементов\n* **Эволюционные алгоритмы**\n  * `A` [Генетический алгоритм](https://github.com/trekhleb/self-parking-car-evolution) - пример применения генетического алгоритма для обучения самопаркующихся автомобилей\n* **Прочие алгоритмы**\n  * `B` [Ханойская башня](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Поворот квадратной матрицы](src/algorithms/uncategorized/square-matrix-rotation) — используется дополнительная память\n  * `B` [Прыжки](src/algorithms/uncategorized/jump-game) — на основе бэктрекинга, динамического программирования (сверху-вниз + снизу-вверх) и жадных алгоритмов\n  * `B` [Поиск уникальных путей](src/algorithms/uncategorized/unique-paths) — на основе бэктрекинга, динамического программирования и треугольника Паскаля\n  * `B` [Подсчёт дождевой воды](src/algorithms/uncategorized/rain-terraces) — на основе перебора и динамического программирования\n  * `B` [Задача о рекурсивной лестнице](src/algorithms/uncategorized/recursive-staircase) — подсчёт количества путей, по которым можно достичь верха лестницы (4 способа)\n  * `B` [Лучшее время для покупки и продажи акций](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - примеры \"разделяй и властвуй\" и в один проход\n  * `A` [Задача об N ферзях](src/algorithms/uncategorized/n-queens)\n  * `A` [Маршрут коня](src/algorithms/uncategorized/knight-tour)\n\n### Алгоритмы по парадигме программирования\n\nПарадигма программирования — общий метод или подход, лежащий в основе целого класса алгоритмов. Понятие \"парадигма программирования\" является более абстрактным по отношению к понятию \"алгоритм\", которое в свою очередь является более абстрактным по отношению к понятию \"компьютерная программа\".\n\n* **Алгоритмы полного перебора** — поиск лучшего решения исчерпыванием всевозможных вариантов\n  * `B` [Линейный поиск](src/algorithms/search/linear-search)\n  * `B` [Подсчёт дождевой воды](src/algorithms/uncategorized/rain-terraces)\n  * `B` [Задача о рекурсивной лестнице](src/algorithms/uncategorized/recursive-staircase) — подсчёт количества путей, по которым можно достичь верха лестницы\n  * `A` [Максимальный подмассив](src/algorithms/sets/maximum-subarray)\n  * `A` [Задача коммивояжёра](src/algorithms/graph/travelling-salesman) — кратчайший маршрут, проходящий через указанные города с последующим возвратом в исходный город\n  * `A` [Дискретное преобразование Фурье](src/algorithms/math/fourier-transform) — разложение временной функции (сигнала) на частотные составляющие\n* **Жадные алгоритмы** — принятие локально оптимальных решений с учётом допущения об оптимальности конечного решения\n  * `B` [Прыжки](src/algorithms/uncategorized/jump-game)\n  * `A` [Задача о неограниченном рюкзаке](src/algorithms/sets/knapsack-problem)\n  * `A` [Алгоритм Дейкстры](src/algorithms/graph/dijkstra) — нахождение кратчайших путей от одной из вершин графа до всех остальных\n  * `A` [Алгоритм Прима](src/algorithms/graph/prim) — нахождение минимального остовного дерева для взвешенного неориентированного графа\n  * `A` [Алгоритм Краскала](src/algorithms/graph/kruskal) — нахождение минимального остовного дерева для взвешенного неориентированного графа\n* **Разделяй и властвуй** — рекурсивное разбиение решаемой задачи на более мелкие\n  * `B` [Двоичный поиск](src/algorithms/search/binary-search)\n  * `B` [Ханойская башня](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Треугольник Паскаля](src/algorithms/math/pascal-triangle)\n  * `B` [Алгоритм Евклида](src/algorithms/math/euclidean-algorithm) — нахождение наибольшего общего делителя (НОД)\n  * `B` [Сортировка слиянием](src/algorithms/sorting/merge-sort)\n  * `B` [Быстрая сортировка](src/algorithms/sorting/quick-sort)\n  * `B` [Поиск в глубину (дерево)](src/algorithms/tree/depth-first-search)\n  * `B` [Поиск в глубину (граф)](src/algorithms/graph/depth-first-search)\n  * `B` [Матрицы](src/algorithms/math/matrix) - генерирование и обход матриц различной формы\n  * `B` [Прыжки](src/algorithms/uncategorized/jump-game)\n  * `B` [Быстрое возведение в степень](src/algorithms/math/fast-powering)\n  * `B` [Лучшее время для покупки и продажи акций](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - примеры \"разделяй и властвуй\" и в один проход\n  * `A` [Перестановки](src/algorithms/sets/permutations) (с повторениями и без повторений)\n  * `A` [Сочетания](src/algorithms/sets/combinations) (с повторениями и без повторений)\n* **Динамическое программирование** — решение общей задачи конструируется на основе ранее найденных решений подзадач\n  * `B` [Числа Фибоначчи](src/algorithms/math/fibonacci)\n  * `B` [Прыжки](src/algorithms/uncategorized/jump-game)\n  * `B` [Поиск уникальных путей](src/algorithms/uncategorized/unique-paths)\n  * `B` [Подсчёт дождевой воды](src/algorithms/uncategorized/rain-terraces)\n  * `B` [Задача о рекурсивной лестнице](src/algorithms/uncategorized/recursive-staircase) — подсчёт количества путей, по которым можно достичь верха лестницы\n  * `B` [Резьба по шву](src/algorithms/image-processing/seam-carving) - алгоритм изменения размера изображения с учетом содержания\n  * `A` [Расстояние Левенштейна](src/algorithms/string/levenshtein-distance) — метрика, измеряющая разность между двумя последовательностями\n  * `A` [Наибольшая общая подпоследовательность](src/algorithms/sets/longest-common-subsequence)\n  * `A` [Наибольшая общая подстрока](src/algorithms/string/longest-common-substring)\n  * `A` [Наибольшая увеличивающаяся подпоследовательность](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Наименьшая общая суперпоследовательность](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Рюкзак 0-1](src/algorithms/sets/knapsack-problem)\n  * `A` [Разбиение числа](src/algorithms/math/integer-partition)\n  * `A` [Максимальный подмассив](src/algorithms/sets/maximum-subarray)\n  * `A` [Алгоритм Беллмана — Форда](src/algorithms/graph/bellman-ford) — поиск кратчайшего пути во взвешенном графе\n  * `A` [Алгоритм Флойда — Уоршелла](src/algorithms/graph/floyd-warshall) — нахождение кратчайших путей от одной из вершин графа до всех остальных\n  * `A` [Разборщик регулярных выражений](src/algorithms/string/regular-expression-matching)\n* **Поиск с возвратом (бэктрекинг)** — при поиске решения многократно делается попытка расширить текущее частичное решение. Если расширение невозможно, то происходит возврат к предыдущему более короткому частичному решению, и делается попытка его расширить другим возможным способом. Обычно используется обход пространства состояний в глубину.\n  * `B` [Прыжки](src/algorithms/uncategorized/jump-game)\n  * `B` [Поиск уникальных путей](src/algorithms/uncategorized/unique-paths)\n  * `B` [Булеан](src/algorithms/sets/power-set) — все подмножества заданного множества\n  * `A` [Гамильтонов цикл](src/algorithms/graph/hamiltonian-cycle) — проходит через каждую вершину графа ровно один раз\n  * `A` [Задача об N ферзях](src/algorithms/uncategorized/n-queens)\n  * `A` [Маршрут коня](src/algorithms/uncategorized/knight-tour)\n  * `A` [Комбинации сумм](src/algorithms/sets/combination-sum) — нахождение всех комбинаций, сумма каждой из которых равна заданному числу\n* **Метод ветвей и границ** — основан на упорядоченном переборе решений и рассмотрении только тех из них, которые являются перспективными (по тем или иным признакам) и отбрасывании бесперспективных множеств решений. Обычно используется обход в ширину в совокупности с обходом дерева пространства состояний в глубину.\n\n## Как использовать этот репозиторий\n\n**Установка всех зависимостей**\n```\nnpm install\n```\n\n**Запуск ESLint**\n\nЭта команда может потребоваться вам для проверки качества кода.\n\n```\nnpm run lint\n```\n\n**Запуск всех тестов**\n\n```\nnpm test\n```\n\n**Запуск определённого теста**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**Песочница**\n\nВы можете экспериментировать с алгоритмами и структурами данных в файле `./src/playground/playground.js`\n(файл `./src/playground/__test__/playground.test.js` предназначен для написания тестов).\n\nДля проверки работоспособности вашего кода используйте команду:\n\n```\nnpm test -- 'playground'\n```\n\n## Полезная информация\n\n### Ссылки\n\n[▶ О структурах данных и алгоритмах](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Нотация «О» большое\n\n*Нотация «О» большое* используется для классификации алгоритмов в соответствии с ростом времени выполнения и затрачиваемой памяти при увеличении размера входных данных. На диаграмме ниже представлены общие порядки роста алгоритмов в соответствии с нотацией «О» большое.\n\n![Big O graphs](./assets/big-o-graph.png)\n\nИсточник: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nНиже представлены часто используемые обозначения в нотации «О» большое, а также сравнение их производительностей на различных размерах входных данных.\n\n| Нотация «О» большое | 10 элементов | 100 элементов | 1000 элементов |\n| ------------------- | ------------ | ------------- | -------------- |\n| **O(1)**            | 1            | 1             | 1              |\n| **O(log N)**        | 3            | 6             | 9              |\n| **O(N)**            | 10           | 100           | 1000           |\n| **O(N log N)**      | 30           | 600           | 9000           |\n| **O(N^2)**          | 100          | 10000         | 1000000        |\n| **O(2^N)**          | 1024         | 1.26e+29      | 1.07e+301      |\n| **O(N!)**           | 3628800      | 9.3e+157      | 4.02e+2567     |\n\n### Сложности операций в структурах данных\n\n| Структура данных           | Получение | Поиск     | Вставка   | Удаление  | Комментарии |\n| -------------------------- | :-------: | :-------: | :-------: | :-------: | :---------- |\n| **Массив**                 | 1         | n         | n         | n         |             |\n| **Стек**                   | n         | n         | 1         | 1         |             |\n| **Очередь**                | n         | n         | 1         | 1         |             |\n| **Связный список**         | n         | n         | 1         | n         |             |\n| **Хеш-таблица**            | -         | n         | n         | n         | Для идеальной хеш-функции — O(1) |\n| **Двоичное дерево поиска** | n         | n         | n         | n         | В сбалансированном дереве — O(log(n)) |\n| **B-дерево**               | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Красно-чёрное дерево**   | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **АВЛ-дерево**             | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Фильтр Блума**           | -         | 1         | 1         | -         | Возможно получение ложно-положительного срабатывания |\n\n### Сложности алгоритмов сортировки\n\n| Наименование               | Лучший случай | Средний случай | Худший случай | Память | Устойчивость | Комментарии |\n| -------------------------- | :-----------: | :------------: | :-----------: | :----: | :----------: | :---------- |\n| **Сортировка пузырьком**   | n             | n<sup>2</sup>  | n<sup>2</sup> | 1      | Да           |             |\n| **Сортировка вставками**   | n             | n<sup>2</sup>  | n<sup>2</sup> | 1      | Да           |             |\n| **Сортировка выбором**     | n<sup>2</sup> | n<sup>2</sup>  | n<sup>2</sup> | 1      | Нет          |             |\n| **Сортировка кучей**       | n&nbsp;log(n) | n&nbsp;log(n)  | n&nbsp;log(n) | 1      | Нет          |             |\n| **Сортировка слиянием**    | n&nbsp;log(n) | n&nbsp;log(n)  | n&nbsp;log(n) | n      | Да           |             |\n| **Быстрая сортировка**     | n&nbsp;log(n) | n&nbsp;log(n)  | n<sup>2</sup> | log(n) | Нет          | Быстрая сортировка обычно выполняется с использованием O(log(n)) дополнительной памяти |\n| **Сортировка Шелла**       | n&nbsp;log(n) | зависит от выбранных шагов | n&nbsp;(log(n))<sup>2</sup>  | 1      | Нет          |           |\n| **Сортировка подсчётом**   | n + r         | n + r          | n + r         | n + r  | Да           | r — наибольшее число в массиве |\n| **Поразрядная сортировка** | n * k         | n * k          | n * k         | n + k  | Да           | k — длина самого длинного ключа |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.tr-TR.md",
          "type": "blob",
          "size": 21.9365234375,
          "content": "# JavaScript Algoritmalar ve Veri Yapıları\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nBu repository popüler algoritmaların ve veri yapılarının birçoğunun Javascript tabanlı örneklerini bulundurur.\n\nHer bir algoritma ve veri yapısı kendine\nait açıklama ve videoya sahip README dosyası içerir.\n\n_Read this in other languages:_\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n*☝ Not, bu proje araştırma ve öğrenme amacı ile yapılmış\nolup üretim için **yapılmamıştır**.*\n\n## Veri Yapıları\n\nBir veri yapısı, verileri bir bilgisayarda organize etmenin ve depolamanın belirli bir yoludur, böylece\nverimli bir şekilde erişilebilir ve değiştirilebilir. Daha iyi ifadeyle, bir veri yapısı bir veri koleksiyonudur,\naralarındaki ilişkiler, ve işlevler veya işlemler\nveriye uygulanabilir.\n\n`B` - Başlangıç, `A` - İleri Seviye\n\n* `B` [Bağlantılı Veri Yapısı](src/data-structures/linked-list)\n* `B` [Çift Yönlü Bağlı Liste](src/data-structures/doubly-linked-list)\n* `B` [Kuyruk](src/data-structures/queue)\n* `B` [Yığın](src/data-structures/stack)\n* `B` [Hash Table](src/data-structures/hash-table)\n* `B` [Heap](src/data-structures/heap) - max and min heap versions\n* `B` [Öncelikli Kuyruk](src/data-structures/priority-queue)\n* `A` [Trie](src/data-structures/trie)\n* `A` [Ağaç](src/data-structures/tree)\n  * `A` [İkili Arama Ağaçları](src/data-structures/tree/binary-search-tree)\n  * `A` [AVL Tree](src/data-structures/tree/avl-tree)\n  * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree)\n  * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples\n  * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)\n* `A` [Graph](src/data-structures/graph) (both directed and undirected)\n* `A` [Disjoint Set](src/data-structures/disjoint-set)\n* `A` [Bloom Filter](src/data-structures/bloom-filter)\n\n## Algoritmalar\n\nBir algoritma, bir problem sınıfının nasıl çözüleceğine dair kesin bir tanımlamadır.\nBir işlem dizisini açık olarak tanımlayan kurallar dizisidir.\n\n\n`B` - Başlangıç, `A` - İleri Seviye\n\n### Konusuna göre Algoritma\n\n* **Matematik**\n  * `B` [Bit Manipülasyonu](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc.\n  * `B` [İkili Kayan Nokta](src/algorithms/math/binary-floating-point) - kayan noktalı sayıların ikilik sistemde gösterimi.\n  * `B` [Faktöriyel](src/algorithms/math/factorial)\n  * `B` [Fibonacci Sayısı](src/algorithms/math/fibonacci) - klasik ve kapalı-form versiyonları\n  * `B` [Asallık Testi](src/algorithms/math/primality-test) (deneyerek bölüm metodu)\n  * `B` [Öklid Algoritması](src/algorithms/math/euclidean-algorithm) - En büyük ortak bölen hesaplama (EBOB)\n  * `B` [En küçük Ortak Kat](src/algorithms/math/least-common-multiple) (EKOK)\n  * `B` [Eratosten Kalburu](src/algorithms/math/sieve-of-eratosthenes) - belirli bir sayıya kadarki asal sayıları bulma\n  * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - sayı ikinin katı mı sorgusu (naive ve bitwise algoritmaları)\n  * `B` [Paskal Üçgeni](src/algorithms/math/pascal-triangle)\n  * `B` [Karmaşık Sayılar](src/algorithms/math/complex-number) - karmaşık sayılar ve karmaşık sayılar ile temel işlemler\n  * `B` [Radyan & Derece](src/algorithms/math/radian) - radyandan dereceye çeviri ve tersine çeviri\n  * `B` [Fast Powering](src/algorithms/math/fast-powering)\n  * `B` [Horner's method](src/algorithms/math/horner-method) - polinomal ifadelerin değerlendirilmesi\n  * `B` [Matrices](src/algorithms/math/matrix) - matrisler ve basit matris operasyonları (çarpım, tersçapraz, vb.)\n  * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - iki nokta/vektör/matris arasındaki mesafe\n  * `A` [Tamsayı Bölümü](src/algorithms/math/integer-partition)\n  * `A` [Karekök](src/algorithms/math/square-root) - Newton yöntemi\n  * `A` [Liu Hui π Algoritması](src/algorithms/math/liu-hui) - N-gons'a göre yaklaşık π hesabı\n  * `A` [Ayrık Fourier Dönüşümü](src/algorithms/math/fourier-transform) - bir zaman fonksiyonunu (sinyal) içerdiği frekanslara ayırın\n* **Setler**\n  * `B` [Kartezyen Ürün](src/algorithms/sets/cartesian-product) - birden fazla kümenin çarpımı\n  * `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - sonlu bir dizinin rastgele permütasyonu\n  * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bit düzeyinde ve geri izleme yöntemleri)\n  * `A` [Permütasyonlar](src/algorithms/sets/permutations)(tekrarlı ve tekrarsız)\n  * `A` [Kombinasyonlar](src/algorithms/sets/combinations) (tekrarlı ve tekrarsız)\n  * `A` [En Uzun Ortak Altdizi](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [En Uzun Artan Altdizi](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [En Kısa Ortak Üst Sıra](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - \"0-1 sırt çantası problemi\" ve \"Sınırsız sırt çantası problemi\"\n  * `A` [Maksimum Altdizi](src/algorithms/sets/maximum-subarray) - \"Kaba Kuvvet\" ve \"Dinamik Programlara\" (Kadane'nin) versiyonu\n  * `A` [Kombinasyon Toplamı](src/algorithms/sets/combination-sum) - belirli toplamı oluşturan tüm kombinasyonları bulun\n* **Metin**\n  * `B` [Hamming Mesafesi](src/algorithms/string/hamming-distance) - sembollerin farklı olduğu konumların sayısı\n  * `A` [Levenshtein Mesafesi](src/algorithms/string/levenshtein-distance) - iki sekans arasındaki minimum düzenleme mesafesi\n  * `A` [Knuth–Morris–Pratt Algoritması](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - altmetin araması (örüntü eşleme)\n  * `A` [Z Algoritması](src/algorithms/string/z-algorithm) - altmetin araması (desen eşleştirme)\n  * `A` [Rabin Karp Algoritması](src/algorithms/string/rabin-karp) - altmetin araması\n  * `A` [En Uzun Ortak Alt Metin](src/algorithms/string/longest-common-substring)\n  * `A` [Regular Expression Eşleme](src/algorithms/string/regular-expression-matching)\n* **Aramalar**\n  * `B` [Doğrusal Arama](src/algorithms/search/linear-search)\n  * `B` [Jump Search](src/algorithms/search/jump-search) (ya da Block Search) - sıralı dizide arama\n  * `B` [İkili Arama](src/algorithms/search/binary-search) - sıralı dizide arama\n  * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - tekdüze dağıtılmış sıralı dizide arama\n* **Sıralama**\n  * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort)\n  * `B` [Selection Sort](src/algorithms/sorting/selection-sort)\n  * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort)\n  * `B` [Heap Sort](src/algorithms/sorting/heap-sort)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations\n  * `B` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `B` [Counting Sort](src/algorithms/sorting/counting-sort)\n  * `B` [Radix Sort](src/algorithms/sorting/radix-sort)\n* **Bağlantılı Liste**\n  * `B` [Straight Traversal](src/algorithms/linked-list/traversal)\n  * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal)\n* **Ağaçlar**\n  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)\n* **Graphs**\n  * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - ağırlıklı yönlendirilmemiş grafik için Minimum Yayılma Ağacı'nı (MST) bulma\n  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - tek tepe noktasından tüm grafik köşelerine en kısa yolları bulmak\n  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - tek tepe noktasından tüm grafik köşelerine en kısa yolları bulmak\n  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - tüm köşe çiftleri arasındaki en kısa yolları bulun\n  * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - hem yönlendirilmiş hem de yönlendirilmemiş grafikler için (DFS ve Ayrık Küme tabanlı sürümler)\n  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - ağırlıklı yönlendirilmemiş grafik için Minimum Yayılma Ağacı'nı (MST) bulma\n  * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS metodu\n  * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan's algoritması (DFS based)\n  * `A` [Bridges](src/algorithms/graph/bridges) - DFS yöntemi ile algoritma\n  * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury'nin algoritması - Her kenara tam olarak bir kez ulaş\n  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Her köşeyi tam olarak bir kez ziyaret et\n  * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju's algorithm\n  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - her şehri ziyaret eden ve başlangıç ​​şehrine geri dönen mümkün olan en kısa rota\n* **Kriptografi**\n  * `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - polinom temelinde dönen hash işlevi\n  * `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - simple substitution cipher\n* **Makine Öğrenmesi**\n  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)\n* **Kategoriye Ayrılmayanlar**\n  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Square Matrix Rotation](src/algorithms/uncategorized/square-matrix-rotation) - in-place algorithm\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game) - backtracking, dynamic programming (top-down + bottom-up) and greedy examples\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths) - backtracking, dynamic programming and Pascal's Triangle based examples\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem (dynamic programming and brute force versions)\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - tepeye ulaşmanın yollarını sayma (4 çözüm)\n  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n\n### Algoritmik Paradigma\n\nAlgoritmik paradigma, bir sınıfın tasarımının altında yatan genel bir yöntem veya yaklaşımdır.\nAlgoritma dizayn tekniği olarak düşünülebilir. Her bir altproblemi (subproblem) asıl problemle\nbenzerlik gösteren problemlere uygulanabilir.\n\n* **Brute Force** - mümkün olan tüm çözümleri tara ve en iyisini seç\n  * `B` [Doğrusal Arama](src/algorithms/search/linear-search)\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - tepeye çıkmanın yollarını hesapla\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)\n  * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - her şehri ziyaret eden ve başlangıç şehrine geri dönen mümkün olan en kısa rota\n  * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - bir zaman fonksiyonunu (bir sinyal) onu oluşturan frekanslara ayırır\n* **Açgözlü** - geleceği düşünmeden şu an için en iyi seçeneği seçin\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `A` [Unbound Knapsack Problem](src/algorithms/sets/knapsack-problem)\n  * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - tüm grafik köşelerine giden en kısa yolu bulmak\n  * `A` [Prim’s Algorithm](src/algorithms/graph/prim) - ağırlıklı yönlendirilmemiş grafik için Minimum Yayılma Ağacı'nı (MST) bulma\n  * `A` [Kruskal’s Algorithm](src/algorithms/graph/kruskal) - ağırlıklı yönlendirilmemiş grafik için Minimum Yayılma Ağacı'nı (MST) bulma\n* **Böl ve Fethet** - sorunu daha küçük parçalara bölün ve sonra bu parçaları çözün\n  * `B` [Binary Search](src/algorithms/search/binary-search)\n  * `B` [Tower of Hanoi](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Pascal's Triangle](src/algorithms/math/pascal-triangle)\n  * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)\n  * `B` [Merge Sort](src/algorithms/sorting/merge-sort)\n  * `B` [Quicksort](src/algorithms/sorting/quick-sort)\n  * `B` [Tree Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Graph Depth-First Search](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Fast Powering](src/algorithms/math/fast-powering)\n  * `A` [Permutations](src/algorithms/sets/permutations) (tekrarlı ve tekrarsız)\n  * `A` [Combinations](src/algorithms/sets/combinations) (tekrarlı ve tekrarsız)\n* **Dinamik Programlama** - önceden bulunan alt çözümleri kullanarak bir çözüm oluşturmak\n  * `B` [Fibonacci Sayısı](src/algorithms/math/fibonacci)\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Eşsiz Yol](src/algorithms/uncategorized/unique-paths)\n  * `B` [Rain Terraces](src/algorithms/uncategorized/rain-terraces) - trapping rain water problem\n  * `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - zirveye ulaşmanın yollarının sayısını sayın\n  * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - iki sekans arasındaki minimum düzenleme mesafesi\n  * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring)\n  * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [0/1 Knapsack Problem](src/algorithms/sets/knapsack-problem)\n  * `A` [Integer Partition](src/algorithms/math/integer-partition)\n  * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray)\n  * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - tüm grafik köşelerine giden en kısa yolu bulmak\n  * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - tüm köşe çiftleri arasındaki en kısa yolları bulun\n  * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching)\n* **Backtracking** - brute forceye benzer, mümkün tüm sonuçları tara, ancak bir sonraki çözümü her ürettiğinizde test edersiniz\ntüm koşulları karşılıyorsa ve ancak o zaman sonraki çözümleri üretmeye devam edin. Aksi takdirde, geri dönün ve farklı bir çözüm arayın(?).\nNormally the DFS traversal of state-space is being used.\n  * `B` [Jump Game](src/algorithms/uncategorized/jump-game)\n  * `B` [Unique Paths](src/algorithms/uncategorized/unique-paths)\n  * `B` [Power Set](src/algorithms/sets/power-set) - all subsets of a set\n  * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Her köşeyi tam olarak bir kez ziyaret edin\n  * `A` [N-Queens Problem](src/algorithms/uncategorized/n-queens)\n  * `A` [Knight's Tour](src/algorithms/uncategorized/knight-tour)\n  * `A` [Combination Sum](src/algorithms/sets/combination-sum) - belirli toplamı oluşturan tüm kombinasyonları bulun\n* **Branch & Bound** - remember the lowest-cost solution found at each stage of the backtracking\nsearch, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of\na least-cost solution to the problem, in order to discard partial solutions with costs larger than the\nlowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space\ntree is being used.\n\n## Repository'in Kullanımı\n\n**Bütün dependencyleri kurun**\n```\nnpm install\n```\n\n**ESLint'i başlatın**\n\nBunu kodun kalitesini kontrol etmek amacı ile çalıştırabilirsin.\n\n```\nnpm run lint\n```\n\n**Bütün testleri çalıştır**\n```\nnpm test\n```\n\n**Testleri ismine göre çalıştır**\n```\nnpm test -- 'LinkedList'\n```\n\n**Deneme Alanı**\n\ndata-structures ve algorithms içerisinde `./src/playground/playground.js`\nyazarak `./src/playground/__test__/playground.test.js` için test edebilirsin.\n\n\nArdından basitçe alttaki komutu girerek kodunun beklendiği gibi çalışıp çalışmadığını test edebilirsin:\n\n```\nnpm test -- 'playground'\n```\n\n## Yararlı Bilgiler\n\n### Referanslar\n\n[▶ Data Structures and Algorithms on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Big O Notation\n\n* Big O notation *, algoritmaları, girdi boyutu büyüdükçe çalışma süresi veya alan gereksinimlerinin nasıl arttığına göre sınıflandırmak için kullanılır.\nAşağıdaki grafikte, Big O gösteriminde belirtilen algoritmaların en yaygın büyüme sıralarını bulabilirsiniz.\n\n![Big O graphs](./assets/big-o-graph.png)\n\nKaynak: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nAltta Big O notations ve farklı input boyutlarına karşın yapılmış performans karşılaştırması listelenmektedir.\n\n| Big O Notation | 10 Element için hesaplama | 100 Element için hesaplama | 1000 Element için hesaplama  |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### Veri Yapısı İşlem Karmaşıklığı\n\n| Veri Yapısı          | Access    | Search    | Insertion | Deletion  | Comments  |\n| ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- |\n| **Dizi**               | 1         | n         | n         | n         |           |\n| **Yığın**               | n         | n         | 1         | 1         |           |\n| **Sıralı**               | n         | n         | 1         | 1         |           |\n| **Bağlantılı Liste**         | n         | n         | 1         | n         |           |\n| **Yığın Tablo**          | -         | n         | n         | n         | Kusursuz hash fonksiyonu durumunda sonuç O(1) |\n| **İkili Arama Ağacı**  | n         | n         | n         | n         | In case of balanced tree costs would be O(log(n)) |\n| **B-Tree**              | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Red-Black Tree**      | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **AVL Tree**            | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Bloom Filter**        | -         | 1         | 1         | -         | Arama esnasında yanlış sonuçlar çıkabilir |\n\n### Dizi Sıralama Algoritmaları Karmaşıklığı\n\n| İsim                  | En İyi            | Ortalama             | En Kötü               | Hafıza    | Kararlı    | Yorumlar  |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- |\n| **Bubble sort**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Evet       |           |\n| **Insertion sort**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Evet       |           |\n| **Selection sort**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Hayır        |           |\n| **Heap sort**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | Hayır        |           |\n| **Merge sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Evet       |           |\n| **Quick sort**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | Hayır        | Hızlı sıralama genellikle O(log(n)) yığın alanıyla yapılır |\n| **Shell sort**        | n&nbsp;log(n)   | depends on gap sequence   | n&nbsp;(log(n))<sup>2</sup>  | 1         | Hayır         |           |\n| **Counting sort**     | n + r           | n + r               | n + r               | n + r     | Evet       | r - dizideki en büyük sayı |\n| **Radix sort**        | n * k           | n * k               | n * k               | n + k     | Evet       | k - en uzun key'in uzunluğu |\n\n## Projeyi Destekleme\n\nBu projeyi buradan destekleyebilirsiniz ❤️️ [GitHub](https://github.com/sponsors/trekhleb) veya ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.uk-UA.md",
          "type": "blob",
          "size": 35.7626953125,
          "content": "# Алгоритми JavaScript та структури даних\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nДаний репозиторій приклади багатьох популярних алгоритмів та структур даних на основі JavaScript.\n\nКожен алгоритм та структура даних має свій окремий README-файл із відповідними поясненнями та посиланнями для подальшого вивчення (включаючи посилання на відео на YouTube).\n\n_Вивчення матеріалу на інших мовах:_\n[_English_](README.md),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n*☝ Зверніть увагу! Даний проект призначений лише для навчальних та дослідницьких цілей, і він **не** призначений для виробництва (продакшн).*\n\n## Структури даних\n\nСтруктура даних (в програмуванні) - це спосіб організації даних в комп'ютерах. Часто разом зі структурою даних пов'язується і специфічний перелік операцій, що можуть бути виконаними над даними, організованими в таку структуру.\nТочніше, структура даних - це сукупність даних цінності, взаємозв'язки між ними та функції або операції, до яких можна застосувати дані.\n\n`B` - Початківець, `A` - Просунутий рівень\n\n* `B` [Зв'язаний список](src/data-structures/linked-list)\n* `B` [Двобічно зв'язаний список](src/data-structures/doubly-linked-list)\n* `B` [Черга](src/data-structures/queue)\n* `B` [Стек](src/data-structures/stack)\n* `B` [Геш-таблиця](src/data-structures/hash-table)\n* `B` [Купа, стіс або піраміда](src/data-structures/heap) - max and min heap versions\n* `B` [Черга з пріоритетом](src/data-structures/priority-queue)\n* `A` [Префіксне дерево](src/data-structures/trie)\n* `A` [Дерево](src/data-structures/tree)\n  * `A` [Двійкове дерево пошуку](src/data-structures/tree/binary-search-tree)\n  * `A` [АВЛ-дерево](src/data-structures/tree/avl-tree)\n  * `A` [Червоно-чорне дерево](src/data-structures/tree/red-black-tree)\n  * `A` [Дерево відрізків](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples\n  * `A` [Дерево Фенвіка](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree)\n* `A` [Граф (абстрактний тип даних)](src/data-structures/graph) (both directed and undirected)\n* `A` [Система неперетинних множин](src/data-structures/disjoint-set)\n* `A` [Фільтр Блума](src/data-structures/bloom-filter)\n\n\n## Алгоритми\n\nАлгоритм - це однозначна специфікація способу вирішення класу задач. Це набір правил, які точно визначають послідовність операцій.\n\n`B` - Початківець, `A` - Просунутий рівень\n\n### Алгоритми за тематикою\n\n* **Математика**\n  * `B` [Бітова маніпуляція](src/algorithms/math/bits) - встановити / отримати / оновити / очистити біти, множення / ділення на два, робити від’ємними тощо\n  * `B` [Факторіал](src/algorithms/math/factorial)\n  * `B` [Послідовність Фібоначчі](src/algorithms/math/fibonacci) - класична та закриті версії\n  * `B` [Основні фактори](src/algorithms/math/prime-factors) - пошук простих множників і підрахунок їх за допомогою теореми Харді-Рамануджана\n  * `B` [Тест простоти](src/algorithms/math/primality-test) (метод пробного поділу)\n  * `B` [Алгоритм Евкліда](src/algorithms/math/euclidean-algorithm) - метод обчислення найбільшого спільного дільника (НСД)\n  * `B` [Найменше спільне кратне](src/algorithms/math/least-common-multiple) (НСК)\n  * `B` [Решето Ератосфена](src/algorithms/math/sieve-of-eratosthenes) - алгоритм знаходження всіх простих чисел менших деякого цілого числа *n*\n  * `B` [Піднесення до степеня](src/algorithms/math/is-power-of-two) - перевірити, чи є число ступенем двох (просте та побітове рішення)\n  * `B` [Трикутник Паскаля](src/algorithms/math/pascal-triangle)\n  * `B` [Комплексне число](src/algorithms/math/complex-number) - комплексні числа та основні операції з ними\n  * `B` [Радіани & Градуси](src/algorithms/math/radian) - перетворення радіанів у градуси та навпаки\n  * `B` [Швидке піднесення до степеня](src/algorithms/math/fast-powering)\n  * `B` [Схема Горнера](src/algorithms/math/horner-method) - поліноміальна оцінка\n  * `A` [Розбиття числа](src/algorithms/math/integer-partition)\n  * `A` [Метод дотичних (метод Ньютона)](src/algorithms/math/square-root) - метод наближеного знаходження кореня дійсного рівняння\n  * `A` [Алгоритм Лю Хуея](src/algorithms/math/liu-hui) - розрахунок числа π з заданою точністю методом вписаних правильних багатокутників\n  * `A` [Дискретне перетворення Фур'є](src/algorithms/math/fourier-transform) - розкладання тимчасової функції (сигналу) на частотні складові\n* **Множина**\n  * `B` [Декартів добуток множин](src/algorithms/sets/cartesian-product) - множина усіх можливих впорядкованих пар\n  * `B` [Тасування Фішера - Єйтса](src/algorithms/sets/fisher-yates) - створення випадкових перестановок кінцевого безлічі\n  * `A` [Булеан](src/algorithms/sets/power-set) - множина всіх підмножин даної множини (бітові та зворотні рішення)\n  * `A` [Перестановка](src/algorithms/sets/permutations) (з повтореннями та без)\n  * `A` [Комбінації](src/algorithms/sets/combinations) (з повтореннями та без)\n  * `A` [Пошук найдовшої спільної підпослідовності](src/algorithms/sets/longest-common-subsequence)\n  * `A` [Завдання пошуку найбільшою збільшується підпослідовності](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Найменша загальна супер-послідовність](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Задача пакування рюкзака](src/algorithms/sets/knapsack-problem) - приклади \"0/1\" та \"Необмежений\"\n  * `A` [Максимальний підмасив](src/algorithms/sets/maximum-subarray) - метод «Грубої сили» та алгоритм Кадана\n  * `A` [Комбінована сума](src/algorithms/sets/combination-sum) - знайти всі комбінації, що утворюють конкретну суму\n* **Алгоритми роботи з рядками**\n  * `B` [Відстань Геммінга](src/algorithms/string/hamming-distance) - число позицій, у яких відповідні цифри двох двійкових слів однакової довжини різні\n  * `A` [Відстань Левенштейна](src/algorithms/string/levenshtein-distance) - міра відмінності двох послідовностей символів (рядків)\n  * `A` [Алгоритм Кнута — Морріса — Пратта](src/algorithms/string/knuth-morris-pratt) пошук підрядків (узгодження шаблонів)\n  * `A` [Z-функція](src/algorithms/string/z-algorithm) - пошук підрядків (зіставлення зразків)\n  * `A` [Алгоритм Рабіна — Карпа](src/algorithms/string/rabin-karp) - алгоритм пошуку рядка\n  * `A` [Найбільший загальний підрядок](src/algorithms/string/longest-common-substring)\n  * `A` [Підбирання регулярного виразу](src/algorithms/string/regular-expression-matching)\n* **Алгоритми пошуку**\n  * `B` [Лінійний пошук](src/algorithms/search/linear-search)\n  * `B` [Пошук блоків](src/algorithms/search/jump-search) - пошук у відсортованому масиві\n  * `B` [Двійковий пошук](src/algorithms/search/binary-search) - знаходження заданого значення у впорядкованому масиві\n  * `B` [Інтерполяційний алгоритм пошуку](src/algorithms/search/interpolation-search) - алгоритм для пошуку за заданим ключем в індексованому масиві, який впорядкований за значенням ключів\n* **Алгоритми сортування**\n  * `B` [Сортування бульбашкою](src/algorithms/sorting/bubble-sort)\n  * `B` [Сортування вибором](src/algorithms/sorting/selection-sort)\n  * `B` [Сортування включенням](src/algorithms/sorting/insertion-sort)\n  * `B` [Пірамідальне сортування](src/algorithms/sorting/heap-sort)\n  * `B` [Сортування злиттям](src/algorithms/sorting/merge-sort)\n  * `B` [Швидке сортування](src/algorithms/sorting/quick-sort)\n  * `B` [Сортування Шелла](src/algorithms/sorting/shell-sort)\n  * `B` [Сортування підрахунком](src/algorithms/sorting/counting-sort)\n  * `B` [Сортування за розрядами](src/algorithms/sorting/radix-sort)\n* **Зв’язані списки**\n  * `B` [Прямий обхід](src/algorithms/linked-list/traversal)\n  * `B` [Зворотний обхід](src/algorithms/linked-list/reverse-traversal)\n* **Дерева**\n  * `B` [Пошук у глибину](src/algorithms/tree/depth-first-search)\n  * `B` [Пошук у ширину](src/algorithms/tree/breadth-first-search)\n* **Графи**\n  * `B` [Пошук у глибину](src/algorithms/graph/depth-first-search)\n  * `B` [Пошук у ширину](src/algorithms/graph/breadth-first-search)\n  * `B` [Алгоритм Крускала](src/algorithms/graph/kruskal) - алгоритм побудови мінімального кістякового дерева зваженого неорієнтовного графа\n  * `A` [Алгоритм Дейкстри](src/algorithms/graph/dijkstra) - знаходження найкоротшого шляху від однієї вершини графа до всіх інших вершин\n  * `A` [Алгоритм Беллмана — Форда](src/algorithms/graph/bellman-ford) -  алгоритм пошуку найкоротшого шляху в зваженому графі\n  * `A` [Алгоритм Флойда — Воршелла](src/algorithms/graph/floyd-warshall) -  знаходження найкоротшого шляху в зваженому графі з додатними або від'ємними вагами ребер (але без від'ємнозначних циклів)\n  * `A` [Циклічний граф](src/algorithms/graph/detect-cycle) - граф, що складається з єдиного циклу, або, іншими словами, деякого числа вершин, з'єднаних замкнутим ланцюгом.\n  * `A` [Алгоритм Прима](src/algorithms/graph/prim) - жадібний алгоритм побудови мінімального кістякового дерева зваженого зв'язного неорієнтованого графа\n  * `A` [Топологічне сортування](src/algorithms/graph/topological-sorting) - впорядковування вершин безконтурного орієнтованого графа згідно з частковим порядком, визначеним ребрами цього графу на множині його вершин\n  * `A` [Алгоритм Тар'яна](src/algorithms/graph/articulation-points) - алгоритм пошуку компонент сильної зв'язності в орієнтованому графі, що працює за лінійний час\n  * `A` [Міст (теорія графів)](src/algorithms/graph/bridges)\n  * `A` [Ейлерів ланцюг](src/algorithms/graph/eulerian-path) - ланцюг у графі, який проходить кожне ребро рівно один раз\n  * `A` [Гамільтонів граф](src/algorithms/graph/hamiltonian-cycle) - шлях, що містить кожну вершину графа рівно один раз\n  * `A` [Компонента сильної зв'язності графа](src/algorithms/graph/strongly-connected-components) - Алгоритм Косараджу - алгоритм для знаходження компонент сильної зв’язності орієнтованого графу\n  * `A` [Задача комівояжера](src/algorithms/graph/travelling-salesman) - знаходження найвигіднішого маршруту, що проходить через вказані міста хоча б по одному разу\n* **Криптографія**\n  * `B` [Хеш-функція](src/algorithms/cryptography/polynomial-hash) - функція, що перетворює вхідні дані будь-якого (як правило великого) розміру в дані фіксованого розміру.\n  * `B` [Шифр Цезаря (шифр зсуву)](src/algorithms/cryptography/caesar-cipher) - симетричний моноалфавітний алгоритм шифрування, в якому кожна буква відкритого тексту заміняється на ту, що віддалена від неї в алфавіті на сталу кількість позицій\n  * `B` [Шифр Гілла](src/algorithms/cryptography/hill-cipher) - поліграмний шифр підстановки, заснований на лінійній алгебрі\n* **Машинне навчання**\n  * `B` [Нано-нейрон](https://github.com/trekhleb/nano-neuron) - 7 простих функцій JS, які ілюструють, як машини насправді можуть навчатися (пряме та зворотнє поширення)\n  * `B` [Метод k-найближчих сусідів](src/algorithms/ml/knn) - простий непараметричний класифікаційний метод, де для класифікації об'єктів у рамках простору властивостей використовуються відстані (зазвичай евклідові), пораховані до усіх інших об'єктів\n  * `B` [Кластеризація методом к–середніх](src/algorithms/ml/knn) - популярний метод кластеризації, — впорядкування множини об'єктів в порівняно однорідні групи.\n* **Без категорії**\n  * `B` [Ханойська вежа](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Поворот квадратної матриці](src/algorithms/uncategorized/square-matrix-rotation)\n  * `B` [Гра стрибків](src/algorithms/uncategorized/jump-game) - зворотне відстеження, динамічне програмування (зверху вниз + знизу вгору) та жадібні приклади\n  * `B` [Проблема унікальних шляхів](src/algorithms/uncategorized/unique-paths) - зворотне відстеження, динамічне програмування та приклади на основі Трикутника Паскаля\n  * `B` [Дощові тераси](src/algorithms/uncategorized/rain-terraces) - проблема захоплення дощової води (динамічне програмування та версії грубої сили)\n  * `B` [Завдання про рекурсивні сходи](src/algorithms/uncategorized/recursive-staircase) - підрахунок кількості способів досягти вершини (4 рішення)\n  * `A` [Задача про вісім ферзів](src/algorithms/uncategorized/n-queens)\n  * `A` [Задача про хід коня](src/algorithms/uncategorized/knight-tour)\n\n### Парадигма програмування\n\nПарадиигма програмува́ння — це система ідей і понять, які визначають стиль написання комп'ютерних програм, а також спосіб мислення програміста. Це спосіб концептуалізації, що визначає організацію обчислень і структурування роботи, яку виконує комп'ютер.\n\n* **Метод «грубої сили» або повний перебір** - метод рішення криптографічної задачі шляхом перебору всіх можливих варіантів ключа\n  * `B` [Лінійний пошук](src/algorithms/search/linear-search)\n  * `B` [Дощові тераси](src/algorithms/uncategorized/rain-terraces) - задача про дощові тераси\n  * `B` [Завдання про рекурсивні сходи](src/algorithms/uncategorized/recursive-staircase) - підрахунок кількості способів досягти вершини\n  * `A` [Максимальний підмасив](src/algorithms/sets/maximum-subarray)\n  * `A` [Задача комівояжера](src/algorithms/graph/travelling-salesman) - знаходження найвигіднішого маршруту, що проходить через вказані міста хоча б по одному разу\n  * `A` [Дискретне перетворення Фур'є](src/algorithms/math/fourier-transform) - розкладання тимчасової функції (сигналу) на частотні складові\n* **\"Жадібні\" алгоритми** - простий і прямолінійний евристичний алгоритм, який приймає найкраще рішення, виходячи з наявних на кожному етапі даних, не зважаючи на можливі наслідки, сподіваючись урешті-решт отримати оптимальний розв'язок\n  * `B` [Гра стрибків](src/algorithms/uncategorized/jump-game) - зворотне відстеження, динамічне програмування (зверху вниз + знизу вгору) та жадібні приклади\n  * `A` [Задача пакування рюкзака](src/algorithms/sets/knapsack-problem) - приклади \"0/1\" та \"Необмежений\"\n  * `A` [Алгоритм Дейкстри](src/algorithms/graph/dijkstra) - знаходження найкоротшого шляху від однієї вершини графа до всіх інших вершин\n  * `A` [Алгоритм Прима](src/algorithms/graph/prim) - жадібний алгоритм побудови мінімального кістякового дерева зваженого зв'язного неорієнтованого графа\n  * `A` [Алгоритм Крускала](src/algorithms/graph/kruskal) - алгоритм побудови мінімального кістякового дерева зваженого неорієнтовного графа\n* **Розділяй і володарюй** - важлива парадигма розробки алгоритмів, що полягає в рекурсивному розбитті розв'язуваної задачі на дві або більше підзадачі того ж типу, але меншого розміру, і комбінуванні їх розв'язків для отримання відповіді до вихідного завдання. Розбиття виконуються доти, поки всі підзавдання не стануть елементарними.\n  * `B` [Двійковий пошук](src/algorithms/search/binary-search) - знаходження заданого значення у впорядкованому масиві\n  * `B` [Ханойська вежа](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Трикутник Паскаля](src/algorithms/math/pascal-triangle)\n  * `B` [Алгоритм Евкліда](src/algorithms/math/euclidean-algorithm) - метод обчислення найбільшого спільного дільника (НСД)\n  * `B` [Сортування злиттям](src/algorithms/sorting/merge-sort)\n  * `B` [Швидке сортування](src/algorithms/sorting/quick-sort)\n  * `B` [Пошук у глибину](src/algorithms/tree/depth-first-search)\n  * `B` [Пошук у ширину](src/algorithms/tree/breadth-first-search)\n  * `B` [Гра стрибків](src/algorithms/uncategorized/jump-game) - зворотне відстеження, динамічне програмування (зверху вниз + знизу вгору) та жадібні приклади\n  * `B` [Швидке піднесення до степеня](src/algorithms/math/fast-powering)\n  * `A` [Перестановка](src/algorithms/sets/permutations) (з повтореннями та без)\n  * `A` [Комбінації](src/algorithms/sets/combinations) (з повтореннями та без)\n* **Динамічне програмування** - розділ математики, який присвячено теорії і методам розв'язання багатокрокових задач оптимального управління\n  * `B` [Послідовність Фібоначчі](src/algorithms/math/fibonacci) - класична та закриті версії\n  * `B` [Гра стрибків](src/algorithms/uncategorized/jump-game) - зворотне відстеження, динамічне програмування (зверху вниз + знизу вгору) та жадібні приклади\n  * `B` [Проблема унікальних шляхів](src/algorithms/uncategorized/unique-paths) - зворотне відстеження, динамічне програмування та приклади на основі Трикутника Паскаля\n  * `B` [Дощові тераси](src/algorithms/uncategorized/rain-terraces) - проблема захоплення дощової води (динамічне програмування та версії грубої сили)\n  * `B` [Завдання про рекурсивні сходи](src/algorithms/uncategorized/recursive-staircase) - підрахунок кількості способів досягти вершини (4 рішення)\n  * `A` [Відстань Левенштейна](src/algorithms/string/levenshtein-distance) - міра відмінності двох послідовностей символів (рядків)\n  * `A` [Пошук найдовшої спільної підпослідовності](src/algorithms/sets/longest-common-subsequence)\n  * `A` [Найбільший загальний підрядок](src/algorithms/string/longest-common-substring)\n  * `A` [Завдання пошуку найбільшою збільшується підпослідовності](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Найменша загальна супер-послідовність](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Задача пакування рюкзака](src/algorithms/sets/knapsack-problem) - приклади \"0/1\" та \"Необмежений\"\n  * `A` [Розбиття числа](src/algorithms/math/integer-partition)\n  * `A` [Максимальний підмасив](src/algorithms/sets/maximum-subarray)\n  * `A` [Алгоритм Беллмана — Форда](src/algorithms/graph/bellman-ford) -  алгоритм пошуку найкоротшого шляху в зваженому графі\n  * `A` [Алгоритм Флойда — Воршелла](src/algorithms/graph/floyd-warshall) -  знаходження найкоротшого шляху в зваженому графі з додатними або від'ємними вагами ребер (але без від'ємнозначних циклів)\n  * `A` [Підбирання регулярного виразу](src/algorithms/string/regular-expression-matching)\n* **Пошук із зворотом** - подібно до грубої сили, намагайтеся генерувати всі можливі рішення, але кожного разу, коли ви створюєте наступне рішення, тестуєте чи він задовольняє всім умовам, і лише потім продовжуєте генерувати наступні рішення. В іншому випадку поверніться назад і рухайтесь далі іншим шляхом пошуку рішення.\n  * `B` [Гра стрибків](src/algorithms/uncategorized/jump-game) - зворотне відстеження, динамічне програмування (зверху вниз + знизу вгору) та жадібні приклади\n  * `B` [Проблема унікальних шляхів](src/algorithms/uncategorized/unique-paths) - зворотне відстеження, динамічне програмування та приклади на основі Трикутника Паскаля\n  * `B` [Булеан](src/algorithms/sets/power-set) - множина всіх підмножин даної множини (бітові та зворотні рішення)\n  * `A` [Гамільтонів граф](src/algorithms/graph/hamiltonian-cycle) - шлях, що містить кожну вершину графа рівно один раз\n  * `A` [Задача про вісім ферзів](src/algorithms/uncategorized/n-queens)\n  * `A` [Задача про хід коня](src/algorithms/uncategorized/knight-tour)\n  * `A` [Комбінована сума](src/algorithms/sets/combination-sum) - знайти всі комбінації, що утворюють конкретну суму\n* **Метод гілок і меж** - один з поширених методів дискретної оптимізації. Метод працює на дереві рішень та визначає принципи роботи конкретних алгоритмів пошуку розв'язків, тобто, є мета-алгоритмом. Для різних задач комбінаторної оптимізації створюють спеціалізовані алгоритми гілок та меж.\n\n## Як користуватися цим репозиторієм\n\n**Встановіть усі залежності**\n```\nnpm install\n```\n\n**Запустіть ESLint**\n\nЗапустіть для перевірки якості коду\n\n```\nnpm run lint\n```\n\n**Запустіть усі тести**\n```\nnpm test\n```\n\n**Запустіть тести за назвою**\n```\nnpm test -- 'LinkedList'\n```\n\n**Ігрище**\n\nВи можете побавитись зі структурами даних та алгоритмами в файлі `./src/playground/playground.js` та писати тести до них в даному файлі `./src/playground/__test__/playground.test.js`.\n\nДля перевірки, чи працює ваш код належним чином запустіть команду:\n\n```\nnpm test -- 'playground'\n```\n\n## Корисна інформація\n\n### Список літератури\n\n[▶ Структури даних та алгоритми на YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Асимптотична нотація великого О (нотація Ландау)\n\n*Асимптотична нотація великого О (нотація Ландау)* розповсюджена математична нотація для формального запису асимптотичної поведінки функцій. Широко вживається в теорії складності обчислень, інформатиці та математиці.\n![Асимптотична нотація великого О](./assets/big-o-graph.png)\n\nДжерело: [Асимптотична нотація великого О](http://bigocheatsheet.com/).\n\nНижче наведено список деяких найбільш часто використовуваних позначень нотації Ландаута їх порівняння продуктивності з різними розмірами вхідних даних.\n\n| Нотація Ландау | Обчислення для 10 елементів | Обчислення для 100 елементів | Обчислення для 1000 елементів  |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### Складність операцій в структурі даних\n\n| Структура даних        | Доступ    | Пошук    | Вставка | Видалення  | Коментарі  |\n| ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- |\n| **Масив**               | 1         | n         | n         | n         |           |\n| **Купа**               | n         | n         | 1         | 1         |           |\n| **Черга**               | n         | n         | 1         | 1         |           |\n| **Зв’язаний список**         | n         | n         | 1         | n         |           |\n| **Хеш-таблиця**          | -         | n         | n         | n         | У разі ідеальної хеш-функції - O(1) |\n| **Бінарне дерево пошуку**  | n         | n         | n         | n         | У разі збалансованого дерева витрати становитимуть O (log (n)) |\n| **Б-дерево**              | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Червоно-чорне дерево**      | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **АВЛ-дерево**            | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Фільтр Блума**        | -         | 1         | 1         | -         | Під час пошуку можливі помилкові спрацьовування |\n\n### Складність алгоритмів сортування масивів\n\n| Назва                  | Найкращий            | Середній             | Найгірший               | Пам'ять    | Стабільність    | Коментарі  |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- |\n| **Сортування бульбашкою**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Так       |           |\n| **Сортування включенням**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Так       |           |\n| **Сортування вибором**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Ні        |           |\n| **Пірамідальне сортування**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | Ні        |           |\n| **Сортування злиттям**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Так       |           |\n| **Швидке сортування**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | Ні        | Швидке сортування зазвичай виконується на місці з використанням O (log (n)) додаткової пам'яті |\n| **Сортування Шелла**        | n&nbsp;log(n)   | залежить від послідовності проміжків   | n&nbsp;(log(n))<sup>2</sup>  | 1         | Ні         |           |\n| **Сортування підрахунком**     | n + r           | n + r               | n + r               | n + r     | Так       | Де r - найбільше число в масиві |\n| **Сортування за розрядами**        | n * k           | n * k               | n * k               | n + k     | Так       | Де k - довжина найдовшого ключа |\n\n## Патронати проекту\n\n> Ви можете підтримати цей проект через ❤️️ [GitHub](https://github.com/sponsors/trekhleb) або ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n[Люди, які підтримують цей проект](https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md) `∑ = 1`\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.uz-UZ.md",
          "type": "blob",
          "size": 27.365234375,
          "content": "# JavaScript algoritmlari va ma'lumotlar tuzilmalari\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n![repo size](https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg)\n\nBu repozitoriyada JavaScript-ga asoslangan ko'plab mashhur algoritmlar\nva ma'lumotlar tuzilmalarining namunalari mavjud.\n\nHar bir algoritm va ma'lumotlar tuzilmasining alohida README fayli\nbo'lib, unda tegishli tushuntirishlar va qo'shimcha o'qish uchun\nhavolalar (shu jumladan YouTube videolariga ham havolalar) mavjud.\n\n_Read this in other languages:_\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türkçe_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\nYodda tuting, bu loyiha faqat o'quv va tadqiqot maqsadida ishlatilishi\nuchun mo'ljallangan va ishlab chiqarishda ishlatilishi **mumkin emas**.\n\n## Ma'lumotlar tuzilmalari\n\nMa'lumotlar tuzilmasi - bu kompyuterda ma'lumotlarni samarali tarzda\nolish va o'zgartirish uchun ularni tashkil etish va saqlashning ma'lum\nbir usuli. Ayniqsa, ma'lumotlar tuzilmasi ma'lumot qiymatlarining\nto'plami, ular orasidagi munosabatlar va ma'lumotlarga qo'llanilishi\nmumkin bo'lgan funksiyalar yoki operatsiyalardir.\n\n`B` - Boshlang'ich, `A` - Ilg'or\n\n- `B` [Bog'langan ro'yxat](src/data-structures/linked-list)\n- `B` [Ikki marta bog'langan ro'yxat](src/data-structures/doubly-linked-list)\n- `B` [Navbat](src/data-structures/queue)\n- `B` [Stek](src/data-structures/stack)\n- `B` [Hash jadvali](src/data-structures/hash-table)\n- `B` [Heap](src/data-structures/heap) - maksimal va minimal heap versiyalari\n- `B` [Ustuvor navbat](src/data-structures/priority-queue)\n- `A` [Trie](src/data-structures/trie)\n- `A` [Daraxt](src/data-structures/tree)\n  - `A` [Ikkilik qidiruv daraxt](src/data-structures/tree/binary-search-tree)\n  - `A` [AVL daraxt](src/data-structures/tree/avl-tree)\n  - `A` [Qizil-qora daraxt](src/data-structures/tree/red-black-tree)\n  - `A` [Segment daraxt](src/data-structures/tree/segment-tree) - min/max/sum diapazon so'rovlari bilan misollar\n  - `A` [Fenwick daraxt](src/data-structures/tree/fenwick-tree) (ikkilik indeksli daraxt)\n- `A` [Graf](src/data-structures/graph) (yo'naltirilgan hamda yo'naltirilmagan)\n- `A` [Ajratilgan to'plam](src/data-structures/disjoint-set) - union-find ma'lumotlar strukturasi yoki merge-find to'plami\n- `A` [Bloom filtri](src/data-structures/bloom-filter)\n- `A` [LRU keshi](src/data-structures/lru-cache/) - Eng kam ishlatilgan (LRU) keshi\n\n## Algoritmlar\n\nAlgoritm muammolar sinfini qanday hal qilishning aniq spetsifikatsiyasi. Bu operatsiyalar ketma-ketligini aniqlaydigan qoidalar to'plami.\n\n`B` - Boshlang'ich, `A` - Ilg'or\n\n### Mavzu bo'yicha algoritmlar\n\n- **Matematika**\n  - `B` [Bit manipulatsiyasi](src/algorithms/math/bits) - bitlarni qo'yish/olish/yangilash/tozalash, ikkilikka ko'paytirish/bo'lish, manfiy qilish va hokazo.\n  - `B` [Ikkilik suzuvchi nuqta](src/algorithms/math/binary-floating-point) - suzuvchi nuqtali sonlarning ikkilik tasviri.\n  - `B` [Faktorial](src/algorithms/math/factorial)\n  - `B` [Fibonachchi raqam](src/algorithms/math/fibonacci) - klassik va yopiq shakldagi versiyalar\n  - `B` [Asosiy omillar](src/algorithms/math/prime-factors) - tub omillarni topish va ularni Xardi-Ramanujan teoremasi yordamida sanash\n  - `B` [Birlamchilik testi](src/algorithms/math/primality-test) (sinov bo'linish usuli)\n  - `B` [Evklid algoritmi](src/algorithms/math/euclidean-algorithm) - eng katta umumiy bo'luvchini (EKUB) hisoblash\n  - `B` [Eng kichik umumiy karrali](src/algorithms/math/least-common-multiple) (EKUK)\n  - `B` [Eratosfen elagi](src/algorithms/math/sieve-of-eratosthenes) - berilgan chegaragacha barcha tub sonlarni topish\n  - `B` [Ikkining darajasimi](src/algorithms/math/is-power-of-two) - raqamning ikkining darajasi ekanligini tekshirish (sodda va bitli algoritmlar)\n  - `B` [Paskal uchburchagi](src/algorithms/math/pascal-triangle)\n  - `B` [Kompleks sonlar](src/algorithms/math/complex-number) - kompleks sonlar va ular bilan asosiy amallar\n  - `B` [Radian & Daraja](src/algorithms/math/radian) - radianlarni darajaga va orqaga aylantirish\n  - `B` [Tez ko'tarish](src/algorithms/math/fast-powering)\n  - `B` [Horner metodi](src/algorithms/math/horner-method) - polinomlarni baholash\n  - `B` [Matritsalar](src/algorithms/math/matrix) - matritsalar va asosiy matritsa operatsiyalari (ko'paytirish, transpozitsiya va boshqalar).\n  - `B` [Evklid masofasi](src/algorithms/math/euclidean-distance) - ikki nuqta/vektor/matritsa orasidagi masofa\n  - `A` [Butun sonlarni bo'lish](src/algorithms/math/integer-partition)\n  - `A` [Kvadrat ildiz](src/algorithms/math/square-root) - Nyuton metodi\n  - `A` [Liu Hui π algoritmi](src/algorithms/math/liu-hui) - N-gonlarga asoslangan π ning taxminiy hisoblari\n  - `A` [Diskret Furye transformatsiyasi](src/algorithms/math/fourier-transform) - vaqt funksiyasini (signalni) uni tashkil etuvchi chastotalarga ajratish\n- **Sets**\n  - `B` [Karteziya maxsuloti](src/algorithms/sets/cartesian-product) - bir nechta to'plamlarning ko'paytmasi\n  - `B` [Fisher–Yates Shuffle](src/algorithms/sets/fisher-yates) - chekli ketma-ketlikni tasodifiy almashtirish\n  - `A` [Power Set](src/algorithms/sets/power-set) - to'plamning barcha kichik to'plamlari (bitwise, backtracking va kaskadli echimlar)\n  - `A` [Permutatsiyalar](src/algorithms/sets/permutations) (takroriyalash bilan va takroriyalashsiz)\n  - `A` [Kombinatsiyalar](src/algorithms/sets/combinations) (takroriyalash bilan va takroriyalashsiz)\n  - `A` [Eng uzun umumiy ketma-ketlik](src/algorithms/sets/longest-common-subsequence) (LCS)\n  - `A` [Eng uzun ortib boruvchi ketma-ketlik](src/algorithms/sets/longest-increasing-subsequence)\n  - `A` [Eng qisqa umumiy ketma-ketlik](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  - `A` [Knapsack muammosi](src/algorithms/sets/knapsack-problem) - \"0/1\" va \"Bir-biriga bog'lanmagan\"\n  - `A` [Maksimal kichik massiv](src/algorithms/sets/maximum-subarray) - Toʻliq kuch va dinamik dasturlash (Kadane usuli) versiyalari\n  - `A` [Kombinatsiya yig'indisi](src/algorithms/sets/combination-sum) - ma'lum summani tashkil etuvchi barcha kombinatsiyalarni topish\n- **Stringlar**\n  - `B` [Hamming masofasi](src/algorithms/string/hamming-distance) - belgilarning bir-biridan farq qiladigan pozitsiyalar soni\n  - `B` [Palindrom](src/algorithms/string/palindrome) - satrning teskari tomoni ham bir xil ekanligini tekshirish\n  - `A` [Levenshtein masofasi](src/algorithms/string/levenshtein-distance) - ikki ketma-ketlik o'rtasidagi minimal tahrirlash masofasi\n  - `A` [Knuth–Morris–Pratt Algoritmi](src/algorithms/string/knuth-morris-pratt) (KMP Algoritmi) - kichik qatorlarni qidirish (mosh keluvchi naqshni qidirish)\n  - `A` [Z Algoritmi](src/algorithms/string/z-algorithm) - kichik qatorlarni qidirish (mosh keluvchi naqshni qidirish)\n  - `A` [Rabin Karp Algoritmi](src/algorithms/string/rabin-karp) - kichik qatorlarni qidirish\n  - `A` [Eng uzun umumiy kichik matn](src/algorithms/string/longest-common-substring)\n  - `A` [Regulyar ifoda moslashuvi](src/algorithms/string/regular-expression-matching) (RegEx)\n- **Qidiruvlar**\n  - `B` [Linear qidirish](src/algorithms/search/linear-search)\n  - `B` [Jump qidirish](src/algorithms/search/jump-search) (yoki Blok qidirish) - saralangan qatorda qidirish\n  - `B` [Ikkilik qidirish](src/algorithms/search/binary-search) - saralangan qatorda qidirish\n  - `B` [Interpolatsiya qidirish](src/algorithms/search/interpolation-search) - bir tekis taqsimlangan saralangan qatorda qidirish\n- **Tartiblash**\n  - `B` [Pufakcha tartiblash](src/algorithms/sorting/bubble-sort)\n  - `B` [Tanlash tartibi](src/algorithms/sorting/selection-sort)\n  - `B` [Kiritish tartibi](src/algorithms/sorting/insertion-sort)\n  - `B` [Heap tartibi](src/algorithms/sorting/heap-sort)\n  - `B` [Birlashtirish tartibi](src/algorithms/sorting/merge-sort)\n  - `B` [Tezkor saralash](src/algorithms/sorting/quick-sort) - joyida va joyida bo'lmagan amalga oshirish\n  - `B` [Shell tartiblash](src/algorithms/sorting/shell-sort)\n  - `B` [Sanash tartibi](src/algorithms/sorting/counting-sort)\n  - `B` [Radiksli tartiblash](src/algorithms/sorting/radix-sort)\n  - `B` [Bucket tartiblash](src/algorithms/sorting/bucket-sort)\n- **Bog'langan ro'yhatlar**\n  - `B` [To'g'ri traversal](src/algorithms/linked-list/traversal)\n  - `B` [Teskari traversal](src/algorithms/linked-list/reverse-traversal)\n- **Daraxtlar**\n  - `B` [Birinchi-pastga qarab qidirish](src/algorithms/tree/depth-first-search) (Depth-First Search)\n  - `B` [Birinchi-yonga qarab qidirish](src/algorithms/tree/breadth-first-search) (Breadth-First Search)\n- **Grafiklar**\n  - `B` [Birinchi-pastga qarab qidirish](src/algorithms/graph/depth-first-search) (Depth-First Search)\n  - `B` [Birinchi-yonga qarab qidirish](src/algorithms/graph/breadth-first-search) (Breadth-First Search)\n  - `B` [Kruskal Algoritmi](src/algorithms/graph/kruskal) - og'irlikdagi yo'naltirilmagan grafik uchun Minimal kengayuvchi daraxtni (MST) topish\n  - `A` [Dijkstra Algoritmi](src/algorithms/graph/dijkstra) - grafikning bir cho'qqisidan qolgan barcha nuqtalarga eng qisqa yo'llarni topish\n  - `A` [Bellman-Ford Algoritmi](src/algorithms/graph/bellman-ford) - grafikning bir cho'qqisidan qolgan barcha nuqtalarga eng qisqa yo'llarni topish\n  - `A` [Floyd-Warshall Algoritmi](src/algorithms/graph/floyd-warshall) - grafikning barcha uchlari orasidagi eng qisqa masofalarni topish\n  - `A` [Siklni aniqlash](src/algorithms/graph/detect-cycle) - yo'naltirilgan va yo'naltirilmagan grafiklar uchun (DFS va Disjoint Set-ga asoslangan versiyalar)\n  - `A` [Prim Algoritmi](src/algorithms/graph/prim) - og'irlikdagi yo'naltirilmagan grafik uchun Minimal kengayuvchi daraxtni (MST) topish\n  - `A` [Topologik saralash](src/algorithms/graph/topological-sorting) - DFS metodi\n  - `A` [Artikulyatsiya nuqtalari](src/algorithms/graph/articulation-points) - Tarjan algoritmi (DFS asosida)\n  - `A` [Ko'priklar](src/algorithms/graph/bridges) - DFS asosidagi algoritm\n  - `A` [Eyler yo'li va Eyler sxemasi](src/algorithms/graph/eulerian-path) - Fleury algoritmi - Har bir chekkaga bir marta tashrif buyurish\n  - `A` [Gamilton sikli](src/algorithms/graph/hamiltonian-cycle) - Har bir cho'qqiga bir marta tashrif buyurish\n  - `A` [Kuchli bog'langan komponentlar](src/algorithms/graph/strongly-connected-components) - Kosaraju algoritmi\n  - `A` [Sayohatchi sotuvchi muammosi](src/algorithms/graph/travelling-salesman) - har bir shaharga tashrif buyuradigan va kelib chiqqan shaharga qaytib keladigan eng qisqa yo'l\n- **Kriptografiya**\n  - `B` [Polynomial Hash](src/algorithms/cryptography/polynomial-hash) - polinomga asoslangan hash funktsiyasi\n  - `B` [Rail Fence Cipher](src/algorithms/cryptography/rail-fence-cipher) - xabarlarni kodlash uchun transpozitsiya shifrlash algoritmi\n  - `B` [Caesar Cipher](src/algorithms/cryptography/caesar-cipher) - oddiy almashtirish shifridir\n  - `B` [Hill Cipher](src/algorithms/cryptography/hill-cipher) - chiziqli algebraga asoslangan almashtirish shifri\n- **Machine Learning**\n  - `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - Mashinalar aslida qanday o'rganishi mumkinligini ko'rsatadigan 7 ta oddiy JS funksiyasi (forward/backward tarqalish)\n  - `B` [k-NN](src/algorithms/ml/knn) - eng yaqin qo'shnilarni tasniflash algoritmi\n  - `B` [k-Means](src/algorithms/ml/k-means) - k-Means kalsterlash algoritmi\n- **Tasvirga ishlov berish**\n  - `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - kontentga moslashuvchan rasm o'lchamini o'zgartirish algoritmi\n- **Statistikalar**\n  - `B` [Weighted Random](src/algorithms/statistics/weighted-random) - elementlarning og'irligi asosida ro'yxatdan tasodifiy elementni tanlash\n- **Evolyutsion algoritmlar**\n  - `A` [Genetik algoritm](https://github.com/trekhleb/self-parking-car-evolution) - avtoturargohni o'rgatish uchun genetik algoritm qanday qo'llanilishiga misol.\n- **Kategoriyasiz**\n  - `B` [Xanoy minorasi](src/algorithms/uncategorized/hanoi-tower)\n  - `B` [Kvadrat matritsaning aylanishi](src/algorithms/uncategorized/square-matrix-rotation) - joyidagi algoritm\n  - `B` [Sakrash o'yini](src/algorithms/uncategorized/jump-game) - orqaga qaytish, dinamik dasturlash (yuqoridan pastga + pastdan yuqoriga) va ochko'z misollar\n  - `B` [Noyob yo'llar](src/algorithms/uncategorized/unique-paths) - orqaga qaytish, dinamik dasturlash va Paskal uchburchagiga asoslangan misolla\n  - `B` [Yomg'ir teraslari](src/algorithms/uncategorized/rain-terraces) - yomg'ir suvini ushlab turish muammosi (dinamik dasturlash va qo'pol kuch versiyalari)\n  - `B` [Rekursiv zinapoya](src/algorithms/uncategorized/recursive-staircase) - yuqoriga chiqish yo'llari sonini hisoblash (4 ta echim)\n  - `B` [Aksiyalarni sotib olish va sotish uchun eng yaxshi vaqt](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - bo'linib-zabt etish va bir marta o'tish misollari\n  - `A` [N-Queens Muommosi](src/algorithms/uncategorized/n-queens)\n  - `A` [Ritsar sayohati](src/algorithms/uncategorized/knight-tour)\n\n### Paradigma bo'yicha algoritmlar\n\nAlgorithmic paradigm - bu algoritmlar sinfini loyihalashtirishga asos bo'lib xizmat qiladigan umumiy usul yoki yondashuv. Bu algoritm tushunchasidan yuqori darajadagi abstraktsiya bo'lib, algoritm kompyuter dasturi tushunchasidan yuqori darajadagi abstraktsiya bo'lgani kabi.\n\n- **Brute Force** - barcha imkoniyatlarni ko'rib chiqib va eng yaxshi echimni tanlash\n  - `B` [Chiziqli qidirish](src/algorithms/search/linear-search)\n  - `B` [Yomg'irli teraslar](src/algorithms/uncategorized/rain-terraces) - yomg'ir suvini to'plash muammosi\n  - `B` [Rekursiv zinapoya](src/algorithms/uncategorized/recursive-staircase) - cho'qqiga chiqish yo'llari sonini hisoblash\n  - `A` [Maksimal kichik massiv](src/algorithms/sets/maximum-subarray)\n  - `A` [Sayohatchi sotuvchi muammosi](src/algorithms/graph/travelling-salesman) - har bir shaharga tashrif buyuradigan va kelib chiqqan shaharga qaytib keladigan eng qisqa yo'l\n  - `A` [Diskret Furye transformatsiyasi](src/algorithms/math/fourier-transform) - vaqt funksiyasini (signalni) uni tashkil etuvchi chastotalarga ajratish\n- **Greedy** - kelajakni o'ylamasdan, hozirgi vaqtda eng yaxshi variantni tanlash\n  - `B` [Sakrash o'yini](src/algorithms/uncategorized/jump-game)\n  - `A` [Bog'lanmagan yukxalta muammosi](src/algorithms/sets/knapsack-problem)\n  - `A` [Dijkstra Algoritmi](src/algorithms/graph/dijkstra) - grafikning bir cho'qqisidan qolgan barcha nuqtalarga eng qisqa yo'llarni topish\n  - `A` [Prim Algoritmi](src/algorithms/graph/prim) - og'irlikdagi yo'naltirilmagan grafik uchun Minimal kengayuvchi daraxtni (MST) topish\n  - `A` [Kruskal Algoritmi](src/algorithms/graph/kruskal) - og'irlikdagi yo'naltirilmagan grafik uchun Minimal kengayuvchi daraxtni (MST) topish\n- **Divide and Conquer** - muammoni kichikroq qismlarga bo'lib va keyin bu qismlarni hal qilish\n\n  - `B` [Ikkilik qidiruv](src/algorithms/search/binary-search)\n  - `B` [Xanoy minorasi](src/algorithms/uncategorized/hanoi-tower)\n  - `B` [Paskal uchburchagi](src/algorithms/math/pascal-triangle)\n  - `B` [Evklid Algoritmi](src/algorithms/math/euclidean-algorithm) - eng katta umumiy bo'luvchini (EKUB) hisoblash\n  - `B` [Birlashtirish tartibi](src/algorithms/sorting/merge-sort)\n  - `B` [Tezkor saralash](src/algorithms/sorting/quick-sort)\n  - `B` [Birinchi-pastga qarab qidirish daraxti](src/algorithms/tree/depth-first-search) (DFS)\n  - `B` [Birinchi-pastga qarab qidirish grafigi](src/algorithms/graph/depth-first-search) (DFS)\n  - `B` [Matritsalar](src/algorithms/math/matrix) - turli shakldagi matritsalarni hosil qilish va kesib o'tish\n  - `B` [Sakrash o'yini](src/algorithms/uncategorized/jump-game)\n  - `B` [Tez ko'tarish](src/algorithms/math/fast-powering)\n  - `B` [Aksiyalarni sotib olish va sotish uchun eng yaxshi vaqt](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - bo'linib-zabt etish va bir marta o'tish misollari\n  - `A` [Permutatsiyalar](src/algorithms/sets/permutations) (takroriyalash bilan va takroriyalashsiz)\n  - `A` [Kombinatsiyalar](src/algorithms/sets/combinations) (takroriyalash bilan va takroriyalashsiz)\n  - `A` [Maksimal kichik massiv](src/algorithms/sets/maximum-subarray)\n\n- **Dinamik dasturlash** - ilgari topilgan kichik yechimlar yordamida yechim yaratish\n  - `B` [Fibonachchi raqam](src/algorithms/math/fibonacci)\n  - `B` [Sakrash o'yini](src/algorithms/uncategorized/jump-game)\n  - `B` [Noyob yo'llar](src/algorithms/uncategorized/unique-paths)\n  - `B` [Yomg'ir teraslari](src/algorithms/uncategorized/rain-terraces) - yomg'ir suvini to'plash muammosi\n  - `B` [Recursive Staircase](src/algorithms/uncategorized/recursive-staircase) - count the number of ways to reach to the top\n  - `B` [Seam Carving](src/algorithms/image-processing/seam-carving) - kontentga moslashuvchan rasm o'lchamini o'zgartirish algoritmi\n  - `A` [Levenshtein masofasi](src/algorithms/string/levenshtein-distance) - ikki ketma-ketlik o'rtasidagi minimal tahrirlash masofasi\n  - `A` [Eng uzun umumiy ketma-ketlik](src/algorithms/sets/longest-common-subsequence) (LCS)\n  - `A` [Eng uzun umumiy kichik matn](src/algorithms/string/longest-common-substring)\n  - `A` [Eng uzun ortib boruvchi ketma-ketlik](src/algorithms/sets/longest-increasing-subsequence)\n  - `A` [Eng qisqa umumiy ketma-ketlik](src/algorithms/sets/shortest-common-supersequence)\n  - `A` [0/1 Knapsak muommosi](src/algorithms/sets/knapsack-problem)\n  - `A` [Butun sonlarni bo'lish](src/algorithms/math/integer-partition)\n  - `A` [Maksimal kichik massiv](src/algorithms/sets/maximum-subarray)\n  - `A` [Bellman-Ford Algoritmi](src/algorithms/graph/bellman-ford) - grafikning bir cho'qqisidan qolgan barcha nuqtalarga eng qisqa yo'llarni topish\n  - `A` [Floyd-Warshall Algoritmi](src/algorithms/graph/floyd-warshall) -grafikning barcha uchlari orasidagi eng qisqa masofalarni topish\n  - `A` [Regulyar ifoda moslashuvi](src/algorithms/string/regular-expression-matching)\n- **Backtracking** - brute forcega o'xshab, barcha mumkin bo'lgan yechimlarni generatsiya qilishga harakat qiladi, lekin har safar keyingi yechimni yaratganingizda, yechim barcha shartlarga javob beradimi yoki yo'qligini tekshirasiz va shundan keyingina keyingi yechimlarni ishlab chiqarishni davom ettirasiz. Aks holda, orqaga qaytib, yechim topishning boshqa yo'liga o'tasiz. Odatda state-space ning DFS-qidiruvi ishlatiladi.\n  - `B` [Sakrash o'yini](src/algorithms/uncategorized/jump-game)\n  - `B` [Noyob yo'llar](src/algorithms/uncategorized/unique-paths)\n  - `B` [Power Set](src/algorithms/sets/power-set) - to'plamning barcha kichik to'plamlari\n  - `A` [Gamilton sikli](src/algorithms/graph/hamiltonian-cycle) - Har bir cho'qqiga bir marta tashrif buyurish\n  - `A` [N-Queens muommosi](src/algorithms/uncategorized/n-queens)\n  - `A` [Ritsar sayohati](src/algorithms/uncategorized/knight-tour)\n  - `A` [Kombinatsiya yig'indisi](src/algorithms/sets/combination-sum) - ma'lum summani tashkil etuvchi barcha kombinatsiyalarni topish\n- **Branch & Bound** - shu paytgacha topilgan eng arzon echimdan kattaroq xarajatlarga ega qisman echimlarni bekor qilish uchun, backtracking qidiruvining har bir bosqichida topilgan eng arzon echimni eslab qoling va shu paytgacha topilgan eng arzon yechim narxidan muammoni eng kam xarajatli yechim narxining past chegarasi sifatida foydalaning. Odatda state-space daraxtining DFS o'tishi bilan birgalikda BFS traversal qo'llaniladi.\n\n## Ushbu repozitoriyadan qanday foydalanish kerak\n\n**Barcha dependensiylarni o'rnating**\n\n```\nnpm install\n```\n\n**ESLint ni ishga tushiring**\n\nKod sifatini tekshirish uchun ESLint ni ishga tushirishingiz mumkin.\n\n```\nnpm run lint\n```\n\n**Barcha testlarni ishga tushuring**\n\n```\nnpm test\n```\n\n**Testlarni nom bo'yicha ishga tushirish**\n\n```\nnpm test -- 'LinkedList'\n```\n\n**Muammolarni bartaraf qilish (Troubleshooting)**\n\nAgar linting yoki sinov muvaffaqiyatsiz bo'lsa, `node_modules` papkasini o'chirib, npm paketlarini qayta o'rnatishga harakat qiling:\n\n```\nrm -rf ./node_modules\nnpm i\n```\n\nShuningdek, to'g'ri Node versiyasidan foydalanayotganingizga ishonch hosil qiling (`>=16`). Agar Node versiyasini boshqarish uchun [nvm](https://github.com/nvm-sh/nvm) dan foydalanayotgan bo'lsangiz, loyihaning ildiz papkasidan `nvm use` ni ishga tushiring va to'g'ri versiya tanlanadi.\n\n**O'yin maydoni (Playground)**\n\n`./src/playground/playground.js` faylida ma'lumotlar strukturalari va algoritmlar bilan o'ynashingiz, `./src/playground/test/playground.test.js` faylida esa ular uchun testlar yozishingiz mumkin.\n\nShundan so'ng, playground kodingiz kutilgandek ishlashini tekshirish uchun quyidagi buyruqni ishga tushirishingiz kifoya:\n\n```\nnpm test -- 'playground'\n```\n\n## Foydali ma'lumotlar\n\n### Manbalar\n\n- [▶ Data Structures and Algorithms on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n- [✍🏻 Data Structure Sketches](https://okso.app/showcase/data-structures)\n\n### Big O Notation\n\n_Big O notation_ algoritmlarni kirish hajmi oshgani sayin ularning ishlash vaqti yoki bo'sh joy talablari qanday o'sishiga qarab tasniflash uchun ishlatiladi. Quyidagi jadvalda siz Big O notatsiyasida ko'rsatilgan algoritmlarning o'sishining eng keng tarqalgan tartiblarini topishingiz mumkin.\n\n![Big O grafiklar](./assets/big-o-graph.png)\n\nManba: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nQuyida eng ko'p qo'llaniladigan Big O notatsiyalarining ro'yxati va ularning kirish ma'lumotlarining turli o'lchamlariga nisbatan ishlashini taqqoslash keltirilgan.\n\n| Big O Notatsiya | Turi         | 10 ta element uchun hisob-kitoblar | 100 ta element uchun hisob-kitoblar | 1000 ta element uchun hisob-kitoblar |\n| --------------- | ------------ | ---------------------------------- | ----------------------------------- | ------------------------------------ |\n| **O(1)**        | O'zgarmas    | 1                                  | 1                                   | 1                                    |\n| **O(log N)**    | Logarifmik   | 3                                  | 6                                   | 9                                    |\n| **O(N)**        | Chiziqli     | 10                                 | 100                                 | 1000                                 |\n| **O(N log N)**  | n log(n)     | 30                                 | 600                                 | 9000                                 |\n| **O(N^2)**      | Kvadrat      | 100                                | 10000                               | 1000000                              |\n| **O(2^N)**      | Eksponensial | 1024                               | 1.26e+29                            | 1.07e+301                            |\n| **O(N!)**       | Faktorial    | 3628800                            | 9.3e+157                            | 4.02e+2567                           |\n\n### Ma'lumotlar tuzilmalarining operatsiyalari murakkabligi\n\n| Ma'lumotlar tuzilmalari     | Kirish | Qidirish | Kiritish | O'chirish | Izohlar                                                    |\n| --------------------------- | :----: | :------: | :------: | :-------: | :--------------------------------------------------------- |\n| **Massiv**                  |   1    |    n     |    n     |     n     |                                                            |\n| **Stak**                    |   n    |    n     |    1     |     1     |                                                            |\n| **Navbat**                  |   n    |    n     |    1     |     1     |                                                            |\n| **Bog'langan ro'yhat**      |   n    |    n     |    1     |     n     |                                                            |\n| **Hash jadval**             |   -    |    n     |    n     |     n     | Mukammal xash funksiyasi bo'lsa, xarajatlar O (1) bo'ladi. |\n| **Ikkilik qidiruv daraxti** |   n    |    n     |    n     |     n     | Balanslangan daraxt narxida O(log(n)) bo'ladi.             |\n| **B-daraxti**               | log(n) |  log(n)  |  log(n)  |  log(n)   |                                                            |\n| **Qizil-qora daraxt**       | log(n) |  log(n)  |  log(n)  |  log(n)   |                                                            |\n| **AVL Daraxt**              | log(n) |  log(n)  |  log(n)  |  log(n)   |                                                            |\n| **Bloom filtri**            |   -    |    1     |    1     |     -     | Qidiruv paytida noto'g'ri pozitivlar bo'lishi mumkin       |\n\n### Massivlarni saralash algoritmlarining murakkabligi\n\n| Nomi                      |  Eng yaxshi   |          O'rta          |          Eng yomon          | Xotira | Barqaror | Izohlar                                                                      |\n| ------------------------- | :-----------: | :---------------------: | :-------------------------: | :----: | :------: | :--------------------------------------------------------------------------- |\n| **Pufakcha tartiblash**   |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |   1    |    Ha    |                                                                              |\n| **Kiritish tartibi**      |       n       |      n<sup>2</sup>      |        n<sup>2</sup>        |   1    |    Ha    |                                                                              |\n| **Tanlash tartibi**       | n<sup>2</sup> |      n<sup>2</sup>      |        n<sup>2</sup>        |   1    |   Yo'q   |                                                                              |\n| **Heap tartibi**          | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |   1    |   Yo'q   |                                                                              |\n| **Birlashtirish tartibi** | n&nbsp;log(n) |      n&nbsp;log(n)      |        n&nbsp;log(n)        |   n    |    Ha    |                                                                              |\n| **Tezkor saralash**       | n&nbsp;log(n) |      n&nbsp;log(n)      |        n<sup>2</sup>        | log(n) |   Yo'q   | Tezkor saralash odatda O(log(n)) stek maydoni bilan joyida amalga oshiriladi |\n| **Shell tartiblash**      | n&nbsp;log(n) | depends on gap sequence | n&nbsp;(log(n))<sup>2</sup> |   1    |   Yo'q   |                                                                              |\n| **Sanash tartibi**        |     n + r     |          n + r          |            n + r            | n + r  |    Ha    | r - massivdagi eng katta raqam                                               |\n| **Radiksli tartiblash**   |    n \\* k     |         n \\* k          |           n \\* k            | n + k  |    Ha    | k - eng uzun kalitning uzunligi                                              |\n\n## Loyihani qo'llab-quvvatlovchilar\n\n> Siz ushbu loyihani ❤️️ [GitHub](https://github.com/sponsors/trekhleb) yoki ❤️️ [Patreon](https://www.patreon.com/trekhleb) orqali qo'llab-quvvatlashingiz mumkin.\n\n[Ushbu loyihani qo'llab-quvvatlagan odamlar](https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md) `∑ = 1`\n\n## Muallif\n\n[@trekhleb](https://trekhleb.dev)\n\nA few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.vi-VN.md",
          "type": "blob",
          "size": 25.40625,
          "content": "# JavaScript Thuật Toán và Cấu Trúc Dữ Liệu\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\nRepository này bao gồm nhiều ví dụ thuật toán và cấu trúc dữ liệu phổ biến\ndựa trên Javascript.\n\nMối thuật toán và cấu trúc dữ liệu có README riêng với những lý giải và links\nliên quan để đọc thêm (bao gồm cả những videos trên Youtube).\n\n_Đọc bằng ngôn ngữ khác:_\n[_English_](README.md),\n[_简体中文_](README.zh-CN.md),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md)\n\n*☝ Dự án này chỉ được sử dụng cho mục đích học tập và nghiên cứu, **không** được dùng\ncho mục đích thương mại.*\n\n## Cấu Trúc Dữ Liệu\n\nCấu trúc dữ liệu là một cách cụ thể để tổ chức và lưu trữ dữ liệu trong máy tính để nó có thể\nđược truy cập và sửa đổi một cách hiệu quả. Chính xác hơn, cấu trúc dữ liệu là một tập hợp\ncác giá trị dữ liệu, các mối quan hệ giữa chúng và các hàm hoặc phép toán có thể được áp dụng\ncho dữ liệu.\n\n`B` - Cơ bản, `A` - Nâng cao\n\n* `B` [Danh sách liên kết](src/data-structures/linked-list)\n* `B` [Danh sách liên kết đôi](src/data-structures/doubly-linked-list)\n* `B` [Hàng đợi](src/data-structures/queue)\n* `B` [Ngăn xếp](src/data-structures/stack)\n* `B` [Bảng băm](src/data-structures/hash-table)\n* `B` [Đống](src/data-structures/heap) - max và min heap\n* `B` [Hàng đợi ưu tiên](src/data-structures/priority-queue)\n* `A` [Cây tiền tố](src/data-structures/trie)\n* `A` [Cây](src/data-structures/tree)\n  * `A` [Cây tìm kiếm nhị phân](src/data-structures/tree/binary-search-tree)\n  * `A` [Cây AVL](src/data-structures/tree/avl-tree)\n  * `A` [Cây đỏ đen](src/data-structures/tree/red-black-tree)\n  * `A` [Cây phân đoạn](src/data-structures/tree/segment-tree) - với các ví dụ truy vấn phạm vi nhỏ nhất/lớn nhất/tổng\n  * `A` [CÂy Fenwick](src/data-structures/tree/fenwick-tree) (Cây chỉ mục nhị phân)\n* `A` [Đồ thị](src/data-structures/graph) (có hướng và vô hướng)\n* `A` [Tập hợp không giao nhau](src/data-structures/disjoint-set)\n* `A` [Bộ lọc Bloom](src/data-structures/bloom-filter)\n\n## Thuật Toán\n\nThuật toán là một đặc tả rõ ràng về cách giải quyết một lớp vấn đề. Nó là một tập hợp các\nquy tắc xác định chính xác một chuỗi phép toán.\n\n`B` - Cơ bản, `A` - Nâng cao\n\n### Thuật toán theo chủ đề\n\n* **Toán**\n  * `B` [Thao tác bit](src/algorithms/math/bits) - đặt/lấy/cập nhật/xóa bit, nhân/chia 2, đổi dấu âm,...\n  * `B` [Giai thừa](src/algorithms/math/factorial)\n  * `B` [Số Fibonacci](src/algorithms/math/fibonacci) - cổ điển và dạng đóng\n  * `B` [Thừa số nguyên tố](src/algorithms/math/prime-factors) - tìm và đếm thừa số nguyên tố sử dụng định luật Hardy-Ramanujan's\n  * `B` [Kiểm tra tính nguyên tố](src/algorithms/math/primality-test) (phân chia thử nghiệm)\n  * `B` [Thuật toán Euclid](src/algorithms/math/euclidean-algorithm) - tính ước số chung lớn nhất (GCD)\n  * `B` [Bội số chung nhỏ nhất](src/algorithms/math/least-common-multiple) (LCM)\n  * `B` [Sàng số nguyên tố](src/algorithms/math/sieve-of-eratosthenes) - tìm tất cả các số nguyên tố trong bất kỳ phạm vi nhất định nào\n  * `B` [Xác định lũy thừa của 2](src/algorithms/math/is-power-of-two) - kiểm tra xem số có phải là lũy thừa của 2 hay không (thuật toán nguyên bản và theo bit)\n  * `B` [Tam giác Pascal](src/algorithms/math/pascal-triangle)\n  * `B` [Số phức](src/algorithms/math/complex-number) - số phức và các phép toán cơ bản với số phức\n  * `B` [Radian & độ](src/algorithms/math/radian) - chuyển đổi giữa đơn vị radian và độ\n  * `B` [Tính nhanh lũy thừa](src/algorithms/math/fast-powering)\n  * `B` [Phương pháp Horner's](src/algorithms/math/horner-method) - tính giá trị đa thức\n  * `B` [Ma trận](src/algorithms/math/matrix) - ma trận và các phép toán cơ bản (phép nhân, phép chuyển vị,...)\n  * `B` [Khoảng cách Euclid](src/algorithms/math/euclidean-distance) - khoảng cách giữa hai điểm/véc-tơ/ma trận\n  * `A` [Phân hoạch](src/algorithms/math/integer-partition)\n  * `A` [Căn bậc hai](src/algorithms/math/square-root) - phương pháp Newton\n  * `A` [Thuật cắt đường tròn - Lưu Huy](src/algorithms/math/liu-hui) - phép tính gần đúng số π dựa vào đa giác\n  * `A` [Biến đổi Fourier rời rạc](src/algorithms/math/fourier-transform) - phân giải tín hiệu thời gian thành các tần số tạo nên tín hiệu đó\n* **Tập hợp**\n  * `B` [Tích Đề-các](src/algorithms/sets/cartesian-product) - tích của nhiều tập hợp\n  * `B` [Thuật toán xáo trộn](src/algorithms/sets/fisher-yates) - dãy hữu hạn hoán vị ngẫu nhiên\n  * `A` [Tập lũy thừa](src/algorithms/sets/power-set) - tập hợp chứa tất cả các tập con (theo bit và quay lui)\n  * `A` [Hoán vị](src/algorithms/sets/permutations) (lặp và không lặp)\n  * `A` [Tổ hợp](src/algorithms/sets/combinations) (lặp và không lặp)\n  * `A` [Dãy con chung dài nhất](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Dãy con chung tăng dần dài nhất](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Dãy con chung ngắn nhất](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [Bài toán xếp ba lô](src/algorithms/sets/knapsack-problem) - dạng 0-1 và không bị chặn\n  * `A` [Mảng con lớn nhất](src/algorithms/sets/maximum-subarray) - phiên bản vét cạn và quy hoạch động (Kadane)\n  * `A` [Tổ hợp của tổng](src/algorithms/sets/combination-sum) - tìm tất cả các tổ hợp tạo thành tổng cụ thể \n* **Chuỗi**\n  * `B` [Khoảng cách Hamming](src/algorithms/string/hamming-distance) - số các vị trí các ký hiệu khác nhau \n  * `A` [Khoảng cách Levenshtein](src/algorithms/string/levenshtein-distance) - khoảng cách thay đổi nhỏ nhất giữa hai chuỗi ký tự\n  * `A` [Thuật toán Knuth–Morris–Pratt](src/algorithms/string/knuth-morris-pratt) (thuật toán KMP) - tìm chuỗi con (đối sánh mẫu) \n  * `A` [Thuật toán Z](src/algorithms/string/z-algorithm) - tìm chuỗi con (đối sánh mẫu)\n  * `A` [Thuật toán Rabin Karp](src/algorithms/string/rabin-karp) - tìm chuỗi con\n  * `A` [Xâu con chung dài nhất](src/algorithms/string/longest-common-substring)\n  * `A` [Phối biểu thức chính quy](src/algorithms/string/regular-expression-matching)\n* **Tìm kiếm**\n  * `B` [Tìm kiếm tuyến tính](src/algorithms/search/linear-search)\n  * `B` [Tìm kiếm nhảy](src/algorithms/search/jump-search) (tìm khối) - tìm kiếm trong mảng đã sắp xếp \n  * `B` [Tìm kiếm nhị phân](src/algorithms/search/binary-search) - tìm kiếm trong mảng đã sắp xếp \n  * `B` [Tìm kiếm nội suy ](src/algorithms/search/interpolation-search) - Tìm kiếm strong mảng có thứ tự được phân phối đồng nhất\n* **Sắp xếp**\n  * `B` [Sắp xếp nổi bọt](src/algorithms/sorting/bubble-sort)\n  * `B` [Sắp xếp chọn](src/algorithms/sorting/selection-sort)\n  * `B` [Sắp xếp chèn](src/algorithms/sorting/insertion-sort)\n  * `B` [Sắp xếp vun đống](src/algorithms/sorting/heap-sort)\n  * `B` [Sắp xếp trộn](src/algorithms/sorting/merge-sort)\n  * `B` [Sắp xếp nhanh](src/algorithms/sorting/quick-sort) - Tại chỗ và không tại chỗ\n  * `B` [Shellsort](src/algorithms/sorting/shell-sort)\n  * `B` [Sắp xếp đếm](src/algorithms/sorting/counting-sort)\n  * `B` [Sắp xếp theo cơ số](src/algorithms/sorting/radix-sort)\n* **Danh sách liên kết**\n  * `B` [Di chuyển chính hướng](src/algorithms/linked-list/traversal)\n  * `B` [Di chuyển ngược hướng](src/algorithms/linked-list/reverse-traversal)\n* **Cây**\n  * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS)\n* **Đồ thị**\n  * `B` [Tìm kiếm theo chiều sâu](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Tìm kiếm theo chiều rộng](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [Thuật toán Kruskal](src/algorithms/graph/kruskal) - tìm cây bao trùm nhỏ nhất (MST) cho đồ thị vô hướng có trọng số\n  * `A` [Thuật toán Dijkstra Algorithm](src/algorithms/graph/dijkstra) - tìm những đường ngắn nhất từ một định tới tất cả các đỉnh\n  * `A` [Thuật toán Bellman-Ford](src/algorithms/graph/bellman-ford) - tìm những đường ngắn nhất từ một đỉnh tới tất cả các đỉnh của đồ thị\n  * `A` [Thuật toán Floyd-Warshall](src/algorithms/graph/floyd-warshall) - tìm những đường ngắn nhất giữa tất cả các cặp đỉnh\n  * `A` [Phát hiện vòng](src/algorithms/graph/detect-cycle) - cho cả đồ thị có hướng và vô hướng (dựa trên DFS và tập không giao)\n  * `A` [Thuật toán Prim](src/algorithms/graph/prim) - tìm cây bao trùm nhỏ nhất (MST) cho đồ thị vô hướng có trọng số\n  * `A` [Sắp xếp tô pô](src/algorithms/graph/topological-sorting) - phương pháp DFS\n  * `A` [Điểm khớp](src/algorithms/graph/articulation-points) - Thuật toán Tarjan (dựa trên DFS)\n  * `A` [Cầu nối](src/algorithms/graph/bridges) - dựa trên DFS\n  * `A` [Đường đi Euler và Chu trình Euler](src/algorithms/graph/eulerian-path) - thuật toán Fleury - đi qua các cạnh chỉ một lần duy nhất\n  * `A` [Chu trình Hamilton](src/algorithms/graph/hamiltonian-cycle) - đi qua các đỉnh chỉ một lần duy nhất\n  * `A` [Các thành phần kết nối chặt](src/algorithms/graph/strongly-connected-components) - Thuật toán Kosaraju\n  * `A` [Bài toán người bán hàng](src/algorithms/graph/travelling-salesman) - tuyến đường ngắn nhất có thể đến thăm từng thành phố và trở về thành phố gốc\n* **Mật mã học**\n  * `B` [Băm đa thức](src/algorithms/cryptography/polynomial-hash) - lăn hàm băm dựa trên đa thức \n  * `B` [Mật mã hàng rào đường sắt](src/algorithms/cryptography/rail-fence-cipher) - một thuật toán mật mã chuyển vị để mã hóa thông điệp \n  * `B` [Mật mã Caesar](src/algorithms/cryptography/caesar-cipher) - mật mã chuyển vị đơn giản\n  * `B` [Mật mã Hill](src/algorithms/cryptography/hill-cipher) - mật mã chuyển vị đơn giản dựa trên đại số tuyến tính\n* **Học máy**\n  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) - 7 hàm JS đơn giản minh họa cách máy tính thực sự có thể học (truyền thuận / truyền ngược) \n  * `B` [k-NN](src/algorithms/ml/knn) - thuật toán phân loại k láng giềng gần nhất\n  * `B` [k-Means](src/algorithms/ml/k-means) - thuật toán phân cụm k-Means\n* **Khác**\n  * `B` [Tháp Hà Nội](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Xoay ma trận vuông](src/algorithms/uncategorized/square-matrix-rotation) - thuật toán tại chỗ\n  * `B` [Trò chơi nhảy](src/algorithms/uncategorized/jump-game) - ví dụ quay lui, quy hoạch động (từ trên xuống + từ dưới lên), dynamic programming (top-down + bottom-up) và tham lam\n  * `B` [Các đường đi đặc trưng duy nhất](src/algorithms/uncategorized/unique-paths) - ví dụ quay lui, quy hoạch động và tam giác Pascal\n  * `B` [Thu thập nước mưa](src/algorithms/uncategorized/rain-terraces) - bài toán bẫy nước mưa (phiên bản quy hoạch động và vét cạn)\n  * `B` [Cầu thang đệ quy](src/algorithms/uncategorized/recursive-staircase) - đếm số cách lên đến đỉnh (4 lời giải)\n  * `B` [Thời điểm tốt nhất để mua bán cổ phiếu ](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - ví dụ chia để trị và một đường chuyền\n  * `A` [Bài toán n quân hậu](src/algorithms/uncategorized/n-queens)\n  * `A` [Mã đi tuần](src/algorithms/uncategorized/knight-tour)\n\n### Thuật toán theo mẫu hình\n\nMẫu hình thuật toán là một phương pháp hoặc cách tiếp cận chung làm cơ sở cho việc thiết kế một\nlớp thuật toán. Nó là một sự trừu tượng cao hơn khái niệm về một thuật toán, cũng giống như\nmột thuật toán là một sự trừu tượng cao hơn một chương trình máy tính. \n\n* **Vét cạn** - xem xét tất cả các khả năng và chọn giải pháp tốt nhất \n  * `B` [Tìm kiếm tuyến tính](src/algorithms/search/linear-search)\n  * `B` [Thu thập nước mưa](src/algorithms/uncategorized/rain-terraces) - bài toán bẫy nước mưa\n  * `B` [Cầu thang đệ quy](src/algorithms/uncategorized/recursive-staircase) - đếm số cách lên đến đỉnh\n  * `A` [Mảng con lớn nhất](src/algorithms/sets/maximum-subarray)\n  * `A` [Bài toán người bán hàng](src/algorithms/graph/travelling-salesman) - tuyến đường ngắn nhất có thể đến thăm từng thành phố và trở về thành phố gốc\n  * `A` [Biến đổi Fourier rời rạc](src/algorithms/math/fourier-transform) - phân giải tín hiệu thời gian thành các tần số tạo nên tín hiệu đó\n* **Tham lam** - chọn phương án tốt nhất vào thời điểm hiện tại mà không cần cân nhắc đến tương lai \n  * `B` [Trò chơi nhảy](src/algorithms/uncategorized/jump-game)\n  * `A` [Bài xếp ba lô không bị chặn](src/algorithms/sets/knapsack-problem)\n  * `A` [Thuật toán Dijkstra](src/algorithms/graph/dijkstra) - tìm những đường ngắn nhất từ một định tới tất cả các đỉnh\n  * `A` [Thuật toán Prim](src/algorithms/graph/prim) - tìm cây bao trùm nhỏ nhất (MST) cho đồ thị vô hướng có trọng số\n  * `A` [Thuật toán Kruskal](src/algorithms/graph/kruskal) - tìm cây bao trùm nhỏ nhất (MST) cho đồ thị vô hướng có trọng số\n* **Chia để trị** - chia vấn đề thành các phần nhỏ hơn rồi giải quyết các phần đó \n  * `B` [Tìm kiếm nhị phân](src/algorithms/search/binary-search)\n  * `B` [Tháp Hà Nội](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [Tam giác Pascal](src/algorithms/math/pascal-triangle)\n  * `B` [Thuật toán Euclid](src/algorithms/math/euclidean-algorithm) - tính ước số chung lớn nhất\n  * `B` [Sắp xếp trộn](src/algorithms/sorting/merge-sort)\n  * `B` [Sắp xếp nhanh](src/algorithms/sorting/quick-sort)\n  * `B` [Cây tìm kiếm theo chiều sâu](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [Đồ thị tìm kiếm theo chiều sâu](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [Ma trận](src/algorithms/math/matrix) - tạo và duyệt các ma trận có kích thước khác nhau \n  * `B` [Trò chơi nhảy](src/algorithms/uncategorized/jump-game)\n  * `B` [Tính nhanh lũy thừa](src/algorithms/math/fast-powering)\n  * `B` [Thời điểm tốt nhất để mua bán cổ phiếu](src/algorithms/uncategorized/best-time-to-buy-sell-stocks) - ví dụ chia để trị và một đường chuyền\n  * `A` [Hoán vị](src/algorithms/sets/permutations) (lặp và không lặp)\n  * `A` [Tổ hợp](src/algorithms/sets/combinations) (lặp và không lặp)\n* **Quy hoạch động** - xây dựng một giải pháp bằng cách sử dụng các giải pháp phụ đã tìm thấy trước đây\n  * `B` [Số Fibonacci](src/algorithms/math/fibonacci)\n  * `B` [Trò chơi nhảy](src/algorithms/uncategorized/jump-game)\n  * `B` [Đường đi độc nhất](src/algorithms/uncategorized/unique-paths)\n  * `B` [Thu thập nước mưa](src/algorithms/uncategorized/rain-terraces) - bài toán bẫy nước mưa\n  * `B` [Cầu thang đệ quy](src/algorithms/uncategorized/recursive-staircase) - đếm số cách lên đến đỉnh\n  * `A` [Khoảng cách Levenshtein](src/algorithms/string/levenshtein-distance) - khoảng cách thay đổi nhỏ nhất giữa hai chuỗi ký tự\n  * `A` [Dãy con chung dài nhất](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [Xâu con chung dài nhất](src/algorithms/string/longest-common-substring)\n  * `A` [Dãy con chung tăng dần dài nhất](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [Dãy con chung ngắn nhất](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [Bài xếp ba lô dạng 0-1](src/algorithms/sets/knapsack-problem)\n  * `A` [Integer Partition](src/algorithms/math/integer-partition)\n  * `A` [Mảng con lớn nhất](src/algorithms/sets/maximum-subarray)\n  * `A` [Thuật toán Bellman-Ford](src/algorithms/graph/bellman-ford) - tìm những đường ngắn nhất từ một đỉnh tới tất cả các đỉnh của đồ thị\n  * `A` [Thuật toán Floyd-Warshall](src/algorithms/graph/floyd-warshall) - tìm những đường ngắn nhất giữa tất cả các cặp đỉnh\n  * `A` [Phối biểu thức chính quy](src/algorithms/string/regular-expression-matching)\n* **Quay lui** - tương tự như vét cạn, cố tạo ra tất cả các giải pháp có thể, nhưng mỗi lần bạn tạo ra giải pháp tiếp theo,\nbạn sẽ kiểm tra xem nó có thỏa mãn tất cả các điều kiện hay không và chỉ khi thỏa mãn mới tiếp tục tạo ra các giải pháp tiếp theo.\nNếu không, hãy quay lại và đi trên một con đường khác để tìm ra giải pháp. Thông thường, truyền DFS của không gian trạng thái được sử dụng. \n  * `B` [Trò chơi nhảy](src/algorithms/uncategorized/jump-game)\n  * `B` [Đường đi độc nhất](src/algorithms/uncategorized/unique-paths)\n  * `B` [Tập lũy thừa](src/algorithms/sets/power-set) - tập hợp chứa tất cả các tập con\n  * `A` [Chu trình Hamilton](src/algorithms/graph/hamiltonian-cycle) - đi qua các đỉnh một lần duy nhất\n  * `A` [Bài toán n quân hậu](src/algorithms/uncategorized/n-queens)\n  * `A` [Mã đi tuần](src/algorithms/uncategorized/knight-tour)\n  * `A` [Tổ hợp của tổng](src/algorithms/sets/combination-sum) - tìm tất cả các tổ hợp tạo thành tổng cụ thể \n* **Branch & Bound** - ghi nhớ giải pháp chi với phí thấp nhất được tìm thấy ở mỗi giai đoạn của quá trình tìm kiếm quay lui,\nsử dụng chi phí của giải pháp có chi phí thấp nhất được tìm thấy cho đến nay như một giới hạn dưới về chi phí của\nmột giải pháp ít chi phí nhân cho bài toán, để loại bỏ các giải pháp từng phần với chi phí lớn hơn giải pháp chi phí thấp nhất được tìm thấy cho đến nay. \nThông thường BFS duyệt kết hợp với duyệt DFS của cây không gian trạng thái đang được sử dụng. \n\n## Hướng dẫn sử dụng repository\n\n**Cài đặt tất cả các phụ thuộc**\n```\nnpm install\n```\n\n**Chạy ESLint**\n\nBạn có thể muốn chạy nó để kiểm tra chất lượng code. \n\n```\nnpm run lint\n```\n\n**Chạy tất cả các kiểm thử**\n```\nnpm test\n```\n\n**Chạy kiểm thử theo tên**\n```\nnpm test -- 'LinkedList'\n```\n\n**Sân chơi**\n\nBạn có thể chơi với các cấu trúc dữ liệu và thuật toán trong tệp `./src/playground/playground.js`\nvà viết các bài kiểm thử cho nó ở `./src/playground/__test__/playground.test.js`.\n\nSau đó, chỉ cần chạy lệnh sau để kiểm tra xem sân chơi của bạn có hoạt động như mong đợi hay không: \n\n```\nnpm test -- 'playground'\n```\n\n## Thông tin hữu ích\n\n### Tham khảo\n\n[▶ Data Structures and Algorithms on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### Kí hiệu O lớn\n\n*Kí hiệu O lớn* được dùng để phân loại thuật toán theo thời gian chạy hoặc yêu cầu không gian gia tăng khi kích thước đầu vào gia tăng.\nTrên biểu đồ bên dưới, bạn có thể tìm thấy hầu hết các thứ tự tăng trưởng phổ biến của các thuật toán được chỉ định trong ký hiệu O lớn. \n\n![Đồ thị O lớn](./assets/big-o-graph.png)\n\nNguồn: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\nDưới đây là danh sách một số ký hiệu O lớn thông dụng và so sánh với các kích thước khác nhau của dữ liệu đầu vào.\n\n| Kí hiệu O lớn | Tính toán cho 10 phần tử | Tính toán cho 100 phần tử  | Tính toán cho 1000 phần tử   |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### Độ phức tạp của các phép toán cấu trúc dữ liệu\n\n| Cấu trúc dữ liệu        | Truy cập   | Tìm kiếm    | Chèn | Xóa  | Bình luận  |\n| ----------------------- | :-------: | :-------: | :-------: | :-------: | :-------- |\n| **Mảng**               | 1         | n         | n         | n         |           |\n| **Ngăn xếp**               | n         | n         | 1         | 1         |           |\n| **Hàng đợi**               | n         | n         | 1         | 1         |           |\n| **Danh sách liên kết**         | n         | n         | 1         | n         |           |\n| **Bảng băm**          | -         | n         | n         | n         | Trong trường hợp hàm băm hoàn hảo, chi phí sẽ là O(1) |\n| **Cây tìm kiếm nhị phân**  | n         | n         | n         | n         | Trong trường hợp cây cân bằng, chi phí sẽ là  O(log(n)) |\n| **Cây B**              | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Cây đỏ đen**      | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Cây AVL**            | log(n)    | log(n)    | log(n)    | log(n)    |           |\n| **Bộ lọc Bloom**        | -         | 1         | 1         | -         | Có thể có kết quả dương tính giả trong khi tìm kiếm  |\n\n### Độ phức tạp của các thuật toán sắp xếp mảng\n\n| Tên                  | Tốt nhất            | Trung bình             | Tệ nhất              | Bộ nhớ    | Ổn định    | Bình luận  |\n| --------------------- | :-------------: | :-----------------: | :-----------------: | :-------: | :-------: | :-------- |\n| **Sắp xếp nổi bọt**       | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Có       |           |\n| **Sắp xếp chèn**    | n               | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Có       |           |\n| **Sắp xếp chọn**    | n<sup>2</sup>   | n<sup>2</sup>       | n<sup>2</sup>       | 1         | Không        |           |\n| **Sắp xếp vun đống**         | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | 1         | Không        |           |\n| **Sắp xếp trộn**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n&nbsp;log(n)       | n         | Có       |           |\n| **Sắp xếp nhanh**        | n&nbsp;log(n)   | n&nbsp;log(n)       | n<sup>2</sup>       | log(n)    | Không        | Sắp xếp nhanh thường được thực hiện tại chỗ với không gian ngăn xếp O (log (n))  |\n| **Shell sort**        | n&nbsp;log(n)   | phụ thuộc vào khoảng cách dãy   | n&nbsp;(log(n))<sup>2</sup>  | 1         | Không         |           |\n| **Sắp xếp đếm**     | n + r           | n + r               | n + r               | n + r     | Có       | r - số lớn nhất trong mảng |\n| **Sắp xếp theo cơ số**        | n * k           | n * k               | n * k               | n + k     | Có       | k - độ dài của khóa dài nhất |\n\n## Project Backers\n\n> Bạn có thể hỗ trợ dự án này qua ❤️️ [GitHub](https://github.com/sponsors/trekhleb) hoặc ❤️️ [Patreon](https://www.patreon.com/trekhleb).\n\n[Những người đang ủng hộ dự án này](https://github.com/trekhleb/javascript-algorithms/blob/master/BACKERS.md) `∑ = 0`\n"
        },
        {
          "name": "README.zh-CN.md",
          "type": "blob",
          "size": 18.5166015625,
          "content": "# JavaScript 算法与数据结构\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\n本仓库包含了多种基于 JavaScript 的算法与数据结构。\n\n每种算法和数据结构都有自己的 README，包含相关说明和链接，以便进一步阅读 (还有 YouTube 视频) 。\n\n_Read this in other languages:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_繁體中文_](README.zh-TW.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n*注意：这个项目仅用于学习和研究，**不是**用于生产环境。*\n\n## 数据结构\n\n数据结构是在计算机中组织和存储数据的一种特殊方式，使得数据可以高效地被访问和修改。更确切地说，数据结构是数据值的集合，表示数据之间的关系，也包括了作用在数据上的函数或操作。\n\n`B` - 初学者， `A` - 进阶\n\n* `B` [链表](src/data-structures/linked-list/README.zh-CN.md)\n* `B` [双向链表](src/data-structures/doubly-linked-list/README.zh-CN.md)\n* `B` [队列](src/data-structures/queue/README.zh-CN.md)\n* `B` [栈](src/data-structures/stack/README.zh-CN.md)\n* `B` [哈希表(散列)](src/data-structures/hash-table/README.zh-CN.md)\n* `B` [堆](src/data-structures/heap/README.zh-CN.md) - 最大堆 & 最小堆\n* `B` [优先队列](src/data-structures/priority-queue/README.zh-CN.md)\n* `A` [字典树](src/data-structures/trie/README.zh-CN.md)\n* `A` [树](src/data-structures/tree/README.zh-CN.md)\n  * `A` [二叉查找树](src/data-structures/tree/binary-search-tree)\n  * `A` [AVL 树](src/data-structures/tree/avl-tree)\n  * `A` [红黑树](src/data-structures/tree/red-black-tree)\n  * `A` [线段树](src/data-structures/tree/segment-tree) - 使用 `最小/最大/总和` 范围查询示例\n  * `A` [树状数组](src/data-structures/tree/fenwick-tree) (二叉索引树)\n* `A` [图](src/data-structures/graph/README.zh-CN.md) (有向图与无向图)\n* `A` [并查集](src/data-structures/disjoint-set)\n* `A` [布隆过滤器](src/data-structures/bloom-filter)\n\n## 算法\n\n算法是如何解决一类问题的明确规范。算法是一组精确定义操作序列的规则。\n\n`B` - 初学者， `A` - 进阶\n\n### 算法主题\n\n* **数学**\n  * `B` [位运算](src/algorithms/math/bits) - set/get/update/clear 位、乘以/除以二进制位 、变负等\n  * `B` [阶乘](src/algorithms/math/factorial/README.zh-CN.md)\n  * `B` [斐波那契数](src/algorithms/math/fibonacci) - `经典` 和 `闭式` 版本\n  * `B` [素数检测](src/algorithms/math/primality-test) (排除法)\n  * `B` [欧几里得算法](src/algorithms/math/euclidean-algorithm) - 计算最大公约数 (GCD)\n  * `B` [最小公倍数](src/algorithms/math/least-common-multiple) (LCM)\n  * `B` [素数筛](src/algorithms/math/sieve-of-eratosthenes) - 查找任意给定范围内的所有素数\n  * `B` [判断 2 次方数](src/algorithms/math/is-power-of-two) - 检查数字是否为 2 的幂 (原生和按位算法)\n  * `B` [杨辉三角形](src/algorithms/math/pascal-triangle)\n  * `B` [复数](src/algorithms/math/complex-number) - 复数及其基本运算\n  * `B` [弧度和角](src/algorithms/math/radian) - 弧度与角的相互转换\n  * `B` [快速算次方](src/algorithms/math/fast-powering)\n  * `A` [整数拆分](src/algorithms/math/integer-partition)\n  * `A` [割圆术](src/algorithms/math/liu-hui) - 基于 N-gons 的近似 π 计算\n  * `A` [离散傅里叶变换](src/algorithms/math/fourier-transform) - 把时间信号解析成构成它的频率\n* **集合**\n  * `B` [笛卡尔积](src/algorithms/sets/cartesian-product) - 多集合结果\n  * `A` [洗牌算法](src/algorithms/sets/fisher-yates) - 随机置换有限序列\n  * `A` [幂集](src/algorithms/sets/power-set) - 该集合的所有子集\n  * `A` [排列](src/algorithms/sets/permutations) (有/无重复)\n  * `A` [组合](src/algorithms/sets/combinations) (有/无重复)\n  * `A` [最长公共子序列](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [最长递增子序列](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [最短公共父序列](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * `A` [背包问题](src/algorithms/sets/knapsack-problem) - `0/1` 和 `无边界` 问题\n  * `A` [最大子数列问题](src/algorithms/sets/maximum-subarray) - `BF 算法` 和 `动态规划`\n  * `A` [组合求和](src/algorithms/sets/combination-sum) - 查找形成特定总和的所有组合\n* **字符串**\n  * `B` [汉明距离](src/algorithms/string/hamming-distance) - 符号不同的位置数\n  * `A` [莱温斯坦距离](src/algorithms/string/levenshtein-distance) - 两个序列之间的最小编辑距离\n  * `A` [Knuth–Morris–Pratt 算法](src/algorithms/string/knuth-morris-pratt) KMP 算法 - 子串搜索 (模式匹配)\n  * `A` [字符串快速查找](src/algorithms/string/z-algorithm) - 子串搜索 (模式匹配)\n  * `A` [Rabin Karp 算法](src/algorithms/string/rabin-karp) - 子串搜索\n  * `A` [最长公共子串](src/algorithms/string/longest-common-substring)\n  * `A` [正则表达式匹配](src/algorithms/string/regular-expression-matching)\n* **搜索**\n  * `B` [线性搜索](src/algorithms/search/linear-search)\n  * `B` [跳转搜索/块搜索](src/algorithms/search/jump-search) - 搜索有序数组\n  * `B` [二分查找](src/algorithms/search/binary-search) - 搜索有序数组\n  * `B` [插值搜索](src/algorithms/search/interpolation-search) - 搜索均匀分布的有序数组\n* **排序**\n  * `B` [冒泡排序](src/algorithms/sorting/bubble-sort)\n  * `B` [选择排序](src/algorithms/sorting/selection-sort)\n  * `B` [插入排序](src/algorithms/sorting/insertion-sort)\n  * `B` [堆排序](src/algorithms/sorting/heap-sort)\n  * `B` [归并排序](src/algorithms/sorting/merge-sort)\n  * `B` [快速排序](src/algorithms/sorting/quick-sort) - in-place (原地) 和 non-in-place 版本\n  * `B` [希尔排序](src/algorithms/sorting/shell-sort)\n  * `B` [计数排序](src/algorithms/sorting/counting-sort)\n  * `B` [基数排序](src/algorithms/sorting/radix-sort)\n* **链表**\n  - `B` [正向遍历](src/algorithms/linked-list/traversal)\n  - `B` [反向遍历](src/algorithms/linked-list/reverse-traversal)\n* **树**\n  * `B` [深度优先搜索](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [广度优先搜索](src/algorithms/tree/breadth-first-search) (BFS)\n* **图**\n  * `B` [深度优先搜索](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [广度优先搜索](src/algorithms/graph/breadth-first-search) (BFS)\n  * `B` [克鲁斯克尔演算法](src/algorithms/graph/kruskal) - 寻找加权无向图的最小生成树 (MST)\n  * `A` [戴克斯特拉算法](src/algorithms/graph/dijkstra) - 找到图中所有顶点的最短路径\n  * `A` [贝尔曼-福特算法](src/algorithms/graph/bellman-ford) - 找到图中所有顶点的最短路径\n  * `A` [弗洛伊德算法](src/algorithms/graph/floyd-warshall) - 找到所有顶点对 之间的最短路径\n  * `A` [判圈算法](src/algorithms/graph/detect-cycle) - 对于有向图和无向图 (基于 DFS 和不相交集的版本)\n  * `A` [普林演算法](src/algorithms/graph/prim) - 寻找加权无向图的最小生成树 (MST)\n  * `A` [拓扑排序](src/algorithms/graph/topological-sorting) - DFS 方法\n  * `A` [关节点](src/algorithms/graph/articulation-points) - Tarjan 算法 (基于 DFS)\n  * `A` [桥](src/algorithms/graph/bridges) - 基于 DFS 的算法\n  * `A` [欧拉回径与一笔画问题](src/algorithms/graph/eulerian-path) - Fleury 的算法 - 一次访问每个边\n  * `A` [哈密顿图](src/algorithms/graph/hamiltonian-cycle) - 恰好访问每个顶点一次\n  * `A` [强连通分量](src/algorithms/graph/strongly-connected-components) - Kosaraju 算法\n  * `A` [旅行推销员问题](src/algorithms/graph/travelling-salesman) - 尽可能以最短的路线访问每个城市并返回原始城市\n* **加密**\n  * `B` [多项式 hash](src/algorithms/cryptography/polynomial-hash) - 基于多项式的 rolling hash 函数\n* **机器学习**\n  * `B` [NanoNeuron](https://github.com/trekhleb/nano-neuron) -7个简单的JS函数，说明机器如何实际学习（向前/向后传播）\n* **未分类**\n  * `B` [汉诺塔](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [旋转矩阵](src/algorithms/uncategorized/square-matrix-rotation) - 原地算法\n  * `B` [跳跃游戏](src/algorithms/uncategorized/jump-game) - 回溯,、动态编程 (自上而下+自下而上) 和贪婪的例子\n  * `B` [独特(唯一) 路径](src/algorithms/uncategorized/unique-paths) - 回溯、动态编程和基于 Pascal 三角形的例子\n  * `B` [雨水收集](src/algorithms/uncategorized/rain-terraces) - 诱捕雨水问题 (动态编程和暴力版本)\n  * `B` [递归楼梯](src/algorithms/uncategorized/recursive-staircase) - 计算有共有多少种方法可以到达顶层 (4 种解题方案)\n  * `A` [八皇后问题](src/algorithms/uncategorized/n-queens)\n  * `A` [骑士巡逻](src/algorithms/uncategorized/knight-tour)\n\n### 算法范式\n\n算法范式是一种通用方法，基于一类算法的设计。这是比算法更高的抽象，就像算法是比计算机程序更高的抽象。\n\n* **BF 算法** - `查找/搜索` 所有可能性并选择最佳解决方案\n  * `B` [线性搜索](src/algorithms/search/linear-search)\n  * `B` [雨水收集](src/algorithms/uncategorized/rain-terraces) - 诱导雨水问题\n  * `B` [递归楼梯](src/algorithms/uncategorized/recursive-staircase) - 计算有共有多少种方法可以到达顶层 (4 种解题方案)\n  * `A` [最大子数列](src/algorithms/sets/maximum-subarray)\n  * `A` [旅行推销员问题](src/algorithms/graph/travelling-salesman) - 尽可能以最短的路线访问每个城市并返回原始城市\n  * `A` [离散傅里叶变换](src/algorithms/math/fourier-transform) - 把时间信号解析成构成它的频率\n* **贪心法** - 在当前选择最佳选项，不考虑以后情况\n  * `B` [跳跃游戏](src/algorithms/uncategorized/jump-game)\n  * `A` [背包问题](src/algorithms/sets/knapsack-problem)\n  * `A` [戴克斯特拉算法](src/algorithms/graph/dijkstra) - 找到所有图顶点的最短路径\n  * `A` [普里姆算法](src/algorithms/graph/prim) - 寻找加权无向图的最小生成树 (MST)\n  * `A` [克鲁斯卡尔算法](src/algorithms/graph/kruskal) - 寻找加权无向图的最小生成树 (MST)\n* **分治法** - 将问题分成较小的部分，然后解决这些部分\n  * `B` [二分查找](src/algorithms/search/binary-search)\n  * `B` [汉诺塔](src/algorithms/uncategorized/hanoi-tower)\n  * `B` [杨辉三角形](src/algorithms/math/pascal-triangle)\n  * `B` [欧几里得算法](src/algorithms/math/euclidean-algorithm) - 计算最大公约数 (GCD)\n  * `B` [归并排序](src/algorithms/sorting/merge-sort)\n  * `B` [快速排序](src/algorithms/sorting/quick-sort)\n  * `B` [树深度优先搜索](src/algorithms/tree/depth-first-search) (DFS)\n  * `B` [图深度优先搜索](src/algorithms/graph/depth-first-search) (DFS)\n  * `B` [跳跃游戏](src/algorithms/uncategorized/jump-game)\n  * `B` [快速算次方](src/algorithms/math/fast-powering)\n  * `A` [排列](src/algorithms/sets/permutations) (有/无重复)\n  * `A` [组合](src/algorithms/sets/combinations) (有/无重复)\n* **动态规划(Dynamic programming)** - 使用以前找到的子解决方案构建解决方案\n  * `B` [斐波那契数](src/algorithms/math/fibonacci)\n  * `B` [跳跃游戏](src/algorithms/uncategorized/jump-game)\n  * `B` [独特路径](src/algorithms/uncategorized/unique-paths)\n  * `B` [雨水收集](src/algorithms/uncategorized/rain-terraces) - 疏导雨水问题\n  * `B` [递归楼梯](src/algorithms/uncategorized/recursive-staircase) - 计算有共有多少种方法可以到达顶层 (4 种解题方案)\n  * `A` [莱温斯坦距离](src/algorithms/string/levenshtein-distance) - 两个序列之间的最小编辑距离\n  * `A` [最长公共子序列](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * `A` [最长公共子串](src/algorithms/string/longest-common-substring)\n  * `A` [最长递增子序列](src/algorithms/sets/longest-increasing-subsequence)\n  * `A` [最短公共子序列](src/algorithms/sets/shortest-common-supersequence)\n  * `A` [0-1背包问题](src/algorithms/sets/knapsack-problem)\n  * `A` [整数拆分](src/algorithms/math/integer-partition)\n  * `A` [最大子数列](src/algorithms/sets/maximum-subarray)\n  * `A` [贝尔曼-福特算法](src/algorithms/graph/bellman-ford) - 找到所有图顶点的最短路径\n  * `A` [弗洛伊德算法](src/algorithms/graph/floyd-warshall) - 找到所有顶点对之间的最短路径\n  * `A` [正则表达式匹配](src/algorithms/string/regular-expression-matching)\n* **回溯法** - 类似于 `BF 算法` 试图产生所有可能的解决方案，但每次生成解决方案测试如果它满足所有条件，那么只有继续生成后续解决方案。否则回溯并继续寻找不同路径的解决方案。\n  * `B` [跳跃游戏](src/algorithms/uncategorized/jump-game)\n  * `B` [独特路径](src/algorithms/uncategorized/unique-paths)\n  * `A` [幂集](src/algorithms/sets/power-set) - 该集合的所有子集\n  * `A` [哈密顿图](src/algorithms/graph/hamiltonian-cycle) - 恰好访问每个顶点一次\n  * `A` [八皇后问题](src/algorithms/uncategorized/n-queens)\n  * `A` [骑士巡逻](src/algorithms/uncategorized/knight-tour)\n  * `A` [组合求和](src/algorithms/sets/combination-sum) - 从规定的总和中找出所有的组合\n* **Branch & Bound** - 记住在回溯搜索的每个阶段找到的成本最低的解决方案，并使用到目前为止找到的成本最小值作为下限。以便丢弃成本大于最小值的解决方案。通常，使用 BFS 遍历以及状态空间树的 DFS 遍历。\n\n## 如何使用本仓库\n\n**安装依赖**\n```\nnpm install\n```\n\n**运行 ESLint**\n\n检查代码质量\n\n```\nnpm run lint\n```\n\n**执行测试**\n\n```\nnpm test\n```\n\n**按照名称执行测试**\n```\nnpm test -- 'LinkedList'\n```\n\n**Playground**\n\n你可以在 `./src/playground/playground.js` 文件中操作数据结构与算法，并在 `./src/playground/__test__/playground.test.js` 中编写测试。\n\n然后，只需运行以下命令来测试你的 Playground 是否无误:\n\n```\nnpm test -- 'playground'\n```\n\n## 有用的信息\n\n### 引用\n\n[▶ YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### 大O符号\n\n大O符号中指定的算法的增长顺序。\n\n![Big O graphs](./assets/big-o-graph.png)\n\n源: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\n以下是一些最常用的 大O标记法 列表以及它们与不同大小输入数据的性能比较。\n\n| 大O标记法      | 计算10个元素                 | 计算100个元素                 | 计算1000个元素                  |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### 数据结构操作的复杂性\n\n| 数据结构       |  连接  |  查找  |  插入  |  删除  | 备注 |\n| -------------- | :----: | :----: | :----: | :----: | ---- |\n| **数组**       |   1    |   n    |   n    |   n    |      |\n| **栈**         |   n    |   n    |   1    |   1    |      |\n| **队列**       |   n    |   n    |   1    |   1    |      |\n| **链表**       |   n    |   n    |   1    |   1    |      |\n| **哈希表**     |   -    |   n    |   n    |   n    | 在完全哈希函数情况下，复杂度是 O(1） |\n| **二分查找树** |   n    |   n    |   n    |   n    | 在平衡树情况下，复杂度是 O(log(n)) |\n| **B 树**       | log(n) | log(n) | log(n) | log(n) |      |\n| **红黑树**     | log(n) | log(n) | log(n) | log(n) |      |\n| **AVL 树**     | log(n) | log(n) | log(n) | log(n) |      |\n| **布隆过滤器** |   -    |   1    |   1    | - | 存在一定概率的判断错误（误判成存在） |\n\n### 数组排序算法的复杂性\n\n| 名称                  | 最优      | 平均      | 最坏          | 内存      | 稳定      | 备注                  |\n| --------------------- | :-------: | :-------: | :-----------: | :-------: | :-------: | --------------------- |\n| **冒泡排序**          | n         | n^2       | n^2           | 1         | Yes       |                       |\n| **插入排序**          | n         | n^2       | n^2           | 1         | Yes       |                       |\n| **选择排序**          | n^2       | n^2       | n^2           | 1         | No        |                       |\n| **堆排序**            | n log(n)  | n log(n)  | n log(n)      | 1         | No        |                       |\n| **归并排序**          | n log(n)  | n log(n)  | n log(n)      | n         | Yes       |                       |\n| **快速排序**          | n log(n)  | n log(n)  | n^2           | log(n)    | No        | 在 in-place 版本下，内存复杂度通常是 O(log(n)) |\n| **希尔排序**          | n log(n)  | 取决于差距序列   | n (log(n))^2  | 1         | No        |  |\n| **计数排序**          | n + r     | n + r     | n + r         | n + r     | Yes       | r - 数组里最大的数    |\n| **基数排序**          | n * k     | n * k     | n * k         | n + k     | Yes       | k - 最长 key 的升序   |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "README.zh-TW.md",
          "type": "blob",
          "size": 13.1005859375,
          "content": "# JavaScript 演算法與資料結構\n\n[![CI](https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg)](https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster)\n[![codecov](https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg)](https://codecov.io/gh/trekhleb/javascript-algorithms)\n\n這個知識庫包含許多 JavaScript 的資料結構與演算法的基礎範例。\n每個演算法和資料結構都有其個別的文件，內有相關的解釋以及更多相關的文章或Youtube影片連結。\n\n_Read this in other languages:_\n[_English_](https://github.com/trekhleb/javascript-algorithms/),\n[_简体中文_](README.zh-CN.md),\n[_한국어_](README.ko-KR.md),\n[_日本語_](README.ja-JP.md),\n[_Polski_](README.pl-PL.md),\n[_Français_](README.fr-FR.md),\n[_Español_](README.es-ES.md),\n[_Português_](README.pt-BR.md),\n[_Русский_](README.ru-RU.md),\n[_Türk_](README.tr-TR.md),\n[_Italiana_](README.it-IT.md),\n[_Bahasa Indonesia_](README.id-ID.md),\n[_Українська_](README.uk-UA.md),\n[_Arabic_](README.ar-AR.md),\n[_Tiếng Việt_](README.vi-VN.md),\n[_Deutsch_](README.de-DE.md),\n[_Uzbek_](README.uz-UZ.md)\n\n## 資料結構\n\n資料結構是一個電腦用來組織和排序資料的特定方式，透過這樣的方式資料可以有效率地被讀取以及修改。更精確地說，一個資料結構是一個資料值的集合、彼此間的關係，函數或者運作可以應用於資料上。\n\n* [鏈結串列](src/data-structures/linked-list)\n* [貯列](src/data-structures/queue)\n* [堆疊](src/data-structures/stack)\n* [雜湊表](src/data-structures/hash-table)\n* [堆](src/data-structures/heap)\n* [優先貯列](src/data-structures/priority-queue)\n* [字典樹](src/data-structures/trie)\n* [樹](src/data-structures/tree)\n  * [二元搜尋樹](src/data-structures/tree/binary-search-tree)\n  * [AVL樹](src/data-structures/tree/avl-tree)\n  * [紅黑樹](src/data-structures/tree/red-black-tree)\n* [圖](src/data-structures/graph) (有向跟無向皆包含)\n* [互斥集](src/data-structures/disjoint-set)\n\n## 演算法\n\n演算法是一個如何解決一類問題的非模糊規格。演算法是一個具有精確地定義了一系列運作的規則的集合\n\n### 演算法議題分類\n\n* **數學類**\n  * [階層](src/algorithms/math/factorial)\n  * [費伯納西數列](src/algorithms/math/fibonacci)\n  * [Primality Test](src/algorithms/math/primality-test) (排除法)\n  * [歐幾里得算法](src/algorithms/math/euclidean-algorithm) - 計算最大公因數 (GCD)\n  * [最小公倍數](src/algorithms/math/least-common-multiple) (LCM)\n  * [整數拆分](src/algorithms/math/integer-partition)\n* **集合**\n  * [笛卡爾積](src/algorithms/sets/cartesian-product) - 多個集合的乘積\n  * [冪集合](src/algorithms/sets/power-set) - 所有集合的子集合\n  * [排列](src/algorithms/sets/permutations) (有/無重複)\n  * [组合](src/algorithms/sets/combinations) (有/無重複)\n  * [洗牌算法](src/algorithms/sets/fisher-yates) - 隨機置換一有限序列\n  * [最長共同子序列](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * [最長遞增子序列](src/algorithms/sets/longest-increasing-subsequence)\n  * [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS)\n  * [背包問題](src/algorithms/sets/knapsack-problem) - \"0/1\" and \"Unbound\" ones\n  * [最大子序列問題](src/algorithms/sets/maximum-subarray) - 暴力法以及動態編程的(Kadane's)版本\n* **字串**\n  * [萊文斯坦距離](src/algorithms/string/levenshtein-distance) - 兩序列間的最小編輯距離\n  * [漢明距離](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different\n  * [KMP 演算法](src/algorithms/string/knuth-morris-pratt) - 子字串搜尋\n  * [Rabin Karp 演算法](src/algorithms/string/rabin-karp) - 子字串搜尋\n  * [最長共通子序列](src/algorithms/string/longest-common-substring)\n* **搜尋**\n  * [二元搜尋](src/algorithms/search/binary-search)\n* **排序**\n  * [氣泡排序](src/algorithms/sorting/bubble-sort)\n  * [選擇排序](src/algorithms/sorting/selection-sort)\n  * [插入排序](src/algorithms/sorting/insertion-sort)\n  * [堆排序](src/algorithms/sorting/heap-sort)\n  * [合併排序](src/algorithms/sorting/merge-sort)\n  * [快速排序](src/algorithms/sorting/quick-sort)\n  * [希爾排序](src/algorithms/sorting/shell-sort)\n* **樹**\n  * [深度優先搜尋](src/algorithms/tree/depth-first-search) (DFS)\n  * [廣度優先搜尋](src/algorithms/tree/breadth-first-search) (BFS)\n* **圖**\n  * [深度優先搜尋](src/algorithms/graph/depth-first-search) (DFS)\n  * [廣度優先搜尋](src/algorithms/graph/breadth-first-search) (BFS)\n  * [Dijkstra 演算法](src/algorithms/graph/dijkstra) - 找到所有圖頂點的最短路徑\n  * [Bellman-Ford 演算法](src/algorithms/graph/bellman-ford) - 找到所有圖頂點的最短路徑\n  * [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions)\n  * [Prim’s 演算法](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n  * [Kruskal’s 演算法](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n  * [拓撲排序](src/algorithms/graph/topological-sorting) - DFS method\n  * [關節點](src/algorithms/graph/articulation-points) - Tarjan's algorithm (DFS based)\n  * [橋](src/algorithms/graph/bridges) - DFS based algorithm\n  * [尤拉路徑及尤拉環](src/algorithms/graph/eulerian-path) - Fleury's algorithm - Visit every edge exactly once\n  * [漢彌爾頓環](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once\n  * [強連通組件](src/algorithms/graph/strongly-connected-components) - Kosaraju's algorithm\n  * [旅行推銷員問題](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city\n  * [Floyd-Warshall algorithm](src/algorithms/graph/floyd-warshall) - 一次循环可以找出所有頂點之间的最短路徑\n* **未分類**\n  * [河內塔](src/algorithms/uncategorized/hanoi-tower)\n  * [N-皇后問題](src/algorithms/uncategorized/n-queens)\n  * [騎士走棋盤](src/algorithms/uncategorized/knight-tour)\n\n### 演算法範型\n\n演算法的範型是一個泛用方法或設計一類底層演算法的方式。它是一個比演算法的概念更高階的抽象化，就像是演算法是比電腦程式更高階的抽象化。\n\n* **暴力法** - 尋遍所有的可能解然後選取最好的解\n  * [最大子序列](src/algorithms/sets/maximum-subarray)\n  * [旅行推銷員問題](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city\n* **貪婪法** - choose the best option at the current time, without any consideration for the future\n  * [未定背包問題](src/algorithms/sets/knapsack-problem)\n  * [Dijkstra 演算法](src/algorithms/graph/dijkstra) - 找到所有圖頂點的最短路徑\n  * [Prim’s 演算法](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n  * [Kruskal’s 演算法](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph\n* **分治法** - divide the problem into smaller parts and then solve those parts\n  * [二元搜尋](src/algorithms/search/binary-search)\n  * [河內塔](src/algorithms/uncategorized/hanoi-tower)\n  * [歐幾里得演算法](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD)\n  * [排列](src/algorithms/sets/permutations) (有/無重複)\n  * [组合](src/algorithms/sets/combinations) (有/無重複)\n  * [合併排序](src/algorithms/sorting/merge-sort)\n  * [快速排序](src/algorithms/sorting/quick-sort)\n  * [樹深度優先搜尋](src/algorithms/tree/depth-first-search) (DFS)\n  * [圖深度優先搜尋](src/algorithms/graph/depth-first-search) (DFS)\n* **動態編程** - build up to a solution using previously found sub-solutions\n  * [費伯納西數列](src/algorithms/math/fibonacci)\n  * [萊溫斯坦距離](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences\n  * [最長共同子序列](src/algorithms/sets/longest-common-subsequence) (LCS)\n  * [最長共同子字串](src/algorithms/string/longest-common-substring)\n  * [最長遞增子序列](src/algorithms/sets/longest-increasing-subsequence)\n  * [最短共同子序列](src/algorithms/sets/shortest-common-supersequence)\n  * [0/1背包問題](src/algorithms/sets/knapsack-problem)\n  * [整數拆分](src/algorithms/math/integer-partition)\n  * [最大子序列](src/algorithms/sets/maximum-subarray)\n  * [Bellman-Ford 演算法](src/algorithms/graph/bellman-ford) - finding shortest path to all graph vertices\n* **回溯法** - 用類似暴力法來嘗試產生所有可能解，但每次只在能滿足所有測試條件，且只有繼續產生子序列方案來產生的解決方案。否則回溯並尋找不同路徑的解決方案。\n  * [漢彌爾頓迴路](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once\n  * [N-皇后問題](src/algorithms/uncategorized/n-queens)\n  * [騎士走棋盤](src/algorithms/uncategorized/knight-tour)\n* **Branch & Bound**\n\n## 如何使用本知識庫\n\n**安裝所有必須套件**\n\n```\nnpm install\n```\n\n**執行所有測試**\n```\nnpm test\n```\n\n**以名稱執行該測試**\n```\nnpm test -- 'LinkedList'\n```\n**練習場**\n\n你可以透過在`./src/playground/playground.js`裡面的檔案練習資料結構以及演算法，並且撰寫在`./src/playground/__test__/playground.test.js`裡面的測試程式。\n\n接著直接執行下列的指令來測試你練習的 code 是否如預期運作：\n\n```\nnpm test -- 'playground'\n```\n\n## 有用的資訊\n\n### 參考\n\n[▶ Data Structures and Algorithms on YouTube](https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8)\n\n### 大 O 標記\n\n特別用大 O 標記演算法增長度的排序。\n\n![Big O 表](./assets/big-o-graph.png)\n\n資料來源: [Big O Cheat Sheet](http://bigocheatsheet.com/).\n\n下列列出幾個常用的 Big O 標記以及其不同大小資料量輸入後的運算效能比較。\n\n| Big O 標記     | 10個資料量需花費的時間       | 100個資料量需花費的時間       | 1000個資料量需花費的時間        |\n| -------------- | ---------------------------- | ----------------------------- | ------------------------------- |\n| **O(1)**       | 1                            | 1                             | 1                               |\n| **O(log N)**   | 3                            | 6                             | 9                               |\n| **O(N)**       | 10                           | 100                           | 1000                            |\n| **O(N log N)** | 30                           | 600                           | 9000                            |\n| **O(N^2)**     | 100                          | 10000                         | 1000000                         |\n| **O(2^N)**     | 1024                         | 1.26e+29                      | 1.07e+301                       |\n| **O(N!)**      | 3628800                      | 9.3e+157                      | 4.02e+2567                      |\n\n### 資料結構運作複雜度\n\n| 資料結構                | 存取      | 搜尋      | 插入      | 刪除      |\n| ----------------------- | :-------: | :-------: | :-------: | :-------: |\n| **陣列**                | 1         | n         | n         | n         |\n| **堆疊**                | n         | n         | 1         | 1         |\n| **貯列**                | n         | n         | 1         | 1         |\n| **鏈結串列**            | n         | n         | 1         | 1         |\n| **雜湊表**              | -         | n         | n         | n         |\n| **二元搜尋樹**          | n         | n         | n         | n         |\n| **B-Tree**              | log(n)    | log(n)    | log(n)    | log(n)    |\n| **紅黑樹**              | log(n)    | log(n)    | log(n)    | log(n)    |\n| **AVL Tree**            | log(n)    | log(n)    | log(n)    | log(n)    |\n\n### 陣列排序演算法複雜度\n\n| 名稱                   | 最佳      | 平均      | 最差          | 記憶體    | 穩定      |\n| ---------------------- | :-------: | :-------: | :-----------: | :-------: | :-------: |\n| **氣泡排序**           | n         | n^2       | n^2           | 1         | Yes       |\n| **插入排序**           | n         | n^2       | n^2           | 1         | Yes       |\n| **選擇排序**           | n^2       | n^2       | n^2           | 1         | No        |\n| **Heap 排序**          | n log(n)  | n log(n)  | n log(n)      | 1         | No        |\n| **合併排序**           | n log(n)  | n log(n)  | n log(n)      | n         | Yes       |\n| **快速排序**           | n log(n)  | n log(n)  | n^2           | log(n)    | No        |\n| **希爾排序**           | n log(n)  | 由gap sequence決定   | n (log(n))^2  | 1         | No        |\n\n> ℹ️ A few more [projects](https://trekhleb.dev/projects/) and [articles](https://trekhleb.dev/blog/) about JavaScript and algorithms on [trekhleb.dev](https://trekhleb.dev)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 1.26171875,
          "content": "module.exports = {\n  // The bail config option can be used here to have Jest stop running tests after\n  // the first failure.\n  bail: false,\n\n  // Indicates whether each individual test should be reported during the run.\n  verbose: false,\n\n  // Indicates whether the coverage information should be collected while executing the test\n  collectCoverage: false,\n\n  // The directory where Jest should output its coverage files.\n  coverageDirectory: './coverage/',\n\n  // If the test path matches any of the patterns, it will be skipped.\n  testPathIgnorePatterns: ['<rootDir>/node_modules/'],\n\n  // If the file path matches any of the patterns, coverage information will be skipped.\n  coveragePathIgnorePatterns: ['<rootDir>/node_modules/'],\n\n  // The pattern Jest uses to detect test files.\n  testRegex: '(/__tests__/.*|(\\\\.|/)(test|spec))\\\\.jsx?$',\n\n  // This option sets the URL for the jsdom environment.\n  // It is reflected in properties such as location.href.\n  // @see: https://github.com/facebook/jest/issues/6769\n  testEnvironmentOptions: {\n    url: 'http://localhost/',\n  },\n\n  // @see: https://jestjs.io/docs/en/configuration#coveragethreshold-object\n  coverageThreshold: {\n    global: {\n      statements: 100,\n      branches: 95,\n      functions: 100,\n      lines: 100,\n    },\n  },\n};\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 605.8916015625,
          "content": "{\n  \"name\": \"javascript-algorithms-and-data-structures\",\n  \"version\": \"0.0.4\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"javascript-algorithms-and-data-structures\",\n      \"version\": \"0.0.4\",\n      \"license\": \"MIT\",\n      \"devDependencies\": {\n        \"@babel/cli\": \"7.20.7\",\n        \"@babel/preset-env\": \"7.20.2\",\n        \"@types/jest\": \"29.4.0\",\n        \"eslint\": \"8.33.0\",\n        \"eslint-config-airbnb\": \"19.0.4\",\n        \"eslint-plugin-import\": \"2.27.5\",\n        \"eslint-plugin-jest\": \"27.2.1\",\n        \"eslint-plugin-jsx-a11y\": \"6.7.1\",\n        \"husky\": \"8.0.3\",\n        \"jest\": \"29.4.1\",\n        \"pngjs\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16.15.0\",\n        \"npm\": \">=8.5.5\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.1.tgz\",\n      \"integrity\": \"sha512-lFMjJTrFL3j7L9yBxwYfCq2k6qqwHyzuUl/XBnif78PWTJYyL/dfowQHWE3sp6U6ZzqWiiIZnpTMO96zhkjwtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/cli\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/cli/-/cli-7.20.7.tgz\",\n      \"integrity\": \"sha512-WylgcELHB66WwQqItxNILsMlaTd8/SO6SgTTjMp4uCI7P4QyH1r3nqgFmO3BfM4AtfniHgFMH3EpYFj/zynBkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.8\",\n        \"commander\": \"^4.0.1\",\n        \"convert-source-map\": \"^1.1.0\",\n        \"fs-readdir-recursive\": \"^1.1.0\",\n        \"glob\": \"^7.2.0\",\n        \"make-dir\": \"^2.1.0\",\n        \"slash\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"babel\": \"bin/babel.js\",\n        \"babel-external-helpers\": \"bin/babel-external-helpers.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"optionalDependencies\": {\n        \"@nicolo-ribaudo/chokidar-2\": \"2.1.8-no-fsevents.3\",\n        \"chokidar\": \"^3.4.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.21.4.tgz\",\n      \"integrity\": \"sha512-LYvhNKfwWSPpocw8GI7gpK2nq3HSDuEPC/uSYaALSJu9xjsalaaYFOq0Pwt5KmVqwEbZlDu81aLXwBOmD/Fv9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/highlight\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/compat-data\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.21.4.tgz\",\n      \"integrity\": \"sha512-/DYyDpeCfaVinT40FPGdkkb+lYSKvsVuMjDAG7jPOWWiM1ibOaB9CXJAlc4d1QpP/U2q2P9jbrSlClKSErd55g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/core\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.21.4.tgz\",\n      \"integrity\": \"sha512-qt/YV149Jman/6AfmlxJ04LMIu8bMoyl3RB91yTFrxQmgbrSvQMy7cI8Q62FHx1t8wJ8B5fu0UDoLwHAhUo1QA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.21.4\",\n        \"@babel/generator\": \"^7.21.4\",\n        \"@babel/helper-compilation-targets\": \"^7.21.4\",\n        \"@babel/helper-module-transforms\": \"^7.21.2\",\n        \"@babel/helpers\": \"^7.21.0\",\n        \"@babel/parser\": \"^7.21.4\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.4\",\n        \"@babel/types\": \"^7.21.4\",\n        \"convert-source-map\": \"^1.7.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.2\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/babel\"\n      }\n    },\n    \"node_modules/@babel/generator\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.21.4.tgz\",\n      \"integrity\": \"sha512-NieM3pVIYW2SwGzKoqfPrQsf4xGs9M9AIG3ThppsSRmO+m7eQhmI6amajKMUeIO37wFfsvnvcxQFx6x6iqxDnA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.21.4\",\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"jsesc\": \"^2.5.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-annotate-as-pure\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz\",\n      \"integrity\": \"sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-builder-binary-assignment-operator-visitor\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.18.9.tgz\",\n      \"integrity\": \"sha512-yFQ0YCHoIqarl8BCRwBL8ulYUaZpz3bNsA7oFepAzee+8/+ImtADXNOmO5vJvsPff3qi+hvpkY/NYBTrBQgdNw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-explode-assignable-expression\": \"^7.18.6\",\n        \"@babel/types\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.21.4.tgz\",\n      \"integrity\": \"sha512-Fa0tTuOXZ1iL8IeDFUWCzjZcn+sJGd9RZdH9esYVjEejGmzf+FFYQpMi/kZUk2kPy/q1H3/GPw7np8qar/stfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.21.4\",\n        \"@babel/helper-validator-option\": \"^7.21.0\",\n        \"browserslist\": \"^4.21.3\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-create-class-features-plugin\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.21.4.tgz\",\n      \"integrity\": \"sha512-46QrX2CQlaFRF4TkwfTt6nJD7IHq8539cCL7SDpqWSDeJKY1xylKKY5F/33mJhLZ3mFvKv2gGrVS6NkyF6qs+Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-create-regexp-features-plugin\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.21.4.tgz\",\n      \"integrity\": \"sha512-M00OuhU+0GyZ5iBBN9czjugzWrEq2vDpf/zCYHxxf93ul/Q5rv+a5h+/+0WnI1AebHNVtl5bFV0qsJoH23DbfA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"regexpu-core\": \"^5.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-define-polyfill-provider\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.3.3.tgz\",\n      \"integrity\": \"sha512-z5aQKU4IzbqCC1XH0nAqfsFLMVSo22SBKUc0BxGrLkolTdPTructy0ToNnlO2zA4j9Q/7pjMZf0DSY+DSTYzww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-compilation-targets\": \"^7.17.7\",\n        \"@babel/helper-plugin-utils\": \"^7.16.7\",\n        \"debug\": \"^4.1.1\",\n        \"lodash.debounce\": \"^4.0.8\",\n        \"resolve\": \"^1.14.2\",\n        \"semver\": \"^6.1.2\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.4.0-0\"\n      }\n    },\n    \"node_modules/@babel/helper-environment-visitor\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz\",\n      \"integrity\": \"sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-explode-assignable-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-eyAYAsQmB80jNfg4baAtLeWAQHfHFiR483rzFK+BhETlGZaQC9bsfrugfXDCbRHLQbIA7U5NxhhOxN7p/dWIcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-function-name\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.21.0.tgz\",\n      \"integrity\": \"sha512-HfK1aMRanKHpxemaY2gqBmL04iAPOPRj7DxtNbiDOrJK+gdwkiNRVpCpUJYbUT+aZyemKN8brqTOxzCaG6ExRg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/types\": \"^7.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-hoist-variables\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz\",\n      \"integrity\": \"sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-member-expression-to-functions\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.21.0.tgz\",\n      \"integrity\": \"sha512-Muu8cdZwNN6mRRNG6lAYErJ5X3bRevgYR2O8wN0yn7jJSnGDu6eG59RfT29JHxGUovyfrh6Pj0XzmR7drNVL3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-imports\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.21.4.tgz\",\n      \"integrity\": \"sha512-orajc5T2PsRYUN3ZryCEFeMDYwyw09c/pZeaQEZPH0MpKzSvn3e0uXsDBu3k03VI+9DBiRo+l22BfKTpKwa/Wg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.21.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-transforms\": {\n      \"version\": \"7.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.21.2.tgz\",\n      \"integrity\": \"sha512-79yj2AR4U/Oqq/WOV7Lx6hUjau1Zfo4cI+JLAVYeMV5XIlbOhmjEk5ulbTc9fMpmlojzZHkUUxAiK+UKn+hNQQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-simple-access\": \"^7.20.2\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.2\",\n        \"@babel/types\": \"^7.21.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-optimise-call-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-plugin-utils\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.20.2.tgz\",\n      \"integrity\": \"sha512-8RvlJG2mj4huQ4pZ+rU9lqKi9ZKiRmuvGuM2HlWmkmgOhbs6zEAw6IEiJ5cQqGbDzGZOhwuOQNtZMi/ENLjZoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-remap-async-to-generator\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.18.9.tgz\",\n      \"integrity\": \"sha512-dI7q50YKd8BAv3VEfgg7PS7yD3Rtbi2J1XMXaalXO0W0164hYLnh8zpjRS0mte9MfVp/tltvr/cfdXPvJr1opA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-wrap-function\": \"^7.18.9\",\n        \"@babel/types\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-replace-supers\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.20.7.tgz\",\n      \"integrity\": \"sha512-vujDMtB6LVfNW13jhlCrp48QNslK6JXi7lQG736HVbHz/mbf4Dc7tIRh1Xf5C0rF7BP8iiSxGMCmY6Ci1ven3A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.20.7\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-simple-access\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.20.2.tgz\",\n      \"integrity\": \"sha512-+0woI/WPq59IrqDYbVGfshjT5Dmk/nnbdpcF8SnMhhXObpTq2KNBdLFRFrkVdbDOyUmHBCxzm5FHV1rACIkIbA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-skip-transparent-expression-wrappers\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.20.0.tgz\",\n      \"integrity\": \"sha512-5y1JYeNKfvnT8sZcK9DVRtpTbGiomYIHviSP3OQWmDPU3DeH4a1ZlT/N2lyQ5P8egjcRaT/Y9aNqUxK0WsnIIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-split-export-declaration\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz\",\n      \"integrity\": \"sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.19.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.19.4.tgz\",\n      \"integrity\": \"sha512-nHtDoQcuqFmwYNYPz3Rah5ph2p8PFeFCsZk9A/48dPc/rGocJ5J3hAAZ7pb76VWX3fZKu+uEr/FhH5jLx7umrw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.19.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz\",\n      \"integrity\": \"sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-option\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.21.0.tgz\",\n      \"integrity\": \"sha512-rmL/B8/f0mKS2baE9ZpyTcTavvEuWhTTW8amjzXNvYG4AwBsqTLikfXsEofsJEfKHf+HQVQbFOHy6o+4cnC/fQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-wrap-function\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.20.5.tgz\",\n      \"integrity\": \"sha512-bYMxIWK5mh+TgXGVqAtnu5Yn1un+v8DDZtqyzKRLUzrh70Eal2O3aZ7aPYiMADO4uKlkzOiRiZ6GX5q3qxvW9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-function-name\": \"^7.19.0\",\n        \"@babel/template\": \"^7.18.10\",\n        \"@babel/traverse\": \"^7.20.5\",\n        \"@babel/types\": \"^7.20.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helpers\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.21.0.tgz\",\n      \"integrity\": \"sha512-XXve0CBtOW0pd7MRzzmoyuSj0e3SEzj8pgyFxnTT1NJZL38BD1MK7yYrm8yefRPIDvNNe14xR4FdbHwpInD4rA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/highlight\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz\",\n      \"integrity\": \"sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.18.6\",\n        \"chalk\": \"^2.0.0\",\n        \"js-tokens\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.21.4.tgz\",\n      \"integrity\": \"sha512-alVJj7k7zIxqBZ7BTRhz0IqJFxW1VJbm6N8JbcYhQ186df9ZBPbZBmWSqAMXwHGsCJdYks7z/voa3ibiS5bCIw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-Dgxsyg54Fx1d4Nge8UnvTrED63vrwOdPmyvPzlNN/boaliRP54pm3pGzZD1SJUwrBA+Cs/xdG8kXX6Mn/RfISQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.20.7.tgz\",\n      \"integrity\": \"sha512-sbr9+wNE5aXMBBFBICk01tt7sBf2Oc9ikRFEcem/ZORup9IMUdNhW7/wVLEbbtlWOsEubJet46mHAL2C8+2jKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.13.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-async-generator-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-xMbiLsn/8RK7Wq7VeVytytS2L6qE69bXPB10YCmMdDZbKF4okCqY74pI/jJQ/8U0b/F6NrT2+14b8/P9/3AMGA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-class-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-cumfXOF0+nzZrrN8Rf0t7M+tF6sZc7vhQwYQck9q1/5w2OExlD+b4v4RpMJFaV1Z7WcDRgO6FqvxqxGlwo+RHQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-class-static-block\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.21.0.tgz\",\n      \"integrity\": \"sha512-XP5G9MWNUskFuP30IfFSEFB0Z6HzLIUcjYM4bYOPHXl7eiJ9HFv8tWj6TXTN5QODiEhDZAeI4hLok2iHFFV4hw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.12.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-dynamic-import\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.18.6.tgz\",\n      \"integrity\": \"sha512-1auuwmK+Rz13SJj36R+jqFPMJWyKEDd7lLSdOj4oJK0UTgGueSAtkrCvz9ewmgyU/P941Rv2fQwZJN8s6QruXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-export-namespace-from\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.18.9.tgz\",\n      \"integrity\": \"sha512-k1NtHyOMvlDDFeb9G5PhUXuGj8m/wiwojgQVEhJ/fsVsMCpLyOP4h0uGEjYJKrRI+EVPlb5Jk+Gt9P97lOGwtA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-json-strings\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.18.6.tgz\",\n      \"integrity\": \"sha512-lr1peyn9kOdbYc0xr0OdHTZ5FMqS6Di+H0Fz2I/JwMzGmzJETNeOFq2pBySw6X/KFL5EWDjlJuMsUGRFb8fQgQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-logical-assignment-operators\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.20.7.tgz\",\n      \"integrity\": \"sha512-y7C7cZgpMIjWlKE5T7eJwp+tnRYM89HmRvWM5EQuB5BoHEONjmQ8lSNmBUwOyy/GFRsohJED51YBF79hE1djug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-nullish-coalescing-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wQxQzxYeJqHcfppzBDnm1yAY0jSRkUXR2z8RePZYrKwMKgMlE8+Z6LUno+bd6LvbGh8Gltvy74+9pIYkr+XkKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-numeric-separator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.18.6.tgz\",\n      \"integrity\": \"sha512-ozlZFogPqoLm8WBr5Z8UckIoE4YQ5KESVcNudyXOR8uqIkliTEgJ3RoketfG6pmzLdeZF0H/wjE9/cCEitBl7Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-object-rest-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-d2S98yCiLxDVmBmE8UjGcfPvNEUbA1U5q5WxaWFUGRzJSVAZqm5W6MbPct0jxnegUZ0niLeNX+IOzEs7wYg9Dg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.20.5\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-optional-catch-binding\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.18.6.tgz\",\n      \"integrity\": \"sha512-Q40HEhs9DJQyaZfUjjn6vE8Cv4GmMHCYuMGIWUnlxH6400VGxOuwWsPt4FxXxJkC/5eOzgn0z21M9gMT4MOhbw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-optional-chaining\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.21.0.tgz\",\n      \"integrity\": \"sha512-p4zeefM72gpmEe2fkUr/OnOXpWEf8nAgk7ZYVqqfFiyIG7oFfVZcCrU64hWn5xp4tQ9LkV4bTIa5rD0KANpKNA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-private-methods\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz\",\n      \"integrity\": \"sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-private-property-in-object\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0.tgz\",\n      \"integrity\": \"sha512-ha4zfehbJjc5MmXBlHec1igel5TJXXLDDRbuJ4+XT2TJcyD9/V1919BA8gMvsdHcNMBy4WBUBiRb3nw/EQUtBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-proposal-unicode-property-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-async-generators\": {\n      \"version\": \"7.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz\",\n      \"integrity\": \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-bigint\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz\",\n      \"integrity\": \"sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-properties\": {\n      \"version\": \"7.12.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n      \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-static-block\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n      \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-dynamic-import\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz\",\n      \"integrity\": \"sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-export-namespace-from\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz\",\n      \"integrity\": \"sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-assertions\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.20.0.tgz\",\n      \"integrity\": \"sha512-IUh1vakzNoWalR8ch/areW7qFopR2AEw03JlG7BbrDqmQ4X3q9uuipQwSGrUn7oGiemKjtSLDhNtQHzMHr1JdQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-meta\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz\",\n      \"integrity\": \"sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-json-strings\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz\",\n      \"integrity\": \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-jsx\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.21.4.tgz\",\n      \"integrity\": \"sha512-5hewiLct5OKyh6PLKEYaFclcqtIgCb6bmELouxjF6up5q3Sov7rOayW4RwhbaBL0dit8rA80GNfY+UuDp2mBbQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-numeric-separator\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n      \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-object-rest-spread\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n      \"integrity\": \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-catch-binding\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n      \"integrity\": \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-private-property-in-object\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n      \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-top-level-await\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n      \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-typescript\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.21.4.tgz\",\n      \"integrity\": \"sha512-xz0D39NvhQn4t4RNsHmDnnsaQizIlUkdtYvLs8La1BlfjQ6JEwxkJGeqJMW2tAXx+q6H+WFuUTXNdYVpEya0YA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-arrow-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-3poA5E7dzDomxj9WXWwuD6A5F3kc7VXwIJO+E+J8qtDtS+pXPAhrgEyh+9GBwBgPq1Z+bB+/JD60lp5jsN7JPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-async-to-generator\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.20.7.tgz\",\n      \"integrity\": \"sha512-Uo5gwHPT9vgnSXQxqGtpdufUiWp96gk7yiP4Mp5bm1QMkEmLXBO7PAGYbKoJ6DhAwiNkcHFBol/x5zZZkL/t0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-block-scoped-functions\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.18.6.tgz\",\n      \"integrity\": \"sha512-ExUcOqpPWnliRcPqves5HJcJOvHvIIWfuS4sroBUenPuMdmW+SMHDakmtS7qOo13sVppmUijqeTv7qqGsvURpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-block-scoping\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.21.0.tgz\",\n      \"integrity\": \"sha512-Mdrbunoh9SxwFZapeHVrwFmri16+oYotcZysSzhNIVDwIAb1UV+kvnxULSYq9J3/q5MDG+4X6w8QVgD1zhBXNQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-classes\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.21.0.tgz\",\n      \"integrity\": \"sha512-RZhbYTCEUAe6ntPehC4hlslPWosNHDox+vAs4On/mCLRLfoDVHf6hVEd7kuxr1RnHwJmxFfUM3cZiZRmPxJPXQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-computed-properties\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.20.7.tgz\",\n      \"integrity\": \"sha512-Lz7MvBK6DTjElHAmfu6bfANzKcxpyNPeYBGEafyA6E5HtRpjpZwU+u7Qrgz/2OR0z+5TvKYbPdphfSaAcZBrYQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/template\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-destructuring\": {\n      \"version\": \"7.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.21.3.tgz\",\n      \"integrity\": \"sha512-bp6hwMFzuiE4HqYEyoGJ/V2LeIWn+hLVKc4pnj++E5XQptwhtcGmSayM029d/j2X1bPKGTlsyPwAubuU22KhMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-dotall-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-6S3jpun1eEbAxq7TdjLotAsl4WpQI9DxfkycRcKrjhQYzU87qpXdknpBg/e+TdcMehqGnLFi7tnFUBR02Vq6wg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-duplicate-keys\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.18.9.tgz\",\n      \"integrity\": \"sha512-d2bmXCtZXYc59/0SanQKbiWINadaJXqtvIQIzd4+hNwkWBgyCd5F/2t1kXoUdvPMrxzPvhK6EMQRROxsue+mfw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-exponentiation-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wzEtc0+2c88FVR34aQmiz56dxEkxr2g8DQb/KfaFa1JYXOFVsbhvAonFN6PwVWj++fKmku8NP80plJ5Et4wqHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-builder-binary-assignment-operator-visitor\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-for-of\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.21.0.tgz\",\n      \"integrity\": \"sha512-LlUYlydgDkKpIY7mcBWvyPPmMcOphEyYA27Ef4xpbh1IiDNLr0kZsos2nf92vz3IccvJI25QUwp86Eo5s6HmBQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-function-name\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.18.9.tgz\",\n      \"integrity\": \"sha512-WvIBoRPaJQ5yVHzcnJFor7oS5Ls0PYixlTYE63lCj2RtdQEl15M68FXQlxnG6wdraJIXRdR7KI+hQ7q/9QjrCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-compilation-targets\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-IFQDSRoTPnrAIrI5zoZv73IFeZu2dhu6irxQjY9rNjTT53VmKg9fenjvoiOWOkJ6mm4jKVPtdMzBY98Fp4Z4cg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-member-expression-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-qSF1ihLGO3q+/g48k85tUjD033C29TNTVB2paCwZPVmOsjn9pClvYYrM2VeJpBY2bcNkuny0YUyTNRyRxJ54KA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-amd\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.20.11.tgz\",\n      \"integrity\": \"sha512-NuzCt5IIYOW0O30UvqktzHYR2ud5bOWbY0yaxWZ6G+aFzOMJvrs5YHNikrbdaT15+KNO31nPOy5Fim3ku6Zb5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-commonjs\": {\n      \"version\": \"7.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.21.2.tgz\",\n      \"integrity\": \"sha512-Cln+Yy04Gxua7iPdj6nOV96smLGjpElir5YwzF0LBPKoPlLDNJePNlrGGaybAJkd0zKRnOVXOgizSqPYMNYkzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.21.2\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-simple-access\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-systemjs\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.20.11.tgz\",\n      \"integrity\": \"sha512-vVu5g9BPQKSFEmvt2TA4Da5N+QVS66EX21d8uoOihC+OCpUoGvzVsXeqFdtAEfVa5BILAeFt+U7yVmLbQnAJmw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-hoist-variables\": \"^7.18.6\",\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-modules-umd\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.18.6.tgz\",\n      \"integrity\": \"sha512-dcegErExVeXcRqNtkRU/z8WlBLnvD4MRnHgNs3MytRO1Mn1sHRyhbcpYbVMGclAqOjdW+9cfkdZno9dFdfKLfQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-transforms\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-named-capturing-groups-regex\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.20.5.tgz\",\n      \"integrity\": \"sha512-mOW4tTzi5iTLnw+78iEq3gr8Aoq4WNRGpmSlrogqaiCBoR1HFhpU4JkpQFOHfeYx3ReVIFWOQJS4aZBRvuZ6mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.20.5\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-new-target\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.18.6.tgz\",\n      \"integrity\": \"sha512-DjwFA/9Iu3Z+vrAn+8pBUGcjhxKguSMlsFqeCKbhb9BAV756v0krzVK04CRDi/4aqmk8BsHb4a/gFcaA5joXRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-object-super\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.18.6.tgz\",\n      \"integrity\": \"sha512-uvGz6zk+pZoS1aTZrOvrbj6Pp/kK2mp45t2B+bTDre2UgsZZ8EZLSJtUg7m/no0zOJUWgFONpB7Zv9W2tSaFlA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-parameters\": {\n      \"version\": \"7.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.21.3.tgz\",\n      \"integrity\": \"sha512-Wxc+TvppQG9xWFYatvCGPvZ6+SIUxQ2ZdiBP+PHYMIjnPXD+uThCshaz4NZOnODAtBjjcVQQ/3OKs9LW28purQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-property-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-cYcs6qlgafTud3PAzrrRNbQtfpQ8+y/+M5tKmksS9+M1ckbH6kzY8MrexEM9mcA6JDsukE19iIRvAyYl463sMg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-regenerator\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.20.5.tgz\",\n      \"integrity\": \"sha512-kW/oO7HPBtntbsahzQ0qSE3tFvkFwnbozz3NWFhLGqH75vLEg+sCGngLlhVkePlCs3Jv0dBBHDzCHxNiFAQKCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"regenerator-transform\": \"^0.15.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-reserved-words\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.18.6.tgz\",\n      \"integrity\": \"sha512-oX/4MyMoypzHjFrT1CdivfKZ+XvIPMFXwwxHp/r0Ddy2Vuomt4HDFGmft1TAY2yiTKiNSsh3kjBAzcM8kSdsjA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-shorthand-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-eCLXXJqv8okzg86ywZJbRn19YJHU4XUa55oz2wbHhaQVn/MM+XhukiT7SYqp/7o00dg52Rj51Ny+Ecw4oyoygw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-ewBbHQ+1U/VnH1fxltbJqDeWBU1oNLG8Dj11uIv3xVf7nrQu0bPGe5Rf716r7K5Qz+SqtAOVswoVunoiBtGhxw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-sticky-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-kfiDrDQ+PBsQDO85yj1icueWMfGfJFKN1KCkndygtu/C9+XUfydLC8Iv5UYJqRwy4zk8EcplRxEOeLyjq1gm6Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-template-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-S8cOWfT82gTezpYOiVaGHrCbhlHgKhQt8XH5ES46P2XWmX92yisoZywf5km75wv5sYcXDUCLMmMxOLCtthDgMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-typeof-symbol\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.18.9.tgz\",\n      \"integrity\": \"sha512-SRfwTtF11G2aemAZWivL7PD+C9z52v9EvMqH9BuYbabyPuKUvSWks3oCg6041pT925L4zVFqaVBeECwsmlguEw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-escapes\": {\n      \"version\": \"7.18.10\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.18.10.tgz\",\n      \"integrity\": \"sha512-kKAdAI+YzPgGY/ftStBFXTI1LZFju38rYThnfMykS+IXy8BVx+res7s2fxf1l8I35DV2T97ezo6+SGrXz6B3iQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-transform-unicode-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-gE7A6Lt7YLnNOL3Pb9BNeZvi+d8l7tcRrG4+pwJjK9hD2xX4mEvjlQW60G9EEmfXVYRPv9VRQcyegIVHCql/AA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/preset-env\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.20.2.tgz\",\n      \"integrity\": \"sha512-1G0efQEWR1EHkKvKHqbG+IN/QdgwfByUpM5V5QroDzGV2t3S/WXNQd693cHiHTlCFMpr9B6FkPFXDA2lQcKoDg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.20.1\",\n        \"@babel/helper-compilation-targets\": \"^7.20.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-option\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-async-generator-functions\": \"^7.20.1\",\n        \"@babel/plugin-proposal-class-properties\": \"^7.18.6\",\n        \"@babel/plugin-proposal-class-static-block\": \"^7.18.6\",\n        \"@babel/plugin-proposal-dynamic-import\": \"^7.18.6\",\n        \"@babel/plugin-proposal-export-namespace-from\": \"^7.18.9\",\n        \"@babel/plugin-proposal-json-strings\": \"^7.18.6\",\n        \"@babel/plugin-proposal-logical-assignment-operators\": \"^7.18.9\",\n        \"@babel/plugin-proposal-nullish-coalescing-operator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-numeric-separator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-object-rest-spread\": \"^7.20.2\",\n        \"@babel/plugin-proposal-optional-catch-binding\": \"^7.18.6\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-private-methods\": \"^7.18.6\",\n        \"@babel/plugin-proposal-private-property-in-object\": \"^7.18.6\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.18.6\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-assertions\": \"^7.20.0\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\",\n        \"@babel/plugin-transform-arrow-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-async-to-generator\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoped-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoping\": \"^7.20.2\",\n        \"@babel/plugin-transform-classes\": \"^7.20.2\",\n        \"@babel/plugin-transform-computed-properties\": \"^7.18.9\",\n        \"@babel/plugin-transform-destructuring\": \"^7.20.2\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-duplicate-keys\": \"^7.18.9\",\n        \"@babel/plugin-transform-exponentiation-operator\": \"^7.18.6\",\n        \"@babel/plugin-transform-for-of\": \"^7.18.8\",\n        \"@babel/plugin-transform-function-name\": \"^7.18.9\",\n        \"@babel/plugin-transform-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-member-expression-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-modules-amd\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-commonjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-systemjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-umd\": \"^7.18.6\",\n        \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.19.1\",\n        \"@babel/plugin-transform-new-target\": \"^7.18.6\",\n        \"@babel/plugin-transform-object-super\": \"^7.18.6\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.1\",\n        \"@babel/plugin-transform-property-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-regenerator\": \"^7.18.6\",\n        \"@babel/plugin-transform-reserved-words\": \"^7.18.6\",\n        \"@babel/plugin-transform-shorthand-properties\": \"^7.18.6\",\n        \"@babel/plugin-transform-spread\": \"^7.19.0\",\n        \"@babel/plugin-transform-sticky-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-template-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-typeof-symbol\": \"^7.18.9\",\n        \"@babel/plugin-transform-unicode-escapes\": \"^7.18.10\",\n        \"@babel/plugin-transform-unicode-regex\": \"^7.18.6\",\n        \"@babel/preset-modules\": \"^0.1.5\",\n        \"@babel/types\": \"^7.20.2\",\n        \"babel-plugin-polyfill-corejs2\": \"^0.3.3\",\n        \"babel-plugin-polyfill-corejs3\": \"^0.6.0\",\n        \"babel-plugin-polyfill-regenerator\": \"^0.4.1\",\n        \"core-js-compat\": \"^3.25.1\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/preset-modules\": {\n      \"version\": \"0.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz\",\n      \"integrity\": \"sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.4.4\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.4.4\",\n        \"@babel/types\": \"^7.4.4\",\n        \"esutils\": \"^2.0.2\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/regjsgen\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/regjsgen/-/regjsgen-0.8.0.tgz\",\n      \"integrity\": \"sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA==\",\n      \"dev\": true\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.21.0.tgz\",\n      \"integrity\": \"sha512-xwII0//EObnq89Ji5AKYQaRYiW/nZ3llSv29d49IuxPhKbtJoLP+9QUUZ4nVragQVtaVGeZrpB+ZtG/Pdy/POw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"regenerator-runtime\": \"^0.13.11\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/template\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.20.7.tgz\",\n      \"integrity\": \"sha512-8SegXApWe6VoNw0r9JHpSteLKTpTiLZ4rMlGIm9JQ18KiCtyQiAMEazujAHrUS5flrcqYZa75ukev3P6QmUwUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.18.6\",\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.21.4.tgz\",\n      \"integrity\": \"sha512-eyKrRHKdyZxqDm+fV1iqL9UAHMoIg0nDaGqfIOd8rKH17m5snv7Gn4qgjBoFfLz9APvjFU/ICT00NVCv1Epp8Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.21.4\",\n        \"@babel/generator\": \"^7.21.4\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-hoist-variables\": \"^7.18.6\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"@babel/parser\": \"^7.21.4\",\n        \"@babel/types\": \"^7.21.4\",\n        \"debug\": \"^4.1.0\",\n        \"globals\": \"^11.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.21.4.tgz\",\n      \"integrity\": \"sha512-rU2oY501qDxE8Pyo7i/Orqma4ziCOrby0/9mvbDUGEfvZjb279Nk9k19e2fiCxHbRRpY2ZyrgW1eq22mvmOIzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.19.4\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\",\n        \"to-fast-properties\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@bcoe/v8-coverage\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz\",\n      \"integrity\": \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\",\n      \"dev\": true\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz\",\n      \"integrity\": \"sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.4.1.tgz\",\n      \"integrity\": \"sha512-XXrH9Uarn0stsyldqDYq8r++mROmWRI1xKMXa640Bb//SY1+ECYX6VzT6Lcx5frD0V30XieqJ0oX9I2Xj5aoMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.4.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/globals\": {\n      \"version\": \"13.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.20.0.tgz\",\n      \"integrity\": \"sha512-Qg5QtVkCy/kv3FUSlu4ukeZDVf9ee0iXLAUYX13gbR17bnejFTzr4iS9bY7kwCf1NztRNm1t91fjOiyx4CSwPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc/node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@humanwhocodes/config-array\": {\n      \"version\": \"0.11.8\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.8.tgz\",\n      \"integrity\": \"sha512-UybHIJzJnR5Qc/MsD9Kr+RpO2h+/P1GhOwdiLPXK5TWk5sgTdu88bTD9UP+CKbPPh5Rni1u0GjAdYQLemG8g+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@humanwhocodes/object-schema\": \"^1.2.1\",\n        \"debug\": \"^4.1.1\",\n        \"minimatch\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">=10.10.0\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/object-schema\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-1.2.1.tgz\",\n      \"integrity\": \"sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA==\",\n      \"dev\": true\n    },\n    \"node_modules/@istanbuljs/load-nyc-config\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz\",\n      \"integrity\": \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase\": \"^5.3.1\",\n        \"find-up\": \"^4.1.0\",\n        \"get-package-type\": \"^0.1.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/find-up\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/js-yaml\": {\n      \"version\": \"3.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n      \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/locate-path\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/p-limit\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-try\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/p-locate\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config/node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/console\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/console/-/console-29.5.0.tgz\",\n      \"integrity\": \"sha512-NEpkObxPwyw/XxZVLPmAGKE89IQRp4puc6IQRPru6JKd1M3fW9v1xM1AnzIJE65hbCkzQAdnL8P47e9hzhiYLQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/console/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/console/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/console/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/@jest/console/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/@jest/console/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/console/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/console/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/core\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/core/-/core-29.5.0.tgz\",\n      \"integrity\": \"sha512-28UzQc7ulUrOQw1IsN/kv1QES3q2kkbl/wGslyhAclqZ/8cMdB5M68BffkIdSJgKBUt50d3hbwJ92XESlE7LiQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/console\": \"^29.5.0\",\n        \"@jest/reporters\": \"^29.5.0\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/transform\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"exit\": \"^0.1.2\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-changed-files\": \"^29.5.0\",\n        \"jest-config\": \"^29.5.0\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-resolve\": \"^29.5.0\",\n        \"jest-resolve-dependencies\": \"^29.5.0\",\n        \"jest-runner\": \"^29.5.0\",\n        \"jest-runtime\": \"^29.5.0\",\n        \"jest-snapshot\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-validate\": \"^29.5.0\",\n        \"jest-watcher\": \"^29.5.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@jest/core/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/@jest/core/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/environment\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/environment/-/environment-29.5.0.tgz\",\n      \"integrity\": \"sha512-5FXw2+wD29YU1d4I2htpRX7jYnAyTRjP2CsXQdo9SAM8g3ifxWPSV0HnClSn71xwctr0U3oZIIH+dtbfmnbXVQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/fake-timers\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"jest-mock\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/expect\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect/-/expect-29.5.0.tgz\",\n      \"integrity\": \"sha512-PueDR2HGihN3ciUNGr4uelropW7rqUfTiOn+8u0leg/42UhblPxHkfoh0Ruu3I9Y1962P3u2DY4+h7GVTSVU6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"expect\": \"^29.5.0\",\n        \"jest-snapshot\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/expect-utils\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-29.5.0.tgz\",\n      \"integrity\": \"sha512-fmKzsidoXQT2KwnrwE0SQq3uj8Z763vzR8LnLBwC2qYWEFpjX8daRsk6rHUM1QvNlEW/UJXNXm59ztmJJWs2Mg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.4.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/fake-timers\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-29.5.0.tgz\",\n      \"integrity\": \"sha512-9ARvuAAQcBwDAqOnglWq2zwNIRUDtk/SCkp/ToGEhFv5r86K21l+VEs0qNTaXtyiY0lEePl3kylijSYJQqdbDg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"@sinonjs/fake-timers\": \"^10.0.2\",\n        \"@types/node\": \"*\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-mock\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/globals\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/globals/-/globals-29.5.0.tgz\",\n      \"integrity\": \"sha512-S02y0qMWGihdzNbUiqSAiKSpSozSuHX5UYc7QbnHP+D9Lyw8DgGGCinrN9uSuHPeKgSSzvPom2q1nAtBvUsvPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.5.0\",\n        \"@jest/expect\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"jest-mock\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/reporters\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/reporters/-/reporters-29.5.0.tgz\",\n      \"integrity\": \"sha512-D05STXqj/M8bP9hQNSICtPqz97u7ffGzZu+9XLucXhkOFBqKcXe04JLZOgIekOxdb73MAoBUFnqvf7MCpKk5OA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@bcoe/v8-coverage\": \"^0.2.3\",\n        \"@jest/console\": \"^29.5.0\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/transform\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.15\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\",\n        \"exit\": \"^0.1.2\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"istanbul-lib-instrument\": \"^5.1.0\",\n        \"istanbul-lib-report\": \"^3.0.0\",\n        \"istanbul-lib-source-maps\": \"^4.0.0\",\n        \"istanbul-reports\": \"^3.1.3\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-worker\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\",\n        \"string-length\": \"^4.0.1\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"v8-to-istanbul\": \"^9.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/@jest/reporters/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/schemas\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.4.3.tgz\",\n      \"integrity\": \"sha512-VLYKXQmtmuEz6IxJsrZwzG9NvtkQsWNnWMsKxqWNu3+CnfzJQhp0WDDKWLVV9hLKr0l3SLLFRqcYHjhtyuDVxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinclair/typebox\": \"^0.25.16\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/source-map\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/source-map/-/source-map-29.4.3.tgz\",\n      \"integrity\": \"sha512-qyt/mb6rLyd9j1jUts4EQncvS6Yy3PM9HghnNv86QBlV+zdL2inCdK1tuVlL+J+lpiw2BI67qXOrX3UurBqQ1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.15\",\n        \"callsites\": \"^3.0.0\",\n        \"graceful-fs\": \"^4.2.9\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/test-result\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/test-result/-/test-result-29.5.0.tgz\",\n      \"integrity\": \"sha512-fGl4rfitnbfLsrfx1uUpDEESS7zM8JdgZgOCQuxQvL1Sn/I6ijeAVQWGfXI9zb1i9Mzo495cIpVZhA0yr60PkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/console\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/test-sequencer\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-29.5.0.tgz\",\n      \"integrity\": \"sha512-yPafQEcKjkSfDXyvtgiV4pevSeyuA6MQr6ZIdVkWJly9vkqjnFfcfhRQqpD5whjoU8EORki752xQmjaqoFjzMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/test-result\": \"^29.5.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/test-sequencer/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/transform\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/transform/-/transform-29.5.0.tgz\",\n      \"integrity\": \"sha512-8vbeZWqLJOvHaDfeMuoHITGKSz5qWc9u04lnWrQE3VyuSw604PzQM824ZeX9XSjUCeDiE3GuxZe5UKa8J61NQw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.15\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"chalk\": \"^4.0.0\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"fast-json-stable-stringify\": \"^2.1.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-util\": \"^29.5.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pirates\": \"^4.0.4\",\n        \"slash\": \"^3.0.0\",\n        \"write-file-atomic\": \"^4.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/@jest/transform/node_modules/convert-source-map\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n      \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/@jest/transform/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/types\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/types/-/types-29.5.0.tgz\",\n      \"integrity\": \"sha512-qbu7kN6czmVRc3xWFQcAN03RAUamgppVUdXrvl1Wr3jlNF93o9mJbGcDWrwGB6ht44u7efB1qCFgVQmca24Uog==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.4.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"@types/istanbul-reports\": \"^3.0.0\",\n        \"@types/node\": \"*\",\n        \"@types/yargs\": \"^17.0.8\",\n        \"chalk\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/types/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/types/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/types/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/@jest/types/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/@jest/types/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/types/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz\",\n      \"integrity\": \"sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz\",\n      \"integrity\": \"sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz\",\n      \"integrity\": \"sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.15\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\n      \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\n      \"dev\": true\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.18\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.18.tgz\",\n      \"integrity\": \"sha512-w+niJYzMHdd7USdiH2U6869nqhD2nbfZXND5Yp93qIbEmnDNk7PD48o+YchRVpzMU7M6jVCbenTR7PA1FLQ9pA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"1.4.14\"\n      }\n    },\n    \"node_modules/@jridgewell/trace-mapping/node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.14\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz\",\n      \"integrity\": \"sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==\",\n      \"dev\": true\n    },\n    \"node_modules/@nicolo-ribaudo/chokidar-2\": {\n      \"version\": \"2.1.8-no-fsevents.3\",\n      \"resolved\": \"https://registry.npmjs.org/@nicolo-ribaudo/chokidar-2/-/chokidar-2-2.1.8-no-fsevents.3.tgz\",\n      \"integrity\": \"sha512-s88O1aVtXftvp5bCPB7WnmXc5IwOZZ7YPuwNPt+GtOOXpPvad1LfbmjYv+qII7zP6RU2QGnqve27dnLycEnyEQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@sinclair/typebox\": {\n      \"version\": \"0.25.24\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.25.24.tgz\",\n      \"integrity\": \"sha512-XJfwUVUKDHF5ugKwIcxEgc9k8b7HbznCp6eUfWgu710hMPNIO4aw4/zB5RogDQz8nd6gyCDpU9O/m6qYEWY6yQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@sinonjs/commons\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/commons/-/commons-2.0.0.tgz\",\n      \"integrity\": \"sha512-uLa0j859mMrg2slwQYdO/AkrOfmH+X6LTVmNTS9CqexuE2IvVORIkSpJLqePAbEnKJ77aMmCwr1NUZ57120Xcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-detect\": \"4.0.8\"\n      }\n    },\n    \"node_modules/@sinonjs/fake-timers\": {\n      \"version\": \"10.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-10.0.2.tgz\",\n      \"integrity\": \"sha512-SwUDyjWnah1AaNl7kxsa7cfLhlTYoiyhDAIgyh+El30YvXs/o7OLXpYH88Zdhyx9JExKrmHDJ+10bwIcY80Jmw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinonjs/commons\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__core\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.0.tgz\",\n      \"integrity\": \"sha512-+n8dL/9GWblDO0iU6eZAwEIJVr5DWigtle+Q6HLOrh/pdbXOhOtqzq8VPPE2zvNJzSKY4vH/z3iT3tn0A3ypiQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\",\n        \"@types/babel__generator\": \"*\",\n        \"@types/babel__template\": \"*\",\n        \"@types/babel__traverse\": \"*\"\n      }\n    },\n    \"node_modules/@types/babel__generator\": {\n      \"version\": \"7.6.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.4.tgz\",\n      \"integrity\": \"sha512-tFkciB9j2K755yrTALxD44McOrk+gfpIpvC3sxHjRawj6PfnQxrse4Clq5y/Rq+G3mrBurMax/lG8Qn2t9mSsg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__template\": {\n      \"version\": \"7.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.1.tgz\",\n      \"integrity\": \"sha512-azBFKemX6kMg5Io+/rdGT0dkGreboUVR0Cdm3fz9QJWpaQGJRQXl7C+6hOTCZcMll7KFyEQpgbYI2lHdsS4U7g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.1.0\",\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__traverse\": {\n      \"version\": \"7.18.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.18.3.tgz\",\n      \"integrity\": \"sha512-1kbcJ40lLB7MHsj39U4Sh1uTd2E7rLEa79kmDpI6cy+XiXsteB3POdQomoq4FxszMrO3ZYchkhYJw7A2862b3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.3.0\"\n      }\n    },\n    \"node_modules/@types/graceful-fs\": {\n      \"version\": \"4.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.6.tgz\",\n      \"integrity\": \"sha512-Sig0SNORX9fdW+bQuTEovKj3uHcUL6LQKbCrrqb1X7J6/ReAbhCXRAhc+SMejhLELFj2QcyuxmUooZ4bt5ReSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-lib-coverage\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz\",\n      \"integrity\": \"sha512-z/QT1XN4K4KYuslS23k62yDIDLwLFkzxOuMplDtObz0+y7VqJCaO2o+SPwHCvLFZh7xazvvoor2tA/hPz9ee7g==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/istanbul-lib-report\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz\",\n      \"integrity\": \"sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/istanbul-lib-coverage\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-reports\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.1.tgz\",\n      \"integrity\": \"sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWlt6ASU3tSqxp0Uu0Aw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/istanbul-lib-report\": \"*\"\n      }\n    },\n    \"node_modules/@types/jest\": {\n      \"version\": \"29.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/jest/-/jest-29.4.0.tgz\",\n      \"integrity\": \"sha512-VaywcGQ9tPorCX/Jkkni7RWGFfI11whqzs8dvxF41P17Z+z872thvEvlIbznjPJ02kl1HMX3LmLOonsj2n7HeQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"expect\": \"^29.0.0\",\n        \"pretty-format\": \"^29.0.0\"\n      }\n    },\n    \"node_modules/@types/json-schema\": {\n      \"version\": \"7.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.11.tgz\",\n      \"integrity\": \"sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/json5\": {\n      \"version\": \"0.0.29\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz\",\n      \"integrity\": \"sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"18.15.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-18.15.11.tgz\",\n      \"integrity\": \"sha512-E5Kwq2n4SbMzQOn6wnmBjuK9ouqlURrcZDVfbo9ftDDTFt3nk7ZKK4GMOzoYgnpQJKcxwQw+lGaBvvlMo0qN/Q==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/prettier\": {\n      \"version\": \"2.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/prettier/-/prettier-2.7.2.tgz\",\n      \"integrity\": \"sha512-KufADq8uQqo1pYKVIYzfKbJfBAc0sOeXqGbFaSpv8MRmC/zXgowNZmFcbngndGk922QDmOASEXUZCaY48gs4cg==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/semver\": {\n      \"version\": \"7.3.13\",\n      \"resolved\": \"https://registry.npmjs.org/@types/semver/-/semver-7.3.13.tgz\",\n      \"integrity\": \"sha512-21cFJr9z3g5dW8B0CVI9g2O9beqaThGQ6ZFBqHfwhzLDKUxaqTIy3vnfah/UPkfOiF2pLq+tGz+W8RyCskuslw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/stack-utils\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.1.tgz\",\n      \"integrity\": \"sha512-Hl219/BT5fLAaz6NDkSuhzasy49dwQS/DSdu4MdggFB8zcXv7vflBI3xp7FEmkmdDkBUI2bPUNeMttp2knYdxw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/yargs\": {\n      \"version\": \"17.0.24\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs/-/yargs-17.0.24.tgz\",\n      \"integrity\": \"sha512-6i0aC7jV6QzQB8ne1joVZ0eSFIstHsCrobmOtghM11yGlH0j43FKL2UhWdELkyps0zuf7qVTUVCCR+tgSlyLLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/yargs-parser\": \"*\"\n      }\n    },\n    \"node_modules/@types/yargs-parser\": {\n      \"version\": \"21.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.0.tgz\",\n      \"integrity\": \"sha512-iO9ZQHkZxHn4mSakYV0vFHAVDyEOIJQrV2uZ06HxEPcx+mt8swXoZHIbaaJ2crJYFfErySgktuTZ3BeLz+XmFA==\",\n      \"dev\": true\n    },\n    \"node_modules/@typescript-eslint/scope-manager\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-5.57.1.tgz\",\n      \"integrity\": \"sha512-N/RrBwEUKMIYxSKl0oDK5sFVHd6VI7p9K5MyUlVYAY6dyNb/wHUqndkTd3XhpGlXgnQsBkRZuu4f9kAHghvgPw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"@typescript-eslint/visitor-keys\": \"5.57.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/types\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-5.57.1.tgz\",\n      \"integrity\": \"sha512-bSs4LOgyV3bJ08F5RDqO2KXqg3WAdwHCu06zOqcQ6vqbTJizyBhuh1o1ImC69X4bV2g1OJxbH71PJqiO7Y1RuA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-5.57.1.tgz\",\n      \"integrity\": \"sha512-A2MZqD8gNT0qHKbk2wRspg7cHbCDCk2tcqt6ScCFLr5Ru8cn+TCfM786DjPhqwseiS+PrYwcXht5ztpEQ6TFTw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"@typescript-eslint/visitor-keys\": \"5.57.1\",\n        \"debug\": \"^4.3.4\",\n        \"globby\": \"^11.1.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"semver\": \"^7.3.7\",\n        \"tsutils\": \"^3.21.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependenciesMeta\": {\n        \"typescript\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/semver\": {\n      \"version\": \"7.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.8.tgz\",\n      \"integrity\": \"sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/typescript-estree/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n      \"dev\": true\n    },\n    \"node_modules/@typescript-eslint/utils\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-5.57.1.tgz\",\n      \"integrity\": \"sha512-kN6vzzf9NkEtawECqze6v99LtmDiUJCVpvieTFA1uL7/jDghiJGubGZ5csicYHU1Xoqb3oH/R5cN5df6W41Nfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@types/json-schema\": \"^7.0.9\",\n        \"@types/semver\": \"^7.3.12\",\n        \"@typescript-eslint/scope-manager\": \"5.57.1\",\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"@typescript-eslint/typescript-estree\": \"5.57.1\",\n        \"eslint-scope\": \"^5.1.1\",\n        \"semver\": \"^7.3.7\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/eslint-scope\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n      \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^4.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/estraverse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n      \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/semver\": {\n      \"version\": \"7.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.8.tgz\",\n      \"integrity\": \"sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/@typescript-eslint/utils/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n      \"dev\": true\n    },\n    \"node_modules/@typescript-eslint/visitor-keys\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-5.57.1.tgz\",\n      \"integrity\": \"sha512-RjQrAniDU0CEk5r7iphkm731zKlFiUjvcBS2yHAg8WWqFMCaCrD0rKEVOMUyMMcbGPZ0bPp56srkGWrgfZqLRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/typescript-eslint\"\n      }\n    },\n    \"node_modules/acorn\": {\n      \"version\": \"8.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.8.2.tgz\",\n      \"integrity\": \"sha512-xjIYgE8HBrkpd/sJqOGNspf8uHG+NOHGOw6a/Urj8taM2EXfdNAH2oFcPeIFfsv3+kz/mJrS5VuMqbNLjCa2vw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"acorn\": \"bin/acorn\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"node_modules/aria-query\": {\n      \"version\": \"5.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.1.3.tgz\",\n      \"integrity\": \"sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-equal\": \"^2.0.5\"\n      }\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.0.tgz\",\n      \"integrity\": \"sha512-LPuwb2P+NrQw3XhxGc36+XSvuBPopovXYTR9Ew++Du9Yb/bx5AzBfrIsBoj0EZUifjQU+sHL21sseZ3jerWO/A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"is-array-buffer\": \"^3.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-includes\": {\n      \"version\": \"3.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/array-includes/-/array-includes-3.1.6.tgz\",\n      \"integrity\": \"sha512-sgTbLvL6cNnw24FnbaDyjmvddQ2ML8arZsgaJhoABMoplz/4QRhtrYS+alr1BUM1Bwp6dhx8vVCBSLG+StwOFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"is-string\": \"^1.0.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array-union\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/array.prototype.flat\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.1.tgz\",\n      \"integrity\": \"sha512-roTU0KWIOmJ4DRLmwKd19Otg0/mT3qPNt0Qb3GWW8iObuZXxrjB/pzn0R3hqpRSWg4HCwqx+0vwOnWnvlOyeIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.flatmap\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.1.tgz\",\n      \"integrity\": \"sha512-8UGn9O1FDVvMNB0UlLv4voxRMze7+FpHyF5mSMRjWHUMlpoDViniy05870VlxhfgTnLbpuwTzvD76MTtWxB/mQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/array.prototype.tosorted\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.1.tgz\",\n      \"integrity\": \"sha512-pZYPXPRl2PqWcsUs6LOMn+1f1532nEoPTYowBtqLwAW+W8vSVhkIGnmOX1t/UQjD6YGI0vcD2B1U7ZFGQH9jnQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"es-shim-unscopables\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.1.3\"\n      }\n    },\n    \"node_modules/ast-types-flow\": {\n      \"version\": \"0.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.7.tgz\",\n      \"integrity\": \"sha512-eBvWn1lvIApYMhzQMsu9ciLfkBY499mFZlNqG+/9WR7PVlroQw0vG30cOQQbaKz3sCEc44TAOu2ykzqXSNnwag==\",\n      \"dev\": true\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.5.tgz\",\n      \"integrity\": \"sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/axe-core\": {\n      \"version\": \"4.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/axe-core/-/axe-core-4.6.3.tgz\",\n      \"integrity\": \"sha512-/BQzOX780JhsxDnPpH4ZiyrJAzcd8AfzFPkv+89veFSr1rcMjuq2JDCwypKaPeB6ljHp9KjXhPpjgCvQlWYuqg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/axobject-query\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/axobject-query/-/axobject-query-3.1.1.tgz\",\n      \"integrity\": \"sha512-goKlv8DZrK9hUh975fnHzhNIO4jUnFCfv/dszV5VwUGDFjI6vQ2VwoyjYjYNEbBE8AH87TduWP5uyDR1D+Iteg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-equal\": \"^2.0.5\"\n      }\n    },\n    \"node_modules/babel-jest\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-jest/-/babel-jest-29.5.0.tgz\",\n      \"integrity\": \"sha512-mA4eCDh5mSo2EcA9xQjVTpmbbNk32Zb3Q3QFQsNhaK56Q+yoXowzFodLux30HRgyOho5rsQ6B0P9QpMkvvnJ0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/transform\": \"^29.5.0\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"babel-preset-jest\": \"^29.5.0\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.8.0\"\n      }\n    },\n    \"node_modules/babel-jest/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/babel-jest/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/babel-jest/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/babel-jest/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/babel-jest/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-jest/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-jest/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-plugin-istanbul\": {\n      \"version\": \"6.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.1.1.tgz\",\n      \"integrity\": \"sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@istanbuljs/load-nyc-config\": \"^1.0.0\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-instrument\": \"^5.0.4\",\n        \"test-exclude\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-plugin-jest-hoist\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-29.5.0.tgz\",\n      \"integrity\": \"sha512-zSuuuAlTMT4mzLj2nPnUm6fsE6270vdOfnpbJ+RmruU75UhLFvL0N2NgI7xpeS7NaB6hGqmd5pVpGTDYvi4Q3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.3.3\",\n        \"@babel/types\": \"^7.3.3\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"@types/babel__traverse\": \"^7.0.6\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-corejs2\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.3.3.tgz\",\n      \"integrity\": \"sha512-8hOdmFYFSZhqg2C/JgLUQ+t52o5nirNwaWM2B9LWteozwIvM14VSwdsCAUET10qT+kmySAlseadmfeeSWFCy+Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.17.7\",\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"semver\": \"^6.1.1\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-corejs3\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.6.0.tgz\",\n      \"integrity\": \"sha512-+eHqR6OPcBhJOGgsIar7xoAB1GcSwVUA3XjAd7HJNzOXT4wv6/H7KIdA/Nc60cvUlDbKApmqNvD1B1bzOt4nyA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"core-js-compat\": \"^3.25.1\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/babel-plugin-polyfill-regenerator\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.4.1.tgz\",\n      \"integrity\": \"sha512-NtQGmyQDXjQqQ+IzRkBVwEOz9lQ4zxAQZgoAYEtU9dJjnl1Oc98qnN7jcp+bE7O7aYzVpavXE3/VKXNzUbh7aw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/babel-preset-current-node-syntax\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.0.1.tgz\",\n      \"integrity\": \"sha512-M7LQ0bxarkxQoN+vz5aJPsLBn77n8QgTFmo8WK0/44auK2xlCXrYcUxHFxgU7qW5Yzw/CjmLRK2uJzaCd7LvqQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-bigint\": \"^7.8.3\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-meta\": \"^7.8.3\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.8.3\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.8.3\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/babel-preset-jest\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-29.5.0.tgz\",\n      \"integrity\": \"sha512-JOMloxOqdiBSxMAzjRaH023/vvcaSaec49zvg+2LmNsktC7ei39LTJGw02J+9uUtTZUq6xbLyJ4dxe9sSmIuAg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"babel-plugin-jest-hoist\": \"^29.5.0\",\n        \"babel-preset-current-node-syntax\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.21.5.tgz\",\n      \"integrity\": \"sha512-tUkiguQGW7S3IhB7N+c2MV/HZPSCPAAiYBZXLsBhFB/PCy6ZKKsZrmBayHV9fdGV/ARIfJ14NkxKzRDjvp7L6w==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        }\n      ],\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001449\",\n        \"electron-to-chromium\": \"^1.4.284\",\n        \"node-releases\": \"^2.0.8\",\n        \"update-browserslist-db\": \"^1.0.10\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n      }\n    },\n    \"node_modules/bser\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/bser/-/bser-2.1.1.tgz\",\n      \"integrity\": \"sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"node-int64\": \"^0.4.0\"\n      }\n    },\n    \"node_modules/buffer-from\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz\",\n      \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\",\n      \"dev\": true\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\n      \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\",\n        \"get-intrinsic\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001476\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001476.tgz\",\n      \"integrity\": \"sha512-JmpktFppVSvyUN4gsLS0bShY2L9ZUslHLE72vgemBkS43JD2fOvKTKs+GtRwuxrtRGnwJFW0ye7kWRRlLJS9vQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ]\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/char-regex\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz\",\n      \"integrity\": \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"optional\": true,\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/ci-info\": {\n      \"version\": \"3.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.8.0.tgz\",\n      \"integrity\": \"sha512-eXTggHWSooYhq49F2opQhuHWgzucfF2YgODK4e1566GQs5BIfP30B0oenwBJHfWxAs2fyPB1s7Mg949zLf61Yw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/sibiraj-s\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cjs-module-lexer\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.2.2.tgz\",\n      \"integrity\": \"sha512-cOU9usZw8/dXIXKtwa8pM0OTJQuJkxMN6w30csNRUerHfeQ5R6U3kkU/FtJeIf3M202OHfY2U8ccInBG7/xogA==\",\n      \"dev\": true\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/co\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",\n      \"integrity\": \"sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \">= 1.0.0\",\n        \"node\": \">= 0.12.0\"\n      }\n    },\n    \"node_modules/collect-v8-coverage\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.1.tgz\",\n      \"integrity\": \"sha512-iBPtljfCNcTKNAto0KEtDfZ3qzjJvqE3aTGZsbhjSBlorqpXJlaWWtPO35D+ZImoC3KWejX64o+yPGxhWSTzfg==\",\n      \"dev\": true\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"node_modules/commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"node_modules/confusing-browser-globals\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/confusing-browser-globals/-/confusing-browser-globals-1.0.11.tgz\",\n      \"integrity\": \"sha512-JsPKdmh8ZkmnHxDk55FZ1TqVLvEQTvoByJZRN9jzI0UjxK/QgAmsphz7PGtqgPieQZ/CQcHWXCR7ATDNhGe+YA==\",\n      \"dev\": true\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"1.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz\",\n      \"integrity\": \"sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==\",\n      \"dev\": true\n    },\n    \"node_modules/core-js-compat\": {\n      \"version\": \"3.30.0\",\n      \"resolved\": \"https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.30.0.tgz\",\n      \"integrity\": \"sha512-P5A2h/9mRYZFIAP+5Ab8ns6083IyVpSclU74UNvbGVQ8VM7n3n3/g2yF3AkKQ9NXz2O+ioxLbEWKnDtgsFamhg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"browserslist\": \"^4.21.5\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/core-js\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/damerau-levenshtein\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz\",\n      \"integrity\": \"sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==\",\n      \"dev\": true\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/dedent\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/dedent/-/dedent-0.7.0.tgz\",\n      \"integrity\": \"sha512-Q6fKUPqnAHAyhiUgFU7BUzLiv0kd8saH9al7tnu5Q/okj6dnupxyTgFIBjVzJATdfIAm9NAsvXNzjaKa+bxVyA==\",\n      \"dev\": true\n    },\n    \"node_modules/deep-equal\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-2.2.0.tgz\",\n      \"integrity\": \"sha512-RdpzE0Hv4lhowpIUKKMJfeH6C1pXdtT1/it80ubgWqwI3qpuxUBpC1S4hnHg+zjnuOoDkzUtUCEEkG+XG5l3Mw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"es-get-iterator\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-array-buffer\": \"^3.0.1\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"object-is\": \"^1.1.5\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.4.3\",\n        \"side-channel\": \"^1.0.4\",\n        \"which-boxed-primitive\": \"^1.0.2\",\n        \"which-collection\": \"^1.0.1\",\n        \"which-typed-array\": \"^1.1.9\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n      \"dev\": true\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.0.tgz\",\n      \"integrity\": \"sha512-xvqAVKGfT1+UAvPwKTVw/njhdQ8ZhXK4lI0bCIuCMrp2up9nPnaDftrLtmpTazqd1o+UY4zgzU+avtMbDP+ldA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/detect-newline\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz\",\n      \"integrity\": \"sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/diff-sequences\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.4.3.tgz\",\n      \"integrity\": \"sha512-ofrBgwpPhCD85kMKtE9RYFFq6OC1A89oW2vvgWZNCwxrUpRUILopY7lsYyMDSjc8g6U6aiO0Qubg6r4Wgt5ZnA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-type\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/doctrine\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.4.356\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.356.tgz\",\n      \"integrity\": \"sha512-nEftV1dRX3omlxAj42FwqRZT0i4xd2dIg39sog/CnCJeCcL1TRd2Uh0i9Oebgv8Ou0vzTPw++xc+Z20jzS2B6A==\",\n      \"dev\": true\n    },\n    \"node_modules/emittery\": {\n      \"version\": \"0.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/emittery/-/emittery-0.13.1.tgz\",\n      \"integrity\": \"sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/emittery?sponsor=1\"\n      }\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/es-abstract\": {\n      \"version\": \"1.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.21.2.tgz\",\n      \"integrity\": \"sha512-y/B5POM2iBnIxCiernH1G7rC9qQoM77lLIMQLuob0zhp8C56Po81+2Nj0WFKnd0pNReDTnkYryc+zhOzpEIROg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"es-set-tostringtag\": \"^2.0.1\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function.prototype.name\": \"^1.1.5\",\n        \"get-intrinsic\": \"^1.2.0\",\n        \"get-symbol-description\": \"^1.0.0\",\n        \"globalthis\": \"^1.0.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has\": \"^1.0.3\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.5\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-negative-zero\": \"^2.0.2\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.10\",\n        \"is-weakref\": \"^1.0.2\",\n        \"object-inspect\": \"^1.12.3\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.4.3\",\n        \"safe-regex-test\": \"^1.0.0\",\n        \"string.prototype.trim\": \"^1.2.7\",\n        \"string.prototype.trimend\": \"^1.0.6\",\n        \"string.prototype.trimstart\": \"^1.0.6\",\n        \"typed-array-length\": \"^1.0.4\",\n        \"unbox-primitive\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-get-iterator\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-get-iterator/-/es-get-iterator-1.1.3.tgz\",\n      \"integrity\": \"sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-map\": \"^2.0.2\",\n        \"is-set\": \"^2.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"isarray\": \"^2.0.5\",\n        \"stop-iteration-iterator\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-set-tostringtag\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.1.tgz\",\n      \"integrity\": \"sha512-g3OMbtlwY3QewlqAiMLI47KywjWZoEytKr8pf6iTC8uJq5bIAH52Z9pnQ8pVL6whrCto53JZDuUIsifGeLorTg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-shim-unscopables\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.0.tgz\",\n      \"integrity\": \"sha512-Jm6GPcCdC30eMLbZ2x8z2WuRwAws3zTBBKuusffYVUrNj/GVSUAZ+xKMaUpfNDR5IbyNA5LJbaecoUVbmUcB1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has\": \"^1.0.3\"\n      }\n    },\n    \"node_modules/es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz\",\n      \"integrity\": \"sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/eslint\": {\n      \"version\": \"8.33.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.33.0.tgz\",\n      \"integrity\": \"sha512-WjOpFQgKK8VrCnAtl8We0SUOy/oVZ5NHykyMiagV1M9r8IFpIJX7DduK6n1mpfhlG7T1NLWm2SuD8QB7KFySaA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@eslint/eslintrc\": \"^1.4.1\",\n        \"@humanwhocodes/config-array\": \"^0.11.8\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"ajv\": \"^6.10.0\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.1.1\",\n        \"eslint-utils\": \"^3.0.0\",\n        \"eslint-visitor-keys\": \"^3.3.0\",\n        \"espree\": \"^9.4.0\",\n        \"esquery\": \"^1.4.0\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"grapheme-splitter\": \"^1.0.4\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.0.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-sdsl\": \"^4.1.4\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.1\",\n        \"regexpp\": \"^3.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"strip-json-comments\": \"^3.1.0\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"bin\": {\n        \"eslint\": \"bin/eslint.js\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint-config-airbnb\": {\n      \"version\": \"19.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-config-airbnb/-/eslint-config-airbnb-19.0.4.tgz\",\n      \"integrity\": \"sha512-T75QYQVQX57jiNgpF9r1KegMICE94VYwoFQyMGhrvc+lB8YF2E/M/PYDaQe1AJcWaEgqLE+ErXV1Og/+6Vyzew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-config-airbnb-base\": \"^15.0.0\",\n        \"object.assign\": \"^4.1.2\",\n        \"object.entries\": \"^1.1.5\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || ^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^7.32.0 || ^8.2.0\",\n        \"eslint-plugin-import\": \"^2.25.3\",\n        \"eslint-plugin-jsx-a11y\": \"^6.5.1\",\n        \"eslint-plugin-react\": \"^7.28.0\",\n        \"eslint-plugin-react-hooks\": \"^4.3.0\"\n      }\n    },\n    \"node_modules/eslint-config-airbnb-base\": {\n      \"version\": \"15.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-config-airbnb-base/-/eslint-config-airbnb-base-15.0.0.tgz\",\n      \"integrity\": \"sha512-xaX3z4ZZIcFLvh2oUNvcX5oEofXda7giYmuplVxoOg5A7EXJMrUyqRgR+mhDhPK8LZ4PttFOBvCYDbX3sUoUig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"confusing-browser-globals\": \"^1.0.10\",\n        \"object.assign\": \"^4.1.2\",\n        \"object.entries\": \"^1.1.5\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^7.32.0 || ^8.2.0\",\n        \"eslint-plugin-import\": \"^2.25.2\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-node\": {\n      \"version\": \"0.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.7.tgz\",\n      \"integrity\": \"sha512-gozW2blMLJCeFpBwugLTGyvVjNoeo1knonXAcatC6bjPBZitotxdWf7Gimr25N4c0AAOo4eOUfaG82IJPDpqCA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\",\n        \"is-core-module\": \"^2.11.0\",\n        \"resolve\": \"^1.22.1\"\n      }\n    },\n    \"node_modules/eslint-import-resolver-node/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-module-utils\": {\n      \"version\": \"2.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.7.4.tgz\",\n      \"integrity\": \"sha512-j4GT+rqzCoRKHwURX7pddtIPGySnX9Si/cgMI5ztrcqOPtk5dDEeZ34CQVPphnqkJytlc97Vuk05Um2mJ3gEQA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^3.2.7\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"eslint\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/eslint-module-utils/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-import\": {\n      \"version\": \"2.27.5\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.27.5.tgz\",\n      \"integrity\": \"sha512-LmEt3GVofgiGuiE+ORpnvP+kAm3h6MLZJ4Q5HCyHADofsb4VzXFsRiWj3c0OFiV+3DWFh0qg3v9gcPlfc3zRow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flat\": \"^1.3.1\",\n        \"array.prototype.flatmap\": \"^1.3.1\",\n        \"debug\": \"^3.2.7\",\n        \"doctrine\": \"^2.1.0\",\n        \"eslint-import-resolver-node\": \"^0.3.7\",\n        \"eslint-module-utils\": \"^2.7.4\",\n        \"has\": \"^1.0.3\",\n        \"is-core-module\": \"^2.11.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.values\": \"^1.1.6\",\n        \"resolve\": \"^1.22.1\",\n        \"semver\": \"^6.3.0\",\n        \"tsconfig-paths\": \"^3.14.1\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/eslint-plugin-import/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-jest\": {\n      \"version\": \"27.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-27.2.1.tgz\",\n      \"integrity\": \"sha512-l067Uxx7ZT8cO9NJuf+eJHvt6bqJyz2Z29wykyEdz/OtmcELQl2MQGQLX8J94O1cSJWAwUSEvCjwjA7KEK3Hmg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@typescript-eslint/utils\": \"^5.10.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@typescript-eslint/eslint-plugin\": \"^5.0.0\",\n        \"eslint\": \"^7.0.0 || ^8.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@typescript-eslint/eslint-plugin\": {\n          \"optional\": true\n        },\n        \"jest\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/eslint-plugin-jsx-a11y\": {\n      \"version\": \"6.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.7.1.tgz\",\n      \"integrity\": \"sha512-63Bog4iIethyo8smBklORknVjB0T2dwB8Mr/hIC+fBS0uyHdYYpzM/Ed+YC8VxTjlXHEWFOdmgwcDn1U2L9VCA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.20.7\",\n        \"aria-query\": \"^5.1.3\",\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flatmap\": \"^1.3.1\",\n        \"ast-types-flow\": \"^0.0.7\",\n        \"axe-core\": \"^4.6.2\",\n        \"axobject-query\": \"^3.1.1\",\n        \"damerau-levenshtein\": \"^1.0.8\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"has\": \"^1.0.3\",\n        \"jsx-ast-utils\": \"^3.3.3\",\n        \"language-tags\": \"=1.0.5\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.6\",\n        \"object.fromentries\": \"^2.0.6\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-react\": {\n      \"version\": \"7.32.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.32.2.tgz\",\n      \"integrity\": \"sha512-t2fBMa+XzonrrNkyVirzKlvn5RXzzPwRHtMvLAtVZrt8oxgnTQaYbU6SXTOO1mwQgp1y5+toMSKInnzGr0Knqg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flatmap\": \"^1.3.1\",\n        \"array.prototype.tosorted\": \"^1.1.1\",\n        \"doctrine\": \"^2.1.0\",\n        \"estraverse\": \"^5.3.0\",\n        \"jsx-ast-utils\": \"^2.4.1 || ^3.0.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.6\",\n        \"object.fromentries\": \"^2.0.6\",\n        \"object.hasown\": \"^1.1.2\",\n        \"object.values\": \"^1.1.6\",\n        \"prop-types\": \"^15.8.1\",\n        \"resolve\": \"^2.0.0-next.4\",\n        \"semver\": \"^6.3.0\",\n        \"string.prototype.matchall\": \"^4.0.8\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8\"\n      }\n    },\n    \"node_modules/eslint-plugin-react-hooks\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-4.6.0.tgz\",\n      \"integrity\": \"sha512-oFc7Itz9Qxh2x4gNHStv3BqJq54ExXmfC+a1NjAta66IAN87Wu0R/QArgIS9qKzX3dXKPI9H5crl9QchNMY9+g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/doctrine\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"esutils\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/eslint-plugin-react/node_modules/resolve\": {\n      \"version\": \"2.0.0-next.4\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.4.tgz\",\n      \"integrity\": \"sha512-iMDbmAWtfU+MHpxt/I5iWI7cY6YVEZUQ3MBgPQ++XD1PELuJHIl82xBmObyP2KyQmkNB2dsqF7seoQQiAn5yDQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.9.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/eslint-scope\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.1.1.tgz\",\n      \"integrity\": \"sha512-QKQM/UXpIiHcLqJ5AOyIW7XZmzjkzQXYE54n1++wb0u9V/abW3l9uQnxX8Z5Xd18xyKIMTUAyQ0k1e8pz6LUrw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/eslint-utils\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-utils/-/eslint-utils-3.0.0.tgz\",\n      \"integrity\": \"sha512-uuQC43IGctw68pJA1RgbQS8/NP7rch6Cwd4j3ZBtgo4/8Flj4eGE7ZYSZRN3iq5pVUv6GPdW5Z1RFleo84uLDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^10.0.0 || ^12.0.0 || >= 14.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/mysticatea\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \">=5\"\n      }\n    },\n    \"node_modules/eslint-utils/node_modules/eslint-visitor-keys\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-2.1.0.tgz\",\n      \"integrity\": \"sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.0.tgz\",\n      \"integrity\": \"sha512-HPpKPUBQcAsZOsHAFwTtIKcYlCje62XB7SEAcxjtmW6TD1WVpkS6i6/hOVtTZIl4zGj/mBqpFVGvaDneik+VoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/eslint/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/eslint/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/eslint/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/eslint/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/eslint/node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint/node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/eslint/node_modules/globals\": {\n      \"version\": \"13.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.20.0.tgz\",\n      \"integrity\": \"sha512-Qg5QtVkCy/kv3FUSlu4ukeZDVf9ee0iXLAUYX13gbR17bnejFTzr4iS9bY7kwCf1NztRNm1t91fjOiyx4CSwPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.20.2\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/eslint/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/eslint/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/eslint/node_modules/type-fest\": {\n      \"version\": \"0.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n      \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/espree\": {\n      \"version\": \"9.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.5.1.tgz\",\n      \"integrity\": \"sha512-5yxtHSZXRSW5pvv3hAlXM5+/Oswi1AUFqBmbibKb5s6bp3rGIDkyXU6xCoyuuLhijr4SFwPrXRoZjz0AZDN9tg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"acorn\": \"^8.8.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.0\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/esquery\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.5.0.tgz\",\n      \"integrity\": \"sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"estraverse\": \"^5.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/execa\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n      \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.3\",\n        \"get-stream\": \"^6.0.0\",\n        \"human-signals\": \"^2.1.0\",\n        \"is-stream\": \"^2.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^4.0.1\",\n        \"onetime\": \"^5.1.2\",\n        \"signal-exit\": \"^3.0.3\",\n        \"strip-final-newline\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n      }\n    },\n    \"node_modules/exit\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/exit/-/exit-0.1.2.tgz\",\n      \"integrity\": \"sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/expect\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/expect/-/expect-29.5.0.tgz\",\n      \"integrity\": \"sha512-yM7xqUrCO2JdpFo4XpM82t+PJBFybdqoQuJLDGeDX2ij8NZzqRHyu3Hp188/JX7SWqud+7t4MUdvcgGBICMHZg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/expect-utils\": \"^29.5.0\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"jest-matcher-utils\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-glob\": {\n      \"version\": \"3.2.12\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.12.tgz\",\n      \"integrity\": \"sha512-DVj4CQIYYow0BlaelwK1pHl5n5cRSJfM60UA0zK891sVInoPri2Ekj7+e1CT3/3qxXenpI+nBBmQAcJPJgaj4w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6.0\"\n      }\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true\n    },\n    \"node_modules/fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n      \"dev\": true\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.15.0.tgz\",\n      \"integrity\": \"sha512-wBrocU2LCXXa+lWBt8RoIRD89Fi8OdABODa/kEnyeyjS5aZO5/GNvI5sEINADqP/h8M29UHTHUb53sUu5Ihqdw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fb-watchman\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.2.tgz\",\n      \"integrity\": \"sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bser\": \"2.1.1\"\n      }\n    },\n    \"node_modules/file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flat-cache\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/flat-cache\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.0.4.tgz\",\n      \"integrity\": \"sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eDYZoZV5wdrev7P3Nwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"flatted\": \"^3.1.0\",\n        \"rimraf\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^10.12.0 || >=12.0.0\"\n      }\n    },\n    \"node_modules/flatted\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.2.7.tgz\",\n      \"integrity\": \"sha512-5nqDSxl8nn5BSNxyR3n4I6eDmbolI6WT+QqR547RwxQapgjQBmtktdP+HTBb/a/zLsbzERTONyUB5pefh5TtjQ==\",\n      \"dev\": true\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz\",\n      \"integrity\": \"sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.1.3\"\n      }\n    },\n    \"node_modules/fs-readdir-recursive\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-readdir-recursive/-/fs-readdir-recursive-1.1.0.tgz\",\n      \"integrity\": \"sha512-GNanXlVr2pf02+sPN40XN8HG+ePaNcvM0q5mZBd668Obwb0yD5GiUbZOFgwn8kGMY6I3mdyDJzieUy3PTYyTRA==\",\n      \"dev\": true\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n      \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\n      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\",\n      \"dev\": true\n    },\n    \"node_modules/function.prototype.name\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.5.tgz\",\n      \"integrity\": \"sha512-uN7m/BzVKQnCUF/iW8jYea67v++2u7m5UgENbHRtdDVclOUP+FMPlCNdmk0h/ysGyo2tavMJEDqJAkJdRa1vMA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\",\n        \"es-abstract\": \"^1.19.0\",\n        \"functions-have-names\": \"^1.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.0.tgz\",\n      \"integrity\": \"sha512-L049y6nFOuom5wGyRc3/gdTLO94dySVKRACj1RmJZBQXlbTMhtNIgkWkUHq+jYmZvKf14EW1EoJnnjbmoHij0Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\",\n        \"has\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-package-type\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz\",\n      \"integrity\": \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/get-symbol-description\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.0.tgz\",\n      \"integrity\": \"sha512-2EmdH1YvIQiZpltCNgkuiUnyukzxM/R6NDJX31Ke3BG1Nq5b0S2PhX59UKi9vZpPDQVdqn+1IcaAwnzTT5vCjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/globals\": {\n      \"version\": \"11.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\",\n      \"integrity\": \"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/globalthis\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/globalthis/-/globalthis-1.0.3.tgz\",\n      \"integrity\": \"sha512-sFdI5LyBiNTHjRd7cGPWapiHWMOXKyuBNX/cWJ3NfzrZQVa8GI/8cofCl74AOVqq9W5kNmguTIzJ/1s2gyI9wA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/globby\": {\n      \"version\": \"11.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n      \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.2.9\",\n        \"ignore\": \"^5.2.0\",\n        \"merge2\": \"^1.4.1\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/globby/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n      \"dev\": true\n    },\n    \"node_modules/grapheme-splitter\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/grapheme-splitter/-/grapheme-splitter-1.0.4.tgz\",\n      \"integrity\": \"sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==\",\n      \"dev\": true\n    },\n    \"node_modules/has\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\n      \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz\",\n      \"integrity\": \"sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz\",\n      \"integrity\": \"sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-7qE+iP+O+bgF9clE5+UoBFzE65mlBiVj3tKCrlNQ0Ogwm0BjpT/gK4SlLYDMybDh5I3TCTKnPPa0oMG7JDYrhg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz\",\n      \"integrity\": \"sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/html-escaper\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz\",\n      \"integrity\": \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\",\n      \"dev\": true\n    },\n    \"node_modules/human-signals\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n      \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.17.0\"\n      }\n    },\n    \"node_modules/husky\": {\n      \"version\": \"8.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/husky/-/husky-8.0.3.tgz\",\n      \"integrity\": \"sha512-+dQSyqPh4x1hlO1swXBiNb2HzTDN1I2IGLQx1GrBuiqFJfoMrnZWwVmatvSiO+Iz8fBUnf+lekwNo4c2LlXItg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"husky\": \"lib/bin.js\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/typicode\"\n      }\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"5.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.2.4.tgz\",\n      \"integrity\": \"sha512-MAb38BcSbH0eHNBxn7ql2NH/kX33OkB3lZ1BNdh7ENeRChHTYsTvWrMubiIAMNS2llXEEgZ1MUOBtXChP3kaFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/import-local\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-local/-/import-local-3.1.0.tgz\",\n      \"integrity\": \"sha512-ASB07uLtnDs1o6EHjKpX34BKYDSqnFerfTOJL2HvMqF70LnxpjkzDB8J44oT9pu4AMPkQwf8jl6szgvNd2tRIg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pkg-dir\": \"^4.2.0\",\n        \"resolve-cwd\": \"^3.0.0\"\n      },\n      \"bin\": {\n        \"import-local-fixture\": \"fixtures/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.5.tgz\",\n      \"integrity\": \"sha512-Y+R5hJrzs52QCG2laLn4udYVnxsfny9CpOhNhUvk/SSSVyF6T27FzRbF0sroPidSu3X8oEAkOn2K804mjpt6UQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"get-intrinsic\": \"^1.2.0\",\n        \"has\": \"^1.0.3\",\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/is-arguments\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz\",\n      \"integrity\": \"sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.2.tgz\",\n      \"integrity\": \"sha512-y+FyyR/w8vfIRq4eQcM1EYgSTnmHXPqaF+IgzgraytCFq5Xh8lllDVmAZolPJiZttZLeFSINPYMaEJ7/vWUa1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.0\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\",\n      \"dev\": true\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz\",\n      \"integrity\": \"sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz\",\n      \"integrity\": \"sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz\",\n      \"integrity\": \"sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n      \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-generator-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-map\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-map/-/is-map-2.0.2.tgz\",\n      \"integrity\": \"sha512-cOZFQQozTha1f4MxLFzlgKYPTyj26picdZTx82hbc/Xf4K/tZOOXSCkMvU4pKioRXGDLJRn0GM7Upe7kR721yg==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-negative-zero\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.2.tgz\",\n      \"integrity\": \"sha512-dqJvarLawXsFbNDeJW7zAz8ItJ9cd28YufuuFzh0G8pNHjJMnY08Dv7sYX2uF5UpQOwieAeOExEYAWWfu7ZZUA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz\",\n      \"integrity\": \"sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n      \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-set\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-set/-/is-set-2.0.2.tgz\",\n      \"integrity\": \"sha512-+2cnTEZeY5z/iXGbLhPrOAaK/Mau5k5eXq9j14CpRTftq0pAJu2MwVRSZhyZWBzx3o6X795Lz6Bpb6R0GKf37g==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-sqN2UDu1/0y6uvXyStCOzyhAjCSlHceFoMKJW8W9EU9cvic/QdsZ0kEU93HEy3IUEFZIiH/3w+AH/UQbPHNdhA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-stream\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz\",\n      \"integrity\": \"sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz\",\n      \"integrity\": \"sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-typed-array\": {\n      \"version\": \"1.1.10\",\n      \"resolved\": \"https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.10.tgz\",\n      \"integrity\": \"sha512-PJqgEHiWZvMpaFZ3uTc8kHPM4+4ADTlDniuQL7cU/UDA0Ql7F70yGfHph3cLNe+c9toaigv+DFzTJKhc2CtO6A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakmap\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.1.tgz\",\n      \"integrity\": \"sha512-NSBR4kH5oVj1Uwvv970ruUkCV7O1mzgVFO4/rev2cLRda9Tm9HrL70ZPut4rOHgY0FNrUu9BCbXA2sdQ+x0chA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakref\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz\",\n      \"integrity\": \"sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakset\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.2.tgz\",\n      \"integrity\": \"sha512-t2yVvttHkQktwnNNmBQ98AhENLdPUTDTE21uPqAQ0ARwQfGeQKRVS0NNurH7bTf7RrvcVn1OOge45CnBeHCSmg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz\",\n      \"integrity\": \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\",\n      \"dev\": true\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n      \"dev\": true\n    },\n    \"node_modules/istanbul-lib-coverage\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.0.tgz\",\n      \"integrity\": \"sha512-eOeJ5BHCmHYvQK7xt9GkdHuzuCGS1Y6g9Gvnx3Ym33fz/HpLRYxiS0wHNr+m/MBC8B647Xt608vCDEvhl9c6Mw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-5.2.1.tgz\",\n      \"integrity\": \"sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.12.3\",\n        \"@babel/parser\": \"^7.14.7\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-report\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz\",\n      \"integrity\": \"sha512-wcdi+uAKzfiGT2abPpKZ0hSU1rGQjUQnLvtY5MpQ7QCTahD3VODhcu4wcfY1YtkGaDD5yuydOLINXsfbus9ROw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"make-dir\": \"^3.0.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-report/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-report/node_modules/make-dir\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz\",\n      \"integrity\": \"sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"semver\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/istanbul-lib-report/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-source-maps\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.1.tgz\",\n      \"integrity\": \"sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"source-map\": \"^0.6.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-reports\": {\n      \"version\": \"3.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.5.tgz\",\n      \"integrity\": \"sha512-nUsEMa9pBt/NOHqbcbeJEgqIlY/K7rVWUX6Lql2orY5e9roQOthbR3vtY4zzf2orPELg80fnxxk9zUyPlgwD1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"html-escaper\": \"^2.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest\": {\n      \"version\": \"29.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/jest/-/jest-29.4.1.tgz\",\n      \"integrity\": \"sha512-cknimw7gAXPDOmj0QqztlxVtBVCw2lYY9CeIE5N6kD+kET1H4H79HSNISJmijb1HF+qk+G+ploJgiDi5k/fRlg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/core\": \"^29.4.1\",\n        \"@jest/types\": \"^29.4.1\",\n        \"import-local\": \"^3.0.2\",\n        \"jest-cli\": \"^29.4.1\"\n      },\n      \"bin\": {\n        \"jest\": \"bin/jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-changed-files\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-29.5.0.tgz\",\n      \"integrity\": \"sha512-IFG34IUMUaNBIxjQXF/iu7g6EcdMrGRRxaUSw92I/2g2YC6vCdTltl4nHvt7Ci5nSJwXIkCu8Ka1DKF+X7Z1Ag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"execa\": \"^5.0.0\",\n        \"p-limit\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-circus\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-circus/-/jest-circus-29.5.0.tgz\",\n      \"integrity\": \"sha512-gq/ongqeQKAplVxqJmbeUOJJKkW3dDNPY8PjhJ5G0lBRvu0e3EWGxGy5cI4LAGA7gV2UHCtWBI4EMXK8c9nQKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.5.0\",\n        \"@jest/expect\": \"^29.5.0\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"co\": \"^4.6.0\",\n        \"dedent\": \"^0.7.0\",\n        \"is-generator-fn\": \"^2.0.0\",\n        \"jest-each\": \"^29.5.0\",\n        \"jest-matcher-utils\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-runtime\": \"^29.5.0\",\n        \"jest-snapshot\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"p-limit\": \"^3.1.0\",\n        \"pretty-format\": \"^29.5.0\",\n        \"pure-rand\": \"^6.0.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-circus/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-cli\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-cli/-/jest-cli-29.5.0.tgz\",\n      \"integrity\": \"sha512-L1KcP1l4HtfwdxXNFCL5bmUbLQiKrakMUriBEcc1Vfz6gx31ORKdreuWvmQVBit+1ss9NNR3yxjwfwzZNdQXJw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/core\": \"^29.5.0\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"chalk\": \"^4.0.0\",\n        \"exit\": \"^0.1.2\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"import-local\": \"^3.0.2\",\n        \"jest-config\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-validate\": \"^29.5.0\",\n        \"prompts\": \"^2.0.1\",\n        \"yargs\": \"^17.3.1\"\n      },\n      \"bin\": {\n        \"jest\": \"bin/jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-cli/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-cli/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-cli/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-config\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-config/-/jest-config-29.5.0.tgz\",\n      \"integrity\": \"sha512-kvDUKBnNJPNBmFFOhDbm59iu1Fii1Q6SxyhXfvylq3UTHbg6o7j/g8k2dZyXWLvfdKB1vAPxNZnMgtKJcmu3kA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@jest/test-sequencer\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"babel-jest\": \"^29.5.0\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"deepmerge\": \"^4.2.2\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-circus\": \"^29.5.0\",\n        \"jest-environment-node\": \"^29.5.0\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-resolve\": \"^29.5.0\",\n        \"jest-runner\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-validate\": \"^29.5.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"parse-json\": \"^5.2.0\",\n        \"pretty-format\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"*\",\n        \"ts-node\": \">=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-config/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-config/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-diff\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-diff/-/jest-diff-29.5.0.tgz\",\n      \"integrity\": \"sha512-LtxijLLZBduXnHSniy0WMdaHjmQnt3g5sa16W4p0HqukYTTsyTW3GD1q41TyGl5YFXj/5B2U6dlh5FM1LIMgxw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"diff-sequences\": \"^29.4.3\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"pretty-format\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-diff/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-docblock\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-docblock/-/jest-docblock-29.4.3.tgz\",\n      \"integrity\": \"sha512-fzdTftThczeSD9nZ3fzA/4KkHtnmllawWrXO69vtI+L9WjEIuXWs4AmyME7lN5hU7dB0sHhuPfcKofRsUb/2Fg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"detect-newline\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-each\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-each/-/jest-each-29.5.0.tgz\",\n      \"integrity\": \"sha512-HM5kIJ1BTnVt+DQZ2ALp3rzXEl+g726csObrW/jpEGl+CDSSQpOJJX2KE/vEg8cxcMXdyEPu6U4QX5eruQv5hA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"jest-util\": \"^29.5.0\",\n        \"pretty-format\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-each/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-environment-node\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-29.5.0.tgz\",\n      \"integrity\": \"sha512-ExxuIK/+yQ+6PRGaHkKewYtg6hto2uGCgvKdb2nfJfKXgZ17DfXjvbZ+jA1Qt9A8EQSfPnt5FKIfnOO3u1h9qw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.5.0\",\n        \"@jest/fake-timers\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"jest-mock\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-get-type\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-get-type/-/jest-get-type-29.4.3.tgz\",\n      \"integrity\": \"sha512-J5Xez4nRRMjk8emnTpWrlkyb9pfRQQanDrvWHhsR1+VUfbwxi30eVcZFlcdGInRibU4G5LwHXpI7IRHU0CY+gg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-haste-map\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-29.5.0.tgz\",\n      \"integrity\": \"sha512-IspOPnnBro8YfVYSw6yDRKh/TiCdRngjxeacCps1cQ9cgVN6+10JUcuJ1EabrgYLOATsIAigxA0rLR9x/YlrSA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/graceful-fs\": \"^4.1.3\",\n        \"@types/node\": \"*\",\n        \"anymatch\": \"^3.0.3\",\n        \"fb-watchman\": \"^2.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-worker\": \"^29.5.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"walker\": \"^1.0.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"^2.3.2\"\n      }\n    },\n    \"node_modules/jest-leak-detector\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-29.5.0.tgz\",\n      \"integrity\": \"sha512-u9YdeeVnghBUtpN5mVxjID7KbkKE1QU4f6uUwuxiY0vYRi9BUCLKlPEZfDGR67ofdFmDz9oPAy2G92Ujrntmow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.4.3\",\n        \"pretty-format\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-29.5.0.tgz\",\n      \"integrity\": \"sha512-lecRtgm/rjIK0CQ7LPQwzCs2VwW6WAahA55YBuI+xqmhm7LAaxokSB8C97yJeYyT+HvQkH741StzpU41wohhWw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"jest-diff\": \"^29.5.0\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"pretty-format\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-matcher-utils/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-message-util\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-message-util/-/jest-message-util-29.5.0.tgz\",\n      \"integrity\": \"sha512-Kijeg9Dag6CKtIDA7O21zNTACqD5MD/8HfIV8pdD94vFyFuer52SigdC3IQMhab3vACxXMiFk+yMHNdbqtyTGA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.12.13\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/stack-utils\": \"^2.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-message-util/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-mock\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-mock/-/jest-mock-29.5.0.tgz\",\n      \"integrity\": \"sha512-GqOzvdWDE4fAV2bWQLQCkujxYWL7RxjCnj71b5VhDAGOevB3qj3Ovg26A5NI84ZpODxyzaozXLOh2NCgkbvyaw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"jest-util\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-pnp-resolver\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.3.tgz\",\n      \"integrity\": \"sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"peerDependencies\": {\n        \"jest-resolve\": \"*\"\n      },\n      \"peerDependenciesMeta\": {\n        \"jest-resolve\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-regex-util\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-29.4.3.tgz\",\n      \"integrity\": \"sha512-O4FglZaMmWXbGHSQInfXewIsd1LMn9p3ZXB/6r4FOkyhX2/iP/soMG98jGvk/A3HAN78+5VWcBGO0BJAPRh4kg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.5.0.tgz\",\n      \"integrity\": \"sha512-1TzxJ37FQq7J10jPtQjcc+MkCkE3GBpBecsSUWJ0qZNJpmg6m0D9/7II03yJulm3H/fvVjgqLh/k2eYg+ui52w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"jest-pnp-resolver\": \"^1.2.2\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-validate\": \"^29.5.0\",\n        \"resolve\": \"^1.20.0\",\n        \"resolve.exports\": \"^2.0.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve-dependencies\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-29.5.0.tgz\",\n      \"integrity\": \"sha512-sjV3GFr0hDJMBpYeUuGduP+YeCRbd7S/ck6IvL3kQ9cpySYKqcqhdLLC2rFwrcL7tz5vYibomBrsFYWkIGGjOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-snapshot\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-resolve/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-resolve/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-resolve/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-resolve/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-resolve/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-runner\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-runner/-/jest-runner-29.5.0.tgz\",\n      \"integrity\": \"sha512-m7b6ypERhFghJsslMLhydaXBiLf7+jXy8FwGRHO3BGV1mcQpPbwiqiKUR2zU2NJuNeMenJmlFZCsIqzJCTeGLQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/console\": \"^29.5.0\",\n        \"@jest/environment\": \"^29.5.0\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/transform\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"emittery\": \"^0.13.1\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-docblock\": \"^29.4.3\",\n        \"jest-environment-node\": \"^29.5.0\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"jest-leak-detector\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-resolve\": \"^29.5.0\",\n        \"jest-runtime\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-watcher\": \"^29.5.0\",\n        \"jest-worker\": \"^29.5.0\",\n        \"p-limit\": \"^3.1.0\",\n        \"source-map-support\": \"0.5.13\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-runner/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-runner/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-runner/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-runner/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-runner/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-runner/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-runtime\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-runtime/-/jest-runtime-29.5.0.tgz\",\n      \"integrity\": \"sha512-1Hr6Hh7bAgXQP+pln3homOiEZtCDZFqwmle7Ew2j8OlbkIu6uE3Y/etJQG8MLQs3Zy90xrp2C0BRrtPHG4zryw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.5.0\",\n        \"@jest/fake-timers\": \"^29.5.0\",\n        \"@jest/globals\": \"^29.5.0\",\n        \"@jest/source-map\": \"^29.4.3\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/transform\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"cjs-module-lexer\": \"^1.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-mock\": \"^29.5.0\",\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-resolve\": \"^29.5.0\",\n        \"jest-snapshot\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-bom\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-runtime/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-snapshot\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-29.5.0.tgz\",\n      \"integrity\": \"sha512-x7Wolra5V0tt3wRs3/ts3S6ciSQVypgGQlJpz2rsdQYoUKxMxPNaoHMGJN6qAuPJqS+2iQ1ZUn5kl7HCyls84g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@babel/generator\": \"^7.7.2\",\n        \"@babel/plugin-syntax-jsx\": \"^7.7.2\",\n        \"@babel/plugin-syntax-typescript\": \"^7.7.2\",\n        \"@babel/traverse\": \"^7.7.2\",\n        \"@babel/types\": \"^7.3.3\",\n        \"@jest/expect-utils\": \"^29.5.0\",\n        \"@jest/transform\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/babel__traverse\": \"^7.0.6\",\n        \"@types/prettier\": \"^2.1.5\",\n        \"babel-preset-current-node-syntax\": \"^1.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"expect\": \"^29.5.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-diff\": \"^29.5.0\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"jest-matcher-utils\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"natural-compare\": \"^1.4.0\",\n        \"pretty-format\": \"^29.5.0\",\n        \"semver\": \"^7.3.5\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-snapshot/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/semver\": {\n      \"version\": \"7.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.8.tgz\",\n      \"integrity\": \"sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-util\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-util/-/jest-util-29.5.0.tgz\",\n      \"integrity\": \"sha512-RYMgG/MTadOr5t8KdhejfvUU82MxsCu5MF6KuDUHl+NuwzUt+Sm6jJWxTJVrDR1j5M/gJVCPKQEpWXY+yIQ6lQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"picomatch\": \"^2.2.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-util/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-util/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-util/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-util/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-util/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-util/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-validate\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-validate/-/jest-validate-29.5.0.tgz\",\n      \"integrity\": \"sha512-pC26etNIi+y3HV8A+tUGr/lph9B18GnzSRAkPaaZJIE1eFdiYm6/CewuiJQ8/RlfHd1u/8Ioi8/sJ+CmbA+zAQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"camelcase\": \"^6.2.0\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"leven\": \"^3.1.0\",\n        \"pretty-format\": \"^29.5.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/camelcase\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-validate/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-watcher\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-watcher/-/jest-watcher-29.5.0.tgz\",\n      \"integrity\": \"sha512-KmTojKcapuqYrKDpRwfqcQ3zjMlwu27SYext9pt4GlF5FUgB+7XE1mcCnSm6a4uUpFyQIkb6ZhzZvHl+jiBCiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.0.0\",\n        \"emittery\": \"^0.13.1\",\n        \"jest-util\": \"^29.5.0\",\n        \"string-length\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-watcher/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-watcher/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-watcher/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/jest-watcher/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-watcher/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-watcher/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-worker\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-worker/-/jest-worker-29.5.0.tgz\",\n      \"integrity\": \"sha512-NcrQnevGoSp4b5kg+akIpthoAFHxPBcb5P6mYPY0fUNT+sSvmtu6jlkEle3anczUKIKEbMxFimk9oTP/tpIPgA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\",\n        \"jest-util\": \"^29.5.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"supports-color\": \"^8.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-worker/node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/jest-worker/node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/js-sdsl\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-sdsl/-/js-sdsl-4.4.0.tgz\",\n      \"integrity\": \"sha512-FfVSdx6pJ41Oa+CF7RDaFmTnCaFhua+SNYQX74riGOpl96x+2jQCqEfQ2bnXu/5DPCqlRuiqyvTJM0Qjz26IVg==\",\n      \"dev\": true,\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/js-sdsl\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n      \"dev\": true\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsesc\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz\",\n      \"integrity\": \"sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n      \"dev\": true\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n      \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n      \"dev\": true\n    },\n    \"node_modules/json-stable-stringify-without-jsonify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n      \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/jsx-ast-utils\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.3.tgz\",\n      \"integrity\": \"sha512-fYQHZTZ8jSfmWZ0iyzfwiU4WDX4HpHbMCZ3gPlWYiCl3BoeOTsqKBqnTVfH2rYT7eP5c3sVbeSPHnnJOaTrWiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-includes\": \"^3.1.5\",\n        \"object.assign\": \"^4.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=4.0\"\n      }\n    },\n    \"node_modules/kleur\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz\",\n      \"integrity\": \"sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/language-subtag-registry\": {\n      \"version\": \"0.3.22\",\n      \"resolved\": \"https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.22.tgz\",\n      \"integrity\": \"sha512-tN0MCzyWnoz/4nHS6uxdlFWoUZT7ABptwKPQ52Ea7URk6vll88bWBVhodtnlfEuCcKWNGoc+uGbw1cwa9IKh/w==\",\n      \"dev\": true\n    },\n    \"node_modules/language-tags\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/language-tags/-/language-tags-1.0.5.tgz\",\n      \"integrity\": \"sha512-qJhlO9cGXi6hBGKoxEG/sKZDAHD5Hnu9Hs4WbOY3pCWXDhw0N8x1NenNzm2EnNLkLkk7J2SdxAkDSbb6ftT+UQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"language-subtag-registry\": \"~0.3.2\"\n      }\n    },\n    \"node_modules/leven\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/leven/-/leven-3.1.0.tgz\",\n      \"integrity\": \"sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/levn\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n      \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"~0.4.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\",\n      \"dev\": true\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lodash.debounce\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz\",\n      \"integrity\": \"sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==\",\n      \"dev\": true\n    },\n    \"node_modules/lodash.merge\": {\n      \"version\": \"4.6.2\",\n      \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n      \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n      \"dev\": true\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n      \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/make-dir\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz\",\n      \"integrity\": \"sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pify\": \"^4.0.1\",\n        \"semver\": \"^5.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/make-dir/node_modules/semver\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.1.tgz\",\n      \"integrity\": \"sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/makeerror\": {\n      \"version\": \"1.0.12\",\n      \"resolved\": \"https://registry.npmjs.org/makeerror/-/makeerror-1.0.12.tgz\",\n      \"integrity\": \"sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tmpl\": \"1.0.5\"\n      }\n    },\n    \"node_modules/merge-stream\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n      \"dev\": true\n    },\n    \"node_modules/merge2\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz\",\n      \"integrity\": \"sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"braces\": \"^3.0.2\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n      \"dev\": true\n    },\n    \"node_modules/node-int64\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz\",\n      \"integrity\": \"sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==\",\n      \"dev\": true\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.10.tgz\",\n      \"integrity\": \"sha512-5GFldHPXVG/YZmFzJvKK2zDSzPKhEp0+ZR5SVaoSag9fsL5YgHbUHDfnG5494ISANDcK4KwPXAx2xqVEydmd7w==\",\n      \"dev\": true\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/npm-run-path\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.12.3\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.3.tgz\",\n      \"integrity\": \"sha512-geUvdk7c+eizMNUDkRpW1wJwgfOiOeHbxBR/hLXK1aT6zmVSO0jsQcs7fj6MGw89jC/cjGfLcNOrtMYtGqm81g==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-is\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/object-is/-/object-is-1.1.5.tgz\",\n      \"integrity\": \"sha512-3cyDsyHgtmi7I7DfSSI2LDp6SK2lwvtbg0p0R1e0RvTqF5ceGx+K2dfSjm1bKDMVCFEDAQvy+o8c6a7VujOddw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz\",\n      \"integrity\": \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/object.assign/-/object.assign-4.1.4.tgz\",\n      \"integrity\": \"sha512-1mxKf0e58bvyjSCtKYY4sRe9itRk3PJpquJOjeIkz885CczcI4IvJJDLPS72oowuSh+pBxUFROpX+TU++hxhZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"has-symbols\": \"^1.0.3\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.entries\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/object.entries/-/object.entries-1.1.6.tgz\",\n      \"integrity\": \"sha512-leTPzo4Zvg3pmbQ3rDK69Rl8GQvIqMWubrkxONG9/ojtFE2rD9fjMKfSI5BxW3osRH1m6VdzmqK8oAY9aT4x5w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.fromentries\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.6.tgz\",\n      \"integrity\": \"sha512-VciD13dswC4j1Xt5394WR4MzmAQmlgN72phd/riNp9vtD7tp4QQWJ0R4wvclXcafgcYK8veHRed2W6XeGBvcfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.hasown\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/object.hasown/-/object.hasown-1.1.2.tgz\",\n      \"integrity\": \"sha512-B5UIT3J1W+WuWIU55h0mjlwaqxiE5vYENJXIXZ4VFe05pNYrkKuK0U/6aFcb0pKywYJh7IhfoqUfKVmrJJHZHw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object.values\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/object.values/-/object.values-1.1.6.tgz\",\n      \"integrity\": \"sha512-FVVTkD1vENCsAcwNs9k6jea2uHC/X0+JcjG8YA60FN5CMaJmG95wT9jek/xX9nornqGRrBkKtzuAu2wuHpKqvw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-fn\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/optionator\": {\n      \"version\": \"0.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.1.tgz\",\n      \"integrity\": \"sha512-74RlY5FCnhq4jRxVUPKDaRwrVNXMqsGsiW6AJw4XK8hmtm10wC0ypZBLw5IIp85NZMr91+qd1RvvENwg7jjRFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-is\": \"^0.1.3\",\n        \"fast-levenshtein\": \"^2.0.6\",\n        \"levn\": \"^0.4.1\",\n        \"prelude-ls\": \"^1.2.1\",\n        \"type-check\": \"^0.4.0\",\n        \"word-wrap\": \"^1.2.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-try\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parent-module\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n      \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"callsites\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/parse-json\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n      \"integrity\": \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"error-ex\": \"^1.3.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"lines-and-columns\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"node_modules/path-type\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n      \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz\",\n      \"integrity\": \"sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==\",\n      \"dev\": true\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-4.0.1.tgz\",\n      \"integrity\": \"sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/pirates\": {\n      \"version\": \"4.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/pirates/-/pirates-4.0.5.tgz\",\n      \"integrity\": \"sha512-8V9+HQPupnaXMA23c5hvl69zXvTwTzyAYasnkb0Tts4XvO4CliqONMOnvlq26rkhLC3nWDFBJf73LU1e1VZLaQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/pkg-dir\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz\",\n      \"integrity\": \"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"find-up\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/find-up\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/locate-path\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/p-limit\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-try\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/pkg-dir/node_modules/p-locate\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/pngjs\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/pngjs/-/pngjs-7.0.0.tgz\",\n      \"integrity\": \"sha512-LKWqWJRhstyYo9pGvgor/ivk2w94eSjE3RGVuzLGlr3NmD8bf7RcYGze1mNdEHRP6TRP6rMuDHk5t44hnTRyow==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14.19.0\"\n      }\n    },\n    \"node_modules/prelude-ls\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n      \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/pretty-format\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.5.0.tgz\",\n      \"integrity\": \"sha512-V2mGkI31qdttvTFX7Mt4efOqHXqJWMu4/r66Xh3Z3BwZaPfPJgp6/gbwoujRpPUtfEF6AUUWx3Jim3GCw5g/Qw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.4.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/prompts\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz\",\n      \"integrity\": \"sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"kleur\": \"^3.0.3\",\n        \"sisteransi\": \"^1.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/prop-types/node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\",\n      \"dev\": true,\n      \"peer\": true\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz\",\n      \"integrity\": \"sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/pure-rand\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/pure-rand/-/pure-rand-6.0.1.tgz\",\n      \"integrity\": \"sha512-t+x1zEHDjBwkDGY5v5ApnZ/utcd4XYDiJsaQQoptTXgUXX95sDg1elCdJghzicm7n2mbCBJ3uYWr6M22SO19rg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://github.com/sponsors/dubzzz\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/fast-check\"\n        }\n      ]\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"18.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.2.0.tgz\",\n      \"integrity\": \"sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w==\",\n      \"dev\": true\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/regenerate\": {\n      \"version\": \"1.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz\",\n      \"integrity\": \"sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==\",\n      \"dev\": true\n    },\n    \"node_modules/regenerate-unicode-properties\": {\n      \"version\": \"10.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.1.0.tgz\",\n      \"integrity\": \"sha512-d1VudCLoIGitcU/hEg2QqvyGZQmdC0Lf8BqdOMXGFSvJP4bNV1+XqbPQeHHLD51Jh4QJJ225dlIFvY4Ly6MXmQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"regenerate\": \"^1.4.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.13.11\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz\",\n      \"integrity\": \"sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==\",\n      \"dev\": true\n    },\n    \"node_modules/regenerator-transform\": {\n      \"version\": \"0.15.1\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.15.1.tgz\",\n      \"integrity\": \"sha512-knzmNAcuyxV+gQCufkYcvOqX/qIIfHLv0u5x79kRxuGojfYVky1f15TzZEu2Avte8QGepvUNTnLskf8E6X6Vyg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.8.4\"\n      }\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.4.3.tgz\",\n      \"integrity\": \"sha512-fjggEOO3slI6Wvgjwflkc4NFRCTZAu5CnNfBd5qOMYhWdn67nJBBu34/TkD++eeFmd8C9r9jfXJ27+nSiRkSUA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\",\n        \"functions-have-names\": \"^1.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/regexpp\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/regexpp/-/regexpp-3.2.0.tgz\",\n      \"integrity\": \"sha512-pq2bWo9mVD43nbts2wGv17XLiNLya+GklZ8kaDLV2Z08gDCsGpnKn9BFMepvWuHCbyVvY7J5o5+BVvoQbmlJLg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/mysticatea\"\n      }\n    },\n    \"node_modules/regexpu-core\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/regexpu-core/-/regexpu-core-5.3.2.tgz\",\n      \"integrity\": \"sha512-RAM5FlZz+Lhmo7db9L298p2vHP5ZywrVXmVXpmAD9GuL5MPH6t9ROw1iA/wfHkQ76Qe7AaPF0nGuim96/IrQMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/regjsgen\": \"^0.8.0\",\n        \"regenerate\": \"^1.4.2\",\n        \"regenerate-unicode-properties\": \"^10.1.0\",\n        \"regjsparser\": \"^0.9.1\",\n        \"unicode-match-property-ecmascript\": \"^2.0.0\",\n        \"unicode-match-property-value-ecmascript\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/regjsparser\": {\n      \"version\": \"0.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/regjsparser/-/regjsparser-0.9.1.tgz\",\n      \"integrity\": \"sha512-dQUtn90WanSNl+7mQKcXAgZxvUe7Z0SqXlgzv0za4LwiUhyzBC58yQO3liFoUgu8GiJVInAhJjkj1N0EtQ5nkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jsesc\": \"~0.5.0\"\n      },\n      \"bin\": {\n        \"regjsparser\": \"bin/parser\"\n      }\n    },\n    \"node_modules/regjsparser/node_modules/jsesc\": {\n      \"version\": \"0.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz\",\n      \"integrity\": \"sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.2\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.2.tgz\",\n      \"integrity\": \"sha512-Sb+mjNHOULsBv818T40qSPeRiuWLyaGMa5ewydRLFimneixmVy2zdivRl+AF6jaYPC8ERxGDmFSiqui6SfPd+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.11.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-cwd\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz\",\n      \"integrity\": \"sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/resolve-cwd/node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n      \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/resolve.exports\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/resolve.exports/-/resolve.exports-2.0.2.tgz\",\n      \"integrity\": \"sha512-X2UW6Nw3n/aMgDVy+0rSqgHlv39WZAlZrXCdnbyEiKm17DSqHX4MmQMaST3FbeWR5FTuRcUwYAziZajji0Y7mg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz\",\n      \"integrity\": \"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rimraf\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\",\n      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.3\"\n      },\n      \"bin\": {\n        \"rimraf\": \"bin.js\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.0.tgz\",\n      \"integrity\": \"sha512-JBUUzyOgEwXQY1NuPtvcj/qcBDbDmEvWufhlnXZIm75DEHp+afM1r1ujJpJsV/gSM4t59tpDyPi1sd6ZaPFfsA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"is-regex\": \"^1.1.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz\",\n      \"integrity\": \"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\",\n      \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.0.2\",\n        \"object-inspect\": \"^1.9.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\",\n      \"dev\": true\n    },\n    \"node_modules/sisteransi\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz\",\n      \"integrity\": \"sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==\",\n      \"dev\": true\n    },\n    \"node_modules/slash\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-2.0.0.tgz\",\n      \"integrity\": \"sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-support\": {\n      \"version\": \"0.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.13.tgz\",\n      \"integrity\": \"sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"source-map\": \"^0.6.0\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n      \"integrity\": \"sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==\",\n      \"dev\": true\n    },\n    \"node_modules/stack-utils\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.6.tgz\",\n      \"integrity\": \"sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/stack-utils/node_modules/escape-string-regexp\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz\",\n      \"integrity\": \"sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/stop-iteration-iterator\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.0.0.tgz\",\n      \"integrity\": \"sha512-iCGQj+0l0HOdZ2AEeBADlsRC+vsnDsZsbdSiH1yNSjcfKM7fdpCMfqAL/dwF5BLiw/XhRft/Wax6zQbhq2BcjQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"internal-slot\": \"^1.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/string-length\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-length/-/string-length-4.0.2.tgz\",\n      \"integrity\": \"sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"char-regex\": \"^1.0.2\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/string.prototype.matchall\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.8.tgz\",\n      \"integrity\": \"sha512-6zOCOcJ+RJAQshcTvXPHoxoQGONa3e/Lqx90wUA+wEzX78sg5Bo+1tQo4N0pohS0erG9qtCqJDjNCQBjeWVxyg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.3\",\n        \"regexp.prototype.flags\": \"^1.4.3\",\n        \"side-channel\": \"^1.0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trim\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.7.tgz\",\n      \"integrity\": \"sha512-p6TmeT1T3411M8Cgg9wBTMRtY2q9+PNy9EV1i2lIXUN/btt763oIfxwN3RR8VU6wHX8j/1CFy0L+YuThm6bgOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimend\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.6.tgz\",\n      \"integrity\": \"sha512-JySq+4mrPf9EsDBEDYMOb/lM7XQLulwg5R/m1r0PXEFqrV0qHvl58sdTilSXtKOflCsK2E8jxf+GKC0T07RWwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/string.prototype.trimstart\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.6.tgz\",\n      \"integrity\": \"sha512-omqjMDaY92pbn5HOX7f9IccLA+U1tA9GvtU4JrodiXFfYB7jPzzHpRzpglLAjtUV6bB557zwClJezTqnAiYnQA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz\",\n      \"integrity\": \"sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-final-newline\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz\",\n      \"integrity\": \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/test-exclude\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz\",\n      \"integrity\": \"sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"glob\": \"^7.1.4\",\n        \"minimatch\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/text-table\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n      \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n      \"dev\": true\n    },\n    \"node_modules/tmpl\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/tmpl/-/tmpl-1.0.5.tgz\",\n      \"integrity\": \"sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==\",\n      \"dev\": true\n    },\n    \"node_modules/to-fast-properties\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz\",\n      \"integrity\": \"sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/tsconfig-paths\": {\n      \"version\": \"3.14.2\",\n      \"resolved\": \"https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.14.2.tgz\",\n      \"integrity\": \"sha512-o/9iXgCYc5L/JxCHPe3Hvh8Q/2xm5Z+p18PESBU6Ff33695QnCHBEjcytY2q19ua7Mbl/DavtBOLq+oG0RCL+g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/json5\": \"^0.0.29\",\n        \"json5\": \"^1.0.2\",\n        \"minimist\": \"^1.2.6\",\n        \"strip-bom\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/tsconfig-paths/node_modules/json5\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.2.tgz\",\n      \"integrity\": \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimist\": \"^1.2.0\"\n      },\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      }\n    },\n    \"node_modules/tsconfig-paths/node_modules/strip-bom\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz\",\n      \"integrity\": \"sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/tslib\": {\n      \"version\": \"1.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz\",\n      \"integrity\": \"sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/tsutils\": {\n      \"version\": \"3.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/tsutils/-/tsutils-3.21.0.tgz\",\n      \"integrity\": \"sha512-mHKK3iUXL+3UF6xL5k0PEhKRUBKPBCv/+RkEOpjRWxxx27KKRBmmA60A9pgOUvMi8GKhRMPEmjBRPzs2W7O1OA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tslib\": \"^1.8.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      },\n      \"peerDependencies\": {\n        \"typescript\": \">=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta\"\n      }\n    },\n    \"node_modules/type-check\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n      \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"prelude-ls\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/type-detect\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz\",\n      \"integrity\": \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typed-array-length\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.4.tgz\",\n      \"integrity\": \"sha512-KjZypGq+I/H7HI5HlOoGHkWUUGq+Q0TPhQurLbyrVrvnKTBgzLhIJ7j6J/XTQOi0d1RjyZ0wdas8bKs2p0x3Ng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"is-typed-array\": \"^1.1.9\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.0.4.tgz\",\n      \"integrity\": \"sha512-cW9T5W9xY37cc+jfEnaUvX91foxtHkza3Nw3wkoF4sSlKn0MONdkdEndig/qPBWXNkmplh3NzayQzCiHM4/hqw==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=12.20\"\n      }\n    },\n    \"node_modules/unbox-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-bigints\": \"^1.0.2\",\n        \"has-symbols\": \"^1.0.3\",\n        \"which-boxed-primitive\": \"^1.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/unicode-canonical-property-names-ecmascript\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.0.tgz\",\n      \"integrity\": \"sha512-yY5PpDlfVIU5+y/BSCxAJRBIS1Zc2dDG3Ujq+sR0U+JjUevW2JhocOF+soROYDSaAezOzOKuyyixhD6mBknSmQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-match-property-ecmascript\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz\",\n      \"integrity\": \"sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"unicode-canonical-property-names-ecmascript\": \"^2.0.0\",\n        \"unicode-property-aliases-ecmascript\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-match-property-value-ecmascript\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.1.0.tgz\",\n      \"integrity\": \"sha512-qxkjQt6qjg/mYscYMC0XKRn3Rh0wFPlfxB0xkt9CfyTvpX1Ra0+rAmdX2QyAobptSEvuy4RtpPRui6XkV+8wjA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/unicode-property-aliases-ecmascript\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.1.0.tgz\",\n      \"integrity\": \"sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.0.10.tgz\",\n      \"integrity\": \"sha512-OztqDenkfFkbSG+tRxBeAnCVPckDBcvibKd35yDONx6OU8N7sqgwc7rCbkJ/WcYtVRZ4ba68d6byhC21GFh7sQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        }\n      ],\n      \"dependencies\": {\n        \"escalade\": \"^3.1.1\",\n        \"picocolors\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"browserslist-lint\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \">= 4.21.0\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/v8-to-istanbul\": {\n      \"version\": \"9.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-9.1.0.tgz\",\n      \"integrity\": \"sha512-6z3GW9x8G1gd+JIIgQQQxXuiJtCXeAjp6RaPEPLv62mH3iPHPxV6W3robxtCzNErRo6ZwTmzWhsbNvjyEBKzKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.12\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.1\",\n        \"convert-source-map\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.12.0\"\n      }\n    },\n    \"node_modules/walker\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/walker/-/walker-1.0.8.tgz\",\n      \"integrity\": \"sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"makeerror\": \"1.0.12\"\n      }\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz\",\n      \"integrity\": \"sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-bigint\": \"^1.0.1\",\n        \"is-boolean-object\": \"^1.1.0\",\n        \"is-number-object\": \"^1.0.4\",\n        \"is-string\": \"^1.0.5\",\n        \"is-symbol\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-collection\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/which-collection/-/which-collection-1.0.1.tgz\",\n      \"integrity\": \"sha512-W8xeTUwaln8i3K/cY1nGXzdnVZlidBcagyNFtBdD5kxnb4TvGKR7FfSIS3mYpwWS1QUCutfKz8IY8RjftB0+1A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-map\": \"^2.0.1\",\n        \"is-set\": \"^2.0.1\",\n        \"is-weakmap\": \"^2.0.1\",\n        \"is-weakset\": \"^2.0.1\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.9\",\n      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.9.tgz\",\n      \"integrity\": \"sha512-w9c4xkx6mPidwp7180ckYWfMmvxpjlZuIudNtDf4N/tTAUB8VJbX25qZoAsrtGuYNnGw3pa0AXgbGKRB8/EceA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"for-each\": \"^0.3.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has-tostringtag\": \"^1.0.0\",\n        \"is-typed-array\": \"^1.1.10\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/word-wrap\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz\",\n      \"integrity\": \"sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/wrap-ansi/node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/write-file-atomic\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.2.tgz\",\n      \"integrity\": \"sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"imurmurhash\": \"^0.1.4\",\n        \"signal-exit\": \"^3.0.7\"\n      },\n      \"engines\": {\n        \"node\": \"^12.13.0 || ^14.15.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n      \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\",\n      \"dev\": true\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"17.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.1.tgz\",\n      \"integrity\": \"sha512-cwiTb08Xuv5fqF4AovYacTFNxk62th7LKJ6BL9IGUpTJrWoU7/7WdQGTP2SjKf1dUNBGzDd28p/Yfs/GI6JrLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    }\n  },\n  \"dependencies\": {\n    \"@ampproject/remapping\": {\n      \"version\": \"2.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.2.1.tgz\",\n      \"integrity\": \"sha512-lFMjJTrFL3j7L9yBxwYfCq2k6qqwHyzuUl/XBnif78PWTJYyL/dfowQHWE3sp6U6ZzqWiiIZnpTMO96zhkjwtg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      }\n    },\n    \"@babel/cli\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/cli/-/cli-7.20.7.tgz\",\n      \"integrity\": \"sha512-WylgcELHB66WwQqItxNILsMlaTd8/SO6SgTTjMp4uCI7P4QyH1r3nqgFmO3BfM4AtfniHgFMH3EpYFj/zynBkQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.8\",\n        \"@nicolo-ribaudo/chokidar-2\": \"2.1.8-no-fsevents.3\",\n        \"chokidar\": \"^3.4.0\",\n        \"commander\": \"^4.0.1\",\n        \"convert-source-map\": \"^1.1.0\",\n        \"fs-readdir-recursive\": \"^1.1.0\",\n        \"glob\": \"^7.2.0\",\n        \"make-dir\": \"^2.1.0\",\n        \"slash\": \"^2.0.0\"\n      }\n    },\n    \"@babel/code-frame\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.21.4.tgz\",\n      \"integrity\": \"sha512-LYvhNKfwWSPpocw8GI7gpK2nq3HSDuEPC/uSYaALSJu9xjsalaaYFOq0Pwt5KmVqwEbZlDu81aLXwBOmD/Fv9g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/highlight\": \"^7.18.6\"\n      }\n    },\n    \"@babel/compat-data\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.21.4.tgz\",\n      \"integrity\": \"sha512-/DYyDpeCfaVinT40FPGdkkb+lYSKvsVuMjDAG7jPOWWiM1ibOaB9CXJAlc4d1QpP/U2q2P9jbrSlClKSErd55g==\",\n      \"dev\": true\n    },\n    \"@babel/core\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.21.4.tgz\",\n      \"integrity\": \"sha512-qt/YV149Jman/6AfmlxJ04LMIu8bMoyl3RB91yTFrxQmgbrSvQMy7cI8Q62FHx1t8wJ8B5fu0UDoLwHAhUo1QA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.21.4\",\n        \"@babel/generator\": \"^7.21.4\",\n        \"@babel/helper-compilation-targets\": \"^7.21.4\",\n        \"@babel/helper-module-transforms\": \"^7.21.2\",\n        \"@babel/helpers\": \"^7.21.0\",\n        \"@babel/parser\": \"^7.21.4\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.4\",\n        \"@babel/types\": \"^7.21.4\",\n        \"convert-source-map\": \"^1.7.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.2\",\n        \"semver\": \"^6.3.0\"\n      }\n    },\n    \"@babel/generator\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.21.4.tgz\",\n      \"integrity\": \"sha512-NieM3pVIYW2SwGzKoqfPrQsf4xGs9M9AIG3ThppsSRmO+m7eQhmI6amajKMUeIO37wFfsvnvcxQFx6x6iqxDnA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.21.4\",\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"@jridgewell/trace-mapping\": \"^0.3.17\",\n        \"jsesc\": \"^2.5.1\"\n      }\n    },\n    \"@babel/helper-annotate-as-pure\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.18.6.tgz\",\n      \"integrity\": \"sha512-duORpUiYrEpzKIop6iNbjnwKLAKnJ47csTyRACyEmWj0QdUrm5aqNJGHSSEQSUAvNW0ojX0dOmK9dZduvkfeXA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-builder-binary-assignment-operator-visitor\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.18.9.tgz\",\n      \"integrity\": \"sha512-yFQ0YCHoIqarl8BCRwBL8ulYUaZpz3bNsA7oFepAzee+8/+ImtADXNOmO5vJvsPff3qi+hvpkY/NYBTrBQgdNw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-explode-assignable-expression\": \"^7.18.6\",\n        \"@babel/types\": \"^7.18.9\"\n      }\n    },\n    \"@babel/helper-compilation-targets\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.21.4.tgz\",\n      \"integrity\": \"sha512-Fa0tTuOXZ1iL8IeDFUWCzjZcn+sJGd9RZdH9esYVjEejGmzf+FFYQpMi/kZUk2kPy/q1H3/GPw7np8qar/stfg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.21.4\",\n        \"@babel/helper-validator-option\": \"^7.21.0\",\n        \"browserslist\": \"^4.21.3\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.0\"\n      }\n    },\n    \"@babel/helper-create-class-features-plugin\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.21.4.tgz\",\n      \"integrity\": \"sha512-46QrX2CQlaFRF4TkwfTt6nJD7IHq8539cCL7SDpqWSDeJKY1xylKKY5F/33mJhLZ3mFvKv2gGrVS6NkyF6qs+Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-create-regexp-features-plugin\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.21.4.tgz\",\n      \"integrity\": \"sha512-M00OuhU+0GyZ5iBBN9czjugzWrEq2vDpf/zCYHxxf93ul/Q5rv+a5h+/+0WnI1AebHNVtl5bFV0qsJoH23DbfA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"regexpu-core\": \"^5.3.1\"\n      }\n    },\n    \"@babel/helper-define-polyfill-provider\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.3.3.tgz\",\n      \"integrity\": \"sha512-z5aQKU4IzbqCC1XH0nAqfsFLMVSo22SBKUc0BxGrLkolTdPTructy0ToNnlO2zA4j9Q/7pjMZf0DSY+DSTYzww==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-compilation-targets\": \"^7.17.7\",\n        \"@babel/helper-plugin-utils\": \"^7.16.7\",\n        \"debug\": \"^4.1.1\",\n        \"lodash.debounce\": \"^4.0.8\",\n        \"resolve\": \"^1.14.2\",\n        \"semver\": \"^6.1.2\"\n      }\n    },\n    \"@babel/helper-environment-visitor\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz\",\n      \"integrity\": \"sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg==\",\n      \"dev\": true\n    },\n    \"@babel/helper-explode-assignable-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-eyAYAsQmB80jNfg4baAtLeWAQHfHFiR483rzFK+BhETlGZaQC9bsfrugfXDCbRHLQbIA7U5NxhhOxN7p/dWIcg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-function-name\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.21.0.tgz\",\n      \"integrity\": \"sha512-HfK1aMRanKHpxemaY2gqBmL04iAPOPRj7DxtNbiDOrJK+gdwkiNRVpCpUJYbUT+aZyemKN8brqTOxzCaG6ExRg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/types\": \"^7.21.0\"\n      }\n    },\n    \"@babel/helper-hoist-variables\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz\",\n      \"integrity\": \"sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-member-expression-to-functions\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.21.0.tgz\",\n      \"integrity\": \"sha512-Muu8cdZwNN6mRRNG6lAYErJ5X3bRevgYR2O8wN0yn7jJSnGDu6eG59RfT29JHxGUovyfrh6Pj0XzmR7drNVL3Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.21.0\"\n      }\n    },\n    \"@babel/helper-module-imports\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.21.4.tgz\",\n      \"integrity\": \"sha512-orajc5T2PsRYUN3ZryCEFeMDYwyw09c/pZeaQEZPH0MpKzSvn3e0uXsDBu3k03VI+9DBiRo+l22BfKTpKwa/Wg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.21.4\"\n      }\n    },\n    \"@babel/helper-module-transforms\": {\n      \"version\": \"7.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.21.2.tgz\",\n      \"integrity\": \"sha512-79yj2AR4U/Oqq/WOV7Lx6hUjau1Zfo4cI+JLAVYeMV5XIlbOhmjEk5ulbTc9fMpmlojzZHkUUxAiK+UKn+hNQQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-simple-access\": \"^7.20.2\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.2\",\n        \"@babel/types\": \"^7.21.2\"\n      }\n    },\n    \"@babel/helper-optimise-call-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-HP59oD9/fEHQkdcbgFCnbmgH5vIQTJbxh2yf+CdM89/glUNnuzr87Q8GIjGEnOktTROemO0Pe0iPAYbqZuOUiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-plugin-utils\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.20.2.tgz\",\n      \"integrity\": \"sha512-8RvlJG2mj4huQ4pZ+rU9lqKi9ZKiRmuvGuM2HlWmkmgOhbs6zEAw6IEiJ5cQqGbDzGZOhwuOQNtZMi/ENLjZoQ==\",\n      \"dev\": true\n    },\n    \"@babel/helper-remap-async-to-generator\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.18.9.tgz\",\n      \"integrity\": \"sha512-dI7q50YKd8BAv3VEfgg7PS7yD3Rtbi2J1XMXaalXO0W0164hYLnh8zpjRS0mte9MfVp/tltvr/cfdXPvJr1opA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-wrap-function\": \"^7.18.9\",\n        \"@babel/types\": \"^7.18.9\"\n      }\n    },\n    \"@babel/helper-replace-supers\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.20.7.tgz\",\n      \"integrity\": \"sha512-vujDMtB6LVfNW13jhlCrp48QNslK6JXi7lQG736HVbHz/mbf4Dc7tIRh1Xf5C0rF7BP8iiSxGMCmY6Ci1ven3A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-member-expression-to-functions\": \"^7.20.7\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\"\n      }\n    },\n    \"@babel/helper-simple-access\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.20.2.tgz\",\n      \"integrity\": \"sha512-+0woI/WPq59IrqDYbVGfshjT5Dmk/nnbdpcF8SnMhhXObpTq2KNBdLFRFrkVdbDOyUmHBCxzm5FHV1rACIkIbA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.20.2\"\n      }\n    },\n    \"@babel/helper-skip-transparent-expression-wrappers\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.20.0.tgz\",\n      \"integrity\": \"sha512-5y1JYeNKfvnT8sZcK9DVRtpTbGiomYIHviSP3OQWmDPU3DeH4a1ZlT/N2lyQ5P8egjcRaT/Y9aNqUxK0WsnIIg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.20.0\"\n      }\n    },\n    \"@babel/helper-split-export-declaration\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz\",\n      \"integrity\": \"sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.18.6\"\n      }\n    },\n    \"@babel/helper-string-parser\": {\n      \"version\": \"7.19.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.19.4.tgz\",\n      \"integrity\": \"sha512-nHtDoQcuqFmwYNYPz3Rah5ph2p8PFeFCsZk9A/48dPc/rGocJ5J3hAAZ7pb76VWX3fZKu+uEr/FhH5jLx7umrw==\",\n      \"dev\": true\n    },\n    \"@babel/helper-validator-identifier\": {\n      \"version\": \"7.19.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz\",\n      \"integrity\": \"sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w==\",\n      \"dev\": true\n    },\n    \"@babel/helper-validator-option\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.21.0.tgz\",\n      \"integrity\": \"sha512-rmL/B8/f0mKS2baE9ZpyTcTavvEuWhTTW8amjzXNvYG4AwBsqTLikfXsEofsJEfKHf+HQVQbFOHy6o+4cnC/fQ==\",\n      \"dev\": true\n    },\n    \"@babel/helper-wrap-function\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.20.5.tgz\",\n      \"integrity\": \"sha512-bYMxIWK5mh+TgXGVqAtnu5Yn1un+v8DDZtqyzKRLUzrh70Eal2O3aZ7aPYiMADO4uKlkzOiRiZ6GX5q3qxvW9Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-function-name\": \"^7.19.0\",\n        \"@babel/template\": \"^7.18.10\",\n        \"@babel/traverse\": \"^7.20.5\",\n        \"@babel/types\": \"^7.20.5\"\n      }\n    },\n    \"@babel/helpers\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.21.0.tgz\",\n      \"integrity\": \"sha512-XXve0CBtOW0pd7MRzzmoyuSj0e3SEzj8pgyFxnTT1NJZL38BD1MK7yYrm8yefRPIDvNNe14xR4FdbHwpInD4rA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/template\": \"^7.20.7\",\n        \"@babel/traverse\": \"^7.21.0\",\n        \"@babel/types\": \"^7.21.0\"\n      }\n    },\n    \"@babel/highlight\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz\",\n      \"integrity\": \"sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-validator-identifier\": \"^7.18.6\",\n        \"chalk\": \"^2.0.0\",\n        \"js-tokens\": \"^4.0.0\"\n      }\n    },\n    \"@babel/parser\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.21.4.tgz\",\n      \"integrity\": \"sha512-alVJj7k7zIxqBZ7BTRhz0IqJFxW1VJbm6N8JbcYhQ186df9ZBPbZBmWSqAMXwHGsCJdYks7z/voa3ibiS5bCIw==\",\n      \"dev\": true\n    },\n    \"@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.18.6.tgz\",\n      \"integrity\": \"sha512-Dgxsyg54Fx1d4Nge8UnvTrED63vrwOdPmyvPzlNN/boaliRP54pm3pGzZD1SJUwrBA+Cs/xdG8kXX6Mn/RfISQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.20.7.tgz\",\n      \"integrity\": \"sha512-sbr9+wNE5aXMBBFBICk01tt7sBf2Oc9ikRFEcem/ZORup9IMUdNhW7/wVLEbbtlWOsEubJet46mHAL2C8+2jKQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.20.7\"\n      }\n    },\n    \"@babel/plugin-proposal-async-generator-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-xMbiLsn/8RK7Wq7VeVytytS2L6qE69bXPB10YCmMdDZbKF4okCqY74pI/jJQ/8U0b/F6NrT2+14b8/P9/3AMGA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\"\n      }\n    },\n    \"@babel/plugin-proposal-class-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-cumfXOF0+nzZrrN8Rf0t7M+tF6sZc7vhQwYQck9q1/5w2OExlD+b4v4RpMJFaV1Z7WcDRgO6FqvxqxGlwo+RHQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-proposal-class-static-block\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-class-static-block/-/plugin-proposal-class-static-block-7.21.0.tgz\",\n      \"integrity\": \"sha512-XP5G9MWNUskFuP30IfFSEFB0Z6HzLIUcjYM4bYOPHXl7eiJ9HFv8tWj6TXTN5QODiEhDZAeI4hLok2iHFFV4hw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-proposal-dynamic-import\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.18.6.tgz\",\n      \"integrity\": \"sha512-1auuwmK+Rz13SJj36R+jqFPMJWyKEDd7lLSdOj4oJK0UTgGueSAtkrCvz9ewmgyU/P941Rv2fQwZJN8s6QruXw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-export-namespace-from\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.18.9.tgz\",\n      \"integrity\": \"sha512-k1NtHyOMvlDDFeb9G5PhUXuGj8m/wiwojgQVEhJ/fsVsMCpLyOP4h0uGEjYJKrRI+EVPlb5Jk+Gt9P97lOGwtA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-json-strings\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.18.6.tgz\",\n      \"integrity\": \"sha512-lr1peyn9kOdbYc0xr0OdHTZ5FMqS6Di+H0Fz2I/JwMzGmzJETNeOFq2pBySw6X/KFL5EWDjlJuMsUGRFb8fQgQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-logical-assignment-operators\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.20.7.tgz\",\n      \"integrity\": \"sha512-y7C7cZgpMIjWlKE5T7eJwp+tnRYM89HmRvWM5EQuB5BoHEONjmQ8lSNmBUwOyy/GFRsohJED51YBF79hE1djug==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-proposal-nullish-coalescing-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wQxQzxYeJqHcfppzBDnm1yAY0jSRkUXR2z8RePZYrKwMKgMlE8+Z6LUno+bd6LvbGh8Gltvy74+9pIYkr+XkKA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-numeric-separator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.18.6.tgz\",\n      \"integrity\": \"sha512-ozlZFogPqoLm8WBr5Z8UckIoE4YQ5KESVcNudyXOR8uqIkliTEgJ3RoketfG6pmzLdeZF0H/wjE9/cCEitBl7Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-proposal-object-rest-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-d2S98yCiLxDVmBmE8UjGcfPvNEUbA1U5q5WxaWFUGRzJSVAZqm5W6MbPct0jxnegUZ0niLeNX+IOzEs7wYg9Dg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.20.5\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.7\"\n      }\n    },\n    \"@babel/plugin-proposal-optional-catch-binding\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.18.6.tgz\",\n      \"integrity\": \"sha512-Q40HEhs9DJQyaZfUjjn6vE8Cv4GmMHCYuMGIWUnlxH6400VGxOuwWsPt4FxXxJkC/5eOzgn0z21M9gMT4MOhbw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-optional-chaining\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.21.0.tgz\",\n      \"integrity\": \"sha512-p4zeefM72gpmEe2fkUr/OnOXpWEf8nAgk7ZYVqqfFiyIG7oFfVZcCrU64hWn5xp4tQ9LkV4bTIa5rD0KANpKNA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-proposal-private-methods\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz\",\n      \"integrity\": \"sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-create-class-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-proposal-private-property-in-object\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0.tgz\",\n      \"integrity\": \"sha512-ha4zfehbJjc5MmXBlHec1igel5TJXXLDDRbuJ4+XT2TJcyD9/V1919BA8gMvsdHcNMBy4WBUBiRb3nw/EQUtBw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-create-class-features-plugin\": \"^7.21.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-proposal-unicode-property-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-2BShG/d5yoZyXZfVePH91urL5wTG6ASZU9M4o03lKK8u8UW1y08OMttBSOADTcJrnPMpvDXRG3G8fyLh4ovs8w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-syntax-async-generators\": {\n      \"version\": \"7.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz\",\n      \"integrity\": \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-bigint\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz\",\n      \"integrity\": \"sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-class-properties\": {\n      \"version\": \"7.12.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n      \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n      }\n    },\n    \"@babel/plugin-syntax-class-static-block\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n      \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-syntax-dynamic-import\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz\",\n      \"integrity\": \"sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-export-namespace-from\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz\",\n      \"integrity\": \"sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.3\"\n      }\n    },\n    \"@babel/plugin-syntax-import-assertions\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.20.0.tgz\",\n      \"integrity\": \"sha512-IUh1vakzNoWalR8ch/areW7qFopR2AEw03JlG7BbrDqmQ4X3q9uuipQwSGrUn7oGiemKjtSLDhNtQHzMHr1JdQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.19.0\"\n      }\n    },\n    \"@babel/plugin-syntax-import-meta\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz\",\n      \"integrity\": \"sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-syntax-json-strings\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz\",\n      \"integrity\": \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-jsx\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.21.4.tgz\",\n      \"integrity\": \"sha512-5hewiLct5OKyh6PLKEYaFclcqtIgCb6bmELouxjF6up5q3Sov7rOayW4RwhbaBL0dit8rA80GNfY+UuDp2mBbQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-numeric-separator\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n      \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      }\n    },\n    \"@babel/plugin-syntax-object-rest-spread\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n      \"integrity\": \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-optional-catch-binding\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n      \"integrity\": \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      }\n    },\n    \"@babel/plugin-syntax-private-property-in-object\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n      \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-syntax-top-level-await\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n      \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      }\n    },\n    \"@babel/plugin-syntax-typescript\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.21.4.tgz\",\n      \"integrity\": \"sha512-xz0D39NvhQn4t4RNsHmDnnsaQizIlUkdtYvLs8La1BlfjQ6JEwxkJGeqJMW2tAXx+q6H+WFuUTXNdYVpEya0YA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-arrow-functions\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.20.7.tgz\",\n      \"integrity\": \"sha512-3poA5E7dzDomxj9WXWwuD6A5F3kc7VXwIJO+E+J8qtDtS+pXPAhrgEyh+9GBwBgPq1Z+bB+/JD60lp5jsN7JPQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-async-to-generator\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.20.7.tgz\",\n      \"integrity\": \"sha512-Uo5gwHPT9vgnSXQxqGtpdufUiWp96gk7yiP4Mp5bm1QMkEmLXBO7PAGYbKoJ6DhAwiNkcHFBol/x5zZZkL/t0Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-module-imports\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-remap-async-to-generator\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-block-scoped-functions\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.18.6.tgz\",\n      \"integrity\": \"sha512-ExUcOqpPWnliRcPqves5HJcJOvHvIIWfuS4sroBUenPuMdmW+SMHDakmtS7qOo13sVppmUijqeTv7qqGsvURpQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-block-scoping\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.21.0.tgz\",\n      \"integrity\": \"sha512-Mdrbunoh9SxwFZapeHVrwFmri16+oYotcZysSzhNIVDwIAb1UV+kvnxULSYq9J3/q5MDG+4X6w8QVgD1zhBXNQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-classes\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.21.0.tgz\",\n      \"integrity\": \"sha512-RZhbYTCEUAe6ntPehC4hlslPWosNHDox+vAs4On/mCLRLfoDVHf6hVEd7kuxr1RnHwJmxFfUM3cZiZRmPxJPXQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-annotate-as-pure\": \"^7.18.6\",\n        \"@babel/helper-compilation-targets\": \"^7.20.7\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-optimise-call-expression\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-replace-supers\": \"^7.20.7\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"globals\": \"^11.1.0\"\n      }\n    },\n    \"@babel/plugin-transform-computed-properties\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.20.7.tgz\",\n      \"integrity\": \"sha512-Lz7MvBK6DTjElHAmfu6bfANzKcxpyNPeYBGEafyA6E5HtRpjpZwU+u7Qrgz/2OR0z+5TvKYbPdphfSaAcZBrYQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/template\": \"^7.20.7\"\n      }\n    },\n    \"@babel/plugin-transform-destructuring\": {\n      \"version\": \"7.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.21.3.tgz\",\n      \"integrity\": \"sha512-bp6hwMFzuiE4HqYEyoGJ/V2LeIWn+hLVKc4pnj++E5XQptwhtcGmSayM029d/j2X1bPKGTlsyPwAubuU22KhMA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-dotall-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-6S3jpun1eEbAxq7TdjLotAsl4WpQI9DxfkycRcKrjhQYzU87qpXdknpBg/e+TdcMehqGnLFi7tnFUBR02Vq6wg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-duplicate-keys\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.18.9.tgz\",\n      \"integrity\": \"sha512-d2bmXCtZXYc59/0SanQKbiWINadaJXqtvIQIzd4+hNwkWBgyCd5F/2t1kXoUdvPMrxzPvhK6EMQRROxsue+mfw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-exponentiation-operator\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.18.6.tgz\",\n      \"integrity\": \"sha512-wzEtc0+2c88FVR34aQmiz56dxEkxr2g8DQb/KfaFa1JYXOFVsbhvAonFN6PwVWj++fKmku8NP80plJ5Et4wqHw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-builder-binary-assignment-operator-visitor\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-for-of\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.21.0.tgz\",\n      \"integrity\": \"sha512-LlUYlydgDkKpIY7mcBWvyPPmMcOphEyYA27Ef4xpbh1IiDNLr0kZsos2nf92vz3IccvJI25QUwp86Eo5s6HmBQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-function-name\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.18.9.tgz\",\n      \"integrity\": \"sha512-WvIBoRPaJQ5yVHzcnJFor7oS5Ls0PYixlTYE63lCj2RtdQEl15M68FXQlxnG6wdraJIXRdR7KI+hQ7q/9QjrCQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-compilation-targets\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.18.9\",\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-IFQDSRoTPnrAIrI5zoZv73IFeZu2dhu6irxQjY9rNjTT53VmKg9fenjvoiOWOkJ6mm4jKVPtdMzBY98Fp4Z4cg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-member-expression-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-qSF1ihLGO3q+/g48k85tUjD033C29TNTVB2paCwZPVmOsjn9pClvYYrM2VeJpBY2bcNkuny0YUyTNRyRxJ54KA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-modules-amd\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.20.11.tgz\",\n      \"integrity\": \"sha512-NuzCt5IIYOW0O30UvqktzHYR2ud5bOWbY0yaxWZ6G+aFzOMJvrs5YHNikrbdaT15+KNO31nPOy5Fim3ku6Zb5g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-modules-commonjs\": {\n      \"version\": \"7.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.21.2.tgz\",\n      \"integrity\": \"sha512-Cln+Yy04Gxua7iPdj6nOV96smLGjpElir5YwzF0LBPKoPlLDNJePNlrGGaybAJkd0zKRnOVXOgizSqPYMNYkzA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-module-transforms\": \"^7.21.2\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-simple-access\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-modules-systemjs\": {\n      \"version\": \"7.20.11\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.20.11.tgz\",\n      \"integrity\": \"sha512-vVu5g9BPQKSFEmvt2TA4Da5N+QVS66EX21d8uoOihC+OCpUoGvzVsXeqFdtAEfVa5BILAeFt+U7yVmLbQnAJmw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-hoist-variables\": \"^7.18.6\",\n        \"@babel/helper-module-transforms\": \"^7.20.11\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\"\n      }\n    },\n    \"@babel/plugin-transform-modules-umd\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.18.6.tgz\",\n      \"integrity\": \"sha512-dcegErExVeXcRqNtkRU/z8WlBLnvD4MRnHgNs3MytRO1Mn1sHRyhbcpYbVMGclAqOjdW+9cfkdZno9dFdfKLfQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-module-transforms\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-named-capturing-groups-regex\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.20.5.tgz\",\n      \"integrity\": \"sha512-mOW4tTzi5iTLnw+78iEq3gr8Aoq4WNRGpmSlrogqaiCBoR1HFhpU4JkpQFOHfeYx3ReVIFWOQJS4aZBRvuZ6mA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.20.5\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-new-target\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.18.6.tgz\",\n      \"integrity\": \"sha512-DjwFA/9Iu3Z+vrAn+8pBUGcjhxKguSMlsFqeCKbhb9BAV756v0krzVK04CRDi/4aqmk8BsHb4a/gFcaA5joXRw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-object-super\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.18.6.tgz\",\n      \"integrity\": \"sha512-uvGz6zk+pZoS1aTZrOvrbj6Pp/kK2mp45t2B+bTDre2UgsZZ8EZLSJtUg7m/no0zOJUWgFONpB7Zv9W2tSaFlA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\",\n        \"@babel/helper-replace-supers\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-parameters\": {\n      \"version\": \"7.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.21.3.tgz\",\n      \"integrity\": \"sha512-Wxc+TvppQG9xWFYatvCGPvZ6+SIUxQ2ZdiBP+PHYMIjnPXD+uThCshaz4NZOnODAtBjjcVQQ/3OKs9LW28purQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\"\n      }\n    },\n    \"@babel/plugin-transform-property-literals\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.18.6.tgz\",\n      \"integrity\": \"sha512-cYcs6qlgafTud3PAzrrRNbQtfpQ8+y/+M5tKmksS9+M1ckbH6kzY8MrexEM9mcA6JDsukE19iIRvAyYl463sMg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-regenerator\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.20.5.tgz\",\n      \"integrity\": \"sha512-kW/oO7HPBtntbsahzQ0qSE3tFvkFwnbozz3NWFhLGqH75vLEg+sCGngLlhVkePlCs3Jv0dBBHDzCHxNiFAQKCQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"regenerator-transform\": \"^0.15.1\"\n      }\n    },\n    \"@babel/plugin-transform-reserved-words\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.18.6.tgz\",\n      \"integrity\": \"sha512-oX/4MyMoypzHjFrT1CdivfKZ+XvIPMFXwwxHp/r0Ddy2Vuomt4HDFGmft1TAY2yiTKiNSsh3kjBAzcM8kSdsjA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-shorthand-properties\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.18.6.tgz\",\n      \"integrity\": \"sha512-eCLXXJqv8okzg86ywZJbRn19YJHU4XUa55oz2wbHhaQVn/MM+XhukiT7SYqp/7o00dg52Rj51Ny+Ecw4oyoygw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-spread\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.20.7.tgz\",\n      \"integrity\": \"sha512-ewBbHQ+1U/VnH1fxltbJqDeWBU1oNLG8Dj11uIv3xVf7nrQu0bPGe5Rf716r7K5Qz+SqtAOVswoVunoiBtGhxw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.20.0\"\n      }\n    },\n    \"@babel/plugin-transform-sticky-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-kfiDrDQ+PBsQDO85yj1icueWMfGfJFKN1KCkndygtu/C9+XUfydLC8Iv5UYJqRwy4zk8EcplRxEOeLyjq1gm6Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/plugin-transform-template-literals\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.18.9.tgz\",\n      \"integrity\": \"sha512-S8cOWfT82gTezpYOiVaGHrCbhlHgKhQt8XH5ES46P2XWmX92yisoZywf5km75wv5sYcXDUCLMmMxOLCtthDgMA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-typeof-symbol\": {\n      \"version\": \"7.18.9\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.18.9.tgz\",\n      \"integrity\": \"sha512-SRfwTtF11G2aemAZWivL7PD+C9z52v9EvMqH9BuYbabyPuKUvSWks3oCg6041pT925L4zVFqaVBeECwsmlguEw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-unicode-escapes\": {\n      \"version\": \"7.18.10\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.18.10.tgz\",\n      \"integrity\": \"sha512-kKAdAI+YzPgGY/ftStBFXTI1LZFju38rYThnfMykS+IXy8BVx+res7s2fxf1l8I35DV2T97ezo6+SGrXz6B3iQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.18.9\"\n      }\n    },\n    \"@babel/plugin-transform-unicode-regex\": {\n      \"version\": \"7.18.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.18.6.tgz\",\n      \"integrity\": \"sha512-gE7A6Lt7YLnNOL3Pb9BNeZvi+d8l7tcRrG4+pwJjK9hD2xX4mEvjlQW60G9EEmfXVYRPv9VRQcyegIVHCql/AA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-create-regexp-features-plugin\": \"^7.18.6\",\n        \"@babel/helper-plugin-utils\": \"^7.18.6\"\n      }\n    },\n    \"@babel/preset-env\": {\n      \"version\": \"7.20.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.20.2.tgz\",\n      \"integrity\": \"sha512-1G0efQEWR1EHkKvKHqbG+IN/QdgwfByUpM5V5QroDzGV2t3S/WXNQd693cHiHTlCFMpr9B6FkPFXDA2lQcKoDg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.20.1\",\n        \"@babel/helper-compilation-targets\": \"^7.20.0\",\n        \"@babel/helper-plugin-utils\": \"^7.20.2\",\n        \"@babel/helper-validator-option\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression\": \"^7.18.6\",\n        \"@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-async-generator-functions\": \"^7.20.1\",\n        \"@babel/plugin-proposal-class-properties\": \"^7.18.6\",\n        \"@babel/plugin-proposal-class-static-block\": \"^7.18.6\",\n        \"@babel/plugin-proposal-dynamic-import\": \"^7.18.6\",\n        \"@babel/plugin-proposal-export-namespace-from\": \"^7.18.9\",\n        \"@babel/plugin-proposal-json-strings\": \"^7.18.6\",\n        \"@babel/plugin-proposal-logical-assignment-operators\": \"^7.18.9\",\n        \"@babel/plugin-proposal-nullish-coalescing-operator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-numeric-separator\": \"^7.18.6\",\n        \"@babel/plugin-proposal-object-rest-spread\": \"^7.20.2\",\n        \"@babel/plugin-proposal-optional-catch-binding\": \"^7.18.6\",\n        \"@babel/plugin-proposal-optional-chaining\": \"^7.18.9\",\n        \"@babel/plugin-proposal-private-methods\": \"^7.18.6\",\n        \"@babel/plugin-proposal-private-property-in-object\": \"^7.18.6\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.18.6\",\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n        \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n        \"@babel/plugin-syntax-export-namespace-from\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-assertions\": \"^7.20.0\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\",\n        \"@babel/plugin-transform-arrow-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-async-to-generator\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoped-functions\": \"^7.18.6\",\n        \"@babel/plugin-transform-block-scoping\": \"^7.20.2\",\n        \"@babel/plugin-transform-classes\": \"^7.20.2\",\n        \"@babel/plugin-transform-computed-properties\": \"^7.18.9\",\n        \"@babel/plugin-transform-destructuring\": \"^7.20.2\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-duplicate-keys\": \"^7.18.9\",\n        \"@babel/plugin-transform-exponentiation-operator\": \"^7.18.6\",\n        \"@babel/plugin-transform-for-of\": \"^7.18.8\",\n        \"@babel/plugin-transform-function-name\": \"^7.18.9\",\n        \"@babel/plugin-transform-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-member-expression-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-modules-amd\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-commonjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-systemjs\": \"^7.19.6\",\n        \"@babel/plugin-transform-modules-umd\": \"^7.18.6\",\n        \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.19.1\",\n        \"@babel/plugin-transform-new-target\": \"^7.18.6\",\n        \"@babel/plugin-transform-object-super\": \"^7.18.6\",\n        \"@babel/plugin-transform-parameters\": \"^7.20.1\",\n        \"@babel/plugin-transform-property-literals\": \"^7.18.6\",\n        \"@babel/plugin-transform-regenerator\": \"^7.18.6\",\n        \"@babel/plugin-transform-reserved-words\": \"^7.18.6\",\n        \"@babel/plugin-transform-shorthand-properties\": \"^7.18.6\",\n        \"@babel/plugin-transform-spread\": \"^7.19.0\",\n        \"@babel/plugin-transform-sticky-regex\": \"^7.18.6\",\n        \"@babel/plugin-transform-template-literals\": \"^7.18.9\",\n        \"@babel/plugin-transform-typeof-symbol\": \"^7.18.9\",\n        \"@babel/plugin-transform-unicode-escapes\": \"^7.18.10\",\n        \"@babel/plugin-transform-unicode-regex\": \"^7.18.6\",\n        \"@babel/preset-modules\": \"^0.1.5\",\n        \"@babel/types\": \"^7.20.2\",\n        \"babel-plugin-polyfill-corejs2\": \"^0.3.3\",\n        \"babel-plugin-polyfill-corejs3\": \"^0.6.0\",\n        \"babel-plugin-polyfill-regenerator\": \"^0.4.1\",\n        \"core-js-compat\": \"^3.25.1\",\n        \"semver\": \"^6.3.0\"\n      }\n    },\n    \"@babel/preset-modules\": {\n      \"version\": \"0.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.5.tgz\",\n      \"integrity\": \"sha512-A57th6YRG7oR3cq/yt/Y84MvGgE0eJG2F1JLhKuyG+jFxEgrd/HAMJatiFtmOiZurz+0DkrvbheCLaV5f2JfjA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@babel/plugin-proposal-unicode-property-regex\": \"^7.4.4\",\n        \"@babel/plugin-transform-dotall-regex\": \"^7.4.4\",\n        \"@babel/types\": \"^7.4.4\",\n        \"esutils\": \"^2.0.2\"\n      }\n    },\n    \"@babel/regjsgen\": {\n      \"version\": \"0.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/regjsgen/-/regjsgen-0.8.0.tgz\",\n      \"integrity\": \"sha512-x/rqGMdzj+fWZvCOYForTghzbtqPDZ5gPwaoNGHdgDfF2QA/XZbCBp4Moo5scrkAMPhB7z26XM/AaHuIJdgauA==\",\n      \"dev\": true\n    },\n    \"@babel/runtime\": {\n      \"version\": \"7.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.21.0.tgz\",\n      \"integrity\": \"sha512-xwII0//EObnq89Ji5AKYQaRYiW/nZ3llSv29d49IuxPhKbtJoLP+9QUUZ4nVragQVtaVGeZrpB+ZtG/Pdy/POw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"regenerator-runtime\": \"^0.13.11\"\n      }\n    },\n    \"@babel/template\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.20.7.tgz\",\n      \"integrity\": \"sha512-8SegXApWe6VoNw0r9JHpSteLKTpTiLZ4rMlGIm9JQ18KiCtyQiAMEazujAHrUS5flrcqYZa75ukev3P6QmUwUw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/code-frame\": \"^7.18.6\",\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\"\n      }\n    },\n    \"@babel/traverse\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.21.4.tgz\",\n      \"integrity\": \"sha512-eyKrRHKdyZxqDm+fV1iqL9UAHMoIg0nDaGqfIOd8rKH17m5snv7Gn4qgjBoFfLz9APvjFU/ICT00NVCv1Epp8Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/code-frame\": \"^7.21.4\",\n        \"@babel/generator\": \"^7.21.4\",\n        \"@babel/helper-environment-visitor\": \"^7.18.9\",\n        \"@babel/helper-function-name\": \"^7.21.0\",\n        \"@babel/helper-hoist-variables\": \"^7.18.6\",\n        \"@babel/helper-split-export-declaration\": \"^7.18.6\",\n        \"@babel/parser\": \"^7.21.4\",\n        \"@babel/types\": \"^7.21.4\",\n        \"debug\": \"^4.1.0\",\n        \"globals\": \"^11.1.0\"\n      }\n    },\n    \"@babel/types\": {\n      \"version\": \"7.21.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.21.4.tgz\",\n      \"integrity\": \"sha512-rU2oY501qDxE8Pyo7i/Orqma4ziCOrby0/9mvbDUGEfvZjb279Nk9k19e2fiCxHbRRpY2ZyrgW1eq22mvmOIzA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-string-parser\": \"^7.19.4\",\n        \"@babel/helper-validator-identifier\": \"^7.19.1\",\n        \"to-fast-properties\": \"^2.0.0\"\n      }\n    },\n    \"@bcoe/v8-coverage\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz\",\n      \"integrity\": \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\",\n      \"dev\": true\n    },\n    \"@eslint-community/eslint-utils\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz\",\n      \"integrity\": \"sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      }\n    },\n    \"@eslint/eslintrc\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.4.1.tgz\",\n      \"integrity\": \"sha512-XXrH9Uarn0stsyldqDYq8r++mROmWRI1xKMXa640Bb//SY1+ECYX6VzT6Lcx5frD0V30XieqJ0oX9I2Xj5aoMA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^9.4.0\",\n        \"globals\": \"^13.19.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"dependencies\": {\n        \"globals\": {\n          \"version\": \"13.20.0\",\n          \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.20.0.tgz\",\n          \"integrity\": \"sha512-Qg5QtVkCy/kv3FUSlu4ukeZDVf9ee0iXLAUYX13gbR17bnejFTzr4iS9bY7kwCf1NztRNm1t91fjOiyx4CSwPQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"type-fest\": \"^0.20.2\"\n          }\n        },\n        \"type-fest\": {\n          \"version\": \"0.20.2\",\n          \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n          \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@humanwhocodes/config-array\": {\n      \"version\": \"0.11.8\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.8.tgz\",\n      \"integrity\": \"sha512-UybHIJzJnR5Qc/MsD9Kr+RpO2h+/P1GhOwdiLPXK5TWk5sgTdu88bTD9UP+CKbPPh5Rni1u0GjAdYQLemG8g+g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@humanwhocodes/object-schema\": \"^1.2.1\",\n        \"debug\": \"^4.1.1\",\n        \"minimatch\": \"^3.0.5\"\n      }\n    },\n    \"@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"dev\": true\n    },\n    \"@humanwhocodes/object-schema\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-1.2.1.tgz\",\n      \"integrity\": \"sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA==\",\n      \"dev\": true\n    },\n    \"@istanbuljs/load-nyc-config\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz\",\n      \"integrity\": \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"camelcase\": \"^5.3.1\",\n        \"find-up\": \"^4.1.0\",\n        \"get-package-type\": \"^0.1.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"dependencies\": {\n        \"argparse\": {\n          \"version\": \"1.0.10\",\n          \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n          \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"sprintf-js\": \"~1.0.2\"\n          }\n        },\n        \"find-up\": {\n          \"version\": \"4.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n          \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"locate-path\": \"^5.0.0\",\n            \"path-exists\": \"^4.0.0\"\n          }\n        },\n        \"js-yaml\": {\n          \"version\": \"3.14.1\",\n          \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n          \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n          \"dev\": true,\n          \"requires\": {\n            \"argparse\": \"^1.0.7\",\n            \"esprima\": \"^4.0.0\"\n          }\n        },\n        \"locate-path\": {\n          \"version\": \"5.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n          \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n          \"dev\": true,\n          \"requires\": {\n            \"p-locate\": \"^4.1.0\"\n          }\n        },\n        \"p-limit\": {\n          \"version\": \"2.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n          \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n          \"dev\": true,\n          \"requires\": {\n            \"p-try\": \"^2.0.0\"\n          }\n        },\n        \"p-locate\": {\n          \"version\": \"4.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n          \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n          \"dev\": true,\n          \"requires\": {\n            \"p-limit\": \"^2.2.0\"\n          }\n        },\n        \"resolve-from\": {\n          \"version\": \"5.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n          \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\",\n      \"dev\": true\n    },\n    \"@jest/console\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/console/-/console-29.5.0.tgz\",\n      \"integrity\": \"sha512-NEpkObxPwyw/XxZVLPmAGKE89IQRp4puc6IQRPru6JKd1M3fW9v1xM1AnzIJE65hbCkzQAdnL8P47e9hzhiYLQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-convert\": \"^2.0.1\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"4.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n          \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^4.1.0\",\n            \"supports-color\": \"^7.1.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-name\": \"~1.1.4\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n          \"dev\": true\n        },\n        \"has-flag\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n          \"dev\": true\n        },\n        \"slash\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n          \"dev\": true\n        },\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"@jest/core\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/core/-/core-29.5.0.tgz\",\n      \"integrity\": \"sha512-28UzQc7ulUrOQw1IsN/kv1QES3q2kkbl/wGslyhAclqZ/8cMdB5M68BffkIdSJgKBUt50d3hbwJ92XESlE7LiQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/console\": \"^29.5.0\",\n        \"@jest/reporters\": \"^29.5.0\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/transform\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"exit\": \"^0.1.2\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-changed-files\": \"^29.5.0\",\n        \"jest-config\": \"^29.5.0\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-resolve\": \"^29.5.0\",\n        \"jest-resolve-dependencies\": \"^29.5.0\",\n        \"jest-runner\": \"^29.5.0\",\n        \"jest-runtime\": \"^29.5.0\",\n        \"jest-snapshot\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-validate\": \"^29.5.0\",\n        \"jest-watcher\": \"^29.5.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-convert\": \"^2.0.1\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"4.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n          \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^4.1.0\",\n            \"supports-color\": \"^7.1.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-name\": \"~1.1.4\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n          \"dev\": true\n        },\n        \"has-flag\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n          \"dev\": true\n        },\n        \"slash\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n          \"dev\": true\n        },\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"@jest/environment\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/environment/-/environment-29.5.0.tgz\",\n      \"integrity\": \"sha512-5FXw2+wD29YU1d4I2htpRX7jYnAyTRjP2CsXQdo9SAM8g3ifxWPSV0HnClSn71xwctr0U3oZIIH+dtbfmnbXVQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/fake-timers\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/node\": \"*\",\n        \"jest-mock\": \"^29.5.0\"\n      }\n    },\n    \"@jest/expect\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect/-/expect-29.5.0.tgz\",\n      \"integrity\": \"sha512-PueDR2HGihN3ciUNGr4uelropW7rqUfTiOn+8u0leg/42UhblPxHkfoh0Ruu3I9Y1962P3u2DY4+h7GVTSVU6g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"expect\": \"^29.5.0\",\n        \"jest-snapshot\": \"^29.5.0\"\n      }\n    },\n    \"@jest/expect-utils\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-29.5.0.tgz\",\n      \"integrity\": \"sha512-fmKzsidoXQT2KwnrwE0SQq3uj8Z763vzR8LnLBwC2qYWEFpjX8daRsk6rHUM1QvNlEW/UJXNXm59ztmJJWs2Mg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"jest-get-type\": \"^29.4.3\"\n      }\n    },\n    \"@jest/fake-timers\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-29.5.0.tgz\",\n      \"integrity\": \"sha512-9ARvuAAQcBwDAqOnglWq2zwNIRUDtk/SCkp/ToGEhFv5r86K21l+VEs0qNTaXtyiY0lEePl3kylijSYJQqdbDg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/types\": \"^29.5.0\",\n        \"@sinonjs/fake-timers\": \"^10.0.2\",\n        \"@types/node\": \"*\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-mock\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\"\n      }\n    },\n    \"@jest/globals\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/globals/-/globals-29.5.0.tgz\",\n      \"integrity\": \"sha512-S02y0qMWGihdzNbUiqSAiKSpSozSuHX5UYc7QbnHP+D9Lyw8DgGGCinrN9uSuHPeKgSSzvPom2q1nAtBvUsvPQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/environment\": \"^29.5.0\",\n        \"@jest/expect\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"jest-mock\": \"^29.5.0\"\n      }\n    },\n    \"@jest/reporters\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/reporters/-/reporters-29.5.0.tgz\",\n      \"integrity\": \"sha512-D05STXqj/M8bP9hQNSICtPqz97u7ffGzZu+9XLucXhkOFBqKcXe04JLZOgIekOxdb73MAoBUFnqvf7MCpKk5OA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@bcoe/v8-coverage\": \"^0.2.3\",\n        \"@jest/console\": \"^29.5.0\",\n        \"@jest/test-result\": \"^29.5.0\",\n        \"@jest/transform\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.15\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\",\n        \"exit\": \"^0.1.2\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"istanbul-lib-instrument\": \"^5.1.0\",\n        \"istanbul-lib-report\": \"^3.0.0\",\n        \"istanbul-lib-source-maps\": \"^4.0.0\",\n        \"istanbul-reports\": \"^3.1.3\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\",\n        \"jest-worker\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\",\n        \"string-length\": \"^4.0.1\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"v8-to-istanbul\": \"^9.0.1\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-convert\": \"^2.0.1\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"4.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n          \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^4.1.0\",\n            \"supports-color\": \"^7.1.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-name\": \"~1.1.4\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n          \"dev\": true\n        },\n        \"has-flag\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n          \"dev\": true\n        },\n        \"slash\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n          \"dev\": true\n        },\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"@jest/schemas\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.4.3.tgz\",\n      \"integrity\": \"sha512-VLYKXQmtmuEz6IxJsrZwzG9NvtkQsWNnWMsKxqWNu3+CnfzJQhp0WDDKWLVV9hLKr0l3SLLFRqcYHjhtyuDVxg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@sinclair/typebox\": \"^0.25.16\"\n      }\n    },\n    \"@jest/source-map\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/source-map/-/source-map-29.4.3.tgz\",\n      \"integrity\": \"sha512-qyt/mb6rLyd9j1jUts4EQncvS6Yy3PM9HghnNv86QBlV+zdL2inCdK1tuVlL+J+lpiw2BI67qXOrX3UurBqQ1w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.15\",\n        \"callsites\": \"^3.0.0\",\n        \"graceful-fs\": \"^4.2.9\"\n      }\n    },\n    \"@jest/test-result\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/test-result/-/test-result-29.5.0.tgz\",\n      \"integrity\": \"sha512-fGl4rfitnbfLsrfx1uUpDEESS7zM8JdgZgOCQuxQvL1Sn/I6ijeAVQWGfXI9zb1i9Mzo495cIpVZhA0yr60PkQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/console\": \"^29.5.0\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\"\n      }\n    },\n    \"@jest/test-sequencer\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-29.5.0.tgz\",\n      \"integrity\": \"sha512-yPafQEcKjkSfDXyvtgiV4pevSeyuA6MQr6ZIdVkWJly9vkqjnFfcfhRQqpD5whjoU8EORki752xQmjaqoFjzMQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/test-result\": \"^29.5.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"slash\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@jest/transform\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/transform/-/transform-29.5.0.tgz\",\n      \"integrity\": \"sha512-8vbeZWqLJOvHaDfeMuoHITGKSz5qWc9u04lnWrQE3VyuSw604PzQM824ZeX9XSjUCeDiE3GuxZe5UKa8J61NQw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@jest/types\": \"^29.5.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.15\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"chalk\": \"^4.0.0\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"fast-json-stable-stringify\": \"^2.1.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.5.0\",\n        \"jest-regex-util\": \"^29.4.3\",\n        \"jest-util\": \"^29.5.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pirates\": \"^4.0.4\",\n        \"slash\": \"^3.0.0\",\n        \"write-file-atomic\": \"^4.0.2\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-convert\": \"^2.0.1\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"4.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n          \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^4.1.0\",\n            \"supports-color\": \"^7.1.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-name\": \"~1.1.4\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n          \"dev\": true\n        },\n        \"convert-source-map\": {\n          \"version\": \"2.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n          \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\",\n          \"dev\": true\n        },\n        \"has-flag\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n          \"dev\": true\n        },\n        \"slash\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n          \"dev\": true\n        },\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"@jest/types\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/types/-/types-29.5.0.tgz\",\n      \"integrity\": \"sha512-qbu7kN6czmVRc3xWFQcAN03RAUamgppVUdXrvl1Wr3jlNF93o9mJbGcDWrwGB6ht44u7efB1qCFgVQmca24Uog==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/schemas\": \"^29.4.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"@types/istanbul-reports\": \"^3.0.0\",\n        \"@types/node\": \"*\",\n        \"@types/yargs\": \"^17.0.8\",\n        \"chalk\": \"^4.0.0\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-convert\": \"^2.0.1\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"4.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n          \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^4.1.0\",\n            \"supports-color\": \"^7.1.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-name\": \"~1.1.4\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n          \"dev\": true\n        },\n        \"has-flag\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n          \"dev\": true\n        },\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz\",\n      \"integrity\": \"sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jridgewell/set-array\": \"^1.0.1\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n        \"@jridgewell/trace-mapping\": \"^0.3.9\"\n      }\n    },\n    \"@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz\",\n      \"integrity\": \"sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==\",\n      \"dev\": true\n    },\n    \"@jridgewell/set-array\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz\",\n      \"integrity\": \"sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==\",\n      \"dev\": true\n    },\n    \"@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.4.15\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\n      \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\n      \"dev\": true\n    },\n    \"@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.18\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.18.tgz\",\n      \"integrity\": \"sha512-w+niJYzMHdd7USdiH2U6869nqhD2nbfZXND5Yp93qIbEmnDNk7PD48o+YchRVpzMU7M6jVCbenTR7PA1FLQ9pA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jridgewell/resolve-uri\": \"3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"1.4.14\"\n      },\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": {\n          \"version\": \"1.4.14\",\n          \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz\",\n          \"integrity\": \"sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@nicolo-ribaudo/chokidar-2\": {\n      \"version\": \"2.1.8-no-fsevents.3\",\n      \"resolved\": \"https://registry.npmjs.org/@nicolo-ribaudo/chokidar-2/-/chokidar-2-2.1.8-no-fsevents.3.tgz\",\n      \"integrity\": \"sha512-s88O1aVtXftvp5bCPB7WnmXc5IwOZZ7YPuwNPt+GtOOXpPvad1LfbmjYv+qII7zP6RU2QGnqve27dnLycEnyEQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      }\n    },\n    \"@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true\n    },\n    \"@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      }\n    },\n    \"@sinclair/typebox\": {\n      \"version\": \"0.25.24\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.25.24.tgz\",\n      \"integrity\": \"sha512-XJfwUVUKDHF5ugKwIcxEgc9k8b7HbznCp6eUfWgu710hMPNIO4aw4/zB5RogDQz8nd6gyCDpU9O/m6qYEWY6yQ==\",\n      \"dev\": true\n    },\n    \"@sinonjs/commons\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/commons/-/commons-2.0.0.tgz\",\n      \"integrity\": \"sha512-uLa0j859mMrg2slwQYdO/AkrOfmH+X6LTVmNTS9CqexuE2IvVORIkSpJLqePAbEnKJ77aMmCwr1NUZ57120Xcg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-detect\": \"4.0.8\"\n      }\n    },\n    \"@sinonjs/fake-timers\": {\n      \"version\": \"10.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-10.0.2.tgz\",\n      \"integrity\": \"sha512-SwUDyjWnah1AaNl7kxsa7cfLhlTYoiyhDAIgyh+El30YvXs/o7OLXpYH88Zdhyx9JExKrmHDJ+10bwIcY80Jmw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@sinonjs/commons\": \"^2.0.0\"\n      }\n    },\n    \"@types/babel__core\": {\n      \"version\": \"7.20.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.0.tgz\",\n      \"integrity\": \"sha512-+n8dL/9GWblDO0iU6eZAwEIJVr5DWigtle+Q6HLOrh/pdbXOhOtqzq8VPPE2zvNJzSKY4vH/z3iT3tn0A3ypiQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\",\n        \"@types/babel__generator\": \"*\",\n        \"@types/babel__template\": \"*\",\n        \"@types/babel__traverse\": \"*\"\n      }\n    },\n    \"@types/babel__generator\": {\n      \"version\": \"7.6.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.4.tgz\",\n      \"integrity\": \"sha512-tFkciB9j2K755yrTALxD44McOrk+gfpIpvC3sxHjRawj6PfnQxrse4Clq5y/Rq+G3mrBurMax/lG8Qn2t9mSsg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"@types/babel__template\": {\n      \"version\": \"7.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.1.tgz\",\n      \"integrity\": \"sha512-azBFKemX6kMg5Io+/rdGT0dkGreboUVR0Cdm3fz9QJWpaQGJRQXl7C+6hOTCZcMll7KFyEQpgbYI2lHdsS4U7g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/parser\": \"^7.1.0\",\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"@types/babel__traverse\": {\n      \"version\": \"7.18.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.18.3.tgz\",\n      \"integrity\": \"sha512-1kbcJ40lLB7MHsj39U4Sh1uTd2E7rLEa79kmDpI6cy+XiXsteB3POdQomoq4FxszMrO3ZYchkhYJw7A2862b3w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/types\": \"^7.3.0\"\n      }\n    },\n    \"@types/graceful-fs\": {\n      \"version\": \"4.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.6.tgz\",\n      \"integrity\": \"sha512-Sig0SNORX9fdW+bQuTEovKj3uHcUL6LQKbCrrqb1X7J6/ReAbhCXRAhc+SMejhLELFj2QcyuxmUooZ4bt5ReSw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"@types/istanbul-lib-coverage\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz\",\n      \"integrity\": \"sha512-z/QT1XN4K4KYuslS23k62yDIDLwLFkzxOuMplDtObz0+y7VqJCaO2o+SPwHCvLFZh7xazvvoor2tA/hPz9ee7g==\",\n      \"dev\": true\n    },\n    \"@types/istanbul-lib-report\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz\",\n      \"integrity\": \"sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi/P+7Y8GDpzkEwLaGZZOpKIEmeVZNtKsrg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/istanbul-lib-coverage\": \"*\"\n      }\n    },\n    \"@types/istanbul-reports\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.1.tgz\",\n      \"integrity\": \"sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWlt6ASU3tSqxp0Uu0Aw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/istanbul-lib-report\": \"*\"\n      }\n    },\n    \"@types/jest\": {\n      \"version\": \"29.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/jest/-/jest-29.4.0.tgz\",\n      \"integrity\": \"sha512-VaywcGQ9tPorCX/Jkkni7RWGFfI11whqzs8dvxF41P17Z+z872thvEvlIbznjPJ02kl1HMX3LmLOonsj2n7HeQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"expect\": \"^29.0.0\",\n        \"pretty-format\": \"^29.0.0\"\n      }\n    },\n    \"@types/json-schema\": {\n      \"version\": \"7.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.11.tgz\",\n      \"integrity\": \"sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ==\",\n      \"dev\": true\n    },\n    \"@types/json5\": {\n      \"version\": \"0.0.29\",\n      \"resolved\": \"https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz\",\n      \"integrity\": \"sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==\",\n      \"dev\": true\n    },\n    \"@types/node\": {\n      \"version\": \"18.15.11\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-18.15.11.tgz\",\n      \"integrity\": \"sha512-E5Kwq2n4SbMzQOn6wnmBjuK9ouqlURrcZDVfbo9ftDDTFt3nk7ZKK4GMOzoYgnpQJKcxwQw+lGaBvvlMo0qN/Q==\",\n      \"dev\": true\n    },\n    \"@types/prettier\": {\n      \"version\": \"2.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/@types/prettier/-/prettier-2.7.2.tgz\",\n      \"integrity\": \"sha512-KufADq8uQqo1pYKVIYzfKbJfBAc0sOeXqGbFaSpv8MRmC/zXgowNZmFcbngndGk922QDmOASEXUZCaY48gs4cg==\",\n      \"dev\": true\n    },\n    \"@types/semver\": {\n      \"version\": \"7.3.13\",\n      \"resolved\": \"https://registry.npmjs.org/@types/semver/-/semver-7.3.13.tgz\",\n      \"integrity\": \"sha512-21cFJr9z3g5dW8B0CVI9g2O9beqaThGQ6ZFBqHfwhzLDKUxaqTIy3vnfah/UPkfOiF2pLq+tGz+W8RyCskuslw==\",\n      \"dev\": true\n    },\n    \"@types/stack-utils\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.1.tgz\",\n      \"integrity\": \"sha512-Hl219/BT5fLAaz6NDkSuhzasy49dwQS/DSdu4MdggFB8zcXv7vflBI3xp7FEmkmdDkBUI2bPUNeMttp2knYdxw==\",\n      \"dev\": true\n    },\n    \"@types/yargs\": {\n      \"version\": \"17.0.24\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs/-/yargs-17.0.24.tgz\",\n      \"integrity\": \"sha512-6i0aC7jV6QzQB8ne1joVZ0eSFIstHsCrobmOtghM11yGlH0j43FKL2UhWdELkyps0zuf7qVTUVCCR+tgSlyLLw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@types/yargs-parser\": \"*\"\n      }\n    },\n    \"@types/yargs-parser\": {\n      \"version\": \"21.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.0.tgz\",\n      \"integrity\": \"sha512-iO9ZQHkZxHn4mSakYV0vFHAVDyEOIJQrV2uZ06HxEPcx+mt8swXoZHIbaaJ2crJYFfErySgktuTZ3BeLz+XmFA==\",\n      \"dev\": true\n    },\n    \"@typescript-eslint/scope-manager\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-5.57.1.tgz\",\n      \"integrity\": \"sha512-N/RrBwEUKMIYxSKl0oDK5sFVHd6VI7p9K5MyUlVYAY6dyNb/wHUqndkTd3XhpGlXgnQsBkRZuu4f9kAHghvgPw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"@typescript-eslint/visitor-keys\": \"5.57.1\"\n      }\n    },\n    \"@typescript-eslint/types\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-5.57.1.tgz\",\n      \"integrity\": \"sha512-bSs4LOgyV3bJ08F5RDqO2KXqg3WAdwHCu06zOqcQ6vqbTJizyBhuh1o1ImC69X4bV2g1OJxbH71PJqiO7Y1RuA==\",\n      \"dev\": true\n    },\n    \"@typescript-eslint/typescript-estree\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-5.57.1.tgz\",\n      \"integrity\": \"sha512-A2MZqD8gNT0qHKbk2wRspg7cHbCDCk2tcqt6ScCFLr5Ru8cn+TCfM786DjPhqwseiS+PrYwcXht5ztpEQ6TFTw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"@typescript-eslint/visitor-keys\": \"5.57.1\",\n        \"debug\": \"^4.3.4\",\n        \"globby\": \"^11.1.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"semver\": \"^7.3.7\",\n        \"tsutils\": \"^3.21.0\"\n      },\n      \"dependencies\": {\n        \"lru-cache\": {\n          \"version\": \"6.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n          \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"yallist\": \"^4.0.0\"\n          }\n        },\n        \"semver\": {\n          \"version\": \"7.3.8\",\n          \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.8.tgz\",\n          \"integrity\": \"sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==\",\n          \"dev\": true,\n          \"requires\": {\n            \"lru-cache\": \"^6.0.0\"\n          }\n        },\n        \"yallist\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n          \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@typescript-eslint/utils\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-5.57.1.tgz\",\n      \"integrity\": \"sha512-kN6vzzf9NkEtawECqze6v99LtmDiUJCVpvieTFA1uL7/jDghiJGubGZ5csicYHU1Xoqb3oH/R5cN5df6W41Nfg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@eslint-community/eslint-utils\": \"^4.2.0\",\n        \"@types/json-schema\": \"^7.0.9\",\n        \"@types/semver\": \"^7.3.12\",\n        \"@typescript-eslint/scope-manager\": \"5.57.1\",\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"@typescript-eslint/typescript-estree\": \"5.57.1\",\n        \"eslint-scope\": \"^5.1.1\",\n        \"semver\": \"^7.3.7\"\n      },\n      \"dependencies\": {\n        \"eslint-scope\": {\n          \"version\": \"5.1.1\",\n          \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz\",\n          \"integrity\": \"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"esrecurse\": \"^4.3.0\",\n            \"estraverse\": \"^4.1.1\"\n          }\n        },\n        \"estraverse\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz\",\n          \"integrity\": \"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\",\n          \"dev\": true\n        },\n        \"lru-cache\": {\n          \"version\": \"6.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n          \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"yallist\": \"^4.0.0\"\n          }\n        },\n        \"semver\": {\n          \"version\": \"7.3.8\",\n          \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.8.tgz\",\n          \"integrity\": \"sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==\",\n          \"dev\": true,\n          \"requires\": {\n            \"lru-cache\": \"^6.0.0\"\n          }\n        },\n        \"yallist\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n          \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@typescript-eslint/visitor-keys\": {\n      \"version\": \"5.57.1\",\n      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-5.57.1.tgz\",\n      \"integrity\": \"sha512-RjQrAniDU0CEk5r7iphkm731zKlFiUjvcBS2yHAg8WWqFMCaCrD0rKEVOMUyMMcbGPZ0bPp56srkGWrgfZqLRA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@typescript-eslint/types\": \"5.57.1\",\n        \"eslint-visitor-keys\": \"^3.3.0\"\n      }\n    },\n    \"acorn\": {\n      \"version\": \"8.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.8.2.tgz\",\n      \"integrity\": \"sha512-xjIYgE8HBrkpd/sJqOGNspf8uHG+NOHGOw6a/Urj8taM2EXfdNAH2oFcPeIFfsv3+kz/mJrS5VuMqbNLjCa2vw==\",\n      \"dev\": true\n    },\n    \"acorn-jsx\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n      \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n      \"dev\": true,\n      \"requires\": {}\n    },\n    \"ajv\": {\n      \"version\": \"6.12.6\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"fast-json-stable-stringify\": \"^2.0.0\",\n        \"json-schema-traverse\": \"^0.4.1\",\n        \"uri-js\": \"^4.2.2\"\n      }\n    },\n    \"ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-fest\": \"^0.21.3\"\n      }\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^1.9.0\"\n      }\n    },\n    \"anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      }\n    },\n    \"argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"aria-query\": {\n      \"version\": \"5.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.1.3.tgz\",\n      \"integrity\": \"sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"deep-equal\": \"^2.0.5\"\n      }\n    },\n    \"array-buffer-byte-length\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.0.tgz\",\n      \"integrity\": \"sha512-LPuwb2P+NrQw3XhxGc36+XSvuBPopovXYTR9Ew++Du9Yb/bx5AzBfrIsBoj0EZUifjQU+sHL21sseZ3jerWO/A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"is-array-buffer\": \"^3.0.1\"\n      }\n    },\n    \"array-includes\": {\n      \"version\": \"3.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/array-includes/-/array-includes-3.1.6.tgz\",\n      \"integrity\": \"sha512-sgTbLvL6cNnw24FnbaDyjmvddQ2ML8arZsgaJhoABMoplz/4QRhtrYS+alr1BUM1Bwp6dhx8vVCBSLG+StwOFw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"is-string\": \"^1.0.7\"\n      }\n    },\n    \"array-union\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n      \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n      \"dev\": true\n    },\n    \"array.prototype.flat\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.1.tgz\",\n      \"integrity\": \"sha512-roTU0KWIOmJ4DRLmwKd19Otg0/mT3qPNt0Qb3GWW8iObuZXxrjB/pzn0R3hqpRSWg4HCwqx+0vwOnWnvlOyeIA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      }\n    },\n    \"array.prototype.flatmap\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.1.tgz\",\n      \"integrity\": \"sha512-8UGn9O1FDVvMNB0UlLv4voxRMze7+FpHyF5mSMRjWHUMlpoDViniy05870VlxhfgTnLbpuwTzvD76MTtWxB/mQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"es-shim-unscopables\": \"^1.0.0\"\n      }\n    },\n    \"array.prototype.tosorted\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.1.tgz\",\n      \"integrity\": \"sha512-pZYPXPRl2PqWcsUs6LOMn+1f1532nEoPTYowBtqLwAW+W8vSVhkIGnmOX1t/UQjD6YGI0vcD2B1U7ZFGQH9jnQ==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.4\",\n        \"es-abstract\": \"^1.20.4\",\n        \"es-shim-unscopables\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.1.3\"\n      }\n    },\n    \"ast-types-flow\": {\n      \"version\": \"0.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.7.tgz\",\n      \"integrity\": \"sha512-eBvWn1lvIApYMhzQMsu9ciLfkBY499mFZlNqG+/9WR7PVlroQw0vG30cOQQbaKz3sCEc44TAOu2ykzqXSNnwag==\",\n      \"dev\": true\n    },\n    \"available-typed-arrays\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.5.tgz\",\n      \"integrity\": \"sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw==\",\n      \"dev\": true\n    },\n    \"axe-core\": {\n      \"version\": \"4.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/axe-core/-/axe-core-4.6.3.tgz\",\n      \"integrity\": \"sha512-/BQzOX780JhsxDnPpH4ZiyrJAzcd8AfzFPkv+89veFSr1rcMjuq2JDCwypKaPeB6ljHp9KjXhPpjgCvQlWYuqg==\",\n      \"dev\": true\n    },\n    \"axobject-query\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/axobject-query/-/axobject-query-3.1.1.tgz\",\n      \"integrity\": \"sha512-goKlv8DZrK9hUh975fnHzhNIO4jUnFCfv/dszV5VwUGDFjI6vQ2VwoyjYjYNEbBE8AH87TduWP5uyDR1D+Iteg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"deep-equal\": \"^2.0.5\"\n      }\n    },\n    \"babel-jest\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-jest/-/babel-jest-29.5.0.tgz\",\n      \"integrity\": \"sha512-mA4eCDh5mSo2EcA9xQjVTpmbbNk32Zb3Q3QFQsNhaK56Q+yoXowzFodLux30HRgyOho5rsQ6B0P9QpMkvvnJ0Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/transform\": \"^29.5.0\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"babel-preset-jest\": \"^29.5.0\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-convert\": \"^2.0.1\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"4.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n          \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^4.1.0\",\n            \"supports-color\": \"^7.1.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-name\": \"~1.1.4\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n          \"dev\": true\n        },\n        \"has-flag\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n          \"dev\": true\n        },\n        \"slash\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n          \"dev\": true\n        },\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"babel-plugin-istanbul\": {\n      \"version\": \"6.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.1.1.tgz\",\n      \"integrity\": \"sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@istanbuljs/load-nyc-config\": \"^1.0.0\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-instrument\": \"^5.0.4\",\n        \"test-exclude\": \"^6.0.0\"\n      }\n    },\n    \"babel-plugin-jest-hoist\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-29.5.0.tgz\",\n      \"integrity\": \"sha512-zSuuuAlTMT4mzLj2nPnUm6fsE6270vdOfnpbJ+RmruU75UhLFvL0N2NgI7xpeS7NaB6hGqmd5pVpGTDYvi4Q3w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/template\": \"^7.3.3\",\n        \"@babel/types\": \"^7.3.3\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"@types/babel__traverse\": \"^7.0.6\"\n      }\n    },\n    \"babel-plugin-polyfill-corejs2\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.3.3.tgz\",\n      \"integrity\": \"sha512-8hOdmFYFSZhqg2C/JgLUQ+t52o5nirNwaWM2B9LWteozwIvM14VSwdsCAUET10qT+kmySAlseadmfeeSWFCy+Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/compat-data\": \"^7.17.7\",\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"semver\": \"^6.1.1\"\n      }\n    },\n    \"babel-plugin-polyfill-corejs3\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.6.0.tgz\",\n      \"integrity\": \"sha512-+eHqR6OPcBhJOGgsIar7xoAB1GcSwVUA3XjAd7HJNzOXT4wv6/H7KIdA/Nc60cvUlDbKApmqNvD1B1bzOt4nyA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\",\n        \"core-js-compat\": \"^3.25.1\"\n      }\n    },\n    \"babel-plugin-polyfill-regenerator\": {\n      \"version\": \"0.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.4.1.tgz\",\n      \"integrity\": \"sha512-NtQGmyQDXjQqQ+IzRkBVwEOz9lQ4zxAQZgoAYEtU9dJjnl1Oc98qnN7jcp+bE7O7aYzVpavXE3/VKXNzUbh7aw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/helper-define-polyfill-provider\": \"^0.3.3\"\n      }\n    },\n    \"babel-preset-current-node-syntax\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.0.1.tgz\",\n      \"integrity\": \"sha512-M7LQ0bxarkxQoN+vz5aJPsLBn77n8QgTFmo8WK0/44auK2xlCXrYcUxHFxgU7qW5Yzw/CjmLRK2uJzaCd7LvqQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-bigint\": \"^7.8.3\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.8.3\",\n        \"@babel/plugin-syntax-import-meta\": \"^7.8.3\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.8.3\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.8.3\"\n      }\n    },\n    \"babel-preset-jest\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-29.5.0.tgz\",\n      \"integrity\": \"sha512-JOMloxOqdiBSxMAzjRaH023/vvcaSaec49zvg+2LmNsktC7ei39LTJGw02J+9uUtTZUq6xbLyJ4dxe9sSmIuAg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"babel-plugin-jest-hoist\": \"^29.5.0\",\n        \"babel-preset-current-node-syntax\": \"^1.0.0\"\n      }\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"braces\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fill-range\": \"^7.0.1\"\n      }\n    },\n    \"browserslist\": {\n      \"version\": \"4.21.5\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.21.5.tgz\",\n      \"integrity\": \"sha512-tUkiguQGW7S3IhB7N+c2MV/HZPSCPAAiYBZXLsBhFB/PCy6ZKKsZrmBayHV9fdGV/ARIfJ14NkxKzRDjvp7L6w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"caniuse-lite\": \"^1.0.30001449\",\n        \"electron-to-chromium\": \"^1.4.284\",\n        \"node-releases\": \"^2.0.8\",\n        \"update-browserslist-db\": \"^1.0.10\"\n      }\n    },\n    \"bser\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/bser/-/bser-2.1.1.tgz\",\n      \"integrity\": \"sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"node-int64\": \"^0.4.0\"\n      }\n    },\n    \"buffer-from\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz\",\n      \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\",\n      \"dev\": true\n    },\n    \"call-bind\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\n      \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"function-bind\": \"^1.1.1\",\n        \"get-intrinsic\": \"^1.0.2\"\n      }\n    },\n    \"callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"dev\": true\n    },\n    \"camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n      \"dev\": true\n    },\n    \"caniuse-lite\": {\n      \"version\": \"1.0.30001476\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001476.tgz\",\n      \"integrity\": \"sha512-JmpktFppVSvyUN4gsLS0bShY2L9ZUslHLE72vgemBkS43JD2fOvKTKs+GtRwuxrtRGnwJFW0ye7kWRRlLJS9vQ==\",\n      \"dev\": true\n    },\n    \"chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      }\n    },\n    \"char-regex\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz\",\n      \"integrity\": \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\",\n      \"dev\": true\n    },\n    \"chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"requires\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"fsevents\": \"~2.3.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      }\n    },\n    \"ci-info\": {\n      \"version\": \"3.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.8.0.tgz\",\n      \"integrity\": \"sha512-eXTggHWSooYhq49F2opQhuHWgzucfF2YgODK4e1566GQs5BIfP30B0oenwBJHfWxAs2fyPB1s7Mg949zLf61Yw==\",\n      \"dev\": true\n    },\n    \"cjs-module-lexer\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.2.2.tgz\",\n      \"integrity\": \"sha512-cOU9usZw8/dXIXKtwa8pM0OTJQuJkxMN6w30csNRUerHfeQ5R6U3kkU/FtJeIf3M202OHfY2U8ccInBG7/xogA==\",\n      \"dev\": true\n    },\n    \"cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"co\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",\n      \"integrity\": \"sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==\",\n      \"dev\": true\n    },\n    \"collect-v8-coverage\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.1.tgz\",\n      \"integrity\": \"sha512-iBPtljfCNcTKNAto0KEtDfZ3qzjJvqE3aTGZsbhjSBlorqpXJlaWWtPO35D+ZImoC3KWejX64o+yPGxhWSTzfg==\",\n      \"dev\": true\n    },\n    \"color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"confusing-browser-globals\": {\n      \"version\": \"1.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/confusing-browser-globals/-/confusing-browser-globals-1.0.11.tgz\",\n      \"integrity\": \"sha512-JsPKdmh8ZkmnHxDk55FZ1TqVLvEQTvoByJZRN9jzI0UjxK/QgAmsphz7PGtqgPieQZ/CQcHWXCR7ATDNhGe+YA==\",\n      \"dev\": true\n    },\n    \"convert-source-map\": {\n      \"version\": \"1.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz\",\n      \"integrity\": \"sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==\",\n      \"dev\": true\n    },\n    \"core-js-compat\": {\n      \"version\": \"3.30.0\",\n      \"resolved\": \"https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.30.0.tgz\",\n      \"integrity\": \"sha512-P5A2h/9mRYZFIAP+5Ab8ns6083IyVpSclU74UNvbGVQ8VM7n3n3/g2yF3AkKQ9NXz2O+ioxLbEWKnDtgsFamhg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"browserslist\": \"^4.21.5\"\n      }\n    },\n    \"cross-spawn\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      }\n    },\n    \"damerau-levenshtein\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz\",\n      \"integrity\": \"sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==\",\n      \"dev\": true\n    },\n    \"debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"2.1.2\"\n      }\n    },\n    \"dedent\": {\n      \"version\": \"0.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/dedent/-/dedent-0.7.0.tgz\",\n      \"integrity\": \"sha512-Q6fKUPqnAHAyhiUgFU7BUzLiv0kd8saH9al7tnu5Q/okj6dnupxyTgFIBjVzJATdfIAm9NAsvXNzjaKa+bxVyA==\",\n      \"dev\": true\n    },\n    \"deep-equal\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-2.2.0.tgz\",\n      \"integrity\": \"sha512-RdpzE0Hv4lhowpIUKKMJfeH6C1pXdtT1/it80ubgWqwI3qpuxUBpC1S4hnHg+zjnuOoDkzUtUCEEkG+XG5l3Mw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"es-get-iterator\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-array-buffer\": \"^3.0.1\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"object-is\": \"^1.1.5\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.4.3\",\n        \"side-channel\": \"^1.0.4\",\n        \"which-boxed-primitive\": \"^1.0.2\",\n        \"which-collection\": \"^1.0.1\",\n        \"which-typed-array\": \"^1.1.9\"\n      }\n    },\n    \"deep-is\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n      \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n      \"dev\": true\n    },\n    \"deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n      \"dev\": true\n    },\n    \"define-properties\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.0.tgz\",\n      \"integrity\": \"sha512-xvqAVKGfT1+UAvPwKTVw/njhdQ8ZhXK4lI0bCIuCMrp2up9nPnaDftrLtmpTazqd1o+UY4zgzU+avtMbDP+ldA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      }\n    },\n    \"detect-newline\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz\",\n      \"integrity\": \"sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==\",\n      \"dev\": true\n    },\n    \"diff-sequences\": {\n      \"version\": \"29.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.4.3.tgz\",\n      \"integrity\": \"sha512-ofrBgwpPhCD85kMKtE9RYFFq6OC1A89oW2vvgWZNCwxrUpRUILopY7lsYyMDSjc8g6U6aiO0Qubg6r4Wgt5ZnA==\",\n      \"dev\": true\n    },\n    \"dir-glob\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n      \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"path-type\": \"^4.0.0\"\n      }\n    },\n    \"doctrine\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz\",\n      \"integrity\": \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"esutils\": \"^2.0.2\"\n      }\n    },\n    \"electron-to-chromium\": {\n      \"version\": \"1.4.356\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.356.tgz\",\n      \"integrity\": \"sha512-nEftV1dRX3omlxAj42FwqRZT0i4xd2dIg39sog/CnCJeCcL1TRd2Uh0i9Oebgv8Ou0vzTPw++xc+Z20jzS2B6A==\",\n      \"dev\": true\n    },\n    \"emittery\": {\n      \"version\": \"0.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/emittery/-/emittery-0.13.1.tgz\",\n      \"integrity\": \"sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==\",\n      \"dev\": true\n    },\n    \"emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"es-abstract\": {\n      \"version\": \"1.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.21.2.tgz\",\n      \"integrity\": \"sha512-y/B5POM2iBnIxCiernH1G7rC9qQoM77lLIMQLuob0zhp8C56Po81+2Nj0WFKnd0pNReDTnkYryc+zhOzpEIROg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"available-typed-arrays\": \"^1.0.5\",\n        \"call-bind\": \"^1.0.2\",\n        \"es-set-tostringtag\": \"^2.0.1\",\n        \"es-to-primitive\": \"^1.2.1\",\n        \"function.prototype.name\": \"^1.1.5\",\n        \"get-intrinsic\": \"^1.2.0\",\n        \"get-symbol-description\": \"^1.0.0\",\n        \"globalthis\": \"^1.0.3\",\n        \"gopd\": \"^1.0.1\",\n        \"has\": \"^1.0.3\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"has-proto\": \"^1.0.1\",\n        \"has-symbols\": \"^1.0.3\",\n        \"internal-slot\": \"^1.0.5\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-callable\": \"^1.2.7\",\n        \"is-negative-zero\": \"^2.0.2\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"is-typed-array\": \"^1.1.10\",\n        \"is-weakref\": \"^1.0.2\",\n        \"object-inspect\": \"^1.12.3\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.4.3\",\n        \"safe-regex-test\": \"^1.0.0\",\n        \"string.prototype.trim\": \"^1.2.7\",\n        \"string.prototype.trimend\": \"^1.0.6\",\n        \"string.prototype.trimstart\": \"^1.0.6\",\n        \"typed-array-length\": \"^1.0.4\",\n        \"unbox-primitive\": \"^1.0.2\",\n        \"which-typed-array\": \"^1.1.9\"\n      }\n    },\n    \"es-get-iterator\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-get-iterator/-/es-get-iterator-1.1.3.tgz\",\n      \"integrity\": \"sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-map\": \"^2.0.2\",\n        \"is-set\": \"^2.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"isarray\": \"^2.0.5\",\n        \"stop-iteration-iterator\": \"^1.0.0\"\n      }\n    },\n    \"es-set-tostringtag\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.1.tgz\",\n      \"integrity\": \"sha512-g3OMbtlwY3QewlqAiMLI47KywjWZoEytKr8pf6iTC8uJq5bIAH52Z9pnQ8pVL6whrCto53JZDuUIsifGeLorTg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.0\"\n      }\n    },\n    \"es-shim-unscopables\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.0.tgz\",\n      \"integrity\": \"sha512-Jm6GPcCdC30eMLbZ2x8z2WuRwAws3zTBBKuusffYVUrNj/GVSUAZ+xKMaUpfNDR5IbyNA5LJbaecoUVbmUcB1w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has\": \"^1.0.3\"\n      }\n    },\n    \"es-to-primitive\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz\",\n      \"integrity\": \"sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-callable\": \"^1.1.4\",\n        \"is-date-object\": \"^1.0.1\",\n        \"is-symbol\": \"^1.0.2\"\n      }\n    },\n    \"escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true\n    },\n    \"eslint\": {\n      \"version\": \"8.33.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.33.0.tgz\",\n      \"integrity\": \"sha512-WjOpFQgKK8VrCnAtl8We0SUOy/oVZ5NHykyMiagV1M9r8IFpIJX7DduK6n1mpfhlG7T1NLWm2SuD8QB7KFySaA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@eslint/eslintrc\": \"^1.4.1\",\n        \"@humanwhocodes/config-array\": \"^0.11.8\",\n        \"@humanwhocodes/module-importer\": \"^1.0.1\",\n        \"@nodelib/fs.walk\": \"^1.2.8\",\n        \"ajv\": \"^6.10.0\",\n        \"chalk\": \"^4.0.0\",\n        \"cross-spawn\": \"^7.0.2\",\n        \"debug\": \"^4.3.2\",\n        \"doctrine\": \"^3.0.0\",\n        \"escape-string-regexp\": \"^4.0.0\",\n        \"eslint-scope\": \"^7.1.1\",\n        \"eslint-utils\": \"^3.0.0\",\n        \"eslint-visitor-keys\": \"^3.3.0\",\n        \"espree\": \"^9.4.0\",\n        \"esquery\": \"^1.4.0\",\n        \"esutils\": \"^2.0.2\",\n        \"fast-deep-equal\": \"^3.1.3\",\n        \"file-entry-cache\": \"^6.0.1\",\n        \"find-up\": \"^5.0.0\",\n        \"glob-parent\": \"^6.0.2\",\n        \"globals\": \"^13.19.0\",\n        \"grapheme-splitter\": \"^1.0.4\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.0.0\",\n        \"imurmurhash\": \"^0.1.4\",\n        \"is-glob\": \"^4.0.0\",\n        \"is-path-inside\": \"^3.0.3\",\n        \"js-sdsl\": \"^4.1.4\",\n        \"js-yaml\": \"^4.1.0\",\n        \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n        \"levn\": \"^0.4.1\",\n        \"lodash.merge\": \"^4.6.2\",\n        \"minimatch\": \"^3.1.2\",\n        \"natural-compare\": \"^1.4.0\",\n        \"optionator\": \"^0.9.1\",\n        \"regexpp\": \"^3.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"strip-json-comments\": \"^3.1.0\",\n        \"text-table\": \"^0.2.0\"\n      },\n      \"dependencies\": {\n        \"ansi-styles\": {\n          \"version\": \"4.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-convert\": \"^2.0.1\"\n          }\n        },\n        \"chalk\": {\n          \"version\": \"4.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n          \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ansi-styles\": \"^4.1.0\",\n            \"supports-color\": \"^7.1.0\"\n          }\n        },\n        \"color-convert\": {\n          \"version\": \"2.0.1\",\n          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"color-name\": \"~1.1.4\"\n          }\n        },\n        \"color-name\": {\n          \"version\": \"1.1.4\",\n          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n          \"dev\": true\n        },\n        \"escape-string-regexp\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n          \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n          \"dev\": true\n        },\n        \"glob-parent\": {\n          \"version\": \"6.0.2\",\n          \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n          \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n          \"dev\": true,\n          \"requires\": {\n            \"is-glob\": \"^4.0.3\"\n          }\n        },\n        \"globals\": {\n          \"version\": \"13.20.0\",\n          \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.20.0.tgz\",\n          \"integrity\": \"sha512-Qg5QtVkCy/kv3FUSlu4ukeZDVf9ee0iXLAUYX13gbR17bnejFTzr4iS9bY7kwCf1NztRNm1t91fjOiyx4CSwPQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"type-fest\": \"^0.20.2\"\n          }\n        },\n        \"has-flag\": {\n          \"version\": \"4.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n          \"dev\": true\n        },\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        },\n        \"type-fest\": {\n          \"version\": \"0.20.2\",\n          \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz\",\n          \"integrity\": \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"eslint-config-airbnb\": {\n      \"version\": \"19.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-config-airbnb/-/eslint-config-airbnb-19.0.4.tgz\",\n      \"integrity\": \"sha512-T75QYQVQX57jiNgpF9r1KegMICE94VYwoFQyMGhrvc+lB8YF2E/M/PYDaQe1AJcWaEgqLE+ErXV1Og/+6Vyzew==\",\n      \"dev\": true,\n      \"requires\": {\n        \"eslint-config-airbnb-base\": \"^15.0.0\",\n        \"object.assign\": \"^4.1.2\",\n        \"object.entries\": \"^1.1.5\"\n      }\n    },\n    \"eslint-config-airbnb-base\": {\n      \"version\": \"15.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-config-airbnb-base/-/eslint-config-airbnb-base-15.0.0.tgz\",\n      \"integrity\": \"sha512-xaX3z4ZZIcFLvh2oUNvcX5oEofXda7giYmuplVxoOg5A7EXJMrUyqRgR+mhDhPK8LZ4PttFOBvCYDbX3sUoUig==\",\n      \"dev\": true,\n      \"requires\": {\n        \"confusing-browser-globals\": \"^1.0.10\",\n        \"object.assign\": \"^4.1.2\",\n        \"object.entries\": \"^1.1.5\",\n        \"semver\": \"^6.3.0\"\n      }\n    },\n    \"eslint-import-resolver-node\": {\n      \"version\": \"0.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.7.tgz\",\n      \"integrity\": \"sha512-gozW2blMLJCeFpBwugLTGyvVjNoeo1knonXAcatC6bjPBZitotxdWf7Gimr25N4c0AAOo4eOUfaG82IJPDpqCA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"debug\": \"^3.2.7\",\n        \"is-core-module\": \"^2.11.0\",\n        \"resolve\": \"^1.22.1\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"3.2.7\",\n          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n          \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"^2.1.1\"\n          }\n        }\n      }\n    },\n    \"eslint-module-utils\": {\n      \"version\": \"2.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.7.4.tgz\",\n      \"integrity\": \"sha512-j4GT+rqzCoRKHwURX7pddtIPGySnX9Si/cgMI5ztrcqOPtk5dDEeZ34CQVPphnqkJytlc97Vuk05Um2mJ3gEQA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"debug\": \"^3.2.7\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"3.2.7\",\n          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n          \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"^2.1.1\"\n          }\n        }\n      }\n    },\n    \"eslint-plugin-import\": {\n      \"version\": \"2.27.5\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.27.5.tgz\",\n      \"integrity\": \"sha512-LmEt3GVofgiGuiE+ORpnvP+kAm3h6MLZJ4Q5HCyHADofsb4VzXFsRiWj3c0OFiV+3DWFh0qg3v9gcPlfc3zRow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flat\": \"^1.3.1\",\n        \"array.prototype.flatmap\": \"^1.3.1\",\n        \"debug\": \"^3.2.7\",\n        \"doctrine\": \"^2.1.0\",\n        \"eslint-import-resolver-node\": \"^0.3.7\",\n        \"eslint-module-utils\": \"^2.7.4\",\n        \"has\": \"^1.0.3\",\n        \"is-core-module\": \"^2.11.0\",\n        \"is-glob\": \"^4.0.3\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.values\": \"^1.1.6\",\n        \"resolve\": \"^1.22.1\",\n        \"semver\": \"^6.3.0\",\n        \"tsconfig-paths\": \"^3.14.1\"\n      },\n      \"dependencies\": {\n        \"debug\": {\n          \"version\": \"3.2.7\",\n          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n          \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n          \"dev\": true,\n          \"requires\": {\n            \"ms\": \"^2.1.1\"\n          }\n        },\n        \"doctrine\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n          \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"esutils\": \"^2.0.2\"\n          }\n        }\n      }\n    },\n    \"eslint-plugin-jest\": {\n      \"version\": \"27.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-27.2.1.tgz\",\n      \"integrity\": \"sha512-l067Uxx7ZT8cO9NJuf+eJHvt6bqJyz2Z29wykyEdz/OtmcELQl2MQGQLX8J94O1cSJWAwUSEvCjwjA7KEK3Hmg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@typescript-eslint/utils\": \"^5.10.0\"\n      }\n    },\n    \"eslint-plugin-jsx-a11y\": {\n      \"version\": \"6.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.7.1.tgz\",\n      \"integrity\": \"sha512-63Bog4iIethyo8smBklORknVjB0T2dwB8Mr/hIC+fBS0uyHdYYpzM/Ed+YC8VxTjlXHEWFOdmgwcDn1U2L9VCA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/runtime\": \"^7.20.7\",\n        \"aria-query\": \"^5.1.3\",\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flatmap\": \"^1.3.1\",\n        \"ast-types-flow\": \"^0.0.7\",\n        \"axe-core\": \"^4.6.2\",\n        \"axobject-query\": \"^3.1.1\",\n        \"damerau-levenshtein\": \"^1.0.8\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"has\": \"^1.0.3\",\n        \"jsx-ast-utils\": \"^3.3.3\",\n        \"language-tags\": \"=1.0.5\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.6\",\n        \"object.fromentries\": \"^2.0.6\",\n        \"semver\": \"^6.3.0\"\n      }\n    },\n    \"eslint-plugin-react\": {\n      \"version\": \"7.32.2\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.32.2.tgz\",\n      \"integrity\": \"sha512-t2fBMa+XzonrrNkyVirzKlvn5RXzzPwRHtMvLAtVZrt8oxgnTQaYbU6SXTOO1mwQgp1y5+toMSKInnzGr0Knqg==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {\n        \"array-includes\": \"^3.1.6\",\n        \"array.prototype.flatmap\": \"^1.3.1\",\n        \"array.prototype.tosorted\": \"^1.1.1\",\n        \"doctrine\": \"^2.1.0\",\n        \"estraverse\": \"^5.3.0\",\n        \"jsx-ast-utils\": \"^2.4.1 || ^3.0.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"object.entries\": \"^1.1.6\",\n        \"object.fromentries\": \"^2.0.6\",\n        \"object.hasown\": \"^1.1.2\",\n        \"object.values\": \"^1.1.6\",\n        \"prop-types\": \"^15.8.1\",\n        \"resolve\": \"^2.0.0-next.4\",\n        \"semver\": \"^6.3.0\",\n        \"string.prototype.matchall\": \"^4.0.8\"\n      },\n      \"dependencies\": {\n        \"doctrine\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n          \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n          \"dev\": true,\n          \"peer\": true,\n          \"requires\": {\n            \"esutils\": \"^2.0.2\"\n          }\n        },\n        \"resolve\": {\n          \"version\": \"2.0.0-next.4\",\n          \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.4.tgz\",\n          \"integrity\": \"sha512-iMDbmAWtfU+MHpxt/I5iWI7cY6YVEZUQ3MBgPQ++XD1PELuJHIl82xBmObyP2KyQmkNB2dsqF7seoQQiAn5yDQ==\",\n          \"dev\": true,\n          \"peer\": true,\n          \"requires\": {\n            \"is-core-module\": \"^2.9.0\",\n            \"path-parse\": \"^1.0.7\",\n            \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n          }\n        }\n      }\n    },\n    \"eslint-plugin-react-hooks\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-4.6.0.tgz\",\n      \"integrity\": \"sha512-oFc7Itz9Qxh2x4gNHStv3BqJq54ExXmfC+a1NjAta66IAN87Wu0R/QArgIS9qKzX3dXKPI9H5crl9QchNMY9+g==\",\n      \"dev\": true,\n      \"peer\": true,\n      \"requires\": {}\n    },\n    \"eslint-scope\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.1.1.tgz\",\n      \"integrity\": \"sha512-QKQM/UXpIiHcLqJ5AOyIW7XZmzjkzQXYE54n1++wb0u9V/abW3l9uQnxX8Z5Xd18xyKIMTUAyQ0k1e8pz6LUrw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"esrecurse\": \"^4.3.0\",\n        \"estraverse\": \"^5.2.0\"\n      }\n    },\n    \"eslint-utils\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-utils/-/eslint-utils-3.0.0.tgz\",\n      \"integrity\": \"sha512-uuQC43IGctw68pJA1RgbQS8/NP7rch6Cwd4j3ZBtgo4/8Flj4eGE7ZYSZRN3iq5pVUv6GPdW5Z1RFleo84uLDA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"eslint-visitor-keys\": \"^2.0.0\"\n      },\n      \"dependencies\": {\n        \"eslint-visitor-keys\": {\n          \"version\": \"2.1.0\",\n          \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-2.1.0.tgz\",\n          \"integrity\": \"sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"eslint-visitor-keys\": {\n      \"version\": \"3.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.0.tgz\",\n      \"integrity\": \"sha512-HPpKPUBQcAsZOsHAFwTtIKcYlCje62XB7SEAcxjtmW6TD1WVpkS6i6/hOVtTZIl4zGj/mBqpFVGvaDneik+VoQ==\",\n      \"dev\": true\n    },\n    \"espree\": {\n      \"version\": \"9.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.5.1.tgz\",\n      \"integrity\": \"sha512-5yxtHSZXRSW5pvv3hAlXM5+/Oswi1AUFqBmbibKb5s6bp3rGIDkyXU6xCoyuuLhijr4SFwPrXRoZjz0AZDN9tg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"acorn\": \"^8.8.0\",\n        \"acorn-jsx\": \"^5.3.2\",\n        \"eslint-visitor-keys\": \"^3.4.0\"\n      }\n    },\n    \"esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true\n    },\n    \"esquery\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.5.0.tgz\",\n      \"integrity\": \"sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"estraverse\": \"^5.1.0\"\n      }\n    },\n    \"esrecurse\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n      \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n      \"dev\": true,\n      \"requires\": {\n        \"estraverse\": \"^5.2.0\"\n      }\n    },\n    \"estraverse\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n      \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n      \"dev\": true\n    },\n    \"esutils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n      \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n      \"dev\": true\n    },\n    \"execa\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n      \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cross-spawn\": \"^7.0.3\",\n        \"get-stream\": \"^6.0.0\",\n        \"human-signals\": \"^2.1.0\",\n        \"is-stream\": \"^2.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^4.0.1\",\n        \"onetime\": \"^5.1.2\",\n        \"signal-exit\": \"^3.0.3\",\n        \"strip-final-newline\": \"^2.0.0\"\n      }\n    },\n    \"exit\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/exit/-/exit-0.1.2.tgz\",\n      \"integrity\": \"sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==\",\n      \"dev\": true\n    },\n    \"expect\": {\n      \"version\": \"29.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/expect/-/expect-29.5.0.tgz\",\n      \"integrity\": \"sha512-yM7xqUrCO2JdpFo4XpM82t+PJBFybdqoQuJLDGeDX2ij8NZzqRHyu3Hp188/JX7SWqud+7t4MUdvcgGBICMHZg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@jest/expect-utils\": \"^29.5.0\",\n        \"jest-get-type\": \"^29.4.3\",\n        \"jest-matcher-utils\": \"^29.5.0\",\n        \"jest-message-util\": \"^29.5.0\",\n        \"jest-util\": \"^29.5.0\"\n      }\n    },\n    \"fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"fast-glob\": {\n      \"version\": \"3.2.12\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.12.tgz\",\n      \"integrity\": \"sha512-DVj4CQIYYow0BlaelwK1pHl5n5cRSJfM60UA0zK891sVInoPri2Ekj7+e1CT3/3qxXenpI+nBBmQAcJPJgaj4w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.4\"\n      }\n    },\n    \"fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true\n    },\n    \"fast-levenshtein\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n      \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n      \"dev\": true\n    },\n    \"fastq\": {\n      \"version\": \"1.15.0\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.15.0.tgz\",\n      \"integrity\": \"sha512-wBrocU2LCXXa+lWBt8RoIRD89Fi8OdABODa/kEnyeyjS5aZO5/GNvI5sEINADqP/h8M29UHTHUb53sUu5Ihqdw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"fb-watchman\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.2.tgz\",\n      \"integrity\": \"sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"bser\": \"2.1.1\"\n      }\n    },\n    \"file-entry-cache\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz\",\n      \"integrity\": \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"flat-cache\": \"^3.0.4\"\n      }\n    },\n    \"fill-range\": {\n      \"version\": \"7.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"to-regex-range\": \"^5.0.1\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"requires\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      }\n    },\n    \"flat-cache\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-3.0.4.tgz\",\n      \"integrity\": \"sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eDYZoZV5wdrev7P3Nwg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"flatted\": \"^3.1.0\",\n        \"rimraf\": \"^3.0.2\"\n      }\n    },\n    \"flatted\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.2.7.tgz\",\n      \"integrity\": \"sha512-5nqDSxl8nn5BSNxyR3n4I6eDmbolI6WT+QqR547RwxQapgjQBmtktdP+HTBb/a/zLsbzERTONyUB5pefh5TtjQ==\",\n      \"dev\": true\n    },\n    \"for-each\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz\",\n      \"integrity\": \"sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-callable\": \"^1.1.3\"\n      }\n    },\n    \"fs-readdir-recursive\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs-readdir-recursive/-/fs-readdir-recursive-1.1.0.tgz\",\n      \"integrity\": \"sha512-GNanXlVr2pf02+sPN40XN8HG+ePaNcvM0q5mZBd668Obwb0yD5GiUbZOFgwn8kGMY6I3mdyDJzieUy3PTYyTRA==\",\n      \"dev\": true\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"fsevents\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n      \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"function-bind\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\n      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\",\n      \"dev\": true\n    },\n    \"function.prototype.name\": {\n      \"version\": \"1.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.5.tgz\",\n      \"integrity\": \"sha512-uN7m/BzVKQnCUF/iW8jYea67v++2u7m5UgENbHRtdDVclOUP+FMPlCNdmk0h/ysGyo2tavMJEDqJAkJdRa1vMA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"define-properties\": \"^1.1.3\",\n        \"es-abstract\": \"^1.19.0\",\n        \"functions-have-names\": \"^1.2.2\"\n      }\n    },\n    \"functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"dev\": true\n    },\n    \"gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n      \"dev\": true\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true\n    },\n    \"get-intrinsic\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.0.tgz\",\n      \"integrity\": \"sha512-L049y6nFOuom5wGyRc3/gdTLO94dySVKRACj1RmJZBQXlbTMhtNIgkWkUHq+jYmZvKf14EW1EoJnnjbmoHij0Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"function-bind\": \"^1.1.1\",\n        \"has\": \"^1.0.3\",\n        \"has-symbols\": \"^1.0.3\"\n      }\n    },\n    \"get-package-type\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz\",\n      \"integrity\": \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\",\n      \"dev\": true\n    },\n    \"get-stream\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n      \"dev\": true\n    },\n    \"get-symbol-description\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.0.tgz\",\n      \"integrity\": \"sha512-2EmdH1YvIQiZpltCNgkuiUnyukzxM/R6NDJX31Ke3BG1Nq5b0S2PhX59UKi9vZpPDQVdqn+1IcaAwnzTT5vCjw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.1\"\n      }\n    },\n    \"glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-glob\": \"^4.0.1\"\n      }\n    },\n    \"globals\": {\n      \"version\": \"11.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\",\n      \"integrity\": \"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\",\n      \"dev\": true\n    },\n    \"globalthis\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/globalthis/-/globalthis-1.0.3.tgz\",\n      \"integrity\": \"sha512-sFdI5LyBiNTHjRd7cGPWapiHWMOXKyuBNX/cWJ3NfzrZQVa8GI/8cofCl74AOVqq9W5kNmguTIzJ/1s2gyI9wA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"define-properties\": \"^1.1.3\"\n      }\n    },\n    \"globby\": {\n      \"version\": \"11.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n      \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"array-union\": \"^2.1.0\",\n        \"dir-glob\": \"^3.0.1\",\n        \"fast-glob\": \"^3.2.9\",\n        \"ignore\": \"^5.2.0\",\n        \"merge2\": \"^1.4.1\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"slash\": {\n          \"version\": \"3.0.0\",\n          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"gopd\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"get-intrinsic\": \"^1.1.3\"\n      }\n    },\n    \"graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n      \"dev\": true\n    },\n    \"grapheme-splitter\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/grapheme-splitter/-/grapheme-splitter-1.0.4.tgz\",\n      \"integrity\": \"sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==\",\n      \"dev\": true\n    },\n    \"has\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\n      \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"function-bind\": \"^1.1.1\"\n      }\n    },\n    \"has-bigints\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz\",\n      \"integrity\": \"sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==\",\n      \"dev\": true\n    },\n    \"has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true\n    },\n    \"has-property-descriptors\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz\",\n      \"integrity\": \"sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"get-intrinsic\": \"^1.1.1\"\n      }\n    },\n    \"has-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-7qE+iP+O+bgF9clE5+UoBFzE65mlBiVj3tKCrlNQ0Ogwm0BjpT/gK4SlLYDMybDh5I3TCTKnPPa0oMG7JDYrhg==\",\n      \"dev\": true\n    },\n    \"has-symbols\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n      \"dev\": true\n    },\n    \"has-tostringtag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz\",\n      \"integrity\": \"sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-symbols\": \"^1.0.2\"\n      }\n    },\n    \"html-escaper\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz\",\n      \"integrity\": \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\",\n      \"dev\": true\n    },\n    \"human-signals\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n      \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n      \"dev\": true\n    },\n    \"husky\": {\n      \"version\": \"8.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/husky/-/husky-8.0.3.tgz\",\n      \"integrity\": \"sha512-+dQSyqPh4x1hlO1swXBiNb2HzTDN1I2IGLQx1GrBuiqFJfoMrnZWwVmatvSiO+Iz8fBUnf+lekwNo4c2LlXItg==\",\n      \"dev\": true\n    },\n    \"ignore\": {\n      \"version\": \"5.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.2.4.tgz\",\n      \"integrity\": \"sha512-MAb38BcSbH0eHNBxn7ql2NH/kX33OkB3lZ1BNdh7ENeRChHTYsTvWrMubiIAMNS2llXEEgZ1MUOBtXChP3kaFQ==\",\n      \"dev\": true\n    },\n    \"import-fresh\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"parent-module\": \"^1.0.0\",\n        \"resolve-from\": \"^4.0.0\"\n      }\n    },\n    \"import-local\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-local/-/import-local-3.1.0.tgz\",\n      \"integrity\": \"sha512-ASB07uLtnDs1o6EHjKpX34BKYDSqnFerfTOJL2HvMqF70LnxpjkzDB8J44oT9pu4AMPkQwf8jl6szgvNd2tRIg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"pkg-dir\": \"^4.2.0\",\n        \"resolve-cwd\": \"^3.0.0\"\n      }\n    },\n    \"imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"dev\": true\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"internal-slot\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.5.tgz\",\n      \"integrity\": \"sha512-Y+R5hJrzs52QCG2laLn4udYVnxsfny9CpOhNhUvk/SSSVyF6T27FzRbF0sroPidSu3X8oEAkOn2K804mjpt6UQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"get-intrinsic\": \"^1.2.0\",\n        \"has\": \"^1.0.3\",\n        \"side-channel\": \"^1.0.4\"\n      }\n    },\n    \"is-arguments\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz\",\n      \"integrity\": \"sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      }\n    },\n    \"is-array-buffer\": {\n      \"version\": \"3.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.2.tgz\",\n      \"integrity\": \"sha512-y+FyyR/w8vfIRq4eQcM1EYgSTnmHXPqaF+IgzgraytCFq5Xh8lllDVmAZolPJiZttZLeFSINPYMaEJ7/vWUa1w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.2.0\",\n        \"is-typed-array\": \"^1.1.10\"\n      }\n    },\n    \"is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\",\n      \"dev\": true\n    },\n    \"is-bigint\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz\",\n      \"integrity\": \"sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-bigints\": \"^1.0.1\"\n      }\n    },\n    \"is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"requires\": {\n        \"binary-extensions\": \"^2.0.0\"\n      }\n    },\n    \"is-boolean-object\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz\",\n      \"integrity\": \"sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      }\n    },\n    \"is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"dev\": true\n    },\n    \"is-core-module\": {\n      \"version\": \"2.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz\",\n      \"integrity\": \"sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has\": \"^1.0.3\"\n      }\n    },\n    \"is-date-object\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n      \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      }\n    },\n    \"is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true\n    },\n    \"is-generator-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==\",\n      \"dev\": true\n    },\n    \"is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-extglob\": \"^2.1.1\"\n      }\n    },\n    \"is-map\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-map/-/is-map-2.0.2.tgz\",\n      \"integrity\": \"sha512-cOZFQQozTha1f4MxLFzlgKYPTyj26picdZTx82hbc/Xf4K/tZOOXSCkMvU4pKioRXGDLJRn0GM7Upe7kR721yg==\",\n      \"dev\": true\n    },\n    \"is-negative-zero\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.2.tgz\",\n      \"integrity\": \"sha512-dqJvarLawXsFbNDeJW7zAz8ItJ9cd28YufuuFzh0G8pNHjJMnY08Dv7sYX2uF5UpQOwieAeOExEYAWWfu7ZZUA==\",\n      \"dev\": true\n    },\n    \"is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true\n    },\n    \"is-number-object\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz\",\n      \"integrity\": \"sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-tostringtag\": \"^1.0.0\"\n      }\n    },\n    \"is-path-inside\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n      \"dev\": true\n    },\n    \"is-regex\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n      \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.0\"\n      }\n    },\n    \"is-set\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-set/-/is-set-2.0.2.tgz\",\n      \"integrity\": \"sha512-+2cnTEZeY5z/iXGbLhPrOAaK/Mau5k5eXq9j14CpRTftq0pAJu2MwVRSZhyZWBzx3o6X795Lz6Bpb6R0GKf37g==\",\n      \"dev\": true\n    },\n    \"is-shared-array-buffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-sqN2UDu1/0y6uvXyStCOzyhAjCSlHceFoMKJW8W9EU9cvic/QdsZ0kEU93HEy3IUEFZIiH/3w+AH/UQbPHNdhA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"call-bind\": \"^1.0.2\"\n      }\n    },\n    \"is-stream\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n      \"dev\": true\n    },\n    \"is-string\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.3720703125,
          "content": "{\n  \"name\": \"javascript-algorithms-and-data-structures\",\n  \"version\": \"0.0.4\",\n  \"description\": \"Algorithms and data-structures implemented on JavaScript\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/trekhleb/javascript-algorithms.git\"\n  },\n  \"keywords\": [\n    \"computer-science\",\n    \"cs\",\n    \"algorithms\",\n    \"data-structures\",\n    \"javascript\",\n    \"algorithm\",\n    \"javascript-algorithms\",\n    \"sorting-algorithms\",\n    \"graph\",\n    \"tree\",\n    \"interview\",\n    \"interview-preparation\"\n  ],\n  \"author\": \"Oleksii Trekhleb (https://trekhleb.dev)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/trekhleb/javascript-algorithms/issues\"\n  },\n  \"homepage\": \"https://github.com/trekhleb/javascript-algorithms#readme\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"lint\": \"eslint ./src/**\",\n    \"test\": \"jest\",\n    \"coverage\": \"npm run test -- --coverage\",\n    \"ci\": \"npm run lint && npm run coverage\",\n    \"prepare\": \"husky install\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"7.20.7\",\n    \"@babel/preset-env\": \"7.20.2\",\n    \"@types/jest\": \"29.4.0\",\n    \"eslint\": \"8.33.0\",\n    \"eslint-config-airbnb\": \"19.0.4\",\n    \"eslint-plugin-import\": \"2.27.5\",\n    \"eslint-plugin-jest\": \"27.2.1\",\n    \"eslint-plugin-jsx-a11y\": \"6.7.1\",\n    \"husky\": \"8.0.3\",\n    \"jest\": \"29.4.1\",\n    \"pngjs\": \"^7.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=16.15.0\",\n    \"npm\": \">=8.5.5\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}