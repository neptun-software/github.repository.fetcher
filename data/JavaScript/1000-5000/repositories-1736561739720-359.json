{
  "metadata": {
    "timestamp": 1736561739720,
    "page": 359,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nodejs/Release",
      "stars": 4058,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.107421875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": "CODENAMES.md",
          "type": "blob",
          "size": 0.5048828125,
          "content": "This file contains a list of codenames for LTS releases. Codenames for future\nreleases are subject to change.\n\n* Argon (4.x 2015)\n* Boron (6.x 2016)\n* Carbon (8.x 2017)\n* Dubnium (10.x 2018)\n* Erbium (12.x 2019)\n* Fermium (14.x 2020)\n* Gallium (16.x 2021)\n* Hydrogen (18.x 2022)\n* Iron (20.x 2023)\n* Jod (22.x 2024)\n* Krypton (24.x 2025)\n* Lithium (26.x 2026)\n* Magnesium (28.x 2027)\n* Neon (30.x 2028)\n* Oxygen (32.x 2029)\n* Platinum (34.x 2030)\n\nThe release schedule is available as a [JSON](./schedule.json) file.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1982421875,
          "content": "# Code of Conduct\n\n* [Node.js Code of Conduct](https://github.com/nodejs/admin/blob/main/CODE_OF_CONDUCT.md)\n* [Node.js Moderation Policy](https://github.com/nodejs/admin/blob/main/Moderation-Policy.md)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.5234375,
          "content": "<a id=\"developers-certificate-of-origin\"></a>\n## Developer's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n    * (a) The contribution was created in whole or in part by me and I\n      have the right to submit it under the open source license\n      indicated in the file; or\n\n    * (b) The contribution is based upon previous work that, to the best\n      of my knowledge, is covered under an appropriate open source\n      license and I have the right under that license to submit that\n      work with modifications, whether created in whole or in part\n      by me, under the same open source license (unless I am\n      permitted to submit under a different license), as indicated\n      in the file; or\n\n    * (c) The contribution was provided directly to me by some other\n      person who certified (a), (b) or (c) and I have not modified\n      it.\n\n    * (d) I understand and agree that this project and the contribution\n      are public and that a record of the contribution (including all\n      personal information I submit with it, including my sign-off) is\n      maintained indefinitely and may be redistributed consistent with\n      this project or the open source license(s) involved.\n\n\n### Moderation Policy\n\nThe [Node.js Moderation Policy] applies to this WG.\n\n### Code of Conduct\n\nThe [Node.js Code of Conduct][] applies to this WG.\n\n[Node.js Code of Conduct]: https://github.com/nodejs/TSC/blob/main/CODE_OF_CONDUCT.md\n[Node.js Moderation Policy]: https://github.com/nodejs/TSC/blob/main/Moderation-Policy.md\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 11.94921875,
          "content": "# Release Working Group\n\nThe Node.js Release Working Group (WG) maintains oversight\nover the Node.js Release and\nCanary in the Gold Mine (CitGM) teams. It manages the release\nand long term support schedule and policies for all Node.js releases.\n\nThe WG has final authority over Releases including:\n\n* Release process and tools.\n* Content for all releases.\n* Schedule for all releases.\n* Contribution policy for the Release repository.\n* Conduct guidelines for the Working group.\n* Administration of Long Term Support policy for all releases.\n\nFor the current list of WG members, see the project README.md.\n\n## Collaborators\n\nThe Release GitHub repository is maintained by the WG (all WG\nmembers are Collaborators for the Release repository) and additional\nCollaborators who are added by the WG on an ongoing basis.\n\nIndividuals making significant and valuable contributions are made\nCollaborators and given commit-access to the Release repository.\nThese individuals are identified by the WG and their addition\nas Collaborators is discussed during the WG meeting.\n\n**Note**: If you make a significant contribution and are not considered for\ncommit access, log an issue or contact a WG member directly and it will\nbe brought up in the next WG meeting.\n\nModifications of the contents of the Release repository are made\non a collaborative basis. Anybody with a GitHub account may propose a\nmodification via pull request and it will be considered by the project\nCollaborators. All pull requests must be reviewed and accepted by a\nCollaborator with sufficient expertise who is able to take full responsibility\nfor the change. In the case of pull requests proposed by an existing\nCollaborator, an additional Collaborator is required for sign-off. Consensus\nshould be sought if additional Collaborators participate and there is\ndisagreement around a particular modification. See Consensus Seeking\nProcess below for further detail on the consensus model used for governance.\n\nCollaborators may opt to elevate significant or controversial modifications,\nor modifications that have not found consensus to the WG for discussion by\nassigning the WG-agenda tag to a pull request or issue. The WG should serve\nas the final arbiter where required.\n\n## WG Membership\n\nWG seats are not time-limited. There is no fixed size of the WG.\n\nThere is no specific set of requirements or qualifications\nfor WG membership beyond these rules.\n\nThe WG may add additional members to the WG by consensus (defined\nas no objections, more than 50% of the members participating in the\ndiscussion, and all those participating in the discussion agreeing).\n\nA WG member may be removed from the WG by voluntary resignation,\nor by unanimous consensus of all other WG members. If a member is\nremoved from the WG, then they are also removed from all WG teams\n(including the Releasers team).\n\nChanges to WG membership should be posted in the agenda, and may be\nsuggested as any other agenda item (see \"WG Meetings\" below).\n\nIf an addition or removal is proposed during a meeting, and the full WG\nis not in attendance to participate, then the addition or removal is\nadded to the agenda for the subsequent meeting. This is to ensure\nthat all members are given the opportunity to participate in all\nmembership decisions. If a WG member is unable to attend a meeting\nwhere a planned membership decision is being made,\nthen their consent is assumed.\n\nNo more than 1/3 of the voting WG members may be affiliated with the same\nemployer. If removal or resignation of a WG member, or a change of\nemployment by a WG member, creates a situation where more than 1/3\nof the WG membership shares an employer, then the situation must be\nimmediately remedied by the resignation or removal of one or more\nWG members affiliated with the over-represented employer(s).\n\n## WG Meetings\n\nThe WG meets regularly, check the foundation calendar for details.\nOne of the WG members will volunteer to act as the moderator\nfor each meeting subject to agreement from the rest of the\nmembers. Each meeting should be published to YouTube.\n\nItems are added to the WG agenda that are considered contentious or are\nmodifications of governance, contribution policy,\nWG membership, or release process.\n\nThe intention of the agenda is not to approve or review all patches;\nthat should happen continuously on GitHub and be handled\nby the larger group of Collaborators.\n\nAny community member or contributor can ask that something be\nadded to the next meeting's agenda by logging a GitHub Issue.\nAny Collaborator, WG member or the moderator can add the item\nto the agenda by adding the WG-agenda tag to the issue.\n\nPrior to each WG meeting, the moderator will share the Agenda with\nmembers of the WG. WG members can add any items they like to the\nagenda at the beginning of each meeting.\n\nThe WG may invite persons or representatives from certain\nprojects to participate in a non-voting capacity.\n\nThe moderator is responsible for summarizing the discussion of\neach agenda item and sends it as a pull request after the meeting.\n\n## Consensus Seeking Process\n\nThe WG follows a Consensus Seeking decision-making model.\n\nWhen an agenda item has appeared to reach a consensus the moderator\nwill ask \"Does anyone object?\" as a final call for dissent from the consensus.\n\nIf an agenda item cannot reach a consensus, a WG member can call for either a\nclosing vote or a vote to table the issue to the next meeting. The call for\na vote must be seconded by a majority of the WG or else the\ndiscussion will continue. Simple majority wins.\n\nNote that changes to WG membership require unanimous consensus.\nSee \"WG Membership\" above.\n\n## Adding new releasers\n\nWhile participation in the Working Group (WG) is open, the role of a releaser is considered critical within the Node.js Org. As per our policy, it is expected that a releaser either be an existing collaborator or someone soon to be nominated. To facilitate a smoother process for future nominations, it is recommended not to self-nominate as a releaser. Instead, it is advised to approach the releasers team directly in private. This allows the team to assist you in preparing your nomination and facilitates internal discussions at nodejs/releasers team.\n\nWhen considering adding a new releaser, an email should be sent to the\n[Technical Steering Committee](https://github.com/nodejs/tsc) for approval.\nAfter approval, the nominee will be assigned a mentor from the releasers team\nto help walk them through the process to learn how to prepare a release.\n\nThe nominee will then be expected to prepare one release on any active release\nline, which can be tagged, signed and promoted by any other existing member of\nthe releasers team. After this release, the nominee will be considered a full\nmember of the releasers team. The first release promoted by a new releasers\nteam member must have a mentor from the current releasers team available to\nsupport during the process.\n\nAt any point during this process, any member of the Release WG can raise an\nobjection to the TSC.\n\nAfter the nominee's first prepared release has been promoted, the new releaser must:\n\n* Be added to the GitHub [releasers team](https://github.com/orgs/nodejs/teams/releasers) in the Node.js org (grants ci-release access)\n* Be added to the GitHub [security-release team](https://github.com/orgs/nodejs/teams/security-release) in the Node.js and nodejs-private orgs\n* Have a single, high quality SSH key added to the \"dist\" user on the primary www server (see below for guidelines regarding SSH key quality)\n* Add your GPG key to your GitHub account for verification. [Github Guide](https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-gpg-key-to-your-github-account).\n  * Check that the key is added in your profile: `https://github.com/your-username.gpg`\n* Open a PR to add their GPG key to the nodejs/node [README.md](https://github.com/nodejs/node/#release-keys)\n  * Once landed, the key should be cherry-picked to all active release staging branches (i.e. the active `vMM.x-staging` branches).\n  * Any future updates to the key should also be cherry-picked to all active release staging branches.\n* Open a PR in [nodejs/docker-node](https://github.com/nodejs/docker-node/) to add their GPG key to [node.keys](https://github.com/nodejs/docker-node/blob/main/keys/node.keys).\n* Open a PR in [nodejs/release-keys](https://github.com/nodejs/release-keys) to add their GPG key via `./cli.sh add $KEY_ID`.\n* Open a PR in [nodejs/Release](https://github.com/nodejs/Release) to add themselves under the \"Releasers team\" heading via `ncu-team sync README.md`.\n* Add them to the `#nodejs-release-private` team on the OpenJS Slack.\n\nNew releasers should wait at least 2 weeks after adding a GPG key to the\nnodejs/node README credentials before signing a release.\n\n**Actual or suspected compromise of either private SSH or GPG keys must be\nreported to the TSC immediately so remedial action can be taken.**\n\nFor releasing on LTS release lines, releasers must:\n\n* Be added as members of the GitHub [Release team](https://github.com/orgs/nodejs/teams/releasers)\n* Fully release at least one Current Node.js release; for practice, and to help promote the new GPG key to the user ecosystem prior to it being required to verify an LTS release\n\n### SSH key guidance\n\nSSH keys should have complexity roughly similar to RSA at 4096 bits to be\nconsidered secure in modern environments.\n\nAn RSA key with 4096 bits can be generated with the following command:\n\n```\nssh-keygen -t rsa -b 4096 -o -a 100 -N ''\n```\n\nBy default, the resulting private key will be placed in `~/.ssh/id_rsa` and\npublic key in `~/.ssh/id_rsa.pub`. You can write the key to a Node namespace with\nthe `-f` flag:\n\n```\nssh-keygen -t rsa -b 4096 -o -a 100 -N '' -f ~/.ssh/node_id_rsa\n```\n\nEd25519 is an elliptic curve DSA algorithm that offers similar complexity to\nRSA at 4096 bits but is significantly smaller in file size. It is not supported\nby very old versions of OpenSSH but that is not a concern for Node.js. An\nEd25519 SSH key can be generated with the following command:\n\n```\nssh-keygen -t ed25519 -a 100 -N ''\n```\n\nBy default, the resulting private key will be placed in `~/.ssh/id_ed25519` and\npublic key in `~/.ssh/id_ed25519.pub`.\n\nThe public key can be shared with an existing member of the releasers team to be\nplaced on the www server for access to the \"dist\" user. The private key should\nbe kept very secure and not shared with anyone. Any actual or suspected\ncompromise of the private key should be reported immediately and the key should\nbe entirely removed from use.\n\n## Offboarding releasers\n\n*Note*: This section is specifically concerning removing members from the [@nodejs/releasers](https://github.com/orgs/nodejs/teams/releasers) team, not removing members from the overall Release WG.\n\nReleasers have access to critical infrastructure in the project - this elevated access must be restricted to active releasers. Members of the releasers team should be offboarded when they no longer intend to prepare releases. As a guideline, offboarding should be considered if a releaser has not prepared a release in the past 12 months.\n\nThe following steps should be taken as part of the offboarding process:\n* Be removed from the GitHub [releasers team](https://github.com/orgs/nodejs/teams/releasers) in the Node.js organizations.\n* Be removed from the GitHub [security-release team](https://github.com/orgs/nodejs/teams/security-release) in the Node.js and nodejs-private organizations.\n* Ensure their SSH key is removed from the `dist` user on the primary www server.\n* Move their GPG key in nodejs/node [README.md](https://github.com/nodejs/node/#release-keys) to the 'Other keys used to sign some previous releases' section.\n* Open a PR in [nodejs/docker-node](https://github.com/nodejs/docker-node/) to remove their GPG key from [node.keys](https://github.com/nodejs/docker-node/blob/main/keys/node.keys).\n* Ensure they are moved to 'Emeritus - Releasers team' in the nodejs/release [README](https://github.com/nodejs/Release/blob/main/README.md).\n* Remove them from the `#nodejs-release-private` team on the OpenJS Slack.\n\nReleasers are not automatically removed from the wider Release WG.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13,
          "content": "# Node.js Release Working Group\n\n## Release schedule\n\n| Release  | Status              | Codename     |Initial Release | Active LTS Start | Maintenance Start | End-of-life               |\n| :--:     | :---:               | :---:        | :---:          | :---:            | :---:             | :---:                     |\n| [18.x][] | **Maintenance**     | [Hydrogen][] | 2022-04-19     | 2022-10-25       | 2023-10-18        | 2025-04-30                |\n| [20.x][] | **Maintenance**     | [Iron][]     | 2023-04-18     | 2023-10-24       | 2024-10-22        | 2026-04-30                |\n| [22.x][] | **LTS**             | [Jod][]      | 2024-04-24     | 2024-10-29       | 2025-10-21        | 2027-04-30                |\n| [23.x][] | **Current**         |              | 2024-10-15     | -                | 2025-04-01        | 2025-06-01                |\n| 24.x     | **Pending**         |              | 2025-04-22     | 2025-10-28       | 2026-10-20        | 2028-04-30                |\n\nDates are subject to change.\n\n<p><img src=\"schedule.svg\" alt=\"LTS Schedule\"/></p>\n\nThe Release schedule is available also as a [JSON][] file.\n\n### Release Phases\n\nThere are three phases that a Node.js release can be in: 'Current', 'Active\nLong Term Support (LTS)', and 'Maintenance'. Odd-numbered release lines are not\npromoted to LTS - they will not go through the 'Active LTS' or 'Maintenance'\nphases.\n\n * Current - Should incorporate most of the non-major (non-breaking)\n changes that land on `nodejs/node` main branch.\n * Active LTS - New features, bug fixes, and updates that have been audited by\n the Release team and have been determined to be appropriate and stable for the\n release line.\n * Maintenance - Critical bug fixes and security updates. New features may be\n added at the discretion of the Release team - typically only in cases where\n the new feature supports migration to later release lines.\n\nChanges required for critical security and bug fixes may lead to *semver-major*\nchanges landing within a release stream, such situations will be rare and will\nland as *semver-minor*. Although, those changes should have a revert option included.\n\nThe term 'supported release lines' will be used to refer to all release lines\nthat are not End-of-Life.\n\n### End-of-Life Releases\n\n|  Release |      Status     |  Codename | Initial Release | Active LTS Start | Maintenance LTS Start | End-of-life |\n|:--------:|:---------------:|:---------:|:---------------:|:----------------:|:---------------------:|:-----------:|\n|  v0.10.x | **End-of-Life** |     -     |    2013-03-11   |         -        |       2015-10-01      |  2016-10-31 |\n|  v0.12.x | **End-of-Life** |     -     |    2015-02-06   |         -        |       2016-04-01      |  2016-12-31 |\n|  [4.x][] | **End-of-Life** | [Argon][] |    2015-09-08   |    2015-10-01    |       2017-04-01      |  2018-04-30 |\n|  [5.x][] | **End-of-Life** |           |    2015-10-29   |         -        |                       |  2016-06-30 |\n|  [6.x][] | **End-of-Life** | [Boron][] |    2016-04-26   |    2016-10-18    |       2018-04-30      |  2019-04-30 |\n|  [7.x][] | **End-of-Life** |           |    2016-10-25   |         -        |                       |  2017-06-30 |\n|  [8.x][] | **End-of-Life** | [Carbon][]|    2017-05-30   |    2017-10-31    |       2019-01-01      |  2019-12-31 |\n|  [9.x][] | **End-of-Life** |           |    2017-10-01   |         -        |                       |  2018-06-30 |\n| [10.x][] | **End-of-Life** |[Dubnium][]|    2018-04-24   |    2018-10-30    |       2020-05-19      |  2021-04-30 |\n| [11.x][] | **End-of-Life** |           |    2018-10-23   |         -        |                       |  2019-06-01 |\n| [12.x][] | **End-of-Life** | [Erbium][]|    2019-04-23   |    2019-10-21    |       2020-11-30      |  2022-04-30 |\n| [13.x][] | **End-of-Life** |           |    2019-10-22   |         -        |                       |  2020-06-01 |\n| [14.x][] | **End-of-Life** |[Fermium][]|    2020-04-21   |    2020-10-27    |       2021-10-19      |  2023-04-30 |\n| [15.x][] | **End-of-Life** |           |    2020-10-20   |         -        |                       |  2021-06-01 |\n| [16.x][] | **End-of-Life** |[Gallium][]|    2021-04-20   |    2021-10-26    |       2022-10-18      | [2023-09-11][nodejs16eol] |\n| [17.x][] | **End-of-Life** |           |    2021-10-19   |         -        |                       |  2022-06-01 |\n| [19.x][] | **End-of-Life** |           |    2022-10-18   |         -        |                       |  2023-06-01 |\n| [21.x][] | **End-of-Life** |           |    2023-10-17   |         -        |       2024-04-01      |  2024-06-01 |\n\n## Mandate\n\nThe Release working group's purpose is:\n\n* Management/execution of the release and support process for all releases.\n\nIts responsibilities are:\n\n* Define the release process.\n* Define the content of releases.\n* Generate and create releases.\n* Test Releases.\n* Manage the LTS and Current branches including backporting changes to\n  these branches.\n* Define the policy for what gets backported to release streams.\n\nThe Release working group is structured into teams and membership in\nthe working group does not automatically result in membership in these\nteams. These teams are:\n\n* Releasers team\n* Backporters team\n* CITGM team\n\nThe `releasers` team is entrusted with the secrets and CI access to be able\nbuild and sign releases. **Additions to the releasers team must be approved\nby the TSC following the process outlined in GOVERNANCE.md.**\n\nThe Release team manages the process/content of LTS releases\nand the required backporting for these releases. Additions to the Release\nteam needs sign off from the rest of the Release team.\n\nThe Canary in the Gold Mine (CITGM) team maintains CITGM as one of\nthe key sanity checks for releases. This team maintains the CITGM\nrepository and works to keep CITGM builds running and passing regularly.\nThis also includes maintaining the CI jobs in collaboration with the Build\nWorking Group.\n\n## Release Plan\n\nNew *semver-major* releases of Node.js are branched from `main` every six\nmonths. New even-numbered versions are released in April and odd-numbered\nversions in October.\n\nIn coordination with a new *odd-numbered* major release, the previous\n*even-numbered* major version will transition to Long Term Support. The\ntransition to Long Term Support will happen in a *semver-minor* release and\nshould happen after the new major version is released.\n\nEvery even (LTS) major version will be actively maintained for 12 months from\nthe date it enters LTS coverage. Following those 12 months of active support,\nthe major version will transition into \"maintenance\" mode for 18 months. Prior\nto Node.js 12, the active period was 18 months and the maintenance period 12\nmonths. See [Releases Phases](#release-phases) for details of which changes\nare expected to land during each release phase.\n\nThe exact date that a release will be moved to LTS, moved between LTS modes,\nor deprecated will be chosen no later than the first day of the month it is to\nchange. If the release team plans to change the release date, it will be done\nwith no less than 14 days notice.\n\nAll LTS releases will be assigned a codename. A list of expected upcoming\ncodenames is available in [CODENAMES.md](./CODENAMES.md).\n\n### LTS Staging Branches\n\nEvery LTS major version has two branches in the GitHub repository: a release\nbranch and a staging branch. The release branch is used to cut new releases.\nOnly members of the @nodejs/releasers team should land commits onto release branches.\nThe staging branch is used to land cherry-picked or backported commits from\nmain that need to be included in a future release. Only members of\n@nodejs/backporters should land commits onto staging branches.\n\nFor example, for Node.js v4, there is a `v4.x` branch and a `v4.x-staging`\nbranch. When commits land in main that must be cherry-picked for a future\nNode.js v4 release, those must be landed into the `v4.x-staging` branch. When\ncommits are backported for a future Node.js v4 release, those must come in the\nform of pull requests opened against the `v4.x-staging` branch. **Commits are\nonly landed in the `v4.x` branch when a new `v4.x` release is being prepared.**\n\nGenerally, changes are expected to live in a *Current* release for at least 2\nweeks before being backported. It is possible for a commit to land earlier at\nthe discretion of the Release working group.\n\n[Argon]: https://nodejs.org/download/release/latest-argon/\n[Boron]: https://nodejs.org/download/release/latest-boron/\n[Carbon]: https://nodejs.org/download/release/latest-carbon/\n[Dubnium]: https://nodejs.org/download/release/latest-dubnium/\n[Erbium]: https://nodejs.org/download/release/latest-erbium/\n[Fermium]: https://nodejs.org/download/release/latest-fermium/\n[Gallium]: https://nodejs.org/download/release/latest-gallium/\n[Hydrogen]: https://nodejs.org/download/release/latest-hydrogen/\n[Iron]: https://nodejs.org/download/release/latest-iron/\n[Jod]: https://nodejs.org/download/release/latest-jod/\n[JSON]: schedule.json\n[nodejs16eol]: https://nodejs.org/en/blog/announcements/nodejs16-eol/\n[4.x]: https://nodejs.org/download/release/latest-v4.x/\n[5.x]: https://nodejs.org/download/release/latest-v5.x/\n[6.x]: https://nodejs.org/download/release/latest-v6.x/\n[7.x]: https://nodejs.org/download/release/latest-v7.x/\n[8.x]: https://nodejs.org/download/release/latest-v8.x/\n[9.x]: https://nodejs.org/download/release/latest-v9.x/\n[10.x]: https://nodejs.org/download/release/latest-v10.x/\n[11.x]: https://nodejs.org/download/release/latest-v11.x/\n[12.x]: https://nodejs.org/download/release/latest-v12.x/\n[13.x]: https://nodejs.org/download/release/latest-v13.x/\n[14.x]: https://nodejs.org/download/release/latest-v14.x/\n[15.x]: https://nodejs.org/download/release/latest-v15.x/\n[16.x]: https://nodejs.org/download/release/latest-v16.x/\n[17.x]: https://nodejs.org/download/release/latest-v17.x/\n[18.x]: https://nodejs.org/download/release/latest-v18.x/\n[19.x]: https://nodejs.org/download/release/latest-v19.x/\n[20.x]: https://nodejs.org/download/release/latest-v20.x/\n[21.x]: https://nodejs.org/download/release/latest-v21.x/\n[22.x]: https://nodejs.org/download/release/latest-v22.x/\n[23.x]: https://nodejs.org/download/release/latest-v23.x/\n\nThe working group members are the union of the Releasers, Backporters\nand CITGM team members listed below.\n\n### Backporters team\n\n<!-- ncu-team-sync.team(nodejs/backporters) -->\n\n* [@BethGriggs](https://github.com/BethGriggs) - Bethany Griggs\n* [@codebytere](https://github.com/codebytere) - Shelley Vohr\n* [@danielleadams](https://github.com/danielleadams) - Danielle Adams\n* [@guybedford](https://github.com/guybedford) - Guy Bedford\n* [@mhdawson](https://github.com/mhdawson) - Michael Dawson\n* [@RafaelGSS](https://github.com/RafaelGSS) - Rafael Gonzaga\n* [@richardlau](https://github.com/richardlau) - Richard Lau\n\n<!-- ncu-team-sync end -->\n\n## Releasers team\n\n<!-- ncu-team-sync.team(nodejs/releasers) -->\n\n* [@juanarbol](https://github.com/juanarbol) - Juan José\n* [@marco-ippolito](https://github.com/marco-ippolito) - Marco Ippolito\n* [@RafaelGSS](https://github.com/RafaelGSS) - Rafael Gonzaga\n* [@richardlau](https://github.com/richardlau) - Richard Lau\n* [@ruyadorno](https://github.com/ruyadorno) - Ruy Adorno\n* [@targos](https://github.com/targos) - Michaël Zasso\n* [@UlisesGascon](https://github.com/UlisesGascon) - Ulises Gascón\n\n<!-- ncu-team-sync end -->\n\n## CITGM team\n\n* https://github.com/nodejs/citgm#citgm-team\n\n## Emeritus\n\n### LTS team\n- [@addaleax](https://github.com/addaleax) - Anna Henningsen\n- [@BethGriggs](https://github.com/BethGriggs) - Bethany Griggs\n- [@bnoordhuis](https://github.com/bnoordhuis) - Ben Noordhuis\n- [@danielleadams](https://github.com/danielleadams) - Danielle Adams\n- [@ErisDS](https://github.com/ErisDS) - Hannah Wolfe\n- [@Fishrock123](https://github.com/Fishrock123) - Jeremiah Senkpiel\n- [@geek](https://github.com/geek) - Wyatt Preul\n- [@gibfahn](https://github.com/gibfahn) - Gibson Fahnestock\n- [@jasnell](https://github.com/jasnell) - James M Snell\n- [@MylesBorins](https://github.com/MylesBorins) - Myles Borins\n- [@othiym23](https://github.com/othiym23) - Forrest L Norvell\n- [@rvagg](https://github.com/rvagg) - Rod Vagg\n- [@sam-github](https://github.com/sam-github) - Sam Roberts\n- [@shigeki](https://github.com/shigeki) - Shigeki Ohtsu\n- [@srl295](https://github.com/srl295) - Steven R. Loomis\n- [@trevnorris](https://github.com/trevnorris) - Trevor Norris\n- [@yunong](https://github.com/yunong) - Yunong Xiao\n\n### Releasers team\n- [@bengl](https://github.com/bengl) - Bryan English\n- [@BethGriggs](https://github.com/BethGriggs) - Bethany Griggs\n- [@BridgeAR](https://github.com/BridgeAR) - Ruben Bridgewater\n- [@cjihrig](https://github.com/cjihrig) - Colin Ihrig\n- [@codebytere](https://github.com/codebytere) - Shelley Vohr\n- [@danielleadams](https://github.com/danielleadams) - Danielle Adams\n- [@evanlucas](https://github.com/evanlucas) - Evan Lucas\n- [@Fishrock123](https://github.com/Fishrock123) - Jeremiah Senkpiel\n- [@gibfahn](https://github.com/gibfahn) - Gibson Fahnestock\n- [@jasnell](https://github.com/jasnell) - James M Snell\n- [@MylesBorins](https://github.com/MylesBorins) - Myles Borins\n- [@rvagg](https://github.com/rvagg) - Rod Vagg\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "generateReleasePlan.cjs",
          "type": "blob",
          "size": 1.3359375,
          "content": "#!/usr/bin/env node\n\n'use strict';\n// Generate Release Plan table for a given release line.\n// Usage:\n// node --harmony-temporal generateReleasePlan.cjs vxx\n\nconst schedule = require('./schedule.json');\n\nconst [,, version] = process.argv;\n\nif (!Object.hasOwn(schedule, version)) {\n\tthrow new Error(`Unknown version ${version}, accepted values are ${Object.keys(schedule)}`);\n}\n\nconsole.log(`_Draft schedule - all dates subject to change_\n\nVersion | Release Date | Releaser\n--------|--------------| -------------`);\n\nconst { start, maintenance, lts } = schedule[version];\n\nconst ltsDateTime = lts && Temporal.PlainDate.from(lts);\nconst maintenanceDateTime = Temporal.PlainDate.from(maintenance);\n\nconst isNowDuringLTS = lts && Temporal.PlainDate.compare(Temporal.Now.plainDateTimeISO(), ltsDateTime) > 0;\n\nconst startOfCycle = isNowDuringLTS ? ltsDateTime : Temporal.PlainDate.from(start);\nconst endOfCycle = isNowDuringLTS ? maintenanceDateTime : ltsDateTime || maintenanceDateTime;\n\nconst weeks = isNowDuringLTS ? 4 : 2;\n\nfor (let i = startOfCycle; Temporal.PlainDate.compare(i, endOfCycle) === -1; i = i.add({ weeks })) {\n\tconsole.log(`${version}.x.x |  ${i}  | `);\n}\n\nif (lts) {\n\tconsole.log(\n\t\t`${version}.x.x (${isNowDuringLTS ? 'Maintenance' : 'LTS'} transition) |  ${\n\t\t\tisNowDuringLTS ? maintenance : lts\n\t\t}  | ${isNowDuringLTS ? '_No release_' : ''}`,\n\t);\n}\n"
        },
        {
          "name": "schedule.json",
          "type": "blob",
          "size": 2.7890625,
          "content": "{\n  \"v0.8\": {\n    \"start\": \"2012-06-25\",\n    \"end\": \"2014-07-31\"\n  },\n  \"v0.10\": {\n    \"start\": \"2013-03-11\",\n    \"end\": \"2016-10-31\"\n  },\n  \"v0.12\": {\n    \"start\": \"2015-02-06\",\n    \"end\": \"2016-12-31\"\n  },\n  \"v4\": {\n    \"start\": \"2015-09-08\",\n    \"lts\": \"2015-10-12\",\n    \"maintenance\": \"2017-04-01\",\n    \"end\": \"2018-04-30\",\n    \"codename\": \"Argon\"\n  },\n  \"v5\": {\n    \"start\": \"2015-10-29\",\n    \"maintenance\": \"2016-04-30\",\n    \"end\": \"2016-06-30\"\n  },\n  \"v6\": {\n    \"start\": \"2016-04-26\",\n    \"lts\": \"2016-10-18\",\n    \"maintenance\": \"2018-04-30\",\n    \"end\": \"2019-04-30\",\n    \"codename\": \"Boron\"\n  },\n  \"v7\": {\n    \"start\": \"2016-10-25\",\n    \"maintenance\": \"2017-04-30\",\n    \"end\": \"2017-06-30\"\n  },\n  \"v8\": {\n    \"start\": \"2017-05-30\",\n    \"lts\": \"2017-10-31\",\n    \"maintenance\": \"2019-01-01\",\n    \"end\": \"2019-12-31\",\n    \"codename\": \"Carbon\"\n  },\n  \"v9\": {\n    \"start\": \"2017-10-01\",\n    \"maintenance\": \"2018-04-01\",\n    \"end\": \"2018-06-30\"\n  },\n  \"v10\": {\n    \"start\": \"2018-04-24\",\n    \"lts\": \"2018-10-30\",\n    \"maintenance\": \"2020-05-19\",\n    \"end\": \"2021-04-30\",\n    \"codename\": \"Dubnium\"\n  },\n  \"v11\": {\n    \"start\": \"2018-10-23\",\n    \"maintenance\": \"2019-04-22\",\n    \"end\": \"2019-06-01\"\n  },\n  \"v12\": {\n    \"start\": \"2019-04-23\",\n    \"lts\": \"2019-10-21\",\n    \"maintenance\": \"2020-11-30\",\n    \"end\": \"2022-04-30\",\n    \"codename\": \"Erbium\"\n  },\n  \"v13\": {\n    \"start\": \"2019-10-22\",\n    \"maintenance\": \"2020-04-01\",\n    \"end\": \"2020-06-01\"\n  },\n  \"v14\": {\n    \"start\": \"2020-04-21\",\n    \"lts\": \"2020-10-27\",\n    \"maintenance\": \"2021-10-19\",\n    \"end\": \"2023-04-30\",\n    \"codename\": \"Fermium\"\n  },\n  \"v15\": {\n    \"start\": \"2020-10-20\",\n    \"maintenance\": \"2021-04-01\",\n    \"end\": \"2021-06-01\"\n  },\n  \"v16\": {\n    \"start\": \"2021-04-20\",\n    \"lts\": \"2021-10-26\",\n    \"maintenance\": \"2022-10-18\",\n    \"end\": \"2023-09-11\",\n    \"codename\": \"Gallium\"\n  },\n  \"v17\": {\n    \"start\": \"2021-10-19\",\n    \"maintenance\": \"2022-04-01\",\n    \"end\": \"2022-06-01\"\n  },\n  \"v18\": {\n    \"start\": \"2022-04-19\",\n    \"lts\": \"2022-10-25\",\n    \"maintenance\": \"2023-10-18\",\n    \"end\": \"2025-04-30\",\n    \"codename\": \"Hydrogen\"\n  },\n  \"v19\": {\n    \"start\": \"2022-10-18\",\n    \"maintenance\": \"2023-04-01\",\n    \"end\": \"2023-06-01\"\n  },\n  \"v20\": {\n    \"start\": \"2023-04-18\",\n    \"lts\": \"2023-10-24\",\n    \"maintenance\": \"2024-10-22\",\n    \"end\": \"2026-04-30\",\n    \"codename\": \"Iron\"\n  },\n  \"v21\": {\n    \"start\": \"2023-10-17\",\n    \"maintenance\": \"2024-04-01\",\n    \"end\": \"2024-06-01\"\n  },\n  \"v22\": {\n    \"start\": \"2024-04-24\",\n    \"lts\": \"2024-10-29\",\n    \"maintenance\": \"2025-10-21\",\n    \"end\": \"2027-04-30\",\n    \"codename\": \"Jod\"\n  },\n  \"v23\": {\n    \"start\": \"2024-10-16\",\n    \"maintenance\": \"2025-04-01\",\n    \"end\": \"2025-06-01\"\n  },\n  \"v24\": {\n    \"start\": \"2025-04-22\",\n    \"lts\": \"2025-10-28\",\n    \"maintenance\": \"2026-10-20\",\n    \"end\": \"2028-04-30\",\n    \"codename\": \"\"\n  }\n}\n"
        },
        {
          "name": "schedule.svg",
          "type": "blob",
          "size": 7.71875,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"960\" height=\"500\"><defs><style type=\"text/css\"><![CDATA[ \n.current {\n  fill: #5fa04e;\n}\n.active {\n  fill: #229ad6;\n}\n.maintenance {\n  fill: #b1bcc2;\n}\n.unstable {\n  fill: #e99c40;\n}\n.bar-join {\n  fill: #ffffff;\n}\n.bar-join.unstable, .bar-join.current {\n  display: none;\n}\n.tick text {\n  font: 16px sans-serif;\n  fill: #89a19d;\n}\n.axis--y .tick text {\n  text-anchor: end;\n}\n.label {\n  fill: #fff;\n  font: 20px sans-serif;\n  font-weight: 100;\n  text-anchor: start;\n  dominant-baseline: middle;\n  text-transform: uppercase;\n} ]]></style></defs><g id=\"bar-container\" transform=\"translate(110, 30)\"><g class=\"axis axis--x\" fill=\"none\" font-size=\"10\" font-family=\"sans-serif\" text-anchor=\"middle\"><g class=\"tick\" opacity=\"1\" transform=\"translate(17.173245614035086,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Oct 2024</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(116.4813596491228,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\" stroke-dasharray=\"2,2\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Jan 2025</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(213.54166666666669,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Apr 2025</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(311.72587719298247,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\" stroke-dasharray=\"2,2\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Jul 2025</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(410.9890350877193,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Oct 2025</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(510.297149122807,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\" stroke-dasharray=\"2,2\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Jan 2026</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(607.3574561403508,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Apr 2026</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(705.5416666666667,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\" stroke-dasharray=\"2,2\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Jul 2026</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(804.8048245614035,0)\"><line stroke=\"#89a19d\" y2=\"440\" x1=\"0.5\" x2=\"0.5\"></line><text fill=\"#000\" y=\"0\" x=\"0.5\" dy=\"-10\">Oct 2026</text></g></g><g class=\"axis axis--y\" fill=\"none\" font-size=\"10\" font-family=\"sans-serif\" text-anchor=\"start\"><g class=\"tick\" opacity=\"1\" transform=\"translate(0,45.39682539682538)\"><line stroke=\"#e1e7e7\" x2=\"820\" y1=\"0.5\" y2=\"0.5\"></line><text fill=\"#000\" x=\"0\" y=\"0.5\" dy=\"0.32em\" dx=\"-10\">Main</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(0,115.23809523809523)\"><line stroke=\"#e1e7e7\" x2=\"820\" y1=\"0.5\" y2=\"0.5\"></line><text fill=\"#000\" x=\"0\" y=\"0.5\" dy=\"0.32em\" dx=\"-10\">Node.js 18</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(0,185.0793650793651)\"><line stroke=\"#e1e7e7\" x2=\"820\" y1=\"0.5\" y2=\"0.5\"></line><text fill=\"#000\" x=\"0\" y=\"0.5\" dy=\"0.32em\" dx=\"-10\">Node.js 20</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(0,254.92063492063494)\"><line stroke=\"#e1e7e7\" x2=\"820\" y1=\"0.5\" y2=\"0.5\"></line><text fill=\"#000\" x=\"0\" y=\"0.5\" dy=\"0.32em\" dx=\"-10\">Node.js 22</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(0,324.7619047619048)\"><line stroke=\"#e1e7e7\" x2=\"820\" y1=\"0.5\" y2=\"0.5\"></line><text fill=\"#000\" x=\"0\" y=\"0.5\" dy=\"0.32em\" dx=\"-10\">Node.js 23</text></g><g class=\"tick\" opacity=\"1\" transform=\"translate(0,394.6031746031747)\"><line stroke=\"#e1e7e7\" x2=\"820\" y1=\"0.5\" y2=\"0.5\"></line><text fill=\"#000\" x=\"0\" y=\"0.5\" dy=\"0.32em\" dx=\"-10\">Node.js 24</text></g><line y1=\"440\" y2=\"440\" x2=\"820\" stroke=\"#89a19d\"></line></g><g><rect class=\"bar unstable\" x=\"0\" y=\"20.952380952380935\" width=\"820\" height=\"48.88888888888889\"></rect><rect class=\"bar-join unstable\" x=\"-1\" y=\"20.952380952380935\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 0;\"></rect><text class=\"label\" x=\"15\" y=\"47.39682539682538\" style=\"opacity: 1;\">unstable</text></g><g><rect class=\"bar maintenance\" x=\"0\" y=\"90.79365079365078\" width=\"244.92105263157893\" height=\"48.88888888888889\"></rect><rect class=\"bar-join maintenance\" x=\"-1\" y=\"90.79365079365078\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 0;\"></rect><text class=\"label\" x=\"15\" y=\"117.23809523809523\" style=\"opacity: 1;\">maintenance</text></g><g><rect class=\"bar maintenance\" x=\"39.921052631578945\" y=\"160.63492063492063\" width=\"598.8157894736842\" height=\"48.88888888888889\"></rect><rect class=\"bar-join maintenance\" x=\"38.921052631578945\" y=\"160.63492063492063\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 1;\"></rect><text class=\"label\" x=\"54.921052631578945\" y=\"187.0793650793651\" style=\"opacity: 1;\">maintenance</text></g><g><rect class=\"bar active\" x=\"0\" y=\"160.63492063492063\" width=\"39.921052631578945\" height=\"48.88888888888889\"></rect><rect class=\"bar-join active\" x=\"-1\" y=\"160.63492063492063\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 0;\"></rect><text class=\"label\" x=\"15\" y=\"187.0793650793651\" style=\"opacity: 0;\">active</text></g><g><rect class=\"bar maintenance\" x=\"432.65789473684214\" y=\"230.47619047619048\" width=\"387.34210526315786\" height=\"48.88888888888889\"></rect><rect class=\"bar-join maintenance\" x=\"431.65789473684214\" y=\"230.47619047619048\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 1;\"></rect><text class=\"label\" x=\"447.65789473684214\" y=\"256.92063492063494\" style=\"opacity: 1;\">maintenance</text></g><g><rect class=\"bar active\" x=\"47.473684210526315\" y=\"230.47619047619048\" width=\"385.18421052631584\" height=\"48.88888888888889\"></rect><rect class=\"bar-join active\" x=\"46.473684210526315\" y=\"230.47619047619048\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 1;\"></rect><text class=\"label\" x=\"62.473684210526315\" y=\"256.92063492063494\" style=\"opacity: 1;\">active</text></g><g><rect class=\"bar current\" x=\"0\" y=\"230.47619047619048\" width=\"47.473684210526315\" height=\"48.88888888888889\"></rect><rect class=\"bar-join current\" x=\"-1\" y=\"230.47619047619048\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 0;\"></rect><text class=\"label\" x=\"15\" y=\"256.92063492063494\" style=\"opacity: 0;\">current</text></g><g><rect class=\"bar maintenance\" x=\"213.6315789473684\" y=\"300.31746031746036\" width=\"65.81578947368425\" height=\"48.88888888888889\"></rect><rect class=\"bar-join maintenance\" x=\"212.6315789473684\" y=\"300.31746031746036\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 1;\"></rect><text class=\"label\" x=\"228.6315789473684\" y=\"326.7619047619048\" style=\"opacity: 0;\">maintenance</text></g><g><rect class=\"bar current\" x=\"33.44736842105263\" y=\"300.31746031746036\" width=\"180.18421052631578\" height=\"48.88888888888889\"></rect><rect class=\"bar-join current\" x=\"32.44736842105263\" y=\"300.31746031746036\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 0;\"></rect><text class=\"label\" x=\"48.44736842105263\" y=\"326.7619047619048\" style=\"opacity: 1;\">current</text></g><g><rect class=\"bar active\" x=\"440.2105263157895\" y=\"370.15873015873024\" width=\"379.7894736842105\" height=\"48.88888888888889\"></rect><rect class=\"bar-join active\" x=\"439.2105263157895\" y=\"370.15873015873024\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 1;\"></rect><text class=\"label\" x=\"455.2105263157895\" y=\"396.6031746031747\" style=\"opacity: 1;\">active</text></g><g><rect class=\"bar current\" x=\"236.28947368421052\" y=\"370.15873015873024\" width=\"203.92105263157896\" height=\"48.88888888888889\"></rect><rect class=\"bar-join current\" x=\"235.28947368421052\" y=\"370.15873015873024\" width=\"2\" height=\"48.88888888888889\" style=\"opacity: 0;\"></rect><text class=\"label\" x=\"251.28947368421052\" y=\"396.6031746031747\" style=\"opacity: 1;\">current</text></g></g></svg>"
        }
      ]
    }
  ]
}