{
  "metadata": {
    "timestamp": 1736562175771,
    "page": 998,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEwMDA=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mattkrick/meatier",
      "stars": 3044,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.16015625,
          "content": "{\n  \"presets\": [\"react\", \"es2015\", \"stage-0\"],\n  \"plugins\": [\n    [\"transform-decorators-legacy\"],\n    [\"add-module-exports\"],\n    [\"react-hot-loader/babel\"]\n  ]\n}\n"
        },
        {
          "name": ".env",
          "type": "blob",
          "size": 0.328125,
          "content": "JWT_SECRET=\"d3bcddbf-3687-45c4-bc8d-81b6ac34edfd\"\nGOOGLE_CLIENTID=\"350131825371-c1p0sh9r7mrv28mu00fqucfv66ii9sgh.apps.googleusercontent.com\"\nGOOGLE_SECRET=\"mJD4yU2m_Zms3a\"\nGOOGLE_CALLBACK=\"http://localhost:3000/auth/google/callback\"\n\nDATABASE_HOST=localhost\nDATABASE_PORT=28015\nDATABASE_SSL=false\n\nPROTOCOL=http\nHOST=localhost\nPORT=3000"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.0390625,
          "content": "{\n  \"extends\": [\n    \"xo-meatier\"\n  ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.078125,
          "content": ".DS_Store\n.happypack\nnode_modules\nnpm-debug.log\nbuild\nrethinkdb_data\nstats.json\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.6181640625,
          "content": "<img src=\"https://cloud.githubusercontent.com/assets/5986600/12841730/d500562a-cc28-11e5-84d9-90ae6abd5486.png\" width=\"600\">\n\n[![Join the chat at https://gitter.im/mattkrick/meatier](https://badges.gitter.im/mattkrick/meatier.svg)](https://gitter.im/mattkrick/meatier?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Circle CI](https://img.shields.io/circleci/project/mattkrick/meatier/master.svg)](https://circleci.com/gh/mattkrick/meatier)\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n\nMeteor is awesome! But after 3 years, it's starting to show its age. This project is designed to showcase \nthe exact same functionality as Meteor, *but without the monolithic structure.* \nIt trades a little simplicity for a lot of flexibility.\n\nSome of my chief complaints with Meteor\n - Built on Node 0.10, and that ain't changing anytime soon\n - Build system doesn't allow for code splitting (the opposite, in fact)\n - Global scope (namespacing doesn't count)\n - Goes Oprah-Christmas-special with websockets (not every person/page needs one)\n - Can't handle css-modules (CSS is all handled behind the scenes)\n - Tied to MongoDB for official support\n \n| Problem           | Meteor's solution                                               | My solution                                                         | Result                                                              |\n|-------------------|-----------------------------------------------------------------|---------------------------------------------------------------------|---------------------------------------------------------------------|\n| Database          | [MongoDB](https://www.mongodb.org/)                             | [RethinkDB](https://www.rethinkdb.com/)                             | Built in reactivity, but you can use any DB you like                |\n| Database schema   | [Simple Schema](https://github.com/aldeed/meteor-simple-schema) | [GraphQL](https://github.com/graphql/graphql-js)                    | Can't have a hipster webapp without GraphQL!                        |\n| Client validation | [Simple Schema](https://github.com/aldeed/meteor-simple-schema) | [Joi](https://github.com/hapijs/joi)                                | Clean API for client validation, although the package is HUGE       |\n| Database hooks    | [Collections2](https://github.com/aldeed/meteor-collection2)    | [GraphQL](https://github.com/graphql/graphql-js)                    | GraphQL is overkill for small apps (then again, so is meatier)      |\n| Forms             | [AutoForm](https://github.com/aldeed/meteor-autoform)           | [redux-form](https://github.com/erikras/redux-form)                 | state tracking awesomeness that works beautifully with react        |\n| Client-side cache | [Minimongo](https://www.meteor.com/mini-databases)              | [redux](http://redux.js.org/)                                       | Bonus logging, time traveling, and undo functionality               |\n| Socket server     | [DDP-server](https://www.meteor.com/ddp)                        | [socketcluster](http://socketcluster.io/#!/)                        | super easy scaling, pubsub, auth, middleware                        |\n| Authentication    | Meteor accounts                                                 | [JWTs](https://jwt.io)                                              | JWTs can also serve to authorize actions, too                       |\n| Auth-transport    | [DDP](https://www.meteor.com/ddp)                               | GraphQL (via HTTP)                                                  | Don't use sockets until you need to                                 |\n| Front-end         | [Blaze](https://www.meteor.com/blaze)                           | [React](https://facebook.github.io/react/)                          | Vdom, server-side rendering, async router, etc.                     |\n| Build system      | meteor                                                          | [webpack](https://webpack.github.io/)                               | using webpack inside meteor is very limited                         |\n| CSS               | magically bundle & serve                                        | [css-modules](https://github.com/css-modules/css-modules)           | component-scoped css with variables available in a file or embedded |\n| Optimistic UI     | latency compensation                                            | [redux-optimistic-ui](https://github.com/mattkrick/redux-optimistic-ui)  | written by yours truly                                         |\n| Testing           | Velocity (or nothing at all)                                    | [AVA](https://github.com/sindresorhus/ava)                          | awesome es2016 concurrent testing                                   |\n| Linting           | Your choice                                                     | [xo](https://www.npmjs.com/package/xo)                              | no dotfiles, fixes errors                                           |\n| Routing           | [FlowRouter](https://github.com/kadirahq/flow-router)           | [react-router-redux](https://github.com/reactjs/react-router-redux) | stick the route in the state, react-router SSR, async routes        |\n| Server            | Node 0.10.41                                                    | Node 5                                                              | Faster, maintained, not a dinosaur...                               |                             |\n \n##Installation\n- `brew install rethinkdb`\n- make sure you are using webpack@2.x (not a v1 installed globally)\n- `rethinkdb` (in second terminal window)\n- `git clone` this repo\n- `cd meatier`\n- `npm install`\n- `npm run quickstart`\n\n##Client-side development\n- `npm start`\n- http://localhost:3000\n\nRebuilds the client code in-memory & uses hot module reload so you can develop super fast!\nOn my 2013 MBA an initial build takes about 8 seconds and updates usually take 800ms\n\n##Server-side development\n- `npm run prod`\n- http://localhost:3000\n- If you edit any client or universal files, run `npm run bs` to rebuild & serve the bundle\n\nThis mode is great because you can make changes to the server ***without having to recompile the client code***\nThat means you only wait for the server to restart! GAME CHANGER!\n\n##Database development\n- http://localhost:8080 for RethinkDB\n- All tables are managed in `./src/server/setupDB.js`. Just add your tables & indices to that file and rerun\n- A standard ORM would check for tables & ensure indices at least once per build, doing it this way keeps your build times down\n- http://localhost:3000/graphql for testing out new queries/mutations\n\n##Webpack configs\n####Development config\nWhen the page is opened, a basic HTML layout is sent to the client along with a stringified redux store and a request for the common chunk of the JS.\nThe client then injects the redux store & router to create the page.\nThe redux devtools & logger are also loaded so you track your every state-changing action. \nThe routes are loaded async, check your networks tab in chrome devtools and you'll see funny js files load now & again. \nIf this isn't crazy amazing to you, then go away.\n\n####Production config\nBuilds the website & saves it to the `build` folder.\nMaps the styles to the components, but uses the prerendered CSS from the server config (below)\nSeparates the `vendor` packages and the `app` packages for a super quick, cachable second visit.\nCreates a webpack manifest to enable longterm caching (eg can push new vendor.js without pushing a new app.js)\nOptimizes the number of chunks, sometimes it's better to have the modules of 2 routes in the same chunk if they're small\n\n####Server config\nA webpack config builds the entire contents of the routes on the server side.\nThis is required because node doesn't know how to require `.css`.\nWhen a request is sent to the server, react-router matches the url to the correct route & sends it to the client.\nAny browser dependency is ignored & uglified away.\nTo test this, disable javascript in the browser. You'll see the site & css loads without a FOUC.\n\n##How it works\nWhen the page loads, it checks your localStorage for `Meatier.token` & will automatically log you in if the token is legit. \nIf not, just head to the 'Sign up' page. The 'Sign up' page uses redux-form, which handles all errors, schema validation,\nand submissions. Your credentials are set as variables in a GraphQL mutation & sent to the GraphQL endpoint and a user document (similar to Meteor's) and authToken is returned to your state.\n\nThe 'Kanban' app requires a login & websocket, so when you enter, your token will be used to authenticate a websocket.\nThat token is stored on the server so it is only sent during the handshake (very similar to DDP). Socket state is managed\nby `redux-socket-cluster`, just clicking `socket` in the devtools let's you explore its current state. \n\nWhen you enter the route, reducers are lazily loaded to the redux store and the `redux-optimistic-ui` reducer enhancer is applied to the store to enable an optimistic UI. To work, it requires some middleware that scans each redux action for an `isOptimistic` prop and reverts actions that fail server side.\n\nWhen the kanban component loads, it subscribes to `lanes` & `notes`, which starts your personalized changefeed.\nWhen you do something that changes the persisted state (eg add a kanban lane) that action is executed\noptimistically on the client & emitted to the server where it is validated & sent to the database. \nThe database then emits a changefeed doc to all subscribed viewers.\nSince the DB doesn't know which client made the mutation, it always sends a changefeed to the server.\nThe server is smart enough to ignore sending that document back to the originator, but it does send an acknowledgement.\n\nThe kanban lane titles & notes are really basic, you click them & they turn into input fields. \nThe notes can be dragged from lane to lane. This is to showcase a local state change that doesn't affect the persisted state.\nWhen the note is dropped to its new location, the change is persisted. \n\n##Tutorials (not for beginners...but then again, neither is meatier)\n - [A production-ready realtime SaaS with webpack](https://medium.com/@matt.krick/a-production-ready-realtime-saas-with-webpack-7b11ba2fa5b0#.bifdf5iz8)\n - [GraphQL Field Guide to Auth](https://medium.com/@matt.krick/graphql-field-guide-to-auth-ead84f657ab#.f3tg2sf3d)\n\n##Similar Projects\n - https://github.com/erikras/react-redux-universal-hot-example (Really nice, but no auth or DB)\n - https://github.com/kriasoft/react-starter-kit (nice, I borrowed their layout, but no sockets, no DB)\n - https://github.com/GordyD/3ree (uses RethinkDB, but no optimistic UI)\n - http://survivejs.com/ (A nice alt-flux & react tutorial for a kanban)\n\n##In Action\nI don't know of any place that hosts RethinkDB for free...so here's a gif. \n![Meatier](http://i.imgur.com/B3IErZr.gif)\n\n##Contributing\n - Pull requests welcomed!\n - Use the gitter for any questions\n - No donations necessary (but if you know of any jobs that'll let me move back to San Diego, let me know :wink:)\n\n##Changelog\n- 0.10\n - Use the redux devtools chrome extension \n - Update just about all the deps\n - Make deployments more configurable (deployment strategy coming soon)\n- 0.9\n - Upgraded to `redux-simple-router@2.0.3`\n - Now you can do cool things like time travel through routes!\n \n- 0.8\n - Move auth & mutations to GraphQL (changefeeds still go through WS subs)\n - Make the rest of the `state.auth` immutable\n - Add graphiql (http://localhost:3000/graphql) as a component & pattern to create an admin site\n - Break out auth, landing page, kanban page, and admin into 4 separate modules in the folder hierarchy\n  \n##License\nMIT\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 0.6279296875,
          "content": "machine:\n  node:\n    version: 5.7.0\ndependencies:\n  pre:\n    - source /etc/lsb-release && echo \"deb http://download.rethinkdb.com/apt $DISTRIB_CODENAME main\" | sudo tee /etc/apt/sources.list.d/rethinkdb.list\n    - wget -qO- https://download.rethinkdb.com/apt/pubkey.gpg | sudo apt-key add -\n    - sudo apt-get update\n    - sudo apt-get install rethinkdb\n    - sudo cp /etc/rethinkdb/default.conf.sample /etc/rethinkdb/instances.d/instance1.conf\n    - sudo /etc/init.d/rethinkdb restart\n    - npm i -g npm@3.8.2\n  override:\n    - npm install --only=prod && npm install --only=dev\n  post:\n    - npm run build:db\ntest:\n  post:\n    - npm run lint\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.1220703125,
          "content": "{\n  \"name\": \"meatier\",\n  \"version\": \"0.10.0\",\n  \"description\": \"Like meteor, but meatier\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/mattkrick/meatier.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/mattkrick/meatier/issues\"\n  },\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"NODE_ENV=development node ./src/server/server.babel.js\",\n    \"prod\": \"NODE_ENV=production node ./src/server/server.babel.js\",\n    \"build\": \"rimraf build && concurrently \\\"npm run build:client\\\" \\\"npm run build:server\\\"\",\n    \"bs\": \"rimraf build && concurrently \\\"npm run build:client\\\" \\\"npm run build:server\\\" \\\"npm run prod\\\"\",\n    \"quickstart\": \"rimraf build && concurrently \\\"npm run build:db\\\" \\\"npm run build:client\\\" \\\"npm run build:server\\\" \\\"npm run prod\\\"\",\n    \"build:client\": \"NODE_ENV=production webpack --config ./webpack/prod.babel.js\",\n    \"build:server\": \"NODE_ENV=production webpack --config ./webpack/server.babel.js\",\n    \"build:db\": \"node ./src/server/database/setupDB.babel.js\",\n    \"update:db\": \"node ./src/server/database/setupDB.babel.js true\",\n    \"test\": \"NODE_ENV=testing ava ./src/**/__tests__/**/*.js --verbose\",\n    \"lint\": \"xo --fix 'src/**/*.js' 'tests/*.js' 'webpack/*.js'\",\n    \"profile\": \"NODE_ENV=production webpack --config ./webpack/prod.babel.js --profile --json > stats.json\"\n  },\n  \"author\": \"Matt Krick <matt.krick@gmail.com>\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"assets-webpack-plugin\": \"3.4.0\",\n    \"ava\": \"0.14.0\",\n    \"babel-cli\": \"6.8.0\",\n    \"babel-core\": \"6.8.0\",\n    \"babel-eslint\": \"6.0.4\",\n    \"babel-loader\": \"6.2.4\",\n    \"babel-plugin-add-module-exports\": \"0.2.0\",\n    \"babel-plugin-react-transform\": \"2.0.2\",\n    \"babel-plugin-static-fs\": \"1.1.0\",\n    \"babel-plugin-transform-decorators-legacy\": \"1.3.4\",\n    \"babel-preset-es2015\": \"6.6.0\",\n    \"babel-preset-react\": \"6.5.0\",\n    \"babel-preset-stage-0\": \"6.5.0\",\n    \"babel-register\": \"6.8.0\",\n    \"concurrently\": \"2.0.0\",\n    \"css-loader\": \"0.23.1\",\n    \"eslint\": \"2.9.0\",\n    \"eslint-config-xo-meatier\": \"0.2.2\",\n    \"eslint-config-xo-react\": \"0.7.0\",\n    \"eslint-plugin-babel\": \"3.2.0\",\n    \"eslint-plugin-react\": \"5.1.1\",\n    \"extract-text-webpack-plugin\": \"1.0.1\",\n    \"fake-style-loader\": \"1.0.1\",\n    \"file-loader\": \"0.8.5\",\n    \"happypack\": \"2.1.0\",\n    \"json-loader\": \"0.5.4\",\n    \"null-loader\": \"0.1.1\",\n    \"postcss-loader\": \"0.9.1\",\n    \"postcss-modules-values\": \"1.1.2\",\n    \"raw-loader\": \"0.5.1\",\n    \"react-addons-test-utils\": \"15.0.2\",\n    \"react-hot-loader\": \"^3.0.0-beta.2\",\n    \"react-transform-catch-errors\": \"1.0.2\",\n    \"react-transform-hmr\": \"1.0.4\",\n    \"redbox-react\": \"1.2.4\",\n    \"rimraf\": \"2.5.2\",\n    \"stats-webpack-plugin\": \"0.3.1\",\n    \"style-loader\": \"0.13.1\",\n    \"url-loader\": \"0.5.7\",\n    \"webpack\": \"2.1.0-beta.4\",\n    \"webpack-dev-middleware\": \"1.6.1\",\n    \"webpack-hot-middleware\": \"2.10.0\",\n    \"xo\": \"0.15.0\"\n  },\n  \"dependencies\": {\n    \"babel-polyfill\": \"6.8.0\",\n    \"babel-runtime\": \"6.6.1\",\n    \"bcrypt\": \"0.8.6\",\n    \"body-parser\": \"1.15.1\",\n    \"compression\": \"1.6.1\",\n    \"cors\": \"2.7.1\",\n    \"deep-equal\": \"1.0.1\",\n    \"dotenv\": \"2.0.0\",\n    \"dotenv-expand\": \"0.1.0\",\n    \"es6-promisify\": \"4.0.0\",\n    \"express\": \"4.13.4\",\n    \"express-jwt\": \"3.4.0\",\n    \"googleapis\": \"5.2.1\",\n    \"graphiql\": \"0.7.1\",\n    \"graphql\": \"0.6.0\",\n    \"immutable\": \"3.8.1\",\n    \"isomorphic-fetch\": \"2.2.1\",\n    \"joi\": \"8.1.0\",\n    \"jsonwebtoken\": \"6.2.0\",\n    \"jwt-decode\": \"2.0.1\",\n    \"material-ui\": \"0.15.0\",\n    \"node-env-flag\": \"0.1.0\",\n    \"node-uuid\": \"1.4.7\",\n    \"piping\": \"0.3.1\",\n    \"react\": \"15.0.2\",\n    \"react-dnd\": \"2.1.4\",\n    \"react-dnd-html5-backend\": \"2.1.2\",\n    \"react-dom\": \"15.0.2\",\n    \"react-dom-stream\": \"0.5.1\",\n    \"react-redux\": \"4.4.5\",\n    \"react-router\": \"2.4.0\",\n    \"react-router-redux\": \"4.0.4\",\n    \"react-tap-event-plugin\": \"1.0.0\",\n    \"redux\": \"3.5.2\",\n    \"redux-form\": \"5.2.3\",\n    \"redux-immutablejs\": \"0.0.8\",\n    \"redux-logger\": \"2.6.1\",\n    \"redux-optimistic-ui\": \"0.4.0\",\n    \"redux-promise\": \"0.5.3\",\n    \"redux-socket-cluster\": \"0.5.1\",\n    \"redux-thunk\": \"2.1.0\",\n    \"rethinkdbdash\": \"2.3.6\",\n    \"socketcluster\": \"4.6.1\",\n    \"socketcluster-client\": \"4.3.17\"\n  },\n  \"xo\": {\n    \"extends\": \"xo-meatier\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}