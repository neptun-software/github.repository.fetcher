{
  "metadata": {
    "timestamp": 1736561707221,
    "page": 309,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "headjs/headjs",
      "stars": 4154,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0888671875,
          "content": "# git ignore file\n.idea/\n_site/\n*.sln\n*.suo\n*.config\n*.bundle\nsauce_connect.*\nnode_modules/"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 5.919921875,
          "content": "{\n    // JSHint Configuration File for HeadJS\n    // See http://jshint.com/docs/ for more details\n\t// See http://jslinterrors.com/ for error information\n\t// If you have suggestions for these settings, please leave a comment on GitHub\n\n    \"maxerr\"        : 50,       // {int} Maximum error before stopping\n\n    // Enforcing\n    \"bitwise\"       : true,     // true: Prohibit bitwise operators (&, |, ^, etc.)\n    \"camelcase\"     : true,     // true: Identifiers must be in camelCase\n    \"curly\"         : true,     // true: Require {} for every new block or scope\n    \"eqeqeq\"        : true,     // true: Require triple equals (===) for comparison\n    \"forin\"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()\n    \"immed\"         : true,     // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`\n    \"indent\"        : 4,        // {int} Number of spaces to use for indentation\n    \"latedef\"       : true,     // true: Require variables/functions to be defined before being used\n    \"newcap\"        : true,     // true: Require capitalization of all constructor functions e.g. `new F()`\n    \"noarg\"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`\n    \"noempty\"       : false,    // true: Prohibit use of empty blocks\n    \"nonew\"         : true,     // true: Prohibit use of constructors for side-effects (without assignment)\n    \"plusplus\"      : false,    // true: Prohibit use of `++` & `--`\n    \"quotmark\"      : true,     // Quotation mark consistency:\n                                // false    : do nothing (default)\n                                // true     : ensure whatever is used is consistent\n                                // \"single\" : require single quotes\n                                // \"double\" : require double quotes\n    \"undef\"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)\n    \"unused\"        : true,     // true: Require all defined variables be used\n    \"strict\"        : true,     // true: Requires all functions run in ES5 Strict Mode\n    \"trailing\"      : true,     // true: Prohibit trailing whitespaces\n    \"maxparams\"     : false,    // {int} Max number of formal params allowed per function\n    \"maxdepth\"      : false,    // {int} Max depth of nested blocks (within functions)\n    \"maxstatements\" : false,    // {int} Max number statements per function\n    \"maxcomplexity\" : false,    // {int} Max cyclomatic complexity per function\n    \"maxlen\"        : false,    // {int} Max number of characters per line\n\n    // Relaxing\n    \"asi\"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)\n    \"boss\"          : false,     // true: Tolerate assignments where comparisons would be expected\n    \"debug\"         : false,     // true: Allow debugger statements e.g. browser breakpoints.\n    \"eqnull\"        : false,     // true: Tolerate use of `== null`\n    \"es5\"           : false,     // true: Allow ES5 syntax (ex: getters and setters)\n    \"esnext\"        : false,     // true: Allow ES.next (ES6) syntax (ex: `const`)\n    \"moz\"           : false,     // true: Allow Mozilla specific syntax (extends and overrides esnext features)\n                                 // (ex: `for each`, multiple try/catch, function expressionâ€¦)\n    \"evil\"          : false,     // true: Tolerate use of `eval` and `new Function()`\n    \"expr\"          : false,     // true: Tolerate `ExpressionStatement` as Programs\n    \"funcscope\"     : false,     // true: Tolerate defining variables inside control statements\"\n    \"globalstrict\"  : false,     // true: Allow global \"use strict\" (also enables 'strict')\n    \"iterator\"      : false,     // true: Tolerate using the `__iterator__` property\n    \"lastsemic\"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block\n    \"laxbreak\"      : false,     // true: Tolerate possibly unsafe line breakings\n    \"laxcomma\"      : true,      // true: Tolerate comma-first style coding\n    \"loopfunc\"      : false,     // true: Tolerate functions being defined in loops\n    \"multistr\"      : false,     // true: Tolerate multi-line strings\n    \"proto\"         : false,     // true: Tolerate using the `__proto__` property\n    \"scripturl\"     : false,     // true: Tolerate script-targeted URLs\n    \"smarttabs\"     : true,      // true: Tolerate mixed tabs/spaces when used for alignment\n    \"shadow\"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`\n    \"sub\"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation\n    \"supernew\"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`\n    \"validthis\"     : false,     // true: Tolerate using this in a non-constructor function\n\n    // Environments\n    \"browser\"       : true,     // Web Browser (window, document, etc)\n    \"couch\"         : false,    // CouchDB\n    \"devel\"         : true,     // Development/debugging (alert, confirm, etc)\n    \"dojo\"          : false,    // Dojo Toolkit\n    \"jquery\"        : false,    // jQuery\n    \"mootools\"      : false,    // MooTools\n    \"node\"          : false,    // Node.js\n    \"nonstandard\"   : false,    // Widely adopted globals (escape, unescape, etc)\n    \"prototypejs\"   : false,    // Prototype and Scriptaculous\n    \"rhino\"         : false,    // Rhino\n    \"worker\"        : false,    // Web Workers\n    \"wsh\"           : false,    // Windows Scripting Host\n    \"yui\"           : false,    // Yahoo User Interface\n\n    // Legacy\n    \"nomen\"         : false,    // true: Prohibit dangling `_` in variables\n    \"onevar\"        : false,    // true: Allow only one `var` statement per function\n    \"passfail\"      : false,    // true: Stop on first error\n    \"white\"         : false,    // true: Check against strict whitespace and indentation rules\n\n    // Custom Globals\n    \"globals\"       : {}        // additional predefined global variables\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.947265625,
          "content": "# define language used\nlanguage: node_js\n\n# configure node version\nnode_js:\n  - \"0.11\"\n\n# http://about.travis-ci.org/docs/user/build-configuration/#Build-Lifecycle\n# install dependencies \nbefore_script:\n  - npm install -g grunt-cli\n  - npm install grunt grunt-contrib-qunit\n\n# run\nscript: grunt test -v -d\n\n\n# Run tests using Travis CI and Sauce Labs\n# https://saucelabs.com/opensource/travis\n#\n# Secure environment variables\n# http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables\n#\n# Extra links\n# https://github.com/axemclion/grunt-saucelabs\nenv:\n  global:\n    - secure: \"i8xVOci13yViGd+vqpiM0P2kL4qayAOOd80jmlOOKHu7tCMEF6EvkJBOwALVx+LDRFnyg/4iP0drQSMYztiF5ZTnEcbh+EknltKAA3ygI/d2RUDhB7Cn7Knu3baqE1By3BXHbVlhOZ0zTZUbwrGcnzxnBHec5mvISw9Y1dIaz94=\"\n    - secure: \"M7lJ0WoAcSACTUJGHRuTcUzGrvo806mJ5UCJ3MjttL4DPz+kxeO2zLPCLff12zmv1x97lRjKtY7zJJei8ZkGgEQfLLlz5I3Hg7yJ2dSqTxGiKpr7vlipDZq6+ZPpHo3kElsGIy5ue/rVKNS/8l8I5zYRdNpWkwztLJvj6nHfxIo=\""
        },
        {
          "name": "404.html",
          "type": "blob",
          "size": 0.490234375,
          "content": "---\nlayout: main\n---\n<div class=\"intro\">    \n    Stop breaking things !\n</div>\n\n<div class=\"group\">\n    <div class=\"float-l\" style=\"font-size: 150px\">404</div>\n    <img class=\"float-l\" src=\"/site/assets/img/404.jpg\" title=\"by ~Lain-Luscious-Fanart\" alt=\"not found\" style=\"max-width: 100%\"/>\n</div>\n\n<br /><br />\n<div class=\"intro\">    \n    <strong>Make it the only script in your HEAD.</strong>\n    &laquo; A concise solution to universal problems &raquo;\n</div>  \n\n{% include sections/download.html %}"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0107421875,
          "content": "headjs.com\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 4.1552734375,
          "content": "module.exports = function (grunt) {\n    //#region Saucelabs Browsers\n    // https://saucelabs.com/docs/platforms\n    var browsers = [\n                    // sauce says ff25 is availiable, but times out systematically...\n                    {\n                        browserName: \"firefox\",\n                        platform   : \"Windows 8\",\n                        version    : \"22\"\n                    },\n                    {\n                        browserName         : \"iphone\",\n                        platform            : \"OS X 10.8\",\n                        version             : \"6.1\",\n                        \"device-orientation\": \"portrait\"\n                    },\n                    {\n                        browserName         : \"ipad\",\n                        platform            : \"OS X 10.8\",\n                        version             : \"6.1\",\n                        \"device-orientation\": \"portrait\"\n                    },\n                    {\n                        browserName         : \"android\",\n                        platform            : \"Linux\",\n                        version             : \"4.0\",\n                        \"device-orientation\": \"portrait\"\n                    },\n                    {\n                        browserName: \"safari\",\n                        platform: \"OS X 10.6\",\n                        version: \"5\"\n                    },\n                    {\n                        browserName: \"safari\",\n                        platform   : \"OS X 10.8\",\n                        version    : \"6\"\n                    },\n                    {\n                        browserName: \"chrome\",\n                        platform   : \"Windows 7\",\n                        version    : \"31\"\n                    },\n                    {\n                        browserName: \"internet explorer\",\n                        platform   : \"Windows XP\",\n                        version    : \"7\"\n                    },\n                    {\n                        browserName: \"internet explorer\",\n                        platform   : \"Windows XP\",\n                        version    : \"8\"\n                    },\n                    {\n                        browserName: \"internet explorer\",\n                        platform   : \"Windows 7\",\n                        version    : \"9\"\n                    },\n                    {\n                        browserName: \"internet explorer\",\n                        platform   : \"Windows 8\",\n                        version    : \"10\"\n                    },   \n                    {\n                        browserName: \"internet explorer\",\n                        platform   : \"Windows 8.1\",\n                        version    : \"11\"\n                    }                 \n                ];\n    //#endregion\n\n    // Project configuration\n    grunt.initConfig({\n        //#region Saucelabs\n        connect: {\n            server: {\n                options: {\n                    base: \"\",\n                    port: 9999\n                }\n            }\n        },\n        \"saucelabs-qunit\": {\n            all: {\n                options: {\n                    urls         : [\"http://127.0.0.1:9999/test/unit/1.0.0/index.html\"],\n                    tunnelTimeout: 10,\n                    build        : process.env.TRAVIS_JOB_ID,\n                    concurrency  : 3,\n                    browsers     : browsers,\n                    testname     : \"qunit tests\",\n                    tags         : [\"master\"]\n                }\n            }\n        },\n        watch: {},\n        //#endregion\n\n        // load package information ..use later for building via grunt...\n        //pkg: grunt.file.readJSON(\"package.json\"),\n\n        // task: local unit tests\n        qunit: {\n            files: ['test/unit/1.0.0/index.html']\n        }\n    });\n\n    // Loading dependencies\n    for (var key in grunt.file.readJSON(\"package.json\").devDependencies) {\n        if (key !== \"grunt\" && key.indexOf(\"grunt\") === 0) {\n            grunt.loadNpmTasks(key);\n        }\n    }\n\n    // register: local unit tests\n    grunt.registerTask(\"qtest\", \"qunit\");\n\n    // register sauce tasks\n    grunt.registerTask(\"dev\" , [\"connect\", \"watch\"]);\n    grunt.registerTask(\"test\", [\"connect\", \"saucelabs-qunit\"]);\n};"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0341796875,
          "content": "The MIT License\n\nCopyright (c) 2013\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.6787109375,
          "content": "### This project is no longer maintained, but was the only solution back in the day, to do responsive design with IE6 & co ^^\n\n### Latest Version: v1.0.3 :: [Docs](https://headjs.github.io) | [Downloads](https://headjs.github.io/#download)\n\n### Responsive Design, Feature Detections, and Resource Loading\n  * Speed up your apps: Load JS & CSS asyncronously and in parallel, but execute them in order\n  * Load one asset if a condition is met, else fallback and load a different one\n  * Manage script dependencies, and execute callbacks once they are loaded\n  * Cross-browser compatible &laquo; pseudo media-queries &raquo; let you code against different resolutions & devices\n  * Fix quirks in specific browsers by quickly applying dedicated CSS/JS logic\n  * Detect various browsers & their versions\n  * Check if the client supports a certain Browser, HTML5, or CSS3 feature\n  * Automatically generates JS and CSS classes for browsers & features that where detected\n  * Automatically generates CSS classes, to know what page or section a user is viewing\n  * Know if the user is in landscape or portrait mode\n  * Or whether the client is using a mobile or desktop device\n  * Get old browsers to support HTML5 elements like nav, sidebar, header, footer, ...\n  * ...\n  * __Make it, The only script in your &lt;HEAD&gt;__\n    * ___A concise solution to universal problems___\n\n\n###Resources\n- __WebSite__\n  - [https://headjs.github.io/](https://headjs.github.io/)\n- __Bugs__\n  - [https://github.com/headjs/headjs/issues](https://github.com/headjs/headjs/issues)\n- __Community Support__\n  - [http://stackoverflow.com](http://stackoverflow.com/questions/tagged/head.js)\n  - _Remember to tag your questions with_: ___head.js___\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.154296875,
          "content": "# GitHub Defaults\nlsi: false\npygments: true\nsafe: true\n\n# UTF-8 & parse errors fix\nmarkdown: redcarpet\n\n# Custom Variables\nhead:\n  major: 1.0.0\n  minor: 1.0.3"
        },
        {
          "name": "_includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "_layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "_posts",
          "type": "tree",
          "content": null
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.73046875,
          "content": "{\n  \"name\": \"headjs\",\n  \"description\": \"HeadJS: Responsive Design, Feature Detections & Asset Loading. The only script in your <HEAD>\",\n  \"version\": \"1.0.3\",\n  \"license\" : \"MIT\",\n  \"authors\": [\n    {\"name\": \"Tero Piirainen\"},\n\t{\"name\": \"Robert Hoffmann\"}\n  ],\n  \"homepage \" : \"http://headjs.com\",\n  \"main\"  : [\"./dist/1.0.0/head.min.js\",\"./dist/1.0.0/head.min.js.map\",\"./dist/1.0.0/changelog.txt\"],\n  \"ignore\": [\n    \"**\",\n    \"!/dist/1.0.0/*.js\",\n    \"!/dist/1.0.0/*.map\",\n    \"!/dist/1.0.0/*.txt\"\n  ],\n  \"directory\": \"public/scripts\",\n  \"repository\": {\n    \"type\": \"git\", \"url\": \"git://github.com/headjs/headjs.git\"\n  },\n    \"keywords\": [\n    \"loader\",\n    \"require\",\n    \"polyfill\",\n    \"html5\",\n    \"css3\",\n    \"feature\",\n    \"responsive\"\n  ]\n}"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.png",
          "type": "blob",
          "size": 1.4267578125,
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 5.9189453125,
          "content": "---\nlayout: main\ntitle: Head.JS, the only script in your HEAD\n---\n<div itemprop=\"description\">\n    <div class=\"intro\">    \n        HeadJS, a small library for Responsive Design, Feature Detections & Resource Loading\n    </div>  \n\n    <h2>When you need a quick cross-browser compatible hand, don't bang your head. HeadJS is here to help you out !</h2>\n    <ul>\n        <li>Speed up your apps: Load JS & CSS asyncronously and in parallel, but execute them in order</li>\n        <li>Load one asset if a condition is met, else fallback and load a different one</li>\n        <li>Manage script dependencies, and execute callbacks once they are loaded</li>\n        <li>Cross-browser compatible &laquo; pseudo media-queries &raquo; let you code against different resolutions & devices</li>\n        <li>Fix quirks in specific browsers by quickly applying dedicated CSS/JS logic</li>\n        <li>Detect various browsers & their versions</li>\n        <li>Check if the client supports a certain Browser, HTML5, or CSS3 feature</li>\n        <li>Automatically generates JS and CSS classes for browsers & features that where detected</li>\n        <li>Automatically generates CSS classes, to know what page or section a user is viewing</li>\n        <li>Know if the user is in landscape or portrait mode</li>\n        <li>Or whether the client is using a mobile or desktop device</li>\n        <li>Get old browsers to support HTML5 elements like nav, sidebar, header, footer, ...</li>\n        <li>...</li>\n        <li>\n            <strong>Make it, The only script in your &lt;HEAD&gt;</strong>\n            <ul>\n                <li><em>A concise solution to universal problems</em></li>\n            </ul>\n        </li>        \n    </ul>\n\n    <h3>Your imagination, Your limit</h3>\n</div>\n\n<hr />\n\n<div>\n    <h2 >Responsive Design (Think @media-queries, and more)</h2>\n    <div class=\"intro\">    \n        Achieve responsive design with CSS that targets different screen resolutions, paths, states and browsers.\n    </div>   \n    <div class=\"code-example\" data-title=\"head.responsive()\">\n        <p>Need to display an element at a specific screen size ? </p>\n        \n\n{% highlight js %}\n/* JS */\nif (head.screen.innerWidth > 800) {\n    document.getElementById(\"#side-menu\").style.display = \"block\";\n}\n\n/* CSS */\n.gt-800 #side-menu {\n    display: block;\n}\n{% endhighlight %}\n        \n        <p>As you can see above, if you can write it in CSS, you can usually also write it in JavaScript.</p>\n        \n        <div class=\"code-example\" data-title=\"Built in\">\n            mobile, desktop, landscape, portrait, touch, viewport height, viewport width, screen height, screen width, browser height, browser width, browser name (ie, chrome, ff, ios, android, webkit, opera), browser version, current folder, current page\n        </div>\n    </div> \n    \n    <h2>Feature Detections (Like Modernizr. Just smaller, and simpler)</h2>\n    <div class=\"intro\">    \n        Detect various browsers and their features. Target HTML5 and CSS3 safely.\n    </div>   \n    <div class=\"code-example\" data-title=\"head.feature()\">\n        <p>What about custom detections and device/browser features ?</p>\n\n{% highlight css %}\n/* Add a custom feature yourself */\nhead.feature(\"member\", true);\n\n/* Now use it */        \nif (head.member) {\n    document.querySelector(\".member-menu\").style.display = \"block\";\n}\n\n.member-menu {\n    display: block;\n} \n\n/* Use built-in detections*/\n                   \n/* if the browser supports CSS3 box-shadow */\nif (head.boxshadow) {\n    document.querySelector(\".member-menu\").style.boxShadow = \"3px 3px 3px black\";\n}                 \n\n/* if the browser supports CSS3 box-shadow */\n.boxshadow .member-menu {\n    box-shadow: 3px 3px 3px black;\n}\n{% endhighlight %}\n\n        <p>We have a bunch of features detections built in, and if that's not enough, simply create one yourself !</p>\n        <ol>\n            <li>Desktop</li>\n            <li>Mobile</li>\n            <li>Landscape</li>\n            <li>Portrait</li>\n            <li>Retina</li>\n            <li>Touch</li>            \n            <li>Transitions</li>\n            <li>Transforms</li>\n            <li>Gradients</li>\n            <li>Opacity</li>\n            <li>Textshadow</li>\n            <li>Multiplebgs</li>\n            <li>Boxshadow</li>\n            <li>Borderimage</li>\n            <li>Borderradius</li>\n            <li>Cssreflections</li>\n            <li>Fontface</li>\n            <li>rgba()</li>\n        </ol>  \n    </div> \n\n    <h2>Resource Loading (Direct or Conditional)</h2>\n    <div class=\"intro\">    \n        Manage your library's dependencies. Load JavaScript and StyleSheets in parallel but execute them in the correct order. \n    </div>   \n    \n    <div class=\"code-example\" data-title=\"head.load()\">\n        <p>Need to quickly load a JS or CSS file ?</p>\n\n{% highlight js %}\n// Load up some JS\nhead.load(\"jQuery.js\", function() {\n    // Call a function when done\n    console.log(\"Done loading jQuery\");\n});\n\n// Load up some CSS\nhead.load(\"bootstrap.css\");\n{% endhighlight %}\n        <h4>How about something crazy like</h4>\n        <p>On DocumentReady, if the user is using IE8, you need to load 2 scripts, or otherwise load a different script, then wait for them to finish loading, then fire a callback, and then load/apply a stylesheet ? Yeah right..</p>\n        <p>Easy.</p>\n\n{% highlight js %}\n// head.ready(document, callback)\n// head.test(test, success, failure, callback)\n\nhead.ready(document, function() {\n    head.test(\n        (head.browser.ie && head.browser.version === 8),\n        [\"file1.js\", \"file2.js\"],\n        [\"other.js\"],\n        function() {\n            // run callback\n\n            head.load(\"file1.css\");\n        }\n    );\n});\n{% endhighlight %}\n\n        <p>Of course you can use each of those functions (ready, test, load) individually too.</p>\n    </div>    \n</div>\n\n<div class=\"intro\">    \n    <strong>Make it the only script in your HEAD.</strong>\n    &laquo; A concise solution to universal problems &raquo;\n</div>  \n              \n{% include sections/download.html %}      "
        },
        {
          "name": "jekyll-windows.txt",
          "type": "blob",
          "size": 0.8642578125,
          "content": "When i tried the ruby 200 version i got an error with yajl since jekyll seems to reference the 1.x version but when i build it looks for the 2.x version\n\nwith ruby 1.9.3 i also get errors because i have utf-8 encodings, so i had to do this\n\nto run Jekyll on windows\n1) install ruby 1.9.3\n2) install ruby devkit\n3) install python 2.7.5\n4) add python to path\n5) gem install jekyll\n6) gem uninstall pygments.rb --version \"=0.5.2\"\n7) gem install pygments.rb --version \"=0.5.0\"\n8) chcp 65001\n9) jekyll serve --watch\n\n6/7/8 are because i have utf-8 encodings\n6 is the actual culprit for the utf-8 problems\n3 is because 7 depends on it\n\nI'm using Visual Studio too, so i set myself up a quick run command via the \"external tools\"\n\n\tTitle            : Jekyll (build && run)\n\tCommand          : cmd.exe\n\tArguments        : /K chcp 65001 | jekyll serve --watch\n\tInitial directory: $(SolutionDir)"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0732421875,
          "content": "{\n  \"name\": \"headjs\",\n  \"description\": \"HeadJS: Responsive Design, Feature Detections & Asset Loading. The only script in your <HEAD>\",\n  \"version\": \"1.0.3\",\n  \"homepage\": \"http://headjs.com\",\n  \"author\": {\n    \"name\": \"Various contributors\",\n    \"url\": \"http://headjs.com\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Tero Piirainen\",\n      \"url\": \"https://plus.google.com/115630295536677299145\"\n    },\n    {\n      \"name\": \"Robert Hoffmann\",\n      \"url\": \"https://google.com/+RobertHoffmann\"\n    }\n  ],\n  \"keywords\": [\n    \"loader\",\n    \"require\",\n    \"polyfill\",\n    \"html5\",\n    \"css3\",\n    \"feature\",\n    \"responsive\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/headjs/headjs.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/headjs/headjs/issues\"\n  },\n  \"license\" : \"MIT\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"grunt\": \"~0.4.0\",\n    \"grunt-cli\": \"~0.1.6\",\n    \"grunt-saucelabs\": \"~4.0.2\",\n    \"grunt-contrib-connect\": \"~0.1.2\",\n    \"grunt-contrib-watch\": \"~0.2.0\",\n    \"grunt-contrib-qunit\": \"~0.3.0\"\n  },\n  \"scripts\": {\n    \"test\": \"grunt test\"\n  }\n}"
        },
        {
          "name": "robots.txt",
          "type": "blob",
          "size": 0.0341796875,
          "content": "User-agent: *\nDisallow: /test/unit/"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "sitemap.xml",
          "type": "blob",
          "size": 0.8466796875,
          "content": "---\nbaseUrl: http://headjs.com\n---\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n  <url>\n    <loc>{{ page.baseUrl }}</loc>\n  </url>\n  <url>\n    <loc>{{ page.baseUrl }}/site/blog.html</loc>\n  </url>\n  <url>\n    <loc>{{ page.baseUrl }}/site/documentation.html</loc>\n  </url>\n  <url>\n    <loc>{{ page.baseUrl }}/site/download.html</loc>\n  </url>\n  <url>\n    <loc>{{ page.baseUrl }}/site/resources.html</loc>\n  </url>\n  <url>\n    <loc>{{ page.baseUrl }}/site/unit.html</loc>\n  </url>\n  <url>\n    <loc>{{ page.baseUrl }}/site/api/v1.00.html</loc>\n  </url>\n  <!-- http://davidensinger.com/2013/03/generating-a-sitemap-in-jekyll-without-a-plugin/ -->\n  {% for post in site.posts %}\n  <url>\n    <loc>{{ page.baseUrl }}{{ post.url }}</loc>\n  </url>\n  {% endfor %}\n  {% for page in site.pages %}\n\n  {% endfor %}  \n</urlset>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}