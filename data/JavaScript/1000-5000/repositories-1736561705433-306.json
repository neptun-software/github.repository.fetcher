{
  "metadata": {
    "timestamp": 1736561705433,
    "page": 306,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "metafizzy/packery",
      "stars": 4161,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03125,
          "content": "bower_components/\nnode_modules/\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.1298828125,
          "content": "{\n  \"browser\": true,\n  \"devel\": false,\n  \"strict\": true,\n  \"undef\": true,\n  \"unused\": true,\n  \"globals\": {\n    \"Packery\": true\n  }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.03125,
          "content": "# Packery\n\n_Bin-packing layout library_\n\nSee [packery.metafizzy.co](https://packery.metafizzy.co) for complete docs and demos\n\n## Install\n\n### Download\n\n+ [packery.pkgd.js](https://unpkg.com/packery@2.1/dist/packery.pkgd.js) un-minified, or\n+ [packery.pkgd.min.js](https://unpkg.com/packery@2.1/dist/packery.pkgd.min.js) minified\n\n### CDN\n\nLink directly to Packery files on [unpkg](https://unpkg.com).\n\n``` html\n<script src=\"https://unpkg.com/packery@2.1/dist/packery.pkgd.js\"></script>\n<!-- or -->\n<script src=\"https://unpkg.com/packery@2.1/dist/packery.pkgd.min.js\"></script>\n```\n\n### Package managers\n\nBower: `bower install packery --save`\n\n[npm](https://www.npmjs.com/package/packery): `npm install packery --save`\n\n## License\n\n### Commercial license\n\nIf you want to use Packery to develop commercial sites, themes, projects, and applications, the Commercial license is the appropriate license. With this option, your source code is kept proprietary. Purchase a Packery Commercial License at [packery.metafizzy.co](https://packery.metafizzy.co/#commercial-license)\n\n### Open source license\n\nIf you are creating an open source application under a license compatible with the [GNU GPL license v3](https://www.gnu.org/licenses/gpl-3.0.html), you may use Packery under the terms of the GPLv3.\n\n[Read more about Packery's license](https://packery.metafizzy.co/packery.html).\n\n## Initialize\n\nWith jQuery\n\n``` js\n$('.grid').packery({\n  // options...\n  itemSelector: '.grid-item'\n});\n```\n\nWith vanilla JavaScript\n\n``` js\n// vanilla JS\nvar grid = document.querySelector('.grid');\n// initialize with element\nvar pckry = new Packery( grid, {\n  // options...\n  itemSelector: '.grid-item'\n});\n\n// initialize with selector string\nvar pckry = new Packery('.grid', {\n  // options...\n});\n```\n\nWith HTML\n\nAdd a `data-packery` attribute to your element. Options can be set in JSON in the value.\n\n``` html\n<div class=\"grid\" data-packery='{ \"itemSelector\": \".grid-item\" }'>\n  <div class=\"grid-item\"></div>\n  <div class=\"grid-item\"></div>\n  ...\n</div>\n```\n\n---\n\nBy [Metafizzy](http://metafizzy.co)\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.8271484375,
          "content": "{\n  \"name\": \"packery\",\n  \"author\": \"David DeSandro\",\n  \"description\": \"Gapless, draggable grid layouts\",\n  \"main\": \"js/packery.js\",\n  \"dependencies\": {\n    \"get-size\": \"^2.0.2\",\n    \"outlayer\": \"^2.0.0\"\n  },\n  \"devDependencies\": {\n    \"draggabilly\": \"^2.1.0\",\n    \"jquery\": \">=2 <4\",\n    \"jquery-ui-draggable\": \"https://gist.github.com/4985610.git\",\n    \"jquery-bridget\": \"~2.0.0\",\n    \"qunit\": \"^1.15\"\n  },\n  \"ignore\": [\n    \"**/.*\",\n    \"contributing.md\",\n    \"package.json\",\n    \"gulpfile.js\",\n    \"sandbox/\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ],\n  \"homepage\": \"https://packery.metafizzy.co\",\n  \"authors\": [\n    \"David DeSandro <desandrocodes@gmail.com>\"\n  ],\n  \"moduleType\": [\n    \"amd\",\n    \"globals\",\n    \"node\"\n  ],\n  \"keywords\": [\n    \"layout\",\n    \"grid\",\n    \"draggable\"\n  ],\n  \"license\": \"GPL-3.0\"\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 3.6953125,
          "content": "/*jshint node: true, strict: false */\n\nvar fs = require('fs');\nvar gulp = require('gulp');\nvar rename = require('gulp-rename');\nvar replace = require('gulp-replace');\n\n// ----- hint ----- //\n\nvar jshint = require('gulp-jshint');\n\ngulp.task( 'hint-js', function() {\n  return gulp.src('js/*.js')\n    .pipe( jshint() )\n    .pipe( jshint.reporter('default') );\n});\n\ngulp.task( 'hint-test', function() {\n  return gulp.src('test/unit/*.js')\n    .pipe( jshint() )\n    .pipe( jshint.reporter('default') );\n});\n\ngulp.task( 'hint-task', function() {\n  return gulp.src('gulpfile.js')\n    .pipe( jshint() )\n    .pipe( jshint.reporter('default') );\n});\n\nvar jsonlint = require('gulp-json-lint');\n\ngulp.task( 'jsonlint', function() {\n  return gulp.src( '*.json' )\n    .pipe( jsonlint() )\n    .pipe( jsonlint.report('verbose') );\n});\n\ngulp.task( 'hint', [ 'hint-js', 'hint-test', 'hint-task', 'jsonlint' ]);\n\n// -------------------------- make pkgd -------------------------- //\n\n// regex for banner comment\nvar reBannerComment = new RegExp('^\\\\s*(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)\\\\s*');\n\nfunction getBanner() {\n  var src = fs.readFileSync( 'js/packery.js', 'utf8' );\n  var matches = src.match( reBannerComment );\n  var banner = matches[0].replace( 'Packery', 'Packery PACKAGED' );\n  return banner;\n}\n\nfunction addBanner( str ) {\n  return replace( /^/, str );\n}\n\nvar rjsOptimize = require('gulp-requirejs-optimize');\n\ngulp.task( 'requirejs', function() {\n  var definitionRE = /define\\(\\s*'packery\\/packery'(.|\\n)+factory\\s*\\)/;\n  var banner = getBanner();\n  // HACK src is not needed\n  // should refactor rjsOptimize to produce src\n  return gulp.src('js/packery.js')\n    .pipe( rjsOptimize({\n      baseUrl: 'bower_components',\n      optimize: 'none',\n      include: [\n        'jquery-bridget/jquery-bridget',\n        'packery/packery'\n      ],\n      paths: {\n        packery: '../js/',\n        jquery: 'empty:'\n      }\n    }) )\n    // munge AMD definition\n    .pipe( replace( definitionRE, function( definition ) {\n      // remove named module\n      return definition.replace( \"'packery/packery',\", '' )\n        // use explicit file paths, './rect' -> 'packery/rect'\n        .replace( /'.\\//g, \"'packery/js/\" );\n    }) )\n    .pipe( replace( \"define( 'packery/\", \"define( 'packery/js/\" ) )\n    // add banner\n    .pipe( addBanner( banner ) )\n    .pipe( rename('packery.pkgd.js') )\n    .pipe( gulp.dest('dist') );\n});\n\n\n// ----- uglify ----- //\n\nvar uglify = require('gulp-uglify');\n\ngulp.task( 'uglify', [ 'requirejs' ], function() {\n  var banner = getBanner();\n  gulp.src('dist/packery.pkgd.js')\n    .pipe( uglify() )\n    // add banner\n    .pipe( addBanner( banner ) )\n    .pipe( rename('packery.pkgd.min.js') )\n    .pipe( gulp.dest('dist') );\n});\n\n// ----- version ----- //\n\n// set version in source files\n\nvar minimist = require('minimist');\nvar gutil = require('gulp-util');\nvar chalk = require('chalk');\n\n// use gulp version -t 1.2.3\ngulp.task( 'version', function() {\n  var args = minimist( process.argv.slice(3) );\n  var version = args.t;\n  if ( !version || !/^\\d\\.\\d+\\.\\d+/.test( version ) ) {\n    gutil.log( 'invalid version: ' + chalk.red( version ) );\n    return;\n  }\n  gutil.log( 'ticking version to ' + chalk.green( version ) );\n\n  gulp.src('js/packery.js')\n    .pipe( replace( /Packery v\\d\\.\\d+\\.\\d+/, 'Packery v' + version ) )\n    .pipe( gulp.dest('js') );\n\n  gulp.src( [ 'package.json' ] )\n    .pipe( replace( /\"version\": \"\\d\\.\\d+\\.\\d+\"/, '\"version\": \"' + version + '\"' ) )\n    .pipe( gulp.dest('.') );\n  // replace CDN links in README\n  var minorVersion = version.match( /^\\d\\.\\d+/ )[0];\n  gulp.src('README.md')\n    .pipe( replace( /packery@\\d\\.\\d+/g, 'packery@' + minorVersion ))\n    .pipe( gulp.dest('.') );\n});\n\n// ----- default ----- //\n\ngulp.task( 'default', [\n  'hint',\n  'uglify'\n]);\n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.189453125,
          "content": "{\n  \"name\": \"packery\",\n  \"version\": \"2.1.2\",\n  \"description\": \"Gapless, draggable grid layouts\",\n  \"main\": \"js/packery.js\",\n  \"dependencies\": {\n    \"get-size\": \"^2.0.2\",\n    \"outlayer\": \"^2.0.0\"\n  },\n  \"devDependencies\": {\n    \"chalk\": \"^1.1.1\",\n    \"draggabilly\": \"^2.1.0\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-jshint\": \"^2.0.0\",\n    \"gulp-json-lint\": \"^0.1.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-replace\": \"^0.5.4\",\n    \"gulp-requirejs-optimize\": \"github:metafizzy/gulp-requirejs-optimize\",\n    \"gulp-uglify\": \"^1.5.1\",\n    \"gulp-util\": \"^3.0.7\",\n    \"jquery\": \">=2 <4\",\n    \"jquery-bridget\": \"~2.0.0\",\n    \"jshint\": \"^2.9.1\",\n    \"minimist\": \"^1.2.0\",\n    \"qunitjs\": \"^1.15\"\n  },\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/metafizzy/packery.git\"\n  },\n  \"keywords\": [\n    \"DOM\",\n    \"browser\",\n    \"layout\",\n    \"bin\",\n    \"binpacking\",\n    \"packing\",\n    \"masonry\",\n    \"gapless\",\n    \"draggable\"\n  ],\n  \"author\": \"Metafizzy\",\n  \"bugs\": {\n    \"url\": \"https://github.com/metafizzy/packery/issues\"\n  },\n  \"homepage\": \"https://packery.metafizzy.co\",\n  \"license\": \"GPL-3.0\"\n}\n"
        },
        {
          "name": "sandbox",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}