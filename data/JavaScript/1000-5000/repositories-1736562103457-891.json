{
  "metadata": {
    "timestamp": 1736562103457,
    "page": 891,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "moose-team/friends",
      "stars": 3167,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0849609375,
          "content": ".DS_Store\napp/style/*.css\nfriendsdb/\nnode_modules/\npkg/\npublic-keys/\nFriends.app\n*.log\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0712890625,
          "content": "language: node_js\nnode_js:\n  - '4'\n  - '5'\ninstall: npm install standard\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.177734375,
          "content": "# Friends change log\n\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n## Unreleased\n* engage\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2158203125,
          "content": "# Contributing Guidelines\n\nContributions welcome!\n\n**Before spending lots of time on something, ask for feedback on your idea first!**\n\nPlease search issues and pull requests before adding something new to avoid duplicating efforts and conversations.\n\nThis project welcomes non-code contributions, too! The following types of contributions are welcome:\n\n- **Ideas**: participate in an issue thread or start your own to have your voice heard.\n- **Writing**: contribute your expertise in an area by helping expand the included content.\n- **Copy editing**: fix typos, clarify language, and generally improve the quality of the content.\n- **Formatting**: help keep content easy to read with consistent formatting.\n\n## Code Style\n\n[![standard][standard-image]][standard-url]\n\nThis repository uses [`standard`][standard-url] to maintain code style and consistency, and to avoid style arguments. `npm test` runs `standard` automatically, so you don't have to!\n\n[standard-image]: https://cdn.rawgit.com/feross/standard/master/badge.svg\n[standard-url]: https://github.com/feross/standard\n\n# Project Governance\n\n**This is an [OPEN Open Source Project](http://openopensource.org/).**\n\nIndividuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.\n\n## Rules\n\nThere are a few basic ground-rules for contributors:\n\n1. **No `--force` pushes** or modifying the Git history in any way.\n1. **Non-master branches** ought to be used for ongoing work.\n1. **External API changes and significant modifications** ought to be subject to an **internal pull-request** to solicit feedback from other contributors.\n1. Internal pull-requests to solicit feedback are *encouraged* for any other non-trivial contribution but left to the discretion of the contributor.\n1. Contributors should attempt to adhere to the prevailing code style.\n\n## Releases\n\nDeclaring formal releases remains the prerogative of the project maintainer.\n\n## Changes to this arrangement\n\nThis is an experiment and feedback is welcome! This document may also be subject to pull-requests or changes by contributors where you believe you have something valuable to add or change.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.111328125,
          "content": "# [MIT License](https://spdx.org/licenses/MIT)\n\nCopyright (c) 2015-2016 [MOOSE Team](http://moose-team.github.io)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5576171875,
          "content": "# Friends\n\n> P2P chat powered by the Web.\n\n[![travis][travis-image]][travis-url]\n[![david][david-image]][david-url]\n[![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/moose-team/friends/master.svg\n[travis-url]: https://travis-ci.org/moose-team/friends\n[david-image]: https://img.shields.io/david/moose-team/friends.svg\n[david-url]: https://david-dm.org/moose-team/friends\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n![screenshot](static/screenshot.png)\n\n**This project is alpha quality.** You probably only want to use this if you like to send pull requests fixing things :)\n\n## How it works\n\nSee [our site](http://moose-team.github.io/friends/) or the `gh-pages` branch.\n\n## Install\n\n### Prerequisites\n\nYou'll need [Node.js](https://nodejs.org) (`>= 4`) and [npm](https://www.npmjs.com/package/npm) (`>= 2.8.3`).\n\n### Build\n\nClone the source locally:\n\n```sh\n$ git clone https://github.com/moose-team/friends\n$ cd friends\n```\n\nInstall project dependencies:\n\n```sh\n$ npm install\n```\n\nCompile leveldown for [electron](http://electron.atom.io/):\n\n```sh\n$ npm run rebuild-leveldb\n```\n\nIf you are not on 64-bit architecture, you will have to modify the command in package.json:\n\n```\n\"rebuild-leveldb\": \"cd node_modules/leveldown && set HOME=~/.electron-gyp && node-gyp rebuild --target=$(../../version.js) --arch=x64 --dist-url=https://atom.io/download/atom-shell\"\n```\n\nto use `--arch=ia32`.\n\n## Usage\n\n### GitHub Login\n\nFriends currently uses your git and github configuration for authentication.\n\nIf you don't already have a public key on GitHub and corresponding private key on your machine, you'll need to [set that up first](https://help.github.com/articles/generating-ssh-keys/). Make sure your github username is also set, using `git config --global github.user yourusername`.\n\nIf you're having trouble getting this part to work, do this to get debug information:\n\n```\n$ npm i github-current-user -g\n$ DEBUG=* github-current-user\n```\n\nand then report an [issue](https://github.com/moose-team/friends/issues).\n\n**Note**: DSA keys are not supported. You should switch to RSA anyway for security reasons.\n\nIf it can't verify you, try doing `ssh-add ~/.ssh/id_rsa`. Your key should show up when you run `ssh-add -l`.\n\n### Run\n\nTo run from the command line, execute `npm start`.\n\nTo create a distributable app, run `npm run package`.\n\n## Contributing\n\nContributions welcome! Please read the [contributing guidelines](CONTRIBUTING.md) before getting started.\n\n## License\n\n[MIT](LICENSE.md)\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.js",
          "type": "blob",
          "size": 0.46875,
          "content": "var applicationConfigPath = require('application-config-path')\nvar path = require('path')\n\nvar CONFIG_PATH = applicationConfigPath('Friends')\nvar ROOT_PATH = __dirname\n\nmodule.exports = {\n  APP_NAME: 'Friends',\n\n  CONFIG_PATH: CONFIG_PATH,\n  DB_PATH: path.join(CONFIG_PATH, 'friendsdb'),\n  KEYS_PATH: path.join(CONFIG_PATH, 'public-keys'),\n\n  INDEX: 'file://' + path.join(ROOT_PATH, 'index.html'),\n  GIT_HELP: 'file://' + path.join(ROOT_PATH, 'app', 'windows', 'git-help.html')\n}\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.6328125,
          "content": "<html>\n<head>\n  <title>Friends</title>\n  <link rel=\"stylesheet\" href=\"node_modules/highlight.js/styles/solarized-light.css\" charset=\"utf-8\">\n  <link rel=\"stylesheet\" href=\"app/style/bundle.css\" charset=\"utf-8\">\n</head>\n<body>\n  <audio src=\"static/startup.ogg\" autoplay></audio>\n  <script>\n  if (typeof require !== 'function') {\n    // If we are in a web env\n    var script = document.createElement('script')\n    script.src = 'bundle.js'\n    document.currentScript.parentNode.insertBefore(script, document.currentScript)\n  } else {\n    // If we are in the electron env\n    var friends = require('./app/desktop.js')()\n  }\n  </script>\n</body>\n</html>\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.3681640625,
          "content": "var BrowserWindow = require('browser-window')\nvar config = require('./config')\nvar app = require('app')\n\napp.on('ready', appReady)\n\nvar mainWindow\n\nfunction appReady () {\n  mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n    title: config.APP_NAME\n  })\n\n  mainWindow.loadURL(config.INDEX)\n\n  mainWindow.on('closed', function () {\n    mainWindow = null\n  })\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.58203125,
          "content": "{\n  \"name\": \"friends\",\n  \"description\": \"P2P chat powered by the Web.\",\n  \"version\": \"1.0.0\",\n  \"author\": [\n    \"feross\",\n    \"maxogden\",\n    \"mafintosh\",\n    \"ngoldman\",\n    \"shama\",\n    \"jlord\",\n    \"chrisdickinson\"\n  ],\n  \"browser\": {\n    \"ghsign\": false,\n    \"github-current-user\": false,\n    \"leveldown\": \"level-js\"\n  },\n  \"browserify\": {\n    \"transforms\": [\n      \"brfs\"\n    ]\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/moose-team/friends/issues\"\n  },\n  \"dependencies\": {\n    \"application-config-path\": \"^0.1.0\",\n    \"cat-names\": \"^1.0.2\",\n    \"dom-delegate\": \"^2.0.3\",\n    \"end-of-stream\": \"^1.1.0\",\n    \"friends-swarm\": \"^2.0.0\",\n    \"ghsign\": \"^3.0.1\",\n    \"github-current-user\": \"^2.5.0\",\n    \"highlight.js\": \"^9.2.0\",\n    \"inherits\": \"^2.0.1\",\n    \"level-js\": \"^2.2.1\",\n    \"leveldown\": \"^1.4.1\",\n    \"levelup\": \"^1.2.1\",\n    \"lodash.uniq\": \"^4.2.0\",\n    \"mkdirp\": \"^0.5.1\",\n    \"modal-element\": \"^1.0.0\",\n    \"moment\": \"^2.12.0\",\n    \"rich-message\": \"^1.0.2\",\n    \"silence-chromium\": \"^2.0.0\",\n    \"simple-get\": \"^2.0.0\",\n    \"subleveldown\": \"^2.0.0\",\n    \"yo-yo\": \"^1.1.1\"\n  },\n  \"devDependencies\": {\n    \"beefy\": \"^2.1.5\",\n    \"brfs\": \"^1.4.1\",\n    \"electron-packager\": \"^5.0.2\",\n    \"electron-prebuilt\": \"0.36.10\",\n    \"nib\": \"^1.1.0\",\n    \"node-gyp\": \"^2.0.2\",\n    \"rimraf\": \"^2.3.3\",\n    \"shelljs\": \"^0.4.0\",\n    \"standard\": \"*\",\n    \"stylus\": \"^0.52.0\",\n    \"watchify\": \"^3.2.1\"\n  },\n  \"engines\": {\n    \"node\": \">=4\",\n    \"npm\": \">=2.8.3\"\n  },\n  \"homepage\": \"https://github.com/moose-team/friends\",\n  \"keywords\": [\n    \"chat\",\n    \"communication\",\n    \"crypto\",\n    \"discussion\",\n    \"friends\",\n    \"irc\",\n    \"mad science\",\n    \"p2p\",\n    \"peer-to-peer\",\n    \"replication\",\n    \"slack\",\n    \"team chat\",\n    \"webrtc\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/moose-team/friends.git\"\n  },\n  \"scripts\": {\n    \"build-css\": \"stylus -u nib app/style/index.styl -o app/style/bundle.css -c\",\n    \"prepackage\": \"npm run build-css\",\n    \"package\": \"node pkg.js\",\n    \"package-all\": \"npm run package -- --all\",\n    \"rebuild-leveldb\": \"cd node_modules/leveldown && set HOME=~/.electron-gyp && node-gyp rebuild --target=$npm_package_devDependencies_electron_prebuilt --arch=x64 --dist-url=https://atom.io/download/atom-shell\",\n    \"start\": \"npm run build-css && electron index.js 2>&1 | silence-chromium\",\n    \"test\": \"standard\",\n    \"watch\": \"npm run build-css && (npm run watch-css & electron index.js 2>&1 | silence-chromium)\",\n    \"watch-css\": \"stylus -u nib app/style/index.styl -o app/style/bundle.css -w\",\n    \"web\": \"beefy app/web.js:bundle.js\"\n  }\n}\n"
        },
        {
          "name": "pkg.js",
          "type": "blob",
          "size": 1.48828125,
          "content": "#!/usr/bin/env node\n\nvar os = require('os')\nvar pkgjson = require('./package.json')\nvar path = require('path')\nvar sh = require('shelljs')\n\nvar appVersion = pkgjson.version\nvar appName = pkgjson.name\nvar electronPackager = path.join('node_modules', '.bin', 'electron-packager')\nvar electronVersion = pkgjson.devDependencies['electron-prebuilt']\nvar icon = path.join('static', 'Icon.icns')\n\nif (process.argv[2] === '--all') {\n  // build for all platforms\n  var archs = ['ia32', 'x64']\n  var platforms = ['linux', 'win32', 'darwin']\n\n  platforms.forEach(function (plat) {\n    archs.forEach(function (arch) {\n      pack(plat, arch)\n    })\n  })\n} else {\n  // build for current platform only\n  pack(os.platform(), os.arch())\n}\n\nfunction pack (plat, arch) {\n  var prefix = os.platform() === 'win32' ? '.\\\\' : './'\n  var rimraf = path.join('node_modules', '.bin', 'rimraf')\n  var outputPath = path.join('pkg', appVersion, plat, arch)\n\n  // there is no darwin ia32 electron\n  if (plat === 'darwin' && arch === 'ia32') return\n\n  var cmd1 = `${prefix}${rimraf} ${outputPath}`\n  var cmd2 = `${prefix}${electronPackager} . ${appName} ` +\n    `--platform=${plat} ` +\n    `--arch=${arch} ` +\n    `--version=${electronVersion} ` +\n    `--app-version=${appVersion} ` +\n    `--icon=${icon} ` +\n    `--out=${outputPath} ` +\n    '--prune ' +\n    '--ignore=pkg' // ignore the pkg directory or hilarity will ensue\n\n  console.log(`${cmd1}\\n${cmd2}`)\n\n  if (process.argv.slice(2)[0] === '--dry') process.exit(0)\n\n  sh.exec(cmd1)\n  sh.exec(cmd2)\n}\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}