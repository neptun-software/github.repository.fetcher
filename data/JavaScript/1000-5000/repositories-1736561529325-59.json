{
  "metadata": {
    "timestamp": 1736561529325,
    "page": 59,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jnordberg/gif.js",
      "stars": 4821,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "node_modules\nsite/build/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.060546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013-2018 Johan Nordberg\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.185546875,
          "content": "\n# gif.js\n\nJavaScript GIF encoder that runs in your browser.\n\nUses typed arrays and web workers to render each frame in the background, it's really fast!\n\n**Demo** - http://jnordberg.github.io/gif.js/\n\nWorks in browsers supporting: [Web Workers](http://www.w3.org/TR/workers/), [File API](http://www.w3.org/TR/FileAPI/) and [Typed Arrays](https://www.khronos.org/registry/typedarray/specs/latest/)\n\n\n## Usage\n\nInclude `gif.js` found in `dist/` in your page. Also make sure to have `gif.worker.js` in the same location.\n\n```javascript\nvar gif = new GIF({\n  workers: 2,\n  quality: 10\n});\n\n// add an image element\ngif.addFrame(imageElement);\n\n// or a canvas element\ngif.addFrame(canvasElement, {delay: 200});\n\n// or copy the pixels from a canvas context\ngif.addFrame(ctx, {copy: true});\n\ngif.on('finished', function(blob) {\n  window.open(URL.createObjectURL(blob));\n});\n\ngif.render();\n\n```\n\n## Options\n\nOptions can be passed to the constructor or using the `setOptions` method.\n\n| Name         | Default         | Description                                        |\n| -------------|-----------------|----------------------------------------------------|\n| repeat       | `0`             | repeat count, `-1` = no repeat, `0` = forever      |\n| quality      | `10`            | pixel sample interval, lower is better             |\n| workers      | `2`             | number of web workers to spawn                     |\n| workerScript | `gif.worker.js` | url to load worker script from                     |\n| background   | `#fff`          | background color where source image is transparent |\n| width        | `null`          | output image width                                 |\n| height       | `null`          | output image height                                |\n| transparent  | `null`          | transparent hex color, `0x00FF00` = green          |\n| dither       | `false`         | dithering method, e.g. `FloydSteinberg-serpentine` |\n| debug        | `false`         | whether to print debug information to console      |\n\nIf width or height is `null` image size will be deteremined by first frame added.\n\nAvailable dithering methods are:\n\n * `FloydSteinberg`\n * `FalseFloydSteinberg`\n * `Stucki`\n * `Atkinson`\n\nYou can add `-serpentine` to use serpentine scanning, e.g. `Stucki-serpentine`.\n\n### addFrame options\n\n| Name         | Default         | Description                                        |\n| -------------|-----------------|----------------------------------------------------|\n| delay        | `500`           | frame delay                                        |\n| copy         | `false`         | copy the pixel data                                |\n| dispose      | `-1`            | frame disposal code. See [GIF89a Spec][gif89aspec] |\n\n[gif89aspec]: https://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\n## Acknowledgements\n\ngif.js is based on:\n\n * [Kevin Weiner's Animated gif encoder classes](http://www.fmsware.com/stuff/gif.html)\n * [Neural-Net color quantization algorithm by Anthony Dekker](http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n * [Thibault Imbert's as3gif](https://code.google.com/p/as3gif/)\n\nDithering code contributed by @PAEz and @panrafal\n\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Johan Nordberg\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.35546875,
          "content": "/*     _    ___  _\n      (_)  / __)(_)\n  ____ _ _| |__  _  ___\n / _  | (_   __)| |/___)\n( (_| | | | | _ | |___ |\n \\___ |_| |_|(_)| (___/\n(_____|       (_*/\n\nmodule.exports = {\n  NeuQuant: require('./src/NeuQuant.js'),\n  TypedNeuQuant: require('./src/TypedNeuQuant.js'),\n  GIFEncoder: require('./src/GIFEncoder.js'),\n  LZWEncoder: require('./src/LZWEncoder.js')\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.5546875,
          "content": "{\n  \"name\": \"gif.js\",\n  \"version\": \"0.2.0\",\n  \"description\": \"JavaScript GIF encoding library\",\n  \"author\": \"Johan Nordberg <code@johan-nordberg.com>\",\n  \"main\": \"index.js\",\n  \"repository\": \"https://github.com/jnordberg/gif.js.git\",\n  \"devDependencies\": {\n    \"browserify\": \"^13.1.1\",\n    \"coffeeify\": \"^2.1.0\",\n    \"exorcist\": \"^0.4.0\",\n    \"uglify-js\": \"^2.7.5\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"./bin/build\"\n  },\n  \"browser\": \"./dist/gif.js\",\n  \"keywords\": [\n    \"gif\",\n    \"animation\",\n    \"encoder\"\n  ],\n  \"license\": \"MIT\",\n  \"readmeFilename\": \"README.md\"\n}\n"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}