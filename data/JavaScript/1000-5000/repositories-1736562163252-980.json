{
  "metadata": {
    "timestamp": 1736562163252,
    "page": 980,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "liabru/jquery-match-height",
      "stars": 3062,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.35546875,
          "content": "{\n    \"rules\": {\n        \"indent\": [\n            2,\n            4\n        ],\n        \"quotes\": [\n            2,\n            \"single\"\n        ],\n        \"semi\": [\n            2,\n            \"always\"\n        ]\n    },\n    \"env\": {\n        \"node\": true,\n        \"browser\": true,\n        \"jquery\": true,\n        \"amd\": true\n    },\n    \"extends\": \"eslint:recommended\"\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03515625,
          "content": ".idea\r\nnode_modules\r\nprivate.conf.js"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.2978515625,
          "content": "<a name=\"0.7.2\"></a>\n## 0.7.2 (2017-02-19)\n\n\n\n\n<a name=\"0.7.1\"></a>\n## 0.7.1 (2017-02-19)\n\n\n* change $.bind to $.on where supported, closes #120 and #145 ([e468ae9](https://github.com/liabru/jquery-match-height/commit/e468ae9)), closes [#120](https://github.com/liabru/jquery-match-height/issues/120) [#145](https://github.com/liabru/jquery-match-height/issues/145)\n* deleted redundant min file (moved to dist) ([f530833](https://github.com/liabru/jquery-match-height/commit/f530833))\n* fix release tasks ([1462c36](https://github.com/liabru/jquery-match-height/commit/1462c36))\n* Merge pull request #115 from robeerob/patch-1 ([ab31d58](https://github.com/liabru/jquery-match-height/commit/ab31d58))\n* Update README.md with raw downloadable install url ([dcc9ad6](https://github.com/liabru/jquery-match-height/commit/dcc9ad6))\n\n\n\n<a name=\"0.7.0\"></a>\n# 0.7.0 (2016-01-04)\n\n### release summary\n\n* added build tasks\n* added selenium unit tests\n* added lint tests\n* added `matchHeight.version` property\n* added to npm\n\n* fixed unitless properties\n* fixed inline styles being removed\n* fixed `display: flex` issue\n* fixed `display: inline-flex` issue\n* fixed row detection when items contain floating elements\n* fixed compatibility for module loaders\n\n### commit log\n\n* add custom version argument to gulp build ([ad8aac5](https://github.com/liabru/jquery-match-height/commit/ad8aac5))\n* add delay to jasmine boot ([30824fb](https://github.com/liabru/jquery-match-height/commit/30824fb))\n* add lint to all test tasks ([6b16f67](https://github.com/liabru/jquery-match-height/commit/6b16f67))\n* add test for _parse on string values with units ([4a64208](https://github.com/liabru/jquery-match-height/commit/4a64208))\n* add to npm ([0055660](https://github.com/liabru/jquery-match-height/commit/0055660))\n* added a section on tests to readme ([e0be682](https://github.com/liabru/jquery-match-height/commit/e0be682))\n* added changelog task ([5263ab1](https://github.com/liabru/jquery-match-height/commit/5263ab1))\n* added cloud selenium, local emulated ie testing, lint task, build task, release task, improved tests ([06bd876](https://github.com/liabru/jquery-match-height/commit/06bd876))\n* added gulpfile, jasmine test specs, browser test runner, selenium test runner ([ca926de](https://github.com/liabru/jquery-match-height/commit/ca926de))\n* added libscore ([03a4317](https://github.com/liabru/jquery-match-height/commit/03a4317))\n* added matchHeight.version property ([431e4d0](https://github.com/liabru/jquery-match-height/commit/431e4d0))\n* added release tasks ([49cc72f](https://github.com/liabru/jquery-match-height/commit/49cc72f))\n* added test for property option ([7bdada7](https://github.com/liabru/jquery-match-height/commit/7bdada7))\n* added test for remove ([445799d](https://github.com/liabru/jquery-match-height/commit/445799d))\n* added tests for custom toBeWithinTolerance matcher ([a89b1c2](https://github.com/liabru/jquery-match-height/commit/a89b1c2))\n* bump jquery package version ([cc9c416](https://github.com/liabru/jquery-match-height/commit/cc9c416))\n* change tests to use jquery type checking functions ([6cf52f0](https://github.com/liabru/jquery-match-height/commit/6cf52f0))\n* faster selenium testing ([a6b2da3](https://github.com/liabru/jquery-match-height/commit/a6b2da3))\n* fix bower instructions in readme ([91e50ad](https://github.com/liabru/jquery-match-height/commit/91e50ad))\n* fix for display: inline-flex, closes #68 ([e769b9f](https://github.com/liabru/jquery-match-height/commit/e769b9f)), closes [#68](https://github.com/liabru/jquery-match-height/issues/68)\n* fix for unitless properties by forcing px, closes #64 ([d8cc365](https://github.com/liabru/jquery-match-height/commit/d8cc365)), closes [#64](https://github.com/liabru/jquery-match-height/issues/64)\n* fix issue maintaining inline styles, closes #95 ([878ff96](https://github.com/liabru/jquery-match-height/commit/878ff96)), closes [#95](https://github.com/liabru/jquery-match-height/issues/95)\n* fix issue with 'display:flex', closes #77 ([dc53a49](https://github.com/liabru/jquery-match-height/commit/dc53a49)), closes [#77](https://github.com/liabru/jquery-match-height/issues/77)\n* fix issues with build script ([1195421](https://github.com/liabru/jquery-match-height/commit/1195421))\n* fix linter issues ([0165e74](https://github.com/liabru/jquery-match-height/commit/0165e74))\n* Fix package manager registries URLs ([036df1b](https://github.com/liabru/jquery-match-height/commit/036df1b))\n* fixed local test config for non-windows ([d67ca25](https://github.com/liabru/jquery-match-height/commit/d67ca25))\n* fixed missing dependencies ([c608b80](https://github.com/liabru/jquery-match-height/commit/c608b80))\n* handle error when test server is already running ([9e6487d](https://github.com/liabru/jquery-match-height/commit/9e6487d))\n* ignore linebreak style on lint ([1510b58](https://github.com/liabru/jquery-match-height/commit/1510b58))\n* Improve row detection when cells contain floating contents ([8844acb](https://github.com/liabru/jquery-match-height/commit/8844acb))\n* improved readme ([1cf2c27](https://github.com/liabru/jquery-match-height/commit/1cf2c27))\n* improved tasks ([61a9ed4](https://github.com/liabru/jquery-match-height/commit/61a9ed4))\n* improved tests ([b1cadb5](https://github.com/liabru/jquery-match-height/commit/b1cadb5))\n* Make plugin compatible with module loaders ([b5988c1](https://github.com/liabru/jquery-match-height/commit/b5988c1))\n* Merge branch 'feature/tests' into develop ([a7d35dc](https://github.com/liabru/jquery-match-height/commit/a7d35dc))\n* Merge branch 'floatingcontents' of https://github.com/jorrit/jquery-match-height into jorrit-floatin ([89b74a7](https://github.com/liabru/jquery-match-height/commit/89b74a7))\n* Merge branch 'jorrit-floatingcontents' ([dc9716b](https://github.com/liabru/jquery-match-height/commit/dc9716b))\n* Merge pull request #81 from afelicioni/patch-1 ([c5566da](https://github.com/liabru/jquery-match-height/commit/c5566da))\n* Merge pull request #82 from JulienMelissas/patch-1 ([63d8ca4](https://github.com/liabru/jquery-match-height/commit/63d8ca4))\n* remove ie testing meta tags ([44ed2fe](https://github.com/liabru/jquery-match-height/commit/44ed2fe))\n* replace browserstack tunnel with ngrok ([2c67ca0](https://github.com/liabru/jquery-match-height/commit/2c67ca0))\n* run webdriver spec for all breakpoints ([3440598](https://github.com/liabru/jquery-match-height/commit/3440598))\n* update master build ([df2e0c2](https://github.com/liabru/jquery-match-height/commit/df2e0c2))\n* update master build ([f4b4b98](https://github.com/liabru/jquery-match-height/commit/f4b4b98))\n* updated min file ([99648ca](https://github.com/liabru/jquery-match-height/commit/99648ca))\n* use a spy for callback tests ([a72a2cf](https://github.com/liabru/jquery-match-height/commit/a72a2cf))\n* use gutil.log ([00a91bc](https://github.com/liabru/jquery-match-height/commit/00a91bc))\n* use local test images ([02398d9](https://github.com/liabru/jquery-match-height/commit/02398d9))\n* Use unminified version in Bower's \"main\" argument ([eedca73](https://github.com/liabru/jquery-match-height/commit/eedca73))\n\n\n\n<a name=\"0.6.0\"></a>\n# 0.6.0 (2015-03-31)\n\n### release summary\n\n- added options parameter\n- added `property` option\n- added `target` option\n- added callback events\n- added maintain scroll\n- added inline-block support\n- added hidden elements support\n- improved performance and throttling\n- improved demo\n\n- fixed declaration order issue when using requirejs\n- fixed issues for people using build concatenation\n- fixed data api issue with missing data-mh\n- fixed IE8 border calculation\n- fixed Safari row detection\n- fixed inline style preservation\n\n### commit log\n\n* Fix usage of data-mh attribute ([816850d](https://github.com/liabru/jquery-match-height/commit/816850d))\n* Improve support when concatenated or minified ([09c4b1a](https://github.com/liabru/jquery-match-height/commit/09c4b1a))\n* Merge branch 'kwoodfriend-patch-1' ([dde46f9](https://github.com/liabru/jquery-match-height/commit/dde46f9))\n* Merge branch 'nyordanov-master' ([dc77dbe](https://github.com/liabru/jquery-match-height/commit/dc77dbe))\n* Merge branch 'patch-1' of https://github.com/kwoodfriend/jquery-match-height into kwoodfriend-patch- ([e009c4c](https://github.com/liabru/jquery-match-height/commit/e009c4c))\n* Merge branch 'stefanozoffoli-patch-1' ([c0104c4](https://github.com/liabru/jquery-match-height/commit/c0104c4))\n* Preserve inline styles when using byRow ([72ba5cf](https://github.com/liabru/jquery-match-height/commit/72ba5cf))\n* added display property tests ([5dafa0c](https://github.com/liabru/jquery-match-height/commit/5dafa0c))\n* added gitignore ([d76b02c](https://github.com/liabru/jquery-match-height/commit/d76b02c))\n* added local jquery ([9239f4e](https://github.com/liabru/jquery-match-height/commit/9239f4e))\n* added maintainScroll functionality, closes #18 ([ee83317](https://github.com/liabru/jquery-match-height/commit/ee83317)), closes [#18](https://github.com/liabru/jquery-match-height/issues/18)\n* added support for hidden elements, closes #12 ([9a8944b](https://github.com/liabru/jquery-match-height/commit/9a8944b)), closes [#12](https://github.com/liabru/jquery-match-height/issues/12)\n* added support for options, added property option for min-height ([94c9d28](https://github.com/liabru/jquery-match-height/commit/94c9d28))\n* added update callback events ([0b31e21](https://github.com/liabru/jquery-match-height/commit/0b31e21))\n* avoid call to .is when no target specified ([db9996d](https://github.com/liabru/jquery-match-height/commit/db9996d))\n* changed master build description ([6dcc13d](https://github.com/liabru/jquery-match-height/commit/6dcc13d))\n* early out on options parser ([b4326d3](https://github.com/liabru/jquery-match-height/commit/b4326d3))\n* fix for single item rows, closes #48 ([64b9a54](https://github.com/liabru/jquery-match-height/commit/64b9a54)), closes [#48](https://github.com/liabru/jquery-match-height/issues/48)\n* fix handling of hidden elements by row, closes #28 ([71a5151](https://github.com/liabru/jquery-match-height/commit/71a5151)), closes [#28](https://github.com/liabru/jquery-match-height/issues/28)\n* fix row detection on safari (windows) ([b52448a](https://github.com/liabru/jquery-match-height/commit/b52448a))\n* fix to preserve inline styles ([e9de702](https://github.com/liabru/jquery-match-height/commit/e9de702))\n* fix typo in target option, closes #63 ([290dfcf](https://github.com/liabru/jquery-match-height/commit/290dfcf)), closes [#63](https://github.com/liabru/jquery-match-height/issues/63)\n* fixed IE8 border reset issue, closes #10 ([246820d](https://github.com/liabru/jquery-match-height/commit/246820d)), closes [#10](https://github.com/liabru/jquery-match-height/issues/10)\n* fixed support for inline-block ([b3df801](https://github.com/liabru/jquery-match-height/commit/b3df801))\n* fixed throttling issue ([fdc8f7a](https://github.com/liabru/jquery-match-height/commit/fdc8f7a))\n* implemented target option ([a01fb70](https://github.com/liabru/jquery-match-height/commit/a01fb70))\n* improved readme ([9ba9529](https://github.com/liabru/jquery-match-height/commit/9ba9529))\n* preserve inline styles on hidden parents, closes #46 ([4917d6c](https://github.com/liabru/jquery-match-height/commit/4917d6c)), closes [#46](https://github.com/liabru/jquery-match-height/issues/46)\n* refactored plugin definition ([467d928](https://github.com/liabru/jquery-match-height/commit/467d928))\n* release 0.6.0 ([aef80df](https://github.com/liabru/jquery-match-height/commit/aef80df))\n* removed redundant css setter ([6c7e6ad](https://github.com/liabru/jquery-match-height/commit/6c7e6ad))\n* reorganised source, closes #27 ([cae21cd](https://github.com/liabru/jquery-match-height/commit/cae21cd)), closes [#27](https://github.com/liabru/jquery-match-height/issues/27)\n* skip apply to rows with only one item ([f72ab91](https://github.com/liabru/jquery-match-height/commit/f72ab91))\n* updated min file ([56214a1](https://github.com/liabru/jquery-match-height/commit/56214a1))\n* updated min file ([9aa96f1](https://github.com/liabru/jquery-match-height/commit/9aa96f1))\n* updated min file ([b6f612a](https://github.com/liabru/jquery-match-height/commit/b6f612a))\n* updated min file ([128c363](https://github.com/liabru/jquery-match-height/commit/128c363))\n* updated readme ([667e516](https://github.com/liabru/jquery-match-height/commit/667e516))\n* updated readme ([a30551f](https://github.com/liabru/jquery-match-height/commit/a30551f))\n* updated readme with known limitations ([57ee64a](https://github.com/liabru/jquery-match-height/commit/57ee64a))\n* updating minified version ([ab3963f](https://github.com/liabru/jquery-match-height/commit/ab3963f))\n\n\n\n<a name=\"0.5.2\"></a>\n# 0.5.2 (2014-06-10)\n\n### release summary\n\n- improved demo\n- added matchHeight('remove')\n- added update throttling\n- removed forced `display:block` after application\n\n### commit log\n\n* added matchHeight('remove') ([8f5f13f](https://github.com/liabru/jquery-match-height/commit/8f5f13f))\n* added updated throttling ([6d9a6a7](https://github.com/liabru/jquery-match-height/commit/6d9a6a7))\n* prettier demo ([f7ea426](https://github.com/liabru/jquery-match-height/commit/f7ea426))\n* release 0.5.2 ([4b8f8e4](https://github.com/liabru/jquery-match-height/commit/4b8f8e4))\n* removed forced `display:block` after application ([a3a058c](https://github.com/liabru/jquery-match-height/commit/a3a058c))\n* updated changelog ([ecee5f9](https://github.com/liabru/jquery-match-height/commit/ecee5f9))\n* updated readme, changelog, build ([ae0a825](https://github.com/liabru/jquery-match-height/commit/ae0a825))\n\n\n\n<a name=\"0.5.1\"></a>\n# 0.5.1 (2014-04-15)\n\n### release summary\n\n- fixed IE8 NaN bug when parsing 'auto' properties\n- fixed IE8 window resize event loop bug\n- fixed compatibility with older jQuery versions\n- added bower package file\n- added jquery package file\n\n### commit log\n\n* Making the library compatible with old jQuery versions < 1.7 ([4c3f945](https://github.com/liabru/jquery-match-height/commit/4c3f945))\n* Making the library compatible with old jQuery versions < 1.7 ([7d467aa](https://github.com/liabru/jquery-match-height/commit/7d467aa))\n* Merge pull request #3 from dcorb/master ([18a6fa1](https://github.com/liabru/jquery-match-height/commit/18a6fa1))\n* added CHANGELOG ([b1ed72d](https://github.com/liabru/jquery-match-height/commit/b1ed72d))\n* added bower package ([56c9902](https://github.com/liabru/jquery-match-height/commit/56c9902))\n* added minified version ([44c4554](https://github.com/liabru/jquery-match-height/commit/44c4554))\n* fixed IE8 NaN bug when parsing 'auto' properties ([702eea6](https://github.com/liabru/jquery-match-height/commit/702eea6))\n* fixed IE8 window resize event loop bug ([22b74da](https://github.com/liabru/jquery-match-height/commit/22b74da))\n* increment version ([0cb6082](https://github.com/liabru/jquery-match-height/commit/0cb6082))\n* updated minified build ([3873f7d](https://github.com/liabru/jquery-match-height/commit/3873f7d))\n* updated readme ([b62297b](https://github.com/liabru/jquery-match-height/commit/b62297b))\n\n\n\n<a name=\"0.5.0\"></a>\n# 0.5.0 (2014-03-02)\n\n### release summary\n\n- initial release\n\n### commit log\n\n* added jquery package file ([3fdbeae](https://github.com/liabru/jquery-match-height/commit/3fdbeae))\n* initial commit ([35b8209](https://github.com/liabru/jquery-match-height/commit/35b8209))\n* updated readme ([ae41130](https://github.com/liabru/jquery-match-height/commit/ae41130))\n* updated readme ([6e1b0f8](https://github.com/liabru/jquery-match-height/commit/6e1b0f8))\n\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Liam Brummitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.572265625,
          "content": "# jquery.matchHeight.js #\n\n> *matchHeight* makes the height of all selected elements exactly equal\n\n[brm.io/jquery-match-height](http://brm.io/jquery-match-height/)\n\n[Demo](#demo) - [Features](#features) - [Gallery](#gallery) - [Install](#install) - [Usage](#usage) - [Options](#options) - [Data API](#data-api)  \n[Advanced Usage](#advanced-usage) - [Tests](#tests) - [Known limitations](#known-limitations) - [Changelog](#changelog) - [License](#license)\n\n[![](http://api.libscore.com/badge/$.fn.matchHeight.svg)](http://libscore.com#$.fn.matchHeight)\n\n### Demo\n\nSee the [jquery.matchHeight.js demo](http://brm.io/jquery-match-height-demo).\n\n[![jquery.matchHeight.js screenshot](http://brm.io/img/content/jquery-match-height/jquery-match-height.png)](http://brm.io/jquery-match-height-demo)\n\n### Modern browsers\n\nIn the years since this library was originally developed there have been updates to CSS that can now achieve equal heights in many situations. If you only need to support modern browsers then consider using [CSS Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) and [CSS Grid](https://css-tricks.com/snippets/css/complete-guide-grid/) instead.\n\n### Features\n\n- match the heights for groups of elements automatically\n- use the maximum height or define a specific target element\n- anywhere on the page and anywhere in the DOM\n- responsive (updates on window resize)\n- row aware (handles floating elements and wrapping)\n- accounts for `box-sizing` and mixed `padding`, `margin`, `border` values\n- handles images and other media (updates after loading)\n- supports hidden or none-visible elements (e.g. those inside tab controls)\n- throttled to balance performance and smoothness\n- easily removed when needed\n- maintain scroll position\n- data attributes API\n- callback events\n- unit tests\n- module loader support\n- tested in IE8+, Chrome, Firefox, Safari, Android, iOS\n\n### Gallery\n\nSee how others are using jquery.matchHeight.js\n\n- [Visa](https://www.visa.co.uk/)\n- [Nokia](http://www.nokia.com/)\n- [PayPal](https://www.paypal.com/)\n- [MTV](http://www.mtv.co.uk/)\n- [Bose](https://www.bose.com/)\n- [Chipotle](http://chipotle.com/)\n- [Fisher-Price](http://www.fisher-price.com/)\n- [Sega](http://sega.jp/)\n- [barackobama.com](https://www.barackobama.com/)\n- [more...](http://libscore.com#$.fn.matchHeight)\n\n### Install\n\n[jQuery](http://jquery.com/download/) is required, so include it first.\n  Download [jquery.matchHeight.js](https://raw.githubusercontent.com/liabru/jquery-match-height/master/jquery.matchHeight.js) and include the script in your HTML file:\n\n\t<script src=\"jquery.matchHeight.js\" type=\"text/javascript\"></script>\n\nYou can also install using the package managers [Bower](http://bower.io/search/?q=matchHeight) and [NPM](https://www.npmjs.com/package/jquery-match-height).\n\n    bower install matchheight\n    npm install jquery-match-height\n\n### Usage\n\n\t$(function() {\n\t\t$('.item').matchHeight(options);\n\t});\n\nWhere `options` is an optional parameter.   \nSee below for a description of the available options and defaults.\n\nThe above example will set all selected elements with the class `item` to the height of the tallest.  \nIf the items are on multiple rows, the items of each row will be set to the tallest of that row (see `byRow` option).\n\nCall this on the [DOM ready](http://api.jquery.com/ready/) event (the plugin will automatically update on window load).   \nSee the included [test.html](https://github.com/liabru/jquery-match-height/blob/master/test/page/test.html) for many working examples.\n\nAlso see the [Data API](#data-api) below for a simple, alternative inline usage.\n\n### Options\n\nThe default `options` are:\n\n    {\n        byRow: true,\n        property: 'height',\n        target: null,\n        remove: false\n    }\n\nWhere:\n\n- `byRow` is `true` or `false` to enable row detection\n- `property` is the CSS property name to set (e.g. `'height'` or `'min-height'`)\n- `target` is an optional element to use instead of the element with maximum height\n- `remove` is `true` or `false` to remove previous bindings instead of applying new ones\n\n### Data API\n\nUse the data attribute `data-mh=\"group-name\"` where `group-name` is an arbitrary string to identify which elements should be considered as a group.\n\n\t<div data-mh=\"my-group\">My text</div>\n\t<div data-mh=\"my-group\">Some other text</div>\n\t<div data-mh=\"my-other-group\">Even more text</div>\n\t<div data-mh=\"my-other-group\">The last bit of text</div>\n\nAll elements with the same group name will be set to the same height when the page is loaded, regardless of their position in the DOM, without any extra code required. \n\nNote that `byRow` will be enabled when using the data API, if you don't want this (or require other options) then use the alternative method above.\n\n### Advanced Usage\n\nThere are some additional functions and properties you should know about:\n\n#### Manually trigger an update\n\n\t$.fn.matchHeight._update()\n\nIf you need to manually trigger an update of all currently set groups, for example if you've modified some content.\n\n#### Row detection\n\nYou can toggle row detection by setting the `byRow` option, which defaults to `true`.  \nIt's also possible to use the row detection function at any time:\n\n    $.fn.matchHeight._rows($('.item'));\n\nWhich will return an array of element selections for each row, see [this thread](https://github.com/liabru/jquery-match-height/issues/90) for more information and an example.\n\n#### Remove bindings\n\n\t$('.item').matchHeight({ remove: true });\n\nThis will remove all bindings for the selected elements, from all groups.\n\n#### Custom target element\n\n\t$(function() {\n\t\t$('.item').matchHeight({\n            target: $('.sidebar')\n        });\n\t});\n\nWill set all selected elements to the height of the first item with class `sidebar`.\n\n#### Custom property\n\n\t$('.item').matchHeight({ property: 'min-height' });\n\nThis will set the `min-height` property instead of the `height` property.\n\n#### Callback events\n\nSince matchHeight automatically handles updating the layout after certain window events, you can supply functions as global callbacks if you need to be notified:\n\n    $.fn.matchHeight._beforeUpdate = function(event, groups) {\n        // do something before any updates are applied\n    }\n\n    $.fn.matchHeight._afterUpdate = function(event, groups) {\n        // do something after all updates are applied\n    }\n\nWhere `event` a jQuery event object (e.g. `load`, `resize`, `orientationchange`) and `groups` is a reference to `$.fn.matchHeight._groups` (see below).\n\n#### Manually apply match height\n\n\t$.fn.matchHeight._apply(elements, options)\n\nUse the apply function directly if you wish to avoid the automatic update functionality.\n\n#### Throttling resize updates\n\n\t$.fn.matchHeight._throttle = 80;\n\nBy default, the `_update` method is throttled to execute at a maximum rate of once every `80ms`.\nDecreasing the above `_throttle` property will update your layout quicker, appearing smoother during resize, at the expense of performance.\nIf you experience lagging or freezing during resize, you should increase the `_throttle` property.\n\n#### Maintain scroll position\n\n\t$.fn.matchHeight._maintainScroll = true;\n\nUnder certain conditions where the size of the page is dynamically changing, such as during resize or when adding new elements, browser bugs cause the page scroll position to change unexpectedly.\n\nIf you are observing this behaviour, use the above line to automatically attempt to force scroll position to be maintained (approximately). This is a global setting and by default it is `false`.\n\n#### Accessing current group bindings\n\n\t$.fn.matchHeight._groups\n\nThe array that contains all element groups that have had `matchHeight` applied. Used internally for automatically updating on resize events, but you may modify this array if you need to manually access any groups (e.g. if you're deleting elements).\n\n### Tests\n\nOpen `test/page/test.html` in your browser to run [unit tests](https://github.com/liabru/jquery-match-height/blob/master/test/specs/matchHeight.spec.js) via the [jasmine](https://github.com/jasmine/jasmine) test runner.\n\nIf you wish to contribute functionality to this project, you are encouraged to add new tests following the same conventions.\n\nRun `gulp test` to run unit tests on [multiple browsers](https://github.com/liabru/jquery-match-height/blob/master/test/conf/local.conf.js) and multiple resolutions, automatically through [selenium](http://www.seleniumhq.org/).\n\nRun `gulp test:cloud` to test on [even more browsers](https://github.com/liabru/jquery-match-height/blob/master/test/conf/cloud.conf.js) via a cloud service (you will need to create a file called `test/conf/private.conf.js` with your [cloud credentials](http://webdriver.io/guide/testrunner/cloudservices.html) that looks like this:\n\n    exports.config = {\n        user: 'username',\n        key: 'key'\n    };\n\nCloud browser testing for this project is provided by [BrowserStack](https://www.browserstack.com/) (which is [free for open source](https://www.browserstack.com/pricing)).\n\n### Known limitations\n\n#### CSS transitions and animations are not supported\n\nYou should ensure that there are no transitions or other animations that will delay the height changes of the elements you are matching, including any `transition: all` rules. Otherwise the plugin will produce unexpected results, as animations can't be accounted for.\n\n#### Delayed webfonts may cause incorrect height\n\nSome browsers [do not wait](http://www.stevesouders.com/blog/2009/10/13/font-face-and-performance/) for webfonts to load before firing the window load event, so if the font loads too slowly the plugin may produce unexpected results.\n\nIf this is a problem, you should call `_update` once your font has loaded by using something like the [webfontloader](https://github.com/typekit/webfontloader) script.\n\n#### Content changes require a manual update\n\nIf you change the content inside an element that has had `matchHeight` applied, then you must manually call `$.fn.matchHeight._update()` afterwards. This will update of all currently set equal heights groups.\n\nAlso note that previous matchHeight bindings do not apply to new elements, even if they match the selector used. In this case you must remove the old bindings and add new ones, see [this comment](https://github.com/liabru/jquery-match-height/issues/60#issuecomment-155913995).\n\n### Changelog\n\nTo see what's new or changed in the latest version, see the [changelog](https://github.com/liabru/jquery-match-height/blob/master/CHANGELOG.md)\n\n### License\n\njquery.matchHeight.js is licensed under [The MIT License (MIT)](http://opensource.org/licenses/MIT)\n<br/>Copyright (c) 2014 Liam Brummitt\n\nThis license is also supplied with the release and source code.\n<br/>As stated in the license, absolutely no warranty is provided.\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.58984375,
          "content": "{\n    \"name\": \"matchHeight\",\n    \"version\": \"0.7.2\",\n    \"homepage\": \"https://github.com/liabru/jquery-match-height\",\n    \"authors\": [\n        \"Liam Brummitt <liam@brm.io> (http://brm.io/)\"\n    ],\n    \"description\": \"a more robust, responsive equal heights plugin for jQuery\",\n    \"main\": \"dist/jquery.matchHeight.js\",\n    \"keywords\": [\n        \"matchHeight\",\n        \"equal\",\n        \"match\",\n        \"height\",\n        \"equalize\",\n        \"columns\"\n    ],\n    \"license\": \"MIT\",\n    \"ignore\": [\n        \"**/.*\",\n        \"node_modules\",\n        \"bower_components\",\n        \"test\",\n        \"tests\"\n    ]\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 7.80859375,
          "content": "// TODO: add more test specs (see matchHeight.spec.js)\n// TODO: travis CI\n\nvar gulp = require('gulp');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar header = require('gulp-header');\nvar eslint = require('gulp-eslint');\nvar gulpBump = require('gulp-bump');\nvar changelog = require('gulp-conventional-changelog');\nvar tag = require('gulp-tag-version');\nvar release = require('gulp-github-release');\nvar sequence = require('run-sequence');\nvar gutil = require('gulp-util');\nvar replace = require('gulp-replace');\nvar webdriver = require('gulp-webdriver');\nvar webserver = require('gulp-webserver');\nvar selenium = require('selenium-standalone');\nvar ngrok = require('ngrok');\nvar staticTransform = require('connect-static-transform');\nvar pkg = require('./package.json');\nvar extend = require('util')._extend;\nvar exec = require('child_process').exec;\nvar fs = require('fs');\nvar buildDirectory = 'dist';\nvar server;\n\ngulp.task('release', function(callback) {\n    var type = process.argv[4] || 'minor';\n    sequence('lint', 'test', 'build', 'bump:' + type, 'changelog', 'tag', callback);\n});\n\ngulp.task('release:push', function(callback) {\n    sequence('release:push:git', 'release:push:github', 'release:push:npm', callback);\n});\n\ngulp.task('release:push:github', function(callback) {\n    return gulp.src([\n            'CHANGELOG.md',\n            'LICENSE', \n            buildDirectory + '/jquery.matchHeight-min.js', \n            buildDirectory + '/jquery.matchHeight.js'\n        ])\n        .pipe(release({\n          owner: 'liabru',\n          repo: pkg.name,\n          tag: pkg.version,\n          name: 'jquery.matchHeight.js ' + pkg.version\n        }));\n});\n\ngulp.task('release:push:git', function(callback) {\n    shell('git push', callback);\n});\n\ngulp.task('release:push:npm', function(callback) {\n    shell('npm publish', callback);\n});\n\ngulp.task('build', function() {\n    var build = extend(pkg);\n    build.version = process.argv[4] || pkg.version;\n\n    gulp.src('jquery.matchHeight.js')\n        .pipe(replace(\"jquery-match-height master\", \"jquery-match-height \" + build.version))\n        .pipe(replace(\"version = 'master'\", \"version = '\" + build.version + \"'\"))\n        .pipe(gulp.dest(buildDirectory));\n\n    return gulp.src('jquery.matchHeight.js')\n        .pipe(replace(\"version = 'master'\", \"version = '\" + build.version + \"'\"))\n        .pipe(uglify({ output: { max_line_len: 500 } }))\n        .pipe(header(banner, { build: build }))\n        .pipe(rename({ suffix: '-min' }))\n        .pipe(gulp.dest(buildDirectory));\n});\n\ngulp.task('lint', function() {\n    return gulp.src(pkg.main)\n        .pipe(eslint())\n        .pipe(eslint.format())\n        .pipe(eslint.failAfterError());\n});\n\nvar bump = function(options) {\n    return gulp.src(['package.json', 'bower.json'])\n        .pipe(gulpBump(options))\n        .pipe(gulp.dest('.'));\n};\n\ngulp.task('bump:patch', function() {\n    return bump({ type: 'patch' });\n});\n\ngulp.task('bump:minor', function() {\n    return bump({ type: 'minor' });\n});\n\ngulp.task('bump:major', function() {\n    return bump({ type: 'major' });\n});\n\ngulp.task('tag', function() {\n    return gulp.src('package.json')\n        .pipe(tag({ prefix: '' }));\n});\n\ngulp.task('changelog', function () {\n    return gulp.src('CHANGELOG.md')\n        .pipe(changelog())\n        .pipe(gulp.dest('.'));\n});\n\ngulp.task('serve', function() {\n    serve(false);\n});\n\ngulp.task('serve:test', function() {\n    serve(true);\n});\n\ngulp.task('serve:stop', function() {\n    if (server) {\n        try {\n            server.emit('kill');\n        } catch (e) {} // eslint-disable-line no-empty\n        gutil.log('Web server stopped');\n    }\n});\n\ngulp.task('selenium', function(done) {\n    var start = function(err) {\n        gutil.log('Starting Selenium server...');\n        selenium.start(function(err, child) {\n            gutil.log('Selenium server started');\n            selenium.child = child;\n            done(err);\n        });\n    };\n\n    try {\n        fs.statSync('node_modules/selenium-standalone/.selenium');\n        start();\n    } catch (e) {\n        gutil.log('Setting up Selenium server...');\n        selenium.install({\n            logger: function(message) { gutil.log(message); }\n        }, function(err) {\n            start(err);\n        });\n    }\n});\n\ngulp.task('test', function(done) {\n    sequence('lint', 'serve:test', 'selenium', function() {\n        var error;\n        gutil.log('Starting webdriver...');\n\n        var finish = function(err) {\n            gutil.log('Webdriver stopped');\n            selenium.child.kill();\n            gutil.log('Selenium server stopped');\n            gulp.start('serve:stop');\n            done(error || err);\n        };\n\n        gulp.src('test/conf/local.conf.js')\n            .pipe(webdriver({\n                baseUrl: 'http://localhost:8000'\n            }))\n            .on('error', function(err) { \n                console.error(err);\n                error = err; \n            })\n            .on('finish', finish);\n    });\n});\n\ngulp.task('test:cloud', ['lint', 'serve:test'], function(done) {\n    ngrok.connect({\n        authtoken: null,\n        port: 8000\n    }, function (err, url) {\n        gutil.log('Tunnel started', url);\n        gulp.src('test/conf/cloud.conf.js')\n        .pipe(webdriver({\n            baseUrl: url\n        }))\n        .on('finish', function(err) {\n            if (server) {\n                ngrok.disconnect();\n                ngrok.kill();\n                gutil.log('Tunnel stopped');\n                gulp.start('serve:stop');\n            }\n            done(err);\n        });\n    });\n});\n\ngulp.task('test:cloud:all', ['lint', 'serve:test'], function(done) {\n    ngrok.connect({\n        authtoken: null,\n        port: 8000\n    }, function (err, url) {\n        gutil.log('Tunnel started', url);\n        gulp.src('test/conf/cloud-all.conf.js')\n        .pipe(webdriver({\n            baseUrl: url\n        }))\n        .on('finish', function(err) {\n            if (server) {\n                ngrok.disconnect();\n                ngrok.kill();\n                gutil.log('Tunnel stopped');\n                gulp.start('serve:stop');\n            }\n            done(err);\n        });\n    });\n});\n\nvar serve = function(isTest) {\n    process.on('uncaughtException', function(err) {\n        if (err.errno === 'EADDRINUSE') {\n            gutil.log('Server already running (or port is otherwise in use)');\n        }\n    });\n\n    server = gulp.src('.')\n        .pipe(webserver({\n            host: '0.0.0.0',\n            livereload: !isTest,\n            middleware: function(req, res, next) {\n                var ieMode = (req._parsedUrl.query || '').replace('=','');\n                if (ieMode in emulateIEMiddleware) {\n                    emulateIEMiddleware[ieMode](req, res, next);\n                } else {\n                    next();\n                }\n            },\n            open: isTest ? false : 'http://localhost:8000/test/page/test.html',\n            directoryListing: true\n        }));\n};\n\nvar banner = [\n  '/*',\n  '* <%= build.name %> <%= build.version %> by @liabru',\n  '* <%= build.homepage %>',\n  '* License <%= build.license %>',\n  '*/',\n  ''\n].join('\\n');\n\nvar emulateIEMiddlewareFactory = function(version) {\n    return staticTransform({\n        root: __dirname,\n        match: /(.+)\\.html/,\n        transform: function (path, text, send) {\n            send(text.replace('content=\"IE=edge,chrome=1\"', 'content=\"IE=' + version + '\"'));\n        }\n    });\n};\n\nvar emulateIEMiddleware = {\n    'ie8': emulateIEMiddlewareFactory(8),\n    'ie9': emulateIEMiddlewareFactory(9),\n    'ie10': emulateIEMiddlewareFactory(10)\n};\n\nvar shell = function(command, callback) {\n    var args = process.argv.slice(3).join(' '),\n        proc = exec(command + ' ' + args, function(err) {\n            callback(err);\n        });\n\n    proc.stdout.on('data', function(data) {\n        process.stdout.write(data);\n    });\n\n    proc.stderr.on('data', function(data) {\n        process.stderr.write(data);\n    });\n};"
        },
        {
          "name": "jquery.matchHeight.js",
          "type": "blob",
          "size": 11.501953125,
          "content": "/**\n* jquery-match-height master by @liabru\n* http://brm.io/jquery-match-height/\n* License: MIT\n*/\n\n;(function(factory) { // eslint-disable-line no-extra-semi\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], factory);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        // CommonJS\n        module.exports = factory(require('jquery'));\n    } else {\n        // Global\n        factory(jQuery);\n    }\n})(function($) {\n    /*\n    *  internal\n    */\n\n    var _previousResizeWidth = -1,\n        _updateTimeout = -1;\n\n    /*\n    *  _parse\n    *  value parse utility function\n    */\n\n    var _parse = function(value) {\n        // parse value and convert NaN to 0\n        return parseFloat(value) || 0;\n    };\n\n    /*\n    *  _rows\n    *  utility function returns array of jQuery selections representing each row\n    *  (as displayed after float wrapping applied by browser)\n    */\n\n    var _rows = function(elements) {\n        var tolerance = 1,\n            $elements = $(elements),\n            lastTop = null,\n            rows = [];\n\n        // group elements by their top position\n        $elements.each(function(){\n            var $that = $(this),\n                top = $that.offset().top - _parse($that.css('margin-top')),\n                lastRow = rows.length > 0 ? rows[rows.length - 1] : null;\n\n            if (lastRow === null) {\n                // first item on the row, so just push it\n                rows.push($that);\n            } else {\n                // if the row top is the same, add to the row group\n                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {\n                    rows[rows.length - 1] = lastRow.add($that);\n                } else {\n                    // otherwise start a new row group\n                    rows.push($that);\n                }\n            }\n\n            // keep track of the last row top\n            lastTop = top;\n        });\n\n        return rows;\n    };\n\n    /*\n    *  _parseOptions\n    *  handle plugin options\n    */\n\n    var _parseOptions = function(options) {\n        var opts = {\n            byRow: true,\n            property: 'height',\n            target: null,\n            remove: false\n        };\n\n        if (typeof options === 'object') {\n            return $.extend(opts, options);\n        }\n\n        if (typeof options === 'boolean') {\n            opts.byRow = options;\n        } else if (options === 'remove') {\n            opts.remove = true;\n        }\n\n        return opts;\n    };\n\n    /*\n    *  matchHeight\n    *  plugin definition\n    */\n\n    var matchHeight = $.fn.matchHeight = function(options) {\n        var opts = _parseOptions(options);\n\n        // handle remove\n        if (opts.remove) {\n            var that = this;\n\n            // remove fixed height from all selected elements\n            this.css(opts.property, '');\n\n            // remove selected elements from all groups\n            $.each(matchHeight._groups, function(key, group) {\n                group.elements = group.elements.not(that);\n            });\n\n            // TODO: cleanup empty groups\n\n            return this;\n        }\n\n        if (this.length <= 1 && !opts.target) {\n            return this;\n        }\n\n        // keep track of this group so we can re-apply later on load and resize events\n        matchHeight._groups.push({\n            elements: this,\n            options: opts\n        });\n\n        // match each element's height to the tallest element in the selection\n        matchHeight._apply(this, opts);\n\n        return this;\n    };\n\n    /*\n    *  plugin global options\n    */\n\n    matchHeight.version = 'master';\n    matchHeight._groups = [];\n    matchHeight._throttle = 80;\n    matchHeight._maintainScroll = false;\n    matchHeight._beforeUpdate = null;\n    matchHeight._afterUpdate = null;\n    matchHeight._rows = _rows;\n    matchHeight._parse = _parse;\n    matchHeight._parseOptions = _parseOptions;\n\n    /*\n    *  matchHeight._apply\n    *  apply matchHeight to given elements\n    */\n\n    matchHeight._apply = function(elements, options) {\n        var opts = _parseOptions(options),\n            $elements = $(elements),\n            rows = [$elements];\n\n        // take note of scroll position\n        var scrollTop = $(window).scrollTop(),\n            htmlHeight = $('html').outerHeight(true);\n\n        // get hidden parents\n        var $hiddenParents = $elements.parents().filter(':hidden');\n\n        // cache the original inline style\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.data('style-cache', $that.attr('style'));\n        });\n\n        // temporarily must force hidden parents visible\n        $hiddenParents.css('display', 'block');\n\n        // get rows if using byRow, otherwise assume one row\n        if (opts.byRow && !opts.target) {\n\n            // must first force an arbitrary equal height so floating elements break evenly\n            $elements.each(function() {\n                var $that = $(this),\n                    display = $that.css('display');\n\n                // temporarily force a usable display value\n                if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                    display = 'block';\n                }\n\n                // cache the original inline style\n                $that.data('style-cache', $that.attr('style'));\n\n                $that.css({\n                    'display': display,\n                    'padding-top': '0',\n                    'padding-bottom': '0',\n                    'margin-top': '0',\n                    'margin-bottom': '0',\n                    'border-top-width': '0',\n                    'border-bottom-width': '0',\n                    'height': '100px',\n                    'overflow': 'hidden'\n                });\n            });\n\n            // get the array of rows (based on element top position)\n            rows = _rows($elements);\n\n            // revert original inline styles\n            $elements.each(function() {\n                var $that = $(this);\n                $that.attr('style', $that.data('style-cache') || '');\n            });\n        }\n\n        $.each(rows, function(key, row) {\n            var $row = $(row),\n                targetHeight = 0;\n\n            if (!opts.target) {\n                // skip apply to rows with only one item\n                if (opts.byRow && $row.length <= 1) {\n                    $row.css(opts.property, '');\n                    return;\n                }\n\n                // iterate the row and find the max height\n                $row.each(function(){\n                    var $that = $(this),\n                        style = $that.attr('style'),\n                        display = $that.css('display');\n\n                    // temporarily force a usable display value\n                    if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                        display = 'block';\n                    }\n\n                    // ensure we get the correct actual height (and not a previously set height value)\n                    var css = { 'display': display };\n                    css[opts.property] = '';\n                    $that.css(css);\n\n                    // find the max height (including padding, but not margin)\n                    if ($that.outerHeight(false) > targetHeight) {\n                        targetHeight = $that.outerHeight(false);\n                    }\n\n                    // revert styles\n                    if (style) {\n                        $that.attr('style', style);\n                    } else {\n                        $that.css('display', '');\n                    }\n                });\n            } else {\n                // if target set, use the height of the target element\n                targetHeight = opts.target.outerHeight(false);\n            }\n\n            // iterate the row and apply the height to all elements\n            $row.each(function(){\n                var $that = $(this),\n                    verticalPadding = 0;\n\n                // don't apply to a target\n                if (opts.target && $that.is(opts.target)) {\n                    return;\n                }\n\n                // handle padding and border correctly (required when not using border-box)\n                if ($that.css('box-sizing') !== 'border-box') {\n                    verticalPadding += _parse($that.css('border-top-width')) + _parse($that.css('border-bottom-width'));\n                    verticalPadding += _parse($that.css('padding-top')) + _parse($that.css('padding-bottom'));\n                }\n\n                // set the height (accounting for padding and border)\n                $that.css(opts.property, (targetHeight - verticalPadding) + 'px');\n            });\n        });\n\n        // revert hidden parents\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.attr('style', $that.data('style-cache') || null);\n        });\n\n        // restore scroll position if enabled\n        if (matchHeight._maintainScroll) {\n            $(window).scrollTop((scrollTop / htmlHeight) * $('html').outerHeight(true));\n        }\n\n        return this;\n    };\n\n    /*\n    *  matchHeight._applyDataApi\n    *  applies matchHeight to all elements with a data-match-height attribute\n    */\n\n    matchHeight._applyDataApi = function() {\n        var groups = {};\n\n        // generate groups by their groupId set by elements using data-match-height\n        $('[data-match-height], [data-mh]').each(function() {\n            var $this = $(this),\n                groupId = $this.attr('data-mh') || $this.attr('data-match-height');\n\n            if (groupId in groups) {\n                groups[groupId] = groups[groupId].add($this);\n            } else {\n                groups[groupId] = $this;\n            }\n        });\n\n        // apply matchHeight to each group\n        $.each(groups, function() {\n            this.matchHeight(true);\n        });\n    };\n\n    /*\n    *  matchHeight._update\n    *  updates matchHeight on all current groups with their correct options\n    */\n\n    var _update = function(event) {\n        if (matchHeight._beforeUpdate) {\n            matchHeight._beforeUpdate(event, matchHeight._groups);\n        }\n\n        $.each(matchHeight._groups, function() {\n            matchHeight._apply(this.elements, this.options);\n        });\n\n        if (matchHeight._afterUpdate) {\n            matchHeight._afterUpdate(event, matchHeight._groups);\n        }\n    };\n\n    matchHeight._update = function(throttle, event) {\n        // prevent update if fired from a resize event\n        // where the viewport width hasn't actually changed\n        // fixes an event looping bug in IE8\n        if (event && event.type === 'resize') {\n            var windowWidth = $(window).width();\n            if (windowWidth === _previousResizeWidth) {\n                return;\n            }\n            _previousResizeWidth = windowWidth;\n        }\n\n        // throttle updates\n        if (!throttle) {\n            _update(event);\n        } else if (_updateTimeout === -1) {\n            _updateTimeout = setTimeout(function() {\n                _update(event);\n                _updateTimeout = -1;\n            }, matchHeight._throttle);\n        }\n    };\n\n    /*\n    *  bind events\n    */\n\n    // apply on DOM ready event\n    $(matchHeight._applyDataApi);\n\n    // use on or bind where supported\n    var on = $.fn.on ? 'on' : 'bind';\n\n    // update heights on load and resize events\n    $(window)[on]('load', function(event) {\n        matchHeight._update(false, event);\n    });\n\n    // throttled update heights on resize events\n    $(window)[on]('resize orientationchange', function(event) {\n        matchHeight._update(true, event);\n    });\n\n});\n"
        },
        {
          "name": "matchHeight.jquery.json",
          "type": "blob",
          "size": 0.859375,
          "content": "{\n    \"name\": \"matchHeight\",\n    \"title\": \"jQuery matchHeight\",\n    \"description\": \"A more robust equal heights plugin for jQuery\",\n    \"keywords\": [\n        \"matchHeight\",\n        \"equal\",\n        \"match\",\n        \"height\",\n        \"equalize\",\n        \"columns\"\n    ],\n    \"version\": \"0.6.0\",\n    \"author\": {\n        \"name\": \"liabru\",\n        \"url\": \"http://brm.io\"\n    },\n    \"licenses\": [\n        {\n            \"type\": \"MIT\",\n            \"url\": \"https://github.com/liabru/jquery-match-height/blob/master/LICENSE\"\n        }\n    ],\n    \"demo\": \"http://brm.io/jquery-match-height-demo/\",\n    \"bugs\": \"https://github.com/liabru/jquery-match-height/issues\",\n    \"homepage\": \"http://brm.io/jquery-match-height/\",\n    \"docs\": \"http://brm.io/jquery-match-height/\",\n    \"download\": \"https://github.com/liabru/jquery-match-height\",\n    \"dependencies\": {\n        \"jquery\": \">=1.5\"\n    }\n}"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.2802734375,
          "content": "{\n  \"name\": \"jquery-match-height\",\n  \"version\": \"0.7.2\",\n  \"license\": \"MIT\",\n  \"homepage\": \"http://brm.io/jquery-match-height/\",\n  \"author\": \"Liam Brummitt <liam@brm.io> (http://brm.io/)\",\n  \"description\": \"a responsive equal heights plugin for jQuery\",\n  \"main\": \"dist/jquery.matchHeight.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/liabru/jquery-match-height.git\"\n  },\n  \"keywords\": [\n    \"matchHeight\",\n    \"equal\",\n    \"match\",\n    \"height\",\n    \"equalize\",\n    \"columns\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/liabru/jquery-match-height/issues\"\n  },\n  \"scripts\": {\n    \"test\": \"gulp test\"\n  },\n  \"devDependencies\": {\n    \"async\": \"^1.5.0\",\n    \"connect-static-transform\": \"^0.8.0\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-browserstack\": \"^1.0.0\",\n    \"gulp-bump\": \"^1.0.0\",\n    \"gulp-conventional-changelog\": \"^0.7.0\",\n    \"gulp-eslint\": \"^1.0.0\",\n    \"gulp-github-release\": \"^1.1.0\",\n    \"gulp-header\": \"^1.7.1\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-replace\": \"^0.5.4\",\n    \"gulp-tag-version\": \"^1.3.0\",\n    \"gulp-uglify\": \"^1.4.2\",\n    \"gulp-util\": \"^3.0.7\",\n    \"gulp-webdriver\": \"^1.0.1\",\n    \"gulp-webserver\": \"^0.9.1\",\n    \"jasmine\": \"^2.3.2\",\n    \"ngrok\": \"^0.1.99\",\n    \"run-sequence\": \"^1.1.4\",\n    \"selenium-standalone\": \"^4.7.0\",\n    \"webdriverio\": \"^3.2.5\"\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}