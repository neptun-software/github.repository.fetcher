{
  "metadata": {
    "timestamp": 1736562053075,
    "page": 814,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jonmiles/bootstrap-treeview",
      "stars": 3279,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bowerrc",
          "type": "blob",
          "size": 0.0419921875,
          "content": "{\n\t\"directory\": \"public/bower_components\"\n}"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0380859375,
          "content": "node_modules/\npublic/bower_components/\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.4306640625,
          "content": "{\n  // Details: https://github.com/victorporof/Sublime-JSHint#using-your-own-jshintrc-options\n  // Example: https://github.com/jshint/jshint/blob/master/examples/.jshintrc\n  // Documentation: http://www.jshint.com/docs/\n  \"browser\": true,\n  \"esnext\": true,\n  \"globals\": { $: false, jQuery: false, \"console\": false},\n  \"globalstrict\": true,\n  \"quotmark\": \"single\",\n  \"smarttabs\": true,\n  \"trailing\": true,\n  \"undef\": true,\n  \"unused\": true\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.162109375,
          "content": "language: node_js\n\nnode_js:\n  - \"0.11\"\n  - \"0.10\"\n\nbefore_script:\n  - npm install -g grunt-cli\n  - npm install\n  - bower install\n\nscript: grunt test --verbose --force"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.208984375,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n## v1.2.0 - 9th May, 2015\n\n### New Features\n\n- Disable nodes, allow a tree node to disabled (not selectable, expandable or checkable)\n\n\t- Added node state property `disabled` to set a node initial state\n\n\t- Methods `disableAll`, `disableNode`, `enableAll`, `enableNode` and `toggleNodeDisabled` added to control state programmatically\n\n\t- Events `nodeDisabled` and `nodeEnabled`\n\n- Checkable nodes, allows a tree node to be checked or unchecked.\n\n\t- Added node state property `checked` to set a node initial state\n\n\t- Pass option `{showCheckbox: true}` to initialize tree view with checkboxes\n\n\t- Use options `checkedIcon` and `uncheckedIcon` to configure checkbox icons\n\n\t- Methods `checkAll`, `checkNode`, `uncheckAll`, `uncheckNode` and `toggleNodeChecked` to control state programmatically\n\n\t- Events `nodeChecked` and `nodeUnchecked`\n\n- New option + node property `selectedIcon` to support displaying different icons when a node is selected.\n\n- New search option `{ revealResults : true | false }` which when set to true will automatically expand the tree view to reveal matching nodes\n\n- New method `revealNode` which expands the tree view to reveal a given node\n\n- New methods to retrieve nodes by state : `getSelected`, `getUnselected`, `getExpanded`, `getCollapsed`, `getChecked`, `getUnchecked`, `getDisabled` and `getEnabled`\n\n\n### Changes\n- Removed nodeIcon by default, by popular demand.  Use `{nodeIcon: 'glyphicon glyphicon-stop'}` in initial options to add a node icon.\n\n- Search behaviour, by default search will the expand tree view and reveal results.  Alternatively pass `{revealResults:false}`\n\n- Method collapseNode accepts new option `{ ignoreChildren: true | false }`.  The default is false, passing true will leave child nodes uncollapsed\n\n\n### Bug Fixes\n- Remove unnecessary render in clearSearch when called from search\n\n- Child nodes should collapse by default on collapseNode\n\n- Incorrect expand collapse icon displayed when nodes array is empty\n\n\n\n\n## v1.1.0 - 29th March, 2015 \n\n### New Features\n\n- Added node state properties `expanded` and `selected` so a node's intial state can be set\n\n- New get methods `getNode`, `getParent` and `getSiblings` for retrieving nodes and their immediate relations\n\n- New select methods `selectNode`, `unselectNode` and `toggleNodeSelected`\n\n- Adding `nodeUnselected` event\n\n- New global option `multiSelect` which allows multiple nodes to hold the selected state, default is false\n\n- New expand collapse methods `expandAll`, `collapseAll`, `expandNode`, `collapseNode` and `toggleNodeExpanded`\n\n- Adding events `nodeExpanded` and `nodeCollapsed`\n\n- New methods `search` and `clearSearch` which allow you to query the tree view for nodes based on a `text` value\n\n- Adding events `searchComplete` and `searchCleared`\n\n- New global options `highlightSearchResults`, `searchResultColor` and `searchResultBackColor` for configuring how search results are displayed\n\n\n\n\n## v1.0.2 - 6th February, 2015\n\n### Changes\n- jQuery dependency version updated in Bower\n\n### Bug Fixes\n- Events not unbound when re-initialised\n\n- CSS selectors too general, affecting other page elements\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 1.8271484375,
          "content": "module.exports = function(grunt) {\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'), // the package file to use\n \n    uglify: {\n      files: {\n        expand: true, \n        flatten: true, \n        src: 'src/js/*.js',\n        dest: 'dist',\n        ext: '.min.js'\n      }\n    },\n\n    cssmin: {\n      minify: {\n        expand: true,\n        cwd: 'src/css',\n        src: ['*.css', '!*.min.css'],\n        dest: 'dist',\n        ext: '.min.css'\n      }\n    },\n\n    qunit: {\n        all: ['tests/*.html']\n    },\n\n    watch: {\n      files: ['tests/*.js', 'tests/*.html', 'src/**'],\n      tasks: ['default']\n    },\n\n    copy: {\n      main: { \n        files: [\n          // copy dist to tests\n          // { expand: true, cwd: 'dist', src: '*', dest: 'tests/lib/' },\n          { expand: true, cwd: 'src/css', src: '*', dest: 'tests/lib/' },\n          { expand: true, cwd: 'src/js', src: '*', dest: 'tests/lib/' },\n          // copy latest libs to tests\n          { expand: true, cwd: 'public/bower_components/jquery', src: 'jquery.js', dest: 'tests/lib/' },\n          { expand: true, cwd: 'public/bower_components/bootstrap-datepicker/js', src: 'bootstrap-datepicker.js', dest: 'tests/lib/' },\n          // copy src to example\n          { expand: true, cwd: 'src/css', src: '*', dest: 'public/css/' },\n          { expand: true, cwd: 'src/js', src: '*', dest: 'public/js/' }\n        ]\n      }\n    }\n  });\n\n  // load up your plugins\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n  grunt.loadNpmTasks('grunt-contrib-cssmin');\n  grunt.loadNpmTasks('grunt-contrib-qunit');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n  grunt.loadNpmTasks('grunt-contrib-copy');\n\n  // register one or more task lists (you should ALWAYS have a \"default\" task list)\n  grunt.registerTask('default', ['uglify','cssmin', 'copy', 'qunit', 'watch']);\n  grunt.registerTask('test', 'qunit');\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.8154296875,
          "content": "# Bootstrap Tree View\n\n---\n\n![Bower version](https://img.shields.io/bower/v/bootstrap-treeview.svg?style=flat)\n[![npm version](https://img.shields.io/npm/v/bootstrap-treeview.svg?style=flat)](https://www.npmjs.com/package/bootstrap-treeview)\n[![Build Status](https://img.shields.io/travis/jonmiles/bootstrap-treeview/master.svg?style=flat)](https://travis-ci.org/jonmiles/bootstrap-treeview)\n\nA simple and elegant solution to displaying hierarchical tree structures (i.e. a Tree View) while leveraging the best that Twitter Bootstrap has to offer.\n\n![Bootstrap Tree View Default](https://raw.github.com/jonmiles/bootstrap-treeview/master/screenshot/default.PNG)\n\n## Dependencies\n\nWhere provided these are the actual versions bootstrap-treeview has been tested against.  \n\n- [Bootstrap v3.3.4 (>= 3.0.0)](http://getbootstrap.com/)\n- [jQuery v2.1.3 (>= 1.9.0)](http://jquery.com/)\n\n\n## Getting Started\n\n### Install\n\nYou can install using bower (recommended):\n\n```javascript\n$ bower install bootstrap-treeview\n```\n\nor using npm:\n\n```javascript\n$ npm install bootstrap-treeview\n```\n\nor [download](https://github.com/jonmiles/bootstrap-treeview/releases/tag/v1.2.0) manually.\n\n\n\n### Usage\n\nAdd the following resources for the bootstrap-treeview to function correctly.\n\n```html\n<!-- Required Stylesheets -->\n<link href=\"bootstrap.css\" rel=\"stylesheet\">\n\n<!-- Required Javascript -->\n<script src=\"jquery.js\"></script>\n<script src=\"bootstrap-treeview.js\"></script>\n```\n\nThe component will bind to any existing DOM element.\n\n```html\n<div id=\"tree\"></div>\n```\n\nBasic usage may look something like this.\n\n```javascript\nfunction getTree() {\n  // Some logic to retrieve, or generate tree structure\n  return data;\n}\n\n$('#tree').treeview({data: getTree()});\n```\n\n\n## Data Structure\n\nIn order to define the hierarchical structure needed for the tree it's necessary to provide a nested array of JavaScript objects.\n\nExample\n\n```javascript\nvar tree = [\n  {\n    text: \"Parent 1\",\n    nodes: [\n      {\n        text: \"Child 1\",\n        nodes: [\n          {\n            text: \"Grandchild 1\"\n          },\n          {\n            text: \"Grandchild 2\"\n          }\n        ]\n      },\n      {\n        text: \"Child 2\"\n      }\n    ]\n  },\n  {\n    text: \"Parent 2\"\n  },\n  {\n    text: \"Parent 3\"\n  },\n  {\n    text: \"Parent 4\"\n  },\n  {\n    text: \"Parent 5\"\n  }\n];\n```\n\nAt the lowest level a tree node is a represented as a simple JavaScript object.  This one required property `text` will build you a tree.\n\n```javascript\n{\n  text: \"Node 1\"\n}\n```\n\nIf you want to do more, here's the full node specification\n\n```javascript\n{\n  text: \"Node 1\",\n  icon: \"glyphicon glyphicon-stop\",\n  selectedIcon: \"glyphicon glyphicon-stop\",\n  color: \"#000000\",\n  backColor: \"#FFFFFF\",\n  href: \"#node-1\",\n  selectable: true,\n  state: {\n    checked: true,\n    disabled: true,\n    expanded: true,\n    selected: true\n  },\n  tags: ['available'],\n  nodes: [\n    {},\n    ...\n  ]\n}\n```\n\n### Node Properties\n\nThe following properties are defined to allow node level overrides, such as node specific icons, colours and tags.\n\n#### text\n`String` `Mandatory`\n\nThe text value displayed for a given tree node, typically to the right of the nodes icon.\n\n#### icon\n`String` `Optional`\n\nThe icon displayed on a given node, typically to the left of the text.\n\nFor simplicity we directly leverage [Bootstraps Glyphicons support](http://getbootstrap.com/components/#glyphicons) and as such you should provide both the base class and individual icon class separated by a space.  \n\nBy providing the base class you retain full control over the icons used.  If you want to use your own then just add your class to this icon field.\n\n#### selectedIcon\n`String` `Optional`\n\nThe icon displayed on a given node when selected, typically to the left of the text.\n\n#### color\n`String` `Optional`\n\nThe foreground color used on a given node, overrides global color option.\n\n#### backColor\n`String` `Optional`\n\nThe background color used on a given node, overrides global color option.\n\n#### href\n`String` `Optional`\n\nUsed in conjunction with global enableLinks option to specify anchor tag URL on a given node.\n\n#### selectable\n`Boolean` `Default: true`\n\nWhether or not a node is selectable in the tree. False indicates the node should act as an expansion heading and will not fire selection events.\n\n#### state\n`Object` `Optional`\nDescribes a node's initial state.\n\n#### state.checked\n`Boolean` `Default: false`\n\nWhether or not a node is checked, represented by a checkbox style glyphicon.\n\n#### state.disabled\n`Boolean` `Default: false`\n\nWhether or not a node is disabled (not selectable, expandable or checkable).\n\n#### state.expanded\n`Boolean` `Default: false`\n\nWhether or not a node is expanded i.e. open.  Takes precedence over global option levels.\n\n#### state.selected\n`Boolean` `Default: false`\n\nWhether or not a node is selected.\n\n#### tags\n`Array of Strings`  `Optional`\n\nUsed in conjunction with global showTags option to add additional information to the right of each node; using [Bootstrap Badges](http://getbootstrap.com/components/#badges)\n\n### Extendible\n\nYou can extend the node object by adding any number of additional key value pairs that you require for your application.  Remember this is the object which will be passed around during selection events.\n\n\n\n## Options\n\nOptions allow you to customise the treeview's default appearance and behaviour.  They are passed to the plugin on initialization, as an object.\n\n```javascript\n// Example: initializing the treeview\n// expanded to 5 levels\n// with a background color of green\n$('#tree').treeview({\n  data: data,         // data is not optional\n  levels: 5,\n  backColor: 'green'\n});\n```\nYou can pass a new options object to the treeview at any time but this will have the effect of re-initializing the treeview.\n\n### List of Options\n\nThe following is a list of all available options.\n\n#### data\nArray of Objects.  No default, expects data\n\nThis is the core data to be displayed by the tree view.\n\n#### backColor\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: inherits from Bootstrap.css.\n\nSets the default background color used by all nodes, except when overridden on a per node basis in data.\n\n#### borderColor\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: inherits from Bootstrap.css.\n\nSets the border color for the component; set showBorder to false if you don't want a visible border.\n\n#### checkedIcon\nString, class names(s).  Default: \"glyphicon glyphicon-check\" as defined by [Bootstrap Glyphicons](http://getbootstrap.com/components/#glyphicons)\n\nSets the icon to be as a checked checkbox, used in conjunction with showCheckbox.\n\n#### collapseIcon\nString, class name(s).  Default: \"glyphicon glyphicon-minus\" as defined by [Bootstrap Glyphicons](http://getbootstrap.com/components/#glyphicons)\n\nSets the icon to be used on a collapsible tree node.\n\n#### color\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: inherits from Bootstrap.css.\n\nSets the default foreground color used by all nodes, except when overridden on a per node basis in data.\n\n#### emptyIcon\nString, class name(s).  Default: \"glyphicon\" as defined by [Bootstrap Glyphicons](http://getbootstrap.com/components/#glyphicons)\n\nSets the icon to be used on a tree node with no child nodes.\n\n#### enableLinks\nBoolean.  Default: false\n\nWhether or not to present node text as a hyperlink.  The href value of which must be provided in the data structure on a per node basis.\n\n#### expandIcon\nString, class name(s).  Default: \"glyphicon glyphicon-plus\" as defined by [Bootstrap Glyphicons](http://getbootstrap.com/components/#glyphicons)\n\nSets the icon to be used on an expandable tree node.\n\n#### highlightSearchResults\nBoolean.  Default: true\n\nWhether or not to highlight search results.\n\n#### highlightSelected\nBoolean.  Default: true\n\nWhether or not to highlight the selected node.\n\n#### levels\nInteger. Default: 2\n\nSets the number of hierarchical levels deep the tree will be expanded to by default.\n\n#### multiSelect\nBoolean.  Default: false\n\nWhether or not multiple nodes can be selected at the same time.\n\n#### nodeIcon\nString, class name(s).  Default: \"glyphicon glyphicon-stop\" as defined by [Bootstrap Glyphicons](http://getbootstrap.com/components/#glyphicons)\n\nSets the default icon to be used on all nodes, except when overridden on a per node basis in data.\n\n#### onhoverColor\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: '#F5F5F5'.\n\nSets the default background color activated when the users cursor hovers over a node.\n\n#### selectedIcon\nString, class name(s).  Default: \"glyphicon glyphicon-stop\" as defined by [Bootstrap Glyphicons](http://getbootstrap.com/components/#glyphicons)\n\nSets the default icon to be used on all selected nodes, except when overridden on a per node basis in data.\n\n#### searchResultBackColor\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: undefined, inherits.\n\nSets the background color of the selected node.\n\n#### searchResultColor\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: '#D9534F'.\n\nSets the foreground color of the selected node.\n\n#### selectedBackColor\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: '#428bca'.\n\nSets the background color of the selected node.\n\n#### selectedColor\nString, [any legal color value](http://www.w3schools.com/cssref/css_colors_legal.asp).  Default: '#FFFFFF'.\n\nSets the foreground color of the selected node.\n\n#### showBorder\nBoolean.  Default: true\n\nWhether or not to display a border around nodes.\n\n#### showCheckbox\nBoolean.  Default: false\n\nWhether or not to display checkboxes on nodes.\n\n#### showIcon\nBoolean.  Default: true\n\nWhether or not to display a nodes icon.\n\n#### showTags\nBoolean.  Default: false\n\nWhether or not to display tags to the right of each node.  The values of which must be provided in the data structure on a per node basis.\n\n#### uncheckedIcon\nString, class names(s).  Default: \"glyphicon glyphicon-unchecked\" as defined by [Bootstrap Glyphicons](http://getbootstrap.com/components/#glyphicons)\n\nSets the icon to be as an unchecked checkbox, used in conjunction with showCheckbox.\n\n\n## Methods\n\nMethods provide a way of interacting with the plugin programmatically.  For example, expanding a node is possible via the expandNode method.\n\nYou can invoke methods in one of two ways, using either:\n\n#### 1. The plugin's wrapper\n\nThe plugin's wrapper works as a proxy for accessing the underlying methods.\n\n```javascript\n$('#tree').treeview('methodName', args)\n```\n> Limitation, multiple arguments must be passed as an array of arguments.\n\n#### 2. The treeview directly\n\nYou can get an instance of the treeview using one of the two following methods.\n\n```javascript\n// This special method returns an instance of the treeview.\n$('#tree').treeview(true)\n  .methodName(args);\n\n// The instance is also saved in the DOM elements data,\n// and accessible using the plugin's id 'treeview'.\n$('#tree').data('treeview')\n  .methodName(args);\n```\n> A better approach, if you plan a lot of interaction.\n\n### List of Methods\n\nThe following is a list of all available methods.\n\n#### checkAll(options)\n\nChecks all tree nodes\n\n```javascript\n$('#tree').treeview('checkAll', { silent: true });\n```\n\nTriggers `nodeChecked` event; pass silent to suppress events.\n\n#### checkNode(node | nodeId, options)\n\nChecks a given tree node, accepts node or nodeId.\n\n```javascript\n$('#tree').treeview('checkNode', [ nodeId, { silent: true } ]);\n```\n\nTriggers `nodeChecked` event; pass silent to suppress events.\n\n#### clearSearch()\n\nClear the tree view of any previous search results e.g. remove their highlighted state.\n\n```javascript\n$('#tree').treeview('clearSearch');\n```\n\nTriggers `searchCleared` event\n\n#### collapseAll(options)\n\nCollapse all tree nodes, collapsing the entire tree.\n\n```javascript\n$('#tree').treeview('collapseAll', { silent: true });\n```\n\nTriggers `nodeCollapsed` event; pass silent to suppress events.\n\n#### collapseNode(node | nodeId, options)\n\nCollapse a given tree node and it's child nodes.  If you don't want to collapse the child nodes, pass option `{ ignoreChildren: true }`.\n\n```javascript\n$('#tree').treeview('collapseNode', [ nodeId, { silent: true, ignoreChildren: false } ]);\n```\n\nTriggers `nodeCollapsed` event; pass silent to suppress events.\n\n#### disableAll(options)\n\nDisable all tree nodes\n\n```javascript\n$('#tree').treeview('disableAll', { silent: true });\n```\n\nTriggers `nodeDisabled` event; pass silent to suppress events.\n\n#### disableNode(node | nodeId, options)\n\nDisable a given tree node, accepts node or nodeId.\n\n```javascript\n$('#tree').treeview('disableNode', [ nodeId, { silent: true } ]);\n```\n\nTriggers `nodeDisabled` event; pass silent to suppress events.\n\n#### enableAll(options)\n\nEnable all tree nodes\n\n```javascript\n$('#tree').treeview('enableAll', { silent: true });\n```\n\nTriggers `nodeEnabled` event; pass silent to suppress events.\n\n#### enableNode(node | nodeId, options)\n\nEnable a given tree node, accepts node or nodeId.\n\n```javascript\n$('#tree').treeview('enableNode', [ nodeId, { silent: true } ]);\n```\n\nTriggers `nodeEnabled` event; pass silent to suppress events.\n\n#### expandAll(options)\n\nExpand all tree nodes.  Optionally can be expanded to any given number of levels.\n\n```javascript\n$('#tree').treeview('expandAll', { levels: 2, silent: true });\n```\n\nTriggers `nodeExpanded` event; pass silent to suppress events.\n\n#### expandNode(node | nodeId, options)\n\nExpand a given tree node, accepts node or nodeId.  Optionally can be expanded to any given number of levels.\n\n```javascript\n$('#tree').treeview('expandNode', [ nodeId, { levels: 2, silent: true } ]);\n```\n\nTriggers `nodeExpanded` event; pass silent to suppress events.\n\n#### getCollapsed()\n\nReturns an array of collapsed nodes e.g. state.expanded = false.\n\n```javascript\n$('#tree').treeview('getCollapsed', nodeId);\n```\n\n#### getDisabled()\n\nReturns an array of disabled nodes e.g. state.disabled = true.\n\n```javascript\n$('#tree').treeview('getDisabled', nodeId);\n```\n\n#### getEnabled()\n\nReturns an array of enabled nodes e.g. state.disabled = false.\n\n```javascript\n$('#tree').treeview('getEnabled', nodeId);\n```\n\n#### getExpanded()\n\nReturns an array of expanded nodes e.g. state.expanded = true.\n\n```javascript\n$('#tree').treeview('getExpanded', nodeId);\n```\n\n#### getNode(nodeId)\n\nReturns a single node object that matches the given node id.\n\n```javascript\n$('#tree').treeview('getNode', nodeId);\n```\n\n#### getParent(node | nodeId)\n\nReturns the parent node of a given node, if valid otherwise returns undefined.\n\n```javascript\n$('#tree').treeview('getParent', node);\n```\n\n#### getSelected()\n\nReturns an array of selected nodes e.g. state.selected = true.\n\n```javascript\n$('#tree').treeview('getSelected', nodeId);\n```\n\n#### getSiblings(node | nodeId)\n\nReturns an array of sibling nodes for a given node, if valid otherwise returns undefined.\n\n```javascript\n$('#tree').treeview('getSiblings', node);\n```\n\n#### getUnselected()\n\nReturns an array of unselected nodes e.g. state.selected = false.\n\n```javascript\n$('#tree').treeview('getUnselected', nodeId);\n```\n\n#### remove()\n\nRemoves the tree view component. Removing attached events, internal attached objects, and added HTML elements.\n\n```javascript\n$('#tree').treeview('remove');\n```\n\n#### revealNode(node | nodeId, options)\n\nReveals a given tree node, expanding the tree from node to root.\n\n```javascript\n$('#tree').treeview('revealNode', [ nodeId, { silent: true } ]);\n```\n\nTriggers `nodeExpanded` event; pass silent to suppress events.\n\n#### search(pattern, options)\n\nSearches the tree view for nodes that match a given string, highlighting them in the tree.  \n\nReturns an array of matching nodes.\n\n```javascript\n$('#tree').treeview('search', [ 'Parent', {\n  ignoreCase: true,     // case insensitive\n  exactMatch: false,    // like or equals\n  revealResults: true,  // reveal matching nodes\n}]);\n```\n\nTriggers `searchComplete` event\n\n#### selectNode(node | nodeId, options)\n\nSelects a given tree node, accepts node or nodeId.\n\n```javascript\n$('#tree').treeview('selectNode', [ nodeId, { silent: true } ]);\n```\n\nTriggers `nodeSelected` event; pass silent to suppress events.\n\n#### toggleNodeChecked(node | nodeId, options)\n\nToggles a nodes checked state; checking if unchecked, unchecking if checked.\n\n```javascript\n$('#tree').treeview('toggleNodeChecked', [ nodeId, { silent: true } ]);\n```\n\nTriggers either `nodeChecked` or `nodeUnchecked` event; pass silent to suppress events.\n\n#### toggleNodeDisabled(node | nodeId, options)\n\nToggles a nodes disabled state; disabling if enabled, enabling if disabled.\n\n```javascript\n$('#tree').treeview('toggleNodeDisabled', [ nodeId, { silent: true } ]);\n```\n\nTriggers either `nodeDisabled` or `nodeEnabled` event; pass silent to suppress events.\n\n#### toggleNodeExpanded(node | nodeId, options)\n\nToggles a nodes expanded state; collapsing if expanded, expanding if collapsed.\n\n```javascript\n$('#tree').treeview('toggleNodeExpanded', [ nodeId, { silent: true } ]);\n```\n\nTriggers either `nodeExpanded` or `nodeCollapsed` event; pass silent to suppress events.\n\n#### toggleNodeSelected(node | nodeId, options)\n\nToggles a node selected state; selecting if unselected, unselecting if selected.\n\n```javascript\n$('#tree').treeview('toggleNodeSelected', [ nodeId, { silent: true } ]);\n```\n\nTriggers either `nodeSelected` or `nodeUnselected` event; pass silent to suppress events.\n\n#### uncheckAll(options)\n\nUncheck all tree nodes.\n\n```javascript\n$('#tree').treeview('uncheckAll', { silent: true });\n```\n\nTriggers `nodeUnchecked` event; pass silent to suppress events.\n\n#### uncheckNode(node | nodeId, options)\n\nUncheck a given tree node, accepts node or nodeId.\n\n```javascript\n$('#tree').treeview('uncheckNode', [ nodeId, { silent: true } ]);\n```\n\nTriggers `nodeUnchecked` event; pass silent to suppress events.\n\n#### unselectNode(node | nodeId, options)\n\nUnselects a given tree node, accepts node or nodeId.\n\n```javascript\n$('#tree').treeview('unselectNode', [ nodeId, { silent: true } ]);\n```\n\nTriggers `nodeUnselected` event; pass silent to suppress events.\n\n## Events\n\nEvents are provided so that your application can respond to changes in the treeview's state.  For example, if you want to update a display when a node is selected use the `nodeSelected` event.\n\nYou can bind to any event defined below by either using an options callback handler, or the standard jQuery .on method.\n\nExample using options callback handler:\n\n```javascript\n$('#tree').treeview({\n  // The naming convention for callback's is to prepend with `on`\n  // and capitalize the first letter of the event name\n  // e.g. nodeSelected -> onNodeSelected\n  onNodeSelected: function(event, data) {\n    // Your logic goes here\n  });\n```\n\nand using jQuery .on method\n\n```javascript\n$('#tree').on('nodeSelected', function(event, data) {\n  // Your logic goes here\n});\n```\n\n### List of Events\n\n`nodeChecked (event, node)`  - A node is checked.\n\n`nodeCollapsed (event, node)`  - A node is collapsed.\n\n`nodeDisabled (event, node)`  - A node is disabled.\n\n`nodeEnabled (event, node)`  - A node is enabled.\n\n`nodeExpanded (event, node)` - A node is expanded.\n\n`nodeSelected (event, node)`  - A node is selected.\n\n`nodeUnchecked (event, node)`  - A node is unchecked.\n\n`nodeUnselected (event, node)`  - A node is unselected.  \n\n`searchComplete (event, results)`  - After a search completes\n\n`searchCleared (event, results)`  - After search results are cleared\n\n\n\n## Copyright and Licensing\nCopyright 2013 Jonathan Miles\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at <http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "app.js",
          "type": "blob",
          "size": 0.689453125,
          "content": "\n/**\n * Module dependencies.\n */\n\nvar express = require('express');\nvar http = require('http');\nvar path = require('path');\n\nvar app = express();\n\n// all environments\napp.set('port', process.env.PORT || 3000);\napp.use(express.favicon());\napp.use(express.logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded());\napp.use(express.methodOverride());\napp.use(express.static(path.join(__dirname, '/public')));\napp.use(express.static(path.join(__dirname, '/tests')));\n\n// development only\nif ('development' == app.get('env')) {\n  app.use(express.errorHandler());\n}\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log('Express server listening on port ' + app.get('port'));\n});"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.623046875,
          "content": "{\n  \"name\": \"bootstrap-treeview\",\n  \"description\": \"Tree View for Twitter Bootstrap\",\n  \"version\": \"1.2.0\",\n  \"homepage\": \"https://github.com/jonmiles/bootstrap-treeview\",\n  \"main\": [\n    \"dist/bootstrap-treeview.min.js\",\n    \"dist/bootstrap-treeview.min.css\"\n  ],\n  \"keywords\": [\n    \"twitter\",\n    \"bootstrap\",\n    \"tree\",\n    \"treeview\",\n    \"tree-view\",\n    \"navigation\",\n    \"javascript\",\n    \"jquery\",\n    \"jquery-plugin\"\n  ],\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ],\n  \"dependencies\": {\n    \"jquery\": \">= 1.9.0\",\n    \"bootstrap\": \">= 3.0.0\"\n  },\n  \"devDependencies\": {}\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.271484375,
          "content": "{\n  \"name\": \"bootstrap-treeview\",\n  \"description\": \"Tree View for Twitter Bootstrap\",\n  \"version\": \"1.2.0\",\n  \"homepage\": \"https://github.com/jonmiles/bootstrap-treeview\",\n  \"author\": {\n    \"name\": \"Jonathan Miles\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/jonmiles/bootstrap-treeview.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/jonmiles/bootstrap-treeview/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"Apache\",\n      \"url\": \"https://github.com/jonmiles/bootstrap-treeview/blob/master/LICENSE\"\n    }\n  ],\n  \"main\": [\n    \"dist/bootstrap-treeview.min.js\",\n    \"dist/bootstrap-treeview.min.css\"\n  ],\n  \"scripts\": {\n    \"install\": \"bower install\",\n    \"start\": \"node app\",\n    \"test\": \"grunt test\"\n  },\n  \"engines\": {\n    \"node\": \">= 0.10.0\"\n  },\n  \"dependencies\": {\n    \"express\": \"3.4.x\",\n    \"ejs\": \"2.2.x\",\n    \"phantomjs\": \"1.9.x\"\n  },\n  \"devDependencies\": {\n    \"bower\": \"1.3.x\",\n    \"grunt\": \"0.4.x\",\n    \"grunt-contrib-uglify\": \"0.7.x\",\n    \"grunt-contrib-cssmin\": \"0.12.x\",\n    \"grunt-contrib-qunit\": \"0.5.x\",\n    \"grunt-contrib-watch\": \"0.6.x\",\n    \"grunt-contrib-copy\": \"0.7.x\"\n  },\n  \"keywords\": [\n    \"twitter\",\n    \"bootstrap\",\n    \"tree\",\n    \"treeview\",\n    \"tree-view\",\n    \"navigation\",\n    \"javascript\",\n    \"jquery\",\n    \"jquery-plugin\"\n  ]\n}\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}