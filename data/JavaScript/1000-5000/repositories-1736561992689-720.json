{
  "metadata": {
    "timestamp": 1736561992689,
    "page": 720,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AlloyTeam/AlloyFinger",
      "stars": 3431,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.6083984375,
          "content": "{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"browsers\": [\"last 2 versions\", \"> 5%\"],\n        \"ios\": 7,\n        \"android\": 4,\n        \"node\": 6,\n        \"ie\": 11\n      },\n      \"include\": [],\n      \"exclude\": [\n        \"transform-async-to-generator\"\n      ],\n      \"uglify\": true,\n      \"useBuiltIns\": true,\n      \"loose\": false,\n      \"debug\": false\n    }],\n    \"react\"\n  ],\n  \"plugins\": [\n    \"add-module-exports\",\n    \"transform-es2015-modules-commonjs\",\n    \"fast-async\",\n    \"transform-function-bind\",\n    \"transform-class-properties\",\n    \"transform-object-rest-spread\",\n    \"transform-decorators\"\n  ]\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.05078125,
          "content": "/node_modules/\ndist/\n.DS_Store\nnpm-debug.log\n.idea/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 腾讯 AlloyTeam\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3974609375,
          "content": "# Preview\n\nYou can touch this → [http://alloyteam.github.io/AlloyFinger/](http://alloyteam.github.io/AlloyFinger/)\n\n# Install\n\nYou can install it via npm:\n\n```html\nnpm install alloyfinger\n```\n\n# Usage\n\n```js\nvar af = new AlloyFinger(element, {\n    touchStart: function () { },\n    touchMove: function () { },\n    touchEnd:  function () { },\n    touchCancel: function () { },\n    multipointStart: function () { },\n    multipointEnd: function () { },\n    tap: function () { },\n    doubleTap: function () { },\n    longTap: function () { },\n    singleTap: function () { },\n    rotate: function (evt) {\n        console.log(evt.angle);\n    },\n    pinch: function (evt) {\n        console.log(evt.zoom);\n    },\n    pressMove: function (evt) {\n        console.log(evt.deltaX);\n        console.log(evt.deltaY);\n    },\n    swipe: function (evt) {\n        console.log(\"swipe\" + evt.direction);\n    }\n});\n\n/**\n * this method can also add or remove the event handler\n */\nvar onTap = function() {};\n\naf.on('tap', onTap);\naf.on('touchStart', function() {});\n\naf.off('tap', onTap);\n\n/**\n * this method can destroy the instance\n */\naf = af.destroy();\n```\n\n### Omi Version:\n\n\n```js\nimport { render, tag, WeElement } from 'omi'\nimport 'omi-finger'\n\n@tag('my-app')\nclass MyApp extends WeElement {\n  install() {\n    this.data.wording = 'Tap or Swipe Me!'\n  }\n\n  handleTap = (evt) => {\n    this.data.wording += '\\r\\nTap'\n    this.update()\n  }\n\n  handleSwipe = (evt) => {\n    this.data.wording += '\\r\\nSwipe-' + evt.direction\n    this.update()\n  }\n\n  render() {\n    return (\n      <div>\n        <omi-finger onTap={this.handleTap} abc={{a:1}} onSwipe={this.handleSwipe}>\n          <div class=\"touchArea\" >\n            {this.data.wording}\n          </div>\n        </omi-finger>\n      </div>\n    )\n  }\n\n  css() {\n    return `.touchArea{\n                  background-color: green;\n                  width: 200px;\n                  min-height: 200px;\n                  text-align: center;\n                  color:white;\n                  height:auto;\n                  white-space: pre-line;\n              }`\n  }\n}\n\nrender(<my-app></my-app>, 'body')\n```\n\n* [omi-finger](https://github.com/Tencent/omi/tree/master/packages/omi-finger)\n* [css3transform](https://github.com/Tencent/omi/tree/master/packages/omi-transform)\n\n# Others\n\n* [AlloyCrop](https://github.com/AlloyTeam/AlloyCrop)\n\n\n# License\nThis content is released under the [MIT](http://opensource.org/licenses/MIT) License.\n"
        },
        {
          "name": "alloy_crop",
          "type": "tree",
          "content": null
        },
        {
          "name": "alloy_finger.js",
          "type": "blob",
          "size": 12.671875,
          "content": "/* AlloyFinger v0.1.15\r\n * By dntzhang\r\n * Github: https://github.com/AlloyTeam/AlloyFinger\r\n */\r\n; (function () {\r\n    function getLen(v) {\r\n        return Math.sqrt(v.x * v.x + v.y * v.y);\r\n    }\r\n\r\n    function dot(v1, v2) {\r\n        return v1.x * v2.x + v1.y * v2.y;\r\n    }\r\n\r\n    function getAngle(v1, v2) {\r\n        var mr = getLen(v1) * getLen(v2);\r\n        if (mr === 0) return 0;\r\n        var r = dot(v1, v2) / mr;\r\n        if (r > 1) r = 1;\r\n        return Math.acos(r);\r\n    }\r\n\r\n    function cross(v1, v2) {\r\n        return v1.x * v2.y - v2.x * v1.y;\r\n    }\r\n\r\n    function getRotateAngle(v1, v2) {\r\n        var angle = getAngle(v1, v2);\r\n        if (cross(v1, v2) > 0) {\r\n            angle *= -1;\r\n        }\r\n\r\n        return angle * 180 / Math.PI;\r\n    }\r\n\r\n    var HandlerAdmin = function(el) {\r\n        this.handlers = [];\r\n        this.el = el;\r\n    };\r\n\r\n    HandlerAdmin.prototype.add = function(handler) {\r\n        this.handlers.push(handler);\r\n    }\r\n\r\n    HandlerAdmin.prototype.del = function(handler) {\r\n        if(!handler) this.handlers = [];\r\n\r\n        for(var i=this.handlers.length; i>=0; i--) {\r\n            if(this.handlers[i] === handler) {\r\n                this.handlers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    HandlerAdmin.prototype.dispatch = function() {\r\n        for(var i=0,len=this.handlers.length; i<len; i++) {\r\n            var handler = this.handlers[i];\r\n            if(typeof handler === 'function') handler.apply(this.el, arguments);\r\n        }\r\n    }\r\n\r\n    function wrapFunc(el, handler) {\r\n        var handlerAdmin = new HandlerAdmin(el);\r\n        handlerAdmin.add(handler);\r\n\r\n        return handlerAdmin;\r\n    }\r\n\r\n    var AlloyFinger = function (el, option) {\r\n\r\n        this.element = typeof el == 'string' ? document.querySelector(el) : el;\r\n\r\n        this.start = this.start.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.end = this.end.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n        this.element.addEventListener(\"touchstart\", this.start, false);\r\n        this.element.addEventListener(\"touchmove\", this.move, false);\r\n        this.element.addEventListener(\"touchend\", this.end, false);\r\n        this.element.addEventListener(\"touchcancel\", this.cancel, false);\r\n\r\n        this.preV = { x: null, y: null };\r\n        this.pinchStartLen = null;\r\n        this.zoom = 1;\r\n        this.isDoubleTap = false;\r\n\r\n        var noop = function () { };\r\n\r\n        this.rotate = wrapFunc(this.element, option.rotate || noop);\r\n        this.touchStart = wrapFunc(this.element, option.touchStart || noop);\r\n        this.multipointStart = wrapFunc(this.element, option.multipointStart || noop);\r\n        this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);\r\n        this.pinch = wrapFunc(this.element, option.pinch || noop);\r\n        this.swipe = wrapFunc(this.element, option.swipe || noop);\r\n        this.tap = wrapFunc(this.element, option.tap || noop);\r\n        this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);\r\n        this.longTap = wrapFunc(this.element, option.longTap || noop);\r\n        this.singleTap = wrapFunc(this.element, option.singleTap || noop);\r\n        this.pressMove = wrapFunc(this.element, option.pressMove || noop);\r\n        this.twoFingerPressMove = wrapFunc(this.element, option.twoFingerPressMove || noop);\r\n        this.touchMove = wrapFunc(this.element, option.touchMove || noop);\r\n        this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);\r\n        this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);\r\n\r\n        this._cancelAllHandler = this.cancelAll.bind(this);\r\n\r\n        window.addEventListener('scroll', this._cancelAllHandler);\r\n\r\n        this.delta = null;\r\n        this.last = null;\r\n        this.now = null;\r\n        this.tapTimeout = null;\r\n        this.singleTapTimeout = null;\r\n        this.longTapTimeout = null;\r\n        this.swipeTimeout = null;\r\n        this.x1 = this.x2 = this.y1 = this.y2 = null;\r\n        this.preTapPosition = { x: null, y: null };\r\n    };\r\n\r\n    AlloyFinger.prototype = {\r\n        start: function (evt) {\r\n            if (!evt.touches) return;\r\n            this.now = Date.now();\r\n            this.x1 = evt.touches[0].pageX;\r\n            this.y1 = evt.touches[0].pageY;\r\n            this.delta = this.now - (this.last || this.now);\r\n            this.touchStart.dispatch(evt, this.element);\r\n            if (this.preTapPosition.x !== null) {\r\n                this.isDoubleTap = (this.delta > 0 && this.delta <= 250 && Math.abs(this.preTapPosition.x - this.x1) < 30 && Math.abs(this.preTapPosition.y - this.y1) < 30);\r\n                if (this.isDoubleTap) clearTimeout(this.singleTapTimeout);\r\n            }\r\n            this.preTapPosition.x = this.x1;\r\n            this.preTapPosition.y = this.y1;\r\n            this.last = this.now;\r\n            var preV = this.preV,\r\n                len = evt.touches.length;\r\n            if (len > 1) {\r\n                this._cancelLongTap();\r\n                this._cancelSingleTap();\r\n                var v = { x: evt.touches[1].pageX - this.x1, y: evt.touches[1].pageY - this.y1 };\r\n                preV.x = v.x;\r\n                preV.y = v.y;\r\n                this.pinchStartLen = getLen(preV);\r\n                this.multipointStart.dispatch(evt, this.element);\r\n            }\r\n            this._preventTap = false;\r\n            this.longTapTimeout = setTimeout(function () {\r\n                this.longTap.dispatch(evt, this.element);\r\n                this._preventTap = true;\r\n            }.bind(this), 750);\r\n        },\r\n        move: function (evt) {\r\n            if (!evt.touches) return;\r\n            var preV = this.preV,\r\n                len = evt.touches.length,\r\n                currentX = evt.touches[0].pageX,\r\n                currentY = evt.touches[0].pageY;\r\n            this.isDoubleTap = false;\r\n            if (len > 1) {\r\n                var sCurrentX = evt.touches[1].pageX,\r\n                    sCurrentY = evt.touches[1].pageY\r\n                var v = { x: evt.touches[1].pageX - currentX, y: evt.touches[1].pageY - currentY };\r\n\r\n                if (preV.x !== null) {\r\n                    if (this.pinchStartLen > 0) {\r\n                        evt.zoom = getLen(v) / this.pinchStartLen;\r\n                        this.pinch.dispatch(evt, this.element);\r\n                    }\r\n\r\n                    evt.angle = getRotateAngle(v, preV);\r\n                    this.rotate.dispatch(evt, this.element);\r\n                }\r\n                preV.x = v.x;\r\n                preV.y = v.y;\r\n\r\n                if (this.x2 !== null && this.sx2 !== null) {\r\n                    evt.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;\r\n                    evt.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;\r\n                } else {\r\n                    evt.deltaX = 0;\r\n                    evt.deltaY = 0;\r\n                }\r\n                this.twoFingerPressMove.dispatch(evt, this.element);\r\n\r\n                this.sx2 = sCurrentX;\r\n                this.sy2 = sCurrentY;\r\n            } else {\r\n                if (this.x2 !== null) {\r\n                    evt.deltaX = currentX - this.x2;\r\n                    evt.deltaY = currentY - this.y2;\r\n\r\n                    //move事件中添加对当前触摸点到初始触摸点的判断，\r\n                    //如果曾经大于过某个距离(比如10),就认为是移动到某个地方又移回来，应该不再触发tap事件才对。\r\n                    var movedX = Math.abs(this.x1 - this.x2),\r\n                        movedY = Math.abs(this.y1 - this.y2);\r\n\r\n                    if(movedX > 10 || movedY > 10){\r\n                        this._preventTap = true;\r\n                    }\r\n\r\n                } else {\r\n                    evt.deltaX = 0;\r\n                    evt.deltaY = 0;\r\n                }\r\n                \r\n                \r\n                this.pressMove.dispatch(evt, this.element);\r\n            }\r\n\r\n            this.touchMove.dispatch(evt, this.element);\r\n\r\n            this._cancelLongTap();\r\n            this.x2 = currentX;\r\n            this.y2 = currentY;\r\n            \r\n            if (len > 1) {\r\n                evt.preventDefault();\r\n            }\r\n        },\r\n        end: function (evt) {\r\n            if (!evt.changedTouches) return;\r\n            this._cancelLongTap();\r\n            var self = this;\r\n            if (evt.touches.length < 2) {\r\n                this.multipointEnd.dispatch(evt, this.element);\r\n                this.sx2 = this.sy2 = null;\r\n            }\r\n\r\n            //swipe\r\n            if ((this.x2 && Math.abs(this.x1 - this.x2) > 30) ||\r\n                (this.y2 && Math.abs(this.y1 - this.y2) > 30)) {\r\n                evt.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);\r\n                this.swipeTimeout = setTimeout(function () {\r\n                    self.swipe.dispatch(evt, self.element);\r\n\r\n                }, 0)\r\n            } else {\r\n                this.tapTimeout = setTimeout(function () {\r\n                    if(!self._preventTap){\r\n                        self.tap.dispatch(evt, self.element);\r\n                    }\r\n                    // trigger double tap immediately\r\n                    if (self.isDoubleTap) {\r\n                        self.doubleTap.dispatch(evt, self.element);\r\n                        self.isDoubleTap = false;\r\n                    }\r\n                }, 0)\r\n\r\n                if (!self.isDoubleTap) {\r\n                    self.singleTapTimeout = setTimeout(function () {\r\n                        self.singleTap.dispatch(evt, self.element);\r\n                    }, 250);\r\n                }\r\n            }\r\n\r\n            this.touchEnd.dispatch(evt, this.element);\r\n\r\n            this.preV.x = 0;\r\n            this.preV.y = 0;\r\n            this.zoom = 1;\r\n            this.pinchStartLen = null;\r\n            this.x1 = this.x2 = this.y1 = this.y2 = null;\r\n        },\r\n        cancelAll: function () {\r\n            this._preventTap = true\r\n            clearTimeout(this.singleTapTimeout);\r\n            clearTimeout(this.tapTimeout);\r\n            clearTimeout(this.longTapTimeout);\r\n            clearTimeout(this.swipeTimeout);\r\n        },\r\n        cancel: function (evt) {\r\n            this.cancelAll()\r\n            this.touchCancel.dispatch(evt, this.element);\r\n        },\r\n        _cancelLongTap: function () {\r\n            clearTimeout(this.longTapTimeout);\r\n        },\r\n        _cancelSingleTap: function () {\r\n            clearTimeout(this.singleTapTimeout);\r\n        },\r\n        _swipeDirection: function (x1, x2, y1, y2) {\r\n            return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')\r\n        },\r\n\r\n        on: function(evt, handler) {\r\n            if(this[evt]) {\r\n                this[evt].add(handler);\r\n            }\r\n        },\r\n\r\n        off: function(evt, handler) {\r\n            if(this[evt]) {\r\n                this[evt].del(handler);\r\n            }\r\n        },\r\n\r\n        destroy: function() {\r\n            if(this.singleTapTimeout) clearTimeout(this.singleTapTimeout);\r\n            if(this.tapTimeout) clearTimeout(this.tapTimeout);\r\n            if(this.longTapTimeout) clearTimeout(this.longTapTimeout);\r\n            if(this.swipeTimeout) clearTimeout(this.swipeTimeout);\r\n\r\n            this.element.removeEventListener(\"touchstart\", this.start);\r\n            this.element.removeEventListener(\"touchmove\", this.move);\r\n            this.element.removeEventListener(\"touchend\", this.end);\r\n            this.element.removeEventListener(\"touchcancel\", this.cancel);\r\n\r\n            this.rotate.del();\r\n            this.touchStart.del();\r\n            this.multipointStart.del();\r\n            this.multipointEnd.del();\r\n            this.pinch.del();\r\n            this.swipe.del();\r\n            this.tap.del();\r\n            this.doubleTap.del();\r\n            this.longTap.del();\r\n            this.singleTap.del();\r\n            this.pressMove.del();\r\n            this.twoFingerPressMove.del()\r\n            this.touchMove.del();\r\n            this.touchEnd.del();\r\n            this.touchCancel.del();\r\n\r\n            this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;\r\n\r\n            window.removeEventListener('scroll', this._cancelAllHandler);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof exports === 'object') {\r\n        module.exports = AlloyFinger;\r\n    } else {\r\n        window.AlloyFinger = AlloyFinger;\r\n    }\r\n})();\r\n"
        },
        {
          "name": "asset",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 11.4990234375,
          "content": "<!DOCTYPE html>\r\n<html>\r\n<head lang=\"en\">\r\n    <meta charset=\"UTF-8\">\r\n    <title>AlloyFinger</title>\r\n    <meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"/>\r\n    <style>\r\n        html,body{\r\n            margin: 0;\r\n            padding: 0;\r\n            border: 0;\r\n            background-color: #ccc;\r\n            text-align: center;\r\n           font: 14px / 1.5 \"Helvetica Neue\",Helvetica,Arial,\"Microsoft Yahei\",\"Hiragino Sans GB\",\"Heiti SC\",\"WenQuanYi Micro Hei\",sans-serif;\r\n        }\r\n        .header{\r\n            background-color: #333;\r\n            height: 40px;\r\n            color:white;\r\n            text-align: left;\r\n            text-indent: 20px;\r\n            font-weight: bold;\r\n            font-size: 20px;\r\n            line-height: 40px;\r\n        }\r\n        .title{\r\n            height: 30px;\r\n            color:#333333;\r\n            font-size: 20px;\r\n            line-height: 30px;\r\n        }\r\n        .example img{\r\n            width:160px ;\r\n        }\r\n        .imgBox{\r\n            margin-bottom: 10px;\r\n            border-bottom: 1px solid #333333;\r\n        }\r\n        .swipeBox{\r\n            height:160px;\r\n            width: 160px;\r\n            margin: 0 auto;\r\n            overflow: hidden;\r\n            font-size: 0;\r\n            position: relative;\r\n            border: 2px solid #ccc;\r\n            box-sizing: border-box;\r\n        }\r\n        .scroll{\r\n            width: 480px;\r\n            height: 160px;\r\n            white-space: nowrap;\r\n        }\r\n\r\n        .nuclear-nav {\r\n            position: absolute;\r\n            bottom: 6px;\r\n            right: 10px;\r\n        }\r\n\r\n        .nuclear-nav a {\r\n            display: inline-block;\r\n            background-color: white;\r\n            cursor: pointer;\r\n            width: 10px;\r\n            height: 10px;\r\n            -moz-border-radius: 5px;\r\n            -webkit-border-radius: 5px;\r\n            border-radius: 5px;\r\n            margin-right: 5px;\r\n            border: 1px solid #808080;\r\n        }\r\n        \r\n        .nuclear-nav a.active {\r\n            background-color: #ffd800;\r\n        }\r\n\r\n        .longTapBox{\r\n            position: relative;\r\n            margin: 0 auto;\r\n            width: 160px;\r\n            height: 160px;\r\n            overflow: hidden;\r\n            -webkit-user-select: none;\r\n            -webkit-user-drag: none;\r\n            -webkit-touch-callout: none;\r\n            user-select: none;\r\n            user-drag: none;\r\n            touch-callout: none;\r\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n        }\r\n\r\n        .longTapBox img{\r\n            pointer-events: none;\r\n\r\n        }\r\n\r\n        .overlay2,.overlay{\r\n            background-color: rgba(70, 70, 70, 0.8);\r\n            position: absolute;\r\n            top:0;\r\n            left: 0;\r\n            width: 160px;\r\n            height: 160px;\r\n\r\n            display: none;\r\n        }\r\n        .overlay2 img, .overlay img{\r\n            width: 40px;\r\n            height: 40px;\r\n            position: absolute;\r\n            top: 60px;\r\n            left: 60px;\r\n        }\r\n        .pb6{\r\n            padding-bottom: 6px;\r\n        }\r\n\r\n        .ribbon {\r\n            top: 3.2em;\r\n            right: -3.7em;\r\n            -webkit-transform: rotate(45deg);\r\n            -moz-transform: rotate(45deg);\r\n            -ms-transform: rotate(45deg);\r\n            -o-transform: rotate(45deg);\r\n            transform: rotate(45deg);\r\n            color:#fff;\r\n            display: block;\r\n            padding: .6em 3.5em;\r\n            position: fixed;\r\n            text-align: center;\r\n            text-decoration: none;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n            background-color: green;\r\n            z-index: 10000;\r\n        }\r\n\r\n        .btn {\r\n            letter-spacing: 3px;\r\n            display: inline-block;\r\n\r\n            color: white;\r\n            width: 270px;\r\n            height: 45px;\r\n            font-size: 24px;\r\n            line-height: 45px;\r\n            background-color: green;\r\n            -moz-border-radius: 2px;\r\n            -webkit-border-radius: 2px;\r\n            border-radius: 2px;\r\n            text-decoration: none;\r\n\r\n        }\r\n\r\n        .footer{\r\n            height: 120px;\r\n        }\r\n        .linkCanvasBox{\r\n            margin-top: 10px;\r\n        }\r\n       .linkCanvasBox .btn{\r\n            font-size: 16px;\r\n\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n<a href=\"https://github.com/AlloyTeam/AlloyFinger\" class=\"ribbon\">Fork me on Github</a>\r\n    <div class=\"header\">AlloyFinger</div>\r\n    <div class=\"example\">\r\n    <div class=\"title\">pinch</div>\r\n    <div class=\"imgBox\">\r\n        <img id=\"pinchImg\" src=\"asset/test.png\" />\r\n    </div>\r\n    <div class=\"title\">rotate</div>\r\n    <div class=\"imgBox\">\r\n        <img id=\"rotateImg\" src=\"asset/test.png\" />\r\n    </div>\r\n    <div class=\"title\">pinch+rotate</div>\r\n    <div class=\"imgBox\">\r\n        <img id=\"pinchRotateImg\" src=\"asset/test.png\" />\r\n    </div>\r\n    <div class=\"title\">pressMove</div>\r\n    <div class=\"imgBox\">\r\n        <img id=\"pressMoveImg\" src=\"asset/test.png\" />\r\n    </div>\r\n    <div class=\"title\">doubleTap</div>\r\n    <div class=\"imgBox\">\r\n        <img id=\"doubleTapImg\" src=\"asset/test.png\" />\r\n    </div>\r\n    <div class=\"title\">swipe</div>\r\n        <div class=\"imgBox pb6\">\r\n    <div class=\"swipeBox\">\r\n        <div class=\"scroll\"  id=\"swipeScroll\">\r\n            <img  src=\"asset/test.png\" /> <img  src=\"asset/test2.png\" /> <img  src=\"asset/test3.png\" />\r\n        </div>\r\n        <div class=\"nuclear-nav\">\r\n            <a data-index=\"0\" class=\"active\"></a>\r\n            <a data-index=\"1\" class=\" \"></a>\r\n            <a data-index=\"2\" class=\" \"></a>\r\n        </div>\r\n    </div>\r\n        </div>\r\n    <div class=\"title\">longTap</div>\r\n        <div class=\"imgBox pb6\">\r\n    <div class=\" longTapBox\" id=\"longTapBox\">\r\n        <img id=\"longTapImg\" src=\"asset/test.png\" />\r\n        <div class=\"overlay\" id=\"overlay\">\r\n            <img src=\"asset/yes.png\"/>\r\n        </div>\r\n    </div>\r\n        </div>\r\n\r\n        <div class=\"title\">tap</div>\r\n        <div class=\"imgBox pb6\">\r\n            <div class=\" longTapBox\" id=\"tapBox\">\r\n                <img  src=\"asset/test.png\" />\r\n                <div class=\"overlay2\" id=\"overlay2\">\r\n                    <img src=\"asset/yes.png\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n       <div> <a class=\"btn\" href=\"http://alloyteam.github.io/AlloyFinger/example/picture/\">综合例子→</a></div>\r\n    </div>\r\n    <script src=\"asset/transform.js\"></script>\r\n    <script src=\"alloy_finger.js\"></script>\r\n    <script src=\"asset/to.js\"></script>\r\n    <script>\r\n        var pinchImg = document.getElementById(\"pinchImg\");\r\n        Transform(pinchImg);\r\n        var initScale = 1;\r\n        new AlloyFinger(pinchImg, {\r\n            multipointStart: function () {\r\n                initScale = pinchImg.scaleX;\r\n            },\r\n            pinch: function (evt) {\r\n                pinchImg.scaleX = pinchImg.scaleY = initScale * evt.zoom;\r\n            }\r\n        });\r\n\r\n        var rotateImg = document.getElementById(\"rotateImg\");\r\n        Transform(rotateImg);\r\n        new AlloyFinger(rotateImg, {\r\n            rotate:function(evt){\r\n                rotateImg.rotateZ += evt.angle;\r\n            }\r\n        });\r\n\r\n        var pinchRotateImg = document.getElementById(\"pinchRotateImg\");\r\n        Transform(pinchRotateImg);\r\n        new AlloyFinger(pinchRotateImg, {\r\n            rotate:function(evt){\r\n                pinchRotateImg.rotateZ += evt.angle;\r\n            },\r\n            multipointStart: function () {\r\n                initScale = pinchRotateImg.scaleX;\r\n            },\r\n            pinch: function (evt) {\r\n                pinchRotateImg.scaleX = pinchRotateImg.scaleY = initScale * evt.zoom;\r\n            }\r\n        });\r\n\r\n        var pressMoveImg = document.getElementById(\"pressMoveImg\");\r\n        Transform(pressMoveImg);\r\n        new AlloyFinger(pressMoveImg, {\r\n            pressMove:function(evt){\r\n                pressMoveImg.translateX += evt.deltaX;\r\n                pressMoveImg.translateY += evt.deltaY;\r\n                evt.preventDefault();\r\n            }\r\n        });\r\n\r\n        function ease(x) {\r\n            return Math.sqrt(1 - Math.pow(x - 1, 2));\r\n        }\r\n        var doubleTapImg = document.getElementById(\"doubleTapImg\");\r\n        Transform(doubleTapImg);\r\n        new AlloyFinger(doubleTapImg, {\r\n            doubleTap:function(){\r\n                if(doubleTapImg.scaleX===1){\r\n                    new To(doubleTapImg, \"scaleX\", 2, 500, ease);\r\n                    new To(doubleTapImg, \"scaleY\", 2, 500, ease);\r\n                }else if(doubleTapImg.scaleX===2){\r\n                    new To(doubleTapImg, \"scaleX\", 1, 500, ease);\r\n                    new To(doubleTapImg, \"scaleY\", 1, 500, ease);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        var swipeScroll = document.getElementById(\"swipeScroll\"),\r\n            currentIndex=0;\r\n        Transform(swipeScroll);\r\n        function activeNav(index){\r\n            var items = document.querySelectorAll(\".nuclear-nav a\"),\r\n                    i = 0,\r\n                    len = items.length;\r\n            for (; i < len; i++) {\r\n                if (i === index) {\r\n                    items[i].classList.add(\"active\");\r\n                } else {\r\n                    items[i].classList.remove(\"active\");\r\n                }\r\n            }\r\n        }\r\n        new AlloyFinger(swipeScroll, {\r\n            touchMove:function(evt) {\r\n                if (Math.abs(evt.deltaX) >= Math.abs(evt.deltaY)) {\r\n                    evt.preventDefault();\r\n                }\r\n            },\r\n            swipe:function(evt){\r\n                if(evt.direction===\"Left\"){\r\n                    if(currentIndex<2) {\r\n                        currentIndex++;\r\n                        new To(swipeScroll, \"translateX\", -160 * currentIndex, 500, ease, function () {\r\n                            activeNav(currentIndex);\r\n                        });\r\n                    }\r\n                }else if(evt.direction===\"Right\"){\r\n                    if(currentIndex>0) {\r\n                        currentIndex--;\r\n                        new To(swipeScroll, \"translateX\", -160 * currentIndex, 500, ease, function () {\r\n                            activeNav(currentIndex);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        var longTapBox = document.getElementById(\"longTapBox\");\r\n        Transform(longTapBox);\r\n        var overlay=document.getElementById(\"overlay\");\r\n        new AlloyFinger(longTapBox, {\r\n            longTap:function(evt){\r\n                evt.preventDefault();\r\n                toggleDom(overlay);\r\n            }\r\n        });\r\n\r\n        var tapBox = document.getElementById(\"tapBox\");\r\n        Transform(tapBox);\r\n        var overlay2=document.getElementById(\"overlay2\");\r\n        new AlloyFinger(tapBox, {\r\n            tap:function(){\r\n                toggleDom(overlay2);\r\n            },\r\n            singleTap:function(){\r\n                console.log(\"singleTap\")\r\n            },\r\n            doubleTap:function(){\r\n                console.log(\"doubleTap\")\r\n            },\r\n            pointStart:function(){\r\n                console.log(\"pointStart\")\r\n            }\r\n        });\r\n\r\n        function toggleDom(dom){\r\n            var displayValue=window.getComputedStyle(dom,null)[\"display\"];\r\n            if(displayValue===\"none\"){\r\n                dom.style.display=\"block\";\r\n            }else{\r\n                dom.style.display=\"none\";\r\n            }\r\n        }\r\n\r\n    </script>\r\n</body>\r\n</html>\r\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.330078125,
          "content": "{\n  \"name\": \"alloyfinger\",\n  \"version\": \"0.1.15\",\n  \"description\": \"super tiny size multi-touch gestures library for the web. \",\n  \"main\": \"alloy_finger.js\",\n  \"directories\": {\n    \"example\": \"example\"\n  },\n  \"scripts\": {\n    \"prepare\": \"npm run build\",\n    \"build\": \"if [ -d dist ]; then rm -r dist; fi; npm run build:react\",\n    \"build:react\": \"babel react --out-dir dist/react --source-map\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.24.0\",\n    \"babel-core\": \"^6.24.0\",\n    \"babel-plugin-add-module-exports\": \"^0.2.1\",\n    \"babel-plugin-transform-class-properties\": \"^6.23.0\",\n    \"babel-plugin-transform-decorators\": \"^6.24.1\",\n    \"babel-plugin-transform-function-bind\": \"^6.22.0\",\n    \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n    \"babel-polyfill\": \"^6.23.0\",\n    \"babel-preset-env\": \"^1.3.2\",\n    \"babel-preset-react\": \"^6.24.1\",\n    \"babel-runtime\": \"^6.23.0\",\n    \"fast-async\": \"^6.2.2\",\n    \"husky\": \"^0.13.3\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/AlloyTeam/AlloyFinger.git\"\n  },\n  \"keywords\": [\n    \"gesture\",\n    \"touch\",\n    \"multitouch\"\n  ],\n  \"author\": \"dntzhang\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/AlloyTeam/AlloyFinger/issues\"\n  },\n  \"homepage\": \"https://github.com/AlloyTeam/AlloyFinger#readme\"\n}\n"
        },
        {
          "name": "react",
          "type": "tree",
          "content": null
        },
        {
          "name": "transformjs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}