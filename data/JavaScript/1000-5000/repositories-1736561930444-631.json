{
  "metadata": {
    "timestamp": 1736561930444,
    "page": 631,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/f2etest",
      "stars": 3565,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0546875,
          "content": "node_modules\n.DS_Store\nnode_modules/\n.idea/\n*.log\n*.iml\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.9345703125,
          "content": "FROM centos:7\n\n### Guacamole Server ###\n# 更多详细安装信息可参考 Guacamole 官方 <https://guacamole.apache.org/doc/gug/installing-guacamole.html>\n# 拷贝定制过的 guacamole-server 并解压\nADD f2etest-guacamole/guacamole-server-0.9.3.tar.gz /home/guacdshare\n\nWORKDIR /home/guacdshare\n\n# 安装需要使用到的依赖包\nRUN yum install -y wget vim gcc initscripts sudo lsof automake autoconf libtool make \\\n  # 安装 `guacd` 依赖\n  cairo-devel libpng-devel uuid-devel freerdp* libvncserver-devel openssl-devel \\\n  # 编译前创建 `freerdp` 的软连接\n  && ln -s /usr/local/lib/freerdp/guacsnd.so /usr/lib64/freerdp2/ \\\n  && ln -s /usr/local/lib/freerdp/guacdr.so /usr/lib64/freerdp2/\n\nWORKDIR /home/guacdshare/guacamole-server-0.9.3\n\n# 运行配置脚本并将 `guacd` 添加到 `/etc/init.d` 目录\nRUN ./configure --with-init-dir=/etc/init.d \\\n  # 编译\n  && make \\\n  # 安装构建的组件\n  && make install \\\n  # 更新已安装库的缓存\n  && ldconfig \\\n  # 设置运行时自动启动\n  && chkconfig --add guacd \\\n  && chkconfig guacd on \n\n\n### Guacamole Client ###\nWORKDIR /root\n\n## JAVA ##\n# 下载 JDK 1.8\nRUN wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u141-b15/336fa29ff2bb4ef291e347e091f7f4a7/jdk-8u141-linux-x64.tar.gz\" \\\n  && mkdir /usr/java\n\nWORKDIR /usr/java\n\n# 拷贝并解压 JDK\nRUN cp /root/jdk-8u141-linux-x64.tar.gz ./ \\\n  && tar xzf jdk-8u141-linux-x64.tar.gz\n\n# 设置 JAVA 运行环境\nENV JAVA_HOME /usr/java/jdk1.8.0_141\nENV PATH $JAVA_HOME/bin;$PATH\nENV CLASSPATH .:$JAVA_HOME/lib\n\n## TOMCAT ##\nWORKDIR /usr/local\n\n# 下载并解压 Tomcat\nRUN wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.50/bin/apache-tomcat-8.5.50.tar.gz \\\n  && tar -xzvf apache-tomcat-8.5.50.tar.gz \\\n  && mv apache-tomcat-8.5.50 tomcat8\n\n# 拷贝定制过的 WAR 包\nCOPY f2etest-guacamole/guacamole-0.9.3.war /usr/local/tomcat8/webapps/guacamole.war\n\n# 拷贝 guacamole 配置文件和免登配置文件\nCOPY f2etest-docker/guacamole.properties /etc/guacamole/\nCOPY f2etest-docker/noauth-config.xml /etc/guacamole/\n\n# 拷贝 Tomcat 服务脚本到 `/etc/init.d` 目录\nCOPY f2etest-docker/tomcat8 /etc/init.d/\n\nWORKDIR /etc/init.d\n\n# 增加 Tomcat 服务让其运行时自动启动\nRUN chmod 755 tomcat8 \\\n  && chkconfig --add tomcat8 \\\n  && chkconfig --level 234 tomcat8 on \\\n  && mkdir /root/.guacamole \\\n  && ln -s /etc/guacamole/guacamole.properties /root/.guacamole\n\n\n### F2etst Web ###\n## Node Env ##\nWORKDIR /usr/local\n\n# 下载 node v10 并解压\nRUN wget https://nodejs.org/dist/v10.15.1/node-v10.15.1-linux-x64.tar.xz \\\n  && xz -d node-v10.15.1-linux-x64.tar.xz \\\n  && tar -xf node-v10.15.1-linux-x64.tar \\\n  && mv node-v10.15.1-linux-x64 node \\\n  # 给 `node`, `npm` 命令创建软连接\n  && ln -s /usr/local/node/bin/node /usr/bin/node \\\n  && ln -s /usr/local/node/bin/npm /usr/bin/npm \\\n  # 安装 pm2 [node 应用进程管理器]\n  && npm i -g pm2 \\\n  # 给 `pm2` 命令创建软连接\n  && ln -s /usr/local/node/bin/pm2 /usr/bin/pm2\n\n## MySQL ##\n# 下载安装 MySQL\nRUN wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm \\\n  && yum localinstall -y mysql-community-release-el7-5.noarch.rpm \\\n  && yum install -y mysql-community-server \\\n  && chown -R mysql /var/lib/mysql \\\n  && chgrp -R mysql /var/lib/mysql\n\n## Nginx ##\n# 拷贝 nginx 源配置\nCOPY f2etest-docker/nginx.repo /etc/yum.repos.d/\n\n# yum 安装 nginx\nRUN yum-config-manager --enable nginx-mainline \\\n  && yum install -y nginx\n\nCOPY f2etest-docker/nginx.conf /etc/nginx/\n\n# 拷贝 Web 应用程序\nCOPY f2etest-web /home/f2etest-web\nWORKDIR /home/f2etest-web/\n# 安装 node 依赖包\nRUN npm i\n\n\n# 拷贝初始化脚本（初始化数据库表、`pm2` 启动 Web、启动 Nginx）\nCOPY f2etest-docker/setup.sh ./\nRUN chmod 777 setup.sh\n\nEXPOSE 80\n\n# 指定容器启动程序（以防出现权限不足情况）\nENTRYPOINT [\"/usr/sbin/init\"]\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 9.751953125,
          "content": "安装核心功能\r\n===================\r\n\r\n安装前请加钉钉交流群：11779932(加入验证：F2etest)，下载钉钉：[https://www.dingtalk.com/](https://www.dingtalk.com/)\r\n\r\n1. 安装nodejs\r\n\r\n    安装请访问官网：[https://nodejs.org/](https://nodejs.org/)，如果已安装好，请略过。\r\n\r\n2. 下载f2etest代码\r\n\r\n        git clone https://github.com/alibaba/f2etest.git\r\n\r\n    clone后，会发现以下几个目录：\r\n\r\n    1. `f2etest-web`: f2etest的WEB站点，用来提供f2etest服务，用户最终就是访问这个站点使用f2etest\r\n    2. `f2etest-guacamole`: 这是我们定制过的开源版本，方便f2etest进行调用\r\n    3. `f2etest-client`: f2etest的执行机客户端站点，主要提供API给f2etest-web使用，用来同步用户账号\r\n    4. `hostsShare-client`: 安装在f2etest远程环境中的客户端，用来修改f2etest-web上的hosts绑定\r\n    5. `f2etest-local`: 用来在本机安装代理服务器，并将f2etest所有访问反向代理到本地，以共享本机的hosts绑定，本组件已发布至npm，无需安装，详细使用请至系统内查看帮助\r\n    6. `f2etest-chrome`: chrome浏览器下的客户端，无需打开f2etest网站，即可访问f2etest中的所有APP，本组件已发布至chrome官方市场，无需安装，详细使用请至系统内查看帮助\r\n\r\n    下面分别针对前4个组件，会有针对性的安装教程。\r\n\r\n    我们建议将1，2组件安装在同一台Linux服务器上，操作系统为CentOs。\r\n\r\n3. 安装f2etest-guacamole\r\n\r\n    f2etest-guacamole是定制版本的guacamole，安装方法请查看：[Install Guacamole](./f2etest-guacamole/Install.md)\r\n\r\n4. 安装mysql\r\n\r\n    安装mysql: [https://www.mysql.com/](https://www.mysql.com/)，如果已安装好，请略过安装步骤。\r\n\r\n    新建库：f2etest\r\n\r\n    初始化表结构：f2etest-web/f2etest.sql\r\n\r\n5. 配置f2etest-web\r\n\r\n    初始化f2etest-web\r\n\r\n        cd f2etest-web\r\n        npm install\r\n\r\n    修改conf/site.json：\r\n\r\n    1. port: 站点监听端口号\r\n    2. name: 站点名称，修改为自己站点名称\r\n    3. about: 站点介绍，显示在网页title后面，修改为自己的站点介绍\r\n    4. icon: 站点icon，默认不需要修改\r\n    5. dbHost: 数据库连接信息，修改为mysql服务器IP地址\r\n    6. dbUser: 同上\r\n    7. dbPass: 同上\r\n    8. dbTable: 同上\r\n    9. clientApiKey: f2etest远程桌面客户端的ApiKey，正确的ApiKey才能访问远程的API，用来创建当前用户的账号，请更改为随机值，并保持和f2etest-client中的值一致\r\n    10. guacamoleApi: guacamole的API，请修改为上面第3步安装完成的API\r\n    11. footer: 根据需要修改\r\n    12. statNav: 如果需要自行扩展统计页面，根据需要修改\r\n\r\n    修改conf/server.json：\r\n\r\n    > 这里的id必需要与f2etest-guacamole中的名字保持一致\r\n\r\n    > 2003系统不支持remoteApp，2008以上Server系统支持\r\n\r\n    修改conf/app.json：\r\n\r\n    > 这里的server必需为server.json中已配置的id。program为可选参数，如果不填则直接连接桌面。\r\n\r\n    修改`lib/sso.js`：\r\n\r\n    > 由于f2etest系统要求必需是登录用户才能访问，因此必需要对接SSO系统才能工作。\r\n\r\n    > 请参考现有的`sso.js`文件进行修改，对接到您公司内部SSO系统。\r\n\r\n    启动f2etest-web服务：\r\n\r\n        node app.js\r\n\r\n    启动成功后，可以发现WEB服务默认工作在：3000端口号\r\n\r\n    然后安装nginx做反向代理，将80端口反向到3000端口，以将3000端口号隐藏起来。\r\n\r\n    nginx反向配置如下：\r\n\r\n        location / {\r\n            proxy_pass       http://127.0.0.1:3000;\r\n            proxy_set_header Host      $host;\r\n            proxy_set_header X-Real-IP $remote_addr;\r\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n            proxy_buffering off;\r\n        }\r\n\r\n    小建议：\r\n\r\n    1. 建议使用pm2或forever等组件实现系统开机自动运行。\r\n    2. 安装快捷方式到Windows桌面 (Win7)功能，需要让f2etest-web支持HTTPS协议，否则此功能无法正常使用\r\n\r\n\r\n6. 安装windows server机群\r\n\r\n    * 1号机：Server 2003: IE6\r\n    * 2号机：Server 2003: IE7\r\n    * 3号机：Server 2008: IE8\r\n    * 4号机：Server 2008: IE9\r\n    * 5号机：Server 2008: IE10\r\n    * 6号机：Server 2008: IE11\r\n\r\n    将来如果出现新的浏览器，可以即时增加新的服务器，用来部署新浏览器或软件。\r\n\r\n    如果在现有运行一段时间的系统中部署新服务器，请访问以下URL来同步所有账号：`http://f2etest.xxx.com/syncAllRemoteUsers`\r\n\r\n    由于Server 2008可安装的最低IE版本是8，因此IE6和IE7只能安装在Server 2003系统中。\r\n\r\n    安装软件及配置：\r\n\r\n    1. 远程桌面会话主机：授权模式请选择按用户，会话请选择5分钟自动结束，空闲会话不允许超过6小时，颜色限制最大24位色\r\n    2. 远程桌面授权：必需要进行正确激活并安装授权，安装时请选择企业授权，并按用户授权\r\n    3. IIS：用来部署f2etest-client，由于我们的脚本使用asp编写，因此请安装asp相关支持组件\r\n    4. 设置当前主机每天凌晨自动重启：防止开机久了，系统出现不稳定\r\n    5. 用户组配置：请将Authenticated Users添加到Remote Desktop Users，允许普通用户可以登录远程\r\n    6. 配置Remote App：如果是2008操作系统，需要将被远程的程序添加到Remote App，否则无法远程，添加快捷方式时请选择：允许任何命令行参数\r\n    7. 安装周边软件：输入法，Flash等\r\n\r\n    提示及注意事项：\r\n\r\n    1. chrome必需要安装standalone版本：[https://www.google.com/chrome/browser/desktop/index.html?system=true&standalone=1](https://www.google.com/chrome/browser/desktop/index.html?system=true&standalone=1)\r\n    2. 使用频率比较低的浏览器，建议硬件配置可以适当降低\r\n    3. 2008如果默认安装的是IE10浏览器，可以从安装补丁上卸载，从而降级到IE8，但是没办法降级到IE6或IE7\r\n    4. 建议在任务计划程序中添加每周磁盘碎片整理，以保持最高工作性能\r\n\r\n    IE浏览器安全级别低解决方案(此步骤非常重要，如果不操作，会出现cookie无法写入)：\r\n\r\n    1. 以桌面模式连接一个User用户\r\n    2. 按照需要自由配置IE\r\n    3. 打开`regedit`，导出`HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\`为`c:\\ie.reg`\r\n    4. 切换为`administrator`用户\r\n    5. 用文本软件打开`c:\\ie.reg`，替换`HKEY_CURRENT_USER`为`HKEY_Users\\Default`\r\n    6. 打开`regedit`，注册表编辑器中选择节点：`HKEY_USERS`，文件菜单->`加载配置单元`，选择`C:\\Users\\Default\\NTUser.dat`，项名称输入：`Default`\r\n    7. 双击`c:\\ie.reg`导入注册表\r\n    8. 在注册表编辑器中选择刚才加载的配置单元：`Default`，文件菜单->`卸载配置单元`，并确认上载\r\n\r\n    如何在每台服务器全局添加可信的根证书：\r\n\r\n    1. 命令行打开`mmc`\r\n    2. 菜单->`添加/删除管理单元`, 并选择：`证书`\r\n    3. 下一步选择：`计算机帐户`，再点击下一步\r\n    4. 在`受信任的根证书颁发机构`的`证书`栏目中添加CA即可\r\n\r\n7. 部署`f2etest-client\\f2etest-browsers`\r\n\r\n    请将`f2etest-client\\f2etest-browsers`复制到`c:\\f2etest-browsers\\`。\r\n\r\n    确保如下路径：`c:\\f2etest-browsers\\www\\`\r\n\r\n    然后做如下操作：\r\n\r\n    1. 将curl的路径添加到系统变量的PATH路径中，以供APP快捷方式调用\r\n    2. 添加IIS站点：`c:\\f2etest-browsers\\www\\`, 站点必需设置为administrator权限，否则无法工作，并且www目录设置为仅管理员有权限，防止任何人都可以创建账号\r\n    3. 修改setuser.asp中的apiKey，保持和f2etest-web中一致。\r\n\r\n    每台Server服务器上都需要部署`f2etest-client\\f2etest-browsers`，实现以下两个功能：\r\n\r\n    1. 提供API给f2etest-web调用，用来初始化用户账号\r\n    2. 远程桌面连接时，需要打开指定的浏览器或软件，并统计相应软件的使用次数\r\n\r\n    请根据需要选择合适的bat模板，模板中需要修改3处地方：\r\n\r\n    1. `f2etestDomain`: 修改为内部部署的f2etest域名\r\n    2. `appid`: 修改为f2etest-web中配置的相同应用id\r\n    3. `打开应用`： 替换为应用的程序路径\r\n\r\n    2008中必需要安装Remote App，并且要在Remote App的设置中：允许任何命令行参数。\r\n\r\n    如何确定f2etest-client安装成功？\r\n\r\n    请确保在服务器上访问以下URL(key改为配置好的key)，返回值是ok：[http:/127.0.0.1/setuser.asp?username=test&password=hello123&key=xxx](http:/127.0.0.1/setuser.asp?username=test&password=hello123&key=xxx)\r\n\r\n8. 安装hostsShare-client\r\n\r\n    hostsShare-client基于node-webkit开发，默认已经提供了一个编译版本在build目录中，可以直接部署使用。\r\n\r\n    本应用使用频率较高，建议选择CPU比较空闲的机器上部署。\r\n\r\n    hostsShare-client的bat可直接复制f2etest-client/app/中的：`禁用代理.bat`\r\n\r\n部署WebDriver云\r\n===========================\r\n\r\n1. 开启WebDriver功能：`conf/site.json`中的`wdEnabled`为`true`，此时重启f2etest-web，可以在上方菜单栏上看到：WebDriver云\r\n2. 初始化执行机节点：详细安装请查看[f2etest-client/f2etest-webdriver/节点部署教程.md](f2etest-client/f2etest-webdriver/节点部署教程.md)\r\n\r\n经过上面的安装过程，我们的WebDriver云即已经部署完成，可以对外服务了。\r\n\r\nf2etest v1.0.0系列如何升级到v2.0.0 v3.0.0\r\n========================\r\n\r\n1. 导入`f2etest-web/f2etest.sql`中的wd_开头的表初始化代码\r\n2. 更新f2etest-web到v2.0.0版本\r\n3. 按照上面的部署教程进行部署"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.091796875,
          "content": "\r\nThe MIT License\r\n================\r\n\r\nCopyright (c) 2015-2016 alibaba.com\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n"
        },
        {
          "name": "README-zh_CN.md",
          "type": "blob",
          "size": 8.044921875,
          "content": "# F2etest\n\n![](https://img.alicdn.com/tfs/TB1XMsiMNTpK1RjSZFKXXa2wXXa-1280-800.svg)\n\nF2etest 是一个面向前端、测试、产品等岗位的多浏览器兼容性测试整体解决方案。\n\n注：F2e test = Front to End Test = 前端测试\n\n# 浏览器云\n\n在之前，多浏览器兼容性人肉测试，我们一般有三种解决方案：\n\n1. 本机安装大量的虚拟机，一个浏览器一个虚拟机，优点：真实，缺点：消耗硬盘资源，消耗 CPU 资源，打开慢，无法同时打开多个虚拟机\n2. 使用 IeTester 等模拟软件，优点：体积小，资源消耗小，缺点：不真实，很多特性不能代表真实浏览器\n3. 公用机器提供多种浏览器，优点：不需要本地安装，不消耗本机资源，缺点：资源利用率低，整体资源消耗非常恐怖\n\n现在，有了 F2etest，一台普通的 4 核 CPU 的服务器，我们就可以提供给 20 人以上同时使用。\n\n在这之前我们需要 20 台机器，相比之下，至少 10 倍的硬件利用率提升。\n\n再加上我们平时做多浏览器测试时，并不是满负荷工作。经常是测试一会，开发一会，或者是忙点别的事，因此理论并发能力至少可以再乘 2，就是说一台 4 核服务器，理论上跑 40 人同时在线，非常轻松。\n\n但是在此之前，如果我们是单人虚拟机模式的话，当你没在测试时，CPU、内存、硬盘，全部都是处在浪费状态。\n\n相比之前的方案，我们有以下优势：\n\n1. 10 倍以上硬件利用率，降低企业运营成本\n2. 非常棒的用户体验，极大的提高测试效率\n3. 真实浏览器环境，还原真实测试场景\n\n在这个解决方案中，我们使用了以下技术：\n\n1. Guacamole: 开源的 HTML5 远程解决方案\n2. Windows Server: Server 版 Windows，最大化复用机器资源\n3. hostsShare: 跨浏览器，跨服务器的 hosts 共享\n\n# WebDriver 云\n\nWebDriver 云利用 Windows Server 多用户的特性，将执行机的使用效率提升 10 倍以上。\n\n之前 1 台执行机只能跑 1 个任务，现在同样的硬件配置，我们可以跑 10 个任务。\n\n下面的截图看上去有 130 个执行机节点，传统情况下我们需要 130 台服务器。\n\n但是我们实际上才 5 台！\n\n相比较官方的 Selenium Grid，我们有以下优势：\n\n1. 10 倍以上硬件利用率：传统 WebDriver 1 台执行机仅能跑 1 个 Job，而我们一台机器可以高并发跑 N 个 Job，这个 N 取决于机器配置，理论上硬件利用率相当于传统节点的 10 倍以上\n2. 支持独立 hosts 绑定：每次申请节点时，可以指定不同的 hosts 绑定，保证同一台机器上不同节点的 Job 不会相互干扰\n3. 所有节点支持远程在线调试：利用 Guacamole 的在线远程功能，当自动化出现问题时，我们能非常便利的对自动化进展进行即时监控和调试\n\n# UI Recorder\n\nUI Recorder 是一款几乎零成本的整体自动化测试解决方案，一次自测等于多次测试，测一个浏览器等于测多个浏览器！\n\n我们的目标：让自测不要重复测！让自动化变成零成本！让自动化持续保障您的业务！\n\n以下是本产品的特点：\n\n1. 自测 = 自动化测试：对于开发人员来讲，自测是开发流程中缺一不可的过程，我们要实现的目标就是自测过程中即可同步的录制出自动化脚本，实现真正的零成本自动化\n2. 无干扰录制：所作操作均无需交互干扰，鼠标、键盘、alert 弹框、文件上传，完全按照正常自测流程操作即可(以下操作除外：悬停事件、断言、变量)\n3. 本地生成脚本：录制的脚本存储在用户本机，用户可以自行在录制的基础上进行修改定制，更自由更开放\n4. 丰富的断言：支持以下断言类型，val、text、displayed、enabled、selected、attr、css、url、title、cookie、localStorage、sessionStorage\n5. 支持数据 Mock：我们支持 Faker 变量功能，支持强大的数据 Mock\n6. 支持公共用例: 用例之间允许相互引用，可以将某些公用的操作步骤录制为公用用例，以进一步提升录制效率\n7. 支持执行截图：每次执行后，允许生成截图日志，以方便出问题时排查诊断\n\n要了解详细细节，可以查看我们的视频教程：[http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html](http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html)\n\nUI Recorder 目前已经对 F2etest 进行了解偶，在非 F2etest 环境下也可以使用，只要是标准 WebDriver 协议就可以支持。\n\n但是，我们更建议 UI Recorder 配合 F2etest 的 WebDriver 云来使用，更低的执行机成本，更强大的调试功能。\n\n具体如何配合使用，F2etest 部署完成，打开 F2etest-Web 后，可以看到详细使用说明。\n\n仓库地址： [https://github.com/alibaba/uirecorder](https://github.com/alibaba/uirecorder)\n\n# Karma + F2etest\n\nKarma 是由 Google 开源的 JS 单元测试执行过程管理工具，这是一款异常强大并且高可扩展性的测试工具，拥有一个非常活跃且完善的生态圈。\n\nKarma 支持运行在任何 WebDriver 协议的浏览器上，因此结合 F2etest 提供的 WebDriver 云，就可以批量快速的运行在大量的浏览器上，从而满足单元测试的多浏览器测试需求。\n\n具体如何配置，F2etest-Web 中可以看到详细的教程，并且我们提供了完整的配置文件下载。\n\n# 成功案例\n\n[![imgs/alibaba.png](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/alibaba.png)](http://www.alibabagroup.com/)\n\n如果您使用了我们的解决方案，请联系我们添加在此处。\n\n# 产品截图\n\n## 浏览器云\n\n![imgs/screenshot1.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/screenshot1.jpg)\n\n![imgs/screenshot2.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/screenshot2.jpg)\n\nChrome 插件:\n\n![imgs/chrome.png](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/chrome.png)\n\nWindows:\n\n![imgs/windows.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/windows.jpg)\n\nMac:\n\n![imgs/mac.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/mac.jpg)\n\n## WebDriver 云\n\n![imgs/webdriver1.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/webdriver1.jpg)\n\n## Karma + F2etest\n\n![imgs/jsunit.png](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/jsunit.png)\n\n## UI Recorder\n\nUI Recorder 请查看视频教程：[http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html](http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html)\n\n# 安全风险警示(非常重要)\n\n由于本系统基于 Windows Server 体系搭建，因此系统的安全性完全取决于部署人的安全部署能力。\n\n如果您希望部署本系统，请确保以下几点：\n\n1. 严禁将本系统部署在公网环境，仅可部署在内网环境中使用，作为内部测试用途\n2. 请将 Windows Server 服务端升级到最新版本及补丁，以保证没有出现安全漏洞\n3. 请将 User 用户之间做到完全隔离，仅提供 User 用户文件的访问权限，别的任何权限请勿多余授权\n4. 请将 f2etest-client 仅设置为管理员拥有权限，防止 API 接口被恶意访问\n\n# 安装教程\n\n安装请前往安装教程页面：[INSTALL.md](https://github.com/alibaba/f2etest/blob/master/INSTALL.md)\n\n第 3 方安装及使用教程：\n\n1. [http://shaofan.org/f2etest/](http://shaofan.org/f2etest/)\n2. [http://shaofan.org/ui-recorder/](http://shaofan.org/ui-recorder/)\n\n# 感谢\n\n- Guacamole: [http://guac-dev.org/](http://guac-dev.org/)\n- Nodejs: [http://nodejs.org/](http://nodejs.org/)\n- async: [https://github.com/caolan/async](https://github.com/caolan/async)\n- ejs: [https://github.com/mde/ejs](https://github.com/mde/ejs)\n- express: [https://github.com/expressjs/express](https://github.com/expressjs/express)\n- jwebdriver: [https://github.com/yaniswang/jWebDriver](https://github.com/yaniswang/jWebDriver)\n- mysql: [https://github.com/felixge/node-mysql](https://github.com/felixge/node-mysql)\n- request: [https://github.com/request/request](https://github.com/request/request)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.0361328125,
          "content": "F2etest\r\n===================\r\n\r\n![imgs/logo.png](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/logo.png)\r\n\r\nF2etest是一个面向前端、测试、产品等岗位的多浏览器兼容性测试整体解决方案。\r\n\r\n注：F2e test = Front to End Test = 前端测试\r\n\r\n- 最新文档：[语雀文档](https://www.yuque.com/artist/f2etest)、[Github Page](https://alibaba.github.io/f2etest/build/#/artist/f2etest/intro)\r\n\r\n浏览器云\r\n=================================\r\n\r\n在之前，多浏览器兼容性人肉测试，我们一般有三种解决方案：\r\n\r\n1. 本机安装大量的虚拟机，一个浏览器一个虚拟机，优点：真实，缺点：消耗硬盘资源，消耗CPU资源，打开慢，无法同时打开多个虚拟机\r\n2. 使用IeTester等模拟软件，优点：体积小，资源消耗小，缺点：不真实，很多特性不能代表真实浏览器\r\n3. 公用机器提供多种浏览器，优点：不需要本地安装，不消耗本机资源，缺点：资源利用率低，整体资源消耗非常恐怖\r\n\r\n现在，有了F2etest，一台普通的4核CPU的服务器，我们就可以提供给20人以上同时使用。\r\n\r\n在这之前我们需要20台机器，相比之下，至少10倍的硬件利用率提升。\r\n\r\n再加上我们平时做多浏览器测试时，并不是满负荷工作。经常是测试一会，开发一会，或者是忙点别的事，因此理论并发能力至少可以再乘2，就是说一台4核服务器，理论上跑40人同时在线，非常轻松。\r\n\r\n但是在此之前，如果我们是单人虚拟机模式的话，当你没在测试时，CPU、内存、硬盘，全部都是处在浪费状态。\r\n\r\n相比之前的方案，我们有以下优势：\r\n\r\n1. 10倍以上硬件利用率，降低企业运营成本\r\n2. 非常棒的用户体验，极大的提高测试效率\r\n3. 真实浏览器环境，还原真实测试场景\r\n\r\n在这个解决方案中，我们使用了以下技术：\r\n\r\n1. Guacamole: 开源的HTML5远程解决方案\r\n2. Windows Server: Server版Windows，最大化复用机器资源\r\n3. hostsShare: 跨浏览器，跨服务器的hosts共享\r\n\r\nWebDriver云\r\n=================================\r\n\r\nWebDriver云利用Windows Server多用户的特性，将执行机的使用效率提升10倍以上。\r\n\r\n之前1台执行机只能跑1个任务，现在同样的硬件配置，我们可以跑10个任务。\r\n\r\n下面的截图看上去有130个执行机节点，传统情况下我们需要130台服务器。\r\n\r\n但是我们实际上才5台！\r\n\r\n相比较官方的Selenium Grid，我们有以下优势：\r\n\r\n1. 10倍以上硬件利用率：传统WebDriver 1台执行机仅能跑1个Job，而我们一台机器可以高并发跑N个Job，这个N取决于机器配置，理论上硬件利用率相当于传统节点的10倍以上\r\n2. 支持独立hosts绑定：每次申请节点时，可以指定不同的hosts绑定，保证同一台机器上不同节点的Job不会相互干扰\r\n3. 所有节点支持远程在线调试：利用Guacamole的在线远程功能，当自动化出现问题时，我们能非常便利的对自动化进展进行即时监控和调试\r\n\r\nUI Recorder\r\n=================================\r\n\r\nUI Recorder是一款几乎零成本的整体自动化测试解决方案，一次自测等于多次测试，测一个浏览器等于测多个浏览器！\r\n\r\n我们的目标：让自测不要重复测！让自动化变成零成本！让自动化持续保障您的业务！\r\n\r\n以下是本产品的特点：\r\n\r\n1. 自测 = 自动化测试：对于开发人员来讲，自测是开发流程中缺一不可的过程，我们要实现的目标就是自测过程中即可同步的录制出自动化脚本，实现真正的零成本自动化\r\n2. 无干扰录制：所作操作均无需交互干扰，鼠标、键盘、alert弹框、文件上传，完全按照正常自测流程操作即可(以下操作除外：悬停事件、断言、变量)\r\n3. 本地生成脚本：录制的脚本存储在用户本机，用户可以自行在录制的基础上进行修改定制，更自由更开放\r\n4. 丰富的断言：支持以下断言类型，val、text、displayed、enabled、selected、attr、css、url、title、cookie、localStorage、sessionStorage\r\n5. 支持数据Mock：我们支持Faker变量功能，支持强大的数据Mock\r\n6. 支持公共用例: 用例之间允许相互引用，可以将某些公用的操作步骤录制为公用用例，以进一步提升录制效率\r\n7. 支持执行截图：每次执行后，允许生成截图日志，以方便出问题时排查诊断\r\n\r\n要了解详细细节，可以查看我们的视频教程：[http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html](http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html)\r\n\r\nUI Recorder目前已经对F2etest进行了解偶，在非F2etest环境下也可以使用，只要是标准WebDriver协议就可以支持。\r\n\r\n但是，我们更建议UI Recorder配合F2etest的WebDriver云来使用，更低的执行机成本，更强大的调试功能。\r\n\r\n具体如何配合使用，F2etest部署完成，打开F2etest-Web后，可以看到详细使用说明。\r\n\r\n仓库地址： [https://github.com/alibaba/uirecorder](https://github.com/alibaba/uirecorder)\r\n\r\nKarma + F2etest\r\n=================================\r\n\r\nKarma是由Google开源的JS单元测试执行过程管理工具，这是一款异常强大并且高可扩展性的测试工具，拥有一个非常活跃且完善的生态圈。\r\n\r\nKarma支持运行在任何WebDriver协议的浏览器上，因此结合F2etest提供的WebDriver云，就可以批量快速的运行在大量的浏览器上，从而满足单元测试的多浏览器测试需求。\r\n\r\n具体如何配置，F2etest-Web中可以看到详细的教程，并且我们提供了完整的配置文件下载。\r\n\r\n成功案例\r\n=================================\r\n\r\n[![imgs/alibaba.png](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/alibaba.png)](http://www.alibabagroup.com/)\r\n\r\n如果您使用了我们的解决方案，请联系我们添加在此处。\r\n\r\n产品截图\r\n=================================\r\n\r\n浏览器云\r\n-------------------\r\n\r\n![imgs/screenshot1.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/screenshot1.jpg)\r\n\r\n![imgs/screenshot2.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/screenshot2.jpg)\r\n\r\nChrome插件:\r\n\r\n![imgs/chrome.png](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/chrome.png)\r\n\r\nWindows:\r\n\r\n![imgs/windows.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/windows.jpg)\r\n\r\nMac:\r\n\r\n![imgs/mac.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/mac.jpg)\r\n\r\nWebDriver云\r\n--------------------\r\n\r\n![imgs/webdriver1.jpg](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/webdriver1.jpg)\r\n\r\nKarma + F2etest\r\n--------------------\r\n\r\n![imgs/jsunit.png](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/jsunit.png)\r\n\r\nUI Recorder\r\n---------------------\r\n\r\nUI Recorder请查看视频教程：[http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html](http://v.youku.com/v_show/id_XMTY4NTk5NjI4MA==.html)\r\n\r\n安全风险警示(非常重要)\r\n==================\r\n\r\n由于本系统基于Windows Server体系搭建，因此系统的安全性完全取决于部署人的安全部署能力。\r\n\r\n如果您希望部署本系统，请确保以下几点：\r\n\r\n1. 严禁将本系统部署在公网环境，仅可部署在内网环境中使用，作为内部测试用途\r\n2. 请将Windows Server服务端升级到最新版本及补丁，以保证没有出现安全漏洞\r\n3. 请将User用户之间做到完全隔离，仅提供User用户文件的访问权限，别的任何权限请勿多余授权\r\n4. 请将f2etest-client仅设置为管理员拥有权限，防止API接口被恶意访问\r\n\r\n安装教程\r\n===================\r\n\r\nhttps://www.yuque.com/artist/f2etest\r\n\r\n感谢\r\n===================\r\n\r\n* Guacamole: [http://guac-dev.org/](http://guac-dev.org/)\r\n* Nodejs: [http://nodejs.org/](http://nodejs.org/)\r\n* async: [https://github.com/caolan/async](https://github.com/caolan/async)\r\n* ejs: [https://github.com/mde/ejs](https://github.com/mde/ejs)\r\n* express: [https://github.com/expressjs/express](https://github.com/expressjs/express)\r\n* jwebdriver: [https://github.com/yaniswang/jWebDriver](https://github.com/yaniswang/jWebDriver)\r\n* mysql: [https://github.com/felixge/node-mysql](https://github.com/felixge/node-mysql)\r\n* request: [https://github.com/request/request](https://github.com/request/request)<!-- GITCONTRIBUTOR_START -->\r\n\r\n## Contributors\r\n\r\n|[<img src=\"https://avatars1.githubusercontent.com/u/970390?v=4\" width=\"100px;\"/><br/><sub><b>yaniswang</b></sub>](https://github.com/yaniswang)<br/>|[<img src=\"https://avatars3.githubusercontent.com/u/7446962?v=4\" width=\"100px;\"/><br/><sub><b>undead25</b></sub>](https://github.com/undead25)<br/>|[<img src=\"https://avatars2.githubusercontent.com/u/18617837?v=4\" width=\"100px;\"/><br/><sub><b>Stngle</b></sub>](https://github.com/Stngle)<br/>|\r\n| :---: | :---: | :---: |\r\n\r\n\r\nThis project follows the git-contributor [spec](https://github.com/xudafeng/git-contributor), auto updated at `Wed Apr 24 2019 10:26:36 GMT+0800`.\r\n\r\n<!-- GITCONTRIBUTOR_END -->\r\n"
        },
        {
          "name": "f2etest-chrome",
          "type": "tree",
          "content": null
        },
        {
          "name": "f2etest-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "f2etest-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "f2etest-guacamole",
          "type": "tree",
          "content": null
        },
        {
          "name": "f2etest-local",
          "type": "tree",
          "content": null
        },
        {
          "name": "f2etest-web",
          "type": "tree",
          "content": null
        },
        {
          "name": "hostsShare-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "imgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.1162109375,
          "content": "{\n  \"devDependencies\": {\n    \"git-contributor\": \"^1.0.10\"\n  },\n  \"scripts\": {\n  \"contributor\": \"git-contributor\"\n  }\n}\n"
        }
      ]
    }
  ]
}