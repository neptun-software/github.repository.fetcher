{
  "metadata": {
    "timestamp": 1736561911626,
    "page": 607,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fbeline/design-patterns-JS",
      "stars": 3612,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.02734375,
          "content": "{\n  \"presets\": [\"es2015\"]\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.18359375,
          "content": "root = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 4\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.046875,
          "content": "dea/\nnode_modules/\ncoverage/\n*.swp\n*.swo\n/.idea\n"
        },
        {
          "name": ".istanbul.yml",
          "type": "blob",
          "size": 0.0517578125,
          "content": "instrumentation:\n  root: src\n  extensions:\n    - .js\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 6.2392578125,
          "content": "{\n    // JSHint Default Configuration File (as on JSHint website)\n    // See http://jshint.com/docs/ for more details\n\n    \"maxerr\"        : 50,       // {int} Maximum error before stopping\n\n    // Enforcing\n    \"bitwise\"       : true,     // true: Prohibit bitwise operators (&, |, ^, etc.)\n    \"camelcase\"     : false,    // true: Identifiers must be in camelCase\n    \"curly\"         : false,     // true: Require {} for every new block or scope\n    \"eqeqeq\"        : true,     // true: Require triple equals (===) for comparison\n    \"forin\"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()\n    \"freeze\"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.\n    \"immed\"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`\n    \"latedef\"       : false,    // true: Require variables/functions to be defined before being used\n    \"newcap\"        : false,    // true: Require capitalization of all constructor functions e.g. `new F()`\n    \"noarg\"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`\n    \"noempty\"       : true,     // true: Prohibit use of empty blocks\n    \"nonbsp\"        : true,     // true: Prohibit \"non-breaking whitespace\" characters.\n    \"nonew\"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)\n    \"plusplus\"      : false,    // true: Prohibit use of `++` and `--`\n    \"quotmark\"      : false,    // Quotation mark consistency:\n                                //   false    : do nothing (default)\n                                //   true     : ensure whatever is used is consistent\n                                //   \"single\" : require single quotes\n                                //   \"double\" : require double quotes\n    \"undef\"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)\n    \"unused\"        : true,     // Unused variables:\n                                //   true     : all variables, last function parameter\n                                //   \"vars\"   : all variables only\n                                //   \"strict\" : all variables, all function parameters\n    \"strict\"        : false,     // true: Requires all functions run in ES5 Strict Mode\n    \"maxparams\"     : false,    // {int} Max number of formal params allowed per function\n    \"maxdepth\"      : false,    // {int} Max depth of nested blocks (within functions)\n    \"maxstatements\" : false,    // {int} Max number statements per function\n    \"maxcomplexity\" : false,    // {int} Max cyclomatic complexity per function\n    \"maxlen\"        : false,    // {int} Max number of characters per line\n    \"varstmt\"       : false,    // true: Disallow any var statements. Only `let` and `const` are allowed.\n\n    // Relaxing\n    \"asi\"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)\n    \"boss\"          : false,     // true: Tolerate assignments where comparisons would be expected\n    \"debug\"         : false,     // true: Allow debugger statements e.g. browser breakpoints.\n    \"eqnull\"        : false,     // true: Tolerate use of `== null`\n    \"esversion\"     : 6,         // {int} Specify the ECMAScript version to which the code must adhere.\n    \"moz\"           : false,     // true: Allow Mozilla specific syntax (extends and overrides esnext features)\n                                 // (ex: `for each`, multiple try/catch, function expressionâ€¦)\n    \"evil\"          : false,     // true: Tolerate use of `eval` and `new Function()`\n    \"expr\"          : false,     // true: Tolerate `ExpressionStatement` as Programs\n    \"funcscope\"     : false,     // true: Tolerate defining variables inside control statements\n    \"globalstrict\"  : false,     // true: Allow global \"use strict\" (also enables 'strict')\n    \"iterator\"      : false,     // true: Tolerate using the `__iterator__` property\n    \"lastsemic\"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block\n    \"laxbreak\"      : false,     // true: Tolerate possibly unsafe line breakings\n    \"laxcomma\"      : false,     // true: Tolerate comma-first style coding\n    \"loopfunc\"      : false,     // true: Tolerate functions being defined in loops\n    \"multistr\"      : false,     // true: Tolerate multi-line strings\n    \"noyield\"       : false,     // true: Tolerate generator functions with no yield statement in them.\n    \"notypeof\"      : false,     // true: Tolerate invalid typeof operator values\n    \"proto\"         : false,     // true: Tolerate using the `__proto__` property\n    \"scripturl\"     : false,     // true: Tolerate script-targeted URLs\n    \"shadow\"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`\n    \"sub\"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation\n    \"supernew\"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`\n    \"validthis\"     : false,     // true: Tolerate using this in a non-constructor function\n\n    // Environments\n    \"browser\"       : true,     // Web Browser (window, document, etc)\n    \"browserify\"    : false,    // Browserify (node.js code in the browser)\n    \"couch\"         : false,    // CouchDB\n    \"devel\"         : true,     // Development/debugging (alert, confirm, etc)\n    \"dojo\"          : false,    // Dojo Toolkit\n    \"jasmine\"       : false,    // Jasmine\n    \"jquery\"        : false,    // jQuery\n    \"mocha\"         : true,     // Mocha\n    \"mootools\"      : false,    // MooTools\n    \"node\"          : true,    // Node.js\n    \"nonstandard\"   : false,    // Widely adopted globals (escape, unescape, etc)\n    \"phantom\"       : false,    // PhantomJS\n    \"prototypejs\"   : false,    // Prototype and Scriptaculous\n    \"qunit\"         : false,    // QUnit\n    \"rhino\"         : false,    // Rhino\n    \"shelljs\"       : false,    // ShellJS\n    \"typed\"         : false,    // Globals for typed array constructions\n    \"worker\"        : false,    // Web Workers\n    \"wsh\"           : false,    // Windows Scripting Host\n    \"yui\"           : false,    // Yahoo User Interface\n\n    // Custom Globals\n    \"globals\"       : {}        // additional predefined global variables\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0830078125,
          "content": "language: node_js\nnode_js:\n        - \"stable\"\nafter_success:\n    - npm run coveralls\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2019 Felipe Beline\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.8330078125,
          "content": "## Design Patterns JS [![Coverage Status](https://coveralls.io/repos/github/FelipeBB/Design-Patterns-JS/badge.svg?branch=master)](https://coveralls.io/github/FelipeBB/Design-Patterns-JS?branch=master)\n\nHere you will find the 23 (GoF) design patterns implemented in JavaScript using both prototype and ES6 classes. You can use the [**docs.md**](docs.md) to quicky overview the examples.\n\nFollows the list of patterns separed by type:\n\n### Creational Patterns\nCreational patterns are ones that create objects for you, rather than having you instantiate objects directly. This gives your program more flexibility in deciding which objects need to be created for a given case.\n\n- **Abstract factory:** provide an interface for creating families of related or dependent objects without specifying their concrete classes.\n- **Builder:** separate the construction of a complex object from its representation, allowing the same construction process to create various representations.\n- **Factory method:** define an interface for creating a single object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.\n- **Prototype:** specify the kinds of objects to create using a prototypical instance, and create new objects from the 'skeleton' of an existing object, thus boosting performance and keeping memory footprints to a minimum.\n- **Singleton:** ensure a class has only one instance, and provide a global point of access to it.\n\n### Structural Patterns\nThese concern class and object composition. They use inheritance to compose interfaces and define ways to compose objects to obtain new functionality.\n\n- **Adapter:** allows classes with incompatible interfaces to work together by wrapping its own interface around that of an already existing class.\n- **Bridge:** decouples an abstraction from its implementation so that the two can vary independently.\n- **Composite:** composes zero-or-more similar objects so that they can be manipulated as one object.\n- **Decorator:** dynamically adds/overrides behaviour in an existing method of an object.\n- **Facade:** provides a simplified interface to a large body of code.\n- **Flyweight:** reduces the cost of creating and manipulating a large number of similar objects.\n- **Proxy:** provides a placeholder for another object to control access, reduce cost, and reduce complexity.\n\n### Behavioral Patterns\nMost of these design patterns are specifically concerned with communication between objects.\n\n- **Chain of responsibility:** delegates commands to a chain of processing objects.\n- **Command:** creates objects which encapsulate actions and parameters.\n- **Interpreter:** implements a specialized language.\n- **Iterator:** accesses the elements of an object sequentially without exposing its underlying representation.\n- **Mediator:** allows loose coupling between classes by being the only class that has detailed knowledge of their methods.\n- **Memento:** provides the ability to restore an object to its previous state (undo).\n- **Observer:** is a publish/subscribe pattern which allows a number of observer objects to see an event.\n- **State:** allows an object to alter its behavior when its internal state changes.\n- **Strategy:** allows one of a family of algorithms to be selected on-the-fly at runtime.\n- **Template:** method defines the skeleton of an algorithm as an abstract class, allowing its subclasses to provide concrete behavior.\n- **Visitor:** separates an algorithm from an object structure by moving the hierarchy of methods into one object.\n\n## Testing\nTo run the tests you just need to execute the following commands inside the project root folder:\n```bash\nnpm install\nnpm test\n```\n\n## TODO\nSome patterns still need to be implemented using ES6 classes.\n\n## Notes\n- All the short definitions used in this documentation were extracted from [here](https://en.wikipedia.org/wiki/Design_Patterns).\n"
        },
        {
          "name": "docs.md",
          "type": "blob",
          "size": 25.5498046875,
          "content": "# Design Patterns JS\n\n**[Behavioral](#behavioral)**\n* [Chain Of Resp](#chain-of-resp)\n* [Command](#command)\n* [Interpreter](#interpreter)\n* [Iterator](#iterator)\n* [Mediator](#mediator)\n* [Memento](#memento)\n* [Observer](#observer)\n* [State](#state)\n* [Strategy](#strategy)\n* [Template](#template)\n* [Visitor](#visitor)\n\n**[Creational](#creational)**\n* [Abstract Factory](#abstract-factory)\n* [Builder](#builder)\n* [Factory](#factory)\n* [Prototype](#prototype)\n* [Singleton](#singleton)\n\n**[Structural](#structural)**\n* [Adapter](#adapter)\n* [Bridge](#bridge)\n* [Composite](#composite)\n* [Decorator](#decorator)\n* [Facade](#facade)\n* [Flyweight](#flyweight)\n* [Proxy](#proxy)\n\n\n\n## behavioral\n### Chain Of Resp\n##### chain-of-resp-es6.js\n```Javascript\nclass ShoppingCart {\n\n  constructor() {\n    this.products = [];\n  }\n\n  addProduct(p) {\n    this.products.push(p);\n  };\n}\n\nclass Discount {\n\n  calc(products) {\n    let ndiscount = new NumberDiscount();\n    let pdiscount = new PriceDiscount();\n    let none = new NoneDiscount();\n    ndiscount.setNext(pdiscount);\n    pdiscount.setNext(none);\n    return ndiscount.exec(products);\n  };\n}\n\nclass NumberDiscount {\n\n  constructor() {\n    this.next = null;\n  }\n\n  setNext(fn) {\n    this.next = fn;\n  };\n\n  exec(products) {\n    let result = 0;\n    if (products.length > 3)\n      result = 0.05;\n\n    return result + this.next.exec(products);\n  };\n}\n\nclass PriceDiscount {\n\n  constructor() {\n    this.next = null;\n  }\n\n  setNext(fn) {\n    this.next = fn;\n  };\n\n  exec(products) {\n    let result = 0;\n    let total = products.reduce((a, b) => a + b);\n\n    if (total >= 500)\n      result = 0.1;\n\n    return result + this.next.exec(products);\n  };\n}\n\nclass NoneDiscount {\n  exec() {\n    return 0;\n  };\n}\n\nexport {\n  ShoppingCart,\n  Discount\n};\n\n```\n##### chain-of-resp.js\n```Javascript\nfunction ShoppingCart() {\n  this.products = [];\n\n  this.addProduct = function(p) {\n    this.products.push(p);\n  };\n}\n\nfunction Discount() {\n  this.calc = function(products) {\n    var ndiscount = new NumberDiscount();\n    var pdiscount = new PriceDiscount();\n    var none = new NoneDiscount();\n\n    ndiscount.setNext(pdiscount);\n    pdiscount.setNext(none);\n\n    return ndiscount.exec(products);\n  };\n}\n\nfunction NumberDiscount() {\n  this.next = null;\n  this.setNext = function(fn) {\n    this.next = fn;\n  };\n\n  this.exec = function(products) {\n    var result = 0;\n    if (products.length > 3)\n      result = 0.05;\n\n    return result + this.next.exec(products);\n  };\n}\n\nfunction PriceDiscount() {\n  this.next = null;\n\n  this.setNext = function(fn) {\n    this.next = fn;\n  };\n\n  this.exec = function(products) {\n    var result = 0;\n    var total = products.reduce(function(a, b) {\n      return a + b;\n    });\n\n    if (total >= 500)\n      result = 0.1;\n\n    return result + this.next.exec(products);\n  };\n}\n\nfunction NoneDiscount() {\n  this.exec = function() {\n    return 0;\n  };\n}\n\nmodule.exports = [ShoppingCart, Discount];\n\n```\n\n### Command\n##### command.js\n```Javascript\nfunction Cockpit(command) {\n  this.command = command;\n}\n\nCockpit.prototype.execute = function() {\n  this.command.execute();\n};\n\nfunction Turbine() {\n  this.speed = 0;\n  this.state = false;\n}\n\nTurbine.prototype.on = function() {\n  this.state = true;\n  this.speed = 100;\n};\n\nTurbine.prototype.off = function() {\n  this.speed = 0;\n  this.state = false;\n};\n\nTurbine.prototype.speedDown = function() {\n  if (!this.state) return;\n\n  this.speed -= 100;\n};\n\nTurbine.prototype.speedUp = function() {\n  if (!this.state) return;\n\n  this.speed += 100;\n};\n\nfunction OnCommand(turbine) {\n  this.turbine = turbine;\n}\n\nOnCommand.prototype.execute = function() {\n  this.turbine.on();\n};\n\nfunction OffCommand(turbine) {\n  this.turbine = turbine;\n}\n\nOffCommand.prototype.execute = function() {\n  this.turbine.off();\n};\n\nfunction SpeedUpCommand(turbine) {\n  this.turbine = turbine;\n}\n\nSpeedUpCommand.prototype.execute = function() {\n  this.turbine.speedUp();\n};\n\nfunction SpeedDownCommand(turbine) {\n  this.turbine = turbine;\n}\n\nSpeedDownCommand.prototype.execute = function() {\n  this.turbine.speedDown();\n};\n\nmodule.exports = [Cockpit, Turbine, OnCommand, OffCommand, SpeedUpCommand, SpeedDownCommand];\n\n```\n##### command_es6.js\n```Javascript\nclass Cockpit {\n\n  constructor(command) {\n    this.command = command;\n  }\n\n  execute() {\n    this.command.execute();\n  }\n}\n\nclass Turbine {\n\n  constructor() {\n    this.state = false;\n  }\n\n  on() {\n    this.state = true;\n  }\n\n  off() {\n    this.state = false;\n  }\n}\n\nclass OnCommand {\n\n  constructor(turbine) {\n    this.turbine = turbine;\n  }\n\n  execute() {\n    this.turbine.on();\n  }\n}\n\nclass OffCommand {\n\n  constructor(turbine) {\n    this.turbine = turbine;\n  }\n\n  execute() {\n    this.turbine.off();\n  }\n}\n\nexport {\n  Cockpit,\n  Turbine,\n  OnCommand,\n  OffCommand\n};\n\n```\n\n### Interpreter\n##### interpreter.js\n```Javascript\nfunction Sum(left, right) {\n  this.left = left;\n  this.right = right;\n}\n\nSum.prototype.interpret = function() {\n  return this.left.interpret() + this.right.interpret();\n};\n\nfunction Min(left, right) {\n  this.left = left;\n  this.right = right;\n}\n\nMin.prototype.interpret = function() {\n  return this.left.interpret() - this.right.interpret();\n};\n\nfunction Num(val) {\n  this.val = val;\n}\n\nNum.prototype.interpret = function() {\n  return this.val;\n};\n\nmodule.exports = [Num, Min, Sum];\n\n```\n##### interpreter_es6.js\n```Javascript\nclass Sum {\n\n  constructor(left, right) {\n    this.left = left;\n    this.right = right;\n  }\n\n  interpret() {\n    return this.left.interpret() + this.right.interpret();\n  }\n}\n\nclass Min {\n\n  constructor(left, right) {\n    this.left = left;\n    this.right = right;\n  }\n\n  interpret() {\n    return this.left.interpret() - this.right.interpret();\n  }\n}\n\nclass Num {\n\n  constructor(val) {\n    this.val = val;\n  }\n\n  interpret() {\n    return this.val;\n  }\n}\n\nexport {\n  Num,\n  Min,\n  Sum\n};\n\n```\n\n### Iterator\n##### iterator.js\n```Javascript\nfunction Iterator(el) {\n  this.index = 0;\n  this.elements = el;\n}\n\nIterator.prototype = {\n  next: function() {\n    return this.elements[this.index++];\n  },\n  hasNext: function() {\n    return this.index < this.elements.length;\n  }\n};\n\nmodule.exports = Iterator;\n\n```\n##### iterator_es6.js\n```Javascript\nclass Iterator {\n\n  constructor(el) {\n    this.index = 0;\n    this.elements = el;\n  }\n\n  next() {\n    return this.elements[this.index++];\n  }\n\n  hasNext() {\n    return this.index < this.elements.length;\n  }\n}\n\nexport default Iterator;\n\n```\n\n### Mediator\n##### mediator.js\n```Javascript\nfunction TrafficTower() {\n  this.airplanes = [];\n}\n\nTrafficTower.prototype.requestPositions = function() {\n  return this.airplanes.map(function(airplane) {\n    return airplane.position;\n  });\n};\n\nfunction Airplane(position, trafficTower) {\n  this.position = position;\n  this.trafficTower = trafficTower;\n  this.trafficTower.airplanes.push(this);\n}\n\nAirplane.prototype.requestPositions = function() {\n  return this.trafficTower.requestPositions();\n};\n\nmodule.exports = [TrafficTower, Airplane];\n\n```\n##### mediator_es6.js\n```Javascript\nclass TrafficTower {\n\n  constructor() {\n    this.airplanes = [];\n  }\n\n  requestPositions() {\n    return this.airplanes.map(airplane => {\n      return airplane.position;\n    });\n  }\n}\n\nclass Airplane {\n\n  constructor(position, trafficTower) {\n    this.position = position;\n    this.trafficTower = trafficTower;\n    this.trafficTower.airplanes.push(this);\n  }\n\n  requestPositions() {\n    return this.trafficTower.requestPositions();\n  }\n}\n\nexport {\n  TrafficTower,\n  Airplane\n};\n\n```\n\n### Memento\n##### memento.js\n```Javascript\nfunction Memento(value) {\n  this.value = value;\n}\n\nvar originator = {\n  store: function(val) {\n    return new Memento(val);\n  },\n  restore: function(memento) {\n    return memento.value;\n  }\n};\n\nfunction Caretaker() {\n  this.values = [];\n}\n\nCaretaker.prototype.addMemento = function(memento) {\n  this.values.push(memento);\n};\n\nCaretaker.prototype.getMemento = function(index) {\n  return this.values[index];\n};\n\nmodule.exports = [originator, Caretaker];\n\n```\n##### memento_es6.js\n```Javascript\nclass Memento {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\nconst originator = {\n  store: function(val) {\n    return new Memento(val);\n  },\n  restore: function(memento) {\n    return memento.value;\n  }\n};\n\nclass Caretaker {\n\n  constructor() {\n    this.values = [];\n  }\n\n  addMemento(memento) {\n    this.values.push(memento);\n  }\n\n  getMemento(index) {\n    return this.values[index];\n  }\n}\n\nexport {\n  originator,\n  Caretaker\n};\n\n```\n\n### Observer\n##### observer.js\n```Javascript\nfunction Product() {\n  this.price = 0;\n  this.actions = [];\n}\n\nProduct.prototype.setBasePrice = function(val) {\n  this.price = val;\n  this.notifyAll();\n};\n\nProduct.prototype.register = function(observer) {\n  this.actions.push(observer);\n};\n\nProduct.prototype.unregister = function(observer) {\n  this.actions = this.actions.filter(function(el) {\n    return el != observer;\n  });\n};\n\nProduct.prototype.notifyAll = function() {\n  return this.actions.forEach(function(el) {\n    el.update(this);\n  }.bind(this));\n};\n\nvar fees = {\n  update: function(product) {\n    product.price = product.price * 1.2;\n  }\n};\n\nvar proft = {\n  update: function(product) {\n    product.price = product.price * 2;\n  }\n};\n\nmodule.exports = [Product, fees, proft];\n\n```\n##### observer_es6.js\n```Javascript\nclass Product {\n  constructor() {\n    this.price = 0;\n    this.actions = [];\n  }\n\n  setBasePrice(val) {\n    this.price = val;\n    this.notifyAll();\n  }\n\n  register(observer) {\n    this.actions.push(observer);\n  }\n\n  unregister(observer) {\n    this.actions = this.actions.filter(el => !(el instanceof observer));\n  }\n\n  notifyAll() {\n    return this.actions.forEach(el => el.update(this));\n  }\n}\n\nclass Fees {\n  update(product) {\n    product.price = product.price * 1.2;\n  }\n}\n\nclass Proft {\n  update(product) {\n    product.price = product.price * 2;\n  }\n}\n\nexport {\n  Product,\n  Fees,\n  Proft\n};\n\n```\n\n### State\n##### state.js\n```Javascript\nfunction Order() {\n  this.state = new WaitingForPayment();\n\n  this.nextState = function() {\n    this.state = this.state.next();\n  };\n}\n\nfunction WaitingForPayment() {\n  this.name = 'waitingForPayment';\n  this.next = function() {\n    return new Shipping();\n  };\n}\n\nfunction Shipping() {\n  this.name = 'shipping';\n  this.next = function() {\n    return new Delivered();\n  };\n}\n\nfunction Delivered() {\n  this.name = 'delivered';\n  this.next = function() {\n    return this;\n  };\n}\n\nmodule.exports = Order;\n\n```\n##### state_es6.js\n```Javascript\nclass OrderStatus {\n  constructor(name, nextStatus) {\n    this.name = name;\n    this.nextStatus = nextStatus;\n  }\n\n  next() {\n    return new this.nextStatus();\n  }\n}\n\nclass WaitingForPayment extends OrderStatus {\n  constructor() {\n    super('waitingForPayment', Shipping);\n  }\n}\n\nclass Shipping extends OrderStatus {\n  constructor() {\n    super('shipping', Delivered);\n  }\n}\n\nclass Delivered extends OrderStatus {\n  constructor() {\n    super('delivered', Delivered);\n  }\n}\n\nclass Order {\n  constructor() {\n    this.state = new WaitingForPayment();\n  }\n\n  nextState() {\n    this.state = this.state.next();\n  };\n}\n\nexport default Order;\n\n```\n\n### Strategy\n##### strategy.js\n```Javascript\nfunction ShoppingCart(discount) {\n  this.discount = discount;\n  this.amount = 0;\n}\n\nShoppingCart.prototype.setAmount = function(amount) {\n  this.amount = amount;\n};\n\nShoppingCart.prototype.checkout = function() {\n  return this.discount(this.amount);\n};\n\nfunction guestStrategy(amount) {\n  return amount;\n}\n\nfunction regularStrategy(amount) {\n  return amount * 0.9;\n}\n\nfunction premiumStrategy(amount) {\n  return amount * 0.8;\n}\n\nmodule.exports = [ShoppingCart, guestStrategy, regularStrategy, premiumStrategy];\n\n```\n##### strategy_es6.js\n```Javascript\nclass ShoppingCart {\n\n  constructor(discount) {\n    this.discount = discount;\n    this.amount = 0;\n  }\n\n  checkout() {\n    return this.discount(this.amount);\n  }\n\n  setAmount(amount) {\n    this.amount = amount;\n  }\n}\n\nfunction guestStrategy(amount) {\n  return amount;\n}\n\nfunction regularStrategy(amount) {\n  return amount * 0.9;\n}\n\nfunction premiumStrategy(amount) {\n  return amount * 0.8;\n}\n\nexport {\n  ShoppingCart,\n  guestStrategy,\n  regularStrategy,\n  premiumStrategy\n};\n\n```\n\n### Template\n##### template.js\n```Javascript\nfunction Tax() {}\n\nTax.prototype.calc = function(value) {\n  if (value >= 1000)\n    value = this.overThousand(value);\n\n  return this.complementaryFee(value);\n};\n\nTax.prototype.complementaryFee = function(value) {\n  return value + 10;\n};\n\nfunction Tax1() {}\nTax1.prototype = Object.create(Tax.prototype);\n\nTax1.prototype.overThousand = function(value) {\n  return value * 1.1;\n};\n\nfunction Tax2() {}\nTax2.prototype = Object.create(Tax.prototype);\n\nTax2.prototype.overThousand = function(value) {\n  return value * 1.2;\n};\n\nmodule.exports = [Tax1, Tax2];\n\n```\n##### template_es6.js\n```Javascript\nclass Tax {\n\n  calc(value) {\n    if (value >= 1000)\n      value = this.overThousand(value);\n\n    return this.complementaryFee(value);\n  }\n\n  complementaryFee(value) {\n    return value + 10;\n  }\n\n}\n\nclass Tax1 extends Tax {\n\n  constructor() {\n    super();\n  }\n\n  overThousand(value) {\n    return value * 1.1;\n  }\n}\n\nclass Tax2 extends Tax {\n\n  constructor() {\n    super();\n  }\n\n  overThousand(value) {\n    return value * 1.2;\n  }\n}\n\nexport {\n  Tax1,\n  Tax2\n};\n\n```\n\n### Visitor\n##### visitor.js\n```Javascript\nfunction bonusVisitor(employee) {\n  if (employee instanceof Manager)\n    employee.bonus = employee.salary * 2;\n  if (employee instanceof Developer)\n    employee.bonus = employee.salary;\n}\n\nfunction Employee() {\n  this.bonus = 0;\n}\n\nEmployee.prototype.accept = function(visitor) {\n  visitor(this);\n};\n\nfunction Manager(salary) {\n  this.salary = salary;\n}\n\nManager.prototype = Object.create(Employee.prototype);\n\nfunction Developer(salary) {\n  this.salary = salary;\n}\n\nDeveloper.prototype = Object.create(Employee.prototype);\n\nmodule.exports = [Developer, Manager, bonusVisitor];\n\n```\n##### visitor_es6.js\n```Javascript\nfunction bonusVisitor(employee) {\n  if (employee instanceof Manager)\n    employee.bonus = employee.salary * 2;\n  if (employee instanceof Developer)\n    employee.bonus = employee.salary;\n}\n\nclass Employee {\n\n  constructor(salary) {\n    this.bonus = 0;\n    this.salary = salary;\n  }\n\n  accept(visitor) {\n    visitor(this);\n  }\n}\n\nclass Manager extends Employee {\n  constructor(salary) {\n    super(salary);\n  }\n}\n\nclass Developer extends Employee {\n  constructor(salary) {\n    super(salary);\n  }\n}\n\nexport {\n  Developer,\n  Manager,\n  bonusVisitor\n};\n\n```\n\n\n## creational\n### Abstract Factory\n##### abstract-factory.js\n```Javascript\nfunction droidProducer(kind) {\n  if (kind === 'battle') return battleDroidFactory;\n  return pilotDroidFactory;\n}\n\nfunction battleDroidFactory() {\n  return new B1();\n}\n\nfunction pilotDroidFactory() {\n  return new Rx24();\n}\n\nfunction B1() {}\nB1.prototype.info = function() {\n  return \"B1, Battle Droid\";\n};\n\nfunction Rx24() {}\nRx24.prototype.info = function() {\n  return \"Rx24, Pilot Droid\";\n};\n\nmodule.exports = droidProducer;\n\n```\n##### abstract-factory_es6.js\n```Javascript\nfunction droidProducer(kind) {\n  if (kind === 'battle') return battleDroidFactory;\n  return pilotDroidFactory;\n}\n\nfunction battleDroidFactory() {\n  return new B1();\n}\n\nfunction pilotDroidFactory() {\n  return new Rx24();\n}\n\nclass B1 {\n  info() {\n    return \"B1, Battle Droid\";\n  }\n}\n\nclass Rx24 {\n  info() {\n    return \"Rx24, Pilot Droid\";\n  }\n}\n\nexport default droidProducer;\n\n```\n\n### Builder\n##### builder.js\n```Javascript\nfunction Request() {\n  this.url = '';\n  this.method = '';\n  this.payload = {};\n}\n\nfunction RequestBuilder() {\n\n  this.request = new Request();\n\n  this.forUrl = function(url) {\n    this.request.url = url;\n    return this;\n  };\n\n  this.useMethod = function(method) {\n    this.request.method = method;\n    return this;\n  };\n\n  this.payload = function(payload) {\n    this.request.payload = payload;\n    return this;\n  };\n\n  this.build = function() {\n    return this.request;\n  };\n\n}\n\nmodule.exports = RequestBuilder;\n\n```\n##### builder_es6.js\n```Javascript\nclass Request {\n  constructor() {\n    this.url = '';\n    this.method = '';\n    this.payload = {};\n  }\n}\n\nclass RequestBuilder {\n  constructor() {\n    this.request = new Request();\n  }\n\n  forUrl(url) {\n    this.request.url = url;\n    return this;\n  }\n\n  useMethod(method) {\n    this.request.method = method;\n    return this;\n  }\n\n  payload(payload) {\n    this.request.payload = payload;\n    return this;\n  }\n\n  build() {\n    return this.request;\n  }\n\n}\n\nexport default RequestBuilder;\n\n```\n\n### Factory\n##### factory.js\n```Javascript\nfunction bmwFactory(type) {\n  if (type === 'X5')\n    return new Bmw(type, 108000, 300);\n  if (type === 'X6')\n    return new Bmw(type, 111000, 320);\n}\n\nfunction Bmw(model, price, maxSpeed) {\n  this.model = model;\n  this.price = price;\n  this.maxSpeed = maxSpeed;\n}\n\nmodule.exports = bmwFactory;\n\n```\n##### factory_es6.js\n```Javascript\nclass BmwFactory {\n\n  static create(type) {\n    if (type === 'X5')\n      return new Bmw(type, 108000, 300);\n    if (type === 'X6')\n      return new Bmw(type, 111000, 320);\n  }\n}\n\nclass Bmw {\n  constructor(model, price, maxSpeed) {\n    this.model = model;\n    this.price = price;\n    this.maxSpeed = maxSpeed;\n  }\n}\n\nexport default BmwFactory;\n\n```\n\n### Prototype\n##### prototype.js\n```Javascript\nfunction Sheep(name, weight) {\n  this.name = name;\n  this.weight = weight;\n}\n\nSheep.prototype.clone = function() {\n  return new Sheep(this.name, this.weight);\n};\n\nmodule.exports = Sheep;\n\n```\n##### prototype_es6.js\n```Javascript\nclass Sheep {\n\n  constructor(name, weight) {\n    this.name = name;\n    this.weight = weight;\n  }\n\n  clone() {\n    return new Sheep(this.name, this.weight);\n  }\n}\n\nexport default Sheep;\n\n```\n\n### Singleton\n##### singleton.js\n```Javascript\nfunction Person() {\n\n  if (typeof Person.instance === 'object')\n    return Person.instance;\n\n  Person.instance = this;\n\n  return this;\n}\n\nmodule.exports = Person;\n\n```\n##### singleton_es6.js\n```Javascript\nclass Person {\n  constructor() {\n    if (typeof Person.instance === 'object') {\n      return Person.instance;\n    }\n    Person.instance = this;\n    return this;\n  }\n}\n\nexport default Person;\n\n```\n\n\n## structural\n### Adapter\n##### adapter.js\n```Javascript\nfunction Soldier(lvl) {\n  this.lvl = lvl;\n}\n\nSoldier.prototype.attack = function() {\n  return this.lvl * 1;\n};\n\nfunction Jedi(lvl) {\n  this.lvl = lvl;\n}\n\nJedi.prototype.attackWithSaber = function() {\n  return this.lvl * 100;\n};\n\nfunction JediAdapter(jedi) {\n  this.jedi = jedi;\n}\n\nJediAdapter.prototype.attack = function() {\n  return this.jedi.attackWithSaber();\n};\n\nmodule.exports = [Soldier, Jedi, JediAdapter];\n\n```\n##### adapter_es6.js\n```Javascript\nclass Soldier {\n  constructor(level) {\n    this.level = level;\n  }\n\n  attack() {\n    return this.level * 1;\n  }\n}\n\nclass Jedi {\n  constructor(level) {\n    this.level = level;\n  }\n\n  attackWithSaber() {\n    return this.level * 100;\n  }\n}\n\nclass JediAdapter {\n  constructor(jedi) {\n    this.jedi = jedi;\n  }\n\n  attack() {\n    return this.jedi.attackWithSaber();\n  }\n}\n\nexport {\n  Soldier,\n  Jedi,\n  JediAdapter\n};\n\n```\n\n### Bridge\n##### bridge.js\n```Javascript\nfunction EpsonPrinter(ink) {\n  this.ink = ink();\n}\nEpsonPrinter.prototype.print = function() {\n  return \"Printer: Epson, Ink: \" + this.ink;\n};\n\nfunction HPprinter(ink) {\n  this.ink = ink();\n}\nHPprinter.prototype.print = function() {\n  return \"Printer: HP, Ink: \" + this.ink;\n};\n\nfunction acrylicInk() {\n  return \"acrylic-based\";\n}\n\nfunction alcoholInk() {\n  return \"alcohol-based\";\n}\n\nmodule.exports = [EpsonPrinter, HPprinter, acrylicInk, alcoholInk];\n\n```\n##### bridge_es6.js\n```Javascript\nclass Printer {\n  constructor(ink) {\n    this.ink = ink;\n  }\n}\n\nclass EpsonPrinter extends Printer {\n  constructor(ink) {\n    super(ink);\n  }\n\n  print() {\n    return \"Printer: Epson, Ink: \" + this.ink.get();\n  }\n}\n\nclass HPprinter extends Printer {\n  constructor(ink) {\n    super(ink);\n  }\n\n  print() {\n    return \"Printer: HP, Ink: \" + this.ink.get();\n  }\n}\n\nclass Ink {\n  constructor(type) {\n    this.type = type;\n  }\n  get() {\n    return this.type;\n  }\n}\n\nclass AcrylicInk extends Ink {\n  constructor() {\n    super(\"acrylic-based\");\n  }\n}\n\nclass AlcoholInk extends Ink {\n  constructor() {\n    super(\"alcohol-based\");\n  }\n}\n\nexport {\n  EpsonPrinter,\n  HPprinter,\n  AcrylicInk,\n  AlcoholInk\n};\n\n```\n\n### Composite\n##### composite.js\n```Javascript\n// composition\nfunction EquipmentComposition(name) {\n  this.equipments = [];\n  this.name = name;\n}\n\nEquipmentComposition.prototype.add = function(equipment) {\n  this.equipments.push(equipment);\n};\n\nEquipmentComposition.prototype.getPrice = function() {\n  return this.equipments.map(function(equipment) {\n    return equipment.getPrice();\n  }).reduce(function(a, b) {\n    return a + b;\n  });\n};\n\nfunction Equipment() {}\n\nEquipment.prototype.getPrice = function() {\n  return this.price;\n};\n\n// -- leafs\nfunction FloppyDisk() {\n  this.name = \"Floppy Disk\";\n  this.price = 70;\n}\nFloppyDisk.prototype = Object.create(Equipment.prototype);\n\nfunction HardDrive() {\n  this.name = \"Hard Drive\";\n  this.price = 250;\n}\nHardDrive.prototype = Object.create(Equipment.prototype);\n\nfunction Memory() {\n  this.name = \"8gb memomry\";\n  this.price = 280;\n}\nMemory.prototype = Object.create(Equipment.prototype);\n\nmodule.exports = [EquipmentComposition, FloppyDisk, HardDrive, Memory];\n\n```\n##### composite_es6.js\n```Javascript\n//Equipment\nclass Equipment {\n\n  getPrice() {\n    return this.price || 0;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  setName(name) {\n    this.name = name;\n  }\n}\n\n// --- composite ---\nclass Composite extends Equipment {\n\n  constructor() {\n    super();\n    this.equipments = [];\n  }\n\n  add(equipment) {\n    this.equipments.push(equipment);\n  }\n\n  getPrice() {\n    return this.equipments.map(equipment => {\n      return equipment.getPrice();\n    }).reduce((a, b) => {\n      return a + b;\n    });\n  }\n}\n\nclass Cabinet extends Composite {\n  constructor() {\n    super();\n    this.setName('cabinet');\n  }\n}\n\n// --- leafs ---\nclass FloppyDisk extends Equipment {\n  constructor() {\n    super();\n    this.setName('Floppy Disk');\n    this.price = 70;\n  }\n}\n\nclass HardDrive extends Equipment {\n  constructor() {\n    super();\n    this.setName('Hard Drive');\n    this.price = 250;\n  }\n}\n\nclass Memory extends Equipment {\n  constructor() {\n    super();\n    this.setName('Memory');\n    this.price = 280;\n  }\n}\n\nexport {\n  Cabinet,\n  FloppyDisk,\n  HardDrive,\n  Memory\n};\n\n```\n\n### Decorator\n##### decorator.js\n```Javascript\nfunction Pasta() {\n  this.price = 0;\n}\nPasta.prototype.getPrice = function() {\n  return this.price;\n};\n\nfunction Penne() {\n  this.price = 8;\n}\nPenne.prototype = Object.create(Pasta.prototype);\n\nfunction SauceDecorator(pasta) {\n  this.pasta = pasta;\n}\n\nSauceDecorator.prototype.getPrice = function() {\n  return this.pasta.getPrice() + 5;\n};\n\nfunction CheeseDecorator(pasta) {\n  this.pasta = pasta;\n}\n\nCheeseDecorator.prototype.getPrice = function() {\n  return this.pasta.getPrice() + 3;\n};\n\nmodule.exports = [Penne, SauceDecorator, CheeseDecorator];\n\n```\n##### decorator_es6.js\n```Javascript\nclass Pasta {\n  constructor() {\n    this.price = 0;\n  }\n  getPrice() {\n    return this.price;\n  }\n}\n\nclass Penne extends Pasta {\n  constructor() {\n    super();\n    this.price = 8;\n  }\n}\n\nclass PastaDecorator extends Pasta {\n  constructor(pasta) {\n    super();\n    this.pasta = pasta;\n  }\n\n  getPrice() {\n    return this.pasta.getPrice();\n  }\n}\n\nclass SauceDecorator extends PastaDecorator {\n  constructor(pasta) {\n    super(pasta);\n  }\n\n  getPrice() {\n    return super.getPrice() + 5;\n  }\n}\n\nclass CheeseDecorator extends PastaDecorator {\n  constructor(pasta) {\n    super(pasta);\n  }\n\n  getPrice() {\n    return super.getPrice() + 3;\n  }\n}\n\nexport {\n  Penne,\n  SauceDecorator,\n  CheeseDecorator\n};\n\n```\n\n### Facade\n##### facade.js\n```Javascript\nvar shopFacade = {\n  calc: function(price) {\n    price = discount(price);\n    price = fees(price);\n    price += shipping();\n    return price;\n  }\n};\n\nfunction discount(value) {\n  return value * 0.9;\n}\n\nfunction shipping() {\n  return 5;\n}\n\nfunction fees(value) {\n  return value * 1.05;\n}\n\nmodule.exports = shopFacade;\n\n```\n##### facade_es6.js\n```Javascript\nclass ShopFacade {\n  constructor() {\n    this.discount = new Discount();\n    this.shipping = new Shipping();\n    this.fees = new Fees();\n  }\n\n  calc(price) {\n    price = this.discount.calc(price);\n    price = this.fees.calc(price);\n    price += this.shipping.calc();\n    return price;\n  }\n}\n\nclass Discount {\n\n  calc(value) {\n    return value * 0.9;\n  }\n}\n\nclass Shipping {\n  calc() {\n    return 5;\n  }\n}\n\nclass Fees {\n\n  calc(value) {\n    return value * 1.05;\n  }\n}\n\nexport default ShopFacade;\n\n```\n\n### Flyweight\n##### flyweight.js\n```Javascript\nfunction Color(name) {\n  this.name = name;\n}\n\nvar colorFactory = {\n  colors: {},\n  create: function(name) {\n    var color = this.colors[name];\n    if (color) return color;\n\n    this.colors[name] = new Color(name);\n    return this.colors[name];\n  }\n};\n\nmodule.exports = colorFactory;\n\n```\n##### flyweight_es6.js\n```Javascript\nclass Color {\n  constructor(name) {\n    this.name = name\n  }\n}\n\nclass colorFactory {\n  constructor(name) {\n    this.colors = {};\n  }\n  create(name) {\n    let color = this.colors[name];\n    if (color) return color;\n    this.colors[name] = new Color(name);\n    return this.colors[name];\n  }\n};\n\nexport {\n  colorFactory\n};\n\n```\n\n### Proxy\n##### proxy.js\n```Javascript\nfunction Car() {\n  this.drive = function() {\n    return \"driving\";\n  };\n}\n\nfunction CarProxy(driver) {\n  this.driver = driver;\n  this.drive = function() {\n    if (driver.age < 18)\n      return \"too young to drive\";\n    return new Car().drive();\n  };\n}\n\nfunction Driver(age) {\n  this.age = age;\n}\n\nmodule.exports = [Car, CarProxy, Driver];\n\n```\n##### proxy_es6.js\n```Javascript\nclass Car {\n  drive() {\n    return \"driving\";\n  };\n}\n\nclass CarProxy {\n  constructor(driver) {\n    this.driver = driver;\n  }\n  drive() {\n    return (this.driver.age < 18) ? \"too young to drive\" : new Car().drive();\n  };\n}\n\nclass Driver {\n  constructor(age) {\n    this.age = age;\n  }\n}\n\nexport {\n  Car,\n  CarProxy,\n  Driver\n};\n\n```\n\n\n\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.3076171875,
          "content": "{\n  \"name\": \"gof-js\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Design patterns implemented in javascript\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"test\": \"tests\"\n  },\n  \"scripts\": {\n    \"build-docs\": \"node ./scripts/build-docs.js\",\n    \"format\": \"node ./scripts/format.js\",\n    \"test\": \"mocha test --compilers js:babel-core/register\",\n    \"coverage\": \"./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- 'test/**/*.js' --compilers js:babel-core/register\",\n    \"coveralls\": \"npm run coverage && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\",\n    \"build\": \"npm run test; npm run format; npm run build-docs\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.25.0\",\n    \"babel-preset-es2015\": \"^6.24.1\",\n    \"chai\": \"^3.5.0\",\n    \"coveralls\": \"^2.11.16\",\n    \"fs-extra-promise\": \"^0.4.1\",\n    \"glob\": \"^7.1.3\",\n    \"istanbul\": \"^1.0.0-alpha\",\n    \"js-beautify\": \"^1.9.0\",\n    \"mocha\": \"^2.4.5\",\n    \"mocha-lcov-reporter\": \"^1.2.0\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/FelipeBB/GoF-JS.git\"\n  },\n  \"keywords\": [\n    \"design\",\n    \"patterns\",\n    \"gof\"\n  ],\n  \"author\": \"felipe baravieira\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/FelipeBB/GoF-JS/issues\"\n  },\n  \"homepage\": \"https://github.com/FelipeBB/GoF-JS#readme\"\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}