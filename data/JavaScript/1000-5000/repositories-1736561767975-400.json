{
  "metadata": {
    "timestamp": 1736561767975,
    "page": 400,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "senecajs/seneca",
      "stars": 3962,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "test/stubs\ndocs/examples\ntmp\ntest\ntrial\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.244140625,
          "content": "module.exports = {\n  extends: 'eslint:recommended',\n  env: {\n    node: true,\n    es6: true,\n  },\n  \"parserOptions\": {\n    \"ecmaVersion\": 10,\n  },\n  rules: {\n    'no-console': 0,\n    'no-unused-vars': [2,{args:'none'}],\n    'no-extra-semi': 0,\n  },\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.212890625,
          "content": "*~\n.DS_Store\n.idea\n*.old\n*.bak\n*.tmp\n*.log\n*.off\n*-off\nnpm-debug.log\nmem.json\nout\ntmp\ntest/db\nnode_modules\nnode_modules-*\ndocs/annotated\ndocs/coverage.html\ntest/coverage.html\n*.csv\npackage-lock.json\nyarn.lock\ncoverage\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.017578125,
          "content": "*~\n*.off\n*-off\ntmp"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.041015625,
          "content": "{\n  \"semi\": false,\n  \"singleQuote\": true\n}"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 23.29296875,
          "content": "\n## 4.0.0-rc4 2024-07-12\n\n* Dependency updates.\n\n\n## 4.0.0-rc3 2024-07-11\n\n* Dependency updates.\n\n\n## 4.0.0-rc2 2024-06-06\n\n* Promisified: message, post\n* Remove most legacy flags\n\n\n## 4.0.0-rc.1 2022-06-19\n\n* Node >= 14\n* Remove Joi\n* Remove seneca-transport\n\n\n## 3.33.0 2023-11-05\n\n* Remove norma library, replace functionality with update gubu library.\n\n\n## 3.32.1 2023-09-16\n\n* Provide Seneca 4 act-err argument variants via `act-err-4` temporary event.\n\n\n## 3.32.0 2023-06-29\n\n* Translation also operates on message add and sub.\n* Action id reformated to include plugin full name: https://github.com/senecajs/seneca/issues/905\n\n\n## 3.31.2 2023-06-29\n\n* Translation action function has meaningful name.\n\n\n## 3.31.1 2023-06-29\n\n* Include Typescript type definitions.\n\n\n## 3.31.0 2023-06-29\n\n* Provide merged plugin options to the plugin preload function.\n\n\n## 3.30.1 2023-05-31\n\n* Remove rebind decoration as not needed - seneca-entity handles own special case\n* Option debnug.datalen applies to test logs in all cases\n\n\n## 3.30.0 2023-02-10\n\n* Error intercept customization hook.\n* Rebind decoration functions to current delegate.\n* Custom error identification, default now just instanceof Error.\n* Plugin options at top level moved to legacy option.\n\n\n## 3.29.0 2022-09-01\n\n* Removed duplicate logging marker as it pollutes result values.\n* Gubu update allows for top level scalar validation in messages.\n\n\n## 3.28.0 2022-05-23\n\n* Validation control options: valid.active|message|option|plugin\n\n\n## 3.27.2 2022-05-16\n\n* Accept legacy non-functional option properties to maintain compatibility with old configs.\n\n\n## 3.27.1 2022-05-15\n\n* Adjust dependency versions to ensure node >= 10 support.\n\n\n## 3.27.0 2022-05-12\n\n* Error capture options: error.capture.callback,action\n* Plugin `shared` object space\n\n\n## 3.26.2 2022-04-18\n\n* Remove injection of plugin name at top level of options.\n\n\n## 3.26.1 2022-04-18\n\n* Allow Plugin definition array in options.\n\n\n## 3.26.0 2022-04-08\n\n* Plugin defaults validated using https://github.com/rjrodger/gubu\n* Plugin definition can be async: https://github.com/senecajs/seneca/pull/891 - thanks https://github.com/lilsweetcaligula !\n\n\n## 3.25.0 2021-11-03\n\n* Seneca.add now uses Ordu to run add-action tasks, thus easier to customize.\n\n\n## 3.24.1 2021-10-12\n\n* Added option debug.print.depth=2 to control inspection depth in console output.\n* Move some legacy util functions to lib/legacy.js - prep for deprecation.\n\n\n## 3.24.0 2021-09-14\n\n* Avoid duplicate logging of errors and messages in log test mode.\n\n\n## 3.23.3 2021-04-19\n\n* Update dependencies.\n\n\n## 3.22.2 2021-01-14\n\n* Debug option to print full error stacks regardless of logger.\n\n\n## 3.22.1 2020-12-10\n\n* Flat logger shows Error callpoint.\n\n\n## 3.23.0 2020-11-30\n\n* Update dependencies that have been converted to typescript.\n\n\n## 3.22.0 2020-07-02\n\n* Update patrun module to fix sub multiple fires.\n* PR #855 seneca.fail - allow the boolean first arg to trigger the error throw.\n\n\n## 3.21.2 2020-05-26\n\n* Handle 'object' === typeof(null) edge cases..\n\n\n## 3.21.1 2020-05-26\n\n* Preserve default arrays in plugin options.\n* Accept older Joi schemas.\n\n\n## 3.21.0 2020-05-19\n\n* Starting port to TypeScript, see lib/plugin.ts.\n* Well-defined plugin load lifecycle, see lib/plugin.ts use of https://github.com/rjrodger/ordu.\n\n\n## 3.20.6 2020-05-14\n\n* Fixes regression with `seneca.depends`: https://github.com/senecajs/seneca/issues/792.\n\n\n## 3.20.5 2020-05-11\n\n* Remove lodash from dependencies.\n\n\n## 3.20.4 2020-05-11\n\n* Actually remove lodash.\n\n\n## 3.20.3 2020-03-20\n\n* Removed lodash as a dependency.\n\n\n## 3.20.2 2020-03-12\n\n* Fixed empty string option failure.\n* Correctly implemented original behaviour for  https://github.com/senecajs/seneca/issues/773 \n\n## 3.20.1 2020-01-29\n\n* Fix unwritable delegate properties\n\n\n## 3.20.0 2020-01-28\n\n* Upgrade all dependencies to support @hapi/joi@17.\n* Improve and document docs/example config-server/client.js to show use of promisify plugin.\n\n\n## 3.19.0 2020-01-28\n\n* Fix #784 by using Object.defineProperty to set delegate properties.\n* Upgrade optioner to support @hapi/joi@17.\n\n\n## 3.18.0 2020-01-16\n\n* Action subscriptions now provide proper error messages.\n\n\n## 3.17.0 2019-10-01\n\n* Fix: use internal.print function fully throughout code base.\n* `close` method waits for one action execution interval before preceding to avoid missing pending actions.\n\n\n## 3.16.1 2019-09-30\n\n* Option `internal.print.log|err` allows custom printing of console output.\n\n\n## 3.16.0 2019-09-19\n\n* Reverting to @hapi/joi 15.1.1 and standardizing on that for now.\n\n\n## 3.15.3 2019-09-19\n\n* Support latest version of @hapi/joi 16.1.2.\n\n\n## 3.15.2 2019-09-19\n\n* Update patrun to 2.x - fixes partial pattern match issue.\n\n\n## 3.15.0 2019-09-07\n\n* Update dependencies to @hapi\n\n\n## 3.14.0 2019-09-02\n\n* New \"flat\" logger that will become default logger in 4.x. To use: `Seneca({logger:'flat'})`\n* Interactions between .test(), .quiet(), and `test` and `quiet` settings are now consistent.\n* The command line argument `--seneca.test` now correctly sets the test log level to `warn`. To print all logs, use `--seneca.test=all`\n\n\n## 3.13.3 2019-08-14\n\n* Resolve disagreement between seneca-doc and seneca on valid plugin names - $ is not allowed as it is a separator between plugin name and tag. \n\n\n## 3.13.2 2019-08-08\n\n* Include plugin returned meta data in the stored plugin definition (to be used by seneca-doc).\n\n\n## 3.13.1 2019-08-06\n\n* Minor fix to handle null options.plugins.\n\n\n## 3.13.0 2019-07-30\n\n* Plugin loading directives: init$, defined$, inited$.\n* Started new API documentation: API.md (draft!).\n* Option `log` can be a function taking the log entry as first parameter.\n\n\n## 3.12.1 2019-07-25\n\n* Support --seneca.quiet command line argument\n* Give ready functions unique names to help debugging\n\n\n## 3.12.0 2019-07-22\n\n* Allow remote services to fully override local action patterns.\n* Moved --seneca.print.tree debug print out to @seneca/debug plugin.\n* Better action timeout log message.\n\n\n## 3.11.0 2019-05-15\n\n* Fixed explain$ transport issues.\n* Updated `joi` to @hapi/joi\n\n\n## 3.10.0 2019-05-12\n\n* Added explain$ directive to seneca.act - see test/explain.test.js - allows message actions to provide context-specific explanation data for behaviour on an ad hoc basis.\n\n\n## 3.9.0 2019-05-06\n\n* Added custom$ and fixed$ directives to seneca.add - see test/custom.test.js:custom-add - allows fixed message arguments and meta custom values on individual messages.\n\n\n## 3.8.4 2019-03-03\n\n* Seneca.translate can include/exclude message properties.\n* Added `log` event so that plugins can capture log entries directly.\n\n\n## 3.8.3 2019-02-25\n\n* Seneca.fail throws Seneca Errors, whereas Seneca.error creates them.\n* Seneca.error can create plugin scoped errors.\n\n\n## 3.8.2 2019-02-17\n\n* Allow plugin names that are file paths, and allow . in plugin names and tags.\n* Plugins with seneca prefixes (seneca- or seneca@/) win - thus joi and seneca-joi in particular, are no longer confused.\n\n\n## 3.8.1 2019-02-10\n\n* Fix action annotations - seneca-joi now works again.\n\n\n## 3.8.0 2019-01-13\n\n* Plugin Seneca instance has `init` convenience method for initialization action.\n* Plugins can define local error codes with `errors` property.\n* Updated `fail` method throws Seneca Eraro exceptions directly and supports plugin-local codes.\n* Option to ensure plugins load only once, and to ignore plugins.\n\n\n## 3.7.0 2018-07-18\n\n* `role:seneca,cmd:ping` responds with instance and process metrics.\n* Fixed memory leak in history: https://github.com/senecajs/seneca/issues/680 .\n* Utility modules available via Seneca.util: Eraro, Jsonic, Nid, Patrun.\n* `meta.custom` is now preserved properly over entire action pathway including transports.\n\n\n## 3.6.0 2018-05-28\n\n* `translate` method simplifies translating message patterns.\n* Message metadata has `custom` sub-object that propogates with message.\n\n\n## 3.5.0 2018-05-14\n\n* Better format for fatal error messages.\n* Passes `npm audit`.\n* Fixed double `sub` call.\n\n\n## 3.4.3 2017-10-13\n\n* Supports --seneca.test to trigger test mode.\n* Support SENECA_TEST enviroment variable.\n\n\n## 3.4.2 2017-08-10\n\n* Fixes priors bug #662.\n* Removes errant debugging code.\n* Fixes history pruning.\n* Slightly neater test logs (suffix to IN/OUT indicates sync/async message).\n\n\n## 3.4.1 2017-07-06\n\n* Backwards compatibility fix for seneca-amqp-transport 2.2.0 (legacy.meta=true).\n\n\n## 3.4.0 2017-07-03\n\n* Verified working against Node 8.\n* Added github standard code of conduct.\n* Now using https://github.com/prettier/prettier as code format.\n* Refactored message and reply meta data, making message tracking much easier; Actions and callbacks get a third parameter `meta`, that has all the details.\n* Minor refactor of error handling so that errors are passed-through; intended for 4.x, enable with legacy.error=false.\n* Next-generation transport (2X faster, new simpler API for transport writers) included in core Seneca; only http transport written; intended to be default transport in 4.x, enable with legacy.transport=false.\n* As part of next-generation transport, a new message protocol that gives the message data priority as a JSON object, and placed Seneca meta data into the meta$ property.\n* Action cache replaced by action history utility, making a decoupled seneca.reply method possible (as used (and needed) by next-generation transport).\n* Fixed root deprecation warning; Better, but incomplete refactor of source files; some minor fixes;\n\n\n## 3.3.0 2017-02-07\n\n* Action callback can omit Error parameter (hapi style): http://senecajs.org/api/#method-add\n* Minor updates for consistency with new API docs: http://senecajs.org/api\n* Updated use-plugin to 0.3.2.\n* Plugin options are now consistent with global options after plugin load.\n\n\n## 3.2.0 2016-09-27\n\n* Added .inward() api method.\n* Added .outward() api method.\n* Made logging safely stringify input.\n* Fixed memory leak / timeout bug in gate-executor.\n\n\n## 3.1.0 2016-09-16\n\n* Correct issue with log handlers not working via command line\n* Extracted out log handling into seneca-log-filters for ease of reuse in custom loggers\n* Replaced the default log handler's filter logic with seneca-log-filters\n* Bumped patrun to correct incorrect matches with partial patterns due to missing catchall\n* Added error handling example in docs/examples/error-handling.js.\n* Changed boot log message from 'hello' to 'seneca-started'.\n* Updated salestax examples to work correctly.\n* Removed old legacy parsing handlers as they caused crashes\n* Added testable transport links\n\n\n## 3.0.0 2016-08-26\n\n* Refactored 'old' logging into it's own external plugin; seneca-legacy-logger.\n* Added new adaptor based JSON logging. External loggers can now be used with Seneca.\n* Created new 'built-in' logger which is used as the default logger if none are provided.\n* Corrected bug in Seneca.util.deepextend via Lodash version bump.\n* Updated gate-executor plugin to fix issues in load determinism and generally improve perf.\n* Replaced large swathes custom code with Lodash to improve speed and reliability.\n* Exposed parsepattern function via seneca.util.parsepattern as required by seneca-chain to function.\n* Removed all 'dead' code marked legacy. Updated other parts of codebase with legacy comments for v.next.\n* Removed default settings for seneca-admin as it is not a default loaded plugin.\n* Set `options.actcache.active` to be false by default. Disables actcache feature by default.\n* Moved `close_signals` from `options.internal` to `options.system`.\n* Moved `catchall` from `options.internal` to `options.system`.\n* Removed `options.schema` as it was only partially checking and needs a rethink.\n* Removed mem-store as a required dependency in the package.\n* Devolved store logic in 'store.js' fully to seneca-entity. Entites are now 'fully removed'.\n* Devolved chain functionality into seneca-chain and removed from library. Moved all related tests.\n* Devolved pin functionality into seneca-pin and removed from library. Moved all related tests.\n* Removed seneca-web as a default loaded plugin. Removed related tests. Removed from package.\n* Removed seneca-cluster as a default loaded plugin. Removed related tests. Removed from package.\n* Removed seneca-seneca as a default loaded plugin. Removed related tests. Removed from package.\n* Removed seneca-echo as a default loaded plugin. Removed related tests. Removed from package.\n* Removed seneca-basic as a default loaded plugin. Removed related tests. Removed from package.\n* Removed seneca-repl as a default loaded plugin. Removed related tests. Removed from package.\n* Removed seneca-parambulator as a default loaded plugin. Removed related tests. Removed from package.\n* Removed parambulator as a default loaded plugin. Removed related tests. Removed from package.\n* Removed joi as a default loaded plugin. Removed related tests. Removed from package.\n* Moved min required version of Node to greater than `4.0`. `0.10` and `0.12` are no longer supported.\n* Added support for Node `6.x` with minimal changes to account for api differences.\n* Removed LTS doc as it gives the wrong information. Website update to follow.\n* Updated all dependencies. Locked deps because of `0.x` support have been updated too.\n* Modified tests to account for breaking changes in both lab and code after updating to latest.\n* Updated eslint-config-seneca with local rules and removed. Corrected peer dependency issues around linting plugins.\n* Annotations are no longer stored in the repo and must be generated locally. Annotations are found in `docs/annotated`\n* Annotations now work for the whole library, not just `seneca.js`\n* Coverage report now generates as `/docs/coverage.html` and is not stored in the repo.\n* Coverage and Annotations can now be generated via `npm run coverage` and `npm run annotate` respectively.\n* Paired back and updated travis file. Plugins are now tested via `seneca-test-rig` instead of with Seneca.\n* Moved older examples into folders for clarity and added another 5 examples showing more concepts; see `docs/examples`\n* Removed ALL redundant code files from `test` put stubs in `test/stubs` folder. All tests are now in the root.\n* Added test to show how to use exportmap in plugins to export values and functions; see `/test/plugin.test.js:L23`\n* Removed old release scripts in favour of `docs/examples/create-a-release.md` and using seneca-test-rig for plugin testing.\n\n\n## 2.1.0: 2016-05-20\n\n* Fix for parambulator not correctly testing messages. PR #422\n* Parambulator validation logic moved to it's own plugn. PR #420\n* Allow validation provider to be swapped out (requires flag). PR #420\n* Improvements to the test rig. PR #427, #405\n\n\n## 2.0.1: 2016-04-13\n\n* Filter undefined options. PR #386\n* Enhancement to README. PR #391\n\n\n## 2.0.0: 2016-03-22\n\n* Update transport version to 1.2.0. PR #377\n* Remove Seneca as a dependency. PR #378\n* Remove entities as a default plugin. PR #379\n\n\n## 1.4.0: 2016-03-16\n\n* Add setting for immediate pinning. PR #358\n* Allow overriding action timeout. PR #359\n* Use lodash defaultsDeep to implement util.deepextend. PR #364\n* Update transport dependency. PR #372\n\n\n## 1.3.0: 2016-03-01\n\n* Default tag when undefined. PR #349\n* Update transport dependency. PR #351\n* Update transport dependency. PR #352\n* Add test and return listener address info. PR #353\n* Add test for pinning. PR #357\n\n\n## 1.2.0: 2016-02-17\n\n* Entity is now loaded as a plugin from the seneca-entity module. PR #343\n* `act` now can receive more than two arguments in the callback. PR #341\n\n\n## 1.1.0: 2016-01-28\n\n* Plugin options can now be loaded and provided asynchronously to future plugins.\nSee Issue #293 for further details.\n* `Seneca` is now exposed as a property on the main exports. PR #320\n* `strict.find` is a new option.  It allows not-found actions to default to returning\nan empty object as the result, instead of erroring.  PR #333\n* `seneca-web` is now at version 0.7.0, which includes support for hapi.  PR #331\n* `seneca-mem-store` and `seneca-basic` are updated to the latest versions. PR #332\nAll issues for v1.1.0 are contained in the [1.1.0 milestone](https://github.com/senecajs/seneca/milestones/1.1.0)\n\n\n## 1.0.0: 2016-01-11\n\n* Fixed API wrapper so that original function name preserved. Issue #296\n* Fixed CLI `--seneca.print.tree` arg so that it works correctly. Issue #235\n* Seneca instance now passed as property on `add` callback function.  PR #290\n* Dependencies updated to latest versions. PR #285 and #304\n\n\n## 0.9.3: 2015-12-21\n\n* Fixed calling error handler twice with the same error. Issue #245\n* Fixed npm install error message. Issue #274\n* Updated transport plugin to recent version\n\n\n## 0.9.2: 2015-12-14\n\n* Fixed seneca Error when loading old style plugin\n* Revert deprecation warning from 0.9.0 when calling `act` during plugin initialization\n\n\n## 0.9.1: 2015-12-08\n\n* Fixed pins only working when they are provided as strings plus additional tests PR 268\n\n## 0.9.0: 2015-12-03\n\n  * `act` now displays a deprecation warning when its invoked within a plugin\n    initialization function.  To disable deprecation warnings, run node with\n    `--no-deprecation`. PR 254\n  * `private$` is now exposed on seneca object. PR 260\n  * The repl is now an external plugin, enabled by default.  To disable set\n    `default_plugins.repl` to false when creating seneca object. PR 255\n  * Cluster is now an external plugin, enabled by default.  To disable set\n    `default_plugins.cluster` to false when creating seneca object. PR 256\n  * Closing seneca now removes all relevant event listeners. PR 259\n  * `has` function now converts strings to javascript objects. PR 262\n  * Internal cleanup and organization of code, as well as more tests.\n\n\n## 0.8.0: 2015-11-20\n\n   * Fixed seneca.print.tree[all] argument not being passed correctly to optioner.\n     Issue 177.\n   * Fix minor memory leak, when seneca closed it didn't detach process\n     listeners.  Pull request 230 and issue 226.\n   * Fix api_delegate not calling client and server with arguments.  Pull\n     request 218.\n   * Throw when trying to use seneca in cluster mode on node 0.10.  This is do to\n     to cluster support in node not working correctly prior to version 0.12.0.\n     Pull request 227.\n   * Outdated dependencies are updated to their latest stable ES5 versions.  \n     Pull request 236.\n   * New function added to seneca named `decorate`.  Used to extend the core\n     seneca object with new functionality.  Pull request 233.\n   * Support data store `merge$` ability.  Pull request 217.\n   * Support added for arrays to be used as defaults in actions. Issue 185.\n   * General code cleanup and linting of internal code to follow style guide.  \n     More tests were also added to increase code coverage.  Pull requests 207,\n     208, 214, 215, 223, 229, 238\n\n   For all of the release information please view the 0.8.0 milestone on github:\n   https://github.com/senecajs/seneca/milestones/0.8.0\n\n\n## 0.7.2: 2015-10-27\n\n   * Fix support for catchall (without pins) clients. Issue 199. Pull\n     request 200.\n\n\n## 0.7.1: 2015-10-05\n\n   * repl now supports quit/exit command\n   * seneca.sub provides subscription pattern via meta$.sub\n\n\n## 0.7.0: 2015-10-04\n\n   * support node 4\n   * update to patrun 0.5; now supports glob adds\n   * new documentation system\n\n\n## 0.6.5: 2015-09-04\n\n   * revert to non-strict adds so that priors can be subset patterns, see issues 145, 149\n\n\n## 0.6.4: 2015-07-29\n\n   * bug fixes for issues: 144, 141, 143\n   * documentation article on priors, issue 147\n\n\n## 0.6.3: 2015-07-12\n\n   * Use lab instead of mocha for unit testing\n   * Use jsonic.stringify for consistent object string descriptions\n   * Fix action-id/transaction-id edge cases; ids now transfer fully over priors and processes\n   * Moved to docpad for github pages site\n   * Rewrote getting started guide\n   * Bug fixes for github issues: 135\n\n\n## 0.6.2: 2015-06-22\n\n   * REPL enhanced, now accepts literal jsonic patterns and traces action flow\n   * Option debug.callpoint adds call point source file and line number tracing to logging\n   * Bug fixes for github issues: 106, 125, 87, 110, 114, 130\n   * Added logging option: --seneca.log.short makes all ids 2 chars in length\n   * Added debug option: --seneca.print.tree(.all) - prints pattern tree to console\n   * Bug fixes and minor updates to seneca-transport, seneca-web, seneca-basic, seneca-mem-store\n\n\n## 0.6.1: 2015-02-04\n\n   * \"zig\" style control flow for neater code\n   * Much improved error logging and action tracing\n   * Plugin initialization errors are fatal\n   * Transport mapping sub-system completely refactored\n   * Bug fixes for github issues: 92, 88, 86, 80, 97\n\n\n## 0.5.21: 2014-10-07\n\n   * Bug fixes for github issues: 70, 65, 48, 45\n\n\n## 0.5.20: 2014-09-07\n\n   * More standardized log messages that keep fields consistent\n   * Regexp can be used to filter logs\n   * Refactored plugin code into lib/plugin-utils\n   * Fixed most github issues\n\n\n## 0.5.19: 2014-07-13\n\n   * Removed builtin plugins - all now in separate modules.\n   * Updated to seneca-web 0.2 - now with admin module\n   * Fixed broken .client and .listen chaining\n\n\n## 0.5.18: 2014-07-09\n\n   * Major update to message transport mechanism\n   * Added plugin init queue so seneca.ready is no longer required\n   * Added role:util,note:true actions for note storage, for inter-plugin data sharing\n   * Moved plugin loading to new module, use-plugin\n   * Moved utility functions to common\n   * Removed deprecated functions\n   * Added action execution cache\n   * Improved error reporting\n\n\n## 0.5.17: 2014-04-10\n\n   * Moved standard store test to separate seneca-store-test module\n\n\n## 0.5.16: 2014-04-09\n\n   * use norma for api function arguments\n   * parambulator arg checking moved into arg specification\n   * stats moved outside to rolling-stats module\n   * seneca.fix sets fixed args\n   * started annotating source code\n   * small improvement to error handling and logging\n\n\n## 0.5.15: 2014-01-28\n\n   * entity objects now use prototype style javascript objects - there's lots of them\n\n\n## 0.5.14: 2013-10-30\n\n   * moved web to own module, seneca-web\n   * moved transport to own module, seneca-transport\n   * transport now uses patterns, no longer hard-coded into seneca.js\n\n\n## 0.5.13: 2013-10-01\n\n   * moved pattern matcher into own module: patrun\n   * added stats collection for actions\n   * jshint applied to code, use npm run-script build\n\n\n## 0.5.12: 2013-09-13\n\n   * argsparser replaced with jsonic module\n   * added act_if convenience method\n   * deepextend can handle circular references\n   * argprops cleans $ args\n\n\n## 0.5.11: 2013-08-29\n\n   * parambulator arg validation logged\n\n\n## 0.5.10: 2013-08-18\n\n   * added listen method for easy launching of services\n   * added client method for easy http access of services\n\n\n## 0.5.9: 2013-07-09\n\n   * add export feature for plugins\n   * seneca.depends - check plugin dependencies registered\n   * API CHANGE: seneca.fail throws if no callback      \n   * API CHANGE: seneca.http, mapping spec, data:true means place req.body into 'data' arg\n   * API CHANGE: no async inside module def init:_plugin_ used instead for async init\n   * API CHANGE: seneca.service replaced by seneca.export('web')\n\n\n## 0.5.8: 2013-05-29\n\n   * Entities get an inspect() function for util.inspect\n   * Entity.toString prints nicer object values\n   * SENECA_LOG environment variable can be used instead of --seneca.log command line arg\n   * Seneca instance given to plugin init function includes a context object with reference to calling code module\n   * Logging output slightly prettier\n   * Config plugin looks for seneca.config.js in calling code folder\n   * Config plugin supports environments\n\n\n## 0.5.3: 2013-03-26\n\n   * seneca.util.deepextend supports boxed types, thanks Mircea!\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1435546875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at richard@ricebridge.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "DEV.md",
          "type": "blob",
          "size": 0.0498046875,
          "content": "\n# Branches\n\n- 3.x: Version 3\n- master: Version 4\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.119140625,
          "content": "The MIT License\n\nCopyright (c) 2015-2016 Richard Rodger and Seneca.js contributors\nCopyright (c) 2010-2014 Richard Rodger\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.67578125,
          "content": "![Logo][]\n> A Node.js toolkit for Microservice architectures\n\n\n| ![Voxgig](https://www.voxgig.com/res/img/vgt01r.png) | This open source module is sponsored and supported by [Voxgig](https://www.voxgig.com). |\n|---|---|\n\n\n# Seneca\n[![Npm][BadgeNpm]][Npm]\n[![NpmFigs][BadgeNpmFigs]][Npm]\n[![Travis][BadgeTravis]][Travis]\n[![Coveralls][BadgeCoveralls]][Coveralls]\n[![DeepScan][BadgeDeepScan]][DeepScan]\n[![CodeClimate][BadgeCodeClimate]][CodeClimate]\n[![Gitter][BadgeGitter]][Gitter]\n\n- __Lead Maintainer:__ [Richard Rodger][Lead]\n- __Sponsor:__ [voxgig][Sponsor]\n\nSeneca is a toolkit for writing microservices and organizing the\nbusiness logic of your app. You can break down your app into \"stuff\nthat happens\", rather than focusing on data models or managing\ndependencies.\n\nSeneca provides,\n\n- __pattern matching:__ a wonderfully flexible way to handle business requirements\n\n- __transport independence:__ how messages get to the right server is not something you\nshould have to worry about\n\n- __maturity:__ 8 years in production (before we called it _microservices_), but was\nonce taken out by [lightning][]\n\n- __plus:__ a deep and wide ecosystem of [plugins][]\n\n- __book:__ a guide to designing microservice architectures: [taomicro][]\n\nUse this module to define commands that work by taking in some JSON,\nand, optionally, returning some JSON. The command to run is selected\nby pattern-matching on the the input JSON. There are built-in and\noptional sets of commands that help you build Minimum Viable Products:\ndata storage, user management, distributed logic, caching, logging,\netc. And you can define your own product by breaking it into a set of\ncommands - \"stuff that happens\".  That's pretty much it.\n\nIf you're using this module, and need help, you can:\n\n- Post a [github issue][Issue],\n- Tweet to [@senecajs][Tweet],\n- Ask on the [Gitter][Gitter].\n\nIf you are new to Seneca in general, please take a look at [senecajs.org][Org]. We have\neverything from tutorials to sample apps to help get you up and running quickly.\n\nSeneca's source can be read in an annotated fashion by running `npm run annotate`. An\nannotated version of each file will be generated in `./docs/`.\n\n## Install\nTo install via npm,\n\n```\nnpm install seneca\n```\n\n## Quick Example\n\n```js\n'use strict'\n\nvar Seneca = require('seneca')\n\n\n// Functionality in seneca is composed into simple\n// plugins that can be loaded into seneca instances.\n\n\nfunction rejector () {\n  this.add('cmd:run', (msg, done) => {\n    return done(null, {tag: 'rejector'})\n  })\n}\n\nfunction approver () {\n  this.add('cmd:run', (msg, done) => {\n    return done(null, {tag: 'approver'})\n  })\n}\n\nfunction local () {\n  this.add('cmd:run', function (msg, done) {\n    this.prior(msg, (err, reply) => {\n      return done(null, {tag: reply ? reply.tag : 'local'})\n    })\n  })\n}\n\n\n// Services can listen for messages using a variety of\n// transports. In process and http are included by default.\n\n\nSeneca()\n  .use(approver)\n  .listen({type: 'http', port: '8260', pin: 'cmd:*'})\n\nSeneca()\n  .use(rejector)\n  .listen(8270)\n\n\n// Load order is important, messages can be routed\n// to other services or handled locally. Pins are\n// basically filters over messages\n\n\nfunction handler (err, reply) {\n  console.log(err, reply)\n}\n\nSeneca()\n  .use(local)\n  .act('cmd:run', handler)\n\nSeneca()\n  .client({port: 8270, pin: 'cmd:run'})\n  .client({port: 8260, pin: 'cmd:run'})\n  .use(local)\n  .act('cmd:run', handler)\n\nSeneca()\n  .client({port: 8260, pin: 'cmd:run'})\n  .client({port: 8270, pin: 'cmd:run'})\n  .use(local)\n  .act('cmd:run', handler)\n\n\n// Output\n// null { tag: 'local' }\n// null { tag: 'approver' }\n// null { tag: 'rejector' }\n```\n\n\n## Running\n\nTo run normally, say in a container, use\n\n```sh\n$ node microservice.js\n```\n\n(where `microservice.js` is a script file that uses Seneca).\nLogs are output in JSON format so you can send them to a logging service.\n\nTo run in test mode, with human-readable, full debug logs, use:\n\n```\n$ node microservice.js --seneca.test\n```\n\n\n## Why we built this?\n\nSo that it doesn't matter,\n\n   * __who__ _provides_ the functionality,\n   * __where__ it _lives_ (on the network),\n   * __what__ it _depends_ on,\n   * it's __easy__ to _define blocks of functionality_ (plugins!).\n\nSo long as _some_ command can handle a given JSON document, you're good.\n\nHere's an example:\n\n```javascript\nvar seneca = require('seneca')()\n\nseneca.add({cmd: 'salestax'}, function (msg, done) {\n  var rate  = 0.23\n  var total = msg.net * (1 + rate)\n  done(null, {total: total})\n})\n\nseneca.act({cmd: 'salestax', net: 100}, function (err, result) {\n  console.log(result.total)\n})\n```\n\nIn this code, whenever seneca sees the pattern `{cmd:'salestax'}`, it executes the\nfunction associated with this pattern, which calculates sales tax. There is nothing\nspecial about the property `cmd` . It is simply the property we want to pattern match.\nYou could look for `foo` for all seneca cares! Yah!\n\nThe `seneca.add` method adds a new pattern, and the function to execute whenever that\npattern occurs.\n\nThe `seneca.act` method accepts an object, and runs the command, if any, that matches.\n\nWhere does the sales tax rate come from? Let's try it again:\n\n```js\nseneca.add({cmd: 'config'}, function (msg, done) {\n  var config = {rate: 0.23}\n  var value = config[msg.prop]\n  done(null, {value: value})\n})\n\nseneca.add({cmd: 'salestax'}, function (msg, done) {\n  seneca.act({cmd: 'config', prop: 'rate'}, function (err, result) {\n    var rate  = parseFloat(result.value)\n    var total = msg.net * (1 + rate)\n    done(null, {total: total})\n  })\n})\n\nseneca.act({cmd: 'salestax', net: 100}, function (err, result) {\n  console.log(result.total)\n})\n```\n\nThe `config` command provides you with your configuration. This is cool because it\ndoesn't matter _where_ it gets the configuration from - hard-coded, file system,\ndatabase, network service, whatever. Did you have to define an abstraction API to make\nthis work? Nope.\n\nThere's a little but too much verbosity here, don't you think? Let's fix that:\n\n\n```javascript\nseneca.act('cmd:salestax,net:100', function (err, result) {\n  console.log(result.total)\n})\n```\n\nInstead of providing an object, you can provide a string using an\n[abbreviated form][Jsonic] of JSON. In fact, you\ncan provide both:\n\n```javascript\nseneca.act('cmd:salestax', {net: 100}, function (err, result) {\n  console.log(result.total)\n})\n```\n\nThis is a _very convenient way of combining a pattern and parameter data_.\n\n### Programmer Anarchy\n\nThe way to build Node.js systems, is to build lots of little\nprocesses. Here's a great talk explaining why you should do this:\n[Programmer Anarchy](http://vimeo.com/43690647).\n\nSeneca makes this really easy. Let's put configuration out on the\nnetwork into its own process:\n\n```javascript\nseneca.add({cmd: 'config'}, function (msg, done) {\n  var config = {rate: 0.23}\n  var value = config[msg.prop]\n  done(null, { value: value })\n})\n\nseneca.listen()\n```\n\nThe `listen` method starts a web server that listens for JSON\nmessages. When these arrive, they are submitted to the local Seneca\ninstance, and executed as actions in the normal way.  The result is\nthen returned to the client as the response to the HTTP\nrequest. Seneca can also listen for actions via a message bus.\n\nYour implementation of the configuration code _stays the same_.\n\nThe client code looks like this:\n\n\n```javascript\nseneca.add({cmd: 'salestax'}, function (msg, done) {\n  seneca.act({cmd: 'config', prop: 'rate' }, function (err, result) {\n    var rate  = parseFloat(result.value)\n    var total = msg.net * (1 + rate)\n    done(null, { total: total })\n  })\n})\n\nseneca.client()\n\nseneca.act('cmd:salestax,net:100', function (err, result) {\n  console.log(result.total)\n})\n```\n\nOn the client-side, calling `seneca.client()` means that Seneca will\nsend any actions it cannot match locally out over the network. In this\ncase, the configuration server will match the `cmd:config` pattern and\nreturn the configuration data.\n\nAgain, notice that your sales tax code _does not change_. It does not\nneed to know where the configuration comes from, who provides it, or\nhow.\n\nYou can do this with every command.\n\n### Keeping the Business Happy\n\nThe thing about business requirements is that they have no respect for\ncommon sense, logic or orderly structure. The real world is messy.\n\nIn our example, let's say some countries have single sales tax rate,\nand others have a variable rate, which depends either on locality, or product category.\n\nHere's the code. We'll rip out the configuration code for this example.\n\n```javascript\n// fixed rate\nseneca.add({cmd: 'salestax'}, function (msg, done) {\n  var rate  = 0.23\n  var total = msg.net * (1 + rate)\n  done(null, { total: total })\n})\n\n\n// local rates\nseneca.add({cmd: 'salestax', country: 'US'}, function (msg, done) {\n  var state = {\n    'NY': 0.04,\n    'CA': 0.0625\n    // ...\n  }\n  var rate = state[msg.state]\n  var total = msg.net * (1 + rate)\n  done(null, {total: total})\n})\n\n\n// categories\nseneca.add({ cmd: 'salestax', country: 'IE' }, function (msg, done) {\n  var category = {\n    'top': 0.23,\n    'reduced': 0.135\n    // ...\n  }\n  var rate = category[msg.category]\n  var total = msg.net * (1 + rate)\n  done(null, { total: total })\n})\n\n\nseneca.act('cmd:salestax,net:100,country:DE', function (err, result) {\n  console.log('DE: ' + result.total)\n})\n\nseneca.act('cmd:salestax,net:100,country:US,state:NY', function (err, result) {\n  console.log('US,NY: ' + result.total)\n})\n\nseneca.act('cmd:salestax,net:100,country:IE,category:reduced', function (err, result) {\n  console.log('IE: ' + result.total)\n})\n\n```\n\nIn this case, you provide different implementations for different patterns. This lets you\nisolate complexity into well-defined places. It also means you can deal with special\ncases very easily.\n\n## Contributing\n\nThe [Senecajs org][Org] encourages participation. If you feel you can help in any way, be\nit with bug reporting, documentation, examples, extra testing, or new features feel free\nto [create an issue][Issue], or better yet, [submit a Pull Request][Pull]. For more\ninformation on contribution please see our [Contributing][Contrib] guide.\n\n\n### Test\nTo run tests locally,\n\n```\nnpm run test\n```\n\nTo obtain a coverage report,\n\n```\nnpm run coverage; open docs/coverage.html\n```\n\n\n\n## License\nCopyright (c) 2010-2018 Richard Rodger and other contributors;\nLicensed under __[MIT][Lic]__.\n\n\n\n[BadgeCoveralls]: https://coveralls.io/repos/senecajs/seneca/badge.svg?branch=master&service=github\n[BadgeDeepScan]: https://deepscan.io/api/teams/5016/projects/6816/branches/59148/badge/grade.svg\n[BadgeCodeClimate]: https://api.codeclimate.com/v1/badges/3a95be9ab6432c620bea/maintainability\n[BadgeNpm]: https://badge.fury.io/js/seneca.svg\n[BadgeGitter]: https://badges.gitter.im/senecajs/seneca.svg\n[BadgeNpmFigs]: https://img.shields.io/npm/dm/seneca.svg?maxAge=2592000\n[BadgeTravis]: https://travis-ci.org/senecajs/seneca.svg?branch=master\n[CoC]: http://senecajs.org/code-of-conduct\n[Contrib]: http://senecajs.org/contribute\n[Coveralls]: https://coveralls.io/github/senecajs/seneca?branch=master\n[DeepScan]: https://deepscan.io/dashboard#view=project&tid=5016&pid=6816&bid=59148\n[CodeClimate]: https://codeclimate.com/github/senecajs/seneca/maintainability\n[Gitter]: https://gitter.im/senecajs/seneca\n[Issue]: https://github.com/senecajs/seneca/issues/new\n[Lead]: https://github.com/rjrodger\n[Lic]: ./LICENSE\n[Logo]: http://senecajs.org/files/assets/seneca-logo.jpg\n[Npm]: https://www.npmjs.com/package/seneca\n[Org]: http://senecajs.org/\n[Pull]: https://github.com/senecajs/seneca/pulls\n[Sponsor]: http://www.voxgig.com\n[Travis]: https://travis-ci.org/senecajs/seneca?branch=master\n[Tweet]: https://twitter.com/senecajs\n\n[Jsonic]: https//github.com/rjrodger/jsonic\n[Lightning]: http://aws.amazon.com/message/67457/\n[Plugins]: https://github.com/search?utf8=%E2%9C%93&q=seneca&type=Repositories&ref=searchresults\n[taomicro]: https://bitly.com/rrtaomicro\n\n\n"
        },
        {
          "name": "coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.5302734375,
          "content": "{\n  \"name\": \"seneca\",\n  \"description\": \"A Microservices Framework for Node.js\",\n  \"version\": \"4.0.0-rc4\",\n  \"license\": \"MIT\",\n  \"homepage\": \"http://senecajs.org\",\n  \"keywords\": [\n    \"micro\",\n    \"service\",\n    \"microservice\",\n    \"micro-service\",\n    \"microservices\",\n    \"micro-services\",\n    \"services\",\n    \"micro services\",\n    \"micro service\",\n    \"framework\",\n    \"minimum\",\n    \"viable\",\n    \"product\",\n    \"toolkit\",\n    \"startup\"\n  ],\n  \"author\": \"Richard Rodger (http://richardrodger.com/)\",\n  \"contributors\": [\n    \"Adrien Becchis (https://github.com/AdrieanKhisbe)\",\n    \"Alexandru Mircea (https://github.com/mirceaalexandru)\",\n    \"Adrian Rossouw (http://daemon.co.za)\",\n    \"Colin Ihrig (https://github.com/cjihrig)\",\n    \"Cristian Ianto (https://github.com/iantocristian)\",\n    \"Cristian Kiss (https://github.com/ckiss)\",\n    \"David Mark Clements (https://github.com/davidmarkclements)\",\n    \"Dean McDonnell (https://github.com/mcdonnelldean)\",\n    \"Dominic Tarr (https://github.com/dominictarr)\",\n    \"Dustin Deus (https://github.com/StarpTech)\",\n    \"Glen Keane (https://github.com/thekemkid)\",\n    \"Gege Pincin (https://github.com/Georgette)\",\n    \"Jake Pruitt (https://github.com/jakepruitt)\",\n    \"Maciej Małecki (http://mmalecki.com)\",\n    \"Matteo Collina (https://github.com/mcollina)\",\n    \"Marian Radulescu (https://github.com/marianr)\",\n    \"Marius Ursache (https://github.com/bamse16)\",\n    \"Martin Betak (https://github.com/matobet)\",\n    \"Maxence Dalmais (https://github.com/maxired)\",\n    \"Mihai Dima (https://github.com/mihaidma)\",\n    \"Naomi Feehan (https://github.com/naomifeehan)\",\n    \"Paolo Chiodi (https://github.com/paolochiodi)\",\n    \"Peter Elger (https://github.com/pelger)\",\n    \"Reto Inderbitzin (https://github.com/indr)\",\n    \"Reid Rankin (https://github.com/reidrankin)\",\n    \"Tane Piper (https://github.com/tanepiper)\",\n    \"Wyatt Preul (https://github.com/geek)\",\n    \"Vald Houbiev (https://github.com/vladgolubev)\",\n    \"Vito Tardia (https://github.com/vtardia)\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/senecajs/seneca.git\"\n  },\n  \"files\": [\n    \"LICENSE\",\n    \"README.md\",\n    \"CHANGES.md\",\n    \"lib\",\n    \"seneca.*\"\n  ],\n  \"engines\": {\n    \"node\": \">=14\"\n  },\n  \"main\": \"seneca.js\",\n  \"scripts\": {\n    \"watch\": \"tsc -w -d\",\n    \"build\": \"tsc -d\",\n    \"test\": \"lab -v -P test -L -t 85 --sourcemaps --transform node_modules/lab-transform-typescript -I AggregateError,atob,btoa,AbortController,AbortSignal,EventTarget,Event,MessageChannel,MessagePort,MessageEvent,performance -r console -o stdout -r html -o test/coverage.html\",\n    \"test-some\": \"lab -v -P test --sourcemaps --transform node_modules/lab-transform-typescript -g\",\n    \"coveralls\": \"lab -s -P test -I AggregateError,atob,btoa,DOMException,AbortController,AbortSignal,EventTarget,Event,MessageChannel,MessagePort,MessageEvent,performance,structuredClone -r lcov > ./coverage/lcov.info\",\n    \"coverage\": \"lab -v -P test -L -t 90 -r html > docs/coverage.html\",\n    \"smoke\": \"node test/stubs/launch.js\",\n    \"prettier\": \"prettier --write *.js lib/*.js test/*.js\",\n    \"clean\": \"rm -rf node_modules package-lock.json yarn.lock\",\n    \"reset\": \"npm run clean && npm i && npm run build && npm test\",\n    \"repo-tag\": \"REPO_VERSION=`node -e \\\"console.log(require('./package').version)\\\"` && echo TAG: v$REPO_VERSION && git commit -a -m v$REPO_VERSION && git push && git tag v$REPO_VERSION && git push --tags;\",\n    \"repo-publish\": \"npm run clean && npm i && npm run repo-publish-quick\",\n    \"repo-publish-quick\": \"npm run prettier && npm run build && npm run test && npm run repo-tag && npm publish --access public --registry https://registry.npmjs.org\"\n  },\n  \"dependencies\": {\n    \"eraro\": \"^3.0.1\",\n    \"fast-safe-stringify\": \"^2.1.1\",\n    \"gate-executor\": \"^3.1.1\",\n    \"gubu\": \"^8.2.1\",\n    \"@jsonic/jsonic-next\": \"2.12.1\",\n    \"lodash.defaultsdeep\": \"^4.6.1\",\n    \"lodash.flatten\": \"^4.4.0\",\n    \"lodash.uniq\": \"^4.5.0\",\n    \"minimist\": \"^1.2.8\",\n    \"nid\": \"^2.0.1\",\n    \"ordu\": \"^2.2.0\",\n    \"patrun\": \"^7.2.5\",\n    \"rolling-stats\": \"^0.2.1\",\n    \"use-plugin\": \"^13.1.0\"\n  },\n  \"devDependencies\": {\n    \"@hapi/code\": \"^9.0.3\",\n    \"@hapi/lab\": \"^25.2.0\",\n    \"@seneca/test-plugin\": \"0.1.0\",\n    \"@types/node\": \"^20.14.10\",\n    \"async\": \"^3.2.5\",\n    \"bench\": \"^0.3.6\",\n    \"coveralls\": \"^3.1.1\",\n    \"gex\": \"^4.0.1\",\n    \"handlebars\": \"^4.7.8\",\n    \"lab-transform-typescript\": \"^3.0.1\",\n    \"lolex\": \"^6.0.0\",\n    \"prettier\": \"^3.3.2\",\n    \"seneca-entity\": \"^27.2.0\",\n    \"seneca-error-test\": \"^0.2.2\",\n    \"seneca-promisify\": \"^3.7.2\",\n    \"summary\": \"^2.1.0\",\n    \"typescript\": \"^5.5.3\"\n  }\n}\n"
        },
        {
          "name": "seneca.d.ts",
          "type": "blob",
          "size": 1.564453125,
          "content": "import Nid from 'nid';\nimport { Patrun, Gex } from 'patrun';\nimport { Gubu } from 'gubu';\ndeclare function init(seneca_options?: any, more_options?: any): any;\ndeclare namespace init {\n    var Seneca: (this: any) => void;\n    var loghandler: any;\n    var use: () => any;\n    var test: () => any;\n    var quiet: () => any;\n    var util: {\n        Eraro: any;\n        Jsonic: any;\n        Nid: typeof Nid;\n        Patrun: typeof Patrun;\n        Gex: typeof Gex;\n        Gubu: Gubu;\n        pins: any;\n        clean: any;\n        pattern: any;\n        print: any;\n        error: any;\n        deep: any;\n        deepextend: any;\n        parsepattern: any;\n        pincanon: any;\n        router: () => any;\n        resolve_option: any;\n        flatten: any;\n    };\n    var valid: Gubu;\n    var test$: {\n        intern: {\n            util: {\n                Eraro: any;\n                Jsonic: any;\n                Nid: typeof Nid;\n                Patrun: typeof Patrun;\n                Gex: typeof Gex;\n                Gubu: Gubu;\n                pins: any;\n                clean: any;\n                pattern: any;\n                print: any;\n                error: any;\n                deep: any;\n                deepextend: any;\n                parsepattern: any;\n                pincanon: any;\n                router: () => any;\n                resolve_option: any;\n                flatten: any;\n            };\n        };\n    };\n}\ntype Instance = ReturnType<typeof make_seneca> & Record<string, any>;\nexport type { Instance };\nexport default init;\ndeclare function make_seneca(initial_opts?: any): any;\n"
        },
        {
          "name": "seneca.js",
          "type": "blob",
          "size": 25.62890625,
          "content": "/* Copyright © 2010-2023 Richard Rodger and other contributors, MIT License. */\n'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Node API modules.\nconst Events = require('events');\nconst Util = require('util');\n// External modules.\nconst GateExecutor = require('gate-executor');\nconst Jsonic = require('@jsonic/jsonic-next');\nconst UsePlugin = require('use-plugin');\nconst nid_1 = __importDefault(require(\"nid\"));\nconst patrun_1 = require(\"patrun\");\nconst Stats = require('rolling-stats');\nconst { Ordu } = require('ordu');\nconst Eraro = require('eraro');\nconst gubu_1 = require(\"gubu\");\n// Internal modules.\nconst Common = require('./lib/common');\nconst { make_logging } = require('./lib/logging');\nconst { API } = require('./lib/api');\nconst { make_ready } = require('./lib/ready');\nconst Act = require('./lib/act');\nconst Add = require('./lib/add');\nconst Sub = require('./lib/sub');\nconst prior_1 = require(\"./lib/prior\");\nconst plugin_1 = require(\"./lib/plugin\");\nconst inward_1 = require(\"./lib/inward\");\nconst outward_1 = require(\"./lib/outward\");\nconst { Legacy } = require('./lib/legacy');\nconst { resolve_options } = require('./lib/options');\nconst { Print } = require('./lib/print');\nconst { addActions } = require('./lib/actions');\nconst { transport } = require('./lib/transport');\nconst package_json_1 = __importDefault(require(\"./package.json\"));\n// Internal data and utilities.\nconst { error, deep } = Common;\nconst { One, Any, Skip, Open } = gubu_1.Gubu;\n// Seneca options.\nconst option_defaults = {\n    // Tag this Seneca instance, will be appended to instance identifier.\n    tag: '-', // TODO: FIX: Gubu api.test.js#292\n    // Standard timeout for actions.\n    timeout: 22222,\n    // Standard length of identifiers for actions.\n    idlen: 12,\n    didlen: 4,\n    // Manually set instance identifier.\n    id$: Skip(String),\n    // Register (true) default plugins. Set false to not register when\n    // using custom versions.\n    default_plugins: Open({}),\n    // Test mode. Use for unit testing.\n    test: false,\n    // Quiet mode. Moves log level to warn. Use for unit testing.\n    quiet: false,\n    // Default logging specification - see lib/logging.js\n    log: Any(make_logging().default_logspec),\n    // Custom logger function, optional - see lib/logging.js\n    logger: One(Function, Object, String, null),\n    // Wait time for plugins to close gracefully.\n    death_delay: 11111,\n    // LEGACY: remove in 4.x\n    deathdelay: 11111,\n    // Wait time for actions to complete before shutdown.\n    close_delay: 22222,\n    // Legacy; specify general error handler\n    errhandler: Skip(One(Function, null)),\n    // Load options from a file path\n    from: Skip(String),\n    // Provide a module to base option require loading from\n    module: Skip(),\n    // Control error handling.\n    error: {\n        // Control capture of errors for logging.\n        capture: {\n        // Capture errors in action callbacks (false throws uncaught).\n        // callback: true,\n        // Capture errors in actions and pass to callback (false throws uncaught).\n        // action: true,\n        },\n        // Custom function to identify thrown errors.\n        identify: (e) => e instanceof Error,\n    },\n    // Validate messages and options.\n    valid: {\n        // If false disables all validation.\n        active: true,\n        // Validate message parameters.\n        message: true,\n        // Validate main Seneca instance options.\n        option: true,\n        // Validate plugin options.\n        plugin: true,\n    },\n    // Debug settings.\n    debug: {\n        // Throw (some) errors from seneca.act.\n        fragile: false,\n        // Fatal errors ... aren't fatal. Not for production!\n        undead: false,\n        // Print debug info to console\n        print: {\n            // Print options. Best used via --seneca.print.options.\n            options: false,\n            // Amount of information to print on fatal error: 'summary', 'full'\n            fatal: 'summary',\n            // Include environment when printing full crash report.\n            // Default: false for security.\n            env: false,\n            // Regardless of logging, call `console.err` on errors\n            err: false,\n            // Depth of object inspection\n            depth: 2,\n        },\n        // Trace action caller and place in args.caller$.\n        act_caller: false,\n        // Shorten all identifiers to 2 characters.\n        short_logs: false,\n        // Record and log callpoints (calling code locations).\n        callpoint: false,\n        // Log deprecation warnings\n        deprecation: true,\n        // Set to array to force artificial argv and ignore process.argv\n        argv: One([], null),\n        // Set to object to force artificial env and ignore process.env\n        env: One({}, null),\n        // Length of data description in logs\n        datalen: 333,\n    },\n    // Enforce strict behaviours. Relax when backwards compatibility needed.\n    strict: {\n        // Action result must be a plain object.\n        result: true,\n        // Delegate fixedargs override action args.\n        fixedargs: true,\n        // Adding a pattern overrides existing pattern only if matches exactly.\n        add: false,\n        // If no action is found and find is false,\n        // then no error returned along with empty object\n        find: true,\n        // Maximum number of times an action can call itself\n        maxloop: 11,\n        // Exports must exist\n        exports: false,\n    },\n    // Keep a transient time-ordered history of actions submitted\n    history: {\n        // History log is active.\n        active: true,\n        // Prune the history. Disable only for debugging.\n        prune: true,\n        // Prune the history only periodically.\n        interval: 100,\n    },\n    // Action executor tracing. See gate-executor module.\n    trace: {\n        act: One(Function, false),\n        stack: false,\n        // Messages that do not match a known pattern\n        unknown: One(String, true),\n        // Messages that have invalid content\n        invalid: false,\n    },\n    // Action statistics settings. See rolling-stats module.\n    stats: {\n        size: 1024,\n        interval: 60000,\n        running: false,\n    },\n    // Plugin settings\n    plugin: {},\n    // Plugins to load (will be passed to .use)\n    plugins: One({}, [], null),\n    // System wide functionality.\n    system: {\n        // Function to exit the process.\n        exit: (...args) => {\n            console.log('EXIT', args);\n            console.trace();\n            // process.exit(...args)\n        },\n        // Close instance on these signals, if true.\n        close_signals: {\n            SIGHUP: false,\n            SIGTERM: false,\n            SIGINT: false,\n            SIGBREAK: false,\n        },\n        plugin: {\n            load_once: false,\n        },\n        // System actions.\n        action: {\n            // Add system actions.\n            add: true\n        },\n    },\n    // Internal functionality. Reserved for objects and functions only.\n    internal: Open({\n        // Console printing utilities\n        print: {\n            // Print to standard out\n            log: One(Function, null),\n            // Print to standard err\n            err: One(Function, null),\n        },\n    }),\n    // Log status at periodic intervals.\n    status: {\n        interval: 60000,\n        // By default, does not run.\n        running: false,\n    },\n    // Shared default transport configuration\n    transport: Open({\n        // Standard port for messages.\n        port: 10101,\n        host: Skip(String),\n        path: Skip(String),\n        protocol: Skip(String),\n    }),\n    limits: {\n        maxparents: 33,\n    },\n    // Setup event listeners before starting\n    events: {},\n    // Backwards compatibility settings.\n    legacy: One(Boolean, {\n        // 3.x\n        // Use old error handling.\n        error: false,\n        // Add meta$ property to messages.\n        meta: false,\n        // 4.x\n        // If true, add role:seneca variants of builtin actions.\n        builtin_actions: false,\n    }),\n    // Processing task ordering.\n    order: {\n        // Action add task ordering.\n        add: {\n            // Print task execution log.\n            debug: false,\n        },\n        // Action inward task ordering.\n        inward: {\n            // Print task execution log.\n            debug: false,\n        },\n        // Action outward task ordering.\n        outward: {\n            // Print task execution log.\n            debug: false,\n        },\n        // Plugin load task ordering.\n        use: {\n            // Print task execution log.\n            debug: false,\n        },\n    },\n    // Prior actions.\n    prior: {\n        // Call prior actions directly (not as further messages).\n        direct: false,\n    },\n    // Legacy\n    reload$: Skip(Boolean),\n    // actcache: Any(),\n    // seneca: Any(),\n};\n// Utility functions exposed by Seneca via `seneca.util`.\nconst seneca_util = {\n    Eraro,\n    Jsonic,\n    Nid: nid_1.default,\n    Patrun: patrun_1.Patrun,\n    Gex: patrun_1.Gex,\n    Gubu: gubu_1.Gubu,\n    pins: Common.pins,\n    clean: Common.clean,\n    pattern: Common.pattern,\n    print: Common.print,\n    error: error,\n    deep: Common.deep,\n    deepextend: Common.deep,\n    parsepattern: Common.parsePattern,\n    pincanon: Common.pincanon,\n    router: function router() {\n        return (0, patrun_1.Patrun)();\n    },\n    resolve_option: Common.resolve_option,\n    // Legacy (deprecate and remove)\n    // argprops: Legacy.argprops,\n    // recurse: Legacy.recurse,\n    // copydata: Legacy.copydata,\n    // nil: Legacy.nil,\n    flatten: Legacy.flatten,\n};\n// Internal implementations.\nconst intern = {\n    util: seneca_util,\n};\n// Seneca is an EventEmitter.\nfunction Seneca() {\n    Events.EventEmitter.call(this);\n    this.setMaxListeners(0);\n}\nUtil.inherits(Seneca, Events.EventEmitter);\n// Mark the Seneca object\nSeneca.prototype.isSeneca = true;\n// Provide useful description when convered to JSON.\n// Cannot be instantiated from JSON.\nSeneca.prototype.toJSON = function toJSON() {\n    return {\n        isSeneca: true,\n        id: this.id,\n        did: this.did,\n        fixedargs: this.fixedargs,\n        fixedmeta: this.fixedmeta,\n        start_time: this.start_time,\n        version: this.version,\n    };\n};\nSeneca.prototype[Util.inspect.custom] = Seneca.prototype.toJSON;\n// Create a Seneca instance.\nfunction init(seneca_options, more_options) {\n    var initial_opts = 'string' === typeof seneca_options\n        ? deep({}, { from: seneca_options }, more_options)\n        : deep({}, seneca_options, more_options);\n    // Legacy options, remove in 4.x\n    initial_opts.deathdelay = initial_opts.death_delay;\n    var seneca = make_seneca(initial_opts);\n    var options = seneca.options();\n    // The 'internal' key of options is reserved for objects and functions\n    // that provide functionality, and are thus not really printable\n    seneca.log.debug({ kind: 'notice', options: { ...options, internal: null } });\n    Print.print_options(seneca, options);\n    // Register plugins specified in options.\n    options.plugins = null == options.plugins ? {} : options.plugins;\n    var pluginkeys = Object.keys(options.plugins);\n    for (var pkI = 0; pkI < pluginkeys.length; pkI++) {\n        var pluginkey = pluginkeys[pkI];\n        var plugindesc = options.plugins[pluginkey];\n        if (false === plugindesc) {\n            seneca.private$.ignore_plugins[pluginkey] = true;\n        }\n        else {\n            seneca.use(plugindesc);\n        }\n    }\n    seneca.ready(function () {\n        this.log.info({ kind: 'notice', data: 'hello ' + this.id });\n    });\n    return seneca;\n}\n// Expose Seneca prototype for easier monkey-patching\ninit.Seneca = Seneca;\n// To reference builtin loggers when defining logging options.\ninit.loghandler = Legacy.loghandler;\n// Makes require('seneca').use(...) work by creating an on-the-fly instance.\ninit.use = function top_use() {\n    var argsarr = new Array(arguments.length);\n    for (var l = 0; l < argsarr.length; ++l) {\n        argsarr[l] = arguments[l];\n    }\n    var instance = init();\n    return instance.use.apply(instance, argsarr);\n};\n// Makes require('seneca').test() work.\ninit.test = function top_test() {\n    return init().test(...arguments);\n};\n// Makes require('seneca').quiet() work.\ninit.quiet = function top_quiet() {\n    return init().quiet(...arguments);\n};\ninit.util = seneca_util;\ninit.valid = gubu_1.Gubu;\ninit.test$ = { intern: intern };\nexports.default = init;\nmodule.exports = init;\n// Create a new Seneca instance.\nfunction make_seneca(initial_opts) {\n    // Create a private context.\n    var private$ = make_private();\n    private$.error = error;\n    // Create a new root Seneca instance.\n    var root$ = new Seneca();\n    // Expose private data to plugins.\n    root$.private$ = private$;\n    // Resolve initial options.\n    private$.optioner = resolve_options(module, option_defaults, initial_opts);\n    var start_opts = private$.optioner.get();\n    // Console print utilities\n    private$.print = {\n        log: start_opts.internal.print.log || Print.internal_log,\n        err: start_opts.internal.print.err || Print.internal_err,\n    };\n    // These need to come from options as required during construction.\n    private$.actrouter = start_opts.internal.actrouter || (0, patrun_1.Patrun)({ gex: true });\n    private$.translationrouter =\n        start_opts.internal.translationrouter || (0, patrun_1.Patrun)({ gex: true });\n    const soi_subrouter = start_opts.internal.subrouter || {};\n    private$.subrouter = {\n        // Check for legacy inward router\n        inward: soi_subrouter.inward || (0, patrun_1.Patrun)({ gex: true }),\n        outward: soi_subrouter.outward || (0, patrun_1.Patrun)({ gex: true }),\n    };\n    // Setup event handlers, if defined\n    var event_names = ['log', 'act_in', 'act_out', 'act_err', 'ready', 'close'];\n    event_names.forEach(function (event_name) {\n        if ('function' === typeof start_opts.events[event_name]) {\n            root$.on(event_name, start_opts.events[event_name]);\n        }\n    });\n    // Create internal tools.\n    private$.actnid = (0, nid_1.default)({ length: start_opts.idlen });\n    private$.didnid = (0, nid_1.default)({ length: start_opts.didlen });\n    // Instance specific incrementing counters to create unique function names\n    private$.next_action_id = Common.autoincr();\n    var callpoint = (private$.callpoint = Common.make_callpoint(start_opts.debug.callpoint));\n    // Define public member variables.\n    root$.start_time = Date.now();\n    root$.context = {};\n    root$.version = package_json_1.default.version;\n    // TODO: rename in 4.x as \"args\" terminology is legacy\n    root$.fixedargs = {};\n    root$.fixedmeta = {};\n    root$.fixedmeta = {};\n    root$.flags = {\n        closed: false,\n    };\n    Object.defineProperty(root$, 'root', { value: root$ });\n    private$.history = Common.history(start_opts.history);\n    const ready = make_ready(root$);\n    // API for Ordu-defined processes.\n    root$.order = {};\n    // TODO: rename back to plugins\n    const api_use = plugin_1.Plugin.api_use(callpoint, {\n        debug: !!start_opts.debug.ordu || !!start_opts.order.use.debug,\n    });\n    root$.use = api_use.use; // Define and load a plugin.\n    root$.order.plugin = api_use.ordu;\n    // Seneca methods. Official API.\n    root$.toString = API.toString;\n    root$.has = API.has; // True if the given pattern has an action.\n    root$.find = API.find; // Find the action definition for a pattern.\n    root$.list = API.list; // List the patterns added to this instance.\n    root$.status = API.status; // Get the status if this instance.\n    root$.reply = API.reply; // Reply to a submitted message.\n    root$.sub = Sub.api_sub; // Subscribe to messages.\n    root$.list_plugins = API.list_plugins; // List the registered plugins.\n    root$.find_plugin = API.find_plugin; // Find the plugin definition.\n    root$.has_plugin = API.has_plugin; // True if the plugin is registered.\n    root$.ignore_plugin = API.ignore_plugin; // Ignore plugin and don't register it.\n    root$.listen = API.listen(callpoint); // Listen for inbound messages.\n    root$.client = API.client(callpoint); // Send outbound messages.\n    root$.gate = API.gate; // Create a delegate that executes actions in sequence.\n    root$.ungate = API.ungate; // Execute actions in parallel.\n    root$.translate = API.translate; // Translate message to new pattern.\n    root$.ping = API.ping; // Generate ping response.\n    root$.test = API.test; // Set test mode.\n    root$.quiet = API.quiet; // Convenience method to set logging level to `warn+`.\n    root$.export = API.export; // Export plain objects from a plugin.\n    root$.depends = API.depends; // Check for plugin dependencies.\n    root$.delegate = API.delegate; // Create an action-specific Seneca instance.\n    root$.prior = prior_1.Prior.api_prior; // Call the previous action definition for pattern.\n    root$.inward = API.inward; // Add a modifier function for messages inward\n    root$.outward = API.outward; // Add a modifier function for responses outward\n    root$.error = API.error; // Set global error handler, or generate Seneca Error\n    root$.fail = API.fail; // Throw a Seneca error\n    root$.explain = API.explain; // Toggle top level explain capture\n    root$.decorate = API.decorate; // Decorate seneca object with functions\n    root$.seneca = API.seneca;\n    root$.close = API.close(callpoint); // Close and shutdown plugins.\n    root$.options = API.options; // Get and set options.\n    root$.fix = API.fix; // fix pattern arguments, message arguments, and custom meta\n    root$.wrap = API.wrap; // wrap each found pattern with a new action\n    root$.add = Add.api_add; // Add a pattern and associated action.\n    root$.message = Add.api_message; // Add a pattern and associated action async function.\n    root$.act = Act.api_act; // Submit a message and trigger the associated action.\n    root$.post = Util.promisify(root$.act); // Async version of act.\n    root$.direct = Act.api_direct; // Run message action synchronously.\n    root$.ready = ready.api_ready; // Callback when plugins initialized.\n    root$.valid = gubu_1.Gubu; // Expose Gubu shape builders\n    root$.prepare = API.prepare; // Plugin preparation action.\n    root$.destroy = API.destroy; // Close Seneca instance.\n    root$.internal = function () {\n        return {\n            ordu: {\n                use: api_use.ordu,\n            },\n        };\n    };\n    // Non-API methods.\n    // root$.register = Plugins.register(callpoint)\n    // DEPRECATE IN 4.x\n    root$.findact = root$.find;\n    root$.plugins = API.list_plugins;\n    root$.findplugin = API.find_plugin;\n    root$.hasplugin = API.has_plugin;\n    root$.hasact = Legacy.hasact;\n    root$.act_if = Legacy.act_if;\n    root$.findpins = Legacy.findpins;\n    root$.pinact = Legacy.findpins;\n    root$.next_act = Legacy.next_act;\n    // Identifier generator.\n    root$.idgen = (0, nid_1.default)({ length: start_opts.idlen });\n    // Instance tag\n    start_opts.tag = null != start_opts.tag ? start_opts.tag : option_defaults.tag;\n    // Create a unique identifer for this instance.\n    root$.id =\n        start_opts.id$ ||\n            root$.idgen() +\n                '/' +\n                root$.start_time +\n                '/' +\n                process.pid +\n                '/' +\n                root$.version +\n                '/' +\n                start_opts.tag;\n    // The instance tag, useful for grouping instances.\n    root$.tag = start_opts.tag;\n    if (start_opts.debug.short_logs || start_opts.log.short) {\n        start_opts.idlen = 2;\n        root$.idgen = (0, nid_1.default)({ length: start_opts.idlen });\n        root$.id = root$.idgen() + '/' + start_opts.tag;\n    }\n    root$.fullname = 'Seneca/' + root$.id;\n    root$.die = Common.makedie(root$, {\n        type: 'sys',\n        plugin: 'seneca',\n        tag: root$.version,\n        id: root$.id,\n        callpoint: callpoint,\n    });\n    root$.util = seneca_util;\n    private$.exports = { options: start_opts };\n    private$.decorations = {};\n    // Error events are fatal, unless you're undead.  These are not the\n    // same as action errors, these are unexpected internal issues.\n    root$.on('error', root$.die);\n    private$.ge = GateExecutor({\n        timeout: start_opts.timeout,\n    })\n        //.clear(action_queue_clear)\n        .clear(ready.clear_ready)\n        .start();\n    // TODO: this should be a plugin\n    // setup status log\n    if (start_opts.status.interval > 0 && start_opts.status.running) {\n        private$.stats = private$.stats || {};\n        private$.status_interval = setInterval(function status() {\n            root$.log.info({\n                kind: 'status',\n                alive: Date.now() - private$.stats.start,\n                act: private$.stats.act,\n            });\n        }, start_opts.status.interval);\n    }\n    if (start_opts.stats) {\n        private$.timestats = new Stats.NamedStats(start_opts.stats.size, start_opts.stats.interval);\n        if (start_opts.stats.running) {\n            setInterval(function stats() {\n                private$.timestats.calculate();\n            }, start_opts.stats.interval);\n        }\n    }\n    // private$.plugins = {}\n    private$.plugin_order = { byname: [], byref: [] };\n    private$.use = UsePlugin({\n        prefix: ['seneca-', '@seneca/'],\n        module: start_opts.internal.module || module,\n        msgprefix: false,\n        builtin: '',\n        merge_defaults: false,\n    });\n    // TODO: provide an api to add these\n    private$.action_modifiers = [\n        function add_rules_from_validate_annotation(actdef) {\n            actdef.rules = Object.assign(actdef.rules, deep({}, actdef.func.validate || {}));\n        },\n    ];\n    private$.sub = { handler: null, tracers: [] };\n    root$.order.add = new Ordu({\n        name: 'add',\n        debug: !!start_opts.debug.ordu || !!start_opts.order.add.debug,\n    })\n        .add(Add.task.translate)\n        .add(Add.task.prepare)\n        .add(Add.task.plugin)\n        .add(Add.task.callpoint)\n        .add(Add.task.flags)\n        .add(Add.task.action)\n        .add(Add.task.prior)\n        .add(Add.task.rules)\n        .add(Add.task.register)\n        .add(Add.task.modify);\n    root$.order.inward = new Ordu({\n        name: 'inward',\n        debug: !!start_opts.debug.ordu || !!start_opts.order.inward.debug,\n    })\n        .add(inward_1.Inward.inward_msg_modify)\n        .add(inward_1.Inward.inward_closed)\n        .add(inward_1.Inward.inward_act_cache)\n        .add(inward_1.Inward.inward_act_default)\n        .add(inward_1.Inward.inward_act_not_found)\n        .add(inward_1.Inward.inward_act_stats)\n        .add(inward_1.Inward.inward_validate_msg)\n        .add(inward_1.Inward.inward_warnings)\n        .add(inward_1.Inward.inward_msg_meta)\n        .add(inward_1.Inward.inward_limit_msg)\n        .add(inward_1.Inward.inward_prepare_delegate)\n        .add(inward_1.Inward.inward_sub)\n        .add(inward_1.Inward.inward_announce);\n    root$.order.outward = new Ordu({\n        name: 'outward',\n        debug: !!start_opts.debug.ordu || !!start_opts.order.outward.debug,\n    })\n        .add(outward_1.Outward.outward_make_error)\n        .add(outward_1.Outward.outward_act_stats)\n        .add(outward_1.Outward.outward_act_cache)\n        .add(outward_1.Outward.outward_res_object)\n        .add(outward_1.Outward.outward_res_entity)\n        .add(outward_1.Outward.outward_msg_meta)\n        .add(outward_1.Outward.outward_trace)\n        .add(outward_1.Outward.outward_sub)\n        .add(outward_1.Outward.outward_announce)\n        .add(outward_1.Outward.outward_act_error);\n    // Configure logging\n    // Mark logger as being externally defined from options\n    if (start_opts.logger && 'object' === typeof start_opts.logger) {\n        start_opts.logger.from_options$ = true;\n    }\n    // Load logger and update log options\n    var logspec = private$.logging.build_log(root$);\n    start_opts = private$.exports.options = private$.optioner.set({\n        log: logspec,\n    });\n    if (start_opts.test) {\n        root$.test('string' === typeof start_opts.test ? start_opts.test : null);\n    }\n    if (start_opts.quiet) {\n        root$.quiet();\n    }\n    private$.exit_close = function () {\n        root$.close(function root_exit_close(err) {\n            if (err && true != private$.optioner.get().quiet) {\n                private$.print.err(err);\n            }\n            start_opts.system.exit(err ? (err.exit === null ? 1 : err.exit) : 0);\n        });\n    };\n    if (start_opts.system.action.add) {\n        addActions(root$);\n    }\n    start_opts.legacy.error = false;\n    // TODO: move to static options in Seneca 4.x\n    start_opts.transport = deep({\n        port: 62345,\n        host: '127.0.0.1',\n        path: '/act',\n        protocol: 'http',\n    }, start_opts.transport);\n    transport(root$);\n    Print(root$, start_opts.debug.argv || process.argv);\n    Common.each(start_opts.system.close_signals, function (active, signal) {\n        if (active) {\n            process.once(signal, private$.exit_close);\n        }\n    });\n    // Emit start message (also ensures GateExecutor will trigger 'ready' event)\n    root$.act('sys:seneca,on:point,point:start');\n    return root$;\n}\n// Private member variables of Seneca object.\nfunction make_private() {\n    return {\n        logging: make_logging(),\n        stats: {\n            start: Date.now(),\n            act: {\n                calls: 0,\n                done: 0,\n                fails: 0,\n                cache: 0,\n            },\n            actmap: {},\n        },\n        actdef: {},\n        transport: {\n            register: [],\n        },\n        plugins: {\n            // Virtual \"plugin\" for top level actions.\n            root$: {\n                name: 'root$',\n                fullname: 'root$',\n                tag: '-',\n                options: Object.create(null),\n                shared: Object.create(null),\n            }\n        },\n        ignore_plugins: {},\n        cleared: 0,\n    };\n}\n//# sourceMappingURL=seneca.js.map"
        },
        {
          "name": "seneca.js.map",
          "type": "blob",
          "size": 21.16796875,
          "content": "{\"version\":3,\"file\":\"seneca.js\",\"sourceRoot\":\"\",\"sources\":[\"seneca.ts\"],\"names\":[],\"mappings\":\"AAAA,+EAA+E;AAC/E,YAAY,CAAA;;;;;AAIZ,oBAAoB;AACpB,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAChC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAG5B,oBAAoB;AACpB,MAAM,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;AAC7C,MAAM,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAA;AAC7C,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;AACvC,8CAAqB;AACrB,mCAAoC;AACpC,MAAM,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;AACtC,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAChC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;AAC9B,+BAA2B;AAG3B,oBAAoB;AACpB,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;AACtC,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;AACjD,MAAM,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AACpC,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AAC7C,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AAChC,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AAChC,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AAChC,uCAAmC;AACnC,yCAAqC;AACrC,yCAAqC;AACrC,2CAAuC;AACvC,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;AAC1C,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;AACpD,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AACxC,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;AAC/C,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AAChD,kEAAgC;AAGhC,+BAA+B;AAC/B,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,CAAA;AAG9B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,WAAI,CAAA;AAErC,kBAAkB;AAClB,MAAM,eAAe,GAAG;IACtB,qEAAqE;IACrE,GAAG,EAAE,GAAG,EAAE,kCAAkC;IAE5C,gCAAgC;IAChC,OAAO,EAAE,KAAK;IAEd,8CAA8C;IAC9C,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,CAAC;IAET,oCAAoC;IACpC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC;IAEjB,kEAAkE;IAClE,yBAAyB;IACzB,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC;IAEzB,mCAAmC;IACnC,IAAI,EAAE,KAAK;IAEX,6DAA6D;IAC7D,KAAK,EAAE,KAAK;IAEZ,qDAAqD;IACrD,GAAG,EAAE,GAAG,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC;IAExC,wDAAwD;IACxD,MAAM,EAAE,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC;IAE3C,6CAA6C;IAC7C,WAAW,EAAE,KAAK;IAElB,wBAAwB;IACxB,UAAU,EAAE,KAAK;IAEjB,qDAAqD;IACrD,WAAW,EAAE,KAAK;IAElB,wCAAwC;IACxC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAErC,gCAAgC;IAChC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;IAElB,uDAAuD;IACvD,MAAM,EAAE,IAAI,EAAE;IAEd,0BAA0B;IAC1B,KAAK,EAAE;QAEL,yCAAyC;QACzC,OAAO,EAAE;QAEP,8DAA8D;QAC9D,kBAAkB;QAElB,0EAA0E;QAC1E,gBAAgB;SACjB;QAED,6CAA6C;QAC7C,QAAQ,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,YAAY,KAAK;KACzC;IAED,iCAAiC;IACjC,KAAK,EAAE;QAEL,oCAAoC;QACpC,MAAM,EAAE,IAAI;QAEZ,+BAA+B;QAC/B,OAAO,EAAE,IAAI;QAEb,yCAAyC;QACzC,MAAM,EAAE,IAAI;QAEZ,2BAA2B;QAC3B,MAAM,EAAE,IAAI;KACb;IAED,kBAAkB;IAClB,KAAK,EAAE;QACL,uCAAuC;QACvC,OAAO,EAAE,KAAK;QAEd,qDAAqD;QACrD,MAAM,EAAE,KAAK;QAEb,8BAA8B;QAC9B,KAAK,EAAE;YACL,uDAAuD;YACvD,OAAO,EAAE,KAAK;YAEd,mEAAmE;YACnE,KAAK,EAAE,SAAS;YAEhB,uDAAuD;YACvD,+BAA+B;YAC/B,GAAG,EAAE,KAAK;YAEV,sDAAsD;YACtD,GAAG,EAAE,KAAK;YAEV,6BAA6B;YAC7B,KAAK,EAAE,CAAC;SACT;QAED,iDAAiD;QACjD,UAAU,EAAE,KAAK;QAEjB,2CAA2C;QAC3C,UAAU,EAAE,KAAK;QAEjB,sDAAsD;QACtD,SAAS,EAAE,KAAK;QAEhB,2BAA2B;QAC3B,WAAW,EAAE,IAAI;QAEjB,gEAAgE;QAChE,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC;QAEnB,+DAA+D;QAC/D,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC;QAElB,qCAAqC;QACrC,OAAO,EAAE,GAAG;KACb;IAED,wEAAwE;IACxE,MAAM,EAAE;QACN,wCAAwC;QACxC,MAAM,EAAE,IAAI;QAEZ,2CAA2C;QAC3C,SAAS,EAAE,IAAI;QAEf,uEAAuE;QACvE,GAAG,EAAE,KAAK;QAEV,2CAA2C;QAC3C,iDAAiD;QACjD,IAAI,EAAE,IAAI;QAEV,oDAAoD;QACpD,OAAO,EAAE,EAAE;QAEX,qBAAqB;QACrB,OAAO,EAAE,KAAK;KACf;IAED,6DAA6D;IAC7D,OAAO,EAAE;QACP,yBAAyB;QACzB,MAAM,EAAE,IAAI;QAEZ,iDAAiD;QACjD,KAAK,EAAE,IAAI;QAEX,uCAAuC;QACvC,QAAQ,EAAE,GAAG;KACd;IAED,qDAAqD;IACrD,KAAK,EAAE;QACL,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC;QAEzB,KAAK,EAAE,KAAK;QAEZ,6CAA6C;QAC7C,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;QAE1B,qCAAqC;QACrC,OAAO,EAAE,KAAK;KACf;IAED,wDAAwD;IACxD,KAAK,EAAE;QACL,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,KAAK;QACf,OAAO,EAAE,KAAK;KACf;IAED,kBAAkB;IAClB,MAAM,EAAE,EAAE;IAEV,2CAA2C;IAC3C,OAAO,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;IAE1B,6BAA6B;IAC7B,MAAM,EAAE;QAEN,gCAAgC;QAChC,IAAI,EAAE,CAAC,GAAG,IAAW,EAAE,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;YACzB,OAAO,CAAC,KAAK,EAAE,CAAA;YACf,wBAAwB;QAC1B,CAAC;QAED,4CAA4C;QAC5C,aAAa,EAAE;YACb,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,KAAK;SAChB;QAED,MAAM,EAAE;YACN,SAAS,EAAE,KAAK;SACjB;QAED,kBAAkB;QAClB,MAAM,EAAE;YAEN,sBAAsB;YACtB,GAAG,EAAE,IAAI;SACV;KACF;IAED,mEAAmE;IACnE,QAAQ,EAAE,IAAI,CAAC;QACb,6BAA6B;QAC7B,KAAK,EAAE;YACL,wBAAwB;YACxB,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;YAExB,wBAAwB;YACxB,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;SACzB;KACF,CAAC;IAEF,oCAAoC;IACpC,MAAM,EAAE;QACN,QAAQ,EAAE,KAAK;QAEf,4BAA4B;QAC5B,OAAO,EAAE,KAAK;KACf;IAED,yCAAyC;IACzC,SAAS,EAAE,IAAI,CAAC;QACd,8BAA8B;QAC9B,IAAI,EAAE,KAAK;QAEX,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;QAClB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;QAClB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC;KACvB,CAAC;IAEF,MAAM,EAAE;QACN,UAAU,EAAE,EAAE;KACf;IAED,wCAAwC;IACxC,MAAM,EAAE,EAAE;IAEV,oCAAoC;IACpC,MAAM,EAAE,GAAG,CAAC,OAAO,EAAE;QACnB,MAAM;QAEN,0BAA0B;QAC1B,KAAK,EAAE,KAAK;QAEZ,kCAAkC;QAClC,IAAI,EAAE,KAAK;QAEX,MAAM;QAEN,wDAAwD;QACxD,eAAe,EAAE,KAAK;KACvB,CAAC;IAEF,4BAA4B;IAC5B,KAAK,EAAE;QACL,4BAA4B;QAC5B,GAAG,EAAE;YACH,4BAA4B;YAC5B,KAAK,EAAE,KAAK;SACb;QAED,+BAA+B;QAC/B,MAAM,EAAE;YACN,4BAA4B;YAC5B,KAAK,EAAE,KAAK;SACb;QAED,gCAAgC;QAChC,OAAO,EAAE;YACP,4BAA4B;YAC5B,KAAK,EAAE,KAAK;SACb;QAED,6BAA6B;QAC7B,GAAG,EAAE;YACH,4BAA4B;YAC5B,KAAK,EAAE,KAAK;SACb;KACF;IAED,iBAAiB;IACjB,KAAK,EAAE;QACL,yDAAyD;QACzD,MAAM,EAAE,KAAK;KACd;IAED,SAAS;IACT,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;IACtB,mBAAmB;IACnB,iBAAiB;CAClB,CAAA;AAGD,yDAAyD;AACzD,MAAM,WAAW,GAAG;IAClB,KAAK;IAEL,MAAM;IACN,GAAG,EAAH,aAAG;IACH,MAAM,EAAN,eAAM;IACN,GAAG,EAAH,YAAG;IACH,IAAI,EAAJ,WAAI;IAEJ,IAAI,EAAE,MAAM,CAAC,IAAI;IACjB,KAAK,EAAE,MAAM,CAAC,KAAK;IACnB,OAAO,EAAE,MAAM,CAAC,OAAO;IACvB,KAAK,EAAE,MAAM,CAAC,KAAK;IACnB,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,MAAM,CAAC,IAAI;IAEjB,UAAU,EAAE,MAAM,CAAC,IAAI;IACvB,YAAY,EAAE,MAAM,CAAC,YAAY;IACjC,QAAQ,EAAE,MAAM,CAAC,QAAQ;IACzB,MAAM,EAAE,SAAS,MAAM;QACrB,OAAO,IAAA,eAAM,GAAE,CAAA;IACjB,CAAC;IACD,cAAc,EAAE,MAAM,CAAC,cAAc;IAErC,gCAAgC;IAChC,6BAA6B;IAC7B,2BAA2B;IAC3B,6BAA6B;IAC7B,mBAAmB;IACnB,OAAO,EAAE,MAAM,CAAC,OAAO;CACxB,CAAA;AAED,4BAA4B;AAC5B,MAAM,MAAM,GAAG;IACb,IAAI,EAAE,WAAW;CAClB,CAAA;AAED,6BAA6B;AAC7B,SAAS,MAAM;IACb,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC9B,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;AACzB,CAAC;AACD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC,CAAA;AAE1C,yBAAyB;AACzB,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAA;AAEhC,oDAAoD;AACpD,oCAAoC;AACpC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM;IACvC,OAAO;QACL,QAAQ,EAAE,IAAI;QACd,EAAE,EAAE,IAAI,CAAC,EAAE;QACX,GAAG,EAAE,IAAI,CAAC,GAAG;QACb,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,UAAU,EAAE,IAAI,CAAC,UAAU;QAC3B,OAAO,EAAE,IAAI,CAAC,OAAO;KACtB,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAA;AAE/D,4BAA4B;AAC5B,SAAS,IAAI,CAAC,cAAoB,EAAE,YAAkB;IACpD,IAAI,YAAY,GACd,QAAQ,KAAK,OAAO,cAAc;QAChC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,YAAY,CAAC;QAClD,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,EAAE,YAAY,CAAC,CAAA;IAE5C,gCAAgC;IAChC,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,WAAW,CAAA;IAElD,IAAI,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC,CAAA;IACtC,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAA;IAE9B,sEAAsE;IACtE,gEAAgE;IAChE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;IAE7E,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;IAEpC,yCAAyC;IACzC,OAAO,CAAC,OAAO,GAAG,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAA;IAChE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;IAC7C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;QACjD,IAAI,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAA;QAC/B,IAAI,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;QAE3C,IAAI,KAAK,KAAK,UAAU,EAAE,CAAC;YACzB,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,IAAI,CAAA;QAClD,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;QACxB,CAAC;IACH,CAAC;IAED,MAAM,CAAC,KAAK,CAAC;QACX,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,CAAA;IAC7D,CAAC,CAAC,CAAA;IAEF,OAAO,MAAM,CAAA;AACf,CAAC;AAGD,qDAAqD;AACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;AAEpB,8DAA8D;AAC9D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;AAEnC,4EAA4E;AAC5E,IAAI,CAAC,GAAG,GAAG,SAAS,OAAO;IACzB,IAAI,OAAO,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;QACxC,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;IAC3B,CAAC;IAED,IAAI,QAAQ,GAAG,IAAI,EAAE,CAAA;IAErB,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;AAC9C,CAAC,CAAA;AAED,uCAAuC;AACvC,IAAI,CAAC,IAAI,GAAG,SAAS,QAAQ;IAC3B,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAA;AAClC,CAAC,CAAA;AAED,wCAAwC;AACxC,IAAI,CAAC,KAAK,GAAG,SAAS,SAAS;IAC7B,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAA;AACnC,CAAC,CAAA;AAED,IAAI,CAAC,IAAI,GAAG,WAAW,CAAA;AACvB,IAAI,CAAC,KAAK,GAAG,WAAI,CAAA;AAEjB,IAAI,CAAC,KAAK,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAA;AAQ/B,kBAAe,IAAI,CAAA;AAEnB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAA;AAGrB,gCAAgC;AAChC,SAAS,WAAW,CAAC,YAAkB;IACrC,4BAA4B;IAC5B,IAAI,QAAQ,GAAQ,YAAY,EAAE,CAAA;IAClC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAA;IAEtB,qCAAqC;IACrC,IAAI,KAAK,GAAQ,IAAK,MAAc,EAAE,CAAA;IAEtC,kCAAkC;IAClC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAA;IAEzB,2BAA2B;IAC3B,QAAQ,CAAC,QAAQ,GAAG,eAAe,CAAC,MAAM,EAAE,eAAe,EAAE,YAAY,CAAC,CAAA;IAC1E,IAAI,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAA;IAExC,0BAA0B;IAC1B,QAAQ,CAAC,KAAK,GAAG;QACf,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,YAAY;QACxD,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,YAAY;KACzD,CAAA;IAED,mEAAmE;IACnE,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAA,eAAM,EAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAA;IAE3E,QAAQ,CAAC,iBAAiB;QACxB,UAAU,CAAC,QAAQ,CAAC,iBAAiB,IAAI,IAAA,eAAM,EAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAA;IAEhE,MAAM,aAAa,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAA;IAEzD,QAAQ,CAAC,SAAS,GAAG;QACnB,iCAAiC;QACjC,MAAM,EAAE,aAAa,CAAC,MAAM,IAAI,IAAA,eAAM,EAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QACrD,OAAO,EAAE,aAAa,CAAC,OAAO,IAAI,IAAA,eAAM,EAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;KACxD,CAAA;IAGD,mCAAmC;IACnC,IAAI,WAAW,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;IAC3E,WAAW,CAAC,OAAO,CAAC,UAAS,UAAU;QACrC,IAAI,UAAU,KAAK,OAAO,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;YACxD,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAA;QACrD,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,yBAAyB;IACzB,QAAQ,CAAC,MAAM,GAAG,IAAA,aAAG,EAAC,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,CAAA;IACnD,QAAQ,CAAC,MAAM,GAAG,IAAA,aAAG,EAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAA;IAEpD,0EAA0E;IAC1E,QAAQ,CAAC,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAA;IAE3C,IAAI,SAAS,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,cAAc,CACzD,UAAU,CAAC,KAAK,CAAC,SAAS,CAC3B,CAAC,CAAA;IAEF,kCAAkC;IAClC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;IAC7B,KAAK,CAAC,OAAO,GAAG,EAAE,CAAA;IAClB,KAAK,CAAC,OAAO,GAAG,sBAAG,CAAC,OAAO,CAAA;IAE3B,sDAAsD;IACtD,KAAK,CAAC,SAAS,GAAG,EAAE,CAAA;IACpB,KAAK,CAAC,SAAS,GAAG,EAAE,CAAA;IAEpB,KAAK,CAAC,SAAS,GAAG,EAAE,CAAA;IAEpB,KAAK,CAAC,KAAK,GAAG;QACZ,MAAM,EAAE,KAAK;KACd,CAAA;IAED,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAA;IAEtD,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;IAErD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAA;IAE/B,kCAAkC;IAClC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAA;IAEhB,+BAA+B;IAC/B,MAAM,OAAO,GAAG,eAAM,CAAC,OAAO,CAAC,SAAS,EAAE;QACxC,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;KAC/D,CAAC,CAAA;IACF,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAA,CAAC,4BAA4B;IAEpD,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAA;IAEjC,gCAAgC;IAChC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA;IAC7B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAA,CAAC,2CAA2C;IAC/D,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA,CAAC,4CAA4C;IAClE,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA,CAAC,4CAA4C;IAClE,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA,CAAC,mCAAmC;IAC7D,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA,CAAC,gCAAgC;IACxD,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,yBAAyB;IACjD,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAA,CAAC,+BAA+B;IACrE,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAA,CAAC,8BAA8B;IAClE,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAA,CAAC,oCAAoC;IACtE,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAA,CAAC,uCAAuC;IAC/E,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA,CAAC,+BAA+B;IACpE,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA,CAAC,0BAA0B;IAC/D,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA,CAAC,uDAAuD;IAC7E,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA,CAAC,+BAA+B;IACzD,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAA,CAAC,oCAAoC;IACpE,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA,CAAC,0BAA0B;IAChD,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA,CAAC,iBAAiB;IACvC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA,CAAC,sDAAsD;IAC9E,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA,CAAC,sCAAsC;IAChE,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,iCAAiC;IAC7D,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA,CAAC,6CAA6C;IAC3E,KAAK,CAAC,KAAK,GAAG,aAAK,CAAC,SAAS,CAAA,CAAC,mDAAmD;IACjF,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA,CAAC,8CAA8C;IACxE,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,gDAAgD;IAC5E,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAA,CAAC,qDAAqD;IAC7E,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA,CAAC,uBAAuB;IAC7C,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,mCAAmC;IAC/D,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA,CAAC,wCAAwC;IACtE,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA;IACzB,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA,CAAC,8BAA8B;IACjE,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,uBAAuB;IACnD,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAA,CAAC,4DAA4D;IAChF,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA,CAAC,4CAA4C;IAClE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,uCAAuC;IAC/D,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,WAAW,CAAA,CAAC,sDAAsD;IACtF,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,sDAAsD;IAC9E,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,CAAC,wBAAwB;IAC/D,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,UAAU,CAAA,CAAC,oCAAoC;IAClE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAA,CAAC,qCAAqC;IACnE,KAAK,CAAC,KAAK,GAAG,WAAI,CAAA,CAAC,6BAA6B;IAChD,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,6BAA6B;IACzD,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA,CAAC,yBAAyB;IAGrD,KAAK,CAAC,QAAQ,GAAG;QACf,OAAO;YACL,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO,CAAC,IAAI;aAClB;SACF,CAAA;IACH,CAAC,CAAA;IAED,mBAAmB;IACnB,+CAA+C;IAE/C,mBAAmB;IACnB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAA;IAC1B,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,YAAY,CAAA;IAChC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,WAAW,CAAA;IAClC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,UAAU,CAAA;IAChC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;IAC5B,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;IAC5B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAA;IAChC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAA;IAC9B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAA;IAEhC,wBAAwB;IACxB,KAAK,CAAC,KAAK,GAAG,IAAA,aAAG,EAAC,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,CAAA;IAE/C,eAAe;IACf,UAAU,CAAC,GAAG,GAAG,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,CAAA;IAE9E,+CAA+C;IAC/C,KAAK,CAAC,EAAE;QACN,UAAU,CAAC,GAAG;YACd,KAAK,CAAC,KAAK,EAAE;gBACb,GAAG;gBACH,KAAK,CAAC,UAAU;gBAChB,GAAG;gBACH,OAAO,CAAC,GAAG;gBACX,GAAG;gBACH,KAAK,CAAC,OAAO;gBACb,GAAG;gBACH,UAAU,CAAC,GAAG,CAAA;IAEhB,mDAAmD;IACnD,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,CAAA;IAE1B,IAAI,UAAU,CAAC,KAAK,CAAC,UAAU,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACxD,UAAU,CAAC,KAAK,GAAG,CAAC,CAAA;QACpB,KAAK,CAAC,KAAK,GAAG,IAAA,aAAG,EAAC,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,CAAA;QAC/C,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,UAAU,CAAC,GAAG,CAAA;IACjD,CAAC;IAED,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAC,EAAE,CAAA;IAErC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;QAChC,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,QAAQ;QAChB,GAAG,EAAE,KAAK,CAAC,OAAO;QAClB,EAAE,EAAE,KAAK,CAAC,EAAE;QACZ,SAAS,EAAE,SAAS;KACrB,CAAC,CAAA;IAEF,KAAK,CAAC,IAAI,GAAG,WAAW,CAAA;IAExB,QAAQ,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAA;IAC1C,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAA;IAEzB,mEAAmE;IACnE,+DAA+D;IAC/D,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAA;IAE5B,QAAQ,CAAC,EAAE,GAAG,YAAY,CAAC;QACzB,OAAO,EAAE,UAAU,CAAC,OAAO;KAC5B,CAAC;QACA,4BAA4B;SAC3B,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;SACxB,KAAK,EAAE,CAAA;IAEV,gCAAgC;IAChC,mBAAmB;IACnB,IAAI,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAChE,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAA;QACrC,QAAQ,CAAC,eAAe,GAAG,WAAW,CAAC,SAAS,MAAM;YACpD,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;gBACb,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK;gBACxC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG;aACxB,CAAC,CAAA;QACJ,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;IAChC,CAAC;IAED,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC;QACrB,QAAQ,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,UAAU,CACvC,UAAU,CAAC,KAAK,CAAC,IAAI,EACrB,UAAU,CAAC,KAAK,CAAC,QAAQ,CAC1B,CAAA;QAED,IAAI,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YAC7B,WAAW,CAAC,SAAS,KAAK;gBACxB,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,CAAA;YAChC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;QAC/B,CAAC;IACH,CAAC;IAED,wBAAwB;IACxB,QAAQ,CAAC,YAAY,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAA;IACjD,QAAQ,CAAC,GAAG,GAAG,SAAS,CAAC;QACvB,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;QAC/B,MAAM,EAAE,UAAU,CAAC,QAAQ,CAAC,MAAM,IAAI,MAAM;QAC5C,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,EAAE;QACX,cAAc,EAAE,KAAK;KACtB,CAAC,CAAA;IAEF,oCAAoC;IACpC,QAAQ,CAAC,gBAAgB,GAAG;QAC1B,SAAS,kCAAkC,CAAC,MAAW;YACrD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAC1B,MAAM,CAAC,KAAK,EACZ,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CACrC,CAAA;QACH,CAAC;KACF,CAAA;IAED,QAAQ,CAAC,GAAG,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,CAAA;IAE7C,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC;QACzB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;KAC/D,CAAC;SACC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;SACvB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SACrB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;SACpB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;SACvB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;SACnB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;SACpB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;SACnB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;SACnB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;SACtB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAEvB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC;QAC5B,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK;KAClE,CAAC;SACC,GAAG,CAAC,eAAM,CAAC,iBAAiB,CAAC;SAC7B,GAAG,CAAC,eAAM,CAAC,aAAa,CAAC;SACzB,GAAG,CAAC,eAAM,CAAC,gBAAgB,CAAC;SAC5B,GAAG,CAAC,eAAM,CAAC,kBAAkB,CAAC;SAC9B,GAAG,CAAC,eAAM,CAAC,oBAAoB,CAAC;SAChC,GAAG,CAAC,eAAM,CAAC,gBAAgB,CAAC;SAC5B,GAAG,CAAC,eAAM,CAAC,mBAAmB,CAAC;SAC/B,GAAG,CAAC,eAAM,CAAC,eAAe,CAAC;SAC3B,GAAG,CAAC,eAAM,CAAC,eAAe,CAAC;SAC3B,GAAG,CAAC,eAAM,CAAC,gBAAgB,CAAC;SAC5B,GAAG,CAAC,eAAM,CAAC,uBAAuB,CAAC;SACnC,GAAG,CAAC,eAAM,CAAC,UAAU,CAAC;SACtB,GAAG,CAAC,eAAM,CAAC,eAAe,CAAC,CAAA;IAE9B,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC;QAC7B,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;KACnE,CAAC;SACC,GAAG,CAAC,iBAAO,CAAC,kBAAkB,CAAC;SAC/B,GAAG,CAAC,iBAAO,CAAC,iBAAiB,CAAC;SAC9B,GAAG,CAAC,iBAAO,CAAC,iBAAiB,CAAC;SAC9B,GAAG,CAAC,iBAAO,CAAC,kBAAkB,CAAC;SAC/B,GAAG,CAAC,iBAAO,CAAC,kBAAkB,CAAC;SAC/B,GAAG,CAAC,iBAAO,CAAC,gBAAgB,CAAC;SAC7B,GAAG,CAAC,iBAAO,CAAC,aAAa,CAAC;SAC1B,GAAG,CAAC,iBAAO,CAAC,WAAW,CAAC;SACxB,GAAG,CAAC,iBAAO,CAAC,gBAAgB,CAAC;SAC7B,GAAG,CAAC,iBAAO,CAAC,iBAAiB,CAAC,CAAA;IAEjC,oBAAoB;IAEpB,uDAAuD;IACvD,IAAI,UAAU,CAAC,MAAM,IAAI,QAAQ,KAAK,OAAO,UAAU,CAAC,MAAM,EAAE,CAAC;QAC/D,UAAU,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAA;IACxC,CAAC;IAED,qCAAqC;IACrC,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;IAC/C,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;QAC5D,GAAG,EAAE,OAAO;KACb,CAAC,CAAA;IAEF,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC;QACpB,KAAK,CAAC,IAAI,CAAC,QAAQ,KAAK,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;IAC1E,CAAC;IAED,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC;QACrB,KAAK,CAAC,KAAK,EAAE,CAAA;IACf,CAAC;IAED,QAAQ,CAAC,UAAU,GAAG;QACpB,KAAK,CAAC,KAAK,CAAC,SAAS,eAAe,CAAC,GAAQ;YAC3C,IAAI,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;gBACjD,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;YACzB,CAAC;YAED,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACtE,CAAC,CAAC,CAAA;IACJ,CAAC,CAAA;IAED,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QACjC,UAAU,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC;IAGD,UAAU,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAA;IAE/B,6CAA6C;IAC7C,UAAU,CAAC,SAAS,GAAG,IAAI,CACzB;QACE,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,MAAM;KACjB,EACD,UAAU,CAAC,SAAS,CACrB,CAAA;IAED,SAAS,CAAC,KAAK,CAAC,CAAA;IAGhB,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,CAAA;IAEnD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,UAAS,MAAW,EAAE,MAAW;QAC5E,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAA;QAC3C,CAAC;IACH,CAAC,CAAC,CAAA;IAEF,4EAA4E;IAC5E,KAAK,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAA;IAE5C,OAAO,KAAK,CAAA;AACd,CAAC;AAED,6CAA6C;AAC7C,SAAS,YAAY;IACnB,OAAO;QACL,OAAO,EAAE,YAAY,EAAE;QACvB,KAAK,EAAE;YACL,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;YACjB,GAAG,EAAE;gBACH,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,CAAC;gBACP,KAAK,EAAE,CAAC;gBACR,KAAK,EAAE,CAAC;aACT;YACD,MAAM,EAAE,EAAE;SACX;QACD,MAAM,EAAE,EAAE;QACV,SAAS,EAAE;YACT,QAAQ,EAAE,EAAE;SACb;QACD,OAAO,EAAE;YACP,0CAA0C;YAC1C,KAAK,EAAE;gBACL,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,OAAO;gBACjB,GAAG,EAAE,GAAG;gBACR,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;gBAC5B,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;aAC5B;SACF;QACD,cAAc,EAAE,EAAE;QAClB,OAAO,EAAE,CAAC;KACX,CAAA;AACH,CAAC\"}"
        },
        {
          "name": "seneca.ts",
          "type": "blob",
          "size": 23.064453125,
          "content": "/* Copyright © 2010-2023 Richard Rodger and other contributors, MIT License. */\n'use strict'\n\n\n\n// Node API modules.\nconst Events = require('events')\nconst Util = require('util')\n\n\n// External modules.\nconst GateExecutor = require('gate-executor')\nconst Jsonic = require('@jsonic/jsonic-next')\nconst UsePlugin = require('use-plugin')\nimport Nid from 'nid'\nimport { Patrun, Gex } from 'patrun'\nconst Stats = require('rolling-stats')\nconst { Ordu } = require('ordu')\nconst Eraro = require('eraro')\nimport { Gubu } from 'gubu'\n\n\n// Internal modules.\nconst Common = require('./lib/common')\nconst { make_logging } = require('./lib/logging')\nconst { API } = require('./lib/api')\nconst { make_ready } = require('./lib/ready')\nconst Act = require('./lib/act')\nconst Add = require('./lib/add')\nconst Sub = require('./lib/sub')\nimport { Prior } from './lib/prior'\nimport { Plugin } from './lib/plugin'\nimport { Inward } from './lib/inward'\nimport { Outward } from './lib/outward'\nconst { Legacy } = require('./lib/legacy')\nconst { resolve_options } = require('./lib/options')\nconst { Print } = require('./lib/print')\nconst { addActions } = require('./lib/actions')\nconst { transport } = require('./lib/transport')\nimport Pkg from './package.json'\n\n\n// Internal data and utilities.\nconst { error, deep } = Common\n\n\nconst { One, Any, Skip, Open } = Gubu\n\n// Seneca options.\nconst option_defaults = {\n  // Tag this Seneca instance, will be appended to instance identifier.\n  tag: '-', // TODO: FIX: Gubu api.test.js#292\n\n  // Standard timeout for actions.\n  timeout: 22222,\n\n  // Standard length of identifiers for actions.\n  idlen: 12,\n  didlen: 4,\n\n  // Manually set instance identifier.\n  id$: Skip(String),\n\n  // Register (true) default plugins. Set false to not register when\n  // using custom versions.\n  default_plugins: Open({}),\n\n  // Test mode. Use for unit testing.\n  test: false,\n\n  // Quiet mode. Moves log level to warn. Use for unit testing.\n  quiet: false,\n\n  // Default logging specification - see lib/logging.js\n  log: Any(make_logging().default_logspec),\n\n  // Custom logger function, optional - see lib/logging.js\n  logger: One(Function, Object, String, null),\n\n  // Wait time for plugins to close gracefully.\n  death_delay: 11111,\n\n  // LEGACY: remove in 4.x\n  deathdelay: 11111,\n\n  // Wait time for actions to complete before shutdown.\n  close_delay: 22222,\n\n  // Legacy; specify general error handler\n  errhandler: Skip(One(Function, null)),\n\n  // Load options from a file path\n  from: Skip(String),\n\n  // Provide a module to base option require loading from\n  module: Skip(),\n\n  // Control error handling.\n  error: {\n\n    // Control capture of errors for logging.\n    capture: {\n\n      // Capture errors in action callbacks (false throws uncaught).\n      // callback: true,\n\n      // Capture errors in actions and pass to callback (false throws uncaught).\n      // action: true,\n    },\n\n    // Custom function to identify thrown errors.\n    identify: (e: any) => e instanceof Error,\n  },\n\n  // Validate messages and options.\n  valid: {\n\n    // If false disables all validation.\n    active: true,\n\n    // Validate message parameters.\n    message: true,\n\n    // Validate main Seneca instance options.\n    option: true,\n\n    // Validate plugin options.\n    plugin: true,\n  },\n\n  // Debug settings.\n  debug: {\n    // Throw (some) errors from seneca.act.\n    fragile: false,\n\n    // Fatal errors ... aren't fatal. Not for production!\n    undead: false,\n\n    // Print debug info to console\n    print: {\n      // Print options. Best used via --seneca.print.options.\n      options: false,\n\n      // Amount of information to print on fatal error: 'summary', 'full'\n      fatal: 'summary',\n\n      // Include environment when printing full crash report.\n      // Default: false for security.\n      env: false,\n\n      // Regardless of logging, call `console.err` on errors\n      err: false,\n\n      // Depth of object inspection\n      depth: 2,\n    },\n\n    // Trace action caller and place in args.caller$.\n    act_caller: false,\n\n    // Shorten all identifiers to 2 characters.\n    short_logs: false,\n\n    // Record and log callpoints (calling code locations).\n    callpoint: false,\n\n    // Log deprecation warnings\n    deprecation: true,\n\n    // Set to array to force artificial argv and ignore process.argv\n    argv: One([], null),\n\n    // Set to object to force artificial env and ignore process.env\n    env: One({}, null),\n\n    // Length of data description in logs\n    datalen: 333,\n  },\n\n  // Enforce strict behaviours. Relax when backwards compatibility needed.\n  strict: {\n    // Action result must be a plain object.\n    result: true,\n\n    // Delegate fixedargs override action args.\n    fixedargs: true,\n\n    // Adding a pattern overrides existing pattern only if matches exactly.\n    add: false,\n\n    // If no action is found and find is false,\n    // then no error returned along with empty object\n    find: true,\n\n    // Maximum number of times an action can call itself\n    maxloop: 11,\n\n    // Exports must exist\n    exports: false,\n  },\n\n  // Keep a transient time-ordered history of actions submitted\n  history: {\n    // History log is active.\n    active: true,\n\n    // Prune the history. Disable only for debugging.\n    prune: true,\n\n    // Prune the history only periodically.\n    interval: 100,\n  },\n\n  // Action executor tracing. See gate-executor module.\n  trace: {\n    act: One(Function, false),\n\n    stack: false,\n\n    // Messages that do not match a known pattern\n    unknown: One(String, true),\n\n    // Messages that have invalid content\n    invalid: false,\n  },\n\n  // Action statistics settings. See rolling-stats module.\n  stats: {\n    size: 1024,\n    interval: 60000,\n    running: false,\n  },\n\n  // Plugin settings\n  plugin: {},\n\n  // Plugins to load (will be passed to .use)\n  plugins: One({}, [], null),\n\n  // System wide functionality.\n  system: {\n\n    // Function to exit the process.\n    exit: (...args: any[]) => {\n      console.log('EXIT', args)\n      console.trace()\n      // process.exit(...args)\n    },\n\n    // Close instance on these signals, if true.\n    close_signals: {\n      SIGHUP: false,\n      SIGTERM: false,\n      SIGINT: false,\n      SIGBREAK: false,\n    },\n\n    plugin: {\n      load_once: false,\n    },\n\n    // System actions.\n    action: {\n\n      // Add system actions.\n      add: true\n    },\n  },\n\n  // Internal functionality. Reserved for objects and functions only.\n  internal: Open({\n    // Console printing utilities\n    print: {\n      // Print to standard out\n      log: One(Function, null),\n\n      // Print to standard err\n      err: One(Function, null),\n    },\n  }),\n\n  // Log status at periodic intervals.\n  status: {\n    interval: 60000,\n\n    // By default, does not run.\n    running: false,\n  },\n\n  // Shared default transport configuration\n  transport: Open({\n    // Standard port for messages.\n    port: 10101,\n\n    host: Skip(String),\n    path: Skip(String),\n    protocol: Skip(String),\n  }),\n\n  limits: {\n    maxparents: 33,\n  },\n\n  // Setup event listeners before starting\n  events: {},\n\n  // Backwards compatibility settings.\n  legacy: One(Boolean, {\n    // 3.x\n\n    // Use old error handling.\n    error: false,\n\n    // Add meta$ property to messages.\n    meta: false,\n\n    // 4.x\n\n    // If true, add role:seneca variants of builtin actions.\n    builtin_actions: false,\n  }),\n\n  // Processing task ordering.\n  order: {\n    // Action add task ordering.\n    add: {\n      // Print task execution log.\n      debug: false,\n    },\n\n    // Action inward task ordering.\n    inward: {\n      // Print task execution log.\n      debug: false,\n    },\n\n    // Action outward task ordering.\n    outward: {\n      // Print task execution log.\n      debug: false,\n    },\n\n    // Plugin load task ordering.\n    use: {\n      // Print task execution log.\n      debug: false,\n    },\n  },\n\n  // Prior actions.\n  prior: {\n    // Call prior actions directly (not as further messages).\n    direct: false,\n  },\n\n  // Legacy\n  reload$: Skip(Boolean),\n  // actcache: Any(),\n  // seneca: Any(),\n}\n\n\n// Utility functions exposed by Seneca via `seneca.util`.\nconst seneca_util = {\n  Eraro,\n\n  Jsonic,\n  Nid,\n  Patrun,\n  Gex,\n  Gubu,\n\n  pins: Common.pins,\n  clean: Common.clean,\n  pattern: Common.pattern,\n  print: Common.print,\n  error: error,\n  deep: Common.deep,\n\n  deepextend: Common.deep,\n  parsepattern: Common.parsePattern,\n  pincanon: Common.pincanon,\n  router: function router() {\n    return Patrun()\n  },\n  resolve_option: Common.resolve_option,\n\n  // Legacy (deprecate and remove)\n  // argprops: Legacy.argprops,\n  // recurse: Legacy.recurse,\n  // copydata: Legacy.copydata,\n  // nil: Legacy.nil,\n  flatten: Legacy.flatten,\n}\n\n// Internal implementations.\nconst intern = {\n  util: seneca_util,\n}\n\n// Seneca is an EventEmitter.\nfunction Seneca(this: any) {\n  Events.EventEmitter.call(this)\n  this.setMaxListeners(0)\n}\nUtil.inherits(Seneca, Events.EventEmitter)\n\n// Mark the Seneca object\nSeneca.prototype.isSeneca = true\n\n// Provide useful description when convered to JSON.\n// Cannot be instantiated from JSON.\nSeneca.prototype.toJSON = function toJSON() {\n  return {\n    isSeneca: true,\n    id: this.id,\n    did: this.did,\n    fixedargs: this.fixedargs,\n    fixedmeta: this.fixedmeta,\n    start_time: this.start_time,\n    version: this.version,\n  }\n}\n\nSeneca.prototype[Util.inspect.custom] = Seneca.prototype.toJSON\n\n// Create a Seneca instance.\nfunction init(seneca_options?: any, more_options?: any) {\n  var initial_opts =\n    'string' === typeof seneca_options\n      ? deep({}, { from: seneca_options }, more_options)\n      : deep({}, seneca_options, more_options)\n\n  // Legacy options, remove in 4.x\n  initial_opts.deathdelay = initial_opts.death_delay\n\n  var seneca = make_seneca(initial_opts)\n  var options = seneca.options()\n\n  // The 'internal' key of options is reserved for objects and functions\n  // that provide functionality, and are thus not really printable\n  seneca.log.debug({ kind: 'notice', options: { ...options, internal: null } })\n\n  Print.print_options(seneca, options)\n\n  // Register plugins specified in options.\n  options.plugins = null == options.plugins ? {} : options.plugins\n  var pluginkeys = Object.keys(options.plugins)\n  for (var pkI = 0; pkI < pluginkeys.length; pkI++) {\n    var pluginkey = pluginkeys[pkI]\n    var plugindesc = options.plugins[pluginkey]\n\n    if (false === plugindesc) {\n      seneca.private$.ignore_plugins[pluginkey] = true\n    } else {\n      seneca.use(plugindesc)\n    }\n  }\n\n  seneca.ready(function(this: any) {\n    this.log.info({ kind: 'notice', data: 'hello ' + this.id })\n  })\n\n  return seneca\n}\n\n\n// Expose Seneca prototype for easier monkey-patching\ninit.Seneca = Seneca\n\n// To reference builtin loggers when defining logging options.\ninit.loghandler = Legacy.loghandler\n\n// Makes require('seneca').use(...) work by creating an on-the-fly instance.\ninit.use = function top_use() {\n  var argsarr = new Array(arguments.length)\n  for (var l = 0; l < argsarr.length; ++l) {\n    argsarr[l] = arguments[l]\n  }\n\n  var instance = init()\n\n  return instance.use.apply(instance, argsarr)\n}\n\n// Makes require('seneca').test() work.\ninit.test = function top_test() {\n  return init().test(...arguments)\n}\n\n// Makes require('seneca').quiet() work.\ninit.quiet = function top_quiet() {\n  return init().quiet(...arguments)\n}\n\ninit.util = seneca_util\ninit.valid = Gubu\n\ninit.test$ = { intern: intern }\n\n\ntype Instance = ReturnType<typeof make_seneca> & Record<string, any>\n\nexport type { Instance }\n\n\nexport default init\n\nmodule.exports = init\n\n\n// Create a new Seneca instance.\nfunction make_seneca(initial_opts?: any) {\n  // Create a private context.\n  var private$: any = make_private()\n  private$.error = error\n\n  // Create a new root Seneca instance.\n  var root$: any = new (Seneca as any)()\n\n  // Expose private data to plugins.\n  root$.private$ = private$\n\n  // Resolve initial options.\n  private$.optioner = resolve_options(module, option_defaults, initial_opts)\n  var start_opts = private$.optioner.get()\n\n  // Console print utilities\n  private$.print = {\n    log: start_opts.internal.print.log || Print.internal_log,\n    err: start_opts.internal.print.err || Print.internal_err,\n  }\n\n  // These need to come from options as required during construction.\n  private$.actrouter = start_opts.internal.actrouter || Patrun({ gex: true })\n\n  private$.translationrouter =\n    start_opts.internal.translationrouter || Patrun({ gex: true })\n\n  const soi_subrouter = start_opts.internal.subrouter || {}\n\n  private$.subrouter = {\n    // Check for legacy inward router\n    inward: soi_subrouter.inward || Patrun({ gex: true }),\n    outward: soi_subrouter.outward || Patrun({ gex: true }),\n  }\n\n\n  // Setup event handlers, if defined\n  var event_names = ['log', 'act_in', 'act_out', 'act_err', 'ready', 'close']\n  event_names.forEach(function(event_name) {\n    if ('function' === typeof start_opts.events[event_name]) {\n      root$.on(event_name, start_opts.events[event_name])\n    }\n  })\n\n  // Create internal tools.\n  private$.actnid = Nid({ length: start_opts.idlen })\n  private$.didnid = Nid({ length: start_opts.didlen })\n\n  // Instance specific incrementing counters to create unique function names\n  private$.next_action_id = Common.autoincr()\n\n  var callpoint = (private$.callpoint = Common.make_callpoint(\n    start_opts.debug.callpoint\n  ))\n\n  // Define public member variables.\n  root$.start_time = Date.now()\n  root$.context = {}\n  root$.version = Pkg.version\n\n  // TODO: rename in 4.x as \"args\" terminology is legacy\n  root$.fixedargs = {}\n  root$.fixedmeta = {}\n\n  root$.fixedmeta = {}\n\n  root$.flags = {\n    closed: false,\n  }\n\n  Object.defineProperty(root$, 'root', { value: root$ })\n\n  private$.history = Common.history(start_opts.history)\n\n  const ready = make_ready(root$)\n\n  // API for Ordu-defined processes.\n  root$.order = {}\n\n  // TODO: rename back to plugins\n  const api_use = Plugin.api_use(callpoint, {\n    debug: !!start_opts.debug.ordu || !!start_opts.order.use.debug,\n  })\n  root$.use = api_use.use // Define and load a plugin.\n\n  root$.order.plugin = api_use.ordu\n\n  // Seneca methods. Official API.\n  root$.toString = API.toString\n  root$.has = API.has // True if the given pattern has an action.\n  root$.find = API.find // Find the action definition for a pattern.\n  root$.list = API.list // List the patterns added to this instance.\n  root$.status = API.status // Get the status if this instance.\n  root$.reply = API.reply // Reply to a submitted message.\n  root$.sub = Sub.api_sub // Subscribe to messages.\n  root$.list_plugins = API.list_plugins // List the registered plugins.\n  root$.find_plugin = API.find_plugin // Find the plugin definition.\n  root$.has_plugin = API.has_plugin // True if the plugin is registered.\n  root$.ignore_plugin = API.ignore_plugin // Ignore plugin and don't register it.\n  root$.listen = API.listen(callpoint) // Listen for inbound messages.\n  root$.client = API.client(callpoint) // Send outbound messages.\n  root$.gate = API.gate // Create a delegate that executes actions in sequence.\n  root$.ungate = API.ungate // Execute actions in parallel.\n  root$.translate = API.translate // Translate message to new pattern.\n  root$.ping = API.ping // Generate ping response.\n  root$.test = API.test // Set test mode.\n  root$.quiet = API.quiet // Convenience method to set logging level to `warn+`.\n  root$.export = API.export // Export plain objects from a plugin.\n  root$.depends = API.depends // Check for plugin dependencies.\n  root$.delegate = API.delegate // Create an action-specific Seneca instance.\n  root$.prior = Prior.api_prior // Call the previous action definition for pattern.\n  root$.inward = API.inward // Add a modifier function for messages inward\n  root$.outward = API.outward // Add a modifier function for responses outward\n  root$.error = API.error // Set global error handler, or generate Seneca Error\n  root$.fail = API.fail // Throw a Seneca error\n  root$.explain = API.explain // Toggle top level explain capture\n  root$.decorate = API.decorate // Decorate seneca object with functions\n  root$.seneca = API.seneca\n  root$.close = API.close(callpoint) // Close and shutdown plugins.\n  root$.options = API.options // Get and set options.\n  root$.fix = API.fix // fix pattern arguments, message arguments, and custom meta\n  root$.wrap = API.wrap // wrap each found pattern with a new action\n  root$.add = Add.api_add // Add a pattern and associated action.\n  root$.message = Add.api_message // Add a pattern and associated action async function.\n  root$.act = Act.api_act // Submit a message and trigger the associated action.\n  root$.post = Util.promisify(root$.act) // Async version of act.\n  root$.direct = Act.api_direct // Run message action synchronously.\n  root$.ready = ready.api_ready // Callback when plugins initialized.\n  root$.valid = Gubu // Expose Gubu shape builders\n  root$.prepare = API.prepare // Plugin preparation action.\n  root$.destroy = API.destroy // Close Seneca instance.\n\n\n  root$.internal = function() {\n    return {\n      ordu: {\n        use: api_use.ordu,\n      },\n    }\n  }\n\n  // Non-API methods.\n  // root$.register = Plugins.register(callpoint)\n\n  // DEPRECATE IN 4.x\n  root$.findact = root$.find\n  root$.plugins = API.list_plugins\n  root$.findplugin = API.find_plugin\n  root$.hasplugin = API.has_plugin\n  root$.hasact = Legacy.hasact\n  root$.act_if = Legacy.act_if\n  root$.findpins = Legacy.findpins\n  root$.pinact = Legacy.findpins\n  root$.next_act = Legacy.next_act\n\n  // Identifier generator.\n  root$.idgen = Nid({ length: start_opts.idlen })\n\n  // Instance tag\n  start_opts.tag = null != start_opts.tag ? start_opts.tag : option_defaults.tag\n\n  // Create a unique identifer for this instance.\n  root$.id =\n    start_opts.id$ ||\n    root$.idgen() +\n    '/' +\n    root$.start_time +\n    '/' +\n    process.pid +\n    '/' +\n    root$.version +\n    '/' +\n    start_opts.tag\n\n  // The instance tag, useful for grouping instances.\n  root$.tag = start_opts.tag\n\n  if (start_opts.debug.short_logs || start_opts.log.short) {\n    start_opts.idlen = 2\n    root$.idgen = Nid({ length: start_opts.idlen })\n    root$.id = root$.idgen() + '/' + start_opts.tag\n  }\n\n  root$.fullname = 'Seneca/' + root$.id\n\n  root$.die = Common.makedie(root$, {\n    type: 'sys',\n    plugin: 'seneca',\n    tag: root$.version,\n    id: root$.id,\n    callpoint: callpoint,\n  })\n\n  root$.util = seneca_util\n\n  private$.exports = { options: start_opts }\n  private$.decorations = {}\n\n  // Error events are fatal, unless you're undead.  These are not the\n  // same as action errors, these are unexpected internal issues.\n  root$.on('error', root$.die)\n\n  private$.ge = GateExecutor({\n    timeout: start_opts.timeout,\n  })\n    //.clear(action_queue_clear)\n    .clear(ready.clear_ready)\n    .start()\n\n  // TODO: this should be a plugin\n  // setup status log\n  if (start_opts.status.interval > 0 && start_opts.status.running) {\n    private$.stats = private$.stats || {}\n    private$.status_interval = setInterval(function status() {\n      root$.log.info({\n        kind: 'status',\n        alive: Date.now() - private$.stats.start,\n        act: private$.stats.act,\n      })\n    }, start_opts.status.interval)\n  }\n\n  if (start_opts.stats) {\n    private$.timestats = new Stats.NamedStats(\n      start_opts.stats.size,\n      start_opts.stats.interval\n    )\n\n    if (start_opts.stats.running) {\n      setInterval(function stats() {\n        private$.timestats.calculate()\n      }, start_opts.stats.interval)\n    }\n  }\n\n  // private$.plugins = {}\n  private$.plugin_order = { byname: [], byref: [] }\n  private$.use = UsePlugin({\n    prefix: ['seneca-', '@seneca/'],\n    module: start_opts.internal.module || module,\n    msgprefix: false,\n    builtin: '',\n    merge_defaults: false,\n  })\n\n  // TODO: provide an api to add these\n  private$.action_modifiers = [\n    function add_rules_from_validate_annotation(actdef: any) {\n      actdef.rules = Object.assign(\n        actdef.rules,\n        deep({}, actdef.func.validate || {})\n      )\n    },\n  ]\n\n  private$.sub = { handler: null, tracers: [] }\n\n  root$.order.add = new Ordu({\n    name: 'add',\n    debug: !!start_opts.debug.ordu || !!start_opts.order.add.debug,\n  })\n    .add(Add.task.translate)\n    .add(Add.task.prepare)\n    .add(Add.task.plugin)\n    .add(Add.task.callpoint)\n    .add(Add.task.flags)\n    .add(Add.task.action)\n    .add(Add.task.prior)\n    .add(Add.task.rules)\n    .add(Add.task.register)\n    .add(Add.task.modify)\n\n  root$.order.inward = new Ordu({\n    name: 'inward',\n    debug: !!start_opts.debug.ordu || !!start_opts.order.inward.debug,\n  })\n    .add(Inward.inward_msg_modify)\n    .add(Inward.inward_closed)\n    .add(Inward.inward_act_cache)\n    .add(Inward.inward_act_default)\n    .add(Inward.inward_act_not_found)\n    .add(Inward.inward_act_stats)\n    .add(Inward.inward_validate_msg)\n    .add(Inward.inward_warnings)\n    .add(Inward.inward_msg_meta)\n    .add(Inward.inward_limit_msg)\n    .add(Inward.inward_prepare_delegate)\n    .add(Inward.inward_sub)\n    .add(Inward.inward_announce)\n\n  root$.order.outward = new Ordu({\n    name: 'outward',\n    debug: !!start_opts.debug.ordu || !!start_opts.order.outward.debug,\n  })\n    .add(Outward.outward_make_error)\n    .add(Outward.outward_act_stats)\n    .add(Outward.outward_act_cache)\n    .add(Outward.outward_res_object)\n    .add(Outward.outward_res_entity)\n    .add(Outward.outward_msg_meta)\n    .add(Outward.outward_trace)\n    .add(Outward.outward_sub)\n    .add(Outward.outward_announce)\n    .add(Outward.outward_act_error)\n\n  // Configure logging\n\n  // Mark logger as being externally defined from options\n  if (start_opts.logger && 'object' === typeof start_opts.logger) {\n    start_opts.logger.from_options$ = true\n  }\n\n  // Load logger and update log options\n  var logspec = private$.logging.build_log(root$)\n  start_opts = private$.exports.options = private$.optioner.set({\n    log: logspec,\n  })\n\n  if (start_opts.test) {\n    root$.test('string' === typeof start_opts.test ? start_opts.test : null)\n  }\n\n  if (start_opts.quiet) {\n    root$.quiet()\n  }\n\n  private$.exit_close = function() {\n    root$.close(function root_exit_close(err: any) {\n      if (err && true != private$.optioner.get().quiet) {\n        private$.print.err(err)\n      }\n\n      start_opts.system.exit(err ? (err.exit === null ? 1 : err.exit) : 0)\n    })\n  }\n\n  if (start_opts.system.action.add) {\n    addActions(root$)\n  }\n\n\n  start_opts.legacy.error = false\n\n  // TODO: move to static options in Seneca 4.x\n  start_opts.transport = deep(\n    {\n      port: 62345,\n      host: '127.0.0.1',\n      path: '/act',\n      protocol: 'http',\n    },\n    start_opts.transport\n  )\n\n  transport(root$)\n\n\n  Print(root$, start_opts.debug.argv || process.argv)\n\n  Common.each(start_opts.system.close_signals, function(active: any, signal: any) {\n    if (active) {\n      process.once(signal, private$.exit_close)\n    }\n  })\n\n  // Emit start message (also ensures GateExecutor will trigger 'ready' event)\n  root$.act('sys:seneca,on:point,point:start')\n\n  return root$\n}\n\n// Private member variables of Seneca object.\nfunction make_private() {\n  return {\n    logging: make_logging(),\n    stats: {\n      start: Date.now(),\n      act: {\n        calls: 0,\n        done: 0,\n        fails: 0,\n        cache: 0,\n      },\n      actmap: {},\n    },\n    actdef: {},\n    transport: {\n      register: [],\n    },\n    plugins: {\n      // Virtual \"plugin\" for top level actions.\n      root$: {\n        name: 'root$',\n        fullname: 'root$',\n        tag: '-',\n        options: Object.create(null),\n        shared: Object.create(null),\n      }\n    },\n    ignore_plugins: {},\n    cleared: 0,\n  }\n}\n\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "trial",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.283203125,
          "content": "{\n  \"compilerOptions\": {\n    \"esModuleInterop\": true,\n    \"isolatedModules\": true,\n    \"module\": \"commonjs\",\n    \"noEmitOnError\": true,\n    \"resolveJsonModule\": true,\n    \"sourceMap\": true,\n    \"strict\": true,\n    \"target\": \"ES2019\"\n  },\n  \"exclude\": [\n    \"dist\",\n    \"node_modules\"\n  ]\n}\n"
        }
      ]
    }
  ]
}