{
  "metadata": {
    "timestamp": 1736561863581,
    "page": 532,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "petruisfan/node-supervisor",
      "stars": 3753,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0537109375,
          "content": "test/sampleApp/node_modules/\nnode_modules/\n*.iml\n.idea\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.302734375,
          "content": "Copyright (c) Isaac Z. Schlueter, Ian Young, and Other Contributors\nAll rights reserved.\n\nThe BSD License\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\nIF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.435546875,
          "content": "# node-supervisor\n\nA little supervisor script for nodejs. It runs your program, and\nwatches for code changes, so you can have hot-code reloading-ish\nbehavior, without worrying about memory leaks and making sure you\nclean up all the inter-module references, and without a whole new\n`require` system.\n\n## node-supervisor -?\n\n\n    Node Supervisor is used to restart programs when they crash.\n    It can also be used to restart programs when a *.js file changes.\n\n    Usage:\n      supervisor [options] <program>\n      supervisor [options] -- <program> [args ...]\n\n    Required:\n      <program>\n        The program to run.\n\n    Options:\n      -w|--watch <watchItems>\n        A comma-delimited list of folders or js files to watch for changes.\n        When a change to a js file occurs, reload the program\n        Default is '.'\n\n      -i|--ignore <ignoreItems>\n        A comma-delimited list of folders to ignore for changes.\n        No default\n\n      --ignore-symlinks\n        Ignore symlinks :)\n        \n      -s|--timestamp\n        Log timestamp after each run.\n        Make it easy to tell when the task last ran.\n        \n      -p|--poll-interval <milliseconds>\n        How often to poll watched files for changes.\n        Defaults to Node default.\n\n      -e|--extensions <extensions>\n        A comma-delimited list of file extensions to watch for changes.\n        Default is 'node,js' (or when CoffeeScript, 'node,js,coffee,litcoffee').\n\n      -x|--exec <executable>\n        The executable that runs the specified program.\n        Default is 'node'\n\n      -pid|--save-pid <path>\n        Save supervisor's process id to a file at the given path.\n\n      --debug[=port]\n        Start node with --debug flag.\n\n      --debug-brk[=port]\n        Start node with --debug-brk flag.\n\n      --harmony\n        Start node with --harmony flag.\n\n      --inspect[=port]\n        Start node with --inspect flag.\n\n      -n|--no-restart-on error|exit|success\n        Don't automatically restart the supervised program if it ends.\n        Supervisor will wait for a change in the source files.\n        If \"error\", an exit code of 0 will still restart.\n        If \"exit\", no restart regardless of exit code.\n        If \"success\", no restart only if exit code is 0.\n\n    -t|--non-interactive\n        Dissable interactive capacity\n        With this option, supervisor won't listen to stdin\n\n      --force-watch\n        Use fs.watch instead of fs.watchFile.\n        This may be useful if you see a high cpu load on a windows machine.\n\n\t  -k|--instant-kill\n\t    Instantly kills the server process, instead of gracefully shutting down the server.\n\t\tThis can be useful when the node app has events attached to SIGTERM or SIGINT so as to do a graceful shutdown before the process exits.\n\t\t\n     -RV|--restart-verbose\n        Logs the file(s) that caused supervisor to restart\n\n      -h|--help|-?\n        Display these usage instructions.\n\n      -q|--quiet\n        Suppress DEBUG messages\n\n\n    Options available after start:\n      rs - restart process. Useful when you want to restart your program even\n           if no file has changed.\n\n\n    Examples:\n      supervisor myapp.js\n      supervisor myapp.coffee\n      supervisor -w scripts -e myext -x myrunner myapp\n      supervisor -w lib,server.js,config.js server.js\n      supervisor -- server.js -h host -p port\n\n\nIn order to not watch for file changes, use \"-i .\".\n\n## Simple Install\n\nJust run:\n\n    npm install supervisor -g\n\n## Fancy Install\n\nGet this code, and then do this:\n\n    npm link\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.8857421875,
          "content": "{\n  \"name\": \"supervisor\",\n  \"version\": \"0.12.0\",\n  \"description\": \"A supervisor program for running nodejs programs\",\n  \"author\": \"Isaac Z. Schlueter <i@izs.me>\",\n  \"license\": \"MIT\",\n  \"contributors\": [\n    \"Todd Branchflower <toddbran@stanford.edu>\",\n    \"Giannis Dzegoutanis <erasmospunk@gmail.com>\",\n    \"Brian Ehmann <behmann@gmail.com>\",\n    \"Corey Jewett <cj@syntheticplayground.com>\",\n    \"Taka Kojima <taka.kojima@ff0000.com>\",\n    \"Aneil Mallavarapu <aneil@blipboard.com>\",\n    \"Doug McCall <dhm116@psu.edu>\",\n    \"Mathieu M-Gosselin <mathieumg@gmail.com>\",\n    \"David Murdoch <hello@davidmurdoch.com>\",\n    \"mx1700 <mx1700@gmail.com>\",\n    \"Michiel ter Reehorst <jm.ter.reehorst@jamiter.com>\",\n    \"Jonathan 'Wolf' Rentzsch <jwr.git@redshed.net>\",\n    \"John Roberts <jroberts@logitech.com>\",\n    \"Scott Sanders <scott@stonecobra.com>\",\n    \"Thomas Schaaf <schaaf@komola.de>\",\n    \"Fernando H. Silva <ferhensil@gmail.com>\",\n    \"Kei Son <heyacct@gmail.com>\",\n    \"David Taylor <david@zensatellite.com>\",\n    \"Antonio Touri√±o <atourino@gmail.com>\",\n    \"Oliver Wong <oliver@owiber.com>\",\n    \"Di Wu <dw323@cornell.edu>\",\n    \"Jesse Yang <jyyjcc@gmail.com>\",\n    \"Ian Young <ian.greenleaf@gmail.com>\",\n    \"jazzzz <jazzzz@gmail.com>\",\n    \"philpill <github@philpill.net>\",\n    \"rma4ok <rma4ok@gmail.com>\",\n    \"Petru Isfan <petru.isfan@gmail.com>\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/petruisfan/node-supervisor.git\"\n  },\n  \"bugs\": \"https://github.com/petruisfan/node-supervisor/issues\",\n  \"homepage\": \"https://github.com/petruisfan/node-supervisor/\",\n  \"main\": \"lib/supervisor.js\",\n  \"bin\": {\n    \"node-supervisor\": \"lib/cli-wrapper.js\",\n    \"supervisor\": \"lib/cli-wrapper.js\"\n  },\n  \"engines\": {\n    \"node\": \">=0.6.0\"\n  },\n  \"scripts\": {\n    \"test\": \"./node_modules/nodeunit/bin/nodeunit test/*.test.js\"\n  },\n  \"preferGlobal\": true,\n  \"devDependencies\": {\n    \"nodeunit\": \"~0.9.0\"\n  }\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}