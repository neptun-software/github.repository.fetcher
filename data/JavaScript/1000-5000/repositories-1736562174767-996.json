{
  "metadata": {
    "timestamp": 1736562174767,
    "page": 996,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEwMDA=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cheatsheet1999/FrontEndCollection",
      "stars": 3047,
      "defaultBranch": "main",
      "files": [
        {
          "name": "Algorithms",
          "type": "tree",
          "content": null
        },
        {
          "name": "BFE.dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "CSS-Day",
          "type": "tree",
          "content": null
        },
        {
          "name": "Interview",
          "type": "tree",
          "content": null
        },
        {
          "name": "JS-Algo",
          "type": "tree",
          "content": null
        },
        {
          "name": "JS-Core",
          "type": "tree",
          "content": null
        },
        {
          "name": "JS-Day",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.2265625,
          "content": "# FrontEndCollection (Keep updating everyday, hopefully...)\n\n## Web Development Basics\n### HTML 📖\n[1. What happens when you type in a URL](https://github.com/cheatsheet1999/FrontEndCollection/issues/2)  \n[2. GET vs POST](https://github.com/cheatsheet1999/FrontEndCollection/issues/4)  \n<a href=\"https://github.com/cheatsheet1999/FrontEndCollection/issues/5\">3. What can we do to improve a website's performance?</a>  \n<a href=\"https://github.com/cheatsheet1999/FrontEndCollection/issues/6\">4. HTML5 offline storage mechanism</a>  \n[5. Common time and space-complexity](https://github.com/cheatsheet1999/FrontEndCollection/issues/9)  \n[6. What has been deprecated, and what is new on HTML5?](https://github.com/cheatsheet1999/FrontEndCollection/issues/11)  \n[7. How the DOM really works?](https://github.com/cheatsheet1999/FrontEndCollection/issues/18)  \n[8. Inline elements, Block elements, and what are the differences?](https://github.com/cheatsheet1999/FrontEndCollection/issues/27)  \n[9. Several ways to call a function](https://github.com/cheatsheet1999/FrontEndCollection/issues/28)  \n[10. A brief introduction of the differences between \"src\" and \"href\"](https://github.com/cheatsheet1999/FrontEndCollection/issues/29)  \n[11. A brief introduction of Call, Apply, Bind](https://github.com/cheatsheet1999/FrontEndCollection/issues/30)  \n[12. Time and space complexity for common sorting algorithm](https://github.com/cheatsheet1999/FrontEndCollection/issues/9)  \n\n### CSS 💎\n[1. What is the difference between display:none and visibility:hidden style?](https://github.com/cheatsheet1999/FrontEndCollection/issues/37)  \n[2. What is BFC(Block Formatting Context)](https://github.com/cheatsheet1999/FrontEndCollection/issues/38)\n\n### JavaScript Concepts 📦\n[`this` keyword](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/%60this%60%20keyword.md)   \n[Bubbling and Capturing](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/Bubbling%20and%20Capturing.md)   \n[Execution Context](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/Execution%20Context.md)   \n[Higher Order Function](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/Functions%20%26%20Callbacks.md)      \n[Event Loop](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/Single%20Thread,%20Event%20Loop%20&%20Blocking%20Code.md)      \n[Closures](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/Closures.md)   \n[Throttling and Debouncing](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/Throttling%20and%20Debouncing.md)   \n[Promises](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/Web-Note/Promises.md)    \n\n### JavaScript Demos 🖥\n[Consuming Promises](https://github.com/cheatsheet1999/FrontEndCollection/tree/main/JS-Day/Consuming%20Promises)     \n\n### React Concepts 💡   \n[Controlled Components](https://github.com/cheatsheet1999/FrontEndCollection/tree/main/Web-Note/Controlled%20Components)   \n\n### React Projects (In ascending order of difficulty)\n[ExpenseTracker](https://github.com/cheatsheet1999/FrontEndCollection/tree/main/React/ExpenseTracker)        \n\n### Node.js Demos 🟢\n[Receive input](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Day/Receive%20input/preview.md)     \n  \n## Projects\n[1. Accordion](https://github.com/cheatsheet1999/FrontEndCollection/issues/17)   \n[2. ModalBox](https://github.com/cheatsheet1999/FrontEndCollection/issues/23)  \n[3. Drum Kit](https://github.com/cheatsheet1999/FrontEndCollection/tree/main/JS-Day/DrumKit)  \n[4. Mini Clock](https://github.com/cheatsheet1999/FrontEndCollection/tree/main/JS-Day/Mini%20Clock)  \n[5. Playing with Variables](https://github.com/siyuan25/FrontEndCollection/tree/main/JS-Day/Playing%20with%20Variables)  \n\n## Deep Dive in Javascript \n[_Learn More on BFE.dev_](https://bigfrontend.dev/)  \n\n[1. Implement Curry()](https://github.com/cheatsheet1999/FrontEndCollection/issues/33)   \n[2. implement Array.prototype.flat()](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Core/implement%20Array.prototype.flat().md)  \n[3. Implement curry() with placeholder support](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Core/implement%20curry()%20with%20placeholder%20support.md)  \n\n## Data Structures & Algorithms in JavaScript\n\n### Solve the questions on [Codewar](https://www.codewars.com/) if you are a beginner\n[Beginners](https://github.com/cheatsheet1999/FrontEndCollection/tree/main/JS-Algo/Beginners)   \n\n<details>\n<summary><strong>Array</strong></summary>\n\n\n[0001. Two Sum](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0001.%20Two%20Sum.md)           \n[Two Sum II - Input Array Is Sorted](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Two%20Sum%20II%20-%20Input%20Array%20Is%20Sorted.md)   \n[0011. Container With Most Water](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0011.%20Container%20With%20Most%20Water.md)      \n[0026. Remove Duplicates from Sorted Array.md](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0026.%20Remove%20Duplicates%20from%20Sorted%20Array.md)        \n[Search Insert Position](https://github.com/cheatsheet1999/FrontEndCollection/issues/26)  \n[Squares of a Sorted Array](https://github.com/cheatsheet1999/FrontEndCollection/issues/31)        \n[Last and Second Last](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Last%20and%20Second%20Last.md)  \n[Rotate Array](https://github.com/cheatsheet1999/FrontEndCollection/issues/32)  \n[Meeting Rooms II](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Meeting%20Rooms%20II.md)  \n[Intersection of Two Arrays II](https://github.com/cheatsheet1999/FrontEndCollection/issues/36)  \n[Remove Nth Node From End of List](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Remove%20Nth%20Node%20From%20End%20of%20List.md)  \n[K Closest Points to Origin](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/K%20Closest%20Points%20to%20Origin.md) \n[Maximum Subarray](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Maximum%20Subarray.md)        \n[Best Time to Buy and Sell Stock](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Best%20Time%20to%20Buy%20and%20Sell%20Stock.md)  \n[First Bad Version](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/First%20Bad%20Version.md)    \n[Meeting Rooms](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Meeting%20Rooms.md)   \n[Trapping Rain Water](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Trapping%20Rain%20Water.md)  \n[Product of Array Except Self](https://github.com/cheatsheet1999/FrontEndCollection/issues/1)  \n[Merge Intervals](https://github.com/cheatsheet1999/FrontEndCollection/issues/3)   \n[Longest Consecutive Sequence](https://github.com/cheatsheet1999/FrontEndCollection/issues/7)  \n[Spiral Matrix](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Spiral%20Matrix.md)     \n[Coin Change](https://github.com/cheatsheet1999/FrontEndCollection/issues/13)  \n[Gas Station](https://github.com/cheatsheet1999/FrontEndCollection/issues/15)  \n[Top K Frequent Elements](https://github.com/cheatsheet1999/FrontEndCollection/issues/19)  \n[3 Sum](https://github.com/cheatsheet1999/FrontEndCollection/issues/20)  \n[Count Binary Substrings](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Count%20Binary%20Substrings.md)  \n[Word Search](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Word%20Search.md)  \n[Subarray Sum Equals K](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Subarray%20Sum%20Equals%20K.md)  \n[Subdomain Visit Count](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Subdomain%20Visit%20Count.md)  \n[Next Permutation](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Next%20Permutation.md)  \n[Expressive Words](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Expressive%20Words.md)   \n[Verifying an Alien Dictionary](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Verifying%20an%20Alien%20Dictionary.md)  \n[4Sum(nSum universal solution)](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/4Sum.md)  \n[3Sum Closest](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/3Sum%20Closest.md)   \n[Jump Game](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Jump%20Game.md)   \n[Jump Game II](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Jump%20Game%20II.md)    \n[Minimum Size Subarray Sum](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Minimum%20Size%20Subarray%20Sum.md)   \n[Matrix Summation](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Matrix%20Summation.md)  \n[Counting Analogous Arrays](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Counting%20Analogous%20Arrays.md)  \n[Custom Sorted Array](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Custom%20Sorted%20Array.md)         \n[Reformat Date](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Reformat%20Date.md)          \n[Game of Life](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Game%20of%20Life.md)        \n[Search a 2D Matrix II](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Search%20a%202D%20Matrix%20II.md)     \n[Kth Largest Element in an Array](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Kth%20Largest%20Element%20in%20an%20Array.md)     \n[Insert Delete GetRandom O(1)](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Insert%20Delete%20GetRandom%20O(1).md)     \n[Reaching Points](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Reaching%20Points.md)     \n[Pow(x, n)](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Pow(x%2C%20n).md)    \n[Sum of Square Numbers](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Sum%20of%20Square%20Numbers.md)     \n[Minimum Moves to Equal Array Elements](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Minimum%20Moves%20to%20Equal%20Array%20Elements.md)\n[Buying Show Tickets](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Buying%20Show%20Tickets.md)     \n[Count Duplicate Elements](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Count%20Duplicate%20Elements.md)   \n[Password Creation](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Password%20Creation.md)  \n\n</details>\n \n \n \n<details>\n<summary><strong>Two Pointers</strong></summary>\n  \n[0015. 3Sum](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0015.%203Sum.md)           \n[0016. 3Sum Closest](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0016.%203Sum%20Closest.md)\n[0283. Move Zeroes](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0283.%20Move%20Zeroes.md)\n\n</details>\n \n\n<details>\n<summary><strong>String</strong></summary>\n\n<ul>\n<details>\n<summary>Palindrome</summary>\n\n[0005. Longest Palindromic Substring](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0005.%20Longest%20Palindromic%20Substring.md).            \n[0009. Palindrome Number](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0009.%20Palindrome%20Number.md)       \n  \n</details>\n</ul>\n\n\n<ul>\n<details>\n  <summary> Uncategorized </summary>\n\n[0006. Zigzag Conversion](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0006.%20Zigzag%20Conversion.md)    \n[0007. Reverse Integer](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0007.%20Reverse%20Integer.md)      \n[0014. Longest Common Prefix](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0014.%20Longest%20Common%20Prefix.md)       \n[Reverse String](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Reverse%20String.md)    \n[Reverse Words in a String III](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Reverse%20Words%20in%20a%20String%20III.md)      \n[Longest Common Prefix](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Longest%20Common%20Prefix.md)    \n[Valid Palindrome II](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Valid%20Palindrome%20II.md)     \n[Longest Substring Without Repeating Characters](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Longest%20Substring%20Without%20Repeating%20Characters.md)   \n[Letter Combinations of a Phone Number](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Letter%20Combinations%20of%20a%20Phone%20Number.md)   \n[Generate Parentheses](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Generate%20Parentheses.md)   \n[Decode String](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Decode%20String.md)   \n[Longest Palindromic Substring](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Longest%20Palindromic%20Substring.md)   \n[Time Based Key-Value Store](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Time%20Based%20Key-Value%20Store.md)  \n[Longest String Chain](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Longest%20String%20Chain.md)  \n[Robot Bounded In Circle](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Robot%20Bounded%20In%20Circle.md)  \n[Word Break](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Word%20Break.md)    \n[Minimum Number of Steps to Make Two Strings Anagram](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Minimum%20Number%20of%20Steps%20to%20Make%20Two%20Strings%20Anagram.md)      \n[Reorganize String](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Reorganize%20String.md)    \n[Group Anagrams](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Group%20Anagrams.md)    \n[Shortest Word Distance II](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Shortest%20Word%20Distance%20II.md)          \n[Simplify Path](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Simplify%20Path.md)       \n[Search Suggestions System](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Search%20Suggestions%20System.md)           \n[Remove All Adjacent Duplicates in String II](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Remove%20All%20Adjacent%20Duplicates%20in%20String%20II.md)      \n[Fraction to Recurring Decimal](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Fraction%20to%20Recurring%20Decimal.md)     \n[Accounts Merge](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Accounts%20Merge.md)     \n[Longest Happy String](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Longest%20Happy%20String.md)    \n[Minimum Deletions to Make Character Frequencies Unique](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Minimum%20Deletions%20to%20Make%20Character%20Frequencies%20Unique.md)     \n \n</details>\n</ul>\n\n\n\n</details>\n\n<details>\n<summary><strong>Stack</strong></summary>\n\n[Buildings With an Ocean View](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Buildings%20With%20an%20Ocean%20View.md)    \n[Valid Parentheses](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Valid%20Parentheses.md)    \n[Minimum Remove to Make Valid Parentheses](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Minimum%20Remove%20to%20Make%20Valid%20Parentheses.md)  \n\n</details>\n\n<details>\n<summary><strong>Map</strong></summary>\n  \n[0560. Subarray Sum Equals K](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0560.%20Subarray%20Sum%20Equals%20K.md)\n  \n</details>\n\n<details>\n<summary><strong>Set</strong></summary>\n  \n[0003. Longest Substring Without Repeating Characters](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0003.%20Longest%20Substring%20Without%20Repeating%20Characters.md)     \n  \n</details>\n\n\n<details>\n<summary><strong>Object Manipulation</strong></summary>\n \n[0012. Integer to Roman](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0012.%20Integer%20to%20Roman.md)      \n[0013. Roman to Integer](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0013.%20Roman%20to%20Integer.md)           \n  \n</details>\n\n\n<details>\n<summary><strong>Linked-List </strong></summary>  \n  \n[0002. Add Two Numbers](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/0002.%20Add%20Two%20Numbers.md)    \n[206. Reverse Linked List](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/206.%20Reverse%20Linked%20List.md)     \n[Linked List Cycle](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Linked%20List%20Cycle.md)   \n[Middle of the Linked List](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Middle%20of%20the%20Linked%20List.md)    \n[Linked List Cycle II](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Linked%20List%20Cycle%20II.md)   \n[Add Two Numbers](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Add%20Two%20Numbers.md)  \n[Design Linked List](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Design%20Linked%20List.md)        \n[LRU Cache](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/LRU%20Cache.md)   \n\n</details>\n</ul>\n\n<details>\n<summary><strong>Tree</strong></summary>\n\n<ul>\n<details>\n  <summary> ⭐ </summary>\n\n[Binary Tree Preorder Traversal](https://github.com/cheatsheet1999/FrontEndCollection/issues/21)  \n[Binary Tree Inorder Traversal](https://github.com/cheatsheet1999/FrontEndCollection/issues/22)  \n\n</details>\n</ul>\n\n<ul>\n<details>\n  <summary> ⭐⭐ </summary>\n  \n[Construct Binary Tree from Preorder and Inorder Traversal](https://github.com/cheatsheet1999/FrontEndCollection/issues/8)  \n[Invert Binary Tree](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Invert%20Binary%20Tree.md)     \n[Lowest Common Ancestor of a Binary Tree](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Lowest%20Common%20Ancestor%20of%20a%20Binary%20Tree.md)        \n[Recover Binary Search Tree](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Recover%20Binary%20Search%20Tree.md)    \n\n</details>\n</ul>\n\n<ul>\n<details>\n  <summary> ⭐⭐⭐ </summary>\n  \n[Range Sum of BST](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Range%20Sum%20of%20BST.md)    \n[Binary Tree Vertical Order Traversal](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Binary%20Tree%20Vertical%20Order%20Traversal.md)   \n[Validate Binary Search Tree](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Validate%20Binary%20Search%20Tree.md)     \n[Sum Root to Leaf Numbers](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Sum%20Root%20to%20Leaf%20Numbers.md)       \n[Binary Tree Right Side View](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Binary%20Tree%20Right%20Side%20View.md)  \n\n</details>\n</ul>\n\n</details>\n\n<details>\n<summary><strong>Recursion & Backtracking</strong></summary>\n\n[Combinations](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Combinations.md)   \n\n</details>\n\n\n<details>\n<summary><strong>BFS & DFS</strong></summary>\n\n[Flood Fill](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Flood%20Fill.md)       \n[Max Area of Island](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Max%20Area%20of%20Island.md)     \n[Merge Two Binary Trees](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Merge%20Two%20Binary%20Trees.md)     \n[Populating Next Right Pointers in Each Node](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md)         \n[01 Matrix](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/01%20Matrix.md)   \n[Rotting Oranges](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Rotting%20Oranges.md)   \n[Number of Islands](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Number%20of%20Islands.md)    \n[Minimum Knight Moves](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Minimum%20Knight%20Moves.md)     \n\n</details>\n\n<details>\n<summary><strong>Binary Search</strong></summary>\n\n[Binary Search](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Binary%20Search.md)    \n[Find First and Last Position of Element in Sorted Array](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Find%20First%20and%20Last%20Position%20of%20Element%20in%20Sorted%20Array.md)     \n[Search in Rotated Sorted Array](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Search%20in%20Rotated%20Sorted%20Array.md)   \n[Find Peak Element](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Find%20Peak%20Element.md)\n\n</details>\n\n<details>\n<summary><strong>Database Management</strong></summary>\n  \n[Unit 2 Exploring Databases and SQL](https://github.com/cheatsheet1999/FrontEndCollection/issues/45)   \n[ER diagram, Relational Algebra, SQL / NOSQL](https://github.com/cheatsheet1999/FrontEndCollection/issues/14)     \n[Unit 3: Data Storage](https://github.com/cheatsheet1999/FrontEndCollection/issues/43)     \n[Unit 4: Data Indexing](https://github.com/cheatsheet1999/FrontEndCollection/issues/35)     \n[Unit 5: Transactions and Recovery](https://github.com/cheatsheet1999/FrontEndCollection/issues/39) \n[Unit 6: Concurrency](https://github.com/cheatsheet1999/FrontEndCollection/issues/40)   \n[Unit 1 - 6 Practice Questions Solutions](https://github.com/cheatsheet1999/FrontEndCollection/issues/47) \n\n</details>\n\n\n<details>\n  <summary><strong>TikTok 🎶</strong></summary>\n  \n  [Count Analogous Array](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Count%20Analogous%20Array.md)  \n  [Is this a tree](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Is%20this%20a%20tree.md)  \n  [Longest String Chain](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Longest%20String%20Chain.md)  \n  [Fizz Buzz](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Fizz%20Buzz.md)   \n  [Last and Second Last](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Last%20and%20Second%20Last.md)  \n  [Custom Sorted Array](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Custom%20Sorted%20Array.md)      \n  [Gas Station](https://github.com/cheatsheet1999/FrontEndCollection/issues/15)  \n  [Minimum Number of Steps to Make Two Strings Anagram](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Minimum%20Number%20of%20Steps%20to%20Make%20Two%20Strings%20Anagram.md)     \n  [Count Binary Substrings](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Count%20Binary%20Substrings.md)    \n  [Anagram Difference](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Anagram%20Difference.md)    \n  [Counting Analogous Arrays](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Counting%20Analogous%20Arrays.md)  \n  [Reformat Date](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Reformat%20Date.md)    \n  [Alaaddin Carpet](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Alaaddin%20Carpet.md)    \n  [Reaching Points](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/Reaching%20Points.md)   \n  [OA with not answers](https://github.com/cheatsheet1999/FrontEndCollection/blob/main/JS-Algo/OA%20with%20not%20answers.md)   \n  \n</details>\n\n\n***\n<p><em>🤯 If you find errors in the content of this project, don't hesitate to submit issues or pull requests on GitHub for corrections, I really, really appreciate it</em></p>\n<p><em>🤯如果你发现本项目有任何内容上的错误，欢迎在 GitHub 提交 issues 或者 pull requests 进行打脸</em></p>\n"
        },
        {
          "name": "React-Day",
          "type": "tree",
          "content": null
        },
        {
          "name": "TS-Day",
          "type": "tree",
          "content": null
        },
        {
          "name": "Web-Note",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}