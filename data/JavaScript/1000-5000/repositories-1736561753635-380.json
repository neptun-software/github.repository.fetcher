{
  "metadata": {
    "timestamp": 1736561753635,
    "page": 380,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MonsterNone/tmall-miao",
      "stars": 4006,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.9580078125,
          "content": "# 2024 618活动已发布！\n\n- 京东请切换tbs内核运行。\n\n1. 给京东客服发送 debugtbs.qq.com，然后点击打开\n2. 选择安装线上内核，安装完成之后自动重启，选择DebugX5，不显示`请先安装内核`则为成功。否则请强行停止京东APP，重复步骤。\n3. 运行任务尝试\n\n- lsposed用户如果无法顺利进行，请把lsposed降级到1.8.6。\n\n## 使用方法\n\n### 打包版\n打包版已做防检测处理，支持从仓库热更新代码，推荐直接使用\n[打包版下载](https://github.com/MonsterNone/tmall-miao/releases)\n\n### 源码运行\n安装autoxjs后导入代码，点击运行即可。\n\n---\n\n防止无脑二次打包，本仓库仅放置做任务代码（可直接在autojs或autoxjs中运行），ui页面和热更新相关代码不在此展示，尽情谅解。\n\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/MonsterNone/tmall-miao.svg)](https://starchart.cc/MonsterNone/tmall-miao)\n\n"
        },
        {
          "name": "start.js",
          "type": "blob",
          "size": 17.236328125,
          "content": "const VERSION = '20231111-AD'\n\nif (!auto.service) {\n    toast('无障碍服务未启动！退出！')\n    exit()\n}\n\nlet showVersion = function () {\n    console.log('当前版本：' + VERSION)\n    console.log('https://github.com/monsternone/tmall-miao')\n    toast('当前版本：' + VERSION)\n}\n\n// alert('请把手机放稳，不要摇晃！', '不然有时候会跳出合伙赢喵币，导致任务阻塞')\n\nconsole.show()\nshowVersion()\n\nfunction getSetting() {\n    let indices = []\n    autoOpen && indices.push(0)\n    autoMute && indices.push(1)\n    indices.push(2)\n\n    let settings = dialogs.multiChoice('任务设置', ['自动打开淘宝进入活动。多开或任务列表无法自动打开时取消勾选（注意，分身运行淘宝大概率导致任务收益变为100）', '自动调整媒体音量为0。以免直播任务发出声音，首次选择需要修改系统设置权限', '此选项用于保证选择的处理，勿动！'], indices)\n\n    if (settings.length == 0) {\n        toast('取消选择，任务停止')\n        exit()\n    }\n\n    if (settings.indexOf(0) != -1) {\n        storage.put('autoOpen', true)\n        autoOpen = true\n    } else {\n        storage.put('autoOpen', false)\n        autoOpen = false\n    }\n    if (settings.indexOf(1) != -1) {\n        storage.put('autoMute', true)\n        autoMute = true\n    } else {\n        storage.put('autoMute', false)\n        autoMute = false\n    }\n}\n\nlet storage = storages.create(\"tb_task\");\nlet autoOpen = storage.get('autoOpen', true)\nlet autoMute = storage.get('autoMute', true)\ngetSetting()\n\nif (autoMute) {\n    try {\n        device.setMusicVolume(0)\n        toast('成功设置媒体音量为0')\n    } catch (err) {\n        alert('首先需要开启权限，请开启后再次运行脚本')\n        exit()\n    }\n}\n\nconsole.log('开始完成喵币任务...')\nconsole.log('按音量下键停止')\n\ndevice.keepScreenDim(60 * 60 * 1000)\n\nlet startCoin;\n\nfunction registerKey() {\n    try {\n        events.observeKey()\n    } catch (err) {\n        console.log('监听音量键停止失败，应该是无障碍权限出错，请关闭软件后台任务重新运行。')\n        console.log('如果还是不行可以重启手机尝试。')\n        quit()\n    }\n    events.onKeyDown('volume_down', function (event) {\n        console.log('喵币任务脚本停止了')\n        console.log('请手动切换回主页面')\n        if (startCoin) {\n            console.log('本次任务开始时有', startCoin, '万喵币')\n        }\n        device.cancelKeepingAwake()\n        exit()\n    })\n}\nthreads.start(registerKey)\n\n// 全局try catch，应对无法显示报错\ntry {\n\n    // 自定义去取消亮屏的退出方法\n    function quit() {\n        device.cancelKeepingAwake()\n        exit()\n    }\n\n    // 自定义一个findTimeout，find_f是原本的查询器 text('sss').find()\n    function findTimeout(findF, timeout) {\n        let c = 0\n        while (c < timeout / 500) {\n            let result = findF.find()\n            if (result.nonEmpty()) return result\n            sleep(500)\n            c++\n        }\n        return null\n    }\n\n    // 自定义一个findTextDescMatchesTimeout\n    function findTextDescMatchesTimeout(reg, timeout) {\n        let c = 0\n        while (c < timeout / 50) {\n            let result = textMatches(reg).findOnce() || descMatches(reg).findOnce()\n            if (result) return result\n            sleep(50)\n            c++\n        }\n        return null\n    }\n\n    // 查找任务按钮\n    function findTask() {\n        var jumpButtonFind = textMatches(/.*(去浏览|去搜索|去完成|立即签到|去逛逛|去观看|去参赛).*/) // 找进入任务的按钮，10秒\n        var jumpButtons = findTimeout(jumpButtonFind, 10000)\n\n        if (!jumpButtons) {\n            return null\n        }\n\n        for (var i = 0; i < jumpButtons.length; i++) {\n            var taskName, content\n            try {\n                taskName = jumpButtons[i].parent().child(0).child(0).text()\n                content = jumpButtons[i].parent().child(0).child(1).text()\n            } catch (err) {\n                console.log(err)\n                console.log('使用第二种方法尝试')\n                try {\n                    content = jumpButtons[i].parent().child(0).child(1).child(0).text()\n                    console.log('成功，继续任务')\n                }\n                catch (err) {\n                    continue\n                }\n            }\n            if (taskName) {\n                if (taskName.match(/签到/)) {\n                    console.log('进行签到任务')\n                    sleep(1000)\n                    jumpButtons[i].click()\n                    sleep(8000)\n                    return findTask()\n                }\n                console.log(taskName, '\"' + content + '\"')\n                if (!(taskName.match(/首页|提醒|开通|捕鱼|续费|乐园|斗地主|消消|流浪猫|开88|扔喵币|占领|邀请|登录|组队|参与|施肥|浇水|特价版|小鸡|消除|穿搭|森林|点淘|人生|我的淘宝|庄园|支付宝|点击人物|省钱卡|年卡|积分|答题|分享|订阅|连连消|月月有余|守护|大作战/))) {\n                    // 应对content为空的情况\n                    if (content) {\n                        if (content.match(/浏览|点击|小游戏/)) {\n                            return [taskName, jumpButtons[i], content]\n                        }\n                    } else {\n                        return [taskName, jumpButtons[i], content]\n                    }\n                }\n            }\n        }\n        return null\n    }\n\n    function backToList() {\n        console.log('返回')\n        if (textContains('当前已有金币').exists()) {\n            console.log('已在任务列表')\n            return\n        }\n        back()\n        sleep(1000)\n        let flag = 0\n        for (let i = 0; i < 3; i++) {\n            if (!textContains('当前已有金币').findOne(5000)) {\n                if (currentActivity() == 'com.taobao.tao.TBMainActivity') {\n                    console.log('返回到了主页，请重新运行任务！')\n                    quit()\n                } else {\n                    console.log('似乎没有返回，二次尝试')\n                    back()\n                }\n            } else {\n                flag = 1\n                break\n            }\n        }\n        if (flag != 1) {\n            console.log('返回任务界面失败！退出运行，请重试！')\n            quit()\n        }\n    }\n\n    function liulan() {\n        // if (textMatches(/.*浏览.*/).findOne(10000)) { // 等待浏览出现\n        //     let v = className('android.support.v7.widget.RecyclerView').findOnce() // 滑动\n        //     if (v) {\n        //         sleep(1000)\n        //         v.scrollForward()\n        //     }\n        // }\n\n        // textMatches(/.*浏览得奖励.*/).findOne(15000) // 等待开始\n        let finish_c = 0\n        let countdown = 0\n        console.log('开始检测任务完成，部分控件无法检测，会在30秒后自动返回，请耐心等待。')\n        while (finish_c < 60) { // 0.5 * 60 = 30 秒，防止死循环\n            if (finish_c > 2 && textMatches(/.*下拉浏览.*|.*浏览最高得.*|.*浏览得奖励.*/).exists()) {\n                console.log('进行模拟滑动')\n                swipe(device.width / 2, device.height - 300, device.width / 2 + 20, device.height - 500, 1000)\n                finish_c = finish_c + 2\n                continue\n            }\n            let finish_reg = /.*任务.*?完成[\\s\\S]*?|.*失败.*|.*上限.*|.*开小差.*|.*喵币已发放[\\s\\S]*|.*下单可获得[\\s\\S]*|任务已经/\n            if (textMatches(finish_reg).exists() || descMatches(finish_reg).exists()) { // 等待已完成出现，有可能失败\n                break\n            }\n            if (countdown == 0 && idContains('countdown').exists()) {\n                countdown = 1\n                break\n            }\n            if (textMatches(/.*休息会呗.*|.*下方滑块.*/).exists()) {\n                alert('触发淘宝验证', '请手动验证后返回淘宝首页，重新执行任务')\n                console.log('异常退出。')\n                quit()\n            }\n            if (textMatches(/.*版本.*低.*/).exists()) {\n                alert('触发淘宝版本问题', '避免死循环，退出')\n                console.log('异常退出。')\n                quit()\n            }\n            if (textContains('互动奖励').exists() ||\n                descContains('互动奖励').exists()) {\n                console.log('跳过互动任务')\n                break\n            }\n            if (text('手机淘宝触屏版').exists()) {\n                console.log('页面未加载，返回')\n                break\n            }\n            if (text('宝贝口袋').exists()) {\n                let cart = text('购物车').findOnce()\n                let x = cart.bounds().right\n                let y = cart.bounds().top\n                console.log('关闭直播购物车')\n                click(x, y - 100)\n            }\n            if (text('立即关注得喵币').exists()) {\n                console.log('关注直播间任务，点击关注按钮')\n                text('立即关注得喵币').click()\n                sleep(1000)\n                break\n            }\n            if (finish_c > 4 && finish_c % 5 == 0 && !text('更多直播').exists()  && !text('视频').exists()) {\n                console.log('滑动防止页面卡顿')\n                swipe(device.width / 2, device.height - 300, device.width / 2 + 20, device.height - 500, 1000)\n                finish_c = finish_c + 2\n            }\n            sleep(500)\n            finish_c++\n        }\n\n        if (countdown) {\n            console.log('出现图片类型标识，使用新方法完成，18秒后视为任务完成，自动返回')\n            sleep(18000)\n        }\n\n        if (finish_c > 59) {\n            console.log('未检测到任务完成标识。返回。')\n            // console.log('如果你认为这是一个bug请截图反馈。')\n            // console.log('一般情况下，二次运行脚本即可。')\n            // console.log('请手动切换回主页面')\n            // device.cancelKeepingAwake()\n            // quit()\n            if (textContains('当前已有金币').exists()) {\n                console.log('店铺已主动返回，继续任务')\n                return\n            }\n            backToList()\n            return\n        }\n\n        console.log('任务结束，返回')\n\n        backToList()\n        return\n    }\n\n    // 喵币数量\n    function getCoin() {\n        console.log('获取喵币数量')\n        try {\n            let e = textContains('当前已有金币').findOnce()\n            let num = e.parent().child(2).child(1).text().match(/([\\d\\.]*)万\\//)[1]\n            console.log('当前共有', num, '喵币')\n            return num\n        } catch (err) {\n            console.log(err)\n            console.log('获取喵币数量错误，不影响脚本运行')\n            return null\n        }\n    }\n\n    try {\n        if (autoOpen) {\n            // 打开淘宝活动页面\n            console.log('正在打开淘宝...')\n            var url = 'pages.tmall.com/wow/z/hdwk/d11fy24/singleplayer?disableNav=YES&qd_from=tbsyicon'\n\n            app.startActivity({\n                action: \"VIEW\",\n                data: \"taobao://\" + url\n            })\n            sleep(2000)\n\n            console.log('等待页面加载...')\n            textContains('戳我赚金币').findOne(20000)\n            console.log('准备打开任务列表')\n            // sleep(10000)\n\n            let c = textContains('戳我赚金币').findOne(20000)\n            if (c) {\n                console.log('使用默认方法尝试打开任务列表')\n                sleep(1000)\n                c.parent().parent().child(c.parent().parent().childCount()-2).click()\n                sleep(1000)\n                c.click()\n                console.log('已点击，未能打开建议手动点击一下任务列表。此问题并非bug，和网络以及设备性能有关。')\n                console.log('检测任务列表，准备进行二次尝试')\n            } else {\n                throw '无法找到任务列表入口'\n            }\n            if (!textContains('当前已有金币').findOne(8000)) {\n                console.log('默认方式打开失败，二次尝试')\n                console.log('首先检测弹窗')\n                for (let i = 0; i < 2 && text('关闭').findOne(2000); i++) { // 关闭弹窗\n                    console.log('检测到弹窗，关闭')\n                    click('关闭')\n                    sleep(2000)\n                }\n                console.log('已试图自动关闭弹窗。有未能自动关闭的弹窗请手动关闭')\n                sleep(5000)\n                c = c.parent().parent().child(c.parent().parent().childCount()-2)\n                click(c.bounds().centerX(), c.bounds().centerY())\n                console.log('已点击，等待任务列表出现')\n                if (!textContains('当前已有金币').findOne(8000)) {\n                    throw '无法打开任务列表'\n                }\n            }\n        } else {\n            console.log('请在30秒内打开淘宝活动页，并打开任务列表')\n            if (textContains('当前已有金币').findOne(30000)) {\n                console.log('已打开，继续任务')\n            } else {\n                console.log('未能检测到任务列表，退出')\n                quit()\n            }\n        }\n        console.log('准备搜索任务')\n        sleep(2000)\n    } catch (err) {\n        console.log(err)\n        console.log('无法进入任务列表，如果你认为这是bug，请截图反馈。注意！1级没法做任务，请先升到2级！')\n        quit()\n    }\n\n    startCoin = getCoin()\n\n    while (true) {\n        console.log('寻找任务入口...')\n        var jumpButton = findTask()\n\n        if (jumpButton == null) {\n            // 没有任务之后领取奖励\n            var awardButtonFind = textMatches(/立即领取|领取奖励/)\n            var awardButtons = findTimeout(awardButtonFind, 10000)\n\n            if (awardButtons) {\n                for (var i = 0; i < awardButtons.length; i++) {\n                    console.log('领取当前已有金币')\n                    awardButtons[i].click()\n                    console.log('等待5秒再次领取...')\n                    sleep(5000)\n                }\n            }\n\n            const endCoin = getCoin()\n\n            console.log('没找到合适的任务。也许任务已经全部做完了。退出。互动任务不会自动完成。')\n            console.log('请手动切换回主页面')\n            if (startCoin && endCoin) {\n                console.log('本次任务共获得', (endCoin - startCoin), '万喵币')\n            }\n            alert('任务已完成', '别忘了在脚本主页领取双十一红包！互动任务需要手动完成。')\n            quit()\n        }\n\n        if (jumpButton[0].match('去浏览店铺领能量')) {\n            console.log('进行浏览店铺任务')\n            jumpButton[1].click()\n            while (!textContains('任务完成').exists()) {\n                console.log('进入店铺浏览')\n                text('逛店最多').findOne(15000).parent().click()\n                liulan()\n                sleep(2000)\n            }\n            backToList()\n        } else if (jumpButton[0].match(/养猪|台球/)) {\n            console.log('进行' + jumpButton[0] + '任务，20秒后返回')\n            jumpButton[1].click()\n            sleep(20000)\n            backToList()\n        } else if (jumpButton[0].match(/领现金/)) {\n            console.log('进行' + jumpButton[0] + '任务')\n            jumpButton[1].click()\n            let into = text('打开链接').findOne(10000)\n            if (!into) {\n                console.log('无法找到进入领现金的按钮！')\n                quit()\n            }\n            into.click()\n            liulan()\n        } else if (jumpButton[0].match(/搜一搜[^#]/)) {\n            console.log('进行' + jumpButton[0] + '任务')\n            jumpButton[1].click()\n            console.log('等待搜索')\n            sleep(2000)\n            let anchor = className(\"Button\").text('搜索').findOne(8000)\n            try {\n                let listView = className('android.widget.ListView').findOne(2000).child(0)\n                if (listView.childCount() == 1) {\n                    listView.child(0).click()\n                } else {\n                    listView.child(1).click()\n                }\n            } catch (e) {\n                console.log('无法获取推荐搜索列表，使用自定义搜索')\n                anchor.parent().child(1).setText('iphone')\n                anchor.click()\n            }\n            liulan()\n            sleep(1000)\n            backToList()\n        } else if (jumpButton[2].match(/小游戏/)) {\n            console.log('出现互动任务，尝试刷新')\n            jumpButton[1].click()\n            sleep(3000)\n            backToList()\n        } else {\n            console.log('进行' + jumpButton[0] + '任务')\n            jumpButton[1].click()\n            liulan()\n        }\n\n        console.log('等待页面刷新...')\n        sleep(2000)\n    }\n} catch (err) {\n    device.cancelKeepingAwake()\n    if (err.toString() != 'JavaException: com.stardust.autojs.runtime.exception.ScriptInterruptedException: null') {\n        console.error(err)\n    }\n    showVersion()\n}\n"
        },
        {
          "name": "start_jd.js",
          "type": "blob",
          "size": 25.384765625,
          "content": "const VERSION = '20240618-K'\n\nif (!auto.service) {\n    toast('无障碍服务未启动！退出！')\n    exit()\n}\n\nlet showVersion = function () {\n    console.log('当前版本：' + VERSION)\n    console.log('https://github.com/monsternone/tmall-miao')\n    toast('当前版本：' + VERSION)\n}\n\nconsole.show()\nshowVersion()\n\nfunction getSetting() {\n    let indices = []\n    autoOpen && indices.push(0)\n    autoMute && indices.push(1)\n    autoJoin && indices.push(2)\n    indices.push(3)\n\n    let settings = dialogs.multiChoice('任务设置', ['自动打开京东进入活动。多开或任务列表无法自动打开时取消勾选', '自动调整媒体音量为0。以免直播任务发出声音，首次选择需要修改系统设置权限', '自动完成入会任务。京东将授权手机号给商家，日后可能会收到推广短信', '此选项用于保证选择的处理，勿动！'], indices)\n\n    if (settings.length == 0) {\n        toast('取消选择，任务停止')\n        exit()\n    }\n\n    if (settings.indexOf(0) != -1) {\n        storage.put('autoOpen', true)\n        autoOpen = true\n    } else {\n        storage.put('autoOpen', false)\n        autoOpen = false\n    }\n    if (settings.indexOf(1) != -1) {\n        storage.put('autoMute', true)\n        autoMute = true\n    } else {\n        storage.put('autoMute', false)\n        autoMute = false\n    }\n    if (settings.indexOf(2) != -1) {\n        storage.put('autoJoin', true)\n        autoJoin = true\n    } else {\n        storage.put('autoJoin', false)\n        autoJoin = false\n    }\n}\n\nlet storage = storages.create(\"jd_task\");\nlet autoOpen = storage.get('autoOpen', true)\nlet autoMute = storage.get('autoMute', true)\nlet autoJoin = storage.get('autoJoin', true)\ngetSetting()\n\nif (autoMute) {\n    try {\n        device.setMusicVolume(0)\n        toast('成功设置媒体音量为0')\n    } catch (err) {\n        alert('首先需要开启修复音量权限，请开启后再次运行脚本')\n        exit()\n    }\n}\n\nconsole.log('开始完成京东任务...')\nconsole.log('按音量下键停止')\n\ndevice.keepScreenDim(30 * 60 * 1000) // 防止息屏30分钟\n\n// 自定义取消亮屏的退出方法\nfunction quit() {\n    device.cancelKeepingAwake()\n    exit()\n}\n\n// 监听音量下键\nfunction registerKey() {\n    try {\n        events.observeKey()\n    } catch (err) {\n        console.log('监听音量键停止失败，应该是无障碍权限出错，请关闭软件后台任务重新运行。')\n        console.log('如果还是不行可以重启手机尝试。')\n        quit()\n    }\n    events.onKeyDown('volume_down', function (event) {\n        console.log('京东任务脚本停止了')\n        console.log('请手动切换回主页面')\n        startCoin && console.log('本次任务开始时有' + startCoin + '刮刮卡')\n        quit()\n    })\n}\nthreads.start(registerKey)\n\n// 自定义一个findTextDescMatchesTimeout\nfunction findTextDescMatchesTimeout(reg, timeout) {\n    let c = 0\n    while (c < timeout / 500) {\n        let result = textMatches(reg).findOnce() || descMatches(reg).findOnce()\n        if (result) return result\n        sleep(500)\n        c++\n    }\n    return null\n}\n\n// 打开京东进入活动\nfunction openAndInto() {\n    console.log('正在打开京东App...')\n    if (!launch('com.jingdong.app.mall')) {\n        console.log('可能未安装京东App')\n    } else {\n        console.log('等待京东打开')\n        for (let i = 0; i < 20; i++) {\n            if (currentPackage() == 'com.jingdong.app.mall') break\n            sleep(400)\n        }\n        if (currentPackage() != 'com.jingdong.app.mall') {\n            console.log('程序检测京东app打开失败，请注意')\n        }\n    }\n\n    sleep(2000)\n    console.log('进入活动页面')\n\n    app.startActivity({\n        action: \"VIEW\",\n        data: 'openApp.jdMobile://virtual?params={\"category\":\"jump\",\"action\":\"to\",\"des\":\"m\",\"sourceValue\":\"JSHOP_SOURCE_VALUE\",\"sourceType\":\"JSHOP_SOURCE_TYPE\",\"url\":\"https://pro.m.jd.com/mall/active/3uT8xr7BvwiWmif5m2h9j1zeKgBG/index.html?babelChannel=ttt5&hybrid_err_view=1&commontitle=no&disablePageSticky=1\",\"M_sourceFrom\":\"mxz\",\"msf_type\":\"auto\"}'\n    })\n}\n\n// 获取刮刮卡数量\nfunction getCoin() {\n    let anchor = text('还剩').findOne(5000)\n    if (!anchor) {\n        console.log('找不到累计控件')\n        return false\n    }\n    let coin = anchor.parent().child(1).text()\n    if (coin) {\n        return parseInt(coin)\n    } else {\n        return false\n    }\n}\n\n// 打开任务列表\nfunction openTaskList() {\n    console.log('打开任务列表')\n    let taskListButton = text('得刮刮卡').findOne(20000)\n\n    if (!taskListButton) {\n        console.log('无法找到任务列表控件，请参照软件内的说明更换web内核。')\n        quit()\n    }\n    taskListButton.click()\n    console.log('等待任务列表')\n    if (!idContains('taskContainer').findOne(5000)) {\n        console.log('似乎没能打开任务列表，重试')\n        taskListButton.click()\n    }\n\n    if (!idContains('taskContainer').findOne(5000)) {\n        console.log('似乎没能打开任务列表，退出！')\n        console.log('如果已经打开而未检测到，请参照软件内的说明更换web内核。')\n        quit()\n    }\n}\n\n// 关闭任务列表\nfunction closeTaskList() {\n    console.log('关闭任务列表')\n    let anchor = idContains('taskContainer').findOne(5000)\n    if (!anchor) {\n        console.log('无法找到任务列表标识')\n        return false\n    }\n\n    anchor = anchor.parent()\n\n    let closeBtn = anchor.child(anchor.childCount() - 2) // tbs\n    if (!closeBtn.clickable()) {\n        closeBtn = anchor.child(anchor.childCount() - 1) // webview\n    }\n\n    return closeBtn.click()\n}\n\n// 重新打开任务列表\nfunction reopenTaskList() {\n    sleep(1000)\n    closeTaskList()\n    sleep(500)\n    openTaskList()\n}\n\n// 获取未完成任务，根据数字标识，返回任务按钮、任务介绍、任务数量（数组）\nfunction getTaskByText() {\n    let tButton = null,\n        tText = null,\n        tCount = 0,\n        tTitle = null\n    console.log('寻找未完成任务...')\n    let anchor = textMatches(/^(去完成|去打卡)$/).findOnce()\n    if (anchor) { // 如果找不到任务，直接返回\n        let tasks = anchor.parent().parent().children()\n        // tasks.pop()\n        // console.log(tasks[0].child(2))\n\n        for (let i = 0; i < tasks.length; i++) {\n            let task = tasks[i]\n            try {\n                tTitle = task.child(1).text()\n\n                let r = task.child(2).text().match(/(\\d*)\\/(\\d*)/)\n                if (!r) continue\n                tCount = (r[2] - r[1])\n\n                // console.log(tTitle, tCount)\n\n                button = task.child(4)\n\n                if (tCount) { // 如果数字相减不为0，证明没完成\n                    tText = task.child(3).text()\n                    if (!autoJoin && tText.match(/入会|成为会员/)) continue\n                    if (tTitle.match(/下单|小程序|裂变|白条|小游戏|更多好物|LBS|PLUS|购买商品|订阅/) || tText.match(/绑卡/)) continue\n                    tButton = button\n                    break\n                }\n            } catch (err) {\n                console.log(err)\n            }\n        }\n    } else {\n        console.log('任务提示未找到')\n    }\n    return [tButton, tText, tCount, tTitle]\n}\n\n// 返回任务列表并检查是否成功，不成功重试一次，带有延时\nfunction backToList() {\n    if (idContains('taskContainer').findOnce()) {\n        console.log('已经在任务列表')\n        return\n    }\n    sleep(500)\n    back()\n    for (let i = 0; i < 5; i++) { // 尝试返回3次\n        if (!idContains('taskContainer').findOne(2000)) {\n            console.log('返回失败，重试返回')\n            sleep(2000)\n            back()\n            continue\n        } else {\n            break\n        }\n    }\n    sleep(3000)\n}\n\n// 浏览n秒的任务\nfunction timeTask() {\n    console.log('浏览任务8秒后自动返回...')\n    sleep(8000)\n    // let c = 0\n    // while (c < 60) { // 0.5 * 40 = 20 秒，防止死循环\n    //     if ((textMatches(/获得.*?刮刮卡/).exists() || descMatches(/获得.*?刮刮卡/).exists())) // 等待已完成出现\n    //         break\n    //     if ((textMatches(/已.*?浏.*?览/).exists() || descMatches(/已.*?浏.*?览/).exists())) { // 失败\n    //         console.log('上限，返回刷新任务列表')\n    //         return false\n    //     }\n    //     if ((textMatches(/出.*?错.*?了/).exists() || descMatches(/出.*?错.*?了/).exists())) {\n    //         console.log('任务出错，返回刷新任务列表')\n    //         return false\n    //     }\n    //     if (textMatches(/.*滑动浏览.*[^可]得.*/).exists()) {\n    //         console.log('进行模拟滑动')\n    //         swipe_flag = 1\n    //         swipe(device.width / 2, device.height - 300, device.width / 2 + 20, device.height - 500, 1000)\n    //         c = c + 2\n    //     }\n\n    //     // // 弹窗处理\n    //     // let pop = text('升级开卡会员领好礼')\n    //     // if (pop.exists()) {\n    //     //     pop.findOnce().parent().parent().child(2).click()\n    //     //     console.log('关闭会员弹窗')\n    //     // }\n\n    //     sleep(500)\n    //     c++\n    // }\n    // if (c > 59) {\n    //     console.log('未检测到任务完成标识。')\n    //     return false\n    // }\n    console.log('已完成，准备返回')\n    return true\n}\n\n// 入会任务\nfunction joinTask() {\n    let check = textMatches(/.*确认授权即同意.*|.*我的特权.*|.*立即开卡.*|.*解锁全部会员福利.*/).findOne(8000)\n    if (!check) {\n        console.log('无法找到入会按钮，判定为已经入会')\n        return true\n    } else if (check.text().match(/我的特权/)) {\n        console.log('已经入会，返回')\n        return true\n    } else {\n        sleep(2000)\n        if (check.text().match(/.*立即开卡.*|.*解锁全部会员福利.*|授权解锁/)) {\n            if (check.text() == '授权信息，解锁全部会员福利') {\n                check = text('去升级').findOnce()\n                if (!check) {\n                    console.log('此类型无法找到升级按钮，入会失败')\n                    return false\n                }\n            }\n\n            let btn = check.bounds()\n            console.log('即将点击开卡/解锁福利/升级，自动隐藏控制台')\n            sleep(500)\n            console.hide()\n            sleep(500)\n            click(btn.centerX(), btn.centerY())\n            sleep(500)\n            console.show()\n            sleep(5000)\n            check = textMatches(/.*确认授权即同意.*/).boundsInside(0, 0, device.width, device.height).findOne(8000)\n        }\n\n        if (!check) {\n            console.log('无法找到入会按钮弹窗，加载失败')\n            return false\n        }\n\n        if (check.indexInParent() == 2) {\n            check = check.parent().child(1)\n        } else if (check.indexInParent() == 0) {\n            check = check.parent().parent().child(0)\n        } else {\n            let anchor = textContains('****').findOnce()\n            check = anchor.parent().child(anchor.indexInParent() + 2)\n            if (!check.bounds().top >= anchor.bounds().bottom) {\n                console.log('使用第二种方法获取控件')\n                let check1 = anchor.parent().children().findOne(filter(function (w) {\n                    if (w.className().match(/ImageView/) && w.bounds().top >= anchor.bounds().bottom) {\n                        return true\n                    } else {\n                        return false\n                    }\n                }))\n                if (!check1) {\n                    console.log('第二种方法也无法确认授权勾选框，失败。返回。')\n                    return false\n                } else {\n                    check = check1\n                    console.log('成功，继续')\n                }\n            }\n        }\n\n        console.log(\"最终[确认授权]前面选项框坐标为:\", check.bounds());\n        let x = check.bounds().centerX()\n        let y = check.bounds().centerY()\n\n        console.log('检测是否有遮挡')\n        let float = className('android.widget.ImageView')\n            .filter(function (w) {\n                let b = w.bounds()\n                return b.left <= x && b.right >= x && b.top <= y && b.bottom >= y && b.centerX() != x && b.centerY() != y\n            }).findOnce()\n\n        if (float) {\n            console.log('有浮窗遮挡，尝试移除')\n            if (device.sdkInt >= 24) {\n                gesture(1000, [float.bounds().centerX(), float.bounds().centerY()], [float.bounds().centerX(), y + float.bounds().height()])\n                console.log('已经进行移开操作，如果失败请反馈')\n            } else {\n                console.log('安卓版本低，无法自动移开浮窗，入会任务失败。至少需要安卓7.0。')\n                return false\n            }\n        } else {\n            console.log('未发现遮挡的浮窗，继续勾选')\n        }\n\n        console.log('即将勾选授权，自动隐藏控制台')\n        sleep(500)\n        console.hide()\n        sleep(1000)\n        click(x, y)\n        sleep(500)\n        console.show()\n\n        console.log('准备点击入会按钮')\n        let j = textMatches(/^确认授权(并加入店铺会员)*$|.*立即开通.*/).findOne(5000)\n        if (!j) {\n            console.log('无法找到入会按钮，失败')\n            return false\n        }\n        sleep(1000)\n        click(j.bounds().centerX(), j.bounds().centerY())\n        sleep(1000)\n        console.log('入会完成，返回')\n        return true\n    }\n}\n\n// 浏览商品和加购的任务，cart参数为是否加购的flag\nfunction itemTask(cart) {\n    console.log('等待进入商品列表...')\n    let anchor = textContains('当前页').findOne(20000)\n    if (!anchor) {\n        console.log('未能进入商品列表。')\n        return false\n    }\n    sleep(2000)\n\n    if (anchor.parent().childCount() == 4) {\n        console.log('任务重复完成，返回')\n        return false\n    }\n\n    let items = textContains('.jpg!q70').find()\n    for (let i = 0; i < items.length; i++) {\n        console.log('浏览')\n        let tmp = items[i].parent().parent()\n        tmp.child(tmp.childCount() - 1).click()\n\n        sleep(5000)\n        console.log('返回')\n        back()\n        sleep(5000)\n        let r = textContains('当前页').findOnce()\n        if (!r) {\n            back()\n            sleep(5000)\n        }\n        if (i >= 4 - 1) {\n            break\n        }\n    }\n    return true\n}\n\n// 逛店任务 TODO: 618版本\nfunction shopTask() {\n    console.log('等待进入店铺列表...')\n    let banner = textContains('喜欢').findOne(10000)\n    if (!banner) {\n        console.log('未能进入店铺列表。返回。')\n        return false\n    }\n    let c = banner.text().match(/(\\d)\\/(\\d*)/)\n    if (!c) {\n        c = 4 // 进行4次\n    } else {\n        c = c[2] - c[1]\n    }\n    sleep(2000)\n    console.log('进行', c, '次')\n    let like = text('喜欢').boundsInside(1, 0, device.width, device.height).findOnce()\n    if (!like) {\n        console.log('未能找到喜欢按钮。返回。')\n        return false\n    }\n    let bound = [like.bounds().centerX(), like.bounds().centerY()]\n    console.log('喜欢按钮位于', bound)\n    for (let i = 0; i < c; i++) {\n        click(bound[0], bound[1])\n        console.log('浏览店铺页')\n        sleep(8000)\n        console.log('返回')\n        back()\n        sleep(5000)\n        let r = textContains('喜欢').findOnce()\n        if (!r) {\n            back()\n            sleep(5000)\n        }\n    }\n    return true\n}\n\n// 参观任务\nfunction viewTask() {\n    console.log('进行参观任务')\n    sleep(5000)\n    console.log('参观任务直接返回')\n    return true\n}\n\n// 品牌墙任务 TODO: 618版本\nfunction wallTask() {\n    console.log('进行品牌墙任务')\n    sleep(3000)\n    for (let i of [2, 3, 4, 5, 6]) { // 选5个\n        console.log('打开一个')\n        textContains('!q70').boundsInside(100, 100, device.width, device.height).findOnce(i).click()\n        sleep(5000)\n        console.log('直接返回')\n        back()\n        let r = textContains('!q70').findOne(8000)\n        if (!r) back()\n        sleep(3000)\n    }\n    // console.log('返回顶部')\n    // let root = textContains('到底了').findOnce().parent().parent()\n    // root.child(root.childCount() - 2).click()\n    console.log('品牌墙完成后重新打开任务列表')\n    sleep(3000)\n    openTaskList()\n    return true\n}\n\n// 单个任务的function，自动进入任务、自动返回任务列表，返回boolean\nfunction doTask(tButton, tText, tTitle) {\n    let clickFlag = tButton.click()\n    // sleep(100);tButton.click();sleep(100);tButton.click() // 可能的阻碍\n    let tFlag\n\n    if (tButton.text() == '去领取') {\n        tFlag = clickFlag // 打卡点击一次即可\n        return tFlag\n    }\n\n    // if (tText.match(/品牌墙/) || tTitle.match(/品牌墙/)) {\n    //     if (tTitle.match(/浏览更多权益/)) {\n    //         console.log('简单品牌墙任务，等待10s')\n    //         sleep(10000)\n    //         return true\n    //     }\n    //     tFlag = wallTask()\n    //     return tFlag // 品牌墙无需backToList，提前返回\n    // } else \n    if (tText.match(/浏览.*秒|s/)) {\n        console.log('进行', tText)\n        tFlag = timeTask()\n    }\n    // else if (tText.match(/累计浏览/)) {\n    //     console.log('进行累计浏览任务')\n    //     if (tText.match(/加购/)) {\n    //         tFlag = itemTask(true)\n    //     } else {\n    //         tFlag = itemTask(false)\n    //     }\n    // } \n    else if (tText.match(/成为会员|加入会员/)) {\n        console.log(tTitle)\n        console.log('进行入会任务')\n        tFlag = joinTask()\n    } else if (tText.match(/浏览可得|浏览可获得|晚会|参与|加购|关注/)) {\n        // if (tTitle.match(/种草城/)) {\n        //     tFlag = shopTask()\n        // } else {\n        // tFlag = viewTask()\n        // }\n        console.log(tTitle)\n        tFlag = viewTask()\n    }\n    //  else if (tText.match(/打卡|首页/)) {\n    //     tFlag = clickFlag // 打卡点击一次即可\n    //     return tFlag\n    // } else if (tText.match(/组队/)) {\n    //     console.log('等待组队任务')\n    //     sleep(3000)\n    //     if (idContains('taskContainer').findOne(1000)) {\n    //         console.log('当前仍在任务列表，说明已经完成任务且领取奖励，返回')\n    //         return true\n    //     } else {\n    //         if (textContains('队伍刮刮卡').findOne(10000)) {\n    //             console.log('进入到组队页面，返回')\n    //             backToList()\n    //             console.log('等待领取奖励')\n    //             sleep(2000)\n    //             tFlag = tButton.click()\n    //             sleep(2000)\n    //             return tFlag\n    //         } else {\n    //             console.log('未能进入组队')\n    //             if (idContains('taskContainer').findOne(1000)) {\n    //                 console.log('当前仍在任务列表，返回')\n    //                 return true\n    //             } else {\n    //                 console.log('组队任务未检测到页面标识，视为已完成')\n    //                 tFlag = false\n    //             }\n    //         }\n    //     }\n    // } \n    else {\n        console.log('未知任务类型，默认为浏览任务', tText)\n        tFlag = timeTask()\n    }\n    backToList()\n    return tFlag\n}\n\nfunction signTask() {\n    console.log('尝试关闭弹窗')\n\n    let anchor = textMatches(/\\+\\d*刮刮卡/).findOnce();\n\n    for (let i = 0; i < 5 && anchor; i++) {\n        try {\n            let tmp = anchor.parent().parent().child(0)\n            if (!tmp.clickable()) {\n                tmp = anchor.parent().parent().parent().child(0)\n            }\n            tmp.click()\n            console.log('关闭')\n            sleep(1000)\n            anchor = textMatches(/\\+\\d*刮刮卡/).findOnce()\n        } catch (err) {\n            pass\n        }\n    }\n\n    anchor = text('记录').findOne(5000)\n    if (!anchor) {\n        console.log('未能定位，签到失败')\n        quit()\n    }\n    let sign\n    if (anchor.indexInParent() < 3) {\n        anchor = anchor.parent()\n    }\n\n    sign = anchor.parent().child(10)\n\n    if (!sign.clickable()) {\n        sign = anchor.parent().child(11)\n    }\n\n    sign.click()\n    sleep(3000)\n\n    anchor = text('提醒我每天签到').findOne(5000)\n\n    if (!anchor) {\n        console.log('未找到签到按钮')\n        return false\n    }\n\n    anchor = anchor.parent().parent()\n\n    sign = anchor.child(anchor.childCount() - 2)\n\n    console.log('点击签到')\n    return sign.click()\n}\n\n// 领取刮刮卡\nfunction havestCoin() {\n    console.log('准备领取自动积累的刮刮卡')\n    let h = textMatches(/.*点击领取.*|.*后存满.*/).findOne(5000)\n    if (h) {\n        h.click()\n        console.log('领取成功')\n        sleep(8000)\n    } else { console.log('未找到刮刮卡控件，领取失败') }\n}\n\n// 关闭主页的弹窗\nfunction closePop() {\n    let anchor = text('已放入首页＞记录').findOnce()\n    if (!anchor) {\n        console.log('寻找关闭弹窗按钮失败')\n        return false\n    }\n    anchor = anchor.parent()\n    return anchor.child(anchor.childCount() - 2).click()\n}\n\nlet startCoin = null // 音量键需要\n\n// 全局try catch，应对无法显示报错\ntry {\n    if (autoOpen) {\n        openAndInto()\n        console.log('等待活动页面加载')\n        if (!findTextDescMatchesTimeout(/.*得刮刮卡.*/, 20000)) {\n            console.log('未能进入活动，请重新运行！')\n            quit()\n        }\n        console.log('成功进入活动')\n        sleep(2000)\n        // scrollDown();\n\n        openTaskList();\n    } else {\n        alert('请关闭弹窗后立刻手动打开京东App进入活动页面，并打开任务列表', '限时30秒')\n        console.log('请手动打开京东App进入活动页面，并打开任务列表')\n        if (!idContains('taskContainer').findOne(30000)) {\n            console.log('未能进入活动，请重新运行！')\n            quit()\n        }\n        console.log('成功进入活动')\n    }\n\n    sleep(5000)\n\n    try {\n        console.log('获取初始刮刮卡数量')\n        startCoin = getCoin()\n        console.log('当前共有' + startCoin + '刮刮卡')\n    } catch (err) {\n        console.log('获取刮刮卡失败，跳过', err)\n    }\n\n    // havestCoin()\n\n    // 完成所有任务的循环\n    while (true) {\n        let [taskButton, taskText, taskCount, taskTitle] = getTaskByText()\n\n        if (!taskButton) {\n\n            // console.log('领取累计奖励')\n            // textContains('去领取').find().forEach(function (e, i) {\n            //     console.log('领取第' + (i + 1) + '个累计奖励')\n            //     e.click()\n            //     sleep(2000)\n            // })\n\n            // havestCoin()\n\n            // console.log('最后进行签到任务')\n            // let signT = signTask()\n\n            let endCoin = null\n            try {\n                console.log('获取结束刮刮卡数量')\n                endCoin = getCoin()\n                console.log('当前共有' + endCoin + '刮刮卡')\n            } catch (err) {\n                console.log('获取刮刮卡失败，跳过', err)\n            }\n\n            console.log('没有可自动完成的任务了，退出。')\n            console.log('互动任务、下单任务需要手动完成。')\n            if (startCoin && endCoin) {\n                console.log('本次运行获得' + (endCoin - startCoin) + '刮刮卡')\n            } else {\n                console.log('本次运行获得刮刮卡无法计算，具体原因请翻阅日志。')\n            }\n\n            alert('任务已完成', '别忘了在脚本主页领取618红包！')\n\n            // if (!signT) {\n            //     alert('本次签到失败', '请手动签到避免漏签（活动页右上角）')\n            // }\n\n            // alert('任务已完成', '互动任务手动完成之后还会有新任务，建议做完互动二次运行脚本')\n            quit()\n        }\n\n        if (taskText.match(/品牌墙/) || taskTitle.match(/种草城/)) { // 品牌墙0/3只需要一次完成\n            taskCount = 1\n        }\n\n        // 根据taskCount进行任务，一类任务一起完成，完成后刷新任务列表\n        // console.log('进行' + taskCount + '次“' + taskText + '”类任务')\n        // for (let i = 0; i < taskCount; i++) {\n        //     console.log('第' + (i + 1) + '次')\n        //     let taskFlag = doTask(taskButton, taskText, taskTitle)\n        //     // if (text('已放入首页＞记录').exists()) {\n        //     //     console.log('关闭奖励弹窗')\n        //     //     closePop()\n        //     //     sleep(3000)\n        //     // }\n        //     if (taskFlag) {\n        //         console.log('完成，进行下一个任务')\n        //         // gesture(1000, [100, 200], [100, 500], [100, 200])\n        //     } else {\n        //         console.log('任务失败，尝试重新打开任务列表获取任务')\n        //         break // 直接退出，无需在此调用reopen\n        //     }\n        // }\n\n        // 不刷新任务列表似乎会无法点击\n        doTask(taskButton, taskText, taskTitle)\n        console.log('重新打开任务列表')\n        reopenTaskList()\n    }\n} catch (err) {\n    device.cancelKeepingAwake()\n    if (err.toString() != 'JavaException: com.stardust.autojs.runtime.exception.ScriptInterruptedException: null') {\n        console.error(err)\n        startCoin && console.log('本次任务开始时有' + startCoin + '刮刮卡')\n    }\n    showVersion()\n}\n"
        },
        {
          "name": "tb_huichang.js",
          "type": "blob",
          "size": 14.9833984375,
          "content": "const VERSION = '20240618-B'\n\nif (!auto.service) {\n    toast('无障碍服务未启动！退出！')\n    exit()\n}\n\nlet showVersion = function () {\n    console.log('当前版本：' + VERSION)\n    console.log('https://github.com/monsternone/tmall-miao')\n    toast('当前版本：' + VERSION)\n}\n\n// alert('请把手机放稳，不要摇晃！', '不然有时候会跳出合伙赢喵币，导致任务阻塞')\n\nfunction getSetting() {\n    let indices = []\n    autoOpen && indices.push(0)\n    autoMute && indices.push(1)\n    indices.push(2)\n\n    let settings = dialogs.multiChoice('任务设置', ['自动打开淘宝进入活动。多开或任务列表无法自动打开时取消勾选（注意，分身运行淘宝大概率导致任务收益变为100）', '自动调整媒体音量为0。以免直播任务发出声音，首次选择需要修改系统设置权限', '此选项用于保证选择的处理，勿动！'], indices)\n\n    if (settings.length == 0) {\n        toast('取消选择，任务停止')\n        exit()\n    }\n\n    if (settings.indexOf(0) != -1) {\n        storage.put('autoOpen', true)\n        autoOpen = true\n    } else {\n        storage.put('autoOpen', false)\n        autoOpen = false\n    }\n    if (settings.indexOf(1) != -1) {\n        storage.put('autoMute', true)\n        autoMute = true\n    } else {\n        storage.put('autoMute', false)\n        autoMute = false\n    }\n}\n\nlet storage = storages.create(\"tb_task\");\nlet autoOpen = storage.get('autoOpen', true)\nlet autoMute = storage.get('autoMute', true)\ngetSetting()\n\nif (autoMute) {\n    try {\n        device.setMusicVolume(0)\n        toast('成功设置媒体音量为0')\n    } catch (err) {\n        alert('首先需要开启权限以修改音量，请开启后再次运行脚本')\n        exit()\n    }\n}\n\nconsole.show()\nshowVersion()\nconsole.log('开始完成能量任务...')\nconsole.log('按音量下键停止')\n\ndevice.keepScreenDim(60 * 60 * 1000)\n\nfunction registerKey() {\n    try {\n        events.observeKey()\n    } catch (err) {\n        console.log('监听音量键停止失败，应该是无障碍权限出错，请关闭软件后台任务重新运行。')\n        console.log('如果还是不行可以重启手机尝试。')\n        quit()\n    }\n    events.onKeyDown('volume_down', function (event) {\n        console.log('喵币任务脚本停止了')\n        console.log('请手动切换回主页面')\n        device.cancelKeepingAwake()\n        exit()\n    })\n}\nthreads.start(registerKey)\n\n// 全局try catch，应对无法显示报错\ntry {\n\n    // 自定义去取消亮屏的退出方法\n    function quit() {\n        device.cancelKeepingAwake()\n        exit()\n    }\n\n    // 自定义一个findTimeout，find_f是原本的查询器 text('sss').find()\n    function findTimeout(findF, timeout) {\n        let c = 0\n        while (c < timeout / 50) {\n            let result = findF.find()\n            if (result.nonEmpty()) return result\n            sleep(50)\n            c++\n        }\n        return null\n    }\n\n    // 自定义一个findTextDescMatchesTimeout\n    function findTextDescMatchesTimeout(reg, timeout) {\n        let c = 0\n        while (c < timeout / 50) {\n            let result = textMatches(reg).findOnce() || descMatches(reg).findOnce()\n            if (result) return result\n            sleep(50)\n            c++\n        }\n        return null\n    }\n\n    // 判断是否在活动主页\n    // let checkIndex = className(\"android.webkit.WebView\").filter(function (w) {\n    //     try {\n    //         let tmp = w.child(0)\n    //         let btn = tmp.child(tmp.childCount() - 1)\n    //         if (btn.className() == 'android.view.View') {\n    //             btn = tmp.child(tmp.childCount() - 2)\n    //         }\n    //         return btn.clickable() && btn.className() == 'android.widget.TextView' && !textContains('精选热卖').exists()\n    //     } catch (e) {\n    //         return false\n    //     }\n    // })\n\n    let checkIndex = textContains('O1CN013Lp0e21GnX8El4YEd')\n    \n    // 打开任务列表\n    function openTaskList() {\n        let c = checkIndex.findOne(5000)\n        if (c) {\n            console.log('使用默认方法尝试打开任务列表')\n            // c = c.child(0)\n            // let btn = c.child(c.childCount() - 1)\n            // if (btn.className() == 'android.view.View') {\n            //     btn = c.child(c.childCount() - 2)\n            // }\n            // btn.click()\n\n            c.click()\n        } else {\n            throw '无法找到任务列表入口'\n        }\n        if (textContains('浏览商品领能量值').findOne(2000)) {\n            console.log('关闭弹窗')\n            idContains('CLOSE').findOnce().click()\n            sleep(1000)\n            let btn = c.child(c.childCount() - 1)\n            if (btn.className() == 'android.view.View') {\n                btn = c.child(c.childCount() - 2)\n            }\n            btn.click()\n        }\n        if (!textContains('累计任务奖励').findOne(8000)) {\n            throw '无法打开任务列表'\n        }\n    }\n\n    // TODO:\n    // 查找任务按钮\n    function findTask() {\n        var jumpButtonFind = textMatches(/去浏览|去完成/) // 找进入任务的按钮，10秒\n        var jumpButtons = findTimeout(jumpButtonFind, 10000)\n\n        if (!jumpButtons) {\n            return null\n        }\n\n        for (var i = 0; i < jumpButtons.length; i++) {\n            var taskName, content\n            try {\n                taskName = jumpButtons[i].parent().child(1).text()\n                // content = jumpButtons[i].parent().child(2).child(0).text()\n            } catch (err) {\n                console.log(err)\n                continue\n            }\n            if (taskName) {\n                // if (taskName.match(/签到领/)) {\n                //     console.log('进行签到任务')\n                //     sleep(1000)\n                //     jumpButtons[i].click()\n                //     sleep(8000)\n                //     return findTask()\n                // }\n                console.log(taskName)\n                if (!(taskName.match(/天猫超市|下单|施肥|饿了么/))) {\n                    return [taskName, jumpButtons[i]]\n                }\n            }\n        }\n        return null\n    }\n\n    // TODO:\n    function liulan() {\n        // if (textMatches(/.*浏览.*/).findOne(10000)) { // 等待浏览出现\n        //     let v = className('android.support.v7.widget.RecyclerView').findOnce() // 滑动\n        //     if (v) {\n        //         sleep(1000)\n        //         v.scrollForward()\n        //     }\n        // }\n\n        // textMatches(/.*浏览得奖励.*/).findOne(15000) // 等待开始\n        let finish_c = 0\n        while (finish_c < 60) { // 0.5 * 60 =30 秒，防止死循环\n            if (textMatches(/.*下拉浏览.*/).exists() || textContains('下滑').exists()) {\n                console.log('进行模拟滑动')\n                swipe(device.width / 2, device.height - 200, device.width / 2 + 20, device.height - 500, 2000)\n                continue\n            }\n            let finish_reg = /.*任务已完成[\\s\\S]*|.*失败.*|.*上限.*|.*开小差.*|^\\+[\\d]*$/\n            if (textMatches(finish_reg).exists() || descMatches(finish_reg).exists()) { // 等待已完成出现，有可能失败\n                break\n            }\n            if (textMatches(/.*休息会呗.*/).exists()) {\n                alert('触发淘宝验证', '请手动验证后返回淘宝首页，重新执行任务')\n                console.log('异常退出。')\n                quit()\n            }\n            if (textContains('互动奖励').exists() ||\n                descContains('互动奖励').exists()) {\n                console.log('跳过互动任务')\n                break\n            }\n            if (finish_c && finish_c % 5 == 0) {\n                console.log('滑动防止页面卡顿')\n                swipe(device.width / 2, device.height - 400, device.width / 2 + 20, device.height - 500, 1000)\n                finish_c = finish_c + 2\n            }\n            sleep(500)\n            finish_c++\n        }\n\n        if (finish_c > 59) {\n            console.log('未检测到任务完成标识。返回。')\n            return false\n        }\n\n        console.log('任务完成')\n        return true\n    }\n\n    function itemTask() {\n        console.log('等待页面')\n        if (!textContains('精选热卖').findOne(8000)) {\n            throw '商品页面未加载'\n        }\n    \n        let n = 0\n        while (true) {\n            let done = idContains('J_wf_node_2_time').findOne(5000)\n            if (!done) {\n                console.log('浏览商品任务完成，返回')\n                return\n            }\n            done = parseInt(done.text(), 10)\n            \n            if (n < done) n = done\n            console.log('循环完成任务，已点击', done, '个')\n            let buttons = textMatches(/.*q75.*/).find()\n            if (buttons.empty()) {\n                throw '无法找到商品，任务失败'\n            }\n            console.log(n, buttons.length)\n            for (let i = 0; i < 10 && n + 1 > buttons.length; i++) {\n                console.log('商品数量不足，', n + 1, '向下翻页')\n                scrollDown()\n                sleep(2000)\n                scrollDown()\n                sleep(2000)\n                buttons = textMatches(/.*q75.*/).find()\n                console.log(buttons.length)\n            }\n    \n            for (let i = 1; i < buttons.length; i++) {\n                console.log('点击第', i + 1, '个')\n                sleep(2000)\n                buttons[i].click()\n                console.log('等待加载')\n                if (textMatches(/加入购物车|粉丝福利购/).findOne(10000) || currentActivity() == 'com.taobao.android.detail.wrapper.activity.DetailActivity') {\n                    console.log('商品打开成功，返回')\n                    back()\n                    if (!textContains('精选热卖').findOne(10000)) {\n                        console.log('似乎没有返回，二次尝试')\n                        back()\n                    }\n                } else {\n                    if (textContains('精选热卖').findOne(2000)) {\n                        console.log('似乎没有进入，二次尝试')\n                        continue\n                    } else {\n                        throw '商品页未能加载'\n                    }\n                }\n                n++\n                done = idContains('J_wf_node_2_time').findOne(5000)\n                if (!done) {\n                    console.log('浏览商品任务完成，返回')\n                    return\n                }\n            }\n        }\n    }\n\n    // TODO:\n    function backToList() {\n        console.log('返回上级')\n        if (checkIndex.exists()) {\n            console.log('已在任务列表')\n            return\n        }\n        back()\n        for (let i = 0; i < 3; i++) {\n            if (!checkIndex.findOne(5000)) {\n                console.log('似乎没有返回，二次尝试')\n                back()\n            } else {\n                break\n            }\n        }\n        sleep(1000)\n    }\n\n    if (autoOpen) {\n        // 打开淘宝活动页面\n        console.log('正在打开淘宝...')\n\n        app.startActivity({\n            action: \"VIEW\",\n            data: \"taobao://s.click.taobao.com/KDTtXmt\"\n        })\n        sleep(2000)\n\n        console.log('等待页面加载...')\n    } else {\n        console.log('请在30秒内打开淘宝做任务赢红包活动页 19￥ HU9046 42qBWvBotkr￥')\n    }\n    if (!checkIndex.findOne(30000)) {\n        console.log('未能检测到任务页，退出')\n        quit()\n    }\n\n    console.log('已打开活动，准备搜索任务')\n    sleep(2000)\n\n    console.log('首先关闭弹窗')\n    try {\n        let anchor = text('玩法规则').findOne(5000)\n        if (anchor) {\n            anchor = anchor.parent().parent()\n            anchor = anchor.child(anchor.childCount() - 2)\n            click(anchor.bounds().centerX(), anchor.bounds().centerY())\n            sleep(2000)\n            console.log('领红包弹窗已关闭')\n        } else {\n            console.log('未找到领红包弹窗')\n        }\n    } catch (err) {\n        console.log(err)\n        console.log('领红包弹窗关闭失败。此问题不影响运行')\n    }\n    try {\n        textContains('TB16l86YLb2gK0jSZK9XXaEgFXa').findOne(5000).click()\n        sleep(2000)\n        console.log('其他弹窗已关闭')\n    } catch (err) {\n        console.log(err)\n        console.log('其他弹窗关闭失败。此问题不影响运行')\n    }\n\n    console.log('检测任务列表是否打开')\n    if (textContains('累计任务奖励').findOne(5000)) {\n        console.log('先关闭列表')\n        idContains('close_btn').findOnce().click()\n        sleep(2000)\n    }\n\n    while (true) {\n        console.log('准备打开任务列表')\n        sleep(2000)\n        openTaskList()\n        console.log('寻找任务入口...')\n        var jumpButton = findTask()\n\n        if (jumpButton == null) {\n            console.log('没找到合适的任务。也许任务已经全部做完了。退出。互动任务不会自动完成。')\n            console.log('请手动切换回主页面')\n            alert('任务已完成', '别忘了在脚本主页领取双11红包！互动任务需要手动完成。')\n            quit()\n        }\n\n        console.log('进行' + jumpButton[0] + '任务')\n        sleep(2000)\n\n        if (jumpButton[0].match(/个商品/)) {\n            jumpButton[1].click()\n            sleep(2000)\n            console.log('使用新版大循环方法完成')\n            itemTask()\n            // sleep(1000)\n            backToList()\n        } else if (jumpButton[0].match(/搜索/)) {\n            jumpButton[1].click()\n            console.log('等待搜索')\n            sleep(2000)\n            let anchor = className(\"Button\").text('搜索').findOne(8000)\n            try {\n                let listView = className('android.widget.ListView').findOne(2000).child(0)\n                if (listView.childCount() == 1) {\n                    listView.child(0).click()\n                } else {\n                    listView.child(1).click()\n                }\n            } catch (e) {\n                console.log('无法获取推荐搜索列表，使用自定义搜索')\n                anchor.parent().child(1).setText('iphone')\n                anchor.click()\n            }\n            liulan()\n            sleep(1000)\n            back()\n            backToList()\n        } else if (jumpButton[0].match(/为你推荐|主会场/)) {\n            jumpButton[1].click()\n            liulan()\n        } else if (jumpButton[0].match(/消消乐|羊毛|新形象/)) {\n            jumpButton[1].click()\n            console.log('参观任务，自动返回')\n            sleep(5000)\n            backToList()\n        } else {\n            jumpButton[1].click()\n            liulan()\n            // sleep(1000)\n            // back()\n            backToList()\n        }\n\n        console.log('等待页面刷新...')\n        sleep(2000)\n    }\n} catch (err) {\n    device.cancelKeepingAwake()\n    if (err.toString() != 'JavaException: com.stardust.autojs.runtime.exception.ScriptInterruptedException: null') {\n        console.error(err)\n    }\n    showVersion()\n}\n"
        },
        {
          "name": "tb_luck.js",
          "type": "blob",
          "size": 13.05078125,
          "content": "const VERSION = '20231111-M'\n\nif (!auto.service) {\n    toast('无障碍服务未启动！退出！')\n    exit()\n}\n\nlet showVersion = function () {\n    console.log('当前版本：' + VERSION)\n    console.log('https://github.com/monsternone/tmall-miao')\n    toast('当前版本：' + VERSION)\n}\n\n// alert('请把手机放稳，不要摇晃！', '不然有时候会跳出合伙赢喵币，导致任务阻塞')\n\nconsole.show()\nshowVersion()\n\nconst BUTTON_TASKLIST = textContains('O1CN01Lvu8Gn1e2P2KEYBWc')\nconst BUTTON_ITEM = textMatches(/.*马上抢.*|.*付定随机.*|.*立付.*|.*爆款热卖中.*|.*爆卖.*|.*购物车.*|.*20点开抢.*/)\n\nfunction getSetting() {\n    let indices = []\n    autoOpen && indices.push(0)\n    autoMute && indices.push(1)\n    indices.push(2)\n\n    let settings = dialogs.multiChoice('任务设置', ['自动打开淘宝进入活动。多开或任务列表无法自动打开时取消勾选（注意，分身运行淘宝大概率导致任务收益变为100）', '自动调整媒体音量为0。以免直播任务发出声音，首次选择需要修改系统设置权限', '此选项用于保证选择的处理，勿动！'], indices)\n\n    if (settings.length == 0) {\n        toast('取消选择，任务停止')\n        exit()\n    }\n\n    if (settings.indexOf(0) != -1) {\n        storage.put('autoOpen', true)\n        autoOpen = true\n    } else {\n        storage.put('autoOpen', false)\n        autoOpen = false\n    }\n    if (settings.indexOf(1) != -1) {\n        storage.put('autoMute', true)\n        autoMute = true\n    } else {\n        storage.put('autoMute', false)\n        autoMute = false\n    }\n}\n\nlet storage = storages.create(\"tb_task\");\nlet autoOpen = storage.get('autoOpen', true)\nlet autoMute = storage.get('autoMute', true)\ngetSetting()\n\nif (autoMute) {\n    try {\n        device.setMusicVolume(0)\n        toast('成功设置媒体音量为0')\n    } catch (err) {\n        alert('首先需要开启权限，请开启后再次运行脚本')\n        exit()\n    }\n}\n\nconsole.log('开始完成能量任务...')\nconsole.log('按音量下键停止')\n\ndevice.keepScreenDim(60 * 60 * 1000)\n\nfunction registerKey() {\n    try {\n        events.observeKey()\n    } catch (err) {\n        console.log('监听音量键停止失败，应该是无障碍权限出错，请关闭软件后台任务重新运行。')\n        console.log('如果还是不行可以重启手机尝试。')\n        quit()\n    }\n    events.onKeyDown('volume_down', function (event) {\n        console.log('喵币任务脚本停止了')\n        console.log('请手动切换回主页面')\n        device.cancelKeepingAwake()\n        exit()\n    })\n}\nthreads.start(registerKey)\n\n// 全局try catch，应对无法显示报错\ntry {\n\n    // 自定义去取消亮屏的退出方法\n    function quit() {\n        device.cancelKeepingAwake()\n        exit()\n    }\n\n    // 自定义一个findTimeout，find_f是原本的查询器 text('sss').find()\n    function findTimeout(findF, timeout) {\n        let c = 0\n        while (c < timeout / 50) {\n            let result = findF.find()\n            if (result.nonEmpty()) return result\n            sleep(50)\n            c++\n        }\n        return null\n    }\n\n    // 自定义一个findTextDescMatchesTimeout\n    function findTextDescMatchesTimeout(reg, timeout) {\n        let c = 0\n        while (c < timeout / 50) {\n            let result = textMatches(reg).findOnce() || descMatches(reg).findOnce()\n            if (result) return result\n            sleep(50)\n            c++\n        }\n        return null\n    }\n\n    // 打开任务列表\n    function openTaskList() {\n        let c = BUTTON_TASKLIST.findOne(5000)\n        if (c) {\n            console.log('使用默认方法尝试打开任务列表')\n            c.click()\n        } else {\n            throw '无法找到任务列表入口'\n        }\n        if (!findTextDescMatchesTimeout(/.*task_detail.*/, 8000)) {\n            console.log('首先检测弹窗')\n            for (let i = 0; i < 2 && text('关闭').findOne(2000); i++) { // 关闭弹窗\n                console.log('检测到弹窗，关闭')\n                click('关闭')\n                sleep(2000)\n            }\n            console.log('出现未能自动关闭的弹窗请手动关闭')\n            sleep(2000)\n            // let right = c.bounds().right\n            // let left = c.bounds().left\n            // let top = c.bounds().top\n            // let bottom = c.bounds().bottom\n            // click(random(right,left), random(top, bottom))\n            click(c.bounds().centerX(), c.bounds().centerY())\n            console.log('已点击，等待任务列表出现')\n            if (!BUTTON_TASKLIST.findOne(8000)) {\n                throw '无法打开任务列表'\n            }\n        }\n    }\n\n    // 查找任务按钮\n    function findTask() {\n        var jumpButtonFind = textMatches(/去浏览|去完成|已完成/) // 找进入任务的按钮，10秒\n        var jumpButtons = findTimeout(jumpButtonFind, 10000)\n\n        if (!jumpButtons) {\n            return null\n        }\n\n        for (var i = 0; i < jumpButtons.length; i++) {\n            if (jumpButtons[i].text() == '已完成') continue\n            var taskName, content\n            try {\n                taskName = jumpButtons[i].parent().child(1).text()\n                content = jumpButtons[i].parent().child(2).child(0).text()\n            } catch (err) {\n                console.log(err)\n                continue\n            }\n            if (taskName) {\n                // if (taskName.match(/签到领/)) {\n                //     console.log('进行签到任务')\n                //     sleep(1000)\n                //     jumpButtons[i].click()\n                //     sleep(8000)\n                //     return findTask()\n                // }\n                // if (!(taskName.match(/淘金币|提醒|话费|斗地主|消消乐|流浪猫|开88|扔喵糖|占领|邀请|登录|组队|参与|施肥|浇水|特价版|小鸡|消除|穿搭|森林|点淘|人生|我的淘宝|庄园/) || content.match(/小互动/))) {\n                //     return [taskName, jumpButtons[i]]\n                // }\n                return [taskName, jumpButtons[i]]\n            }\n        }\n        return null\n    }\n\n    function liulan() {\n        // if (textMatches(/.*浏览.*/).findOne(10000)) { // 等待浏览出现\n        //     let v = className('android.support.v7.widget.RecyclerView').findOnce() // 滑动\n        //     if (v) {\n        //         sleep(1000)\n        //         v.scrollForward()\n        //     }\n        // }\n\n        // textMatches(/.*浏览得奖励.*/).findOne(15000) // 等待开始\n        let finish_c = 0\n        while (finish_c < 50) { // 0.5 * 50 = 25 秒，防止死循环\n            if (textMatches(/.*下拉浏览.*/).exists()) {\n                console.log('进行模拟滑动')\n                swipe(device.width / 2, device.height - 200, device.width / 2 + 20, device.height - 500, 2000)\n            }\n            let finish_reg = /.*任务已完成[\\s\\S]*|.*失败.*|.*上限.*|.*开小差.*/\n            if (textMatches(finish_reg).exists() || descMatches(finish_reg).exists()) { // 等待已完成出现，有可能失败\n                break\n            }\n            if (textMatches(/.*O1CN01UMoPHa1tlUCoIdmj1.*/).exists() && !textMatches(/.*已浏览.*|.*浏览15.*/).exists()) { // 标识加载且已浏览消失代表完成\n                break\n            }\n            if (textMatches(/.*休息会呗.*/).exists()) {\n                alert('触发淘宝验证', '请手动验证后返回淘宝首页，重新执行任务')\n                console.log('异常退出。')\n                quit()\n            }\n            if (textContains('互动奖励').exists() ||\n                descContains('互动奖励').exists()) {\n                console.log('跳过互动任务')\n                break\n            }\n            sleep(500)\n            finish_c++\n        }\n\n        if (finish_c > 49) {\n            console.log('未检测到任务完成标识。返回。')\n            // console.log('如果你认为这是一个bug请截图反馈。')\n            // console.log('一般情况下，二次运行脚本即可。')\n            // console.log('请手动切换回主页面')\n            // device.cancelKeepingAwake()\n            // quit()\n            back()\n            sleep(1000)\n            // TODO: 返回检测\n            if (!BUTTON_TASKLIST.findOne(5000)) {\n                console.log('似乎没有返回，二次尝试')\n                back()\n            }\n            return\n        }\n\n        console.log('任务完成，返回')\n\n        sleep(1000)\n        back()\n        sleep(1000)\n        if (!BUTTON_TASKLIST.findOne(5000)) {\n            console.log('似乎没有返回，二次尝试')\n            back()\n        }\n    }\n\n    if (autoOpen) {\n        // 打开淘宝活动页面\n        console.log('正在打开淘宝...')\n        var url = 's.click.taobao.com/XcesU7u'\n\n        app.startActivity({\n            action: \"VIEW\",\n            data: \"taobao://\" + url\n        })\n        sleep(2000)\n\n        console.log('等待页面加载...')\n    } else {\n        console.log('请在30秒内打开淘宝做任务赢红包活动页，38￥ CZ3457 PtSdW1jQajS￥ https://m.tb.cn/h.5788kfI')\n    }\n    if (!BUTTON_TASKLIST.findOne(30000)) {\n        console.log('未能检测到任务页，退出')\n        quit()\n    }\n\n    console.log('已打开活动，准备搜索任务')\n    sleep(5000)\n\n    while (true) {\n        console.log('准备打开任务列表')\n        sleep(2000)\n        openTaskList()\n        console.log('寻找任务入口...')\n        var jumpButton = findTask()\n\n        if (jumpButton == null) {\n            console.log('没找到合适的任务。也许任务已经全部做完了。退出。互动任务不会自动完成。')\n            console.log('请手动切换回主页面')\n            alert('任务已完成', '别忘了在脚本主页领取618红包！互动任务需要手动完成。')\n            quit()\n        }\n\n        console.log('进行' + jumpButton[0] + '任务')\n        sleep(2000)\n\n        if (jumpButton[0].match(/精选/)) {\n            jumpButton[1].click()\n            liulan()\n        } else if (jumpButton[0].match(/浏览点击/)) {\n            jumpButton[1].click()\n            sleep(2000)\n            if (jumpButton[0].match(/直播/)) {\n                if (!text('直播尖货').findOne(10000)) {\n                    throw '打开活动页失败'\n                }\n            }\n            let count = jumpButton[0].match(/点击(\\d*)个/)[1]\n            let done = 0\n            try {\n                let anchor = textContains('已浏览商品').findOne(5000).parent().child(1).children()\n                done = parseInt(anchor[1].text())\n                count -= done\n            } catch(err) {\n                console.log('获取数量失败，使用默认值', err)\n            }\n            \n            console.log('点击', count, '个商品')\n            let buttons = BUTTON_ITEM.find()\n            if (!buttons) {\n                throw '无法找到马上抢按钮，任务失败'\n            }\n\n            console.log('从第', done, '个开始寻找')\n            for (let i = 0; i < 10 && count + done > buttons.length; i++) {\n                console.log('商品数量不足，向下翻页', buttons.length)\n                scrollDown()\n                sleep(2000)\n                scrollDown()\n                sleep(2000)\n                buttons = BUTTON_ITEM.find()\n                console.log(buttons.length)\n            }\n            if (count + done > buttons.length) {\n                console.log('商品数量不足，分次完成')\n                count = buttons.length - done\n            }\n\n            for (let i = done; i < count + done; i++) {\n                console.log('第' , i+1-done, '次，点击第', i  + 1, '个')\n                sleep(2000)\n                buttons[i].click()\n                console.log('等待加载')\n                if (textMatches(/.*配送区域.*|.*客服.*|.*评价.*|.*服务保障.*/).findOne(10000) || currentActivity() == 'com.taobao.android.detail.wrapper.activity.DetailActivity') {\n                    console.log('商品打开成功，返回')\n                    sleep(3000)\n                    back()\n                    if (jumpButton[0].match(/直播/)) {\n                        if (!text('直播尖货').findOne(10000)) {\n                            console.log('似乎没有返回，二次尝试')\n                            back()\n                        }\n                    } else {\n                        if (!BUTTON_TASKLIST.findOne(10000)) {\n                            console.log('似乎没有返回，二次尝试')\n                            back()\n                        }\n                    }\n                } else {\n                    console.log('商品页未能加载，尝试返回')\n                    back()\n                }\n            }\n        } else {\n            throw '未知任务类型' + jumpButton[0] + '请反馈！'\n        }\n\n        console.log('等待页面刷新...')\n        sleep(2000)\n    }\n} catch (err) {\n    device.cancelKeepingAwake()\n    if (err.toString() != 'JavaException: com.stardust.autojs.runtime.exception.ScriptInterruptedException: null') {\n        console.error(err)\n    }\n    showVersion()\n}\n"
        }
      ]
    }
  ]
}