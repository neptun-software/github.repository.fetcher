{
  "metadata": {
    "timestamp": 1736561638109,
    "page": 204,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wandergis/coordtransform",
      "stars": 4395,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.369140625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1728515625,
          "content": "# Logs\nlogs\n*.log\n\n# Runtime data\npids\n*.pid\n*.seed\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directory\n# Commenting this out is preferred by some people, see\n# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git-\nnode_modules\n\n# Users Environment Variables\n.lock-wscript\n\n# =========================\n# Operating System Files\n# =========================\n\n# OSX\n# =========================\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Windows\n# =========================\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 记忆的残骸\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.697265625,
          "content": "# coordtransform 坐标转换\n****\n一个提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换的工具模块。\n\npython版本：https://github.com/wandergis/coordTransform_py\n\n命令行版本(支持模块或在命令行直接转换geojson数据)：https://github.com/wandergis/coordtransform-cli\n\ngo语言社区版本：https://github.com/qichengzx/coordtransform\n\n****\n\n### DataV Atlas分析地图免费试用\n<a href=\"https://free.aliyun.com/?searchKey=atlas\" target=\"_blank\">\n    <img src=\"https://img.alicdn.com/imgextra/i3/O1CN01GqkEhC2AEpeHYwjp9_!!6000000008172-0-tps-1562-96.jpg\" alt=\"DataV Atlas分析地图\" width=\"800\"/>\n</a>\n\n### 喜欢请扫码\n扫码关注DataV数据可视化公众号，获取更多知识\n\n<img src=\"https://img.alicdn.com/imgextra/i4/O1CN01pG1cIy1iLPnvfYhKm_!!6000000004396-0-tps-1280-1280.jpg\" width=\"80px\" alt=\"DataV数据可视化公众号二维码\">\n\n## **支持node、浏览器（AMD方式和直接引用方式）**\n- GitHub地址：https://github.com/wandergis/coordtransform\n- npm地址：https://www.npmjs.com/package/coordtransform\n- 项目主页：http://wandergis.github.io/coordtransform/\n\n## 为什么写这个模块\n\n随着移动互联网的兴起，几乎每一个app都会去收集用户位置，如果恰好你在处理与地理定位相关的代码，并且不了解地理坐标系的话，肯定要被我大天朝各种坐标系搞晕。写这个模块的目的也是因为项目中app获取的坐标是百度sdk获取的，在做webgis可视化的时候各种偏，各种坐标不对，叠加错位。\n\n## 当前互联网地图的坐标系现状\n### 地球坐标 (WGS84)\n- 国际标准，从 GPS 设备中取出的数据的坐标系\n- 国际地图提供商使用的坐标系\n\n### 火星坐标 (GCJ-02)也叫国测局坐标系\n- 中国标准，从国行移动设备中定位获取的坐标数据使用这个坐标系\n- 国家规定： 国内出版的各种地图系统（包括电子形式），必须至少采用GCJ-02对地理位置进行首次加密。\n\n### 百度坐标 (BD-09)\n- 百度标准，百度 SDK，百度地图，Geocoding 使用\n- (本来就乱了，百度又在火星坐标上来个二次加密)\n\n## 开发过程需要注意的事\n- 从设备获取经纬度（GPS）坐标\n\n    \t\t如果使用的是百度sdk那么可以获得百度坐标（bd09）或者火星坐标（GCJ02),默认是bd09\n    \t\t如果使用的是ios的原生定位库，那么获得的坐标是WGS84\n    \t\t如果使用的是高德sdk,那么获取的坐标是GCJ02\n- 互联网在线地图使用的坐标系\n\n\t\t火星坐标系：\n    \t\t\tiOS 地图（其实是高德）\n    \t\t\tGoogle国内地图（.cn域名下）\n    \t\t\t搜搜、阿里云、高德地图、腾讯\n\t\t百度坐标系：\n    \t\t\t当然只有百度地图\n\t\tWGS84坐标系：\n    \t\t\t国际标准，谷歌国外地图、osm地图等国外的地图一般都是这个\n# 举个例子\n笔者所在的公司app使用的是百度的sdk,需要对定位坐标做web可视化效果，百度地图提供的js api满足不了需求，选用leaflet来做可视化，这里要说到百度地图了，它使用的坐标系和切图的原点都不一致，并且其加偏还是非线性的，因此无法利用常用的加载方法去加载，放弃使用它的底图，选用了符合标准的高德底图，高德底图使用的是国测局坐标也就是GCJ02坐标系，如果简单的将app获取的经纬度叠加上去，就有可能你本来在百度大厦的位置就显示在西二旗地铁站了甚至更远，因此需要将bd09转成gcj02坐标系，这个时候这个库就有了用武之地，对点批量转换再加载到底图上，就可以让点显示在本应该出现的位置。\n\n\t另外如果你拿到了一些WGS84的坐标，想加载到各种底图上就可以根据这个库在底图坐标系和你的数据坐标系之间进行转换。希望对大家有用吧。\n\n****\n\n\n### 安装（install）\n\n```\nnpm install coordtransform\n```\n\n\n### 示例用法（Example&Usage）\n1 NodeJs用法\n\n```\n//国测局坐标(火星坐标,比如高德地图在用),百度坐标,wgs84坐标(谷歌国外以及绝大部分国外在线地图使用的坐标)\nvar coordtransform=require('coordtransform');\n//百度经纬度坐标转国测局坐标\nvar bd09togcj02=coordtransform.bd09togcj02(116.404, 39.915);\n//国测局坐标转百度经纬度坐标\nvar gcj02tobd09=coordtransform.gcj02tobd09(116.404, 39.915);\n//wgs84转国测局坐标\nvar wgs84togcj02=coordtransform.wgs84togcj02(116.404, 39.915);\n//国测局坐标转wgs84坐标\nvar gcj02towgs84=coordtransform.gcj02towgs84(116.404, 39.915);\nconsole.log(bd09togcj02);\nconsole.log(gcj02tobd09);\nconsole.log(wgs84togcj02);\nconsole.log(gcj02towgs84);\n//result\n//bd09togcj02:   [ 116.39762729119315, 39.90865673957631 ]\n//gcj02tobd09:   [ 116.41036949371029, 39.92133699351021 ]\n//wgs84togcj02:  [ 116.41024449916938, 39.91640428150164 ]\n//gcj02towgs84:  [ 116.39775550083061, 39.91359571849836 ]\n```\n2 浏览器用法\n直接引用目录内的index.js，会有一个coordtransform的全局对象暴露出来，也支持用AMD加载器加载\n\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>coordTransform</title>\n</head>\n<body>\n<h1>请按F12打开控制台查看结果</h1>\n<script src=\"index.js\"></script>\n<script>\n    //国测局坐标(火星坐标,比如高德地图在用),百度坐标,wgs84坐标(谷歌国外以及绝大部分国外在线地图使用的坐标)\n    //百度经纬度坐标转国测局坐标\n    var bd09togcj02 = coordtransform.bd09togcj02(116.404, 39.915);\n    //国测局坐标转百度经纬度坐标\n    var gcj02tobd09 = coordtransform.gcj02tobd09(116.404, 39.915);\n    //wgs84转国测局坐标\n    var wgs84togcj02 = coordtransform.wgs84togcj02(116.404, 39.915);\n    //国测局坐标转wgs84坐标\n    var gcj02towgs84 = coordtransform.gcj02towgs84(116.404, 39.915);\n    console.log(bd09togcj02);\n    console.log(gcj02tobd09);\n    console.log(wgs84togcj02);\n    console.log(gcj02towgs84);\n    //result\n    //bd09togcj02:   [ 116.39762729119315, 39.90865673957631 ]\n    //gcj02tobd09:   [ 116.41036949371029, 39.92133699351021 ]\n    //wgs84togcj02:  [ 116.41024449916938, 39.91640428150164 ]\n    //gcj02towgs84:  [ 116.39775550083061, 39.91359571849836 ]\n</script>\n</body>\n</html>\n```\n### todos\n- 墨卡托坐标\n- geojson转换\n- 批量转换\n- turf插件\n- leaflet插件\n\n### sometipes\n对于做GIS的人来说，底图对我们还是很重要的，有时候看国外的底图很好看，换上之后发现坐标位置全部不对，因此写了这个包帮助大家完成坐标的转换，方便大家的使用，喜欢的童鞋请star。\n\n### 友情推荐\n[蚂蚁开源基于 WebGL 的开源大规模地理空间数据可视分析引擎 L7](https://github.com/antvis/l7) 喜欢的童鞋请 star。\n\n\n\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 4.9697265625,
          "content": "/**\n * Created by Wandergis on 2015/7/8.\n * 提供了百度坐标（BD-09）、国测局坐标（火星坐标，GCJ-02）、和 WGS-84 坐标系之间的转换\n */\n// UMD 魔法代码\n// if the module has no dependencies, the above pattern can be simplified to\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.coordtransform = factory();\n  }\n}(this, function () {\n  // 定义一些常量\n  var x_PI = 3.14159265358979324 * 3000.0 / 180.0;\n  var PI = 3.1415926535897932384626;\n  var a = 6378245.0;\n  var ee = 0.00669342162296594323;\n  /**\n   * 百度坐标系 (BD-09) 与 火星坐标系 (GCJ-02) 的转换\n   * 即 百度 转 谷歌、高德\n   * @param bd_lng\n   * @param bd_lat\n   * @returns {*[]}\n   */\n  var bd09togcj02 = function bd09togcj02(bd_lng, bd_lat) {\n    var bd_lng = +bd_lng;\n    var bd_lat = +bd_lat;\n    var x = bd_lng - 0.0065;\n    var y = bd_lat - 0.006;\n    var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_PI);\n    var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_PI);\n    var gg_lng = z * Math.cos(theta);\n    var gg_lat = z * Math.sin(theta);\n    return [gg_lng, gg_lat]\n  };\n\n  /**\n   * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换\n   * 即 谷歌、高德 转 百度\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02tobd09 = function gcj02tobd09(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);\n    var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);\n    var bd_lng = z * Math.cos(theta) + 0.0065;\n    var bd_lat = z * Math.sin(theta) + 0.006;\n    return [bd_lng, bd_lat]\n  };\n\n  /**\n   * WGS-84 转 GCJ-02\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var wgs84togcj02 = function wgs84togcj02(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [mglng, mglat]\n    }\n  };\n\n  /**\n   * GCJ-02 转换为 WGS-84\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02towgs84 = function gcj02towgs84(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [lng * 2 - mglng, lat * 2 - mglat]\n    }\n  };\n\n  var transformlat = function transformlat(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n    return ret\n  };\n\n  var transformlng = function transformlng(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n    return ret\n  };\n\n  /**\n   * 判断是否在国内，不在国内则不做偏移\n   * @param lng\n   * @param lat\n   * @returns {boolean}\n   */\n  var out_of_china = function out_of_china(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    // 纬度 3.86~53.55, 经度 73.66~135.05 \n    return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n  };\n\n  return {\n    bd09togcj02: bd09togcj02,\n    gcj02tobd09: gcj02tobd09,\n    wgs84togcj02: wgs84togcj02,\n    gcj02towgs84: gcj02towgs84\n  }\n}));\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.57421875,
          "content": "{\n  \"name\": \"coordtransform\",\n  \"version\": \"2.1.2\",\n  \"description\": \"A common coordinate systems conversion module!\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"node test/app.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://wandergis@github.com/wandergis/coordtransform.git\"\n  },\n  \"keywords\": [\n    \"coordinate\",\n    \"wgs84\",\n    \"bd09\",\n    \"gcj02\",\n    \"transform\"\n  ],\n  \"author\": \"wandergis\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wandergis/coordtransform/issues\"\n  },\n  \"homepage\": \"http://wandergis.github.io/coordtransform\"\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}