{
  "metadata": {
    "timestamp": 1736561941450,
    "page": 647,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "prototypejs/prototype",
      "stars": 3539,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0703125,
          "content": ".DS_Store\npkg\ntest/unit/tmp/*\ntest/unit/browsers.yml\ndoc\ntmp\n*.pdoc.yaml"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.6552734375,
          "content": "[submodule \"vendor/caja_builder\"]\n  path = vendor/caja_builder\n  url = git://github.com/tobie/unittest_js_caja_builder.git\n[submodule \"vendor/pdoc\"]\n  path = vendor/pdoc\n  url = git://github.com/tobie/pdoc.git\n[submodule \"vendor/sprockets\"]\n  path = vendor/sprockets\n  url = git://github.com/sstephenson/sprockets.git\n\n\n[submodule \"vendor/nwmatcher/repository\"]\n\tpath = vendor/nwmatcher/repository\n\turl = git://github.com/dperini/nwmatcher.git\n[submodule \"vendor/sizzle/repository\"]\n\tpath = vendor/sizzle/repository\n\turl = git://github.com/jquery/sizzle.git\n[submodule \"vendor/slick/repository\"]\n\tpath = vendor/slick/repository\n\turl = git://github.com/mootools/slick.git\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 77.669921875,
          "content": "-----------------------------------------------------------------------------\nNOTE: This changelog is no longer updated. Consult the commit history for a\nlist of changes from version to version.\n-----------------------------------------------------------------------------\n\n*1.7* (November 16, 2010)\n\n* Ensure `Element#update` works with string content that includes a LINK tag in Internet Explorer. [#264 state:resolved] (Tobias H. Michaelsen, Andrew Dupont)\n\n* Treat a 304 HTTP status as a successful response. [#331 state:resolved] (Kenneth Kin Lum, Andrew Dupont)\n\n* Handle sparse arrays properly in `Array#_each` to match behavior with browsers' built-in `Array#forEach` (and ES5). [#790 state:resolved] (Andriy Tyurnikov, Yaffle, Andrew Dupont)\n\n* Make `Event.extend` work with legacy IE events in IE 9. (Andrew Dupont)\n\n* Stop appending `&_=` to the parameters for non-GET Ajax requests in Safari. We no longer support any version of Safari for which this is necessary. [#327 state:resolved] (John-David Dalton, Andrew Dupont)\n\n* Ensure `Form.focusFirstElement` doesn't raise an exception on forms with no fields. [#341 state:resolved] (achernin, Andrew Dupont)\n\n* Define a `relatedTarget` property on extended mouseenter/mouseleave events in IE's legacy event system. [#708 state:resolved] (Walter Smith, Tobie Langel, Andrew Dupont)\n\n* Fix odd behavior with `new Element('select')` in IE6-7. [#480 state:resolved] (Bruce Harris, kangax, Andrew Dupont)\n\n* Extend BUTTON elements with everything defined in Form.Element.Methods. Ensure BUTTON elements are traversed in Form.getElements and serialized in Form.serialize. (Luis Gomez, Samuel Lebeau, kangax, Andrew Dupont)\n\n* Ensure Object.isFunction returns `false` for RegExp objects. [#661 state:resolved] (James, kangax, Andrew Dupont)\n\n* Revert Opera-specific behavior for calling Element#getStyle with (left|right|top|bottom). [#268 state:resolved] (kangax, Andrew Dupont)\n\n* Fix issue with Event#isMiddleClick and #isRightClick on Safari and Chrome. [#731 state:resolved] (Arthur Schreiber)\n\n* Fix issue where an Ajax request in IE sometimes returns 1223 instead of 204 as the status code. [#129 state:resolved] (adevadeh, gordyt, Andrew Dupont)\n\n* Add Object.isDate. [#443 state:resolved] (Nesterenko Dmitry, kangax, Samuel Lebeau, Andrew Dupont)\n\n* Handle cases where `document` or `document.documentElement` is passed into Element#getOffsetParent. Fixes IE errors with many layout/positioning methods. [#90 state:resolved] (Padraig Kennedy, Andrew Dupont)\n\n* Wrap `element` in `$` for Element#cumulativeOffset, #viewportOffset, #positionedOffset, and #getOffsetParent. [#782 state:resolved] (Radoslav Stankov, Andrew Dupont)\n\n*1.7_rc3* (October 11, 2010)\n\n* Feature detect IE's legacy event system, since IE9 now supports DOM L2 Events. (Michael Sciacqua, kangax, Andrew Dupont)\n\n* Fix an issue in IE9 beta where the `value` attribute of an <input> element would not get set. (Andrew Dupont)\n\n* Move all offset methods to layout.js, eliminating some code repetition.\n\n* Remove unit test for passing a DOM node into `Object.toJSON`. To continue to support this use case would require bypassing IE's native JSON implementation. (Tobie Langel, Thomas Fuchs, Samuel Lebeau, Andrew Dupont)\n\n* Ensure hidden absolutely-positioned elements are sized correctly when they have no explicit width set. [#1084 state:resolved] (Viktor Kojouharov, Andrew Dupont)\n\n* Change custom events implementation to use the `onlosecapture` event instead of the `onfilterchange` event for non-bubbling custom events in Internet Explorer. (John-David Dalton, Andrew Dupont)\n\n* Revert `Element.getHeight` and `Element.getWidth` to their previous behavior in order to ensure backward-compatibility. (Sam Stephenson, Andrew Dupont)\n\n* Fix accidental declaration of `purgeElement` as a global function. [#1089 state:resolved] (Viktor Kojouharov, Andrew Dupont)\n\n* Ensure `Element.Layout` gives accurate measurements for percentages on all elements. Fix inaccurate measurements on `position: fixed` elements with percentages. [#1040 state:resolved] (Dan Popescu, Riccardo De Agostini, Andrew Dupont)\n\n* Fix issue with retrieving border-box-(height|width) of hidden elements. [#1035 state:resolved] (Francois-Pierre Bouchard, Andrew Dupont)\n\n* Ensure we clean up after ourselves for all `width` and `height` computations in `Element.Layout`. (Sam Stephenson, Andrew Dupont)\n\n*1.7_rc2* (May 12, 2010)\n\n* Remove redefinition of `Element#cumulativeOffset` when `getBoundingClientRect` is present, as it seems to give inaccurate results. (Andrew Dupont)\n\n* Optimize element purging. (RStankov, Andrew Dupont)\n\n* Add `Element.purge` for cleaning up event listeners and element storage keys on elements that will be removed from the page. Make `Element.update` perform similar cleanup automatically. (Andrew Dupont, Tobie Langel)\n\n* The second argument to Event.Handler callbacks is the target element when no selector is present, or the matching element when a selector is present. Callbacks are always bound to the original element. (sam)\n\n* Fix issue where `Element.Layout#get` would fail to interpret negative pixel values. (Sebastien Gruhier, Andrew Dupont)\n\n* Fix bugs in layout.js. Add tests for `Element.Layout#toCSS`, `#toObject`, and `#toHash`. (RStankov, Andrew Dupont)\n\n* Add `Element.Layout#toObject` and `Element.Layout.toHash`. (Andrew Dupont)\n\n* Make `Element.Layout#toCSS` return camelized property names, as expected by `Element.setStyle`. [#1021 state:resolved] (njakobsen, Andrew Dupont)\n\n*1.7_rc1* (April 1, 2010)\n\n* Add an `Event.Handler` class, plus `Event.on` and `Element#on` methods, for simplified event delegation. (sam, Tobie Langel, Andrew Dupont)\n\n* Make `Element.Layout` properly interpret computed non-integer pixel values. (e.g., Firefox can report \"12.5px\" as a computed style value.) (henrymazza)\n\n* Fix deprecated Selector.matchElements. (Tobie Langel)\n\n* Make Object.keys ES5 compliant. (Tobie Langel)\n\n* Make Prototype's JSON implementation EcmaScript 5 compliant. [#453 state:resolved] (Tobie Langel)\n\n* Also detect embedded (UIWebView) mobile Safari. (Thomas Fuchs)\n\n* Avoid object creation and an unnecessary function call in `Class#addMethods`, when working around JScript DontEnum bug. Replace with feature test and a simple boolean check at runtime. (kangax)\n\n* Optimize Element#immediateDescendants. (kangax, Tobie Langel)\n\n* Remove unnecessary function object creation and `Number#times` in `Element._getContentFromAnonymousElement`. (kangax)\n\n* Eliminate runtime forking and long method lookup in `Element.hasAttribute`. (kangax)\n\n* Remove redundant ternary. (kangax)\n\n* Avoid repeating declaration statements where it makes sense, for slightly better runtime performance and minification. (kangax)\n\n* Make `Event.stopObserving` return element in all cases. [#810 state:resolved] (Yaffle, Tobie Langel)\n\n* String#startsWith, String#endsWith performance optimization (Yaffle, Tobie Langel, kangax)\n\n* Rewrite String#camelize using String#replace with a replacement function (Phred, John-David Dalton, Samuel Lebeau, kangax)\n\n*1.6.1* (August 24, 2009)\n\n* Avoid triggering a warning when Java is disabled in IE8. [#668 state:resolved] (orv, kangax, Andrew Dupont, Tobie Langel)\n\n* Simplify String#(un)escapeHTML and remove their DOM dependencies. (Tobie Langel)\n\n* Update UnittestJS. Modifiy test template accordingly. (Tobie Langel)\n\n* Remove redundant if statement in Element#readAttribute. (Tobie Langel)\n\n* Add missing semicolons. [#751 state:resolved] (Diego Perini)\n\n* Remove expensive (for such low-level method) internal `getClass` in favor of plain string comparison (kangax)\n\n* Fix `PeriodicalExecuter` so that it no longer suppresses exceptions. [#696 state:resolved] (Samuel Lebeau, Yaffle)\n\n* Fix issue related to escaping of selectors for querySelectorAll. [#559 state:resolved] (Jorn Holm)\n\n*1.6.1_rc3* (June 16, 2009)\n\n* Fixed a variety of non-ASCII chars and similar [#610 state:resolved] (T.J. Crowder)\n\n* Add Chrome 1+ to the list of supported browsers. (kangax)\n\n* Fix `Template#evaluate` \"eating\" previous character if `null` was returned from `toTemplateReplacements` function. (Nir, Jürgen Hörmann, kangax)\n\n* Make sure (deficient) APPLET, OBJECT and EMBED elements are extended with simulated methods in IE8. Return early if `_extendedByPrototype` is present on an element. (Tobie Langel, kangax)\n\n* Replace array creation and `Array#include` with a more efficient `RegExp#test`. (kangax)\n\n* Reorganize the way `ElementExtensions` are defined. Make sure elements used in SpecificElementExtensions are cleaned up. (kangax)\n\n* Make sure $A works with primitive values. (mr_justin, kangax)\n\n* Do not browser sniff when forking `unmark` function in selector suite. Instead use a proper test - PROPERTIES_ATTRIBUTES_MAP. (kangax)\n\n* Do not use short-hand element methods notation (@element.getStyle() -> Element.getStyle(@element)) for performance reasons. Do not use `$A` and `Array.prototype.shift` when `Array.prototype.slice` can be used instead. (kangax)\n\n* `Prototype.Browser.Opera` now uses stronger inference and is determined by [[Class]] of `window.opera` being - \"Opera\". (kangax)\n\n* Fix error in event.js which prevented attaching more than one responder for an event name/element combination. [#651 state:resolved] (Rob Lineweaver)\n\n* Do not sniff when testing for IE's proprietary mouseenter/mouseleave events support. Use more robust inference instead. (kangax)\n\n* Use `Prototype.emptyFunction` consistently throughout unit tests. [#253 state:resolved] (Michael M Slusarz, John David Dalton, kangax)\n\n* deprecation extension: mark Array#reduce() as removed. [#569 state:resolved] (Tobie Langel)\n\n* `Form.serialize` now works safely with forms that have \"length\"-named elements. [#77 state:resolved] (Peter Adrianov, John-David Dalton, kangax)\n\n*1.6.1_rc1* (March 22, 2009)\n\n* `Element#update` now takes care of SCRIPT elements in IE. [#573 state:resolved] (Martin, Tobie Langel, kangax)\n\n* Remove unused local variables from `Element.extend`. Fix one of the form tests to remove `_extendedByPrototype` by setting it to `undefined` rather than `false` (`_extendedByPrototype` being `false` does not force `Element.extend` to re-extend element). (T.J. Crowder, kangax)\n\n* Make test for `escapeHTML`/`unescapeHTML` more strict. (Chrome 1.x escapes \"<\" and \"&\" with `innerHTML`, but not \">\") (kangax)\n\n* Remove another sniffing from one of DOM tests. Fixes last IE8 failure. (kangax)\n\n* `Element.extend` now takes care of IE8 bug when HTMLAppletElement and HTMLObjectElement objects do not inherit from `Element.prototype`. (kangax)\n\n* Fix DOM tests to use proper feature test when testing `setOpacity` (kangax)\n\n* Fix another failure in IE8, `for`/`htmlFor` {get/set}Attribute translation. (kangax)\n\n* Fix `Element#writeAttribute` and `Element#readAttribute` failures in IE8 due to lack of proper feature testing. (kangax)\n\n* Remove sniffing from one of the DOM tests, which produced failures in IE8. (kangax)\n\n* Fix `Form.reset` test where `respondsTo` wouldn't detect a method due to typeof returning \"object\" (rather than \"function\") in IE (kangax)\n\n* Remove Array#reduce which currently overrides native `reduce` in clients implementing JS1.8, e.g. Firefox 3+ (Tobie Langel, Andrew Dupont, kangax)\n\n* Make sure try/catch/finally is used instead of try/finally for clients without support for the latter one (e.g. Blackberry, IE) (Ville Koskinen, kangax)\n\n* Use `in` operator when accessing property of a nodelist to prevent Safari <=2.0.4 from crashing (kangax)\n\n* Add Element#clone as a safe wrapper of native `cloneNode`. (Andrew Dupont, kangax)\n\n* Add tests to ensure IE8 properly assigns a class name in the `Element` constructor. [#529 state:resolved] (Riki Fridrich, Andrew Dupont)\n\n* Remove sniffing from `Element` when detecting broken `setAttribute` in IE. [#571 state:resolved] (kangax)\n\n* Remove sniffing from `Element.update` branching in favor of feature detection. [#574 state:resolved] (kangax)\n\n* Remove sniffing when branching `escapeHTML` and `unescapeHTML`. [#570 state:resolved] (kangax)\n\n* Redefine Element#down in IE 6-7 to avoid extending all descendants when no selector is given. [#452 state:resolved] (eno, Andrew Dupont)\n\n* Reverse the definitions of Event#pointer(X|Y) and Event#pointer to prevent unnecessary computation. [#403 state:resolved] (Nick Stakenburg, Andrew Dupont)\n\n* Add first-class support for `mouseenter` and `mouseleave` events in non-IE browsers (IE supports them natively). [#350 state:resolved] (Nick Stakenburg, Andrew Dupont)\n\n* Make sure `_extendedByPrototype`, `_countedByPrototype`, and `prototypeUID` node expandos are accessed with `typeof` to prevent errors in some environments. [#354 state:resolved] (Hilberty, kangax, Andrew Dupont)\n\n* Fix issue where Opera 9.x returns incorrect results on certain Selector queries with descendant combinators. [#395 state:resolved] (Arpan, fearphage, kangax, Andrew Dupont)\n\n* Null out references to elements in cache on page unload. Need this in addition to the Event#stopObserving calls to clean up memory leaks. [#425 state:resolved] (ykphuah, mr_justin, Andrew Dupont)\n\n* Ensure `toString` and `valueOf` properties are copied to a subclass only when necessary in IE6. [#382 state:resolved] (Samuel Lebeau)\n\n* Make sure `getAttribute` is used without flag when accessing the \"type\" attribute of an iframe (IE throws error otherwise). [#118 state:resolved] (Zekid, kangax)\n\n* String#gsub should escape RegExp metacharacters when the first argument is a string. [#469 state:resolved] (michael, kangax)\n\n* Fix order of replacement in String#unescapeHTML [#544 state:resolved] (SWeini, kangax)\n\n* Fix issue where a Selector query rooted on a node that had not been attached to the document failed in IE. [#464 state:resolved] (jddalton, kangax, Douglas Fraser, Andrew Dupont)\n\n* Fix Selector to match elements with attributes containing hyphens. [#285 state:resolved] (leiyou, jddalton, kangax)\n\n* Make sure Form.reset always returns a reference to the receiver element. [#309 state:resolved] (Phil, kangax)\n\n* Escape \":\" and \".\" characters when doing contextual CSS selection in browsers that support querySelectorAll. [#559 state:resolved] (fxtentacle, Andrew Dupont)\n\n* Ensure the `target` property on events is never undefined in IE. [#383 state:resolved] (Mathias Karstädt, Diego Perini, Andrew Dupont)\n\n* Ensure Element#descendants always returns an array. [#373 state:resolved] (kangax)\n\n* Don't switch fixed position elements to absolute in Element.getDimensions [#543 state:resolved] (James Wheare)\n\n* Avoid infinite loops when calling String#sub with empty pattern [#534 state:resolved] (Samuel Lebeau)\n\n* Switch to Sprockets for building the Prototype distfiles. (sam)\n\n* Switch Object.is(Array|String|Number) to use the vastly-superior approach discovered by Juriy. (kangax)\n\n* Further fix to ensure Object.is(String|Number) do not throw exceptions on host objects in IE. (grepmaster, kangax, Tobie Langel, Andrew Dupont)\n\n* Ensure Enumerable#grep can handle strings with RegExp metacharacters. (Marton Kiss-Albert, kangax)\n\n* Switch to the \"doScroll approach\" for the dom:loaded custom event. (javier, Diego Perini, Nick Stakenburg, Andrew Dupont)\n\n* Optimize document.viewport.get(Dimensions|Width|Height). (Nick Stakenburg, Andrew Dupont)\n\n* Fix issue where Object#isString and Object#isNumber return false for String and Number \"wrapper\" objects. (atrepp, Samuel Lebeau, Andrew Dupont)\n\n* Set document.loaded = true before firing dom:loaded custom event. (Andrew Dupont)\n\n* Allow Element#store to accept an object containing several key/value pairs. (ZenCocoon, Andrew Dupont)\n\n* Change Element#store to return the element itself (for chaining). (Andrew Dupont)\n\n* Add non-bubbling custom events. A new final argument to Element#fire defaults to `true`; pass `false` to prevent bubbling when firing a custom event. (Andrew Dupont)\n\n* Alter event system to use new element storage API rather than have its own global hashtable. (Andrew Dupont)\n\n* Add Element#store and Element#retrieve for safe, hash-backed storage of element metadata (no memory leaks). Also add Element#getStorage for working with the element's storage hash directly. Hat tip: Mootools. (ZenCocoon, Andrew Dupont)\n\n* Fix issue where certain versions of Safari treat class names case-insensitively in Selector/$$ queries. (Andrew Dupont, kangax, Brice)\n\n* Fix issue where Function#argumentNames returned incorrect results in IE when comments were intermixed with argument names. (Christophe Porteneuve, T.J. Crowder)\n\n* Selector.patterns should be represented as an ordered structure. (ADO, kangax)\n\n* Performance improvements in Function methods (Samuel Lebeau, kangax, jddalton, Tobie Langel).\n\n*1.6.0.3* (September 29, 2008)\n\n* Add support for the Chrome browser in jstest.rb. (Andrew Dupont)\n\n* Workaround a JavaScript exception in Opera. (Thomas Fuchs)\n\n* Improve NodeList detection for Safari's $A function. (Garrett Smith, jddalton)\n\n* Use different tactic to sniff for Opera in order to avoid false positives in IE. (Tobie Langel, jddalton)\n\n* Rename variable in Form.Element.Serializers.select. (jddalton)\n\n* Coerce Opera's version string into a number whenever we need to sniff. (Sam Holman, jddalton)\n\n* Ensure Object.isElement handles \"falsy\" values properly. (kangax)\n\n* Fix exiting test task on INT signal. (Samuel Lebeau)\n\n* Fix unit test freeze in IE. (Tobie Langel)\n\n* Ensure Hash does not return keys from the prototype chain (e.g., constructor, valueOf, toString). (kangax)\n\n* Fix toString/valueOf sharing same method reference via closure in Class#addMethods. Use plain property assignment, since Object.extend fails to enumerate over toString/valueOf. (kangax)\n\n* Stop Form.Element.disable from stealing focus. (jddalton)\n\n* Ensure Element.hide and Element.show return an element, even if you pass an element ID. (Andrew Dupont)\n\n* Fix an issue where Element#getStyle('height') returns null if the height is set to \"auto.\" (kangax, jddalton)\n\n* Add unit tests for Element#descendantOf. (jddalton)\n\n* Form#serializeElements should not serialize file inputs. (kangax, Lonesome Boy)\n\n* Fix an issue with calling Event.pointer before the DOM is loaded. (kangax, jddalton) [#4 state:resolved]\n\n* Element#down on an input element should not raise error. (humeniuc, kangax)\n\n* More unit tests for Object.isHash. (Tobie Langel)\n\n* Allow Function#argumentNames to handle line breaks between arguments. (Geoff M. Granum, Tobie Langel) [#63 state:resolved]\n\n* For consistency, add additional optional parameter \"context\" to Number.prototype.times. (Samuel Lebeau)\n\n* Replace all instances of foo.__proto__ by foo['__proto__'] for Caja-compliance. (Tobie Langel)\n\n* Speed up Function#argumentNames. Avoid Enum dependency. (Samuel Lebeau, Tobie Langel)\n\n* Fix Event#element accessing inexistent tagName property (e.g. when element is a document). (kangax)\n\n* Amended failing Element#identify test.\n\n* Refactor unit tests. Unit tests are now dynamically generated from a JavaScript test file and optional HTML, JS and CSS fixtures. [Tobie Langel]\n\n* Fix issue where Safari improperly reports an element as a descendant of itself.\n\n* Greatly simplify IE's implementation of Element#descendantOf.\n\n* Prevent exception when using Selector to search for an attribute that is not present. [gryn, Andrew Dupont]\n\n* Fix issues where Firefox improperly returns the wrong node from a call to Event.element. Also fixes possible exception in Event.element in IE. [jdalton, Andrew Dupont]\n\n* Fix issue where Safari 3 deletes custom properties from the document object when the page is returned to via the back button. [mzsanford, kangax, Andrew Dupont]\n\n* Integrate support for the W3C Selectors API into the Selector class. Will now use the API when possible (browser supports the API *and* recognizes the given selector). Means minor changes to the semantics of :enabled, :disabled, and :empty in order to comply with CSS spec.\n\n* Avoid re-extending element in Element#getDimensions. [kangax]\n\n* Prevent Hash#toQueryString from serializing objets. [kangax, Tobie Langel]\n\n* Fix Event#pointer in IE standard mode. Closes #9920. [kangax, Tobie Langel]\n\n* Instanciate Test.Unit.Logger on window load. [Tobie Langel]\n\n* Unit tests clean-up. [Tobie Langel]\n\n* Refactor String#escapeHTML to avoid using the `with` statement. [Tobie Langel]\n\n* Remove usage of the `with` statement from unit tests. [Tobie Langel]\n\n* Complete rewrite of the deprecation helper, now renamed UpdateHelper and useable by third-party libs. [Tobie Langel]\n\n* Make Element#writeAttribute handle frameborder attribute in IE. Closes #11068. [staaky, Tobie Langel]\n\n* Minor clean-up of selector.js. Closes #10844. [RQuadling]\n\n* Make String#unescapeHTML strip tags in IE. Closes #10173. [kangax]\n\n* Stop form observers in unit tests. Closes #10938. [kangax]\n\n* Performance improvements for Enumerables. Closes #11264. [Ben, Samuel Lebeau]\n\n* deprecation extension: mark Hash.toJSON() as removed. [Tobie Langel]\n\n* deprecation extension: mark Class.create() used without arguments as deprecated. [Tobie Langel]\n\n* deprecation extension: mark Event.unloadCache as removed rather than deprecated. [Tobie Langel]\n\n* deprecation extension: log everything *but* deprecations with console.error. [Tobie Langel]\n\n* Change deprecation extension to use Firebug's console.warn and console.error. [Andrew Dupont, Tobie Langel]\n\n* Make tagName comparisons XHTML-compliant. Closes #11012, #11013, #11014. [cfis, Tobie Langel]\n\n* Avoid breaking Element.prototype in browsers which support it. Closes #11004. [cfis, Tobie Langel]\n\n* Prevent Element#cumulativeOffset, Element#getOffsetParent, Element#positionedOffset, Element#viewportOffset and Element#clonePosition from throwing an error in IE when called on a parent-less element. Closes #9416, #10192, #10248. [ronstoney, psiborg, kangax]\n\n* Prevent Enumerable#eachSlice from entering into an endless loop if passed an argument smaller than 1. Closes #10665. [kangax, Tobie Langel]\n\n* Allow Selector to correctly detect the presence of namespaced attributes. Closes #10987. [Samuel Lebeau, Tobie Langel]\n\n* Make Element#absolutize and Element#relativize always return element. Closes #10983. [kangax]\n\n* Add deprecation extension. [Tobie Langel]\n\n*1.6.0.2* (January 25, 2008)\n\n* Update the list of officially supported browsers in the README.  [sam]\n\n* Add tests for Element#descendantOf that deal with dynamically-created elements. [Andrew Dupont]\n\n* Ensure positionedOffset properly considers \"position: fixed\" elements. Also ensures IE reports offsets correctly by triggering hasLayout when a \"static\" element has a \"fixed\" element as an offset parent. Closes #10644. [heygrady, kangax, Andrew Dupont]\n\n* Roll back the fix for #9609, since it does not work in Opera. Instead, avoid using \"valueOf\" or \"toString\" as field names in forms.\n\n* Prevent DOM node expandos _countedByPrototype and _prototypeEventID from being serialized into (inner|outer)HTML in IE. Closes #10909. [dcpedit, Tobie Langel, Andrew Dupont]\n\n* Make Ajax.Request#isSameOrigin JavaScript Lint compliant. [Andrew Dupont]\n\n* Properly serialize form fields with names that collide with built-in JS properties (like \"length\" or \"toString\"). Closes #9609. [gryn, kangax]\n\n* Make Object.isArray correctly identify arrays created in another frame. Closes #10374. [pointy, Dean Edwards, Andrew Dupont, Tobie Langel]\n\n* Fixed issue where Element#match failed on attribute selectors with single or double quotes. Closes #10067. [Cezary Okupski, Andrew Dupont]\n\n* Add tests for Element#match.  [Tobie Langel]\n\n* Fix Element#writeAttribute to work with 'cellspacing' and 'cellpadding' attributes in IE. Closes #9983. [/dev/urandom, Tobie Langel]\n\n* Prevent a potential security issue for cross-site ajax requests. [Alexey Feldgendler, sam, Tobie Langel]\n\n* Test for attribute existence before applying more complex CSS3 selectors. Closes #10870. [arty, Tobie Langel]\n\n* Fix \"function $A\" declaration inside of a conditional (confuses IE). Closes #10882. [Jacco, Andrew Dupont]\n\n* Fixed selector parsing so that \"#foo [bar=baz]\" is treated the same way as \"#foo *[bar=baz]\". Closes #10734. [jlukas, kangax, Andrew Dupont]\n\n* Fix Element#descendantOf logic in IE. Closes #10413. [martymix, kamil.szot]\n\n* Fix missing \"var\" in Element#insert. Closes #10838. [Lantash]\n\n* Add Test.Unit.MessageTemplate class. Add flunk, buildMessage and assertBlock methods to Test.Unit.Assertions. Refactor accordingly. [Tobie Langel]\n\n* Remove useless binding in Template#evaluate. [Tobie Langel]\n\n* Make Object.inspect more robust. [Tobie Langel]\n\n* Add a description to :test and :dist rake tasks. [Christoph Sturm]\n\n* Fix Selector.matchElements to allow for coma-separated selectors in Element#up/next/previous and Event#findElement. [Samuel Lebeau, Tobie Langel]\n\n* Test.Unit refactoring. Allow running multiple instances of Test.Unit.Runner on the same page. Allow rake to run specific testcases (e.g.: rake test BROWSERS=firefox TESTS=array TESTCASES=testUniq,test$w). Closes #10704, #10705, #10706. [nicwilliams, Tobie Langel]\n\n* Optimize property detection of outerHTML. Avoids triggering FOUC in Safari 3.0.4. Closes #10702. [subimage, Tobie Langel]\n\n* Add document.loaded, a boolean that is set to true once dom:loaded is fired. Setting document.loaded to true before the document is loaded prevents dom:loaded from being fired. [Tobie Langel]\n\n* Make Element#insert standard-compliant. Fixes an issue in FF3b2 when inserting HTML or text inside DOM nodes which aren't (yet) appended to the document. [Tobie Langel]\n\n* Add some missing semicolons to the source tree.  Closes #10659.  [Richard Quadling]\n\n* Ensure Ajax.Response#getHeader returns null for missing headers in Opera. [Tobie Langel]\n\n* Allow WEBrick to simulate slow or dropped connections and to ease Ajax request inspection. [Tobie Langel]\n\n* Ensure Ajax.Response#getHeader returns null for missing headers. [Tobie Langel]\n\n* Ensure $A creates an empty array when its argument's length is undefined. Closes #10574. [henryju, Tobie Langel]\n\n* Fix incorrect variable declaration in Event.fire. Closes #10329. [rubley]\n\n* Fix the way Selector handles [pseudoclass + combinator] with no space in between. Closes #9696. [kangax, fearphage, Andrew Dupont]\n\n* Optimize Element#up/down/next/previous. Closes #10353. [Dylan Bruzenak, Nick Stakenburg, Andrew Dupont]\n\n* Handle case-sensitivity in Selector tag names better. Closes #5052. [mexx, Andrew Dupont]\n\n*1.6.0.1* (December 4, 2007)\n\n* Change document.viewport.getDimensions to exclude scrollbars in all cases. Closes #10148, #9288. [Nick Stakenburg]\n\n* Add logic to Element#getStyle in Opera that fixes inaccurate reporting of computed 'width' and 'height' properties. [Andrew Dupont]\n\n* Ensure that an Ajax.Request's parameters option can be a Hash.  Closes #10172.  [kangax, sam] \n\n* Ensure no comment nodes are returned in Selector queries (IE improperly returns comment nodes on getElementsByTagName(\"*\")). Change Element#descendants to use Element#getElementsBySelector in order to avoid this issue. Closes #10220. [Jeff Gobel, Andrew Dupont]\n\n* Re-enable the XPath approach in Selector for Safari 3. Falls back to the non-XPath version when it sees a problematic token. [Andrew Dupont]\n\n* Fix a bug in the IE-specific Element#descendantOf logic. [Nicholas, Andrew Dupont]\n\n* Make Ajax.Updater clone its options hash before modifying it. Prevents memory leaks in Ajax.PeriodicalUpdater. Closes #10049 [Mislav Marohnić, Tobie Langel].\n\n* Remove useless variable in Selector.handlers.child. Closes #10006 [kuriyama]\n\n* Don't redeclare previously declared variables. Closes #10007 [kuriyama]\n\n* For consistency: use Object.isUndefined where possible. [Tobie Langel]\n\n* Make String#isJSON return false for empty or blank strings. Make Ajax.Response#responseJSON null when Ajax.Response#responseText is empty or blank. [Andrew Dupont, Thomas Fuchs, Tobie Langel]\n\n* Make Ajax.Response#_getResponseJSON use Ajax.Response#responseText. [Tobie Langel]\n\n* Remove the forked declaration of Hash#_each. As we are now systematically cloning the object upon instantiation, preventing iteration of shadowed properties is no longer required. [Tobie Langel]\n\n* Performance optimizations for Event#findElement. Make Event#findElement's expression argument optional, in which case the extended target element is returned (same as Event#element). [Tobie Langel]\n\n* Ensure Event#fire always returns an extended event. [Tobie Langel]\n\n*1.6.0* (November 6, 2007)\n\n* Fix Class#addMethods for \"toString\" and \"valueOf\" methods in Internet Explorer.  Closes #9901.  [sam]\n\n* Exclude Opera from using the sourceIndex approach in Element#descendantOf. [Tobie Langel, Andrew Dupont]\n\n* Ensure Element#hasClassName always returns a boolean. Closes #10075. [ronnylovtangen, Tobie Langel]\n\n* Ensure selectors of the form \"[href]\" (attribute token with no preceding tag name) work properly. Closes #8870. [chao, kangax, Andrew Dupont]\n\n* Performance optimizations for Element#descendantOf. Costliness should no longer be dependent on the difference in depth between the parent and the child. [Andrew Dupont]\n\n* Apply the workaround for the Firefox \"blinking element\" opacity=1 bug only to Firefox 1.5.  [Thomas Fuchs]\n\n* Add event.stopped, a boolean that is set to `true` when Event#stop is called. [Andrew Dupont, sam]\n\n* Reset the browser's dimensions to their original settings after running the DOM viewport tests.  [sam]\n\n* Fix the test runner for Firefox in Leopard.  [sam]\n\n* Use String#include wherever possible.\n\n* In IE, allow opacity to be set on elements not yet attached to the document. Closes #9904. [Thomas Fuchs, dcpedit, Tobie Langel]\n\n* Avoid the try..catch block in Ajax.Response#_getResponseJSON unless required. [Tobie Langel]\n\n* Add more tests to Element.update. Closes #9327. [Tobie Langel]\n\n* Make the Ajax.Response#headerJSON property correctly decode unicode characters. Closes #9285. [Marius Feraru, Tobie Langel]\n\n* Make sure Event and Event.extend are defined before wrapping events and calling their handler. Prevents a known Firefox bug from throwing errors on page load/unload (cf.: https://bugzilla.mozilla.org/show_bug.cgi?id=361271). Closes #5393, #9421. [staaky, John Resig, sam, Tobie Langel]\n\n* Minor cosmetic changes to the display of unit tests in terminal. [Tobie Langel]\n\n* Make submitting forms work in Opera < 9.1. Closes #9917, #9463, #8260. [kangax]\n\n* Fix template evaluation with empty replacements.  Closes #9692.  [Ryan McGeary]\n\n* Hash#toTemplateReplacements is an alias for Hash#toObject so you can once again pass hashes to Template#evaluate and String#interpolate.  [sam]\n\n* Fix Event#is(Left|Middle|Right)Click in IE.  Closes #7520 (again).  [Mislav Marohnić]\n\n*1.6.0_rc1* (October 16, 2007)\n\n* Ensure Event.* generic methods work in IE, even when the event is not extended. [Viktor Kojouharov, Andrew Dupont]\n\n* Don't translate \"keypress\" events into \"keydown\" events.  [sam]\n  Note: \"keypress\" is broken in Safari <= 2.x, but Event#stop has no effect on \"keydown\" events.\n\n* Changed Element#makeClipping to remember the original overflow value, even if it's a non-inline style. [Andrew Dupont]\n\n* Cross-browser Event#isLeftClick with the addition of is(Middle|Right)Click.  Closes #7520.  [Christophe Porteneuve, Richard Quadling, Mislav Marohnić]\n\n* Changed Selector to use the non-XPath approach for Safari 3 because of bugs in its version of document.evaluate. [Andrew Dupont]\n\n* Changed the Selector regex that tests whether the selector can be expressed in XPath; added :checked, since XPath can't detect all scenarios in which an <input> is checked. Fixes #9776. [StelardActek, kangax, Andrew Dupont]\n\n* Changed Selector pattern match so that descendant combinators after pseudoclass tokens are properly handled. Fixes #9696. [wiktor, kangax, Andrew Dupont]\n\n* Make sure $w always returns an array. [Andrew Dupont, Tobie Langel]\n\n* Add more tests to Hash. [Mislav Marohnić]\n\n* Performance enhancements to $A. Closes #9464. [Samuel Lebeau]\n\n* Make Function#argumentNames work with named functions. Closes #9826. [Samuel Lebeau]\n\n* Add Object.isHash. [Tobie Langel]\n\n* Performance improvements to String#times. [Martin Ström]\n\n* Make Ajax.Response#getHeaderJSON and Ajax.Response#getResponseJSON pseudo private instance methods. [Tobie Langel]\n\n* Make ObjectRange use the new Class.create syntax. [Mislav Marohnić]\n\n* Fix a failing ClassCreate test case in IE. [Tobie Langel]\n\n* Complete rewrite of the Hash class.\n\n  !! BACKWARDS COMPATIBILITY CHANGE !! This new version of Hash is NOT backwards compatible with the former Hash class.\n  \n  Properties are now hidden away in an private store to prevent the risk of collision with Hash's instance and mixed-in methods.\n  This implies that properties of the hash can no longer be set, accessed or deleted directly: use the new Hash#get(key), Hash#set(key, value) and Hash#unset(key) instance methods instead.\n  \n  - Make $H(object) equivalent to new Hash(object). Both now return a new (cloned) instance of Hash in all circumstances.\n  - Make Hash#merge non-destructive.\n  \n  - Add Hash#update (a destructive version of Hash#merge).\n  - Add Hash#clone (returns a new, cloned instance of Hash).\n  - Add Hash#toObject (returns a clone of the contained object).\n  - Add Hash#get(key) (returns the value of the specified property).\n  - Add Hash#set(key, value) (sets the value of the given property. returns the value).\n  - Add Hash#unset(key) (deletes the specified property and returns its value).\n  - Add Hash.from as a alias to $H for consistency with Array.from.\n  - Add Object.toQueryString.\n\n  - Deprecate Hash.toQueryString (use Object.toQueryString or the instance method Hash#toQueryString instead).\n\n  - Remove Hash#remove (use Hash#unset instead).\n  - Remove Hash.toJSON (use Object.toJSON or the instance method Hash#toJSON instead). [sam, Tobie Langel]\n\n* Element#wrap now returns the wrapper instead of the element being wrapped.  [sam]\n\n* Namespace all custom event names to avoid conflicts with native DOM events.  [sam]\n  - All custom event names MUST include a namespace.  Prefix custom event names for observe, stopObserving, and fire with the namespace followed by a colon.  E.g. document.fire(\"widget:activated\")\n  - The \"contentloaded\" event is now \"dom:loaded\".\n  - The Event.DOMEvents array is no longer present.  If an event name does not include a namespace, the event is treated as a native event.\n\n* Clean up the new class API.  [sam, Tobie Langel]\n  - Add Class#addMethods for adding instance methods to classes.  \n  - Remove Class.extend and Class.mixin.  \n  - Class.create now takes a variable number of arguments: if the first argument is a class, the newly created class inherits from that class; all other arguments are treated as successive calls to addMethods.\n\n* Fix contentloaded event initialization in IE.  Closes #9457, #9488, #9707.  [Mislav Marohnić]\n\n* Deprecate document.getElementsByClassName and Element#getElementsByClassName since native versions return a NodeList and we can only return an Array.  Please use $$ or Element#select instead.  [sam]\n  For more information see https://bugzilla.mozilla.org/show_bug.cgi?id=390411\n\n* Fix missing \"var\" in selector.js.  Closes #9761.  [Tobie Langel]\n\n* Date#toJSON now returns times in UTC for better compatibility with json.js.  Closes #9332.  [Tobie Langel]\n\n* Ensure document._getElementsByXPath extends the elements it returns; fixes $$ not returning extended elements in Opera 9.2.  Closes #8843.  [jdalton]\n\n* Update Prototype.Browser.MobileSafari for iPod touch compatibility.  [sam]\n\n* Add tests for Object.extend and Object.clone.  [Tobie Langel]\n\n* Add a test for Form.Observer.  [Christoph Sturm]\n\n* Make sure setting opacity works on elements that have \"no layout\" in IE.  [Thomas Fuchs]\n\n* Simplify Class.create by establishing a prototype chain when subclassing.  Closes #9342.  [Ben Newman]\n\n* Fix Ajax.PeriodicalUpdater for compatibility with Ajax.Response.  Closes #9321.  [kampers]\n\n* Ensure that classes always have an initialize method.  [Mislav Marohnić]\n\n* Update Template, Selector, Ajax.*, and ObjectRange classes to use the new class system.  [Mislav Marohnić]\n\n* Change Abstract.TimedObserver to subclass PeriodicalExecuter and tweak its subclasses to use new inheritance functionality.  TimedObserver can now be stopped the same way as PeriodicalExecuter.  Closes #8589.  [Mislav Marohnić]\n\n* Fix Class.mixin to extend the class's prototype.  [Mislav Marohnić]\n\n* Fix superclass method call breakage from [7337].  [Mislav Marohnić, sam]\n\n* Change Class.extend to allow for superclass method resolution and remove Class.inherit.  Closes #9274.  [Samuel Lebeau]\n\n* Event handlers are now bound to the observed element, not the event's target element.  [Dan Webb]\n\n* Define Node constants conditionally after checking for Node.ELEMENT_NODE presence.  Add unit test to check the values of all constants.  Closes #7625.  [Mislav Marohnić]\n\n* Make sure Enumerable#include doesn't do type comparision.  [Mislav Marohnić]\n\n* Add contextmenu to Event.DOMEvents.  [Thomas Fuchs]\n\n*1.6.0_rc0* (August 15, 2007)\n\n* Fix readAttribute-related failure in form.html in IE.  [sam, Andrew Dupont]\n\n* Fix failing dom.html and selector.html tests in IE.  [Tobie Langel, Andrew Dupont]\n\n* Make sure the WebKit redefinition of Element#cumulativeOffset uses Element._returnOffset.  Closes #9245.  [mdaines]\n\n* Make sure Element#observe and Element#stopObserving are always chainable.  [sam]\n\n* Event.fire/Element#fire now returns the newly-fired event instead of the event's target element.  [sam]\n\n* Restrict Event.DOMEvents to include only events that can be supported in all browsers.  [sam]\n\n* Fix a failing test in base.html in Safari 2.  [Tobie Langel]\n\n* Fix Element#positionedOffset and Element#getOffsetParent for static elements on IE.  [Thomas Fuchs]\n\n* Make sure event handlers and their wrappers are removed from the cache by Event.stopObserving.  [sam, Severin Heiniger]\n\n* Add line numbers to failures when unit testing in Firefox.  Closes #9231.  [John Resig]\n\n* Fix Function#argumentNames for Opera and IE.  [Thomas Fuchs]\n\n* Add Object.isString, Object.isNumber, and Object.isUndefined, and clean up the source to make use of Object.isXXX where possible.  [sam]\n\n* Add the document.viewport object for querying dimensions and scroll offsets of the browser viewport.  [Andrew Dupont, Thomas Fuchs, sam]\n  Example:\n    document.viewport.getDimensions()     // { width: 1149, height: 923 }\n    document.viewport.getWidth()          // 1149\n    document.viewport.getHeight()         // 923\n    document.viewport.getScrollOffsets()  // { left: 0, top: 1592 }\n\n* Add support for brackets in quoted attribute value selectors.  Closes #9157.  [Ken Snyder]\n\n* Add some missing semicolons to the source tree.  Closes #9140.  [jdalton]\n\n* Fix event extensions and custom events firing for Safari 2.0.  [Thomas Fuchs]\n\n* Add RegExp.escape for escaping regular expression strings.  Closes #9094.  [Ken Snyder]\n\n* Make the eventName and handler arguments to Event.stopObserving optional.  If no handler is specified, all handlers for the given event are unregistered.  If no event name is specified, all observed events on the element are unregistered.  [sam]\n\n* Add cross-support for the DOMContentLoaded event through a Prototype custom event on document called \"contentloaded\".  The DOMContentLoaded event fires before window.load, when the entire HTML document, but not necessarily its images, stylesheets or other assets, has loaded.  Based on [6596].  [sam, Mislav Marohnić] \n  Example:\n    document.observe(\"contentloaded\", function() {\n      $$(\"a\").invoke(\"identify\"); // give all <a> tags an ID\n    });\n\n* Add Event.fire and Element.Methods.fire for firing custom events.  Prototype custom events piggyback on a real DOM event (\"ondataavailable\"), so they bubble and cancel.  You can fire custom events from any element, or fire global events on the document object.  Observe custom events just as you'd observe a regular DOM event.  [sam, Seth Dillingham]\n\n* Extend the event object with methods from Event.Methods and normalize it in IE.  [sam, Mislav Marohnić]\n\n* Remove support for observing the capturing phase of DOM events, since we can't support it in all browsers.  [sam]\n\n* Add Ajax.Response object which supports the following methods: responseJSON, headerJSON, getHeader, getAllHeaders and handles browser discrepancies in the other response methods. Add sanitizeJSON, evalJS and evalJSON to Ajax.Request. Closes #8122, #8006, #7295. [Tobie Langel]\n\n* Add an isRunningFromRake property to unit tests. [Tobie Langel]\n\n* Add support for Opera browser in jstest.rb. [Tobie Langel]\n\n* Inheritance branch merged to trunk; robust inheritance support for Class.create. Closes #5459. [Dean Edwards, Alex Arnell, Andrew Dupont, Mislav Mahronic]\n - To access a method's superclass method, add \"$super\" as the first argument. (The naming is significant.) Works like Function#wrap.\n - Class.create now takes two optional arguments. The first is an existing class to subclass; the second is an object literal defining the instance properties/methods. Either can be omitted. Backwards-compatible with old Class.create.\n - Added Class.extend for dynamically adding methods to existing classes (while preserving inheritance chain). Can also be used for mixins.\n - The 'constructor' property of a class instance always points back to the proper class. Class objects themselves have two special properties: 'superclass' and 'subclasses' (which default to 'null' and '[]', respectively). Allows for powerful introspection.\n - Added Object.isFunction [sam]\n \n* Add Function#argumentNames, which returns an ordered array of the function's named arguments.  [sam]\n\n* Prevent a crash in Safari 1.3 on String#stripScripts and String#extractScripts. Closes #8332. [grant, Tobie Langel]\n\n* Add Prototype.Browser.MobileSafari which evaluates to true on the iPhone's browser.  [sam]\n\n* Optimize Selector#match and Element#match for simple selectors.  Closes #9082.  [Andrew Dupont]\n\n* Remove the dependency on Element.ClassNames from Element#addClassName/removeClassName/toggleClassName, and deprecate Element.ClassNames. Closes #9073. [Tobie Langel]\n\n* Make Element#wrap accept a second argument for setting attributes on the wrapper. Allow wrapping elements which are not part of the document. Closes #9071. [Tobie Langel]\n\n* Improvements for Element#replace, Element#update and Element#insert.  Closes #7429, #9060.  [Tobie Langel]\n  - Element#replace/update/insert uses the argument's toElement or toHTML method if present (toElement has precedence if both are present).\n  - Element#replace and Element#update now also accept DOM elements.\n  - Element#replace better handles table-related elements in IE and Opera.\n  \n* Add Object.isArray and Object.isElement (returns true if the object is a DOM node of type 1). [Tobie Langel]\n\n* Add Object.toHTML (uses the object's toHTML method if present or else passes the object to String.interpret). [Tobie Langel]\n\n* Make Element#setStyle accept a string argument of CSS rules. Deprecate uncamelized style property names when setting styles using an object (for performance reasons).  Closes #9059.  [Tobie Langel]\n  Examples:\n    $('id').setStyle('font-size: 12px; float: left; opacity: 0.5');\n    $('id').setStyle({fontSize: '12px', cssFloat: 'left', opacity: 0.5});\n\n  !! BACKWARDS COMPATIBILITY CHANGE !!\n  \n  If you have code that looks like this:\n    $('id').setStyle({'font-size': '12px'});\n  You need to replace it with either of the following:\n    $('id').setStyle({fontSize: '12px'});\n    $('id').setStyle('font-size: 12px;');\n\n* Add Element#identify, which returns the element's ID if it exists, or sets and returns a unique, auto-generated ID (of the form \"anonymous_element_\" + auto-incremented digit) otherwise.  Use this when you need to ensure an element has an ID.  Closes #9012.  [Jeff Watkins, sam, Tobie Langel]\n\n* Make Element#readAttribute work for cloned elements in IE. Closes #8481. [chem, Tobie Langel]\n\n* Template enhancements.  Closes #8166.  [Christophe Porteneuve]\n  - Added String#interpolate as a shortcut for new Template(...).evaluate(...). \n  - If you pass String#interpolate or Template#evaluate an object with a toTemplateReplacements() method, the return value of that method will be used as the replacement object.\n  - You can now substitute properties of template replacement values in template strings, using dot or bracket notation (or both).  Example:\n    \"#{name.last}, #{name.first[0]}. (#{location})\".interpolate({\n      name: { first: \"Christophe\", last: \"Porteneuve\" }, location: \"Paris\"\n    }) // \"Porteneuve, C. (Paris)\"\n\n* Extended grep semantics.  The first argument to Enumerable#grep is now a \"filter\" (an object with a match() method) so you can now e.g. filter an array of DOM nodes by CSS selector.  RegExp#match is now an alias to RegExp#test, so grep can still be used to filter an array of strings with a regular expression.  Closes #7596.  [Christophe Porteneuve, sam]\n\n* Make String#scan explicitly return a string. This prevents possible issues with methods expecting input data that is typeof == 'string'. Closes #6350. [AndrewRev, Tobie Langel]\n\n* Add Array#intersect for set intersection. Returns a new array containing all items common to the array and the argument, with duplicates removed (clone of the Ruby & method).   [Thomas Fuchs]\n  Example:\n    [1,1,3,5].intersect([1,2,3]) -> [1,3]\n\n* Rename Element#getElementsBySelector to Element#select and add alias for Element#getElementsBySelector.  [Thomas Fuchs]\n\n* Add Element#adjacent as a shortcut to selecting all adjacent nodes (and their children) that match a CSS selector.  [Thomas Fuchs]\n\n* Enhance the Enumerable and Array APIs to more closely match those of JavaScript 1.6 as implemented in Firefox 1.5.  Closes #6650, #8409.  [Mislav Marohnić, Sylvain Zimmer]\n  - Add Array#lastIndexOf, and change Array#indexOf not to overwrite the native method. \n  - Make Enumerable use Array.prototype.forEach instead of _each when possible (slight speed increase).\n  - Add \"filter\", \"entries\", \"every\", and \"some\" Array aliases. \n  - All Enumerable methods now have an additional parameter, \"context\", which, if present, specifies the object to which the iterators' \"this\" is bound. \n  - Function#bind and #curry now return the receiving function if the binding object is undefined.\n\n* Temporary workaround for Prototype.BrowserFeatures.SpecificElementExtensions incorrectly evaluating to true on iPhone. (needs further investigation)  [sam]\n\n* The action for Form#request defaults to the current URL if the \"action\" attribute is empty. (This is what most of the major browsers do.) Fixes #8483. [Tomas, Mislav Marohnić]\n\n* In form serialization, change the way submit buttons are handled. Previously all submit buttons were serialized; now Prototype serializes only the first one. Change Form#serialize and Form.serializeElements to accept a params hash. With the \"hash: false\" option, a serialized string is returned instead of the hash data object. With the \"submit: 'foo'\" option, only the submit button with the name \"foo\" is serialized.  References #5031.  [Mislav Marohnić]\n  Examples:\n    $('form').serialize({ submit: 'delete' })\n    $('form').serialize({ hash: false }) //-> equivalent to $('form').serialize()\n\n* Form#findFirstElement respects HTML tabindexes.  Closes #7595.  [Christophe Porteneuve]\n\n* Added Form.Element#setValue method for setting values on various form controls. Checkboxes and radio buttons respond to a boolean and multiple select boxes expect an array of values.  Closes #5902.  [Jonathan Viney, Mislav Marohnić]\n  Examples:\n    $('text_input').setValue('hello world!')\n    $('remember_me').setValue(true)\n    $('attend_classes').setValue(['cheese rolling', 'evil chemistry'])\n\n* Make document.getElementsByClassName match a subset of the WHATWG Web Applications 1.0 specification which was adopted in Firefox 3 (http://www.whatwg.org/specs/web-apps/current-work/#getelementsbyclassname). It now supports multiple class names given as a whitespace-separated list in a string. Array argument is not supported. The method will only return the nodes that match all the class names. In browsers that implement the method natively it will not be overwritten.  Closes #8401.  [Mislav Marohnić]\n  Example:\n    document.getElementsByClassName('foo bar')\n\n* Fix a Safari rendering issue when floating elements could temporarily disappear when opacity was set to 1.  Closes #7063.  References #3044, #3813, #6706.  [Thomas Fuchs, davidjrice]\n\n* Prevent a crash in Safari when calling String#evalJSON(true) on very large strings. Add String#isJSON.  Closes #7834.  [Tobie Langel]\n\n* Prevent a crash in Safari 1.3 on String#stripScripts and String#extractScripts.  Closes #8332.  [grant, Tobie Langel]\n\n* Allow JSON data to contain line breaks.  Closes #8271.  [pijyster, Tobie Langel]\n\n* Add Hash.prototype.index which returns the first found property that has a specific value.  Closes #8528.  [Thomas Fuchs, slusarz, Mislav Marohnić]\n  Examples:\n    var hash = $H({a:1,b:'2'});\n    hash.index(1)   // -> 'a'\n    hash.index('1') // -> undefined\n\n* Ensure HTMLElement exists before creating Element.extend.  [Tobie Langel]\n\n* Add Number.prototype.round/ceil/floor/abs as an aliases to the respective methods in Math. Refactor to seperate number extensions from base.js.  [Thomas Fuchs]\n\n* Make Element#absolutize and Element#relativize properly use Element#getStyle.  Closes #8580.  [Christophe Porteneuve]\n\n* Test library fixes: make rake dist work on Windows, only teardown if a browser is supported.  Closes #8463, #8498.  [Mislav Marohnić, grant]\n\n* Change Element.insert syntax to allow multiple positions.  [Thomas Fuchs]\n  Examples:\n    Element.insert('foo', {top:'bar', bottom:'baz'});\n    $('foo').insert({after: new Element('p').update('bar')});\n    Element.insert('foo', new Element('p').update('bar')); // defaults to bottom\n    Element.insert('foo', 'bar'); // defaults to bottom\n\n* String.prototype.truncate now explicitly converts its return value into a string if no truncation takes place. This prevents possible issues with methods expecting input data that is typeof == 'string'.  [Thomas Fuchs, Tobie Langel, Sam Stephenson]\n\n* Event.findElement behaves as expected when the element passed matches the given selector.  Closes #8395.  [Mislav Marohnić, Tobie Langel]\n\n* Element.setOpacity now calls removeAttribute on the filter style on IE if no more filters remain, which makes Cleartype work properly.  Closes #8376.  [alexdemi, Thomas Fuchs]\n\n* Event.findElement now uses Element#up (and as a result can take a CSS selector instead of just a tag name).  [Tobie Langel]\n\n* Minor cleanup of the position methods  [sam]\n\n* Fix Element#clonePosition to call viewportOffset.  Closes #8372.  [graemenelson, Christophe Porteneuve] \n\n* Prevent an error being thrown by $$ when #id does not exist in $$(\"div #id\").  Closes #8325.  [Tobie Langel, ecke]\n\n* Make Prototype.ScriptFragment behave when including Prototype inline.  [Christophe Porteneuve]\n\n* Deprecate Position (kept for backwards compatibility). Add Element#cumulativeOffset, Element#positionedOffset, Element#absolutize, Element#relativize, Element#cumulativeScrollOffset, Element#getOffsetParent, Element#viewportOffset and Element#clonePosition. [Christophe Porteneuve]\n\n* Make Element#update and Element#insert work for SELECT tags in IE and Opera. [Tobie Langel]\n\n* Make Element#insert and Element#update better handle TABLE related elements in IE and Opera. Closes #7776, #8040, #7550, #7776, #7938. [Tobie Langel]\n\n* Make Element#readAttribute('title') work in Opera. [Tobie Langel]\n\n* Make Element#replace work with form elements in Firefox and Safari. Closes #8010, #7989. [dsl239, Tobie Langel]\n\n* Add Element#wrap which wraps the element inside a new one. Closes #5732. [P. Vande, Tobie Langel]\n\n* Make Element into a constructor: new Element(tagName, attributes). Add Element#writeAttribute which accepts a hash of attributes or a name/value pair. Closes #7476. [Mislav Marohnić, haraldmartin, Tobie Langel]\n\n* Insertion overhaul: Add Element.insert(content[, position = 'bottom']). Deprecate Insertion (kept for backwards compatibility). Make Ajax.Updater option.insertion accept both Insertion.Top or the now preferred 'top'. Closes #7907. [Tobie Langel]\n\n* Refactor Element.extend and eliminate Element.extend.cache.  [sam]\n\n* Add Function#curry, Function#delay, Function#defer, and Function#wrap.  Closes #8134.  [Andrew Dupont, Tobie Langel, sam]\n\n*1.5.1* (May 1, 2007)\n\n* Don't duplicate the event argument in Function#bindAsEventListener.  Closes #6497.  [wiktor]\n\n* Fix Selector :not-clause chaining.  [Andrew Dupont]\n\n*1.5.1_rc4* (April 27, 2007)\n\n* Fix $F breakage from [6598].  [sam]\n\n* Set window.$continue to an Error with a helpful message for anyone who may still be using \"throw $continue\".  [sam]\n\n* Fix jstest.rb IE support so you don't have to close the IE window after each test (yay!).  Closes #8207.  [Ryan Schuft]\n\n* Fix jstest.rb Konqueror support.  Closes #7140.  [Christophe Porteneuve]\n\n* Fix regression in which no-argument calls to Element.addMethods() would not add the methods defined in Form.Methods and Form.Element.Methods.  Closes #8206.  [Tobie Langel, fwittekind]\n\n* Fix Element#readAttribute to work with the 'type' attribute in IE.  Closes #8160.  [Tobie Langel, Wiktor Ihárosi]\n\n*1.5.1_rc3* (April 24, 2007)\n\n* Add Element#childElements as an alias for Element#immediateDescendants.  [Tobie Langel]\n\n* Optimize DOM navigation methods (Element#up, Element#down, Element#previous, Element#next) for no-argument calls.  Closes #7848.  [haraldmartin, sam]\n\n* Add Element#firstDescendant to retrieve the first non-text child node of an element.  [sam]\n\n* Element.addMethods should add methods to Element as well as Element.Methods.  Closes #7888.  [Andrew Dupont]\n\n* Add support for per-request onCreate callbacks to Ajax.Request.  Closes #8011.  [Andrew Dupont]\n\n* Don't call evalResponse() when an Ajax response has no Content-type header.  Closes #7827.  [Tobie Langel]\n\n* Automatically strip security delimiter comments from JSON strings before evaling them.  The default delimiter is '/*-secure- ... */' or you can specify your own with the Prototype.JSONFilter regular expression.  If you wrap your JSON response bodies in this delimiter on the server side, rogue external sites can't hijack potentially sensitive data via <script> tags.  Closes #7910.  [Tobie Langel]\n  For more details on potential security problems, see: http://www.fortifysoftware.com/servlet/downloads/public/JavaScript_Hijacking.pdf\n\n* Add extra spacing so Array#toJSON and Hash#toJSON generate YAML-loadable JSON.  Closes #7883.  [Andrew Dupont]\n\n* Fix Form.request for forms containing an input element with name=\"action\".  Closes #8063.  [Thomas Fuchs, Mislav Marohnić]\n\n* Make Event.element extend the returned element.  Closes #7870.  [Thomas Fuchs]\n\n* Prevent a crash on Safari on String.prototype.stripScripts and extractScripts with large <script> tags.  [Thomas Fuchs]\n\n* Prevent linefeed normalisation in String.prototype.escapeHTML and unescapeHTML on IE for consistency with other browsers. Speed optimizations for Safari and IE.  [Thomas Fuchs]\n\n* Make Hash.toQueryString serialize undefined values. Ensure consistency with String.prototype.toQueryParams.  Closes #7806.  [Mislav Marohnić]\n  Examples:\n    $H({a:'b',c:undefined}).toQueryString()      -> 'a=b&c'\n    $H({a:'b',c:null}).toQueryString()           -> 'a=b&c='\n    $H('a=b&c'.toQueryParams()).toQueryString()  -> 'a=b&c'\n    $H('a=b&c='.toQueryParams()).toQueryString() -> 'a=b&c='\n    \n* Fix issues with Selector an+b logic, :not support, attribute selector double quotes, plus performance improvements.  Closes #7873, #7901.  [Andrew Dupont]\n\n* Fix Form.disable to work again on non-form elements.  Closes #6887.  [Mislav Marohnić]\n\n* Fix an issue with String.prototype.endsWith.  Closes #7822.  [altblue]\n\n*1.5.1_rc2* (March 12, 2007)\n\n* Add a tab character via innerHTML to the selector whitespace test.  [Christophe Porteneuve]\n\n* Add an attribution to YUI-Ext's DomQuery in selector.js.\n\n* Make Element.extend work on IE for Nodes with the same ID that where discarded.  Closes #7497.  [Mislav Marohnić, Thomas Fuchs]\n\n* Make Selector correctly extend the first element it returns on IE.  [Thomas Fuchs]\n\n* Prevent a crash in Safari when using $A() on NodeList objects that contain text nodes.  [Thomas Fuchs]\n\n* Fix Element.Methods.descendants() to properly extend elements on IE.  [Thomas Fuchs]\n\n*1.5.1_rc1* (March 9, 2007)\n\n* Fix readAttribute for IE7. [Andrew Dupont]\n\n*1.5.1_rc0* (March 8, 2007)\n\n* Merge the selector branch into trunk, bringing vast performance improvements, bug fixes, and near-complete CSS3 compliance to $$ and Selector.  Closes #7568.  [Andrew Dupont]\n  Selector speed test: http://andrewdupont.net/test/double-dollar/\n\n* Add support for JSON encoding and decoding.  Closes #7427.  [Tobie Langel]\n\n* Fix double escaping of query parameters in Hash.prototype.toQueryString, and prevent Safari from iterating over shadowed properties when creating hashes.  Closes #7421.  [Tobie Langel, Mislav Marohnić]\n\n* Fix simulated attribute reading for IE for \"href\", \"src\" and boolean attributes.  [Mislav Marohnić, Thomas Fuchs]\n\n* Form.Element.disable() will now call blur(), removed blur() call from Form.Element.enable().  Closes #6034.  [tdd]\n\n* Optimize document.getElementsByClassName and finalize DOM performance optimization refactoring.  Closes #6696.  [Mislav Marohnić]\n\n* Fix an issue with serializing empty array inputs.  Closes #7516.  [stakadush, Mislav Marohnić]\n\n* Add optional third parameter \"camelized\" to Element.setStyle, for optimized performance if style names are known to be camelCased.  [Thomas Fuchs]\n\n* Fix a bug in the simulated hasAttribute for IE due to getAttributeNode sometimes returning null.  [sam]\n\n* Optimize Element.getStyle and add new Element.getOpacity method. Special case IE and Opera getStyle methods.  Closes #7648.  [Tobie Langel, Thomas Fuchs]\n\n* Optimize Element.setStyle and add new Element.setOpacity method, special case IE and Gecko opacity methods.  Closes #7585.  [savetheclocktower]\n\n* Add unified Browser detection by providing Prototype.Browser.(IE|Gecko|WebKit|Opera) booleans.  Closes #6800.  [savetheclocktower]\n\n* Add String.prototype.empty and String.prototype.blank (tests if empty or whitespace-only).  Closes #7016.  [Jonathan Viney, Thomas Fuchs]\n\n* Update README to reflect new URLs, update LICENSE copyright years.  Closes #7426.  [Tobie Langel]\n\n* Array.prototype.uniq optimization.  Closes #7417.  [Christophe Porteneuve]\n\n* String.prototype.endsWith should not fail on multiple occurrences.  Closes #7416.  [Christophe Porteneuve]\n\n* Add Form.Methods.request as a convenience method for serializing and submitting a form via Ajax.Request to the URL in the form's action attribute.  [sam]\n\n  Options passed to request() are intelligently merged with the underlying Ajax.Request options:\n  - If the form has a method attribute, its value is used for the Ajax.Request method option.  If a method option is passed to request(), it takes precedence over the form's method attribute.  If neither is specified, method defaults to \"post\".\n  - Key/value pairs specified in the parameters option (either as a query string or as a hash) will be merged with (and take precedence over) the serialized form parameters.\n\n* Fix $(form).serialize() in Safari and add support for extending specific tags to Element.addMethods.  Closes #7358.  [Andrew Dupont]\n\n* Add String.prototype.startsWith, String.prototype.endsWith, and String.prototype.include.  Closes #7075.  [Tobie Langel]\n\n* Improve performance of String.prototype.escapeHTML by using a cached div and text node.  Closes #6937.  [altblue]\n\n* Make setStyle() with opacity: 0 in Internet Explorer work correctly.  [Thomas Fuchs]\n\n* Form.Element.activate shouldn't raise an exception when the form or field is hidden.  [sam]\n\n* Remove support for \"throw $continue\" in Enumerable.  Use \"return\" instead.  [sam]\n\n* Update HEADER to reflect new URL.  [sam]\n\n*1.5.0* (January 18, 2007)\n\n* Add test to ensure Content-type header is set for simulated verbs.  [sam]\n\n* Fix Content-Type header for HTTP methods simulated with POST not defaulting to application/x-www-form-urlencoded.  [Thomas Fuchs]\n\n* Simplify form serialization and add support for fields with the same name as Hash methods.  Closes #6649.  [Mislav Marohnić]\n\n* Fix attribute selectors for IE.  Closes #5170.  [Tobie Langel, Andrew Dupont]\n\n* A slew of dom.js improvements.  Closes #4217, #6589, #7001.  [Tobie]\n  - Fix Element.getDimensions() for hidden elements, make Element.getHeight() use .getDimensions()\n  - Add Element.getWidth()\n  - Make Element.replace() call .toString() on the html argument (alike .update())\n  - Fix an issue with Element.get/setStyle() and Safari with 'float'\n  - Add a bunch of missing unit tests \n\n* Fix an issue with Element.setStyle({opacity:''}) setting the opacity to 0 instead of removing the set inline opacity style.  [Thomas Fuchs]\n\n* Ensure Ajax.Request's evalResponse is called before onComplete so that onComplete can reference any elements created during the response.  Closes #6727.  [jonathan]\n\n* Ensure the WEBrick test runner sets the correct Content-Type for tests and fixtures. [sam]\n\n* Form.serialize once again works with non-form elements.  This is a temporary change to prevent the Rails link_to_remote regression described in #6898.  Prototype 1.5.1 will introduce an API for working with collections of arbitrary form elements.  References #6887.  Closes #6898.  [sam]\n\n* Make selectors match forms that have an element with name=\"id\" correctly, fixes #5759 [mislav]\n\n* Remove support for HTTP authorization in Ajax calls introduced with #6366.  Closes #6638 [jmecham]\n\n* Add Enumerable.size() to count elements in an enumerable and the corresponding Array.size() method, fixes #6710 [ZenCocoon]\n\n* Add String.succ() method to allow for String ranges, fixes #6037 [Cory Hudson, mislav]\n  Examples:\n    'abcd'.succ();                                   -> 'abce'\n    $R('a','d').map(function(char){ return char; }); -> ['a','b','c','d']\n\n* Make Element.scrollTo() correctly consider offsets of parent DOM nodes, fixes #6625 [ohader, savetheclocktower]\n\n* Fix Enumerable.inGroupsOf() to correctly work with fill values that evaluate to false, fixes #6782 [hawk]\n\n* Remove/cleanup redundant $() calls in dom.js, fixes #6817 [Tobie]\n\n* Don't cache files in automatic unit tests, fixes #6218 [voidlock]\n\n* Add $w() to easily create arrays from strings like Ruby's %w, fixes #5682 [glazedginger, brendon.aaron]\n\n* Add Element.toggleClassName() to toggle CSS classes on elements, fixes #6759 [Tobie]\n\n* Make Form.getInputs always return an array for consistency, fixes #6475 [Justin Gehtland, savetheclocktower]\n\n* Make TimedObserver work correctly for SELECT MULTIPLE elements, fixes #6593 [clemos, tdd]\n\n* Fix Template.prototype.evaluate to correctly interpret 0 and false values, add String.interpret() for safely interpreting and converting values to strings, fixes #6675 [hawk]\n\n* Make Element.getStyle() work with camelCased argument, fixes #6686 [Tobie]\n\n* Fix a redundant check in Array.prototype.compact, fixes #4739 [wlodarcz, mislav]\n\n* Fix $() to correctly pass back the results of document.getElementById(), notably returning \"null\" on elements not found, fixes #6582 [adsmart]\n\n* Change/add assertNull, assertUndefined, assertNullOrUndefined and not-* variants in unittest.js, fixes #6582 [adsmart]\n\n* Cleanup String.prototype.camelize, fix an issue with String.prototype.underscore, fixes #4714, #6685 [Tobie, Thomas Fuchs]\n\n* Add String.prototype.capitalize, which returns a string with the first character in upper case, fixes #6666 [Tobie]\n\n* Make Element.getStyle() and Element.setStyle() handle the CSS 'opacity' property transparently in IE, fixes #6093 [brandon.aaron, Tobie]\n\n* Fix handling of CSS 'float' property for Element.getStyle() and Element.setStyle(), fixes #4160 [Thomas Fuchs, ericf]\n\n* Fix that onComplete would be called twice with synchronous Ajax requests on Safari (provides units tests for #5756) [Thomas Fuchs]\n\n* Fix Form.Field.activate to not select text on buttons in IE, fixes #2653 [sutch, mislav, Thomas Fuchs]\n\n* Fix String.unescapeHTML() on Firefox for strings that are longer than 2048 bytes, fixes #5789 [Paul Moers, Thomas Fuchs]\n\n* Redefine Array.prototype.concat for Opera, as the native implemenation doesn't work correctly [Thomas Fuchs]\n\n* Add unit tests for Function.prototype.bind() [Thomas Fuchs]\n\n* Add String.prototype.underscore and String.prototype.dasherize [Thomas Fuchs]\n  Examples:\n    'Hello_World'.dasherize()                    -> 'Hello-World'\n    'borderBottomWidth'.underscore()             -> 'border_bottom_width'\n    'borderBottomWidth'.underscore().dasherize() -> 'border-bottom-width'\n\n*1.5.0_rc2* (November 11, 2006)\n\n* Ensure that existing DOM properties take precedence over extended element methods in all browsers.  Closes #5115.  [Sean Kleinjung, sam]\n\n* Add Element.Methods.readAttribute as a simple wrapper around getAttribute (which isn't a \"real\" function and doesn't have .apply or .call in Safari and IE).  Useful in conjunction with Enumerable.invoke for extracting the values of a custom attribute from a collection of elements.  [sam]\n  Example:\n    <div id=\"widgets\">\n      <div class=\"widget\" widget_id=\"7\">...</div>\n      <div class=\"widget\" widget_id=\"8\">...</div>\n      <div class=\"widget\" widget_id=\"9\">...</div>\n    </div>\n    \n    $$('div.widget').invoke('readAttribute', 'widget_id')\n    // [\"7\", \"8\", \"9\"]\n\n* Add Element.Methods.immediateDescendants, like $A($(element).childNodes) but without text nodes.  [sam]\n\n* More consistency.  Closes #6573.  [Bob Silva]\n\n* String.prototype.toQueryParams and Hash.prototype.toQueryString now properly serialize arrays as multiple values.  Closes #4436.  [mislav, altblue, L`OcuS]\n\n* Fix Form.serialize for options with empty values.  Closes #5033. [tdd, Thomas Fuchs, sam]\n\n* Add Element.Methods.Simulated for simulating HTMLElement methods in lesser browsers.  Add hasAttribute as the first simulated method.  [tdd, Thomas Fuchs, sam]\n\n* Add a \"retry with throw\" button for test error messages. [sam]\n\n* rake test now runs test/unit/*.html by default.  Additionally, you can specify individual tests to run with the TESTS environment variable, and you can restrict the tests to particular browsers using the BROWSERS environment variable. [sam]\n\n  Examples:\n    % BROWSERS=safari,firefox rake test\n    % TESTS=dom rake test\n\n* Element.hasClassName now bypasses the Element.ClassNames API for performance.  [sam]\n\n* Pick some low-hanging performance and DRYness fruit.  [sam]\n  - Inline length property accesses in for loops\n  - Enumerable-ize for loops where it makes sense\n  - Make better use of Element.Methods and Form.Methods/Form.Element.Methods\n\n* A slew of Ajax improvements.  Closes #6366.  [mislav, sam]\n  \n  Public-facing changes include:\n  - HTTP method can be specified in either lowercase or uppercase, and uppercase is always used when opening the XHR connection\n  - Added 'encoding' option (for POST) with a default of 'UTF-8'\n  - Ajax.Request now recognizes all the JavaScript MIME types we're aware of\n  - PUT body support with the 'postBody' option\n  - HTTP authentication support with the 'username' and 'password' options\n  - Query parameters can be passed as a string or as a hash\n  - Fixed both String.toQueryParams and Hash.toQueryString when handling empty values\n  - Request headers can now be specified as a hash with the 'requestHeaders' option\n\n* Improve performance of the common case where $ is called with a single argument. Closes #6347. [sam, rvermillion, mislav]\n\n* Fix Object.inspect to correctly distinguish between null and undefined, fixes #5941 [tdd, mislav]\n\n* Don't serialize disabled form elements, fixes #4586 [tdd]\n\n* Make HTML element classes extension mechanism for Safari not throw errors on WebKit beta versions [Thomas Fuchs]\n\n* Add support for using Element.update() with no or a non-string parameter [Thomas Fuchs]\n\n  Example:\n    $('empty_me').update()          -> clears the element\n    $('easy_as').update(123)        -> set element content to '123'\n\n* Add unit tests for hashes, fixes #6344 [Tobie Langel]\n\n* Add clone() method to arrays, fixes #6338 [Tobie Langel]\n\n* Backing out of [5194] (Element.clear) because of issues with IE on certain elements, #6051\n\n* Add Element.clear for easily emptying out elements, fixes #6051 [brandon.aaron@gmail.com]\n\n* Enumerable.each now returns the enumerable to allow for method chaining, fixes #6250 [eventualbuddha]\n\n* Make makeClipping and undoClipping always return their element to stay chainable\n\n* Fix an issue with certain Element chain calls not correctly extending elements with Prototype element methods on IE [Thomas Fuchs]\n\n* Add Enumerable.eachSlice and Enumerable.inGroupsOf, fixes #6046 [rails@tddsworld.com, Thomas Fuchs]\n\n  Example:\n    [1,2,3,4,5].inGroupsOf(3)       -> [[1,2,3],[4,5,null]]\n    [1,2,3].inGroupsOf(4,'x')       -> [[1,2,3,'x']]\n\n* Complete unit tests for array.js and string.js [Thomas Fuchs]\n\n* Performance improvements for document.getElementsByClassName, including querying with XPath in supported browsers. [Andrew Dupont]\n\n* Make Form.getElements() return elements in the correct order, fix broken Form.serialize return, fixes #4249, #6172 [lars@pinds.com, Thomas Fuchs, john]\n\n* Add various DOM unit tests, fixes #6176, #6177 [tdd]\n\n* Split Form.serialize into Form.serialize and Form.serializeElements. The latter can be used stand-alone to serialize an array of elements you pass in, instead of the entire form [DHH]\n\n* Form.Element.disable() and .enable() will now work correctly, fixes #6034 [dresselm@businesslogic.com]\n\n* Fix IE and Safari issues with Position.positionedOffset, add position.html unit tests, fixes #5621 [renggli@iam.unibe.ch]\n\n* Fix an issue with Element.undoClipping and IE [Thomas Fuchs]\n\n* Element.cleanWhitespace now correctly removes consecutive empty text nodes, fixes #3209 [livier.duroselle@gmail.com]\n\n* Element.extend now does not try to extend text nodes, fixes #4642 [siegfried.puchbauer@gmail.com]\n\n*1.5.0_rc1* (September 4, 2006)\n\n* bindAsEventListener now passes along any provided arguments after the event argument.  Closes #5508.  [todd.fisher@revolution.com]\n\n* Fix makeClipping and undoClipping with local overflow style values other than visible and hidden, fixes #3672  [Thomas Fuchs]\n\n* Add Element.up, Element.down, Element.previous, and Element.next for easily traversing the DOM.  (Inspired by Thomas Fuchs' original implementation of Element.up: http://pastie.caboo.se/7702) [sam]\n\n  Examples:\n    <div id=\"sidebar\">                  -> $('nav').up() or $('menu').up('div') \n      <ul id=\"nav\">                     -> $('sidebar').down()  or $('sidebar').down('ul') or $('menu').previous()\n        <li>...</li>                    -> $('sidebar').down(1) or $('sidebar').down('li')\n        <li>...</li>                    -> $('sidebar').down(2) or $('sidebar').down('li', 2) or $('sidebar').down('li').next('li')\n        <li class=\"selected\">...</li>   -> $('sidebar').down('li.selected')\n      </ul>                             \n      <ul id=\"menu\">                    -> $('sidebar').down('ul').next()\n        ...\n\n* Refactor $$ and Element.getElementsBySelector into Selector.findChildElements. [sam]\n\n* Add Element.match, which takes a single CSS selector expression and returns true if it matches the element. [sam]\n\n* Add Element.ancestors, Element.descendants, Element.previousSiblings, Element.nextSiblings, and Element.siblings. [sam]\n\n* Add Element.inspect for better DOM debugging. [sam]\n\n* Add an optional boolean argument to String.prototype.inspect which, when true, makes the string double-quoted instead of single-quoted. [sam]\n\n* Add the uniq() method to Arrays, which returns a new Array with duplicates removed, fixes #3810 [secondlife]\n\n* Add stop() method to PeriodicalExecutor, fixes #4801 [Jon Evans]\n\n* Fix issues with Enumerable.any, ObjectRange.toArray, added unit tests, fixes #4419 [miyamuko, Thomas Fuchs]\n\n* Fix two instances of unneccesarily redeclared variables, fixes #5229 [Thomas Fuchs]\n\n* Fix a loop in Element.extend to properly use local variable, fixes #5128 [arrix]\n\n* Add constants for additional keys in Event, fixes #5411, #5795 [simone_b]\n\n* Workaround a DOM API bug in Opera in Position.page(), fixes #2407, #5848 [Thomas Fuchs]\n\n* Remove duplicate definition of Position.clone(), fixes #3765 [Thomas Fuchs]\n\n* Make destructive Element, Form, and Form.Element methods return their first argument, so that multiple calls can be chained together. [sam]\n\n  ex. $(\"sidebar\").addClassName(\"selected\").show();\n\n  The following methods now return their first argument: Element.toggle, Element.hide, Element.show, Element.remove, Element.update, Element.replace, Element.addClassName, Element.removeClassName, Element.observe, Element.stopObserving, Element.cleanWhitespace, Element.scrollTo, Element.setStyle, Element.makePositioned, Element.undoPositioned, Element.makeClipping, Element.undoClipping, Form.reset, Form.disable, Form.enable, Form.focusFirstElement, Form.Element.focus, Form.Element.select, Form.Element.clear, Form.Element.activate, Form.Element.disable, Form.Element.enable.\n\n* For consistency, Element.toggle, Element.show, Element.hide, Field.clear, and Field.present no longer take an arbitrary number of arguments. [sam]\n  \n  !! BACKWARDS COMPATIBILITY CHANGE !!\n  \n  If you have code that looks like this:\n    Element.show('page', 'sidebar', 'content');\n  You need to replace it with code like this:\n    ['page', 'sidebar', 'content'].each(Element.show);\n\n* Mix in Form and Form.Element methods to forms and form field elements with $() and $$(). Closes #4448. [Dan Webb, sam]\n\n* Add Object.clone [sam]\n\n* Add Form.Element.disable and Form.Element.enable. Closes #4943. [jan@prima.de]\n\n* Field is now simply an alias for Form.Element. [sam]\n\n* Add Element.Methods.getElementsByClassName and Element.Methods.getElementsBySelector. Closes #4669. [Andrew Dupont, DHH, sam]\n\n* Avoid race condition when stopping an Ajax.PeriodicalUpdater. Closes #4809. [e98cuenc@gmail.com]\n\n* Improve support for synchronous requests. Closes #5916. [sam, jthrom@gmail.com]\n\n* Add serialization and observation support for input type=search. Closes #4096. [rpnielsen@gmail.com]\n\n* Properly decode query components in String.prototype.toQueryParams. Closes #3487. [sam]\n\n* Add Array.prototype.reduce [sam]:\n  [1, 2].reduce()   // [1, 2]\n  [1].reduce()      // 1\n  [].reduce()       // undefined\n\n* Add Object.keys and Object.values [sam]\n\n* Simulate non-GET/POST requests by POSTing with a _method parameter set to the actual verb [DHH]\n\n* Make Element.update() handle TABLE-related elements with the DOM API because of IE's missing .innerHTML property on them [Thomas Fuchs, thx to Rick Olson]\n\n* Sync to script.aculo.us unittest.js library as of 2006/08/29 [Thomas Fuchs]\n\n* Add additional unit tests to test/unit/dom.html for testing Element.update and $().update in various enviroments [Thomas Fuchs]\n\n* Prevent possible exceptions on unloading the page in IE [Thomas Fuchs]\n\n*1.5.0_rc0* (April 5, 2006)\n\n* Modify HTMLElement.prototype and short-circuit Element.extend where possible. Closes #4477. [Thomas Fuchs]\n\n* Only observe window.onunload in IE for Mozilla bfcache support. Closes #3726. [Mike A. Owens]\n\n* Don't redefine Array.prototype.shift. Closes #4138. [leeo]\n\n* Prevent redefining Array.prototype.reverse more than once. Closes #3951. [brettdgibson@gmail.com]\n\n* Fix Enumerable.min/Enumerable.max to recognize the value 0. Closes #3847, #4190. [rubyonrails@brainsick.com, Martin Bialasinski]\n\n* Change Ajax.getTransport to prefer XMLHttpRequest in anticipation of IE 7. Closes #3688. [jschrab@malicstower.org, sam]\n\n* Make Array.prototype.flatten more robust. Closes #3453. [Martin Bialasinski, sam]\n\n* Fix evalScripts from crashing Firefox if script includes 'var'. Closes #3288, #4165. [rahul@ntag.com, sam]\n\n* Scope iterators locally. Closes #4589. [sam]\n\n* Support Insertion.Before/Insertion.After for <tr> elements in IE. Closes #3925. [rails-venkatp@sneakemail.com]\n\n* Add a contentType option for overriding application/x-www-form-urlencoded in Ajax.Request. Closes #3564. [avif@arc90.com, sam]\n\n* Surround values in the X-JSON header in parenthesis for better compatibility with Firefox. Closes #4118. [bigsmoke@gmail.com]\n\n* Fix Form.serialize to properly encode option values in multiple selects in IE. Closes #3291. [rubyonrails@brainsick.com]\n\n* Cache methods added to DOM elements with Element.extend to prevent memory leaks in IE. Closes #4465. [jaen@laborint.com, sam]\n\n* 1.5.0_pre1* (March 26, 2006)\n\n* Add attribute selector support for Selector (and $$). Closes #4368. [devslashnull@gmail.com]\n  Example:\n    $$('form#foo input[type=text]').each(function(input) {\n      input.setStyle({color: 'red'});\n    });\n  \n* Send Accept header containing 'text/javascript, text/html, application/xml, text/xml */*'' to inform Rails that we prefer RJS, but we'll take HTML or XML or whatever if you can't deliver the goods [DHH]\n\n* Make $$ work in IE. Closes #3715. [rubyonrails@brainsick.com]\n\n* Add test/browser.html, which provides a simple object browser for the Prototype source (Firefox/Safari only). [sam]\n\n* Add Element.extend, which mixes Element methods into a single HTML element.  This means you can now write $('foo').show() instead of Element.show('foo').  $, $$ and document.getElementsByClassName automatically call Element.extend on any returned elements. [sam]\n\n* Add Element.replace as a cross-browser implementation of the \"outerHTML\" property. References #3246. [tom@craz8.com]\n\n* Fix Enumerable.zip iterator behavior. [Marcin Kaszynski, sam]\n\n*1.5.0_pre0* (January 18, 2006)\n\n* Add String.prototype.truncate to complement the Action View truncate helper. [sam]\n\n* Add String.prototype.gsub, String.prototype.sub, and String.prototype.scan, all of which take a pattern and an iterator (or a pattern and a replacement template string in the case of gsub and sub). [sam]\n\n* Add a Template class for interpolating named keys from an object in a string. [sam]\n\n* Add the $$ function for finding DOM elements by simple CSS selector strings. [sam]\n  Example: Find all <img> elements inside <p> elements with class \"summary\", all inside\n           the <div> with id \"page\". Hide each matched <img> tag.\n             $$('div#page p.summary img').each(Element.hide)\n     \n* Add a Selector class for matching elements by single CSS selector tokens. [sam]\n\n* Add Test.Unit.Assertions.assertEnumEqual for comparing Enumerables in tests. [sam]\n\n* Add Element.childOf(element, ancestor) which returns true when element is a child of ancestor. [sam]\n\n* Fix escaping in String.prototype.inspect. [sam]\n\n* Add String.prototype.strip to remove leading and trailing whitespace from a string. [sam]\n\n* Move Prototype to Rails SVN. [sam]\n  http://dev.rubyonrails.org/svn/rails/spinoffs/prototype/\n  \n* Make the console nicer. [sam]\n\n* Prune the source tree. [sam]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.9130859375,
          "content": "Copyright (c) 2005-2010 Sam Stephenson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 1.9560546875,
          "content": "Prototype\n=========\n\n#### An object-oriented JavaScript framework ####\n\nPrototype is a JavaScript framework that aims to ease development of dynamic \nweb applications.  It offers a familiar class-style OO framework, extensive\nAjax support, higher-order programming constructs, and easy DOM manipulation.\n\n### Targeted platforms ###\n\nPrototype currently targets the following platforms:\n\n* Microsoft Internet Explorer for Windows, version 6.0 and higher\n* Mozilla Firefox 1.5 and higher\n* Apple Safari 2.0.4 and higher\n* Opera 9.25 and higher\n* Chrome 1.0 and higher\n\nUsing Prototype\n---------------\n\nTo use Prototype in your application, download the latest release from the \nPrototype web site (<http://prototypejs.org/download>) and copy \n`dist/prototype.js` to a suitable location. Then include it in your HTML\nlike so:\n\n    <script type=\"text/javascript\" src=\"/path/to/prototype.js\"></script>\n\n### Building Prototype from source ###\n\n`prototype.js` is a composite file generated from many source files in \nthe `src/` directory. To build Prototype, you'll need:\n\n* a copy of the Prototype source tree, either from a distribution tarball or\n  from the Git repository (see below)\n* Ruby 1.8.2 or higher (<http://www.ruby-lang.org/>)\n* Rake--Ruby Make (<http://rake.rubyforge.org/>)\n* RDoc, if your Ruby distribution does not include it\n\nFrom the root Prototype directory:\n\n* `rake dist` will preprocess the Prototype source using Sprockets and \n  generate the composite `dist/prototype.js`\n* `rake package` will create a distribution tarball in the \n  `pkg/` directory\n\nContributing to Prototype\n-------------------------\n\nCheck out the Prototype source with \n\n    $ git clone git://github.com/sstephenson/prototype.git\n    $ cd prototype\n    $ git submodule init\n    $ git submodule update vendor/sprockets vendor/pdoc vendor/unittest_js\n\nFind out how to contribute: <http://prototypejs.org/contribute>.\n\nDocumentation\n-------------\n\nPlease see the online Prototype API: <http://api.prototypejs.org>.\n"
        },
        {
          "name": "Rakefile",
          "type": "blob",
          "size": 9.7392578125,
          "content": "require 'rake'\nrequire 'rake/packagetask'\nrequire 'rbconfig'\nrequire 'yaml'\n\nmodule PrototypeHelper\n  extend Rake::DSL\n\n  ROOT_DIR      = File.expand_path(File.dirname(__FILE__))\n  SRC_DIR       = File.join(ROOT_DIR, 'src')\n  DIST_DIR      = File.join(ROOT_DIR, 'dist')\n  DOC_DIR       = File.join(ROOT_DIR, 'doc')\n  TEMPLATES_DIR = File.join(ROOT_DIR, 'templates')\n  PKG_DIR       = File.join(ROOT_DIR, 'pkg')\n  TEST_DIR      = File.join(ROOT_DIR, 'test')\n  TEST_UNIT_DIR = File.join(TEST_DIR, 'unit')\n  TMP_DIR       = File.join(TEST_UNIT_DIR, 'tmp')\n  VERSION       = YAML.load(IO.read(File.join(SRC_DIR, 'constants.yml')))['PROTOTYPE_VERSION']\n\n  DEFAULT_SELECTOR_ENGINE = 'sizzle'\n\n  host = RbConfig::CONFIG['host']\n  IS_WINDOWS = host.include?('mswin') || host.include?('mingw32')\n\n  # Possible options for PDoc syntax highlighting, in order of preference.\n  SYNTAX_HIGHLIGHTERS = [:pygments, :coderay, :none]\n\n  %w[sprockets pdoc unittest_js caja_builder].each do |name|\n    $:.unshift File.join(PrototypeHelper::ROOT_DIR, 'vendor', name, 'lib')\n  end\n\n  def self.has_git?\n    begin\n      `git --version`\n      return true\n    rescue Error\n      return false\n    end\n  end\n\n  def self.require_git\n    return if has_git?\n    puts \"\\nPrototype requires Git in order to load its dependencies.\"\n    puts \"\\nMake sure you've got Git installed and in your path.\"\n    puts \"\\nFor more information, visit:\\n\\n\"\n    puts \"  http://git-scm.com/book/en/v2/Getting-Started-Installing-Git\"\n    exit\n  end\n\n  def self.sprocketize(options = {})\n    options = {\n      :destination    => File.join(DIST_DIR, options[:source]),\n      :strip_comments => true\n    }.merge(options)\n\n    require_sprockets\n    load_path = [SRC_DIR]\n\n    if selector_path = get_selector_engine(options[:selector_engine])\n      load_path << selector_path\n    end\n\n    secretary = Sprockets::Secretary.new(\n      :root           => File.join(ROOT_DIR, options[:path]),\n      :load_path      => load_path,\n      :source_files   => [options[:source]],\n      :strip_comments => options[:strip_comments]\n    )\n\n    secretary.concatenation.save_to(options[:destination])\n  end\n\n  def self.build_doc_for(file)\n    rm_rf(DOC_DIR)\n    mkdir_p(DOC_DIR)\n    hash = current_head\n    index_header = <<EOF\n<h1 style=\"margin-top: 31px; height: 75px; padding: 1px 0; background: url(images/header-stripe-small.png) repeat-x;\">\n  <a href=\"http://prototypejs.org\" style=\"padding-left: 120px;\">\n    <img src=\"images/header-logo-small.png\" alt=\"Prototype JavaScript Framework API\" />\n  </a>\n</h1>\nEOF\n    PDoc.run({\n      :source_files => Dir[File.join('src', 'prototype', '**', '*.js')],\n      :destination  => DOC_DIR,\n      :index_page   => 'README.markdown',\n      :syntax_highlighter => syntax_highlighter,\n      :markdown_parser    => :bluecloth,\n      :src_code_text => \"View source on GitHub &rarr;\",\n      :src_code_href => proc { |obj|\n        \"https://github.com/sstephenson/prototype/blob/#{hash}/#{obj.file}#L#{obj.line_number}\"\n      },\n      :pretty_urls => false,\n      :bust_cache  => false,\n      :name => 'Prototype JavaScript Framework',\n      :short_name => 'Prototype',\n      :home_url => 'http://prototypejs.org',\n      :version => PrototypeHelper::VERSION,\n      :index_header => index_header,\n      :footer => 'This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/3.0/\">Creative Commons Attribution-Share Alike 3.0 Unported License</a>.',\n      :assets => 'doc_assets'\n    })\n  end\n\n  def self.require_package(name)\n    begin\n      require name\n    rescue LoadError\n      puts \"You need the #{name} package. Try installing it with:\\n\"\n      puts \"  $ gem install #{name}\"\n      exit\n    end\n  end\n\n  def self.require_phantomjs\n    cmd = IS_WINDOWS ? \"phantomjs.cmd -v\" : \"phantomjs -v > /dev/null 2>&1\"\n    success = system(cmd)\n    if !success\n      puts \"\\nYou need phantomjs installed to run this task. Find out how at:\"\n      puts \"  http://phantomjs.org/download.html\"\n      exit\n    end\n  end\n\n  def self.syntax_highlighter\n    if ENV['SYNTAX_HIGHLIGHTER']\n      highlighter = ENV['SYNTAX_HIGHLIGHTER'].to_sym\n      require_highlighter(highlighter, true)\n      return highlighter\n    end\n\n    SYNTAX_HIGHLIGHTERS.detect { |n| require_highlighter(n) }\n  end\n\n  def self.require_highlighter(name, verbose=false)\n    case name\n    when :pygments\n      success = system(\"pygmentize -V > /dev/null\")\n      if !success && verbose\n        puts \"\\nYou asked to use Pygments, but I can't find the 'pygmentize' binary.\"\n        puts \"To install, visit:\\n\"\n        puts \"  http://pygments.org/docs/installation/\\n\\n\"\n        exit\n      end\n      return success # (we have pygments)\n    when :coderay\n      begin\n        require 'coderay'\n      rescue LoadError\n        if verbose\n          puts \"\\nYou asked to use CodeRay, but I can't find the 'coderay' gem. Just run:\\n\\n\"\n          puts \"  $ gem install coderay\"\n          puts \"\\nand you should be all set.\\n\\n\"\n          exit\n        end\n        return false\n      end\n      return true # (we have CodeRay)\n    when :none\n      return true\n    else\n      puts \"\\nYou asked to use a syntax highlighter I don't recognize.\"\n      puts \"Valid options: #{SYNTAX_HIGHLIGHTERS.join(', ')}\\n\\n\"\n      exit\n    end\n  end\n\n  def self.require_sprockets\n    require_submodule('Sprockets', 'sprockets')\n  end\n\n  def self.require_pdoc\n    require_submodule('PDoc', 'pdoc')\n  end\n\n  def self.require_unittest_js\n    require_submodule('UnittestJS', 'unittest_js')\n  end\n\n  def self.require_caja_builder\n    require_submodule('CajaBuilder', 'caja_builder')\n  end\n\n  def self.get_selector_engine(name)\n    return if !name\n    # If the submodule exists, we should use it.\n    submodule_path = File.join(ROOT_DIR, \"vendor\", name)\n    return submodule_path if File.exist?(File.join(submodule_path, \"repository\", \".git\"))\n    return submodule_path if name === \"legacy_selector\"\n\n    # If it doesn't exist, we should fetch it.\n    get_submodule('the required selector engine', \"#{name}/repository\")\n    unless File.exist?(submodule_path)\n      puts \"The selector engine you required isn't available at vendor/#{name}.\\n\\n\"\n      exit\n    end\n  end\n\n  def self.get_submodule(name, path)\n    require_git\n    puts \"\\nYou seem to be missing #{name}. Obtaining it via git...\\n\\n\"\n\n    Kernel.system(\"git submodule init\")\n    return true if Kernel.system(\"git submodule update vendor/#{path}\")\n    # If we got this far, something went wrong.\n    puts \"\\nLooks like it didn't work. Try it manually:\\n\\n\"\n    puts \"  $ git submodule init\"\n    puts \"  $ git submodule update vendor/#{path}\"\n    false\n  end\n\n  def self.require_submodule(name, path)\n    begin\n      full_path = File.join(PrototypeHelper::ROOT_DIR, 'vendor', path, 'lib', path)\n      # We need to require the explicit version in the submodule.\n      require full_path\n    rescue LoadError => e\n      # Wait until we notice that a submodule is missing before we bother the\n      # user about installing git. (Maybe they brought all the files over\n      # from a different machine.)\n      missing_file = e.message.sub('no such file to load -- ', '').sub('cannot load such file -- ', '')\n      if missing_file == full_path\n        # Missing a git submodule.\n        retry if get_submodule(name, path)\n      else\n        # Missing a gem.\n        puts \"\\nIt looks like #{name} is missing the '#{missing_file}' gem. Just run:\\n\\n\"\n        puts \"  $ gem install #{missing_file}\"\n        puts \"\\nand you should be all set.\\n\\n\"\n      end\n      exit\n    end\n  end\n\n  def self.current_head\n    `git show-ref --hash HEAD`.chomp[0..6]\n  end\nend\n\ntask :default => [:dist, :dist_helper, :package, :clean_package_source]\n\ndesc \"Builds the distribution.\"\ntask :dist do\n  PrototypeHelper.sprocketize(\n    :path => 'src',\n    :source => 'prototype.js',\n    :selector_engine => ENV['SELECTOR_ENGINE'] || PrototypeHelper::DEFAULT_SELECTOR_ENGINE\n  )\nend\n\nnamespace :doc do\n  desc \"Builds the documentation.\"\n  task :build => [:require] do\n    PrototypeHelper.build_doc_for(ENV['SECTION'] ? \"#{ENV['SECTION']}.js\" : 'prototype.js')\n  end\n\n  task :require do\n    PrototypeHelper.require_pdoc\n  end\nend\n\ntask :doc => ['doc:build']\n\ndesc \"Builds the updating helper.\"\ntask :dist_helper do\n  PrototypeHelper.sprocketize(:path => 'ext/update_helper', :source => 'prototype_update_helper.js')\nend\n\nRake::PackageTask.new('prototype', PrototypeHelper::VERSION) do |package|\n  package.need_tar_gz = true\n  package.package_dir = PrototypeHelper::PKG_DIR\n  package.package_files.include(\n    '[A-Z]*',\n    'dist/prototype.js',\n    'lib/**',\n    'src/**',\n    'test/**'\n  )\nend\n\ntask :clean_package_source do\n  rm_rf File.join(PrototypeHelper::PKG_DIR, \"prototype-#{PrototypeHelper::VERSION}\")\nend\n\ntask :test => ['test:require', 'test:start']\nnamespace :test do\n  desc 'Starts the test server.'\n  task :start => [:require] do\n    path_to_app = File.join(PrototypeHelper::ROOT_DIR, 'test', 'unit', 'server.rb')\n    require path_to_app\n\n    puts \"Starting unit test server...\"\n    puts \"Unit tests available at <http://127.0.0.1:4567/test/>\\n\\n\"\n    UnitTests.run!\n  end\n\n  task :require do\n    PrototypeHelper.require_package('sinatra')\n  end\n\n  desc \"Opens the test suite in several different browsers. (Does not start or stop the server; you should do that separately.)\"\n  task :run => [:require] do\n    browsers, tests, grep = ENV['BROWSERS'], ENV['TESTS'], ENV['GREP']\n    path_to_runner = File.join(PrototypeHelper::ROOT_DIR, 'test', 'unit', 'runner.rb')\n    require path_to_runner\n\n    Runner::run(browsers, tests, grep)\n  end\n\n  desc \"Runs the tests in PhantomJS. (Does not start or stop the server; you should do that separately.)\"\n  task :phantom do\n    PrototypeHelper.require_phantomjs\n    tests, grep = ENV['TESTS'], ENV['GREP']\n    url = \"http://127.0.0.1:4567/test/#{tests}\"\n    url << \"?grep=#{grep}\" if grep\n    system(%Q[phantomjs ./test/unit/phantomjs/mocha-phantomjs.js \"#{url}\"])\n  end\nend\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc_assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}