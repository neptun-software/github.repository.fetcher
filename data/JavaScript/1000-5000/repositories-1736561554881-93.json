{
  "metadata": {
    "timestamp": 1736561554881,
    "page": 93,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HuddleEng/PhantomCSS",
      "stars": 4711,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "* text=auto\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "node_modules\nscreenshots\nfailures\n.idea/"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0361328125,
          "content": "libs\ndemo\nreadme_assets\ncasperjs.bat\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "The MIT License (MIT) Copyright © 2013-2017 Huddle\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the “Software”), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.5068359375,
          "content": "\n**Unmaintained notice**: As of December 22nd 2017 this project will no longer be maintained.  It's been a fantastic five years, a project that has hopefully had a positive influence on the shape and extent of Web UI testing. Read more on [why its time to move on](https://github.com/Huddle/PhantomCSS#why-is-this-project-no-longer-maintained).\n\n\n---\n\n\n<img title=\"PhantomCSS\" alt=\"Cute image of a ghost\" width=\"200px\" src=\"https://raw.github.com/Huddle/PhantomCSS/master/readme_assets/Phantom CSS.png\">\n\n**CSS regression testing**. A [CasperJS](http://github.com/n1k0/casperjs) module for automating visual regression testing with [PhantomJS 2](http://github.com/ariya/phantomjs/) or [SlimerJS](http://slimerjs.org/) and [Resemble.js](http://huddle.github.com/Resemble.js/). For testing Web apps, live style guides and responsive layouts. Read more on Huddle's Engineering blog: [CSS Regression Testing](http://tldr.huddle.com/blog/css-testing/).\n\n**Huddle is Hiring!** [We're looking for talented front-end engineers](https://talentcommunity.huddle.com/careers)\n\n### What?\n\nPhantomCSS takes screenshots captured by CasperJS and compares them to baseline images using [Resemble.js](http://huddle.github.com/Resemble.js/) to test for rgb pixel differences. PhantomCSS then generates image diffs to help you find the cause.\n\n![A failed visual regression test, pink areas show where padding has changed.](https://raw.github.com/Huddle/PhantomCSS/master/readme_assets/intro-example.png \"Failed visual regression test\")\n\nScreenshot based regression testing can only work when UI is predictable. It's possible to hide mutable UI components with PhantomCSS but it would be better to test static pages or drive the UI with faked data during test runs.\n\n### Example\n\n```javascript\ncasper.\n\tstart( url ).\n\tthen(function(){\n\t\t\n\t\t// do something\n\t\tcasper.click('button#open-dialog');\n\t\t\n\t\t// Take a screenshot of the UI component\n\t\tphantomcss.screenshot('#the-dialog', 'a screenshot of my dialog');\n\n\t});\n```\n\nFrom the command line/terminal run:\n\n* `casperjs test demo/testsuite.js`\n\nor\n\n* `casperjs test demo/testsuite.js --verbose --log-level=debug --xunit=results.xml`\n\n### Updating from PhantomCSS v0 to v1\n\nRendering is quite different with PhantomJS 2, so when you update, old visual tests will start failing.\nIf your tests are green and passing before updating, I would recommend rebasing the visual tests, i.e. delete them, and run the test suite to create a new baseline.\n\nYou can still use the [v0 branch](https://github.com/Huddle/PhantomCSS/tree/v0) if you wish, though it now unmaintained.\n\n### Download\n\nPhantomCSS can be downloaded in various ways:\n\n* `npm install phantomcss` (PhantomCSS is not itself a Node.js module)\n* `bower install phantomcss`\n* `git clone git://github.com/Huddle/PhantomCSS.git`\n\nIf you are not installing via NPM, you will need to run `npm install` in the PhantomCSS root folder.\n\nPlease note that depending on how you have installed PhantomCSS you may need to set the libraryRoot configuration property to link to the directory in which phantomcss.js resides.\n\n### Getting started, try the demo\n\n* For convenience I've included CasperJS.bat for Windows users. If you are not a Windows user, you will have to install the latest version of [CasperJS](http://docs.casperjs.org/en/latest/installation.html).\n* Download or clone this repo and run `casperjs test demo/testsuite.js` in command/terminal from the PhantomCSS folder.  PhantomJS is the only binary dependency - this should just work\n* Find the screenshot folder and have a look at the (baseline) images\n* Run the tests again with `casperjs test demo/testsuite.js`. New screenshots will be created to compare against the baseline images. These new images can be ignored, they will be replaced every test run.\n* To test failure, add/change some CSS in the file demo/coffeemachine.html e.g. make `.mug` bright green\n* Run the tests again, you should see some reported failures\n* In the failures folder some images should have been created. The images should show bright pink where the screenshot has visually changed\n* If you want to manually compare the images, go to the screenshot folder to see the original/baseline and latest screenshots\n\n### SlimerJS\n\nSlimerJS uses the Gecko browser engine rather than Webkit.  This has some advantages over PhantomJS, such as a non-headless view. If this is of interest to you, please follow the [download and install](http://slimerjs.org/download.html) instructions and ensure SlimerJS is installed globally.\n\n* `casperjs test demo/testsuite.js --engine=slimerjs`\n\n### Options and setup\n\nIf you are using SlimerJS, you will need to specify absolute paths (see 'demo').\n\n```javascript\nphantomcss.init({\n\n    /*\n    captureWaitEnabled defaults to true, setting to false will remove a small wait/delay on each\n    screenshot capture - useful when you don't need to worry about\n    animations and latency in your visual tests\n    */\n    captureWaitEnabled: true,\n\n\t/*\n\t\tlibraryRoot is now optional unless you are using SlimerJS where\n\t\tyou will need to set it to the correct path. It must point to\n\t\tyour phantomcss folder. If you are using NPM, this will probably\n\t\tbe './node_modules/phantomcss'.\n\t*/\n\tlibraryRoot: './modules/PhantomCSS',\n\n\tscreenshotRoot: './screenshots',\n\n\t/*\n\t\tBy default, failure images are put in the './failures' folder. \n\t\tIf failedComparisonsRoot is set to false a separate folder will \n\t\tnot be created but failure images can still be found alongside \n\t\tthe original and new images.\n\t*/\n\tfailedComparisonsRoot: './failures',\n\n\t/*\n\t\tRemove results directory tree after run.  Use in conjunction \n\t\twith failedComparisonsRoot to see failed comparisons.\n\t*/\n\tcleanupComparisonImages: true,\n\n\t/*\n\t\tA reference to a particular Casper instance. Required for SlimerJS.\n\t*/\n\tcasper: specific_instance_of_casper,\n\n\t/*\n\t\tYou might want to keep master/baseline images in a completely \n\t\tdifferent folder to the diffs/failures.  Useful when working \n\t\twith version control systems. By default this resolves to the \n\t\tscreenshotRoot folder.\n\t*/\n\tcomparisonResultRoot: './results',\n\n\t/* \n\t\tDon't add count number to images. If set to false, a filename is \n\t\trequired when capturing screenshots.\n\t*/\n\taddIteratorToImage: false,\n\n\t/*\n\t\tDon't add label to generated failure image\n\t*/\n\taddLabelToFailedImage: false,\n\n\t/*\n\t\tMismatch tolerance defaults to  0.05%. Increasing this value \n\t\twill decrease test coverage\n\t*/\n\tmismatchTolerance: 0.05,\n\n\t/*\n\t\tCallbacks for your specific integration\n\t*/\n\tonFail: function(test){ console.log(test.filename, test.mismatch); },\n\t\n\tonPass: function(test){ console.log(test.filename); },\n\t\n\t/* \n\t\tCalled when creating new baseline images\n\t*/\n\tonNewImage: function(){ console.log(test.filename); },\n\t\n\tonTimeout: function(){ console.log(test.filename); },\n\t\n\tonComplete: function(allTests, noOfFails, noOfErrors){\n\t\tallTests.forEach(function(test){\n\t\t\tif(test.fail){\n\t\t\t\tconsole.log(test.filename, test.mismatch);\n\t\t\t}\n\t\t});\n\t},\n\n\tonCaptureFail: function(ex, target) { console.log('Capture of ' + target + ' failed due to ' + ex.message); }\n\n\t/*\n\t\tChange the output screenshot filenames for your specific \n\t\tintegration\n\t*/\n\tfileNameGetter: function(root,filename){ \n\t\t// globally override output filename\n\t\t// files must exist under root\n\t\t// and use the .diff convention\n\t\tvar name = root+'/somewhere/'+filename;\n\t\tif(fs.isFile(name+'.png')){\n\t\t\treturn name+'.diff.png';\n\t\t} else {\n\t\t\treturn name+'.png';\n\t\t}\n\t},\n\n\t/*\n\t\tPrefix the screenshot number to the filename, instead of suffixing it\n\t*/\n\tprefixCount: true,\n\n\t/*\n\t\tOutput styles for image failure outputs generated by Resemble.js\n\t*/\n\toutputSettings: {\n\t\terrorColor: {\n\t\t\tred: 255,\n\t\t\tgreen: 255,\n\t\t\tblue: 0\n\t\t},\n\t\terrorType: 'movement',\n\t\ttransparency: 0.3\n\t},\n\n\t/*\n\t\tRebase is useful when you want to create new baseline \n\t\timages without manually deleting the files\n\t\tcasperjs demo/test.js --rebase\n\t*/\n\trebase: casper.cli.get(\"rebase\"),\n\n\t/*\n\t\tIf true, test will fail when captures fail (e.g. no element matching selector).\n\t */\n\tfailOnCaptureError: false\n});\n\n/*\n\tTurn off CSS transitions and jQuery animations\n*/\nphantomcss.turnOffAnimations();\n```\n\n### Don't like pink?\n\n![A failed visual regression test, yellow areas show where the icon has enlarged and pushed other elements down.](https://raw.github.com/Huddle/PhantomCSS/master/readme_assets/differentcolour.png \"Failed visual regression test\")\n\n```javascript\nphantomcss.init({\n\t/*\n\t\tOutput styles for image failure outputs generated by Resemble.js\n\t*/\n\toutputSettings: {\n\n\t\t/*\n\t\t\tError pixel color, RGB, anything you want, \n\t\t\tthough bright and ugly works best!\n\t\t*/\n\t\terrorColor: {\n\t\t\tred: 255,\n\t\t\tgreen: 255,\n\t\t\tblue: 0\n\t\t},\n\t\t\n\t\t/*\n\t\t\tErrorType values include 'flat', or 'movement'.  \n\t\t\tThe latter merges error color with base image\n\t\t\twhich makes it a little easier to spot movement.\n\t\t*/\n\t\terrorType: 'movement',\n\t\t\n\t\t/*\n\t\t\tFade unchanged areas to make changed areas more apparent.\n\t\t*/\n\t\ttransparency: 0.3\n\t}\n});\n```\n\n### There are different ways to take a screenshot\n\n```javascript\nvar delay = 10;\nvar hideElements = 'input[type=file]';\nvar screenshotName = 'the_dialog'\n\nphantomcss.screenshot( \"#CSS .selector\", screenshotName);\n\n// phantomcss.screenshot({\n//  \t'Screenshot 1 File name': {selector: '.screenshot1', ignore: '.selector'},\n//  \t'Screenshot 2 File name': '#screenshot2'\n// });\n// phantomcss.screenshot( \"#CSS .selector\" );\n// phantomcss.screenshot( \"#CSS .selector\", delay, hideElements, screenshotName);\n\n// phantomcss.screenshot({\n//   top: 100,\n//   left: 100,\n//   width: 500,\n//   height: 400\n// }, screenshotName);\n```\n\n### Compare the images when and how you want\n\n```javascript\n/*\n\tString is converted into a Regular expression that matches on full image path\n*/\nphantomcss.compareAll('exclude.test'); \n\n// phantomcss.compareMatched('include.test', 'exclude.test');\n// phantomcss.compareMatched( new RegExp('include.test'), new RegExp('exclude.test'));\n\n/*\n\tCompare image diffs generated in this test run only\n*/\n// phantomcss.compareSession();\n\n/*\n\tExplicitly define what files you want to compare\n*/\n// phantomcss.compareExplicit(['/dialog.diff.png', '/header.diff.png']);\n\n/*\n\tGet a list of image diffs generated in this test run\n*/\n// phantomcss.getCreatedDiffFiles();\n\n/*\n\tCompare any two images, and wait for the results to complete\n*/\n// phantomcss.compareFiles(baseFile, diffFile);\n// phantomcss.waitForTests();\n\n```\n\n### Best Practices\n\n##### Name your screenshots!\n\nBy default PhantomCSS creates a file called screenshot_0.png, not very helpful.  You can name your screenshot by passing a string to either the second or forth parameter.\n\n```javascript\nvar delay, hideElementsSelector;\n\nphantomcss.screenshot(\"#feedback-form\", delay, hideElementsSelector, \"Responsive Feedback Form\");\n\nphantomcss.screenshot(\"#feedback-form\", \"Responsive Feedback Form\");\n\n```\n\nPerhaps a better way is to use the ‘fileNameGetter’ callback property on the ‘init’ method. This does involve having a bit more structure around your tests.  See: https://github.com/Huddle/PhantomFlow/blob/master/lib/phantomCSSAdaptor.js#L41\n\n##### CSS3 selectors for testing\n\nTry not to use complex CSS3 selectors for asserting or creating screenshots.  In the same way that CSS should be written with good content/container separation, so should your test selectors be agnostic of location/context.  This might mean you need to add more ID's or data- attributes into your mark-up, but it's worth it, your tests will be more stable and more explicit.\nThis is not a good idea:\n\n```javascript\nphantomcss.screenshot(\"#sidebar li:nth-child(3) > div form\");\n```\n\nBut this is:\n\n```javascript\nphantomcss.screenshot(\"#feedback-form\");\n```\n\n##### PhantomCSS should not be used to replace functional tests\n\nIf you needed functional tests before, then you still need them.  Automated visual regression testing gives us coverage of CSS and design in a way we didn't have before, but that doesn't mean that conventional test assertions are now invalid.  Feedback time is crucial with test automation, the longer it takes the easier it is to ignore; the easier it is to ignore the sooner trust is lost from the team.  Unfortunately comparing images is not, and never will be as fast as simple DOM assertion.\n\n##### Don't try to test all the visuals\n\nI'd argue this applies to all automated testing approaches.  As a rule, try to maximise coverage with fewer tests.  This is a difficult balancing act because granular feedback/reporting is very important for debugging and build analysis. Testing many things in one assert/screenshot might tell you there is a problem, but makes it harder to get to the root of the bug.  As a CSS/HTML Dev you'll know what components are more fragile than others, which are reused and which aren't, concentrate your visual tests on these areas.\n\n##### Full page screenshots are a bad idea\n\nIf you try to test too much in one screenshot then you could end up with lots of failing tests every time someone makes a small change.  Say you've set up full-page visual regression tests for your 50 page website, and someone adds 2px padding to the footer - that’s 50 failed tests because of one change.  It's better to test UI components individually; in this example the footer could have its own test.\nThere is also a technical problem with this approach, the larger the image, the longer it takes to process.  An added pixel padding on the page body will offset everything, at best you'll have a sea of pink in the failed diff, at worse you'll get a TIMEOUT because it took too long to analyse.\n\n##### Scaling visual regression testing within a large team\n\nScaling your test suite for many contributors may not be easy. [Resemble.js](http://huddle.github.com/Resemble.js/) (the core analysis engine of PhantomCSS) tries to consider image differences caused by different operating systems and graphics cards, but it's only so good, you are likely to see problems as more people contribute baseline screenshots.  You can mitigate this by hiding problematic elements such as select elements, file upload inputs etc. as so.\n\n```javascript\nphantomcss.screenshot(\"#feedback-form\", undefined, 'input[type=file]');\n```\n\nBelow is an example of a false-negative caused by antialiasing differences on different machines. How can we solve this?  **Contributions welcome!**\n\n![Three images: baseline, latests and diff where antialiasing has caused the failed diff](https://raw.github.com/Huddle/PhantomCSS/master/readme_assets/false-negative.png \"A False-negative?\")\n\n##### Scaling visual regression testing with Git\n\nIf you're using a version control system like Git to store the baseline screenshots the repository size becomes increasingly relevant as your test suite grows.  I'd recommend using a tool like https://github.com/joeyh/git-annex or https://github.com/schacon/git-media to store the images outside of the repo.\n\n### ...You might also be interested in\n\n**[PhantomFlow](https://github.com/Huddle/PhantomFlow)** and **[grunt-phantomflow](https://github.com/Huddle/grunt-testflow)** wrap PhantomCSS and provides an experimental way of describing and visualising user flows through tests with CasperJS. As well as providing a terse readable structure for UI testing, it also produces intriguing graph visualisations that can be used to present PhantomCSS screenshots and failed diffs.  We're actively using it at Huddle and it's changing the way we think about UI for the better.\n\nAlso, take a look at [PhantomXHR](http://github.com/Huddle/PhantomXHR) for stubbing and mocking XHR requests. Isolated UI testing IS THE FUTURE!\n\n### Why is this project no longer maintained\n\nThe introduction of [headless Chrome](https://developers.google.com/web/updates/2017/04/headless-chrome) has simply meant that PhantomJS is no longer the best tool for running browser tests.  Huddle is making efforts to move away from PhantomJS based testing, largely to gain better coverage of new browser features such as CSS grid. Interestingly there still doesn't seem to be a straight replacement for PhantomCSS for Chrome, perhaps because it is now far easier to roll-your-own VRT suite. The Huddle development team is now actively looking into using Docker containers for running Mocha/Chai test suites against headless Chrome, using [Resemblejs](https://github.com/Huddle/Resemble.js) directly in NodeJS for image comparison.\n\n### Huddle Careers\n\nHuddle strongly believe in innovation and give you 20% of work time to spend on innovative projects of your choosing.\n\nIf you like what you see and would like to work on this kind of stuff for a job then get in touch.\n\nVisit http://www.huddle.com/careers for open vacancies now, or register your interest for the future.\n\n--------------------------------------\n\nPhantomCSS was created by [James Cryer](http://github.com/jamescryer) and the Huddle development team.\n"
        },
        {
          "name": "casperjs.bat",
          "type": "blob",
          "size": 0.49609375,
          "content": "@ECHO OFF\nset CASPER_PATH=%~dp0node_modules\\casperjs\nset CASPER_BIN=%CASPER_PATH%\\bin\\\nset PHANTOMJS=%~dp0node_modules\\phantomjs-prebuilt\\lib\\phantom\\bin\\phantomjs.exe\nset ARGV=%*\nset IS_SLIMERJS=\"false\"\n\nfor %%a in (%*) do (\n    if %%a equ slimerjs (\n    \tset IS_SLIMERJS=\"true\"\n    )\n)\n\nif %IS_SLIMERJS% equ \"false\" (\n    call \"%PHANTOMJS%\" \"%CASPER_BIN%bootstrap.js\" --casper-path=\"%CASPER_PATH%\" --cli %ARGV%\n) else (\n\tcall slimerjs \"%CASPER_BIN%bootstrap.js\" --casper-path=\"%CASPER_PATH%\" --cli %ARGV%\n)"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 26.33984375,
          "content": "{\n\t\"name\": \"phantomcss\",\n\t\"version\": \"1.6.0\",\n\t\"lockfileVersion\": 1,\n\t\"requires\": true,\n\t\"dependencies\": {\n\t\t\"abbrev\": {\n\t\t\t\"version\": \"1.1.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",\n\t\t\t\"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\"\n\t\t},\n\t\t\"ansi-regex\": {\n\t\t\t\"version\": \"2.1.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz\",\n\t\t\t\"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\"\n\t\t},\n\t\t\"aproba\": {\n\t\t\t\"version\": \"1.2.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz\",\n\t\t\t\"integrity\": \"sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==\"\n\t\t},\n\t\t\"are-we-there-yet\": {\n\t\t\t\"version\": \"1.1.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz\",\n\t\t\t\"integrity\": \"sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"delegates\": \"^1.0.0\",\n\t\t\t\t\"readable-stream\": \"^2.0.6\"\n\t\t\t}\n\t\t},\n\t\t\"balanced-match\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz\",\n\t\t\t\"integrity\": \"sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\"\n\t\t},\n\t\t\"brace-expansion\": {\n\t\t\t\"version\": \"1.1.11\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n\t\t\t\"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"balanced-match\": \"^1.0.0\",\n\t\t\t\t\"concat-map\": \"0.0.1\"\n\t\t\t}\n\t\t},\n\t\t\"canvas\": {\n\t\t\t\"version\": \"2.2.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/canvas/-/canvas-2.2.0.tgz\",\n\t\t\t\"integrity\": \"sha512-4blMi2I2DuHh9UZNrmvU0hyY4dZJFOjNuqaZpI/66pKCyX1HPstvK+f2fIdc+NaF8b6wiuhvwXEFNkm7jIKYSA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"nan\": \"^2.11.1\",\n\t\t\t\t\"node-pre-gyp\": \"^0.11.0\"\n\t\t\t}\n\t\t},\n\t\t\"casperjs\": {\n\t\t\t\"version\": \"1.1.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/casperjs/-/casperjs-1.1.4.tgz\",\n\t\t\t\"integrity\": \"sha1-6wH07YWsUgqPTZMrTap00+d7x0Y=\"\n\t\t},\n\t\t\"chownr\": {\n\t\t\t\"version\": \"1.1.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/chownr/-/chownr-1.1.1.tgz\",\n\t\t\t\"integrity\": \"sha512-j38EvO5+LHX84jlo6h4UzmOwi0UgW61WRyPtJz4qaadK5eY3BTS5TY/S1Stc3Uk2lIM6TPevAlULiEJwie860g==\"\n\t\t},\n\t\t\"code-point-at\": {\n\t\t\t\"version\": \"1.1.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz\",\n\t\t\t\"integrity\": \"sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=\"\n\t\t},\n\t\t\"concat-map\": {\n\t\t\t\"version\": \"0.0.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n\t\t\t\"integrity\": \"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\"\n\t\t},\n\t\t\"console-control-strings\": {\n\t\t\t\"version\": \"1.1.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz\",\n\t\t\t\"integrity\": \"sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4=\"\n\t\t},\n\t\t\"core-util-is\": {\n\t\t\t\"version\": \"1.0.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\",\n\t\t\t\"integrity\": \"sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\"\n\t\t},\n\t\t\"debug\": {\n\t\t\t\"version\": \"2.6.9\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n\t\t\t\"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"ms\": \"2.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"deep-extend\": {\n\t\t\t\"version\": \"0.6.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz\",\n\t\t\t\"integrity\": \"sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==\"\n\t\t},\n\t\t\"delegates\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz\",\n\t\t\t\"integrity\": \"sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o=\"\n\t\t},\n\t\t\"detect-libc\": {\n\t\t\t\"version\": \"1.0.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz\",\n\t\t\t\"integrity\": \"sha1-+hN8S9aY7fVc1c0CrFWfkaTEups=\"\n\t\t},\n\t\t\"es6-promise\": {\n\t\t\t\"version\": \"4.0.5\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-eILzCt3lskDM+n99eMVIMwlRrkI=\"\n\t\t},\n\t\t\"fs-extra\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"graceful-fs\": \"^4.1.2\",\n\t\t\t\t\"jsonfile\": \"^2.1.0\",\n\t\t\t\t\"klaw\": \"^1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"fs-minipass\": {\n\t\t\t\"version\": \"1.2.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.5.tgz\",\n\t\t\t\"integrity\": \"sha512-JhBl0skXjUPCFH7x6x61gQxrKyXsxB5gcgePLZCwfyCGGsTISMoIeObbrvVeP6Xmyaudw4TT43qV2Gz+iyd2oQ==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"minipass\": \"^2.2.1\"\n\t\t\t}\n\t\t},\n\t\t\"fs.realpath\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n\t\t\t\"integrity\": \"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\"\n\t\t},\n\t\t\"gauge\": {\n\t\t\t\"version\": \"2.7.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz\",\n\t\t\t\"integrity\": \"sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"aproba\": \"^1.0.3\",\n\t\t\t\t\"console-control-strings\": \"^1.0.0\",\n\t\t\t\t\"has-unicode\": \"^2.0.0\",\n\t\t\t\t\"object-assign\": \"^4.1.0\",\n\t\t\t\t\"signal-exit\": \"^3.0.0\",\n\t\t\t\t\"string-width\": \"^1.0.1\",\n\t\t\t\t\"strip-ansi\": \"^3.0.1\",\n\t\t\t\t\"wide-align\": \"^1.1.0\"\n\t\t\t}\n\t\t},\n\t\t\"glob\": {\n\t\t\t\"version\": \"7.1.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.3.tgz\",\n\t\t\t\"integrity\": \"sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"fs.realpath\": \"^1.0.0\",\n\t\t\t\t\"inflight\": \"^1.0.4\",\n\t\t\t\t\"inherits\": \"2\",\n\t\t\t\t\"minimatch\": \"^3.0.4\",\n\t\t\t\t\"once\": \"^1.3.0\",\n\t\t\t\t\"path-is-absolute\": \"^1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"graceful-fs\": {\n\t\t\t\"version\": \"4.1.11\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=\"\n\t\t},\n\t\t\"has-unicode\": {\n\t\t\t\"version\": \"2.0.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz\",\n\t\t\t\"integrity\": \"sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk=\"\n\t\t},\n\t\t\"hasha\": {\n\t\t\t\"version\": \"2.2.0\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-eNfL/B5tZjA/55g3NlmEUXsvbuE=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"is-stream\": \"^1.0.1\",\n\t\t\t\t\"pinkie-promise\": \"^2.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"iconv-lite\": {\n\t\t\t\"version\": \"0.4.24\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n\t\t\t\"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"safer-buffer\": \">= 2.1.2 < 3\"\n\t\t\t}\n\t\t},\n\t\t\"ignore-walk\": {\n\t\t\t\"version\": \"3.0.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.1.tgz\",\n\t\t\t\"integrity\": \"sha512-DTVlMx3IYPe0/JJcYP7Gxg7ttZZu3IInhuEhbchuqneY9wWe5Ojy2mXLBaQFUQmo0AW2r3qG7m1mg86js+gnlQ==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"minimatch\": \"^3.0.4\"\n\t\t\t}\n\t\t},\n\t\t\"inflight\": {\n\t\t\t\"version\": \"1.0.6\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n\t\t\t\"integrity\": \"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"once\": \"^1.3.0\",\n\t\t\t\t\"wrappy\": \"1\"\n\t\t\t}\n\t\t},\n\t\t\"inherits\": {\n\t\t\t\"version\": \"2.0.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\n\t\t\t\"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\"\n\t\t},\n\t\t\"ini\": {\n\t\t\t\"version\": \"1.3.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/ini/-/ini-1.3.5.tgz\",\n\t\t\t\"integrity\": \"sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==\"\n\t\t},\n\t\t\"is-fullwidth-code-point\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz\",\n\t\t\t\"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"number-is-nan\": \"^1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"is-stream\": {\n\t\t\t\"version\": \"1.1.0\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-EtSj3U5o4Lec6428hBc66A2RykQ=\"\n\t\t},\n\t\t\"isarray\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\n\t\t\t\"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n\t\t},\n\t\t\"isexe\": {\n\t\t\t\"version\": \"1.1.2\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-NvPiLmB1CSD15yQaR2qMakInWtA=\"\n\t\t},\n\t\t\"jsonfile\": {\n\t\t\t\"version\": \"2.4.0\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"graceful-fs\": \"^4.1.6\"\n\t\t\t}\n\t\t},\n\t\t\"kew\": {\n\t\t\t\"version\": \"0.7.0\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-edk9LTM2PW/dKXCzNdkUGtWR15s=\"\n\t\t},\n\t\t\"klaw\": {\n\t\t\t\"version\": \"1.3.1\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-QIhDO0azsbolnXh4XY6W9zugJDk=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"graceful-fs\": \"^4.1.9\"\n\t\t\t}\n\t\t},\n\t\t\"minimatch\": {\n\t\t\t\"version\": \"3.0.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz\",\n\t\t\t\"integrity\": \"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"brace-expansion\": \"^1.1.7\"\n\t\t\t}\n\t\t},\n\t\t\"minimist\": {\n\t\t\t\"version\": \"0.0.8\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n\t\t\t\"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\"\n\t\t},\n\t\t\"minipass\": {\n\t\t\t\"version\": \"2.3.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-2.3.5.tgz\",\n\t\t\t\"integrity\": \"sha512-Gi1W4k059gyRbyVUZQ4mEqLm0YIUiGYfvxhF6SIlk3ui1WVxMTGfGdQ2SInh3PDrRTVvPKgULkpJtT4RH10+VA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"safe-buffer\": \"^5.1.2\",\n\t\t\t\t\"yallist\": \"^3.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"minizlib\": {\n\t\t\t\"version\": \"1.1.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/minizlib/-/minizlib-1.1.1.tgz\",\n\t\t\t\"integrity\": \"sha512-TrfjCjk4jLhcJyGMYymBH6oTXcWjYbUAXTHDbtnWHjZC25h0cdajHuPE1zxb4DVmu8crfh+HwH/WMuyLG0nHBg==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"minipass\": \"^2.2.1\"\n\t\t\t}\n\t\t},\n\t\t\"mkdirp\": {\n\t\t\t\"version\": \"0.5.1\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n\t\t\t\"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"minimist\": \"0.0.8\"\n\t\t\t}\n\t\t},\n\t\t\"ms\": {\n\t\t\t\"version\": \"2.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n\t\t\t\"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\"\n\t\t},\n\t\t\"nan\": {\n\t\t\t\"version\": \"2.11.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/nan/-/nan-2.11.1.tgz\",\n\t\t\t\"integrity\": \"sha512-iji6k87OSXa0CcrLl9z+ZiYSuR2o+c0bGuNmXdrhTQTakxytAFsC56SArGYoiHlJlFoHSnvmhpceZJaXkVuOtA==\"\n\t\t},\n\t\t\"needle\": {\n\t\t\t\"version\": \"2.2.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/needle/-/needle-2.2.4.tgz\",\n\t\t\t\"integrity\": \"sha512-HyoqEb4wr/rsoaIDfTH2aVL9nWtQqba2/HvMv+++m8u0dz808MaagKILxtfeSN7QU7nvbQ79zk3vYOJp9zsNEA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"debug\": \"^2.1.2\",\n\t\t\t\t\"iconv-lite\": \"^0.4.4\",\n\t\t\t\t\"sax\": \"^1.2.4\"\n\t\t\t}\n\t\t},\n\t\t\"node-pre-gyp\": {\n\t\t\t\"version\": \"0.11.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/node-pre-gyp/-/node-pre-gyp-0.11.0.tgz\",\n\t\t\t\"integrity\": \"sha512-TwWAOZb0j7e9eGaf9esRx3ZcLaE5tQ2lvYy1pb5IAaG1a2e2Kv5Lms1Y4hpj+ciXJRofIxxlt5haeQ/2ANeE0Q==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"detect-libc\": \"^1.0.2\",\n\t\t\t\t\"mkdirp\": \"^0.5.1\",\n\t\t\t\t\"needle\": \"^2.2.1\",\n\t\t\t\t\"nopt\": \"^4.0.1\",\n\t\t\t\t\"npm-packlist\": \"^1.1.6\",\n\t\t\t\t\"npmlog\": \"^4.0.2\",\n\t\t\t\t\"rc\": \"^1.2.7\",\n\t\t\t\t\"rimraf\": \"^2.6.1\",\n\t\t\t\t\"semver\": \"^5.3.0\",\n\t\t\t\t\"tar\": \"^4\"\n\t\t\t}\n\t\t},\n\t\t\"nopt\": {\n\t\t\t\"version\": \"4.0.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-4.0.1.tgz\",\n\t\t\t\"integrity\": \"sha1-0NRoWv1UFRk8jHUFYC0NF81kR00=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"abbrev\": \"1\",\n\t\t\t\t\"osenv\": \"^0.1.4\"\n\t\t\t}\n\t\t},\n\t\t\"npm-bundled\": {\n\t\t\t\"version\": \"1.0.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.0.5.tgz\",\n\t\t\t\"integrity\": \"sha512-m/e6jgWu8/v5niCUKQi9qQl8QdeEduFA96xHDDzFGqly0OOjI7c+60KM/2sppfnUU9JJagf+zs+yGhqSOFj71g==\"\n\t\t},\n\t\t\"npm-packlist\": {\n\t\t\t\"version\": \"1.1.12\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.1.12.tgz\",\n\t\t\t\"integrity\": \"sha512-WJKFOVMeAlsU/pjXuqVdzU0WfgtIBCupkEVwn+1Y0ERAbUfWw8R4GjgVbaKnUjRoD2FoQbHOCbOyT5Mbs9Lw4g==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"ignore-walk\": \"^3.0.1\",\n\t\t\t\t\"npm-bundled\": \"^1.0.1\"\n\t\t\t}\n\t\t},\n\t\t\"npmlog\": {\n\t\t\t\"version\": \"4.1.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz\",\n\t\t\t\"integrity\": \"sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"are-we-there-yet\": \"~1.1.2\",\n\t\t\t\t\"console-control-strings\": \"~1.1.0\",\n\t\t\t\t\"gauge\": \"~2.7.3\",\n\t\t\t\t\"set-blocking\": \"~2.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"number-is-nan\": {\n\t\t\t\"version\": \"1.0.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz\",\n\t\t\t\"integrity\": \"sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=\"\n\t\t},\n\t\t\"object-assign\": {\n\t\t\t\"version\": \"4.1.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n\t\t\t\"integrity\": \"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\"\n\t\t},\n\t\t\"once\": {\n\t\t\t\"version\": \"1.4.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n\t\t\t\"integrity\": \"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"wrappy\": \"1\"\n\t\t\t}\n\t\t},\n\t\t\"os-homedir\": {\n\t\t\t\"version\": \"1.0.2\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n\t\t\t\"integrity\": \"sha1-/7xJiDNuDoM94MFox+8VISGqf7M=\"\n\t\t},\n\t\t\"os-tmpdir\": {\n\t\t\t\"version\": \"1.0.2\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n\t\t\t\"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\"\n\t\t},\n\t\t\"osenv\": {\n\t\t\t\"version\": \"0.1.5\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz\",\n\t\t\t\"integrity\": \"sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"os-homedir\": \"^1.0.0\",\n\t\t\t\t\"os-tmpdir\": \"^1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"path-is-absolute\": {\n\t\t\t\"version\": \"1.0.1\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n\t\t\t\"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\"\n\t\t},\n\t\t\"phantomjs-prebuilt\": {\n\t\t\t\"version\": \"2.1.16\",\n\t\t\t\"resolved\": \"https://proget.huddle.local/npm/npmjs.org/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.16.tgz\",\n\t\t\t\"integrity\": \"sha1-79ISpKOWbTZHaE6ouniFSb4q7+8=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"es6-promise\": \"^4.0.3\",\n\t\t\t\t\"extract-zip\": \"^1.6.5\",\n\t\t\t\t\"fs-extra\": \"^1.0.0\",\n\t\t\t\t\"hasha\": \"^2.2.0\",\n\t\t\t\t\"kew\": \"^0.7.0\",\n\t\t\t\t\"progress\": \"^1.1.8\",\n\t\t\t\t\"request\": \"^2.81.0\",\n\t\t\t\t\"request-progress\": \"^2.0.1\",\n\t\t\t\t\"which\": \"^1.2.10\"\n\t\t\t},\n\t\t\t\"dependencies\": {\n\t\t\t\t\"assert-plus\": {\n\t\t\t\t\t\"version\": \"1.0.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=\"\n\t\t\t\t},\n\t\t\t\t\"aws-sign2\": {\n\t\t\t\t\t\"version\": \"0.7.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=\"\n\t\t\t\t},\n\t\t\t\t\"boom\": {\n\t\t\t\t\t\"version\": \"4.3.1\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/boom/-/boom-4.3.1.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-T4owBctKfjiJ90kDD9JbluAdLjE=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"hoek\": \"4.x.x\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"caseless\": {\n\t\t\t\t\t\"version\": \"0.12.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw=\"\n\t\t\t\t},\n\t\t\t\t\"concat-stream\": {\n\t\t\t\t\t\"version\": \"1.6.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-CqxmL9Ur54lk1VMvaUeE5wEQrPc=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"inherits\": \"^2.0.3\",\n\t\t\t\t\t\t\"readable-stream\": \"^2.2.2\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"cryptiles\": {\n\t\t\t\t\t\"version\": \"3.1.2\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/cryptiles/-/cryptiles-3.1.2.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-qJ+7Ig9c4l7FboxKqKT9e1sNKf4=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"boom\": \"5.x.x\"\n\t\t\t\t\t},\n\t\t\t\t\t\"dependencies\": {\n\t\t\t\t\t\t\"boom\": {\n\t\t\t\t\t\t\t\"version\": \"5.2.0\",\n\t\t\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/boom/-/boom-5.2.0.tgz\",\n\t\t\t\t\t\t\t\"integrity\": \"sha512-Z5BTk6ZRe4tXXQlkqftmsAUANpXmuwlsF5Oov8ThoMbQRzdGTA1ngYRW160GexgOgjsFOKJz0LYhoNi+2AMBUw==\",\n\t\t\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\t\t\"hoek\": \"4.x.x\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"debug\": {\n\t\t\t\t\t\"version\": \"2.6.9\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"ms\": \"2.0.0\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"extend\": {\n\t\t\t\t\t\"version\": \"3.0.1\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.1.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-p1Xqe8Gt/MWjHOfnYtuq3F5jZEQ=\"\n\t\t\t\t},\n\t\t\t\t\"extract-zip\": {\n\t\t\t\t\t\"version\": \"1.6.6\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-1.6.6.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-EpDt6NINCHK0Kf0/NRyhKOxe+Fw=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"concat-stream\": \"1.6.0\",\n\t\t\t\t\t\t\"debug\": \"2.6.9\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"form-data\": {\n\t\t\t\t\t\"version\": \"2.3.1\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.3.1.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-b7lPvXGIUwbXPRXMSX/kzE7NRL8=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"mime-types\": \"^2.1.12\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"har-validator\": {\n\t\t\t\t\t\"version\": \"5.0.3\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/har-validator/-/har-validator-5.0.3.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=\"\n\t\t\t\t},\n\t\t\t\t\"hawk\": {\n\t\t\t\t\t\"version\": \"6.0.2\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/hawk/-/hawk-6.0.2.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-miowhl2+U7Qle4vdLqDdPt9m09K6yZhkLDTWGoUiUzrQCn+mHHSmfJgAyGaLRZbPmTqfFFjRV1QWCW0VWUJBbQ==\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"boom\": \"4.x.x\",\n\t\t\t\t\t\t\"cryptiles\": \"3.x.x\",\n\t\t\t\t\t\t\"hoek\": \"4.x.x\",\n\t\t\t\t\t\t\"sntp\": \"2.x.x\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"hoek\": {\n\t\t\t\t\t\"version\": \"4.2.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/hoek/-/hoek-4.2.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-v0XCLxICi9nPfYrS9RL8HbYnXi9obYAeLbSP00BmnZwCK9+Ih9WOjoZ8YoHCoav2csqn4FOz4Orldsy2dmDwmQ==\"\n\t\t\t\t},\n\t\t\t\t\"http-signature\": {\n\t\t\t\t\t\"version\": \"1.2.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"assert-plus\": \"^1.0.0\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"mime-db\": {\n\t\t\t\t\t\"version\": \"1.30.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.30.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-dMZD2i3Z1qRTmZY0ZbJtXKfXHwE=\"\n\t\t\t\t},\n\t\t\t\t\"mime-types\": {\n\t\t\t\t\t\"version\": \"2.1.17\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.17.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-Cdejk/A+mVp5+K+Fe3Cp4KsWVXo=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"mime-db\": \"~1.30.0\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"qs\": {\n\t\t\t\t\t\"version\": \"6.5.1\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.1.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-eRzhrN1WSINYCDCbrz796z37LOe3m5tmW7RQf6oBntukAG1nmovJvhnwHHRMAfeoItc1m2Hk02WER2aQ/iqs+A==\"\n\t\t\t\t},\n\t\t\t\t\"readable-stream\": {\n\t\t\t\t\t\"version\": \"2.3.3\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.3.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-m+qzzcn7KUxEmd1gMbchF+Y2eIUbieUaxkWtptyHywrX0rE8QEYqPC07Vuy4Wm32/xE16NcdBctb8S0Xe/5IeQ==\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"core-util-is\": \"~1.0.0\",\n\t\t\t\t\t\t\"inherits\": \"~2.0.3\",\n\t\t\t\t\t\t\"isarray\": \"~1.0.0\",\n\t\t\t\t\t\t\"safe-buffer\": \"~5.1.1\",\n\t\t\t\t\t\t\"string_decoder\": \"~1.0.3\",\n\t\t\t\t\t\t\"util-deprecate\": \"~1.0.1\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"request\": {\n\t\t\t\t\t\"version\": \"2.83.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/request/-/request-2.83.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-lR3gD69osqm6EYLk9wB/G1W/laGWjzH90t1vEa2xuxHD5KUrSzp9pUSfTm+YC5Nxt2T8nMPEvKlhbQayU7bgFw==\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"aws-sign2\": \"~0.7.0\",\n\t\t\t\t\t\t\"caseless\": \"~0.12.0\",\n\t\t\t\t\t\t\"extend\": \"~3.0.1\",\n\t\t\t\t\t\t\"form-data\": \"~2.3.1\",\n\t\t\t\t\t\t\"har-validator\": \"~5.0.3\",\n\t\t\t\t\t\t\"hawk\": \"~6.0.2\",\n\t\t\t\t\t\t\"http-signature\": \"~1.2.0\",\n\t\t\t\t\t\t\"mime-types\": \"~2.1.17\",\n\t\t\t\t\t\t\"qs\": \"~6.5.1\",\n\t\t\t\t\t\t\"safe-buffer\": \"^5.1.1\",\n\t\t\t\t\t\t\"tough-cookie\": \"~2.3.3\",\n\t\t\t\t\t\t\"tunnel-agent\": \"^0.6.0\",\n\t\t\t\t\t\t\"uuid\": \"^3.1.0\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sntp\": {\n\t\t\t\t\t\"version\": \"2.1.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/sntp/-/sntp-2.1.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-FL1b58BDrqS3A11lJ0zEdnJ3UOKqVxawAkF3k7F0CVN7VQ34aZrV+G8BZ1WC9ZL7NyrwsW0oviwsWDgRuVYtJg==\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"hoek\": \"4.x.x\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"string_decoder\": {\n\t\t\t\t\t\"version\": \"1.0.3\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"safe-buffer\": \"~5.1.0\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"tough-cookie\": {\n\t\t\t\t\t\"version\": \"2.3.3\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.3.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-C2GKVWW23qkL80JdBNVe3EdadWE=\"\n\t\t\t\t},\n\t\t\t\t\"tunnel-agent\": {\n\t\t\t\t\t\"version\": \"0.6.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=\",\n\t\t\t\t\t\"requires\": {\n\t\t\t\t\t\t\"safe-buffer\": \"^5.0.1\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"uuid\": {\n\t\t\t\t\t\"version\": \"3.1.0\",\n\t\t\t\t\t\"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-3.1.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha512-DIWtzUkw04M4k3bf1IcpS2tngXEL26YUD2M0tMDUpnUrz2hgzUBlD55a4FjdLGPvfHxS6uluGWvaVEqgBcVa+g==\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pinkie\": {\n\t\t\t\"version\": \"2.0.4\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=\"\n\t\t},\n\t\t\"pinkie-promise\": {\n\t\t\t\"version\": \"2.0.1\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-ITXW36ejWMBprJsXh3YogihFD/o=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"pinkie\": \"^2.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"process-nextick-args\": {\n\t\t\t\"version\": \"2.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw==\"\n\t\t},\n\t\t\"progress\": {\n\t\t\t\"version\": \"1.1.8\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=\"\n\t\t},\n\t\t\"rc\": {\n\t\t\t\"version\": \"1.2.8\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/rc/-/rc-1.2.8.tgz\",\n\t\t\t\"integrity\": \"sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"deep-extend\": \"^0.6.0\",\n\t\t\t\t\"ini\": \"~1.3.0\",\n\t\t\t\t\"minimist\": \"^1.2.0\",\n\t\t\t\t\"strip-json-comments\": \"~2.0.1\"\n\t\t\t},\n\t\t\t\"dependencies\": {\n\t\t\t\t\"minimist\": {\n\t\t\t\t\t\"version\": \"1.2.0\",\n\t\t\t\t\t\"resolved\": \"http://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",\n\t\t\t\t\t\"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"readable-stream\": {\n\t\t\t\"version\": \"2.3.6\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n\t\t\t\"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"core-util-is\": \"~1.0.0\",\n\t\t\t\t\"inherits\": \"~2.0.3\",\n\t\t\t\t\"isarray\": \"~1.0.0\",\n\t\t\t\t\"process-nextick-args\": \"~2.0.0\",\n\t\t\t\t\"safe-buffer\": \"~5.1.1\",\n\t\t\t\t\"string_decoder\": \"~1.1.1\",\n\t\t\t\t\"util-deprecate\": \"~1.0.1\"\n\t\t\t}\n\t\t},\n\t\t\"request-progress\": {\n\t\t\t\"version\": \"2.0.1\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"throttleit\": \"^1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"resemblejs\": {\n\t\t\t\"version\": \"3.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/resemblejs/-/resemblejs-3.0.0.tgz\",\n\t\t\t\"integrity\": \"sha512-CLvvcUxacYyLcIRjWH4K5j8VvSngAX1puDnVeVolUm7LPlOdtSpwyPxtjh+41QKapg5FYyBvCoBS3cCdRgo/yg==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"canvas\": \"2.2.0\"\n\t\t\t}\n\t\t},\n\t\t\"rimraf\": {\n\t\t\t\"version\": \"2.6.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz\",\n\t\t\t\"integrity\": \"sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"glob\": \"^7.0.5\"\n\t\t\t}\n\t\t},\n\t\t\"safe-buffer\": {\n\t\t\t\"version\": \"5.1.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n\t\t\t\"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\n\t\t},\n\t\t\"safer-buffer\": {\n\t\t\t\"version\": \"2.1.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n\t\t\t\"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\n\t\t},\n\t\t\"sax\": {\n\t\t\t\"version\": \"1.2.4\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/sax/-/sax-1.2.4.tgz\",\n\t\t\t\"integrity\": \"sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==\"\n\t\t},\n\t\t\"semver\": {\n\t\t\t\"version\": \"5.6.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.6.0.tgz\",\n\t\t\t\"integrity\": \"sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==\"\n\t\t},\n\t\t\"set-blocking\": {\n\t\t\t\"version\": \"2.0.0\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz\",\n\t\t\t\"integrity\": \"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\"\n\t\t},\n\t\t\"signal-exit\": {\n\t\t\t\"version\": \"3.0.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz\",\n\t\t\t\"integrity\": \"sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=\"\n\t\t},\n\t\t\"string-width\": {\n\t\t\t\"version\": \"1.0.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz\",\n\t\t\t\"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"code-point-at\": \"^1.0.0\",\n\t\t\t\t\"is-fullwidth-code-point\": \"^1.0.0\",\n\t\t\t\t\"strip-ansi\": \"^3.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"string_decoder\": {\n\t\t\t\"version\": \"1.1.1\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n\t\t\t\"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"safe-buffer\": \"~5.1.0\"\n\t\t\t}\n\t\t},\n\t\t\"strip-ansi\": {\n\t\t\t\"version\": \"3.0.1\",\n\t\t\t\"resolved\": \"http://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\n\t\t\t\"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"ansi-regex\": \"^2.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"strip-json-comments\": {\n\t\t\t\"version\": \"2.0.1\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz\",\n\t\t\t\"integrity\": \"sha1-PFMZQukIwml8DsNEhYwobHygpgo=\"\n\t\t},\n\t\t\"tar\": {\n\t\t\t\"version\": \"4.4.8\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/tar/-/tar-4.4.8.tgz\",\n\t\t\t\"integrity\": \"sha512-LzHF64s5chPQQS0IYBn9IN5h3i98c12bo4NCO7e0sGM2llXQ3p2FGC5sdENN4cTW48O915Sh+x+EXx7XW96xYQ==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"chownr\": \"^1.1.1\",\n\t\t\t\t\"fs-minipass\": \"^1.2.5\",\n\t\t\t\t\"minipass\": \"^2.3.4\",\n\t\t\t\t\"minizlib\": \"^1.1.1\",\n\t\t\t\t\"mkdirp\": \"^0.5.0\",\n\t\t\t\t\"safe-buffer\": \"^5.1.2\",\n\t\t\t\t\"yallist\": \"^3.0.2\"\n\t\t\t}\n\t\t},\n\t\t\"throttleit\": {\n\t\t\t\"version\": \"1.0.0\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-nnhYNtr0Z0MUWlmEtiaNgoUorGw=\"\n\t\t},\n\t\t\"util-deprecate\": {\n\t\t\t\"version\": \"1.0.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n\t\t\t\"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\"\n\t\t},\n\t\t\"which\": {\n\t\t\t\"version\": \"1.2.12\",\n\t\t\t\"resolved\": false,\n\t\t\t\"integrity\": \"sha1-3me15FAmnxlJCe8j7OTr5Bb6EZI=\",\n\t\t\t\"requires\": {\n\t\t\t\t\"isexe\": \"^1.1.1\"\n\t\t\t}\n\t\t},\n\t\t\"wide-align\": {\n\t\t\t\"version\": \"1.1.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/wide-align/-/wide-align-1.1.3.tgz\",\n\t\t\t\"integrity\": \"sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==\",\n\t\t\t\"requires\": {\n\t\t\t\t\"string-width\": \"^1.0.2 || 2\"\n\t\t\t}\n\t\t},\n\t\t\"wrappy\": {\n\t\t\t\"version\": \"1.0.2\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n\t\t\t\"integrity\": \"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\"\n\t\t},\n\t\t\"yallist\": {\n\t\t\t\"version\": \"3.0.3\",\n\t\t\t\"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz\",\n\t\t\t\"integrity\": \"sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==\"\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6201171875,
          "content": "{\n\t\"name\": \"phantomcss\",\n\t\"version\": \"1.6.0\",\n\t\"description\": \"A CasperJS module for automating visual regression testing of Web apps, live style guides and responsive layouts.\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/Huddle/PhantomCSS.git\"\n\t},\n\t\"main\": \"phantomcss.js\",\n\t\"keywords\": [\n\t\t\"css\",\n\t\t\"phantomjs\",\n\t\t\"casperjs\",\n\t\t\"testing\",\n\t\t\"visual regression\",\n\t\t\"responsive\"\n\t],\n\t\"author\": \"James Cryer / Huddle\",\n\t\"license\": \"MIT\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/Huddle/PhantomCSS/issues\"\n\t},\n\t\"dependencies\": {\n\t\t\"casperjs\": \"^1.1.4\",\n\t\t\"phantomjs-prebuilt\": \"^2.1.16\",\n\t\t\"resemblejs\": \"^3.0.0\"\n\t}\n}\n"
        },
        {
          "name": "phantomcss.js",
          "type": "blob",
          "size": 19.4638671875,
          "content": "/*\nJames Cryer / Huddle / 2016\nhttps://github.com/Huddle/PhantomCSS\nhttp://tldr.huddle.com/blog/css-testing/\n*/\n\nvar fs = require( 'fs' );\n\nvar _src = '.' + fs.separator + 'screenshots';\nvar _results; // for backwards compatibility results and src are the same - but you can change it!\nvar _failures = '.' + fs.separator + 'failures';\n\nvar _count = 0;\nvar exitStatus;\nvar _hideElements;\nvar _waitTimeout = 60000;\nvar _addLabelToFailedImage = true;\nvar _mismatchTolerance = 0.05;\nvar _resembleOutputSettings = {};\nvar _cleanupComparisonImages = false;\nvar _failOnCaptureError = false;\nvar diffsCreated = [];\n\nvar _resemblePath;\nvar _resembleContainerPath;\nvar _libraryRoot;\nvar _rebase = false;\nvar _prefixCount = false;\nvar _isCount = true;\n\nvar _baselineImageSuffix = \"\";\nvar _diffImageSuffix = \".diff\";\nvar _failureImageSuffix = \".fail\";\n\nvar _captureWaitEnabled = true;\n\nexports.screenshot = screenshot;\nexports.compareAll = compareAll;\nexports.compareMatched = compareMatched;\nexports.compareExplicit = compareExplicit;\nexports.compareSession = compareSession;\nexports.compareFiles = compareFiles;\nexports.waitForTests = waitForTests;\nexports.init = init;\nexports.done = done;\nexports.update = update;\nexports.turnOffAnimations = turnOffAnimations;\nexports.getExitStatus = getExitStatus;\nexports.getCreatedDiffFiles = getCreatedDiffFiles;\n\nfunction update( options ) {\n\n\tfunction stripslash( str ) {\n\t\treturn ( str || '' ).replace( /\\/\\//g, '/' ).replace( /\\\\/g, '\\\\' );\n\t}\n\n\toptions = options || {};\n\n\tcasper = options.casper || casper;\n\n\t_waitTimeout = options.waitTimeout || _waitTimeout;\n\n\t_libraryRoot = options.libraryRoot;\n\n\t_resemblePath = _resemblePath || getResemblePath( _libraryRoot );\n\n\t_resembleContainerPath = _resembleContainerPath || getResembleContainerPath( _libraryRoot );\n\n\t_src = stripslash( options.screenshotRoot || _src );\n\t_results = stripslash( options.comparisonResultRoot || options.screenshotRoot || _results || _src );\n\t_failures = options.failedComparisonsRoot === false ? false : stripslash( options.failedComparisonsRoot || _failures );\n\n\t_fileNameGetter = options.fileNameGetter || _fileNameGetter;\n\n\t_prefixCount = options.prefixCount || _prefixCount;\n\t_isCount = ( options.addIteratorToImage !== false );\n\n\t_onPass = options.onPass || _onPass;\n\t_onFail = options.onFail || _onFail;\n\t_onTimeout = options.onTimeout || _onTimeout;\n\t_onNewImage = options.onNewImage || _onNewImage;\n\t_onComplete = options.onComplete || options.report || _onComplete;\n\t_onCaptureFail = options.onCaptureFail || _onCaptureFail;\n\n\t_failOnCaptureError = options.failOnCaptureError || _failOnCaptureError;\n\n\t_hideElements = options.hideElements;\n\n\t_mismatchTolerance = isNaN(options.mismatchTolerance) ? _mismatchTolerance : options.mismatchTolerance;\n\n\t_rebase = isNotUndefined(options.rebase) ? options.rebase : _rebase;\n\n\t_resembleOutputSettings = options.outputSettings || _resembleOutputSettings;\n\n\t_resembleOutputSettings.useCrossOrigin=false; // turn off x-origin attr in Resemble to support SlimerJS\n\n\t_cleanupComparisonImages = options.cleanupComparisonImages || _cleanupComparisonImages;\n\n\t_baselineImageSuffix = options.baselineImageSuffix || _baselineImageSuffix;\n\t_diffImageSuffix = options.diffImageSuffix || _diffImageSuffix;\n\t_failureImageSuffix = options.failureImageSuffix || _failureImageSuffix;\n\n\t_captureWaitEnabled = isNotUndefined(options.captureWaitEnabled) ? options.captureWaitEnabled : _captureWaitEnabled;\n\n\tif ( options.addLabelToFailedImage !== undefined ) {\n\t\t_addLabelToFailedImage = options.addLabelToFailedImage;\n\t}\n\n\tif ( _cleanupComparisonImages ) {\n\t\t_results += fs.separator + generateRandomString();\n\t}\n}\n\nfunction isNotUndefined(val){\n\treturn val !== void 0;\n}\n\nfunction init( options ) {\n\tupdate( options );\n}\n\nfunction done(){\n\t_count = 0;\n}\n\nfunction getResemblePath( root ) {\n    var path;\n\n\tif(root){\n\t\tpath = [ root, 'node_modules', 'resemblejs', 'resemble.js' ].join( fs.separator );\n\t\tif ( !_isFile( path ) ) {\n\t\t\tpath = [ root, '..', 'resemblejs', 'resemble.js' ].join( fs.separator );\n\t\t}\n\t} else {\n\t\trequire('resemblejs');\n\t\tfor(var c in require.cache) {\n\t\t\tif(/resemblejs/.test(c)) {\n\t\t\t\tpath = require.cache[c].filename;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( !_isFile( path ) ) {\n\t\tthrow \"[PhantomCSS] Resemble.js not found: \" + path;\n\t}\n\n    return path;\n}\n\n\nfunction getResembleContainerPath(root) {\n    var path;\n\n\tif(root){\n\t\tpath = root + fs.separator + 'resemblejscontainer.html';\n\t} else {\n\t\tfor (var c in require.cache) {\n\t\t\tif (/phantomcss/.test(c)) {\n\t\t\t\tpath = require.cache[c].filename.replace('phantomcss.js', 'resemblejscontainer.html');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n    if ( !_isFile(path) ) {\n        throw '[PhantomCSS] Can\\'t find Resemble container. (' + path + ')';\n    }\n\n    return path;\n}\n\nfunction turnOffAnimations() {\n\tconsole.log( '[PhantomCSS] Turning off animations' );\n\tcasper.evaluate( function turnOffAnimations() {\n\n\t\tfunction disableAnimations() {\n\t\t\tvar jQuery = window.jQuery;\n\t\t\tif ( jQuery ) {\n\t\t\t\tjQuery.fx.off = true;\n\t\t\t}\n\n\t\t\tvar css = document.createElement( \"style\" );\n\t\t\tcss.type = \"text/css\";\n\t\t\tcss.innerHTML = \"* { -webkit-transition: none !important; transition: none !important; -webkit-animation: none !important; animation: none !important; }\";\n\t\t\tdocument.body.appendChild( css );\n\t\t}\n\n\t\tif ( document.readyState !== \"loading\" ) {\n\t\t\tdisableAnimations();\n\t\t} else {\n\t\t\twindow.addEventListener( 'load', disableAnimations, false );\n\t\t}\n\t} );\n}\n\nfunction _fileNameGetter( root, fileName ) {\n\tvar name;\n\n\t// If no iterator, enforce filename.\n\tif ( !_isCount && !fileName ) {\n\t\tthrow 'Filename is required when addIteratorToImage option is false.';\n\t}\n\n\tfileName = fileName || \"screenshot\";\n\n\tif ( !_isCount ) {\n\t\tname = root + fs.separator + fileName;\n\t\t_count++;\n\t} else {\n\t\tif ( _prefixCount ) {\n\t\t\tname = root + fs.separator + _count++ + \"_\" + fileName;\n\t\t} else {\n\t\t\tname = root + fs.separator + fileName + \"_\" + _count++;\n\t\t}\n\t}\n\n\tif ( _isFile( name + _baselineImageSuffix + '.png' ) ) {\n\t\treturn name + _diffImageSuffix + '.png';\n\t} else {\n\t\treturn name + _baselineImageSuffix + '.png';\n\t}\n}\n\nfunction _replaceDiffSuffix( str ) {\n\treturn str.replace( _diffImageSuffix, _baselineImageSuffix );\n}\n\nfunction _isFile( path ) {\n\tvar exists = false;\n\ttry {\n\t\texists = fs.isFile( path );\n\t} catch ( e ) {\n\t\tif ( e.name !== 'NS_ERROR_FILE_TARGET_DOES_NOT_EXIST' && e.name !== 'NS_ERROR_FILE_NOT_FOUND' ) {\n\t\t\t// We weren't expecting this exception\n\t\t\tthrow e;\n\t\t}\n\t}\n\treturn exists;\n}\n\nfunction screenshot( target, timeToWait, hideSelector, fileName ) {\n\tvar name;\n\n\tif ( isComponentsConfig( target ) ) {\n\t\tfor ( name in target ) {\n\t\t\tif ( isComponentsConfig( target[ name ] ) ) {\n\t\t\t\twaitAndHideToCapture( target[ name ].selector, name, target[ name ].ignore, target[ name ].wait );\n\t\t\t} else {\n\t\t\t\twaitAndHideToCapture( target[ name ], name );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ( isNaN( Number( timeToWait ) ) && ( typeof timeToWait === 'string' ) ) {\n\t\t\tfileName = timeToWait;\n\t\t\ttimeToWait = void 0;\n\t\t}\n\t\twaitAndHideToCapture( target, fileName, hideSelector, timeToWait );\n\t}\n}\n\nfunction isComponentsConfig( obj ) {\n\treturn ( Object.prototype.toString.call( obj ) === '[object Object]' ) && ( isClipRect( obj ) === false );\n}\n\nfunction grab( filepath, target ) {\n\tif ( isClipRect( target ) ) {\n\t\tcasper.capture( filepath, target );\n\t} else {\n\t\tcasper.captureSelector( filepath, target );\n\t}\n}\n\nfunction capture( srcPath, resultPath, target ) {\n\tvar originalForResult = _replaceDiffSuffix( resultPath );\n\tvar originalFromSource = _replaceDiffSuffix( srcPath );\n\n\ttry {\n\n\t\tif ( _rebase ) {\n\n\t\t\tgrab( originalFromSource, target );\n\n\t\t\tif ( isThisImageADiff( resultPath ) ) {\n\t\t\t\t// Tidy up. Remove old diff after rebase\n\t\t\t\tremoveFile( resultPath );\n\t\t\t}\n\n\t\t\t_onNewImage( {\n\t\t\t\tfilename: originalFromSource\n\t\t\t} );\n\n\t\t} else if ( isThisImageADiff( resultPath ) ) {\n\n\t\t\tgrab( resultPath, target );\n\n\t\t\tdiffsCreated.push( resultPath );\n\n\t\t\tif ( srcPath !== resultPath ) {\n\t\t\t\t// also copy the original over to the result directory\n\t\t\t\tcopyAndReplaceFile( originalFromSource, originalForResult );\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgrab( srcPath, target );\n\n\t\t\tif ( srcPath !== resultPath ) {\n\t\t\t\t// can't use copyAndReplaceFile yet, so just capture again\n\t\t\t\tgrab( resultPath, target );\n\t\t\t}\n\n\t\t\t_onNewImage( {\n\t\t\t\tfilename: resultPath\n\t\t\t} );\n\t\t}\n\n\t} catch ( ex ) {\n\t\t_onCaptureFail(ex, target)\n\t}\n}\n\nfunction isClipRect( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.top === 'number' &&\n\t\ttypeof value.left === 'number' &&\n\t\ttypeof value.width === 'number' &&\n\t\ttypeof value.height === 'number'\n\t);\n}\n\nfunction isThisImageADiff( path ) {\n\tvar sanitizedDiffSuffix = _diffImageSuffix.replace( /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\" );\n\tvar diffRegex = new RegExp( sanitizedDiffSuffix + \"\\\\.png\" );\n\treturn diffRegex.test( path );\n}\n\nfunction copyAndReplaceFile( src, dest ) {\n\tremoveFile( dest );\n\tfs.copy( src, dest );\n}\n\nfunction removeFile( filepath ) {\n\tif ( _isFile( filepath ) ) {\n\t\tfs.remove( filepath );\n\t}\n}\n\nfunction asyncCompare( one, two, func ) {\n\n\tif ( !casper.evaluate( function () {\n\t\t\treturn window._imagediff_;\n\t\t} ) ) {\n\t\tinitClient();\n\t}\n\n\tcasper.fillSelectors( 'form#image-diff-form', {\n\t\t'[name=one]': one,\n\t\t'[name=two]': two\n\t} );\n\n\tcasper.evaluate( function ( filename ) {\n\t\twindow._imagediff_.run( filename );\n\t}, {\n\t\tlabel: _addLabelToFailedImage ? one : false\n\t} );\n\n\tcasper.waitFor(\n\t\tfunction check() {\n\t\t\treturn this.evaluate( function () {\n\t\t\t\treturn window._imagediff_.hasResult;\n\t\t\t} );\n\t\t},\n\t\tfunction () {\n\n\t\t\tvar mismatch = casper.evaluate( function () {\n\t\t\t\treturn window._imagediff_.getResult();\n\t\t\t} );\n\n\t\t\tif ( Number( mismatch ) ) {\n\t\t\t\tfunc( false, mismatch );\n\t\t\t} else {\n\t\t\t\tfunc( true );\n\t\t\t}\n\n\t\t},\n\t\tfunction () {\n\t\t\tfunc( false );\n\t\t},\n\t\t_waitTimeout\n\t);\n}\n\nfunction getDiffs( root, collection ) {\n\tvar symDict = { '..': 1, '.': 1};\n\tif(!collection) {collection = [];}\n\tif ( fs.isDirectory( root ) ) {\n\t\tfs.list( root ).forEach( function(leaf){\n\t\t\tvar newroot = root + fs.separator + leaf;\n\t\t\tif ( symDict[ leaf ] ) { return true; }\n\t\t\tgetDiffs(newroot, collection);\n\t\t} );\n\t} else if ( isThisImageADiff( root.toLowerCase() ) ) {\n\t\tcollection.push( root );\n\t}\n\treturn collection;\n}\n\nfunction filterOn(include, exclude){\n\treturn function(path){\n\t\tvar includeAble = (include === void 0) || include.test( path.toLowerCase() );\n\t\tvar excludeAble = exclude && exclude.test( path.toLowerCase() );\n\t\treturn !excludeAble && includeAble;\n\t}\n}\n\nfunction getCreatedDiffFiles() {\n\tvar d = diffsCreated;\n\tdiffsCreated = [];\n\treturn d;\n}\n\nfunction compareMatched( match, exclude ) {\n\t// Search for diff images, but only compare matched filenames\n\tcompareAll( exclude, void 0, match);\n}\n\nfunction compareExplicit( list ) {\n\t// An explicit list of diff images to compare ['/dialog.diff.png', '/header.diff.png']\n\tcompareAll( void 0, list );\n}\n\nfunction compareSession( list ) {\n\t// compare the diffs created in this session\n\tcompareAll( void 0, getCreatedDiffFiles() );\n}\n\nfunction compareFiles( baseFile, file ) {\n\tvar test = {\n\t\tfilename: baseFile\n\t};\n\n\tif ( !_isFile( baseFile ) ) {\n\t\ttest.error = true;\n\t} else {\n\n\t\tcasper.thenOpen( 'about:blank', function () {}); // reset page (fixes bug where failure screenshots leak between captures)\n\t\tcasper.thenOpen( 'file:///' + _resembleContainerPath, function () {\n\n\t\t\tasyncCompare( baseFile, file, function ( isSame, mismatch ) {\n\n\t\t\t\tif ( !isSame ) {\n\n\t\t\t\t\ttest.fail = true;\n\n\t\t\t\t\tcasper.waitFor(\n\t\t\t\t\t\tfunction check() {\n\t\t\t\t\t\t\treturn casper.evaluate( function () {\n\t\t\t\t\t\t\t\treturn window._imagediff_.hasImage;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tvar failFile, safeFileName, increment;\n\n\t\t\t\t\t\t\tif ( _failures ) {\n\t\t\t\t\t\t\t\t// flattened structure for failed diffs so that it is easier to preview\n\t\t\t\t\t\t\t\tfailFile = _failures + fs.separator + file.split( /\\/|\\\\/g ).pop().replace( _diffImageSuffix + '.png', '' ).replace( '.png', '' );\n\t\t\t\t\t\t\t\tsafeFileName = failFile;\n\t\t\t\t\t\t\t\tincrement = 0;\n\n\t\t\t\t\t\t\t\twhile ( _isFile( safeFileName + _failureImageSuffix + '.png' ) ) {\n\t\t\t\t\t\t\t\t\tincrement++;\n\t\t\t\t\t\t\t\t\tsafeFileName = failFile + '.' + increment;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfailFile = safeFileName + _failureImageSuffix + '.png';\n\t\t\t\t\t\t\t\tcasper.captureSelector( failFile, 'img' );\n\n\t\t\t\t\t\t\t\ttest.failFile = failFile;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( file.indexOf( _diffImageSuffix + '.png' ) !== -1 ) {\n\t\t\t\t\t\t\t\tcasper.captureSelector( file.replace( _diffImageSuffix + '.png', _failureImageSuffix + '.png' ), 'img' );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcasper.captureSelector( file.replace( '.png', _failureImageSuffix + '.png' ), 'img' );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcasper.evaluate( function () {\n\t\t\t\t\t\t\t\twindow._imagediff_.hasImage = false;\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tif ( mismatch ) {\n\t\t\t\t\t\t\t\ttest.mismatch = mismatch;\n\t\t\t\t\t\t\t\t_onFail( test ); // casper.test.fail throws and error, this function call is aborted\n\t\t\t\t\t\t\t\treturn; // Just to make it clear what is happening\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_onTimeout( test );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction () {},\n\t\t\t\t\t\t_waitTimeout\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttest.success = true;\n\t\t\t\t\t_onPass( test );\n\t\t\t\t}\n\n\t\t\t} );\n\t\t} );\n\t}\n\treturn test;\n}\n\nfunction str2RegExp(str){\n\treturn typeof str === 'string' ? new RegExp( str ) : str;\n}\n\nfunction compareAll( exclude, diffList, include ) {\n\tvar tests = [];\n\n\tif ( !diffList ) {\n\t\tdiffList = getDiffs( _results );\n\t\tif(exclude || include){\n\t\t\tdiffList = diffList.filter(filterOn( str2RegExp(include), str2RegExp(exclude) ));\n\t\t}\n\t\t//diffList.forEach(function(path){console.log( '[PhantomCSS] Attempting visual comparison of ' + path );})\n\t}\n\n\tdiffList.forEach( function ( file ) {\n\t\tvar baseFile = _replaceDiffSuffix( file );\n\t\ttests.push( compareFiles( baseFile, file ) );\n\t} );\n\n\twaitForTests( tests );\n}\n\nfunction waitForTests( tests ) {\n\tcasper.then( function () {\n\t\tcasper.waitFor( function () {\n\t\t\t\treturn tests.length === tests.reduce( function ( count, test ) {\n\t\t\t\t\tif ( test.success || test.fail || test.error ) {\n\t\t\t\t\t\treturn count + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn count;\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}, function () {\n\t\t\t\tvar fails = 0,\n\t\t\t\t\terrors = 0;\n\t\t\t\ttests.forEach( function ( test ) {\n\t\t\t\t\tif ( test.fail ) {\n\t\t\t\t\t\tfails++;\n\t\t\t\t\t} else if ( test.error ) {\n\t\t\t\t\t\terrors++;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\t_onComplete( tests, fails, errors );\n\t\t\t}, function () {\n\n\t\t\t},\n\t\t\t_waitTimeout );\n\t} );\n}\n\nfunction initClient() {\n\n\tcasper.page.injectJs( _resemblePath );\n\n\tcasper.evaluate( function ( mismatchTolerance, resembleOutputSettings ) {\n\n\t\t\tvar result;\n\n\t\t\tvar div = document.createElement( 'div' );\n\n\t\t\t// this is a bit of hack, need to get images into browser for analysis\n\t\t\tdiv.style = \"display:block;position:absolute;border:0;top:10px;left:0;\";\n\t\t\t// div.style = \"display:block;position:absolute;border:0;top:0;left:0;height:1px;width:1px;\";\n\t\t\tdiv.innerHTML = '<form id=\"image-diff-form\">' +\n\t\t\t\t'<input type=\"file\" id=\"image-diff-one\" name=\"one\"/>' +\n\t\t\t\t'<input type=\"file\" id=\"image-diff-two\" name=\"two\"/>' +\n\t\t\t\t'</form><div id=\"image-diff\"></div>';\n\t\t\tdocument.body.appendChild( div );\n\n\t\t\tif ( resembleOutputSettings ) {\n\t\t\t\tresemble.outputSettings( resembleOutputSettings );\n\t\t\t}\n\n\t\t\twindow._imagediff_ = {\n\t\t\t\thasResult: false,\n\t\t\t\thasImage: false,\n\t\t\t\trun: run,\n\t\t\t\tgetResult: function () {\n\t\t\t\t\twindow._imagediff_.hasResult = false;\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction run( label ) {\n\n\t\t\t\tfunction render( data ) {\n\t\t\t\t\tvar img = new Image();\n\n\t\t\t\t\timg.onload = function () {\n\t\t\t\t\t\twindow._imagediff_.hasImage = true;\n\t\t\t\t\t};\n\t\t\t\t\tdocument.getElementById( 'image-diff' ).appendChild( img );\n\t\t\t\t\timg.src = data.getImageDataUrl( label );\n\t\t\t\t}\n\n\t\t\t\tresemble( document.getElementById( 'image-diff-one' ).files[ 0 ] ).\n\t\t\t\tcompareTo( document.getElementById( 'image-diff-two' ).files[ 0 ] ).\n\t\t\t\tignoreAntialiasing(). // <-- muy importante\n\t\t\t\tonComplete( function ( data ) {\n\t\t\t\t\tvar diffImage;\n\t\t\t\t\tvar misMatchPercentage = mismatchTolerance < 0.01 ? data.rawMisMatchPercentage : data.misMatchPercentage;\n\n\t\t\t\t\tif ( Number( misMatchPercentage ) > mismatchTolerance ) {\n\t\t\t\t\t\tresult = misMatchPercentage;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = false;\n\t\t\t\t\t}\n\n\t\t\t\t\twindow._imagediff_.hasResult = true;\n\n\t\t\t\t\tif ( Number( misMatchPercentage ) > mismatchTolerance ) {\n\t\t\t\t\t\trender( data );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t_mismatchTolerance,\n\t\t_resembleOutputSettings\n\t);\n}\n\nfunction _onPass( test ) {\n\tconsole.log( '\\n' );\n\tvar name = 'Should look the same ' + test.filename;\n\tcasper.test.pass(name, {name: name});\n}\n\nfunction _onCaptureFail( ex, target ) {\n\tconsole.log( \"[PhantomCSS] Screenshot capture failed: \" + ex.message );\n\tif (_failOnCaptureError) {\n\t\tvar name = 'Capture screenshot ' + target;\n\t\tcasper.test.fail(name, {name:name, message: 'Failed to capture ' + target + ' - ' + ex.message });\n\t}\n}\n\nfunction _onFail( test ) {\n\tconsole.log('\\n');\n\tvar name = 'Should look the same ' + test.filename;\n\tcasper.test.fail(name, {name:name, message: 'Looks different (' + test.mismatch + '% mismatch) ' + test.failFile });\n}\n\nfunction _onTimeout( test ) {\n\tconsole.log( '\\n' );\n\tcasper.test.info( 'Could not complete image comparison for ' + test.filename );\n}\n\nfunction _onNewImage( test ) {\n\tconsole.log( '\\n' );\n\tcasper.test.info( 'New screenshot at ' + test.filename );\n}\n\nfunction _onComplete( tests, noOfFails, noOfErrors ) {\n\n\tif ( tests.length === 0 ) {\n\t\tconsole.log( \"\\nMust be your first time?\" );\n\t\tconsole.log( \"Some screenshots have been generated in the directory \" + _results );\n\t\tconsole.log( \"This is your 'baseline', check the images manually. If they're wrong, delete the images.\" );\n\t\tconsole.log( \"The next time you run these tests, new screenshots will be taken.  These screenshots will be compared to the original.\" );\n\t\tconsole.log( 'If they are different, PhantomCSS will report a failure.' );\n\t} else {\n\n\t\tif ( noOfFails === 0 ) {\n\t\t\tconsole.log( \"\\nPhantomCSS found \" + tests.length + \" tests, None of them failed. Which is good right?\" );\n\t\t\tconsole.log( \"\\nIf you want to make them fail, change some CSS.\" );\n\t\t} else {\n\t\t\tconsole.log( \"\\nPhantomCSS found \" + tests.length + \" tests, \" + noOfFails + ' of them failed.' );\n\t\t\tif ( _failures ) {\n\t\t\t\tconsole.log( '\\nPhantomCSS has created some images that try to show the difference (in the directory ' + _failures + '). Fuchsia colored pixels indicate a difference betwen the new and old screenshots.' );\n\t\t\t}\n\t\t}\n\n\t\tif ( noOfErrors !== 0 ) {\n\t\t\tconsole.log( \"There were \" + noOfErrors + \"errors.  Is it possible that a baseline image was deleted but not the diff?\" );\n\t\t}\n\n\t\tif ( _cleanupComparisonImages ) {\n\t\t\tfs.removeTree( _results );\n\t\t}\n\n\t\texitStatus = noOfErrors + noOfFails;\n\t}\n}\n\nfunction waitAndHideToCapture( target, fileName, hideSelector, timeToWait ) {\n\tvar srcPath = _fileNameGetter( _src, fileName );\n\tvar resultPath = srcPath.replace( _src, _results );\n\n\tfunction runCapture() {\n\t\tif ( hideSelector || _hideElements ) {\n\t\t\tcasper.evaluate( setVisibilityToHidden, {\n\t\t\t\ts1: _hideElements,\n\t\t\t\ts2: hideSelector\n\t\t\t} );\n\t\t}\n\n\t\tcapture( srcPath, resultPath, target );\n\t}\n\tif(_captureWaitEnabled) {\n\t\tcasper.wait(timeToWait || 250, runCapture); // give a bit of time for all the images appear\n\t} else {\n\t\trunCapture();\n\t}\n}\n\nfunction setVisibilityToHidden( s1, s2 ) {\n\t// executes in browser scope\n\tvar selector;\n\tvar elements;\n\tvar i;\n\n\tvar jQuery = window.jQuery;\n\tif ( jQuery ) {\n\t\tif ( s1 ) {\n\t\t\tjQuery( s1 ).css( 'visibility', 'hidden' );\n\t\t}\n\t\tif ( s2 ) {\n\t\t\tjQuery( s2 ).css( 'visibility', 'hidden' );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Ensure at least an empty string\n\ts1 = s1 || '';\n\ts2 = s2 || '';\n\n\t// Create a combined selector, removing leading/trailing commas\n\tselector = ( s1 + ',' + s2 ).replace( /(^,|,$)/g, '' );\n\telements = document.querySelectorAll( selector );\n\ti = elements.length;\n\n\twhile ( i-- ) {\n\t\telements[ i ].style.visibility = 'hidden';\n\t}\n}\n\nfunction getExitStatus() {\n\treturn exitStatus;\n}\n\nfunction generateRandomString() {\n\treturn ( Math.random() + 1 ).toString( 36 ).substring( 7 );\n}\n"
        },
        {
          "name": "readme_assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "resemblejscontainer.html",
          "type": "blob",
          "size": 0.0947265625,
          "content": "<html><body>This blank HTML page is used for processing the images with Resemble.js</body></html>"
        }
      ]
    }
  ]
}