{
  "metadata": {
    "timestamp": 1736561529825,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sofish/pen",
      "stars": 4806,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0380859375,
          "content": ".idea/\n*.lock\n*.log\nnode_modules\nbuild\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.3974609375,
          "content": "{\n  \"globals\": {\n    \"console\": false\n  },\n  \"bitwise\": true,\n  \"camelcase\": false,\n  \"curly\": false,\n  \"eqeqeq\": true,\n  \"eqnull\": true,\n  \"forin\": true,\n  \"immed\": true,\n  \"indent\": 2,\n  \"latedef\": true,\n  \"laxcomma\": true,\n  \"newcap\": true,\n  \"noarg\": true,\n  \"nonew\": true,\n  \"noempty\": true,\n  \"undef\": true,\n  \"unused\": true,\n  \"strict\": false,\n  \"trailing\": true,\n  \"maxlen\": 200,\n  \"browser\": true\n}"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0791015625,
          "content": "language: node_js\nnode_js:\n  - 0.10\nbefore_script:\n  - npm install -g grunt-cli\n\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 0.71875,
          "content": "/* global module: false */\nmodule.exports = function(grunt) {\n  \"use strict\";\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n\n    jshint: {\n      options: {\n        jshintrc: true\n      },\n      files: ['Gruntfile.js', 'src/**/*.js']\n    },\n\n    uglify: {\n      build: {\n        src: 'src/**/*.js',\n        dest: 'build/pen-<%= pkg.version %>.min.js'\n      }\n    },\n\n    watch: {\n      files: ['<%= jshint.files %>'],\n      tasks: ['jshint']\n    }\n  });\n\n  // Plugins\n  grunt.loadNpmTasks('grunt-contrib-jshint');\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n\n  // Default task(s).\n  grunt.registerTask('default', ['jshint', 'uglify']);\n\n};\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.37890625,
          "content": "{\n  \"name\": \"pen\",\n  \"homepage\": \"https://github.com/sofish/pen\",\n  \"description\": \"enjoy live editing(+markdown)\",\n  \"main\": [\n    \"src/pen.js\",\n    \"src/pen.css\"\n  ],\n  \"keywords\": [\n    \"editor\",\n    \"wysiwyg\",\n    \"markdown\"\n  ],\n  \"authors\": [\n    \"sofish\"\n  ],\n  \"license\": \"MIT\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ]\n}\n"
        },
        {
          "name": "build.md",
          "type": "blob",
          "size": 0.7578125,
          "content": "How to Build\n============\n\nThe following steps should allow you to build this project:\n\n1. Make sure you have the lastest version of Node.js. On Ubuntu, you might\n   need a custom repository:\n\n   ```\n   sudo add-apt-repository ppa:chris-lea/node.js;\n   sudo apt-get update;\n   sudo apt-get install nodejs;\n   sudo apt-get upgrade;\n   ```\n\n2. Next hop into source directory where you cloned this repo. The following\n   commands will install grunt and all the Node dependencies:\n\n   ```\n   cd Wherever_You_Cloned/pen;\n   npm install;\n   sudo npm install -g grunt-cli;\n   ```\n\n3. Finally, you're ready to start a build:\n\n   ```\n   grunt;\n   ```\n\n   While editing a file, you can use `watch` to automatically rebuild every\n   time a file is saved:\n\n   ```\n   grunt watch;\n   ```\n\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 6.3984375,
          "content": "<!doctype html>\n<html lang=\"en-US\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Pen - What You See Is What You Get (WYSIWYG)</title>\n  <style type=\"text/css\">\n    * {\n      padding: 0;\n      margin: 0;\n    }\n\n    html {\n      border-top: 10px #1abf89 solid;\n    }\n\n    body {\n      width: 800px;\n      margin: 0 auto;\n      padding: 5% 20px 20px;\n      font-family: Palatino, Optima, Georgia, serif;\n    }\n\n    @media all and (max-width:1024px) {\n      body,\n      pre a {\n        width: 60%;\n      }\n    }\n\n    small {\n      color: #999;\n    }\n\n    pre {\n      white-space: pre-wrap;\n    }\n\n    #toolbar {\n      margin-bottom: 1em;\n      position: fixed;\n      left: 20px;\n      margin-top: 5px;\n    }\n\n    #toolbar [class^=\"icon-\"]:before,\n    #toolbar [class*=\" icon-\"]:before {\n      font-family: 'pen'\n    }\n\n    #mode {\n      color: #1abf89;\n      ;\n      cursor: pointer;\n    }\n\n    #mode.disabled {\n      color: #666;\n    }\n\n    #mode:before {\n      content: '\\e813';\n    }\n\n    #hinted {\n      color: #1abf89;\n      cursor: pointer;\n    }\n\n    #hinted.disabled {\n      color: #666;\n    }\n\n    #hinted:before {\n      content: '\\e816';\n    }\n\n    #tomd {\n      color: #fff;\n      border-radius: 2px;\n      line-height: 1;\n      padding: 1px 3px 0;\n      font-size: 0.8em;\n      background: #000;\n      cursor: pointer;\n    }\n\n    #fork {\n      position: fixed;\n      right: 0;\n      top: 0;\n    }\n\n    /*\n  When the webpage is printed\n  this media query hides extra elements,\n  and makes the text content fit the page.\n  */\n    @media print {\n      #fork,\n      #toolbar {\n        display: none;\n      }\n      body {\n        width: 94%;\n        padding-top: 1em;\n        font-size: 12px;\n      }\n      html {\n        border-top: 0;\n      }\n    }\n  </style>\n  <link rel=\"stylesheet\" href=\"src/pen.css\" />\n</head>\n\n<body>\n\n  <div id=\"toolbar\">\n    <span id=\"mode\" class=\"icon-mode\"></span>\n    <span id=\"hinted\" class=\"icon-pre disabled\" title=\"Toggle Markdown Hints\"></span>\n    <span id=\"tomd\" title=\"to markdown\">MD</span>\n  </div>\n\n  <!-- <div id=\"custom-toolbar\" class=\"pen-menu pen-menu\" style=\"display: block; top: 20px; left: 10px;\">\n  <i class=\"pen-icon icon-insertimage\" data-action=\"insertimage\"></i>\n  <i class=\"pen-icon icon-blockquote\" data-action=\"blockquote\"></i>\n  <i class=\"pen-icon icon-h2\" data-action=\"h2\"></i>\n  <i class=\"pen-icon icon-h3\" data-action=\"h3\"></i>\n  <i class=\"pen-icon icon-p active\" data-action=\"p\"></i>\n  <i class=\"pen-icon icon-code\" data-action=\"code\"></i>\n  <i class=\"pen-icon icon-insertorderedlist\" data-action=\"insertorderedlist\"></i>\n  <i class=\"pen-icon icon-insertunorderedlist\" data-action=\"insertunorderedlist\"></i>\n  <i class=\"pen-icon icon-inserthorizontalrule\" data-action=\"inserthorizontalrule\"></i>\n  <i class=\"pen-icon icon-indent\" data-action=\"indent\"></i>\n  <i class=\"pen-icon icon-outdent\" data-action=\"outdent\"></i>\n  <i class=\"pen-icon icon-bold\" data-action=\"bold\"></i>\n  <i class=\"pen-icon icon-italic\" data-action=\"italic\"></i>\n  <i class=\"pen-icon icon-underline\" data-action=\"underline\"></i>\n  <i class=\"pen-icon icon-createlink\" data-action=\"createlink\"></i>\n</div> -->\n\n  <div data-toggle=\"pen\" data-placeholder=\"im a placeholder\">\n    <h2>Enjoy live editing (+markdown)</h2>\n\n    <p><b><i>Click anywhere to start editing, select and click items on the popup toolbar to toggle effects.</i></b></p>\n    <hr>\n    <p>Horizontal-Rule can be inserted by click「...」on the toolbar or just type「... 」/「--- 」/「*** 」at the start of a line.\n      Note, the shorthand command should be followed by a SPACE to enable the convert, otherwise, they will just stay what\n      they look like.</p>\n    <p><img src=\"https://files.slack.com/files-pri/T02SY1UGK-F02UKR9HH/61fecdffjw1em2euxugtdg208w06okjm.gif\" alt=\"oh my god\"\n      /></p>\n    <hr>\n    <p>To add a link, please type your URL into the input field and hit <i>ENTER/RETURN</i> key. And, a <a href=\"/sofish\">link</a>\n      can be removed by clearing up the input field.\n\n      <p>\n        <ul>\n          <li>Ordered list and unordered list are supported.</li>\n          <li>Use the toolbar or markdown syntax like「<b>1. </b>」,「<b>- </b>」or「<b>* </b>」</li>\n        </ul>\n        <blockquote>You can quote texts by typing「<b>&gt;</b>」at the start of a line.</blockquote>\n        <p>What about add underline to texts? \"<u>Stay Hungry, Stay Foolish - <i>Steve Jobs</i></u>\".</p>\n        <pre>Code block is also supported by typing 「```」 at the start of a line, don't forget the trailing SPACE.</pre>\n        <p>For more detail, please check out: <a href=\"https://github.com/sofish/pen#readme\" target=\"_blank\">https://github.com/sofish/pen#readme</a>\n        </p>\n  </div>\n\n  <a id=\"fork\" href=\"https://github.com/sofish/pen\" target=\"_blank\"><img src=\"http://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\"\n      alt=\"Fork me on GitHub\"></a>\n\n  <script src=\"src/pen.js\"></script>\n  <script src=\"src/markdown.js\"></script>\n  <script type=\"text/javascript\">\n\n    // config\n    var options = {\n      // toolbar: document.getElementById('custom-toolbar'),\n      editor: document.querySelector('[data-toggle=\"pen\"]'),\n      debug: true,\n      list: [\n        'insertimage', 'blockquote', 'h2', 'h3', 'p', 'code', 'insertorderedlist', 'insertunorderedlist', 'inserthorizontalrule',\n        'indent', 'outdent', 'bold', 'italic', 'underline', 'createlink'\n      ]\n    };\n\n    // create editor\n    var pen = window.pen = new Pen(options);\n\n    pen.focus();\n\n    // toggle editor mode\n    document.querySelector('#mode').addEventListener('click', function () {\n      var text = this.textContent;\n\n      if (this.classList.contains('disabled')) {\n        this.classList.remove('disabled');\n        pen.rebuild();\n      } else {\n        this.classList.add('disabled');\n        pen.destroy();\n      }\n    });\n\n    // export content as markdown\n    document.querySelector('#tomd').addEventListener('click', function () {\n      var text = pen.toMd();\n      document.body.innerHTML = '<a href=\"javascript:location.reload()\">&larr;back to editor</a><br><br><pre>' + text + '</pre>';\n    });\n\n    // toggle editor mode\n    document.querySelector('#hinted').addEventListener('click', function () {\n      var pen = document.querySelector('.pen')\n\n      if (pen.classList.contains('hinted')) {\n        pen.classList.remove('hinted');\n        this.classList.add('disabled');\n      } else {\n        pen.classList.add('hinted');\n        this.classList.remove('disabled');\n      }\n    });\n  </script>\n</body>\n\n</html>"
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 1.0732421875,
          "content": "Pen - enjoy live editing\n\nCopyright (C) 2013 https://github.com/sofish/pen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.671875,
          "content": "{\n  \"name\": \"pen\",\n  \"version\": \"0.0.1\",\n  \"main\": \"src/pen.js\",\n  \"author\": \"sofish <sofish@icloud.com>\",\n  \"description\": \"enjoy live editing (+markdown) http://sofish.github.io/pen\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sofish/pen\"\n  },\n  \"keywords\": [\n    \"editor\",\n    \"markdown\",\n    \"medium\"\n  ],\n  \"license\": {\n    \"type\": \"MIT\",\n    \"url\": \"https://github.com/sofish/pen/blob/master/license.txt\"\n  },\n  \"devDependencies\": {\n    \"grunt\": \"^0.4.5\",\n    \"grunt-contrib-jshint\": \"~0.7.2\",\n    \"grunt-contrib-uglify\": \"~0.2.7\",\n    \"grunt-contrib-watch\": \"~0.5.3\"\n  },\n  \"scripts\": {\n    \"test\": \"grunt --verbose\"\n  },\n  \"readmeFilename\": \"README.md\"\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 5.0263671875,
          "content": "# Pen Editor\n\n- **LIVE DEMO:** [http://sofish.github.io/pen](http://sofish.github.io/pen)\n- **Markdown is supported**\n- **Build status:** [![Build Status](https://travis-ci.org/sofish/pen.png?branch=master)](https://travis-ci.org/sofish/pen)\n\n******************\n\n![pen editor - screenshot ](https://f.cloud.github.com/assets/153183/1093671/61d4c0d2-16a9-11e3-88ed-01b1758a9a42.png)\n\n******************\n\n## 0. source code\n\nYou can clone the source code from github, or using bower.\n\n```\nbower install pen\n```\n\n\n## 1. installation\n\n#### 1.1 init with id attribute\n\n```js\nvar editor = new Pen('#editor');\n```\n\n#### 1.2 init with an element\n\n```js\nvar editor = new Pen(document.getElementById('editor'));\n```\n\n#### 1.3 init with options\n\n```js\nvar options = {\n  editor: document.body, // {DOM Element} [required]\n  class: 'pen', // {String} class of the editor,\n  debug: false, // {Boolean} false by default\n  textarea: '<textarea name=\"content\"></textarea>', // fallback for old browsers\n  list: ['bold', 'italic', 'underline'], // editor menu list\n  linksInNewWindow: true // open hyperlinks in a new windows/tab\n}\n\nvar editor = new Pen(options);\n```\n\n## 2. configure\n\nThe following object sets up the default settings of Pen:\n\n```js\ndefaults = {\n  class: 'pen',\n  debug: false,\n  textarea: '<textarea name=\"content\"></textarea>',\n  list: [\n    'blockquote', 'h2', 'h3', 'p', 'insertorderedlist', 'insertunorderedlist',\n    'indent', 'outdent', 'bold', 'italic', 'underline', 'createlink'\n  ],\n  stay: true,\n  linksInNewWindow: false\n}\n```\n\nIf you want to customize the toolbar to fit your own project, you can instanciate `Pen` constructor with an `options` object like [#1.3: init with options](https://github.com/sofish/pen#13-init-with-options):\n\n#### 2.1 Fallback for old browser\n\nYou can set `defaults.textarea` to a piece of HTML string, by default, it's `<textarea name=\"content\"></textarea>`。This will be set as `innerHTML` of your `#editor`.\n\n#### 2.2 Change the editor class\n\nPen will add `.pen` to your editor by default, if you want to change the class, make sure to replace the class name `pen` to your own in `src/pen.css`.\n\n#### 2.3 Enable debug mode\n\nIf `options.debug` is set to `true`, Pen will output logs to the Console of your browser.\n\n![debugger](https://f.cloud.github.com/assets/153183/1078426/e1d40758-1527-11e3-9a68-12c58225c93c.png)\n\n#### 2.4 Customize the toolbar\n\nYou can set `options.list` to an `Array`, add the following strings to make your own:\n\n- `blockquote`, `h2`, `h3`, `p`, `pre`: create a tag as its literal meaning\n- `insertorderedlist`: create an `ol>li` list\n- `insertunorderedlist`: create a `ul>li` list\n- `indent`: indent list / blockquote block\n- `outdent`: outdent list / blockquote block\n- `bold`: wrap the text selection in a `b` tag\n- `italic`: wrap the text selection in an `i` tag\n- `underline`: wrap the text selection in a `u` tag\n- `createlink`: insert link to the text selection\n- `inserthorizontalrule`: insert a `hr` tag\n- `insertimage`: insert an image (`img`) tag\n\n#### 2.5 Add tooltips to the toolbar icons\n\nYou can set `options.titles` to an object with properties that match the toolbar actions. The value of each property\nwill be used as the title attribute on the icon. Most browsers will display the title attribute as a tooltip when\nthe mouse hovers over the icon.\n\n```js\noptions.title = {\n    'blockquote': 'Blockquote'\n    'createlink': 'Hyperlink'\n    'insertimage': 'Image'\n}\n```\n\nIf you are using Bootstrap or jQueryUI, you can standardize the tooltip style by adding `$('i.pen-icon').tooltip()`\nto your JavaScript.\n\n#### 2.6 Prevent unsafe page redirect\n\nBy default, Pen will prevent unsafe page redirect when editing, to shut down it, specific `options.stay` to `false`.\n\n__NOTE:__ if `defaults.debug` is set to `true` and `default.stay` is not set: `defaults.stay == !defaults.debug`.\n\n#### 2.7 Disable and Re-enable editor\n\nYou can disable the pen editor by call `destroy()` method of the `var pen = new Pen(options)` object. like:\n\n```js\nvar pen = new Pen('#editor');\n\npen.destroy(); // return itself\n```\n\nAnd, there's a corresponding method called `rebuild()` to re-enable the editor:\n\n```js\npen.rebuild(); // return itself\n```\n\n#### 2.8 Export content as markdown\n\nIt's an experimental feature\n\n```js\nvar pen = new Pen('#editor');\n\npen.toMd(); // return a markdown string\n```\n\n\n## 3. markdown syntax support\n\n#### 3.1 install\nThe syntax convertor will be enabled automatically by linking `markdown.js` after `pen.js:\n\n```html\n<script src=\"src/pen.js\"></script>\n<script src=\"src/markdown.js\"></script>\n```\n\n#### 3.2 usage\nTo use it, you can type `action cmd` + `space key` at a line start. like:\n\n```\n### This will create a h3 tag\n```\n\nThe following cmds are allowed:\n\n- Headings: type 1~6 `#` at the line start\n- Unordered List: type `- ` or `* `\n- Ordered List: type `1. `\n- Code block: type **\\`\\`\\`**\n- Block Quote: type `> `\n- Horizontal Rule: more than 3 `-`, `*`, `.` will create a `<hr />`, like `......`\n\n## 4. license\n\nLicensed under MIT.\n\n## 5. trusted by *\n\n[![Teambition](https://dn-project-site.qbox.me/images/logo.png)](https://github.com/teambition)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}