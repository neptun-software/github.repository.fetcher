{
  "metadata": {
    "timestamp": 1736561825248,
    "page": 482,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CreditTone/hooker",
      "stars": 3824,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2685546875,
          "content": ".iml\n*injectXServer.js\n*spider.js\ncom.guazi*\ncom.ganji*\n*.python-version\n*/xinit/*.dex\n*pydevproject\n.DS_Store\nlog\n.*source/.*\ncom.example.myapplication/\n__handlers__/\nbuild/\n__pycache__\n*.jar\n.idea/\n.classpath\n.project\n.settings/\ntarget/\nlogs/\ndata/doc/\ndata/test/\n.vscode/\n"
        },
        {
          "name": ".hooker_driver",
          "type": "blob",
          "size": 0.0029296875,
          "content": "-U\n"
        },
        {
          "name": "JUSTTRUSTME.md",
          "type": "blob",
          "size": 4.650390625,
          "content": "# Twitter实战测试\n\n### 不使用just_trust_me情况下，抓包失败展示\n![抓包失败展示.png-443.6kB][2]\n\n### spawn方式启动just_trust_me.js\n建议任何app都以spawn方式启动just_trust_me.js。不是建议！是必须，因为要在app完成初始化之前hook住所有的hook点，只有spawn模式下才能做到，attach时机太晚了。所以大家明白？\n![启动just_trust_me.gif-2756.5kB][3]\n\n\n\n### 启动just_trust_me.js之后正常抓包展示\n久违的请求出来了！！！看！！！\n![启动just_trust_me之后.gif-2307.9kB][4]\n\n\n# 某头条资讯APP实战测试\n\n### 启动just_trust_me.js\n![WechatIMG417.png-1098.4kB][5]\n\n### 正常抓包展示\n![qutoutiao_result.gif-2120.1kB][6]\n\n\n# 某买菜APP实战测试\n\n### 启动just_trust_me.js\n![WechatIMG420.png-1185.2kB][7]\n\n### 正常抓包展示\n![WechatIMG422.png-763.4kB][8]\n\n\n#### 就是这么的简单粗暴，我们继续......\n\n# 某汽车资讯APP实战测试\n### 启动just_trust_me.js\n![111.png-1099.8kB][9]\n\n### 正常抓包展示\n![222.png-772.2kB][10]\n\n# 某国内免费小说APP实战测试\n### 启动just_trust_me.js\n![333.png-1054.4kB][11]\n\n### 正常抓包展示\n![444.png-678.5kB][12]\n\n# 某宝购物APP\n### 启动just_trust_me.js\n![666.png-1151.4kB][13]\n\n### 正常抓包展示\n![555.png-879.3kB][14]\n\n\n还要测吗？这个frida版本的just_trust_me怎么样？有些okhttp库在编译的时候混淆了，你可以通过[just_trust_me_okhttp_hook_finder.js](https://github.com/CreditTone/hooker/blob/master/js/just_trust_me_okhttp_hook_finder.js)把混淆类找回来。如何使用just_trust_me_okhttp_hook_finder请看《实现frida版的JustTrustMe（三）frida版JustTrustMe升级和混淆对抗》\n\n\n# 再次强调实现frida版JustTrustMe的意义\n\n### 快速使用\n    不用我说了吧，大家上面都看到了。xposed有我frida这么洒脱吗？批量刷机都是问题吧？frida只要你手机root即可，这才叫活好不粘人！！！\n    \n### frida的反检测性比xposed好很多\n    xposed虽然有许多山寨版，在某些方面魔改可以对抗一些检测。但是依然是投入产出比不高，付出了那么多精力结果反检测性并没有实质性的上去。原因是xposed在设计的时候就走错了，等他发现基于替换zygote进程孵化容易被检测的时候已经晚了。所以xposed一直是错着往前！感兴趣的去看我《实现frida版的JustTrustMe（一）JustTrustMe官方源码学习》在开头讲的。\n\n### 对抗混淆\n    我提供了[just_trust_me_okhttp_hook_finder.js](https://github.com/CreditTone/hooker/blob/master/com.twitter.android/just_trust_me_okhttp_hook_finder.js)使你可以快速定位到okhttp[3-4]的混淆点，让你可以快速对每个app进行定制。\n\n### frida可定制性好\n    frida方面你只要会js就可以修改[just_trust_me.js](https://github.com/CreditTone/hooker/blob/master/com.twitter.android/just_trust_me.js)，而xposed要求你至少会基本的java、android开发和熟悉xposed框架api。\n\n# 后记\n没有100%能把所有包都抓住，都要基于每个app的反抓包策略进行一些调整。还有包括双向认证，需要在抓包工具上配置客户端证书、还有要vpn转发的、还有走私有协议的是不能用httpproxy类的抓包工具来抓包的等等吧。但是我会尽最大可能，让大家在操作相对简单的情况下帮大家抓到包。节省大家一点点时间，工具的本质就是提效。懒人出科技就是这样！\n\n\n\n  [1]: http://static.zybuluo.com/1273568669/0gjhwhbgg8yw6nyot1lgsfrw/WechatIMG415.png\n  [2]: http://static.zybuluo.com/1273568669/pakmqbet9bfkthi3tn1420dk/%E6%8A%93%E5%8C%85%E5%A4%B1%E8%B4%A5%E5%B1%95%E7%A4%BA.png\n  [3]: http://static.zybuluo.com/1273568669/ayyj2o1o6m9ndluea7p4uaal/%E5%90%AF%E5%8A%A8just_trust_me.gif\n  [4]: http://static.zybuluo.com/1273568669/vhrma5jzvzjyjtwit99ojxtn/%E5%90%AF%E5%8A%A8just_trust_me%E4%B9%8B%E5%90%8E.gif\n  [5]: http://static.zybuluo.com/1273568669/al811jvk2act05mhvyzpywp8/WechatIMG417.png\n  [6]: http://static.zybuluo.com/1273568669/xufqyh60yjfutidit3bbarf1/qutoutiao_result.gif\n  [7]: http://static.zybuluo.com/1273568669/agierqyhvh78b6vt2m25rs2a/WechatIMG420.png\n  [8]: http://static.zybuluo.com/1273568669/6xy4b84vnch2i1zjbfu5iqiy/WechatIMG422.png\n  [9]: http://static.zybuluo.com/1273568669/pmaug9o12xyaofd6kf7vl6z3/111.png\n  [10]: http://static.zybuluo.com/1273568669/xyf0czutgr1ho2vuxswe5tk9/222.png\n  [11]: http://static.zybuluo.com/1273568669/qvzlycuwjkfil7i0mz7765sh/333.png\n  [12]: http://static.zybuluo.com/1273568669/1e6ykjjfsqf8kr4u7d9jldff/444.png\n  [13]: http://static.zybuluo.com/1273568669/lnikbsd36yq6q8zfw3kp0b5g/666.png\n  [14]: http://static.zybuluo.com/1273568669/pt49hc31pjy8del9ssh9s2iv/555.png"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.0732421875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021, guozhong\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.9365234375,
          "content": "### 欢迎使用hooker逆向工作台\n\nhooker是一个基于frida实现的逆向工具包。为逆向开发人员提供统一化的脚本包管理方式、通杀脚本、自动化生成hook脚本、内存漫游探测activity和service、frida版JustTrustMe。\n\n### 免责声明\n\n本项目的所有内容仅供**学习**与**技术交流**使用，旨在帮助开发者理解移动应用的结构和工作原理。  \n- 本项目**不包含**任何针对特定应用的破解操作或侵权内容。\n- 针对某些app存在的简单解包技术内容在各大技术论坛网站均大量存在，并无对这些app造成实际损害\n- 本项目**无意协助**任何非法用途，包括但不限于绕过版权保护、修改应用功能或获取未经授权的数据。  \n- 请确保在使用本项目工具时**遵守相关法律法规**，并仅用于**个人学习或研究目的**。  \n\n如因滥用本项目导致的法律问题，与项目作者无关。"
        },
        {
          "name": "app注入js解决滑块.md",
          "type": "blob",
          "size": 4.8037109375,
          "content": "## 关于如何对于app中的js调试\n\n### 1.应用场景\n\n我们在爬取数据的过程中难免会碰到的一些`滑块`.而这些滑块web我们可以用我debug大法随意调试模拟他滑动上报提交.很多同学对于嵌入在app在的滑块有时候就束手无策了,这时候我们引入了vconsole进行注入爬取\n\n### 2.使用前提\n\n你必须`web端`调试通过,直接这滑块的js注入点在哪里,如果不知道后续调试难度会增加.\n\n### 3.使用\n\n#### 原理\n\n```python\n1.利用vconsole生成一个终端调试界面\n2.利用拦包工具对于滑块返回的html页面中js外链的引入替换成我们修改后具有埋点打印的内容js,以及HTML最开始部分引入vconsole的js\n```\n\n`实现原理就是如此简单`\n\njs 链接\n\n```Python\nhttps://unpkg.com/vconsole@latest/dist/vconsole.min.js\nhttps://cdn.jsdelivr.net/npm/vconsole@latest/dist/vconsole.min.js\n```\n\n### 4.持久化\n\n有些同学会感觉每次拦包我都要替换太麻烦了有没有什么不用手动替换的自动的\n\n面对这个需求我们还是有的\n\n用到的工具\n\n- [Thor HTTP Sniffer](https://itunes.apple.com/app/id1210562295): HTTP 抓包及断点调试。\n- [vConsole 调试脚本](https://github.com/Tencent/vConsole): A lightweight, extendable front-end developer tool for mobile web page.\n- [Eruda 调试脚本](https://github.com/liriliri/eruda): Console for mobile browsers.\n\n#### 第一步：在 Thor 中设置过滤器断点\n\n##### 1、打开 Thor, 创建一个过滤器，取名为：”WebView 注入调试”，并添加一个断点进入编辑\n\n##### 2、因为需要对 WebView 的响应 HTML 内容进行注入，所以选择在 `请求阶段 > 响应消息体回传前 > 新建匹配规则`\n\n![匹配规则](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/4.jpg)\n\n##### » 选择『响应 body 前』\n\n![响应 body 前](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/8.jpg)\n\n##### 3、在匹配规则中加入表达式进行替换，以注入 vConsole 工具\n\n**因为对 HTML body 标签注入 js 脚本后可能不会总是生效，所以这里选择优先对 title 标签进行替换**\n\n加入判断条件：判断是否包含 title 标签\n\n```\n@rsp.bodyText CONTAINS[cd] \"</title>\"\n```\n\n当有 title 标签时，执行以下表达式\n\n```js\n^@rsp.bodyText \"<\\/title>\" \"</title><script type='text/javascript' src='https://coding.net/u/Tumblr/p/thor-lib/git/raw/master/vconsole/3.2.0/vconsole.min.js'></script><script>new VConsole();</script>\"   \n```\n\n没有 title 标签，则找 body 标签替换\n\n```js\n^@rsp.bodyText \"<\\/body>\" \"<script type='text/javascript' src='https://coding.net/u/Tumblr/p/thor-lib/git/raw/master/vconsole/3.2.0/vconsole.min.js'></script><script>\nnew VConsole();</script></body>\"\n```\n\n- 其中`new VConsole()` 是关键不调用不会生成界面\n- 还有载人方式可以使用chalrs或者fiddler替换js再头部注入\n- *考虑加载速度的原因，没有直接使用 github 上的 vConsole 原地址，而是 dump 了一份到 coding.net 仓库里，所以上面用的是 codeing.net 的脚本地址*\n\n##### » vConsole 注入设置如图\n\n![img](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/7.jpg)\n\n**同理，再新建一个断点，完成 Eruda 工具的注入（其实可以不用两个调试脚本都注入，这里只是演示效果）**\n\n#### 第二步：在 PPHub 中找一个 WebView 界面进行尝试\n\n##### 1、打开 Thor > 选择 “WebView 注入调试” 过滤器，并启动\n\n![img](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/9.jpg)\n\n##### » 启动抓包\n\n![img](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/3.jpg)\n\n##### 2、打开 PPHub\n\n![img](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/2.jpg)\n\n##### » 并找到一个 WebView, 等待加载完成 (直到出现调试工具入口)\n\n![img](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/1.jpg)\n\n##### » vConsole 调试效果\n\n![img](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/6.jpg)\n\n##### » Eruda 调试效果\n\n![img](http://pixelcyber.com/Thor/tips-zh-Hans/bp_res/5.jpg)\n\n### 参考资料 (排名不分先后)\n\n- [JSBox 的网页调试插件](https://itunes.apple.com/app/id1312014438)\n- [三种解密 HTTPS 流量的方法介绍 by Jerry Qu](https://imququ.com/post/how-to-decrypt-https.html)\n- [Content Security Policy Level 2 介绍 by Jerry Qu](https://imququ.com/post/content-security-policy-level-2.html)\n- [eruda - Console for mobile browsers](https://eruda.liriliri.io/)\n- [vConsole by Tencent](https://github.com/Tencent/vConsole)\n\n### Thor 20 天免费试用 TestFlight 申请\n\n1、[Thor 的详细介绍](https://github.com/PixelCyber/Thor/blob/master/README-zh-Hans.md)\n\n2、[TestFlight 申请问卷填写](https://wj.qq.com/s/1607760/e57d)\n\n3、过滤器 “WebView 注入调试” [后期优化版下载](https://github.com/PixelCyber/Thor/raw/master/tips-zh-Hans/bp_res/WebView_debug.f4thor)（下载后直接用 Thor 打开，安装）\n"
        },
        {
          "name": "colorful.py",
          "type": "blob",
          "size": 0.6708984375,
          "content": "'''\nCreated on 2020年6月6日\n\n@author: stephen\n'''\ndef withColor(string, fg, bg=49):\n    print(\"\\33[0m\\33[%d;%dm%s\\33[0m\" % (fg, bg, string))\n#front color\nRed = 1\nGreen = 2\nYellow = 3\nBlue = 4\nMagenta = 5\nCyan = 6\nWhite = 7\n \ndef red(string):\n    return withColor(string, Red+30) # Red\ndef green(string):\n    return withColor(string, Green+30) # Green\ndef yellow(string):\n    return withColor(string, Yellow+30) # Yellow\ndef blue(string):\n    return withColor(string, Blue+30) # Blue\ndef magenta(string):\n    return withColor(string, Magenta+30) # Magenta\ndef cyan(string):\n    return withColor(string, Cyan+30) # Cyan\ndef white(string):\n    return withColor(string, White+30) # White\n"
        },
        {
          "name": "com.blockchainvault",
          "type": "tree",
          "content": null
        },
        {
          "name": "com.google.android.youtube",
          "type": "tree",
          "content": null
        },
        {
          "name": "com.twitter.android",
          "type": "tree",
          "content": null
        },
        {
          "name": "disable_sslpinning.py",
          "type": "blob",
          "size": 0.328125,
          "content": "from objection.state.connection import state_connection\nfrom objection.utils.agent import Agent\n\n\nstate_connection.gadget_name = \"{appPackageName}\"\nstate_connection.agent = Agent()\nstate_connection.agent.inject()\napi = state_connection.get_api()\napi.android_ssl_pinning_disable(False)\n\ninputCommand = input(\"input any word to quit!!!\")\n"
        },
        {
          "name": "hooker",
          "type": "blob",
          "size": 1.75390625,
          "content": "#!/bin/bash\n\nHOOKER_DRIVER=$(cat .hooker_driver)\nwhile :\ndo\n\tfrida-ps $HOOKER_DRIVER -ai | grep -v '@' | grep -v '    -  '\n\techo \"Enter the need to attach package.\"\n    read -p \": \" package\n    if [[ $package = ex ]] || [[ $package = exit ]] || [[ $package = quit ]] || [[ $package = q ]]; then\n\t\tbreak\n\tfi\n\techo \"It's $package that you have attached app.\"\n\tpython3 hooker.py -p $package -g true\n\techo \"--------------------------------------------------\"\n\twhile :\n\tdo\n\t\techo \"Please enter e, s, j, c or ex command.\"\n\t\techo \"a: Discovering activities.\"\n\t\techo \"b: Discovering services.\"\n\t\techo \"c: Discovering object. eg:'c {objectId}'\"\n\t\techo \"d: Object2Explain. eg:'d {objectId}'\"\n\t\techo \"v: Discovering view. eg:'v {viewId}'\"\n\t\techo \"e: Determines whether a class exists. eg:'e android.app.Application'\"\n\t\techo \"s: Discovering classes by a class'regex. eg:'s com.tencent.mm.Message.*'\"\n\t\techo \"t: Discovering offspring classes by a class'name. eg:'t com.tencent.mm.BasicActivity'\"\n\t\techo \"j: Generating hooked js. eg:'j okhttp3.Request\\$Builder:build'\"\n\t\techo \"k: Generating hooked the string generation js with a keyword. eg:'k {YourKeyword}'\"\n\t\techo \"l: Generating hooked the param generation js with a param keyword. eg:'l {YourKeyword}'\"\n\t\techo \"m: Discovering so module.\"\n\t\techo \"ex: Exit to the upper layer. eg:'ex'\"\n\t\tread -p \": \" op\n\t\tif [[ $op = ex ]] || [[ $op = exit ]]; then\n\t\t\tbreak \n\t\tfi\n\t\tif [[ $op = a ]] || [[ $op = b ]]; then\n\t\t\tpython3 hooker.py -p $package -$op true\n\t\t\tcontinue\n\t\tfi\n\t\tif [[ $op =~ ^v ]] || [[ $op =~ ^l ]] || [[ $op =~ ^c ]] || [[ $op =~ ^d ]] || [[ $op =~ ^s ]] || [[ $op =~ ^t ]] || [[ $op =~ ^e ]] || [[ $op =~ ^j ]] || [[ $op =~ ^k ]] || [[ $op =~ ^m ]] ;then\n\t\t\tpython3 hooker.py -p $package -$op\n\t\t\tcontinue\n\t\tfi\n\t\techo \"Wronging command!\"\n\tdone\ndone"
        },
        {
          "name": "hooker.py",
          "type": "blob",
          "size": 14.9951171875,
          "content": "'''\nCreated on 2020年3月23日\n\n@author: stephen\n'''\nimport frida, sys\nimport os\nimport io\nimport re\nimport getopt\nimport traceback\nimport run_env\nimport base64\nimport time\nimport colorful\nimport platform\nfrom run_env import xinitPyScript\n\n\nwarn = colorful.red\ninfo = colorful.yellow\n\ndef readRadarDexfile():\n    f = open(\"radar.dex\",\"rb\")\n    data = f.read()\n    f.close()\n    return data\n\ndef checkRadarDex(packageName, online_script):\n    radarClass = \"gz.radar.ClassRadar\"\n    if online_script.exports.containsclass(radarClass):\n        return\n    data = readRadarDexfile()\n    radarDexPath = '/data/user/0/'+packageName+'/radar.dex';\n    if not online_script.exports.checkfile(radarDexPath, len(data)):\n        radarDexBase64 = base64.b64encode(data).decode()\n        #info(\"update radar.dex......\"+str(len(radarDexBase64)))\n        online_script.exports.write(radarDexPath, radarDexBase64)\n        time.sleep(1)\n    online_script.exports.loaddex('gz.radar.ClassRadar', radarDexPath)\n    if not online_script.exports.containsclass(radarClass):\n        warn(\"injecting radar.dex failure.\")\n\ndef on_message(message, data):\n    pass\n\ndef is_number(s):\n    try:\n        int(s)\n        return True\n    except ValueError:\n        pass\n    try:\n        import unicodedata\n        unicodedata.numeric(s)\n        return True\n    except (TypeError, ValueError):\n        pass\n    return False\n\ndef getPidMap():\n    pidMap = {}\n    lines = os.popen(\"frida-ps -U\").readlines();\n    for line in lines:\n        result = re.search(\"(\\d+)\\s+([a-z\\d\\.]+)($|:)\", line.strip())\n        if not result:\n            continue\n        pidMap[result.group(1)] = result.group(2)\n    return pidMap\n\n#target可以是pid或者packageName    \ndef attach(target):\n    packageName = target\n    if is_number(target):#pid\n        packageName = getPidMap()[target]\n    online_session = None\n    online_script = None\n    rdev = None\n    remoteDriver = run_env.getRemoteDriver() #ip:port\n    try:\n        if remoteDriver:\n            rdev = frida.get_device_manager().add_remote_device(remoteDriver)\n        elif platform.system().find(\"Windows\") != -1:\n            warn(\"推荐使用linux或mac操作系统获得更好的兼容性.\")\n            rdev = frida.get_remote_device()\n        else:\n            rdev = frida.get_usb_device(1000)\n        #print(f\"attach {target}\")\n        if is_number(target):\n            pid = int(target)\n            online_session = frida.core.Session(rdev._impl.attach(pid))\n        else:\n            online_session = rdev.attach(target)\n        if online_session == None:\n            warn(\"attaching fail to \" + target)\n        online_script = online_session.create_script(run_env.rpc_jscode)\n        online_script.on('message', on_message)\n        online_script.load()\n        checkRadarDex(packageName, online_script)\n        createHookingEnverment(packageName, online_script.exports.mainactivity())\n    except Exception:\n        warn(traceback.format_exc())   \n    return online_session,online_script,packageName\n    \n\ndef detach(online_session):\n    if online_session != None:\n        online_session.detach()\n \ndef existsClass(target,className):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.containsclass(className))\n    except Exception:\n        warn(traceback.format_exc())  \n    finally:    \n        detach(online_session)\n\ndef findclasses(target, classRegex):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.findclasses(classRegex));\n    except Exception:\n        warn(traceback.format_exc())  \n    finally:    \n        detach(online_session)\n\ndef findclasses2(target, className):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.findclasses2(className));\n    except Exception:\n        warn(traceback.format_exc())  \n    finally:    \n        detach(online_session)        \n\ndef createFile(filename, text):\n    file = None\n    try:\n        file = open(filename, mode='w+')\n        file.write(text)\n    except Exception:\n        warn(traceback.format_exc())  \n    finally:\n        if file != None:\n            file.close()\n            \ndef onlyCheckHookingEnverment(target):\n    online_session = None\n    try:\n        online_session,_,_ = attach(target);\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n\ndef createHookingEnverment(packageName, mainActivity):\n    if not os.path.exists(packageName):\n        os.makedirs(packageName)\n        os.makedirs(packageName+\"/xinit\")\n        shellPrefix = \"#!/bin/bash\\nHOOKER_DRIVER=$(cat ../.hooker_driver)\\n\"\n        logHooking = shellPrefix + \"echo \\\"hooking $1\\\" > log\\ndate | tee -ai log\\n\" + \"frida $HOOKER_DRIVER -l $1 \" + packageName + \" | tee -ai log\"\n        attach_shell = shellPrefix + \"frida $HOOKER_DRIVER -l $1 \" + packageName\n        spawn_shell = f\"{shellPrefix}\\nfrida $HOOKER_DRIVER --no-pause -f {packageName} -l $1\"\n        xinitPyScript = run_env.xinitPyScript + \"xinitDeploy('\"+packageName+\"')\"\n        spiderPyScript = run_env.spiderPyScript.replace(\"{appPackageName}\", packageName).replace(\"{mainActivity}\", mainActivity) \n        disableSslPinningPyScript = run_env.disableSslPinningPyScript.replace(\"{appPackageName}\", packageName) \n        createFile(packageName+\"/hooking\", logHooking)\n        createFile(packageName+\"/attach\", attach_shell)\n        createFile(packageName+\"/spawn\", spawn_shell)\n        createFile(packageName+\"/xinitdeploy\", xinitPyScript)\n        createFile(packageName+\"/disable_sslpinning\", disableSslPinningPyScript)\n        createFile(packageName+\"/spider.py\", spiderPyScript)\n        createFile(packageName + \"/kill\", shellPrefix + \"frida-kill $HOOKER_DRIVER \"+packageName)\n        createFile(packageName+\"/objection\", shellPrefix + \"objection -d -g \"+packageName+\" explore\")\n        os.popen('chmod 777 ' + packageName +'/hooking').readlines()\n        os.popen('chmod 777 ' + packageName +'/attach').readlines()\n        os.popen('chmod 777 ' + packageName +'/xinitdeploy').readlines()\n        os.popen('chmod 777 ' + packageName +'/disable_sslpinning').readlines()\n        os.popen('chmod 777 ' + packageName +'/kill').readlines()\n        os.popen('chmod 777 ' + packageName +'/objection').readlines()\n        os.popen('chmod 777 ' + packageName +'/spawn').readlines()\n        createFile(packageName + \"/ssl_log.js\", run_env.ssl_log_jscode)\n        createFile(packageName + \"/url.js\", run_env.url_jscode)\n        createFile(packageName + \"/edit_text.js\", run_env.edit_text_jscode)\n        createFile(packageName + \"/text_view.js\", run_env.text_view_jscode)\n        createFile(packageName + \"/click.js\", run_env.click_jscode)\n        createFile(packageName + \"/hook_RN.js\", run_env.hook_RN_jscode)\n        createFile(packageName + \"/keystore_dump.js\", run_env.keystore_dump_jscode)\n        createFile(packageName + \"/dump_dex.js\", run_env.dump_dex_jscode)\n        createFile(packageName + \"/android_ui.js\", run_env.android_ui_jscode.replace(\"com.smile.gifmaker\", packageName))\n        createFile(packageName + \"/activity_events.js\", run_env.activity_events_jscode.replace(\"com.smile.gifmaker\", packageName))\n        createFile(packageName + \"/object_store.js\", run_env.object_store_jscode.replace(\"com.smile.gifmaker\", packageName))\n        createFile(packageName + \"/just_trust_me.js\", run_env.just_trust_me_jscode.replace(\"com.smile.gifmaker\", packageName))\n        createFile(packageName + \"/just_trust_me_okhttp_hook_finder.js\", run_env.just_trust_me_okhttp_hook_finder_jscode.replace(\"com.smile.gifmaker\", packageName))\n\ndef hookJs(target, hookCmdArg, savePath = None):\n    online_session = None\n    online_script = None\n    packageName = None\n    try:\n        ganaretoionJscode = \"\"\n        online_session,online_script,packageName = attach(target);\n        appversion = online_script.exports.appversion();\n        classes = hookCmdArg.split(\",\")\n        for classN in classes:\n            spaceSpatrater = classN.find(\":\")\n            className = classN\n            toSpace = \"*\"\n            if spaceSpatrater > 0:\n                className = classN[:spaceSpatrater]\n                toSpace = classN[spaceSpatrater+1:]\n            jscode = online_script.exports.hookjs(className, toSpace);\n            ganaretoionJscode += (\"\\n//\"+classN+\"\\n\")\n            ganaretoionJscode += jscode\n        \n        if savePath == None:\n            defaultFilename = hookCmdArg.replace(\".\", \"_\").replace(\":\", \"_\").replace(\"$\", \"_\").replace(\"__\", \"_\") + \".js\"\n            savePath = packageName+\"/\"+defaultFilename;\n        else:\n            savePath = packageName+\"/\"+savePath;\n        if len(ganaretoionJscode):\n            ganaretoionJscode = run_env.loadxinit_dexfile_template_jscode.replace(\"{PACKAGENAME}\", packageName) + \"\\n\" + ganaretoionJscode\n            warpExtraInfo = \"//crack by \" + packageName + \" \" + appversion + \"\\n\"\n            warpExtraInfo += \"//\"+hookCmdArg + \"\\n\"\n            warpExtraInfo += run_env.base_jscode\n            warpExtraInfo += ganaretoionJscode\n            createFile(savePath, warpExtraInfo)\n            info(\"Hooking js code have generated. Path is \" + savePath+\".\")\n        else:\n            warn(\"Not found any classes by pattern \"+hookCmdArg+\".\")\n    except Exception:\n        warn(traceback.format_exc())  \n    finally:    \n        detach(online_session)\n        \ndef hookStr(target, keyword):\n    online_session = None\n    packageName = None\n    try:\n        online_session,_,packageName = attach(target);\n        jscode = io.open('./js/string_hooker.js','r',encoding= 'utf8').read()\n        jscode = jscode.replace(\"惊雷\", keyword)\n        savePath = packageName+\"/str_\"+keyword+\".js\";\n        createFile(savePath, jscode)\n        info(\"Hooking js code have generated. Path is \" + savePath+\".\")\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n        \n        \ndef hookParma(target, keyword):\n    online_session = None\n    packageName = None\n    try:\n        online_session,_,packageName = attach(target);\n        jscode = io.open('./js/param_hook.js','r',encoding= 'utf8').read()\n        jscode = jscode.replace(\"NStokensig\", keyword)\n        savePath = packageName+\"/param_\"+keyword+\".js\";\n        createFile(savePath, jscode)\n        info(\"Hooking js code have generated. Path is \" + savePath+\".\")\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n        \n\ndef printActivitys(target):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.activitys())\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n        \ndef printServices(target):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.services())\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n\ndef printObject(target, objectId):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.objectinfo(objectId))\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n        \ndef object2Explain(target, objectId):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.objecttoexplain(objectId))\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n\ndef printView(target, viewId):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        report = online_script.exports.viewinfo(viewId)\n        info(report);\n    except Exception:\n        print(traceback.format_exc())  \n    finally:\n        detach(online_session)\n        \n\n\ndef printModuleName(target, moduleName):\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script,_ = attach(target);\n        info(online_script.exports.so(moduleName))\n    except Exception:\n        print(traceback.format_exc())\n    finally:\n        detach(online_session)\n\nif __name__ == '__main__':\n    try:    \n        opts, args = getopt.getopt(sys.argv[1:], \"hp:x:a:b:c:d:v:s:t:l:e:j:k:l:g:o:m:\",[])\n    except getopt.GetoptError:    \n        sys.exit(2);\n    #这个packageName可以是进程名也可以是进程号\n    packageName = None\n    e = None\n    findclassesClassRegex = None\n    findclasses2ClassName = None\n    JhookLine = None\n    KhookLine = None\n    LhookLine = None\n    genarateEnv = False\n    out = None\n    activity = False\n    service = False\n    objectId = None\n    object2ExplainObjectId = None\n    viewId = None\n    moduleName = False\n    #print(opts)\n    for op, value in opts:    \n        if op in (\"-p\", \"--package\"):\n            packageName = value  \n        elif op in (\"-s\", \"--scan\"):      \n            findclassesClassRegex = value\n        elif op in (\"-t\"):      \n            findclasses2ClassName = value\n        elif op in (\"-e\", \"--exist\"):       \n            e = value\n        elif op in (\"-j\", \"--hookjs\"):     \n            JhookLine = value\n        elif op in (\"-k\", \"--hookstr\"):     \n            KhookLine = value\n        elif op in (\"-l\"):     \n            LhookLine = value\n        elif op in (\"-g\"):     \n            genarateEnv = True;\n        elif op in (\"-o\", \"--out\"):\n            out = value;\n        elif op in (\"-a\"):\n            activity = True;\n        elif op in (\"-b\"):\n            service = True;\n        elif op in (\"-c\"):\n            objectId = value;\n        elif op in (\"-d\"):\n            object2ExplainObjectId = value;\n        elif op in (\"-v\"):\n            viewId = value;\n        elif op in (\"-m\"):\n            moduleName = value;\n    if packageName == None:\n        warn(\"packageName is none\")\n        sys.exit(2);\n    \n    #初始化应用目录\n    if genarateEnv and packageName:\n        run_env.init(packageName)\n        onlyCheckHookingEnverment(packageName)\n    \n    if e != None:\n        existsClass(packageName, e)\n    elif findclassesClassRegex:\n        findclasses(packageName, findclassesClassRegex)\n    elif findclasses2ClassName:\n        findclasses2(packageName, findclasses2ClassName)\n    elif JhookLine:\n        hookJs(packageName, JhookLine, out)\n    elif KhookLine != None:\n        hookStr(packageName, KhookLine)\n    elif LhookLine != None:\n        hookParma(packageName, LhookLine)\n    elif activity:\n        printActivitys(packageName)\n    elif service:\n        printServices(packageName)\n    elif objectId:\n        printObject(packageName, objectId)\n    elif object2ExplainObjectId:\n        object2Explain(packageName, object2ExplainObjectId)\n    elif viewId:\n        printView(packageName, viewId)\n    elif moduleName:\n        printModuleName(packageName, moduleName)\n    elif not genarateEnv:\n        warn(opts)\n        sys.exit(2);\n    \n"
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "mobile-deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "radar.dex",
          "type": "blob",
          "size": 903.51171875,
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.4521484375,
          "content": "certifi==2020.12.5\nchardet==4.0.0\ncli-helpers==2.1.0\nclick==7.1.2\ncolorama==0.4.4\nconfigobj==5.0.6\ndelegator.py==0.1.1\nFlask==1.1.2\nfrida==14.2.2\nfrida-tools==9.1.0\nidna==2.10\nitsdangerous==1.1.0\nJinja2==2.11.3\nlitecli==1.5.0\nMarkupSafe==1.1.1\nobjection==1.9.6\npexpect==4.8.0\nprompt-toolkit==3.0.16\nptyprocess==0.7.0\nPygments==2.8.0\nrequests==2.25.1\nsix==1.15.0\nsqlparse==0.4.1\ntabulate==0.8.9\nterminaltables==3.1.0\nurllib3==1.26.5\nwcwidth==0.2.5\nWerkzeug==1.0.1\n"
        },
        {
          "name": "run_env.py",
          "type": "blob",
          "size": 2.953125,
          "content": "'''\nCreated on 2020年4月20日\n\n@author: stephen\n'''\n\nimport io\nimport os\nimport re\n\ndef readJs(filename):\n    return io.open('./js/' + filename,'r',encoding= 'utf8').read()\n\ndef readFile(filename):\n    return io.open(filename,'r',encoding= 'utf8').read()\n\nbase_jscode = readJs(\"base.js\")\n\nloadxinit_dexfile_template_jscode = \"\"\"\n\nvar loadedXRadar = false;\n\nfunction loadXinitDexfile(dexfile) {\n    loadDexfile('/data/user/0/{PACKAGENAME}/xinit/'+dexfile);\n};\n\nfunction loadXRadarDexfile() {\n    loadedXRadar = true;\n    loadDexfile('/data/user/0/{PACKAGENAME}/radar.dex');\n};\n\nfunction fastTojson(javaObject) {\n    var JSONClz = Java.use(\"gz.com.alibaba.fastjson.JSON\");\n    return JSONClz.toJSONString(javaObject);\n};\n\nfunction getPrettyString(javaObject) {\n    var XPretty = Java.use(\"gz.util.XPretty\");\n    return XPretty.getPrettyString(javaObject);\n};\n\nfunction xPretty(javaObject) {\n    var str = getPrettyString(javaObject);\n    console.log(str);\n};\n\nfunction getField(javaObject, fieldName) {\n    var X = Java.use(\"gz.util.X\");\n    return X.getField(javaObject, fieldName);\n};\n\nfunction storeObjectAndLog(javaObject) {\n    try {\n        var className = getClassName(javaObject);\n        var ObjectsStore = Java.use(\"gz.radar.objects.ObjectsStore\");\n        var objectId = ObjectsStore.storeObject(javaObject);\n        console.log(className + \" ObjectsStoreId: \" +objectId);\n    } catch (error) {\n        console.error(\"你传的不是一个有效的java对象!\");\n    }\n};\n\n\"\"\"\n\nradar_jscode = readJs(\"radar.js\")\n\njsfmt_jscode = readJs(\"jsfmt.js\")\n\nstring_hooker_jscode = readJs(\"string_hooker.js\")\n\nrpc_jscode = base_jscode + radar_jscode + jsfmt_jscode + readJs(\"rpc.js\")\n\nurl_jscode = readJs(\"url.js\")\n\nandroid_ui_jscode = readJs(\"android_ui.js\")\n\nedit_text_jscode = readJs(\"edit_text.js\")\n\ntext_view_jscode = readJs(\"text_view.js\")\n\nclick_jscode = readJs(\"click.js\")\n\nactivity_events_jscode = readJs(\"activity_events.js\")\n\nobject_store_jscode = readJs(\"object_store.js\")\n\nkeystore_dump_jscode = readJs(\"keystore_dump.js\")\n\nssl_log_jscode = readJs(\"ssl_log.js\")\n\njust_trust_me_jscode = readJs(\"just_trust_me.js\")\n\njust_trust_me_okhttp_hook_finder_jscode = readJs(\"just_trust_me_okhttp_hook_finder.js\")\n\nhook_RN_jscode = readJs(\"hook_RN.js\")\n\ndump_dex_jscode = readJs(\"dump_dex.js\")\n\ndef getPythonLaucher():\n    pythonLaucher = os.environ.get(\"__PYVENV_LAUNCHER__\")\n    if not pythonLaucher:\n        pythonLaucher = os.environ.get(\"_\", \"/usr/bin/python3\")\n    return pythonLaucher\n        \n\nxinitPyScript = \"#! \" + getPythonLaucher() + \"\\n\\n\" + readFile(\"xinitdeploy.py\")\ndisableSslPinningPyScript = \"#! \" + getPythonLaucher() + \"\\n\\n\" + readFile(\"disable_sslpinning.py\")\nspiderPyScript = readFile(\"spider.py\")\n\ndef getRemoteDriver():\n    text = readFile(\".hooker_driver\")\n    if not text:\n        return None\n    searchResult = re.search('\\d+\\.\\d+\\.\\d+\\.\\d+:\\d+', text)\n    if searchResult:\n        return searchResult.group()\n    return None\n\ndef init(packageName):\n    if packageName == None:\n        return\n\n"
        },
        {
          "name": "spider.py",
          "type": "blob",
          "size": 2.5009765625,
          "content": "import frida\nimport os\nimport io\nimport traceback\nimport time\n\ndef withColor(string, fg, bg=49):\n    print(\"\\33[0m\\33[%d;%dm%s\\33[0m\" % (fg, bg, string))\n    \nRed = 1\nGreen = 2\nYellow = 3\nBlue = 4\nMagenta = 5\nCyan = 6\nWhite = 7\n \ndef red(string):\n    return withColor(string, Red+30) # Red\ndef yellow(string):\n    return withColor(string, Yellow+30) # Yellow\n\nwarn = red\ninfo = yellow\n\njscode = io.open('wxspider.js', 'r', encoding= 'utf8').read()\n\njscode += \"\"\"\nrpc.exports = {\n    log: function(str) {\n        console.log(str);\n    },\n};\n\"\"\"\n\ndef runCommand(cmd):\n    print(cmd);\n    lines = os.popen(cmd).readlines();\n    for line in lines:\n        print(line.strip());\n\ndef on_message(message, data):\n    pass\n\ndef attach(packageName, hookerDriverFridaServer, runningTime):\n    hasException = False\n    online_session = None\n    online_script = None\n    try:\n        rdev = frida.get_device_manager().add_remote_device(hookerDriverFridaServer)\n        online_session = rdev.attach(packageName)\n        if online_session == None:\n            warn(\"attaching fail to \" + packageName)\n        online_script = online_session.create_script(jscode)\n        online_script.on('message', on_message)\n        online_script.load()\n        for i in range(1, runningTime):\n            if i % 2 == 0:\n                online_script.exports.log(mobileIP + \" spider has running been \" + str(i) + \" seconds.\");\n            time.sleep(1)\n    except Exception:\n        hasException = True\n        warn(traceback.format_exc())\n    finally:\n        if online_session != None and hasException == False:\n            online_session.detach()\n    return online_session,online_script\n    \ndef restartApp(packageName, mobileIP, adb):\n    try:\n        runCommand(adb + \" connect \"+mobileIP);\n        time.sleep(3)\n        runCommand(adb + \" -s \"+mobileIP+\" shell am force-stop \" + appPackageName);\n        time.sleep(5)\n        runCommand(adb + \" -s \"+mobileIP+\" shell am start \" + appPackageName + \"/\" + mainActivity);\n        time.sleep(20)\n        runCommand(adb + \" disconnect \"+mobileIP);\n    except Exception:\n        warn(traceback.format_exc())\n    \nappPackageName = \"com.tencent.mm\"\nmainActivity = \"com.tencent.mm.ui.LauncherUI\"\n#手机ip\nmobileIP = \"192.168.0.102\"\n#重启周期 秒\nrunningTime = 3600\n\nadb=\"adb\"\n\nwhile True:\n    restartApp(appPackageName, mobileIP, adb)\n    print(\"inject spider.js\");\n    print(jscode);\n    attach(appPackageName, mobileIP + \":27042\", runningTime)\n    print(\"restarting spider.\", appPackageName, mainActivity, mobileIP, runningTime)\n    \n    "
        },
        {
          "name": "tea.yaml",
          "type": "blob",
          "size": 0.123046875,
          "content": "# https://tea.xyz/what-is-this-file\n---\nversion: 1.0.0\ncodeOwners:\n  - '0xA5fC5cAF2Fe53ACBEB717d7fB20a682D8bcC9DFf'\nquorum: 1\n"
        },
        {
          "name": "traceJNI",
          "type": "blob",
          "size": 0.0771484375,
          "content": "#!/bin/bash\n\n#./traceJNI com.ss.android.ugc.aweme\nfrida-trace -U -i \"Java_*\" $1"
        },
        {
          "name": "xinitdeploy.py",
          "type": "blob",
          "size": 5.3193359375,
          "content": "import frida\nimport os\nimport io\nimport traceback\nimport base64\nimport platform\n\ndef withColor(string, fg, bg=49):\n    print(\"\\33[0m\\33[%d;%dm%s\\33[0m\" % (fg, bg, string))\n    \nRed = 1\nGreen = 2\nYellow = 3\nBlue = 4\nMagenta = 5\nCyan = 6\nWhite = 7\n \ndef red(string):\n    return withColor(string, Red+30) # Red\ndef yellow(string):\n    return withColor(string, Yellow+30) # Yellow\n\nwarn = red\ninfo = yellow\n\nrpc_jscode = \"\"\"\nfunction mkdirs(dirpath) {\n    var FileClz = Java.use(\"java.io.File\");\n    var file = FileClz.$new(dirpath);\n    if (!file.exists()) {\n        file.mkdirs();\n    }\n}\n\nfunction writeFileAsBase64Content(filepath, base64) {\n    try {\n        var FileUtilsClz = Java.use(\"android.os.FileUtils\");\n        var StringClz = Java.use('java.lang.String');\n        var Base64Clz = Java.use(\"android.util.Base64\");\n        var ByteArrayInputStreamClz = Java.use(\"java.io.ByteArrayInputStream\");\n        var FileOutputStreamClz = Java.use(\"java.io.FileOutputStream\");\n        var FileClz = Java.use(\"java.io.File\");\n        var distFilepath = FileClz.$new(filepath);\n        mkdirs(distFilepath.getParent());\n        var javaBase64String = StringClz.$new(base64);\n        var getBytesMehtod = StringClz.getBytes.overload('java.lang.String');\n        var bytes = getBytesMehtod.call(javaBase64String, 'UTF-8');\n        var decodeMethod = Base64Clz.decode.overload('[B', 'int');\n        var originalBinary = decodeMethod.call(Base64Clz, bytes, 0);\n        var bais = ByteArrayInputStreamClz.$new(originalBinary);\n        if (FileUtilsClz.copy) {\n            var copyMehtod = FileUtilsClz.copy.overload('java.io.InputStream', 'java.io.OutputStream');\n            var fos = FileOutputStreamClz.$new(distFilepath);\n            copyMehtod.call(FileUtilsClz, bais, fos);\n        } else if (FileUtilsClz.copyToFile) {\n            var copyMehtod = FileUtilsClz.copyToFile.overload('java.io.InputStream', 'java.io.File');\n            copyMehtod.call(FileUtilsClz, bais, distFilepath);\n        }\n    } catch(err) {\n        console.warn(err);\n    }\n};\n\nfunction checkFile(filepath, checkLength) {\n    var FileClz = Java.use(\"java.io.File\");\n    var file = FileClz.$new(filepath);\n    return file.exists() && file.length() == checkLength;\n};\n\nrpc.exports = {\n    write: function(filename, contentAsBase64) {\n        Java.perform(function() {\n            //console.log(contentAsBase64);\n            writeFileAsBase64Content(filename, contentAsBase64);\n        });\n    },\n    checkfile: function(filename, filelength) {\n        var ret = false;\n        Java.perform(function() {\n            ret = checkFile(filename, filelength);\n        });\n        return ret;\n    },\n};\n\n\"\"\"\n\ndef getHookerDriverHost():\n    try:\n        hookerDriver = io.open('../.hooker_driver', 'r', encoding= 'utf8').read()\n        hookerDriver = hookerDriver.replace(\"-H\", \"\").strip()\n        return hookerDriver\n    except Exception:\n        return \"-U\"\n\nclass XinitFile:\n    def __init__(self, filename, filepath):\n        self.filename = filename\n        self.filepath = filepath\n\n    def fileData(self):\n        fopen = open(self.filepath,\"rb\")\n        data = fopen.read()\n        fopen.close()\n        return data\n    \ndef readXinitFiles():\n    xinitFiles = []\n    if not os.path.exists(\"./xinit\"):\n        return xinitFiles\n    allFiles = os.listdir(\"./xinit\")\n    for filename in allFiles:\n        filepath = \"./xinit/\" + filename\n        if os.path.isdir(filepath):\n            continue\n        xinitFile = XinitFile(filename, filepath)\n        xinitFiles.append(xinitFile)\n    return xinitFiles\n\ndef on_message(message, data):\n    pass\n\ndef attach(packageName):\n    online_session = None\n    online_script = None\n    hookerDriver = getHookerDriverHost()\n    try:\n        if hookerDriver != \"-U\":\n            rdev = frida.get_device_manager().add_remote_device(hookerDriver)\n        elif platform.system().find(\"Windows\") != -1:\n            warn(\"推荐使用linux或mac操作系统获得更好的兼容性.\")\n            rdev = frida.get_remote_device()\n        else:\n            rdev = frida.get_usb_device(1000)\n        online_session = rdev.attach(packageName)\n        if online_session == None:\n            warn(\"attaching fail to \" + packageName)\n        online_script = online_session.create_script(rpc_jscode)\n        online_script.on('message', on_message)\n        online_script.load()\n    except Exception:\n        warn(traceback.format_exc())   \n    return online_session,online_script\n    \n\ndef detach(online_session):\n    if online_session != None:\n        online_session.detach()\n \n\ndef xinitDeploy(packageName):\n    xinitFiles = readXinitFiles()\n    if xinitFiles == None or len(xinitFiles) == 0:\n        warn(\"deploying aborted. because not found any file in the path xinit.\")\n        return\n    online_session = None\n    online_script = None\n    try:\n        online_session,online_script = attach(packageName);\n        for xinitFile in xinitFiles:\n            dataBase64 = base64.b64encode(xinitFile.fileData()).decode()\n            distPath = \"/data/user/0/\" + packageName + \"/xinit/\" + xinitFile.filename\n            info(\"copying \" + xinitFile.filename + \" to that path \" + distPath + \".\")\n            online_script.exports.write(distPath, dataBase64)\n        info(\"deploying xinit finished.\")\n    except Exception:\n        warn(\"deploying xinit failure.\")\n        warn(traceback.format_exc())  \n    finally:    \n        detach(online_session)\n        \n"
        }
      ]
    }
  ]
}