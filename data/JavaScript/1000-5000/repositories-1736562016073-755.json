{
  "metadata": {
    "timestamp": 1736562016073,
    "page": 755,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "its-a-feature/Mythic",
      "stars": 3369,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3349609375,
          "content": "__pycache__/\n*.py[cod]\n# Sphinx documentation\ndocs/_build/\n# Environments\n.env\ntmp\nsaved_images/\n.venv\n*.swp\nmythic_server\ndocker-compose.yml\n.ipynb_checkpoints/\nenv/\nvenv/\nENV/\nmythic-cli\n.DS_Store\n[0-9a-zA-Z]*-[0-9a-zA-Z]*-[0-9a-zA-Z]*-[0-9a-zA-Z]*-[0-9a-zA-Z]*\n*.svg\nenv.bak/\nvenv.bak/\n# pycharm\n.idea/\n# ssl certs\nssl/\n# Mythic files\nnginx-docker/config/blockips.conf\nmythic-docker/src/Mythic\nmythic_access.*\nmythic_sync/\npostgres-docker/database/\nrabbitmq-docker/storage/\nC2_profiles/\nPayload_Types/\nInstalledServices/\nDocker_Templates/\ndocumentation-docker/content/\ndocumentation-docker/public/\ndisplay_output.txt\nfull_attack.json\nnginx-docker/config/conf.d/services.conf\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# vscode\n.vscode/\n\njupyter-docker/jupyter/MythicExamples/.ipynb_checkpoints/\n\nnginx-docker/config/blockips.conf\n"
        },
        {
          "name": "CHANGELOG.MD",
          "type": "blob",
          "size": 55.25390625,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [3.3.1-rc35] - 2024-12-28\n\n### Changed\n\n- Added a check in file download to return error if chunk num > 0 and no chunk data present\n\n## [3.3.1-rc34] - 2024-12-23\n\n### Changed\n\n- Added the option to tag callbacks with specific colors via the UI\n- Added another database field for future use to allow triggering on delayed callback checkins\n- Added another database field for future use to track specific versions of payloadtypes installed\n\n## [3.3.1-rc33] - 2024-12-17\n\n### Changed\n\n- Updated the login / refresh process to return the current UTC timestamp\n  - this is used in the UI to try to prevent clock skew on callback times\n  \n## [3.3.1-rc32] - 2024-12-14\n\n### Changed\n\n- Updated MythicRPCCallbackSearch to specify a list of payload types\n- Updated MythicRPCCallbackAddCommand and MythicRPCCallbackRemoveCommand to take in a list of callback ids\n\n## [3.3.1-rc31] - 2024-12-13\n\n### Changed\n\n- Added an optional flag for payloads syncing to not retrigger the container's on_start functionality\n\n## [3.3.1-rc30] - 2024-12-12\n\n### Changed\n\n- Fixed an issue where dynamic query functions for command augmentation commands would go to the base agent instead of the right augmentation container\n\n## [3.3.1-rc29] - 2024-12-10\n\n### Changed\n\n- Updated the processing for agent messages to minimize memory bloat\n  - Updated file download process to cache filemeta information and open file descriptors to minimize disk/database access\n  - Updated agent response processing to cache task data for one update instead of per-response\n- Updated MythicRPCResponseCreate to also touch the timestamp of the corresponding task to update the UI streaming\n\n## [3.3.1-rc28] - 2024-11-26\n\n### Changed\n- Updated the command_augment injection process to use suggested_commands as well as builtin commands\n  - one of these two attributes needs to be set to true on the command augment's command for it to be automatically injected into new callbacks\n  - this is in conjunction with matching OS requirements and matching the command augment's supported payload types (if specified)\n  \n## [3.3.1-rc27] - 2024-11-26\n\n### Changed\n\n- Added more functionality to invite links\n  - you can now specify a specific operation and role to assign the new operator to\n  - you can now specify (and change) the maximum number of usages that the invite link has\n- Updated mythic-cli to properly pass in the environment's mythic_server_allow_invite_links setting\n\n## [3.3.1-rc26]\n\n### Changed\n\n- Updated the automated payload creation process to associate a task_id with the payload\n- Execute a container's OnStart method after a file has been removed/edited/created via the UI\n- Added new parameter to the create_go_tasking response, ReprocessAtNewCommandPayloadType\n  - this allows you to set the response.CommandName to some other command and response.ReprocessAtNewCommandPayloadType to the same or different payload type\n  - execution will then pass to that payload type's create_go_tasking for the new `CommandName` .\n  - This allows execution chains to happen for processing\n- Added two more parameters to the MythicRPCCallbackAddCommand and MythicRPCCallbackRemoveCommand functions\n  - AgentCallbackID - allows you to add to callback based on AgentCallbackID (UUID) instead of by TaskID\n  - PayloadType - allows you to specify the payload type associated with the commands if they different than the payload type for the callback itself\n    - This is helpful for command augment containers that want to register additional augment commands\n- Using the UI to add/remove/update files in a container will re-rigger the container's onStart function\n  - This allows containers to reprocess data as needed if it changes on disk\n\n## [3.3.1-rc25] - 2024-11-18\n\n### Changed\n\n- Updated how file hosting works for C2 profiles \n  - When syncing to Mythic, C2 profiles get updated file hosting based on existing FileHosted tags in Mythic\n  - When stopping file hosting, Mythic ensures that the C2 profile successfully processed the request before updating the corresponding Tag\n  \n## [3.3.1-rc24] - 2024-11-18\n\n### Changed\n\n- Fixed a bug with onStart messages getting the wrong value for temporary APITokens\n- Increased the timeouts for gRPC messages from 1s to 10s\n\n## [3.3.1-rc23] - 2024-11-14\n\n### Changed\n\n- Added a new field to file browser responses, `set_as_user_output` (bool) to indicate that this structured data should be turned into JSON and set as user_output data by Mythic\n  - This allows agents to send file browser data once, but get it counted for both the file browser and user_output\n- Added endpoints to leverage/set user preferences\n\n## [3.3.1-rc22] -2024-11-6\n\n### Changed\n\n- Payload Search wasn't properly filtering on filename or description\n- Added an update to make sure that the payload is not deleted and the build phase was a success too\n\n## [3.3.1-rc21] - 2024-11-5\n\n### Changed\n\n- Fixed an issue where bot accounts were considered as operators for opsec checks\n\n## [3.3.1-rc20] - 2024-11-5\n\n### Changed\n\n- Fixed an issue where some Numbers were getting saved as scientific notation floats\n- Temporary update where Wrappers can identify payloads to wrap, not just payloads identifying the wrappers\n  - This currently is only additive\n  \n## [3.3.1-rc19] - 2024-11-1\n\n### Changed\n\n- Updated the file download process to only add to the file browser if data is not a screenshot\n\n## [3.3.1-rc18] - 2024-10-28\n\n### Changed\n\n- Updated the `update_deleted` code for process listings to not filter on callback, but on callback groups\n  - this should fix a bug where processes weren't getting marked as deleted even though they should be\n  \n## [3.3.1.-rc17] - 2024-10-18\n\n### Changed\n\n- Updated the file delete call to invalidate existing cached info to prevent new callbacks\n\n## [3.3.1-rc16] - 2024-10-14\n\n### Changed\n\n- Updated file uploads to better track the same file uploads across multiple callbacks\n- Updated file download message for files hosted through C2 Profiles to be more descriptive\n- Added support for operation banner_text and banner_color\n- Reworked C2 Profile status updates so they can be more async and C2 profiles can opt for their own restarts\n  - Removed unnecessary C2 Profile restarts when checking configurations and building payloads\n  - C2 Profile Functions can now set a field for RestartInternalServer to ask Mythic to restart it for them\n- Updated payload build to go on in background instead of blocking build API call\n- Updated CommandAugment commands to only autoload builtin and suggested commands to new callbacks\n- Added Username/Password auth options for SOCKS ports\n- Added support for UDP Associate\n  - Agents need to inspect first packet for new server_id to see if it's \\x00\\x00 (UDP) or \\x05 (TCP)\n\n## [3.3.1-rc15] - 2024-09-27\n\n### Changed\n\n- Updated the proxy stop through the UI to be more precise instead of stopping all proxies based on callback id, port, and port type\n  - It didn't account for variations in remote ip/port combinations\n  \n## [3.3.1-rc14] - 2024-09-25\n\n### Changed\n\n- Added some checks for port byte tracking max sizes and file max sizes to not hit postgres limits\n\n## [3.3.1-rc12] - 2024-09-23\n\n### Changed\n\n- Added a missing struct tag for GraphEdges that was breaking the MythicRPCCallbackGraphEdgeSearch call\n\n## [3.3.1-rc11] - 2024-09-23\n\n### Changed\n\n- Updated callback last checkin time update process to not background jobs, hopefully preventing deadlock in some situations\n\n## [3.3.1-rc9] - 2024-09-17\n\n### Changed\n\n- Changed the order of initializing the database so that migrations happen before initializing operators/operations\n\n## [3.3.1-rc8] - 2024-09-13\n\n### Changed\n\n- Added more verbose error messages on connections to include user agent and full URL + Query paths\n  - Requires latest `http` and `websocket` profiles to forward the necessary headers\n- Added more context for GraphQL queries used by APITokens/Scripting to the event log\n- Fixed a bug with exporting saved c2 profile instances that would then break imports\n\n## [3.3.1-rc7] - 2024-09-09\n\n### Changed\n\n- Updated some of the logging for bad messages to be clearer\n\n## [3.3.1-rc6] - 2024-09-04\n\n### Changed\n\n- Added new tag for FileHosted to indicate and track that a file was hosted through a C2 Profile\n- Updated the file download process to check if there's an alert notification requested as part of FileHosting and sends the alert\n- Updated MythicRPCCallbackEncrypt and MythicRPCCallbackDecrypt to support Payload/Staging UUIDs and C2Profile information\n\n## [3.3.1-rc5] - 2024-09-02\n\n### Changed\n\n- Updated file downloads so that you can send the first chunk along with the file registration to cut down on a round trip\n  - along with `total_chunks` you can send `chunk_data` and `chunk_num` like normal for the first chunk\n  \n## [3.3.1-rc4] - 2024-09-02\n\n### Changed\n\n- Fixed a bug in file search that wouldn't return results if you didn't specify a limit\n\n## [3.3.1-rc3] - 2024-08-30\n\n### Changed\n\n- Fixed the file search to better account for search limits and workflow files\n- Updated the processing step output fields to allow more flexibility\n\n## [3.3.1-rc2] - 2024-08-30\n\n### Changed\n\n- Fixed a bug where all callbacks would have their last checkin reset when restarting Mythic\n\n## [3.3.1-rc1] - 2024-08-28\n\n### Changed\n\n- Fixed an issue where sometimes the 'success' flag for file browser objects would get reset\n\n## [3.3.0-rc23] - 2024-08-27\n\n### Changed\n\n- Added additional checks for eventing\n\n## [3.3.0-rc22]\n\n### Changed\n\n- Updated the delegates responses to get added without the get_delegate_tasking check\n\n## [3.3.0-rc20] - 2024-08-23\n\n### Changed\n\n- Updated the delegate checks for socks/rpfwd/interactive messages to only send delegates if there's data\n- Updated interactive tasking to set processed and processing timestamps more consistently\n- Updated file download processing to allow -1 total chunks so agents with unknown chunks can start downloads\n\n## [3.3.0-rc19] - 2024-08-21\n\n### Changed\n\n- Added a new limit_credentials_by_type option to Command Parameters to reduce noise in the UI when using CredentialJson parameter types\n\n## [3.3.0-rc18] - 2024-08-08\n\n### Changed\n\n- fixed a bug where updating timestamp of linked agents wouldn't unhide it\n\n## [3.3.0-rc17] - 2024-08-07\n\n### Changed\n\n- Added context to filePreview graphql queries\n\n## [3.3.0-rc16] - 2024-08-06\n\n### Changed\n\n- Updated the last checkin time for linked agents to match that of the egress agent\n  - this includes matching \"Streaming Now\" displays\n  \n## [3.3.0-rc15] - 2024-08-05\n\n### Changed\n\n- Updated the login function to return the user's utc time preference\n- Added button to show/hide deleted consuming containers\n- Shortened the dial time for rpfwd connections to 5s instead of 30s\n\n## [3.3.0-rc13] - 2024-08-05\n\n### Changed\n\n- Added option for `id` return value from create_task eventing\n\n## [3.3.0-rc12] - 2024-08-02\n\n### Changed\n\n- Updated the logic when downloading files to also update the timestamp on the mythictree entries so that the data is streamed to the UI properly\n\n## [3.3.0-rc11] - 2024-08-01 \n\n### Changed\n\n- Updated the opsec pre and create task response handles to mirror stderr messages to task output so it's easier for operators to see what's wrong\n\n## [3.3.0-rc9] - 2024-07-29\n\n### Changed\n\n- Many UI Updates check out [UI Fixes](/MythicReactUI/CHANGELOG.MD) for 2.0.8\n- \n## [3.3.0-rc7] - 2024-07-29\n\n### Changed\n\n- Many UI Updates check out [UI Fixes](/MythicReactUI/CHANGELOG.MD) for 2.0.6\n\n## [3.3.0-rc6] - 2024-07-29\n\n### Changed\n\n- Fixed a Docker copy with postgres based on https://github.com/its-a-feature/Mythic/issues/393 when use_volume is true\n\n## [3.3.0-rc5] - 2024-07-29\n\n### Changed\n\n- Many UI updates check out [UI Fixes](/MythicReactUI/CHANGELOG.MD) for 2.0.4\n\n## [3.3.0-rc2] - 2024-07-11\n\n### Changed\n\n- Updated eventing tasks to properly address when tasks fail and continue on with the eventing steps\n- Updated the LimitByCallback field when searching for files to also account of a fileID was used in a task in a callback\n  - this helps with files that might be uploaded as part of workflows, but still loaded into callbacks\n  \n## [3.3.0-rc1] - 2024-07-09\n\n### Changed\n\n- Fixed how external_ip is fetched from containers to provide a more accurate representation\n- help and clear appear in generic `help` output\n- ability to hide callbacks that use the PushOneToMany \n- updated Mythic's cookie to use strict same site and http only flags\n- tasking input - fixed issue where double options could be presented when using tab\n- tasking input - adjusted so complex types (link info, files, payloads, etc) aren't tab-completable\n  - This reduces some confusion when tab completing command parameters\n- expand/hide subtasks in UI that have subtasks\n- moved plaintext output expand icon to the left of 1 in text editor instead of in the middle\n- fixed an issue where sometimes if a tab was open, clicking the keyboard for a callback wouldn't bring that tab back to focus\n- fetch server version dynamically in the UI so it updates more often\n- update mythic-cli allowed_ips to apply to all web/scripting routes, not just auth\n  - this now applies to all routes and sub-routes behind Mythic's local reverse proxy\n- cache hasura information and invalidate / re-fetch after any modification to operator operation status \n  - each request went from 3-10ms to 700-1000micro seconds in processing time\n- updated list/edit/delete/upload file features for containers to _all_ containers instead of just C2 containers\n- fixed bug where non-utf8 characters in keylog data would error on the page\n- function to get graphql schema (or option from Mythic)\n  - `schema = await mythic.mythic_utilities.fetch_graphql_schema(mythic=mythic_instance)`\n  - This is helpful when trying to do GraphQL via Golang\n- only admins can create new operators\n- only admins can create new operations\n- fix the UI when the width is too small causing the top appbar to take up 2 lines and cover buttons\n  - now width <1100px will hide some buttons along the top\n- after getting logged out, should redirect to where you were via redirect= URL parameter\n- updated payloadtype definition to allow specification of UUID length pre-pended to agent messages\n  - This can be either 16 or 36 and defaults to 36 (the length of the normal UUIDv4 string)\n  - This makes it possible to have 16 Byte UUIDs used for P2P comms \n- updated wrapper builds to not send the wrapped payload bytes via rabbitmq\n  - HTTP request to mythic made to fetch bytes from container before passing execution off to build function\n  - no change needed by agent developers\n- jupyter access token changed from default 'mythic' to randomized 30 char password\n  - only affects new installs, but you'll need to fetch this value similar to fetching the hasura secret for GraphQL access\n- fixed bug where zipped and downloaded files wouldn't record the final zip size or md5/sha1 hashes\n- added button on keylogs page to view all keylogs within a user/host/window combination in your current search window at once\n- When sending data back for the file browser, `success` is now an optional boolean field\n- C2 Profile debug output is now also sent to the container's debug output so you don't have to view it through the UI\n\n### Added\n\n- Two new fields in agent message for artifacts for `needs_cleanup` and `resolved`\n- added `process_short_name` field to Callbacks\n  - this is automatically parsed based on the `process_name` returned from agents when they checkin or update their callback information\n  - the `process_short_name` is displayed in the Mythic UI callbacks table, but the full `process_name` is shown in the callback detailed metadata view\n  - this allows agents to return the full path to the binary when checking in without worrying about it bloating up the UI\n- light and dark mode agent icon support\n  - If no dark mode icon is provided, the light mode version is used for both by default on new sync\n  - There's a new field on payloadtype definitions for a dark mode icon\n- MythicRPC call to expose Mythic's way of parsing paths so that agents don't have to do it themselves and it can be standardized\n  - MythicRPCFileBrowserParsePath\n- added task display_id to tasks shown when doing browser script edits so that it's easier to tell the difference\n- added an \"email\" field on operators\n- add new ChooseOneCustom parameter type (build, command, and c2) to allow users to choose from list or add new value\n- add new FileMultiple parameter type (build, command, and c2) to allow users to select and upload multiple files at once\n- new \"Last Updated\" time in proxy table so you know when data is flowing\n  - the amount of data transfer updates every 20s\n- auto-tag files as you download/preview them so that it's easier to see what has been triaged or not by the team\n- all consuming containers now are tracked in the UI specifically and have their own name and description fields that must be set\n  - This applies to webhooks, loggers, eventing, auth\n- A new type of user, a bot account, is now available for creation\n  - only admins can create new operator accounts and new bot accounts\n  - bot accounts are not available to login\n  - a bot account is automatically created for every operation\n  - bot accounts can be used to take actions in eventing (as long as the operation lead approves it)\n  - admins are able to generate/view/delete apitokens for bot accounts as well\n- Added new `logging.UpdateLogToFile` and `logging.UpdateLogToStdout` functions to containers\n  - These allow you to dynamically update logging to write to file+stdout or just stdout as needed\n  - `mythic_container.logging.update_log_to_file` and `mythic_container.logging.update_log_to_stdout` in Python\n- Admins can generate one-time-use invite codes to invite somebody to their Mythic server without pre-creating an account\n  - This is disabled by default but can be enabled in .env or in global settings by admins (MYTHIC_SERVER_ALLOW_INVITE_LINKS)\n  - Each invite link can be used only once and un-used invite links can be deleted\n  - Invite links become invalid when the server restarts\n- SSO Support via \"auth\" containers\n  - can redirect to SSO providers (ExampleContainers has example for ADFS) that provide IDP services\n  - can process non SSO custom auth as well\n  - each case must return an email associated with a user that's logged in\n    - Operators now have email addresses optionally associated with them\n  - these can be seen via ConsumingServices page\n- All containers have an `on_start` function that gets called when the container starts up\n  - This function is executed once for every operation that's currently running (not deleted and not complete)\n  - This function gets access to a special JWT APIToken that's scoped to the bot account assigned to the operation\n    - This JWT is for spectator access (no changes can be made) and only lasts for 5 minutes\n    - The goal here is to allow some basic configuration to be performed by the container\n- New PayloadType attribute `agent_type` value of `command_augment`\n  - CommandAugment containers expose custom tasks to other PayloadTypes and are automatically injected into callbacks\n- Payload type definitions have a new `CheckIfCallbacksAliveFunction`\n  - This gets a list of active callbacks based on this payload type along with their id, last checkin, first checkin, and sleep_info information\n  - This returns back a list of all the callbacks and an indication if they should be marked as \"dead\" or not\n  - \"dead\" status is reflected by a red skull in the last_checkin column in the callbacks table\n  - the `sleep_info` data can be updated at any time as a free-form string via MythicRPC or the UI\n  - the `sleep_info` data is also a column you can toggle to view or not in the UI in the callbacks table\n  - Added `SendMythicRPCCallbackNextCheckinRange` RPC call to get basic range for next checkin options based on:\n    - last_checkin, jitter percentage, and sleep interval\n    - This is provided as a helpful way to reduce duplicated efforts in all payload types checking if `time.Now().UTC()` within the possible range\n- New Container Type and feature: Eventing\n  - Eventing button at the top now added to manage eventing workflows\n  - New docs around eventing added\n\n## [3.2.20-rc11] - 2024-04-23\n\n### Changed\n\n- Fixed a bug where DynamicQueryParameters weren't getting set on first sync\n\n## [3.2.20-rc10] - 2024-04-10\n\n### Changed\n\n- Fixed a few of the SendMythicRPC* calls to fetch all the same data as normal agent processing\n\n## [3.2.20-rc9] - 2024-04-08\n\n### Changed\n\n- Added CallbackDisplayID, PayloadType, IsInteractiveTask, and InteractiveTaskType to RPC Search results and new_task logging data\n- Fixed an issue with SendMythicRPCTaskSearch\n\n## [3.2.20-rc8] - 2024-04-05\n\n### Changed\n\n- Fixed an RPC call for generating a new payload that wasn't calling the right function\n\n## [3.2.20-rc7] - 2024-03-29\n\n### Changed\n\n- When payloads are built, files hosted, files written, or agent configurations checked, Mythic now restarts a C2 profile's server in case there were updates\n- Added a fix for C2Profile Parameter Type of File\n\n## [3.2.20-rc6] - 2024-03-25\n\n### Changed\n\n- Added support for PushC2OneToMany via gRPC\n\n## [3.2.20-rc5] - 2024-03-19\n\n### Changed\n\n- Added in a check to support an agent's message_format field for `xml` or `json`\n\n## [3.2.20-rc4] - 2024-03-19\n\n### Changed\n\n- Updated SOCKS to also send any read data even during a read error\n\n## [3.2.20-rc3] - 2024-03-19\n\n### Changed\n\n- Updated the logging library to just be zerolog and not zerolog/logr which was messing with logging levels\n- Removed a section of socks/rpfwd code that resulted in double closure messages getting sent to the agent\n- Updated a section of socks to do multiple reads with smaller buffers\n\n## [3.2.20-rc2] - 2024-03-14\n\n### Changed\n\n- Fixed an issue where rpfwd connections with the same local port wouldn't get tracked on the proxies page as new connections\n- Added `xml` tags to agent messages for planned native support of `xml` in addition to `json` message formats\n\n## [3.2.20-rc1] - 2024-03-08\n\n### Changed\n\n- Fixed an issue where port usage wasn't getting tracked for new ports\n\n## [3.2.19] - 2024-03-05\n\n### Changed\n\n- Added `OperatorUsername` and `OperationName` to Callback data sent to tasks\n\n## [3.2.18-rc10] - 2024-03-04\n\n### Changed\n\n- Updated SOCKS/rpfwd traffic to not double send close connection messages to the agent\n- Added \"AgentType\" field to \"PayloadType\" database table\n- Updated SOCKS initial connection to accept more bytes in case client supports many auth mechanisms\n\n## [3.2.18-rc9] - 2024-02-28\n\n### Changed\n\n- Updated the processing of agent `responses` fields to return a 200 response with empty data if there's an error processing data\n\n## [3.2.18-rc8] - 2024-02-22\n\n### Changed\n\n- Fixed a bug where files registered would get a comment with a taskID instead of a task's display id, leading to confusing task numbers\n\n## [3.2.18-rc7] - 2024-02-21 \n\n### Changed\n\n- Added support for exporting and importing c2 profile instances (green save icon next to a c2 profile then export/import)\n\n## [3.2.18-rc6] - 2024-02-19\n\n### Changed\n\n- Added another check for parsing paths for when a parent_path for the file browser is reported as \"path\\path\"\n\n## [3.2.18-rc5] - 2024-02-16\n\n### Changed\n\n- Updated the response to a `download` message from an agent to include the `chunk_num` the agent sent in the response\n\n## [3.2.18-rc4] - 2024-02-12\n\n### Changed\n\n- Added `secrets` and `preferences` as fields for the `operator` table\n  - Added migration to add these two fields\n  - User secrets are now available in:\n    - payload builds\n    - new callback functions\n    - opsec pre\n    - create tasking\n    - opsec post\n    - completion handlers\n    - dynamic query functions\n  - The secrets field allows your agent functions to interact with services on behalf of the tasking operator without storing auth tokens on disk\n  - Updated the callback import feature to also support commands and allow duplicate payloads UUIDs (not duplicate callback UUIDs though)\n  - Updated SOCKS handling to hopefully prevent a few more cases of deadlocking\n  - Updated SOCKS/RPFWD/Interactive Tasking to track bytes sent/received through the agent\n    - Data is streamed to the SOCKS search page\n    - Data is aggregated on the main dashboard\n  \n- [UI Fixes](/MythicReactUI/CHANGELOG.MD)\n- [mythic-cli updates](/Mythic_CLI/Changelog.md)\n\n## [3.2.18-rc3] - 2024-02-09\n\n### Changed\n\n- [UI Fixes](/MythicReactUI/CHANGELOG.MD)\n- [mythic-cli updates](/Mythic_CLI/Changelog.md)\n- Updated file-based routes to also log file_id\n\n## [3.2.17.1] - 2024-02-08\n\n### Changed\n\n- Adjusted the SOCKS handling functions to use non-blocking sends when dealing with channels to help prevent deadlock\n- Adjusted the SOCKS channels to have increased capacity\n\n## [3.2.17] - 2024-02-06\n\n### Changed\n\n- Added ability to export a callback (via callback dropdown) and import callback (via speeddial on top right of callbacks page)\n- Added a new environment variable, `global_server_name`, that gets passed down to webhook and logging containers\n- Added new `mythic-cli config help` subcommand to get helpful descriptions of all environment variables in .env file\n- Updated logging to track user_id, username, and source of requests\n- Updated internal MITRE ATT&CK to the latest as of 2024-02-06\n\n## [3.2.16] - 2024-01-28\n\n### Changed\n\n- Added new file view endpoint to not return files as attachments but just as content to render in the browser easier\n- Added more checks for processing completion functions\n\n## [3.2.15] - 2024-01-15\n\n### Changed\n\n- Added ability to query and set global settings such as the agent debug message setting from the UI\n\n## [3.2.14] - 2024-01-11\n\n### Changed\n\n- Fixed typo\n- Updated go modules\n\n## [3.2.13] - 2024-01-11\n\n### Changed\n\n- Removed the FileRegister MythicRPC Command\n- Updated the FileCreate MythicRPC Command to take in TaskID, PayloadUUID, or AgentCallbackID depending on what the context has available\n- Added a `size` field for FileMeta to track the final size of files uploaded, download, or screenshots\n- Added a `bytes_received` and a `bytes_sent` field for CallbackPorts to eventually track how much data goes through Mythic\n- Updated the data passed in for DynamicFunctionQueries to have PayloadOS, PayloadUUID, CallbackDisplayID, and AgentCallbackID too\n  - should help making more informed decisions for which files or dynamic data to present to the user\n\n## [3.2.12] - 2024-01-10\n\n### Changed\n\n- Updated the C2 File host webhook to automatically stop and restart a C2 Profile after hosting a file\n- Added a new MythicRPC* for getting graph edges associated with a callback\n- Added a new MythicRPC* for creating a new task based on AgentCallbackUUID\n  - associated Operator for this will be the operator associated with the Callback (i.e. the one that made the payload)\n- Added new function for a Payload Type for `on_new_callback`/`onNewCallbackFunction` so that you can take actions based on new callbacks\n- Fixed bug with attempts to send `alerts` in `checkin` message not properly tracking them for the new callback\n- Support for container version 1.2.0\n\n## [3.2.11] - 2023-01-04\n\n### Changed\n\n- Added a check for file transfers when getting null data\n- Added a fix for spawning a new callback off a payload through the UI\n\n## [3.2.10] - 2023-12-26\n\n### Changed\n\n- Fixed an issue with interactive tasking not working if there wasn't also a port open\n\n## [3.2.9] - 2023-12-26\n\n### Changed\n\n- Updated the Dockerfile for Mythic_CLI and mythic-docker for go v1.21 GOPROXY usage changes that broke builds\n\n## [3.2.8] - 2023-12-21\n\n### Changed\n\n- Adding missing hasura files that didn't get exported and added for updating operator status on the settings page\n\n## [3.2.7] - 2023-12-21\n\n### Changed\n\n- Updated to allow SOCKS/rpfwd message format to specify a `port` (uint32) as part of their messages with Mythic\n  - This allows multiple instances of rpfwd per callback with proper tracking for which port to go to\n  - The `port` sent in the messages is the local port the agent binds to for rpwfd\n- Updated the rpfwd remote connectivity test to happen in a goroutine and not block registration\n\n## [3.2.6] - 2023-12-20\n\n### Changed\n\n- Fixed a bug in the staging_rsa refactor for provided RSA public keys\n\n## [3.2.5] - 2023-12-19\n\n### Changed\n\n- Updated some golang packages in mythic_server\n- Pulled some PRs for refactoring and beginning of adding unit tests\n\n## [3.2.4] - 2023-12-14\n\n### Changed\n\n- Added a new controlled endpoint for managing operator admin, active, and deleted status\n\n## [3.2.3] - 2023-12-12\n\n### Changed\n\n- Added new database migration for postgres function to convert callback groups into strings for easier searching\n- Fixed bugs in mythic rpc functions for CallbackCreate, CallbackDecryptBytes, CallbackUpdate, and FileCreate\n\n## [3.2.2] - 2023-11-17\n\n### Changed\n\n- Adjusted channel size to help with TOCTTOU issue\n\n## [3.2.1] - 2023-11-17\n\n### Changed\n\n- Fixed a TOCTTOU bug with the total number of file chunks received when there are parallelized requests to Mythic\n\n## [3.2.0] - 2023-11-17\n\n### Changed\n\n- Updated file/process browsers to store/merge information based on host + callback id\n- Updated callbacks to have `mythictree_groups` attribute to specify which groups data should be displayed with in the UI\n- Added new migrations for the above updates\n- Adjusted the file writes during `download` commands to flush to disk after each chunk\n\n## [3.1.7] - 2023-11-13\n\n### Changed\n\n- Fixed a non-idempotent sql migration\n- Updated file transfers to Mythic to allow parallel messages from the agent\n  - Uses golang channels to ensure ordered file writes and f.Seek to get to the right spot in the file\n\n## [3.1.6]\n\n### Changed\n\n- Updated agent messages to allow %encoding and safe base64 encoding for query parameters\n\n## [3.1.5]\n\n### Changed\n\n- Updated rpfwd and SOCKS messages to aggregate through a single channel to ensure message order\n\n## [3.1.4]\n\n### Changed\n\n- Fixed an issue with locks when checking for containers online or not\n\n## [3.1.3]\n\n### Changed\n\n- Fixed a bug in interactive tasking ports that wouldn't pick up messages for multiple interactive tasks port in a single callback\n\n## [3.1.2]\n\n### Changed\n\n- Fixed a bad channel close and double close scenario with interactive ports\n\n## [3.1.1]\n\n### Changed\n\n- Updated the C2 Profile redirector RPC call to add `#` in front of all non-redirector messages to help with apache mod_rewrite configs\n\n## [3.1.0] \n\n### Changed\n\n- Added new build step option for skipped steps (useful if you have conditional builds)\n- Added new \"Split Tasking view\" as a callback dropdown option for viewing tasking\n- Updated Graphing library (react-flow)\n- Updated UI to React18\n- Can now sort by last checkin time on active callbacks page\n- New \"PushC2\" style available for egress C2 Profiles\n  - Updated with Websocket C2 profile\n  - Uses gRPC connections between C2 Docker container and Mythic\n- New `TypedArray` parameter type available for commands, build parameters, and c2 profile parameters\n  - Useful for generic BoF/COFF style tasking where you need data and a type associated with it\n  - Data passed down as an array of tuples: `[ [type, value], [type, value] ]`\n  - PayloadType Commands need to supply a TypedArray Parsing Function to handle freeform input for typed array values\n    - ex: `my_bof -bof_args int:5 char*:testing wstring:\"this is my string\"` into proper array of arrays\n- New \"Host File Through C2\" option available for all payloads and files via globe icon\n  - Up to the C2 profile to support the RPC call from Mythic and make the file available though\n  - Updated with `http` and `websocket` C2 profiles\n- Shift+Tab will cycle backwards through options on the tasking CLI\n- Event feed format changed and is now also searchable\n- \"alerts\" keyword in responses from agents now allow setting a source, level (info, warning, debug)\n  - New `send_webhook` boolean field to indicate sending a custom webhook notification (even if the level isn't warning)\n  - New `webhook_alert` dictionary field for custom data to your webhook that's _not_ displayed to the user in the event log\n  - `alert` string field is what's displayed to the user in the event log\n- Mythic-cli updated to allow options for setting the main UI to listen on IPv4, IPv6, or both\n- Agents can now more easily support multiple C2 profiles and have it reflected in the UI\n  - Still only one instance of each c2 profile, but that will change in future releases\n- Updated callback's \"update_info\" and \"checkin\" actions so that callbacks can update their own metadata\n- New \"Interactive\" tasking type available to allow follow-on input in a PTY format\n  - Browser view has limitations compared to a full PTY/TTY since it's still in your browser (supports ASNI colors)\n    - Non-ANSI color sequence control sequences are ignored in the browser\n  - Use the new supported_ui_feature `SupportedUIFeatures:       []string{\"task_response:interactive\"},` to enable this for your task in the UI\n  - With MythicRPC you can open an \"interactive\" port with your task which you can connect to with a terminal for full PTY support\n    - *NOTE* _ALL_ output is still captured and stored in Mythic and viewable in the UI for the task, so be careful about long-running jobs that dump out a lot of data\n    - Inputs from the Web UI will appear as \"tasks\" that you can search. Inputs via the opened port will _not_ appear as tasks.\n- Your issued tasks will auto-expand, so it should reduce a click for tasks that finish immediately (help, clear, script_only)\n- File Search page updated to have `Bin` and `Strings` views available without needing to expand the dropdown\n- Updated `github.com/MythicMeta/MythicContainer` golang package and `mythic_container` PyPi packages\n- New database migrations so that you don't have to blow away the database between updates\n- Updated user login notification to be debug level (no UI popup)\n- Allow dynamic port binding with MythicRPCProxyStart\n  - specify a LocalPort of 0 for Socks/Interactive ports and the next lowest available port will be used and returned\n- Allow dynamic port closing with MythicRPCProxyStop\n  - specify a LocalPort of 0 for Socks/Interactive ports and Mythic will look up the port based on taskID and port type\n- Updated ProxyPorts to track \"deleted\" status so that they're never actually deleted and can be restarted if needed\n  - Allows for a better tracking of which callbacks had/have which ports open\n  \n## [3.0.1-rc46] - 2023-08-22\n\n### Changed\n\n- Fixed an issue with the task searching MythicRPC call\n- Fixed an issue with redirects for the UI with custom ports\n\n## [3.0.1-rc45] - 2023-07-20\n\n### Changed\n\n- Fixed sql query error for linked messages\n\n## [3.0.1-rc44] - 2023-07-18\n\n### Changed\n\n- Updated mythic_server and mythic-cli build processes to incorporate GOPROXY and GO111MODULE build/env settings\n\n## [3.0.1-rc43] - 2023-07-18\n\n### Changed\n\n- Updated the bulk download zip option to save filenames as HOST_filename_uuid.ext to help with uniqueness in names\n\n## [3.0.1-rc42] - 2023-07-17\n\n### Changed\n\n- Fixed an issue where with MythicRPCCallbackUpdate failing to find a callback based on task id\n\n## [3.0.1-rc41] - 2023-07-16\n\n### Changed\n\n- Fixed an issue where linked callbacks were consistently creating new edges\n\n## [3.0.1-rc40] - 2023-07-15\n\n### Changed\n\n- Fixed an issue where linked nodes 3+ deep weren't getting their tasking\n- Fixed an issue where linked nodes weren't getting their token values\n\n## [3.0.1-rc39] - 2023-07-14\n\n### Changed\n\n- Adjusted the agent message processing to account for agent messages less than 36 bytes long\n\n## [3.0.1-rc38] - 2023-07-12\n\n### Changed\n\n- Adjusted the rabbitmq piece to force close channels on error\n\n## [3.0.1-rc37] - 2023-07-11\n\n### Changed\n\n- Added some missing return statements for file uploads on error cases\n\n## [3.0.1-rc36] - 2023-07-11\n\n### Changed\n\n- Fixed the following RPC functions: agent storage search, artifact search, process search\n\n## [3.0.1-rc35] - 2023-07-10\n\n### Changed\n\n- Fixed how Mythic leveraged rabbitMQ channels to reduce the channel churn rate and increase throughput dramatically\n- Updated Mythic's tasking to support mass-tasking natively without requiring all tasks to happen in sequence\n- Fixed an issue with a high volume of new callbacks causing issues with Postgres connections\n- Fixed an issue with a high volume of new callbacks resulting in duplicated callback identifiers\n- Updated the sqlx connection information to limit the number of concurrent postgres connections\n\n## [3.0.1-rc34] - 2023-07-05\n\n### Changed\n\n- Updated file browser data to track if a folder `has_children` or not so that it's easier to track in the UI\n- Updated file download to not un-set `is_screenshot` tag based on default values from agents\n\n## [3.0.1-rc32] - 2023-06-30\n\n### Changed\n\n- Updated the translation container code to only ask the translation container to generate encryption keys if the translation container is doing the encryption (instead of always asking)\n\n## [3.0.1-rc31] - 2023-06-29\n\n### Changed\n\n- Added `file_name` field to Downloads so that you can report back a filename without necessarily returning a full_remote_path. This is particularly useful for screenshots or downloading things in memory.\n\n## [3.0.1-rc30] - 2023-06-29\n\n### Changed\n\n- Updated the RPC File Create function to set the host field\n\n## [3.0.1-rc29] - 2023-06-29\n\n### Changed\n\n- Updated check for marking a callback token as deleted to first fetch the proper token_id\n\n## [3.0.1-rc28] - 2023-06-29\n\n### Changed\n\n- Updated check for container status to use rabbitmq REST api to port 15672 instead of passively declaring queues\n- Updated rabbitmq image to rabbitmq:3-management-alpine to support the above bullet\n\n## [3.0.1-rc26] - 2023-06-26\n\n### Changed\n\n- Updated the payload builder message to also include a wrapped_payload_uuid field\n\n## [3.0.1-rc25] - 2023-06-14\n\n### Changed\n\n- Updated the rpfwd logic to not bail out if it can't reach the specified remote ip:port when starting\n\n## [3.0.1-rc24] - 2023-06-12\n\n### Changed\n\n- Updated the logic for tracking up/down containers to only notify after successful database update\n\n## [3.0.1-rc23] - 2023-06-09\n\n### Changed\n\n- Updated grpc translation container code to have a larger (maxInt) send/recv limit\n\n## [3.0.1-rc22] - 2023-06-09\n\n### Changed\n\n- Added a line to reflect back keys from the agent at the \"action\" level\n\n## [3.0.1-rc21] - 2023-06-08\n\n### Changed\n\n- MythicRPC calls for creating task and subtask now report back a tasking location of `mythic_rpc` instead of `command_line`\n- Update file delete webhook to not error out if the file to be deleted has already been deleted\n\n## [3.0.1-rc19] - 2023-06-05\n\n### Changed\n\n- Fixed a bug where *nix filepaths might be leading // causing file browser issues\n- Fixed bug where deleted files that come back weren't getting marked as not deleted\n- Fixed an issue in the UI with timestamps not converting properly between UTC and local time\n\n## [3.0.1-rc18] - 2023-06-02\n\n### Changed\n\n- Fixed a bug where agents reporting back file browser paths with UNC formats wouldn't get properly ingested\n\n## [3.0.1-rc17] - 2023-06-01\n\n### Changed\n\n- Fixed a bug where the `get_delegate_tasks` key wasn't getting passed to the delegate message check\n- Fixed a bug where rpfwd messages weren't getting checked for delegate messages\n\n## [3.0.1-rc16] - 2023-06-01\n\n### Changed\n\n- Removed ability to check number of consumers for logging/webhooks since it caused the messages to roundrobin instead\n\n## [3.0.1-rc15] - 2023-05-31\n\n### Changed\n\n- Updated the UI to handle boolean parameters with `-paramName` as `true` on the CLI\n- Updated the UI to show number of listeners for consuming services as well as green/orange counts\n- Updated Mythic to emit a new `new_response` log type for user_output\n- Updated the checks for existing containers to re-use rabbitmq channels if possible\n- Updated the health check for rabbitmq to just check for ports listening since no alarms are configured\n- Fixed an issue when reporting back deleted files that Windows paths with `\\\\` need to be escaped again, `\\\\\\\\`\n- Updated task logging to emit when first created and also when task completes\n\n### Added\n\n- Added new `alerts` key for `post_response` messages to send alerts to the operation event log\n- Added new `alerts` key for top level messages to send alerts to teh operation event log\n\n## [3.0.1-rc14] - 2023-05-26\n\n### Changed\n\n- Additional error checking for trying to close SOCKS ports\n\n## [3.0.1-rc13] - 2023-05-25\n\n### Changed\n\n- Updated some rabbitmq RPC functionality to not return error on timeouts\n\n## [3.0.1-rc12] - 2023-05-24\n\n### Changed\n\n- Added a check when getting a new callback to see if the payload is deleted, if so then no new callback is created and an alert is thrown to the operator\n- Reduced the popup display for some toast notifications when generating tasks\n- Attempt to locate and mitigate potential RPC timeout errors\n\n## [3.0.1-rc11] - 2023-05-23\n\n### Changed\n\n- Updated MythicRPCFileUpdateMessage to allow setting DeleteAfterFetch\n- Updated UI to support GenerateIOCs and GenerateSampleMessage for C2 containers\n- Updated UI to have icons next to options on the Payloads page so it's easier to find what you're looking for\n- Updated UI to not base64 encode browser scripts\n- Updated mythic_graphql with new GraphQL endpoint and permissions for c2GetIOC and c2SampleMessage functions\n- Fixed an issue with additional information incorrectly mapped to map[string]string instead of map[string]interface{}\n- Updated message about out-dated `upload` key for file transfers to be an informational debug message rather than a warning\n- Updated Jupyter with mythic==0.1.2\n\n## [3.0.1-rc10] - 2023-05-22\n\n### Changed\n\n- Updated the task status values to be more representative of what's going on\n- Updated go.mod values\n\n## [3.0.1-rc09] - 2023-05-18\n\n### Changed\n\n- Fixed an issue with the default value for a dictionary not getting populated correctly due to missing struct tags\n\n## [3.0.1-rc08] - 2023-05-18\n\n### Changed\n\n- Fixed a few things in the UI with linking\n- Fixed process browser in the UI not reporting process_id when tasking kill/inject\n- Fixed an issue where linked p2p agents would get egress connections in the UI\n\n## [3.0.1-rc07] - 2023-05-17\n\n### Changed\n\n- fixed an issue with creating saved c2 instances that wouldn't supply default values for non-supplied parameters\n- updated the scripting version for the Jupyter Container\n- added two new examples in the Jupyter container for c2 profiles\n- fixed an issue with missing operation_id for c2 profile instances for payloads\n\n## [3.0.1-rc05] - 2023-05-16\n\n### Changed\n\n- Reduced the number of toast notifications when syncing or hitting errors with translation containers\n\n## [3.0.1-rc04] - 2023-05-15\n\n### Changed\n\n- Changed from ParseBytes to FromBytes when attempting to parse a 16 byte UUID instead of a 36 byte string UUID\n\n## [3.0.1-rc03] - 2023-05-12\n\n### Changed\n\n- Fixed how timeouts work for translation services so that they don't hang internally on channels\n\n## [3.0.1-rc02] - 2023-05-10\n\n### Changed\n\n- Updated the webhook for creating custom operation event messages to generate sources if none supplied\n- Updated to allow users without an operation set to create an operation and create new users\n- Fixed an issue when updating operations outside your operation causing an exception\n- Two .svg icons for UI dev were ignored via .gitignore, so added them manually back to the repo\n\n## [3.0.0] - 2023-05-10\n\n### Changed\n\n- Updated to actual release instead of release candidates for v3.0.0\n\n## [3.0.0-rc53] - 2023-05-09\n\n### Changed\n\n- Modified MythicRPCProxyStart to support rportfwd\n- Updated Dockerfile build to user smaller base images and use multi-stage builds to reduce final size\n- Docker images updated:\n  - itsafeaturemythic/mythic_base_go       <-- go1.20 with garble and gRPC\n  - itsafeaturemythic/mythic_base_python   <-- python 3.11 with the latest mythic_container PyPi package installed\n  - itsafeaturemythic/mythic_go_dotnet     <-- mythic_go_base + .NET Core 7.0 SDK, nuget, and the Mono compiler\n  - itsafeaturemythic/mythic_python_dotnet <-- mythic_python_base + .NET Core 7.0 SDK, nuget, and the Mono compiler\n  - itsafeaturemythic/mythic_go_macos      <-- mythic_go_base + macOS 12.1 SDK\n  - itsafeaturemythic/mythic_python_macos  <-- mythic_python_base + macOS 12.1 SDK\n  - All docker images now have a rolling `:latest` tag that can be used\n  - All docker images (and mythic-cli builds) now work for ARM as well as x86_64\n- Fixed an issue with additional attributes not getting captured for commands\n\n## [3.0.0-rc52] - 2023-05-05\n\n### Added\n\n- Added `File` as a valid build parameter type - like files for tasking, this is passed to the `build` function as a file UUID\n- ContainerVersion v1.0.2 has the builder side of this addition\n- Docker images updated:\n  - itsafeaturemythic/mythic_base <-- go1.20 and python 3.11 with the latest mythic_container PyPi package installed\n  - itsafeaturemythic/mythic_dotnet <-- mythic_base + .NET Core 7.0 SDK, nuget, and the Mono compiler\n  - itsafeaturemythic/mythic_macos <-- mythic_base + macOS 12.1 SDK\n- All docker images now have a rolling `:latest` tag that can be used\n- All docker images (and mythic-cli builds) now work for ARM as well as x86_64\n\n## [3.0.0-rc51] - 2023-05-04\n\n### Changed\n\n- Updated `mythic-cli` with `update`, `save`, and `load` commands\n  - `update` command simply checks Mythic version, mythic-cli version, and mythic UI version locally against either the main branch or the branch specified with `-b`\n  - `save` command exports specified docker images to disk for use with load command\n  - `load` command loads exported docker images into local docker engine (helpful for offline environments)\n- Updated UI to allow `crtl+F` within more output boxes\n- Updated Dockerimages\n- Updated `mythic` PyPi package in `jupyter` container to `mythic==0.1.0rc9`\n\n## [3.0.0-rc50] - 2023-05-02\n\n### Changed\n\n- Updated agent post_response process dictionary to support `update_deleted` key to mark processes as deleted\n- Updated agent post_response process dictionary to support `os` key to mark processes as `windows`, `macOS`, or `linux`\n- Updated UI to add new \"View Just This Process Tree\" option in Info dropdown for process tree view\n- Fixed bug with callback graph view's link commands\n- Fixed bug with re-added edges in graph view\n\n## [3.0.0rc49] - 2023-04-26\n\n### Changed\n\n- Fixed an issue with marking payloads as deleted when linking agents\n- Updated the UI for tasking dropdown boxes are full width\n- Updated reporting function to generate JSON output in addition to XML\n\n## [3.0.0rc48] - 2023-04-25\n\n### Changed\n\n- fixed the UI to version 0.1.0 with an update to include the additional webhook types of alert/custom\n- adjusted the test webhook function to handle testing the new alert/custom webhook types\n\n## [3.0.0rc47] - 2023-04-25\n\n### Changed\n\n- Fixed an issue where SendMythicRPCFileCreate wasn't setting the is_screenshot or is_download_from_agent fields\n\n## [3.0.0rc46] - 2023-04-24\n\n### Changed\n\n- Moved docker templates back out of this repository and to the MythicMeta/Mythic_Docker_Templates repository\n\n## [3.0.0rc45] - 2023-04-24\n\n### Changed\n\n- Fixed a bug in file uploads that was causing the sha1 and md5 of payloads to not be recorded\n\n## [3.0.0rc44] - 2023-04-21\n\n### Changed\n\n- Updated the payload build and build response to allow for updating the filename as part of the build process\n\n## [3.0.0rc43] - 2023-04-20\n\n### Changed\n\n- Added another check in RSA EKE for PKIX format\n\n## [3.0.0rc42] - 2023-04-20\n\n### Added\n\n- Added two new kinds of webhooks - one for alerts in the operation event log and one for custom webhook data\n- Added examples of new webhooks in Jupyter notebook\n\n## [3.0.0rc41] - 2023-04-19\n\n### Added\n\n- Updated MythicCLI to allow setting default operation webhook url and webhook channel in addition to operation name from .env file\n- Updated MythicCLI to support `-b` and `--branch` flags when installing from GitHub\n\n### Changed\n\n- Updated some json tags on structs to omit unnecessary nested structure parsing with empty values \n- Fixed the error message for bad messages to Mythic and added more error logging to the UI\n\n## [3.0.0rc38] - 2023-04-18\n\n### Changed\n\n- Added event log notification if a connection is refused due to the IP allow list in the Mythic/.env file\n\n## [3.0.0rc37] - 2023-04-14\n\n### Changed\n\n- For file browsing, if an OS type cannot be inferred based on host, path, and parent path, OS is assumed as Windows\n- Fixed an issue with the UI sending the wrong host name for file listings\n- Fixed an issue with uploaded files treated like folders in the file browser\n\n## [3.0.0rc35] - 2023-04-13\n\n### Changed\n\n- Fixed an issue with files marked as \"delete after fetch\" weren't getting deleted\n- Fixed some issues with the UI referring to old element IDs instead of display IDs\n- Fixed some issues with MythicRPC Credential and File Searches\n\n## [3.0.0rc32] - 2023-04-10\n\n### Changed\n\n- Fixed an issue with RabbitMQ Channels not getting closed after use, resulting in an ID exhaustion\n\n## [3.0.0rc31] - 2023-04-6\n\n### Added\n\n- Added new configuration variable for `mythic_react_debug`\n- Added MythicReactUI code to this repository for easier control and development for the community. \n- New image and container are only used when `mythic_react_debug` is set to `true`, otherwise normal nginx container serving static files is used.\n- Updated scripting package for Jupyter to mythic==0.1.0rc3\n- Updated MythicUI tags to treat http* json fields as clickable links\n\n## [3.0.0rc30] - 2023-04-5\n\n### Changed\n\n- Updated mythic-cli to include a version command\n- Updated the agent message Get handler to look at first query parameter, first cookie value, and then message body\n- Updated mythic-cli to include a check for the docker version >= 20.10.22\n\n## [3.0.0rc28] - 2023-04-04\n\n### Changed\n\n- Added more to the report generation for the XML side\n- Fixed an issue with bad hasura role for non-admins\n- Added caching for container information for checking if containers are online\n- Updated file tracking for newly created downloads to populate the file browser as well\n- Dynamically update file's chunk_size if none is set by the agent to the size of the first chunk\n\n## [3.0.0rc27] - 2023-04-03\n\n### Changed\n\n- Updated the xml reporting a bit further (not done yet)\n- Updated processing of agent messages to have a separate case for base64 url encoded messages\n- Updated a few issues in the UI\n\n## [3.0.0rc26] - 2023-04-1\n\n### Changed\n\n- Fixed many bugs in mythic_rpc_* functionality that was slightly broken with SQL queries\n- Prevented agents from auto-triggering their completion functions multiple times\n- Added a flag to not show webhook/logger rabbitmq errors on send\n- Updated the payload search rpc functionality to also return the build_phase\n- Fixed some UI bugs for various command parameter types\n\n## [3.0.0rc25] - 2023-03-30\n\n### Changed\n\n- Fixed a bug where an operation's channel wasn't sent down as part of webhook messages, only the url\n\n## [3.0.0rc24] - 2023-03-30\n\n### Changed\n\n- updated how socks messaging works internally to mythic (more go channels instead of mutex locks)\n- fixed an issue in the UI where bulk callback hides wasn't working\n- fixed an issue with socks stop getting caught in deadlocks \n\n## [3.0.0rc23] - 2023-03-27\n\n### Changed\n\n- fixed a few pieces of the UI for credentials and callbacks searching\n- updated the graphql action for creating credentials so they get emitted to logging as well\n- updated nginx reverse proxy to handle ip allow lists as well (so jupyter/docs/graphql all get protection too)\n- added cpu limits for a few other services\n\n## [3.0.0rc22] - 2023-03-25\n\n### Changed\n\n- Updated the way that callback updates happen so that it's easier with \n## [3.0.0rc21] - 2023-03-23\n\n### Changed\n\n- fixed an issue with token not getting added for get_tasking requests like in Mythic 2.3.*\n\n## [3.0.0rc20] - 2023-03-23\n\n### Changed\n- fixed an issue with tokens selected from the UI not making their way through to the payload containers\n\n## [3.0.0rc19] - 2023-03-23\n\n### Changed\n\n- fixed an issue with token adding/removing with bad SQL syntax\n- updated components for adding/removing/updating operations and operator memberships with new hasura action\n- updated some tagging on database structure to make mapstructure decoding better\n\n## [3.0.0rc18] - 2023-03-23\n\n### Changed\n\n- updated the mythic rpc callback search functionality to require a callback uuid instead of the callback id since the int id isn't available to translation containers\n\n### Added\n\n- Added new graphql endpoints for adding mitre attack to tasks and updating operations\n\n## [3.0.0rc17] - 2023-03-22\n\n### Changed\n\n- fixed an issue where the `staging_translation` capability for a translation container was missing\n- fixed an issue with tasking creation leveraging files not tied to tasks when searched\n- updated the database schema to support cascading drops (requires dropping database and creating a new one)\n- updated how display_ids are calculated for tasks and callbacks (there was an issue with duplicates once you start deleting tasks/callbacks)\n- updated the ui and server to create new tasks/callbacks based on display_id rather than id\n\n### Added\n- a new endpoint for deleting callbacks and tasks via scripting\n\n## [3.0.0rc16] - 2023-03-21\n\n### Changed\n\n- fixed an issue where hasura updated permissions weren't captured to disk\n\n## [3.0.0rc15] - 2023-03-20\n\n### Changed\n\n- Updated mythic-cli with mythic_postgres to offer a different postgres.conf file based on if postgres_debug is true\n\n## [3.0.0rc14] - 2023-03-19\n\n### Changed\n\n- fixed an issue when loading multiple commands via RPC that it would stop after the first successful one\n\n## [3.0.0rc13] - 2023-03-17\n\n### Changed\n\n- fixed some issues with P2P connections and auto-adding routes\n\n## [3.0.0rc12] - 2023-03-15\n\n### Changed\n\n- fixed an issue with 16 byte uuid not getting reflected back for agent response (defaulted to always 36 char string)\n\n## [3.0.0rc11] - 2023-03-14\n\n### Changed\n\n- fixed an issue with RSA-based EKE where golang libraries require a slightly different format than before. Added code to auto-detect and fix\n- fixed an issue where status wouldn't get updated to submitted\n- fixed an issue with SOCKS reusing the same ports causing errors\n- fixed an issue with mythic-cli stopping all containers instead of just the specified ones\n\n### Added\n\n- added a function to mythic-cli to remove intermediate images\n\n## [3.0.0rc8] - 2023-03-14\n\n### Changed\n\n- fixed an issue with errors getting overwritten from create_tasking and going to the agent\n- fixed an issue with script_only commands always reporting success and going to the agent\n\n## [3.0.0rc7] - 2023-03-13\n\n### Changed\n\n- fixed an issue with the outer UUIDs for checkins appearing wrong thanks to BloodHound user Josh Feehs\n- fixed a few issues with process_response and complection function messages\n- refactored where the automatically updated build steps happened on errors\n\n## [3.0.0rc6] - 2023-03-12\n\n### Changed\n\n- fixed an issue where selecting \"none\" for crypto would result in \"\" as the type instead of \"none\"\n\n## [3.0.0rc5] - 2023-03-09\n\n### Changed\n\n- fixed issue in command addition that wasn't using $1, $2 for parameterization on database Get request\n- fixed issue where mapstructure tag was missing from struct\n\n\n## [3.0.0rc4] - 2023-03-07\n\n### Changed\n\n- updated the token/callback section to remove an instance of TokenID (should be token_id)\n- updated the token/callback section to process tokens then callback tokens if both are provided simultaneously\n\n## [3.0.0rc3] - 2023-03-06\n\n### Changed\n\n- fixed a few bugs in the UI\n- fixed a bug where \"none\" encryption was reporting back as a string instead of a dictionary\n\n\n## [2.3.13] - 2022-08-31\n\n### Changed\n\n- Allowed wrapper payload types to wrap additional wrapper payload types so that you can nest more payload types\n\n## [2.3.12] - 2022-08-25\n### Changed\n- Updated P2P communications spec to return `mythic_uuid` and `new_uuid` (same value). Eventually `mythic_uuid` will be removed entirely to help reduce the number of mandatory `mythic` strings in agents."
        },
        {
          "name": "InstalledServices",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.4326171875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2018, Cody Thomas\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n# Licenses for other projects used:\n\n## arrgv - https://github.com/astur/arrgv\nMIT License\n\nCopyright (c) astur <astur@yandex.ru> (http://kozlov.am/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## https://pkg.go.dev/golang.org/x/mod/semver?tab=licenses\n\nCopyright (c) 2009 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n## https://github.com/IonicaBizau/anser/blob/master/LICENSE\n\nThe MIT License (MIT)\n\nCopyright (c) 2012-22 Ionică Bizău <bizauionica@gmail.com> (https://ionicabizau.net)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## https://github.com/rubenv/sql-migrate/blob/master/LICENSE\n\nMIT License\n\nCopyright (C) 2014-2021 by Ruben Vermeersch <ruben@rocketeer.be>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3505859375,
          "content": ".PHONY: default\ndefault: linux ;\n\nlinux:\n\tcd Mythic_CLI && make build_linux && mv mythic-cli ../\n\nmacos:\n\tcd Mythic_CLI && make build_macos && mv mythic-cli ../\n\nlocal:\n\tcd Mythic_CLI && make build_local\n\nlinux_docker:\n\tcd Mythic_CLI && make build_linux_docker && mv mythic-cli ../\n\nmacos_docker:\n\tcd Mythic_CLI && make build_macos_docker && mv mythic-cli ../"
        },
        {
          "name": "MythicReactUI",
          "type": "tree",
          "content": null
        },
        {
          "name": "Mythic_CLI",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.03515625,
          "content": "<p align=\"center\">\n<a href=\"https://github.com/its-a-feature/Mythic/pulse\">\n        <img src=\"https://img.shields.io/github/commit-activity/m/its-a-feature/Mythic/v3.0.0\" \n          alt=\"Activity\"/></a>\n<img src=\"https://img.shields.io/badge/version-3.0.0-blue\" alt=\"version 3.0.0\"/>\n<img src=\"https://img.shields.io/github/commits-since/its-a-feature/Mythic/latest?include_prereleases&color=orange\" \n  alt=\"commits since last release\"/>\n<a href=\"https://twitter.com/its_a_feature_\">\n    <img src=\"https://img.shields.io/twitter/follow/its_a_feature_?style=social\" \n      alt=\"@its_a_feature_ on Twitter\"/></a>\n<a href=\"https://ghst.ly/BHSlack\">\n    <img src=\"https://img.shields.io/badge/BloodHound Slack-4A154B?logo=slack&logoColor=white\"\n        alt=\"chat on Bloodhound Slack\"></a>\n<a href=\"https://github.com/specterops#mythic\">\n    <img src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fspecterops%2F.github%2Fmain%2Fconfig%2Fshield.json\"\n      alt=\"Sponsored by SpecterOps\"/>\n</a>\n</p>\n\n# Mythic\nA cross-platform, post-exploit, red teaming framework built with GoLang, docker, docker-compose, and a web browser UI. It's designed to provide a collaborative and user friendly interface for operators, managers, and reporting throughout red teaming. \n\n## Starting Mythic\n\nMythic is controlled via the `mythic-cli` binary. To generate the binary, run `sudo make` from the main Mythic directory. \nFrom there, you can run `sudo ./mythic-cli start` to bring up all default Mythic containers.\n\nMore specific setup instructions, configurations, examples, screenshots, and more can be found on the [Mythic Documentation](https://docs.mythic-c2.net) website.\n\n## Installing Agents and C2 Profiles\n\nThe Mythic repository itself does not host any Payload Types or any C2 Profiles. Instead, Mythic provides a command, `./mythic-cli install github <url> [branch name] [-f]`, that can be used to install agents into a current Mythic instance.\n\nPayload Types and C2 Profiles can be found on the [overview](https://mythicmeta.github.io/overview) page.\n\nTo install an agent, simply run the script and provide an argument of the path to the agent on GitHub:\n```bash\nsudo ./mythic-cli install github https://github.com/MythicAgents/apfell\n```\n\nThe same is true for installing C2 Profiles:\n```bash\nsudo ./mythic-cli install github https://github.com/MythicC2Profiles/http\n```\n\nThis allows the agents and c2 profiles to be updated at a much more regular pace and separates out the Mythic Core components from the rest of Mythic.\n\n## Updating\n\nUse the `./mythic-cli update` command to check for available updates across `mythic-cli`, `mythic_server`, and `mythic_react`'s UI. \nThis will _NOT_ do the update for you, but let you know if an update exists. To check for updates against a specific branch, use `./mythic-cli update -b [branch name]`.\n\n\n## Mythic Docker Containers\n<p align=\"left\">\n  <img src=\"https://img.shields.io/docker/v/itsafeaturemythic/mythic_go_base?color=green&label=Latest Release&sort=semver\" alt=\"latest docker versions\"/> \n  <img src=\"https://img.shields.io/github/v/release/MythicMeta/Mythic_Docker_Templates?include_prereleases&label=Latest%20Pre-Release\"/>\n</p>\n\nMythic uses Docker and Docker-compose for all of its components, which allows Mythic to provide a wide range of components and features without having requirements exist on the host. However, it can be helpful to have insight into how the containers are configured. All of Mythic's docker containers are hosted on DockerHub under [itsafeaturemythic](https://hub.docker.com/search?q=itsafeaturemythic&type=image).\n\n- [mythic_go_base](https://hub.docker.com/repository/docker/itsafeaturemythic/mythic_go_base/general) - [Dockerfile](https://github.com/MythicMeta/Mythic_Docker_Templates/tree/master/mythic_go_base)\n  - <img src=\"https://img.shields.io/docker/image-size/itsafeaturemythic/mythic_go_base/latest\" alt=\"image size\"/>\n  - <img src=\"https://img.shields.io/docker/pulls/itsafeaturemythic/mythic_go_base\" alt=\"docker pull count\" />\n- [mythic_go_dotnet](https://hub.docker.com/repository/docker/itsafeaturemythic/mythic_go_dotnet/general) - [Dockerfile](https://github.com/MythicMeta/Mythic_Docker_Templates/tree/master/mythic_go_dotnet)\n  - <img src=\"https://img.shields.io/docker/image-size/itsafeaturemythic/mythic_go_dotnet/latest\" alt=\"image size\"/>\n  - <img src=\"https://img.shields.io/docker/pulls/itsafeaturemythic/mythic_go_dotnet\" alt=\"docker pull count\"/>\n- [mythic_go_macos](https://hub.docker.com/repository/docker/itsafeaturemythic/mythic_go_macos/general) - [Dockerfile](https://github.com/MythicMeta/Mythic_Docker_Templates/tree/master/mythic_go_macos)\n  - <img src=\"https://img.shields.io/docker/image-size/itsafeaturemythic/mythic_go_macos/latest\" alt=\"image size\"/>\n  - <img src=\"https://img.shields.io/docker/pulls/itsafeaturemythic/mythic_go_macos\" alt=\"docker pull count\"/>\n- [mythic_python_base](https://hub.docker.com/repository/docker/itsafeaturemythic/mythic_python_base/general) - [Dockerfile](https://github.com/MythicMeta/Mythic_Docker_Templates/tree/master/mythic_python_base)\n  - <img src=\"https://img.shields.io/docker/image-size/itsafeaturemythic/mythic_python_base/latest\" alt=\"image size\"/>\n  - <img src=\"https://img.shields.io/docker/pulls/itsafeaturemythic/mythic_python_base\" alt=\"docker pull count\"/>\n- [mythic_python_dotnet](https://hub.docker.com/repository/docker/itsafeaturemythic/mythic_python_dotnet/general) - [Dockerfile](https://github.com/MythicMeta/Mythic_Docker_Templates/tree/master/mythic_python_dotnet)\n  - <img src=\"https://img.shields.io/docker/image-size/itsafeaturemythic/mythic_python_dotnet/latest\" alt=\"image size\"/>\n  - <img src=\"https://img.shields.io/docker/pulls/itsafeaturemythic/mythic_python_dotnet\" alt=\"docker pull count\"/>\n- [mythic_python_macos](https://hub.docker.com/repository/docker/itsafeaturemythic/mythic_python_macos/general) - [Dockerfile](https://github.com/MythicMeta/Mythic_Docker_Templates/tree/master/mythic_python_macos)\n  - <img src=\"https://img.shields.io/docker/image-size/itsafeaturemythic/mythic_python_macos/latest\" alt=\"image size\"/>\n  - <img src=\"https://img.shields.io/docker/pulls/itsafeaturemythic/mythic_python_macos\" alt=\"docker pull count\"/>\n- [mythic_python_go](https://hub.docker.com/repository/docker/itsafeaturemythic/mythic_python_go/general) - [Dockerfile](https://github.com/MythicMeta/Mythic_Docker_Templates/tree/master/mythic_python_go)\n  - <img src=\"https://img.shields.io/docker/image-size/itsafeaturemythic/mythic_python_go/latest\" alt=\"image size\"/>\n  - <img src=\"https://img.shields.io/docker/pulls/itsafeaturemythic/mythic_python_go\" alt=\"docker pull count\"/>\n\nAdditionally, Mythic uses a custom PyPi package (mythic_container) and a custom Golang package (https://github.com/MythicMeta/MythicContainer) to help control and sync information between all the containers as well as providing an easy way to script access to the server.\n\nDockerfiles for each of these Docker images can be found on [MythicMeta](https://github.com/MythicMeta/Mythic_Docker_Templates).\n\n### mythic-container PyPi\n<p align=\"left\">\n  <img src=\"https://img.shields.io/pypi/dm/mythic-container\" alt=\"mythic-container downloads\" />\n  <img src=\"https://img.shields.io/pypi/pyversions/mythic-container\" alt=\"mythic-container python version\" />\n  <img src=\"https://img.shields.io/pypi/v/mythic-container?color=green&label=Latest%20stable%20PyPi\" alt=\"mythic-container version\" />\n  <img src=\"https://img.shields.io/github/v/release/MythicMeta/MythicContainerPypi?include_prereleases&label=Latest Pre-Release&color=orange\" alt=\"latest release\" />\n</p>\n\nThe `mythic-container` PyPi package source code is available on [MythicMeta](https://github.com/MythicMeta/MythicContainerPyPi) and is automatically installed on all of the `mythic_python_*` Docker images.\n\nThis PyPi package is responsible for connecting to RabbitMQ, syncing your data to Mythic, and responding to things like Tasking, Webhooks, and configuration updates.\n\n### github.com/MythicMeta/MythicContainer\n<p align=\"left\">\n  <img src=\"https://img.shields.io/github/go-mod/go-version/MythicMeta/MythicContainer\" alt=\"MythicContainer go version\"/>\n  <img src=\"https://img.shields.io/github/v/release/MythicMeta/MythicContainer?label=Latest%20Stable&color=green\" alt=\"MythicContainer latest stable version\" />\n  <img src=\"https://img.shields.io/github/v/release/MythicMeta/MythicContainer?include_prereleases&label=Latest Pre-Release&color=orange\" alt=\"MythicContainer latest version\" />\n</p>\n\nThe `github.com/MythicMeta/MythicContainer` Golang package source code is available on [MythicMeta](https://github.com/MythicMeta/MythicContainer).\n\nThis Golang package is responsible for connecting to RabbitMQ, syncing your data to Mythic, and responding to things like Tasking, Webhooks, and configuration updates.\n\n## Mythic Scripting\n<p align=\"left\">\n  <img src=\"https://img.shields.io/pypi/dm/mythic\" alt=\"mythic scripting downloads\" />\n  <img src=\"https://img.shields.io/pypi/pyversions/mythic\" alt=\"mythic scripting python version\" />\n  <img src=\"https://img.shields.io/pypi/v/mythic?color=green&label=Latest%20Stable%20PyPi\" alt=\"mythic scripting latest pypi version\" />\n<img src=\"https://img.shields.io/github/v/release/MythicMeta/Mythic_Scripting?include_prereleases&label=Latest Pre-Release&color=orange\" alt=\"latest release\" />\n</p>\n\n\n* Scripting source code (https://github.com/MythicMeta/Mythic_Scripting)\n\n## Documentation\n\nAll documentation for the Mythic project is being maintained on the [docs.mythic-c2.net](https://docs.mythic-c2.net) website.\n\n\n## Contributions\n\nA bunch of people have suffered through bug reports, changes, and fixes to help make this project better. Thank you!\n\nThe following people have contributed a lot to the project. As you see their handles throughout the project on Payload Types and C2 Profiles, be sure to reach out to them for help and contributions:\n- [@djhohnstein](https://twitter.com/djhohnstein)\n- [@xorrior](https://twitter.com/xorrior)\n- [@Airzero24](https://twitter.com/airzero24)\n- [@SpecterOps](https://twitter.com/specterops)\n\n## Liability\n\nThis is an open source project meant to be used with authorization to assess the security posture and for research purposes.\n\n## Historic References\n\n* Check out a [series of YouTube videos](https://www.youtube.com/playlist?list=PLHVFedjbv6sNLB1QqnGJxRBMukPRGYa-H) showing how Mythic looks/works and highlighting a few key features\n* Check out the [blog post](https://posts.specterops.io/a-change-of-mythic-proportions-21debeb03617) on the rebranding.\n* BSides Seattle 2019 Slides: [Ready Player 2: Multiplayer Red Teaming against macOS](https://www.slideshare.net/CodyThomas6/ready-player-2-multiplayer-red-teaming-against-macos)\n* BSides Seattle 2019 Demo Videos: [Available on my Youtube](https://www.youtube.com/playlist?list=PLHVFedjbv6sOz8OGuLdomdkr6-7VdMRQ9)\n* Objective By the Sea 2019 talk on JXA: https://objectivebythesea.com/v2/talks/OBTS_v2_Thomas.pdf\n* Objective By the sea 2019 Video: https://www.youtube.com/watch?v=E-QEsGsq3uI&list=PLliknDIoYszvTDaWyTh6SYiTccmwOsws8&index=17  \n\n## File Icon Attribution\n\n* [bin/txt file icons](https://www.flaticon.com/packs/file-types-31?word=file%20extension) - created by Icon home - Flaticon"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.001953125,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe following the table details the supported versions of Mythic.\n\n| Version | Supported          |\n|---------| ------------------ |\n| 3.0.0   | :white_check_mark: |\n| 2.3.13  | :x:                |\n| 2.3.9   | :x:                |\n| < 2.3.0 | :x:                |\n\n\n## Reporting a Vulnerability\n\nIf you find a vulnerability with Mythic, please reach out via twitter (@its_a_feature_), open an issue on this GitHub repo, or reach out via the Bloodhound Slack to the user @its_a_feature_.\n\nPlease make sure you include what the vulnerability/issue is and have either replication steps or a proof of concept for me to look at. \nI'll do my best to reproduce it locally and hopefully get a fix within 48 hours. If it's not something I can easily fix, we can work on a timeline.\nI can't offer any cash prize for finding issues, but I can get a swag bag sent out to you.\n\nIf it's something that you send privately to me, please don't publicly report it until we're able to determine a fix. "
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.009765625,
          "content": "3.3.1-rc35"
        },
        {
          "name": "documentation-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "grafana-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "hasura-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "install_docker_debian.sh",
          "type": "blob",
          "size": 0.4501953125,
          "content": "#! /bin/bash\nif [ \"$EUID\" -ne 0 ]\n  then echo \"[-] Please run as root\"\n  exit\nfi\n\napt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common\ncurl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -\nadd-apt-repository -y \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"\napt update\napt-get install -y --no-install-recommends docker-ce docker-compose-plugin\n"
        },
        {
          "name": "install_docker_kali.sh",
          "type": "blob",
          "size": 0.689453125,
          "content": "#! /bin/bash\nif [ \"$EUID\" -ne 0 ]\n  then echo \"[-] Please run as root\"\n  exit\nfi\n\n# Pulls updates for the kali repo's and upgrades the current packages in Kali Linux\napt update\n\n# Install Docker and Docker Compose\n#apt install docker.io docker-compose -y\napt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common\ncurl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -\nadd-apt-repository -y \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/debian bookworm stable\"\napt update\napt-get install -y --no-install-recommends docker-ce docker-compose-plugin\n# apt-get install -y --no-install-recommends docker-ce docker-ce-cli containerd.io"
        },
        {
          "name": "install_docker_ubuntu.sh",
          "type": "blob",
          "size": 0.6435546875,
          "content": "#! /bin/bash\nif [ \"$EUID\" -ne 0 ]\n  then echo \"[-] Please run as root\"\n  exit\nfi\n\n# install the required services, pull docker the right docker for debian\napt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\nadd-apt-repository -y \\\n   \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\napt-get update\n\n#apt-get install -y docker-ce docker-ce-cli containerd.io\napt-get install -y --no-install-recommends docker-ce docker-compose-plugin\n"
        },
        {
          "name": "jupyter-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "mythic-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "mythic-react-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "postgres-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "postgres-exporter-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "prometheus-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "rabbitmq-docker",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}