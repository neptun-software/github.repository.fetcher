{
  "metadata": {
    "timestamp": 1736562137638,
    "page": 943,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "angular/quickstart",
      "stars": 3111,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2900390625,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n\n[*.md]\nmax_line_length = 0\ntrim_trailing_whitespace = false\n\n# Indentation override\n#[lib/**.js]\n#[{package.json,.travis.yml}]\n#[**/**.js]\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.20703125,
          "content": ".idea\nnode_modules\njspm_packages\nnpm-debug.log\ndebug.log\nsrc/**/*.js\n!src/systemjs.config.extras.js\n!src/systemjs.config.js\n!src/systemjs-angular-loader.js\n*.js.map\ne2e/**/*.js\ne2e/**/*.js.map\n_test-output\n_temp\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3154296875,
          "content": "dist: trusty\nsudo: required\nlanguage: node_js\nnode_js:\n  - \"5\"\nos:\n  - linux\nenv:\n  global:\n    - DBUS_SESSION_BUS_ADDRESS=/dev/null\n    - DISPLAY=:99.0\n    - CHROME_BIN=chromium-browser\nbefore_script:\n  - sh -e /etc/init.d/xvfb start\ninstall:\n  - npm install\nscript:\n  - npm run lint\n  - npm run test:once\n  - npm run e2e\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.6708984375,
          "content": "## Angular Documentation QuickStart Changelog\nUpgraders: for a fresh start, consider running these commands \n* `git clean -xdf` \n* `npm install`\n\n<a name=\"0.4.1\"></a>\n# 0.4.1 (2017-03-24)\n* Replace systemjs-angular-loader with version that works for IE\n\n<a name=\"0.4.0\"></a>\n# 0.4.0 (2017-03-24)\n* Update to Angular 4.0.0\n\n<a name=\"0.3.0\"></a>\n# 0.3.0 (2017-03-22)\n* Remove moduleId with a systemjs loader.\n\n<a name=\"0.2.22\"></a>\n# 0.2.22 (2017-01-05)\n* Add `non-essential-files.txt` and instructions to use it to README\n\n<a name=\"0.2.21\"></a>\n# 0.2.21 (2016-12-14)\n* Update to in-memory-web-api v.0.2.1\n\n<a name=\"0.2.20\"></a>\n# 0.2.20 (2016-12-07)\n* Update to Angular 2.3.0\n\n<a name=\"0.2.19\"></a>\n# 0.2.19 (2016-11-30)\n* remove upgrade mappings from `systemjs.config.js` PR #301\n\n<a name=\"0.2.18\"></a>\n# 0.2.18 (2016-11-30)\n* remove `exclude` clause from `tsconfig.json`; it was just confusing people\n* karma.config + karma-test-shim can handle multiple spec source paths (issue #294)\n* cosmetic `app.component.spec.ts` changes\n* cosmetic `karma.config.js` changes\n\n<a name=\"0.2.17\"></a>\n# 0.2.17 (2016-11-16)\n* Conform to updated QuickStart advice\n  * removed docker everywhere (was nice but not necessary)\n  * removed wallaby\n  * shrink styles.css\n  * refine tsconfig.json\n  * `AppComponent` uses interpolation\n\n<a name=\"0.2.16\"></a>\n# 0.2.16 (2016-11-14)\n* Update to Angular 2.2.0\n\n<a name=\"0.2.15\"></a>\n# 0.2.15 (2016-10-29)\n* Revert to Jasmine 2.4.1 because bug in 2.5.x (see [jasmine issue #1231](https://github.com/jasmine/jasmine/issues/1231))\n\n<a name=\"0.2.14\"></a>\n# 0.2.14 (2016-10-29)\n* Remove bootstrap.css install\n* Angular v2.1.2\n\n<a name=\"0.2.13\"></a>\n# 0.2.13 (2016-10-20)\n* Protractor 4\n* Move from `typings` to `@types`. See `tsconfig.json` changes.\n* Angular v2.1.1\n\n<a name=\"0.2.12\"></a>\n# 0.2.12 (2016-10-06)\n* Angular v2.1.0\n\n<a name=\"0.2.11\"></a>\n# 0.2.11 (2016-10-06)\n* Angular v2.0.2\n* License is MIT\n* Current testing configuration\n* No code changes\n\n<a name=\"0.2.10\"></a>\n# 0.2.10 (2016-09-19)\n* All \"Angular 2\" references become just \"Angular\"\n* No code changes\n\n<a name=\"0.2.9\"></a>\n# 0.2.9 (2016-09-14)\n* Angular 2.0.0 version\n* Update to Typescript 2.0.2\n* Fix e2e test missing dir\n\n<a name=\"0.2.8\"></a>\n# 0.2.8 (2016-09-01)\n* remove @angular test libraries from system.js (now in shim)\n* update test related files\n* wallaby doesn't completely work. Researching.\n\n<a name=\"0.2.7\"></a>\n# 0.2.7 (2016-08-31)\n* Angular 2 RC6 version\n* Updated new forms, router, angular2-in-memory-web-api, karma, core-js, rxjs and zone.js packages\n* Removed router-deprecated package\n* Updated karma.conf.js and systemjs.config.js\n\n<a name=\"0.2.6\"></a>\n# 0.2.6 (2016-08-09)\n* Angular 2 RC5 version\n* Updated new forms, router and angular2-in-memory-web-api\n\n<a name=\"0.2.5\"></a>\n# 0.2.5 (2016-06-30)\n* Angular 2 RC4 version\n* Updated new forms and router\n\n<a name=\"0.2.4\"></a>\n# 0.2.4 (2016-06-21)\n* Angular 2 RC3 version\n* Add new forms and router\n* Add support for TS e2e tests\n\n<a name=\"0.2.3\"></a>\n# 0.2.3 (2016-06-15)\n* Angular 2 RC2 version\n\n<a name=\"0.2.2\"></a>\n# 0.2.2 (2016-05-21)\n* Update to Typings 1.x\n\n<a name=\"0.2.1\"></a>\n# 0.2.1 (2016-05-03)\n* Angular 2 RC01 version\n  \n<a name=\"0.2.0\"></a>\n# 0.2.0 (2016-05-02)\n* Angular 2 RC0 version\n  \n<a name=\"0.1.17\"></a>\n# 0.1.17 (2016-04-29)\n* update packages\n  * Angular 2 beta 17\n  * RxJS 5.0.0-beta.6\n  * a2-in-memory-web-api 0.1.17\n\n<a name=\"0.1.16\"></a>\n# 0.1.16 (2016-04-26)\n* update packages\n  * Angular 2 beta 16\n  * a2-in-memory-web-api 0.1.6\n  * protractor 3.3.0\n  * typings 0.8.1\n  * zone.js 0.6.12\n\n * added favicon.ico\n\n * testing\n   - updated wallaby.js and karma.conf.js\n   - updated app.component.spec.ts\n\n\n <a name=\"0.1.15\"></a>\n# 0.1.15 (2016-04-13)\n* Add testing support\n  * npm scripts\n  * karma/jasmine\n  * protractor\n\n* update packages\n  * Angular 2 beta 15\n  * lite-server 2.2.0\n  * systemjs 0.19.26\n  * typescript 1.8.10\n  * typings 0.7.12\n\n* add run packages\n  * a2-in-memory-web-api\n\n* add testing dev-dependency packages\n  * canonical-path: 0.0.2,\n  * http-server: ^0.9.0,\n  * jasmine-core: ~2.4.1,\n  * karma: ^0.13.22,\n  * karma-chrome-launcher: ^0.2.3,\n  * karma-cli: ^0.1.2,\n  * karma-htmlfile-reporter: ^0.2.2,\n  * karma-jasmine: ^0.3.8,\n  * protractor: ^3.2.2,\n  * rimraf: ^2.5.2  \n\n<a name=\"0.1.14\"></a>\n# 0.1.14 (2016-04-07)\n* update packages\n  * Angular 2 beta 14\n  * lite-server 2.2.0\n  * typings 0.7.12\n\n<a name=\"0.1.13\"></a>\n# 0.1.13 (2016-03-31)\n* update packages\n  * Angular 2 beta 13\n\n<a name=\"0.1.12\"></a>\n# 0.1.12 (2016-03-23)\n* update packages\n  * Angular 2 beta 12\n  * zones 0.6.6\n* remove es6-promise because no longer needed.\n\n<a name=\"0.1.11\"></a>\n# 0.1.11 (2016-03-18)\n* update packages\n  * Angular 2 beta 11\n  * zones 0.6.4\n  * typescript 1.8.9\n  * typings 0.7.9\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License\n\nCopyright (c) 2014-2016 Google, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.7392578125,
          "content": "# Angular QuickStart Source\n[![Build Status][travis-badge]][travis-badge-url]\n\n**This repository is now deprecated. The Angular Quickstart project was a nice starting point for creating Angular applications. Now we recommend using the [Angular CLI](https://github.com/angular/angular-cli) to create new Angular projects.**\n\n**Starting from 1 November 2017, all the Angular documentation, at [angular.io](https://angular.io), is based on the Angular CLI.**\n\n**Let's [get started](https://angular.io/guide/quickstart)**\n\n---\n\nThis repository holds the TypeScript source code of the [angular.io quickstart](https://angular.io/docs/ts/latest/quickstart.html),\nthe foundation for most of the documentation samples and potentially a good starting point for your application.\n\nIt's been extended with testing support so you can start writing tests immediately.\n\n**This is not the perfect arrangement for your application. It is not designed for production.\nIt exists primarily to get you started quickly with learning and prototyping in Angular**\n\nWe are unlikely to accept suggestions about how to grow this QuickStart into something it is not.\nPlease keep that in mind before posting issues and PRs.\n\n## Updating to a newer version of the Quickstart Repo\n\nFrom time to time the QuickStart will be enhanced with support for new features or to reflect\nchanges to the [official Style Guide](https://angular.io/docs/ts/latest/guide/style-guide.html).\n\nYou can update your existing project to an up-to-date QuickStart by following these instructions:\n- Create a new project using the [instructions below](#create-a-new-project-based-on-the-quickstart)\n- Copy the code you have in your project's `main.ts` file onto `src/app/main.ts` in the new project\n- Copy your old `app` folder into `src/app`\n- Delete `src/app/main.ts` if you have one (we now use `src/main.ts` instead)\n- Copy your old `index.html`, `styles.css` and `tsconfig.json` into `src/`\n- Install all your third party dependencies\n- Copy your old `e2e/` folder into `e2e/`\n- Copy over any other files you added to your project\n- Copy your old `.git` folder into your new project's root\n\nNow you can continue working on the new project.\n\n## Prerequisites\n\nNode.js and npm are essential to Angular development. \n    \n<a href=\"https://docs.npmjs.com/getting-started/installing-node\" target=\"_blank\" title=\"Installing Node.js and updating npm\">\nGet it now</a> if it's not already installed on your machine.\n \n**Verify that you are running at least node `v4.x.x` and npm `3.x.x`**\nby running `node -v` and `npm -v` in a terminal/console window.\nOlder versions produce errors.\n\nWe recommend [nvm](https://github.com/creationix/nvm) for managing multiple versions of node and npm.\n\n## Create a new project based on the QuickStart\n\nClone this repo into new project folder (e.g., `my-proj`).\n```shell\ngit clone https://github.com/angular/quickstart  my-proj\ncd my-proj\n```\n\nWe have no intention of updating the source on `angular/quickstart`.\nDiscard the `.git` folder..\n```shell\nrm -rf .git  # OS/X (bash)\nrd .git /S/Q # windows\n```\n### Delete _non-essential_ files (optional)\n\nYou can quickly delete the _non-essential_ files that concern testing and QuickStart repository maintenance\n(***including all git-related artifacts*** such as the `.git` folder and `.gitignore`!)\nby entering the following commands while in the project folder:\n\n##### OS/X (bash)\n```shell\nxargs rm -rf < non-essential-files.osx.txt\nrm src/app/*.spec*.ts\nrm non-essential-files.osx.txt\n```\n\n##### Windows\n```shell\nfor /f %i in (non-essential-files.txt) do del %i /F /S /Q\nrd .git /s /q\nrd e2e /s /q\n```\n\n### Create a new git repo\nYou could [start writing code](#start-development) now and throw it all away when you're done.\nIf you'd rather preserve your work under source control, consider taking the following steps.\n\nInitialize this project as a *local git repo* and make the first commit:\n```shell\ngit init\ngit add .\ngit commit -m \"Initial commit\"\n```\n\n>Recover the deleted `.gitignore` from the QuickStart repository \nif you lost it in the _Delete non-essential files_ step.\n\nCreate a *remote repository* for this project on the service of your choice.\n\nGrab its address (e.g. *`https://github.com/<my-org>/my-proj.git`*) and push the *local repo* to the *remote*.\n```shell\ngit remote add origin <repo-address>\ngit push -u origin master\n```\n## Install npm packages\n\n> See npm and nvm version notes above\n\nInstall the npm packages described in the `package.json` and verify that it works:\n\n```shell\nnpm install\nnpm start\n```\n\n>Doesn't work in _Bash for Windows_ which does not support servers as of January, 2017.\n\nThe `npm start` command first compiles the application, \nthen simultaneously re-compiles and runs the `lite-server`.\nBoth the compiler and the server watch for file changes.\n\nShut it down manually with `Ctrl-C`.\n\nYou're ready to write your application.\n\n### npm scripts\n\nWe've captured many of the most useful commands in npm scripts defined in the `package.json`:\n\n* `npm start` - runs the compiler and a server at the same time, both in \"watch mode\".\n* `npm run build` - runs the TypeScript compiler once.\n* `npm run build:w` - runs the TypeScript compiler in watch mode; the process keeps running, awaiting changes to TypeScript files and re-compiling when it sees them.\n* `npm run serve` - runs the [lite-server](https://www.npmjs.com/package/lite-server), a light-weight, static file server, written and maintained by\n[John Papa](https://github.com/johnpapa) and\n[Christopher Martin](https://github.com/cgmartin)\nwith excellent support for Angular apps that use routing.\n\nHere are the test related scripts:\n* `npm test` - compiles, runs and watches the karma unit tests\n* `npm run e2e` - compiles and run protractor e2e tests, written in Typescript (*e2e-spec.ts)\n\n## Testing\n\nThe QuickStart documentation doesn't discuss testing.\nThis repo adds both karma/jasmine unit test and protractor end-to-end testing support.\n\nThese tools are configured for specific conventions described below.\n\n*It is unwise and rarely possible to run the application, the unit tests, and the e2e tests at the same time.\nWe recommend that you shut down one before starting another.*\n\n### Unit Tests\nTypeScript unit-tests are usually in the `src/app` folder. Their filenames must end in `.spec.ts`.\n\nLook for the example `src/app/app.component.spec.ts`.\nAdd more `.spec.ts` files as you wish; we configured karma to find them.\n\nRun it with `npm test`\n\nThat command first compiles the application, then simultaneously re-compiles and runs the karma test-runner.\nBoth the compiler and the karma watch for (different) file changes.\n\nShut it down manually with `Ctrl-C`.\n\nTest-runner output appears in the terminal window.\nWe can update our app and our tests in real-time, keeping a weather eye on the console for broken tests.\nKarma is occasionally confused and it is often necessary to shut down its browser or even shut the command down (`Ctrl-C`) and\nrestart it. No worries; it's pretty quick.\n\n### End-to-end (E2E) Tests\n\nE2E tests are in the `e2e` directory, side by side with the `src` folder.\nTheir filenames must end in `.e2e-spec.ts`.\n\nLook for the example `e2e/app.e2e-spec.ts`.\nAdd more `.e2e-spec.js` files as you wish (although one usually suffices for small projects);\nwe configured Protractor to find them.\n\nThereafter, run them with `npm run e2e`.\n\nThat command first compiles, then simultaneously starts the `lite-server` at `localhost:8080`\nand launches Protractor.  \n\nThe pass/fail test results appear at the bottom of the terminal window.\nA custom reporter (see `protractor.config.js`) generates a  `./_test-output/protractor-results.txt` file\nwhich is easier to read; this file is excluded from source control.\n\nShut it down manually with `Ctrl-C`.\n\n[travis-badge]: https://travis-ci.org/angular/quickstart.svg?branch=master\n[travis-badge-url]: https://travis-ci.org/angular/quickstart\n"
        },
        {
          "name": "bs-config.e2e.json",
          "type": "blob",
          "size": 0.19921875,
          "content": "{\n  \"open\": false,\n  \"logLevel\": \"silent\",\n  \"port\": 8080,\n  \"server\": {\n    \"baseDir\": \"src\",\n    \"routes\": {\n      \"/node_modules\": \"node_modules\"\n    },\n    \"middleware\": {\n      \"0\": null\n    }\n  }\n}\n"
        },
        {
          "name": "bs-config.json",
          "type": "blob",
          "size": 0.1015625,
          "content": "{\n  \"server\": {\n    \"baseDir\": \"src\",\n    \"routes\": {\n      \"/node_modules\": \"node_modules\"\n    }\n  }\n}\n"
        },
        {
          "name": "e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "karma-test-shim.js",
          "type": "blob",
          "size": 3.2412109375,
          "content": "// /*global jasmine, __karma__, window*/\nError.stackTraceLimit = 0; // \"No stacktrace\"\" is usually best for app testing.\n\n// Uncomment to get full stacktrace output. Sometimes helpful, usually not.\n// Error.stackTraceLimit = Infinity; //\n\njasmine.DEFAULT_TIMEOUT_INTERVAL = 1000;\n\n// builtPaths: root paths for output (\"built\") files\n// get from karma.config.js, then prefix with '/base/' (default is 'src/')\nvar builtPaths = (__karma__.config.builtPaths || ['src/'])\n                 .map(function(p) { return '/base/'+p;});\n\n__karma__.loaded = function () { };\n\nfunction isJsFile(path) {\n  return path.slice(-3) == '.js';\n}\n\nfunction isSpecFile(path) {\n  return /\\.spec\\.(.*\\.)?js$/.test(path);\n}\n\n// Is a \"built\" file if is JavaScript file in one of the \"built\" folders\nfunction isBuiltFile(path) {\n  return isJsFile(path) &&\n         builtPaths.reduce(function(keep, bp) {\n           return keep || (path.substr(0, bp.length) === bp);\n         }, false);\n}\n\nvar allSpecFiles = Object.keys(window.__karma__.files)\n  .filter(isSpecFile)\n  .filter(isBuiltFile);\n\nSystem.config({\n  // Base URL for System.js calls. 'base/' is where Karma serves files from.\n  baseURL: 'base/src',\n  // Extend usual application package list with test folder\n  packages: { 'testing': { main: 'index.js', defaultExtension: 'js' } },\n\n  // Assume npm: is set in `paths` in systemjs.config\n  // Map the angular testing umd bundles\n  map: {\n    '@angular/core/testing': 'npm:@angular/core/bundles/core-testing.umd.js',\n    '@angular/common/testing': 'npm:@angular/common/bundles/common-testing.umd.js',\n    '@angular/compiler/testing': 'npm:@angular/compiler/bundles/compiler-testing.umd.js',\n    '@angular/platform-browser/testing': 'npm:@angular/platform-browser/bundles/platform-browser-testing.umd.js',\n    '@angular/platform-browser-dynamic/testing': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic-testing.umd.js',\n    '@angular/http/testing': 'npm:@angular/http/bundles/http-testing.umd.js',\n    '@angular/router/testing': 'npm:@angular/router/bundles/router-testing.umd.js',\n    '@angular/forms/testing': 'npm:@angular/forms/bundles/forms-testing.umd.js',\n  },\n});\n\nSystem.import('systemjs.config.js')\n  .then(importSystemJsExtras)\n  .then(initTestBed)\n  .then(initTesting);\n\n/** Optional SystemJS configuration extras. Keep going w/o it */\nfunction importSystemJsExtras(){\n  return System.import('systemjs.config.extras.js')\n  .catch(function(reason) {\n    console.log(\n      'Warning: System.import could not load the optional \"systemjs.config.extras.js\". Did you omit it by accident? Continuing without it.'\n    );\n    console.log(reason);\n  });\n}\n\nfunction initTestBed(){\n  return Promise.all([\n    System.import('@angular/core/testing'),\n    System.import('@angular/platform-browser-dynamic/testing')\n  ])\n\n  .then(function (providers) {\n    var coreTesting    = providers[0];\n    var browserTesting = providers[1];\n\n    coreTesting.TestBed.initTestEnvironment(\n      browserTesting.BrowserDynamicTestingModule,\n      browserTesting.platformBrowserDynamicTesting());\n  })\n}\n\n// Import all spec files and start karma\nfunction initTesting () {\n  return Promise.all(\n    allSpecFiles.map(function (moduleName) {\n      return System.import(moduleName);\n    })\n  )\n  .then(__karma__.start, __karma__.error);\n}\n"
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 3.404296875,
          "content": "module.exports = function(config) {\n\n  var appBase    = 'src/';       // transpiled app JS and map files\n  var appSrcBase = appBase;      // app source TS files\n\n  // Testing helpers (optional) are conventionally in a folder called `testing`\n  var testingBase    = 'testing/'; // transpiled test JS and map files\n  var testingSrcBase = 'testing/'; // test source TS files\n\n  config.set({\n    basePath: '',\n    frameworks: ['jasmine'],\n\n    plugins: [\n      require('karma-jasmine'),\n      require('karma-chrome-launcher'),\n      require('karma-jasmine-html-reporter')\n    ],\n\n    client: {\n      builtPaths: [appBase, testingBase], // add more spec base paths as needed\n      clearContext: false // leave Jasmine Spec Runner output visible in browser\n    },\n\n    customLaunchers: {\n      // From the CLI. Not used here but interesting\n      // chrome setup for travis CI using chromium\n      Chrome_travis_ci: {\n        base: 'Chrome',\n        flags: ['--no-sandbox']\n      }\n    },\n\n    files: [\n      // System.js for module loading\n      'node_modules/systemjs/dist/system.src.js',\n\n      // Polyfills\n      'node_modules/core-js/client/shim.js',\n\n      // zone.js\n      'node_modules/zone.js/dist/zone.js',\n      'node_modules/zone.js/dist/long-stack-trace-zone.js',\n      'node_modules/zone.js/dist/proxy.js',\n      'node_modules/zone.js/dist/sync-test.js',\n      'node_modules/zone.js/dist/jasmine-patch.js',\n      'node_modules/zone.js/dist/async-test.js',\n      'node_modules/zone.js/dist/fake-async-test.js',\n\n      // RxJs\n      { pattern: 'node_modules/rxjs/**/*.js', included: false, watched: false },\n      { pattern: 'node_modules/rxjs/**/*.js.map', included: false, watched: false },\n\n      // Paths loaded via module imports:\n      // Angular itself\n      { pattern: 'node_modules/@angular/**/*.js', included: false, watched: false },\n      { pattern: 'node_modules/@angular/**/*.js.map', included: false, watched: false },\n\n      { pattern: appBase + '/systemjs.config.js', included: false, watched: false },\n      { pattern: appBase + '/systemjs.config.extras.js', included: false, watched: false },\n      'karma-test-shim.js', // optionally extend SystemJS mapping e.g., with barrels\n\n      // transpiled application & spec code paths loaded via module imports\n      { pattern: appBase + '**/*.js', included: false, watched: true },\n      { pattern: testingBase + '**/*.js', included: false, watched: true },\n\n\n      // Asset (HTML & CSS) paths loaded via Angular's component compiler\n      // (these paths need to be rewritten, see proxies section)\n      { pattern: appBase + '**/*.html', included: false, watched: true },\n      { pattern: appBase + '**/*.css', included: false, watched: true },\n\n      // Paths for debugging with source maps in dev tools\n      { pattern: appBase + '**/*.ts', included: false, watched: false },\n      { pattern: appBase + '**/*.js.map', included: false, watched: false },\n      { pattern: testingSrcBase + '**/*.ts', included: false, watched: false },\n      { pattern: testingBase + '**/*.js.map', included: false, watched: false}\n    ],\n\n    // Proxied base paths for loading assets\n    proxies: {\n      // required for modules fetched by SystemJS\n      '/base/src/node_modules/': '/base/node_modules/'\n    },\n\n    exclude: [],\n    preprocessors: {},\n    reporters: ['progress', 'kjhtml'],\n\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    autoWatch: true,\n    browsers: ['Chrome'],\n    singleRun: false\n  })\n}\n"
        },
        {
          "name": "non-essential-files.osx.txt",
          "type": "blob",
          "size": 0.1669921875,
          "content": ".git .gitignore .travis.yml bs-config.e2e.json CHANGELOG.md e2e favicon.ico karma.conf.js karma-test-shim.js LICENSE non-essential-files.txt protractor.config.js README.md"
        },
        {
          "name": "non-essential-files.txt",
          "type": "blob",
          "size": 0.220703125,
          "content": ".git\r\n.gitignore\r\n.travis.yml\r\n*.spec*.ts\r\nbs-config.e2e.json\r\nCHANGELOG.md\r\ne2e\r\nfavicon.ico\r\nkarma.conf.js\r\nkarma-test-shim.js\r\nLICENSE\r\nnon-essential-files.txt\r\nnon-essential-files.osx.txt\r\nprotractor.config.js\r\nREADME.md\r\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.9638671875,
          "content": "{\n  \"name\": \"angular-quickstart\",\n  \"version\": \"1.0.0\",\n  \"description\": \"QuickStart package.json from the documentation, supplemented with testing support\",\n  \"scripts\": {\n    \"build\": \"tsc -p src/\",\n    \"build:watch\": \"tsc -p src/ -w\",\n    \"build:e2e\": \"tsc -p e2e/\",\n    \"serve\": \"lite-server -c=bs-config.json\",\n    \"serve:e2e\": \"lite-server -c=bs-config.e2e.json\",\n    \"prestart\": \"npm run build\",\n    \"start\": \"concurrently \\\"npm run build:watch\\\" \\\"npm run serve\\\"\",\n    \"pree2e\": \"npm run build:e2e\",\n    \"e2e\": \"concurrently \\\"npm run serve:e2e\\\" \\\"npm run protractor\\\" --kill-others --success first\",\n    \"preprotractor\": \"webdriver-manager update\",\n    \"protractor\": \"protractor protractor.config.js\",\n    \"pretest\": \"npm run build\",\n    \"test\": \"concurrently \\\"npm run build:watch\\\" \\\"karma start karma.conf.js\\\"\",\n    \"pretest:once\": \"npm run build\",\n    \"test:once\": \"karma start karma.conf.js --single-run\",\n    \"lint\": \"tslint ./src/**/*.ts -t verbose\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@angular/common\": \"~4.3.4\",\n    \"@angular/compiler\": \"~4.3.4\",\n    \"@angular/core\": \"~4.3.4\",\n    \"@angular/forms\": \"~4.3.4\",\n    \"@angular/http\": \"~4.3.4\",\n    \"@angular/platform-browser\": \"~4.3.4\",\n    \"@angular/platform-browser-dynamic\": \"~4.3.4\",\n    \"@angular/router\": \"~4.3.4\",\n\n    \"angular-in-memory-web-api\": \"~0.3.0\",\n    \"systemjs\": \"0.19.40\",\n    \"core-js\": \"^2.4.1\",\n    \"rxjs\": \"5.0.1\",\n    \"zone.js\": \"^0.8.4\"\n  },\n  \"devDependencies\": {\n    \"concurrently\": \"^3.2.0\",\n    \"lite-server\": \"^2.2.2\",\n    \"typescript\": \"~2.1.0\",\n\n    \"canonical-path\": \"0.0.2\",\n    \"tslint\": \"^3.15.1\",\n    \"lodash\": \"^4.16.4\",\n    \"jasmine-core\": \"~2.4.1\",\n    \"karma\": \"^1.3.0\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-cli\": \"^1.0.1\",\n    \"karma-jasmine\": \"^1.0.2\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"protractor\": \"~4.0.14\",\n    \"rimraf\": \"^2.5.4\",\n\n    \"@types/node\": \"^6.0.46\",\n    \"@types/jasmine\": \"2.5.36\"\n  },\n  \"repository\": {}\n}\n"
        },
        {
          "name": "protractor.config.js",
          "type": "blob",
          "size": 4.9306640625,
          "content": "// FIRST TIME ONLY- run:\n//   ./node_modules/.bin/webdriver-manager update\n//\n//   Try: `npm run webdriver:update`\n//\n// AND THEN EVERYTIME ...\n//   1. Compile with `tsc`\n//   2. Make sure the test server (e.g., lite-server: localhost:8080) is running.\n//   3. ./node_modules/.bin/protractor protractor.config.js\n//\n//   To do all steps, try:  `npm run e2e`\n\nvar fs = require('fs');\nvar path = require('canonical-path');\nvar _ = require('lodash');\n\n\nexports.config = {\n  directConnect: true,\n\n  // Capabilities to be passed to the webdriver instance.\n  capabilities: {\n    'browserName': 'chrome'\n  },\n\n  // Framework to use. Jasmine is recommended.\n  framework: 'jasmine',\n\n  // Spec patterns are relative to this config file\n  specs: ['**/*e2e-spec.js' ],\n\n\n  // For angular tests\n  useAllAngular2AppRoots: true,\n\n  // Base URL for application server\n  baseUrl: 'http://localhost:8080',\n\n  // doesn't seem to work.\n  // resultJsonOutputFile: \"foo.json\",\n\n  onPrepare: function() {\n    //// SpecReporter\n    //var SpecReporter = require('jasmine-spec-reporter');\n    //jasmine.getEnv().addReporter(new SpecReporter({displayStacktrace: 'none'}));\n    //// jasmine.getEnv().addReporter(new SpecReporter({displayStacktrace: 'all'}));\n\n    // debugging\n    // console.log('browser.params:' + JSON.stringify(browser.params));\n    jasmine.getEnv().addReporter(new Reporter( browser.params )) ;\n\n    // Allow changing bootstrap mode to NG1 for upgrade tests\n    global.setProtractorToNg1Mode = function() {\n      browser.useAllAngular2AppRoots = false;\n      browser.rootEl = 'body';\n    };\n  },\n\n  jasmineNodeOpts: {\n    // defaultTimeoutInterval: 60000,\n    defaultTimeoutInterval: 10000,\n    showTiming: true,\n    print: function() {}\n  }\n};\n\n// Custom reporter\nfunction Reporter(options) {\n  var _defaultOutputFile = path.resolve(process.cwd(), './_test-output', 'protractor-results.txt');\n  options.outputFile = options.outputFile || _defaultOutputFile;\n\n  initOutputFile(options.outputFile);\n  options.appDir = options.appDir ||  './';\n  var _root = { appDir: options.appDir, suites: [] };\n  log('AppDir: ' + options.appDir, +1);\n  var _currentSuite;\n\n  this.suiteStarted = function(suite) {\n    _currentSuite = { description: suite.description, status: null, specs: [] };\n    _root.suites.push(_currentSuite);\n    log('Suite: ' + suite.description, +1);\n  };\n\n  this.suiteDone = function(suite) {\n    var statuses = _currentSuite.specs.map(function(spec) {\n      return spec.status;\n    });\n    statuses = _.uniq(statuses);\n    var status = statuses.indexOf('failed') >= 0 ? 'failed' : statuses.join(', ');\n    _currentSuite.status = status;\n    log('Suite ' + _currentSuite.status + ': ' + suite.description, -1);\n  };\n\n  this.specStarted = function(spec) {\n\n  };\n\n  this.specDone = function(spec) {\n    var currentSpec = {\n      description: spec.description,\n      status: spec.status\n    };\n    if (spec.failedExpectations.length > 0) {\n      currentSpec.failedExpectations = spec.failedExpectations;\n    }\n\n    _currentSuite.specs.push(currentSpec);\n    log(spec.status + ' - ' + spec.description);\n  };\n\n  this.jasmineDone = function() {\n    outputFile = options.outputFile;\n    //// Alternate approach - just stringify the _root - not as pretty\n    //// but might be more useful for automation.\n    // var output = JSON.stringify(_root, null, 2);\n    var output = formatOutput(_root);\n    fs.appendFileSync(outputFile, output);\n  };\n\n  function ensureDirectoryExistence(filePath) {\n    var dirname = path.dirname(filePath);\n    if (directoryExists(dirname)) {\n      return true;\n    }\n    ensureDirectoryExistence(dirname);\n    fs.mkdirSync(dirname);\n  }\n\n  function directoryExists(path) {\n    try {\n      return fs.statSync(path).isDirectory();\n    }\n    catch (err) {\n      return false;\n    }\n  }\n\n  function initOutputFile(outputFile) {\n    ensureDirectoryExistence(outputFile);\n    var header = \"Protractor results for: \" + (new Date()).toLocaleString() + \"\\n\\n\";\n    fs.writeFileSync(outputFile, header);\n  }\n\n  // for output file output\n  function formatOutput(output) {\n    var indent = '  ';\n    var pad = '  ';\n    var results = [];\n    results.push('AppDir:' + output.appDir);\n    output.suites.forEach(function(suite) {\n      results.push(pad + 'Suite: ' + suite.description + ' -- ' + suite.status);\n      pad+=indent;\n      suite.specs.forEach(function(spec) {\n        results.push(pad + spec.status + ' - ' + spec.description);\n        if (spec.failedExpectations) {\n          pad+=indent;\n          spec.failedExpectations.forEach(function (fe) {\n            results.push(pad + 'message: ' + fe.message);\n          });\n          pad=pad.substr(2);\n        }\n      });\n      pad = pad.substr(2);\n      results.push('');\n    });\n    results.push('');\n    return results.join('\\n');\n  }\n\n  // for console output\n  var _pad;\n  function log(str, indent) {\n    _pad = _pad || '';\n    if (indent == -1) {\n      _pad = _pad.substr(2);\n    }\n    console.log(_pad + str);\n    if (indent == 1) {\n      _pad = _pad + '  ';\n    }\n  }\n\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tslint.json",
          "type": "blob",
          "size": 1.8515625,
          "content": "{\n  \"rules\": {\n    \"class-name\": true,\n    \"comment-format\": [\n      true,\n      \"check-space\"\n    ],\n    \"curly\": true,\n    \"eofline\": true,\n    \"forin\": true,\n    \"indent\": [\n      true,\n      \"spaces\"\n    ],\n    \"label-position\": true,\n    \"label-undefined\": true,\n    \"max-line-length\": [\n      true,\n      140\n    ],\n    \"member-access\": false,\n    \"member-ordering\": [\n      true,\n      \"static-before-instance\",\n      \"variables-before-functions\"\n    ],\n    \"no-arg\": true,\n    \"no-bitwise\": true,\n    \"no-console\": [\n      true,\n      \"debug\",\n      \"info\",\n      \"time\",\n      \"timeEnd\",\n      \"trace\"\n    ],\n    \"no-construct\": true,\n    \"no-debugger\": true,\n    \"no-duplicate-key\": true,\n    \"no-duplicate-variable\": true,\n    \"no-empty\": false,\n    \"no-eval\": true,\n    \"no-inferrable-types\": true,\n    \"no-shadowed-variable\": true,\n    \"no-string-literal\": false,\n    \"no-switch-case-fall-through\": true,\n    \"no-trailing-whitespace\": true,\n    \"no-unused-expression\": true,\n    \"no-unused-variable\": true,\n    \"no-unreachable\": true,\n    \"no-use-before-declare\": true,\n    \"no-var-keyword\": true,\n    \"object-literal-sort-keys\": false,\n    \"one-line\": [\n      true,\n      \"check-open-brace\",\n      \"check-catch\",\n      \"check-else\",\n      \"check-whitespace\"\n    ],\n    \"quotemark\": [\n      true,\n      \"single\"\n    ],\n    \"radix\": true,\n    \"semicolon\": [\n      \"always\"\n    ],\n    \"triple-equals\": [\n      true,\n      \"allow-null-check\"\n    ],\n    \"typedef-whitespace\": [\n      true,\n      {\n        \"call-signature\": \"nospace\",\n        \"index-signature\": \"nospace\",\n        \"parameter\": \"nospace\",\n        \"property-declaration\": \"nospace\",\n        \"variable-declaration\": \"nospace\"\n      }\n    ],\n    \"variable-name\": false,\n    \"whitespace\": [\n      true,\n      \"check-branch\",\n      \"check-decl\",\n      \"check-operator\",\n      \"check-separator\",\n      \"check-type\"\n    ]\n  }\n}\n"
        }
      ]
    }
  ]
}