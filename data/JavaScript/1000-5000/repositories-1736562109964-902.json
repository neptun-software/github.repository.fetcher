{
  "metadata": {
    "timestamp": 1736562109964,
    "page": 902,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spark-notebook/spark-notebook",
      "stars": 3152,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".debian.build.conf.example",
          "type": "blob",
          "size": 0.1123046875,
          "content": "debian {\n  maintainer     = \"Francois Bayart <francois.bayart@data-fellas.invalid>\"\n  server_loading = \"Upstart\"\n}\n"
        },
        {
          "name": ".docker.build.conf.kubernetes.example",
          "type": "blob",
          "size": 0.5966796875,
          "content": "docker {\n  maintainer = \"Luis Azazel Cypher\"\n  registry = \"eu.gcr.io/spark-kubernetes-666666\"\n  commands = [\n    { cmd = USER, arg = root },\n    { cmd = RUN, arg = \"apt-get update --fix-missing && apt-get install -y -t jessie-backports --no-install-recommends openjdk-8-jdk\" },\n    { cmd = ENV, arg = \"JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\" },\n    { cmd = RUN, arg = \"apt-get install -y wget curl\"},\n    { cmd = ADD, arg = \"https://storage.googleapis.com/kubernetes-release/release/v1.6.4/bin/linux/amd64/kubectl /usr/local/bin/kubectl\" },\n    { cmd = RUN, arg = \"chmod +x /usr/local/bin/kubectl\" }\n  ]\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2958984375,
          "content": ".idea/\n.idea_modules/\n.project\n*.iml\n.settings\n.classpath\n.ensime\n.ensime_lucene\n.akka-cookie\n.main.build.conf\n.docker.build.conf\n.debian.build.conf\nproject/target/\ntarget/\nlogs/\nconf/notebooks/Untitled*\nnotebooks/Untitled*\nadam.log\nnotebooks/oreilly\nnotebooks/temp\n/bin/\n.cache-main\n.cache-tests\n*.swp\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 0.912109375,
          "content": "node {\n    wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {\n\n        stage('Init variables') {\n            env.JAVA_OPTS=\"-Djava.net.preferIPv4Stack=true\"\n            env.SBT_OPTS=\"-XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xmx4G -XX:MaxPermSize=4G\"\n\n            env.BUILD_OPTS=\"\" // \"-Dscala.version=2.10.5 -Dspark.version=2.0.1\"\n        }\n\n        stage('SCM') {\n            timeout(time: 2, unit: 'MINUTES') {\n                retry(3) {\n                    checkout scm\n                }\n            }\n            step([$class: 'GitHubSetCommitStatusBuilder'])\n        }\n\n        stage('Clean') {\n            sh \"/usr/bin/sbt clean\"\n        }\n\n        stage('Test 2.11'){\n            sh \"/usr/bin/sbt -Dspark.version=2.0.2 -Dscala.version=2.11.8 test\"\n        }\n\n        stage('Test 2.11 spark 2.1.1'){\n            sh \"/usr/bin/sbt -Dspark.version=2.1.1 -Dscala.version=2.11.8 test\"\n        }\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.0380859375,
          "content": "SHELL=/bin/bash\n\nhelp: ## This help dialog.\n\t@IFS=$$'\\n' ; \\\n\thelp_lines=(`fgrep -h \"##\" $(MAKEFILE_LIST) | fgrep -v fgrep | sed -e 's/\\\\$$//' | sed -e 's/##/:/'`); \\\n\tprintf \"%-30s %s\\n\" \"target\" \"help\" ; \\\n\tprintf \"%-30s %s\\n\" \"------\" \"----\" ; \\\n\tfor help_line in $${help_lines[@]}; do \\\n\t\tIFS=$$':' ; \\\n\t\thelp_split=($$help_line) ; \\\n\t\thelp_command=`echo $${help_split[0]} | sed -e 's/^ *//' -e 's/ *$$//'` ; \\\n\t\thelp_info=`echo $${help_split[2]} | sed -e 's/^ *//' -e 's/ *$$//'` ; \\\n\t\tprintf '\\033[36m'; \\\n\t\tprintf \"%-30s %s\" $$help_command ; \\\n\t\tprintf '\\033[0m'; \\\n\t\tprintf \"%s\\n\" $$help_info; \\\n\tdone\n\nall: help\n\nrun: ## start server with mode DEV on port 9002\n\tsbt ~run -Dhttp.port=9001 # -Dconfig.file=/FULL PATH TO YOUR LOCAL DEV CONF FILE/dev.conf\n\nconsole: ## start console\n\tsbt console\n\npackage: ## create Debian package\n\tsbt debian:packageBin\n\nsecret: ## Get a new secret key (not saved)\n\tsbt playGenerateSecret\n\ncheck: ## check Scala style\n\tsbt scalastyle\n\nscalastyleconfig: ## Generate configuration for scalastyle\n\tsbt scalastyleGenerateConfig\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.4228515625,
          "content": "Spark Notebook\n==============\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/andypetrella/spark-notebook?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThe Spark Notebook is the open source notebook aimed at enterprise environments, providing Data Scientists and Data Engineers with  an interactive web-based editor that can combine Scala code, SQL queries, Markup and JavaScript in a collaborative manner to explore, analyse and learn from massive data sets.\n\n![notebook intro](./docs/images/geo-airports.png)\n\nThe Spark Notebook allows performing [reproducible analysis](http://simplystatistics.org/2014/06/06/the-real-reason-reproducible-research-is-important/) with Scala, Apache Spark and the Big Data ecosystem.\n\n## Features Highlights\n\n### ![Apache Spark](./docs/images/spark-logo-192x100px.png)\n\nApache Spark is available out of the box, and is simply accessed by the variable `sparkContext` or `sc`.\n\n#### Multiple Spark Context Support\n\nOne of the top most useful feature brought by the Spark Notebook is its separation of the running notebooks.\nEach started notebook will spawn a new JVM with its own SparkSession instance. This allows a maximal flexibility for:\n\n* dependencies without clashes\n* access different clusters\n* tune differently each notebook\n* external scheduling (on the roadmap)\n\n#### Metadata-driven configuration\n\nWe achieve maximum flexibility with the availability of multiple `sparkContext`s by enabling [metadata driven](./docs/metadata.md) configuration.\n\n### Scala\n\nThe Spark Notebook supports exclusively the Scala programming language, the [Unpredicted Lingua Franca for Data Science](https://youtu.be/3_oV25nZz8I) and extensibly exploits the JVM ecosystem of libraries to drive an smooth evolution of data-driven software from exploration to production.\n\nThe Spark Notebook is available for *NIX and Windows systems in easy to use ZIP/TAR, Docker and DEB packages.\n\n### Reactive\n\nAll components in the Spark Notebook are dynamic and reactive.\n\nThe Spark Notebook comes with dynamic charts and most (if not all) components can be listened for and can react to events. This is very helpful in many cases, for example:\n* data entering the system live at runtime\n* visually plots of events\n* multiple interconnected visual components\nDynamic and reactive components mean that you don't have write the html, js, server code just for basic use cases.\n\n\n## Quick Start\n\nGo to [Quick Start](./docs/quick_start.md) for our 5-minutes guide to get up and running with the Spark Notebook.\n\nC'mon on to [Gitter](https://gitter.im/andypetrella/spark-notebook?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\nto discuss things, to get some help, or to start contributing!\n\n## Learn more\n\n* [Explore the Spark Notebook](./docs/exploring_notebook.md)\n* [HTML Widgets](./docs/widgets_html.md)\n* [Visualization Widgets](./docs/widgets_viz.md)\n* [Notebook Browser](./docs/notebook_browser.md)\n* Configuration\n    * [Notebook Configuration and Metadata](./docs/metadata.md)\n    * [Using Cluster Configurations](./docs/using_cluster_tab.md)\n    * [Versioned notebook storage with Git(hub)](./modules/git-notebook-provider/README.md)\n* [Running on Clusters and Clouds](./docs/clusters_clouds.md)\n* [Community](./docs/community.md)\n* Advanced Topics\n    * [Using Releases](./docs/using_releases.md)\n    * [Building from Sources](./docs/build_from_source.md)\n    * [Creating Specific Distributions](./docs/build_specific_distros.md)\n    * [Creating your own custom visualizations](./docs/custom_charts.md)\n    * [User Authentication](./docs/authentication.md)\n      - Supports: `Basic, Form & Kerberos` auth, and many more [via `pac4j` (OAuth, OpendID, ...)](https://github.com/pac4j/pac4j)\n      - Passing the logged in user to Secure Hadoop+YARN clusters via the [`proxy-user` impersonation](./docs/proxyuser_impersonation.md)\n* Advanced: How to Develop/improve `spark-notebook`\n    * [Overview of Project structure](./docs/code_structure.md)\n\n## Testimonials\n### Skymind - [Deeplearning4j](http://Deeplearning4j.org)\n\n> Spark Notebook gives us a clean, useful way to mix code and prose when we demo and explain our tech to customers. The Spark ecosystem needed this.\n\n### [Vinted.com](http://www.vinted.com)\n\n> It allows our analysts and developers (15+ users) to run ad-hoc queries, to perform complex data analysis and data visualisations, prototype machine learning pipelines. In addition, we use it to power our BI dashboards.\n\n## Adopters\n\n| Name                                   | Logo                                                                                                                           | URL                                                                                              | Description                                                                                                                                                                                                           |\n|----------------------------------------|--------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Kensu                            | ![Kensu](http://www.kensu.io/assets/images/kensu-logo.png)                                                 | [website](http://www.kensu.io)                                                           | Lifting Data Science to the Enterprise level                                                                                                                                                                                |\n| Agile Lab                              | ![Agile Lab](https://www.agilelab.it/wp-content/uploads/2019/08/agilelab-colori-orizzontale-web240.png)                                                      | [website](http://www.agilelab.it)                                                                | The only Italian Spark Certified systems integrator                                                                                                                                                                   |\n| CloudPhysics                           | ![CloudPhysics](https://www.cloudphysics.com/static/uploads/2014/06/3color_bug_lg.png)                                         | [website](http://www.cloudphysics.com)                                                           | Data-Driven Inisghts for Smarter IT                                                                                                                                                                                   |\n| Aliyun                                 | ![Alibaba - Aliyun ECS](http://gtms02.alicdn.com/tps/i2/T1J0xIFMteXXX4dCTl-220-72.png)                                         | [product](http://market.aliyun.com/products/56014009/jxsc000194.html?spm=5176.900004.4.1.WGc3Ei) | Spark runtime environment on ECS and management tool of Spark Cluster running on Aliyun ECS                                                                                                                             |\n| EMBL European Bioinformatics Institute | ![EMBL - EBI](http://www.ebi.ac.uk/miriam/static/main/img/EBI_logo.png)                                                        | [website](http://www.ebi.ac.uk/)                                                                 | EMBL-EBI provides freely available data from life science experiments, performs basic research in computational biology and offers an extensive user training programme, supporting researchers in academia and industry. |\n| Metail                                 | ![Metail](https://metail.com/wp-content/uploads/2016/03/Metail-Logo-Light-Bg2-1.png)                                              | [website](http://metail.com/)                                                                    | The best body shape and garment fit company in the world. To create and empower everyone’s online body identity.                                                                                                          |\n| kt NexR                                | ![kt NexR](http://ktnexr.com/images/main/kt_h_logo.jpg)                                                                        | [website](http://ktnexr.com)                                                                     | the kt NexR is one of the leading BigData company in the Korea from 2007.                                                                                                                                             |\n| Skymind                                |                                                                   | [website](http://www.skymind.io)                                                                 | At Skymind, we’re tackling some of the most advanced problems in data analysis and machine intelligence. We offer start-of-the-art, flexible, scalable deep learning for industry.                                      |\n| Amino                                  |                                                           | [website](http://www.Amino.com)                                                                  | A new way to get the facts about your health care choices.                                                                                                                                                            |\n| Vinted                                 | ![Vinted](http://engineering.vinted.com/brandbook/images/logos/vinted.svg)                                                     | [website](http://www.vinted.com/)                                                                | Online marketplace and a social network focused on young women’s lifestyle.                                                                                                                                             |\n| Vingle                                 | ![Vingle](https://s3.amazonaws.com/vingle-assets/Vingle_Wordmark_Red.png)                                                      | [website](https://www.vingle.net)                                                                | Vingle is the community where you can meet someone like you.                                                                                                                                                          |\n| 47 Degrees                             |                                                               | [website](http://www.47deg.com)                                                                  | 47 Degrees is a global consulting firm and certified Typesafe & Databricks Partner specializing in Scala & Spark.                                                                                                       |\n| Barclays                               | ![Barclays](https://www.home.barclays/content/dam/barclayspublic/images/Site%20wide/Barclays%20logo/barclays-logo-desktop.png) | [website](http://www.barclays.com)                                                               | Barclays is a British multinational banking and financial services company headquartered in London.                                                                                                                     |\n| Swisscom                               | ![Swisscom](https://upload.wikimedia.org/wikipedia/en/2/2c/Swisscom_Logo.png)                                                  | [website](https://www.swisscom.ch)                                                               | Swisscom is the leading mobile service provider in Switzerland.                                                                                                                                                         |\n| Knoldus                                | ![knoldus](http://www.knoldus.com/images/logos/new_logo_1.jpg)                                                                 | [website](http://www.knoldus.com)                                                                |  Knoldus is a global consulting firm and certified \"Select\" Lightbend & Databricks Partner specializing in Scala & Spark ecosystem.                                                                                     |                                                             |\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sbt",
          "type": "blob",
          "size": 15.2109375,
          "content": "import Dependencies._\nimport Shared._\nimport sbtbuildinfo.Plugin._\n\norganization := MainProperties.organization\n\nname := MainProperties.name\n\nscalaVersion := defaultScalaVersion\n\nval SparkNotebookSimpleVersion = \"0.9.0-SNAPSHOT\"\n\nversion in ThisBuild := SparkNotebookSimpleVersion\n\nimport play.sbt.PlayImport._\nplay.sbt.PlayImport.PlayKeys.playDefaultPort := 9001\n\nupdateOptions := updateOptions.value.withCachedResolution(true)\n\nmaintainer := DockerProperties.maintainer //Docker\n\nenablePlugins(UniversalPlugin)\n\nenablePlugins(DockerPlugin)\n\nenablePlugins(GitVersioning)\n\nenablePlugins(GitBranchPrompt)\n\nimport uk.gov.hmrc.gitstamp.GitStampPlugin._\n\nimport com.typesafe.sbt.SbtNativePackager.autoImport.NativePackagerHelper._\n\ndockerBaseImage := DockerProperties.baseImage\n\ndockerCommands ++= DockerProperties.commands\n\ndockerExposedVolumes ++= DockerProperties.volumes\n\ndockerExposedPorts ++= DockerProperties.ports\n\ndockerRepository := DockerProperties.registry //Docker\n\npackageName in Docker := MainProperties.name\n\n\n// DEBIAN PACKAGE\nenablePlugins(DebianPlugin)\n\nname in Debian := MainProperties.name\n\nmaintainer in Debian := DebianProperties.maintainer\n\npackageDescription := \"Interactive and Reactive Data Science using Scala and Spark.\"\n\ndebianPackageDependencies in Debian += \"java7-runtime | java7-runtime-headless\"\n\nserverLoading in Debian := DebianProperties.serverLoading\n\ndaemonUser in Linux := DebianProperties.daemonUser\n\ndaemonGroup in Linux := DebianProperties.daemonGroup\n\nversion := sys.props.get(\"deb-version\").getOrElse(version.value)\n\nimport DebianConstants._\nmaintainerScripts in Debian := maintainerScriptsAppend((maintainerScripts in Debian).value)(\n  Postinst -> (\n    s\"chown -R ${DebianProperties.daemonUser}:${DebianProperties.daemonGroup} \" +\n      s\"/usr/share/${MainProperties.name}/\"\n  )\n)\n\nivyScala := ivyScala.value map {\n  _.copy(overrideScalaVersion = true)\n}\n\nparallelExecution in Test in ThisBuild := false\n\n// these java options are for the forked test JVMs\njavaOptions in ThisBuild ++= Seq(\"-Xmx512M\", \"-XX:MaxPermSize=128M\")\n\nval viewerMode = Option(sys.env.getOrElse(\"VIEWER_MODE\", \"false\")).get.toBoolean\n\nval buildInfoValues = Seq[BuildInfoKey](\n  \"sparkNotebookVersion\" → SparkNotebookSimpleVersion,\n  scalaVersion,\n  sparkVersion,\n  hadoopVersion,\n  withHive,\n  jets3tVersion,\n  jlineDef,\n  sbtVersion,\n  git.formattedShaVersion,\n  BuildInfoKey.action(\"buildTime\") {\n    val formatter = new java.text.SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzz yyyy\")\n    formatter.format(new java.util.Date(System.currentTimeMillis))\n  },\n  \"viewer\" → viewerMode\n)\n\n\n/*\n  adding nightly build resolver like\n  https://repository.apache.org/content/repositories/orgapachespark-1153\n  this props will only need the number 1153 at the end\n*/\nval searchSparkResolver = Option(sys.props.getOrElse(\"spark.resolver.search\", \"false\")).get.toBoolean\nval sparkResolver = Option(sys.props.getOrElse(\"spark.resolver.id\", null))\n\nresolvers in ThisBuild ++= Seq(\n  // P.S. coursier was not working well with mavenLocal (FIXED recently in 1.0.0-RC4) https://goo.gl/FeKuEo\n  Resolver.mavenLocal,\n  Resolver.typesafeRepo(\"releases\"),\n  Resolver.sonatypeRepo(\"releases\"),\n  Resolver.typesafeIvyRepo(\"releases\"),\n  Resolver.typesafeIvyRepo(\"snapshots\"),\n  \"cloudera\" at \"https://repository.cloudera.com/artifactory/cloudera-repos\",\n  \"mapr\" at \"http://repository.mapr.com/maven\",\n  \"hw\" at \"http://repo.hortonworks.com/content/repositories/releases/\",\n  // docker\n  \"softprops-maven\" at \"http://dl.bintray.com/content/softprops/maven\"\n) ++ ((sparkResolver, searchSparkResolver, sparkVersion.value) match {\n  case (Some(x), _, _) => Seq(\n                    (\"spark \" + x) at (\"https://repository.apache.org/content/repositories/orgapachespark-\"+x)\n                  )\n  case (None, true, sv)  =>\n    println(s\"\"\"|\n    |**************************************************************\n    | SEARCHING for Spark Nightly repo for version ~ $sv\n    |**************************************************************\n    |\"\"\".stripMargin)\n    import scala.io.Source.fromURL\n    val mainPage = \"https://repository.apache.org/content/repositories/\"\n    val repos = fromURL(mainPage).mkString\n    val c = repos.split(\"\\n\").toList.filter(!_.contains(\"<link\")).mkString\n    val r = scala.xml.parsing.XhtmlParser(scala.io.Source.fromString(c))\n    val as = r \\\\ \"a\"\n    val sparks:List[Option[String]] = as\n      .filter(_.toString.contains(\"orgapachespark\"))\n      .map(_.attribute(\"href\").map(_.head.text))\n      .toList\n    val sparkRepos = sparks.collect { case Some(l) =>\n      val id = l.reverse.tail.takeWhile(_.isDigit).reverse.toInt\n      val u = l + \"org/apache/spark/spark-core_2.10/\"\n      val repo = fromURL(u).mkString\n      val c = repo.split(\"\\n\").toList.filter(!_.contains(\"<link\")).mkString\n      val r = scala.xml.parsing.XhtmlParser(scala.io.Source.fromString(c))\n      val v = (r \\\\ \"table\" \\\\ \"a\").map(_.text).filter(_ != \"Parent Directory\").head.replace(\"/\", \"\")\n      (l, id, v)\n    }\n    .groupBy(_._3).mapValues(_.maxBy(_._2)._1)\n    .map{ case (v, url) => (v == sv, v, url) }\n    println(\"======================================================================== \")\n    println(\"Found these repos\")\n    println(sparkRepos.map{case (cc, v, url) => s\"${if(cc) \"[x]\" else \"[ ]\" } $v: $url\"}.mkString(\"\\n\"))\n\n    sparkRepos.filter(_._1).map{ case (_, v, url) => (\"spark \" + v) at url }\n\n  case (None, false, _) => Nil\n})\n\n// FIXME: see https://www.playframework.com/documentation/2.5.x/IDE#Eclipse\n// EclipseKeys.skipParents in ThisBuild := false\n\ncompileOrder := CompileOrder.Mixed\n\npublishMavenStyle := false\n\npublishArtifact in Test := false\n\njavacOptions ++= Seq(\"-Xlint:deprecation\", \"-g\")\n\nscalacOptions ++= Seq(\"-deprecation\", \"-feature\")\n\nscalacOptions ++= Seq(\"-Xmax-classfile-name\", \"100\")\n\n//scriptClasspath := Seq(\"*\")\n\nscriptClasspath in batScriptReplacements := Seq(\"*\")\n\nbatScriptExtraDefines += {\n  \"set \\\"APP_CLASSPATH=%CLASSPATH_OVERRIDES%;%YARN_CONF_DIR%;%HADOOP_CONF_DIR%;%EXTRA_CLASSPATH%;%APP_LIB_DIR%\\\\..\\\\conf;%APP_CLASSPATH%\\\"\"\n}\nbatScriptExtraDefines += {\n  \"set \\\"VIEWER_MODE=\"+viewerMode+\"\\\"\"\n}\n\nval ClasspathPattern = \"declare -r app_classpath=\\\"(.*)\\\"\\n\".r\n\nbashScriptDefines := bashScriptDefines.value.map {\n  case ClasspathPattern(classpath) =>\n    s\"\"\"declare -r app_classpath=\"$${CLASSPATH_OVERRIDES}:$${YARN_CONF_DIR}:$${HADOOP_CONF_DIR}:$${EXTRA_CLASSPATH}:$classpath\"\\n\"\"\" +\n    s\"\"\"export VIEWER_MODE=$viewerMode\"\"\"\n  case entry => entry\n}\n\ndependencyOverrides += log4j\n\ndependencyOverrides += guava\n\nsharedSettings\n\nlibraryDependencies ++= playDeps\n\nresolvers ++= Seq(\"Sonatype snapshots repository\" at \"https://oss.sonatype.org/content/repositories/snapshots/\")\nlibraryDependencies ++= pac4jSecurity\n\nlibraryDependencies += scalaTest\n\n// P.S. Using static controllers with the static routes generator is not deprecated,\n// but it is recommended that you migrate to using classes with dependency injection.\nroutesGenerator := StaticRoutesGenerator\n\nlibraryDependencies ++= List(\n  akka,\n  akkaRemote,\n  akkaSlf4j,\n  cache,\n  commonsIO,\n  // ↓ to fix java.lang.IllegalStateException: impossible to get artifacts when data has\n  //   not been loaded. IvyNode = org.apache.commons#commons-exec;1.1\n  //   encountered when using hadoop \"2.0.0-cdh4.2.0\"\n  commonsExec,\n  commonsCodec,\n  //scala stuffs\n  \"org.scala-lang\" % \"scala-library\" % defaultScalaVersion,\n  \"org.scala-lang\" % \"scala-reflect\" % defaultScalaVersion,\n  \"org.scala-lang\" % \"scala-compiler\" % defaultScalaVersion\n)\n\n//for aether and compensating for 2.11 modularization\nlibraryDependencies ++= {\n  scalaBinaryVersion.value match {\n    case \"2.10\" => Nil\n    case \"2.11\" => List( //ningAsyncHttpClient, maybe not needed anymore after migration to faster deps downloading\n      \"org.scala-lang.modules\" %% \"scala-xml\" % \"1.0.4\",\n      \"org.scala-lang.modules\" %% \"scala-parser-combinators\" % \"1.0.4\"\n    )\n  }\n}\nlibraryDependencies ~= (_.map(excludeSpecs2))\n\nlazy val sbtDependencyManager = Project(id = \"sbt-dependency-manager\", base = file(\"modules/sbt-dependency-manager\"))\n  .settings(\n    version := version.value,\n    libraryDependencies += scalaTest\n  )\n  .settings(sharedSettings: _*)\n  .settings(\n    Extra.sbtDependencyManagerSettings\n  )\n\nlazy val sparkNotebookCore = Project(id = \"spark-notebook-core\", base = file(\"modules/core\"))\n  .settings(\n    version := version.value,\n    libraryDependencies ++= playJson,\n    libraryDependencies += slf4jLog4j,\n    libraryDependencies += commonsIO,\n    libraryDependencies += scalaTest\n  ).settings(sharedSettings: _*)\n  .settings(\n    Extra.sparkNotebookCoreSettings\n  )\n\nlazy val gitNotebookProvider = Project(id = \"git-notebook-provider\", base = file(\"modules/git-notebook-provider\"))\n  .settings(\n    version := version.value\n  )\n  .settings(sharedSettings: _*)\n  .dependsOn(sparkNotebookCore)\n  .settings(\n    Extra.gitNotebookProviderSettings\n  )\n\nlazy val sbtProjectGenerator = Project(id = \"sbt-project-generator\", base = file(\"modules/sbt-project-generator\"))\n  .settings(\n    version := version.value\n  )\n.settings(sharedSettings: _*)\n.settings(\n  libraryDependencies += commonsIO,\n  libraryDependencies += scalaTest\n).dependsOn(\n  sbtDependencyManager,\n  sparkNotebookCore,\n  gitNotebookProvider\n) // FIXME: buildInfoKeys is now repeated\n  .settings(buildInfoSettings: _*)\n  .settings(\n    sourceGenerators in Compile += buildInfo,\n    buildInfoKeys :=  buildInfoValues,\n    buildInfoPackage := \"notebook\"\n  )\n\nval fullVersion = Def.setting { \n    Seq(\n      s\"${version.in(ThisBuild).value}\",\n      s\"-scala-${scalaVersion.value}\",\n      s\"-spark-${sparkVersion.value}\",\n      s\"-hadoop-${hadoopVersion.value}\",\n      if(withHive.value) \"-with-hive\" else \"\"\n    ).mkString\n  }\n\nval playRemoveNetty = {\n  val result = sparkVersionTuple match {\n    case _ if Ordering.apply[(Int, Int, Int)].lt(sparkVersionTuple, (2, 3, 0)) => false\n    case _ => true\n  }\n  println(s\"playRemoveNetty: $result\")\n  result\n}\n\n\n// in spark 2.3.0 dont use PlayNetty to prevent a Netty conflict\ndef rootProject = {\n  val root = project.in(file(\".\"))\n  if (playRemoveNetty)\n    root.enablePlugins(PlayScala, PlayAkkaHttpServer).disablePlugins(PlayNettyServer)\n  else root.enablePlugins(PlayScala)\n}\n\nlazy val sparkNotebook = rootProject.enablePlugins(SbtWeb)\n  // https://www.playframework.com/documentation/2.5.x/SettingsLogger#Using-a-Custom-Logging-Framework\n  .disablePlugins(PlayLogback)\n  .aggregate(sparkNotebookCore, gitNotebookProvider, sbtDependencyManager, sbtProjectGenerator, subprocess, observable, common, spark, kernel)\n  .dependsOn(sparkNotebookCore, gitNotebookProvider, subprocess, observable, sbtProjectGenerator, common, spark, kernel)\n  .settings(sharedSettings: _*)\n  .settings(\n    bashScriptExtraDefines +=\n      s\"\"\"export ADD_JARS=\"$${ADD_JARS},$${lib_dir}/$$(ls $${lib_dir} | grep ${organization.value}.common | head)\"\"\"\",\n\n    // configure the \"universal\" distribution package (i.e. spark-notebook.zip)\n    mappings in Universal ++= directory(\"notebooks\"),\n\n    version in Universal := fullVersion.value,\n    version in Docker := fullVersion.value,\n    version in Debian := fullVersion.value,\n\n    mappings in Docker ++= directory(\"notebooks\")\n  )\n  .settings(includeFilter in(Assets, LessKeys.less) := \"*.less\")\n  .settings(unmanagedSourceDirectories in Compile := Seq(scalaSource.in(Compile).value)) //avoid app-2.10 and co to be created\n  .settings(\n    git.useGitDescribe := true,\n    git.baseVersion := SparkNotebookSimpleVersion\n  )\n  .settings(\n    gitStampSettings: _*\n  )\n  .settings(\n    Extra.sparkNotebookSettings\n  )\n  .settings(libraryDependencies ~= (_.map(excludeSpecs2)))\n\nlazy val subprocess = Project(id=\"subprocess\", base=file(\"modules/subprocess\"))\n  .settings(libraryDependencies ++= playDeps)\n  .settings(\n    libraryDependencies ++= {\n      Seq(\n        akka,\n        akkaRemote,\n        akkaSlf4j,\n        commonsIO,\n        commonsExec,\n        log4j,\n        hadoopClient(defaultHadoopVersion)\n      )\n    }\n  )\n  .settings(sharedSettings: _*)\n  .settings(\n    Extra.subprocessSettings\n  )\n  .settings(libraryDependencies ~= (_.map(excludeSpecs2)))\n\n\nlazy val observable = Project(id = \"observable\", base = file(\"modules/observable\"))\n  .dependsOn(subprocess)\n  .dependsOn(sparkNotebookCore)\n  .settings(\n    libraryDependencies ++= Seq(\n      akkaRemote,\n      akkaSlf4j,\n      slf4jLog4j,\n      rxScala\n    )\n  )\n  .settings(sharedSettings: _*)\n  .settings(\n    Extra.observableSettings\n  )\n\nval versionShortWithSpark = Def.setting {\n  s\"${sparkVersion.value}_${version.in(ThisBuild).value}\"\n}\n\nval commonProjSparkDir = sparkVersionTuple match {\n  case _ if Ordering.apply[(Int, Int, Int)].lt(sparkVersionTuple, (2, 3, 0)) =>\n    \"spark-pre-2.3\"\n  case _ => \"spark-post-2.3\"\n}\n\nlazy val common = Project(id = \"common\", base = file(\"modules/common\"))\n  .dependsOn(observable, sbtDependencyManager)\n  .settings(\n    version := versionShortWithSpark.value\n  )\n  .settings(\n    libraryDependencies ++= Seq(\n      akka,\n      log4j\n    ),\n    libraryDependencies += scalaTest,\n    unmanagedSourceDirectories in Compile += (sourceDirectory in Compile).value / (\"scala-\" + scalaBinaryVersion.value),\n    unmanagedSourceDirectories in Compile += (sourceDirectory in Compile).value / commonProjSparkDir\n  )\n  .settings(\n    gisSettings\n  )\n  .settings(sharedSettings: _*)\n  .settings(sparkSettings: _*)\n  .settings(buildInfoSettings: _*)\n  .settings(\n    sourceGenerators in Compile += buildInfo,\n    buildInfoKeys := buildInfoValues,\n    buildInfoPackage := \"notebook\"\n  )\n  .settings(\n    Extra.commonSettings\n  )\n\nlazy val spark = Project(id = \"spark\", base = file(\"modules/spark\"))\n  .dependsOn(common, subprocess, observable)\n  .settings(\n    version := versionShortWithSpark.value\n  )\n  .settings(\n    libraryDependencies ++= Seq(\n      akkaRemote,\n      akkaSlf4j,\n      slf4jLog4j,\n      commonsIO\n    ),\n    libraryDependencies ++= Seq(\n      jlineDef.value._1 % \"jline\" % jlineDef.value._2,\n      \"org.scala-lang\" % \"scala-compiler\" % scalaVersion.value\n    ),\n    unmanagedSourceDirectories in Compile += {\n      def folder(v:String, sv:String) = {\n          val tsv = sv match { case extractVs(major,minor,patch) => (major.toInt,minor.toInt,patch.toInt) }\n\n          val scalaVerDir = (sourceDirectory in Compile).value / (\"scala_\" + v)\n\n          tsv match {\n            // THIS IS HOW WE CAN DEAL WITH RADICAL CHANGES\n            //case _ if Ordering.apply[(Int, Int, Int)].lt(tsv, LAST_WORKING_VERSION) => scalaVerDir / \"spark-pre\"+LAST_WORKING_VERSION\n            case _ => scalaVerDir / \"spark-last\"\n          }\n      }\n      (scalaBinaryVersion.value, sparkVersion.value.takeWhile(_ != '-')) match {\n        case (v, sv) if v startsWith \"2.10\" => folder(\"2.10\", sv)\n        case (v, sv) if v startsWith \"2.11\" => folder(\"2.11\", sv)\n        case (v, _) => throw new IllegalArgumentException(\"Bad scala version: \" + v)\n      }\n    }\n  )\n  .settings(sharedSettings: _*)\n  .settings(sparkSettings: _*)\n  .settings(\n    Extra.sparkSettings\n  )\n\nlazy val kernel = Project(id = \"kernel\", base = file(\"modules/kernel\"))\n  .dependsOn(common, sbtDependencyManager, subprocess, observable, spark)\n  .settings(\n    libraryDependencies ++= Seq(\n      akkaRemote,\n      akkaSlf4j,\n      slf4jLog4j,\n      commonsIO\n    ),\n    libraryDependencies += scalaTest,\n    unmanagedSourceDirectories in Compile += (sourceDirectory in Compile).value / (\"scala-\" + scalaBinaryVersion.value)\n  )\n  .settings(sharedSettings: _*)\n  .settings(\n    Extra.kernelSettings\n  )\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 1.4794921875,
          "content": "machine:\n  environment:\n    SKIP_WHEN_TRAVIS: \"yes\"\n    # needed to override some bad defaults, otherwise 'sbt -v' runs with only 1GB mem\n    JAVA_OPTS: \"-Xms512M -Xmx4G -XX:MaxMetaspaceSize=512M -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC\"\n    SBT_OPTS: \"$JAVA_OPTS\"\n    BUILD_OPTS: \"-Dspark.resolver.search=false\" # TODO:  check 'set offline := true'\n    #    SCALA2_10: \"-Dscala.version=2.10.6\"\n    SCALA2_11: \"-Dscala.version=2.11.8\"\n    SPARK2_0: \"-Dspark.version=2.0.2\"\n    SPARK2_1: \"-Dspark.version=2.1.1\"\n    #    BUILD0: \"$SPARK2_0 $SCALA2_10 $BUILD_OPTS\"\n    #    BUILD1: \"$SPARK2_1 $SCALA2_10 $BUILD_OPTS\"\n    BUILD_SPARK_2_0: \"$SPARK2_0 $SCALA2_11 $BUILD_OPTS\"\n    BUILD_SPARK_2_1: \"$SPARK2_1 $SCALA2_11 $BUILD_OPTS\"\n  java:\n    version: oraclejdk8\n\ndependencies:\n  override:\n    # disables the auto-inferred 'play update' which do not work here\n    # pre-cache stuff for all build configurations (only first container is cached!)\n    - sbt $BUILD_SPARK_2_0 update\n    - sbt $BUILD_SPARK_2_1 update\n  cache_directories:\n    - \"~/.ivy2/cache\"\n    - \"~/.sbt\"\n    - \"~/.m2\"\n    - \".coursier/cache\"\n\ntest:\n  override:\n    # nasty way to run test in parallel with different config\n    # FIXME: matrix-builds still not available even in CircleCI 2.0 Beta (yet). but improvement is planned\n    # https://circleci.com/docs/1.0/parallel-manual-setup/\n  override:\n    - case $CIRCLE_NODE_INDEX in 0) sbt $BUILD_SPARK_2_0 clean test ;; 1) sbt $BUILD_SPARK_2_1 clean test ;; esac:\n        parallel: true\n"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "log4j.properties",
          "type": "blob",
          "size": 0.3251953125,
          "content": "# Root logger option\nlog4j.rootLogger=INFO, stdout\n\n# Direct log messages to stdout\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n\n \n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "notebooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-dev.sh",
          "type": "blob",
          "size": 1.0986328125,
          "content": "#!/bin/bash\n\nexport SPARK_LOCAL_IP=localhost\n\n# For git notebook storage to work, these env vars have to available (e.g. put in ~/.bashrc)\nexport SN_NOTEBOOKS_GIT_HTTPS_REPO\nexport SN_NOTEBOOKS_GIT_USER\nexport SN_NOTEBOOKS_GIT_TOKEN\n\nRUN_MODE=\"$1\"\n\nif [ \"$RUN_MODE\" = \"\" ]\nthen\n  echo \"USAGE: ./run-dev.sh [local|git]\"\n  exit -1\nfi\n\nget_abs_filename() {\n  # $1 : relative filename\n  echo \"$(cd \"$(dirname \"$1\")\" && pwd)/$(basename \"$1\")\"\n}\n\nif [ \"$RUN_MODE\" = \"git\" ]\nthen\n  DEFAULT_NB_DIR=$(get_abs_filename \"$(pwd)/../sample-git-notebooks\")\n  export NOTEBOOKS_DIR=\"${NOTEBOOKS_DIR:-\"$DEFAULT_NB_DIR\"}\"\n  export CONFIG_FILE=\"conf/application-git-storage.conf\"\nelse\n  export NOTEBOOKS_DIR=\"${NOTEBOOKS_DIR:-\"$(pwd)/notebooks\"}\"\n  export CONFIG_FILE=\"conf/application.conf\"\nfi\necho \"Notebooks dir: $NOTEBOOKS_DIR . Config: $CONFIG_FILE\"\n\n# \"set offline := true\"  \\\nHADOOP_CONF_DIR=/etc/hadoop/conf:/etc/hive/conf sbt \\\n  -Dconfig.file=${CONFIG_FILE} \\\n  -Dwith.hive=true \\\n  -Dwith.parquet=true \\\n  -Dwith.mesos=true \\\n  -Dspark.version=2.3.0 \\\n  -Dmanager.notebooks.override.sparkConf.spark.port.maxRetries=100 \\\n  clean run\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-git-support.bash",
          "type": "blob",
          "size": 0.44921875,
          "content": "#!/bin/bash\n\nexport TEST_GIT_REPO_HTTPS=\"${SN_NOTEBOOKS_GIT_HTTPS_REPO}\"\nexport TEST_GIT_USER=\"${SN_NOTEBOOKS_GIT_USER}\"\nexport TEST_GIT_PASS=\"${SN_NOTEBOOKS_GIT_TOKEN}\"\n\nexport TEST_GIT_REPO_SSH=\"$SN_NOTEBOOKS_GIT_SSH_REPO\"\nexport TEST_GIT_KEYFILE=\"$SN_NOTEBOOKS_GIT_KEYFILE\"\nexport TEST_GIT_KEYFILE_PASS=\"$SN_NOTEBOOKS_GIT_KEYFILE_PASS\"\n\n# TODO: currently one still needs to uncomment the @Ignore inside the tests\nsbt \"project git-notebook-provider\" \"~test\"\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}