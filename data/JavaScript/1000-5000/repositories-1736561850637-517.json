{
  "metadata": {
    "timestamp": 1736561850637,
    "page": 517,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "theturtle32/WebSocket-Node",
      "stars": 3768,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": "node_modules/\n.DS_Store\n.lock-*\nbuild/\nbuilderror.log\nnpm-debug.log\ntest/autobahn/reports*/*\ntest/scripts/heapdump/*\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 5.6845703125,
          "content": "{\n\t// JSHint Default Configuration File (as on JSHint website)\n\t// See http://jshint.com/docs/ for more details\n\n\t\"maxerr\"        : 50,       // {int} Maximum error before stopping\n\n\t// Enforcing\n\t\"bitwise\"       : false,    // true: Prohibit bitwise operators (&, |, ^, etc.)\n\t\"camelcase\"     : false,    // true: Identifiers must be in camelCase\n\t\"curly\"         : true,     // true: Require {} for every new block or scope\n\t\"eqeqeq\"        : true,     // true: Require triple equals (===) for comparison\n\t\"freeze\"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.\n\t\"forin\"         : false,    // true: Require filtering for..in loops with obj.hasOwnProperty()\n\t\"immed\"         : true,     // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`\n\t\"latedef\"       : \"nofunc\", // true: Require variables/functions to be defined before being used\n\t\"newcap\"        : true,     // true: Require capitalization of all constructor functions e.g. `new F()`\n\t\"noarg\"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`\n\t\"noempty\"       : true,     // true: Prohibit use of empty blocks\n\t\"nonbsp\"        : true,     // true: Prohibit \"non-breaking whitespace\" characters.\n\t\"nonew\"         : true,     // true: Prohibit use of constructors for side-effects (without assignment)\n\t\"plusplus\"      : false,    // true: Prohibit use of `++` & `--`\n\t\"quotmark\"      : \"single\", // Quotation mark consistency:\n\t                            //   false    : do nothing (default)\n\t                            //   true     : ensure whatever is used is consistent\n\t                            //   \"single\" : require single quotes\n\t                            //   \"double\" : require double quotes\n\t\"undef\"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)\n\t\"unused\"        : \"vars\",   // vars: Require all defined variables be used, ignore function params\n\t\"strict\"        : false,    // true: Requires all functions run in ES5 Strict Mode\n\t\"maxparams\"     : false,    // {int} Max number of formal params allowed per function\n\t\"maxdepth\"      : false,    // {int} Max depth of nested blocks (within functions)\n\t\"maxstatements\" : false,    // {int} Max number statements per function\n\t\"maxcomplexity\" : false,    // {int} Max cyclomatic complexity per function\n\t\"maxlen\"        : false,    // {int} Max number of characters per line\n\n\t// Relaxing\n\t\"asi\"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)\n\t\"boss\"          : false,     // true: Tolerate assignments where comparisons would be expected\n\t\"debug\"         : false,     // true: Allow debugger statements e.g. browser breakpoints.\n\t\"eqnull\"        : false,     // true: Tolerate use of `== null`\n\t\"es5\"           : false,     // true: Allow ES5 syntax (ex: getters and setters)\n\t\"esnext\"        : true,      // true: Allow ES.next (ES6) syntax (ex: `const`)\n\t\"moz\"           : false,     // true: Allow Mozilla specific syntax (extends and overrides esnext features)\n\t                             // (ex: `for each`, multiple try/catch, function expressionâ€¦)\n\t\"evil\"          : false,     // true: Tolerate use of `eval` and `new Function()`\n\t\"expr\"          : false,     // true: Tolerate `ExpressionStatement` as Programs\n\t\"funcscope\"     : false,     // true: Tolerate defining variables inside control statements\n\t\"globalstrict\"  : false,     // true: Allow global \"use strict\" (also enables 'strict')\n\t\"iterator\"      : false,     // true: Tolerate using the `__iterator__` property\n\t\"lastsemic\"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block\n\t\"laxbreak\"      : false,     // true: Tolerate possibly unsafe line breakings\n\t\"laxcomma\"      : false,     // true: Tolerate comma-first style coding\n\t\"loopfunc\"      : false,     // true: Tolerate functions being defined in loops\n\t\"multistr\"      : false,     // true: Tolerate multi-line strings\n\t\"noyield\"       : false,     // true: Tolerate generator functions with no yield statement in them.\n\t\"notypeof\"      : false,     // true: Tolerate invalid typeof operator values\n\t\"proto\"         : false,     // true: Tolerate using the `__proto__` property\n\t\"scripturl\"     : false,     // true: Tolerate script-targeted URLs\n\t\"shadow\"        : false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`\n\t\"sub\"           : true,      // true: Tolerate using `[]` notation when it can still be expressed in dot notation\n\t\"supernew\"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`\n\t\"validthis\"     : false,     // true: Tolerate using this in a non-constructor function\n\n\t// Environments\n\t\"browser\"       : true,     // Web Browser (window, document, etc)\n\t\"browserify\"    : true,     // Browserify (node.js code in the browser)\n\t\"couch\"         : false,    // CouchDB\n\t\"devel\"         : true,     // Development/debugging (alert, confirm, etc)\n\t\"dojo\"          : false,    // Dojo Toolkit\n\t\"jasmine\"       : false,    // Jasmine\n\t\"jquery\"        : false,    // jQuery\n\t\"mocha\"         : false,    // Mocha\n\t\"mootools\"      : false,    // MooTools\n\t\"node\"          : true,     // Node.js\n\t\"nonstandard\"   : false,    // Widely adopted globals (escape, unescape, etc)\n\t\"prototypejs\"   : false,    // Prototype and Scriptaculous\n\t\"qunit\"         : false,    // QUnit\n\t\"rhino\"         : false,    // Rhino\n\t\"shelljs\"       : false,    // ShellJS\n\t\"worker\"        : false,    // Web Workers\n\t\"wsh\"           : false,    // Windows Scripting Host\n\t\"yui\"           : false,    // Yahoo User Interface\n\n\t// Custom Globals\n\t\"globals\"       : { // additional predefined global variables\n\t\t\"WebSocket\": true\n\t}        \n}\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": ".npmignore\n.gitignore\n.git/\n.DS_Store\n.lock-*\nnode_modules/\ndocs/\nexample/\nbuild/\nbuilderror.log\nnpm-debug.log\ntest/\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "package-lock=false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.822265625,
          "content": "Changelog\n=========\n\nVersion 1.0.34\n--------------\n*Released 2021-04-14*\n\n* Updated browser shim to use the native `globalThis` property when available. See [this MDN page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis) for context. Resolves [#415](https://github.com/theturtle32/WebSocket-Node/issues/415)\n\nVersion 1.0.33\n--------------\n*Released 2020-12-08*\n\n* Added new configuration options to WebSocketServer allowing implementors to bypass parsing WebSocket extensions and HTTP Cookies if they are not needed. (Thanks, [@aetheon](https://github.com/aetheon))\n* Added new `upgradeError` event to WebSocketServer to allow for visibility into and logging of any parsing errors that might occur during the HTTP Upgrade phase. (Thanks, [@aetheon](https://github.com/aetheon))\n\nVersion 1.0.32\n--------------\n*Released 2020-08-28*\n\n* Refactor to use [N-API modules](https://nodejs.org/api/n-api.html) from [ws project](https://github.com/websockets). (Thanks, [@andreek](https://github.com/andreek))\n  * Specifically:\n    * [utf-8-validate](https://github.com/websockets/utf-8-validate)\n    * [bufferutil](https://github.com/websockets/bufferutil)\n* Removed some documentation notations about very old browsers and very old Websocket protocol drafts that are no longer relevant today in 2020.\n* Removed outdated notations and instructions about building native extensions, since those functions are now delegated to dependencies.\n* Add automated unit test executionn via Github Actions (Thanks, [@nebojsa94](https://github.com/nebojsa94))\n* Accept new connection close code `1015` (\"TLS Handshake\"). (More information at the [WebSocket Close Code Number Registry](https://www.iana.org/assignments/websocket/websocket.xhtml#close-code-number))\n\nVersion 1.0.31\n--------------\n*Released 2019-12-06*\n\n* Fix [infinite loop in error handling](https://github.com/theturtle32/WebSocket-Node/issues/329) (Thanks, [@apirila](https://github.com/apirila))\n* Fix [memory leak with multiple WebSocket servers on the same HTTP server](https://github.com/theturtle32/WebSocket-Node/pull/339) (Thanks, [@nazar-pc](https://github.com/nazar-pc))\n* [Use es5-ext/global as a more robust way to resolve browser's window object](https://github.com/theturtle32/WebSocket-Node/pull/362) (Thanks, [@michaelsbradleyjr](https://github.com/michaelsbradleyjr))\n* [adding compatibility with V8 release greater than v7.6 (node and electron engines)](https://github.com/theturtle32/WebSocket-Node/pull/376) (Thanks, [@artynet](https://github.com/artynet))\n\nVersion 1.0.30\n--------------\n*Released 2019-09-12*\n\n* Moved gulp back to devDependencies\n\nVersion 1.0.29\n--------------\n*Released 2019-07-03*\n\n* Updated some dependencies and updated the .gitignore and .npmignore files\n\nVersion 1.0.28\n--------------\n*Released 2018-09-19*\n\n* Updated to latest version of [nan](https://github.com/nodejs/nan)\n\nVersion 1.0.27\n--------------\n*Released 2018-09-19*\n\n* Allowing additional request `headers` to be specified in the `tlsOptions` config parameter for WebSocketClient. See pull request #323\n* Resolving deprecation warnings relating to usage of `new Buffer`\n\nVersion 1.0.26\n--------------\n*Released 2018-04-27*\n\n* No longer using the deprecated `noAssert` parameter for functions reading and writing binary numeric data. (Thanks, [@BridgeAR](https://github.com/BridgeAR))\n\nVersion 1.0.25\n--------------\n*Released 2017-10-18*\n\n* Bumping minimum supported node version specified in package.json to v0.10.x because some upstream libraries no longer install on v0.8.x\n* [Allowing use of close codes 1012, 1013, 1014](https://www.iana.org/assignments/websocket/websocket.xml)\n* [Allowing the `Host` header to be overridden.](https://github.com/theturtle32/WebSocket-Node/pull/291) (Thanks, [@Juneil](https://github.com/Juneil))\n* [Mitigating infinite loop for broken connections](https://github.com/theturtle32/WebSocket-Node/pull/289) (Thanks, [@tvkit](https://github.com/tvkit))\n* [Fixed Markdown Typos](https://github.com/theturtle32/WebSocket-Node/pull/281) (Thanks, [@teramotodaiki](https://github.com/teramotodaiki))\n* [Adding old readyState constants for W3CWebSocket interface](https://github.com/theturtle32/WebSocket-Node/pull/282) (Thanks, [@thechriswalker](https://github.com/thechriswalker))\n\n\nVersion 1.0.24\n--------------\n*Released 2016-12-28*\n\n* Fixed a bug when using native keepalive on Node >= 6.0. (Thanks, [@prossin](https://github.com/prossin))\n* Upgrading outdated dependencies\n\nVersion 1.0.23\n--------------\n*Released 2016-05-18*\n\n* Official support for Node 6.x\n* Updating dependencies. Specifically, updating nan to ^2.3.3\n\nVersion 1.0.22\n--------------\n*Released 2015-09-28*\n\n* Updating to work with nan 2.x\n\nVersion 1.0.21\n--------------\n*Released 2015-07-22*\n\n* Incremented and re-published to work around an aborted npm publish of v1.0.20.\n\nVersion 1.0.20\n--------------\n*Released 2015-07-22*\n\n* Added EventTarget to the W3CWebSocket interface (Thanks, [@ibc](https://github.com/ibc)!)\n* Corrected an inaccurate error message. (Thanks, [@lekoaf](https://github.com/lekoaf)!)\n\nVersion 1.0.19\n--------------\n*Released 2015-05-28*\n\n* Updated to nan v1.8.x (tested with v1.8.4)\n* Added `\"license\": \"Apache-2.0\"` to package.json via [pull request #199](https://github.com/theturtle32/WebSocket-Node/pull/199) by [@pgilad](https://github.com/pgilad). See [npm1k.org](http://npm1k.org/).\n\n\nVersion 1.0.18\n--------------\n*Released 2015-03-19*\n\n* Resolves [issue #195](https://github.com/theturtle32/WebSocket-Node/pull/179) - passing number to connection.send() causes crash\n* [Added close code/reason arguments to W3CWebSocket#close()](https://github.com/theturtle32/WebSocket-Node/issues/184)\n\n\nVersion 1.0.17\n--------------\n*Released 2015-01-17*\n\n* Resolves [issue #179](https://github.com/theturtle32/WebSocket-Node/pull/179) - Allow toBuffer to work with empty data\n\n\nVersion 1.0.16\n--------------\n*Released 2015-01-16*\n\n* Resolves [issue #178](https://github.com/theturtle32/WebSocket-Node/issues/178) - Ping Frames with no data\n\n\nVersion 1.0.15\n--------------\n*Released 2015-01-13*\n\n* Resolves [issue #177](https://github.com/theturtle32/WebSocket-Node/issues/177) - WebSocketClient ignores options unless it has a tlsOptions property\n\n\nVersion 1.0.14\n--------------\n*Released 2014-12-03*\n\n* Resolves [issue #173](https://github.com/theturtle32/WebSocket-Node/issues/173) - To allow the W3CWebSocket interface to accept an optional non-standard configuration object as its third parameter, which will be ignored when running in a browser context.\n\n\nVersion 1.0.13\n--------------\n*Released 2014-11-29*\n\n* Fixes [issue #171](https://github.com/theturtle32/WebSocket-Node/issues/171) - Code to prevent calling req.accept/req.reject multiple times breaks sanity checks in req.accept\n\n\nVersion 1.0.12\n--------------\n*Released 2014-11-28*\n\n* Fixes [issue #170](https://github.com/theturtle32/WebSocket-Node/issues/170) - Non-native XOR implementation broken after making JSHint happy\n\n\nVersion 1.0.11\n--------------\n*Released 2014-11-25*\n\n* Fixes some undefined behavior surrounding closing WebSocket connections and more reliably handles edge cases.\n* Adds an implementation of the W3C WebSocket API for browsers to facilitate sharing code between client and server via browserify. (Thanks, [@ibc](https://github.com/ibc)!)\n* `WebSocketConnection.prototype.close` now accepts optional `reasonCode` and `description` parameters.\n* Calling `accept` or `reject` more than once on a `WebSocketRequest` will now throw an error.  [Issue #149](https://github.com/theturtle32/WebSocket-Node/issues/149)\n* Handling connections dropped by client before accepted by server [Issue #167](https://github.com/theturtle32/WebSocket-Node/issues/167)\n* Integrating Gulp and JSHint (Thanks, [@ibc](https://github.com/ibc)!)\n* Starting to add individual unit tests (using substack's [tape](github.com/substack/tape) and [faucet](github.com/substack/faucet))\n\n\nVersion 1.0.10\n--------------\n*Released 2014-10-22*\n\n* Fixed Issue [#146](https://github.com/theturtle32/WebSocket-Node/issues/146) that was causing WebSocketClient to throw errors when instantiated if passed `tlsOptions`.\n\nVersion 1.0.9\n-------------\n*Released 2014-10-20*\n\n* Fixing an insidious corner-case bug that prevented `WebSocketConnection` from firing the `close` event in certain cases when there was an error on the underlying `Socket`, leading to connections sticking around forever, stuck erroneously in the `connected` state.  These \"ghost\" connections would cause an error event when trying to write to them.\n* Removed deprecated `websocketVersion` property.  Use `webSocketVersion` instead (case difference).\n* Allowing user to specify all properties for `tlsOptions` in WebSocketClient, not just a few whitelisted properties.  This keeps us from having to constantly add new config properties for new versions of Node. (Thanks, [jesusprubio](https://github.com/jesusprubio))\n* Removing support for Node 0.4.x and 0.6.x.\n* Adding `fuzzingclient.json` spec file for the Autobahn Test Suite.\n* Now more fairly emitting `message` events from the `WebSocketConnection`.  Previously, all buffered frames for a connection would be processed and all `message` events emitted before moving on to processing the next connection with available data.  Now We process one frame per connection (most of the time) in a more fair round-robin fashion.\n* Now correctly calling the `EventEmitter` superclass constructor during class instance initialization.\n* `WebSocketClient.prototype.connect` now accepts the empty string (`''`) to mean \"no subprotocol requested.\"  Previously either `null` or an empty array (`[]`) was required.\n* Fixing a `TypeError` bug in `WebSocketRouter` (Thanks, [a0000778](https://github.com/a0000778))\n* Fixing a potential race condition when attaching event listeners to the underlying `Socket`. (Thanks [RichardBsolut](https://github.com/RichardBsolut))\n* `WebSocketClient` now accepts an optional options hash to be passed to `(http|https).request`. (Thanks [mildred](https://github.com/mildred) and [aus](https://github.com/aus))  This enables the following new abilities, amongst others:\n  * Use WebSocket-Node from behind HTTP/HTTPS proxy servers using [koichik/node-tunnel](https://github.com/koichik/node-tunnel) or similar.\n  * Specify the local port and local address to bind the outgoing request socket to.\n* Adding option to ignore `X-Forwarded-For` headers when accepting connections from untrusted clients.\n* Adding ability to mount a `WebSocketServer` instance to an arbitrary number of Node http/https servers.\n* Adding browser shim so Browserify won't blow up when trying to package up code that uses WebSocket-Node.  The shim is a no-op, it ***does not implement a wrapper*** providing the WebSocket-Node API in the browser.\n* Incorporating upstream enhancements for the native C++ UTF-8 validation and xor masking functions. (Thanks [einaros](https://github.com/einaros) and [kkoopa](https://github.com/kkoopa))\n\n\nVersion 1.0.8\n-------------\n*Released 2012-12-26*\n\n* Fixed remaining naming inconsistency of \"websocketVersion\" as opposed to \"webSocketVersion\" throughout the code, and added deprecation warnings for use of the old casing throughout.\n* Fixed an issue with our case-insensitive handling of WebSocket subprotocols.  Clients that requested a mixed-case subprotocol would end up failing the connection when the server accepted the connection, returning a lower-case version of the subprotocol name.  Now we return the subprotocol name in the exact casing that was requested by the client, while still maintaining the case-insensitive verification logic for convenience and practicality.\n* Making sure that any socket-level activity timeout that may have been set on a TCP socket is removed when initializing a connection.\n* Added support for native TCP Keep-Alive instead of using the WebSocket ping/pong packets to serve that function.\n* Fixed cookie parsing to be compliant with RFC 2109\n\nVersion 1.0.7\n-------------\n*Released 2012-08-12*\n\n* ***Native modules are now optional!*** If they fail to compile, WebSocket-Node will still work but will not verify that received UTF-8 data is valid, and xor masking/unmasking of payload data for security purposes will not be as efficient as it is performed in JavaScript instead of native code.\n* Reduced Node.JS version requirement back to v0.6.10\n\nVersion 1.0.6\n-------------\n*Released 2012-05-22*\n\n* Now requires Node v0.6.13 since that's the first version that I can manage to successfully build the native UTF-8 validator with node-gyp through npm.\n\nVersion 1.0.5\n-------------\n*Released 2012-05-21*\n\n* Fixes the issues that users were having building the native UTF-8 validator on Windows platforms.  Special Thanks to:\n  * [zerodivisi0n](https://github.com/zerodivisi0n)\n  * [andreasbotsikas](https://github.com/andreasbotsikas)\n* Fixed accidental global variable usage (Thanks, [hakobera](https://github.com/hakobera)!)\n* Added callbacks to the send* methods that provide notification of messages being sent on the wire and any socket errors that may occur when sending a message. (Thanks, [zerodivisi0n](https://github.com/zerodivisi0n)!)\n* Added option to disable logging in the echo-server in the test folder (Thanks, [oberstet](https://github.com/oberstet)!)\n\n\nVersion 1.0.4\n-------------\n*Released 2011-12-18*\n\n* Now validates that incoming UTF-8 messages do, in fact, contain valid UTF-8 data.  The connection is dropped with prejudice if invalid data is received.  This strict behavior conforms to the WebSocket RFC and is verified by the Autobahn Test Suite.  This is accomplished in a performant way by using a native C++ Node module created by [einaros](https://github.com/einaros).\n* Updated handling of connection closure to pass more of the Autobahn Test Suite.\n\nVersion 1.0.3\n-------------\n*Released 2011-12-18*\n\n* Substantial speed increase (~150% on my machine, depending on the circumstances) due to an optimization in FastBufferList.js that drastically reduces the number of memory alloctions and buffer copying. ([kazuyukitanimura](https://github.com/kazuyukitanimura))\n\n\nVersion 1.0.2\n-------------\n*Released 2011-11-28*\n\n* Fixing whiteboard example to work under Node 0.6.x ([theturtle32](https://github.com/theturtle32))\n* Now correctly emitting a `close` event with a 1006 error code if there is a TCP error while writing to the socket during the handshake. ([theturtle32](https://github.com/theturtle32))\n* Catching errors when writing to the TCP socket during the handshake. ([justoneplanet](https://github.com/justoneplanet))\n* No longer outputting console.warn messages when there is an error writing to the TCP socket ([justoneplanet](https://github.com/justoneplanet))\n* Fixing some formatting errors, commas, semicolons, etc.  ([kaisellgren](https://github.com/kaisellgren))\n\n\nVersion 1.0.1\n-------------\n*Released 2011-11-21*\n\n* Now works with Node 0.6.2 as well as 0.4.12\n* Support TLS in WebSocketClient\n* Added support for setting and reading cookies\n* Added WebSocketServer.prototype.broadcast(data) convenience method\n* Added `resourceURL` property to WebSocketRequest objects.  It is a Node URL object with the `resource` and any query string params already parsed.\n* The WebSocket request router no longer includes the entire query string when trying to match the path name of the request.\n* WebSocketRouterRequest objects now include all the properties and events of WebSocketRequest objects.\n* Removed more console.log statements.  Please rely on the various events emitted to be notified of error conditions.  I decided that it is not a library's place to spew information to the console.\n* Renamed the `websocketVersion` property to `webSocketVersion` throughout the code to fix inconsistent capitalization.  `websocketVersion` has been kept for compatibility but is deprecated and may be removed in the future.\n* Now outputting the sanitized version of custom header names rather than the raw value.  This prevents invalid HTTP from being put onto the wire if given an illegal header name.\n\n\nI decided it's time to start maintaining a changelog now, starting with version 1.0.1.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.49609375,
          "content": "\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.14453125,
          "content": "autobahn:\n\t@NODE_PATH=lib node test/autobahn-test-client.js --host=127.0.0.1 --port=9000\n\nautobahn-server:\n\t@NODE_PATH=lib node test/echo-server.js\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7138671875,
          "content": "WebSocket Client & Server Implementation for Node\n=================================================\n\n[![npm version](https://badge.fury.io/js/websocket.svg)](http://badge.fury.io/js/websocket)\n\n[![NPM Downloads](https://img.shields.io/npm/dm/websocket.svg)](https://www.npmjs.com/package/websocket)\n\n[ ![Codeship Status for theturtle32/WebSocket-Node](https://codeship.com/projects/70458270-8ee7-0132-7756-0a0cf4fe8e66/status?branch=master)](https://codeship.com/projects/61106)\n\nOverview\n--------\nThis is a (mostly) pure JavaScript implementation of the WebSocket protocol versions 8 and 13 for Node.  There are some example client and server applications that implement various interoperability testing protocols in the \"test/scripts\" folder.\n\n\nDocumentation\n=============\n\n[You can read the full API documentation in the docs folder.](docs/index.md)\n\n\nChangelog\n---------\n\n***Current Version: 1.0.34*** - Release 2021-04-14\n\n* Updated browser shim to use the native `globalThis` property when available. See [this MDN page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis) for context. Resolves [#415](https://github.com/theturtle32/WebSocket-Node/issues/415)\n\n[View the full changelog](CHANGELOG.md)\n\nBrowser Support\n---------------\n\nAll current browsers are fully* supported.\n\n* Firefox 7-9 (Old) (Protocol Version 8)\n* Firefox 10+ (Protocol Version 13)\n* Chrome 14,15 (Old) (Protocol Version 8)\n* Chrome 16+ (Protocol Version 13)\n* Internet Explorer 10+ (Protocol Version 13)\n* Safari 6+ (Protocol Version 13)\n\n(Not all W3C WebSocket features are supported by browsers. More info in the [Full API documentation](docs/index.md))\n\nBenchmarks\n----------\nThere are some basic benchmarking sections in the Autobahn test suite.  I've put up a [benchmark page](http://theturtle32.github.com/WebSocket-Node/benchmarks/) that shows the results from the Autobahn tests run against AutobahnServer 0.4.10, WebSocket-Node 1.0.2, WebSocket-Node 1.0.4, and ws 0.3.4.\n\n(These benchmarks are quite a bit outdated at this point, so take them with a grain of salt. Anyone up for running new benchmarks? I'll link to your report.)\n\nAutobahn Tests\n--------------\nThe very complete [Autobahn Test Suite](http://autobahn.ws/testsuite/) is used by most WebSocket implementations to test spec compliance and interoperability.\n\n- [View Server Test Results](http://theturtle32.github.com/WebSocket-Node/test-report/servers/)\n\nInstallation\n------------\n\nIn your project root:\n\n    $ npm install websocket\n  \nThen in your code:\n\n```javascript\nvar WebSocketServer = require('websocket').server;\nvar WebSocketClient = require('websocket').client;\nvar WebSocketFrame  = require('websocket').frame;\nvar WebSocketRouter = require('websocket').router;\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n```\n\nCurrent Features:\n-----------------\n- Licensed under the Apache License, Version 2.0\n- Protocol version \"8\" and \"13\" (Draft-08 through the final RFC) framing and handshake\n- Can handle/aggregate received fragmented messages\n- Can fragment outgoing messages\n- Router to mount multiple applications to various path and protocol combinations\n- TLS supported for outbound connections via WebSocketClient\n- TLS supported for server connections (use https.createServer instead of http.createServer)\n  - Thanks to [pors](https://github.com/pors) for confirming this!\n- Cookie setting and parsing\n- Tunable settings\n  - Max Receivable Frame Size\n  - Max Aggregate ReceivedMessage Size\n  - Whether to fragment outgoing messages\n  - Fragmentation chunk size for outgoing messages\n  - Whether to automatically send ping frames for the purposes of keepalive\n  - Keep-alive ping interval\n  - Whether or not to automatically assemble received fragments (allows application to handle individual fragments directly)\n  - How long to wait after sending a close frame for acknowledgment before closing the socket.\n- [W3C WebSocket API](http://www.w3.org/TR/websockets/) for applications running on both Node and browsers (via the `W3CWebSocket` class). \n\n\nKnown Issues/Missing Features:\n------------------------------\n- No API for user-provided protocol extensions.\n\n\nUsage Examples\n==============\n\nServer Example\n--------------\n\nHere's a short example showing a server that echos back anything sent to it, whether utf-8 or binary.\n\n```javascript\n#!/usr/bin/env node\nvar WebSocketServer = require('websocket').server;\nvar http = require('http');\n\nvar server = http.createServer(function(request, response) {\n    console.log((new Date()) + ' Received request for ' + request.url);\n    response.writeHead(404);\n    response.end();\n});\nserver.listen(8080, function() {\n    console.log((new Date()) + ' Server is listening on port 8080');\n});\n\nwsServer = new WebSocketServer({\n    httpServer: server,\n    // You should not use autoAcceptConnections for production\n    // applications, as it defeats all standard cross-origin protection\n    // facilities built into the protocol and the browser.  You should\n    // *always* verify the connection's origin and decide whether or not\n    // to accept it.\n    autoAcceptConnections: false\n});\n\nfunction originIsAllowed(origin) {\n  // put logic here to detect whether the specified origin is allowed.\n  return true;\n}\n\nwsServer.on('request', function(request) {\n    if (!originIsAllowed(request.origin)) {\n      // Make sure we only accept requests from an allowed origin\n      request.reject();\n      console.log((new Date()) + ' Connection from origin ' + request.origin + ' rejected.');\n      return;\n    }\n    \n    var connection = request.accept('echo-protocol', request.origin);\n    console.log((new Date()) + ' Connection accepted.');\n    connection.on('message', function(message) {\n        if (message.type === 'utf8') {\n            console.log('Received Message: ' + message.utf8Data);\n            connection.sendUTF(message.utf8Data);\n        }\n        else if (message.type === 'binary') {\n            console.log('Received Binary Message of ' + message.binaryData.length + ' bytes');\n            connection.sendBytes(message.binaryData);\n        }\n    });\n    connection.on('close', function(reasonCode, description) {\n        console.log((new Date()) + ' Peer ' + connection.remoteAddress + ' disconnected.');\n    });\n});\n```\n\nClient Example\n--------------\n\nThis is a simple example client that will print out any utf-8 messages it receives on the console, and periodically sends a random number.\n\n*This code demonstrates a client in Node.js, not in the browser*\n\n```javascript\n#!/usr/bin/env node\nvar WebSocketClient = require('websocket').client;\n\nvar client = new WebSocketClient();\n\nclient.on('connectFailed', function(error) {\n    console.log('Connect Error: ' + error.toString());\n});\n\nclient.on('connect', function(connection) {\n    console.log('WebSocket Client Connected');\n    connection.on('error', function(error) {\n        console.log(\"Connection Error: \" + error.toString());\n    });\n    connection.on('close', function() {\n        console.log('echo-protocol Connection Closed');\n    });\n    connection.on('message', function(message) {\n        if (message.type === 'utf8') {\n            console.log(\"Received: '\" + message.utf8Data + \"'\");\n        }\n    });\n    \n    function sendNumber() {\n        if (connection.connected) {\n            var number = Math.round(Math.random() * 0xFFFFFF);\n            connection.sendUTF(number.toString());\n            setTimeout(sendNumber, 1000);\n        }\n    }\n    sendNumber();\n});\n\nclient.connect('ws://localhost:8080/', 'echo-protocol');\n```\n\nClient Example using the *W3C WebSocket API*\n--------------------------------------------\n\nSame example as above but using the [W3C WebSocket API](http://www.w3.org/TR/websockets/).\n\n```javascript\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nvar client = new W3CWebSocket('ws://localhost:8080/', 'echo-protocol');\n\nclient.onerror = function() {\n    console.log('Connection Error');\n};\n\nclient.onopen = function() {\n    console.log('WebSocket Client Connected');\n\n    function sendNumber() {\n        if (client.readyState === client.OPEN) {\n            var number = Math.round(Math.random() * 0xFFFFFF);\n            client.send(number.toString());\n            setTimeout(sendNumber, 1000);\n        }\n    }\n    sendNumber();\n};\n\nclient.onclose = function() {\n    console.log('echo-protocol Client Closed');\n};\n\nclient.onmessage = function(e) {\n    if (typeof e.data === 'string') {\n        console.log(\"Received: '\" + e.data + \"'\");\n    }\n};\n```\n    \nRequest Router Example\n----------------------\n\nFor an example of using the request router, see `libwebsockets-test-server.js` in the `test` folder.\n\n\nResources\n---------\n\nA presentation on the state of the WebSockets protocol that I gave on July 23, 2011 at the LA Hacker News meetup.  [WebSockets: The Real-Time Web, Delivered](http://www.scribd.com/doc/60898569/WebSockets-The-Real-Time-Web-Delivered)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 0.349609375,
          "content": "/**\n * Dependencies.\n */\nvar gulp = require('gulp');\nvar jshint = require('gulp-jshint');\n\ngulp.task('lint', function() {\n\treturn gulp.src(['gulpfile.js', 'lib/**/*.js', 'test/**/*.js'])\n\t\t.pipe(jshint('.jshintrc'))\n\t\t.pipe(jshint.reporter('jshint-stylish', {verbose: true}))\n\t\t.pipe(jshint.reporter('fail'));\n});\n\ngulp.task('default', gulp.series('lint'));\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.04296875,
          "content": "module.exports = require('./lib/websocket');"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.30859375,
          "content": "{\n  \"name\": \"websocket\",\n  \"description\": \"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.\",\n  \"keywords\": [\n    \"websocket\",\n    \"websockets\",\n    \"socket\",\n    \"networking\",\n    \"comet\",\n    \"push\",\n    \"RFC-6455\",\n    \"realtime\",\n    \"server\",\n    \"client\"\n  ],\n  \"author\": \"Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)\",\n  \"contributors\": [\n    \"IÃ±aki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)\"\n  ],\n  \"version\": \"1.0.34\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/theturtle32/WebSocket-Node.git\"\n  },\n  \"homepage\": \"https://github.com/theturtle32/WebSocket-Node\",\n  \"engines\": {\n    \"node\": \">=4.0.0\"\n  },\n  \"dependencies\": {\n    \"bufferutil\": \"^4.0.1\",\n    \"debug\": \"^2.2.0\",\n    \"es5-ext\": \"^0.10.63\",\n    \"typedarray-to-buffer\": \"^3.1.5\",\n    \"utf-8-validate\": \"^5.0.2\",\n    \"yaeti\": \"^0.0.6\"\n  },\n  \"devDependencies\": {\n    \"buffer-equal\": \"^1.0.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"jshint\": \"^2.0.0\",\n    \"tape\": \"^4.9.1\"\n  },\n  \"config\": {\n    \"verbose\": false\n  },\n  \"scripts\": {\n    \"test\": \"tape test/unit/*.js\",\n    \"gulp\": \"gulp\"\n  },\n  \"main\": \"index\",\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"browser\": \"lib/browser.js\",\n  \"license\": \"Apache-2.0\"\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}