{
  "metadata": {
    "timestamp": 1736561890186,
    "page": 575,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spine/spine",
      "stars": 3662,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.029296875,
          "content": ".DS_Store\n.junit\nnode_modules\n"
        },
        {
          "name": "Cakefile",
          "type": "blob",
          "size": 0.6083984375,
          "content": "{spawn} = require 'child_process'\n\ntask 'build', 'Build lib/ from src/', ->\n  coffee = spawn 'node_modules/.bin/coffee', ['-c', '-o', 'lib', 'src']\n  coffee.stderr.on 'data', (data) ->\n    process.stderr.write data.toString()\n  coffee.stdout.on 'data', (data) ->\n    console.log data.toString()\n  coffee.on 'exit', (code) ->\n    callback?() if code is 0\n\ntask 'watch', 'Watch src/ for changes', ->\n  coffee = spawn 'node_modules/.bin/coffee', ['-w', '-c', '-o', 'lib', 'src']\n  coffee.stderr.on 'data', (data) ->\n    process.stderr.write data.toString()\n  coffee.stdout.on 'data', (data) ->\n    console.log data.toString()\n"
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 5.025390625,
          "content": "## 1.6.0\n* CoffeeScript 1.9.3\n* Collection ajax calls can now accept done or fail callbacks #591\n* Unsuccessful ajax POST calls automatically delete the local model #591\n* Unsuccessful ajax DELETE calls automatically restore the local model #591\n* Fix a bug with stopListening #596\n\n## 1.5.0\n* CoffeeScript 1.9.2\n* Add ability to insert record at index #586\n* Remove Spine.isArray polyfill #589\n* Remove Spine.isBlank util #589\n* The relation module utilizes underscore instead of dot #446\n\n## 1.4.2\n* CoffeeScript 1.9.1\n* Fixes for coffeescript change #578\n* LocalStorage module checks for functioning localStorage #584\n\n## 1.4.1\n* Use beforeFromJSON before passing json to ajaxSuccess\n* The ajaxSuccess event again passes item as first arg\n\n## 1.4.0\n* CoffeeScript 1.8.0\n* Refactored model event dispatching #558\n* Replaced exists() with find() in relation module\n* Fixed Route unbind #551\n* Remove controllers @$el as broken alias for @el #552\n* Migrate to jasmine 2.1.3 for tests\n\n## 1.3.2\n* Fixes and minor improvements to route and relations modules #535, #551, #533\n* Add Model.findAll() #538\n* code cleanup #537, #536\n* jasmine test pass in IE9 #549\n* CoffeeScript 1.7.1\n\n## 1.3.1\n* Fixes and improvements to route and manager modules #513\n* Ajax methods configurable #523\n* Fix for orphaned model instances #527\n\n## 1.3\n* Minor updates for CoffeeScript 1.7\n* Change Model.find() to not throw error and accept fallback function\n* Model.exists() will now return simply true or false\n* Optional customizable UUID for model records #451\n* Improvements to some triggers #508\n* Improve ajax route and scope customizability #510\n* Experimental bindings module #491\n\n## 1.2.2\n* Add Model.slice() and improve .last() and .first()\n\n## 1.2.1\n* Fix a few bugs\n* Add a license header\n\n## 1.2.0\n* Much improved fromForm method\n* Fix controller.replace()\n* Trigger can pass options\n* Code cleanup for listen methods\n* Improve manager module handling of activate deactivate events\n* Accept url override for methods that would delegate to ajax- `Asset.save {url:'/some/other/url'}` (#467)\n* Simpler mechanism for maintaining model order\n* Unmatched route redirect options\n* Better handle race conditions in the ajaxQueue\n\n## 1.1.0\n* Test suite improvements including core now being tested against Zepto.js\n* Persistent ordering of model instances in Chrome \n* Numerous improvements to relations module\n* ListenTo and stopListening methods to help keep Spine's pub/sub implementation tidy\n* Improve unbind method on model instances\n* Better enable nesting and extending controllers\n* Ajax module supports options for scoping the url\n\n## v1.0.9\n\n* Tested against newer jQuery versions\n* On and off aliases for bind and unbind\n* Routes can accept option to use history.replaceState()\n* More descriptive 'unknown record' errors\n* Better cloning so records don't diverge\n* Throw errors if naming conflicts in stack manager\n* Fix some edge case bugs with routing\n\n## v1.0.8\n\nA bug-fix release.\n\n* ???\n* ???\n* ???\n\n## v1.0.7\n\nA bug-fix release.\n\n* Fix named globs in routes\n* Deprecate Model.prototype.init()\n* Make cids simplier\n* Controller event callbacks always return true, so you don't accidentally cancel the event\n* `release` is now just a method you can override, not an event\n* Fixed `findAllByAttribute` in `relations.coffee`\n* Try/catch round `Ajax.disable` do Ajax is always enabled again\n* Model Ajax requests can be cancelled with `save(ajax: false)`\n\n## v1.0.6\n\n##Features\n\nMain two new features are:\n\nAjax options on save, for example:\n\n```coffeescript\nuser.save(success: -> alert('saved!'))\nuser.save(ajax: false) # Disable Ajax\nuser.save(ajax: ajaxOptions)\n```\n\nAnd cids:\n\n```coffeescript\nproject = Project.create()\n@navigate '/projects', project.cid\n\nProject.find(project.cid) #=> Project\n```\n\n##Abstract\n\n* Fixed double Ajax disabling issue\n* Can now pass request options to Ajax on save\n* url() now takes multiple arguments\n* Fix association id comparison issue\n* Now have internal CIDs for use in comparison and in URLs\n* Add 'attributes' option to controllers\n\nAnd much more...\n\n## v1.0.5\n\n###Abstract\n\nMostly a bunch of fixes, with some new features:\n\n* Fix issues with routing order\n* Allow regexes in routes\n* Include spine.app as a dependency\n* Add [Stacks](http://spinejs.com/docs/stacks)\n* Add fromForm to models (see [API](http://spinejs.com/api/models))\n* Fix cross-domain ajax\n* create()/save() now return clones\n\n## v1.0.3\n\n###Abstract:\n\nVersion 1.0.3 was mostly about Ajax, and integrating Spine with Rails.\n\n###New features:\n\n* Model's *refresh* event now includes the new resources\n* Pass an 'id' option to fetch, in order to fetch a single record via ajax\n* Bind to an event once, with the 'one()' function\n* Allow namespaced events in the controller\n* Model#attributes() & Model#load() now works for functions. In other words, you can use a functions instead of basic datatypes for attributes on models.\n\n###Refactors:\n\n* Ajax refactor, including easier integration with Ajax callbacks\n* Refactor the way instance events get triggered on records\n* Removed deprecated Spine.App - which also enables Node.js compatibility\n \n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "Copyright (c) 2011 Alex MacCaw (info@eribium.org)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.611328125,
          "content": "# Spine\n[![Build Status](https://img.shields.io/circleci/project/spine/spine/dev.svg?style=flat)](https://circleci.com/gh/spine/spine)\n[![Gitter](https://img.shields.io/gitter/room/spine/spine.svg?style=flat)](https://gitter.im/spine/spine?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nSpine is a lightweight MVC library for building JavaScript web applications. Spine gives you structure and then gets out of your way, allowing you to concentrate on the fun stuff: building awesome web applications.\n\nSpine is opinionated in its approach to web application architecture and design. Spine's architecture complements patterns such as de-coupled components and CommonJS modules, markedly helping with code quality and maintainability.\n\nThe library is written in [CoffeeScript](http://coffeescript.org), and though it doesn't necessarily require CoffeeScript to develop applications - you can use whichever language you're most familiar with or prefer - the documentation and some associated tools like [Hem](https://github.com/spine/hem) and [spine.app](https://github.com/spine/spine.app) cater to those who prefer CoffeeScript's syntax.\n\n## Learn it\n\nDocumentation is often incomplete or just lies waiting to happen. Approachable source code reduces knowledge dependencies. This is an area where Spine really excels compared to other MVC frameworks. Spine is tiny; the core library comes in at less than 700 lines of CoffeeScript code. It is written in such a way to prefer readability over terseness or clever tricks, and it is small enough that within a rather small timeframe you can understand how all the pieces work together. Expertise is achievable within days or weeks rather than months or years. For these reasons, remaining lightweight and simple is fundamental to Spine.\n\nFor documentation, usage, and examples, see: [spine.github.io](http://spine.github.io/)\n\nThe test suite can also occasionally provide additional useful examples, especially if you are looking for non-coffeescript examples.\n\n# Contributing\n\n## Reporting issues\n\nTo file a bug report, please visit the [GitHub issues page](https://github.com/spine/spine/issues).  It's great if you can attach code (test cases and fixes for bugs, and test cases and a proposed implementation for features), but reproducible bug reports are also welcome. \n\nFor support or help with using spine please use the [Spine Google Group](https://groups.google.com/forum/#!forum/spinejs) and/or StackOverflow rather than opening an issue on Github. If you post in those places you are more likely to get more people to chime in, and others can benefit from it more readily.\n\n## Cloning master and running the test suite\n\nTo get started contributing to Spine, first clone the repository and make sure you can run the test suite.  If you're not familiar with Git, visit the [Git homepage](http://git-scm.com) to download Git for your platform.\n\nFirst, clone the repository:\n\n```\n$ git clone git://github.com/spine/spine.git\n$ cd spine\n```\n\nNext, You will need node and npm to pull in the testing libraries. Once you're all set with those then from within the Spine repo directory run\n\n```\n$ npm install\n```\n\nThis will install CoffeeScript and the [Karma test runner](http://karma-runner.github.io).\n\nAt this point you can easily run the complete test suite using\n\n```\n$ npm test\n```\n\nBut this isn't very practical for development, since it runs the test suite multiple times agains different versions of jQuery.\n\nA better approach is to install the Karma CLI\n\n```\n$ npm install -g karma-cli\n```\n\nThen you can use `$ karma start` to run the tests using the latest stable version of jQuery. Karma will keep running in the background and re-run tests whenever you change any files.\nWhen the Karma server is running, you can debug tests in your browser by visiting `http://localhost:9876/debug.html`.\n\nIt's also possible to test agains a specific version of jQuery if needed: `$ JQUERY_VERSION=1.9.1 karma start`.\n\n## Contributing to the Spine documentation\n\nPerhaps the easiest way to get started with contributing is through the docs.  If you find typos, bugs, or omissions in the docs, please submit a pull request to fix.  [The Spine website](http://spine.github.io/), which is the primary documentation, is a very simple [Wintersmith](http://wintersmith.io/) app at [spine.github.io](https://github.com/spine/spine.github.io). Basic markdown  familiarity is probably all you need to be able to make changes.\n\n## Contributing to the Spine code\n\nThis recommended contribution process is based on the [Ruby on Rails contribution guide](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-code).  In general, please include tests with new features or bugfixes, work in a feature branch until you're ready to submit or discuss your code, then fork the repository, push to your fork, and issue a pull request.\n\n### CoffeeScript\n\nWhen submitting a pull request for code, please submit in CoffeeScript. Building the effected js files is required for testing sake, but submitting those js files is optional.\n\nAssuming you have Node.js and npm already installed then proceed by installing local dev dependencies:\n\n```\n$ npm install\n```\n\nThen use the provided build scripts to compile your CoffeeScript files:\n\n```\n$ cake build\n$ cake watch\n```\n\nThese tasks use a locally installed copy of CoffeeScript to ensure all contributors use the same version of the compiler.\n\n### Git\n\nLet's say I'm going to submit a patch to add someFeatureFix:\n\n```\n$ git checkout dev\n```\n\nFeature branches should start from `dev` **not** `master`. If you branch off of, or do builds on the master branch you will get CoffeeScript source map files, which are cool, but tend to ruin automatic merges with git.\n\n```\n$ git checkout -b someFeatureFix\n$ vim test/...\n  # (...add tests...)\n$ cake watch\n  # (...this should recompile and changes you make in your CoffeeScript...)\n\n-- figure out what spine module your changes belong in\n$ vim src/spine.coffee\nor\n$ vim src/[otherSpineComponent].coffee\n  # (...add the feature/fix...)\n$ open test/index.html\n  # (...make sure tests run for each component that was changed...)\n  # (...test in other browsers with various jquery versions if you feel like there is risk... )\n$ git commit -m \"Add Some Feature Fix\"\n```\n\nThen, [fork the Spine repository](https://github.com/spine/spine/fork), and push your branch to your fork:\n\n```\n$ git remote add <your user name> git@github.com:<your user name>/spine.git\n$ git push <your user name> someFeatureFix\n```\n\nFinally, issue a pull request from inside the GitHub interface to the `dev` branch of spine, and your contribution is ready for consideration, discussion, and (hopefully) merging in!\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 0.03515625,
          "content": "machine:\n  node:\n    version: 6.1.0\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.0390625,
          "content": "module.exports = require('./lib/spine');"
        },
        {
          "name": "karma.conf.coffee",
          "type": "blob",
          "size": 2.41015625,
          "content": "# Karma configuration\n# Generated on Wed Mar 09 2016 17:12:47 GMT-0800 (PST)\nDEFAULT_JQUERY_VERSION = '3.2.1'\nJQUERY_VERSION = process.env.JQUERY_VERSION or DEFAULT_JQUERY_VERSION\nJUNIT_DIR = process.env.CIRCLE_TEST_REPORTS or '.junit'\n\nmodule.exports = (config) ->\n  console.log \"\"\n  console.log \"Running Spine.js unit tests against jQuery v#{ JQUERY_VERSION }...\"\n  console.log \"\"\n\n  config.set\n\n    # base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: ''\n\n\n    # frameworks to use\n    # available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: [\n      'jasmine-ajax'\n      'jasmine'\n    ]\n\n\n    # list of files / patterns to load in the browser\n    files: [\n      \"http://code.jquery.com/jquery-#{ JQUERY_VERSION }.js\"\n      'src/spine.coffee'\n      'src/route.coffee'\n      'src/relation.coffee'\n      'src/manager.coffee'\n      'src/local.coffee'\n      'src/list.coffee'\n      'src/bindings.coffee'\n      'src/ajax.coffee'\n      'test/*.js'\n    ]\n\n\n    # list of files to exclude\n    exclude: [\n    ]\n\n\n    # preprocess matching files before serving them to the browser\n    # available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors:\n      '**/*.coffee': ['coffee']\n\n    coffeePreprocessor:\n      options:\n        bare: false\n        sourceMap: false\n\n\n    # test results reporter to use\n    # possible values: 'dots', 'progress'\n    # available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['dots', 'junit']\n\n    junitReporter:\n      outputDir: \"#{ JUNIT_DIR }/jquery-v#{ JQUERY_VERSION }\"\n\n\n    # web server port\n    port: 9876\n\n\n    # enable / disable colors in the output (reporters and logs)\n    colors: true\n\n\n    # level of logging\n    # possible values:\n    # - config.LOG_DISABLE\n    # - config.LOG_ERROR\n    # - config.LOG_WARN\n    # - config.LOG_INFO\n    # - config.LOG_DEBUG\n    logLevel: config.LOG_INFO\n\n\n    # enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true\n\n\n    # start these browsers\n    # available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: [\n      'PhantomJS'\n      'Chrome'\n      'Firefox'\n    ]\n\n\n    # Continuous Integration mode\n    # if true, Karma captures browsers, runs the tests and exits\n    singleRun: false\n\n    # Concurrency level\n    # how many browser should be started simultaneous\n    concurrency: Infinity\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.259765625,
          "content": "{\n  \"name\": \"spine\",\n  \"description\": \"MVC Library.\",\n  \"version\": \"1.6.2\",\n  \"license\": \"MIT\",\n  \"author\": \"maccman\",\n  \"homepage\": \"http://spinejs.com\",\n  \"bugs\": \"https://github.com/spine/spine/issues\",\n  \"repository\": \"spine/spine\",\n  \"keywords\": [\n    \"spine\",\n    \"coffeescript\",\n    \"MVC\"\n  ],\n  \"contributors\": [\n    \"maccman\",\n    \"aeischeid\",\n    \"cengebretson\",\n    \"adambiggs\"\n  ],\n  \"devDependencies\": {\n    \"coffee-script\": \"^1.11.1\",\n    \"karma\": \"^1.3.0\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-coffee-preprocessor\": \"^1.0.1\",\n    \"karma-firefox-launcher\": \"^1.0.0\",\n    \"karma-jasmine\": \"^1.0.2\",\n    \"karma-jasmine-ajax\": \"^0.1.13\",\n    \"karma-junit-reporter\": \"^1.1.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.2\",\n    \"jasmine-core\": \"^2.5.2\",\n    \"phantomjs-prebuilt\": \"^2.1.13\"\n  },\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"karma start --single-run && JQUERY_VERSION=2.2.4 karma start --single-run && JQUERY_VERSION=2.1.4 karma start --single-run && JQUERY_VERSION=2.0.3 karma start --single-run && JQUERY_VERSION=1.12.1 karma start --single-run && JQUERY_VERSION=1.11.3 karma start --single-run && JQUERY_VERSION=1.10.2 karma start --single-run && JQUERY_VERSION=1.9.1 karma start --single-run && JQUERY_VERSION=1.8.3 karma start --single-run\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}