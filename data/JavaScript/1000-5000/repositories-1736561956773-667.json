{
  "metadata": {
    "timestamp": 1736561956773,
    "page": 667,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "guardian/scribe",
      "stars": 3501,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.162109375,
          "content": "# editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1083984375,
          "content": "/build/\n/node_modules/\n/bower_components/\n/vendor/\n/examples/build.js\n.tern-port\n.npm-debug.log\n.DS_Store\ndist\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.287109375,
          "content": "{\n  \"browser\": true,\n  \"eqeqeq\": true, // ===\n  \"laxbreak\": true, // Tolerate unsafe line breaks e.g. `return [\\n] x` without semicolons.\n  \"node\": true,\n  \"predef\": [\"define\"],\n  \"quotmark\": \"single\",\n  \"undef\": true, // Prohibits the use of explicitly undeclared variables\n  \"unused\": true\n}\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.001953125,
          "content": "5\n"
        },
        {
          "name": ".tern-project",
          "type": "blob",
          "size": 0.240234375,
          "content": "{\n  \"plugins\": {\n    \"requirejs\": {\n      \"baseURL\": \"./src\",\n      \"paths\": {\n        \"html-janitor\": \"./bower_components/html-janitor/src/html-janitor\",\n        \"lodash-amd\": \"../bower_components/lodash-amd\"\n      }\n    },\n    \"node\": {}\n  }\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2099609375,
          "content": "language: node_js\n\nnode_js:\n  - \"5.11\"\n\nsudo: false\n\ncache:\n  directories:\n    - node_modules\n    - bower_components\n\nbefore_script:\n  - npm install -g bower\n  - bower install\nscript: TEST_SERVER_PORT=8090 npm test\n"
        },
        {
          "name": "BROWSERINCONSISTENCIES.md",
          "type": "blob",
          "size": 5.748046875,
          "content": "## List of `contenteditable` Browser Inconsistencies\nPlayground: http://jsbin.com/iwEWUXo/2/edit?js,console,output\n\n### `document.execCommand` commands\n* Firefox: When the `contenteditable` element is a custom element, an error is\n  thrown when trying to apply one of the following commands. As per:\n  http://jsbin.com/etepiPOn/1/edit?html,css,js,console,output\n* Chrome has some magic to re-focus the `contenteditable` when a command is\n  executed and the selection is not collapsed:\n  http://jsbin.com/papi/1/edit?html,js,output\n* \"`insertBrOnReturn`\": http://jsbin.com/IQUraXA/1/edit?html,js,output\n* \"`insertHTML`\":\n  - http://jsbin.com/elicInov/2/edit?html,js,output\n  - Chrome tries to be clever by applying inline styles/SPANs with `line-\n    height`: http://jsbin.com/ilEmudi/4/edit?css,js,output\n  - Chrome applies styling to invalid markup, Firefox allows invalid markup:\n    http://jsbin.com/ObiBoweG/1/edit?js,console,output\n  - Given an empty P element, Chrome will wrap inserted text nodes not in a P,\n    whereas Firefox will not: http://jsbin.com/olEbecEM/1/edit?js,output\n  - Given content of `<p>1|</p>`, when inserting HTML of `<p>2</p>`, Chrome will\n    merge the inserted P element into the existing P element, whereas Firefox\n    will not: http://jsbin.com/uvEdacoz/6/edit?js,output\n  - Given content of `<p>1|</p>`, when inserting HTML of `<p>2<o></o></p>`,\n    Chrome will merge the inserted P element into the existing P element\n    *excluding any custom elements*, whereas Firefox will not:\n    http://jsbin.com/tuleq/3/edit?js,output\n  - Given content of `<p>1<br>|</p>`, when inserting HTML of `2<p>3</p>`, Chrome\n    will append the inserted unwrapped text node immediately into the existing\n    paragraph, whereas Firefox will append a BR element followed by the text\n    node: http://jsbin.com/uvEdacoz/7/edit?js,output\n  - Given a selection across multiple P elements, Firefox will insert the\n    content outside of any P element: http://jsbin.com/jiviniti/4/edit?js,output\n* \"`formatBlock`\": http://jsbin.com/UTUDaPoC/1/edit?html,js,output\n* \"`bold`\": http://jsbin.com/IxiSeYO/4/edit?html,js,output\n* \"`outdent`\":\n  - Chrome removes BLOCKQUOTE content formatting:\n    http://jsbin.com/okAYaHa/1/edit?html,js,output\n  - Chrome removes collapsed selection formatting:\n    http://jsbin.com/IfaRaFO/1/edit?html,js,output\n* \"`insertOrderedList`\"/\"`insertOrderedList`\":\n  - Chrome nests list inside of block elements:\n    http://jsbin.com/eFiRedUc/1/edit?html,js,output\n  - Chrome removes SPAN: http://jsbin.com/abOLUNU/1/edit?html,js,output\n  - Chrome tries to be clever by applying inline styles/SPANs with `line-\n    height`: http://jsbin.com/OtemujAY/10/edit?html,css,js,output\n  - Chrome does not add a BR element when there is no `DOCTYPE`:\n    http://jsbin.com/sasec/1/edit?js,console,output\n    https://code.google.com/p/chromium/issues/detail?id=396654&thanks=396654&ts=1406132418\n* \"`indent`\":\n  - Chrome nests BLOCKQUOTE inside of P:\n    http://jsbin.com/oDOriyU/3/edit?html,js,output\n  - Chrome nests ULs inside of ULs:\n    - http://jsbin.com/ORikUPa/3/edit?html,js,output\n    - http://jsbin.com/kuvi/1/edit?js,output\n  - Chrome adds redundant `style` attribute:\n    http://jsbin.com/AkasOzu/1/edit?html,js,output\n  - Chrome converts BRs to Ps: http://jsbin.com/zeti/2/edit?js,output\n  - Firefox does not perform transformation upon Ps containing BRs:\n    http://jsbin.com/yiyaq/1/edit?js,output\n* \"`createLink`\"\n  - Firefox does not create A if selection is empty:\n    http://jsbin.com/tutufi/2/edit?js,output\n* \"`delete`\":\n  - Given a selection across multiple P elements, Firefox will place the caret\n    outside of any P element: http://jsbin.com/xopivama/3/edit?js,output\n\n### `Document.queryCommandState`\n* Browser magic: Chrome and Firefox report command state to be true after\n  applying a command to a collapsed selection, but why?:\n  http://jsbin.com/eDOxacI/1/edit?js,console,output\n* `superscript`: Firefox: Returns false when a whole `SUP` is selected:\n  http://jsbin.com/marox/1/edit?js,console,output\n* `subscript`: Firefox: Returns false when a whole `SUB` is selected:\n  http://jsbin.com/marox/1/edit?js,console,output\n  - True for all inline elements?\n* Firefox throws `NS_ERROR_UNEXPECTED` error for `insertUnorderedList` and\n  `insertOrderedList` when a contenteditable is not focussed, see:\n  https://github.com/guardian/scribe/issues/208\n\n### `Element.focus`\n* Firefox: Giving focus to a `contenteditable` will place the caret outside of\n  any block elements. Chrome behaves correctly by placing the caret at the\n  earliest point possible inside the first block element:\n  http://jsbin.com/eLoFOku/1/edit?js,console,output\n\n### Events\n* Chrome tries to be clever by applying inline styles/SPANs with `line-height`\n  on \\<backspace> or \\<delete> keyboard events:\n  http://jsbin.com/isIdoKA/3/edit?html,css,js,output\n* Firefox breaks out of P mode on \\<backspace> or \\<delete> keyboard events when\n  HTML has indentation between block elements:\n  http://jsbin.com/EyuKase/1/edit?js,output\n\n## Other\n* Chrome (<= 28(?)): `TreeWalker` does not work properly with\n  `DocumentFragment`s: http://stackoverflow.com/questions/21803827/chrome-28\n  -treewalker-not-working-with-documentfragments\n* Firefox: Selection object never gets access to text nodes, only parent\n  elements: http://jsbin.com/rotus/2/edit?js,output,console\n\n### `Range.commonAncestorContainer`\n* Firefox: Returns `P` when a whole `SUP` is selected:\n  http://jsbin.com/xoqul/1/edit?js,console,output\n\n### `Selection.getRangeAt`\n* Chrome (< 42): Selection.getRangeAt() returns an incorrect range when in shadow DOM\n  https://code.google.com/p/chromium/issues/detail?id=380690\n\n### `Selection.isCollapsed`\n* Chrome: Selection.isCollapsed is incorrect when in shadow DOM\n  https://code.google.com/p/chromium/issues/detail?id=447523\n  http://jsfiddle.net/7zgegoda/2/\n\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 12.9013671875,
          "content": "# 3.3.0\n\nMerges a range of bug fixes including removing the dependency on lodash, use of ES6 `const` not inserting `<br>` tags into custom elements and a sanity check to ensure a `listElement` exists before inserting a list.\n\nThank you [Dan Burzo](https://github.com/danburzo), [James Lawson](https://github.com/jameslawson), [code-smith](https://github.com/code-smith), [Nazar Mokrynskyi](https://github.com/nazar-pc), [Rob Rees](https://github.com/rrees) and [Oliver J Ash](https://github.com/OliverJAsh) for contributing to these fixes.\n\nWe hope to move towards more granular releases from now on.\n\n# 3.2.0\n\nThis changes the key bindings for undo and redo so that they are more specific and should no longer capture the key sequence for certain Polish letters. See #448 for details.\n\nThank you [Dan Burzo](https://github.com/danburzo) for contributing this fix.\n\n# 3.1.0\n\nUpdates the version of Immutable Scribe uses to 3.8.x.\n\n# 3.0.0\n\nReplaces the last Lodash call with `Object.assign`. This was already available in the browsers Scribe is targeted at but in addition the build process has been changed to use later versions of Node.\n\n# 2.3.0\n\nIntroduces a destroy event that plugins can use to clean up after themselves.\n\nThis re-implements an initial implementation by [Craig Speath](https://github.com/craigspaeth), thanks for the contribution.\n\n# 2.2.5\n\nSwitches the events from literal strings to using identities from an events module.\n\n# 2.2.4\n\nAttempts to simplify the code in the `inline-elements-mode` plugin as per the suggestions from [Rasmus Schultz](https://github.com/mindplay-dk).\n\nThis change also covers the code with a unit test in case it needs to be modified in future.\n\n# 2.2.3\n\nRemoves unneeded paramters from calls to `setStartAfter` and `setEndAfter`.\n\nThanks to [Rasmus Schultz](https://github.com/mindplay-dk) for reporting the issue.\n\n# 2.2.2\n\nRemoves the observable check function introduced in 2.1.0. As this was not exported I'm treating it as a non-breaking change.\n\n# 2.2.1\n\nCorrects a small style issue where one of the tests was relying on the default coercion of the empty string to the false boolean. The test is now explicit.\n\n# 2.2.0\n\nAddresses issue #456 where one of the core plugins (enforce-p-elements) would wrap empty text nodes in paragraph elements. This behaviour was hidden by the use of the HTML Sanitizer.\n\nText nodes consisting just of whitespace are not changed now when the plugin runs.\n\nThanks to [Rasmus Schultz](https://github.com/mindplay-dk) for reporting the issue.\n\n# 2.1.2\n\nFixes an issue where the undo manager could not be disabled due to an unconditional execution of the manager code in the setHTML method (issue #452).\n\n# 2.1.1\n\nFixes an issue where the window global was still being referenced so the module still couldn't be used server-side.\n\n# 2.1.0\n\nChanges the way the mutation observer is determined and changes the way that nodes with certain classes are checked for. Both of these changes are aimed at offerring better support for server-side rendering.\n\nThank you [Sergey Zyablitsky](https://github.com/szyablitsky) and [Simon Degraeve](https://github.com/SimonDegraeve) for your contributions towards this goal.\n\n# 2.0.2\n\nAdds a workaround to allow paste events to work on Android. Thanks to [crasu](https://github.com/crasu) for the contribution.\n\n# 2.0.1\n\nThe code for handling manual navigation in list elements now passes the event to its associated command for plugins to use in their response.\n\nThank you to [Josh Moore](https://github.com/josh-infusionsoft) for contributing this change. Please raise issues on how you think this should work generally if you are interested.\n\n# 2.0.0\n\nA split text node will [no longer be replaced by a non-breaking backspace](https://github.com/guardian/scribe/pull/421) but instead should be a regular space character.\n\nThanks [Jeffrey Wear](https://github.com/wearhere) for this change/fix\n\n# 1.4.15\n\nStripping of Chrome artifacts has been consolidated into a single function. Thanks [Regis Kuckaertz](https://github.com/regiskuckaertz)\n\n# 1.4.14\n\nThe undo manager has been re-written to use Immutable data structures. Thanks [Regis Kuckaertz](https://github.com/regiskuckaertz)\n\n# 1.4.13\n\nA more elegant fix for [#401](https://github.com/guardian/scribe/issues/401) from [Alexy Golev](https://github.com/alexeygolev), thanks!\n\n# 1.4.12\n\nRestores `scribe.element` (lost in release 1.4.9) to avoid breaking backwards compatibility\n\n# 1.4.11\n\nAnother attempt to fix [#401](https://github.com/guardian/scribe/issues/401), this time using Immutable data and Array.prototype.slice.\n\n# 1.4.10\n\nThe `NS_ERROR_UNEXPECTED` is now caught and supressed. This exeception is being [thrown by Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=562623) and seems to be a browser specific bug to do with element focus. This change just avoids lots of supurious errors being thrown.\n\nWe should remove it once the bug has been fixed.\n\n# 1.4.9\n\nConsolidates a number of api operations into the node module.\n\nRestructing by [Regis Kuckaertz](https://github.com/regiskuckaertz)\n\n# 1.4.8\n\nShort-circuits the mutation evaluation via use of Array.prototype.some\n\n[Regis Kuckaertz](https://github.com/regiskuckaertz)\n\n# 1.4.7\n\nNot a valid build, issues between Bower and NPM\n\n# 1.4.6\n\nTreat the clipboard data types variable as an array to avoid issues with future releases of Chrome (and other browsers). Resolves [#401](https://github.com/guardian/scribe/issues/401).\n\n# 1.4.5\n\nCorrects the NPM version of the ImmutableJS dependency\n\n# 1.4.4\n\nReplaces some of the use of Lodash contains with Immutable data structures and `includes`.\n\n# 1.4.3\n\nChanges the require alias so that the Immutable import path is simplified.\n\n# 1.4.2\n\nA number of performance improvements have been contributed by [Regis Kuckaertz](https://github.com/regiskuckaertz). Primarily these include avoiding TreeWalker where it isn't needed and moving a number of function definitions to the parse phase. See the individual PRs for details.\n\n# 1.4.1\n\nSmall optimisation to avoid a relayout as a result of placing Scribe markers.\n\nThanks for improvement [Brad Vogel](https://github.com/bradvogel)\n\n# 1.4.0\n\nChanges the cleanup for Chrome inline style tags that happens in the patch for the `insertHTML` command. Previously span tags were aggressively stripped whereas now they are less aggressively removed to limit the fix just to the type of spans that Chrome inserts.\n\nThanks [Christopher Liu](https://github.com/christopherliu) for contributing this change.\n\n# 1.3.9\n\nStops Scribe failing on a focus event if the content of the Scribe element is set to empty. Previously the code assumed that a child node is available, now the focus node will be the parent element if there are no children.\n\nBased on contributions from [Ryan Fitzgerald](https://github.com/rf-)\n\n# 1.3.7\n\nFixes a bug where em tags were being stripped where we meant to strip Scribe markers instead.\n\nThanks [Abdulrahman Alsaleh](https://github.com/aaalsaleh) for the fix\n\n# 1.3.6\n\nFixes a bug preventing individual events being switched off events in the event-emitter\nBumps Lodash to 3.5.0 in the NPM package description for those using CommonJS builds\n\nThanks [Ryan Fitzgerald](https://github.com/rf-)!\n\n# 1.3.5\n\nFixes `event-emitter` off behaviour when un-binding events\n\n# 1.3.4\n\nReverts the change to 3.5.0 as Bower and NPM-based packagers were not behaving consistently.\n\n# 1.3.3\n\nAll plugins, formatters and commands can now be overridden via options.\n\nThanks [David Tobin](https://github.com/DavidTobin)\n\nLodash has been bumped to 3.5.0\n\n# 1.3.2\n\nOption handling (defaults and overrides) have now been moved to their own module\n\n# 1.3.1\n\nAdds a null check to selection.js to help with issues when Scribe is being run in ShadowDOM. Thanks [Shaun Netherby](https://github.com/shaunnetherby)\n\n# 1.3.0\n\nIntroduces a new time-based undo manager and improvements to allow multiple Scribe instances to share or have a separate undo manager. Thanks to [Abdulrahman Alsaleh](https://github.com/aaalsaleh) for providing the code and spending a lot of time working with us on the tests.\n\n# 1.2.11\n\nAdded configuration for removing `scribe.undoManager`\n\n# 1.2.10\n\nBugfixes for selections that are 'reversed' (i.e. selected from right to left) from [Deains](https://github.com/deains). Thanks\n\n# 1.2.9\n\nClarifies the use of nodeName in the Command implementation. Thanks [Christopher Liu](https://github.com/christopherliu)\n\n# 1.2.8\n\nEvent waterfall / [Event Namespacing](https://github.com/guardian/scribe/pull/337)\n\n# 1.2.7\n\nShadowDOM fixes for Chrome from [ShaunNetherby](https://github.com/shaunnetherby), thanks\n\n# 1.2.5\n\nIE11 compatiability changes from [Deains](https://github.com/deains), thank you\n\n# 1.2.4\n\nChanges the way that root nodes are detected, the code now uses the element that the Scribe instance is bound to rather than looking for contenteditable attributes.\n\n# 1.2.3\n\nChanges the EventEmitter to store callbacks in sets to enforce uniqueness and avoid duplicate calls\n\n# 1.2.1\n\nFixes a typo with the use of options in the default command patches that was breaking Browserify\n\n# 1.2.0\n\nAllows the default command patches to be over-ridden in the options. This will allow users to customise what gets loaded to address issues like [the behaviour of the bold patch](https://github.com/guardian/scribe/pull/250) where the default behaviour is not what is required.\n\n# 1.1.0\n\nIntroduces [ImmutableJS](https://github.com/facebook/immutable-js) (which is also exposed via scribe.immutable) and starts to convert some the internal workings of Scribe to use immutable data structures.\n\nAdds 55K of needless bloat according to @theefer but I am heartless and laugh at his tears.\n\n# 1.0.0\n\nThis is a non-backwards compatible change as we are removing the use of Scribe Common. The Node and Element apis that were available in that project are now exposed via the *scribe* object itself (`scribe.node` and `scribe.element`).\n\nExisting plugins should not break for this release but please re-write your plugins if you use 1.0.0 as a dependency.\n\n* Merge [Scribe Common into Scribe](https://github.com/guardian/scribe/pull/287)\n\n# 0.1.26\n* Add preliminary support for Safari 6. [Muration Observer Safari](https://github.com/guardian/scribe/pull/285)\n\n# 0.1.25\n* Switch from using export directly to the string alias version. [YUI Compressor changes](https://github.com/guardian/scribe/pull/279)\n\n# 0.1.24\n* Rework mandatory plugin loading [Plugin loading](https://github.com/guardian/scribe/pull/275)\n\n# 0.1.23\n* Fix Chrome 38 focus issue [Change check for ff](https://github.com/guardian/scribe/pull/265)\n\n# 0.1.22\n* Fix [Make Chrome set the correct focus as well](https://github.com/guardian/scribe/pull/262)\n\n# 0.1.21\n* Fix [Don't insert BR in empty non block elements](https://github.com/guardian/scribe/pull/258)\n\n# 0.1.20\n* Fix [Don't strip nbsps in the transaction manger](https://github.com/guardian/scribe/pull/257)\n\n# 0.1.19\n* Fix [Release v0.01.18 did not succeed](https://github.com/guardian/scribe/pull/253)\n\n# 0.1.18\n* Fix [New line detection improved](https://github.com/guardian/scribe/pull/253)\n\n# 0.1.17\n* Allow entering multiple consecutive spaces ([c4ba50eb](https://github.com/guardian/scribe/commit/c4ba50ebe457066f06daa5efe98e0a345658ac54) [#232](https://github.com/guardian/scribe/pull/232))\n\n# 0.1.16\n* Update [scribe-common includes to include src](https://github.com/guardian/scribe/pull/217)\n\n# 0.1.15\n* Fix [Remove erroneous block tags being left behind in Chrome](https://github.com/guardian/scribe/pull/223)\n\n# 0.1.14\n* Fix [Ensure selectable containers core plugin doesn't always work as desired](https://github.com/guardian/scribe/pull/214)\n\n# 0.1.13\n* Fix\n  [insertHTML command wraps invalid B tags in a P, leaving empty Ps behind](https://github.com/guardian/scribe/pull/212)\n\n# 0.1.12\n* Fix [Text is lost when creating a list from P element containing BR elements](https://github.com/guardian/scribe/pull/195)\n\n# 0.1.11\n* Fix [`createLink` browser inconsistency](https://github.com/guardian/scribe/commit/4c8b536b3f029e51f54de43a6df9ce07bcf63f3e) ([#190](https://github.com/guardian/scribe/pull/190))\n* Bug: Correct object reference ([517b22ab](https://github.com/guardian/scribe/commit/517b22ab88e5dfc231b10497e492a877e6a05668))\n\n# 0.1.10\n* Fix redo ([da9c3844](https://github.com/guardian/scribe/commit/da9c3844fc047bc3c0bce559a013ec7fdecfc0b1) [#133](https://github.com/guardian/scribe/pull/133))\n\n# 0.1.9\n* Use in-house `EventEmitter` ([5088eb14](https://github.com/guardian/scribe/commit/5088eb14de395cada7b9415b05ae3bb6d775b02a) [#128](https://github.com/guardian/scribe/pull/128))\n\n# 0.1.7\n\n* Prevent mutation observers from failing if an error occurs ([9c843e52](https://github.com/guardian/scribe/commit/9c843e52f7913cff9529ea0950acc0fbb78f7baa))\n\n# 0.1.6\n\n* Fix issue with breaking out of P mode in Firefox\n  ([ddecae91](https://github.com/guardian/scribe/commit/ddecae91bc642f5e4344af6b51c84a4c85cbfe49)\n   [#97](https://github.com/guardian/scribe/pull/97))\n\n# 0.1.5\n\n* Added `subscript` and `superscript` commands ([cba4ee23](https://github.com/guardian/scribe/commit/cba4ee2362387617bb83281ca23a9a9aa1c36862))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.0830078125,
          "content": "# Contributing\n\nThis advice also applies to Scribe plugins.\n\n## Finding an issue to work on\n\nSee the [wiki page on labels](https://github.com/guardian/scribe/wiki/Project-labels) for an explanation about how we categorise the project issues.\n\nAssign yourself to the issue or comment on it to indicate that you are going to work on it.\n\n## Fixing an issue\n\n* Add a failing test\n* Create isolated cases for browser inconsistencies (see https://github.com/guardian/scribe/blob/master/BROWSERINCONSISTENCIES.md)\n* No assumptions should be made in the code – comment every little detail with\n  references to isolated cases (when dealing with browser inconsistencies)\n\n## Testing Locally\nPlease see the [wiki](https://github.com/guardian/scribe/wiki/Testing) for details of how to run the scribe test suite.\n\n\n## Releasing\n\n### Bower\n* `git checkout master`\n* Run `./release.sh [ <newversion> | major | minor | patch | build ]` (we use\n  [mversion](https://github.com/mikaelbr/mversion#usage-cli)). (If releasing a\n  plugin, run the script inside this repository from the plugin’s directory.)\n* Checkout the `dist` branch to check you're happy with the compilation result.\n  If you are, run `git push; git push --tags`. (The `dist` tree is for\n  distribution via Bower).\n\n### npm\n* `git checkout master`.\n* Update `CHANGELOG.md`\n* Update the version number in `package.json`\n* Commit with message of `v<number>`\n* `git push`\n* Run `npm publish`\n\n### Update example\n* `git checkout gh-pages`\n* `git pull`\n* Update necessary dependency versions in `bower.json`. Check `bower ls` to see\n  which components need updating.\n* `bower install`\n* `bower prune`\n* `git add --update .` (don't include untracked files from source Bower\n  components)\n* Commit using version number as the message (OR plugin version)\n* `git push`\n\n## Conventions\n* In documentation and code, refer to nodes by their canonical node name in\n  uppercase. E.g. `P`.\n* When creating variables that refer to nodes or elements, suffix them with\n  `node` or `element` respectively. E.g. `pElement` or `textNode`.\n\n## Tools\n* Paste bin: http://jsfiddle.net/OliverJAsh/z8FTb/\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 1.224609375,
          "content": "module.exports = function(grunt) {\n\n  // Add the grunt-mocha-test tasks.\n  grunt.loadNpmTasks('grunt-mocha-test');\n  grunt.loadNpmTasks('grunt-contrib-requirejs');\n\n  grunt.initConfig({\n    // Configure a mochaTest task\n    mochaTest: {\n      test: {\n        options: {\n          reporter: 'spec',\n        },\n        src: ['test/**/*.spec.js']\n      }\n    },\n  });\n\n  function requireConfiguration(optimize, outputFilename) {\n    return {\n      compile: {\n        options: {\n          baseUrl: \"src\",\n          name: \"scribe\",\n          paths: {\n            'lodash-amd': '../bower_components/lodash-amd',\n            'immutable': '../bower_components/immutable/dist/immutable'\n          },\n          optimize: optimize,\n          preserveLicenseComments: false,\n          generateSourceMaps: true,\n          out: \"build/\" + outputFilename\n        }\n      }\n    }\n  }\n\n  grunt.registerTask('build', 'Build output files', function() {\n    grunt.config('requirejs', requireConfiguration('uglify2', 'scribe.min.js'));\n    grunt.task.run('requirejs');\n\n    grunt.config('requirejs', requireConfiguration('none', 'scribe.js'));\n    grunt.task.run('requirejs');\n  });\n\n  grunt.registerTask('test', ['mochaTest']);\n\n  grunt.registerTask('default', 'test');\n\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.09375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2014-2017 Guardian News & Media Ltd\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "PLUGINS",
          "type": "blob",
          "size": 0.6826171875,
          "content": "* Smart lists\n  + On type\n  + On paste?\n* Curly quotes\n  + On type\n  + On paste\n* Ellipsis\n  + On type\n  + On paste\n* Keyboard shortcuts:\n  + Capitalize, lowercase, uppercase\n  + Select word, sentence, paragraph (S-exp)\n  + Forward/backward word, sentence, paragraph\n  + Swap words, letters\n* Reformatting helpers (highlight + action + shortcut)\n  + De-<br> paragraph (M-q)\n  + Add space after dot and other punctuation\n  + Add final dot\n* Buttons (\"Embed\") next to URLs\n* \"Commands\" to search images, etc\n* On empty line, show options to add image, embed\n* Drag and drop\n* Inline Entities\n* Inline search (e.g. other articles), completion-style\n* Make invisible characters visible:\n  + nbsp\n  + \\n\n"
        },
        {
          "name": "Plumbing.js",
          "type": "blob",
          "size": 1.08984375,
          "content": "/*\n * Warning: shameless self-plug!\n * Plumber is the Guardian’s tool of choice for build systems.\n * https://github.com/plumberjs/plumber\n */\n\nvar all       = require('plumber-all');\n// var bower  = require('plumber-bower');\nvar glob      = require('plumber-glob');\nvar requireJS = require('plumber-requirejs');\nvar uglifyJS  = require('plumber-uglifyjs')();\nvar write     = require('plumber-write');\n\nmodule.exports = function (pipelines) {\n  var mainRequireJS = requireJS({\n      // FIXME: auto?\n      preserveLicenseComments: false,\n      paths: {\n          'lodash-amd': '../bower_components/lodash-amd',\n          'immutable': '../bower_components/immutable/dist/immutable'\n      }\n  });\n\n  var toBuildDir = write('./build');\n  var writeBoth = all(\n    [uglifyJS, toBuildDir],\n    toBuildDir\n  );\n\n  /* jshint -W069 */\n\n  pipelines['build'] = [\n    // TODO: use bower operation to find main of this component?\n    // As per: https://github.com/bower/bower/issues/1090\n    // bower('scribe'),\n    glob('./src/scribe.js'),\n    mainRequireJS,\n    // Send the resource along these branches\n    writeBoth\n  ];\n};\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.3349609375,
          "content": "**THIS PROJECT IS DEPRECATED** - You can find more information about this in our blog post, [Leaving Scribe](https://www.theguardian.com/info/2019/jan/24/leaving-scribe). In summary:\n\n- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally\n- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation\n- In time we hope to be able to open source the new text editor we are working on\n\n# Scribe\n\nA rich text editor framework for the web platform, with patches for\nbrowser inconsistencies and sensible defaults.\n\n## Status\n\n [![Build Status](https://travis-ci.org/guardian/scribe.svg?branch=master)](https://travis-ci.org/guardian/scribe) <a href=\"https://david-dm.org/guardian/scribe\"><img src=\"https://david-dm.org/guardian/scribe.svg\"></a> [![Join the chat at https://gitter.im/guardian/scribe](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/guardian/scribe?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## Description\n\nFor an introduction, you may want to read the blog post [Inside the Guardian’s CMS: meet Scribe, an extensible rich text editor](http://www.theguardian.com/info/developer-blog/2014/mar/20/inside-the-guardians-cms-meet-scribe-an-extensible-rich-text-editor).\n\n**Please note:** There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.\n\nYou can join us on IRC at [#scribejs] on freenode, or via the [Google Group](https://groups.google.com/forum/#!forum/scribe-editor).\n\n[See an example][example].\n\nScribe only actively supports a [sub-set of browsers](https://github.com/guardian/scribe/wiki/Browser-support).\n\n## Core\n\nAt the core of Scribe we have:\n\n* [Patches for many browser inconsistencies surrounding `contenteditable`](#patches);\n* [Inline and block element modes](https://github.com/guardian/scribe/wiki/Modes#).\n\n### Patches\n\nScribe patches [many browser inconsistencies][browser inconsistencies] in the [native command API][Executing Commands].\n\n## Installation\n```\nbower install scribe\n```\n\nAlternatively, you can [access the distribution files through GitHub releases](https://github.com/guardian/scribe/releases).\n\n## Usage Example\n\nScribe is an AMD module:\n\n``` js\nrequire(['scribe', 'scribe-plugin-blockquote-command', 'scribe-plugin-toolbar'],\n  function (Scribe, scribePluginBlockquoteCommand, scribePluginToolbar) {\n  var scribeElement = document.querySelector('.scribe');\n  // Create an instance of Scribe\n  var scribe = new Scribe(scribeElement);\n\n  // Use some plugins\n  scribe.use(scribePluginBlockquoteCommand());\n  var toolbarElement = document.querySelector('.toolbar');\n  scribe.use(scribePluginToolbar(toolbarElement));\n});\n```\n\nYou can [see a live example here][example], or [view the code here](https://github.com/guardian/scribe).\n\nAlso be sure to check the [`examples`](./examples) directory for an\nAMD syntax example as well as a CommonJS (browserify) example.\n\n## Options\n\n<dl>\n  <dt><pre>allowBlockElements</pre></dt>\n  <dd>Enable/disable block element <a href=\"https://github.com/guardian/scribe/wiki/Modes\">mode</a> (enabled by default)</dd>\n  <dt><pre>undo: { enabled: false }</pre></dt>\n  <dd>Enable/disable Scribe's custom undo manager</dd>\n  <dt><pre>defaultCommandPatches</pre></dt>\n  <dd>Defines which command patches should be loaded by default</dd>\n  <dt><pre>defaultPlugins</pre></dt>\n  <dd>Defines which of Scribe's built-in plugins should be active</dd>\n  <dt><pre>defaultFormatters</pre></dt>\n  <dd>Defines which of Scribe's default formatters should be active</dd>\n</dl>\n\nFor detailed documentation see the [wiki page on options](https://github.com/guardian/scribe/wiki/Scribe-configuration-options).\n\n## Architecture\n\n* [Everything is a plugin](https://github.com/guardian/scribe/tree/master/src/plugins).\n* No runtime dependencies.\n\nA plugin is simply a function that receives Scribe as an argument:\n\n``` js\nfunction myPlugin(scribe) {}\n```\n\nA consumer can then use your plugin with `Scribe.use`:\n\n``` js\nscribe.use(myPlugin);\n```\n\nPlugins may package whatever functionality you desire, and you are free to use\nnative APIs to do so. However, you are required to wrap any DOM manipulation in\na transaction, so that we can capture state changes for the history. For\nexample:\n\n``` js\nfunction myPlugin(scribe) {\n  scribe.transactionManager.run(function () {\n    // Do some fancy DOM manipulation\n  });\n}\n```\n\n### Browser Support\n\n[Moved to the Github Wiki](https://github.com/guardian/scribe/wiki/Browser-support)\n\n## Plugins\n\nScribe has a rich plugin ecosystem that expands and customises what it can do.\n\nSee the wiki for a [list of plugins and how to create new ones](https://github.com/guardian/scribe/wiki/Plugins)\n\n## FAQ\n\nSee the wiki's [FAQ](https://github.com/guardian/scribe/wiki/FAQ)\n\n[browser inconsistencies]: https://github.com/guardian/scribe/blob/master/BROWSERINCONSISTENCIES.md\n[Executing Commands]: https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla#Executing_Commands\n[Range API]: https://developer.mozilla.org/en-US/docs/Web/API/Range\n[Selection API]: https://developer.mozilla.org/en-US/docs/Web/API/Selection\n[example]: http://guardian.github.io/scribe\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.779296875,
          "content": "{\n  \"name\": \"scribe\",\n  \"dependencies\": {\n    \"immutable\" : \"3.8.1\"\n  },\n  \"devDependencies\": {\n    \"requirejs\": \"~2.1.9\",\n    \"scribe-plugin-blockquote-command\": \"guardian/scribe-plugin-blockquote-command#master\",\n    \"scribe-plugin-formatter-plain-text-convert-new-lines-to-html\": \"guardian/scribe-plugin-formatter-plain-text-convert-new-lines-to-html#master\",\n    \"scribe-plugin-heading-command\": \"guardian/scribe-plugin-heading-command#master\",\n    \"scribe-plugin-link-prompt-command\": \"guardian/scribe-plugin-link-prompt-command#master\",\n    \"scribe-plugin-sanitizer\": \"guardian/scribe-plugin-sanitizer#master\",\n    \"scribe-plugin-toolbar\": \"guardian/scribe-plugin-toolbar#master\",\n    \"scribe-plugin-inline-styles-to-elements\": \"guardian/scribe-plugin-inline-styles-to-elements#master\"\n  }\n}\n"
        },
        {
          "name": "decisions.md",
          "type": "blob",
          "size": 1.21875,
          "content": "\n# Decisions log\n\n## 2016-04-27 Node 5 compatibility\n\nIn the long term we want to move this codebase from AMD modules to ES6 modules. To get the whole codebase to build on later versions of Node I removed a number of the dev dependendencies that were not compatible beyond Node 0.10.\n\nSince a lot of these were related to the functional testing suite this means someone will have to do a lot more work to get these running again in the future if they want them. Sorry.\n\nBy relying on ES2015 features I also think we can remove our dependency on Lodash in core Scribe now.\n\nThe use of `Object.assign` means a major release version as this may not be backwards compatible with some browser versions that we used to support.\n\n## 2016-04-16 Event namespacing\n\nEvents in Scribe are generally only propogated within the Scribe instance so we haven't namespaced them before. However within the Guardian products that Scribe is used we do tend to namespace all events as we have had problems with event clashes between browser extensions/add-ons and third-party code.\n\nTherefore without removing the current legacy `content-changed` event, which would cause too much grief in the plugin ecosystem, event names in Scribe will now be prefixed with \"scribe\".\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.71875,
          "content": "{\n  \"name\": \"scribe-editor\",\n  \"version\": \"3.3.0\",\n  \"license\": \"Apache-2.0\",\n  \"main\": \"src/scribe.js\",\n  \"dependencies\": {\n    \"immutable\": \"~3.8.1\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"~1.9.1\",\n    \"grunt\": \"^1.0\",\n    \"grunt-contrib-requirejs\": \"^1.0.0\",\n    \"grunt-mocha-test\": \"^0.12.7\",\n    \"grunt-cli\": \"^0.1\",\n    \"http-server\": \"~0.6.1\",\n    \"mocha\": \"~2.4\",\n    \"mock-browser\": \"0.92.11\",\n    \"mversion\": \"~1.10\",\n    \"node-amd-require\": \"^0.2.2\",\n    \"q\": \"~1.2\",\n    \"request\": \"~2.33.0\",\n    \"sinon\": \"^1.12.2\"\n  },\n  \"scripts\": {\n    \"test\": \"node_modules/.bin/grunt test\",\n    \"build\": \"node_modules/.bin/grunt build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/guardian/scribe.git\"\n  }\n}\n"
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 0.953125,
          "content": "#!/bin/bash\n\nBASE_DIR=$(dirname $0)\n\nif [ $# -ne 1 ];\nthen\n    echo \"Usage: ./release.sh <version-number | major | minor | patch | build>\"\n    exit 1\nfi\n\n# Clean the working tree\ngit reset --hard\ngit checkout master\n\necho \"-- Building distribution files\"\nnpm run build\n\necho \"-- Copying distribution files to dist branch\"\ngit checkout dist\ngit fetch\ngit reset --hard origin/dist\nyes | cp ./build/* .\n\ngit diff --name-only  | if (grep \"\\.js$\" | grep -v \"\\.min\\.js$\")\nthen\n    echo \"-- Commiting update to distribution files\"\n    git add --update .\n    git commit --message \"Update distribution files\"\n    MVERSION_PATH=\"$BASE_DIR/node_modules/.bin/mversion\"\n    echo \"-- Current version: `$MVERSION_PATH`\"\n    echo \"-- Updating version\"\n    $MVERSION_PATH $1 -m \"v%s\n\n[ci skip]\"\n    echo \"-- Check the commit worked and then push (dist branch and new tag)\"\nelse\n    echo \"-- No updates to be committed\"\n    # Clean the working tree\n    git reset --hard\nfi\n\ngit checkout master\n"
        },
        {
          "name": "run-tests.sh",
          "type": "blob",
          "size": 0.29296875,
          "content": "#!/bin/bash\n\nexport BROWSER_NAME=${BROWSER_NAME:=chrome}\n\nexport TEST_SERVER_PORT=${TEST_SERVER_PORT:=8880}\n\n./node_modules/.bin/http-server -p $TEST_SERVER_PORT --silent &\nPID=$!\nnode test/runner $@\nTEST_RUNNER_EXIT=$?\nkill $PID\n\nif [ $TEST_RUNNER_EXIT == \"0\" ]; then\n    exit 0\nelse\n    exit 1\nfi\n\n"
        },
        {
          "name": "setup.sh",
          "type": "blob",
          "size": 0.3173828125,
          "content": "#!/bin/bash\n\nnpm install\nbower install\n\n# Download the selenium JAR\nSELENIUM_VERSION=2.41.0\nSELENIUM_MINOR_VERSION=2.41\nmkdir -p vendor\nwget -O vendor/selenium-server-standalone-$SELENIUM_VERSION.jar \\\n  https://selenium-release.storage.googleapis.com/$SELENIUM_MINOR_VERSION/selenium-server-standalone-$SELENIUM_VERSION.jar\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "teamCity.sh",
          "type": "blob",
          "size": 0.5751953125,
          "content": "#!/usr/bin/env bash\n\nNODE_VERSION=\"5\"\n\n# check if nvm is available or not\nnvm_available() {\n  type -t nvm > /dev/null\n}\n\n# source NVM from known locations (it's not a binary so not on the path)\nsource_nvm() {\n  if ! nvm_available; then\n    [ -e \"/usr/local/opt/nvm/nvm.sh\" ] && source /usr/local/opt/nvm/nvm.sh\n  fi\n  if ! nvm_available; then\n    [ -e \"$HOME/.nvm/nvm.sh\" ] && source $HOME/.nvm/nvm.sh\n  fi\n}\n\n# do the client side build\nsource_nvm\nnvm_available && nvm install ${NODE_VERSION} && nvm use ${NODE_VERSION}\n\nnpm install -g bower\nbower install\n./setup.sh\n\nnpm install\nnpm test\n"
        },
        {
          "name": "test-old",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}