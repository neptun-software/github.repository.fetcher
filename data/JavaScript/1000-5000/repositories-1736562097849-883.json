{
  "metadata": {
    "timestamp": 1736562097849,
    "page": 883,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "danvk/dygraphs",
      "stars": 3178,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".browserslistrc",
          "type": "blob",
          "size": 0.025390625,
          "content": "last 100 years\nnot ie < 9\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2041015625,
          "content": "*.log\n__pycache__\n_site\ncoverage\ndebian/copyright\ndist\ndisttmp\ndocroot\ndocs/download.html\ndocs/options.html\ndocs/versions.html\ndygraphs-2.*.tgz\nenv\njsdoc\njsdoc.tmp\nnode_modules\npackage-lock.json\nsite\nsrc-es5/\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.265625,
          "content": "{\n  \"newcap\": true,\n  \"noarg\": true,\n  \"shadow\": true,\n  \"strict\": true,\n  \"forin\": true,\n  \"immed\": true,\n  \"latedef\": true,\n  \"nonbsp\": true,\n  \"undef\": true,\n  \"sub\": true,\n\n  \"browser\": true,\n  \"devel\": true,\n  \"globals\": {\n    \"DEBUG\": true\n  },\n  \"maxerr\": 100000\n}\n"
        },
        {
          "name": ".jslibs",
          "type": "blob",
          "size": 0.01171875,
          "content": "docs/.jslibs"
        },
        {
          "name": ".pages.sh",
          "type": "blob",
          "size": 2.076171875,
          "content": "#!/bin/sh\n\nsudoapt() {\n\tlocal _sudoapt_e=''\n\n\tif command -v eatmydata >/dev/null 2>&1; then\n\t\t_sudoapt_e=eatmydata\n\tfi\n\tsudo env DEBIAN_FRONTEND=noninteractive $_sudoapt_e apt-get \"$@\"\n}\nsudoagi='sudoapt --purge install --no-install-recommends -y'\n\nset -ex\n\nmksh -c true || {\n\t$sudoagi mksh\n\texec mksh \"$0\" \"$@\"\n\texit 255\n}\n\nexport LC_ALL=C\nunset LANGUAGE\n\nset -o pipefail\nrm -f .post.state\nif test -h .post.state || test -e .post.state; then exit 255; fi\nstate=''\n\n$sudoagi eatmydata\nsudoapt clean\nsudoapt update\n#sudoapt --purge dist-upgrade -y\n$sudoagi eatmydata git \\\n    ed jq node-jsdoc2 \\\n    libjs-bootstrap libjs-jquery libjs-jquery-ui \\\n    mksh pax python3\n\n: drop any pre-installed PhantomJS as they cause breakage\nbash -c 'set -o noglob; while true; do found=0; for x in $(which -a phantomjs); do test -e \"$x\" || continue; found=1; rm -f \"$x\"; done; test $found = 1 || break; done'\n\neatmydata env TMPDIR=/tmp npm install -g phantomjs@1.9.7-15\neatmydata env TMPDIR=/tmp npm install\n\n(eatmydata npm run clean || :)\neatmydata npm run build\neatmydata npm run test || state=\"$state test\"\neatmydata npm run test-min || state=\"$state test-min\"\nif [[ $GITHUB_REPOSITORY = danvk/dygraphs ]]; then\n\teatmydata npm run coverage || state=\"$state coverage\"\n\teatmydata scripts/post-coverage.sh || state=\"$state post-coverage\"\n\teatmydata scripts/weigh-in.sh || state=\"$state weigh-in\"\nfi\n\nrm -rf _site\nmv site _site\ncd _site\nfind . -type d -print0 | sort -z | xargs -0 mksh ../scripts/mkdiridx.sh\nif [[ $GITHUB_REF = refs/heads/debian && $GITHUB_REPOSITORY = mirabilos/dygraphs ]]; then\n\techo dygraph.github.mirsolutions.de >CNAME\n\timprint_text='<a href=\"https://github.com/mirabilos/Impressum/tree/master/dygraphs#imprint-text\" xml:lang=\"de-DE-1901\"><b>Impressum</b> und Datenschutzerklärung</a>'\nelse\n\timprint_text=\nfi\nif [[ -n $imprint_text ]]; then\n\tgrep -FrlZ '@@@PLACE_IMPRINT_LINK_HERE_IF_NECESSARY@@@' . | \\\n\t    xargs -0 perl -pi -e '\n\t\ts'\\''<!--@@@IFIMPRINT:(.*?)@@@PLACE_IMPRINT_LINK_HERE_IF_NECESSARY@@@(.*?):FIIMPRINT@@@-->'\\''$1.q{'\"$imprint_text\"'}.$2'\\''eo\n\t    '\nfi\ncd ..\nset -o noglob\necho $state >.post.state\n"
        },
        {
          "name": ".post.sh",
          "type": "blob",
          "size": 0.224609375,
          "content": "#!/bin/sh\n\necho ::group::Check whether .pages.sh failed anywhere\nstate=$(cat .post.state || echo state-file-missing)\nif test -n \"$state\"; then\n\techo \"E: .pages.sh failed in: $state\"\n\texit 1\nfi\necho \"I: nope, ok\"\necho ::endgroup::\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 9.7392578125,
          "content": "# next (git)\n\n## Breaking changes\n- …\n\n## New features\n- Define `Dygraph.integerTicks` (#925)\n- Warn in console if points are out of range (#1050)\n- …\n\n## Bugfixes\n- Re-add missing `Dygraph.DOTTED_LINE` export\n- Some edge cases in the crosshair plugin (#1034, #1038, #1039, #1040)\n- …\n\n## Other user-visible changes\n- Add talk link to `tutorial.html`\n- …\n\n## Internal refactors/fixes\n- Switch from `jsdoc-toolkit` to `node-jsdoc2` (Debian #1074595)\n- Bump some package versions matching Debian bookworm and \\*buntu 24.04\n- Add support for newer babeljs and uglifyjs3\n- …\n\n# v2.2.1 (2023-02-16)\n\n## Future incompatibilities\n- `window.smoothPlotter` will not be set by `extras/smooth-plotter.js` any more RSN\n\n## New features\n- Permit initialising with `[]` as “no data yet” indicator (#597)\n- The modularisation of the test setup also allows stable access to exported functions (e.g. `Dygraph._require('dygraphs/src/dygraph-utils.js').numberValueFormatter`) which makes writing one’s own value formatters easier (as usual, proceed with care, exports with an underscore are internal); see <https://dygraphs.com/tests/exported-symbols.html> for the exposed surface\n- Provide Dygraph.onDOMready(cb) as lightweight jQuery(cb)/… alternative, to keep the demos/tests self-contained\n\n## Bugfixes\n- Fix synchroniser not calling user’s `drawCallback` when blocked (#953) plus do not redraw unnecessarily\n- Documentation fixes and improvements including self-checks where possible\n- Fix missing legend for `x == -1` (#1002)\n- Allow ES6-importing the extras (#848) (#989) (#1009)\n- Fix broken zoom also in the drawing test (same as #611/#953)\n- Resetting `panEdgeFraction` now works\n- Fix tests/unboxed-spark regression caused by PR #936\n- Synchroniser doesn’t force x axis range if unzoomed (#956)\n\n## Other user-visible changes\n- Fix issue #611 in the drawing demo gallery (#953)\n- `jq` is now also required to build\n- Fix typos, wordings, apostrophes, etc.\n- Export `pickDateTickGranularity` so overriding `dateTicker` is easier\n- Error bars are now properly called high/low bands (#1004), but the options stay the same for compatibility\n- Document annotations xval for Date better (#970)\n- Document more strongly that series labels must be unique (#960)\n- Remove references to nōn-existing `yAxisLabelWidth` option\n- Fix jsFiddle links from gallery\n\n## Internal refactors/fixes\n- Shrink `tests.js` source map and make its build reproducible on Debian\n- `tests/resizable.html` exposes the graph object, for quick F12 in-browser use\n- Generate `versions.html` and release notes from new top-level [`CHANGES.md`](https://github.com/danvk/dygraphs/blob/master/CHANGES.md)\n- Modularise dygraphs/tests setup so we can now also test the minified prod css/js (#1028)\n- Generate stable orig tarballs for releases ourselves (we still use the NPM ones for binary tarballs)\n- Less fragility with arrow function `this` rebinding check\n\n# v2.2.0 (2023-01-25)\n\nThis is the first “full” release after v2.1.0 with the following news:\n\n## Breaking changes\n- Stop parsing the deprecated 8-digit ‘YYYYMMDD’ date format (#984) (#985) (#1023)\n- GWT “support” is no longer pertinent as we cannot recompile the binary JAR; the latter is still available from the website for now\n\n## New features\n- Add option to colour the range selector’s veil (#856)\n- Add `strokeStyle` option to crosshair plugin (#955)\n- Support `DocumentFragment` as a result from a `legendFormatter` function (#958) (#959)\n- Add data index to `legendFormatter` data (#965)\n- Implement `#RRGGBB`/`#RRGGBBAA` hex colour parsing\n- Make `animateBackgroundFade` into an option\n- Add new `resizable` option using `ResizeObserver` on maindiv + CSS\n- Add offset config for legend div in follow mode (#946)\n\n## Bugfixes\n- Fix duplicate annotation when having duplicate points (#826)\n- Make sure that `canvasx` and `canvasy` properties are initialised from the start (#896)\n- Fix issue #781 when the y range is zero (#909)\n- Synchroniser now calls `highlightCallback` (#935)\n- Fix `drawAxes` to allow one of two y axes to be drawn (#936)\n- LEGEND: Don’t show y if value is undefined (#853) (#947)\n- Fixed “Cannot read property 'length' of undefined” issue (#962) (#963)\n- Two fixes in the calculations of pinch-zoom (#990)\n- Fix for double paint of grid of x-axis (#1007)\n- Fix number of days in a year (#1012)\n- Fix `labelsKMB` and `labelsKMG2` (#571) (#994) (#1022)\n- Fix label position in `onmouseover` legend mode was never updated\n- Fix several cases of mispositioning/missizing by enabling elements before using `offsetWidth` etc.\n- Make it possible to use `logscale` (and `sigma`, `wilsonInterval`) per-axis (#986)\n\n## Other user-visible changes\n- Documentation is now shipped (mostly self-contained) in the release\n- Tests that use Google JSAPI are now marked ⚠ and no other external content is loaded anywhere\n- Calculate legend positioning relative to closest data point (#1013)\n- Add missing documentation about annotations `xval` option (#992)\n- source mapping URLs are now correct (#1027)\n- Ship ES5 versions of extras (#952), use them in examples\n- Fix documentation/website HTML/CSS/JS bugs (#979) (#1008)\n- On the website, external links are now clearly labelled\n- The documentation and website now have browsable subdirectories by manually generated directory index files\n- Link to UNPKG as CDN as well (to keep neutral; use of CDNs in websites violates the EU-GDPR)\n- Most issues with right-to-left languages should now be fixed (#1019)\n- Document that Dygraph will misbehave if the main div has padding\n\n## Internal refactors/fixes\n- Use link href, not link src (#904)\n- Add missing semicolon in externs (#964)\n- Large build system improvements relying in large parts on Debian and GHA\n- Full licence review as part of uploading to Debian (#1024) (#1025) (#1029); drop embedded code copies\n- Fix some JSDoc warnings\n- Update to contemporary versions of Python 3, jQuery, Babel, etc.\n- Add copies of design documents that were previously only available on Google Docs or part of GitHub issues to offline documentation\n- Nuke useless semicola after function declaration bodies\n- Fix closure type annotation in `hairlines.js`\n- Remove already commented-out obsolete, or redundant, code\n\n# v2.1.0 (2017-12-08)\n\n## New features\n- Double click event can be captured and cancelled by plugins (#840)\n- `setAnnotations`’ second parameter is now an optional boolean (#851)\n- Add `pixelRatio` option, which may allow improved performance on smaller screens by controlling the canvas’ pixel ratio (#877)\n- x axis label and tick logic can now operate at millisecond-level granularity (#893)\n\n## Bug fixes\n- Repair a bug in “Custom interaction models” demo (#825)\n\n## Internal refactors/fixes\n- Fix various spelling mistakes (#844)\n- Fix a couple of type signatures in `dygraph-externs.js` (#859)\n\n# v2.0.0 (2017-01-11)\n\n## Breaking changes\n- JS files were renamed to `dygraph.js` and `dygraph.min.js`.\n- There’s now a `dygraph.css` file that you must include.\n- Dropped support for old IE and other non-standard browsers. dygraphs works in IE11. I’m not sure about IE9 and IE10.\n- Double-click to unzoom zooms all the way out (and ignores `valueRange`).\n- Dropped old-style per-axis/per-series options.\n\n## New features\n- Add a `legendFormatter` option (#683)\n- `this` is the Dygraph object in all callbacks\n- pass through (row, col) to `valueFormatter`\n- Option to not sync range in `extras/synchronizer.js`\n- Additional options for styling the range selector\n- `getRowForX` method\n- `setVisibility` can set the visibility of multiple series at once.\n- crosshair plugin extra\n- rebase/straw broom plugin (#590)\n- `highlightSeriesBackgroundColor` option\n- `yAxisExtremes()` method.\n- Passing strings in native format now throws. (Previously it kinda sorta worked.)\n\n## Bug fixes\n- Selections are always cleared with animations\n- synchronizer calls previously-set callbacks\n- synchronizer only syncs when graphs are ready\n- Reset on synchronized graphs failed (#524)\n- fix to improve synchronizer performance (#658)\n- binary search bug fix in synchronizer\n- Fix range selection when chart is located inside fullscreen element (#576)\n- `fillAlpha` can be set per-series when `fillGraph` is set.\n- `xRangePad` was ignored on unzoom (#657)\n- Allow selected points where canvas-y coordinate is 0 (#692)\n- Using `valueRange` with `logscale` and `yRangePad` has unexpected results (#661)\n- With `drawGapEdgePoints`, unwanted point often drawn at beginning of chart (#745)\n\n## Other user-visible changes\n- `legend: follow` positioning changes\n\n## Internal refactors\n- Code moved into a `src/` directory\n- Tests use Mocha instead of jstd\n- dygraphs is split into ES6 modules and uses some ES6 features (e.g. arrows and destructuring).\n- dygraphs is built using Babel and browserify\n- Code coverage is tracked continuously\n- Bundle size is now tracked continuously\n\n# v1.1.1 (2015-06-01)\n\n- Set `this` to the dygraph in all callbacks.\n- Minor bug fixes.\n\n# v1.1.0 (2014-12-03)\n\n## Highlights\n- dygraphs is now “retina” compatible.\n- Dramatically improved performance for filled charts (i.e. `fillGraph`)\n- More sensible date ticks: “Jan 08” → “Jan 2008”, “29Jan” → “29 Jan”\n- Using a non-existent option now throws (with `dygraph-combined-dev.js`)\n- x-axis log scales\n- The `labelsUTC` option forces UTC formatting for all labels.\n- The new DataHandler system allows for more flexibility in data loading.\n- dygraphs has shrunk, because we moved some stuff into “extras” (133 KiB → 122 KiB)\n\nThis will be the last major release to support browsers without a native <canvas> implementation. See [blog post](http://blog.dygraphs.com/2014/12/dygraphs-110.html) for more details.\n\n# v1.0.1 (2013-08-29)\n\nMinor bug fixes and updates to web site.\n\n# v1.0.0 (2013-08-14)\n\nInitial Release. See [blog post](http://blog.dygraphs.com/2013/08/announcing-dygraphs-100.html).\n"
        },
        {
          "name": "DEVELOP.md",
          "type": "blob",
          "size": 2.3837890625,
          "content": "## dygraphs developer notes\n\nSo you've made a change to dygraphs and would like to contribute it back to the open source project. Wonderful!\n\nThis is a step-by-step guide explaining how to do it.\n\n### How-to\n\nTo install dependencies, run:\n\n    # for building\n    apt-get install jq mksh pax python3\n    # npm dev dependencies\n    npm install\n\nTo build dygraphs and the tests, run:\n\n    npm run clean  # if necessary\n    npm run build-jsonly\n\nTo run the tests, run:\n\n    npm run test       # on the unminified bundle\n    npm run test-min   # on the .min.{css,js}\n\nThe prerequisites for a full “npm run build” are:\n\n    # for building\n    apt-get install ed node-jsdoc2 mksh pax python3\n    # for docs\n    apt-get install libjs-bootstrap libjs-jquery libjs-jquery-ui\n\nTo iterate on the code, install envify and run:\n\n    npm run watch\n\nand open `tests/demo.html` (or one of the other demos) in your browser.\n\nTo iterate on a unit test, run the `watch` command above and open\n\n    auto_tests/runner.html\n\nin your browser. You can use the Mocha UI to run just a single test or suite.\nOr you can change `it` to `it.only` to do run just one test in code.\n\nTo run a single test from the command line, you can use:\n\n  npm run test -- --grep highlight-series-background\n\n(Note the extra `--`.)\n\n### dygraphs style\n\nWhen making a change, please try to follow the style of the existing dygraphs code. This will make the review process go much more smoothly.\n\nA few salient points:\n\n1. We try to adhere to Google's [JS style guide][gstyle] and would appreciate it if you try to as well. This means:\n  *   No tabs! Indent using two spaces.\n  *   Use camelCase for variable and function names.\n  *   Limit lines to 80 characters.\n1.  If you've added a new feature, add a test for it (in the tests/ directory) or a gallery entry.\n1.  If you've added an option, document it in `dygraph-options-reference.js`. You'll get lots of warnings if you don't.\n1.  If you've fixed a bug or added a feature, add a unit test (in `auto_tests`) for it.\n\nAdding a unit test ensures that we won't inadvertently break your feature in the future. To do this, either add to an existing test in `auto_tests/tests` or create a new one.\n\n### Sending a Pull Request\n\nTo make a change, you'll need to send a Pull Request. See GitHub's documentation [here][pr].\n\n[gstyle]: https://google.github.io/styleguide/javascriptguide.xml\n[pr]: http://help.github.com/send-pull-requests/\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 2.939453125,
          "content": "dygraphs is MIT-licenced:\n\nCopyright (c) 2006, 2009, 2011, 2012, 2013, 2017\n\tDan Vanderkam <danvdk@gmail.com>\nCopyright (c) 2011 Paul Felix <paul.eric.felix@gmail.com>\nCopyright (c) 2011, 2013 Robert Konigsberg <konigsberg@google.com>\nCopyright (c) 2013 David Eberlein <david.eberlein@ch.sauter-bc.com>\nCopyright (c) 2013 Google, Inc.\nCopyright (c) 2014 mirabilos <m@mirbsd.org>\nCopyright (c) 2015 Petr Shevtsov <petr.shevtsov@gmail.com>\nCopyright (c) 2022, 2023 mirabilos <t.glaser@tarent.de>\n                   Deutsche Telekom LLCTO\nCopyright (c) 2025 mirabilos <tg@debian.org>\nand numerous contributors (see git log)\n\nSome tests additionally are:\n\nCopyright (c) 2011, 2012 Google, Inc. <danvk@google.com>\nor contributed by:\n- Benoit Boivin <benoitboivin.pro@gmail.com>\n- Paul Felix <paul.eric.felix@gmail.com>\n- Marek Janda <nyx@nyx.cz>\n- Robert Konigsberg <konigsberg@google.com>\n- George Madrid <gmadrid@gmail.com>\n- Anthony Robledo <antrob@google.com>\n- Fr. Sauter AG <julian.eichstaedt@ch.sauter-bc.com>\n- Fr. Sauter AG <david.eberlein@ch.sauter-bc.com>\n- Ümit Seren <uemit.seren@gmail.com>\n- Sergey Slepian <sergeyslepian@gmail.com>\n- Dan Vanderkam <dan@dygraphs.com>\n\nParts of the documentation are or make use of code that is:\n\nCopyright (c) 2012 Google, Inc.\n- Robert Konigsberg <konigsberg@google.com>\n\nFurther contributors can be found in the git history or on:\nhttps://github.com/danvk/dygraphs/graphs/contributors\n\nThe automatically added browser-pack shim is:\n\nCopyright (c) 2013, 2014 James Halliday <mail@substack.net>\nCopyright (c) 2013 Roman Shtylman <shtylman@gmail.com>\nCopyright (c) 2013 Esa-Matti Suuronen <esa-matti@suuronen.org>\nCopyright (c) 2018 Philipp Simon Schmidt <github@philippsimon.de>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nThe documentation and gallery uses Bootstrap and jQuery; see the\nrelevant licence files of those external libraries for details.\n\nThe icons under common/ are CC0-licenced and adapted by mirabilos.\nIn Debian, /usr/share/common-licenses/CC0-1.0 has the full text.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3212890625,
          "content": "# dygraphs JavaScript charting library\n\nThe dygraphs JavaScript library produces interactive, zoomable charts of time series:\n\n![sample graph](Screenshot.png)\n\nLearn more about it at [dygraphs.com](http://www.dygraphs.com).\n\nGet help with dygraphs on [Stack Overflow][] (preferred) and [Google Groups][].\n\n## Features\n* Plots time series without using an external server or Flash\n* Supports [error bands][] around data series\n* Interactive [pan and zoom][]\n* Displays values [on mouseover][]\n* Adjustable [averaging period][]\n* Extensive set of [options][] for customization.\n* Compatible with the [Google Visualization API][gviz]\n\n## Minimal Example\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"dygraph.js\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"dygraph.css\" />\n</head>\n<body>\n<div id=\"graphdiv\"></div>\n<script type=\"text/javascript\"><!--//--><![CDATA[//><!--\n  Dygraph.onDOMready(function onDOMready() {  // or jQuery $() etc.\n    g = new Dygraph(\n        document.getElementById(\"graphdiv\"),  // containing div\n        \"Date,Temperature\\n\" +                // the data series\n        \"2008-05-07,75\\n\" +\n        \"2008-05-08,70\\n\" +\n        \"2008-05-09,80\\n\",\n        { }                                   // the options\n      );\n  });\n//--><!]]></script>\n</body>\n</html>\n```\n\nLearn more by reading [the tutorial][] and seeing demonstrations of what\ndygraphs can do in the [gallery][]. You can get `dygraph.js` and `dygraph.css`\nfrom [UNPKG][], [cdnjs][] or [from NPM][npm] (see below).\n\n## Usage with a module loader\n\nGet dygraphs from NPM:\n\n    npm install dygraphs\n\n**Do not install from the git repository!** Always use a tarball install,\nwhich contains the prebuilt files; `npm` fails to build the source code\non install from github. (The tarball from the GitHub Registry is fine.)\n\nYou'll find pre-built JS & CSS files in `node_modules/dygraphs/dist/`. If you're\nusing a module bundler like browserify or webpack, you can import dygraphs:\n\n```js\nimport Dygraph from 'dygraphs';\n// or: const Dygraph = require('dygraphs');\n\nconst g = new Dygraph('graphdiv', data, { /* options */ });\n```\n\nCheck out the [dygraphs-es6 repo][] for a fully-worked example.\n\n## Development\n\nTo get going, install the following Debian packages…\n\n - `jq`\n - `mksh`\n - `pax`\n - `python3`\n\n… clone the repo and run:\n\n    npm install\n    npm run build-jsonly\n\nThen open `tests/demo.html` in your browser.\n\nRead more about the dygraphs development process in the [developer guide](/DEVELOP.md).\n\n## License(s)\ndygraphs is available under the MIT license, included in [LICENSE.txt](./LICENSE.txt).\n\n[UNPKG]: https://unpkg.com/dygraphs/\n[cdnjs]: https://cdnjs.com/libraries/dygraph\n[the tutorial]: http://www.dygraphs.com/tutorial.html\n[gallery]: http://www.dygraphs.com/gallery\n[error bands]: http://dygraphs.com/tests/legend-values.html\n[pan and zoom]: http://dygraphs.com/tests/link-interaction.html\n[on mouseover]: http://dygraphs.com/tests/legend-values.html\n[averaging period]: http://dygraphs.com/tests/temperature-sf-ny.html\n[options]: http://www.dygraphs.com/options.html\n[Stack Overflow]: https://stackoverflow.com/questions/tagged/dygraphs?sort=votes&pageSize=50\n[Google Groups]: http://groups.google.com/group/dygraphs-users\n[gviz]: http://dygraphs.com/data.html#datatable\n[npm]: https://www.npmjs.com/package/dygraphs\n[dygraphs-es6 repo]: https://github.com/danvk/dygraphs-es6\n"
        },
        {
          "name": "Screenshot.png",
          "type": "blob",
          "size": 76.974609375,
          "content": null
        },
        {
          "name": "auto_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "babel.config.json",
          "type": "blob",
          "size": 0.2861328125,
          "content": "{\n  \"plugins\": [\n    \"@babel/plugin-transform-strict-mode\",\n    \"add-module-exports\"\n  ],\n  \"presets\": [\n    [\n      \"@babel/env\",\n      {\n        \"bugfixes\": true,\n        \"exclude\": [\n          \"@babel/plugin-transform-typeof-symbol\"\n        ],\n        \"modules\": \"auto\"\n      }\n    ]\n  ]\n}\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dygraph-exports.js",
          "type": "blob",
          "size": 3.673828125,
          "content": "// This is the complete set of symbols that dygraphs exports for use by\n// clients. Exporting a symbols forces the Closure Compiler to preserve it in\n// the minified JS (symbols not in this list are mangled).\n\n/*global Dygraph:false, goog:false */\n\ngoog.exportSymbol('Dygraph', Dygraph);\n\ngoog.exportSymbol('Dygraph.prototype.adjustRoll', Dygraph.prototype.adjustRoll);\ngoog.exportSymbol('Dygraph.prototype.annotations', Dygraph.prototype.annotations);\ngoog.exportSymbol('Dygraph.prototype.clearSelection', Dygraph.prototype.clearSelection);\ngoog.exportSymbol('Dygraph.prototype.destroy', Dygraph.prototype.destroy);\ngoog.exportSymbol('Dygraph.prototype.eventToDomCoords', Dygraph.prototype.eventToDomCoords);\ngoog.exportSymbol('Dygraph.prototype.getArea', Dygraph.prototype.getArea);\ngoog.exportSymbol('Dygraph.prototype.getColors', Dygraph.prototype.getColors);\ngoog.exportSymbol('Dygraph.prototype.getHighlightSeries', Dygraph.prototype.getHighlightSeries);\ngoog.exportSymbol('Dygraph.prototype.getLabels', Dygraph.prototype.getLabels);\ngoog.exportSymbol('Dygraph.prototype.getOption', Dygraph.prototype.getOption);\ngoog.exportSymbol('Dygraph.prototype.getPropertiesForSeries', Dygraph.prototype.getPropertiesForSeries);\ngoog.exportSymbol('Dygraph.prototype.getSelection', Dygraph.prototype.getSelection);\ngoog.exportSymbol('Dygraph.prototype.getValue', Dygraph.prototype.getValue);\ngoog.exportSymbol('Dygraph.prototype.indexFromSetName', Dygraph.prototype.indexFromSetName);\ngoog.exportSymbol('Dygraph.prototype.isSeriesLocked', Dygraph.prototype.isSeriesLocked);\ngoog.exportSymbol('Dygraph.prototype.isZoomed', Dygraph.prototype.isZoomed);\ngoog.exportSymbol('Dygraph.prototype.numAxes', Dygraph.prototype.numAxes);\ngoog.exportSymbol('Dygraph.prototype.numColumns', Dygraph.prototype.numColumns);\ngoog.exportSymbol('Dygraph.prototype.numRows', Dygraph.prototype.numRows);\ngoog.exportSymbol('Dygraph.prototype.ready', Dygraph.prototype.ready);\ngoog.exportSymbol('Dygraph.prototype.resetZoom', Dygraph.prototype.resetZoom);\ngoog.exportSymbol('Dygraph.prototype.resize', Dygraph.prototype.resize);\ngoog.exportSymbol('Dygraph.prototype.rollPeriod', Dygraph.prototype.rollPeriod);\ngoog.exportSymbol('Dygraph.prototype.setAnnotations', Dygraph.prototype.setAnnotations);\ngoog.exportSymbol('Dygraph.prototype.setSelection', Dygraph.prototype.setSelection);\ngoog.exportSymbol('Dygraph.prototype.setVisibility', Dygraph.prototype.setVisibility);\ngoog.exportSymbol('Dygraph.prototype.toDataCoords', Dygraph.prototype.toDataCoords);\ngoog.exportSymbol('Dygraph.prototype.toDataXCoord', Dygraph.prototype.toDataXCoord);\ngoog.exportSymbol('Dygraph.prototype.toDataYCoord', Dygraph.prototype.toDataYCoord);\ngoog.exportSymbol('Dygraph.prototype.toDomCoords', Dygraph.prototype.toDomCoords);\ngoog.exportSymbol('Dygraph.prototype.toDomXCoord', Dygraph.prototype.toDomXCoord);\ngoog.exportSymbol('Dygraph.prototype.toDomYCoord', Dygraph.prototype.toDomYCoord);\ngoog.exportSymbol('Dygraph.prototype.toPercentXCoord', Dygraph.prototype.toPercentXCoord);\ngoog.exportSymbol('Dygraph.prototype.toPercentYCoord', Dygraph.prototype.toPercentYCoord);\ngoog.exportSymbol('Dygraph.prototype.toString', Dygraph.prototype.toString);\ngoog.exportSymbol('Dygraph.prototype.updateOptions', Dygraph.prototype.updateOptions);\ngoog.exportSymbol('Dygraph.prototype.visibility', Dygraph.prototype.visibility);\ngoog.exportSymbol('Dygraph.prototype.xAxisExtremes', Dygraph.prototype.xAxisExtremes);\ngoog.exportSymbol('Dygraph.prototype.xAxisRange', Dygraph.prototype.xAxisRange);\ngoog.exportSymbol('Dygraph.prototype.yAxisRange', Dygraph.prototype.yAxisRange);\ngoog.exportSymbol('Dygraph.prototype.yAxisRanges', Dygraph.prototype.yAxisRanges);\n\ngoog.exportSymbol('Dygraph.Plotters', Dygraph.Plotters);\n"
        },
        {
          "name": "dygraph-externs.js",
          "type": "blob",
          "size": 3.7763671875,
          "content": "/**\n * @license\n * Copyright 2006 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n// TODO(danvk): move the Dygraph definitions out of here once I closure-ify dygraphs.js\n/**\n * @param {!HTMLDivElement|string} div\n * @param {DygraphDataArray|\n *     GVizDataTable|\n *     string|\n *     function():(DygraphDataArray|GVizDataTable|string)} file\n * @param {Object} attrs\n * @constructor\n */\nfunction Dygraph(div, file, attrs) {}\n\n/** @type {string} */\nDygraph.NAME;\n\n/** @type {string} */\nDygraph.VERSION;\n\n/** @type {function(): string} */\nDygraph.toString;\n\n/** @type {function(Event, Dygraph, DygraphInteractionContext)} */\nDygraph.startPan;\n\n/** @type {function(Event, Dygraph, DygraphInteractionContext)} */\nDygraph.movePan;\n\n/** @type {function(Event, Dygraph, DygraphInteractionContext)} */\nDygraph.endPan;\n\n/** @type {function(?string): boolean} */\nDygraph.prototype.isZoomed;\n\n/** @type {function(): string} */\nDygraph.prototype.toString;\n\n/** @type {function(string, string=)} */\nDygraph.prototype.getOption;\n\n/** @type {function(): number} */\nDygraph.prototype.rollPeriod;\n\n/** @type {function(): ?Array.<number>} */\nDygraph.prototype.xAxisRange;\n\n/** @type {function(): Array.<number>} */\nDygraph.prototype.xAxisExtremes;\n\n/** @type {function(number): ?Array.<number>} */\nDygraph.prototype.yAxisRange;\n\n/** @type {function(): Array.<Array.<number>>} */\nDygraph.prototype.yAxisRanges;\n\n/** @type {function(?number, ?number, ?number): Array.<?number>} */\nDygraph.prototype.toDomCoords;\n\n/** @type {function(?number): ?number} */\nDygraph.prototype.toDomXCoord;\n\n/** @type {function(?number, ?number): ?number} */\nDygraph.prototype.toDomYCoord;\n\n/** @type {function(?number, ?number, ?number): Array.<?number>} */\nDygraph.prototype.toDataCoords;\n\n/** @type {function(?number): ?number} */\nDygraph.prototype.toDataXCoord;\n\n/** @type {function(?number, ?number): ?number} */\nDygraph.prototype.toDataYCoord;\n\n/** @type {function(?number, ?number): ?number} */\nDygraph.prototype.toPercentYCoord;\n\n/** @type {function(?number): ?number} */\nDygraph.prototype.toPercentXCoord;\n\n/** @type {function(): number} */\nDygraph.prototype.numColumns;\n\n/** @type {function(): number} */\nDygraph.prototype.numRows;\n\n/** @type {function(number, number)} */\nDygraph.prototype.getValue;\n\n/** @type {function()} */\nDygraph.prototype.destroy;\n\n/** @type {function()} */\nDygraph.prototype.getColors;\n\n/** @type {function(string)} */\nDygraph.prototype.getPropertiesForSeries;\n\n/** @type {function()} */\nDygraph.prototype.resetZoom;\n\n/** @type {function(): {x, y, w, h}} */\nDygraph.prototype.getArea;\n\n/** @type {function(Object): Array.<number>} */\nDygraph.prototype.eventToDomCoords;\n\n/** @type {function(number, string, boolean): boolean} */\nDygraph.prototype.setSelection;\n\n/** @type {function()} */\nDygraph.prototype.clearSelection;\n\n/** @type {function(): number} */\nDygraph.prototype.getSelection;\n\n/** @type {function(): string} */\nDygraph.prototype.getHighlightSeries;\n\n/** @type {function(): boolean} */\nDygraph.prototype.isSeriesLocked;\n\n/** @type {function(): number} */\nDygraph.prototype.numAxes;\n\n/** @type {function(Object, boolean=)} */\nDygraph.prototype.updateOptions;\n\n/** @type {function(number, number)} */\nDygraph.prototype.resize;\n\n/** @type {function(number)} */\nDygraph.prototype.adjustRoll;\n\n/** @type {function(): Array.<boolean>} */\nDygraph.prototype.visibility;\n\n/** @type {function(number, boolean)} */\nDygraph.prototype.setVisibility;\n\n/** @type {function(Array.<Object>, boolean=)} */\nDygraph.prototype.setAnnotations;\n\n/** @type {function(): Array.<Object>} */\nDygraph.prototype.annotations;\n\n/** @type {function(): ?Array.<string>} */\nDygraph.prototype.getLabels;\n\n/** @type {function(string): ?number} */\nDygraph.prototype.indexFromSetName;\n\n/** @type {function(function(!Dygraph))} */\nDygraph.prototype.ready;\n"
        },
        {
          "name": "extras",
          "type": "blob",
          "size": 0.009765625,
          "content": "src/extras"
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 0.015625,
          "content": "docs/favicon.ico"
        },
        {
          "name": "gallery",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.es5.js",
          "type": "blob",
          "size": 0.0458984375,
          "content": "module.exports = require('./src-es5/dygraph');\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.0400390625,
          "content": "export { default } from './src/dygraph';\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.3193359375,
          "content": "{\n  \"name\": \"dygraphs\",\n  \"version\": \"2.2.2-alpha.0\",\n  \"description\": \"dygraphs is a fast, flexible open source JavaScript charting library.\",\n  \"main\": \"index.es5\",\n  \"module\": \"index\",\n  \"jsnext:main\": \"index\",\n  \"files\": [\n    \"_site\",\n    \"dist\",\n    \"index.es5.js\",\n    \"index.js\",\n    \"src\",\n    \"src-es5\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/danvk/dygraphs.git\"\n  },\n  \"keywords\": [\n    \"dygraphs\",\n    \"javascript\",\n    \"visualization\",\n    \"canvas\",\n    \"chart\",\n    \"timeseries\"\n  ],\n  \"author\": \"Dan Vanderkam (danvdk@gmail.com)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/danvk/dygraphs/issues\"\n  },\n  \"homepage\": \"https://github.com/danvk/dygraphs\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.20.15\",\n    \"@babel/core\": \">=7.20.15 <7.21.4 || ^7.21.5\",\n    \"@babel/plugin-transform-strict-mode\": \"^7.20.15\",\n    \"@babel/preset-env\": \"^7.20.15\",\n    \"babel-plugin-add-module-exports\": \"^1.0.4\",\n    \"browser-pack\": \"^6.1.0\",\n    \"browserify\": \"^17.0.0\",\n    \"chai\": \"^3.3.0\",\n    \"clean-css\": \"^5.3.1\",\n    \"clean-css-cli\": \"^5.6.1\",\n    \"core-js\": \"^3.25.1\",\n    \"coveralls\": \"^3.1.1\",\n    \"globals\": \"^13.17.0\",\n    \"http-server\": \"^13.0.2\",\n    \"istanbul\": \"^0.4.0\",\n    \"js-yaml\": \"^3.14.1\",\n    \"jshint\": \"^2.5.10\",\n    \"lcov-parse\": \"0.0.9\",\n    \"mocha\": \"^5.2.0\",\n    \"mocha-phantomjs\": \"^3.6.0\",\n    \"mocha-phantomjs-istanbul\": \"0.0.2\",\n    \"parse-data-uri\": \"^0.2.0\",\n    \"phantomjs\": \"1.9.7-15\",\n    \"phantomjs-function-bind-polyfill\": \"^1.0.0\",\n    \"pre-commit\": \"^1.0.6\",\n    \"source-map\": \"^0.6.1\",\n    \"uglify-js\": \"^3.17.4\",\n    \"watchify\": \"^4.0.0\"\n  },\n  \"scripts\": {\n    \"build\": \"./scripts/build.sh\",\n    \"build-jsonly\": \"./scripts/build-js.sh\",\n    \"clean\": \"./scripts/clean.sh\",\n    \"coverage\": \"./scripts/generate-coverage.sh\",\n    \"site\": \"./scripts/run-site.sh\",\n    \"prepack\": \"rm -rf _site && cp -Lr site _site && pax -rw -l LICENSE.txt README.md _site/ && jdupes -rL dist _site src src-es5 && cd _site && mksh ../scripts/mkdiridx.sh --ah '<a href=\\\"https://www.npmjs.com/package/dygraphs\\\">dygraphs</a> manual integration tests' ./tests\",\n    \"postpack\": \"rm -rf _site\",\n    \"watch\": \"./scripts/watch.sh\",\n    \"test\": \"./scripts/run-tests.sh\",\n    \"test-min\": \"./scripts/run-tests.sh min\",\n    \"tests-ok\": \"./scripts/check-no-only.sh\"\n  },\n  \"pre-commit\": [\n    \"tests-ok\"\n  ]\n}\n"
        },
        {
          "name": "releases.json",
          "type": "blob",
          "size": 0.9462890625,
          "content": "[\n  {\n    \"files\": [\n      \"dygraph.min.js\",\n      \"dygraph.js\",\n      \"dygraph.css\"\n    ],\n    \"version\": \"2.2.1\"\n  },\n  {\n    \"files\": [\n      \"dygraph.min.js\",\n      \"dygraph.js\",\n      \"dygraph.css\"\n    ],\n    \"version\": \"2.2.0\"\n  },\n  {\n    \"files\": [\n      \"dygraph.min.js\",\n      \"dygraph.js\",\n      \"dygraph.css\"\n    ],\n    \"version\": \"2.1.0\"\n  },\n  {\n    \"files\": [\n      \"dygraph.min.js\",\n      \"dygraph.js\",\n      \"dygraph.css\"\n    ],\n    \"version\": \"2.0.0\"\n  },\n  {\n    \"distsubdir\": false,\n    \"files\": [\n      \"dygraph-combined.js\",\n      \"dygraph-combined-dev.js\"\n    ],\n    \"version\": \"1.1.1\"\n  },\n  {\n    \"distsubdir\": false,\n    \"files\": [\n      \"dygraph-combined.js\",\n      \"dygraph-combined-dev.js\"\n    ],\n    \"version\": \"1.1.0\"\n  },\n  {\n    \"distsubdir\": false,\n    \"files\": [\n      \"dygraph-combined.js\"\n    ],\n    \"version\": \"1.0.1\"\n  },\n  {\n    \"distsubdir\": false,\n    \"files\": [\n      \"dygraph-combined.js\"\n    ],\n    \"version\": \"1.0.0\"\n  }\n]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "thumbnail.png",
          "type": "blob",
          "size": 10.7119140625,
          "content": null
        }
      ]
    }
  ]
}