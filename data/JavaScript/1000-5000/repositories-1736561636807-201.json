{
  "metadata": {
    "timestamp": 1736561636807,
    "page": 201,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "janhuenermann/neurojs",
      "stars": 4399,
      "defaultBranch": "experimental",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0302734375,
          "content": "\n*.DS_Store\nbuild\nnode_modules\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License\n\nCopyright (c) 2017 Jan Hünermann\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.4443359375,
          "content": "<img src=\"./images/icon.png\" alt=\"neurojs\" height=\"125\">\n\n# neurojs\n\nneurojs is a JavaScript framework for deep learning in the browser. It mainly focuses on reinforcement learning, but can be used for any neural network based task. It contains neat demos to visualise these capabilities, for instance a 2D self-driving car. \n\nFeel free to contribute. The development on such projects is more awesome in a community!\n\n**Note: this repo is no longer maintained since more general frameworks such as TensorFlow-JS emerged, which I recommend you to use.**\n\n### Features\n- Implements a full-stack neural-network based machine learning framework\n- Extended reinforcement-learning support\n\t+ Uniform and prioritised replay buffers\n\t+ Advantage-learning (increasing the action-gap) https://arxiv.org/pdf/1512.04860v1.pdf\n\t+ Support for **deep-q-networks** and **actor-critic** models (via deep-deterministic-policy-gradients)\n- Binary import and export of network configurations (weights etc.)\n- High-performance\n\n### Examples\n- [Self-driving car](/examples/cars)\n- [Advanced XOR](/examples/adv-xor)\n- [Andrej Karpathy's Waterworld](/examples/waterworld) (ConvNetJS replaced with NeuroJS)\n\n### Running the examples\n```bash\nnpm install\nnpm start\n```\n\nOpen `http://localhost:8080/examples/` in your browser and select the demo you want to run.\n\n### What's next?\n- More examples (pong, pendulum, snake,improved cars, etc.)\n- Support for web workers\n- LSTM and backpropagation through time\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.9443359375,
          "content": "{\n    \"name\": \"neurojs\",\n    \"version\": \"2.0.0\",\n    \"description\": \"A modular and modern deep-learning library for JavaScript designed to solve supervised and unsupervised problems.\",\n    \"main\": \"index.js\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git://github.com:janhuenermann/neurojs.git\"\n    },\n    \"directories\": {\n        \"example\": \"examples\"\n    },\n    \"scripts\": {\n        \"start\": \"webpack-dev-server --inline --progress\",\n        \"build\": \"webpack\"\n    },\n    \"keywords\": [\n        \"deep-learning\",\n        \"neural-network\",\n        \"reinforcement-learning\",\n        \"deep-q-learning\"\n    ],\n    \"author\": {\n        \"name\": \"Jan Hünermann\",\n        \"url\": \"http://janhuenermann.com/\"\n    },\n    \"license\": \"MIT\",\n    \"devDependencies\": {\n        \"webpack\": \"^4.42.0\",\n        \"webpack-cli\": \"^3.3.11\",\n        \"webpack-dev-server\": \"^3.10.3\",\n        \"fsevents\": \"1.2.9\"\n    },\n    \"dependencies\": {\n        \"colors\": \"^1.4.0\"\n    }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 0.2763671875,
          "content": "var path = require('path')\n\nconst config = {\n    entry: './src/framework.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'neurojs-v2.js',\n        publicPath: '/build/'\n    },\n    mode: \"development\",\n    devtool: false\n}\n\nmodule.exports = config\n"
        }
      ]
    }
  ]
}