{
  "metadata": {
    "timestamp": 1736561736079,
    "page": 352,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "civiccc/react-waypoint",
      "stars": 4075,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.884765625,
          "content": "{\n  \"env\": {\n    \"test\": {\n      \"presets\": [[\"airbnb\", {\n        \"looseClasses\": true,\n        \"modules\": true,\n        \"runtimeHelpersUseESModules\": false,\n        \"runtimeVersion\": \"7.12.5\",\n        \"transformRuntime\": true\n      }]]\n    },\n\n    \"cjs\": {\n      \"presets\": [[\"airbnb\", {\n        \"looseClasses\": true,\n        \"modules\": false,\n        \"runtimeHelpersUseESModules\": false,\n        \"runtimeVersion\": \"7.12.5\",\n        \"transformRuntime\": true\n      }]]\n    },\n\n    \"es\": {\n      \"presets\": [[\"airbnb\", {\n        \"looseClasses\": true,\n        \"modules\": false,\n        \"runtimeHelpersUseESModules\": true,\n        \"runtimeVersion\": \"7.12.5\",\n        \"transformRuntime\": true\n      }]]\n    },\n\n    \"development\": {\n      \"presets\": [[\"airbnb\", {\n        \"looseClasses\": true,\n        \"modules\": false,\n        \"runtimeVersion\": \"7.12.5\",\n        \"transformRuntime\": true\n      }]]\n    }\n  }\n}\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0126953125,
          "content": "build\nes\ncjs\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.3125,
          "content": "module.exports = {\n  extends: 'eslint-config-airbnb',\n  parserOptions: {\n    ecmaVersion: 2018,\n    sourceType: 'module',\n    ecmaFeatures: {\n      jsx: true,\n    },\n  },\n  rules: {\n    'no-restricted-globals': 'off',\n    'no-plusplus': 'off',\n    'no-underscore-dangle': 'off',\n  },\n  env: {\n    browser: true,\n  },\n};\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0634765625,
          "content": "build\nes\ncjs\nnode_modules\nnpm-debug.log\n.idea/\npackage-lock.json\n"
        },
        {
          "name": ".importjs.js",
          "type": "blob",
          "size": 0.208984375,
          "content": "// This config file controls how import-js behaves\n// https://github.com/Galooshi/import-js\nmodule.exports = {\n  importDevDependencies: true,\n  environments: ['node', 'browser'],\n  declarationKeyword: 'import',\n};\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0400390625,
          "content": "git-tag-version=false\npackage-lock=false\n"
        },
        {
          "name": ".overcommit.yml",
          "type": "blob",
          "size": 0.4404296875,
          "content": "CommitMsg:\n  HardTabs:\n    enabled: true\n\nPreCommit:\n  ALL:\n    exclude:\n      - 'node_modules/**/*'\n\n  EsLint:\n    enabled: true\n    required_executable: './node_modules/.bin/eslint'\n    include:\n      - '**/*.js'\n      - '**/*.jsx'\n\n  HardTabs:\n    enabled: true\n    description: 'Checking for hard tabs'\n\n  JsonSyntax:\n    enabled: true\n\n  MergeConflicts:\n    enabled: true\n\n  TrailingWhitespace:\n    enabled: true\n\n  YamlSyntax:\n    enabled: true\n"
        },
        {
          "name": ".projections.json",
          "type": "blob",
          "size": 0.306640625,
          "content": "{\n  \"src/*.js\": {\n    \"alternate\": \"test/{}_test.js\",\n    \"type\": \"source\"\n  },\n  \"src/*.jsx\": {\n    \"alternate\": \"test/{}_test.jsx\",\n    \"type\": \"source\"\n  },\n  \"test/*_test.js\": {\n    \"alternate\": \"src/{}.js\",\n    \"type\": \"test\"\n  },\n  \"test/*_test.jsx\": {\n    \"alternate\": \"src/{}.jsx\",\n    \"type\": \"test\"\n  }\n}"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.314453125,
          "content": "language: node_js\ndist: bionic\nservices:\n  - xvfb\nsudo: false\nnode_js:\n  - node\n  - lts/*\ncache:\n  npm: false\nenv:\n  - REACT_VERSION=15.3\n  - REACT_VERSION=16.0\n  - REACT_VERSION=17.0\n  - REACT_VERSION=18.0\nbefore_script:\n  - npm install react-dom@^$REACT_VERSION react@^$REACT_VERSION react-test-renderer@^$REACT_VERSION\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.0810546875,
          "content": "## 10.3.0\n\n- Allow React v18 in `package.json`.\n\n## 10.2.0\n\n- Add `children` prop to TypeScript definitions for `Waypoint` to support React v18.\n\n## 10.1.0\n\n- Classes are now compiled in loose mode, which should improve runtime performance.\n- Babel helpers now import from `@babel/runtime` instead of being inlined, which reduces bundle size.\n\n## 10.0.0\n\n- [Breaking] Remove `Waypoint.getWindow()`\n- Support React 17\n\n## 9.0.3\n\n- Make waypoints work with `overflow: overlay`\n\n## 9.0.2\n\n- Remove StrictMode warnings\n\n## 9.0.1\n\n- Fix export in TypeScript types (#298)\n- Update babel 6 -> 7, rollup 0 -> 1 (#301)\n\n## 9.0.0\n\n- [Breaking] Require React 15.3+\n- [Breaking] Make Waypoint a named export instead of default export\n- Change constants into named exports for better minification\n- Fix removing propTypes in production builds\n- Ensure that children is valid only in dev\n- Fix isForwardRef call\n\n## 8.1.0\n\n- Improve support for refs (#278)\n- Don't include `.babelrc` in published npm package (#270)\n\n## 8.0.3\n\n- Defer `handleScroll` in `componentDidUpdate` ([#265](https://github.com/civiccc/react-waypoint/pull/265))\n- Extend `React.PureComponent` instead of `React.Component` when available ([#264](https://github.com/civiccc/react-waypoint/pull/264))\n\n## 8.0.2\n\n- Allow consolidated-events ^2.0.0 ([#256](https://github.com/civiccc/react-waypoint/pull/256))\n- Add message to better understand logged error message in tests ([#255](https://github.com/civiccc/react-waypoint/pull/255))\n\n## 8.0.1\n\n- Fix default export error in typescript definition file\n\n## 8.0.0\n\n- Add es module entry point in package.json\n- Type Waypoint class properties as static\n- Let proptypes be removable in consumers production bundles\n\n## 7.3.4\n\n- Fix second arg to Typescript component definition\n\n## 7.3.3\n\n- Add second arg to Typescript component definition\n\n## 7.3.2\n\n- Fix typescript definition\n\n## 7.3.1\n\n- Make es module opt in (via `import Waypoint from 'react-waypoint/es'`)\n\n## 7.3.0\n\n- Build with rollup.\n- Add an ES module build.\n\n## 7.2.0\n\n- Allow React 16 as a peerDependency.\n- Remove scrollableParent prop check error.\n\n## 7.1.0\n\n- Add support for using composite components as child (#208)\n\n## 7.0.4\n\n- Update consolidated-events from 1.0.1 to 1.1.0.\n\n## 7.0.3\n\n- Fix bug in onNextTick.\n\n## 7.0.2\n\n- Fix bug if waypoint updates before being initialized.\n\n## 7.0.1\n\n- Improve startup time by consolidating `setTimeout`s and deferring work until\n  the initial timeout happens.\n\n## 7.0.0\n\n- Move `prop-types` to a regular dependency\n- Assume `window` as scrollable ancestor when `<body>` has `overflow: auto|scroll`\n- Restrict lower bound of React to v0.14.9\n\n## 6.0.0\n\n- Add `prop-types` as a peer dependency to remove deprecation warnings when\n  running on React 15.5\n\n## 5.3.1\n\n- Remove the `prop-types` peer dependency. This was an accidental breaking\n  change that will instead be released as 6.0.0.\n\n## 5.3.0\n\n- Remove deprecation warnings when running on React 15.5\n- Add React 14 to Travis test suite.\n\n## 5.2.1\n\n- [Fix] Avoid unnecessary clearTimeout when unmounting.\n\n## 5.2.0\n\n- [New] scrollableAncestor prop can now accept \"window\" as a string. This should\n  help with server rendering.\n- Debug code is now minified out in production build.\n\n## 5.1.0\n\n- Waypoint can now accept children.\n\n## 5.0.3\n\n- Clear initial timeout when unmounting component.\n\n## 5.0.2\n- Revert ES6 typescript definition.\n\n## 5.0.1\n- Fix typescript definition to support ES6 imports\n\n## 5.0.0\n\n- [Breaking] Remove `throttleHandler`\n- Add typescript definitions file\n\n## 4.1.0\n\n- Add `horizontal` prop. Use it to make the waypoint trigger on horizontal scrolling.\n\n## 4.0.4\n\n- Delay initial calling of handleScroll when mounting.\n\n## 4.0.3\n\n- Extract event listener code to consolidated-events package.\n\n## 4.0.2\n\n- Prevent event listeners from leaking.\n\n## 4.0.1\n\n- Fix error when a waypoint unmounts another waypoint as part of handling a\n  (scroll/resize) event.\n\n## 4.0.0\n\n- [Breaking] Use passive event listeners in browsers that support them. This\n  will break any Waypoint event handler that was calling\n  `event.preventDefault()`.\n- Initialize fewer event listeners.\n\n## 3.1.3\n\n- Avoid warnings from React about calling PropTypes directly (#119).\n\n## 3.1.2\n\nThis version contains a fix for errors of the following kind:\n\n```\nUnable to get property 'getBoundingClientRect' of undefined or null reference\n```\n\n## 3.1.1\n\n- Fix passing props to super class, to make react-waypoint compatible with [preact](https://github.com/developit/preact) (thanks @kamotos!)\n\n## 3.1.0\n\nNew properties have been added to the `onEnter`/`onLeave`/`onPositionChange`\ncallbacks:\n\n- `waypointTop` - the waypoint's distance to the top of the viewport.\n- `viewportTop` - the distance from the scrollable ancestor to the viewport top.\n- `viewportBottom` - the distance from the bottom of the scrollable ancestor to\n  the viewport top.\n\n## 3.0.0\n\n- Change `threshold` to `bottomOffset` and `topOffset`\n- Add `throttleHandler` prop to allow scrolling to be throttled\n\n## 2.0.3\n\n- Added `debug` prop\n\n## 2.0.2\n\n- Improved position calculation\n\n## 2.0.1\n\n- Add React 15 support\n\n## 2.0.0\n\n- Breaking: Unify arguments passed to callbacks\n- Add `displayName`\n\n## 1.3.1\n\n- Handle invisible waypoint parents\n- Add `onPositionChange`\n\n## 1.3.0\n\n- Rename `scrollableParent` prop to `scrollableAncestor`\n\n## 1.2.3\n\n- Simplify `getWindow` usage\n- Allow any `scrollableParent`\n\n## 1.2.2\n\n- Add `fireOnRapidScroll` prop\n\n## 1.2.1\n\n- Make bundled waypoint.js easier to import\n\n## 1.2.0\n\n- Upgrade Babel from 5 to 6\n- Convert from CommonJS to ES2015 modules\n- Convert from React.createClass to ES2015 class\n- Remove bower support\n\n## 1.1.3\n\n- Calculate proper offset when <html> or <body> has a margin\n\n## 1.1.2\n\n- Fix built version\n\n## 1.1.1\n\n- Add statics for edge argument used by `onEnter` and `onLeave`\n- Prevent scroll handler from blowing up if the component is not mounted at the\n  time of execution\n\n## 1.1.0\n\n- Add second parameter to `onEnter` and `onLeave` callbacks to indicate\n  from which direction the waypoint entered _from_ and _to_ respectively\n\n## 1.0.6\n\n- Prevent duplicate onError/onLeave callbacks\n\n## 1.0.5\n\n- Prevent error when `<html>` has a scrollable overflow styling\n\n## 1.0.4\n\n- Bump `react` dependency to 0.14 and add `react-dom` to `peerDependencies`\n\n## 1.0.3\n\n- Replace `this.getDOMNode()` with `React.findDOMNode(this)`\n- Improve support for scrolling very quickly\n\n## 1.0.2\n\n- Add event object and scope to onEnter/onLeave calls\n- Allow React 0.14.0-beta peerDependency\n- Always remove window resize event listener\n\n## 1.0.1\n\n- Ignore more files for bower and npm packages\n- Commit the built version for bower package\n\n## 1.0.0\n\n- Add 'jsx' syntax to the unbuilt version of the component, and build into\n  'build/ReactWaypoint.js' with webpack.\n- Fix corner case where scrollable parent is not the window and the window\n  resize should trigger a Waypoint callback.\n\n## 0.3.0\n\n- Fix Waypoints with the window element as their scrollable parent (Firefox\n  only)\n\n## 0.2.0\n\n- Fix Waypoints with the window element as their scrollable parent\n- Change default threshold from 0.1 to 0\n- Guard against undefined scrollable parent when unmounting\n\n## 0.1.0\n\n- Initial release\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.3876953125,
          "content": "We love pull requests. Here's a quick guide:\n\n1. Fork the repo.\n2. Run the tests. We only take pull requests with passing tests, and it's great\n   to know that you have a clean slate: `npm install && npm test`.\n3. Add a test for your change. Only refactoring and documentation changes\n   require no new tests. If you are adding functionality or fixing a bug, we\n   need a test!\n4. Make the test pass.\n5. Push to your fork and submit a pull request.\n\n## Testing performance\n\nTo test scroll performance when having multiple waypoints on a page, run `npm run\nperformance-test:watch`, then open `test/performance-test.html`. Scroll around\nand use your regular performance profiling tools to see the effects of your\nchanges.\n\n## Publishing a new version\n\n1. Add list of changes to CHANGELOG.md. Do not commit them yet.\n2. Run `npm version major`, `npm version minor`, or `npm\n   version patch`.\n\nThis will handle the rest of the process for you, including running tests,\ncleaning out the previous build, building the package, bumping the version,\ncommitting the changes you've made to CHANGELOG.md, tagging the version, pushing\nthe changes to GitHub, pushing the tags to GitHub, and publishing the new\nversion on npm.\n\n## Code of conduct\n\nThis project adheres to the [Open Code of Conduct][code-of-conduct]. By\nparticipating, you are expected to honor this code.\n\n[code-of-conduct]: https://github.com/civiccc/code-of-conduct\n"
        },
        {
          "name": "INTHEWILD.md",
          "type": "blob",
          "size": 0.75,
          "content": "Please use [pull requests](https://github.com/civiccc/react-waypoint/pull/new/master) to add your organization and/or project to this document!\n\n# Organizations\n\n- [Airbnb](https://github.com/airbnb)\n- [Brigade](https://github.com/brigade)\n- [Domain Group](https://github.com/DomainGroupOSS)\n- [DoorDash](https://github.com/doordash)\n- [HousingAnywhere](https://github.com/housinganywhere)\n- [Matter](https://github.com/matter-app)\n- [Netflix](https://github.com/Netflix)\n- [Remix](https://github.com/remix)\n- [StarNow](https://github.com/starnow)\n- [Yorango](https://github.com/Yorango)\n- [Wanderpaths](https://github.com/wanderpaths)\n\n# Projects\n\n- [Happo](https://github.com/Galooshi/happo)\n- [react-ideal-image](https://github.com/stereobooster/react-ideal-image)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Brigade\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.96484375,
          "content": "# React Waypoint\n\n[![npm version](https://badge.fury.io/js/react-waypoint.svg)](http://badge.fury.io/js/react-waypoint)\n[![Build Status](https://travis-ci.org/civiccc/react-waypoint.svg?branch=master)](https://travis-ci.org/civiccc/react-waypoint)\n\nA React component to execute a function whenever you scroll to an element. Works\nin all containers that can scroll, including the window.\n\nReact Waypoint can be used to build features like lazy loading content, infinite\nscroll, scrollspies, or docking elements to the viewport on scroll.\n\nInspired by [Waypoints][waypoints], except this little library grooves the\n[React][react] way.\n\n## Demo\n![Demo of React Waypoint in action](https://raw.github.com/civiccc/react-waypoint/master/react-waypoint-demo.gif)\n\n[View demo page][demo-page]\n\n[waypoints]: https://github.com/imakewebthings/waypoints\n[react]: https://github.com/facebook/react\n[demo-page]: https://civiccc.github.io/react-waypoint/\n\n## Installation\n\n### npm\n\n```bash\nnpm install react-waypoint --save\n```\n\n### yarn\n\n```bash\nyarn add react-waypoint\n```\n\n## Usage\n\n```jsx\nimport { Waypoint } from 'react-waypoint';\n\n<Waypoint\n  onEnter={this._handleWaypointEnter}\n  onLeave={this._handleWaypointLeave}\n/>\n```\n\nA waypoint normally fires `onEnter` and `onLeave` as you are scrolling, but it\ncan fire because of other events too:\n\n- When the window is resized\n- When it is mounted (fires `onEnter` if it's visible on the page)\n- When it is updated/re-rendered by its parent\n\nCallbacks will only fire if the new position changed from the last known\nposition. Sometimes it's useful to have a waypoint that fires `onEnter` every\ntime it is updated as long as it stays visible (e.g. for infinite scroll). You\ncan then use a `key` prop to control when a waypoint is reused vs. re-created.\n\n```jsx\n<Waypoint\n  key={cursor}\n  onEnter={this._loadMoreContent}\n/>\n```\n\nAlternatively, you can also use an `onPositionChange` event to just get\nnotified when the waypoint's position (e.g. inside the viewport, above or\nbelow) has changed.\n\n```jsx\n<Waypoint\n  onPositionChange={this._handlePositionChange}\n/>\n```\n\nWaypoints can take a child, allowing you to track when a section of content\nenters or leaves the viewport. For details, see [Children](#children), below.\n\n```jsx\n<Waypoint onEnter={this._handleEnter}>\n  <div>\n    Some content here\n  </div>\n</Waypoint>\n```\n\n### Example: [JSFiddle Example][jsfiddle-example]\n\n[jsfiddle-example]: http://jsfiddle.net/L4z5wcx0/7/\n\n## Prop types\n\n```jsx\n  propTypes: {\n\n    /**\n     * Function called when waypoint enters viewport\n     */\n    onEnter: PropTypes.func,\n\n    /**\n     * Function called when waypoint leaves viewport\n     */\n    onLeave: PropTypes.func,\n\n    /**\n     * Function called when waypoint position changes\n     */\n    onPositionChange: PropTypes.func,\n\n    /**\n     * Whether to activate on horizontal scrolling instead of vertical\n     */\n    horizontal: PropTypes.bool,\n\n    /**\n     * `topOffset` can either be a number, in which case its a distance from the\n     * top of the container in pixels, or a string value. Valid string values are\n     * of the form \"20px\", which is parsed as pixels, or \"20%\", which is parsed\n     * as a percentage of the height of the containing element.\n     * For instance, if you pass \"-20%\", and the containing element is 100px tall,\n     * then the waypoint will be triggered when it has been scrolled 20px beyond\n     * the top of the containing element.\n     */\n    topOffset: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n\n    /**\n     * `bottomOffset` can either be a number, in which case its a distance from the\n     * bottom of the container in pixels, or a string value. Valid string values are\n     * of the form \"20px\", which is parsed as pixels, or \"20%\", which is parsed\n     * as a percentage of the height of the containing element.\n     * For instance, if you pass \"20%\", and the containing element is 100px tall,\n     * then the waypoint will be triggered when it has been scrolled 20px beyond\n     * the bottom of the containing element.\n     * \n     * Similar to `topOffset`, but for the bottom of the container.\n     */\n    bottomOffset: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n\n    /**\n     * Scrollable Ancestor - A custom ancestor to determine if the\n     * target is visible in it. This is useful in cases where\n     * you do not want the immediate scrollable ancestor to be\n     * the container. For example, when your target is in a div\n     * that has overflow auto but you are detecting onEnter based\n     * on the window.\n     *\n     * This should typically be a reference to a DOM node, but it will also work\n     * to pass it the string \"window\" if you are using server rendering.\n     */\n    scrollableAncestor: PropTypes.any,\n\n    /**\n     * fireOnRapidScroll - if the onEnter/onLeave events are to be fired\n     * on rapid scrolling. This has no effect on onPositionChange -- it will\n     * fire anyway.\n     */\n    fireOnRapidScroll: PropTypes.bool,\n\n    /**\n     * Use this prop to get debug information in the console log. This slows\n     * things down significantly, so it should only be used during development.\n     */\n    debug: PropTypes.bool,\n  },\n```\n\nAll callbacks (`onEnter`/`onLeave`/`onPositionChange`) receive an object as the\nonly argument. That object has the following properties:\n\n- `currentPosition` - the position that the waypoint has at the moment. One\n  of `Waypoint.below`, `Waypoint.above`, `Waypoint.inside`,\n  and `Waypoint.invisible`.\n- `previousPosition` - the position that the waypoint had before. Also one\n  of `Waypoint.below`, `Waypoint.above`, `Waypoint.inside`,\n  and `Waypoint.invisible`.\n\nIn most cases, the above two properties should be enough. In some cases\nthough, you might find these additional properties useful:\n\n- `event` - the native [scroll\n  event](https://developer.mozilla.org/en-US/docs/Web/Events/scroll) that\n  triggered the callback. May be missing if the callback wasn't triggered\n  as the result of a scroll.\n- `waypointTop` - the waypoint's distance to the top of the viewport.\n- `viewportTop` - the distance from the scrollable ancestor to the\n  viewport top.\n- `viewportBottom` - the distance from the bottom of the scrollable\n  ancestor to the viewport top.\n\nIf you use [es6 object\ndestructuring](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment),\nthis means that you can use waypoints in the following way:\n\n```jsx\n<Waypoint onEnter={({ previousPosition, currentPosition, event }) => {\n    // do something useful!\n  }}\n/>\n```\n\nIf you are more familiar with plain old js functions, you'll do something like\nthis:\n\n```jsx\n<Waypoint onEnter={function(props) {\n    // here you can use `props.currentPosition`, `props.previousPosition`, and\n    // `props.event`\n  }}\n/>\n```\n\n## Offsets and Boundaries\n\nTwo of the Waypoint props are `topOffset` and `bottomOffset`. To appreciate\nwhat these can do for you, it will help to have an understanding of the\n\"boundaries\" used by this library. The boundaries of React Waypoint are the top\nand bottom of the element containing your scrollable content ([although this element\ncan be configured](#containing-elements-and-scrollableancestor)). When a\nwaypoint is within these boundaries, it is considered to be \"inside.\" When a\nwaypoint passes beyond these boundaries, then it is \"outside.\" The `onEnter` and\n`onLeave` props are called as an element transitions from being inside to\noutside, or vice versa.\n\nThe `topOffset` and `bottomOffset` properties can adjust the placement of these\nboundaries. By default, the offset is `'0px'`. If you specify a positive value,\nthen the boundaries will be pushed inward, toward the center of the page. If\nyou specify a negative value for an offset, then the boundary will be pushed\noutward from the center of the page.\n\nHere is an illustration of offsets and boundaries. The black box is the\n[`scrollableAncestor`](#containing-elements-and-scrollableancestor). The pink\nlines represent the location of the boundaries. The offsets that determine\nthe boundaries are in light pink.\n\n![](https://cloud.githubusercontent.com/assets/2322305/16939123/5be12454-4d33-11e6-86b6-ad431da93bf2.png)\n\n#### Horizontal Scrolling Offsets and Boundaries\n\nBy default, waypoints listen to vertical scrolling. If you want to switch to\nhorizontal scrolling instead, use the `horizontal` prop. For simplicity's sake,\nall other props and callbacks do not change. Instead, `topOffset` and\n`bottomOffset` (among other directional variables) will mean the offset from\nthe left and the offset from the right, respectively, and work exactly as they\ndid before, just calculated in the horizontal direction.\n\n#### Example Usage\n\nPositive values of the offset props are useful when you have an element that\noverlays your scrollable area. For instance, if your app has a `50px` fixed\nheader, then you may want to specify `topOffset='50px'`, so that the\n`onEnter` callback is called when waypoints scroll into view from beneath the\nheader.\n\nNegative values of the offset prop could be useful for lazy loading. Imagine if\nyou had a lot of large images on a long page, but you didn't want to load them\nall at once. You can use React Waypoint to receive a callback whenever an image\nis a certain distance from the bottom of the page. For instance, by specifying\n`bottomOffset='-200px'`, then your `onEnter` callback would be called when\nthe waypoint comes closer than 200 pixels from the bottom edge of the page. By\nplacing a waypoint near each image, you could dynamically load them.\n\nThere are likely many more use cases for the offsets: be creative! Also, keep in\nmind that there are _two_ boundaries, so there are always _two_ positions when\nthe `onLeave` and `onEnter` callback will be called. By using the arguments\npassed to the callbacks, you can determine whether the waypoint has crossed the\ntop boundary or the bottom boundary.\n\n## Children\n\nIf you don't pass a child into your Waypoint, then you can think of the\nwaypoint as a line across the page. Whenever that line crosses a\n[boundary](#offsets-and-boundaries), then the `onEnter` or `onLeave` callbacks\nwill be called.\n\nIf you do pass a child, it can be a single DOM component (e.g. `<div>`) or a\ncomposite component (e.g. `<MyComponent />`).\n\nWaypoint needs a DOM node to compute its boundaries. When you pass a DOM\ncomponent to Waypoint, it handles getting a reference to the DOM node through\nthe `ref` prop automatically.\n\nIf you pass a composite component, you can wrap it with `React.forwardRef` (requires `react@^16.3.0`)\nand have the `ref` prop being handled automatically for you, like this:\n\n```jsx\nclass Block extends React.Component {\n  render() {\n    return <div ref={this.props.innerRef}>Hello</div>\n  }\n}\n\nconst BlockWithRef = React.forwardRef((props, ref) => {\n  return <Block innerRef={ref} {...props} />\n})\n\nconst App = () => (\n  <Waypoint>\n    <BlockWithRef />\n  </Waypoint>\n)\n```\n\nIf you can't do that because you are using older version of React then\nyou need to make use of the `innerRef` prop passed by Waypoint to your component.\nSimply pass it through as the `ref` of a DOM component and you're all set. Like in\nthis example:\n\n```jsx\nclass Block extends React.Component {\n  render() {\n    return <div ref={this.props.innerRef}>Hello</div>\n  }\n}\nBlock.propTypes = {\n  innerRef: PropTypes.func.isRequired,\n}\n\nconst App = () => (\n  <Waypoint>\n    <Block />\n  </Waypoint>\n)\n```\n\nThe `onEnter` callback will be called when *any* part of the child is visible\nin the viewport. The `onLeave` callback will be called when *all* of the child\nhas exited the viewport.\n\n(Note that this is measured only on a single axis. What this means is that for a\nWaypoint within a vertically scrolling parent, it could be off of the screen\nhorizontally yet still fire an onEnter event, because it is within the vertical\nboundaries).\n\nDeciding whether to pass a child or not will depend on your use case. One\nexample of when passing a child is useful is for a scrollspy\n(like [Bootstrap's](https://bootstrapdocs.com/v3.3.6/docs/javascript/#scrollspy)).\nImagine if you want to fire a waypoint when a particularly long piece of content\nis visible onscreen. When the page loads, it is conceivable that both the top\nand bottom of this piece of content could lie outside of the boundaries,\nbecause the content is taller than the viewport. If you didn't pass a child,\nand instead put the waypoint above or below the content, then you will not\nreceive an `onEnter` callback (nor any other callback from this library).\nInstead, passing this long content as a child of the Waypoint would fire the `onEnter`\ncallback when the page loads.\n\n## Containing elements and `scrollableAncestor`\n\nReact Waypoint positions its [boundaries](#offsets-and-boundaries) based on the\nfirst scrollable ancestor of the Waypoint.\n\nIf that algorithm doesn't work for your use case, then you might find the\n`scrollableAncestor` prop useful. It allows you to specify what the scrollable\nancestor is. Pass a reference to a DOM node as that prop, and the Waypoint will\nuse the scroll position of *that* node, rather than its first scrollable\nancestor.\n\nThis can also be the string \"window\", which can be useful if you are using\nserver rendering.\n\n#### Example Usage\n\nSometimes, waypoints that are deeply nested in the DOM tree may need to track\nthe scroll position of the page as a whole. If you want to be sure that no other\nscrollable ancestor is used (since, once again, the first scrollable ancestor is\nwhat the library will use by default), then you can explicitly set the\n`scrollableAncestor` to be the `window` to ensure that no other element is used.\n\nThis might look something like:\n\n```jsx\n<Waypoint\n  scrollableAncestor={window}\n  onEnter={this._handleWaypointEnter}\n  onLeave={this._handleWaypointLeave}\n/>\n```\n\n## Troubleshooting\n\nIf your waypoint isn't working the way you expect it to, there are a few ways\nyou can debug your setup.\n\nOPTION 1: Add the `debug={true}` prop to your waypoint. When you do, you'll see console\nlogs informing you about the internals of the waypoint.\n\nOPTION 2: Clone and modify the project locally.\n- clone this repo\n- add `console.log` or breakpoints where you think it would be useful.\n- `npm link` in the react-waypoint repo.\n- `npm link react-waypoint` in your project.\n- if needed rebuild react-waypoint module: `npm run build-npm`\n\n## Limitations\n\nIn this component we make a few assumptions that we believe are generally safe,\nbut in some situations might present limitations.\n\n- We determine the scrollable-ness of a node by inspecting its computed\n  overflow-y or overflow property and nothing else. This could mean that a\n  container with this style that does not actually currently scroll will be\n  considered when performing visibility calculations.\n- We assume that waypoints are rendered within at most one scrollable container.\n  If you render a waypoint in multiple nested scrollable containers, the\n  visibility calculations will likely not be accurate.\n- We also base the visibility calculations on the scroll position of the\n  scrollable container (or `window` if no scrollable container is found). This\n  means that if your scrollable container has a height that is greater than the\n  window, it might trigger `onEnter` unexpectedly.\n\n## In the wild\n\n[Organizations and projects using `react-waypoint`](INTHEWILD.md).\n\n## Credits\n\nCredit to [trotzig][trotzig-github] and [lencioni][lencioni-github] for writing\nthis component, and [Brigade][brigade-home] for open sourcing it.\n\nThanks to the creator of the original Waypoints library,\n[imakewebthings][imakewebthings-github].\n\n[lencioni-github]: https://github.com/lencioni\n[trotzig-github]: https://github.com/trotzig\n[brigade-home]: https://www.brigade.com/\n[imakewebthings-github]: https://github.com/imakewebthings\n\n## License\n\n[MIT][mit-license]\n\n[mit-license]: ./LICENSE\n\n---\n\n_Make sure to check out other popular open-source tools from the\n[Brigade][civiccc-github] team: [dock], [overcommit], [haml-lint], and [scss-lint]._\n\n[civiccc-github]: https://github.com/civiccc\n[dock]: https://github.com/civiccc/dock\n[overcommit]: https://github.com/sds/overcommit\n[haml-lint]: https://github.com/sds/haml-lint\n[scss-lint]: https://github.com/sds/scss-lint\n"
        },
        {
          "name": "index.d.ts",
          "type": "blob",
          "size": 4.1259765625,
          "content": "import * as React from 'react';\n\nexport declare class Waypoint extends React.Component<Waypoint.WaypointProps, {}> {\n  static above: string;\n  static below: string;\n  static inside: string;\n  static invisible: string;\n}\n\ndeclare namespace Waypoint {\n    interface CallbackArgs {\n        /*\n         * The position that the waypoint has at the moment.\n         * One of Waypoint.below, Waypoint.above, Waypoint.inside, and Waypoint.invisible.\n         */\n        currentPosition: string;\n\n        /*\n         * The position that the waypoint had before.\n         * One of Waypoint.below, Waypoint.above, Waypoint.inside, and Waypoint.invisible.\n         */\n        previousPosition: string;\n\n        /*\n         * The native scroll event that triggered the callback.\n         * May be missing if the callback wasn't triggered as the result of a scroll\n         */\n        event?: Event;\n\n        /*\n         * The waypoint's distance to the top of the viewport.\n         */\n        waypointTop: number;\n\n        /*\n         * The distance from the scrollable ancestor to the viewport top.\n         */\n        viewportTop: number;\n\n        /*\n         * The distance from the bottom of the scrollable ancestor to the viewport top.\n         */\n        viewportBottom: number;\n    }\n\n    interface WaypointProps {\n        /**\n         * Function called when waypoint enters viewport\n         * @param {CallbackArgs} args\n         */\n        onEnter?: (args: CallbackArgs) => void;\n\n        /**\n         * Function called when waypoint leaves viewport\n         * @param {CallbackArgs} args\n         */\n        onLeave?: (args: CallbackArgs) => void;\n\n        /**\n         * Function called when waypoint position changes\n         * @param {CallbackArgs} args\n         */\n        onPositionChange?: (args: CallbackArgs) => void;\n\n        /**\n         * Whether to activate on horizontal scrolling instead of vertical\n         */\n        horizontal?: boolean;\n\n        /**\n         * `topOffset` can either be a number, in which case its a distance from the\n         * top of the container in pixels, or a string value. Valid string values are\n         * of the form \"20px\", which is parsed as pixels, or \"20%\", which is parsed\n         * as a percentage of the height of the containing element.\n         * For instance, if you pass \"-20%\", and the containing element is 100px tall,\n         * then the waypoint will be triggered when it has been scrolled 20px beyond\n         * the top of the containing element.\n         */\n        topOffset?: string|number;\n\n        /**\n         * `bottomOffset` can either be a number, in which case its a distance from the\n         * bottom of the container in pixels, or a string value. Valid string values are\n         * of the form \"20px\", which is parsed as pixels, or \"20%\", which is parsed\n         * as a percentage of the height of the containing element.\n         * For instance, if you pass \"20%\", and the containing element is 100px tall,\n         * then the waypoint will be triggered when it has been scrolled 20px beyond\n         * the bottom of the containing element.\n         * \n         * Similar to `topOffset`, but for the bottom of the container.\n         */\n        bottomOffset?: string|number;\n\n        /**\n         * A custom ancestor to determine if the target is visible in it.\n         * This is useful in cases where you do not want the immediate scrollable\n         * ancestor to be the container. For example, when your target is in a div\n         * that has overflow auto but you are detecting onEnter based on the window.\n         */\n        scrollableAncestor?: any;\n\n        /**\n         * If the onEnter/onLeave events are to be fired on rapid scrolling.\n         * This has no effect on onPositionChange -- it will fire anyway.\n         */\n        fireOnRapidScroll?: boolean;\n\n        /**\n         * Use this prop to get debug information in the console log. This slows\n         * things down significantly, so it should only be used during development.\n         */\n        debug?: boolean;\n      \n        /**\n         * Since React 18 Children are no longer implied, therefore we specify them here\n         */\n        children?: React.ReactNode;\n    }\n}\n"
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 0.0478515625,
          "content": "module.exports = {\n  testEnvironment: 'node',\n};\n"
        },
        {
          "name": "karma.conf.js",
          "type": "blob",
          "size": 2.0244140625,
          "content": "// Karma configuration\n\nmodule.exports = (config) => {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['jasmine'],\n\n    // list of files / patterns to load in the browser\n    files: [\n      'tests.webpack.js',\n    ],\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors:\n    // https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n      'tests.webpack.js': ['webpack'],\n    },\n\n    webpack: {\n      mode: 'development',\n      module: {\n        rules: [\n          {\n            test: /\\.jsx?$/,\n            exclude: /node_modules/,\n            use: {\n              loader: 'babel-loader',\n              options: {\n                cacheDirectory: true,\n              },\n            },\n          },\n        ],\n      },\n      resolve: {\n        extensions: ['.js', '.jsx', '.json'],\n      },\n    },\n\n    webpackMiddleware: {\n      noInfo: true,\n    },\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n    // web server port\n    port: 9876,\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR ||\n    // config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n    // enable / disable watching file and executing tests whenever any file\n    // changes\n    autoWatch: true,\n\n    // start these browsers\n    // available browser launchers:\n    // https://npmjs.org/browse/keyword/karma-launcher\n    browsers: process.env.CONTINUOUS_INTEGRATION === 'true'\n      ? ['Firefox'] : ['Chrome'],\n\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: true,\n  });\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.18359375,
          "content": "{\n  \"name\": \"react-waypoint\",\n  \"version\": \"10.3.0\",\n  \"description\": \"A React component to execute a function whenever you scroll to an element.\",\n  \"main\": \"cjs/index.js\",\n  \"module\": \"es/index.js\",\n  \"types\": \"index.d.ts\",\n  \"files\": [\n    \"cjs\",\n    \"es\",\n    \"index.d.ts\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/civiccc/react-waypoint.git\"\n  },\n  \"homepage\": \"https://github.com/civiccc/react-waypoint\",\n  \"bugs\": \"https://github.com/civiccc/react-waypoint/issues\",\n  \"scripts\": {\n    \"build\": \"npm run clean && rollup -c\",\n    \"check-changelog\": \"expr $(git status --porcelain 2>/dev/null| grep \\\"^\\\\s*M.*CHANGELOG.md\\\" | wc -l) >/dev/null || (echo 'Please edit CHANGELOG.md' && exit 1)\",\n    \"check-only-changelog-changed\": \"(expr $(git status --porcelain 2>/dev/null| grep -v \\\"CHANGELOG.md\\\" | wc -l) >/dev/null && echo 'Only CHANGELOG.md may have uncommitted changes' && exit 1) || exit 0\",\n    \"clean\": \"rimraf es cjs\",\n    \"lint\": \"eslint . --ext .js,.jsx\",\n    \"postversion\": \"git commit package.json CHANGELOG.md -m \\\"Version $npm_package_version\\\" && npm run tag && git push && git push --tags && npm publish\",\n    \"prepublish\": \"in-publish && safe-publish-latest && npm run build || not-in-publish\",\n    \"pretest\": \"npm run --silent lint\",\n    \"preversion\": \"npm run check-changelog && npm run check-only-changelog-changed\",\n    \"tag\": \"git tag v$npm_package_version\",\n    \"test\": \"npm run test:browser && npm run test:node\",\n    \"test:node\": \"jest 'test/node/.*.js'\",\n    \"test:browser\": \"karma start --single-run\",\n    \"test:browser:watch\": \"karma start --no-single-run\",\n    \"performance-test:watch\": \"webpack --watch --config webpack.config.performance-test.js\"\n  },\n  \"author\": \"Brigade Engineering\",\n  \"license\": \"MIT\",\n  \"peerDependencies\": {\n    \"react\": \"^15.3.0 || ^16.0.0 || ^17.0.0 || ^18.0.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.0.0\",\n    \"@babel/core\": \"^7.0.0\",\n    \"@rollup/plugin-babel\": \"^5.2.1\",\n    \"@types/react\": \"^16.14.5\",\n    \"babel-loader\": \"^8.0.0\",\n    \"babel-preset-airbnb\": \"^5.0.0\",\n    \"eslint\": \"^7.12.0\",\n    \"eslint-config-airbnb\": \"^18.2.0\",\n    \"eslint-plugin-import\": \"^2.22.0\",\n    \"eslint-plugin-jest\": \"^24.1.3\",\n    \"eslint-plugin-jsx-a11y\": \"^6.3.1\",\n    \"eslint-plugin-react\": \"^7.21.2\",\n    \"in-publish\": \"^2.0.0\",\n    \"jasmine-core\": \"^2.99.1\",\n    \"jest\": \"^26.6.3\",\n    \"karma\": \"^6.0.2\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"karma-cli\": \"^2.0.0\",\n    \"karma-firefox-launcher\": \"^2.1.0\",\n    \"karma-jasmine\": \"^1.1.2\",\n    \"karma-webpack\": \"^4.0.2\",\n    \"loose-envify\": \"^1.4.0\",\n    \"react\": \"^16.0.0 || ^17.0.0 || ^18.0.0\",\n    \"react-dom\": \"^16.0.0 || ^17.0.0 || ^18.0.0\",\n    \"react-test-renderer\": \"^16.0.0 || ^17.0.0 || ^18.0.0\",\n    \"rimraf\": \"^3.0.2\",\n    \"rollup\": \"^2.33.2\",\n    \"safe-publish-latest\": \"^1.1.1\",\n    \"webpack\": \"^4.46.0\",\n    \"webpack-cli\": \"^4.4.0\"\n  },\n  \"keywords\": [\n    \"react\",\n    \"component\",\n    \"react-component\",\n    \"scroll\",\n    \"onscroll\",\n    \"scrollspy\"\n  ],\n  \"dependencies\": {\n    \"@babel/runtime\": \"^7.12.5\",\n    \"consolidated-events\": \"^1.1.0 || ^2.0.0\",\n    \"prop-types\": \"^15.0.0\",\n    \"react-is\": \"^17.0.1 || ^18.0.0\"\n  },\n  \"browserify\": {\n    \"transform\": [\n      \"loose-envify\"\n    ]\n  }\n}\n"
        },
        {
          "name": "react-waypoint-demo.gif",
          "type": "blob",
          "size": 94.8251953125,
          "content": null
        },
        {
          "name": "rollup.config.js",
          "type": "blob",
          "size": 0.8271484375,
          "content": "import babel from '@rollup/plugin-babel';\nimport pkg from './package.json';\n\nconst depsSet = new Set([\n  ...Object.keys(pkg.dependencies),\n  ...Object.keys(pkg.devDependencies),\n]);\n\n/**\n * @param {'es' | 'cjs'} format\n */\nfunction makeBuild(format) {\n  return {\n    input: 'src/waypoint.jsx',\n\n    external: (id) => {\n      if (id.startsWith('.') || id.startsWith('/')) {\n        return false;\n      }\n\n      const packageName = id.startsWith('@')\n        ? id.split('/').slice(0, 2).join('/')\n        : id.split('/')[0];\n\n      return depsSet.has(packageName);\n    },\n\n    output: [{ file: format === 'es' ? pkg.module : pkg.main, format }],\n\n    plugins: [\n      babel({\n        babelHelpers: 'runtime',\n        envName: format,\n        exclude: ['node_modules/**'],\n      }),\n    ],\n  };\n}\n\nexport default [makeBuild('es'), makeBuild('cjs')];\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests.webpack.js",
          "type": "blob",
          "size": 0.103515625,
          "content": "const context = require.context('./test/browser', true, /_test\\.jsx?$/);\ncontext.keys().forEach(context);\n"
        },
        {
          "name": "webpack.config.performance-test.js",
          "type": "blob",
          "size": 0.6015625,
          "content": "const path = require('path');\n\n// This config file is used to create a webpack bundle that we use on\n// test/performance-test.html to profile the performance footprint of the\n// component.\nmodule.exports = {\n  mode: 'production',\n  entry: path.join(__dirname, 'test/performance-test.jsx'),\n  output: {\n    path: path.join(__dirname, 'build'),\n    filename: 'performance-test.js',\n  },\n  resolve: {\n    extensions: ['.js', '.jsx', '.json'],\n  },\n  devtool: 'source-map',\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?/,\n        exclude: /node_modules/,\n        loader: 'babel-loader',\n      },\n    ],\n  },\n};\n"
        }
      ]
    }
  ]
}