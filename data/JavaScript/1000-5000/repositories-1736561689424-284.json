{
  "metadata": {
    "timestamp": 1736561689424,
    "page": 284,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hybridgroup/cylon",
      "stars": 4208,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 1.099609375,
          "content": "env:\n  node: true\n\nglobals:\n  every: true\n  after: true\n  constantly: true\n\nrules:\n  camelcase: [2, {properties: \"always\"}]\n  comma-dangle: \"always-multiline\"\n  comma-spacing: [2, {before: false, after: true}]\n  comma-style: [2, \"last\"]\n  handle-callback-err: [2, \"^.*(e|E)rr\" ]\n  indent: [2, 2]\n  key-spacing: [2, { beforeColon: false, afterColon: true }]\n  max-depth: [1, 3]\n  max-len: [1, 80, 4]\n  max-nested-callbacks: [1, 3]\n  no-cond-assign: 2\n  no-constant-condition: 2\n  no-dupe-args: 2\n  no-dupe-keys: 2\n  no-else-return: 2\n  no-empty: 2\n  no-lonely-if: 2\n  no-multiple-empty-lines: 2\n  no-nested-ternary: 2\n  no-reserved-keys: 2\n  no-self-compare: 2\n  no-sync: 1\n  no-throw-literal: 2\n  no-underscore-dangle: 0\n  quote-props: [2, \"as-needed\"]\n  quotes: [2, \"double\", \"avoid-escape\"]\n  radix: 2\n  semi-spacing: [2, {before: false, after: true}]\n  semi: [2, \"always\"]\n  space-after-keywords: [2, \"always\"]\n  space-before-blocks: [2, \"always\"]\n  space-before-function-paren: [1, \"never\"]\n  space-in-parens: [2, \"never\"]\n  spaced-line-comment: [1, \"always\"]\n  strict: [2, \"global\"]\n  valid-jsdoc: 2\n  yoda: [2, \"never\"]\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "/node_modules/\nnpm-debug.log\n/coverage/\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.0283203125,
          "content": "/coverage/\n/examples/\n/spec/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3447265625,
          "content": "language: node_js\nsudo: false\nnode_js:\n  - '0.10'\n  - '0.12'\n  - '4'\n  - '5'\n  - '6'  \nbefore_install:\n  - \"mkdir -p ~/.npm\"\nbefore_script:\n  - npm install -g istanbul codeclimate-test-reporter\nscript:\n  - make ci\n  - CODECLIMATE_REPO_TOKEN=d3aad610220b6eaf4f51e38393c1b62586b1d68b898b42e418d9c2a8e0a7cb0d codeclimate-test-reporter < coverage/lcov.info\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.970703125,
          "content": "# Code of Conduct\n\nThis Code of Conduct is adapted from [Rust's wonderful\nCoC](http://www.rust-lang.org/conduct.html).\n\n* We are committed to providing a friendly, safe and welcoming\n  environment for all, regardless of gender, sexual orientation,\n  disability, ethnicity, religion, or similar personal characteristic.\n* Please avoid using overtly sexual nicknames or other nicknames that\n  might detract from a friendly, safe and welcoming environment for\n  all.\n* Please be kind and courteous. There's no need to be mean or rude.\n* Respect that people have differences of opinion and that every\n  design or implementation choice carries a trade-off and numerous\n  costs. There is seldom a right answer.\n* Please keep unstructured critique to a minimum. If you have solid\n  ideas you want to experiment with, make a fork and see how it works.\n* We will exclude you from interaction if you insult, demean or harass\n  anyone.  That is not welcome behaviour. We interpret the term\n  \"harassment\" as including the definition in the [Citizen Code of\n  Conduct](http://citizencodeofconduct.org/); if you have any lack of\n  clarity about what might be included in that concept, please read\n  their definition. In particular, we don't tolerate behavior that\n  excludes people in socially marginalized groups.\n* Private harassment is also unacceptable. No matter who you are, if\n  you feel you have been or are being harassed or made uncomfortable\n  by a community member, please contact one of the channel ops or any\n  of the TC members immediately with a capture (log, photo, email) of\n  the harassment if possible.  Whether you're a regular contributor or\n  a newcomer, we care about making this community a safe place for you\n  and we've got your back.\n* Likewise any spamming, trolling, flaming, baiting or other\n  attention-stealing behaviour is not welcome.\n* Avoid the use of personal pronouns in code comments or\n  documentation. There is no need to address persons when explaining\n  code (e.g. \"When the developer\")\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.759765625,
          "content": "# Contributing to Cylon.js\n\nThis document is based on the [Node.js contribution guidelines](https://github.com/nodejs/node/blob/master/CONTRIBUTING.md) thank you!\n\n## Code of Conduct\n\nThe Code of Conduct explains the *bare minimum* behavior\nexpectations the Cylon.js project requires of its contributors.\n[Please read it before participating.](./CODE_OF_CONDUCT.md)\n\n## Issue Contributions\n\nWhen opening new issues or commenting on existing issues on this repository\nplease make sure discussions are related to concrete technical issues with the\nCylon.js software.\n\n## Code Contributions\n\nThe Cylon.js project welcomes new contributors.\n\nThis document will guide you through the contribution process.\n\nWhat do you want to contribute?\n\n- I want to otherwise correct or improve the docs or examples\n- I want to report a bug\n- I want to add some feature or functionality to an existing hardware platform\n- I want to add support for a new hardware platform\n\nDescriptions for each of these will be provided below.\n\n## General Guidelines\n\n* All patches must be provided under the Apache 2.0 License\n* Please use the -s option in git to \"sign off\" that the commit is your work and you are providing it under the Apache 2.0 License\n* Submit a Github Pull Request to the appropriate branch and ideally discuss the changes with us in IRC.\n* We will look at the patch, test it out, and give you feedback.\n* Avoid doing minor whitespace changes, renamings, etc. along with merged content. These will be done by the maintainers from time to time but they can complicate merges and should be done seperately.\n* Take care to maintain the existing coding style.\n* Add unit tests for any new or changed functionality & lint and test your code using `make test` and `make lint`.\n* All pull requests should be \"fast forward\"\n  * If there are commits after yours use `git rebase -i <new_head_branch>`\n  * If you have local changes you may need to use `git stash`\n  * For git help see [progit](http://git-scm.com/book) which is an awesome (and free) book on git\n\n## Developer's Certificate of Origin 1.0\n\nBy making a contribution to this project, I certify that:\n\n* (a) The contribution was created in whole or in part by me and I\n  have the right to submit it under the open source license indicated\n  in the file; or\n* (b) The contribution is based upon previous work that, to the best\n  of my knowledge, is covered under an appropriate open source license\n  and I have the right under that license to submit that work with\n  modifications, whether created in whole or in part by me, under the\n  same open source license (unless I am permitted to submit under a\n  different license), as indicated in the file; or\n* (c) The contribution was provided directly to me by some other\n  person who certified (a), (b) or (c) and I have not modified it.\n"
        },
        {
          "name": "CONTRIBUTORS.markdown",
          "type": "blob",
          "size": 3.931640625,
          "content": "# Contributors\n\nCylon.js exists thanks to the efforts of the following hardworking humans who have worked on the core, adaptors, drivers, or documentation:\n\n- Aaron Blondeau ([@aaronblondeau](https://github.com/aaronblondeau))\n- Quincy Acklen ([@acklenx](https://github.com/acklenx))\n- Adam Hunter ([@adamrhunter](https://github.com/adamrhunter))\n- Andrew Nesbitt ([@andrew](https://github.com/andrew))\n- Avner Cohen ([@AvnerCohen](https://github.com/AvnerCohen))\n- Michał ([@bartmichu](https://github.com/bartmichu))\n- Ben Evans ([@bencevans](https://github.com/bencevans))\n- Brad Midgley ([@bmidgley](https://github.com/bmidgley))\n- Sebastián González ([@brutalchrist](https://github.com/brutalchrist))\n- Caleb Oller ([@caleboller](https://github.com/caleboller))\n- Chris Boette ([@chrisbodhi](https://github.com/chrisbodhi))\n- Christian Porzig ([@chrisfp](https://github.com/chrisfp))\n- Chris Mattheiu ([@chrismatthieu](https://github.com/chrismatthieu))\n- Chris Taylor ([@ChrisTheBaron](https://github.com/ChrisTheBaron))\n- Daniel Portales ([@daetherius](https://github.com/daetherius))\n- Daniel Lamb ([@daniellmb](https://github.com/daniellmb))\n- Ron Evans ([@deadprogram](https://github.com/deadprogram))\n- Derrell Lipman ([@derrell](https://github.com/derrell))\n- Daniel Fischer ([@dfischer](https://github.com/dfischer))\n- Edgar Silva ([@edgarSilva](https://github.com/edgarSilva))\n- Eric Terpstra ([@ericterpstra](https://github.com/ericterpstra))\n- Evoliofly ([@Evoliofly](https://github.com/Evoliofly))\n- Fábio Franco Uechi ([@fabito](https://github.com/fabito))\n- Felix Sanz ([@felixsanz](https://github.com/felixsanz))\n- gorhgorh ([@gorhgorh](https://github.com/gorhgorh))\n- Guillaume normand ([@gui2laume](https://github.com/gui2laume))\n- Theron Boerner ([@hunterboerner](https://github.com/hunterboerner))\n- James Brown ([@ibjhb](https://github.com/ibjhb))\n- Yogi ([@iyogeshjoshi](https://github.com/iyogeshjoshi))\n- Janaka Abeywardhana ([@janaka](https://github.com/janaka))\n- Jay Wengrow ([@jaywengrow](https://github.com/jaywengrow))\n- Jason Sewell ([@jaywon](https://github.com/jaywon))\n- Jarrod Ribble ([@jribble](https://github.com/jribble))\n- Jason Solis ([@jsolis](https://github.com/jsolis))\n- Julian Cheal ([@juliancheal](https://github.com/juliancheal))\n- Justin Zemlyansky ([@JustInDevelopment](https://github.com/JustInDevelopment))\n- Justin Smith ([@justinisamaker](https://github.com/justinisamaker))\n- Philippe Charrière ([@k33g](https://github.com/k33g))\n- Kraig Walker ([@KraigWalker](https://github.com/KraigWalker))\n- Loren West ([@lorenwest](https://github.com/lorenwest))\n- Luis Godinez ([@luisgodinez](https://github.com/luisgodinez))\n- Mario \"Kuroir\" Ricalde ([@MarioRicalde](https://github.com/MarioRicalde))\n- Matheus Mariano ([@matheusmariano](https://github.com/matheusmariano))\n- Michael Smith ([@michaelshmitty](https://github.com/michaelshmitty))\n- Morten Høybye Frederiksen ([@mortenf](https://github.com/mortenf))\n- Guido García ([@palmerabollo](https://github.com/palmerabollo))\n- Peter deHaan ([@pdehaan](https://github.com/pdehaan))\n- peterainbow ([@peterainbow](https://github.com/peterainbow))\n- Rafael Magaña ([@rafmagana](https://github.com/rafmagana))\n- Reid Carlberg ([@ReidCarlberg](https://github.com/ReidCarlberg))\n- Sarah Hui ([@sehsarah](https://github.com/sehsarah))\n- Mike Skalnik ([@skalnik](https://github.com/skalnik))\n- Javier Cervantes ([@solojavier](https://github.com/solojavier))\n- SonicRadish ([@sonicradish](https://github.com/sonicradish))\n- Andrew Stewart ([@stewart](https://github.com/stewart))\n- Tomasz Szymanski ([@szimano](https://github.com/szimano))\n- Wojciech Erbetowski ([@wojtekerbetowski](https://github.com/wojtekerbetowski))\n- Gize Bonilla ([@XixeBombilla](https://github.com/XixeBombilla))\n- Jasson Qasqant ([@yeco](https://github.com/yeco))\n- Nathan Zankich ([@zankavrogin](https://github.com/zankavrogin))\n- Adrian Zankich ([@zankich](https://github.com/zankich))\n\nThank you!\n\nPlease join us, we'd love your contribution too.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.5517578125,
          "content": "Copyright (c) 2013-2016 The Hybrid Group\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.666015625,
          "content": "BIN := ./node_modules/.bin\nTEST_FILES := spec/helper.js $(shell find spec/lib -type f -name \"*.js\")\n\nVERSION := $(shell node -e \"console.log(require('./package.json').version)\")\n\n.PHONY: default cover test bdd lint ci release\n\ndefault: lint test\n\ntest:\n\t@$(BIN)/mocha --colors -R dot $(TEST_FILES)\n\nbdd:\n\t@$(BIN)/mocha --colors -R spec $(TEST_FILES)\n\ncover:\n\t@istanbul cover $(BIN)/_mocha $(TEST_FILES) --report lcovonly -- -R spec\n\nlint:\n\t@$(BIN)/eslint lib spec examples\n\nci: lint cover\n\nrelease: lint test\n\t@git push origin master\n\t@git checkout release ; git merge master ; git push ; git checkout master\n\t@git tag -m \"$(VERSION)\" v$(VERSION)\n\t@git push --tags\n\t@npm publish ./\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 15.5869140625,
          "content": "[![Cylon.js](http://i.imgur.com/U3paNhR.png)](http://cylonjs.com)\n\nCylon.js is a JavaScript framework for robotics, physical computing, and the Internet of Things (IoT).\n\nIt provides a simple, but powerful way to create solutions that incorporate\nmultiple, different hardware devices concurrently.\n\nWant to use Node.js for robots, drones, and IoT devices? You are in the right place.\n\nWant to use Ruby on robots? Check out our sister project, [Artoo][].\n\nWant to use Golang to power your robots? Check out our sister project,\n[Gobot][].\n\n[Artoo]: http://artoo.io\n[Gobot]: http://gobot.io\n\n## Build Status:\n\n[![Build Status](https://secure.travis-ci.org/hybridgroup/cylon.png?branch=master)](http://travis-ci.org/hybridgroup/cylon) [![Code Climate](https://codeclimate.com/github/hybridgroup/cylon.png)](https://codeclimate.com/github/hybridgroup/cylon) [![Code Climate](https://codeclimate.com/github/hybridgroup/cylon/coverage.png)](https://codeclimate.com/github/hybridgroup/cylon)\n\n## Getting Started\n\n### Installation\n\nAll you need to get started on a new robot is the `cylon` module:\n\n    npm install cylon\n\nWith the core module installed, now install the modules for whatever hardware\nsupport you need. For the Arduino + LED blink example, we'll need the `firmata`, `gpio`, and `i2c` modules:\n\n    npm install cylon-firmata cylon-gpio cylon-i2c\n\n## Examples\n\n### Arduino + LED\n\nThe below example connects to an Arduino over a serial connection, and blinks an\nLED once per second.\n\nThe example requires that the Arduino have the Firmata sketch installed; which\ncan be obtained either through the Ardunio IDE or the `gort arduino upload\nfirmata` command available in [gort](http://gort.io).\n\n```javascript\nvar Cylon = require('cylon');\n\n// define the robot\nvar robot = Cylon.robot({\n  // change the port to the correct one for your Arduino\n  connections: {\n    arduino: { adaptor: 'firmata', port: '/dev/ttyACM0' }\n  },\n\n  devices: {\n    led: { driver: 'led', pin: 13 }\n  },\n\n  work: function(my) {\n    every((1).second(), my.led.toggle);\n  }\n});\n\n// connect to the Arduino and start working\nrobot.start();\n```\n\n### Parrot ARDrone 2.0\n\n```javascript\nvar Cylon = require('cylon');\n\nCylon.robot({\n  connections: {\n    ardrone: { adaptor: 'ardrone', port: '192.168.1.1' }\n  },\n\n  devices: {\n    drone: { driver: 'ardrone' }\n  },\n\n  work: function(my) {\n    my.drone.takeoff();\n\n    after((10).seconds(), my.drone.land);\n    after((15).seconds(), my.drone.stop);\n  }\n}).start();\n```\n\n### Cat Toy (Leap Motion + Digispark + Servos)\n\n```javascript\nvar Cylon = require('cylon');\n\nCylon.robot({\n  connections: {\n    digispark: { adaptor: 'digispark' },\n    leapmotion: { adaptor: 'leapmotion' }\n  },\n\n  devices: {\n    servo1: { driver: 'servo', pin: 0, connection: 'digispark' },\n    servo2: { driver: 'servo', pin: 1, connection: 'digispark' },\n    leapmotion: { driver: 'leapmotion', connection: 'leapmotion' }\n  },\n\n  work: function(my) {\n    my.x = 90;\n    my.z = 90;\n\n    my.leapmotion.on('hand', function(hand) {\n      my.x = hand.palmX.fromScale(-300, 300).toScale(30, 150);\n      my.z = hand.palmZ.fromScale(-300, 300).toScale(30, 150);\n    });\n\n    every(100, function() {\n      my.servo1.angle(my.x);\n      my.servo2.angle(my.z);\n\n      console.log(my.servo1.currentAngle() + \", \" + my.servo2.currentAngle());\n    });\n  }\n}).start();\n```\n\n### Multiple Spheros + HTTP API Plugin\n\nTo use the HTTP API plugin, first install it's NPM module:\n\n    $ npm install cylon-api-http\n\nThen it can be used in scripts:\n\n```javascript\nvar Cylon = require('cylon');\n\n// tell the HTTP API plugin to listen for requests at https://localhost:4000\nCylon.api(\"http\", { port: 4000 });\n\nvar bots = [\n  { port: '/dev/rfcomm0', name: 'Thelma' },\n  { port: '/dev/rfcomm1', name: 'Louise' }\n];\n\nbots.forEach(function(bot) {\n  Cylon.robot({\n    name: bot.name,\n\n    connections: {\n      sphero: { adaptor: \"sphero\", port: bot.port }\n    },\n\n    devices: {\n      sphero: { driver: \"sphero\" }\n    },\n\n    work: function(my) {\n      every((1).second(), function() {\n        console.log(my.name);\n        my.sphero.setRandomColor();\n        my.sphero.roll(60, Math.floor(Math.random() * 360));\n      });\n    }\n  });\n});\n\n// start up all robots at once\nCylon.start();\n```\n\n## Fluent Syntax\n\nFor those more familiar with jQuery, D3, or other fluent-style JavaScript\nlibraries, Cylon.JS also supports a chainable syntax:\n\n\n```javascript\nvar Cylon = require('cylon');\n\nCylon\n  .robot()\n  .connection('arduino', { adaptor: 'firmata', port: '/dev/ttyACM0' })\n  .device('led', { driver: 'led', pin: 13 })\n  .on('ready', function(bot) {\n    setInterval(function() {\n      bot.led.toggle();\n    }, 1000);\n  });\n\nCylon.start();\n```\n\n## Hardware Support\n\nCylon.js has an extensible syntax for connecting to multiple, different hardware\ndevices. The following 36 platforms are currently supported:\n\nPlatform  | Support\n--------  | -------\n[ARDrone](http://ardrone2.parrot.com/)                                                                | [cylon-ardrone](https://github.com/hybridgroup/cylon-ardrone)\n[Arduino](http://www.arduino.cc/)                                                                     | [cylon-firmata](https://github.com/hybridgroup/cylon-firmata)\n[Arduino YUN](http://arduino.cc/en/Main/ArduinoBoardYun?from=Products.ArduinoYUN)                     | [cylon-firmata](https://github.com/hybridgroup/cylon-firmata)\n[AT&T M2X](https://m2x.att.com)                                                                       | [cylon-m2x](https://github.com/hybridgroup/cylon-m2x)\nAudio                                                                                                 | [cylon-audio](https://github.com/hybridgroup/cylon-audio)\n[Beaglebone Black](http://beagleboard.org/Products/BeagleBone+Black/)                                 | [cylon-beaglebone](https://github.com/hybridgroup/cylon-beaglebone)\n[Bebop](http://www.parrot.com/products/bebop-drone/)                                                  | [cylon-bebop](https://github.com/hybridgroup/cylon-bebop)\n[Bluetooth LE](http://en.wikipedia.org/wiki/Bluetooth_low_energy)                                     | [cylon-ble](https://github.com/hybridgroup/cylon-ble)\n[Crazyflie](http://www.bitcraze.se/)                                                                  | [cylon-crazyflie](https://github.com/hybridgroup/cylon-crazyflie)\n[Digispark](http://digistump.com/products/1)                                                          | [cylon-digispark](https://github.com/hybridgroup/cylon-digispark)\n[Electric Imp](https://electricimp.com/product/)                                                      | [cylon-imp](https://github.com/hybridgroup/cylon-imp)\n[Intel Edison](http://www.intel.com/content/www/us/en/do-it-yourself/edison.html)                     | [cylon-intel-iot](https://github.com/hybridgroup/cylon-intel-iot)\n[Intel Galileo](http://www.intel.com/content/www/us/en/do-it-yourself/galileo-maker-quark-board.html) | [cylon-intel-iot](https://github.com/hybridgroup/cylon-intel-iot)\n[Intel IoT Analytics](https://software.intel.com/en-us/intel-iot-developer-kit-cloud-based-analytics-user-guide) | [cylon-intel-iot-analytics](https://github.com/hybridgroup/cylon-intel-iot-analytics)\n[Joystick](http://en.wikipedia.org/wiki/Joystick)                                                     | [cylon-joystick](https://github.com/hybridgroup/cylon-joystick)\n[Keyboard](http://en.wikipedia.org/wiki/Computer_keyboard)                                            | [cylon-keyboard](https://github.com/hybridgroup/cylon-keyboard)\n[Leap Motion](https://www.leapmotion.com/)                                                            | [cylon-leapmotion](https://github.com/hybridgroup/cylon-leapmotion)\n[MiP](http://www.wowwee.com/mip/)                                                                     | [cylon-mip](https://github.com/hybridgroup/cylon-mip)\n[MQTT](http://mqtt.org/)                                                                              | [cylon-mqtt](https://github.com/hybridgroup/cylon-mqtt)\n[Nest](http://nest.com/)                                                                              | [cylon-nest](https://github.com/hybridgroup/cylon-nest)\n[Neurosky](http://store.neurosky.com/products/mindwave-mobile)                                        | [cylon-neurosky](https://github.com/hybridgroup/cylon-neurosky)\n[OpenCV](http://opencv.org/)                                                                          | [cylon-opencv](https://github.com/hybridgroup/cylon-opencv)\n[Phillips Hue](http://www2.meethue.com/)                                                              | [cylon-hue](https://github.com/hybridgroup/cylon-hue)\n[Pebble](http://www.getpebble.com/)                                                                   | [cylon-pebble](https://github.com/hybridgroup/cylon-pebble)\n[Pinoccio](https://pinocc.io)                                                                         | [cylon-pinoccio](https://github.com/hybridgroup/cylon-pinoccio)\n[PowerUp 3.0](http://www.poweruptoys.com/products/powerup-v3)                                         | [cylon-powerup](https://github.com/hybridgroup/cylon-powerup)\n[Rapiro](http://www.rapiro.com/)                                                                      | [cylon-rapiro](https://github.com/hybridgroup/cylon-rapiro)\n[Raspberry Pi](http://www.raspberrypi.org/)                                                           | [cylon-raspi](https://github.com/hybridgroup/cylon-raspi)\n[Salesforce](http://www.force.com/)                                                                   | [cylon-force](https://github.com/hybridgroup/cylon-force)\n[Skynet](http://skynet.im/)                                                                           | [cylon-skynet](https://github.com/hybridgroup/cylon-skynet)\n[Spark](http://www.spark.io/)                                                                         | [cylon-spark](https://github.com/hybridgroup/cylon-spark)\nSpeech                                                                                                | [cylon-speech](https://github.com/hybridgroup/cylon-speech)\n[Sphero](http://www.gosphero.com/)                                                                    | [cylon-sphero](https://github.com/hybridgroup/cylon-sphero)\n[Sphero BLE](http://sphero.com/bb8)                                                                    | [cylon-sphero-ble](https://github.com/hybridgroup/cylon-sphero-ble)\n[Tessel](https://tessel.io/)                                                                          | [cylon-tessel](https://github.com/hybridgroup/cylon-tessel)\n[WICED Sense](http://www.broadcom.com/products/wiced/sense/)                                          | [cylon-wiced-sense](https://github.com/hybridgroup/cylon-wiced-sense)\n\nOur implementation of GPIO (General Purpose Input/Output) allows for a shared\nset of drivers supporting 14 different devices:\n\n- [GPIO](https://en.wikipedia.org/wiki/General_Purpose_Input/Output) <=> [Drivers](https://github.com/hybridgroup/cylon-gpio)\n  - Analog Sensor\n  - Button\n  - Continuous Servo\n  - Direct Pin\n  - IR Range Sensor\n  - LED\n  - Makey Button (high-resistance button like the [MakeyMakey](http://www.makeymakey.com/))\n  - Maxbotix Ultrasonic Range Finder\n  - Motor\n  - Relay\n  - RGB LED\n  - Servo\n  - Temperature Sensor\n  - TP401 Gas Sensor\n\nWe also support 14 different I2C (Inter-Integrated Circuit) devices\nthrough a shared `cylon-i2c` module:\n\n- [I2C](https://en.wikipedia.org/wiki/I%C2%B2C) <=> [Drivers](https://github.com/hybridgroup/cylon-i2c)\n  - BlinkM RGB LED\n  - BMP180 Barometric Pressure + Temperature sensor\n  - Direct I2C\n  - HMC6352 Digital Compass\n  - JHD1313M1 LCD with RGB Backlight  \n  - LCD\n  - LIDAR-Lite\n  - LSM9DS0G 9 Degrees of Freedom IMU\n  - LSM9DS0XM 9 Degrees of Freedom IMU\n  - MAG3110 3-Axis Digital Magnetometer\n  - MPL115A2 Digital Barometer & Thermometer\n  - MPU6050 Triple Axis Accelerometer and Gyro\n  - PCA9544a 4-Channel I2C Mux\n  - PCA9685 16-Channel 12-bit PWM/Servo Driver\n\nIn addition to our officially supported platforms, we have the following 8 user contributed platforms:\n\nPlatform  | Support\n--------  | -------\n[APC UPS](http://www.apcupsd.org/) | [cylon-apcupsd](https://github.com/afoninsky/cylon-apcupsd)\n[iBeacon](https://developer.apple.com/ibeacon/)                                   | [cylon-beacon](https://github.com/juliancheal/cylon-beacon)\n[Myo](https://www.myo.com/) | [cylon-myo](https://github.com/adaemi/cylon-myo)\n[One-Wire](https://en.wikipedia.org/wiki/1-Wire) | [cylon-one-wire](https://github.com/rkelly92/cylon-one-wire)\n[Parrot Rolling Spider](http://www.parrot.com/usa/products/rolling-spider/)       | [cylon-rolling-spider](https://github.com/ChrisTheBaron/cylon-rolling-spider)\n[PCDuino](http://www.pcduino.com/)                                                | [cylon-pcduino](https://github.com/alexwang2013/cylon-pcduino)\n[Telegram](https://telegram.org/) | [cylon-telegram](https://github.com/afoninsky/cylon-telegram)\n[WeMo](http://www.belkin.com/us/Products/home-automation/c/wemo-home-automation/) | [cylon-wemo](https://github.com/ChrisTheBaron/cylon-wemo)\n\nWe'll also have many more platforms and drivers coming soon, [follow us on Twitter][Twitter] for updates.\n\n[Twitter]: https://twitter.com/cylonjs\n\n## Browser & Mobile Support\n\nCylon.js can be run directly in-browser, using the `browserify` NPM module.\nYou can also run it from withing a Chrome connected app, or a PhoneGap mobile app.\n\nFor more info on browser support, and for help with different configurations, you can find more info [in our docs](https://cylonjs.com/documentation/guides/browser-support/).\n\n## API Plugins\n\nCylon.js has support for different API plugins that can be used to interact with your robots remotely.\nAt this time we have support for [http/https](https://github.com/hybridgroup/cylon-api-http), [mqtt](https://github.com/hybridgroup/cylon-api-mqtt), and [socket.io](https://github.com/hybridgroup/cylon-api-socketio) with more coming in the near future.\n\nTo use an API plugin, install it alongside Cylon:\n\n    $ npm install cylon-api-http cylon-api-socketio\n\nThen, all you need to do is call `Cylon#api` in your robot's script:\n\n```javascript\nvar Cylon = require(\"cylon\");\n\n// For http\nCylon.api('http');\n\n// Or for Socket.io\nCylon.api('socketio');\n```\n\nThen visit `https://localhost:3000/` and you are ready to control your robots from a web browser!\n\n<img src=\"http://cylonjs.com/images/screenshots/robeaux.jpg\" style=\"margin-top: 15px; width: 100%\">\n\nYou can check out more information on the Cylon API in the docs [here](http://cylonjs.com/documentation/guides/api).\n\n## CLI\n\nCylon uses the Gort [http://gort.io](http://gort.io) Command Line Interface (CLI) so you can access important features right from the command line. We call it \"RobotOps\", aka \"DevOps For Robotics\". You can scan, connect, update device firmware, and more!\n\nCylon also has its own CLI to generate new robots, adaptors, and drivers. You can check it out at [https://github.com/hybridgroup/cylon-cli](https://github.com/hybridgroup/cylon-cli).\n\n## Documentation\n\nWe're busy adding documentation to our website, check it out at [cylonjs.com/documentation][docs].\n\nIf you want to help with documentation, you can find the code for our website at on the [https://github.com/hybridgroup/cylon-site](https://github.com/hybridgroup/cylon-site).\n\n[docs]: http://cylonjs.com/documentation\n[docs site]: https://github.com/hybridgroup/cylon-site\n\n## Contributing\n\nFor our contribution guidelines, please go to [CONTRIBUTING.md](https://github.com/hybridgroup/cylon/blob/master/CONTRIBUTING.md).\n\n## Release History\n\nFor the release history, please go to [RELEASES.md](https://github.com/hybridgroup/cylon/blob/master/RELEASES.md).\n\n## License\n\nCopyright (c) 2013-2016 The Hybrid Group. Licensed under the Apache 2.0 license.\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 2.671875,
          "content": "## Release History\n\nVersion | Notes\n------- | -----\n1.3.0   | Smarter module loading rules, adaptor alias \n1.2.0   | Dynamic connections & devices, more time helpers, simplified logging\n1.1.0   | Clean ups, refactorings, misc. bug fixes.\n1.0.0   | Remove deprecated Device and Connection syntax, add Basestar#respond method\n0.22.2  | Bug-fix for Registry loader\n0.22.1  | Remove lodash, misc. bug fixes\n0.22.0  | API extraction, new devices syntax.\n0.21.2  | Update Robeaux version\n0.21.1  | Add back debug logging for starting/connecting devices/connections\n0.21.0  | Remove Connection/Device objects, update Robot connection/device syntax, fluent syntax updates\n0.20.2  | Correct API issues, possible issue with test setups\n0.20.1  | Revert accidental scrict handling of param in driver initializer\n0.20.0  | Browser support, new module loading, log level support, misc. development changes\n0.19.1  | Correct issue with dynamic method proxying\n0.19.0  | Fluent syntax, improved start/halt, various other updates\n0.18.0  | Updates Robot and Driver commands structure\n0.17.0  | Updates to API to match CPPP-IO spec\n0.16.0  | New IO Utils, removal of Utils#bind, add Adaptor#_noop method.\n0.15.1  | Fixed issue with the API on Tessel\n0.15.0  | Better halting, cleaner startup, removed 'connect' and 'start' events, and misc other cleanups/refactors.\n0.14.0  | Removal of node-namespace and misc. cleanup\n0.13.3  | Fixes bug with disconnect functions not being called.\n0.13.2  | Use pure Express, adds server-sent-events, upd API.\n0.13.1  | Add API authentication and HTTPS support\n0.13.0  | Set minimum Node version to 0.10.20, add utils to global namespace and improve initialization routines\n0.12.0  | Extraction of CLI tooling\n0.11.2  | bugfixes\n0.11.0  | Refactor into pure JavaScript\n0.10.4  | Add JS helper functions\n0.10.3  | Fix dependency issue\n0.10.2  | Create connections convenience vars, refactor config loading\n0.10.1  | Updates required for test driven robotics, update Robeaux version, bugfixes\n0.10.0  | Use Robeaux UX, add CLI commands for helping connect to devices, bugfixes\n0.9.0   | Add AngularJS web interface to API, extensible commands for CLI\n0.8.0   | Refactored Adaptor and Driver into proper base classes for easier authoring of new modules\n0.7.0   | cylon command for generating new adaptors, support code for better GPIO support, literate examples\n0.6.0   | API exposes robot commands, fixes issues in driver/adaptor init\n0.5.0   | Improve API, add GPIO support for reuse in adaptors\n0.4.0   | Refactor proxy in Cylon.Basestar, improve API\n0.3.0   | Improved Cylon.Basestar, and added API\n0.2.0   | Cylon.Basestar to help develop external adaptors/drivers\n0.1.0   | Initial release for ongoing development\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.7998046875,
          "content": "\"use strict\";\n\nvar MCP = require(\"./lib/mcp\");\n\nmodule.exports = {\n  MCP: require(\"./lib/mcp\"),\n\n  Robot: require(\"./lib/robot\"),\n\n  Driver: require(\"./lib/driver\"),\n  Adaptor: require(\"./lib/adaptor\"),\n\n  Utils: require(\"./lib/utils\"),\n  Logger: require(\"./lib/logger\"),\n\n  IO: {\n    DigitalPin: require(\"./lib/io/digital-pin\"),\n    Utils: require(\"./lib/io/utils\")\n  },\n\n  robot: MCP.create,\n  api: require(\"./lib/api\").create,\n  config: require(\"./lib/config\").update,\n\n  start: MCP.start,\n  halt: MCP.halt\n};\n\nprocess.on(\"SIGINT\", function() {\n  MCP.halt(process.kill.bind(process, process.pid));\n});\n\nif (process.platform === \"win32\") {\n  var io = { input: process.stdin, output: process.stdout },\n      quit = process.emit.bind(process, \"SIGINT\");\n\n  require(\"readline\").createInterface(io).on(\"SIGINT\", quit);\n}\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.0068359375,
          "content": "{\n  \"name\": \"cylon\",\n  \"version\": \"1.3.0\",\n  \"description\": \"JavaScript framework for robotics, drones, and the Internet of Things (IoT) using Node.js\",\n  \"homepage\": \"http://cylonjs.com\",\n  \"bugs\": \"https://github.com/hybridgroup/cylon/issues\",\n\n  \"author\": \"The Hybrid Group <cylonjs@hybridgroup.com>\",\n\n  \"contributors\": [\n    \"Contributors List (https://github.com/hybridgroup/cylon/blob/master/CONTRIBUTORS.markdown)\"\n  ],\n\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/hybridgroup/cylon\"\n  },\n\n  \"license\": \"Apache-2.0\",\n\n  \"keywords\": [\n    \"cylon\",\n    \"cylonjs\",\n    \"cylons\",\n    \"robot\",\n    \"robots\",\n    \"robotics\",\n    \"iot\",\n    \"hardware\",\n    \"drones\",\n    \"internet of things\"\n  ],\n\n  \"hardware\": {\n    \"*\": false,\n    \"./\": false,\n    \"./lib\": true,\n    \"index.js\": true\n  },\n\n  \"engines\" : {\n    \"node\" : \">= 0.10.20\"\n  },\n\n  \"devDependencies\": {\n    \"sinon-chai\": \"2.7.0\",\n    \"chai\":       \"2.2.0\",\n    \"mocha\":      \"2.2.4\",\n    \"sinon\":      \"1.14.1\",\n    \"eslint\":     \"0.22.1\"\n  }\n}\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}