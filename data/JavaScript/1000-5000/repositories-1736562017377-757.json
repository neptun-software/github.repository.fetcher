{
  "metadata": {
    "timestamp": 1736562017377,
    "page": 757,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "deepsyx/home-automation",
      "stars": 3366,
      "defaultBranch": "master",
      "files": [
        {
          "name": "Intro.png",
          "type": "blob",
          "size": 921.779296875,
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) 2017 Viktor Kirilov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.MD",
          "type": "blob",
          "size": 3.1123046875,
          "content": "# Home Automation with RPi and Javascript\n\n*Updated article: https://viktorkirilov.me/post/home-automation-raspberry-pi/* \n\n![Intro](https://raw.githubusercontent.com/deepsyx/home-automation/master/Intro.png)\n\nLink to video\n=======\n\nhttps://youtu.be/wh0OoLUTeM8\n\n[![Alt text](http://i.imgur.com/7ZGu5tX.png)](https://youtu.be/wh0OoLUTeM8)\n\nIntroduction\n=======\nSince a kid I've been passionate about electronic and different kind of mechanisms. Previously I've done different small projects with arduino, like handbrake for my gaming steering wheel, custom LED tachometer for my car (see my github repo), voice controlled LEDs and so on. Recently I bought Raspberry PI 3 and around all the IoT hype, I decided to start automating my home.\n\nThe Technology Stack\n=======\nSince I'm pretty familiar with javascript and its ecosystem I decided to create my own phone app via `react native` and connect it via `websockets` to `NodeJS` backend. I'm using ImmutableJS's Records for consistency of the data structure and the performance of the app. The data is sent between the client and the server via JSON strings, which are converted to  back to Immutable records, when received on both sides. I've separated the shared modules(between client and server) to a separate local npm packages - home-records and home-config. For GPIO controlling (pins of the raspberry) I've used `pi-blaster` library, together with `wiringPi`. Since I couldn't find codes for my AC, I've recorded them by myself and added them to `lirc` config file. `Duckdns` cron is used as dynamic dns, because my IP address changes periodically and I won't have to recompile the whole app or change config each time. The server broadcasts the changes to all connected users realtime. The phone app is located in **/phone-app** folder, the server is located in **/server**. Why don't you take a look?\n\nThe Hardware\n=======\n`Raspberry Pi 3` is the controlling unit. High-power devices, such as LED strips, are powered via external [`12V 5A power supply`](http://img.dxcdn.com/productimages/sku_152373_2.jpg) (shared ground with the PI). The AC is controlled via 950nm infrared LED. The heating system is wired via [relay](http://img.dxcdn.com/productimages/sku_121354_2.jpg) (on and off) and [servo](https://cdn.instructables.com/FCM/8DKT/IBXMML6A/FCM8DKTIBXMML6A.MEDIUM.jpg) for the thermostat as I was avoid disassembling. Both [white LED strip](http://www.saving-star.com/wp-content/uploads/2015/08/Flexible-Top-LED-Strips-FL-F5060W15F12-12-.jpg) and [the RGB strip](http://www.ledssuperbright.com/images/ledstrip5ft.jpg) are connected via `IRLZ34N` logical transistors to the PI. There is also [IR receiver](https://i.stack.imgur.com/rojKP.jpg), just in case I want to record anything else. Temperature is measured via DS18B20 temperature sensor.\n\nThe wiring looks like:\n\n![Schematic](https://raw.githubusercontent.com/deepsyx/home-automation/master/Schematic.png)\n\nNew Ideas\n=======\nI'm open for all kind of ideas about different modules. If you have some ideas in mind, I'll be thankful if you add it in the issue tracker and label it as `Idea`.\n\nSoftware dependencies\n========\n* Node & Npm\n* Pi-Blaster\n* WiringPi\n* Lirc\n"
        },
        {
          "name": "Schematic.png",
          "type": "blob",
          "size": 339.8388671875,
          "content": null
        },
        {
          "name": "home-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "home-records",
          "type": "tree",
          "content": null
        },
        {
          "name": "phone-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}