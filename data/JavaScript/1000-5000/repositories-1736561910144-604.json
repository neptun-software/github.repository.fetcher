{
  "metadata": {
    "timestamp": 1736561910144,
    "page": 604,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WickyNilliams/enquire.js",
      "stars": 3617,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.541015625,
          "content": "_SpecRunner.html\n\n# Numerous always-ignore extensions\n*.diff\n*.err\n*.orig\n*.log\n*.rej\n*.swo\n*.swp\n*.vi\n*~\n*.sass-cache\n\n# OS or Editor folders\n.DS_Store\n._*\nThumbs.db\n.cache\n.project\n.settings\n.tmproj\nnbproject\n*.sublime-project\n*.sublime-workspace\n\n# Dreamweaver added files\n_notes\ndwsync.xml\n\n# Komodo\n*.komodoproject\n.komodotools\n\n# Espresso\n*.esproj\n*.espressostorage\n\n# Rubinius\n*.rbc\n\n# Folders to ignore\n.hg\n.svn\n.CVS\nintermediate\npublish\n.idea\nnode_modules\n\n# build script local files\nbuild/buildinfo.properties\nbuild/config/buildinfo.properties\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.4638671875,
          "content": "{\n    \"browser\": true,\n    \"es5\": true,\n    \"esnext\": true,\n    \"expr\" : true,\n    \"bitwise\": true,\n    \"camelcase\": true,\n    \"curly\": true,\n    \"eqeqeq\": true,\n    \"immed\": true,\n    \"latedef\": true,\n    \"newcap\": true,\n    \"noarg\": true,\n    \"quotmark\": \"single\",\n    \"regexp\": true,\n    \"undef\": true,\n    \"unused\": true,\n    \"trailing\": true,\n    \"smarttabs\": true,\n    \"globals\": {\n        \"matchMedia\": false,\n        \"module\": false,\n        \"require\": false\n    }\n}\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0791015625,
          "content": "language: node_js\nnode_js:\n  - \"0.10\"\nbefore_script:\n  - npm install -g grunt-cli"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.94140625,
          "content": "# Contributing to this project\n\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\n\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\n\n\n## Using the issue tracker\n\nThe issue tracker is the preferred channel for [bug reports](#bugs),\n[features requests](#features) and [submitting pull\nrequests](#pull-requests), but please respect the following restrictions:\n\n* Please **do not** use the issue tracker for personal support requests (use\n  [Stack Overflow](http://stackoverflow.com)).\n\n* Please **do not** derail or troll issues. Keep the discussion on topic and\n  respect the opinions of others.\n\n\n## Bug reports\n\nA bug is a _demonstrable problem_ that is caused by the code in the repository.\nGood bug reports are extremely helpful - thank you!\n\nGuidelines for bug reports:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been\n   reported.\n\n2. **Check if the issue has been fixed** &mdash; try to reproduce it using the\n   latest `master` or development branch in the repository.\n\n3. **Isolate the problem** &mdash; ideally create a [reduced test\n   case](http://css-tricks.com/6263-reduced-test-cases/) and a live example.\n\nA good bug report shouldn't leave others needing to chase you up for more\ninformation. Please try to be as detailed as possible in your report. What is\nyour environment? What steps will reproduce the issue? What browser(s) and OS\nexperience the problem? What would you expect to be the outcome? All these\ndetails will help people to fix any potential bugs.\n\nExample:\n\n> Short and descriptive example bug report title\n>\n> A summary of the issue and the browser/OS environment in which it occurs. If\n> suitable, include the steps required to reproduce the bug.\n>\n> 1. This is the first step\n> 2. This is the second step\n> 3. Further steps, etc.\n>\n> `<url>` - a link to the reduced test case\n>\n> Any other information you want to share that is relevant to the issue being\n> reported. This might include the lines of code that you have identified as\n> causing the bug, and potential solutions (and your opinions on their\n> merits).\n\n\n\n## Feature requests\n\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to *you* to make a strong\ncase to convince the project's developers of the merits of this feature. Please\nprovide as much detail and context as possible.\n\n\n\n## Pull requests\n\nGood pull requests - patches, improvements, new features - are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n\n**Please ask first** before embarking on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you risk spending a lot of time working on something that the\nproject's developers might not want to merge into the project.\n\nPlease adhere to the coding conventions used throughout a project (indentation,\naccurate comments, etc.) and any other requirements (such as test coverage).\n\nAdhering to the following this process is the best way to get your work\nincluded in the project:\n\n1. [Fork](http://help.github.com/fork-a-repo/) the project, clone your fork,\n   and configure the remotes:\n\n   ```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/<your-username>/<repo-name>\n   # Navigate to the newly cloned directory\n   cd <repo-name>\n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream https://github.com/<upstream-owner>/<repo-name>\n   ```\n\n2. If you cloned a while ago, get the latest changes from upstream:\n\n   ```bash\n   git checkout <dev-branch>\n   git pull upstream <dev-branch>\n   ```\n\n3. Create a new topic branch (off the main project development branch) to\n   contain your feature, change, or fix:\n\n   ```bash\n   git checkout -b <topic-branch-name>\n   ```\n\n4. Commit your changes in logical chunks. Please adhere to these [git commit\n   message guidelines](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n   or your code is unlikely be merged into the main project. Use Git's\n   [interactive rebase](https://help.github.com/articles/interactive-rebase)\n   feature to tidy up your commits before making them public.\n\n5. Locally merge (or rebase) the upstream development branch into your topic branch:\n\n   ```bash\n   git pull [--rebase] upstream <dev-branch>\n   ```\n\n6. Push your topic branch up to your fork:\n\n   ```bash\n   git push origin <topic-branch-name>\n   ```\n\n7. [Open a Pull Request](https://help.github.com/articles/using-pull-requests/)\n    with a clear title and description.\n\n**IMPORTANT**: By submitting a patch, you agree to allow the project owner to\nlicense your work under the same license as that used by the project."
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 3.43359375,
          "content": "module.exports = function(grunt) {\n    'use strict';\n\n    grunt.initConfig({\n\n        pkg: grunt.file.readJSON('package.json'),\n        meta: {\n            banner: '/*!\\n' +\n            ' * <%= pkg.name %> v<%= pkg.version %> - <%= pkg.description %>\\n' +\n            ' * Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %> - <%= pkg.homepage %>\\n' +\n            ' * License: MIT' +\n            ' */\\n\\n',\n            outputDir: 'dist',\n            output : '<%= meta.outputDir %>/<%= pkg.name %>',\n            outputMin : '<%= meta.outputDir %>/<%= pkg.name.replace(\"js\", \"min.js\") %>'\n        },\n\n        uglify: {\n            options : {\n                banner : '<%= meta.banner %>',\n                report: 'gzip'\n            },\n            dist: {\n                files : {\n                    '<%= meta.outputMin %>'  : '<%= meta.output %>'\n                }\n            }\n        },\n\n        jshint: {\n            options: {\n                jshintrc : true,\n                reporter: require('jshint-stylish')\n            },\n            prebuild : [\n                'Gruntfile.js',\n                'src/*.js',\n                'spec/*.js'\n            ]\n        },\n\n        browserify : {\n            dev: {\n                files: {\n                    '<%= meta.output %>' : 'src/index.js',\n                },\n                options : {\n                    watch : true,\n                    browserifyOptions : {\n                        debug : true,\n                        standalone : 'enquire'\n                    }\n                }\n            },\n\n            dist : {\n                files: {\n                    '<%= meta.output %>' : 'src/index.js',\n                },\n                options : {\n                    banner : '<%= meta.banner %>',\n                    plugin: [\n                        require('bundle-collapser/plugin')\n                    ],\n                    browserifyOptions : {\n                        standalone : 'enquire'\n                    }\n                }\n            }\n        },\n\n        karma : {\n            options : {\n                frameworks : ['browserify', 'jasmine'],\n                files : [\n                    'spec/*.js'\n                ],\n                preprocessors : {\n                    'spec/*.js': 'browserify'\n                },\n                browserify: {\n                    extensions: ['.js'],\n                    debug : true\n                },\n                browsers : ['PhantomJS'],\n                reporters : ['dots']\n            },\n\n            continuous : {\n                options : {\n                    singleRun: true\n                }\n            },\n\n            unit : {\n                options : {\n                    background: true,\n                    singleRun: false\n                }\n            }\n        },\n\n        watch: {\n            test : {\n                options : {\n                    atBegin : true\n                },\n                files: '<%= jshint.prebuild %>',\n                tasks: ['jshint', 'karma:unit:run']\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-browserify');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-karma');\n\n    grunt.registerTask('default', ['karma:unit:start', 'watch']);\n    grunt.registerTask('test', ['jshint', 'karma:continuous']);\n    grunt.registerTask('build', ['browserify:dist', 'uglify']);\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2012 Nick Williams\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.2353515625,
          "content": "{\n  \"name\": \"enquire\",\n  \"description\" : \"Awesome Media Queries in JavaScript\",\n  \"version\": \"2.1.2\",\n  \"main\": [\"./dist/enquire.js\"],\n  \"ignore\": [\n    \"functional-test/\",\n    \"spec\",\n    \"src/\",\n    \"Gruntfile.js\",\n    \".travis.yml\"\n  ]\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "functional-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.2412109375,
          "content": "{\n  \"name\": \"enquire.js\",\n  \"version\": \"2.1.6\",\n  \"main\": \"./src\",\n  \"description\": \"Awesome Media Queries in JavaScript\",\n  \"homepage\": \"http://wicky.nillia.ms/enquire.js\",\n  \"author\": {\n    \"name\": \"Nick Williams\",\n    \"url\": \"http://wicky.nillia.ms\"\n  },\n  \"keywords\": [\n    \"media query\",\n    \"media queries\",\n    \"matchMedia\",\n    \"enquire\",\n    \"enquire.js\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/WickyNilliams/enquire.js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/WickyNilliams/enquire.js/issues\"\n  },\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"start\": \"grunt\",\n    \"test\": \"grunt test\",\n    \"preversion\": \"npm test\",\n    \"version\": \"grunt build && git add .\",\n    \"postversion\": \"git push origin master --tags && npm publish\"\n  },\n  \"devDependencies\": {\n    \"bundle-collapser\": \"^1.2.1\",\n    \"grunt\": \"^1.0.1\",\n    \"grunt-browserify\": \"^5.0.0\",\n    \"grunt-contrib-jshint\": \"^1.1.0\",\n    \"grunt-contrib-uglify\": \"^2.2.0\",\n    \"grunt-contrib-watch\": \"^1.0.0\",\n    \"grunt-karma\": \"^2.0.0\",\n    \"jasmine-core\": \"^2.5.2\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"karma\": \"^1.5.0\",\n    \"karma-browserify\": \"^5.1.1\",\n    \"karma-jasmine\": \"^1.1.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.2\"\n  },\n  \"files\": [\n    \"src\",\n    \"dist\"\n  ]\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 3.3798828125,
          "content": "# [enquire.js](http://wickynilliams.github.com/enquire.js/) - Awesome Media Queries in JavaScript\n\n[![Build Status](https://travis-ci.org/WickyNilliams/enquire.js.svg)](https://travis-ci.org/WickyNilliams/enquire.js)\n\n`enquire.js` is a lightweight, pure javascript library (with **no dependencies**) for programmatically responding to media queries.\n\n## Getting enquire.js\n\n### Download\n\nGet the latest build, ready to go:\n\n * [Development](https://github.com/WickyNilliams/enquire.js/raw/master/dist/enquire.js) - unminified\n * [Production](https://github.com/WickyNilliams/enquire.js/raw/master/dist/enquire.min.js) - minified\n\n### Install via Bower\n\nTo install via bower, enter the following at the command line:\n\n    bower install enquire\n\n### Install via npm\n\nTo install via npm, enter the following at the command line:\n\n    npm install enquire.js\n\n### Build From Source\n\nIf you want build from source (and run all unit tests etc):\n\n    git clone git://github.com/WickyNilliams/enquire.js.git\n    cd enquire.js\n    npm install\n    grunt\n\nBooya!\n\n## Quick Start\n\nThe main method you will be dealing with is `register`. It's basic signature is as follows:\n\n```javascript\nenquire.register(query /* string */, handler /* object || array  || function */);\n```\n\n`query` is the CSS media query you wish to respond to, and `handler` is an object containing any logic to handle the query. An example of usage is as follows:\n\n```javascript\nenquire.register(\"screen and (max-width:1000px)\", {\n\n    match : function() {},      // OPTIONAL\n                                // If supplied, triggered when the media query transitions\n                                // *from an unmatched to a matched state*\n\n    unmatch : function() {},    // OPTIONAL\n                                // If supplied, triggered when the media query transitions\n                                // *from a matched state to an unmatched state*.\n                                // Also may be called when handler is unregistered (if destroy is not available)\n\n    setup : function() {},      // OPTIONAL\n                                // If supplied, triggered once immediately upon registration of the handler\n\n    destroy : function() {},    // OPTIONAL\n                                // If supplied, triggered when handler is unregistered. Place cleanup code here\n\n    deferSetup : true           // OPTIONAL, defaults to false\n                                // If set to true, defers execution the setup function\n                                // until the media query is first matched. still triggered just once\n});\n```\n\nThis should be enough to get you going, but **please read the full [enquire.js documentation](http://wickynilliams.github.com/enquire.js/)** if you wish to learn about the other cool features.\n\n## Contributing\n\n* Got an awesome idea?\n* Found a *not-so*-awesome bug?\n* Wish to get my attention through an inappropriate communication channel?!\n\nThen please don't hesitate to raise an issue, they will *all* be looked at and tended to.\n\nAnd for all the cool cats who are prepared to give their time to contribute code, feel free to open a pull request. If you could write unit tests to accompany your pull request that would be pretty sweet, but no worries if not - if it's good enough to be merged in, it's good enough for me to spend a little time to write tests on your behalf :-)\n\n## License\n\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\n\n\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}