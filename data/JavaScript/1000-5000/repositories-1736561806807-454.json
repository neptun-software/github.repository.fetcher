{
  "metadata": {
    "timestamp": 1736561806807,
    "page": 454,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "indexzero/nconf",
      "stars": 3867,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.021484375,
          "content": "node_modules\nusage.js\n"
        },
        {
          "name": ".eslintrc.json",
          "type": "blob",
          "size": 0.150390625,
          "content": "{\n    \"env\": {\n        \"node\": true\n    },\n    \"parserOptions\": {\n        \"ecmaVersion\": 6\n    },\n    \"rules\": {\n        \"no-unused-vars\": \"error\"\n    }\n}"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0244140625,
          "content": "package-lock.json binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2744140625,
          "content": ".DS_Store\nconfig.json\ntest/fixtures/*.json\n!test/fixtures/complete.json\n!test/fixtures/malformed.json\n!test/fixtures/bom.json\n!test/fixtures/no-bom.json\n!test/fixtures/secure.json\n!test/fixtures/secure-iv.json\nnode_modules/\nnode_modules/*\nnpm-debug.log\ncoverage\npackage-lock.json\n\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "package-lock=false\n"
        },
        {
          "name": ".release-it.json",
          "type": "blob",
          "size": 0.2626953125,
          "content": "{\n  \"git\": {\n    \"commitMessage\": \"chore: release ${version}\",\n    \"tagName\": \"v${version}\"\n  },\n  \"npm\": {\n    \"publish\": true\n  },\n  \"github\": {\n    \"release\": true\n  },\n  \"plugins\": {\n    \"@release-it/conventional-changelog\": {\n      \"preset\": \"angular\"\n    }\n  }\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 37.6591796875,
          "content": "\nv0.9.1 / Fri, 3 Nov 2017\n========================\n  * [806f1b1](https://github.com/projects/nconf/commit/806f1b1) 0.9.1 (`Matt Hamann`)\n  * [2bdf7e1](https://github.com/projects/nconf/commit/2bdf7e1) Clean Argv Store options (#290) (`Adrien Becchis`)\n  * [b9321b2](https://github.com/projects/nconf/commit/b9321b2) transformer can now return an undefined key (#289) (`Adrien Becchis`)\n  * [81ce0be](https://github.com/projects/nconf/commit/81ce0be) Update changelog (`Matt Hamann`)\n\n0.9.0 / Tue, 31 Oct 2017\n========================\n  * [b1ee63c](https://github.com/projects/nconf/commit/b1ee63c) fix error in transform function when dealing with dropped entries (#287) (`Augusto Franzoia`)\n  * [9f70ba1](https://github.com/projects/nconf/commit/9f70ba1) [doc] Update changelog (`Matt Hamann`)\n  * [8afcf99](https://github.com/projects/nconf/commit/8afcf99) [dist] Version bump. 0.9.0 (`Matt Hamann`)\n  * [b41c505](https://github.com/projects/nconf/commit/b41c505) Save conf to dedicated file (#283) (`Adrien Becchis`)\n  * [52e0a35](https://github.com/projects/nconf/commit/52e0a35) Update changelog (`Matt Hamann`)\n  * [fa215a4](https://github.com/projects/nconf/commit/fa215a4) add tests for the normal configuration of yargs via argv (`AdrieanKhisbe`)\n  * [802a8d6](https://github.com/projects/nconf/commit/802a8d6) test for yargs custom instance (more flexible check isYargs) (`AdrieanKhisbe`)\n  * [3e26bb2](https://github.com/projects/nconf/commit/3e26bb2) Add posibility to pass a yargs instance to argv() method (`Nicolas Deveaud`)\n  * [856fdf8](https://github.com/projects/nconf/commit/856fdf8) First pass at transform functions (#279) (`Matt Hamann`)\n  * [b9c345b](https://github.com/projects/nconf/commit/b9c345b) Fix `parseValues` option name (`Matt Hamann`)\n  * [35088a3](https://github.com/projects/nconf/commit/35088a3) Added nconf.any method (#278) (`Matt Hamann`)\n  * [ca10d0e](https://github.com/projects/nconf/commit/ca10d0e) Add basic linting rules (`Matt Hamann`)\n  * [bfb0220](https://github.com/projects/nconf/commit/bfb0220) Remove unused module (#277) (`Brian Harrington`)\n  * [532ac9c](https://github.com/projects/nconf/commit/532ac9c) Support parsing simple values from env/argv strings (#273) (`Matt Hamann`)\n  * [b8402d4](https://github.com/projects/nconf/commit/b8402d4) Enable support for parsing JSON environment variables (#272) (`Matt Hamann`)\n\nv0.8.5 / Tue, 15 Aug 2017\n=========================\n  * [f46c449](https://github.com/projects/nconf/commit/f46c449) 0.8.5 (`Matt Hamann`)\n  * [552300a](https://github.com/projects/nconf/commit/552300a) [doc] Document lowerCase option in .env(options) (#268) (`Matt Hamann`)\n  * [5e8a34d](https://github.com/projects/nconf/commit/5e8a34d) enable use with webpack by removing unnecessary fs call (#252) (`evoye`)\n  * [608b607](https://github.com/projects/nconf/commit/608b607) Add test for merging with defaults (#255) (`Chris Manson`)\n  * [d70b6a0](https://github.com/projects/nconf/commit/d70b6a0) Fixed some issues with code escaping (`Charter Jacobson`)\n  * [392c602](https://github.com/projects/nconf/commit/392c602) Copy `process.env` before lower-casing the keys (`Jan Klosinski`)\n\n0.8.4 / Wed, 3 Feb 2016\n=======================\n  * [3d4e589](https://github.com/projects/nconf/commit/3d4e589) [dist] Version bump. 0.8.4 (`Jarrett Cruger`)\n  * [4431c33](https://github.com/projects/nconf/commit/4431c33) [fix] handle buffers so we dont get ambiguous errors when we dont strictly read the file as utf8 (`Jarrett Cruger`)\n\n0.8.3 / Mon, 1 Feb 2016\n=======================\n  * [54cab20](https://github.com/projects/nconf/commit/54cab20) [dist] Version bump. 0.8.3 (`Jarrett Cruger`)\n  * [b447268](https://github.com/projects/nconf/commit/b447268) [fix] cleanup secure with new module (`Jarrett Cruger`)\n  * [de551d4](https://github.com/projects/nconf/commit/de551d4) Update README.md (`Mark Oberemk`)\n  * [c242f77](https://github.com/projects/nconf/commit/c242f77) [travis test] setup coveralls config + update README badges (`AdrieanKhisbe`)\n  * [c8dbede](https://github.com/projects/nconf/commit/c8dbede) [test] setup istanbul coverage (`AdrieanKhisbe`)\n  * [bdecdc2](https://github.com/projects/nconf/commit/bdecdc2) [travis] add v5 to node version tested (`AdrieanKhisbe`)\n  * [5d6e236](https://github.com/projects/nconf/commit/5d6e236) fixed (`Wojtek Turyn`)\n  * [37a84ae](https://github.com/projects/nconf/commit/37a84ae) required() method (`Wojtek Turyn`)\n\n0.8.2 / Wed, 7 Oct 2015\n=======================\n  * [ddee9bc](https://github.com/projects/nconf/commit/ddee9bc) [dist] Version bump. 0.8.2 (`indexzero`)\n  * [86bfd7c](https://github.com/projects/nconf/commit/86bfd7c) [fix] Do not trim `\\n` from files read in. (`indexzero`)\n\n0.8.1 / Fri, 2 Oct 2015\n=======================\n  * [ff0f174](https://github.com/projects/nconf/commit/ff0f174) [dist] Version bump. 0.8.1 (`indexzero`)\n  * [11b2448](https://github.com/projects/nconf/commit/11b2448) [fix] Correct property path. Trim read secret keys from disk. (`indexzero`)\n  * [438a2c8](https://github.com/projects/nconf/commit/438a2c8) [doc] Remove `node@0.8.0` from travis. Drop `nodeci` because it is 503 atm`. (`indexzero`)\n\n0.8.0 / Sun, 20 Sep 2015\n========================\n  * [ebd8e48](https://github.com/projects/nconf/commit/ebd8e48) [dist] Version bump. 0.8.0 (`indexzero`)\n  * [be085c9](https://github.com/projects/nconf/commit/be085c9) [doc] Update CHANGELOG.md. (`indexzero`)\n  * [0922563](https://github.com/projects/nconf/commit/0922563) [doc fix] Remove unused and outdated literate coding documentation. (`indexzero`)\n  * [4b5030d](https://github.com/projects/nconf/commit/4b5030d) [fix] Only merge actual objects, not `null` values. Fixes #150. (`indexzero`)\n  * [a3589fa](https://github.com/projects/nconf/commit/a3589fa) Fixing provider issue in source (`Rob Rodriguez`)\n  * [51653e6](https://github.com/projects/nconf/commit/51653e6) Passing the value parameter to the providers (`Rob Rodriguez`)\n  * [2030144](https://github.com/projects/nconf/commit/2030144) [test dist] Add `test/fixtures/secure.json`. (`indexzero`)\n  * [9dbed2d](https://github.com/projects/nconf/commit/9dbed2d) [doc minor] Update docs for secure information. (`indexzero`)\n  * [0358545](https://github.com/projects/nconf/commit/0358545) [test api] Make the format capable of sub-objects. (`indexzero`)\n  * [04c0f3a](https://github.com/projects/nconf/commit/04c0f3a) [api test] Encrypt individual keys instead of entire stringified contents. Added basic unit tests. (`indexzero`)\n  * [d2b3561](https://github.com/projects/nconf/commit/d2b3561) [dist] Update `.travis.yml`. (`indexzero`)\n  * [442d2b4](https://github.com/projects/nconf/commit/442d2b4) [api] Allow for `secure` to be simply a secret string. (`indexzero`)\n  * [2de2bc0](https://github.com/projects/nconf/commit/2de2bc0) [api] Allow for \"secure\" option to be passed to `nconf.stores.File` to perform content encryption / decryption with `crypto.createCipher`. (`indexzero`)\n  * [5d95f13](https://github.com/projects/nconf/commit/5d95f13) filter out undefined values (`Christian Murphy`)\n  * [7d6be32](https://github.com/projects/nconf/commit/7d6be32) [travis] fix yaml syntax (supposed to solve nvm bugs #182) (`Joseph Page`)\n  * [abeeca0](https://github.com/projects/nconf/commit/abeeca0) [travis] fix npm bugs for node 0.8 (recommended way) (`Joseph Page`)\n  * [59056fe](https://github.com/projects/nconf/commit/59056fe) Update Async and ini (`Christian Murphy`)\n  * [a2b812f](https://github.com/projects/nconf/commit/a2b812f) Add travis tests for iojs (`Joseph Page`)\n  * [32d560c](https://github.com/projects/nconf/commit/32d560c) Add tests for node 0.12 (`Joseph Page`)\n  * [8a21ef3](https://github.com/projects/nconf/commit/8a21ef3) env({lowerCase:true}) option to make it possible to get() keys in lower case (`Olivier Lalonde`)\n  * [89dff39](https://github.com/projects/nconf/commit/89dff39) Quick grammar fix (`Nick Heiner`)\n  * [339e59a](https://github.com/projects/nconf/commit/339e59a) fix random fails on tests that use child process (`Pierre Beaujeu`)\n  * [a65e1a3](https://github.com/projects/nconf/commit/a65e1a3) update async (`Christian Murphy`)\n  * [a82b539](https://github.com/projects/nconf/commit/a82b539) update badge and use container build (`Christian Murphy`)\n  * [e5b33ce](https://github.com/projects/nconf/commit/e5b33ce) Add license attribute (`Gilad Peleg`)\n\n0.7.2 / Tue, 4 Aug 2015\n=======================\n  * [c2b8b97](https://github.com/projects/nconf/commit/c2b8b97) [dist] Version bump. 0.7.2 (`indexzero`)\n  * [3c11ef5](https://github.com/projects/nconf/commit/3c11ef5) fix: env.match test (`Remy Sharp`)\n  * [372521b](https://github.com/projects/nconf/commit/372521b) [doc] Add the badges!. (`indexzero`)\n  * [80ec01b](https://github.com/projects/nconf/commit/80ec01b) replace optimist with yargs (`Christian Murphy`)\n  * [6d86950](https://github.com/projects/nconf/commit/6d86950) Grammar nit (`Nick Heiner`)\n\nv0.7.1 / Wed, 26 Nov 2014\n=========================\n\n\nv0.7.1 / Wed, 26 Nov 2014\n=========================\n  * [dc6aed2](https://github.com/projects/nconf/commit/dc6aed2) [dist] Version bump. 0.7.1 (`Jarrett Cruger`)\n  * [87a3b82](https://github.com/projects/nconf/commit/87a3b82) [fix] we shouldnt be reversing here fixes #127 (`Jarrett Cruger`)\n  * [6271cdb](https://github.com/projects/nconf/commit/6271cdb) Revert \"fixing the tests\" (`Jarrett Cruger`)\n  * [f0d5b6e](https://github.com/projects/nconf/commit/f0d5b6e) [dist] Fix travis. (`indexzero`)\n\nv0.7.0 / Wed, 26 Nov 2014\n=========================\n\n\nv0.7.0 / Wed, 26 Nov 2014\n=========================\n  * [a2a1321](https://github.com/projects/nconf/commit/a2a1321) [dist] Version bump. 0.7.0 (`indexzero`)\n  * [352f075](https://github.com/projects/nconf/commit/352f075) [dist] \"Real\" CHANGELOG.md again. (`indexzero`)\n  * [af0e9fb](https://github.com/projects/nconf/commit/af0e9fb) [dist fix] Cleanup some whitespace. (`indexzero`)\n  * [0934255](https://github.com/projects/nconf/commit/0934255) [fix] Fixed regression introduced by #98. (`indexzero`)\n  * [8d5fb25](https://github.com/projects/nconf/commit/8d5fb25) [fix] Fix my own sloppy coding fixing the sloppy coding from #76. (`indexzero`)\n  * [f07bc40](https://github.com/projects/nconf/commit/f07bc40) [fix] Fix inconsistent style from #98. (`indexzero`)\n  * [0b8aa90](https://github.com/projects/nconf/commit/0b8aa90) [fix test] Remove leftover `console.log()` from #79. (`indexzero`)\n  * [f771500](https://github.com/projects/nconf/commit/f771500) [dist] Semantic cleanup from sloppy coding in #76. (`indexzero`)\n  * [ffce2cb](https://github.com/projects/nconf/commit/ffce2cb) [dist] Update package.json versions. (`indexzero`)\n  * [6301d7d](https://github.com/projects/nconf/commit/6301d7d) Update Readme; multiple file() needs custom key (`Mitchell McKenna`)\n  * [f69e43a](https://github.com/projects/nconf/commit/f69e43a) fixing the tests (`Chris Manson`)\n  * [c8b6c98](https://github.com/projects/nconf/commit/c8b6c98) Adding helpful information in case parsing failed. (`Martin Heidegger`)\n  * [8105c76](https://github.com/projects/nconf/commit/8105c76) [fix] only reverse keys for \"get\" action to be safe. (`Christopher Jeffrey`)\n  * [2241a36](https://github.com/projects/nconf/commit/2241a36) [fix] have latter stores precede the former stores again. (`Christopher Jeffrey`)\n  * [0bb89ee](https://github.com/projects/nconf/commit/0bb89ee) [fix] have latter stores precede the former stores. (`Christopher Jeffrey`)\n  * [43505a5](https://github.com/projects/nconf/commit/43505a5) Use ~ for dependencies (`Gabe Gorelick`)\n  * [05d73de](https://github.com/projects/nconf/commit/05d73de) [fix] No need to test 0.6 anymore (`Jarrett Cruger`)\n  * [79b9b84](https://github.com/projects/nconf/commit/79b9b84) [doc] Add a Literal example to add() (`Tommy Stanton`)\n  * [3a7b788](https://github.com/projects/nconf/commit/3a7b788) [doc] The store for File is empty if non-existent (`Tommy Stanton`)\n  * [9891814](https://github.com/projects/nconf/commit/9891814) Delete CHANGELOG.md (`Alexey Simonenko`)\n  * [120f5f0](https://github.com/projects/nconf/commit/120f5f0) added documentation (`joaoafrmartins`)\n  * [681fd2f](https://github.com/projects/nconf/commit/681fd2f) added regexp filtering to nconf env store (`joaoafrmartins`)\n  * [039057c](https://github.com/projects/nconf/commit/039057c) allow different separator for memorystore (`José F. Romaniello`)\n  * [b73b0e1](https://github.com/projects/nconf/commit/b73b0e1) attach help and showHelp arguments to the argv store (`Johnny Domino`)\n  * [4894c8f](https://github.com/projects/nconf/commit/4894c8f) resolves #64 passing usage string to optimist (`Johnny Domino`)\n\nv0.6.9 / Sun, 1 Dec 2013\n========================\n\n\nv0.6.9 / Sun, 1 Dec 2013\n========================\n  * [022b9bc](https://github.com/projects/nconf/commit/022b9bc) [dist] Version bump. 0.6.9 (`Jarrett Cruger`)\n  * [9aa33b5](https://github.com/projects/nconf/commit/9aa33b5) [dist] bump optimist version, fixes #89 (`Jarrett Cruger`)\n  * [92311c8](https://github.com/projects/nconf/commit/92311c8) [rm] kill pkginfo (`Jarrett Cruger`)\n  * [c713936](https://github.com/projects/nconf/commit/c713936) [dist] bump async (`Jarrett Cruger`)\n\nv0.6.8 / Tue, 29 Oct 2013\n=========================\n\n\nv0.6.8 / Tue, 29 Oct 2013\n=========================\n  * [cd81efa](https://github.com/projects/nconf/commit/cd81efa) [dist] Version bump. 0.6.8 (`Jarrett Cruger`)\n  * [6c1eb5e](https://github.com/projects/nconf/commit/6c1eb5e) fixed white spacing and added (embarrassing absent) variable declarations (`midknight41`)\n  * [ccd609c](https://github.com/projects/nconf/commit/ccd609c) updated version of vows as v0.6 didn't work with node 0.10 (`midknight41`)\n  * [5546469](https://github.com/projects/nconf/commit/5546469) updated .travis.yml as travis doesn't support node 0.4 or 0.9 (`midknight41`)\n  * [6641ed2](https://github.com/projects/nconf/commit/6641ed2) made bom tests more meaningful (`midknight41`)\n  * [2ce8aea](https://github.com/projects/nconf/commit/2ce8aea) made bom tests more meaningful (`midknight41`)\n  * [f7733c1](https://github.com/projects/nconf/commit/f7733c1) included bom test fixtures (`midknight41`)\n  * [24f77a0](https://github.com/projects/nconf/commit/24f77a0) included bom test fixtures (`midknight41`)\n  * [29f1ca2](https://github.com/projects/nconf/commit/29f1ca2) added support for BOM in load() and loadSync() (`midknight41`)\n  * [ada15db](https://github.com/projects/nconf/commit/ada15db) Test that invalid file name is indicated (`Marcin Floryan`)\n  * [0135d95](https://github.com/projects/nconf/commit/0135d95) Additional error information when JSON config file cannot be read (`Marcin Floryan`)\n  * [5d2ebfb](https://github.com/projects/nconf/commit/5d2ebfb) Added test to confirm merging an Object and null behaves as expected. (`Michael Schoonmaker`)\n  * [ed41c51](https://github.com/projects/nconf/commit/ed41c51) Updated Memory.merge to handle null values (`Michael Schoonmaker`)\n\nv0.6.7 / Thu, 20 Dec 2012\n=========================\n\n\nv0.6.7 / Thu, 20 Dec 2012\n=========================\n  * [d77c55d](https://github.com/projects/nconf/commit/d77c55d) [dist] Version bump. 0.6.7 (`indexzero`)\n  * [bb57c49](https://github.com/projects/nconf/commit/bb57c49) Prefer this fix for #65 to 6045618 (`Michael Hart`)\n\nv0.6.6 / Thu, 20 Dec 2012\n=========================\n\n\nv0.6.6 / Thu, 20 Dec 2012\n=========================\n  * [aec2b4e](https://github.com/projects/nconf/commit/aec2b4e) [dist] Version bump. 0.6.6 (`indexzero`)\n  * [6045618](https://github.com/projects/nconf/commit/6045618) [fix] Fix for #65 (`indexzero`)\n  * [0d795ec](https://github.com/projects/nconf/commit/0d795ec) [test] Better tests to show #65 (`indexzero`)\n  * [f19f0b6](https://github.com/projects/nconf/commit/f19f0b6) [test] Added failing test to illustrate #65 (`indexzero`)\n\nv0.6.5 / Fri, 2 Nov 2012\n========================\n\n\nv0.6.5 / Fri, 2 Nov 2012\n========================\n  * [bcbaf3a](https://github.com/projects/nconf/commit/bcbaf3a) [dist] Bump version to 0.6.5 (`Maciej Małecki`)\n  * [8b65e19](https://github.com/projects/nconf/commit/8b65e19) [test] Test on newer node versions (`Maciej Małecki`)\n  * [8e987b8](https://github.com/projects/nconf/commit/8e987b8) make it possible to use other formats than json in common.loadFiles and common.loadFilesSync (`Christian Tellnes`)\n  * [da39d3c](https://github.com/projects/nconf/commit/da39d3c) [fix] null values should merge properly instead of throwing errors (`Bradley Meck`)\n  * [7421836](https://github.com/projects/nconf/commit/7421836) [fix] heirarchy fixture file path wrong in tests (`Bradley Meck`)\n  * [683f789](https://github.com/projects/nconf/commit/683f789) [fix] #59 root get/set should work via null/undefined as key (`Bradley Meck`)\n  * [0f092ab](https://github.com/projects/nconf/commit/0f092ab) Added docs for options hash to optimist. (`Ethan Winn`)\n\nv0.6.4 / Tue, 10 Jul 2012\n=========================\n\n\nv0.6.4 / Tue, 10 Jul 2012\n=========================\n  * [7279bc1](https://github.com/projects/nconf/commit/7279bc1) [dist] Version bump. 0.6.4 (`indexzero`)\n  * [d96d254](https://github.com/projects/nconf/commit/d96d254) [fix] Fix regression introduced by 36e061c4bda8d79f657dc24b1dcf1937f31d7efe (`indexzero`)\n  * [7e8d9d6](https://github.com/projects/nconf/commit/7e8d9d6) [test] Added failing test for `.save()` regression introduced by @russfrank in 36e061c4bda8d79f657dc24b1dcf1937f31d7efe (`indexzero`)\n  * [04e2230](https://github.com/projects/nconf/commit/04e2230) [minor doc] Update file header in test/provider-test.js (`indexzero`)\n\nv0.6.3 / Tue, 10 Jul 2012\n=========================\n\n\nv0.6.3 / Tue, 10 Jul 2012\n=========================\n  * [c7c6b6f](https://github.com/projects/nconf/commit/c7c6b6f) [dist] Version bump. 0.6.3 (`indexzero`)\n  * [3073430](https://github.com/projects/nconf/commit/3073430) [api test doc] Make options to `Provider.prototype.file` take more flexible options (`indexzero`)\n  * [8b53c12](https://github.com/projects/nconf/commit/8b53c12) [minor] Use locally scoped `path` variable (`indexzero`)\n\nv0.6.2 / Tue, 10 Jul 2012\n=========================\n\n\nv0.6.2 / Tue, 10 Jul 2012\n=========================\n  * [80a7973](https://github.com/projects/nconf/commit/80a7973) [dist] Version bump. 0.6.2 (`indexzero`)\n  * [7515f66](https://github.com/projects/nconf/commit/7515f66) [fix] Ensure that all options are passed to `Provider.prototype.add` in `Provider.prototype.file`. Fixes #51 [doc] Update README.md and method documentation [dist] Remove vim comments (`indexzero`)\n\nv0.6.1 / Sun, 8 Jul 2012\n========================\n\n\nv0.6.1 / Sun, 8 Jul 2012\n========================\n  * [eeddb70](https://github.com/projects/nconf/commit/eeddb70) [dist] Version bump. 0.6.1 (`indexzero`)\n  * [9aaafc5](https://github.com/projects/nconf/commit/9aaafc5) Ugh, fixed whitespace (`Michael Hart`)\n  * [3c08fad](https://github.com/projects/nconf/commit/3c08fad) Changed  to  as it's more accurate (`Michael Hart`)\n  * [e15f787](https://github.com/projects/nconf/commit/e15f787) Updated README and allowed a simpley syntax (`Michael Hart`)\n  * [92d4e9e](https://github.com/projects/nconf/commit/92d4e9e) Added test and updated docs (`Michael Hart`)\n  * [8921d05](https://github.com/projects/nconf/commit/8921d05) Added support for nested configs via env (`Michael Hart`)\n  * [6cbc323](https://github.com/projects/nconf/commit/6cbc323) Add reset to the list of destructive commands (`Michael Hart`)\n  * [26d81e8](https://github.com/projects/nconf/commit/26d81e8) Merge objects if necessary when traversing stores on get() (`Michael Hart`)\n  * [83440f9](https://github.com/projects/nconf/commit/83440f9) fix spelling in error message (`Christian Tellnes`)\n  * [87b0dd0](https://github.com/projects/nconf/commit/87b0dd0) [minor] Use `fs.exists` when available (`Maciej Małecki`)\n  * [1f67d35](https://github.com/projects/nconf/commit/1f67d35) [dist] Fix maintainers field (`Christian Howe`)\n  * [6353d02](https://github.com/projects/nconf/commit/6353d02) api and doc change for flatiron/nconf#28 (`.file` may now take a string instead of an object) (`Jonathan Stewmon`)\n  * [d3e6897](https://github.com/projects/nconf/commit/d3e6897) Proper teardowns in `complete-test.js` (`Russell Frank`)\n  * [94bdb7d](https://github.com/projects/nconf/commit/94bdb7d) Added `complete-test.js` & fixture. (`Russell Frank`)\n  * [36e061c](https://github.com/projects/nconf/commit/36e061c) Fixes to `Provider.save()` and tests. (`Russell Frank`)\n  * [29eb5f9](https://github.com/projects/nconf/commit/29eb5f9) [minor] Fix whitespaces (`Pavan Kumar Sunkara`)\n  * [6ce0b7a](https://github.com/projects/nconf/commit/6ce0b7a) Surfacing additional JSON.stringify arguments in formats.json.stringify, and adding the json_spacing option to the File constructor. (`Jordan Harband`)\n  * [b369931](https://github.com/projects/nconf/commit/b369931) [minor] Use `fs.existsSync` when available (`Maciej Małecki`)\n  * [d8c4749](https://github.com/projects/nconf/commit/d8c4749) [test] Test on `node@0.7` (`Maciej Małecki`)\n  * [464af41](https://github.com/projects/nconf/commit/464af41) [fix test] Fix bad test assertion (`indexzero`)\n\nv0.5.1 / Mon, 2 Jan 2012\n========================\n\n\nv0.5.1 / Mon, 2 Jan 2012\n========================\n  * [6a6e092](https://github.com/projects/nconf/commit/6a6e092) [dist] Version bump. 0.5.1 (`indexzero`)\n  * [6242caa](https://github.com/projects/nconf/commit/6242caa) [api minor] Add `.loadSync()` to Memory store. Fixes #24 (`indexzero`)\n  * [d0a9121](https://github.com/projects/nconf/commit/d0a9121) [test dist] Remove unused `eyes` dependency (`indexzero`)\n  * [9e9e37b](https://github.com/projects/nconf/commit/9e9e37b) [minor] Update whitespace (`indexzero`)\n  * [fdb73f0](https://github.com/projects/nconf/commit/fdb73f0) updated tests to verify that Provider.load respects hierarchy (`Jonathan Stewmon`)\n  * [a216336](https://github.com/projects/nconf/commit/a216336) updated Provider.load to respect sources hierarchy (`Jonathan Stewmon`)\n  * [6b6bf85](https://github.com/projects/nconf/commit/6b6bf85) updated optimist to version 0.3.x (`Jonathan Stewmon`)\n  * [5c43d54](https://github.com/projects/nconf/commit/5c43d54) fixed merge issue in Provider.load by reversing store keys in getStores (`Jonathan Stewmon`)\n  * [2804b1f](https://github.com/projects/nconf/commit/2804b1f) fixed issue caused by using same name for defaults and overrides (`Jonathan Stewmon`)\n  * [e0e070a](https://github.com/projects/nconf/commit/e0e070a) [test] Test if `File.saveSync()` returns store content (`Maciej Małecki`)\n  * [963387c](https://github.com/projects/nconf/commit/963387c) [api] `File.saveSync()` should return store content (`Maciej Małecki`)\n  * [d5ce1ed](https://github.com/projects/nconf/commit/d5ce1ed) [test] Test `saveSync()` method of file store (`Maciej Małecki`)\n  * [cf9889e](https://github.com/projects/nconf/commit/cf9889e) [dist] Upgrade vows to 0.6.x (`Pavan Kumar Sunkara`)\n\nv0.5.0 / Thu, 24 Nov 2011\n=========================\n\n\nv0.5.0 / Thu, 24 Nov 2011\n=========================\n  * [62cb7fb](https://github.com/projects/nconf/commit/62cb7fb) [dist] Version bump. 0.5.0 (`indexzero`)\n  * [6c720ee](https://github.com/projects/nconf/commit/6c720ee) [dist] Update Copyright and Author to Nodejitsu Inc. (`indexzero`)\n  * [4643a14](https://github.com/projects/nconf/commit/4643a14) [doc] Updated README and added CHANGELOG.md (`indexzero`)\n  * [90b0297](https://github.com/projects/nconf/commit/90b0297) [test] Update tests to use optional options API (`indexzero`)\n  * [53d854a](https://github.com/projects/nconf/commit/53d854a) [api] Default to `options` if `options.store` is not available in nconf.Literal (`indexzero`)\n  * [b658f68](https://github.com/projects/nconf/commit/b658f68) [test] Add additional test coverage for hierarchical configuration (`indexzero`)\n  * [a9c3540](https://github.com/projects/nconf/commit/a9c3540) [fix test] Fix overwritten tests in file-store-test.js (`indexzero`)\n  * [f4f1fdf](https://github.com/projects/nconf/commit/f4f1fdf) [fix test] Update to respected `.sources` option correctly (`indexzero`)\n  * [bbcb271](https://github.com/projects/nconf/commit/bbcb271) [api fix] Dont eagerly create config files in `.load()` and `.loadSync()` (`indexzero`)\n  * [021850a](https://github.com/projects/nconf/commit/021850a) [test] Move around test .json files (`indexzero`)\n  * [0fbc9a2](https://github.com/projects/nconf/commit/0fbc9a2) [test] Added tests (which are now passing) for #15 (`indexzero`)\n  * [16a18bf](https://github.com/projects/nconf/commit/16a18bf) [refactor] Expose all store prototypes on `nconf.*`. Expose store instances on Provider.stores and Provider.sources (`indexzero`)\n  * [c3cebe7](https://github.com/projects/nconf/commit/c3cebe7) [refactor] Rename `.sources` to `._stores` and bring back `._sources` (`indexzero`)\n  * [78ce556](https://github.com/projects/nconf/commit/78ce556) [minor] Dont allow `.set()` calls to change values in readOnly stores: argv, env, and literal (`indexzero`)\n  * [1aa2f1f](https://github.com/projects/nconf/commit/1aa2f1f) [doc] Updated README.md (`indexzero`)\n  * [47a56cc](https://github.com/projects/nconf/commit/47a56cc) [test] Test for hierarchical argv options get() (`Sander Tolsma`)\n  * [c3c315d](https://github.com/projects/nconf/commit/c3c315d) [refactor] Refactor to make using nconf more fluent. (`indexzero`)\n  * [2c1ef71](https://github.com/projects/nconf/commit/2c1ef71) [dist] Bump to v0.4.6 (`Marak Squires`)\n  * [1b258bf](https://github.com/projects/nconf/commit/1b258bf) [fix] Fix option parsing (`Maciej Małecki`)\n  * [ef3222e](https://github.com/projects/nconf/commit/ef3222e) [dist] Make `repository` point to `flatiron/nconf` (`Maciej Małecki`)\n\nv0.4.5 / Sun, 20 Nov 2011\n=========================\n\n\nv0.4.5 / Sun, 20 Nov 2011\n=========================\n  * [f4723e9](https://github.com/projects/nconf/commit/f4723e9) [dist] Version bump. 0.4.5 (`indexzero`)\n  * [2475d06](https://github.com/projects/nconf/commit/2475d06) [test] Test command line arguments reparsing (`Maciej Małecki`)\n  * [bbc5885](https://github.com/projects/nconf/commit/bbc5885) [api] Reparse argv arguments on `system.loadArgv()` (`Maciej Małecki`)\n  * [51700ca](https://github.com/projects/nconf/commit/51700ca) [test minor] Use `process.argv[0]` when spawning processes (`Maciej Małecki`)\n  * [07f8c3e](https://github.com/projects/nconf/commit/07f8c3e) [doc] Add Travis build status image (`Maciej Małecki`)\n  * [bab96b0](https://github.com/projects/nconf/commit/bab96b0) [test] Add `.travis.yml` for testing on Travis CI (`Maciej Małecki`)\n\nv0.4.4 / Sat, 22 Oct 2011\n=========================\n\n\nv0.4.4 / Sat, 22 Oct 2011\n=========================\n  * [b96151e](https://github.com/projects/nconf/commit/b96151e) [dist] Version bump. 0.4.4 (`indexzero`)\n  * [d8a3020](https://github.com/projects/nconf/commit/d8a3020) [fix] filename --> file in a few file transport examples (`Joshua Holbrook`)\n  * [2e33082](https://github.com/projects/nconf/commit/2e33082) [api] Automatically search for a file if `options.search` is true in File store (`indexzero`)\n\nv0.4.3 / Sun, 25 Sep 2011\n=========================\n\n\nv0.4.3 / Sun, 25 Sep 2011\n=========================\n  * [86e22cb](https://github.com/projects/nconf/commit/86e22cb) [dist] Version bump. 0.4.3 (`indexzero`)\n  * [a2464d2](https://github.com/projects/nconf/commit/a2464d2) [api] Load sources into the default system store so they are permenantly cached (`indexzero`)\n\nv0.4.2 / Sun, 25 Sep 2011\n=========================\n\n\nv0.4.2 / Sun, 25 Sep 2011\n=========================\n  * [e243b0b](https://github.com/projects/nconf/commit/e243b0b) [dist] Version bump. 0.4.2 (`indexzero`)\n  * [d0aee0d](https://github.com/projects/nconf/commit/d0aee0d) [api test] Added `.sources` option for `nconf.Provider` for readonly configuration data (`indexzero`)\n  * [0234e17](https://github.com/projects/nconf/commit/0234e17) [fix] Update bad variable reference (`indexzero`)\n\nv0.4.1 / Mon, 19 Sep 2011\n=========================\n\n\nv0.4.1 / Mon, 19 Sep 2011\n=========================\n  * [d334d07](https://github.com/projects/nconf/commit/d334d07) [dist] Version bump. 0.4.1 (`indexzero`)\n  * [a490c77](https://github.com/projects/nconf/commit/a490c77) [fix] Match case in `require` statements (`indexzero`)\n\nv0.4.0 / Sun, 18 Sep 2011\n=========================\n\n\nv0.4.0 / Sun, 18 Sep 2011\n=========================\n  * [0addce4](https://github.com/projects/nconf/commit/0addce4) [dist] Version bump. 0.4.0 (`indexzero`)\n  * [c4c8d7b](https://github.com/projects/nconf/commit/c4c8d7b) [doc] Updated docco docs (`indexzero`)\n  * [f867e74](https://github.com/projects/nconf/commit/f867e74) [dist] Remove unused test fixtures (`indexzero`)\n  * [1ef5797](https://github.com/projects/nconf/commit/1ef5797) [api test] Finished API and tests for hierarchical configuration storage. (`indexzero`)\n  * [7ef9b11](https://github.com/projects/nconf/commit/7ef9b11) [doc] Minor update to library `title` (`indexzero`)\n  * [a063880](https://github.com/projects/nconf/commit/a063880) [doc] Updated usage.js and README.md for the next hierarchical syntax. (`indexzero`)\n  * [da2da7a](https://github.com/projects/nconf/commit/da2da7a) [api test breaking refactor] Significant refactor to how nconf works. Now a fully hierarchical configuration storage mechanism capable of multiple levels of stores of the same type. (`indexzero`)\n  * [2bda7b6](https://github.com/projects/nconf/commit/2bda7b6) [api] Added `nconf.stores.System` (`indexzero`)\n\nv0.3.1 / Mon, 29 Aug 2011\n=========================\n\n\nv0.3.1 / Mon, 29 Aug 2011\n=========================\n  * [54ea095](https://github.com/projects/nconf/commit/54ea095) [dist] Version bump. 0.3.1 (`indexzero`)\n  * [e631d23](https://github.com/projects/nconf/commit/e631d23) [fix] Lazy-load any CLI arguments from `optimist` (`indexzero`)\n\nv0.3.0 / Sun, 28 Aug 2011\n=========================\n\n\nv0.3.0 / Sun, 28 Aug 2011\n=========================\n  * [8a31728](https://github.com/projects/nconf/commit/8a31728) [dist] Version bump. 0.3.0 (`indexzero`)\n  * [2e47d02](https://github.com/projects/nconf/commit/2e47d02) [doc] Updated README.md (`indexzero`)\n  * [954b5fd](https://github.com/projects/nconf/commit/954b5fd) [doc] Updated docco docs (`indexzero`)\n  * [fb392dd](https://github.com/projects/nconf/commit/fb392dd) [api test] Updated test/provider-test.js and associated merge implementation (`indexzero`)\n  * [e8904e9](https://github.com/projects/nconf/commit/e8904e9) [api] Added `nconf.loadFiles()` method (`indexzero`)\n  * [a6533aa](https://github.com/projects/nconf/commit/a6533aa) [dist api test] Finished integrating features from reconf and updating associated tests (`indexzero`)\n  * [add8922](https://github.com/projects/nconf/commit/add8922) [api dist] Begin to integrate features from reconf (`indexzero`)\n  * [57f0742](https://github.com/projects/nconf/commit/57f0742) [doc] Update README.md for nconf-redis (`indexzero`)\n\nv0.2.0 / Fri, 8 Jul 2011\n========================\n\n\nv0.2.0 / Fri, 8 Jul 2011\n========================\n  * [b6adab2](https://github.com/projects/nconf/commit/b6adab2) [dist] Version bump. 0.2.0 (`indexzero`)\n  * [8620e6b](https://github.com/projects/nconf/commit/8620e6b) [api test] Remove Redis store in preparation for nconf-redis (`indexzero`)\n  * [49a1a6d](https://github.com/projects/nconf/commit/49a1a6d) [dist] Added LICENSE (MIT ftw) (`indexzero`)\n\n0.1.14 / Sat, 25 Jun 2011\n=========================\n  * [d485f5e](https://github.com/projects/nconf/commit/d485f5e) [dist] Version bump. 0.1.14 (`indexzero`)\n  * [7e4623e](https://github.com/projects/nconf/commit/7e4623e) [api test] Update `nconf.Provider` to create a new instance of the store if the options are different (`indexzero`)\n\nv0.1.13 / Fri, 24 Jun 2011\n==========================\n\n\nv0.1.13 / Fri, 24 Jun 2011\n==========================\n  * [1b0f347](https://github.com/projects/nconf/commit/1b0f347) [dist] Version bump. 0.1.13 (`indexzero`)\n  * [d8b5a80](https://github.com/projects/nconf/commit/d8b5a80) [minor] Small style updates to the File store (`indexzero`)\n  * [c436851](https://github.com/projects/nconf/commit/c436851) [refactor]: Cleaned up error handling on File.loadSync and File.load [refactor]: Using path module to determine if file exists instead of throwing error [api]: File.load and File.loadSync will now automatically create the requested JSON file path if no file is found. (`Marak Squires`)\n  * [6c6887a](https://github.com/projects/nconf/commit/6c6887a) move callback outside of try / catch (`Dominic Tarr`)\n\nv0.1.12 / Wed, 8 Jun 2011\n=========================\n\n\nv0.1.12 / Wed, 8 Jun 2011\n=========================\n  * [ae5aec6](https://github.com/projects/nconf/commit/ae5aec6) [dist] Version bump. 0.1.12 (`indexzero`)\n  * [76db254](https://github.com/projects/nconf/commit/76db254) [fix test] Update nconf.stores.File to respond with an error when loading malformed JSON async (`indexzero`)\n\nv0.1.11 / Tue, 7 Jun 2011\n=========================\n\n\nv0.1.11 / Tue, 7 Jun 2011\n=========================\n  * [d7495f8](https://github.com/projects/nconf/commit/d7495f8) [dist] Version bump. 0.1.11 (`indexzero`)\n  * [4c7aea9](https://github.com/projects/nconf/commit/4c7aea9) [doc] Update docco docs (`indexzero`)\n  * [f611066](https://github.com/projects/nconf/commit/f611066) [dist] Update to pkginfo 0.2.0 (`indexzero`)\n\nv0.1.10 / Sun, 5 Jun 2011\n=========================\n\n\nv0.1.10 / Sun, 5 Jun 2011\n=========================\n  * [be76887](https://github.com/projects/nconf/commit/be76887) [dist] Version bump. 0.1.10 (`indexzero`)\n  * [7ffbf0a](https://github.com/projects/nconf/commit/7ffbf0a) [doc] Regenerate docco docs (`indexzero`)\n  * [13f5753](https://github.com/projects/nconf/commit/13f5753) [minor] Update `nconf.version` to use pkginfo (`indexzero`)\n  * [c9e60d9](https://github.com/projects/nconf/commit/c9e60d9) [doc] Update code docs (`indexzero`)\n  * [4459ba5](https://github.com/projects/nconf/commit/4459ba5) [api] Added `.merge()` to stores.Memory and stores.Redis (`indexzero`)\n  * [a4f00be](https://github.com/projects/nconf/commit/a4f00be) [dist] Update package.json and .gitignore (`indexzero`)\n  * [8a79ef0](https://github.com/projects/nconf/commit/8a79ef0) test retrieving non-existent keys and drilling into non-objects (`Sami Samhuri`)\n  * [6acc1fc](https://github.com/projects/nconf/commit/6acc1fc) allow storing null in redis (`Sami Samhuri`)\n  * [faa8ab9](https://github.com/projects/nconf/commit/faa8ab9) correctly retrieve falsy values from memory (hence file) (`Sami Samhuri`)\n  * [bdf2fc8](https://github.com/projects/nconf/commit/bdf2fc8) [fix] Fixed spelling error (`avian`)\n  * [e7c216e](https://github.com/projects/nconf/commit/e7c216e) [minor] Clarified error message returned when a config file contains invalid JSON. (`avian`)\n  * [e26bbe2](https://github.com/projects/nconf/commit/e26bbe2) [doc] Updated code samples for GitHub flavored markdown with Javascript (`indexzero`)\n\nv0.1.9 / Mon, 16 May 2011\n=========================\n\n\nv0.1.9 / Mon, 16 May 2011\n=========================\n  * [78202ec](https://github.com/projects/nconf/commit/78202ec) [dist] Version bump. 0.1.9 (`indexzero`)\n  * [87351ca](https://github.com/projects/nconf/commit/87351ca) [fix] Use the memory engine by default (`indexzero`)\n\nv0.1.8 / Mon, 16 May 2011\n=========================\n\n\nv0.1.8 / Mon, 16 May 2011\n=========================\n  * [badbb59](https://github.com/projects/nconf/commit/badbb59) [dist] Version bump. 0.1.8 (`indexzero`)\n  * [9da37df](https://github.com/projects/nconf/commit/9da37df) [dist api test] Refactor pluggable nconf-level logic into nconf.Provider. Update .gitignore for npm 1.0. Update pathing in source and tests to be more `require.paths` future-proof (`indexzero`)\n\nv0.1.7 / Wed, 20 Apr 2011\n=========================\n\n\nv0.1.7 / Wed, 20 Apr 2011\n=========================\n  * [4a61560](https://github.com/projects/nconf/commit/4a61560) [dist] Version bump. 0.1.7 (`indexzero`)\n  * [3b104f2](https://github.com/projects/nconf/commit/3b104f2) [doc] Update docco docs (`indexzero`)\n  * [d65922d](https://github.com/projects/nconf/commit/d65922d) [api] Add `.saveSync()` and `.loadSync()` methods to File store (`indexzero`)\n\nv0.1.6 / Tue, 19 Apr 2011\n=========================\n\n\nv0.1.6 / Tue, 19 Apr 2011\n=========================\n  * [b9951b4](https://github.com/projects/nconf/commit/b9951b4) [dist] Version bump. 0.1.6. (`indexzero`)\n  * [da85594](https://github.com/projects/nconf/commit/da85594) [doc] Update docco docs (`indexzero`)\n  * [067d58a](https://github.com/projects/nconf/commit/067d58a) [minor test] Add tests for File store `save()`. Improve default file format to pretty print the JSON output (`indexzero`)\n\nv0.1.5 / Wed, 13 Apr 2011\n=========================\n\n\nv0.1.5 / Wed, 13 Apr 2011\n=========================\n  * [96859f9](https://github.com/projects/nconf/commit/96859f9) [dist] Version bump. 0.1.5 (`indexzero`)\n  * [d99ab32](https://github.com/projects/nconf/commit/d99ab32) [fix] Dont allow `async.forEach` to be called on undefined or null arrays (`indexzero`)\n\nv0.1.4 / Tue, 5 Apr 2011\n========================\n\n\nv0.1.4 / Tue, 5 Apr 2011\n========================\n  * [7484fdb](https://github.com/projects/nconf/commit/7484fdb) [dist] Version bump. 0.1.4 (`indexzero`)\n  * [04a59e9](https://github.com/projects/nconf/commit/04a59e9) [fix] Supress errors from Redis (`indexzero`)\n\nv0.1.3 / Tue, 5 Apr 2011\n========================\n\n\nv0.1.3 / Tue, 5 Apr 2011\n========================\n  * [9bd6e26](https://github.com/projects/nconf/commit/9bd6e26) [dist] Version bump. 0.1.3 (`indexzero`)\n  * [4094125](https://github.com/projects/nconf/commit/4094125) [api] Add support for Redis auth and optional callbacks. (`indexzero`)\n\nv0.1.2 / Sun, 3 Apr 2011\n========================\n\n\nv0.1.2 / Sun, 3 Apr 2011\n========================\n  * [81e1883](https://github.com/projects/nconf/commit/81e1883) [dist] Version bump. 0.1.2 (`indexzero`)\n  * [b850ae2](https://github.com/projects/nconf/commit/b850ae2) [fix] Update path to require statement in Redis store (`indexzero`)\n\nv0.1.1 / Sat, 2 Apr 2011\n========================\n\n\nv0.1.1 / Sat, 2 Apr 2011\n========================\n  * [6f16bc7](https://github.com/projects/nconf/commit/6f16bc7) [dist] Version bump. 0.1.1 (`indexzero`)\n  * [752bb98](https://github.com/projects/nconf/commit/752bb98) [api] Improve the `.use()` method. Use the memory engine by default (`indexzero`)\n\nv0.1.0 / Sat, 2 Apr 2011\n========================\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0556640625,
          "content": "Copyright (C) 2011 Charlie Robbins and the Contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.1943359375,
          "content": "# nconf\n\n[![Version npm](https://img.shields.io/npm/v/nconf.svg?style=flat-square)](https://www.npmjs.com/package/nconf)[![npm Downloads](https://img.shields.io/npm/dm/nconf.svg?style=flat-square)](https://www.npmjs.com/package/nconf)[![Build Status](https://img.shields.io/travis/indexzero/nconf/master.svg?style=flat-square)](https://travis-ci.org/indexzero/nconf)[![Coverage](https://img.shields.io/coveralls/indexzero/nconf.svg?style=flat-square)](https://coveralls.io/github/indexzero/nconf)[![Dependencies](https://img.shields.io/david/indexzero/nconf.svg?style=flat-square)](https://david-dm.org/indexzero/nconf)\n\nHierarchical node.js configuration with files, environment variables, command-line arguments, and atomic object merging.\n\n## Example\nUsing nconf is easy; it is designed to be a simple key-value store with support for both local and remote storage. Keys are namespaced and delimited by `:`. Let's dive right into sample usage:\n\n``` js\n  // sample.js\n  var nconf = require('nconf');\n\n  //\n  // Setup nconf to use (in-order):\n  //   1. Command-line arguments\n  //   2. Environment variables\n  //   3. A file located at 'path/to/config.json'\n  //\n  nconf.argv()\n   .env()\n   .file({ file: 'path/to/config.json' });\n\n  //\n  // Set a few variables on `nconf`.\n  //\n  nconf.set('database:host', '127.0.0.1');\n  nconf.set('database:port', 5984);\n\n  //\n  // Get the entire database object from nconf. This will output\n  // { host: '127.0.0.1', port: 5984 }\n  //\n  console.log('foo: ' + nconf.get('foo'));\n  console.log('NODE_ENV: ' + nconf.get('NODE_ENV'));\n  console.log('database: ' + nconf.get('database'));\n\n  //\n  // Save the configuration object to disk\n  //\n  nconf.save(function (err) {\n    require('fs').readFile('path/to/your/config.json', function (err, data) {\n      console.dir(JSON.parse(data.toString()))\n    });\n  });\n```\n\nIf you run the below script:\n\n``` bash\n  $ NODE_ENV=production node sample.js --foo bar\n```\n\nThe output will be:\n\n```\n  foo: bar\n  NODE_ENV: production\n  database: { host: '127.0.0.1', port: 5984 }\n```\n\n## Hierarchical configuration\n\nConfiguration management can get complicated very quickly for even trivial applications running in production. `nconf` addresses this problem by enabling you to setup a hierarchy for different sources of configuration with no defaults. **The order in which you attach these configuration sources determines their priority in the hierarchy.** Let's take a look at the options available to you\n\n  1. **nconf.argv(options)** Loads `process.argv` using yargs. If `options` is supplied it is passed along to yargs.\n  2. **nconf.env(options)** Loads `process.env` into the hierarchy.\n  3. **nconf.file(options)** Loads the configuration data at options.file into the hierarchy.\n  4. **nconf.defaults(options)** Loads the data in options.store into the hierarchy.\n  5. **nconf.overrides(options)** Loads the data in options.store into the hierarchy.\n\nA sane default for this could be:\n\n``` js\n  var nconf = require('nconf');\n\n  //\n  // 1. any overrides\n  //\n  nconf.overrides({\n    'always': 'be this value'\n  });\n\n  //\n  // 2. `process.env`\n  // 3. `process.argv`\n  //\n  nconf.env().argv();\n\n  //\n  // 4. Values in `config.json`\n  //\n  nconf.file('/path/to/config.json');\n\n  //\n  // Or with a custom name\n  // Note: A custom key must be supplied for hierarchy to work if multiple files are used.\n  //\n  nconf.file('custom', '/path/to/config.json');\n\n  //\n  // Or searching from a base directory.\n  // Note: `name` is optional.\n  //\n  nconf.file(name, {\n    file: 'config.json',\n    dir: 'search/from/here',\n    search: true\n  });\n\n  //\n  // 5. Any default values\n  //\n  nconf.defaults({\n    'if nothing else': 'use this value'\n  });\n```\n\n## API Documentation\n\nThe top-level of `nconf` is an instance of the `nconf.Provider` abstracts this all for you into a simple API.\n\n### nconf.add(name, options)\nAdds a new store with the specified `name` and `options`. If `options.type` is not set, then `name` will be used instead:\n\n``` js\n  nconf.add('supplied', { type: 'literal', store: { 'some': 'config' } });\n  nconf.add('user', { type: 'file', file: '/path/to/userconf.json' });\n  nconf.add('global', { type: 'file', file: '/path/to/globalconf.json' });\n```\n\n### nconf.any(names, callback)\nGiven a set of key names, gets the value of the first key found to be truthy. The key names can be given as separate arguments\nor as an array. If the last argument is a function, it will be called with the result; otherwise, the value is returned.\n\n``` js\n  //\n  // Get one of 'NODEJS_PORT' and 'PORT' as a return value\n  //\n  var port = nconf.any('NODEJS_PORT', 'PORT');\n\n  //\n  // Get one of 'NODEJS_IP' and 'IPADDRESS' using a callback\n  //\n  nconf.any(['NODEJS_IP', 'IPADDRESS'], function(err, value) {\n    console.log('Connect to IP address ' + value);\n  });\n```\n\n### nconf.use(name, options)\nSimilar to `nconf.add`, except that it can replace an existing store if new options are provided\n\n``` js\n  //\n  // Load a file store onto nconf with the specified settings\n  //\n  nconf.use('file', { file: '/path/to/some/config-file.json' });\n\n  //\n  // Replace the file store with new settings\n  //\n  nconf.use('file', { file: 'path/to/a-new/config-file.json' });\n```\n\n### nconf.remove(name)\nRemoves the store with the specified `name.` The configuration stored at that level will no longer be used for lookup(s).\n\n``` js\n  nconf.remove('file');\n```\n\n### nconf.required(keys)\nDeclares a set of string keys to be mandatory, and throw an error if any are missing.\n\n``` js\n  nconf.defaults({\n    keya: 'a',\n  });\n\n  nconf.required(['keya', 'keyb']);\n  // Error: Missing required keys: keyb\n```\nYou can also chain `.required()` calls when needed. for example when a configuration depends on another configuration store\n\n```js\nconfig\n  .argv()\n  .env()\n  .required([ 'STAGE']) //here you should have STAGE otherwise throw an error\n  .file( 'stage', path.resolve( 'configs', 'stages', config.get( 'STAGE' ) + '.json' ) )\n  .required([ 'OAUTH:redirectURL']) // here you should have OAUTH:redirectURL, otherwise throw an error\n  .file( 'oauth', path.resolve( 'configs', 'oauth', config.get( 'OAUTH:MODE' ) + '.json' ) )\n  .file( 'app', path.resolve( 'configs', 'app.json' ) )\n  .required([ 'LOGS_MODE']) // here you should haveLOGS_MODE, otherwise throw an error\n  .add( 'logs', {\n    type: 'literal',\n    store: require( path.resolve( 'configs', 'logs', config.get( 'LOGS_MODE' ) + '.js') )\n  } )\n  .defaults( defaults );\n```\n\n## Storage Engines\n\n### Memory\nA simple in-memory storage engine that stores a nested JSON representation of the configuration. To use this engine, just call `.use()` with the appropriate arguments. All calls to `.get()`, `.set()`, `.clear()`, `.reset()` methods are synchronous since we are only dealing with an in-memory object.\n\nAll built-in storage engines inherit from the Memory store.\n\nBasic usage:\n\n``` js\n  nconf.use('memory');\n```\n\n#### Options\n\nThe options defined below apply to all storage engines that inherit from Memory.\n\n##### `accessSeparator: string` (default: `':'`)\nDefines the separator used to get or set data using the `get()` and `set()` methods. Even if this is changed, the default \"colon\" separator will be available unless explicitly disabled (see `disableDefaultAccessSeparator`).\n\n##### `inputSeparator: string` (default: `'__'`)\nThis option is used by the `argv` and `env` storage engines when loading values. Since most systems only allow dashes, underscores, and alphanumeric characters in environment variables and command line arguments, the `inputSeparator` provides a mechanism for loading hierarchical values from these sources.\n\n##### `disableDefaultAccessSeparator: {true|false}` (default: `false`)\nDisables the default access separator of `':'`, which is always available otherwise. This is mainly used to preserve legacy behavior. It can also be used to set keys that contain the default separator (e.g. `{ 'some:long:key' : 'some value' }`).\n\n### Argv\nResponsible for loading the values parsed from `process.argv` by `yargs` into the configuration hierarchy. See the [yargs option docs](https://github.com/bcoe/yargs#optionskey-opt) for more on the option format.\n\n#### Options\n\n##### `parseValues: {true|false}` (default: `false`)\nAttempt to parse well-known values (e.g. 'false', 'true', 'null', 'undefined', '3', '5.1' and JSON values)\ninto their proper types. If a value cannot be parsed, it will remain a string.\n\n##### `transform: function(obj)`\nPass each key/value pair to the specified function for transformation.\n\nThe input `obj` contains two properties passed in the following format:\n``` js\n{\n  key: '<string>',\n  value: '<string>'\n}\n```\n\nThe transformation function may alter both the key and the value.\n\nThe function may return either an object in the same format as the input or a value that evaluates to false.\nIf the return value is falsey, the entry will be dropped from the store, otherwise it will replace the original key/value.\n\n*Note: If the return value doesn't adhere to the above rules, an exception will be thrown.*\n\n#### Examples\n\n``` js\n  //\n  // Can optionally also be an object literal to pass to `yargs`.\n  //\n  nconf.argv({\n    \"x\": {\n      alias: 'example',\n      describe: 'Example description for usage generation',\n      demand: true,\n      default: 'some-value',\n      parseValues: true,\n      transform: function(obj) {\n        if (obj.key === 'foo') {\n          obj.value = 'baz';\n        }\n        return obj;\n      }\n    }\n  });\n```\n\nIt's also possible to pass a configured yargs instance\n\n``` js\n  nconf.argv(require('yargs')\n    .version('1.2.3')\n    .usage('My usage definition')\n    .strict()\n    .options({\n      \"x\": {\n        alias: 'example',\n        describe: 'Example description for usage generation',\n        demand: true,\n        default: 'some-value'\n      }\n    }));\n```\n\n### Env\nResponsible for loading the values parsed from `process.env` into the configuration hierarchy.\nBy default, the env variables values are loaded into the configuration as strings.\n\n#### Options\n\n##### `lowerCase: {true|false}` (default: `false`)\nConvert all input keys to lower case. Values are not modified.\n\nIf this option is enabled, all calls to `nconf.get()` must pass in a lowercase string (e.g. `nconf.get('port')`)\n\n##### `parseValues: {true|false}` (default: `false`)\nAttempt to parse well-known values (e.g. 'false', 'true', 'null', 'undefined', '3', '5.1' and JSON values)\ninto their proper types. If a value cannot be parsed, it will remain a string.\n\n##### `transform: function(obj)`\nPass each key/value pair to the specified function for transformation.\n\nThe input `obj` contains two properties passed in the following format:\n``` js\n{\n  key: '<string>',\n  value: '<string>'\n}\n```\n\nThe transformation function may alter both the key and the value.\n\nThe function may return either an object in the same format as the input or a value that evaluates to false.\nIf the return value is falsey, the entry will be dropped from the store, otherwise it will replace the original key/value.\n\n*Note: If the return value doesn't adhere to the above rules, an exception will be thrown.*\n\n#### `readOnly: {true|false}` (default: `true`)\nAllow values in the env store to be updated in the future. The default is to not allow items in the env store to be updated.\n\n#### Examples\n\n``` js\n  //\n  // Can optionally also be an Array of values to limit process.env to.\n  //\n  nconf.env(['only', 'load', 'these', 'values', 'from', 'process.env']);\n\n  //\n  // Can also specify an input separator for nested keys\n  //\n  nconf.env('__');\n  // Get the value of the env variable 'database__host'\n  var dbHost = nconf.get('database:host');\n\n  //\n  // Can also lowerCase keys.\n  // Especially handy when dealing with environment variables which are usually\n  // uppercased while argv are lowercased.\n  //\n\n  // Given an environment variable PORT=3001\n  nconf.env();\n  var port = nconf.get('port') // undefined\n\n  nconf.env({ lowerCase: true });\n  var port = nconf.get('port') // 3001\n\n  //\n  // Or use all options\n  //\n  nconf.env({\n    inputSeparator: '__',\n    match: /^whatever_matches_this_will_be_whitelisted/\n    whitelist: ['database__host', 'only', 'load', 'these', 'values', 'if', 'whatever_doesnt_match_but_is_whitelisted_gets_loaded_too'],\n    lowerCase: true,\n    parseValues: true,\n    transform: function(obj) {\n      if (obj.key === 'foo') {\n        obj.value = 'baz';\n      }\n      return obj;\n    }\n  });\n  var dbHost = nconf.get('database:host');\n```\n\n### Literal\nLoads a given object literal into the configuration hierarchy. Both `nconf.defaults()` and `nconf.overrides()` use the Literal store.\n\n``` js\n  nconf.defaults({\n    'some': 'default value'\n  });\n```\n\n### File\nBased on the Memory store, but provides additional methods `.save()` and `.load()` which allow you to read your configuration to and from file. As with the Memory store, all method calls are synchronous with the exception of `.save()` and `.load()` which take callback functions.\n\nIt is important to note that setting keys in the File engine will not be persisted to disk until a call to `.save()` is made. Note a custom key must be supplied as the first parameter for hierarchy to work if multiple files are used.\n\n``` js\n  nconf.file('path/to/your/config.json');\n  // add multiple files, hierarchically. notice the unique key for each file\n  nconf.file('user', 'path/to/your/user.json');\n  nconf.file('global', 'path/to/your/global.json');\n```\n\nThe file store is also extensible for multiple file formats, defaulting to `JSON`. To use a custom format, simply pass a format object to the `.use()` method. This object must have `.parse()` and `.stringify()` methods just like the native `JSON` object.\n\nIf the file does not exist at the provided path, the store will simply be empty.\n\n#### Encrypting file contents\n\nAs of `nconf@0.8.0` it is now possible to encrypt and decrypt file contents using the `secure` option:\n\n``` js\nnconf.file('secure-file', {\n  file: 'path/to/secure-file.json',\n  secure: {\n    secret: 'super-secretzzz-keyzz',\n    alg: 'aes-256-ctr'\n  }\n})\n```\n\nThis will encrypt each key using [`crypto.createCipheriv`](https://nodejs.org/api/crypto.html#crypto_crypto_createcipheriv_algorithm_key_iv_options), defaulting to `aes-256-ctr`. The encrypted file contents will look like this:\n\n``` js\n{\n  \"config-key-name\": {\n    \"alg\": \"aes-256-ctr\", // cipher used\n    \"value\": \"af07fbcf\",   // encrypted contents\n    \"iv\": \"49e7803a2a5ef98c7a51a8902b76dd10\" // initialization vector\n  },\n  \"another-config-key\": {\n    \"alg\": \"aes-256-ctr\",   // cipher used\n    \"value\": \"e310f6d94f13\", // encrypted contents\n    \"iv\": \"b654e01aed262f37d0acf200be193985\" // initialization vector\n  },\n}\n```\n\n### Redis\nThere is a separate Redis-based store available through [nconf-redis][0]. To install and use this store simply:\n\n``` bash\n  $ npm install nconf\n  $ npm install nconf-redis\n```\n\nOnce installing both `nconf` and `nconf-redis`, you must require both modules to use the Redis store:\n\n``` js\n  var nconf = require('nconf');\n\n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n\n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000 });\n```\n\n## Installation\n``` bash\n  npm install nconf --save\n```\n\n## Run Tests\nTests are written in vows and give complete coverage of all APIs and storage engines.\n\n``` bash\n  $ npm test\n```\n\n#### Author: [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://github.com/indexzero/nconf-redis\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.203125,
          "content": "{\n  \"name\": \"nconf\",\n  \"description\": \"Hierarchical node.js configuration with files, environment variables, command-line arguments, and atomic object merging.\",\n  \"version\": \"1.0.0-beta.0\",\n  \"author\": \"Charlie Robbins <charlie.robbins@gmail.com>\",\n  \"contributors\": [\n    \"Matt Hamann <matthew.hamann@gmail.com>\",\n    \"Maciej Małecki <me@mmalecki.com>\",\n    \"Jarrett Cruger <jcrugzz@gmail.com>\",\n    \"Adrien Becchis\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"http://github.com/flatiron/nconf.git\"\n  },\n  \"keywords\": [\n    \"configuration\",\n    \"key value store\",\n    \"plugabble\"\n  ],\n  \"dependencies\": {\n    \"ini\": \"^2.0.0\",\n    \"yargs\": \"^17.0.0\"\n  },\n  \"devDependencies\": {\n    \"@release-it/conventional-changelog\": \"^7.0.2\",\n    \"async\": \"^3.0.0\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^8.0.0\",\n    \"istanbul\": \"^0.4.1\",\n    \"jest\": \"^27.0.0\",\n    \"nconf-yaml\": \"^1.0.2\",\n    \"release-it\": \"^16.2.1\"\n  },\n  \"main\": \"./lib/nconf\",\n  \"scripts\": {\n    \"test\": \"jest --verbose\",\n    \"cover\": \"jest --coverage\",\n    \"coveralls\": \"cat coverage/lcov.info | coveralls\",\n    \"lint\": \"eslint .\",\n    \"release\": \"release-it\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"engines\": {\n    \"node\": \">= 0.4.0\"\n  },\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.3935546875,
          "content": "{\n  \"extends\": [\"config:base\"],\n\n  \"platform\": \"github\",\n  \"autodiscover\": false,\n  \"requireConfig\": true,\n\n  \"ignoreNpmrcFile\": true,\n  \"rangeStrategy\": \"replace\",\n\n  \"packageRules\": [\n    {\n      \"packagePatterns\": [\n        \"*\"\n      ],\n      \"minor\": {\n        \"groupName\": \"all non-major dependencies\",\n        \"groupSlug\": \"all-minor-patch\"\n      }\n    }\n  ],\n\n  \"commitMessagePrefix\": \"[dist]\"\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "usage.js",
          "type": "blob",
          "size": 1.2177734375,
          "content": "var fs    = require('fs'),\n    path  = require('path'),\n    nconf = require('./lib/nconf');\n\n//\n// Configure the provider with a single store and\n// support for command-line arguments and environment\n// variables.\n//\nvar single = new nconf.Provider({\n  env: true,\n  argv: true,\n  store: {\n    type: 'file',\n    file: path.join(__dirname, 'config.json')\n  }\n});\n\n//\n// Configure the provider with multiple hierarchical stores\n// representing `user` and `global` configuration values.\n//\nvar multiple = new nconf.Provider({\n  stores: [\n    { name: 'user', type: 'file', file: path.join(__dirname, 'user-config.json') },\n    { name: 'global', type: 'global', file: path.join(__dirname, 'global-config.json') }\n  ]\n});\n\n//\n// Setup nconf to use the 'file' store and set a couple of values;\n//\nnconf.use('file', { file: path.join(__dirname, 'config.json') });\nnconf.set('database:host', '127.0.0.1');\nnconf.set('database:port', 5984);\n\n//\n// Get the entire database object from nconf\n//\nvar database = nconf.get('database');\nconsole.dir(database);\n\n//\n// Save the configuration object to disk\n//\nnconf.save(function (err) {\n  fs.readFile(path.join(__dirname, 'config.json'), function (err, data) {\n    console.dir(JSON.parse(data.toString()))\n  });\n});"
        }
      ]
    }
  ]
}