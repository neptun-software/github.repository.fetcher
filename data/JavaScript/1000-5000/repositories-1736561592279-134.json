{
  "metadata": {
    "timestamp": 1736561592279,
    "page": 134,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Strider-CD/strider",
      "stars": 4601,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1279296875,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\ncharset = utf-8\ntrim_trailing_whitespace = false\ninsert_final_newline = false"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.7333984375,
          "content": "# Don't allow people to merge changes to these generated files, because the result\r\n# may be invalid.  You need to run \"rush update\" again.\r\npnpm-lock.yaml               merge=binary\r\nshrinkwrap.yaml              merge=binary\r\nnpm-shrinkwrap.json          merge=binary\r\nyarn.lock                    merge=binary\r\n\r\n# Rush's JSON config files use JavaScript-style code comments.  The rule below prevents pedantic\r\n# syntax highlighters such as GitHub's from highlighting these comments as errors.  Your text editor\r\n# may also require a special configuration to allow comments in JSON.\r\n#\r\n# For more information, see this issue: https://github.com/microsoft/rushstack/issues/1088\r\n#\r\n*.json                       linguist-language=JSON-with-Comments\r\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0322265625,
          "content": "# Logs\r\n*.log\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n\r\n# Runtime data\r\n*.pid\r\n*.seed\r\n*.pid.lock\r\n\r\n# Directory for instrumented libs generated by jscoverage/JSCover\r\nlib-cov\r\n\r\n# Coverage directory used by tools like istanbul\r\ncoverage\r\n\r\n# nyc test coverage\r\n.nyc_output\r\n\r\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\r\n.grunt\r\n\r\n# Bower dependency directory (https://bower.io/)\r\nbower_components\r\n\r\n# node-waf configuration\r\n.lock-wscript\r\n\r\n# Compiled binary addons (https://nodejs.org/api/addons.html)\r\nbuild/Release\r\n\r\n# Dependency directories\r\nnode_modules/\r\njspm_packages/\r\n\r\n# Optional npm cache directory\r\n.npm\r\n\r\n# Optional eslint cache\r\n.eslintcache\r\n\r\n# Optional REPL history\r\n.node_repl_history\r\n\r\n# Output of 'npm pack'\r\n*.tgz\r\n\r\n# Yarn Integrity file\r\n.yarn-integrity\r\n\r\n# dotenv environment variables file\r\n.env\r\n\r\n# next.js build output\r\n.next\r\n\r\n# OS X temporary files\r\n.DS_Store\r\n\r\n# Rush temporary files\r\ncommon/deploy/\r\ncommon/temp/\r\ncommon/autoinstallers/*/.npmrc\r\n**/.rush/temp/\r\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6357421875,
          "content": "language: node_js\r\nnode_js:\r\n  - \"10.13.0\"\r\nscript:\r\n  - set -e\r\n\r\n  - echo 'Checking for missing change logs...' && echo -en 'travis_fold:start:change\\\\r'\r\n  - git fetch origin master:refs/remotes/origin/master -a\r\n  - node common/scripts/install-run-rush.js change -v\r\n  - echo -en 'travis_fold:end:change\\\\r'\r\n\r\n  - echo 'Installing...' && echo -en 'travis_fold:start:install\\\\r'\r\n  - node common/scripts/install-run-rush.js install\r\n  - echo -en 'travis_fold:end:install\\\\r'\r\n\r\n  - echo 'Building...' && echo -en 'travis_fold:start:build\\\\r'\r\n  - node common/scripts/install-run-rush.js rebuild --verbose\r\n  - echo -en 'travis_fold:end:build\\\\r'\r\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.140625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at hello@stridercd.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.341796875,
          "content": "Contributing\n============\n\nBelow are the guidelines for getting started when contributing to Strider\nand any related plugins. Contributions don't need to be code based, you are\nencouraged to help out with issues by answering questions or just following up.\nWe also have documentation that needs to be written/updated, so feel free to contribute\nthere as well.\n\n## Technology Stack\n\nHere are the technologies to be familiar with:\n- [ember](https://emberjs.com) see clients/strider-ui\n- [tailwind](https://tailwindcss.com)\n- [express](http://expressjs.com)\n- [angular](http://angularjs.com) legacy, see apps/strider/client\n  - [less css](http://lesscss.org) legacy\n  - [twitter bootstrap](http://twitter.github.io/bootstrap) legacy\n\n## Setup\n\nHow to get setup (if you're using docker, see the [Docker section in the README][docker], you can skip this):\n\n- grab the repo\n- Install Rush (https://rushjs.io/pages/intro/get_started/)\n- `rush install`\n- `cd apps/strider && bower install`\n- `rush build` or `rush watch`\n- run the tests with `npm test` to make sure your environment is setup\n  properly. If you don't have it already, install\n  [mongodb]. You could also\n  develop using an externally hosted mongodb if you want, just set `DB_URI`.\n\n## Troubleshooting\n\n- Issues with `rush install`\nRun `rush purge` and delete the `common/config/rush/pnpm-lock.yaml`, than run `rush update`\n\n## Making Code Contributions\n\n**Note:**: **Don't** make changes to the compiled files in the `dist/` directory, those\nare generated by using `rush build` or `rush watch`. Most of the relavent files are\neither in `clients/strider-ui/app` or `apps/strider/lib/` directories and that's where your changes should happen.\n\n### Client-Side Dependencies\n\nUse of Bower is legacy and no new items should be added for bower.\n\nAfter installing Bower dependencies, make sure that `npm run vendor` copies all the needed files.\nIf not, you can add the needed files in the `\"install\"` section of `bower.json`.\n\n## Pull Requests\n\nBefore submitting pull requests, please run `npm test` to make sure you didn't\nbreak anything. If you're adding or changing backend functionality, include tests.\n\nIf you're adding or changing the front-end, please include one or more\nexplanatory screenshots in the pull request.\n\n[docker]: https://github.com/Strider-CD/strider#docker-quickstart\n[mongodb]: http://docs.mongodb.org/manual/installation/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.6455078125,
          "content": "# ![Strider][logo]\n\n![Strider Screenshot][screenshot]\n\n---\n\n[![NPM][npm-badge-img]][npm-badge-link] [![Code Climate][cc-badge]][cc-badge-link] [![Dependency Status][david-badge]][david-badge-link] [![Build Status][travis-badge]][travis-badge-link]  \n[![Gitter][gitter-badge]][gitter-badge-link]\n[![Backers on Open Collective][backers-badge-img]](#backers)\n[![Sponsors on Open Collective][sponsors-badge-img]](#sponsors)\n\n# Overview\n\n`Strider` is an Open Source Continuous Deployment / Continuous Integration\nplatform. It is written in Node.js and Ember.js and uses MongoDB as a backing\nstore. It is published under the BSD license.\n\nStrider is extremely customizable through plugins.\n\n## Getting Started\n\nCheck out the [guides](http://strider-cd.github.io/) or see the [strider app README](apps/strider/README.md) for additional instructions.  \nFor live help check out Strider's [Gitter].\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/strider#backer)]\n\n<a href=\"https://opencollective.com/strider/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/backer/29/avatar.svg\"></a>\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/strider#sponsor)]\n\n<a href=\"https://opencollective.com/strider/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/strider/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/strider/sponsor/29/avatar.svg\"></a>\n\n## Support & Help\n\nWe are responsive to Github Issues - please don't hesitate submitting your issues here!\n\nFor live help check out Strider's [Gitter].\n\n## Contributing\n\nSee the [Contributing guide](./CONTRIBUTING.md).\n\n[logo]: https://raw.github.com/Strider-CD/strider/master/apps/strider/public/images/top_github.png\n[build-img]: http://public-ci.stridercd.com/Strider-CD/strider/badge\n[build-link]: https://public-ci.stridercd.com/Strider-CD/strider\n[dep-img]: https://david-dm.org/Strider-CD/strider.svg\n[dep-link]: https://david-dm.org/Strider-CD/strider\n[dev-dep-img]: https://david-dm.org/Strider-CD/strider/dev-status.svg\n[dev-dep-link]: https://david-dm.org/Strider-CD/strider#info=devDependencies\n[npm-badge-img]: https://badge.fury.io/js/strider.svg\n[npm-badge-link]: http://badge.fury.io/js/strider\n[backers-badge-img]: https://opencollective.com/strider/backers/badge.svg\n[sponsors-badge-img]: https://opencollective.com/strider/sponsors/badge.svg\n[screenshot]: /apps/website/docs/screenshots/job.png\n[cc-badge]: https://codeclimate.com/github/Strider-CD/strider/badges/gpa.svg\n[cc-badge-link]: https://codeclimate.com/github/Strider-CD/strider\n[david-badge]: https://david-dm.org/Strider-CD/strider.svg\n[david-badge-link]: https://david-dm.org/Strider-CD/strider\n[body-parser]: https://github.com/expressjs/body-parser\n[gitter]: https://gitter.im/Strider-CD\n[travis-badge]: https://travis-ci.org/Strider-CD/strider.svg?branch=master\n[travis-badge-link]: https://travis-ci.org/Strider-CD/strider\n[gitter-badge]: https://img.shields.io/badge/GITTER-join%20chat-green.svg\n[gitter-badge-link]: https://gitter.im/Strider-CD/strider\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "rush.json",
          "type": "blob",
          "size": 20.1298828125,
          "content": "/**\r\n * This is the main configuration file for Rush.\r\n * For full documentation, please see https://rushjs.io\r\n */\r\n{\r\n  \"$schema\": \"https://developer.microsoft.com/json-schemas/rush/v5/rush.schema.json\",\r\n\r\n  /**\r\n   * (Required) This specifies the version of the Rush engine to be used in this repo.\r\n   * Rush's \"version selector\" feature ensures that the globally installed tool will\r\n   * behave like this release, regardless of which version is installed globally.\r\n   *\r\n   * The common/scripts/install-run-rush.js automation script also uses this version.\r\n   *\r\n   * NOTE: If you upgrade to a new major version of Rush, you should replace the \"v5\"\r\n   * path segment in the \"$schema\" field for all your Rush config files.  This will ensure\r\n   * correct error-underlining and tab-completion for editors such as VS Code.\r\n   */\r\n  \"rushVersion\": \"5.27.3\",\r\n\r\n  /**\r\n   * The next field selects which package manager should be installed and determines its version.\r\n   * Rush installs its own local copy of the package manager to ensure that your build process\r\n   * is fully isolated from whatever tools are present in the local environment.\r\n   *\r\n   * Specify one of: \"pnpmVersion\", \"npmVersion\", or \"yarnVersion\".  See the Rush documentation\r\n   * for details about these alternatives.\r\n   */\r\n  \"pnpmVersion\": \"4.12.5\",\r\n\r\n  // \"npmVersion\": \"4.5.0\",\r\n  // \"yarnVersion\": \"1.9.4\",\r\n\r\n  /**\r\n   * Options that are only used when the PNPM package manager is selected\r\n   */\r\n  \"pnpmOptions\": {\r\n    /**\r\n     * Specifies the location of the PNPM store.  There are two possible values:\r\n     *\r\n     * - \"local\" - use the \"pnpm-store\" folder in the current configured temp folder:\r\n     *   \"common/temp/pnpm-store\" by default.\r\n     * - \"global\" - use PNPM's global store, which has the benefit of being shared\r\n     *    across multiple repo folders, but the disadvantage of less isolation for builds\r\n     *    (e.g. bugs or incompatibilities when two repos use different releases of PNPM)\r\n     *\r\n     * RUSH_PNPM_STORE_PATH will override the directory that will be used as the store\r\n     *\r\n     * In all cases, the store path will be overridden by the environment variable RUSH_PNPM_STORE_PATH.\r\n     *\r\n     * The default value is \"local\".\r\n     */\r\n    // \"pnpmStore\": \"local\",\r\n    /**\r\n     * If true, then Rush will add the \"--strict-peer-dependencies\" option when invoking PNPM.\r\n     * This causes \"rush install\" to fail if there are unsatisfied peer dependencies, which is\r\n     * an invalid state that can cause build failures or incompatible dependency versions.\r\n     * (For historical reasons, JavaScript package managers generally do not treat this invalid\r\n     * state as an error.)\r\n     *\r\n     * The default value is false to avoid legacy compatibility issues.\r\n     * It is strongly recommended to set strictPeerDependencies=true.\r\n     */\r\n    // \"strictPeerDependencies\": true,\r\n    /**\r\n     * Configures the strategy used to select versions during installation.\r\n     *\r\n     * This feature requires PNPM version 3.1 or newer.  It corresponds to the \"--resolution-strategy\" command-line\r\n     * option for PNPM.  Possible values are \"fast\" and \"fewer-dependencies\".  PNPM's default is \"fast\", but this may\r\n     * be incompatible with certain packages, for example the \"@types\" packages from DefinitelyTyped.  Rush's default\r\n     * is \"fewer-dependencies\", which causes PNPM to avoid installing a newer version if an already installed version\r\n     * can be reused; this is more similar to NPM's algorithm.\r\n     *\r\n     * After modifying this field, it's recommended to run \"rush update --full\" so that the package manager\r\n     * will recalculate all version selections.\r\n     */\r\n    // \"resolutionStrategy\": \"fast\",\r\n    /**\r\n     * If true, then `rush install` will report an error if manual modifications\r\n     * were made to the PNPM shrinkwrap file without running \"rush update\" afterwards.\r\n     *\r\n     * This feature protects against accidental inconsistencies that may be introduced\r\n     * if the PNPM shrinkwrap file (\"pnpm-lock.yaml\") is manually edited.  When this\r\n     * feature is enabled, \"rush update\" will append a hash to the file as a YAML comment,\r\n     * and then \"rush update\" and \"rush install\" will validate the hash.  Note that this does not prohibit\r\n     * manual modifications, but merely requires \"rush update\" be run\r\n     * afterwards, ensuring that PNPM can report or repair any potential inconsistencies.\r\n     *\r\n     * To temporarily disable this validation when invoking \"rush install\", use the\r\n     * \"--bypass-policy\" command-line parameter.\r\n     *\r\n     * The default value is false.\r\n     */\r\n    // \"preventManualShrinkwrapChanges\": true\r\n  },\r\n\r\n  /**\r\n   * Older releases of the Node.js engine may be missing features required by your system.\r\n   * Other releases may have bugs.  In particular, the \"latest\" version will not be a\r\n   * Long Term Support (LTS) version and is likely to have regressions.\r\n   *\r\n   * Specify a SemVer range to ensure developers use a Node.js version that is appropriate\r\n   * for your repo.\r\n   */\r\n  \"nodeSupportedVersionRange\": \">=10.13.0 <15.0.0\",\r\n\r\n  /**\r\n   * Odd-numbered major versions of Node.js are experimental.  Even-numbered releases\r\n   * spend six months in a stabilization period before the first Long Term Support (LTS) version.\r\n   * For example, 8.9.0 was the first LTS version of Node.js 8.  Pre-LTS versions are not recommended\r\n   * for production usage because they frequently have bugs.  They may cause Rush itself\r\n   * to malfunction.\r\n   *\r\n   * Rush normally prints a warning if it detects a pre-LTS Node.js version.  If you are testing\r\n   * pre-LTS versions in preparation for supporting the first LTS version, you can use this setting\r\n   * to disable Rush's warning.\r\n   */\r\n  // \"suppressNodeLtsWarning\": false,\r\n\r\n  /**\r\n   * If you would like the version specifiers for your dependencies to be consistent, then\r\n   * uncomment this line. This is effectively similar to running \"rush check\" before any\r\n   * of the following commands:\r\n   *\r\n   *   rush install, rush update, rush link, rush version, rush publish\r\n   *\r\n   * In some cases you may want this turned on, but need to allow certain packages to use a different\r\n   * version. In those cases, you will need to add an entry to the \"allowedAlternativeVersions\"\r\n   * section of the common-versions.json.\r\n   */\r\n  // \"ensureConsistentVersions\": true,\r\n\r\n  /**\r\n   * Large monorepos can become intimidating for newcomers if project folder paths don't follow\r\n   * a consistent and recognizable pattern.  When the system allows nested folder trees,\r\n   * we've found that teams will often use subfolders to create islands that isolate\r\n   * their work from others (\"shipping the org\").  This hinders collaboration and code sharing.\r\n   *\r\n   * The Rush developers recommend a \"category folder\" model, where buildable project folders\r\n   * must always be exactly two levels below the repo root.  The parent folder acts as the category.\r\n   * This provides a basic facility for grouping related projects (e.g. \"apps\", \"libaries\",\r\n   * \"tools\", \"prototypes\") while still encouraging teams to organize their projects into\r\n   * a unified taxonomy.  Limiting to 2 levels seems very restrictive at first, but if you have\r\n   * 20 categories and 20 projects in each category, this scheme can easily accommodate hundreds\r\n   * of projects.  In practice, you will find that the folder hierarchy needs to be rebalanced\r\n   * occasionally, but if that's painful, it's a warning sign that your development style may\r\n   * discourage refactoring.  Reorganizing the categories should be an enlightening discussion\r\n   * that brings people together, and maybe also identifies poor coding practices (e.g. file\r\n   * references that reach into other project's folders without using Node.js module resolution).\r\n   *\r\n   * The defaults are projectFolderMinDepth=1 and projectFolderMaxDepth=2.\r\n   *\r\n   * To remove these restrictions, you could set projectFolderMinDepth=1\r\n   * and set projectFolderMaxDepth to a large number.\r\n   */\r\n  // \"projectFolderMinDepth\": 2,\r\n  // \"projectFolderMaxDepth\": 2,\r\n\r\n  /**\r\n   * Today the npmjs.com registry enforces fairly strict naming rules for packages, but in the early\r\n   * days there was no standard and hardly any enforcement.  A few large legacy projects are still using\r\n   * nonstandard package names, and private registries sometimes allow it.  Set \"allowMostlyStandardPackageNames\"\r\n   * to true to relax Rush's enforcement of package names.  This allows upper case letters and in the future may\r\n   * relax other rules, however we want to minimize these exceptions.  Many popular tools use certain punctuation\r\n   * characters as delimiters, based on the assumption that they will never appear in a package name; thus if we relax\r\n   * the rules too much it is likely to cause very confusing malfunctions.\r\n   *\r\n   * The default value is false.\r\n   */\r\n  // \"allowMostlyStandardPackageNames\": true,\r\n\r\n  /**\r\n   * This feature helps you to review and approve new packages before they are introduced\r\n   * to your monorepo.  For example, you may be concerned about licensing, code quality,\r\n   * performance, or simply accumulating too many libraries with overlapping functionality.\r\n   * The approvals are tracked in two config files \"browser-approved-packages.json\"\r\n   * and \"nonbrowser-approved-packages.json\".  See the Rush documentation for details.\r\n   */\r\n  // \"approvedPackagesPolicy\": {\r\n  //   /**\r\n  //    * The review categories allow you to say for example \"This library is approved for usage\r\n  //    * in prototypes, but not in production code.\"\r\n  //    *\r\n  //    * Each project can be associated with one review category, by assigning the \"reviewCategory\" field\r\n  //    * in the \"projects\" section of rush.json.  The approval is then recorded in the files\r\n  //    * \"common/config/rush/browser-approved-packages.json\" and \"nonbrowser-approved-packages.json\"\r\n  //    * which are automatically generated during \"rush update\".\r\n  //    *\r\n  //    * Designate categories with whatever granularity is appropriate for your review process,\r\n  //    * or you could just have a single category called \"default\".\r\n  //    */\r\n  //   \"reviewCategories\": [\r\n  //     // Some example categories:\r\n  //     \"production\", // projects that ship to production\r\n  //     \"tools\",      // non-shipping projects that are part of the developer toolchain\r\n  //     \"prototypes\"  // experiments that should mostly be ignored by the review process\r\n  //   ],\r\n  //\r\n  //   /**\r\n  //    * A list of NPM package scopes that will be excluded from review.\r\n  //    * We recommend to exclude TypeScript typings (the \"@types\" scope), because\r\n  //    * if the underlying package was already approved, this would imply that the typings\r\n  //    * are also approved.\r\n  //    */\r\n  //   // \"ignoredNpmScopes\": [\"@types\"]\r\n  // },\r\n\r\n  /**\r\n   * If you use Git as your version control system, this section has some additional\r\n   * optional features you can use.\r\n   */\r\n  \"gitPolicy\": {\r\n    /**\r\n     * Work at a big company?  Tired of finding Git commits at work with unprofessional Git\r\n     * emails such as \"beer-lover@my-college.edu\"?  Rush can validate people's Git email address\r\n     * before they get started.\r\n     *\r\n     * Define a list of regular expressions describing allowable e-mail patterns for Git commits.\r\n     * They are case-insensitive anchored JavaScript RegExps.  Example: \".*@example\\.com\"\r\n     *\r\n     * IMPORTANT: Because these are regular expressions encoded as JSON string literals,\r\n     * RegExp escapes need two backspashes, and ordinary periods should be \"\\\\.\".\r\n     */\r\n    // \"allowedEmailRegExps\": [\r\n    //   \"[^@]+@users\\\\.noreply\\\\.github\\\\.com\",\r\n    //   \"travis@example\\\\.org\"\r\n    // ],\r\n    /**\r\n     * When Rush reports that the address is malformed, the notice can include an example\r\n     * of a recommended email.  Make sure it conforms to one of the allowedEmailRegExps\r\n     * expressions.\r\n     */\r\n    // \"sampleEmail\": \"mrexample@users.noreply.github.com\",\r\n    /**\r\n     * The commit message to use when committing changes during 'rush publish'.\r\n     *\r\n     * For example, if you want to prevent these commits from triggering a CI build,\r\n     * you might configure your system's trigger to look for a special string such as \"[skip-ci]\"\r\n     * in the commit message, and then customize Rush's message to contain that string.\r\n     */\r\n    // \"versionBumpCommitMessage\": \"Applying package updates. [skip-ci]\"\r\n  },\r\n\r\n  \"repository\": {\r\n    /**\r\n     * The URL of this Git repository, used by \"rush change\" to determine the base branch for your PR.\r\n     *\r\n     * The \"rush change\" command needs to determine which files are affected by your PR diff.\r\n     * If you merged or cherry-picked commits from the master branch into your PR branch, those commits\r\n     * should be excluded from this diff (since they belong to some other PR).  In order to do that,\r\n     * Rush needs to know where to find the base branch for your PR.  This information cannot be\r\n     * determined from Git alone, since the \"pull request\" feature is not a Git concept.  Ideally\r\n     * Rush would use a vendor-specific protocol to query the information from GitHub, Azure DevOps, etc.\r\n     * But to keep things simple, \"rush change\" simply assumes that your PR is against the \"master\" branch\r\n     * of the Git remote indicated by the repository.url setting in rush.json.  If you are working in\r\n     * a GitHub \"fork\" of the real repo, this setting will be different from the repository URL of your\r\n     * your PR branch, and in this situation \"rush change\" will also automatically invoke \"git fetch\"\r\n     * to retrieve the latest activity for the remote master branch.\r\n     */\r\n    \"url\": \"git@github.com:Strider-CD/strider.git\"\r\n    /**\r\n     * The default branch name. This tells \"rush change\" which remote branch to compare against.\r\n     * The default value is \"master\"\r\n     */\r\n    // \"defaultBranch\": \"master\",\r\n    /**\r\n     * The default remote. This tells \"rush change\" which remote to compare against if the remote URL is\r\n     * not set or if a remote matching the provided remote URL is not found.\r\n     */\r\n    // \"defaultRemote\": \"origin\"\r\n  },\r\n\r\n  /**\r\n   * Event hooks are customized script actions that Rush executes when specific events occur\r\n   */\r\n  \"eventHooks\": {\r\n    /**\r\n     * The list of shell commands to run before the Rush installation starts\r\n     */\r\n    \"preRushInstall\": [\r\n      // \"common/scripts/pre-rush-install.js\"\r\n    ],\r\n\r\n    /**\r\n     * The list of shell commands to run after the Rush installation finishes\r\n     */\r\n    \"postRushInstall\": [],\r\n\r\n    /**\r\n     * The list of shell commands to run before the Rush build command starts\r\n     */\r\n    \"preRushBuild\": [],\r\n\r\n    /**\r\n     * The list of shell commands to run after the Rush build command finishes\r\n     */\r\n    \"postRushBuild\": []\r\n  },\r\n\r\n  /**\r\n   * Installation variants allow you to maintain a parallel set of configuration files that can be\r\n   * used to build the entire monorepo with an alternate set of dependencies.  For example, suppose\r\n   * you upgrade all your projects to use a new release of an important framework, but during a transition period\r\n   * you intend to maintain compability with the old release.  In this situation, you probably want your\r\n   * CI validation to build the entire repo twice: once with the old release, and once with the new release.\r\n   *\r\n   * Rush \"installation variants\" correspond to sets of config files located under this folder:\r\n   *\r\n   *   common/config/rush/variants/<variant_name>\r\n   *\r\n   * The variant folder can contain an alternate common-versions.json file.  Its \"preferredVersions\" field can be used\r\n   * to select older versions of dependencies (within a loose SemVer range specified in your package.json files).\r\n   * To install a variant, run \"rush install --variant <variant_name>\".\r\n   *\r\n   * For more details and instructions, see this article:  https://rushjs.io/pages/advanced/installation_variants/\r\n   */\r\n  \"variants\": [\r\n    // {\r\n    //   /**\r\n    //    * The folder name for this variant.\r\n    //    */\r\n    //   \"variantName\": \"old-sdk\",\r\n    //\r\n    //   /**\r\n    //    * An informative description\r\n    //    */\r\n    //   \"description\": \"Build this repo using the previous release of the SDK\"\r\n    // }\r\n  ],\r\n\r\n  /**\r\n   * Rush can collect anonymous telemetry about everyday developer activity such as\r\n   * success/failure of installs, builds, and other operations.  You can use this to identify\r\n   * problems with your toolchain or Rush itself.  THIS TELEMETRY IS NOT SHARED WITH MICROSOFT.\r\n   * It is written into JSON files in the common/temp folder.  It's up to you to write scripts\r\n   * that read these JSON files and do something with them.  These scripts are typically registered\r\n   * in the \"eventHooks\" section.\r\n   */\r\n  // \"telemetryEnabled\": false,\r\n\r\n  /**\r\n   * Allows creation of hotfix changes. This feature is experimental so it is disabled by default.\r\n   * If this is set, 'rush change' only allows a 'hotfix' change type to be specified. This change type\r\n   * will be used when publishing subsequent changes from the monorepo.\r\n   */\r\n  // \"hotfixChangeEnabled\": false,\r\n\r\n  /**\r\n   * (Required) This is the inventory of projects to be managed by Rush.\r\n   *\r\n   * Rush does not automatically scan for projects using wildcards, for a few reasons:\r\n   * 1. Depth-first scans are expensive, particularly when tools need to repeatedly collect the list.\r\n   * 2. On a caching CI machine, scans can accidentally pick up files left behind from a previous build.\r\n   * 3. It's useful to have a centralized inventory of all projects and their important metadata.\r\n   */\r\n  \"projects\": [\r\n    // {\r\n    //   /**\r\n    //    * The NPM package name of the project (must match package.json)\r\n    //    */\r\n    //   \"packageName\": \"my-app\",\r\n    //\r\n    //   /**\r\n    //    * The path to the project folder, relative to the rush.json config file.\r\n    //    */\r\n    //   \"projectFolder\": \"apps/my-app\",\r\n    //\r\n    //   /**\r\n    //    * An optional category for usage in the \"browser-approved-packages.json\"\r\n    //    * and \"nonbrowser-approved-packages.json\" files.  The value must be one of the\r\n    //    * strings from the \"reviewCategories\" defined above.\r\n    //    */\r\n    //   \"reviewCategory\": \"production\",\r\n    //\r\n    //   /**\r\n    //    * A list of local projects that appear as devDependencies for this project, but cannot be\r\n    //    * locally linked because it would create a cyclic dependency; instead, the last published\r\n    //    * version will be installed in the Common folder.\r\n    //    */\r\n    //   \"cyclicDependencyProjects\": [\r\n    //     // \"my-toolchain\"\r\n    //   ],\r\n    //\r\n    //   /**\r\n    //    * If true, then this project will be ignored by the \"rush check\" command.\r\n    //    * The default value is false.\r\n    //    */\r\n    //   // \"skipRushCheck\": false,\r\n    //\r\n    //   /**\r\n    //    * A flag indicating that changes to this project will be published to npm, which affects\r\n    //    * the Rush change and publish workflows. The default value is false.\r\n    //    * NOTE: \"versionPolicyName\" and \"shouldPublish\" are alternatives; you cannot specify them both.\r\n    //    */\r\n    //   // \"shouldPublish\": false,\r\n    //\r\n    //   /**\r\n    //    * An optional version policy associated with the project.  Version policies are defined\r\n    //    * in \"version-policies.json\" file.  See the \"rush publish\" documentation for more info.\r\n    //    * NOTE: \"versionPolicyName\" and \"shouldPublish\" are alternatives; you cannot specify them both.\r\n    //    */\r\n    //   // \"versionPolicyName\": \"\"\r\n    // },\r\n    //\r\n    {\r\n      \"packageName\": \"strider\",\r\n      \"projectFolder\": \"apps/strider\",\r\n      \"reviewCategory\": \"production\",\r\n      \"shouldPublish\": true\r\n    },\r\n\r\n    {\r\n      \"packageName\": \"strider-website\",\r\n      \"projectFolder\": \"apps/website\",\r\n      \"reviewCategory\": \"support\"\r\n    },\r\n\r\n    {\r\n      \"packageName\": \"strider-ui\",\r\n      \"projectFolder\": \"clients/strider-ui\",\r\n      \"reviewCategory\": \"production\"\r\n    },\r\n\r\n    {\r\n      \"packageName\": \"strider-classic-ui\",\r\n      \"projectFolder\": \"clients/classic-ui\",\r\n      \"reviewCategory\": \"production\"\r\n    },\r\n\r\n    {\r\n      \"packageName\": \"strider-runner-core\",\r\n      \"projectFolder\": \"modules/strider-runner-core\",\r\n      \"reviewCategory\": \"production\",\r\n      \"shouldPublish\": true\r\n    }\r\n  ]\r\n}\r\n"
        },
        {
          "name": "strider.code-workspace",
          "type": "blob",
          "size": 0.5166015625,
          "content": "{\n  \"folders\": [\n    {\n      \"name\": \"all\",\n      \"path\": \".\"\n    },\n    {\n      \"name\": \"server\",\n      \"path\": \"apps/strider\"\n    },\n    {\n      \"name\": \"ember-ui\",\n      \"path\": \"clients/strider-ui\"\n    },\n    {\n      \"name\": \"website\",\n      \"path\": \"apps/website\"\n    }\n  ],\n  \"settings\": {\n    \"typescript.tsdk\": \"apps/strider/node_modules/typescript/lib\",\n    \"[handlebars]\": { \"editor.formatOnSave\": false },\n    \"[html]\": {\n      \"editor.formatOnSave\": false\n    },\n    \"files.associations\": { \"*.json\": \"jsonc\" }\n  }\n}\n"
        }
      ]
    }
  ]
}