{
  "metadata": {
    "timestamp": 1736562012340,
    "page": 750,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coffe1891/frontend-hard-mode-interview",
      "stars": 3378,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "0.0.1.md",
          "type": "blob",
          "size": 2.6943359375,
          "content": "# 零.0.1 前言·写给有缘人\n\n## 01.coding到80岁\n\n作为一个老程序员，coding已经成为生命的一部分，coding到八十岁是我的理想，而JavaScript是我挚爱的语言！\n\n自从2010年出版个人第一本互联网技术书籍后，便再也没有时间可以写系统性论述技术的著作。因为后来加入奇虎360和百度这两家一线互联网公司，从事前端与手机客户端技术性工作，并主持研发了亿级用户的手机APP，这期间相当繁忙。\n\n在接受了一线互联网企业的再锻造与重塑之后，编程工作就像打游戏一样，让我觉得快乐与充实。每天都能“通关”，解决掉一个又一个问题，与优秀的聪明的睿智的热心的同事们一起协同合作，创造一个又一个生动有趣的产品，成就感是满满的……而且最重要的，在这个过程中居然还能赚到不少钱，让我作为一个程序员能够体面地生活并做自己喜欢的事，这实在是太美妙了！\n\n## 02.求知之路，道阻且长\n\n而在进入360和百度之前，记得那年是2011年，创业公司彻底倒闭，我失业了。实在没办法，为了谋生存必须找一份有稳定收入的工作。当时是计划入职一线互联网公司，做自己感兴趣的前端\\(Front-End\\)coding。因为从大学出来后和师兄们折腾创业，虽有一些技术积累但是不够系统化，而且缺乏职业化的工作经历，求职时是有点尴尬的，一线互联网公司似乎不太乐意接受这种情况，面试之旅已然进入Hard模式。面对逆境，我希望通过用扎实的技术功底和丰富的实战经验来打动雇主。\n\n在复习/学习期间，我查阅了大量国内外文档资料，发现原始资料相对少，原始的资料论文式偏多的，对英语阅读能力有非常大的挑战。而国内的资料大多数有错漏、不完整：首先是翻译问题非常大，术语翻译错误、译文表意模棱两可、原文内容翻译不完整，让人看了更加迷惑不解；国内网上的文章，绝大多数缺乏系统化论述，知识点分散零碎，而且很多有代码错误……各种原因，对自己的学习过程造成了不少困扰。\n\n## 03.感同身受，写给有缘人\n\n综上，感同身受求知之不易，因此多年后\\(2019年\\)有了闲暇便立即着手整理并分享本书，把当前前端核心知识要点梳理一遍，供前端工程师朋友们复习与进阶参考。\n\n如果我能通过自身努力最终能达成入职一线互联网公司的目标，那么更年轻、更健康和更聪明的程序员朋友们只会做得更好。加油吧，奥力给！本书还正在持续更新中，许多章节会陆续“点亮”的 🧡 。\n\n"
        },
        {
          "name": "0",
          "type": "tree",
          "content": null
        },
        {
          "name": "1",
          "type": "tree",
          "content": null
        },
        {
          "name": "10",
          "type": "tree",
          "content": null
        },
        {
          "name": "2",
          "type": "tree",
          "content": null
        },
        {
          "name": "3",
          "type": "tree",
          "content": null
        },
        {
          "name": "4",
          "type": "tree",
          "content": null
        },
        {
          "name": "5",
          "type": "tree",
          "content": null
        },
        {
          "name": "6",
          "type": "tree",
          "content": null
        },
        {
          "name": "7",
          "type": "tree",
          "content": null
        },
        {
          "name": "9",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.357421875,
          "content": "<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc/4.0/\"><img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc/4.0/88x31.png\" /></a><br />本作品采用<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc/4.0/\">知识共享署名-非商业性使用 4.0 国际许可协议</a>进行许可。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.3291015625,
          "content": "# 前端内参\n\n[![&#x652F;&#x6301;&#x6211;](https://img.shields.io/github/stars/coffe1891/frontend-hard-mode-interview?style=social)](https://github.com/coffe1891/frontend-hard-mode-interview/)\n\n![&#x5C01;&#x9762;](https://tva1.sinaimg.cn/large/007S8ZIlgy1gfyj8fmwm1j30zk0hs770.jpg)\n\n【阅 读 本 书】[https://coffe1891.gitbook.io/frontend-hard-mode-interview](https://coffe1891.gitbook.io/frontend-hard-mode-interview/)  \n【讨论本书】[https://github.com/coffe1891/frontend-hard-mode-interview/discussions](https://github.com/coffe1891/frontend-hard-mode-interview/discussions)  \n【作者微信】GZKXS1891（请注明 “前端内参”）  \n【QQ交流群】308689488（也可以扫上图二维码）\n\n如果觉得有帮助请点右上角的**Star**支持我不断更新。\n\n> 1. 本书较多着笔于深层理论上的论述，辅有代码示例，适合至少三年前端工作经验的朋友阅读。\n> 2. 尽量访问上面的gitbook地址，导航更清晰，图片也不会出现显示错位，并且支持手机模式；\n> 3. 如果书里文章的图片显示不了，开科学上网工具、或者多刷几遍就好。\n\n前端技术日新月异，我也在不断学习，因此疏漏之处在所难免，欢迎朋友随时[@提建议](https://github.com/coffe1891/frontend-hard-mode-interview/discussions)，我将及时改进；\n\n## 前言\n\n如何在Hard模式下通过一线互联网公司的面试？相信很多程序员朋友都有过这个困扰。其实答案很简单：**首先应努力成为一个好程序员，然后入职一线互联网公司只是顺路的事**。\n\n然后有前端朋友可能会吐槽：“前端知识已经爆炸，今天这个框架明天那个库的，天天有新玩意儿，我实在学不动了！”是的，前端知识早已大爆炸，新东西层出不穷，如果只是靠蛮力一样一样地去学习，那么连笔者我也学不动了 。那怎么办呢？别慌，其实前端学习是有窍门的。本书归纳了前端的核心知识点，如果你能日拱一卒地坚持学习，系统地掌握这些知识点之后，相信很快也能和我一样可以做到以不变应万变，以小变应大变，并对新的前端知识很快地领悟吃透！\n\n→ [更多前言 · 写给有缘人](0.0.1.md)\n\n## 目录\n\n### 零、准备Hard模式下的面试\n\n1. 一线互联网公司面试前的准备\n   * [一线互联网公司有什么不同？](0/0.1.1.md)\n   * [该公司是做什么的，实力、前景、口碑怎样？](0/0.1.2.md)\n   * 该岗位负责做什么的，岗位所属部门在什么位置，上升空间多大？\n   * [准备一份好的简历](0/0.1.4.md)\n   * [不卑不亢、不疾不徐地说话](0/0.1.5.md)\n   * [“有什么问题要问我吗”，如何回答？](0/0.1.6.md)\n\n### 壹、前端之灵：JavaScript/ECMAScript\n\n1. 你需要知道的新东西 \n   * [新版 ECMAScript 特性分析](1/1.1.1.md)\n   * JavaScript的未来\n2. 核心概念\n   * [函数](1/1.2.1.md)\n   * [作用域、执行上下文、作用域链](1/1.2.2.md)\n   * [彻底搞懂 this](1/1.2.3.md)\n   * [深入理解 call、apply、bind ](1/1.2.4.md)\n   * [面试时高频问到的“闭包” ](1/1.2.5.md)\n   * [原型和原型链](1/1.2.6.md)\n   * [同步和异步，阻塞和非阻塞](1/1.2.7.md)\n   * [Event Loop](1/1.2.8.md)\n   * [强大的数组](1/1.2.9.md)\n   * [正则表达式](1/1.2.10.md)\n   * [位操作符与进制转换](1/1.2.11.md)\n   * [rest和spread操作符](1/1.2.12.md)\n   * [实现异步非阻塞的任务](1/1.2.13.md)\n   * [模块化开发](1/1.2.14.md)\n3. 其他知识点\n   * [深拷贝与浅拷贝](1/1.3.1.md)\n   * [JavaScript函数柯里化](1/1.3.2.md)\n   * [JavaScript元编程：Proxy与Reflect](1/1.3.3.md)\n   * [JavaScript中的进程、线程、协程](1/1.3.4.md)\n4. 浏览器、V8引擎\n   * 网页被浏览器绘出来过程是怎样的？\n   * [页面重排（Reflow）与重绘（Repaint\\)](1/1.4.2.md)\n   * [DOM、Shadow DOM、Virtual DOM](1/1.4.3.md)\n   * [V8引擎是如何工作的](1/1.4.4.md)\n   * [V8引擎内存管理和垃圾回收机制](1/1.4.5.md)\n5. 相关后端知识、通信协议、安全\n   * 为什么要创造服务器端的javascript—Node.js？\n   * [了解TCP、UDP、TLS ](1/1.5.2.md)\n   * [Http协议几个版本的区别](1/1.5.3.md)\n   * [Http和Https的区别在哪里](1/1.5.4.md)\n   * [XSS与CSRF攻击](1/1.5.5.md)\n6. 书籍推荐\n   * [你读过哪些Javscript书籍](https://www.zhihu.com/question/19562698/answer/89480175) _`外链`_\n\n### 贰、[数据结构与算法](2/2.0.md)\n\n1. 面试时高频率出现的算法\n   * [十大排序算法](2/2.1.1.md)_`未完`_\n   * [链表](2/2.1.2.md)\n   * [单调栈](2/2.1.3.md)\n   * [二叉树的遍历](2/2.1.4.md)\n   * [实战：字节跳动前端面试2道算法题](2/2.1.5.md)\n   * [分治法、动态规划与贪心算法的区别](2/2.1.6.md)\n   * [实战：阿里巴巴前端面试算法题](2/2.1.7.md) _`未完`_\n2. 其他经典算法\n   * [尾递归:面试官问你斐波那契数列的时候不要太高兴](https://zhuanlan.zhihu.com/p/54378423) _`外链`_\n3. 好书推荐\n   * [《学习JavaScript数据结构与算法》](https://book.douban.com/subject/27129352/)_`外链`_\n\n### 叁、主流框架/库\n\n1. 综合比较\n   * [jQuery过时了吗？](3/3.1.1.md)\n   * [React、Vue和Angular对比](3/3.1.2.md)\n2. React\n   * [React Hooks究竟是什么？](3/3.2.1.md)\n   * React的性能优化技巧\n3. Vue.js\n   * Vue.js源码解读：Vue数据响应式原理\n   * Vue.js带来的一些新问题以及解决办法探索\n4. Angular.js\n   * 你真的懂Angular.js吗？\n   * Angular.js性能优化要点\n5. Flutter\n   * 浅谈Flutter给前端研发带来的变化\n   * Dart\n6. 好书推荐\n   * [《深入浅出Vue.js》](https://book.douban.com/subject/32581281/)_`外链`_\n   * [《深入React技术栈》](https://book.douban.com/subject/26918038/)_`外链`_\n\n### 肆、必会的工具\n\n1. Webpack-自动打包模块工具\n   * [深入理解Webpack打包](4/si-.1.1-shen-ru-li-jie-webpack-da-bao.md)\n   * 常用的脚手架 \n2. API文档管理\n   * 用Swagger解决前后端沟通不畅与API调试强依赖的问题\n   * Easydoc.xyz\n3. IDE-工欲善其事必先利其器\n   * 高效使用VSCode的10点建议\n   * 适用于前端开发者的优秀VSCode插件\n   * Sublime Text\n\n### 伍、编程范式\n\n1. 面向对象编程（OOP）\n   * [面向对象与面向过程有什么区别？](5/5.1.1.md)\n   * 面向对象编程的弊端是什么？\n   * [重新认识JavaScript面向对象:继承](5/5.1.3.md) \n   * [彻底搞懂泛型](5/5.1.4.md)\n   * [用JavaScript实现抽象类](5/5.1.5.md)\n   * [用JavaScript实现接口](5/5.1.6.md)\n2. 函数式编程\n   * [什么是函数式编程？](5/5.2.1.md)\n   * [JavaScript的函数式编程探索](5/5.2.2.md)\n   * [Pointfree无参数风格编程](5/5.2.3.md) _`未完`_\n3. 响应式编程\n   * [什么是响应式编程？](5/5.3.1.md)_`更新中`_\n   * [RxJS](5/5.3.2.md)_`未完`_\n\n### 陆、软件设计的原则\n\n1. [导读：SOLID](6/6.1.0.md)\n   * [单一职责原则](6/6.1.1.md)\n   * [接口隔离原则](6/6.1.2.md)\n   * [开放封闭原则](6/6.1.3.md)\n   * [里氏替换原则](6/6.1.4.md)\n   * [依赖倒置原则](6/6.1.5.md)\n2. 好书推荐\n   * [《重构》](https://book.douban.com/subject/4262627/)_`外链`_\n\n### 柒、设计模式和软件工程\n\n1. 十四种经典设计模式\n   * [单例模式](7/7.1.1.md)\n   * [策略模式](7/7.1.2.md)\n   * [代理模式](7/7.1.3.md)\n   * [迭代器模式](7/7.1.4.md)\n   * [发布-订阅模式](7/7.1.5.md)\n   * [命令模式](7/7.1.6.md)\n   * [组合模式](7/7.1.7.md)\n   * [模板方法模式](7/7.1.8.md)\n   * [享元模式](7/7.1.9.md)\n   * [职责链模式](7/7.1.10.md)\n   * [中介者模式](7/7.1.11.md)\n   * [装饰者模式](7/7.1.12.md)\n   * [状态模式](7/7.1.13.md)\n   * [适配器模式](7/7.1.14.md)\n2. 浅谈软件工程：MVC、MVP、MVVM\n   * [MVC的前世今生](7/7.2.1.md) _`未完`_\n   * MVP又是什么？\n   * 有了MVC和MVP，为什么还要MVVM？\n\n### 捌、很有用的网站\n\n1. [中文站-Mozilla大宝库](https://developer.mozilla.org/zh-CN/docs/Web) _`外链`_ 最全的Web相关参考文档,没有之一\n2. [英文站-StackOverflow](https://stackoverflow.com/) _`外链`_ 掌握了四级英语就能向老外提问交流了,解决疑难杂症必上\n3. [中文站-Vue.js手册](https://vuejs.bootcss.com/guide/) _`外链`_ 手册在手,玩转Vue不愁\n4. [英文-Vue资源大全](https://github.com/vuejs/awesome-vue) _`外链`_ 超级多的资源,总能找到你喜欢的那款\n\n### 玖、公众号&博客推荐\n\n1. [一线互联网公司官方前端公众号](9/9.1.md)\n2. [知名前端人物](9/9.2.md)\n\n### 拾、后记\n\n1. [成为一个好的程序员远比找份好工作重要](10/10.1.md)\n2. [2020年前端技术展望](10/10.2.md)\n\n## 贡献者\n\n[thales-jiang](https://github.com/thales-jiang)\n\n## 联系我\n\n![](.gitbook/assets/makai_greatwall.png)\n\n![](https://img.shields.io/badge/%E5%BE%AE%E4%BF%A1-%40kenny2019-brightgreen) [![contact me via gmail](https://img.shields.io/badge/Gmail-kai521%40gmail.com-red)](mailto:kai521@gmail.com)  \n[https://github.com/coffe1891](https://github.com/coffe1891)\n\n对本书有任何疑问，欢迎联系我。\n\n## 版权许可\n\n[![](.gitbook/assets/copyright.png)](http://creativecommons.org/licenses/by-nc/4.0/)\n\n本作品采用[知识共享署名-非商业性使用 4.0 国际许可协议](http://creativecommons.org/licenses/by-nc/4.0/)进行许可，只要保持原作者署名和非商用，您可以自由地阅读、分享、修改本书。\n\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 4.10546875,
          "content": "# Table of contents\n\n* [前端内参](README.md)\n* [零.0.1 前言·写给有缘人](0.0.1.md)\n\n## 零、准备Hard模式下的面试 <a id=\"0\"></a>\n\n* [零.1.1 一线互联网公司有什么不同？](0/0.1.1.md)\n* [零.1.2 该公司是做什么的，实力怎么样，前景如何，口碑怎样？](0/0.1.2.md)\n* [零.1.3 该岗位负责做什么的，岗位所属部门在什么位置，上升空间多大？](0/0.1.3.md)\n* [零.1.4 准备一份好的简历](0/0.1.4.md)\n* [零.1.5 不卑不亢，不疾不徐地说话](0/0.1.5.md)\n* [零.1.6 “有什么问题要问我吗”，如何回答？](0/0.1.6.md)\n\n## 壹、前端之灵：JavaScript/ECMAScript <a id=\"1\"></a>\n\n* [壹.1.1 新版 ECMAScript 特性分析](1/1.1.1.md)\n* [壹.1.2 JavaScript未来的方向](1/1.1.2.md)\n* [壹.2.1 函数](1/1.2.1.md)\n* [壹.2.2 作用域、执行上下文、作用域链](1/1.2.2.md)\n* [壹.2.3 彻底搞懂 this](1/1.2.3.md)\n* [壹.2.4 深入理解 call、apply、bind](1/1.2.4.md)\n* [壹.2.5 面试时高频问到的“闭包”](1/1.2.5.md)\n* [壹.2.6 原型和原型链](1/1.2.6.md)\n* [壹.2.7 同步和异步，阻塞和非阻塞](1/1.2.7.md)\n* [壹.2.8 Event Loop](1/1.2.8.md)\n* [壹.2.9 强大的数组](1/1.2.9.md)\n* [壹.2.10 正则表达式](1/1.2.10.md)\n* [壹.2.11 位操作符与进制转换](1/1.2.11.md)\n* [壹.2.12 spread和rest操作符](1/1.2.12.md)\n* [壹.2.13 实现异步非阻塞的任务](1/1.2.13.md)\n* [壹.2.14 模块化开发](1/1.2.14.md)\n* [壹.3.1 深拷贝与浅拷贝](1/1.3.1.md)\n* [壹.3.2 JavaScript函数柯里化](1/1.3.2.md)\n* [壹.3.3 JavaScript元编程：Proxy与Reflect](1/1.3.3.md)\n* [壹.3.4 JavaScript中的进程、线程、协程](1/1.3.4.md)\n* [壹.4.2 页面重排（Reflow）与重绘（Repaint\\)](1/1.4.2.md)\n* [壹.4.3 DOM、Shadow DOM、Virtual DOM](1/1.4.3.md)\n* [壹.5.2 了解TCP、UDP、TLS](1/1.5.2.md)\n* [壹.5.3 Http几个版本的区别](1/1.5.3.md)\n* [壹.5.4 Http和Https的区别在哪里](1/1.5.4.md)\n* [壹.5.5 XSS与CSRF攻击](1/1.5.5.md)\n\n## 贰、数据结构与算法 <a id=\"2\"></a>\n\n* [贰.0 本章导读](2/2.0.md)\n* [贰.1.1 十大排序算法](2/2.1.1.md)\n* [贰.1.2 链表](2/2.1.2.md)\n* [贰.1.3 单调栈](2/2.1.3.md)\n* [贰.1.4 二叉树的遍历](2/2.1.4.md)\n* [贰.1.5 实战：字节跳动前端面试2道算法题](2/2.1.5.md)\n* [贰.1.6 分治法、动态规划与贪心算法的区别](2/2.1.6.md)\n* [贰.1.7 实战：阿里巴巴前端面试题](2/2.1.7.md)\n\n## 叁、主流框架/库 <a id=\"3\"></a>\n\n* [叁.1.1 jQuery过时了吗？](3/3.1.1.md)\n* [叁.1.2 React、Vue和Angular对比](3/3.1.2.md)\n* [叁.2.1 React Hooks究竟是什么？](3/3.2.1.md)\n\n## 肆、必会的工具 <a id=\"4\"></a>\n\n* [肆.1.1 深入理解Webpack打包](4/si-.1.1-shen-ru-li-jie-webpack-da-bao.md)\n* [肆.3.2 适用于前端开发者的20个VSCode插件](4/4.3.2.md)\n\n## 伍、编程范式 <a id=\"5\"></a>\n\n* [伍.1.1 面向对象与面向过程有什么区别？](5/5.1.1.md)\n* [伍.1.3 重新认识JavaScript面向对象: 继承](5/5.1.3.md)\n* [伍.1.4 彻底搞懂泛型](5/5.1.4.md)\n* [伍.1.5 用JavaScript实现抽象类](5/5.1.5.md)\n* [伍.1.6 用JavaScript实现接口](5/5.1.6.md)\n* [伍.2.1 什么是函数式编程？](5/5.2.1.md)\n* [伍.2.2 JavaScript的函数式编程探索](5/5.2.2.md)\n* [伍.2.3 Pointfree无参数风格编程](5/5.2.3.md)\n* [伍.3.1 什么是响应式编程？](5/5.3.1.md)\n* [伍.3.2 RxJS](5/5.3.2.md)\n\n## 陆、设计原则与编程范式 <a id=\"6\"></a>\n\n* [陆.1.0 导读：SOLID](6/6.1.0.md)\n* [陆.1.1 单一职责原则](6/6.1.1.md)\n* [陆.1.2 接口隔离原则](6/6.1.2.md)\n* [陆.1.3 开放封闭原则](6/6.1.3.md)\n* [陆.1.4 里氏替换原则](6/6.1.4.md)\n* [陆.1.5 依赖倒置原则](6/6.1.5.md)\n\n## 柒 、设计模式与软件工程 <a id=\"7\"></a>\n\n* [柒.1.5 发布-订阅模式](7/7.1.5.md)\n* [柒.1.14 适配器模式](7/7.1.14.md)\n* [柒.2.1 MVC的前世今生](7/7.2.1.md)\n\n## 玖、公众号&博客推荐 <a id=\"9\"></a>\n\n* [玖.1 一线互联网公司前端团队官方公众号](9/9.1.md)\n* [玖.2 知名前端人物](9/9.2.md)\n\n## 拾、后记 <a id=\"10\"></a>\n\n* [拾.1 成为一个好的程序员远比找份好工作重要](10/10.1.md)\n* [拾.2 2020年前端技术展望](10/10.2.md)\n\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-cayman"
        },
        {
          "name": "code",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}