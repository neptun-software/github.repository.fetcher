{
  "metadata": {
    "timestamp": 1736561869056,
    "page": 541,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "toddmotto/echo",
      "stars": 3722,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.29296875,
          "content": "# editorconfig.org\n\nroot = true\n\n[*]\n\n# Change these settings to your own preference\nindent_style = space\nindent_size = 2\n\n# We recommend you to keep these unchanged\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.166015625,
          "content": "# Node\nnode_modules\n\n#Ide\n.idea\n\n## OS X\n.DS_Store\n.AppleDouble\n.LSOverride\nIcon\n._*\n.Spotlight-V100\n.Trashes\n\n## Windows\nThumbs.db\nehthumbs.db\nDesktop.ini\n$RECYCLE.BIN/\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.3486328125,
          "content": "{\n  \"node\": true,\n  \"browser\": true,\n  \"esnext\": true,\n  \"bitwise\": true,\n  \"camelcase\": true,\n  \"curly\": false,\n  \"eqeqeq\": true,\n  \"indent\": 2,\n  \"immed\": true,\n  \"latedef\": true,\n  \"newcap\": true,\n  \"noarg\": true,\n  \"quotmark\": \"single\",\n  \"regexp\": true,\n  \"undef\": true,\n  \"unused\": false,\n  \"trailing\": false,\n  \"globals\" : {\n    \"define\": true\n  }\n}\n"
        },
        {
          "name": ".spmignore",
          "type": "blob",
          "size": 0.009765625,
          "content": "dist\ntest\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0986328125,
          "content": "language: node_js\nnode_js:\n  - \"0.10\"\n  - \"0.11\"\nbefore_script:\n  - npm install -g gulp\nscript: gulp\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.986328125,
          "content": "# Echo.js [![Build Status](https://travis-ci.org/toddmotto/echo.svg)](https://travis-ci.org/toddmotto/echo)\n\nEcho is a standalone JavaScript lazy-loading image micro-library. Echo is fast, 2KB, and uses HTML5 data-* attributes for simple. Check out a [demo](http://toddmotto.com/labs/echo). Echo works in IE8+.\n\n```\nbower install echojs\nnpm install echo-js\n```\n\nUsing Echo.js is simple, to add an image directly into the page simply add a `data-echo` attribute to the img tag. Alternatively if you want to use Echo to lazy load background images simply add a `data-echo-background' attribute to the element with the image URL.\n\n```html\n<body>\n\n  <img src=\"img/blank.gif\" alt=\"Photo\" data-echo=\"img/photo.jpg\">\n\n  <script src=\"dist/echo.js\"></script>\n  <script>\n  echo.init({\n    offset: 100,\n    throttle: 250,\n    unload: false,\n    callback: function (element, op) {\n      console.log(element, 'has been', op + 'ed')\n    }\n  });\n\n  // echo.render(); is also available for non-scroll callbacks\n  </script>\n</body>\n```\n\n## .init() (options)\n\nThe `init()` API takes a few options\n\n#### offset\nType: `Number|String` Default: `0`\n\nThe `offset` option allows you to specify how far below, above, to the left, and to the right of the viewport you want Echo to _begin_ loading your images. If you specify `0`, Echo will load your image as soon as it is visible in the viewport, if you want to load _1000px_ below or above the viewport, use `1000`.\n\n#### offsetVertical\nType: `Number|String` Default: `offset`'s value\n\nThe `offsetVertical` option allows you to specify how far above and below the viewport you want Echo to _begin_ loading your images.\n\n#### offsetHorizontal\nType: `Number|String` Default: `offset`'s value\n\nThe `offsetHorizontal` option allows you to specify how far to the left and right of the viewport you want Echo to _begin_ loading your images.\n\n#### offsetTop\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetTop` option allows you to specify how far above the viewport you want Echo to _begin_ loading your images.\n\n#### offsetBottom\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetBottom` option allows you to specify how far below the viewport you want Echo to _begin_ loading your images.\n\n#### offsetLeft\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetLeft` option allows you to specify how far to left of the viewport you want Echo to _begin_ loading your images.\n\n#### offsetRight\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetRight` option allows you to specify how far to the right of the viewport you want Echo to _begin_ loading your images.\n\n#### throttle\nType: `Number|String` Default: `250`\n\nThe throttle is managed by an internal function that prevents performance issues from continuous firing of `window.onscroll` events. Using a throttle will set a small timeout when the user scrolls and will keep throttling until the user stops. The default is `250` milliseconds.\n\n#### debounce\nType: `Boolean` Default: `true`\n\nBy default the throttling function is actually a [debounce](http://underscorejs.org/#debounce) function so that the checking function is only triggered after a user stops scrolling. To use traditional throttling where it will only check the images every `throttle` milliseconds, set `debounce` to `false`.\n\n#### unload\nType: `Boolean` Default: `false`\n\nThis option will tell echo to unload loaded images once they have scrolled beyond the viewport (including the offset area).\n\n#### callback\nType: `Function`\n\nThe callback will be passed the element that has been updated and what the update operation was (ie `load` or `unload`). This can be useful if you want to add a class like `loaded` to the element. Or do some logging.\n\n```js\necho.init({\n  callback: function(element, op) {\n    if(op === 'load') {\n      element.classList.add('loaded');\n    } else {\n      element.classList.remove('loaded');\n    }\n  }\n});\n```\n\n## .render()\n\nEcho's callback `render()` can be used to make Echo poll your images when you're not scrolling, for instance if you've got a filter layout that swaps images but does not scroll, you need to call the internal functions without scrolling. Use `render()` for this:\n\n```js\necho.render();\n```\n\nUsing `render()` is also throttled, which means you can bind it to an `onresize` event and it will be optimised for performance in the same way `onscroll` is.\n\n## Manual installation\nDrop your files into your required folders, make sure you're using the file(s) from the `dist` folder, which is the compiled production-ready code. Ensure you place the script before the closing `</body>` tag so the DOM tree is populated when the script runs.\n\n## Configuring Echo\nAdd the image that needs to load when it's visible inside the viewport in a `data-echo` attribute:\n\n```html\n<img src=\"img/blank.gif\" alt=\"Photo\" data-echo=\"img/photo.jpg\">\n```\n\n## Contributing\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Gulp.\n\n## License\nMIT license\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.4052734375,
          "content": "{\n  \"name\": \"echojs\",\n  \"version\": \"1.7.3\",\n  \"homepage\": \"https://github.com/toddmotto/echo\",\n  \"authors\": [\n    \"@toddmotto\"\n  ],\n  \"description\": \"Lazy-loading with data-* attributes, offset and throttle options\",\n  \"main\": \"src/echo.js\",\n  \"moduleType\": [],\n  \"keywords\": [\n    \"echo\"\n  ],\n  \"license\": \"MIT\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ]\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 1.55859375,
          "content": "var gulp    = require('gulp'),\n    karma   = require('gulp-karma'),\n    jshint  = require('gulp-jshint'),\n    stylish = require('jshint-stylish'),\n    header  = require('gulp-header'),\n    uglify  = require('gulp-uglify'),\n    plumber = require('gulp-plumber'),\n    clean   = require('gulp-clean'),\n    rename  = require('gulp-rename'),\n    package = require('./package.json');\n\nvar paths = {\n  output : 'dist/',\n  scripts : [\n    'src/echo.js'\n  ],\n  test: [\n    'test/spec/**/*.js'\n  ]\n};\n\nvar banner = [\n  '/*! ',\n    '<%= package.name %> ',\n    'v<%= package.version %> | ',\n    '(c) ' + new Date().getFullYear() + ' <%= package.author %> |',\n    ' <%= package.homepage %>',\n  ' */',\n  '\\n'\n].join('');\n\ngulp.task('scripts', ['clean'], function() {\n  return gulp.src(paths.scripts)\n    .pipe(plumber())\n    .pipe(header(banner, { package : package }))\n    .pipe(gulp.dest('dist/'))\n    .pipe(rename({ suffix: '.min' }))\n    .pipe(uglify())\n    .pipe(header(banner, { package : package }))\n    .pipe(gulp.dest('dist/'));\n});\n\ngulp.task('lint', function () {\n  return gulp.src(paths.scripts)\n    .pipe(plumber())\n    .pipe(jshint())\n    .pipe(jshint.reporter('jshint-stylish'));\n});\n\ngulp.task('clean', function () {\n  return gulp.src(paths.output, { read: false })\n    .pipe(plumber())\n    .pipe(clean());\n});\n\ngulp.task('test', function() {\n  return gulp.src(paths.scripts.concat(paths.test))\n    .pipe(plumber())\n    .pipe(karma({ configFile: 'test/karma.conf.js' }))\n    .on('error', function(err) { throw err; });\n});\n\ngulp.task('default', [\n  'lint',\n  'clean',\n  'scripts',\n  'test'\n]);\n"
        },
        {
          "name": "license.",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2016 Todd Motto\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.65234375,
          "content": "{\n  \"name\": \"echo-js\",\n  \"version\": \"1.7.3\",\n  \"description\": \"Lazy-loading with data-* attributes, offset and throttle options\",\n  \"author\": \"@toddmotto\",\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/toddmotto/echo\",\n  \"devDependencies\": {\n    \"gulp\": \"~3.7.0\",\n    \"gulp-uglify\": \"~0.3.0\",\n    \"gulp-rename\": \"~1.1.0\",\n    \"gulp-clean\": \"^0.2.4\",\n    \"gulp-plumber\": \"~0.6.2\",\n    \"gulp-header\": \"^1.0.2\",\n    \"gulp-jshint\": \"^1.6.1\",\n    \"jshint-stylish\": \"^0.2.0\",\n    \"gulp-karma\": \"0.0.4\",\n    \"karma\": \"^5.0.0\",\n    \"karma-jasmine\": \"~0.2.0\",\n    \"karma-phantomjs-launcher\": \"^0.1.4\",\n    \"karma-spec-reporter\": \"0.0.13\"\n  },\n  \"main\": \"src/echo.js\"\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}