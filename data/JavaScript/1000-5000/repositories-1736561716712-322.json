{
  "metadata": {
    "timestamp": 1736561716712,
    "page": 322,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/end-to-end",
      "stars": 4127,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.203125,
          "content": "build/*\ndocs/*\nnode_modules/*\nlib/closure-templates-compiler/*\nlib/typedarray/*\nsrc/javascript/crypto/e2e/compatibility_tests/drivers/bc/lib/*\nsrc/javascript/crypto/e2e/compatibility_tests/drivers/bc/build/*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.890625,
          "content": "[submodule \"lib/zlib.js\"]\n\tpath = lib/zlib.js\n\turl = https://github.com/imaya/zlib.js\n\tbranch = b99bd33d485d63e93310b911a1f8dbf9ceb265d5\n[submodule \"lib/closure-compiler\"]\n\tpath = lib/closure-compiler\n\turl = https://github.com/google/closure-compiler\n\tbranch = maven-release-v20150315\n[submodule \"lib/closure-library\"]\n\tpath = lib/closure-library\n\turl = https://github.com/google/closure-library\n\tbranch = 35c9311042b95796d7b12f58cd2bec6086052f7e\n[submodule \"lib/closure-stylesheets\"]\n\tpath = lib/closure-stylesheets\n\turl = https://github.com/google/closure-stylesheets\n\tbranch = fd1095b9a5e84a9a6a9c00cf24949cabe33478b6\n[submodule \"lib/js-dossier\"]\n\tpath = lib/js-dossier\n\turl = https://github.com/jleyba/js-dossier\n[submodule \"src/javascript/crypto/e2e/compatibility_tests/openpgp-interop\"]\n\tpath = src/javascript/crypto/e2e/compatibility_tests/openpgp-interop\n\turl = https://github.com/google/openpgp-interop\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4716796875,
          "content": "sudo: false\n\nenv:\n  global:\n    - NODEJS_VERSION=0.10\n    - NODEJS_CMD=node\n\ninstall:\n  - export PATH=$HOME/.local/bin:$PATH\n  - pip install --user six\n  - pip install --user git+https://github.com/google/closure-linter.git\n  - nvm install ${NODEJS_VERSION} && nvm alias default ${NODEJS_VERSION}\n  - ./do.sh install_deps\n\nscript:\n  - ./do.sh lint\n  - ./do.sh build_app debug\n  - ./do.sh test_compat_e2e\n  - ./do.sh test_compat_bc\n  - ./do.sh clean\n  - ./do.sh build_extension debug\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.443359375,
          "content": "# This is the official list of End-To-End authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS files.\n# See the latter for an explanation.\n\n# Names should be added to this file as:\n# Name or Organization <email address>\n# The email address is not required for organizations.\n\nGoogle Inc.\nYahoo! Inc.\n\nDavid Leon Gil <coruus@gmail.com>\nDominic Hamon <dma@stripysock.com>\nKB Sriram <kbsriram@gmail.com>\nRyan Chan <ryan@rcchan.com>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.1845703125,
          "content": "#Contributing to End-To-End\n\nWe'd love for you to contribute to our source code! Here are the guidelines we'd like you to follow:\n\n - [Question or Problem?](#question)\n - [Issues and Bugs](#issue)\n - [Feature Requests](#feature)\n - [Submission Guidelines](#submit)\n - [Coding Rules](#rules)\n - [Signing the CLA](#cla)\n\n## <a name=\"question\"></a> Got a Question or Problem?\n\nIf you have questions about End-To-End, please direct these to the [Google Group][groups]\ndiscussion list.\n\n## <a name=\"issue\"></a> Found an Issue?\nIf you find a bug in the source code, you can help us by\nsubmitting an issue to our [GitHub Repository][github]. Even better you can submit a Pull Request\nwith a fix. ***NEVER put your private key*** in a description/comment to the issue. If needed, you can create a throw away key only to ease bug reproduction.\n\n## <a name=\"feature\"></a> Want a Feature?\nYou can request a new feature by submitting an [issue][issues] to our [GitHub Repository][github].  If you\nwould like to implement a new feature then consider what kind of change it is:\n\n* **Major Changes** that you wish to contribute to the project should be discussed first on our\n[Google Group][groups] so that we can better coordinate our efforts, prevent\nduplication of work, and help you to craft the change so that it is successfully accepted into the\nproject.\n* **Small Changes** can be crafted and submitted to the [GitHub Repository][github] as a Pull Request.\n\n## <a name=\"submit\"></a> Submission Guidelines\n\n### Submitting an Issue\nBefore you submit your issue search the [archive][issues], maybe your question was already answered.\n\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures, by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\n* **Overview of the Issue** - if an error is being thrown a non-minified stack trace helps\n* **Motivation for or Use Case** - explain why this is a bug for you\n* **Related Issues** - has a similar issue been reported before?\n* **Suggest a Fix** - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\n### Submitting a Pull Request\nBefore you submit your pull request consider the following guidelines:\n\n* Search [GitHub](https://github.com/google/end-to-end/pulls) for an open or closed Pull Request\n  that relates to your submission. You don't want to duplicate effort.\n* **Please sign our [Contributor License Agreement (CLA)](#cla)** before sending pull\n  requests. We cannot accept code without this.\n* Please be succinct. Create separate pull requests for separate bug fixes/features.\n* Make your changes in a new git branch:\n\n     ```shell\n     git checkout -b my-fix-branch master\n     ```\n\n* Create your patch, **including appropriate [test cases][closure-testing]**.\n* Follow our [Coding Rules](#rules).\n* Run [linter] to spot and correct any styling errors in the code:\n\n    ```shell\n    ./do.sh lint\n    ```\n  If any fixable errors are present, Closure Linter will display a command that would fix those.\n\n* Run the full test suite. Start the test server:\n\n    ```shell\n    ./do.sh testserver\n    ```\n  Visit [http://localhost:8000/all_tests.html] and ensure all tests pass in your browser.\n\n* Build your changes locally to ensure the build is not broken:\n\n    ```shell\n    ./do.sh build_extension\n    ./do.sh build_library\n    ```\n\n* Push your branch to GitHub:\n\n    ```shell\n    git push origin my-fix-branch\n    ```\n\n* In GitHub, send a pull request to `google:master`.\n* If we suggest changes then\n  * Make the required updates.\n  * Re-run the test suite, builds and linter to ensure the code is still healthy.\n  * Rebase your branch and force push to your GitHub repository (this will update your Pull Request):\n\n    ```shell\n    git rebase master -i\n    git push -f\n    ```\n\nThat's it! Thank you for your contribution!\n\n#### After your pull request is merged\n\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\n* Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n\n    ```shell\n    git push origin --delete my-fix-branch\n    ```\n\n* Check out the master branch:\n\n    ```shell\n    git checkout master -f\n    ```\n\n* Delete the local branch:\n\n    ```shell\n    git branch -D my-fix-branch\n    ```\n\n* Update your master with the latest upstream version:\n\n    ```shell\n    git pull --ff upstream master\n    ```\n\n## <a name=\"rules\"></a> Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\n* End-To-End is based on [Google Closure][closure] library. Make sure the code you're submitting adheres to Closure principles.\n* All features or bug fixes **must be tested** using Closure [unit test][closure-testing] suites.\n* We follow ALL the rules contained in\n  [Google's JavaScript Style Guide][js-style-guide]\n* All public API methods **must be documented**. This includes adding [type annotations](http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml?showone=JavaScript_Types#JavaScript_Types) for input parameters and return values.\n\n## <a name=\"cla\"></a> Signing the CLA\n\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\n* For individuals we have a [simple click-through form][individual-cla].\n* For corporations we'll need you to\n  [print, sign and one of scan+email, fax or mail the form][corporate-cla].\n\n[closure]: https://developers.google.com/closure/library/\n[closure-testing]: http://docs.closure-library.googlecode.com/git/namespace_goog_testing.html\n[corporate-cla]: http://code.google.com/legal/corporate-cla-v1.0.html\n[github]: https://github.com/google/end-to-end\n[groups]: http://groups.google.com/group/e2e-discuss\n[individual-cla]: http://code.google.com/legal/individual-cla-v1.0.html\n[issues]: https://github.com/google/end-to-end/issues\n[js-style-guide]: http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\n[linter]: https://developers.google.com/closure/utilities/\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 0.83984375,
          "content": "# People who have agreed to one of the CLAs and can contribute patches.\n# The AUTHORS file lists the copyright holders; this file\n# lists people.  For example, Google employees are listed here\n# but not in AUTHORS, because Google holds the copyright.\n#\n# https://developers.google.com/open-source/cla/individual\n# https://developers.google.com/open-source/cla/corporate\n#\n# Names should be added to this file as:\n#     Name <email address>\n\nDavid Leon Gil <coruus@gmail.com>\nDominic Hamon <dma@stripysock.com>\nDrew Hintz <adhintz@google.com>\nEduardo Vela Nava <evn@google.com>\nFrank Yellin <fy@google.com>\nKB Sriram <kbsriram@gmail.com>\nKrzysztof Kotowicz <koto@google.com>\nQuan Nguyen <quannguyen@google.com>\nRadoslav Vasilev <radi@google.com>\nRyan Chan <rcc@google.com>\nRyan Chan <ryan@rcchan.com>\nThai Duong <thaidn@google.com>\nYan Zhu <yzhu@yahoo-inc.com>\n"
        },
        {
          "name": "Copybara",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 1.74609375,
          "content": "// Copyright 2014 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @fileoverview Gruntfile for building End-To-End targets\n *\n * @author koto@google.com (Krzysztof Kotowicz)\n */\nmodule.exports = function(grunt) {\n  grunt.initConfig({\n    shell: {\n      doScript: {\n        options: {},\n        command: function(target) {\n          if (target.match(/^[-a-z_]+$/)) {\n            return 'bash ./do.sh ' + target;\n          }\n        }\n      }\n    }\n  });\n\n  grunt.loadNpmTasks('grunt-shell');\n\n  grunt.registerTask('build-extension', [\n    'shell:doScript:build_extension'\n  ]);\n\n  grunt.registerTask('build-library', [\n    'shell:doScript:build_library'\n  ]);\n\n  grunt.registerTask('build-templates', [\n    'shell:doScript:build_templates'\n  ]);\n\n  grunt.registerTask('check-deps', [\n    'shell:doScript:check_deps'\n  ]);\n\n  grunt.registerTask('install-deps', [\n    'shell:doScript:install_deps'\n  ]);\n\n  grunt.registerTask('clean', [\n    'shell:doScript:clean'\n  ]);\n\n  grunt.registerTask('update', [\n    'shell:doScript:update'\n  ]);\n\n  grunt.registerTask('testserver', [\n    'shell:doScript:testserver'\n  ]);\n\n  grunt.registerTask('lint', [\n    'shell:doScript:lint'\n  ]);\n\n  grunt.registerTask('default', [\n    'build-extension'\n  ]);\n};\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5888671875,
          "content": "End-To-End\n==========\n\n![Travis Build](https://travis-ci.org/google/end-to-end.svg \"End to End Travis Build\")\n\nEnd-To-End is a crypto library to encrypt, decrypt, digital sign, and verify signed messages (implementing OpenPGP and OTR).\n\nThis is the source code for the End-To-End library. It's built upon a newly developed, JavaScript-based crypto library. End-To-End implements the OpenPGP standard, IETF RFC 4880, enabling key generation, encryption, decryption, digital signature, and signature verification.\n\nWe're releasing this library to enable community review.\n\nFor more background, please see [our blog post](http://googleonlinesecurity.blogspot.com/2014/06/making-end-to-end-encryption-easier-to.html).\n\nDocumentation for the project is stored in our [Wiki](https://github.com/google/end-to-end/wiki/). If you're planning to contribute to the project, check out our [Contributor guide](CONTRIBUTING.md).\n\nA few projects have been built on top of this library, to list a few:\n  - [E2EMail](https://github.com/e2email-org/e2email) - A Gmail client that exchanges OpenPGP mail.\n  - [Freedom JS](https://github.com/freedomjs/freedom-pgp-e2e) - A framework for building peer-to-peer (P2P) web apps.\n  - [uProxy](https://github.com/uProxy/uproxy) - A browser extension that lets users share their internet connection.\n  - [Google End-to-End Extension](https://github.com/google/end-to-end/tree/master/src/javascript/crypto/e2e/extension) - Google End-to-End Chrome Extension (not ready for general use).\n  - [Yahoo End-to-End Extension](https://github.com/yahoo/end-to-end) - A fork of Google's End-to-End for Yahoo mail.\n"
        },
        {
          "name": "all_tests.html",
          "type": "blob",
          "size": 3.55859375,
          "content": "<!DOCTYPE html>\n<html>\n<head>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<title>End-to-End - All JsUnit Tests</title>\n<script src=\"javascript/closure/base.js\"></script>\n<script src=\"test_js_deps-runfiles.js\"></script>\n<script src=\"build/all_tests.js\"></script>\n<script>\ngoog.require('goog.testing.MultiTestRunner');\n</script>\n<link rel=\"stylesheet\" href=\"javascript/closure/css/multitestrunner.css\" type=\"text/css\">\n<style>\nh1 {\n  font: normal x-large arial, helvetica, sans-serif;\n  margin: 0;\n}\np, form {\n  font: normal small sans-serif;\n}\n#form {\n  margin-top: 8px;\n}\na {\n  text-decoration: none;\n}\na:hover {\n  text-decoration: underline;\n}\n.warning {\n  font-family: sans-serif;\n  font-size: 14px;\n  font-weight: bold;\n  padding-right: 8em;\n  padding-left: 8em;\n  padding-top: 1em;\n  padding-bottom: 1em;\n  background: #eef;\n  border: 1px solid #ccc\n}\n</style>\n</head>\n<body>\n<h1>End-to-End - All JsUnit Tests</h1>\n<div id=\"runner\"></div>\n<!--  Use a form so browser persists input values -->\n<form id=\"form\">\n  Settings:<br>\n  <input type=\"checkbox\" name=\"showpasses\" id=\"showpasses\">\n  <label for=\"showpasses\">Show passes</label><br>\n  <label for=\"filter\">Only run tests that match:</label><br>\n  <input type=\"text\" name=\"filter\" id=\"filter\" value=\"\">\n  <small>(use regexp, e.g. \"structs.*\")</small>\n</form>\n<p>Tests:</p>\n<pre id=\"all_tests\"></pre>\n<script>\nvar params = {};\nvar q = location.search.replace(/^\\?/, '').split('&').map(function(item) {\n    var param = item.split('=').map(decodeURIComponent);\n    params[param[0]] = param[1];\n});\n\nif (params.showpasses) {\n  document.getElementById('showpasses').checked = true;\n}\n\nif (params.filter) {\n  document.getElementById('filter').value = params.filter;\n}\n\nif (typeof _allTests == 'undefined') {\n  document.write(\n      '<p>No test files detected.  Ensure you have generated the ' +\n      'test dependencies</p>');\n\n} else {\n  for (var i = 0; i < _allTests.length; i++) {\n    document.getElementById('all_tests').innerText += _allTests[i] + '\\n';\n  }\n  var showPassesInput = document.getElementById('showpasses');\n  var filterInput = document.getElementById('filter');\n\n  function setFilterFunction() {\n    var matchValue = filterInput.value || '.*';\n    var re;\n    try {\n      re = new RegExp(matchValue);\n    } catch (e) {\n      alert(e.message);\n      setTimeout(function() {\n        filterInput.select();\n      }, 0);\n      return;\n    }\n    testRunner.setFilterFunction(function(testPath) {\n      return re.test(testPath);\n    });\n  }\n\n  goog.testing.MultiTestRunner.prototype.setOnTestLoadCallback = function(fn) {\n    this.onTestLoadCallback = fn;\n  };\n\n  goog.testing.MultiTestRunner.prototype.getOnTestLoadCallback = function(fn) {\n    return this.onTestLoadCallback;\n  };\n\n  // setting a hook for polyfill\n  goog.testing.MultiTestRunner.TestFrame.prototype.onIframeLoaded_ = function(e) {\n    this.iframeLoaded_ = true;\n    if (this.getParent().onTestLoadCallback) {\n      this.getParent().onTestLoadCallback.apply(e.target);\n    }\n  };\n\n  // Create a test runner and render it.\n  var testRunner = new goog.testing.MultiTestRunner()\n      .setName(document.title)\n      .setBasePath('')\n      .setPoolSize(1)\n      .setStatsBucketSizes(5, 500)\n      .setHidePasses(!showPassesInput.checked)\n      .addTests(_allTests);\n  testRunner.render(document.getElementById('runner'));\n\n  goog.events.listen(showPassesInput, 'click', function(e) {\n    testRunner.setHidePasses(!e.target.checked);\n  });\n\n  goog.events.listen(filterInput, 'blur', setFilterFunction);\n  setFilterFunction();\n\n\n  if (params.autostart) {\n    testRunner.start();\n  }\n}\n</script>\n</body>\n</html>\n"
        },
        {
          "name": "compiler.flags",
          "type": "blob",
          "size": 0.95703125,
          "content": "--language_in=ECMASCRIPT5\n--jscomp_error=accessControls\n--jscomp_error=ambiguousFunctionDecl\n--jscomp_error=checkDebuggerStatement\n--jscomp_error=checkEventfulObjectDisposal\n--jscomp_error=checkRegExp\n--jscomp_error=checkTypes\n--jscomp_error=checkVars\n--jscomp_error=const\n--jscomp_error=constantProperty\n--jscomp_error=duplicate\n--jscomp_error=duplicateMessage\n--jscomp_error=es5Strict\n--jscomp_error=es3\n--jscomp_error=externsValidation\n--jscomp_error=fileoverviewTags\n--jscomp_error=globalThis\n--jscomp_error=internetExplorerChecks\n--jscomp_error=invalidCasts\n--jscomp_error=missingProperties\n--jscomp_error=nonStandardJsDocs\n--jscomp_error=strictModuleDepCheck\n--jscomp_error=undefinedNames\n--jscomp_error=undefinedVars\n--jscomp_error=unknownDefines\n--jscomp_error=uselessCode\n--jscomp_error=visibility\n--jscomp_warning=deprecated\n--externs=lib/closure-compiler/contrib/externs/chrome_extensions.js\n--only_closure_dependencies\n--manage_closure_dependencies\n--js build/deps.js\n"
        },
        {
          "name": "do.sh",
          "type": "blob",
          "size": 15.1689453125,
          "content": "#!/usr/bin/env bash\n# // Copyright 2014 Google Inc. All rights reserved.\n# //\n# // Licensed under the Apache License, Version 2.0 (the \"License\");\n# // you may not use this file except in compliance with the License.\n# // You may obtain a copy of the License at\n# //\n# //   http://www.apache.org/licenses/LICENSE-2.0\n# //\n# // Unless required by applicable law or agreed to in writing, software\n# // distributed under the License is distributed on an \"AS IS\" BASIS,\n# // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# // See the License for the specific language governing permissions and\n# // limitations under the License.\n# /**\n#  * @fileoverview Shell script to facilitate build-related tasks for End-To-End\n#  *\n#  * @author koto@google.com (Krzysztof Kotowicz)\n#  */\nPYTHON_CMD=\"python\"\nJSCOMPILE_CMD=\"java -jar -Xms512m -Xmx1024m lib/closure-compiler/build/compiler.jar --flagfile=compiler.flags\"\nCKSUM_CMD=\"cksum\" # chosen because it's available on most Linux/OS X installations\nNODEJS_CMD=\"${NODEJS_CMD:-nodejs}\"\nBUILD_DIR=\"build\"\nBUILD_TPL_DIR=\"$BUILD_DIR/templates\"\ncd ${0%/*}\n\ne2e_assert_dependencies() {\n  # Check if required binaries are present.\n  type \"$PYTHON_CMD\" >/dev/null 2>&1 || { echo >&2 \"Python is required to build End-To-End.\"; exit 1; }\n  type ant >/dev/null 2>&1 || { echo >&2 \"Ant is required to build End-To-End.\"; exit 1; }\n  type java >/dev/null 2>&1 || { echo >&2 \"Java is required to build End-To-End.\"; exit 1; }\n  # Check if required files are present.\n  files=(lib/closure-library \\\n    lib/closure-templates-compiler \\\n    lib/typedarray \\\n    lib/zlib.js \\\n    lib/closure-stylesheets/build/closure-stylesheets.jar \\\n    lib/closure-compiler/build/compiler.jar \\\n    lib/closure-compiler/contrib/externs/chrome_extensions.js \\\n  )\n  for var in \"${files[@]}\"\n  do\n    if [ ! -e $var ]; then\n      echo >&2 \"Download libraries needed to build first. Use $0 install_deps.\"\n      exit 1\n    fi\n  done\n  echo \"All dependencies met.\"\n}\n\ne2e_assert_bc() {\n  # Verify, or download the correct bc libraries.\n  src/javascript/crypto/e2e/compatibility_tests/drivers/bc/download-libs.sh || { echo >&2 \"Unable to install bouncy castle libraries\"; exit 1; }\n}\n\ne2e_assert_nodejs() {\n  # Check if nodejs is installed.\n  type \"$NODEJS_CMD\" >/dev/null 2>&1 || { echo >&2 \"Please install nodejs to run the compatibility tests.\"; exit 1; }\n}\n\ne2e_get_file_cksum() {\n  # creates a checksum of a given file spec\n  # no-op if $CKSUM_CMD is not available\n  type $CKSUM_CMD >/dev/null 2>&1 && (find src -name $1 | sort | xargs $CKSUM_CMD | $CKSUM_CMD) || true\n}\n\ne2e_build_templates() {\n  e2e_assert_dependencies\n  set -e\n  mkdir -p \"$BUILD_TPL_DIR\"\n  rm -rf \"$BUILD_TPL_DIR/*\"\n  # Compile soy templates\n  echo \"Compiling Soy templates...\"\n  rm -f \"$BUILD_TPL_DIR/cksum\"\n  e2e_get_file_cksum '*.soy' > \"$BUILD_TPL_DIR/cksum\"\n  find src -name '*.soy' -exec java -jar lib/closure-templates-compiler/SoyToJsSrcCompiler.jar \\\n  --shouldProvideRequireSoyNamespaces --shouldGenerateJsdoc --shouldDeclareTopLevelNamespaces --isUsingIjData --srcs {} \\\n  --outputPathFormat \"$BUILD_TPL_DIR/{INPUT_DIRECTORY}{INPUT_FILE_NAME}.js\" \\;\n  echo \"Done.\"\n}\n\ne2e_assert_templates() {\n  if [ ! -d $BUILD_TPL_DIR ]; then\n    e2e_build_templates\n  else\n    # If cmp is unavailable, just ignore the check, instead of exiting\n    type cmp >/dev/null 2>&1 && (e2e_get_file_cksum '*.soy' | cmp \"$BUILD_TPL_DIR/cksum\" - >/dev/null 2>&1) || true\n    if [ -f \"$BUILD_TPL_DIR/cksum\" -a $? -eq 0 ] ; then\n      echo \"Using previous template build. Run ./do.sh clean if you want to rebuild the templates.\"\n    else\n      echo \"Template files changed since last build. Rebuilding...\"\n      e2e_build_templates\n    fi\n  fi\n}\n\ne2e_assert_jsdeps() {\n  if [ ! -f \"$BUILD_DIR/deps.js\" ]; then\n    e2e_generate_jsdeps\n  fi\n}\n\ne2e_build_closure_lib_() {\n  # $1 - Closure entry point\n  # $2 - Filename\n  # $3 - Additional source dir\n  # $4 - [debug|optimized]\n  ENTRY_POINT=$1\n  FNAME=$2\n  SRC_DIRS=( \\\n    src \\\n    lib/closure-library/closure/goog \\\n    lib/closure-library/third_party/closure/goog \\\n    lib/closure-templates-compiler lib/zlib.js/src \\\n    lib/typedarray )\n  if [ -d \"$3\" ]; then\n    SRC_DIRS+=(\"$3\")\n  fi\n  jscompile_e2e=\"$JSCOMPILE_CMD\"\n  # Don't compile compatibility tests. They are a node.js and independent of this.\n  jscompile_e2e+=\" --js='!src/javascript/crypto/e2e/compatibility_tests/**.js'\"\n  # Don't compile the gmonkeystub.js. It is injected uncompiled by the extension.\n  jscompile_e2e+=\" --js='!src/javascript/crypto/e2e/extension/helper/gmonkeystub.js'\"\n  for var in \"${SRC_DIRS[@]}\"\n  do\n    jscompile_e2e+=\" --js='$var/**.js' --js='!$var/**_test.js' --js='!$var/**_perf.js'\"\n  done\n  jscompile_e2e+=\" --js='!lib/closure-library/closure/goog/demos/**.js'\"\n  if [ \"$4\" == \"debug\" ]; then\n     jscompile_e2e+=\" --debug --formatting=PRETTY_PRINT -O WHITESPACE_ONLY\"\n  elif [ \"$4\" == \"optimized\" ]; then\n     jscompile_e2e+=\" -O ADVANCED\"\n  fi\n  echo -n \".\"\n  $jscompile_e2e --closure_entry_point \"$ENTRY_POINT\" --js_output_file \"$FNAME\"\n}\n\ne2e_build_jsmodule() {\n  echo \"Building JS module $1 into $BUILD_DIR/$1.js...\"\n  e2e_assert_dependencies\n  set -e\n  e2e_assert_jsdeps\n  mkdir -p \"$BUILD_DIR\"\n  if [ \"$2\" == \"debug\" ]; then\n    echo \"Debug mode enabled\"\n  fi\n  e2e_build_closure_lib_ $1 \"$BUILD_DIR/$1.js\" \"\" $2;\n  echo \"\"\n  echo \"Done.\"\n}\n\ne2e_build_library_prepare() {\n  echo \"Building End-To-End library into $BUILD_DIR/library...\"\n  e2e_assert_dependencies\n  set -e\n  e2e_assert_jsdeps\n  BUILD_EXT_DIR=\"$BUILD_DIR/library\"\n  rm -rf \"$BUILD_EXT_DIR\"\n  mkdir -p \"$BUILD_EXT_DIR\"\n}\n\ne2e_build_library() {\n  e2e_build_library_prepare\n  e2e_build_closure_lib_ \"e2e.openpgp.Context2Impl\" \"$BUILD_EXT_DIR/end-to-end.compiled.js\"\n  e2e_build_closure_lib_ \"e2e.openpgp.Context2Impl\" \"$BUILD_EXT_DIR/end-to-end.debug.js\" \"\" \"debug\"\n  echo -e \"\\nDone.\"\n}\n\ne2e_build_library_ctx1() {\n  e2e_build_library_prepare\n  e2e_build_closure_lib_ \"e2e.openpgp.ContextImpl\" \"$BUILD_EXT_DIR/end-to-end-ctx1.compiled.js\"\n  e2e_build_closure_lib_ \"e2e.openpgp.ContextImpl\" \"$BUILD_EXT_DIR/end-to-end-ctx1.debug.js\" \"\" \"debug\"\n  echo -e \"\\nDone.\"\n}\n\ne2e_build_library_all() {\n  e2e_build_library_prepare\n  e2e_build_closure_lib_ \"e2e.openpgp.ContextImpl\" \"$BUILD_EXT_DIR/end-to-end-ctx1.compiled.js\"\n  e2e_build_closure_lib_ \"e2e.openpgp.ContextImpl\" \"$BUILD_EXT_DIR/end-to-end-ctx1.debug.js\" \"\" \"debug\"\n  e2e_build_closure_lib_ \"e2e.openpgp.Context2Impl\" \"$BUILD_EXT_DIR/end-to-end.compiled.js\"\n  e2e_build_closure_lib_ \"e2e.openpgp.Context2Impl\" \"$BUILD_EXT_DIR/end-to-end.debug.js\" \"\" \"debug\"\n  echo -e \"\\nDone.\"\n}\n\ne2e_test_compat_e2e() {\n  e2e_assert_nodejs\n  e2e_assert_dependencies\n  set -e\n  e2e_assert_jsdeps\n  BUILD_EXT_DIR=\"$BUILD_DIR/library\"\n  rm -rf \"$BUILD_EXT_DIR\"\n  mkdir -p \"$BUILD_EXT_DIR\"\n  echo -n \"Building End-To-End debug library into $BUILD_DIR/library...\"\n  e2e_build_closure_lib_ \"e2e.openpgp.ContextImpl\" \"$BUILD_EXT_DIR/end-to-end.debug.js\" \"\" \"debug\"\n  echo\n  echo \"Running compatibility tests...\"\n  TEST_ROOT=\"src/javascript/crypto/e2e/compatibility_tests\"\n  $NODEJS_CMD \"$TEST_ROOT/drivers/e2e/run.js\" \"$BUILD_EXT_DIR/end-to-end.debug.js\" \"$TEST_ROOT/openpgp-interop/testcases\"\n  echo \"Done.\"\n}\n\ne2e_test_compat_bc() {\n  e2e_assert_dependencies\n  set -e\n  e2e_assert_bc\n  echo \"Running Bouncycastle compatibility tests...\"\n  ant -f src/javascript/crypto/e2e/compatibility_tests/drivers/bc/build.xml run\n  echo \"Done.\"\n}\n\ne2e_build_extension() {\n  e2e_assert_dependencies\n  set -e\n  e2e_assert_jsdeps\n  e2e_assert_templates\n\n  BUILD_EXT_DIR=\"$BUILD_DIR/extension\"\n  echo \"Building End-To-End extension to $BUILD_EXT_DIR\"\n  rm -rf \"$BUILD_EXT_DIR\"\n  mkdir -p \"$BUILD_EXT_DIR\"\n  SRC_EXT_DIR=\"src/javascript/crypto/e2e/extension\"\n  if [ \"$1\" == \"debug\" ]; then\n    echo \"Debug mode enabled\"\n  fi\n  # compile javascript files\n  echo \"Compiling JS files...\"\n  e2e_build_closure_lib_ \"e2e.ext.bootstrap\" \"$BUILD_EXT_DIR/launcher_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.helper.bootstrap\" \"$BUILD_EXT_DIR/helper_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.ui.prompt.bootstrap\" \"$BUILD_EXT_DIR/prompt_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.ui.settings.bootstrap\" \"$BUILD_EXT_DIR/settings_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.ui.welcome.bootstrap\" \"$BUILD_EXT_DIR/welcome_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  # compile css files\n  csscompile_e2e=\"java -jar -Xms512m -Xmx1024m lib/closure-stylesheets/build/closure-stylesheets.jar src/javascript/crypto/e2e/extension/ui/styles/base.css\"\n  echo \"Compiling CSS files...\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/glass/glass.css\" > \"$BUILD_EXT_DIR/glass_styles.css\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/prompt/prompt.css\" > \"$BUILD_EXT_DIR/prompt_styles.css\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/dialogs/overlay/dialog.css\" \"$SRC_EXT_DIR/ui/settings/settings.css\" > \"$BUILD_EXT_DIR/settings_styles.css\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/dialogs/overlay/dialog.css\" \"$SRC_EXT_DIR/ui/welcome/welcome.css\" > \"$BUILD_EXT_DIR/welcome_styles.css\"\n  echo \"Copying extension files...\"\n  # copy extension files\n  cp -fr \"$SRC_EXT_DIR/images\" \"$BUILD_EXT_DIR\"\n  cp -fr \"$SRC_EXT_DIR/_locales\" \"$BUILD_EXT_DIR\"\n  find \"$SRC_EXT_DIR/ui\" -regex .*.html -not -regex .*_test.html -exec cp -f \"{}\" \"$BUILD_EXT_DIR\" \\;\n  cp -f \"$SRC_EXT_DIR/helper/gmonkeystub.js\" \"$BUILD_EXT_DIR\"\n  cp -f \"$SRC_EXT_DIR/extension_manifest.json\" \"$BUILD_EXT_DIR/manifest.json\"\n  echo \"Done.\"\n}\n\ne2e_build_app() {\n  e2e_assert_dependencies\n  set -e\n  e2e_assert_jsdeps\n  e2e_assert_templates\n\n  BUILD_EXT_DIR=\"$BUILD_DIR/app\"\n  echo \"Building End-To-End app to $BUILD_EXT_DIR\"\n  rm -rf \"$BUILD_EXT_DIR\"\n  mkdir -p \"$BUILD_EXT_DIR\"\n  SRC_EXT_DIR=\"src/javascript/crypto/e2e/extension\"\n  # compile javascript files\n  if [ \"$1\" == \"debug\" ]; then\n    echo \"Debug mode enabled\"\n  fi\n  echo \"Compiling JS files...\"\n  e2e_build_closure_lib_ \"e2e.ext.bootstrap\" \"$BUILD_EXT_DIR/launcher_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.helper.bootstrap\" \"$BUILD_EXT_DIR/helper_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.ui.prompt.bootstrap\" \"$BUILD_EXT_DIR/prompt_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.ui.settings.bootstrap\" \"$BUILD_EXT_DIR/settings_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.ui.welcome.bootstrap\" \"$BUILD_EXT_DIR/welcome_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  e2e_build_closure_lib_ \"e2e.ext.ui.webview.bootstrap\" \"$BUILD_EXT_DIR/webview_binary.js\" \"$BUILD_TPL_DIR\" \"$1\"\n  # compile css files\n  csscompile_e2e=\"java -jar lib/closure-stylesheets/build/closure-stylesheets.jar src/javascript/crypto/e2e/extension/ui/styles/base.css\"\n  echo \"Compiling CSS files...\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/glass/glass.css\" > \"$BUILD_EXT_DIR/glass_styles.css\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/prompt/prompt.css\" > \"$BUILD_EXT_DIR/prompt_styles.css\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/settings/settings.css\" > \"$BUILD_EXT_DIR/settings_styles.css\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/welcome/welcome.css\" > \"$BUILD_EXT_DIR/welcome_styles.css\"\n  $csscompile_e2e \"$SRC_EXT_DIR/ui/webview/webview.css\" > \"$BUILD_EXT_DIR/webview_styles.css\"\n  echo \"Copying app files...\"\n  # copy extension files\n  cp -fr \"$SRC_EXT_DIR/images\" \"$BUILD_EXT_DIR\"\n  cp -fr \"$SRC_EXT_DIR/_locales\" \"$BUILD_EXT_DIR\"\n  find \"$SRC_EXT_DIR/ui\" -regex .*.html -not -regex .*_test.html -exec cp -f \"{}\" \"$BUILD_EXT_DIR\" \\;\n  cp -f \"$SRC_EXT_DIR/helper/gmonkeystub.js\" \"$BUILD_EXT_DIR\"\n  cp -f \"$SRC_EXT_DIR/app_manifest.json\" \"$BUILD_EXT_DIR/manifest.json\"\n  echo \"Done.\"\n}\n\ne2e_build_clean() {\n  echo \"Cleaning all builds...\"\n  rm -rfv \"$BUILD_DIR\"\n  rm -rfv \"src/javascript/crypto/e2e/compatibility_tests/drivers/bc/lib\"\n  rm -rfv \"src/javascript/crypto/e2e/compatibility_tests/drivers/bc/build\"\n  echo \"Done.\"\n}\n\ne2e_clean_deps() {\n  echo \"Removing all build dependencies. Install them with ./do.sh install_deps.\"\n  rm -rfv lib\n  echo \"Done.\"\n}\n\ne2e_install_deps() {\n  set -e\n  echo \"Installing build dependencies...\"\n  ./download-libs.sh\n  echo \"Done.\"\n}\n\ne2e_generate_jsdeps() {\n  e2e_assert_templates\n  $PYTHON_CMD lib/closure-library/closure/bin/build/depswriter.py \\\n    --root_with_prefix=\"build/templates/ build/templates/\" \\\n    --root_with_prefix=\"src/javascript/crypto/e2e/ src/javascript/crypto/e2e/\" \\\n    --root_with_prefix=\"lib/closure-templates-compiler/ lib/closure-templates-compiler/\" \\\n    --root_with_prefix=\"lib/zlib.js/ lib/zlib.js/\" \\\n    > \"$BUILD_DIR/deps.js\"\n}\n\ne2e_testserver() {\n  e2e_assert_templates\n  echo \"Generating build/test_js_deps-runfiles.js file...\"\n  mkdir -p \"$BUILD_DIR\"\n  $PYTHON_CMD lib/closure-library/closure/bin/build/depswriter.py \\\n    --root_with_prefix=\"build/templates/ ../../../build/templates/\" \\\n    --root_with_prefix=\"src/javascript/crypto/e2e/ ../crypto/e2e/\" \\\n    --root_with_prefix=\"lib/closure-templates-compiler/ ../../../../lib/closure-templates-compiler/\" \\\n    --root_with_prefix=\"lib/zlib.js/ ../../../lib/zlib.js/\" \\\n    > \"$BUILD_DIR/test_js_deps-runfiles.js\"\n\n  rm -f \"$BUILD_DIR/all_tests.js\"\n  echo \"Starting the End-To-End test server (Press Ctrl-C to stop)...\"\n  $PYTHON_CMD test_server.py $*\n  echo \"Done.\"\n}\n\ne2e_lint() {\n  if [ -z `which gjslint` ]; then\n    echo \"Closure Linter is not installed.\"\n    echo \"Follow instructions at https://developers.google.com/closure/utilities/docs/linter_howto to install (root access is needed).\"\n    RETVAL=1\n  else\n    echo \"Running Closure Linter...\"\n    if [ -z \"$1\" ]; then\n      ADDITIONAL=\"-r src/javascript/crypto/e2e\"\n    else\n      ADDITIONAL=$*\n    fi\n    gjslint --strict --closurized_namespaces=goog,e2e --limited_doc_files=_test.js $ADDITIONAL\n    RETVAL=$?\n  fi\n}\n\ne2e_build_docs() {\n  DOSSIER_JAR=\"lib/js-dossier/bazel-bin/src/java/com/github/jsdossier/dossier_deploy.jar\"\n  rm -rf docs/*\n  if [ ! -f $DOSSIER_JAR ]; then\n    if [ -z `which bazel` ]; then\n      echo \"Bazel is not installed. Bazel is needed by js-dossier to build the documentation.\"\n      echo \"Follow instructions at http://bazel.io/docs/install.html to install.\"\n      echo \"Make sure 'bazel' command line tool is available.\"\n      RETVAL=1\n      exit\n    else\n      pushd lib/js-dossier\n      ./gendossier.sh -r\n      popd\n    fi\n  fi\n  e2e_build_templates\n  java -jar $DOSSIER_JAR -c lib/docs-build/dossier-config.json\n  RETVAL=$?\n}\n\nRETVAL=0\n\nCMD=$1\nshift\n\ncase \"$CMD\" in\n  check_deps)\n    e2e_assert_dependencies;\n    ;;\n  install_deps)\n    e2e_install_deps;\n    ;;\n  build_extension)\n    e2e_build_extension $1;\n    ;;\n  build_app)\n    e2e_build_app $1;\n    ;;\n  build_library)\n    e2e_build_library;\n    ;;\n  build_library_ctx1)\n    e2e_build_library_ctx1;\n    ;;\n  build_library_all)\n    e2e_build_library_all;\n    ;;\n  test_compat_e2e)\n    e2e_test_compat_e2e;\n    ;;\n  test_compat_bc)\n    e2e_test_compat_bc;\n    ;;\n  build_templates)\n    e2e_build_templates;\n    ;;\n  build_jsmodule)\n    e2e_build_jsmodule $*;\n    ;;\n  clean)\n    e2e_build_clean;\n    ;;\n  clean_deps)\n    e2e_clean_deps;\n    ;;\n  testserver)\n    e2e_testserver $*;\n    ;;\n  lint)\n    e2e_lint $*;\n    ;;\n  build_docs)\n    e2e_build_docs;\n    ;;\n  deps)\n    e2e_generate_deps;\n    ;;\n  *)\n    echo \"Usage: $0 {build_app|build_extension|build_library|build_library_ctx1|build_library_all|build_templates|build_docs|clean|check_deps|clean_deps|install_deps|testserver|test_compat_e2e|test_compat_bc|lint} [debug]\"\n    RETVAL=1\nesac\n\nexit $RETVAL\n"
        },
        {
          "name": "download-libs.sh",
          "type": "blob",
          "size": 2.52734375,
          "content": "#!/usr/bin/env bash\n# // Copyright 2014 Google Inc. All rights reserved.\n# //\n# // Licensed under the Apache License, Version 2.0 (the \"License\");\n# // you may not use this file except in compliance with the License.\n# // You may obtain a copy of the License at\n# //\n# //   http://www.apache.org/licenses/LICENSE-2.0\n# //\n# // Unless required by applicable law or agreed to in writing, software\n# // distributed under the License is distributed on an \"AS IS\" BASIS,\n# // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# // See the License for the specific language governing permissions and\n# // limitations under the License.\n# /**\n#  * @fileoverview Shell script to download End-To-End build dependencies\n#  *\n#  * @author koto@google.com (Krzysztof Kotowicz)\n#  */\n\nexport JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8\n\n# symlink function with fallback on cp in case of failure.\nsymlink() {\n  ln -s \"$@\" || cp -R \"$@\"\n}\n\ntype ant >/dev/null 2>&1 || {\n  echo >&2 \"Ant is required to build End-To-End dependencies.\"\n  exit 1\n}\ntype javac >/dev/null 2>&1 || {\n  echo >&2 \"Java compiler is required to build End-To-End dependencies.\"\n  exit 1\n}\n\nif [ ! -d lib ]; then\n  mkdir lib\nfi\n\ngit submodule init\ngit submodule update\n\ncd lib\n\n# symlink typedarray\nif [ ! -d typedarray ]; then\n  mkdir typedarray\n  symlink ../zlib.js/define/typedarray/use.js typedarray/use.js\nfi\n\n# build closure compiler\nif [ ! -f closure-compiler/build/compiler.jar ]; then\n  cd closure-compiler\n  ant clean\n  ant jar\n  cd ..\nfi\n\n# checkout closure templates compiler\nif [ ! -d closure-templates-compiler ]; then\n  curl https://dl.google.com/closure-templates/closure-templates-for-javascript-latest.zip -O # -k --ssl-added-and-removed-here-;-)\n  unzip closure-templates-for-javascript-latest.zip -d closure-templates-compiler\n  rm closure-templates-for-javascript-latest.zip\nfi\n\n# build css compiler\nif [ ! -f closure-stylesheets/build/closure-stylesheets.jar ]; then\n  cd closure-stylesheets\n  ant\n  cd ..\nfi\n\nif [ -f chrome_extensions.js ]; then\n  rm -f chrome_extensions.js\nfi\n\n# Temporary fix\n# Soy file bundled with the compiler does not compile with strict settings:\n# lib/closure-templates-compiler/soyutils_usegoog.js:1762: ERROR - element JS_STR_CHARS does not exist on this enum\ncd closure-templates-compiler\ncurl https://raw.githubusercontent.com/google/closure-templates/05890ed973229bb8ae8a718b01b6ad80560243eb/javascript/soyutils_usegoog.js -O\nif [ -f soyutils.js ]; then\n  # soyutuls.js re-declares goog, which breaks closure\n  mv soyutils.js soyutils.js.notused\nfi\ncd ..\n\ncd ..\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.103515625,
          "content": "{\n  \"name\": \"end-to-end\",\n  \"devDependencies\": {\n    \"grunt\": \"^0.4.5\",\n    \"grunt-shell\": \"^0.7.0\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_server.py",
          "type": "blob",
          "size": 3.0625,
          "content": "# Copyright 2013 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Runs a test server for End-To-End.\"\"\"\n\n__author__ = \"koto@google.com (Krzysztof Kotowicz)\"\n\nimport BaseHTTPServer\nimport cgi\nimport fnmatch\nimport os\nimport os.path\nimport SimpleHTTPServer\nimport StringIO\nimport sys\n\nPORT=8000\nif len(sys.argv) > 1:\n  PORT = int(sys.argv[1])\n\nserver_address = (\"127.0.0.1\", PORT)\n\n# ./do.sh testserver generates the file\nDEPS_FILE=\"build/test_js_deps-runfiles.js\"\nALL_JSTESTS_FILE=\"build/all_tests.js\"\n\nclass TestServerRequestHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):\n  \"\"\"Request handler for End-To-End test server.\"\"\"\n\n  DIRECTORY_MAP = {\n      \"/javascript/closure/\": \"lib/closure-library/closure/goog/\",\n      \"/javascript/crypto/e2e/\": \"src/javascript/crypto/e2e/\",\n      \"/third_party/closure/\": \"lib/closure-library/third_party/closure/\",\n  }\n\n  def get_test_files(self):\n    test_files = []\n    for root, _, files in os.walk(\"src/\"):\n      for f in fnmatch.filter(files, \"*_test.html\"):\n        test_files.append(os.path.join(root, f))\n    return test_files\n\n  def generate_all_tests_file(self):\n    if os.path.exists(ALL_JSTESTS_FILE):\n      return\n    with open(ALL_JSTESTS_FILE, 'wb') as f:\n      f.write('var _allTests=')\n      f.write(repr(self.get_test_files()))\n      f.write(';')\n\n  def list_directory(self, path):\n    \"\"\"Lists only src/**/_test.html files.\"\"\"\n    test_files = self.get_test_files()\n    out = StringIO.StringIO()\n    out.write(\"<h2>End-To-End test server</h2>\")\n    out.write('<h3>Test suite</h3>')\n    out.write('<a href=\\\"%s\\\">%s</a>\\n' % ('/all_tests.html', 'all_tests.html'))\n    out.write('<h3>Individual tests</h3>')\n    out.write(\"<ul>\")\n    for f in test_files:\n      out.write(\"<li><a href=\\\"%s\\\">%s</a>\\n\" % (f, cgi.escape(f)))\n    out.write(\"</ul>\")\n    out.seek(0)\n    self.send_response(200)\n    self.send_header(\"Content-type\", \"text/html\")\n    self.end_headers()\n    return out\n\n  def translate_path(self, path):\n    \"\"\"Serves files from different directories.\"\"\"\n    if path.endswith(\"test_js_deps-runfiles.js\"):\n      return DEPS_FILE\n    if path == '/' + ALL_JSTESTS_FILE:\n      self.generate_all_tests_file()\n      return ALL_JSTESTS_FILE\n    for prefix, dest_dir in TestServerRequestHandler.DIRECTORY_MAP.items():\n      if path.startswith(prefix):\n        return dest_dir + path[len(prefix):]\n    return SimpleHTTPServer.SimpleHTTPRequestHandler.translate_path(\n        self, path)\n\nhttpd = BaseHTTPServer.HTTPServer(server_address, TestServerRequestHandler)\nprint \"Starting test server at http://%s:%d\" % server_address\nhttpd.serve_forever()\n"
        }
      ]
    }
  ]
}