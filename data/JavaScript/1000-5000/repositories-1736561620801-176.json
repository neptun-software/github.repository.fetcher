{
  "metadata": {
    "timestamp": 1736561620801,
    "page": 176,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "testing-library/jest-dom",
      "stars": 4471,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 21.783203125,
          "content": "{\n  \"projectName\": \"jest-dom\",\n  \"projectOwner\": \"testing-library\",\n  \"repoType\": \"github\",\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": false,\n  \"contributors\": [\n    {\n      \"login\": \"kentcdodds\",\n      \"name\": \"Kent C. Dodds\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1500684?v=3\",\n      \"profile\": \"https://kentcdodds.com\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"infra\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"audiolion\",\n      \"name\": \"Ryan Castner\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/2430381?v=4\",\n      \"profile\": \"http://audiolion.github.io\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"dnlsandiego\",\n      \"name\": \"Daniel Sandiego\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/8008023?v=4\",\n      \"profile\": \"https://www.dnlsandiego.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Miklet\",\n      \"name\": \"Paweł Mikołajczyk\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/12592677?v=4\",\n      \"profile\": \"https://github.com/Miklet\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"alejandronanez\",\n      \"name\": \"Alejandro Ñáñez Ortiz\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/464978?v=4\",\n      \"profile\": \"http://co.linkedin.com/in/alejandronanez/\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"pbomb\",\n      \"name\": \"Matt Parrish\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/1402095?v=4\",\n      \"profile\": \"https://github.com/pbomb\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"wKovacs64\",\n      \"name\": \"Justin Hall\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/1288694?v=4\",\n      \"profile\": \"https://github.com/wKovacs64\",\n      \"contributions\": [\n        \"platform\"\n      ]\n    },\n    {\n      \"login\": \"antoaravinth\",\n      \"name\": \"Anto Aravinth\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/1241511?s=460&v=4\",\n      \"profile\": \"https://github.com/antoaravinth\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"JonahMoses\",\n      \"name\": \"Jonah Moses\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/3462296?v=4\",\n      \"profile\": \"https://github.com/JonahMoses\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"lgandecki\",\n      \"name\": \"Łukasz Gandecki\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/4002543?v=4\",\n      \"profile\": \"http://team.thebrain.pro\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"sompylasar\",\n      \"name\": \"Ivan Babak\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/498274?v=4\",\n      \"profile\": \"https://sompylasar.github.io\",\n      \"contributions\": [\n        \"bug\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"jday3\",\n      \"name\": \"Jesse Day\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/4439618?v=4\",\n      \"profile\": \"https://github.com/jday3\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"gnapse\",\n      \"name\": \"Ernesto García\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/15199?v=4\",\n      \"profile\": \"http://gnapse.github.io\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"mvolkmann\",\n      \"name\": \"Mark Volkmann\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/79312?v=4\",\n      \"profile\": \"http://ociweb.com/mark/\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"smacpherson64\",\n      \"name\": \"smacpherson64\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/1659099?v=4\",\n      \"profile\": \"https://github.com/smacpherson64\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"jgoz\",\n      \"name\": \"John Gozde\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/132233?v=4\",\n      \"profile\": \"https://github.com/jgoz\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"callada\",\n      \"name\": \"Iwona\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/7830590?v=4\",\n      \"profile\": \"https://github.com/callada\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"6ewis\",\n      \"name\": \"Lewis\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/840609?v=4\",\n      \"profile\": \"https://github.com/6ewis\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"lourenci\",\n      \"name\": \"Leandro Lourenci\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/2339362?v=4\",\n      \"profile\": \"https://blog.lourenci.com/\",\n      \"contributions\": [\n        \"bug\",\n        \"doc\",\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"mufasa71\",\n      \"name\": \"Shukhrat Mukimov\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/626420?v=4\",\n      \"profile\": \"https://github.com/mufasa71\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"dreyks\",\n      \"name\": \"Roman Usherenko\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/1481264?v=4\",\n      \"profile\": \"https://github.com/dreyks\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"jhsu\",\n      \"name\": \"Joe Hsu\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/648?v=4\",\n      \"profile\": \"http://josephhsu.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"diegohaz\",\n      \"name\": \"Haz\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/3068563?v=4\",\n      \"profile\": \"https://twitter.com/diegohaz\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"revathskumar\",\n      \"name\": \"Revath S Kumar\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/463904?v=4\",\n      \"profile\": \"https://blog.revathskumar.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"hiwelo\",\n      \"name\": \"hiwelo.\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/4989733?v=4\",\n      \"profile\": \"https://raccoon.studio\",\n      \"contributions\": [\n        \"code\",\n        \"ideas\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"lukaszfiszer\",\n      \"name\": \"Łukasz Fiszer\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/1201711?v=4\",\n      \"profile\": \"https://github.com/lukaszfiszer\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"jeanchung\",\n      \"name\": \"Jean Chung\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/10778036?v=4\",\n      \"profile\": \"https://github.com/jeanchung\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"CarlaTeo\",\n      \"name\": \"CarlaTeo\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/9220147?v=4\",\n      \"profile\": \"https://github.com/CarlaTeo\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"YardenShoham\",\n      \"name\": \"Yarden Shoham\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/20454870?v=4\",\n      \"profile\": \"https://github.com/YardenShoham\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"kandros\",\n      \"name\": \"Jaga Santagostino\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/4562878?v=4\",\n      \"profile\": \"http://jagascript.com\",\n      \"contributions\": [\n        \"bug\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"connormeredith\",\n      \"name\": \"Connor Meredith\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/4907463?v=4\",\n      \"profile\": \"https://github.com/connormeredith\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"pwolaq\",\n      \"name\": \"Pawel Wolak\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/10261750?v=4\",\n      \"profile\": \"https://github.com/pwolaq\",\n      \"contributions\": [\n        \"test\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"MichaelDeBoey\",\n      \"name\": \"Michaël De Boey\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/6643991?v=4\",\n      \"profile\": \"https://michaeldeboey.be\",\n      \"contributions\": [\n        \"infra\"\n      ]\n    },\n    {\n      \"login\": \"jzarzeckis\",\n      \"name\": \"Jānis Zaržeckis\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/919350?v=4\",\n      \"profile\": \"https://github.com/jzarzeckis\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"koala-lava\",\n      \"name\": \"koala-lava\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/15828770?v=4\",\n      \"profile\": \"https://github.com/koala-lava\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"JPBlancoDB\",\n      \"name\": \"Juan Pablo Blanco\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/16567863?v=4\",\n      \"profile\": \"https://jpblanco.dev\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"benmonro\",\n      \"name\": \"Ben Monro\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/399236?v=4\",\n      \"profile\": \"https://github.com/benmonro\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"jeffbernst\",\n      \"name\": \"Jeff Bernstein\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/6685560?v=4\",\n      \"profile\": \"http://jeffbernstein.io\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"SergiCL\",\n      \"name\": \"Sergi\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/41625166?v=4\",\n      \"profile\": \"https://github.com/SergiCL\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"skovy\",\n      \"name\": \"Spencer Miskoviak\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/5247455?v=4\",\n      \"profile\": \"https://skovy.dev\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"jonrimmer\",\n      \"name\": \"Jon Rimmer\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/183786?v=4\",\n      \"profile\": \"https://twitter.com/jonrimmer\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"cloud-walker\",\n      \"name\": \"Luca Barone\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/1144075?v=4\",\n      \"profile\": \"https://github.com/cloud-walker\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"mfelmy\",\n      \"name\": \"Malte Felmy\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/29504917?v=4\",\n      \"profile\": \"https://github.com/mfelmy\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"Ishaan28malik\",\n      \"name\": \"Championrunner\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/27343592?v=4\",\n      \"profile\": \"https://ghuser.io/Ishaan28malik\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"BurntCaramel\",\n      \"name\": \"Patrick Smith\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/2635733?v=4\",\n      \"profile\": \"https://icing.space/\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"rubenmoya\",\n      \"name\": \"Rubén Moya\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/905225?v=4\",\n      \"profile\": \"https://rubenmoya.dev\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"DanielaValero\",\n      \"name\": \"Daniela Valero\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/1307954?v=4\",\n      \"profile\": \"https://danielavalero.com/\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"missilev\",\n      \"name\": \"Vladislav Katsura\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/33201468?v=4\",\n      \"profile\": \"https://github.com/missilev\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"tf\",\n      \"name\": \"Tim Fischbach\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/26554?v=4\",\n      \"profile\": \"http://stderr.timfischbach.de\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"kboedges\",\n      \"name\": \"Katie Boedges\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/8322476?v=4\",\n      \"profile\": \"http://katieboedges.com/\",\n      \"contributions\": [\n        \"infra\"\n      ]\n    },\n    {\n      \"login\": \"brrianalexis\",\n      \"name\": \"Brian Alexis\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/51463930?v=4\",\n      \"profile\": \"https://github.com/brrianalexis\",\n      \"contributions\": [\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"just-boris\",\n      \"name\": \"Boris Serdiuk\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/812240?v=4\",\n      \"profile\": \"https://twitter.com/boriscoder\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"danawoodman\",\n      \"name\": \"Dana Woodman\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/157695?v=4\",\n      \"profile\": \"http://danawoodman.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"MoSattler\",\n      \"name\": \"Mo Sattler\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/64152453?v=4\",\n      \"profile\": \"https://github.com/MoSattler\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"geoffrich\",\n      \"name\": \"Geoff Rich\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/4992896?v=4\",\n      \"profile\": \"https://github.com/geoffrich\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"ideas\",\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"syneva-runyan\",\n      \"name\": \"Syneva\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/20505588?v=4\",\n      \"profile\": \"https://github.com/syneva-runyan\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"nickmccurdy\",\n      \"name\": \"Nick McCurdy\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/927220?v=4\",\n      \"profile\": \"https://nickmccurdy.com/\",\n      \"contributions\": [\n        \"doc\",\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"obedparla\",\n      \"name\": \"Obed Marquez Parlapiano\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/10674462?v=4\",\n      \"profile\": \"https://obedparla.com/\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"calebeby\",\n      \"name\": \"Caleb Eby\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/13206945?v=4\",\n      \"profile\": \"https://github.com/calebeby\",\n      \"contributions\": [\n        \"doc\",\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"marcelbarner\",\n      \"name\": \"Marcel Barner\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/12788744?v=4\",\n      \"profile\": \"https://github.com/marcelbarner\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"SevenOutman\",\n      \"name\": \"Doma\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8225666?v=4\",\n      \"profile\": \"https://github.com/SevenOutman\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"julienw\",\n      \"name\": \"Julien Wajsberg\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/454175?v=4\",\n      \"profile\": \"http://everlong.org/\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"icecream17\",\n      \"name\": \"steven nguyen\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/58114641?v=4\",\n      \"profile\": \"http://lichess.org/@/StevenEmily\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"tu4mo\",\n      \"name\": \"tu4mo\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/16735302?v=4\",\n      \"profile\": \"http://tu4mo.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"MatanBobi\",\n      \"name\": \"Matan Borenkraout\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/12711091?v=4\",\n      \"profile\": \"https://matan.io\",\n      \"contributions\": [\n        \"platform\"\n      ]\n    },\n    {\n      \"login\": \"yannbf\",\n      \"name\": \"Yann Braga\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1671563?v=4\",\n      \"profile\": \"https://github.com/yannbf\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"IanVS\",\n      \"name\": \"Ian VanSchooten\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4616705?v=4\",\n      \"profile\": \"https://github.com/IanVS\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"cbroeren\",\n      \"name\": \"Chantal Broeren\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7499806?v=4\",\n      \"profile\": \"http://chantalbroeren.nl\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"astorije\",\n      \"name\": \"Jérémie Astori\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/113730?v=4\",\n      \"profile\": \"https://jeremie.astori.fr\",\n      \"contributions\": [\n        \"code\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"ashleyryan\",\n      \"name\": \"Ashley Ryan\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/9469374?v=4\",\n      \"profile\": \"https://github.com/ashleyryan\",\n      \"contributions\": [\n        \"code\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"fpapado\",\n      \"name\": \"Fotis Papadogeorgopoulos\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/3210764?v=4\",\n      \"profile\": \"http://fotis.xyz\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"jakeboone02\",\n      \"name\": \"Jake Boone\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/366438?v=4\",\n      \"profile\": \"https://github.com/jakeboone02\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"SteKoe\",\n      \"name\": \"Stephan Köninger\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1809221?v=4\",\n      \"profile\": \"http://www.stekoe.de\",\n      \"contributions\": [\n        \"bug\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"kryops\",\n      \"name\": \"Michael Manzinger\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1042594?v=4\",\n      \"profile\": \"https://github.com/kryops\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"Dennis273\",\n      \"name\": \"Dennis Chen\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/19815164?v=4\",\n      \"profile\": \"https://github.com/Dennis273\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"tonyhallett\",\n      \"name\": \"Tony Hallett\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/11292998?v=4\",\n      \"profile\": \"https://github.com/tonyhallett\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"ddolcimascolo\",\n      \"name\": \"David DOLCIMASCOLO\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/5468291?v=4\",\n      \"profile\": \"https://github.com/ddolcimascolo\",\n      \"contributions\": [\n        \"maintenance\"\n      ]\n    },\n    {\n      \"login\": \"aleks-elkin\",\n      \"name\": \"Aleksandr Elkin\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/55530374?v=4\",\n      \"profile\": \"https://github.com/aleks-elkin\",\n      \"contributions\": [\n        \"maintenance\"\n      ]\n    },\n    {\n      \"login\": \"vorant94\",\n      \"name\": \"Mordechai Dror\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/9719319?v=4\",\n      \"profile\": \"https://www.vorant94.io/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"waynevanson\",\n      \"name\": \"Wayne Van Son\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/29592214?v=4\",\n      \"profile\": \"http://www.waynevanson.com\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"idanen\",\n      \"name\": \"Idan Entin\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1687893?v=4\",\n      \"profile\": \"https://github.com/idanen\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"mibcadet\",\n      \"name\": \"mibcadet\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/925500?v=4\",\n      \"profile\": \"https://github.com/mibcadet\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"silviuaavram\",\n      \"name\": \"Silviu Alexandru Avram\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/11275392?v=4\",\n      \"profile\": \"https://silviuaavram.com\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"G-Rath\",\n      \"name\": \"Gareth Jones\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/3151613?v=4\",\n      \"profile\": \"https://github.com/G-Rath\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"billyjanitsch\",\n      \"name\": \"Billy Janitsch\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1158733?v=4\",\n      \"profile\": \"https://billyjanitsch.com\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"InfiniteXyy\",\n      \"name\": \"InfiniteXyy\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/26314308?v=4\",\n      \"profile\": \"https://xyynext.com\",\n      \"contributions\": [\n        \"code\",\n        \"bug\"\n      ]\n    }\n  ],\n  \"repoHost\": \"https://github.com\",\n  \"contributorsPerLine\": 7,\n  \"skipCi\": false,\n  \"commitType\": \"docs\",\n  \"commitConvention\": \"angular\"\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0185546875,
          "content": "* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1298828125,
          "content": "node_modules\ncoverage\ndist\n.DS_Store\n\n# these cause more harm than good\n# when working with contributors\npackage-lock.json\nyarn.lock\n"
        },
        {
          "name": ".huskyrc.js",
          "type": "blob",
          "size": 0.044921875,
          "content": "module.exports = require('kcd-scripts/husky')\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0546875,
          "content": "registry=https://registry.npmjs.org/\npackage-lock=false\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0263671875,
          "content": "node_modules\ncoverage\ndist\n"
        },
        {
          "name": ".prettierrc.js",
          "type": "blob",
          "size": 0.0478515625,
          "content": "module.exports = require('kcd-scripts/prettier')\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.1826171875,
          "content": "# CHANGELOG\n\nThe changelog is automatically updated using\n[semantic-release](https://github.com/semantic-release/semantic-release). You\ncan see it on the [releases page](../../releases).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.7294921875,
          "content": "# Contributing\n\nThanks for being willing to contribute!\n\n**Working on your first Pull Request?** You can learn how from this _free_\nseries [How to Contribute to an Open Source Project on GitHub][egghead]\n\n## Project setup\n\n1. Fork and clone the repo\n2. Run `npm run setup -s` to install dependencies and run validation\n3. Create a branch for your PR with `git checkout -b pr/your-branch-name`\n\n> Tip: Keep your `main` branch pointing at the original repository and make pull\n> requests from branches on your fork. To do this, run:\n>\n> ```\n> git remote add upstream https://github.com/testing-library/jest-dom.git\n> git fetch upstream\n> git branch --set-upstream-to=upstream/main main\n> ```\n>\n> This will add the original repository as a \"remote\" called \"upstream,\" Then\n> fetch the git information from that remote, then set your local `main` branch\n> to use the upstream main branch whenever you run `git pull`. Then you can make\n> all of your pull request branches based on this `main` branch. Whenever you\n> want to update your version of `main`, do a regular `git pull`.\n\n## Committing and Pushing changes\n\nPlease make sure to run the tests before you commit your changes. You can run\n`npm run test:update` which will update any snapshots that need updating. Make\nsure to include those changes (if they exist) in your commit.\n\n## Help needed\n\nPlease checkout the [the open issues][issues]\n\nAlso, please watch the repo and respond to questions/bug reports/feature\nrequests! Thanks!\n\n<!-- prettier-ignore-start -->\n[egghead]: https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github\n[all-contributors]: https://github.com/all-contributors/all-contributors\n[issues]: https://github.com/testing-library/jest-dom/issues\n<!-- prettier-ignore-end -->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "The MIT License (MIT)\nCopyright (c) 2017 Kent C. Dodds\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 88.201171875,
          "content": "<div align=\"center\">\n<h1>jest-dom</h1>\n\n<a href=\"https://www.emojione.com/emoji/1f989\">\n  <img\n    height=\"80\"\n    width=\"80\"\n    alt=\"owl\"\n    src=\"https://raw.githubusercontent.com/testing-library/jest-dom/main/other/owl.png\"\n  />\n</a>\n\n<p>Custom jest matchers to test the state of the DOM</p>\n\n</div>\n\n---\n\n<!-- prettier-ignore-start -->\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package] [![downloads][downloads-badge]][npmtrends]\n[![MIT License][license-badge]][license]\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-28-orange.svg?style=flat-square)](#contributors-)\n[![PRs Welcome][prs-badge]][prs] [![Code of Conduct][coc-badge]][coc]\n[![Discord][discord-badge]][discord]\n\n[![Watch on GitHub][github-watch-badge]][github-watch]\n[![Star on GitHub][github-star-badge]][github-star]\n[![Tweet][twitter-badge]][twitter]\n<!-- prettier-ignore-end -->\n\n## The problem\n\nYou want to use [jest][] to write tests that assert various things about the\nstate of a DOM. As part of that goal, you want to avoid all the repetitive\npatterns that arise in doing so. Checking for an element's attributes, its text\ncontent, its css classes, you name it.\n\n## This solution\n\nThe `@testing-library/jest-dom` library provides a set of custom jest matchers\nthat you can use to extend jest. These will make your tests more declarative,\nclear to read and to maintain.\n\n## Table of Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [With `@jest/globals`](#with-jestglobals)\n  - [With Vitest](#with-vitest)\n  - [With TypeScript](#with-typescript)\n  - [With another Jest-compatible `expect`](#with-another-jest-compatible-expect)\n- [Custom matchers](#custom-matchers)\n  - [`toBeDisabled`](#tobedisabled)\n  - [`toBeEnabled`](#tobeenabled)\n  - [`toBeEmptyDOMElement`](#tobeemptydomelement)\n  - [`toBeInTheDocument`](#tobeinthedocument)\n  - [`toBeInvalid`](#tobeinvalid)\n  - [`toBeRequired`](#toberequired)\n  - [`toBeValid`](#tobevalid)\n  - [`toBeVisible`](#tobevisible)\n  - [`toContainElement`](#tocontainelement)\n  - [`toContainHTML`](#tocontainhtml)\n  - [`toHaveAccessibleDescription`](#tohaveaccessibledescription)\n  - [`toHaveAccessibleErrorMessage`](#tohaveaccessibleerrormessage)\n  - [`toHaveAccessibleName`](#tohaveaccessiblename)\n  - [`toHaveAttribute`](#tohaveattribute)\n  - [`toHaveClass`](#tohaveclass)\n  - [`toHaveFocus`](#tohavefocus)\n  - [`toHaveFormValues`](#tohaveformvalues)\n  - [`toHaveStyle`](#tohavestyle)\n  - [`toHaveTextContent`](#tohavetextcontent)\n  - [`toHaveValue`](#tohavevalue)\n  - [`toHaveDisplayValue`](#tohavedisplayvalue)\n  - [`toBeChecked`](#tobechecked)\n  - [`toBePartiallyChecked`](#tobepartiallychecked)\n  - [`toHaveRole`](#tohaverole)\n  - [`toHaveErrorMessage`](#tohaveerrormessage)\n  - [`toHaveSelection`](#tohaveselection)\n- [Deprecated matchers](#deprecated-matchers)\n  - [`toBeEmpty`](#tobeempty)\n  - [`toBeInTheDOM`](#tobeinthedom)\n  - [`toHaveDescription`](#tohavedescription)\n- [Inspiration](#inspiration)\n- [Other Solutions](#other-solutions)\n- [Guiding Principles](#guiding-principles)\n- [Contributors](#contributors)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and\nshould be installed as one of your project's `devDependencies`:\n\n```\nnpm install --save-dev @testing-library/jest-dom\n```\n\nor\n\nfor installation with [yarn](https://yarnpkg.com/) package manager.\n\n```\nyarn add --dev @testing-library/jest-dom\n```\n\n> Note: We also recommend installing the jest-dom eslint plugin which provides\n> auto-fixable lint rules that prevent false positive tests and improve test\n> readability by ensuring you are using the right matchers in your tests. More\n> details can be found at\n> [eslint-plugin-jest-dom](https://github.com/testing-library/eslint-plugin-jest-dom).\n\n## Usage\n\nImport `@testing-library/jest-dom` once (for instance in your [tests setup\nfile][]) and you're good to go:\n\n[tests setup file]:\n  https://jestjs.io/docs/en/configuration.html#setupfilesafterenv-array\n\n```javascript\n// In your own jest-setup.js (or any other name)\nimport '@testing-library/jest-dom'\n\n// In jest.config.js add (if you haven't already)\nsetupFilesAfterEnv: ['<rootDir>/jest-setup.js']\n```\n\n### With `@jest/globals`\n\nIf you are using [`@jest/globals`][jest-globals announcement] with\n[`injectGlobals: false`][inject-globals docs], you will need to use a different\nimport in your tests setup file:\n\n```javascript\n// In your own jest-setup.js (or any other name)\nimport '@testing-library/jest-dom/jest-globals'\n```\n\n[jest-globals announcement]:\n  https://jestjs.io/blog/2020/05/05/jest-26#a-new-way-to-consume-jest---jestglobals\n[inject-globals docs]:\n  https://jestjs.io/docs/configuration#injectglobals-boolean\n\n### With Vitest\n\nIf you are using [vitest][], this module will work as-is, but you will need to\nuse a different import in your tests setup file. This file should be added to\nthe [`setupFiles`][vitest setupfiles] property in your vitest config:\n\n```javascript\n// In your own vitest-setup.js (or any other name)\nimport '@testing-library/jest-dom/vitest'\n\n// In vitest.config.js add (if you haven't already)\nsetupFiles: ['./vitest-setup.js']\n```\n\nAlso, depending on your local setup, you may need to update your\n`tsconfig.json`:\n\n```json\n  // In tsconfig.json\n  \"compilerOptions\": {\n    ...\n    \"types\": [\"vitest/globals\", \"@testing-library/jest-dom\"]\n  },\n  \"include\": [\n    ...\n    \"./vitest.setup.ts\"\n  ],\n```\n\n[vitest]: https://vitest.dev/\n[vitest setupfiles]: https://vitest.dev/config/#setupfiles\n\n### With TypeScript\n\nIf you're using TypeScript, make sure your setup file is a `.ts` and not a `.js`\nto include the necessary types.\n\nYou will also need to include your setup file in your `tsconfig.json` if you\nhaven't already:\n\n```json\n  // In tsconfig.json\n  \"include\": [\n    ...\n    \"./jest-setup.ts\"\n  ],\n```\n\n### With another Jest-compatible `expect`\n\nIf you are using a different test runner that is compatible with Jest's `expect`\ninterface, it might be possible to use it with this library:\n\n```javascript\nimport * as matchers from '@testing-library/jest-dom/matchers'\nimport {expect} from 'my-test-runner/expect'\n\nexpect.extend(matchers)\n```\n\n## Custom matchers\n\n`@testing-library/jest-dom` can work with any library or framework that returns\nDOM elements from queries. The custom matcher examples below are written using\nmatchers from `@testing-library`'s suite of libraries (e.g. `getByTestId`,\n`queryByTestId`, `getByText`, etc.)\n\n### `toBeDisabled`\n\n```typescript\ntoBeDisabled()\n```\n\nThis allows you to check whether an element is disabled from the user's\nperspective. According to the specification, the following elements can be\n[disabled](https://html.spec.whatwg.org/multipage/semantics-other.html#disabled-elements):\n`button`, `input`, `select`, `textarea`, `optgroup`, `option`, `fieldset`, and\ncustom elements.\n\nThis custom matcher considers an element as disabled if the element is among the\ntypes of elements that can be disabled (listed above), and the `disabled`\nattribute is present. It will also consider the element as disabled if it's\ninside a parent form element that supports being disabled and has the `disabled`\nattribute present.\n\n#### Examples\n\n```html\n<button data-testid=\"button\" type=\"submit\" disabled>submit</button>\n<fieldset disabled><input type=\"text\" data-testid=\"input\" /></fieldset>\n<a href=\"...\" disabled>link</a>\n```\n\n```javascript\nexpect(getByTestId('button')).toBeDisabled()\nexpect(getByTestId('input')).toBeDisabled()\nexpect(getByText('link')).not.toBeDisabled()\n```\n\n> This custom matcher does not take into account the presence or absence of the\n> `aria-disabled` attribute. For more on why this is the case, check\n> [#144](https://github.com/testing-library/jest-dom/issues/144).\n\n<hr />\n\n### `toBeEnabled`\n\n```typescript\ntoBeEnabled()\n```\n\nThis allows you to check whether an element is not disabled from the user's\nperspective.\n\nIt works like `not.toBeDisabled()`. Use this matcher to avoid double negation in\nyour tests.\n\n> This custom matcher does not take into account the presence or absence of the\n> `aria-disabled` attribute. For more on why this is the case, check\n> [#144](https://github.com/testing-library/jest-dom/issues/144).\n\n<hr />\n\n### `toBeEmptyDOMElement`\n\n```typescript\ntoBeEmptyDOMElement()\n```\n\nThis allows you to assert whether an element has no visible content for the\nuser. It ignores comments but will fail if the element contains white-space.\n\n#### Examples\n\n```html\n<span data-testid=\"not-empty\"><span data-testid=\"empty\"></span></span>\n<span data-testid=\"with-whitespace\"> </span>\n<span data-testid=\"with-comment\"><!-- comment --></span>\n```\n\n```javascript\nexpect(getByTestId('empty')).toBeEmptyDOMElement()\nexpect(getByTestId('not-empty')).not.toBeEmptyDOMElement()\nexpect(getByTestId('with-whitespace')).not.toBeEmptyDOMElement()\n```\n\n<hr />\n\n### `toBeInTheDocument`\n\n```typescript\ntoBeInTheDocument()\n```\n\nThis allows you to assert whether an element is present in the document or not.\n\n#### Examples\n\n```html\n<span data-testid=\"html-element\"><span>Html Element</span></span>\n<svg data-testid=\"svg-element\"></svg>\n```\n\n```javascript\nexpect(\n  getByTestId(document.documentElement, 'html-element'),\n).toBeInTheDocument()\nexpect(getByTestId(document.documentElement, 'svg-element')).toBeInTheDocument()\nexpect(\n  queryByTestId(document.documentElement, 'does-not-exist'),\n).not.toBeInTheDocument()\n```\n\n> Note: This matcher does not find detached elements. The element must be added\n> to the document to be found by toBeInTheDocument. If you desire to search in a\n> detached element please use: [`toContainElement`](#tocontainelement)\n\n<hr />\n\n### `toBeInvalid`\n\n```typescript\ntoBeInvalid()\n```\n\nThis allows you to check if an element, is currently invalid.\n\nAn element is invalid if it has an\n[`aria-invalid` attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-invalid_attribute)\nwith no value or a value of `\"true\"`, or if the result of\n[`checkValidity()`](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation)\nis `false`.\n\n#### Examples\n\n```html\n<input data-testid=\"no-aria-invalid\" />\n<input data-testid=\"aria-invalid\" aria-invalid />\n<input data-testid=\"aria-invalid-value\" aria-invalid=\"true\" />\n<input data-testid=\"aria-invalid-false\" aria-invalid=\"false\" />\n\n<form data-testid=\"valid-form\">\n  <input />\n</form>\n\n<form data-testid=\"invalid-form\">\n  <input required />\n</form>\n```\n\n```javascript\nexpect(getByTestId('no-aria-invalid')).not.toBeInvalid()\nexpect(getByTestId('aria-invalid')).toBeInvalid()\nexpect(getByTestId('aria-invalid-value')).toBeInvalid()\nexpect(getByTestId('aria-invalid-false')).not.toBeInvalid()\n\nexpect(getByTestId('valid-form')).not.toBeInvalid()\nexpect(getByTestId('invalid-form')).toBeInvalid()\n```\n\n<hr />\n\n### `toBeRequired`\n\n```typescript\ntoBeRequired()\n```\n\nThis allows you to check if a form element is currently required.\n\nAn element is required if it is having a `required` or `aria-required=\"true\"`\nattribute.\n\n#### Examples\n\n```html\n<input data-testid=\"required-input\" required />\n<input data-testid=\"aria-required-input\" aria-required=\"true\" />\n<input data-testid=\"conflicted-input\" required aria-required=\"false\" />\n<input data-testid=\"aria-not-required-input\" aria-required=\"false\" />\n<input data-testid=\"optional-input\" />\n<input data-testid=\"unsupported-type\" type=\"image\" required />\n<select data-testid=\"select\" required></select>\n<textarea data-testid=\"textarea\" required></textarea>\n<div data-testid=\"supported-role\" role=\"tree\" required></div>\n<div data-testid=\"supported-role-aria\" role=\"tree\" aria-required=\"true\"></div>\n```\n\n```javascript\nexpect(getByTestId('required-input')).toBeRequired()\nexpect(getByTestId('aria-required-input')).toBeRequired()\nexpect(getByTestId('conflicted-input')).toBeRequired()\nexpect(getByTestId('aria-not-required-input')).not.toBeRequired()\nexpect(getByTestId('optional-input')).not.toBeRequired()\nexpect(getByTestId('unsupported-type')).not.toBeRequired()\nexpect(getByTestId('select')).toBeRequired()\nexpect(getByTestId('textarea')).toBeRequired()\nexpect(getByTestId('supported-role')).not.toBeRequired()\nexpect(getByTestId('supported-role-aria')).toBeRequired()\n```\n\n<hr />\n\n### `toBeValid`\n\n```typescript\ntoBeValid()\n```\n\nThis allows you to check if the value of an element, is currently valid.\n\nAn element is valid if it has no\n[`aria-invalid` attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-invalid_attribute)s\nor an attribute value of `\"false\"`. The result of\n[`checkValidity()`](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation)\nmust also be `true` if it's a form element.\n\n#### Examples\n\n```html\n<input data-testid=\"no-aria-invalid\" />\n<input data-testid=\"aria-invalid\" aria-invalid />\n<input data-testid=\"aria-invalid-value\" aria-invalid=\"true\" />\n<input data-testid=\"aria-invalid-false\" aria-invalid=\"false\" />\n\n<form data-testid=\"valid-form\">\n  <input />\n</form>\n\n<form data-testid=\"invalid-form\">\n  <input required />\n</form>\n```\n\n```javascript\nexpect(getByTestId('no-aria-invalid')).toBeValid()\nexpect(getByTestId('aria-invalid')).not.toBeValid()\nexpect(getByTestId('aria-invalid-value')).not.toBeValid()\nexpect(getByTestId('aria-invalid-false')).toBeValid()\n\nexpect(getByTestId('valid-form')).toBeValid()\nexpect(getByTestId('invalid-form')).not.toBeValid()\n```\n\n<hr />\n\n### `toBeVisible`\n\n```typescript\ntoBeVisible()\n```\n\nThis allows you to check if an element is currently visible to the user.\n\nAn element is visible if **all** the following conditions are met:\n\n- it is present in the document\n- it does not have its css property `display` set to `none`\n- it does not have its css property `visibility` set to either `hidden` or\n  `collapse`\n- it does not have its css property `opacity` set to `0`\n- its parent element is also visible (and so on up to the top of the DOM tree)\n- it does not have the\n  [`hidden`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden)\n  attribute\n- if `<details />` it has the `open` attribute\n\n#### Examples\n\n```html\n<div data-testid=\"zero-opacity\" style=\"opacity: 0\">Zero Opacity Example</div>\n<div data-testid=\"visibility-hidden\" style=\"visibility: hidden\">\n  Visibility Hidden Example\n</div>\n<div data-testid=\"display-none\" style=\"display: none\">Display None Example</div>\n<div style=\"opacity: 0\">\n  <span data-testid=\"hidden-parent\">Hidden Parent Example</span>\n</div>\n<div data-testid=\"visible\">Visible Example</div>\n<div data-testid=\"hidden-attribute\" hidden>Hidden Attribute Example</div>\n<details>\n  <summary>Title of hidden text</summary>\n  Hidden Details Example\n</details>\n<details open>\n  <summary>Title of visible text</summary>\n  <div>Visible Details Example</div>\n</details>\n```\n\n```javascript\nexpect(getByText('Zero Opacity Example')).not.toBeVisible()\nexpect(getByText('Visibility Hidden Example')).not.toBeVisible()\nexpect(getByText('Display None Example')).not.toBeVisible()\nexpect(getByText('Hidden Parent Example')).not.toBeVisible()\nexpect(getByText('Visible Example')).toBeVisible()\nexpect(getByText('Hidden Attribute Example')).not.toBeVisible()\nexpect(getByText('Hidden Details Example')).not.toBeVisible()\nexpect(getByText('Visible Details Example')).toBeVisible()\n```\n\n<hr />\n\n### `toContainElement`\n\n```typescript\ntoContainElement(element: HTMLElement | SVGElement | null)\n```\n\nThis allows you to assert whether an element contains another element as a\ndescendant or not.\n\n#### Examples\n\n```html\n<span data-testid=\"ancestor\"><span data-testid=\"descendant\"></span></span>\n```\n\n```javascript\nconst ancestor = getByTestId('ancestor')\nconst descendant = getByTestId('descendant')\nconst nonExistantElement = getByTestId('does-not-exist')\n\nexpect(ancestor).toContainElement(descendant)\nexpect(descendant).not.toContainElement(ancestor)\nexpect(ancestor).not.toContainElement(nonExistantElement)\n```\n\n<hr />\n\n### `toContainHTML`\n\n```typescript\ntoContainHTML(htmlText: string)\n```\n\nAssert whether a string representing a HTML element is contained in another\nelement. The string should contain valid html, and not any incomplete html.\n\n#### Examples\n\n```html\n<span data-testid=\"parent\"><span data-testid=\"child\"></span></span>\n```\n\n```javascript\n// These are valid uses\nexpect(getByTestId('parent')).toContainHTML('<span data-testid=\"child\"></span>')\nexpect(getByTestId('parent')).toContainHTML('<span data-testid=\"child\" />')\nexpect(getByTestId('parent')).not.toContainHTML('<br />')\n\n// These won't work\nexpect(getByTestId('parent')).toContainHTML('data-testid=\"child\"')\nexpect(getByTestId('parent')).toContainHTML('data-testid')\nexpect(getByTestId('parent')).toContainHTML('</span>')\n```\n\n> Chances are you probably do not need to use this matcher. We encourage testing\n> from the perspective of how the user perceives the app in a browser. That's\n> why testing against a specific DOM structure is not advised.\n>\n> It could be useful in situations where the code being tested renders html that\n> was obtained from an external source, and you want to validate that that html\n> code was used as intended.\n>\n> It should not be used to check DOM structure that you control. Please use\n> [`toContainElement`](#tocontainelement) instead.\n\n<hr />\n\n### `toHaveAccessibleDescription`\n\n```typescript\ntoHaveAccessibleDescription(expectedAccessibleDescription?: string | RegExp)\n```\n\nThis allows you to assert that an element has the expected\n[accessible description](https://w3c.github.io/accname/).\n\nYou can pass the exact string of the expected accessible description, or you can\nmake a partial match passing a regular expression, or by using\n[expect.stringContaining](https://jestjs.io/docs/en/expect.html#expectnotstringcontainingstring)/[expect.stringMatching](https://jestjs.io/docs/en/expect.html#expectstringmatchingstring-regexp).\n\n#### Examples\n\n```html\n<a\n  data-testid=\"link\"\n  href=\"/\"\n  aria-label=\"Home page\"\n  title=\"A link to start over\"\n  >Start</a\n>\n<a data-testid=\"extra-link\" href=\"/about\" aria-label=\"About page\">About</a>\n<img src=\"avatar.jpg\" data-testid=\"avatar\" alt=\"User profile pic\" />\n<img\n  src=\"logo.jpg\"\n  data-testid=\"logo\"\n  alt=\"Company logo\"\n  aria-describedby=\"t1\"\n/>\n<span id=\"t1\" role=\"presentation\">The logo of Our Company</span>\n<img\n  src=\"logo.jpg\"\n  data-testid=\"logo2\"\n  alt=\"Company logo\"\n  aria-description=\"The logo of Our Company\"\n/>\n```\n\n```js\nexpect(getByTestId('link')).toHaveAccessibleDescription()\nexpect(getByTestId('link')).toHaveAccessibleDescription('A link to start over')\nexpect(getByTestId('link')).not.toHaveAccessibleDescription('Home page')\nexpect(getByTestId('extra-link')).not.toHaveAccessibleDescription()\nexpect(getByTestId('avatar')).not.toHaveAccessibleDescription()\nexpect(getByTestId('logo')).not.toHaveAccessibleDescription('Company logo')\nexpect(getByTestId('logo')).toHaveAccessibleDescription(\n  'The logo of Our Company',\n)\nexpect(getByTestId('logo2')).toHaveAccessibleDescription(\n  'The logo of Our Company',\n)\n```\n\n<hr />\n\n### `toHaveAccessibleErrorMessage`\n\n```typescript\ntoHaveAccessibleErrorMessage(expectedAccessibleErrorMessage?: string | RegExp)\n```\n\nThis allows you to assert that an element has the expected\n[accessible error message](https://w3c.github.io/aria/#aria-errormessage).\n\nYou can pass the exact string of the expected accessible error message.\nAlternatively, you can perform a partial match by passing a regular expression\nor by using\n[expect.stringContaining](https://jestjs.io/docs/en/expect.html#expectnotstringcontainingstring)/[expect.stringMatching](https://jestjs.io/docs/en/expect.html#expectstringmatchingstring-regexp).\n\n#### Examples\n\n```html\n<input\n  aria-label=\"Has Error\"\n  aria-invalid=\"true\"\n  aria-errormessage=\"error-message\"\n/>\n<div id=\"error-message\" role=\"alert\">This field is invalid</div>\n\n<input aria-label=\"No Error Attributes\" />\n<input\n  aria-label=\"Not Invalid\"\n  aria-invalid=\"false\"\n  aria-errormessage=\"error-message\"\n/>\n```\n\n```js\n// Inputs with Valid Error Messages\nexpect(getByRole('textbox', {name: 'Has Error'})).toHaveAccessibleErrorMessage()\nexpect(getByRole('textbox', {name: 'Has Error'})).toHaveAccessibleErrorMessage(\n  'This field is invalid',\n)\nexpect(getByRole('textbox', {name: 'Has Error'})).toHaveAccessibleErrorMessage(\n  /invalid/i,\n)\nexpect(\n  getByRole('textbox', {name: 'Has Error'}),\n).not.toHaveAccessibleErrorMessage('This field is absolutely correct!')\n\n// Inputs without Valid Error Messages\nexpect(\n  getByRole('textbox', {name: 'No Error Attributes'}),\n).not.toHaveAccessibleErrorMessage()\n\nexpect(\n  getByRole('textbox', {name: 'Not Invalid'}),\n).not.toHaveAccessibleErrorMessage()\n```\n\n<hr />\n\n### `toHaveAccessibleName`\n\n```typescript\ntoHaveAccessibleName(expectedAccessibleName?: string | RegExp)\n```\n\nThis allows you to assert that an element has the expected\n[accessible name](https://w3c.github.io/accname/). It is useful, for instance,\nto assert that form elements and buttons are properly labelled.\n\nYou can pass the exact string of the expected accessible name, or you can make a\npartial match passing a regular expression, or by using\n[expect.stringContaining](https://jestjs.io/docs/en/expect.html#expectnotstringcontainingstring)/[expect.stringMatching](https://jestjs.io/docs/en/expect.html#expectstringmatchingstring-regexp).\n\n#### Examples\n\n```html\n<img data-testid=\"img-alt\" src=\"\" alt=\"Test alt\" />\n<img data-testid=\"img-empty-alt\" src=\"\" alt=\"\" />\n<svg data-testid=\"svg-title\"><title>Test title</title></svg>\n<button data-testid=\"button-img-alt\"><img src=\"\" alt=\"Test\" /></button>\n<p><img data-testid=\"img-paragraph\" src=\"\" alt=\"\" /> Test content</p>\n<button data-testid=\"svg-button\"><svg><title>Test</title></svg></p>\n<div><svg data-testid=\"svg-without-title\"></svg></div>\n<input data-testid=\"input-title\" title=\"test\" />\n```\n\n```javascript\nexpect(getByTestId('img-alt')).toHaveAccessibleName('Test alt')\nexpect(getByTestId('img-empty-alt')).not.toHaveAccessibleName()\nexpect(getByTestId('svg-title')).toHaveAccessibleName('Test title')\nexpect(getByTestId('button-img-alt')).toHaveAccessibleName()\nexpect(getByTestId('img-paragraph')).not.toHaveAccessibleName()\nexpect(getByTestId('svg-button')).toHaveAccessibleName()\nexpect(getByTestId('svg-without-title')).not.toHaveAccessibleName()\nexpect(getByTestId('input-title')).toHaveAccessibleName()\n```\n\n<hr />\n\n### `toHaveAttribute`\n\n```typescript\ntoHaveAttribute(attr: string, value?: any)\n```\n\nThis allows you to check whether the given element has an attribute or not. You\ncan also optionally check that the attribute has a specific expected value or\npartial match using\n[expect.stringContaining](https://jestjs.io/docs/en/expect.html#expectnotstringcontainingstring)/[expect.stringMatching](https://jestjs.io/docs/en/expect.html#expectstringmatchingstring-regexp)\n\n#### Examples\n\n```html\n<button data-testid=\"ok-button\" type=\"submit\" disabled>ok</button>\n```\n\n```javascript\nconst button = getByTestId('ok-button')\n\nexpect(button).toHaveAttribute('disabled')\nexpect(button).toHaveAttribute('type', 'submit')\nexpect(button).not.toHaveAttribute('type', 'button')\n\nexpect(button).toHaveAttribute('type', expect.stringContaining('sub'))\nexpect(button).toHaveAttribute('type', expect.not.stringContaining('but'))\n```\n\n<hr />\n\n### `toHaveClass`\n\n```typescript\ntoHaveClass(...classNames: string[], options?: {exact: boolean})\n```\n\nThis allows you to check whether the given element has certain classes within\nits `class` attribute. You must provide at least one class, unless you are\nasserting that an element does not have any classes.\n\nThe list of class names may include strings and regular expressions. Regular\nexpressions are matched against each individual class in the target element, and\nit is NOT matched against its full `class` attribute value as whole.\n\n#### Examples\n\n```html\n<button data-testid=\"delete-button\" class=\"btn extra btn-danger\">\n  Delete item\n</button>\n<button data-testid=\"no-classes\">No Classes</button>\n```\n\n```javascript\nconst deleteButton = getByTestId('delete-button')\nconst noClasses = getByTestId('no-classes')\n\nexpect(deleteButton).toHaveClass('extra')\nexpect(deleteButton).toHaveClass('btn-danger btn')\nexpect(deleteButton).toHaveClass(/danger/, 'btn')\nexpect(deleteButton).toHaveClass('btn-danger', 'btn')\nexpect(deleteButton).not.toHaveClass('btn-link')\nexpect(deleteButton).not.toHaveClass(/link/)\nexpect(deleteButton).not.toHaveClass(/btn extra/) // It does not match\n\nexpect(deleteButton).toHaveClass('btn-danger extra btn', {exact: true}) // to check if the element has EXACTLY a set of classes\nexpect(deleteButton).not.toHaveClass('btn-danger extra', {exact: true}) // if it has more than expected it is going to fail\n\nexpect(noClasses).not.toHaveClass()\n```\n\n<hr />\n\n### `toHaveFocus`\n\n```typescript\ntoHaveFocus()\n```\n\nThis allows you to assert whether an element has focus or not.\n\n#### Examples\n\n```html\n<div><input type=\"text\" data-testid=\"element-to-focus\" /></div>\n```\n\n```javascript\nconst input = getByTestId('element-to-focus')\n\ninput.focus()\nexpect(input).toHaveFocus()\n\ninput.blur()\nexpect(input).not.toHaveFocus()\n```\n\n<hr />\n\n### `toHaveFormValues`\n\n```typescript\ntoHaveFormValues(expectedValues: {\n  [name: string]: any\n})\n```\n\nThis allows you to check if a form or fieldset contains form controls for each\ngiven name, and having the specified value.\n\n> It is important to stress that this matcher can only be invoked on a [form][]\n> or a [fieldset][] element.\n>\n> This allows it to take advantage of the [.elements][] property in `form` and\n> `fieldset` to reliably fetch all form controls within them.\n>\n> This also avoids the possibility that users provide a container that contains\n> more than one `form`, thereby intermixing form controls that are not related,\n> and could even conflict with one another.\n\nThis matcher abstracts away the particularities with which a form control value\nis obtained depending on the type of form control. For instance, `<input>`\nelements have a `value` attribute, but `<select>` elements do not. Here's a list\nof all cases covered:\n\n- `<input type=\"number\">` elements return the value as a **number**, instead of\n  a string.\n- `<input type=\"checkbox\">` elements:\n  - if there's a single one with the given `name` attribute, it is treated as a\n    **boolean**, returning `true` if the checkbox is checked, `false` if\n    unchecked.\n  - if there's more than one checkbox with the same `name` attribute, they are\n    all treated collectively as a single form control, which returns the value\n    as an **array** containing all the values of the selected checkboxes in the\n    collection.\n- `<input type=\"radio\">` elements are all grouped by the `name` attribute, and\n  such a group treated as a single form control. This form control returns the\n  value as a **string** corresponding to the `value` attribute of the selected\n  radio button within the group.\n- `<input type=\"text\">` elements return the value as a **string**. This also\n  applies to `<input>` elements having any other possible `type` attribute\n  that's not explicitly covered in different rules above (e.g. `search`,\n  `email`, `date`, `password`, `hidden`, etc.)\n- `<select>` elements without the `multiple` attribute return the value as a\n  **string** corresponding to the `value` attribute of the selected `option`, or\n  `undefined` if there's no selected option.\n- `<select multiple>` elements return the value as an **array** containing all\n  the values of the [selected options][].\n- `<textarea>` elements return their value as a **string**. The value\n  corresponds to their node content.\n\nThe above rules make it easy, for instance, to switch from using a single select\ncontrol to using a group of radio buttons. Or to switch from a multi select\ncontrol, to using a group of checkboxes. The resulting set of form values used\nby this matcher to compare against would be the same.\n\n[selected options]:\n  https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n[form]: https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement\n[fieldset]: https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n[.elements]:\n  https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements\n\n#### Examples\n\n```html\n<form data-testid=\"login-form\">\n  <input type=\"text\" name=\"username\" value=\"jane.doe\" />\n  <input type=\"password\" name=\"password\" value=\"12345678\" />\n  <input type=\"checkbox\" name=\"rememberMe\" checked />\n  <button type=\"submit\">Sign in</button>\n</form>\n```\n\n```javascript\nexpect(getByTestId('login-form')).toHaveFormValues({\n  username: 'jane.doe',\n  rememberMe: true,\n})\n```\n\n<hr />\n\n### `toHaveStyle`\n\n```typescript\ntoHaveStyle(css: string | object)\n```\n\nThis allows you to check if a certain element has some specific css properties\nwith specific values applied. It matches only if the element has _all_ the\nexpected properties applied, not just some of them.\n\n#### Examples\n\n```html\n<button\n  data-testid=\"delete-button\"\n  style=\"display: none; background-color: red\"\n>\n  Delete item\n</button>\n```\n\n```javascript\nconst button = getByTestId('delete-button')\n\nexpect(button).toHaveStyle('display: none')\nexpect(button).toHaveStyle({display: 'none'})\nexpect(button).toHaveStyle(`\n  background-color: red;\n  display: none;\n`)\nexpect(button).toHaveStyle({\n  backgroundColor: 'red',\n  display: 'none',\n})\nexpect(button).not.toHaveStyle(`\n  background-color: blue;\n  display: none;\n`)\nexpect(button).not.toHaveStyle({\n  backgroundColor: 'blue',\n  display: 'none',\n})\n```\n\nThis also works with rules that are applied to the element via a class name for\nwhich some rules are defined in a stylesheet currently active in the document.\nThe usual rules of css precedence apply.\n\n<hr />\n\n### `toHaveTextContent`\n\n```typescript\ntoHaveTextContent(text: string | RegExp, options?: {normalizeWhitespace: boolean})\n```\n\nThis allows you to check whether the given node has a text content or not. This\nsupports elements, but also text nodes and fragments.\n\nWhen a `string` argument is passed through, it will perform a partial\ncase-sensitive match to the node content.\n\nTo perform a case-insensitive match, you can use a `RegExp` with the `/i`\nmodifier.\n\nIf you want to match the whole content, you can use a `RegExp` to do it.\n\n#### Examples\n\n```html\n<span data-testid=\"text-content\">Text Content</span>\n```\n\n```javascript\nconst element = getByTestId('text-content')\n\nexpect(element).toHaveTextContent('Content')\nexpect(element).toHaveTextContent(/^Text Content$/) // to match the whole content\nexpect(element).toHaveTextContent(/content$/i) // to use case-insensitive match\nexpect(element).not.toHaveTextContent('content')\n```\n\n<hr />\n\n### `toHaveValue`\n\n```typescript\ntoHaveValue(value: string | string[] | number)\n```\n\nThis allows you to check whether the given form element has the specified value.\nIt accepts `<input>`, `<select>` and `<textarea>` elements with the exception of\n`<input type=\"checkbox\">` and `<input type=\"radio\">`, which can be meaningfully\nmatched only using [`toBeChecked`](#tobechecked) or\n[`toHaveFormValues`](#tohaveformvalues).\n\nIt also accepts elements with roles `meter`, `progressbar`, `slider` or\n`spinbutton` and checks their `aria-valuenow` attribute (as a number).\n\nFor all other form elements, the value is matched using the same algorithm as in\n[`toHaveFormValues`](#tohaveformvalues) does.\n\n#### Examples\n\n```html\n<input type=\"text\" value=\"text\" data-testid=\"input-text\" />\n<input type=\"number\" value=\"5\" data-testid=\"input-number\" />\n<input type=\"text\" data-testid=\"input-empty\" />\n<select multiple data-testid=\"select-number\">\n  <option value=\"first\">First Value</option>\n  <option value=\"second\" selected>Second Value</option>\n  <option value=\"third\" selected>Third Value</option>\n</select>\n```\n\n##### Using DOM Testing Library\n\n```javascript\nconst textInput = getByTestId('input-text')\nconst numberInput = getByTestId('input-number')\nconst emptyInput = getByTestId('input-empty')\nconst selectInput = getByTestId('select-number')\n\nexpect(textInput).toHaveValue('text')\nexpect(numberInput).toHaveValue(5)\nexpect(emptyInput).not.toHaveValue()\nexpect(selectInput).toHaveValue(['second', 'third'])\n```\n\n<hr />\n\n### `toHaveDisplayValue`\n\n```typescript\ntoHaveDisplayValue(value: string | RegExp | (string|RegExp)[])\n```\n\nThis allows you to check whether the given form element has the specified\ndisplayed value (the one the end user will see). It accepts `<input>`,\n`<select>` and `<textarea>` elements with the exception of\n`<input type=\"checkbox\">` and `<input type=\"radio\">`, which can be meaningfully\nmatched only using [`toBeChecked`](#tobechecked) or\n[`toHaveFormValues`](#tohaveformvalues).\n\n#### Examples\n\n```html\n<label for=\"input-example\">First name</label>\n<input type=\"text\" id=\"input-example\" value=\"Luca\" />\n\n<label for=\"textarea-example\">Description</label>\n<textarea id=\"textarea-example\">An example description here.</textarea>\n\n<label for=\"single-select-example\">Fruit</label>\n<select id=\"single-select-example\">\n  <option value=\"\">Select a fruit...</option>\n  <option value=\"banana\">Banana</option>\n  <option value=\"ananas\">Ananas</option>\n  <option value=\"avocado\">Avocado</option>\n</select>\n\n<label for=\"multiple-select-example\">Fruits</label>\n<select id=\"multiple-select-example\" multiple>\n  <option value=\"\">Select a fruit...</option>\n  <option value=\"banana\" selected>Banana</option>\n  <option value=\"ananas\">Ananas</option>\n  <option value=\"avocado\" selected>Avocado</option>\n</select>\n```\n\n##### Using DOM Testing Library\n\n```javascript\nconst input = screen.getByLabelText('First name')\nconst textarea = screen.getByLabelText('Description')\nconst selectSingle = screen.getByLabelText('Fruit')\nconst selectMultiple = screen.getByLabelText('Fruits')\n\nexpect(input).toHaveDisplayValue('Luca')\nexpect(input).toHaveDisplayValue(/Luc/)\nexpect(textarea).toHaveDisplayValue('An example description here.')\nexpect(textarea).toHaveDisplayValue(/example/)\nexpect(selectSingle).toHaveDisplayValue('Select a fruit...')\nexpect(selectSingle).toHaveDisplayValue(/Select/)\nexpect(selectMultiple).toHaveDisplayValue([/Avocado/, 'Banana'])\n```\n\n<hr />\n\n### `toBeChecked`\n\n```typescript\ntoBeChecked()\n```\n\nThis allows you to check whether the given element is checked. It accepts an\n`input` of type `checkbox` or `radio` and elements with a `role` of `checkbox`,\n`radio` or `switch` with a valid `aria-checked` attribute of `\"true\"` or\n`\"false\"`.\n\n#### Examples\n\n```html\n<input type=\"checkbox\" checked data-testid=\"input-checkbox-checked\" />\n<input type=\"checkbox\" data-testid=\"input-checkbox-unchecked\" />\n<div role=\"checkbox\" aria-checked=\"true\" data-testid=\"aria-checkbox-checked\" />\n<div\n  role=\"checkbox\"\n  aria-checked=\"false\"\n  data-testid=\"aria-checkbox-unchecked\"\n/>\n\n<input type=\"radio\" checked value=\"foo\" data-testid=\"input-radio-checked\" />\n<input type=\"radio\" value=\"foo\" data-testid=\"input-radio-unchecked\" />\n<div role=\"radio\" aria-checked=\"true\" data-testid=\"aria-radio-checked\" />\n<div role=\"radio\" aria-checked=\"false\" data-testid=\"aria-radio-unchecked\" />\n<div role=\"switch\" aria-checked=\"true\" data-testid=\"aria-switch-checked\" />\n<div role=\"switch\" aria-checked=\"false\" data-testid=\"aria-switch-unchecked\" />\n```\n\n```javascript\nconst inputCheckboxChecked = getByTestId('input-checkbox-checked')\nconst inputCheckboxUnchecked = getByTestId('input-checkbox-unchecked')\nconst ariaCheckboxChecked = getByTestId('aria-checkbox-checked')\nconst ariaCheckboxUnchecked = getByTestId('aria-checkbox-unchecked')\nexpect(inputCheckboxChecked).toBeChecked()\nexpect(inputCheckboxUnchecked).not.toBeChecked()\nexpect(ariaCheckboxChecked).toBeChecked()\nexpect(ariaCheckboxUnchecked).not.toBeChecked()\n\nconst inputRadioChecked = getByTestId('input-radio-checked')\nconst inputRadioUnchecked = getByTestId('input-radio-unchecked')\nconst ariaRadioChecked = getByTestId('aria-radio-checked')\nconst ariaRadioUnchecked = getByTestId('aria-radio-unchecked')\nexpect(inputRadioChecked).toBeChecked()\nexpect(inputRadioUnchecked).not.toBeChecked()\nexpect(ariaRadioChecked).toBeChecked()\nexpect(ariaRadioUnchecked).not.toBeChecked()\n\nconst ariaSwitchChecked = getByTestId('aria-switch-checked')\nconst ariaSwitchUnchecked = getByTestId('aria-switch-unchecked')\nexpect(ariaSwitchChecked).toBeChecked()\nexpect(ariaSwitchUnchecked).not.toBeChecked()\n```\n\n<hr />\n\n### `toBePartiallyChecked`\n\n```typescript\ntoBePartiallyChecked()\n```\n\nThis allows you to check whether the given element is partially checked. It\naccepts an `input` of type `checkbox` and elements with a `role` of `checkbox`\nwith a `aria-checked=\"mixed\"`, or `input` of type `checkbox` with\n`indeterminate` set to `true`\n\n#### Examples\n\n```html\n<input type=\"checkbox\" aria-checked=\"mixed\" data-testid=\"aria-checkbox-mixed\" />\n<input type=\"checkbox\" checked data-testid=\"input-checkbox-checked\" />\n<input type=\"checkbox\" data-testid=\"input-checkbox-unchecked\" />\n<div role=\"checkbox\" aria-checked=\"true\" data-testid=\"aria-checkbox-checked\" />\n<div\n  role=\"checkbox\"\n  aria-checked=\"false\"\n  data-testid=\"aria-checkbox-unchecked\"\n/>\n<input type=\"checkbox\" data-testid=\"input-checkbox-indeterminate\" />\n```\n\n```javascript\nconst ariaCheckboxMixed = getByTestId('aria-checkbox-mixed')\nconst inputCheckboxChecked = getByTestId('input-checkbox-checked')\nconst inputCheckboxUnchecked = getByTestId('input-checkbox-unchecked')\nconst ariaCheckboxChecked = getByTestId('aria-checkbox-checked')\nconst ariaCheckboxUnchecked = getByTestId('aria-checkbox-unchecked')\nconst inputCheckboxIndeterminate = getByTestId('input-checkbox-indeterminate')\n\nexpect(ariaCheckboxMixed).toBePartiallyChecked()\nexpect(inputCheckboxChecked).not.toBePartiallyChecked()\nexpect(inputCheckboxUnchecked).not.toBePartiallyChecked()\nexpect(ariaCheckboxChecked).not.toBePartiallyChecked()\nexpect(ariaCheckboxUnchecked).not.toBePartiallyChecked()\n\ninputCheckboxIndeterminate.indeterminate = true\nexpect(inputCheckboxIndeterminate).toBePartiallyChecked()\n```\n\n<hr />\n\n### `toHaveRole`\n\nThis allows you to assert that an element has the expected\n[role](https://www.w3.org/TR/html-aria/#docconformance).\n\nThis is useful in cases where you already have access to an element via some\nquery other than the role itself, and want to make additional assertions\nregarding its accessibility.\n\nThe role can match either an explicit role (via the `role` attribute), or an\nimplicit one via the\n[implicit ARIA semantics](https://www.w3.org/TR/html-aria/).\n\nNote: roles are matched literally by string equality, without inheriting from\nthe ARIA role hierarchy. As a result, querying a superclass role like 'checkbox'\nwill not include elements with a subclass role like 'switch'.\n\n```typescript\ntoHaveRole(expectedRole: string)\n```\n\n```html\n<button data-testid=\"button\">Continue</button>\n<div role=\"button\" data-testid=\"button-explicit\">Continue</button>\n<button role=\"switch button\" data-testid=\"button-explicit-multiple\">Continue</button>\n<a href=\"/about\" data-testid=\"link\">About</a>\n<a data-testid=\"link-invalid\">Invalid link<a/>\n```\n\n```javascript\nexpect(getByTestId('button')).toHaveRole('button')\nexpect(getByTestId('button-explicit')).toHaveRole('button')\nexpect(getByTestId('button-explicit-multiple')).toHaveRole('button')\nexpect(getByTestId('button-explicit-multiple')).toHaveRole('switch')\nexpect(getByTestId('link')).toHaveRole('link')\nexpect(getByTestId('link-invalid')).not.toHaveRole('link')\nexpect(getByTestId('link-invalid')).toHaveRole('generic')\n```\n\n<hr />\n\n### `toHaveErrorMessage`\n\n> This custom matcher is deprecated. Prefer\n> [`toHaveAccessibleErrorMessage`](#tohaveaccessibleerrormessage) instead, which\n> is more comprehensive in implementing the official spec.\n\n```typescript\ntoHaveErrorMessage(text: string | RegExp)\n```\n\nThis allows you to check whether the given element has an\n[ARIA error message](https://www.w3.org/TR/wai-aria/#aria-errormessage) or not.\n\nUse the `aria-errormessage` attribute to reference another element that contains\ncustom error message text. Multiple ids is **NOT** allowed. Authors MUST use\n`aria-invalid` in conjunction with `aria-errormessage`. Learn more from\n[`aria-errormessage` spec](https://www.w3.org/TR/wai-aria/#aria-errormessage).\n\nWhitespace is normalized.\n\nWhen a `string` argument is passed through, it will perform a whole\ncase-sensitive match to the error message text.\n\nTo perform a case-insensitive match, you can use a `RegExp` with the `/i`\nmodifier.\n\nTo perform a partial match, you can pass a `RegExp` or use\n`expect.stringContaining(\"partial string\")`.\n\n#### Examples\n\n```html\n<label for=\"startTime\"> Please enter a start time for the meeting: </label>\n<input\n  id=\"startTime\"\n  type=\"text\"\n  aria-errormessage=\"msgID\"\n  aria-invalid=\"true\"\n  value=\"11:30 PM\"\n/>\n<span id=\"msgID\" aria-live=\"assertive\" style=\"visibility:visible\">\n  Invalid time: the time must be between 9:00 AM and 5:00 PM\n</span>\n```\n\n```javascript\nconst timeInput = getByLabel('startTime')\n\nexpect(timeInput).toHaveErrorMessage(\n  'Invalid time: the time must be between 9:00 AM and 5:00 PM',\n)\nexpect(timeInput).toHaveErrorMessage(/invalid time/i) // to partially match\nexpect(timeInput).toHaveErrorMessage(expect.stringContaining('Invalid time')) // to partially match\nexpect(timeInput).not.toHaveErrorMessage('Pikachu!')\n```\n\n## Deprecated matchers\n\n### `toBeEmpty`\n\n> Note: This matcher is being deprecated due to a name clash with\n> `jest-extended`. See more info in #216. In the future, please use only\n> [`toBeEmptyDOMElement`](#toBeEmptyDOMElement)\n\n```typescript\ntoBeEmpty()\n```\n\nThis allows you to assert whether an element has content or not.\n\n#### Examples\n\n```html\n<span data-testid=\"not-empty\"><span data-testid=\"empty\"></span></span>\n```\n\n```javascript\nexpect(getByTestId('empty')).toBeEmpty()\nexpect(getByTestId('not-empty')).not.toBeEmpty()\n```\n\n<hr />\n\n### `toBeInTheDOM`\n\n> This custom matcher is deprecated. Prefer\n> [`toBeInTheDocument`](#tobeinthedocument) instead.\n\n```typescript\ntoBeInTheDOM()\n```\n\nThis allows you to check whether a value is a DOM element, or not.\n\nContrary to what its name implies, this matcher only checks that you passed to\nit a valid DOM element. It does not have a clear definition of what \"the DOM\"\nis. Therefore, it does not check whether that element is contained anywhere.\n\nThis is the main reason why this matcher is deprecated, and will be removed in\nthe next major release. You can follow the discussion around this decision in\nmore detail [here](https://github.com/testing-library/jest-dom/issues/34).\n\nAs an alternative, you can use [`toBeInTheDocument`](#tobeinthedocument) or\n[`toContainElement`](#tocontainelement). Or if you just want to check if a value\nis indeed an `HTMLElement` you can always use some of\n[jest's built-in matchers](https://jestjs.io/docs/en/expect#tobeinstanceofclass):\n\n```js\nexpect(document.querySelector('.ok-button')).toBeInstanceOf(HTMLElement)\nexpect(document.querySelector('.cancel-button')).toBeTruthy()\n```\n\n> Note: The differences between `toBeInTheDOM` and `toBeInTheDocument` are\n> significant. Replacing all uses of `toBeInTheDOM` with `toBeInTheDocument`\n> will likely cause unintended consequences in your tests. Please make sure when\n> replacing `toBeInTheDOM` to read through the documentation of the proposed\n> alternatives to see which use case works better for your needs.\n\n<hr />\n\n### `toHaveDescription`\n\n> This custom matcher is deprecated. Prefer\n> [`toHaveAccessibleDescription`](#tohaveaccessibledescription) instead, which\n> is more comprehensive in implementing the official spec.\n\n```typescript\ntoHaveDescription(text: string | RegExp)\n```\n\nThis allows you to check whether the given element has a description or not.\n\nAn element gets its description via the\n[`aria-describedby` attribute](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-describedby_attribute).\nSet this to the `id` of one or more other elements. These elements may be nested\ninside, be outside, or a sibling of the passed in element.\n\nWhitespace is normalized. Using multiple ids will\n[join the referenced elements’ text content separated by a space](https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description).\n\nWhen a `string` argument is passed through, it will perform a whole\ncase-sensitive match to the description text.\n\nTo perform a case-insensitive match, you can use a `RegExp` with the `/i`\nmodifier.\n\nTo perform a partial match, you can pass a `RegExp` or use\n`expect.stringContaining(\"partial string\")`.\n\n#### Examples\n\n```html\n<button aria-label=\"Close\" aria-describedby=\"description-close\">X</button>\n<div id=\"description-close\">Closing will discard any changes</div>\n\n<button>Delete</button>\n```\n\n```javascript\nconst closeButton = getByRole('button', {name: 'Close'})\n\nexpect(closeButton).toHaveDescription('Closing will discard any changes')\nexpect(closeButton).toHaveDescription(/will discard/) // to partially match\nexpect(closeButton).toHaveDescription(expect.stringContaining('will discard')) // to partially match\nexpect(closeButton).toHaveDescription(/^closing/i) // to use case-insensitive match\nexpect(closeButton).not.toHaveDescription('Other description')\n\nconst deleteButton = getByRole('button', {name: 'Delete'})\nexpect(deleteButton).not.toHaveDescription()\nexpect(deleteButton).toHaveDescription('') // Missing or empty description always becomes a blank string\n```\n\n<hr />\n\n### `toHaveSelection`\n\nThis allows to assert that an element has a\n[text selection](https://developer.mozilla.org/en-US/docs/Web/API/Selection).\n\nThis is useful to check if text or part of the text is selected within an\nelement. The element can be either an input of type text, a textarea, or any\nother element that contains text, such as a paragraph, span, div etc.\n\nNOTE: the expected selection is a string, it does not allow to check for\nselection range indeces.\n\n```typescript\ntoHaveSelection(expectedSelection?: string)\n```\n\n```html\n<div>\n  <input type=\"text\" value=\"text selected text\" data-testid=\"text\" />\n  <textarea data-testid=\"textarea\">text selected text</textarea>\n  <p data-testid=\"prev\">prev</p>\n  <p data-testid=\"parent\">\n    text <span data-testid=\"child\">selected</span> text\n  </p>\n  <p data-testid=\"next\">next</p>\n</div>\n```\n\n```javascript\ngetByTestId('text').setSelectionRange(5, 13)\nexpect(getByTestId('text')).toHaveSelection('selected')\n\ngetByTestId('textarea').setSelectionRange(0, 5)\nexpect('textarea').toHaveSelection('text ')\n\nconst selection = document.getSelection()\nconst range = document.createRange()\nselection.removeAllRanges()\nselection.empty()\nselection.addRange(range)\n\n// selection of child applies to the parent as well\nrange.selectNodeContents(getByTestId('child'))\nexpect(getByTestId('child')).toHaveSelection('selected')\nexpect(getByTestId('parent')).toHaveSelection('selected')\n\n// selection that applies from prev all, parent text before child, and part child.\nrange.setStart(getByTestId('prev'), 0)\nrange.setEnd(getByTestId('child').childNodes[0], 3)\nexpect(queryByTestId('prev')).toHaveSelection('prev')\nexpect(queryByTestId('child')).toHaveSelection('sel')\nexpect(queryByTestId('parent')).toHaveSelection('text sel')\nexpect(queryByTestId('next')).not.toHaveSelection()\n\n// selection that applies from part child, parent text after child and part next.\nrange.setStart(getByTestId('child').childNodes[0], 3)\nrange.setEnd(getByTestId('next').childNodes[0], 2)\nexpect(queryByTestId('child')).toHaveSelection('ected')\nexpect(queryByTestId('parent')).toHaveSelection('ected text')\nexpect(queryByTestId('prev')).not.toHaveSelection()\nexpect(queryByTestId('next')).toHaveSelection('ne')\n```\n\n## Inspiration\n\nThis whole library was extracted out of Kent C. Dodds' [DOM Testing\nLibrary][dom-testing-library], which was in turn extracted out of [React Testing\nLibrary][react-testing-library].\n\nThe intention is to make this available to be used independently of these other\nlibraries, and also to make it more clear that these other libraries are\nindependent from jest, and can be used with other tests runners as well.\n\n## Other Solutions\n\nI'm not aware of any, if you are please [make a pull request][prs] and add it\nhere!\n\nIf you would like to further test the accessibility and validity of the DOM\nconsider [`jest-axe`](https://github.com/nickcolley/jest-axe). It doesn't\noverlap with `jest-dom` but can complement it for more in-depth accessibility\nchecking (eg: validating `aria` attributes or ensuring unique id attributes).\n\n## Guiding Principles\n\n> [The more your tests resemble the way your software is used, the more\n> confidence they can give you.][guiding-principle]\n\nThis library follows the same guiding principles as its mother library [DOM\nTesting Library][dom-testing-library]. Go [check them out][guiding-principle]\nfor more details.\n\nAdditionally, with respect to custom DOM matchers, this library aims to maintain\na minimal but useful set of them, while avoiding bloating itself with merely\nconvenient ones that can be easily achieved with other APIs. In general, the\noverall criteria for what is considered a useful custom matcher to add to this\nlibrary, is that doing the equivalent assertion on our own makes the test code\nmore verbose, less clear in its intent, and/or harder to read.\n\n## Contributors\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://kentcdodds.com\"><img src=\"https://avatars.githubusercontent.com/u/1500684?v=3?s=100\" width=\"100px;\" alt=\"Kent C. Dodds\"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=kentcdodds\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=kentcdodds\" title=\"Documentation\">📖</a> <a href=\"#infra-kentcdodds\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=kentcdodds\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://audiolion.github.io\"><img src=\"https://avatars1.githubusercontent.com/u/2430381?v=4?s=100\" width=\"100px;\" alt=\"Ryan Castner\"/><br /><sub><b>Ryan Castner</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=audiolion\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.dnlsandiego.com\"><img src=\"https://avatars0.githubusercontent.com/u/8008023?v=4?s=100\" width=\"100px;\" alt=\"Daniel Sandiego\"/><br /><sub><b>Daniel Sandiego</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=dnlsandiego\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Miklet\"><img src=\"https://avatars2.githubusercontent.com/u/12592677?v=4?s=100\" width=\"100px;\" alt=\"Paweł Mikołajczyk\"/><br /><sub><b>Paweł Mikołajczyk</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=Miklet\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://co.linkedin.com/in/alejandronanez/\"><img src=\"https://avatars3.githubusercontent.com/u/464978?v=4?s=100\" width=\"100px;\" alt=\"Alejandro Ñáñez Ortiz\"/><br /><sub><b>Alejandro Ñáñez Ortiz</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=alejandronanez\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/pbomb\"><img src=\"https://avatars0.githubusercontent.com/u/1402095?v=4?s=100\" width=\"100px;\" alt=\"Matt Parrish\"/><br /><sub><b>Matt Parrish</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Apbomb\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=pbomb\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=pbomb\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=pbomb\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wKovacs64\"><img src=\"https://avatars1.githubusercontent.com/u/1288694?v=4?s=100\" width=\"100px;\" alt=\"Justin Hall\"/><br /><sub><b>Justin Hall</b></sub></a><br /><a href=\"#platform-wKovacs64\" title=\"Packaging/porting to new platform\">📦</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/antoaravinth\"><img src=\"https://avatars1.githubusercontent.com/u/1241511?s=460&v=4?s=100\" width=\"100px;\" alt=\"Anto Aravinth\"/><br /><sub><b>Anto Aravinth</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=antoaravinth\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=antoaravinth\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=antoaravinth\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/JonahMoses\"><img src=\"https://avatars2.githubusercontent.com/u/3462296?v=4?s=100\" width=\"100px;\" alt=\"Jonah Moses\"/><br /><sub><b>Jonah Moses</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=JonahMoses\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://team.thebrain.pro\"><img src=\"https://avatars1.githubusercontent.com/u/4002543?v=4?s=100\" width=\"100px;\" alt=\"Łukasz Gandecki\"/><br /><sub><b>Łukasz Gandecki</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=lgandecki\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=lgandecki\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=lgandecki\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://sompylasar.github.io\"><img src=\"https://avatars2.githubusercontent.com/u/498274?v=4?s=100\" width=\"100px;\" alt=\"Ivan Babak\"/><br /><sub><b>Ivan Babak</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Asompylasar\" title=\"Bug reports\">🐛</a> <a href=\"#ideas-sompylasar\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jday3\"><img src=\"https://avatars3.githubusercontent.com/u/4439618?v=4?s=100\" width=\"100px;\" alt=\"Jesse Day\"/><br /><sub><b>Jesse Day</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=jday3\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://gnapse.github.io\"><img src=\"https://avatars0.githubusercontent.com/u/15199?v=4?s=100\" width=\"100px;\" alt=\"Ernesto García\"/><br /><sub><b>Ernesto García</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=gnapse\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=gnapse\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=gnapse\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://ociweb.com/mark/\"><img src=\"https://avatars0.githubusercontent.com/u/79312?v=4?s=100\" width=\"100px;\" alt=\"Mark Volkmann\"/><br /><sub><b>Mark Volkmann</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Amvolkmann\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=mvolkmann\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/smacpherson64\"><img src=\"https://avatars1.githubusercontent.com/u/1659099?v=4?s=100\" width=\"100px;\" alt=\"smacpherson64\"/><br /><sub><b>smacpherson64</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=smacpherson64\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=smacpherson64\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=smacpherson64\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jgoz\"><img src=\"https://avatars2.githubusercontent.com/u/132233?v=4?s=100\" width=\"100px;\" alt=\"John Gozde\"/><br /><sub><b>John Gozde</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Ajgoz\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=jgoz\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/callada\"><img src=\"https://avatars2.githubusercontent.com/u/7830590?v=4?s=100\" width=\"100px;\" alt=\"Iwona\"/><br /><sub><b>Iwona</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=callada\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=callada\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=callada\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/6ewis\"><img src=\"https://avatars0.githubusercontent.com/u/840609?v=4?s=100\" width=\"100px;\" alt=\"Lewis\"/><br /><sub><b>Lewis</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=6ewis\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://blog.lourenci.com/\"><img src=\"https://avatars3.githubusercontent.com/u/2339362?v=4?s=100\" width=\"100px;\" alt=\"Leandro Lourenci\"/><br /><sub><b>Leandro Lourenci</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Alourenci\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=lourenci\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=lourenci\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=lourenci\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mufasa71\"><img src=\"https://avatars1.githubusercontent.com/u/626420?v=4?s=100\" width=\"100px;\" alt=\"Shukhrat Mukimov\"/><br /><sub><b>Shukhrat Mukimov</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Amufasa71\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/dreyks\"><img src=\"https://avatars3.githubusercontent.com/u/1481264?v=4?s=100\" width=\"100px;\" alt=\"Roman Usherenko\"/><br /><sub><b>Roman Usherenko</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=dreyks\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=dreyks\" title=\"Tests\">⚠️</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://josephhsu.com\"><img src=\"https://avatars1.githubusercontent.com/u/648?v=4?s=100\" width=\"100px;\" alt=\"Joe Hsu\"/><br /><sub><b>Joe Hsu</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=jhsu\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://twitter.com/diegohaz\"><img src=\"https://avatars3.githubusercontent.com/u/3068563?v=4?s=100\" width=\"100px;\" alt=\"Haz\"/><br /><sub><b>Haz</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Adiegohaz\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=diegohaz\" title=\"Code\">💻</a> <a href=\"#ideas-diegohaz\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://blog.revathskumar.com\"><img src=\"https://avatars3.githubusercontent.com/u/463904?v=4?s=100\" width=\"100px;\" alt=\"Revath S Kumar\"/><br /><sub><b>Revath S Kumar</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=revathskumar\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://raccoon.studio\"><img src=\"https://avatars0.githubusercontent.com/u/4989733?v=4?s=100\" width=\"100px;\" alt=\"hiwelo.\"/><br /><sub><b>hiwelo.</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=hiwelo\" title=\"Code\">💻</a> <a href=\"#ideas-hiwelo\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=hiwelo\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/lukaszfiszer\"><img src=\"https://avatars3.githubusercontent.com/u/1201711?v=4?s=100\" width=\"100px;\" alt=\"Łukasz Fiszer\"/><br /><sub><b>Łukasz Fiszer</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=lukaszfiszer\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jeanchung\"><img src=\"https://avatars0.githubusercontent.com/u/10778036?v=4?s=100\" width=\"100px;\" alt=\"Jean Chung\"/><br /><sub><b>Jean Chung</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=jeanchung\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=jeanchung\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/CarlaTeo\"><img src=\"https://avatars3.githubusercontent.com/u/9220147?v=4?s=100\" width=\"100px;\" alt=\"CarlaTeo\"/><br /><sub><b>CarlaTeo</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=CarlaTeo\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=CarlaTeo\" title=\"Tests\">⚠️</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/YardenShoham\"><img src=\"https://avatars3.githubusercontent.com/u/20454870?v=4?s=100\" width=\"100px;\" alt=\"Yarden Shoham\"/><br /><sub><b>Yarden Shoham</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=YardenShoham\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://jagascript.com\"><img src=\"https://avatars0.githubusercontent.com/u/4562878?v=4?s=100\" width=\"100px;\" alt=\"Jaga Santagostino\"/><br /><sub><b>Jaga Santagostino</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Akandros\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=kandros\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=kandros\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/connormeredith\"><img src=\"https://avatars0.githubusercontent.com/u/4907463?v=4?s=100\" width=\"100px;\" alt=\"Connor Meredith\"/><br /><sub><b>Connor Meredith</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=connormeredith\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=connormeredith\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=connormeredith\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/pwolaq\"><img src=\"https://avatars3.githubusercontent.com/u/10261750?v=4?s=100\" width=\"100px;\" alt=\"Pawel Wolak\"/><br /><sub><b>Pawel Wolak</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=pwolaq\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=pwolaq\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://michaeldeboey.be\"><img src=\"https://avatars3.githubusercontent.com/u/6643991?v=4?s=100\" width=\"100px;\" alt=\"Michaël De Boey\"/><br /><sub><b>Michaël De Boey</b></sub></a><br /><a href=\"#infra-MichaelDeBoey\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jzarzeckis\"><img src=\"https://avatars3.githubusercontent.com/u/919350?v=4?s=100\" width=\"100px;\" alt=\"Jānis Zaržeckis\"/><br /><sub><b>Jānis Zaržeckis</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=jzarzeckis\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/koala-lava\"><img src=\"https://avatars0.githubusercontent.com/u/15828770?v=4?s=100\" width=\"100px;\" alt=\"koala-lava\"/><br /><sub><b>koala-lava</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=koala-lava\" title=\"Documentation\">📖</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://jpblanco.dev\"><img src=\"https://avatars1.githubusercontent.com/u/16567863?v=4?s=100\" width=\"100px;\" alt=\"Juan Pablo Blanco\"/><br /><sub><b>Juan Pablo Blanco</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=JPBlancoDB\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/benmonro\"><img src=\"https://avatars3.githubusercontent.com/u/399236?v=4?s=100\" width=\"100px;\" alt=\"Ben Monro\"/><br /><sub><b>Ben Monro</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=benmonro\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://jeffbernstein.io\"><img src=\"https://avatars1.githubusercontent.com/u/6685560?v=4?s=100\" width=\"100px;\" alt=\"Jeff Bernstein\"/><br /><sub><b>Jeff Bernstein</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=jeffbernst\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/SergiCL\"><img src=\"https://avatars3.githubusercontent.com/u/41625166?v=4?s=100\" width=\"100px;\" alt=\"Sergi\"/><br /><sub><b>Sergi</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=SergiCL\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=SergiCL\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://skovy.dev\"><img src=\"https://avatars1.githubusercontent.com/u/5247455?v=4?s=100\" width=\"100px;\" alt=\"Spencer Miskoviak\"/><br /><sub><b>Spencer Miskoviak</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=skovy\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://twitter.com/jonrimmer\"><img src=\"https://avatars1.githubusercontent.com/u/183786?v=4?s=100\" width=\"100px;\" alt=\"Jon Rimmer\"/><br /><sub><b>Jon Rimmer</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=jonrimmer\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=jonrimmer\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/cloud-walker\"><img src=\"https://avatars3.githubusercontent.com/u/1144075?v=4?s=100\" width=\"100px;\" alt=\"Luca Barone\"/><br /><sub><b>Luca Barone</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=cloud-walker\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=cloud-walker\" title=\"Tests\">⚠️</a> <a href=\"#ideas-cloud-walker\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mfelmy\"><img src=\"https://avatars2.githubusercontent.com/u/29504917?v=4?s=100\" width=\"100px;\" alt=\"Malte Felmy\"/><br /><sub><b>Malte Felmy</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=mfelmy\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=mfelmy\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://ghuser.io/Ishaan28malik\"><img src=\"https://avatars3.githubusercontent.com/u/27343592?v=4?s=100\" width=\"100px;\" alt=\"Championrunner\"/><br /><sub><b>Championrunner</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=Ishaan28malik\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://icing.space/\"><img src=\"https://avatars0.githubusercontent.com/u/2635733?v=4?s=100\" width=\"100px;\" alt=\"Patrick Smith\"/><br /><sub><b>Patrick Smith</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=BurntCaramel\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=BurntCaramel\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=BurntCaramel\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://rubenmoya.dev\"><img src=\"https://avatars3.githubusercontent.com/u/905225?v=4?s=100\" width=\"100px;\" alt=\"Rubén Moya\"/><br /><sub><b>Rubén Moya</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=rubenmoya\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=rubenmoya\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=rubenmoya\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://danielavalero.com/\"><img src=\"https://avatars1.githubusercontent.com/u/1307954?v=4?s=100\" width=\"100px;\" alt=\"Daniela Valero\"/><br /><sub><b>Daniela Valero</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=DanielaValero\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=DanielaValero\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=DanielaValero\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/missilev\"><img src=\"https://avatars1.githubusercontent.com/u/33201468?v=4?s=100\" width=\"100px;\" alt=\"Vladislav Katsura\"/><br /><sub><b>Vladislav Katsura</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=missilev\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=missilev\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://stderr.timfischbach.de\"><img src=\"https://avatars3.githubusercontent.com/u/26554?v=4?s=100\" width=\"100px;\" alt=\"Tim Fischbach\"/><br /><sub><b>Tim Fischbach</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=tf\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=tf\" title=\"Tests\">⚠️</a> <a href=\"#ideas-tf\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://katieboedges.com/\"><img src=\"https://avatars1.githubusercontent.com/u/8322476?v=4?s=100\" width=\"100px;\" alt=\"Katie Boedges\"/><br /><sub><b>Katie Boedges</b></sub></a><br /><a href=\"#infra-kboedges\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/brrianalexis\"><img src=\"https://avatars2.githubusercontent.com/u/51463930?v=4?s=100\" width=\"100px;\" alt=\"Brian Alexis\"/><br /><sub><b>Brian Alexis</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=brrianalexis\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://twitter.com/boriscoder\"><img src=\"https://avatars2.githubusercontent.com/u/812240?v=4?s=100\" width=\"100px;\" alt=\"Boris Serdiuk\"/><br /><sub><b>Boris Serdiuk</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Ajust-boris\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=just-boris\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=just-boris\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://danawoodman.com\"><img src=\"https://avatars1.githubusercontent.com/u/157695?v=4?s=100\" width=\"100px;\" alt=\"Dana Woodman\"/><br /><sub><b>Dana Woodman</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=danawoodman\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/MoSattler\"><img src=\"https://avatars2.githubusercontent.com/u/64152453?v=4?s=100\" width=\"100px;\" alt=\"Mo Sattler\"/><br /><sub><b>Mo Sattler</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=MoSattler\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/geoffrich\"><img src=\"https://avatars2.githubusercontent.com/u/4992896?v=4?s=100\" width=\"100px;\" alt=\"Geoff Rich\"/><br /><sub><b>Geoff Rich</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=geoffrich\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=geoffrich\" title=\"Tests\">⚠️</a> <a href=\"#ideas-geoffrich\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Ageoffrich\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/syneva-runyan\"><img src=\"https://avatars0.githubusercontent.com/u/20505588?v=4?s=100\" width=\"100px;\" alt=\"Syneva\"/><br /><sub><b>Syneva</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=syneva-runyan\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://nickmccurdy.com/\"><img src=\"https://avatars0.githubusercontent.com/u/927220?v=4?s=100\" width=\"100px;\" alt=\"Nick McCurdy\"/><br /><sub><b>Nick McCurdy</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=nickmccurdy\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Anickmccurdy\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=nickmccurdy\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://obedparla.com/\"><img src=\"https://avatars1.githubusercontent.com/u/10674462?v=4?s=100\" width=\"100px;\" alt=\"Obed Marquez Parlapiano\"/><br /><sub><b>Obed Marquez Parlapiano</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=obedparla\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/calebeby\"><img src=\"https://avatars.githubusercontent.com/u/13206945?v=4?s=100\" width=\"100px;\" alt=\"Caleb Eby\"/><br /><sub><b>Caleb Eby</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=calebeby\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=calebeby\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=calebeby\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/marcelbarner\"><img src=\"https://avatars.githubusercontent.com/u/12788744?v=4?s=100\" width=\"100px;\" alt=\"Marcel Barner\"/><br /><sub><b>Marcel Barner</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=marcelbarner\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=marcelbarner\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/SevenOutman\"><img src=\"https://avatars.githubusercontent.com/u/8225666?v=4?s=100\" width=\"100px;\" alt=\"Doma\"/><br /><sub><b>Doma</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=SevenOutman\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=SevenOutman\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://everlong.org/\"><img src=\"https://avatars.githubusercontent.com/u/454175?v=4?s=100\" width=\"100px;\" alt=\"Julien Wajsberg\"/><br /><sub><b>Julien Wajsberg</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=julienw\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=julienw\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://lichess.org/@/StevenEmily\"><img src=\"https://avatars.githubusercontent.com/u/58114641?v=4?s=100\" width=\"100px;\" alt=\"steven nguyen\"/><br /><sub><b>steven nguyen</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=icecream17\" title=\"Documentation\">📖</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://tu4mo.com\"><img src=\"https://avatars.githubusercontent.com/u/16735302?v=4?s=100\" width=\"100px;\" alt=\"tu4mo\"/><br /><sub><b>tu4mo</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=tu4mo\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://matan.io\"><img src=\"https://avatars.githubusercontent.com/u/12711091?v=4?s=100\" width=\"100px;\" alt=\"Matan Borenkraout\"/><br /><sub><b>Matan Borenkraout</b></sub></a><br /><a href=\"#platform-MatanBobi\" title=\"Packaging/porting to new platform\">📦</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/yannbf\"><img src=\"https://avatars.githubusercontent.com/u/1671563?v=4?s=100\" width=\"100px;\" alt=\"Yann Braga\"/><br /><sub><b>Yann Braga</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=yannbf\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/IanVS\"><img src=\"https://avatars.githubusercontent.com/u/4616705?v=4?s=100\" width=\"100px;\" alt=\"Ian VanSchooten\"/><br /><sub><b>Ian VanSchooten</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=IanVS\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://chantalbroeren.nl\"><img src=\"https://avatars.githubusercontent.com/u/7499806?v=4?s=100\" width=\"100px;\" alt=\"Chantal Broeren\"/><br /><sub><b>Chantal Broeren</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=cbroeren\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://jeremie.astori.fr\"><img src=\"https://avatars.githubusercontent.com/u/113730?v=4?s=100\" width=\"100px;\" alt=\"Jérémie Astori\"/><br /><sub><b>Jérémie Astori</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=astorije\" title=\"Code\">💻</a> <a href=\"#ideas-astorije\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ashleyryan\"><img src=\"https://avatars.githubusercontent.com/u/9469374?v=4?s=100\" width=\"100px;\" alt=\"Ashley Ryan\"/><br /><sub><b>Ashley Ryan</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=ashleyryan\" title=\"Code\">💻</a> <a href=\"#ideas-ashleyryan\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://fotis.xyz\"><img src=\"https://avatars.githubusercontent.com/u/3210764?v=4?s=100\" width=\"100px;\" alt=\"Fotis Papadogeorgopoulos\"/><br /><sub><b>Fotis Papadogeorgopoulos</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=fpapado\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=fpapado\" title=\"Documentation\">📖</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=fpapado\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jakeboone02\"><img src=\"https://avatars.githubusercontent.com/u/366438?v=4?s=100\" width=\"100px;\" alt=\"Jake Boone\"/><br /><sub><b>Jake Boone</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=jakeboone02\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=jakeboone02\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://www.stekoe.de\"><img src=\"https://avatars.githubusercontent.com/u/1809221?v=4?s=100\" width=\"100px;\" alt=\"Stephan Köninger\"/><br /><sub><b>Stephan Köninger</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3ASteKoe\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=SteKoe\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/kryops\"><img src=\"https://avatars.githubusercontent.com/u/1042594?v=4?s=100\" width=\"100px;\" alt=\"Michael Manzinger\"/><br /><sub><b>Michael Manzinger</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Akryops\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=kryops\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=kryops\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Dennis273\"><img src=\"https://avatars.githubusercontent.com/u/19815164?v=4?s=100\" width=\"100px;\" alt=\"Dennis Chen\"/><br /><sub><b>Dennis Chen</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=Dennis273\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/tonyhallett\"><img src=\"https://avatars.githubusercontent.com/u/11292998?v=4?s=100\" width=\"100px;\" alt=\"Tony Hallett\"/><br /><sub><b>Tony Hallett</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Atonyhallett\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ddolcimascolo\"><img src=\"https://avatars.githubusercontent.com/u/5468291?v=4?s=100\" width=\"100px;\" alt=\"David DOLCIMASCOLO\"/><br /><sub><b>David DOLCIMASCOLO</b></sub></a><br /><a href=\"#maintenance-ddolcimascolo\" title=\"Maintenance\">🚧</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/aleks-elkin\"><img src=\"https://avatars.githubusercontent.com/u/55530374?v=4?s=100\" width=\"100px;\" alt=\"Aleksandr Elkin\"/><br /><sub><b>Aleksandr Elkin</b></sub></a><br /><a href=\"#maintenance-aleks-elkin\" title=\"Maintenance\">🚧</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.vorant94.io/\"><img src=\"https://avatars.githubusercontent.com/u/9719319?v=4?s=100\" width=\"100px;\" alt=\"Mordechai Dror\"/><br /><sub><b>Mordechai Dror</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=vorant94\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://www.waynevanson.com\"><img src=\"https://avatars.githubusercontent.com/u/29592214?v=4?s=100\" width=\"100px;\" alt=\"Wayne Van Son\"/><br /><sub><b>Wayne Van Son</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=waynevanson\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=waynevanson\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/idanen\"><img src=\"https://avatars.githubusercontent.com/u/1687893?v=4?s=100\" width=\"100px;\" alt=\"Idan Entin\"/><br /><sub><b>Idan Entin</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=idanen\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=idanen\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mibcadet\"><img src=\"https://avatars.githubusercontent.com/u/925500?v=4?s=100\" width=\"100px;\" alt=\"mibcadet\"/><br /><sub><b>mibcadet</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=mibcadet\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://silviuaavram.com\"><img src=\"https://avatars.githubusercontent.com/u/11275392?v=4?s=100\" width=\"100px;\" alt=\"Silviu Alexandru Avram\"/><br /><sub><b>Silviu Alexandru Avram</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=silviuaavram\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/commits?author=silviuaavram\" title=\"Tests\">⚠️</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/G-Rath\"><img src=\"https://avatars.githubusercontent.com/u/3151613?v=4?s=100\" width=\"100px;\" alt=\"Gareth Jones\"/><br /><sub><b>Gareth Jones</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=G-Rath\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://billyjanitsch.com\"><img src=\"https://avatars.githubusercontent.com/u/1158733?v=4?s=100\" width=\"100px;\" alt=\"Billy Janitsch\"/><br /><sub><b>Billy Janitsch</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3Abillyjanitsch\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://xyynext.com\"><img src=\"https://avatars.githubusercontent.com/u/26314308?v=4?s=100\" width=\"100px;\" alt=\"InfiniteXyy\"/><br /><sub><b>InfiniteXyy</b></sub></a><br /><a href=\"https://github.com/testing-library/jest-dom/commits?author=InfiniteXyy\" title=\"Code\">💻</a> <a href=\"https://github.com/testing-library/jest-dom/issues?q=author%3AInfiniteXyy\" title=\"Bug reports\">🐛</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n## LICENSE\n\nMIT\n\n<!-- prettier-ignore-start -->\n[jest]: https://facebook.github.io/jest/\n[dom-testing-library]: https://github.com/testing-library/dom-testing-library\n[react-testing-library]:\n  https://github.com/testing-library/react-testing-library\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/github/workflow/status/testing-library/jest-dom/validate?logo=github&style=flat-square\n[build]: https://github.com/testing-library/jest-dom/actions?query=workflow%3Avalidate\n[coverage-badge]: \n  https://img.shields.io/codecov/c/github/testing-library/jest-dom.svg?style=flat-square\n[coverage]: https://codecov.io/github/testing-library/jest-dom\n[version-badge]:\n https://img.shields.io/npm/v/@testing-library/jest-dom.svg?style=flat-square\n[package]: https://www.npmjs.com/package/@testing-library/jest-dom\n[downloads-badge]: \n  https://img.shields.io/npm/dm/@testing-library/jest-dom.svg?style=flat-square\n[npmtrends]: http://www.npmtrends.com/@testing-library/jest-dom\n[license-badge]: \n  https://img.shields.io/npm/l/@testing-library/jest-dom.svg?style=flat-square\n[license]: https://github.com/testing-library/jest-dom/blob/main/LICENSE\n[prs-badge]: \n  https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[coc-badge]: \n  https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: \n  https://github.com/testing-library/jest-dom/blob/main/other/CODE_OF_CONDUCT.md\n[github-watch-badge]:\n  https://img.shields.io/github/watchers/testing-library/jest-dom.svg?style=social\n[github-watch]: https://github.com/testing-library/jest-dom/watchers\n[github-star-badge]:\n  https://img.shields.io/github/stars/testing-library/jest-dom.svg?style=social\n[github-star]: https://github.com/testing-library/jest-dom/stargazers\n[twitter]:\n  https://twitter.com/intent/tweet?text=Check%20out%20jest-dom%20by%20%40gnapse%20https%3A%2F%2Fgithub.com%2Ftesting-library%2Fjest-dom%20%F0%9F%91%8D\n[twitter-badge]:\n  https://img.shields.io/twitter/url/https/github.com/testing-library/jest-dom.svg?style=social\n[emojis]: https://github.com/all-contributors/all-contributors#emoji-key\n[all-contributors]: https://github.com/all-contributors/all-contributors\n[all-contributors-badge]: \n  https://img.shields.io/github/all-contributors/testing-library/jest-dom?color=orange&style=flat-square\n[guiding-principle]: https://testing-library.com/docs/guiding-principles\n[discord-badge]: https://img.shields.io/discord/723559267868737556.svg?color=7389D8&labelColor=6A7EC2&logo=discord&logoColor=ffffff&style=flat-square\n[discord]: https://discord.gg/testing-library\n<!-- prettier-ignore-end -->\n"
        },
        {
          "name": "jest-globals.d.ts",
          "type": "blob",
          "size": 0.0478515625,
          "content": "/// <reference path=\"types/jest-globals.d.ts\" />\n"
        },
        {
          "name": "jest-globals.js",
          "type": "blob",
          "size": 0.119140625,
          "content": "const globals = require('@jest/globals')\nconst extensions = require('./dist/matchers')\n\nglobals.expect.extend(extensions)\n"
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 0.2890625,
          "content": "const config = require('kcd-scripts/jest')\n\nmodule.exports = {\n  ...config,\n  watchPlugins: [\n    ...config.watchPlugins,\n    require.resolve('jest-watch-select-projects'),\n  ],\n  projects: [\n    require.resolve('./tests/jest.config.dom'),\n    require.resolve('./tests/jest.config.node'),\n  ],\n}\n"
        },
        {
          "name": "matchers.d.ts",
          "type": "blob",
          "size": 0.0625,
          "content": "import * as matchers from './types/matchers'\n\nexport = matchers\n"
        },
        {
          "name": "matchers.js",
          "type": "blob",
          "size": 0.068359375,
          "content": "const matchers = require('./dist/matchers')\nmodule.exports = matchers\n"
        },
        {
          "name": "other",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.8564453125,
          "content": "{\n  \"name\": \"@testing-library/jest-dom\",\n  \"version\": \"0.0.0-semantically-released\",\n  \"description\": \"Custom jest matchers to test the state of the DOM\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.mjs\",\n  \"exports\": {\n    \".\": {\n      \"require\": {\n        \"types\": \"./types/index.d.ts\",\n        \"default\": \"./dist/index.js\"\n      },\n      \"import\": {\n        \"types\": \"./types/index.d.ts\",\n        \"default\": \"./dist/index.mjs\"\n      }\n    },\n    \"./jest-globals\": {\n      \"require\": {\n        \"types\": \"./types/jest-globals.d.ts\",\n        \"default\": \"./dist/jest-globals.js\"\n      },\n      \"import\": {\n        \"types\": \"./types/jest-globals.d.ts\",\n        \"default\": \"./dist/jest-globals.mjs\"\n      }\n    },\n    \"./matchers\": {\n      \"require\": {\n        \"types\": \"./types/matchers-standalone.d.ts\",\n        \"default\": \"./dist/matchers.js\"\n      },\n      \"import\": {\n        \"types\": \"./types/matchers-standalone.d.ts\",\n        \"default\": \"./dist/matchers.mjs\"\n      }\n    },\n    \"./vitest\": {\n      \"require\": {\n        \"types\": \"./types/vitest.d.ts\",\n        \"default\": \"./dist/vitest.js\"\n      },\n      \"import\": {\n        \"types\": \"./types/vitest.d.ts\",\n        \"default\": \"./dist/vitest.mjs\"\n      }\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"types\": \"types/index.d.ts\",\n  \"engines\": {\n    \"node\": \">=14\",\n    \"npm\": \">=6\",\n    \"yarn\": \">=1\"\n  },\n  \"scripts\": {\n    \"build\": \"rollup -c\",\n    \"format\": \"kcd-scripts format\",\n    \"lint\": \"kcd-scripts lint\",\n    \"setup\": \"npm install && npm run validate -s\",\n    \"test\": \"kcd-scripts test\",\n    \"test:update\": \"npm test -- --updateSnapshot --coverage\",\n    \"test:types\": \"tsc -p types/__tests__/jest && tsc -p types/__tests__/jest-globals && tsc -p types/__tests__/vitest && tsc -p types/__tests__/bun\",\n    \"validate\": \"kcd-scripts validate && npm run test:types\"\n  },\n  \"files\": [\n    \"dist\",\n    \"types\",\n    \"*.d.ts\",\n    \"jest-globals.js\",\n    \"matchers.js\",\n    \"vitest.js\"\n  ],\n  \"keywords\": [\n    \"testing\",\n    \"dom\",\n    \"jest\",\n    \"jsdom\"\n  ],\n  \"author\": \"Ernesto Garcia <gnapse@gmail.com> (http://gnapse.github.io)\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@adobe/css-tools\": \"^4.4.0\",\n    \"aria-query\": \"^5.0.0\",\n    \"chalk\": \"^3.0.0\",\n    \"css.escape\": \"^1.5.1\",\n    \"dom-accessibility-api\": \"^0.6.3\",\n    \"lodash\": \"^4.17.21\",\n    \"redent\": \"^3.0.0\"\n  },\n  \"devDependencies\": {\n    \"@jest/globals\": \"^29.6.2\",\n    \"@rollup/plugin-commonjs\": \"^25.0.4\",\n    \"@types/bun\": \"latest\",\n    \"@types/web\": \"latest\",\n    \"expect\": \"^29.6.2\",\n    \"jest-environment-jsdom-sixteen\": \"^1.0.3\",\n    \"jest-watch-select-projects\": \"^2.0.0\",\n    \"jsdom\": \"^16.2.1\",\n    \"kcd-scripts\": \"^14.0.0\",\n    \"pretty-format\": \"^25.1.0\",\n    \"rollup\": \"^3.28.1\",\n    \"rollup-plugin-delete\": \"^2.0.0\",\n    \"typescript\": \"^5.1.6\",\n    \"vitest\": \"^0.34.1\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"./node_modules/kcd-scripts/eslint.js\",\n    \"parserOptions\": {\n      \"sourceType\": \"module\",\n      \"ecmaVersion\": 2020\n    },\n    \"rules\": {\n      \"no-invalid-this\": \"off\"\n    },\n    \"overrides\": [\n      {\n        \"files\": [\n          \"src/__tests__/*.js\"\n        ],\n        \"rules\": {\n          \"max-lines-per-function\": \"off\"\n        }\n      },\n      {\n        \"files\": [\n          \"**/*.d.ts\"\n        ],\n        \"rules\": {\n          \"@typescript-eslint/no-empty-interface\": \"off\",\n          \"@typescript-eslint/no-explicit-any\": \"off\",\n          \"@typescript-eslint/no-invalid-void-type\": \"off\",\n          \"@typescript-eslint/no-unused-vars\": \"off\",\n          \"@typescript-eslint/triple-slash-reference\": \"off\"\n        }\n      }\n    ]\n  },\n  \"eslintIgnore\": [\n    \"node_modules\",\n    \"coverage\",\n    \"dist\",\n    \"types/__tests__\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/testing-library/jest-dom\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/testing-library/jest-dom/issues\"\n  },\n  \"homepage\": \"https://github.com/testing-library/jest-dom#readme\"\n}\n"
        },
        {
          "name": "rollup.config.js",
          "type": "blob",
          "size": 0.6962890625,
          "content": "const del = require('rollup-plugin-delete')\nconst commonjs = require('@rollup/plugin-commonjs')\n\nconst entries = [\n  './src/index.js',\n  './src/jest-globals.js',\n  './src/matchers.js',\n  './src/vitest.js',\n]\n\nmodule.exports = [\n  {\n    input: entries,\n    output: [\n      {\n        dir: 'dist',\n        entryFileNames: '[name].mjs',\n        chunkFileNames: '[name]-[hash].mjs',\n        format: 'esm',\n      },\n      {\n        dir: 'dist',\n        entryFileNames: '[name].js',\n        chunkFileNames: '[name]-[hash].js',\n        format: 'cjs',\n      },\n    ],\n    external: id =>\n      !id.startsWith('\\0') && !id.startsWith('.') && !id.startsWith('/'),\n    plugins: [del({targets: 'dist/*'}), commonjs()],\n  },\n]\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.16015625,
          "content": "{\n  \"compilerOptions\": {\n    \"noEmit\": true,\n    \"strict\": true,\n    \"skipLibCheck\": true\n  },\n  \"include\": [\"*.d.ts\", \"types\"],\n  \"exclude\": [\"types/__tests__\"]\n}\n"
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "vitest.d.ts",
          "type": "blob",
          "size": 0.0419921875,
          "content": "/// <reference path=\"types/vitest.d.ts\" />\n"
        },
        {
          "name": "vitest.js",
          "type": "blob",
          "size": 0.1005859375,
          "content": "import {expect} from 'vitest'\nimport * as extensions from './dist/matchers'\n\nexpect.extend(extensions)\n"
        }
      ]
    }
  ]
}