{
  "metadata": {
    "timestamp": 1736562159141,
    "page": 973,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nkrode/RedisLive",
      "stars": 3070,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.31640625,
          "content": "*.py[co]\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\n\n.DS_Store\n\n*.sublime-workspace\n*.sublime-project\nsrc/redis-live.conf\n\n\n# Vim\n*.sw[po]\nvenv\n"
        },
        {
          "name": "MIT-LICENSE.txt",
          "type": "blob",
          "size": 1.0419921875,
          "content": "Copyright (c) 2012 Nitin Kumar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to \ndo so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in \nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN \nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.6513671875,
          "content": "RedisLive\n---------\noriginal project and loading address: https://github.com/nkrode/RedisLive\n\nVisualize your redis instances, analyze query patterns and spikes.\n\n![Redis Live](https://github.com/kumarnitin/RedisLive/blob/master/design/redis-live.png?raw=true \"Redis Live\")\n\nSetup Instructions\n------------------\n#### Installation\n\nInstall Dependencies\n\n+ [tornado](https://github.com/facebook/tornado) `pip install tornado`\n+ [redis.py](https://github.com/andymccurdy/redis-py) `pip install redis`\n+ [python-dateutil](http://labix.org/python-dateutil) `pip install python-dateutil`\n\nYou'll also need argparse if you're running Python < 2.7:\n\n+ [argparse](http://code.google.com/p/argparse/) `pip install argparse`\n\n\nGet RedisLive\n\n+ Clone the repo `git clone https://github.com/kumarnitin/RedisLive.git` , or [download the latest release](https://github.com/kumarnitin/RedisLive/zipball/master)\n\n#### Configuration\n\n+ edit redis-live.conf :\n+ update the value of the key `RedisServers` to the redis instances you want to monitor. You can monitor multiple instances by appending more values to the RedisServers list.\n+ update the value of the key `RedisStatsServer` to the redis instance you will use to store RedisLive data (this redis instance is different from the redis instances you are monitoring).\n+ passwords can be added as an optional parameter for any redis instance\n\nif you don't have a spare redis instance to use to store Redis Live data, then you can configure to use sqlite by changing `\"DataStoreType\" : \"sqlite\"`\n\n#### Start RedisLive\n\n+ start the monitoring script `./redis-monitor.py --duration=120` duration is in seconds (see caveat)\n+ start the webserver `./redis-live.py`\n+ RedisLive is now running @ `http://localhost:8888/index.html`\n\n\n#### Caveat on monitoring redis\n\nCurrently the only hook into monitoring a redis instance is Redis [MONITOR](http://redis.io/commands/monitor) command, which streams back every command processed and reduces the throughput of the redis instance. It is recommended to run redis-monitor with --duration suitable for your redis deployment and scheduling it to run periodically as a cron job.\n\n\nAuthors\n-------\n\n**Nitin Kumar**\n\n+ http://twitter.com/nkrode\n\nContributors\n------------\n+ [splee](https://github.com/splee) (Lee McFadden)\n+ [bialecki](https://github.com/bialecki) (Andrew Bialecki)\n+ [reustle](https://github.com/reustle) (Shane Reustle)\n+ [markdube](https://github.com/markdube) (Mark Dube)\n+ [skreuzer](https://github.com/skreuzer) (Steven Kreuzer)\n+ [snikch](https://github.com/snikch) (Mal Curtis)\n+ [quiver](https://github.com/quiver) (George)\n\nLicense\n-------\nRedisLive is released under the MIT license:\n+ www.opensource.org/licenses/MIT\n"
        },
        {
          "name": "design",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.056640625,
          "content": "argparse==1.2.1\npython-dateutil==1.5\nredis\ntornado==2.1.1\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}