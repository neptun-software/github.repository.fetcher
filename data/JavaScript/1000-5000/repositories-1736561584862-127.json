{
  "metadata": {
    "timestamp": 1736561584862,
    "page": 127,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "simplefocus/FlowType.JS",
      "stars": 4608,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0830078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013-2014, Simple Focus [http://simplefocus.com]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1259765625,
          "content": "> # Update: 07/28/2021 #\n> \n> The functionality of the plugin can be implemented using plain css these days.\n> \n> [https://css-tricks.com/snippets/css/fluid-typography/](https://css-tricks.com/snippets/css/fluid-typography/)\n\n# FlowType.JS #\n\nResponsive web typography at its finest: font-size ~~and line-height~~ based on element width.\n\nCheck out the [demo site](http://simplefocus.com/flowtype).\n\n## What does FlowType.JS do? ##\n\nIdeally, the most legible typography contains [between 45 and 75 characters per line](http://webtypography.net/2.1.2). This is difficult to accomplish for all screen widths with only CSS media-queries. FlowType.JS eases this difficulty by changing the font-size ~~and line-height~~ based on a specific element's width. This allows for a perfect character count per line at any screen width.\n\n## Options ##\n\n### Thresholds ###\n\nSet minimum and maximum width thresholds to control the FlowType.JS magic within specific element widths.\n\nIn this example, FlowType.JS will stop resizing text once the element width becomes smaller than 500px or larger than 1200px.\n\n```javascript\n$('body').flowtype({\n   minimum : 500,\n   maximum : 1200\n});\n```\n\nSet minimum and maximum font-size thresholds to control the FlowType.JS magic within specific font sizes.\n\nIn this example, FlowType.JS will stop resizing text once the font-size becomes smaller than 12px or larger than 40px.\n\n```javascript\n$('body').flowtype({\n   minFont : 12,\n   maxFont : 40\n});\n```\n\n### Font-size ###\n\nSet your own font-size using the `fontRatio` variable. When using `fontRatio`, increase the value to make the font smaller (and vice versa).\n\n_Note:_ Because each font is different, you will need to \"tweak\" `fontSize` and \"eye ball\" your final product to make sure that your character count is within the recommended range.\n\n~~Line-height (`lineRatio`) is set based on the `fontRatio` size, and defaults to 1.45 (the recommended line-height for maximum legibility).~~ See *line-height* below.\n\n```javascript\n$('body').flowtype({\n   fontRatio : 30\n});\n```\n\n\n### Line-height ###\n\nIn v1.0 of FlowType, we made the plugin set a specific line-height in pixels. We received many statements that setting a specific line-height is very dangerous. So, what did we do? We removed support for line-height in v1.1.\n\nWhat do I do now? It's quite simple: use unitless line-height in your CSS. It will automatically make changes based on the `font size`. Here's an example of what we suggest for `line-height`:\n\n```css\nline-height: 1.45;\n```\n\n\n## Getting Started ##\n\n### Step 1: Install FlowType.JS ###\n\nTo use FlowType, you'll need to make sure both the jQuery and FlowType.JS scripts are included.\n\n#####Download FlowType.JS#####\n- [Download the latest release](https://github.com/simplefocus/FlowType.JS/archive/v1.1.0.zip).\n- Clone the repo: `git clone https://github.com/simplefocus/FlowType.JS.git`.\n- Install with [Bower](http://bower.io): `bower install Flowtype.js`.\n\n#####Include jQuery and FlowType.JS scripts#####\n```html\n<script src=\"//code.jquery.com/jquery-latest.min.js\"></script>\n<script src=\"flowtype.js\"></script>\n```\n\n### Step 2: Set Typography Base ###\n\nPrepare for FlowType.JS by making sure that the typography is flexible. Start with this CSS and make changes as necessary:\n\n```css\nbody {\n   font-size: 18px;\n}\n\nh1,h2,h3,h4,h5,h6,p {\n   line-height: 1.45;\n}\n\nh1 { font-size: 4em; }\nh2 { font-size: 3em; }\nh3 { etc...\n```\n\n_Note:_ Setting a specific font-size in your CSS file will make sure that your website remains accessible in case your viewer has JavaScript disabled. These numbers will be overridden as FlowType.JS updates the `font-size` number inline.\n\n### Step 3: Call FlowType.JS ###\n\nTo begin the magic, simply call FlowType.JS before the close of your `body` tag:\n\n```javascript\n$('body').flowtype();\n```\n\n### Step 4: Make Changes ###\n\nYou will most likely want to change the default settings. To do so, simply include these options in your code and tweak away:\n\n```javascript\n$('body').flowtype({\n   minimum   : 500,\n   maximum   : 1200,\n   minFont   : 12,\n   maxFont   : 40,\n   fontRatio : 30\n});\n```\n_Note:_ When using FlowType.JS, it will only perform it's magic on the element and child elements that are specified in the closing document's call. For example, if you have `<p>` inside of an `<article>` and you apply FlowType.JS to `<p>`, it will only update `<p>` and not `<article>`. But, if you apply FlowType.JS to `<article>`, the entire contents including `<p>` will be updated. We believe that this can be used to your advantage. So, tweak and change as you feel necessary:\n\n```javascript\n$('body').flowtype({\n   minimum   : 500,\n   maximum   : 1200,\n   minFont   : 12,\n   maxFont   : 40,\n   fontRatio : 30\n}),\n$('article').flowtype({\n   fontRatio : 36\n}),\n$('.featured-article').flowtype({\n   minFont   : 12,\n   fontRatio : 20\n}),\n$('.side-stories').flowtype({\n   minFont   : 16,\n   fontRatio : 30\n});\n```\n\n## Brought to you by... ##\n\nThis wonderful piece of magic has been brought to you by the team at [Simple Focus](http://simplefocus.com). Follow Simple Focus on Twitter: [@simplefocus](http://twitter.com/simplefocus).\n\nFlowType.JS is licensed under the MIT License. See the LICENSE.txt file for copy permission.\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.1513671875,
          "content": "{\n    \"name\": \"Flowtype.js\",\n    \"version\": \"1.1.0\",\n    \"main\": [\"flowtype.js\"],\n    \"ignore\": [],\n    \"dependencies\": {\n      \"jquery\": \"latest\"\n    }\n}\n"
        },
        {
          "name": "flowtype.js",
          "type": "blob",
          "size": 1.4267578125,
          "content": "/*\n* FlowType.JS v1.1\n* Copyright 2013-2014, Simple Focus http://simplefocus.com/\n*\n* FlowType.JS by Simple Focus (http://simplefocus.com/)\n* is licensed under the MIT License. Read a copy of the\n* license in the LICENSE.txt file or at\n* http://choosealicense.com/licenses/mit\n*\n* Thanks to Giovanni Difeterici (http://www.gdifeterici.com/)\n*/\n\n(function($) {\n   $.fn.flowtype = function(options) {\n\n// Establish default settings/variables\n// ====================================\n      var settings = $.extend({\n         maximum   : 9999,\n         minimum   : 1,\n         maxFont   : 9999,\n         minFont   : 1,\n         fontRatio : 35\n      }, options),\n\n// Do the magic math\n// =================\n      changes = function(el) {\n         var $el = $(el),\n            elw = $el.width(),\n            width = elw > settings.maximum ? settings.maximum : elw < settings.minimum ? settings.minimum : elw,\n            fontBase = width / settings.fontRatio,\n            fontSize = fontBase > settings.maxFont ? settings.maxFont : fontBase < settings.minFont ? settings.minFont : fontBase;\n         $el.css('font-size', fontSize + 'px');\n      };\n\n// Make the magic visible\n// ======================\n      return this.each(function() {\n      // Context for resize callback\n         var that = this;\n      // Make changes upon resize\n         $(window).resize(function(){changes(that);});\n      // Set changes on load\n         changes(this);\n      });\n   };\n}(jQuery));"
        }
      ]
    }
  ]
}