{
  "metadata": {
    "timestamp": 1736561673870,
    "page": 260,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "marcj/css-element-queries",
      "stars": 4267,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.013671875,
          "content": "node_modules/\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.01171875,
          "content": ".idea\ntests\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0341796875,
          "content": "Copyright (c) 2013 Marc J. Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.4140625,
          "content": "# CSS Element Queries\n\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/marcj/css-element-queries?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nElement Queries is a polyfill adding support for element based media-queries to all new browsers (incl. IE7+).\nIt allows not only to define media-queries based on window-size but also adds 'media-queries' functionality depending on element (any selector supported)\nsize while not causing performance lags due to event based implementation.\n\nIt's a proof-of-concept event-based CSS element dimension query with valid CSS selector syntax.\n\nFeatures:\n\n - no performance issues since it listens only on size changes of elements that have element query rules defined through css. Other element query polifills only listen on `window.onresize` which causes performance issues and allows only to detect changes via window.resize event and not inside layout changes like css3 animation, :hover, DOM changes etc.\n - no interval/timeout detection. Truly event-based through integrated ResizeSensor class.\n - automatically discovers new DOM elements. No need to call javascript manually.\n - no CSS modifications. Valid CSS Syntax\n - all CSS selectors available. Uses regular attribute selector. No need to write rules in HTML/JS.\n - supports and tested in webkit, gecko and IE(10+)\n - `min-width`, `min-height`, `max-width` and `max-height` are supported so far\n - works with any layout modifications: HTML (innerHTML etc), inline styles, DOM mutation, CSS3 transitions, fluid layout changes (also percent changes), pseudo classes (:hover etc.), window resizes and more\n - no Javascript-Framework dependency (works with jQuery, Mootools, etc.)\n - Works beautiful for responsive images without FOUC\n\nMore demos and information: http://marcj.github.io/css-element-queries/\n\n## Examples\n\n### Element Query\n\n```css\n.widget-name h2 {\n    font-size: 12px;\n}\n\n.widget-name[min-width~=\"400px\"] h2 {\n    font-size: 18px;\n}\n\n.widget-name[min-width~=\"600px\"] h2 {\n    padding: 55px;\n    text-align: center;\n    font-size: 24px;\n}\n\n.widget-name[min-width~=\"700px\"] h2 {\n    font-size: 34px;\n    color: red;\n}\n```\n\nAs you can see we use the `~=` [attribute selector](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors).\nSince this css-element-queries polyfill adds new element attributes on the DOM element\n(`<div class=\"widget-name\" min-width=\"400px 700px\"></div>`) depending on your actual CSS and element's dimension,\nyou should always use this attribute selector (especially if you have several element query rules on the same element).\n\n```html\n<div class=\"widget-name\">\n   <h2>Element responsiveness FTW!</h2>\n</div>\n```\n\n### Responsive image\n\n```html\n    <div data-responsive-image>\n        <img data-src=\"http://placehold.it/350x150\"/>\n        <img min-width=\"350\" data-src=\"http://placehold.it/700x300\"/>\n        <img min-width=\"700\" data-src=\"http://placehold.it/1400x600\"/>\n    </div>\n```\n\nInclude the javascript files at the bottom and you're good to go. No custom javascript calls needed.\n\n```html\n<script src=\"src/ResizeSensor.js\"></script>\n<script src=\"src/ElementQueries.js\"></script>\n```\n\n## See it in action:\n\nHere live http://marcj.github.io/css-element-queries/.\n\n![Demo](http://marcj.github.io/css-element-queries/images/css-element-queries-demo.gif)\n\n\n## Module Loader\n\nIf you're using a module loader you need to trigger the event listening or initialization yourself:\n\n```javascript\nvar ElementQueries = require('css-element-queries/src/ElementQueries');\n\n //attaches to DOMLoadContent\nElementQueries.listen();\n\n//or if you want to trigger it yourself.\n// Parse all available CSS and attach ResizeSensor to those elements which have rules attached\n// (make sure this is called after 'load' event, because CSS files are not ready when domReady is fired.\nElementQueries.init();\n```\n\n## Issues\n\n - So far does not work on `img` and other elements that can't contain other elements. Wrapping with a `div` works fine though (See demo).\n - Adds additional hidden elements into selected target element and forces target element to be relative or absolute.\n - Local stylesheets do not work (using `file://` protocol).\n - If you have rules on an element that has a css animation, also add `element-queries`. E.g. `.widget-name { animation: 2sec my-animation, 1s element-queries;}`. We use this to detect new added DOM elements automatically.\n\n## License\n\nMIT license. Copyright [Marc J. Schmidt](https://twitter.com/MarcJSchmidt).\n"
        },
        {
          "name": "css-element-queries.d.ts",
          "type": "blob",
          "size": 0.1298828125,
          "content": "export { ResizeSensor, ResizeSensorCallback, Size } from \"./src/ResizeSensor\";\nexport { ElementQueries } from './src/ElementQueries';"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.1201171875,
          "content": "module.exports = {\n    ResizeSensor: require('./src/ResizeSensor'),\n    ElementQueries: require('./src/ElementQueries')\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.7255859375,
          "content": "{\n  \"name\": \"css-element-queries\",\n  \"version\": \"1.2.3\",\n  \"description\": \"CSS-Element-Queries Polyfill. Proof-of-concept for high-speed element dimension/media queries in valid css.\",\n  \"main\": \"index.js\",\n  \"typings\": \"css-element-queries.d.ts\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:marcj/css-element-queries.git\"\n  },\n  \"author\": \"Marc J. Schmidt\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/marcj/css-element-queries/issues\"\n  },\n  \"homepage\": \"https://github.com/marcj/css-element-queries\",\n  \"devDependencies\": {\n    \"grunt\": \"^0.4.5\",\n    \"grunt-bump\": \"^0.3.1\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.1728515625,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"downlevelIteration\": true,\n    \"lib\" : [\"dom\",\"es6\",\"dom.iterable\",\"scripthost\", \"es2015.iterable\", \"es2015.collection\"]\n  }\n}"
        }
      ]
    }
  ]
}